command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3656960	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_omf_omf.c								
ANR	3656961	Function	is_valid_omf_type	3:0:18:743							
ANR	3656962	FunctionDef	is_valid_omf_type (ut8 type)		3656961	0					
ANR	3656963	CompoundStatement		3:40:58:743	3656961	0					
ANR	3656964	IdentifierDeclStatement	int ct = 0 ;	4:1:61:71	3656961	0	True				
ANR	3656965	IdentifierDecl	ct = 0		3656961	0					
ANR	3656966	IdentifierDeclType	int		3656961	0					
ANR	3656967	Identifier	ct		3656961	1					
ANR	3656968	AssignmentExpression	ct = 0		3656961	2		=			
ANR	3656969	Identifier	ct		3656961	0					
ANR	3656970	PrimaryExpression	0		3656961	1					
ANR	3656971	IdentifierDeclStatement	"ut8 types [ ] = { OMF_THEADR , OMF_LHEADR , OMF_COMENT , OMF_MODEND , OMF_MODEND32 , OMF_EXTDEF , OMF_PUBDEF , OMF_PUBDEF32 , OMF_LINNUM , OMF_LINNUM32 , OMF_LNAMES , OMF_LNAMES , OMF_SEGDEF , OMF_SEGDEF32 , OMF_GRPDEF , OMF_FIXUPP , OMF_FIXUPP32 , OMF_LEDATA , OMF_LEDATA32 , OMF_LIDATA , OMF_LIDATA32 , OMF_COMDEF , OMF_BAKPAT , OMF_BAKPAT32 , OMF_LEXTDEF , OMF_LPUBDEF , OMF_LPUBDEF32 , OMF_LCOMDEF , OMF_CEXTDEF , OMF_COMDAT , OMF_COMDAT32 , OMF_LINSYM , OMF_LINSYM32 , OMF_ALIAS , OMF_NBKPAT , OMF_NBKPAT32 , OMF_LLNAMES , OMF_VERNUM , OMF_VENDEXT , 0 } ;"	5:1:74:610	3656961	1	True				
ANR	3656972	IdentifierDecl	"types [ ] = { OMF_THEADR , OMF_LHEADR , OMF_COMENT , OMF_MODEND , OMF_MODEND32 , OMF_EXTDEF , OMF_PUBDEF , OMF_PUBDEF32 , OMF_LINNUM , OMF_LINNUM32 , OMF_LNAMES , OMF_LNAMES , OMF_SEGDEF , OMF_SEGDEF32 , OMF_GRPDEF , OMF_FIXUPP , OMF_FIXUPP32 , OMF_LEDATA , OMF_LEDATA32 , OMF_LIDATA , OMF_LIDATA32 , OMF_COMDEF , OMF_BAKPAT , OMF_BAKPAT32 , OMF_LEXTDEF , OMF_LPUBDEF , OMF_LPUBDEF32 , OMF_LCOMDEF , OMF_CEXTDEF , OMF_COMDAT , OMF_COMDAT32 , OMF_LINSYM , OMF_LINSYM32 , OMF_ALIAS , OMF_NBKPAT , OMF_NBKPAT32 , OMF_LLNAMES , OMF_VERNUM , OMF_VENDEXT , 0 }"		3656961	0					
ANR	3656973	IdentifierDeclType	ut8 [ ]		3656961	0					
ANR	3656974	Identifier	types		3656961	1					
ANR	3656975	AssignmentExpression	"types [ ] = { OMF_THEADR , OMF_LHEADR , OMF_COMENT , OMF_MODEND , OMF_MODEND32 , OMF_EXTDEF , OMF_PUBDEF , OMF_PUBDEF32 , OMF_LINNUM , OMF_LINNUM32 , OMF_LNAMES , OMF_LNAMES , OMF_SEGDEF , OMF_SEGDEF32 , OMF_GRPDEF , OMF_FIXUPP , OMF_FIXUPP32 , OMF_LEDATA , OMF_LEDATA32 , OMF_LIDATA , OMF_LIDATA32 , OMF_COMDEF , OMF_BAKPAT , OMF_BAKPAT32 , OMF_LEXTDEF , OMF_LPUBDEF , OMF_LPUBDEF32 , OMF_LCOMDEF , OMF_CEXTDEF , OMF_COMDAT , OMF_COMDAT32 , OMF_LINSYM , OMF_LINSYM32 , OMF_ALIAS , OMF_NBKPAT , OMF_NBKPAT32 , OMF_LLNAMES , OMF_VERNUM , OMF_VENDEXT , 0 }"		3656961	2		=			
ANR	3656976	Identifier	types		3656961	0					
ANR	3656977	InitializerList	OMF_THEADR		3656961	1					
ANR	3656978	Identifier	OMF_THEADR		3656961	0					
ANR	3656979	Identifier	OMF_LHEADR		3656961	1					
ANR	3656980	Identifier	OMF_COMENT		3656961	2					
ANR	3656981	Identifier	OMF_MODEND		3656961	3					
ANR	3656982	Identifier	OMF_MODEND32		3656961	4					
ANR	3656983	Identifier	OMF_EXTDEF		3656961	5					
ANR	3656984	Identifier	OMF_PUBDEF		3656961	6					
ANR	3656985	Identifier	OMF_PUBDEF32		3656961	7					
ANR	3656986	Identifier	OMF_LINNUM		3656961	8					
ANR	3656987	Identifier	OMF_LINNUM32		3656961	9					
ANR	3656988	Identifier	OMF_LNAMES		3656961	10					
ANR	3656989	Identifier	OMF_LNAMES		3656961	11					
ANR	3656990	Identifier	OMF_SEGDEF		3656961	12					
ANR	3656991	Identifier	OMF_SEGDEF32		3656961	13					
ANR	3656992	Identifier	OMF_GRPDEF		3656961	14					
ANR	3656993	Identifier	OMF_FIXUPP		3656961	15					
ANR	3656994	Identifier	OMF_FIXUPP32		3656961	16					
ANR	3656995	Identifier	OMF_LEDATA		3656961	17					
ANR	3656996	Identifier	OMF_LEDATA32		3656961	18					
ANR	3656997	Identifier	OMF_LIDATA		3656961	19					
ANR	3656998	Identifier	OMF_LIDATA32		3656961	20					
ANR	3656999	Identifier	OMF_COMDEF		3656961	21					
ANR	3657000	Identifier	OMF_BAKPAT		3656961	22					
ANR	3657001	Identifier	OMF_BAKPAT32		3656961	23					
ANR	3657002	Identifier	OMF_LEXTDEF		3656961	24					
ANR	3657003	Identifier	OMF_LPUBDEF		3656961	25					
ANR	3657004	Identifier	OMF_LPUBDEF32		3656961	26					
ANR	3657005	Identifier	OMF_LCOMDEF		3656961	27					
ANR	3657006	Identifier	OMF_CEXTDEF		3656961	28					
ANR	3657007	Identifier	OMF_COMDAT		3656961	29					
ANR	3657008	Identifier	OMF_COMDAT32		3656961	30					
ANR	3657009	Identifier	OMF_LINSYM		3656961	31					
ANR	3657010	Identifier	OMF_LINSYM32		3656961	32					
ANR	3657011	Identifier	OMF_ALIAS		3656961	33					
ANR	3657012	Identifier	OMF_NBKPAT		3656961	34					
ANR	3657013	Identifier	OMF_NBKPAT32		3656961	35					
ANR	3657014	Identifier	OMF_LLNAMES		3656961	36					
ANR	3657015	Identifier	OMF_VERNUM		3656961	37					
ANR	3657016	Identifier	OMF_VENDEXT		3656961	38					
ANR	3657017	PrimaryExpression	0		3656961	39					
ANR	3657018	ForStatement	for ( ; types [ ct ] ; ct ++ )		3656961	2					
ANR	3657019	Condition	types [ ct ]	16:8:620:628	3656961	0	True				
ANR	3657020	ArrayIndexing	types [ ct ]		3656961	0					
ANR	3657021	Identifier	types		3656961	0					
ANR	3657022	Identifier	ct		3656961	1					
ANR	3657023	PostIncDecOperationExpression	ct ++	16:19:631:634	3656961	1	True				
ANR	3657024	Identifier	ct		3656961	0					
ANR	3657025	IncDec	++		3656961	1					
ANR	3657026	CompoundStatement		14:25:578:578	3656961	2					
ANR	3657027	IfStatement	if ( type == types [ ct ] )		3656961	0					
ANR	3657028	Condition	type == types [ ct ]	17:6:645:661	3656961	0	True				
ANR	3657029	EqualityExpression	type == types [ ct ]		3656961	0		==			
ANR	3657030	Identifier	type		3656961	0					
ANR	3657031	ArrayIndexing	types [ ct ]		3656961	1					
ANR	3657032	Identifier	types		3656961	0					
ANR	3657033	Identifier	ct		3656961	1					
ANR	3657034	CompoundStatement		15:25:605:605	3656961	1					
ANR	3657035	ReturnStatement	return true ;	18:3:669:680	3656961	0	True				
ANR	3657036	Identifier	true		3656961	0					
ANR	3657037	ReturnStatement	return false ;	22:1:729:741	3656961	3	True				
ANR	3657038	Identifier	false		3656961	0					
ANR	3657039	ReturnType	static bool		3656961	1					
ANR	3657040	Identifier	is_valid_omf_type		3656961	2					
ANR	3657041	ParameterList	ut8 type		3656961	3					
ANR	3657042	Parameter	ut8 type	3:30:48:55	3656961	0	True				
ANR	3657043	ParameterType	ut8		3656961	0					
ANR	3657044	Identifier	type		3656961	1					
ANR	3657045	CFGEntryNode	ENTRY		3656961		True				
ANR	3657046	CFGExitNode	EXIT		3656961		True				
ANR	3657047	Symbol	OMF_LCOMDEF		3656961						
ANR	3657048	Symbol	OMF_LEDATA		3656961						
ANR	3657049	Symbol	OMF_EXTDEF		3656961						
ANR	3657050	Symbol	OMF_LINSYM32		3656961						
ANR	3657051	Symbol	OMF_LPUBDEF		3656961						
ANR	3657052	Symbol	OMF_LINNUM32		3656961						
ANR	3657053	Symbol	OMF_LNAMES		3656961						
ANR	3657054	Symbol	OMF_COMDEF		3656961						
ANR	3657055	Symbol	OMF_LIDATA		3656961						
ANR	3657056	Symbol	OMF_SEGDEF32		3656961						
ANR	3657057	Symbol	type		3656961						
ANR	3657058	Symbol	OMF_PUBDEF		3656961						
ANR	3657059	Symbol	OMF_VERNUM		3656961						
ANR	3657060	Symbol	OMF_MODEND		3656961						
ANR	3657061	Symbol	OMF_COMENT		3656961						
ANR	3657062	Symbol	OMF_VENDEXT		3656961						
ANR	3657063	Symbol	OMF_LHEADR		3656961						
ANR	3657064	Symbol	OMF_FIXUPP		3656961						
ANR	3657065	Symbol	OMF_BAKPAT		3656961						
ANR	3657066	Symbol	OMF_LINSYM		3656961						
ANR	3657067	Symbol	OMF_SEGDEF		3656961						
ANR	3657068	Symbol	OMF_LINNUM		3656961						
ANR	3657069	Symbol	OMF_PUBDEF32		3656961						
ANR	3657070	Symbol	OMF_FIXUPP32		3656961						
ANR	3657071	Symbol	OMF_COMDAT32		3656961						
ANR	3657072	Symbol	OMF_CEXTDEF		3656961						
ANR	3657073	Symbol	types		3656961						
ANR	3657074	Symbol	OMF_NBKPAT		3656961						
ANR	3657075	Symbol	OMF_GRPDEF		3656961						
ANR	3657076	Symbol	OMF_LIDATA32		3656961						
ANR	3657077	Symbol	false		3656961						
ANR	3657078	Symbol	OMF_NBKPAT32		3656961						
ANR	3657079	Symbol	ct		3656961						
ANR	3657080	Symbol	OMF_LLNAMES		3656961						
ANR	3657081	Symbol	* ct		3656961						
ANR	3657082	Symbol	OMF_BAKPAT32		3656961						
ANR	3657083	Symbol	OMF_MODEND32		3656961						
ANR	3657084	Symbol	OMF_LEDATA32		3656961						
ANR	3657085	Symbol	true		3656961						
ANR	3657086	Symbol	OMF_ALIAS		3656961						
ANR	3657087	Symbol	OMF_LPUBDEF32		3656961						
ANR	3657088	Symbol	OMF_THEADR		3656961						
ANR	3657089	Symbol	OMF_LEXTDEF		3656961						
ANR	3657090	Symbol	OMF_COMDAT		3656961						
ANR	3657091	Symbol	* types		3656961						
ANR	3657092	Function	r_bin_checksum_omf_ok	25:0:746:1373							
ANR	3657093	FunctionDef	"r_bin_checksum_omf_ok (const ut8 * buf , ut64 buf_size)"		3657092	0					
ANR	3657094	CompoundStatement		25:58:804:1373	3657092	0					
ANR	3657095	IdentifierDeclStatement	ut16 size ;	26:1:807:816	3657092	0	True				
ANR	3657096	IdentifierDecl	size		3657092	0					
ANR	3657097	IdentifierDeclType	ut16		3657092	0					
ANR	3657098	Identifier	size		3657092	1					
ANR	3657099	IdentifierDeclStatement	ut8 checksum = 0 ;	27:1:819:835	3657092	1	True				
ANR	3657100	IdentifierDecl	checksum = 0		3657092	0					
ANR	3657101	IdentifierDeclType	ut8		3657092	0					
ANR	3657102	Identifier	checksum		3657092	1					
ANR	3657103	AssignmentExpression	checksum = 0		3657092	2		=			
ANR	3657104	Identifier	checksum		3657092	0					
ANR	3657105	PrimaryExpression	0		3657092	1					
ANR	3657106	IfStatement	if ( buf_size < 3 )		3657092	2					
ANR	3657107	Condition	buf_size < 3	29:5:843:854	3657092	0	True				
ANR	3657108	RelationalExpression	buf_size < 3		3657092	0		<			
ANR	3657109	Identifier	buf_size		3657092	0					
ANR	3657110	PrimaryExpression	3		3657092	1					
ANR	3657111	CompoundStatement		5:19:52:52	3657092	1					
ANR	3657112	ExpressionStatement	"eprintf ( ""Invalid record (too short)\\n"" )"	30:2:861:901	3657092	0	True				
ANR	3657113	CallExpression	"eprintf ( ""Invalid record (too short)\\n"" )"		3657092	0					
ANR	3657114	Callee	eprintf		3657092	0					
ANR	3657115	Identifier	eprintf		3657092	0					
ANR	3657116	ArgumentList	"""Invalid record (too short)\\n"""		3657092	1					
ANR	3657117	Argument	"""Invalid record (too short)\\n"""		3657092	0					
ANR	3657118	PrimaryExpression	"""Invalid record (too short)\\n"""		3657092	0					
ANR	3657119	ReturnStatement	return false ;	31:2:905:917	3657092	1	True				
ANR	3657120	Identifier	false		3657092	0					
ANR	3657121	ExpressionStatement	size = ut8p_bw ( buf + 1 )	33:1:923:947	3657092	3	True				
ANR	3657122	AssignmentExpression	size = ut8p_bw ( buf + 1 )		3657092	0		=			
ANR	3657123	Identifier	size		3657092	0					
ANR	3657124	CallExpression	ut8p_bw ( buf + 1 )		3657092	1					
ANR	3657125	Callee	ut8p_bw		3657092	0					
ANR	3657126	Identifier	ut8p_bw		3657092	0					
ANR	3657127	ArgumentList	buf + 1		3657092	1					
ANR	3657128	Argument	buf + 1		3657092	0					
ANR	3657129	AdditiveExpression	buf + 1		3657092	0		+			
ANR	3657130	Identifier	buf		3657092	0					
ANR	3657131	PrimaryExpression	1		3657092	1					
ANR	3657132	IfStatement	if ( buf_size < size + 3 )		3657092	4					
ANR	3657133	Condition	buf_size < size + 3	34:5:954:972	3657092	0	True				
ANR	3657134	RelationalExpression	buf_size < size + 3		3657092	0		<			
ANR	3657135	Identifier	buf_size		3657092	0					
ANR	3657136	AdditiveExpression	size + 3		3657092	1		+			
ANR	3657137	Identifier	size		3657092	0					
ANR	3657138	PrimaryExpression	3		3657092	1					
ANR	3657139	CompoundStatement		10:26:170:170	3657092	1					
ANR	3657140	ExpressionStatement	"eprintf ( ""Invalid record (too short)\\n"" )"	35:2:979:1019	3657092	0	True				
ANR	3657141	CallExpression	"eprintf ( ""Invalid record (too short)\\n"" )"		3657092	0					
ANR	3657142	Callee	eprintf		3657092	0					
ANR	3657143	Identifier	eprintf		3657092	0					
ANR	3657144	ArgumentList	"""Invalid record (too short)\\n"""		3657092	1					
ANR	3657145	Argument	"""Invalid record (too short)\\n"""		3657092	0					
ANR	3657146	PrimaryExpression	"""Invalid record (too short)\\n"""		3657092	0					
ANR	3657147	ReturnStatement	return false ;	36:2:1023:1035	3657092	1	True				
ANR	3657148	Identifier	false		3657092	0					
ANR	3657149	IfStatement	if ( ! buf [ size + 2 ] )		3657092	5					
ANR	3657150	Condition	! buf [ size + 2 ]	39:5:1080:1093	3657092	0	True				
ANR	3657151	UnaryOperationExpression	! buf [ size + 2 ]		3657092	0					
ANR	3657152	UnaryOperator	!		3657092	0					
ANR	3657153	ArrayIndexing	buf [ size + 2 ]		3657092	1					
ANR	3657154	Identifier	buf		3657092	0					
ANR	3657155	AdditiveExpression	size + 2		3657092	1		+			
ANR	3657156	Identifier	size		3657092	0					
ANR	3657157	PrimaryExpression	2		3657092	1					
ANR	3657158	CompoundStatement		15:21:291:291	3657092	1					
ANR	3657159	ReturnStatement	return true ;	40:2:1100:1111	3657092	0	True				
ANR	3657160	Identifier	true		3657092	0					
ANR	3657161	ExpressionStatement	size += 3	42:1:1117:1126	3657092	6	True				
ANR	3657162	AssignmentExpression	size += 3		3657092	0		+=			
ANR	3657163	Identifier	size		3657092	0					
ANR	3657164	PrimaryExpression	3		3657092	1					
ANR	3657165	ForStatement	for ( ; size ; size -- )		3657092	7					
ANR	3657166	Condition	size	43:8:1136:1139	3657092	0	True				
ANR	3657167	Identifier	size		3657092	0					
ANR	3657168	PostIncDecOperationExpression	size --	43:14:1142:1147	3657092	1	True				
ANR	3657169	Identifier	size		3657092	0					
ANR	3657170	IncDec	--		3657092	1					
ANR	3657171	CompoundStatement		19:22:345:345	3657092	2					
ANR	3657172	IfStatement	if ( buf_size < size )		3657092	0					
ANR	3657173	Condition	buf_size < size	44:6:1158:1172	3657092	0	True				
ANR	3657174	RelationalExpression	buf_size < size		3657092	0		<			
ANR	3657175	Identifier	buf_size		3657092	0					
ANR	3657176	Identifier	size		3657092	1					
ANR	3657177	CompoundStatement		20:23:370:370	3657092	1					
ANR	3657178	ExpressionStatement	"eprintf ( ""Invalid record (too short)\\n"" )"	45:3:1180:1220	3657092	0	True				
ANR	3657179	CallExpression	"eprintf ( ""Invalid record (too short)\\n"" )"		3657092	0					
ANR	3657180	Callee	eprintf		3657092	0					
ANR	3657181	Identifier	eprintf		3657092	0					
ANR	3657182	ArgumentList	"""Invalid record (too short)\\n"""		3657092	1					
ANR	3657183	Argument	"""Invalid record (too short)\\n"""		3657092	0					
ANR	3657184	PrimaryExpression	"""Invalid record (too short)\\n"""		3657092	0					
ANR	3657185	ReturnStatement	return false ;	46:3:1225:1237	3657092	1	True				
ANR	3657186	Identifier	false		3657092	0					
ANR	3657187	ExpressionStatement	checksum += buf [ size - 1 ]	48:2:1245:1270	3657092	1	True				
ANR	3657188	AssignmentExpression	checksum += buf [ size - 1 ]		3657092	0		+=			
ANR	3657189	Identifier	checksum		3657092	0					
ANR	3657190	ArrayIndexing	buf [ size - 1 ]		3657092	1					
ANR	3657191	Identifier	buf		3657092	0					
ANR	3657192	AdditiveExpression	size - 1		3657092	1		-			
ANR	3657193	Identifier	size		3657092	0					
ANR	3657194	PrimaryExpression	1		3657092	1					
ANR	3657195	IfStatement	if ( checksum )		3657092	8					
ANR	3657196	Condition	checksum	50:5:1280:1287	3657092	0	True				
ANR	3657197	Identifier	checksum		3657092	0					
ANR	3657198	CompoundStatement		26:15:485:485	3657092	1					
ANR	3657199	ReturnStatement	return ! checksum ? true : false ;	53:1:1340:1371	3657092	9	True				
ANR	3657200	ConditionalExpression	! checksum ? true : false		3657092	0					
ANR	3657201	Condition	! checksum		3657092	0					
ANR	3657202	UnaryOperationExpression	! checksum		3657092	0					
ANR	3657203	UnaryOperator	!		3657092	0					
ANR	3657204	Identifier	checksum		3657092	1					
ANR	3657205	Identifier	true		3657092	1					
ANR	3657206	Identifier	false		3657092	2					
ANR	3657207	ReturnType	bool		3657092	1					
ANR	3657208	Identifier	r_bin_checksum_omf_ok		3657092	2					
ANR	3657209	ParameterList	"const ut8 * buf , ut64 buf_size"		3657092	3					
ANR	3657210	Parameter	const ut8 * buf	25:27:773:786	3657092	0	True				
ANR	3657211	ParameterType	const ut8 *		3657092	0					
ANR	3657212	Identifier	buf		3657092	1					
ANR	3657213	Parameter	ut64 buf_size	25:43:789:801	3657092	1	True				
ANR	3657214	ParameterType	ut64		3657092	0					
ANR	3657215	Identifier	buf_size		3657092	1					
ANR	3657216	CFGEntryNode	ENTRY		3657092		True				
ANR	3657217	CFGExitNode	EXIT		3657092		True				
ANR	3657218	Symbol	buf		3657092						
ANR	3657219	Symbol	* buf		3657092						
ANR	3657220	Symbol	* size		3657092						
ANR	3657221	Symbol	size		3657092						
ANR	3657222	Symbol	buf_size		3657092						
ANR	3657223	Symbol	checksum		3657092						
ANR	3657224	Symbol	false		3657092						
ANR	3657225	Symbol	true		3657092						
ANR	3657226	Symbol	ut8p_bw		3657092						
ANR	3657227	Function	omf_get_idx	56:0:1376:1554							
ANR	3657228	FunctionDef	"omf_get_idx (const ut8 * buf , int buf_size)"		3657227	0					
ANR	3657229	CompoundStatement		56:54:1430:1554	3657227	0					
ANR	3657230	IfStatement	if ( buf_size < 2 )		3657227	0					
ANR	3657231	Condition	buf_size < 2	57:5:1437:1448	3657227	0	True				
ANR	3657232	RelationalExpression	buf_size < 2		3657227	0		<			
ANR	3657233	Identifier	buf_size		3657227	0					
ANR	3657234	PrimaryExpression	2		3657227	1					
ANR	3657235	CompoundStatement		2:19:20:20	3657227	1					
ANR	3657236	ReturnStatement	return 0 ;	58:2:1455:1463	3657227	0	True				
ANR	3657237	PrimaryExpression	0		3657227	0					
ANR	3657238	IfStatement	if ( * buf & 0x80 )		3657227	1					
ANR	3657239	Condition	* buf & 0x80	60:5:1473:1483	3657227	0	True				
ANR	3657240	BitAndExpression	* buf & 0x80		3657227	0		&			
ANR	3657241	UnaryOperationExpression	* buf		3657227	0					
ANR	3657242	UnaryOperator	*		3657227	0					
ANR	3657243	Identifier	buf		3657227	1					
ANR	3657244	PrimaryExpression	0x80		3657227	1					
ANR	3657245	CompoundStatement		5:18:55:55	3657227	1					
ANR	3657246	ReturnStatement	return ( ut16 ) ( ( * buf & 0x7f ) * 0x100 + buf [ 1 ] ) ;	61:2:1490:1535	3657227	0	True				
ANR	3657247	CastExpression	( ut16 ) ( ( * buf & 0x7f ) * 0x100 + buf [ 1 ] )		3657227	0					
ANR	3657248	CastTarget	ut16		3657227	0					
ANR	3657249	AdditiveExpression	( * buf & 0x7f ) * 0x100 + buf [ 1 ]		3657227	1		+			
ANR	3657250	MultiplicativeExpression	( * buf & 0x7f ) * 0x100		3657227	0		*			
ANR	3657251	BitAndExpression	* buf & 0x7f		3657227	0		&			
ANR	3657252	UnaryOperationExpression	* buf		3657227	0					
ANR	3657253	UnaryOperator	*		3657227	0					
ANR	3657254	Identifier	buf		3657227	1					
ANR	3657255	PrimaryExpression	0x7f		3657227	1					
ANR	3657256	PrimaryExpression	0x100		3657227	1					
ANR	3657257	ArrayIndexing	buf [ 1 ]		3657227	1					
ANR	3657258	Identifier	buf		3657227	0					
ANR	3657259	PrimaryExpression	1		3657227	1					
ANR	3657260	ReturnStatement	return * buf ;	63:1:1541:1552	3657227	2	True				
ANR	3657261	UnaryOperationExpression	* buf		3657227	0					
ANR	3657262	UnaryOperator	*		3657227	0					
ANR	3657263	Identifier	buf		3657227	1					
ANR	3657264	ReturnType	static ut16		3657227	1					
ANR	3657265	Identifier	omf_get_idx		3657227	2					
ANR	3657266	ParameterList	"const ut8 * buf , int buf_size"		3657227	3					
ANR	3657267	Parameter	const ut8 * buf	56:24:1400:1413	3657227	0	True				
ANR	3657268	ParameterType	const ut8 *		3657227	0					
ANR	3657269	Identifier	buf		3657227	1					
ANR	3657270	Parameter	int buf_size	56:40:1416:1427	3657227	1	True				
ANR	3657271	ParameterType	int		3657227	0					
ANR	3657272	Identifier	buf_size		3657227	1					
ANR	3657273	CFGEntryNode	ENTRY		3657227		True				
ANR	3657274	CFGExitNode	EXIT		3657227		True				
ANR	3657275	Symbol	buf		3657227						
ANR	3657276	Symbol	* buf		3657227						
ANR	3657277	Symbol	buf_size		3657227						
ANR	3657278	Function	free_lname	66:0:1557:1744							
ANR	3657279	FunctionDef	free_lname (OMF_multi_datas * lname)		3657278	0					
ANR	3657280	CompoundStatement		66:47:1604:1744	3657278	0					
ANR	3657281	IdentifierDeclStatement	ut32 ct = 0 ;	67:1:1607:1618	3657278	0	True				
ANR	3657282	IdentifierDecl	ct = 0		3657278	0					
ANR	3657283	IdentifierDeclType	ut32		3657278	0					
ANR	3657284	Identifier	ct		3657278	1					
ANR	3657285	AssignmentExpression	ct = 0		3657278	2		=			
ANR	3657286	Identifier	ct		3657278	0					
ANR	3657287	PrimaryExpression	0		3657278	1					
ANR	3657288	WhileStatement	while ( ct < lname -> nb_elem )		3657278	1					
ANR	3657289	Condition	ct < lname -> nb_elem	69:8:1629:1647	3657278	0	True				
ANR	3657290	RelationalExpression	ct < lname -> nb_elem		3657278	0		<			
ANR	3657291	Identifier	ct		3657278	0					
ANR	3657292	PtrMemberAccess	lname -> nb_elem		3657278	1					
ANR	3657293	Identifier	lname		3657278	0					
ANR	3657294	Identifier	nb_elem		3657278	1					
ANR	3657295	CompoundStatement		4:29:45:45	3657278	1					
ANR	3657296	ExpressionStatement	R_FREE ( ( ( char * * ) lname -> elems ) [ ct ] )	70:2:1654:1690	3657278	0	True				
ANR	3657297	CallExpression	R_FREE ( ( ( char * * ) lname -> elems ) [ ct ] )		3657278	0					
ANR	3657298	Callee	R_FREE		3657278	0					
ANR	3657299	Identifier	R_FREE		3657278	0					
ANR	3657300	ArgumentList	( ( char * * ) lname -> elems ) [ ct ]		3657278	1					
ANR	3657301	Argument	( ( char * * ) lname -> elems ) [ ct ]		3657278	0					
ANR	3657302	ArrayIndexing	( ( char * * ) lname -> elems ) [ ct ]		3657278	0					
ANR	3657303	CastExpression	( char * * ) lname -> elems		3657278	0					
ANR	3657304	CastTarget	char * *		3657278	0					
ANR	3657305	PtrMemberAccess	lname -> elems		3657278	1					
ANR	3657306	Identifier	lname		3657278	0					
ANR	3657307	Identifier	elems		3657278	1					
ANR	3657308	Identifier	ct		3657278	1					
ANR	3657309	ExpressionStatement	ct ++	71:2:1694:1698	3657278	1	True				
ANR	3657310	PostIncDecOperationExpression	ct ++		3657278	0					
ANR	3657311	Identifier	ct		3657278	0					
ANR	3657312	IncDec	++		3657278	1					
ANR	3657313	ExpressionStatement	R_FREE ( lname -> elems )	73:1:1704:1725	3657278	2	True				
ANR	3657314	CallExpression	R_FREE ( lname -> elems )		3657278	0					
ANR	3657315	Callee	R_FREE		3657278	0					
ANR	3657316	Identifier	R_FREE		3657278	0					
ANR	3657317	ArgumentList	lname -> elems		3657278	1					
ANR	3657318	Argument	lname -> elems		3657278	0					
ANR	3657319	PtrMemberAccess	lname -> elems		3657278	0					
ANR	3657320	Identifier	lname		3657278	0					
ANR	3657321	Identifier	elems		3657278	1					
ANR	3657322	ExpressionStatement	R_FREE ( lname )	74:1:1728:1742	3657278	3	True				
ANR	3657323	CallExpression	R_FREE ( lname )		3657278	0					
ANR	3657324	Callee	R_FREE		3657278	0					
ANR	3657325	Identifier	R_FREE		3657278	0					
ANR	3657326	ArgumentList	lname		3657278	1					
ANR	3657327	Argument	lname		3657278	0					
ANR	3657328	Identifier	lname		3657278	0					
ANR	3657329	ReturnType	static void		3657278	1					
ANR	3657330	Identifier	free_lname		3657278	2					
ANR	3657331	ParameterList	OMF_multi_datas * lname		3657278	3					
ANR	3657332	Parameter	OMF_multi_datas * lname	66:23:1580:1601	3657278	0	True				
ANR	3657333	ParameterType	OMF_multi_datas *		3657278	0					
ANR	3657334	Identifier	lname		3657278	1					
ANR	3657335	CFGEntryNode	ENTRY		3657278		True				
ANR	3657336	CFGExitNode	EXIT		3657278		True				
ANR	3657337	Symbol	ct		3657278						
ANR	3657338	Symbol	lname -> nb_elem		3657278						
ANR	3657339	Symbol	* lname -> elems		3657278						
ANR	3657340	Symbol	lname		3657278						
ANR	3657341	Symbol	* ct		3657278						
ANR	3657342	Symbol	* lname		3657278						
ANR	3657343	Symbol	lname -> elems		3657278						
ANR	3657344	Symbol	* * lname		3657278						
ANR	3657345	Function	load_omf_lnames	77:0:1747:3073							
ANR	3657346	FunctionDef	"load_omf_lnames (OMF_record * record , const ut8 * buf , ut64 buf_size)"		3657345	0					
ANR	3657347	CompoundStatement		77:79:1826:3073	3657345	0					
ANR	3657348	IdentifierDeclStatement	ut32 tmp_size = 0 ;	78:1:1829:1846	3657345	0	True				
ANR	3657349	IdentifierDecl	tmp_size = 0		3657345	0					
ANR	3657350	IdentifierDeclType	ut32		3657345	0					
ANR	3657351	Identifier	tmp_size		3657345	1					
ANR	3657352	AssignmentExpression	tmp_size = 0		3657345	2		=			
ANR	3657353	Identifier	tmp_size		3657345	0					
ANR	3657354	PrimaryExpression	0		3657345	1					
ANR	3657355	IdentifierDeclStatement	ut32 ct_name = 0 ;	79:1:1849:1865	3657345	1	True				
ANR	3657356	IdentifierDecl	ct_name = 0		3657345	0					
ANR	3657357	IdentifierDeclType	ut32		3657345	0					
ANR	3657358	Identifier	ct_name		3657345	1					
ANR	3657359	AssignmentExpression	ct_name = 0		3657345	2		=			
ANR	3657360	Identifier	ct_name		3657345	0					
ANR	3657361	PrimaryExpression	0		3657345	1					
ANR	3657362	IdentifierDeclStatement	OMF_multi_datas * ret = NULL ;	80:1:1868:1895	3657345	2	True				
ANR	3657363	IdentifierDecl	* ret = NULL		3657345	0					
ANR	3657364	IdentifierDeclType	OMF_multi_datas *		3657345	0					
ANR	3657365	Identifier	ret		3657345	1					
ANR	3657366	AssignmentExpression	* ret = NULL		3657345	2		=			
ANR	3657367	Identifier	NULL		3657345	0					
ANR	3657368	Identifier	NULL		3657345	1					
ANR	3657369	IdentifierDeclStatement	char * * names ;	81:1:1898:1910	3657345	3	True				
ANR	3657370	IdentifierDecl	* * names		3657345	0					
ANR	3657371	IdentifierDeclType	char * *		3657345	0					
ANR	3657372	Identifier	names		3657345	1					
ANR	3657373	IfStatement	if ( ! record || ! buf )		3657345	4					
ANR	3657374	Condition	! record || ! buf	82:5:1917:1931	3657345	0	True				
ANR	3657375	OrExpression	! record || ! buf		3657345	0		||			
ANR	3657376	UnaryOperationExpression	! record		3657345	0					
ANR	3657377	UnaryOperator	!		3657345	0					
ANR	3657378	Identifier	record		3657345	1					
ANR	3657379	UnaryOperationExpression	! buf		3657345	1					
ANR	3657380	UnaryOperator	!		3657345	0					
ANR	3657381	Identifier	buf		3657345	1					
ANR	3657382	CompoundStatement		6:22:107:107	3657345	1					
ANR	3657383	ReturnStatement	return false ;	83:2:1938:1950	3657345	0	True				
ANR	3657384	Identifier	false		3657345	0					
ANR	3657385	IfStatement	if ( ! ( ret = R_NEW0 ( OMF_multi_datas ) ) )		3657345	5					
ANR	3657386	Condition	! ( ret = R_NEW0 ( OMF_multi_datas ) )	86:5:1961:1993	3657345	0	True				
ANR	3657387	UnaryOperationExpression	! ( ret = R_NEW0 ( OMF_multi_datas ) )		3657345	0					
ANR	3657388	UnaryOperator	!		3657345	0					
ANR	3657389	AssignmentExpression	ret = R_NEW0 ( OMF_multi_datas )		3657345	1		=			
ANR	3657390	Identifier	ret		3657345	0					
ANR	3657391	CallExpression	R_NEW0 ( OMF_multi_datas )		3657345	1					
ANR	3657392	Callee	R_NEW0		3657345	0					
ANR	3657393	Identifier	R_NEW0		3657345	0					
ANR	3657394	ArgumentList	OMF_multi_datas		3657345	1					
ANR	3657395	Argument	OMF_multi_datas		3657345	0					
ANR	3657396	Identifier	OMF_multi_datas		3657345	0					
ANR	3657397	CompoundStatement		10:40:169:169	3657345	1					
ANR	3657398	ReturnStatement	return false ;	87:2:2000:2012	3657345	0	True				
ANR	3657399	Identifier	false		3657345	0					
ANR	3657400	ExpressionStatement	record -> content = ret	89:1:2018:2039	3657345	6	True				
ANR	3657401	AssignmentExpression	record -> content = ret		3657345	0		=			
ANR	3657402	PtrMemberAccess	record -> content		3657345	0					
ANR	3657403	Identifier	record		3657345	0					
ANR	3657404	Identifier	content		3657345	1					
ANR	3657405	Identifier	ret		3657345	1					
ANR	3657406	WhileStatement	while ( ( int ) tmp_size < ( int ) ( record -> size - 1 ) )		3657345	7					
ANR	3657407	Condition	( int ) tmp_size < ( int ) ( record -> size - 1 )	91:8:2050:2088	3657345	0	True				
ANR	3657408	RelationalExpression	( int ) tmp_size < ( int ) ( record -> size - 1 )		3657345	0		<			
ANR	3657409	CastExpression	( int ) tmp_size		3657345	0					
ANR	3657410	CastTarget	int		3657345	0					
ANR	3657411	Identifier	tmp_size		3657345	1					
ANR	3657412	CastExpression	( int ) ( record -> size - 1 )		3657345	1					
ANR	3657413	CastTarget	int		3657345	0					
ANR	3657414	AdditiveExpression	record -> size - 1		3657345	1		-			
ANR	3657415	PtrMemberAccess	record -> size		3657345	0					
ANR	3657416	Identifier	record		3657345	0					
ANR	3657417	Identifier	size		3657345	1					
ANR	3657418	PrimaryExpression	1		3657345	1					
ANR	3657419	CompoundStatement		16:2:268:276	3657345	1					
ANR	3657420	IdentifierDeclStatement	int next ;	92:2:2095:2103	3657345	0	True				
ANR	3657421	IdentifierDecl	next		3657345	0					
ANR	3657422	IdentifierDeclType	int		3657345	0					
ANR	3657423	Identifier	next		3657345	1					
ANR	3657424	ExpressionStatement	ret -> nb_elem ++	93:2:2107:2121	3657345	1	True				
ANR	3657425	PostIncDecOperationExpression	ret -> nb_elem ++		3657345	0					
ANR	3657426	PtrMemberAccess	ret -> nb_elem		3657345	0					
ANR	3657427	Identifier	ret		3657345	0					
ANR	3657428	Identifier	nb_elem		3657345	1					
ANR	3657429	IncDec	++		3657345	1					
ANR	3657430	ExpressionStatement	next = buf [ 3 + tmp_size ] + 1	94:2:2125:2153	3657345	2	True				
ANR	3657431	AssignmentExpression	next = buf [ 3 + tmp_size ] + 1		3657345	0		=			
ANR	3657432	Identifier	next		3657345	0					
ANR	3657433	AdditiveExpression	buf [ 3 + tmp_size ] + 1		3657345	1		+			
ANR	3657434	ArrayIndexing	buf [ 3 + tmp_size ]		3657345	0					
ANR	3657435	Identifier	buf		3657345	0					
ANR	3657436	AdditiveExpression	3 + tmp_size		3657345	1		+			
ANR	3657437	PrimaryExpression	3		3657345	0					
ANR	3657438	Identifier	tmp_size		3657345	1					
ANR	3657439	PrimaryExpression	1		3657345	1					
ANR	3657440	IfStatement	if ( next < 1 )		3657345	3					
ANR	3657441	Condition	next < 1	95:6:2161:2168	3657345	0	True				
ANR	3657442	RelationalExpression	next < 1		3657345	0		<			
ANR	3657443	Identifier	next		3657345	0					
ANR	3657444	PrimaryExpression	1		3657345	1					
ANR	3657445	CompoundStatement		19:16:344:344	3657345	1					
ANR	3657446	BreakStatement	break ;	96:3:2176:2181	3657345	0	True				
ANR	3657447	ExpressionStatement	tmp_size += next	98:2:2189:2205	3657345	4	True				
ANR	3657448	AssignmentExpression	tmp_size += next		3657345	0		+=			
ANR	3657449	Identifier	tmp_size		3657345	0					
ANR	3657450	Identifier	next		3657345	1					
ANR	3657451	Statement	if	100:1:2211:2212	3657345	8	True				
ANR	3657452	Statement	(	100:4:2214:2214	3657345	9	True				
ANR	3657453	Statement	!	100:5:2215:2215	3657345	10	True				
ANR	3657454	Statement	(	100:6:2216:2216	3657345	11	True				
ANR	3657455	Statement	ret	100:7:2217:2219	3657345	12	True				
ANR	3657456	Statement	->	100:10:2220:2221	3657345	13	True				
ANR	3657457	Statement	elems	100:12:2222:2226	3657345	14	True				
ANR	3657458	Statement	=	100:18:2228:2228	3657345	15	True				
ANR	3657459	Statement	R_NEWS0	100:20:2230:2236	3657345	16	True				
ANR	3657460	Statement	(	100:28:2238:2238	3657345	17	True				
ANR	3657461	Statement	char	100:29:2239:2242	3657345	18	True				
ANR	3657462	Statement	*	100:34:2244:2244	3657345	19	True				
ANR	3657463	Statement	","	100:35:2245:2245	3657345	20	True				
ANR	3657464	Statement	ret	100:37:2247:2249	3657345	21	True				
ANR	3657465	Statement	->	100:40:2250:2251	3657345	22	True				
ANR	3657466	Statement	nb_elem	100:42:2252:2258	3657345	23	True				
ANR	3657467	Statement	+	100:50:2260:2260	3657345	24	True				
ANR	3657468	Statement	1	100:52:2262:2262	3657345	25	True				
ANR	3657469	Statement	)	100:53:2263:2263	3657345	26	True				
ANR	3657470	Statement	)	100:54:2264:2264	3657345	27	True				
ANR	3657471	Statement	)	100:55:2265:2265	3657345	28	True				
ANR	3657472	CompoundStatement		24:57:440:440	3657345	29					
ANR	3657473	ExpressionStatement	R_FREE ( ret )	101:2:2271:2283	3657345	0	True				
ANR	3657474	CallExpression	R_FREE ( ret )		3657345	0					
ANR	3657475	Callee	R_FREE		3657345	0					
ANR	3657476	Identifier	R_FREE		3657345	0					
ANR	3657477	ArgumentList	ret		3657345	1					
ANR	3657478	Argument	ret		3657345	0					
ANR	3657479	Identifier	ret		3657345	0					
ANR	3657480	ReturnStatement	return false ;	102:2:2287:2299	3657345	1	True				
ANR	3657481	Identifier	false		3657345	0					
ANR	3657482	ExpressionStatement	names = ( char * * ) ret -> elems	104:1:2305:2332	3657345	30	True				
ANR	3657483	AssignmentExpression	names = ( char * * ) ret -> elems		3657345	0		=			
ANR	3657484	Identifier	names		3657345	0					
ANR	3657485	CastExpression	( char * * ) ret -> elems		3657345	1					
ANR	3657486	CastTarget	char * *		3657345	0					
ANR	3657487	PtrMemberAccess	ret -> elems		3657345	1					
ANR	3657488	Identifier	ret		3657345	0					
ANR	3657489	Identifier	elems		3657345	1					
ANR	3657490	ExpressionStatement	tmp_size = 0	105:1:2335:2347	3657345	31	True				
ANR	3657491	AssignmentExpression	tmp_size = 0		3657345	0		=			
ANR	3657492	Identifier	tmp_size		3657345	0					
ANR	3657493	PrimaryExpression	0		3657345	1					
ANR	3657494	WhileStatement	while ( ( int ) tmp_size < ( int ) ( record -> size - 1 ) )		3657345	32					
ANR	3657495	Condition	( int ) tmp_size < ( int ) ( record -> size - 1 )	106:8:2357:2395	3657345	0	True				
ANR	3657496	RelationalExpression	( int ) tmp_size < ( int ) ( record -> size - 1 )		3657345	0		<			
ANR	3657497	CastExpression	( int ) tmp_size		3657345	0					
ANR	3657498	CastTarget	int		3657345	0					
ANR	3657499	Identifier	tmp_size		3657345	1					
ANR	3657500	CastExpression	( int ) ( record -> size - 1 )		3657345	1					
ANR	3657501	CastTarget	int		3657345	0					
ANR	3657502	AdditiveExpression	record -> size - 1		3657345	1		-			
ANR	3657503	PtrMemberAccess	record -> size		3657345	0					
ANR	3657504	Identifier	record		3657345	0					
ANR	3657505	Identifier	size		3657345	1					
ANR	3657506	PrimaryExpression	1		3657345	1					
ANR	3657507	CompoundStatement		36:2:741:768	3657345	1					
ANR	3657508	IfStatement	if ( ct_name >= ret -> nb_elem )		3657345	0					
ANR	3657509	Condition	ct_name >= ret -> nb_elem	107:6:2406:2428	3657345	0	True				
ANR	3657510	RelationalExpression	ct_name >= ret -> nb_elem		3657345	0		>=			
ANR	3657511	Identifier	ct_name		3657345	0					
ANR	3657512	PtrMemberAccess	ret -> nb_elem		3657345	1					
ANR	3657513	Identifier	ret		3657345	0					
ANR	3657514	Identifier	nb_elem		3657345	1					
ANR	3657515	CompoundStatement		31:31:604:604	3657345	1					
ANR	3657516	ExpressionStatement	"eprintf ( ""load_omf_lnames: prevent overflow\\n"" )"	108:3:2436:2483	3657345	0	True				
ANR	3657517	CallExpression	"eprintf ( ""load_omf_lnames: prevent overflow\\n"" )"		3657345	0					
ANR	3657518	Callee	eprintf		3657345	0					
ANR	3657519	Identifier	eprintf		3657345	0					
ANR	3657520	ArgumentList	"""load_omf_lnames: prevent overflow\\n"""		3657345	1					
ANR	3657521	Argument	"""load_omf_lnames: prevent overflow\\n"""		3657345	0					
ANR	3657522	PrimaryExpression	"""load_omf_lnames: prevent overflow\\n"""		3657345	0					
ANR	3657523	BreakStatement	break ;	109:3:2488:2493	3657345	1	True				
ANR	3657524	IdentifierDeclStatement	char cb = buf [ 3 + tmp_size ] ;	112:2:2568:2595	3657345	1	True				
ANR	3657525	IdentifierDecl	cb = buf [ 3 + tmp_size ]		3657345	0					
ANR	3657526	IdentifierDeclType	char		3657345	0					
ANR	3657527	Identifier	cb		3657345	1					
ANR	3657528	AssignmentExpression	cb = buf [ 3 + tmp_size ]		3657345	2		=			
ANR	3657529	Identifier	cb		3657345	0					
ANR	3657530	ArrayIndexing	buf [ 3 + tmp_size ]		3657345	1					
ANR	3657531	Identifier	buf		3657345	0					
ANR	3657532	AdditiveExpression	3 + tmp_size		3657345	1		+			
ANR	3657533	PrimaryExpression	3		3657345	0					
ANR	3657534	Identifier	tmp_size		3657345	1					
ANR	3657535	IfStatement	if ( cb < 1 )		3657345	2					
ANR	3657536	Condition	cb < 1	113:6:2603:2608	3657345	0	True				
ANR	3657537	RelationalExpression	cb < 1		3657345	0		<			
ANR	3657538	Identifier	cb		3657345	0					
ANR	3657539	PrimaryExpression	1		3657345	1					
ANR	3657540	CompoundStatement		37:14:784:784	3657345	1					
ANR	3657541	ExpressionStatement	names [ ct_name ++ ] = NULL	114:3:2616:2639	3657345	0	True				
ANR	3657542	AssignmentExpression	names [ ct_name ++ ] = NULL		3657345	0		=			
ANR	3657543	ArrayIndexing	names [ ct_name ++ ]		3657345	0					
ANR	3657544	Identifier	names		3657345	0					
ANR	3657545	PostIncDecOperationExpression	ct_name ++		3657345	1					
ANR	3657546	Identifier	ct_name		3657345	0					
ANR	3657547	IncDec	++		3657345	1					
ANR	3657548	Identifier	NULL		3657345	1					
ANR	3657549	ExpressionStatement	tmp_size ++	115:3:2644:2654	3657345	1	True				
ANR	3657550	PostIncDecOperationExpression	tmp_size ++		3657345	0					
ANR	3657551	Identifier	tmp_size		3657345	0					
ANR	3657552	IncDec	++		3657345	1					
ANR	3657553	ContinueStatement	continue ;	116:3:2659:2667	3657345	2	True				
ANR	3657554	IfStatement	if ( record -> size + 3 < tmp_size + cb )		3657345	3					
ANR	3657555	Condition	record -> size + 3 < tmp_size + cb	118:6:2679:2710	3657345	0	True				
ANR	3657556	RelationalExpression	record -> size + 3 < tmp_size + cb		3657345	0		<			
ANR	3657557	AdditiveExpression	record -> size + 3		3657345	0		+			
ANR	3657558	PtrMemberAccess	record -> size		3657345	0					
ANR	3657559	Identifier	record		3657345	0					
ANR	3657560	Identifier	size		3657345	1					
ANR	3657561	PrimaryExpression	3		3657345	1					
ANR	3657562	AdditiveExpression	tmp_size + cb		3657345	1		+			
ANR	3657563	Identifier	tmp_size		3657345	0					
ANR	3657564	Identifier	cb		3657345	1					
ANR	3657565	CompoundStatement		42:40:886:886	3657345	1					
ANR	3657566	ExpressionStatement	"eprintf ( ""Invalid Lnames record (bad size)\\n"" )"	119:3:2718:2764	3657345	0	True				
ANR	3657567	CallExpression	"eprintf ( ""Invalid Lnames record (bad size)\\n"" )"		3657345	0					
ANR	3657568	Callee	eprintf		3657345	0					
ANR	3657569	Identifier	eprintf		3657345	0					
ANR	3657570	ArgumentList	"""Invalid Lnames record (bad size)\\n"""		3657345	1					
ANR	3657571	Argument	"""Invalid Lnames record (bad size)\\n"""		3657345	0					
ANR	3657572	PrimaryExpression	"""Invalid Lnames record (bad size)\\n"""		3657345	0					
ANR	3657573	ExpressionStatement	free ( ret )	120:3:2769:2779	3657345	1	True				
ANR	3657574	CallExpression	free ( ret )		3657345	0					
ANR	3657575	Callee	free		3657345	0					
ANR	3657576	Identifier	free		3657345	0					
ANR	3657577	ArgumentList	ret		3657345	1					
ANR	3657578	Argument	ret		3657345	0					
ANR	3657579	Identifier	ret		3657345	0					
ANR	3657580	ReturnStatement	return false ;	121:3:2784:2796	3657345	2	True				
ANR	3657581	Identifier	false		3657345	0					
ANR	3657582	IfStatement	"if ( ! ( names [ ct_name ] = R_NEWS0 ( char , cb + 1 ) ) )"		3657345	4					
ANR	3657583	Condition	"! ( names [ ct_name ] = R_NEWS0 ( char , cb + 1 ) )"	123:6:2808:2849	3657345	0	True				
ANR	3657584	UnaryOperationExpression	"! ( names [ ct_name ] = R_NEWS0 ( char , cb + 1 ) )"		3657345	0					
ANR	3657585	UnaryOperator	!		3657345	0					
ANR	3657586	AssignmentExpression	"names [ ct_name ] = R_NEWS0 ( char , cb + 1 )"		3657345	1		=			
ANR	3657587	ArrayIndexing	names [ ct_name ]		3657345	0					
ANR	3657588	Identifier	names		3657345	0					
ANR	3657589	Identifier	ct_name		3657345	1					
ANR	3657590	CallExpression	"R_NEWS0 ( char , cb + 1 )"		3657345	1					
ANR	3657591	Callee	R_NEWS0		3657345	0					
ANR	3657592	Identifier	R_NEWS0		3657345	0					
ANR	3657593	ArgumentList	char		3657345	1					
ANR	3657594	Argument	char		3657345	0					
ANR	3657595	Identifier	char		3657345	0					
ANR	3657596	Argument	cb + 1		3657345	1					
ANR	3657597	AdditiveExpression	cb + 1		3657345	0		+			
ANR	3657598	Identifier	cb		3657345	0					
ANR	3657599	PrimaryExpression	1		3657345	1					
ANR	3657600	CompoundStatement		47:50:1025:1025	3657345	1					
ANR	3657601	ExpressionStatement	free_lname ( ret )	124:3:2857:2873	3657345	0	True				
ANR	3657602	CallExpression	free_lname ( ret )		3657345	0					
ANR	3657603	Callee	free_lname		3657345	0					
ANR	3657604	Identifier	free_lname		3657345	0					
ANR	3657605	ArgumentList	ret		3657345	1					
ANR	3657606	Argument	ret		3657345	0					
ANR	3657607	Identifier	ret		3657345	0					
ANR	3657608	ReturnStatement	return false ;	125:3:2878:2890	3657345	1	True				
ANR	3657609	Identifier	false		3657345	0					
ANR	3657610	IfStatement	if ( ( tmp_size + 4 + cb ) < buf_size )		3657345	5					
ANR	3657611	Condition	( tmp_size + 4 + cb ) < buf_size	127:6:2902:2931	3657345	0	True				
ANR	3657612	RelationalExpression	( tmp_size + 4 + cb ) < buf_size		3657345	0		<			
ANR	3657613	AdditiveExpression	tmp_size + 4 + cb		3657345	0		+			
ANR	3657614	Identifier	tmp_size		3657345	0					
ANR	3657615	AdditiveExpression	4 + cb		3657345	1		+			
ANR	3657616	PrimaryExpression	4		3657345	0					
ANR	3657617	Identifier	cb		3657345	1					
ANR	3657618	Identifier	buf_size		3657345	1					
ANR	3657619	CompoundStatement		51:38:1107:1107	3657345	1					
ANR	3657620	ExpressionStatement	"memcpy ( names [ ct_name ] , buf + 3 + tmp_size + 1 , cb )"	128:3:2939:2990	3657345	0	True				
ANR	3657621	CallExpression	"memcpy ( names [ ct_name ] , buf + 3 + tmp_size + 1 , cb )"		3657345	0					
ANR	3657622	Callee	memcpy		3657345	0					
ANR	3657623	Identifier	memcpy		3657345	0					
ANR	3657624	ArgumentList	names [ ct_name ]		3657345	1					
ANR	3657625	Argument	names [ ct_name ]		3657345	0					
ANR	3657626	ArrayIndexing	names [ ct_name ]		3657345	0					
ANR	3657627	Identifier	names		3657345	0					
ANR	3657628	Identifier	ct_name		3657345	1					
ANR	3657629	Argument	buf + 3 + tmp_size + 1		3657345	1					
ANR	3657630	AdditiveExpression	buf + 3 + tmp_size + 1		3657345	0		+			
ANR	3657631	Identifier	buf		3657345	0					
ANR	3657632	AdditiveExpression	3 + tmp_size + 1		3657345	1		+			
ANR	3657633	PrimaryExpression	3		3657345	0					
ANR	3657634	AdditiveExpression	tmp_size + 1		3657345	1		+			
ANR	3657635	Identifier	tmp_size		3657345	0					
ANR	3657636	PrimaryExpression	1		3657345	1					
ANR	3657637	Argument	cb		3657345	2					
ANR	3657638	Identifier	cb		3657345	0					
ANR	3657639	ExpressionStatement	ct_name ++	130:2:2998:3007	3657345	6	True				
ANR	3657640	PostIncDecOperationExpression	ct_name ++		3657345	0					
ANR	3657641	Identifier	ct_name		3657345	0					
ANR	3657642	IncDec	++		3657345	1					
ANR	3657643	ExpressionStatement	tmp_size += cb + 1	131:2:3011:3029	3657345	7	True				
ANR	3657644	AssignmentExpression	tmp_size += cb + 1		3657345	0		+=			
ANR	3657645	Identifier	tmp_size		3657345	0					
ANR	3657646	AdditiveExpression	cb + 1		3657345	1		+			
ANR	3657647	Identifier	cb		3657345	0					
ANR	3657648	PrimaryExpression	1		3657345	1					
ANR	3657649	ReturnStatement	return true ;	133:1:3060:3071	3657345	33	True				
ANR	3657650	Identifier	true		3657345	0					
ANR	3657651	ReturnType	static bool		3657345	1					
ANR	3657652	Identifier	load_omf_lnames		3657345	2					
ANR	3657653	ParameterList	"OMF_record * record , const ut8 * buf , ut64 buf_size"		3657345	3					
ANR	3657654	Parameter	OMF_record * record	77:28:1775:1792	3657345	0	True				
ANR	3657655	ParameterType	OMF_record *		3657345	0					
ANR	3657656	Identifier	record		3657345	1					
ANR	3657657	Parameter	const ut8 * buf	77:48:1795:1808	3657345	1	True				
ANR	3657658	ParameterType	const ut8 *		3657345	0					
ANR	3657659	Identifier	buf		3657345	1					
ANR	3657660	Parameter	ut64 buf_size	77:64:1811:1823	3657345	2	True				
ANR	3657661	ParameterType	ut64		3657345	0					
ANR	3657662	Identifier	buf_size		3657345	1					
ANR	3657663	CFGEntryNode	ENTRY		3657345		True				
ANR	3657664	CFGExitNode	EXIT		3657345		True				
ANR	3657665	Symbol	next		3657345						
ANR	3657666	Symbol	* ret		3657345						
ANR	3657667	Symbol	* names		3657345						
ANR	3657668	Symbol	OMF_multi_datas		3657345						
ANR	3657669	Symbol	ret -> nb_elem		3657345						
ANR	3657670	Symbol	record		3657345						
ANR	3657671	Symbol	R_NEWS0		3657345						
ANR	3657672	Symbol	record -> content		3657345						
ANR	3657673	Symbol	cb		3657345						
ANR	3657674	Symbol	ret		3657345						
ANR	3657675	Symbol	* buf		3657345						
ANR	3657676	Symbol	NULL		3657345						
ANR	3657677	Symbol	record -> size		3657345						
ANR	3657678	Symbol	buf_size		3657345						
ANR	3657679	Symbol	* tmp_size		3657345						
ANR	3657680	Symbol	false		3657345						
ANR	3657681	Symbol	* ct_name		3657345						
ANR	3657682	Symbol	ret -> elems		3657345						
ANR	3657683	Symbol	ct_name		3657345						
ANR	3657684	Symbol	R_NEW0		3657345						
ANR	3657685	Symbol	buf		3657345						
ANR	3657686	Symbol	names		3657345						
ANR	3657687	Symbol	tmp_size		3657345						
ANR	3657688	Symbol	* record		3657345						
ANR	3657689	Symbol	char		3657345						
ANR	3657690	Symbol	true		3657345						
ANR	3657691	Function	load_omf_segdef	136:0:3076:4174							
ANR	3657692	FunctionDef	"load_omf_segdef (OMF_record * record , const ut8 * buf , ut64 buf_size)"		3657691	0					
ANR	3657693	CompoundStatement		136:78:3154:4174	3657691	0					
ANR	3657694	IdentifierDeclStatement	OMF_segment * ret = NULL ;	137:1:3157:3180	3657691	0	True				
ANR	3657695	IdentifierDecl	* ret = NULL		3657691	0					
ANR	3657696	IdentifierDeclType	OMF_segment *		3657691	0					
ANR	3657697	Identifier	ret		3657691	1					
ANR	3657698	AssignmentExpression	* ret = NULL		3657691	2		=			
ANR	3657699	Identifier	NULL		3657691	0					
ANR	3657700	Identifier	NULL		3657691	1					
ANR	3657701	IdentifierDeclStatement	int off_add ;	138:1:3183:3194	3657691	1	True				
ANR	3657702	IdentifierDecl	off_add		3657691	0					
ANR	3657703	IdentifierDeclType	int		3657691	0					
ANR	3657704	Identifier	off_add		3657691	1					
ANR	3657705	IfStatement	if ( ! ( ret = R_NEW0 ( OMF_segment ) ) )		3657691	2					
ANR	3657706	Condition	! ( ret = R_NEW0 ( OMF_segment ) )	140:5:3202:3230	3657691	0	True				
ANR	3657707	UnaryOperationExpression	! ( ret = R_NEW0 ( OMF_segment ) )		3657691	0					
ANR	3657708	UnaryOperator	!		3657691	0					
ANR	3657709	AssignmentExpression	ret = R_NEW0 ( OMF_segment )		3657691	1		=			
ANR	3657710	Identifier	ret		3657691	0					
ANR	3657711	CallExpression	R_NEW0 ( OMF_segment )		3657691	1					
ANR	3657712	Callee	R_NEW0		3657691	0					
ANR	3657713	Identifier	R_NEW0		3657691	0					
ANR	3657714	ArgumentList	OMF_segment		3657691	1					
ANR	3657715	Argument	OMF_segment		3657691	0					
ANR	3657716	Identifier	OMF_segment		3657691	0					
ANR	3657717	CompoundStatement		5:36:78:78	3657691	1					
ANR	3657718	ReturnStatement	return false ;	141:2:3237:3249	3657691	0	True				
ANR	3657719	Identifier	false		3657691	0					
ANR	3657720	ExpressionStatement	record -> content = ret	143:1:3255:3276	3657691	3	True				
ANR	3657721	AssignmentExpression	record -> content = ret		3657691	0		=			
ANR	3657722	PtrMemberAccess	record -> content		3657691	0					
ANR	3657723	Identifier	record		3657691	0					
ANR	3657724	Identifier	content		3657691	1					
ANR	3657725	Identifier	ret		3657691	1					
ANR	3657726	IfStatement	if ( record -> size < 2 )		3657691	4					
ANR	3657727	Condition	record -> size < 2	145:5:3284:3299	3657691	0	True				
ANR	3657728	RelationalExpression	record -> size < 2		3657691	0		<			
ANR	3657729	PtrMemberAccess	record -> size		3657691	0					
ANR	3657730	Identifier	record		3657691	0					
ANR	3657731	Identifier	size		3657691	1					
ANR	3657732	PrimaryExpression	2		3657691	1					
ANR	3657733	CompoundStatement		10:23:147:147	3657691	1					
ANR	3657734	ExpressionStatement	"eprintf ( ""Invalid Segdef record (bad size)\\n"" )"	146:2:3306:3352	3657691	0	True				
ANR	3657735	CallExpression	"eprintf ( ""Invalid Segdef record (bad size)\\n"" )"		3657691	0					
ANR	3657736	Callee	eprintf		3657691	0					
ANR	3657737	Identifier	eprintf		3657691	0					
ANR	3657738	ArgumentList	"""Invalid Segdef record (bad size)\\n"""		3657691	1					
ANR	3657739	Argument	"""Invalid Segdef record (bad size)\\n"""		3657691	0					
ANR	3657740	PrimaryExpression	"""Invalid Segdef record (bad size)\\n"""		3657691	0					
ANR	3657741	ReturnStatement	return false ;	147:2:3356:3368	3657691	1	True				
ANR	3657742	Identifier	false		3657691	0					
ANR	3657743	ExpressionStatement	off_add = buf [ 3 ] & 0xe ? 0 : 3	149:1:3374:3404	3657691	5	True				
ANR	3657744	AssignmentExpression	off_add = buf [ 3 ] & 0xe ? 0 : 3		3657691	0		=			
ANR	3657745	Identifier	off_add		3657691	0					
ANR	3657746	ConditionalExpression	buf [ 3 ] & 0xe ? 0 : 3		3657691	1					
ANR	3657747	Condition	buf [ 3 ] & 0xe		3657691	0					
ANR	3657748	BitAndExpression	buf [ 3 ] & 0xe		3657691	0		&			
ANR	3657749	ArrayIndexing	buf [ 3 ]		3657691	0					
ANR	3657750	Identifier	buf		3657691	0					
ANR	3657751	PrimaryExpression	3		3657691	1					
ANR	3657752	PrimaryExpression	0xe		3657691	1					
ANR	3657753	PrimaryExpression	0		3657691	1					
ANR	3657754	PrimaryExpression	3		3657691	2					
ANR	3657755	IfStatement	if ( record -> type == OMF_SEGDEF32 )		3657691	6					
ANR	3657756	Condition	record -> type == OMF_SEGDEF32	151:5:3412:3439	3657691	0	True				
ANR	3657757	EqualityExpression	record -> type == OMF_SEGDEF32		3657691	0		==			
ANR	3657758	PtrMemberAccess	record -> type		3657691	0					
ANR	3657759	Identifier	record		3657691	0					
ANR	3657760	Identifier	type		3657691	1					
ANR	3657761	Identifier	OMF_SEGDEF32		3657691	1					
ANR	3657762	CompoundStatement		16:35:287:287	3657691	1					
ANR	3657763	IfStatement	if ( record -> size < 5 + off_add )		3657691	0					
ANR	3657764	Condition	record -> size < 5 + off_add	152:6:3450:3475	3657691	0	True				
ANR	3657765	RelationalExpression	record -> size < 5 + off_add		3657691	0		<			
ANR	3657766	PtrMemberAccess	record -> size		3657691	0					
ANR	3657767	Identifier	record		3657691	0					
ANR	3657768	Identifier	size		3657691	1					
ANR	3657769	AdditiveExpression	5 + off_add		3657691	1		+			
ANR	3657770	PrimaryExpression	5		3657691	0					
ANR	3657771	Identifier	off_add		3657691	1					
ANR	3657772	CompoundStatement		17:34:323:323	3657691	1					
ANR	3657773	ExpressionStatement	"eprintf ( ""Invalid Segdef record (bad size)\\n"" )"	153:3:3483:3529	3657691	0	True				
ANR	3657774	CallExpression	"eprintf ( ""Invalid Segdef record (bad size)\\n"" )"		3657691	0					
ANR	3657775	Callee	eprintf		3657691	0					
ANR	3657776	Identifier	eprintf		3657691	0					
ANR	3657777	ArgumentList	"""Invalid Segdef record (bad size)\\n"""		3657691	1					
ANR	3657778	Argument	"""Invalid Segdef record (bad size)\\n"""		3657691	0					
ANR	3657779	PrimaryExpression	"""Invalid Segdef record (bad size)\\n"""		3657691	0					
ANR	3657780	ReturnStatement	return false ;	154:3:3534:3546	3657691	1	True				
ANR	3657781	Identifier	false		3657691	0					
ANR	3657782	ExpressionStatement	"ret -> name_idx = omf_get_idx ( buf + 8 + off_add , buf_size - 8 - off_add )"	156:2:3554:3625	3657691	1	True				
ANR	3657783	AssignmentExpression	"ret -> name_idx = omf_get_idx ( buf + 8 + off_add , buf_size - 8 - off_add )"		3657691	0		=			
ANR	3657784	PtrMemberAccess	ret -> name_idx		3657691	0					
ANR	3657785	Identifier	ret		3657691	0					
ANR	3657786	Identifier	name_idx		3657691	1					
ANR	3657787	CallExpression	"omf_get_idx ( buf + 8 + off_add , buf_size - 8 - off_add )"		3657691	1					
ANR	3657788	Callee	omf_get_idx		3657691	0					
ANR	3657789	Identifier	omf_get_idx		3657691	0					
ANR	3657790	ArgumentList	buf + 8 + off_add		3657691	1					
ANR	3657791	Argument	buf + 8 + off_add		3657691	0					
ANR	3657792	AdditiveExpression	buf + 8 + off_add		3657691	0		+			
ANR	3657793	Identifier	buf		3657691	0					
ANR	3657794	AdditiveExpression	8 + off_add		3657691	1		+			
ANR	3657795	PrimaryExpression	8		3657691	0					
ANR	3657796	Identifier	off_add		3657691	1					
ANR	3657797	Argument	buf_size - 8 - off_add		3657691	1					
ANR	3657798	AdditiveExpression	buf_size - 8 - off_add		3657691	0		-			
ANR	3657799	Identifier	buf_size		3657691	0					
ANR	3657800	AdditiveExpression	8 - off_add		3657691	1		-			
ANR	3657801	PrimaryExpression	8		3657691	0					
ANR	3657802	Identifier	off_add		3657691	1					
ANR	3657803	IfStatement	if ( buf [ 3 ] & 2 )		3657691	2					
ANR	3657804	Condition	buf [ 3 ] & 2	157:6:3633:3642	3657691	0	True				
ANR	3657805	BitAndExpression	buf [ 3 ] & 2		3657691	0		&			
ANR	3657806	ArrayIndexing	buf [ 3 ]		3657691	0					
ANR	3657807	Identifier	buf		3657691	0					
ANR	3657808	PrimaryExpression	3		3657691	1					
ANR	3657809	PrimaryExpression	2		3657691	1					
ANR	3657810	CompoundStatement		22:18:490:490	3657691	1					
ANR	3657811	ExpressionStatement	ret -> size = UT32_MAX	158:3:3650:3670	3657691	0	True				
ANR	3657812	AssignmentExpression	ret -> size = UT32_MAX		3657691	0		=			
ANR	3657813	PtrMemberAccess	ret -> size		3657691	0					
ANR	3657814	Identifier	ret		3657691	0					
ANR	3657815	Identifier	size		3657691	1					
ANR	3657816	Identifier	UT32_MAX		3657691	1					
ANR	3657817	ElseStatement	else		3657691	0					
ANR	3657818	CompoundStatement		24:9:526:526	3657691	0					
ANR	3657819	ExpressionStatement	ret -> size = r_read_le32 ( buf + 4 + off_add )	160:3:3686:3729	3657691	0	True				
ANR	3657820	AssignmentExpression	ret -> size = r_read_le32 ( buf + 4 + off_add )		3657691	0		=			
ANR	3657821	PtrMemberAccess	ret -> size		3657691	0					
ANR	3657822	Identifier	ret		3657691	0					
ANR	3657823	Identifier	size		3657691	1					
ANR	3657824	CallExpression	r_read_le32 ( buf + 4 + off_add )		3657691	1					
ANR	3657825	Callee	r_read_le32		3657691	0					
ANR	3657826	Identifier	r_read_le32		3657691	0					
ANR	3657827	ArgumentList	buf + 4 + off_add		3657691	1					
ANR	3657828	Argument	buf + 4 + off_add		3657691	0					
ANR	3657829	AdditiveExpression	buf + 4 + off_add		3657691	0		+			
ANR	3657830	Identifier	buf		3657691	0					
ANR	3657831	AdditiveExpression	4 + off_add		3657691	1		+			
ANR	3657832	PrimaryExpression	4		3657691	0					
ANR	3657833	Identifier	off_add		3657691	1					
ANR	3657834	ElseStatement	else		3657691	0					
ANR	3657835	CompoundStatement		27:8:588:588	3657691	0					
ANR	3657836	IfStatement	if ( record -> size < 3 + off_add )		3657691	0					
ANR	3657837	Condition	record -> size < 3 + off_add	163:6:3751:3776	3657691	0	True				
ANR	3657838	RelationalExpression	record -> size < 3 + off_add		3657691	0		<			
ANR	3657839	PtrMemberAccess	record -> size		3657691	0					
ANR	3657840	Identifier	record		3657691	0					
ANR	3657841	Identifier	size		3657691	1					
ANR	3657842	AdditiveExpression	3 + off_add		3657691	1		+			
ANR	3657843	PrimaryExpression	3		3657691	0					
ANR	3657844	Identifier	off_add		3657691	1					
ANR	3657845	CompoundStatement		28:34:624:624	3657691	1					
ANR	3657846	ExpressionStatement	"eprintf ( ""Invalid Segdef record (bad size)\\n"" )"	164:3:3784:3830	3657691	0	True				
ANR	3657847	CallExpression	"eprintf ( ""Invalid Segdef record (bad size)\\n"" )"		3657691	0					
ANR	3657848	Callee	eprintf		3657691	0					
ANR	3657849	Identifier	eprintf		3657691	0					
ANR	3657850	ArgumentList	"""Invalid Segdef record (bad size)\\n"""		3657691	1					
ANR	3657851	Argument	"""Invalid Segdef record (bad size)\\n"""		3657691	0					
ANR	3657852	PrimaryExpression	"""Invalid Segdef record (bad size)\\n"""		3657691	0					
ANR	3657853	ReturnStatement	return false ;	165:3:3835:3847	3657691	1	True				
ANR	3657854	Identifier	false		3657691	0					
ANR	3657855	ExpressionStatement	"ret -> name_idx = omf_get_idx ( buf + 6 + off_add , buf_size - 6 - off_add )"	167:2:3855:3926	3657691	1	True				
ANR	3657856	AssignmentExpression	"ret -> name_idx = omf_get_idx ( buf + 6 + off_add , buf_size - 6 - off_add )"		3657691	0		=			
ANR	3657857	PtrMemberAccess	ret -> name_idx		3657691	0					
ANR	3657858	Identifier	ret		3657691	0					
ANR	3657859	Identifier	name_idx		3657691	1					
ANR	3657860	CallExpression	"omf_get_idx ( buf + 6 + off_add , buf_size - 6 - off_add )"		3657691	1					
ANR	3657861	Callee	omf_get_idx		3657691	0					
ANR	3657862	Identifier	omf_get_idx		3657691	0					
ANR	3657863	ArgumentList	buf + 6 + off_add		3657691	1					
ANR	3657864	Argument	buf + 6 + off_add		3657691	0					
ANR	3657865	AdditiveExpression	buf + 6 + off_add		3657691	0		+			
ANR	3657866	Identifier	buf		3657691	0					
ANR	3657867	AdditiveExpression	6 + off_add		3657691	1		+			
ANR	3657868	PrimaryExpression	6		3657691	0					
ANR	3657869	Identifier	off_add		3657691	1					
ANR	3657870	Argument	buf_size - 6 - off_add		3657691	1					
ANR	3657871	AdditiveExpression	buf_size - 6 - off_add		3657691	0		-			
ANR	3657872	Identifier	buf_size		3657691	0					
ANR	3657873	AdditiveExpression	6 - off_add		3657691	1		-			
ANR	3657874	PrimaryExpression	6		3657691	0					
ANR	3657875	Identifier	off_add		3657691	1					
ANR	3657876	IfStatement	if ( buf [ 3 ] & 2 )		3657691	2					
ANR	3657877	Condition	buf [ 3 ] & 2	168:6:3934:3943	3657691	0	True				
ANR	3657878	BitAndExpression	buf [ 3 ] & 2		3657691	0		&			
ANR	3657879	ArrayIndexing	buf [ 3 ]		3657691	0					
ANR	3657880	Identifier	buf		3657691	0					
ANR	3657881	PrimaryExpression	3		3657691	1					
ANR	3657882	PrimaryExpression	2		3657691	1					
ANR	3657883	CompoundStatement		33:18:791:791	3657691	1					
ANR	3657884	ExpressionStatement	ret -> size = UT16_MAX	169:3:3951:3971	3657691	0	True				
ANR	3657885	AssignmentExpression	ret -> size = UT16_MAX		3657691	0		=			
ANR	3657886	PtrMemberAccess	ret -> size		3657691	0					
ANR	3657887	Identifier	ret		3657691	0					
ANR	3657888	Identifier	size		3657691	1					
ANR	3657889	Identifier	UT16_MAX		3657691	1					
ANR	3657890	ExpressionStatement	ret -> size = r_read_le16 ( buf + 4 + off_add )	171:2:3979:4022	3657691	3	True				
ANR	3657891	AssignmentExpression	ret -> size = r_read_le16 ( buf + 4 + off_add )		3657691	0		=			
ANR	3657892	PtrMemberAccess	ret -> size		3657691	0					
ANR	3657893	Identifier	ret		3657691	0					
ANR	3657894	Identifier	size		3657691	1					
ANR	3657895	CallExpression	r_read_le16 ( buf + 4 + off_add )		3657691	1					
ANR	3657896	Callee	r_read_le16		3657691	0					
ANR	3657897	Identifier	r_read_le16		3657691	0					
ANR	3657898	ArgumentList	buf + 4 + off_add		3657691	1					
ANR	3657899	Argument	buf + 4 + off_add		3657691	0					
ANR	3657900	AdditiveExpression	buf + 4 + off_add		3657691	0		+			
ANR	3657901	Identifier	buf		3657691	0					
ANR	3657902	AdditiveExpression	4 + off_add		3657691	1		+			
ANR	3657903	PrimaryExpression	4		3657691	0					
ANR	3657904	Identifier	off_add		3657691	1					
ANR	3657905	ExpressionStatement	ret -> bits = ( buf [ 3 ] & 1 ) ? 32 : 16	174:1:4029:4061	3657691	7	True				
ANR	3657906	AssignmentExpression	ret -> bits = ( buf [ 3 ] & 1 ) ? 32 : 16		3657691	0		=			
ANR	3657907	PtrMemberAccess	ret -> bits		3657691	0					
ANR	3657908	Identifier	ret		3657691	0					
ANR	3657909	Identifier	bits		3657691	1					
ANR	3657910	ConditionalExpression	( buf [ 3 ] & 1 ) ? 32 : 16		3657691	1					
ANR	3657911	Condition	buf [ 3 ] & 1		3657691	0					
ANR	3657912	BitAndExpression	buf [ 3 ] & 1		3657691	0		&			
ANR	3657913	ArrayIndexing	buf [ 3 ]		3657691	0					
ANR	3657914	Identifier	buf		3657691	0					
ANR	3657915	PrimaryExpression	3		3657691	1					
ANR	3657916	PrimaryExpression	1		3657691	1					
ANR	3657917	PrimaryExpression	32		3657691	1					
ANR	3657918	PrimaryExpression	16		3657691	2					
ANR	3657919	ExpressionStatement	record -> type = OMF_SEGDEF	177:1:4132:4157	3657691	8	True				
ANR	3657920	AssignmentExpression	record -> type = OMF_SEGDEF		3657691	0		=			
ANR	3657921	PtrMemberAccess	record -> type		3657691	0					
ANR	3657922	Identifier	record		3657691	0					
ANR	3657923	Identifier	type		3657691	1					
ANR	3657924	Identifier	OMF_SEGDEF		3657691	1					
ANR	3657925	ReturnStatement	return true ;	179:1:4161:4172	3657691	9	True				
ANR	3657926	Identifier	true		3657691	0					
ANR	3657927	ReturnType	static int		3657691	1					
ANR	3657928	Identifier	load_omf_segdef		3657691	2					
ANR	3657929	ParameterList	"OMF_record * record , const ut8 * buf , ut64 buf_size"		3657691	3					
ANR	3657930	Parameter	OMF_record * record	136:27:3103:3120	3657691	0	True				
ANR	3657931	ParameterType	OMF_record *		3657691	0					
ANR	3657932	Identifier	record		3657691	1					
ANR	3657933	Parameter	const ut8 * buf	136:47:3123:3136	3657691	1	True				
ANR	3657934	ParameterType	const ut8 *		3657691	0					
ANR	3657935	Identifier	buf		3657691	1					
ANR	3657936	Parameter	ut64 buf_size	136:63:3139:3151	3657691	2	True				
ANR	3657937	ParameterType	ut64		3657691	0					
ANR	3657938	Identifier	buf_size		3657691	1					
ANR	3657939	CFGEntryNode	ENTRY		3657691		True				
ANR	3657940	CFGExitNode	EXIT		3657691		True				
ANR	3657941	Symbol	UT32_MAX		3657691						
ANR	3657942	Symbol	OMF_segment		3657691						
ANR	3657943	Symbol	OMF_SEGDEF32		3657691						
ANR	3657944	Symbol	* ret		3657691						
ANR	3657945	Symbol	omf_get_idx		3657691						
ANR	3657946	Symbol	OMF_SEGDEF		3657691						
ANR	3657947	Symbol	record		3657691						
ANR	3657948	Symbol	ret -> name_idx		3657691						
ANR	3657949	Symbol	record -> content		3657691						
ANR	3657950	Symbol	UT16_MAX		3657691						
ANR	3657951	Symbol	record -> type		3657691						
ANR	3657952	Symbol	ret		3657691						
ANR	3657953	Symbol	* buf		3657691						
ANR	3657954	Symbol	NULL		3657691						
ANR	3657955	Symbol	r_read_le32		3657691						
ANR	3657956	Symbol	record -> size		3657691						
ANR	3657957	Symbol	buf_size		3657691						
ANR	3657958	Symbol	ret -> size		3657691						
ANR	3657959	Symbol	false		3657691						
ANR	3657960	Symbol	r_read_le16		3657691						
ANR	3657961	Symbol	R_NEW0		3657691						
ANR	3657962	Symbol	buf		3657691						
ANR	3657963	Symbol	* record		3657691						
ANR	3657964	Symbol	true		3657691						
ANR	3657965	Symbol	ret -> bits		3657691						
ANR	3657966	Symbol	off_add		3657691						
ANR	3657967	Function	omf_count_symb	182:0:4177:4497							
ANR	3657968	FunctionDef	"omf_count_symb (ut16 total_size , ut32 ct , const ut8 * buf , int bits)"		3657967	0					
ANR	3657969	CompoundStatement		182:79:4256:4497	3657967	0					
ANR	3657970	IdentifierDeclStatement	ut32 nb_symb = 0 ;	183:1:4259:4275	3657967	0	True				
ANR	3657971	IdentifierDecl	nb_symb = 0		3657967	0					
ANR	3657972	IdentifierDeclType	ut32		3657967	0					
ANR	3657973	Identifier	nb_symb		3657967	1					
ANR	3657974	AssignmentExpression	nb_symb = 0		3657967	2		=			
ANR	3657975	Identifier	nb_symb		3657967	0					
ANR	3657976	PrimaryExpression	0		3657967	1					
ANR	3657977	WhileStatement	while ( ct < total_size - 1 )		3657967	1					
ANR	3657978	Condition	ct < total_size - 1	184:8:4285:4303	3657967	0	True				
ANR	3657979	RelationalExpression	ct < total_size - 1		3657967	0		<			
ANR	3657980	Identifier	ct		3657967	0					
ANR	3657981	AdditiveExpression	total_size - 1		3657967	1		-			
ANR	3657982	Identifier	total_size		3657967	0					
ANR	3657983	PrimaryExpression	1		3657967	1					
ANR	3657984	CompoundStatement		3:29:49:49	3657967	1					
ANR	3657985	ExpressionStatement	ct += buf [ ct ] + 1 + ( bits == 32 ? 4 : 2 )	185:2:4310:4350	3657967	0	True				
ANR	3657986	AssignmentExpression	ct += buf [ ct ] + 1 + ( bits == 32 ? 4 : 2 )		3657967	0		+=			
ANR	3657987	Identifier	ct		3657967	0					
ANR	3657988	AdditiveExpression	buf [ ct ] + 1 + ( bits == 32 ? 4 : 2 )		3657967	1		+			
ANR	3657989	ArrayIndexing	buf [ ct ]		3657967	0					
ANR	3657990	Identifier	buf		3657967	0					
ANR	3657991	Identifier	ct		3657967	1					
ANR	3657992	AdditiveExpression	1 + ( bits == 32 ? 4 : 2 )		3657967	1		+			
ANR	3657993	PrimaryExpression	1		3657967	0					
ANR	3657994	ConditionalExpression	bits == 32 ? 4 : 2		3657967	1					
ANR	3657995	Condition	bits == 32		3657967	0					
ANR	3657996	EqualityExpression	bits == 32		3657967	0		==			
ANR	3657997	Identifier	bits		3657967	0					
ANR	3657998	PrimaryExpression	32		3657967	1					
ANR	3657999	PrimaryExpression	4		3657967	1					
ANR	3658000	PrimaryExpression	2		3657967	2					
ANR	3658001	IfStatement	if ( ct > total_size - 1 )		3657967	1					
ANR	3658002	Condition	ct > total_size - 1	186:6:4358:4376	3657967	0	True				
ANR	3658003	RelationalExpression	ct > total_size - 1		3657967	0		>			
ANR	3658004	Identifier	ct		3657967	0					
ANR	3658005	AdditiveExpression	total_size - 1		3657967	1		-			
ANR	3658006	Identifier	total_size		3657967	0					
ANR	3658007	PrimaryExpression	1		3657967	1					
ANR	3658008	CompoundStatement		5:27:122:122	3657967	1					
ANR	3658009	ReturnStatement	return nb_symb ;	187:3:4384:4398	3657967	0	True				
ANR	3658010	Identifier	nb_symb		3657967	0					
ANR	3658011	IfStatement	if ( buf [ ct ] & 0x80 )		3657967	2					
ANR	3658012	Condition	buf [ ct ] & 0x80	189:6:4410:4423	3657967	0	True				
ANR	3658013	BitAndExpression	buf [ ct ] & 0x80		3657967	0		&			
ANR	3658014	ArrayIndexing	buf [ ct ]		3657967	0					
ANR	3658015	Identifier	buf		3657967	0					
ANR	3658016	Identifier	ct		3657967	1					
ANR	3658017	PrimaryExpression	0x80		3657967	1					
ANR	3658018	CompoundStatement		8:22:169:169	3657967	1					
ANR	3658019	ExpressionStatement	ct += 2	190:3:4431:4438	3657967	0	True				
ANR	3658020	AssignmentExpression	ct += 2		3657967	0		+=			
ANR	3658021	Identifier	ct		3657967	0					
ANR	3658022	PrimaryExpression	2		3657967	1					
ANR	3658023	ElseStatement	else		3657967	0					
ANR	3658024	CompoundStatement		10:9:192:192	3657967	0					
ANR	3658025	ExpressionStatement	ct ++	192:3:4454:4458	3657967	0	True				
ANR	3658026	PostIncDecOperationExpression	ct ++		3657967	0					
ANR	3658027	Identifier	ct		3657967	0					
ANR	3658028	IncDec	++		3657967	1					
ANR	3658029	ExpressionStatement	nb_symb ++	194:2:4466:4475	3657967	3	True				
ANR	3658030	PostIncDecOperationExpression	nb_symb ++		3657967	0					
ANR	3658031	Identifier	nb_symb		3657967	0					
ANR	3658032	IncDec	++		3657967	1					
ANR	3658033	ReturnStatement	return nb_symb ;	196:1:4481:4495	3657967	2	True				
ANR	3658034	Identifier	nb_symb		3657967	0					
ANR	3658035	ReturnType	static ut32		3657967	1					
ANR	3658036	Identifier	omf_count_symb		3657967	2					
ANR	3658037	ParameterList	"ut16 total_size , ut32 ct , const ut8 * buf , int bits"		3657967	3					
ANR	3658038	Parameter	ut16 total_size	182:27:4204:4218	3657967	0	True				
ANR	3658039	ParameterType	ut16		3657967	0					
ANR	3658040	Identifier	total_size		3657967	1					
ANR	3658041	Parameter	ut32 ct	182:44:4221:4227	3657967	1	True				
ANR	3658042	ParameterType	ut32		3657967	0					
ANR	3658043	Identifier	ct		3657967	1					
ANR	3658044	Parameter	const ut8 * buf	182:53:4230:4243	3657967	2	True				
ANR	3658045	ParameterType	const ut8 *		3657967	0					
ANR	3658046	Identifier	buf		3657967	1					
ANR	3658047	Parameter	int bits	182:69:4246:4253	3657967	3	True				
ANR	3658048	ParameterType	int		3657967	0					
ANR	3658049	Identifier	bits		3657967	1					
ANR	3658050	CFGEntryNode	ENTRY		3657967		True				
ANR	3658051	CFGExitNode	EXIT		3657967		True				
ANR	3658052	Symbol	ct		3657967						
ANR	3658053	Symbol	buf		3657967						
ANR	3658054	Symbol	* buf		3657967						
ANR	3658055	Symbol	* ct		3657967						
ANR	3658056	Symbol	total_size		3657967						
ANR	3658057	Symbol	bits		3657967						
ANR	3658058	Symbol	nb_symb		3657967						
ANR	3658059	Function	load_omf_symb	199:0:4500:5751							
ANR	3658060	FunctionDef	"load_omf_symb (OMF_record * record , ut32 ct , const ut8 * buf , int buf_size , int bits , ut16 seg_idx)"		3658059	0					
ANR	3658061	CompoundStatement		199:108:4608:5751	3658059	0					
ANR	3658062	IdentifierDeclStatement	ut32 nb_symb = 0 ;	200:1:4611:4627	3658059	0	True				
ANR	3658063	IdentifierDecl	nb_symb = 0		3658059	0					
ANR	3658064	IdentifierDeclType	ut32		3658059	0					
ANR	3658065	Identifier	nb_symb		3658059	1					
ANR	3658066	AssignmentExpression	nb_symb = 0		3658059	2		=			
ANR	3658067	Identifier	nb_symb		3658059	0					
ANR	3658068	PrimaryExpression	0		3658059	1					
ANR	3658069	IdentifierDeclStatement	ut8 str_size = 0 ;	201:1:4630:4646	3658059	1	True				
ANR	3658070	IdentifierDecl	str_size = 0		3658059	0					
ANR	3658071	IdentifierDeclType	ut8		3658059	0					
ANR	3658072	Identifier	str_size		3658059	1					
ANR	3658073	AssignmentExpression	str_size = 0		3658059	2		=			
ANR	3658074	Identifier	str_size		3658059	0					
ANR	3658075	PrimaryExpression	0		3658059	1					
ANR	3658076	IdentifierDeclStatement	OMF_symbol * symbol ;	202:1:4649:4667	3658059	2	True				
ANR	3658077	IdentifierDecl	* symbol		3658059	0					
ANR	3658078	IdentifierDeclType	OMF_symbol *		3658059	0					
ANR	3658079	Identifier	symbol		3658059	1					
ANR	3658080	WhileStatement	while ( nb_symb < ( ( OMF_multi_datas * ) record -> content ) -> nb_elem )		3658059	3					
ANR	3658081	Condition	nb_symb < ( ( OMF_multi_datas * ) record -> content ) -> nb_elem	204:8:4678:4732	3658059	0	True				
ANR	3658082	RelationalExpression	nb_symb < ( ( OMF_multi_datas * ) record -> content ) -> nb_elem		3658059	0		<			
ANR	3658083	Identifier	nb_symb		3658059	0					
ANR	3658084	PtrMemberAccess	( ( OMF_multi_datas * ) record -> content ) -> nb_elem		3658059	1					
ANR	3658085	CastExpression	( OMF_multi_datas * ) record -> content		3658059	0					
ANR	3658086	CastTarget	OMF_multi_datas *		3658059	0					
ANR	3658087	PtrMemberAccess	record -> content		3658059	1					
ANR	3658088	Identifier	record		3658059	0					
ANR	3658089	Identifier	content		3658059	1					
ANR	3658090	Identifier	nb_elem		3658059	1					
ANR	3658091	CompoundStatement		6:65:126:126	3658059	1					
ANR	3658092	ExpressionStatement	symbol = ( ( OMF_symbol * ) ( ( OMF_multi_datas * ) record -> content ) -> elems ) + nb_symb	205:2:4739:4817	3658059	0	True				
ANR	3658093	AssignmentExpression	symbol = ( ( OMF_symbol * ) ( ( OMF_multi_datas * ) record -> content ) -> elems ) + nb_symb		3658059	0		=			
ANR	3658094	Identifier	symbol		3658059	0					
ANR	3658095	AdditiveExpression	( ( OMF_symbol * ) ( ( OMF_multi_datas * ) record -> content ) -> elems ) + nb_symb		3658059	1		+			
ANR	3658096	CastExpression	( OMF_symbol * ) ( ( OMF_multi_datas * ) record -> content ) -> elems		3658059	0					
ANR	3658097	CastTarget	OMF_symbol *		3658059	0					
ANR	3658098	PtrMemberAccess	( ( OMF_multi_datas * ) record -> content ) -> elems		3658059	1					
ANR	3658099	CastExpression	( OMF_multi_datas * ) record -> content		3658059	0					
ANR	3658100	CastTarget	OMF_multi_datas *		3658059	0					
ANR	3658101	PtrMemberAccess	record -> content		3658059	1					
ANR	3658102	Identifier	record		3658059	0					
ANR	3658103	Identifier	content		3658059	1					
ANR	3658104	Identifier	elems		3658059	1					
ANR	3658105	Identifier	nb_symb		3658059	1					
ANR	3658106	IfStatement	if ( record -> size - 1 < ct - 2 )		3658059	1					
ANR	3658107	Condition	record -> size - 1 < ct - 2	207:6:4826:4850	3658059	0	True				
ANR	3658108	RelationalExpression	record -> size - 1 < ct - 2		3658059	0		<			
ANR	3658109	AdditiveExpression	record -> size - 1		3658059	0		-			
ANR	3658110	PtrMemberAccess	record -> size		3658059	0					
ANR	3658111	Identifier	record		3658059	0					
ANR	3658112	Identifier	size		3658059	1					
ANR	3658113	PrimaryExpression	1		3658059	1					
ANR	3658114	AdditiveExpression	ct - 2		3658059	1		-			
ANR	3658115	Identifier	ct		3658059	0					
ANR	3658116	PrimaryExpression	2		3658059	1					
ANR	3658117	CompoundStatement		9:33:244:244	3658059	1					
ANR	3658118	ExpressionStatement	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"	208:3:4858:4904	3658059	0	True				
ANR	3658119	CallExpression	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"		3658059	0					
ANR	3658120	Callee	eprintf		3658059	0					
ANR	3658121	Identifier	eprintf		3658059	0					
ANR	3658122	ArgumentList	"""Invalid Pubdef record (bad size)\\n"""		3658059	1					
ANR	3658123	Argument	"""Invalid Pubdef record (bad size)\\n"""		3658059	0					
ANR	3658124	PrimaryExpression	"""Invalid Pubdef record (bad size)\\n"""		3658059	0					
ANR	3658125	ReturnStatement	return false ;	209:3:4909:4921	3658059	1	True				
ANR	3658126	Identifier	false		3658059	0					
ANR	3658127	ExpressionStatement	str_size = buf [ ct ]	211:2:4929:4947	3658059	2	True				
ANR	3658128	AssignmentExpression	str_size = buf [ ct ]		3658059	0		=			
ANR	3658129	Identifier	str_size		3658059	0					
ANR	3658130	ArrayIndexing	buf [ ct ]		3658059	1					
ANR	3658131	Identifier	buf		3658059	0					
ANR	3658132	Identifier	ct		3658059	1					
ANR	3658133	IfStatement	if ( bits == 32 )		3658059	3					
ANR	3658134	Condition	bits == 32	213:6:4956:4965	3658059	0	True				
ANR	3658135	EqualityExpression	bits == 32		3658059	0		==			
ANR	3658136	Identifier	bits		3658059	0					
ANR	3658137	PrimaryExpression	32		3658059	1					
ANR	3658138	CompoundStatement		15:18:359:359	3658059	1					
ANR	3658139	IfStatement	if ( ct + 1 + str_size + 4 - 3 > record -> size )		3658059	0					
ANR	3658140	Condition	ct + 1 + str_size + 4 - 3 > record -> size	214:7:4977:5016	3658059	0	True				
ANR	3658141	RelationalExpression	ct + 1 + str_size + 4 - 3 > record -> size		3658059	0		>			
ANR	3658142	AdditiveExpression	ct + 1 + str_size + 4 - 3		3658059	0		+			
ANR	3658143	Identifier	ct		3658059	0					
ANR	3658144	AdditiveExpression	1 + str_size + 4 - 3		3658059	1		+			
ANR	3658145	PrimaryExpression	1		3658059	0					
ANR	3658146	AdditiveExpression	str_size + 4 - 3		3658059	1		+			
ANR	3658147	Identifier	str_size		3658059	0					
ANR	3658148	AdditiveExpression	4 - 3		3658059	1		-			
ANR	3658149	PrimaryExpression	4		3658059	0					
ANR	3658150	PrimaryExpression	3		3658059	1					
ANR	3658151	PtrMemberAccess	record -> size		3658059	1					
ANR	3658152	Identifier	record		3658059	0					
ANR	3658153	Identifier	size		3658059	1					
ANR	3658154	CompoundStatement		16:49:410:410	3658059	1					
ANR	3658155	ExpressionStatement	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"	215:4:5025:5071	3658059	0	True				
ANR	3658156	CallExpression	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"		3658059	0					
ANR	3658157	Callee	eprintf		3658059	0					
ANR	3658158	Identifier	eprintf		3658059	0					
ANR	3658159	ArgumentList	"""Invalid Pubdef record (bad size)\\n"""		3658059	1					
ANR	3658160	Argument	"""Invalid Pubdef record (bad size)\\n"""		3658059	0					
ANR	3658161	PrimaryExpression	"""Invalid Pubdef record (bad size)\\n"""		3658059	0					
ANR	3658162	ReturnStatement	return false ;	216:4:5077:5089	3658059	1	True				
ANR	3658163	Identifier	false		3658059	0					
ANR	3658164	ExpressionStatement	symbol -> offset = r_read_le32 ( buf + ct + 1 + str_size )	218:3:5099:5153	3658059	1	True				
ANR	3658165	AssignmentExpression	symbol -> offset = r_read_le32 ( buf + ct + 1 + str_size )		3658059	0		=			
ANR	3658166	PtrMemberAccess	symbol -> offset		3658059	0					
ANR	3658167	Identifier	symbol		3658059	0					
ANR	3658168	Identifier	offset		3658059	1					
ANR	3658169	CallExpression	r_read_le32 ( buf + ct + 1 + str_size )		3658059	1					
ANR	3658170	Callee	r_read_le32		3658059	0					
ANR	3658171	Identifier	r_read_le32		3658059	0					
ANR	3658172	ArgumentList	buf + ct + 1 + str_size		3658059	1					
ANR	3658173	Argument	buf + ct + 1 + str_size		3658059	0					
ANR	3658174	AdditiveExpression	buf + ct + 1 + str_size		3658059	0		+			
ANR	3658175	Identifier	buf		3658059	0					
ANR	3658176	AdditiveExpression	ct + 1 + str_size		3658059	1		+			
ANR	3658177	Identifier	ct		3658059	0					
ANR	3658178	AdditiveExpression	1 + str_size		3658059	1		+			
ANR	3658179	PrimaryExpression	1		3658059	0					
ANR	3658180	Identifier	str_size		3658059	1					
ANR	3658181	ElseStatement	else		3658059	0					
ANR	3658182	CompoundStatement		21:9:555:555	3658059	0					
ANR	3658183	IfStatement	if ( ct + 1 + str_size + 2 - 3 > record -> size )		3658059	0					
ANR	3658184	Condition	ct + 1 + str_size + 2 - 3 > record -> size	220:7:5173:5212	3658059	0	True				
ANR	3658185	RelationalExpression	ct + 1 + str_size + 2 - 3 > record -> size		3658059	0		>			
ANR	3658186	AdditiveExpression	ct + 1 + str_size + 2 - 3		3658059	0		+			
ANR	3658187	Identifier	ct		3658059	0					
ANR	3658188	AdditiveExpression	1 + str_size + 2 - 3		3658059	1		+			
ANR	3658189	PrimaryExpression	1		3658059	0					
ANR	3658190	AdditiveExpression	str_size + 2 - 3		3658059	1		+			
ANR	3658191	Identifier	str_size		3658059	0					
ANR	3658192	AdditiveExpression	2 - 3		3658059	1		-			
ANR	3658193	PrimaryExpression	2		3658059	0					
ANR	3658194	PrimaryExpression	3		3658059	1					
ANR	3658195	PtrMemberAccess	record -> size		3658059	1					
ANR	3658196	Identifier	record		3658059	0					
ANR	3658197	Identifier	size		3658059	1					
ANR	3658198	CompoundStatement		22:49:606:606	3658059	1					
ANR	3658199	ExpressionStatement	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"	221:4:5221:5267	3658059	0	True				
ANR	3658200	CallExpression	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"		3658059	0					
ANR	3658201	Callee	eprintf		3658059	0					
ANR	3658202	Identifier	eprintf		3658059	0					
ANR	3658203	ArgumentList	"""Invalid Pubdef record (bad size)\\n"""		3658059	1					
ANR	3658204	Argument	"""Invalid Pubdef record (bad size)\\n"""		3658059	0					
ANR	3658205	PrimaryExpression	"""Invalid Pubdef record (bad size)\\n"""		3658059	0					
ANR	3658206	ReturnStatement	return false ;	222:4:5273:5285	3658059	1	True				
ANR	3658207	Identifier	false		3658059	0					
ANR	3658208	ExpressionStatement	symbol -> offset = r_read_le16 ( buf + ct + 1 + str_size )	224:3:5295:5349	3658059	1	True				
ANR	3658209	AssignmentExpression	symbol -> offset = r_read_le16 ( buf + ct + 1 + str_size )		3658059	0		=			
ANR	3658210	PtrMemberAccess	symbol -> offset		3658059	0					
ANR	3658211	Identifier	symbol		3658059	0					
ANR	3658212	Identifier	offset		3658059	1					
ANR	3658213	CallExpression	r_read_le16 ( buf + ct + 1 + str_size )		3658059	1					
ANR	3658214	Callee	r_read_le16		3658059	0					
ANR	3658215	Identifier	r_read_le16		3658059	0					
ANR	3658216	ArgumentList	buf + ct + 1 + str_size		3658059	1					
ANR	3658217	Argument	buf + ct + 1 + str_size		3658059	0					
ANR	3658218	AdditiveExpression	buf + ct + 1 + str_size		3658059	0		+			
ANR	3658219	Identifier	buf		3658059	0					
ANR	3658220	AdditiveExpression	ct + 1 + str_size		3658059	1		+			
ANR	3658221	Identifier	ct		3658059	0					
ANR	3658222	AdditiveExpression	1 + str_size		3658059	1		+			
ANR	3658223	PrimaryExpression	1		3658059	0					
ANR	3658224	Identifier	str_size		3658059	1					
ANR	3658225	ExpressionStatement	symbol -> seg_idx = seg_idx	227:2:5358:5383	3658059	4	True				
ANR	3658226	AssignmentExpression	symbol -> seg_idx = seg_idx		3658059	0		=			
ANR	3658227	PtrMemberAccess	symbol -> seg_idx		3658059	0					
ANR	3658228	Identifier	symbol		3658059	0					
ANR	3658229	Identifier	seg_idx		3658059	1					
ANR	3658230	Identifier	seg_idx		3658059	1					
ANR	3658231	IfStatement	"if ( ! ( symbol -> name = R_NEWS0 ( char , str_size + 1 ) ) )"		3658059	5					
ANR	3658232	Condition	"! ( symbol -> name = R_NEWS0 ( char , str_size + 1 ) )"	229:6:5392:5437	3658059	0	True				
ANR	3658233	UnaryOperationExpression	"! ( symbol -> name = R_NEWS0 ( char , str_size + 1 ) )"		3658059	0					
ANR	3658234	UnaryOperator	!		3658059	0					
ANR	3658235	AssignmentExpression	"symbol -> name = R_NEWS0 ( char , str_size + 1 )"		3658059	1		=			
ANR	3658236	PtrMemberAccess	symbol -> name		3658059	0					
ANR	3658237	Identifier	symbol		3658059	0					
ANR	3658238	Identifier	name		3658059	1					
ANR	3658239	CallExpression	"R_NEWS0 ( char , str_size + 1 )"		3658059	1					
ANR	3658240	Callee	R_NEWS0		3658059	0					
ANR	3658241	Identifier	R_NEWS0		3658059	0					
ANR	3658242	ArgumentList	char		3658059	1					
ANR	3658243	Argument	char		3658059	0					
ANR	3658244	Identifier	char		3658059	0					
ANR	3658245	Argument	str_size + 1		3658059	1					
ANR	3658246	AdditiveExpression	str_size + 1		3658059	0		+			
ANR	3658247	Identifier	str_size		3658059	0					
ANR	3658248	PrimaryExpression	1		3658059	1					
ANR	3658249	CompoundStatement		31:54:831:831	3658059	1					
ANR	3658250	ReturnStatement	return false ;	230:3:5445:5457	3658059	0	True				
ANR	3658251	Identifier	false		3658059	0					
ANR	3658252	ExpressionStatement	symbol -> name [ str_size ] = 0	232:2:5465:5491	3658059	6	True				
ANR	3658253	AssignmentExpression	symbol -> name [ str_size ] = 0		3658059	0		=			
ANR	3658254	ArrayIndexing	symbol -> name [ str_size ]		3658059	0					
ANR	3658255	PtrMemberAccess	symbol -> name		3658059	0					
ANR	3658256	Identifier	symbol		3658059	0					
ANR	3658257	Identifier	name		3658059	1					
ANR	3658258	Identifier	str_size		3658059	1					
ANR	3658259	PrimaryExpression	0		3658059	1					
ANR	3658260	ExpressionStatement	"memcpy ( symbol -> name , buf + ct + 1 , sizeof ( char ) * str_size )"	233:2:5495:5555	3658059	7	True				
ANR	3658261	CallExpression	"memcpy ( symbol -> name , buf + ct + 1 , sizeof ( char ) * str_size )"		3658059	0					
ANR	3658262	Callee	memcpy		3658059	0					
ANR	3658263	Identifier	memcpy		3658059	0					
ANR	3658264	ArgumentList	symbol -> name		3658059	1					
ANR	3658265	Argument	symbol -> name		3658059	0					
ANR	3658266	PtrMemberAccess	symbol -> name		3658059	0					
ANR	3658267	Identifier	symbol		3658059	0					
ANR	3658268	Identifier	name		3658059	1					
ANR	3658269	Argument	buf + ct + 1		3658059	1					
ANR	3658270	AdditiveExpression	buf + ct + 1		3658059	0		+			
ANR	3658271	Identifier	buf		3658059	0					
ANR	3658272	AdditiveExpression	ct + 1		3658059	1		+			
ANR	3658273	Identifier	ct		3658059	0					
ANR	3658274	PrimaryExpression	1		3658059	1					
ANR	3658275	Argument	sizeof ( char ) * str_size		3658059	2					
ANR	3658276	MultiplicativeExpression	sizeof ( char ) * str_size		3658059	0		*			
ANR	3658277	SizeofExpression	sizeof ( char )		3658059	0					
ANR	3658278	Sizeof	sizeof		3658059	0					
ANR	3658279	SizeofOperand	char		3658059	1					
ANR	3658280	Identifier	str_size		3658059	1					
ANR	3658281	ExpressionStatement	ct += 1 + str_size + ( bits == 32 ? 4 : 2 )	235:2:5560:5601	3658059	8	True				
ANR	3658282	AssignmentExpression	ct += 1 + str_size + ( bits == 32 ? 4 : 2 )		3658059	0		+=			
ANR	3658283	Identifier	ct		3658059	0					
ANR	3658284	AdditiveExpression	1 + str_size + ( bits == 32 ? 4 : 2 )		3658059	1		+			
ANR	3658285	PrimaryExpression	1		3658059	0					
ANR	3658286	AdditiveExpression	str_size + ( bits == 32 ? 4 : 2 )		3658059	1		+			
ANR	3658287	Identifier	str_size		3658059	0					
ANR	3658288	ConditionalExpression	bits == 32 ? 4 : 2		3658059	1					
ANR	3658289	Condition	bits == 32		3658059	0					
ANR	3658290	EqualityExpression	bits == 32		3658059	0		==			
ANR	3658291	Identifier	bits		3658059	0					
ANR	3658292	PrimaryExpression	32		3658059	1					
ANR	3658293	PrimaryExpression	4		3658059	1					
ANR	3658294	PrimaryExpression	2		3658059	2					
ANR	3658295	IfStatement	if ( ct >= buf_size )		3658059	9					
ANR	3658296	Condition	ct >= buf_size	236:6:5609:5622	3658059	0	True				
ANR	3658297	RelationalExpression	ct >= buf_size		3658059	0		>=			
ANR	3658298	Identifier	ct		3658059	0					
ANR	3658299	Identifier	buf_size		3658059	1					
ANR	3658300	CompoundStatement		38:22:1016:1016	3658059	1					
ANR	3658301	ReturnStatement	return false ;	237:3:5630:5642	3658059	0	True				
ANR	3658302	Identifier	false		3658059	0					
ANR	3658303	IfStatement	if ( buf [ ct ] & 0x80 )		3658059	10					
ANR	3658304	Condition	buf [ ct ] & 0x80	239:6:5654:5667	3658059	0	True				
ANR	3658305	BitAndExpression	buf [ ct ] & 0x80		3658059	0		&			
ANR	3658306	ArrayIndexing	buf [ ct ]		3658059	0					
ANR	3658307	Identifier	buf		3658059	0					
ANR	3658308	Identifier	ct		3658059	1					
ANR	3658309	PrimaryExpression	0x80		3658059	1					
ANR	3658310	CompoundStatement		41:22:1061:1061	3658059	1					
ANR	3658311	ExpressionStatement	ct += 2	240:3:5688:5695	3658059	0	True				
ANR	3658312	AssignmentExpression	ct += 2		3658059	0		+=			
ANR	3658313	Identifier	ct		3658059	0					
ANR	3658314	PrimaryExpression	2		3658059	1					
ANR	3658315	ElseStatement	else		3658059	0					
ANR	3658316	CompoundStatement		43:9:1097:1097	3658059	0					
ANR	3658317	ExpressionStatement	ct ++	242:3:5711:5715	3658059	0	True				
ANR	3658318	PostIncDecOperationExpression	ct ++		3658059	0					
ANR	3658319	Identifier	ct		3658059	0					
ANR	3658320	IncDec	++		3658059	1					
ANR	3658321	ExpressionStatement	nb_symb ++	244:2:5723:5732	3658059	11	True				
ANR	3658322	PostIncDecOperationExpression	nb_symb ++		3658059	0					
ANR	3658323	Identifier	nb_symb		3658059	0					
ANR	3658324	IncDec	++		3658059	1					
ANR	3658325	ReturnStatement	return true ;	246:1:5738:5749	3658059	4	True				
ANR	3658326	Identifier	true		3658059	0					
ANR	3658327	ReturnType	static int		3658059	1					
ANR	3658328	Identifier	load_omf_symb		3658059	2					
ANR	3658329	ParameterList	"OMF_record * record , ut32 ct , const ut8 * buf , int buf_size , int bits , ut16 seg_idx"		3658059	3					
ANR	3658330	Parameter	OMF_record * record	199:25:4525:4542	3658059	0	True				
ANR	3658331	ParameterType	OMF_record *		3658059	0					
ANR	3658332	Identifier	record		3658059	1					
ANR	3658333	Parameter	ut32 ct	199:45:4545:4551	3658059	1	True				
ANR	3658334	ParameterType	ut32		3658059	0					
ANR	3658335	Identifier	ct		3658059	1					
ANR	3658336	Parameter	const ut8 * buf	199:54:4554:4567	3658059	2	True				
ANR	3658337	ParameterType	const ut8 *		3658059	0					
ANR	3658338	Identifier	buf		3658059	1					
ANR	3658339	Parameter	int buf_size	199:70:4570:4581	3658059	3	True				
ANR	3658340	ParameterType	int		3658059	0					
ANR	3658341	Identifier	buf_size		3658059	1					
ANR	3658342	Parameter	int bits	199:84:4584:4591	3658059	4	True				
ANR	3658343	ParameterType	int		3658059	0					
ANR	3658344	Identifier	bits		3658059	1					
ANR	3658345	Parameter	ut16 seg_idx	199:94:4594:4605	3658059	5	True				
ANR	3658346	ParameterType	ut16		3658059	0					
ANR	3658347	Identifier	seg_idx		3658059	1					
ANR	3658348	CFGEntryNode	ENTRY		3658059		True				
ANR	3658349	CFGExitNode	EXIT		3658059		True				
ANR	3658350	Symbol	symbol		3658059						
ANR	3658351	Symbol	symbol -> name		3658059						
ANR	3658352	Symbol	symbol -> seg_idx		3658059						
ANR	3658353	Symbol	symbol -> offset		3658059						
ANR	3658354	Symbol	* str_size		3658059						
ANR	3658355	Symbol	seg_idx		3658059						
ANR	3658356	Symbol	* record -> content		3658059						
ANR	3658357	Symbol	record		3658059						
ANR	3658358	Symbol	R_NEWS0		3658059						
ANR	3658359	Symbol	record -> content		3658059						
ANR	3658360	Symbol	* symbol		3658059						
ANR	3658361	Symbol	* buf		3658059						
ANR	3658362	Symbol	r_read_le32		3658059						
ANR	3658363	Symbol	* * record		3658059						
ANR	3658364	Symbol	record -> size		3658059						
ANR	3658365	Symbol	buf_size		3658059						
ANR	3658366	Symbol	bits		3658059						
ANR	3658367	Symbol	false		3658059						
ANR	3658368	Symbol	* * symbol		3658059						
ANR	3658369	Symbol	r_read_le16		3658059						
ANR	3658370	Symbol	ct		3658059						
ANR	3658371	Symbol	buf		3658059						
ANR	3658372	Symbol	( ( OMF_multi_datas * ) record -> content ) -> nb_elem		3658059						
ANR	3658373	Symbol	* ct		3658059						
ANR	3658374	Symbol	* record		3658059						
ANR	3658375	Symbol	char		3658059						
ANR	3658376	Symbol	true		3658059						
ANR	3658377	Symbol	* symbol -> name		3658059						
ANR	3658378	Symbol	str_size		3658059						
ANR	3658379	Symbol	( ( OMF_multi_datas * ) record -> content ) -> elems		3658059						
ANR	3658380	Symbol	nb_symb		3658059						
ANR	3658381	Function	load_omf_pubdef	249:0:5754:7324							
ANR	3658382	FunctionDef	"load_omf_pubdef (OMF_record * record , const ut8 * buf , int buf_size)"		3658381	0					
ANR	3658383	CompoundStatement		249:77:5831:7324	3658381	0					
ANR	3658384	IdentifierDeclStatement	OMF_multi_datas * ret = NULL ;	250:1:5834:5861	3658381	0	True				
ANR	3658385	IdentifierDecl	* ret = NULL		3658381	0					
ANR	3658386	IdentifierDeclType	OMF_multi_datas *		3658381	0					
ANR	3658387	Identifier	ret		3658381	1					
ANR	3658388	AssignmentExpression	* ret = NULL		3658381	2		=			
ANR	3658389	Identifier	NULL		3658381	0					
ANR	3658390	Identifier	NULL		3658381	1					
ANR	3658391	IdentifierDeclStatement	ut16 seg_idx ;	251:1:5864:5876	3658381	1	True				
ANR	3658392	IdentifierDecl	seg_idx		3658381	0					
ANR	3658393	IdentifierDeclType	ut16		3658381	0					
ANR	3658394	Identifier	seg_idx		3658381	1					
ANR	3658395	IdentifierDeclStatement	ut16 ct = 0 ;	252:1:5879:5890	3658381	2	True				
ANR	3658396	IdentifierDecl	ct = 0		3658381	0					
ANR	3658397	IdentifierDeclType	ut16		3658381	0					
ANR	3658398	Identifier	ct		3658381	1					
ANR	3658399	AssignmentExpression	ct = 0		3658381	2		=			
ANR	3658400	Identifier	ct		3658381	0					
ANR	3658401	PrimaryExpression	0		3658381	1					
ANR	3658402	IdentifierDeclStatement	ut16 base_grp ;	253:1:5893:5906	3658381	3	True				
ANR	3658403	IdentifierDecl	base_grp		3658381	0					
ANR	3658404	IdentifierDeclType	ut16		3658381	0					
ANR	3658405	Identifier	base_grp		3658381	1					
ANR	3658406	IfStatement	if ( record -> size < 2 )		3658381	4					
ANR	3658407	Condition	record -> size < 2	255:5:5914:5929	3658381	0	True				
ANR	3658408	RelationalExpression	record -> size < 2		3658381	0		<			
ANR	3658409	PtrMemberAccess	record -> size		3658381	0					
ANR	3658410	Identifier	record		3658381	0					
ANR	3658411	Identifier	size		3658381	1					
ANR	3658412	PrimaryExpression	2		3658381	1					
ANR	3658413	CompoundStatement		7:23:100:100	3658381	1					
ANR	3658414	ExpressionStatement	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"	256:2:5936:5982	3658381	0	True				
ANR	3658415	CallExpression	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"		3658381	0					
ANR	3658416	Callee	eprintf		3658381	0					
ANR	3658417	Identifier	eprintf		3658381	0					
ANR	3658418	ArgumentList	"""Invalid Pubdef record (bad size)\\n"""		3658381	1					
ANR	3658419	Argument	"""Invalid Pubdef record (bad size)\\n"""		3658381	0					
ANR	3658420	PrimaryExpression	"""Invalid Pubdef record (bad size)\\n"""		3658381	0					
ANR	3658421	ReturnStatement	return false ;	257:2:5986:5998	3658381	1	True				
ANR	3658422	Identifier	false		3658381	0					
ANR	3658423	ExpressionStatement	ct = 3	260:1:6005:6011	3658381	5	True				
ANR	3658424	AssignmentExpression	ct = 3		3658381	0		=			
ANR	3658425	Identifier	ct		3658381	0					
ANR	3658426	PrimaryExpression	3		3658381	1					
ANR	3658427	ExpressionStatement	"base_grp = omf_get_idx ( buf + ct , buf_size - ct )"	261:1:6014:6062	3658381	6	True				
ANR	3658428	AssignmentExpression	"base_grp = omf_get_idx ( buf + ct , buf_size - ct )"		3658381	0		=			
ANR	3658429	Identifier	base_grp		3658381	0					
ANR	3658430	CallExpression	"omf_get_idx ( buf + ct , buf_size - ct )"		3658381	1					
ANR	3658431	Callee	omf_get_idx		3658381	0					
ANR	3658432	Identifier	omf_get_idx		3658381	0					
ANR	3658433	ArgumentList	buf + ct		3658381	1					
ANR	3658434	Argument	buf + ct		3658381	0					
ANR	3658435	AdditiveExpression	buf + ct		3658381	0		+			
ANR	3658436	Identifier	buf		3658381	0					
ANR	3658437	Identifier	ct		3658381	1					
ANR	3658438	Argument	buf_size - ct		3658381	1					
ANR	3658439	AdditiveExpression	buf_size - ct		3658381	0		-			
ANR	3658440	Identifier	buf_size		3658381	0					
ANR	3658441	Identifier	ct		3658381	1					
ANR	3658442	IfStatement	if ( buf [ ct ] & 0x80 )		3658381	7					
ANR	3658443	Condition	buf [ ct ] & 0x80	262:5:6069:6082	3658381	0	True				
ANR	3658444	BitAndExpression	buf [ ct ] & 0x80		3658381	0		&			
ANR	3658445	ArrayIndexing	buf [ ct ]		3658381	0					
ANR	3658446	Identifier	buf		3658381	0					
ANR	3658447	Identifier	ct		3658381	1					
ANR	3658448	PrimaryExpression	0x80		3658381	1					
ANR	3658449	CompoundStatement		14:21:253:253	3658381	1					
ANR	3658450	ExpressionStatement	ct += 2	263:2:6117:6124	3658381	0	True				
ANR	3658451	AssignmentExpression	ct += 2		3658381	0		+=			
ANR	3658452	Identifier	ct		3658381	0					
ANR	3658453	PrimaryExpression	2		3658381	1					
ANR	3658454	ElseStatement	else		3658381	0					
ANR	3658455	CompoundStatement		16:8:302:302	3658381	0					
ANR	3658456	ExpressionStatement	ct ++	265:2:6138:6142	3658381	0	True				
ANR	3658457	PostIncDecOperationExpression	ct ++		3658381	0					
ANR	3658458	Identifier	ct		3658381	0					
ANR	3658459	IncDec	++		3658381	1					
ANR	3658460	IfStatement	if ( record -> size < ct - 2 )		3658381	8					
ANR	3658461	Condition	record -> size < ct - 2	268:5:6153:6173	3658381	0	True				
ANR	3658462	RelationalExpression	record -> size < ct - 2		3658381	0		<			
ANR	3658463	PtrMemberAccess	record -> size		3658381	0					
ANR	3658464	Identifier	record		3658381	0					
ANR	3658465	Identifier	size		3658381	1					
ANR	3658466	AdditiveExpression	ct - 2		3658381	1		-			
ANR	3658467	Identifier	ct		3658381	0					
ANR	3658468	PrimaryExpression	2		3658381	1					
ANR	3658469	CompoundStatement		20:28:344:344	3658381	1					
ANR	3658470	ExpressionStatement	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"	269:2:6180:6226	3658381	0	True				
ANR	3658471	CallExpression	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"		3658381	0					
ANR	3658472	Callee	eprintf		3658381	0					
ANR	3658473	Identifier	eprintf		3658381	0					
ANR	3658474	ArgumentList	"""Invalid Pubdef record (bad size)\\n"""		3658381	1					
ANR	3658475	Argument	"""Invalid Pubdef record (bad size)\\n"""		3658381	0					
ANR	3658476	PrimaryExpression	"""Invalid Pubdef record (bad size)\\n"""		3658381	0					
ANR	3658477	ReturnStatement	return false ;	270:2:6230:6242	3658381	1	True				
ANR	3658478	Identifier	false		3658381	0					
ANR	3658479	ExpressionStatement	"seg_idx = omf_get_idx ( buf + ct , buf_size - ct )"	273:1:6249:6296	3658381	9	True				
ANR	3658480	AssignmentExpression	"seg_idx = omf_get_idx ( buf + ct , buf_size - ct )"		3658381	0		=			
ANR	3658481	Identifier	seg_idx		3658381	0					
ANR	3658482	CallExpression	"omf_get_idx ( buf + ct , buf_size - ct )"		3658381	1					
ANR	3658483	Callee	omf_get_idx		3658381	0					
ANR	3658484	Identifier	omf_get_idx		3658381	0					
ANR	3658485	ArgumentList	buf + ct		3658381	1					
ANR	3658486	Argument	buf + ct		3658381	0					
ANR	3658487	AdditiveExpression	buf + ct		3658381	0		+			
ANR	3658488	Identifier	buf		3658381	0					
ANR	3658489	Identifier	ct		3658381	1					
ANR	3658490	Argument	buf_size - ct		3658381	1					
ANR	3658491	AdditiveExpression	buf_size - ct		3658381	0		-			
ANR	3658492	Identifier	buf_size		3658381	0					
ANR	3658493	Identifier	ct		3658381	1					
ANR	3658494	IfStatement	if ( buf [ ct ] & 0x80 )		3658381	10					
ANR	3658495	Condition	buf [ ct ] & 0x80	275:5:6304:6317	3658381	0	True				
ANR	3658496	BitAndExpression	buf [ ct ] & 0x80		3658381	0		&			
ANR	3658497	ArrayIndexing	buf [ ct ]		3658381	0					
ANR	3658498	Identifier	buf		3658381	0					
ANR	3658499	Identifier	ct		3658381	1					
ANR	3658500	PrimaryExpression	0x80		3658381	1					
ANR	3658501	CompoundStatement		27:21:488:488	3658381	1					
ANR	3658502	ExpressionStatement	ct += 2	276:2:6353:6360	3658381	0	True				
ANR	3658503	AssignmentExpression	ct += 2		3658381	0		+=			
ANR	3658504	Identifier	ct		3658381	0					
ANR	3658505	PrimaryExpression	2		3658381	1					
ANR	3658506	ElseStatement	else		3658381	0					
ANR	3658507	CompoundStatement		29:8:538:538	3658381	0					
ANR	3658508	ExpressionStatement	ct ++	278:2:6374:6378	3658381	0	True				
ANR	3658509	PostIncDecOperationExpression	ct ++		3658381	0					
ANR	3658510	Identifier	ct		3658381	0					
ANR	3658511	IncDec	++		3658381	1					
ANR	3658512	IfStatement	if ( ! base_grp && ! seg_idx )		3658381	11					
ANR	3658513	Condition	! base_grp && ! seg_idx	281:5:6389:6409	3658381	0	True				
ANR	3658514	AndExpression	! base_grp && ! seg_idx		3658381	0		&&			
ANR	3658515	UnaryOperationExpression	! base_grp		3658381	0					
ANR	3658516	UnaryOperator	!		3658381	0					
ANR	3658517	Identifier	base_grp		3658381	1					
ANR	3658518	UnaryOperationExpression	! seg_idx		3658381	1					
ANR	3658519	UnaryOperator	!		3658381	0					
ANR	3658520	Identifier	seg_idx		3658381	1					
ANR	3658521	CompoundStatement		33:28:580:580	3658381	1					
ANR	3658522	ExpressionStatement	ct += 2	282:2:6416:6423	3658381	0	True				
ANR	3658523	AssignmentExpression	ct += 2		3658381	0		+=			
ANR	3658524	Identifier	ct		3658381	0					
ANR	3658525	PrimaryExpression	2		3658381	1					
ANR	3658526	IfStatement	if ( record -> size < ct - 2 )		3658381	12					
ANR	3658527	Condition	record -> size < ct - 2	284:5:6433:6453	3658381	0	True				
ANR	3658528	RelationalExpression	record -> size < ct - 2		3658381	0		<			
ANR	3658529	PtrMemberAccess	record -> size		3658381	0					
ANR	3658530	Identifier	record		3658381	0					
ANR	3658531	Identifier	size		3658381	1					
ANR	3658532	AdditiveExpression	ct - 2		3658381	1		-			
ANR	3658533	Identifier	ct		3658381	0					
ANR	3658534	PrimaryExpression	2		3658381	1					
ANR	3658535	CompoundStatement		36:28:624:624	3658381	1					
ANR	3658536	ExpressionStatement	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"	285:2:6460:6506	3658381	0	True				
ANR	3658537	CallExpression	"eprintf ( ""Invalid Pubdef record (bad size)\\n"" )"		3658381	0					
ANR	3658538	Callee	eprintf		3658381	0					
ANR	3658539	Identifier	eprintf		3658381	0					
ANR	3658540	ArgumentList	"""Invalid Pubdef record (bad size)\\n"""		3658381	1					
ANR	3658541	Argument	"""Invalid Pubdef record (bad size)\\n"""		3658381	0					
ANR	3658542	PrimaryExpression	"""Invalid Pubdef record (bad size)\\n"""		3658381	0					
ANR	3658543	ReturnStatement	return false ;	286:2:6510:6522	3658381	1	True				
ANR	3658544	Identifier	false		3658381	0					
ANR	3658545	IfStatement	if ( ! ( ret = R_NEW0 ( OMF_multi_datas ) ) )		3658381	13					
ANR	3658546	Condition	! ( ret = R_NEW0 ( OMF_multi_datas ) )	289:4:6532:6564	3658381	0	True				
ANR	3658547	UnaryOperationExpression	! ( ret = R_NEW0 ( OMF_multi_datas ) )		3658381	0					
ANR	3658548	UnaryOperator	!		3658381	0					
ANR	3658549	AssignmentExpression	ret = R_NEW0 ( OMF_multi_datas )		3658381	1		=			
ANR	3658550	Identifier	ret		3658381	0					
ANR	3658551	CallExpression	R_NEW0 ( OMF_multi_datas )		3658381	1					
ANR	3658552	Callee	R_NEW0		3658381	0					
ANR	3658553	Identifier	R_NEW0		3658381	0					
ANR	3658554	ArgumentList	OMF_multi_datas		3658381	1					
ANR	3658555	Argument	OMF_multi_datas		3658381	0					
ANR	3658556	Identifier	OMF_multi_datas		3658381	0					
ANR	3658557	CompoundStatement		41:39:735:735	3658381	1					
ANR	3658558	ReturnStatement	return false ;	290:2:6571:6583	3658381	0	True				
ANR	3658559	Identifier	false		3658381	0					
ANR	3658560	ExpressionStatement	record -> content = ret	292:1:6589:6610	3658381	14	True				
ANR	3658561	AssignmentExpression	record -> content = ret		3658381	0		=			
ANR	3658562	PtrMemberAccess	record -> content		3658381	0					
ANR	3658563	Identifier	record		3658381	0					
ANR	3658564	Identifier	content		3658381	1					
ANR	3658565	Identifier	ret		3658381	1					
ANR	3658566	IfStatement	if ( ! ( record -> type & 1 ) )		3658381	15					
ANR	3658567	Condition	! ( record -> type & 1 )	294:5:6618:6636	3658381	0	True				
ANR	3658568	UnaryOperationExpression	! ( record -> type & 1 )		3658381	0					
ANR	3658569	UnaryOperator	!		3658381	0					
ANR	3658570	BitAndExpression	record -> type & 1		3658381	1		&			
ANR	3658571	PtrMemberAccess	record -> type		3658381	0					
ANR	3658572	Identifier	record		3658381	0					
ANR	3658573	Identifier	type		3658381	1					
ANR	3658574	PrimaryExpression	1		3658381	1					
ANR	3658575	CompoundStatement		46:26:807:807	3658381	1					
ANR	3658576	ExpressionStatement	"ret -> nb_elem = omf_count_symb ( record -> size + 3 , ct , buf , 16 )"	295:2:6658:6719	3658381	0	True				
ANR	3658577	AssignmentExpression	"ret -> nb_elem = omf_count_symb ( record -> size + 3 , ct , buf , 16 )"		3658381	0		=			
ANR	3658578	PtrMemberAccess	ret -> nb_elem		3658381	0					
ANR	3658579	Identifier	ret		3658381	0					
ANR	3658580	Identifier	nb_elem		3658381	1					
ANR	3658581	CallExpression	"omf_count_symb ( record -> size + 3 , ct , buf , 16 )"		3658381	1					
ANR	3658582	Callee	omf_count_symb		3658381	0					
ANR	3658583	Identifier	omf_count_symb		3658381	0					
ANR	3658584	ArgumentList	record -> size + 3		3658381	1					
ANR	3658585	Argument	record -> size + 3		3658381	0					
ANR	3658586	AdditiveExpression	record -> size + 3		3658381	0		+			
ANR	3658587	PtrMemberAccess	record -> size		3658381	0					
ANR	3658588	Identifier	record		3658381	0					
ANR	3658589	Identifier	size		3658381	1					
ANR	3658590	PrimaryExpression	3		3658381	1					
ANR	3658591	Argument	ct		3658381	1					
ANR	3658592	Identifier	ct		3658381	0					
ANR	3658593	Argument	buf		3658381	2					
ANR	3658594	Identifier	buf		3658381	0					
ANR	3658595	Argument	16		3658381	3					
ANR	3658596	PrimaryExpression	16		3658381	0					
ANR	3658597	IfStatement	if ( ret -> nb_elem > 0 )		3658381	1					
ANR	3658598	Condition	ret -> nb_elem > 0	296:6:6727:6742	3658381	0	True				
ANR	3658599	RelationalExpression	ret -> nb_elem > 0		3658381	0		>			
ANR	3658600	PtrMemberAccess	ret -> nb_elem		3658381	0					
ANR	3658601	Identifier	ret		3658381	0					
ANR	3658602	Identifier	nb_elem		3658381	1					
ANR	3658603	PrimaryExpression	0		3658381	1					
ANR	3658604	CompoundStatement		48:24:913:913	3658381	1					
ANR	3658605	IfStatement	"if ( ! ( ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem ) ) )"		3658381	0					
ANR	3658606	Condition	"! ( ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem ) )"	297:7:6754:6803	3658381	0	True				
ANR	3658607	UnaryOperationExpression	"! ( ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem ) )"		3658381	0					
ANR	3658608	UnaryOperator	!		3658381	0					
ANR	3658609	AssignmentExpression	"ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem )"		3658381	1		=			
ANR	3658610	PtrMemberAccess	ret -> elems		3658381	0					
ANR	3658611	Identifier	ret		3658381	0					
ANR	3658612	Identifier	elems		3658381	1					
ANR	3658613	CallExpression	"R_NEWS0 ( OMF_symbol , ret -> nb_elem )"		3658381	1					
ANR	3658614	Callee	R_NEWS0		3658381	0					
ANR	3658615	Identifier	R_NEWS0		3658381	0					
ANR	3658616	ArgumentList	OMF_symbol		3658381	1					
ANR	3658617	Argument	OMF_symbol		3658381	0					
ANR	3658618	Identifier	OMF_symbol		3658381	0					
ANR	3658619	Argument	ret -> nb_elem		3658381	1					
ANR	3658620	PtrMemberAccess	ret -> nb_elem		3658381	0					
ANR	3658621	Identifier	ret		3658381	0					
ANR	3658622	Identifier	nb_elem		3658381	1					
ANR	3658623	CompoundStatement		49:59:974:974	3658381	1					
ANR	3658624	ReturnStatement	return false ;	298:4:6812:6824	3658381	0	True				
ANR	3658625	Identifier	false		3658381	0					
ANR	3658626	IfStatement	"if ( ! load_omf_symb ( record , ct , buf , buf_size , 16 , seg_idx ) )"		3658381	2					
ANR	3658627	Condition	"! load_omf_symb ( record , ct , buf , buf_size , 16 , seg_idx )"	301:6:6841:6895	3658381	0	True				
ANR	3658628	UnaryOperationExpression	"! load_omf_symb ( record , ct , buf , buf_size , 16 , seg_idx )"		3658381	0					
ANR	3658629	UnaryOperator	!		3658381	0					
ANR	3658630	CallExpression	"load_omf_symb ( record , ct , buf , buf_size , 16 , seg_idx )"		3658381	1					
ANR	3658631	Callee	load_omf_symb		3658381	0					
ANR	3658632	Identifier	load_omf_symb		3658381	0					
ANR	3658633	ArgumentList	record		3658381	1					
ANR	3658634	Argument	record		3658381	0					
ANR	3658635	Identifier	record		3658381	0					
ANR	3658636	Argument	ct		3658381	1					
ANR	3658637	Identifier	ct		3658381	0					
ANR	3658638	Argument	buf		3658381	2					
ANR	3658639	Identifier	buf		3658381	0					
ANR	3658640	Argument	buf_size		3658381	3					
ANR	3658641	Identifier	buf_size		3658381	0					
ANR	3658642	Argument	16		3658381	4					
ANR	3658643	PrimaryExpression	16		3658381	0					
ANR	3658644	Argument	seg_idx		3658381	5					
ANR	3658645	Identifier	seg_idx		3658381	0					
ANR	3658646	CompoundStatement		53:63:1066:1066	3658381	1					
ANR	3658647	ReturnStatement	return false ;	302:3:6903:6915	3658381	0	True				
ANR	3658648	Identifier	false		3658381	0					
ANR	3658649	ElseStatement	else		3658381	0					
ANR	3658650	CompoundStatement		56:8:1097:1097	3658381	0					
ANR	3658651	ExpressionStatement	"ret -> nb_elem = omf_count_symb ( record -> size + 3 , ct , buf , 32 )"	305:2:6948:7009	3658381	0	True				
ANR	3658652	AssignmentExpression	"ret -> nb_elem = omf_count_symb ( record -> size + 3 , ct , buf , 32 )"		3658381	0		=			
ANR	3658653	PtrMemberAccess	ret -> nb_elem		3658381	0					
ANR	3658654	Identifier	ret		3658381	0					
ANR	3658655	Identifier	nb_elem		3658381	1					
ANR	3658656	CallExpression	"omf_count_symb ( record -> size + 3 , ct , buf , 32 )"		3658381	1					
ANR	3658657	Callee	omf_count_symb		3658381	0					
ANR	3658658	Identifier	omf_count_symb		3658381	0					
ANR	3658659	ArgumentList	record -> size + 3		3658381	1					
ANR	3658660	Argument	record -> size + 3		3658381	0					
ANR	3658661	AdditiveExpression	record -> size + 3		3658381	0		+			
ANR	3658662	PtrMemberAccess	record -> size		3658381	0					
ANR	3658663	Identifier	record		3658381	0					
ANR	3658664	Identifier	size		3658381	1					
ANR	3658665	PrimaryExpression	3		3658381	1					
ANR	3658666	Argument	ct		3658381	1					
ANR	3658667	Identifier	ct		3658381	0					
ANR	3658668	Argument	buf		3658381	2					
ANR	3658669	Identifier	buf		3658381	0					
ANR	3658670	Argument	32		3658381	3					
ANR	3658671	PrimaryExpression	32		3658381	0					
ANR	3658672	IfStatement	if ( ret -> nb_elem > 0 )		3658381	1					
ANR	3658673	Condition	ret -> nb_elem > 0	306:6:7017:7032	3658381	0	True				
ANR	3658674	RelationalExpression	ret -> nb_elem > 0		3658381	0		>			
ANR	3658675	PtrMemberAccess	ret -> nb_elem		3658381	0					
ANR	3658676	Identifier	ret		3658381	0					
ANR	3658677	Identifier	nb_elem		3658381	1					
ANR	3658678	PrimaryExpression	0		3658381	1					
ANR	3658679	CompoundStatement		58:24:1203:1203	3658381	1					
ANR	3658680	IfStatement	"if ( ! ( ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem ) ) )"		3658381	0					
ANR	3658681	Condition	"! ( ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem ) )"	307:7:7044:7093	3658381	0	True				
ANR	3658682	UnaryOperationExpression	"! ( ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem ) )"		3658381	0					
ANR	3658683	UnaryOperator	!		3658381	0					
ANR	3658684	AssignmentExpression	"ret -> elems = R_NEWS0 ( OMF_symbol , ret -> nb_elem )"		3658381	1		=			
ANR	3658685	PtrMemberAccess	ret -> elems		3658381	0					
ANR	3658686	Identifier	ret		3658381	0					
ANR	3658687	Identifier	elems		3658381	1					
ANR	3658688	CallExpression	"R_NEWS0 ( OMF_symbol , ret -> nb_elem )"		3658381	1					
ANR	3658689	Callee	R_NEWS0		3658381	0					
ANR	3658690	Identifier	R_NEWS0		3658381	0					
ANR	3658691	ArgumentList	OMF_symbol		3658381	1					
ANR	3658692	Argument	OMF_symbol		3658381	0					
ANR	3658693	Identifier	OMF_symbol		3658381	0					
ANR	3658694	Argument	ret -> nb_elem		3658381	1					
ANR	3658695	PtrMemberAccess	ret -> nb_elem		3658381	0					
ANR	3658696	Identifier	ret		3658381	0					
ANR	3658697	Identifier	nb_elem		3658381	1					
ANR	3658698	CompoundStatement		59:59:1264:1264	3658381	1					
ANR	3658699	ReturnStatement	return false ;	308:4:7102:7114	3658381	0	True				
ANR	3658700	Identifier	false		3658381	0					
ANR	3658701	IfStatement	"if ( ! load_omf_symb ( record , ct , buf , buf_size , 32 , seg_idx ) )"		3658381	2					
ANR	3658702	Condition	"! load_omf_symb ( record , ct , buf , buf_size , 32 , seg_idx )"	311:6:7131:7185	3658381	0	True				
ANR	3658703	UnaryOperationExpression	"! load_omf_symb ( record , ct , buf , buf_size , 32 , seg_idx )"		3658381	0					
ANR	3658704	UnaryOperator	!		3658381	0					
ANR	3658705	CallExpression	"load_omf_symb ( record , ct , buf , buf_size , 32 , seg_idx )"		3658381	1					
ANR	3658706	Callee	load_omf_symb		3658381	0					
ANR	3658707	Identifier	load_omf_symb		3658381	0					
ANR	3658708	ArgumentList	record		3658381	1					
ANR	3658709	Argument	record		3658381	0					
ANR	3658710	Identifier	record		3658381	0					
ANR	3658711	Argument	ct		3658381	1					
ANR	3658712	Identifier	ct		3658381	0					
ANR	3658713	Argument	buf		3658381	2					
ANR	3658714	Identifier	buf		3658381	0					
ANR	3658715	Argument	buf_size		3658381	3					
ANR	3658716	Identifier	buf_size		3658381	0					
ANR	3658717	Argument	32		3658381	4					
ANR	3658718	PrimaryExpression	32		3658381	0					
ANR	3658719	Argument	seg_idx		3658381	5					
ANR	3658720	Identifier	seg_idx		3658381	0					
ANR	3658721	CompoundStatement		63:63:1356:1356	3658381	1					
ANR	3658722	ReturnStatement	return false ;	312:3:7193:7205	3658381	0	True				
ANR	3658723	Identifier	false		3658381	0					
ANR	3658724	ExpressionStatement	record -> type = OMF_PUBDEF	317:1:7283:7308	3658381	16	True				
ANR	3658725	AssignmentExpression	record -> type = OMF_PUBDEF		3658381	0		=			
ANR	3658726	PtrMemberAccess	record -> type		3658381	0					
ANR	3658727	Identifier	record		3658381	0					
ANR	3658728	Identifier	type		3658381	1					
ANR	3658729	Identifier	OMF_PUBDEF		3658381	1					
ANR	3658730	ReturnStatement	return true ;	318:1:7311:7322	3658381	17	True				
ANR	3658731	Identifier	true		3658381	0					
ANR	3658732	ReturnType	static int		3658381	1					
ANR	3658733	Identifier	load_omf_pubdef		3658381	2					
ANR	3658734	ParameterList	"OMF_record * record , const ut8 * buf , int buf_size"		3658381	3					
ANR	3658735	Parameter	OMF_record * record	249:27:5781:5798	3658381	0	True				
ANR	3658736	ParameterType	OMF_record *		3658381	0					
ANR	3658737	Identifier	record		3658381	1					
ANR	3658738	Parameter	const ut8 * buf	249:47:5801:5814	3658381	1	True				
ANR	3658739	ParameterType	const ut8 *		3658381	0					
ANR	3658740	Identifier	buf		3658381	1					
ANR	3658741	Parameter	int buf_size	249:63:5817:5828	3658381	2	True				
ANR	3658742	ParameterType	int		3658381	0					
ANR	3658743	Identifier	buf_size		3658381	1					
ANR	3658744	CFGEntryNode	ENTRY		3658381		True				
ANR	3658745	CFGExitNode	EXIT		3658381		True				
ANR	3658746	Symbol	* ret		3658381						
ANR	3658747	Symbol	seg_idx		3658381						
ANR	3658748	Symbol	OMF_PUBDEF		3658381						
ANR	3658749	Symbol	omf_get_idx		3658381						
ANR	3658750	Symbol	OMF_multi_datas		3658381						
ANR	3658751	Symbol	ret -> nb_elem		3658381						
ANR	3658752	Symbol	OMF_symbol		3658381						
ANR	3658753	Symbol	record		3658381						
ANR	3658754	Symbol	R_NEWS0		3658381						
ANR	3658755	Symbol	record -> content		3658381						
ANR	3658756	Symbol	base_grp		3658381						
ANR	3658757	Symbol	record -> type		3658381						
ANR	3658758	Symbol	ret		3658381						
ANR	3658759	Symbol	* buf		3658381						
ANR	3658760	Symbol	NULL		3658381						
ANR	3658761	Symbol	record -> size		3658381						
ANR	3658762	Symbol	omf_count_symb		3658381						
ANR	3658763	Symbol	buf_size		3658381						
ANR	3658764	Symbol	false		3658381						
ANR	3658765	Symbol	ret -> elems		3658381						
ANR	3658766	Symbol	ct		3658381						
ANR	3658767	Symbol	R_NEW0		3658381						
ANR	3658768	Symbol	buf		3658381						
ANR	3658769	Symbol	* ct		3658381						
ANR	3658770	Symbol	* record		3658381						
ANR	3658771	Symbol	load_omf_symb		3658381						
ANR	3658772	Symbol	true		3658381						
ANR	3658773	Function	load_omf_data	321:0:7327:8253							
ANR	3658774	FunctionDef	"load_omf_data (const ut8 * buf , int buf_size , OMF_record * record , ut64 global_ct)"		3658773	0					
ANR	3658775	CompoundStatement		321:91:7418:8253	3658773	0					
ANR	3658776	IdentifierDeclStatement	ut16 seg_idx ;	322:1:7421:7433	3658773	0	True				
ANR	3658777	IdentifierDecl	seg_idx		3658773	0					
ANR	3658778	IdentifierDeclType	ut16		3658773	0					
ANR	3658779	Identifier	seg_idx		3658773	1					
ANR	3658780	IdentifierDeclStatement	ut32 offset ;	323:1:7436:7447	3658773	1	True				
ANR	3658781	IdentifierDecl	offset		3658773	0					
ANR	3658782	IdentifierDeclType	ut32		3658773	0					
ANR	3658783	Identifier	offset		3658773	1					
ANR	3658784	IdentifierDeclStatement	ut16 ct = 4 ;	324:1:7450:7461	3658773	2	True				
ANR	3658785	IdentifierDecl	ct = 4		3658773	0					
ANR	3658786	IdentifierDeclType	ut16		3658773	0					
ANR	3658787	Identifier	ct		3658773	1					
ANR	3658788	AssignmentExpression	ct = 4		3658773	2		=			
ANR	3658789	Identifier	ct		3658773	0					
ANR	3658790	PrimaryExpression	4		3658773	1					
ANR	3658791	IdentifierDeclStatement	OMF_data * ret ;	325:1:7464:7477	3658773	3	True				
ANR	3658792	IdentifierDecl	* ret		3658773	0					
ANR	3658793	IdentifierDeclType	OMF_data *		3658773	0					
ANR	3658794	Identifier	ret		3658773	1					
ANR	3658795	IfStatement	if ( ( ! ( record -> type & 1 ) && record -> size < 4 ) || ( record -> size < 6 ) )		3658773	4					
ANR	3658796	Condition	( ! ( record -> type & 1 ) && record -> size < 4 ) || ( record -> size < 6 )	327:5:7485:7547	3658773	0	True				
ANR	3658797	OrExpression	( ! ( record -> type & 1 ) && record -> size < 4 ) || ( record -> size < 6 )		3658773	0		||			
ANR	3658798	AndExpression	! ( record -> type & 1 ) && record -> size < 4		3658773	0		&&			
ANR	3658799	UnaryOperationExpression	! ( record -> type & 1 )		3658773	0					
ANR	3658800	UnaryOperator	!		3658773	0					
ANR	3658801	BitAndExpression	record -> type & 1		3658773	1		&			
ANR	3658802	PtrMemberAccess	record -> type		3658773	0					
ANR	3658803	Identifier	record		3658773	0					
ANR	3658804	Identifier	type		3658773	1					
ANR	3658805	PrimaryExpression	1		3658773	1					
ANR	3658806	RelationalExpression	record -> size < 4		3658773	1		<			
ANR	3658807	PtrMemberAccess	record -> size		3658773	0					
ANR	3658808	Identifier	record		3658773	0					
ANR	3658809	Identifier	size		3658773	1					
ANR	3658810	PrimaryExpression	4		3658773	1					
ANR	3658811	RelationalExpression	record -> size < 6		3658773	1		<			
ANR	3658812	PtrMemberAccess	record -> size		3658773	0					
ANR	3658813	Identifier	record		3658773	0					
ANR	3658814	Identifier	size		3658773	1					
ANR	3658815	PrimaryExpression	6		3658773	1					
ANR	3658816	CompoundStatement		7:70:131:131	3658773	1					
ANR	3658817	ExpressionStatement	"eprintf ( ""Invalid Ledata record (bad size)\\n"" )"	328:2:7554:7600	3658773	0	True				
ANR	3658818	CallExpression	"eprintf ( ""Invalid Ledata record (bad size)\\n"" )"		3658773	0					
ANR	3658819	Callee	eprintf		3658773	0					
ANR	3658820	Identifier	eprintf		3658773	0					
ANR	3658821	ArgumentList	"""Invalid Ledata record (bad size)\\n"""		3658773	1					
ANR	3658822	Argument	"""Invalid Ledata record (bad size)\\n"""		3658773	0					
ANR	3658823	PrimaryExpression	"""Invalid Ledata record (bad size)\\n"""		3658773	0					
ANR	3658824	ReturnStatement	return false ;	329:2:7604:7616	3658773	1	True				
ANR	3658825	Identifier	false		3658773	0					
ANR	3658826	ExpressionStatement	"seg_idx = omf_get_idx ( buf + 3 , buf_size - 3 )"	331:1:7622:7667	3658773	5	True				
ANR	3658827	AssignmentExpression	"seg_idx = omf_get_idx ( buf + 3 , buf_size - 3 )"		3658773	0		=			
ANR	3658828	Identifier	seg_idx		3658773	0					
ANR	3658829	CallExpression	"omf_get_idx ( buf + 3 , buf_size - 3 )"		3658773	1					
ANR	3658830	Callee	omf_get_idx		3658773	0					
ANR	3658831	Identifier	omf_get_idx		3658773	0					
ANR	3658832	ArgumentList	buf + 3		3658773	1					
ANR	3658833	Argument	buf + 3		3658773	0					
ANR	3658834	AdditiveExpression	buf + 3		3658773	0		+			
ANR	3658835	Identifier	buf		3658773	0					
ANR	3658836	PrimaryExpression	3		3658773	1					
ANR	3658837	Argument	buf_size - 3		3658773	1					
ANR	3658838	AdditiveExpression	buf_size - 3		3658773	0		-			
ANR	3658839	Identifier	buf_size		3658773	0					
ANR	3658840	PrimaryExpression	3		3658773	1					
ANR	3658841	IfStatement	if ( seg_idx & 0xff00 )		3658773	6					
ANR	3658842	Condition	seg_idx & 0xff00	332:5:7674:7689	3658773	0	True				
ANR	3658843	BitAndExpression	seg_idx & 0xff00		3658773	0		&			
ANR	3658844	Identifier	seg_idx		3658773	0					
ANR	3658845	PrimaryExpression	0xff00		3658773	1					
ANR	3658846	CompoundStatement		12:23:273:273	3658773	1					
ANR	3658847	IfStatement	if ( ( ! ( record -> type & 1 ) && record -> size < 5 ) || ( record -> size < 7 ) )		3658773	0					
ANR	3658848	Condition	( ! ( record -> type & 1 ) && record -> size < 5 ) || ( record -> size < 7 )	333:6:7700:7762	3658773	0	True				
ANR	3658849	OrExpression	( ! ( record -> type & 1 ) && record -> size < 5 ) || ( record -> size < 7 )		3658773	0		||			
ANR	3658850	AndExpression	! ( record -> type & 1 ) && record -> size < 5		3658773	0		&&			
ANR	3658851	UnaryOperationExpression	! ( record -> type & 1 )		3658773	0					
ANR	3658852	UnaryOperator	!		3658773	0					
ANR	3658853	BitAndExpression	record -> type & 1		3658773	1		&			
ANR	3658854	PtrMemberAccess	record -> type		3658773	0					
ANR	3658855	Identifier	record		3658773	0					
ANR	3658856	Identifier	type		3658773	1					
ANR	3658857	PrimaryExpression	1		3658773	1					
ANR	3658858	RelationalExpression	record -> size < 5		3658773	1		<			
ANR	3658859	PtrMemberAccess	record -> size		3658773	0					
ANR	3658860	Identifier	record		3658773	0					
ANR	3658861	Identifier	size		3658773	1					
ANR	3658862	PrimaryExpression	5		3658773	1					
ANR	3658863	RelationalExpression	record -> size < 7		3658773	1		<			
ANR	3658864	PtrMemberAccess	record -> size		3658773	0					
ANR	3658865	Identifier	record		3658773	0					
ANR	3658866	Identifier	size		3658773	1					
ANR	3658867	PrimaryExpression	7		3658773	1					
ANR	3658868	CompoundStatement		13:71:346:346	3658773	1					
ANR	3658869	ExpressionStatement	"eprintf ( ""Invalid Ledata record (bad size)\\n"" )"	334:3:7770:7816	3658773	0	True				
ANR	3658870	CallExpression	"eprintf ( ""Invalid Ledata record (bad size)\\n"" )"		3658773	0					
ANR	3658871	Callee	eprintf		3658773	0					
ANR	3658872	Identifier	eprintf		3658773	0					
ANR	3658873	ArgumentList	"""Invalid Ledata record (bad size)\\n"""		3658773	1					
ANR	3658874	Argument	"""Invalid Ledata record (bad size)\\n"""		3658773	0					
ANR	3658875	PrimaryExpression	"""Invalid Ledata record (bad size)\\n"""		3658773	0					
ANR	3658876	ReturnStatement	return false ;	335:3:7821:7833	3658773	1	True				
ANR	3658877	Identifier	false		3658773	0					
ANR	3658878	ExpressionStatement	ct ++	337:2:7841:7845	3658773	1	True				
ANR	3658879	PostIncDecOperationExpression	ct ++		3658773	0					
ANR	3658880	Identifier	ct		3658773	0					
ANR	3658881	IncDec	++		3658773	1					
ANR	3658882	IfStatement	if ( record -> type == OMF_LEDATA32 )		3658773	7					
ANR	3658883	Condition	record -> type == OMF_LEDATA32	339:5:7855:7882	3658773	0	True				
ANR	3658884	EqualityExpression	record -> type == OMF_LEDATA32		3658773	0		==			
ANR	3658885	PtrMemberAccess	record -> type		3658773	0					
ANR	3658886	Identifier	record		3658773	0					
ANR	3658887	Identifier	type		3658773	1					
ANR	3658888	Identifier	OMF_LEDATA32		3658773	1					
ANR	3658889	CompoundStatement		19:35:466:466	3658773	1					
ANR	3658890	ExpressionStatement	offset = r_read_le32 ( buf + ct )	340:2:7889:7920	3658773	0	True				
ANR	3658891	AssignmentExpression	offset = r_read_le32 ( buf + ct )		3658773	0		=			
ANR	3658892	Identifier	offset		3658773	0					
ANR	3658893	CallExpression	r_read_le32 ( buf + ct )		3658773	1					
ANR	3658894	Callee	r_read_le32		3658773	0					
ANR	3658895	Identifier	r_read_le32		3658773	0					
ANR	3658896	ArgumentList	buf + ct		3658773	1					
ANR	3658897	Argument	buf + ct		3658773	0					
ANR	3658898	AdditiveExpression	buf + ct		3658773	0		+			
ANR	3658899	Identifier	buf		3658773	0					
ANR	3658900	Identifier	ct		3658773	1					
ANR	3658901	ExpressionStatement	ct += 4	341:2:7924:7931	3658773	1	True				
ANR	3658902	AssignmentExpression	ct += 4		3658773	0		+=			
ANR	3658903	Identifier	ct		3658773	0					
ANR	3658904	PrimaryExpression	4		3658773	1					
ANR	3658905	ElseStatement	else		3658773	0					
ANR	3658906	CompoundStatement		22:8:522:522	3658773	0					
ANR	3658907	ExpressionStatement	offset = r_read_le16 ( buf + ct )	343:2:7945:7976	3658773	0	True				
ANR	3658908	AssignmentExpression	offset = r_read_le16 ( buf + ct )		3658773	0		=			
ANR	3658909	Identifier	offset		3658773	0					
ANR	3658910	CallExpression	r_read_le16 ( buf + ct )		3658773	1					
ANR	3658911	Callee	r_read_le16		3658773	0					
ANR	3658912	Identifier	r_read_le16		3658773	0					
ANR	3658913	ArgumentList	buf + ct		3658773	1					
ANR	3658914	Argument	buf + ct		3658773	0					
ANR	3658915	AdditiveExpression	buf + ct		3658773	0		+			
ANR	3658916	Identifier	buf		3658773	0					
ANR	3658917	Identifier	ct		3658773	1					
ANR	3658918	ExpressionStatement	ct += 2	344:2:7980:7987	3658773	1	True				
ANR	3658919	AssignmentExpression	ct += 2		3658773	0		+=			
ANR	3658920	Identifier	ct		3658773	0					
ANR	3658921	PrimaryExpression	2		3658773	1					
ANR	3658922	IfStatement	if ( ! ( ret = R_NEW0 ( OMF_data ) ) )		3658773	8					
ANR	3658923	Condition	! ( ret = R_NEW0 ( OMF_data ) )	346:5:7997:8022	3658773	0	True				
ANR	3658924	UnaryOperationExpression	! ( ret = R_NEW0 ( OMF_data ) )		3658773	0					
ANR	3658925	UnaryOperator	!		3658773	0					
ANR	3658926	AssignmentExpression	ret = R_NEW0 ( OMF_data )		3658773	1		=			
ANR	3658927	Identifier	ret		3658773	0					
ANR	3658928	CallExpression	R_NEW0 ( OMF_data )		3658773	1					
ANR	3658929	Callee	R_NEW0		3658773	0					
ANR	3658930	Identifier	R_NEW0		3658773	0					
ANR	3658931	ArgumentList	OMF_data		3658773	1					
ANR	3658932	Argument	OMF_data		3658773	0					
ANR	3658933	Identifier	OMF_data		3658773	0					
ANR	3658934	CompoundStatement		26:33:606:606	3658773	1					
ANR	3658935	ReturnStatement	return false ;	347:2:8029:8041	3658773	0	True				
ANR	3658936	Identifier	false		3658773	0					
ANR	3658937	ExpressionStatement	record -> content = ret	349:1:8047:8068	3658773	9	True				
ANR	3658938	AssignmentExpression	record -> content = ret		3658773	0		=			
ANR	3658939	PtrMemberAccess	record -> content		3658773	0					
ANR	3658940	Identifier	record		3658773	0					
ANR	3658941	Identifier	content		3658773	1					
ANR	3658942	Identifier	ret		3658773	1					
ANR	3658943	ExpressionStatement	ret -> size = record -> size - 1 - ( ct - 3 )	351:1:8072:8111	3658773	10	True				
ANR	3658944	AssignmentExpression	ret -> size = record -> size - 1 - ( ct - 3 )		3658773	0		=			
ANR	3658945	PtrMemberAccess	ret -> size		3658773	0					
ANR	3658946	Identifier	ret		3658773	0					
ANR	3658947	Identifier	size		3658773	1					
ANR	3658948	AdditiveExpression	record -> size - 1 - ( ct - 3 )		3658773	1		-			
ANR	3658949	PtrMemberAccess	record -> size		3658773	0					
ANR	3658950	Identifier	record		3658773	0					
ANR	3658951	Identifier	size		3658773	1					
ANR	3658952	AdditiveExpression	1 - ( ct - 3 )		3658773	1		-			
ANR	3658953	PrimaryExpression	1		3658773	0					
ANR	3658954	AdditiveExpression	ct - 3		3658773	1		-			
ANR	3658955	Identifier	ct		3658773	0					
ANR	3658956	PrimaryExpression	3		3658773	1					
ANR	3658957	ExpressionStatement	ret -> paddr = global_ct + ct	352:1:8114:8141	3658773	11	True				
ANR	3658958	AssignmentExpression	ret -> paddr = global_ct + ct		3658773	0		=			
ANR	3658959	PtrMemberAccess	ret -> paddr		3658773	0					
ANR	3658960	Identifier	ret		3658773	0					
ANR	3658961	Identifier	paddr		3658773	1					
ANR	3658962	AdditiveExpression	global_ct + ct		3658773	1		+			
ANR	3658963	Identifier	global_ct		3658773	0					
ANR	3658964	Identifier	ct		3658773	1					
ANR	3658965	ExpressionStatement	ret -> offset = offset	353:1:8144:8164	3658773	12	True				
ANR	3658966	AssignmentExpression	ret -> offset = offset		3658773	0		=			
ANR	3658967	PtrMemberAccess	ret -> offset		3658773	0					
ANR	3658968	Identifier	ret		3658773	0					
ANR	3658969	Identifier	offset		3658773	1					
ANR	3658970	Identifier	offset		3658773	1					
ANR	3658971	ExpressionStatement	ret -> seg_idx = seg_idx	354:1:8167:8189	3658773	13	True				
ANR	3658972	AssignmentExpression	ret -> seg_idx = seg_idx		3658773	0		=			
ANR	3658973	PtrMemberAccess	ret -> seg_idx		3658773	0					
ANR	3658974	Identifier	ret		3658773	0					
ANR	3658975	Identifier	seg_idx		3658773	1					
ANR	3658976	Identifier	seg_idx		3658773	1					
ANR	3658977	ExpressionStatement	ret -> next = NULL	355:1:8192:8208	3658773	14	True				
ANR	3658978	AssignmentExpression	ret -> next = NULL		3658773	0		=			
ANR	3658979	PtrMemberAccess	ret -> next		3658773	0					
ANR	3658980	Identifier	ret		3658773	0					
ANR	3658981	Identifier	next		3658773	1					
ANR	3658982	Identifier	NULL		3658773	1					
ANR	3658983	ExpressionStatement	record -> type = OMF_LEDATA	356:1:8211:8236	3658773	15	True				
ANR	3658984	AssignmentExpression	record -> type = OMF_LEDATA		3658773	0		=			
ANR	3658985	PtrMemberAccess	record -> type		3658773	0					
ANR	3658986	Identifier	record		3658773	0					
ANR	3658987	Identifier	type		3658773	1					
ANR	3658988	Identifier	OMF_LEDATA		3658773	1					
ANR	3658989	ReturnStatement	return true ;	358:1:8240:8251	3658773	16	True				
ANR	3658990	Identifier	true		3658773	0					
ANR	3658991	ReturnType	static int		3658773	1					
ANR	3658992	Identifier	load_omf_data		3658773	2					
ANR	3658993	ParameterList	"const ut8 * buf , int buf_size , OMF_record * record , ut64 global_ct"		3658773	3					
ANR	3658994	Parameter	const ut8 * buf	321:25:7352:7365	3658773	0	True				
ANR	3658995	ParameterType	const ut8 *		3658773	0					
ANR	3658996	Identifier	buf		3658773	1					
ANR	3658997	Parameter	int buf_size	321:41:7368:7379	3658773	1	True				
ANR	3658998	ParameterType	int		3658773	0					
ANR	3658999	Identifier	buf_size		3658773	1					
ANR	3659000	Parameter	OMF_record * record	321:55:7382:7399	3658773	2	True				
ANR	3659001	ParameterType	OMF_record *		3658773	0					
ANR	3659002	Identifier	record		3658773	1					
ANR	3659003	Parameter	ut64 global_ct	321:75:7402:7415	3658773	3	True				
ANR	3659004	ParameterType	ut64		3658773	0					
ANR	3659005	Identifier	global_ct		3658773	1					
ANR	3659006	CFGEntryNode	ENTRY		3658773		True				
ANR	3659007	CFGExitNode	EXIT		3658773		True				
ANR	3659008	Symbol	OMF_LEDATA		3658773						
ANR	3659009	Symbol	ret -> seg_idx		3658773						
ANR	3659010	Symbol	* ret		3658773						
ANR	3659011	Symbol	seg_idx		3658773						
ANR	3659012	Symbol	omf_get_idx		3658773						
ANR	3659013	Symbol	global_ct		3658773						
ANR	3659014	Symbol	record		3658773						
ANR	3659015	Symbol	record -> content		3658773						
ANR	3659016	Symbol	record -> type		3658773						
ANR	3659017	Symbol	ret		3658773						
ANR	3659018	Symbol	r_read_le32		3658773						
ANR	3659019	Symbol	NULL		3658773						
ANR	3659020	Symbol	offset		3658773						
ANR	3659021	Symbol	ret -> paddr		3658773						
ANR	3659022	Symbol	record -> size		3658773						
ANR	3659023	Symbol	buf_size		3658773						
ANR	3659024	Symbol	ret -> size		3658773						
ANR	3659025	Symbol	false		3658773						
ANR	3659026	Symbol	r_read_le16		3658773						
ANR	3659027	Symbol	ret -> offset		3658773						
ANR	3659028	Symbol	ct		3658773						
ANR	3659029	Symbol	R_NEW0		3658773						
ANR	3659030	Symbol	buf		3658773						
ANR	3659031	Symbol	ret -> next		3658773						
ANR	3659032	Symbol	* record		3658773						
ANR	3659033	Symbol	OMF_LEDATA32		3658773						
ANR	3659034	Symbol	OMF_data		3658773						
ANR	3659035	Symbol	true		3658773						
ANR	3659036	Function	load_omf_content	362:0:8257:9158							
ANR	3659037	FunctionDef	"load_omf_content (OMF_record * record , const ut8 * buf , ut64 global_ct , ut64 buf_size)"		3659036	0					
ANR	3659038	CompoundStatement		362:95:8352:9158	3659036	0					
ANR	3659039	IfStatement	if ( record -> type == OMF_LNAMES )		3659036	0					
ANR	3659040	Condition	record -> type == OMF_LNAMES	363:5:8359:8384	3659036	0	True				
ANR	3659041	EqualityExpression	record -> type == OMF_LNAMES		3659036	0		==			
ANR	3659042	PtrMemberAccess	record -> type		3659036	0					
ANR	3659043	Identifier	record		3659036	0					
ANR	3659044	Identifier	type		3659036	1					
ANR	3659045	Identifier	OMF_LNAMES		3659036	1					
ANR	3659046	CompoundStatement		2:33:34:34	3659036	1					
ANR	3659047	ReturnStatement	"return load_omf_lnames ( record , buf , buf_size ) ;"	364:2:8391:8437	3659036	0	True				
ANR	3659048	CallExpression	"load_omf_lnames ( record , buf , buf_size )"		3659036	0					
ANR	3659049	Callee	load_omf_lnames		3659036	0					
ANR	3659050	Identifier	load_omf_lnames		3659036	0					
ANR	3659051	ArgumentList	record		3659036	1					
ANR	3659052	Argument	record		3659036	0					
ANR	3659053	Identifier	record		3659036	0					
ANR	3659054	Argument	buf		3659036	1					
ANR	3659055	Identifier	buf		3659036	0					
ANR	3659056	Argument	buf_size		3659036	2					
ANR	3659057	Identifier	buf_size		3659036	0					
ANR	3659058	IfStatement	if ( record -> type == OMF_SEGDEF || record -> type == OMF_SEGDEF32 )		3659036	1					
ANR	3659059	Condition	record -> type == OMF_SEGDEF || record -> type == OMF_SEGDEF32	366:5:8447:8504	3659036	0	True				
ANR	3659060	OrExpression	record -> type == OMF_SEGDEF || record -> type == OMF_SEGDEF32		3659036	0		||			
ANR	3659061	EqualityExpression	record -> type == OMF_SEGDEF		3659036	0		==			
ANR	3659062	PtrMemberAccess	record -> type		3659036	0					
ANR	3659063	Identifier	record		3659036	0					
ANR	3659064	Identifier	type		3659036	1					
ANR	3659065	Identifier	OMF_SEGDEF		3659036	1					
ANR	3659066	EqualityExpression	record -> type == OMF_SEGDEF32		3659036	1		==			
ANR	3659067	PtrMemberAccess	record -> type		3659036	0					
ANR	3659068	Identifier	record		3659036	0					
ANR	3659069	Identifier	type		3659036	1					
ANR	3659070	Identifier	OMF_SEGDEF32		3659036	1					
ANR	3659071	CompoundStatement		5:65:154:154	3659036	1					
ANR	3659072	ReturnStatement	"return load_omf_segdef ( record , buf , buf_size ) ;"	367:2:8511:8557	3659036	0	True				
ANR	3659073	CallExpression	"load_omf_segdef ( record , buf , buf_size )"		3659036	0					
ANR	3659074	Callee	load_omf_segdef		3659036	0					
ANR	3659075	Identifier	load_omf_segdef		3659036	0					
ANR	3659076	ArgumentList	record		3659036	1					
ANR	3659077	Argument	record		3659036	0					
ANR	3659078	Identifier	record		3659036	0					
ANR	3659079	Argument	buf		3659036	1					
ANR	3659080	Identifier	buf		3659036	0					
ANR	3659081	Argument	buf_size		3659036	2					
ANR	3659082	Identifier	buf_size		3659036	0					
ANR	3659083	IfStatement	if ( record -> type == OMF_PUBDEF || record -> type == OMF_PUBDEF32 || record -> type == OMF_LPUBDEF || record -> type == OMF_LPUBDEF32 )		3659036	2					
ANR	3659084	Condition	record -> type == OMF_PUBDEF || record -> type == OMF_PUBDEF32 || record -> type == OMF_LPUBDEF || record -> type == OMF_LPUBDEF32	369:5:8567:8688	3659036	0	True				
ANR	3659085	OrExpression	record -> type == OMF_PUBDEF || record -> type == OMF_PUBDEF32 || record -> type == OMF_LPUBDEF || record -> type == OMF_LPUBDEF32		3659036	0		||			
ANR	3659086	EqualityExpression	record -> type == OMF_PUBDEF		3659036	0		==			
ANR	3659087	PtrMemberAccess	record -> type		3659036	0					
ANR	3659088	Identifier	record		3659036	0					
ANR	3659089	Identifier	type		3659036	1					
ANR	3659090	Identifier	OMF_PUBDEF		3659036	1					
ANR	3659091	OrExpression	record -> type == OMF_PUBDEF32 || record -> type == OMF_LPUBDEF || record -> type == OMF_LPUBDEF32		3659036	1		||			
ANR	3659092	EqualityExpression	record -> type == OMF_PUBDEF32		3659036	0		==			
ANR	3659093	PtrMemberAccess	record -> type		3659036	0					
ANR	3659094	Identifier	record		3659036	0					
ANR	3659095	Identifier	type		3659036	1					
ANR	3659096	Identifier	OMF_PUBDEF32		3659036	1					
ANR	3659097	OrExpression	record -> type == OMF_LPUBDEF || record -> type == OMF_LPUBDEF32		3659036	1		||			
ANR	3659098	EqualityExpression	record -> type == OMF_LPUBDEF		3659036	0		==			
ANR	3659099	PtrMemberAccess	record -> type		3659036	0					
ANR	3659100	Identifier	record		3659036	0					
ANR	3659101	Identifier	type		3659036	1					
ANR	3659102	Identifier	OMF_LPUBDEF		3659036	1					
ANR	3659103	EqualityExpression	record -> type == OMF_LPUBDEF32		3659036	1		==			
ANR	3659104	PtrMemberAccess	record -> type		3659036	0					
ANR	3659105	Identifier	record		3659036	0					
ANR	3659106	Identifier	type		3659036	1					
ANR	3659107	Identifier	OMF_LPUBDEF32		3659036	1					
ANR	3659108	CompoundStatement		8:129:338:338	3659036	1					
ANR	3659109	ReturnStatement	"return load_omf_pubdef ( record , buf , buf_size ) ;"	370:2:8695:8741	3659036	0	True				
ANR	3659110	CallExpression	"load_omf_pubdef ( record , buf , buf_size )"		3659036	0					
ANR	3659111	Callee	load_omf_pubdef		3659036	0					
ANR	3659112	Identifier	load_omf_pubdef		3659036	0					
ANR	3659113	ArgumentList	record		3659036	1					
ANR	3659114	Argument	record		3659036	0					
ANR	3659115	Identifier	record		3659036	0					
ANR	3659116	Argument	buf		3659036	1					
ANR	3659117	Identifier	buf		3659036	0					
ANR	3659118	Argument	buf_size		3659036	2					
ANR	3659119	Identifier	buf_size		3659036	0					
ANR	3659120	IfStatement	if ( record -> type == OMF_LEDATA || record -> type == OMF_LEDATA32 )		3659036	3					
ANR	3659121	Condition	record -> type == OMF_LEDATA || record -> type == OMF_LEDATA32	372:5:8751:8808	3659036	0	True				
ANR	3659122	OrExpression	record -> type == OMF_LEDATA || record -> type == OMF_LEDATA32		3659036	0		||			
ANR	3659123	EqualityExpression	record -> type == OMF_LEDATA		3659036	0		==			
ANR	3659124	PtrMemberAccess	record -> type		3659036	0					
ANR	3659125	Identifier	record		3659036	0					
ANR	3659126	Identifier	type		3659036	1					
ANR	3659127	Identifier	OMF_LEDATA		3659036	1					
ANR	3659128	EqualityExpression	record -> type == OMF_LEDATA32		3659036	1		==			
ANR	3659129	PtrMemberAccess	record -> type		3659036	0					
ANR	3659130	Identifier	record		3659036	0					
ANR	3659131	Identifier	type		3659036	1					
ANR	3659132	Identifier	OMF_LEDATA32		3659036	1					
ANR	3659133	CompoundStatement		11:65:458:458	3659036	1					
ANR	3659134	ReturnStatement	"return load_omf_data ( buf , buf_size , record , global_ct ) ;"	373:2:8815:8870	3659036	0	True				
ANR	3659135	CallExpression	"load_omf_data ( buf , buf_size , record , global_ct )"		3659036	0					
ANR	3659136	Callee	load_omf_data		3659036	0					
ANR	3659137	Identifier	load_omf_data		3659036	0					
ANR	3659138	ArgumentList	buf		3659036	1					
ANR	3659139	Argument	buf		3659036	0					
ANR	3659140	Identifier	buf		3659036	0					
ANR	3659141	Argument	buf_size		3659036	1					
ANR	3659142	Identifier	buf_size		3659036	0					
ANR	3659143	Argument	record		3659036	2					
ANR	3659144	Identifier	record		3659036	0					
ANR	3659145	Argument	global_ct		3659036	3					
ANR	3659146	Identifier	global_ct		3659036	0					
ANR	3659147	IfStatement	if ( ! record -> size )		3659036	4					
ANR	3659148	Condition	! record -> size	376:5:8934:8946	3659036	0	True				
ANR	3659149	UnaryOperationExpression	! record -> size		3659036	0					
ANR	3659150	UnaryOperator	!		3659036	0					
ANR	3659151	PtrMemberAccess	record -> size		3659036	1					
ANR	3659152	Identifier	record		3659036	0					
ANR	3659153	Identifier	size		3659036	1					
ANR	3659154	CompoundStatement		15:20:596:596	3659036	1					
ANR	3659155	ExpressionStatement	"eprintf ( ""Invalid record (size to short)\\n"" )"	377:2:8953:8996	3659036	0	True				
ANR	3659156	CallExpression	"eprintf ( ""Invalid record (size to short)\\n"" )"		3659036	0					
ANR	3659157	Callee	eprintf		3659036	0					
ANR	3659158	Identifier	eprintf		3659036	0					
ANR	3659159	ArgumentList	"""Invalid record (size to short)\\n"""		3659036	1					
ANR	3659160	Argument	"""Invalid record (size to short)\\n"""		3659036	0					
ANR	3659161	PrimaryExpression	"""Invalid record (size to short)\\n"""		3659036	0					
ANR	3659162	ReturnStatement	return false ;	378:2:9000:9012	3659036	1	True				
ANR	3659163	Identifier	false		3659036	0					
ANR	3659164	IfStatement	"if ( ! ( record -> content = R_NEWS0 ( char , record -> size ) ) )"		3659036	5					
ANR	3659165	Condition	"! ( record -> content = R_NEWS0 ( char , record -> size ) )"	380:5:9022:9070	3659036	0	True				
ANR	3659166	UnaryOperationExpression	"! ( record -> content = R_NEWS0 ( char , record -> size ) )"		3659036	0					
ANR	3659167	UnaryOperator	!		3659036	0					
ANR	3659168	AssignmentExpression	"record -> content = R_NEWS0 ( char , record -> size )"		3659036	1		=			
ANR	3659169	PtrMemberAccess	record -> content		3659036	0					
ANR	3659170	Identifier	record		3659036	0					
ANR	3659171	Identifier	content		3659036	1					
ANR	3659172	CallExpression	"R_NEWS0 ( char , record -> size )"		3659036	1					
ANR	3659173	Callee	R_NEWS0		3659036	0					
ANR	3659174	Identifier	R_NEWS0		3659036	0					
ANR	3659175	ArgumentList	char		3659036	1					
ANR	3659176	Argument	char		3659036	0					
ANR	3659177	Identifier	char		3659036	0					
ANR	3659178	Argument	record -> size		3659036	1					
ANR	3659179	PtrMemberAccess	record -> size		3659036	0					
ANR	3659180	Identifier	record		3659036	0					
ANR	3659181	Identifier	size		3659036	1					
ANR	3659182	CompoundStatement		19:56:720:720	3659036	1					
ANR	3659183	ReturnStatement	return false ;	381:2:9077:9089	3659036	0	True				
ANR	3659184	Identifier	false		3659036	0					
ANR	3659185	ExpressionStatement	( ( char * ) record -> content ) [ record -> size - 1 ] = 0	383:1:9095:9142	3659036	6	True				
ANR	3659186	AssignmentExpression	( ( char * ) record -> content ) [ record -> size - 1 ] = 0		3659036	0		=			
ANR	3659187	ArrayIndexing	( ( char * ) record -> content ) [ record -> size - 1 ]		3659036	0					
ANR	3659188	CastExpression	( char * ) record -> content		3659036	0					
ANR	3659189	CastTarget	char *		3659036	0					
ANR	3659190	PtrMemberAccess	record -> content		3659036	1					
ANR	3659191	Identifier	record		3659036	0					
ANR	3659192	Identifier	content		3659036	1					
ANR	3659193	AdditiveExpression	record -> size - 1		3659036	1		-			
ANR	3659194	PtrMemberAccess	record -> size		3659036	0					
ANR	3659195	Identifier	record		3659036	0					
ANR	3659196	Identifier	size		3659036	1					
ANR	3659197	PrimaryExpression	1		3659036	1					
ANR	3659198	PrimaryExpression	0		3659036	1					
ANR	3659199	ReturnStatement	return true ;	384:1:9145:9156	3659036	7	True				
ANR	3659200	Identifier	true		3659036	0					
ANR	3659201	ReturnType	static int		3659036	1					
ANR	3659202	Identifier	load_omf_content		3659036	2					
ANR	3659203	ParameterList	"OMF_record * record , const ut8 * buf , ut64 global_ct , ut64 buf_size"		3659036	3					
ANR	3659204	Parameter	OMF_record * record	362:28:8285:8302	3659036	0	True				
ANR	3659205	ParameterType	OMF_record *		3659036	0					
ANR	3659206	Identifier	record		3659036	1					
ANR	3659207	Parameter	const ut8 * buf	362:48:8305:8318	3659036	1	True				
ANR	3659208	ParameterType	const ut8 *		3659036	0					
ANR	3659209	Identifier	buf		3659036	1					
ANR	3659210	Parameter	ut64 global_ct	362:64:8321:8334	3659036	2	True				
ANR	3659211	ParameterType	ut64		3659036	0					
ANR	3659212	Identifier	global_ct		3659036	1					
ANR	3659213	Parameter	ut64 buf_size	362:80:8337:8349	3659036	3	True				
ANR	3659214	ParameterType	ut64		3659036	0					
ANR	3659215	Identifier	buf_size		3659036	1					
ANR	3659216	CFGEntryNode	ENTRY		3659036		True				
ANR	3659217	CFGExitNode	EXIT		3659036		True				
ANR	3659218	Symbol	OMF_LEDATA		3659036						
ANR	3659219	Symbol	OMF_LPUBDEF		3659036						
ANR	3659220	Symbol	OMF_LNAMES		3659036						
ANR	3659221	Symbol	OMF_SEGDEF32		3659036						
ANR	3659222	Symbol	OMF_PUBDEF		3659036						
ANR	3659223	Symbol	* record -> content		3659036						
ANR	3659224	Symbol	global_ct		3659036						
ANR	3659225	Symbol	OMF_SEGDEF		3659036						
ANR	3659226	Symbol	load_omf_data		3659036						
ANR	3659227	Symbol	record		3659036						
ANR	3659228	Symbol	R_NEWS0		3659036						
ANR	3659229	Symbol	OMF_PUBDEF32		3659036						
ANR	3659230	Symbol	record -> content		3659036						
ANR	3659231	Symbol	record -> type		3659036						
ANR	3659232	Symbol	load_omf_lnames		3659036						
ANR	3659233	Symbol	load_omf_segdef		3659036						
ANR	3659234	Symbol	* * record		3659036						
ANR	3659235	Symbol	record -> size		3659036						
ANR	3659236	Symbol	buf_size		3659036						
ANR	3659237	Symbol	false		3659036						
ANR	3659238	Symbol	buf		3659036						
ANR	3659239	Symbol	* record -> size		3659036						
ANR	3659240	Symbol	* record		3659036						
ANR	3659241	Symbol	OMF_LEDATA32		3659036						
ANR	3659242	Symbol	char		3659036						
ANR	3659243	Symbol	true		3659036						
ANR	3659244	Symbol	OMF_LPUBDEF32		3659036						
ANR	3659245	Symbol	load_omf_pubdef		3659036						
ANR	3659246	Function	load_record_omf	387:0:9161:9942							
ANR	3659247	FunctionDef	"load_record_omf (const ut8 * buf , ut64 global_ct , ut64 buf_size)"		3659246	0					
ANR	3659248	CompoundStatement		387:89:9250:9942	3659246	0					
ANR	3659249	Statement	OMF_record_handler	388:1:9253:9270	3659246	0	True				
ANR	3659250	Statement	*	388:20:9272:9272	3659246	1	True				
ANR	3659251	Statement	new	388:21:9273:9275	3659246	2	True				
ANR	3659252	Statement	=	388:25:9277:9277	3659246	3	True				
ANR	3659253	ExpressionStatement	NULL	388:27:9279:9283	3659246	4	True				
ANR	3659254	Identifier	NULL		3659246	0					
ANR	3659255	IfStatement	"if ( is_valid_omf_type ( * buf ) && r_bin_checksum_omf_ok ( buf , buf_size ) )"		3659246	5					
ANR	3659256	Condition	"is_valid_omf_type ( * buf ) && r_bin_checksum_omf_ok ( buf , buf_size )"	390:5:9291:9355	3659246	0	True				
ANR	3659257	AndExpression	"is_valid_omf_type ( * buf ) && r_bin_checksum_omf_ok ( buf , buf_size )"		3659246	0		&&			
ANR	3659258	CallExpression	is_valid_omf_type ( * buf )		3659246	0					
ANR	3659259	Callee	is_valid_omf_type		3659246	0					
ANR	3659260	Identifier	is_valid_omf_type		3659246	0					
ANR	3659261	ArgumentList	* buf		3659246	1					
ANR	3659262	Argument	* buf		3659246	0					
ANR	3659263	UnaryOperationExpression	* buf		3659246	0					
ANR	3659264	UnaryOperator	*		3659246	0					
ANR	3659265	Identifier	buf		3659246	1					
ANR	3659266	CallExpression	"r_bin_checksum_omf_ok ( buf , buf_size )"		3659246	1					
ANR	3659267	Callee	r_bin_checksum_omf_ok		3659246	0					
ANR	3659268	Identifier	r_bin_checksum_omf_ok		3659246	0					
ANR	3659269	ArgumentList	buf		3659246	1					
ANR	3659270	Argument	buf		3659246	0					
ANR	3659271	Identifier	buf		3659246	0					
ANR	3659272	Argument	buf_size		3659246	1					
ANR	3659273	Identifier	buf_size		3659246	0					
ANR	3659274	CompoundStatement		4:72:107:107	3659246	1					
ANR	3659275	Statement	if	391:2:9362:9363	3659246	0	True				
ANR	3659276	Statement	(	391:5:9365:9365	3659246	1	True				
ANR	3659277	Statement	!	391:6:9366:9366	3659246	2	True				
ANR	3659278	Statement	(	391:7:9367:9367	3659246	3	True				
ANR	3659279	Statement	new	391:8:9368:9370	3659246	4	True				
ANR	3659280	Statement	=	391:12:9372:9372	3659246	5	True				
ANR	3659281	Statement	R_NEW0	391:14:9374:9379	3659246	6	True				
ANR	3659282	Statement	(	391:21:9381:9381	3659246	7	True				
ANR	3659283	Statement	OMF_record_handler	391:22:9382:9399	3659246	8	True				
ANR	3659284	Statement	)	391:40:9400:9400	3659246	9	True				
ANR	3659285	Statement	)	391:41:9401:9401	3659246	10	True				
ANR	3659286	Statement	)	391:42:9402:9402	3659246	11	True				
ANR	3659287	CompoundStatement		5:44:153:153	3659246	12					
ANR	3659288	ReturnStatement	return NULL ;	392:3:9409:9420	3659246	0	True				
ANR	3659289	Identifier	NULL		3659246	0					
ANR	3659290	Statement	(	394:2:9428:9428	3659246	13	True				
ANR	3659291	Statement	(	394:3:9429:9429	3659246	14	True				
ANR	3659292	Statement	OMF_record	394:4:9430:9439	3659246	15	True				
ANR	3659293	Statement	*	394:15:9441:9441	3659246	16	True				
ANR	3659294	Statement	)	394:16:9442:9442	3659246	17	True				
ANR	3659295	Statement	new	394:17:9443:9445	3659246	18	True				
ANR	3659296	Statement	)	394:20:9446:9446	3659246	19	True				
ANR	3659297	Statement	->	394:21:9447:9448	3659246	20	True				
ANR	3659298	ExpressionStatement	type = * buf	394:23:9449:9460	3659246	21	True				
ANR	3659299	AssignmentExpression	type = * buf		3659246	0		=			
ANR	3659300	Identifier	type		3659246	0					
ANR	3659301	UnaryOperationExpression	* buf		3659246	1					
ANR	3659302	UnaryOperator	*		3659246	0					
ANR	3659303	Identifier	buf		3659246	1					
ANR	3659304	Statement	(	395:2:9464:9464	3659246	22	True				
ANR	3659305	Statement	(	395:3:9465:9465	3659246	23	True				
ANR	3659306	Statement	OMF_record	395:4:9466:9475	3659246	24	True				
ANR	3659307	Statement	*	395:15:9477:9477	3659246	25	True				
ANR	3659308	Statement	)	395:16:9478:9478	3659246	26	True				
ANR	3659309	Statement	new	395:17:9479:9481	3659246	27	True				
ANR	3659310	Statement	)	395:20:9482:9482	3659246	28	True				
ANR	3659311	Statement	->	395:21:9483:9484	3659246	29	True				
ANR	3659312	ExpressionStatement	size = r_read_le16 ( buf + 1 )	395:23:9485:9513	3659246	30	True				
ANR	3659313	AssignmentExpression	size = r_read_le16 ( buf + 1 )		3659246	0		=			
ANR	3659314	Identifier	size		3659246	0					
ANR	3659315	CallExpression	r_read_le16 ( buf + 1 )		3659246	1					
ANR	3659316	Callee	r_read_le16		3659246	0					
ANR	3659317	Identifier	r_read_le16		3659246	0					
ANR	3659318	ArgumentList	buf + 1		3659246	1					
ANR	3659319	Argument	buf + 1		3659246	0					
ANR	3659320	AdditiveExpression	buf + 1		3659246	0		+			
ANR	3659321	Identifier	buf		3659246	0					
ANR	3659322	PrimaryExpression	1		3659246	1					
ANR	3659323	Statement	if	398:2:9575:9576	3659246	31	True				
ANR	3659324	Statement	(	398:5:9578:9578	3659246	32	True				
ANR	3659325	Statement	(	398:6:9579:9579	3659246	33	True				
ANR	3659326	Statement	(	398:7:9580:9580	3659246	34	True				
ANR	3659327	Statement	OMF_record	398:8:9581:9590	3659246	35	True				
ANR	3659328	Statement	*	398:19:9592:9592	3659246	36	True				
ANR	3659329	Statement	)	398:20:9593:9593	3659246	37	True				
ANR	3659330	Statement	new	398:21:9594:9596	3659246	38	True				
ANR	3659331	Statement	)	398:24:9597:9597	3659246	39	True				
ANR	3659332	Statement	->	398:25:9598:9599	3659246	40	True				
ANR	3659333	Statement	size	398:27:9600:9603	3659246	41	True				
ANR	3659334	Statement	>	398:32:9605:9605	3659246	42	True				
ANR	3659335	Statement	buf_size	398:34:9607:9614	3659246	43	True				
ANR	3659336	Statement	-	398:43:9616:9616	3659246	44	True				
ANR	3659337	Statement	3	398:45:9618:9618	3659246	45	True				
ANR	3659338	Statement	||	398:47:9620:9621	3659246	46	True				
ANR	3659339	Statement	buf_size	398:50:9623:9630	3659246	47	True				
ANR	3659340	Statement	<	398:59:9632:9632	3659246	48	True				
ANR	3659341	Statement	4	398:61:9634:9634	3659246	49	True				
ANR	3659342	Statement	)	398:62:9635:9635	3659246	50	True				
ANR	3659343	CompoundStatement		12:64:386:386	3659246	51					
ANR	3659344	ExpressionStatement	"eprintf ( ""Invalid record (too short)\\n"" )"	399:4:9643:9682	3659246	0	True				
ANR	3659345	CallExpression	"eprintf ( ""Invalid record (too short)\\n"" )"		3659246	0					
ANR	3659346	Callee	eprintf		3659246	0					
ANR	3659347	Identifier	eprintf		3659246	0					
ANR	3659348	ArgumentList	"""Invalid record (too short)\\n"""		3659246	1					
ANR	3659349	Argument	"""Invalid record (too short)\\n"""		3659246	0					
ANR	3659350	PrimaryExpression	"""Invalid record (too short)\\n"""		3659246	0					
ANR	3659351	Statement	R_FREE	400:4:9688:9693	3659246	1	True				
ANR	3659352	Statement	(	400:10:9694:9694	3659246	2	True				
ANR	3659353	Statement	new	400:11:9695:9697	3659246	3	True				
ANR	3659354	Statement	)	400:14:9698:9698	3659246	4	True				
ANR	3659355	ExpressionStatement		400:15:9699:9699	3659246	5	True				
ANR	3659356	ReturnStatement	return NULL ;	401:4:9705:9716	3659246	6	True				
ANR	3659357	Identifier	NULL		3659246	0					
ANR	3659358	Statement	if	404:2:9725:9726	3659246	52	True				
ANR	3659359	Statement	(	404:5:9728:9728	3659246	53	True				
ANR	3659360	Statement	!	404:6:9729:9729	3659246	54	True				
ANR	3659361	Statement	(	404:7:9730:9730	3659246	55	True				
ANR	3659362	Statement	load_omf_content	404:8:9731:9746	3659246	56	True				
ANR	3659363	Statement	(	404:25:9748:9748	3659246	57	True				
ANR	3659364	Statement	(	404:26:9749:9749	3659246	58	True				
ANR	3659365	Statement	OMF_record	404:27:9750:9759	3659246	59	True				
ANR	3659366	Statement	*	404:38:9761:9761	3659246	60	True				
ANR	3659367	Statement	)	404:39:9762:9762	3659246	61	True				
ANR	3659368	Statement	new	404:40:9763:9765	3659246	62	True				
ANR	3659369	Statement	","	404:43:9766:9766	3659246	63	True				
ANR	3659370	Statement	buf	404:45:9768:9770	3659246	64	True				
ANR	3659371	Statement	","	404:48:9771:9771	3659246	65	True				
ANR	3659372	Statement	global_ct	404:50:9773:9781	3659246	66	True				
ANR	3659373	Statement	","	404:59:9782:9782	3659246	67	True				
ANR	3659374	Statement	buf_size	404:61:9784:9791	3659246	68	True				
ANR	3659375	Statement	)	404:69:9792:9792	3659246	69	True				
ANR	3659376	Statement	)	404:70:9793:9793	3659246	70	True				
ANR	3659377	Statement	)	404:71:9794:9794	3659246	71	True				
ANR	3659378	CompoundStatement		18:73:545:545	3659246	72					
ANR	3659379	Statement	R_FREE	405:4:9802:9807	3659246	0	True				
ANR	3659380	Statement	(	405:10:9808:9808	3659246	1	True				
ANR	3659381	Statement	new	405:11:9809:9811	3659246	2	True				
ANR	3659382	Statement	)	405:14:9812:9812	3659246	3	True				
ANR	3659383	ExpressionStatement		405:15:9813:9813	3659246	4	True				
ANR	3659384	ReturnStatement	return NULL ;	406:4:9819:9830	3659246	5	True				
ANR	3659385	Identifier	NULL		3659246	0					
ANR	3659386	Statement	(	408:2:9838:9838	3659246	73	True				
ANR	3659387	Statement	(	408:3:9839:9839	3659246	74	True				
ANR	3659388	Statement	OMF_record	408:4:9840:9849	3659246	75	True				
ANR	3659389	Statement	*	408:15:9851:9851	3659246	76	True				
ANR	3659390	Statement	)	408:16:9852:9852	3659246	77	True				
ANR	3659391	Statement	new	408:17:9853:9855	3659246	78	True				
ANR	3659392	Statement	)	408:20:9856:9856	3659246	79	True				
ANR	3659393	Statement	->	408:21:9857:9858	3659246	80	True				
ANR	3659394	Statement	checksum	408:23:9859:9866	3659246	81	True				
ANR	3659395	Statement	=	408:32:9868:9868	3659246	82	True				
ANR	3659396	Statement	buf	408:34:9870:9872	3659246	83	True				
ANR	3659397	Statement	[	408:37:9873:9873	3659246	84	True				
ANR	3659398	Statement	2	408:38:9874:9874	3659246	85	True				
ANR	3659399	Statement	+	408:40:9876:9876	3659246	86	True				
ANR	3659400	Statement	(	408:42:9878:9878	3659246	87	True				
ANR	3659401	Statement	(	408:43:9879:9879	3659246	88	True				
ANR	3659402	Statement	OMF_record	408:44:9880:9889	3659246	89	True				
ANR	3659403	Statement	*	408:55:9891:9891	3659246	90	True				
ANR	3659404	Statement	)	408:56:9892:9892	3659246	91	True				
ANR	3659405	Statement	new	408:57:9893:9895	3659246	92	True				
ANR	3659406	Statement	)	408:60:9896:9896	3659246	93	True				
ANR	3659407	Statement	->	408:61:9897:9898	3659246	94	True				
ANR	3659408	Statement	size	408:63:9899:9902	3659246	95	True				
ANR	3659409	Statement	]	408:67:9903:9903	3659246	96	True				
ANR	3659410	ExpressionStatement		408:68:9904:9904	3659246	97	True				
ANR	3659411	Statement	new	409:2:9908:9910	3659246	98	True				
ANR	3659412	Statement	->	409:5:9911:9912	3659246	99	True				
ANR	3659413	ExpressionStatement	next = NULL	409:7:9913:9924	3659246	100	True				
ANR	3659414	AssignmentExpression	next = NULL		3659246	0		=			
ANR	3659415	Identifier	next		3659246	0					
ANR	3659416	Identifier	NULL		3659246	1					
ANR	3659417	Statement	return	411:1:9930:9935	3659246	6	True				
ANR	3659418	Statement	new	411:8:9937:9939	3659246	7	True				
ANR	3659419	ExpressionStatement		411:11:9940:9940	3659246	8	True				
ANR	3659420	ReturnType	static OMF_record_handler *		3659246	1					
ANR	3659421	Identifier	load_record_omf		3659246	2					
ANR	3659422	ParameterList	"const ut8 * buf , ut64 global_ct , ut64 buf_size"		3659246	3					
ANR	3659423	Parameter	const ut8 * buf	387:43:9204:9217	3659246	0	True				
ANR	3659424	ParameterType	const ut8 *		3659246	0					
ANR	3659425	Identifier	buf		3659246	1					
ANR	3659426	Parameter	ut64 global_ct	387:59:9220:9233	3659246	1	True				
ANR	3659427	ParameterType	ut64		3659246	0					
ANR	3659428	Identifier	global_ct		3659246	1					
ANR	3659429	Parameter	ut64 buf_size	387:75:9236:9248	3659246	2	True				
ANR	3659430	ParameterType	ut64		3659246	0					
ANR	3659431	Identifier	buf_size		3659246	1					
ANR	3659432	CFGEntryNode	ENTRY		3659246		True				
ANR	3659433	CFGExitNode	EXIT		3659246		True				
ANR	3659434	Symbol	next		3659246						
ANR	3659435	Symbol	buf		3659246						
ANR	3659436	Symbol	global_ct		3659246						
ANR	3659437	Symbol	* buf		3659246						
ANR	3659438	Symbol	NULL		3659246						
ANR	3659439	Symbol	is_valid_omf_type		3659246						
ANR	3659440	Symbol	size		3659246						
ANR	3659441	Symbol	buf_size		3659246						
ANR	3659442	Symbol	type		3659246						
ANR	3659443	Symbol	r_bin_checksum_omf_ok		3659246						
ANR	3659444	Symbol	r_read_le16		3659246						
ANR	3659445	Function	load_all_omf_records	414:0:9945:10461							
ANR	3659446	FunctionDef	"load_all_omf_records (r_bin_omf_obj * obj , const ut8 * buf , ut64 size)"		3659445	0					
ANR	3659447	CompoundStatement		414:79:10024:10461	3659445	0					
ANR	3659448	IdentifierDeclStatement	ut64 ct = 0 ;	415:1:10027:10038	3659445	0	True				
ANR	3659449	IdentifierDecl	ct = 0		3659445	0					
ANR	3659450	IdentifierDeclType	ut64		3659445	0					
ANR	3659451	Identifier	ct		3659445	1					
ANR	3659452	AssignmentExpression	ct = 0		3659445	2		=			
ANR	3659453	Identifier	ct		3659445	0					
ANR	3659454	PrimaryExpression	0		3659445	1					
ANR	3659455	IdentifierDeclStatement	OMF_record_handler * new_rec = NULL ;	416:1:10041:10075	3659445	1	True				
ANR	3659456	IdentifierDecl	* new_rec = NULL		3659445	0					
ANR	3659457	IdentifierDeclType	OMF_record_handler *		3659445	0					
ANR	3659458	Identifier	new_rec		3659445	1					
ANR	3659459	AssignmentExpression	* new_rec = NULL		3659445	2		=			
ANR	3659460	Identifier	NULL		3659445	0					
ANR	3659461	Identifier	NULL		3659445	1					
ANR	3659462	IdentifierDeclStatement	OMF_record_handler * tmp = NULL ;	417:1:10078:10108	3659445	2	True				
ANR	3659463	IdentifierDecl	* tmp = NULL		3659445	0					
ANR	3659464	IdentifierDeclType	OMF_record_handler *		3659445	0					
ANR	3659465	Identifier	tmp		3659445	1					
ANR	3659466	AssignmentExpression	* tmp = NULL		3659445	2		=			
ANR	3659467	Identifier	NULL		3659445	0					
ANR	3659468	Identifier	NULL		3659445	1					
ANR	3659469	WhileStatement	while ( ct < size )		3659445	3					
ANR	3659470	Condition	ct < size	419:8:10119:10127	3659445	0	True				
ANR	3659471	RelationalExpression	ct < size		3659445	0		<			
ANR	3659472	Identifier	ct		3659445	0					
ANR	3659473	Identifier	size		3659445	1					
ANR	3659474	CompoundStatement		6:19:105:105	3659445	1					
ANR	3659475	IfStatement	"if ( ! ( new_rec = load_record_omf ( buf + ct , ct , size - ct ) ) )"		3659445	0					
ANR	3659476	Condition	"! ( new_rec = load_record_omf ( buf + ct , ct , size - ct ) )"	420:6:10138:10191	3659445	0	True				
ANR	3659477	UnaryOperationExpression	"! ( new_rec = load_record_omf ( buf + ct , ct , size - ct ) )"		3659445	0					
ANR	3659478	UnaryOperator	!		3659445	0					
ANR	3659479	AssignmentExpression	"new_rec = load_record_omf ( buf + ct , ct , size - ct )"		3659445	1		=			
ANR	3659480	Identifier	new_rec		3659445	0					
ANR	3659481	CallExpression	"load_record_omf ( buf + ct , ct , size - ct )"		3659445	1					
ANR	3659482	Callee	load_record_omf		3659445	0					
ANR	3659483	Identifier	load_record_omf		3659445	0					
ANR	3659484	ArgumentList	buf + ct		3659445	1					
ANR	3659485	Argument	buf + ct		3659445	0					
ANR	3659486	AdditiveExpression	buf + ct		3659445	0		+			
ANR	3659487	Identifier	buf		3659445	0					
ANR	3659488	Identifier	ct		3659445	1					
ANR	3659489	Argument	ct		3659445	1					
ANR	3659490	Identifier	ct		3659445	0					
ANR	3659491	Argument	size - ct		3659445	2					
ANR	3659492	AdditiveExpression	size - ct		3659445	0		-			
ANR	3659493	Identifier	size		3659445	0					
ANR	3659494	Identifier	ct		3659445	1					
ANR	3659495	CompoundStatement		7:62:169:169	3659445	1					
ANR	3659496	ReturnStatement	return false ;	421:3:10199:10211	3659445	0	True				
ANR	3659497	Identifier	false		3659445	0					
ANR	3659498	IfStatement	if ( ! tmp )		3659445	1					
ANR	3659499	Condition	! tmp	425:6:10288:10291	3659445	0	True				
ANR	3659500	UnaryOperationExpression	! tmp		3659445	0					
ANR	3659501	UnaryOperator	!		3659445	0					
ANR	3659502	Identifier	tmp		3659445	1					
ANR	3659503	CompoundStatement		12:12:269:269	3659445	1					
ANR	3659504	ExpressionStatement	obj -> records = new_rec	426:3:10299:10321	3659445	0	True				
ANR	3659505	AssignmentExpression	obj -> records = new_rec		3659445	0		=			
ANR	3659506	PtrMemberAccess	obj -> records		3659445	0					
ANR	3659507	Identifier	obj		3659445	0					
ANR	3659508	Identifier	records		3659445	1					
ANR	3659509	Identifier	new_rec		3659445	1					
ANR	3659510	ExpressionStatement	tmp = obj -> records	427:3:10326:10344	3659445	1	True				
ANR	3659511	AssignmentExpression	tmp = obj -> records		3659445	0		=			
ANR	3659512	Identifier	tmp		3659445	0					
ANR	3659513	PtrMemberAccess	obj -> records		3659445	1					
ANR	3659514	Identifier	obj		3659445	0					
ANR	3659515	Identifier	records		3659445	1					
ANR	3659516	ElseStatement	else		3659445	0					
ANR	3659517	CompoundStatement		15:9:330:330	3659445	0					
ANR	3659518	ExpressionStatement	tmp -> next = new_rec	429:3:10360:10379	3659445	0	True				
ANR	3659519	AssignmentExpression	tmp -> next = new_rec		3659445	0		=			
ANR	3659520	PtrMemberAccess	tmp -> next		3659445	0					
ANR	3659521	Identifier	tmp		3659445	0					
ANR	3659522	Identifier	next		3659445	1					
ANR	3659523	Identifier	new_rec		3659445	1					
ANR	3659524	ExpressionStatement	tmp = tmp -> next	430:3:10384:10399	3659445	1	True				
ANR	3659525	AssignmentExpression	tmp = tmp -> next		3659445	0		=			
ANR	3659526	Identifier	tmp		3659445	0					
ANR	3659527	PtrMemberAccess	tmp -> next		3659445	1					
ANR	3659528	Identifier	tmp		3659445	0					
ANR	3659529	Identifier	next		3659445	1					
ANR	3659530	ExpressionStatement	ct += 3 + ( ( OMF_record * ) tmp ) -> size	432:2:10407:10442	3659445	2	True				
ANR	3659531	AssignmentExpression	ct += 3 + ( ( OMF_record * ) tmp ) -> size		3659445	0		+=			
ANR	3659532	Identifier	ct		3659445	0					
ANR	3659533	AdditiveExpression	3 + ( ( OMF_record * ) tmp ) -> size		3659445	1		+			
ANR	3659534	PrimaryExpression	3		3659445	0					
ANR	3659535	PtrMemberAccess	( ( OMF_record * ) tmp ) -> size		3659445	1					
ANR	3659536	CastExpression	( OMF_record * ) tmp		3659445	0					
ANR	3659537	CastTarget	OMF_record *		3659445	0					
ANR	3659538	Identifier	tmp		3659445	1					
ANR	3659539	Identifier	size		3659445	1					
ANR	3659540	ReturnStatement	return true ;	434:1:10448:10459	3659445	4	True				
ANR	3659541	Identifier	true		3659445	0					
ANR	3659542	ReturnType	static int		3659445	1					
ANR	3659543	Identifier	load_all_omf_records		3659445	2					
ANR	3659544	ParameterList	"r_bin_omf_obj * obj , const ut8 * buf , ut64 size"		3659445	3					
ANR	3659545	Parameter	r_bin_omf_obj * obj	414:32:9977:9994	3659445	0	True				
ANR	3659546	ParameterType	r_bin_omf_obj *		3659445	0					
ANR	3659547	Identifier	obj		3659445	1					
ANR	3659548	Parameter	const ut8 * buf	414:52:9997:10010	3659445	1	True				
ANR	3659549	ParameterType	const ut8 *		3659445	0					
ANR	3659550	Identifier	buf		3659445	1					
ANR	3659551	Parameter	ut64 size	414:68:10013:10021	3659445	2	True				
ANR	3659552	ParameterType	ut64		3659445	0					
ANR	3659553	Identifier	size		3659445	1					
ANR	3659554	CFGEntryNode	ENTRY		3659445		True				
ANR	3659555	CFGExitNode	EXIT		3659445		True				
ANR	3659556	Symbol	* obj		3659445						
ANR	3659557	Symbol	* tmp		3659445						
ANR	3659558	Symbol	NULL		3659445						
ANR	3659559	Symbol	load_record_omf		3659445						
ANR	3659560	Symbol	false		3659445						
ANR	3659561	Symbol	tmp -> next		3659445						
ANR	3659562	Symbol	ct		3659445						
ANR	3659563	Symbol	new_rec		3659445						
ANR	3659564	Symbol	buf		3659445						
ANR	3659565	Symbol	size		3659445						
ANR	3659566	Symbol	( ( OMF_record * ) tmp ) -> size		3659445						
ANR	3659567	Symbol	obj		3659445						
ANR	3659568	Symbol	tmp		3659445						
ANR	3659569	Symbol	true		3659445						
ANR	3659570	Symbol	obj -> records		3659445						
ANR	3659571	Function	count_omf_record_type	437:0:10464:10691							
ANR	3659572	FunctionDef	"count_omf_record_type (r_bin_omf_obj * obj , ut8 type)"		3659571	0					
ANR	3659573	CompoundStatement		437:64:10528:10691	3659571	0					
ANR	3659574	IdentifierDeclStatement	OMF_record_handler * tmp = obj -> records ;	438:1:10531:10569	3659571	0	True				
ANR	3659575	IdentifierDecl	* tmp = obj -> records		3659571	0					
ANR	3659576	IdentifierDeclType	OMF_record_handler *		3659571	0					
ANR	3659577	Identifier	tmp		3659571	1					
ANR	3659578	AssignmentExpression	* tmp = obj -> records		3659571	2		=			
ANR	3659579	Identifier	tmp		3659571	0					
ANR	3659580	PtrMemberAccess	obj -> records		3659571	1					
ANR	3659581	Identifier	obj		3659571	0					
ANR	3659582	Identifier	records		3659571	1					
ANR	3659583	IdentifierDeclStatement	ut32 ct = 0 ;	439:1:10572:10583	3659571	1	True				
ANR	3659584	IdentifierDecl	ct = 0		3659571	0					
ANR	3659585	IdentifierDeclType	ut32		3659571	0					
ANR	3659586	Identifier	ct		3659571	1					
ANR	3659587	AssignmentExpression	ct = 0		3659571	2		=			
ANR	3659588	Identifier	ct		3659571	0					
ANR	3659589	PrimaryExpression	0		3659571	1					
ANR	3659590	WhileStatement	while ( tmp )		3659571	2					
ANR	3659591	Condition	tmp	441:8:10594:10596	3659571	0	True				
ANR	3659592	Identifier	tmp		3659571	0					
ANR	3659593	CompoundStatement		5:13:70:70	3659571	1					
ANR	3659594	IfStatement	if ( ( ( OMF_record * ) tmp ) -> type == type )		3659571	0					
ANR	3659595	Condition	( ( OMF_record * ) tmp ) -> type == type	442:6:10607:10639	3659571	0	True				
ANR	3659596	EqualityExpression	( ( OMF_record * ) tmp ) -> type == type		3659571	0		==			
ANR	3659597	PtrMemberAccess	( ( OMF_record * ) tmp ) -> type		3659571	0					
ANR	3659598	CastExpression	( OMF_record * ) tmp		3659571	0					
ANR	3659599	CastTarget	OMF_record *		3659571	0					
ANR	3659600	Identifier	tmp		3659571	1					
ANR	3659601	Identifier	type		3659571	1					
ANR	3659602	Identifier	type		3659571	1					
ANR	3659603	CompoundStatement		6:41:113:113	3659571	1					
ANR	3659604	ExpressionStatement	ct ++	443:3:10647:10651	3659571	0	True				
ANR	3659605	PostIncDecOperationExpression	ct ++		3659571	0					
ANR	3659606	Identifier	ct		3659571	0					
ANR	3659607	IncDec	++		3659571	1					
ANR	3659608	ExpressionStatement	tmp = tmp -> next	445:2:10659:10674	3659571	1	True				
ANR	3659609	AssignmentExpression	tmp = tmp -> next		3659571	0		=			
ANR	3659610	Identifier	tmp		3659571	0					
ANR	3659611	PtrMemberAccess	tmp -> next		3659571	1					
ANR	3659612	Identifier	tmp		3659571	0					
ANR	3659613	Identifier	next		3659571	1					
ANR	3659614	ReturnStatement	return ct ;	447:1:10680:10689	3659571	3	True				
ANR	3659615	Identifier	ct		3659571	0					
ANR	3659616	ReturnType	static ut32		3659571	1					
ANR	3659617	Identifier	count_omf_record_type		3659571	2					
ANR	3659618	ParameterList	"r_bin_omf_obj * obj , ut8 type"		3659571	3					
ANR	3659619	Parameter	r_bin_omf_obj * obj	437:34:10498:10515	3659571	0	True				
ANR	3659620	ParameterType	r_bin_omf_obj *		3659571	0					
ANR	3659621	Identifier	obj		3659571	1					
ANR	3659622	Parameter	ut8 type	437:54:10518:10525	3659571	1	True				
ANR	3659623	ParameterType	ut8		3659571	0					
ANR	3659624	Identifier	type		3659571	1					
ANR	3659625	CFGEntryNode	ENTRY		3659571		True				
ANR	3659626	CFGExitNode	EXIT		3659571		True				
ANR	3659627	Symbol	* obj		3659571						
ANR	3659628	Symbol	ct		3659571						
ANR	3659629	Symbol	* tmp		3659571						
ANR	3659630	Symbol	obj		3659571						
ANR	3659631	Symbol	tmp		3659571						
ANR	3659632	Symbol	( ( OMF_record * ) tmp ) -> type		3659571						
ANR	3659633	Symbol	type		3659571						
ANR	3659634	Symbol	obj -> records		3659571						
ANR	3659635	Symbol	tmp -> next		3659571						
ANR	3659636	Function	count_omf_multi_record_type	450:0:10694:10987							
ANR	3659637	FunctionDef	"count_omf_multi_record_type (r_bin_omf_obj * obj , ut8 type)"		3659636	0					
ANR	3659638	CompoundStatement		450:70:10764:10987	3659636	0					
ANR	3659639	IdentifierDeclStatement	OMF_record_handler * tmp = obj -> records ;	451:1:10767:10805	3659636	0	True				
ANR	3659640	IdentifierDecl	* tmp = obj -> records		3659636	0					
ANR	3659641	IdentifierDeclType	OMF_record_handler *		3659636	0					
ANR	3659642	Identifier	tmp		3659636	1					
ANR	3659643	AssignmentExpression	* tmp = obj -> records		3659636	2		=			
ANR	3659644	Identifier	tmp		3659636	0					
ANR	3659645	PtrMemberAccess	obj -> records		3659636	1					
ANR	3659646	Identifier	obj		3659636	0					
ANR	3659647	Identifier	records		3659636	1					
ANR	3659648	IdentifierDeclStatement	ut32 ct = 0 ;	452:1:10808:10819	3659636	1	True				
ANR	3659649	IdentifierDecl	ct = 0		3659636	0					
ANR	3659650	IdentifierDeclType	ut32		3659636	0					
ANR	3659651	Identifier	ct		3659636	1					
ANR	3659652	AssignmentExpression	ct = 0		3659636	2		=			
ANR	3659653	Identifier	ct		3659636	0					
ANR	3659654	PrimaryExpression	0		3659636	1					
ANR	3659655	WhileStatement	while ( tmp )		3659636	2					
ANR	3659656	Condition	tmp	454:8:10830:10832	3659636	0	True				
ANR	3659657	Identifier	tmp		3659636	0					
ANR	3659658	CompoundStatement		5:13:70:70	3659636	1					
ANR	3659659	IfStatement	if ( ( ( OMF_record * ) tmp ) -> type == type )		3659636	0					
ANR	3659660	Condition	( ( OMF_record * ) tmp ) -> type == type	455:6:10843:10875	3659636	0	True				
ANR	3659661	EqualityExpression	( ( OMF_record * ) tmp ) -> type == type		3659636	0		==			
ANR	3659662	PtrMemberAccess	( ( OMF_record * ) tmp ) -> type		3659636	0					
ANR	3659663	CastExpression	( OMF_record * ) tmp		3659636	0					
ANR	3659664	CastTarget	OMF_record *		3659636	0					
ANR	3659665	Identifier	tmp		3659636	1					
ANR	3659666	Identifier	type		3659636	1					
ANR	3659667	Identifier	type		3659636	1					
ANR	3659668	CompoundStatement		6:41:113:113	3659636	1					
ANR	3659669	ExpressionStatement	ct += ( ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content ) -> nb_elem	456:3:10883:10947	3659636	0	True				
ANR	3659670	AssignmentExpression	ct += ( ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content ) -> nb_elem		3659636	0		+=			
ANR	3659671	Identifier	ct		3659636	0					
ANR	3659672	PtrMemberAccess	( ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content ) -> nb_elem		3659636	1					
ANR	3659673	CastExpression	( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content		3659636	0					
ANR	3659674	CastTarget	OMF_multi_datas *		3659636	0					
ANR	3659675	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3659636	1					
ANR	3659676	CastExpression	( OMF_record * ) tmp		3659636	0					
ANR	3659677	CastTarget	OMF_record *		3659636	0					
ANR	3659678	Identifier	tmp		3659636	1					
ANR	3659679	Identifier	content		3659636	1					
ANR	3659680	Identifier	nb_elem		3659636	1					
ANR	3659681	ExpressionStatement	tmp = tmp -> next	458:2:10955:10970	3659636	1	True				
ANR	3659682	AssignmentExpression	tmp = tmp -> next		3659636	0		=			
ANR	3659683	Identifier	tmp		3659636	0					
ANR	3659684	PtrMemberAccess	tmp -> next		3659636	1					
ANR	3659685	Identifier	tmp		3659636	0					
ANR	3659686	Identifier	next		3659636	1					
ANR	3659687	ReturnStatement	return ct ;	460:1:10976:10985	3659636	3	True				
ANR	3659688	Identifier	ct		3659636	0					
ANR	3659689	ReturnType	static ut32		3659636	1					
ANR	3659690	Identifier	count_omf_multi_record_type		3659636	2					
ANR	3659691	ParameterList	"r_bin_omf_obj * obj , ut8 type"		3659636	3					
ANR	3659692	Parameter	r_bin_omf_obj * obj	450:40:10734:10751	3659636	0	True				
ANR	3659693	ParameterType	r_bin_omf_obj *		3659636	0					
ANR	3659694	Identifier	obj		3659636	1					
ANR	3659695	Parameter	ut8 type	450:60:10754:10761	3659636	1	True				
ANR	3659696	ParameterType	ut8		3659636	0					
ANR	3659697	Identifier	type		3659636	1					
ANR	3659698	CFGEntryNode	ENTRY		3659636		True				
ANR	3659699	CFGExitNode	EXIT		3659636		True				
ANR	3659700	Symbol	* obj		3659636						
ANR	3659701	Symbol	* tmp		3659636						
ANR	3659702	Symbol	* * tmp		3659636						
ANR	3659703	Symbol	type		3659636						
ANR	3659704	Symbol	tmp -> next		3659636						
ANR	3659705	Symbol	* ( ( OMF_record * ) tmp ) -> content		3659636						
ANR	3659706	Symbol	ct		3659636						
ANR	3659707	Symbol	obj		3659636						
ANR	3659708	Symbol	tmp		3659636						
ANR	3659709	Symbol	( ( OMF_record * ) tmp ) -> content		3659636						
ANR	3659710	Symbol	( ( OMF_record * ) tmp ) -> type		3659636						
ANR	3659711	Symbol	obj -> records		3659636						
ANR	3659712	Symbol	( ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content ) -> nb_elem		3659636						
ANR	3659713	Function	get_next_omf_record_type	463:0:10990:11194							
ANR	3659714	FunctionDef	"get_next_omf_record_type (OMF_record_handler * tmp , ut8 type)"		3659713	0					
ANR	3659715	CompoundStatement		463:87:11077:11194	3659713	0					
ANR	3659716	WhileStatement	while ( tmp )		3659713	0					
ANR	3659717	Condition	tmp	464:8:11087:11089	3659713	0	True				
ANR	3659718	Identifier	tmp		3659713	0					
ANR	3659719	CompoundStatement		2:13:14:14	3659713	1					
ANR	3659720	IfStatement	if ( ( ( OMF_record * ) tmp ) -> type == type )		3659713	0					
ANR	3659721	Condition	( ( OMF_record * ) tmp ) -> type == type	465:6:11100:11132	3659713	0	True				
ANR	3659722	EqualityExpression	( ( OMF_record * ) tmp ) -> type == type		3659713	0		==			
ANR	3659723	PtrMemberAccess	( ( OMF_record * ) tmp ) -> type		3659713	0					
ANR	3659724	CastExpression	( OMF_record * ) tmp		3659713	0					
ANR	3659725	CastTarget	OMF_record *		3659713	0					
ANR	3659726	Identifier	tmp		3659713	1					
ANR	3659727	Identifier	type		3659713	1					
ANR	3659728	Identifier	type		3659713	1					
ANR	3659729	CompoundStatement		3:41:57:57	3659713	1					
ANR	3659730	ReturnStatement	return ( tmp ) ;	466:3:11140:11152	3659713	0	True				
ANR	3659731	Identifier	tmp		3659713	0					
ANR	3659732	ExpressionStatement	tmp = tmp -> next	468:2:11160:11175	3659713	1	True				
ANR	3659733	AssignmentExpression	tmp = tmp -> next		3659713	0		=			
ANR	3659734	Identifier	tmp		3659713	0					
ANR	3659735	PtrMemberAccess	tmp -> next		3659713	1					
ANR	3659736	Identifier	tmp		3659713	0					
ANR	3659737	Identifier	next		3659713	1					
ANR	3659738	ReturnStatement	return NULL ;	470:1:11181:11192	3659713	1	True				
ANR	3659739	Identifier	NULL		3659713	0					
ANR	3659740	ReturnType	static OMF_record_handler *		3659713	1					
ANR	3659741	Identifier	get_next_omf_record_type		3659713	2					
ANR	3659742	ParameterList	"OMF_record_handler * tmp , ut8 type"		3659713	3					
ANR	3659743	Parameter	OMF_record_handler * tmp	463:52:11042:11064	3659713	0	True				
ANR	3659744	ParameterType	OMF_record_handler *		3659713	0					
ANR	3659745	Identifier	tmp		3659713	1					
ANR	3659746	Parameter	ut8 type	463:77:11067:11074	3659713	1	True				
ANR	3659747	ParameterType	ut8		3659713	0					
ANR	3659748	Identifier	type		3659713	1					
ANR	3659749	CFGEntryNode	ENTRY		3659713		True				
ANR	3659750	CFGExitNode	EXIT		3659713		True				
ANR	3659751	Symbol	* tmp		3659713						
ANR	3659752	Symbol	NULL		3659713						
ANR	3659753	Symbol	tmp		3659713						
ANR	3659754	Symbol	( ( OMF_record * ) tmp ) -> type		3659713						
ANR	3659755	Symbol	type		3659713						
ANR	3659756	Symbol	tmp -> next		3659713						
ANR	3659757	Function	cpy_omf_names	473:0:11197:11737							
ANR	3659758	FunctionDef	cpy_omf_names (r_bin_omf_obj * obj)		3659757	0					
ANR	3659759	CompoundStatement		473:45:11242:11737	3659757	0					
ANR	3659760	IdentifierDeclStatement	OMF_record_handler * tmp = obj -> records ;	474:1:11245:11283	3659757	0	True				
ANR	3659761	IdentifierDecl	* tmp = obj -> records		3659757	0					
ANR	3659762	IdentifierDeclType	OMF_record_handler *		3659757	0					
ANR	3659763	Identifier	tmp		3659757	1					
ANR	3659764	AssignmentExpression	* tmp = obj -> records		3659757	2		=			
ANR	3659765	Identifier	tmp		3659757	0					
ANR	3659766	PtrMemberAccess	obj -> records		3659757	1					
ANR	3659767	Identifier	obj		3659757	0					
ANR	3659768	Identifier	records		3659757	1					
ANR	3659769	IdentifierDeclStatement	OMF_multi_datas * lname ;	475:1:11286:11308	3659757	1	True				
ANR	3659770	IdentifierDecl	* lname		3659757	0					
ANR	3659771	IdentifierDeclType	OMF_multi_datas *		3659757	0					
ANR	3659772	Identifier	lname		3659757	1					
ANR	3659773	IdentifierDeclStatement	int ct_obj = 0 ;	476:1:11311:11325	3659757	2	True				
ANR	3659774	IdentifierDecl	ct_obj = 0		3659757	0					
ANR	3659775	IdentifierDeclType	int		3659757	0					
ANR	3659776	Identifier	ct_obj		3659757	1					
ANR	3659777	AssignmentExpression	ct_obj = 0		3659757	2		=			
ANR	3659778	Identifier	ct_obj		3659757	0					
ANR	3659779	PrimaryExpression	0		3659757	1					
ANR	3659780	IdentifierDeclStatement	int ct_rec ;	477:1:11328:11338	3659757	3	True				
ANR	3659781	IdentifierDecl	ct_rec		3659757	0					
ANR	3659782	IdentifierDeclType	int		3659757	0					
ANR	3659783	Identifier	ct_rec		3659757	1					
ANR	3659784	WhileStatement	"while ( ( tmp = get_next_omf_record_type ( tmp , OMF_LNAMES ) ) )"		3659757	4					
ANR	3659785	Condition	"tmp = get_next_omf_record_type ( tmp , OMF_LNAMES )"	479:8:11349:11397	3659757	0	True				
ANR	3659786	AssignmentExpression	"tmp = get_next_omf_record_type ( tmp , OMF_LNAMES )"		3659757	0		=			
ANR	3659787	Identifier	tmp		3659757	0					
ANR	3659788	CallExpression	"get_next_omf_record_type ( tmp , OMF_LNAMES )"		3659757	1					
ANR	3659789	Callee	get_next_omf_record_type		3659757	0					
ANR	3659790	Identifier	get_next_omf_record_type		3659757	0					
ANR	3659791	ArgumentList	tmp		3659757	1					
ANR	3659792	Argument	tmp		3659757	0					
ANR	3659793	Identifier	tmp		3659757	0					
ANR	3659794	Argument	OMF_LNAMES		3659757	1					
ANR	3659795	Identifier	OMF_LNAMES		3659757	0					
ANR	3659796	CompoundStatement		7:59:157:157	3659757	1					
ANR	3659797	ExpressionStatement	lname = ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content	480:2:11404:11459	3659757	0	True				
ANR	3659798	AssignmentExpression	lname = ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content		3659757	0		=			
ANR	3659799	Identifier	lname		3659757	0					
ANR	3659800	CastExpression	( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content		3659757	1					
ANR	3659801	CastTarget	OMF_multi_datas *		3659757	0					
ANR	3659802	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3659757	1					
ANR	3659803	CastExpression	( OMF_record * ) tmp		3659757	0					
ANR	3659804	CastTarget	OMF_record *		3659757	0					
ANR	3659805	Identifier	tmp		3659757	1					
ANR	3659806	Identifier	content		3659757	1					
ANR	3659807	ExpressionStatement	ct_rec = - 1	482:2:11464:11475	3659757	1	True				
ANR	3659808	AssignmentExpression	ct_rec = - 1		3659757	0		=			
ANR	3659809	Identifier	ct_rec		3659757	0					
ANR	3659810	UnaryOperationExpression	- 1		3659757	1					
ANR	3659811	UnaryOperator	-		3659757	0					
ANR	3659812	PrimaryExpression	1		3659757	1					
ANR	3659813	WhileStatement	while ( ++ ct_rec < lname -> nb_elem )		3659757	2					
ANR	3659814	Condition	++ ct_rec < lname -> nb_elem	483:9:11486:11510	3659757	0	True				
ANR	3659815	RelationalExpression	++ ct_rec < lname -> nb_elem		3659757	0		<			
ANR	3659816	UnaryExpression	++ ct_rec		3659757	0					
ANR	3659817	IncDec	++		3659757	0					
ANR	3659818	Identifier	ct_rec		3659757	1					
ANR	3659819	PtrMemberAccess	lname -> nb_elem		3659757	1					
ANR	3659820	Identifier	lname		3659757	0					
ANR	3659821	Identifier	nb_elem		3659757	1					
ANR	3659822	CompoundStatement		11:36:270:270	3659757	1					
ANR	3659823	IfStatement	if ( ! ( ( char * * ) lname -> elems ) [ ct_rec ] )		3659757	0					
ANR	3659824	Condition	! ( ( char * * ) lname -> elems ) [ ct_rec ]	484:7:11522:11553	3659757	0	True				
ANR	3659825	UnaryOperationExpression	! ( ( char * * ) lname -> elems ) [ ct_rec ]		3659757	0					
ANR	3659826	UnaryOperator	!		3659757	0					
ANR	3659827	ArrayIndexing	( ( char * * ) lname -> elems ) [ ct_rec ]		3659757	1					
ANR	3659828	CastExpression	( char * * ) lname -> elems		3659757	0					
ANR	3659829	CastTarget	char * *		3659757	0					
ANR	3659830	PtrMemberAccess	lname -> elems		3659757	1					
ANR	3659831	Identifier	lname		3659757	0					
ANR	3659832	Identifier	elems		3659757	1					
ANR	3659833	Identifier	ct_rec		3659757	1					
ANR	3659834	CompoundStatement		12:41:313:313	3659757	1					
ANR	3659835	ExpressionStatement	obj -> names [ ct_obj ++ ] = NULL	485:4:11562:11589	3659757	0	True				
ANR	3659836	AssignmentExpression	obj -> names [ ct_obj ++ ] = NULL		3659757	0		=			
ANR	3659837	ArrayIndexing	obj -> names [ ct_obj ++ ]		3659757	0					
ANR	3659838	PtrMemberAccess	obj -> names		3659757	0					
ANR	3659839	Identifier	obj		3659757	0					
ANR	3659840	Identifier	names		3659757	1					
ANR	3659841	PostIncDecOperationExpression	ct_obj ++		3659757	1					
ANR	3659842	Identifier	ct_obj		3659757	0					
ANR	3659843	IncDec	++		3659757	1					
ANR	3659844	Identifier	NULL		3659757	1					
ANR	3659845	ElseStatement	else		3659757	0					
ANR	3659846	IfStatement	if ( ! ( obj -> names [ ct_obj ++ ] = strdup ( ( ( char * * ) lname -> elems ) [ ct_rec ] ) ) )		3659757	0					
ANR	3659847	Condition	! ( obj -> names [ ct_obj ++ ] = strdup ( ( ( char * * ) lname -> elems ) [ ct_rec ] ) )	486:14:11605:11669	3659757	0	True				
ANR	3659848	UnaryOperationExpression	! ( obj -> names [ ct_obj ++ ] = strdup ( ( ( char * * ) lname -> elems ) [ ct_rec ] ) )		3659757	0					
ANR	3659849	UnaryOperator	!		3659757	0					
ANR	3659850	AssignmentExpression	obj -> names [ ct_obj ++ ] = strdup ( ( ( char * * ) lname -> elems ) [ ct_rec ] )		3659757	1		=			
ANR	3659851	ArrayIndexing	obj -> names [ ct_obj ++ ]		3659757	0					
ANR	3659852	PtrMemberAccess	obj -> names		3659757	0					
ANR	3659853	Identifier	obj		3659757	0					
ANR	3659854	Identifier	names		3659757	1					
ANR	3659855	PostIncDecOperationExpression	ct_obj ++		3659757	1					
ANR	3659856	Identifier	ct_obj		3659757	0					
ANR	3659857	IncDec	++		3659757	1					
ANR	3659858	CallExpression	strdup ( ( ( char * * ) lname -> elems ) [ ct_rec ] )		3659757	1					
ANR	3659859	Callee	strdup		3659757	0					
ANR	3659860	Identifier	strdup		3659757	0					
ANR	3659861	ArgumentList	( ( char * * ) lname -> elems ) [ ct_rec ]		3659757	1					
ANR	3659862	Argument	( ( char * * ) lname -> elems ) [ ct_rec ]		3659757	0					
ANR	3659863	ArrayIndexing	( ( char * * ) lname -> elems ) [ ct_rec ]		3659757	0					
ANR	3659864	CastExpression	( char * * ) lname -> elems		3659757	0					
ANR	3659865	CastTarget	char * *		3659757	0					
ANR	3659866	PtrMemberAccess	lname -> elems		3659757	1					
ANR	3659867	Identifier	lname		3659757	0					
ANR	3659868	Identifier	elems		3659757	1					
ANR	3659869	Identifier	ct_rec		3659757	1					
ANR	3659870	CompoundStatement		14:81:429:429	3659757	1					
ANR	3659871	ReturnStatement	return false ;	487:4:11678:11690	3659757	0	True				
ANR	3659872	Identifier	false		3659757	0					
ANR	3659873	ExpressionStatement	tmp = tmp -> next	490:2:11703:11718	3659757	3	True				
ANR	3659874	AssignmentExpression	tmp = tmp -> next		3659757	0		=			
ANR	3659875	Identifier	tmp		3659757	0					
ANR	3659876	PtrMemberAccess	tmp -> next		3659757	1					
ANR	3659877	Identifier	tmp		3659757	0					
ANR	3659878	Identifier	next		3659757	1					
ANR	3659879	ReturnStatement	return true ;	492:1:11724:11735	3659757	5	True				
ANR	3659880	Identifier	true		3659757	0					
ANR	3659881	ReturnType	static int		3659757	1					
ANR	3659882	Identifier	cpy_omf_names		3659757	2					
ANR	3659883	ParameterList	r_bin_omf_obj * obj		3659757	3					
ANR	3659884	Parameter	r_bin_omf_obj * obj	473:25:11222:11239	3659757	0	True				
ANR	3659885	ParameterType	r_bin_omf_obj *		3659757	0					
ANR	3659886	Identifier	obj		3659757	1					
ANR	3659887	CFGEntryNode	ENTRY		3659757		True				
ANR	3659888	CFGExitNode	EXIT		3659757		True				
ANR	3659889	Symbol	* ct_rec		3659757						
ANR	3659890	Symbol	* tmp		3659757						
ANR	3659891	Symbol	* lname		3659757						
ANR	3659892	Symbol	OMF_LNAMES		3659757						
ANR	3659893	Symbol	* * obj		3659757						
ANR	3659894	Symbol	tmp -> next		3659757						
ANR	3659895	Symbol	lname -> nb_elem		3659757						
ANR	3659896	Symbol	lname		3659757						
ANR	3659897	Symbol	tmp		3659757						
ANR	3659898	Symbol	ct_obj		3659757						
ANR	3659899	Symbol	( ( OMF_record * ) tmp ) -> content		3659757						
ANR	3659900	Symbol	lname -> elems		3659757						
ANR	3659901	Symbol	obj -> names		3659757						
ANR	3659902	Symbol	* obj		3659757						
ANR	3659903	Symbol	NULL		3659757						
ANR	3659904	Symbol	* obj -> names		3659757						
ANR	3659905	Symbol	false		3659757						
ANR	3659906	Symbol	get_next_omf_record_type		3659757						
ANR	3659907	Symbol	* * lname		3659757						
ANR	3659908	Symbol	* lname -> elems		3659757						
ANR	3659909	Symbol	obj		3659757						
ANR	3659910	Symbol	true		3659757						
ANR	3659911	Symbol	strdup		3659757						
ANR	3659912	Symbol	obj -> records		3659757						
ANR	3659913	Symbol	ct_rec		3659757						
ANR	3659914	Function	get_omf_section_info	495:0:11740:12231							
ANR	3659915	FunctionDef	get_omf_section_info (r_bin_omf_obj * obj)		3659914	0					
ANR	3659916	CompoundStatement		495:53:11793:12231	3659914	0					
ANR	3659917	IdentifierDeclStatement	OMF_record_handler * tmp = obj -> records ;	496:1:11796:11834	3659914	0	True				
ANR	3659918	IdentifierDecl	* tmp = obj -> records		3659914	0					
ANR	3659919	IdentifierDeclType	OMF_record_handler *		3659914	0					
ANR	3659920	Identifier	tmp		3659914	1					
ANR	3659921	AssignmentExpression	* tmp = obj -> records		3659914	2		=			
ANR	3659922	Identifier	tmp		3659914	0					
ANR	3659923	PtrMemberAccess	obj -> records		3659914	1					
ANR	3659924	Identifier	obj		3659914	0					
ANR	3659925	Identifier	records		3659914	1					
ANR	3659926	IdentifierDeclStatement	ut32 ct_obj = 0 ;	497:1:11837:11852	3659914	1	True				
ANR	3659927	IdentifierDecl	ct_obj = 0		3659914	0					
ANR	3659928	IdentifierDeclType	ut32		3659914	0					
ANR	3659929	Identifier	ct_obj		3659914	1					
ANR	3659930	AssignmentExpression	ct_obj = 0		3659914	2		=			
ANR	3659931	Identifier	ct_obj		3659914	0					
ANR	3659932	PrimaryExpression	0		3659914	1					
ANR	3659933	WhileStatement	"while ( ( tmp = get_next_omf_record_type ( tmp , OMF_SEGDEF ) ) )"		3659914	2					
ANR	3659934	Condition	"tmp = get_next_omf_record_type ( tmp , OMF_SEGDEF )"	499:8:11863:11912	3659914	0	True				
ANR	3659935	AssignmentExpression	"tmp = get_next_omf_record_type ( tmp , OMF_SEGDEF )"		3659914	0		=			
ANR	3659936	Identifier	tmp		3659914	0					
ANR	3659937	CallExpression	"get_next_omf_record_type ( tmp , OMF_SEGDEF )"		3659914	1					
ANR	3659938	Callee	get_next_omf_record_type		3659914	0					
ANR	3659939	Identifier	get_next_omf_record_type		3659914	0					
ANR	3659940	ArgumentList	tmp		3659914	1					
ANR	3659941	Argument	tmp		3659914	0					
ANR	3659942	Identifier	tmp		3659914	0					
ANR	3659943	Argument	OMF_SEGDEF		3659914	1					
ANR	3659944	Identifier	OMF_SEGDEF		3659914	0					
ANR	3659945	CompoundStatement		5:60:121:121	3659914	1					
ANR	3659946	ExpressionStatement	obj -> sections [ ct_obj ] = ( ( OMF_record * ) tmp ) -> content	500:2:11919:11971	3659914	0	True				
ANR	3659947	AssignmentExpression	obj -> sections [ ct_obj ] = ( ( OMF_record * ) tmp ) -> content		3659914	0		=			
ANR	3659948	ArrayIndexing	obj -> sections [ ct_obj ]		3659914	0					
ANR	3659949	PtrMemberAccess	obj -> sections		3659914	0					
ANR	3659950	Identifier	obj		3659914	0					
ANR	3659951	Identifier	sections		3659914	1					
ANR	3659952	Identifier	ct_obj		3659914	1					
ANR	3659953	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3659914	1					
ANR	3659954	CastExpression	( OMF_record * ) tmp		3659914	0					
ANR	3659955	CastTarget	OMF_record *		3659914	0					
ANR	3659956	Identifier	tmp		3659914	1					
ANR	3659957	Identifier	content		3659914	1					
ANR	3659958	ExpressionStatement	( ( OMF_record * ) tmp ) -> content = NULL	501:2:11975:12010	3659914	1	True				
ANR	3659959	AssignmentExpression	( ( OMF_record * ) tmp ) -> content = NULL		3659914	0		=			
ANR	3659960	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3659914	0					
ANR	3659961	CastExpression	( OMF_record * ) tmp		3659914	0					
ANR	3659962	CastTarget	OMF_record *		3659914	0					
ANR	3659963	Identifier	tmp		3659914	1					
ANR	3659964	Identifier	content		3659914	1					
ANR	3659965	Identifier	NULL		3659914	1					
ANR	3659966	IfStatement	if ( ! ct_obj )		3659914	2					
ANR	3659967	Condition	! ct_obj	503:6:12019:12025	3659914	0	True				
ANR	3659968	UnaryOperationExpression	! ct_obj		3659914	0					
ANR	3659969	UnaryOperator	!		3659914	0					
ANR	3659970	Identifier	ct_obj		3659914	1					
ANR	3659971	CompoundStatement		9:15:234:234	3659914	1					
ANR	3659972	ExpressionStatement	obj -> sections [ ct_obj ] -> vaddr = 0	504:3:12033:12065	3659914	0	True				
ANR	3659973	AssignmentExpression	obj -> sections [ ct_obj ] -> vaddr = 0		3659914	0		=			
ANR	3659974	PtrMemberAccess	obj -> sections [ ct_obj ] -> vaddr		3659914	0					
ANR	3659975	ArrayIndexing	obj -> sections [ ct_obj ]		3659914	0					
ANR	3659976	PtrMemberAccess	obj -> sections		3659914	0					
ANR	3659977	Identifier	obj		3659914	0					
ANR	3659978	Identifier	sections		3659914	1					
ANR	3659979	Identifier	ct_obj		3659914	1					
ANR	3659980	Identifier	vaddr		3659914	1					
ANR	3659981	PrimaryExpression	0		3659914	1					
ANR	3659982	ElseStatement	else		3659914	0					
ANR	3659983	CompoundStatement		11:9:282:282	3659914	0					
ANR	3659984	ExpressionStatement	obj -> sections [ ct_obj ] -> vaddr = obj -> sections [ ct_obj - 1 ] -> vaddr + obj -> sections [ ct_obj - 1 ] -> size	506:3:12081:12190	3659914	0	True				
ANR	3659985	AssignmentExpression	obj -> sections [ ct_obj ] -> vaddr = obj -> sections [ ct_obj - 1 ] -> vaddr + obj -> sections [ ct_obj - 1 ] -> size		3659914	0		=			
ANR	3659986	PtrMemberAccess	obj -> sections [ ct_obj ] -> vaddr		3659914	0					
ANR	3659987	ArrayIndexing	obj -> sections [ ct_obj ]		3659914	0					
ANR	3659988	PtrMemberAccess	obj -> sections		3659914	0					
ANR	3659989	Identifier	obj		3659914	0					
ANR	3659990	Identifier	sections		3659914	1					
ANR	3659991	Identifier	ct_obj		3659914	1					
ANR	3659992	Identifier	vaddr		3659914	1					
ANR	3659993	AdditiveExpression	obj -> sections [ ct_obj - 1 ] -> vaddr + obj -> sections [ ct_obj - 1 ] -> size		3659914	1		+			
ANR	3659994	PtrMemberAccess	obj -> sections [ ct_obj - 1 ] -> vaddr		3659914	0					
ANR	3659995	ArrayIndexing	obj -> sections [ ct_obj - 1 ]		3659914	0					
ANR	3659996	PtrMemberAccess	obj -> sections		3659914	0					
ANR	3659997	Identifier	obj		3659914	0					
ANR	3659998	Identifier	sections		3659914	1					
ANR	3659999	AdditiveExpression	ct_obj - 1		3659914	1		-			
ANR	3660000	Identifier	ct_obj		3659914	0					
ANR	3660001	PrimaryExpression	1		3659914	1					
ANR	3660002	Identifier	vaddr		3659914	1					
ANR	3660003	PtrMemberAccess	obj -> sections [ ct_obj - 1 ] -> size		3659914	1					
ANR	3660004	ArrayIndexing	obj -> sections [ ct_obj - 1 ]		3659914	0					
ANR	3660005	PtrMemberAccess	obj -> sections		3659914	0					
ANR	3660006	Identifier	obj		3659914	0					
ANR	3660007	Identifier	sections		3659914	1					
ANR	3660008	AdditiveExpression	ct_obj - 1		3659914	1		-			
ANR	3660009	Identifier	ct_obj		3659914	0					
ANR	3660010	PrimaryExpression	1		3659914	1					
ANR	3660011	Identifier	size		3659914	1					
ANR	3660012	ExpressionStatement	ct_obj ++	509:2:12198:12206	3659914	3	True				
ANR	3660013	PostIncDecOperationExpression	ct_obj ++		3659914	0					
ANR	3660014	Identifier	ct_obj		3659914	0					
ANR	3660015	IncDec	++		3659914	1					
ANR	3660016	ExpressionStatement	tmp = tmp -> next	510:2:12210:12225	3659914	4	True				
ANR	3660017	AssignmentExpression	tmp = tmp -> next		3659914	0		=			
ANR	3660018	Identifier	tmp		3659914	0					
ANR	3660019	PtrMemberAccess	tmp -> next		3659914	1					
ANR	3660020	Identifier	tmp		3659914	0					
ANR	3660021	Identifier	next		3659914	1					
ANR	3660022	ReturnType	static void		3659914	1					
ANR	3660023	Identifier	get_omf_section_info		3659914	2					
ANR	3660024	ParameterList	r_bin_omf_obj * obj		3659914	3					
ANR	3660025	Parameter	r_bin_omf_obj * obj	495:33:11773:11790	3659914	0	True				
ANR	3660026	ParameterType	r_bin_omf_obj *		3659914	0					
ANR	3660027	Identifier	obj		3659914	1					
ANR	3660028	CFGEntryNode	ENTRY		3659914		True				
ANR	3660029	CFGExitNode	EXIT		3659914		True				
ANR	3660030	Symbol	* obj		3659914						
ANR	3660031	Symbol	* tmp		3659914						
ANR	3660032	Symbol	NULL		3659914						
ANR	3660033	Symbol	* ct_obj		3659914						
ANR	3660034	Symbol	* * ct_obj		3659914						
ANR	3660035	Symbol	get_next_omf_record_type		3659914						
ANR	3660036	Symbol	* * obj		3659914						
ANR	3660037	Symbol	obj -> sections [ ct_obj ] -> vaddr		3659914						
ANR	3660038	Symbol	tmp -> next		3659914						
ANR	3660039	Symbol	obj -> sections [ ct_obj - 1 ] -> vaddr		3659914						
ANR	3660040	Symbol	* * * obj		3659914						
ANR	3660041	Symbol	obj		3659914						
ANR	3660042	Symbol	tmp		3659914						
ANR	3660043	Symbol	ct_obj		3659914						
ANR	3660044	Symbol	OMF_SEGDEF		3659914						
ANR	3660045	Symbol	( ( OMF_record * ) tmp ) -> content		3659914						
ANR	3660046	Symbol	* obj -> sections		3659914						
ANR	3660047	Symbol	obj -> records		3659914						
ANR	3660048	Symbol	* * obj -> sections		3659914						
ANR	3660049	Symbol	obj -> sections		3659914						
ANR	3660050	Symbol	obj -> sections [ ct_obj - 1 ] -> size		3659914						
ANR	3660051	Function	get_omf_symbol_info	514:0:12234:12896							
ANR	3660052	FunctionDef	get_omf_symbol_info (r_bin_omf_obj * obj)		3660051	0					
ANR	3660053	CompoundStatement		514:51:12285:12896	3660051	0					
ANR	3660054	IdentifierDeclStatement	OMF_record_handler * tmp = obj -> records ;	515:1:12288:12326	3660051	0	True				
ANR	3660055	IdentifierDecl	* tmp = obj -> records		3660051	0					
ANR	3660056	IdentifierDeclType	OMF_record_handler *		3660051	0					
ANR	3660057	Identifier	tmp		3660051	1					
ANR	3660058	AssignmentExpression	* tmp = obj -> records		3660051	2		=			
ANR	3660059	Identifier	tmp		3660051	0					
ANR	3660060	PtrMemberAccess	obj -> records		3660051	1					
ANR	3660061	Identifier	obj		3660051	0					
ANR	3660062	Identifier	records		3660051	1					
ANR	3660063	IdentifierDeclStatement	OMF_multi_datas * symbols ;	516:1:12329:12353	3660051	1	True				
ANR	3660064	IdentifierDecl	* symbols		3660051	0					
ANR	3660065	IdentifierDeclType	OMF_multi_datas *		3660051	0					
ANR	3660066	Identifier	symbols		3660051	1					
ANR	3660067	IdentifierDeclStatement	int ct_obj = 0 ;	517:1:12356:12370	3660051	2	True				
ANR	3660068	IdentifierDecl	ct_obj = 0		3660051	0					
ANR	3660069	IdentifierDeclType	int		3660051	0					
ANR	3660070	Identifier	ct_obj		3660051	1					
ANR	3660071	AssignmentExpression	ct_obj = 0		3660051	2		=			
ANR	3660072	Identifier	ct_obj		3660051	0					
ANR	3660073	PrimaryExpression	0		3660051	1					
ANR	3660074	IdentifierDeclStatement	int ct_rec = 0 ;	518:1:12373:12389	3660051	3	True				
ANR	3660075	IdentifierDecl	ct_rec = 0		3660051	0					
ANR	3660076	IdentifierDeclType	int		3660051	0					
ANR	3660077	Identifier	ct_rec		3660051	1					
ANR	3660078	AssignmentExpression	ct_rec = 0		3660051	2		=			
ANR	3660079	Identifier	ct_rec		3660051	0					
ANR	3660080	PrimaryExpression	0		3660051	1					
ANR	3660081	WhileStatement	"while ( ( tmp = get_next_omf_record_type ( tmp , OMF_PUBDEF ) ) )"		3660051	4					
ANR	3660082	Condition	"tmp = get_next_omf_record_type ( tmp , OMF_PUBDEF )"	520:8:12400:12448	3660051	0	True				
ANR	3660083	AssignmentExpression	"tmp = get_next_omf_record_type ( tmp , OMF_PUBDEF )"		3660051	0		=			
ANR	3660084	Identifier	tmp		3660051	0					
ANR	3660085	CallExpression	"get_next_omf_record_type ( tmp , OMF_PUBDEF )"		3660051	1					
ANR	3660086	Callee	get_next_omf_record_type		3660051	0					
ANR	3660087	Identifier	get_next_omf_record_type		3660051	0					
ANR	3660088	ArgumentList	tmp		3660051	1					
ANR	3660089	Argument	tmp		3660051	0					
ANR	3660090	Identifier	tmp		3660051	0					
ANR	3660091	Argument	OMF_PUBDEF		3660051	1					
ANR	3660092	Identifier	OMF_PUBDEF		3660051	0					
ANR	3660093	CompoundStatement		7:59:165:165	3660051	1					
ANR	3660094	ExpressionStatement	symbols = ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content	521:2:12455:12512	3660051	0	True				
ANR	3660095	AssignmentExpression	symbols = ( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content		3660051	0		=			
ANR	3660096	Identifier	symbols		3660051	0					
ANR	3660097	CastExpression	( OMF_multi_datas * ) ( ( OMF_record * ) tmp ) -> content		3660051	1					
ANR	3660098	CastTarget	OMF_multi_datas *		3660051	0					
ANR	3660099	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660051	1					
ANR	3660100	CastExpression	( OMF_record * ) tmp		3660051	0					
ANR	3660101	CastTarget	OMF_record *		3660051	0					
ANR	3660102	Identifier	tmp		3660051	1					
ANR	3660103	Identifier	content		3660051	1					
ANR	3660104	ExpressionStatement	ct_rec = - 1	523:2:12517:12528	3660051	1	True				
ANR	3660105	AssignmentExpression	ct_rec = - 1		3660051	0		=			
ANR	3660106	Identifier	ct_rec		3660051	0					
ANR	3660107	UnaryOperationExpression	- 1		3660051	1					
ANR	3660108	UnaryOperator	-		3660051	0					
ANR	3660109	PrimaryExpression	1		3660051	1					
ANR	3660110	WhileStatement	while ( ++ ct_rec < symbols -> nb_elem )		3660051	2					
ANR	3660111	Condition	++ ct_rec < symbols -> nb_elem	524:9:12539:12565	3660051	0	True				
ANR	3660112	RelationalExpression	++ ct_rec < symbols -> nb_elem		3660051	0		<			
ANR	3660113	UnaryExpression	++ ct_rec		3660051	0					
ANR	3660114	IncDec	++		3660051	0					
ANR	3660115	Identifier	ct_rec		3660051	1					
ANR	3660116	PtrMemberAccess	symbols -> nb_elem		3660051	1					
ANR	3660117	Identifier	symbols		3660051	0					
ANR	3660118	Identifier	nb_elem		3660051	1					
ANR	3660119	CompoundStatement		11:38:282:282	3660051	1					
ANR	3660120	IfStatement	if ( ! ( obj -> symbols [ ct_obj ] = R_NEW0 ( OMF_symbol ) ) )		3660051	0					
ANR	3660121	Condition	! ( obj -> symbols [ ct_obj ] = R_NEW0 ( OMF_symbol ) )	525:7:12577:12621	3660051	0	True				
ANR	3660122	UnaryOperationExpression	! ( obj -> symbols [ ct_obj ] = R_NEW0 ( OMF_symbol ) )		3660051	0					
ANR	3660123	UnaryOperator	!		3660051	0					
ANR	3660124	AssignmentExpression	obj -> symbols [ ct_obj ] = R_NEW0 ( OMF_symbol )		3660051	1		=			
ANR	3660125	ArrayIndexing	obj -> symbols [ ct_obj ]		3660051	0					
ANR	3660126	PtrMemberAccess	obj -> symbols		3660051	0					
ANR	3660127	Identifier	obj		3660051	0					
ANR	3660128	Identifier	symbols		3660051	1					
ANR	3660129	Identifier	ct_obj		3660051	1					
ANR	3660130	CallExpression	R_NEW0 ( OMF_symbol )		3660051	1					
ANR	3660131	Callee	R_NEW0		3660051	0					
ANR	3660132	Identifier	R_NEW0		3660051	0					
ANR	3660133	ArgumentList	OMF_symbol		3660051	1					
ANR	3660134	Argument	OMF_symbol		3660051	0					
ANR	3660135	Identifier	OMF_symbol		3660051	0					
ANR	3660136	CompoundStatement		12:54:338:338	3660051	1					
ANR	3660137	ReturnStatement	return false ;	526:4:12630:12642	3660051	0	True				
ANR	3660138	Identifier	false		3660051	0					
ANR	3660139	ExpressionStatement	"memcpy ( obj -> symbols [ ct_obj ] , ( ( OMF_symbol * ) symbols -> elems ) + ct_rec , sizeof ( * ( obj -> symbols [ ct_obj ] ) ) )"	528:3:12652:12754	3660051	1	True				
ANR	3660140	CallExpression	"memcpy ( obj -> symbols [ ct_obj ] , ( ( OMF_symbol * ) symbols -> elems ) + ct_rec , sizeof ( * ( obj -> symbols [ ct_obj ] ) ) )"		3660051	0					
ANR	3660141	Callee	memcpy		3660051	0					
ANR	3660142	Identifier	memcpy		3660051	0					
ANR	3660143	ArgumentList	obj -> symbols [ ct_obj ]		3660051	1					
ANR	3660144	Argument	obj -> symbols [ ct_obj ]		3660051	0					
ANR	3660145	ArrayIndexing	obj -> symbols [ ct_obj ]		3660051	0					
ANR	3660146	PtrMemberAccess	obj -> symbols		3660051	0					
ANR	3660147	Identifier	obj		3660051	0					
ANR	3660148	Identifier	symbols		3660051	1					
ANR	3660149	Identifier	ct_obj		3660051	1					
ANR	3660150	Argument	( ( OMF_symbol * ) symbols -> elems ) + ct_rec		3660051	1					
ANR	3660151	AdditiveExpression	( ( OMF_symbol * ) symbols -> elems ) + ct_rec		3660051	0		+			
ANR	3660152	CastExpression	( OMF_symbol * ) symbols -> elems		3660051	0					
ANR	3660153	CastTarget	OMF_symbol *		3660051	0					
ANR	3660154	PtrMemberAccess	symbols -> elems		3660051	1					
ANR	3660155	Identifier	symbols		3660051	0					
ANR	3660156	Identifier	elems		3660051	1					
ANR	3660157	Identifier	ct_rec		3660051	1					
ANR	3660158	Argument	sizeof ( * ( obj -> symbols [ ct_obj ] ) )		3660051	2					
ANR	3660159	SizeofExpression	sizeof ( * ( obj -> symbols [ ct_obj ] ) )		3660051	0					
ANR	3660160	Sizeof	sizeof		3660051	0					
ANR	3660161	UnaryOperationExpression	* ( obj -> symbols [ ct_obj ] )		3660051	1					
ANR	3660162	UnaryOperator	*		3660051	0					
ANR	3660163	ArrayIndexing	obj -> symbols [ ct_obj ]		3660051	1					
ANR	3660164	PtrMemberAccess	obj -> symbols		3660051	0					
ANR	3660165	Identifier	obj		3660051	0					
ANR	3660166	Identifier	symbols		3660051	1					
ANR	3660167	Identifier	ct_obj		3660051	1					
ANR	3660168	ExpressionStatement	obj -> symbols [ ct_obj ] -> name = strdup ( ( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name )	529:3:12759:12839	3660051	2	True				
ANR	3660169	AssignmentExpression	obj -> symbols [ ct_obj ] -> name = strdup ( ( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name )		3660051	0		=			
ANR	3660170	PtrMemberAccess	obj -> symbols [ ct_obj ] -> name		3660051	0					
ANR	3660171	ArrayIndexing	obj -> symbols [ ct_obj ]		3660051	0					
ANR	3660172	PtrMemberAccess	obj -> symbols		3660051	0					
ANR	3660173	Identifier	obj		3660051	0					
ANR	3660174	Identifier	symbols		3660051	1					
ANR	3660175	Identifier	ct_obj		3660051	1					
ANR	3660176	Identifier	name		3660051	1					
ANR	3660177	CallExpression	strdup ( ( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name )		3660051	1					
ANR	3660178	Callee	strdup		3660051	0					
ANR	3660179	Identifier	strdup		3660051	0					
ANR	3660180	ArgumentList	( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name		3660051	1					
ANR	3660181	Argument	( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name		3660051	0					
ANR	3660182	MemberAccess	( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name		3660051	0					
ANR	3660183	ArrayIndexing	( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ]		3660051	0					
ANR	3660184	CastExpression	( OMF_symbol * ) symbols -> elems		3660051	0					
ANR	3660185	CastTarget	OMF_symbol *		3660051	0					
ANR	3660186	PtrMemberAccess	symbols -> elems		3660051	1					
ANR	3660187	Identifier	symbols		3660051	0					
ANR	3660188	Identifier	elems		3660051	1					
ANR	3660189	Identifier	ct_rec		3660051	1					
ANR	3660190	Identifier	name		3660051	1					
ANR	3660191	ExpressionStatement	ct_obj ++	530:3:12844:12852	3660051	3	True				
ANR	3660192	PostIncDecOperationExpression	ct_obj ++		3660051	0					
ANR	3660193	Identifier	ct_obj		3660051	0					
ANR	3660194	IncDec	++		3660051	1					
ANR	3660195	ExpressionStatement	tmp = tmp -> next	532:2:12861:12876	3660051	3	True				
ANR	3660196	AssignmentExpression	tmp = tmp -> next		3660051	0		=			
ANR	3660197	Identifier	tmp		3660051	0					
ANR	3660198	PtrMemberAccess	tmp -> next		3660051	1					
ANR	3660199	Identifier	tmp		3660051	0					
ANR	3660200	Identifier	next		3660051	1					
ANR	3660201	ReturnStatement	return true ;	534:1:12883:12894	3660051	5	True				
ANR	3660202	Identifier	true		3660051	0					
ANR	3660203	ReturnType	static int		3660051	1					
ANR	3660204	Identifier	get_omf_symbol_info		3660051	2					
ANR	3660205	ParameterList	r_bin_omf_obj * obj		3660051	3					
ANR	3660206	Parameter	r_bin_omf_obj * obj	514:31:12265:12282	3660051	0	True				
ANR	3660207	ParameterType	r_bin_omf_obj *		3660051	0					
ANR	3660208	Identifier	obj		3660051	1					
ANR	3660209	CFGEntryNode	ENTRY		3660051		True				
ANR	3660210	CFGExitNode	EXIT		3660051		True				
ANR	3660211	Symbol	* ct_rec		3660051						
ANR	3660212	Symbol	* tmp		3660051						
ANR	3660213	Symbol	symbols -> nb_elem		3660051						
ANR	3660214	Symbol	* * ct_obj		3660051						
ANR	3660215	Symbol	* * symbols		3660051						
ANR	3660216	Symbol	* * obj		3660051						
ANR	3660217	Symbol	OMF_PUBDEF		3660051						
ANR	3660218	Symbol	symbols		3660051						
ANR	3660219	Symbol	tmp -> next		3660051						
ANR	3660220	Symbol	* symbols		3660051						
ANR	3660221	Symbol	OMF_symbol		3660051						
ANR	3660222	Symbol	* * obj -> symbols		3660051						
ANR	3660223	Symbol	tmp		3660051						
ANR	3660224	Symbol	ct_obj		3660051						
ANR	3660225	Symbol	( ( OMF_record * ) tmp ) -> content		3660051						
ANR	3660226	Symbol	obj -> symbols		3660051						
ANR	3660227	Symbol	obj -> symbols [ ct_obj ] -> name		3660051						
ANR	3660228	Symbol	* obj		3660051						
ANR	3660229	Symbol	* obj -> symbols		3660051						
ANR	3660230	Symbol	* ct_obj		3660051						
ANR	3660231	Symbol	false		3660051						
ANR	3660232	Symbol	get_next_omf_record_type		3660051						
ANR	3660233	Symbol	symbols -> elems		3660051						
ANR	3660234	Symbol	* ( obj -> symbols [ ct_obj ] )		3660051						
ANR	3660235	Symbol	* symbols -> elems		3660051						
ANR	3660236	Symbol	R_NEW0		3660051						
ANR	3660237	Symbol	* * * obj		3660051						
ANR	3660238	Symbol	obj		3660051						
ANR	3660239	Symbol	true		3660051						
ANR	3660240	Symbol	strdup		3660051						
ANR	3660241	Symbol	obj -> records		3660051						
ANR	3660242	Symbol	ct_rec		3660051						
ANR	3660243	Symbol	( ( OMF_symbol * ) symbols -> elems ) [ ct_rec ] . name		3660051						
ANR	3660244	Function	get_omf_data_info	537:0:12899:13685							
ANR	3660245	FunctionDef	get_omf_data_info (r_bin_omf_obj * obj)		3660244	0					
ANR	3660246	CompoundStatement		537:49:12948:13685	3660244	0					
ANR	3660247	IdentifierDeclStatement	OMF_record_handler * tmp = obj -> records ;	538:1:12951:12989	3660244	0	True				
ANR	3660248	IdentifierDecl	* tmp = obj -> records		3660244	0					
ANR	3660249	IdentifierDeclType	OMF_record_handler *		3660244	0					
ANR	3660250	Identifier	tmp		3660244	1					
ANR	3660251	AssignmentExpression	* tmp = obj -> records		3660244	2		=			
ANR	3660252	Identifier	tmp		3660244	0					
ANR	3660253	PtrMemberAccess	obj -> records		3660244	1					
ANR	3660254	Identifier	obj		3660244	0					
ANR	3660255	Identifier	records		3660244	1					
ANR	3660256	IdentifierDeclStatement	OMF_data * tmp_data ;	539:1:12992:13010	3660244	1	True				
ANR	3660257	IdentifierDecl	* tmp_data		3660244	0					
ANR	3660258	IdentifierDeclType	OMF_data *		3660244	0					
ANR	3660259	Identifier	tmp_data		3660244	1					
ANR	3660260	WhileStatement	"while ( ( tmp = get_next_omf_record_type ( tmp , OMF_LEDATA ) ) )"		3660244	2					
ANR	3660261	Condition	"tmp = get_next_omf_record_type ( tmp , OMF_LEDATA )"	541:8:13021:13070	3660244	0	True				
ANR	3660262	AssignmentExpression	"tmp = get_next_omf_record_type ( tmp , OMF_LEDATA )"		3660244	0		=			
ANR	3660263	Identifier	tmp		3660244	0					
ANR	3660264	CallExpression	"get_next_omf_record_type ( tmp , OMF_LEDATA )"		3660244	1					
ANR	3660265	Callee	get_next_omf_record_type		3660244	0					
ANR	3660266	Identifier	get_next_omf_record_type		3660244	0					
ANR	3660267	ArgumentList	tmp		3660244	1					
ANR	3660268	Argument	tmp		3660244	0					
ANR	3660269	Identifier	tmp		3660244	0					
ANR	3660270	Argument	OMF_LEDATA		3660244	1					
ANR	3660271	Identifier	OMF_LEDATA		3660244	0					
ANR	3660272	CompoundStatement		10:2:293:381	3660244	1					
ANR	3660273	IfStatement	if ( ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 >= obj -> nb_section )		3660244	0					
ANR	3660274	Condition	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 >= obj -> nb_section	542:6:13081:13154	3660244	0	True				
ANR	3660275	RelationalExpression	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 >= obj -> nb_section		3660244	0		>=			
ANR	3660276	AdditiveExpression	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1		3660244	0		-			
ANR	3660277	PtrMemberAccess	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx		3660244	0					
ANR	3660278	CastExpression	( OMF_data * ) ( ( OMF_record * ) tmp ) -> content		3660244	0					
ANR	3660279	CastTarget	OMF_data *		3660244	0					
ANR	3660280	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660244	1					
ANR	3660281	CastExpression	( OMF_record * ) tmp		3660244	0					
ANR	3660282	CastTarget	OMF_record *		3660244	0					
ANR	3660283	Identifier	tmp		3660244	1					
ANR	3660284	Identifier	content		3660244	1					
ANR	3660285	Identifier	seg_idx		3660244	1					
ANR	3660286	PrimaryExpression	1		3660244	1					
ANR	3660287	PtrMemberAccess	obj -> nb_section		3660244	1					
ANR	3660288	Identifier	obj		3660244	0					
ANR	3660289	Identifier	nb_section		3660244	1					
ANR	3660290	CompoundStatement		6:82:208:208	3660244	1					
ANR	3660291	ExpressionStatement	"eprintf ( ""Invalid Ledata record (bad segment index)\\n"" )"	543:3:13162:13217	3660244	0	True				
ANR	3660292	CallExpression	"eprintf ( ""Invalid Ledata record (bad segment index)\\n"" )"		3660244	0					
ANR	3660293	Callee	eprintf		3660244	0					
ANR	3660294	Identifier	eprintf		3660244	0					
ANR	3660295	ArgumentList	"""Invalid Ledata record (bad segment index)\\n"""		3660244	1					
ANR	3660296	Argument	"""Invalid Ledata record (bad segment index)\\n"""		3660244	0					
ANR	3660297	PrimaryExpression	"""Invalid Ledata record (bad segment index)\\n"""		3660244	0					
ANR	3660298	ReturnStatement	return false ;	544:3:13222:13234	3660244	1	True				
ANR	3660299	Identifier	false		3660244	0					
ANR	3660300	IdentifierDeclStatement	OMF_segment * os = obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ] ;	546:2:13242:13330	3660244	1	True				
ANR	3660301	IdentifierDecl	* os = obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ]		3660244	0					
ANR	3660302	IdentifierDeclType	OMF_segment *		3660244	0					
ANR	3660303	Identifier	os		3660244	1					
ANR	3660304	AssignmentExpression	* os = obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ]		3660244	2		=			
ANR	3660305	Identifier	os		3660244	0					
ANR	3660306	ArrayIndexing	obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ]		3660244	1					
ANR	3660307	PtrMemberAccess	obj -> sections		3660244	0					
ANR	3660308	Identifier	obj		3660244	0					
ANR	3660309	Identifier	sections		3660244	1					
ANR	3660310	AdditiveExpression	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1		3660244	1		-			
ANR	3660311	PtrMemberAccess	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx		3660244	0					
ANR	3660312	CastExpression	( OMF_data * ) ( ( OMF_record * ) tmp ) -> content		3660244	0					
ANR	3660313	CastTarget	OMF_data *		3660244	0					
ANR	3660314	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660244	1					
ANR	3660315	CastExpression	( OMF_record * ) tmp		3660244	0					
ANR	3660316	CastTarget	OMF_record *		3660244	0					
ANR	3660317	Identifier	tmp		3660244	1					
ANR	3660318	Identifier	content		3660244	1					
ANR	3660319	Identifier	seg_idx		3660244	1					
ANR	3660320	PrimaryExpression	1		3660244	1					
ANR	3660321	IfStatement	if ( os && ( tmp_data = os -> data ) )		3660244	2					
ANR	3660322	Condition	os && ( tmp_data = os -> data )	547:6:13338:13364	3660244	0	True				
ANR	3660323	AndExpression	os && ( tmp_data = os -> data )		3660244	0		&&			
ANR	3660324	Identifier	os		3660244	0					
ANR	3660325	AssignmentExpression	tmp_data = os -> data		3660244	1		=			
ANR	3660326	Identifier	tmp_data		3660244	0					
ANR	3660327	PtrMemberAccess	os -> data		3660244	1					
ANR	3660328	Identifier	os		3660244	0					
ANR	3660329	Identifier	data		3660244	1					
ANR	3660330	CompoundStatement		11:35:418:418	3660244	1					
ANR	3660331	WhileStatement	while ( tmp_data -> next )		3660244	0					
ANR	3660332	Condition	tmp_data -> next	548:10:13379:13392	3660244	0	True				
ANR	3660333	PtrMemberAccess	tmp_data -> next		3660244	0					
ANR	3660334	Identifier	tmp_data		3660244	0					
ANR	3660335	Identifier	next		3660244	1					
ANR	3660336	CompoundStatement		12:26:446:446	3660244	1					
ANR	3660337	ExpressionStatement	tmp_data = tmp_data -> next	549:4:13401:13426	3660244	0	True				
ANR	3660338	AssignmentExpression	tmp_data = tmp_data -> next		3660244	0		=			
ANR	3660339	Identifier	tmp_data		3660244	0					
ANR	3660340	PtrMemberAccess	tmp_data -> next		3660244	1					
ANR	3660341	Identifier	tmp_data		3660244	0					
ANR	3660342	Identifier	next		3660244	1					
ANR	3660343	ExpressionStatement	tmp_data -> next = ( ( OMF_record * ) tmp ) -> content	551:3:13436:13481	3660244	1	True				
ANR	3660344	AssignmentExpression	tmp_data -> next = ( ( OMF_record * ) tmp ) -> content		3660244	0		=			
ANR	3660345	PtrMemberAccess	tmp_data -> next		3660244	0					
ANR	3660346	Identifier	tmp_data		3660244	0					
ANR	3660347	Identifier	next		3660244	1					
ANR	3660348	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660244	1					
ANR	3660349	CastExpression	( OMF_record * ) tmp		3660244	0					
ANR	3660350	CastTarget	OMF_record *		3660244	0					
ANR	3660351	Identifier	tmp		3660244	1					
ANR	3660352	Identifier	content		3660244	1					
ANR	3660353	ElseStatement	else		3660244	0					
ANR	3660354	CompoundStatement		16:9:543:543	3660244	0					
ANR	3660355	ExpressionStatement	obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ] -> data = ( ( OMF_record * ) tmp ) -> content	553:3:13497:13604	3660244	0	True				
ANR	3660356	AssignmentExpression	obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ] -> data = ( ( OMF_record * ) tmp ) -> content		3660244	0		=			
ANR	3660357	PtrMemberAccess	obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ] -> data		3660244	0					
ANR	3660358	ArrayIndexing	obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ]		3660244	0					
ANR	3660359	PtrMemberAccess	obj -> sections		3660244	0					
ANR	3660360	Identifier	obj		3660244	0					
ANR	3660361	Identifier	sections		3660244	1					
ANR	3660362	AdditiveExpression	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1		3660244	1		-			
ANR	3660363	PtrMemberAccess	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx		3660244	0					
ANR	3660364	CastExpression	( OMF_data * ) ( ( OMF_record * ) tmp ) -> content		3660244	0					
ANR	3660365	CastTarget	OMF_data *		3660244	0					
ANR	3660366	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660244	1					
ANR	3660367	CastExpression	( OMF_record * ) tmp		3660244	0					
ANR	3660368	CastTarget	OMF_record *		3660244	0					
ANR	3660369	Identifier	tmp		3660244	1					
ANR	3660370	Identifier	content		3660244	1					
ANR	3660371	Identifier	seg_idx		3660244	1					
ANR	3660372	PrimaryExpression	1		3660244	1					
ANR	3660373	Identifier	data		3660244	1					
ANR	3660374	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660244	1					
ANR	3660375	CastExpression	( OMF_record * ) tmp		3660244	0					
ANR	3660376	CastTarget	OMF_record *		3660244	0					
ANR	3660377	Identifier	tmp		3660244	1					
ANR	3660378	Identifier	content		3660244	1					
ANR	3660379	ExpressionStatement	( ( OMF_record * ) tmp ) -> content = NULL	555:2:13612:13647	3660244	3	True				
ANR	3660380	AssignmentExpression	( ( OMF_record * ) tmp ) -> content = NULL		3660244	0		=			
ANR	3660381	PtrMemberAccess	( ( OMF_record * ) tmp ) -> content		3660244	0					
ANR	3660382	CastExpression	( OMF_record * ) tmp		3660244	0					
ANR	3660383	CastTarget	OMF_record *		3660244	0					
ANR	3660384	Identifier	tmp		3660244	1					
ANR	3660385	Identifier	content		3660244	1					
ANR	3660386	Identifier	NULL		3660244	1					
ANR	3660387	ExpressionStatement	tmp = tmp -> next	556:2:13651:13666	3660244	4	True				
ANR	3660388	AssignmentExpression	tmp = tmp -> next		3660244	0		=			
ANR	3660389	Identifier	tmp		3660244	0					
ANR	3660390	PtrMemberAccess	tmp -> next		3660244	1					
ANR	3660391	Identifier	tmp		3660244	0					
ANR	3660392	Identifier	next		3660244	1					
ANR	3660393	ReturnStatement	return true ;	558:1:13672:13683	3660244	3	True				
ANR	3660394	Identifier	true		3660244	0					
ANR	3660395	ReturnType	static int		3660244	1					
ANR	3660396	Identifier	get_omf_data_info		3660244	2					
ANR	3660397	ParameterList	r_bin_omf_obj * obj		3660244	3					
ANR	3660398	Parameter	r_bin_omf_obj * obj	537:29:12928:12945	3660244	0	True				
ANR	3660399	ParameterType	r_bin_omf_obj *		3660244	0					
ANR	3660400	Identifier	obj		3660244	1					
ANR	3660401	CFGEntryNode	ENTRY		3660244		True				
ANR	3660402	CFGExitNode	EXIT		3660244		True				
ANR	3660403	Symbol	* tmp		3660244						
ANR	3660404	Symbol	OMF_LEDATA		3660244						
ANR	3660405	Symbol	tmp_data		3660244						
ANR	3660406	Symbol	* * ( ( OMF_record * ) tmp ) -> content		3660244						
ANR	3660407	Symbol	* * * ( ( OMF_record * ) tmp ) -> content		3660244						
ANR	3660408	Symbol	* os		3660244						
ANR	3660409	Symbol	* * obj		3660244						
ANR	3660410	Symbol	tmp -> next		3660244						
ANR	3660411	Symbol	os -> data		3660244						
ANR	3660412	Symbol	* ( ( OMF_record * ) tmp ) -> content		3660244						
ANR	3660413	Symbol	* * * tmp		3660244						
ANR	3660414	Symbol	tmp		3660244						
ANR	3660415	Symbol	( ( OMF_record * ) tmp ) -> content		3660244						
ANR	3660416	Symbol	* ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx		3660244						
ANR	3660417	Symbol	obj -> sections [ ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx - 1 ] -> data		3660244						
ANR	3660418	Symbol	( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx		3660244						
ANR	3660419	Symbol	obj -> sections		3660244						
ANR	3660420	Symbol	* obj		3660244						
ANR	3660421	Symbol	NULL		3660244						
ANR	3660422	Symbol	os		3660244						
ANR	3660423	Symbol	false		3660244						
ANR	3660424	Symbol	get_next_omf_record_type		3660244						
ANR	3660425	Symbol	* * tmp		3660244						
ANR	3660426	Symbol	* * * * tmp		3660244						
ANR	3660427	Symbol	* * * obj		3660244						
ANR	3660428	Symbol	obj		3660244						
ANR	3660429	Symbol	obj -> nb_section		3660244						
ANR	3660430	Symbol	true		3660244						
ANR	3660431	Symbol	* * ( ( OMF_data * ) ( ( OMF_record * ) tmp ) -> content ) -> seg_idx		3660244						
ANR	3660432	Symbol	* obj -> sections		3660244						
ANR	3660433	Symbol	* tmp_data		3660244						
ANR	3660434	Symbol	tmp_data -> next		3660244						
ANR	3660435	Symbol	obj -> records		3660244						
ANR	3660436	Symbol	* * obj -> sections		3660244						
ANR	3660437	Function	get_omf_infos	561:0:13688:14590							
ANR	3660438	FunctionDef	get_omf_infos (r_bin_omf_obj * obj)		3660437	0					
ANR	3660439	CompoundStatement		561:45:13733:14590	3660437	0					
ANR	3660440	ExpressionStatement	"obj -> nb_name = count_omf_multi_record_type ( obj , OMF_LNAMES )"	563:1:13779:13839	3660437	0	True				
ANR	3660441	AssignmentExpression	"obj -> nb_name = count_omf_multi_record_type ( obj , OMF_LNAMES )"		3660437	0		=			
ANR	3660442	PtrMemberAccess	obj -> nb_name		3660437	0					
ANR	3660443	Identifier	obj		3660437	0					
ANR	3660444	Identifier	nb_name		3660437	1					
ANR	3660445	CallExpression	"count_omf_multi_record_type ( obj , OMF_LNAMES )"		3660437	1					
ANR	3660446	Callee	count_omf_multi_record_type		3660437	0					
ANR	3660447	Identifier	count_omf_multi_record_type		3660437	0					
ANR	3660448	ArgumentList	obj		3660437	1					
ANR	3660449	Argument	obj		3660437	0					
ANR	3660450	Identifier	obj		3660437	0					
ANR	3660451	Argument	OMF_LNAMES		3660437	1					
ANR	3660452	Identifier	OMF_LNAMES		3660437	0					
ANR	3660453	IfStatement	if ( obj -> nb_name > 0 )		3660437	1					
ANR	3660454	Condition	obj -> nb_name > 0	564:5:13846:13859	3660437	0	True				
ANR	3660455	RelationalExpression	obj -> nb_name > 0		3660437	0		>			
ANR	3660456	PtrMemberAccess	obj -> nb_name		3660437	0					
ANR	3660457	Identifier	obj		3660437	0					
ANR	3660458	Identifier	nb_name		3660437	1					
ANR	3660459	PrimaryExpression	0		3660437	1					
ANR	3660460	CompoundStatement		4:21:128:128	3660437	1					
ANR	3660461	Statement	if	565:2:13866:13867	3660437	0	True				
ANR	3660462	Statement	(	565:5:13869:13869	3660437	1	True				
ANR	3660463	Statement	!	565:6:13870:13870	3660437	2	True				
ANR	3660464	Statement	(	565:7:13871:13871	3660437	3	True				
ANR	3660465	Statement	obj	565:8:13872:13874	3660437	4	True				
ANR	3660466	Statement	->	565:11:13875:13876	3660437	5	True				
ANR	3660467	Statement	names	565:13:13877:13881	3660437	6	True				
ANR	3660468	Statement	=	565:19:13883:13883	3660437	7	True				
ANR	3660469	Statement	R_NEWS0	565:21:13885:13891	3660437	8	True				
ANR	3660470	Statement	(	565:29:13893:13893	3660437	9	True				
ANR	3660471	Statement	char	565:30:13894:13897	3660437	10	True				
ANR	3660472	Statement	*	565:35:13899:13899	3660437	11	True				
ANR	3660473	Statement	","	565:36:13900:13900	3660437	12	True				
ANR	3660474	Statement	obj	565:38:13902:13904	3660437	13	True				
ANR	3660475	Statement	->	565:41:13905:13906	3660437	14	True				
ANR	3660476	Statement	nb_name	565:43:13907:13913	3660437	15	True				
ANR	3660477	Statement	)	565:50:13914:13914	3660437	16	True				
ANR	3660478	Statement	)	565:51:13915:13915	3660437	17	True				
ANR	3660479	Statement	)	565:52:13916:13916	3660437	18	True				
ANR	3660480	CompoundStatement		5:54:184:184	3660437	19					
ANR	3660481	ReturnStatement	return false ;	566:3:13923:13935	3660437	0	True				
ANR	3660482	Identifier	false		3660437	0					
ANR	3660483	IfStatement	if ( ! cpy_omf_names ( obj ) )		3660437	20					
ANR	3660484	Condition	! cpy_omf_names ( obj )	568:6:13947:13966	3660437	0	True				
ANR	3660485	UnaryOperationExpression	! cpy_omf_names ( obj )		3660437	0					
ANR	3660486	UnaryOperator	!		3660437	0					
ANR	3660487	CallExpression	cpy_omf_names ( obj )		3660437	1					
ANR	3660488	Callee	cpy_omf_names		3660437	0					
ANR	3660489	Identifier	cpy_omf_names		3660437	0					
ANR	3660490	ArgumentList	obj		3660437	1					
ANR	3660491	Argument	obj		3660437	0					
ANR	3660492	Identifier	obj		3660437	0					
ANR	3660493	CompoundStatement		8:28:235:235	3660437	1					
ANR	3660494	ReturnStatement	return false ;	569:3:13974:13986	3660437	0	True				
ANR	3660495	Identifier	false		3660437	0					
ANR	3660496	ExpressionStatement	"obj -> nb_section = count_omf_record_type ( obj , OMF_SEGDEF )"	573:1:14033:14090	3660437	2	True				
ANR	3660497	AssignmentExpression	"obj -> nb_section = count_omf_record_type ( obj , OMF_SEGDEF )"		3660437	0		=			
ANR	3660498	PtrMemberAccess	obj -> nb_section		3660437	0					
ANR	3660499	Identifier	obj		3660437	0					
ANR	3660500	Identifier	nb_section		3660437	1					
ANR	3660501	CallExpression	"count_omf_record_type ( obj , OMF_SEGDEF )"		3660437	1					
ANR	3660502	Callee	count_omf_record_type		3660437	0					
ANR	3660503	Identifier	count_omf_record_type		3660437	0					
ANR	3660504	ArgumentList	obj		3660437	1					
ANR	3660505	Argument	obj		3660437	0					
ANR	3660506	Identifier	obj		3660437	0					
ANR	3660507	Argument	OMF_SEGDEF		3660437	1					
ANR	3660508	Identifier	OMF_SEGDEF		3660437	0					
ANR	3660509	IfStatement	if ( obj -> nb_section > 0 )		3660437	3					
ANR	3660510	Condition	obj -> nb_section > 0	574:5:14097:14113	3660437	0	True				
ANR	3660511	RelationalExpression	obj -> nb_section > 0		3660437	0		>			
ANR	3660512	PtrMemberAccess	obj -> nb_section		3660437	0					
ANR	3660513	Identifier	obj		3660437	0					
ANR	3660514	Identifier	nb_section		3660437	1					
ANR	3660515	PrimaryExpression	0		3660437	1					
ANR	3660516	CompoundStatement		14:24:382:382	3660437	1					
ANR	3660517	Statement	if	575:2:14120:14121	3660437	0	True				
ANR	3660518	Statement	(	575:5:14123:14123	3660437	1	True				
ANR	3660519	Statement	!	575:6:14124:14124	3660437	2	True				
ANR	3660520	Statement	(	575:7:14125:14125	3660437	3	True				
ANR	3660521	Statement	obj	575:8:14126:14128	3660437	4	True				
ANR	3660522	Statement	->	575:11:14129:14130	3660437	5	True				
ANR	3660523	Statement	sections	575:13:14131:14138	3660437	6	True				
ANR	3660524	Statement	=	575:22:14140:14140	3660437	7	True				
ANR	3660525	Statement	R_NEWS0	575:24:14142:14148	3660437	8	True				
ANR	3660526	Statement	(	575:32:14150:14150	3660437	9	True				
ANR	3660527	Statement	OMF_segment	575:33:14151:14161	3660437	10	True				
ANR	3660528	Statement	*	575:45:14163:14163	3660437	11	True				
ANR	3660529	Statement	","	575:46:14164:14164	3660437	12	True				
ANR	3660530	Statement	obj	575:48:14166:14168	3660437	13	True				
ANR	3660531	Statement	->	575:51:14169:14170	3660437	14	True				
ANR	3660532	Statement	nb_section	575:53:14171:14180	3660437	15	True				
ANR	3660533	Statement	)	575:63:14181:14181	3660437	16	True				
ANR	3660534	Statement	)	575:64:14182:14182	3660437	17	True				
ANR	3660535	Statement	)	575:65:14183:14183	3660437	18	True				
ANR	3660536	CompoundStatement		15:67:451:451	3660437	19					
ANR	3660537	ReturnStatement	return false ;	576:3:14190:14202	3660437	0	True				
ANR	3660538	Identifier	false		3660437	0					
ANR	3660539	ExpressionStatement	get_omf_section_info ( obj )	578:2:14210:14236	3660437	20	True				
ANR	3660540	CallExpression	get_omf_section_info ( obj )		3660437	0					
ANR	3660541	Callee	get_omf_section_info		3660437	0					
ANR	3660542	Identifier	get_omf_section_info		3660437	0					
ANR	3660543	ArgumentList	obj		3660437	1					
ANR	3660544	Argument	obj		3660437	0					
ANR	3660545	Identifier	obj		3660437	0					
ANR	3660546	ExpressionStatement	get_omf_data_info ( obj )	581:1:14275:14298	3660437	4	True				
ANR	3660547	CallExpression	get_omf_data_info ( obj )		3660437	0					
ANR	3660548	Callee	get_omf_data_info		3660437	0					
ANR	3660549	Identifier	get_omf_data_info		3660437	0					
ANR	3660550	ArgumentList	obj		3660437	1					
ANR	3660551	Argument	obj		3660437	0					
ANR	3660552	Identifier	obj		3660437	0					
ANR	3660553	ExpressionStatement	"obj -> nb_symbol = count_omf_multi_record_type ( obj , OMF_PUBDEF )"	583:1:14340:14402	3660437	5	True				
ANR	3660554	AssignmentExpression	"obj -> nb_symbol = count_omf_multi_record_type ( obj , OMF_PUBDEF )"		3660437	0		=			
ANR	3660555	PtrMemberAccess	obj -> nb_symbol		3660437	0					
ANR	3660556	Identifier	obj		3660437	0					
ANR	3660557	Identifier	nb_symbol		3660437	1					
ANR	3660558	CallExpression	"count_omf_multi_record_type ( obj , OMF_PUBDEF )"		3660437	1					
ANR	3660559	Callee	count_omf_multi_record_type		3660437	0					
ANR	3660560	Identifier	count_omf_multi_record_type		3660437	0					
ANR	3660561	ArgumentList	obj		3660437	1					
ANR	3660562	Argument	obj		3660437	0					
ANR	3660563	Identifier	obj		3660437	0					
ANR	3660564	Argument	OMF_PUBDEF		3660437	1					
ANR	3660565	Identifier	OMF_PUBDEF		3660437	0					
ANR	3660566	IfStatement	if ( obj -> nb_symbol > 0 )		3660437	6					
ANR	3660567	Condition	obj -> nb_symbol > 0	584:5:14409:14424	3660437	0	True				
ANR	3660568	RelationalExpression	obj -> nb_symbol > 0		3660437	0		>			
ANR	3660569	PtrMemberAccess	obj -> nb_symbol		3660437	0					
ANR	3660570	Identifier	obj		3660437	0					
ANR	3660571	Identifier	nb_symbol		3660437	1					
ANR	3660572	PrimaryExpression	0		3660437	1					
ANR	3660573	CompoundStatement		24:23:693:693	3660437	1					
ANR	3660574	Statement	if	585:2:14431:14432	3660437	0	True				
ANR	3660575	Statement	(	585:5:14434:14434	3660437	1	True				
ANR	3660576	Statement	!	585:6:14435:14435	3660437	2	True				
ANR	3660577	Statement	(	585:7:14436:14436	3660437	3	True				
ANR	3660578	Statement	obj	585:8:14437:14439	3660437	4	True				
ANR	3660579	Statement	->	585:11:14440:14441	3660437	5	True				
ANR	3660580	Statement	symbols	585:13:14442:14448	3660437	6	True				
ANR	3660581	Statement	=	585:21:14450:14450	3660437	7	True				
ANR	3660582	Statement	R_NEWS0	585:23:14452:14458	3660437	8	True				
ANR	3660583	Statement	(	585:31:14460:14460	3660437	9	True				
ANR	3660584	Statement	OMF_symbol	585:32:14461:14470	3660437	10	True				
ANR	3660585	Statement	*	585:43:14472:14472	3660437	11	True				
ANR	3660586	Statement	","	585:44:14473:14473	3660437	12	True				
ANR	3660587	Statement	obj	585:46:14475:14477	3660437	13	True				
ANR	3660588	Statement	->	585:49:14478:14479	3660437	14	True				
ANR	3660589	Statement	nb_symbol	585:51:14480:14488	3660437	15	True				
ANR	3660590	Statement	)	585:60:14489:14489	3660437	16	True				
ANR	3660591	Statement	)	585:61:14490:14490	3660437	17	True				
ANR	3660592	Statement	)	585:62:14491:14491	3660437	18	True				
ANR	3660593	CompoundStatement		25:64:759:759	3660437	19					
ANR	3660594	ReturnStatement	return false ;	586:3:14498:14510	3660437	0	True				
ANR	3660595	Identifier	false		3660437	0					
ANR	3660596	IfStatement	if ( ! get_omf_symbol_info ( obj ) )		3660437	20					
ANR	3660597	Condition	! get_omf_symbol_info ( obj )	588:6:14522:14547	3660437	0	True				
ANR	3660598	UnaryOperationExpression	! get_omf_symbol_info ( obj )		3660437	0					
ANR	3660599	UnaryOperator	!		3660437	0					
ANR	3660600	CallExpression	get_omf_symbol_info ( obj )		3660437	1					
ANR	3660601	Callee	get_omf_symbol_info		3660437	0					
ANR	3660602	Identifier	get_omf_symbol_info		3660437	0					
ANR	3660603	ArgumentList	obj		3660437	1					
ANR	3660604	Argument	obj		3660437	0					
ANR	3660605	Identifier	obj		3660437	0					
ANR	3660606	CompoundStatement		28:34:816:816	3660437	1					
ANR	3660607	ReturnStatement	return false ;	589:3:14555:14567	3660437	0	True				
ANR	3660608	Identifier	false		3660437	0					
ANR	3660609	ReturnStatement	return true ;	592:1:14577:14588	3660437	7	True				
ANR	3660610	Identifier	true		3660437	0					
ANR	3660611	ReturnType	static int		3660437	1					
ANR	3660612	Identifier	get_omf_infos		3660437	2					
ANR	3660613	ParameterList	r_bin_omf_obj * obj		3660437	3					
ANR	3660614	Parameter	r_bin_omf_obj * obj	561:25:13713:13730	3660437	0	True				
ANR	3660615	ParameterType	r_bin_omf_obj *		3660437	0					
ANR	3660616	Identifier	obj		3660437	1					
ANR	3660617	CFGEntryNode	ENTRY		3660437		True				
ANR	3660618	CFGExitNode	EXIT		3660437		True				
ANR	3660619	Symbol	* obj		3660437						
ANR	3660620	Symbol	cpy_omf_names		3660437						
ANR	3660621	Symbol	OMF_LNAMES		3660437						
ANR	3660622	Symbol	false		3660437						
ANR	3660623	Symbol	get_omf_symbol_info		3660437						
ANR	3660624	Symbol	OMF_PUBDEF		3660437						
ANR	3660625	Symbol	count_omf_record_type		3660437						
ANR	3660626	Symbol	obj		3660437						
ANR	3660627	Symbol	obj -> nb_section		3660437						
ANR	3660628	Symbol	OMF_SEGDEF		3660437						
ANR	3660629	Symbol	count_omf_multi_record_type		3660437						
ANR	3660630	Symbol	true		3660437						
ANR	3660631	Symbol	obj -> nb_symbol		3660437						
ANR	3660632	Symbol	obj -> nb_name		3660437						
ANR	3660633	Function	free_pubdef	595:0:14593:14795							
ANR	3660634	FunctionDef	free_pubdef (OMF_multi_datas * datas)		3660633	0					
ANR	3660635	CompoundStatement		595:48:14641:14795	3660633	0					
ANR	3660636	WhileStatement	while ( ct_rec < datas -> nb_elem )		3660633	0					
ANR	3660637	Condition	ct_rec < datas -> nb_elem	597:8:14657:14679	3660633	0	True				
ANR	3660638	RelationalExpression	ct_rec < datas -> nb_elem		3660633	0		<			
ANR	3660639	Identifier	ct_rec		3660633	0					
ANR	3660640	PtrMemberAccess	datas -> nb_elem		3660633	1					
ANR	3660641	Identifier	datas		3660633	0					
ANR	3660642	Identifier	nb_elem		3660633	1					
ANR	3660643	CompoundStatement		3:33:40:40	3660633	1					
ANR	3660644	ExpressionStatement	R_FREE ( ( ( OMF_symbol * ) ( datas -> elems + ct_rec ++ ) ) -> name )	598:2:14686:14742	3660633	0	True				
ANR	3660645	CallExpression	R_FREE ( ( ( OMF_symbol * ) ( datas -> elems + ct_rec ++ ) ) -> name )		3660633	0					
ANR	3660646	Callee	R_FREE		3660633	0					
ANR	3660647	Identifier	R_FREE		3660633	0					
ANR	3660648	ArgumentList	( ( OMF_symbol * ) ( datas -> elems + ct_rec ++ ) ) -> name		3660633	1					
ANR	3660649	Argument	( ( OMF_symbol * ) ( datas -> elems + ct_rec ++ ) ) -> name		3660633	0					
ANR	3660650	PtrMemberAccess	( ( OMF_symbol * ) ( datas -> elems + ct_rec ++ ) ) -> name		3660633	0					
ANR	3660651	CastExpression	( OMF_symbol * ) ( datas -> elems + ct_rec ++ )		3660633	0					
ANR	3660652	CastTarget	OMF_symbol *		3660633	0					
ANR	3660653	AdditiveExpression	datas -> elems + ct_rec ++		3660633	1		+			
ANR	3660654	PtrMemberAccess	datas -> elems		3660633	0					
ANR	3660655	Identifier	datas		3660633	0					
ANR	3660656	Identifier	elems		3660633	1					
ANR	3660657	PostIncDecOperationExpression	ct_rec ++		3660633	1					
ANR	3660658	Identifier	ct_rec		3660633	0					
ANR	3660659	IncDec	++		3660633	1					
ANR	3660660	Identifier	name		3660633	1					
ANR	3660661	ExpressionStatement	R_FREE ( datas -> elems )	601:1:14755:14776	3660633	1	True				
ANR	3660662	CallExpression	R_FREE ( datas -> elems )		3660633	0					
ANR	3660663	Callee	R_FREE		3660633	0					
ANR	3660664	Identifier	R_FREE		3660633	0					
ANR	3660665	ArgumentList	datas -> elems		3660633	1					
ANR	3660666	Argument	datas -> elems		3660633	0					
ANR	3660667	PtrMemberAccess	datas -> elems		3660633	0					
ANR	3660668	Identifier	datas		3660633	0					
ANR	3660669	Identifier	elems		3660633	1					
ANR	3660670	ExpressionStatement	R_FREE ( datas )	602:1:14779:14793	3660633	2	True				
ANR	3660671	CallExpression	R_FREE ( datas )		3660633	0					
ANR	3660672	Callee	R_FREE		3660633	0					
ANR	3660673	Identifier	R_FREE		3660633	0					
ANR	3660674	ArgumentList	datas		3660633	1					
ANR	3660675	Argument	datas		3660633	0					
ANR	3660676	Identifier	datas		3660633	0					
ANR	3660677	ReturnType	static void		3660633	1					
ANR	3660678	Identifier	free_pubdef		3660633	2					
ANR	3660679	ParameterList	OMF_multi_datas * datas		3660633	3					
ANR	3660680	Parameter	OMF_multi_datas * datas	595:24:14617:14638	3660633	0	True				
ANR	3660681	ParameterType	OMF_multi_datas *		3660633	0					
ANR	3660682	Identifier	datas		3660633	1					
ANR	3660683	CFGEntryNode	ENTRY		3660633		True				
ANR	3660684	CFGExitNode	EXIT		3660633		True				
ANR	3660685	Symbol	datas -> elems		3660633						
ANR	3660686	Symbol	* * datas		3660633						
ANR	3660687	Symbol	datas		3660633						
ANR	3660688	Symbol	( ( OMF_symbol * ) ( datas -> elems + ct_rec ++ ) ) -> name		3660633						
ANR	3660689	Symbol	datas -> nb_elem		3660633						
ANR	3660690	Symbol	* datas -> elems		3660633						
ANR	3660691	Symbol	* datas		3660633						
ANR	3660692	Symbol	ct_rec		3660633						
ANR	3660693	Function	free_all_omf_records	605:0:14798:15306							
ANR	3660694	FunctionDef	free_all_omf_records (r_bin_omf_obj * obj)		3660693	0					
ANR	3660695	CompoundStatement		605:53:14851:15306	3660693	0					
ANR	3660696	IdentifierDeclStatement	OMF_record_handler * tmp = NULL ;	606:1:14854:14884	3660693	0	True				
ANR	3660697	IdentifierDecl	* tmp = NULL		3660693	0					
ANR	3660698	IdentifierDeclType	OMF_record_handler *		3660693	0					
ANR	3660699	Identifier	tmp		3660693	1					
ANR	3660700	AssignmentExpression	* tmp = NULL		3660693	2		=			
ANR	3660701	Identifier	NULL		3660693	0					
ANR	3660702	Identifier	NULL		3660693	1					
ANR	3660703	IdentifierDeclStatement	OMF_record_handler * rec = obj -> records ;	607:1:14887:14925	3660693	1	True				
ANR	3660704	IdentifierDecl	* rec = obj -> records		3660693	0					
ANR	3660705	IdentifierDeclType	OMF_record_handler *		3660693	0					
ANR	3660706	Identifier	rec		3660693	1					
ANR	3660707	AssignmentExpression	* rec = obj -> records		3660693	2		=			
ANR	3660708	Identifier	rec		3660693	0					
ANR	3660709	PtrMemberAccess	obj -> records		3660693	1					
ANR	3660710	Identifier	obj		3660693	0					
ANR	3660711	Identifier	records		3660693	1					
ANR	3660712	WhileStatement	while ( rec )		3660693	2					
ANR	3660713	Condition	rec	609:8:14936:14938	3660693	0	True				
ANR	3660714	Identifier	rec		3660693	0					
ANR	3660715	CompoundStatement		5:13:89:89	3660693	1					
ANR	3660716	IfStatement	if ( ( ( OMF_record * ) rec ) -> type == OMF_LNAMES )		3660693	0					
ANR	3660717	Condition	( ( OMF_record * ) rec ) -> type == OMF_LNAMES	610:6:14949:14987	3660693	0	True				
ANR	3660718	EqualityExpression	( ( OMF_record * ) rec ) -> type == OMF_LNAMES		3660693	0		==			
ANR	3660719	PtrMemberAccess	( ( OMF_record * ) rec ) -> type		3660693	0					
ANR	3660720	CastExpression	( OMF_record * ) rec		3660693	0					
ANR	3660721	CastTarget	OMF_record *		3660693	0					
ANR	3660722	Identifier	rec		3660693	1					
ANR	3660723	Identifier	type		3660693	1					
ANR	3660724	Identifier	OMF_LNAMES		3660693	1					
ANR	3660725	CompoundStatement		6:47:138:138	3660693	1					
ANR	3660726	ExpressionStatement	free_lname ( ( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content )	611:3:14995:15054	3660693	0	True				
ANR	3660727	CallExpression	free_lname ( ( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content )		3660693	0					
ANR	3660728	Callee	free_lname		3660693	0					
ANR	3660729	Identifier	free_lname		3660693	0					
ANR	3660730	ArgumentList	( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content		3660693	1					
ANR	3660731	Argument	( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content		3660693	0					
ANR	3660732	CastExpression	( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content		3660693	0					
ANR	3660733	CastTarget	OMF_multi_datas *		3660693	0					
ANR	3660734	PtrMemberAccess	( ( OMF_record * ) rec ) -> content		3660693	1					
ANR	3660735	CastExpression	( OMF_record * ) rec		3660693	0					
ANR	3660736	CastTarget	OMF_record *		3660693	0					
ANR	3660737	Identifier	rec		3660693	1					
ANR	3660738	Identifier	content		3660693	1					
ANR	3660739	ElseStatement	else		3660693	0					
ANR	3660740	IfStatement	if ( ( ( OMF_record * ) rec ) -> type == OMF_PUBDEF )		3660693	0					
ANR	3660741	Condition	( ( OMF_record * ) rec ) -> type == OMF_PUBDEF	612:13:15069:15107	3660693	0	True				
ANR	3660742	EqualityExpression	( ( OMF_record * ) rec ) -> type == OMF_PUBDEF		3660693	0		==			
ANR	3660743	PtrMemberAccess	( ( OMF_record * ) rec ) -> type		3660693	0					
ANR	3660744	CastExpression	( OMF_record * ) rec		3660693	0					
ANR	3660745	CastTarget	OMF_record *		3660693	0					
ANR	3660746	Identifier	rec		3660693	1					
ANR	3660747	Identifier	type		3660693	1					
ANR	3660748	Identifier	OMF_PUBDEF		3660693	1					
ANR	3660749	CompoundStatement		8:54:258:258	3660693	1					
ANR	3660750	ExpressionStatement	free_pubdef ( ( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content )	613:3:15115:15175	3660693	0	True				
ANR	3660751	CallExpression	free_pubdef ( ( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content )		3660693	0					
ANR	3660752	Callee	free_pubdef		3660693	0					
ANR	3660753	Identifier	free_pubdef		3660693	0					
ANR	3660754	ArgumentList	( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content		3660693	1					
ANR	3660755	Argument	( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content		3660693	0					
ANR	3660756	CastExpression	( OMF_multi_datas * ) ( ( OMF_record * ) rec ) -> content		3660693	0					
ANR	3660757	CastTarget	OMF_multi_datas *		3660693	0					
ANR	3660758	PtrMemberAccess	( ( OMF_record * ) rec ) -> content		3660693	1					
ANR	3660759	CastExpression	( OMF_record * ) rec		3660693	0					
ANR	3660760	CastTarget	OMF_record *		3660693	0					
ANR	3660761	Identifier	rec		3660693	1					
ANR	3660762	Identifier	content		3660693	1					
ANR	3660763	ElseStatement	else		3660693	0					
ANR	3660764	CompoundStatement		10:9:334:334	3660693	0					
ANR	3660765	ExpressionStatement	R_FREE ( ( ( OMF_record * ) rec ) -> content )	615:3:15191:15228	3660693	0	True				
ANR	3660766	CallExpression	R_FREE ( ( ( OMF_record * ) rec ) -> content )		3660693	0					
ANR	3660767	Callee	R_FREE		3660693	0					
ANR	3660768	Identifier	R_FREE		3660693	0					
ANR	3660769	ArgumentList	( ( OMF_record * ) rec ) -> content		3660693	1					
ANR	3660770	Argument	( ( OMF_record * ) rec ) -> content		3660693	0					
ANR	3660771	PtrMemberAccess	( ( OMF_record * ) rec ) -> content		3660693	0					
ANR	3660772	CastExpression	( OMF_record * ) rec		3660693	0					
ANR	3660773	CastTarget	OMF_record *		3660693	0					
ANR	3660774	Identifier	rec		3660693	1					
ANR	3660775	Identifier	content		3660693	1					
ANR	3660776	ExpressionStatement	tmp = rec -> next	617:2:15236:15251	3660693	1	True				
ANR	3660777	AssignmentExpression	tmp = rec -> next		3660693	0		=			
ANR	3660778	Identifier	tmp		3660693	0					
ANR	3660779	PtrMemberAccess	rec -> next		3660693	1					
ANR	3660780	Identifier	rec		3660693	0					
ANR	3660781	Identifier	next		3660693	1					
ANR	3660782	ExpressionStatement	R_FREE ( rec )	618:2:15255:15266	3660693	2	True				
ANR	3660783	CallExpression	R_FREE ( rec )		3660693	0					
ANR	3660784	Callee	R_FREE		3660693	0					
ANR	3660785	Identifier	R_FREE		3660693	0					
ANR	3660786	ArgumentList	rec		3660693	1					
ANR	3660787	Argument	rec		3660693	0					
ANR	3660788	Identifier	rec		3660693	0					
ANR	3660789	ExpressionStatement	rec = tmp	619:2:15270:15279	3660693	3	True				
ANR	3660790	AssignmentExpression	rec = tmp		3660693	0		=			
ANR	3660791	Identifier	rec		3660693	0					
ANR	3660792	Identifier	tmp		3660693	1					
ANR	3660793	ExpressionStatement	obj -> records = NULL	621:1:15285:15304	3660693	3	True				
ANR	3660794	AssignmentExpression	obj -> records = NULL		3660693	0		=			
ANR	3660795	PtrMemberAccess	obj -> records		3660693	0					
ANR	3660796	Identifier	obj		3660693	0					
ANR	3660797	Identifier	records		3660693	1					
ANR	3660798	Identifier	NULL		3660693	1					
ANR	3660799	ReturnType	static void		3660693	1					
ANR	3660800	Identifier	free_all_omf_records		3660693	2					
ANR	3660801	ParameterList	r_bin_omf_obj * obj		3660693	3					
ANR	3660802	Parameter	r_bin_omf_obj * obj	605:33:14831:14848	3660693	0	True				
ANR	3660803	ParameterType	r_bin_omf_obj *		3660693	0					
ANR	3660804	Identifier	obj		3660693	1					
ANR	3660805	CFGEntryNode	ENTRY		3660693		True				
ANR	3660806	CFGExitNode	EXIT		3660693		True				
ANR	3660807	Symbol	* obj		3660693						
ANR	3660808	Symbol	rec		3660693						
ANR	3660809	Symbol	( ( OMF_record * ) rec ) -> content		3660693						
ANR	3660810	Symbol	( ( OMF_record * ) rec ) -> type		3660693						
ANR	3660811	Symbol	NULL		3660693						
ANR	3660812	Symbol	obj		3660693						
ANR	3660813	Symbol	tmp		3660693						
ANR	3660814	Symbol	OMF_LNAMES		3660693						
ANR	3660815	Symbol	* rec		3660693						
ANR	3660816	Symbol	rec -> next		3660693						
ANR	3660817	Symbol	obj -> records		3660693						
ANR	3660818	Symbol	OMF_PUBDEF		3660693						
ANR	3660819	Function	free_all_omf_sections	624:0:15309:15647							
ANR	3660820	FunctionDef	free_all_omf_sections (r_bin_omf_obj * obj)		3660819	0					
ANR	3660821	CompoundStatement		624:54:15363:15647	3660819	0					
ANR	3660822	IdentifierDeclStatement	ut32 ct = 0 ;	625:1:15366:15377	3660819	0	True				
ANR	3660823	IdentifierDecl	ct = 0		3660819	0					
ANR	3660824	IdentifierDeclType	ut32		3660819	0					
ANR	3660825	Identifier	ct		3660819	1					
ANR	3660826	AssignmentExpression	ct = 0		3660819	2		=			
ANR	3660827	Identifier	ct		3660819	0					
ANR	3660828	PrimaryExpression	0		3660819	1					
ANR	3660829	IdentifierDeclStatement	OMF_data * data ;	626:1:15380:15394	3660819	1	True				
ANR	3660830	IdentifierDecl	* data		3660819	0					
ANR	3660831	IdentifierDeclType	OMF_data *		3660819	0					
ANR	3660832	Identifier	data		3660819	1					
ANR	3660833	WhileStatement	while ( ct < obj -> nb_section )		3660819	2					
ANR	3660834	Condition	ct < obj -> nb_section	628:8:15405:15424	3660819	0	True				
ANR	3660835	RelationalExpression	ct < obj -> nb_section		3660819	0		<			
ANR	3660836	Identifier	ct		3660819	0					
ANR	3660837	PtrMemberAccess	obj -> nb_section		3660819	1					
ANR	3660838	Identifier	obj		3660819	0					
ANR	3660839	Identifier	nb_section		3660819	1					
ANR	3660840	CompoundStatement		5:30:63:63	3660819	1					
ANR	3660841	WhileStatement	while ( obj -> sections [ ct ] -> data )		3660819	0					
ANR	3660842	Condition	obj -> sections [ ct ] -> data	629:9:15438:15460	3660819	0	True				
ANR	3660843	PtrMemberAccess	obj -> sections [ ct ] -> data		3660819	0					
ANR	3660844	ArrayIndexing	obj -> sections [ ct ]		3660819	0					
ANR	3660845	PtrMemberAccess	obj -> sections		3660819	0					
ANR	3660846	Identifier	obj		3660819	0					
ANR	3660847	Identifier	sections		3660819	1					
ANR	3660848	Identifier	ct		3660819	1					
ANR	3660849	Identifier	data		3660819	1					
ANR	3660850	CompoundStatement		6:34:99:99	3660819	1					
ANR	3660851	ExpressionStatement	data = obj -> sections [ ct ] -> data -> next	630:3:15468:15504	3660819	0	True				
ANR	3660852	AssignmentExpression	data = obj -> sections [ ct ] -> data -> next		3660819	0		=			
ANR	3660853	Identifier	data		3660819	0					
ANR	3660854	PtrMemberAccess	obj -> sections [ ct ] -> data -> next		3660819	1					
ANR	3660855	PtrMemberAccess	obj -> sections [ ct ] -> data		3660819	0					
ANR	3660856	ArrayIndexing	obj -> sections [ ct ]		3660819	0					
ANR	3660857	PtrMemberAccess	obj -> sections		3660819	0					
ANR	3660858	Identifier	obj		3660819	0					
ANR	3660859	Identifier	sections		3660819	1					
ANR	3660860	Identifier	ct		3660819	1					
ANR	3660861	Identifier	data		3660819	1					
ANR	3660862	Identifier	next		3660819	1					
ANR	3660863	ExpressionStatement	R_FREE ( obj -> sections [ ct ] -> data )	631:3:15509:15540	3660819	1	True				
ANR	3660864	CallExpression	R_FREE ( obj -> sections [ ct ] -> data )		3660819	0					
ANR	3660865	Callee	R_FREE		3660819	0					
ANR	3660866	Identifier	R_FREE		3660819	0					
ANR	3660867	ArgumentList	obj -> sections [ ct ] -> data		3660819	1					
ANR	3660868	Argument	obj -> sections [ ct ] -> data		3660819	0					
ANR	3660869	PtrMemberAccess	obj -> sections [ ct ] -> data		3660819	0					
ANR	3660870	ArrayIndexing	obj -> sections [ ct ]		3660819	0					
ANR	3660871	PtrMemberAccess	obj -> sections		3660819	0					
ANR	3660872	Identifier	obj		3660819	0					
ANR	3660873	Identifier	sections		3660819	1					
ANR	3660874	Identifier	ct		3660819	1					
ANR	3660875	Identifier	data		3660819	1					
ANR	3660876	ExpressionStatement	obj -> sections [ ct ] -> data = data	632:3:15545:15575	3660819	2	True				
ANR	3660877	AssignmentExpression	obj -> sections [ ct ] -> data = data		3660819	0		=			
ANR	3660878	PtrMemberAccess	obj -> sections [ ct ] -> data		3660819	0					
ANR	3660879	ArrayIndexing	obj -> sections [ ct ]		3660819	0					
ANR	3660880	PtrMemberAccess	obj -> sections		3660819	0					
ANR	3660881	Identifier	obj		3660819	0					
ANR	3660882	Identifier	sections		3660819	1					
ANR	3660883	Identifier	ct		3660819	1					
ANR	3660884	Identifier	data		3660819	1					
ANR	3660885	Identifier	data		3660819	1					
ANR	3660886	ExpressionStatement	R_FREE ( obj -> sections [ ct ] )	634:2:15583:15609	3660819	1	True				
ANR	3660887	CallExpression	R_FREE ( obj -> sections [ ct ] )		3660819	0					
ANR	3660888	Callee	R_FREE		3660819	0					
ANR	3660889	Identifier	R_FREE		3660819	0					
ANR	3660890	ArgumentList	obj -> sections [ ct ]		3660819	1					
ANR	3660891	Argument	obj -> sections [ ct ]		3660819	0					
ANR	3660892	ArrayIndexing	obj -> sections [ ct ]		3660819	0					
ANR	3660893	PtrMemberAccess	obj -> sections		3660819	0					
ANR	3660894	Identifier	obj		3660819	0					
ANR	3660895	Identifier	sections		3660819	1					
ANR	3660896	Identifier	ct		3660819	1					
ANR	3660897	ExpressionStatement	ct ++	635:2:15613:15617	3660819	2	True				
ANR	3660898	PostIncDecOperationExpression	ct ++		3660819	0					
ANR	3660899	Identifier	ct		3660819	0					
ANR	3660900	IncDec	++		3660819	1					
ANR	3660901	ExpressionStatement	R_FREE ( obj -> sections )	637:1:15623:15645	3660819	3	True				
ANR	3660902	CallExpression	R_FREE ( obj -> sections )		3660819	0					
ANR	3660903	Callee	R_FREE		3660819	0					
ANR	3660904	Identifier	R_FREE		3660819	0					
ANR	3660905	ArgumentList	obj -> sections		3660819	1					
ANR	3660906	Argument	obj -> sections		3660819	0					
ANR	3660907	PtrMemberAccess	obj -> sections		3660819	0					
ANR	3660908	Identifier	obj		3660819	0					
ANR	3660909	Identifier	sections		3660819	1					
ANR	3660910	ReturnType	static void		3660819	1					
ANR	3660911	Identifier	free_all_omf_sections		3660819	2					
ANR	3660912	ParameterList	r_bin_omf_obj * obj		3660819	3					
ANR	3660913	Parameter	r_bin_omf_obj * obj	624:34:15343:15360	3660819	0	True				
ANR	3660914	ParameterType	r_bin_omf_obj *		3660819	0					
ANR	3660915	Identifier	obj		3660819	1					
ANR	3660916	CFGEntryNode	ENTRY		3660819		True				
ANR	3660917	CFGExitNode	EXIT		3660819		True				
ANR	3660918	Symbol	* obj		3660819						
ANR	3660919	Symbol	data		3660819						
ANR	3660920	Symbol	* obj -> sections [ ct ] -> data		3660819						
ANR	3660921	Symbol	* * * ct		3660819						
ANR	3660922	Symbol	* * obj		3660819						
ANR	3660923	Symbol	* * * * obj		3660819						
ANR	3660924	Symbol	obj -> sections [ ct ] -> data		3660819						
ANR	3660925	Symbol	ct		3660819						
ANR	3660926	Symbol	* ct		3660819						
ANR	3660927	Symbol	* * * obj		3660819						
ANR	3660928	Symbol	obj -> sections [ ct ] -> data -> next		3660819						
ANR	3660929	Symbol	obj		3660819						
ANR	3660930	Symbol	obj -> nb_section		3660819						
ANR	3660931	Symbol	* obj -> sections		3660819						
ANR	3660932	Symbol	* * * obj -> sections		3660819						
ANR	3660933	Symbol	* * obj -> sections		3660819						
ANR	3660934	Symbol	obj -> sections		3660819						
ANR	3660935	Symbol	* * ct		3660819						
ANR	3660936	Function	free_all_omf_symbols	640:0:15650:15848							
ANR	3660937	FunctionDef	free_all_omf_symbols (r_bin_omf_obj * obj)		3660936	0					
ANR	3660938	CompoundStatement		640:53:15703:15848	3660936	0					
ANR	3660939	IdentifierDeclStatement	ut32 ct = 0 ;	641:1:15706:15717	3660936	0	True				
ANR	3660940	IdentifierDecl	ct = 0		3660936	0					
ANR	3660941	IdentifierDeclType	ut32		3660936	0					
ANR	3660942	Identifier	ct		3660936	1					
ANR	3660943	AssignmentExpression	ct = 0		3660936	2		=			
ANR	3660944	Identifier	ct		3660936	0					
ANR	3660945	PrimaryExpression	0		3660936	1					
ANR	3660946	WhileStatement	while ( ct < obj -> nb_symbol )		3660936	1					
ANR	3660947	Condition	ct < obj -> nb_symbol	642:8:15727:15745	3660936	0	True				
ANR	3660948	RelationalExpression	ct < obj -> nb_symbol		3660936	0		<			
ANR	3660949	Identifier	ct		3660936	0					
ANR	3660950	PtrMemberAccess	obj -> nb_symbol		3660936	1					
ANR	3660951	Identifier	obj		3660936	0					
ANR	3660952	Identifier	nb_symbol		3660936	1					
ANR	3660953	CompoundStatement		3:29:44:44	3660936	1					
ANR	3660954	ExpressionStatement	R_FREE ( obj -> symbols [ ct ] -> name )	643:2:15752:15782	3660936	0	True				
ANR	3660955	CallExpression	R_FREE ( obj -> symbols [ ct ] -> name )		3660936	0					
ANR	3660956	Callee	R_FREE		3660936	0					
ANR	3660957	Identifier	R_FREE		3660936	0					
ANR	3660958	ArgumentList	obj -> symbols [ ct ] -> name		3660936	1					
ANR	3660959	Argument	obj -> symbols [ ct ] -> name		3660936	0					
ANR	3660960	PtrMemberAccess	obj -> symbols [ ct ] -> name		3660936	0					
ANR	3660961	ArrayIndexing	obj -> symbols [ ct ]		3660936	0					
ANR	3660962	PtrMemberAccess	obj -> symbols		3660936	0					
ANR	3660963	Identifier	obj		3660936	0					
ANR	3660964	Identifier	symbols		3660936	1					
ANR	3660965	Identifier	ct		3660936	1					
ANR	3660966	Identifier	name		3660936	1					
ANR	3660967	ExpressionStatement	R_FREE ( obj -> symbols [ ct ] )	644:2:15786:15810	3660936	1	True				
ANR	3660968	CallExpression	R_FREE ( obj -> symbols [ ct ] )		3660936	0					
ANR	3660969	Callee	R_FREE		3660936	0					
ANR	3660970	Identifier	R_FREE		3660936	0					
ANR	3660971	ArgumentList	obj -> symbols [ ct ]		3660936	1					
ANR	3660972	Argument	obj -> symbols [ ct ]		3660936	0					
ANR	3660973	ArrayIndexing	obj -> symbols [ ct ]		3660936	0					
ANR	3660974	PtrMemberAccess	obj -> symbols		3660936	0					
ANR	3660975	Identifier	obj		3660936	0					
ANR	3660976	Identifier	symbols		3660936	1					
ANR	3660977	Identifier	ct		3660936	1					
ANR	3660978	ExpressionStatement	ct ++	646:2:15815:15819	3660936	2	True				
ANR	3660979	PostIncDecOperationExpression	ct ++		3660936	0					
ANR	3660980	Identifier	ct		3660936	0					
ANR	3660981	IncDec	++		3660936	1					
ANR	3660982	ExpressionStatement	R_FREE ( obj -> symbols )	648:1:15825:15846	3660936	2	True				
ANR	3660983	CallExpression	R_FREE ( obj -> symbols )		3660936	0					
ANR	3660984	Callee	R_FREE		3660936	0					
ANR	3660985	Identifier	R_FREE		3660936	0					
ANR	3660986	ArgumentList	obj -> symbols		3660936	1					
ANR	3660987	Argument	obj -> symbols		3660936	0					
ANR	3660988	PtrMemberAccess	obj -> symbols		3660936	0					
ANR	3660989	Identifier	obj		3660936	0					
ANR	3660990	Identifier	symbols		3660936	1					
ANR	3660991	ReturnType	static void		3660936	1					
ANR	3660992	Identifier	free_all_omf_symbols		3660936	2					
ANR	3660993	ParameterList	r_bin_omf_obj * obj		3660936	3					
ANR	3660994	Parameter	r_bin_omf_obj * obj	640:33:15683:15700	3660936	0	True				
ANR	3660995	ParameterType	r_bin_omf_obj *		3660936	0					
ANR	3660996	Identifier	obj		3660936	1					
ANR	3660997	CFGEntryNode	ENTRY		3660936		True				
ANR	3660998	CFGExitNode	EXIT		3660936		True				
ANR	3660999	Symbol	ct		3660936						
ANR	3661000	Symbol	* obj		3660936						
ANR	3661001	Symbol	* obj -> symbols		3660936						
ANR	3661002	Symbol	obj -> symbols [ ct ] -> name		3660936						
ANR	3661003	Symbol	* ct		3660936						
ANR	3661004	Symbol	* * * obj		3660936						
ANR	3661005	Symbol	* * obj -> symbols		3660936						
ANR	3661006	Symbol	obj		3660936						
ANR	3661007	Symbol	* * obj		3660936						
ANR	3661008	Symbol	obj -> symbols		3660936						
ANR	3661009	Symbol	obj -> nb_symbol		3660936						
ANR	3661010	Symbol	* * ct		3660936						
ANR	3661011	Function	free_all_omf_names	651:0:15851:16007							
ANR	3661012	FunctionDef	free_all_omf_names (r_bin_omf_obj * obj)		3661011	0					
ANR	3661013	CompoundStatement		651:51:15902:16007	3661011	0					
ANR	3661014	IdentifierDeclStatement	ut32 ct = 0 ;	652:1:15905:15916	3661011	0	True				
ANR	3661015	IdentifierDecl	ct = 0		3661011	0					
ANR	3661016	IdentifierDeclType	ut32		3661011	0					
ANR	3661017	Identifier	ct		3661011	1					
ANR	3661018	AssignmentExpression	ct = 0		3661011	2		=			
ANR	3661019	Identifier	ct		3661011	0					
ANR	3661020	PrimaryExpression	0		3661011	1					
ANR	3661021	WhileStatement	while ( ct < obj -> nb_name )		3661011	1					
ANR	3661022	Condition	ct < obj -> nb_name	654:8:15927:15943	3661011	0	True				
ANR	3661023	RelationalExpression	ct < obj -> nb_name		3661011	0		<			
ANR	3661024	Identifier	ct		3661011	0					
ANR	3661025	PtrMemberAccess	obj -> nb_name		3661011	1					
ANR	3661026	Identifier	obj		3661011	0					
ANR	3661027	Identifier	nb_name		3661011	1					
ANR	3661028	CompoundStatement		4:27:43:43	3661011	1					
ANR	3661029	ExpressionStatement	R_FREE ( obj -> names [ ct ] )	655:2:15950:15973	3661011	0	True				
ANR	3661030	CallExpression	R_FREE ( obj -> names [ ct ] )		3661011	0					
ANR	3661031	Callee	R_FREE		3661011	0					
ANR	3661032	Identifier	R_FREE		3661011	0					
ANR	3661033	ArgumentList	obj -> names [ ct ]		3661011	1					
ANR	3661034	Argument	obj -> names [ ct ]		3661011	0					
ANR	3661035	ArrayIndexing	obj -> names [ ct ]		3661011	0					
ANR	3661036	PtrMemberAccess	obj -> names		3661011	0					
ANR	3661037	Identifier	obj		3661011	0					
ANR	3661038	Identifier	names		3661011	1					
ANR	3661039	Identifier	ct		3661011	1					
ANR	3661040	ExpressionStatement	ct ++	656:2:15977:15981	3661011	1	True				
ANR	3661041	PostIncDecOperationExpression	ct ++		3661011	0					
ANR	3661042	Identifier	ct		3661011	0					
ANR	3661043	IncDec	++		3661011	1					
ANR	3661044	ExpressionStatement	R_FREE ( obj -> names )	658:1:15987:16005	3661011	2	True				
ANR	3661045	CallExpression	R_FREE ( obj -> names )		3661011	0					
ANR	3661046	Callee	R_FREE		3661011	0					
ANR	3661047	Identifier	R_FREE		3661011	0					
ANR	3661048	ArgumentList	obj -> names		3661011	1					
ANR	3661049	Argument	obj -> names		3661011	0					
ANR	3661050	PtrMemberAccess	obj -> names		3661011	0					
ANR	3661051	Identifier	obj		3661011	0					
ANR	3661052	Identifier	names		3661011	1					
ANR	3661053	ReturnType	static void		3661011	1					
ANR	3661054	Identifier	free_all_omf_names		3661011	2					
ANR	3661055	ParameterList	r_bin_omf_obj * obj		3661011	3					
ANR	3661056	Parameter	r_bin_omf_obj * obj	651:31:15882:15899	3661011	0	True				
ANR	3661057	ParameterType	r_bin_omf_obj *		3661011	0					
ANR	3661058	Identifier	obj		3661011	1					
ANR	3661059	CFGEntryNode	ENTRY		3661011		True				
ANR	3661060	CFGExitNode	EXIT		3661011		True				
ANR	3661061	Symbol	ct		3661011						
ANR	3661062	Symbol	* obj		3661011						
ANR	3661063	Symbol	* obj -> names		3661011						
ANR	3661064	Symbol	* ct		3661011						
ANR	3661065	Symbol	obj		3661011						
ANR	3661066	Symbol	obj -> names		3661011						
ANR	3661067	Symbol	* * obj		3661011						
ANR	3661068	Symbol	obj -> nb_name		3661011						
ANR	3661069	Function	r_bin_free_all_omf_obj	661:0:16010:16315							
ANR	3661070	FunctionDef	r_bin_free_all_omf_obj (r_bin_omf_obj * obj)		3661069	0					
ANR	3661071	CompoundStatement		661:48:16058:16315	3661069	0					
ANR	3661072	IfStatement	if ( obj )		3661069	0					
ANR	3661073	Condition	obj	662:5:16065:16067	3661069	0	True				
ANR	3661074	Identifier	obj		3661069	0					
ANR	3661075	CompoundStatement		2:10:11:11	3661069	1					
ANR	3661076	IfStatement	if ( obj -> records )		3661069	0					
ANR	3661077	Condition	obj -> records	663:6:16078:16089	3661069	0	True				
ANR	3661078	PtrMemberAccess	obj -> records		3661069	0					
ANR	3661079	Identifier	obj		3661069	0					
ANR	3661080	Identifier	records		3661069	1					
ANR	3661081	CompoundStatement		3:20:33:33	3661069	1					
ANR	3661082	ExpressionStatement	free_all_omf_records ( obj )	664:3:16097:16123	3661069	0	True				
ANR	3661083	CallExpression	free_all_omf_records ( obj )		3661069	0					
ANR	3661084	Callee	free_all_omf_records		3661069	0					
ANR	3661085	Identifier	free_all_omf_records		3661069	0					
ANR	3661086	ArgumentList	obj		3661069	1					
ANR	3661087	Argument	obj		3661069	0					
ANR	3661088	Identifier	obj		3661069	0					
ANR	3661089	IfStatement	if ( obj -> sections )		3661069	1					
ANR	3661090	Condition	obj -> sections	666:6:16135:16147	3661069	0	True				
ANR	3661091	PtrMemberAccess	obj -> sections		3661069	0					
ANR	3661092	Identifier	obj		3661069	0					
ANR	3661093	Identifier	sections		3661069	1					
ANR	3661094	CompoundStatement		6:21:91:91	3661069	1					
ANR	3661095	ExpressionStatement	free_all_omf_sections ( obj )	667:3:16155:16182	3661069	0	True				
ANR	3661096	CallExpression	free_all_omf_sections ( obj )		3661069	0					
ANR	3661097	Callee	free_all_omf_sections		3661069	0					
ANR	3661098	Identifier	free_all_omf_sections		3661069	0					
ANR	3661099	ArgumentList	obj		3661069	1					
ANR	3661100	Argument	obj		3661069	0					
ANR	3661101	Identifier	obj		3661069	0					
ANR	3661102	IfStatement	if ( obj -> symbols )		3661069	2					
ANR	3661103	Condition	obj -> symbols	669:6:16194:16205	3661069	0	True				
ANR	3661104	PtrMemberAccess	obj -> symbols		3661069	0					
ANR	3661105	Identifier	obj		3661069	0					
ANR	3661106	Identifier	symbols		3661069	1					
ANR	3661107	CompoundStatement		9:20:149:149	3661069	1					
ANR	3661108	ExpressionStatement	free_all_omf_symbols ( obj )	670:3:16213:16239	3661069	0	True				
ANR	3661109	CallExpression	free_all_omf_symbols ( obj )		3661069	0					
ANR	3661110	Callee	free_all_omf_symbols		3661069	0					
ANR	3661111	Identifier	free_all_omf_symbols		3661069	0					
ANR	3661112	ArgumentList	obj		3661069	1					
ANR	3661113	Argument	obj		3661069	0					
ANR	3661114	Identifier	obj		3661069	0					
ANR	3661115	IfStatement	if ( obj -> names )		3661069	3					
ANR	3661116	Condition	obj -> names	672:6:16251:16260	3661069	0	True				
ANR	3661117	PtrMemberAccess	obj -> names		3661069	0					
ANR	3661118	Identifier	obj		3661069	0					
ANR	3661119	Identifier	names		3661069	1					
ANR	3661120	CompoundStatement		12:18:204:204	3661069	1					
ANR	3661121	ExpressionStatement	free_all_omf_names ( obj )	673:3:16268:16292	3661069	0	True				
ANR	3661122	CallExpression	free_all_omf_names ( obj )		3661069	0					
ANR	3661123	Callee	free_all_omf_names		3661069	0					
ANR	3661124	Identifier	free_all_omf_names		3661069	0					
ANR	3661125	ArgumentList	obj		3661069	1					
ANR	3661126	Argument	obj		3661069	0					
ANR	3661127	Identifier	obj		3661069	0					
ANR	3661128	ExpressionStatement	free ( obj )	675:2:16300:16310	3661069	4	True				
ANR	3661129	CallExpression	free ( obj )		3661069	0					
ANR	3661130	Callee	free		3661069	0					
ANR	3661131	Identifier	free		3661069	0					
ANR	3661132	ArgumentList	obj		3661069	1					
ANR	3661133	Argument	obj		3661069	0					
ANR	3661134	Identifier	obj		3661069	0					
ANR	3661135	ReturnType	void		3661069	1					
ANR	3661136	Identifier	r_bin_free_all_omf_obj		3661069	2					
ANR	3661137	ParameterList	r_bin_omf_obj * obj		3661069	3					
ANR	3661138	Parameter	r_bin_omf_obj * obj	661:28:16038:16055	3661069	0	True				
ANR	3661139	ParameterType	r_bin_omf_obj *		3661069	0					
ANR	3661140	Identifier	obj		3661069	1					
ANR	3661141	CFGEntryNode	ENTRY		3661069		True				
ANR	3661142	CFGExitNode	EXIT		3661069		True				
ANR	3661143	Symbol	* obj		3661069						
ANR	3661144	Symbol	obj		3661069						
ANR	3661145	Symbol	obj -> names		3661069						
ANR	3661146	Symbol	obj -> symbols		3661069						
ANR	3661147	Symbol	obj -> records		3661069						
ANR	3661148	Symbol	obj -> sections		3661069						
ANR	3661149	Function	r_bin_internal_omf_load	679:0:16318:16687							
ANR	3661150	FunctionDef	"r_bin_internal_omf_load (const ut8 * buf , ut64 size)"		3661149	0					
ANR	3661151	CompoundStatement		679:66:16384:16687	3661149	0					
ANR	3661152	IdentifierDeclStatement	r_bin_omf_obj * ret = NULL ;	680:1:16387:16412	3661149	0	True				
ANR	3661153	IdentifierDecl	* ret = NULL		3661149	0					
ANR	3661154	IdentifierDeclType	r_bin_omf_obj *		3661149	0					
ANR	3661155	Identifier	ret		3661149	1					
ANR	3661156	AssignmentExpression	* ret = NULL		3661149	2		=			
ANR	3661157	Identifier	NULL		3661149	0					
ANR	3661158	Identifier	NULL		3661149	1					
ANR	3661159	IfStatement	if ( ! ( ret = R_NEW0 ( r_bin_omf_obj ) ) )		3661149	1					
ANR	3661160	Condition	! ( ret = R_NEW0 ( r_bin_omf_obj ) )	682:5:16420:16450	3661149	0	True				
ANR	3661161	UnaryOperationExpression	! ( ret = R_NEW0 ( r_bin_omf_obj ) )		3661149	0					
ANR	3661162	UnaryOperator	!		3661149	0					
ANR	3661163	AssignmentExpression	ret = R_NEW0 ( r_bin_omf_obj )		3661149	1		=			
ANR	3661164	Identifier	ret		3661149	0					
ANR	3661165	CallExpression	R_NEW0 ( r_bin_omf_obj )		3661149	1					
ANR	3661166	Callee	R_NEW0		3661149	0					
ANR	3661167	Identifier	R_NEW0		3661149	0					
ANR	3661168	ArgumentList	r_bin_omf_obj		3661149	1					
ANR	3661169	Argument	r_bin_omf_obj		3661149	0					
ANR	3661170	Identifier	r_bin_omf_obj		3661149	0					
ANR	3661171	CompoundStatement		4:38:68:68	3661149	1					
ANR	3661172	ReturnStatement	return NULL ;	683:2:16457:16468	3661149	0	True				
ANR	3661173	Identifier	NULL		3661149	0					
ANR	3661174	IfStatement	"if ( ! load_all_omf_records ( ret , buf , size ) )"		3661149	2					
ANR	3661175	Condition	"! load_all_omf_records ( ret , buf , size )"	685:5:16478:16514	3661149	0	True				
ANR	3661176	UnaryOperationExpression	"! load_all_omf_records ( ret , buf , size )"		3661149	0					
ANR	3661177	UnaryOperator	!		3661149	0					
ANR	3661178	CallExpression	"load_all_omf_records ( ret , buf , size )"		3661149	1					
ANR	3661179	Callee	load_all_omf_records		3661149	0					
ANR	3661180	Identifier	load_all_omf_records		3661149	0					
ANR	3661181	ArgumentList	ret		3661149	1					
ANR	3661182	Argument	ret		3661149	0					
ANR	3661183	Identifier	ret		3661149	0					
ANR	3661184	Argument	buf		3661149	1					
ANR	3661185	Identifier	buf		3661149	0					
ANR	3661186	Argument	size		3661149	2					
ANR	3661187	Identifier	size		3661149	0					
ANR	3661188	CompoundStatement		7:44:132:132	3661149	1					
ANR	3661189	ExpressionStatement	r_bin_free_all_omf_obj ( ret )	686:2:16521:16548	3661149	0	True				
ANR	3661190	CallExpression	r_bin_free_all_omf_obj ( ret )		3661149	0					
ANR	3661191	Callee	r_bin_free_all_omf_obj		3661149	0					
ANR	3661192	Identifier	r_bin_free_all_omf_obj		3661149	0					
ANR	3661193	ArgumentList	ret		3661149	1					
ANR	3661194	Argument	ret		3661149	0					
ANR	3661195	Identifier	ret		3661149	0					
ANR	3661196	ReturnStatement	return NULL ;	687:2:16552:16563	3661149	1	True				
ANR	3661197	Identifier	NULL		3661149	0					
ANR	3661198	IfStatement	if ( ! ( get_omf_infos ( ret ) ) )		3661149	3					
ANR	3661199	Condition	! ( get_omf_infos ( ret ) )	689:4:16572:16592	3661149	0	True				
ANR	3661200	UnaryOperationExpression	! ( get_omf_infos ( ret ) )		3661149	0					
ANR	3661201	UnaryOperator	!		3661149	0					
ANR	3661202	CallExpression	get_omf_infos ( ret )		3661149	1					
ANR	3661203	Callee	get_omf_infos		3661149	0					
ANR	3661204	Identifier	get_omf_infos		3661149	0					
ANR	3661205	ArgumentList	ret		3661149	1					
ANR	3661206	Argument	ret		3661149	0					
ANR	3661207	Identifier	ret		3661149	0					
ANR	3661208	CompoundStatement		11:27:210:210	3661149	1					
ANR	3661209	ExpressionStatement	r_bin_free_all_omf_obj ( ret )	690:2:16599:16626	3661149	0	True				
ANR	3661210	CallExpression	r_bin_free_all_omf_obj ( ret )		3661149	0					
ANR	3661211	Callee	r_bin_free_all_omf_obj		3661149	0					
ANR	3661212	Identifier	r_bin_free_all_omf_obj		3661149	0					
ANR	3661213	ArgumentList	ret		3661149	1					
ANR	3661214	Argument	ret		3661149	0					
ANR	3661215	Identifier	ret		3661149	0					
ANR	3661216	ReturnStatement	return NULL ;	691:2:16630:16641	3661149	1	True				
ANR	3661217	Identifier	NULL		3661149	0					
ANR	3661218	ExpressionStatement	free_all_omf_records ( ret )	693:1:16647:16672	3661149	4	True				
ANR	3661219	CallExpression	free_all_omf_records ( ret )		3661149	0					
ANR	3661220	Callee	free_all_omf_records		3661149	0					
ANR	3661221	Identifier	free_all_omf_records		3661149	0					
ANR	3661222	ArgumentList	ret		3661149	1					
ANR	3661223	Argument	ret		3661149	0					
ANR	3661224	Identifier	ret		3661149	0					
ANR	3661225	ReturnStatement	return ret ;	694:1:16675:16685	3661149	5	True				
ANR	3661226	Identifier	ret		3661149	0					
ANR	3661227	ReturnType	r_bin_omf_obj *		3661149	1					
ANR	3661228	Identifier	r_bin_internal_omf_load		3661149	2					
ANR	3661229	ParameterList	"const ut8 * buf , ut64 size"		3661149	3					
ANR	3661230	Parameter	const ut8 * buf	679:39:16357:16370	3661149	0	True				
ANR	3661231	ParameterType	const ut8 *		3661149	0					
ANR	3661232	Identifier	buf		3661149	1					
ANR	3661233	Parameter	ut64 size	679:55:16373:16381	3661149	1	True				
ANR	3661234	ParameterType	ut64		3661149	0					
ANR	3661235	Identifier	size		3661149	1					
ANR	3661236	CFGEntryNode	ENTRY		3661149		True				
ANR	3661237	CFGExitNode	EXIT		3661149		True				
ANR	3661238	Symbol	ret		3661149						
ANR	3661239	Symbol	R_NEW0		3661149						
ANR	3661240	Symbol	buf		3661149						
ANR	3661241	Symbol	NULL		3661149						
ANR	3661242	Symbol	size		3661149						
ANR	3661243	Symbol	get_omf_infos		3661149						
ANR	3661244	Symbol	r_bin_omf_obj		3661149						
ANR	3661245	Symbol	load_all_omf_records		3661149						
ANR	3661246	Function	r_bin_omf_get_entry	697:0:16690:17520							
ANR	3661247	FunctionDef	"r_bin_omf_get_entry (r_bin_omf_obj * obj , RBinAddr * addr)"		3661246	0					
ANR	3661248	CompoundStatement		697:61:16751:17520	3661246	0					
ANR	3661249	IdentifierDeclStatement	ut32 ct_sym = 0 ;	698:1:16754:16769	3661246	0	True				
ANR	3661250	IdentifierDecl	ct_sym = 0		3661246	0					
ANR	3661251	IdentifierDeclType	ut32		3661246	0					
ANR	3661252	Identifier	ct_sym		3661246	1					
ANR	3661253	AssignmentExpression	ct_sym = 0		3661246	2		=			
ANR	3661254	Identifier	ct_sym		3661246	0					
ANR	3661255	PrimaryExpression	0		3661246	1					
ANR	3661256	IdentifierDeclStatement	OMF_data * data ;	699:1:16772:16786	3661246	1	True				
ANR	3661257	IdentifierDecl	* data		3661246	0					
ANR	3661258	IdentifierDeclType	OMF_data *		3661246	0					
ANR	3661259	Identifier	data		3661246	1					
ANR	3661260	IdentifierDeclStatement	ut32 offset = 0 ;	700:1:16789:16804	3661246	2	True				
ANR	3661261	IdentifierDecl	offset = 0		3661246	0					
ANR	3661262	IdentifierDeclType	ut32		3661246	0					
ANR	3661263	Identifier	offset		3661246	1					
ANR	3661264	AssignmentExpression	offset = 0		3661246	2		=			
ANR	3661265	Identifier	offset		3661246	0					
ANR	3661266	PrimaryExpression	0		3661246	1					
ANR	3661267	IfStatement	if ( ! obj )		3661246	3					
ANR	3661268	Condition	! obj	702:5:16812:16815	3661246	0	True				
ANR	3661269	UnaryOperationExpression	! obj		3661246	0					
ANR	3661270	UnaryOperator	!		3661246	0					
ANR	3661271	Identifier	obj		3661246	1					
ANR	3661272	CompoundStatement		6:11:66:66	3661246	1					
ANR	3661273	ReturnStatement	return false ;	703:2:16822:16834	3661246	0	True				
ANR	3661274	Identifier	false		3661246	0					
ANR	3661275	WhileStatement	while ( ct_sym < obj -> nb_symbol )		3661246	4					
ANR	3661276	Condition	ct_sym < obj -> nb_symbol	705:8:16847:16869	3661246	0	True				
ANR	3661277	RelationalExpression	ct_sym < obj -> nb_symbol		3661246	0		<			
ANR	3661278	Identifier	ct_sym		3661246	0					
ANR	3661279	PtrMemberAccess	obj -> nb_symbol		3661246	1					
ANR	3661280	Identifier	obj		3661246	0					
ANR	3661281	Identifier	nb_symbol		3661246	1					
ANR	3661282	CompoundStatement		9:33:120:120	3661246	1					
ANR	3661283	IfStatement	"if ( ! strcmp ( obj -> symbols [ ct_sym ] -> name , ""_start"" ) )"		3661246	0					
ANR	3661284	Condition	"! strcmp ( obj -> symbols [ ct_sym ] -> name , ""_start"" )"	706:6:16880:16925	3661246	0	True				
ANR	3661285	UnaryOperationExpression	"! strcmp ( obj -> symbols [ ct_sym ] -> name , ""_start"" )"		3661246	0					
ANR	3661286	UnaryOperator	!		3661246	0					
ANR	3661287	CallExpression	"strcmp ( obj -> symbols [ ct_sym ] -> name , ""_start"" )"		3661246	1					
ANR	3661288	Callee	strcmp		3661246	0					
ANR	3661289	Identifier	strcmp		3661246	0					
ANR	3661290	ArgumentList	obj -> symbols [ ct_sym ] -> name		3661246	1					
ANR	3661291	Argument	obj -> symbols [ ct_sym ] -> name		3661246	0					
ANR	3661292	PtrMemberAccess	obj -> symbols [ ct_sym ] -> name		3661246	0					
ANR	3661293	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661294	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661295	Identifier	obj		3661246	0					
ANR	3661296	Identifier	symbols		3661246	1					
ANR	3661297	Identifier	ct_sym		3661246	1					
ANR	3661298	Identifier	name		3661246	1					
ANR	3661299	Argument	"""_start"""		3661246	1					
ANR	3661300	PrimaryExpression	"""_start"""		3661246	0					
ANR	3661301	CompoundStatement		10:54:176:176	3661246	1					
ANR	3661302	IfStatement	if ( obj -> symbols [ ct_sym ] -> seg_idx - 1 > obj -> nb_section )		3661246	0					
ANR	3661303	Condition	obj -> symbols [ ct_sym ] -> seg_idx - 1 > obj -> nb_section	707:7:16937:16987	3661246	0	True				
ANR	3661304	RelationalExpression	obj -> symbols [ ct_sym ] -> seg_idx - 1 > obj -> nb_section		3661246	0		>			
ANR	3661305	AdditiveExpression	obj -> symbols [ ct_sym ] -> seg_idx - 1		3661246	0		-			
ANR	3661306	PtrMemberAccess	obj -> symbols [ ct_sym ] -> seg_idx		3661246	0					
ANR	3661307	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661308	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661309	Identifier	obj		3661246	0					
ANR	3661310	Identifier	symbols		3661246	1					
ANR	3661311	Identifier	ct_sym		3661246	1					
ANR	3661312	Identifier	seg_idx		3661246	1					
ANR	3661313	PrimaryExpression	1		3661246	1					
ANR	3661314	PtrMemberAccess	obj -> nb_section		3661246	1					
ANR	3661315	Identifier	obj		3661246	0					
ANR	3661316	Identifier	nb_section		3661246	1					
ANR	3661317	CompoundStatement		11:60:238:238	3661246	1					
ANR	3661318	ExpressionStatement	"eprintf ( ""Invalid segment index for symbol _start\\n"" )"	708:4:16996:17049	3661246	0	True				
ANR	3661319	CallExpression	"eprintf ( ""Invalid segment index for symbol _start\\n"" )"		3661246	0					
ANR	3661320	Callee	eprintf		3661246	0					
ANR	3661321	Identifier	eprintf		3661246	0					
ANR	3661322	ArgumentList	"""Invalid segment index for symbol _start\\n"""		3661246	1					
ANR	3661323	Argument	"""Invalid segment index for symbol _start\\n"""		3661246	0					
ANR	3661324	PrimaryExpression	"""Invalid segment index for symbol _start\\n"""		3661246	0					
ANR	3661325	ReturnStatement	return false ;	709:4:17055:17067	3661246	1	True				
ANR	3661326	Identifier	false		3661246	0					
ANR	3661327	ExpressionStatement	addr -> vaddr = obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> vaddr + obj -> symbols [ ct_sym ] -> offset + OMF_BASE_ADDR	711:3:17077:17193	3661246	1	True				
ANR	3661328	AssignmentExpression	addr -> vaddr = obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> vaddr + obj -> symbols [ ct_sym ] -> offset + OMF_BASE_ADDR		3661246	0		=			
ANR	3661329	PtrMemberAccess	addr -> vaddr		3661246	0					
ANR	3661330	Identifier	addr		3661246	0					
ANR	3661331	Identifier	vaddr		3661246	1					
ANR	3661332	AdditiveExpression	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> vaddr + obj -> symbols [ ct_sym ] -> offset + OMF_BASE_ADDR		3661246	1		+			
ANR	3661333	PtrMemberAccess	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> vaddr		3661246	0					
ANR	3661334	ArrayIndexing	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ]		3661246	0					
ANR	3661335	PtrMemberAccess	obj -> sections		3661246	0					
ANR	3661336	Identifier	obj		3661246	0					
ANR	3661337	Identifier	sections		3661246	1					
ANR	3661338	AdditiveExpression	obj -> symbols [ ct_sym ] -> seg_idx - 1		3661246	1		-			
ANR	3661339	PtrMemberAccess	obj -> symbols [ ct_sym ] -> seg_idx		3661246	0					
ANR	3661340	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661341	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661342	Identifier	obj		3661246	0					
ANR	3661343	Identifier	symbols		3661246	1					
ANR	3661344	Identifier	ct_sym		3661246	1					
ANR	3661345	Identifier	seg_idx		3661246	1					
ANR	3661346	PrimaryExpression	1		3661246	1					
ANR	3661347	Identifier	vaddr		3661246	1					
ANR	3661348	AdditiveExpression	obj -> symbols [ ct_sym ] -> offset + OMF_BASE_ADDR		3661246	1		+			
ANR	3661349	PtrMemberAccess	obj -> symbols [ ct_sym ] -> offset		3661246	0					
ANR	3661350	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661351	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661352	Identifier	obj		3661246	0					
ANR	3661353	Identifier	symbols		3661246	1					
ANR	3661354	Identifier	ct_sym		3661246	1					
ANR	3661355	Identifier	offset		3661246	1					
ANR	3661356	Identifier	OMF_BASE_ADDR		3661246	1					
ANR	3661357	ExpressionStatement	data = obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> data	712:3:17198:17259	3661246	2	True				
ANR	3661358	AssignmentExpression	data = obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> data		3661246	0		=			
ANR	3661359	Identifier	data		3661246	0					
ANR	3661360	PtrMemberAccess	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> data		3661246	1					
ANR	3661361	ArrayIndexing	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ]		3661246	0					
ANR	3661362	PtrMemberAccess	obj -> sections		3661246	0					
ANR	3661363	Identifier	obj		3661246	0					
ANR	3661364	Identifier	sections		3661246	1					
ANR	3661365	AdditiveExpression	obj -> symbols [ ct_sym ] -> seg_idx - 1		3661246	1		-			
ANR	3661366	PtrMemberAccess	obj -> symbols [ ct_sym ] -> seg_idx		3661246	0					
ANR	3661367	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661368	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661369	Identifier	obj		3661246	0					
ANR	3661370	Identifier	symbols		3661246	1					
ANR	3661371	Identifier	ct_sym		3661246	1					
ANR	3661372	Identifier	seg_idx		3661246	1					
ANR	3661373	PrimaryExpression	1		3661246	1					
ANR	3661374	Identifier	data		3661246	1					
ANR	3661375	WhileStatement	while ( data )		3661246	3					
ANR	3661376	Condition	data	713:10:17271:17274	3661246	0	True				
ANR	3661377	Identifier	data		3661246	0					
ANR	3661378	CompoundStatement		17:16:525:525	3661246	1					
ANR	3661379	ExpressionStatement	offset += data -> size	714:4:17283:17303	3661246	0	True				
ANR	3661380	AssignmentExpression	offset += data -> size		3661246	0		+=			
ANR	3661381	Identifier	offset		3661246	0					
ANR	3661382	PtrMemberAccess	data -> size		3661246	1					
ANR	3661383	Identifier	data		3661246	0					
ANR	3661384	Identifier	size		3661246	1					
ANR	3661385	IfStatement	if ( obj -> symbols [ ct_sym ] -> offset < offset )		3661246	1					
ANR	3661386	Condition	obj -> symbols [ ct_sym ] -> offset < offset	715:8:17313:17349	3661246	0	True				
ANR	3661387	RelationalExpression	obj -> symbols [ ct_sym ] -> offset < offset		3661246	0		<			
ANR	3661388	PtrMemberAccess	obj -> symbols [ ct_sym ] -> offset		3661246	0					
ANR	3661389	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661390	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661391	Identifier	obj		3661246	0					
ANR	3661392	Identifier	symbols		3661246	1					
ANR	3661393	Identifier	ct_sym		3661246	1					
ANR	3661394	Identifier	offset		3661246	1					
ANR	3661395	Identifier	offset		3661246	1					
ANR	3661396	CompoundStatement		19:47:600:600	3661246	1					
ANR	3661397	ExpressionStatement	addr -> paddr = ( obj -> symbols [ ct_sym ] -> offset - data -> offset ) + data -> paddr	716:5:17359:17432	3661246	0	True				
ANR	3661398	AssignmentExpression	addr -> paddr = ( obj -> symbols [ ct_sym ] -> offset - data -> offset ) + data -> paddr		3661246	0		=			
ANR	3661399	PtrMemberAccess	addr -> paddr		3661246	0					
ANR	3661400	Identifier	addr		3661246	0					
ANR	3661401	Identifier	paddr		3661246	1					
ANR	3661402	AdditiveExpression	( obj -> symbols [ ct_sym ] -> offset - data -> offset ) + data -> paddr		3661246	1		+			
ANR	3661403	AdditiveExpression	obj -> symbols [ ct_sym ] -> offset - data -> offset		3661246	0		-			
ANR	3661404	PtrMemberAccess	obj -> symbols [ ct_sym ] -> offset		3661246	0					
ANR	3661405	ArrayIndexing	obj -> symbols [ ct_sym ]		3661246	0					
ANR	3661406	PtrMemberAccess	obj -> symbols		3661246	0					
ANR	3661407	Identifier	obj		3661246	0					
ANR	3661408	Identifier	symbols		3661246	1					
ANR	3661409	Identifier	ct_sym		3661246	1					
ANR	3661410	Identifier	offset		3661246	1					
ANR	3661411	PtrMemberAccess	data -> offset		3661246	1					
ANR	3661412	Identifier	data		3661246	0					
ANR	3661413	Identifier	offset		3661246	1					
ANR	3661414	PtrMemberAccess	data -> paddr		3661246	1					
ANR	3661415	Identifier	data		3661246	0					
ANR	3661416	Identifier	paddr		3661246	1					
ANR	3661417	ReturnStatement	return true ;	717:5:17439:17450	3661246	1	True				
ANR	3661418	Identifier	true		3661246	0					
ANR	3661419	ExpressionStatement	data = data -> next	719:4:17462:17479	3661246	2	True				
ANR	3661420	AssignmentExpression	data = data -> next		3661246	0		=			
ANR	3661421	Identifier	data		3661246	0					
ANR	3661422	PtrMemberAccess	data -> next		3661246	1					
ANR	3661423	Identifier	data		3661246	0					
ANR	3661424	Identifier	next		3661246	1					
ANR	3661425	ExpressionStatement	ct_sym ++	722:2:17492:17500	3661246	1	True				
ANR	3661426	PostIncDecOperationExpression	ct_sym ++		3661246	0					
ANR	3661427	Identifier	ct_sym		3661246	0					
ANR	3661428	IncDec	++		3661246	1					
ANR	3661429	ReturnStatement	return false ;	724:1:17506:17518	3661246	5	True				
ANR	3661430	Identifier	false		3661246	0					
ANR	3661431	ReturnType	bool		3661246	1					
ANR	3661432	Identifier	r_bin_omf_get_entry		3661246	2					
ANR	3661433	ParameterList	"r_bin_omf_obj * obj , RBinAddr * addr"		3661246	3					
ANR	3661434	Parameter	r_bin_omf_obj * obj	697:25:16715:16732	3661246	0	True				
ANR	3661435	ParameterType	r_bin_omf_obj *		3661246	0					
ANR	3661436	Identifier	obj		3661246	1					
ANR	3661437	Parameter	RBinAddr * addr	697:45:16735:16748	3661246	1	True				
ANR	3661438	ParameterType	RBinAddr *		3661246	0					
ANR	3661439	Identifier	addr		3661246	1					
ANR	3661440	CFGEntryNode	ENTRY		3661246		True				
ANR	3661441	CFGExitNode	EXIT		3661246		True				
ANR	3661442	Symbol	* * * * ct_sym		3661246						
ANR	3661443	Symbol	data -> offset		3661246						
ANR	3661444	Symbol	data		3661246						
ANR	3661445	Symbol	* * obj -> symbols [ ct_sym ] -> seg_idx		3661246						
ANR	3661446	Symbol	ct_sym		3661246						
ANR	3661447	Symbol	addr -> vaddr		3661246						
ANR	3661448	Symbol	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> data		3661246						
ANR	3661449	Symbol	* * obj		3661246						
ANR	3661450	Symbol	* * * * obj		3661246						
ANR	3661451	Symbol	obj -> sections [ obj -> symbols [ ct_sym ] -> seg_idx - 1 ] -> vaddr		3661246						
ANR	3661452	Symbol	* * * * obj -> symbols		3661246						
ANR	3661453	Symbol	* obj -> symbols [ ct_sym ] -> seg_idx		3661246						
ANR	3661454	Symbol	* * obj -> symbols		3661246						
ANR	3661455	Symbol	* * * ct_sym		3661246						
ANR	3661456	Symbol	* ct_sym		3661246						
ANR	3661457	Symbol	* * * obj -> symbols		3661246						
ANR	3661458	Symbol	obj -> symbols		3661246						
ANR	3661459	Symbol	addr		3661246						
ANR	3661460	Symbol	obj -> sections		3661246						
ANR	3661461	Symbol	obj -> symbols [ ct_sym ] -> name		3661246						
ANR	3661462	Symbol	strcmp		3661246						
ANR	3661463	Symbol	obj -> symbols [ ct_sym ] -> seg_idx		3661246						
ANR	3661464	Symbol	* obj		3661246						
ANR	3661465	Symbol	* obj -> symbols		3661246						
ANR	3661466	Symbol	data -> paddr		3661246						
ANR	3661467	Symbol	offset		3661246						
ANR	3661468	Symbol	obj -> symbols [ ct_sym ] -> offset		3661246						
ANR	3661469	Symbol	false		3661246						
ANR	3661470	Symbol	addr -> paddr		3661246						
ANR	3661471	Symbol	* * * * * obj		3661246						
ANR	3661472	Symbol	data -> next		3661246						
ANR	3661473	Symbol	* * * obj		3661246						
ANR	3661474	Symbol	obj		3661246						
ANR	3661475	Symbol	obj -> nb_section		3661246						
ANR	3661476	Symbol	* * ct_sym		3661246						
ANR	3661477	Symbol	true		3661246						
ANR	3661478	Symbol	* obj -> sections		3661246						
ANR	3661479	Symbol	* addr		3661246						
ANR	3661480	Symbol	OMF_BASE_ADDR		3661246						
ANR	3661481	Symbol	* * obj -> sections		3661246						
ANR	3661482	Symbol	* data		3661246						
ANR	3661483	Symbol	obj -> nb_symbol		3661246						
ANR	3661484	Symbol	data -> size		3661246						
ANR	3661485	Function	r_bin_omf_get_bits	727:0:17523:17801							
ANR	3661486	FunctionDef	r_bin_omf_get_bits (r_bin_omf_obj * obj)		3661485	0					
ANR	3661487	CompoundStatement		727:43:17566:17801	3661485	0					
ANR	3661488	IdentifierDeclStatement	ut32 ct_sec = 0 ;	728:1:17569:17584	3661485	0	True				
ANR	3661489	IdentifierDecl	ct_sec = 0		3661485	0					
ANR	3661490	IdentifierDeclType	ut32		3661485	0					
ANR	3661491	Identifier	ct_sec		3661485	1					
ANR	3661492	AssignmentExpression	ct_sec = 0		3661485	2		=			
ANR	3661493	Identifier	ct_sec		3661485	0					
ANR	3661494	PrimaryExpression	0		3661485	1					
ANR	3661495	IfStatement	if ( ! obj )		3661485	1					
ANR	3661496	Condition	! obj	729:5:17591:17594	3661485	0	True				
ANR	3661497	UnaryOperationExpression	! obj		3661485	0					
ANR	3661498	UnaryOperator	!		3661485	0					
ANR	3661499	Identifier	obj		3661485	1					
ANR	3661500	CompoundStatement		3:11:30:30	3661485	1					
ANR	3661501	ReturnStatement	return 32 ;	730:2:17601:17610	3661485	0	True				
ANR	3661502	PrimaryExpression	32		3661485	0					
ANR	3661503	WhileStatement	while ( ct_sec < obj -> nb_section )		3661485	2					
ANR	3661504	Condition	ct_sec < obj -> nb_section	734:8:17695:17718	3661485	0	True				
ANR	3661505	RelationalExpression	ct_sec < obj -> nb_section		3661485	0		<			
ANR	3661506	Identifier	ct_sec		3661485	0					
ANR	3661507	PtrMemberAccess	obj -> nb_section		3661485	1					
ANR	3661508	Identifier	obj		3661485	0					
ANR	3661509	Identifier	nb_section		3661485	1					
ANR	3661510	CompoundStatement		8:34:154:154	3661485	1					
ANR	3661511	IfStatement	if ( obj -> sections [ ct_sec ++ ] -> bits == 32 )		3661485	0					
ANR	3661512	Condition	obj -> sections [ ct_sec ++ ] -> bits == 32	735:6:17729:17763	3661485	0	True				
ANR	3661513	EqualityExpression	obj -> sections [ ct_sec ++ ] -> bits == 32		3661485	0		==			
ANR	3661514	PtrMemberAccess	obj -> sections [ ct_sec ++ ] -> bits		3661485	0					
ANR	3661515	ArrayIndexing	obj -> sections [ ct_sec ++ ]		3661485	0					
ANR	3661516	PtrMemberAccess	obj -> sections		3661485	0					
ANR	3661517	Identifier	obj		3661485	0					
ANR	3661518	Identifier	sections		3661485	1					
ANR	3661519	PostIncDecOperationExpression	ct_sec ++		3661485	1					
ANR	3661520	Identifier	ct_sec		3661485	0					
ANR	3661521	IncDec	++		3661485	1					
ANR	3661522	Identifier	bits		3661485	1					
ANR	3661523	PrimaryExpression	32		3661485	1					
ANR	3661524	CompoundStatement		9:43:199:199	3661485	1					
ANR	3661525	ReturnStatement	return 32 ;	736:3:17771:17780	3661485	0	True				
ANR	3661526	PrimaryExpression	32		3661485	0					
ANR	3661527	ReturnStatement	return 16 ;	739:1:17790:17799	3661485	3	True				
ANR	3661528	PrimaryExpression	16		3661485	0					
ANR	3661529	ReturnType	int		3661485	1					
ANR	3661530	Identifier	r_bin_omf_get_bits		3661485	2					
ANR	3661531	ParameterList	r_bin_omf_obj * obj		3661485	3					
ANR	3661532	Parameter	r_bin_omf_obj * obj	727:23:17546:17563	3661485	0	True				
ANR	3661533	ParameterType	r_bin_omf_obj *		3661485	0					
ANR	3661534	Identifier	obj		3661485	1					
ANR	3661535	CFGEntryNode	ENTRY		3661485		True				
ANR	3661536	CFGExitNode	EXIT		3661485		True				
ANR	3661537	Symbol	* obj		3661485						
ANR	3661538	Symbol	* * * obj		3661485						
ANR	3661539	Symbol	obj		3661485						
ANR	3661540	Symbol	obj -> nb_section		3661485						
ANR	3661541	Symbol	* obj -> sections		3661485						
ANR	3661542	Symbol	* * obj		3661485						
ANR	3661543	Symbol	ct_sec		3661485						
ANR	3661544	Symbol	* * obj -> sections		3661485						
ANR	3661545	Symbol	obj -> sections		3661485						
ANR	3661546	Symbol	obj -> sections [ ct_sec ++ ] -> bits		3661485						
ANR	3661547	Function	r_bin_omf_send_sections	742:0:17804:18559							
ANR	3661548	FunctionDef	"r_bin_omf_send_sections (RList * list , OMF_segment * section , r_bin_omf_obj * obj)"		3661547	0					
ANR	3661549	CompoundStatement		742:83:17887:18559	3661547	0					
ANR	3661550	Statement	RBinSection	743:1:17890:17900	3661547	0	True				
ANR	3661551	Statement	*	743:13:17902:17902	3661547	1	True				
ANR	3661552	Statement	new	743:14:17903:17905	3661547	2	True				
ANR	3661553	ExpressionStatement		743:17:17906:17906	3661547	3	True				
ANR	3661554	IdentifierDeclStatement	OMF_data * data = section -> data ;	744:1:17909:17939	3661547	4	True				
ANR	3661555	IdentifierDecl	* data = section -> data		3661547	0					
ANR	3661556	IdentifierDeclType	OMF_data *		3661547	0					
ANR	3661557	Identifier	data		3661547	1					
ANR	3661558	AssignmentExpression	* data = section -> data		3661547	2		=			
ANR	3661559	Identifier	data		3661547	0					
ANR	3661560	PtrMemberAccess	section -> data		3661547	1					
ANR	3661561	Identifier	section		3661547	0					
ANR	3661562	Identifier	data		3661547	1					
ANR	3661563	IdentifierDeclStatement	ut32 ct_name = 1 ;	745:1:17942:17958	3661547	5	True				
ANR	3661564	IdentifierDecl	ct_name = 1		3661547	0					
ANR	3661565	IdentifierDeclType	ut32		3661547	0					
ANR	3661566	Identifier	ct_name		3661547	1					
ANR	3661567	AssignmentExpression	ct_name = 1		3661547	2		=			
ANR	3661568	Identifier	ct_name		3661547	0					
ANR	3661569	PrimaryExpression	1		3661547	1					
ANR	3661570	WhileStatement	while ( data )		3661547	6					
ANR	3661571	Condition	data	747:8:17969:17972	3661547	0	True				
ANR	3661572	Identifier	data		3661547	0					
ANR	3661573	CompoundStatement		6:14:87:87	3661547	1					
ANR	3661574	Statement	if	748:2:17979:17980	3661547	0	True				
ANR	3661575	Statement	(	748:5:17982:17982	3661547	1	True				
ANR	3661576	Statement	!	748:6:17983:17983	3661547	2	True				
ANR	3661577	Statement	(	748:7:17984:17984	3661547	3	True				
ANR	3661578	Statement	new	748:8:17985:17987	3661547	4	True				
ANR	3661579	Statement	=	748:12:17989:17989	3661547	5	True				
ANR	3661580	Statement	R_NEW0	748:14:17991:17996	3661547	6	True				
ANR	3661581	Statement	(	748:21:17998:17998	3661547	7	True				
ANR	3661582	Statement	RBinSection	748:22:17999:18009	3661547	8	True				
ANR	3661583	Statement	)	748:33:18010:18010	3661547	9	True				
ANR	3661584	Statement	)	748:34:18011:18011	3661547	10	True				
ANR	3661585	Statement	)	748:35:18012:18012	3661547	11	True				
ANR	3661586	CompoundStatement		7:37:126:126	3661547	12					
ANR	3661587	ReturnStatement	return false ;	749:3:18019:18031	3661547	0	True				
ANR	3661588	Identifier	false		3661547	0					
ANR	3661589	IfStatement	if ( section -> name_idx && section -> name_idx - 1 < obj -> nb_name )		3661547	13					
ANR	3661590	Condition	section -> name_idx && section -> name_idx - 1 < obj -> nb_name	753:6:18091:18147	3661547	0	True				
ANR	3661591	AndExpression	section -> name_idx && section -> name_idx - 1 < obj -> nb_name		3661547	0		&&			
ANR	3661592	PtrMemberAccess	section -> name_idx		3661547	0					
ANR	3661593	Identifier	section		3661547	0					
ANR	3661594	Identifier	name_idx		3661547	1					
ANR	3661595	RelationalExpression	section -> name_idx - 1 < obj -> nb_name		3661547	1		<			
ANR	3661596	AdditiveExpression	section -> name_idx - 1		3661547	0		-			
ANR	3661597	PtrMemberAccess	section -> name_idx		3661547	0					
ANR	3661598	Identifier	section		3661547	0					
ANR	3661599	Identifier	name_idx		3661547	1					
ANR	3661600	PrimaryExpression	1		3661547	1					
ANR	3661601	PtrMemberAccess	obj -> nb_name		3661547	1					
ANR	3661602	Identifier	obj		3661547	0					
ANR	3661603	Identifier	nb_name		3661547	1					
ANR	3661604	CompoundStatement		12:65:262:262	3661547	1					
ANR	3661605	Statement	new	754:3:18155:18157	3661547	0	True				
ANR	3661606	Statement	->	754:6:18158:18159	3661547	1	True				
ANR	3661607	ExpressionStatement	"name = r_str_newf ( ""%s_%d"" , obj -> names [ section -> name_idx - 1 ] , ct_name ++ )"	754:8:18160:18233	3661547	2	True				
ANR	3661608	AssignmentExpression	"name = r_str_newf ( ""%s_%d"" , obj -> names [ section -> name_idx - 1 ] , ct_name ++ )"		3661547	0		=			
ANR	3661609	Identifier	name		3661547	0					
ANR	3661610	CallExpression	"r_str_newf ( ""%s_%d"" , obj -> names [ section -> name_idx - 1 ] , ct_name ++ )"		3661547	1					
ANR	3661611	Callee	r_str_newf		3661547	0					
ANR	3661612	Identifier	r_str_newf		3661547	0					
ANR	3661613	ArgumentList	"""%s_%d"""		3661547	1					
ANR	3661614	Argument	"""%s_%d"""		3661547	0					
ANR	3661615	PrimaryExpression	"""%s_%d"""		3661547	0					
ANR	3661616	Argument	obj -> names [ section -> name_idx - 1 ]		3661547	1					
ANR	3661617	ArrayIndexing	obj -> names [ section -> name_idx - 1 ]		3661547	0					
ANR	3661618	PtrMemberAccess	obj -> names		3661547	0					
ANR	3661619	Identifier	obj		3661547	0					
ANR	3661620	Identifier	names		3661547	1					
ANR	3661621	AdditiveExpression	section -> name_idx - 1		3661547	1		-			
ANR	3661622	PtrMemberAccess	section -> name_idx		3661547	0					
ANR	3661623	Identifier	section		3661547	0					
ANR	3661624	Identifier	name_idx		3661547	1					
ANR	3661625	PrimaryExpression	1		3661547	1					
ANR	3661626	Argument	ct_name ++		3661547	2					
ANR	3661627	PostIncDecOperationExpression	ct_name ++		3661547	0					
ANR	3661628	Identifier	ct_name		3661547	0					
ANR	3661629	IncDec	++		3661547	1					
ANR	3661630	ElseStatement	else		3661547	0					
ANR	3661631	CompoundStatement		14:9:356:356	3661547	0					
ANR	3661632	Statement	new	756:3:18249:18251	3661547	0	True				
ANR	3661633	Statement	->	756:6:18252:18253	3661547	1	True				
ANR	3661634	ExpressionStatement	"name = r_str_newf ( ""no_name_%d"" , ct_name ++ )"	756:8:18254:18297	3661547	2	True				
ANR	3661635	AssignmentExpression	"name = r_str_newf ( ""no_name_%d"" , ct_name ++ )"		3661547	0		=			
ANR	3661636	Identifier	name		3661547	0					
ANR	3661637	CallExpression	"r_str_newf ( ""no_name_%d"" , ct_name ++ )"		3661547	1					
ANR	3661638	Callee	r_str_newf		3661547	0					
ANR	3661639	Identifier	r_str_newf		3661547	0					
ANR	3661640	ArgumentList	"""no_name_%d"""		3661547	1					
ANR	3661641	Argument	"""no_name_%d"""		3661547	0					
ANR	3661642	PrimaryExpression	"""no_name_%d"""		3661547	0					
ANR	3661643	Argument	ct_name ++		3661547	1					
ANR	3661644	PostIncDecOperationExpression	ct_name ++		3661547	0					
ANR	3661645	Identifier	ct_name		3661547	0					
ANR	3661646	IncDec	++		3661547	1					
ANR	3661647	Statement	new	759:2:18306:18308	3661547	14	True				
ANR	3661648	Statement	->	759:5:18309:18310	3661547	15	True				
ANR	3661649	ExpressionStatement	size = data -> size	759:7:18311:18328	3661547	16	True				
ANR	3661650	AssignmentExpression	size = data -> size		3661547	0		=			
ANR	3661651	Identifier	size		3661547	0					
ANR	3661652	PtrMemberAccess	data -> size		3661547	1					
ANR	3661653	Identifier	data		3661547	0					
ANR	3661654	Identifier	size		3661547	1					
ANR	3661655	Statement	new	760:2:18332:18334	3661547	17	True				
ANR	3661656	Statement	->	760:5:18335:18336	3661547	18	True				
ANR	3661657	ExpressionStatement	vsize = data -> size	760:7:18337:18355	3661547	19	True				
ANR	3661658	AssignmentExpression	vsize = data -> size		3661547	0		=			
ANR	3661659	Identifier	vsize		3661547	0					
ANR	3661660	PtrMemberAccess	data -> size		3661547	1					
ANR	3661661	Identifier	data		3661547	0					
ANR	3661662	Identifier	size		3661547	1					
ANR	3661663	Statement	new	761:2:18359:18361	3661547	20	True				
ANR	3661664	Statement	->	761:5:18362:18363	3661547	21	True				
ANR	3661665	ExpressionStatement	paddr = data -> paddr	761:7:18364:18383	3661547	22	True				
ANR	3661666	AssignmentExpression	paddr = data -> paddr		3661547	0		=			
ANR	3661667	Identifier	paddr		3661547	0					
ANR	3661668	PtrMemberAccess	data -> paddr		3661547	1					
ANR	3661669	Identifier	data		3661547	0					
ANR	3661670	Identifier	paddr		3661547	1					
ANR	3661671	Statement	new	762:2:18387:18389	3661547	23	True				
ANR	3661672	Statement	->	762:5:18390:18391	3661547	24	True				
ANR	3661673	ExpressionStatement	vaddr = section -> vaddr + data -> offset + OMF_BASE_ADDR	762:7:18392:18445	3661547	25	True				
ANR	3661674	AssignmentExpression	vaddr = section -> vaddr + data -> offset + OMF_BASE_ADDR		3661547	0		=			
ANR	3661675	Identifier	vaddr		3661547	0					
ANR	3661676	AdditiveExpression	section -> vaddr + data -> offset + OMF_BASE_ADDR		3661547	1		+			
ANR	3661677	PtrMemberAccess	section -> vaddr		3661547	0					
ANR	3661678	Identifier	section		3661547	0					
ANR	3661679	Identifier	vaddr		3661547	1					
ANR	3661680	AdditiveExpression	data -> offset + OMF_BASE_ADDR		3661547	1		+			
ANR	3661681	PtrMemberAccess	data -> offset		3661547	0					
ANR	3661682	Identifier	data		3661547	0					
ANR	3661683	Identifier	offset		3661547	1					
ANR	3661684	Identifier	OMF_BASE_ADDR		3661547	1					
ANR	3661685	Statement	new	763:2:18449:18451	3661547	26	True				
ANR	3661686	Statement	->	763:5:18452:18453	3661547	27	True				
ANR	3661687	ExpressionStatement	perm = R_PERM_RWX	763:7:18454:18471	3661547	28	True				
ANR	3661688	AssignmentExpression	perm = R_PERM_RWX		3661547	0		=			
ANR	3661689	Identifier	perm		3661547	0					
ANR	3661690	Identifier	R_PERM_RWX		3661547	1					
ANR	3661691	Statement	new	764:2:18475:18477	3661547	29	True				
ANR	3661692	Statement	->	764:5:18478:18479	3661547	30	True				
ANR	3661693	ExpressionStatement	add = true	764:7:18480:18490	3661547	31	True				
ANR	3661694	AssignmentExpression	add = true		3661547	0		=			
ANR	3661695	Identifier	add		3661547	0					
ANR	3661696	Identifier	true		3661547	1					
ANR	3661697	Statement	r_list_append	765:2:18494:18506	3661547	32	True				
ANR	3661698	Statement	(	765:16:18508:18508	3661547	33	True				
ANR	3661699	Statement	list	765:17:18509:18512	3661547	34	True				
ANR	3661700	Statement	","	765:21:18513:18513	3661547	35	True				
ANR	3661701	Statement	new	765:23:18515:18517	3661547	36	True				
ANR	3661702	Statement	)	765:26:18518:18518	3661547	37	True				
ANR	3661703	ExpressionStatement		765:27:18519:18519	3661547	38	True				
ANR	3661704	ExpressionStatement	data = data -> next	766:2:18523:18540	3661547	39	True				
ANR	3661705	AssignmentExpression	data = data -> next		3661547	0		=			
ANR	3661706	Identifier	data		3661547	0					
ANR	3661707	PtrMemberAccess	data -> next		3661547	1					
ANR	3661708	Identifier	data		3661547	0					
ANR	3661709	Identifier	next		3661547	1					
ANR	3661710	ReturnStatement	return true ;	768:1:18546:18557	3661547	7	True				
ANR	3661711	Identifier	true		3661547	0					
ANR	3661712	ReturnType	int		3661547	1					
ANR	3661713	Identifier	r_bin_omf_send_sections		3661547	2					
ANR	3661714	ParameterList	"RList * list , OMF_segment * section , r_bin_omf_obj * obj"		3661547	3					
ANR	3661715	Parameter	RList * list	742:28:17832:17842	3661547	0	True				
ANR	3661716	ParameterType	RList *		3661547	0					
ANR	3661717	Identifier	list		3661547	1					
ANR	3661718	Parameter	OMF_segment * section	742:41:17845:17864	3661547	1	True				
ANR	3661719	ParameterType	OMF_segment *		3661547	0					
ANR	3661720	Identifier	section		3661547	1					
ANR	3661721	Parameter	r_bin_omf_obj * obj	742:63:17867:17884	3661547	2	True				
ANR	3661722	ParameterType	r_bin_omf_obj *		3661547	0					
ANR	3661723	Identifier	obj		3661547	1					
ANR	3661724	CFGEntryNode	ENTRY		3661547		True				
ANR	3661725	CFGExitNode	EXIT		3661547		True				
ANR	3661726	Symbol	data -> offset		3661547						
ANR	3661727	Symbol	vsize		3661547						
ANR	3661728	Symbol	data		3661547						
ANR	3661729	Symbol	* section -> name_idx		3661547						
ANR	3661730	Symbol	perm		3661547						
ANR	3661731	Symbol	section		3661547						
ANR	3661732	Symbol	* * obj		3661547						
ANR	3661733	Symbol	r_str_newf		3661547						
ANR	3661734	Symbol	vaddr		3661547						
ANR	3661735	Symbol	section -> name_idx		3661547						
ANR	3661736	Symbol	obj -> names		3661547						
ANR	3661737	Symbol	section -> data		3661547						
ANR	3661738	Symbol	R_PERM_RWX		3661547						
ANR	3661739	Symbol	* section		3661547						
ANR	3661740	Symbol	add		3661547						
ANR	3661741	Symbol	* obj		3661547						
ANR	3661742	Symbol	* obj -> names		3661547						
ANR	3661743	Symbol	data -> paddr		3661547						
ANR	3661744	Symbol	false		3661547						
ANR	3661745	Symbol	list		3661547						
ANR	3661746	Symbol	section -> vaddr		3661547						
ANR	3661747	Symbol	data -> next		3661547						
ANR	3661748	Symbol	ct_name		3661547						
ANR	3661749	Symbol	size		3661547						
ANR	3661750	Symbol	obj		3661547						
ANR	3661751	Symbol	paddr		3661547						
ANR	3661752	Symbol	name		3661547						
ANR	3661753	Symbol	true		3661547						
ANR	3661754	Symbol	* * section		3661547						
ANR	3661755	Symbol	* data		3661547						
ANR	3661756	Symbol	OMF_BASE_ADDR		3661547						
ANR	3661757	Symbol	data -> size		3661547						
ANR	3661758	Symbol	obj -> nb_name		3661547						
ANR	3661759	Function	r_bin_omf_get_paddr_sym	771:0:18562:19033							
ANR	3661760	FunctionDef	"r_bin_omf_get_paddr_sym (r_bin_omf_obj * obj , OMF_symbol * sym)"		3661759	0					
ANR	3661761	CompoundStatement		771:66:18628:19033	3661759	0					
ANR	3661762	IdentifierDeclStatement	ut64 offset = 0 ;	772:1:18631:18646	3661759	0	True				
ANR	3661763	IdentifierDecl	offset = 0		3661759	0					
ANR	3661764	IdentifierDeclType	ut64		3661759	0					
ANR	3661765	Identifier	offset		3661759	1					
ANR	3661766	AssignmentExpression	offset = 0		3661759	2		=			
ANR	3661767	Identifier	offset		3661759	0					
ANR	3661768	PrimaryExpression	0		3661759	1					
ANR	3661769	IfStatement	if ( ! obj -> sections )		3661759	1					
ANR	3661770	Condition	! obj -> sections	773:5:18653:18666	3661759	0	True				
ANR	3661771	UnaryOperationExpression	! obj -> sections		3661759	0					
ANR	3661772	UnaryOperator	!		3661759	0					
ANR	3661773	PtrMemberAccess	obj -> sections		3661759	1					
ANR	3661774	Identifier	obj		3661759	0					
ANR	3661775	Identifier	sections		3661759	1					
ANR	3661776	CompoundStatement		3:21:40:40	3661759	1					
ANR	3661777	Statement	return	774:2:18673:18678	3661759	0	True				
ANR	3661778	Statement	0L	774:9:18680:18681	3661759	1	True				
ANR	3661779	ExpressionStatement	L	774:11:18682:18683	3661759	2	True				
ANR	3661780	Identifier	L		3661759	0					
ANR	3661781	IfStatement	if ( sym -> seg_idx - 1 > obj -> nb_section )		3661759	2					
ANR	3661782	Condition	sym -> seg_idx - 1 > obj -> nb_section	776:5:18693:18726	3661759	0	True				
ANR	3661783	RelationalExpression	sym -> seg_idx - 1 > obj -> nb_section		3661759	0		>			
ANR	3661784	AdditiveExpression	sym -> seg_idx - 1		3661759	0		-			
ANR	3661785	PtrMemberAccess	sym -> seg_idx		3661759	0					
ANR	3661786	Identifier	sym		3661759	0					
ANR	3661787	Identifier	seg_idx		3661759	1					
ANR	3661788	PrimaryExpression	1		3661759	1					
ANR	3661789	PtrMemberAccess	obj -> nb_section		3661759	1					
ANR	3661790	Identifier	obj		3661759	0					
ANR	3661791	Identifier	nb_section		3661759	1					
ANR	3661792	CompoundStatement		6:41:100:100	3661759	1					
ANR	3661793	Statement	return	777:2:18733:18738	3661759	0	True				
ANR	3661794	Statement	0L	777:9:18740:18741	3661759	1	True				
ANR	3661795	ExpressionStatement	L	777:11:18742:18743	3661759	2	True				
ANR	3661796	Identifier	L		3661759	0					
ANR	3661797	IdentifierDeclStatement	int sidx = sym -> seg_idx - 1 ;	779:1:18749:18776	3661759	3	True				
ANR	3661798	IdentifierDecl	sidx = sym -> seg_idx - 1		3661759	0					
ANR	3661799	IdentifierDeclType	int		3661759	0					
ANR	3661800	Identifier	sidx		3661759	1					
ANR	3661801	AssignmentExpression	sidx = sym -> seg_idx - 1		3661759	2		=			
ANR	3661802	Identifier	sidx		3661759	0					
ANR	3661803	AdditiveExpression	sym -> seg_idx - 1		3661759	1		-			
ANR	3661804	PtrMemberAccess	sym -> seg_idx		3661759	0					
ANR	3661805	Identifier	sym		3661759	0					
ANR	3661806	Identifier	seg_idx		3661759	1					
ANR	3661807	PrimaryExpression	1		3661759	1					
ANR	3661808	IfStatement	if ( sidx >= obj -> nb_section )		3661759	4					
ANR	3661809	Condition	sidx >= obj -> nb_section	780:5:18783:18805	3661759	0	True				
ANR	3661810	RelationalExpression	sidx >= obj -> nb_section		3661759	0		>=			
ANR	3661811	Identifier	sidx		3661759	0					
ANR	3661812	PtrMemberAccess	obj -> nb_section		3661759	1					
ANR	3661813	Identifier	obj		3661759	0					
ANR	3661814	Identifier	nb_section		3661759	1					
ANR	3661815	CompoundStatement		10:30:179:179	3661759	1					
ANR	3661816	Statement	return	781:2:18812:18817	3661759	0	True				
ANR	3661817	Statement	0L	781:9:18819:18820	3661759	1	True				
ANR	3661818	ExpressionStatement	L	781:11:18821:18822	3661759	2	True				
ANR	3661819	Identifier	L		3661759	0					
ANR	3661820	IdentifierDeclStatement	OMF_data * data = obj -> sections [ sidx ] -> data ;	783:1:18828:18870	3661759	5	True				
ANR	3661821	IdentifierDecl	* data = obj -> sections [ sidx ] -> data		3661759	0					
ANR	3661822	IdentifierDeclType	OMF_data *		3661759	0					
ANR	3661823	Identifier	data		3661759	1					
ANR	3661824	AssignmentExpression	* data = obj -> sections [ sidx ] -> data		3661759	2		=			
ANR	3661825	Identifier	data		3661759	0					
ANR	3661826	PtrMemberAccess	obj -> sections [ sidx ] -> data		3661759	1					
ANR	3661827	ArrayIndexing	obj -> sections [ sidx ]		3661759	0					
ANR	3661828	PtrMemberAccess	obj -> sections		3661759	0					
ANR	3661829	Identifier	obj		3661759	0					
ANR	3661830	Identifier	sections		3661759	1					
ANR	3661831	Identifier	sidx		3661759	1					
ANR	3661832	Identifier	data		3661759	1					
ANR	3661833	WhileStatement	while ( data )		3661759	6					
ANR	3661834	Condition	data	784:8:18880:18883	3661759	0	True				
ANR	3661835	Identifier	data		3661759	0					
ANR	3661836	CompoundStatement		14:14:257:257	3661759	1					
ANR	3661837	ExpressionStatement	offset += data -> size	785:2:18890:18910	3661759	0	True				
ANR	3661838	AssignmentExpression	offset += data -> size		3661759	0		+=			
ANR	3661839	Identifier	offset		3661759	0					
ANR	3661840	PtrMemberAccess	data -> size		3661759	1					
ANR	3661841	Identifier	data		3661759	0					
ANR	3661842	Identifier	size		3661759	1					
ANR	3661843	IfStatement	if ( sym -> offset < offset )		3661759	1					
ANR	3661844	Condition	sym -> offset < offset	786:6:18918:18937	3661759	0	True				
ANR	3661845	RelationalExpression	sym -> offset < offset		3661759	0		<			
ANR	3661846	PtrMemberAccess	sym -> offset		3661759	0					
ANR	3661847	Identifier	sym		3661759	0					
ANR	3661848	Identifier	offset		3661759	1					
ANR	3661849	Identifier	offset		3661759	1					
ANR	3661850	CompoundStatement		16:28:311:311	3661759	1					
ANR	3661851	ReturnStatement	return sym -> offset - data -> offset + data -> paddr ;	787:3:18945:18992	3661759	0	True				
ANR	3661852	AdditiveExpression	sym -> offset - data -> offset + data -> paddr		3661759	0		-			
ANR	3661853	PtrMemberAccess	sym -> offset		3661759	0					
ANR	3661854	Identifier	sym		3661759	0					
ANR	3661855	Identifier	offset		3661759	1					
ANR	3661856	AdditiveExpression	data -> offset + data -> paddr		3661759	1		+			
ANR	3661857	PtrMemberAccess	data -> offset		3661759	0					
ANR	3661858	Identifier	data		3661759	0					
ANR	3661859	Identifier	offset		3661759	1					
ANR	3661860	PtrMemberAccess	data -> paddr		3661759	1					
ANR	3661861	Identifier	data		3661759	0					
ANR	3661862	Identifier	paddr		3661759	1					
ANR	3661863	ExpressionStatement	data = data -> next	789:2:19000:19017	3661759	2	True				
ANR	3661864	AssignmentExpression	data = data -> next		3661759	0		=			
ANR	3661865	Identifier	data		3661759	0					
ANR	3661866	PtrMemberAccess	data -> next		3661759	1					
ANR	3661867	Identifier	data		3661759	0					
ANR	3661868	Identifier	next		3661759	1					
ANR	3661869	ReturnStatement	return 0 ;	791:1:19023:19031	3661759	7	True				
ANR	3661870	PrimaryExpression	0		3661759	0					
ANR	3661871	ReturnType	ut64		3661759	1					
ANR	3661872	Identifier	r_bin_omf_get_paddr_sym		3661759	2					
ANR	3661873	ParameterList	"r_bin_omf_obj * obj , OMF_symbol * sym"		3661759	3					
ANR	3661874	Parameter	r_bin_omf_obj * obj	771:29:18591:18608	3661759	0	True				
ANR	3661875	ParameterType	r_bin_omf_obj *		3661759	0					
ANR	3661876	Identifier	obj		3661759	1					
ANR	3661877	Parameter	OMF_symbol * sym	771:49:18611:18625	3661759	1	True				
ANR	3661878	ParameterType	OMF_symbol *		3661759	0					
ANR	3661879	Identifier	sym		3661759	1					
ANR	3661880	CFGEntryNode	ENTRY		3661759		True				
ANR	3661881	CFGExitNode	EXIT		3661759		True				
ANR	3661882	Symbol	data -> offset		3661759						
ANR	3661883	Symbol	* obj		3661759						
ANR	3661884	Symbol	data -> paddr		3661759						
ANR	3661885	Symbol	offset		3661759						
ANR	3661886	Symbol	* sidx		3661759						
ANR	3661887	Symbol	data		3661759						
ANR	3661888	Symbol	sym		3661759						
ANR	3661889	Symbol	* * sidx		3661759						
ANR	3661890	Symbol	* * obj		3661759						
ANR	3661891	Symbol	data -> next		3661759						
ANR	3661892	Symbol	* sym		3661759						
ANR	3661893	Symbol	sym -> seg_idx		3661759						
ANR	3661894	Symbol	* * * obj		3661759						
ANR	3661895	Symbol	obj		3661759						
ANR	3661896	Symbol	obj -> nb_section		3661759						
ANR	3661897	Symbol	sym -> offset		3661759						
ANR	3661898	Symbol	* obj -> sections		3661759						
ANR	3661899	Symbol	* * obj -> sections		3661759						
ANR	3661900	Symbol	* data		3661759						
ANR	3661901	Symbol	obj -> sections		3661759						
ANR	3661902	Symbol	data -> size		3661759						
ANR	3661903	Symbol	sidx		3661759						
ANR	3661904	Symbol	obj -> sections [ sidx ] -> data		3661759						
ANR	3661905	Function	r_bin_omf_get_vaddr_sym	794:0:19036:19382							
ANR	3661906	FunctionDef	"r_bin_omf_get_vaddr_sym (r_bin_omf_obj * obj , OMF_symbol * sym)"		3661905	0					
ANR	3661907	CompoundStatement		794:66:19102:19382	3661905	0					
ANR	3661908	IfStatement	if ( ! obj -> sections )		3661905	0					
ANR	3661909	Condition	! obj -> sections	795:5:19109:19122	3661905	0	True				
ANR	3661910	UnaryOperationExpression	! obj -> sections		3661905	0					
ANR	3661911	UnaryOperator	!		3661905	0					
ANR	3661912	PtrMemberAccess	obj -> sections		3661905	1					
ANR	3661913	Identifier	obj		3661905	0					
ANR	3661914	Identifier	sections		3661905	1					
ANR	3661915	CompoundStatement		2:21:22:22	3661905	1					
ANR	3661916	Statement	return	796:2:19129:19134	3661905	0	True				
ANR	3661917	Statement	0L	796:9:19136:19137	3661905	1	True				
ANR	3661918	ExpressionStatement	L	796:11:19138:19139	3661905	2	True				
ANR	3661919	Identifier	L		3661905	0					
ANR	3661920	IfStatement	if ( sym -> seg_idx >= obj -> nb_section )		3661905	1					
ANR	3661921	Condition	sym -> seg_idx >= obj -> nb_section	798:5:19149:19179	3661905	0	True				
ANR	3661922	RelationalExpression	sym -> seg_idx >= obj -> nb_section		3661905	0		>=			
ANR	3661923	PtrMemberAccess	sym -> seg_idx		3661905	0					
ANR	3661924	Identifier	sym		3661905	0					
ANR	3661925	Identifier	seg_idx		3661905	1					
ANR	3661926	PtrMemberAccess	obj -> nb_section		3661905	1					
ANR	3661927	Identifier	obj		3661905	0					
ANR	3661928	Identifier	nb_section		3661905	1					
ANR	3661929	CompoundStatement		5:38:79:79	3661905	1					
ANR	3661930	ExpressionStatement	"eprintf ( ""Invalid segment index for symbol %s\\n"" , sym -> name )"	799:2:19186:19246	3661905	0	True				
ANR	3661931	CallExpression	"eprintf ( ""Invalid segment index for symbol %s\\n"" , sym -> name )"		3661905	0					
ANR	3661932	Callee	eprintf		3661905	0					
ANR	3661933	Identifier	eprintf		3661905	0					
ANR	3661934	ArgumentList	"""Invalid segment index for symbol %s\\n"""		3661905	1					
ANR	3661935	Argument	"""Invalid segment index for symbol %s\\n"""		3661905	0					
ANR	3661936	PrimaryExpression	"""Invalid segment index for symbol %s\\n"""		3661905	0					
ANR	3661937	Argument	sym -> name		3661905	1					
ANR	3661938	PtrMemberAccess	sym -> name		3661905	0					
ANR	3661939	Identifier	sym		3661905	0					
ANR	3661940	Identifier	name		3661905	1					
ANR	3661941	ReturnStatement	return 0 ;	800:2:19250:19258	3661905	1	True				
ANR	3661942	PrimaryExpression	0		3661905	0					
ANR	3661943	IfStatement	if ( sym -> seg_idx == 0 )		3661905	2					
ANR	3661944	Condition	sym -> seg_idx == 0	802:5:19268:19284	3661905	0	True				
ANR	3661945	EqualityExpression	sym -> seg_idx == 0		3661905	0		==			
ANR	3661946	PtrMemberAccess	sym -> seg_idx		3661905	0					
ANR	3661947	Identifier	sym		3661905	0					
ANR	3661948	Identifier	seg_idx		3661905	1					
ANR	3661949	PrimaryExpression	0		3661905	1					
ANR	3661950	CompoundStatement		9:24:184:184	3661905	1					
ANR	3661951	ReturnStatement	return 0 ;	803:2:19291:19299	3661905	0	True				
ANR	3661952	PrimaryExpression	0		3661905	0					
ANR	3661953	ReturnStatement	return obj -> sections [ sym -> seg_idx - 1 ] -> vaddr + sym -> offset + OMF_BASE_ADDR ;	805:1:19305:19380	3661905	3	True				
ANR	3661954	AdditiveExpression	obj -> sections [ sym -> seg_idx - 1 ] -> vaddr + sym -> offset + OMF_BASE_ADDR		3661905	0		+			
ANR	3661955	PtrMemberAccess	obj -> sections [ sym -> seg_idx - 1 ] -> vaddr		3661905	0					
ANR	3661956	ArrayIndexing	obj -> sections [ sym -> seg_idx - 1 ]		3661905	0					
ANR	3661957	PtrMemberAccess	obj -> sections		3661905	0					
ANR	3661958	Identifier	obj		3661905	0					
ANR	3661959	Identifier	sections		3661905	1					
ANR	3661960	AdditiveExpression	sym -> seg_idx - 1		3661905	1		-			
ANR	3661961	PtrMemberAccess	sym -> seg_idx		3661905	0					
ANR	3661962	Identifier	sym		3661905	0					
ANR	3661963	Identifier	seg_idx		3661905	1					
ANR	3661964	PrimaryExpression	1		3661905	1					
ANR	3661965	Identifier	vaddr		3661905	1					
ANR	3661966	AdditiveExpression	sym -> offset + OMF_BASE_ADDR		3661905	1		+			
ANR	3661967	PtrMemberAccess	sym -> offset		3661905	0					
ANR	3661968	Identifier	sym		3661905	0					
ANR	3661969	Identifier	offset		3661905	1					
ANR	3661970	Identifier	OMF_BASE_ADDR		3661905	1					
ANR	3661971	ReturnType	ut64		3661905	1					
ANR	3661972	Identifier	r_bin_omf_get_vaddr_sym		3661905	2					
ANR	3661973	ParameterList	"r_bin_omf_obj * obj , OMF_symbol * sym"		3661905	3					
ANR	3661974	Parameter	r_bin_omf_obj * obj	794:29:19065:19082	3661905	0	True				
ANR	3661975	ParameterType	r_bin_omf_obj *		3661905	0					
ANR	3661976	Identifier	obj		3661905	1					
ANR	3661977	Parameter	OMF_symbol * sym	794:49:19085:19099	3661905	1	True				
ANR	3661978	ParameterType	OMF_symbol *		3661905	0					
ANR	3661979	Identifier	sym		3661905	1					
ANR	3661980	CFGEntryNode	ENTRY		3661905		True				
ANR	3661981	CFGExitNode	EXIT		3661905		True				
ANR	3661982	Symbol	* obj		3661905						
ANR	3661983	Symbol	* * * sym		3661905						
ANR	3661984	Symbol	sym		3661905						
ANR	3661985	Symbol	obj -> sections [ sym -> seg_idx - 1 ] -> vaddr		3661905						
ANR	3661986	Symbol	* * sym -> seg_idx		3661905						
ANR	3661987	Symbol	* * obj		3661905						
ANR	3661988	Symbol	* sym		3661905						
ANR	3661989	Symbol	sym -> seg_idx		3661905						
ANR	3661990	Symbol	* * * obj		3661905						
ANR	3661991	Symbol	obj		3661905						
ANR	3661992	Symbol	obj -> nb_section		3661905						
ANR	3661993	Symbol	sym -> name		3661905						
ANR	3661994	Symbol	* sym -> seg_idx		3661905						
ANR	3661995	Symbol	sym -> offset		3661905						
ANR	3661996	Symbol	* obj -> sections		3661905						
ANR	3661997	Symbol	* * sym		3661905						
ANR	3661998	Symbol	* * obj -> sections		3661905						
ANR	3661999	Symbol	OMF_BASE_ADDR		3661905						
ANR	3662000	Symbol	obj -> sections		3661905						
