command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3693852	File	data/converged/CVE-2019-16718~_radare2/libr_bin_mangling_cxx.c								
ANR	3693853	Function	r_bin_demangle_cxx	7:0:127:1826							
ANR	3693854	FunctionDef	"r_bin_demangle_cxx (RBinFile * bf , const char * str , ut64 vaddr)"		3693853	0					
ANR	3693855	CompoundStatement		7:74:201:1826	3693853	0					
ANR	3693856	IdentifierDeclStatement	int i ;	10:1:297:302	3693853	0	True				
ANR	3693857	IdentifierDecl	i		3693853	0					
ANR	3693858	IdentifierDeclType	int		3693853	0					
ANR	3693859	Identifier	i		3693853	1					
ANR	3693860	IdentifierDeclStatement	int flags = DMGL_NO_OPTS | DMGL_PARAMS ;	12:1:318:356	3693853	1	True				
ANR	3693861	IdentifierDecl	flags = DMGL_NO_OPTS | DMGL_PARAMS		3693853	0					
ANR	3693862	IdentifierDeclType	int		3693853	0					
ANR	3693863	Identifier	flags		3693853	1					
ANR	3693864	AssignmentExpression	flags = DMGL_NO_OPTS | DMGL_PARAMS		3693853	2		=			
ANR	3693865	Identifier	flags		3693853	0					
ANR	3693866	InclusiveOrExpression	DMGL_NO_OPTS | DMGL_PARAMS		3693853	1		|			
ANR	3693867	Identifier	DMGL_NO_OPTS		3693853	0					
ANR	3693868	Identifier	DMGL_PARAMS		3693853	1					
ANR	3693869	IdentifierDeclStatement	"const char * prefixes [ ] = { ""__symbol_stub1_"" , ""reloc."" , ""sym.imp."" , ""imp."" , NULL } ;"	14:1:366:459	3693853	2	True				
ANR	3693870	IdentifierDecl	"* prefixes [ ] = { ""__symbol_stub1_"" , ""reloc."" , ""sym.imp."" , ""imp."" , NULL }"		3693853	0					
ANR	3693871	IdentifierDeclType	const char * [ ]		3693853	0					
ANR	3693872	Identifier	prefixes		3693853	1					
ANR	3693873	AssignmentExpression	"* prefixes [ ] = { ""__symbol_stub1_"" , ""reloc."" , ""sym.imp."" , ""imp."" , NULL }"		3693853	2		=			
ANR	3693874	Identifier	prefixes		3693853	0					
ANR	3693875	InitializerList	"""__symbol_stub1_"""		3693853	1					
ANR	3693876	PrimaryExpression	"""__symbol_stub1_"""		3693853	0					
ANR	3693877	PrimaryExpression	"""reloc."""		3693853	1					
ANR	3693878	PrimaryExpression	"""sym.imp."""		3693853	2					
ANR	3693879	PrimaryExpression	"""imp."""		3693853	3					
ANR	3693880	Identifier	NULL		3693853	4					
ANR	3693881	IdentifierDeclStatement	char * tmpstr = strdup ( str ) ;	21:1:462:489	3693853	3	True				
ANR	3693882	IdentifierDecl	* tmpstr = strdup ( str )		3693853	0					
ANR	3693883	IdentifierDeclType	char *		3693853	0					
ANR	3693884	Identifier	tmpstr		3693853	1					
ANR	3693885	AssignmentExpression	* tmpstr = strdup ( str )		3693853	2		=			
ANR	3693886	Identifier	tmpstr		3693853	0					
ANR	3693887	CallExpression	strdup ( str )		3693853	1					
ANR	3693888	Callee	strdup		3693853	0					
ANR	3693889	Identifier	strdup		3693853	0					
ANR	3693890	ArgumentList	str		3693853	1					
ANR	3693891	Argument	str		3693853	0					
ANR	3693892	Identifier	str		3693853	0					
ANR	3693893	IdentifierDeclStatement	char * p = tmpstr ;	22:1:492:508	3693853	4	True				
ANR	3693894	IdentifierDecl	* p = tmpstr		3693853	0					
ANR	3693895	IdentifierDeclType	char *		3693853	0					
ANR	3693896	Identifier	p		3693853	1					
ANR	3693897	AssignmentExpression	* p = tmpstr		3693853	2		=			
ANR	3693898	Identifier	tmpstr		3693853	0					
ANR	3693899	Identifier	tmpstr		3693853	1					
ANR	3693900	IfStatement	if ( p [ 0 ] == p [ 1 ] && * p == '_' )		3693853	5					
ANR	3693901	Condition	p [ 0 ] == p [ 1 ] && * p == '_'	24:5:516:540	3693853	0	True				
ANR	3693902	AndExpression	p [ 0 ] == p [ 1 ] && * p == '_'		3693853	0		&&			
ANR	3693903	EqualityExpression	p [ 0 ] == p [ 1 ]		3693853	0		==			
ANR	3693904	ArrayIndexing	p [ 0 ]		3693853	0					
ANR	3693905	Identifier	p		3693853	0					
ANR	3693906	PrimaryExpression	0		3693853	1					
ANR	3693907	ArrayIndexing	p [ 1 ]		3693853	1					
ANR	3693908	Identifier	p		3693853	0					
ANR	3693909	PrimaryExpression	1		3693853	1					
ANR	3693910	EqualityExpression	* p == '_'		3693853	1		==			
ANR	3693911	UnaryOperationExpression	* p		3693853	0					
ANR	3693912	UnaryOperator	*		3693853	0					
ANR	3693913	Identifier	p		3693853	1					
ANR	3693914	PrimaryExpression	'_'		3693853	1					
ANR	3693915	CompoundStatement		18:32:341:341	3693853	1					
ANR	3693916	ExpressionStatement	p ++	25:2:547:550	3693853	0	True				
ANR	3693917	PostIncDecOperationExpression	p ++		3693853	0					
ANR	3693918	Identifier	p		3693853	0					
ANR	3693919	IncDec	++		3693853	1					
ANR	3693920	ForStatement	for ( i = 0 ; prefixes [ i ] ; i ++ )		3693853	6					
ANR	3693921	ForInit	i = 0 ;	27:6:561:566	3693853	0	True				
ANR	3693922	AssignmentExpression	i = 0		3693853	0		=			
ANR	3693923	Identifier	i		3693853	0					
ANR	3693924	PrimaryExpression	0		3693853	1					
ANR	3693925	Condition	prefixes [ i ]	27:13:568:578	3693853	1	True				
ANR	3693926	ArrayIndexing	prefixes [ i ]		3693853	0					
ANR	3693927	Identifier	prefixes		3693853	0					
ANR	3693928	Identifier	i		3693853	1					
ANR	3693929	PostIncDecOperationExpression	i ++	27:26:581:583	3693853	2	True				
ANR	3693930	Identifier	i		3693853	0					
ANR	3693931	IncDec	++		3693853	1					
ANR	3693932	CompoundStatement		22:2:388:419	3693853	3					
ANR	3693933	IdentifierDeclStatement	int plen = strlen ( prefixes [ i ] ) ;	28:2:590:621	3693853	0	True				
ANR	3693934	IdentifierDecl	plen = strlen ( prefixes [ i ] )		3693853	0					
ANR	3693935	IdentifierDeclType	int		3693853	0					
ANR	3693936	Identifier	plen		3693853	1					
ANR	3693937	AssignmentExpression	plen = strlen ( prefixes [ i ] )		3693853	2		=			
ANR	3693938	Identifier	plen		3693853	0					
ANR	3693939	CallExpression	strlen ( prefixes [ i ] )		3693853	1					
ANR	3693940	Callee	strlen		3693853	0					
ANR	3693941	Identifier	strlen		3693853	0					
ANR	3693942	ArgumentList	prefixes [ i ]		3693853	1					
ANR	3693943	Argument	prefixes [ i ]		3693853	0					
ANR	3693944	ArrayIndexing	prefixes [ i ]		3693853	0					
ANR	3693945	Identifier	prefixes		3693853	0					
ANR	3693946	Identifier	i		3693853	1					
ANR	3693947	IfStatement	"if ( ! strncmp ( p , prefixes [ i ] , plen ) )"		3693853	1					
ANR	3693948	Condition	"! strncmp ( p , prefixes [ i ] , plen )"	29:6:629:659	3693853	0	True				
ANR	3693949	UnaryOperationExpression	"! strncmp ( p , prefixes [ i ] , plen )"		3693853	0					
ANR	3693950	UnaryOperator	!		3693853	0					
ANR	3693951	CallExpression	"strncmp ( p , prefixes [ i ] , plen )"		3693853	1					
ANR	3693952	Callee	strncmp		3693853	0					
ANR	3693953	Identifier	strncmp		3693853	0					
ANR	3693954	ArgumentList	p		3693853	1					
ANR	3693955	Argument	p		3693853	0					
ANR	3693956	Identifier	p		3693853	0					
ANR	3693957	Argument	prefixes [ i ]		3693853	1					
ANR	3693958	ArrayIndexing	prefixes [ i ]		3693853	0					
ANR	3693959	Identifier	prefixes		3693853	0					
ANR	3693960	Identifier	i		3693853	1					
ANR	3693961	Argument	plen		3693853	2					
ANR	3693962	Identifier	plen		3693853	0					
ANR	3693963	CompoundStatement		23:39:460:460	3693853	1					
ANR	3693964	ExpressionStatement	p += plen	30:3:667:676	3693853	0	True				
ANR	3693965	AssignmentExpression	p += plen		3693853	0		+=			
ANR	3693966	Identifier	p		3693853	0					
ANR	3693967	Identifier	plen		3693853	1					
ANR	3693968	BreakStatement	break ;	31:3:681:686	3693853	1	True				
ANR	3693969	IdentifierDeclStatement	"char * cxxabi = strstr ( p , ""@@CXXABI"" ) ;"	35:1:721:758	3693853	7	True				
ANR	3693970	IdentifierDecl	"* cxxabi = strstr ( p , ""@@CXXABI"" )"		3693853	0					
ANR	3693971	IdentifierDeclType	char *		3693853	0					
ANR	3693972	Identifier	cxxabi		3693853	1					
ANR	3693973	AssignmentExpression	"* cxxabi = strstr ( p , ""@@CXXABI"" )"		3693853	2		=			
ANR	3693974	Identifier	cxxabi		3693853	0					
ANR	3693975	CallExpression	"strstr ( p , ""@@CXXABI"" )"		3693853	1					
ANR	3693976	Callee	strstr		3693853	0					
ANR	3693977	Identifier	strstr		3693853	0					
ANR	3693978	ArgumentList	p		3693853	1					
ANR	3693979	Argument	p		3693853	0					
ANR	3693980	Identifier	p		3693853	0					
ANR	3693981	Argument	"""@@CXXABI"""		3693853	1					
ANR	3693982	PrimaryExpression	"""@@CXXABI"""		3693853	0					
ANR	3693983	IdentifierDeclStatement	"char * glibcxx = strstr ( p , ""@GLIBCXX"" ) ;"	36:1:761:799	3693853	8	True				
ANR	3693984	IdentifierDecl	"* glibcxx = strstr ( p , ""@GLIBCXX"" )"		3693853	0					
ANR	3693985	IdentifierDeclType	char *		3693853	0					
ANR	3693986	Identifier	glibcxx		3693853	1					
ANR	3693987	AssignmentExpression	"* glibcxx = strstr ( p , ""@GLIBCXX"" )"		3693853	2		=			
ANR	3693988	Identifier	glibcxx		3693853	0					
ANR	3693989	CallExpression	"strstr ( p , ""@GLIBCXX"" )"		3693853	1					
ANR	3693990	Callee	strstr		3693853	0					
ANR	3693991	Identifier	strstr		3693853	0					
ANR	3693992	ArgumentList	p		3693853	1					
ANR	3693993	Argument	p		3693853	0					
ANR	3693994	Identifier	p		3693853	0					
ANR	3693995	Argument	"""@GLIBCXX"""		3693853	1					
ANR	3693996	PrimaryExpression	"""@GLIBCXX"""		3693853	0					
ANR	3693997	IfStatement	if ( cxxabi )		3693853	9					
ANR	3693998	Condition	cxxabi	37:5:806:811	3693853	0	True				
ANR	3693999	Identifier	cxxabi		3693853	0					
ANR	3694000	CompoundStatement		31:13:612:612	3693853	1					
ANR	3694001	ExpressionStatement	* cxxabi = '\\0'	38:2:818:832	3693853	0	True				
ANR	3694002	AssignmentExpression	* cxxabi = '\\0'		3693853	0		=			
ANR	3694003	UnaryOperationExpression	* cxxabi		3693853	0					
ANR	3694004	UnaryOperator	*		3693853	0					
ANR	3694005	Identifier	cxxabi		3693853	1					
ANR	3694006	PrimaryExpression	'\\0'		3693853	1					
ANR	3694007	ElseStatement	else		3693853	0					
ANR	3694008	IfStatement	if ( glibcxx )		3693853	0					
ANR	3694009	Condition	glibcxx	39:12:846:852	3693853	0	True				
ANR	3694010	Identifier	glibcxx		3693853	0					
ANR	3694011	CompoundStatement		33:21:653:653	3693853	1					
ANR	3694012	IfStatement	if ( p < glibcxx && glibcxx [ - 1 ] == '@' )		3693853	0					
ANR	3694013	Condition	p < glibcxx && glibcxx [ - 1 ] == '@'	40:6:863:895	3693853	0	True				
ANR	3694014	AndExpression	p < glibcxx && glibcxx [ - 1 ] == '@'		3693853	0		&&			
ANR	3694015	RelationalExpression	p < glibcxx		3693853	0		<			
ANR	3694016	Identifier	p		3693853	0					
ANR	3694017	Identifier	glibcxx		3693853	1					
ANR	3694018	EqualityExpression	glibcxx [ - 1 ] == '@'		3693853	1		==			
ANR	3694019	ArrayIndexing	glibcxx [ - 1 ]		3693853	0					
ANR	3694020	Identifier	glibcxx		3693853	0					
ANR	3694021	UnaryOperationExpression	- 1		3693853	1					
ANR	3694022	UnaryOperator	-		3693853	0					
ANR	3694023	PrimaryExpression	1		3693853	1					
ANR	3694024	PrimaryExpression	'@'		3693853	1					
ANR	3694025	CompoundStatement		34:41:696:696	3693853	1					
ANR	3694026	ExpressionStatement	glibcxx [ - 1 ] = '\\0'	41:3:903:921	3693853	0	True				
ANR	3694027	AssignmentExpression	glibcxx [ - 1 ] = '\\0'		3693853	0		=			
ANR	3694028	ArrayIndexing	glibcxx [ - 1 ]		3693853	0					
ANR	3694029	Identifier	glibcxx		3693853	0					
ANR	3694030	UnaryOperationExpression	- 1		3693853	1					
ANR	3694031	UnaryOperator	-		3693853	0					
ANR	3694032	PrimaryExpression	1		3693853	1					
ANR	3694033	PrimaryExpression	'\\0'		3693853	1					
ANR	3694034	ElseStatement	else		3693853	0					
ANR	3694035	CompoundStatement		36:9:730:730	3693853	0					
ANR	3694036	ExpressionStatement	* glibcxx = '\\0'	43:3:937:952	3693853	0	True				
ANR	3694037	AssignmentExpression	* glibcxx = '\\0'		3693853	0		=			
ANR	3694038	UnaryOperationExpression	* glibcxx		3693853	0					
ANR	3694039	UnaryOperator	*		3693853	0					
ANR	3694040	Identifier	glibcxx		3693853	1					
ANR	3694041	PrimaryExpression	'\\0'		3693853	1					
ANR	3694042	IdentifierDeclStatement	"char * out = cplus_demangle_v3 ( p , flags ) ;"	47:1:975:1015	3693853	10	True				
ANR	3694043	IdentifierDecl	"* out = cplus_demangle_v3 ( p , flags )"		3693853	0					
ANR	3694044	IdentifierDeclType	char *		3693853	0					
ANR	3694045	Identifier	out		3693853	1					
ANR	3694046	AssignmentExpression	"* out = cplus_demangle_v3 ( p , flags )"		3693853	2		=			
ANR	3694047	Identifier	out		3693853	0					
ANR	3694048	CallExpression	"cplus_demangle_v3 ( p , flags )"		3693853	1					
ANR	3694049	Callee	cplus_demangle_v3		3693853	0					
ANR	3694050	Identifier	cplus_demangle_v3		3693853	0					
ANR	3694051	ArgumentList	p		3693853	1					
ANR	3694052	Argument	p		3693853	0					
ANR	3694053	Identifier	p		3693853	0					
ANR	3694054	Argument	flags		3693853	1					
ANR	3694055	Identifier	flags		3693853	0					
ANR	3694056	ExpressionStatement	free ( tmpstr )	52:1:1114:1127	3693853	11	True				
ANR	3694057	CallExpression	free ( tmpstr )		3693853	0					
ANR	3694058	Callee	free		3693853	0					
ANR	3694059	Identifier	free		3693853	0					
ANR	3694060	ArgumentList	tmpstr		3693853	1					
ANR	3694061	Argument	tmpstr		3693853	0					
ANR	3694062	Identifier	tmpstr		3693853	0					
ANR	3694063	IfStatement	if ( out )		3693853	12					
ANR	3694064	Condition	out	53:5:1134:1136	3693853	0	True				
ANR	3694065	Identifier	out		3693853	0					
ANR	3694066	CompoundStatement		48:2:941:979	3693853	1					
ANR	3694067	IdentifierDeclStatement	"char * sign = ( char * ) strchr ( out , '(' ) ;"	54:2:1143:1181	3693853	0	True				
ANR	3694068	IdentifierDecl	"* sign = ( char * ) strchr ( out , '(' )"		3693853	0					
ANR	3694069	IdentifierDeclType	char *		3693853	0					
ANR	3694070	Identifier	sign		3693853	1					
ANR	3694071	AssignmentExpression	"* sign = ( char * ) strchr ( out , '(' )"		3693853	2		=			
ANR	3694072	Identifier	sign		3693853	0					
ANR	3694073	CastExpression	"( char * ) strchr ( out , '(' )"		3693853	1					
ANR	3694074	CastTarget	char *		3693853	0					
ANR	3694075	CallExpression	"strchr ( out , '(' )"		3693853	1					
ANR	3694076	Callee	strchr		3693853	0					
ANR	3694077	Identifier	strchr		3693853	0					
ANR	3694078	ArgumentList	out		3693853	1					
ANR	3694079	Argument	out		3693853	0					
ANR	3694080	Identifier	out		3693853	0					
ANR	3694081	Argument	'('		3693853	1					
ANR	3694082	PrimaryExpression	'('		3693853	0					
ANR	3694083	IfStatement	if ( sign )		3693853	1					
ANR	3694084	Condition	sign	55:6:1189:1192	3693853	0	True				
ANR	3694085	Identifier	sign		3693853	0					
ANR	3694086	CompoundStatement		52:3:1039:1056	3693853	1					
ANR	3694087	IdentifierDeclStatement	char * str = out ;	56:3:1200:1215	3693853	0	True				
ANR	3694088	IdentifierDecl	* str = out		3693853	0					
ANR	3694089	IdentifierDeclType	char *		3693853	0					
ANR	3694090	Identifier	str		3693853	1					
ANR	3694091	AssignmentExpression	* str = out		3693853	2		=			
ANR	3694092	Identifier	out		3693853	0					
ANR	3694093	Identifier	out		3693853	1					
ANR	3694094	IdentifierDeclStatement	char * ptr = NULL ;	57:3:1220:1236	3693853	1	True				
ANR	3694095	IdentifierDecl	* ptr = NULL		3693853	0					
ANR	3694096	IdentifierDeclType	char *		3693853	0					
ANR	3694097	Identifier	ptr		3693853	1					
ANR	3694098	AssignmentExpression	* ptr = NULL		3693853	2		=			
ANR	3694099	Identifier	NULL		3693853	0					
ANR	3694100	Identifier	NULL		3693853	1					
ANR	3694101	IdentifierDeclStatement	char * nerd = NULL ;	58:3:1241:1258	3693853	2	True				
ANR	3694102	IdentifierDecl	* nerd = NULL		3693853	0					
ANR	3694103	IdentifierDeclType	char *		3693853	0					
ANR	3694104	Identifier	nerd		3693853	1					
ANR	3694105	AssignmentExpression	* nerd = NULL		3693853	2		=			
ANR	3694106	Identifier	NULL		3693853	0					
ANR	3694107	Identifier	NULL		3693853	1					
ANR	3694108	ForStatement	for ( ; ; )		3693853	3					
ANR	3694109	CompoundStatement		53:12:1070:1070	3693853	0					
ANR	3694110	ExpressionStatement	"ptr = strstr ( str , ""::"" )"	60:4:1278:1302	3693853	0	True				
ANR	3694111	AssignmentExpression	"ptr = strstr ( str , ""::"" )"		3693853	0		=			
ANR	3694112	Identifier	ptr		3693853	0					
ANR	3694113	CallExpression	"strstr ( str , ""::"" )"		3693853	1					
ANR	3694114	Callee	strstr		3693853	0					
ANR	3694115	Identifier	strstr		3693853	0					
ANR	3694116	ArgumentList	str		3693853	1					
ANR	3694117	Argument	str		3693853	0					
ANR	3694118	Identifier	str		3693853	0					
ANR	3694119	Argument	"""::"""		3693853	1					
ANR	3694120	PrimaryExpression	"""::"""		3693853	0					
ANR	3694121	IfStatement	if ( ! ptr || ptr > sign )		3693853	1					
ANR	3694122	Condition	! ptr || ptr > sign	61:8:1312:1329	3693853	0	True				
ANR	3694123	OrExpression	! ptr || ptr > sign		3693853	0		||			
ANR	3694124	UnaryOperationExpression	! ptr		3693853	0					
ANR	3694125	UnaryOperator	!		3693853	0					
ANR	3694126	Identifier	ptr		3693853	1					
ANR	3694127	RelationalExpression	ptr > sign		3693853	1		>			
ANR	3694128	Identifier	ptr		3693853	0					
ANR	3694129	Identifier	sign		3693853	1					
ANR	3694130	CompoundStatement		55:28:1130:1130	3693853	1					
ANR	3694131	BreakStatement	break ;	62:5:1339:1344	3693853	0	True				
ANR	3694132	ExpressionStatement	nerd = ptr	64:4:1356:1366	3693853	2	True				
ANR	3694133	AssignmentExpression	nerd = ptr		3693853	0		=			
ANR	3694134	Identifier	nerd		3693853	0					
ANR	3694135	Identifier	ptr		3693853	1					
ANR	3694136	ExpressionStatement	str = ptr + 1	65:4:1372:1385	3693853	3	True				
ANR	3694137	AssignmentExpression	str = ptr + 1		3693853	0		=			
ANR	3694138	Identifier	str		3693853	0					
ANR	3694139	AdditiveExpression	ptr + 1		3693853	1		+			
ANR	3694140	Identifier	ptr		3693853	0					
ANR	3694141	PrimaryExpression	1		3693853	1					
ANR	3694142	IfStatement	if ( nerd && * nerd )		3693853	4					
ANR	3694143	Condition	nerd && * nerd	67:7:1399:1411	3693853	0	True				
ANR	3694144	AndExpression	nerd && * nerd		3693853	0		&&			
ANR	3694145	Identifier	nerd		3693853	0					
ANR	3694146	UnaryOperationExpression	* nerd		3693853	1					
ANR	3694147	UnaryOperator	*		3693853	0					
ANR	3694148	Identifier	nerd		3693853	1					
ANR	3694149	CompoundStatement		61:22:1212:1212	3693853	1					
ANR	3694150	ExpressionStatement	* nerd = 0	68:4:1420:1429	3693853	0	True				
ANR	3694151	AssignmentExpression	* nerd = 0		3693853	0		=			
ANR	3694152	UnaryOperationExpression	* nerd		3693853	0					
ANR	3694153	UnaryOperator	*		3693853	0					
ANR	3694154	Identifier	nerd		3693853	1					
ANR	3694155	PrimaryExpression	0		3693853	1					
ANR	3694156	IfStatement	if ( bf )		3693853	1					
ANR	3694157	Condition	bf	69:8:1439:1440	3693853	0	True				
ANR	3694158	Identifier	bf		3693853	0					
ANR	3694159	CompoundStatement		64:5:1248:1310	3693853	1					
ANR	3694160	IdentifierDeclStatement	"RBinSymbol * sym = r_bin_file_add_method ( bf , out , nerd + 2 , 0 ) ;"	70:5:1450:1512	3693853	0	True				
ANR	3694161	IdentifierDecl	"* sym = r_bin_file_add_method ( bf , out , nerd + 2 , 0 )"		3693853	0					
ANR	3694162	IdentifierDeclType	RBinSymbol *		3693853	0					
ANR	3694163	Identifier	sym		3693853	1					
ANR	3694164	AssignmentExpression	"* sym = r_bin_file_add_method ( bf , out , nerd + 2 , 0 )"		3693853	2		=			
ANR	3694165	Identifier	sym		3693853	0					
ANR	3694166	CallExpression	"r_bin_file_add_method ( bf , out , nerd + 2 , 0 )"		3693853	1					
ANR	3694167	Callee	r_bin_file_add_method		3693853	0					
ANR	3694168	Identifier	r_bin_file_add_method		3693853	0					
ANR	3694169	ArgumentList	bf		3693853	1					
ANR	3694170	Argument	bf		3693853	0					
ANR	3694171	Identifier	bf		3693853	0					
ANR	3694172	Argument	out		3693853	1					
ANR	3694173	Identifier	out		3693853	0					
ANR	3694174	Argument	nerd + 2		3693853	2					
ANR	3694175	AdditiveExpression	nerd + 2		3693853	0		+			
ANR	3694176	Identifier	nerd		3693853	0					
ANR	3694177	PrimaryExpression	2		3693853	1					
ANR	3694178	Argument	0		3693853	3					
ANR	3694179	PrimaryExpression	0		3693853	0					
ANR	3694180	IfStatement	if ( sym )		3693853	1					
ANR	3694181	Condition	sym	71:9:1523:1525	3693853	0	True				
ANR	3694182	Identifier	sym		3693853	0					
ANR	3694183	CompoundStatement		65:14:1326:1326	3693853	1					
ANR	3694184	IfStatement	if ( sym -> vaddr != 0 && sym -> vaddr != vaddr )		3693853	0					
ANR	3694185	Condition	sym -> vaddr != 0 && sym -> vaddr != vaddr	72:10:1540:1577	3693853	0	True				
ANR	3694186	AndExpression	sym -> vaddr != 0 && sym -> vaddr != vaddr		3693853	0		&&			
ANR	3694187	EqualityExpression	sym -> vaddr != 0		3693853	0		!=			
ANR	3694188	PtrMemberAccess	sym -> vaddr		3693853	0					
ANR	3694189	Identifier	sym		3693853	0					
ANR	3694190	Identifier	vaddr		3693853	1					
ANR	3694191	PrimaryExpression	0		3693853	1					
ANR	3694192	EqualityExpression	sym -> vaddr != vaddr		3693853	1		!=			
ANR	3694193	PtrMemberAccess	sym -> vaddr		3693853	0					
ANR	3694194	Identifier	sym		3693853	0					
ANR	3694195	Identifier	vaddr		3693853	1					
ANR	3694196	Identifier	vaddr		3693853	1					
ANR	3694197	CompoundStatement		66:50:1378:1378	3693853	1					
ANR	3694198	IfStatement	if ( bf && bf -> rbin && bf -> rbin -> verbose )		3693853	0					
ANR	3694199	Condition	bf && bf -> rbin && bf -> rbin -> verbose	73:11:1593:1627	3693853	0	True				
ANR	3694200	AndExpression	bf && bf -> rbin && bf -> rbin -> verbose		3693853	0		&&			
ANR	3694201	Identifier	bf		3693853	0					
ANR	3694202	AndExpression	bf -> rbin && bf -> rbin -> verbose		3693853	1		&&			
ANR	3694203	PtrMemberAccess	bf -> rbin		3693853	0					
ANR	3694204	Identifier	bf		3693853	0					
ANR	3694205	Identifier	rbin		3693853	1					
ANR	3694206	PtrMemberAccess	bf -> rbin -> verbose		3693853	1					
ANR	3694207	PtrMemberAccess	bf -> rbin		3693853	0					
ANR	3694208	Identifier	bf		3693853	0					
ANR	3694209	Identifier	rbin		3693853	1					
ANR	3694210	Identifier	verbose		3693853	1					
ANR	3694211	CompoundStatement		67:48:1428:1428	3693853	1					
ANR	3694212	ExpressionStatement	"eprintf ( ""Dupped method found: %s\\n"" , sym -> name )"	74:8:1640:1688	3693853	0	True				
ANR	3694213	CallExpression	"eprintf ( ""Dupped method found: %s\\n"" , sym -> name )"		3693853	0					
ANR	3694214	Callee	eprintf		3693853	0					
ANR	3694215	Identifier	eprintf		3693853	0					
ANR	3694216	ArgumentList	"""Dupped method found: %s\\n"""		3693853	1					
ANR	3694217	Argument	"""Dupped method found: %s\\n"""		3693853	0					
ANR	3694218	PrimaryExpression	"""Dupped method found: %s\\n"""		3693853	0					
ANR	3694219	Argument	sym -> name		3693853	1					
ANR	3694220	PtrMemberAccess	sym -> name		3693853	0					
ANR	3694221	Identifier	sym		3693853	0					
ANR	3694222	Identifier	name		3693853	1					
ANR	3694223	IfStatement	if ( sym -> vaddr == 0 )		3693853	1					
ANR	3694224	Condition	sym -> vaddr == 0	77:10:1717:1731	3693853	0	True				
ANR	3694225	EqualityExpression	sym -> vaddr == 0		3693853	0		==			
ANR	3694226	PtrMemberAccess	sym -> vaddr		3693853	0					
ANR	3694227	Identifier	sym		3693853	0					
ANR	3694228	Identifier	vaddr		3693853	1					
ANR	3694229	PrimaryExpression	0		3693853	1					
ANR	3694230	CompoundStatement		71:27:1532:1532	3693853	1					
ANR	3694231	ExpressionStatement	sym -> vaddr = vaddr	78:7:1743:1761	3693853	0	True				
ANR	3694232	AssignmentExpression	sym -> vaddr = vaddr		3693853	0		=			
ANR	3694233	PtrMemberAccess	sym -> vaddr		3693853	0					
ANR	3694234	Identifier	sym		3693853	0					
ANR	3694235	Identifier	vaddr		3693853	1					
ANR	3694236	Identifier	vaddr		3693853	1					
ANR	3694237	ExpressionStatement	* nerd = ':'	82:4:1788:1799	3693853	2	True				
ANR	3694238	AssignmentExpression	* nerd = ':'		3693853	0		=			
ANR	3694239	UnaryOperationExpression	* nerd		3693853	0					
ANR	3694240	UnaryOperator	*		3693853	0					
ANR	3694241	Identifier	nerd		3693853	1					
ANR	3694242	PrimaryExpression	':'		3693853	1					
ANR	3694243	ReturnStatement	return out ;	86:1:1814:1824	3693853	13	True				
ANR	3694244	Identifier	out		3693853	0					
ANR	3694245	ReturnType	R_API char *		3693853	1					
ANR	3694246	Identifier	r_bin_demangle_cxx		3693853	2					
ANR	3694247	ParameterList	"RBinFile * bf , const char * str , ut64 vaddr"		3693853	3					
ANR	3694248	Parameter	RBinFile * bf	7:31:158:169	3693853	0	True				
ANR	3694249	ParameterType	RBinFile *		3693853	0					
ANR	3694250	Identifier	bf		3693853	1					
ANR	3694251	Parameter	const char * str	7:45:172:186	3693853	1	True				
ANR	3694252	ParameterType	const char *		3693853	0					
ANR	3694253	Identifier	str		3693853	1					
ANR	3694254	Parameter	ut64 vaddr	7:62:189:198	3693853	2	True				
ANR	3694255	ParameterType	ut64		3693853	0					
ANR	3694256	Identifier	vaddr		3693853	1					
ANR	3694257	CFGEntryNode	ENTRY		3693853		True				
ANR	3694258	CFGExitNode	EXIT		3693853		True				
ANR	3694259	InfiniteForNode	true		3693853		True				
ANR	3694260	Symbol	DMGL_NO_OPTS		3693853						
ANR	3694261	Symbol	* bf -> rbin		3693853						
ANR	3694262	Symbol	bf		3693853						
ANR	3694263	Symbol	bf -> rbin -> verbose		3693853						
ANR	3694264	Symbol	sym		3693853						
ANR	3694265	Symbol	glibcxx		3693853						
ANR	3694266	Symbol	flags		3693853						
ANR	3694267	Symbol	sign		3693853						
ANR	3694268	Symbol	strchr		3693853						
ANR	3694269	Symbol	vaddr		3693853						
ANR	3694270	Symbol	bf -> rbin		3693853						
ANR	3694271	Symbol	out		3693853						
ANR	3694272	Symbol	strlen		3693853						
ANR	3694273	Symbol	plen		3693853						
ANR	3694274	Symbol	strncmp		3693853						
ANR	3694275	Symbol	nerd		3693853						
ANR	3694276	Symbol	tmpstr		3693853						
ANR	3694277	Symbol	* cxxabi		3693853						
ANR	3694278	Symbol	NULL		3693853						
ANR	3694279	Symbol	sym -> vaddr		3693853						
ANR	3694280	Symbol	cxxabi		3693853						
ANR	3694281	Symbol	i		3693853						
ANR	3694282	Symbol	* bf		3693853						
ANR	3694283	Symbol	* glibcxx		3693853						
ANR	3694284	Symbol	r_bin_file_add_method		3693853						
ANR	3694285	Symbol	DMGL_PARAMS		3693853						
ANR	3694286	Symbol	ptr		3693853						
ANR	3694287	Symbol	str		3693853						
ANR	3694288	Symbol	p		3693853						
ANR	3694289	Symbol	* sym		3693853						
ANR	3694290	Symbol	prefixes		3693853						
ANR	3694291	Symbol	* * bf		3693853						
ANR	3694292	Symbol	* i		3693853						
ANR	3694293	Symbol	strstr		3693853						
ANR	3694294	Symbol	sym -> name		3693853						
ANR	3694295	Symbol	* p		3693853						
ANR	3694296	Symbol	* prefixes		3693853						
ANR	3694297	Symbol	strdup		3693853						
ANR	3694298	Symbol	cplus_demangle_v3		3693853						
ANR	3694299	Symbol	* nerd		3693853						
