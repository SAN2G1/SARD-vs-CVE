command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	332555	File	data/converged/CVE-2019-16718~_radare2/armass.c								
ANR	332556	ClassDef	<unnamed>	12:8:240:364							
ANR	332557	DeclStmt									
ANR	332558	Decl							ut64	ut64	off
ANR	332559	DeclStmt									
ANR	332560	Decl							ut32	ut32	o
ANR	332561	DeclStmt									
ANR	332562	Decl							char	char [ 128 ]	op
ANR	332563	DeclStmt									
ANR	332564	Decl							char	char [ 128 ]	opstr
ANR	332565	DeclStmt									
ANR	332566	Decl							char	char * [ 16 ]	a
ANR	332567	DeclStmt									
ANR	332568	Decl									ArmOpcode
ANR	332569	ClassDef	<unnamed>	20:8:375:432							
ANR	332570	DeclStmt									
ANR	332571	Decl							const char	const char *	name
ANR	332572	DeclStmt									
ANR	332573	Decl							int	int	code
ANR	332574	DeclStmt									
ANR	332575	Decl							int	int	type
ANR	332576	DeclStmt									
ANR	332577	Decl									ArmOp
ANR	332578	ClassDef	<unnamed>	26:0:435:777							
ANR	332579	Function	strcmpnull	50:0:781:874							
ANR	332580	FunctionDef	"strcmpnull (const char * a , const char * b)"		332579	0					
ANR	332581	CompoundStatement		50:52:833:874	332579	0					
ANR	332582	ReturnStatement	"return ( a && b ) ? strcmp ( a , b ) : - 1 ;"	51:1:836:872	332579	0	True				
ANR	332583	ConditionalExpression	"( a && b ) ? strcmp ( a , b ) : - 1"		332579	0					
ANR	332584	Condition	a && b		332579	0					
ANR	332585	AndExpression	a && b		332579	0		&&			
ANR	332586	Identifier	a		332579	0					
ANR	332587	Identifier	b		332579	1					
ANR	332588	CallExpression	"strcmp ( a , b )"		332579	1					
ANR	332589	Callee	strcmp		332579	0					
ANR	332590	Identifier	strcmp		332579	0					
ANR	332591	ArgumentList	a		332579	1					
ANR	332592	Argument	a		332579	0					
ANR	332593	Identifier	a		332579	0					
ANR	332594	Argument	b		332579	1					
ANR	332595	Identifier	b		332579	0					
ANR	332596	UnaryOperationExpression	- 1		332579	2					
ANR	332597	UnaryOperator	-		332579	0					
ANR	332598	PrimaryExpression	1		332579	1					
ANR	332599	ReturnType	static int		332579	1					
ANR	332600	Identifier	strcmpnull		332579	2					
ANR	332601	ParameterList	"const char * a , const char * b"		332579	3					
ANR	332602	Parameter	const char * a	50:22:803:815	332579	0	True				
ANR	332603	ParameterType	const char *		332579	0					
ANR	332604	Identifier	a		332579	1					
ANR	332605	Parameter	const char * b	50:37:818:830	332579	1	True				
ANR	332606	ParameterType	const char *		332579	0					
ANR	332607	Identifier	b		332579	1					
ANR	332608	CFGEntryNode	ENTRY		332579		True				
ANR	332609	CFGExitNode	EXIT		332579		True				
ANR	332610	Symbol	strcmp		332579						
ANR	332611	Symbol	a		332579						
ANR	332612	Symbol	b		332579						
ANR	332613	DeclStmt									
ANR	332614	Decl							ArmOp	ArmOp [ ]	ops
ANR	332615	DeclStmt									
ANR	332616	Decl							const ut64	const ut64	M_BIT
ANR	332617	DeclStmt									
ANR	332618	Decl							const ut64	const ut64	S_BIT
ANR	332619	DeclStmt									
ANR	332620	Decl							const ut64	const ut64	C_BITS
ANR	332621	DeclStmt									
ANR	332622	Decl							const ut64	const ut64	DOTN_BIT
ANR	332623	DeclStmt									
ANR	332624	Decl							const ut64	const ut64	DOTW_BIT
ANR	332625	DeclStmt									
ANR	332626	Decl							const ut64	const ut64	L_BIT
ANR	332627	DeclStmt									
ANR	332628	Decl							const ut64	const ut64	X_BIT
ANR	332629	DeclStmt									
ANR	332630	Decl							const ut64	const ut64	TWO_BIT
ANR	332631	DeclStmt									
ANR	332632	Decl							const ut64	const ut64	IE_BIT
ANR	332633	DeclStmt									
ANR	332634	Decl							const ut64	const ut64	ID_BIT
ANR	332635	DeclStmt									
ANR	332636	Decl							const ut64	const ut64	EA_BIT
ANR	332637	DeclStmt									
ANR	332638	Decl							const ut64	const ut64	FD_BIT
ANR	332639	DeclStmt									
ANR	332640	Decl							const ut64	const ut64	T_BIT
ANR	332641	DeclStmt									
ANR	332642	Decl							const ut64	const ut64	B_BIT
ANR	332643	DeclStmt									
ANR	332644	Decl							const ut64	const ut64	H_BIT
ANR	332645	DeclStmt									
ANR	332646	Decl							const ut64	const ut64	D_BIT
ANR	332647	DeclStmt									
ANR	332648	Decl							const ut64	const ut64	W_BIT
ANR	332649	DeclStmt									
ANR	332650	Decl							const ut64	const ut64	EIGHT_BIT
ANR	332651	DeclStmt									
ANR	332652	Decl							const ut64	const ut64	SIXTEEN_BIT
ANR	332653	DeclStmt									
ANR	332654	Decl							const ut64	const ut64	BB_BIT
ANR	332655	DeclStmt									
ANR	332656	Decl							const ut64	const ut64	BT_BIT
ANR	332657	DeclStmt									
ANR	332658	Decl							const ut64	const ut64	TB_BIT
ANR	332659	DeclStmt									
ANR	332660	Decl							const ut64	const ut64	TT_BIT
ANR	332661	DeclStmt									
ANR	332662	Decl							const ut64	const ut64	R_BIT
ANR	332663	DeclStmt									
ANR	332664	Decl							const ut64	const ut64	IA_BIT
ANR	332665	DeclStmt									
ANR	332666	Decl							const ut64	const ut64	DB_BIT
ANR	332667	DeclStmt									
ANR	332668	Decl							const ut64	const ut64	SH_BIT
ANR	332669	DeclStmt									
ANR	332670	Decl							const ut64	const ut64	WB_BIT
ANR	332671	DeclStmt									
ANR	332672	Decl							const ut64	const ut64	WT_BIT
ANR	332673	DeclStmt									
ANR	332674	Decl							const ut64	const ut64	C_MATCH_BIT
ANR	332675	Function	parse_hints	187:0:4688:4950							
ANR	332676	FunctionDef	parse_hints (char * input)		332675	0					
ANR	332677	CompoundStatement		187:38:4726:4950	332675	0					
ANR	332678	IfStatement	"if ( ! strcmpnull ( input , ""unst"" ) )"		332675	0					
ANR	332679	Condition	"! strcmpnull ( input , ""unst"" )"	188:5:4733:4759	332675	0	True				
ANR	332680	UnaryOperationExpression	"! strcmpnull ( input , ""unst"" )"		332675	0					
ANR	332681	UnaryOperator	!		332675	0					
ANR	332682	CallExpression	"strcmpnull ( input , ""unst"" )"		332675	1					
ANR	332683	Callee	strcmpnull		332675	0					
ANR	332684	Identifier	strcmpnull		332675	0					
ANR	332685	ArgumentList	input		332675	1					
ANR	332686	Argument	input		332675	0					
ANR	332687	Identifier	input		332675	0					
ANR	332688	Argument	"""unst"""		332675	1					
ANR	332689	PrimaryExpression	"""unst"""		332675	0					
ANR	332690	CompoundStatement		2:34:35:35	332675	1					
ANR	332691	ReturnStatement	"return ""6"" ;"	189:2:4766:4776	332675	0	True				
ANR	332692	PrimaryExpression	"""6"""		332675	0					
ANR	332693	IfStatement	"if ( ! strcmpnull ( input , ""un"" ) )"		332675	1					
ANR	332694	Condition	"! strcmpnull ( input , ""un"" )"	191:5:4786:4810	332675	0	True				
ANR	332695	UnaryOperationExpression	"! strcmpnull ( input , ""un"" )"		332675	0					
ANR	332696	UnaryOperator	!		332675	0					
ANR	332697	CallExpression	"strcmpnull ( input , ""un"" )"		332675	1					
ANR	332698	Callee	strcmpnull		332675	0					
ANR	332699	Identifier	strcmpnull		332675	0					
ANR	332700	ArgumentList	input		332675	1					
ANR	332701	Argument	input		332675	0					
ANR	332702	Identifier	input		332675	0					
ANR	332703	Argument	"""un"""		332675	1					
ANR	332704	PrimaryExpression	"""un"""		332675	0					
ANR	332705	CompoundStatement		5:32:86:86	332675	1					
ANR	332706	ReturnStatement	"return ""7"" ;"	192:2:4817:4827	332675	0	True				
ANR	332707	PrimaryExpression	"""7"""		332675	0					
ANR	332708	IfStatement	"if ( ! strcmpnull ( input , ""st"" ) )"		332675	2					
ANR	332709	Condition	"! strcmpnull ( input , ""st"" )"	194:5:4837:4861	332675	0	True				
ANR	332710	UnaryOperationExpression	"! strcmpnull ( input , ""st"" )"		332675	0					
ANR	332711	UnaryOperator	!		332675	0					
ANR	332712	CallExpression	"strcmpnull ( input , ""st"" )"		332675	1					
ANR	332713	Callee	strcmpnull		332675	0					
ANR	332714	Identifier	strcmpnull		332675	0					
ANR	332715	ArgumentList	input		332675	1					
ANR	332716	Argument	input		332675	0					
ANR	332717	Identifier	input		332675	0					
ANR	332718	Argument	"""st"""		332675	1					
ANR	332719	PrimaryExpression	"""st"""		332675	0					
ANR	332720	CompoundStatement		8:32:137:137	332675	1					
ANR	332721	ReturnStatement	"return ""14"" ;"	195:2:4868:4879	332675	0	True				
ANR	332722	PrimaryExpression	"""14"""		332675	0					
ANR	332723	IfStatement	"if ( ! strcmpnull ( input , ""sy"" ) )"		332675	3					
ANR	332724	Condition	"! strcmpnull ( input , ""sy"" )"	197:5:4889:4913	332675	0	True				
ANR	332725	UnaryOperationExpression	"! strcmpnull ( input , ""sy"" )"		332675	0					
ANR	332726	UnaryOperator	!		332675	0					
ANR	332727	CallExpression	"strcmpnull ( input , ""sy"" )"		332675	1					
ANR	332728	Callee	strcmpnull		332675	0					
ANR	332729	Identifier	strcmpnull		332675	0					
ANR	332730	ArgumentList	input		332675	1					
ANR	332731	Argument	input		332675	0					
ANR	332732	Identifier	input		332675	0					
ANR	332733	Argument	"""sy"""		332675	1					
ANR	332734	PrimaryExpression	"""sy"""		332675	0					
ANR	332735	CompoundStatement		11:32:189:189	332675	1					
ANR	332736	ReturnStatement	"return ""15"" ;"	198:2:4920:4931	332675	0	True				
ANR	332737	PrimaryExpression	"""15"""		332675	0					
ANR	332738	ReturnStatement	"return ""-1"" ;"	200:1:4937:4948	332675	4	True				
ANR	332739	PrimaryExpression	"""-1"""		332675	0					
ANR	332740	ReturnType	static char *		332675	1					
ANR	332741	Identifier	parse_hints		332675	2					
ANR	332742	ParameterList	char * input		332675	3					
ANR	332743	Parameter	char * input	187:25:4713:4723	332675	0	True				
ANR	332744	ParameterType	char *		332675	0					
ANR	332745	Identifier	input		332675	1					
ANR	332746	CFGEntryNode	ENTRY		332675		True				
ANR	332747	CFGExitNode	EXIT		332675		True				
ANR	332748	Symbol	input		332675						
ANR	332749	Symbol	strcmpnull		332675						
ANR	332750	Function	iflag	203:0:4953:5254							
ANR	332751	FunctionDef	iflag (char * input)		332750	0					
ANR	332752	CompoundStatement		203:30:4983:5254	332750	0					
ANR	332753	IdentifierDeclStatement	st8 res = 0 ;	204:1:4986:4997	332750	0	True				
ANR	332754	IdentifierDecl	res = 0		332750	0					
ANR	332755	IdentifierDeclType	st8		332750	0					
ANR	332756	Identifier	res		332750	1					
ANR	332757	AssignmentExpression	res = 0		332750	2		=			
ANR	332758	Identifier	res		332750	0					
ANR	332759	PrimaryExpression	0		332750	1					
ANR	332760	IdentifierDeclStatement	ut8 i ;	205:1:5000:5005	332750	1	True				
ANR	332761	IdentifierDecl	i		332750	0					
ANR	332762	IdentifierDeclType	ut8		332750	0					
ANR	332763	Identifier	i		332750	1					
ANR	332764	ExpressionStatement	"r_str_case ( input , false )"	206:1:5008:5033	332750	2	True				
ANR	332765	CallExpression	"r_str_case ( input , false )"		332750	0					
ANR	332766	Callee	r_str_case		332750	0					
ANR	332767	Identifier	r_str_case		332750	0					
ANR	332768	ArgumentList	input		332750	1					
ANR	332769	Argument	input		332750	0					
ANR	332770	Identifier	input		332750	0					
ANR	332771	Argument	false		332750	1					
ANR	332772	Identifier	false		332750	0					
ANR	332773	ForStatement	for ( i = 0 ; i < strlen ( input ) ; i ++ )		332750	3					
ANR	332774	ForInit	i = 0 ;	208:6:5043:5048	332750	0	True				
ANR	332775	AssignmentExpression	i = 0		332750	0		=			
ANR	332776	Identifier	i		332750	0					
ANR	332777	PrimaryExpression	0		332750	1					
ANR	332778	Condition	i < strlen ( input )	208:13:5050:5066	332750	1	True				
ANR	332779	RelationalExpression	i < strlen ( input )		332750	0		<			
ANR	332780	Identifier	i		332750	0					
ANR	332781	CallExpression	strlen ( input )		332750	1					
ANR	332782	Callee	strlen		332750	0					
ANR	332783	Identifier	strlen		332750	0					
ANR	332784	ArgumentList	input		332750	1					
ANR	332785	Argument	input		332750	0					
ANR	332786	Identifier	input		332750	0					
ANR	332787	PostIncDecOperationExpression	i ++	208:32:5069:5071	332750	2	True				
ANR	332788	Identifier	i		332750	0					
ANR	332789	IncDec	++		332750	1					
ANR	332790	CompoundStatement		6:37:90:90	332750	3					
ANR	332791	SwitchStatement	switch ( input [ i ] )		332750	0					
ANR	332792	Condition	input [ i ]	209:10:5086:5093	332750	0	True				
ANR	332793	ArrayIndexing	input [ i ]		332750	0					
ANR	332794	Identifier	input		332750	0					
ANR	332795	Identifier	i		332750	1					
ANR	332796	CompoundStatement		7:20:112:112	332750	1					
ANR	332797	Label	case 'a' :	210:2:5100:5108	332750	0	True				
ANR	332798	ExpressionStatement	res |= 0x4	211:3:5113:5123	332750	1	True				
ANR	332799	AssignmentExpression	res |= 0x4		332750	0		|=			
ANR	332800	Identifier	res		332750	0					
ANR	332801	PrimaryExpression	0x4		332750	1					
ANR	332802	BreakStatement	break ;	212:3:5128:5133	332750	2	True				
ANR	332803	Label	case 'i' :	213:2:5137:5145	332750	3	True				
ANR	332804	ExpressionStatement	res |= 0x2	214:3:5150:5160	332750	4	True				
ANR	332805	AssignmentExpression	res |= 0x2		332750	0		|=			
ANR	332806	Identifier	res		332750	0					
ANR	332807	PrimaryExpression	0x2		332750	1					
ANR	332808	BreakStatement	break ;	215:3:5165:5170	332750	5	True				
ANR	332809	Label	case 'f' :	216:2:5174:5182	332750	6	True				
ANR	332810	ExpressionStatement	res |= 0x1	217:3:5187:5197	332750	7	True				
ANR	332811	AssignmentExpression	res |= 0x1		332750	0		|=			
ANR	332812	Identifier	res		332750	0					
ANR	332813	PrimaryExpression	0x1		332750	1					
ANR	332814	BreakStatement	break ;	218:3:5202:5207	332750	8	True				
ANR	332815	Label	default :	219:2:5211:5218	332750	9	True				
ANR	332816	Identifier	default		332750	0					
ANR	332817	ReturnStatement	return - 1 ;	220:3:5223:5232	332750	10	True				
ANR	332818	UnaryOperationExpression	- 1		332750	0					
ANR	332819	UnaryOperator	-		332750	0					
ANR	332820	PrimaryExpression	1		332750	1					
ANR	332821	ReturnStatement	return res ;	223:1:5242:5252	332750	4	True				
ANR	332822	Identifier	res		332750	0					
ANR	332823	ReturnType	static st8		332750	1					
ANR	332824	Identifier	iflag		332750	2					
ANR	332825	ParameterList	char * input		332750	3					
ANR	332826	Parameter	char * input	203:17:4970:4980	332750	0	True				
ANR	332827	ParameterType	char *		332750	0					
ANR	332828	Identifier	input		332750	1					
ANR	332829	CFGEntryNode	ENTRY		332750		True				
ANR	332830	CFGExitNode	EXIT		332750		True				
ANR	332831	Symbol	input		332750						
ANR	332832	Symbol	res		332750						
ANR	332833	Symbol	strlen		332750						
ANR	332834	Symbol	* i		332750						
ANR	332835	Symbol	false		332750						
ANR	332836	Symbol	* input		332750						
ANR	332837	Symbol	i		332750						
ANR	332838	Function	cqcheck	226:0:5257:5893							
ANR	332839	FunctionDef	cqcheck (char * * input)		332838	0					
ANR	332840	CompoundStatement		226:34:5291:5893	332838	0					
ANR	332841	IdentifierDeclStatement	ut64 res = 0 ;	227:1:5294:5306	332838	0	True				
ANR	332842	IdentifierDecl	res = 0		332838	0					
ANR	332843	IdentifierDeclType	ut64		332838	0					
ANR	332844	Identifier	res		332838	1					
ANR	332845	AssignmentExpression	res = 0		332838	2		=			
ANR	332846	Identifier	res		332838	0					
ANR	332847	PrimaryExpression	0		332838	1					
ANR	332848	IdentifierDeclStatement	int i ;	228:1:5309:5314	332838	1	True				
ANR	332849	IdentifierDecl	i		332838	0					
ANR	332850	IdentifierDeclType	int		332838	0					
ANR	332851	Identifier	i		332838	1					
ANR	332852	IdentifierDeclStatement	ut8 offset = 0 ;	229:1:5317:5331	332838	2	True				
ANR	332853	IdentifierDecl	offset = 0		332838	0					
ANR	332854	IdentifierDeclType	ut8		332838	0					
ANR	332855	Identifier	offset		332838	1					
ANR	332856	AssignmentExpression	offset = 0		332838	2		=			
ANR	332857	Identifier	offset		332838	0					
ANR	332858	PrimaryExpression	0		332838	1					
ANR	332859	IdentifierDeclStatement	"const char * conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 } ;"	231:1:5336:5464	332838	3	True				
ANR	332860	IdentifierDecl	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		332838	0					
ANR	332861	IdentifierDeclType	const char * [ ]		332838	0					
ANR	332862	Identifier	conds		332838	1					
ANR	332863	AssignmentExpression	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		332838	2		=			
ANR	332864	Identifier	conds		332838	0					
ANR	332865	InitializerList	"""eq"""		332838	1					
ANR	332866	PrimaryExpression	"""eq"""		332838	0					
ANR	332867	PrimaryExpression	"""ne"""		332838	1					
ANR	332868	PrimaryExpression	"""cs"""		332838	2					
ANR	332869	PrimaryExpression	"""cc"""		332838	3					
ANR	332870	PrimaryExpression	"""mi"""		332838	4					
ANR	332871	PrimaryExpression	"""pl"""		332838	5					
ANR	332872	PrimaryExpression	"""vs"""		332838	6					
ANR	332873	PrimaryExpression	"""vc"""		332838	7					
ANR	332874	PrimaryExpression	"""hi"""		332838	8					
ANR	332875	PrimaryExpression	"""ls"""		332838	9					
ANR	332876	PrimaryExpression	"""ge"""		332838	10					
ANR	332877	PrimaryExpression	"""lt"""		332838	11					
ANR	332878	PrimaryExpression	"""gt"""		332838	12					
ANR	332879	PrimaryExpression	"""le"""		332838	13					
ANR	332880	PrimaryExpression	"""al"""		332838	14					
ANR	332881	PrimaryExpression	"""nv"""		332838	15					
ANR	332882	PrimaryExpression	0		332838	16					
ANR	332883	ForStatement	for ( i = 0 ; conds [ i ] ; i ++ )		332838	4					
ANR	332884	ForInit	i = 0 ;	235:6:5472:5477	332838	0	True				
ANR	332885	AssignmentExpression	i = 0		332838	0		=			
ANR	332886	Identifier	i		332838	0					
ANR	332887	PrimaryExpression	0		332838	1					
ANR	332888	Condition	conds [ i ]	235:13:5479:5486	332838	1	True				
ANR	332889	ArrayIndexing	conds [ i ]		332838	0					
ANR	332890	Identifier	conds		332838	0					
ANR	332891	Identifier	i		332838	1					
ANR	332892	PostIncDecOperationExpression	i ++	235:23:5489:5491	332838	2	True				
ANR	332893	Identifier	i		332838	0					
ANR	332894	IncDec	++		332838	1					
ANR	332895	CompoundStatement		10:28:202:202	332838	3					
ANR	332896	IfStatement	"if ( r_str_startswith ( * input , conds [ i ] ) )"		332838	0					
ANR	332897	Condition	"r_str_startswith ( * input , conds [ i ] )"	236:6:5502:5536	332838	0	True				
ANR	332898	CallExpression	"r_str_startswith ( * input , conds [ i ] )"		332838	0					
ANR	332899	Callee	r_str_startswith		332838	0					
ANR	332900	Identifier	r_str_startswith		332838	0					
ANR	332901	ArgumentList	* input		332838	1					
ANR	332902	Argument	* input		332838	0					
ANR	332903	UnaryOperationExpression	* input		332838	0					
ANR	332904	UnaryOperator	*		332838	0					
ANR	332905	Identifier	input		332838	1					
ANR	332906	Argument	conds [ i ]		332838	1					
ANR	332907	ArrayIndexing	conds [ i ]		332838	0					
ANR	332908	Identifier	conds		332838	0					
ANR	332909	Identifier	i		332838	1					
ANR	332910	CompoundStatement		11:43:247:247	332838	1					
ANR	332911	ExpressionStatement	res |= C_MATCH_BIT	237:3:5544:5562	332838	0	True				
ANR	332912	AssignmentExpression	res |= C_MATCH_BIT		332838	0		|=			
ANR	332913	Identifier	res		332838	0					
ANR	332914	Identifier	C_MATCH_BIT		332838	1					
ANR	332915	ExpressionStatement	res |= i << 2	238:3:5567:5580	332838	1	True				
ANR	332916	AssignmentExpression	res |= i << 2		332838	0		|=			
ANR	332917	Identifier	res		332838	0					
ANR	332918	ShiftExpression	i << 2		332838	1		<<			
ANR	332919	Identifier	i		332838	0					
ANR	332920	PrimaryExpression	2		332838	1					
ANR	332921	ExpressionStatement	* input += 2	239:3:5585:5596	332838	2	True				
ANR	332922	AssignmentExpression	* input += 2		332838	0		+=			
ANR	332923	UnaryOperationExpression	* input		332838	0					
ANR	332924	UnaryOperator	*		332838	0					
ANR	332925	Identifier	input		332838	1					
ANR	332926	PrimaryExpression	2		332838	1					
ANR	332927	ExpressionStatement	offset += 2	240:3:5601:5612	332838	3	True				
ANR	332928	AssignmentExpression	offset += 2		332838	0		+=			
ANR	332929	Identifier	offset		332838	0					
ANR	332930	PrimaryExpression	2		332838	1					
ANR	332931	BreakStatement	break ;	241:3:5617:5622	332838	4	True				
ANR	332932	IfStatement	"if ( r_str_startswith ( * input , "".n"" ) )"		332838	5					
ANR	332933	Condition	"r_str_startswith ( * input , "".n"" )"	244:5:5636:5666	332838	0	True				
ANR	332934	CallExpression	"r_str_startswith ( * input , "".n"" )"		332838	0					
ANR	332935	Callee	r_str_startswith		332838	0					
ANR	332936	Identifier	r_str_startswith		332838	0					
ANR	332937	ArgumentList	* input		332838	1					
ANR	332938	Argument	* input		332838	0					
ANR	332939	UnaryOperationExpression	* input		332838	0					
ANR	332940	UnaryOperator	*		332838	0					
ANR	332941	Identifier	input		332838	1					
ANR	332942	Argument	""".n"""		332838	1					
ANR	332943	PrimaryExpression	""".n"""		332838	0					
ANR	332944	CompoundStatement		19:38:377:377	332838	1					
ANR	332945	ExpressionStatement	res |= DOTN_BIT	245:2:5673:5688	332838	0	True				
ANR	332946	AssignmentExpression	res |= DOTN_BIT		332838	0		|=			
ANR	332947	Identifier	res		332838	0					
ANR	332948	Identifier	DOTN_BIT		332838	1					
ANR	332949	ExpressionStatement	* input += 2	246:2:5692:5703	332838	1	True				
ANR	332950	AssignmentExpression	* input += 2		332838	0		+=			
ANR	332951	UnaryOperationExpression	* input		332838	0					
ANR	332952	UnaryOperator	*		332838	0					
ANR	332953	Identifier	input		332838	1					
ANR	332954	PrimaryExpression	2		332838	1					
ANR	332955	ExpressionStatement	offset += 2	247:2:5707:5718	332838	2	True				
ANR	332956	AssignmentExpression	offset += 2		332838	0		+=			
ANR	332957	Identifier	offset		332838	0					
ANR	332958	PrimaryExpression	2		332838	1					
ANR	332959	ElseStatement	else		332838	0					
ANR	332960	IfStatement	"if ( r_str_startswith ( * input , "".w"" ) )"		332838	0					
ANR	332961	Condition	"r_str_startswith ( * input , "".w"" )"	249:5:5733:5763	332838	0	True				
ANR	332962	CallExpression	"r_str_startswith ( * input , "".w"" )"		332838	0					
ANR	332963	Callee	r_str_startswith		332838	0					
ANR	332964	Identifier	r_str_startswith		332838	0					
ANR	332965	ArgumentList	* input		332838	1					
ANR	332966	Argument	* input		332838	0					
ANR	332967	UnaryOperationExpression	* input		332838	0					
ANR	332968	UnaryOperator	*		332838	0					
ANR	332969	Identifier	input		332838	1					
ANR	332970	Argument	""".w"""		332838	1					
ANR	332971	PrimaryExpression	""".w"""		332838	0					
ANR	332972	CompoundStatement		24:38:474:474	332838	1					
ANR	332973	ExpressionStatement	res |= DOTW_BIT	250:2:5770:5785	332838	0	True				
ANR	332974	AssignmentExpression	res |= DOTW_BIT		332838	0		|=			
ANR	332975	Identifier	res		332838	0					
ANR	332976	Identifier	DOTW_BIT		332838	1					
ANR	332977	ExpressionStatement	* input += 2	251:2:5789:5800	332838	1	True				
ANR	332978	AssignmentExpression	* input += 2		332838	0		+=			
ANR	332979	UnaryOperationExpression	* input		332838	0					
ANR	332980	UnaryOperator	*		332838	0					
ANR	332981	Identifier	input		332838	1					
ANR	332982	PrimaryExpression	2		332838	1					
ANR	332983	ExpressionStatement	offset += 2	252:2:5804:5815	332838	2	True				
ANR	332984	AssignmentExpression	offset += 2		332838	0		+=			
ANR	332985	Identifier	offset		332838	0					
ANR	332986	PrimaryExpression	2		332838	1					
ANR	332987	IfStatement	if ( * * input == '\\0' )		332838	6					
ANR	332988	Condition	* * input == '\\0'	255:5:5827:5841	332838	0	True				
ANR	332989	EqualityExpression	* * input == '\\0'		332838	0		==			
ANR	332990	UnaryOperationExpression	* * input		332838	0					
ANR	332991	UnaryOperator	*		332838	0					
ANR	332992	UnaryOperationExpression	* input		332838	1					
ANR	332993	UnaryOperator	*		332838	0					
ANR	332994	Identifier	input		332838	1					
ANR	332995	PrimaryExpression	'\\0'		332838	1					
ANR	332996	CompoundStatement		30:22:552:552	332838	1					
ANR	332997	ReturnStatement	return res ;	256:2:5848:5858	332838	0	True				
ANR	332998	Identifier	res		332838	0					
ANR	332999	ExpressionStatement	* input -= offset	258:1:5864:5880	332838	7	True				
ANR	333000	AssignmentExpression	* input -= offset		332838	0		-=			
ANR	333001	UnaryOperationExpression	* input		332838	0					
ANR	333002	UnaryOperator	*		332838	0					
ANR	333003	Identifier	input		332838	1					
ANR	333004	Identifier	offset		332838	1					
ANR	333005	ReturnStatement	return 0 ;	259:1:5883:5891	332838	8	True				
ANR	333006	PrimaryExpression	0		332838	0					
ANR	333007	ReturnType	static ut64		332838	1					
ANR	333008	Identifier	cqcheck		332838	2					
ANR	333009	ParameterList	char * * input		332838	3					
ANR	333010	Parameter	char * * input	226:20:5277:5288	332838	0	True				
ANR	333011	ParameterType	char * *		332838	0					
ANR	333012	Identifier	input		332838	1					
ANR	333013	CFGEntryNode	ENTRY		332838		True				
ANR	333014	CFGExitNode	EXIT		332838		True				
ANR	333015	Symbol	r_str_startswith		332838						
ANR	333016	Symbol	res		332838						
ANR	333017	Symbol	offset		332838						
ANR	333018	Symbol	* * input		332838						
ANR	333019	Symbol	* input		332838						
ANR	333020	Symbol	i		332838						
ANR	333021	Symbol	input		332838						
ANR	333022	Symbol	* i		332838						
ANR	333023	Symbol	* conds		332838						
ANR	333024	Symbol	DOTW_BIT		332838						
ANR	333025	Symbol	conds		332838						
ANR	333026	Symbol	C_MATCH_BIT		332838						
ANR	333027	Symbol	DOTN_BIT		332838						
ANR	333028	Function	opmask	262:0:5896:9230							
ANR	333029	FunctionDef	"opmask (char * input , char * opcode , ut64 allowed_mask)"		333028	0					
ANR	333030	CompoundStatement		262:65:5961:9230	333028	0					
ANR	333031	IdentifierDeclStatement	ut64 res = 0 ;	263:1:5964:5976	333028	0	True				
ANR	333032	IdentifierDecl	res = 0		333028	0					
ANR	333033	IdentifierDeclType	ut64		333028	0					
ANR	333034	Identifier	res		333028	1					
ANR	333035	AssignmentExpression	res = 0		333028	2		=			
ANR	333036	Identifier	res		333028	0					
ANR	333037	PrimaryExpression	0		333028	1					
ANR	333038	ExpressionStatement	"r_str_case ( input , false )"	265:1:5981:6006	333028	1	True				
ANR	333039	CallExpression	"r_str_case ( input , false )"		333028	0					
ANR	333040	Callee	r_str_case		333028	0					
ANR	333041	Identifier	r_str_case		333028	0					
ANR	333042	ArgumentList	input		333028	1					
ANR	333043	Argument	input		333028	0					
ANR	333044	Identifier	input		333028	0					
ANR	333045	Argument	false		333028	1					
ANR	333046	Identifier	false		333028	0					
ANR	333047	IfStatement	if ( strlen ( opcode ) > strlen ( input ) )		333028	2					
ANR	333048	Condition	strlen ( opcode ) > strlen ( input )	266:5:6013:6044	333028	0	True				
ANR	333049	RelationalExpression	strlen ( opcode ) > strlen ( input )		333028	0		>			
ANR	333050	CallExpression	strlen ( opcode )		333028	0					
ANR	333051	Callee	strlen		333028	0					
ANR	333052	Identifier	strlen		333028	0					
ANR	333053	ArgumentList	opcode		333028	1					
ANR	333054	Argument	opcode		333028	0					
ANR	333055	Identifier	opcode		333028	0					
ANR	333056	CallExpression	strlen ( input )		333028	1					
ANR	333057	Callee	strlen		333028	0					
ANR	333058	Identifier	strlen		333028	0					
ANR	333059	ArgumentList	input		333028	1					
ANR	333060	Argument	input		333028	0					
ANR	333061	Identifier	input		333028	0					
ANR	333062	CompoundStatement		5:39:85:85	333028	1					
ANR	333063	ReturnStatement	return 0 ;	267:2:6051:6059	333028	0	True				
ANR	333064	PrimaryExpression	0		333028	0					
ANR	333065	IfStatement	"if ( r_str_startswith ( input , opcode ) )"		333028	3					
ANR	333066	Condition	"r_str_startswith ( input , opcode )"	269:5:6069:6100	333028	0	True				
ANR	333067	CallExpression	"r_str_startswith ( input , opcode )"		333028	0					
ANR	333068	Callee	r_str_startswith		333028	0					
ANR	333069	Identifier	r_str_startswith		333028	0					
ANR	333070	ArgumentList	input		333028	1					
ANR	333071	Argument	input		333028	0					
ANR	333072	Identifier	input		333028	0					
ANR	333073	Argument	opcode		333028	1					
ANR	333074	Identifier	opcode		333028	0					
ANR	333075	CompoundStatement		8:39:141:141	333028	1					
ANR	333076	ExpressionStatement	input += strlen ( opcode )	270:2:6107:6131	333028	0	True				
ANR	333077	AssignmentExpression	input += strlen ( opcode )		333028	0		+=			
ANR	333078	Identifier	input		333028	0					
ANR	333079	CallExpression	strlen ( opcode )		333028	1					
ANR	333080	Callee	strlen		333028	0					
ANR	333081	Identifier	strlen		333028	0					
ANR	333082	ArgumentList	opcode		333028	1					
ANR	333083	Argument	opcode		333028	0					
ANR	333084	Identifier	opcode		333028	0					
ANR	333085	ExpressionStatement	res |= M_BIT	271:2:6135:6147	333028	1	True				
ANR	333086	AssignmentExpression	res |= M_BIT		333028	0		|=			
ANR	333087	Identifier	res		333028	0					
ANR	333088	Identifier	M_BIT		333028	1					
ANR	333089	ExpressionStatement	res |= cqcheck ( & input )	272:2:6151:6174	333028	2	True				
ANR	333090	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333091	Identifier	res		333028	0					
ANR	333092	CallExpression	cqcheck ( & input )		333028	1					
ANR	333093	Callee	cqcheck		333028	0					
ANR	333094	Identifier	cqcheck		333028	0					
ANR	333095	ArgumentList	& input		333028	1					
ANR	333096	Argument	& input		333028	0					
ANR	333097	UnaryOperationExpression	& input		333028	0					
ANR	333098	UnaryOperator	&		333028	0					
ANR	333099	Identifier	input		333028	1					
ANR	333100	IfStatement	if ( ( * input == 's' ) && ( S_BIT & allowed_mask ) )		333028	3					
ANR	333101	Condition	( * input == 's' ) && ( S_BIT & allowed_mask )	274:6:6185:6225	333028	0	True				
ANR	333102	AndExpression	( * input == 's' ) && ( S_BIT & allowed_mask )		333028	0		&&			
ANR	333103	EqualityExpression	* input == 's'		333028	0		==			
ANR	333104	UnaryOperationExpression	* input		333028	0					
ANR	333105	UnaryOperator	*		333028	0					
ANR	333106	Identifier	input		333028	1					
ANR	333107	PrimaryExpression	's'		333028	1					
ANR	333108	BitAndExpression	S_BIT & allowed_mask		333028	1		&			
ANR	333109	Identifier	S_BIT		333028	0					
ANR	333110	Identifier	allowed_mask		333028	1					
ANR	333111	CompoundStatement		13:49:266:266	333028	1					
ANR	333112	ExpressionStatement	res |= S_BIT	275:3:6233:6245	333028	0	True				
ANR	333113	AssignmentExpression	res |= S_BIT		333028	0		|=			
ANR	333114	Identifier	res		333028	0					
ANR	333115	Identifier	S_BIT		333028	1					
ANR	333116	ExpressionStatement	input ++	276:3:6250:6257	333028	1	True				
ANR	333117	PostIncDecOperationExpression	input ++		333028	0					
ANR	333118	Identifier	input		333028	0					
ANR	333119	IncDec	++		333028	1					
ANR	333120	ExpressionStatement	res |= cqcheck ( & input )	278:2:6265:6288	333028	4	True				
ANR	333121	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333122	Identifier	res		333028	0					
ANR	333123	CallExpression	cqcheck ( & input )		333028	1					
ANR	333124	Callee	cqcheck		333028	0					
ANR	333125	Identifier	cqcheck		333028	0					
ANR	333126	ArgumentList	& input		333028	1					
ANR	333127	Argument	& input		333028	0					
ANR	333128	UnaryOperationExpression	& input		333028	0					
ANR	333129	UnaryOperator	&		333028	0					
ANR	333130	Identifier	input		333028	1					
ANR	333131	IfStatement	"if ( ( r_str_startswith ( input , ""wb"" ) ) && ( WB_BIT & allowed_mask ) )"		333028	5					
ANR	333132	Condition	"( r_str_startswith ( input , ""wb"" ) ) && ( WB_BIT & allowed_mask )"	280:6:6297:6355	333028	0	True				
ANR	333133	AndExpression	"( r_str_startswith ( input , ""wb"" ) ) && ( WB_BIT & allowed_mask )"		333028	0		&&			
ANR	333134	CallExpression	"r_str_startswith ( input , ""wb"" )"		333028	0					
ANR	333135	Callee	r_str_startswith		333028	0					
ANR	333136	Identifier	r_str_startswith		333028	0					
ANR	333137	ArgumentList	input		333028	1					
ANR	333138	Argument	input		333028	0					
ANR	333139	Identifier	input		333028	0					
ANR	333140	Argument	"""wb"""		333028	1					
ANR	333141	PrimaryExpression	"""wb"""		333028	0					
ANR	333142	BitAndExpression	WB_BIT & allowed_mask		333028	1		&			
ANR	333143	Identifier	WB_BIT		333028	0					
ANR	333144	Identifier	allowed_mask		333028	1					
ANR	333145	CompoundStatement		19:67:396:396	333028	1					
ANR	333146	ExpressionStatement	res |= WB_BIT	281:3:6363:6376	333028	0	True				
ANR	333147	AssignmentExpression	res |= WB_BIT		333028	0		|=			
ANR	333148	Identifier	res		333028	0					
ANR	333149	Identifier	WB_BIT		333028	1					
ANR	333150	ExpressionStatement	input += 2	282:3:6381:6391	333028	1	True				
ANR	333151	AssignmentExpression	input += 2		333028	0		+=			
ANR	333152	Identifier	input		333028	0					
ANR	333153	PrimaryExpression	2		333028	1					
ANR	333154	IfStatement	"if ( ( r_str_startswith ( input , ""wt"" ) ) && ( WT_BIT & allowed_mask ) )"		333028	6					
ANR	333155	Condition	"( r_str_startswith ( input , ""wt"" ) ) && ( WT_BIT & allowed_mask )"	284:6:6403:6461	333028	0	True				
ANR	333156	AndExpression	"( r_str_startswith ( input , ""wt"" ) ) && ( WT_BIT & allowed_mask )"		333028	0		&&			
ANR	333157	CallExpression	"r_str_startswith ( input , ""wt"" )"		333028	0					
ANR	333158	Callee	r_str_startswith		333028	0					
ANR	333159	Identifier	r_str_startswith		333028	0					
ANR	333160	ArgumentList	input		333028	1					
ANR	333161	Argument	input		333028	0					
ANR	333162	Identifier	input		333028	0					
ANR	333163	Argument	"""wt"""		333028	1					
ANR	333164	PrimaryExpression	"""wt"""		333028	0					
ANR	333165	BitAndExpression	WT_BIT & allowed_mask		333028	1		&			
ANR	333166	Identifier	WT_BIT		333028	0					
ANR	333167	Identifier	allowed_mask		333028	1					
ANR	333168	CompoundStatement		23:67:502:502	333028	1					
ANR	333169	ExpressionStatement	res |= WT_BIT	285:3:6469:6482	333028	0	True				
ANR	333170	AssignmentExpression	res |= WT_BIT		333028	0		|=			
ANR	333171	Identifier	res		333028	0					
ANR	333172	Identifier	WT_BIT		333028	1					
ANR	333173	ExpressionStatement	input += 2	286:3:6487:6497	333028	1	True				
ANR	333174	AssignmentExpression	input += 2		333028	0		+=			
ANR	333175	Identifier	input		333028	0					
ANR	333176	PrimaryExpression	2		333028	1					
ANR	333177	ExpressionStatement	res |= cqcheck ( & input )	288:2:6505:6528	333028	7	True				
ANR	333178	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333179	Identifier	res		333028	0					
ANR	333180	CallExpression	cqcheck ( & input )		333028	1					
ANR	333181	Callee	cqcheck		333028	0					
ANR	333182	Identifier	cqcheck		333028	0					
ANR	333183	ArgumentList	& input		333028	1					
ANR	333184	Argument	& input		333028	0					
ANR	333185	UnaryOperationExpression	& input		333028	0					
ANR	333186	UnaryOperator	&		333028	0					
ANR	333187	Identifier	input		333028	1					
ANR	333188	IfStatement	"if ( ( r_str_startswith ( input , ""db"" ) ) && ( DB_BIT & allowed_mask ) )"		333028	8					
ANR	333189	Condition	"( r_str_startswith ( input , ""db"" ) ) && ( DB_BIT & allowed_mask )"	289:6:6536:6594	333028	0	True				
ANR	333190	AndExpression	"( r_str_startswith ( input , ""db"" ) ) && ( DB_BIT & allowed_mask )"		333028	0		&&			
ANR	333191	CallExpression	"r_str_startswith ( input , ""db"" )"		333028	0					
ANR	333192	Callee	r_str_startswith		333028	0					
ANR	333193	Identifier	r_str_startswith		333028	0					
ANR	333194	ArgumentList	input		333028	1					
ANR	333195	Argument	input		333028	0					
ANR	333196	Identifier	input		333028	0					
ANR	333197	Argument	"""db"""		333028	1					
ANR	333198	PrimaryExpression	"""db"""		333028	0					
ANR	333199	BitAndExpression	DB_BIT & allowed_mask		333028	1		&			
ANR	333200	Identifier	DB_BIT		333028	0					
ANR	333201	Identifier	allowed_mask		333028	1					
ANR	333202	CompoundStatement		28:67:635:635	333028	1					
ANR	333203	ExpressionStatement	res |= DB_BIT	290:3:6602:6615	333028	0	True				
ANR	333204	AssignmentExpression	res |= DB_BIT		333028	0		|=			
ANR	333205	Identifier	res		333028	0					
ANR	333206	Identifier	DB_BIT		333028	1					
ANR	333207	ExpressionStatement	input += 2	291:3:6620:6630	333028	1	True				
ANR	333208	AssignmentExpression	input += 2		333028	0		+=			
ANR	333209	Identifier	input		333028	0					
ANR	333210	PrimaryExpression	2		333028	1					
ANR	333211	IfStatement	"if ( ( r_str_startswith ( input , ""ea"" ) ) && ( EA_BIT & allowed_mask ) )"		333028	9					
ANR	333212	Condition	"( r_str_startswith ( input , ""ea"" ) ) && ( EA_BIT & allowed_mask )"	293:6:6642:6700	333028	0	True				
ANR	333213	AndExpression	"( r_str_startswith ( input , ""ea"" ) ) && ( EA_BIT & allowed_mask )"		333028	0		&&			
ANR	333214	CallExpression	"r_str_startswith ( input , ""ea"" )"		333028	0					
ANR	333215	Callee	r_str_startswith		333028	0					
ANR	333216	Identifier	r_str_startswith		333028	0					
ANR	333217	ArgumentList	input		333028	1					
ANR	333218	Argument	input		333028	0					
ANR	333219	Identifier	input		333028	0					
ANR	333220	Argument	"""ea"""		333028	1					
ANR	333221	PrimaryExpression	"""ea"""		333028	0					
ANR	333222	BitAndExpression	EA_BIT & allowed_mask		333028	1		&			
ANR	333223	Identifier	EA_BIT		333028	0					
ANR	333224	Identifier	allowed_mask		333028	1					
ANR	333225	CompoundStatement		32:67:741:741	333028	1					
ANR	333226	ExpressionStatement	res |= EA_BIT	294:3:6708:6721	333028	0	True				
ANR	333227	AssignmentExpression	res |= EA_BIT		333028	0		|=			
ANR	333228	Identifier	res		333028	0					
ANR	333229	Identifier	EA_BIT		333028	1					
ANR	333230	ExpressionStatement	input += 2	295:3:6726:6736	333028	1	True				
ANR	333231	AssignmentExpression	input += 2		333028	0		+=			
ANR	333232	Identifier	input		333028	0					
ANR	333233	PrimaryExpression	2		333028	1					
ANR	333234	IfStatement	"if ( ( r_str_startswith ( input , ""ia"" ) ) && ( IA_BIT & allowed_mask ) )"		333028	10					
ANR	333235	Condition	"( r_str_startswith ( input , ""ia"" ) ) && ( IA_BIT & allowed_mask )"	297:6:6748:6806	333028	0	True				
ANR	333236	AndExpression	"( r_str_startswith ( input , ""ia"" ) ) && ( IA_BIT & allowed_mask )"		333028	0		&&			
ANR	333237	CallExpression	"r_str_startswith ( input , ""ia"" )"		333028	0					
ANR	333238	Callee	r_str_startswith		333028	0					
ANR	333239	Identifier	r_str_startswith		333028	0					
ANR	333240	ArgumentList	input		333028	1					
ANR	333241	Argument	input		333028	0					
ANR	333242	Identifier	input		333028	0					
ANR	333243	Argument	"""ia"""		333028	1					
ANR	333244	PrimaryExpression	"""ia"""		333028	0					
ANR	333245	BitAndExpression	IA_BIT & allowed_mask		333028	1		&			
ANR	333246	Identifier	IA_BIT		333028	0					
ANR	333247	Identifier	allowed_mask		333028	1					
ANR	333248	CompoundStatement		36:67:847:847	333028	1					
ANR	333249	ExpressionStatement	res |= IA_BIT	298:3:6814:6827	333028	0	True				
ANR	333250	AssignmentExpression	res |= IA_BIT		333028	0		|=			
ANR	333251	Identifier	res		333028	0					
ANR	333252	Identifier	IA_BIT		333028	1					
ANR	333253	ExpressionStatement	input += 2	299:3:6832:6842	333028	1	True				
ANR	333254	AssignmentExpression	input += 2		333028	0		+=			
ANR	333255	Identifier	input		333028	0					
ANR	333256	PrimaryExpression	2		333028	1					
ANR	333257	IfStatement	"if ( ( r_str_startswith ( input , ""fd"" ) ) && ( FD_BIT & allowed_mask ) )"		333028	11					
ANR	333258	Condition	"( r_str_startswith ( input , ""fd"" ) ) && ( FD_BIT & allowed_mask )"	301:6:6854:6912	333028	0	True				
ANR	333259	AndExpression	"( r_str_startswith ( input , ""fd"" ) ) && ( FD_BIT & allowed_mask )"		333028	0		&&			
ANR	333260	CallExpression	"r_str_startswith ( input , ""fd"" )"		333028	0					
ANR	333261	Callee	r_str_startswith		333028	0					
ANR	333262	Identifier	r_str_startswith		333028	0					
ANR	333263	ArgumentList	input		333028	1					
ANR	333264	Argument	input		333028	0					
ANR	333265	Identifier	input		333028	0					
ANR	333266	Argument	"""fd"""		333028	1					
ANR	333267	PrimaryExpression	"""fd"""		333028	0					
ANR	333268	BitAndExpression	FD_BIT & allowed_mask		333028	1		&			
ANR	333269	Identifier	FD_BIT		333028	0					
ANR	333270	Identifier	allowed_mask		333028	1					
ANR	333271	CompoundStatement		40:67:953:953	333028	1					
ANR	333272	ExpressionStatement	res |= FD_BIT	302:3:6920:6933	333028	0	True				
ANR	333273	AssignmentExpression	res |= FD_BIT		333028	0		|=			
ANR	333274	Identifier	res		333028	0					
ANR	333275	Identifier	FD_BIT		333028	1					
ANR	333276	ExpressionStatement	input += 2	303:3:6938:6948	333028	1	True				
ANR	333277	AssignmentExpression	input += 2		333028	0		+=			
ANR	333278	Identifier	input		333028	0					
ANR	333279	PrimaryExpression	2		333028	1					
ANR	333280	ExpressionStatement	res |= cqcheck ( & input )	305:2:6956:6979	333028	12	True				
ANR	333281	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333282	Identifier	res		333028	0					
ANR	333283	CallExpression	cqcheck ( & input )		333028	1					
ANR	333284	Callee	cqcheck		333028	0					
ANR	333285	Identifier	cqcheck		333028	0					
ANR	333286	ArgumentList	& input		333028	1					
ANR	333287	Argument	& input		333028	0					
ANR	333288	UnaryOperationExpression	& input		333028	0					
ANR	333289	UnaryOperator	&		333028	0					
ANR	333290	Identifier	input		333028	1					
ANR	333291	IfStatement	if ( ( * input == 'l' ) && ( L_BIT & allowed_mask ) )		333028	13					
ANR	333292	Condition	( * input == 'l' ) && ( L_BIT & allowed_mask )	306:6:6987:7027	333028	0	True				
ANR	333293	AndExpression	( * input == 'l' ) && ( L_BIT & allowed_mask )		333028	0		&&			
ANR	333294	EqualityExpression	* input == 'l'		333028	0		==			
ANR	333295	UnaryOperationExpression	* input		333028	0					
ANR	333296	UnaryOperator	*		333028	0					
ANR	333297	Identifier	input		333028	1					
ANR	333298	PrimaryExpression	'l'		333028	1					
ANR	333299	BitAndExpression	L_BIT & allowed_mask		333028	1		&			
ANR	333300	Identifier	L_BIT		333028	0					
ANR	333301	Identifier	allowed_mask		333028	1					
ANR	333302	CompoundStatement		45:49:1068:1068	333028	1					
ANR	333303	ExpressionStatement	res |= L_BIT	307:3:7035:7047	333028	0	True				
ANR	333304	AssignmentExpression	res |= L_BIT		333028	0		|=			
ANR	333305	Identifier	res		333028	0					
ANR	333306	Identifier	L_BIT		333028	1					
ANR	333307	ExpressionStatement	input ++	308:3:7052:7059	333028	1	True				
ANR	333308	PostIncDecOperationExpression	input ++		333028	0					
ANR	333309	Identifier	input		333028	0					
ANR	333310	IncDec	++		333028	1					
ANR	333311	ExpressionStatement	res |= cqcheck ( & input )	310:2:7067:7090	333028	14	True				
ANR	333312	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333313	Identifier	res		333028	0					
ANR	333314	CallExpression	cqcheck ( & input )		333028	1					
ANR	333315	Callee	cqcheck		333028	0					
ANR	333316	Identifier	cqcheck		333028	0					
ANR	333317	ArgumentList	& input		333028	1					
ANR	333318	Argument	& input		333028	0					
ANR	333319	UnaryOperationExpression	& input		333028	0					
ANR	333320	UnaryOperator	&		333028	0					
ANR	333321	Identifier	input		333028	1					
ANR	333322	IfStatement	"if ( ( r_str_startswith ( input , ""bb"" ) ) && ( BB_BIT & allowed_mask ) )"		333028	15					
ANR	333323	Condition	"( r_str_startswith ( input , ""bb"" ) ) && ( BB_BIT & allowed_mask )"	311:6:7098:7156	333028	0	True				
ANR	333324	AndExpression	"( r_str_startswith ( input , ""bb"" ) ) && ( BB_BIT & allowed_mask )"		333028	0		&&			
ANR	333325	CallExpression	"r_str_startswith ( input , ""bb"" )"		333028	0					
ANR	333326	Callee	r_str_startswith		333028	0					
ANR	333327	Identifier	r_str_startswith		333028	0					
ANR	333328	ArgumentList	input		333028	1					
ANR	333329	Argument	input		333028	0					
ANR	333330	Identifier	input		333028	0					
ANR	333331	Argument	"""bb"""		333028	1					
ANR	333332	PrimaryExpression	"""bb"""		333028	0					
ANR	333333	BitAndExpression	BB_BIT & allowed_mask		333028	1		&			
ANR	333334	Identifier	BB_BIT		333028	0					
ANR	333335	Identifier	allowed_mask		333028	1					
ANR	333336	CompoundStatement		50:67:1197:1197	333028	1					
ANR	333337	ExpressionStatement	res |= BB_BIT	312:3:7164:7177	333028	0	True				
ANR	333338	AssignmentExpression	res |= BB_BIT		333028	0		|=			
ANR	333339	Identifier	res		333028	0					
ANR	333340	Identifier	BB_BIT		333028	1					
ANR	333341	ExpressionStatement	input += 2	313:3:7182:7192	333028	1	True				
ANR	333342	AssignmentExpression	input += 2		333028	0		+=			
ANR	333343	Identifier	input		333028	0					
ANR	333344	PrimaryExpression	2		333028	1					
ANR	333345	IfStatement	"if ( ( r_str_startswith ( input , ""tt"" ) ) && ( TT_BIT & allowed_mask ) )"		333028	16					
ANR	333346	Condition	"( r_str_startswith ( input , ""tt"" ) ) && ( TT_BIT & allowed_mask )"	315:6:7204:7262	333028	0	True				
ANR	333347	AndExpression	"( r_str_startswith ( input , ""tt"" ) ) && ( TT_BIT & allowed_mask )"		333028	0		&&			
ANR	333348	CallExpression	"r_str_startswith ( input , ""tt"" )"		333028	0					
ANR	333349	Callee	r_str_startswith		333028	0					
ANR	333350	Identifier	r_str_startswith		333028	0					
ANR	333351	ArgumentList	input		333028	1					
ANR	333352	Argument	input		333028	0					
ANR	333353	Identifier	input		333028	0					
ANR	333354	Argument	"""tt"""		333028	1					
ANR	333355	PrimaryExpression	"""tt"""		333028	0					
ANR	333356	BitAndExpression	TT_BIT & allowed_mask		333028	1		&			
ANR	333357	Identifier	TT_BIT		333028	0					
ANR	333358	Identifier	allowed_mask		333028	1					
ANR	333359	CompoundStatement		54:67:1303:1303	333028	1					
ANR	333360	ExpressionStatement	res |= TT_BIT	316:3:7270:7283	333028	0	True				
ANR	333361	AssignmentExpression	res |= TT_BIT		333028	0		|=			
ANR	333362	Identifier	res		333028	0					
ANR	333363	Identifier	TT_BIT		333028	1					
ANR	333364	ExpressionStatement	input += 2	317:3:7288:7298	333028	1	True				
ANR	333365	AssignmentExpression	input += 2		333028	0		+=			
ANR	333366	Identifier	input		333028	0					
ANR	333367	PrimaryExpression	2		333028	1					
ANR	333368	IfStatement	"if ( ( r_str_startswith ( input , ""bt"" ) ) && ( BT_BIT & allowed_mask ) )"		333028	17					
ANR	333369	Condition	"( r_str_startswith ( input , ""bt"" ) ) && ( BT_BIT & allowed_mask )"	319:6:7310:7368	333028	0	True				
ANR	333370	AndExpression	"( r_str_startswith ( input , ""bt"" ) ) && ( BT_BIT & allowed_mask )"		333028	0		&&			
ANR	333371	CallExpression	"r_str_startswith ( input , ""bt"" )"		333028	0					
ANR	333372	Callee	r_str_startswith		333028	0					
ANR	333373	Identifier	r_str_startswith		333028	0					
ANR	333374	ArgumentList	input		333028	1					
ANR	333375	Argument	input		333028	0					
ANR	333376	Identifier	input		333028	0					
ANR	333377	Argument	"""bt"""		333028	1					
ANR	333378	PrimaryExpression	"""bt"""		333028	0					
ANR	333379	BitAndExpression	BT_BIT & allowed_mask		333028	1		&			
ANR	333380	Identifier	BT_BIT		333028	0					
ANR	333381	Identifier	allowed_mask		333028	1					
ANR	333382	CompoundStatement		58:67:1409:1409	333028	1					
ANR	333383	ExpressionStatement	res |= BT_BIT	320:3:7376:7389	333028	0	True				
ANR	333384	AssignmentExpression	res |= BT_BIT		333028	0		|=			
ANR	333385	Identifier	res		333028	0					
ANR	333386	Identifier	BT_BIT		333028	1					
ANR	333387	ExpressionStatement	input += 2	321:3:7394:7404	333028	1	True				
ANR	333388	AssignmentExpression	input += 2		333028	0		+=			
ANR	333389	Identifier	input		333028	0					
ANR	333390	PrimaryExpression	2		333028	1					
ANR	333391	IfStatement	"if ( ( r_str_startswith ( input , ""tb"" ) ) && ( TB_BIT & allowed_mask ) )"		333028	18					
ANR	333392	Condition	"( r_str_startswith ( input , ""tb"" ) ) && ( TB_BIT & allowed_mask )"	323:6:7416:7474	333028	0	True				
ANR	333393	AndExpression	"( r_str_startswith ( input , ""tb"" ) ) && ( TB_BIT & allowed_mask )"		333028	0		&&			
ANR	333394	CallExpression	"r_str_startswith ( input , ""tb"" )"		333028	0					
ANR	333395	Callee	r_str_startswith		333028	0					
ANR	333396	Identifier	r_str_startswith		333028	0					
ANR	333397	ArgumentList	input		333028	1					
ANR	333398	Argument	input		333028	0					
ANR	333399	Identifier	input		333028	0					
ANR	333400	Argument	"""tb"""		333028	1					
ANR	333401	PrimaryExpression	"""tb"""		333028	0					
ANR	333402	BitAndExpression	TB_BIT & allowed_mask		333028	1		&			
ANR	333403	Identifier	TB_BIT		333028	0					
ANR	333404	Identifier	allowed_mask		333028	1					
ANR	333405	CompoundStatement		62:67:1515:1515	333028	1					
ANR	333406	ExpressionStatement	res |= TB_BIT	324:3:7482:7495	333028	0	True				
ANR	333407	AssignmentExpression	res |= TB_BIT		333028	0		|=			
ANR	333408	Identifier	res		333028	0					
ANR	333409	Identifier	TB_BIT		333028	1					
ANR	333410	ExpressionStatement	input += 2	325:3:7500:7510	333028	1	True				
ANR	333411	AssignmentExpression	input += 2		333028	0		+=			
ANR	333412	Identifier	input		333028	0					
ANR	333413	PrimaryExpression	2		333028	1					
ANR	333414	ExpressionStatement	res |= cqcheck ( & input )	327:2:7518:7541	333028	19	True				
ANR	333415	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333416	Identifier	res		333028	0					
ANR	333417	CallExpression	cqcheck ( & input )		333028	1					
ANR	333418	Callee	cqcheck		333028	0					
ANR	333419	Identifier	cqcheck		333028	0					
ANR	333420	ArgumentList	& input		333028	1					
ANR	333421	Argument	& input		333028	0					
ANR	333422	UnaryOperationExpression	& input		333028	0					
ANR	333423	UnaryOperator	&		333028	0					
ANR	333424	Identifier	input		333028	1					
ANR	333425	IfStatement	if ( ( * input == 'w' ) && ( W_BIT & allowed_mask ) )		333028	20					
ANR	333426	Condition	( * input == 'w' ) && ( W_BIT & allowed_mask )	328:6:7549:7589	333028	0	True				
ANR	333427	AndExpression	( * input == 'w' ) && ( W_BIT & allowed_mask )		333028	0		&&			
ANR	333428	EqualityExpression	* input == 'w'		333028	0		==			
ANR	333429	UnaryOperationExpression	* input		333028	0					
ANR	333430	UnaryOperator	*		333028	0					
ANR	333431	Identifier	input		333028	1					
ANR	333432	PrimaryExpression	'w'		333028	1					
ANR	333433	BitAndExpression	W_BIT & allowed_mask		333028	1		&			
ANR	333434	Identifier	W_BIT		333028	0					
ANR	333435	Identifier	allowed_mask		333028	1					
ANR	333436	CompoundStatement		67:49:1630:1630	333028	1					
ANR	333437	ExpressionStatement	res |= W_BIT	329:3:7597:7609	333028	0	True				
ANR	333438	AssignmentExpression	res |= W_BIT		333028	0		|=			
ANR	333439	Identifier	res		333028	0					
ANR	333440	Identifier	W_BIT		333028	1					
ANR	333441	ExpressionStatement	input ++	330:3:7614:7621	333028	1	True				
ANR	333442	PostIncDecOperationExpression	input ++		333028	0					
ANR	333443	Identifier	input		333028	0					
ANR	333444	IncDec	++		333028	1					
ANR	333445	IfStatement	if ( ( * input == 'b' ) && ( B_BIT & allowed_mask ) )		333028	21					
ANR	333446	Condition	( * input == 'b' ) && ( B_BIT & allowed_mask )	332:6:7633:7673	333028	0	True				
ANR	333447	AndExpression	( * input == 'b' ) && ( B_BIT & allowed_mask )		333028	0		&&			
ANR	333448	EqualityExpression	* input == 'b'		333028	0		==			
ANR	333449	UnaryOperationExpression	* input		333028	0					
ANR	333450	UnaryOperator	*		333028	0					
ANR	333451	Identifier	input		333028	1					
ANR	333452	PrimaryExpression	'b'		333028	1					
ANR	333453	BitAndExpression	B_BIT & allowed_mask		333028	1		&			
ANR	333454	Identifier	B_BIT		333028	0					
ANR	333455	Identifier	allowed_mask		333028	1					
ANR	333456	CompoundStatement		71:49:1714:1714	333028	1					
ANR	333457	ExpressionStatement	res |= B_BIT	333:3:7681:7693	333028	0	True				
ANR	333458	AssignmentExpression	res |= B_BIT		333028	0		|=			
ANR	333459	Identifier	res		333028	0					
ANR	333460	Identifier	B_BIT		333028	1					
ANR	333461	ExpressionStatement	input ++	334:3:7698:7705	333028	1	True				
ANR	333462	PostIncDecOperationExpression	input ++		333028	0					
ANR	333463	Identifier	input		333028	0					
ANR	333464	IncDec	++		333028	1					
ANR	333465	ElseStatement	else		333028	0					
ANR	333466	IfStatement	if ( ( * input == 'h' ) && ( H_BIT & allowed_mask ) )		333028	0					
ANR	333467	Condition	( * input == 'h' ) && ( H_BIT & allowed_mask )	336:13:7729:7769	333028	0	True				
ANR	333468	AndExpression	( * input == 'h' ) && ( H_BIT & allowed_mask )		333028	0		&&			
ANR	333469	EqualityExpression	* input == 'h'		333028	0		==			
ANR	333470	UnaryOperationExpression	* input		333028	0					
ANR	333471	UnaryOperator	*		333028	0					
ANR	333472	Identifier	input		333028	1					
ANR	333473	PrimaryExpression	'h'		333028	1					
ANR	333474	BitAndExpression	H_BIT & allowed_mask		333028	1		&			
ANR	333475	Identifier	H_BIT		333028	0					
ANR	333476	Identifier	allowed_mask		333028	1					
ANR	333477	CompoundStatement		75:56:1810:1810	333028	1					
ANR	333478	ExpressionStatement	res |= H_BIT	337:3:7777:7789	333028	0	True				
ANR	333479	AssignmentExpression	res |= H_BIT		333028	0		|=			
ANR	333480	Identifier	res		333028	0					
ANR	333481	Identifier	H_BIT		333028	1					
ANR	333482	ExpressionStatement	input ++	338:3:7794:7801	333028	1	True				
ANR	333483	PostIncDecOperationExpression	input ++		333028	0					
ANR	333484	Identifier	input		333028	0					
ANR	333485	IncDec	++		333028	1					
ANR	333486	ElseStatement	else		333028	0					
ANR	333487	IfStatement	if ( ( * input == 'd' ) && ( D_BIT & allowed_mask ) )		333028	0					
ANR	333488	Condition	( * input == 'd' ) && ( D_BIT & allowed_mask )	340:6:7818:7858	333028	0	True				
ANR	333489	AndExpression	( * input == 'd' ) && ( D_BIT & allowed_mask )		333028	0		&&			
ANR	333490	EqualityExpression	* input == 'd'		333028	0		==			
ANR	333491	UnaryOperationExpression	* input		333028	0					
ANR	333492	UnaryOperator	*		333028	0					
ANR	333493	Identifier	input		333028	1					
ANR	333494	PrimaryExpression	'd'		333028	1					
ANR	333495	BitAndExpression	D_BIT & allowed_mask		333028	1		&			
ANR	333496	Identifier	D_BIT		333028	0					
ANR	333497	Identifier	allowed_mask		333028	1					
ANR	333498	CompoundStatement		79:49:1899:1899	333028	1					
ANR	333499	ExpressionStatement	res |= D_BIT	341:3:7866:7878	333028	0	True				
ANR	333500	AssignmentExpression	res |= D_BIT		333028	0		|=			
ANR	333501	Identifier	res		333028	0					
ANR	333502	Identifier	D_BIT		333028	1					
ANR	333503	ExpressionStatement	input ++	342:3:7883:7890	333028	1	True				
ANR	333504	PostIncDecOperationExpression	input ++		333028	0					
ANR	333505	Identifier	input		333028	0					
ANR	333506	IncDec	++		333028	1					
ANR	333507	IfStatement	if ( ( * input == 't' ) && ( T_BIT & allowed_mask ) )		333028	22					
ANR	333508	Condition	( * input == 't' ) && ( T_BIT & allowed_mask )	344:6:7902:7942	333028	0	True				
ANR	333509	AndExpression	( * input == 't' ) && ( T_BIT & allowed_mask )		333028	0		&&			
ANR	333510	EqualityExpression	* input == 't'		333028	0		==			
ANR	333511	UnaryOperationExpression	* input		333028	0					
ANR	333512	UnaryOperator	*		333028	0					
ANR	333513	Identifier	input		333028	1					
ANR	333514	PrimaryExpression	't'		333028	1					
ANR	333515	BitAndExpression	T_BIT & allowed_mask		333028	1		&			
ANR	333516	Identifier	T_BIT		333028	0					
ANR	333517	Identifier	allowed_mask		333028	1					
ANR	333518	CompoundStatement		83:49:1983:1983	333028	1					
ANR	333519	ExpressionStatement	res |= T_BIT	345:3:7950:7962	333028	0	True				
ANR	333520	AssignmentExpression	res |= T_BIT		333028	0		|=			
ANR	333521	Identifier	res		333028	0					
ANR	333522	Identifier	T_BIT		333028	1					
ANR	333523	ExpressionStatement	input ++	346:3:7967:7974	333028	1	True				
ANR	333524	PostIncDecOperationExpression	input ++		333028	0					
ANR	333525	Identifier	input		333028	0					
ANR	333526	IncDec	++		333028	1					
ANR	333527	IfStatement	if ( ( * input == 's' ) && ( S_BIT & allowed_mask ) )		333028	23					
ANR	333528	Condition	( * input == 's' ) && ( S_BIT & allowed_mask )	348:6:7986:8026	333028	0	True				
ANR	333529	AndExpression	( * input == 's' ) && ( S_BIT & allowed_mask )		333028	0		&&			
ANR	333530	EqualityExpression	* input == 's'		333028	0		==			
ANR	333531	UnaryOperationExpression	* input		333028	0					
ANR	333532	UnaryOperator	*		333028	0					
ANR	333533	Identifier	input		333028	1					
ANR	333534	PrimaryExpression	's'		333028	1					
ANR	333535	BitAndExpression	S_BIT & allowed_mask		333028	1		&			
ANR	333536	Identifier	S_BIT		333028	0					
ANR	333537	Identifier	allowed_mask		333028	1					
ANR	333538	CompoundStatement		87:49:2067:2067	333028	1					
ANR	333539	ExpressionStatement	res |= S_BIT	349:3:8034:8046	333028	0	True				
ANR	333540	AssignmentExpression	res |= S_BIT		333028	0		|=			
ANR	333541	Identifier	res		333028	0					
ANR	333542	Identifier	S_BIT		333028	1					
ANR	333543	ExpressionStatement	input ++	350:3:8051:8058	333028	1	True				
ANR	333544	PostIncDecOperationExpression	input ++		333028	0					
ANR	333545	Identifier	input		333028	0					
ANR	333546	IncDec	++		333028	1					
ANR	333547	ExpressionStatement	res |= cqcheck ( & input )	352:2:8066:8089	333028	24	True				
ANR	333548	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333549	Identifier	res		333028	0					
ANR	333550	CallExpression	cqcheck ( & input )		333028	1					
ANR	333551	Callee	cqcheck		333028	0					
ANR	333552	Identifier	cqcheck		333028	0					
ANR	333553	ArgumentList	& input		333028	1					
ANR	333554	Argument	& input		333028	0					
ANR	333555	UnaryOperationExpression	& input		333028	0					
ANR	333556	UnaryOperator	&		333028	0					
ANR	333557	Identifier	input		333028	1					
ANR	333558	IfStatement	if ( ( * input == 'r' ) && ( R_BIT & allowed_mask ) )		333028	25					
ANR	333559	Condition	( * input == 'r' ) && ( R_BIT & allowed_mask )	353:6:8097:8137	333028	0	True				
ANR	333560	AndExpression	( * input == 'r' ) && ( R_BIT & allowed_mask )		333028	0		&&			
ANR	333561	EqualityExpression	* input == 'r'		333028	0		==			
ANR	333562	UnaryOperationExpression	* input		333028	0					
ANR	333563	UnaryOperator	*		333028	0					
ANR	333564	Identifier	input		333028	1					
ANR	333565	PrimaryExpression	'r'		333028	1					
ANR	333566	BitAndExpression	R_BIT & allowed_mask		333028	1		&			
ANR	333567	Identifier	R_BIT		333028	0					
ANR	333568	Identifier	allowed_mask		333028	1					
ANR	333569	CompoundStatement		92:49:2178:2178	333028	1					
ANR	333570	ExpressionStatement	res |= R_BIT	354:3:8145:8157	333028	0	True				
ANR	333571	AssignmentExpression	res |= R_BIT		333028	0		|=			
ANR	333572	Identifier	res		333028	0					
ANR	333573	Identifier	R_BIT		333028	1					
ANR	333574	ExpressionStatement	input ++	355:3:8162:8169	333028	1	True				
ANR	333575	PostIncDecOperationExpression	input ++		333028	0					
ANR	333576	Identifier	input		333028	0					
ANR	333577	IncDec	++		333028	1					
ANR	333578	ExpressionStatement	res |= cqcheck ( & input )	357:2:8177:8200	333028	26	True				
ANR	333579	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333580	Identifier	res		333028	0					
ANR	333581	CallExpression	cqcheck ( & input )		333028	1					
ANR	333582	Callee	cqcheck		333028	0					
ANR	333583	Identifier	cqcheck		333028	0					
ANR	333584	ArgumentList	& input		333028	1					
ANR	333585	Argument	& input		333028	0					
ANR	333586	UnaryOperationExpression	& input		333028	0					
ANR	333587	UnaryOperator	&		333028	0					
ANR	333588	Identifier	input		333028	1					
ANR	333589	IfStatement	if ( ( * input == '2' ) && ( TWO_BIT & allowed_mask ) )		333028	27					
ANR	333590	Condition	( * input == '2' ) && ( TWO_BIT & allowed_mask )	358:6:8208:8250	333028	0	True				
ANR	333591	AndExpression	( * input == '2' ) && ( TWO_BIT & allowed_mask )		333028	0		&&			
ANR	333592	EqualityExpression	* input == '2'		333028	0		==			
ANR	333593	UnaryOperationExpression	* input		333028	0					
ANR	333594	UnaryOperator	*		333028	0					
ANR	333595	Identifier	input		333028	1					
ANR	333596	PrimaryExpression	'2'		333028	1					
ANR	333597	BitAndExpression	TWO_BIT & allowed_mask		333028	1		&			
ANR	333598	Identifier	TWO_BIT		333028	0					
ANR	333599	Identifier	allowed_mask		333028	1					
ANR	333600	CompoundStatement		97:51:2291:2291	333028	1					
ANR	333601	ExpressionStatement	res |= TWO_BIT	359:3:8258:8272	333028	0	True				
ANR	333602	AssignmentExpression	res |= TWO_BIT		333028	0		|=			
ANR	333603	Identifier	res		333028	0					
ANR	333604	Identifier	TWO_BIT		333028	1					
ANR	333605	ExpressionStatement	input ++	360:3:8277:8284	333028	1	True				
ANR	333606	PostIncDecOperationExpression	input ++		333028	0					
ANR	333607	Identifier	input		333028	0					
ANR	333608	IncDec	++		333028	1					
ANR	333609	IfStatement	if ( ( * input == '8' ) && ( EIGHT_BIT & allowed_mask ) )		333028	28					
ANR	333610	Condition	( * input == '8' ) && ( EIGHT_BIT & allowed_mask )	362:6:8296:8340	333028	0	True				
ANR	333611	AndExpression	( * input == '8' ) && ( EIGHT_BIT & allowed_mask )		333028	0		&&			
ANR	333612	EqualityExpression	* input == '8'		333028	0		==			
ANR	333613	UnaryOperationExpression	* input		333028	0					
ANR	333614	UnaryOperator	*		333028	0					
ANR	333615	Identifier	input		333028	1					
ANR	333616	PrimaryExpression	'8'		333028	1					
ANR	333617	BitAndExpression	EIGHT_BIT & allowed_mask		333028	1		&			
ANR	333618	Identifier	EIGHT_BIT		333028	0					
ANR	333619	Identifier	allowed_mask		333028	1					
ANR	333620	CompoundStatement		101:53:2381:2381	333028	1					
ANR	333621	ExpressionStatement	res |= EIGHT_BIT	363:3:8348:8364	333028	0	True				
ANR	333622	AssignmentExpression	res |= EIGHT_BIT		333028	0		|=			
ANR	333623	Identifier	res		333028	0					
ANR	333624	Identifier	EIGHT_BIT		333028	1					
ANR	333625	ExpressionStatement	input ++	364:3:8369:8376	333028	1	True				
ANR	333626	PostIncDecOperationExpression	input ++		333028	0					
ANR	333627	Identifier	input		333028	0					
ANR	333628	IncDec	++		333028	1					
ANR	333629	IfStatement	"if ( ( r_str_startswith ( input , ""16"" ) ) && ( SIXTEEN_BIT & allowed_mask ) )"		333028	29					
ANR	333630	Condition	"( r_str_startswith ( input , ""16"" ) ) && ( SIXTEEN_BIT & allowed_mask )"	366:6:8388:8451	333028	0	True				
ANR	333631	AndExpression	"( r_str_startswith ( input , ""16"" ) ) && ( SIXTEEN_BIT & allowed_mask )"		333028	0		&&			
ANR	333632	CallExpression	"r_str_startswith ( input , ""16"" )"		333028	0					
ANR	333633	Callee	r_str_startswith		333028	0					
ANR	333634	Identifier	r_str_startswith		333028	0					
ANR	333635	ArgumentList	input		333028	1					
ANR	333636	Argument	input		333028	0					
ANR	333637	Identifier	input		333028	0					
ANR	333638	Argument	"""16"""		333028	1					
ANR	333639	PrimaryExpression	"""16"""		333028	0					
ANR	333640	BitAndExpression	SIXTEEN_BIT & allowed_mask		333028	1		&			
ANR	333641	Identifier	SIXTEEN_BIT		333028	0					
ANR	333642	Identifier	allowed_mask		333028	1					
ANR	333643	CompoundStatement		105:72:2492:2492	333028	1					
ANR	333644	ExpressionStatement	res |= SIXTEEN_BIT	367:3:8459:8477	333028	0	True				
ANR	333645	AssignmentExpression	res |= SIXTEEN_BIT		333028	0		|=			
ANR	333646	Identifier	res		333028	0					
ANR	333647	Identifier	SIXTEEN_BIT		333028	1					
ANR	333648	ExpressionStatement	input += 2	368:3:8482:8492	333028	1	True				
ANR	333649	AssignmentExpression	input += 2		333028	0		+=			
ANR	333650	Identifier	input		333028	0					
ANR	333651	PrimaryExpression	2		333028	1					
ANR	333652	ExpressionStatement	res |= cqcheck ( & input )	370:2:8500:8523	333028	30	True				
ANR	333653	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333654	Identifier	res		333028	0					
ANR	333655	CallExpression	cqcheck ( & input )		333028	1					
ANR	333656	Callee	cqcheck		333028	0					
ANR	333657	Identifier	cqcheck		333028	0					
ANR	333658	ArgumentList	& input		333028	1					
ANR	333659	Argument	& input		333028	0					
ANR	333660	UnaryOperationExpression	& input		333028	0					
ANR	333661	UnaryOperator	&		333028	0					
ANR	333662	Identifier	input		333028	1					
ANR	333663	IfStatement	if ( ( * input == 'l' ) && ( L_BIT & allowed_mask ) )		333028	31					
ANR	333664	Condition	( * input == 'l' ) && ( L_BIT & allowed_mask )	371:6:8531:8571	333028	0	True				
ANR	333665	AndExpression	( * input == 'l' ) && ( L_BIT & allowed_mask )		333028	0		&&			
ANR	333666	EqualityExpression	* input == 'l'		333028	0		==			
ANR	333667	UnaryOperationExpression	* input		333028	0					
ANR	333668	UnaryOperator	*		333028	0					
ANR	333669	Identifier	input		333028	1					
ANR	333670	PrimaryExpression	'l'		333028	1					
ANR	333671	BitAndExpression	L_BIT & allowed_mask		333028	1		&			
ANR	333672	Identifier	L_BIT		333028	0					
ANR	333673	Identifier	allowed_mask		333028	1					
ANR	333674	CompoundStatement		110:49:2612:2612	333028	1					
ANR	333675	ExpressionStatement	res |= L_BIT	372:3:8579:8591	333028	0	True				
ANR	333676	AssignmentExpression	res |= L_BIT		333028	0		|=			
ANR	333677	Identifier	res		333028	0					
ANR	333678	Identifier	L_BIT		333028	1					
ANR	333679	ExpressionStatement	input ++	373:3:8596:8603	333028	1	True				
ANR	333680	PostIncDecOperationExpression	input ++		333028	0					
ANR	333681	Identifier	input		333028	0					
ANR	333682	IncDec	++		333028	1					
ANR	333683	IfStatement	if ( ( * input == 'x' ) && ( X_BIT & allowed_mask ) )		333028	32					
ANR	333684	Condition	( * input == 'x' ) && ( X_BIT & allowed_mask )	375:6:8615:8655	333028	0	True				
ANR	333685	AndExpression	( * input == 'x' ) && ( X_BIT & allowed_mask )		333028	0		&&			
ANR	333686	EqualityExpression	* input == 'x'		333028	0		==			
ANR	333687	UnaryOperationExpression	* input		333028	0					
ANR	333688	UnaryOperator	*		333028	0					
ANR	333689	Identifier	input		333028	1					
ANR	333690	PrimaryExpression	'x'		333028	1					
ANR	333691	BitAndExpression	X_BIT & allowed_mask		333028	1		&			
ANR	333692	Identifier	X_BIT		333028	0					
ANR	333693	Identifier	allowed_mask		333028	1					
ANR	333694	CompoundStatement		114:49:2696:2696	333028	1					
ANR	333695	ExpressionStatement	res |= X_BIT	376:3:8663:8675	333028	0	True				
ANR	333696	AssignmentExpression	res |= X_BIT		333028	0		|=			
ANR	333697	Identifier	res		333028	0					
ANR	333698	Identifier	X_BIT		333028	1					
ANR	333699	ExpressionStatement	input ++	377:3:8680:8687	333028	1	True				
ANR	333700	PostIncDecOperationExpression	input ++		333028	0					
ANR	333701	Identifier	input		333028	0					
ANR	333702	IncDec	++		333028	1					
ANR	333703	ExpressionStatement	res |= cqcheck ( & input )	379:2:8695:8718	333028	33	True				
ANR	333704	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333705	Identifier	res		333028	0					
ANR	333706	CallExpression	cqcheck ( & input )		333028	1					
ANR	333707	Callee	cqcheck		333028	0					
ANR	333708	Identifier	cqcheck		333028	0					
ANR	333709	ArgumentList	& input		333028	1					
ANR	333710	Argument	& input		333028	0					
ANR	333711	UnaryOperationExpression	& input		333028	0					
ANR	333712	UnaryOperator	&		333028	0					
ANR	333713	Identifier	input		333028	1					
ANR	333714	IfStatement	"if ( ( r_str_startswith ( input , ""id"" ) ) && ( ID_BIT & allowed_mask ) )"		333028	34					
ANR	333715	Condition	"( r_str_startswith ( input , ""id"" ) ) && ( ID_BIT & allowed_mask )"	380:6:8726:8784	333028	0	True				
ANR	333716	AndExpression	"( r_str_startswith ( input , ""id"" ) ) && ( ID_BIT & allowed_mask )"		333028	0		&&			
ANR	333717	CallExpression	"r_str_startswith ( input , ""id"" )"		333028	0					
ANR	333718	Callee	r_str_startswith		333028	0					
ANR	333719	Identifier	r_str_startswith		333028	0					
ANR	333720	ArgumentList	input		333028	1					
ANR	333721	Argument	input		333028	0					
ANR	333722	Identifier	input		333028	0					
ANR	333723	Argument	"""id"""		333028	1					
ANR	333724	PrimaryExpression	"""id"""		333028	0					
ANR	333725	BitAndExpression	ID_BIT & allowed_mask		333028	1		&			
ANR	333726	Identifier	ID_BIT		333028	0					
ANR	333727	Identifier	allowed_mask		333028	1					
ANR	333728	CompoundStatement		119:67:2825:2825	333028	1					
ANR	333729	ExpressionStatement	res |= ID_BIT	381:3:8792:8805	333028	0	True				
ANR	333730	AssignmentExpression	res |= ID_BIT		333028	0		|=			
ANR	333731	Identifier	res		333028	0					
ANR	333732	Identifier	ID_BIT		333028	1					
ANR	333733	ExpressionStatement	input += 2	382:3:8810:8820	333028	1	True				
ANR	333734	AssignmentExpression	input += 2		333028	0		+=			
ANR	333735	Identifier	input		333028	0					
ANR	333736	PrimaryExpression	2		333028	1					
ANR	333737	IfStatement	"if ( ( r_str_startswith ( input , ""ie"" ) ) && ( IE_BIT & allowed_mask ) )"		333028	35					
ANR	333738	Condition	"( r_str_startswith ( input , ""ie"" ) ) && ( IE_BIT & allowed_mask )"	384:6:8832:8890	333028	0	True				
ANR	333739	AndExpression	"( r_str_startswith ( input , ""ie"" ) ) && ( IE_BIT & allowed_mask )"		333028	0		&&			
ANR	333740	CallExpression	"r_str_startswith ( input , ""ie"" )"		333028	0					
ANR	333741	Callee	r_str_startswith		333028	0					
ANR	333742	Identifier	r_str_startswith		333028	0					
ANR	333743	ArgumentList	input		333028	1					
ANR	333744	Argument	input		333028	0					
ANR	333745	Identifier	input		333028	0					
ANR	333746	Argument	"""ie"""		333028	1					
ANR	333747	PrimaryExpression	"""ie"""		333028	0					
ANR	333748	BitAndExpression	IE_BIT & allowed_mask		333028	1		&			
ANR	333749	Identifier	IE_BIT		333028	0					
ANR	333750	Identifier	allowed_mask		333028	1					
ANR	333751	CompoundStatement		123:67:2931:2931	333028	1					
ANR	333752	ExpressionStatement	res |= IE_BIT	385:3:8898:8911	333028	0	True				
ANR	333753	AssignmentExpression	res |= IE_BIT		333028	0		|=			
ANR	333754	Identifier	res		333028	0					
ANR	333755	Identifier	IE_BIT		333028	1					
ANR	333756	ExpressionStatement	input += 2	386:3:8916:8926	333028	1	True				
ANR	333757	AssignmentExpression	input += 2		333028	0		+=			
ANR	333758	Identifier	input		333028	0					
ANR	333759	PrimaryExpression	2		333028	1					
ANR	333760	ExpressionStatement	res |= cqcheck ( & input )	388:2:8934:8957	333028	36	True				
ANR	333761	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333762	Identifier	res		333028	0					
ANR	333763	CallExpression	cqcheck ( & input )		333028	1					
ANR	333764	Callee	cqcheck		333028	0					
ANR	333765	Identifier	cqcheck		333028	0					
ANR	333766	ArgumentList	& input		333028	1					
ANR	333767	Argument	& input		333028	0					
ANR	333768	UnaryOperationExpression	& input		333028	0					
ANR	333769	UnaryOperator	&		333028	0					
ANR	333770	Identifier	input		333028	1					
ANR	333771	IfStatement	"if ( ( r_str_startswith ( input , ""sh"" ) ) && ( SH_BIT & allowed_mask ) )"		333028	37					
ANR	333772	Condition	"( r_str_startswith ( input , ""sh"" ) ) && ( SH_BIT & allowed_mask )"	389:6:8965:9023	333028	0	True				
ANR	333773	AndExpression	"( r_str_startswith ( input , ""sh"" ) ) && ( SH_BIT & allowed_mask )"		333028	0		&&			
ANR	333774	CallExpression	"r_str_startswith ( input , ""sh"" )"		333028	0					
ANR	333775	Callee	r_str_startswith		333028	0					
ANR	333776	Identifier	r_str_startswith		333028	0					
ANR	333777	ArgumentList	input		333028	1					
ANR	333778	Argument	input		333028	0					
ANR	333779	Identifier	input		333028	0					
ANR	333780	Argument	"""sh"""		333028	1					
ANR	333781	PrimaryExpression	"""sh"""		333028	0					
ANR	333782	BitAndExpression	SH_BIT & allowed_mask		333028	1		&			
ANR	333783	Identifier	SH_BIT		333028	0					
ANR	333784	Identifier	allowed_mask		333028	1					
ANR	333785	CompoundStatement		128:67:3064:3064	333028	1					
ANR	333786	ExpressionStatement	res |= SH_BIT	390:3:9031:9044	333028	0	True				
ANR	333787	AssignmentExpression	res |= SH_BIT		333028	0		|=			
ANR	333788	Identifier	res		333028	0					
ANR	333789	Identifier	SH_BIT		333028	1					
ANR	333790	ExpressionStatement	input += 2	391:3:9049:9059	333028	1	True				
ANR	333791	AssignmentExpression	input += 2		333028	0		+=			
ANR	333792	Identifier	input		333028	0					
ANR	333793	PrimaryExpression	2		333028	1					
ANR	333794	ExpressionStatement	res |= cqcheck ( & input )	393:2:9067:9090	333028	38	True				
ANR	333795	AssignmentExpression	res |= cqcheck ( & input )		333028	0		|=			
ANR	333796	Identifier	res		333028	0					
ANR	333797	CallExpression	cqcheck ( & input )		333028	1					
ANR	333798	Callee	cqcheck		333028	0					
ANR	333799	Identifier	cqcheck		333028	0					
ANR	333800	ArgumentList	& input		333028	1					
ANR	333801	Argument	& input		333028	0					
ANR	333802	UnaryOperationExpression	& input		333028	0					
ANR	333803	UnaryOperator	&		333028	0					
ANR	333804	Identifier	input		333028	1					
ANR	333805	IfStatement	if ( ! ( res & C_MATCH_BIT ) )		333028	39					
ANR	333806	Condition	! ( res & C_MATCH_BIT )	394:6:9098:9117	333028	0	True				
ANR	333807	UnaryOperationExpression	! ( res & C_MATCH_BIT )		333028	0					
ANR	333808	UnaryOperator	!		333028	0					
ANR	333809	BitAndExpression	res & C_MATCH_BIT		333028	1		&			
ANR	333810	Identifier	res		333028	0					
ANR	333811	Identifier	C_MATCH_BIT		333028	1					
ANR	333812	CompoundStatement		133:28:3158:3158	333028	1					
ANR	333813	ExpressionStatement	res |= 15 << 2	395:3:9125:9139	333028	0	True				
ANR	333814	AssignmentExpression	res |= 15 << 2		333028	0		|=			
ANR	333815	Identifier	res		333028	0					
ANR	333816	ShiftExpression	15 << 2		333028	1		<<			
ANR	333817	PrimaryExpression	15		333028	0					
ANR	333818	PrimaryExpression	2		333028	1					
ANR	333819	IfStatement	if ( * input == 0 )		333028	40					
ANR	333820	Condition	* input == 0	397:6:9182:9192	333028	0	True				
ANR	333821	EqualityExpression	* input == 0		333028	0		==			
ANR	333822	UnaryOperationExpression	* input		333028	0					
ANR	333823	UnaryOperator	*		333028	0					
ANR	333824	Identifier	input		333028	1					
ANR	333825	PrimaryExpression	0		333028	1					
ANR	333826	CompoundStatement		136:19:3233:3233	333028	1					
ANR	333827	ReturnStatement	return res ;	398:3:9200:9210	333028	0	True				
ANR	333828	Identifier	res		333028	0					
ANR	333829	ReturnStatement	return 0 ;	401:1:9220:9228	333028	4	True				
ANR	333830	PrimaryExpression	0		333028	0					
ANR	333831	ReturnType	static ut64		333028	1					
ANR	333832	Identifier	opmask		333028	2					
ANR	333833	ParameterList	"char * input , char * opcode , ut64 allowed_mask"		333028	3					
ANR	333834	Parameter	char * input	262:19:5915:5925	333028	0	True				
ANR	333835	ParameterType	char *		333028	0					
ANR	333836	Identifier	input		333028	1					
ANR	333837	Parameter	char * opcode	262:32:5928:5939	333028	1	True				
ANR	333838	ParameterType	char *		333028	0					
ANR	333839	Identifier	opcode		333028	1					
ANR	333840	Parameter	ut64 allowed_mask	262:46:5942:5958	333028	2	True				
ANR	333841	ParameterType	ut64		333028	0					
ANR	333842	Identifier	allowed_mask		333028	1					
ANR	333843	CFGEntryNode	ENTRY		333028		True				
ANR	333844	CFGExitNode	EXIT		333028		True				
ANR	333845	Symbol	BB_BIT		333028						
ANR	333846	Symbol	IE_BIT		333028						
ANR	333847	Symbol	X_BIT		333028						
ANR	333848	Symbol	SH_BIT		333028						
ANR	333849	Symbol	* input		333028						
ANR	333850	Symbol	T_BIT		333028						
ANR	333851	Symbol	SIXTEEN_BIT		333028						
ANR	333852	Symbol	WT_BIT		333028						
ANR	333853	Symbol	opcode		333028						
ANR	333854	Symbol	TT_BIT		333028						
ANR	333855	Symbol	strlen		333028						
ANR	333856	Symbol	M_BIT		333028						
ANR	333857	Symbol	& input		333028						
ANR	333858	Symbol	H_BIT		333028						
ANR	333859	Symbol	IA_BIT		333028						
ANR	333860	Symbol	D_BIT		333028						
ANR	333861	Symbol	cqcheck		333028						
ANR	333862	Symbol	TWO_BIT		333028						
ANR	333863	Symbol	r_str_startswith		333028						
ANR	333864	Symbol	res		333028						
ANR	333865	Symbol	L_BIT		333028						
ANR	333866	Symbol	allowed_mask		333028						
ANR	333867	Symbol	false		333028						
ANR	333868	Symbol	BT_BIT		333028						
ANR	333869	Symbol	R_BIT		333028						
ANR	333870	Symbol	input		333028						
ANR	333871	Symbol	FD_BIT		333028						
ANR	333872	Symbol	W_BIT		333028						
ANR	333873	Symbol	EA_BIT		333028						
ANR	333874	Symbol	ID_BIT		333028						
ANR	333875	Symbol	EIGHT_BIT		333028						
ANR	333876	Symbol	C_MATCH_BIT		333028						
ANR	333877	Symbol	TB_BIT		333028						
ANR	333878	Symbol	WB_BIT		333028						
ANR	333879	Symbol	DB_BIT		333028						
ANR	333880	Symbol	S_BIT		333028						
ANR	333881	Symbol	B_BIT		333028						
ANR	333882	Function	itmask	404:0:9233:9753							
ANR	333883	FunctionDef	itmask (char * input)		333882	0					
ANR	333884	CompoundStatement		404:32:9265:9753	333882	0					
ANR	333885	IdentifierDeclStatement	ut32 res = 0 ;	405:1:9268:9280	333882	0	True				
ANR	333886	IdentifierDecl	res = 0		333882	0					
ANR	333887	IdentifierDeclType	ut32		333882	0					
ANR	333888	Identifier	res		333882	1					
ANR	333889	AssignmentExpression	res = 0		333882	2		=			
ANR	333890	Identifier	res		333882	0					
ANR	333891	PrimaryExpression	0		333882	1					
ANR	333892	IdentifierDeclStatement	"ut32 i , length ;"	406:1:9283:9297	333882	1	True				
ANR	333893	IdentifierDecl	i		333882	0					
ANR	333894	IdentifierDeclType	ut32		333882	0					
ANR	333895	Identifier	i		333882	1					
ANR	333896	IdentifierDecl	length		333882	1					
ANR	333897	IdentifierDeclType	ut32		333882	0					
ANR	333898	Identifier	length		333882	1					
ANR	333899	ExpressionStatement	"r_str_case ( input , false )"	407:1:9300:9325	333882	2	True				
ANR	333900	CallExpression	"r_str_case ( input , false )"		333882	0					
ANR	333901	Callee	r_str_case		333882	0					
ANR	333902	Identifier	r_str_case		333882	0					
ANR	333903	ArgumentList	input		333882	1					
ANR	333904	Argument	input		333882	0					
ANR	333905	Identifier	input		333882	0					
ANR	333906	Argument	false		333882	1					
ANR	333907	Identifier	false		333882	0					
ANR	333908	IfStatement	if ( 2 > strlen ( input ) )		333882	3					
ANR	333909	Condition	2 > strlen ( input )	408:5:9332:9349	333882	0	True				
ANR	333910	RelationalExpression	2 > strlen ( input )		333882	0		>			
ANR	333911	PrimaryExpression	2		333882	0					
ANR	333912	CallExpression	strlen ( input )		333882	1					
ANR	333913	Callee	strlen		333882	0					
ANR	333914	Identifier	strlen		333882	0					
ANR	333915	ArgumentList	input		333882	1					
ANR	333916	Argument	input		333882	0					
ANR	333917	Identifier	input		333882	0					
ANR	333918	CompoundStatement		5:25:86:86	333882	1					
ANR	333919	ReturnStatement	return 0 ;	409:2:9356:9364	333882	0	True				
ANR	333920	PrimaryExpression	0		333882	0					
ANR	333921	IfStatement	"if ( r_str_startswith ( input , ""it"" ) )"		333882	4					
ANR	333922	Condition	"r_str_startswith ( input , ""it"" )"	411:5:9374:9403	333882	0	True				
ANR	333923	CallExpression	"r_str_startswith ( input , ""it"" )"		333882	0					
ANR	333924	Callee	r_str_startswith		333882	0					
ANR	333925	Identifier	r_str_startswith		333882	0					
ANR	333926	ArgumentList	input		333882	1					
ANR	333927	Argument	input		333882	0					
ANR	333928	Identifier	input		333882	0					
ANR	333929	Argument	"""it"""		333882	1					
ANR	333930	PrimaryExpression	"""it"""		333882	0					
ANR	333931	CompoundStatement		8:37:140:140	333882	1					
ANR	333932	ExpressionStatement	input += 2	412:2:9410:9420	333882	0	True				
ANR	333933	AssignmentExpression	input += 2		333882	0		+=			
ANR	333934	Identifier	input		333882	0					
ANR	333935	PrimaryExpression	2		333882	1					
ANR	333936	ExpressionStatement	res |= 1	413:2:9424:9432	333882	1	True				
ANR	333937	AssignmentExpression	res |= 1		333882	0		|=			
ANR	333938	Identifier	res		333882	0					
ANR	333939	PrimaryExpression	1		333882	1					
ANR	333940	IfStatement	if ( strlen ( input ) > 3 )		333882	2					
ANR	333941	Condition	strlen ( input ) > 3	414:6:9451:9467	333882	0	True				
ANR	333942	RelationalExpression	strlen ( input ) > 3		333882	0		>			
ANR	333943	CallExpression	strlen ( input )		333882	0					
ANR	333944	Callee	strlen		333882	0					
ANR	333945	Identifier	strlen		333882	0					
ANR	333946	ArgumentList	input		333882	1					
ANR	333947	Argument	input		333882	0					
ANR	333948	Identifier	input		333882	0					
ANR	333949	PrimaryExpression	3		333882	1					
ANR	333950	CompoundStatement		11:25:204:204	333882	1					
ANR	333951	ReturnStatement	return 0 ;	415:3:9475:9483	333882	0	True				
ANR	333952	PrimaryExpression	0		333882	0					
ANR	333953	ExpressionStatement	res |= ( strlen ( input ) & 0x3 ) << 4	417:2:9491:9525	333882	3	True				
ANR	333954	AssignmentExpression	res |= ( strlen ( input ) & 0x3 ) << 4		333882	0		|=			
ANR	333955	Identifier	res		333882	0					
ANR	333956	ShiftExpression	( strlen ( input ) & 0x3 ) << 4		333882	1		<<			
ANR	333957	BitAndExpression	strlen ( input ) & 0x3		333882	0		&			
ANR	333958	CallExpression	strlen ( input )		333882	0					
ANR	333959	Callee	strlen		333882	0					
ANR	333960	Identifier	strlen		333882	0					
ANR	333961	ArgumentList	input		333882	1					
ANR	333962	Argument	input		333882	0					
ANR	333963	Identifier	input		333882	0					
ANR	333964	PrimaryExpression	0x3		333882	1					
ANR	333965	PrimaryExpression	4		333882	1					
ANR	333966	ExpressionStatement	length = strlen ( input )	418:2:9529:9552	333882	4	True				
ANR	333967	AssignmentExpression	length = strlen ( input )		333882	0		=			
ANR	333968	Identifier	length		333882	0					
ANR	333969	CallExpression	strlen ( input )		333882	1					
ANR	333970	Callee	strlen		333882	0					
ANR	333971	Identifier	strlen		333882	0					
ANR	333972	ArgumentList	input		333882	1					
ANR	333973	Argument	input		333882	0					
ANR	333974	Identifier	input		333882	0					
ANR	333975	ForStatement	"for ( i = 0 ; i < length ; i ++ , input ++ )"		333882	5					
ANR	333976	ForInit	i = 0 ;	419:7:9561:9566	333882	0	True				
ANR	333977	AssignmentExpression	i = 0		333882	0		=			
ANR	333978	Identifier	i		333882	0					
ANR	333979	PrimaryExpression	0		333882	1					
ANR	333980	Condition	i < length	419:14:9568:9577	333882	1	True				
ANR	333981	RelationalExpression	i < length		333882	0		<			
ANR	333982	Identifier	i		333882	0					
ANR	333983	Identifier	length		333882	1					
ANR	333984	Expression	"i ++ , input ++"	419:26:9580:9591	333882	2	True				
ANR	333985	PostIncDecOperationExpression	i ++		333882	0					
ANR	333986	Identifier	i		333882	0					
ANR	333987	IncDec	++		333882	1					
ANR	333988	PostIncDecOperationExpression	input ++		333882	1					
ANR	333989	Identifier	input		333882	0					
ANR	333990	IncDec	++		333882	1					
ANR	333991	CompoundStatement		16:41:329:329	333882	3					
ANR	333992	IfStatement	if ( * input == 'e' )		333882	0					
ANR	333993	Condition	* input == 'e'	420:7:9604:9616	333882	0	True				
ANR	333994	EqualityExpression	* input == 'e'		333882	0		==			
ANR	333995	UnaryOperationExpression	* input		333882	0					
ANR	333996	UnaryOperator	*		333882	0					
ANR	333997	Identifier	input		333882	1					
ANR	333998	PrimaryExpression	'e'		333882	1					
ANR	333999	CompoundStatement		17:22:353:353	333882	1					
ANR	334000	ExpressionStatement	res |= 1 << ( 3 - i )	421:4:9625:9644	333882	0	True				
ANR	334001	AssignmentExpression	res |= 1 << ( 3 - i )		333882	0		|=			
ANR	334002	Identifier	res		333882	0					
ANR	334003	ShiftExpression	1 << ( 3 - i )		333882	1		<<			
ANR	334004	PrimaryExpression	1		333882	0					
ANR	334005	AdditiveExpression	3 - i		333882	1		-			
ANR	334006	PrimaryExpression	3		333882	0					
ANR	334007	Identifier	i		333882	1					
ANR	334008	ContinueStatement	continue ;	422:4:9650:9658	333882	1	True				
ANR	334009	IfStatement	if ( * input == 't' )		333882	1					
ANR	334010	Condition	* input == 't'	424:7:9672:9684	333882	0	True				
ANR	334011	EqualityExpression	* input == 't'		333882	0		==			
ANR	334012	UnaryOperationExpression	* input		333882	0					
ANR	334013	UnaryOperator	*		333882	0					
ANR	334014	Identifier	input		333882	1					
ANR	334015	PrimaryExpression	't'		333882	1					
ANR	334016	CompoundStatement		21:22:421:421	333882	1					
ANR	334017	ContinueStatement	continue ;	425:4:9693:9701	333882	0	True				
ANR	334018	ReturnStatement	return 0 ;	427:3:9711:9719	333882	2	True				
ANR	334019	PrimaryExpression	0		333882	0					
ANR	334020	ReturnStatement	return res ;	429:2:9727:9737	333882	6	True				
ANR	334021	Identifier	res		333882	0					
ANR	334022	ReturnStatement	return 0 ;	431:1:9743:9751	333882	5	True				
ANR	334023	PrimaryExpression	0		333882	0					
ANR	334024	ReturnType	static ut32		333882	1					
ANR	334025	Identifier	itmask		333882	2					
ANR	334026	ParameterList	char * input		333882	3					
ANR	334027	Parameter	char * input	404:19:9252:9262	333882	0	True				
ANR	334028	ParameterType	char *		333882	0					
ANR	334029	Identifier	input		333882	1					
ANR	334030	CFGEntryNode	ENTRY		333882		True				
ANR	334031	CFGExitNode	EXIT		333882		True				
ANR	334032	Symbol	r_str_startswith		333882						
ANR	334033	Symbol	input		333882						
ANR	334034	Symbol	res		333882						
ANR	334035	Symbol	strlen		333882						
ANR	334036	Symbol	length		333882						
ANR	334037	Symbol	false		333882						
ANR	334038	Symbol	* input		333882						
ANR	334039	Symbol	i		333882						
ANR	334040	DeclStmt									
ANR	334041	Decl							bool	bool	err
ANR	334042	Function	getnum	436:0:9796:10083							
ANR	334043	FunctionDef	getnum (const char * str)		334042	0					
ANR	334044	CompoundStatement		436:36:9832:10083	334042	0					
ANR	334045	IdentifierDeclStatement	char * endptr ;	437:1:9835:9847	334042	0	True				
ANR	334046	IdentifierDecl	* endptr		334042	0					
ANR	334047	IdentifierDeclType	char *		334042	0					
ANR	334048	Identifier	endptr		334042	1					
ANR	334049	ExpressionStatement	err = false	438:1:9850:9861	334042	1	True				
ANR	334050	AssignmentExpression	err = false		334042	0		=			
ANR	334051	Identifier	err		334042	0					
ANR	334052	Identifier	false		334042	1					
ANR	334053	IdentifierDeclStatement	ut64 val ;	439:1:9864:9872	334042	2	True				
ANR	334054	IdentifierDecl	val		334042	0					
ANR	334055	IdentifierDeclType	ut64		334042	0					
ANR	334056	Identifier	val		334042	1					
ANR	334057	IfStatement	if ( ! str )		334042	3					
ANR	334058	Condition	! str	441:5:9880:9883	334042	0	True				
ANR	334059	UnaryOperationExpression	! str		334042	0					
ANR	334060	UnaryOperator	!		334042	0					
ANR	334061	Identifier	str		334042	1					
ANR	334062	CompoundStatement		6:11:53:53	334042	1					
ANR	334063	ExpressionStatement	err = true	442:2:9890:9900	334042	0	True				
ANR	334064	AssignmentExpression	err = true		334042	0		=			
ANR	334065	Identifier	err		334042	0					
ANR	334066	Identifier	true		334042	1					
ANR	334067	ReturnStatement	return 0 ;	443:2:9904:9912	334042	1	True				
ANR	334068	PrimaryExpression	0		334042	0					
ANR	334069	WhileStatement	while ( * str == '$' || * str == '#' )		334042	4					
ANR	334070	Condition	* str == '$' || * str == '#'	445:8:9925:9950	334042	0	True				
ANR	334071	OrExpression	* str == '$' || * str == '#'		334042	0		||			
ANR	334072	EqualityExpression	* str == '$'		334042	0		==			
ANR	334073	UnaryOperationExpression	* str		334042	0					
ANR	334074	UnaryOperator	*		334042	0					
ANR	334075	Identifier	str		334042	1					
ANR	334076	PrimaryExpression	'$'		334042	1					
ANR	334077	EqualityExpression	* str == '#'		334042	1		==			
ANR	334078	UnaryOperationExpression	* str		334042	0					
ANR	334079	UnaryOperator	*		334042	0					
ANR	334080	Identifier	str		334042	1					
ANR	334081	PrimaryExpression	'#'		334042	1					
ANR	334082	CompoundStatement		10:36:120:120	334042	1					
ANR	334083	ExpressionStatement	str ++	446:2:9957:9962	334042	0	True				
ANR	334084	PostIncDecOperationExpression	str ++		334042	0					
ANR	334085	Identifier	str		334042	0					
ANR	334086	IncDec	++		334042	1					
ANR	334087	ExpressionStatement	"val = strtoll ( str , & endptr , 0 )"	448:1:9968:9999	334042	5	True				
ANR	334088	AssignmentExpression	"val = strtoll ( str , & endptr , 0 )"		334042	0		=			
ANR	334089	Identifier	val		334042	0					
ANR	334090	CallExpression	"strtoll ( str , & endptr , 0 )"		334042	1					
ANR	334091	Callee	strtoll		334042	0					
ANR	334092	Identifier	strtoll		334042	0					
ANR	334093	ArgumentList	str		334042	1					
ANR	334094	Argument	str		334042	0					
ANR	334095	Identifier	str		334042	0					
ANR	334096	Argument	& endptr		334042	1					
ANR	334097	UnaryOperationExpression	& endptr		334042	0					
ANR	334098	UnaryOperator	&		334042	0					
ANR	334099	Identifier	endptr		334042	1					
ANR	334100	Argument	0		334042	2					
ANR	334101	PrimaryExpression	0		334042	0					
ANR	334102	IfStatement	if ( str != endptr && * endptr == '\\0' )		334042	6					
ANR	334103	Condition	str != endptr && * endptr == '\\0'	449:5:10006:10037	334042	0	True				
ANR	334104	AndExpression	str != endptr && * endptr == '\\0'		334042	0		&&			
ANR	334105	EqualityExpression	str != endptr		334042	0		!=			
ANR	334106	Identifier	str		334042	0					
ANR	334107	Identifier	endptr		334042	1					
ANR	334108	EqualityExpression	* endptr == '\\0'		334042	1		==			
ANR	334109	UnaryOperationExpression	* endptr		334042	0					
ANR	334110	UnaryOperator	*		334042	0					
ANR	334111	Identifier	endptr		334042	1					
ANR	334112	PrimaryExpression	'\\0'		334042	1					
ANR	334113	CompoundStatement		14:39:207:207	334042	1					
ANR	334114	ReturnStatement	return val ;	450:2:10044:10054	334042	0	True				
ANR	334115	Identifier	val		334042	0					
ANR	334116	ExpressionStatement	err = true	452:1:10060:10070	334042	7	True				
ANR	334117	AssignmentExpression	err = true		334042	0		=			
ANR	334118	Identifier	err		334042	0					
ANR	334119	Identifier	true		334042	1					
ANR	334120	ReturnStatement	return 0 ;	453:1:10073:10081	334042	8	True				
ANR	334121	PrimaryExpression	0		334042	0					
ANR	334122	ReturnType	static ut64		334042	1					
ANR	334123	Identifier	getnum		334042	2					
ANR	334124	ParameterList	const char * str		334042	3					
ANR	334125	Parameter	const char * str	436:19:9815:9829	334042	0	True				
ANR	334126	ParameterType	const char *		334042	0					
ANR	334127	Identifier	str		334042	1					
ANR	334128	CFGEntryNode	ENTRY		334042		True				
ANR	334129	CFGExitNode	EXIT		334042		True				
ANR	334130	Symbol	str		334042						
ANR	334131	Symbol	val		334042						
ANR	334132	Symbol	err		334042						
ANR	334133	Symbol	endptr		334042						
ANR	334134	Symbol	* endptr		334042						
ANR	334135	Symbol	strtoll		334042						
ANR	334136	Symbol	& endptr		334042						
ANR	334137	Symbol	false		334042						
ANR	334138	Symbol	true		334042						
ANR	334139	Symbol	* str		334042						
ANR	334140	Function	getnumbang	456:0:10086:10382							
ANR	334141	FunctionDef	getnumbang (const char * str)		334140	0					
ANR	334142	CompoundStatement		456:40:10126:10382	334140	0					
ANR	334143	IdentifierDeclStatement	ut64 res ;	457:1:10129:10137	334140	0	True				
ANR	334144	IdentifierDecl	res		334140	0					
ANR	334145	IdentifierDeclType	ut64		334140	0					
ANR	334146	Identifier	res		334140	1					
ANR	334147	IfStatement	"if ( ! str || ! * str || ! r_str_endswith ( str , ""!"" ) )"		334140	1					
ANR	334148	Condition	"! str || ! * str || ! r_str_endswith ( str , ""!"" )"	459:5:10145:10187	334140	0	True				
ANR	334149	OrExpression	"! str || ! * str || ! r_str_endswith ( str , ""!"" )"		334140	0		||			
ANR	334150	UnaryOperationExpression	! str		334140	0					
ANR	334151	UnaryOperator	!		334140	0					
ANR	334152	Identifier	str		334140	1					
ANR	334153	OrExpression	"! * str || ! r_str_endswith ( str , ""!"" )"		334140	1		||			
ANR	334154	UnaryOperationExpression	! * str		334140	0					
ANR	334155	UnaryOperator	!		334140	0					
ANR	334156	UnaryOperationExpression	* str		334140	1					
ANR	334157	UnaryOperator	*		334140	0					
ANR	334158	Identifier	str		334140	1					
ANR	334159	UnaryOperationExpression	"! r_str_endswith ( str , ""!"" )"		334140	1					
ANR	334160	UnaryOperator	!		334140	0					
ANR	334161	CallExpression	"r_str_endswith ( str , ""!"" )"		334140	1					
ANR	334162	Callee	r_str_endswith		334140	0					
ANR	334163	Identifier	r_str_endswith		334140	0					
ANR	334164	ArgumentList	str		334140	1					
ANR	334165	Argument	str		334140	0					
ANR	334166	Identifier	str		334140	0					
ANR	334167	Argument	"""!"""		334140	1					
ANR	334168	PrimaryExpression	"""!"""		334140	0					
ANR	334169	CompoundStatement		4:50:63:63	334140	1					
ANR	334170	ExpressionStatement	err = true	460:2:10194:10204	334140	0	True				
ANR	334171	AssignmentExpression	err = true		334140	0		=			
ANR	334172	Identifier	err		334140	0					
ANR	334173	Identifier	true		334140	1					
ANR	334174	ReturnStatement	return 0 ;	461:2:10208:10216	334140	1	True				
ANR	334175	PrimaryExpression	0		334140	0					
ANR	334176	IdentifierDeclStatement	"char * temp = r_str_ndup ( str , strlen ( str ) - 1 ) ;"	463:1:10222:10269	334140	2	True				
ANR	334177	IdentifierDecl	"* temp = r_str_ndup ( str , strlen ( str ) - 1 )"		334140	0					
ANR	334178	IdentifierDeclType	char *		334140	0					
ANR	334179	Identifier	temp		334140	1					
ANR	334180	AssignmentExpression	"* temp = r_str_ndup ( str , strlen ( str ) - 1 )"		334140	2		=			
ANR	334181	Identifier	temp		334140	0					
ANR	334182	CallExpression	"r_str_ndup ( str , strlen ( str ) - 1 )"		334140	1					
ANR	334183	Callee	r_str_ndup		334140	0					
ANR	334184	Identifier	r_str_ndup		334140	0					
ANR	334185	ArgumentList	str		334140	1					
ANR	334186	Argument	str		334140	0					
ANR	334187	Identifier	str		334140	0					
ANR	334188	Argument	strlen ( str ) - 1		334140	1					
ANR	334189	AdditiveExpression	strlen ( str ) - 1		334140	0		-			
ANR	334190	CallExpression	strlen ( str )		334140	0					
ANR	334191	Callee	strlen		334140	0					
ANR	334192	Identifier	strlen		334140	0					
ANR	334193	ArgumentList	str		334140	1					
ANR	334194	Argument	str		334140	0					
ANR	334195	Identifier	str		334140	0					
ANR	334196	PrimaryExpression	1		334140	1					
ANR	334197	IfStatement	if ( ! temp )		334140	3					
ANR	334198	Condition	! temp	464:5:10276:10280	334140	0	True				
ANR	334199	UnaryOperationExpression	! temp		334140	0					
ANR	334200	UnaryOperator	!		334140	0					
ANR	334201	Identifier	temp		334140	1					
ANR	334202	CompoundStatement		9:12:156:156	334140	1					
ANR	334203	ReturnStatement	return - 1 ;	465:2:10287:10296	334140	0	True				
ANR	334204	UnaryOperationExpression	- 1		334140	0					
ANR	334205	UnaryOperator	-		334140	0					
ANR	334206	PrimaryExpression	1		334140	1					
ANR	334207	ExpressionStatement	err = false	467:1:10302:10313	334140	4	True				
ANR	334208	AssignmentExpression	err = false		334140	0		=			
ANR	334209	Identifier	err		334140	0					
ANR	334210	Identifier	false		334140	1					
ANR	334211	ExpressionStatement	res = getnum ( temp )	468:1:10316:10335	334140	5	True				
ANR	334212	AssignmentExpression	res = getnum ( temp )		334140	0		=			
ANR	334213	Identifier	res		334140	0					
ANR	334214	CallExpression	getnum ( temp )		334140	1					
ANR	334215	Callee	getnum		334140	0					
ANR	334216	Identifier	getnum		334140	0					
ANR	334217	ArgumentList	temp		334140	1					
ANR	334218	Argument	temp		334140	0					
ANR	334219	Identifier	temp		334140	0					
ANR	334220	ExpressionStatement	free ( temp )	469:1:10338:10349	334140	6	True				
ANR	334221	CallExpression	free ( temp )		334140	0					
ANR	334222	Callee	free		334140	0					
ANR	334223	Identifier	free		334140	0					
ANR	334224	ArgumentList	temp		334140	1					
ANR	334225	Argument	temp		334140	0					
ANR	334226	Identifier	temp		334140	0					
ANR	334227	ReturnStatement	return res ;	470:1:10352:10362	334140	7	True				
ANR	334228	Identifier	res		334140	0					
ANR	334229	ReturnType	static ut64		334140	1					
ANR	334230	Identifier	getnumbang		334140	2					
ANR	334231	ParameterList	const char * str		334140	3					
ANR	334232	Parameter	const char * str	456:23:10109:10123	334140	0	True				
ANR	334233	ParameterType	const char *		334140	0					
ANR	334234	Identifier	str		334140	1					
ANR	334235	CFGEntryNode	ENTRY		334140		True				
ANR	334236	CFGExitNode	EXIT		334140		True				
ANR	334237	Symbol	str		334140						
ANR	334238	Symbol	res		334140						
ANR	334239	Symbol	strlen		334140						
ANR	334240	Symbol	temp		334140						
ANR	334241	Symbol	err		334140						
ANR	334242	Symbol	r_str_ndup		334140						
ANR	334243	Symbol	true		334140						
ANR	334244	Symbol	false		334140						
ANR	334245	Symbol	getnum		334140						
ANR	334246	Symbol	r_str_endswith		334140						
ANR	334247	Symbol	* str		334140						
ANR	334248	Function	getimmed8	473:0:10386:10730							
ANR	334249	FunctionDef	getimmed8 (const char * str)		334248	0					
ANR	334250	CompoundStatement		473:39:10425:10730	334248	0					
ANR	334251	IdentifierDeclStatement	ut32 num = getnum ( str ) ;	474:1:10428:10451	334248	0	True				
ANR	334252	IdentifierDecl	num = getnum ( str )		334248	0					
ANR	334253	IdentifierDeclType	ut32		334248	0					
ANR	334254	Identifier	num		334248	1					
ANR	334255	AssignmentExpression	num = getnum ( str )		334248	2		=			
ANR	334256	Identifier	num		334248	0					
ANR	334257	CallExpression	getnum ( str )		334248	1					
ANR	334258	Callee	getnum		334248	0					
ANR	334259	Identifier	getnum		334248	0					
ANR	334260	ArgumentList	str		334248	1					
ANR	334261	Argument	str		334248	0					
ANR	334262	Identifier	str		334248	0					
ANR	334263	IfStatement	if ( err )		334248	1					
ANR	334264	Condition	err	475:5:10458:10460	334248	0	True				
ANR	334265	Identifier	err		334248	0					
ANR	334266	CompoundStatement		3:10:37:37	334248	1					
ANR	334267	ReturnStatement	return 0 ;	476:2:10467:10475	334248	0	True				
ANR	334268	PrimaryExpression	0		334248	0					
ANR	334269	IdentifierDeclStatement	ut32 rotate ;	478:1:10481:10492	334248	2	True				
ANR	334270	IdentifierDecl	rotate		334248	0					
ANR	334271	IdentifierDeclType	ut32		334248	0					
ANR	334272	Identifier	rotate		334248	1					
ANR	334273	IfStatement	if ( num <= 0xff )		334248	3					
ANR	334274	Condition	num <= 0xff	479:5:10499:10509	334248	0	True				
ANR	334275	RelationalExpression	num <= 0xff		334248	0		<=			
ANR	334276	Identifier	num		334248	0					
ANR	334277	PrimaryExpression	0xff		334248	1					
ANR	334278	CompoundStatement		7:18:86:86	334248	1					
ANR	334279	ReturnStatement	return num ;	480:2:10516:10526	334248	0	True				
ANR	334280	Identifier	num		334248	0					
ANR	334281	ElseStatement	else		334248	0					
ANR	334282	CompoundStatement		9:8:110:110	334248	0					
ANR	334283	ForStatement	for ( rotate = 1 ; rotate < 16 ; rotate ++ )		334248	0					
ANR	334284	ForInit	rotate = 1 ;	482:7:10545:10555	334248	0	True				
ANR	334285	AssignmentExpression	rotate = 1		334248	0		=			
ANR	334286	Identifier	rotate		334248	0					
ANR	334287	PrimaryExpression	1		334248	1					
ANR	334288	Condition	rotate < 16	482:19:10557:10567	334248	1	True				
ANR	334289	RelationalExpression	rotate < 16		334248	0		<			
ANR	334290	Identifier	rotate		334248	0					
ANR	334291	PrimaryExpression	16		334248	1					
ANR	334292	PostIncDecOperationExpression	rotate ++	482:32:10570:10577	334248	2	True				
ANR	334293	Identifier	rotate		334248	0					
ANR	334294	IncDec	++		334248	1					
ANR	334295	CompoundStatement		10:42:154:154	334248	3					
ANR	334296	ExpressionStatement	num = ( ( num << 2 ) | ( num >> 30 ) )	484:3:10597:10629	334248	0	True				
ANR	334297	AssignmentExpression	num = ( ( num << 2 ) | ( num >> 30 ) )		334248	0		=			
ANR	334298	Identifier	num		334248	0					
ANR	334299	InclusiveOrExpression	( num << 2 ) | ( num >> 30 )		334248	1		|			
ANR	334300	ShiftExpression	num << 2		334248	0		<<			
ANR	334301	Identifier	num		334248	0					
ANR	334302	PrimaryExpression	2		334248	1					
ANR	334303	ShiftExpression	num >> 30		334248	1		>>			
ANR	334304	Identifier	num		334248	0					
ANR	334305	PrimaryExpression	30		334248	1					
ANR	334306	IfStatement	if ( num == ( num & 0xff ) )		334248	1					
ANR	334307	Condition	num == ( num & 0xff )	485:7:10638:10656	334248	0	True				
ANR	334308	EqualityExpression	num == ( num & 0xff )		334248	0		==			
ANR	334309	Identifier	num		334248	0					
ANR	334310	BitAndExpression	num & 0xff		334248	1		&			
ANR	334311	Identifier	num		334248	0					
ANR	334312	PrimaryExpression	0xff		334248	1					
ANR	334313	CompoundStatement		13:28:233:233	334248	1					
ANR	334314	ReturnStatement	return ( num | ( rotate << 8 ) ) ;	486:4:10665:10693	334248	0	True				
ANR	334315	InclusiveOrExpression	num | ( rotate << 8 )		334248	0		|			
ANR	334316	Identifier	num		334248	0					
ANR	334317	ShiftExpression	rotate << 8		334248	1		<<			
ANR	334318	Identifier	rotate		334248	0					
ANR	334319	PrimaryExpression	8		334248	1					
ANR	334320	ExpressionStatement	err = 1	489:2:10706:10713	334248	1	True				
ANR	334321	AssignmentExpression	err = 1		334248	0		=			
ANR	334322	Identifier	err		334248	0					
ANR	334323	PrimaryExpression	1		334248	1					
ANR	334324	ReturnStatement	return 0 ;	490:2:10717:10725	334248	2	True				
ANR	334325	PrimaryExpression	0		334248	0					
ANR	334326	ReturnType	static ut32		334248	1					
ANR	334327	Identifier	getimmed8		334248	2					
ANR	334328	ParameterList	const char * str		334248	3					
ANR	334329	Parameter	const char * str	473:22:10408:10422	334248	0	True				
ANR	334330	ParameterType	const char *		334248	0					
ANR	334331	Identifier	str		334248	1					
ANR	334332	CFGEntryNode	ENTRY		334248		True				
ANR	334333	CFGExitNode	EXIT		334248		True				
ANR	334334	Symbol	str		334248						
ANR	334335	Symbol	rotate		334248						
ANR	334336	Symbol	err		334248						
ANR	334337	Symbol	num		334248						
ANR	334338	Symbol	getnum		334248						
ANR	334339	Function	firstsigdigit	494:0:10733:11106							
ANR	334340	FunctionDef	firstsigdigit (ut32 num)		334339	0					
ANR	334341	CompoundStatement		494:37:10770:11106	334339	0					
ANR	334342	IdentifierDeclStatement	st32 f = - 1 ;	495:1:10773:10784	334339	0	True				
ANR	334343	IdentifierDecl	f = - 1		334339	0					
ANR	334344	IdentifierDeclType	st32		334339	0					
ANR	334345	Identifier	f		334339	1					
ANR	334346	AssignmentExpression	f = - 1		334339	2		=			
ANR	334347	Identifier	f		334339	0					
ANR	334348	UnaryOperationExpression	- 1		334339	1					
ANR	334349	UnaryOperator	-		334339	0					
ANR	334350	PrimaryExpression	1		334339	1					
ANR	334351	IdentifierDeclStatement	st32 b = - 1 ;	496:1:10787:10798	334339	1	True				
ANR	334352	IdentifierDecl	b = - 1		334339	0					
ANR	334353	IdentifierDeclType	st32		334339	0					
ANR	334354	Identifier	b		334339	1					
ANR	334355	AssignmentExpression	b = - 1		334339	2		=			
ANR	334356	Identifier	b		334339	0					
ANR	334357	UnaryOperationExpression	- 1		334339	1					
ANR	334358	UnaryOperator	-		334339	0					
ANR	334359	PrimaryExpression	1		334339	1					
ANR	334360	IdentifierDeclStatement	ut32 forwardmask = 0x80000000 ;	497:1:10801:10830	334339	2	True				
ANR	334361	IdentifierDecl	forwardmask = 0x80000000		334339	0					
ANR	334362	IdentifierDeclType	ut32		334339	0					
ANR	334363	Identifier	forwardmask		334339	1					
ANR	334364	AssignmentExpression	forwardmask = 0x80000000		334339	2		=			
ANR	334365	Identifier	forwardmask		334339	0					
ANR	334366	PrimaryExpression	0x80000000		334339	1					
ANR	334367	IdentifierDeclStatement	ut32 backwardmask = 0x1 ;	498:1:10833:10856	334339	3	True				
ANR	334368	IdentifierDecl	backwardmask = 0x1		334339	0					
ANR	334369	IdentifierDeclType	ut32		334339	0					
ANR	334370	Identifier	backwardmask		334339	1					
ANR	334371	AssignmentExpression	backwardmask = 0x1		334339	2		=			
ANR	334372	Identifier	backwardmask		334339	0					
ANR	334373	PrimaryExpression	0x1		334339	1					
ANR	334374	IdentifierDeclStatement	ut32 i ;	499:1:10859:10865	334339	4	True				
ANR	334375	IdentifierDecl	i		334339	0					
ANR	334376	IdentifierDeclType	ut32		334339	0					
ANR	334377	Identifier	i		334339	1					
ANR	334378	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		334339	5					
ANR	334379	ForInit	i = 0 ;	500:6:10873:10878	334339	0	True				
ANR	334380	AssignmentExpression	i = 0		334339	0		=			
ANR	334381	Identifier	i		334339	0					
ANR	334382	PrimaryExpression	0		334339	1					
ANR	334383	Condition	i < 32	500:13:10880:10885	334339	1	True				
ANR	334384	RelationalExpression	i < 32		334339	0		<			
ANR	334385	Identifier	i		334339	0					
ANR	334386	PrimaryExpression	32		334339	1					
ANR	334387	PostIncDecOperationExpression	i ++	500:21:10888:10890	334339	2	True				
ANR	334388	Identifier	i		334339	0					
ANR	334389	IncDec	++		334339	1					
ANR	334390	CompoundStatement		7:27:123:123	334339	3					
ANR	334391	IfStatement	if ( ( forwardmask & num ) && ( f == - 1 ) )		334339	0					
ANR	334392	Condition	( forwardmask & num ) && ( f == - 1 )	501:7:10903:10934	334339	0	True				
ANR	334393	AndExpression	( forwardmask & num ) && ( f == - 1 )		334339	0		&&			
ANR	334394	BitAndExpression	forwardmask & num		334339	0		&			
ANR	334395	Identifier	forwardmask		334339	0					
ANR	334396	Identifier	num		334339	1					
ANR	334397	EqualityExpression	f == - 1		334339	1		==			
ANR	334398	Identifier	f		334339	0					
ANR	334399	UnaryOperationExpression	- 1		334339	1					
ANR	334400	UnaryOperator	-		334339	0					
ANR	334401	PrimaryExpression	1		334339	1					
ANR	334402	CompoundStatement		8:41:166:166	334339	1					
ANR	334403	ExpressionStatement	f = i	502:3:10942:10947	334339	0	True				
ANR	334404	AssignmentExpression	f = i		334339	0		=			
ANR	334405	Identifier	f		334339	0					
ANR	334406	Identifier	i		334339	1					
ANR	334407	IfStatement	if ( ( backwardmask & num ) && ( b == - 1 ) )		334339	1					
ANR	334408	Condition	( backwardmask & num ) && ( b == - 1 )	504:7:10960:10992	334339	0	True				
ANR	334409	AndExpression	( backwardmask & num ) && ( b == - 1 )		334339	0		&&			
ANR	334410	BitAndExpression	backwardmask & num		334339	0		&			
ANR	334411	Identifier	backwardmask		334339	0					
ANR	334412	Identifier	num		334339	1					
ANR	334413	EqualityExpression	b == - 1		334339	1		==			
ANR	334414	Identifier	b		334339	0					
ANR	334415	UnaryOperationExpression	- 1		334339	1					
ANR	334416	UnaryOperator	-		334339	0					
ANR	334417	PrimaryExpression	1		334339	1					
ANR	334418	CompoundStatement		11:42:224:224	334339	1					
ANR	334419	ExpressionStatement	b = 32 - i	505:3:11000:11008	334339	0	True				
ANR	334420	AssignmentExpression	b = 32 - i		334339	0		=			
ANR	334421	Identifier	b		334339	0					
ANR	334422	AdditiveExpression	32 - i		334339	1		-			
ANR	334423	PrimaryExpression	32		334339	0					
ANR	334424	Identifier	i		334339	1					
ANR	334425	ExpressionStatement	forwardmask >>= 1	507:2:11016:11033	334339	2	True				
ANR	334426	AssignmentExpression	forwardmask >>= 1		334339	0		>>=			
ANR	334427	Identifier	forwardmask		334339	0					
ANR	334428	PrimaryExpression	1		334339	1					
ANR	334429	ExpressionStatement	backwardmask <<= 1	508:2:11037:11055	334339	3	True				
ANR	334430	AssignmentExpression	backwardmask <<= 1		334339	0		<<=			
ANR	334431	Identifier	backwardmask		334339	0					
ANR	334432	PrimaryExpression	1		334339	1					
ANR	334433	IfStatement	if ( ( b - f ) < 9 )		334339	6					
ANR	334434	Condition	( b - f ) < 9	511:5:11066:11074	334339	0	True				
ANR	334435	RelationalExpression	( b - f ) < 9		334339	0		<			
ANR	334436	AdditiveExpression	b - f		334339	0		-			
ANR	334437	Identifier	b		334339	0					
ANR	334438	Identifier	f		334339	1					
ANR	334439	PrimaryExpression	9		334339	1					
ANR	334440	CompoundStatement		18:16:306:306	334339	1					
ANR	334441	ReturnStatement	return f ;	512:2:11081:11089	334339	0	True				
ANR	334442	Identifier	f		334339	0					
ANR	334443	ReturnStatement	return - 1 ;	514:1:11095:11104	334339	7	True				
ANR	334444	UnaryOperationExpression	- 1		334339	0					
ANR	334445	UnaryOperator	-		334339	0					
ANR	334446	PrimaryExpression	1		334339	1					
ANR	334447	ReturnType	static st32		334339	1					
ANR	334448	Identifier	firstsigdigit		334339	2					
ANR	334449	ParameterList	ut32 num		334339	3					
ANR	334450	Parameter	ut32 num	494:27:10760:10767	334339	0	True				
ANR	334451	ParameterType	ut32		334339	0					
ANR	334452	Identifier	num		334339	1					
ANR	334453	CFGEntryNode	ENTRY		334339		True				
ANR	334454	CFGExitNode	EXIT		334339		True				
ANR	334455	Symbol	backwardmask		334339						
ANR	334456	Symbol	b		334339						
ANR	334457	Symbol	forwardmask		334339						
ANR	334458	Symbol	f		334339						
ANR	334459	Symbol	num		334339						
ANR	334460	Symbol	i		334339						
ANR	334461	Function	getthbimmed	517:0:11109:11619							
ANR	334462	FunctionDef	getthbimmed (st32 number)		334461	0					
ANR	334463	CompoundStatement		517:37:11146:11619	334461	0					
ANR	334464	IdentifierDeclStatement	ut32 res = 0 ;	518:1:11149:11161	334461	0	True				
ANR	334465	IdentifierDecl	res = 0		334461	0					
ANR	334466	IdentifierDeclType	ut32		334461	0					
ANR	334467	Identifier	res		334461	1					
ANR	334468	AssignmentExpression	res = 0		334461	2		=			
ANR	334469	Identifier	res		334461	0					
ANR	334470	PrimaryExpression	0		334461	1					
ANR	334471	IfStatement	if ( number < 0 )		334461	1					
ANR	334472	Condition	number < 0	519:5:11168:11177	334461	0	True				
ANR	334473	RelationalExpression	number < 0		334461	0		<			
ANR	334474	Identifier	number		334461	0					
ANR	334475	PrimaryExpression	0		334461	1					
ANR	334476	CompoundStatement		3:17:33:33	334461	1					
ANR	334477	ExpressionStatement	res |= 1 << 18	520:2:11184:11198	334461	0	True				
ANR	334478	AssignmentExpression	res |= 1 << 18		334461	0		|=			
ANR	334479	Identifier	res		334461	0					
ANR	334480	ShiftExpression	1 << 18		334461	1		<<			
ANR	334481	PrimaryExpression	1		334461	0					
ANR	334482	PrimaryExpression	18		334461	1					
ANR	334483	ExpressionStatement	number >>= 1	522:1:11204:11216	334461	2	True				
ANR	334484	AssignmentExpression	number >>= 1		334461	0		>>=			
ANR	334485	Identifier	number		334461	0					
ANR	334486	PrimaryExpression	1		334461	1					
ANR	334487	ExpressionStatement	res |= ( ( number & 0xff ) << 8 )	523:1:11219:11249	334461	3	True				
ANR	334488	AssignmentExpression	res |= ( ( number & 0xff ) << 8 )		334461	0		|=			
ANR	334489	Identifier	res		334461	0					
ANR	334490	ShiftExpression	( number & 0xff ) << 8		334461	1		<<			
ANR	334491	BitAndExpression	number & 0xff		334461	0		&			
ANR	334492	Identifier	number		334461	0					
ANR	334493	PrimaryExpression	0xff		334461	1					
ANR	334494	PrimaryExpression	8		334461	1					
ANR	334495	ExpressionStatement	number >>= 8	524:1:11252:11264	334461	4	True				
ANR	334496	AssignmentExpression	number >>= 8		334461	0		>>=			
ANR	334497	Identifier	number		334461	0					
ANR	334498	PrimaryExpression	8		334461	1					
ANR	334499	ExpressionStatement	res |= ( number & 0x07 )	525:1:11267:11290	334461	5	True				
ANR	334500	AssignmentExpression	res |= ( number & 0x07 )		334461	0		|=			
ANR	334501	Identifier	res		334461	0					
ANR	334502	BitAndExpression	number & 0x07		334461	1		&			
ANR	334503	Identifier	number		334461	0					
ANR	334504	PrimaryExpression	0x07		334461	1					
ANR	334505	ExpressionStatement	number >>= 3	526:1:11293:11305	334461	6	True				
ANR	334506	AssignmentExpression	number >>= 3		334461	0		>>=			
ANR	334507	Identifier	number		334461	0					
ANR	334508	PrimaryExpression	3		334461	1					
ANR	334509	ExpressionStatement	res |= ( ( number & 0xff ) << 24 )	527:1:11308:11339	334461	7	True				
ANR	334510	AssignmentExpression	res |= ( ( number & 0xff ) << 24 )		334461	0		|=			
ANR	334511	Identifier	res		334461	0					
ANR	334512	ShiftExpression	( number & 0xff ) << 24		334461	1		<<			
ANR	334513	BitAndExpression	number & 0xff		334461	0		&			
ANR	334514	Identifier	number		334461	0					
ANR	334515	PrimaryExpression	0xff		334461	1					
ANR	334516	PrimaryExpression	24		334461	1					
ANR	334517	ExpressionStatement	number >>= 8	528:1:11342:11354	334461	8	True				
ANR	334518	AssignmentExpression	number >>= 8		334461	0		>>=			
ANR	334519	Identifier	number		334461	0					
ANR	334520	PrimaryExpression	8		334461	1					
ANR	334521	ExpressionStatement	res |= ( ( number & 0x3 ) << 16 )	529:1:11357:11387	334461	9	True				
ANR	334522	AssignmentExpression	res |= ( ( number & 0x3 ) << 16 )		334461	0		|=			
ANR	334523	Identifier	res		334461	0					
ANR	334524	ShiftExpression	( number & 0x3 ) << 16		334461	1		<<			
ANR	334525	BitAndExpression	number & 0x3		334461	0		&			
ANR	334526	Identifier	number		334461	0					
ANR	334527	PrimaryExpression	0x3		334461	1					
ANR	334528	PrimaryExpression	16		334461	1					
ANR	334529	ExpressionStatement	number >>= 2	530:1:11390:11402	334461	10	True				
ANR	334530	AssignmentExpression	number >>= 2		334461	0		>>=			
ANR	334531	Identifier	number		334461	0					
ANR	334532	PrimaryExpression	2		334461	1					
ANR	334533	IfStatement	if ( number < 0 )		334461	11					
ANR	334534	Condition	number < 0	531:5:11409:11418	334461	0	True				
ANR	334535	RelationalExpression	number < 0		334461	0		<			
ANR	334536	Identifier	number		334461	0					
ANR	334537	PrimaryExpression	0		334461	1					
ANR	334538	CompoundStatement		15:17:274:274	334461	1					
ANR	334539	ExpressionStatement	res |= ( ( number & 0x1 ) << 3 )	532:2:11425:11454	334461	0	True				
ANR	334540	AssignmentExpression	res |= ( ( number & 0x1 ) << 3 )		334461	0		|=			
ANR	334541	Identifier	res		334461	0					
ANR	334542	ShiftExpression	( number & 0x1 ) << 3		334461	1		<<			
ANR	334543	BitAndExpression	number & 0x1		334461	0		&			
ANR	334544	Identifier	number		334461	0					
ANR	334545	PrimaryExpression	0x1		334461	1					
ANR	334546	PrimaryExpression	3		334461	1					
ANR	334547	ExpressionStatement	number >>= 1	533:2:11458:11470	334461	1	True				
ANR	334548	AssignmentExpression	number >>= 1		334461	0		>>=			
ANR	334549	Identifier	number		334461	0					
ANR	334550	PrimaryExpression	1		334461	1					
ANR	334551	ExpressionStatement	res |= ( ( number & 0x1 ) << 5 )	534:2:11474:11503	334461	2	True				
ANR	334552	AssignmentExpression	res |= ( ( number & 0x1 ) << 5 )		334461	0		|=			
ANR	334553	Identifier	res		334461	0					
ANR	334554	ShiftExpression	( number & 0x1 ) << 5		334461	1		<<			
ANR	334555	BitAndExpression	number & 0x1		334461	0		&			
ANR	334556	Identifier	number		334461	0					
ANR	334557	PrimaryExpression	0x1		334461	1					
ANR	334558	PrimaryExpression	5		334461	1					
ANR	334559	ElseStatement	else		334461	0					
ANR	334560	CompoundStatement		19:8:366:366	334461	0					
ANR	334561	ExpressionStatement	res |= ( ( ! ( number & 0x1 ) ) << 3 )	536:2:11517:11549	334461	0	True				
ANR	334562	AssignmentExpression	res |= ( ( ! ( number & 0x1 ) ) << 3 )		334461	0		|=			
ANR	334563	Identifier	res		334461	0					
ANR	334564	ShiftExpression	( ! ( number & 0x1 ) ) << 3		334461	1		<<			
ANR	334565	UnaryOperationExpression	! ( number & 0x1 )		334461	0					
ANR	334566	UnaryOperator	!		334461	0					
ANR	334567	BitAndExpression	number & 0x1		334461	1		&			
ANR	334568	Identifier	number		334461	0					
ANR	334569	PrimaryExpression	0x1		334461	1					
ANR	334570	PrimaryExpression	3		334461	1					
ANR	334571	ExpressionStatement	number >>= 1	537:2:11553:11565	334461	1	True				
ANR	334572	AssignmentExpression	number >>= 1		334461	0		>>=			
ANR	334573	Identifier	number		334461	0					
ANR	334574	PrimaryExpression	1		334461	1					
ANR	334575	ExpressionStatement	res |= ( ( ! ( number & 0x1 ) ) << 5 )	538:2:11569:11601	334461	2	True				
ANR	334576	AssignmentExpression	res |= ( ( ! ( number & 0x1 ) ) << 5 )		334461	0		|=			
ANR	334577	Identifier	res		334461	0					
ANR	334578	ShiftExpression	( ! ( number & 0x1 ) ) << 5		334461	1		<<			
ANR	334579	UnaryOperationExpression	! ( number & 0x1 )		334461	0					
ANR	334580	UnaryOperator	!		334461	0					
ANR	334581	BitAndExpression	number & 0x1		334461	1		&			
ANR	334582	Identifier	number		334461	0					
ANR	334583	PrimaryExpression	0x1		334461	1					
ANR	334584	PrimaryExpression	5		334461	1					
ANR	334585	ReturnStatement	return res ;	540:1:11607:11617	334461	12	True				
ANR	334586	Identifier	res		334461	0					
ANR	334587	ReturnType	static ut32		334461	1					
ANR	334588	Identifier	getthbimmed		334461	2					
ANR	334589	ParameterList	st32 number		334461	3					
ANR	334590	Parameter	st32 number	517:24:11133:11143	334461	0	True				
ANR	334591	ParameterType	st32		334461	0					
ANR	334592	Identifier	number		334461	1					
ANR	334593	CFGEntryNode	ENTRY		334461		True				
ANR	334594	CFGExitNode	EXIT		334461		True				
ANR	334595	Symbol	number		334461						
ANR	334596	Symbol	res		334461						
ANR	334597	Function	getthzeroimmed12	543:0:11622:11787							
ANR	334598	FunctionDef	getthzeroimmed12 (ut32 number)		334597	0					
ANR	334599	CompoundStatement		543:42:11664:11787	334597	0					
ANR	334600	IdentifierDeclStatement	ut32 res = 0 ;	544:1:11667:11679	334597	0	True				
ANR	334601	IdentifierDecl	res = 0		334597	0					
ANR	334602	IdentifierDeclType	ut32		334597	0					
ANR	334603	Identifier	res		334597	1					
ANR	334604	AssignmentExpression	res = 0		334597	2		=			
ANR	334605	Identifier	res		334597	0					
ANR	334606	PrimaryExpression	0		334597	1					
ANR	334607	ExpressionStatement	res |= ( number & 0x800 ) << 7	545:1:11682:11710	334597	1	True				
ANR	334608	AssignmentExpression	res |= ( number & 0x800 ) << 7		334597	0		|=			
ANR	334609	Identifier	res		334597	0					
ANR	334610	ShiftExpression	( number & 0x800 ) << 7		334597	1		<<			
ANR	334611	BitAndExpression	number & 0x800		334597	0		&			
ANR	334612	Identifier	number		334597	0					
ANR	334613	PrimaryExpression	0x800		334597	1					
ANR	334614	PrimaryExpression	7		334597	1					
ANR	334615	ExpressionStatement	res |= ( number & 0x700 ) >> 4	546:1:11713:11741	334597	2	True				
ANR	334616	AssignmentExpression	res |= ( number & 0x700 ) >> 4		334597	0		|=			
ANR	334617	Identifier	res		334597	0					
ANR	334618	ShiftExpression	( number & 0x700 ) >> 4		334597	1		>>			
ANR	334619	BitAndExpression	number & 0x700		334597	0		&			
ANR	334620	Identifier	number		334597	0					
ANR	334621	PrimaryExpression	0x700		334597	1					
ANR	334622	PrimaryExpression	4		334597	1					
ANR	334623	ExpressionStatement	res |= ( number & 0x0ff ) << 8	547:1:11744:11772	334597	3	True				
ANR	334624	AssignmentExpression	res |= ( number & 0x0ff ) << 8		334597	0		|=			
ANR	334625	Identifier	res		334597	0					
ANR	334626	ShiftExpression	( number & 0x0ff ) << 8		334597	1		<<			
ANR	334627	BitAndExpression	number & 0x0ff		334597	0		&			
ANR	334628	Identifier	number		334597	0					
ANR	334629	PrimaryExpression	0x0ff		334597	1					
ANR	334630	PrimaryExpression	8		334597	1					
ANR	334631	ReturnStatement	return res ;	548:1:11775:11785	334597	4	True				
ANR	334632	Identifier	res		334597	0					
ANR	334633	ReturnType	static ut32		334597	1					
ANR	334634	Identifier	getthzeroimmed12		334597	2					
ANR	334635	ParameterList	ut32 number		334597	3					
ANR	334636	Parameter	ut32 number	543:29:11651:11661	334597	0	True				
ANR	334637	ParameterType	ut32		334597	0					
ANR	334638	Identifier	number		334597	1					
ANR	334639	CFGEntryNode	ENTRY		334597		True				
ANR	334640	CFGExitNode	EXIT		334597		True				
ANR	334641	Symbol	number		334597						
ANR	334642	Symbol	res		334597						
ANR	334643	Function	getthzeroimmed16	551:0:11790:11991							
ANR	334644	FunctionDef	getthzeroimmed16 (ut32 number)		334643	0					
ANR	334645	CompoundStatement		551:42:11832:11991	334643	0					
ANR	334646	IdentifierDeclStatement	ut32 res = 0 ;	552:1:11835:11847	334643	0	True				
ANR	334647	IdentifierDecl	res = 0		334643	0					
ANR	334648	IdentifierDeclType	ut32		334643	0					
ANR	334649	Identifier	res		334643	1					
ANR	334650	AssignmentExpression	res = 0		334643	2		=			
ANR	334651	Identifier	res		334643	0					
ANR	334652	PrimaryExpression	0		334643	1					
ANR	334653	ExpressionStatement	res |= ( number & 0xf000 ) << 12	553:1:11850:11880	334643	1	True				
ANR	334654	AssignmentExpression	res |= ( number & 0xf000 ) << 12		334643	0		|=			
ANR	334655	Identifier	res		334643	0					
ANR	334656	ShiftExpression	( number & 0xf000 ) << 12		334643	1		<<			
ANR	334657	BitAndExpression	number & 0xf000		334643	0		&			
ANR	334658	Identifier	number		334643	0					
ANR	334659	PrimaryExpression	0xf000		334643	1					
ANR	334660	PrimaryExpression	12		334643	1					
ANR	334661	ExpressionStatement	res |= ( number & 0x0800 ) << 7	554:1:11883:11912	334643	2	True				
ANR	334662	AssignmentExpression	res |= ( number & 0x0800 ) << 7		334643	0		|=			
ANR	334663	Identifier	res		334643	0					
ANR	334664	ShiftExpression	( number & 0x0800 ) << 7		334643	1		<<			
ANR	334665	BitAndExpression	number & 0x0800		334643	0		&			
ANR	334666	Identifier	number		334643	0					
ANR	334667	PrimaryExpression	0x0800		334643	1					
ANR	334668	PrimaryExpression	7		334643	1					
ANR	334669	ExpressionStatement	res |= ( number & 0x0700 ) >> 4	555:1:11915:11944	334643	3	True				
ANR	334670	AssignmentExpression	res |= ( number & 0x0700 ) >> 4		334643	0		|=			
ANR	334671	Identifier	res		334643	0					
ANR	334672	ShiftExpression	( number & 0x0700 ) >> 4		334643	1		>>			
ANR	334673	BitAndExpression	number & 0x0700		334643	0		&			
ANR	334674	Identifier	number		334643	0					
ANR	334675	PrimaryExpression	0x0700		334643	1					
ANR	334676	PrimaryExpression	4		334643	1					
ANR	334677	ExpressionStatement	res |= ( number & 0x00ff ) << 8	556:1:11947:11976	334643	4	True				
ANR	334678	AssignmentExpression	res |= ( number & 0x00ff ) << 8		334643	0		|=			
ANR	334679	Identifier	res		334643	0					
ANR	334680	ShiftExpression	( number & 0x00ff ) << 8		334643	1		<<			
ANR	334681	BitAndExpression	number & 0x00ff		334643	0		&			
ANR	334682	Identifier	number		334643	0					
ANR	334683	PrimaryExpression	0x00ff		334643	1					
ANR	334684	PrimaryExpression	8		334643	1					
ANR	334685	ReturnStatement	return res ;	557:1:11979:11989	334643	5	True				
ANR	334686	Identifier	res		334643	0					
ANR	334687	ReturnType	static ut32		334643	1					
ANR	334688	Identifier	getthzeroimmed16		334643	2					
ANR	334689	ParameterList	ut32 number		334643	3					
ANR	334690	Parameter	ut32 number	551:29:11819:11829	334643	0	True				
ANR	334691	ParameterType	ut32		334643	0					
ANR	334692	Identifier	number		334643	1					
ANR	334693	CFGEntryNode	ENTRY		334643		True				
ANR	334694	CFGExitNode	EXIT		334643		True				
ANR	334695	Symbol	number		334643						
ANR	334696	Symbol	res		334643						
ANR	334697	Function	getthimmed12	560:0:11994:13040							
ANR	334698	FunctionDef	getthimmed12 (const char * str)		334697	0					
ANR	334699	CompoundStatement		560:42:12036:13040	334697	0					
ANR	334700	IdentifierDeclStatement	ut64 num = getnum ( str ) ;	561:1:12039:12062	334697	0	True				
ANR	334701	IdentifierDecl	num = getnum ( str )		334697	0					
ANR	334702	IdentifierDeclType	ut64		334697	0					
ANR	334703	Identifier	num		334697	1					
ANR	334704	AssignmentExpression	num = getnum ( str )		334697	2		=			
ANR	334705	Identifier	num		334697	0					
ANR	334706	CallExpression	getnum ( str )		334697	1					
ANR	334707	Callee	getnum		334697	0					
ANR	334708	Identifier	getnum		334697	0					
ANR	334709	ArgumentList	str		334697	1					
ANR	334710	Argument	str		334697	0					
ANR	334711	Identifier	str		334697	0					
ANR	334712	IfStatement	if ( err )		334697	1					
ANR	334713	Condition	err	562:5:12069:12071	334697	0	True				
ANR	334714	Identifier	err		334697	0					
ANR	334715	CompoundStatement		3:10:37:37	334697	1					
ANR	334716	ReturnStatement	return 0 ;	563:2:12078:12086	334697	0	True				
ANR	334717	PrimaryExpression	0		334697	0					
ANR	334718	IdentifierDeclStatement	st32 FSD = 0 ;	566:1:12093:12105	334697	2	True				
ANR	334719	IdentifierDecl	FSD = 0		334697	0					
ANR	334720	IdentifierDeclType	st32		334697	0					
ANR	334721	Identifier	FSD		334697	1					
ANR	334722	AssignmentExpression	FSD = 0		334697	2		=			
ANR	334723	Identifier	FSD		334697	0					
ANR	334724	PrimaryExpression	0		334697	1					
ANR	334725	IdentifierDeclStatement	ut64 result = 0 ;	567:1:12108:12123	334697	3	True				
ANR	334726	IdentifierDecl	result = 0		334697	0					
ANR	334727	IdentifierDeclType	ut64		334697	0					
ANR	334728	Identifier	result		334697	1					
ANR	334729	AssignmentExpression	result = 0		334697	2		=			
ANR	334730	Identifier	result		334697	0					
ANR	334731	PrimaryExpression	0		334697	1					
ANR	334732	IfStatement	if ( num <= 0xff )		334697	4					
ANR	334733	Condition	num <= 0xff	568:5:12130:12140	334697	0	True				
ANR	334734	RelationalExpression	num <= 0xff		334697	0		<=			
ANR	334735	Identifier	num		334697	0					
ANR	334736	PrimaryExpression	0xff		334697	1					
ANR	334737	CompoundStatement		9:18:106:106	334697	1					
ANR	334738	ReturnStatement	return num << 8 ;	569:2:12147:12162	334697	0	True				
ANR	334739	ShiftExpression	num << 8		334697	0		<<			
ANR	334740	Identifier	num		334697	0					
ANR	334741	PrimaryExpression	8		334697	1					
ANR	334742	ElseStatement	else		334697	0					
ANR	334743	IfStatement	if ( ( ( num & 0xff00ff00 ) == 0 ) && ( ( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 ) ) )		334697	0					
ANR	334744	Condition	( ( num & 0xff00ff00 ) == 0 ) && ( ( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 ) )	570:13:12177:12255	334697	0	True				
ANR	334745	AndExpression	( ( num & 0xff00ff00 ) == 0 ) && ( ( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 ) )		334697	0		&&			
ANR	334746	EqualityExpression	( num & 0xff00ff00 ) == 0		334697	0		==			
ANR	334747	BitAndExpression	num & 0xff00ff00		334697	0		&			
ANR	334748	Identifier	num		334697	0					
ANR	334749	PrimaryExpression	0xff00ff00		334697	1					
ANR	334750	PrimaryExpression	0		334697	1					
ANR	334751	EqualityExpression	( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 )		334697	1		==			
ANR	334752	BitAndExpression	num & 0x00ff0000		334697	0		&			
ANR	334753	Identifier	num		334697	0					
ANR	334754	PrimaryExpression	0x00ff0000		334697	1					
ANR	334755	ShiftExpression	( num & 0x000000ff ) << 16		334697	1		<<			
ANR	334756	BitAndExpression	num & 0x000000ff		334697	0		&			
ANR	334757	Identifier	num		334697	0					
ANR	334758	PrimaryExpression	0x000000ff		334697	1					
ANR	334759	PrimaryExpression	16		334697	1					
ANR	334760	CompoundStatement		11:95:222:222	334697	1					
ANR	334761	ExpressionStatement	result |= ( num & 0x000000ff ) << 8	571:2:12263:12296	334697	0	True				
ANR	334762	AssignmentExpression	result |= ( num & 0x000000ff ) << 8		334697	0		|=			
ANR	334763	Identifier	result		334697	0					
ANR	334764	ShiftExpression	( num & 0x000000ff ) << 8		334697	1		<<			
ANR	334765	BitAndExpression	num & 0x000000ff		334697	0		&			
ANR	334766	Identifier	num		334697	0					
ANR	334767	PrimaryExpression	0x000000ff		334697	1					
ANR	334768	PrimaryExpression	8		334697	1					
ANR	334769	ExpressionStatement	result |= 0x00000010	572:2:12300:12320	334697	1	True				
ANR	334770	AssignmentExpression	result |= 0x00000010		334697	0		|=			
ANR	334771	Identifier	result		334697	0					
ANR	334772	PrimaryExpression	0x00000010		334697	1					
ANR	334773	ReturnStatement	return result ;	573:2:12324:12337	334697	2	True				
ANR	334774	Identifier	result		334697	0					
ANR	334775	ElseStatement	else		334697	0					
ANR	334776	IfStatement	if ( ( ( num & 0x00ff00ff ) == 0 ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) )		334697	0					
ANR	334777	Condition	( ( num & 0x00ff00ff ) == 0 ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) )	574:13:12352:12430	334697	0	True				
ANR	334778	AndExpression	( ( num & 0x00ff00ff ) == 0 ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) )		334697	0		&&			
ANR	334779	EqualityExpression	( num & 0x00ff00ff ) == 0		334697	0		==			
ANR	334780	BitAndExpression	num & 0x00ff00ff		334697	0		&			
ANR	334781	Identifier	num		334697	0					
ANR	334782	PrimaryExpression	0x00ff00ff		334697	1					
ANR	334783	PrimaryExpression	0		334697	1					
ANR	334784	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 )		334697	1		==			
ANR	334785	BitAndExpression	num & 0xff000000		334697	0		&			
ANR	334786	Identifier	num		334697	0					
ANR	334787	PrimaryExpression	0xff000000		334697	1					
ANR	334788	ShiftExpression	( num & 0x0000ff00 ) << 16		334697	1		<<			
ANR	334789	BitAndExpression	num & 0x0000ff00		334697	0		&			
ANR	334790	Identifier	num		334697	0					
ANR	334791	PrimaryExpression	0x0000ff00		334697	1					
ANR	334792	PrimaryExpression	16		334697	1					
ANR	334793	CompoundStatement		15:95:397:397	334697	1					
ANR	334794	ExpressionStatement	result |= num & 0x0000ff00	575:2:12438:12464	334697	0	True				
ANR	334795	AssignmentExpression	result |= num & 0x0000ff00		334697	0		|=			
ANR	334796	Identifier	result		334697	0					
ANR	334797	BitAndExpression	num & 0x0000ff00		334697	1		&			
ANR	334798	Identifier	num		334697	0					
ANR	334799	PrimaryExpression	0x0000ff00		334697	1					
ANR	334800	ExpressionStatement	result |= 0x00000020	576:2:12468:12488	334697	1	True				
ANR	334801	AssignmentExpression	result |= 0x00000020		334697	0		|=			
ANR	334802	Identifier	result		334697	0					
ANR	334803	PrimaryExpression	0x00000020		334697	1					
ANR	334804	ReturnStatement	return result ;	577:2:12492:12505	334697	2	True				
ANR	334805	Identifier	result		334697	0					
ANR	334806	ElseStatement	else		334697	0					
ANR	334807	IfStatement	if ( ( ( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) ) )		334697	0					
ANR	334808	Condition	( ( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) )	578:13:12520:12675	334697	0	True				
ANR	334809	AndExpression	( ( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) )		334697	0		&&			
ANR	334810	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 )		334697	0		==			
ANR	334811	BitAndExpression	num & 0xff000000		334697	0		&			
ANR	334812	Identifier	num		334697	0					
ANR	334813	PrimaryExpression	0xff000000		334697	1					
ANR	334814	ShiftExpression	( num & 0x00ff0000 ) << 8		334697	1		<<			
ANR	334815	BitAndExpression	num & 0x00ff0000		334697	0		&			
ANR	334816	Identifier	num		334697	0					
ANR	334817	PrimaryExpression	0x00ff0000		334697	1					
ANR	334818	PrimaryExpression	8		334697	1					
ANR	334819	AndExpression	( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) )		334697	1		&&			
ANR	334820	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 )		334697	0		==			
ANR	334821	BitAndExpression	num & 0xff000000		334697	0		&			
ANR	334822	Identifier	num		334697	0					
ANR	334823	PrimaryExpression	0xff000000		334697	1					
ANR	334824	ShiftExpression	( num & 0x0000ff00 ) << 16		334697	1		<<			
ANR	334825	BitAndExpression	num & 0x0000ff00		334697	0		&			
ANR	334826	Identifier	num		334697	0					
ANR	334827	PrimaryExpression	0x0000ff00		334697	1					
ANR	334828	PrimaryExpression	16		334697	1					
ANR	334829	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 )		334697	1		==			
ANR	334830	BitAndExpression	num & 0xff000000		334697	0		&			
ANR	334831	Identifier	num		334697	0					
ANR	334832	PrimaryExpression	0xff000000		334697	1					
ANR	334833	ShiftExpression	( num & 0x000000ff ) << 24		334697	1		<<			
ANR	334834	BitAndExpression	num & 0x000000ff		334697	0		&			
ANR	334835	Identifier	num		334697	0					
ANR	334836	PrimaryExpression	0x000000ff		334697	1					
ANR	334837	PrimaryExpression	24		334697	1					
ANR	334838	CompoundStatement		19:172:642:642	334697	1					
ANR	334839	ExpressionStatement	result |= num & 0x0000ff00	579:2:12683:12709	334697	0	True				
ANR	334840	AssignmentExpression	result |= num & 0x0000ff00		334697	0		|=			
ANR	334841	Identifier	result		334697	0					
ANR	334842	BitAndExpression	num & 0x0000ff00		334697	1		&			
ANR	334843	Identifier	num		334697	0					
ANR	334844	PrimaryExpression	0x0000ff00		334697	1					
ANR	334845	ExpressionStatement	result |= 0x00000030	580:2:12713:12733	334697	1	True				
ANR	334846	AssignmentExpression	result |= 0x00000030		334697	0		|=			
ANR	334847	Identifier	result		334697	0					
ANR	334848	PrimaryExpression	0x00000030		334697	1					
ANR	334849	ReturnStatement	return result ;	581:2:12737:12750	334697	2	True				
ANR	334850	Identifier	result		334697	0					
ANR	334851	ElseStatement	else		334697	0					
ANR	334852	CompoundStatement		23:8:723:723	334697	0					
ANR	334853	ExpressionStatement	FSD = firstsigdigit ( num )	583:2:12764:12788	334697	0	True				
ANR	334854	AssignmentExpression	FSD = firstsigdigit ( num )		334697	0		=			
ANR	334855	Identifier	FSD		334697	0					
ANR	334856	CallExpression	firstsigdigit ( num )		334697	1					
ANR	334857	Callee	firstsigdigit		334697	0					
ANR	334858	Identifier	firstsigdigit		334697	0					
ANR	334859	ArgumentList	num		334697	1					
ANR	334860	Argument	num		334697	0					
ANR	334861	Identifier	num		334697	0					
ANR	334862	IfStatement	if ( FSD != - 1 )		334697	1					
ANR	334863	Condition	FSD != - 1	584:6:12796:12804	334697	0	True				
ANR	334864	EqualityExpression	FSD != - 1		334697	0		!=			
ANR	334865	Identifier	FSD		334697	0					
ANR	334866	UnaryOperationExpression	- 1		334697	1					
ANR	334867	UnaryOperator	-		334697	0					
ANR	334868	PrimaryExpression	1		334697	1					
ANR	334869	CompoundStatement		25:17:770:770	334697	1					
ANR	334870	ExpressionStatement	result |= ( ( num >> ( 24 - FSD ) ) & 0x0000007f ) << 8	585:10:12819:12866	334697	0	True				
ANR	334871	AssignmentExpression	result |= ( ( num >> ( 24 - FSD ) ) & 0x0000007f ) << 8		334697	0		|=			
ANR	334872	Identifier	result		334697	0					
ANR	334873	ShiftExpression	( ( num >> ( 24 - FSD ) ) & 0x0000007f ) << 8		334697	1		<<			
ANR	334874	BitAndExpression	( num >> ( 24 - FSD ) ) & 0x0000007f		334697	0		&			
ANR	334875	ShiftExpression	num >> ( 24 - FSD )		334697	0		>>			
ANR	334876	Identifier	num		334697	0					
ANR	334877	AdditiveExpression	24 - FSD		334697	1		-			
ANR	334878	PrimaryExpression	24		334697	0					
ANR	334879	Identifier	FSD		334697	1					
ANR	334880	PrimaryExpression	0x0000007f		334697	1					
ANR	334881	PrimaryExpression	8		334697	1					
ANR	334882	ExpressionStatement	result |= ( ( 8 + FSD ) & 0x1 ) << 15	586:3:12871:12902	334697	1	True				
ANR	334883	AssignmentExpression	result |= ( ( 8 + FSD ) & 0x1 ) << 15		334697	0		|=			
ANR	334884	Identifier	result		334697	0					
ANR	334885	ShiftExpression	( ( 8 + FSD ) & 0x1 ) << 15		334697	1		<<			
ANR	334886	BitAndExpression	( 8 + FSD ) & 0x1		334697	0		&			
ANR	334887	AdditiveExpression	8 + FSD		334697	0		+			
ANR	334888	PrimaryExpression	8		334697	0					
ANR	334889	Identifier	FSD		334697	1					
ANR	334890	PrimaryExpression	0x1		334697	1					
ANR	334891	PrimaryExpression	15		334697	1					
ANR	334892	ExpressionStatement	result |= ( ( 8 + FSD ) & 0xe ) << 3	587:3:12907:12937	334697	2	True				
ANR	334893	AssignmentExpression	result |= ( ( 8 + FSD ) & 0xe ) << 3		334697	0		|=			
ANR	334894	Identifier	result		334697	0					
ANR	334895	ShiftExpression	( ( 8 + FSD ) & 0xe ) << 3		334697	1		<<			
ANR	334896	BitAndExpression	( 8 + FSD ) & 0xe		334697	0		&			
ANR	334897	AdditiveExpression	8 + FSD		334697	0		+			
ANR	334898	PrimaryExpression	8		334697	0					
ANR	334899	Identifier	FSD		334697	1					
ANR	334900	PrimaryExpression	0xe		334697	1					
ANR	334901	PrimaryExpression	3		334697	1					
ANR	334902	ExpressionStatement	result |= ( ( 8 + FSD ) & 0x10 ) << 14	588:3:12942:12974	334697	3	True				
ANR	334903	AssignmentExpression	result |= ( ( 8 + FSD ) & 0x10 ) << 14		334697	0		|=			
ANR	334904	Identifier	result		334697	0					
ANR	334905	ShiftExpression	( ( 8 + FSD ) & 0x10 ) << 14		334697	1		<<			
ANR	334906	BitAndExpression	( 8 + FSD ) & 0x10		334697	0		&			
ANR	334907	AdditiveExpression	8 + FSD		334697	0		+			
ANR	334908	PrimaryExpression	8		334697	0					
ANR	334909	Identifier	FSD		334697	1					
ANR	334910	PrimaryExpression	0x10		334697	1					
ANR	334911	PrimaryExpression	14		334697	1					
ANR	334912	ReturnStatement	return result ;	589:3:12979:12992	334697	4	True				
ANR	334913	Identifier	result		334697	0					
ANR	334914	ElseStatement	else		334697	0					
ANR	334915	CompoundStatement		31:9:966:966	334697	0					
ANR	334916	ExpressionStatement	err = true	591:3:13008:13018	334697	0	True				
ANR	334917	AssignmentExpression	err = true		334697	0		=			
ANR	334918	Identifier	err		334697	0					
ANR	334919	Identifier	true		334697	1					
ANR	334920	ReturnStatement	return 0 ;	592:3:13023:13031	334697	1	True				
ANR	334921	PrimaryExpression	0		334697	0					
ANR	334922	ReturnType	static ut32		334697	1					
ANR	334923	Identifier	getthimmed12		334697	2					
ANR	334924	ParameterList	const char * str		334697	3					
ANR	334925	Parameter	const char * str	560:25:12019:12033	334697	0	True				
ANR	334926	ParameterType	const char *		334697	0					
ANR	334927	Identifier	str		334697	1					
ANR	334928	CFGEntryNode	ENTRY		334697		True				
ANR	334929	CFGExitNode	EXIT		334697		True				
ANR	334930	Symbol	str		334697						
ANR	334931	Symbol	result		334697						
ANR	334932	Symbol	err		334697						
ANR	334933	Symbol	FSD		334697						
ANR	334934	Symbol	num		334697						
ANR	334935	Symbol	getnum		334697						
ANR	334936	Symbol	firstsigdigit		334697						
ANR	334937	Symbol	true		334697						
ANR	334938	Function	getrange	597:0:13043:13326							
ANR	334939	FunctionDef	getrange (char * s)		334938	0					
ANR	334940	CompoundStatement		597:31:13074:13326	334938	0					
ANR	334941	IdentifierDeclStatement	char * p = NULL ;	598:1:13077:13091	334938	0	True				
ANR	334942	IdentifierDecl	* p = NULL		334938	0					
ANR	334943	IdentifierDeclType	char *		334938	0					
ANR	334944	Identifier	p		334938	1					
ANR	334945	AssignmentExpression	* p = NULL		334938	2		=			
ANR	334946	Identifier	NULL		334938	0					
ANR	334947	Identifier	NULL		334938	1					
ANR	334948	WhileStatement	while ( s && * s )		334938	1					
ANR	334949	Condition	s && * s	599:8:13101:13107	334938	0	True				
ANR	334950	AndExpression	s && * s		334938	0		&&			
ANR	334951	Identifier	s		334938	0					
ANR	334952	UnaryOperationExpression	* s		334938	1					
ANR	334953	UnaryOperator	*		334938	0					
ANR	334954	Identifier	s		334938	1					
ANR	334955	CompoundStatement		3:17:35:35	334938	1					
ANR	334956	IfStatement	"if ( * s == ',' )"		334938	0					
ANR	334957	Condition	"* s == ','"	600:6:13118:13126	334938	0	True				
ANR	334958	EqualityExpression	"* s == ','"		334938	0		==			
ANR	334959	UnaryOperationExpression	* s		334938	0					
ANR	334960	UnaryOperator	*		334938	0					
ANR	334961	Identifier	s		334938	1					
ANR	334962	PrimaryExpression	"','"		334938	1					
ANR	334963	CompoundStatement		4:17:54:54	334938	1					
ANR	334964	ExpressionStatement	p = s + 1	601:3:13134:13141	334938	0	True				
ANR	334965	AssignmentExpression	p = s + 1		334938	0		=			
ANR	334966	Identifier	p		334938	0					
ANR	334967	AdditiveExpression	s + 1		334938	1		+			
ANR	334968	Identifier	s		334938	0					
ANR	334969	PrimaryExpression	1		334938	1					
ANR	334970	ExpressionStatement	* p = 0	602:3:13146:13150	334938	1	True				
ANR	334971	AssignmentExpression	* p = 0		334938	0		=			
ANR	334972	UnaryOperationExpression	* p		334938	0					
ANR	334973	UnaryOperator	*		334938	0					
ANR	334974	Identifier	p		334938	1					
ANR	334975	PrimaryExpression	0		334938	1					
ANR	334976	IfStatement	if ( * s == '[' || * s == ']' )		334938	1					
ANR	334977	Condition	* s == '[' || * s == ']'	604:6:13162:13183	334938	0	True				
ANR	334978	OrExpression	* s == '[' || * s == ']'		334938	0		||			
ANR	334979	EqualityExpression	* s == '['		334938	0		==			
ANR	334980	UnaryOperationExpression	* s		334938	0					
ANR	334981	UnaryOperator	*		334938	0					
ANR	334982	Identifier	s		334938	1					
ANR	334983	PrimaryExpression	'['		334938	1					
ANR	334984	EqualityExpression	* s == ']'		334938	1		==			
ANR	334985	UnaryOperationExpression	* s		334938	0					
ANR	334986	UnaryOperator	*		334938	0					
ANR	334987	Identifier	s		334938	1					
ANR	334988	PrimaryExpression	']'		334938	1					
ANR	334989	CompoundStatement		8:30:111:111	334938	1					
ANR	334990	ExpressionStatement	"memmove ( s , s + 1 , strlen ( s + 1 ) + 1 )"	605:3:13191:13229	334938	0	True				
ANR	334991	CallExpression	"memmove ( s , s + 1 , strlen ( s + 1 ) + 1 )"		334938	0					
ANR	334992	Callee	memmove		334938	0					
ANR	334993	Identifier	memmove		334938	0					
ANR	334994	ArgumentList	s		334938	1					
ANR	334995	Argument	s		334938	0					
ANR	334996	Identifier	s		334938	0					
ANR	334997	Argument	s + 1		334938	1					
ANR	334998	AdditiveExpression	s + 1		334938	0		+			
ANR	334999	Identifier	s		334938	0					
ANR	335000	PrimaryExpression	1		334938	1					
ANR	335001	Argument	strlen ( s + 1 ) + 1		334938	2					
ANR	335002	AdditiveExpression	strlen ( s + 1 ) + 1		334938	0		+			
ANR	335003	CallExpression	strlen ( s + 1 )		334938	0					
ANR	335004	Callee	strlen		334938	0					
ANR	335005	Identifier	strlen		334938	0					
ANR	335006	ArgumentList	s + 1		334938	1					
ANR	335007	Argument	s + 1		334938	0					
ANR	335008	AdditiveExpression	s + 1		334938	0		+			
ANR	335009	Identifier	s		334938	0					
ANR	335010	PrimaryExpression	1		334938	1					
ANR	335011	PrimaryExpression	1		334938	1					
ANR	335012	IfStatement	if ( * s == '}' )		334938	2					
ANR	335013	Condition	* s == '}'	607:6:13241:13249	334938	0	True				
ANR	335014	EqualityExpression	* s == '}'		334938	0		==			
ANR	335015	UnaryOperationExpression	* s		334938	0					
ANR	335016	UnaryOperator	*		334938	0					
ANR	335017	Identifier	s		334938	1					
ANR	335018	PrimaryExpression	'}'		334938	1					
ANR	335019	CompoundStatement		11:17:177:177	334938	1					
ANR	335020	ExpressionStatement	* s = 0	608:3:13257:13263	334938	0	True				
ANR	335021	AssignmentExpression	* s = 0		334938	0		=			
ANR	335022	UnaryOperationExpression	* s		334938	0					
ANR	335023	UnaryOperator	*		334938	0					
ANR	335024	Identifier	s		334938	1					
ANR	335025	PrimaryExpression	0		334938	1					
ANR	335026	ExpressionStatement	s ++	610:2:13271:13274	334938	3	True				
ANR	335027	PostIncDecOperationExpression	s ++		334938	0					
ANR	335028	Identifier	s		334938	0					
ANR	335029	IncDec	++		334938	1					
ANR	335030	WhileStatement	while ( p && * p == ' ' )		334938	2					
ANR	335031	Condition	p && * p == ' '	612:8:13287:13300	334938	0	True				
ANR	335032	AndExpression	p && * p == ' '		334938	0		&&			
ANR	335033	Identifier	p		334938	0					
ANR	335034	EqualityExpression	* p == ' '		334938	1		==			
ANR	335035	UnaryOperationExpression	* p		334938	0					
ANR	335036	UnaryOperator	*		334938	0					
ANR	335037	Identifier	p		334938	1					
ANR	335038	PrimaryExpression	' '		334938	1					
ANR	335039	CompoundStatement		16:24:228:228	334938	1					
ANR	335040	ExpressionStatement	p ++	613:2:13307:13310	334938	0	True				
ANR	335041	PostIncDecOperationExpression	p ++		334938	0					
ANR	335042	Identifier	p		334938	0					
ANR	335043	IncDec	++		334938	1					
ANR	335044	ReturnStatement	return p ;	615:1:13316:13324	334938	3	True				
ANR	335045	Identifier	p		334938	0					
ANR	335046	ReturnType	static char *		334938	1					
ANR	335047	Identifier	getrange		334938	2					
ANR	335048	ParameterList	char * s		334938	3					
ANR	335049	Parameter	char * s	597:22:13065:13071	334938	0	True				
ANR	335050	ParameterType	char *		334938	0					
ANR	335051	Identifier	s		334938	1					
ANR	335052	CFGEntryNode	ENTRY		334938		True				
ANR	335053	CFGExitNode	EXIT		334938		True				
ANR	335054	Symbol	p		334938						
ANR	335055	Symbol	strlen		334938						
ANR	335056	Symbol	s		334938						
ANR	335057	Symbol	NULL		334938						
ANR	335058	Symbol	* p		334938						
ANR	335059	Symbol	* s		334938						
ANR	335060	Function	getreg	619:0:13360:13805							
ANR	335061	FunctionDef	getreg (const char * str)		335060	0					
ANR	335062	CompoundStatement		619:35:13395:13805	335060	0					
ANR	335063	IdentifierDeclStatement	int i ;	620:1:13398:13403	335060	0	True				
ANR	335064	IdentifierDecl	i		335060	0					
ANR	335065	IdentifierDeclType	int		335060	0					
ANR	335066	Identifier	i		335060	1					
ANR	335067	IdentifierDeclStatement	char * ep ;	621:1:13406:13414	335060	1	True				
ANR	335068	IdentifierDecl	* ep		335060	0					
ANR	335069	IdentifierDeclType	char *		335060	0					
ANR	335070	Identifier	ep		335060	1					
ANR	335071	IdentifierDeclStatement	"const char * aliases [ ] = { ""sl"" , ""fp"" , ""ip"" , ""sp"" , ""lr"" , ""pc"" , NULL } ;"	622:1:13417:13485	335060	2	True				
ANR	335072	IdentifierDecl	"* aliases [ ] = { ""sl"" , ""fp"" , ""ip"" , ""sp"" , ""lr"" , ""pc"" , NULL }"		335060	0					
ANR	335073	IdentifierDeclType	const char * [ ]		335060	0					
ANR	335074	Identifier	aliases		335060	1					
ANR	335075	AssignmentExpression	"* aliases [ ] = { ""sl"" , ""fp"" , ""ip"" , ""sp"" , ""lr"" , ""pc"" , NULL }"		335060	2		=			
ANR	335076	Identifier	aliases		335060	0					
ANR	335077	InitializerList	"""sl"""		335060	1					
ANR	335078	PrimaryExpression	"""sl"""		335060	0					
ANR	335079	PrimaryExpression	"""fp"""		335060	1					
ANR	335080	PrimaryExpression	"""ip"""		335060	2					
ANR	335081	PrimaryExpression	"""sp"""		335060	3					
ANR	335082	PrimaryExpression	"""lr"""		335060	4					
ANR	335083	PrimaryExpression	"""pc"""		335060	5					
ANR	335084	Identifier	NULL		335060	6					
ANR	335085	IfStatement	if ( ! str || ! * str )		335060	3					
ANR	335086	Condition	! str || ! * str	623:5:13492:13504	335060	0	True				
ANR	335087	OrExpression	! str || ! * str		335060	0		||			
ANR	335088	UnaryOperationExpression	! str		335060	0					
ANR	335089	UnaryOperator	!		335060	0					
ANR	335090	Identifier	str		335060	1					
ANR	335091	UnaryOperationExpression	! * str		335060	1					
ANR	335092	UnaryOperator	!		335060	0					
ANR	335093	UnaryOperationExpression	* str		335060	1					
ANR	335094	UnaryOperator	*		335060	0					
ANR	335095	Identifier	str		335060	1					
ANR	335096	CompoundStatement		5:20:111:111	335060	1					
ANR	335097	ReturnStatement	return - 1 ;	624:2:13511:13520	335060	0	True				
ANR	335098	UnaryOperationExpression	- 1		335060	0					
ANR	335099	UnaryOperator	-		335060	0					
ANR	335100	PrimaryExpression	1		335060	1					
ANR	335101	IfStatement	if ( * str == 'r' )		335060	4					
ANR	335102	Condition	* str == 'r'	626:5:13530:13540	335060	0	True				
ANR	335103	EqualityExpression	* str == 'r'		335060	0		==			
ANR	335104	UnaryOperationExpression	* str		335060	0					
ANR	335105	UnaryOperator	*		335060	0					
ANR	335106	Identifier	str		335060	1					
ANR	335107	PrimaryExpression	'r'		335060	1					
ANR	335108	CompoundStatement		9:2:151:186	335060	1					
ANR	335109	IdentifierDeclStatement	"int reg = strtol ( str + 1 , & ep , 10 ) ;"	627:2:13547:13582	335060	0	True				
ANR	335110	IdentifierDecl	"reg = strtol ( str + 1 , & ep , 10 )"		335060	0					
ANR	335111	IdentifierDeclType	int		335060	0					
ANR	335112	Identifier	reg		335060	1					
ANR	335113	AssignmentExpression	"reg = strtol ( str + 1 , & ep , 10 )"		335060	2		=			
ANR	335114	Identifier	reg		335060	0					
ANR	335115	CallExpression	"strtol ( str + 1 , & ep , 10 )"		335060	1					
ANR	335116	Callee	strtol		335060	0					
ANR	335117	Identifier	strtol		335060	0					
ANR	335118	ArgumentList	str + 1		335060	1					
ANR	335119	Argument	str + 1		335060	0					
ANR	335120	AdditiveExpression	str + 1		335060	0		+			
ANR	335121	Identifier	str		335060	0					
ANR	335122	PrimaryExpression	1		335060	1					
ANR	335123	Argument	& ep		335060	1					
ANR	335124	UnaryOperationExpression	& ep		335060	0					
ANR	335125	UnaryOperator	&		335060	0					
ANR	335126	Identifier	ep		335060	1					
ANR	335127	Argument	10		335060	2					
ANR	335128	PrimaryExpression	10		335060	0					
ANR	335129	IfStatement	if ( ( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' ) )		335060	1					
ANR	335130	Condition	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )	628:6:13590:13624	335060	0	True				
ANR	335131	OrExpression	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )		335060	0		||			
ANR	335132	EqualityExpression	ep [ 0 ] != '\\0'		335060	0		!=			
ANR	335133	ArrayIndexing	ep [ 0 ]		335060	0					
ANR	335134	Identifier	ep		335060	0					
ANR	335135	PrimaryExpression	0		335060	1					
ANR	335136	PrimaryExpression	'\\0'		335060	1					
ANR	335137	EqualityExpression	str [ 1 ] == '\\0'		335060	1		==			
ANR	335138	ArrayIndexing	str [ 1 ]		335060	0					
ANR	335139	Identifier	str		335060	0					
ANR	335140	PrimaryExpression	1		335060	1					
ANR	335141	PrimaryExpression	'\\0'		335060	1					
ANR	335142	CompoundStatement		10:43:231:231	335060	1					
ANR	335143	ReturnStatement	return - 1 ;	629:3:13632:13641	335060	0	True				
ANR	335144	UnaryOperationExpression	- 1		335060	0					
ANR	335145	UnaryOperator	-		335060	0					
ANR	335146	PrimaryExpression	1		335060	1					
ANR	335147	IfStatement	if ( reg < 16 && reg >= 0 )		335060	2					
ANR	335148	Condition	reg < 16 && reg >= 0	631:6:13653:13672	335060	0	True				
ANR	335149	AndExpression	reg < 16 && reg >= 0		335060	0		&&			
ANR	335150	RelationalExpression	reg < 16		335060	0		<			
ANR	335151	Identifier	reg		335060	0					
ANR	335152	PrimaryExpression	16		335060	1					
ANR	335153	RelationalExpression	reg >= 0		335060	1		>=			
ANR	335154	Identifier	reg		335060	0					
ANR	335155	PrimaryExpression	0		335060	1					
ANR	335156	CompoundStatement		13:28:279:279	335060	1					
ANR	335157	ReturnStatement	return reg ;	632:3:13680:13690	335060	0	True				
ANR	335158	Identifier	reg		335060	0					
ANR	335159	ForStatement	for ( i = 0 ; aliases [ i ] ; i ++ )		335060	5					
ANR	335160	ForInit	i = 0 ;	635:6:13705:13708	335060	0	True				
ANR	335161	AssignmentExpression	i = 0		335060	0		=			
ANR	335162	Identifier	i		335060	0					
ANR	335163	PrimaryExpression	0		335060	1					
ANR	335164	Condition	aliases [ i ]	635:11:13710:13719	335060	1	True				
ANR	335165	ArrayIndexing	aliases [ i ]		335060	0					
ANR	335166	Identifier	aliases		335060	0					
ANR	335167	Identifier	i		335060	1					
ANR	335168	PostIncDecOperationExpression	i ++	635:23:13722:13724	335060	2	True				
ANR	335169	Identifier	i		335060	0					
ANR	335170	IncDec	++		335060	1					
ANR	335171	CompoundStatement		17:28:331:331	335060	3					
ANR	335172	IfStatement	"if ( ! strcmpnull ( str , aliases [ i ] ) )"		335060	0					
ANR	335173	Condition	"! strcmpnull ( str , aliases [ i ] )"	636:6:13735:13763	335060	0	True				
ANR	335174	UnaryOperationExpression	"! strcmpnull ( str , aliases [ i ] )"		335060	0					
ANR	335175	UnaryOperator	!		335060	0					
ANR	335176	CallExpression	"strcmpnull ( str , aliases [ i ] )"		335060	1					
ANR	335177	Callee	strcmpnull		335060	0					
ANR	335178	Identifier	strcmpnull		335060	0					
ANR	335179	ArgumentList	str		335060	1					
ANR	335180	Argument	str		335060	0					
ANR	335181	Identifier	str		335060	0					
ANR	335182	Argument	aliases [ i ]		335060	1					
ANR	335183	ArrayIndexing	aliases [ i ]		335060	0					
ANR	335184	Identifier	aliases		335060	0					
ANR	335185	Identifier	i		335060	1					
ANR	335186	CompoundStatement		18:37:370:370	335060	1					
ANR	335187	ReturnStatement	return 10 + i ;	637:3:13771:13784	335060	0	True				
ANR	335188	AdditiveExpression	10 + i		335060	0		+			
ANR	335189	PrimaryExpression	10		335060	0					
ANR	335190	Identifier	i		335060	1					
ANR	335191	ReturnStatement	return - 1 ;	640:1:13794:13803	335060	6	True				
ANR	335192	UnaryOperationExpression	- 1		335060	0					
ANR	335193	UnaryOperator	-		335060	0					
ANR	335194	PrimaryExpression	1		335060	1					
ANR	335195	ReturnType	static int		335060	1					
ANR	335196	Identifier	getreg		335060	2					
ANR	335197	ParameterList	const char * str		335060	3					
ANR	335198	Parameter	const char * str	619:18:13378:13392	335060	0	True				
ANR	335199	ParameterType	const char *		335060	0					
ANR	335200	Identifier	str		335060	1					
ANR	335201	CFGEntryNode	ENTRY		335060		True				
ANR	335202	CFGExitNode	EXIT		335060		True				
ANR	335203	Symbol	aliases		335060						
ANR	335204	Symbol	NULL		335060						
ANR	335205	Symbol	i		335060						
ANR	335206	Symbol	ep		335060						
ANR	335207	Symbol	str		335060						
ANR	335208	Symbol	strcmpnull		335060						
ANR	335209	Symbol	* ep		335060						
ANR	335210	Symbol	* i		335060						
ANR	335211	Symbol	& ep		335060						
ANR	335212	Symbol	reg		335060						
ANR	335213	Symbol	strtol		335060						
ANR	335214	Symbol	* aliases		335060						
ANR	335215	Symbol	* str		335060						
ANR	335216	Function	getlistmask	644:0:13809:14946							
ANR	335217	FunctionDef	getlistmask (char * input)		335216	0					
ANR	335218	CompoundStatement		644:37:13846:14946	335216	0					
ANR	335219	IdentifierDeclStatement	"st32 tempres , res = 0 ;"	645:1:13849:13870	335216	0	True				
ANR	335220	IdentifierDecl	tempres		335216	0					
ANR	335221	IdentifierDeclType	st32		335216	0					
ANR	335222	Identifier	tempres		335216	1					
ANR	335223	IdentifierDecl	res = 0		335216	1					
ANR	335224	IdentifierDeclType	st32		335216	0					
ANR	335225	Identifier	res		335216	1					
ANR	335226	AssignmentExpression	res = 0		335216	2		=			
ANR	335227	Identifier	res		335216	0					
ANR	335228	PrimaryExpression	0		335216	1					
ANR	335229	IdentifierDeclStatement	"int i , j , start , end ;"	646:1:13873:13893	335216	1	True				
ANR	335230	IdentifierDecl	i		335216	0					
ANR	335231	IdentifierDeclType	int		335216	0					
ANR	335232	Identifier	i		335216	1					
ANR	335233	IdentifierDecl	j		335216	1					
ANR	335234	IdentifierDeclType	int		335216	0					
ANR	335235	Identifier	j		335216	1					
ANR	335236	IdentifierDecl	start		335216	2					
ANR	335237	IdentifierDeclType	int		335216	0					
ANR	335238	Identifier	start		335216	1					
ANR	335239	IdentifierDecl	end		335216	3					
ANR	335240	IdentifierDeclType	int		335216	0					
ANR	335241	Identifier	end		335216	1					
ANR	335242	IdentifierDeclStatement	char * temp = NULL ;	647:1:13896:13913	335216	2	True				
ANR	335243	IdentifierDecl	* temp = NULL		335216	0					
ANR	335244	IdentifierDeclType	char *		335216	0					
ANR	335245	Identifier	temp		335216	1					
ANR	335246	AssignmentExpression	* temp = NULL		335216	2		=			
ANR	335247	Identifier	NULL		335216	0					
ANR	335248	Identifier	NULL		335216	1					
ANR	335249	IdentifierDeclStatement	char * otemp = NULL ;	648:1:13916:13934	335216	3	True				
ANR	335250	IdentifierDecl	* otemp = NULL		335216	0					
ANR	335251	IdentifierDeclType	char *		335216	0					
ANR	335252	Identifier	otemp		335216	1					
ANR	335253	AssignmentExpression	* otemp = NULL		335216	2		=			
ANR	335254	Identifier	NULL		335216	0					
ANR	335255	Identifier	NULL		335216	1					
ANR	335256	IdentifierDeclStatement	char * temp2 = malloc ( strlen ( input ) + 1 ) ;	649:1:13937:13978	335216	4	True				
ANR	335257	IdentifierDecl	* temp2 = malloc ( strlen ( input ) + 1 )		335216	0					
ANR	335258	IdentifierDeclType	char *		335216	0					
ANR	335259	Identifier	temp2		335216	1					
ANR	335260	AssignmentExpression	* temp2 = malloc ( strlen ( input ) + 1 )		335216	2		=			
ANR	335261	Identifier	temp2		335216	0					
ANR	335262	CallExpression	malloc ( strlen ( input ) + 1 )		335216	1					
ANR	335263	Callee	malloc		335216	0					
ANR	335264	Identifier	malloc		335216	0					
ANR	335265	ArgumentList	strlen ( input ) + 1		335216	1					
ANR	335266	Argument	strlen ( input ) + 1		335216	0					
ANR	335267	AdditiveExpression	strlen ( input ) + 1		335216	0		+			
ANR	335268	CallExpression	strlen ( input )		335216	0					
ANR	335269	Callee	strlen		335216	0					
ANR	335270	Identifier	strlen		335216	0					
ANR	335271	ArgumentList	input		335216	1					
ANR	335272	Argument	input		335216	0					
ANR	335273	Identifier	input		335216	0					
ANR	335274	PrimaryExpression	1		335216	1					
ANR	335275	IfStatement	if ( ! temp2 )		335216	5					
ANR	335276	Condition	! temp2	650:5:13985:13990	335216	0	True				
ANR	335277	UnaryOperationExpression	! temp2		335216	0					
ANR	335278	UnaryOperator	!		335216	0					
ANR	335279	Identifier	temp2		335216	1					
ANR	335280	CompoundStatement		7:13:146:146	335216	1					
ANR	335281	ExpressionStatement	res = - 1	651:2:13997:14005	335216	0	True				
ANR	335282	AssignmentExpression	res = - 1		335216	0		=			
ANR	335283	Identifier	res		335216	0					
ANR	335284	UnaryOperationExpression	- 1		335216	1					
ANR	335285	UnaryOperator	-		335216	0					
ANR	335286	PrimaryExpression	1		335216	1					
ANR	335287	GotoStatement	goto end ;	652:2:14009:14017	335216	1	True				
ANR	335288	Identifier	end		335216	0					
ANR	335289	ExpressionStatement	temp = ( char * ) malloc ( strlen ( input ) + 1 )	654:1:14023:14065	335216	6	True				
ANR	335290	AssignmentExpression	temp = ( char * ) malloc ( strlen ( input ) + 1 )		335216	0		=			
ANR	335291	Identifier	temp		335216	0					
ANR	335292	CastExpression	( char * ) malloc ( strlen ( input ) + 1 )		335216	1					
ANR	335293	CastTarget	char *		335216	0					
ANR	335294	CallExpression	malloc ( strlen ( input ) + 1 )		335216	1					
ANR	335295	Callee	malloc		335216	0					
ANR	335296	Identifier	malloc		335216	0					
ANR	335297	ArgumentList	strlen ( input ) + 1		335216	1					
ANR	335298	Argument	strlen ( input ) + 1		335216	0					
ANR	335299	AdditiveExpression	strlen ( input ) + 1		335216	0		+			
ANR	335300	CallExpression	strlen ( input )		335216	0					
ANR	335301	Callee	strlen		335216	0					
ANR	335302	Identifier	strlen		335216	0					
ANR	335303	ArgumentList	input		335216	1					
ANR	335304	Argument	input		335216	0					
ANR	335305	Identifier	input		335216	0					
ANR	335306	PrimaryExpression	1		335216	1					
ANR	335307	IfStatement	if ( ! temp )		335216	7					
ANR	335308	Condition	! temp	655:5:14072:14076	335216	0	True				
ANR	335309	UnaryOperationExpression	! temp		335216	0					
ANR	335310	UnaryOperator	!		335216	0					
ANR	335311	Identifier	temp		335216	1					
ANR	335312	CompoundStatement		12:12:232:232	335216	1					
ANR	335313	ExpressionStatement	res = - 1	656:2:14083:14091	335216	0	True				
ANR	335314	AssignmentExpression	res = - 1		335216	0		=			
ANR	335315	Identifier	res		335216	0					
ANR	335316	UnaryOperationExpression	- 1		335216	1					
ANR	335317	UnaryOperator	-		335216	0					
ANR	335318	PrimaryExpression	1		335216	1					
ANR	335319	GotoStatement	goto end ;	657:2:14095:14103	335216	1	True				
ANR	335320	Identifier	end		335216	0					
ANR	335321	ExpressionStatement	otemp = temp	659:1:14109:14121	335216	8	True				
ANR	335322	AssignmentExpression	otemp = temp		335216	0		=			
ANR	335323	Identifier	otemp		335216	0					
ANR	335324	Identifier	temp		335216	1					
ANR	335325	WhileStatement	while ( * input != '\\0' )		335216	9					
ANR	335326	Condition	* input != '\\0'	660:8:14131:14144	335216	0	True				
ANR	335327	EqualityExpression	* input != '\\0'		335216	0		!=			
ANR	335328	UnaryOperationExpression	* input		335216	0					
ANR	335329	UnaryOperator	*		335216	0					
ANR	335330	Identifier	input		335216	1					
ANR	335331	PrimaryExpression	'\\0'		335216	1					
ANR	335332	CompoundStatement		17:24:300:300	335216	1					
ANR	335333	ForStatement	for ( ; * input == ' ' ; input ++ )		335216	0					
ANR	335334	Condition	* input == ' '	661:9:14158:14170	335216	0	True				
ANR	335335	EqualityExpression	* input == ' '		335216	0		==			
ANR	335336	UnaryOperationExpression	* input		335216	0					
ANR	335337	UnaryOperator	*		335216	0					
ANR	335338	Identifier	input		335216	1					
ANR	335339	PrimaryExpression	' '		335216	1					
ANR	335340	PostIncDecOperationExpression	input ++	661:24:14173:14179	335216	1	True				
ANR	335341	Identifier	input		335216	0					
ANR	335342	IncDec	++		335216	1					
ANR	335343	CompoundStatement		18:33:335:335	335216	2					
ANR	335344	ExpressionStatement		662:3:14187:14187	335216	0	True				
ANR	335345	ForStatement	"for ( i = 0 ; input [ i ] != ',' && input [ i ] != '\\0' ; i ++ )"		335216	1					
ANR	335346	ForInit	i = 0 ;	664:7:14200:14205	335216	0	True				
ANR	335347	AssignmentExpression	i = 0		335216	0		=			
ANR	335348	Identifier	i		335216	0					
ANR	335349	PrimaryExpression	0		335216	1					
ANR	335350	Condition	"input [ i ] != ',' && input [ i ] != '\\0'"	664:14:14207:14241	335216	1	True				
ANR	335351	AndExpression	"input [ i ] != ',' && input [ i ] != '\\0'"		335216	0		&&			
ANR	335352	EqualityExpression	"input [ i ] != ','"		335216	0		!=			
ANR	335353	ArrayIndexing	input [ i ]		335216	0					
ANR	335354	Identifier	input		335216	0					
ANR	335355	Identifier	i		335216	1					
ANR	335356	PrimaryExpression	"','"		335216	1					
ANR	335357	EqualityExpression	input [ i ] != '\\0'		335216	1		!=			
ANR	335358	ArrayIndexing	input [ i ]		335216	0					
ANR	335359	Identifier	input		335216	0					
ANR	335360	Identifier	i		335216	1					
ANR	335361	PrimaryExpression	'\\0'		335216	1					
ANR	335362	PostIncDecOperationExpression	i ++	664:51:14244:14246	335216	2	True				
ANR	335363	Identifier	i		335216	0					
ANR	335364	IncDec	++		335216	1					
ANR	335365	CompoundStatement		21:56:402:402	335216	3					
ANR	335366	ExpressionStatement		665:3:14254:14254	335216	0	True				
ANR	335367	ExpressionStatement	"r_str_ncpy ( temp , input , i + 1 )"	667:2:14262:14293	335216	2	True				
ANR	335368	CallExpression	"r_str_ncpy ( temp , input , i + 1 )"		335216	0					
ANR	335369	Callee	r_str_ncpy		335216	0					
ANR	335370	Identifier	r_str_ncpy		335216	0					
ANR	335371	ArgumentList	temp		335216	1					
ANR	335372	Argument	temp		335216	0					
ANR	335373	Identifier	temp		335216	0					
ANR	335374	Argument	input		335216	1					
ANR	335375	Identifier	input		335216	0					
ANR	335376	Argument	i + 1		335216	2					
ANR	335377	AdditiveExpression	i + 1		335216	0		+			
ANR	335378	Identifier	i		335216	0					
ANR	335379	PrimaryExpression	1		335216	1					
ANR	335380	ExpressionStatement	input += i	669:2:14298:14308	335216	3	True				
ANR	335381	AssignmentExpression	input += i		335216	0		+=			
ANR	335382	Identifier	input		335216	0					
ANR	335383	Identifier	i		335216	1					
ANR	335384	IfStatement	if ( * input != '\\0' )		335216	4					
ANR	335385	Condition	* input != '\\0'	670:6:14316:14329	335216	0	True				
ANR	335386	EqualityExpression	* input != '\\0'		335216	0		!=			
ANR	335387	UnaryOperationExpression	* input		335216	0					
ANR	335388	UnaryOperator	*		335216	0					
ANR	335389	Identifier	input		335216	1					
ANR	335390	PrimaryExpression	'\\0'		335216	1					
ANR	335391	CompoundStatement		27:22:485:485	335216	1					
ANR	335392	ExpressionStatement	input ++	671:3:14337:14344	335216	0	True				
ANR	335393	PostIncDecOperationExpression	input ++		335216	0					
ANR	335394	Identifier	input		335216	0					
ANR	335395	IncDec	++		335216	1					
ANR	335396	ForStatement	for ( i = 0 ; temp [ i ] != '-' && temp [ i ] != '\\0' ; i ++ )		335216	5					
ANR	335397	ForInit	i = 0 ;	674:7:14358:14363	335216	0	True				
ANR	335398	AssignmentExpression	i = 0		335216	0		=			
ANR	335399	Identifier	i		335216	0					
ANR	335400	PrimaryExpression	0		335216	1					
ANR	335401	Condition	temp [ i ] != '-' && temp [ i ] != '\\0'	674:14:14365:14397	335216	1	True				
ANR	335402	AndExpression	temp [ i ] != '-' && temp [ i ] != '\\0'		335216	0		&&			
ANR	335403	EqualityExpression	temp [ i ] != '-'		335216	0		!=			
ANR	335404	ArrayIndexing	temp [ i ]		335216	0					
ANR	335405	Identifier	temp		335216	0					
ANR	335406	Identifier	i		335216	1					
ANR	335407	PrimaryExpression	'-'		335216	1					
ANR	335408	EqualityExpression	temp [ i ] != '\\0'		335216	1		!=			
ANR	335409	ArrayIndexing	temp [ i ]		335216	0					
ANR	335410	Identifier	temp		335216	0					
ANR	335411	Identifier	i		335216	1					
ANR	335412	PrimaryExpression	'\\0'		335216	1					
ANR	335413	PostIncDecOperationExpression	i ++	674:49:14400:14402	335216	2	True				
ANR	335414	Identifier	i		335216	0					
ANR	335415	IncDec	++		335216	1					
ANR	335416	CompoundStatement		31:54:558:558	335216	3					
ANR	335417	ExpressionStatement		675:3:14410:14410	335216	0	True				
ANR	335418	IfStatement	if ( i == strlen ( temp ) )		335216	6					
ANR	335419	Condition	i == strlen ( temp )	677:6:14422:14439	335216	0	True				
ANR	335420	EqualityExpression	i == strlen ( temp )		335216	0		==			
ANR	335421	Identifier	i		335216	0					
ANR	335422	CallExpression	strlen ( temp )		335216	1					
ANR	335423	Callee	strlen		335216	0					
ANR	335424	Identifier	strlen		335216	0					
ANR	335425	ArgumentList	temp		335216	1					
ANR	335426	Argument	temp		335216	0					
ANR	335427	Identifier	temp		335216	0					
ANR	335428	CompoundStatement		34:26:595:595	335216	1					
ANR	335429	ExpressionStatement	tempres = getreg ( temp )	678:3:14447:14470	335216	0	True				
ANR	335430	AssignmentExpression	tempres = getreg ( temp )		335216	0		=			
ANR	335431	Identifier	tempres		335216	0					
ANR	335432	CallExpression	getreg ( temp )		335216	1					
ANR	335433	Callee	getreg		335216	0					
ANR	335434	Identifier	getreg		335216	0					
ANR	335435	ArgumentList	temp		335216	1					
ANR	335436	Argument	temp		335216	0					
ANR	335437	Identifier	temp		335216	0					
ANR	335438	IfStatement	if ( tempres == - 1 || tempres > 15 )		335216	1					
ANR	335439	Condition	tempres == - 1 || tempres > 15	679:7:14479:14507	335216	0	True				
ANR	335440	OrExpression	tempres == - 1 || tempres > 15		335216	0		||			
ANR	335441	EqualityExpression	tempres == - 1		335216	0		==			
ANR	335442	Identifier	tempres		335216	0					
ANR	335443	UnaryOperationExpression	- 1		335216	1					
ANR	335444	UnaryOperator	-		335216	0					
ANR	335445	PrimaryExpression	1		335216	1					
ANR	335446	RelationalExpression	tempres > 15		335216	1		>			
ANR	335447	Identifier	tempres		335216	0					
ANR	335448	PrimaryExpression	15		335216	1					
ANR	335449	CompoundStatement		36:38:663:663	335216	1					
ANR	335450	ExpressionStatement	res = - 1	680:4:14516:14524	335216	0	True				
ANR	335451	AssignmentExpression	res = - 1		335216	0		=			
ANR	335452	Identifier	res		335216	0					
ANR	335453	UnaryOperationExpression	- 1		335216	1					
ANR	335454	UnaryOperator	-		335216	0					
ANR	335455	PrimaryExpression	1		335216	1					
ANR	335456	GotoStatement	goto end ;	681:4:14530:14538	335216	1	True				
ANR	335457	Identifier	end		335216	0					
ANR	335458	ExpressionStatement	res |= 1 << tempres	683:3:14548:14567	335216	2	True				
ANR	335459	AssignmentExpression	res |= 1 << tempres		335216	0		|=			
ANR	335460	Identifier	res		335216	0					
ANR	335461	ShiftExpression	1 << tempres		335216	1		<<			
ANR	335462	PrimaryExpression	1		335216	0					
ANR	335463	Identifier	tempres		335216	1					
ANR	335464	ElseStatement	else		335216	0					
ANR	335465	CompoundStatement		41:9:731:731	335216	0					
ANR	335466	ExpressionStatement	"strncpy ( temp2 , temp , i )"	685:3:14583:14607	335216	0	True				
ANR	335467	CallExpression	"strncpy ( temp2 , temp , i )"		335216	0					
ANR	335468	Callee	strncpy		335216	0					
ANR	335469	Identifier	strncpy		335216	0					
ANR	335470	ArgumentList	temp2		335216	1					
ANR	335471	Argument	temp2		335216	0					
ANR	335472	Identifier	temp2		335216	0					
ANR	335473	Argument	temp		335216	1					
ANR	335474	Identifier	temp		335216	0					
ANR	335475	Argument	i		335216	2					
ANR	335476	Identifier	i		335216	0					
ANR	335477	ExpressionStatement	temp2 [ i ] = 0	686:3:14612:14624	335216	1	True				
ANR	335478	AssignmentExpression	temp2 [ i ] = 0		335216	0		=			
ANR	335479	ArrayIndexing	temp2 [ i ]		335216	0					
ANR	335480	Identifier	temp2		335216	0					
ANR	335481	Identifier	i		335216	1					
ANR	335482	PrimaryExpression	0		335216	1					
ANR	335483	ExpressionStatement	temp += i + 1	687:3:14629:14642	335216	2	True				
ANR	335484	AssignmentExpression	temp += i + 1		335216	0		+=			
ANR	335485	Identifier	temp		335216	0					
ANR	335486	AdditiveExpression	i + 1		335216	1		+			
ANR	335487	Identifier	i		335216	0					
ANR	335488	PrimaryExpression	1		335216	1					
ANR	335489	ExpressionStatement	start = getreg ( temp2 )	688:3:14647:14669	335216	3	True				
ANR	335490	AssignmentExpression	start = getreg ( temp2 )		335216	0		=			
ANR	335491	Identifier	start		335216	0					
ANR	335492	CallExpression	getreg ( temp2 )		335216	1					
ANR	335493	Callee	getreg		335216	0					
ANR	335494	Identifier	getreg		335216	0					
ANR	335495	ArgumentList	temp2		335216	1					
ANR	335496	Argument	temp2		335216	0					
ANR	335497	Identifier	temp2		335216	0					
ANR	335498	IfStatement	if ( start == - 1 || start > 15 )		335216	4					
ANR	335499	Condition	start == - 1 || start > 15	689:7:14678:14702	335216	0	True				
ANR	335500	OrExpression	start == - 1 || start > 15		335216	0		||			
ANR	335501	EqualityExpression	start == - 1		335216	0		==			
ANR	335502	Identifier	start		335216	0					
ANR	335503	UnaryOperationExpression	- 1		335216	1					
ANR	335504	UnaryOperator	-		335216	0					
ANR	335505	PrimaryExpression	1		335216	1					
ANR	335506	RelationalExpression	start > 15		335216	1		>			
ANR	335507	Identifier	start		335216	0					
ANR	335508	PrimaryExpression	15		335216	1					
ANR	335509	CompoundStatement		46:34:858:858	335216	1					
ANR	335510	ExpressionStatement	res = - 1	690:4:14711:14719	335216	0	True				
ANR	335511	AssignmentExpression	res = - 1		335216	0		=			
ANR	335512	Identifier	res		335216	0					
ANR	335513	UnaryOperationExpression	- 1		335216	1					
ANR	335514	UnaryOperator	-		335216	0					
ANR	335515	PrimaryExpression	1		335216	1					
ANR	335516	GotoStatement	goto end ;	691:4:14725:14733	335216	1	True				
ANR	335517	Identifier	end		335216	0					
ANR	335518	ExpressionStatement	end = getreg ( temp )	693:3:14743:14762	335216	5	True				
ANR	335519	AssignmentExpression	end = getreg ( temp )		335216	0		=			
ANR	335520	Identifier	end		335216	0					
ANR	335521	CallExpression	getreg ( temp )		335216	1					
ANR	335522	Callee	getreg		335216	0					
ANR	335523	Identifier	getreg		335216	0					
ANR	335524	ArgumentList	temp		335216	1					
ANR	335525	Argument	temp		335216	0					
ANR	335526	Identifier	temp		335216	0					
ANR	335527	IfStatement	if ( end == - 1 || end > 15 )		335216	6					
ANR	335528	Condition	end == - 1 || end > 15	694:7:14771:14791	335216	0	True				
ANR	335529	OrExpression	end == - 1 || end > 15		335216	0		||			
ANR	335530	EqualityExpression	end == - 1		335216	0		==			
ANR	335531	Identifier	end		335216	0					
ANR	335532	UnaryOperationExpression	- 1		335216	1					
ANR	335533	UnaryOperator	-		335216	0					
ANR	335534	PrimaryExpression	1		335216	1					
ANR	335535	RelationalExpression	end > 15		335216	1		>			
ANR	335536	Identifier	end		335216	0					
ANR	335537	PrimaryExpression	15		335216	1					
ANR	335538	CompoundStatement		51:30:947:947	335216	1					
ANR	335539	ExpressionStatement	res = - 1	695:4:14800:14808	335216	0	True				
ANR	335540	AssignmentExpression	res = - 1		335216	0		=			
ANR	335541	Identifier	res		335216	0					
ANR	335542	UnaryOperationExpression	- 1		335216	1					
ANR	335543	UnaryOperator	-		335216	0					
ANR	335544	PrimaryExpression	1		335216	1					
ANR	335545	GotoStatement	goto end ;	696:4:14814:14822	335216	1	True				
ANR	335546	Identifier	end		335216	0					
ANR	335547	ForStatement	for ( j = start ; j <= end ; j ++ )		335216	7					
ANR	335548	ForInit	j = start ;	699:8:14838:14847	335216	0	True				
ANR	335549	AssignmentExpression	j = start		335216	0		=			
ANR	335550	Identifier	j		335216	0					
ANR	335551	Identifier	start		335216	1					
ANR	335552	Condition	j <= end	699:19:14849:14856	335216	1	True				
ANR	335553	RelationalExpression	j <= end		335216	0		<=			
ANR	335554	Identifier	j		335216	0					
ANR	335555	Identifier	end		335216	1					
ANR	335556	PostIncDecOperationExpression	j ++	699:29:14859:14861	335216	2	True				
ANR	335557	Identifier	j		335216	0					
ANR	335558	IncDec	++		335216	1					
ANR	335559	CompoundStatement		56:35:1018:1018	335216	3					
ANR	335560	ExpressionStatement	res |= 1 << j	700:4:14871:14884	335216	0	True				
ANR	335561	AssignmentExpression	res |= 1 << j		335216	0		|=			
ANR	335562	Identifier	res		335216	0					
ANR	335563	ShiftExpression	1 << j		335216	1		<<			
ANR	335564	PrimaryExpression	1		335216	0					
ANR	335565	Identifier	j		335216	1					
ANR	335566	Label	end :	704:0:14898:14901	335216	10	True				
ANR	335567	Identifier	end		335216	0					
ANR	335568	ExpressionStatement	free ( otemp )	705:1:14904:14916	335216	11	True				
ANR	335569	CallExpression	free ( otemp )		335216	0					
ANR	335570	Callee	free		335216	0					
ANR	335571	Identifier	free		335216	0					
ANR	335572	ArgumentList	otemp		335216	1					
ANR	335573	Argument	otemp		335216	0					
ANR	335574	Identifier	otemp		335216	0					
ANR	335575	ExpressionStatement	free ( temp2 )	706:1:14919:14931	335216	12	True				
ANR	335576	CallExpression	free ( temp2 )		335216	0					
ANR	335577	Callee	free		335216	0					
ANR	335578	Identifier	free		335216	0					
ANR	335579	ArgumentList	temp2		335216	1					
ANR	335580	Argument	temp2		335216	0					
ANR	335581	Identifier	temp2		335216	0					
ANR	335582	ReturnStatement	return res ;	707:1:14934:14944	335216	13	True				
ANR	335583	Identifier	res		335216	0					
ANR	335584	ReturnType	static st32		335216	1					
ANR	335585	Identifier	getlistmask		335216	2					
ANR	335586	ParameterList	char * input		335216	3					
ANR	335587	Parameter	char * input	644:24:13833:13843	335216	0	True				
ANR	335588	ParameterType	char *		335216	0					
ANR	335589	Identifier	input		335216	1					
ANR	335590	CFGEntryNode	ENTRY		335216		True				
ANR	335591	CFGExitNode	EXIT		335216		True				
ANR	335592	Symbol	res		335216						
ANR	335593	Symbol	malloc		335216						
ANR	335594	Symbol	temp		335216						
ANR	335595	Symbol	NULL		335216						
ANR	335596	Symbol	start		335216						
ANR	335597	Symbol	* input		335216						
ANR	335598	Symbol	i		335216						
ANR	335599	Symbol	j		335216						
ANR	335600	Symbol	tempres		335216						
ANR	335601	Symbol	temp2		335216						
ANR	335602	Symbol	* temp		335216						
ANR	335603	Symbol	input		335216						
ANR	335604	Symbol	otemp		335216						
ANR	335605	Symbol	strlen		335216						
ANR	335606	Symbol	* i		335216						
ANR	335607	Symbol	getreg		335216						
ANR	335608	Symbol	end		335216						
ANR	335609	Symbol	* temp2		335216						
ANR	335610	Function	getregmemstart	710:0:14949:15098							
ANR	335611	FunctionDef	getregmemstart (const char * input)		335610	0					
ANR	335612	CompoundStatement		710:46:14995:15098	335610	0					
ANR	335613	IfStatement	if ( ( strlen ( input ) < 1 ) || ( ! ( * input == '[' ) ) )		335610	0					
ANR	335614	Condition	( strlen ( input ) < 1 ) || ( ! ( * input == '[' ) )	711:5:15002:15043	335610	0	True				
ANR	335615	OrExpression	( strlen ( input ) < 1 ) || ( ! ( * input == '[' ) )		335610	0		||			
ANR	335616	RelationalExpression	strlen ( input ) < 1		335610	0		<			
ANR	335617	CallExpression	strlen ( input )		335610	0					
ANR	335618	Callee	strlen		335610	0					
ANR	335619	Identifier	strlen		335610	0					
ANR	335620	ArgumentList	input		335610	1					
ANR	335621	Argument	input		335610	0					
ANR	335622	Identifier	input		335610	0					
ANR	335623	PrimaryExpression	1		335610	1					
ANR	335624	UnaryOperationExpression	! ( * input == '[' )		335610	1					
ANR	335625	UnaryOperator	!		335610	0					
ANR	335626	EqualityExpression	* input == '['		335610	1		==			
ANR	335627	UnaryOperationExpression	* input		335610	0					
ANR	335628	UnaryOperator	*		335610	0					
ANR	335629	Identifier	input		335610	1					
ANR	335630	PrimaryExpression	'['		335610	1					
ANR	335631	CompoundStatement		2:49:50:50	335610	1					
ANR	335632	ReturnStatement	return - 1 ;	712:2:15050:15059	335610	0	True				
ANR	335633	UnaryOperationExpression	- 1		335610	0					
ANR	335634	UnaryOperator	-		335610	0					
ANR	335635	PrimaryExpression	1		335610	1					
ANR	335636	ExpressionStatement	input ++	714:1:15065:15072	335610	1	True				
ANR	335637	PostIncDecOperationExpression	input ++		335610	0					
ANR	335638	Identifier	input		335610	0					
ANR	335639	IncDec	++		335610	1					
ANR	335640	ReturnStatement	return getreg ( input ) ;	715:1:15075:15096	335610	2	True				
ANR	335641	CallExpression	getreg ( input )		335610	0					
ANR	335642	Callee	getreg		335610	0					
ANR	335643	Identifier	getreg		335610	0					
ANR	335644	ArgumentList	input		335610	1					
ANR	335645	Argument	input		335610	0					
ANR	335646	Identifier	input		335610	0					
ANR	335647	ReturnType	static st32		335610	1					
ANR	335648	Identifier	getregmemstart		335610	2					
ANR	335649	ParameterList	const char * input		335610	3					
ANR	335650	Parameter	const char * input	710:27:14976:14992	335610	0	True				
ANR	335651	ParameterType	const char *		335610	0					
ANR	335652	Identifier	input		335610	1					
ANR	335653	CFGEntryNode	ENTRY		335610		True				
ANR	335654	CFGExitNode	EXIT		335610		True				
ANR	335655	Symbol	input		335610						
ANR	335656	Symbol	strlen		335610						
ANR	335657	Symbol	getreg		335610						
ANR	335658	Symbol	* input		335610						
ANR	335659	Function	getregmemstartend	718:0:15102:15413							
ANR	335660	FunctionDef	getregmemstartend (const char * input)		335659	0					
ANR	335661	CompoundStatement		718:49:15151:15413	335659	0					
ANR	335662	IdentifierDeclStatement	st32 res ;	719:1:15154:15162	335659	0	True				
ANR	335663	IdentifierDecl	res		335659	0					
ANR	335664	IdentifierDeclType	st32		335659	0					
ANR	335665	Identifier	res		335659	1					
ANR	335666	IfStatement	"if ( ! input || ( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" ) )"		335659	1					
ANR	335667	Condition	"! input || ( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"	720:5:15169:15249	335659	0	True				
ANR	335668	OrExpression	"! input || ( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"		335659	0		||			
ANR	335669	UnaryOperationExpression	! input		335659	0					
ANR	335670	UnaryOperator	!		335659	0					
ANR	335671	Identifier	input		335659	1					
ANR	335672	OrExpression	"( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"		335659	1		||			
ANR	335673	RelationalExpression	strlen ( input ) < 2		335659	0		<			
ANR	335674	CallExpression	strlen ( input )		335659	0					
ANR	335675	Callee	strlen		335659	0					
ANR	335676	Identifier	strlen		335659	0					
ANR	335677	ArgumentList	input		335659	1					
ANR	335678	Argument	input		335659	0					
ANR	335679	Identifier	input		335659	0					
ANR	335680	PrimaryExpression	2		335659	1					
ANR	335681	OrExpression	"( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"		335659	1		||			
ANR	335682	EqualityExpression	* input != '['		335659	0		!=			
ANR	335683	UnaryOperationExpression	* input		335659	0					
ANR	335684	UnaryOperator	*		335659	0					
ANR	335685	Identifier	input		335659	1					
ANR	335686	PrimaryExpression	'['		335659	1					
ANR	335687	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		335659	1					
ANR	335688	UnaryOperator	!		335659	0					
ANR	335689	CallExpression	"r_str_endswith ( input , ""]"" )"		335659	1					
ANR	335690	Callee	r_str_endswith		335659	0					
ANR	335691	Identifier	r_str_endswith		335659	0					
ANR	335692	ArgumentList	input		335659	1					
ANR	335693	Argument	input		335659	0					
ANR	335694	Identifier	input		335659	0					
ANR	335695	Argument	"""]"""		335659	1					
ANR	335696	PrimaryExpression	"""]"""		335659	0					
ANR	335697	CompoundStatement		3:88:100:100	335659	1					
ANR	335698	ReturnStatement	return - 1 ;	721:2:15256:15265	335659	0	True				
ANR	335699	UnaryOperationExpression	- 1		335659	0					
ANR	335700	UnaryOperator	-		335659	0					
ANR	335701	PrimaryExpression	1		335659	1					
ANR	335702	ExpressionStatement	input ++	723:1:15271:15278	335659	2	True				
ANR	335703	PostIncDecOperationExpression	input ++		335659	0					
ANR	335704	Identifier	input		335659	0					
ANR	335705	IncDec	++		335659	1					
ANR	335706	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	724:1:15281:15332	335659	3	True				
ANR	335707	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335659	0					
ANR	335708	IdentifierDeclType	char *		335659	0					
ANR	335709	Identifier	temp		335659	1					
ANR	335710	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335659	2		=			
ANR	335711	Identifier	temp		335659	0					
ANR	335712	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		335659	1					
ANR	335713	Callee	r_str_ndup		335659	0					
ANR	335714	Identifier	r_str_ndup		335659	0					
ANR	335715	ArgumentList	input		335659	1					
ANR	335716	Argument	input		335659	0					
ANR	335717	Identifier	input		335659	0					
ANR	335718	Argument	strlen ( input ) - 1		335659	1					
ANR	335719	AdditiveExpression	strlen ( input ) - 1		335659	0		-			
ANR	335720	CallExpression	strlen ( input )		335659	0					
ANR	335721	Callee	strlen		335659	0					
ANR	335722	Identifier	strlen		335659	0					
ANR	335723	ArgumentList	input		335659	1					
ANR	335724	Argument	input		335659	0					
ANR	335725	Identifier	input		335659	0					
ANR	335726	PrimaryExpression	1		335659	1					
ANR	335727	IfStatement	if ( ! temp )		335659	4					
ANR	335728	Condition	! temp	725:5:15339:15343	335659	0	True				
ANR	335729	UnaryOperationExpression	! temp		335659	0					
ANR	335730	UnaryOperator	!		335659	0					
ANR	335731	Identifier	temp		335659	1					
ANR	335732	CompoundStatement		8:12:194:194	335659	1					
ANR	335733	ReturnStatement	return - 1 ;	726:2:15350:15359	335659	0	True				
ANR	335734	UnaryOperationExpression	- 1		335659	0					
ANR	335735	UnaryOperator	-		335659	0					
ANR	335736	PrimaryExpression	1		335659	1					
ANR	335737	ExpressionStatement	res = getreg ( temp )	728:1:15365:15384	335659	5	True				
ANR	335738	AssignmentExpression	res = getreg ( temp )		335659	0		=			
ANR	335739	Identifier	res		335659	0					
ANR	335740	CallExpression	getreg ( temp )		335659	1					
ANR	335741	Callee	getreg		335659	0					
ANR	335742	Identifier	getreg		335659	0					
ANR	335743	ArgumentList	temp		335659	1					
ANR	335744	Argument	temp		335659	0					
ANR	335745	Identifier	temp		335659	0					
ANR	335746	ExpressionStatement	free ( temp )	729:1:15387:15398	335659	6	True				
ANR	335747	CallExpression	free ( temp )		335659	0					
ANR	335748	Callee	free		335659	0					
ANR	335749	Identifier	free		335659	0					
ANR	335750	ArgumentList	temp		335659	1					
ANR	335751	Argument	temp		335659	0					
ANR	335752	Identifier	temp		335659	0					
ANR	335753	ReturnStatement	return res ;	730:1:15401:15411	335659	7	True				
ANR	335754	Identifier	res		335659	0					
ANR	335755	ReturnType	static st32		335659	1					
ANR	335756	Identifier	getregmemstartend		335659	2					
ANR	335757	ParameterList	const char * input		335659	3					
ANR	335758	Parameter	const char * input	718:30:15132:15148	335659	0	True				
ANR	335759	ParameterType	const char *		335659	0					
ANR	335760	Identifier	input		335659	1					
ANR	335761	CFGEntryNode	ENTRY		335659		True				
ANR	335762	CFGExitNode	EXIT		335659		True				
ANR	335763	Symbol	input		335659						
ANR	335764	Symbol	res		335659						
ANR	335765	Symbol	strlen		335659						
ANR	335766	Symbol	temp		335659						
ANR	335767	Symbol	r_str_ndup		335659						
ANR	335768	Symbol	getreg		335659						
ANR	335769	Symbol	* input		335659						
ANR	335770	Symbol	r_str_endswith		335659						
ANR	335771	Function	getregmemend	733:0:15417:15682							
ANR	335772	FunctionDef	getregmemend (const char * input)		335771	0					
ANR	335773	CompoundStatement		733:44:15461:15682	335771	0					
ANR	335774	IdentifierDeclStatement	st32 res ;	734:1:15464:15472	335771	0	True				
ANR	335775	IdentifierDecl	res		335771	0					
ANR	335776	IdentifierDeclType	st32		335771	0					
ANR	335777	Identifier	res		335771	1					
ANR	335778	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""]"" ) )"		335771	1					
ANR	335779	Condition	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"	735:5:15479:15527	335771	0	True				
ANR	335780	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"		335771	0		||			
ANR	335781	UnaryOperationExpression	! input		335771	0					
ANR	335782	UnaryOperator	!		335771	0					
ANR	335783	Identifier	input		335771	1					
ANR	335784	OrExpression	"! * input || ! r_str_endswith ( input , ""]"" )"		335771	1		||			
ANR	335785	UnaryOperationExpression	! * input		335771	0					
ANR	335786	UnaryOperator	!		335771	0					
ANR	335787	UnaryOperationExpression	* input		335771	1					
ANR	335788	UnaryOperator	*		335771	0					
ANR	335789	Identifier	input		335771	1					
ANR	335790	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		335771	1					
ANR	335791	UnaryOperator	!		335771	0					
ANR	335792	CallExpression	"r_str_endswith ( input , ""]"" )"		335771	1					
ANR	335793	Callee	r_str_endswith		335771	0					
ANR	335794	Identifier	r_str_endswith		335771	0					
ANR	335795	ArgumentList	input		335771	1					
ANR	335796	Argument	input		335771	0					
ANR	335797	Identifier	input		335771	0					
ANR	335798	Argument	"""]"""		335771	1					
ANR	335799	PrimaryExpression	"""]"""		335771	0					
ANR	335800	CompoundStatement		3:56:68:68	335771	1					
ANR	335801	ReturnStatement	return - 1 ;	736:2:15534:15543	335771	0	True				
ANR	335802	UnaryOperationExpression	- 1		335771	0					
ANR	335803	UnaryOperator	-		335771	0					
ANR	335804	PrimaryExpression	1		335771	1					
ANR	335805	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	739:1:15550:15601	335771	2	True				
ANR	335806	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335771	0					
ANR	335807	IdentifierDeclType	char *		335771	0					
ANR	335808	Identifier	temp		335771	1					
ANR	335809	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335771	2		=			
ANR	335810	Identifier	temp		335771	0					
ANR	335811	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		335771	1					
ANR	335812	Callee	r_str_ndup		335771	0					
ANR	335813	Identifier	r_str_ndup		335771	0					
ANR	335814	ArgumentList	input		335771	1					
ANR	335815	Argument	input		335771	0					
ANR	335816	Identifier	input		335771	0					
ANR	335817	Argument	strlen ( input ) - 1		335771	1					
ANR	335818	AdditiveExpression	strlen ( input ) - 1		335771	0		-			
ANR	335819	CallExpression	strlen ( input )		335771	0					
ANR	335820	Callee	strlen		335771	0					
ANR	335821	Identifier	strlen		335771	0					
ANR	335822	ArgumentList	input		335771	1					
ANR	335823	Argument	input		335771	0					
ANR	335824	Identifier	input		335771	0					
ANR	335825	PrimaryExpression	1		335771	1					
ANR	335826	IfStatement	if ( ! temp )		335771	3					
ANR	335827	Condition	! temp	740:5:15608:15612	335771	0	True				
ANR	335828	UnaryOperationExpression	! temp		335771	0					
ANR	335829	UnaryOperator	!		335771	0					
ANR	335830	Identifier	temp		335771	1					
ANR	335831	CompoundStatement		8:12:153:153	335771	1					
ANR	335832	ReturnStatement	return - 1 ;	741:2:15619:15628	335771	0	True				
ANR	335833	UnaryOperationExpression	- 1		335771	0					
ANR	335834	UnaryOperator	-		335771	0					
ANR	335835	PrimaryExpression	1		335771	1					
ANR	335836	ExpressionStatement	res = getreg ( temp )	743:1:15634:15653	335771	4	True				
ANR	335837	AssignmentExpression	res = getreg ( temp )		335771	0		=			
ANR	335838	Identifier	res		335771	0					
ANR	335839	CallExpression	getreg ( temp )		335771	1					
ANR	335840	Callee	getreg		335771	0					
ANR	335841	Identifier	getreg		335771	0					
ANR	335842	ArgumentList	temp		335771	1					
ANR	335843	Argument	temp		335771	0					
ANR	335844	Identifier	temp		335771	0					
ANR	335845	ExpressionStatement	free ( temp )	744:1:15656:15667	335771	5	True				
ANR	335846	CallExpression	free ( temp )		335771	0					
ANR	335847	Callee	free		335771	0					
ANR	335848	Identifier	free		335771	0					
ANR	335849	ArgumentList	temp		335771	1					
ANR	335850	Argument	temp		335771	0					
ANR	335851	Identifier	temp		335771	0					
ANR	335852	ReturnStatement	return res ;	745:1:15670:15680	335771	6	True				
ANR	335853	Identifier	res		335771	0					
ANR	335854	ReturnType	static st32		335771	1					
ANR	335855	Identifier	getregmemend		335771	2					
ANR	335856	ParameterList	const char * input		335771	3					
ANR	335857	Parameter	const char * input	733:25:15442:15458	335771	0	True				
ANR	335858	ParameterType	const char *		335771	0					
ANR	335859	Identifier	input		335771	1					
ANR	335860	CFGEntryNode	ENTRY		335771		True				
ANR	335861	CFGExitNode	EXIT		335771		True				
ANR	335862	Symbol	input		335771						
ANR	335863	Symbol	res		335771						
ANR	335864	Symbol	strlen		335771						
ANR	335865	Symbol	temp		335771						
ANR	335866	Symbol	r_str_ndup		335771						
ANR	335867	Symbol	getreg		335771						
ANR	335868	Symbol	* input		335771						
ANR	335869	Symbol	r_str_endswith		335771						
ANR	335870	Function	getreglist	748:0:15686:16016							
ANR	335871	FunctionDef	getreglist (const char * input)		335870	0					
ANR	335872	CompoundStatement		748:42:15728:16016	335870	0					
ANR	335873	IdentifierDeclStatement	st32 res ;	749:1:15731:15739	335870	0	True				
ANR	335874	IdentifierDecl	res		335870	0					
ANR	335875	IdentifierDeclType	st32		335870	0					
ANR	335876	Identifier	res		335870	1					
ANR	335877	IfStatement	"if ( ! input || ( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" ) )"		335870	1					
ANR	335878	Condition	"! input || ( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"	751:5:15748:15828	335870	0	True				
ANR	335879	OrExpression	"! input || ( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"		335870	0		||			
ANR	335880	UnaryOperationExpression	! input		335870	0					
ANR	335881	UnaryOperator	!		335870	0					
ANR	335882	Identifier	input		335870	1					
ANR	335883	OrExpression	"( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"		335870	1		||			
ANR	335884	RelationalExpression	strlen ( input ) < 2		335870	0		<			
ANR	335885	CallExpression	strlen ( input )		335870	0					
ANR	335886	Callee	strlen		335870	0					
ANR	335887	Identifier	strlen		335870	0					
ANR	335888	ArgumentList	input		335870	1					
ANR	335889	Argument	input		335870	0					
ANR	335890	Identifier	input		335870	0					
ANR	335891	PrimaryExpression	2		335870	1					
ANR	335892	OrExpression	"( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"		335870	1		||			
ANR	335893	EqualityExpression	* input != '{'		335870	0		!=			
ANR	335894	UnaryOperationExpression	* input		335870	0					
ANR	335895	UnaryOperator	*		335870	0					
ANR	335896	Identifier	input		335870	1					
ANR	335897	PrimaryExpression	'{'		335870	1					
ANR	335898	UnaryOperationExpression	"! r_str_endswith ( input , ""}"" )"		335870	1					
ANR	335899	UnaryOperator	!		335870	0					
ANR	335900	CallExpression	"r_str_endswith ( input , ""}"" )"		335870	1					
ANR	335901	Callee	r_str_endswith		335870	0					
ANR	335902	Identifier	r_str_endswith		335870	0					
ANR	335903	ArgumentList	input		335870	1					
ANR	335904	Argument	input		335870	0					
ANR	335905	Identifier	input		335870	0					
ANR	335906	Argument	"""}"""		335870	1					
ANR	335907	PrimaryExpression	"""}"""		335870	0					
ANR	335908	CompoundStatement		4:88:102:102	335870	1					
ANR	335909	ReturnStatement	return - 1 ;	752:2:15835:15844	335870	0	True				
ANR	335910	UnaryOperationExpression	- 1		335870	0					
ANR	335911	UnaryOperator	-		335870	0					
ANR	335912	PrimaryExpression	1		335870	1					
ANR	335913	IfStatement	if ( * input )		335870	2					
ANR	335914	Condition	* input	754:5:15854:15859	335870	0	True				
ANR	335915	UnaryOperationExpression	* input		335870	0					
ANR	335916	UnaryOperator	*		335870	0					
ANR	335917	Identifier	input		335870	1					
ANR	335918	CompoundStatement		7:13:133:133	335870	1					
ANR	335919	ExpressionStatement	input ++	755:2:15866:15873	335870	0	True				
ANR	335920	PostIncDecOperationExpression	input ++		335870	0					
ANR	335921	Identifier	input		335870	0					
ANR	335922	IncDec	++		335870	1					
ANR	335923	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	757:1:15879:15930	335870	3	True				
ANR	335924	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335870	0					
ANR	335925	IdentifierDeclType	char *		335870	0					
ANR	335926	Identifier	temp		335870	1					
ANR	335927	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335870	2		=			
ANR	335928	Identifier	temp		335870	0					
ANR	335929	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		335870	1					
ANR	335930	Callee	r_str_ndup		335870	0					
ANR	335931	Identifier	r_str_ndup		335870	0					
ANR	335932	ArgumentList	input		335870	1					
ANR	335933	Argument	input		335870	0					
ANR	335934	Identifier	input		335870	0					
ANR	335935	Argument	strlen ( input ) - 1		335870	1					
ANR	335936	AdditiveExpression	strlen ( input ) - 1		335870	0		-			
ANR	335937	CallExpression	strlen ( input )		335870	0					
ANR	335938	Callee	strlen		335870	0					
ANR	335939	Identifier	strlen		335870	0					
ANR	335940	ArgumentList	input		335870	1					
ANR	335941	Argument	input		335870	0					
ANR	335942	Identifier	input		335870	0					
ANR	335943	PrimaryExpression	1		335870	1					
ANR	335944	IfStatement	if ( ! temp )		335870	4					
ANR	335945	Condition	! temp	758:5:15937:15941	335870	0	True				
ANR	335946	UnaryOperationExpression	! temp		335870	0					
ANR	335947	UnaryOperator	!		335870	0					
ANR	335948	Identifier	temp		335870	1					
ANR	335949	CompoundStatement		11:12:215:215	335870	1					
ANR	335950	ReturnStatement	return - 1 ;	759:2:15948:15957	335870	0	True				
ANR	335951	UnaryOperationExpression	- 1		335870	0					
ANR	335952	UnaryOperator	-		335870	0					
ANR	335953	PrimaryExpression	1		335870	1					
ANR	335954	ExpressionStatement	res = getlistmask ( temp )	761:1:15963:15987	335870	5	True				
ANR	335955	AssignmentExpression	res = getlistmask ( temp )		335870	0		=			
ANR	335956	Identifier	res		335870	0					
ANR	335957	CallExpression	getlistmask ( temp )		335870	1					
ANR	335958	Callee	getlistmask		335870	0					
ANR	335959	Identifier	getlistmask		335870	0					
ANR	335960	ArgumentList	temp		335870	1					
ANR	335961	Argument	temp		335870	0					
ANR	335962	Identifier	temp		335870	0					
ANR	335963	ExpressionStatement	free ( temp )	762:1:15990:16001	335870	6	True				
ANR	335964	CallExpression	free ( temp )		335870	0					
ANR	335965	Callee	free		335870	0					
ANR	335966	Identifier	free		335870	0					
ANR	335967	ArgumentList	temp		335870	1					
ANR	335968	Argument	temp		335870	0					
ANR	335969	Identifier	temp		335870	0					
ANR	335970	ReturnStatement	return res ;	763:1:16004:16014	335870	7	True				
ANR	335971	Identifier	res		335870	0					
ANR	335972	ReturnType	static st32		335870	1					
ANR	335973	Identifier	getreglist		335870	2					
ANR	335974	ParameterList	const char * input		335870	3					
ANR	335975	Parameter	const char * input	748:23:15709:15725	335870	0	True				
ANR	335976	ParameterType	const char *		335870	0					
ANR	335977	Identifier	input		335870	1					
ANR	335978	CFGEntryNode	ENTRY		335870		True				
ANR	335979	CFGExitNode	EXIT		335870		True				
ANR	335980	Symbol	getlistmask		335870						
ANR	335981	Symbol	input		335870						
ANR	335982	Symbol	res		335870						
ANR	335983	Symbol	strlen		335870						
ANR	335984	Symbol	temp		335870						
ANR	335985	Symbol	r_str_ndup		335870						
ANR	335986	Symbol	* input		335870						
ANR	335987	Symbol	r_str_endswith		335870						
ANR	335988	Function	getnummemend	766:0:16019:16326							
ANR	335989	FunctionDef	getnummemend (const char * input)		335988	0					
ANR	335990	CompoundStatement		766:45:16064:16326	335988	0					
ANR	335991	IdentifierDeclStatement	st32 res ;	767:1:16067:16075	335988	0	True				
ANR	335992	IdentifierDecl	res		335988	0					
ANR	335993	IdentifierDeclType	st32		335988	0					
ANR	335994	Identifier	res		335988	1					
ANR	335995	ExpressionStatement	err = false	768:1:16078:16089	335988	1	True				
ANR	335996	AssignmentExpression	err = false		335988	0		=			
ANR	335997	Identifier	err		335988	0					
ANR	335998	Identifier	false		335988	1					
ANR	335999	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""]"" ) )"		335988	2					
ANR	336000	Condition	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"	769:5:16096:16144	335988	0	True				
ANR	336001	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"		335988	0		||			
ANR	336002	UnaryOperationExpression	! input		335988	0					
ANR	336003	UnaryOperator	!		335988	0					
ANR	336004	Identifier	input		335988	1					
ANR	336005	OrExpression	"! * input || ! r_str_endswith ( input , ""]"" )"		335988	1		||			
ANR	336006	UnaryOperationExpression	! * input		335988	0					
ANR	336007	UnaryOperator	!		335988	0					
ANR	336008	UnaryOperationExpression	* input		335988	1					
ANR	336009	UnaryOperator	*		335988	0					
ANR	336010	Identifier	input		335988	1					
ANR	336011	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		335988	1					
ANR	336012	UnaryOperator	!		335988	0					
ANR	336013	CallExpression	"r_str_endswith ( input , ""]"" )"		335988	1					
ANR	336014	Callee	r_str_endswith		335988	0					
ANR	336015	Identifier	r_str_endswith		335988	0					
ANR	336016	ArgumentList	input		335988	1					
ANR	336017	Argument	input		335988	0					
ANR	336018	Identifier	input		335988	0					
ANR	336019	Argument	"""]"""		335988	1					
ANR	336020	PrimaryExpression	"""]"""		335988	0					
ANR	336021	CompoundStatement		4:56:82:82	335988	1					
ANR	336022	ExpressionStatement	err = true	770:2:16151:16161	335988	0	True				
ANR	336023	AssignmentExpression	err = true		335988	0		=			
ANR	336024	Identifier	err		335988	0					
ANR	336025	Identifier	true		335988	1					
ANR	336026	ReturnStatement	return - 1 ;	771:2:16165:16174	335988	1	True				
ANR	336027	UnaryOperationExpression	- 1		335988	0					
ANR	336028	UnaryOperator	-		335988	0					
ANR	336029	PrimaryExpression	1		335988	1					
ANR	336030	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	773:1:16180:16231	335988	3	True				
ANR	336031	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335988	0					
ANR	336032	IdentifierDeclType	char *		335988	0					
ANR	336033	Identifier	temp		335988	1					
ANR	336034	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		335988	2		=			
ANR	336035	Identifier	temp		335988	0					
ANR	336036	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		335988	1					
ANR	336037	Callee	r_str_ndup		335988	0					
ANR	336038	Identifier	r_str_ndup		335988	0					
ANR	336039	ArgumentList	input		335988	1					
ANR	336040	Argument	input		335988	0					
ANR	336041	Identifier	input		335988	0					
ANR	336042	Argument	strlen ( input ) - 1		335988	1					
ANR	336043	AdditiveExpression	strlen ( input ) - 1		335988	0		-			
ANR	336044	CallExpression	strlen ( input )		335988	0					
ANR	336045	Callee	strlen		335988	0					
ANR	336046	Identifier	strlen		335988	0					
ANR	336047	ArgumentList	input		335988	1					
ANR	336048	Argument	input		335988	0					
ANR	336049	Identifier	input		335988	0					
ANR	336050	PrimaryExpression	1		335988	1					
ANR	336051	IfStatement	if ( ! temp )		335988	4					
ANR	336052	Condition	! temp	774:5:16238:16242	335988	0	True				
ANR	336053	UnaryOperationExpression	! temp		335988	0					
ANR	336054	UnaryOperator	!		335988	0					
ANR	336055	Identifier	temp		335988	1					
ANR	336056	CompoundStatement		9:12:180:180	335988	1					
ANR	336057	ExpressionStatement	err = true	775:2:16249:16259	335988	0	True				
ANR	336058	AssignmentExpression	err = true		335988	0		=			
ANR	336059	Identifier	err		335988	0					
ANR	336060	Identifier	true		335988	1					
ANR	336061	ReturnStatement	return - 1 ;	776:2:16263:16272	335988	1	True				
ANR	336062	UnaryOperationExpression	- 1		335988	0					
ANR	336063	UnaryOperator	-		335988	0					
ANR	336064	PrimaryExpression	1		335988	1					
ANR	336065	ExpressionStatement	res = getnum ( temp )	778:1:16278:16297	335988	5	True				
ANR	336066	AssignmentExpression	res = getnum ( temp )		335988	0		=			
ANR	336067	Identifier	res		335988	0					
ANR	336068	CallExpression	getnum ( temp )		335988	1					
ANR	336069	Callee	getnum		335988	0					
ANR	336070	Identifier	getnum		335988	0					
ANR	336071	ArgumentList	temp		335988	1					
ANR	336072	Argument	temp		335988	0					
ANR	336073	Identifier	temp		335988	0					
ANR	336074	ExpressionStatement	free ( temp )	779:1:16300:16311	335988	6	True				
ANR	336075	CallExpression	free ( temp )		335988	0					
ANR	336076	Callee	free		335988	0					
ANR	336077	Identifier	free		335988	0					
ANR	336078	ArgumentList	temp		335988	1					
ANR	336079	Argument	temp		335988	0					
ANR	336080	Identifier	temp		335988	0					
ANR	336081	ReturnStatement	return res ;	780:1:16314:16324	335988	7	True				
ANR	336082	Identifier	res		335988	0					
ANR	336083	ReturnType	static st32		335988	1					
ANR	336084	Identifier	getnummemend		335988	2					
ANR	336085	ParameterList	const char * input		335988	3					
ANR	336086	Parameter	const char * input	766:26:16045:16061	335988	0	True				
ANR	336087	ParameterType	const char *		335988	0					
ANR	336088	Identifier	input		335988	1					
ANR	336089	CFGEntryNode	ENTRY		335988		True				
ANR	336090	CFGExitNode	EXIT		335988		True				
ANR	336091	Symbol	input		335988						
ANR	336092	Symbol	res		335988						
ANR	336093	Symbol	strlen		335988						
ANR	336094	Symbol	temp		335988						
ANR	336095	Symbol	err		335988						
ANR	336096	Symbol	r_str_ndup		335988						
ANR	336097	Symbol	false		335988						
ANR	336098	Symbol	* input		335988						
ANR	336099	Symbol	true		335988						
ANR	336100	Symbol	getnum		335988						
ANR	336101	Symbol	r_str_endswith		335988						
ANR	336102	Function	getnummemendbang	783:0:16329:16688							
ANR	336103	FunctionDef	getnummemendbang (const char * input)		336102	0					
ANR	336104	CompoundStatement		783:49:16378:16688	336102	0					
ANR	336105	IdentifierDeclStatement	st32 res ;	784:1:16381:16389	336102	0	True				
ANR	336106	IdentifierDecl	res		336102	0					
ANR	336107	IdentifierDeclType	st32		336102	0					
ANR	336108	Identifier	res		336102	1					
ANR	336109	ExpressionStatement	err = false	785:1:16392:16403	336102	1	True				
ANR	336110	AssignmentExpression	err = false		336102	0		=			
ANR	336111	Identifier	err		336102	0					
ANR	336112	Identifier	false		336102	1					
ANR	336113	IfStatement	"if ( ! input || ( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) ) )"		336102	2					
ANR	336114	Condition	"! input || ( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) )"	786:5:16410:16508	336102	0	True				
ANR	336115	OrExpression	"! input || ( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) )"		336102	0		||			
ANR	336116	UnaryOperationExpression	! input		336102	0					
ANR	336117	UnaryOperator	!		336102	0					
ANR	336118	Identifier	input		336102	1					
ANR	336119	OrExpression	"( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) )"		336102	1		||			
ANR	336120	RelationalExpression	strlen ( input ) < 2		336102	0		<			
ANR	336121	CallExpression	strlen ( input )		336102	0					
ANR	336122	Callee	strlen		336102	0					
ANR	336123	Identifier	strlen		336102	0					
ANR	336124	ArgumentList	input		336102	1					
ANR	336125	Argument	input		336102	0					
ANR	336126	Identifier	input		336102	0					
ANR	336127	PrimaryExpression	2		336102	1					
ANR	336128	OrExpression	"input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" )"		336102	1		||			
ANR	336129	EqualityExpression	input [ strlen ( input ) - 2 ] != ']'		336102	0		!=			
ANR	336130	ArrayIndexing	input [ strlen ( input ) - 2 ]		336102	0					
ANR	336131	Identifier	input		336102	0					
ANR	336132	AdditiveExpression	strlen ( input ) - 2		336102	1		-			
ANR	336133	CallExpression	strlen ( input )		336102	0					
ANR	336134	Callee	strlen		336102	0					
ANR	336135	Identifier	strlen		336102	0					
ANR	336136	ArgumentList	input		336102	1					
ANR	336137	Argument	input		336102	0					
ANR	336138	Identifier	input		336102	0					
ANR	336139	PrimaryExpression	2		336102	1					
ANR	336140	PrimaryExpression	']'		336102	1					
ANR	336141	UnaryOperationExpression	"! r_str_endswith ( input , ""!"" )"		336102	1					
ANR	336142	UnaryOperator	!		336102	0					
ANR	336143	CallExpression	"r_str_endswith ( input , ""!"" )"		336102	1					
ANR	336144	Callee	r_str_endswith		336102	0					
ANR	336145	Identifier	r_str_endswith		336102	0					
ANR	336146	ArgumentList	input		336102	1					
ANR	336147	Argument	input		336102	0					
ANR	336148	Identifier	input		336102	0					
ANR	336149	Argument	"""!"""		336102	1					
ANR	336150	PrimaryExpression	"""!"""		336102	0					
ANR	336151	CompoundStatement		4:106:132:132	336102	1					
ANR	336152	ExpressionStatement	err = true	787:2:16515:16525	336102	0	True				
ANR	336153	AssignmentExpression	err = true		336102	0		=			
ANR	336154	Identifier	err		336102	0					
ANR	336155	Identifier	true		336102	1					
ANR	336156	ReturnStatement	return 0 ;	788:2:16529:16537	336102	1	True				
ANR	336157	PrimaryExpression	0		336102	0					
ANR	336158	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 2 ) ;"	790:1:16543:16594	336102	3	True				
ANR	336159	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 2 )"		336102	0					
ANR	336160	IdentifierDeclType	char *		336102	0					
ANR	336161	Identifier	temp		336102	1					
ANR	336162	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 2 )"		336102	2		=			
ANR	336163	Identifier	temp		336102	0					
ANR	336164	CallExpression	"r_str_ndup ( input , strlen ( input ) - 2 )"		336102	1					
ANR	336165	Callee	r_str_ndup		336102	0					
ANR	336166	Identifier	r_str_ndup		336102	0					
ANR	336167	ArgumentList	input		336102	1					
ANR	336168	Argument	input		336102	0					
ANR	336169	Identifier	input		336102	0					
ANR	336170	Argument	strlen ( input ) - 2		336102	1					
ANR	336171	AdditiveExpression	strlen ( input ) - 2		336102	0		-			
ANR	336172	CallExpression	strlen ( input )		336102	0					
ANR	336173	Callee	strlen		336102	0					
ANR	336174	Identifier	strlen		336102	0					
ANR	336175	ArgumentList	input		336102	1					
ANR	336176	Argument	input		336102	0					
ANR	336177	Identifier	input		336102	0					
ANR	336178	PrimaryExpression	2		336102	1					
ANR	336179	IfStatement	if ( ! temp )		336102	4					
ANR	336180	Condition	! temp	791:5:16601:16605	336102	0	True				
ANR	336181	UnaryOperationExpression	! temp		336102	0					
ANR	336182	UnaryOperator	!		336102	0					
ANR	336183	Identifier	temp		336102	1					
ANR	336184	CompoundStatement		9:12:229:229	336102	1					
ANR	336185	ExpressionStatement	err = true	792:2:16612:16622	336102	0	True				
ANR	336186	AssignmentExpression	err = true		336102	0		=			
ANR	336187	Identifier	err		336102	0					
ANR	336188	Identifier	true		336102	1					
ANR	336189	ReturnStatement	return 0 ;	793:2:16626:16634	336102	1	True				
ANR	336190	PrimaryExpression	0		336102	0					
ANR	336191	ExpressionStatement	res = getnum ( temp )	795:1:16640:16659	336102	5	True				
ANR	336192	AssignmentExpression	res = getnum ( temp )		336102	0		=			
ANR	336193	Identifier	res		336102	0					
ANR	336194	CallExpression	getnum ( temp )		336102	1					
ANR	336195	Callee	getnum		336102	0					
ANR	336196	Identifier	getnum		336102	0					
ANR	336197	ArgumentList	temp		336102	1					
ANR	336198	Argument	temp		336102	0					
ANR	336199	Identifier	temp		336102	0					
ANR	336200	ExpressionStatement	free ( temp )	796:1:16662:16673	336102	6	True				
ANR	336201	CallExpression	free ( temp )		336102	0					
ANR	336202	Callee	free		336102	0					
ANR	336203	Identifier	free		336102	0					
ANR	336204	ArgumentList	temp		336102	1					
ANR	336205	Argument	temp		336102	0					
ANR	336206	Identifier	temp		336102	0					
ANR	336207	ReturnStatement	return res ;	797:1:16676:16686	336102	7	True				
ANR	336208	Identifier	res		336102	0					
ANR	336209	ReturnType	static st32		336102	1					
ANR	336210	Identifier	getnummemendbang		336102	2					
ANR	336211	ParameterList	const char * input		336102	3					
ANR	336212	Parameter	const char * input	783:30:16359:16375	336102	0	True				
ANR	336213	ParameterType	const char *		336102	0					
ANR	336214	Identifier	input		336102	1					
ANR	336215	CFGEntryNode	ENTRY		336102		True				
ANR	336216	CFGExitNode	EXIT		336102		True				
ANR	336217	Symbol	input		336102						
ANR	336218	Symbol	res		336102						
ANR	336219	Symbol	strlen		336102						
ANR	336220	Symbol	temp		336102						
ANR	336221	Symbol	err		336102						
ANR	336222	Symbol	* strlen		336102						
ANR	336223	Symbol	r_str_ndup		336102						
ANR	336224	Symbol	false		336102						
ANR	336225	Symbol	* input		336102						
ANR	336226	Symbol	true		336102						
ANR	336227	Symbol	getnum		336102						
ANR	336228	Symbol	r_str_endswith		336102						
ANR	336229	Function	getregmembang	800:0:16691:16956							
ANR	336230	FunctionDef	getregmembang (const char * input)		336229	0					
ANR	336231	CompoundStatement		800:45:16736:16956	336229	0					
ANR	336232	IdentifierDeclStatement	st32 res ;	801:1:16739:16747	336229	0	True				
ANR	336233	IdentifierDecl	res		336229	0					
ANR	336234	IdentifierDeclType	st32		336229	0					
ANR	336235	Identifier	res		336229	1					
ANR	336236	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""!"" ) )"		336229	1					
ANR	336237	Condition	"! input || ! * input || ! r_str_endswith ( input , ""!"" )"	802:5:16754:16802	336229	0	True				
ANR	336238	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""!"" )"		336229	0		||			
ANR	336239	UnaryOperationExpression	! input		336229	0					
ANR	336240	UnaryOperator	!		336229	0					
ANR	336241	Identifier	input		336229	1					
ANR	336242	OrExpression	"! * input || ! r_str_endswith ( input , ""!"" )"		336229	1		||			
ANR	336243	UnaryOperationExpression	! * input		336229	0					
ANR	336244	UnaryOperator	!		336229	0					
ANR	336245	UnaryOperationExpression	* input		336229	1					
ANR	336246	UnaryOperator	*		336229	0					
ANR	336247	Identifier	input		336229	1					
ANR	336248	UnaryOperationExpression	"! r_str_endswith ( input , ""!"" )"		336229	1					
ANR	336249	UnaryOperator	!		336229	0					
ANR	336250	CallExpression	"r_str_endswith ( input , ""!"" )"		336229	1					
ANR	336251	Callee	r_str_endswith		336229	0					
ANR	336252	Identifier	r_str_endswith		336229	0					
ANR	336253	ArgumentList	input		336229	1					
ANR	336254	Argument	input		336229	0					
ANR	336255	Identifier	input		336229	0					
ANR	336256	Argument	"""!"""		336229	1					
ANR	336257	PrimaryExpression	"""!"""		336229	0					
ANR	336258	CompoundStatement		3:56:68:68	336229	1					
ANR	336259	ReturnStatement	return - 1 ;	803:2:16809:16818	336229	0	True				
ANR	336260	UnaryOperationExpression	- 1		336229	0					
ANR	336261	UnaryOperator	-		336229	0					
ANR	336262	PrimaryExpression	1		336229	1					
ANR	336263	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	805:1:16824:16875	336229	2	True				
ANR	336264	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		336229	0					
ANR	336265	IdentifierDeclType	char *		336229	0					
ANR	336266	Identifier	temp		336229	1					
ANR	336267	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		336229	2		=			
ANR	336268	Identifier	temp		336229	0					
ANR	336269	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		336229	1					
ANR	336270	Callee	r_str_ndup		336229	0					
ANR	336271	Identifier	r_str_ndup		336229	0					
ANR	336272	ArgumentList	input		336229	1					
ANR	336273	Argument	input		336229	0					
ANR	336274	Identifier	input		336229	0					
ANR	336275	Argument	strlen ( input ) - 1		336229	1					
ANR	336276	AdditiveExpression	strlen ( input ) - 1		336229	0		-			
ANR	336277	CallExpression	strlen ( input )		336229	0					
ANR	336278	Callee	strlen		336229	0					
ANR	336279	Identifier	strlen		336229	0					
ANR	336280	ArgumentList	input		336229	1					
ANR	336281	Argument	input		336229	0					
ANR	336282	Identifier	input		336229	0					
ANR	336283	PrimaryExpression	1		336229	1					
ANR	336284	IfStatement	if ( ! temp )		336229	3					
ANR	336285	Condition	! temp	806:5:16882:16886	336229	0	True				
ANR	336286	UnaryOperationExpression	! temp		336229	0					
ANR	336287	UnaryOperator	!		336229	0					
ANR	336288	Identifier	temp		336229	1					
ANR	336289	CompoundStatement		7:12:152:152	336229	1					
ANR	336290	ReturnStatement	return - 1 ;	807:2:16893:16902	336229	0	True				
ANR	336291	UnaryOperationExpression	- 1		336229	0					
ANR	336292	UnaryOperator	-		336229	0					
ANR	336293	PrimaryExpression	1		336229	1					
ANR	336294	ExpressionStatement	res = getreg ( temp )	809:1:16908:16927	336229	4	True				
ANR	336295	AssignmentExpression	res = getreg ( temp )		336229	0		=			
ANR	336296	Identifier	res		336229	0					
ANR	336297	CallExpression	getreg ( temp )		336229	1					
ANR	336298	Callee	getreg		336229	0					
ANR	336299	Identifier	getreg		336229	0					
ANR	336300	ArgumentList	temp		336229	1					
ANR	336301	Argument	temp		336229	0					
ANR	336302	Identifier	temp		336229	0					
ANR	336303	ExpressionStatement	free ( temp )	810:1:16930:16941	336229	5	True				
ANR	336304	CallExpression	free ( temp )		336229	0					
ANR	336305	Callee	free		336229	0					
ANR	336306	Identifier	free		336229	0					
ANR	336307	ArgumentList	temp		336229	1					
ANR	336308	Argument	temp		336229	0					
ANR	336309	Identifier	temp		336229	0					
ANR	336310	ReturnStatement	return res ;	811:1:16944:16954	336229	6	True				
ANR	336311	Identifier	res		336229	0					
ANR	336312	ReturnType	static st32		336229	1					
ANR	336313	Identifier	getregmembang		336229	2					
ANR	336314	ParameterList	const char * input		336229	3					
ANR	336315	Parameter	const char * input	800:26:16717:16733	336229	0	True				
ANR	336316	ParameterType	const char *		336229	0					
ANR	336317	Identifier	input		336229	1					
ANR	336318	CFGEntryNode	ENTRY		336229		True				
ANR	336319	CFGExitNode	EXIT		336229		True				
ANR	336320	Symbol	input		336229						
ANR	336321	Symbol	res		336229						
ANR	336322	Symbol	strlen		336229						
ANR	336323	Symbol	temp		336229						
ANR	336324	Symbol	r_str_ndup		336229						
ANR	336325	Symbol	getreg		336229						
ANR	336326	Symbol	* input		336229						
ANR	336327	Symbol	r_str_endswith		336229						
ANR	336328	Function	getcoproc	814:0:16959:17246							
ANR	336329	FunctionDef	getcoproc (const char * str)		336328	0					
ANR	336330	CompoundStatement		814:38:16997:17246	336328	0					
ANR	336331	IdentifierDeclStatement	char * ep ;	815:1:17000:17008	336328	0	True				
ANR	336332	IdentifierDecl	* ep		336328	0					
ANR	336333	IdentifierDeclType	char *		336328	0					
ANR	336334	Identifier	ep		336328	1					
ANR	336335	IfStatement	if ( ! str || ! * str )		336328	1					
ANR	336336	Condition	! str || ! * str	816:5:17015:17027	336328	0	True				
ANR	336337	OrExpression	! str || ! * str		336328	0		||			
ANR	336338	UnaryOperationExpression	! str		336328	0					
ANR	336339	UnaryOperator	!		336328	0					
ANR	336340	Identifier	str		336328	1					
ANR	336341	UnaryOperationExpression	! * str		336328	1					
ANR	336342	UnaryOperator	!		336328	0					
ANR	336343	UnaryOperationExpression	* str		336328	1					
ANR	336344	UnaryOperator	*		336328	0					
ANR	336345	Identifier	str		336328	1					
ANR	336346	CompoundStatement		3:20:32:32	336328	1					
ANR	336347	ReturnStatement	return - 1 ;	817:2:17034:17043	336328	0	True				
ANR	336348	UnaryOperationExpression	- 1		336328	0					
ANR	336349	UnaryOperator	-		336328	0					
ANR	336350	PrimaryExpression	1		336328	1					
ANR	336351	IfStatement	if ( * str == 'p' )		336328	2					
ANR	336352	Condition	* str == 'p'	819:5:17053:17063	336328	0	True				
ANR	336353	EqualityExpression	* str == 'p'		336328	0		==			
ANR	336354	UnaryOperationExpression	* str		336328	0					
ANR	336355	UnaryOperator	*		336328	0					
ANR	336356	Identifier	str		336328	1					
ANR	336357	PrimaryExpression	'p'		336328	1					
ANR	336358	CompoundStatement		7:2:72:110	336328	1					
ANR	336359	IdentifierDeclStatement	"int coproc = strtol ( str + 1 , & ep , 10 ) ;"	820:2:17070:17108	336328	0	True				
ANR	336360	IdentifierDecl	"coproc = strtol ( str + 1 , & ep , 10 )"		336328	0					
ANR	336361	IdentifierDeclType	int		336328	0					
ANR	336362	Identifier	coproc		336328	1					
ANR	336363	AssignmentExpression	"coproc = strtol ( str + 1 , & ep , 10 )"		336328	2		=			
ANR	336364	Identifier	coproc		336328	0					
ANR	336365	CallExpression	"strtol ( str + 1 , & ep , 10 )"		336328	1					
ANR	336366	Callee	strtol		336328	0					
ANR	336367	Identifier	strtol		336328	0					
ANR	336368	ArgumentList	str + 1		336328	1					
ANR	336369	Argument	str + 1		336328	0					
ANR	336370	AdditiveExpression	str + 1		336328	0		+			
ANR	336371	Identifier	str		336328	0					
ANR	336372	PrimaryExpression	1		336328	1					
ANR	336373	Argument	& ep		336328	1					
ANR	336374	UnaryOperationExpression	& ep		336328	0					
ANR	336375	UnaryOperator	&		336328	0					
ANR	336376	Identifier	ep		336328	1					
ANR	336377	Argument	10		336328	2					
ANR	336378	PrimaryExpression	10		336328	0					
ANR	336379	IfStatement	if ( ( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' ) )		336328	1					
ANR	336380	Condition	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )	821:6:17116:17150	336328	0	True				
ANR	336381	OrExpression	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )		336328	0		||			
ANR	336382	EqualityExpression	ep [ 0 ] != '\\0'		336328	0		!=			
ANR	336383	ArrayIndexing	ep [ 0 ]		336328	0					
ANR	336384	Identifier	ep		336328	0					
ANR	336385	PrimaryExpression	0		336328	1					
ANR	336386	PrimaryExpression	'\\0'		336328	1					
ANR	336387	EqualityExpression	str [ 1 ] == '\\0'		336328	1		==			
ANR	336388	ArrayIndexing	str [ 1 ]		336328	0					
ANR	336389	Identifier	str		336328	0					
ANR	336390	PrimaryExpression	1		336328	1					
ANR	336391	PrimaryExpression	'\\0'		336328	1					
ANR	336392	CompoundStatement		8:43:155:155	336328	1					
ANR	336393	ReturnStatement	return - 1 ;	822:3:17158:17167	336328	0	True				
ANR	336394	UnaryOperationExpression	- 1		336328	0					
ANR	336395	UnaryOperator	-		336328	0					
ANR	336396	PrimaryExpression	1		336328	1					
ANR	336397	IfStatement	if ( coproc < 16 && coproc >= 0 )		336328	2					
ANR	336398	Condition	coproc < 16 && coproc >= 0	824:6:17179:17204	336328	0	True				
ANR	336399	AndExpression	coproc < 16 && coproc >= 0		336328	0		&&			
ANR	336400	RelationalExpression	coproc < 16		336328	0		<			
ANR	336401	Identifier	coproc		336328	0					
ANR	336402	PrimaryExpression	16		336328	1					
ANR	336403	RelationalExpression	coproc >= 0		336328	1		>=			
ANR	336404	Identifier	coproc		336328	0					
ANR	336405	PrimaryExpression	0		336328	1					
ANR	336406	CompoundStatement		11:34:209:209	336328	1					
ANR	336407	ReturnStatement	return coproc ;	825:3:17212:17225	336328	0	True				
ANR	336408	Identifier	coproc		336328	0					
ANR	336409	ReturnStatement	return - 1 ;	828:1:17235:17244	336328	3	True				
ANR	336410	UnaryOperationExpression	- 1		336328	0					
ANR	336411	UnaryOperator	-		336328	0					
ANR	336412	PrimaryExpression	1		336328	1					
ANR	336413	ReturnType	static int		336328	1					
ANR	336414	Identifier	getcoproc		336328	2					
ANR	336415	ParameterList	const char * str		336328	3					
ANR	336416	Parameter	const char * str	814:21:16980:16994	336328	0	True				
ANR	336417	ParameterType	const char *		336328	0					
ANR	336418	Identifier	str		336328	1					
ANR	336419	CFGEntryNode	ENTRY		336328		True				
ANR	336420	CFGExitNode	EXIT		336328		True				
ANR	336421	Symbol	str		336328						
ANR	336422	Symbol	coproc		336328						
ANR	336423	Symbol	* ep		336328						
ANR	336424	Symbol	& ep		336328						
ANR	336425	Symbol	strtol		336328						
ANR	336426	Symbol	ep		336328						
ANR	336427	Symbol	* str		336328						
ANR	336428	Function	getcoprocreg	831:0:17249:17545							
ANR	336429	FunctionDef	getcoprocreg (const char * str)		336428	0					
ANR	336430	CompoundStatement		831:41:17290:17545	336428	0					
ANR	336431	IdentifierDeclStatement	char * ep ;	832:1:17293:17301	336428	0	True				
ANR	336432	IdentifierDecl	* ep		336428	0					
ANR	336433	IdentifierDeclType	char *		336428	0					
ANR	336434	Identifier	ep		336428	1					
ANR	336435	IfStatement	if ( ! str || ! * str )		336428	1					
ANR	336436	Condition	! str || ! * str	834:5:17310:17322	336428	0	True				
ANR	336437	OrExpression	! str || ! * str		336428	0		||			
ANR	336438	UnaryOperationExpression	! str		336428	0					
ANR	336439	UnaryOperator	!		336428	0					
ANR	336440	Identifier	str		336428	1					
ANR	336441	UnaryOperationExpression	! * str		336428	1					
ANR	336442	UnaryOperator	!		336428	0					
ANR	336443	UnaryOperationExpression	* str		336428	1					
ANR	336444	UnaryOperator	*		336428	0					
ANR	336445	Identifier	str		336428	1					
ANR	336446	CompoundStatement		4:20:34:34	336428	1					
ANR	336447	ReturnStatement	return - 1 ;	835:2:17329:17338	336428	0	True				
ANR	336448	UnaryOperationExpression	- 1		336428	0					
ANR	336449	UnaryOperator	-		336428	0					
ANR	336450	PrimaryExpression	1		336428	1					
ANR	336451	IfStatement	"if ( r_str_startswith ( str , ""c"" ) )"		336428	2					
ANR	336452	Condition	"r_str_startswith ( str , ""c"" )"	837:5:17348:17374	336428	0	True				
ANR	336453	CallExpression	"r_str_startswith ( str , ""c"" )"		336428	0					
ANR	336454	Callee	r_str_startswith		336428	0					
ANR	336455	Identifier	r_str_startswith		336428	0					
ANR	336456	ArgumentList	str		336428	1					
ANR	336457	Argument	str		336428	0					
ANR	336458	Identifier	str		336428	0					
ANR	336459	Argument	"""c"""		336428	1					
ANR	336460	PrimaryExpression	"""c"""		336428	0					
ANR	336461	CompoundStatement		8:2:90:125	336428	1					
ANR	336462	IdentifierDeclStatement	"int reg = strtol ( str + 1 , & ep , 10 ) ;"	838:2:17381:17416	336428	0	True				
ANR	336463	IdentifierDecl	"reg = strtol ( str + 1 , & ep , 10 )"		336428	0					
ANR	336464	IdentifierDeclType	int		336428	0					
ANR	336465	Identifier	reg		336428	1					
ANR	336466	AssignmentExpression	"reg = strtol ( str + 1 , & ep , 10 )"		336428	2		=			
ANR	336467	Identifier	reg		336428	0					
ANR	336468	CallExpression	"strtol ( str + 1 , & ep , 10 )"		336428	1					
ANR	336469	Callee	strtol		336428	0					
ANR	336470	Identifier	strtol		336428	0					
ANR	336471	ArgumentList	str + 1		336428	1					
ANR	336472	Argument	str + 1		336428	0					
ANR	336473	AdditiveExpression	str + 1		336428	0		+			
ANR	336474	Identifier	str		336428	0					
ANR	336475	PrimaryExpression	1		336428	1					
ANR	336476	Argument	& ep		336428	1					
ANR	336477	UnaryOperationExpression	& ep		336428	0					
ANR	336478	UnaryOperator	&		336428	0					
ANR	336479	Identifier	ep		336428	1					
ANR	336480	Argument	10		336428	2					
ANR	336481	PrimaryExpression	10		336428	0					
ANR	336482	IfStatement	if ( ( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' ) )		336428	1					
ANR	336483	Condition	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )	839:6:17424:17458	336428	0	True				
ANR	336484	OrExpression	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )		336428	0		||			
ANR	336485	EqualityExpression	ep [ 0 ] != '\\0'		336428	0		!=			
ANR	336486	ArrayIndexing	ep [ 0 ]		336428	0					
ANR	336487	Identifier	ep		336428	0					
ANR	336488	PrimaryExpression	0		336428	1					
ANR	336489	PrimaryExpression	'\\0'		336428	1					
ANR	336490	EqualityExpression	str [ 1 ] == '\\0'		336428	1		==			
ANR	336491	ArrayIndexing	str [ 1 ]		336428	0					
ANR	336492	Identifier	str		336428	0					
ANR	336493	PrimaryExpression	1		336428	1					
ANR	336494	PrimaryExpression	'\\0'		336428	1					
ANR	336495	CompoundStatement		9:43:170:170	336428	1					
ANR	336496	ReturnStatement	return - 1 ;	840:3:17466:17475	336428	0	True				
ANR	336497	UnaryOperationExpression	- 1		336428	0					
ANR	336498	UnaryOperator	-		336428	0					
ANR	336499	PrimaryExpression	1		336428	1					
ANR	336500	IfStatement	if ( reg < 16 && reg >= 0 )		336428	2					
ANR	336501	Condition	reg < 16 && reg >= 0	842:6:17487:17506	336428	0	True				
ANR	336502	AndExpression	reg < 16 && reg >= 0		336428	0		&&			
ANR	336503	RelationalExpression	reg < 16		336428	0		<			
ANR	336504	Identifier	reg		336428	0					
ANR	336505	PrimaryExpression	16		336428	1					
ANR	336506	RelationalExpression	reg >= 0		336428	1		>=			
ANR	336507	Identifier	reg		336428	0					
ANR	336508	PrimaryExpression	0		336428	1					
ANR	336509	CompoundStatement		12:28:218:218	336428	1					
ANR	336510	ReturnStatement	return reg ;	843:3:17514:17524	336428	0	True				
ANR	336511	Identifier	reg		336428	0					
ANR	336512	ReturnStatement	return - 1 ;	846:1:17534:17543	336428	3	True				
ANR	336513	UnaryOperationExpression	- 1		336428	0					
ANR	336514	UnaryOperator	-		336428	0					
ANR	336515	PrimaryExpression	1		336428	1					
ANR	336516	ReturnType	static int		336428	1					
ANR	336517	Identifier	getcoprocreg		336428	2					
ANR	336518	ParameterList	const char * str		336428	3					
ANR	336519	Parameter	const char * str	831:24:17273:17287	336428	0	True				
ANR	336520	ParameterType	const char *		336428	0					
ANR	336521	Identifier	str		336428	1					
ANR	336522	CFGEntryNode	ENTRY		336428		True				
ANR	336523	CFGExitNode	EXIT		336428		True				
ANR	336524	Symbol	str		336428						
ANR	336525	Symbol	r_str_startswith		336428						
ANR	336526	Symbol	* ep		336428						
ANR	336527	Symbol	& ep		336428						
ANR	336528	Symbol	strtol		336428						
ANR	336529	Symbol	reg		336428						
ANR	336530	Symbol	ep		336428						
ANR	336531	Symbol	* str		336428						
ANR	336532	Function	interpret_msrbank	849:0:17548:18250							
ANR	336533	FunctionDef	"interpret_msrbank (char * str , ut8 * spsr)"		336532	0					
ANR	336534	CompoundStatement		849:52:17600:18250	336532	0					
ANR	336535	IdentifierDeclStatement	"const char fields [ ] = { 'c' , 'x' , 's' , 'f' , 0 } ;"	850:1:17603:17648	336532	0	True				
ANR	336536	IdentifierDecl	"fields [ ] = { 'c' , 'x' , 's' , 'f' , 0 }"		336532	0					
ANR	336537	IdentifierDeclType	const char [ ]		336532	0					
ANR	336538	Identifier	fields		336532	1					
ANR	336539	AssignmentExpression	"fields [ ] = { 'c' , 'x' , 's' , 'f' , 0 }"		336532	2		=			
ANR	336540	Identifier	fields		336532	0					
ANR	336541	InitializerList	'c'		336532	1					
ANR	336542	PrimaryExpression	'c'		336532	0					
ANR	336543	PrimaryExpression	'x'		336532	1					
ANR	336544	PrimaryExpression	's'		336532	2					
ANR	336545	PrimaryExpression	'f'		336532	3					
ANR	336546	PrimaryExpression	0		336532	4					
ANR	336547	IdentifierDeclStatement	int res = 0 ;	851:1:17651:17662	336532	1	True				
ANR	336548	IdentifierDecl	res = 0		336532	0					
ANR	336549	IdentifierDeclType	int		336532	0					
ANR	336550	Identifier	res		336532	1					
ANR	336551	AssignmentExpression	res = 0		336532	2		=			
ANR	336552	Identifier	res		336532	0					
ANR	336553	PrimaryExpression	0		336532	1					
ANR	336554	IdentifierDeclStatement	"int i , j ;"	852:1:17665:17673	336532	2	True				
ANR	336555	IdentifierDecl	i		336532	0					
ANR	336556	IdentifierDeclType	int		336532	0					
ANR	336557	Identifier	i		336532	1					
ANR	336558	IdentifierDecl	j		336532	1					
ANR	336559	IdentifierDeclType	int		336532	0					
ANR	336560	Identifier	j		336532	1					
ANR	336561	IfStatement	"if ( r_str_startswith ( str , ""spsr_"" ) )"		336532	3					
ANR	336562	Condition	"r_str_startswith ( str , ""spsr_"" )"	853:5:17680:17710	336532	0	True				
ANR	336563	CallExpression	"r_str_startswith ( str , ""spsr_"" )"		336532	0					
ANR	336564	Callee	r_str_startswith		336532	0					
ANR	336565	Identifier	r_str_startswith		336532	0					
ANR	336566	ArgumentList	str		336532	1					
ANR	336567	Argument	str		336532	0					
ANR	336568	Identifier	str		336532	0					
ANR	336569	Argument	"""spsr_"""		336532	1					
ANR	336570	PrimaryExpression	"""spsr_"""		336532	0					
ANR	336571	CompoundStatement		5:38:112:112	336532	1					
ANR	336572	ExpressionStatement	* spsr = 1	854:2:17717:17726	336532	0	True				
ANR	336573	AssignmentExpression	* spsr = 1		336532	0		=			
ANR	336574	UnaryOperationExpression	* spsr		336532	0					
ANR	336575	UnaryOperator	*		336532	0					
ANR	336576	Identifier	spsr		336532	1					
ANR	336577	PrimaryExpression	1		336532	1					
ANR	336578	ElseStatement	else		336532	0					
ANR	336579	CompoundStatement		7:8:135:135	336532	0					
ANR	336580	ExpressionStatement	* spsr = 0	856:2:17740:17749	336532	0	True				
ANR	336581	AssignmentExpression	* spsr = 0		336532	0		=			
ANR	336582	UnaryOperationExpression	* spsr		336532	0					
ANR	336583	UnaryOperator	*		336532	0					
ANR	336584	Identifier	spsr		336532	1					
ANR	336585	PrimaryExpression	0		336532	1					
ANR	336586	IfStatement	"if ( r_str_startswith ( str , ""apsr_"" ) )"		336532	4					
ANR	336587	Condition	"r_str_startswith ( str , ""apsr_"" )"	859:5:17763:17793	336532	0	True				
ANR	336588	CallExpression	"r_str_startswith ( str , ""apsr_"" )"		336532	0					
ANR	336589	Callee	r_str_startswith		336532	0					
ANR	336590	Identifier	r_str_startswith		336532	0					
ANR	336591	ArgumentList	str		336532	1					
ANR	336592	Argument	str		336532	0					
ANR	336593	Identifier	str		336532	0					
ANR	336594	Argument	"""apsr_"""		336532	1					
ANR	336595	PrimaryExpression	"""apsr_"""		336532	0					
ANR	336596	CompoundStatement		11:38:195:195	336532	1					
ANR	336597	IfStatement	"if ( ! ( strcmp ( str + 5 , ""g"" ) ) )"		336532	0					
ANR	336598	Condition	"! ( strcmp ( str + 5 , ""g"" ) )"	860:6:17804:17825	336532	0	True				
ANR	336599	UnaryOperationExpression	"! ( strcmp ( str + 5 , ""g"" ) )"		336532	0					
ANR	336600	UnaryOperator	!		336532	0					
ANR	336601	CallExpression	"strcmp ( str + 5 , ""g"" )"		336532	1					
ANR	336602	Callee	strcmp		336532	0					
ANR	336603	Identifier	strcmp		336532	0					
ANR	336604	ArgumentList	str + 5		336532	1					
ANR	336605	Argument	str + 5		336532	0					
ANR	336606	AdditiveExpression	str + 5		336532	0		+			
ANR	336607	Identifier	str		336532	0					
ANR	336608	PrimaryExpression	5		336532	1					
ANR	336609	Argument	"""g"""		336532	1					
ANR	336610	PrimaryExpression	"""g"""		336532	0					
ANR	336611	CompoundStatement		12:30:227:227	336532	1					
ANR	336612	ReturnStatement	return 0x4 ;	861:3:17833:17843	336532	0	True				
ANR	336613	PrimaryExpression	0x4		336532	0					
ANR	336614	IfStatement	"if ( ! ( strcmp ( str + 5 , ""nzcvq"" ) ) )"		336532	1					
ANR	336615	Condition	"! ( strcmp ( str + 5 , ""nzcvq"" ) )"	863:6:17855:17880	336532	0	True				
ANR	336616	UnaryOperationExpression	"! ( strcmp ( str + 5 , ""nzcvq"" ) )"		336532	0					
ANR	336617	UnaryOperator	!		336532	0					
ANR	336618	CallExpression	"strcmp ( str + 5 , ""nzcvq"" )"		336532	1					
ANR	336619	Callee	strcmp		336532	0					
ANR	336620	Identifier	strcmp		336532	0					
ANR	336621	ArgumentList	str + 5		336532	1					
ANR	336622	Argument	str + 5		336532	0					
ANR	336623	AdditiveExpression	str + 5		336532	0		+			
ANR	336624	Identifier	str		336532	0					
ANR	336625	PrimaryExpression	5		336532	1					
ANR	336626	Argument	"""nzcvq"""		336532	1					
ANR	336627	PrimaryExpression	"""nzcvq"""		336532	0					
ANR	336628	CompoundStatement		15:34:282:282	336532	1					
ANR	336629	ReturnStatement	return 0x8 ;	864:3:17888:17898	336532	0	True				
ANR	336630	PrimaryExpression	0x8		336532	0					
ANR	336631	IfStatement	"if ( ! ( strcmp ( str + 5 , ""nzcvqg"" ) ) )"		336532	2					
ANR	336632	Condition	"! ( strcmp ( str + 5 , ""nzcvqg"" ) )"	866:6:17910:17936	336532	0	True				
ANR	336633	UnaryOperationExpression	"! ( strcmp ( str + 5 , ""nzcvqg"" ) )"		336532	0					
ANR	336634	UnaryOperator	!		336532	0					
ANR	336635	CallExpression	"strcmp ( str + 5 , ""nzcvqg"" )"		336532	1					
ANR	336636	Callee	strcmp		336532	0					
ANR	336637	Identifier	strcmp		336532	0					
ANR	336638	ArgumentList	str + 5		336532	1					
ANR	336639	Argument	str + 5		336532	0					
ANR	336640	AdditiveExpression	str + 5		336532	0		+			
ANR	336641	Identifier	str		336532	0					
ANR	336642	PrimaryExpression	5		336532	1					
ANR	336643	Argument	"""nzcvqg"""		336532	1					
ANR	336644	PrimaryExpression	"""nzcvqg"""		336532	0					
ANR	336645	CompoundStatement		18:35:338:338	336532	1					
ANR	336646	ReturnStatement	return 0xc ;	867:3:17944:17954	336532	0	True				
ANR	336647	PrimaryExpression	0xc		336532	0					
ANR	336648	IfStatement	"if ( r_str_startswith ( str , ""cpsr_"" ) || r_str_startswith ( str , ""spsr_"" ) )"		336532	5					
ANR	336649	Condition	"r_str_startswith ( str , ""cpsr_"" ) || r_str_startswith ( str , ""spsr_"" )"	870:5:17968:18033	336532	0	True				
ANR	336650	OrExpression	"r_str_startswith ( str , ""cpsr_"" ) || r_str_startswith ( str , ""spsr_"" )"		336532	0		||			
ANR	336651	CallExpression	"r_str_startswith ( str , ""cpsr_"" )"		336532	0					
ANR	336652	Callee	r_str_startswith		336532	0					
ANR	336653	Identifier	r_str_startswith		336532	0					
ANR	336654	ArgumentList	str		336532	1					
ANR	336655	Argument	str		336532	0					
ANR	336656	Identifier	str		336532	0					
ANR	336657	Argument	"""cpsr_"""		336532	1					
ANR	336658	PrimaryExpression	"""cpsr_"""		336532	0					
ANR	336659	CallExpression	"r_str_startswith ( str , ""spsr_"" )"		336532	1					
ANR	336660	Callee	r_str_startswith		336532	0					
ANR	336661	Identifier	r_str_startswith		336532	0					
ANR	336662	ArgumentList	str		336532	1					
ANR	336663	Argument	str		336532	0					
ANR	336664	Identifier	str		336532	0					
ANR	336665	Argument	"""spsr_"""		336532	1					
ANR	336666	PrimaryExpression	"""spsr_"""		336532	0					
ANR	336667	CompoundStatement		22:73:435:435	336532	1					
ANR	336668	ForStatement	for ( i = 0 ; str [ 5 + i ] ; i ++ )		336532	0					
ANR	336669	ForInit	i = 0 ;	871:7:18045:18050	336532	0	True				
ANR	336670	AssignmentExpression	i = 0		336532	0		=			
ANR	336671	Identifier	i		336532	0					
ANR	336672	PrimaryExpression	0		336532	1					
ANR	336673	Condition	str [ 5 + i ]	871:14:18052:18059	336532	1	True				
ANR	336674	ArrayIndexing	str [ 5 + i ]		336532	0					
ANR	336675	Identifier	str		336532	0					
ANR	336676	AdditiveExpression	5 + i		336532	1		+			
ANR	336677	PrimaryExpression	5		336532	0					
ANR	336678	Identifier	i		336532	1					
ANR	336679	PostIncDecOperationExpression	i ++	871:24:18062:18064	336532	2	True				
ANR	336680	Identifier	i		336532	0					
ANR	336681	IncDec	++		336532	1					
ANR	336682	CompoundStatement		23:29:466:466	336532	3					
ANR	336683	ForStatement	for ( j = 0 ; fields [ j ] ; j ++ )		336532	0					
ANR	336684	ForInit	j = 0 ;	872:8:18077:18082	336532	0	True				
ANR	336685	AssignmentExpression	j = 0		336532	0		=			
ANR	336686	Identifier	j		336532	0					
ANR	336687	PrimaryExpression	0		336532	1					
ANR	336688	Condition	fields [ j ]	872:15:18084:18092	336532	1	True				
ANR	336689	ArrayIndexing	fields [ j ]		336532	0					
ANR	336690	Identifier	fields		336532	0					
ANR	336691	Identifier	j		336532	1					
ANR	336692	PostIncDecOperationExpression	j ++	872:26:18095:18097	336532	2	True				
ANR	336693	Identifier	j		336532	0					
ANR	336694	IncDec	++		336532	1					
ANR	336695	CompoundStatement		24:31:499:499	336532	3					
ANR	336696	IfStatement	if ( str [ 5 + i ] == fields [ j ] )		336532	0					
ANR	336697	Condition	str [ 5 + i ] == fields [ j ]	873:8:18110:18130	336532	0	True				
ANR	336698	EqualityExpression	str [ 5 + i ] == fields [ j ]		336532	0		==			
ANR	336699	ArrayIndexing	str [ 5 + i ]		336532	0					
ANR	336700	Identifier	str		336532	0					
ANR	336701	AdditiveExpression	5 + i		336532	1		+			
ANR	336702	PrimaryExpression	5		336532	0					
ANR	336703	Identifier	i		336532	1					
ANR	336704	ArrayIndexing	fields [ j ]		336532	1					
ANR	336705	Identifier	fields		336532	0					
ANR	336706	Identifier	j		336532	1					
ANR	336707	CompoundStatement		25:31:532:532	336532	1					
ANR	336708	BreakStatement	break ;	874:5:18140:18145	336532	0	True				
ANR	336709	IfStatement	if ( ! ( fields [ j ] ) )		336532	1					
ANR	336710	Condition	! ( fields [ j ] )	877:7:18165:18176	336532	0	True				
ANR	336711	UnaryOperationExpression	! ( fields [ j ] )		336532	0					
ANR	336712	UnaryOperator	!		336532	0					
ANR	336713	ArrayIndexing	fields [ j ]		336532	1					
ANR	336714	Identifier	fields		336532	0					
ANR	336715	Identifier	j		336532	1					
ANR	336716	CompoundStatement		29:21:578:578	336532	1					
ANR	336717	ReturnStatement	return 0 ;	878:4:18185:18193	336532	0	True				
ANR	336718	PrimaryExpression	0		336532	0					
ANR	336719	ExpressionStatement	res |= 1 << j	880:3:18203:18216	336532	2	True				
ANR	336720	AssignmentExpression	res |= 1 << j		336532	0		|=			
ANR	336721	Identifier	res		336532	0					
ANR	336722	ShiftExpression	1 << j		336532	1		<<			
ANR	336723	PrimaryExpression	1		336532	0					
ANR	336724	Identifier	j		336532	1					
ANR	336725	ReturnStatement	return res ;	882:2:18224:18234	336532	1	True				
ANR	336726	Identifier	res		336532	0					
ANR	336727	ReturnStatement	return 0 ;	884:1:18240:18248	336532	6	True				
ANR	336728	PrimaryExpression	0		336532	0					
ANR	336729	ReturnType	static ut8		336532	1					
ANR	336730	Identifier	interpret_msrbank		336532	2					
ANR	336731	ParameterList	"char * str , ut8 * spsr"		336532	3					
ANR	336732	Parameter	char * str	849:30:17578:17586	336532	0	True				
ANR	336733	ParameterType	char *		336532	0					
ANR	336734	Identifier	str		336532	1					
ANR	336735	Parameter	ut8 * spsr	849:41:17589:17597	336532	1	True				
ANR	336736	ParameterType	ut8 *		336532	0					
ANR	336737	Identifier	spsr		336532	1					
ANR	336738	CFGEntryNode	ENTRY		336532		True				
ANR	336739	CFGExitNode	EXIT		336532		True				
ANR	336740	Symbol	r_str_startswith		336532						
ANR	336741	Symbol	strcmp		336532						
ANR	336742	Symbol	res		336532						
ANR	336743	Symbol	spsr		336532						
ANR	336744	Symbol	i		336532						
ANR	336745	Symbol	j		336532						
ANR	336746	Symbol	str		336532						
ANR	336747	Symbol	* fields		336532						
ANR	336748	Symbol	* i		336532						
ANR	336749	Symbol	* j		336532						
ANR	336750	Symbol	* spsr		336532						
ANR	336751	Symbol	* str		336532						
ANR	336752	Symbol	fields		336532						
ANR	336753	Function	thumb_getshift	887:0:18255:19257							
ANR	336754	FunctionDef	thumb_getshift (const char * str)		336753	0					
ANR	336755	CompoundStatement		887:44:18299:19257	336753	0					
ANR	336756	IdentifierDeclStatement	"const char * shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" } ;"	889:1:18392:18458	336753	0	True				
ANR	336757	IdentifierDecl	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		336753	0					
ANR	336758	IdentifierDeclType	const char * [ ]		336753	0					
ANR	336759	Identifier	shifts		336753	1					
ANR	336760	AssignmentExpression	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		336753	2		=			
ANR	336761	Identifier	shifts		336753	0					
ANR	336762	InitializerList	"""LSL"""		336753	1					
ANR	336763	PrimaryExpression	"""LSL"""		336753	0					
ANR	336764	PrimaryExpression	"""LSR"""		336753	1					
ANR	336765	PrimaryExpression	"""ASR"""		336753	2					
ANR	336766	PrimaryExpression	"""ROR"""		336753	3					
ANR	336767	PrimaryExpression	0		336753	4					
ANR	336768	PrimaryExpression	"""RRX"""		336753	5					
ANR	336769	IdentifierDeclStatement	char * type = strdup ( str ) ;	892:1:18461:18486	336753	1	True				
ANR	336770	IdentifierDecl	* type = strdup ( str )		336753	0					
ANR	336771	IdentifierDeclType	char *		336753	0					
ANR	336772	Identifier	type		336753	1					
ANR	336773	AssignmentExpression	* type = strdup ( str )		336753	2		=			
ANR	336774	Identifier	type		336753	0					
ANR	336775	CallExpression	strdup ( str )		336753	1					
ANR	336776	Callee	strdup		336753	0					
ANR	336777	Identifier	strdup		336753	0					
ANR	336778	ArgumentList	str		336753	1					
ANR	336779	Argument	str		336753	0					
ANR	336780	Identifier	str		336753	0					
ANR	336781	IdentifierDeclStatement	char * arg ;	893:1:18489:18498	336753	2	True				
ANR	336782	IdentifierDecl	* arg		336753	0					
ANR	336783	IdentifierDeclType	char *		336753	0					
ANR	336784	Identifier	arg		336753	1					
ANR	336785	IdentifierDeclStatement	char * space ;	894:1:18501:18512	336753	3	True				
ANR	336786	IdentifierDecl	* space		336753	0					
ANR	336787	IdentifierDeclType	char *		336753	0					
ANR	336788	Identifier	space		336753	1					
ANR	336789	IdentifierDeclStatement	ut32 res = 0 ;	895:1:18515:18527	336753	4	True				
ANR	336790	IdentifierDecl	res = 0		336753	0					
ANR	336791	IdentifierDeclType	ut32		336753	0					
ANR	336792	Identifier	res		336753	1					
ANR	336793	AssignmentExpression	res = 0		336753	2		=			
ANR	336794	Identifier	res		336753	0					
ANR	336795	PrimaryExpression	0		336753	1					
ANR	336796	IdentifierDeclStatement	ut32 shift = false ;	896:1:18530:18548	336753	5	True				
ANR	336797	IdentifierDecl	shift = false		336753	0					
ANR	336798	IdentifierDeclType	ut32		336753	0					
ANR	336799	Identifier	shift		336753	1					
ANR	336800	AssignmentExpression	shift = false		336753	2		=			
ANR	336801	Identifier	false		336753	0					
ANR	336802	Identifier	false		336753	1					
ANR	336803	ExpressionStatement	err = false	897:1:18551:18562	336753	6	True				
ANR	336804	AssignmentExpression	err = false		336753	0		=			
ANR	336805	Identifier	err		336753	0					
ANR	336806	Identifier	false		336753	1					
ANR	336807	IdentifierDeclStatement	ut32 argn ;	898:1:18565:18574	336753	7	True				
ANR	336808	IdentifierDecl	argn		336753	0					
ANR	336809	IdentifierDeclType	ut32		336753	0					
ANR	336810	Identifier	argn		336753	1					
ANR	336811	IdentifierDeclStatement	ut32 i ;	899:1:18577:18583	336753	8	True				
ANR	336812	IdentifierDecl	i		336753	0					
ANR	336813	IdentifierDeclType	ut32		336753	0					
ANR	336814	Identifier	i		336753	1					
ANR	336815	ExpressionStatement	"r_str_case ( type , true )"	901:1:18588:18610	336753	9	True				
ANR	336816	CallExpression	"r_str_case ( type , true )"		336753	0					
ANR	336817	Callee	r_str_case		336753	0					
ANR	336818	Identifier	r_str_case		336753	0					
ANR	336819	ArgumentList	type		336753	1					
ANR	336820	Argument	type		336753	0					
ANR	336821	Identifier	type		336753	0					
ANR	336822	Argument	true		336753	1					
ANR	336823	Identifier	true		336753	0					
ANR	336824	IfStatement	"if ( ! strcmp ( type , shifts [ 5 ] ) )"		336753	10					
ANR	336825	Condition	"! strcmp ( type , shifts [ 5 ] )"	903:5:18619:18643	336753	0	True				
ANR	336826	UnaryOperationExpression	"! strcmp ( type , shifts [ 5 ] )"		336753	0					
ANR	336827	UnaryOperator	!		336753	0					
ANR	336828	CallExpression	"strcmp ( type , shifts [ 5 ] )"		336753	1					
ANR	336829	Callee	strcmp		336753	0					
ANR	336830	Identifier	strcmp		336753	0					
ANR	336831	ArgumentList	type		336753	1					
ANR	336832	Argument	type		336753	0					
ANR	336833	Identifier	type		336753	0					
ANR	336834	Argument	shifts [ 5 ]		336753	1					
ANR	336835	ArrayIndexing	shifts [ 5 ]		336753	0					
ANR	336836	Identifier	shifts		336753	0					
ANR	336837	PrimaryExpression	5		336753	1					
ANR	336838	CompoundStatement		17:32:346:346	336753	1					
ANR	336839	ExpressionStatement	res |= 3 << 12	905:2:18677:18691	336753	0	True				
ANR	336840	AssignmentExpression	res |= 3 << 12		336753	0		|=			
ANR	336841	Identifier	res		336753	0					
ANR	336842	ShiftExpression	3 << 12		336753	1		<<			
ANR	336843	PrimaryExpression	3		336753	0					
ANR	336844	PrimaryExpression	12		336753	1					
ANR	336845	ExpressionStatement	free ( type )	906:2:18696:18707	336753	1	True				
ANR	336846	CallExpression	free ( type )		336753	0					
ANR	336847	Callee	free		336753	0					
ANR	336848	Identifier	free		336753	0					
ANR	336849	ArgumentList	type		336753	1					
ANR	336850	Argument	type		336753	0					
ANR	336851	Identifier	type		336753	0					
ANR	336852	ReturnStatement	return res ;	907:2:18711:18721	336753	2	True				
ANR	336853	Identifier	res		336753	0					
ANR	336854	ExpressionStatement	"space = strchr ( type , ' ' )"	910:1:18729:18755	336753	11	True				
ANR	336855	AssignmentExpression	"space = strchr ( type , ' ' )"		336753	0		=			
ANR	336856	Identifier	space		336753	0					
ANR	336857	CallExpression	"strchr ( type , ' ' )"		336753	1					
ANR	336858	Callee	strchr		336753	0					
ANR	336859	Identifier	strchr		336753	0					
ANR	336860	ArgumentList	type		336753	1					
ANR	336861	Argument	type		336753	0					
ANR	336862	Identifier	type		336753	0					
ANR	336863	Argument	' '		336753	1					
ANR	336864	PrimaryExpression	' '		336753	0					
ANR	336865	IfStatement	if ( ! space )		336753	12					
ANR	336866	Condition	! space	911:5:18762:18767	336753	0	True				
ANR	336867	UnaryOperationExpression	! space		336753	0					
ANR	336868	UnaryOperator	!		336753	0					
ANR	336869	Identifier	space		336753	1					
ANR	336870	CompoundStatement		25:13:470:470	336753	1					
ANR	336871	ExpressionStatement	free ( type )	912:2:18774:18785	336753	0	True				
ANR	336872	CallExpression	free ( type )		336753	0					
ANR	336873	Callee	free		336753	0					
ANR	336874	Identifier	free		336753	0					
ANR	336875	ArgumentList	type		336753	1					
ANR	336876	Argument	type		336753	0					
ANR	336877	Identifier	type		336753	0					
ANR	336878	ExpressionStatement	err = true	913:2:18789:18799	336753	1	True				
ANR	336879	AssignmentExpression	err = true		336753	0		=			
ANR	336880	Identifier	err		336753	0					
ANR	336881	Identifier	true		336753	1					
ANR	336882	ReturnStatement	return 0 ;	914:2:18803:18811	336753	2	True				
ANR	336883	PrimaryExpression	0		336753	0					
ANR	336884	ExpressionStatement	* space = 0	916:1:18817:18827	336753	13	True				
ANR	336885	AssignmentExpression	* space = 0		336753	0		=			
ANR	336886	UnaryOperationExpression	* space		336753	0					
ANR	336887	UnaryOperator	*		336753	0					
ANR	336888	Identifier	space		336753	1					
ANR	336889	PrimaryExpression	0		336753	1					
ANR	336890	ExpressionStatement	arg = strdup ( ++ space )	917:1:18830:18852	336753	14	True				
ANR	336891	AssignmentExpression	arg = strdup ( ++ space )		336753	0		=			
ANR	336892	Identifier	arg		336753	0					
ANR	336893	CallExpression	strdup ( ++ space )		336753	1					
ANR	336894	Callee	strdup		336753	0					
ANR	336895	Identifier	strdup		336753	0					
ANR	336896	ArgumentList	++ space		336753	1					
ANR	336897	Argument	++ space		336753	0					
ANR	336898	UnaryExpression	++ space		336753	0					
ANR	336899	IncDec	++		336753	0					
ANR	336900	Identifier	space		336753	1					
ANR	336901	ForStatement	for ( i = 0 ; shifts [ i ] ; i ++ )		336753	15					
ANR	336902	ForInit	i = 0 ;	919:6:18862:18867	336753	0	True				
ANR	336903	AssignmentExpression	i = 0		336753	0		=			
ANR	336904	Identifier	i		336753	0					
ANR	336905	PrimaryExpression	0		336753	1					
ANR	336906	Condition	shifts [ i ]	919:13:18869:18877	336753	1	True				
ANR	336907	ArrayIndexing	shifts [ i ]		336753	0					
ANR	336908	Identifier	shifts		336753	0					
ANR	336909	Identifier	i		336753	1					
ANR	336910	PostIncDecOperationExpression	i ++	919:24:18880:18882	336753	2	True				
ANR	336911	Identifier	i		336753	0					
ANR	336912	IncDec	++		336753	1					
ANR	336913	CompoundStatement		33:29:585:585	336753	3					
ANR	336914	IfStatement	"if ( ! strcmp ( type , shifts [ i ] ) )"		336753	0					
ANR	336915	Condition	"! strcmp ( type , shifts [ i ] )"	920:6:18893:18917	336753	0	True				
ANR	336916	UnaryOperationExpression	"! strcmp ( type , shifts [ i ] )"		336753	0					
ANR	336917	UnaryOperator	!		336753	0					
ANR	336918	CallExpression	"strcmp ( type , shifts [ i ] )"		336753	1					
ANR	336919	Callee	strcmp		336753	0					
ANR	336920	Identifier	strcmp		336753	0					
ANR	336921	ArgumentList	type		336753	1					
ANR	336922	Argument	type		336753	0					
ANR	336923	Identifier	type		336753	0					
ANR	336924	Argument	shifts [ i ]		336753	1					
ANR	336925	ArrayIndexing	shifts [ i ]		336753	0					
ANR	336926	Identifier	shifts		336753	0					
ANR	336927	Identifier	i		336753	1					
ANR	336928	CompoundStatement		34:33:620:620	336753	1					
ANR	336929	ExpressionStatement	shift = true	921:3:18925:18937	336753	0	True				
ANR	336930	AssignmentExpression	shift = true		336753	0		=			
ANR	336931	Identifier	shift		336753	0					
ANR	336932	Identifier	true		336753	1					
ANR	336933	BreakStatement	break ;	922:3:18942:18947	336753	1	True				
ANR	336934	IfStatement	if ( ! shift )		336753	16					
ANR	336935	Condition	! shift	925:5:18961:18966	336753	0	True				
ANR	336936	UnaryOperationExpression	! shift		336753	0					
ANR	336937	UnaryOperator	!		336753	0					
ANR	336938	Identifier	shift		336753	1					
ANR	336939	CompoundStatement		39:13:669:669	336753	1					
ANR	336940	ExpressionStatement	err = true	926:2:18973:18983	336753	0	True				
ANR	336941	AssignmentExpression	err = true		336753	0		=			
ANR	336942	Identifier	err		336753	0					
ANR	336943	Identifier	true		336753	1					
ANR	336944	ExpressionStatement	free ( type )	927:2:18987:18998	336753	1	True				
ANR	336945	CallExpression	free ( type )		336753	0					
ANR	336946	Callee	free		336753	0					
ANR	336947	Identifier	free		336753	0					
ANR	336948	ArgumentList	type		336753	1					
ANR	336949	Argument	type		336753	0					
ANR	336950	Identifier	type		336753	0					
ANR	336951	ExpressionStatement	free ( arg )	928:2:19002:19012	336753	2	True				
ANR	336952	CallExpression	free ( arg )		336753	0					
ANR	336953	Callee	free		336753	0					
ANR	336954	Identifier	free		336753	0					
ANR	336955	ArgumentList	arg		336753	1					
ANR	336956	Argument	arg		336753	0					
ANR	336957	Identifier	arg		336753	0					
ANR	336958	ReturnStatement	return 0 ;	929:2:19016:19024	336753	3	True				
ANR	336959	PrimaryExpression	0		336753	0					
ANR	336960	ExpressionStatement	res |= i << 12	931:1:19030:19044	336753	17	True				
ANR	336961	AssignmentExpression	res |= i << 12		336753	0		|=			
ANR	336962	Identifier	res		336753	0					
ANR	336963	ShiftExpression	i << 12		336753	1		<<			
ANR	336964	Identifier	i		336753	0					
ANR	336965	PrimaryExpression	12		336753	1					
ANR	336966	ExpressionStatement	argn = getnum ( arg )	933:1:19050:19069	336753	18	True				
ANR	336967	AssignmentExpression	argn = getnum ( arg )		336753	0		=			
ANR	336968	Identifier	argn		336753	0					
ANR	336969	CallExpression	getnum ( arg )		336753	1					
ANR	336970	Callee	getnum		336753	0					
ANR	336971	Identifier	getnum		336753	0					
ANR	336972	ArgumentList	arg		336753	1					
ANR	336973	Argument	arg		336753	0					
ANR	336974	Identifier	arg		336753	0					
ANR	336975	IfStatement	if ( err || argn > 32 )		336753	19					
ANR	336976	Condition	err || argn > 32	934:5:19076:19091	336753	0	True				
ANR	336977	OrExpression	err || argn > 32		336753	0		||			
ANR	336978	Identifier	err		336753	0					
ANR	336979	RelationalExpression	argn > 32		336753	1		>			
ANR	336980	Identifier	argn		336753	0					
ANR	336981	PrimaryExpression	32		336753	1					
ANR	336982	CompoundStatement		48:23:794:794	336753	1					
ANR	336983	ExpressionStatement	err = true	935:2:19098:19108	336753	0	True				
ANR	336984	AssignmentExpression	err = true		336753	0		=			
ANR	336985	Identifier	err		336753	0					
ANR	336986	Identifier	true		336753	1					
ANR	336987	ExpressionStatement	free ( type )	936:2:19112:19123	336753	1	True				
ANR	336988	CallExpression	free ( type )		336753	0					
ANR	336989	Callee	free		336753	0					
ANR	336990	Identifier	free		336753	0					
ANR	336991	ArgumentList	type		336753	1					
ANR	336992	Argument	type		336753	0					
ANR	336993	Identifier	type		336753	0					
ANR	336994	ExpressionStatement	free ( arg )	937:2:19127:19137	336753	2	True				
ANR	336995	CallExpression	free ( arg )		336753	0					
ANR	336996	Callee	free		336753	0					
ANR	336997	Identifier	free		336753	0					
ANR	336998	ArgumentList	arg		336753	1					
ANR	336999	Argument	arg		336753	0					
ANR	337000	Identifier	arg		336753	0					
ANR	337001	ReturnStatement	return 0 ;	938:2:19141:19149	336753	3	True				
ANR	337002	PrimaryExpression	0		336753	0					
ANR	337003	ExpressionStatement	res |= ( ( argn & 0x1c ) << 2 )	940:1:19155:19183	336753	20	True				
ANR	337004	AssignmentExpression	res |= ( ( argn & 0x1c ) << 2 )		336753	0		|=			
ANR	337005	Identifier	res		336753	0					
ANR	337006	ShiftExpression	( argn & 0x1c ) << 2		336753	1		<<			
ANR	337007	BitAndExpression	argn & 0x1c		336753	0		&			
ANR	337008	Identifier	argn		336753	0					
ANR	337009	PrimaryExpression	0x1c		336753	1					
ANR	337010	PrimaryExpression	2		336753	1					
ANR	337011	ExpressionStatement	res |= ( ( argn & 0x3 ) << 14 )	941:1:19186:19214	336753	21	True				
ANR	337012	AssignmentExpression	res |= ( ( argn & 0x3 ) << 14 )		336753	0		|=			
ANR	337013	Identifier	res		336753	0					
ANR	337014	ShiftExpression	( argn & 0x3 ) << 14		336753	1		<<			
ANR	337015	BitAndExpression	argn & 0x3		336753	0		&			
ANR	337016	Identifier	argn		336753	0					
ANR	337017	PrimaryExpression	0x3		336753	1					
ANR	337018	PrimaryExpression	14		336753	1					
ANR	337019	ExpressionStatement	free ( type )	943:1:19218:19229	336753	22	True				
ANR	337020	CallExpression	free ( type )		336753	0					
ANR	337021	Callee	free		336753	0					
ANR	337022	Identifier	free		336753	0					
ANR	337023	ArgumentList	type		336753	1					
ANR	337024	Argument	type		336753	0					
ANR	337025	Identifier	type		336753	0					
ANR	337026	ExpressionStatement	free ( arg )	944:1:19232:19242	336753	23	True				
ANR	337027	CallExpression	free ( arg )		336753	0					
ANR	337028	Callee	free		336753	0					
ANR	337029	Identifier	free		336753	0					
ANR	337030	ArgumentList	arg		336753	1					
ANR	337031	Argument	arg		336753	0					
ANR	337032	Identifier	arg		336753	0					
ANR	337033	ReturnStatement	return res ;	945:1:19245:19255	336753	24	True				
ANR	337034	Identifier	res		336753	0					
ANR	337035	ReturnType	static ut32		336753	1					
ANR	337036	Identifier	thumb_getshift		336753	2					
ANR	337037	ParameterList	const char * str		336753	3					
ANR	337038	Parameter	const char * str	887:27:18282:18296	336753	0	True				
ANR	337039	ParameterType	const char *		336753	0					
ANR	337040	Identifier	str		336753	1					
ANR	337041	CFGEntryNode	ENTRY		336753		True				
ANR	337042	CFGExitNode	EXIT		336753		True				
ANR	337043	Symbol	strcmp		336753						
ANR	337044	Symbol	res		336753						
ANR	337045	Symbol	err		336753						
ANR	337046	Symbol	shift		336753						
ANR	337047	Symbol	* shifts		336753						
ANR	337048	Symbol	false		336753						
ANR	337049	Symbol	i		336753						
ANR	337050	Symbol	strchr		336753						
ANR	337051	Symbol	type		336753						
ANR	337052	Symbol	space		336753						
ANR	337053	Symbol	str		336753						
ANR	337054	Symbol	* i		336753						
ANR	337055	Symbol	argn		336753						
ANR	337056	Symbol	arg		336753						
ANR	337057	Symbol	true		336753						
ANR	337058	Symbol	getnum		336753						
ANR	337059	Symbol	shifts		336753						
ANR	337060	Symbol	* space		336753						
ANR	337061	Symbol	strdup		336753						
ANR	337062	Function	getshiftmemend	948:0:19260:19535							
ANR	337063	FunctionDef	getshiftmemend (const char * input)		337062	0					
ANR	337064	CompoundStatement		948:46:19306:19535	337062	0					
ANR	337065	IdentifierDeclStatement	st32 res ;	949:1:19309:19317	337062	0	True				
ANR	337066	IdentifierDecl	res		337062	0					
ANR	337067	IdentifierDeclType	st32		337062	0					
ANR	337068	Identifier	res		337062	1					
ANR	337069	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""]"" ) )"		337062	1					
ANR	337070	Condition	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"	950:5:19324:19372	337062	0	True				
ANR	337071	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"		337062	0		||			
ANR	337072	UnaryOperationExpression	! input		337062	0					
ANR	337073	UnaryOperator	!		337062	0					
ANR	337074	Identifier	input		337062	1					
ANR	337075	OrExpression	"! * input || ! r_str_endswith ( input , ""]"" )"		337062	1		||			
ANR	337076	UnaryOperationExpression	! * input		337062	0					
ANR	337077	UnaryOperator	!		337062	0					
ANR	337078	UnaryOperationExpression	* input		337062	1					
ANR	337079	UnaryOperator	*		337062	0					
ANR	337080	Identifier	input		337062	1					
ANR	337081	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		337062	1					
ANR	337082	UnaryOperator	!		337062	0					
ANR	337083	CallExpression	"r_str_endswith ( input , ""]"" )"		337062	1					
ANR	337084	Callee	r_str_endswith		337062	0					
ANR	337085	Identifier	r_str_endswith		337062	0					
ANR	337086	ArgumentList	input		337062	1					
ANR	337087	Argument	input		337062	0					
ANR	337088	Identifier	input		337062	0					
ANR	337089	Argument	"""]"""		337062	1					
ANR	337090	PrimaryExpression	"""]"""		337062	0					
ANR	337091	CompoundStatement		3:56:68:68	337062	1					
ANR	337092	ReturnStatement	return - 1 ;	951:2:19379:19388	337062	0	True				
ANR	337093	UnaryOperationExpression	- 1		337062	0					
ANR	337094	UnaryOperator	-		337062	0					
ANR	337095	PrimaryExpression	1		337062	1					
ANR	337096	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	954:1:19395:19446	337062	2	True				
ANR	337097	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		337062	0					
ANR	337098	IdentifierDeclType	char *		337062	0					
ANR	337099	Identifier	temp		337062	1					
ANR	337100	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		337062	2		=			
ANR	337101	Identifier	temp		337062	0					
ANR	337102	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		337062	1					
ANR	337103	Callee	r_str_ndup		337062	0					
ANR	337104	Identifier	r_str_ndup		337062	0					
ANR	337105	ArgumentList	input		337062	1					
ANR	337106	Argument	input		337062	0					
ANR	337107	Identifier	input		337062	0					
ANR	337108	Argument	strlen ( input ) - 1		337062	1					
ANR	337109	AdditiveExpression	strlen ( input ) - 1		337062	0		-			
ANR	337110	CallExpression	strlen ( input )		337062	0					
ANR	337111	Callee	strlen		337062	0					
ANR	337112	Identifier	strlen		337062	0					
ANR	337113	ArgumentList	input		337062	1					
ANR	337114	Argument	input		337062	0					
ANR	337115	Identifier	input		337062	0					
ANR	337116	PrimaryExpression	1		337062	1					
ANR	337117	IfStatement	if ( ! temp )		337062	3					
ANR	337118	Condition	! temp	955:5:19453:19457	337062	0	True				
ANR	337119	UnaryOperationExpression	! temp		337062	0					
ANR	337120	UnaryOperator	!		337062	0					
ANR	337121	Identifier	temp		337062	1					
ANR	337122	CompoundStatement		8:12:153:153	337062	1					
ANR	337123	ReturnStatement	return - 1 ;	956:2:19464:19473	337062	0	True				
ANR	337124	UnaryOperationExpression	- 1		337062	0					
ANR	337125	UnaryOperator	-		337062	0					
ANR	337126	PrimaryExpression	1		337062	1					
ANR	337127	ExpressionStatement	res = thumb_getshift ( temp )	958:1:19479:19506	337062	4	True				
ANR	337128	AssignmentExpression	res = thumb_getshift ( temp )		337062	0		=			
ANR	337129	Identifier	res		337062	0					
ANR	337130	CallExpression	thumb_getshift ( temp )		337062	1					
ANR	337131	Callee	thumb_getshift		337062	0					
ANR	337132	Identifier	thumb_getshift		337062	0					
ANR	337133	ArgumentList	temp		337062	1					
ANR	337134	Argument	temp		337062	0					
ANR	337135	Identifier	temp		337062	0					
ANR	337136	ExpressionStatement	free ( temp )	959:1:19509:19520	337062	5	True				
ANR	337137	CallExpression	free ( temp )		337062	0					
ANR	337138	Callee	free		337062	0					
ANR	337139	Identifier	free		337062	0					
ANR	337140	ArgumentList	temp		337062	1					
ANR	337141	Argument	temp		337062	0					
ANR	337142	Identifier	temp		337062	0					
ANR	337143	ReturnStatement	return res ;	960:1:19523:19533	337062	6	True				
ANR	337144	Identifier	res		337062	0					
ANR	337145	ReturnType	static st32		337062	1					
ANR	337146	Identifier	getshiftmemend		337062	2					
ANR	337147	ParameterList	const char * input		337062	3					
ANR	337148	Parameter	const char * input	948:27:19287:19303	337062	0	True				
ANR	337149	ParameterType	const char *		337062	0					
ANR	337150	Identifier	input		337062	1					
ANR	337151	CFGEntryNode	ENTRY		337062		True				
ANR	337152	CFGExitNode	EXIT		337062		True				
ANR	337153	Symbol	input		337062						
ANR	337154	Symbol	res		337062						
ANR	337155	Symbol	strlen		337062						
ANR	337156	Symbol	temp		337062						
ANR	337157	Symbol	r_str_ndup		337062						
ANR	337158	Symbol	thumb_getshift		337062						
ANR	337159	Symbol	* input		337062						
ANR	337160	Symbol	r_str_endswith		337062						
ANR	337161	Function	collect_list	963:0:19538:20237							
ANR	337162	FunctionDef	collect_list (char * input [ ])		337161	0					
ANR	337163	CompoundStatement		963:33:19571:20237	337161	0					
ANR	337164	IfStatement	if ( input [ 0 ] == NULL )		337161	0					
ANR	337165	Condition	input [ 0 ] == NULL	964:5:19578:19593	337161	0	True				
ANR	337166	EqualityExpression	input [ 0 ] == NULL		337161	0		==			
ANR	337167	ArrayIndexing	input [ 0 ]		337161	0					
ANR	337168	Identifier	input		337161	0					
ANR	337169	PrimaryExpression	0		337161	1					
ANR	337170	Identifier	NULL		337161	1					
ANR	337171	CompoundStatement		2:23:24:24	337161	1					
ANR	337172	ReturnStatement	return ;	965:2:19600:19606	337161	0	True				
ANR	337173	IdentifierDeclStatement	char * temp = malloc ( 500 ) ;	967:1:19612:19638	337161	1	True				
ANR	337174	IdentifierDecl	* temp = malloc ( 500 )		337161	0					
ANR	337175	IdentifierDeclType	char *		337161	0					
ANR	337176	Identifier	temp		337161	1					
ANR	337177	AssignmentExpression	* temp = malloc ( 500 )		337161	2		=			
ANR	337178	Identifier	temp		337161	0					
ANR	337179	CallExpression	malloc ( 500 )		337161	1					
ANR	337180	Callee	malloc		337161	0					
ANR	337181	Identifier	malloc		337161	0					
ANR	337182	ArgumentList	500		337161	1					
ANR	337183	Argument	500		337161	0					
ANR	337184	PrimaryExpression	500		337161	0					
ANR	337185	IfStatement	if ( ! temp )		337161	2					
ANR	337186	Condition	! temp	968:5:19645:19649	337161	0	True				
ANR	337187	UnaryOperationExpression	! temp		337161	0					
ANR	337188	UnaryOperator	!		337161	0					
ANR	337189	Identifier	temp		337161	1					
ANR	337190	CompoundStatement		6:12:80:80	337161	1					
ANR	337191	ReturnStatement	return ;	969:2:19656:19662	337161	0	True				
ANR	337192	ExpressionStatement	temp [ 0 ] = 0	971:1:19668:19679	337161	3	True				
ANR	337193	AssignmentExpression	temp [ 0 ] = 0		337161	0		=			
ANR	337194	ArrayIndexing	temp [ 0 ]		337161	0					
ANR	337195	Identifier	temp		337161	0					
ANR	337196	PrimaryExpression	0		337161	1					
ANR	337197	PrimaryExpression	0		337161	1					
ANR	337198	IdentifierDeclStatement	int i ;	972:1:19682:19687	337161	4	True				
ANR	337199	IdentifierDecl	i		337161	0					
ANR	337200	IdentifierDeclType	int		337161	0					
ANR	337201	Identifier	i		337161	1					
ANR	337202	IdentifierDeclStatement	int conc = 0 ;	973:1:19690:19702	337161	5	True				
ANR	337203	IdentifierDecl	conc = 0		337161	0					
ANR	337204	IdentifierDeclType	int		337161	0					
ANR	337205	Identifier	conc		337161	1					
ANR	337206	AssignmentExpression	conc = 0		337161	2		=			
ANR	337207	Identifier	conc		337161	0					
ANR	337208	PrimaryExpression	0		337161	1					
ANR	337209	IdentifierDeclStatement	"int start , end = 0 ;"	974:1:19705:19723	337161	6	True				
ANR	337210	IdentifierDecl	start		337161	0					
ANR	337211	IdentifierDeclType	int		337161	0					
ANR	337212	Identifier	start		337161	1					
ANR	337213	IdentifierDecl	end = 0		337161	1					
ANR	337214	IdentifierDeclType	int		337161	0					
ANR	337215	Identifier	end		337161	1					
ANR	337216	AssignmentExpression	end = 0		337161	2		=			
ANR	337217	Identifier	end		337161	0					
ANR	337218	PrimaryExpression	0		337161	1					
ANR	337219	IdentifierDeclStatement	int arrsz ;	975:1:19726:19735	337161	7	True				
ANR	337220	IdentifierDecl	arrsz		337161	0					
ANR	337221	IdentifierDeclType	int		337161	0					
ANR	337222	Identifier	arrsz		337161	1					
ANR	337223	ForStatement	for ( arrsz = 1 ; input [ arrsz ] != NULL ; arrsz ++ )		337161	8					
ANR	337224	ForInit	arrsz = 1 ;	976:6:19743:19752	337161	0	True				
ANR	337225	AssignmentExpression	arrsz = 1		337161	0		=			
ANR	337226	Identifier	arrsz		337161	0					
ANR	337227	PrimaryExpression	1		337161	1					
ANR	337228	Condition	input [ arrsz ] != NULL	976:17:19754:19773	337161	1	True				
ANR	337229	EqualityExpression	input [ arrsz ] != NULL		337161	0		!=			
ANR	337230	ArrayIndexing	input [ arrsz ]		337161	0					
ANR	337231	Identifier	input		337161	0					
ANR	337232	Identifier	arrsz		337161	1					
ANR	337233	Identifier	NULL		337161	1					
ANR	337234	PostIncDecOperationExpression	arrsz ++	976:39:19776:19782	337161	2	True				
ANR	337235	Identifier	arrsz		337161	0					
ANR	337236	IncDec	++		337161	1					
ANR	337237	CompoundStatement		14:48:213:213	337161	3					
ANR	337238	ExpressionStatement		977:2:19789:19789	337161	0	True				
ANR	337239	ForStatement	for ( i = 0 ; input [ i ] ; i ++ )		337161	9					
ANR	337240	ForInit	i = 0 ;	980:6:19801:19806	337161	0	True				
ANR	337241	AssignmentExpression	i = 0		337161	0		=			
ANR	337242	Identifier	i		337161	0					
ANR	337243	PrimaryExpression	0		337161	1					
ANR	337244	Condition	input [ i ]	980:13:19808:19815	337161	1	True				
ANR	337245	ArrayIndexing	input [ i ]		337161	0					
ANR	337246	Identifier	input		337161	0					
ANR	337247	Identifier	i		337161	1					
ANR	337248	PostIncDecOperationExpression	i ++	980:23:19818:19820	337161	2	True				
ANR	337249	Identifier	i		337161	0					
ANR	337250	IncDec	++		337161	1					
ANR	337251	CompoundStatement		18:28:251:251	337161	3					
ANR	337252	IfStatement	if ( conc )		337161	0					
ANR	337253	Condition	conc	981:6:19831:19834	337161	0	True				
ANR	337254	Identifier	conc		337161	0					
ANR	337255	CompoundStatement		19:12:265:265	337161	1					
ANR	337256	ExpressionStatement	"strcat ( temp , "", "" )"	982:3:19842:19861	337161	0	True				
ANR	337257	CallExpression	"strcat ( temp , "", "" )"		337161	0					
ANR	337258	Callee	strcat		337161	0					
ANR	337259	Identifier	strcat		337161	0					
ANR	337260	ArgumentList	temp		337161	1					
ANR	337261	Argument	temp		337161	0					
ANR	337262	Identifier	temp		337161	0					
ANR	337263	Argument	""", """		337161	1					
ANR	337264	PrimaryExpression	""", """		337161	0					
ANR	337265	ExpressionStatement	"strcat ( temp , input [ i ] )"	983:3:19866:19889	337161	1	True				
ANR	337266	CallExpression	"strcat ( temp , input [ i ] )"		337161	0					
ANR	337267	Callee	strcat		337161	0					
ANR	337268	Identifier	strcat		337161	0					
ANR	337269	ArgumentList	temp		337161	1					
ANR	337270	Argument	temp		337161	0					
ANR	337271	Identifier	temp		337161	0					
ANR	337272	Argument	input [ i ]		337161	1					
ANR	337273	ArrayIndexing	input [ i ]		337161	0					
ANR	337274	Identifier	input		337161	0					
ANR	337275	Identifier	i		337161	1					
ANR	337276	IfStatement	if ( input [ i ] [ 0 ] == '{' )		337161	1					
ANR	337277	Condition	input [ i ] [ 0 ] == '{'	985:6:19901:19918	337161	0	True				
ANR	337278	EqualityExpression	input [ i ] [ 0 ] == '{'		337161	0		==			
ANR	337279	ArrayIndexing	input [ i ] [ 0 ]		337161	0					
ANR	337280	ArrayIndexing	input [ i ]		337161	0					
ANR	337281	Identifier	input		337161	0					
ANR	337282	Identifier	i		337161	1					
ANR	337283	PrimaryExpression	0		337161	1					
ANR	337284	PrimaryExpression	'{'		337161	1					
ANR	337285	CompoundStatement		23:26:349:349	337161	1					
ANR	337286	ExpressionStatement	conc = 1	986:3:19926:19934	337161	0	True				
ANR	337287	AssignmentExpression	conc = 1		337161	0		=			
ANR	337288	Identifier	conc		337161	0					
ANR	337289	PrimaryExpression	1		337161	1					
ANR	337290	ExpressionStatement	"strcat ( temp , input [ i ] )"	987:3:19939:19962	337161	1	True				
ANR	337291	CallExpression	"strcat ( temp , input [ i ] )"		337161	0					
ANR	337292	Callee	strcat		337161	0					
ANR	337293	Identifier	strcat		337161	0					
ANR	337294	ArgumentList	temp		337161	1					
ANR	337295	Argument	temp		337161	0					
ANR	337296	Identifier	temp		337161	0					
ANR	337297	Argument	input [ i ]		337161	1					
ANR	337298	ArrayIndexing	input [ i ]		337161	0					
ANR	337299	Identifier	input		337161	0					
ANR	337300	Identifier	i		337161	1					
ANR	337301	ExpressionStatement	start = i	988:3:19967:19976	337161	2	True				
ANR	337302	AssignmentExpression	start = i		337161	0		=			
ANR	337303	Identifier	start		337161	0					
ANR	337304	Identifier	i		337161	1					
ANR	337305	IfStatement	if ( ( conc ) & ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' ) )		337161	2					
ANR	337306	Condition	( conc ) & ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' )	990:6:19988:20036	337161	0	True				
ANR	337307	CastExpression	( conc ) & ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' )		337161	0					
ANR	337308	CastTarget	conc		337161	0					
ANR	337309	UnaryOperationExpression	& ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' )		337161	1					
ANR	337310	UnaryOperator	&		337161	0					
ANR	337311	EqualityExpression	input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}'		337161	1		==			
ANR	337312	ArrayIndexing	input [ i ] [ strlen ( input [ i ] ) - 1 ]		337161	0					
ANR	337313	ArrayIndexing	input [ i ]		337161	0					
ANR	337314	Identifier	input		337161	0					
ANR	337315	Identifier	i		337161	1					
ANR	337316	AdditiveExpression	strlen ( input [ i ] ) - 1		337161	1		-			
ANR	337317	CallExpression	strlen ( input [ i ] )		337161	0					
ANR	337318	Callee	strlen		337161	0					
ANR	337319	Identifier	strlen		337161	0					
ANR	337320	ArgumentList	input [ i ]		337161	1					
ANR	337321	Argument	input [ i ]		337161	0					
ANR	337322	ArrayIndexing	input [ i ]		337161	0					
ANR	337323	Identifier	input		337161	0					
ANR	337324	Identifier	i		337161	1					
ANR	337325	PrimaryExpression	1		337161	1					
ANR	337326	PrimaryExpression	'}'		337161	1					
ANR	337327	CompoundStatement		28:57:467:467	337161	1					
ANR	337328	ExpressionStatement	conc = 0	991:3:20044:20052	337161	0	True				
ANR	337329	AssignmentExpression	conc = 0		337161	0		=			
ANR	337330	Identifier	conc		337161	0					
ANR	337331	PrimaryExpression	0		337161	1					
ANR	337332	ExpressionStatement	end = i	992:3:20057:20064	337161	1	True				
ANR	337333	AssignmentExpression	end = i		337161	0		=			
ANR	337334	Identifier	end		337161	0					
ANR	337335	Identifier	i		337161	1					
ANR	337336	IfStatement	if ( end == 0 )		337161	10					
ANR	337337	Condition	end == 0	995:5:20078:20085	337161	0	True				
ANR	337338	EqualityExpression	end == 0		337161	0		==			
ANR	337339	Identifier	end		337161	0					
ANR	337340	PrimaryExpression	0		337161	1					
ANR	337341	CompoundStatement		33:15:516:516	337161	1					
ANR	337342	ExpressionStatement	free ( temp )	996:2:20092:20103	337161	0	True				
ANR	337343	CallExpression	free ( temp )		337161	0					
ANR	337344	Callee	free		337161	0					
ANR	337345	Identifier	free		337161	0					
ANR	337346	ArgumentList	temp		337161	1					
ANR	337347	Argument	temp		337161	0					
ANR	337348	Identifier	temp		337161	0					
ANR	337349	ReturnStatement	return ;	997:2:20107:20113	337161	1	True				
ANR	337350	ExpressionStatement	input [ start ] = temp	999:1:20119:20138	337161	11	True				
ANR	337351	AssignmentExpression	input [ start ] = temp		337161	0		=			
ANR	337352	ArrayIndexing	input [ start ]		337161	0					
ANR	337353	Identifier	input		337161	0					
ANR	337354	Identifier	start		337161	1					
ANR	337355	Identifier	temp		337161	1					
ANR	337356	ForStatement	for ( i = start + 1 ; i < arrsz ; i ++ )		337161	12					
ANR	337357	ForInit	i = start + 1 ;	1000:6:20146:20159	337161	0	True				
ANR	337358	AssignmentExpression	i = start + 1		337161	0		=			
ANR	337359	Identifier	i		337161	0					
ANR	337360	AdditiveExpression	start + 1		337161	1		+			
ANR	337361	Identifier	start		337161	0					
ANR	337362	PrimaryExpression	1		337161	1					
ANR	337363	Condition	i < arrsz	1000:21:20161:20169	337161	1	True				
ANR	337364	RelationalExpression	i < arrsz		337161	0		<			
ANR	337365	Identifier	i		337161	0					
ANR	337366	Identifier	arrsz		337161	1					
ANR	337367	PostIncDecOperationExpression	i ++	1000:32:20172:20174	337161	2	True				
ANR	337368	Identifier	i		337161	0					
ANR	337369	IncDec	++		337161	1					
ANR	337370	CompoundStatement		38:37:605:605	337161	3					
ANR	337371	ExpressionStatement	input [ i ] = input [ ( end - start ) + i ]	1001:2:20181:20214	337161	0	True				
ANR	337372	AssignmentExpression	input [ i ] = input [ ( end - start ) + i ]		337161	0		=			
ANR	337373	ArrayIndexing	input [ i ]		337161	0					
ANR	337374	Identifier	input		337161	0					
ANR	337375	Identifier	i		337161	1					
ANR	337376	ArrayIndexing	input [ ( end - start ) + i ]		337161	1					
ANR	337377	Identifier	input		337161	0					
ANR	337378	AdditiveExpression	( end - start ) + i		337161	1		+			
ANR	337379	AdditiveExpression	end - start		337161	0		-			
ANR	337380	Identifier	end		337161	0					
ANR	337381	Identifier	start		337161	1					
ANR	337382	Identifier	i		337161	1					
ANR	337383	ExpressionStatement	input [ i ] = NULL	1003:1:20220:20235	337161	13	True				
ANR	337384	AssignmentExpression	input [ i ] = NULL		337161	0		=			
ANR	337385	ArrayIndexing	input [ i ]		337161	0					
ANR	337386	Identifier	input		337161	0					
ANR	337387	Identifier	i		337161	1					
ANR	337388	Identifier	NULL		337161	1					
ANR	337389	ReturnType	void		337161	1					
ANR	337390	Identifier	collect_list		337161	2					
ANR	337391	ParameterList	char * input [ ]		337161	3					
ANR	337392	Parameter	char * input [ ]	963:18:19556:19568	337161	0	True				
ANR	337393	ParameterType	char * [ ]		337161	0					
ANR	337394	Identifier	input		337161	1					
ANR	337395	CFGEntryNode	ENTRY		337161		True				
ANR	337396	CFGExitNode	EXIT		337161		True				
ANR	337397	Symbol	malloc		337161						
ANR	337398	Symbol	temp		337161						
ANR	337399	Symbol	* * i		337161						
ANR	337400	Symbol	NULL		337161						
ANR	337401	Symbol	arrsz		337161						
ANR	337402	Symbol	* * input		337161						
ANR	337403	Symbol	* start		337161						
ANR	337404	Symbol	* input		337161						
ANR	337405	Symbol	start		337161						
ANR	337406	Symbol	i		337161						
ANR	337407	Symbol	* temp		337161						
ANR	337408	Symbol	conc		337161						
ANR	337409	Symbol	input		337161						
ANR	337410	Symbol	strlen		337161						
ANR	337411	Symbol	* i		337161						
ANR	337412	Symbol	end		337161						
ANR	337413	Symbol	* end		337161						
ANR	337414	Symbol	* arrsz		337161						
ANR	337415	Function	thumb_selector	1006:0:20240:21618							
ANR	337416	FunctionDef	thumb_selector (char * args [ ])		337415	0					
ANR	337417	CompoundStatement		1006:41:20281:21618	337415	0					
ANR	337418	ExpressionStatement	collect_list ( args )	1007:1:20284:20302	337415	0	True				
ANR	337419	CallExpression	collect_list ( args )		337415	0					
ANR	337420	Callee	collect_list		337415	0					
ANR	337421	Identifier	collect_list		337415	0					
ANR	337422	ArgumentList	args		337415	1					
ANR	337423	Argument	args		337415	0					
ANR	337424	Identifier	args		337415	0					
ANR	337425	IdentifierDeclStatement	ut64 res = 0 ;	1008:1:20305:20317	337415	1	True				
ANR	337426	IdentifierDecl	res = 0		337415	0					
ANR	337427	IdentifierDeclType	ut64		337415	0					
ANR	337428	Identifier	res		337415	1					
ANR	337429	AssignmentExpression	res = 0		337415	2		=			
ANR	337430	Identifier	res		337415	0					
ANR	337431	PrimaryExpression	0		337415	1					
ANR	337432	IdentifierDeclStatement	ut8 i ;	1009:1:20320:20325	337415	2	True				
ANR	337433	IdentifierDecl	i		337415	0					
ANR	337434	IdentifierDeclType	ut8		337415	0					
ANR	337435	Identifier	i		337415	1					
ANR	337436	ForStatement	for ( i = 0 ; i < 15 ; i ++ )		337415	3					
ANR	337437	ForInit	i = 0 ;	1010:6:20333:20338	337415	0	True				
ANR	337438	AssignmentExpression	i = 0		337415	0		=			
ANR	337439	Identifier	i		337415	0					
ANR	337440	PrimaryExpression	0		337415	1					
ANR	337441	Condition	i < 15	1010:13:20340:20345	337415	1	True				
ANR	337442	RelationalExpression	i < 15		337415	0		<			
ANR	337443	Identifier	i		337415	0					
ANR	337444	PrimaryExpression	15		337415	1					
ANR	337445	PostIncDecOperationExpression	i ++	1010:21:20348:20350	337415	2	True				
ANR	337446	Identifier	i		337415	0					
ANR	337447	IncDec	++		337415	1					
ANR	337448	CompoundStatement		5:26:71:71	337415	3					
ANR	337449	IfStatement	if ( args [ i ] == NULL )		337415	0					
ANR	337450	Condition	args [ i ] == NULL	1011:6:20361:20375	337415	0	True				
ANR	337451	EqualityExpression	args [ i ] == NULL		337415	0		==			
ANR	337452	ArrayIndexing	args [ i ]		337415	0					
ANR	337453	Identifier	args		337415	0					
ANR	337454	Identifier	i		337415	1					
ANR	337455	Identifier	NULL		337415	1					
ANR	337456	CompoundStatement		6:23:96:96	337415	1					
ANR	337457	BreakStatement	break ;	1012:3:20383:20388	337415	0	True				
ANR	337458	IfStatement	if ( getreg ( args [ i ] ) != - 1 )		337415	1					
ANR	337459	Condition	getreg ( args [ i ] ) != - 1	1014:6:20400:20421	337415	0	True				
ANR	337460	EqualityExpression	getreg ( args [ i ] ) != - 1		337415	0		!=			
ANR	337461	CallExpression	getreg ( args [ i ] )		337415	0					
ANR	337462	Callee	getreg		337415	0					
ANR	337463	Identifier	getreg		337415	0					
ANR	337464	ArgumentList	args [ i ]		337415	1					
ANR	337465	Argument	args [ i ]		337415	0					
ANR	337466	ArrayIndexing	args [ i ]		337415	0					
ANR	337467	Identifier	args		337415	0					
ANR	337468	Identifier	i		337415	1					
ANR	337469	UnaryOperationExpression	- 1		337415	1					
ANR	337470	UnaryOperator	-		337415	0					
ANR	337471	PrimaryExpression	1		337415	1					
ANR	337472	CompoundStatement		9:30:142:142	337415	1					
ANR	337473	ExpressionStatement	res |= 1 << ( i * 4 )	1015:3:20429:20446	337415	0	True				
ANR	337474	AssignmentExpression	res |= 1 << ( i * 4 )		337415	0		|=			
ANR	337475	Identifier	res		337415	0					
ANR	337476	ShiftExpression	1 << ( i * 4 )		337415	1		<<			
ANR	337477	PrimaryExpression	1		337415	0					
ANR	337478	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337479	Identifier	i		337415	0					
ANR	337480	PrimaryExpression	4		337415	1					
ANR	337481	ContinueStatement	continue ;	1016:3:20451:20459	337415	1	True				
ANR	337482	ExpressionStatement	err = false	1018:2:20467:20478	337415	2	True				
ANR	337483	AssignmentExpression	err = false		337415	0		=			
ANR	337484	Identifier	err		337415	0					
ANR	337485	Identifier	false		337415	1					
ANR	337486	ExpressionStatement	getnum ( args [ i ] )	1019:2:20482:20498	337415	3	True				
ANR	337487	CallExpression	getnum ( args [ i ] )		337415	0					
ANR	337488	Callee	getnum		337415	0					
ANR	337489	Identifier	getnum		337415	0					
ANR	337490	ArgumentList	args [ i ]		337415	1					
ANR	337491	Argument	args [ i ]		337415	0					
ANR	337492	ArrayIndexing	args [ i ]		337415	0					
ANR	337493	Identifier	args		337415	0					
ANR	337494	Identifier	i		337415	1					
ANR	337495	IfStatement	if ( ! err )		337415	4					
ANR	337496	Condition	! err	1020:6:20506:20509	337415	0	True				
ANR	337497	UnaryOperationExpression	! err		337415	0					
ANR	337498	UnaryOperator	!		337415	0					
ANR	337499	Identifier	err		337415	1					
ANR	337500	CompoundStatement		15:12:230:230	337415	1					
ANR	337501	ExpressionStatement	res |= 2 << ( i * 4 )	1021:3:20517:20534	337415	0	True				
ANR	337502	AssignmentExpression	res |= 2 << ( i * 4 )		337415	0		|=			
ANR	337503	Identifier	res		337415	0					
ANR	337504	ShiftExpression	2 << ( i * 4 )		337415	1		<<			
ANR	337505	PrimaryExpression	2		337415	0					
ANR	337506	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337507	Identifier	i		337415	0					
ANR	337508	PrimaryExpression	4		337415	1					
ANR	337509	ContinueStatement	continue ;	1022:3:20539:20547	337415	1	True				
ANR	337510	ExpressionStatement	err = false	1024:2:20555:20566	337415	5	True				
ANR	337511	AssignmentExpression	err = false		337415	0		=			
ANR	337512	Identifier	err		337415	0					
ANR	337513	Identifier	false		337415	1					
ANR	337514	ExpressionStatement	thumb_getshift ( args [ i ] )	1025:2:20574:20598	337415	6	True				
ANR	337515	CallExpression	thumb_getshift ( args [ i ] )		337415	0					
ANR	337516	Callee	thumb_getshift		337415	0					
ANR	337517	Identifier	thumb_getshift		337415	0					
ANR	337518	ArgumentList	args [ i ]		337415	1					
ANR	337519	Argument	args [ i ]		337415	0					
ANR	337520	ArrayIndexing	args [ i ]		337415	0					
ANR	337521	Identifier	args		337415	0					
ANR	337522	Identifier	i		337415	1					
ANR	337523	IfStatement	if ( ! err )		337415	7					
ANR	337524	Condition	! err	1026:6:20606:20609	337415	0	True				
ANR	337525	UnaryOperationExpression	! err		337415	0					
ANR	337526	UnaryOperator	!		337415	0					
ANR	337527	Identifier	err		337415	1					
ANR	337528	CompoundStatement		21:12:330:330	337415	1					
ANR	337529	ExpressionStatement	res |= 3 << ( i * 4 )	1027:3:20617:20634	337415	0	True				
ANR	337530	AssignmentExpression	res |= 3 << ( i * 4 )		337415	0		|=			
ANR	337531	Identifier	res		337415	0					
ANR	337532	ShiftExpression	3 << ( i * 4 )		337415	1		<<			
ANR	337533	PrimaryExpression	3		337415	0					
ANR	337534	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337535	Identifier	i		337415	0					
ANR	337536	PrimaryExpression	4		337415	1					
ANR	337537	ContinueStatement	continue ;	1028:3:20639:20647	337415	1	True				
ANR	337538	IfStatement	if ( getcoproc ( args [ i ] ) != - 1 )		337415	8					
ANR	337539	Condition	getcoproc ( args [ i ] ) != - 1	1030:6:20659:20683	337415	0	True				
ANR	337540	EqualityExpression	getcoproc ( args [ i ] ) != - 1		337415	0		!=			
ANR	337541	CallExpression	getcoproc ( args [ i ] )		337415	0					
ANR	337542	Callee	getcoproc		337415	0					
ANR	337543	Identifier	getcoproc		337415	0					
ANR	337544	ArgumentList	args [ i ]		337415	1					
ANR	337545	Argument	args [ i ]		337415	0					
ANR	337546	ArrayIndexing	args [ i ]		337415	0					
ANR	337547	Identifier	args		337415	0					
ANR	337548	Identifier	i		337415	1					
ANR	337549	UnaryOperationExpression	- 1		337415	1					
ANR	337550	UnaryOperator	-		337415	0					
ANR	337551	PrimaryExpression	1		337415	1					
ANR	337552	CompoundStatement		25:33:404:404	337415	1					
ANR	337553	ExpressionStatement	res |= 4 << ( i * 4 )	1031:3:20691:20708	337415	0	True				
ANR	337554	AssignmentExpression	res |= 4 << ( i * 4 )		337415	0		|=			
ANR	337555	Identifier	res		337415	0					
ANR	337556	ShiftExpression	4 << ( i * 4 )		337415	1		<<			
ANR	337557	PrimaryExpression	4		337415	0					
ANR	337558	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337559	Identifier	i		337415	0					
ANR	337560	PrimaryExpression	4		337415	1					
ANR	337561	ContinueStatement	continue ;	1032:3:20713:20721	337415	1	True				
ANR	337562	IfStatement	if ( getcoprocreg ( args [ i ] ) != - 1 )		337415	9					
ANR	337563	Condition	getcoprocreg ( args [ i ] ) != - 1	1034:6:20733:20760	337415	0	True				
ANR	337564	EqualityExpression	getcoprocreg ( args [ i ] ) != - 1		337415	0		!=			
ANR	337565	CallExpression	getcoprocreg ( args [ i ] )		337415	0					
ANR	337566	Callee	getcoprocreg		337415	0					
ANR	337567	Identifier	getcoprocreg		337415	0					
ANR	337568	ArgumentList	args [ i ]		337415	1					
ANR	337569	Argument	args [ i ]		337415	0					
ANR	337570	ArrayIndexing	args [ i ]		337415	0					
ANR	337571	Identifier	args		337415	0					
ANR	337572	Identifier	i		337415	1					
ANR	337573	UnaryOperationExpression	- 1		337415	1					
ANR	337574	UnaryOperator	-		337415	0					
ANR	337575	PrimaryExpression	1		337415	1					
ANR	337576	CompoundStatement		29:36:481:481	337415	1					
ANR	337577	ExpressionStatement	res |= 5 << ( i * 4 )	1035:3:20768:20785	337415	0	True				
ANR	337578	AssignmentExpression	res |= 5 << ( i * 4 )		337415	0		|=			
ANR	337579	Identifier	res		337415	0					
ANR	337580	ShiftExpression	5 << ( i * 4 )		337415	1		<<			
ANR	337581	PrimaryExpression	5		337415	0					
ANR	337582	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337583	Identifier	i		337415	0					
ANR	337584	PrimaryExpression	4		337415	1					
ANR	337585	ContinueStatement	continue ;	1036:3:20790:20798	337415	1	True				
ANR	337586	IfStatement	if ( getregmemstart ( args [ i ] ) != - 1 )		337415	10					
ANR	337587	Condition	getregmemstart ( args [ i ] ) != - 1	1038:6:20810:20839	337415	0	True				
ANR	337588	EqualityExpression	getregmemstart ( args [ i ] ) != - 1		337415	0		!=			
ANR	337589	CallExpression	getregmemstart ( args [ i ] )		337415	0					
ANR	337590	Callee	getregmemstart		337415	0					
ANR	337591	Identifier	getregmemstart		337415	0					
ANR	337592	ArgumentList	args [ i ]		337415	1					
ANR	337593	Argument	args [ i ]		337415	0					
ANR	337594	ArrayIndexing	args [ i ]		337415	0					
ANR	337595	Identifier	args		337415	0					
ANR	337596	Identifier	i		337415	1					
ANR	337597	UnaryOperationExpression	- 1		337415	1					
ANR	337598	UnaryOperator	-		337415	0					
ANR	337599	PrimaryExpression	1		337415	1					
ANR	337600	CompoundStatement		33:38:560:560	337415	1					
ANR	337601	ExpressionStatement	res |= 6 << ( i * 4 )	1039:3:20847:20864	337415	0	True				
ANR	337602	AssignmentExpression	res |= 6 << ( i * 4 )		337415	0		|=			
ANR	337603	Identifier	res		337415	0					
ANR	337604	ShiftExpression	6 << ( i * 4 )		337415	1		<<			
ANR	337605	PrimaryExpression	6		337415	0					
ANR	337606	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337607	Identifier	i		337415	0					
ANR	337608	PrimaryExpression	4		337415	1					
ANR	337609	ContinueStatement	continue ;	1040:3:20869:20877	337415	1	True				
ANR	337610	IfStatement	if ( getregmemstartend ( args [ i ] ) != - 1 )		337415	11					
ANR	337611	Condition	getregmemstartend ( args [ i ] ) != - 1	1042:6:20889:20921	337415	0	True				
ANR	337612	EqualityExpression	getregmemstartend ( args [ i ] ) != - 1		337415	0		!=			
ANR	337613	CallExpression	getregmemstartend ( args [ i ] )		337415	0					
ANR	337614	Callee	getregmemstartend		337415	0					
ANR	337615	Identifier	getregmemstartend		337415	0					
ANR	337616	ArgumentList	args [ i ]		337415	1					
ANR	337617	Argument	args [ i ]		337415	0					
ANR	337618	ArrayIndexing	args [ i ]		337415	0					
ANR	337619	Identifier	args		337415	0					
ANR	337620	Identifier	i		337415	1					
ANR	337621	UnaryOperationExpression	- 1		337415	1					
ANR	337622	UnaryOperator	-		337415	0					
ANR	337623	PrimaryExpression	1		337415	1					
ANR	337624	CompoundStatement		37:41:642:642	337415	1					
ANR	337625	ExpressionStatement	res |= 7 << ( i * 4 )	1043:3:20929:20946	337415	0	True				
ANR	337626	AssignmentExpression	res |= 7 << ( i * 4 )		337415	0		|=			
ANR	337627	Identifier	res		337415	0					
ANR	337628	ShiftExpression	7 << ( i * 4 )		337415	1		<<			
ANR	337629	PrimaryExpression	7		337415	0					
ANR	337630	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337631	Identifier	i		337415	0					
ANR	337632	PrimaryExpression	4		337415	1					
ANR	337633	ContinueStatement	continue ;	1044:3:20951:20959	337415	1	True				
ANR	337634	ExpressionStatement	err = false	1046:2:20967:20978	337415	12	True				
ANR	337635	AssignmentExpression	err = false		337415	0		=			
ANR	337636	Identifier	err		337415	0					
ANR	337637	Identifier	false		337415	1					
ANR	337638	ExpressionStatement	getnummemend ( args [ i ] )	1047:2:20982:21003	337415	13	True				
ANR	337639	CallExpression	getnummemend ( args [ i ] )		337415	0					
ANR	337640	Callee	getnummemend		337415	0					
ANR	337641	Identifier	getnummemend		337415	0					
ANR	337642	ArgumentList	args [ i ]		337415	1					
ANR	337643	Argument	args [ i ]		337415	0					
ANR	337644	ArrayIndexing	args [ i ]		337415	0					
ANR	337645	Identifier	args		337415	0					
ANR	337646	Identifier	i		337415	1					
ANR	337647	IfStatement	if ( ! err )		337415	14					
ANR	337648	Condition	! err	1048:6:21011:21014	337415	0	True				
ANR	337649	UnaryOperationExpression	! err		337415	0					
ANR	337650	UnaryOperator	!		337415	0					
ANR	337651	Identifier	err		337415	1					
ANR	337652	CompoundStatement		43:12:735:735	337415	1					
ANR	337653	ExpressionStatement	res |= 8 << ( i * 4 )	1049:3:21022:21039	337415	0	True				
ANR	337654	AssignmentExpression	res |= 8 << ( i * 4 )		337415	0		|=			
ANR	337655	Identifier	res		337415	0					
ANR	337656	ShiftExpression	8 << ( i * 4 )		337415	1		<<			
ANR	337657	PrimaryExpression	8		337415	0					
ANR	337658	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337659	Identifier	i		337415	0					
ANR	337660	PrimaryExpression	4		337415	1					
ANR	337661	ContinueStatement	continue ;	1050:3:21044:21052	337415	1	True				
ANR	337662	ExpressionStatement	err = false	1052:2:21060:21071	337415	15	True				
ANR	337663	AssignmentExpression	err = false		337415	0		=			
ANR	337664	Identifier	err		337415	0					
ANR	337665	Identifier	false		337415	1					
ANR	337666	ExpressionStatement	getnummemendbang ( args [ i ] )	1053:2:21075:21100	337415	16	True				
ANR	337667	CallExpression	getnummemendbang ( args [ i ] )		337415	0					
ANR	337668	Callee	getnummemendbang		337415	0					
ANR	337669	Identifier	getnummemendbang		337415	0					
ANR	337670	ArgumentList	args [ i ]		337415	1					
ANR	337671	Argument	args [ i ]		337415	0					
ANR	337672	ArrayIndexing	args [ i ]		337415	0					
ANR	337673	Identifier	args		337415	0					
ANR	337674	Identifier	i		337415	1					
ANR	337675	IfStatement	if ( ! err )		337415	17					
ANR	337676	Condition	! err	1054:6:21108:21111	337415	0	True				
ANR	337677	UnaryOperationExpression	! err		337415	0					
ANR	337678	UnaryOperator	!		337415	0					
ANR	337679	Identifier	err		337415	1					
ANR	337680	CompoundStatement		49:12:832:832	337415	1					
ANR	337681	ExpressionStatement	res |= 9 << ( i * 4 )	1055:3:21119:21136	337415	0	True				
ANR	337682	AssignmentExpression	res |= 9 << ( i * 4 )		337415	0		|=			
ANR	337683	Identifier	res		337415	0					
ANR	337684	ShiftExpression	9 << ( i * 4 )		337415	1		<<			
ANR	337685	PrimaryExpression	9		337415	0					
ANR	337686	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337687	Identifier	i		337415	0					
ANR	337688	PrimaryExpression	4		337415	1					
ANR	337689	ContinueStatement	continue ;	1056:3:21141:21149	337415	1	True				
ANR	337690	IfStatement	if ( getregmembang ( args [ i ] ) != - 1 )		337415	18					
ANR	337691	Condition	getregmembang ( args [ i ] ) != - 1	1058:6:21161:21189	337415	0	True				
ANR	337692	EqualityExpression	getregmembang ( args [ i ] ) != - 1		337415	0		!=			
ANR	337693	CallExpression	getregmembang ( args [ i ] )		337415	0					
ANR	337694	Callee	getregmembang		337415	0					
ANR	337695	Identifier	getregmembang		337415	0					
ANR	337696	ArgumentList	args [ i ]		337415	1					
ANR	337697	Argument	args [ i ]		337415	0					
ANR	337698	ArrayIndexing	args [ i ]		337415	0					
ANR	337699	Identifier	args		337415	0					
ANR	337700	Identifier	i		337415	1					
ANR	337701	UnaryOperationExpression	- 1		337415	1					
ANR	337702	UnaryOperator	-		337415	0					
ANR	337703	PrimaryExpression	1		337415	1					
ANR	337704	CompoundStatement		53:37:910:910	337415	1					
ANR	337705	ExpressionStatement	res |= 0xa << ( i * 4 )	1059:3:21197:21216	337415	0	True				
ANR	337706	AssignmentExpression	res |= 0xa << ( i * 4 )		337415	0		|=			
ANR	337707	Identifier	res		337415	0					
ANR	337708	ShiftExpression	0xa << ( i * 4 )		337415	1		<<			
ANR	337709	PrimaryExpression	0xa		337415	0					
ANR	337710	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337711	Identifier	i		337415	0					
ANR	337712	PrimaryExpression	4		337415	1					
ANR	337713	ContinueStatement	continue ;	1060:3:21221:21229	337415	1	True				
ANR	337714	IfStatement	if ( getreglist ( args [ i ] ) != - 1 )		337415	19					
ANR	337715	Condition	getreglist ( args [ i ] ) != - 1	1062:6:21241:21266	337415	0	True				
ANR	337716	EqualityExpression	getreglist ( args [ i ] ) != - 1		337415	0		!=			
ANR	337717	CallExpression	getreglist ( args [ i ] )		337415	0					
ANR	337718	Callee	getreglist		337415	0					
ANR	337719	Identifier	getreglist		337415	0					
ANR	337720	ArgumentList	args [ i ]		337415	1					
ANR	337721	Argument	args [ i ]		337415	0					
ANR	337722	ArrayIndexing	args [ i ]		337415	0					
ANR	337723	Identifier	args		337415	0					
ANR	337724	Identifier	i		337415	1					
ANR	337725	UnaryOperationExpression	- 1		337415	1					
ANR	337726	UnaryOperator	-		337415	0					
ANR	337727	PrimaryExpression	1		337415	1					
ANR	337728	CompoundStatement		57:34:987:987	337415	1					
ANR	337729	ExpressionStatement	res |= 0xb << ( i * 4 )	1063:3:21274:21293	337415	0	True				
ANR	337730	AssignmentExpression	res |= 0xb << ( i * 4 )		337415	0		|=			
ANR	337731	Identifier	res		337415	0					
ANR	337732	ShiftExpression	0xb << ( i * 4 )		337415	1		<<			
ANR	337733	PrimaryExpression	0xb		337415	0					
ANR	337734	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337735	Identifier	i		337415	0					
ANR	337736	PrimaryExpression	4		337415	1					
ANR	337737	ContinueStatement	continue ;	1064:3:21298:21306	337415	1	True				
ANR	337738	IfStatement	if ( getregmemend ( args [ i ] ) != - 1 )		337415	20					
ANR	337739	Condition	getregmemend ( args [ i ] ) != - 1	1066:6:21318:21345	337415	0	True				
ANR	337740	EqualityExpression	getregmemend ( args [ i ] ) != - 1		337415	0		!=			
ANR	337741	CallExpression	getregmemend ( args [ i ] )		337415	0					
ANR	337742	Callee	getregmemend		337415	0					
ANR	337743	Identifier	getregmemend		337415	0					
ANR	337744	ArgumentList	args [ i ]		337415	1					
ANR	337745	Argument	args [ i ]		337415	0					
ANR	337746	ArrayIndexing	args [ i ]		337415	0					
ANR	337747	Identifier	args		337415	0					
ANR	337748	Identifier	i		337415	1					
ANR	337749	UnaryOperationExpression	- 1		337415	1					
ANR	337750	UnaryOperator	-		337415	0					
ANR	337751	PrimaryExpression	1		337415	1					
ANR	337752	CompoundStatement		61:36:1066:1066	337415	1					
ANR	337753	ExpressionStatement	res |= 0xc << ( i * 4 )	1067:3:21353:21372	337415	0	True				
ANR	337754	AssignmentExpression	res |= 0xc << ( i * 4 )		337415	0		|=			
ANR	337755	Identifier	res		337415	0					
ANR	337756	ShiftExpression	0xc << ( i * 4 )		337415	1		<<			
ANR	337757	PrimaryExpression	0xc		337415	0					
ANR	337758	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337759	Identifier	i		337415	0					
ANR	337760	PrimaryExpression	4		337415	1					
ANR	337761	ContinueStatement	continue ;	1068:3:21377:21385	337415	1	True				
ANR	337762	IfStatement	if ( getshiftmemend ( args [ i ] ) != - 1 )		337415	21					
ANR	337763	Condition	getshiftmemend ( args [ i ] ) != - 1	1070:6:21397:21426	337415	0	True				
ANR	337764	EqualityExpression	getshiftmemend ( args [ i ] ) != - 1		337415	0		!=			
ANR	337765	CallExpression	getshiftmemend ( args [ i ] )		337415	0					
ANR	337766	Callee	getshiftmemend		337415	0					
ANR	337767	Identifier	getshiftmemend		337415	0					
ANR	337768	ArgumentList	args [ i ]		337415	1					
ANR	337769	Argument	args [ i ]		337415	0					
ANR	337770	ArrayIndexing	args [ i ]		337415	0					
ANR	337771	Identifier	args		337415	0					
ANR	337772	Identifier	i		337415	1					
ANR	337773	UnaryOperationExpression	- 1		337415	1					
ANR	337774	UnaryOperator	-		337415	0					
ANR	337775	PrimaryExpression	1		337415	1					
ANR	337776	CompoundStatement		65:38:1147:1147	337415	1					
ANR	337777	ExpressionStatement	res |= 0xd << ( i * 4 )	1071:3:21434:21453	337415	0	True				
ANR	337778	AssignmentExpression	res |= 0xd << ( i * 4 )		337415	0		|=			
ANR	337779	Identifier	res		337415	0					
ANR	337780	ShiftExpression	0xd << ( i * 4 )		337415	1		<<			
ANR	337781	PrimaryExpression	0xd		337415	0					
ANR	337782	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337783	Identifier	i		337415	0					
ANR	337784	PrimaryExpression	4		337415	1					
ANR	337785	ContinueStatement	continue ;	1072:3:21458:21466	337415	1	True				
ANR	337786	ExpressionStatement	err = false	1074:2:21474:21485	337415	22	True				
ANR	337787	AssignmentExpression	err = false		337415	0		=			
ANR	337788	Identifier	err		337415	0					
ANR	337789	Identifier	false		337415	1					
ANR	337790	ExpressionStatement	getnumbang ( args [ i ] )	1075:2:21489:21508	337415	23	True				
ANR	337791	CallExpression	getnumbang ( args [ i ] )		337415	0					
ANR	337792	Callee	getnumbang		337415	0					
ANR	337793	Identifier	getnumbang		337415	0					
ANR	337794	ArgumentList	args [ i ]		337415	1					
ANR	337795	Argument	args [ i ]		337415	0					
ANR	337796	ArrayIndexing	args [ i ]		337415	0					
ANR	337797	Identifier	args		337415	0					
ANR	337798	Identifier	i		337415	1					
ANR	337799	IfStatement	if ( ! err )		337415	24					
ANR	337800	Condition	! err	1076:6:21516:21519	337415	0	True				
ANR	337801	UnaryOperationExpression	! err		337415	0					
ANR	337802	UnaryOperator	!		337415	0					
ANR	337803	Identifier	err		337415	1					
ANR	337804	CompoundStatement		71:12:1240:1240	337415	1					
ANR	337805	ExpressionStatement	res |= 0xe << ( i * 4 )	1077:3:21527:21546	337415	0	True				
ANR	337806	AssignmentExpression	res |= 0xe << ( i * 4 )		337415	0		|=			
ANR	337807	Identifier	res		337415	0					
ANR	337808	ShiftExpression	0xe << ( i * 4 )		337415	1		<<			
ANR	337809	PrimaryExpression	0xe		337415	0					
ANR	337810	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337811	Identifier	i		337415	0					
ANR	337812	PrimaryExpression	4		337415	1					
ANR	337813	ContinueStatement	continue ;	1078:3:21551:21559	337415	1	True				
ANR	337814	ExpressionStatement	res |= 0xf << ( i * 4 )	1080:2:21567:21586	337415	25	True				
ANR	337815	AssignmentExpression	res |= 0xf << ( i * 4 )		337415	0		|=			
ANR	337816	Identifier	res		337415	0					
ANR	337817	ShiftExpression	0xf << ( i * 4 )		337415	1		<<			
ANR	337818	PrimaryExpression	0xf		337415	0					
ANR	337819	MultiplicativeExpression	i * 4		337415	1		*			
ANR	337820	Identifier	i		337415	0					
ANR	337821	PrimaryExpression	4		337415	1					
ANR	337822	ExpressionStatement	err = false	1082:1:21592:21603	337415	4	True				
ANR	337823	AssignmentExpression	err = false		337415	0		=			
ANR	337824	Identifier	err		337415	0					
ANR	337825	Identifier	false		337415	1					
ANR	337826	ReturnStatement	return res ;	1083:1:21606:21616	337415	5	True				
ANR	337827	Identifier	res		337415	0					
ANR	337828	ReturnType	static ut64		337415	1					
ANR	337829	Identifier	thumb_selector		337415	2					
ANR	337830	ParameterList	char * args [ ]		337415	3					
ANR	337831	Parameter	char * args [ ]	1006:27:20267:20278	337415	0	True				
ANR	337832	ParameterType	char * [ ]		337415	0					
ANR	337833	Identifier	args		337415	1					
ANR	337834	CFGEntryNode	ENTRY		337415		True				
ANR	337835	CFGExitNode	EXIT		337415		True				
ANR	337836	Symbol	res		337415						
ANR	337837	Symbol	NULL		337415						
ANR	337838	Symbol	err		337415						
ANR	337839	Symbol	getregmembang		337415						
ANR	337840	Symbol	false		337415						
ANR	337841	Symbol	i		337415						
ANR	337842	Symbol	getregmemstartend		337415						
ANR	337843	Symbol	getcoproc		337415						
ANR	337844	Symbol	getregmemend		337415						
ANR	337845	Symbol	getregmemstart		337415						
ANR	337846	Symbol	getreglist		337415						
ANR	337847	Symbol	* args		337415						
ANR	337848	Symbol	getshiftmemend		337415						
ANR	337849	Symbol	args		337415						
ANR	337850	Symbol	* i		337415						
ANR	337851	Symbol	getreg		337415						
ANR	337852	Symbol	getcoprocreg		337415						
ANR	337853	Function	getshift	1086:0:21623:22758							
ANR	337854	FunctionDef	getshift (const char * str)		337853	0					
ANR	337855	CompoundStatement		1086:38:21661:22758	337853	0					
ANR	337856	IdentifierDeclStatement	char type [ 128 ] ;	1087:1:21664:21678	337853	0	True				
ANR	337857	IdentifierDecl	type [ 128 ]		337853	0					
ANR	337858	IdentifierDeclType	char [ 128 ]		337853	0					
ANR	337859	Identifier	type		337853	1					
ANR	337860	PrimaryExpression	128		337853	2					
ANR	337861	IdentifierDeclStatement	char arg [ 128 ] ;	1088:1:21681:21694	337853	1	True				
ANR	337862	IdentifierDecl	arg [ 128 ]		337853	0					
ANR	337863	IdentifierDeclType	char [ 128 ]		337853	0					
ANR	337864	Identifier	arg		337853	1					
ANR	337865	PrimaryExpression	128		337853	2					
ANR	337866	IdentifierDeclStatement	char * space ;	1089:1:21697:21708	337853	2	True				
ANR	337867	IdentifierDecl	* space		337853	0					
ANR	337868	IdentifierDeclType	char *		337853	0					
ANR	337869	Identifier	space		337853	1					
ANR	337870	IdentifierDeclStatement	"ut32 i = 0 , shift = 0 ;"	1090:1:21711:21728	337853	3	True				
ANR	337871	IdentifierDecl	i = 0		337853	0					
ANR	337872	IdentifierDeclType	ut32		337853	0					
ANR	337873	Identifier	i		337853	1					
ANR	337874	AssignmentExpression	i = 0		337853	2		=			
ANR	337875	Identifier	i		337853	0					
ANR	337876	PrimaryExpression	0		337853	1					
ANR	337877	IdentifierDecl	shift = 0		337853	1					
ANR	337878	IdentifierDeclType	ut32		337853	0					
ANR	337879	Identifier	shift		337853	1					
ANR	337880	AssignmentExpression	shift = 0		337853	2		=			
ANR	337881	Identifier	shift		337853	0					
ANR	337882	PrimaryExpression	0		337853	1					
ANR	337883	IdentifierDeclStatement	"const char * shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" } ;"	1091:1:21731:21819	337853	4	True				
ANR	337884	IdentifierDecl	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		337853	0					
ANR	337885	IdentifierDeclType	const char * [ ]		337853	0					
ANR	337886	Identifier	shifts		337853	1					
ANR	337887	AssignmentExpression	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		337853	2		=			
ANR	337888	Identifier	shifts		337853	0					
ANR	337889	InitializerList	"""LSL"""		337853	1					
ANR	337890	PrimaryExpression	"""LSL"""		337853	0					
ANR	337891	PrimaryExpression	"""LSR"""		337853	1					
ANR	337892	PrimaryExpression	"""ASR"""		337853	2					
ANR	337893	PrimaryExpression	"""ROR"""		337853	3					
ANR	337894	PrimaryExpression	0		337853	4					
ANR	337895	PrimaryExpression	"""RRX"""		337853	5					
ANR	337896	ExpressionStatement	"strncpy ( type , str , sizeof ( type ) - 1 )"	1096:1:21823:21861	337853	5	True				
ANR	337897	CallExpression	"strncpy ( type , str , sizeof ( type ) - 1 )"		337853	0					
ANR	337898	Callee	strncpy		337853	0					
ANR	337899	Identifier	strncpy		337853	0					
ANR	337900	ArgumentList	type		337853	1					
ANR	337901	Argument	type		337853	0					
ANR	337902	Identifier	type		337853	0					
ANR	337903	Argument	str		337853	1					
ANR	337904	Identifier	str		337853	0					
ANR	337905	Argument	sizeof ( type ) - 1		337853	2					
ANR	337906	AdditiveExpression	sizeof ( type ) - 1		337853	0		-			
ANR	337907	SizeofExpression	sizeof ( type )		337853	0					
ANR	337908	Sizeof	sizeof		337853	0					
ANR	337909	SizeofOperand	type		337853	1					
ANR	337910	PrimaryExpression	1		337853	1					
ANR	337911	IfStatement	"if ( ! r_str_casecmp ( type , shifts [ 5 ] ) )"		337853	6					
ANR	337912	Condition	"! r_str_casecmp ( type , shifts [ 5 ] )"	1098:5:21909:21940	337853	0	True				
ANR	337913	UnaryOperationExpression	"! r_str_casecmp ( type , shifts [ 5 ] )"		337853	0					
ANR	337914	UnaryOperator	!		337853	0					
ANR	337915	CallExpression	"r_str_casecmp ( type , shifts [ 5 ] )"		337853	1					
ANR	337916	Callee	r_str_casecmp		337853	0					
ANR	337917	Identifier	r_str_casecmp		337853	0					
ANR	337918	ArgumentList	type		337853	1					
ANR	337919	Argument	type		337853	0					
ANR	337920	Identifier	type		337853	0					
ANR	337921	Argument	shifts [ 5 ]		337853	1					
ANR	337922	ArrayIndexing	shifts [ 5 ]		337853	0					
ANR	337923	Identifier	shifts		337853	0					
ANR	337924	PrimaryExpression	5		337853	1					
ANR	337925	CompoundStatement		13:39:281:281	337853	1					
ANR	337926	ExpressionStatement	shift = 6	1100:2:21974:21983	337853	0	True				
ANR	337927	AssignmentExpression	shift = 6		337853	0		=			
ANR	337928	Identifier	shift		337853	0					
ANR	337929	PrimaryExpression	6		337853	1					
ANR	337930	ElseStatement	else		337853	0					
ANR	337931	CompoundStatement		16:8:331:331	337853	0					
ANR	337932	ExpressionStatement	"space = strchr ( type , ' ' )"	1102:2:22022:22048	337853	0	True				
ANR	337933	AssignmentExpression	"space = strchr ( type , ' ' )"		337853	0		=			
ANR	337934	Identifier	space		337853	0					
ANR	337935	CallExpression	"strchr ( type , ' ' )"		337853	1					
ANR	337936	Callee	strchr		337853	0					
ANR	337937	Identifier	strchr		337853	0					
ANR	337938	ArgumentList	type		337853	1					
ANR	337939	Argument	type		337853	0					
ANR	337940	Identifier	type		337853	0					
ANR	337941	Argument	' '		337853	1					
ANR	337942	PrimaryExpression	' '		337853	0					
ANR	337943	IfStatement	if ( ! space )		337853	1					
ANR	337944	Condition	! space	1103:6:22056:22061	337853	0	True				
ANR	337945	UnaryOperationExpression	! space		337853	0					
ANR	337946	UnaryOperator	!		337853	0					
ANR	337947	Identifier	space		337853	1					
ANR	337948	CompoundStatement		18:14:402:402	337853	1					
ANR	337949	ReturnStatement	return 0 ;	1104:3:22069:22077	337853	0	True				
ANR	337950	PrimaryExpression	0		337853	0					
ANR	337951	ExpressionStatement	* space = 0	1106:2:22085:22095	337853	2	True				
ANR	337952	AssignmentExpression	* space = 0		337853	0		=			
ANR	337953	UnaryOperationExpression	* space		337853	0					
ANR	337954	UnaryOperator	*		337853	0					
ANR	337955	Identifier	space		337853	1					
ANR	337956	PrimaryExpression	0		337853	1					
ANR	337957	ExpressionStatement	"strncpy ( arg , ++ space , sizeof ( arg ) - 1 )"	1107:2:22099:22138	337853	3	True				
ANR	337958	CallExpression	"strncpy ( arg , ++ space , sizeof ( arg ) - 1 )"		337853	0					
ANR	337959	Callee	strncpy		337853	0					
ANR	337960	Identifier	strncpy		337853	0					
ANR	337961	ArgumentList	arg		337853	1					
ANR	337962	Argument	arg		337853	0					
ANR	337963	Identifier	arg		337853	0					
ANR	337964	Argument	++ space		337853	1					
ANR	337965	UnaryExpression	++ space		337853	0					
ANR	337966	IncDec	++		337853	0					
ANR	337967	Identifier	space		337853	1					
ANR	337968	Argument	sizeof ( arg ) - 1		337853	2					
ANR	337969	AdditiveExpression	sizeof ( arg ) - 1		337853	0		-			
ANR	337970	SizeofExpression	sizeof ( arg )		337853	0					
ANR	337971	Sizeof	sizeof		337853	0					
ANR	337972	SizeofOperand	arg		337853	1					
ANR	337973	PrimaryExpression	1		337853	1					
ANR	337974	ForStatement	for ( i = 0 ; shifts [ i ] ; i ++ )		337853	4					
ANR	337975	ForInit	i = 0 ;	1109:7:22148:22153	337853	0	True				
ANR	337976	AssignmentExpression	i = 0		337853	0		=			
ANR	337977	Identifier	i		337853	0					
ANR	337978	PrimaryExpression	0		337853	1					
ANR	337979	Condition	shifts [ i ]	1109:14:22155:22163	337853	1	True				
ANR	337980	ArrayIndexing	shifts [ i ]		337853	0					
ANR	337981	Identifier	shifts		337853	0					
ANR	337982	Identifier	i		337853	1					
ANR	337983	PostIncDecOperationExpression	i ++	1109:25:22166:22168	337853	2	True				
ANR	337984	Identifier	i		337853	0					
ANR	337985	IncDec	++		337853	1					
ANR	337986	CompoundStatement		24:30:509:509	337853	3					
ANR	337987	IfStatement	"if ( ! r_str_casecmp ( type , shifts [ i ] ) )"		337853	0					
ANR	337988	Condition	"! r_str_casecmp ( type , shifts [ i ] )"	1110:7:22180:22211	337853	0	True				
ANR	337989	UnaryOperationExpression	"! r_str_casecmp ( type , shifts [ i ] )"		337853	0					
ANR	337990	UnaryOperator	!		337853	0					
ANR	337991	CallExpression	"r_str_casecmp ( type , shifts [ i ] )"		337853	1					
ANR	337992	Callee	r_str_casecmp		337853	0					
ANR	337993	Identifier	r_str_casecmp		337853	0					
ANR	337994	ArgumentList	type		337853	1					
ANR	337995	Argument	type		337853	0					
ANR	337996	Identifier	type		337853	0					
ANR	337997	Argument	shifts [ i ]		337853	1					
ANR	337998	ArrayIndexing	shifts [ i ]		337853	0					
ANR	337999	Identifier	shifts		337853	0					
ANR	338000	Identifier	i		337853	1					
ANR	338001	CompoundStatement		25:41:552:552	337853	1					
ANR	338002	ExpressionStatement	shift = 1	1111:4:22220:22229	337853	0	True				
ANR	338003	AssignmentExpression	shift = 1		337853	0		=			
ANR	338004	Identifier	shift		337853	0					
ANR	338005	PrimaryExpression	1		337853	1					
ANR	338006	BreakStatement	break ;	1112:4:22235:22240	337853	1	True				
ANR	338007	IfStatement	if ( ! shift )		337853	5					
ANR	338008	Condition	! shift	1115:6:22257:22262	337853	0	True				
ANR	338009	UnaryOperationExpression	! shift		337853	0					
ANR	338010	UnaryOperator	!		337853	0					
ANR	338011	Identifier	shift		337853	1					
ANR	338012	CompoundStatement		30:14:603:603	337853	1					
ANR	338013	ReturnStatement	return 0 ;	1116:3:22270:22278	337853	0	True				
ANR	338014	PrimaryExpression	0		337853	0					
ANR	338015	ExpressionStatement	shift = i * 2	1118:2:22286:22299	337853	6	True				
ANR	338016	AssignmentExpression	shift = i * 2		337853	0		=			
ANR	338017	Identifier	shift		337853	0					
ANR	338018	MultiplicativeExpression	i * 2		337853	1		*			
ANR	338019	Identifier	i		337853	0					
ANR	338020	PrimaryExpression	2		337853	1					
ANR	338021	IfStatement	if ( ( i = getreg ( arg ) ) != - 1 )		337853	7					
ANR	338022	Condition	( i = getreg ( arg ) ) != - 1	1119:6:22307:22330	337853	0	True				
ANR	338023	EqualityExpression	( i = getreg ( arg ) ) != - 1		337853	0		!=			
ANR	338024	AssignmentExpression	i = getreg ( arg )		337853	0		=			
ANR	338025	Identifier	i		337853	0					
ANR	338026	CallExpression	getreg ( arg )		337853	1					
ANR	338027	Callee	getreg		337853	0					
ANR	338028	Identifier	getreg		337853	0					
ANR	338029	ArgumentList	arg		337853	1					
ANR	338030	Argument	arg		337853	0					
ANR	338031	Identifier	arg		337853	0					
ANR	338032	UnaryOperationExpression	- 1		337853	1					
ANR	338033	UnaryOperator	-		337853	0					
ANR	338034	PrimaryExpression	1		337853	1					
ANR	338035	CompoundStatement		34:32:671:671	337853	1					
ANR	338036	ExpressionStatement	i <<= 8	1120:3:22338:22345	337853	0	True				
ANR	338037	AssignmentExpression	i <<= 8		337853	0		<<=			
ANR	338038	Identifier	i		337853	0					
ANR	338039	PrimaryExpression	8		337853	1					
ANR	338040	ExpressionStatement	i |= ( 1 << 4 )	1122:3:22383:22396	337853	1	True				
ANR	338041	AssignmentExpression	i |= ( 1 << 4 )		337853	0		|=			
ANR	338042	Identifier	i		337853	0					
ANR	338043	ShiftExpression	1 << 4		337853	1		<<			
ANR	338044	PrimaryExpression	1		337853	0					
ANR	338045	PrimaryExpression	4		337853	1					
ANR	338046	ExpressionStatement	i |= shift << 4	1123:3:22413:22428	337853	2	True				
ANR	338047	AssignmentExpression	i |= shift << 4		337853	0		|=			
ANR	338048	Identifier	i		337853	0					
ANR	338049	ShiftExpression	shift << 4		337853	1		<<			
ANR	338050	Identifier	shift		337853	0					
ANR	338051	PrimaryExpression	4		337853	1					
ANR	338052	IfStatement	if ( shift == 6 )		337853	3					
ANR	338053	Condition	shift == 6	1124:7:22455:22464	337853	0	True				
ANR	338054	EqualityExpression	shift == 6		337853	0		==			
ANR	338055	Identifier	shift		337853	0					
ANR	338056	PrimaryExpression	6		337853	1					
ANR	338057	CompoundStatement		39:19:805:805	337853	1					
ANR	338058	ExpressionStatement	i |= ( 1 << 20 )	1125:4:22473:22487	337853	0	True				
ANR	338059	AssignmentExpression	i |= ( 1 << 20 )		337853	0		|=			
ANR	338060	Identifier	i		337853	0					
ANR	338061	ShiftExpression	1 << 20		337853	1		<<			
ANR	338062	PrimaryExpression	1		337853	0					
ANR	338063	PrimaryExpression	20		337853	1					
ANR	338064	ElseStatement	else		337853	0					
ANR	338065	CompoundStatement		43:3:846:879	337853	0					
ANR	338066	IdentifierDeclStatement	"char * bracket = strchr ( arg , ']' ) ;"	1128:3:22508:22541	337853	0	True				
ANR	338067	IdentifierDecl	"* bracket = strchr ( arg , ']' )"		337853	0					
ANR	338068	IdentifierDeclType	char *		337853	0					
ANR	338069	Identifier	bracket		337853	1					
ANR	338070	AssignmentExpression	"* bracket = strchr ( arg , ']' )"		337853	2		=			
ANR	338071	Identifier	bracket		337853	0					
ANR	338072	CallExpression	"strchr ( arg , ']' )"		337853	1					
ANR	338073	Callee	strchr		337853	0					
ANR	338074	Identifier	strchr		337853	0					
ANR	338075	ArgumentList	arg		337853	1					
ANR	338076	Argument	arg		337853	0					
ANR	338077	Identifier	arg		337853	0					
ANR	338078	Argument	']'		337853	1					
ANR	338079	PrimaryExpression	']'		337853	0					
ANR	338080	IfStatement	if ( bracket )		337853	1					
ANR	338081	Condition	bracket	1129:7:22550:22556	337853	0	True				
ANR	338082	Identifier	bracket		337853	0					
ANR	338083	CompoundStatement		44:16:897:897	337853	1					
ANR	338084	ExpressionStatement	* bracket = '\\0'	1130:4:22565:22580	337853	0	True				
ANR	338085	AssignmentExpression	* bracket = '\\0'		337853	0		=			
ANR	338086	UnaryOperationExpression	* bracket		337853	0					
ANR	338087	UnaryOperator	*		337853	0					
ANR	338088	Identifier	bracket		337853	1					
ANR	338089	PrimaryExpression	'\\0'		337853	1					
ANR	338090	ExpressionStatement	i &= 0x1f	1133:3:22635:22644	337853	2	True				
ANR	338091	AssignmentExpression	i &= 0x1f		337853	0		&=			
ANR	338092	Identifier	i		337853	0					
ANR	338093	PrimaryExpression	0x1f		337853	1					
ANR	338094	IfStatement	if ( ! i )		337853	3					
ANR	338095	Condition	! i	1134:7:22653:22654	337853	0	True				
ANR	338096	UnaryOperationExpression	! i		337853	0					
ANR	338097	UnaryOperator	!		337853	0					
ANR	338098	Identifier	i		337853	1					
ANR	338099	CompoundStatement		49:11:995:995	337853	1					
ANR	338100	ExpressionStatement	i = 32	1135:4:22663:22669	337853	0	True				
ANR	338101	AssignmentExpression	i = 32		337853	0		=			
ANR	338102	Identifier	i		337853	0					
ANR	338103	PrimaryExpression	32		337853	1					
ANR	338104	ExpressionStatement	i = ( i * 8 )	1137:3:22679:22690	337853	4	True				
ANR	338105	AssignmentExpression	i = ( i * 8 )		337853	0		=			
ANR	338106	Identifier	i		337853	0					
ANR	338107	MultiplicativeExpression	i * 8		337853	1		*			
ANR	338108	Identifier	i		337853	0					
ANR	338109	PrimaryExpression	8		337853	1					
ANR	338110	ExpressionStatement	i |= shift	1138:3:22695:22705	337853	5	True				
ANR	338111	AssignmentExpression	i |= shift		337853	0		|=			
ANR	338112	Identifier	i		337853	0					
ANR	338113	Identifier	shift		337853	1					
ANR	338114	ExpressionStatement	i = i << 4	1139:3:22727:22737	337853	6	True				
ANR	338115	AssignmentExpression	i = i << 4		337853	0		=			
ANR	338116	Identifier	i		337853	0					
ANR	338117	ShiftExpression	i << 4		337853	1		<<			
ANR	338118	Identifier	i		337853	0					
ANR	338119	PrimaryExpression	4		337853	1					
ANR	338120	ReturnStatement	return i ;	1143:1:22748:22756	337853	7	True				
ANR	338121	Identifier	i		337853	0					
ANR	338122	ReturnType	static ut32		337853	1					
ANR	338123	Identifier	getshift		337853	2					
ANR	338124	ParameterList	const char * str		337853	3					
ANR	338125	Parameter	const char * str	1086:21:21644:21658	337853	0	True				
ANR	338126	ParameterType	const char *		337853	0					
ANR	338127	Identifier	str		337853	1					
ANR	338128	CFGEntryNode	ENTRY		337853		True				
ANR	338129	CFGExitNode	EXIT		337853		True				
ANR	338130	Symbol	* bracket		337853						
ANR	338131	Symbol	shift		337853						
ANR	338132	Symbol	* shifts		337853						
ANR	338133	Symbol	i		337853						
ANR	338134	Symbol	strchr		337853						
ANR	338135	Symbol	type		337853						
ANR	338136	Symbol	space		337853						
ANR	338137	Symbol	str		337853						
ANR	338138	Symbol	* i		337853						
ANR	338139	Symbol	getreg		337853						
ANR	338140	Symbol	arg		337853						
ANR	338141	Symbol	bracket		337853						
ANR	338142	Symbol	shifts		337853						
ANR	338143	Symbol	* space		337853						
ANR	338144	Symbol	r_str_casecmp		337853						
ANR	338145	Function	arm_opcode_parse	1146:0:22761:23300							
ANR	338146	FunctionDef	"arm_opcode_parse (ArmOpcode * ao , const char * str)"		338145	0					
ANR	338147	CompoundStatement		1146:61:22822:23300	338145	0					
ANR	338148	IdentifierDeclStatement	int i ;	1147:1:22825:22830	338145	0	True				
ANR	338149	IdentifierDecl	i		338145	0					
ANR	338150	IdentifierDeclType	int		338145	0					
ANR	338151	Identifier	i		338145	1					
ANR	338152	ExpressionStatement	"memset ( ao , 0 , sizeof ( ArmOpcode ) )"	1148:1:22833:22867	338145	1	True				
ANR	338153	CallExpression	"memset ( ao , 0 , sizeof ( ArmOpcode ) )"		338145	0					
ANR	338154	Callee	memset		338145	0					
ANR	338155	Identifier	memset		338145	0					
ANR	338156	ArgumentList	ao		338145	1					
ANR	338157	Argument	ao		338145	0					
ANR	338158	Identifier	ao		338145	0					
ANR	338159	Argument	0		338145	1					
ANR	338160	PrimaryExpression	0		338145	0					
ANR	338161	Argument	sizeof ( ArmOpcode )		338145	2					
ANR	338162	SizeofExpression	sizeof ( ArmOpcode )		338145	0					
ANR	338163	Sizeof	sizeof		338145	0					
ANR	338164	SizeofOperand	ArmOpcode		338145	1					
ANR	338165	IfStatement	if ( strlen ( str ) + 1 >= sizeof ( ao -> op ) )		338145	2					
ANR	338166	Condition	strlen ( str ) + 1 >= sizeof ( ao -> op )	1149:5:22874:22908	338145	0	True				
ANR	338167	RelationalExpression	strlen ( str ) + 1 >= sizeof ( ao -> op )		338145	0		>=			
ANR	338168	AdditiveExpression	strlen ( str ) + 1		338145	0		+			
ANR	338169	CallExpression	strlen ( str )		338145	0					
ANR	338170	Callee	strlen		338145	0					
ANR	338171	Identifier	strlen		338145	0					
ANR	338172	ArgumentList	str		338145	1					
ANR	338173	Argument	str		338145	0					
ANR	338174	Identifier	str		338145	0					
ANR	338175	PrimaryExpression	1		338145	1					
ANR	338176	SizeofExpression	sizeof ( ao -> op )		338145	1					
ANR	338177	Sizeof	sizeof		338145	0					
ANR	338178	PtrMemberAccess	ao -> op		338145	1					
ANR	338179	Identifier	ao		338145	0					
ANR	338180	Identifier	op		338145	1					
ANR	338181	CompoundStatement		4:42:88:88	338145	1					
ANR	338182	ReturnStatement	return ;	1150:2:22915:22921	338145	0	True				
ANR	338183	ExpressionStatement	"strncpy ( ao -> op , str , sizeof ( ao -> op ) - 1 )"	1152:1:22927:22967	338145	3	True				
ANR	338184	CallExpression	"strncpy ( ao -> op , str , sizeof ( ao -> op ) - 1 )"		338145	0					
ANR	338185	Callee	strncpy		338145	0					
ANR	338186	Identifier	strncpy		338145	0					
ANR	338187	ArgumentList	ao -> op		338145	1					
ANR	338188	Argument	ao -> op		338145	0					
ANR	338189	PtrMemberAccess	ao -> op		338145	0					
ANR	338190	Identifier	ao		338145	0					
ANR	338191	Identifier	op		338145	1					
ANR	338192	Argument	str		338145	1					
ANR	338193	Identifier	str		338145	0					
ANR	338194	Argument	sizeof ( ao -> op ) - 1		338145	2					
ANR	338195	AdditiveExpression	sizeof ( ao -> op ) - 1		338145	0		-			
ANR	338196	SizeofExpression	sizeof ( ao -> op )		338145	0					
ANR	338197	Sizeof	sizeof		338145	0					
ANR	338198	PtrMemberAccess	ao -> op		338145	1					
ANR	338199	Identifier	ao		338145	0					
ANR	338200	Identifier	op		338145	1					
ANR	338201	PrimaryExpression	1		338145	1					
ANR	338202	ExpressionStatement	"strcpy ( ao -> opstr , ao -> op )"	1153:1:22970:22996	338145	4	True				
ANR	338203	CallExpression	"strcpy ( ao -> opstr , ao -> op )"		338145	0					
ANR	338204	Callee	strcpy		338145	0					
ANR	338205	Identifier	strcpy		338145	0					
ANR	338206	ArgumentList	ao -> opstr		338145	1					
ANR	338207	Argument	ao -> opstr		338145	0					
ANR	338208	PtrMemberAccess	ao -> opstr		338145	0					
ANR	338209	Identifier	ao		338145	0					
ANR	338210	Identifier	opstr		338145	1					
ANR	338211	Argument	ao -> op		338145	1					
ANR	338212	PtrMemberAccess	ao -> op		338145	0					
ANR	338213	Identifier	ao		338145	0					
ANR	338214	Identifier	op		338145	1					
ANR	338215	ExpressionStatement	"ao -> a [ 0 ] = strchr ( ao -> op , ' ' )"	1154:1:22999:23030	338145	5	True				
ANR	338216	AssignmentExpression	"ao -> a [ 0 ] = strchr ( ao -> op , ' ' )"		338145	0		=			
ANR	338217	ArrayIndexing	ao -> a [ 0 ]		338145	0					
ANR	338218	PtrMemberAccess	ao -> a		338145	0					
ANR	338219	Identifier	ao		338145	0					
ANR	338220	Identifier	a		338145	1					
ANR	338221	PrimaryExpression	0		338145	1					
ANR	338222	CallExpression	"strchr ( ao -> op , ' ' )"		338145	1					
ANR	338223	Callee	strchr		338145	0					
ANR	338224	Identifier	strchr		338145	0					
ANR	338225	ArgumentList	ao -> op		338145	1					
ANR	338226	Argument	ao -> op		338145	0					
ANR	338227	PtrMemberAccess	ao -> op		338145	0					
ANR	338228	Identifier	ao		338145	0					
ANR	338229	Identifier	op		338145	1					
ANR	338230	Argument	' '		338145	1					
ANR	338231	PrimaryExpression	' '		338145	0					
ANR	338232	ForStatement	for ( i = 0 ; i < 15 ; i ++ )		338145	6					
ANR	338233	ForInit	i = 0 ;	1155:6:23038:23041	338145	0	True				
ANR	338234	AssignmentExpression	i = 0		338145	0		=			
ANR	338235	Identifier	i		338145	0					
ANR	338236	PrimaryExpression	0		338145	1					
ANR	338237	Condition	i < 15	1155:11:23043:23046	338145	1	True				
ANR	338238	RelationalExpression	i < 15		338145	0		<			
ANR	338239	Identifier	i		338145	0					
ANR	338240	PrimaryExpression	15		338145	1					
ANR	338241	PostIncDecOperationExpression	i ++	1155:17:23049:23051	338145	2	True				
ANR	338242	Identifier	i		338145	0					
ANR	338243	IncDec	++		338145	1					
ANR	338244	CompoundStatement		10:22:231:231	338145	3					
ANR	338245	IfStatement	if ( ao -> a [ i ] )		338145	0					
ANR	338246	Condition	ao -> a [ i ]	1156:6:23062:23069	338145	0	True				
ANR	338247	ArrayIndexing	ao -> a [ i ]		338145	0					
ANR	338248	PtrMemberAccess	ao -> a		338145	0					
ANR	338249	Identifier	ao		338145	0					
ANR	338250	Identifier	a		338145	1					
ANR	338251	Identifier	i		338145	1					
ANR	338252	CompoundStatement		11:16:249:249	338145	1					
ANR	338253	ExpressionStatement	* ao -> a [ i ] = 0	1157:3:23077:23090	338145	0	True				
ANR	338254	AssignmentExpression	* ao -> a [ i ] = 0		338145	0		=			
ANR	338255	UnaryOperationExpression	* ao -> a [ i ]		338145	0					
ANR	338256	UnaryOperator	*		338145	0					
ANR	338257	ArrayIndexing	ao -> a [ i ]		338145	1					
ANR	338258	PtrMemberAccess	ao -> a		338145	0					
ANR	338259	Identifier	ao		338145	0					
ANR	338260	Identifier	a		338145	1					
ANR	338261	Identifier	i		338145	1					
ANR	338262	PrimaryExpression	0		338145	1					
ANR	338263	ExpressionStatement	"ao -> a [ i + 1 ] = strchr ( ++ ao -> a [ i ] , ',' )"	1158:3:23095:23132	338145	1	True				
ANR	338264	AssignmentExpression	"ao -> a [ i + 1 ] = strchr ( ++ ao -> a [ i ] , ',' )"		338145	0		=			
ANR	338265	ArrayIndexing	ao -> a [ i + 1 ]		338145	0					
ANR	338266	PtrMemberAccess	ao -> a		338145	0					
ANR	338267	Identifier	ao		338145	0					
ANR	338268	Identifier	a		338145	1					
ANR	338269	AdditiveExpression	i + 1		338145	1		+			
ANR	338270	Identifier	i		338145	0					
ANR	338271	PrimaryExpression	1		338145	1					
ANR	338272	CallExpression	"strchr ( ++ ao -> a [ i ] , ',' )"		338145	1					
ANR	338273	Callee	strchr		338145	0					
ANR	338274	Identifier	strchr		338145	0					
ANR	338275	ArgumentList	++ ao -> a [ i ]		338145	1					
ANR	338276	Argument	++ ao -> a [ i ]		338145	0					
ANR	338277	UnaryExpression	++ ao -> a [ i ]		338145	0					
ANR	338278	IncDec	++		338145	0					
ANR	338279	ArrayIndexing	ao -> a [ i ]		338145	1					
ANR	338280	PtrMemberAccess	ao -> a		338145	0					
ANR	338281	Identifier	ao		338145	0					
ANR	338282	Identifier	a		338145	1					
ANR	338283	Identifier	i		338145	1					
ANR	338284	Argument	"','"		338145	1					
ANR	338285	PrimaryExpression	"','"		338145	0					
ANR	338286	ElseStatement	else		338145	0					
ANR	338287	CompoundStatement		14:9:320:320	338145	0					
ANR	338288	BreakStatement	break ;	1160:3:23148:23153	338145	0	True				
ANR	338289	IfStatement	if ( ao -> a [ i ] )		338145	7					
ANR	338290	Condition	ao -> a [ i ]	1163:5:23167:23174	338145	0	True				
ANR	338291	ArrayIndexing	ao -> a [ i ]		338145	0					
ANR	338292	PtrMemberAccess	ao -> a		338145	0					
ANR	338293	Identifier	ao		338145	0					
ANR	338294	Identifier	a		338145	1					
ANR	338295	Identifier	i		338145	1					
ANR	338296	CompoundStatement		18:15:354:354	338145	1					
ANR	338297	ExpressionStatement	* ao -> a [ i ] = 0	1164:2:23181:23194	338145	0	True				
ANR	338298	AssignmentExpression	* ao -> a [ i ] = 0		338145	0		=			
ANR	338299	UnaryOperationExpression	* ao -> a [ i ]		338145	0					
ANR	338300	UnaryOperator	*		338145	0					
ANR	338301	ArrayIndexing	ao -> a [ i ]		338145	1					
ANR	338302	PtrMemberAccess	ao -> a		338145	0					
ANR	338303	Identifier	ao		338145	0					
ANR	338304	Identifier	a		338145	1					
ANR	338305	Identifier	i		338145	1					
ANR	338306	PrimaryExpression	0		338145	1					
ANR	338307	ExpressionStatement	ao -> a [ i ] ++	1165:2:23198:23208	338145	1	True				
ANR	338308	PostIncDecOperationExpression	ao -> a [ i ] ++		338145	0					
ANR	338309	ArrayIndexing	ao -> a [ i ]		338145	0					
ANR	338310	PtrMemberAccess	ao -> a		338145	0					
ANR	338311	Identifier	ao		338145	0					
ANR	338312	Identifier	a		338145	1					
ANR	338313	Identifier	i		338145	1					
ANR	338314	IncDec	++		338145	1					
ANR	338315	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		338145	8					
ANR	338316	ForInit	i = 0 ;	1167:6:23219:23222	338145	0	True				
ANR	338317	AssignmentExpression	i = 0		338145	0		=			
ANR	338318	Identifier	i		338145	0					
ANR	338319	PrimaryExpression	0		338145	1					
ANR	338320	Condition	i < 16	1167:11:23224:23227	338145	1	True				
ANR	338321	RelationalExpression	i < 16		338145	0		<			
ANR	338322	Identifier	i		338145	0					
ANR	338323	PrimaryExpression	16		338145	1					
ANR	338324	PostIncDecOperationExpression	i ++	1167:17:23230:23232	338145	2	True				
ANR	338325	Identifier	i		338145	0					
ANR	338326	IncDec	++		338145	1					
ANR	338327	CompoundStatement		22:22:412:412	338145	3					
ANR	338328	WhileStatement	while ( ao -> a [ i ] && * ao -> a [ i ] == ' ' )		338145	0					
ANR	338329	Condition	ao -> a [ i ] && * ao -> a [ i ] == ' '	1168:9:23246:23273	338145	0	True				
ANR	338330	AndExpression	ao -> a [ i ] && * ao -> a [ i ] == ' '		338145	0		&&			
ANR	338331	ArrayIndexing	ao -> a [ i ]		338145	0					
ANR	338332	PtrMemberAccess	ao -> a		338145	0					
ANR	338333	Identifier	ao		338145	0					
ANR	338334	Identifier	a		338145	1					
ANR	338335	Identifier	i		338145	1					
ANR	338336	EqualityExpression	* ao -> a [ i ] == ' '		338145	1		==			
ANR	338337	UnaryOperationExpression	* ao -> a [ i ]		338145	0					
ANR	338338	UnaryOperator	*		338145	0					
ANR	338339	ArrayIndexing	ao -> a [ i ]		338145	1					
ANR	338340	PtrMemberAccess	ao -> a		338145	0					
ANR	338341	Identifier	ao		338145	0					
ANR	338342	Identifier	a		338145	1					
ANR	338343	Identifier	i		338145	1					
ANR	338344	PrimaryExpression	' '		338145	1					
ANR	338345	CompoundStatement		23:39:453:453	338145	1					
ANR	338346	ExpressionStatement	ao -> a [ i ] ++	1169:3:23281:23291	338145	0	True				
ANR	338347	PostIncDecOperationExpression	ao -> a [ i ] ++		338145	0					
ANR	338348	ArrayIndexing	ao -> a [ i ]		338145	0					
ANR	338349	PtrMemberAccess	ao -> a		338145	0					
ANR	338350	Identifier	ao		338145	0					
ANR	338351	Identifier	a		338145	1					
ANR	338352	Identifier	i		338145	1					
ANR	338353	IncDec	++		338145	1					
ANR	338354	ReturnType	static void		338145	1					
ANR	338355	Identifier	arm_opcode_parse		338145	2					
ANR	338356	ParameterList	"ArmOpcode * ao , const char * str"		338145	3					
ANR	338357	Parameter	ArmOpcode * ao	1146:29:22790:22802	338145	0	True				
ANR	338358	ParameterType	ArmOpcode *		338145	0					
ANR	338359	Identifier	ao		338145	1					
ANR	338360	Parameter	const char * str	1146:44:22805:22819	338145	1	True				
ANR	338361	ParameterType	const char *		338145	0					
ANR	338362	Identifier	str		338145	1					
ANR	338363	CFGEntryNode	ENTRY		338145		True				
ANR	338364	CFGExitNode	EXIT		338145		True				
ANR	338365	Symbol	* * i		338145						
ANR	338366	Symbol	ao -> opstr		338145						
ANR	338367	Symbol	i		338145						
ANR	338368	Symbol	ao -> op		338145						
ANR	338369	Symbol	strchr		338145						
ANR	338370	Symbol	* ao -> a [ i ]		338145						
ANR	338371	Symbol	* * ao -> a		338145						
ANR	338372	Symbol	* * * ao		338145						
ANR	338373	Symbol	ao		338145						
ANR	338374	Symbol	str		338145						
ANR	338375	Symbol	* ao -> a		338145						
ANR	338376	Symbol	strlen		338145						
ANR	338377	Symbol	* i		338145						
ANR	338378	Symbol	* ao		338145						
ANR	338379	Symbol	* * ao		338145						
ANR	338380	Symbol	ao -> a		338145						
ANR	338381	Function	arm_opcode_cond	1174:0:23303:23691							
ANR	338382	FunctionDef	"arm_opcode_cond (ArmOpcode * ao , int delta)"		338381	0					
ANR	338383	CompoundStatement		1174:60:23363:23691	338381	0					
ANR	338384	IdentifierDeclStatement	"const char * conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 } ;"	1175:1:23366:23494	338381	0	True				
ANR	338385	IdentifierDecl	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		338381	0					
ANR	338386	IdentifierDeclType	const char * [ ]		338381	0					
ANR	338387	Identifier	conds		338381	1					
ANR	338388	AssignmentExpression	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		338381	2		=			
ANR	338389	Identifier	conds		338381	0					
ANR	338390	InitializerList	"""eq"""		338381	1					
ANR	338391	PrimaryExpression	"""eq"""		338381	0					
ANR	338392	PrimaryExpression	"""ne"""		338381	1					
ANR	338393	PrimaryExpression	"""cs"""		338381	2					
ANR	338394	PrimaryExpression	"""cc"""		338381	3					
ANR	338395	PrimaryExpression	"""mi"""		338381	4					
ANR	338396	PrimaryExpression	"""pl"""		338381	5					
ANR	338397	PrimaryExpression	"""vs"""		338381	6					
ANR	338398	PrimaryExpression	"""vc"""		338381	7					
ANR	338399	PrimaryExpression	"""hi"""		338381	8					
ANR	338400	PrimaryExpression	"""ls"""		338381	9					
ANR	338401	PrimaryExpression	"""ge"""		338381	10					
ANR	338402	PrimaryExpression	"""lt"""		338381	11					
ANR	338403	PrimaryExpression	"""gt"""		338381	12					
ANR	338404	PrimaryExpression	"""le"""		338381	13					
ANR	338405	PrimaryExpression	"""al"""		338381	14					
ANR	338406	PrimaryExpression	"""nv"""		338381	15					
ANR	338407	PrimaryExpression	0		338381	16					
ANR	338408	IdentifierDeclStatement	"int i , cond = 14 ;"	1179:1:23497:23513	338381	1	True				
ANR	338409	IdentifierDecl	i		338381	0					
ANR	338410	IdentifierDeclType	int		338381	0					
ANR	338411	Identifier	i		338381	1					
ANR	338412	IdentifierDecl	cond = 14		338381	1					
ANR	338413	IdentifierDeclType	int		338381	0					
ANR	338414	Identifier	cond		338381	1					
ANR	338415	AssignmentExpression	cond = 14		338381	2		=			
ANR	338416	Identifier	cond		338381	0					
ANR	338417	PrimaryExpression	14		338381	1					
ANR	338418	IdentifierDeclStatement	char * c = ao -> op + delta ;	1180:1:23539:23561	338381	2	True				
ANR	338419	IdentifierDecl	* c = ao -> op + delta		338381	0					
ANR	338420	IdentifierDeclType	char *		338381	0					
ANR	338421	Identifier	c		338381	1					
ANR	338422	AssignmentExpression	* c = ao -> op + delta		338381	2		=			
ANR	338423	Identifier	c		338381	0					
ANR	338424	AdditiveExpression	ao -> op + delta		338381	1		+			
ANR	338425	PtrMemberAccess	ao -> op		338381	0					
ANR	338426	Identifier	ao		338381	0					
ANR	338427	Identifier	op		338381	1					
ANR	338428	Identifier	delta		338381	1					
ANR	338429	ForStatement	for ( i = 0 ; conds [ i ] ; i ++ )		338381	3					
ANR	338430	ForInit	i = 0 ;	1181:6:23569:23572	338381	0	True				
ANR	338431	AssignmentExpression	i = 0		338381	0		=			
ANR	338432	Identifier	i		338381	0					
ANR	338433	PrimaryExpression	0		338381	1					
ANR	338434	Condition	conds [ i ]	1181:11:23574:23581	338381	1	True				
ANR	338435	ArrayIndexing	conds [ i ]		338381	0					
ANR	338436	Identifier	conds		338381	0					
ANR	338437	Identifier	i		338381	1					
ANR	338438	PostIncDecOperationExpression	i ++	1181:21:23584:23586	338381	2	True				
ANR	338439	Identifier	i		338381	0					
ANR	338440	IncDec	++		338381	1					
ANR	338441	CompoundStatement		8:26:225:225	338381	3					
ANR	338442	IfStatement	"if ( ! strcmpnull ( c , conds [ i ] ) )"		338381	0					
ANR	338443	Condition	"! strcmpnull ( c , conds [ i ] )"	1182:6:23597:23621	338381	0	True				
ANR	338444	UnaryOperationExpression	"! strcmpnull ( c , conds [ i ] )"		338381	0					
ANR	338445	UnaryOperator	!		338381	0					
ANR	338446	CallExpression	"strcmpnull ( c , conds [ i ] )"		338381	1					
ANR	338447	Callee	strcmpnull		338381	0					
ANR	338448	Identifier	strcmpnull		338381	0					
ANR	338449	ArgumentList	c		338381	1					
ANR	338450	Argument	c		338381	0					
ANR	338451	Identifier	c		338381	0					
ANR	338452	Argument	conds [ i ]		338381	1					
ANR	338453	ArrayIndexing	conds [ i ]		338381	0					
ANR	338454	Identifier	conds		338381	0					
ANR	338455	Identifier	i		338381	1					
ANR	338456	CompoundStatement		9:33:260:260	338381	1					
ANR	338457	ExpressionStatement	cond = i	1183:3:23629:23637	338381	0	True				
ANR	338458	AssignmentExpression	cond = i		338381	0		=			
ANR	338459	Identifier	cond		338381	0					
ANR	338460	Identifier	i		338381	1					
ANR	338461	BreakStatement	break ;	1184:3:23642:23647	338381	1	True				
ANR	338462	ExpressionStatement	ao -> o |= cond << 4	1187:1:23657:23675	338381	4	True				
ANR	338463	AssignmentExpression	ao -> o |= cond << 4		338381	0		|=			
ANR	338464	PtrMemberAccess	ao -> o		338381	0					
ANR	338465	Identifier	ao		338381	0					
ANR	338466	Identifier	o		338381	1					
ANR	338467	ShiftExpression	cond << 4		338381	1		<<			
ANR	338468	Identifier	cond		338381	0					
ANR	338469	PrimaryExpression	4		338381	1					
ANR	338470	ReturnStatement	return cond ;	1188:1:23678:23689	338381	5	True				
ANR	338471	Identifier	cond		338381	0					
ANR	338472	ReturnType	static inline int		338381	1					
ANR	338473	Identifier	arm_opcode_cond		338381	2					
ANR	338474	ParameterList	"ArmOpcode * ao , int delta"		338381	3					
ANR	338475	Parameter	ArmOpcode * ao	1174:34:23337:23349	338381	0	True				
ANR	338476	ParameterType	ArmOpcode *		338381	0					
ANR	338477	Identifier	ao		338381	1					
ANR	338478	Parameter	int delta	1174:49:23352:23360	338381	1	True				
ANR	338479	ParameterType	int		338381	0					
ANR	338480	Identifier	delta		338381	1					
ANR	338481	CFGEntryNode	ENTRY		338381		True				
ANR	338482	CFGExitNode	EXIT		338381		True				
ANR	338483	Symbol	strcmpnull		338381						
ANR	338484	Symbol	c		338381						
ANR	338485	Symbol	* conds		338381						
ANR	338486	Symbol	* i		338381						
ANR	338487	Symbol	conds		338381						
ANR	338488	Symbol	* ao		338381						
ANR	338489	Symbol	delta		338381						
ANR	338490	Symbol	i		338381						
ANR	338491	Symbol	ao -> op		338381						
ANR	338492	Symbol	cond		338381						
ANR	338493	Symbol	ao -> o		338381						
ANR	338494	Symbol	ao		338381						
ANR	338495	Function	thumb_getoffset	1191:0:23694:23917							
ANR	338496	FunctionDef	"thumb_getoffset (char * label , ut64 cur)"		338495	0					
ANR	338497	CompoundStatement		1191:51:23745:23917	338495	0					
ANR	338498	IdentifierDeclStatement	"st32 res = r_num_math ( NULL , label ) ;"	1192:1:23748:23783	338495	0	True				
ANR	338499	IdentifierDecl	"res = r_num_math ( NULL , label )"		338495	0					
ANR	338500	IdentifierDeclType	st32		338495	0					
ANR	338501	Identifier	res		338495	1					
ANR	338502	AssignmentExpression	"res = r_num_math ( NULL , label )"		338495	2		=			
ANR	338503	Identifier	res		338495	0					
ANR	338504	CallExpression	"r_num_math ( NULL , label )"		338495	1					
ANR	338505	Callee	r_num_math		338495	0					
ANR	338506	Identifier	r_num_math		338495	0					
ANR	338507	ArgumentList	NULL		338495	1					
ANR	338508	Argument	NULL		338495	0					
ANR	338509	Identifier	NULL		338495	0					
ANR	338510	Argument	label		338495	1					
ANR	338511	Identifier	label		338495	0					
ANR	338512	ExpressionStatement	res -= 4	1193:1:23786:23794	338495	1	True				
ANR	338513	AssignmentExpression	res -= 4		338495	0		-=			
ANR	338514	Identifier	res		338495	0					
ANR	338515	PrimaryExpression	4		338495	1					
ANR	338516	ExpressionStatement	res -= cur	1194:1:23797:23807	338495	2	True				
ANR	338517	AssignmentExpression	res -= cur		338495	0		-=			
ANR	338518	Identifier	res		338495	0					
ANR	338519	Identifier	cur		338495	1					
ANR	338520	ReturnStatement	return res ;	1196:1:23905:23915	338495	3	True				
ANR	338521	Identifier	res		338495	0					
ANR	338522	ReturnType	static st32		338495	1					
ANR	338523	Identifier	thumb_getoffset		338495	2					
ANR	338524	ParameterList	"char * label , ut64 cur"		338495	3					
ANR	338525	Parameter	char * label	1191:28:23722:23732	338495	0	True				
ANR	338526	ParameterType	char *		338495	0					
ANR	338527	Identifier	label		338495	1					
ANR	338528	Parameter	ut64 cur	1191:41:23735:23742	338495	1	True				
ANR	338529	ParameterType	ut64		338495	0					
ANR	338530	Identifier	cur		338495	1					
ANR	338531	CFGEntryNode	ENTRY		338495		True				
ANR	338532	CFGExitNode	EXIT		338495		True				
ANR	338533	Symbol	cur		338495						
ANR	338534	Symbol	res		338495						
ANR	338535	Symbol	NULL		338495						
ANR	338536	Symbol	label		338495						
ANR	338537	Symbol	r_num_math		338495						
ANR	338538	Function	std_16bit_2reg	1199:0:23920:24145							
ANR	338539	FunctionDef	"std_16bit_2reg (ArmOpcode * ao , ut64 m)"		338538	0					
ANR	338540	CompoundStatement		1199:49:23969:24145	338538	0					
ANR	338541	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1200:1:23972:23998	338538	0	True				
ANR	338542	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		338538	0					
ANR	338543	IdentifierDeclType	ut8		338538	0					
ANR	338544	Identifier	rd		338538	1					
ANR	338545	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		338538	2		=			
ANR	338546	Identifier	rd		338538	0					
ANR	338547	CallExpression	getreg ( ao -> a [ 0 ] )		338538	1					
ANR	338548	Callee	getreg		338538	0					
ANR	338549	Identifier	getreg		338538	0					
ANR	338550	ArgumentList	ao -> a [ 0 ]		338538	1					
ANR	338551	Argument	ao -> a [ 0 ]		338538	0					
ANR	338552	ArrayIndexing	ao -> a [ 0 ]		338538	0					
ANR	338553	PtrMemberAccess	ao -> a		338538	0					
ANR	338554	Identifier	ao		338538	0					
ANR	338555	Identifier	a		338538	1					
ANR	338556	PrimaryExpression	0		338538	1					
ANR	338557	IdentifierDeclStatement	ut8 rn = getreg ( ao -> a [ 1 ] ) ;	1201:1:24001:24027	338538	1	True				
ANR	338558	IdentifierDecl	rn = getreg ( ao -> a [ 1 ] )		338538	0					
ANR	338559	IdentifierDeclType	ut8		338538	0					
ANR	338560	Identifier	rn		338538	1					
ANR	338561	AssignmentExpression	rn = getreg ( ao -> a [ 1 ] )		338538	2		=			
ANR	338562	Identifier	rn		338538	0					
ANR	338563	CallExpression	getreg ( ao -> a [ 1 ] )		338538	1					
ANR	338564	Callee	getreg		338538	0					
ANR	338565	Identifier	getreg		338538	0					
ANR	338566	ArgumentList	ao -> a [ 1 ]		338538	1					
ANR	338567	Argument	ao -> a [ 1 ]		338538	0					
ANR	338568	ArrayIndexing	ao -> a [ 1 ]		338538	0					
ANR	338569	PtrMemberAccess	ao -> a		338538	0					
ANR	338570	Identifier	ao		338538	0					
ANR	338571	Identifier	a		338538	1					
ANR	338572	PrimaryExpression	1		338538	1					
ANR	338573	IfStatement	if ( ( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT ) )		338538	2					
ANR	338574	Condition	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )	1202:6:24035:24073	338538	0	True				
ANR	338575	AndExpression	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )		338538	0		&&			
ANR	338576	RelationalExpression	rd < 8		338538	0		<			
ANR	338577	Identifier	rd		338538	0					
ANR	338578	PrimaryExpression	8		338538	1					
ANR	338579	AndExpression	( rn < 8 ) && ! ( m & DOTW_BIT )		338538	1		&&			
ANR	338580	RelationalExpression	rn < 8		338538	0		<			
ANR	338581	Identifier	rn		338538	0					
ANR	338582	PrimaryExpression	8		338538	1					
ANR	338583	UnaryOperationExpression	! ( m & DOTW_BIT )		338538	1					
ANR	338584	UnaryOperator	!		338538	0					
ANR	338585	BitAndExpression	m & DOTW_BIT		338538	1		&			
ANR	338586	Identifier	m		338538	0					
ANR	338587	Identifier	DOTW_BIT		338538	1					
ANR	338588	CompoundStatement		4:47:106:106	338538	1					
ANR	338589	ExpressionStatement	ao -> o |= rd << 8	1203:2:24080:24096	338538	0	True				
ANR	338590	AssignmentExpression	ao -> o |= rd << 8		338538	0		|=			
ANR	338591	PtrMemberAccess	ao -> o		338538	0					
ANR	338592	Identifier	ao		338538	0					
ANR	338593	Identifier	o		338538	1					
ANR	338594	ShiftExpression	rd << 8		338538	1		<<			
ANR	338595	Identifier	rd		338538	0					
ANR	338596	PrimaryExpression	8		338538	1					
ANR	338597	ExpressionStatement	ao -> o |= rn << 11	1204:2:24100:24117	338538	1	True				
ANR	338598	AssignmentExpression	ao -> o |= rn << 11		338538	0		|=			
ANR	338599	PtrMemberAccess	ao -> o		338538	0					
ANR	338600	Identifier	ao		338538	0					
ANR	338601	Identifier	o		338538	1					
ANR	338602	ShiftExpression	rn << 11		338538	1		<<			
ANR	338603	Identifier	rn		338538	0					
ANR	338604	PrimaryExpression	11		338538	1					
ANR	338605	ReturnStatement	return 2 ;	1205:2:24121:24129	338538	2	True				
ANR	338606	PrimaryExpression	2		338538	0					
ANR	338607	ReturnStatement	return 0 ;	1207:1:24135:24143	338538	3	True				
ANR	338608	PrimaryExpression	0		338538	0					
ANR	338609	ReturnType	static st8		338538	1					
ANR	338610	Identifier	std_16bit_2reg		338538	2					
ANR	338611	ParameterList	"ArmOpcode * ao , ut64 m"		338538	3					
ANR	338612	Parameter	ArmOpcode * ao	1199:26:23946:23958	338538	0	True				
ANR	338613	ParameterType	ArmOpcode *		338538	0					
ANR	338614	Identifier	ao		338538	1					
ANR	338615	Parameter	ut64 m	1199:41:23961:23966	338538	1	True				
ANR	338616	ParameterType	ut64		338538	0					
ANR	338617	Identifier	m		338538	1					
ANR	338618	CFGEntryNode	ENTRY		338538		True				
ANR	338619	CFGExitNode	EXIT		338538		True				
ANR	338620	Symbol	* ao -> a		338538						
ANR	338621	Symbol	rd		338538						
ANR	338622	Symbol	DOTW_BIT		338538						
ANR	338623	Symbol	getreg		338538						
ANR	338624	Symbol	* ao		338538						
ANR	338625	Symbol	* * ao		338538						
ANR	338626	Symbol	ao -> a		338538						
ANR	338627	Symbol	rn		338538						
ANR	338628	Symbol	ao -> o		338538						
ANR	338629	Symbol	m		338538						
ANR	338630	Symbol	ao		338538						
ANR	338631	Function	mem_16bit_2reg	1210:0:24148:24381							
ANR	338632	FunctionDef	"mem_16bit_2reg (ArmOpcode * ao , ut64 m)"		338631	0					
ANR	338633	CompoundStatement		1210:49:24197:24381	338631	0					
ANR	338634	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1211:1:24200:24226	338631	0	True				
ANR	338635	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		338631	0					
ANR	338636	IdentifierDeclType	ut8		338631	0					
ANR	338637	Identifier	rd		338631	1					
ANR	338638	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		338631	2		=			
ANR	338639	Identifier	rd		338631	0					
ANR	338640	CallExpression	getreg ( ao -> a [ 0 ] )		338631	1					
ANR	338641	Callee	getreg		338631	0					
ANR	338642	Identifier	getreg		338631	0					
ANR	338643	ArgumentList	ao -> a [ 0 ]		338631	1					
ANR	338644	Argument	ao -> a [ 0 ]		338631	0					
ANR	338645	ArrayIndexing	ao -> a [ 0 ]		338631	0					
ANR	338646	PtrMemberAccess	ao -> a		338631	0					
ANR	338647	Identifier	ao		338631	0					
ANR	338648	Identifier	a		338631	1					
ANR	338649	PrimaryExpression	0		338631	1					
ANR	338650	IdentifierDeclStatement	ut8 rn = getregmemstart ( ao -> a [ 1 ] ) ;	1212:1:24229:24263	338631	1	True				
ANR	338651	IdentifierDecl	rn = getregmemstart ( ao -> a [ 1 ] )		338631	0					
ANR	338652	IdentifierDeclType	ut8		338631	0					
ANR	338653	Identifier	rn		338631	1					
ANR	338654	AssignmentExpression	rn = getregmemstart ( ao -> a [ 1 ] )		338631	2		=			
ANR	338655	Identifier	rn		338631	0					
ANR	338656	CallExpression	getregmemstart ( ao -> a [ 1 ] )		338631	1					
ANR	338657	Callee	getregmemstart		338631	0					
ANR	338658	Identifier	getregmemstart		338631	0					
ANR	338659	ArgumentList	ao -> a [ 1 ]		338631	1					
ANR	338660	Argument	ao -> a [ 1 ]		338631	0					
ANR	338661	ArrayIndexing	ao -> a [ 1 ]		338631	0					
ANR	338662	PtrMemberAccess	ao -> a		338631	0					
ANR	338663	Identifier	ao		338631	0					
ANR	338664	Identifier	a		338631	1					
ANR	338665	PrimaryExpression	1		338631	1					
ANR	338666	IfStatement	if ( ( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT ) )		338631	2					
ANR	338667	Condition	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )	1213:6:24271:24309	338631	0	True				
ANR	338668	AndExpression	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )		338631	0		&&			
ANR	338669	RelationalExpression	rd < 8		338631	0		<			
ANR	338670	Identifier	rd		338631	0					
ANR	338671	PrimaryExpression	8		338631	1					
ANR	338672	AndExpression	( rn < 8 ) && ! ( m & DOTW_BIT )		338631	1		&&			
ANR	338673	RelationalExpression	rn < 8		338631	0		<			
ANR	338674	Identifier	rn		338631	0					
ANR	338675	PrimaryExpression	8		338631	1					
ANR	338676	UnaryOperationExpression	! ( m & DOTW_BIT )		338631	1					
ANR	338677	UnaryOperator	!		338631	0					
ANR	338678	BitAndExpression	m & DOTW_BIT		338631	1		&			
ANR	338679	Identifier	m		338631	0					
ANR	338680	Identifier	DOTW_BIT		338631	1					
ANR	338681	CompoundStatement		4:47:114:114	338631	1					
ANR	338682	ExpressionStatement	ao -> o |= rd << 8	1214:2:24316:24332	338631	0	True				
ANR	338683	AssignmentExpression	ao -> o |= rd << 8		338631	0		|=			
ANR	338684	PtrMemberAccess	ao -> o		338631	0					
ANR	338685	Identifier	ao		338631	0					
ANR	338686	Identifier	o		338631	1					
ANR	338687	ShiftExpression	rd << 8		338631	1		<<			
ANR	338688	Identifier	rd		338631	0					
ANR	338689	PrimaryExpression	8		338631	1					
ANR	338690	ExpressionStatement	ao -> o |= rn << 11	1215:2:24336:24353	338631	1	True				
ANR	338691	AssignmentExpression	ao -> o |= rn << 11		338631	0		|=			
ANR	338692	PtrMemberAccess	ao -> o		338631	0					
ANR	338693	Identifier	ao		338631	0					
ANR	338694	Identifier	o		338631	1					
ANR	338695	ShiftExpression	rn << 11		338631	1		<<			
ANR	338696	Identifier	rn		338631	0					
ANR	338697	PrimaryExpression	11		338631	1					
ANR	338698	ReturnStatement	return 2 ;	1216:2:24357:24365	338631	2	True				
ANR	338699	PrimaryExpression	2		338631	0					
ANR	338700	ReturnStatement	return 0 ;	1218:1:24371:24379	338631	3	True				
ANR	338701	PrimaryExpression	0		338631	0					
ANR	338702	ReturnType	static st8		338631	1					
ANR	338703	Identifier	mem_16bit_2reg		338631	2					
ANR	338704	ParameterList	"ArmOpcode * ao , ut64 m"		338631	3					
ANR	338705	Parameter	ArmOpcode * ao	1210:26:24174:24186	338631	0	True				
ANR	338706	ParameterType	ArmOpcode *		338631	0					
ANR	338707	Identifier	ao		338631	1					
ANR	338708	Parameter	ut64 m	1210:41:24189:24194	338631	1	True				
ANR	338709	ParameterType	ut64		338631	0					
ANR	338710	Identifier	m		338631	1					
ANR	338711	CFGEntryNode	ENTRY		338631		True				
ANR	338712	CFGExitNode	EXIT		338631		True				
ANR	338713	Symbol	* ao -> a		338631						
ANR	338714	Symbol	rd		338631						
ANR	338715	Symbol	DOTW_BIT		338631						
ANR	338716	Symbol	getreg		338631						
ANR	338717	Symbol	* ao		338631						
ANR	338718	Symbol	* * ao		338631						
ANR	338719	Symbol	ao -> a		338631						
ANR	338720	Symbol	rn		338631						
ANR	338721	Symbol	ao -> o		338631						
ANR	338722	Symbol	m		338631						
ANR	338723	Symbol	getregmemstart		338631						
ANR	338724	Symbol	ao		338631						
ANR	338725	Function	std_32bit_2reg	1221:0:24384:24838							
ANR	338726	FunctionDef	"std_32bit_2reg (ArmOpcode * ao , ut64 m , bool shift)"		338725	0					
ANR	338727	CompoundStatement		1221:61:24445:24838	338725	0					
ANR	338728	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1222:1:24448:24474	338725	0	True				
ANR	338729	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		338725	0					
ANR	338730	IdentifierDeclType	ut8		338725	0					
ANR	338731	Identifier	rd		338725	1					
ANR	338732	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		338725	2		=			
ANR	338733	Identifier	rd		338725	0					
ANR	338734	CallExpression	getreg ( ao -> a [ 0 ] )		338725	1					
ANR	338735	Callee	getreg		338725	0					
ANR	338736	Identifier	getreg		338725	0					
ANR	338737	ArgumentList	ao -> a [ 0 ]		338725	1					
ANR	338738	Argument	ao -> a [ 0 ]		338725	0					
ANR	338739	ArrayIndexing	ao -> a [ 0 ]		338725	0					
ANR	338740	PtrMemberAccess	ao -> a		338725	0					
ANR	338741	Identifier	ao		338725	0					
ANR	338742	Identifier	a		338725	1					
ANR	338743	PrimaryExpression	0		338725	1					
ANR	338744	IdentifierDeclStatement	ut8 rn = getreg ( ao -> a [ 1 ] ) ;	1223:1:24477:24503	338725	1	True				
ANR	338745	IdentifierDecl	rn = getreg ( ao -> a [ 1 ] )		338725	0					
ANR	338746	IdentifierDeclType	ut8		338725	0					
ANR	338747	Identifier	rn		338725	1					
ANR	338748	AssignmentExpression	rn = getreg ( ao -> a [ 1 ] )		338725	2		=			
ANR	338749	Identifier	rn		338725	0					
ANR	338750	CallExpression	getreg ( ao -> a [ 1 ] )		338725	1					
ANR	338751	Callee	getreg		338725	0					
ANR	338752	Identifier	getreg		338725	0					
ANR	338753	ArgumentList	ao -> a [ 1 ]		338725	1					
ANR	338754	Argument	ao -> a [ 1 ]		338725	0					
ANR	338755	ArrayIndexing	ao -> a [ 1 ]		338725	0					
ANR	338756	PtrMemberAccess	ao -> a		338725	0					
ANR	338757	Identifier	ao		338725	0					
ANR	338758	Identifier	a		338725	1					
ANR	338759	PrimaryExpression	1		338725	1					
ANR	338760	IfStatement	if ( ( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT ) )		338725	2					
ANR	338761	Condition	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )	1224:5:24510:24549	338725	0	True				
ANR	338762	OrExpression	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )		338725	0		||			
ANR	338763	RelationalExpression	rd > 15		338725	0		>			
ANR	338764	Identifier	rd		338725	0					
ANR	338765	PrimaryExpression	15		338725	1					
ANR	338766	OrExpression	( rn > 15 ) || ( m & DOTN_BIT )		338725	1		||			
ANR	338767	RelationalExpression	rn > 15		338725	0		>			
ANR	338768	Identifier	rn		338725	0					
ANR	338769	PrimaryExpression	15		338725	1					
ANR	338770	BitAndExpression	m & DOTN_BIT		338725	1		&			
ANR	338771	Identifier	m		338725	0					
ANR	338772	Identifier	DOTN_BIT		338725	1					
ANR	338773	CompoundStatement		4:47:106:106	338725	1					
ANR	338774	ReturnStatement	return - 1 ;	1225:2:24556:24565	338725	0	True				
ANR	338775	UnaryOperationExpression	- 1		338725	0					
ANR	338776	UnaryOperator	-		338725	0					
ANR	338777	PrimaryExpression	1		338725	1					
ANR	338778	IfStatement	if ( m & S_BIT )		338725	3					
ANR	338779	Condition	m & S_BIT	1227:5:24575:24583	338725	0	True				
ANR	338780	BitAndExpression	m & S_BIT		338725	0		&			
ANR	338781	Identifier	m		338725	0					
ANR	338782	Identifier	S_BIT		338725	1					
ANR	338783	CompoundStatement		7:16:140:140	338725	1					
ANR	338784	ExpressionStatement	ao -> o |= 1 << 28	1228:2:24590:24606	338725	0	True				
ANR	338785	AssignmentExpression	ao -> o |= 1 << 28		338725	0		|=			
ANR	338786	PtrMemberAccess	ao -> o		338725	0					
ANR	338787	Identifier	ao		338725	0					
ANR	338788	Identifier	o		338725	1					
ANR	338789	ShiftExpression	1 << 28		338725	1		<<			
ANR	338790	PrimaryExpression	1		338725	0					
ANR	338791	PrimaryExpression	28		338725	1					
ANR	338792	IfStatement	if ( shift )		338725	4					
ANR	338793	Condition	shift	1230:5:24616:24620	338725	0	True				
ANR	338794	Identifier	shift		338725	0					
ANR	338795	CompoundStatement		12:2:196:237	338725	1					
ANR	338796	ExpressionStatement	err = false	1231:2:24627:24638	338725	0	True				
ANR	338797	AssignmentExpression	err = false		338725	0		=			
ANR	338798	Identifier	err		338725	0					
ANR	338799	Identifier	false		338725	1					
ANR	338800	IdentifierDeclStatement	ut32 shiftnum = thumb_getshift ( ao -> a [ 2 ] ) ;	1232:2:24642:24683	338725	1	True				
ANR	338801	IdentifierDecl	shiftnum = thumb_getshift ( ao -> a [ 2 ] )		338725	0					
ANR	338802	IdentifierDeclType	ut32		338725	0					
ANR	338803	Identifier	shiftnum		338725	1					
ANR	338804	AssignmentExpression	shiftnum = thumb_getshift ( ao -> a [ 2 ] )		338725	2		=			
ANR	338805	Identifier	shiftnum		338725	0					
ANR	338806	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		338725	1					
ANR	338807	Callee	thumb_getshift		338725	0					
ANR	338808	Identifier	thumb_getshift		338725	0					
ANR	338809	ArgumentList	ao -> a [ 2 ]		338725	1					
ANR	338810	Argument	ao -> a [ 2 ]		338725	0					
ANR	338811	ArrayIndexing	ao -> a [ 2 ]		338725	0					
ANR	338812	PtrMemberAccess	ao -> a		338725	0					
ANR	338813	Identifier	ao		338725	0					
ANR	338814	Identifier	a		338725	1					
ANR	338815	PrimaryExpression	2		338725	1					
ANR	338816	IfStatement	if ( err )		338725	2					
ANR	338817	Condition	err	1233:6:24691:24693	338725	0	True				
ANR	338818	Identifier	err		338725	0					
ANR	338819	CompoundStatement		13:11:250:250	338725	1					
ANR	338820	ReturnStatement	return - 1 ;	1234:3:24701:24710	338725	0	True				
ANR	338821	UnaryOperationExpression	- 1		338725	0					
ANR	338822	UnaryOperator	-		338725	0					
ANR	338823	PrimaryExpression	1		338725	1					
ANR	338824	ExpressionStatement	ao -> o |= shiftnum	1236:2:24718:24735	338725	3	True				
ANR	338825	AssignmentExpression	ao -> o |= shiftnum		338725	0		|=			
ANR	338826	PtrMemberAccess	ao -> o		338725	0					
ANR	338827	Identifier	ao		338725	0					
ANR	338828	Identifier	o		338725	1					
ANR	338829	Identifier	shiftnum		338725	1					
ANR	338830	ExpressionStatement	ao -> o |= rd << 24	1237:2:24739:24756	338725	4	True				
ANR	338831	AssignmentExpression	ao -> o |= rd << 24		338725	0		|=			
ANR	338832	PtrMemberAccess	ao -> o		338725	0					
ANR	338833	Identifier	ao		338725	0					
ANR	338834	Identifier	o		338725	1					
ANR	338835	ShiftExpression	rd << 24		338725	1		<<			
ANR	338836	Identifier	rd		338725	0					
ANR	338837	PrimaryExpression	24		338725	1					
ANR	338838	ExpressionStatement	ao -> o |= rn << 8	1238:2:24760:24776	338725	5	True				
ANR	338839	AssignmentExpression	ao -> o |= rn << 8		338725	0		|=			
ANR	338840	PtrMemberAccess	ao -> o		338725	0					
ANR	338841	Identifier	ao		338725	0					
ANR	338842	Identifier	o		338725	1					
ANR	338843	ShiftExpression	rn << 8		338725	1		<<			
ANR	338844	Identifier	rn		338725	0					
ANR	338845	PrimaryExpression	8		338725	1					
ANR	338846	ElseStatement	else		338725	0					
ANR	338847	CompoundStatement		19:8:340:340	338725	0					
ANR	338848	ExpressionStatement	ao -> o |= rd	1240:2:24790:24801	338725	0	True				
ANR	338849	AssignmentExpression	ao -> o |= rd		338725	0		|=			
ANR	338850	PtrMemberAccess	ao -> o		338725	0					
ANR	338851	Identifier	ao		338725	0					
ANR	338852	Identifier	o		338725	1					
ANR	338853	Identifier	rd		338725	1					
ANR	338854	ExpressionStatement	ao -> o |= rn << 24	1241:2:24805:24822	338725	1	True				
ANR	338855	AssignmentExpression	ao -> o |= rn << 24		338725	0		|=			
ANR	338856	PtrMemberAccess	ao -> o		338725	0					
ANR	338857	Identifier	ao		338725	0					
ANR	338858	Identifier	o		338725	1					
ANR	338859	ShiftExpression	rn << 24		338725	1		<<			
ANR	338860	Identifier	rn		338725	0					
ANR	338861	PrimaryExpression	24		338725	1					
ANR	338862	ReturnStatement	return 4 ;	1243:1:24828:24836	338725	5	True				
ANR	338863	PrimaryExpression	4		338725	0					
ANR	338864	ReturnType	static st8		338725	1					
ANR	338865	Identifier	std_32bit_2reg		338725	2					
ANR	338866	ParameterList	"ArmOpcode * ao , ut64 m , bool shift"		338725	3					
ANR	338867	Parameter	ArmOpcode * ao	1221:26:24410:24422	338725	0	True				
ANR	338868	ParameterType	ArmOpcode *		338725	0					
ANR	338869	Identifier	ao		338725	1					
ANR	338870	Parameter	ut64 m	1221:41:24425:24430	338725	1	True				
ANR	338871	ParameterType	ut64		338725	0					
ANR	338872	Identifier	m		338725	1					
ANR	338873	Parameter	bool shift	1221:49:24433:24442	338725	2	True				
ANR	338874	ParameterType	bool		338725	0					
ANR	338875	Identifier	shift		338725	1					
ANR	338876	CFGEntryNode	ENTRY		338725		True				
ANR	338877	CFGExitNode	EXIT		338725		True				
ANR	338878	Symbol	err		338725						
ANR	338879	Symbol	thumb_getshift		338725						
ANR	338880	Symbol	shift		338725						
ANR	338881	Symbol	false		338725						
ANR	338882	Symbol	shiftnum		338725						
ANR	338883	Symbol	ao -> o		338725						
ANR	338884	Symbol	m		338725						
ANR	338885	Symbol	ao		338725						
ANR	338886	Symbol	* ao -> a		338725						
ANR	338887	Symbol	rd		338725						
ANR	338888	Symbol	getreg		338725						
ANR	338889	Symbol	* ao		338725						
ANR	338890	Symbol	* * ao		338725						
ANR	338891	Symbol	DOTN_BIT		338725						
ANR	338892	Symbol	ao -> a		338725						
ANR	338893	Symbol	rn		338725						
ANR	338894	Symbol	S_BIT		338725						
ANR	338895	Function	mem_32bit_2reg	1246:0:24841:25073							
ANR	338896	FunctionDef	"mem_32bit_2reg (ArmOpcode * ao , ut64 m)"		338895	0					
ANR	338897	CompoundStatement		1246:49:24890:25073	338895	0					
ANR	338898	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1247:1:24893:24919	338895	0	True				
ANR	338899	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		338895	0					
ANR	338900	IdentifierDeclType	ut8		338895	0					
ANR	338901	Identifier	rd		338895	1					
ANR	338902	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		338895	2		=			
ANR	338903	Identifier	rd		338895	0					
ANR	338904	CallExpression	getreg ( ao -> a [ 0 ] )		338895	1					
ANR	338905	Callee	getreg		338895	0					
ANR	338906	Identifier	getreg		338895	0					
ANR	338907	ArgumentList	ao -> a [ 0 ]		338895	1					
ANR	338908	Argument	ao -> a [ 0 ]		338895	0					
ANR	338909	ArrayIndexing	ao -> a [ 0 ]		338895	0					
ANR	338910	PtrMemberAccess	ao -> a		338895	0					
ANR	338911	Identifier	ao		338895	0					
ANR	338912	Identifier	a		338895	1					
ANR	338913	PrimaryExpression	0		338895	1					
ANR	338914	IdentifierDeclStatement	ut8 rn = getregmemstart ( ao -> a [ 1 ] ) ;	1248:1:24922:24956	338895	1	True				
ANR	338915	IdentifierDecl	rn = getregmemstart ( ao -> a [ 1 ] )		338895	0					
ANR	338916	IdentifierDeclType	ut8		338895	0					
ANR	338917	Identifier	rn		338895	1					
ANR	338918	AssignmentExpression	rn = getregmemstart ( ao -> a [ 1 ] )		338895	2		=			
ANR	338919	Identifier	rn		338895	0					
ANR	338920	CallExpression	getregmemstart ( ao -> a [ 1 ] )		338895	1					
ANR	338921	Callee	getregmemstart		338895	0					
ANR	338922	Identifier	getregmemstart		338895	0					
ANR	338923	ArgumentList	ao -> a [ 1 ]		338895	1					
ANR	338924	Argument	ao -> a [ 1 ]		338895	0					
ANR	338925	ArrayIndexing	ao -> a [ 1 ]		338895	0					
ANR	338926	PtrMemberAccess	ao -> a		338895	0					
ANR	338927	Identifier	ao		338895	0					
ANR	338928	Identifier	a		338895	1					
ANR	338929	PrimaryExpression	1		338895	1					
ANR	338930	IfStatement	if ( ( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT ) )		338895	2					
ANR	338931	Condition	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )	1249:5:24963:25002	338895	0	True				
ANR	338932	OrExpression	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )		338895	0		||			
ANR	338933	RelationalExpression	rd > 15		338895	0		>			
ANR	338934	Identifier	rd		338895	0					
ANR	338935	PrimaryExpression	15		338895	1					
ANR	338936	OrExpression	( rn > 15 ) || ( m & DOTN_BIT )		338895	1		||			
ANR	338937	RelationalExpression	rn > 15		338895	0		>			
ANR	338938	Identifier	rn		338895	0					
ANR	338939	PrimaryExpression	15		338895	1					
ANR	338940	BitAndExpression	m & DOTN_BIT		338895	1		&			
ANR	338941	Identifier	m		338895	0					
ANR	338942	Identifier	DOTN_BIT		338895	1					
ANR	338943	CompoundStatement		4:47:114:114	338895	1					
ANR	338944	ReturnStatement	return - 1 ;	1250:2:25009:25018	338895	0	True				
ANR	338945	UnaryOperationExpression	- 1		338895	0					
ANR	338946	UnaryOperator	-		338895	0					
ANR	338947	PrimaryExpression	1		338895	1					
ANR	338948	ExpressionStatement	ao -> o |= rd << 4	1252:1:25024:25040	338895	3	True				
ANR	338949	AssignmentExpression	ao -> o |= rd << 4		338895	0		|=			
ANR	338950	PtrMemberAccess	ao -> o		338895	0					
ANR	338951	Identifier	ao		338895	0					
ANR	338952	Identifier	o		338895	1					
ANR	338953	ShiftExpression	rd << 4		338895	1		<<			
ANR	338954	Identifier	rd		338895	0					
ANR	338955	PrimaryExpression	4		338895	1					
ANR	338956	ExpressionStatement	ao -> o |= rn << 24	1253:1:25043:25060	338895	4	True				
ANR	338957	AssignmentExpression	ao -> o |= rn << 24		338895	0		|=			
ANR	338958	PtrMemberAccess	ao -> o		338895	0					
ANR	338959	Identifier	ao		338895	0					
ANR	338960	Identifier	o		338895	1					
ANR	338961	ShiftExpression	rn << 24		338895	1		<<			
ANR	338962	Identifier	rn		338895	0					
ANR	338963	PrimaryExpression	24		338895	1					
ANR	338964	ReturnStatement	return 4 ;	1254:1:25063:25071	338895	5	True				
ANR	338965	PrimaryExpression	4		338895	0					
ANR	338966	ReturnType	static st8		338895	1					
ANR	338967	Identifier	mem_32bit_2reg		338895	2					
ANR	338968	ParameterList	"ArmOpcode * ao , ut64 m"		338895	3					
ANR	338969	Parameter	ArmOpcode * ao	1246:26:24867:24879	338895	0	True				
ANR	338970	ParameterType	ArmOpcode *		338895	0					
ANR	338971	Identifier	ao		338895	1					
ANR	338972	Parameter	ut64 m	1246:41:24882:24887	338895	1	True				
ANR	338973	ParameterType	ut64		338895	0					
ANR	338974	Identifier	m		338895	1					
ANR	338975	CFGEntryNode	ENTRY		338895		True				
ANR	338976	CFGExitNode	EXIT		338895		True				
ANR	338977	Symbol	* ao -> a		338895						
ANR	338978	Symbol	rd		338895						
ANR	338979	Symbol	getreg		338895						
ANR	338980	Symbol	* ao		338895						
ANR	338981	Symbol	* * ao		338895						
ANR	338982	Symbol	DOTN_BIT		338895						
ANR	338983	Symbol	ao -> a		338895						
ANR	338984	Symbol	rn		338895						
ANR	338985	Symbol	ao -> o		338895						
ANR	338986	Symbol	m		338895						
ANR	338987	Symbol	getregmemstart		338895						
ANR	338988	Symbol	ao		338895						
ANR	338989	Function	std_32bit_3reg	1257:0:25076:25538							
ANR	338990	FunctionDef	"std_32bit_3reg (ArmOpcode * ao , ut64 m , bool shift)"		338989	0					
ANR	338991	CompoundStatement		1257:61:25137:25538	338989	0					
ANR	338992	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1258:1:25140:25166	338989	0	True				
ANR	338993	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		338989	0					
ANR	338994	IdentifierDeclType	ut8		338989	0					
ANR	338995	Identifier	rd		338989	1					
ANR	338996	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		338989	2		=			
ANR	338997	Identifier	rd		338989	0					
ANR	338998	CallExpression	getreg ( ao -> a [ 0 ] )		338989	1					
ANR	338999	Callee	getreg		338989	0					
ANR	339000	Identifier	getreg		338989	0					
ANR	339001	ArgumentList	ao -> a [ 0 ]		338989	1					
ANR	339002	Argument	ao -> a [ 0 ]		338989	0					
ANR	339003	ArrayIndexing	ao -> a [ 0 ]		338989	0					
ANR	339004	PtrMemberAccess	ao -> a		338989	0					
ANR	339005	Identifier	ao		338989	0					
ANR	339006	Identifier	a		338989	1					
ANR	339007	PrimaryExpression	0		338989	1					
ANR	339008	IdentifierDeclStatement	ut8 rn = getreg ( ao -> a [ 1 ] ) ;	1259:1:25169:25195	338989	1	True				
ANR	339009	IdentifierDecl	rn = getreg ( ao -> a [ 1 ] )		338989	0					
ANR	339010	IdentifierDeclType	ut8		338989	0					
ANR	339011	Identifier	rn		338989	1					
ANR	339012	AssignmentExpression	rn = getreg ( ao -> a [ 1 ] )		338989	2		=			
ANR	339013	Identifier	rn		338989	0					
ANR	339014	CallExpression	getreg ( ao -> a [ 1 ] )		338989	1					
ANR	339015	Callee	getreg		338989	0					
ANR	339016	Identifier	getreg		338989	0					
ANR	339017	ArgumentList	ao -> a [ 1 ]		338989	1					
ANR	339018	Argument	ao -> a [ 1 ]		338989	0					
ANR	339019	ArrayIndexing	ao -> a [ 1 ]		338989	0					
ANR	339020	PtrMemberAccess	ao -> a		338989	0					
ANR	339021	Identifier	ao		338989	0					
ANR	339022	Identifier	a		338989	1					
ANR	339023	PrimaryExpression	1		338989	1					
ANR	339024	IdentifierDeclStatement	ut8 rm = getreg ( ao -> a [ 2 ] ) ;	1260:1:25198:25224	338989	2	True				
ANR	339025	IdentifierDecl	rm = getreg ( ao -> a [ 2 ] )		338989	0					
ANR	339026	IdentifierDeclType	ut8		338989	0					
ANR	339027	Identifier	rm		338989	1					
ANR	339028	AssignmentExpression	rm = getreg ( ao -> a [ 2 ] )		338989	2		=			
ANR	339029	Identifier	rm		338989	0					
ANR	339030	CallExpression	getreg ( ao -> a [ 2 ] )		338989	1					
ANR	339031	Callee	getreg		338989	0					
ANR	339032	Identifier	getreg		338989	0					
ANR	339033	ArgumentList	ao -> a [ 2 ]		338989	1					
ANR	339034	Argument	ao -> a [ 2 ]		338989	0					
ANR	339035	ArrayIndexing	ao -> a [ 2 ]		338989	0					
ANR	339036	PtrMemberAccess	ao -> a		338989	0					
ANR	339037	Identifier	ao		338989	0					
ANR	339038	Identifier	a		338989	1					
ANR	339039	PrimaryExpression	2		338989	1					
ANR	339040	IfStatement	if ( ( rd > 15 ) || ( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT ) )		338989	3					
ANR	339041	Condition	( rd > 15 ) || ( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT )	1261:5:25231:25283	338989	0	True				
ANR	339042	OrExpression	( rd > 15 ) || ( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT )		338989	0		||			
ANR	339043	RelationalExpression	rd > 15		338989	0		>			
ANR	339044	Identifier	rd		338989	0					
ANR	339045	PrimaryExpression	15		338989	1					
ANR	339046	OrExpression	( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT )		338989	1		||			
ANR	339047	RelationalExpression	rn > 15		338989	0		>			
ANR	339048	Identifier	rn		338989	0					
ANR	339049	PrimaryExpression	15		338989	1					
ANR	339050	OrExpression	( rm > 15 ) || ( m & DOTN_BIT )		338989	1		||			
ANR	339051	RelationalExpression	rm > 15		338989	0		>			
ANR	339052	Identifier	rm		338989	0					
ANR	339053	PrimaryExpression	15		338989	1					
ANR	339054	BitAndExpression	m & DOTN_BIT		338989	1		&			
ANR	339055	Identifier	m		338989	0					
ANR	339056	Identifier	DOTN_BIT		338989	1					
ANR	339057	CompoundStatement		5:60:148:148	338989	1					
ANR	339058	ReturnStatement	return - 1 ;	1262:2:25290:25299	338989	0	True				
ANR	339059	UnaryOperationExpression	- 1		338989	0					
ANR	339060	UnaryOperator	-		338989	0					
ANR	339061	PrimaryExpression	1		338989	1					
ANR	339062	ExpressionStatement	ao -> o |= rd	1264:1:25305:25316	338989	4	True				
ANR	339063	AssignmentExpression	ao -> o |= rd		338989	0		|=			
ANR	339064	PtrMemberAccess	ao -> o		338989	0					
ANR	339065	Identifier	ao		338989	0					
ANR	339066	Identifier	o		338989	1					
ANR	339067	Identifier	rd		338989	1					
ANR	339068	ExpressionStatement	ao -> o |= rn << 24	1265:1:25319:25336	338989	5	True				
ANR	339069	AssignmentExpression	ao -> o |= rn << 24		338989	0		|=			
ANR	339070	PtrMemberAccess	ao -> o		338989	0					
ANR	339071	Identifier	ao		338989	0					
ANR	339072	Identifier	o		338989	1					
ANR	339073	ShiftExpression	rn << 24		338989	1		<<			
ANR	339074	Identifier	rn		338989	0					
ANR	339075	PrimaryExpression	24		338989	1					
ANR	339076	ExpressionStatement	ao -> o |= rm << 8	1266:1:25339:25355	338989	6	True				
ANR	339077	AssignmentExpression	ao -> o |= rm << 8		338989	0		|=			
ANR	339078	PtrMemberAccess	ao -> o		338989	0					
ANR	339079	Identifier	ao		338989	0					
ANR	339080	Identifier	o		338989	1					
ANR	339081	ShiftExpression	rm << 8		338989	1		<<			
ANR	339082	Identifier	rm		338989	0					
ANR	339083	PrimaryExpression	8		338989	1					
ANR	339084	IfStatement	if ( shift )		338989	7					
ANR	339085	Condition	shift	1267:5:25362:25366	338989	0	True				
ANR	339086	Identifier	shift		338989	0					
ANR	339087	CompoundStatement		13:2:250:291	338989	1					
ANR	339088	ExpressionStatement	err = false	1268:2:25373:25384	338989	0	True				
ANR	339089	AssignmentExpression	err = false		338989	0		=			
ANR	339090	Identifier	err		338989	0					
ANR	339091	Identifier	false		338989	1					
ANR	339092	IdentifierDeclStatement	ut32 shiftnum = thumb_getshift ( ao -> a [ 3 ] ) ;	1269:2:25388:25429	338989	1	True				
ANR	339093	IdentifierDecl	shiftnum = thumb_getshift ( ao -> a [ 3 ] )		338989	0					
ANR	339094	IdentifierDeclType	ut32		338989	0					
ANR	339095	Identifier	shiftnum		338989	1					
ANR	339096	AssignmentExpression	shiftnum = thumb_getshift ( ao -> a [ 3 ] )		338989	2		=			
ANR	339097	Identifier	shiftnum		338989	0					
ANR	339098	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		338989	1					
ANR	339099	Callee	thumb_getshift		338989	0					
ANR	339100	Identifier	thumb_getshift		338989	0					
ANR	339101	ArgumentList	ao -> a [ 3 ]		338989	1					
ANR	339102	Argument	ao -> a [ 3 ]		338989	0					
ANR	339103	ArrayIndexing	ao -> a [ 3 ]		338989	0					
ANR	339104	PtrMemberAccess	ao -> a		338989	0					
ANR	339105	Identifier	ao		338989	0					
ANR	339106	Identifier	a		338989	1					
ANR	339107	PrimaryExpression	3		338989	1					
ANR	339108	IfStatement	if ( err )		338989	2					
ANR	339109	Condition	err	1270:6:25437:25439	338989	0	True				
ANR	339110	Identifier	err		338989	0					
ANR	339111	CompoundStatement		14:11:304:304	338989	1					
ANR	339112	ReturnStatement	return - 1 ;	1271:3:25447:25456	338989	0	True				
ANR	339113	UnaryOperationExpression	- 1		338989	0					
ANR	339114	UnaryOperator	-		338989	0					
ANR	339115	PrimaryExpression	1		338989	1					
ANR	339116	ExpressionStatement	ao -> o |= shiftnum	1273:2:25464:25481	338989	3	True				
ANR	339117	AssignmentExpression	ao -> o |= shiftnum		338989	0		|=			
ANR	339118	PtrMemberAccess	ao -> o		338989	0					
ANR	339119	Identifier	ao		338989	0					
ANR	339120	Identifier	o		338989	1					
ANR	339121	Identifier	shiftnum		338989	1					
ANR	339122	IfStatement	if ( m & S_BIT )		338989	8					
ANR	339123	Condition	m & S_BIT	1275:5:25491:25499	338989	0	True				
ANR	339124	BitAndExpression	m & S_BIT		338989	0		&			
ANR	339125	Identifier	m		338989	0					
ANR	339126	Identifier	S_BIT		338989	1					
ANR	339127	CompoundStatement		19:16:364:364	338989	1					
ANR	339128	ExpressionStatement	ao -> o |= 1 << 28	1276:2:25506:25522	338989	0	True				
ANR	339129	AssignmentExpression	ao -> o |= 1 << 28		338989	0		|=			
ANR	339130	PtrMemberAccess	ao -> o		338989	0					
ANR	339131	Identifier	ao		338989	0					
ANR	339132	Identifier	o		338989	1					
ANR	339133	ShiftExpression	1 << 28		338989	1		<<			
ANR	339134	PrimaryExpression	1		338989	0					
ANR	339135	PrimaryExpression	28		338989	1					
ANR	339136	ReturnStatement	return 4 ;	1278:1:25528:25536	338989	9	True				
ANR	339137	PrimaryExpression	4		338989	0					
ANR	339138	ReturnType	static st8		338989	1					
ANR	339139	Identifier	std_32bit_3reg		338989	2					
ANR	339140	ParameterList	"ArmOpcode * ao , ut64 m , bool shift"		338989	3					
ANR	339141	Parameter	ArmOpcode * ao	1257:26:25102:25114	338989	0	True				
ANR	339142	ParameterType	ArmOpcode *		338989	0					
ANR	339143	Identifier	ao		338989	1					
ANR	339144	Parameter	ut64 m	1257:41:25117:25122	338989	1	True				
ANR	339145	ParameterType	ut64		338989	0					
ANR	339146	Identifier	m		338989	1					
ANR	339147	Parameter	bool shift	1257:49:25125:25134	338989	2	True				
ANR	339148	ParameterType	bool		338989	0					
ANR	339149	Identifier	shift		338989	1					
ANR	339150	CFGEntryNode	ENTRY		338989		True				
ANR	339151	CFGExitNode	EXIT		338989		True				
ANR	339152	Symbol	err		338989						
ANR	339153	Symbol	thumb_getshift		338989						
ANR	339154	Symbol	shift		338989						
ANR	339155	Symbol	false		338989						
ANR	339156	Symbol	shiftnum		338989						
ANR	339157	Symbol	ao -> o		338989						
ANR	339158	Symbol	m		338989						
ANR	339159	Symbol	ao		338989						
ANR	339160	Symbol	* ao -> a		338989						
ANR	339161	Symbol	rd		338989						
ANR	339162	Symbol	getreg		338989						
ANR	339163	Symbol	* ao		338989						
ANR	339164	Symbol	* * ao		338989						
ANR	339165	Symbol	DOTN_BIT		338989						
ANR	339166	Symbol	ao -> a		338989						
ANR	339167	Symbol	rm		338989						
ANR	339168	Symbol	rn		338989						
ANR	339169	Symbol	S_BIT		338989						
ANR	339170	Function	std_opt_2	1281:0:25541:25624							
ANR	339171	FunctionDef	std_opt_2 (ArmOpcode * ao)		339170	0					
ANR	339172	CompoundStatement		1281:37:25578:25624	339170	0					
ANR	339173	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	1282:1:25581:25600	339170	0	True				
ANR	339174	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		339170	0		=			
ANR	339175	ArrayIndexing	ao -> a [ 2 ]		339170	0					
ANR	339176	PtrMemberAccess	ao -> a		339170	0					
ANR	339177	Identifier	ao		339170	0					
ANR	339178	Identifier	a		339170	1					
ANR	339179	PrimaryExpression	2		339170	1					
ANR	339180	ArrayIndexing	ao -> a [ 1 ]		339170	1					
ANR	339181	PtrMemberAccess	ao -> a		339170	0					
ANR	339182	Identifier	ao		339170	0					
ANR	339183	Identifier	a		339170	1					
ANR	339184	PrimaryExpression	1		339170	1					
ANR	339185	ExpressionStatement	ao -> a [ 1 ] = ao -> a [ 0 ]	1283:1:25603:25622	339170	1	True				
ANR	339186	AssignmentExpression	ao -> a [ 1 ] = ao -> a [ 0 ]		339170	0		=			
ANR	339187	ArrayIndexing	ao -> a [ 1 ]		339170	0					
ANR	339188	PtrMemberAccess	ao -> a		339170	0					
ANR	339189	Identifier	ao		339170	0					
ANR	339190	Identifier	a		339170	1					
ANR	339191	PrimaryExpression	1		339170	1					
ANR	339192	ArrayIndexing	ao -> a [ 0 ]		339170	1					
ANR	339193	PtrMemberAccess	ao -> a		339170	0					
ANR	339194	Identifier	ao		339170	0					
ANR	339195	Identifier	a		339170	1					
ANR	339196	PrimaryExpression	0		339170	1					
ANR	339197	ReturnType	static void		339170	1					
ANR	339198	Identifier	std_opt_2		339170	2					
ANR	339199	ParameterList	ArmOpcode * ao		339170	3					
ANR	339200	Parameter	ArmOpcode * ao	1281:22:25563:25575	339170	0	True				
ANR	339201	ParameterType	ArmOpcode *		339170	0					
ANR	339202	Identifier	ao		339170	1					
ANR	339203	CFGEntryNode	ENTRY		339170		True				
ANR	339204	CFGExitNode	EXIT		339170		True				
ANR	339205	Symbol	* ao -> a		339170						
ANR	339206	Symbol	* ao		339170						
ANR	339207	Symbol	* * ao		339170						
ANR	339208	Symbol	ao -> a		339170						
ANR	339209	Symbol	ao		339170						
ANR	339210	Function	std_opt_3	1286:0:25627:25732							
ANR	339211	FunctionDef	std_opt_3 (ArmOpcode * ao)		339210	0					
ANR	339212	CompoundStatement		1286:37:25664:25732	339210	0					
ANR	339213	ExpressionStatement	ao -> a [ 3 ] = ao -> a [ 2 ]	1287:1:25667:25686	339210	0	True				
ANR	339214	AssignmentExpression	ao -> a [ 3 ] = ao -> a [ 2 ]		339210	0		=			
ANR	339215	ArrayIndexing	ao -> a [ 3 ]		339210	0					
ANR	339216	PtrMemberAccess	ao -> a		339210	0					
ANR	339217	Identifier	ao		339210	0					
ANR	339218	Identifier	a		339210	1					
ANR	339219	PrimaryExpression	3		339210	1					
ANR	339220	ArrayIndexing	ao -> a [ 2 ]		339210	1					
ANR	339221	PtrMemberAccess	ao -> a		339210	0					
ANR	339222	Identifier	ao		339210	0					
ANR	339223	Identifier	a		339210	1					
ANR	339224	PrimaryExpression	2		339210	1					
ANR	339225	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	1288:1:25689:25708	339210	1	True				
ANR	339226	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		339210	0		=			
ANR	339227	ArrayIndexing	ao -> a [ 2 ]		339210	0					
ANR	339228	PtrMemberAccess	ao -> a		339210	0					
ANR	339229	Identifier	ao		339210	0					
ANR	339230	Identifier	a		339210	1					
ANR	339231	PrimaryExpression	2		339210	1					
ANR	339232	ArrayIndexing	ao -> a [ 1 ]		339210	1					
ANR	339233	PtrMemberAccess	ao -> a		339210	0					
ANR	339234	Identifier	ao		339210	0					
ANR	339235	Identifier	a		339210	1					
ANR	339236	PrimaryExpression	1		339210	1					
ANR	339237	ExpressionStatement	ao -> a [ 1 ] = ao -> a [ 0 ]	1289:1:25711:25730	339210	2	True				
ANR	339238	AssignmentExpression	ao -> a [ 1 ] = ao -> a [ 0 ]		339210	0		=			
ANR	339239	ArrayIndexing	ao -> a [ 1 ]		339210	0					
ANR	339240	PtrMemberAccess	ao -> a		339210	0					
ANR	339241	Identifier	ao		339210	0					
ANR	339242	Identifier	a		339210	1					
ANR	339243	PrimaryExpression	1		339210	1					
ANR	339244	ArrayIndexing	ao -> a [ 0 ]		339210	1					
ANR	339245	PtrMemberAccess	ao -> a		339210	0					
ANR	339246	Identifier	ao		339210	0					
ANR	339247	Identifier	a		339210	1					
ANR	339248	PrimaryExpression	0		339210	1					
ANR	339249	ReturnType	static void		339210	1					
ANR	339250	Identifier	std_opt_3		339210	2					
ANR	339251	ParameterList	ArmOpcode * ao		339210	3					
ANR	339252	Parameter	ArmOpcode * ao	1286:22:25649:25661	339210	0	True				
ANR	339253	ParameterType	ArmOpcode *		339210	0					
ANR	339254	Identifier	ao		339210	1					
ANR	339255	CFGEntryNode	ENTRY		339210		True				
ANR	339256	CFGExitNode	EXIT		339210		True				
ANR	339257	Symbol	* ao -> a		339210						
ANR	339258	Symbol	* ao		339210						
ANR	339259	Symbol	* * ao		339210						
ANR	339260	Symbol	ao -> a		339210						
ANR	339261	Symbol	ao		339210						
ANR	339262	Function	thumb_assemble	1293:0:25790:128268							
ANR	339263	FunctionDef	"thumb_assemble (ArmOpcode * ao , ut64 off , const char * str)"		339262	0					
ANR	339264	CompoundStatement		1293:68:25858:128268	339262	0					
ANR	339265	IdentifierDeclStatement	ut64 m ;	1294:1:25861:25867	339262	0	True				
ANR	339266	IdentifierDecl	m		339262	0					
ANR	339267	IdentifierDeclType	ut64		339262	0					
ANR	339268	Identifier	m		339262	1					
ANR	339269	ExpressionStatement	ao -> o = UT32_MAX	1295:1:25870:25886	339262	1	True				
ANR	339270	AssignmentExpression	ao -> o = UT32_MAX		339262	0		=			
ANR	339271	PtrMemberAccess	ao -> o		339262	0					
ANR	339272	Identifier	ao		339262	0					
ANR	339273	Identifier	o		339262	1					
ANR	339274	Identifier	UT32_MAX		339262	1					
ANR	339275	IfStatement	"if ( ! strcmpnull ( ao -> op , ""udf"" ) )"		339262	2					
ANR	339276	Condition	"! strcmpnull ( ao -> op , ""udf"" )"	1296:5:25893:25919	339262	0	True				
ANR	339277	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""udf"" )"		339262	0					
ANR	339278	UnaryOperator	!		339262	0					
ANR	339279	CallExpression	"strcmpnull ( ao -> op , ""udf"" )"		339262	1					
ANR	339280	Callee	strcmpnull		339262	0					
ANR	339281	Identifier	strcmpnull		339262	0					
ANR	339282	ArgumentList	ao -> op		339262	1					
ANR	339283	Argument	ao -> op		339262	0					
ANR	339284	PtrMemberAccess	ao -> op		339262	0					
ANR	339285	Identifier	ao		339262	0					
ANR	339286	Identifier	op		339262	1					
ANR	339287	Argument	"""udf"""		339262	1					
ANR	339288	PrimaryExpression	"""udf"""		339262	0					
ANR	339289	CompoundStatement		4:34:63:63	339262	1					
ANR	339290	ExpressionStatement	ao -> o = 0xde	1297:2:25926:25938	339262	0	True				
ANR	339291	AssignmentExpression	ao -> o = 0xde		339262	0		=			
ANR	339292	PtrMemberAccess	ao -> o		339262	0					
ANR	339293	Identifier	ao		339262	0					
ANR	339294	Identifier	o		339262	1					
ANR	339295	PrimaryExpression	0xde		339262	1					
ANR	339296	ExpressionStatement	ao -> o |= getnum ( ao -> a [ 0 ] ) << 8	1298:2:25942:25973	339262	1	True				
ANR	339297	AssignmentExpression	ao -> o |= getnum ( ao -> a [ 0 ] ) << 8		339262	0		|=			
ANR	339298	PtrMemberAccess	ao -> o		339262	0					
ANR	339299	Identifier	ao		339262	0					
ANR	339300	Identifier	o		339262	1					
ANR	339301	ShiftExpression	getnum ( ao -> a [ 0 ] ) << 8		339262	1		<<			
ANR	339302	CallExpression	getnum ( ao -> a [ 0 ] )		339262	0					
ANR	339303	Callee	getnum		339262	0					
ANR	339304	Identifier	getnum		339262	0					
ANR	339305	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	339306	Argument	ao -> a [ 0 ]		339262	0					
ANR	339307	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	339308	PtrMemberAccess	ao -> a		339262	0					
ANR	339309	Identifier	ao		339262	0					
ANR	339310	Identifier	a		339262	1					
ANR	339311	PrimaryExpression	0		339262	1					
ANR	339312	PrimaryExpression	8		339262	1					
ANR	339313	ReturnStatement	return 2 ;	1299:2:25977:25985	339262	2	True				
ANR	339314	PrimaryExpression	2		339262	0					
ANR	339315	ElseStatement	else		339262	0					
ANR	339316	IfStatement	"if ( ( m = opmask ( ao -> op , ""add"" , S_BIT | W_BIT ) ) )"		339262	0					
ANR	339317	Condition	"m = opmask ( ao -> op , ""add"" , S_BIT | W_BIT )"	1301:5:26000:26042	339262	0	True				
ANR	339318	AssignmentExpression	"m = opmask ( ao -> op , ""add"" , S_BIT | W_BIT )"		339262	0		=			
ANR	339319	Identifier	m		339262	0					
ANR	339320	CallExpression	"opmask ( ao -> op , ""add"" , S_BIT | W_BIT )"		339262	1					
ANR	339321	Callee	opmask		339262	0					
ANR	339322	Identifier	opmask		339262	0					
ANR	339323	ArgumentList	ao -> op		339262	1					
ANR	339324	Argument	ao -> op		339262	0					
ANR	339325	PtrMemberAccess	ao -> op		339262	0					
ANR	339326	Identifier	ao		339262	0					
ANR	339327	Identifier	op		339262	1					
ANR	339328	Argument	"""add"""		339262	1					
ANR	339329	PrimaryExpression	"""add"""		339262	0					
ANR	339330	Argument	S_BIT | W_BIT		339262	2					
ANR	339331	InclusiveOrExpression	S_BIT | W_BIT		339262	0		|			
ANR	339332	Identifier	S_BIT		339262	0					
ANR	339333	Identifier	W_BIT		339262	1					
ANR	339334	CompoundStatement		10:2:190:224	339262	1					
ANR	339335	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1302:2:26049:26083	339262	0	True				
ANR	339336	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	339337	IdentifierDeclType	ut64		339262	0					
ANR	339338	Identifier	argt		339262	1					
ANR	339339	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	339340	Identifier	argt		339262	0					
ANR	339341	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	339342	Callee	thumb_selector		339262	0					
ANR	339343	Identifier	thumb_selector		339262	0					
ANR	339344	ArgumentList	ao -> a		339262	1					
ANR	339345	Argument	ao -> a		339262	0					
ANR	339346	PtrMemberAccess	ao -> a		339262	0					
ANR	339347	Identifier	ao		339262	0					
ANR	339348	Identifier	a		339262	1					
ANR	339349	SwitchStatement	switch ( argt )		339262	1					
ANR	339350	Condition	argt	1303:10:26095:26098	339262	0	True				
ANR	339351	Identifier	argt		339262	0					
ANR	339352	CompoundStatement		11:16:242:242	339262	1					
ANR	339353	Label	case THUMB_REG_CONST :	1304:2:26105:26125	339262	0	True				
ANR	339354	Identifier	THUMB_REG_CONST		339262	0					
ANR	339355	CompoundStatement		12:24:268:268	339262	1					
ANR	339356	ExpressionStatement	std_opt_2 ( ao )	1305:3:26132:26146	339262	0	True				
ANR	339357	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	339358	Callee	std_opt_2		339262	0					
ANR	339359	Identifier	std_opt_2		339262	0					
ANR	339360	ArgumentList	ao		339262	1					
ANR	339361	Argument	ao		339262	0					
ANR	339362	Identifier	ao		339262	0					
ANR	339363	Label	case THUMB_REG_REG_CONST :	1308:2:26192:26216	339262	2	True				
ANR	339364	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	339365	CompoundStatement		78:3:1592:1628	339262	3					
ANR	339366	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1309:3:26223:26251	339262	0	True				
ANR	339367	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	339368	IdentifierDeclType	ut8		339262	0					
ANR	339369	Identifier	reg1		339262	1					
ANR	339370	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	339371	Identifier	reg1		339262	0					
ANR	339372	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	339373	Callee	getreg		339262	0					
ANR	339374	Identifier	getreg		339262	0					
ANR	339375	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	339376	Argument	ao -> a [ 0 ]		339262	0					
ANR	339377	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	339378	PtrMemberAccess	ao -> a		339262	0					
ANR	339379	Identifier	ao		339262	0					
ANR	339380	Identifier	a		339262	1					
ANR	339381	PrimaryExpression	0		339262	1					
ANR	339382	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1310:3:26256:26284	339262	1	True				
ANR	339383	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	339384	IdentifierDeclType	ut8		339262	0					
ANR	339385	Identifier	reg2		339262	1					
ANR	339386	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	339387	Identifier	reg2		339262	0					
ANR	339388	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	339389	Callee	getreg		339262	0					
ANR	339390	Identifier	getreg		339262	0					
ANR	339391	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	339392	Argument	ao -> a [ 1 ]		339262	0					
ANR	339393	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	339394	PtrMemberAccess	ao -> a		339262	0					
ANR	339395	Identifier	ao		339262	0					
ANR	339396	Identifier	a		339262	1					
ANR	339397	PrimaryExpression	1		339262	1					
ANR	339398	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	1311:3:26289:26317	339262	2	True				
ANR	339399	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	339400	IdentifierDeclType	ut32		339262	0					
ANR	339401	Identifier	num		339262	1					
ANR	339402	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	339403	Identifier	num		339262	0					
ANR	339404	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	339405	Callee	getnum		339262	0					
ANR	339406	Identifier	getnum		339262	0					
ANR	339407	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	339408	Argument	ao -> a [ 2 ]		339262	0					
ANR	339409	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	339410	PtrMemberAccess	ao -> a		339262	0					
ANR	339411	Identifier	ao		339262	0					
ANR	339412	Identifier	a		339262	1					
ANR	339413	PrimaryExpression	2		339262	1					
ANR	339414	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		339262	3					
ANR	339415	Condition	( reg1 > 15 ) || ( reg2 > 15 )	1313:7:26327:26352	339262	0	True				
ANR	339416	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	339417	RelationalExpression	reg1 > 15		339262	0		>			
ANR	339418	Identifier	reg1		339262	0					
ANR	339419	PrimaryExpression	15		339262	1					
ANR	339420	RelationalExpression	reg2 > 15		339262	1		>			
ANR	339421	Identifier	reg2		339262	0					
ANR	339422	PrimaryExpression	15		339262	1					
ANR	339423	CompoundStatement		21:35:496:496	339262	1					
ANR	339424	ReturnStatement	return - 1 ;	1314:4:26361:26370	339262	0	True				
ANR	339425	UnaryOperationExpression	- 1		339262	0					
ANR	339426	UnaryOperator	-		339262	0					
ANR	339427	PrimaryExpression	1		339262	1					
ANR	339428	IfStatement	if ( reg2 == 13 )		339262	4					
ANR	339429	Condition	reg2 == 13	1317:7:26388:26397	339262	0	True				
ANR	339430	EqualityExpression	reg2 == 13		339262	0		==			
ANR	339431	Identifier	reg2		339262	0					
ANR	339432	PrimaryExpression	13		339262	1					
ANR	339433	CompoundStatement		40:4:923:959	339262	1					
ANR	339434	IfStatement	if ( ( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) )		339262	0					
ANR	339435	Condition	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )	1318:8:26410:26492	339262	0	True				
ANR	339436	AndExpression	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	0		&&			
ANR	339437	RelationalExpression	reg1 < 8		339262	0		<			
ANR	339438	Identifier	reg1		339262	0					
ANR	339439	PrimaryExpression	8		339262	1					
ANR	339440	AndExpression	( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	1		&&			
ANR	339441	RelationalExpression	num < 1024		339262	0		<			
ANR	339442	Identifier	num		339262	0					
ANR	339443	PrimaryExpression	1024		339262	1					
ANR	339444	AndExpression	( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	1		&&			
ANR	339445	EqualityExpression	num % 4 == 0		339262	0		==			
ANR	339446	MultiplicativeExpression	num % 4		339262	0		%			
ANR	339447	Identifier	num		339262	0					
ANR	339448	PrimaryExpression	4		339262	1					
ANR	339449	PrimaryExpression	0		339262	1					
ANR	339450	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	1		&&			
ANR	339451	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	339452	UnaryOperator	!		339262	0					
ANR	339453	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	339454	Identifier	m		339262	0					
ANR	339455	Identifier	DOTW_BIT		339262	1					
ANR	339456	UnaryOperationExpression	! ( m & W_BIT )		339262	1					
ANR	339457	UnaryOperator	!		339262	0					
ANR	339458	BitAndExpression	m & W_BIT		339262	1		&			
ANR	339459	Identifier	m		339262	0					
ANR	339460	Identifier	W_BIT		339262	1					
ANR	339461	CompoundStatement		26:93:636:636	339262	1					
ANR	339462	ExpressionStatement	ao -> o = 0x00a8	1319:5:26502:26516	339262	0	True				
ANR	339463	AssignmentExpression	ao -> o = 0x00a8		339262	0		=			
ANR	339464	PtrMemberAccess	ao -> o		339262	0					
ANR	339465	Identifier	ao		339262	0					
ANR	339466	Identifier	o		339262	1					
ANR	339467	PrimaryExpression	0x00a8		339262	1					
ANR	339468	ExpressionStatement	ao -> o |= reg1	1320:5:26523:26536	339262	1	True				
ANR	339469	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	339470	PtrMemberAccess	ao -> o		339262	0					
ANR	339471	Identifier	ao		339262	0					
ANR	339472	Identifier	o		339262	1					
ANR	339473	Identifier	reg1		339262	1					
ANR	339474	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	1321:5:26543:26567	339262	2	True				
ANR	339475	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	339476	PtrMemberAccess	ao -> o		339262	0					
ANR	339477	Identifier	ao		339262	0					
ANR	339478	Identifier	o		339262	1					
ANR	339479	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	339480	ShiftExpression	num >> 2		339262	0		>>			
ANR	339481	Identifier	num		339262	0					
ANR	339482	PrimaryExpression	2		339262	1					
ANR	339483	PrimaryExpression	8		339262	1					
ANR	339484	ReturnStatement	return 2 ;	1322:5:26574:26582	339262	3	True				
ANR	339485	PrimaryExpression	2		339262	0					
ANR	339486	IfStatement	if ( ( reg1 == 13 ) && ( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) )		339262	1					
ANR	339487	Condition	( reg1 == 13 ) && ( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )	1325:8:26599:26682	339262	0	True				
ANR	339488	AndExpression	( reg1 == 13 ) && ( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	0		&&			
ANR	339489	EqualityExpression	reg1 == 13		339262	0		==			
ANR	339490	Identifier	reg1		339262	0					
ANR	339491	PrimaryExpression	13		339262	1					
ANR	339492	AndExpression	( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	1		&&			
ANR	339493	RelationalExpression	num < 512		339262	0		<			
ANR	339494	Identifier	num		339262	0					
ANR	339495	PrimaryExpression	512		339262	1					
ANR	339496	AndExpression	( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	1		&&			
ANR	339497	EqualityExpression	num % 4 == 0		339262	0		==			
ANR	339498	MultiplicativeExpression	num % 4		339262	0		%			
ANR	339499	Identifier	num		339262	0					
ANR	339500	PrimaryExpression	4		339262	1					
ANR	339501	PrimaryExpression	0		339262	1					
ANR	339502	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		339262	1		&&			
ANR	339503	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	339504	UnaryOperator	!		339262	0					
ANR	339505	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	339506	Identifier	m		339262	0					
ANR	339507	Identifier	DOTW_BIT		339262	1					
ANR	339508	UnaryOperationExpression	! ( m & W_BIT )		339262	1					
ANR	339509	UnaryOperator	!		339262	0					
ANR	339510	BitAndExpression	m & W_BIT		339262	1		&			
ANR	339511	Identifier	m		339262	0					
ANR	339512	Identifier	W_BIT		339262	1					
ANR	339513	CompoundStatement		33:94:826:826	339262	1					
ANR	339514	ExpressionStatement	ao -> o = 0x00b0	1326:5:26692:26706	339262	0	True				
ANR	339515	AssignmentExpression	ao -> o = 0x00b0		339262	0		=			
ANR	339516	PtrMemberAccess	ao -> o		339262	0					
ANR	339517	Identifier	ao		339262	0					
ANR	339518	Identifier	o		339262	1					
ANR	339519	PrimaryExpression	0x00b0		339262	1					
ANR	339520	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	1327:5:26713:26737	339262	1	True				
ANR	339521	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	339522	PtrMemberAccess	ao -> o		339262	0					
ANR	339523	Identifier	ao		339262	0					
ANR	339524	Identifier	o		339262	1					
ANR	339525	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	339526	ShiftExpression	num >> 2		339262	0		>>			
ANR	339527	Identifier	num		339262	0					
ANR	339528	PrimaryExpression	2		339262	1					
ANR	339529	PrimaryExpression	8		339262	1					
ANR	339530	ReturnStatement	return 2 ;	1328:5:26744:26752	339262	2	True				
ANR	339531	PrimaryExpression	2		339262	0					
ANR	339532	ExpressionStatement	err = false	1331:4:26765:26776	339262	2	True				
ANR	339533	AssignmentExpression	err = false		339262	0		=			
ANR	339534	Identifier	err		339262	0					
ANR	339535	Identifier	false		339262	1					
ANR	339536	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	1332:4:26782:26818	339262	3	True				
ANR	339537	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	339538	IdentifierDeclType	ut32		339262	0					
ANR	339539	Identifier	thnum		339262	1					
ANR	339540	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	339541	Identifier	thnum		339262	0					
ANR	339542	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	339543	Callee	getthimmed12		339262	0					
ANR	339544	Identifier	getthimmed12		339262	0					
ANR	339545	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	339546	Argument	ao -> a [ 2 ]		339262	0					
ANR	339547	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	339548	PtrMemberAccess	ao -> a		339262	0					
ANR	339549	Identifier	ao		339262	0					
ANR	339550	Identifier	a		339262	1					
ANR	339551	PrimaryExpression	2		339262	1					
ANR	339552	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		339262	4					
ANR	339553	Condition	! err && ( ! ( m & W_BIT ) )	1333:8:26828:26849	339262	0	True				
ANR	339554	AndExpression	! err && ( ! ( m & W_BIT ) )		339262	0		&&			
ANR	339555	UnaryOperationExpression	! err		339262	0					
ANR	339556	UnaryOperator	!		339262	0					
ANR	339557	Identifier	err		339262	1					
ANR	339558	UnaryOperationExpression	! ( m & W_BIT )		339262	1					
ANR	339559	UnaryOperator	!		339262	0					
ANR	339560	BitAndExpression	m & W_BIT		339262	1		&			
ANR	339561	Identifier	m		339262	0					
ANR	339562	Identifier	W_BIT		339262	1					
ANR	339563	CompoundStatement		41:32:993:993	339262	1					
ANR	339564	ExpressionStatement	ao -> o = 0x0df10000	1334:5:26859:26877	339262	0	True				
ANR	339565	AssignmentExpression	ao -> o = 0x0df10000		339262	0		=			
ANR	339566	PtrMemberAccess	ao -> o		339262	0					
ANR	339567	Identifier	ao		339262	0					
ANR	339568	Identifier	o		339262	1					
ANR	339569	PrimaryExpression	0x0df10000		339262	1					
ANR	339570	ExpressionStatement	ao -> o |= reg1	1335:5:26884:26897	339262	1	True				
ANR	339571	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	339572	PtrMemberAccess	ao -> o		339262	0					
ANR	339573	Identifier	ao		339262	0					
ANR	339574	Identifier	o		339262	1					
ANR	339575	Identifier	reg1		339262	1					
ANR	339576	ExpressionStatement	ao -> o |= thnum	1336:5:26904:26918	339262	2	True				
ANR	339577	AssignmentExpression	ao -> o |= thnum		339262	0		|=			
ANR	339578	PtrMemberAccess	ao -> o		339262	0					
ANR	339579	Identifier	ao		339262	0					
ANR	339580	Identifier	o		339262	1					
ANR	339581	Identifier	thnum		339262	1					
ANR	339582	IfStatement	if ( m & S_BIT )		339262	3					
ANR	339583	Condition	m & S_BIT	1337:9:26929:26937	339262	0	True				
ANR	339584	BitAndExpression	m & S_BIT		339262	0		&			
ANR	339585	Identifier	m		339262	0					
ANR	339586	Identifier	S_BIT		339262	1					
ANR	339587	CompoundStatement		45:20:1081:1081	339262	1					
ANR	339588	ExpressionStatement	ao -> o |= 1 << 28	1338:6:26948:26964	339262	0	True				
ANR	339589	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	339590	PtrMemberAccess	ao -> o		339262	0					
ANR	339591	Identifier	ao		339262	0					
ANR	339592	Identifier	o		339262	1					
ANR	339593	ShiftExpression	1 << 28		339262	1		<<			
ANR	339594	PrimaryExpression	1		339262	0					
ANR	339595	PrimaryExpression	28		339262	1					
ANR	339596	ReturnStatement	return 4 ;	1340:5:26978:26986	339262	4	True				
ANR	339597	PrimaryExpression	4		339262	0					
ANR	339598	IfStatement	if ( num > 4095 )		339262	5					
ANR	339599	Condition	num > 4095	1343:8:27003:27012	339262	0	True				
ANR	339600	RelationalExpression	num > 4095		339262	0		>			
ANR	339601	Identifier	num		339262	0					
ANR	339602	PrimaryExpression	4095		339262	1					
ANR	339603	CompoundStatement		51:20:1156:1156	339262	1					
ANR	339604	ReturnStatement	return - 1 ;	1344:5:27022:27031	339262	0	True				
ANR	339605	UnaryOperationExpression	- 1		339262	0					
ANR	339606	UnaryOperator	-		339262	0					
ANR	339607	PrimaryExpression	1		339262	1					
ANR	339608	ExpressionStatement	ao -> o = 0x0df20000	1347:4:27044:27062	339262	6	True				
ANR	339609	AssignmentExpression	ao -> o = 0x0df20000		339262	0		=			
ANR	339610	PtrMemberAccess	ao -> o		339262	0					
ANR	339611	Identifier	ao		339262	0					
ANR	339612	Identifier	o		339262	1					
ANR	339613	PrimaryExpression	0x0df20000		339262	1					
ANR	339614	ExpressionStatement	ao -> o |= reg1	1348:4:27068:27081	339262	7	True				
ANR	339615	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	339616	PtrMemberAccess	ao -> o		339262	0					
ANR	339617	Identifier	ao		339262	0					
ANR	339618	Identifier	o		339262	1					
ANR	339619	Identifier	reg1		339262	1					
ANR	339620	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	1349:4:27087:27118	339262	8	True				
ANR	339621	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		339262	0		|=			
ANR	339622	PtrMemberAccess	ao -> o		339262	0					
ANR	339623	Identifier	ao		339262	0					
ANR	339624	Identifier	o		339262	1					
ANR	339625	CallExpression	getthzeroimmed12 ( num )		339262	1					
ANR	339626	Callee	getthzeroimmed12		339262	0					
ANR	339627	Identifier	getthzeroimmed12		339262	0					
ANR	339628	ArgumentList	num		339262	1					
ANR	339629	Argument	num		339262	0					
ANR	339630	Identifier	num		339262	0					
ANR	339631	ReturnStatement	return 4 ;	1350:4:27124:27132	339262	9	True				
ANR	339632	PrimaryExpression	4		339262	0					
ANR	339633	IfStatement	if ( num < 8 )		339262	5					
ANR	339634	Condition	num < 8	1353:7:27147:27153	339262	0	True				
ANR	339635	RelationalExpression	num < 8		339262	0		<			
ANR	339636	Identifier	num		339262	0					
ANR	339637	PrimaryExpression	8		339262	1					
ANR	339638	CompoundStatement		61:16:1297:1297	339262	1					
ANR	339639	ExpressionStatement	ao -> o = 0x001c	1354:4:27162:27176	339262	0	True				
ANR	339640	AssignmentExpression	ao -> o = 0x001c		339262	0		=			
ANR	339641	PtrMemberAccess	ao -> o		339262	0					
ANR	339642	Identifier	ao		339262	0					
ANR	339643	Identifier	o		339262	1					
ANR	339644	PrimaryExpression	0x001c		339262	1					
ANR	339645	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	1355:4:27182:27208	339262	1	True				
ANR	339646	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	339647	PtrMemberAccess	ao -> o		339262	0					
ANR	339648	Identifier	ao		339262	0					
ANR	339649	Identifier	o		339262	1					
ANR	339650	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	339651	BitAndExpression	num & 0x3		339262	0		&			
ANR	339652	Identifier	num		339262	0					
ANR	339653	PrimaryExpression	0x3		339262	1					
ANR	339654	PrimaryExpression	14		339262	1					
ANR	339655	ExpressionStatement	ao -> o |= ( num >> 2 )	1356:4:27214:27233	339262	2	True				
ANR	339656	AssignmentExpression	ao -> o |= ( num >> 2 )		339262	0		|=			
ANR	339657	PtrMemberAccess	ao -> o		339262	0					
ANR	339658	Identifier	ao		339262	0					
ANR	339659	Identifier	o		339262	1					
ANR	339660	ShiftExpression	num >> 2		339262	1		>>			
ANR	339661	Identifier	num		339262	0					
ANR	339662	PrimaryExpression	2		339262	1					
ANR	339663	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	3					
ANR	339664	Condition	"std_16bit_2reg ( ao , m )"	1357:8:27243:27264	339262	0	True				
ANR	339665	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	339666	Callee	std_16bit_2reg		339262	0					
ANR	339667	Identifier	std_16bit_2reg		339262	0					
ANR	339668	ArgumentList	ao		339262	1					
ANR	339669	Argument	ao		339262	0					
ANR	339670	Identifier	ao		339262	0					
ANR	339671	Argument	m		339262	1					
ANR	339672	Identifier	m		339262	0					
ANR	339673	CompoundStatement		65:32:1408:1408	339262	1					
ANR	339674	ReturnStatement	return 2 ;	1358:5:27274:27282	339262	0	True				
ANR	339675	PrimaryExpression	2		339262	0					
ANR	339676	IfStatement	if ( ( reg1 < 8 ) && ( reg1 == reg2 ) && ( num < 256 ) )		339262	6					
ANR	339677	Condition	( reg1 < 8 ) && ( reg1 == reg2 ) && ( num < 256 )	1362:7:27303:27345	339262	0	True				
ANR	339678	AndExpression	( reg1 < 8 ) && ( reg1 == reg2 ) && ( num < 256 )		339262	0		&&			
ANR	339679	RelationalExpression	reg1 < 8		339262	0		<			
ANR	339680	Identifier	reg1		339262	0					
ANR	339681	PrimaryExpression	8		339262	1					
ANR	339682	AndExpression	( reg1 == reg2 ) && ( num < 256 )		339262	1		&&			
ANR	339683	EqualityExpression	reg1 == reg2		339262	0		==			
ANR	339684	Identifier	reg1		339262	0					
ANR	339685	Identifier	reg2		339262	1					
ANR	339686	RelationalExpression	num < 256		339262	1		<			
ANR	339687	Identifier	num		339262	0					
ANR	339688	PrimaryExpression	256		339262	1					
ANR	339689	CompoundStatement		70:52:1489:1489	339262	1					
ANR	339690	ExpressionStatement	ao -> o = 0x0030	1363:4:27354:27368	339262	0	True				
ANR	339691	AssignmentExpression	ao -> o = 0x0030		339262	0		=			
ANR	339692	PtrMemberAccess	ao -> o		339262	0					
ANR	339693	Identifier	ao		339262	0					
ANR	339694	Identifier	o		339262	1					
ANR	339695	PrimaryExpression	0x0030		339262	1					
ANR	339696	ExpressionStatement	ao -> o |= reg1	1364:4:27374:27387	339262	1	True				
ANR	339697	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	339698	PtrMemberAccess	ao -> o		339262	0					
ANR	339699	Identifier	ao		339262	0					
ANR	339700	Identifier	o		339262	1					
ANR	339701	Identifier	reg1		339262	1					
ANR	339702	ExpressionStatement	ao -> o |= num << 8	1365:4:27393:27410	339262	2	True				
ANR	339703	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	339704	PtrMemberAccess	ao -> o		339262	0					
ANR	339705	Identifier	ao		339262	0					
ANR	339706	Identifier	o		339262	1					
ANR	339707	ShiftExpression	num << 8		339262	1		<<			
ANR	339708	Identifier	num		339262	0					
ANR	339709	PrimaryExpression	8		339262	1					
ANR	339710	ReturnStatement	return 2 ;	1366:4:27416:27424	339262	3	True				
ANR	339711	PrimaryExpression	2		339262	0					
ANR	339712	ExpressionStatement	err = false	1369:3:27435:27446	339262	7	True				
ANR	339713	AssignmentExpression	err = false		339262	0		=			
ANR	339714	Identifier	err		339262	0					
ANR	339715	Identifier	false		339262	1					
ANR	339716	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	1370:3:27451:27487	339262	8	True				
ANR	339717	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	339718	IdentifierDeclType	ut32		339262	0					
ANR	339719	Identifier	thnum		339262	1					
ANR	339720	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	339721	Identifier	thnum		339262	0					
ANR	339722	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	339723	Callee	getthimmed12		339262	0					
ANR	339724	Identifier	getthimmed12		339262	0					
ANR	339725	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	339726	Argument	ao -> a [ 2 ]		339262	0					
ANR	339727	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	339728	PtrMemberAccess	ao -> a		339262	0					
ANR	339729	Identifier	ao		339262	0					
ANR	339730	Identifier	a		339262	1					
ANR	339731	PrimaryExpression	2		339262	1					
ANR	339732	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		339262	9					
ANR	339733	Condition	! err && ( ! ( m & W_BIT ) )	1371:7:27496:27517	339262	0	True				
ANR	339734	AndExpression	! err && ( ! ( m & W_BIT ) )		339262	0		&&			
ANR	339735	UnaryOperationExpression	! err		339262	0					
ANR	339736	UnaryOperator	!		339262	0					
ANR	339737	Identifier	err		339262	1					
ANR	339738	UnaryOperationExpression	! ( m & W_BIT )		339262	1					
ANR	339739	UnaryOperator	!		339262	0					
ANR	339740	BitAndExpression	m & W_BIT		339262	1		&			
ANR	339741	Identifier	m		339262	0					
ANR	339742	Identifier	W_BIT		339262	1					
ANR	339743	CompoundStatement		79:31:1661:1661	339262	1					
ANR	339744	ExpressionStatement	ao -> o = 0x00f10000	1372:4:27526:27544	339262	0	True				
ANR	339745	AssignmentExpression	ao -> o = 0x00f10000		339262	0		=			
ANR	339746	PtrMemberAccess	ao -> o		339262	0					
ANR	339747	Identifier	ao		339262	0					
ANR	339748	Identifier	o		339262	1					
ANR	339749	PrimaryExpression	0x00f10000		339262	1					
ANR	339750	ExpressionStatement	ao -> o |= thnum	1373:4:27550:27564	339262	1	True				
ANR	339751	AssignmentExpression	ao -> o |= thnum		339262	0		|=			
ANR	339752	PtrMemberAccess	ao -> o		339262	0					
ANR	339753	Identifier	ao		339262	0					
ANR	339754	Identifier	o		339262	1					
ANR	339755	Identifier	thnum		339262	1					
ANR	339756	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1374:4:27570:27606	339262	2	True				
ANR	339757	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	339758	Callee	std_32bit_2reg		339262	0					
ANR	339759	Identifier	std_32bit_2reg		339262	0					
ANR	339760	ArgumentList	ao		339262	1					
ANR	339761	Argument	ao		339262	0					
ANR	339762	Identifier	ao		339262	0					
ANR	339763	Argument	m		339262	1					
ANR	339764	Identifier	m		339262	0					
ANR	339765	Argument	false		339262	2					
ANR	339766	Identifier	false		339262	0					
ANR	339767	IfStatement	if ( num > 4095 )		339262	10					
ANR	339768	Condition	num > 4095	1377:7:27621:27630	339262	0	True				
ANR	339769	RelationalExpression	num > 4095		339262	0		>			
ANR	339770	Identifier	num		339262	0					
ANR	339771	PrimaryExpression	4095		339262	1					
ANR	339772	CompoundStatement		85:19:1774:1774	339262	1					
ANR	339773	ReturnStatement	return - 1 ;	1378:4:27639:27648	339262	0	True				
ANR	339774	UnaryOperationExpression	- 1		339262	0					
ANR	339775	UnaryOperator	-		339262	0					
ANR	339776	PrimaryExpression	1		339262	1					
ANR	339777	ExpressionStatement	ao -> o = 0x00f20000	1381:3:27659:27677	339262	11	True				
ANR	339778	AssignmentExpression	ao -> o = 0x00f20000		339262	0		=			
ANR	339779	PtrMemberAccess	ao -> o		339262	0					
ANR	339780	Identifier	ao		339262	0					
ANR	339781	Identifier	o		339262	1					
ANR	339782	PrimaryExpression	0x00f20000		339262	1					
ANR	339783	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	1382:3:27682:27713	339262	12	True				
ANR	339784	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		339262	0		|=			
ANR	339785	PtrMemberAccess	ao -> o		339262	0					
ANR	339786	Identifier	ao		339262	0					
ANR	339787	Identifier	o		339262	1					
ANR	339788	CallExpression	getthzeroimmed12 ( num )		339262	1					
ANR	339789	Callee	getthzeroimmed12		339262	0					
ANR	339790	Identifier	getthzeroimmed12		339262	0					
ANR	339791	ArgumentList	num		339262	1					
ANR	339792	Argument	num		339262	0					
ANR	339793	Identifier	num		339262	0					
ANR	339794	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1383:3:27718:27754	339262	13	True				
ANR	339795	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	339796	Callee	std_32bit_2reg		339262	0					
ANR	339797	Identifier	std_32bit_2reg		339262	0					
ANR	339798	ArgumentList	ao		339262	1					
ANR	339799	Argument	ao		339262	0					
ANR	339800	Identifier	ao		339262	0					
ANR	339801	Argument	m		339262	1					
ANR	339802	Identifier	m		339262	0					
ANR	339803	Argument	false		339262	2					
ANR	339804	Identifier	false		339262	0					
ANR	339805	BreakStatement	break ;	1385:3:27771:27776	339262	4	True				
ANR	339806	Label	case THUMB_REG_REG :	1386:2:27780:27798	339262	5	True				
ANR	339807	Identifier	THUMB_REG_REG		339262	0					
ANR	339808	CompoundStatement		94:22:1941:1941	339262	6					
ANR	339809	ExpressionStatement	std_opt_2 ( ao )	1387:3:27805:27819	339262	0	True				
ANR	339810	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	339811	Callee	std_opt_2		339262	0					
ANR	339812	Identifier	std_opt_2		339262	0					
ANR	339813	ArgumentList	ao		339262	1					
ANR	339814	Argument	ao		339262	0					
ANR	339815	Identifier	ao		339262	0					
ANR	339816	Label	case THUMB_REG_REG_REG :	1390:2:27865:27887	339262	7	True				
ANR	339817	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	339818	CompoundStatement		98:26:2030:2030	339262	8					
ANR	339819	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	1391:3:27894:27912	339262	0	True				
ANR	339820	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	339821	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	339822	PtrMemberAccess	ao -> a		339262	0					
ANR	339823	Identifier	ao		339262	0					
ANR	339824	Identifier	a		339262	1					
ANR	339825	PrimaryExpression	3		339262	1					
ANR	339826	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	339827	Label	case THUMB_REG_REG_SHIFT :	1394:2:27958:27982	339262	9	True				
ANR	339828	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	339829	CompoundStatement		102:28:2125:2125	339262	10					
ANR	339830	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	339831	Condition	ao -> a [ 3 ] == NULL	1395:7:27993:28008	339262	0	True				
ANR	339832	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	339833	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	339834	PtrMemberAccess	ao -> a		339262	0					
ANR	339835	Identifier	ao		339262	0					
ANR	339836	Identifier	a		339262	1					
ANR	339837	PrimaryExpression	3		339262	1					
ANR	339838	Identifier	NULL		339262	1					
ANR	339839	CompoundStatement		103:25:2152:2152	339262	1					
ANR	339840	ExpressionStatement	std_opt_3 ( ao )	1396:4:28039:28053	339262	0	True				
ANR	339841	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	339842	Callee	std_opt_3		339262	0					
ANR	339843	Identifier	std_opt_3		339262	0					
ANR	339844	ArgumentList	ao		339262	1					
ANR	339845	Argument	ao		339262	0					
ANR	339846	Identifier	ao		339262	0					
ANR	339847	Label	case THUMB_REG_REG_REG_SHIFT :	1400:2:28104:28132	339262	11	True				
ANR	339848	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	339849	CompoundStatement		112:3:2379:2417	339262	12					
ANR	339850	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1401:3:28139:28167	339262	0	True				
ANR	339851	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	339852	IdentifierDeclType	ut8		339262	0					
ANR	339853	Identifier	reg1		339262	1					
ANR	339854	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	339855	Identifier	reg1		339262	0					
ANR	339856	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	339857	Callee	getreg		339262	0					
ANR	339858	Identifier	getreg		339262	0					
ANR	339859	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	339860	Argument	ao -> a [ 0 ]		339262	0					
ANR	339861	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	339862	PtrMemberAccess	ao -> a		339262	0					
ANR	339863	Identifier	ao		339262	0					
ANR	339864	Identifier	a		339262	1					
ANR	339865	PrimaryExpression	0		339262	1					
ANR	339866	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1402:3:28172:28200	339262	1	True				
ANR	339867	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	339868	IdentifierDeclType	ut8		339262	0					
ANR	339869	Identifier	reg2		339262	1					
ANR	339870	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	339871	Identifier	reg2		339262	0					
ANR	339872	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	339873	Callee	getreg		339262	0					
ANR	339874	Identifier	getreg		339262	0					
ANR	339875	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	339876	Argument	ao -> a [ 1 ]		339262	0					
ANR	339877	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	339878	PtrMemberAccess	ao -> a		339262	0					
ANR	339879	Identifier	ao		339262	0					
ANR	339880	Identifier	a		339262	1					
ANR	339881	PrimaryExpression	1		339262	1					
ANR	339882	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	1403:3:28205:28233	339262	2	True				
ANR	339883	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	339884	IdentifierDeclType	ut8		339262	0					
ANR	339885	Identifier	reg3		339262	1					
ANR	339886	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	339887	Identifier	reg3		339262	0					
ANR	339888	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	339889	Callee	getreg		339262	0					
ANR	339890	Identifier	getreg		339262	0					
ANR	339891	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	339892	Argument	ao -> a [ 2 ]		339262	0					
ANR	339893	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	339894	PtrMemberAccess	ao -> a		339262	0					
ANR	339895	Identifier	ao		339262	0					
ANR	339896	Identifier	a		339262	1					
ANR	339897	PrimaryExpression	2		339262	1					
ANR	339898	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	1404:3:28238:28276	339262	3	True				
ANR	339899	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	339900	IdentifierDeclType	ut32		339262	0					
ANR	339901	Identifier	shift		339262	1					
ANR	339902	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	339903	Identifier	shift		339262	0					
ANR	339904	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	339905	Callee	thumb_getshift		339262	0					
ANR	339906	Identifier	thumb_getshift		339262	0					
ANR	339907	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	339908	Argument	ao -> a [ 3 ]		339262	0					
ANR	339909	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	339910	PtrMemberAccess	ao -> a		339262	0					
ANR	339911	Identifier	ao		339262	0					
ANR	339912	Identifier	a		339262	1					
ANR	339913	PrimaryExpression	3		339262	1					
ANR	339914	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) )		339262	4					
ANR	339915	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )	1406:7:28286:28326	339262	0	True				
ANR	339916	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		339262	0		||			
ANR	339917	RelationalExpression	reg1 > 15		339262	0		>			
ANR	339918	Identifier	reg1		339262	0					
ANR	339919	PrimaryExpression	15		339262	1					
ANR	339920	OrExpression	( reg2 > 15 ) || ( reg3 > 15 )		339262	1		||			
ANR	339921	RelationalExpression	reg2 > 15		339262	0		>			
ANR	339922	Identifier	reg2		339262	0					
ANR	339923	PrimaryExpression	15		339262	1					
ANR	339924	RelationalExpression	reg3 > 15		339262	1		>			
ANR	339925	Identifier	reg3		339262	0					
ANR	339926	PrimaryExpression	15		339262	1					
ANR	339927	CompoundStatement		114:50:2470:2470	339262	1					
ANR	339928	ReturnStatement	return - 1 ;	1407:4:28335:28344	339262	0	True				
ANR	339929	UnaryOperationExpression	- 1		339262	0					
ANR	339930	UnaryOperator	-		339262	0					
ANR	339931	PrimaryExpression	1		339262	1					
ANR	339932	IfStatement	if ( reg2 == 13 )		339262	5					
ANR	339933	Condition	reg2 == 13	1410:7:28363:28372	339262	0	True				
ANR	339934	EqualityExpression	reg2 == 13		339262	0		==			
ANR	339935	Identifier	reg2		339262	0					
ANR	339936	PrimaryExpression	13		339262	1					
ANR	339937	CompoundStatement		118:19:2516:2516	339262	1					
ANR	339938	IfStatement	if ( ( reg1 == reg3 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		339262	0					
ANR	339939	Condition	( reg1 == reg3 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1411:8:28385:28435	339262	0	True				
ANR	339940	AndExpression	( reg1 == reg3 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	0		&&			
ANR	339941	EqualityExpression	reg1 == reg3		339262	0		==			
ANR	339942	Identifier	reg1		339262	0					
ANR	339943	Identifier	reg3		339262	1					
ANR	339944	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	1		&&			
ANR	339945	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	339946	UnaryOperator	!		339262	0					
ANR	339947	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	339948	Identifier	m		339262	0					
ANR	339949	Identifier	DOTW_BIT		339262	1					
ANR	339950	EqualityExpression	shift == 0		339262	1		==			
ANR	339951	Identifier	shift		339262	0					
ANR	339952	PrimaryExpression	0		339262	1					
ANR	339953	CompoundStatement		119:61:2579:2579	339262	1					
ANR	339954	ExpressionStatement	ao -> o = 0x6844	1412:5:28445:28459	339262	0	True				
ANR	339955	AssignmentExpression	ao -> o = 0x6844		339262	0		=			
ANR	339956	PtrMemberAccess	ao -> o		339262	0					
ANR	339957	Identifier	ao		339262	0					
ANR	339958	Identifier	o		339262	1					
ANR	339959	PrimaryExpression	0x6844		339262	1					
ANR	339960	ExpressionStatement	ao -> o |= ( reg1 & 0x7 ) << 8	1413:5:28466:28492	339262	1	True				
ANR	339961	AssignmentExpression	ao -> o |= ( reg1 & 0x7 ) << 8		339262	0		|=			
ANR	339962	PtrMemberAccess	ao -> o		339262	0					
ANR	339963	Identifier	ao		339262	0					
ANR	339964	Identifier	o		339262	1					
ANR	339965	ShiftExpression	( reg1 & 0x7 ) << 8		339262	1		<<			
ANR	339966	BitAndExpression	reg1 & 0x7		339262	0		&			
ANR	339967	Identifier	reg1		339262	0					
ANR	339968	PrimaryExpression	0x7		339262	1					
ANR	339969	PrimaryExpression	8		339262	1					
ANR	339970	ExpressionStatement	ao -> o |= ( reg1 >> 3 ) << 15	1414:5:28499:28525	339262	2	True				
ANR	339971	AssignmentExpression	ao -> o |= ( reg1 >> 3 ) << 15		339262	0		|=			
ANR	339972	PtrMemberAccess	ao -> o		339262	0					
ANR	339973	Identifier	ao		339262	0					
ANR	339974	Identifier	o		339262	1					
ANR	339975	ShiftExpression	( reg1 >> 3 ) << 15		339262	1		<<			
ANR	339976	ShiftExpression	reg1 >> 3		339262	0		>>			
ANR	339977	Identifier	reg1		339262	0					
ANR	339978	PrimaryExpression	3		339262	1					
ANR	339979	PrimaryExpression	15		339262	1					
ANR	339980	ReturnStatement	return 2 ;	1415:5:28532:28540	339262	3	True				
ANR	339981	PrimaryExpression	2		339262	0					
ANR	339982	IfStatement	if ( ( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		339262	1					
ANR	339983	Condition	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1418:8:28557:28605	339262	0	True				
ANR	339984	AndExpression	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	0		&&			
ANR	339985	EqualityExpression	reg1 == 13		339262	0		==			
ANR	339986	Identifier	reg1		339262	0					
ANR	339987	PrimaryExpression	13		339262	1					
ANR	339988	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	1		&&			
ANR	339989	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	339990	UnaryOperator	!		339262	0					
ANR	339991	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	339992	Identifier	m		339262	0					
ANR	339993	Identifier	DOTW_BIT		339262	1					
ANR	339994	EqualityExpression	shift == 0		339262	1		==			
ANR	339995	Identifier	shift		339262	0					
ANR	339996	PrimaryExpression	0		339262	1					
ANR	339997	CompoundStatement		126:59:2749:2749	339262	1					
ANR	339998	ExpressionStatement	ao -> o = 0x8544	1419:5:28615:28629	339262	0	True				
ANR	339999	AssignmentExpression	ao -> o = 0x8544		339262	0		=			
ANR	340000	PtrMemberAccess	ao -> o		339262	0					
ANR	340001	Identifier	ao		339262	0					
ANR	340002	Identifier	o		339262	1					
ANR	340003	PrimaryExpression	0x8544		339262	1					
ANR	340004	ExpressionStatement	ao -> o |= reg3 << 11	1420:5:28636:28655	339262	1	True				
ANR	340005	AssignmentExpression	ao -> o |= reg3 << 11		339262	0		|=			
ANR	340006	PtrMemberAccess	ao -> o		339262	0					
ANR	340007	Identifier	ao		339262	0					
ANR	340008	Identifier	o		339262	1					
ANR	340009	ShiftExpression	reg3 << 11		339262	1		<<			
ANR	340010	Identifier	reg3		339262	0					
ANR	340011	PrimaryExpression	11		339262	1					
ANR	340012	ReturnStatement	return 2 ;	1421:5:28662:28670	339262	2	True				
ANR	340013	PrimaryExpression	2		339262	0					
ANR	340014	ExpressionStatement	ao -> o = 0x0deb0000	1424:4:28683:28701	339262	2	True				
ANR	340015	AssignmentExpression	ao -> o = 0x0deb0000		339262	0		=			
ANR	340016	PtrMemberAccess	ao -> o		339262	0					
ANR	340017	Identifier	ao		339262	0					
ANR	340018	Identifier	o		339262	1					
ANR	340019	PrimaryExpression	0x0deb0000		339262	1					
ANR	340020	ExpressionStatement	ao -> o |= reg1	1425:4:28707:28720	339262	3	True				
ANR	340021	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	340022	PtrMemberAccess	ao -> o		339262	0					
ANR	340023	Identifier	ao		339262	0					
ANR	340024	Identifier	o		339262	1					
ANR	340025	Identifier	reg1		339262	1					
ANR	340026	ExpressionStatement	ao -> o |= reg3 << 8	1426:4:28726:28744	339262	4	True				
ANR	340027	AssignmentExpression	ao -> o |= reg3 << 8		339262	0		|=			
ANR	340028	PtrMemberAccess	ao -> o		339262	0					
ANR	340029	Identifier	ao		339262	0					
ANR	340030	Identifier	o		339262	1					
ANR	340031	ShiftExpression	reg3 << 8		339262	1		<<			
ANR	340032	Identifier	reg3		339262	0					
ANR	340033	PrimaryExpression	8		339262	1					
ANR	340034	ExpressionStatement	ao -> o |= shift	1427:4:28750:28764	339262	5	True				
ANR	340035	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	340036	PtrMemberAccess	ao -> o		339262	0					
ANR	340037	Identifier	ao		339262	0					
ANR	340038	Identifier	o		339262	1					
ANR	340039	Identifier	shift		339262	1					
ANR	340040	IfStatement	if ( m & S_BIT )		339262	6					
ANR	340041	Condition	m & S_BIT	1428:8:28774:28782	339262	0	True				
ANR	340042	BitAndExpression	m & S_BIT		339262	0		&			
ANR	340043	Identifier	m		339262	0					
ANR	340044	Identifier	S_BIT		339262	1					
ANR	340045	CompoundStatement		136:19:2926:2926	339262	1					
ANR	340046	ExpressionStatement	ao -> o |= 1 << 28	1429:5:28792:28808	339262	0	True				
ANR	340047	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	340048	PtrMemberAccess	ao -> o		339262	0					
ANR	340049	Identifier	ao		339262	0					
ANR	340050	Identifier	o		339262	1					
ANR	340051	ShiftExpression	1 << 28		339262	1		<<			
ANR	340052	PrimaryExpression	1		339262	0					
ANR	340053	PrimaryExpression	28		339262	1					
ANR	340054	ReturnStatement	return 4 ;	1431:4:28820:28828	339262	7	True				
ANR	340055	PrimaryExpression	4		339262	0					
ANR	340056	IfStatement	if ( ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		339262	6					
ANR	340057	Condition	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1434:7:28843:28889	339262	0	True				
ANR	340058	AndExpression	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	0		&&			
ANR	340059	RelationalExpression	reg3 < 8		339262	0		<			
ANR	340060	Identifier	reg3		339262	0					
ANR	340061	PrimaryExpression	8		339262	1					
ANR	340062	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	1		&&			
ANR	340063	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	340064	UnaryOperator	!		339262	0					
ANR	340065	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	340066	Identifier	m		339262	0					
ANR	340067	Identifier	DOTW_BIT		339262	1					
ANR	340068	EqualityExpression	shift == 0		339262	1		==			
ANR	340069	Identifier	shift		339262	0					
ANR	340070	PrimaryExpression	0		339262	1					
ANR	340071	CompoundStatement		142:56:3033:3033	339262	1					
ANR	340072	ExpressionStatement	ao -> o = 0x0018	1435:4:28898:28912	339262	0	True				
ANR	340073	AssignmentExpression	ao -> o = 0x0018		339262	0		=			
ANR	340074	PtrMemberAccess	ao -> o		339262	0					
ANR	340075	Identifier	ao		339262	0					
ANR	340076	Identifier	o		339262	1					
ANR	340077	PrimaryExpression	0x0018		339262	1					
ANR	340078	ExpressionStatement	ao -> o |= ( reg3 >> 2 )	1436:4:28918:28938	339262	1	True				
ANR	340079	AssignmentExpression	ao -> o |= ( reg3 >> 2 )		339262	0		|=			
ANR	340080	PtrMemberAccess	ao -> o		339262	0					
ANR	340081	Identifier	ao		339262	0					
ANR	340082	Identifier	o		339262	1					
ANR	340083	ShiftExpression	reg3 >> 2		339262	1		>>			
ANR	340084	Identifier	reg3		339262	0					
ANR	340085	PrimaryExpression	2		339262	1					
ANR	340086	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	1437:4:28944:28971	339262	2	True				
ANR	340087	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		339262	0		|=			
ANR	340088	PtrMemberAccess	ao -> o		339262	0					
ANR	340089	Identifier	ao		339262	0					
ANR	340090	Identifier	o		339262	1					
ANR	340091	ShiftExpression	( reg3 & 0x3 ) << 14		339262	1		<<			
ANR	340092	BitAndExpression	reg3 & 0x3		339262	0		&			
ANR	340093	Identifier	reg3		339262	0					
ANR	340094	PrimaryExpression	0x3		339262	1					
ANR	340095	PrimaryExpression	14		339262	1					
ANR	340096	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	3					
ANR	340097	Condition	"std_16bit_2reg ( ao , m )"	1438:8:28981:29002	339262	0	True				
ANR	340098	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	340099	Callee	std_16bit_2reg		339262	0					
ANR	340100	Identifier	std_16bit_2reg		339262	0					
ANR	340101	ArgumentList	ao		339262	1					
ANR	340102	Argument	ao		339262	0					
ANR	340103	Identifier	ao		339262	0					
ANR	340104	Argument	m		339262	1					
ANR	340105	Identifier	m		339262	0					
ANR	340106	CompoundStatement		146:32:3146:3146	339262	1					
ANR	340107	ReturnStatement	return 2 ;	1439:5:29012:29020	339262	0	True				
ANR	340108	PrimaryExpression	2		339262	0					
ANR	340109	IfStatement	if ( ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		339262	7					
ANR	340110	Condition	( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1443:7:29041:29091	339262	0	True				
ANR	340111	AndExpression	( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	0		&&			
ANR	340112	EqualityExpression	reg1 == reg2		339262	0		==			
ANR	340113	Identifier	reg1		339262	0					
ANR	340114	Identifier	reg2		339262	1					
ANR	340115	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		339262	1		&&			
ANR	340116	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	340117	UnaryOperator	!		339262	0					
ANR	340118	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	340119	Identifier	m		339262	0					
ANR	340120	Identifier	DOTW_BIT		339262	1					
ANR	340121	EqualityExpression	shift == 0		339262	1		==			
ANR	340122	Identifier	shift		339262	0					
ANR	340123	PrimaryExpression	0		339262	1					
ANR	340124	CompoundStatement		151:60:3235:3235	339262	1					
ANR	340125	ExpressionStatement	ao -> o = 0x0044	1444:4:29100:29114	339262	0	True				
ANR	340126	AssignmentExpression	ao -> o = 0x0044		339262	0		=			
ANR	340127	PtrMemberAccess	ao -> o		339262	0					
ANR	340128	Identifier	ao		339262	0					
ANR	340129	Identifier	o		339262	1					
ANR	340130	PrimaryExpression	0x0044		339262	1					
ANR	340131	ExpressionStatement	ao -> o |= ( reg1 & 0x7 ) << 8	1445:4:29120:29146	339262	1	True				
ANR	340132	AssignmentExpression	ao -> o |= ( reg1 & 0x7 ) << 8		339262	0		|=			
ANR	340133	PtrMemberAccess	ao -> o		339262	0					
ANR	340134	Identifier	ao		339262	0					
ANR	340135	Identifier	o		339262	1					
ANR	340136	ShiftExpression	( reg1 & 0x7 ) << 8		339262	1		<<			
ANR	340137	BitAndExpression	reg1 & 0x7		339262	0		&			
ANR	340138	Identifier	reg1		339262	0					
ANR	340139	PrimaryExpression	0x7		339262	1					
ANR	340140	PrimaryExpression	8		339262	1					
ANR	340141	ExpressionStatement	ao -> o |= ( reg1 >> 3 ) << 15	1446:4:29152:29178	339262	2	True				
ANR	340142	AssignmentExpression	ao -> o |= ( reg1 >> 3 ) << 15		339262	0		|=			
ANR	340143	PtrMemberAccess	ao -> o		339262	0					
ANR	340144	Identifier	ao		339262	0					
ANR	340145	Identifier	o		339262	1					
ANR	340146	ShiftExpression	( reg1 >> 3 ) << 15		339262	1		<<			
ANR	340147	ShiftExpression	reg1 >> 3		339262	0		>>			
ANR	340148	Identifier	reg1		339262	0					
ANR	340149	PrimaryExpression	3		339262	1					
ANR	340150	PrimaryExpression	15		339262	1					
ANR	340151	ExpressionStatement	ao -> o |= reg3 << 11	1447:4:29184:29203	339262	3	True				
ANR	340152	AssignmentExpression	ao -> o |= reg3 << 11		339262	0		|=			
ANR	340153	PtrMemberAccess	ao -> o		339262	0					
ANR	340154	Identifier	ao		339262	0					
ANR	340155	Identifier	o		339262	1					
ANR	340156	ShiftExpression	reg3 << 11		339262	1		<<			
ANR	340157	Identifier	reg3		339262	0					
ANR	340158	PrimaryExpression	11		339262	1					
ANR	340159	ReturnStatement	return 2 ;	1448:4:29209:29217	339262	4	True				
ANR	340160	PrimaryExpression	2		339262	0					
ANR	340161	ExpressionStatement	ao -> o = 0x00eb0000	1451:3:29228:29246	339262	8	True				
ANR	340162	AssignmentExpression	ao -> o = 0x00eb0000		339262	0		=			
ANR	340163	PtrMemberAccess	ao -> o		339262	0					
ANR	340164	Identifier	ao		339262	0					
ANR	340165	Identifier	o		339262	1					
ANR	340166	PrimaryExpression	0x00eb0000		339262	1					
ANR	340167	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1452:3:29251:29286	339262	9	True				
ANR	340168	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	340169	Callee	std_32bit_3reg		339262	0					
ANR	340170	Identifier	std_32bit_3reg		339262	0					
ANR	340171	ArgumentList	ao		339262	1					
ANR	340172	Argument	ao		339262	0					
ANR	340173	Identifier	ao		339262	0					
ANR	340174	Argument	m		339262	1					
ANR	340175	Identifier	m		339262	0					
ANR	340176	Argument	true		339262	2					
ANR	340177	Identifier	true		339262	0					
ANR	340178	BreakStatement	break ;	1454:3:29303:29308	339262	13	True				
ANR	340179	Label	default :	1455:2:29312:29319	339262	14	True				
ANR	340180	Identifier	default		339262	0					
ANR	340181	ReturnStatement	return - 1 ;	1456:3:29324:29333	339262	15	True				
ANR	340182	UnaryOperationExpression	- 1		339262	0					
ANR	340183	UnaryOperator	-		339262	0					
ANR	340184	PrimaryExpression	1		339262	1					
ANR	340185	ElseStatement	else		339262	0					
ANR	340186	IfStatement	"if ( ( m = opmask ( ao -> op , ""adc"" , S_BIT ) ) )"		339262	0					
ANR	340187	Condition	"m = opmask ( ao -> op , ""adc"" , S_BIT )"	1459:5:29352:29386	339262	0	True				
ANR	340188	AssignmentExpression	"m = opmask ( ao -> op , ""adc"" , S_BIT )"		339262	0		=			
ANR	340189	Identifier	m		339262	0					
ANR	340190	CallExpression	"opmask ( ao -> op , ""adc"" , S_BIT )"		339262	1					
ANR	340191	Callee	opmask		339262	0					
ANR	340192	Identifier	opmask		339262	0					
ANR	340193	ArgumentList	ao -> op		339262	1					
ANR	340194	Argument	ao -> op		339262	0					
ANR	340195	PtrMemberAccess	ao -> op		339262	0					
ANR	340196	Identifier	ao		339262	0					
ANR	340197	Identifier	op		339262	1					
ANR	340198	Argument	"""adc"""		339262	1					
ANR	340199	PrimaryExpression	"""adc"""		339262	0					
ANR	340200	Argument	S_BIT		339262	2					
ANR	340201	Identifier	S_BIT		339262	0					
ANR	340202	CompoundStatement		168:2:3534:3568	339262	1					
ANR	340203	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1460:2:29393:29427	339262	0	True				
ANR	340204	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	340205	IdentifierDeclType	ut64		339262	0					
ANR	340206	Identifier	argt		339262	1					
ANR	340207	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	340208	Identifier	argt		339262	0					
ANR	340209	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	340210	Callee	thumb_selector		339262	0					
ANR	340211	Identifier	thumb_selector		339262	0					
ANR	340212	ArgumentList	ao -> a		339262	1					
ANR	340213	Argument	ao -> a		339262	0					
ANR	340214	PtrMemberAccess	ao -> a		339262	0					
ANR	340215	Identifier	ao		339262	0					
ANR	340216	Identifier	a		339262	1					
ANR	340217	SwitchStatement	switch ( argt )		339262	1					
ANR	340218	Condition	argt	1461:10:29439:29442	339262	0	True				
ANR	340219	Identifier	argt		339262	0					
ANR	340220	CompoundStatement		169:16:3586:3586	339262	1					
ANR	340221	Label	case THUMB_REG_CONST :	1462:2:29449:29469	339262	0	True				
ANR	340222	Identifier	THUMB_REG_CONST		339262	0					
ANR	340223	CompoundStatement		170:24:3612:3612	339262	1					
ANR	340224	ExpressionStatement	std_opt_2 ( ao )	1463:3:29476:29490	339262	0	True				
ANR	340225	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	340226	Callee	std_opt_2		339262	0					
ANR	340227	Identifier	std_opt_2		339262	0					
ANR	340228	ArgumentList	ao		339262	1					
ANR	340229	Argument	ao		339262	0					
ANR	340230	Identifier	ao		339262	0					
ANR	340231	Label	case THUMB_REG_REG_CONST :	1466:2:29536:29560	339262	2	True				
ANR	340232	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	340233	CompoundStatement		174:28:3703:3703	339262	3					
ANR	340234	ExpressionStatement	ao -> o = 0x40f10000	1467:3:29567:29585	339262	0	True				
ANR	340235	AssignmentExpression	ao -> o = 0x40f10000		339262	0		=			
ANR	340236	PtrMemberAccess	ao -> o		339262	0					
ANR	340237	Identifier	ao		339262	0					
ANR	340238	Identifier	o		339262	1					
ANR	340239	PrimaryExpression	0x40f10000		339262	1					
ANR	340240	ExpressionStatement	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )	1468:3:29590:29622	339262	1	True				
ANR	340241	AssignmentExpression	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )		339262	0		|=			
ANR	340242	PtrMemberAccess	ao -> o		339262	0					
ANR	340243	Identifier	ao		339262	0					
ANR	340244	Identifier	o		339262	1					
ANR	340245	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	340246	Callee	getthimmed12		339262	0					
ANR	340247	Identifier	getthimmed12		339262	0					
ANR	340248	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	340249	Argument	ao -> a [ 2 ]		339262	0					
ANR	340250	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	340251	PtrMemberAccess	ao -> a		339262	0					
ANR	340252	Identifier	ao		339262	0					
ANR	340253	Identifier	a		339262	1					
ANR	340254	PrimaryExpression	2		339262	1					
ANR	340255	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1469:3:29627:29663	339262	2	True				
ANR	340256	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	340257	Callee	std_32bit_2reg		339262	0					
ANR	340258	Identifier	std_32bit_2reg		339262	0					
ANR	340259	ArgumentList	ao		339262	1					
ANR	340260	Argument	ao		339262	0					
ANR	340261	Identifier	ao		339262	0					
ANR	340262	Argument	m		339262	1					
ANR	340263	Identifier	m		339262	0					
ANR	340264	Argument	false		339262	2					
ANR	340265	Identifier	false		339262	0					
ANR	340266	BreakStatement	break ;	1471:3:29680:29685	339262	4	True				
ANR	340267	Label	case THUMB_REG_REG :	1472:2:29689:29707	339262	5	True				
ANR	340268	Identifier	THUMB_REG_REG		339262	0					
ANR	340269	CompoundStatement		180:22:3850:3850	339262	6					
ANR	340270	ExpressionStatement	ao -> o = 0x4041	1473:3:29714:29728	339262	0	True				
ANR	340271	AssignmentExpression	ao -> o = 0x4041		339262	0		=			
ANR	340272	PtrMemberAccess	ao -> o		339262	0					
ANR	340273	Identifier	ao		339262	0					
ANR	340274	Identifier	o		339262	1					
ANR	340275	PrimaryExpression	0x4041		339262	1					
ANR	340276	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	340277	Condition	"std_16bit_2reg ( ao , m )"	1474:7:29737:29758	339262	0	True				
ANR	340278	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	340279	Callee	std_16bit_2reg		339262	0					
ANR	340280	Identifier	std_16bit_2reg		339262	0					
ANR	340281	ArgumentList	ao		339262	1					
ANR	340282	Argument	ao		339262	0					
ANR	340283	Identifier	ao		339262	0					
ANR	340284	Argument	m		339262	1					
ANR	340285	Identifier	m		339262	0					
ANR	340286	CompoundStatement		182:31:3902:3902	339262	1					
ANR	340287	ReturnStatement	return 2 ;	1475:4:29767:29775	339262	0	True				
ANR	340288	PrimaryExpression	2		339262	0					
ANR	340289	ExpressionStatement	std_opt_2 ( ao )	1477:3:29785:29799	339262	2	True				
ANR	340290	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	340291	Callee	std_opt_2		339262	0					
ANR	340292	Identifier	std_opt_2		339262	0					
ANR	340293	ArgumentList	ao		339262	1					
ANR	340294	Argument	ao		339262	0					
ANR	340295	Identifier	ao		339262	0					
ANR	340296	Label	case THUMB_REG_REG_REG :	1480:2:29845:29867	339262	7	True				
ANR	340297	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	340298	CompoundStatement		188:26:4010:4010	339262	8					
ANR	340299	ExpressionStatement	ao -> o = 0x40eb0000	1481:3:29874:29892	339262	0	True				
ANR	340300	AssignmentExpression	ao -> o = 0x40eb0000		339262	0		=			
ANR	340301	PtrMemberAccess	ao -> o		339262	0					
ANR	340302	Identifier	ao		339262	0					
ANR	340303	Identifier	o		339262	1					
ANR	340304	PrimaryExpression	0x40eb0000		339262	1					
ANR	340305	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1482:3:29897:29933	339262	1	True				
ANR	340306	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	340307	Callee	std_32bit_3reg		339262	0					
ANR	340308	Identifier	std_32bit_3reg		339262	0					
ANR	340309	ArgumentList	ao		339262	1					
ANR	340310	Argument	ao		339262	0					
ANR	340311	Identifier	ao		339262	0					
ANR	340312	Argument	m		339262	1					
ANR	340313	Identifier	m		339262	0					
ANR	340314	Argument	false		339262	2					
ANR	340315	Identifier	false		339262	0					
ANR	340316	BreakStatement	break ;	1484:3:29950:29955	339262	9	True				
ANR	340317	Label	case THUMB_REG_REG_SHIFT :	1485:2:29959:29983	339262	10	True				
ANR	340318	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	340319	CompoundStatement		193:28:4126:4126	339262	11					
ANR	340320	ExpressionStatement	std_opt_3 ( ao )	1486:3:29990:30004	339262	0	True				
ANR	340321	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	340322	Callee	std_opt_3		339262	0					
ANR	340323	Identifier	std_opt_3		339262	0					
ANR	340324	ArgumentList	ao		339262	1					
ANR	340325	Argument	ao		339262	0					
ANR	340326	Identifier	ao		339262	0					
ANR	340327	Label	case THUMB_REG_REG_REG_SHIFT :	1490:2:30080:30108	339262	12	True				
ANR	340328	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	340329	CompoundStatement		198:32:4251:4251	339262	13					
ANR	340330	ExpressionStatement	ao -> o = 0x40eb0000	1491:3:30115:30133	339262	0	True				
ANR	340331	AssignmentExpression	ao -> o = 0x40eb0000		339262	0		=			
ANR	340332	PtrMemberAccess	ao -> o		339262	0					
ANR	340333	Identifier	ao		339262	0					
ANR	340334	Identifier	o		339262	1					
ANR	340335	PrimaryExpression	0x40eb0000		339262	1					
ANR	340336	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1492:3:30138:30172	339262	1	True				
ANR	340337	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	340338	Callee	std_32bit_3reg		339262	0					
ANR	340339	Identifier	std_32bit_3reg		339262	0					
ANR	340340	ArgumentList	ao		339262	1					
ANR	340341	Argument	ao		339262	0					
ANR	340342	Identifier	ao		339262	0					
ANR	340343	Argument	m		339262	1					
ANR	340344	Identifier	m		339262	0					
ANR	340345	Argument	true		339262	2					
ANR	340346	Identifier	true		339262	0					
ANR	340347	BreakStatement	break ;	1494:3:30189:30194	339262	14	True				
ANR	340348	Label	default :	1495:2:30198:30205	339262	15	True				
ANR	340349	Identifier	default		339262	0					
ANR	340350	ReturnStatement	return - 1 ;	1496:3:30210:30219	339262	16	True				
ANR	340351	UnaryOperationExpression	- 1		339262	0					
ANR	340352	UnaryOperator	-		339262	0					
ANR	340353	PrimaryExpression	1		339262	1					
ANR	340354	ElseStatement	else		339262	0					
ANR	340355	IfStatement	"if ( ( m = opmask ( ao -> op , ""adr"" , 0 ) ) )"		339262	0					
ANR	340356	Condition	"m = opmask ( ao -> op , ""adr"" , 0 )"	1499:5:30238:30268	339262	0	True				
ANR	340357	AssignmentExpression	"m = opmask ( ao -> op , ""adr"" , 0 )"		339262	0		=			
ANR	340358	Identifier	m		339262	0					
ANR	340359	CallExpression	"opmask ( ao -> op , ""adr"" , 0 )"		339262	1					
ANR	340360	Callee	opmask		339262	0					
ANR	340361	Identifier	opmask		339262	0					
ANR	340362	ArgumentList	ao -> op		339262	1					
ANR	340363	Argument	ao -> op		339262	0					
ANR	340364	PtrMemberAccess	ao -> op		339262	0					
ANR	340365	Identifier	ao		339262	0					
ANR	340366	Identifier	op		339262	1					
ANR	340367	Argument	"""adr"""		339262	1					
ANR	340368	PrimaryExpression	"""adr"""		339262	0					
ANR	340369	Argument	0		339262	2					
ANR	340370	PrimaryExpression	0		339262	0					
ANR	340371	CompoundStatement		208:2:4416:4450	339262	1					
ANR	340372	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1500:2:30275:30309	339262	0	True				
ANR	340373	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	340374	IdentifierDeclType	ut64		339262	0					
ANR	340375	Identifier	argt		339262	1					
ANR	340376	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	340377	Identifier	argt		339262	0					
ANR	340378	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	340379	Callee	thumb_selector		339262	0					
ANR	340380	Identifier	thumb_selector		339262	0					
ANR	340381	ArgumentList	ao -> a		339262	1					
ANR	340382	Argument	ao -> a		339262	0					
ANR	340383	PtrMemberAccess	ao -> a		339262	0					
ANR	340384	Identifier	ao		339262	0					
ANR	340385	Identifier	a		339262	1					
ANR	340386	SwitchStatement	switch ( argt )		339262	1					
ANR	340387	Condition	argt	1501:10:30321:30324	339262	0	True				
ANR	340388	Identifier	argt		339262	0					
ANR	340389	CompoundStatement		209:16:4468:4468	339262	1					
ANR	340390	Label	case THUMB_REG_CONST :	1502:2:30331:30351	339262	0	True				
ANR	340391	Identifier	THUMB_REG_CONST		339262	0					
ANR	340392	CompoundStatement		212:3:4531:4561	339262	1					
ANR	340393	IdentifierDeclStatement	ut8 reg = getreg ( ao -> a [ 0 ] ) ;	1503:3:30358:30385	339262	0	True				
ANR	340394	IdentifierDecl	reg = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	340395	IdentifierDeclType	ut8		339262	0					
ANR	340396	Identifier	reg		339262	1					
ANR	340397	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	340398	Identifier	reg		339262	0					
ANR	340399	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	340400	Callee	getreg		339262	0					
ANR	340401	Identifier	getreg		339262	0					
ANR	340402	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	340403	Argument	ao -> a [ 0 ]		339262	0					
ANR	340404	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	340405	PtrMemberAccess	ao -> a		339262	0					
ANR	340406	Identifier	ao		339262	0					
ANR	340407	Identifier	a		339262	1					
ANR	340408	PrimaryExpression	0		339262	1					
ANR	340409	IdentifierDeclStatement	st32 label = getnum ( ao -> a [ 1 ] ) ;	1504:3:30390:30420	339262	1	True				
ANR	340410	IdentifierDecl	label = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	340411	IdentifierDeclType	st32		339262	0					
ANR	340412	Identifier	label		339262	1					
ANR	340413	AssignmentExpression	label = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	340414	Identifier	label		339262	0					
ANR	340415	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	340416	Callee	getnum		339262	0					
ANR	340417	Identifier	getnum		339262	0					
ANR	340418	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	340419	Argument	ao -> a [ 1 ]		339262	0					
ANR	340420	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	340421	PtrMemberAccess	ao -> a		339262	0					
ANR	340422	Identifier	ao		339262	0					
ANR	340423	Identifier	a		339262	1					
ANR	340424	PrimaryExpression	1		339262	1					
ANR	340425	IfStatement	if ( ! ( m & DOTW_BIT ) && ( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 ) )		339262	2					
ANR	340426	Condition	! ( m & DOTW_BIT ) && ( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )	1505:8:30430:30511	339262	0	True				
ANR	340427	AndExpression	! ( m & DOTW_BIT ) && ( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )		339262	0		&&			
ANR	340428	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	340429	UnaryOperator	!		339262	0					
ANR	340430	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	340431	Identifier	m		339262	0					
ANR	340432	Identifier	DOTW_BIT		339262	1					
ANR	340433	AndExpression	( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )		339262	1		&&			
ANR	340434	RelationalExpression	reg < 8		339262	0		<			
ANR	340435	Identifier	reg		339262	0					
ANR	340436	PrimaryExpression	8		339262	1					
ANR	340437	AndExpression	( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )		339262	1		&&			
ANR	340438	RelationalExpression	label < 1024		339262	0		<			
ANR	340439	Identifier	label		339262	0					
ANR	340440	PrimaryExpression	1024		339262	1					
ANR	340441	AndExpression	( label >= 0 ) && ( label % 4 == 0 )		339262	1		&&			
ANR	340442	RelationalExpression	label >= 0		339262	0		>=			
ANR	340443	Identifier	label		339262	0					
ANR	340444	PrimaryExpression	0		339262	1					
ANR	340445	EqualityExpression	label % 4 == 0		339262	1		==			
ANR	340446	MultiplicativeExpression	label % 4		339262	0		%			
ANR	340447	Identifier	label		339262	0					
ANR	340448	PrimaryExpression	4		339262	1					
ANR	340449	PrimaryExpression	0		339262	1					
ANR	340450	CompoundStatement		213:92:4655:4655	339262	1					
ANR	340451	ExpressionStatement	ao -> o = 0x00a0	1506:4:30520:30534	339262	0	True				
ANR	340452	AssignmentExpression	ao -> o = 0x00a0		339262	0		=			
ANR	340453	PtrMemberAccess	ao -> o		339262	0					
ANR	340454	Identifier	ao		339262	0					
ANR	340455	Identifier	o		339262	1					
ANR	340456	PrimaryExpression	0x00a0		339262	1					
ANR	340457	ExpressionStatement	ao -> o |= reg	1507:4:30540:30552	339262	1	True				
ANR	340458	AssignmentExpression	ao -> o |= reg		339262	0		|=			
ANR	340459	PtrMemberAccess	ao -> o		339262	0					
ANR	340460	Identifier	ao		339262	0					
ANR	340461	Identifier	o		339262	1					
ANR	340462	Identifier	reg		339262	1					
ANR	340463	ExpressionStatement	ao -> o |= ( label / 4 ) << 8	1508:4:30558:30583	339262	2	True				
ANR	340464	AssignmentExpression	ao -> o |= ( label / 4 ) << 8		339262	0		|=			
ANR	340465	PtrMemberAccess	ao -> o		339262	0					
ANR	340466	Identifier	ao		339262	0					
ANR	340467	Identifier	o		339262	1					
ANR	340468	ShiftExpression	( label / 4 ) << 8		339262	1		<<			
ANR	340469	MultiplicativeExpression	label / 4		339262	0		/			
ANR	340470	Identifier	label		339262	0					
ANR	340471	PrimaryExpression	4		339262	1					
ANR	340472	PrimaryExpression	8		339262	1					
ANR	340473	ReturnStatement	return 2 ;	1509:4:30589:30597	339262	3	True				
ANR	340474	PrimaryExpression	2		339262	0					
ANR	340475	ElseStatement	else		339262	0					
ANR	340476	IfStatement	if ( ( label < 0 ) && ( label > - 4096 ) )		339262	0					
ANR	340477	Condition	( label < 0 ) && ( label > - 4096 )	1510:14:30613:30642	339262	0	True				
ANR	340478	AndExpression	( label < 0 ) && ( label > - 4096 )		339262	0		&&			
ANR	340479	RelationalExpression	label < 0		339262	0		<			
ANR	340480	Identifier	label		339262	0					
ANR	340481	PrimaryExpression	0		339262	1					
ANR	340482	RelationalExpression	label > - 4096		339262	1		>			
ANR	340483	Identifier	label		339262	0					
ANR	340484	UnaryOperationExpression	- 4096		339262	1					
ANR	340485	UnaryOperator	-		339262	0					
ANR	340486	PrimaryExpression	4096		339262	1					
ANR	340487	CompoundStatement		218:46:4786:4786	339262	1					
ANR	340488	IfStatement	if ( m & DOTN_BIT )		339262	0					
ANR	340489	Condition	m & DOTN_BIT	1511:8:30655:30666	339262	0	True				
ANR	340490	BitAndExpression	m & DOTN_BIT		339262	0		&			
ANR	340491	Identifier	m		339262	0					
ANR	340492	Identifier	DOTN_BIT		339262	1					
ANR	340493	CompoundStatement		219:22:4810:4810	339262	1					
ANR	340494	ReturnStatement	return - 1 ;	1513:5:30712:30721	339262	0	True				
ANR	340495	UnaryOperationExpression	- 1		339262	0					
ANR	340496	UnaryOperator	-		339262	0					
ANR	340497	PrimaryExpression	1		339262	1					
ANR	340498	ExpressionStatement	ao -> o = 0xaff20000	1515:4:30733:30751	339262	1	True				
ANR	340499	AssignmentExpression	ao -> o = 0xaff20000		339262	0		=			
ANR	340500	PtrMemberAccess	ao -> o		339262	0					
ANR	340501	Identifier	ao		339262	0					
ANR	340502	Identifier	o		339262	1					
ANR	340503	PrimaryExpression	0xaff20000		339262	1					
ANR	340504	ExpressionStatement	ao -> o |= reg	1516:4:30757:30769	339262	2	True				
ANR	340505	AssignmentExpression	ao -> o |= reg		339262	0		|=			
ANR	340506	PtrMemberAccess	ao -> o		339262	0					
ANR	340507	Identifier	ao		339262	0					
ANR	340508	Identifier	o		339262	1					
ANR	340509	Identifier	reg		339262	1					
ANR	340510	ExpressionStatement	ao -> o |= getthzeroimmed12 ( - label )	1517:4:30775:30809	339262	3	True				
ANR	340511	AssignmentExpression	ao -> o |= getthzeroimmed12 ( - label )		339262	0		|=			
ANR	340512	PtrMemberAccess	ao -> o		339262	0					
ANR	340513	Identifier	ao		339262	0					
ANR	340514	Identifier	o		339262	1					
ANR	340515	CallExpression	getthzeroimmed12 ( - label )		339262	1					
ANR	340516	Callee	getthzeroimmed12		339262	0					
ANR	340517	Identifier	getthzeroimmed12		339262	0					
ANR	340518	ArgumentList	- label		339262	1					
ANR	340519	Argument	- label		339262	0					
ANR	340520	UnaryOperationExpression	- label		339262	0					
ANR	340521	UnaryOperator	-		339262	0					
ANR	340522	Identifier	label		339262	1					
ANR	340523	ReturnStatement	return 4 ;	1518:4:30815:30823	339262	4	True				
ANR	340524	PrimaryExpression	4		339262	0					
ANR	340525	ElseStatement	else		339262	0					
ANR	340526	IfStatement	if ( ( label > 0 ) && ( label < 4096 ) )		339262	0					
ANR	340527	Condition	( label > 0 ) && ( label < 4096 )	1519:14:30839:30867	339262	0	True				
ANR	340528	AndExpression	( label > 0 ) && ( label < 4096 )		339262	0		&&			
ANR	340529	RelationalExpression	label > 0		339262	0		>			
ANR	340530	Identifier	label		339262	0					
ANR	340531	PrimaryExpression	0		339262	1					
ANR	340532	RelationalExpression	label < 4096		339262	1		<			
ANR	340533	Identifier	label		339262	0					
ANR	340534	PrimaryExpression	4096		339262	1					
ANR	340535	CompoundStatement		227:45:5011:5011	339262	1					
ANR	340536	IfStatement	if ( m & DOTN_BIT )		339262	0					
ANR	340537	Condition	m & DOTN_BIT	1520:8:30880:30891	339262	0	True				
ANR	340538	BitAndExpression	m & DOTN_BIT		339262	0		&			
ANR	340539	Identifier	m		339262	0					
ANR	340540	Identifier	DOTN_BIT		339262	1					
ANR	340541	CompoundStatement		228:22:5035:5035	339262	1					
ANR	340542	ReturnStatement	return - 1 ;	1522:5:30937:30946	339262	0	True				
ANR	340543	UnaryOperationExpression	- 1		339262	0					
ANR	340544	UnaryOperator	-		339262	0					
ANR	340545	PrimaryExpression	1		339262	1					
ANR	340546	ExpressionStatement	ao -> o = 0x0ff20000	1524:4:30958:30976	339262	1	True				
ANR	340547	AssignmentExpression	ao -> o = 0x0ff20000		339262	0		=			
ANR	340548	PtrMemberAccess	ao -> o		339262	0					
ANR	340549	Identifier	ao		339262	0					
ANR	340550	Identifier	o		339262	1					
ANR	340551	PrimaryExpression	0x0ff20000		339262	1					
ANR	340552	ExpressionStatement	ao -> o |= reg	1525:4:30982:30994	339262	2	True				
ANR	340553	AssignmentExpression	ao -> o |= reg		339262	0		|=			
ANR	340554	PtrMemberAccess	ao -> o		339262	0					
ANR	340555	Identifier	ao		339262	0					
ANR	340556	Identifier	o		339262	1					
ANR	340557	Identifier	reg		339262	1					
ANR	340558	ExpressionStatement	ao -> o |= getthzeroimmed12 ( label )	1526:4:31000:31033	339262	3	True				
ANR	340559	AssignmentExpression	ao -> o |= getthzeroimmed12 ( label )		339262	0		|=			
ANR	340560	PtrMemberAccess	ao -> o		339262	0					
ANR	340561	Identifier	ao		339262	0					
ANR	340562	Identifier	o		339262	1					
ANR	340563	CallExpression	getthzeroimmed12 ( label )		339262	1					
ANR	340564	Callee	getthzeroimmed12		339262	0					
ANR	340565	Identifier	getthzeroimmed12		339262	0					
ANR	340566	ArgumentList	label		339262	1					
ANR	340567	Argument	label		339262	0					
ANR	340568	Identifier	label		339262	0					
ANR	340569	ReturnStatement	return 4 ;	1527:4:31039:31047	339262	4	True				
ANR	340570	PrimaryExpression	4		339262	0					
ANR	340571	ReturnStatement	return - 1 ;	1529:3:31057:31066	339262	3	True				
ANR	340572	UnaryOperationExpression	- 1		339262	0					
ANR	340573	UnaryOperator	-		339262	0					
ANR	340574	PrimaryExpression	1		339262	1					
ANR	340575	BreakStatement	break ;	1531:3:31083:31088	339262	2	True				
ANR	340576	Label	default :	1532:2:31092:31099	339262	3	True				
ANR	340577	Identifier	default		339262	0					
ANR	340578	ReturnStatement	return - 1 ;	1533:3:31104:31113	339262	4	True				
ANR	340579	UnaryOperationExpression	- 1		339262	0					
ANR	340580	UnaryOperator	-		339262	0					
ANR	340581	PrimaryExpression	1		339262	1					
ANR	340582	ElseStatement	else		339262	0					
ANR	340583	IfStatement	"if ( ( m = opmask ( ao -> op , ""and"" , S_BIT ) ) )"		339262	0					
ANR	340584	Condition	"m = opmask ( ao -> op , ""and"" , S_BIT )"	1536:5:31132:31166	339262	0	True				
ANR	340585	AssignmentExpression	"m = opmask ( ao -> op , ""and"" , S_BIT )"		339262	0		=			
ANR	340586	Identifier	m		339262	0					
ANR	340587	CallExpression	"opmask ( ao -> op , ""and"" , S_BIT )"		339262	1					
ANR	340588	Callee	opmask		339262	0					
ANR	340589	Identifier	opmask		339262	0					
ANR	340590	ArgumentList	ao -> op		339262	1					
ANR	340591	Argument	ao -> op		339262	0					
ANR	340592	PtrMemberAccess	ao -> op		339262	0					
ANR	340593	Identifier	ao		339262	0					
ANR	340594	Identifier	op		339262	1					
ANR	340595	Argument	"""and"""		339262	1					
ANR	340596	PrimaryExpression	"""and"""		339262	0					
ANR	340597	Argument	S_BIT		339262	2					
ANR	340598	Identifier	S_BIT		339262	0					
ANR	340599	CompoundStatement		245:2:5314:5348	339262	1					
ANR	340600	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1537:2:31173:31207	339262	0	True				
ANR	340601	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	340602	IdentifierDeclType	ut64		339262	0					
ANR	340603	Identifier	argt		339262	1					
ANR	340604	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	340605	Identifier	argt		339262	0					
ANR	340606	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	340607	Callee	thumb_selector		339262	0					
ANR	340608	Identifier	thumb_selector		339262	0					
ANR	340609	ArgumentList	ao -> a		339262	1					
ANR	340610	Argument	ao -> a		339262	0					
ANR	340611	PtrMemberAccess	ao -> a		339262	0					
ANR	340612	Identifier	ao		339262	0					
ANR	340613	Identifier	a		339262	1					
ANR	340614	SwitchStatement	switch ( argt )		339262	1					
ANR	340615	Condition	argt	1538:10:31219:31222	339262	0	True				
ANR	340616	Identifier	argt		339262	0					
ANR	340617	CompoundStatement		246:16:5366:5366	339262	1					
ANR	340618	Label	case THUMB_REG_REG :	1539:2:31229:31247	339262	0	True				
ANR	340619	Identifier	THUMB_REG_REG		339262	0					
ANR	340620	CompoundStatement		247:22:5390:5390	339262	1					
ANR	340621	ExpressionStatement	ao -> o = 0x0040	1540:3:31254:31268	339262	0	True				
ANR	340622	AssignmentExpression	ao -> o = 0x0040		339262	0		=			
ANR	340623	PtrMemberAccess	ao -> o		339262	0					
ANR	340624	Identifier	ao		339262	0					
ANR	340625	Identifier	o		339262	1					
ANR	340626	PrimaryExpression	0x0040		339262	1					
ANR	340627	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	340628	Condition	"std_16bit_2reg ( ao , m )"	1541:7:31277:31298	339262	0	True				
ANR	340629	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	340630	Callee	std_16bit_2reg		339262	0					
ANR	340631	Identifier	std_16bit_2reg		339262	0					
ANR	340632	ArgumentList	ao		339262	1					
ANR	340633	Argument	ao		339262	0					
ANR	340634	Identifier	ao		339262	0					
ANR	340635	Argument	m		339262	1					
ANR	340636	Identifier	m		339262	0					
ANR	340637	CompoundStatement		249:31:5442:5442	339262	1					
ANR	340638	ReturnStatement	return 2 ;	1542:4:31307:31315	339262	0	True				
ANR	340639	PrimaryExpression	2		339262	0					
ANR	340640	ExpressionStatement	std_opt_2 ( ao )	1544:3:31325:31339	339262	2	True				
ANR	340641	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	340642	Callee	std_opt_2		339262	0					
ANR	340643	Identifier	std_opt_2		339262	0					
ANR	340644	ArgumentList	ao		339262	1					
ANR	340645	Argument	ao		339262	0					
ANR	340646	Identifier	ao		339262	0					
ANR	340647	Label	case THUMB_REG_REG_REG :	1547:2:31385:31407	339262	2	True				
ANR	340648	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	340649	CompoundStatement		255:26:5550:5550	339262	3					
ANR	340650	ExpressionStatement	ao -> o = 0x00ea0000	1548:3:31414:31432	339262	0	True				
ANR	340651	AssignmentExpression	ao -> o = 0x00ea0000		339262	0		=			
ANR	340652	PtrMemberAccess	ao -> o		339262	0					
ANR	340653	Identifier	ao		339262	0					
ANR	340654	Identifier	o		339262	1					
ANR	340655	PrimaryExpression	0x00ea0000		339262	1					
ANR	340656	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1549:3:31437:31473	339262	1	True				
ANR	340657	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	340658	Callee	std_32bit_3reg		339262	0					
ANR	340659	Identifier	std_32bit_3reg		339262	0					
ANR	340660	ArgumentList	ao		339262	1					
ANR	340661	Argument	ao		339262	0					
ANR	340662	Identifier	ao		339262	0					
ANR	340663	Argument	m		339262	1					
ANR	340664	Identifier	m		339262	0					
ANR	340665	Argument	false		339262	2					
ANR	340666	Identifier	false		339262	0					
ANR	340667	BreakStatement	break ;	1551:3:31490:31495	339262	4	True				
ANR	340668	Label	case THUMB_REG_CONST :	1552:2:31499:31519	339262	5	True				
ANR	340669	Identifier	THUMB_REG_CONST		339262	0					
ANR	340670	CompoundStatement		260:24:5662:5662	339262	6					
ANR	340671	ExpressionStatement	std_opt_2 ( ao )	1553:3:31526:31540	339262	0	True				
ANR	340672	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	340673	Callee	std_opt_2		339262	0					
ANR	340674	Identifier	std_opt_2		339262	0					
ANR	340675	ArgumentList	ao		339262	1					
ANR	340676	Argument	ao		339262	0					
ANR	340677	Identifier	ao		339262	0					
ANR	340678	Label	case THUMB_REG_REG_CONST :	1556:2:31586:31610	339262	7	True				
ANR	340679	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	340680	CompoundStatement		265:3:5758:5792	339262	8					
ANR	340681	IdentifierDeclStatement	ut32 imm = getthimmed12 ( ao -> a [ 2 ] ) ;	1557:3:31617:31651	339262	0	True				
ANR	340682	IdentifierDecl	imm = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	340683	IdentifierDeclType	ut32		339262	0					
ANR	340684	Identifier	imm		339262	1					
ANR	340685	AssignmentExpression	imm = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	340686	Identifier	imm		339262	0					
ANR	340687	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	340688	Callee	getthimmed12		339262	0					
ANR	340689	Identifier	getthimmed12		339262	0					
ANR	340690	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	340691	Argument	ao -> a [ 2 ]		339262	0					
ANR	340692	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	340693	PtrMemberAccess	ao -> a		339262	0					
ANR	340694	Identifier	ao		339262	0					
ANR	340695	Identifier	a		339262	1					
ANR	340696	PrimaryExpression	2		339262	1					
ANR	340697	ExpressionStatement	ao -> o = 0x00f00000	1558:3:31656:31674	339262	1	True				
ANR	340698	AssignmentExpression	ao -> o = 0x00f00000		339262	0		=			
ANR	340699	PtrMemberAccess	ao -> o		339262	0					
ANR	340700	Identifier	ao		339262	0					
ANR	340701	Identifier	o		339262	1					
ANR	340702	PrimaryExpression	0x00f00000		339262	1					
ANR	340703	ExpressionStatement	ao -> o |= imm	1559:3:31679:31691	339262	2	True				
ANR	340704	AssignmentExpression	ao -> o |= imm		339262	0		|=			
ANR	340705	PtrMemberAccess	ao -> o		339262	0					
ANR	340706	Identifier	ao		339262	0					
ANR	340707	Identifier	o		339262	1					
ANR	340708	Identifier	imm		339262	1					
ANR	340709	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1560:3:31696:31732	339262	3	True				
ANR	340710	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	340711	Callee	std_32bit_2reg		339262	0					
ANR	340712	Identifier	std_32bit_2reg		339262	0					
ANR	340713	ArgumentList	ao		339262	1					
ANR	340714	Argument	ao		339262	0					
ANR	340715	Identifier	ao		339262	0					
ANR	340716	Argument	m		339262	1					
ANR	340717	Identifier	m		339262	0					
ANR	340718	Argument	false		339262	2					
ANR	340719	Identifier	false		339262	0					
ANR	340720	BreakStatement	break ;	1562:3:31749:31754	339262	9	True				
ANR	340721	Label	case THUMB_REG_REG_SHIFT :	1563:2:31758:31782	339262	10	True				
ANR	340722	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	340723	CompoundStatement		271:28:5925:5925	339262	11					
ANR	340724	ExpressionStatement	std_opt_3 ( ao )	1564:3:31789:31803	339262	0	True				
ANR	340725	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	340726	Callee	std_opt_3		339262	0					
ANR	340727	Identifier	std_opt_3		339262	0					
ANR	340728	ArgumentList	ao		339262	1					
ANR	340729	Argument	ao		339262	0					
ANR	340730	Identifier	ao		339262	0					
ANR	340731	Label	case THUMB_REG_REG_REG_SHIFT :	1567:2:31849:31877	339262	12	True				
ANR	340732	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	340733	CompoundStatement		275:32:6020:6020	339262	13					
ANR	340734	ExpressionStatement	ao -> o = 0x00ea0000	1568:3:31884:31902	339262	0	True				
ANR	340735	AssignmentExpression	ao -> o = 0x00ea0000		339262	0		=			
ANR	340736	PtrMemberAccess	ao -> o		339262	0					
ANR	340737	Identifier	ao		339262	0					
ANR	340738	Identifier	o		339262	1					
ANR	340739	PrimaryExpression	0x00ea0000		339262	1					
ANR	340740	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1569:3:31907:31942	339262	1	True				
ANR	340741	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	340742	Callee	std_32bit_3reg		339262	0					
ANR	340743	Identifier	std_32bit_3reg		339262	0					
ANR	340744	ArgumentList	ao		339262	1					
ANR	340745	Argument	ao		339262	0					
ANR	340746	Identifier	ao		339262	0					
ANR	340747	Argument	m		339262	1					
ANR	340748	Identifier	m		339262	0					
ANR	340749	Argument	true		339262	2					
ANR	340750	Identifier	true		339262	0					
ANR	340751	BreakStatement	break ;	1571:3:31959:31964	339262	14	True				
ANR	340752	Label	default :	1572:2:31968:31975	339262	15	True				
ANR	340753	Identifier	default		339262	0					
ANR	340754	ReturnStatement	return - 1 ;	1573:3:31980:31989	339262	16	True				
ANR	340755	UnaryOperationExpression	- 1		339262	0					
ANR	340756	UnaryOperator	-		339262	0					
ANR	340757	PrimaryExpression	1		339262	1					
ANR	340758	ElseStatement	else		339262	0					
ANR	340759	IfStatement	"if ( ( m = opmask ( ao -> op , ""asr"" , S_BIT ) ) )"		339262	0					
ANR	340760	Condition	"m = opmask ( ao -> op , ""asr"" , S_BIT )"	1576:5:32008:32042	339262	0	True				
ANR	340761	AssignmentExpression	"m = opmask ( ao -> op , ""asr"" , S_BIT )"		339262	0		=			
ANR	340762	Identifier	m		339262	0					
ANR	340763	CallExpression	"opmask ( ao -> op , ""asr"" , S_BIT )"		339262	1					
ANR	340764	Callee	opmask		339262	0					
ANR	340765	Identifier	opmask		339262	0					
ANR	340766	ArgumentList	ao -> op		339262	1					
ANR	340767	Argument	ao -> op		339262	0					
ANR	340768	PtrMemberAccess	ao -> op		339262	0					
ANR	340769	Identifier	ao		339262	0					
ANR	340770	Identifier	op		339262	1					
ANR	340771	Argument	"""asr"""		339262	1					
ANR	340772	PrimaryExpression	"""asr"""		339262	0					
ANR	340773	Argument	S_BIT		339262	2					
ANR	340774	Identifier	S_BIT		339262	0					
ANR	340775	CompoundStatement		285:2:6190:6224	339262	1					
ANR	340776	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1577:2:32049:32083	339262	0	True				
ANR	340777	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	340778	IdentifierDeclType	ut64		339262	0					
ANR	340779	Identifier	argt		339262	1					
ANR	340780	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	340781	Identifier	argt		339262	0					
ANR	340782	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	340783	Callee	thumb_selector		339262	0					
ANR	340784	Identifier	thumb_selector		339262	0					
ANR	340785	ArgumentList	ao -> a		339262	1					
ANR	340786	Argument	ao -> a		339262	0					
ANR	340787	PtrMemberAccess	ao -> a		339262	0					
ANR	340788	Identifier	ao		339262	0					
ANR	340789	Identifier	a		339262	1					
ANR	340790	SwitchStatement	switch ( argt )		339262	1					
ANR	340791	Condition	argt	1578:10:32095:32098	339262	0	True				
ANR	340792	Identifier	argt		339262	0					
ANR	340793	CompoundStatement		286:16:6242:6242	339262	1					
ANR	340794	Label	case THUMB_REG_REG_CONST :	1579:2:32105:32129	339262	0	True				
ANR	340795	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	340796	CompoundStatement		290:3:6343:6371	339262	1					
ANR	340797	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1580:3:32136:32164	339262	0	True				
ANR	340798	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	340799	IdentifierDeclType	ut8		339262	0					
ANR	340800	Identifier	reg1		339262	1					
ANR	340801	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	340802	Identifier	reg1		339262	0					
ANR	340803	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	340804	Callee	getreg		339262	0					
ANR	340805	Identifier	getreg		339262	0					
ANR	340806	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	340807	Argument	ao -> a [ 0 ]		339262	0					
ANR	340808	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	340809	PtrMemberAccess	ao -> a		339262	0					
ANR	340810	Identifier	ao		339262	0					
ANR	340811	Identifier	a		339262	1					
ANR	340812	PrimaryExpression	0		339262	1					
ANR	340813	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1581:3:32169:32197	339262	1	True				
ANR	340814	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	340815	IdentifierDeclType	ut8		339262	0					
ANR	340816	Identifier	reg2		339262	1					
ANR	340817	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	340818	Identifier	reg2		339262	0					
ANR	340819	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	340820	Callee	getreg		339262	0					
ANR	340821	Identifier	getreg		339262	0					
ANR	340822	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	340823	Argument	ao -> a [ 1 ]		339262	0					
ANR	340824	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	340825	PtrMemberAccess	ao -> a		339262	0					
ANR	340826	Identifier	ao		339262	0					
ANR	340827	Identifier	a		339262	1					
ANR	340828	PrimaryExpression	1		339262	1					
ANR	340829	IdentifierDeclStatement	ut32 imm = getnum ( ao -> a [ 2 ] ) ;	1582:3:32202:32230	339262	2	True				
ANR	340830	IdentifierDecl	imm = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	340831	IdentifierDeclType	ut32		339262	0					
ANR	340832	Identifier	imm		339262	1					
ANR	340833	AssignmentExpression	imm = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	340834	Identifier	imm		339262	0					
ANR	340835	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	340836	Callee	getnum		339262	0					
ANR	340837	Identifier	getnum		339262	0					
ANR	340838	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	340839	Argument	ao -> a [ 2 ]		339262	0					
ANR	340840	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	340841	PtrMemberAccess	ao -> a		339262	0					
ANR	340842	Identifier	ao		339262	0					
ANR	340843	Identifier	a		339262	1					
ANR	340844	PrimaryExpression	2		339262	1					
ANR	340845	IfStatement	if ( ( ( int ) imm < 1 ) && ( ( int ) imm > 32 ) )		339262	3					
ANR	340846	Condition	( ( int ) imm < 1 ) && ( ( int ) imm > 32 )	1583:7:32239:32271	339262	0	True				
ANR	340847	AndExpression	( ( int ) imm < 1 ) && ( ( int ) imm > 32 )		339262	0		&&			
ANR	340848	RelationalExpression	( int ) imm < 1		339262	0		<			
ANR	340849	CastExpression	( int ) imm		339262	0					
ANR	340850	CastTarget	int		339262	0					
ANR	340851	Identifier	imm		339262	1					
ANR	340852	PrimaryExpression	1		339262	1					
ANR	340853	RelationalExpression	( int ) imm > 32		339262	1		>			
ANR	340854	CastExpression	( int ) imm		339262	0					
ANR	340855	CastTarget	int		339262	0					
ANR	340856	Identifier	imm		339262	1					
ANR	340857	PrimaryExpression	32		339262	1					
ANR	340858	CompoundStatement		291:42:6415:6415	339262	1					
ANR	340859	ReturnStatement	return - 1 ;	1584:4:32280:32289	339262	0	True				
ANR	340860	UnaryOperationExpression	- 1		339262	0					
ANR	340861	UnaryOperator	-		339262	0					
ANR	340862	PrimaryExpression	1		339262	1					
ANR	340863	ExpressionStatement	ao -> o = 0x0010	1586:3:32299:32313	339262	4	True				
ANR	340864	AssignmentExpression	ao -> o = 0x0010		339262	0		=			
ANR	340865	PtrMemberAccess	ao -> o		339262	0					
ANR	340866	Identifier	ao		339262	0					
ANR	340867	Identifier	o		339262	1					
ANR	340868	PrimaryExpression	0x0010		339262	1					
ANR	340869	ExpressionStatement	ao -> o |= ( imm & 0x3 ) << 14	1587:3:32318:32344	339262	5	True				
ANR	340870	AssignmentExpression	ao -> o |= ( imm & 0x3 ) << 14		339262	0		|=			
ANR	340871	PtrMemberAccess	ao -> o		339262	0					
ANR	340872	Identifier	ao		339262	0					
ANR	340873	Identifier	o		339262	1					
ANR	340874	ShiftExpression	( imm & 0x3 ) << 14		339262	1		<<			
ANR	340875	BitAndExpression	imm & 0x3		339262	0		&			
ANR	340876	Identifier	imm		339262	0					
ANR	340877	PrimaryExpression	0x3		339262	1					
ANR	340878	PrimaryExpression	14		339262	1					
ANR	340879	ExpressionStatement	ao -> o |= ( imm & 0x1c ) >> 2	1588:3:32349:32375	339262	6	True				
ANR	340880	AssignmentExpression	ao -> o |= ( imm & 0x1c ) >> 2		339262	0		|=			
ANR	340881	PtrMemberAccess	ao -> o		339262	0					
ANR	340882	Identifier	ao		339262	0					
ANR	340883	Identifier	o		339262	1					
ANR	340884	ShiftExpression	( imm & 0x1c ) >> 2		339262	1		>>			
ANR	340885	BitAndExpression	imm & 0x1c		339262	0		&			
ANR	340886	Identifier	imm		339262	0					
ANR	340887	PrimaryExpression	0x1c		339262	1					
ANR	340888	PrimaryExpression	2		339262	1					
ANR	340889	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	7					
ANR	340890	Condition	"std_16bit_2reg ( ao , m )"	1589:7:32384:32405	339262	0	True				
ANR	340891	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	340892	Callee	std_16bit_2reg		339262	0					
ANR	340893	Identifier	std_16bit_2reg		339262	0					
ANR	340894	ArgumentList	ao		339262	1					
ANR	340895	Argument	ao		339262	0					
ANR	340896	Identifier	ao		339262	0					
ANR	340897	Argument	m		339262	1					
ANR	340898	Identifier	m		339262	0					
ANR	340899	CompoundStatement		297:31:6549:6549	339262	1					
ANR	340900	ReturnStatement	return 2 ;	1590:4:32414:32422	339262	0	True				
ANR	340901	PrimaryExpression	2		339262	0					
ANR	340902	ExpressionStatement	ao -> o = 0x4fea2000	1592:3:32432:32450	339262	8	True				
ANR	340903	AssignmentExpression	ao -> o = 0x4fea2000		339262	0		=			
ANR	340904	PtrMemberAccess	ao -> o		339262	0					
ANR	340905	Identifier	ao		339262	0					
ANR	340906	Identifier	o		339262	1					
ANR	340907	PrimaryExpression	0x4fea2000		339262	1					
ANR	340908	ExpressionStatement	ao -> o |= reg1	1593:3:32455:32468	339262	9	True				
ANR	340909	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	340910	PtrMemberAccess	ao -> o		339262	0					
ANR	340911	Identifier	ao		339262	0					
ANR	340912	Identifier	o		339262	1					
ANR	340913	Identifier	reg1		339262	1					
ANR	340914	ExpressionStatement	ao -> o |= reg2 << 8	1594:3:32473:32491	339262	10	True				
ANR	340915	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	340916	PtrMemberAccess	ao -> o		339262	0					
ANR	340917	Identifier	ao		339262	0					
ANR	340918	Identifier	o		339262	1					
ANR	340919	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	340920	Identifier	reg2		339262	0					
ANR	340921	PrimaryExpression	8		339262	1					
ANR	340922	ExpressionStatement	ao -> o |= ( imm & 0x3 ) << 14	1595:3:32496:32522	339262	11	True				
ANR	340923	AssignmentExpression	ao -> o |= ( imm & 0x3 ) << 14		339262	0		|=			
ANR	340924	PtrMemberAccess	ao -> o		339262	0					
ANR	340925	Identifier	ao		339262	0					
ANR	340926	Identifier	o		339262	1					
ANR	340927	ShiftExpression	( imm & 0x3 ) << 14		339262	1		<<			
ANR	340928	BitAndExpression	imm & 0x3		339262	0		&			
ANR	340929	Identifier	imm		339262	0					
ANR	340930	PrimaryExpression	0x3		339262	1					
ANR	340931	PrimaryExpression	14		339262	1					
ANR	340932	ExpressionStatement	ao -> o |= ( imm & 0x1c ) << 2	1596:3:32527:32553	339262	12	True				
ANR	340933	AssignmentExpression	ao -> o |= ( imm & 0x1c ) << 2		339262	0		|=			
ANR	340934	PtrMemberAccess	ao -> o		339262	0					
ANR	340935	Identifier	ao		339262	0					
ANR	340936	Identifier	o		339262	1					
ANR	340937	ShiftExpression	( imm & 0x1c ) << 2		339262	1		<<			
ANR	340938	BitAndExpression	imm & 0x1c		339262	0		&			
ANR	340939	Identifier	imm		339262	0					
ANR	340940	PrimaryExpression	0x1c		339262	1					
ANR	340941	PrimaryExpression	2		339262	1					
ANR	340942	IfStatement	if ( m & S_BIT )		339262	13					
ANR	340943	Condition	m & S_BIT	1597:7:32562:32570	339262	0	True				
ANR	340944	BitAndExpression	m & S_BIT		339262	0		&			
ANR	340945	Identifier	m		339262	0					
ANR	340946	Identifier	S_BIT		339262	1					
ANR	340947	CompoundStatement		305:18:6714:6714	339262	1					
ANR	340948	ExpressionStatement	ao -> o |= 1 << 28	1598:4:32579:32595	339262	0	True				
ANR	340949	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	340950	PtrMemberAccess	ao -> o		339262	0					
ANR	340951	Identifier	ao		339262	0					
ANR	340952	Identifier	o		339262	1					
ANR	340953	ShiftExpression	1 << 28		339262	1		<<			
ANR	340954	PrimaryExpression	1		339262	0					
ANR	340955	PrimaryExpression	28		339262	1					
ANR	340956	ReturnStatement	return 4 ;	1600:3:32605:32613	339262	14	True				
ANR	340957	PrimaryExpression	4		339262	0					
ANR	340958	BreakStatement	break ;	1602:3:32630:32635	339262	2	True				
ANR	340959	Label	case THUMB_REG_REG :	1603:2:32639:32657	339262	3	True				
ANR	340960	Identifier	THUMB_REG_REG		339262	0					
ANR	340961	CompoundStatement		311:22:6800:6800	339262	4					
ANR	340962	ExpressionStatement	ao -> o = 0x0041	1604:3:32664:32678	339262	0	True				
ANR	340963	AssignmentExpression	ao -> o = 0x0041		339262	0		=			
ANR	340964	PtrMemberAccess	ao -> o		339262	0					
ANR	340965	Identifier	ao		339262	0					
ANR	340966	Identifier	o		339262	1					
ANR	340967	PrimaryExpression	0x0041		339262	1					
ANR	340968	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	340969	Condition	"std_16bit_2reg ( ao , m )"	1605:7:32687:32708	339262	0	True				
ANR	340970	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	340971	Callee	std_16bit_2reg		339262	0					
ANR	340972	Identifier	std_16bit_2reg		339262	0					
ANR	340973	ArgumentList	ao		339262	1					
ANR	340974	Argument	ao		339262	0					
ANR	340975	Identifier	ao		339262	0					
ANR	340976	Argument	m		339262	1					
ANR	340977	Identifier	m		339262	0					
ANR	340978	CompoundStatement		313:31:6852:6852	339262	1					
ANR	340979	ReturnStatement	return 2 ;	1606:4:32717:32725	339262	0	True				
ANR	340980	PrimaryExpression	2		339262	0					
ANR	340981	ExpressionStatement	std_opt_2 ( ao )	1608:3:32735:32749	339262	2	True				
ANR	340982	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	340983	Callee	std_opt_2		339262	0					
ANR	340984	Identifier	std_opt_2		339262	0					
ANR	340985	ArgumentList	ao		339262	1					
ANR	340986	Argument	ao		339262	0					
ANR	340987	Identifier	ao		339262	0					
ANR	340988	Label	case THUMB_REG_REG_REG :	1611:2:32795:32817	339262	5	True				
ANR	340989	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	340990	CompoundStatement		319:26:6960:6960	339262	6					
ANR	340991	ExpressionStatement	ao -> o = 0x40fa00f0	1612:3:32824:32842	339262	0	True				
ANR	340992	AssignmentExpression	ao -> o = 0x40fa00f0		339262	0		=			
ANR	340993	PtrMemberAccess	ao -> o		339262	0					
ANR	340994	Identifier	ao		339262	0					
ANR	340995	Identifier	o		339262	1					
ANR	340996	PrimaryExpression	0x40fa00f0		339262	1					
ANR	340997	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1613:3:32847:32883	339262	1	True				
ANR	340998	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	340999	Callee	std_32bit_3reg		339262	0					
ANR	341000	Identifier	std_32bit_3reg		339262	0					
ANR	341001	ArgumentList	ao		339262	1					
ANR	341002	Argument	ao		339262	0					
ANR	341003	Identifier	ao		339262	0					
ANR	341004	Argument	m		339262	1					
ANR	341005	Identifier	m		339262	0					
ANR	341006	Argument	false		339262	2					
ANR	341007	Identifier	false		339262	0					
ANR	341008	BreakStatement	break ;	1615:3:32900:32905	339262	7	True				
ANR	341009	Label	default :	1616:2:32909:32916	339262	8	True				
ANR	341010	Identifier	default		339262	0					
ANR	341011	ReturnStatement	return - 1 ;	1617:3:32921:32930	339262	9	True				
ANR	341012	UnaryOperationExpression	- 1		339262	0					
ANR	341013	UnaryOperator	-		339262	0					
ANR	341014	PrimaryExpression	1		339262	1					
ANR	341015	ElseStatement	else		339262	0					
ANR	341016	IfStatement	"if ( ( m = opmask ( ao -> op , ""b"" , 0 ) ) )"		339262	0					
ANR	341017	Condition	"m = opmask ( ao -> op , ""b"" , 0 )"	1620:5:32949:32979	339262	0	True				
ANR	341018	AssignmentExpression	"m = opmask ( ao -> op , ""b"" , 0 )"		339262	0		=			
ANR	341019	Identifier	m		339262	0					
ANR	341020	CallExpression	"opmask ( ao -> op , ""b"" , 0 )"		339262	1					
ANR	341021	Callee	opmask		339262	0					
ANR	341022	Identifier	opmask		339262	0					
ANR	341023	ArgumentList	ao -> op		339262	1					
ANR	341024	Argument	ao -> op		339262	0					
ANR	341025	PtrMemberAccess	ao -> op		339262	0					
ANR	341026	Identifier	ao		339262	0					
ANR	341027	Identifier	op		339262	1					
ANR	341028	Argument	"""b"""		339262	1					
ANR	341029	PrimaryExpression	"""b"""		339262	0					
ANR	341030	Argument	0		339262	2					
ANR	341031	PrimaryExpression	0		339262	0					
ANR	341032	CompoundStatement		329:2:7127:7161	339262	1					
ANR	341033	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1621:2:32986:33020	339262	0	True				
ANR	341034	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	341035	IdentifierDeclType	ut64		339262	0					
ANR	341036	Identifier	argt		339262	1					
ANR	341037	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	341038	Identifier	argt		339262	0					
ANR	341039	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	341040	Callee	thumb_selector		339262	0					
ANR	341041	Identifier	thumb_selector		339262	0					
ANR	341042	ArgumentList	ao -> a		339262	1					
ANR	341043	Argument	ao -> a		339262	0					
ANR	341044	PtrMemberAccess	ao -> a		339262	0					
ANR	341045	Identifier	ao		339262	0					
ANR	341046	Identifier	a		339262	1					
ANR	341047	SwitchStatement	switch ( argt )		339262	1					
ANR	341048	Condition	argt	1622:10:33032:33035	339262	0	True				
ANR	341049	Identifier	argt		339262	0					
ANR	341050	CompoundStatement		330:16:7179:7179	339262	1					
ANR	341051	Label	case THUMB_CONST :	1623:2:33042:33058	339262	0	True				
ANR	341052	Identifier	THUMB_CONST		339262	0					
ANR	341053	CompoundStatement		332:3:7206:7251	339262	1					
ANR	341054	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 0 ] , off ) ;"	1624:3:33065:33110	339262	0	True				
ANR	341055	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	0					
ANR	341056	IdentifierDeclType	st32		339262	0					
ANR	341057	Identifier	offset		339262	1					
ANR	341058	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	2		=			
ANR	341059	Identifier	offset		339262	0					
ANR	341060	CallExpression	"thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	1					
ANR	341061	Callee	thumb_getoffset		339262	0					
ANR	341062	Identifier	thumb_getoffset		339262	0					
ANR	341063	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	341064	Argument	ao -> a [ 0 ]		339262	0					
ANR	341065	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	341066	PtrMemberAccess	ao -> a		339262	0					
ANR	341067	Identifier	ao		339262	0					
ANR	341068	Identifier	a		339262	1					
ANR	341069	PrimaryExpression	0		339262	1					
ANR	341070	Argument	off		339262	1					
ANR	341071	Identifier	off		339262	0					
ANR	341072	IfStatement	if ( offset % 2 != 0 )		339262	1					
ANR	341073	Condition	offset % 2 != 0	1625:7:33119:33133	339262	0	True				
ANR	341074	EqualityExpression	offset % 2 != 0		339262	0		!=			
ANR	341075	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	341076	Identifier	offset		339262	0					
ANR	341077	PrimaryExpression	2		339262	1					
ANR	341078	PrimaryExpression	0		339262	1					
ANR	341079	CompoundStatement		333:24:7277:7277	339262	1					
ANR	341080	ReturnStatement	return - 1 ;	1626:4:33142:33151	339262	0	True				
ANR	341081	UnaryOperationExpression	- 1		339262	0					
ANR	341082	UnaryOperator	-		339262	0					
ANR	341083	PrimaryExpression	1		339262	1					
ANR	341084	IfStatement	if ( ( m & C_BITS ) == C_BITS )		339262	2					
ANR	341085	Condition	( m & C_BITS ) == C_BITS	1629:7:33166:33187	339262	0	True				
ANR	341086	EqualityExpression	( m & C_BITS ) == C_BITS		339262	0		==			
ANR	341087	BitAndExpression	m & C_BITS		339262	0		&			
ANR	341088	Identifier	m		339262	0					
ANR	341089	Identifier	C_BITS		339262	1					
ANR	341090	Identifier	C_BITS		339262	1					
ANR	341091	CompoundStatement		337:31:7331:7331	339262	1					
ANR	341092	IfStatement	if ( ( offset >= - 2048 ) && ( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) ) )		339262	0					
ANR	341093	Condition	( offset >= - 2048 ) && ( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) )	1630:8:33200:33257	339262	0	True				
ANR	341094	AndExpression	( offset >= - 2048 ) && ( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	341095	RelationalExpression	offset >= - 2048		339262	0		>=			
ANR	341096	Identifier	offset		339262	0					
ANR	341097	UnaryOperationExpression	- 2048		339262	1					
ANR	341098	UnaryOperator	-		339262	0					
ANR	341099	PrimaryExpression	2048		339262	1					
ANR	341100	AndExpression	( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	341101	RelationalExpression	offset <= 2046		339262	0		<=			
ANR	341102	Identifier	offset		339262	0					
ANR	341103	PrimaryExpression	2046		339262	1					
ANR	341104	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	341105	UnaryOperator	!		339262	0					
ANR	341106	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	341107	Identifier	m		339262	0					
ANR	341108	Identifier	DOTW_BIT		339262	1					
ANR	341109	CompoundStatement		338:68:7401:7401	339262	1					
ANR	341110	ExpressionStatement	ao -> o = 0x00e0	1631:5:33267:33281	339262	0	True				
ANR	341111	AssignmentExpression	ao -> o = 0x00e0		339262	0		=			
ANR	341112	PtrMemberAccess	ao -> o		339262	0					
ANR	341113	Identifier	ao		339262	0					
ANR	341114	Identifier	o		339262	1					
ANR	341115	PrimaryExpression	0x00e0		339262	1					
ANR	341116	ExpressionStatement	ao -> o |= ( ( offset / 2 & 0xff ) << 8 )	1632:5:33288:33321	339262	1	True				
ANR	341117	AssignmentExpression	ao -> o |= ( ( offset / 2 & 0xff ) << 8 )		339262	0		|=			
ANR	341118	PtrMemberAccess	ao -> o		339262	0					
ANR	341119	Identifier	ao		339262	0					
ANR	341120	Identifier	o		339262	1					
ANR	341121	ShiftExpression	( offset / 2 & 0xff ) << 8		339262	1		<<			
ANR	341122	BitAndExpression	offset / 2 & 0xff		339262	0		&			
ANR	341123	MultiplicativeExpression	offset / 2		339262	0		/			
ANR	341124	Identifier	offset		339262	0					
ANR	341125	PrimaryExpression	2		339262	1					
ANR	341126	PrimaryExpression	0xff		339262	1					
ANR	341127	PrimaryExpression	8		339262	1					
ANR	341128	ExpressionStatement	ao -> o |= ( ( offset / 2 & 0x700 ) >> 8 )	1633:5:33328:33362	339262	2	True				
ANR	341129	AssignmentExpression	ao -> o |= ( ( offset / 2 & 0x700 ) >> 8 )		339262	0		|=			
ANR	341130	PtrMemberAccess	ao -> o		339262	0					
ANR	341131	Identifier	ao		339262	0					
ANR	341132	Identifier	o		339262	1					
ANR	341133	ShiftExpression	( offset / 2 & 0x700 ) >> 8		339262	1		>>			
ANR	341134	BitAndExpression	offset / 2 & 0x700		339262	0		&			
ANR	341135	MultiplicativeExpression	offset / 2		339262	0		/			
ANR	341136	Identifier	offset		339262	0					
ANR	341137	PrimaryExpression	2		339262	1					
ANR	341138	PrimaryExpression	0x700		339262	1					
ANR	341139	PrimaryExpression	8		339262	1					
ANR	341140	ReturnStatement	return 2 ;	1634:5:33369:33377	339262	3	True				
ANR	341141	PrimaryExpression	2		339262	0					
ANR	341142	IfStatement	if ( ( offset < - 16777216 ) || ( offset > 16777214 ) || ( offset % 2 != 0 ) )		339262	1					
ANR	341143	Condition	( offset < - 16777216 ) || ( offset > 16777214 ) || ( offset % 2 != 0 )	1636:8:33393:33456	339262	0	True				
ANR	341144	OrExpression	( offset < - 16777216 ) || ( offset > 16777214 ) || ( offset % 2 != 0 )		339262	0		||			
ANR	341145	RelationalExpression	offset < - 16777216		339262	0		<			
ANR	341146	Identifier	offset		339262	0					
ANR	341147	UnaryOperationExpression	- 16777216		339262	1					
ANR	341148	UnaryOperator	-		339262	0					
ANR	341149	PrimaryExpression	16777216		339262	1					
ANR	341150	OrExpression	( offset > 16777214 ) || ( offset % 2 != 0 )		339262	1		||			
ANR	341151	RelationalExpression	offset > 16777214		339262	0		>			
ANR	341152	Identifier	offset		339262	0					
ANR	341153	PrimaryExpression	16777214		339262	1					
ANR	341154	EqualityExpression	offset % 2 != 0		339262	1		!=			
ANR	341155	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	341156	Identifier	offset		339262	0					
ANR	341157	PrimaryExpression	2		339262	1					
ANR	341158	PrimaryExpression	0		339262	1					
ANR	341159	CompoundStatement		344:74:7600:7600	339262	1					
ANR	341160	ReturnStatement	return - 1 ;	1637:5:33466:33475	339262	0	True				
ANR	341161	UnaryOperationExpression	- 1		339262	0					
ANR	341162	UnaryOperator	-		339262	0					
ANR	341163	PrimaryExpression	1		339262	1					
ANR	341164	ExpressionStatement	ao -> o = 0x00f00090	1639:4:33487:33505	339262	2	True				
ANR	341165	AssignmentExpression	ao -> o = 0x00f00090		339262	0		=			
ANR	341166	PtrMemberAccess	ao -> o		339262	0					
ANR	341167	Identifier	ao		339262	0					
ANR	341168	Identifier	o		339262	1					
ANR	341169	PrimaryExpression	0x00f00090		339262	1					
ANR	341170	ExpressionStatement	ao -> o |= getthbimmed ( offset )	1640:4:33511:33539	339262	3	True				
ANR	341171	AssignmentExpression	ao -> o |= getthbimmed ( offset )		339262	0		|=			
ANR	341172	PtrMemberAccess	ao -> o		339262	0					
ANR	341173	Identifier	ao		339262	0					
ANR	341174	Identifier	o		339262	1					
ANR	341175	CallExpression	getthbimmed ( offset )		339262	1					
ANR	341176	Callee	getthbimmed		339262	0					
ANR	341177	Identifier	getthbimmed		339262	0					
ANR	341178	ArgumentList	offset		339262	1					
ANR	341179	Argument	offset		339262	0					
ANR	341180	Identifier	offset		339262	0					
ANR	341181	ReturnStatement	return 4 ;	1641:4:33545:33553	339262	4	True				
ANR	341182	PrimaryExpression	4		339262	0					
ANR	341183	ElseStatement	else		339262	0					
ANR	341184	CompoundStatement		350:10:7706:7706	339262	0					
ANR	341185	IfStatement	if ( ( offset >= - 256 ) && ( offset <= 254 ) && ( ! ( m & DOTW_BIT ) ) )		339262	0					
ANR	341186	Condition	( offset >= - 256 ) && ( offset <= 254 ) && ( ! ( m & DOTW_BIT ) )	1643:8:33575:33630	339262	0	True				
ANR	341187	AndExpression	( offset >= - 256 ) && ( offset <= 254 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	341188	RelationalExpression	offset >= - 256		339262	0		>=			
ANR	341189	Identifier	offset		339262	0					
ANR	341190	UnaryOperationExpression	- 256		339262	1					
ANR	341191	UnaryOperator	-		339262	0					
ANR	341192	PrimaryExpression	256		339262	1					
ANR	341193	AndExpression	( offset <= 254 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	341194	RelationalExpression	offset <= 254		339262	0		<=			
ANR	341195	Identifier	offset		339262	0					
ANR	341196	PrimaryExpression	254		339262	1					
ANR	341197	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	341198	UnaryOperator	!		339262	0					
ANR	341199	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	341200	Identifier	m		339262	0					
ANR	341201	Identifier	DOTW_BIT		339262	1					
ANR	341202	CompoundStatement		351:66:7774:7774	339262	1					
ANR	341203	ExpressionStatement	ao -> o = 0x00d0	1644:5:33640:33654	339262	0	True				
ANR	341204	AssignmentExpression	ao -> o = 0x00d0		339262	0		=			
ANR	341205	PtrMemberAccess	ao -> o		339262	0					
ANR	341206	Identifier	ao		339262	0					
ANR	341207	Identifier	o		339262	1					
ANR	341208	PrimaryExpression	0x00d0		339262	1					
ANR	341209	ExpressionStatement	ao -> o |= ( ut16 ) ( ( offset / 2 ) << 8 )	1645:5:33661:33694	339262	1	True				
ANR	341210	AssignmentExpression	ao -> o |= ( ut16 ) ( ( offset / 2 ) << 8 )		339262	0		|=			
ANR	341211	PtrMemberAccess	ao -> o		339262	0					
ANR	341212	Identifier	ao		339262	0					
ANR	341213	Identifier	o		339262	1					
ANR	341214	CastExpression	( ut16 ) ( ( offset / 2 ) << 8 )		339262	1					
ANR	341215	CastTarget	ut16		339262	0					
ANR	341216	ShiftExpression	( offset / 2 ) << 8		339262	1		<<			
ANR	341217	MultiplicativeExpression	offset / 2		339262	0		/			
ANR	341218	Identifier	offset		339262	0					
ANR	341219	PrimaryExpression	2		339262	1					
ANR	341220	PrimaryExpression	8		339262	1					
ANR	341221	ExpressionStatement	ao -> o |= ( ( m & C_BITS ) >> 2 )	1646:5:33701:33729	339262	2	True				
ANR	341222	AssignmentExpression	ao -> o |= ( ( m & C_BITS ) >> 2 )		339262	0		|=			
ANR	341223	PtrMemberAccess	ao -> o		339262	0					
ANR	341224	Identifier	ao		339262	0					
ANR	341225	Identifier	o		339262	1					
ANR	341226	ShiftExpression	( m & C_BITS ) >> 2		339262	1		>>			
ANR	341227	BitAndExpression	m & C_BITS		339262	0		&			
ANR	341228	Identifier	m		339262	0					
ANR	341229	Identifier	C_BITS		339262	1					
ANR	341230	PrimaryExpression	2		339262	1					
ANR	341231	ReturnStatement	return 2 ;	1647:5:33736:33744	339262	3	True				
ANR	341232	PrimaryExpression	2		339262	0					
ANR	341233	IfStatement	if ( ( offset < - 1048576 ) || ( offset > 1048574 ) || ( offset % 2 != 0 ) )		339262	1					
ANR	341234	Condition	( offset < - 1048576 ) || ( offset > 1048574 ) || ( offset % 2 != 0 )	1649:8:33760:33821	339262	0	True				
ANR	341235	OrExpression	( offset < - 1048576 ) || ( offset > 1048574 ) || ( offset % 2 != 0 )		339262	0		||			
ANR	341236	RelationalExpression	offset < - 1048576		339262	0		<			
ANR	341237	Identifier	offset		339262	0					
ANR	341238	UnaryOperationExpression	- 1048576		339262	1					
ANR	341239	UnaryOperator	-		339262	0					
ANR	341240	PrimaryExpression	1048576		339262	1					
ANR	341241	OrExpression	( offset > 1048574 ) || ( offset % 2 != 0 )		339262	1		||			
ANR	341242	RelationalExpression	offset > 1048574		339262	0		>			
ANR	341243	Identifier	offset		339262	0					
ANR	341244	PrimaryExpression	1048574		339262	1					
ANR	341245	EqualityExpression	offset % 2 != 0		339262	1		!=			
ANR	341246	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	341247	Identifier	offset		339262	0					
ANR	341248	PrimaryExpression	2		339262	1					
ANR	341249	PrimaryExpression	0		339262	1					
ANR	341250	CompoundStatement		357:72:7965:7965	339262	1					
ANR	341251	ReturnStatement	return - 1 ;	1650:5:33831:33840	339262	0	True				
ANR	341252	UnaryOperationExpression	- 1		339262	0					
ANR	341253	UnaryOperator	-		339262	0					
ANR	341254	PrimaryExpression	1		339262	1					
ANR	341255	ExpressionStatement	ao -> o = 0x00f00080	1653:4:33853:33871	339262	2	True				
ANR	341256	AssignmentExpression	ao -> o = 0x00f00080		339262	0		=			
ANR	341257	PtrMemberAccess	ao -> o		339262	0					
ANR	341258	Identifier	ao		339262	0					
ANR	341259	Identifier	o		339262	1					
ANR	341260	PrimaryExpression	0x00f00080		339262	1					
ANR	341261	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x80000 ) >> 16	1654:4:33877:33916	339262	3	True				
ANR	341262	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x80000 ) >> 16		339262	0		|=			
ANR	341263	PtrMemberAccess	ao -> o		339262	0					
ANR	341264	Identifier	ao		339262	0					
ANR	341265	Identifier	o		339262	1					
ANR	341266	ShiftExpression	( ut32 ) ( offset & 0x80000 ) >> 16		339262	1		>>			
ANR	341267	CastExpression	( ut32 ) ( offset & 0x80000 )		339262	0					
ANR	341268	CastTarget	ut32		339262	0					
ANR	341269	BitAndExpression	offset & 0x80000		339262	1		&			
ANR	341270	Identifier	offset		339262	0					
ANR	341271	PrimaryExpression	0x80000		339262	1					
ANR	341272	PrimaryExpression	16		339262	1					
ANR	341273	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x40000 ) >> 13	1655:4:33922:33961	339262	4	True				
ANR	341274	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x40000 ) >> 13		339262	0		|=			
ANR	341275	PtrMemberAccess	ao -> o		339262	0					
ANR	341276	Identifier	ao		339262	0					
ANR	341277	Identifier	o		339262	1					
ANR	341278	ShiftExpression	( ut32 ) ( offset & 0x40000 ) >> 13		339262	1		>>			
ANR	341279	CastExpression	( ut32 ) ( offset & 0x40000 )		339262	0					
ANR	341280	CastTarget	ut32		339262	0					
ANR	341281	BitAndExpression	offset & 0x40000		339262	1		&			
ANR	341282	Identifier	offset		339262	0					
ANR	341283	PrimaryExpression	0x40000		339262	1					
ANR	341284	PrimaryExpression	13		339262	1					
ANR	341285	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x3f000 ) << 12	1656:4:33967:34006	339262	5	True				
ANR	341286	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x3f000 ) << 12		339262	0		|=			
ANR	341287	PtrMemberAccess	ao -> o		339262	0					
ANR	341288	Identifier	ao		339262	0					
ANR	341289	Identifier	o		339262	1					
ANR	341290	ShiftExpression	( ut32 ) ( offset & 0x3f000 ) << 12		339262	1		<<			
ANR	341291	CastExpression	( ut32 ) ( offset & 0x3f000 )		339262	0					
ANR	341292	CastTarget	ut32		339262	0					
ANR	341293	BitAndExpression	offset & 0x3f000		339262	1		&			
ANR	341294	Identifier	offset		339262	0					
ANR	341295	PrimaryExpression	0x3f000		339262	1					
ANR	341296	PrimaryExpression	12		339262	1					
ANR	341297	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0xe00 ) >> 9	1657:4:34012:34048	339262	6	True				
ANR	341298	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0xe00 ) >> 9		339262	0		|=			
ANR	341299	PtrMemberAccess	ao -> o		339262	0					
ANR	341300	Identifier	ao		339262	0					
ANR	341301	Identifier	o		339262	1					
ANR	341302	ShiftExpression	( ut32 ) ( offset & 0xe00 ) >> 9		339262	1		>>			
ANR	341303	CastExpression	( ut32 ) ( offset & 0xe00 )		339262	0					
ANR	341304	CastTarget	ut32		339262	0					
ANR	341305	BitAndExpression	offset & 0xe00		339262	1		&			
ANR	341306	Identifier	offset		339262	0					
ANR	341307	PrimaryExpression	0xe00		339262	1					
ANR	341308	PrimaryExpression	9		339262	1					
ANR	341309	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x1fe ) << 7	1658:4:34054:34090	339262	7	True				
ANR	341310	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x1fe ) << 7		339262	0		|=			
ANR	341311	PtrMemberAccess	ao -> o		339262	0					
ANR	341312	Identifier	ao		339262	0					
ANR	341313	Identifier	o		339262	1					
ANR	341314	ShiftExpression	( ut32 ) ( offset & 0x1fe ) << 7		339262	1		<<			
ANR	341315	CastExpression	( ut32 ) ( offset & 0x1fe )		339262	0					
ANR	341316	CastTarget	ut32		339262	0					
ANR	341317	BitAndExpression	offset & 0x1fe		339262	1		&			
ANR	341318	Identifier	offset		339262	0					
ANR	341319	PrimaryExpression	0x1fe		339262	1					
ANR	341320	PrimaryExpression	7		339262	1					
ANR	341321	IfStatement	if ( offset < 0 )		339262	8					
ANR	341322	Condition	offset < 0	1659:8:34100:34109	339262	0	True				
ANR	341323	RelationalExpression	offset < 0		339262	0		<			
ANR	341324	Identifier	offset		339262	0					
ANR	341325	PrimaryExpression	0		339262	1					
ANR	341326	CompoundStatement		367:20:8253:8253	339262	1					
ANR	341327	ExpressionStatement	ao -> o |= 1 << 18	1660:5:34119:34135	339262	0	True				
ANR	341328	AssignmentExpression	ao -> o |= 1 << 18		339262	0		|=			
ANR	341329	PtrMemberAccess	ao -> o		339262	0					
ANR	341330	Identifier	ao		339262	0					
ANR	341331	Identifier	o		339262	1					
ANR	341332	ShiftExpression	1 << 18		339262	1		<<			
ANR	341333	PrimaryExpression	1		339262	0					
ANR	341334	PrimaryExpression	18		339262	1					
ANR	341335	ExpressionStatement	ao -> o |= ( ( ( m & C_BITS ) & 0xc ) << 28 )	1662:4:34147:34184	339262	9	True				
ANR	341336	AssignmentExpression	ao -> o |= ( ( ( m & C_BITS ) & 0xc ) << 28 )		339262	0		|=			
ANR	341337	PtrMemberAccess	ao -> o		339262	0					
ANR	341338	Identifier	ao		339262	0					
ANR	341339	Identifier	o		339262	1					
ANR	341340	ShiftExpression	( ( m & C_BITS ) & 0xc ) << 28		339262	1		<<			
ANR	341341	BitAndExpression	( m & C_BITS ) & 0xc		339262	0		&			
ANR	341342	BitAndExpression	m & C_BITS		339262	0		&			
ANR	341343	Identifier	m		339262	0					
ANR	341344	Identifier	C_BITS		339262	1					
ANR	341345	PrimaryExpression	0xc		339262	1					
ANR	341346	PrimaryExpression	28		339262	1					
ANR	341347	ExpressionStatement	ao -> o |= ( ( ( m & C_BITS ) & 0x30 ) << 12 )	1663:4:34190:34228	339262	10	True				
ANR	341348	AssignmentExpression	ao -> o |= ( ( ( m & C_BITS ) & 0x30 ) << 12 )		339262	0		|=			
ANR	341349	PtrMemberAccess	ao -> o		339262	0					
ANR	341350	Identifier	ao		339262	0					
ANR	341351	Identifier	o		339262	1					
ANR	341352	ShiftExpression	( ( m & C_BITS ) & 0x30 ) << 12		339262	1		<<			
ANR	341353	BitAndExpression	( m & C_BITS ) & 0x30		339262	0		&			
ANR	341354	BitAndExpression	m & C_BITS		339262	0		&			
ANR	341355	Identifier	m		339262	0					
ANR	341356	Identifier	C_BITS		339262	1					
ANR	341357	PrimaryExpression	0x30		339262	1					
ANR	341358	PrimaryExpression	12		339262	1					
ANR	341359	ReturnStatement	return 4 ;	1664:4:34234:34242	339262	11	True				
ANR	341360	PrimaryExpression	4		339262	0					
ANR	341361	BreakStatement	break ;	1667:3:34264:34269	339262	2	True				
ANR	341362	Label	default :	1668:2:34273:34280	339262	3	True				
ANR	341363	Identifier	default		339262	0					
ANR	341364	ReturnStatement	return - 1 ;	1669:3:34285:34294	339262	4	True				
ANR	341365	UnaryOperationExpression	- 1		339262	0					
ANR	341366	UnaryOperator	-		339262	0					
ANR	341367	PrimaryExpression	1		339262	1					
ANR	341368	ElseStatement	else		339262	0					
ANR	341369	IfStatement	"if ( ( m = opmask ( ao -> op , ""bl"" , 0 ) ) )"		339262	0					
ANR	341370	Condition	"m = opmask ( ao -> op , ""bl"" , 0 )"	1672:5:34313:34344	339262	0	True				
ANR	341371	AssignmentExpression	"m = opmask ( ao -> op , ""bl"" , 0 )"		339262	0		=			
ANR	341372	Identifier	m		339262	0					
ANR	341373	CallExpression	"opmask ( ao -> op , ""bl"" , 0 )"		339262	1					
ANR	341374	Callee	opmask		339262	0					
ANR	341375	Identifier	opmask		339262	0					
ANR	341376	ArgumentList	ao -> op		339262	1					
ANR	341377	Argument	ao -> op		339262	0					
ANR	341378	PtrMemberAccess	ao -> op		339262	0					
ANR	341379	Identifier	ao		339262	0					
ANR	341380	Identifier	op		339262	1					
ANR	341381	Argument	"""bl"""		339262	1					
ANR	341382	PrimaryExpression	"""bl"""		339262	0					
ANR	341383	Argument	0		339262	2					
ANR	341384	PrimaryExpression	0		339262	0					
ANR	341385	CompoundStatement		381:2:8492:8526	339262	1					
ANR	341386	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1673:2:34351:34385	339262	0	True				
ANR	341387	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	341388	IdentifierDeclType	ut64		339262	0					
ANR	341389	Identifier	argt		339262	1					
ANR	341390	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	341391	Identifier	argt		339262	0					
ANR	341392	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	341393	Callee	thumb_selector		339262	0					
ANR	341394	Identifier	thumb_selector		339262	0					
ANR	341395	ArgumentList	ao -> a		339262	1					
ANR	341396	Argument	ao -> a		339262	0					
ANR	341397	PtrMemberAccess	ao -> a		339262	0					
ANR	341398	Identifier	ao		339262	0					
ANR	341399	Identifier	a		339262	1					
ANR	341400	SwitchStatement	switch ( argt )		339262	1					
ANR	341401	Condition	argt	1674:10:34397:34400	339262	0	True				
ANR	341402	Identifier	argt		339262	0					
ANR	341403	CompoundStatement		382:16:8544:8544	339262	1					
ANR	341404	Label	case THUMB_CONST :	1675:2:34407:34423	339262	0	True				
ANR	341405	Identifier	THUMB_CONST		339262	0					
ANR	341406	CompoundStatement		384:3:8571:8616	339262	1					
ANR	341407	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 0 ] , off ) ;"	1676:3:34430:34475	339262	0	True				
ANR	341408	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	0					
ANR	341409	IdentifierDeclType	st32		339262	0					
ANR	341410	Identifier	offset		339262	1					
ANR	341411	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	2		=			
ANR	341412	Identifier	offset		339262	0					
ANR	341413	CallExpression	"thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	1					
ANR	341414	Callee	thumb_getoffset		339262	0					
ANR	341415	Identifier	thumb_getoffset		339262	0					
ANR	341416	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	341417	Argument	ao -> a [ 0 ]		339262	0					
ANR	341418	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	341419	PtrMemberAccess	ao -> a		339262	0					
ANR	341420	Identifier	ao		339262	0					
ANR	341421	Identifier	a		339262	1					
ANR	341422	PrimaryExpression	0		339262	1					
ANR	341423	Argument	off		339262	1					
ANR	341424	Identifier	off		339262	0					
ANR	341425	ExpressionStatement	ao -> o = 0x00f000d0	1677:3:34480:34498	339262	1	True				
ANR	341426	AssignmentExpression	ao -> o = 0x00f000d0		339262	0		=			
ANR	341427	PtrMemberAccess	ao -> o		339262	0					
ANR	341428	Identifier	ao		339262	0					
ANR	341429	Identifier	o		339262	1					
ANR	341430	PrimaryExpression	0x00f000d0		339262	1					
ANR	341431	IfStatement	if ( ( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 ) )		339262	2					
ANR	341432	Condition	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )	1678:7:34507:34570	339262	0	True				
ANR	341433	OrExpression	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )		339262	0		||			
ANR	341434	RelationalExpression	offset > 16777214		339262	0		>			
ANR	341435	Identifier	offset		339262	0					
ANR	341436	PrimaryExpression	16777214		339262	1					
ANR	341437	OrExpression	( offset < - 16777216 ) || ( offset % 2 != 0 )		339262	1		||			
ANR	341438	RelationalExpression	offset < - 16777216		339262	0		<			
ANR	341439	Identifier	offset		339262	0					
ANR	341440	UnaryOperationExpression	- 16777216		339262	1					
ANR	341441	UnaryOperator	-		339262	0					
ANR	341442	PrimaryExpression	16777216		339262	1					
ANR	341443	EqualityExpression	offset % 2 != 0		339262	1		!=			
ANR	341444	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	341445	Identifier	offset		339262	0					
ANR	341446	PrimaryExpression	2		339262	1					
ANR	341447	PrimaryExpression	0		339262	1					
ANR	341448	CompoundStatement		386:73:8714:8714	339262	1					
ANR	341449	ReturnStatement	return - 1 ;	1679:4:34579:34588	339262	0	True				
ANR	341450	UnaryOperationExpression	- 1		339262	0					
ANR	341451	UnaryOperator	-		339262	0					
ANR	341452	PrimaryExpression	1		339262	1					
ANR	341453	ExpressionStatement	ao -> o |= getthbimmed ( offset )	1681:3:34598:34626	339262	3	True				
ANR	341454	AssignmentExpression	ao -> o |= getthbimmed ( offset )		339262	0		|=			
ANR	341455	PtrMemberAccess	ao -> o		339262	0					
ANR	341456	Identifier	ao		339262	0					
ANR	341457	Identifier	o		339262	1					
ANR	341458	CallExpression	getthbimmed ( offset )		339262	1					
ANR	341459	Callee	getthbimmed		339262	0					
ANR	341460	Identifier	getthbimmed		339262	0					
ANR	341461	ArgumentList	offset		339262	1					
ANR	341462	Argument	offset		339262	0					
ANR	341463	Identifier	offset		339262	0					
ANR	341464	ReturnStatement	return 4 ;	1682:3:34631:34639	339262	4	True				
ANR	341465	PrimaryExpression	4		339262	0					
ANR	341466	BreakStatement	break ;	1684:3:34656:34661	339262	2	True				
ANR	341467	Label	default :	1685:2:34665:34672	339262	3	True				
ANR	341468	Identifier	default		339262	0					
ANR	341469	ReturnStatement	return - 1 ;	1686:3:34677:34686	339262	4	True				
ANR	341470	UnaryOperationExpression	- 1		339262	0					
ANR	341471	UnaryOperator	-		339262	0					
ANR	341472	PrimaryExpression	1		339262	1					
ANR	341473	ElseStatement	else		339262	0					
ANR	341474	IfStatement	"if ( ( m = opmask ( ao -> op , ""bx"" , 0 ) ) )"		339262	0					
ANR	341475	Condition	"m = opmask ( ao -> op , ""bx"" , 0 )"	1689:5:34705:34736	339262	0	True				
ANR	341476	AssignmentExpression	"m = opmask ( ao -> op , ""bx"" , 0 )"		339262	0		=			
ANR	341477	Identifier	m		339262	0					
ANR	341478	CallExpression	"opmask ( ao -> op , ""bx"" , 0 )"		339262	1					
ANR	341479	Callee	opmask		339262	0					
ANR	341480	Identifier	opmask		339262	0					
ANR	341481	ArgumentList	ao -> op		339262	1					
ANR	341482	Argument	ao -> op		339262	0					
ANR	341483	PtrMemberAccess	ao -> op		339262	0					
ANR	341484	Identifier	ao		339262	0					
ANR	341485	Identifier	op		339262	1					
ANR	341486	Argument	"""bx"""		339262	1					
ANR	341487	PrimaryExpression	"""bx"""		339262	0					
ANR	341488	Argument	0		339262	2					
ANR	341489	PrimaryExpression	0		339262	0					
ANR	341490	CompoundStatement		398:2:8884:8918	339262	1					
ANR	341491	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1690:2:34743:34777	339262	0	True				
ANR	341492	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	341493	IdentifierDeclType	ut64		339262	0					
ANR	341494	Identifier	argt		339262	1					
ANR	341495	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	341496	Identifier	argt		339262	0					
ANR	341497	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	341498	Callee	thumb_selector		339262	0					
ANR	341499	Identifier	thumb_selector		339262	0					
ANR	341500	ArgumentList	ao -> a		339262	1					
ANR	341501	Argument	ao -> a		339262	0					
ANR	341502	PtrMemberAccess	ao -> a		339262	0					
ANR	341503	Identifier	ao		339262	0					
ANR	341504	Identifier	a		339262	1					
ANR	341505	SwitchStatement	switch ( argt )		339262	1					
ANR	341506	Condition	argt	1691:10:34789:34792	339262	0	True				
ANR	341507	Identifier	argt		339262	0					
ANR	341508	CompoundStatement		399:16:8936:8936	339262	1					
ANR	341509	Label	case THUMB_REG :	1692:2:34799:34813	339262	0	True				
ANR	341510	Identifier	THUMB_REG		339262	0					
ANR	341511	CompoundStatement		401:3:8961:8990	339262	1					
ANR	341512	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	1693:3:34820:34849	339262	0	True				
ANR	341513	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	341514	IdentifierDeclType	ut32		339262	0					
ANR	341515	Identifier	reg1		339262	1					
ANR	341516	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	341517	Identifier	reg1		339262	0					
ANR	341518	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	341519	Callee	getreg		339262	0					
ANR	341520	Identifier	getreg		339262	0					
ANR	341521	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	341522	Argument	ao -> a [ 0 ]		339262	0					
ANR	341523	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	341524	PtrMemberAccess	ao -> a		339262	0					
ANR	341525	Identifier	ao		339262	0					
ANR	341526	Identifier	a		339262	1					
ANR	341527	PrimaryExpression	0		339262	1					
ANR	341528	ExpressionStatement	ao -> o = 0x0047	1694:3:34854:34868	339262	1	True				
ANR	341529	AssignmentExpression	ao -> o = 0x0047		339262	0		=			
ANR	341530	PtrMemberAccess	ao -> o		339262	0					
ANR	341531	Identifier	ao		339262	0					
ANR	341532	Identifier	o		339262	1					
ANR	341533	PrimaryExpression	0x0047		339262	1					
ANR	341534	ExpressionStatement	ao -> o |= reg1 << 11	1695:3:34873:34892	339262	2	True				
ANR	341535	AssignmentExpression	ao -> o |= reg1 << 11		339262	0		|=			
ANR	341536	PtrMemberAccess	ao -> o		339262	0					
ANR	341537	Identifier	ao		339262	0					
ANR	341538	Identifier	o		339262	1					
ANR	341539	ShiftExpression	reg1 << 11		339262	1		<<			
ANR	341540	Identifier	reg1		339262	0					
ANR	341541	PrimaryExpression	11		339262	1					
ANR	341542	ReturnStatement	return 2 ;	1696:3:34897:34905	339262	3	True				
ANR	341543	PrimaryExpression	2		339262	0					
ANR	341544	BreakStatement	break ;	1698:3:34922:34927	339262	2	True				
ANR	341545	Label	default :	1699:2:34931:34938	339262	3	True				
ANR	341546	Identifier	default		339262	0					
ANR	341547	ReturnStatement	return - 1 ;	1700:3:34943:34952	339262	4	True				
ANR	341548	UnaryOperationExpression	- 1		339262	0					
ANR	341549	UnaryOperator	-		339262	0					
ANR	341550	PrimaryExpression	1		339262	1					
ANR	341551	ElseStatement	else		339262	0					
ANR	341552	IfStatement	"if ( ( m = opmask ( ao -> op , ""blx"" , 0 ) ) )"		339262	0					
ANR	341553	Condition	"m = opmask ( ao -> op , ""blx"" , 0 )"	1703:5:34972:35004	339262	0	True				
ANR	341554	AssignmentExpression	"m = opmask ( ao -> op , ""blx"" , 0 )"		339262	0		=			
ANR	341555	Identifier	m		339262	0					
ANR	341556	CallExpression	"opmask ( ao -> op , ""blx"" , 0 )"		339262	1					
ANR	341557	Callee	opmask		339262	0					
ANR	341558	Identifier	opmask		339262	0					
ANR	341559	ArgumentList	ao -> op		339262	1					
ANR	341560	Argument	ao -> op		339262	0					
ANR	341561	PtrMemberAccess	ao -> op		339262	0					
ANR	341562	Identifier	ao		339262	0					
ANR	341563	Identifier	op		339262	1					
ANR	341564	Argument	"""blx"""		339262	1					
ANR	341565	PrimaryExpression	"""blx"""		339262	0					
ANR	341566	Argument	0		339262	2					
ANR	341567	PrimaryExpression	0		339262	0					
ANR	341568	CompoundStatement		412:2:9152:9186	339262	1					
ANR	341569	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1704:2:35011:35045	339262	0	True				
ANR	341570	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	341571	IdentifierDeclType	ut64		339262	0					
ANR	341572	Identifier	argt		339262	1					
ANR	341573	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	341574	Identifier	argt		339262	0					
ANR	341575	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	341576	Callee	thumb_selector		339262	0					
ANR	341577	Identifier	thumb_selector		339262	0					
ANR	341578	ArgumentList	ao -> a		339262	1					
ANR	341579	Argument	ao -> a		339262	0					
ANR	341580	PtrMemberAccess	ao -> a		339262	0					
ANR	341581	Identifier	ao		339262	0					
ANR	341582	Identifier	a		339262	1					
ANR	341583	SwitchStatement	switch ( argt )		339262	1					
ANR	341584	Condition	argt	1705:10:35057:35060	339262	0	True				
ANR	341585	Identifier	argt		339262	0					
ANR	341586	CompoundStatement		413:16:9204:9204	339262	1					
ANR	341587	Label	case THUMB_REG :	1706:2:35067:35081	339262	0	True				
ANR	341588	Identifier	THUMB_REG		339262	0					
ANR	341589	CompoundStatement		415:3:9229:9258	339262	1					
ANR	341590	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	1707:3:35088:35117	339262	0	True				
ANR	341591	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	341592	IdentifierDeclType	ut32		339262	0					
ANR	341593	Identifier	reg1		339262	1					
ANR	341594	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	341595	Identifier	reg1		339262	0					
ANR	341596	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	341597	Callee	getreg		339262	0					
ANR	341598	Identifier	getreg		339262	0					
ANR	341599	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	341600	Argument	ao -> a [ 0 ]		339262	0					
ANR	341601	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	341602	PtrMemberAccess	ao -> a		339262	0					
ANR	341603	Identifier	ao		339262	0					
ANR	341604	Identifier	a		339262	1					
ANR	341605	PrimaryExpression	0		339262	1					
ANR	341606	ExpressionStatement	ao -> o = 0x8047	1708:3:35122:35136	339262	1	True				
ANR	341607	AssignmentExpression	ao -> o = 0x8047		339262	0		=			
ANR	341608	PtrMemberAccess	ao -> o		339262	0					
ANR	341609	Identifier	ao		339262	0					
ANR	341610	Identifier	o		339262	1					
ANR	341611	PrimaryExpression	0x8047		339262	1					
ANR	341612	ExpressionStatement	ao -> o |= reg1 << 11	1709:3:35141:35160	339262	2	True				
ANR	341613	AssignmentExpression	ao -> o |= reg1 << 11		339262	0		|=			
ANR	341614	PtrMemberAccess	ao -> o		339262	0					
ANR	341615	Identifier	ao		339262	0					
ANR	341616	Identifier	o		339262	1					
ANR	341617	ShiftExpression	reg1 << 11		339262	1		<<			
ANR	341618	Identifier	reg1		339262	0					
ANR	341619	PrimaryExpression	11		339262	1					
ANR	341620	ReturnStatement	return 2 ;	1710:3:35165:35173	339262	3	True				
ANR	341621	PrimaryExpression	2		339262	0					
ANR	341622	BreakStatement	break ;	1712:3:35190:35195	339262	2	True				
ANR	341623	Label	case THUMB_CONST :	1713:2:35199:35215	339262	3	True				
ANR	341624	Identifier	THUMB_CONST		339262	0					
ANR	341625	CompoundStatement		422:3:9363:9408	339262	4					
ANR	341626	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 0 ] , off ) ;"	1714:3:35222:35267	339262	0	True				
ANR	341627	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	0					
ANR	341628	IdentifierDeclType	st32		339262	0					
ANR	341629	Identifier	offset		339262	1					
ANR	341630	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	2		=			
ANR	341631	Identifier	offset		339262	0					
ANR	341632	CallExpression	"thumb_getoffset ( ao -> a [ 0 ] , off )"		339262	1					
ANR	341633	Callee	thumb_getoffset		339262	0					
ANR	341634	Identifier	thumb_getoffset		339262	0					
ANR	341635	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	341636	Argument	ao -> a [ 0 ]		339262	0					
ANR	341637	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	341638	PtrMemberAccess	ao -> a		339262	0					
ANR	341639	Identifier	ao		339262	0					
ANR	341640	Identifier	a		339262	1					
ANR	341641	PrimaryExpression	0		339262	1					
ANR	341642	Argument	off		339262	1					
ANR	341643	Identifier	off		339262	0					
ANR	341644	ExpressionStatement	ao -> o = 0x00f000c0	1715:3:35272:35290	339262	1	True				
ANR	341645	AssignmentExpression	ao -> o = 0x00f000c0		339262	0		=			
ANR	341646	PtrMemberAccess	ao -> o		339262	0					
ANR	341647	Identifier	ao		339262	0					
ANR	341648	Identifier	o		339262	1					
ANR	341649	PrimaryExpression	0x00f000c0		339262	1					
ANR	341650	IfStatement	if ( ( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 ) )		339262	2					
ANR	341651	Condition	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )	1716:7:35299:35362	339262	0	True				
ANR	341652	OrExpression	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )		339262	0		||			
ANR	341653	RelationalExpression	offset > 16777214		339262	0		>			
ANR	341654	Identifier	offset		339262	0					
ANR	341655	PrimaryExpression	16777214		339262	1					
ANR	341656	OrExpression	( offset < - 16777216 ) || ( offset % 2 != 0 )		339262	1		||			
ANR	341657	RelationalExpression	offset < - 16777216		339262	0		<			
ANR	341658	Identifier	offset		339262	0					
ANR	341659	UnaryOperationExpression	- 16777216		339262	1					
ANR	341660	UnaryOperator	-		339262	0					
ANR	341661	PrimaryExpression	16777216		339262	1					
ANR	341662	EqualityExpression	offset % 2 != 0		339262	1		!=			
ANR	341663	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	341664	Identifier	offset		339262	0					
ANR	341665	PrimaryExpression	2		339262	1					
ANR	341666	PrimaryExpression	0		339262	1					
ANR	341667	CompoundStatement		424:73:9506:9506	339262	1					
ANR	341668	ReturnStatement	return - 1 ;	1717:4:35371:35380	339262	0	True				
ANR	341669	UnaryOperationExpression	- 1		339262	0					
ANR	341670	UnaryOperator	-		339262	0					
ANR	341671	PrimaryExpression	1		339262	1					
ANR	341672	ExpressionStatement	offset += off & 0x2	1719:3:35390:35409	339262	3	True				
ANR	341673	AssignmentExpression	offset += off & 0x2		339262	0		+=			
ANR	341674	Identifier	offset		339262	0					
ANR	341675	BitAndExpression	off & 0x2		339262	1		&			
ANR	341676	Identifier	off		339262	0					
ANR	341677	PrimaryExpression	0x2		339262	1					
ANR	341678	ExpressionStatement	ao -> o |= getthbimmed ( offset )	1720:3:35430:35459	339262	4	True				
ANR	341679	AssignmentExpression	ao -> o |= getthbimmed ( offset )		339262	0		|=			
ANR	341680	PtrMemberAccess	ao -> o		339262	0					
ANR	341681	Identifier	ao		339262	0					
ANR	341682	Identifier	o		339262	1					
ANR	341683	CallExpression	getthbimmed ( offset )		339262	1					
ANR	341684	Callee	getthbimmed		339262	0					
ANR	341685	Identifier	getthbimmed		339262	0					
ANR	341686	ArgumentList	offset		339262	1					
ANR	341687	Argument	offset		339262	0					
ANR	341688	Identifier	offset		339262	0					
ANR	341689	ReturnStatement	return 4 ;	1721:3:35464:35472	339262	5	True				
ANR	341690	PrimaryExpression	4		339262	0					
ANR	341691	BreakStatement	break ;	1723:3:35489:35494	339262	5	True				
ANR	341692	Label	default :	1724:2:35498:35505	339262	6	True				
ANR	341693	Identifier	default		339262	0					
ANR	341694	ReturnStatement	return - 1 ;	1725:3:35510:35519	339262	7	True				
ANR	341695	UnaryOperationExpression	- 1		339262	0					
ANR	341696	UnaryOperator	-		339262	0					
ANR	341697	PrimaryExpression	1		339262	1					
ANR	341698	ElseStatement	else		339262	0					
ANR	341699	IfStatement	"if ( ( m = opmask ( ao -> op , ""bfc"" , 0 ) ) )"		339262	0					
ANR	341700	Condition	"m = opmask ( ao -> op , ""bfc"" , 0 )"	1728:5:35538:35570	339262	0	True				
ANR	341701	AssignmentExpression	"m = opmask ( ao -> op , ""bfc"" , 0 )"		339262	0		=			
ANR	341702	Identifier	m		339262	0					
ANR	341703	CallExpression	"opmask ( ao -> op , ""bfc"" , 0 )"		339262	1					
ANR	341704	Callee	opmask		339262	0					
ANR	341705	Identifier	opmask		339262	0					
ANR	341706	ArgumentList	ao -> op		339262	1					
ANR	341707	Argument	ao -> op		339262	0					
ANR	341708	PtrMemberAccess	ao -> op		339262	0					
ANR	341709	Identifier	ao		339262	0					
ANR	341710	Identifier	op		339262	1					
ANR	341711	Argument	"""bfc"""		339262	1					
ANR	341712	PrimaryExpression	"""bfc"""		339262	0					
ANR	341713	Argument	0		339262	2					
ANR	341714	PrimaryExpression	0		339262	0					
ANR	341715	CompoundStatement		437:2:9718:9752	339262	1					
ANR	341716	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1729:2:35577:35611	339262	0	True				
ANR	341717	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	341718	IdentifierDeclType	ut64		339262	0					
ANR	341719	Identifier	argt		339262	1					
ANR	341720	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	341721	Identifier	argt		339262	0					
ANR	341722	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	341723	Callee	thumb_selector		339262	0					
ANR	341724	Identifier	thumb_selector		339262	0					
ANR	341725	ArgumentList	ao -> a		339262	1					
ANR	341726	Argument	ao -> a		339262	0					
ANR	341727	PtrMemberAccess	ao -> a		339262	0					
ANR	341728	Identifier	ao		339262	0					
ANR	341729	Identifier	a		339262	1					
ANR	341730	SwitchStatement	switch ( argt )		339262	1					
ANR	341731	Condition	argt	1730:10:35623:35626	339262	0	True				
ANR	341732	Identifier	argt		339262	0					
ANR	341733	CompoundStatement		438:16:9770:9770	339262	1					
ANR	341734	Label	case THUMB_REG_CONST_CONST :	1731:2:35633:35659	339262	0	True				
ANR	341735	Identifier	THUMB_REG_CONST_CONST		339262	0					
ANR	341736	CompoundStatement		447:3:9986:10012	339262	1					
ANR	341737	IfStatement	if ( m & DOTN_BIT )		339262	0					
ANR	341738	Condition	m & DOTN_BIT	1732:7:35670:35681	339262	0	True				
ANR	341739	BitAndExpression	m & DOTN_BIT		339262	0		&			
ANR	341740	Identifier	m		339262	0					
ANR	341741	Identifier	DOTN_BIT		339262	1					
ANR	341742	CompoundStatement		440:21:9825:9825	339262	1					
ANR	341743	ReturnStatement	return - 1 ;	1734:4:35725:35734	339262	0	True				
ANR	341744	UnaryOperationExpression	- 1		339262	0					
ANR	341745	UnaryOperator	-		339262	0					
ANR	341746	PrimaryExpression	1		339262	1					
ANR	341747	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1736:3:35744:35772	339262	1	True				
ANR	341748	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	341749	IdentifierDeclType	ut8		339262	0					
ANR	341750	Identifier	reg1		339262	1					
ANR	341751	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	341752	Identifier	reg1		339262	0					
ANR	341753	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	341754	Callee	getreg		339262	0					
ANR	341755	Identifier	getreg		339262	0					
ANR	341756	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	341757	Argument	ao -> a [ 0 ]		339262	0					
ANR	341758	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	341759	PtrMemberAccess	ao -> a		339262	0					
ANR	341760	Identifier	ao		339262	0					
ANR	341761	Identifier	a		339262	1					
ANR	341762	PrimaryExpression	0		339262	1					
ANR	341763	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 1 ] ) ;	1737:3:35777:35805	339262	2	True				
ANR	341764	IdentifierDecl	lsb = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	341765	IdentifierDeclType	ut32		339262	0					
ANR	341766	Identifier	lsb		339262	1					
ANR	341767	AssignmentExpression	lsb = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	341768	Identifier	lsb		339262	0					
ANR	341769	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	341770	Callee	getnum		339262	0					
ANR	341771	Identifier	getnum		339262	0					
ANR	341772	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	341773	Argument	ao -> a [ 1 ]		339262	0					
ANR	341774	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	341775	PtrMemberAccess	ao -> a		339262	0					
ANR	341776	Identifier	ao		339262	0					
ANR	341777	Identifier	a		339262	1					
ANR	341778	PrimaryExpression	1		339262	1					
ANR	341779	IdentifierDeclStatement	ut32 width = getnum ( ao -> a [ 2 ] ) ;	1738:3:35810:35840	339262	3	True				
ANR	341780	IdentifierDecl	width = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	341781	IdentifierDeclType	ut32		339262	0					
ANR	341782	Identifier	width		339262	1					
ANR	341783	AssignmentExpression	width = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	341784	Identifier	width		339262	0					
ANR	341785	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	341786	Callee	getnum		339262	0					
ANR	341787	Identifier	getnum		339262	0					
ANR	341788	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	341789	Argument	ao -> a [ 2 ]		339262	0					
ANR	341790	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	341791	PtrMemberAccess	ao -> a		339262	0					
ANR	341792	Identifier	ao		339262	0					
ANR	341793	Identifier	a		339262	1					
ANR	341794	PrimaryExpression	2		339262	1					
ANR	341795	IdentifierDeclStatement	ut32 msb = lsb + width - 1 ;	1739:3:35845:35871	339262	4	True				
ANR	341796	IdentifierDecl	msb = lsb + width - 1		339262	0					
ANR	341797	IdentifierDeclType	ut32		339262	0					
ANR	341798	Identifier	msb		339262	1					
ANR	341799	AssignmentExpression	msb = lsb + width - 1		339262	2		=			
ANR	341800	Identifier	msb		339262	0					
ANR	341801	AdditiveExpression	lsb + width - 1		339262	1		+			
ANR	341802	Identifier	lsb		339262	0					
ANR	341803	AdditiveExpression	width - 1		339262	1		-			
ANR	341804	Identifier	width		339262	0					
ANR	341805	PrimaryExpression	1		339262	1					
ANR	341806	IfStatement	if ( ( lsb > 31 ) || ( msb > 31 ) )		339262	5					
ANR	341807	Condition	( lsb > 31 ) || ( msb > 31 )	1740:7:35880:35903	339262	0	True				
ANR	341808	OrExpression	( lsb > 31 ) || ( msb > 31 )		339262	0		||			
ANR	341809	RelationalExpression	lsb > 31		339262	0		>			
ANR	341810	Identifier	lsb		339262	0					
ANR	341811	PrimaryExpression	31		339262	1					
ANR	341812	RelationalExpression	msb > 31		339262	1		>			
ANR	341813	Identifier	msb		339262	0					
ANR	341814	PrimaryExpression	31		339262	1					
ANR	341815	CompoundStatement		448:33:10047:10047	339262	1					
ANR	341816	ReturnStatement	return - 1 ;	1741:4:35912:35921	339262	0	True				
ANR	341817	UnaryOperationExpression	- 1		339262	0					
ANR	341818	UnaryOperator	-		339262	0					
ANR	341819	PrimaryExpression	1		339262	1					
ANR	341820	ExpressionStatement	ao -> o = 0x6ff30000	1743:3:35931:35949	339262	6	True				
ANR	341821	AssignmentExpression	ao -> o = 0x6ff30000		339262	0		=			
ANR	341822	PtrMemberAccess	ao -> o		339262	0					
ANR	341823	Identifier	ao		339262	0					
ANR	341824	Identifier	o		339262	1					
ANR	341825	PrimaryExpression	0x6ff30000		339262	1					
ANR	341826	ExpressionStatement	ao -> o |= reg1	1744:3:35954:35967	339262	7	True				
ANR	341827	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	341828	PtrMemberAccess	ao -> o		339262	0					
ANR	341829	Identifier	ao		339262	0					
ANR	341830	Identifier	o		339262	1					
ANR	341831	Identifier	reg1		339262	1					
ANR	341832	ExpressionStatement	ao -> o |= ( ( lsb & 0x1c ) << 2 )	1745:3:35972:36000	339262	8	True				
ANR	341833	AssignmentExpression	ao -> o |= ( ( lsb & 0x1c ) << 2 )		339262	0		|=			
ANR	341834	PtrMemberAccess	ao -> o		339262	0					
ANR	341835	Identifier	ao		339262	0					
ANR	341836	Identifier	o		339262	1					
ANR	341837	ShiftExpression	( lsb & 0x1c ) << 2		339262	1		<<			
ANR	341838	BitAndExpression	lsb & 0x1c		339262	0		&			
ANR	341839	Identifier	lsb		339262	0					
ANR	341840	PrimaryExpression	0x1c		339262	1					
ANR	341841	PrimaryExpression	2		339262	1					
ANR	341842	ExpressionStatement	ao -> o |= ( ( lsb & 0x3 ) << 14 )	1746:3:36005:36033	339262	9	True				
ANR	341843	AssignmentExpression	ao -> o |= ( ( lsb & 0x3 ) << 14 )		339262	0		|=			
ANR	341844	PtrMemberAccess	ao -> o		339262	0					
ANR	341845	Identifier	ao		339262	0					
ANR	341846	Identifier	o		339262	1					
ANR	341847	ShiftExpression	( lsb & 0x3 ) << 14		339262	1		<<			
ANR	341848	BitAndExpression	lsb & 0x3		339262	0		&			
ANR	341849	Identifier	lsb		339262	0					
ANR	341850	PrimaryExpression	0x3		339262	1					
ANR	341851	PrimaryExpression	14		339262	1					
ANR	341852	ExpressionStatement	ao -> o |= ( msb << 8 )	1747:3:36038:36057	339262	10	True				
ANR	341853	AssignmentExpression	ao -> o |= ( msb << 8 )		339262	0		|=			
ANR	341854	PtrMemberAccess	ao -> o		339262	0					
ANR	341855	Identifier	ao		339262	0					
ANR	341856	Identifier	o		339262	1					
ANR	341857	ShiftExpression	msb << 8		339262	1		<<			
ANR	341858	Identifier	msb		339262	0					
ANR	341859	PrimaryExpression	8		339262	1					
ANR	341860	ReturnStatement	return 4 ;	1748:3:36062:36070	339262	11	True				
ANR	341861	PrimaryExpression	4		339262	0					
ANR	341862	BreakStatement	break ;	1750:3:36087:36092	339262	2	True				
ANR	341863	Label	default :	1751:2:36096:36103	339262	3	True				
ANR	341864	Identifier	default		339262	0					
ANR	341865	ReturnStatement	return - 1 ;	1752:3:36108:36117	339262	4	True				
ANR	341866	UnaryOperationExpression	- 1		339262	0					
ANR	341867	UnaryOperator	-		339262	0					
ANR	341868	PrimaryExpression	1		339262	1					
ANR	341869	ElseStatement	else		339262	0					
ANR	341870	IfStatement	"if ( ( m = opmask ( ao -> op , ""bfi"" , 0 ) ) )"		339262	0					
ANR	341871	Condition	"m = opmask ( ao -> op , ""bfi"" , 0 )"	1755:5:36136:36168	339262	0	True				
ANR	341872	AssignmentExpression	"m = opmask ( ao -> op , ""bfi"" , 0 )"		339262	0		=			
ANR	341873	Identifier	m		339262	0					
ANR	341874	CallExpression	"opmask ( ao -> op , ""bfi"" , 0 )"		339262	1					
ANR	341875	Callee	opmask		339262	0					
ANR	341876	Identifier	opmask		339262	0					
ANR	341877	ArgumentList	ao -> op		339262	1					
ANR	341878	Argument	ao -> op		339262	0					
ANR	341879	PtrMemberAccess	ao -> op		339262	0					
ANR	341880	Identifier	ao		339262	0					
ANR	341881	Identifier	op		339262	1					
ANR	341882	Argument	"""bfi"""		339262	1					
ANR	341883	PrimaryExpression	"""bfi"""		339262	0					
ANR	341884	Argument	0		339262	2					
ANR	341885	PrimaryExpression	0		339262	0					
ANR	341886	CompoundStatement		464:2:10316:10350	339262	1					
ANR	341887	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1756:2:36175:36209	339262	0	True				
ANR	341888	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	341889	IdentifierDeclType	ut64		339262	0					
ANR	341890	Identifier	argt		339262	1					
ANR	341891	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	341892	Identifier	argt		339262	0					
ANR	341893	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	341894	Callee	thumb_selector		339262	0					
ANR	341895	Identifier	thumb_selector		339262	0					
ANR	341896	ArgumentList	ao -> a		339262	1					
ANR	341897	Argument	ao -> a		339262	0					
ANR	341898	PtrMemberAccess	ao -> a		339262	0					
ANR	341899	Identifier	ao		339262	0					
ANR	341900	Identifier	a		339262	1					
ANR	341901	SwitchStatement	switch ( argt )		339262	1					
ANR	341902	Condition	argt	1757:10:36221:36224	339262	0	True				
ANR	341903	Identifier	argt		339262	0					
ANR	341904	CompoundStatement		465:16:10368:10368	339262	1					
ANR	341905	Label	case THUMB_REG_REG_CONST_CONST :	1758:2:36231:36261	339262	0	True				
ANR	341906	Identifier	THUMB_REG_REG_CONST_CONST		339262	0					
ANR	341907	CompoundStatement		469:3:10477:10503	339262	1					
ANR	341908	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 2 ] ) ;	1759:3:36268:36296	339262	0	True				
ANR	341909	IdentifierDecl	lsb = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	341910	IdentifierDeclType	ut32		339262	0					
ANR	341911	Identifier	lsb		339262	1					
ANR	341912	AssignmentExpression	lsb = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	341913	Identifier	lsb		339262	0					
ANR	341914	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	341915	Callee	getnum		339262	0					
ANR	341916	Identifier	getnum		339262	0					
ANR	341917	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	341918	Argument	ao -> a [ 2 ]		339262	0					
ANR	341919	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	341920	PtrMemberAccess	ao -> a		339262	0					
ANR	341921	Identifier	ao		339262	0					
ANR	341922	Identifier	a		339262	1					
ANR	341923	PrimaryExpression	2		339262	1					
ANR	341924	IdentifierDeclStatement	ut32 width = getnum ( ao -> a [ 3 ] ) ;	1760:3:36301:36331	339262	1	True				
ANR	341925	IdentifierDecl	width = getnum ( ao -> a [ 3 ] )		339262	0					
ANR	341926	IdentifierDeclType	ut32		339262	0					
ANR	341927	Identifier	width		339262	1					
ANR	341928	AssignmentExpression	width = getnum ( ao -> a [ 3 ] )		339262	2		=			
ANR	341929	Identifier	width		339262	0					
ANR	341930	CallExpression	getnum ( ao -> a [ 3 ] )		339262	1					
ANR	341931	Callee	getnum		339262	0					
ANR	341932	Identifier	getnum		339262	0					
ANR	341933	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	341934	Argument	ao -> a [ 3 ]		339262	0					
ANR	341935	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	341936	PtrMemberAccess	ao -> a		339262	0					
ANR	341937	Identifier	ao		339262	0					
ANR	341938	Identifier	a		339262	1					
ANR	341939	PrimaryExpression	3		339262	1					
ANR	341940	IdentifierDeclStatement	ut32 msb = lsb + width - 1 ;	1761:3:36336:36362	339262	2	True				
ANR	341941	IdentifierDecl	msb = lsb + width - 1		339262	0					
ANR	341942	IdentifierDeclType	ut32		339262	0					
ANR	341943	Identifier	msb		339262	1					
ANR	341944	AssignmentExpression	msb = lsb + width - 1		339262	2		=			
ANR	341945	Identifier	msb		339262	0					
ANR	341946	AdditiveExpression	lsb + width - 1		339262	1		+			
ANR	341947	Identifier	lsb		339262	0					
ANR	341948	AdditiveExpression	width - 1		339262	1		-			
ANR	341949	Identifier	width		339262	0					
ANR	341950	PrimaryExpression	1		339262	1					
ANR	341951	IfStatement	if ( ( lsb > 31 ) || ( msb > 31 ) )		339262	3					
ANR	341952	Condition	( lsb > 31 ) || ( msb > 31 )	1762:7:36371:36394	339262	0	True				
ANR	341953	OrExpression	( lsb > 31 ) || ( msb > 31 )		339262	0		||			
ANR	341954	RelationalExpression	lsb > 31		339262	0		>			
ANR	341955	Identifier	lsb		339262	0					
ANR	341956	PrimaryExpression	31		339262	1					
ANR	341957	RelationalExpression	msb > 31		339262	1		>			
ANR	341958	Identifier	msb		339262	0					
ANR	341959	PrimaryExpression	31		339262	1					
ANR	341960	CompoundStatement		470:33:10538:10538	339262	1					
ANR	341961	ReturnStatement	return - 1 ;	1763:4:36403:36412	339262	0	True				
ANR	341962	UnaryOperationExpression	- 1		339262	0					
ANR	341963	UnaryOperator	-		339262	0					
ANR	341964	PrimaryExpression	1		339262	1					
ANR	341965	ExpressionStatement	ao -> o = 0x60f30000	1765:3:36422:36440	339262	4	True				
ANR	341966	AssignmentExpression	ao -> o = 0x60f30000		339262	0		=			
ANR	341967	PtrMemberAccess	ao -> o		339262	0					
ANR	341968	Identifier	ao		339262	0					
ANR	341969	Identifier	o		339262	1					
ANR	341970	PrimaryExpression	0x60f30000		339262	1					
ANR	341971	ExpressionStatement	ao -> o |= ( ( lsb & 0x1c ) << 2 )	1766:3:36445:36473	339262	5	True				
ANR	341972	AssignmentExpression	ao -> o |= ( ( lsb & 0x1c ) << 2 )		339262	0		|=			
ANR	341973	PtrMemberAccess	ao -> o		339262	0					
ANR	341974	Identifier	ao		339262	0					
ANR	341975	Identifier	o		339262	1					
ANR	341976	ShiftExpression	( lsb & 0x1c ) << 2		339262	1		<<			
ANR	341977	BitAndExpression	lsb & 0x1c		339262	0		&			
ANR	341978	Identifier	lsb		339262	0					
ANR	341979	PrimaryExpression	0x1c		339262	1					
ANR	341980	PrimaryExpression	2		339262	1					
ANR	341981	ExpressionStatement	ao -> o |= ( ( lsb & 0x3 ) << 14 )	1767:3:36478:36506	339262	6	True				
ANR	341982	AssignmentExpression	ao -> o |= ( ( lsb & 0x3 ) << 14 )		339262	0		|=			
ANR	341983	PtrMemberAccess	ao -> o		339262	0					
ANR	341984	Identifier	ao		339262	0					
ANR	341985	Identifier	o		339262	1					
ANR	341986	ShiftExpression	( lsb & 0x3 ) << 14		339262	1		<<			
ANR	341987	BitAndExpression	lsb & 0x3		339262	0		&			
ANR	341988	Identifier	lsb		339262	0					
ANR	341989	PrimaryExpression	0x3		339262	1					
ANR	341990	PrimaryExpression	14		339262	1					
ANR	341991	ExpressionStatement	ao -> o |= ( msb << 8 )	1768:3:36511:36530	339262	7	True				
ANR	341992	AssignmentExpression	ao -> o |= ( msb << 8 )		339262	0		|=			
ANR	341993	PtrMemberAccess	ao -> o		339262	0					
ANR	341994	Identifier	ao		339262	0					
ANR	341995	Identifier	o		339262	1					
ANR	341996	ShiftExpression	msb << 8		339262	1		<<			
ANR	341997	Identifier	msb		339262	0					
ANR	341998	PrimaryExpression	8		339262	1					
ANR	341999	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1769:3:36535:36571	339262	8	True				
ANR	342000	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	342001	Callee	std_32bit_2reg		339262	0					
ANR	342002	Identifier	std_32bit_2reg		339262	0					
ANR	342003	ArgumentList	ao		339262	1					
ANR	342004	Argument	ao		339262	0					
ANR	342005	Identifier	ao		339262	0					
ANR	342006	Argument	m		339262	1					
ANR	342007	Identifier	m		339262	0					
ANR	342008	Argument	false		339262	2					
ANR	342009	Identifier	false		339262	0					
ANR	342010	BreakStatement	break ;	1771:3:36588:36593	339262	2	True				
ANR	342011	Label	default :	1772:2:36597:36604	339262	3	True				
ANR	342012	Identifier	default		339262	0					
ANR	342013	ReturnStatement	return - 1 ;	1773:3:36609:36618	339262	4	True				
ANR	342014	UnaryOperationExpression	- 1		339262	0					
ANR	342015	UnaryOperator	-		339262	0					
ANR	342016	PrimaryExpression	1		339262	1					
ANR	342017	ElseStatement	else		339262	0					
ANR	342018	IfStatement	"if ( ( m = opmask ( ao -> op , ""bic"" , S_BIT ) ) )"		339262	0					
ANR	342019	Condition	"m = opmask ( ao -> op , ""bic"" , S_BIT )"	1776:5:36637:36673	339262	0	True				
ANR	342020	AssignmentExpression	"m = opmask ( ao -> op , ""bic"" , S_BIT )"		339262	0		=			
ANR	342021	Identifier	m		339262	0					
ANR	342022	CallExpression	"opmask ( ao -> op , ""bic"" , S_BIT )"		339262	1					
ANR	342023	Callee	opmask		339262	0					
ANR	342024	Identifier	opmask		339262	0					
ANR	342025	ArgumentList	ao -> op		339262	1					
ANR	342026	Argument	ao -> op		339262	0					
ANR	342027	PtrMemberAccess	ao -> op		339262	0					
ANR	342028	Identifier	ao		339262	0					
ANR	342029	Identifier	op		339262	1					
ANR	342030	Argument	"""bic"""		339262	1					
ANR	342031	PrimaryExpression	"""bic"""		339262	0					
ANR	342032	Argument	S_BIT		339262	2					
ANR	342033	Identifier	S_BIT		339262	0					
ANR	342034	CompoundStatement		485:2:10821:10855	339262	1					
ANR	342035	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1777:2:36680:36714	339262	0	True				
ANR	342036	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342037	IdentifierDeclType	ut64		339262	0					
ANR	342038	Identifier	argt		339262	1					
ANR	342039	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342040	Identifier	argt		339262	0					
ANR	342041	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342042	Callee	thumb_selector		339262	0					
ANR	342043	Identifier	thumb_selector		339262	0					
ANR	342044	ArgumentList	ao -> a		339262	1					
ANR	342045	Argument	ao -> a		339262	0					
ANR	342046	PtrMemberAccess	ao -> a		339262	0					
ANR	342047	Identifier	ao		339262	0					
ANR	342048	Identifier	a		339262	1					
ANR	342049	SwitchStatement	switch ( argt )		339262	1					
ANR	342050	Condition	argt	1778:10:36726:36729	339262	0	True				
ANR	342051	Identifier	argt		339262	0					
ANR	342052	CompoundStatement		486:16:10873:10873	339262	1					
ANR	342053	Label	case THUMB_REG_REG :	1779:2:36736:36754	339262	0	True				
ANR	342054	Identifier	THUMB_REG_REG		339262	0					
ANR	342055	CompoundStatement		487:22:10897:10897	339262	1					
ANR	342056	ExpressionStatement	ao -> o = 0x8043	1780:3:36761:36775	339262	0	True				
ANR	342057	AssignmentExpression	ao -> o = 0x8043		339262	0		=			
ANR	342058	PtrMemberAccess	ao -> o		339262	0					
ANR	342059	Identifier	ao		339262	0					
ANR	342060	Identifier	o		339262	1					
ANR	342061	PrimaryExpression	0x8043		339262	1					
ANR	342062	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	342063	Condition	"std_16bit_2reg ( ao , m )"	1781:7:36784:36805	339262	0	True				
ANR	342064	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	342065	Callee	std_16bit_2reg		339262	0					
ANR	342066	Identifier	std_16bit_2reg		339262	0					
ANR	342067	ArgumentList	ao		339262	1					
ANR	342068	Argument	ao		339262	0					
ANR	342069	Identifier	ao		339262	0					
ANR	342070	Argument	m		339262	1					
ANR	342071	Identifier	m		339262	0					
ANR	342072	CompoundStatement		489:31:10949:10949	339262	1					
ANR	342073	ReturnStatement	return 2 ;	1782:4:36814:36822	339262	0	True				
ANR	342074	PrimaryExpression	2		339262	0					
ANR	342075	ExpressionStatement	std_opt_2 ( ao )	1784:3:36832:36846	339262	2	True				
ANR	342076	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	342077	Callee	std_opt_2		339262	0					
ANR	342078	Identifier	std_opt_2		339262	0					
ANR	342079	ArgumentList	ao		339262	1					
ANR	342080	Argument	ao		339262	0					
ANR	342081	Identifier	ao		339262	0					
ANR	342082	Label	case THUMB_REG_REG_REG :	1787:2:36892:36914	339262	2	True				
ANR	342083	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	342084	CompoundStatement		495:26:11057:11057	339262	3					
ANR	342085	ExpressionStatement	ao -> o = 0x20ea0000	1788:3:36921:36939	339262	0	True				
ANR	342086	AssignmentExpression	ao -> o = 0x20ea0000		339262	0		=			
ANR	342087	PtrMemberAccess	ao -> o		339262	0					
ANR	342088	Identifier	ao		339262	0					
ANR	342089	Identifier	o		339262	1					
ANR	342090	PrimaryExpression	0x20ea0000		339262	1					
ANR	342091	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1789:3:36944:36980	339262	1	True				
ANR	342092	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	342093	Callee	std_32bit_3reg		339262	0					
ANR	342094	Identifier	std_32bit_3reg		339262	0					
ANR	342095	ArgumentList	ao		339262	1					
ANR	342096	Argument	ao		339262	0					
ANR	342097	Identifier	ao		339262	0					
ANR	342098	Argument	m		339262	1					
ANR	342099	Identifier	m		339262	0					
ANR	342100	Argument	false		339262	2					
ANR	342101	Identifier	false		339262	0					
ANR	342102	BreakStatement	break ;	1791:3:36997:37002	339262	4	True				
ANR	342103	Label	case THUMB_REG_CONST :	1792:2:37006:37026	339262	5	True				
ANR	342104	Identifier	THUMB_REG_CONST		339262	0					
ANR	342105	CompoundStatement		500:24:11169:11169	339262	6					
ANR	342106	ExpressionStatement	std_opt_2 ( ao )	1793:3:37033:37047	339262	0	True				
ANR	342107	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	342108	Callee	std_opt_2		339262	0					
ANR	342109	Identifier	std_opt_2		339262	0					
ANR	342110	ArgumentList	ao		339262	1					
ANR	342111	Argument	ao		339262	0					
ANR	342112	Identifier	ao		339262	0					
ANR	342113	Label	case THUMB_REG_REG_CONST :	1796:2:37093:37117	339262	7	True				
ANR	342114	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	342115	CompoundStatement		504:28:11260:11260	339262	8					
ANR	342116	ExpressionStatement	ao -> o = 0x20f00000	1797:3:37124:37142	339262	0	True				
ANR	342117	AssignmentExpression	ao -> o = 0x20f00000		339262	0		=			
ANR	342118	PtrMemberAccess	ao -> o		339262	0					
ANR	342119	Identifier	ao		339262	0					
ANR	342120	Identifier	o		339262	1					
ANR	342121	PrimaryExpression	0x20f00000		339262	1					
ANR	342122	ExpressionStatement	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )	1798:3:37147:37179	339262	1	True				
ANR	342123	AssignmentExpression	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )		339262	0		|=			
ANR	342124	PtrMemberAccess	ao -> o		339262	0					
ANR	342125	Identifier	ao		339262	0					
ANR	342126	Identifier	o		339262	1					
ANR	342127	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	342128	Callee	getthimmed12		339262	0					
ANR	342129	Identifier	getthimmed12		339262	0					
ANR	342130	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	342131	Argument	ao -> a [ 2 ]		339262	0					
ANR	342132	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	342133	PtrMemberAccess	ao -> a		339262	0					
ANR	342134	Identifier	ao		339262	0					
ANR	342135	Identifier	a		339262	1					
ANR	342136	PrimaryExpression	2		339262	1					
ANR	342137	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1799:3:37184:37220	339262	2	True				
ANR	342138	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	342139	Callee	std_32bit_2reg		339262	0					
ANR	342140	Identifier	std_32bit_2reg		339262	0					
ANR	342141	ArgumentList	ao		339262	1					
ANR	342142	Argument	ao		339262	0					
ANR	342143	Identifier	ao		339262	0					
ANR	342144	Argument	m		339262	1					
ANR	342145	Identifier	m		339262	0					
ANR	342146	Argument	false		339262	2					
ANR	342147	Identifier	false		339262	0					
ANR	342148	BreakStatement	break ;	1801:3:37237:37242	339262	9	True				
ANR	342149	Label	case THUMB_REG_REG_SHIFT :	1802:2:37246:37270	339262	10	True				
ANR	342150	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	342151	CompoundStatement		510:28:11413:11413	339262	11					
ANR	342152	ExpressionStatement	std_opt_3 ( ao )	1803:3:37277:37291	339262	0	True				
ANR	342153	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	342154	Callee	std_opt_3		339262	0					
ANR	342155	Identifier	std_opt_3		339262	0					
ANR	342156	ArgumentList	ao		339262	1					
ANR	342157	Argument	ao		339262	0					
ANR	342158	Identifier	ao		339262	0					
ANR	342159	Label	case THUMB_REG_REG_REG_SHIFT :	1806:2:37337:37365	339262	12	True				
ANR	342160	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	342161	CompoundStatement		514:32:11508:11508	339262	13					
ANR	342162	ExpressionStatement	ao -> o = 0x20ea0000	1807:3:37372:37390	339262	0	True				
ANR	342163	AssignmentExpression	ao -> o = 0x20ea0000		339262	0		=			
ANR	342164	PtrMemberAccess	ao -> o		339262	0					
ANR	342165	Identifier	ao		339262	0					
ANR	342166	Identifier	o		339262	1					
ANR	342167	PrimaryExpression	0x20ea0000		339262	1					
ANR	342168	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1808:3:37395:37430	339262	1	True				
ANR	342169	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	342170	Callee	std_32bit_3reg		339262	0					
ANR	342171	Identifier	std_32bit_3reg		339262	0					
ANR	342172	ArgumentList	ao		339262	1					
ANR	342173	Argument	ao		339262	0					
ANR	342174	Identifier	ao		339262	0					
ANR	342175	Argument	m		339262	1					
ANR	342176	Identifier	m		339262	0					
ANR	342177	Argument	true		339262	2					
ANR	342178	Identifier	true		339262	0					
ANR	342179	BreakStatement	break ;	1810:3:37447:37452	339262	14	True				
ANR	342180	Label	default :	1811:2:37456:37463	339262	15	True				
ANR	342181	Identifier	default		339262	0					
ANR	342182	ReturnStatement	return - 1 ;	1812:3:37468:37477	339262	16	True				
ANR	342183	UnaryOperationExpression	- 1		339262	0					
ANR	342184	UnaryOperator	-		339262	0					
ANR	342185	PrimaryExpression	1		339262	1					
ANR	342186	ElseStatement	else		339262	0					
ANR	342187	IfStatement	"if ( ( m = opmask ( ao -> op , ""bkpt"" , 0 ) ) )"		339262	0					
ANR	342188	Condition	"m = opmask ( ao -> op , ""bkpt"" , 0 )"	1815:5:37496:37529	339262	0	True				
ANR	342189	AssignmentExpression	"m = opmask ( ao -> op , ""bkpt"" , 0 )"		339262	0		=			
ANR	342190	Identifier	m		339262	0					
ANR	342191	CallExpression	"opmask ( ao -> op , ""bkpt"" , 0 )"		339262	1					
ANR	342192	Callee	opmask		339262	0					
ANR	342193	Identifier	opmask		339262	0					
ANR	342194	ArgumentList	ao -> op		339262	1					
ANR	342195	Argument	ao -> op		339262	0					
ANR	342196	PtrMemberAccess	ao -> op		339262	0					
ANR	342197	Identifier	ao		339262	0					
ANR	342198	Identifier	op		339262	1					
ANR	342199	Argument	"""bkpt"""		339262	1					
ANR	342200	PrimaryExpression	"""bkpt"""		339262	0					
ANR	342201	Argument	0		339262	2					
ANR	342202	PrimaryExpression	0		339262	0					
ANR	342203	CompoundStatement		524:2:11677:11711	339262	1					
ANR	342204	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1816:2:37536:37570	339262	0	True				
ANR	342205	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342206	IdentifierDeclType	ut64		339262	0					
ANR	342207	Identifier	argt		339262	1					
ANR	342208	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342209	Identifier	argt		339262	0					
ANR	342210	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342211	Callee	thumb_selector		339262	0					
ANR	342212	Identifier	thumb_selector		339262	0					
ANR	342213	ArgumentList	ao -> a		339262	1					
ANR	342214	Argument	ao -> a		339262	0					
ANR	342215	PtrMemberAccess	ao -> a		339262	0					
ANR	342216	Identifier	ao		339262	0					
ANR	342217	Identifier	a		339262	1					
ANR	342218	SwitchStatement	switch ( argt )		339262	1					
ANR	342219	Condition	argt	1817:10:37582:37585	339262	0	True				
ANR	342220	Identifier	argt		339262	0					
ANR	342221	CompoundStatement		525:16:11729:11729	339262	1					
ANR	342222	Label	case THUMB_CONST :	1818:2:37592:37608	339262	0	True				
ANR	342223	Identifier	THUMB_CONST		339262	0					
ANR	342224	CompoundStatement		527:3:11756:11784	339262	1					
ANR	342225	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	1819:3:37615:37643	339262	0	True				
ANR	342226	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	342227	IdentifierDeclType	ut32		339262	0					
ANR	342228	Identifier	num		339262	1					
ANR	342229	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	342230	Identifier	num		339262	0					
ANR	342231	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	342232	Callee	getnum		339262	0					
ANR	342233	Identifier	getnum		339262	0					
ANR	342234	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	342235	Argument	ao -> a [ 0 ]		339262	0					
ANR	342236	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	342237	PtrMemberAccess	ao -> a		339262	0					
ANR	342238	Identifier	ao		339262	0					
ANR	342239	Identifier	a		339262	1					
ANR	342240	PrimaryExpression	0		339262	1					
ANR	342241	IfStatement	if ( num > 255 )		339262	1					
ANR	342242	Condition	num > 255	1820:7:37652:37660	339262	0	True				
ANR	342243	RelationalExpression	num > 255		339262	0		>			
ANR	342244	Identifier	num		339262	0					
ANR	342245	PrimaryExpression	255		339262	1					
ANR	342246	CompoundStatement		528:18:11804:11804	339262	1					
ANR	342247	ReturnStatement	return - 1 ;	1821:4:37669:37678	339262	0	True				
ANR	342248	UnaryOperationExpression	- 1		339262	0					
ANR	342249	UnaryOperator	-		339262	0					
ANR	342250	PrimaryExpression	1		339262	1					
ANR	342251	ExpressionStatement	ao -> o = 0x00be	1823:3:37688:37702	339262	2	True				
ANR	342252	AssignmentExpression	ao -> o = 0x00be		339262	0		=			
ANR	342253	PtrMemberAccess	ao -> o		339262	0					
ANR	342254	Identifier	ao		339262	0					
ANR	342255	Identifier	o		339262	1					
ANR	342256	PrimaryExpression	0x00be		339262	1					
ANR	342257	ExpressionStatement	ao -> o |= num << 8	1824:3:37707:37724	339262	3	True				
ANR	342258	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	342259	PtrMemberAccess	ao -> o		339262	0					
ANR	342260	Identifier	ao		339262	0					
ANR	342261	Identifier	o		339262	1					
ANR	342262	ShiftExpression	num << 8		339262	1		<<			
ANR	342263	Identifier	num		339262	0					
ANR	342264	PrimaryExpression	8		339262	1					
ANR	342265	ReturnStatement	return 2 ;	1825:3:37729:37737	339262	4	True				
ANR	342266	PrimaryExpression	2		339262	0					
ANR	342267	BreakStatement	break ;	1827:3:37754:37759	339262	2	True				
ANR	342268	Label	default :	1828:2:37763:37770	339262	3	True				
ANR	342269	Identifier	default		339262	0					
ANR	342270	ReturnStatement	return - 1 ;	1829:3:37775:37784	339262	4	True				
ANR	342271	UnaryOperationExpression	- 1		339262	0					
ANR	342272	UnaryOperator	-		339262	0					
ANR	342273	PrimaryExpression	1		339262	1					
ANR	342274	ElseStatement	else		339262	0					
ANR	342275	IfStatement	"if ( ( m = opmask ( ao -> op , ""cbnz"" , 0 ) ) )"		339262	0					
ANR	342276	Condition	"m = opmask ( ao -> op , ""cbnz"" , 0 )"	1832:5:37803:37836	339262	0	True				
ANR	342277	AssignmentExpression	"m = opmask ( ao -> op , ""cbnz"" , 0 )"		339262	0		=			
ANR	342278	Identifier	m		339262	0					
ANR	342279	CallExpression	"opmask ( ao -> op , ""cbnz"" , 0 )"		339262	1					
ANR	342280	Callee	opmask		339262	0					
ANR	342281	Identifier	opmask		339262	0					
ANR	342282	ArgumentList	ao -> op		339262	1					
ANR	342283	Argument	ao -> op		339262	0					
ANR	342284	PtrMemberAccess	ao -> op		339262	0					
ANR	342285	Identifier	ao		339262	0					
ANR	342286	Identifier	op		339262	1					
ANR	342287	Argument	"""cbnz"""		339262	1					
ANR	342288	PrimaryExpression	"""cbnz"""		339262	0					
ANR	342289	Argument	0		339262	2					
ANR	342290	PrimaryExpression	0		339262	0					
ANR	342291	CompoundStatement		541:2:11984:12018	339262	1					
ANR	342292	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1833:2:37843:37877	339262	0	True				
ANR	342293	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342294	IdentifierDeclType	ut64		339262	0					
ANR	342295	Identifier	argt		339262	1					
ANR	342296	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342297	Identifier	argt		339262	0					
ANR	342298	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342299	Callee	thumb_selector		339262	0					
ANR	342300	Identifier	thumb_selector		339262	0					
ANR	342301	ArgumentList	ao -> a		339262	1					
ANR	342302	Argument	ao -> a		339262	0					
ANR	342303	PtrMemberAccess	ao -> a		339262	0					
ANR	342304	Identifier	ao		339262	0					
ANR	342305	Identifier	a		339262	1					
ANR	342306	SwitchStatement	switch ( argt )		339262	1					
ANR	342307	Condition	argt	1834:10:37889:37892	339262	0	True				
ANR	342308	Identifier	argt		339262	0					
ANR	342309	CompoundStatement		542:16:12036:12036	339262	1					
ANR	342310	Label	case THUMB_REG_CONST :	1835:2:37899:37919	339262	0	True				
ANR	342311	Identifier	THUMB_REG_CONST		339262	0					
ANR	342312	CompoundStatement		545:3:12100:12145	339262	1					
ANR	342313	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1836:3:37926:37954	339262	0	True				
ANR	342314	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	342315	IdentifierDeclType	ut8		339262	0					
ANR	342316	Identifier	reg1		339262	1					
ANR	342317	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	342318	Identifier	reg1		339262	0					
ANR	342319	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	342320	Callee	getreg		339262	0					
ANR	342321	Identifier	getreg		339262	0					
ANR	342322	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	342323	Argument	ao -> a [ 0 ]		339262	0					
ANR	342324	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	342325	PtrMemberAccess	ao -> a		339262	0					
ANR	342326	Identifier	ao		339262	0					
ANR	342327	Identifier	a		339262	1					
ANR	342328	PrimaryExpression	0		339262	1					
ANR	342329	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 1 ] , off ) ;"	1837:3:37959:38004	339262	1	True				
ANR	342330	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		339262	0					
ANR	342331	IdentifierDeclType	st32		339262	0					
ANR	342332	Identifier	offset		339262	1					
ANR	342333	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		339262	2		=			
ANR	342334	Identifier	offset		339262	0					
ANR	342335	CallExpression	"thumb_getoffset ( ao -> a [ 1 ] , off )"		339262	1					
ANR	342336	Callee	thumb_getoffset		339262	0					
ANR	342337	Identifier	thumb_getoffset		339262	0					
ANR	342338	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	342339	Argument	ao -> a [ 1 ]		339262	0					
ANR	342340	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	342341	PtrMemberAccess	ao -> a		339262	0					
ANR	342342	Identifier	ao		339262	0					
ANR	342343	Identifier	a		339262	1					
ANR	342344	PrimaryExpression	1		339262	1					
ANR	342345	Argument	off		339262	1					
ANR	342346	Identifier	off		339262	0					
ANR	342347	IfStatement	if ( ( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 ) )		339262	2					
ANR	342348	Condition	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )	1838:7:38013:38061	339262	0	True				
ANR	342349	OrExpression	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )		339262	0		||			
ANR	342350	RelationalExpression	reg1 > 7		339262	0		>			
ANR	342351	Identifier	reg1		339262	0					
ANR	342352	PrimaryExpression	7		339262	1					
ANR	342353	OrExpression	( offset > 127 ) || ( offset % 2 != 0 )		339262	1		||			
ANR	342354	RelationalExpression	offset > 127		339262	0		>			
ANR	342355	Identifier	offset		339262	0					
ANR	342356	PrimaryExpression	127		339262	1					
ANR	342357	EqualityExpression	offset % 2 != 0		339262	1		!=			
ANR	342358	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	342359	Identifier	offset		339262	0					
ANR	342360	PrimaryExpression	2		339262	1					
ANR	342361	PrimaryExpression	0		339262	1					
ANR	342362	CompoundStatement		546:58:12205:12205	339262	1					
ANR	342363	ReturnStatement	return - 1 ;	1839:4:38070:38079	339262	0	True				
ANR	342364	UnaryOperationExpression	- 1		339262	0					
ANR	342365	UnaryOperator	-		339262	0					
ANR	342366	PrimaryExpression	1		339262	1					
ANR	342367	ExpressionStatement	ao -> o = 0x00b9	1841:3:38089:38103	339262	3	True				
ANR	342368	AssignmentExpression	ao -> o = 0x00b9		339262	0		=			
ANR	342369	PtrMemberAccess	ao -> o		339262	0					
ANR	342370	Identifier	ao		339262	0					
ANR	342371	Identifier	o		339262	1					
ANR	342372	PrimaryExpression	0x00b9		339262	1					
ANR	342373	ExpressionStatement	ao -> o |= reg1 << 8	1842:3:38108:38126	339262	4	True				
ANR	342374	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	342375	PtrMemberAccess	ao -> o		339262	0					
ANR	342376	Identifier	ao		339262	0					
ANR	342377	Identifier	o		339262	1					
ANR	342378	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	342379	Identifier	reg1		339262	0					
ANR	342380	PrimaryExpression	8		339262	1					
ANR	342381	ExpressionStatement	ao -> o |= ( offset & 0x3e ) << 10	1843:3:38131:38161	339262	5	True				
ANR	342382	AssignmentExpression	ao -> o |= ( offset & 0x3e ) << 10		339262	0		|=			
ANR	342383	PtrMemberAccess	ao -> o		339262	0					
ANR	342384	Identifier	ao		339262	0					
ANR	342385	Identifier	o		339262	1					
ANR	342386	ShiftExpression	( offset & 0x3e ) << 10		339262	1		<<			
ANR	342387	BitAndExpression	offset & 0x3e		339262	0		&			
ANR	342388	Identifier	offset		339262	0					
ANR	342389	PrimaryExpression	0x3e		339262	1					
ANR	342390	PrimaryExpression	10		339262	1					
ANR	342391	ExpressionStatement	ao -> o |= ( offset & 0x40 ) >> 5	1844:3:38166:38195	339262	6	True				
ANR	342392	AssignmentExpression	ao -> o |= ( offset & 0x40 ) >> 5		339262	0		|=			
ANR	342393	PtrMemberAccess	ao -> o		339262	0					
ANR	342394	Identifier	ao		339262	0					
ANR	342395	Identifier	o		339262	1					
ANR	342396	ShiftExpression	( offset & 0x40 ) >> 5		339262	1		>>			
ANR	342397	BitAndExpression	offset & 0x40		339262	0		&			
ANR	342398	Identifier	offset		339262	0					
ANR	342399	PrimaryExpression	0x40		339262	1					
ANR	342400	PrimaryExpression	5		339262	1					
ANR	342401	ReturnStatement	return 2 ;	1845:3:38200:38208	339262	7	True				
ANR	342402	PrimaryExpression	2		339262	0					
ANR	342403	BreakStatement	break ;	1847:3:38225:38230	339262	2	True				
ANR	342404	Label	default :	1848:2:38234:38241	339262	3	True				
ANR	342405	Identifier	default		339262	0					
ANR	342406	ReturnStatement	return - 1 ;	1849:3:38246:38255	339262	4	True				
ANR	342407	UnaryOperationExpression	- 1		339262	0					
ANR	342408	UnaryOperator	-		339262	0					
ANR	342409	PrimaryExpression	1		339262	1					
ANR	342410	ElseStatement	else		339262	0					
ANR	342411	IfStatement	"if ( ( m = opmask ( ao -> op , ""cbz"" , 0 ) ) )"		339262	0					
ANR	342412	Condition	"m = opmask ( ao -> op , ""cbz"" , 0 )"	1852:5:38274:38306	339262	0	True				
ANR	342413	AssignmentExpression	"m = opmask ( ao -> op , ""cbz"" , 0 )"		339262	0		=			
ANR	342414	Identifier	m		339262	0					
ANR	342415	CallExpression	"opmask ( ao -> op , ""cbz"" , 0 )"		339262	1					
ANR	342416	Callee	opmask		339262	0					
ANR	342417	Identifier	opmask		339262	0					
ANR	342418	ArgumentList	ao -> op		339262	1					
ANR	342419	Argument	ao -> op		339262	0					
ANR	342420	PtrMemberAccess	ao -> op		339262	0					
ANR	342421	Identifier	ao		339262	0					
ANR	342422	Identifier	op		339262	1					
ANR	342423	Argument	"""cbz"""		339262	1					
ANR	342424	PrimaryExpression	"""cbz"""		339262	0					
ANR	342425	Argument	0		339262	2					
ANR	342426	PrimaryExpression	0		339262	0					
ANR	342427	CompoundStatement		561:2:12454:12488	339262	1					
ANR	342428	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1853:2:38313:38347	339262	0	True				
ANR	342429	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342430	IdentifierDeclType	ut64		339262	0					
ANR	342431	Identifier	argt		339262	1					
ANR	342432	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342433	Identifier	argt		339262	0					
ANR	342434	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342435	Callee	thumb_selector		339262	0					
ANR	342436	Identifier	thumb_selector		339262	0					
ANR	342437	ArgumentList	ao -> a		339262	1					
ANR	342438	Argument	ao -> a		339262	0					
ANR	342439	PtrMemberAccess	ao -> a		339262	0					
ANR	342440	Identifier	ao		339262	0					
ANR	342441	Identifier	a		339262	1					
ANR	342442	SwitchStatement	switch ( argt )		339262	1					
ANR	342443	Condition	argt	1854:10:38359:38362	339262	0	True				
ANR	342444	Identifier	argt		339262	0					
ANR	342445	CompoundStatement		562:16:12506:12506	339262	1					
ANR	342446	Label	case THUMB_REG_CONST :	1855:2:38369:38389	339262	0	True				
ANR	342447	Identifier	THUMB_REG_CONST		339262	0					
ANR	342448	CompoundStatement		565:3:12570:12615	339262	1					
ANR	342449	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1856:3:38396:38424	339262	0	True				
ANR	342450	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	342451	IdentifierDeclType	ut8		339262	0					
ANR	342452	Identifier	reg1		339262	1					
ANR	342453	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	342454	Identifier	reg1		339262	0					
ANR	342455	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	342456	Callee	getreg		339262	0					
ANR	342457	Identifier	getreg		339262	0					
ANR	342458	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	342459	Argument	ao -> a [ 0 ]		339262	0					
ANR	342460	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	342461	PtrMemberAccess	ao -> a		339262	0					
ANR	342462	Identifier	ao		339262	0					
ANR	342463	Identifier	a		339262	1					
ANR	342464	PrimaryExpression	0		339262	1					
ANR	342465	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 1 ] , off ) ;"	1857:3:38429:38474	339262	1	True				
ANR	342466	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		339262	0					
ANR	342467	IdentifierDeclType	st32		339262	0					
ANR	342468	Identifier	offset		339262	1					
ANR	342469	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		339262	2		=			
ANR	342470	Identifier	offset		339262	0					
ANR	342471	CallExpression	"thumb_getoffset ( ao -> a [ 1 ] , off )"		339262	1					
ANR	342472	Callee	thumb_getoffset		339262	0					
ANR	342473	Identifier	thumb_getoffset		339262	0					
ANR	342474	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	342475	Argument	ao -> a [ 1 ]		339262	0					
ANR	342476	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	342477	PtrMemberAccess	ao -> a		339262	0					
ANR	342478	Identifier	ao		339262	0					
ANR	342479	Identifier	a		339262	1					
ANR	342480	PrimaryExpression	1		339262	1					
ANR	342481	Argument	off		339262	1					
ANR	342482	Identifier	off		339262	0					
ANR	342483	IfStatement	if ( ( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 ) )		339262	2					
ANR	342484	Condition	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )	1858:7:38483:38531	339262	0	True				
ANR	342485	OrExpression	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )		339262	0		||			
ANR	342486	RelationalExpression	reg1 > 7		339262	0		>			
ANR	342487	Identifier	reg1		339262	0					
ANR	342488	PrimaryExpression	7		339262	1					
ANR	342489	OrExpression	( offset > 127 ) || ( offset % 2 != 0 )		339262	1		||			
ANR	342490	RelationalExpression	offset > 127		339262	0		>			
ANR	342491	Identifier	offset		339262	0					
ANR	342492	PrimaryExpression	127		339262	1					
ANR	342493	EqualityExpression	offset % 2 != 0		339262	1		!=			
ANR	342494	MultiplicativeExpression	offset % 2		339262	0		%			
ANR	342495	Identifier	offset		339262	0					
ANR	342496	PrimaryExpression	2		339262	1					
ANR	342497	PrimaryExpression	0		339262	1					
ANR	342498	CompoundStatement		566:58:12675:12675	339262	1					
ANR	342499	ReturnStatement	return - 1 ;	1859:4:38540:38549	339262	0	True				
ANR	342500	UnaryOperationExpression	- 1		339262	0					
ANR	342501	UnaryOperator	-		339262	0					
ANR	342502	PrimaryExpression	1		339262	1					
ANR	342503	ExpressionStatement	ao -> o = 0x00b1	1861:3:38559:38573	339262	3	True				
ANR	342504	AssignmentExpression	ao -> o = 0x00b1		339262	0		=			
ANR	342505	PtrMemberAccess	ao -> o		339262	0					
ANR	342506	Identifier	ao		339262	0					
ANR	342507	Identifier	o		339262	1					
ANR	342508	PrimaryExpression	0x00b1		339262	1					
ANR	342509	ExpressionStatement	ao -> o |= reg1 << 8	1862:3:38578:38596	339262	4	True				
ANR	342510	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	342511	PtrMemberAccess	ao -> o		339262	0					
ANR	342512	Identifier	ao		339262	0					
ANR	342513	Identifier	o		339262	1					
ANR	342514	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	342515	Identifier	reg1		339262	0					
ANR	342516	PrimaryExpression	8		339262	1					
ANR	342517	ExpressionStatement	ao -> o |= ( offset & 0x3e ) << 10	1863:3:38601:38631	339262	5	True				
ANR	342518	AssignmentExpression	ao -> o |= ( offset & 0x3e ) << 10		339262	0		|=			
ANR	342519	PtrMemberAccess	ao -> o		339262	0					
ANR	342520	Identifier	ao		339262	0					
ANR	342521	Identifier	o		339262	1					
ANR	342522	ShiftExpression	( offset & 0x3e ) << 10		339262	1		<<			
ANR	342523	BitAndExpression	offset & 0x3e		339262	0		&			
ANR	342524	Identifier	offset		339262	0					
ANR	342525	PrimaryExpression	0x3e		339262	1					
ANR	342526	PrimaryExpression	10		339262	1					
ANR	342527	ExpressionStatement	ao -> o |= ( offset & 0x40 ) >> 5	1864:3:38636:38665	339262	6	True				
ANR	342528	AssignmentExpression	ao -> o |= ( offset & 0x40 ) >> 5		339262	0		|=			
ANR	342529	PtrMemberAccess	ao -> o		339262	0					
ANR	342530	Identifier	ao		339262	0					
ANR	342531	Identifier	o		339262	1					
ANR	342532	ShiftExpression	( offset & 0x40 ) >> 5		339262	1		>>			
ANR	342533	BitAndExpression	offset & 0x40		339262	0		&			
ANR	342534	Identifier	offset		339262	0					
ANR	342535	PrimaryExpression	0x40		339262	1					
ANR	342536	PrimaryExpression	5		339262	1					
ANR	342537	ReturnStatement	return 2 ;	1865:3:38670:38678	339262	7	True				
ANR	342538	PrimaryExpression	2		339262	0					
ANR	342539	BreakStatement	break ;	1867:3:38695:38700	339262	2	True				
ANR	342540	Label	default :	1868:2:38704:38711	339262	3	True				
ANR	342541	Identifier	default		339262	0					
ANR	342542	ReturnStatement	return - 1 ;	1869:3:38716:38725	339262	4	True				
ANR	342543	UnaryOperationExpression	- 1		339262	0					
ANR	342544	UnaryOperator	-		339262	0					
ANR	342545	PrimaryExpression	1		339262	1					
ANR	342546	ElseStatement	else		339262	0					
ANR	342547	IfStatement	"if ( ( m = opmask ( ao -> op , ""cdp"" , TWO_BIT ) ) )"		339262	0					
ANR	342548	Condition	"m = opmask ( ao -> op , ""cdp"" , TWO_BIT )"	1872:5:38744:38782	339262	0	True				
ANR	342549	AssignmentExpression	"m = opmask ( ao -> op , ""cdp"" , TWO_BIT )"		339262	0		=			
ANR	342550	Identifier	m		339262	0					
ANR	342551	CallExpression	"opmask ( ao -> op , ""cdp"" , TWO_BIT )"		339262	1					
ANR	342552	Callee	opmask		339262	0					
ANR	342553	Identifier	opmask		339262	0					
ANR	342554	ArgumentList	ao -> op		339262	1					
ANR	342555	Argument	ao -> op		339262	0					
ANR	342556	PtrMemberAccess	ao -> op		339262	0					
ANR	342557	Identifier	ao		339262	0					
ANR	342558	Identifier	op		339262	1					
ANR	342559	Argument	"""cdp"""		339262	1					
ANR	342560	PrimaryExpression	"""cdp"""		339262	0					
ANR	342561	Argument	TWO_BIT		339262	2					
ANR	342562	Identifier	TWO_BIT		339262	0					
ANR	342563	CompoundStatement		581:2:12930:12964	339262	1					
ANR	342564	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1873:2:38789:38823	339262	0	True				
ANR	342565	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342566	IdentifierDeclType	ut64		339262	0					
ANR	342567	Identifier	argt		339262	1					
ANR	342568	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342569	Identifier	argt		339262	0					
ANR	342570	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342571	Callee	thumb_selector		339262	0					
ANR	342572	Identifier	thumb_selector		339262	0					
ANR	342573	ArgumentList	ao -> a		339262	1					
ANR	342574	Argument	ao -> a		339262	0					
ANR	342575	PtrMemberAccess	ao -> a		339262	0					
ANR	342576	Identifier	ao		339262	0					
ANR	342577	Identifier	a		339262	1					
ANR	342578	SwitchStatement	switch ( argt )		339262	1					
ANR	342579	Condition	argt	1874:10:38835:38838	339262	0	True				
ANR	342580	Identifier	argt		339262	0					
ANR	342581	CompoundStatement		582:16:12982:12982	339262	1					
ANR	342582	Label	case THUMB_COPROC_CONST_COREG_COREG_COREG :	1875:2:38845:38886	339262	0	True				
ANR	342583	Identifier	THUMB_COPROC_CONST_COREG_COREG_COREG		339262	0					
ANR	342584	CompoundStatement		583:45:13029:13029	339262	1					
ANR	342585	ExpressionStatement	"ao -> a [ 5 ] = ""0"""	1876:3:38893:38907	339262	0	True				
ANR	342586	AssignmentExpression	"ao -> a [ 5 ] = ""0"""		339262	0		=			
ANR	342587	ArrayIndexing	ao -> a [ 5 ]		339262	0					
ANR	342588	PtrMemberAccess	ao -> a		339262	0					
ANR	342589	Identifier	ao		339262	0					
ANR	342590	Identifier	a		339262	1					
ANR	342591	PrimaryExpression	5		339262	1					
ANR	342592	PrimaryExpression	"""0"""		339262	1					
ANR	342593	Label	case THUMB_COPROC_CONST_COREG_COREG_COREG_CONST :	1879:2:38952:38999	339262	2	True				
ANR	342594	Identifier	THUMB_COPROC_CONST_COREG_COREG_COREG_CONST		339262	0					
ANR	342595	CompoundStatement		593:3:13337:13366	339262	3					
ANR	342596	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	1880:3:39006:39040	339262	0	True				
ANR	342597	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	342598	IdentifierDeclType	ut32		339262	0					
ANR	342599	Identifier	coproc		339262	1					
ANR	342600	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	342601	Identifier	coproc		339262	0					
ANR	342602	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	342603	Callee	getcoproc		339262	0					
ANR	342604	Identifier	getcoproc		339262	0					
ANR	342605	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	342606	Argument	ao -> a [ 0 ]		339262	0					
ANR	342607	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	342608	PtrMemberAccess	ao -> a		339262	0					
ANR	342609	Identifier	ao		339262	0					
ANR	342610	Identifier	a		339262	1					
ANR	342611	PrimaryExpression	0		339262	1					
ANR	342612	IdentifierDeclStatement	ut32 opc1 = getnum ( ao -> a [ 1 ] ) ;	1881:3:39045:39074	339262	1	True				
ANR	342613	IdentifierDecl	opc1 = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	342614	IdentifierDeclType	ut32		339262	0					
ANR	342615	Identifier	opc1		339262	1					
ANR	342616	AssignmentExpression	opc1 = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	342617	Identifier	opc1		339262	0					
ANR	342618	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	342619	Callee	getnum		339262	0					
ANR	342620	Identifier	getnum		339262	0					
ANR	342621	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	342622	Argument	ao -> a [ 1 ]		339262	0					
ANR	342623	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	342624	PtrMemberAccess	ao -> a		339262	0					
ANR	342625	Identifier	ao		339262	0					
ANR	342626	Identifier	a		339262	1					
ANR	342627	PrimaryExpression	1		339262	1					
ANR	342628	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 2 ] ) ;	1882:3:39079:39113	339262	2	True				
ANR	342629	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 2 ] )		339262	0					
ANR	342630	IdentifierDeclType	ut8		339262	0					
ANR	342631	Identifier	reg1		339262	1					
ANR	342632	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	342633	Identifier	reg1		339262	0					
ANR	342634	CallExpression	getcoprocreg ( ao -> a [ 2 ] )		339262	1					
ANR	342635	Callee	getcoprocreg		339262	0					
ANR	342636	Identifier	getcoprocreg		339262	0					
ANR	342637	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	342638	Argument	ao -> a [ 2 ]		339262	0					
ANR	342639	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	342640	PtrMemberAccess	ao -> a		339262	0					
ANR	342641	Identifier	ao		339262	0					
ANR	342642	Identifier	a		339262	1					
ANR	342643	PrimaryExpression	2		339262	1					
ANR	342644	IdentifierDeclStatement	ut8 reg2 = getcoprocreg ( ao -> a [ 3 ] ) ;	1883:3:39118:39152	339262	3	True				
ANR	342645	IdentifierDecl	reg2 = getcoprocreg ( ao -> a [ 3 ] )		339262	0					
ANR	342646	IdentifierDeclType	ut8		339262	0					
ANR	342647	Identifier	reg2		339262	1					
ANR	342648	AssignmentExpression	reg2 = getcoprocreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	342649	Identifier	reg2		339262	0					
ANR	342650	CallExpression	getcoprocreg ( ao -> a [ 3 ] )		339262	1					
ANR	342651	Callee	getcoprocreg		339262	0					
ANR	342652	Identifier	getcoprocreg		339262	0					
ANR	342653	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	342654	Argument	ao -> a [ 3 ]		339262	0					
ANR	342655	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	342656	PtrMemberAccess	ao -> a		339262	0					
ANR	342657	Identifier	ao		339262	0					
ANR	342658	Identifier	a		339262	1					
ANR	342659	PrimaryExpression	3		339262	1					
ANR	342660	IdentifierDeclStatement	ut8 reg3 = getcoprocreg ( ao -> a [ 4 ] ) ;	1884:3:39157:39191	339262	4	True				
ANR	342661	IdentifierDecl	reg3 = getcoprocreg ( ao -> a [ 4 ] )		339262	0					
ANR	342662	IdentifierDeclType	ut8		339262	0					
ANR	342663	Identifier	reg3		339262	1					
ANR	342664	AssignmentExpression	reg3 = getcoprocreg ( ao -> a [ 4 ] )		339262	2		=			
ANR	342665	Identifier	reg3		339262	0					
ANR	342666	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		339262	1					
ANR	342667	Callee	getcoprocreg		339262	0					
ANR	342668	Identifier	getcoprocreg		339262	0					
ANR	342669	ArgumentList	ao -> a [ 4 ]		339262	1					
ANR	342670	Argument	ao -> a [ 4 ]		339262	0					
ANR	342671	ArrayIndexing	ao -> a [ 4 ]		339262	0					
ANR	342672	PtrMemberAccess	ao -> a		339262	0					
ANR	342673	Identifier	ao		339262	0					
ANR	342674	Identifier	a		339262	1					
ANR	342675	PrimaryExpression	4		339262	1					
ANR	342676	IdentifierDeclStatement	ut32 opc2 = getnum ( ao -> a [ 5 ] ) ;	1885:3:39196:39225	339262	5	True				
ANR	342677	IdentifierDecl	opc2 = getnum ( ao -> a [ 5 ] )		339262	0					
ANR	342678	IdentifierDeclType	ut32		339262	0					
ANR	342679	Identifier	opc2		339262	1					
ANR	342680	AssignmentExpression	opc2 = getnum ( ao -> a [ 5 ] )		339262	2		=			
ANR	342681	Identifier	opc2		339262	0					
ANR	342682	CallExpression	getnum ( ao -> a [ 5 ] )		339262	1					
ANR	342683	Callee	getnum		339262	0					
ANR	342684	Identifier	getnum		339262	0					
ANR	342685	ArgumentList	ao -> a [ 5 ]		339262	1					
ANR	342686	Argument	ao -> a [ 5 ]		339262	0					
ANR	342687	ArrayIndexing	ao -> a [ 5 ]		339262	0					
ANR	342688	PtrMemberAccess	ao -> a		339262	0					
ANR	342689	Identifier	ao		339262	0					
ANR	342690	Identifier	a		339262	1					
ANR	342691	PrimaryExpression	5		339262	1					
ANR	342692	IfStatement	if ( ( coproc > 15 ) || ( opc1 > 15 ) || ( opc2 > 7 ) )		339262	6					
ANR	342693	Condition	( coproc > 15 ) || ( opc1 > 15 ) || ( opc2 > 7 )	1886:14:39241:39282	339262	0	True				
ANR	342694	OrExpression	( coproc > 15 ) || ( opc1 > 15 ) || ( opc2 > 7 )		339262	0		||			
ANR	342695	RelationalExpression	coproc > 15		339262	0		>			
ANR	342696	Identifier	coproc		339262	0					
ANR	342697	PrimaryExpression	15		339262	1					
ANR	342698	OrExpression	( opc1 > 15 ) || ( opc2 > 7 )		339262	1		||			
ANR	342699	RelationalExpression	opc1 > 15		339262	0		>			
ANR	342700	Identifier	opc1		339262	0					
ANR	342701	PrimaryExpression	15		339262	1					
ANR	342702	RelationalExpression	opc2 > 7		339262	1		>			
ANR	342703	Identifier	opc2		339262	0					
ANR	342704	PrimaryExpression	7		339262	1					
ANR	342705	CompoundStatement		594:58:13426:13426	339262	1					
ANR	342706	ReturnStatement	return - 1 ;	1887:4:39291:39300	339262	0	True				
ANR	342707	UnaryOperationExpression	- 1		339262	0					
ANR	342708	UnaryOperator	-		339262	0					
ANR	342709	PrimaryExpression	1		339262	1					
ANR	342710	ExpressionStatement	ao -> o = 0x00ee0000	1889:3:39310:39328	339262	7	True				
ANR	342711	AssignmentExpression	ao -> o = 0x00ee0000		339262	0		=			
ANR	342712	PtrMemberAccess	ao -> o		339262	0					
ANR	342713	Identifier	ao		339262	0					
ANR	342714	Identifier	o		339262	1					
ANR	342715	PrimaryExpression	0x00ee0000		339262	1					
ANR	342716	IfStatement	if ( m & TWO_BIT )		339262	8					
ANR	342717	Condition	m & TWO_BIT	1890:7:39337:39347	339262	0	True				
ANR	342718	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	342719	Identifier	m		339262	0					
ANR	342720	Identifier	TWO_BIT		339262	1					
ANR	342721	CompoundStatement		598:20:13491:13491	339262	1					
ANR	342722	ExpressionStatement	ao -> o |= 1 << 20	1891:4:39356:39372	339262	0	True				
ANR	342723	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	342724	PtrMemberAccess	ao -> o		339262	0					
ANR	342725	Identifier	ao		339262	0					
ANR	342726	Identifier	o		339262	1					
ANR	342727	ShiftExpression	1 << 20		339262	1		<<			
ANR	342728	PrimaryExpression	1		339262	0					
ANR	342729	PrimaryExpression	20		339262	1					
ANR	342730	ExpressionStatement	ao -> o |= coproc	1893:3:39382:39397	339262	9	True				
ANR	342731	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	342732	PtrMemberAccess	ao -> o		339262	0					
ANR	342733	Identifier	ao		339262	0					
ANR	342734	Identifier	o		339262	1					
ANR	342735	Identifier	coproc		339262	1					
ANR	342736	ExpressionStatement	ao -> o |= opc1 << 28	1894:3:39402:39421	339262	10	True				
ANR	342737	AssignmentExpression	ao -> o |= opc1 << 28		339262	0		|=			
ANR	342738	PtrMemberAccess	ao -> o		339262	0					
ANR	342739	Identifier	ao		339262	0					
ANR	342740	Identifier	o		339262	1					
ANR	342741	ShiftExpression	opc1 << 28		339262	1		<<			
ANR	342742	Identifier	opc1		339262	0					
ANR	342743	PrimaryExpression	28		339262	1					
ANR	342744	ExpressionStatement	ao -> o |= reg1 << 4	1895:3:39426:39444	339262	11	True				
ANR	342745	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	342746	PtrMemberAccess	ao -> o		339262	0					
ANR	342747	Identifier	ao		339262	0					
ANR	342748	Identifier	o		339262	1					
ANR	342749	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	342750	Identifier	reg1		339262	0					
ANR	342751	PrimaryExpression	4		339262	1					
ANR	342752	ExpressionStatement	ao -> o |= reg2 << 24	1896:3:39449:39468	339262	12	True				
ANR	342753	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	342754	PtrMemberAccess	ao -> o		339262	0					
ANR	342755	Identifier	ao		339262	0					
ANR	342756	Identifier	o		339262	1					
ANR	342757	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	342758	Identifier	reg2		339262	0					
ANR	342759	PrimaryExpression	24		339262	1					
ANR	342760	ExpressionStatement	ao -> o |= reg3 << 8	1897:3:39473:39491	339262	13	True				
ANR	342761	AssignmentExpression	ao -> o |= reg3 << 8		339262	0		|=			
ANR	342762	PtrMemberAccess	ao -> o		339262	0					
ANR	342763	Identifier	ao		339262	0					
ANR	342764	Identifier	o		339262	1					
ANR	342765	ShiftExpression	reg3 << 8		339262	1		<<			
ANR	342766	Identifier	reg3		339262	0					
ANR	342767	PrimaryExpression	8		339262	1					
ANR	342768	ExpressionStatement	ao -> o |= opc2 << 13	1898:3:39496:39515	339262	14	True				
ANR	342769	AssignmentExpression	ao -> o |= opc2 << 13		339262	0		|=			
ANR	342770	PtrMemberAccess	ao -> o		339262	0					
ANR	342771	Identifier	ao		339262	0					
ANR	342772	Identifier	o		339262	1					
ANR	342773	ShiftExpression	opc2 << 13		339262	1		<<			
ANR	342774	Identifier	opc2		339262	0					
ANR	342775	PrimaryExpression	13		339262	1					
ANR	342776	ReturnStatement	return 4 ;	1899:3:39520:39528	339262	15	True				
ANR	342777	PrimaryExpression	4		339262	0					
ANR	342778	BreakStatement	break ;	1901:3:39545:39550	339262	4	True				
ANR	342779	Label	default :	1902:2:39554:39561	339262	5	True				
ANR	342780	Identifier	default		339262	0					
ANR	342781	ReturnStatement	return - 1 ;	1903:3:39566:39575	339262	6	True				
ANR	342782	UnaryOperationExpression	- 1		339262	0					
ANR	342783	UnaryOperator	-		339262	0					
ANR	342784	PrimaryExpression	1		339262	1					
ANR	342785	ElseStatement	else		339262	0					
ANR	342786	IfStatement	"if ( ( m = opmask ( ao -> op , ""clrex"" , 0 ) ) )"		339262	0					
ANR	342787	Condition	"m = opmask ( ao -> op , ""clrex"" , 0 )"	1906:5:39596:39630	339262	0	True				
ANR	342788	AssignmentExpression	"m = opmask ( ao -> op , ""clrex"" , 0 )"		339262	0		=			
ANR	342789	Identifier	m		339262	0					
ANR	342790	CallExpression	"opmask ( ao -> op , ""clrex"" , 0 )"		339262	1					
ANR	342791	Callee	opmask		339262	0					
ANR	342792	Identifier	opmask		339262	0					
ANR	342793	ArgumentList	ao -> op		339262	1					
ANR	342794	Argument	ao -> op		339262	0					
ANR	342795	PtrMemberAccess	ao -> op		339262	0					
ANR	342796	Identifier	ao		339262	0					
ANR	342797	Identifier	op		339262	1					
ANR	342798	Argument	"""clrex"""		339262	1					
ANR	342799	PrimaryExpression	"""clrex"""		339262	0					
ANR	342800	Argument	0		339262	2					
ANR	342801	PrimaryExpression	0		339262	0					
ANR	342802	CompoundStatement		615:2:13778:13812	339262	1					
ANR	342803	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1907:2:39637:39671	339262	0	True				
ANR	342804	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342805	IdentifierDeclType	ut64		339262	0					
ANR	342806	Identifier	argt		339262	1					
ANR	342807	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342808	Identifier	argt		339262	0					
ANR	342809	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342810	Callee	thumb_selector		339262	0					
ANR	342811	Identifier	thumb_selector		339262	0					
ANR	342812	ArgumentList	ao -> a		339262	1					
ANR	342813	Argument	ao -> a		339262	0					
ANR	342814	PtrMemberAccess	ao -> a		339262	0					
ANR	342815	Identifier	ao		339262	0					
ANR	342816	Identifier	a		339262	1					
ANR	342817	SwitchStatement	switch ( argt )		339262	1					
ANR	342818	Condition	argt	1908:10:39683:39686	339262	0	True				
ANR	342819	Identifier	argt		339262	0					
ANR	342820	CompoundStatement		616:16:13830:13830	339262	1					
ANR	342821	Label	case THUMB_NONE :	1909:2:39693:39708	339262	0	True				
ANR	342822	Identifier	THUMB_NONE		339262	0					
ANR	342823	CompoundStatement		617:19:13851:13851	339262	1					
ANR	342824	ExpressionStatement	ao -> o = 0xbff32f8f	1910:3:39715:39733	339262	0	True				
ANR	342825	AssignmentExpression	ao -> o = 0xbff32f8f		339262	0		=			
ANR	342826	PtrMemberAccess	ao -> o		339262	0					
ANR	342827	Identifier	ao		339262	0					
ANR	342828	Identifier	o		339262	1					
ANR	342829	PrimaryExpression	0xbff32f8f		339262	1					
ANR	342830	ReturnStatement	return 4 ;	1911:3:39738:39746	339262	1	True				
ANR	342831	PrimaryExpression	4		339262	0					
ANR	342832	BreakStatement	break ;	1913:3:39763:39768	339262	2	True				
ANR	342833	Label	default :	1914:2:39772:39779	339262	3	True				
ANR	342834	Identifier	default		339262	0					
ANR	342835	ReturnStatement	return - 1 ;	1915:3:39784:39793	339262	4	True				
ANR	342836	UnaryOperationExpression	- 1		339262	0					
ANR	342837	UnaryOperator	-		339262	0					
ANR	342838	PrimaryExpression	1		339262	1					
ANR	342839	ElseStatement	else		339262	0					
ANR	342840	IfStatement	"if ( ( m = opmask ( ao -> op , ""clz"" , 0 ) ) )"		339262	0					
ANR	342841	Condition	"m = opmask ( ao -> op , ""clz"" , 0 )"	1918:5:39812:39844	339262	0	True				
ANR	342842	AssignmentExpression	"m = opmask ( ao -> op , ""clz"" , 0 )"		339262	0		=			
ANR	342843	Identifier	m		339262	0					
ANR	342844	CallExpression	"opmask ( ao -> op , ""clz"" , 0 )"		339262	1					
ANR	342845	Callee	opmask		339262	0					
ANR	342846	Identifier	opmask		339262	0					
ANR	342847	ArgumentList	ao -> op		339262	1					
ANR	342848	Argument	ao -> op		339262	0					
ANR	342849	PtrMemberAccess	ao -> op		339262	0					
ANR	342850	Identifier	ao		339262	0					
ANR	342851	Identifier	op		339262	1					
ANR	342852	Argument	"""clz"""		339262	1					
ANR	342853	PrimaryExpression	"""clz"""		339262	0					
ANR	342854	Argument	0		339262	2					
ANR	342855	PrimaryExpression	0		339262	0					
ANR	342856	CompoundStatement		627:2:13992:14026	339262	1					
ANR	342857	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1919:2:39851:39885	339262	0	True				
ANR	342858	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342859	IdentifierDeclType	ut64		339262	0					
ANR	342860	Identifier	argt		339262	1					
ANR	342861	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342862	Identifier	argt		339262	0					
ANR	342863	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342864	Callee	thumb_selector		339262	0					
ANR	342865	Identifier	thumb_selector		339262	0					
ANR	342866	ArgumentList	ao -> a		339262	1					
ANR	342867	Argument	ao -> a		339262	0					
ANR	342868	PtrMemberAccess	ao -> a		339262	0					
ANR	342869	Identifier	ao		339262	0					
ANR	342870	Identifier	a		339262	1					
ANR	342871	SwitchStatement	switch ( argt )		339262	1					
ANR	342872	Condition	argt	1920:10:39897:39900	339262	0	True				
ANR	342873	Identifier	argt		339262	0					
ANR	342874	CompoundStatement		628:16:14044:14044	339262	1					
ANR	342875	Label	case THUMB_REG_REG :	1921:2:39907:39925	339262	0	True				
ANR	342876	Identifier	THUMB_REG_REG		339262	0					
ANR	342877	CompoundStatement		629:22:14068:14068	339262	1					
ANR	342878	ExpressionStatement	ao -> o = 0xb0fa80f0	1922:3:39932:39950	339262	0	True				
ANR	342879	AssignmentExpression	ao -> o = 0xb0fa80f0		339262	0		=			
ANR	342880	PtrMemberAccess	ao -> o		339262	0					
ANR	342881	Identifier	ao		339262	0					
ANR	342882	Identifier	o		339262	1					
ANR	342883	PrimaryExpression	0xb0fa80f0		339262	1					
ANR	342884	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	1923:3:39955:39974	339262	1	True				
ANR	342885	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		339262	0		=			
ANR	342886	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	342887	PtrMemberAccess	ao -> a		339262	0					
ANR	342888	Identifier	ao		339262	0					
ANR	342889	Identifier	a		339262	1					
ANR	342890	PrimaryExpression	2		339262	1					
ANR	342891	ArrayIndexing	ao -> a [ 1 ]		339262	1					
ANR	342892	PtrMemberAccess	ao -> a		339262	0					
ANR	342893	Identifier	ao		339262	0					
ANR	342894	Identifier	a		339262	1					
ANR	342895	PrimaryExpression	1		339262	1					
ANR	342896	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1924:3:39979:40015	339262	2	True				
ANR	342897	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	342898	Callee	std_32bit_3reg		339262	0					
ANR	342899	Identifier	std_32bit_3reg		339262	0					
ANR	342900	ArgumentList	ao		339262	1					
ANR	342901	Argument	ao		339262	0					
ANR	342902	Identifier	ao		339262	0					
ANR	342903	Argument	m		339262	1					
ANR	342904	Identifier	m		339262	0					
ANR	342905	Argument	false		339262	2					
ANR	342906	Identifier	false		339262	0					
ANR	342907	BreakStatement	break ;	1926:3:40032:40037	339262	2	True				
ANR	342908	Label	default :	1927:2:40041:40048	339262	3	True				
ANR	342909	Identifier	default		339262	0					
ANR	342910	ReturnStatement	return - 1 ;	1928:3:40053:40062	339262	4	True				
ANR	342911	UnaryOperationExpression	- 1		339262	0					
ANR	342912	UnaryOperator	-		339262	0					
ANR	342913	PrimaryExpression	1		339262	1					
ANR	342914	ElseStatement	else		339262	0					
ANR	342915	IfStatement	"if ( ( m = opmask ( ao -> op , ""cmn"" , 0 ) ) )"		339262	0					
ANR	342916	Condition	"m = opmask ( ao -> op , ""cmn"" , 0 )"	1931:5:40081:40113	339262	0	True				
ANR	342917	AssignmentExpression	"m = opmask ( ao -> op , ""cmn"" , 0 )"		339262	0		=			
ANR	342918	Identifier	m		339262	0					
ANR	342919	CallExpression	"opmask ( ao -> op , ""cmn"" , 0 )"		339262	1					
ANR	342920	Callee	opmask		339262	0					
ANR	342921	Identifier	opmask		339262	0					
ANR	342922	ArgumentList	ao -> op		339262	1					
ANR	342923	Argument	ao -> op		339262	0					
ANR	342924	PtrMemberAccess	ao -> op		339262	0					
ANR	342925	Identifier	ao		339262	0					
ANR	342926	Identifier	op		339262	1					
ANR	342927	Argument	"""cmn"""		339262	1					
ANR	342928	PrimaryExpression	"""cmn"""		339262	0					
ANR	342929	Argument	0		339262	2					
ANR	342930	PrimaryExpression	0		339262	0					
ANR	342931	CompoundStatement		640:2:14261:14295	339262	1					
ANR	342932	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1932:2:40120:40154	339262	0	True				
ANR	342933	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	342934	IdentifierDeclType	ut64		339262	0					
ANR	342935	Identifier	argt		339262	1					
ANR	342936	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	342937	Identifier	argt		339262	0					
ANR	342938	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	342939	Callee	thumb_selector		339262	0					
ANR	342940	Identifier	thumb_selector		339262	0					
ANR	342941	ArgumentList	ao -> a		339262	1					
ANR	342942	Argument	ao -> a		339262	0					
ANR	342943	PtrMemberAccess	ao -> a		339262	0					
ANR	342944	Identifier	ao		339262	0					
ANR	342945	Identifier	a		339262	1					
ANR	342946	SwitchStatement	switch ( argt )		339262	1					
ANR	342947	Condition	argt	1933:10:40166:40169	339262	0	True				
ANR	342948	Identifier	argt		339262	0					
ANR	342949	CompoundStatement		641:16:14313:14313	339262	1					
ANR	342950	Label	case THUMB_REG_CONST :	1934:2:40176:40196	339262	0	True				
ANR	342951	Identifier	THUMB_REG_CONST		339262	0					
ANR	342952	CompoundStatement		644:3:14377:14411	339262	1					
ANR	342953	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1935:3:40203:40231	339262	0	True				
ANR	342954	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	342955	IdentifierDeclType	ut8		339262	0					
ANR	342956	Identifier	reg1		339262	1					
ANR	342957	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	342958	Identifier	reg1		339262	0					
ANR	342959	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	342960	Callee	getreg		339262	0					
ANR	342961	Identifier	getreg		339262	0					
ANR	342962	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	342963	Argument	ao -> a [ 0 ]		339262	0					
ANR	342964	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	342965	PtrMemberAccess	ao -> a		339262	0					
ANR	342966	Identifier	ao		339262	0					
ANR	342967	Identifier	a		339262	1					
ANR	342968	PrimaryExpression	0		339262	1					
ANR	342969	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	1936:3:40236:40270	339262	1	True				
ANR	342970	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		339262	0					
ANR	342971	IdentifierDeclType	ut32		339262	0					
ANR	342972	Identifier	num		339262	1					
ANR	342973	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		339262	2		=			
ANR	342974	Identifier	num		339262	0					
ANR	342975	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		339262	1					
ANR	342976	Callee	getthimmed12		339262	0					
ANR	342977	Identifier	getthimmed12		339262	0					
ANR	342978	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	342979	Argument	ao -> a [ 1 ]		339262	0					
ANR	342980	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	342981	PtrMemberAccess	ao -> a		339262	0					
ANR	342982	Identifier	ao		339262	0					
ANR	342983	Identifier	a		339262	1					
ANR	342984	PrimaryExpression	1		339262	1					
ANR	342985	ExpressionStatement	ao -> o = 0x10f1000f	1937:3:40275:40293	339262	2	True				
ANR	342986	AssignmentExpression	ao -> o = 0x10f1000f		339262	0		=			
ANR	342987	PtrMemberAccess	ao -> o		339262	0					
ANR	342988	Identifier	ao		339262	0					
ANR	342989	Identifier	o		339262	1					
ANR	342990	PrimaryExpression	0x10f1000f		339262	1					
ANR	342991	ExpressionStatement	ao -> o |= reg1 << 24	1938:3:40298:40317	339262	3	True				
ANR	342992	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	342993	PtrMemberAccess	ao -> o		339262	0					
ANR	342994	Identifier	ao		339262	0					
ANR	342995	Identifier	o		339262	1					
ANR	342996	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	342997	Identifier	reg1		339262	0					
ANR	342998	PrimaryExpression	24		339262	1					
ANR	342999	ExpressionStatement	ao -> o |= num	1939:3:40322:40334	339262	4	True				
ANR	343000	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	343001	PtrMemberAccess	ao -> o		339262	0					
ANR	343002	Identifier	ao		339262	0					
ANR	343003	Identifier	o		339262	1					
ANR	343004	Identifier	num		339262	1					
ANR	343005	ReturnStatement	return 4 ;	1940:3:40339:40347	339262	5	True				
ANR	343006	PrimaryExpression	4		339262	0					
ANR	343007	BreakStatement	break ;	1942:3:40364:40369	339262	2	True				
ANR	343008	Label	case THUMB_REG_REG :	1943:2:40373:40391	339262	3	True				
ANR	343009	Identifier	THUMB_REG_REG		339262	0					
ANR	343010	CompoundStatement		651:22:14534:14534	339262	4					
ANR	343011	ExpressionStatement	ao -> o = 0xc042	1944:3:40398:40412	339262	0	True				
ANR	343012	AssignmentExpression	ao -> o = 0xc042		339262	0		=			
ANR	343013	PtrMemberAccess	ao -> o		339262	0					
ANR	343014	Identifier	ao		339262	0					
ANR	343015	Identifier	o		339262	1					
ANR	343016	PrimaryExpression	0xc042		339262	1					
ANR	343017	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	343018	Condition	"std_16bit_2reg ( ao , m )"	1945:7:40421:40442	339262	0	True				
ANR	343019	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	343020	Callee	std_16bit_2reg		339262	0					
ANR	343021	Identifier	std_16bit_2reg		339262	0					
ANR	343022	ArgumentList	ao		339262	1					
ANR	343023	Argument	ao		339262	0					
ANR	343024	Identifier	ao		339262	0					
ANR	343025	Argument	m		339262	1					
ANR	343026	Identifier	m		339262	0					
ANR	343027	CompoundStatement		653:31:14586:14586	339262	1					
ANR	343028	ReturnStatement	return 2 ;	1946:4:40451:40459	339262	0	True				
ANR	343029	PrimaryExpression	2		339262	0					
ANR	343030	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	1948:3:40469:40487	339262	2	True				
ANR	343031	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	343032	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	343033	PtrMemberAccess	ao -> a		339262	0					
ANR	343034	Identifier	ao		339262	0					
ANR	343035	Identifier	a		339262	1					
ANR	343036	PrimaryExpression	2		339262	1					
ANR	343037	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	343038	Label	case THUMB_REG_REG_SHIFT :	1951:2:40533:40557	339262	5	True				
ANR	343039	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	343040	CompoundStatement		659:28:14700:14700	339262	6					
ANR	343041	ExpressionStatement	ao -> o = 0x10eb000f	1952:3:40564:40582	339262	0	True				
ANR	343042	AssignmentExpression	ao -> o = 0x10eb000f		339262	0		=			
ANR	343043	PtrMemberAccess	ao -> o		339262	0					
ANR	343044	Identifier	ao		339262	0					
ANR	343045	Identifier	o		339262	1					
ANR	343046	PrimaryExpression	0x10eb000f		339262	1					
ANR	343047	ReturnStatement	"return std_32bit_2reg ( ao , m , true ) ;"	1953:3:40587:40622	339262	1	True				
ANR	343048	CallExpression	"std_32bit_2reg ( ao , m , true )"		339262	0					
ANR	343049	Callee	std_32bit_2reg		339262	0					
ANR	343050	Identifier	std_32bit_2reg		339262	0					
ANR	343051	ArgumentList	ao		339262	1					
ANR	343052	Argument	ao		339262	0					
ANR	343053	Identifier	ao		339262	0					
ANR	343054	Argument	m		339262	1					
ANR	343055	Identifier	m		339262	0					
ANR	343056	Argument	true		339262	2					
ANR	343057	Identifier	true		339262	0					
ANR	343058	BreakStatement	break ;	1955:3:40639:40644	339262	7	True				
ANR	343059	Label	default :	1956:2:40648:40655	339262	8	True				
ANR	343060	Identifier	default		339262	0					
ANR	343061	ReturnStatement	return - 1 ;	1957:3:40660:40669	339262	9	True				
ANR	343062	UnaryOperationExpression	- 1		339262	0					
ANR	343063	UnaryOperator	-		339262	0					
ANR	343064	PrimaryExpression	1		339262	1					
ANR	343065	ElseStatement	else		339262	0					
ANR	343066	IfStatement	"if ( ( m = opmask ( ao -> op , ""cmp"" , 0 ) ) )"		339262	0					
ANR	343067	Condition	"m = opmask ( ao -> op , ""cmp"" , 0 )"	1960:5:40688:40720	339262	0	True				
ANR	343068	AssignmentExpression	"m = opmask ( ao -> op , ""cmp"" , 0 )"		339262	0		=			
ANR	343069	Identifier	m		339262	0					
ANR	343070	CallExpression	"opmask ( ao -> op , ""cmp"" , 0 )"		339262	1					
ANR	343071	Callee	opmask		339262	0					
ANR	343072	Identifier	opmask		339262	0					
ANR	343073	ArgumentList	ao -> op		339262	1					
ANR	343074	Argument	ao -> op		339262	0					
ANR	343075	PtrMemberAccess	ao -> op		339262	0					
ANR	343076	Identifier	ao		339262	0					
ANR	343077	Identifier	op		339262	1					
ANR	343078	Argument	"""cmp"""		339262	1					
ANR	343079	PrimaryExpression	"""cmp"""		339262	0					
ANR	343080	Argument	0		339262	2					
ANR	343081	PrimaryExpression	0		339262	0					
ANR	343082	CompoundStatement		669:2:14868:14902	339262	1					
ANR	343083	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1961:2:40727:40761	339262	0	True				
ANR	343084	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	343085	IdentifierDeclType	ut64		339262	0					
ANR	343086	Identifier	argt		339262	1					
ANR	343087	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	343088	Identifier	argt		339262	0					
ANR	343089	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	343090	Callee	thumb_selector		339262	0					
ANR	343091	Identifier	thumb_selector		339262	0					
ANR	343092	ArgumentList	ao -> a		339262	1					
ANR	343093	Argument	ao -> a		339262	0					
ANR	343094	PtrMemberAccess	ao -> a		339262	0					
ANR	343095	Identifier	ao		339262	0					
ANR	343096	Identifier	a		339262	1					
ANR	343097	SwitchStatement	switch ( argt )		339262	1					
ANR	343098	Condition	argt	1962:10:40773:40776	339262	0	True				
ANR	343099	Identifier	argt		339262	0					
ANR	343100	CompoundStatement		670:16:14920:14920	339262	1					
ANR	343101	Label	case THUMB_REG_CONST :	1963:2:40783:40803	339262	0	True				
ANR	343102	Identifier	THUMB_REG_CONST		339262	0					
ANR	343103	CompoundStatement		673:3:14984:15012	339262	1					
ANR	343104	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1964:3:40810:40838	339262	0	True				
ANR	343105	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	343106	IdentifierDeclType	ut8		339262	0					
ANR	343107	Identifier	reg1		339262	1					
ANR	343108	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	343109	Identifier	reg1		339262	0					
ANR	343110	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	343111	Callee	getreg		339262	0					
ANR	343112	Identifier	getreg		339262	0					
ANR	343113	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343114	Argument	ao -> a [ 0 ]		339262	0					
ANR	343115	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343116	PtrMemberAccess	ao -> a		339262	0					
ANR	343117	Identifier	ao		339262	0					
ANR	343118	Identifier	a		339262	1					
ANR	343119	PrimaryExpression	0		339262	1					
ANR	343120	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	1965:3:40843:40871	339262	1	True				
ANR	343121	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	343122	IdentifierDeclType	ut32		339262	0					
ANR	343123	Identifier	num		339262	1					
ANR	343124	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	343125	Identifier	num		339262	0					
ANR	343126	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	343127	Callee	getnum		339262	0					
ANR	343128	Identifier	getnum		339262	0					
ANR	343129	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	343130	Argument	ao -> a [ 1 ]		339262	0					
ANR	343131	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	343132	PtrMemberAccess	ao -> a		339262	0					
ANR	343133	Identifier	ao		339262	0					
ANR	343134	Identifier	a		339262	1					
ANR	343135	PrimaryExpression	1		339262	1					
ANR	343136	IfStatement	if ( ( num < 256 ) && ( ! ( m & DOTW_BIT ) ) )		339262	2					
ANR	343137	Condition	( num < 256 ) && ( ! ( m & DOTW_BIT ) )	1966:7:40880:40911	339262	0	True				
ANR	343138	AndExpression	( num < 256 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	343139	RelationalExpression	num < 256		339262	0		<			
ANR	343140	Identifier	num		339262	0					
ANR	343141	PrimaryExpression	256		339262	1					
ANR	343142	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	343143	UnaryOperator	!		339262	0					
ANR	343144	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	343145	Identifier	m		339262	0					
ANR	343146	Identifier	DOTW_BIT		339262	1					
ANR	343147	CompoundStatement		674:41:15055:15055	339262	1					
ANR	343148	ExpressionStatement	ao -> o = 0x0028	1967:4:40920:40934	339262	0	True				
ANR	343149	AssignmentExpression	ao -> o = 0x0028		339262	0		=			
ANR	343150	PtrMemberAccess	ao -> o		339262	0					
ANR	343151	Identifier	ao		339262	0					
ANR	343152	Identifier	o		339262	1					
ANR	343153	PrimaryExpression	0x0028		339262	1					
ANR	343154	ExpressionStatement	ao -> o |= reg1	1968:4:40940:40953	339262	1	True				
ANR	343155	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	343156	PtrMemberAccess	ao -> o		339262	0					
ANR	343157	Identifier	ao		339262	0					
ANR	343158	Identifier	o		339262	1					
ANR	343159	Identifier	reg1		339262	1					
ANR	343160	ExpressionStatement	ao -> o |= num << 8	1969:4:40959:40976	339262	2	True				
ANR	343161	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	343162	PtrMemberAccess	ao -> o		339262	0					
ANR	343163	Identifier	ao		339262	0					
ANR	343164	Identifier	o		339262	1					
ANR	343165	ShiftExpression	num << 8		339262	1		<<			
ANR	343166	Identifier	num		339262	0					
ANR	343167	PrimaryExpression	8		339262	1					
ANR	343168	ReturnStatement	return 2 ;	1970:4:40982:40990	339262	3	True				
ANR	343169	PrimaryExpression	2		339262	0					
ANR	343170	ExpressionStatement	num = getthimmed12 ( ao -> a [ 1 ] )	1972:3:41000:41029	339262	3	True				
ANR	343171	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		339262	0		=			
ANR	343172	Identifier	num		339262	0					
ANR	343173	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		339262	1					
ANR	343174	Callee	getthimmed12		339262	0					
ANR	343175	Identifier	getthimmed12		339262	0					
ANR	343176	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	343177	Argument	ao -> a [ 1 ]		339262	0					
ANR	343178	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	343179	PtrMemberAccess	ao -> a		339262	0					
ANR	343180	Identifier	ao		339262	0					
ANR	343181	Identifier	a		339262	1					
ANR	343182	PrimaryExpression	1		339262	1					
ANR	343183	ExpressionStatement	ao -> o = 0xb0f1000f	1973:3:41034:41052	339262	4	True				
ANR	343184	AssignmentExpression	ao -> o = 0xb0f1000f		339262	0		=			
ANR	343185	PtrMemberAccess	ao -> o		339262	0					
ANR	343186	Identifier	ao		339262	0					
ANR	343187	Identifier	o		339262	1					
ANR	343188	PrimaryExpression	0xb0f1000f		339262	1					
ANR	343189	ExpressionStatement	ao -> o |= reg1 << 24	1974:3:41057:41076	339262	5	True				
ANR	343190	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	343191	PtrMemberAccess	ao -> o		339262	0					
ANR	343192	Identifier	ao		339262	0					
ANR	343193	Identifier	o		339262	1					
ANR	343194	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	343195	Identifier	reg1		339262	0					
ANR	343196	PrimaryExpression	24		339262	1					
ANR	343197	ExpressionStatement	ao -> o |= num	1975:3:41081:41093	339262	6	True				
ANR	343198	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	343199	PtrMemberAccess	ao -> o		339262	0					
ANR	343200	Identifier	ao		339262	0					
ANR	343201	Identifier	o		339262	1					
ANR	343202	Identifier	num		339262	1					
ANR	343203	ReturnStatement	return 4 ;	1976:3:41098:41106	339262	7	True				
ANR	343204	PrimaryExpression	4		339262	0					
ANR	343205	BreakStatement	break ;	1978:3:41123:41128	339262	2	True				
ANR	343206	Label	case THUMB_REG_REG :	1979:2:41132:41150	339262	3	True				
ANR	343207	Identifier	THUMB_REG_REG		339262	0					
ANR	343208	CompoundStatement		689:3:15331:15359	339262	4					
ANR	343209	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1980:3:41157:41185	339262	0	True				
ANR	343210	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	343211	IdentifierDeclType	ut8		339262	0					
ANR	343212	Identifier	reg1		339262	1					
ANR	343213	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	343214	Identifier	reg1		339262	0					
ANR	343215	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	343216	Callee	getreg		339262	0					
ANR	343217	Identifier	getreg		339262	0					
ANR	343218	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343219	Argument	ao -> a [ 0 ]		339262	0					
ANR	343220	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343221	PtrMemberAccess	ao -> a		339262	0					
ANR	343222	Identifier	ao		339262	0					
ANR	343223	Identifier	a		339262	1					
ANR	343224	PrimaryExpression	0		339262	1					
ANR	343225	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1981:3:41190:41218	339262	1	True				
ANR	343226	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	343227	IdentifierDeclType	ut8		339262	0					
ANR	343228	Identifier	reg2		339262	1					
ANR	343229	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	343230	Identifier	reg2		339262	0					
ANR	343231	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	343232	Callee	getreg		339262	0					
ANR	343233	Identifier	getreg		339262	0					
ANR	343234	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	343235	Argument	ao -> a [ 1 ]		339262	0					
ANR	343236	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	343237	PtrMemberAccess	ao -> a		339262	0					
ANR	343238	Identifier	ao		339262	0					
ANR	343239	Identifier	a		339262	1					
ANR	343240	PrimaryExpression	1		339262	1					
ANR	343241	ExpressionStatement	ao -> o = 0x8042	1982:3:41223:41237	339262	2	True				
ANR	343242	AssignmentExpression	ao -> o = 0x8042		339262	0		=			
ANR	343243	PtrMemberAccess	ao -> o		339262	0					
ANR	343244	Identifier	ao		339262	0					
ANR	343245	Identifier	o		339262	1					
ANR	343246	PrimaryExpression	0x8042		339262	1					
ANR	343247	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	3					
ANR	343248	Condition	"std_16bit_2reg ( ao , m )"	1983:7:41246:41267	339262	0	True				
ANR	343249	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	343250	Callee	std_16bit_2reg		339262	0					
ANR	343251	Identifier	std_16bit_2reg		339262	0					
ANR	343252	ArgumentList	ao		339262	1					
ANR	343253	Argument	ao		339262	0					
ANR	343254	Identifier	ao		339262	0					
ANR	343255	Argument	m		339262	1					
ANR	343256	Identifier	m		339262	0					
ANR	343257	CompoundStatement		691:31:15411:15411	339262	1					
ANR	343258	ReturnStatement	return 2 ;	1984:4:41276:41284	339262	0	True				
ANR	343259	PrimaryExpression	2		339262	0					
ANR	343260	IfStatement	if ( ! ( m & DOTW_BIT ) )		339262	4					
ANR	343261	Condition	! ( m & DOTW_BIT )	1986:7:41298:41312	339262	0	True				
ANR	343262	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	343263	UnaryOperator	!		339262	0					
ANR	343264	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	343265	Identifier	m		339262	0					
ANR	343266	Identifier	DOTW_BIT		339262	1					
ANR	343267	CompoundStatement		694:24:15456:15456	339262	1					
ANR	343268	ExpressionStatement	ao -> o = 0x0045	1987:4:41321:41335	339262	0	True				
ANR	343269	AssignmentExpression	ao -> o = 0x0045		339262	0		=			
ANR	343270	PtrMemberAccess	ao -> o		339262	0					
ANR	343271	Identifier	ao		339262	0					
ANR	343272	Identifier	o		339262	1					
ANR	343273	PrimaryExpression	0x0045		339262	1					
ANR	343274	ExpressionStatement	ao -> o |= ( ( reg1 & 0x7 ) << 8 )	1988:4:41341:41369	339262	1	True				
ANR	343275	AssignmentExpression	ao -> o |= ( ( reg1 & 0x7 ) << 8 )		339262	0		|=			
ANR	343276	PtrMemberAccess	ao -> o		339262	0					
ANR	343277	Identifier	ao		339262	0					
ANR	343278	Identifier	o		339262	1					
ANR	343279	ShiftExpression	( reg1 & 0x7 ) << 8		339262	1		<<			
ANR	343280	BitAndExpression	reg1 & 0x7		339262	0		&			
ANR	343281	Identifier	reg1		339262	0					
ANR	343282	PrimaryExpression	0x7		339262	1					
ANR	343283	PrimaryExpression	8		339262	1					
ANR	343284	ExpressionStatement	ao -> o |= ( ( reg1 & 0x8 ) << 12 )	1989:4:41375:41404	339262	2	True				
ANR	343285	AssignmentExpression	ao -> o |= ( ( reg1 & 0x8 ) << 12 )		339262	0		|=			
ANR	343286	PtrMemberAccess	ao -> o		339262	0					
ANR	343287	Identifier	ao		339262	0					
ANR	343288	Identifier	o		339262	1					
ANR	343289	ShiftExpression	( reg1 & 0x8 ) << 12		339262	1		<<			
ANR	343290	BitAndExpression	reg1 & 0x8		339262	0		&			
ANR	343291	Identifier	reg1		339262	0					
ANR	343292	PrimaryExpression	0x8		339262	1					
ANR	343293	PrimaryExpression	12		339262	1					
ANR	343294	ExpressionStatement	ao -> o |= reg2 << 11	1990:4:41410:41429	339262	3	True				
ANR	343295	AssignmentExpression	ao -> o |= reg2 << 11		339262	0		|=			
ANR	343296	PtrMemberAccess	ao -> o		339262	0					
ANR	343297	Identifier	ao		339262	0					
ANR	343298	Identifier	o		339262	1					
ANR	343299	ShiftExpression	reg2 << 11		339262	1		<<			
ANR	343300	Identifier	reg2		339262	0					
ANR	343301	PrimaryExpression	11		339262	1					
ANR	343302	ReturnStatement	return 2 ;	1991:4:41435:41443	339262	4	True				
ANR	343303	PrimaryExpression	2		339262	0					
ANR	343304	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	1993:3:41453:41471	339262	5	True				
ANR	343305	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	343306	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	343307	PtrMemberAccess	ao -> a		339262	0					
ANR	343308	Identifier	ao		339262	0					
ANR	343309	Identifier	a		339262	1					
ANR	343310	PrimaryExpression	2		339262	1					
ANR	343311	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	343312	Label	case THUMB_REG_REG_SHIFT :	1996:2:41517:41541	339262	5	True				
ANR	343313	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	343314	CompoundStatement		707:3:15755:15793	339262	6					
ANR	343315	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1997:3:41548:41576	339262	0	True				
ANR	343316	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	343317	IdentifierDeclType	ut8		339262	0					
ANR	343318	Identifier	reg1		339262	1					
ANR	343319	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	343320	Identifier	reg1		339262	0					
ANR	343321	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	343322	Callee	getreg		339262	0					
ANR	343323	Identifier	getreg		339262	0					
ANR	343324	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343325	Argument	ao -> a [ 0 ]		339262	0					
ANR	343326	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343327	PtrMemberAccess	ao -> a		339262	0					
ANR	343328	Identifier	ao		339262	0					
ANR	343329	Identifier	a		339262	1					
ANR	343330	PrimaryExpression	0		339262	1					
ANR	343331	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1998:3:41581:41609	339262	1	True				
ANR	343332	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	343333	IdentifierDeclType	ut8		339262	0					
ANR	343334	Identifier	reg2		339262	1					
ANR	343335	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	343336	Identifier	reg2		339262	0					
ANR	343337	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	343338	Callee	getreg		339262	0					
ANR	343339	Identifier	getreg		339262	0					
ANR	343340	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	343341	Argument	ao -> a [ 1 ]		339262	0					
ANR	343342	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	343343	PtrMemberAccess	ao -> a		339262	0					
ANR	343344	Identifier	ao		339262	0					
ANR	343345	Identifier	a		339262	1					
ANR	343346	PrimaryExpression	1		339262	1					
ANR	343347	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	1999:3:41614:41652	339262	2	True				
ANR	343348	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	0					
ANR	343349	IdentifierDeclType	ut32		339262	0					
ANR	343350	Identifier	shift		339262	1					
ANR	343351	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	2		=			
ANR	343352	Identifier	shift		339262	0					
ANR	343353	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		339262	1					
ANR	343354	Callee	thumb_getshift		339262	0					
ANR	343355	Identifier	thumb_getshift		339262	0					
ANR	343356	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	343357	Argument	ao -> a [ 2 ]		339262	0					
ANR	343358	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	343359	PtrMemberAccess	ao -> a		339262	0					
ANR	343360	Identifier	ao		339262	0					
ANR	343361	Identifier	a		339262	1					
ANR	343362	PrimaryExpression	2		339262	1					
ANR	343363	ExpressionStatement	ao -> o = 0xb0eb000f	2000:3:41657:41675	339262	3	True				
ANR	343364	AssignmentExpression	ao -> o = 0xb0eb000f		339262	0		=			
ANR	343365	PtrMemberAccess	ao -> o		339262	0					
ANR	343366	Identifier	ao		339262	0					
ANR	343367	Identifier	o		339262	1					
ANR	343368	PrimaryExpression	0xb0eb000f		339262	1					
ANR	343369	ExpressionStatement	ao -> o |= reg1 << 24	2001:3:41680:41699	339262	4	True				
ANR	343370	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	343371	PtrMemberAccess	ao -> o		339262	0					
ANR	343372	Identifier	ao		339262	0					
ANR	343373	Identifier	o		339262	1					
ANR	343374	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	343375	Identifier	reg1		339262	0					
ANR	343376	PrimaryExpression	24		339262	1					
ANR	343377	ExpressionStatement	ao -> o |= reg2 << 8	2002:3:41704:41722	339262	5	True				
ANR	343378	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	343379	PtrMemberAccess	ao -> o		339262	0					
ANR	343380	Identifier	ao		339262	0					
ANR	343381	Identifier	o		339262	1					
ANR	343382	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	343383	Identifier	reg2		339262	0					
ANR	343384	PrimaryExpression	8		339262	1					
ANR	343385	ExpressionStatement	ao -> o |= shift	2003:3:41727:41741	339262	6	True				
ANR	343386	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	343387	PtrMemberAccess	ao -> o		339262	0					
ANR	343388	Identifier	ao		339262	0					
ANR	343389	Identifier	o		339262	1					
ANR	343390	Identifier	shift		339262	1					
ANR	343391	ReturnStatement	return 4 ;	2004:3:41746:41754	339262	7	True				
ANR	343392	PrimaryExpression	4		339262	0					
ANR	343393	BreakStatement	break ;	2006:3:41771:41776	339262	7	True				
ANR	343394	Label	default :	2007:2:41780:41787	339262	8	True				
ANR	343395	Identifier	default		339262	0					
ANR	343396	ReturnStatement	return - 1 ;	2008:3:41792:41801	339262	9	True				
ANR	343397	UnaryOperationExpression	- 1		339262	0					
ANR	343398	UnaryOperator	-		339262	0					
ANR	343399	PrimaryExpression	1		339262	1					
ANR	343400	ElseStatement	else		339262	0					
ANR	343401	IfStatement	"if ( ( m = opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT ) ) )"		339262	0					
ANR	343402	Condition	"m = opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT )"	2011:5:41820:41866	339262	0	True				
ANR	343403	AssignmentExpression	"m = opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT )"		339262	0		=			
ANR	343404	Identifier	m		339262	0					
ANR	343405	CallExpression	"opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT )"		339262	1					
ANR	343406	Callee	opmask		339262	0					
ANR	343407	Identifier	opmask		339262	0					
ANR	343408	ArgumentList	ao -> op		339262	1					
ANR	343409	Argument	ao -> op		339262	0					
ANR	343410	PtrMemberAccess	ao -> op		339262	0					
ANR	343411	Identifier	ao		339262	0					
ANR	343412	Identifier	op		339262	1					
ANR	343413	Argument	"""cps"""		339262	1					
ANR	343414	PrimaryExpression	"""cps"""		339262	0					
ANR	343415	Argument	ID_BIT | IE_BIT		339262	2					
ANR	343416	InclusiveOrExpression	ID_BIT | IE_BIT		339262	0		|			
ANR	343417	Identifier	ID_BIT		339262	0					
ANR	343418	Identifier	IE_BIT		339262	1					
ANR	343419	CompoundStatement		720:2:16014:16048	339262	1					
ANR	343420	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2012:2:41873:41907	339262	0	True				
ANR	343421	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	343422	IdentifierDeclType	ut64		339262	0					
ANR	343423	Identifier	argt		339262	1					
ANR	343424	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	343425	Identifier	argt		339262	0					
ANR	343426	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	343427	Callee	thumb_selector		339262	0					
ANR	343428	Identifier	thumb_selector		339262	0					
ANR	343429	ArgumentList	ao -> a		339262	1					
ANR	343430	Argument	ao -> a		339262	0					
ANR	343431	PtrMemberAccess	ao -> a		339262	0					
ANR	343432	Identifier	ao		339262	0					
ANR	343433	Identifier	a		339262	1					
ANR	343434	SwitchStatement	switch ( argt )		339262	1					
ANR	343435	Condition	argt	2013:10:41919:41922	339262	0	True				
ANR	343436	Identifier	argt		339262	0					
ANR	343437	CompoundStatement		721:16:16066:16066	339262	1					
ANR	343438	Label	case THUMB_OTHER :	2014:2:41929:41945	339262	0	True				
ANR	343439	Identifier	THUMB_OTHER		339262	0					
ANR	343440	CompoundStatement		723:3:16093:16118	339262	1					
ANR	343441	IdentifierDeclStatement	st8 aif = iflag ( ao -> a [ 0 ] ) ;	2015:3:41952:41977	339262	0	True				
ANR	343442	IdentifierDecl	aif = iflag ( ao -> a [ 0 ] )		339262	0					
ANR	343443	IdentifierDeclType	st8		339262	0					
ANR	343444	Identifier	aif		339262	1					
ANR	343445	AssignmentExpression	aif = iflag ( ao -> a [ 0 ] )		339262	2		=			
ANR	343446	Identifier	aif		339262	0					
ANR	343447	CallExpression	iflag ( ao -> a [ 0 ] )		339262	1					
ANR	343448	Callee	iflag		339262	0					
ANR	343449	Identifier	iflag		339262	0					
ANR	343450	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343451	Argument	ao -> a [ 0 ]		339262	0					
ANR	343452	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343453	PtrMemberAccess	ao -> a		339262	0					
ANR	343454	Identifier	ao		339262	0					
ANR	343455	Identifier	a		339262	1					
ANR	343456	PrimaryExpression	0		339262	1					
ANR	343457	IfStatement	if ( aif == - 1 )		339262	1					
ANR	343458	Condition	aif == - 1	2016:7:41986:41994	339262	0	True				
ANR	343459	EqualityExpression	aif == - 1		339262	0		==			
ANR	343460	Identifier	aif		339262	0					
ANR	343461	UnaryOperationExpression	- 1		339262	1					
ANR	343462	UnaryOperator	-		339262	0					
ANR	343463	PrimaryExpression	1		339262	1					
ANR	343464	CompoundStatement		724:18:16138:16138	339262	1					
ANR	343465	ReturnStatement	return - 1 ;	2017:4:42003:42012	339262	0	True				
ANR	343466	UnaryOperationExpression	- 1		339262	0					
ANR	343467	UnaryOperator	-		339262	0					
ANR	343468	PrimaryExpression	1		339262	1					
ANR	343469	IfStatement	if ( ! ( m & DOTW_BIT ) )		339262	2					
ANR	343470	Condition	! ( m & DOTW_BIT )	2019:7:42026:42040	339262	0	True				
ANR	343471	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	343472	UnaryOperator	!		339262	0					
ANR	343473	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	343474	Identifier	m		339262	0					
ANR	343475	Identifier	DOTW_BIT		339262	1					
ANR	343476	CompoundStatement		727:24:16184:16184	339262	1					
ANR	343477	ExpressionStatement	ao -> o = 0x60b6	2020:4:42049:42063	339262	0	True				
ANR	343478	AssignmentExpression	ao -> o = 0x60b6		339262	0		=			
ANR	343479	PtrMemberAccess	ao -> o		339262	0					
ANR	343480	Identifier	ao		339262	0					
ANR	343481	Identifier	o		339262	1					
ANR	343482	PrimaryExpression	0x60b6		339262	1					
ANR	343483	ExpressionStatement	ao -> o |= aif << 8	2021:4:42069:42086	339262	1	True				
ANR	343484	AssignmentExpression	ao -> o |= aif << 8		339262	0		|=			
ANR	343485	PtrMemberAccess	ao -> o		339262	0					
ANR	343486	Identifier	ao		339262	0					
ANR	343487	Identifier	o		339262	1					
ANR	343488	ShiftExpression	aif << 8		339262	1		<<			
ANR	343489	Identifier	aif		339262	0					
ANR	343490	PrimaryExpression	8		339262	1					
ANR	343491	IfStatement	if ( m & ID_BIT )		339262	2					
ANR	343492	Condition	m & ID_BIT	2022:8:42096:42105	339262	0	True				
ANR	343493	BitAndExpression	m & ID_BIT		339262	0		&			
ANR	343494	Identifier	m		339262	0					
ANR	343495	Identifier	ID_BIT		339262	1					
ANR	343496	CompoundStatement		730:20:16249:16249	339262	1					
ANR	343497	ExpressionStatement	ao -> o |= 1 << 12	2023:5:42115:42131	339262	0	True				
ANR	343498	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	343499	PtrMemberAccess	ao -> o		339262	0					
ANR	343500	Identifier	ao		339262	0					
ANR	343501	Identifier	o		339262	1					
ANR	343502	ShiftExpression	1 << 12		339262	1		<<			
ANR	343503	PrimaryExpression	1		339262	0					
ANR	343504	PrimaryExpression	12		339262	1					
ANR	343505	ReturnStatement	return 2 ;	2025:4:42143:42151	339262	3	True				
ANR	343506	PrimaryExpression	2		339262	0					
ANR	343507	ExpressionStatement	"ao -> a [ 1 ] = ""0"""	2027:3:42161:42175	339262	3	True				
ANR	343508	AssignmentExpression	"ao -> a [ 1 ] = ""0"""		339262	0		=			
ANR	343509	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	343510	PtrMemberAccess	ao -> a		339262	0					
ANR	343511	Identifier	ao		339262	0					
ANR	343512	Identifier	a		339262	1					
ANR	343513	PrimaryExpression	1		339262	1					
ANR	343514	PrimaryExpression	"""0"""		339262	1					
ANR	343515	Label	case THUMB_OTHER_CONST :	2030:2:42221:42243	339262	2	True				
ANR	343516	Identifier	THUMB_OTHER_CONST		339262	0					
ANR	343517	CompoundStatement		740:3:16421:16449	339262	3					
ANR	343518	IdentifierDeclStatement	st8 aif = iflag ( ao -> a [ 0 ] ) ;	2031:3:42250:42275	339262	0	True				
ANR	343519	IdentifierDecl	aif = iflag ( ao -> a [ 0 ] )		339262	0					
ANR	343520	IdentifierDeclType	st8		339262	0					
ANR	343521	Identifier	aif		339262	1					
ANR	343522	AssignmentExpression	aif = iflag ( ao -> a [ 0 ] )		339262	2		=			
ANR	343523	Identifier	aif		339262	0					
ANR	343524	CallExpression	iflag ( ao -> a [ 0 ] )		339262	1					
ANR	343525	Callee	iflag		339262	0					
ANR	343526	Identifier	iflag		339262	0					
ANR	343527	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343528	Argument	ao -> a [ 0 ]		339262	0					
ANR	343529	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343530	PtrMemberAccess	ao -> a		339262	0					
ANR	343531	Identifier	ao		339262	0					
ANR	343532	Identifier	a		339262	1					
ANR	343533	PrimaryExpression	0		339262	1					
ANR	343534	IdentifierDeclStatement	ut8 mode = getnum ( ao -> a [ 1 ] ) ;	2032:3:42280:42308	339262	1	True				
ANR	343535	IdentifierDecl	mode = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	343536	IdentifierDeclType	ut8		339262	0					
ANR	343537	Identifier	mode		339262	1					
ANR	343538	AssignmentExpression	mode = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	343539	Identifier	mode		339262	0					
ANR	343540	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	343541	Callee	getnum		339262	0					
ANR	343542	Identifier	getnum		339262	0					
ANR	343543	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	343544	Argument	ao -> a [ 1 ]		339262	0					
ANR	343545	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	343546	PtrMemberAccess	ao -> a		339262	0					
ANR	343547	Identifier	ao		339262	0					
ANR	343548	Identifier	a		339262	1					
ANR	343549	PrimaryExpression	1		339262	1					
ANR	343550	IfStatement	if ( ( mode > 31 ) || ( aif == - 1 ) )		339262	2					
ANR	343551	Condition	( mode > 31 ) || ( aif == - 1 )	2033:7:42317:42342	339262	0	True				
ANR	343552	OrExpression	( mode > 31 ) || ( aif == - 1 )		339262	0		||			
ANR	343553	RelationalExpression	mode > 31		339262	0		>			
ANR	343554	Identifier	mode		339262	0					
ANR	343555	PrimaryExpression	31		339262	1					
ANR	343556	EqualityExpression	aif == - 1		339262	1		==			
ANR	343557	Identifier	aif		339262	0					
ANR	343558	UnaryOperationExpression	- 1		339262	1					
ANR	343559	UnaryOperator	-		339262	0					
ANR	343560	PrimaryExpression	1		339262	1					
ANR	343561	CompoundStatement		741:35:16486:16486	339262	1					
ANR	343562	ReturnStatement	return - 1 ;	2034:4:42351:42360	339262	0	True				
ANR	343563	UnaryOperationExpression	- 1		339262	0					
ANR	343564	UnaryOperator	-		339262	0					
ANR	343565	PrimaryExpression	1		339262	1					
ANR	343566	ExpressionStatement	ao -> o = 0xaff30085	2036:3:42370:42388	339262	3	True				
ANR	343567	AssignmentExpression	ao -> o = 0xaff30085		339262	0		=			
ANR	343568	PtrMemberAccess	ao -> o		339262	0					
ANR	343569	Identifier	ao		339262	0					
ANR	343570	Identifier	o		339262	1					
ANR	343571	PrimaryExpression	0xaff30085		339262	1					
ANR	343572	ExpressionStatement	ao -> o |= mode << 8	2037:3:42393:42411	339262	4	True				
ANR	343573	AssignmentExpression	ao -> o |= mode << 8		339262	0		|=			
ANR	343574	PtrMemberAccess	ao -> o		339262	0					
ANR	343575	Identifier	ao		339262	0					
ANR	343576	Identifier	o		339262	1					
ANR	343577	ShiftExpression	mode << 8		339262	1		<<			
ANR	343578	Identifier	mode		339262	0					
ANR	343579	PrimaryExpression	8		339262	1					
ANR	343580	ExpressionStatement	ao -> o |= aif << 13	2038:3:42416:42434	339262	5	True				
ANR	343581	AssignmentExpression	ao -> o |= aif << 13		339262	0		|=			
ANR	343582	PtrMemberAccess	ao -> o		339262	0					
ANR	343583	Identifier	ao		339262	0					
ANR	343584	Identifier	o		339262	1					
ANR	343585	ShiftExpression	aif << 13		339262	1		<<			
ANR	343586	Identifier	aif		339262	0					
ANR	343587	PrimaryExpression	13		339262	1					
ANR	343588	IfStatement	if ( m & ID_BIT )		339262	6					
ANR	343589	Condition	m & ID_BIT	2039:7:42443:42452	339262	0	True				
ANR	343590	BitAndExpression	m & ID_BIT		339262	0		&			
ANR	343591	Identifier	m		339262	0					
ANR	343592	Identifier	ID_BIT		339262	1					
ANR	343593	CompoundStatement		747:19:16596:16596	339262	1					
ANR	343594	ExpressionStatement	ao -> o |= 1 << 1	2040:4:42461:42476	339262	0	True				
ANR	343595	AssignmentExpression	ao -> o |= 1 << 1		339262	0		|=			
ANR	343596	PtrMemberAccess	ao -> o		339262	0					
ANR	343597	Identifier	ao		339262	0					
ANR	343598	Identifier	o		339262	1					
ANR	343599	ShiftExpression	1 << 1		339262	1		<<			
ANR	343600	PrimaryExpression	1		339262	0					
ANR	343601	PrimaryExpression	1		339262	1					
ANR	343602	ReturnStatement	return 4 ;	2042:3:42486:42494	339262	7	True				
ANR	343603	PrimaryExpression	4		339262	0					
ANR	343604	BreakStatement	break ;	2044:3:42511:42516	339262	4	True				
ANR	343605	Label	case THUMB_CONST :	2045:2:42520:42536	339262	5	True				
ANR	343606	Identifier	THUMB_CONST		339262	0					
ANR	343607	CompoundStatement		754:3:16684:16712	339262	6					
ANR	343608	IdentifierDeclStatement	ut8 mode = getnum ( ao -> a [ 0 ] ) ;	2046:3:42543:42571	339262	0	True				
ANR	343609	IdentifierDecl	mode = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	343610	IdentifierDeclType	ut8		339262	0					
ANR	343611	Identifier	mode		339262	1					
ANR	343612	AssignmentExpression	mode = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	343613	Identifier	mode		339262	0					
ANR	343614	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	343615	Callee	getnum		339262	0					
ANR	343616	Identifier	getnum		339262	0					
ANR	343617	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343618	Argument	ao -> a [ 0 ]		339262	0					
ANR	343619	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343620	PtrMemberAccess	ao -> a		339262	0					
ANR	343621	Identifier	ao		339262	0					
ANR	343622	Identifier	a		339262	1					
ANR	343623	PrimaryExpression	0		339262	1					
ANR	343624	IfStatement	if ( ( m & ID_BIT ) || ( m & IE_BIT ) || ( mode > 31 ) )		339262	1					
ANR	343625	Condition	( m & ID_BIT ) || ( m & IE_BIT ) || ( mode > 31 )	2047:7:42580:42622	339262	0	True				
ANR	343626	OrExpression	( m & ID_BIT ) || ( m & IE_BIT ) || ( mode > 31 )		339262	0		||			
ANR	343627	BitAndExpression	m & ID_BIT		339262	0		&			
ANR	343628	Identifier	m		339262	0					
ANR	343629	Identifier	ID_BIT		339262	1					
ANR	343630	OrExpression	( m & IE_BIT ) || ( mode > 31 )		339262	1		||			
ANR	343631	BitAndExpression	m & IE_BIT		339262	0		&			
ANR	343632	Identifier	m		339262	0					
ANR	343633	Identifier	IE_BIT		339262	1					
ANR	343634	RelationalExpression	mode > 31		339262	1		>			
ANR	343635	Identifier	mode		339262	0					
ANR	343636	PrimaryExpression	31		339262	1					
ANR	343637	CompoundStatement		755:52:16766:16766	339262	1					
ANR	343638	ReturnStatement	return - 1 ;	2048:4:42631:42640	339262	0	True				
ANR	343639	UnaryOperationExpression	- 1		339262	0					
ANR	343640	UnaryOperator	-		339262	0					
ANR	343641	PrimaryExpression	1		339262	1					
ANR	343642	ExpressionStatement	ao -> o = 0xaff30081	2050:3:42650:42668	339262	2	True				
ANR	343643	AssignmentExpression	ao -> o = 0xaff30081		339262	0		=			
ANR	343644	PtrMemberAccess	ao -> o		339262	0					
ANR	343645	Identifier	ao		339262	0					
ANR	343646	Identifier	o		339262	1					
ANR	343647	PrimaryExpression	0xaff30081		339262	1					
ANR	343648	ExpressionStatement	ao -> o |= mode << 8	2051:3:42673:42691	339262	3	True				
ANR	343649	AssignmentExpression	ao -> o |= mode << 8		339262	0		|=			
ANR	343650	PtrMemberAccess	ao -> o		339262	0					
ANR	343651	Identifier	ao		339262	0					
ANR	343652	Identifier	o		339262	1					
ANR	343653	ShiftExpression	mode << 8		339262	1		<<			
ANR	343654	Identifier	mode		339262	0					
ANR	343655	PrimaryExpression	8		339262	1					
ANR	343656	ReturnStatement	return 4 ;	2052:3:42696:42704	339262	4	True				
ANR	343657	PrimaryExpression	4		339262	0					
ANR	343658	BreakStatement	break ;	2054:3:42721:42726	339262	7	True				
ANR	343659	Label	default :	2055:2:42730:42737	339262	8	True				
ANR	343660	Identifier	default		339262	0					
ANR	343661	ReturnStatement	return - 1 ;	2056:3:42742:42751	339262	9	True				
ANR	343662	UnaryOperationExpression	- 1		339262	0					
ANR	343663	UnaryOperator	-		339262	0					
ANR	343664	PrimaryExpression	1		339262	1					
ANR	343665	ElseStatement	else		339262	0					
ANR	343666	IfStatement	"if ( ( m = opmask ( ao -> op , ""dbg"" , 0 ) ) )"		339262	0					
ANR	343667	Condition	"m = opmask ( ao -> op , ""dbg"" , 0 )"	2059:5:42770:42800	339262	0	True				
ANR	343668	AssignmentExpression	"m = opmask ( ao -> op , ""dbg"" , 0 )"		339262	0		=			
ANR	343669	Identifier	m		339262	0					
ANR	343670	CallExpression	"opmask ( ao -> op , ""dbg"" , 0 )"		339262	1					
ANR	343671	Callee	opmask		339262	0					
ANR	343672	Identifier	opmask		339262	0					
ANR	343673	ArgumentList	ao -> op		339262	1					
ANR	343674	Argument	ao -> op		339262	0					
ANR	343675	PtrMemberAccess	ao -> op		339262	0					
ANR	343676	Identifier	ao		339262	0					
ANR	343677	Identifier	op		339262	1					
ANR	343678	Argument	"""dbg"""		339262	1					
ANR	343679	PrimaryExpression	"""dbg"""		339262	0					
ANR	343680	Argument	0		339262	2					
ANR	343681	PrimaryExpression	0		339262	0					
ANR	343682	CompoundStatement		768:2:16948:16982	339262	1					
ANR	343683	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2060:2:42807:42841	339262	0	True				
ANR	343684	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	343685	IdentifierDeclType	ut64		339262	0					
ANR	343686	Identifier	argt		339262	1					
ANR	343687	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	343688	Identifier	argt		339262	0					
ANR	343689	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	343690	Callee	thumb_selector		339262	0					
ANR	343691	Identifier	thumb_selector		339262	0					
ANR	343692	ArgumentList	ao -> a		339262	1					
ANR	343693	Argument	ao -> a		339262	0					
ANR	343694	PtrMemberAccess	ao -> a		339262	0					
ANR	343695	Identifier	ao		339262	0					
ANR	343696	Identifier	a		339262	1					
ANR	343697	SwitchStatement	switch ( argt )		339262	1					
ANR	343698	Condition	argt	2061:10:42853:42856	339262	0	True				
ANR	343699	Identifier	argt		339262	0					
ANR	343700	CompoundStatement		769:16:17000:17000	339262	1					
ANR	343701	Label	case THUMB_CONST :	2062:2:42863:42879	339262	0	True				
ANR	343702	Identifier	THUMB_CONST		339262	0					
ANR	343703	CompoundStatement		771:3:17027:17058	339262	1					
ANR	343704	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2063:3:42886:42917	339262	0	True				
ANR	343705	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	343706	IdentifierDeclType	ut32		339262	0					
ANR	343707	Identifier	option		339262	1					
ANR	343708	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	343709	Identifier	option		339262	0					
ANR	343710	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	343711	Callee	getnum		339262	0					
ANR	343712	Identifier	getnum		339262	0					
ANR	343713	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343714	Argument	ao -> a [ 0 ]		339262	0					
ANR	343715	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343716	PtrMemberAccess	ao -> a		339262	0					
ANR	343717	Identifier	ao		339262	0					
ANR	343718	Identifier	a		339262	1					
ANR	343719	PrimaryExpression	0		339262	1					
ANR	343720	IfStatement	if ( option > 15 )		339262	1					
ANR	343721	Condition	option > 15	2064:7:42926:42936	339262	0	True				
ANR	343722	RelationalExpression	option > 15		339262	0		>			
ANR	343723	Identifier	option		339262	0					
ANR	343724	PrimaryExpression	15		339262	1					
ANR	343725	CompoundStatement		772:20:17080:17080	339262	1					
ANR	343726	ReturnStatement	return - 1 ;	2065:4:42945:42954	339262	0	True				
ANR	343727	UnaryOperationExpression	- 1		339262	0					
ANR	343728	UnaryOperator	-		339262	0					
ANR	343729	PrimaryExpression	1		339262	1					
ANR	343730	ExpressionStatement	ao -> o = 0xaff3f080	2067:3:42964:42982	339262	2	True				
ANR	343731	AssignmentExpression	ao -> o = 0xaff3f080		339262	0		=			
ANR	343732	PtrMemberAccess	ao -> o		339262	0					
ANR	343733	Identifier	ao		339262	0					
ANR	343734	Identifier	o		339262	1					
ANR	343735	PrimaryExpression	0xaff3f080		339262	1					
ANR	343736	ExpressionStatement	ao -> o |= option << 8	2068:3:42987:43007	339262	3	True				
ANR	343737	AssignmentExpression	ao -> o |= option << 8		339262	0		|=			
ANR	343738	PtrMemberAccess	ao -> o		339262	0					
ANR	343739	Identifier	ao		339262	0					
ANR	343740	Identifier	o		339262	1					
ANR	343741	ShiftExpression	option << 8		339262	1		<<			
ANR	343742	Identifier	option		339262	0					
ANR	343743	PrimaryExpression	8		339262	1					
ANR	343744	ReturnStatement	return 4 ;	2069:3:43012:43020	339262	4	True				
ANR	343745	PrimaryExpression	4		339262	0					
ANR	343746	Label	default :	2071:2:43036:43043	339262	2	True				
ANR	343747	Identifier	default		339262	0					
ANR	343748	ReturnStatement	return - 1 ;	2072:3:43048:43057	339262	3	True				
ANR	343749	UnaryOperationExpression	- 1		339262	0					
ANR	343750	UnaryOperator	-		339262	0					
ANR	343751	PrimaryExpression	1		339262	1					
ANR	343752	ElseStatement	else		339262	0					
ANR	343753	IfStatement	"if ( ( m = opmask ( ao -> op , ""dmb"" , 0 ) ) )"		339262	0					
ANR	343754	Condition	"m = opmask ( ao -> op , ""dmb"" , 0 )"	2075:5:43076:43106	339262	0	True				
ANR	343755	AssignmentExpression	"m = opmask ( ao -> op , ""dmb"" , 0 )"		339262	0		=			
ANR	343756	Identifier	m		339262	0					
ANR	343757	CallExpression	"opmask ( ao -> op , ""dmb"" , 0 )"		339262	1					
ANR	343758	Callee	opmask		339262	0					
ANR	343759	Identifier	opmask		339262	0					
ANR	343760	ArgumentList	ao -> op		339262	1					
ANR	343761	Argument	ao -> op		339262	0					
ANR	343762	PtrMemberAccess	ao -> op		339262	0					
ANR	343763	Identifier	ao		339262	0					
ANR	343764	Identifier	op		339262	1					
ANR	343765	Argument	"""dmb"""		339262	1					
ANR	343766	PrimaryExpression	"""dmb"""		339262	0					
ANR	343767	Argument	0		339262	2					
ANR	343768	PrimaryExpression	0		339262	0					
ANR	343769	CompoundStatement		784:2:17254:17288	339262	1					
ANR	343770	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2076:2:43113:43147	339262	0	True				
ANR	343771	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	343772	IdentifierDeclType	ut64		339262	0					
ANR	343773	Identifier	argt		339262	1					
ANR	343774	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	343775	Identifier	argt		339262	0					
ANR	343776	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	343777	Callee	thumb_selector		339262	0					
ANR	343778	Identifier	thumb_selector		339262	0					
ANR	343779	ArgumentList	ao -> a		339262	1					
ANR	343780	Argument	ao -> a		339262	0					
ANR	343781	PtrMemberAccess	ao -> a		339262	0					
ANR	343782	Identifier	ao		339262	0					
ANR	343783	Identifier	a		339262	1					
ANR	343784	SwitchStatement	switch ( argt )		339262	1					
ANR	343785	Condition	argt	2077:10:43159:43162	339262	0	True				
ANR	343786	Identifier	argt		339262	0					
ANR	343787	CompoundStatement		785:16:17306:17306	339262	1					
ANR	343788	Label	case THUMB_NONE :	2078:2:43169:43184	339262	0	True				
ANR	343789	Identifier	THUMB_NONE		339262	0					
ANR	343790	CompoundStatement		786:19:17327:17327	339262	1					
ANR	343791	ExpressionStatement	ao -> o = 0xbff35f8f	2079:3:43191:43209	339262	0	True				
ANR	343792	AssignmentExpression	ao -> o = 0xbff35f8f		339262	0		=			
ANR	343793	PtrMemberAccess	ao -> o		339262	0					
ANR	343794	Identifier	ao		339262	0					
ANR	343795	Identifier	o		339262	1					
ANR	343796	PrimaryExpression	0xbff35f8f		339262	1					
ANR	343797	ReturnStatement	return 4 ;	2080:3:43214:43222	339262	1	True				
ANR	343798	PrimaryExpression	4		339262	0					
ANR	343799	BreakStatement	break ;	2082:3:43239:43244	339262	2	True				
ANR	343800	Label	case THUMB_OTHER :	2083:2:43248:43264	339262	3	True				
ANR	343801	Identifier	THUMB_OTHER		339262	0					
ANR	343802	CompoundStatement		791:20:17407:17407	339262	4					
ANR	343803	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2084:3:43271:43299	339262	0	True				
ANR	343804	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		339262	0					
ANR	343805	Callee	r_str_case		339262	0					
ANR	343806	Identifier	r_str_case		339262	0					
ANR	343807	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343808	Argument	ao -> a [ 0 ]		339262	0					
ANR	343809	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343810	PtrMemberAccess	ao -> a		339262	0					
ANR	343811	Identifier	ao		339262	0					
ANR	343812	Identifier	a		339262	1					
ANR	343813	PrimaryExpression	0		339262	1					
ANR	343814	Argument	false		339262	1					
ANR	343815	Identifier	false		339262	0					
ANR	343816	IfStatement	"if ( strcmpnull ( ao -> a [ 0 ] , ""sy"" ) )"		339262	1					
ANR	343817	Condition	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"	2085:7:43308:43334	339262	0	True				
ANR	343818	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"		339262	0					
ANR	343819	Callee	strcmpnull		339262	0					
ANR	343820	Identifier	strcmpnull		339262	0					
ANR	343821	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343822	Argument	ao -> a [ 0 ]		339262	0					
ANR	343823	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343824	PtrMemberAccess	ao -> a		339262	0					
ANR	343825	Identifier	ao		339262	0					
ANR	343826	Identifier	a		339262	1					
ANR	343827	PrimaryExpression	0		339262	1					
ANR	343828	Argument	"""sy"""		339262	1					
ANR	343829	PrimaryExpression	"""sy"""		339262	0					
ANR	343830	CompoundStatement		793:36:17478:17478	339262	1					
ANR	343831	ReturnStatement	return - 1 ;	2086:4:43343:43352	339262	0	True				
ANR	343832	UnaryOperationExpression	- 1		339262	0					
ANR	343833	UnaryOperator	-		339262	0					
ANR	343834	PrimaryExpression	1		339262	1					
ANR	343835	ExpressionStatement	"ao -> a [ 0 ] = ""15"""	2088:3:43362:43377	339262	2	True				
ANR	343836	AssignmentExpression	"ao -> a [ 0 ] = ""15"""		339262	0		=			
ANR	343837	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343838	PtrMemberAccess	ao -> a		339262	0					
ANR	343839	Identifier	ao		339262	0					
ANR	343840	Identifier	a		339262	1					
ANR	343841	PrimaryExpression	0		339262	1					
ANR	343842	PrimaryExpression	"""15"""		339262	1					
ANR	343843	Label	case THUMB_CONST :	2091:2:43423:43439	339262	5	True				
ANR	343844	Identifier	THUMB_CONST		339262	0					
ANR	343845	CompoundStatement		800:3:17587:17618	339262	6					
ANR	343846	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2092:3:43446:43477	339262	0	True				
ANR	343847	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	343848	IdentifierDeclType	ut32		339262	0					
ANR	343849	Identifier	option		339262	1					
ANR	343850	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	343851	Identifier	option		339262	0					
ANR	343852	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	343853	Callee	getnum		339262	0					
ANR	343854	Identifier	getnum		339262	0					
ANR	343855	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343856	Argument	ao -> a [ 0 ]		339262	0					
ANR	343857	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343858	PtrMemberAccess	ao -> a		339262	0					
ANR	343859	Identifier	ao		339262	0					
ANR	343860	Identifier	a		339262	1					
ANR	343861	PrimaryExpression	0		339262	1					
ANR	343862	IfStatement	if ( option != 15 )		339262	1					
ANR	343863	Condition	option != 15	2093:7:43486:43497	339262	0	True				
ANR	343864	EqualityExpression	option != 15		339262	0		!=			
ANR	343865	Identifier	option		339262	0					
ANR	343866	PrimaryExpression	15		339262	1					
ANR	343867	CompoundStatement		801:21:17641:17641	339262	1					
ANR	343868	ReturnStatement	return - 1 ;	2094:4:43506:43515	339262	0	True				
ANR	343869	UnaryOperationExpression	- 1		339262	0					
ANR	343870	UnaryOperator	-		339262	0					
ANR	343871	PrimaryExpression	1		339262	1					
ANR	343872	ExpressionStatement	ao -> o = 0xbff3508f	2096:3:43525:43543	339262	2	True				
ANR	343873	AssignmentExpression	ao -> o = 0xbff3508f		339262	0		=			
ANR	343874	PtrMemberAccess	ao -> o		339262	0					
ANR	343875	Identifier	ao		339262	0					
ANR	343876	Identifier	o		339262	1					
ANR	343877	PrimaryExpression	0xbff3508f		339262	1					
ANR	343878	ExpressionStatement	ao -> o |= option << 8	2097:3:43548:43568	339262	3	True				
ANR	343879	AssignmentExpression	ao -> o |= option << 8		339262	0		|=			
ANR	343880	PtrMemberAccess	ao -> o		339262	0					
ANR	343881	Identifier	ao		339262	0					
ANR	343882	Identifier	o		339262	1					
ANR	343883	ShiftExpression	option << 8		339262	1		<<			
ANR	343884	Identifier	option		339262	0					
ANR	343885	PrimaryExpression	8		339262	1					
ANR	343886	ReturnStatement	return 4 ;	2098:3:43573:43581	339262	4	True				
ANR	343887	PrimaryExpression	4		339262	0					
ANR	343888	BreakStatement	break ;	2100:3:43598:43603	339262	7	True				
ANR	343889	Label	default :	2101:2:43607:43614	339262	8	True				
ANR	343890	Identifier	default		339262	0					
ANR	343891	ReturnStatement	return - 1 ;	2102:3:43619:43628	339262	9	True				
ANR	343892	UnaryOperationExpression	- 1		339262	0					
ANR	343893	UnaryOperator	-		339262	0					
ANR	343894	PrimaryExpression	1		339262	1					
ANR	343895	ElseStatement	else		339262	0					
ANR	343896	IfStatement	"if ( ( m = opmask ( ao -> op , ""dsb"" , 0 ) ) )"		339262	0					
ANR	343897	Condition	"m = opmask ( ao -> op , ""dsb"" , 0 )"	2105:5:43647:43677	339262	0	True				
ANR	343898	AssignmentExpression	"m = opmask ( ao -> op , ""dsb"" , 0 )"		339262	0		=			
ANR	343899	Identifier	m		339262	0					
ANR	343900	CallExpression	"opmask ( ao -> op , ""dsb"" , 0 )"		339262	1					
ANR	343901	Callee	opmask		339262	0					
ANR	343902	Identifier	opmask		339262	0					
ANR	343903	ArgumentList	ao -> op		339262	1					
ANR	343904	Argument	ao -> op		339262	0					
ANR	343905	PtrMemberAccess	ao -> op		339262	0					
ANR	343906	Identifier	ao		339262	0					
ANR	343907	Identifier	op		339262	1					
ANR	343908	Argument	"""dsb"""		339262	1					
ANR	343909	PrimaryExpression	"""dsb"""		339262	0					
ANR	343910	Argument	0		339262	2					
ANR	343911	PrimaryExpression	0		339262	0					
ANR	343912	CompoundStatement		814:2:17825:17859	339262	1					
ANR	343913	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2106:2:43684:43718	339262	0	True				
ANR	343914	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	343915	IdentifierDeclType	ut64		339262	0					
ANR	343916	Identifier	argt		339262	1					
ANR	343917	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	343918	Identifier	argt		339262	0					
ANR	343919	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	343920	Callee	thumb_selector		339262	0					
ANR	343921	Identifier	thumb_selector		339262	0					
ANR	343922	ArgumentList	ao -> a		339262	1					
ANR	343923	Argument	ao -> a		339262	0					
ANR	343924	PtrMemberAccess	ao -> a		339262	0					
ANR	343925	Identifier	ao		339262	0					
ANR	343926	Identifier	a		339262	1					
ANR	343927	SwitchStatement	switch ( argt )		339262	1					
ANR	343928	Condition	argt	2107:10:43730:43733	339262	0	True				
ANR	343929	Identifier	argt		339262	0					
ANR	343930	CompoundStatement		815:16:17877:17877	339262	1					
ANR	343931	Label	case THUMB_NONE :	2108:2:43740:43755	339262	0	True				
ANR	343932	Identifier	THUMB_NONE		339262	0					
ANR	343933	CompoundStatement		816:19:17898:17898	339262	1					
ANR	343934	ExpressionStatement	ao -> o = 0xbff34f8f	2109:3:43762:43780	339262	0	True				
ANR	343935	AssignmentExpression	ao -> o = 0xbff34f8f		339262	0		=			
ANR	343936	PtrMemberAccess	ao -> o		339262	0					
ANR	343937	Identifier	ao		339262	0					
ANR	343938	Identifier	o		339262	1					
ANR	343939	PrimaryExpression	0xbff34f8f		339262	1					
ANR	343940	ReturnStatement	return 4 ;	2110:3:43785:43793	339262	1	True				
ANR	343941	PrimaryExpression	4		339262	0					
ANR	343942	Label	case THUMB_OTHER :	2113:2:43839:43855	339262	2	True				
ANR	343943	Identifier	THUMB_OTHER		339262	0					
ANR	343944	CompoundStatement		821:20:17998:17998	339262	3					
ANR	343945	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2114:3:43862:43890	339262	0	True				
ANR	343946	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		339262	0					
ANR	343947	Callee	r_str_case		339262	0					
ANR	343948	Identifier	r_str_case		339262	0					
ANR	343949	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343950	Argument	ao -> a [ 0 ]		339262	0					
ANR	343951	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343952	PtrMemberAccess	ao -> a		339262	0					
ANR	343953	Identifier	ao		339262	0					
ANR	343954	Identifier	a		339262	1					
ANR	343955	PrimaryExpression	0		339262	1					
ANR	343956	Argument	false		339262	1					
ANR	343957	Identifier	false		339262	0					
ANR	343958	IfStatement	"if ( ! strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" ) )"		339262	1					
ANR	343959	Condition	"! strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" )"	2115:7:43899:43952	339262	0	True				
ANR	343960	UnaryOperationExpression	"! strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" )"		339262	0					
ANR	343961	UnaryOperator	!		339262	0					
ANR	343962	CallExpression	"strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" )"		339262	1					
ANR	343963	Callee	strcmpnull		339262	0					
ANR	343964	Identifier	strcmpnull		339262	0					
ANR	343965	ArgumentList	ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] )		339262	1					
ANR	343966	Argument	ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] )		339262	0					
ANR	343967	AssignmentExpression	ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] )		339262	0		=			
ANR	343968	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343969	PtrMemberAccess	ao -> a		339262	0					
ANR	343970	Identifier	ao		339262	0					
ANR	343971	Identifier	a		339262	1					
ANR	343972	PrimaryExpression	0		339262	1					
ANR	343973	CallExpression	parse_hints ( ao -> a [ 0 ] )		339262	1					
ANR	343974	Callee	parse_hints		339262	0					
ANR	343975	Identifier	parse_hints		339262	0					
ANR	343976	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	343977	Argument	ao -> a [ 0 ]		339262	0					
ANR	343978	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	343979	PtrMemberAccess	ao -> a		339262	0					
ANR	343980	Identifier	ao		339262	0					
ANR	343981	Identifier	a		339262	1					
ANR	343982	PrimaryExpression	0		339262	1					
ANR	343983	Argument	"""-1"""		339262	1					
ANR	343984	PrimaryExpression	"""-1"""		339262	0					
ANR	343985	CompoundStatement		823:63:18096:18096	339262	1					
ANR	343986	ReturnStatement	return - 1 ;	2116:4:43961:43970	339262	0	True				
ANR	343987	UnaryOperationExpression	- 1		339262	0					
ANR	343988	UnaryOperator	-		339262	0					
ANR	343989	PrimaryExpression	1		339262	1					
ANR	343990	Label	case THUMB_CONST :	2120:2:44021:44037	339262	4	True				
ANR	343991	Identifier	THUMB_CONST		339262	0					
ANR	343992	CompoundStatement		829:3:18185:18216	339262	5					
ANR	343993	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2121:3:44044:44075	339262	0	True				
ANR	343994	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	343995	IdentifierDeclType	ut32		339262	0					
ANR	343996	Identifier	option		339262	1					
ANR	343997	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	343998	Identifier	option		339262	0					
ANR	343999	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	344000	Callee	getnum		339262	0					
ANR	344001	Identifier	getnum		339262	0					
ANR	344002	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344003	Argument	ao -> a [ 0 ]		339262	0					
ANR	344004	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344005	PtrMemberAccess	ao -> a		339262	0					
ANR	344006	Identifier	ao		339262	0					
ANR	344007	Identifier	a		339262	1					
ANR	344008	PrimaryExpression	0		339262	1					
ANR	344009	IfStatement	if ( ( option != 6 ) && ( option != 7 ) && ( option != 14 ) && ( option != 15 ) )		339262	1					
ANR	344010	Condition	( option != 6 ) && ( option != 7 ) && ( option != 14 ) && ( option != 15 )	2122:7:44084:44149	339262	0	True				
ANR	344011	AndExpression	( option != 6 ) && ( option != 7 ) && ( option != 14 ) && ( option != 15 )		339262	0		&&			
ANR	344012	EqualityExpression	option != 6		339262	0		!=			
ANR	344013	Identifier	option		339262	0					
ANR	344014	PrimaryExpression	6		339262	1					
ANR	344015	AndExpression	( option != 7 ) && ( option != 14 ) && ( option != 15 )		339262	1		&&			
ANR	344016	EqualityExpression	option != 7		339262	0		!=			
ANR	344017	Identifier	option		339262	0					
ANR	344018	PrimaryExpression	7		339262	1					
ANR	344019	AndExpression	( option != 14 ) && ( option != 15 )		339262	1		&&			
ANR	344020	EqualityExpression	option != 14		339262	0		!=			
ANR	344021	Identifier	option		339262	0					
ANR	344022	PrimaryExpression	14		339262	1					
ANR	344023	EqualityExpression	option != 15		339262	1		!=			
ANR	344024	Identifier	option		339262	0					
ANR	344025	PrimaryExpression	15		339262	1					
ANR	344026	CompoundStatement		830:75:18293:18293	339262	1					
ANR	344027	ReturnStatement	return - 1 ;	2123:4:44158:44167	339262	0	True				
ANR	344028	UnaryOperationExpression	- 1		339262	0					
ANR	344029	UnaryOperator	-		339262	0					
ANR	344030	PrimaryExpression	1		339262	1					
ANR	344031	ExpressionStatement	ao -> o = 0xbff3408f	2125:3:44177:44195	339262	2	True				
ANR	344032	AssignmentExpression	ao -> o = 0xbff3408f		339262	0		=			
ANR	344033	PtrMemberAccess	ao -> o		339262	0					
ANR	344034	Identifier	ao		339262	0					
ANR	344035	Identifier	o		339262	1					
ANR	344036	PrimaryExpression	0xbff3408f		339262	1					
ANR	344037	ExpressionStatement	ao -> o |= option << 8	2126:3:44200:44220	339262	3	True				
ANR	344038	AssignmentExpression	ao -> o |= option << 8		339262	0		|=			
ANR	344039	PtrMemberAccess	ao -> o		339262	0					
ANR	344040	Identifier	ao		339262	0					
ANR	344041	Identifier	o		339262	1					
ANR	344042	ShiftExpression	option << 8		339262	1		<<			
ANR	344043	Identifier	option		339262	0					
ANR	344044	PrimaryExpression	8		339262	1					
ANR	344045	ReturnStatement	return 4 ;	2127:3:44225:44233	339262	4	True				
ANR	344046	PrimaryExpression	4		339262	0					
ANR	344047	BreakStatement	break ;	2129:3:44250:44255	339262	6	True				
ANR	344048	Label	default :	2130:2:44259:44266	339262	7	True				
ANR	344049	Identifier	default		339262	0					
ANR	344050	ReturnStatement	return - 1 ;	2131:3:44271:44280	339262	8	True				
ANR	344051	UnaryOperationExpression	- 1		339262	0					
ANR	344052	UnaryOperator	-		339262	0					
ANR	344053	PrimaryExpression	1		339262	1					
ANR	344054	ElseStatement	else		339262	0					
ANR	344055	IfStatement	"if ( ( m = opmask ( ao -> op , ""eor"" , S_BIT ) ) )"		339262	0					
ANR	344056	Condition	"m = opmask ( ao -> op , ""eor"" , S_BIT )"	2134:5:44299:44333	339262	0	True				
ANR	344057	AssignmentExpression	"m = opmask ( ao -> op , ""eor"" , S_BIT )"		339262	0		=			
ANR	344058	Identifier	m		339262	0					
ANR	344059	CallExpression	"opmask ( ao -> op , ""eor"" , S_BIT )"		339262	1					
ANR	344060	Callee	opmask		339262	0					
ANR	344061	Identifier	opmask		339262	0					
ANR	344062	ArgumentList	ao -> op		339262	1					
ANR	344063	Argument	ao -> op		339262	0					
ANR	344064	PtrMemberAccess	ao -> op		339262	0					
ANR	344065	Identifier	ao		339262	0					
ANR	344066	Identifier	op		339262	1					
ANR	344067	Argument	"""eor"""		339262	1					
ANR	344068	PrimaryExpression	"""eor"""		339262	0					
ANR	344069	Argument	S_BIT		339262	2					
ANR	344070	Identifier	S_BIT		339262	0					
ANR	344071	CompoundStatement		843:2:18481:18515	339262	1					
ANR	344072	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2135:2:44340:44374	339262	0	True				
ANR	344073	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	344074	IdentifierDeclType	ut64		339262	0					
ANR	344075	Identifier	argt		339262	1					
ANR	344076	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	344077	Identifier	argt		339262	0					
ANR	344078	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	344079	Callee	thumb_selector		339262	0					
ANR	344080	Identifier	thumb_selector		339262	0					
ANR	344081	ArgumentList	ao -> a		339262	1					
ANR	344082	Argument	ao -> a		339262	0					
ANR	344083	PtrMemberAccess	ao -> a		339262	0					
ANR	344084	Identifier	ao		339262	0					
ANR	344085	Identifier	a		339262	1					
ANR	344086	SwitchStatement	switch ( argt )		339262	1					
ANR	344087	Condition	argt	2136:10:44386:44389	339262	0	True				
ANR	344088	Identifier	argt		339262	0					
ANR	344089	CompoundStatement		844:16:18533:18533	339262	1					
ANR	344090	Label	case THUMB_REG_CONST :	2137:2:44396:44416	339262	0	True				
ANR	344091	Identifier	THUMB_REG_CONST		339262	0					
ANR	344092	ExpressionStatement	std_opt_2 ( ao )	2138:3:44421:44435	339262	1	True				
ANR	344093	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	344094	Callee	std_opt_2		339262	0					
ANR	344095	Identifier	std_opt_2		339262	0					
ANR	344096	ArgumentList	ao		339262	1					
ANR	344097	Argument	ao		339262	0					
ANR	344098	Identifier	ao		339262	0					
ANR	344099	Label	case THUMB_REG_REG_CONST :	2140:2:44469:44493	339262	2	True				
ANR	344100	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	344101	CompoundStatement		850:3:18657:18691	339262	3					
ANR	344102	ExpressionStatement	err = false	2141:3:44500:44511	339262	0	True				
ANR	344103	AssignmentExpression	err = false		339262	0		=			
ANR	344104	Identifier	err		339262	0					
ANR	344105	Identifier	false		339262	1					
ANR	344106	IdentifierDeclStatement	ut32 imm = getthimmed12 ( ao -> a [ 2 ] ) ;	2142:3:44516:44550	339262	1	True				
ANR	344107	IdentifierDecl	imm = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	344108	IdentifierDeclType	ut32		339262	0					
ANR	344109	Identifier	imm		339262	1					
ANR	344110	AssignmentExpression	imm = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	344111	Identifier	imm		339262	0					
ANR	344112	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	344113	Callee	getthimmed12		339262	0					
ANR	344114	Identifier	getthimmed12		339262	0					
ANR	344115	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	344116	Argument	ao -> a [ 2 ]		339262	0					
ANR	344117	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	344118	PtrMemberAccess	ao -> a		339262	0					
ANR	344119	Identifier	ao		339262	0					
ANR	344120	Identifier	a		339262	1					
ANR	344121	PrimaryExpression	2		339262	1					
ANR	344122	IfStatement	if ( err )		339262	2					
ANR	344123	Condition	err	2143:7:44559:44561	339262	0	True				
ANR	344124	Identifier	err		339262	0					
ANR	344125	CompoundStatement		851:12:18705:18705	339262	1					
ANR	344126	ReturnStatement	return - 1 ;	2144:4:44570:44579	339262	0	True				
ANR	344127	UnaryOperationExpression	- 1		339262	0					
ANR	344128	UnaryOperator	-		339262	0					
ANR	344129	PrimaryExpression	1		339262	1					
ANR	344130	ExpressionStatement	ao -> o = 0x80f00000	2146:3:44589:44607	339262	3	True				
ANR	344131	AssignmentExpression	ao -> o = 0x80f00000		339262	0		=			
ANR	344132	PtrMemberAccess	ao -> o		339262	0					
ANR	344133	Identifier	ao		339262	0					
ANR	344134	Identifier	o		339262	1					
ANR	344135	PrimaryExpression	0x80f00000		339262	1					
ANR	344136	ExpressionStatement	ao -> o |= imm	2147:3:44612:44624	339262	4	True				
ANR	344137	AssignmentExpression	ao -> o |= imm		339262	0		|=			
ANR	344138	PtrMemberAccess	ao -> o		339262	0					
ANR	344139	Identifier	ao		339262	0					
ANR	344140	Identifier	o		339262	1					
ANR	344141	Identifier	imm		339262	1					
ANR	344142	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	2148:3:44629:44665	339262	5	True				
ANR	344143	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	344144	Callee	std_32bit_2reg		339262	0					
ANR	344145	Identifier	std_32bit_2reg		339262	0					
ANR	344146	ArgumentList	ao		339262	1					
ANR	344147	Argument	ao		339262	0					
ANR	344148	Identifier	ao		339262	0					
ANR	344149	Argument	m		339262	1					
ANR	344150	Identifier	m		339262	0					
ANR	344151	Argument	false		339262	2					
ANR	344152	Identifier	false		339262	0					
ANR	344153	BreakStatement	break ;	2150:3:44682:44687	339262	4	True				
ANR	344154	Label	case THUMB_REG_REG :	2151:2:44691:44709	339262	5	True				
ANR	344155	Identifier	THUMB_REG_REG		339262	0					
ANR	344156	CompoundStatement		859:22:18852:18852	339262	6					
ANR	344157	ExpressionStatement	ao -> o = 0x4040	2152:3:44716:44730	339262	0	True				
ANR	344158	AssignmentExpression	ao -> o = 0x4040		339262	0		=			
ANR	344159	PtrMemberAccess	ao -> o		339262	0					
ANR	344160	Identifier	ao		339262	0					
ANR	344161	Identifier	o		339262	1					
ANR	344162	PrimaryExpression	0x4040		339262	1					
ANR	344163	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	344164	Condition	"std_16bit_2reg ( ao , m )"	2153:7:44739:44760	339262	0	True				
ANR	344165	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	344166	Callee	std_16bit_2reg		339262	0					
ANR	344167	Identifier	std_16bit_2reg		339262	0					
ANR	344168	ArgumentList	ao		339262	1					
ANR	344169	Argument	ao		339262	0					
ANR	344170	Identifier	ao		339262	0					
ANR	344171	Argument	m		339262	1					
ANR	344172	Identifier	m		339262	0					
ANR	344173	CompoundStatement		861:31:18904:18904	339262	1					
ANR	344174	ReturnStatement	return 2 ;	2154:4:44769:44777	339262	0	True				
ANR	344175	PrimaryExpression	2		339262	0					
ANR	344176	ExpressionStatement	std_opt_2 ( ao )	2156:3:44787:44801	339262	2	True				
ANR	344177	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	344178	Callee	std_opt_2		339262	0					
ANR	344179	Identifier	std_opt_2		339262	0					
ANR	344180	ArgumentList	ao		339262	1					
ANR	344181	Argument	ao		339262	0					
ANR	344182	Identifier	ao		339262	0					
ANR	344183	Label	case THUMB_REG_REG_REG :	2159:2:44847:44869	339262	7	True				
ANR	344184	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	344185	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	2160:3:44874:44892	339262	8	True				
ANR	344186	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	344187	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	344188	PtrMemberAccess	ao -> a		339262	0					
ANR	344189	Identifier	ao		339262	0					
ANR	344190	Identifier	a		339262	1					
ANR	344191	PrimaryExpression	3		339262	1					
ANR	344192	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	344193	Label	case THUMB_REG_REG_REG_SHIFT :	2162:2:44926:44954	339262	9	True				
ANR	344194	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	344195	CompoundStatement		870:32:19097:19097	339262	10					
ANR	344196	ExpressionStatement	ao -> o = 0x80ea0000	2163:3:44961:44979	339262	0	True				
ANR	344197	AssignmentExpression	ao -> o = 0x80ea0000		339262	0		=			
ANR	344198	PtrMemberAccess	ao -> o		339262	0					
ANR	344199	Identifier	ao		339262	0					
ANR	344200	Identifier	o		339262	1					
ANR	344201	PrimaryExpression	0x80ea0000		339262	1					
ANR	344202	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	2164:3:44984:45019	339262	1	True				
ANR	344203	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	344204	Callee	std_32bit_3reg		339262	0					
ANR	344205	Identifier	std_32bit_3reg		339262	0					
ANR	344206	ArgumentList	ao		339262	1					
ANR	344207	Argument	ao		339262	0					
ANR	344208	Identifier	ao		339262	0					
ANR	344209	Argument	m		339262	1					
ANR	344210	Identifier	m		339262	0					
ANR	344211	Argument	true		339262	2					
ANR	344212	Identifier	true		339262	0					
ANR	344213	BreakStatement	break ;	2166:3:45036:45041	339262	11	True				
ANR	344214	Label	default :	2167:2:45045:45052	339262	12	True				
ANR	344215	Identifier	default		339262	0					
ANR	344216	ReturnStatement	return - 1 ;	2168:3:45057:45066	339262	13	True				
ANR	344217	UnaryOperationExpression	- 1		339262	0					
ANR	344218	UnaryOperator	-		339262	0					
ANR	344219	PrimaryExpression	1		339262	1					
ANR	344220	ElseStatement	else		339262	0					
ANR	344221	IfStatement	"if ( ( m = opmask ( ao -> op , ""isb"" , 0 ) ) )"		339262	0					
ANR	344222	Condition	"m = opmask ( ao -> op , ""isb"" , 0 )"	2171:5:45085:45115	339262	0	True				
ANR	344223	AssignmentExpression	"m = opmask ( ao -> op , ""isb"" , 0 )"		339262	0		=			
ANR	344224	Identifier	m		339262	0					
ANR	344225	CallExpression	"opmask ( ao -> op , ""isb"" , 0 )"		339262	1					
ANR	344226	Callee	opmask		339262	0					
ANR	344227	Identifier	opmask		339262	0					
ANR	344228	ArgumentList	ao -> op		339262	1					
ANR	344229	Argument	ao -> op		339262	0					
ANR	344230	PtrMemberAccess	ao -> op		339262	0					
ANR	344231	Identifier	ao		339262	0					
ANR	344232	Identifier	op		339262	1					
ANR	344233	Argument	"""isb"""		339262	1					
ANR	344234	PrimaryExpression	"""isb"""		339262	0					
ANR	344235	Argument	0		339262	2					
ANR	344236	PrimaryExpression	0		339262	0					
ANR	344237	CompoundStatement		880:2:19263:19297	339262	1					
ANR	344238	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2172:2:45122:45156	339262	0	True				
ANR	344239	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	344240	IdentifierDeclType	ut64		339262	0					
ANR	344241	Identifier	argt		339262	1					
ANR	344242	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	344243	Identifier	argt		339262	0					
ANR	344244	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	344245	Callee	thumb_selector		339262	0					
ANR	344246	Identifier	thumb_selector		339262	0					
ANR	344247	ArgumentList	ao -> a		339262	1					
ANR	344248	Argument	ao -> a		339262	0					
ANR	344249	PtrMemberAccess	ao -> a		339262	0					
ANR	344250	Identifier	ao		339262	0					
ANR	344251	Identifier	a		339262	1					
ANR	344252	SwitchStatement	switch ( argt )		339262	1					
ANR	344253	Condition	argt	2173:10:45168:45171	339262	0	True				
ANR	344254	Identifier	argt		339262	0					
ANR	344255	CompoundStatement		881:16:19315:19315	339262	1					
ANR	344256	Label	case THUMB_NONE :	2174:2:45178:45193	339262	0	True				
ANR	344257	Identifier	THUMB_NONE		339262	0					
ANR	344258	CompoundStatement		882:19:19336:19336	339262	1					
ANR	344259	ExpressionStatement	ao -> o = 0xbff36f8f	2175:3:45200:45218	339262	0	True				
ANR	344260	AssignmentExpression	ao -> o = 0xbff36f8f		339262	0		=			
ANR	344261	PtrMemberAccess	ao -> o		339262	0					
ANR	344262	Identifier	ao		339262	0					
ANR	344263	Identifier	o		339262	1					
ANR	344264	PrimaryExpression	0xbff36f8f		339262	1					
ANR	344265	ReturnStatement	return 4 ;	2176:3:45223:45231	339262	1	True				
ANR	344266	PrimaryExpression	4		339262	0					
ANR	344267	Label	case THUMB_OTHER :	2179:2:45277:45293	339262	2	True				
ANR	344268	Identifier	THUMB_OTHER		339262	0					
ANR	344269	CompoundStatement		887:20:19436:19436	339262	3					
ANR	344270	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2180:3:45300:45328	339262	0	True				
ANR	344271	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		339262	0					
ANR	344272	Callee	r_str_case		339262	0					
ANR	344273	Identifier	r_str_case		339262	0					
ANR	344274	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344275	Argument	ao -> a [ 0 ]		339262	0					
ANR	344276	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344277	PtrMemberAccess	ao -> a		339262	0					
ANR	344278	Identifier	ao		339262	0					
ANR	344279	Identifier	a		339262	1					
ANR	344280	PrimaryExpression	0		339262	1					
ANR	344281	Argument	false		339262	1					
ANR	344282	Identifier	false		339262	0					
ANR	344283	IfStatement	"if ( strcmpnull ( ao -> a [ 0 ] , ""sy"" ) )"		339262	1					
ANR	344284	Condition	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"	2181:7:45337:45363	339262	0	True				
ANR	344285	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"		339262	0					
ANR	344286	Callee	strcmpnull		339262	0					
ANR	344287	Identifier	strcmpnull		339262	0					
ANR	344288	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344289	Argument	ao -> a [ 0 ]		339262	0					
ANR	344290	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344291	PtrMemberAccess	ao -> a		339262	0					
ANR	344292	Identifier	ao		339262	0					
ANR	344293	Identifier	a		339262	1					
ANR	344294	PrimaryExpression	0		339262	1					
ANR	344295	Argument	"""sy"""		339262	1					
ANR	344296	PrimaryExpression	"""sy"""		339262	0					
ANR	344297	CompoundStatement		889:36:19507:19507	339262	1					
ANR	344298	ReturnStatement	return - 1 ;	2182:4:45372:45381	339262	0	True				
ANR	344299	UnaryOperationExpression	- 1		339262	0					
ANR	344300	UnaryOperator	-		339262	0					
ANR	344301	PrimaryExpression	1		339262	1					
ANR	344302	ExpressionStatement	"ao -> a [ 0 ] = ""15"""	2184:3:45391:45406	339262	2	True				
ANR	344303	AssignmentExpression	"ao -> a [ 0 ] = ""15"""		339262	0		=			
ANR	344304	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344305	PtrMemberAccess	ao -> a		339262	0					
ANR	344306	Identifier	ao		339262	0					
ANR	344307	Identifier	a		339262	1					
ANR	344308	PrimaryExpression	0		339262	1					
ANR	344309	PrimaryExpression	"""15"""		339262	1					
ANR	344310	Label	case THUMB_CONST :	2187:2:45452:45468	339262	4	True				
ANR	344311	Identifier	THUMB_CONST		339262	0					
ANR	344312	CompoundStatement		896:3:19616:19647	339262	5					
ANR	344313	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2188:3:45475:45506	339262	0	True				
ANR	344314	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	344315	IdentifierDeclType	ut32		339262	0					
ANR	344316	Identifier	option		339262	1					
ANR	344317	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	344318	Identifier	option		339262	0					
ANR	344319	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	344320	Callee	getnum		339262	0					
ANR	344321	Identifier	getnum		339262	0					
ANR	344322	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344323	Argument	ao -> a [ 0 ]		339262	0					
ANR	344324	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344325	PtrMemberAccess	ao -> a		339262	0					
ANR	344326	Identifier	ao		339262	0					
ANR	344327	Identifier	a		339262	1					
ANR	344328	PrimaryExpression	0		339262	1					
ANR	344329	IfStatement	if ( option != 15 )		339262	1					
ANR	344330	Condition	option != 15	2189:7:45515:45526	339262	0	True				
ANR	344331	EqualityExpression	option != 15		339262	0		!=			
ANR	344332	Identifier	option		339262	0					
ANR	344333	PrimaryExpression	15		339262	1					
ANR	344334	CompoundStatement		897:21:19670:19670	339262	1					
ANR	344335	ReturnStatement	return - 1 ;	2190:4:45535:45544	339262	0	True				
ANR	344336	UnaryOperationExpression	- 1		339262	0					
ANR	344337	UnaryOperator	-		339262	0					
ANR	344338	PrimaryExpression	1		339262	1					
ANR	344339	ExpressionStatement	ao -> o = 0xbff3608f	2192:3:45554:45572	339262	2	True				
ANR	344340	AssignmentExpression	ao -> o = 0xbff3608f		339262	0		=			
ANR	344341	PtrMemberAccess	ao -> o		339262	0					
ANR	344342	Identifier	ao		339262	0					
ANR	344343	Identifier	o		339262	1					
ANR	344344	PrimaryExpression	0xbff3608f		339262	1					
ANR	344345	ExpressionStatement	ao -> o |= option << 8	2193:3:45577:45597	339262	3	True				
ANR	344346	AssignmentExpression	ao -> o |= option << 8		339262	0		|=			
ANR	344347	PtrMemberAccess	ao -> o		339262	0					
ANR	344348	Identifier	ao		339262	0					
ANR	344349	Identifier	o		339262	1					
ANR	344350	ShiftExpression	option << 8		339262	1		<<			
ANR	344351	Identifier	option		339262	0					
ANR	344352	PrimaryExpression	8		339262	1					
ANR	344353	ReturnStatement	return 4 ;	2194:3:45602:45610	339262	4	True				
ANR	344354	PrimaryExpression	4		339262	0					
ANR	344355	BreakStatement	break ;	2196:3:45627:45632	339262	6	True				
ANR	344356	Label	default :	2197:2:45636:45643	339262	7	True				
ANR	344357	Identifier	default		339262	0					
ANR	344358	ReturnStatement	return - 1 ;	2198:3:45648:45657	339262	8	True				
ANR	344359	UnaryOperationExpression	- 1		339262	0					
ANR	344360	UnaryOperator	-		339262	0					
ANR	344361	PrimaryExpression	1		339262	1					
ANR	344362	ElseStatement	else		339262	0					
ANR	344363	IfStatement	if ( ( m = itmask ( ao -> op ) ) )		339262	0					
ANR	344364	Condition	m = itmask ( ao -> op )	2201:5:45676:45696	339262	0	True				
ANR	344365	AssignmentExpression	m = itmask ( ao -> op )		339262	0		=			
ANR	344366	Identifier	m		339262	0					
ANR	344367	CallExpression	itmask ( ao -> op )		339262	1					
ANR	344368	Callee	itmask		339262	0					
ANR	344369	Identifier	itmask		339262	0					
ANR	344370	ArgumentList	ao -> op		339262	1					
ANR	344371	Argument	ao -> op		339262	0					
ANR	344372	PtrMemberAccess	ao -> op		339262	0					
ANR	344373	Identifier	ao		339262	0					
ANR	344374	Identifier	op		339262	1					
ANR	344375	CompoundStatement		910:2:19844:19878	339262	1					
ANR	344376	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2202:2:45703:45737	339262	0	True				
ANR	344377	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	344378	IdentifierDeclType	ut64		339262	0					
ANR	344379	Identifier	argt		339262	1					
ANR	344380	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	344381	Identifier	argt		339262	0					
ANR	344382	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	344383	Callee	thumb_selector		339262	0					
ANR	344384	Identifier	thumb_selector		339262	0					
ANR	344385	ArgumentList	ao -> a		339262	1					
ANR	344386	Argument	ao -> a		339262	0					
ANR	344387	PtrMemberAccess	ao -> a		339262	0					
ANR	344388	Identifier	ao		339262	0					
ANR	344389	Identifier	a		339262	1					
ANR	344390	SwitchStatement	switch ( argt )		339262	1					
ANR	344391	Condition	argt	2203:10:45749:45752	339262	0	True				
ANR	344392	Identifier	argt		339262	0					
ANR	344393	CompoundStatement		911:16:19896:19896	339262	1					
ANR	344394	Label	case THUMB_OTHER :	2204:2:45759:45775	339262	0	True				
ANR	344395	Identifier	THUMB_OTHER		339262	0					
ANR	344396	CompoundStatement		935:3:20357:20371	339262	1					
ANR	344397	IdentifierDeclStatement	ut16 cond = 0 ;	2205:3:45782:45795	339262	0	True				
ANR	344398	IdentifierDecl	cond = 0		339262	0					
ANR	344399	IdentifierDeclType	ut16		339262	0					
ANR	344400	Identifier	cond		339262	1					
ANR	344401	AssignmentExpression	cond = 0		339262	2		=			
ANR	344402	Identifier	cond		339262	0					
ANR	344403	PrimaryExpression	0		339262	1					
ANR	344404	IdentifierDeclStatement	ut16 i ;	2206:3:45800:45806	339262	1	True				
ANR	344405	IdentifierDecl	i		339262	0					
ANR	344406	IdentifierDeclType	ut16		339262	0					
ANR	344407	Identifier	i		339262	1					
ANR	344408	IdentifierDeclStatement	"const char * conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 } ;"	2208:3:45815:45949	339262	2	True				
ANR	344409	IdentifierDecl	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		339262	0					
ANR	344410	IdentifierDeclType	const char * [ ]		339262	0					
ANR	344411	Identifier	conds		339262	1					
ANR	344412	AssignmentExpression	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		339262	2		=			
ANR	344413	Identifier	conds		339262	0					
ANR	344414	InitializerList	"""eq"""		339262	1					
ANR	344415	PrimaryExpression	"""eq"""		339262	0					
ANR	344416	PrimaryExpression	"""ne"""		339262	1					
ANR	344417	PrimaryExpression	"""cs"""		339262	2					
ANR	344418	PrimaryExpression	"""cc"""		339262	3					
ANR	344419	PrimaryExpression	"""mi"""		339262	4					
ANR	344420	PrimaryExpression	"""pl"""		339262	5					
ANR	344421	PrimaryExpression	"""vs"""		339262	6					
ANR	344422	PrimaryExpression	"""vc"""		339262	7					
ANR	344423	PrimaryExpression	"""hi"""		339262	8					
ANR	344424	PrimaryExpression	"""ls"""		339262	9					
ANR	344425	PrimaryExpression	"""ge"""		339262	10					
ANR	344426	PrimaryExpression	"""lt"""		339262	11					
ANR	344427	PrimaryExpression	"""gt"""		339262	12					
ANR	344428	PrimaryExpression	"""le"""		339262	13					
ANR	344429	PrimaryExpression	"""al"""		339262	14					
ANR	344430	PrimaryExpression	"""nv"""		339262	15					
ANR	344431	PrimaryExpression	0		339262	16					
ANR	344432	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2212:3:45954:45982	339262	3	True				
ANR	344433	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		339262	0					
ANR	344434	Callee	r_str_case		339262	0					
ANR	344435	Identifier	r_str_case		339262	0					
ANR	344436	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344437	Argument	ao -> a [ 0 ]		339262	0					
ANR	344438	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344439	PtrMemberAccess	ao -> a		339262	0					
ANR	344440	Identifier	ao		339262	0					
ANR	344441	Identifier	a		339262	1					
ANR	344442	PrimaryExpression	0		339262	1					
ANR	344443	Argument	false		339262	1					
ANR	344444	Identifier	false		339262	0					
ANR	344445	ForStatement	for ( i = 0 ; conds [ i ] ; i ++ )		339262	4					
ANR	344446	ForInit	i = 0 ;	2213:8:45992:45997	339262	0	True				
ANR	344447	AssignmentExpression	i = 0		339262	0		=			
ANR	344448	Identifier	i		339262	0					
ANR	344449	PrimaryExpression	0		339262	1					
ANR	344450	Condition	conds [ i ]	2213:15:45999:46006	339262	1	True				
ANR	344451	ArrayIndexing	conds [ i ]		339262	0					
ANR	344452	Identifier	conds		339262	0					
ANR	344453	Identifier	i		339262	1					
ANR	344454	PostIncDecOperationExpression	i ++	2213:25:46009:46011	339262	2	True				
ANR	344455	Identifier	i		339262	0					
ANR	344456	IncDec	++		339262	1					
ANR	344457	CompoundStatement		921:30:20155:20155	339262	3					
ANR	344458	IfStatement	"if ( ! ( strcmpnull ( ao -> a [ 0 ] , conds [ i ] ) ) )"		339262	0					
ANR	344459	Condition	"! ( strcmpnull ( ao -> a [ 0 ] , conds [ i ] ) )"	2214:8:46024:46056	339262	0	True				
ANR	344460	UnaryOperationExpression	"! ( strcmpnull ( ao -> a [ 0 ] , conds [ i ] ) )"		339262	0					
ANR	344461	UnaryOperator	!		339262	0					
ANR	344462	CallExpression	"strcmpnull ( ao -> a [ 0 ] , conds [ i ] )"		339262	1					
ANR	344463	Callee	strcmpnull		339262	0					
ANR	344464	Identifier	strcmpnull		339262	0					
ANR	344465	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344466	Argument	ao -> a [ 0 ]		339262	0					
ANR	344467	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344468	PtrMemberAccess	ao -> a		339262	0					
ANR	344469	Identifier	ao		339262	0					
ANR	344470	Identifier	a		339262	1					
ANR	344471	PrimaryExpression	0		339262	1					
ANR	344472	Argument	conds [ i ]		339262	1					
ANR	344473	ArrayIndexing	conds [ i ]		339262	0					
ANR	344474	Identifier	conds		339262	0					
ANR	344475	Identifier	i		339262	1					
ANR	344476	CompoundStatement		922:43:20200:20200	339262	1					
ANR	344477	ExpressionStatement	cond = i	2215:5:46066:46074	339262	0	True				
ANR	344478	AssignmentExpression	cond = i		339262	0		=			
ANR	344479	Identifier	cond		339262	0					
ANR	344480	Identifier	i		339262	1					
ANR	344481	BreakStatement	break ;	2216:5:46081:46086	339262	1	True				
ANR	344482	IfStatement	if ( i == 16 )		339262	5					
ANR	344483	Condition	i == 16	2220:7:46107:46113	339262	0	True				
ANR	344484	EqualityExpression	i == 16		339262	0		==			
ANR	344485	Identifier	i		339262	0					
ANR	344486	PrimaryExpression	16		339262	1					
ANR	344487	CompoundStatement		928:16:20257:20257	339262	1					
ANR	344488	ReturnStatement	return - 1 ;	2221:4:46122:46131	339262	0	True				
ANR	344489	UnaryOperationExpression	- 1		339262	0					
ANR	344490	UnaryOperator	-		339262	0					
ANR	344491	PrimaryExpression	1		339262	1					
ANR	344492	ExpressionStatement	ao -> o = 0x00bf	2223:3:46141:46155	339262	6	True				
ANR	344493	AssignmentExpression	ao -> o = 0x00bf		339262	0		=			
ANR	344494	PtrMemberAccess	ao -> o		339262	0					
ANR	344495	Identifier	ao		339262	0					
ANR	344496	Identifier	o		339262	1					
ANR	344497	PrimaryExpression	0x00bf		339262	1					
ANR	344498	ExpressionStatement	ao -> o |= cond << 12	2224:3:46160:46179	339262	7	True				
ANR	344499	AssignmentExpression	ao -> o |= cond << 12		339262	0		|=			
ANR	344500	PtrMemberAccess	ao -> o		339262	0					
ANR	344501	Identifier	ao		339262	0					
ANR	344502	Identifier	o		339262	1					
ANR	344503	ShiftExpression	cond << 12		339262	1		<<			
ANR	344504	Identifier	cond		339262	0					
ANR	344505	PrimaryExpression	12		339262	1					
ANR	344506	IdentifierDeclStatement	ut8 nrcs = ( m & 0x30 ) >> 4 ;	2226:3:46185:46211	339262	8	True				
ANR	344507	IdentifierDecl	nrcs = ( m & 0x30 ) >> 4		339262	0					
ANR	344508	IdentifierDeclType	ut8		339262	0					
ANR	344509	Identifier	nrcs		339262	1					
ANR	344510	AssignmentExpression	nrcs = ( m & 0x30 ) >> 4		339262	2		=			
ANR	344511	Identifier	nrcs		339262	0					
ANR	344512	ShiftExpression	( m & 0x30 ) >> 4		339262	1		>>			
ANR	344513	BitAndExpression	m & 0x30		339262	0		&			
ANR	344514	Identifier	m		339262	0					
ANR	344515	PrimaryExpression	0x30		339262	1					
ANR	344516	PrimaryExpression	4		339262	1					
ANR	344517	IdentifierDeclStatement	ut8 thiset = 0 ;	2227:3:46216:46230	339262	9	True				
ANR	344518	IdentifierDecl	thiset = 0		339262	0					
ANR	344519	IdentifierDeclType	ut8		339262	0					
ANR	344520	Identifier	thiset		339262	1					
ANR	344521	AssignmentExpression	thiset = 0		339262	2		=			
ANR	344522	Identifier	thiset		339262	0					
ANR	344523	PrimaryExpression	0		339262	1					
ANR	344524	ForStatement	for ( i = 0 ; i < nrcs ; i ++ )		339262	10					
ANR	344525	ForInit	i = 0 ;	2229:8:46241:46246	339262	0	True				
ANR	344526	AssignmentExpression	i = 0		339262	0		=			
ANR	344527	Identifier	i		339262	0					
ANR	344528	PrimaryExpression	0		339262	1					
ANR	344529	Condition	i < nrcs	2229:15:46248:46255	339262	1	True				
ANR	344530	RelationalExpression	i < nrcs		339262	0		<			
ANR	344531	Identifier	i		339262	0					
ANR	344532	Identifier	nrcs		339262	1					
ANR	344533	PostIncDecOperationExpression	i ++	2229:25:46258:46260	339262	2	True				
ANR	344534	Identifier	i		339262	0					
ANR	344535	IncDec	++		339262	1					
ANR	344536	CompoundStatement		937:30:20404:20404	339262	3					
ANR	344537	ExpressionStatement	thiset = ( ( m & ( 1 << ( 3 - i ) ) ) >> ( 3 - i ) )	2230:4:46269:46311	339262	0	True				
ANR	344538	AssignmentExpression	thiset = ( ( m & ( 1 << ( 3 - i ) ) ) >> ( 3 - i ) )		339262	0		=			
ANR	344539	Identifier	thiset		339262	0					
ANR	344540	ShiftExpression	( m & ( 1 << ( 3 - i ) ) ) >> ( 3 - i )		339262	1		>>			
ANR	344541	BitAndExpression	m & ( 1 << ( 3 - i ) )		339262	0		&			
ANR	344542	Identifier	m		339262	0					
ANR	344543	ShiftExpression	1 << ( 3 - i )		339262	1		<<			
ANR	344544	PrimaryExpression	1		339262	0					
ANR	344545	AdditiveExpression	3 - i		339262	1		-			
ANR	344546	PrimaryExpression	3		339262	0					
ANR	344547	Identifier	i		339262	1					
ANR	344548	AdditiveExpression	3 - i		339262	1		-			
ANR	344549	PrimaryExpression	3		339262	0					
ANR	344550	Identifier	i		339262	1					
ANR	344551	ExpressionStatement	ao -> o |= ( ( cond & 0x1 ) ^ thiset ) << ( 11 - i )	2231:4:46317:46361	339262	1	True				
ANR	344552	AssignmentExpression	ao -> o |= ( ( cond & 0x1 ) ^ thiset ) << ( 11 - i )		339262	0		|=			
ANR	344553	PtrMemberAccess	ao -> o		339262	0					
ANR	344554	Identifier	ao		339262	0					
ANR	344555	Identifier	o		339262	1					
ANR	344556	ShiftExpression	( ( cond & 0x1 ) ^ thiset ) << ( 11 - i )		339262	1		<<			
ANR	344557	ExclusiveOrExpression	( cond & 0x1 ) ^ thiset		339262	0		^			
ANR	344558	BitAndExpression	cond & 0x1		339262	0		&			
ANR	344559	Identifier	cond		339262	0					
ANR	344560	PrimaryExpression	0x1		339262	1					
ANR	344561	Identifier	thiset		339262	1					
ANR	344562	AdditiveExpression	11 - i		339262	1		-			
ANR	344563	PrimaryExpression	11		339262	0					
ANR	344564	Identifier	i		339262	1					
ANR	344565	ExpressionStatement	ao -> o |= 1 << ( 11 - i )	2233:3:46371:46393	339262	11	True				
ANR	344566	AssignmentExpression	ao -> o |= 1 << ( 11 - i )		339262	0		|=			
ANR	344567	PtrMemberAccess	ao -> o		339262	0					
ANR	344568	Identifier	ao		339262	0					
ANR	344569	Identifier	o		339262	1					
ANR	344570	ShiftExpression	1 << ( 11 - i )		339262	1		<<			
ANR	344571	PrimaryExpression	1		339262	0					
ANR	344572	AdditiveExpression	11 - i		339262	1		-			
ANR	344573	PrimaryExpression	11		339262	0					
ANR	344574	Identifier	i		339262	1					
ANR	344575	ReturnStatement	return 2 ;	2234:3:46398:46406	339262	12	True				
ANR	344576	PrimaryExpression	2		339262	0					
ANR	344577	BreakStatement	break ;	2236:3:46423:46428	339262	2	True				
ANR	344578	Label	default :	2237:2:46432:46439	339262	3	True				
ANR	344579	Identifier	default		339262	0					
ANR	344580	ReturnStatement	return - 1 ;	2238:3:46444:46453	339262	4	True				
ANR	344581	UnaryOperationExpression	- 1		339262	0					
ANR	344582	UnaryOperator	-		339262	0					
ANR	344583	PrimaryExpression	1		339262	1					
ANR	344584	ElseStatement	else		339262	0					
ANR	344585	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT ) ) )"		339262	0					
ANR	344586	Condition	"m = opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT )"	2241:5:46472:46516	339262	0	True				
ANR	344587	AssignmentExpression	"m = opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT )"		339262	0		=			
ANR	344588	Identifier	m		339262	0					
ANR	344589	CallExpression	"opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT )"		339262	1					
ANR	344590	Callee	opmask		339262	0					
ANR	344591	Identifier	opmask		339262	0					
ANR	344592	ArgumentList	ao -> op		339262	1					
ANR	344593	Argument	ao -> op		339262	0					
ANR	344594	PtrMemberAccess	ao -> op		339262	0					
ANR	344595	Identifier	ao		339262	0					
ANR	344596	Identifier	op		339262	1					
ANR	344597	Argument	"""ldc"""		339262	1					
ANR	344598	PrimaryExpression	"""ldc"""		339262	0					
ANR	344599	Argument	TWO_BIT | L_BIT		339262	2					
ANR	344600	InclusiveOrExpression	TWO_BIT | L_BIT		339262	0		|			
ANR	344601	Identifier	TWO_BIT		339262	0					
ANR	344602	Identifier	L_BIT		339262	1					
ANR	344603	CompoundStatement		950:2:20664:20698	339262	1					
ANR	344604	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2242:2:46523:46557	339262	0	True				
ANR	344605	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	344606	IdentifierDeclType	ut64		339262	0					
ANR	344607	Identifier	argt		339262	1					
ANR	344608	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	344609	Identifier	argt		339262	0					
ANR	344610	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	344611	Callee	thumb_selector		339262	0					
ANR	344612	Identifier	thumb_selector		339262	0					
ANR	344613	ArgumentList	ao -> a		339262	1					
ANR	344614	Argument	ao -> a		339262	0					
ANR	344615	PtrMemberAccess	ao -> a		339262	0					
ANR	344616	Identifier	ao		339262	0					
ANR	344617	Identifier	a		339262	1					
ANR	344618	SwitchStatement	switch ( argt )		339262	1					
ANR	344619	Condition	argt	2243:10:46569:46572	339262	0	True				
ANR	344620	Identifier	argt		339262	0					
ANR	344621	CompoundStatement		951:16:20716:20716	339262	1					
ANR	344622	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACK :	2244:2:46579:46622	339262	0	True				
ANR	344623	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACK		339262	0					
ANR	344624	CompoundStatement		956:3:20886:20920	339262	1					
ANR	344625	IdentifierDeclStatement	ut8 proc = getcoproc ( ao -> a [ 0 ] ) ;	2245:3:46629:46660	339262	0	True				
ANR	344626	IdentifierDecl	proc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	344627	IdentifierDeclType	ut8		339262	0					
ANR	344628	Identifier	proc		339262	1					
ANR	344629	AssignmentExpression	proc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	344630	Identifier	proc		339262	0					
ANR	344631	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	344632	Callee	getcoproc		339262	0					
ANR	344633	Identifier	getcoproc		339262	0					
ANR	344634	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344635	Argument	ao -> a [ 0 ]		339262	0					
ANR	344636	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344637	PtrMemberAccess	ao -> a		339262	0					
ANR	344638	Identifier	ao		339262	0					
ANR	344639	Identifier	a		339262	1					
ANR	344640	PrimaryExpression	0		339262	1					
ANR	344641	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 1 ] ) ;	2246:3:46665:46699	339262	1	True				
ANR	344642	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 1 ] )		339262	0					
ANR	344643	IdentifierDeclType	ut8		339262	0					
ANR	344644	Identifier	reg1		339262	1					
ANR	344645	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	344646	Identifier	reg1		339262	0					
ANR	344647	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		339262	1					
ANR	344648	Callee	getcoprocreg		339262	0					
ANR	344649	Identifier	getcoprocreg		339262	0					
ANR	344650	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	344651	Argument	ao -> a [ 1 ]		339262	0					
ANR	344652	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	344653	PtrMemberAccess	ao -> a		339262	0					
ANR	344654	Identifier	ao		339262	0					
ANR	344655	Identifier	a		339262	1					
ANR	344656	PrimaryExpression	1		339262	1					
ANR	344657	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 2 ] ) ;	2247:3:46704:46740	339262	2	True				
ANR	344658	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	344659	IdentifierDeclType	ut8		339262	0					
ANR	344660	Identifier	reg2		339262	1					
ANR	344661	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	344662	Identifier	reg2		339262	0					
ANR	344663	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	344664	Callee	getregmemstart		339262	0					
ANR	344665	Identifier	getregmemstart		339262	0					
ANR	344666	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	344667	Argument	ao -> a [ 2 ]		339262	0					
ANR	344668	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	344669	PtrMemberAccess	ao -> a		339262	0					
ANR	344670	Identifier	ao		339262	0					
ANR	344671	Identifier	a		339262	1					
ANR	344672	PrimaryExpression	2		339262	1					
ANR	344673	IdentifierDeclStatement	st32 imm = getnummemend ( ao -> a [ 3 ] ) ;	2248:3:46745:46779	339262	3	True				
ANR	344674	IdentifierDecl	imm = getnummemend ( ao -> a [ 3 ] )		339262	0					
ANR	344675	IdentifierDeclType	st32		339262	0					
ANR	344676	Identifier	imm		339262	1					
ANR	344677	AssignmentExpression	imm = getnummemend ( ao -> a [ 3 ] )		339262	2		=			
ANR	344678	Identifier	imm		339262	0					
ANR	344679	CallExpression	getnummemend ( ao -> a [ 3 ] )		339262	1					
ANR	344680	Callee	getnummemend		339262	0					
ANR	344681	Identifier	getnummemend		339262	0					
ANR	344682	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	344683	Argument	ao -> a [ 3 ]		339262	0					
ANR	344684	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	344685	PtrMemberAccess	ao -> a		339262	0					
ANR	344686	Identifier	ao		339262	0					
ANR	344687	Identifier	a		339262	1					
ANR	344688	PrimaryExpression	3		339262	1					
ANR	344689	ExpressionStatement	ao -> o = 0x10ed0000	2249:3:46784:46802	339262	4	True				
ANR	344690	AssignmentExpression	ao -> o = 0x10ed0000		339262	0		=			
ANR	344691	PtrMemberAccess	ao -> o		339262	0					
ANR	344692	Identifier	ao		339262	0					
ANR	344693	Identifier	o		339262	1					
ANR	344694	PrimaryExpression	0x10ed0000		339262	1					
ANR	344695	IfStatement	if ( m & L_BIT )		339262	5					
ANR	344696	Condition	m & L_BIT	2250:7:46811:46819	339262	0	True				
ANR	344697	BitAndExpression	m & L_BIT		339262	0		&			
ANR	344698	Identifier	m		339262	0					
ANR	344699	Identifier	L_BIT		339262	1					
ANR	344700	CompoundStatement		958:18:20963:20963	339262	1					
ANR	344701	ExpressionStatement	ao -> o |= 1 << 30	2251:4:46828:46844	339262	0	True				
ANR	344702	AssignmentExpression	ao -> o |= 1 << 30		339262	0		|=			
ANR	344703	PtrMemberAccess	ao -> o		339262	0					
ANR	344704	Identifier	ao		339262	0					
ANR	344705	Identifier	o		339262	1					
ANR	344706	ShiftExpression	1 << 30		339262	1		<<			
ANR	344707	PrimaryExpression	1		339262	0					
ANR	344708	PrimaryExpression	30		339262	1					
ANR	344709	IfStatement	if ( m & TWO_BIT )		339262	6					
ANR	344710	Condition	m & TWO_BIT	2253:7:46858:46868	339262	0	True				
ANR	344711	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	344712	Identifier	m		339262	0					
ANR	344713	Identifier	TWO_BIT		339262	1					
ANR	344714	CompoundStatement		961:20:21012:21012	339262	1					
ANR	344715	ExpressionStatement	ao -> o |= 1 << 20	2254:4:46877:46893	339262	0	True				
ANR	344716	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	344717	PtrMemberAccess	ao -> o		339262	0					
ANR	344718	Identifier	ao		339262	0					
ANR	344719	Identifier	o		339262	1					
ANR	344720	ShiftExpression	1 << 20		339262	1		<<			
ANR	344721	PrimaryExpression	1		339262	0					
ANR	344722	PrimaryExpression	20		339262	1					
ANR	344723	IfStatement	if ( imm < 0 )		339262	7					
ANR	344724	Condition	imm < 0	2256:7:46907:46913	339262	0	True				
ANR	344725	RelationalExpression	imm < 0		339262	0		<			
ANR	344726	Identifier	imm		339262	0					
ANR	344727	PrimaryExpression	0		339262	1					
ANR	344728	CompoundStatement		964:16:21057:21057	339262	1					
ANR	344729	ExpressionStatement	imm = - imm	2257:4:46922:46932	339262	0	True				
ANR	344730	AssignmentExpression	imm = - imm		339262	0		=			
ANR	344731	Identifier	imm		339262	0					
ANR	344732	UnaryOperationExpression	- imm		339262	1					
ANR	344733	UnaryOperator	-		339262	0					
ANR	344734	Identifier	imm		339262	1					
ANR	344735	ElseStatement	else		339262	0					
ANR	344736	CompoundStatement		966:10:21085:21085	339262	0					
ANR	344737	ExpressionStatement	ao -> o |= 1 << 31	2259:4:46950:46966	339262	0	True				
ANR	344738	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	344739	PtrMemberAccess	ao -> o		339262	0					
ANR	344740	Identifier	ao		339262	0					
ANR	344741	Identifier	o		339262	1					
ANR	344742	ShiftExpression	1 << 31		339262	1		<<			
ANR	344743	PrimaryExpression	1		339262	0					
ANR	344744	PrimaryExpression	31		339262	1					
ANR	344745	IfStatement	if ( ( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 ) )		339262	8					
ANR	344746	Condition	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )	2261:7:46984:47058	339262	0	True				
ANR	344747	OrExpression	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	0		||			
ANR	344748	RelationalExpression	proc > 15		339262	0		>			
ANR	344749	Identifier	proc		339262	0					
ANR	344750	PrimaryExpression	15		339262	1					
ANR	344751	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	344752	RelationalExpression	reg1 > 15		339262	0		>			
ANR	344753	Identifier	reg1		339262	0					
ANR	344754	PrimaryExpression	15		339262	1					
ANR	344755	OrExpression	( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	344756	RelationalExpression	reg2 > 15		339262	0		>			
ANR	344757	Identifier	reg2		339262	0					
ANR	344758	PrimaryExpression	15		339262	1					
ANR	344759	OrExpression	( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	344760	RelationalExpression	imm > 1024		339262	0		>			
ANR	344761	Identifier	imm		339262	0					
ANR	344762	PrimaryExpression	1024		339262	1					
ANR	344763	EqualityExpression	imm % 4 != 0		339262	1		!=			
ANR	344764	MultiplicativeExpression	imm % 4		339262	0		%			
ANR	344765	Identifier	imm		339262	0					
ANR	344766	PrimaryExpression	4		339262	1					
ANR	344767	PrimaryExpression	0		339262	1					
ANR	344768	CompoundStatement		969:84:21202:21202	339262	1					
ANR	344769	ReturnStatement	return - 1 ;	2262:4:47067:47076	339262	0	True				
ANR	344770	UnaryOperationExpression	- 1		339262	0					
ANR	344771	UnaryOperator	-		339262	0					
ANR	344772	PrimaryExpression	1		339262	1					
ANR	344773	ExpressionStatement	ao -> o |= proc	2264:3:47086:47099	339262	9	True				
ANR	344774	AssignmentExpression	ao -> o |= proc		339262	0		|=			
ANR	344775	PtrMemberAccess	ao -> o		339262	0					
ANR	344776	Identifier	ao		339262	0					
ANR	344777	Identifier	o		339262	1					
ANR	344778	Identifier	proc		339262	1					
ANR	344779	ExpressionStatement	ao -> o |= reg1 << 4	2265:3:47104:47122	339262	10	True				
ANR	344780	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	344781	PtrMemberAccess	ao -> o		339262	0					
ANR	344782	Identifier	ao		339262	0					
ANR	344783	Identifier	o		339262	1					
ANR	344784	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	344785	Identifier	reg1		339262	0					
ANR	344786	PrimaryExpression	4		339262	1					
ANR	344787	ExpressionStatement	ao -> o |= ( imm >> 2 ) << 8	2266:3:47127:47151	339262	11	True				
ANR	344788	AssignmentExpression	ao -> o |= ( imm >> 2 ) << 8		339262	0		|=			
ANR	344789	PtrMemberAccess	ao -> o		339262	0					
ANR	344790	Identifier	ao		339262	0					
ANR	344791	Identifier	o		339262	1					
ANR	344792	ShiftExpression	( imm >> 2 ) << 8		339262	1		<<			
ANR	344793	ShiftExpression	imm >> 2		339262	0		>>			
ANR	344794	Identifier	imm		339262	0					
ANR	344795	PrimaryExpression	2		339262	1					
ANR	344796	PrimaryExpression	8		339262	1					
ANR	344797	ExpressionStatement	ao -> o |= reg2 << 24	2267:3:47156:47175	339262	12	True				
ANR	344798	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	344799	PtrMemberAccess	ao -> o		339262	0					
ANR	344800	Identifier	ao		339262	0					
ANR	344801	Identifier	o		339262	1					
ANR	344802	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	344803	Identifier	reg2		339262	0					
ANR	344804	PrimaryExpression	24		339262	1					
ANR	344805	ReturnStatement	return 4 ;	2268:3:47180:47188	339262	13	True				
ANR	344806	PrimaryExpression	4		339262	0					
ANR	344807	BreakStatement	break ;	2270:3:47205:47210	339262	2	True				
ANR	344808	Label	case THUMB_COPROC_COREG_BRACKREGBRACK :	2271:2:47214:47251	339262	3	True				
ANR	344809	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK		339262	0					
ANR	344810	ExpressionStatement	"ao -> a [ 3 ] = ""0"""	2272:3:47256:47270	339262	4	True				
ANR	344811	AssignmentExpression	"ao -> a [ 3 ] = ""0"""		339262	0		=			
ANR	344812	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	344813	PtrMemberAccess	ao -> a		339262	0					
ANR	344814	Identifier	ao		339262	0					
ANR	344815	Identifier	a		339262	1					
ANR	344816	PrimaryExpression	3		339262	1					
ANR	344817	PrimaryExpression	"""0"""		339262	1					
ANR	344818	Label	case THUMB_COPROC_COREG_BRACKREGBRACK_CONST :	2274:2:47304:47347	339262	5	True				
ANR	344819	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK_CONST		339262	0					
ANR	344820	CompoundStatement		986:3:21614:21642	339262	6					
ANR	344821	IdentifierDeclStatement	ut8 proc = getcoproc ( ao -> a [ 0 ] ) ;	2275:3:47354:47385	339262	0	True				
ANR	344822	IdentifierDecl	proc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	344823	IdentifierDeclType	ut8		339262	0					
ANR	344824	Identifier	proc		339262	1					
ANR	344825	AssignmentExpression	proc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	344826	Identifier	proc		339262	0					
ANR	344827	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	344828	Callee	getcoproc		339262	0					
ANR	344829	Identifier	getcoproc		339262	0					
ANR	344830	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	344831	Argument	ao -> a [ 0 ]		339262	0					
ANR	344832	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	344833	PtrMemberAccess	ao -> a		339262	0					
ANR	344834	Identifier	ao		339262	0					
ANR	344835	Identifier	a		339262	1					
ANR	344836	PrimaryExpression	0		339262	1					
ANR	344837	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 1 ] ) ;	2276:3:47390:47424	339262	1	True				
ANR	344838	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 1 ] )		339262	0					
ANR	344839	IdentifierDeclType	ut8		339262	0					
ANR	344840	Identifier	reg1		339262	1					
ANR	344841	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	344842	Identifier	reg1		339262	0					
ANR	344843	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		339262	1					
ANR	344844	Callee	getcoprocreg		339262	0					
ANR	344845	Identifier	getcoprocreg		339262	0					
ANR	344846	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	344847	Argument	ao -> a [ 1 ]		339262	0					
ANR	344848	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	344849	PtrMemberAccess	ao -> a		339262	0					
ANR	344850	Identifier	ao		339262	0					
ANR	344851	Identifier	a		339262	1					
ANR	344852	PrimaryExpression	1		339262	1					
ANR	344853	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 2 ] ) ;	2277:3:47429:47468	339262	2	True				
ANR	344854	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 2 ] )		339262	0					
ANR	344855	IdentifierDeclType	ut8		339262	0					
ANR	344856	Identifier	reg2		339262	1					
ANR	344857	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 2 ] )		339262	2		=			
ANR	344858	Identifier	reg2		339262	0					
ANR	344859	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		339262	1					
ANR	344860	Callee	getregmemstartend		339262	0					
ANR	344861	Identifier	getregmemstartend		339262	0					
ANR	344862	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	344863	Argument	ao -> a [ 2 ]		339262	0					
ANR	344864	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	344865	PtrMemberAccess	ao -> a		339262	0					
ANR	344866	Identifier	ao		339262	0					
ANR	344867	Identifier	a		339262	1					
ANR	344868	PrimaryExpression	2		339262	1					
ANR	344869	IdentifierDeclStatement	st32 imm = getnum ( ao -> a [ 3 ] ) ;	2278:3:47473:47501	339262	3	True				
ANR	344870	IdentifierDecl	imm = getnum ( ao -> a [ 3 ] )		339262	0					
ANR	344871	IdentifierDeclType	st32		339262	0					
ANR	344872	Identifier	imm		339262	1					
ANR	344873	AssignmentExpression	imm = getnum ( ao -> a [ 3 ] )		339262	2		=			
ANR	344874	Identifier	imm		339262	0					
ANR	344875	CallExpression	getnum ( ao -> a [ 3 ] )		339262	1					
ANR	344876	Callee	getnum		339262	0					
ANR	344877	Identifier	getnum		339262	0					
ANR	344878	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	344879	Argument	ao -> a [ 3 ]		339262	0					
ANR	344880	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	344881	PtrMemberAccess	ao -> a		339262	0					
ANR	344882	Identifier	ao		339262	0					
ANR	344883	Identifier	a		339262	1					
ANR	344884	PrimaryExpression	3		339262	1					
ANR	344885	ExpressionStatement	ao -> o = 0x30ec0000	2279:3:47506:47524	339262	4	True				
ANR	344886	AssignmentExpression	ao -> o = 0x30ec0000		339262	0		=			
ANR	344887	PtrMemberAccess	ao -> o		339262	0					
ANR	344888	Identifier	ao		339262	0					
ANR	344889	Identifier	o		339262	1					
ANR	344890	PrimaryExpression	0x30ec0000		339262	1					
ANR	344891	IfStatement	if ( m & L_BIT )		339262	5					
ANR	344892	Condition	m & L_BIT	2280:7:47533:47541	339262	0	True				
ANR	344893	BitAndExpression	m & L_BIT		339262	0		&			
ANR	344894	Identifier	m		339262	0					
ANR	344895	Identifier	L_BIT		339262	1					
ANR	344896	CompoundStatement		988:18:21685:21685	339262	1					
ANR	344897	ExpressionStatement	ao -> o |= 1 << 30	2281:4:47550:47566	339262	0	True				
ANR	344898	AssignmentExpression	ao -> o |= 1 << 30		339262	0		|=			
ANR	344899	PtrMemberAccess	ao -> o		339262	0					
ANR	344900	Identifier	ao		339262	0					
ANR	344901	Identifier	o		339262	1					
ANR	344902	ShiftExpression	1 << 30		339262	1		<<			
ANR	344903	PrimaryExpression	1		339262	0					
ANR	344904	PrimaryExpression	30		339262	1					
ANR	344905	IfStatement	if ( m & TWO_BIT )		339262	6					
ANR	344906	Condition	m & TWO_BIT	2283:7:47580:47590	339262	0	True				
ANR	344907	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	344908	Identifier	m		339262	0					
ANR	344909	Identifier	TWO_BIT		339262	1					
ANR	344910	CompoundStatement		991:20:21734:21734	339262	1					
ANR	344911	ExpressionStatement	ao -> o |= 1 << 20	2284:4:47599:47615	339262	0	True				
ANR	344912	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	344913	PtrMemberAccess	ao -> o		339262	0					
ANR	344914	Identifier	ao		339262	0					
ANR	344915	Identifier	o		339262	1					
ANR	344916	ShiftExpression	1 << 20		339262	1		<<			
ANR	344917	PrimaryExpression	1		339262	0					
ANR	344918	PrimaryExpression	20		339262	1					
ANR	344919	IfStatement	if ( imm < 0 )		339262	7					
ANR	344920	Condition	imm < 0	2286:7:47629:47635	339262	0	True				
ANR	344921	RelationalExpression	imm < 0		339262	0		<			
ANR	344922	Identifier	imm		339262	0					
ANR	344923	PrimaryExpression	0		339262	1					
ANR	344924	CompoundStatement		994:16:21779:21779	339262	1					
ANR	344925	ExpressionStatement	imm = - imm	2287:4:47644:47654	339262	0	True				
ANR	344926	AssignmentExpression	imm = - imm		339262	0		=			
ANR	344927	Identifier	imm		339262	0					
ANR	344928	UnaryOperationExpression	- imm		339262	1					
ANR	344929	UnaryOperator	-		339262	0					
ANR	344930	Identifier	imm		339262	1					
ANR	344931	ElseStatement	else		339262	0					
ANR	344932	CompoundStatement		996:10:21807:21807	339262	0					
ANR	344933	ExpressionStatement	ao -> o |= 1 << 31	2289:4:47672:47688	339262	0	True				
ANR	344934	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	344935	PtrMemberAccess	ao -> o		339262	0					
ANR	344936	Identifier	ao		339262	0					
ANR	344937	Identifier	o		339262	1					
ANR	344938	ShiftExpression	1 << 31		339262	1		<<			
ANR	344939	PrimaryExpression	1		339262	0					
ANR	344940	PrimaryExpression	31		339262	1					
ANR	344941	IfStatement	if ( ( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 ) )		339262	8					
ANR	344942	Condition	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )	2291:7:47706:47780	339262	0	True				
ANR	344943	OrExpression	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	0		||			
ANR	344944	RelationalExpression	proc > 15		339262	0		>			
ANR	344945	Identifier	proc		339262	0					
ANR	344946	PrimaryExpression	15		339262	1					
ANR	344947	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	344948	RelationalExpression	reg1 > 15		339262	0		>			
ANR	344949	Identifier	reg1		339262	0					
ANR	344950	PrimaryExpression	15		339262	1					
ANR	344951	OrExpression	( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	344952	RelationalExpression	reg2 > 15		339262	0		>			
ANR	344953	Identifier	reg2		339262	0					
ANR	344954	PrimaryExpression	15		339262	1					
ANR	344955	OrExpression	( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	344956	RelationalExpression	imm > 1024		339262	0		>			
ANR	344957	Identifier	imm		339262	0					
ANR	344958	PrimaryExpression	1024		339262	1					
ANR	344959	EqualityExpression	imm % 4 != 0		339262	1		!=			
ANR	344960	MultiplicativeExpression	imm % 4		339262	0		%			
ANR	344961	Identifier	imm		339262	0					
ANR	344962	PrimaryExpression	4		339262	1					
ANR	344963	PrimaryExpression	0		339262	1					
ANR	344964	CompoundStatement		999:84:21924:21924	339262	1					
ANR	344965	ReturnStatement	return - 1 ;	2292:4:47789:47798	339262	0	True				
ANR	344966	UnaryOperationExpression	- 1		339262	0					
ANR	344967	UnaryOperator	-		339262	0					
ANR	344968	PrimaryExpression	1		339262	1					
ANR	344969	ExpressionStatement	ao -> o |= proc	2294:3:47808:47821	339262	9	True				
ANR	344970	AssignmentExpression	ao -> o |= proc		339262	0		|=			
ANR	344971	PtrMemberAccess	ao -> o		339262	0					
ANR	344972	Identifier	ao		339262	0					
ANR	344973	Identifier	o		339262	1					
ANR	344974	Identifier	proc		339262	1					
ANR	344975	ExpressionStatement	ao -> o |= reg1 << 4	2295:3:47826:47844	339262	10	True				
ANR	344976	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	344977	PtrMemberAccess	ao -> o		339262	0					
ANR	344978	Identifier	ao		339262	0					
ANR	344979	Identifier	o		339262	1					
ANR	344980	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	344981	Identifier	reg1		339262	0					
ANR	344982	PrimaryExpression	4		339262	1					
ANR	344983	ExpressionStatement	ao -> o |= ( imm >> 2 ) << 8	2296:3:47849:47873	339262	11	True				
ANR	344984	AssignmentExpression	ao -> o |= ( imm >> 2 ) << 8		339262	0		|=			
ANR	344985	PtrMemberAccess	ao -> o		339262	0					
ANR	344986	Identifier	ao		339262	0					
ANR	344987	Identifier	o		339262	1					
ANR	344988	ShiftExpression	( imm >> 2 ) << 8		339262	1		<<			
ANR	344989	ShiftExpression	imm >> 2		339262	0		>>			
ANR	344990	Identifier	imm		339262	0					
ANR	344991	PrimaryExpression	2		339262	1					
ANR	344992	PrimaryExpression	8		339262	1					
ANR	344993	ExpressionStatement	ao -> o |= reg2 << 24	2297:3:47878:47897	339262	12	True				
ANR	344994	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	344995	PtrMemberAccess	ao -> o		339262	0					
ANR	344996	Identifier	ao		339262	0					
ANR	344997	Identifier	o		339262	1					
ANR	344998	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	344999	Identifier	reg2		339262	0					
ANR	345000	PrimaryExpression	24		339262	1					
ANR	345001	ReturnStatement	return 4 ;	2298:3:47902:47910	339262	13	True				
ANR	345002	PrimaryExpression	4		339262	0					
ANR	345003	BreakStatement	break ;	2300:3:47927:47932	339262	7	True				
ANR	345004	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG :	2301:2:47936:47983	339262	8	True				
ANR	345005	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG		339262	0					
ANR	345006	CompoundStatement		1013:3:22247:22285	339262	9					
ANR	345007	IdentifierDeclStatement	ut8 proc = getcoproc ( ao -> a [ 0 ] ) ;	2302:3:47990:48021	339262	0	True				
ANR	345008	IdentifierDecl	proc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	345009	IdentifierDeclType	ut8		339262	0					
ANR	345010	Identifier	proc		339262	1					
ANR	345011	AssignmentExpression	proc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	345012	Identifier	proc		339262	0					
ANR	345013	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	345014	Callee	getcoproc		339262	0					
ANR	345015	Identifier	getcoproc		339262	0					
ANR	345016	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	345017	Argument	ao -> a [ 0 ]		339262	0					
ANR	345018	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	345019	PtrMemberAccess	ao -> a		339262	0					
ANR	345020	Identifier	ao		339262	0					
ANR	345021	Identifier	a		339262	1					
ANR	345022	PrimaryExpression	0		339262	1					
ANR	345023	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 1 ] ) ;	2303:3:48026:48060	339262	1	True				
ANR	345024	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 1 ] )		339262	0					
ANR	345025	IdentifierDeclType	ut8		339262	0					
ANR	345026	Identifier	reg1		339262	1					
ANR	345027	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	345028	Identifier	reg1		339262	0					
ANR	345029	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		339262	1					
ANR	345030	Callee	getcoprocreg		339262	0					
ANR	345031	Identifier	getcoprocreg		339262	0					
ANR	345032	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	345033	Argument	ao -> a [ 1 ]		339262	0					
ANR	345034	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345035	PtrMemberAccess	ao -> a		339262	0					
ANR	345036	Identifier	ao		339262	0					
ANR	345037	Identifier	a		339262	1					
ANR	345038	PrimaryExpression	1		339262	1					
ANR	345039	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 2 ] ) ;	2304:3:48065:48101	339262	2	True				
ANR	345040	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	345041	IdentifierDeclType	ut8		339262	0					
ANR	345042	Identifier	reg2		339262	1					
ANR	345043	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	345044	Identifier	reg2		339262	0					
ANR	345045	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	345046	Callee	getregmemstart		339262	0					
ANR	345047	Identifier	getregmemstart		339262	0					
ANR	345048	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	345049	Argument	ao -> a [ 2 ]		339262	0					
ANR	345050	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	345051	PtrMemberAccess	ao -> a		339262	0					
ANR	345052	Identifier	ao		339262	0					
ANR	345053	Identifier	a		339262	1					
ANR	345054	PrimaryExpression	2		339262	1					
ANR	345055	IdentifierDeclStatement	st32 imm = getnummemendbang ( ao -> a [ 3 ] ) ;	2305:3:48106:48144	339262	3	True				
ANR	345056	IdentifierDecl	imm = getnummemendbang ( ao -> a [ 3 ] )		339262	0					
ANR	345057	IdentifierDeclType	st32		339262	0					
ANR	345058	Identifier	imm		339262	1					
ANR	345059	AssignmentExpression	imm = getnummemendbang ( ao -> a [ 3 ] )		339262	2		=			
ANR	345060	Identifier	imm		339262	0					
ANR	345061	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		339262	1					
ANR	345062	Callee	getnummemendbang		339262	0					
ANR	345063	Identifier	getnummemendbang		339262	0					
ANR	345064	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	345065	Argument	ao -> a [ 3 ]		339262	0					
ANR	345066	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	345067	PtrMemberAccess	ao -> a		339262	0					
ANR	345068	Identifier	ao		339262	0					
ANR	345069	Identifier	a		339262	1					
ANR	345070	PrimaryExpression	3		339262	1					
ANR	345071	ExpressionStatement	ao -> o = 0x30ed0000	2306:3:48149:48167	339262	4	True				
ANR	345072	AssignmentExpression	ao -> o = 0x30ed0000		339262	0		=			
ANR	345073	PtrMemberAccess	ao -> o		339262	0					
ANR	345074	Identifier	ao		339262	0					
ANR	345075	Identifier	o		339262	1					
ANR	345076	PrimaryExpression	0x30ed0000		339262	1					
ANR	345077	IfStatement	if ( m & L_BIT )		339262	5					
ANR	345078	Condition	m & L_BIT	2307:7:48176:48184	339262	0	True				
ANR	345079	BitAndExpression	m & L_BIT		339262	0		&			
ANR	345080	Identifier	m		339262	0					
ANR	345081	Identifier	L_BIT		339262	1					
ANR	345082	CompoundStatement		1015:18:22328:22328	339262	1					
ANR	345083	ExpressionStatement	ao -> o |= 1 << 30	2308:4:48193:48209	339262	0	True				
ANR	345084	AssignmentExpression	ao -> o |= 1 << 30		339262	0		|=			
ANR	345085	PtrMemberAccess	ao -> o		339262	0					
ANR	345086	Identifier	ao		339262	0					
ANR	345087	Identifier	o		339262	1					
ANR	345088	ShiftExpression	1 << 30		339262	1		<<			
ANR	345089	PrimaryExpression	1		339262	0					
ANR	345090	PrimaryExpression	30		339262	1					
ANR	345091	IfStatement	if ( m & TWO_BIT )		339262	6					
ANR	345092	Condition	m & TWO_BIT	2310:7:48223:48233	339262	0	True				
ANR	345093	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	345094	Identifier	m		339262	0					
ANR	345095	Identifier	TWO_BIT		339262	1					
ANR	345096	CompoundStatement		1018:20:22377:22377	339262	1					
ANR	345097	ExpressionStatement	ao -> o |= 1 << 20	2311:4:48242:48258	339262	0	True				
ANR	345098	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	345099	PtrMemberAccess	ao -> o		339262	0					
ANR	345100	Identifier	ao		339262	0					
ANR	345101	Identifier	o		339262	1					
ANR	345102	ShiftExpression	1 << 20		339262	1		<<			
ANR	345103	PrimaryExpression	1		339262	0					
ANR	345104	PrimaryExpression	20		339262	1					
ANR	345105	IfStatement	if ( imm < 0 )		339262	7					
ANR	345106	Condition	imm < 0	2313:7:48272:48278	339262	0	True				
ANR	345107	RelationalExpression	imm < 0		339262	0		<			
ANR	345108	Identifier	imm		339262	0					
ANR	345109	PrimaryExpression	0		339262	1					
ANR	345110	CompoundStatement		1021:16:22422:22422	339262	1					
ANR	345111	ExpressionStatement	imm = - imm	2314:4:48287:48297	339262	0	True				
ANR	345112	AssignmentExpression	imm = - imm		339262	0		=			
ANR	345113	Identifier	imm		339262	0					
ANR	345114	UnaryOperationExpression	- imm		339262	1					
ANR	345115	UnaryOperator	-		339262	0					
ANR	345116	Identifier	imm		339262	1					
ANR	345117	ElseStatement	else		339262	0					
ANR	345118	CompoundStatement		1023:10:22450:22450	339262	0					
ANR	345119	ExpressionStatement	ao -> o |= 1 << 31	2316:4:48315:48331	339262	0	True				
ANR	345120	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	345121	PtrMemberAccess	ao -> o		339262	0					
ANR	345122	Identifier	ao		339262	0					
ANR	345123	Identifier	o		339262	1					
ANR	345124	ShiftExpression	1 << 31		339262	1		<<			
ANR	345125	PrimaryExpression	1		339262	0					
ANR	345126	PrimaryExpression	31		339262	1					
ANR	345127	IfStatement	if ( ( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 ) )		339262	8					
ANR	345128	Condition	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )	2318:7:48349:48423	339262	0	True				
ANR	345129	OrExpression	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	0		||			
ANR	345130	RelationalExpression	proc > 15		339262	0		>			
ANR	345131	Identifier	proc		339262	0					
ANR	345132	PrimaryExpression	15		339262	1					
ANR	345133	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	345134	RelationalExpression	reg1 > 15		339262	0		>			
ANR	345135	Identifier	reg1		339262	0					
ANR	345136	PrimaryExpression	15		339262	1					
ANR	345137	OrExpression	( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	345138	RelationalExpression	reg2 > 15		339262	0		>			
ANR	345139	Identifier	reg2		339262	0					
ANR	345140	PrimaryExpression	15		339262	1					
ANR	345141	OrExpression	( imm > 1024 ) || ( imm % 4 != 0 )		339262	1		||			
ANR	345142	RelationalExpression	imm > 1024		339262	0		>			
ANR	345143	Identifier	imm		339262	0					
ANR	345144	PrimaryExpression	1024		339262	1					
ANR	345145	EqualityExpression	imm % 4 != 0		339262	1		!=			
ANR	345146	MultiplicativeExpression	imm % 4		339262	0		%			
ANR	345147	Identifier	imm		339262	0					
ANR	345148	PrimaryExpression	4		339262	1					
ANR	345149	PrimaryExpression	0		339262	1					
ANR	345150	CompoundStatement		1026:84:22567:22567	339262	1					
ANR	345151	ReturnStatement	return - 1 ;	2319:4:48432:48441	339262	0	True				
ANR	345152	UnaryOperationExpression	- 1		339262	0					
ANR	345153	UnaryOperator	-		339262	0					
ANR	345154	PrimaryExpression	1		339262	1					
ANR	345155	ExpressionStatement	ao -> o |= proc	2321:3:48451:48464	339262	9	True				
ANR	345156	AssignmentExpression	ao -> o |= proc		339262	0		|=			
ANR	345157	PtrMemberAccess	ao -> o		339262	0					
ANR	345158	Identifier	ao		339262	0					
ANR	345159	Identifier	o		339262	1					
ANR	345160	Identifier	proc		339262	1					
ANR	345161	ExpressionStatement	ao -> o |= reg1 << 4	2322:3:48469:48487	339262	10	True				
ANR	345162	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	345163	PtrMemberAccess	ao -> o		339262	0					
ANR	345164	Identifier	ao		339262	0					
ANR	345165	Identifier	o		339262	1					
ANR	345166	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	345167	Identifier	reg1		339262	0					
ANR	345168	PrimaryExpression	4		339262	1					
ANR	345169	ExpressionStatement	ao -> o |= ( imm >> 2 ) << 8	2323:3:48492:48516	339262	11	True				
ANR	345170	AssignmentExpression	ao -> o |= ( imm >> 2 ) << 8		339262	0		|=			
ANR	345171	PtrMemberAccess	ao -> o		339262	0					
ANR	345172	Identifier	ao		339262	0					
ANR	345173	Identifier	o		339262	1					
ANR	345174	ShiftExpression	( imm >> 2 ) << 8		339262	1		<<			
ANR	345175	ShiftExpression	imm >> 2		339262	0		>>			
ANR	345176	Identifier	imm		339262	0					
ANR	345177	PrimaryExpression	2		339262	1					
ANR	345178	PrimaryExpression	8		339262	1					
ANR	345179	ExpressionStatement	ao -> o |= reg2 << 24	2324:3:48521:48540	339262	12	True				
ANR	345180	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	345181	PtrMemberAccess	ao -> o		339262	0					
ANR	345182	Identifier	ao		339262	0					
ANR	345183	Identifier	o		339262	1					
ANR	345184	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	345185	Identifier	reg2		339262	0					
ANR	345186	PrimaryExpression	24		339262	1					
ANR	345187	ReturnStatement	return 4 ;	2325:3:48545:48553	339262	13	True				
ANR	345188	PrimaryExpression	4		339262	0					
ANR	345189	BreakStatement	break ;	2327:3:48570:48575	339262	10	True				
ANR	345190	Label	default :	2328:2:48579:48586	339262	11	True				
ANR	345191	Identifier	default		339262	0					
ANR	345192	ReturnStatement	return - 1 ;	2329:3:48591:48600	339262	12	True				
ANR	345193	UnaryOperationExpression	- 1		339262	0					
ANR	345194	UnaryOperator	-		339262	0					
ANR	345195	PrimaryExpression	1		339262	1					
ANR	345196	ElseStatement	else		339262	0					
ANR	345197	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT ) ) )"		339262	0					
ANR	345198	Condition	"m = opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT )"	2332:5:48619:48681	339262	0	True				
ANR	345199	AssignmentExpression	"m = opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT )"		339262	0		=			
ANR	345200	Identifier	m		339262	0					
ANR	345201	CallExpression	"opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT )"		339262	1					
ANR	345202	Callee	opmask		339262	0					
ANR	345203	Identifier	opmask		339262	0					
ANR	345204	ArgumentList	ao -> op		339262	1					
ANR	345205	Argument	ao -> op		339262	0					
ANR	345206	PtrMemberAccess	ao -> op		339262	0					
ANR	345207	Identifier	ao		339262	0					
ANR	345208	Identifier	op		339262	1					
ANR	345209	Argument	"""ldm"""		339262	1					
ANR	345210	PrimaryExpression	"""ldm"""		339262	0					
ANR	345211	Argument	DB_BIT | EA_BIT | IA_BIT | FD_BIT		339262	2					
ANR	345212	InclusiveOrExpression	DB_BIT | EA_BIT | IA_BIT | FD_BIT		339262	0		|			
ANR	345213	Identifier	DB_BIT		339262	0					
ANR	345214	InclusiveOrExpression	EA_BIT | IA_BIT | FD_BIT		339262	1		|			
ANR	345215	Identifier	EA_BIT		339262	0					
ANR	345216	InclusiveOrExpression	IA_BIT | FD_BIT		339262	1		|			
ANR	345217	Identifier	IA_BIT		339262	0					
ANR	345218	Identifier	FD_BIT		339262	1					
ANR	345219	CompoundStatement		1041:2:22829:22863	339262	1					
ANR	345220	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2333:2:48688:48722	339262	0	True				
ANR	345221	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	345222	IdentifierDeclType	ut64		339262	0					
ANR	345223	Identifier	argt		339262	1					
ANR	345224	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	345225	Identifier	argt		339262	0					
ANR	345226	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	345227	Callee	thumb_selector		339262	0					
ANR	345228	Identifier	thumb_selector		339262	0					
ANR	345229	ArgumentList	ao -> a		339262	1					
ANR	345230	Argument	ao -> a		339262	0					
ANR	345231	PtrMemberAccess	ao -> a		339262	0					
ANR	345232	Identifier	ao		339262	0					
ANR	345233	Identifier	a		339262	1					
ANR	345234	SwitchStatement	switch ( argt )		339262	1					
ANR	345235	Condition	argt	2334:10:48734:48737	339262	0	True				
ANR	345236	Identifier	argt		339262	0					
ANR	345237	CompoundStatement		1042:16:22881:22881	339262	1					
ANR	345238	Label	case THUMB_REGBANG_LIST :	2335:2:48744:48767	339262	0	True				
ANR	345239	Identifier	THUMB_REGBANG_LIST		339262	0					
ANR	345240	CompoundStatement		1045:3:22955:22988	339262	1					
ANR	345241	IdentifierDeclStatement	ut8 reg1 = getregmembang ( ao -> a [ 0 ] ) ;	2336:3:48774:48809	339262	0	True				
ANR	345242	IdentifierDecl	reg1 = getregmembang ( ao -> a [ 0 ] )		339262	0					
ANR	345243	IdentifierDeclType	ut8		339262	0					
ANR	345244	Identifier	reg1		339262	1					
ANR	345245	AssignmentExpression	reg1 = getregmembang ( ao -> a [ 0 ] )		339262	2		=			
ANR	345246	Identifier	reg1		339262	0					
ANR	345247	CallExpression	getregmembang ( ao -> a [ 0 ] )		339262	1					
ANR	345248	Callee	getregmembang		339262	0					
ANR	345249	Identifier	getregmembang		339262	0					
ANR	345250	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	345251	Argument	ao -> a [ 0 ]		339262	0					
ANR	345252	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	345253	PtrMemberAccess	ao -> a		339262	0					
ANR	345254	Identifier	ao		339262	0					
ANR	345255	Identifier	a		339262	1					
ANR	345256	PrimaryExpression	0		339262	1					
ANR	345257	IdentifierDeclStatement	ut32 list = getreglist ( ao -> a [ 1 ] ) ;	2337:3:48814:48847	339262	1	True				
ANR	345258	IdentifierDecl	list = getreglist ( ao -> a [ 1 ] )		339262	0					
ANR	345259	IdentifierDeclType	ut32		339262	0					
ANR	345260	Identifier	list		339262	1					
ANR	345261	AssignmentExpression	list = getreglist ( ao -> a [ 1 ] )		339262	2		=			
ANR	345262	Identifier	list		339262	0					
ANR	345263	CallExpression	getreglist ( ao -> a [ 1 ] )		339262	1					
ANR	345264	Callee	getreglist		339262	0					
ANR	345265	Identifier	getreglist		339262	0					
ANR	345266	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	345267	Argument	ao -> a [ 1 ]		339262	0					
ANR	345268	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345269	PtrMemberAccess	ao -> a		339262	0					
ANR	345270	Identifier	ao		339262	0					
ANR	345271	Identifier	a		339262	1					
ANR	345272	PrimaryExpression	1		339262	1					
ANR	345273	IfStatement	if ( ! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT ) )		339262	2					
ANR	345274	Condition	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )	2338:7:48856:48939	339262	0	True				
ANR	345275	AndExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		339262	0		&&			
ANR	345276	UnaryOperationExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) )		339262	0					
ANR	345277	UnaryOperator	!		339262	0					
ANR	345278	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		339262	1		||			
ANR	345279	BitAndExpression	m & DB_BIT		339262	0		&			
ANR	345280	Identifier	m		339262	0					
ANR	345281	Identifier	DB_BIT		339262	1					
ANR	345282	BitAndExpression	m & EA_BIT		339262	1		&			
ANR	345283	Identifier	m		339262	0					
ANR	345284	Identifier	EA_BIT		339262	1					
ANR	345285	AndExpression	! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		339262	1		&&			
ANR	345286	UnaryOperationExpression	! ( list & 0xff00 )		339262	0					
ANR	345287	UnaryOperator	!		339262	0					
ANR	345288	BitAndExpression	list & 0xff00		339262	1		&			
ANR	345289	Identifier	list		339262	0					
ANR	345290	PrimaryExpression	0xff00		339262	1					
ANR	345291	AndExpression	( reg1 < 8 ) && ! ( m & DOTW_BIT )		339262	1		&&			
ANR	345292	RelationalExpression	reg1 < 8		339262	0		<			
ANR	345293	Identifier	reg1		339262	0					
ANR	345294	PrimaryExpression	8		339262	1					
ANR	345295	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	345296	UnaryOperator	!		339262	0					
ANR	345297	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	345298	Identifier	m		339262	0					
ANR	345299	Identifier	DOTW_BIT		339262	1					
ANR	345300	CompoundStatement		1046:93:23083:23083	339262	1					
ANR	345301	ExpressionStatement	ao -> o = 0x00c8	2339:4:48948:48962	339262	0	True				
ANR	345302	AssignmentExpression	ao -> o = 0x00c8		339262	0		=			
ANR	345303	PtrMemberAccess	ao -> o		339262	0					
ANR	345304	Identifier	ao		339262	0					
ANR	345305	Identifier	o		339262	1					
ANR	345306	PrimaryExpression	0x00c8		339262	1					
ANR	345307	ExpressionStatement	ao -> o |= reg1	2340:4:48968:48981	339262	1	True				
ANR	345308	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	345309	PtrMemberAccess	ao -> o		339262	0					
ANR	345310	Identifier	ao		339262	0					
ANR	345311	Identifier	o		339262	1					
ANR	345312	Identifier	reg1		339262	1					
ANR	345313	IfStatement	if ( list & ( 1 << reg1 ) )		339262	2					
ANR	345314	Condition	list & ( 1 << reg1 )	2341:8:48991:49008	339262	0	True				
ANR	345315	BitAndExpression	list & ( 1 << reg1 )		339262	0		&			
ANR	345316	Identifier	list		339262	0					
ANR	345317	ShiftExpression	1 << reg1		339262	1		<<			
ANR	345318	PrimaryExpression	1		339262	0					
ANR	345319	Identifier	reg1		339262	1					
ANR	345320	CompoundStatement		1049:28:23152:23152	339262	1					
ANR	345321	ExpressionStatement	list ^= 1 << ( reg1 )	2342:5:49018:49037	339262	0	True				
ANR	345322	AssignmentExpression	list ^= 1 << ( reg1 )		339262	0		^=			
ANR	345323	Identifier	list		339262	0					
ANR	345324	ShiftExpression	1 << ( reg1 )		339262	1		<<			
ANR	345325	PrimaryExpression	1		339262	0					
ANR	345326	Identifier	reg1		339262	1					
ANR	345327	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2344:4:49049:49076	339262	3	True				
ANR	345328	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	345329	PtrMemberAccess	ao -> o		339262	0					
ANR	345330	Identifier	ao		339262	0					
ANR	345331	Identifier	o		339262	1					
ANR	345332	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	345333	BitAndExpression	list & 0xff		339262	0		&			
ANR	345334	Identifier	list		339262	0					
ANR	345335	PrimaryExpression	0xff		339262	1					
ANR	345336	PrimaryExpression	8		339262	1					
ANR	345337	ReturnStatement	return 2 ;	2346:4:49088:49096	339262	4	True				
ANR	345338	PrimaryExpression	2		339262	0					
ANR	345339	IfStatement	if ( list & 0x2000 )		339262	3					
ANR	345340	Condition	list & 0x2000	2348:7:49110:49122	339262	0	True				
ANR	345341	BitAndExpression	list & 0x2000		339262	0		&			
ANR	345342	Identifier	list		339262	0					
ANR	345343	PrimaryExpression	0x2000		339262	1					
ANR	345344	CompoundStatement		1056:22:23266:23266	339262	1					
ANR	345345	ReturnStatement	return - 1 ;	2349:4:49131:49140	339262	0	True				
ANR	345346	UnaryOperationExpression	- 1		339262	0					
ANR	345347	UnaryOperator	-		339262	0					
ANR	345348	PrimaryExpression	1		339262	1					
ANR	345349	IfStatement	if ( ( m & DB_BIT ) || ( m & EA_BIT ) )		339262	4					
ANR	345350	Condition	( m & DB_BIT ) || ( m & EA_BIT )	2351:7:49154:49181	339262	0	True				
ANR	345351	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		339262	0		||			
ANR	345352	BitAndExpression	m & DB_BIT		339262	0		&			
ANR	345353	Identifier	m		339262	0					
ANR	345354	Identifier	DB_BIT		339262	1					
ANR	345355	BitAndExpression	m & EA_BIT		339262	1		&			
ANR	345356	Identifier	m		339262	0					
ANR	345357	Identifier	EA_BIT		339262	1					
ANR	345358	CompoundStatement		1059:37:23325:23325	339262	1					
ANR	345359	ExpressionStatement	ao -> o = 0x30e90000	2352:4:49190:49208	339262	0	True				
ANR	345360	AssignmentExpression	ao -> o = 0x30e90000		339262	0		=			
ANR	345361	PtrMemberAccess	ao -> o		339262	0					
ANR	345362	Identifier	ao		339262	0					
ANR	345363	Identifier	o		339262	1					
ANR	345364	PrimaryExpression	0x30e90000		339262	1					
ANR	345365	ElseStatement	else		339262	0					
ANR	345366	CompoundStatement		1061:10:23361:23361	339262	0					
ANR	345367	ExpressionStatement	ao -> o = 0xb0e80000	2355:4:49255:49273	339262	0	True				
ANR	345368	AssignmentExpression	ao -> o = 0xb0e80000		339262	0		=			
ANR	345369	PtrMemberAccess	ao -> o		339262	0					
ANR	345370	Identifier	ao		339262	0					
ANR	345371	Identifier	o		339262	1					
ANR	345372	PrimaryExpression	0xb0e80000		339262	1					
ANR	345373	ExpressionStatement	ao -> o |= reg1 << 24	2358:3:49288:49307	339262	5	True				
ANR	345374	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	345375	PtrMemberAccess	ao -> o		339262	0					
ANR	345376	Identifier	ao		339262	0					
ANR	345377	Identifier	o		339262	1					
ANR	345378	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	345379	Identifier	reg1		339262	0					
ANR	345380	PrimaryExpression	24		339262	1					
ANR	345381	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2359:3:49312:49339	339262	6	True				
ANR	345382	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	345383	PtrMemberAccess	ao -> o		339262	0					
ANR	345384	Identifier	ao		339262	0					
ANR	345385	Identifier	o		339262	1					
ANR	345386	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	345387	BitAndExpression	list & 0xff		339262	0		&			
ANR	345388	Identifier	list		339262	0					
ANR	345389	PrimaryExpression	0xff		339262	1					
ANR	345390	PrimaryExpression	8		339262	1					
ANR	345391	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	2360:3:49344:49373	339262	7	True				
ANR	345392	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		339262	0		|=			
ANR	345393	PtrMemberAccess	ao -> o		339262	0					
ANR	345394	Identifier	ao		339262	0					
ANR	345395	Identifier	o		339262	1					
ANR	345396	ShiftExpression	( list & 0xff00 ) >> 8		339262	1		>>			
ANR	345397	BitAndExpression	list & 0xff00		339262	0		&			
ANR	345398	Identifier	list		339262	0					
ANR	345399	PrimaryExpression	0xff00		339262	1					
ANR	345400	PrimaryExpression	8		339262	1					
ANR	345401	ReturnStatement	return 4 ;	2361:3:49378:49386	339262	8	True				
ANR	345402	PrimaryExpression	4		339262	0					
ANR	345403	BreakStatement	break ;	2363:3:49403:49408	339262	2	True				
ANR	345404	Label	case THUMB_REG_LIST :	2364:2:49412:49431	339262	3	True				
ANR	345405	Identifier	THUMB_REG_LIST		339262	0					
ANR	345406	CompoundStatement		1074:3:23612:23645	339262	4					
ANR	345407	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2365:3:49438:49466	339262	0	True				
ANR	345408	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	345409	IdentifierDeclType	ut8		339262	0					
ANR	345410	Identifier	reg1		339262	1					
ANR	345411	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	345412	Identifier	reg1		339262	0					
ANR	345413	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	345414	Callee	getreg		339262	0					
ANR	345415	Identifier	getreg		339262	0					
ANR	345416	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	345417	Argument	ao -> a [ 0 ]		339262	0					
ANR	345418	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	345419	PtrMemberAccess	ao -> a		339262	0					
ANR	345420	Identifier	ao		339262	0					
ANR	345421	Identifier	a		339262	1					
ANR	345422	PrimaryExpression	0		339262	1					
ANR	345423	IdentifierDeclStatement	ut32 list = getreglist ( ao -> a [ 1 ] ) ;	2366:3:49471:49504	339262	1	True				
ANR	345424	IdentifierDecl	list = getreglist ( ao -> a [ 1 ] )		339262	0					
ANR	345425	IdentifierDeclType	ut32		339262	0					
ANR	345426	Identifier	list		339262	1					
ANR	345427	AssignmentExpression	list = getreglist ( ao -> a [ 1 ] )		339262	2		=			
ANR	345428	Identifier	list		339262	0					
ANR	345429	CallExpression	getreglist ( ao -> a [ 1 ] )		339262	1					
ANR	345430	Callee	getreglist		339262	0					
ANR	345431	Identifier	getreglist		339262	0					
ANR	345432	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	345433	Argument	ao -> a [ 1 ]		339262	0					
ANR	345434	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345435	PtrMemberAccess	ao -> a		339262	0					
ANR	345436	Identifier	ao		339262	0					
ANR	345437	Identifier	a		339262	1					
ANR	345438	PrimaryExpression	1		339262	1					
ANR	345439	IfStatement	if ( ! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT ) )		339262	2					
ANR	345440	Condition	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )	2367:7:49513:49596	339262	0	True				
ANR	345441	AndExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		339262	0		&&			
ANR	345442	UnaryOperationExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) )		339262	0					
ANR	345443	UnaryOperator	!		339262	0					
ANR	345444	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		339262	1		||			
ANR	345445	BitAndExpression	m & DB_BIT		339262	0		&			
ANR	345446	Identifier	m		339262	0					
ANR	345447	Identifier	DB_BIT		339262	1					
ANR	345448	BitAndExpression	m & EA_BIT		339262	1		&			
ANR	345449	Identifier	m		339262	0					
ANR	345450	Identifier	EA_BIT		339262	1					
ANR	345451	AndExpression	! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		339262	1		&&			
ANR	345452	UnaryOperationExpression	! ( list & 0xff00 )		339262	0					
ANR	345453	UnaryOperator	!		339262	0					
ANR	345454	BitAndExpression	list & 0xff00		339262	1		&			
ANR	345455	Identifier	list		339262	0					
ANR	345456	PrimaryExpression	0xff00		339262	1					
ANR	345457	AndExpression	( reg1 < 8 ) && ! ( m & DOTW_BIT )		339262	1		&&			
ANR	345458	RelationalExpression	reg1 < 8		339262	0		<			
ANR	345459	Identifier	reg1		339262	0					
ANR	345460	PrimaryExpression	8		339262	1					
ANR	345461	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	345462	UnaryOperator	!		339262	0					
ANR	345463	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	345464	Identifier	m		339262	0					
ANR	345465	Identifier	DOTW_BIT		339262	1					
ANR	345466	CompoundStatement		1075:93:23740:23740	339262	1					
ANR	345467	ExpressionStatement	ao -> o = 0x00c8	2368:4:49605:49619	339262	0	True				
ANR	345468	AssignmentExpression	ao -> o = 0x00c8		339262	0		=			
ANR	345469	PtrMemberAccess	ao -> o		339262	0					
ANR	345470	Identifier	ao		339262	0					
ANR	345471	Identifier	o		339262	1					
ANR	345472	PrimaryExpression	0x00c8		339262	1					
ANR	345473	ExpressionStatement	ao -> o |= reg1	2369:4:49625:49638	339262	1	True				
ANR	345474	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	345475	PtrMemberAccess	ao -> o		339262	0					
ANR	345476	Identifier	ao		339262	0					
ANR	345477	Identifier	o		339262	1					
ANR	345478	Identifier	reg1		339262	1					
ANR	345479	ExpressionStatement	ao -> o |= 1 << ( reg1 + 8 )	2370:4:49644:49668	339262	2	True				
ANR	345480	AssignmentExpression	ao -> o |= 1 << ( reg1 + 8 )		339262	0		|=			
ANR	345481	PtrMemberAccess	ao -> o		339262	0					
ANR	345482	Identifier	ao		339262	0					
ANR	345483	Identifier	o		339262	1					
ANR	345484	ShiftExpression	1 << ( reg1 + 8 )		339262	1		<<			
ANR	345485	PrimaryExpression	1		339262	0					
ANR	345486	AdditiveExpression	reg1 + 8		339262	1		+			
ANR	345487	Identifier	reg1		339262	0					
ANR	345488	PrimaryExpression	8		339262	1					
ANR	345489	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2371:4:49674:49701	339262	3	True				
ANR	345490	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	345491	PtrMemberAccess	ao -> o		339262	0					
ANR	345492	Identifier	ao		339262	0					
ANR	345493	Identifier	o		339262	1					
ANR	345494	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	345495	BitAndExpression	list & 0xff		339262	0		&			
ANR	345496	Identifier	list		339262	0					
ANR	345497	PrimaryExpression	0xff		339262	1					
ANR	345498	PrimaryExpression	8		339262	1					
ANR	345499	ReturnStatement	return 2 ;	2372:4:49707:49715	339262	4	True				
ANR	345500	PrimaryExpression	2		339262	0					
ANR	345501	IfStatement	if ( list & 0x2000 )		339262	3					
ANR	345502	Condition	list & 0x2000	2374:7:49729:49741	339262	0	True				
ANR	345503	BitAndExpression	list & 0x2000		339262	0		&			
ANR	345504	Identifier	list		339262	0					
ANR	345505	PrimaryExpression	0x2000		339262	1					
ANR	345506	CompoundStatement		1082:22:23885:23885	339262	1					
ANR	345507	ReturnStatement	return - 1 ;	2375:4:49750:49759	339262	0	True				
ANR	345508	UnaryOperationExpression	- 1		339262	0					
ANR	345509	UnaryOperator	-		339262	0					
ANR	345510	PrimaryExpression	1		339262	1					
ANR	345511	IfStatement	if ( ( m & DB_BIT ) || ( m & EA_BIT ) )		339262	4					
ANR	345512	Condition	( m & DB_BIT ) || ( m & EA_BIT )	2378:7:49777:49804	339262	0	True				
ANR	345513	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		339262	0		||			
ANR	345514	BitAndExpression	m & DB_BIT		339262	0		&			
ANR	345515	Identifier	m		339262	0					
ANR	345516	Identifier	DB_BIT		339262	1					
ANR	345517	BitAndExpression	m & EA_BIT		339262	1		&			
ANR	345518	Identifier	m		339262	0					
ANR	345519	Identifier	EA_BIT		339262	1					
ANR	345520	CompoundStatement		1086:37:23948:23948	339262	1					
ANR	345521	ExpressionStatement	ao -> o = 0x10e90000	2379:4:49813:49831	339262	0	True				
ANR	345522	AssignmentExpression	ao -> o = 0x10e90000		339262	0		=			
ANR	345523	PtrMemberAccess	ao -> o		339262	0					
ANR	345524	Identifier	ao		339262	0					
ANR	345525	Identifier	o		339262	1					
ANR	345526	PrimaryExpression	0x10e90000		339262	1					
ANR	345527	ElseStatement	else		339262	0					
ANR	345528	CompoundStatement		1088:10:23984:23984	339262	0					
ANR	345529	ExpressionStatement	ao -> o = 0x90e80000	2381:4:49849:49867	339262	0	True				
ANR	345530	AssignmentExpression	ao -> o = 0x90e80000		339262	0		=			
ANR	345531	PtrMemberAccess	ao -> o		339262	0					
ANR	345532	Identifier	ao		339262	0					
ANR	345533	Identifier	o		339262	1					
ANR	345534	PrimaryExpression	0x90e80000		339262	1					
ANR	345535	ExpressionStatement	ao -> o |= reg1 << 24	2384:3:49882:49901	339262	5	True				
ANR	345536	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	345537	PtrMemberAccess	ao -> o		339262	0					
ANR	345538	Identifier	ao		339262	0					
ANR	345539	Identifier	o		339262	1					
ANR	345540	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	345541	Identifier	reg1		339262	0					
ANR	345542	PrimaryExpression	24		339262	1					
ANR	345543	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2385:3:49906:49933	339262	6	True				
ANR	345544	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	345545	PtrMemberAccess	ao -> o		339262	0					
ANR	345546	Identifier	ao		339262	0					
ANR	345547	Identifier	o		339262	1					
ANR	345548	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	345549	BitAndExpression	list & 0xff		339262	0		&			
ANR	345550	Identifier	list		339262	0					
ANR	345551	PrimaryExpression	0xff		339262	1					
ANR	345552	PrimaryExpression	8		339262	1					
ANR	345553	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	2386:3:49938:49967	339262	7	True				
ANR	345554	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		339262	0		|=			
ANR	345555	PtrMemberAccess	ao -> o		339262	0					
ANR	345556	Identifier	ao		339262	0					
ANR	345557	Identifier	o		339262	1					
ANR	345558	ShiftExpression	( list & 0xff00 ) >> 8		339262	1		>>			
ANR	345559	BitAndExpression	list & 0xff00		339262	0		&			
ANR	345560	Identifier	list		339262	0					
ANR	345561	PrimaryExpression	0xff00		339262	1					
ANR	345562	PrimaryExpression	8		339262	1					
ANR	345563	ReturnStatement	return 4 ;	2387:3:49972:49980	339262	8	True				
ANR	345564	PrimaryExpression	4		339262	0					
ANR	345565	BreakStatement	break ;	2389:3:49997:50002	339262	5	True				
ANR	345566	Label	default :	2390:2:50006:50013	339262	6	True				
ANR	345567	Identifier	default		339262	0					
ANR	345568	ReturnStatement	return - 1 ;	2391:3:50018:50027	339262	7	True				
ANR	345569	UnaryOperationExpression	- 1		339262	0					
ANR	345570	UnaryOperator	-		339262	0					
ANR	345571	PrimaryExpression	1		339262	1					
ANR	345572	ElseStatement	else		339262	0					
ANR	345573	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT ) ) )"		339262	0					
ANR	345574	Condition	"m = opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT )"	2394:5:50046:50112	339262	0	True				
ANR	345575	AssignmentExpression	"m = opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT )"		339262	0		=			
ANR	345576	Identifier	m		339262	0					
ANR	345577	CallExpression	"opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT )"		339262	1					
ANR	345578	Callee	opmask		339262	0					
ANR	345579	Identifier	opmask		339262	0					
ANR	345580	ArgumentList	ao -> op		339262	1					
ANR	345581	Argument	ao -> op		339262	0					
ANR	345582	PtrMemberAccess	ao -> op		339262	0					
ANR	345583	Identifier	ao		339262	0					
ANR	345584	Identifier	op		339262	1					
ANR	345585	Argument	"""ldr"""		339262	1					
ANR	345586	PrimaryExpression	"""ldr"""		339262	0					
ANR	345587	Argument	B_BIT | H_BIT | D_BIT | T_BIT | S_BIT		339262	2					
ANR	345588	InclusiveOrExpression	B_BIT | H_BIT | D_BIT | T_BIT | S_BIT		339262	0		|			
ANR	345589	Identifier	B_BIT		339262	0					
ANR	345590	InclusiveOrExpression	H_BIT | D_BIT | T_BIT | S_BIT		339262	1		|			
ANR	345591	Identifier	H_BIT		339262	0					
ANR	345592	InclusiveOrExpression	D_BIT | T_BIT | S_BIT		339262	1		|			
ANR	345593	Identifier	D_BIT		339262	0					
ANR	345594	InclusiveOrExpression	T_BIT | S_BIT		339262	1		|			
ANR	345595	Identifier	T_BIT		339262	0					
ANR	345596	Identifier	S_BIT		339262	1					
ANR	345597	CompoundStatement		1104:2:24298:24339	339262	1					
ANR	345598	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2395:2:50119:50153	339262	0	True				
ANR	345599	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	345600	IdentifierDeclType	ut64		339262	0					
ANR	345601	Identifier	argt		339262	1					
ANR	345602	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	345603	Identifier	argt		339262	0					
ANR	345604	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	345605	Callee	thumb_selector		339262	0					
ANR	345606	Identifier	thumb_selector		339262	0					
ANR	345607	ArgumentList	ao -> a		339262	1					
ANR	345608	Argument	ao -> a		339262	0					
ANR	345609	PtrMemberAccess	ao -> a		339262	0					
ANR	345610	Identifier	ao		339262	0					
ANR	345611	Identifier	a		339262	1					
ANR	345612	IdentifierDeclStatement	ut32 ldrsel = m & ( B_BIT | H_BIT | D_BIT ) ;	2396:2:50157:50198	339262	1	True				
ANR	345613	IdentifierDecl	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		339262	0					
ANR	345614	IdentifierDeclType	ut32		339262	0					
ANR	345615	Identifier	ldrsel		339262	1					
ANR	345616	AssignmentExpression	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		339262	2		=			
ANR	345617	Identifier	ldrsel		339262	0					
ANR	345618	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		339262	1		&			
ANR	345619	Identifier	m		339262	0					
ANR	345620	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		339262	1		|			
ANR	345621	Identifier	B_BIT		339262	0					
ANR	345622	InclusiveOrExpression	H_BIT | D_BIT		339262	1		|			
ANR	345623	Identifier	H_BIT		339262	0					
ANR	345624	Identifier	D_BIT		339262	1					
ANR	345625	IfStatement	if ( ( m & S_BIT ) && ! ( m & ( B_BIT | H_BIT ) ) )		339262	2					
ANR	345626	Condition	( m & S_BIT ) && ! ( m & ( B_BIT | H_BIT ) )	2397:6:50206:50242	339262	0	True				
ANR	345627	AndExpression	( m & S_BIT ) && ! ( m & ( B_BIT | H_BIT ) )		339262	0		&&			
ANR	345628	BitAndExpression	m & S_BIT		339262	0		&			
ANR	345629	Identifier	m		339262	0					
ANR	345630	Identifier	S_BIT		339262	1					
ANR	345631	UnaryOperationExpression	! ( m & ( B_BIT | H_BIT ) )		339262	1					
ANR	345632	UnaryOperator	!		339262	0					
ANR	345633	BitAndExpression	m & ( B_BIT | H_BIT )		339262	1		&			
ANR	345634	Identifier	m		339262	0					
ANR	345635	InclusiveOrExpression	B_BIT | H_BIT		339262	1		|			
ANR	345636	Identifier	B_BIT		339262	0					
ANR	345637	Identifier	H_BIT		339262	1					
ANR	345638	CompoundStatement		1105:45:24386:24386	339262	1					
ANR	345639	ReturnStatement	return - 1 ;	2398:3:50250:50259	339262	0	True				
ANR	345640	UnaryOperationExpression	- 1		339262	0					
ANR	345641	UnaryOperator	-		339262	0					
ANR	345642	PrimaryExpression	1		339262	1					
ANR	345643	SwitchStatement	switch ( argt )		339262	3					
ANR	345644	Condition	argt	2400:10:50275:50278	339262	0	True				
ANR	345645	Identifier	argt		339262	0					
ANR	345646	CompoundStatement		1108:16:24422:24422	339262	1					
ANR	345647	Label	case THUMB_REG_CONST :	2401:2:50285:50305	339262	0	True				
ANR	345648	Identifier	THUMB_REG_CONST		339262	0					
ANR	345649	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	2402:3:50310:50329	339262	1	True				
ANR	345650	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		339262	0		=			
ANR	345651	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	345652	PtrMemberAccess	ao -> a		339262	0					
ANR	345653	Identifier	ao		339262	0					
ANR	345654	Identifier	a		339262	1					
ANR	345655	PrimaryExpression	2		339262	1					
ANR	345656	ArrayIndexing	ao -> a [ 1 ]		339262	1					
ANR	345657	PtrMemberAccess	ao -> a		339262	0					
ANR	345658	Identifier	ao		339262	0					
ANR	345659	Identifier	a		339262	1					
ANR	345660	PrimaryExpression	1		339262	1					
ANR	345661	ExpressionStatement	"strcat ( ao -> a [ 2 ] , ""]"" )"	2403:3:50334:50355	339262	2	True				
ANR	345662	CallExpression	"strcat ( ao -> a [ 2 ] , ""]"" )"		339262	0					
ANR	345663	Callee	strcat		339262	0					
ANR	345664	Identifier	strcat		339262	0					
ANR	345665	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	345666	Argument	ao -> a [ 2 ]		339262	0					
ANR	345667	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	345668	PtrMemberAccess	ao -> a		339262	0					
ANR	345669	Identifier	ao		339262	0					
ANR	345670	Identifier	a		339262	1					
ANR	345671	PrimaryExpression	2		339262	1					
ANR	345672	Argument	"""]"""		339262	1					
ANR	345673	PrimaryExpression	"""]"""		339262	0					
ANR	345674	ExpressionStatement	"ao -> a [ 1 ] = ""[r15"""	2404:3:50360:50377	339262	3	True				
ANR	345675	AssignmentExpression	"ao -> a [ 1 ] = ""[r15"""		339262	0		=			
ANR	345676	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345677	PtrMemberAccess	ao -> a		339262	0					
ANR	345678	Identifier	ao		339262	0					
ANR	345679	Identifier	a		339262	1					
ANR	345680	PrimaryExpression	1		339262	1					
ANR	345681	PrimaryExpression	"""[r15"""		339262	1					
ANR	345682	Label	case THUMB_REG_BRACKREGBRACK :	2406:2:50411:50439	339262	4	True				
ANR	345683	Identifier	THUMB_REG_BRACKREGBRACK		339262	0					
ANR	345684	IfStatement	if ( ao -> a [ 2 ] == NULL )		339262	5					
ANR	345685	Condition	ao -> a [ 2 ] == NULL	2407:7:50448:50463	339262	0	True				
ANR	345686	EqualityExpression	ao -> a [ 2 ] == NULL		339262	0		==			
ANR	345687	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	345688	PtrMemberAccess	ao -> a		339262	0					
ANR	345689	Identifier	ao		339262	0					
ANR	345690	Identifier	a		339262	1					
ANR	345691	PrimaryExpression	2		339262	1					
ANR	345692	Identifier	NULL		339262	1					
ANR	345693	CompoundStatement		1115:25:24607:24607	339262	1					
ANR	345694	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	2408:4:50494:50531	339262	0	True				
ANR	345695	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	345696	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		339262	0					
ANR	345697	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345698	PtrMemberAccess	ao -> a		339262	0					
ANR	345699	Identifier	ao		339262	0					
ANR	345700	Identifier	a		339262	1					
ANR	345701	PrimaryExpression	1		339262	1					
ANR	345702	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	345703	CallExpression	strlen ( ao -> a [ 1 ] )		339262	0					
ANR	345704	Callee	strlen		339262	0					
ANR	345705	Identifier	strlen		339262	0					
ANR	345706	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	345707	Argument	ao -> a [ 1 ]		339262	0					
ANR	345708	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345709	PtrMemberAccess	ao -> a		339262	0					
ANR	345710	Identifier	ao		339262	0					
ANR	345711	Identifier	a		339262	1					
ANR	345712	PrimaryExpression	1		339262	1					
ANR	345713	PrimaryExpression	1		339262	1					
ANR	345714	PrimaryExpression	'\\0'		339262	1					
ANR	345715	ExpressionStatement	"ao -> a [ 2 ] = ""0]"""	2409:4:50537:50552	339262	1	True				
ANR	345716	AssignmentExpression	"ao -> a [ 2 ] = ""0]"""		339262	0		=			
ANR	345717	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	345718	PtrMemberAccess	ao -> a		339262	0					
ANR	345719	Identifier	ao		339262	0					
ANR	345720	Identifier	a		339262	1					
ANR	345721	PrimaryExpression	2		339262	1					
ANR	345722	PrimaryExpression	"""0]"""		339262	1					
ANR	345723	Label	case THUMB_REG_BRACKREG_CONSTBRACK :	2412:2:50591:50625	339262	6	True				
ANR	345724	Identifier	THUMB_REG_BRACKREG_CONSTBRACK		339262	0					
ANR	345725	CompoundStatement		1123:3:24847:24881	339262	7					
ANR	345726	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2413:3:50632:50660	339262	0	True				
ANR	345727	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	345728	IdentifierDeclType	ut8		339262	0					
ANR	345729	Identifier	reg1		339262	1					
ANR	345730	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	345731	Identifier	reg1		339262	0					
ANR	345732	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	345733	Callee	getreg		339262	0					
ANR	345734	Identifier	getreg		339262	0					
ANR	345735	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	345736	Argument	ao -> a [ 0 ]		339262	0					
ANR	345737	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	345738	PtrMemberAccess	ao -> a		339262	0					
ANR	345739	Identifier	ao		339262	0					
ANR	345740	Identifier	a		339262	1					
ANR	345741	PrimaryExpression	0		339262	1					
ANR	345742	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	2414:3:50665:50701	339262	1	True				
ANR	345743	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	0					
ANR	345744	IdentifierDeclType	ut8		339262	0					
ANR	345745	Identifier	reg2		339262	1					
ANR	345746	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	2		=			
ANR	345747	Identifier	reg2		339262	0					
ANR	345748	CallExpression	getregmemstart ( ao -> a [ 1 ] )		339262	1					
ANR	345749	Callee	getregmemstart		339262	0					
ANR	345750	Identifier	getregmemstart		339262	0					
ANR	345751	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	345752	Argument	ao -> a [ 1 ]		339262	0					
ANR	345753	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	345754	PtrMemberAccess	ao -> a		339262	0					
ANR	345755	Identifier	ao		339262	0					
ANR	345756	Identifier	a		339262	1					
ANR	345757	PrimaryExpression	1		339262	1					
ANR	345758	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 2 ] ) ;	2415:3:50706:50740	339262	2	True				
ANR	345759	IdentifierDecl	num = getnummemend ( ao -> a [ 2 ] )		339262	0					
ANR	345760	IdentifierDeclType	st32		339262	0					
ANR	345761	Identifier	num		339262	1					
ANR	345762	AssignmentExpression	num = getnummemend ( ao -> a [ 2 ] )		339262	2		=			
ANR	345763	Identifier	num		339262	0					
ANR	345764	CallExpression	getnummemend ( ao -> a [ 2 ] )		339262	1					
ANR	345765	Callee	getnummemend		339262	0					
ANR	345766	Identifier	getnummemend		339262	0					
ANR	345767	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	345768	Argument	ao -> a [ 2 ]		339262	0					
ANR	345769	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	345770	PtrMemberAccess	ao -> a		339262	0					
ANR	345771	Identifier	ao		339262	0					
ANR	345772	Identifier	a		339262	1					
ANR	345773	PrimaryExpression	2		339262	1					
ANR	345774	IfStatement	if ( ldrsel == 0 )		339262	3					
ANR	345775	Condition	ldrsel == 0	2416:7:50749:50759	339262	0	True				
ANR	345776	EqualityExpression	ldrsel == 0		339262	0		==			
ANR	345777	Identifier	ldrsel		339262	0					
ANR	345778	PrimaryExpression	0		339262	1					
ANR	345779	CompoundStatement		1124:20:24903:24903	339262	1					
ANR	345780	IfStatement	if ( m & T_BIT )		339262	0					
ANR	345781	Condition	m & T_BIT	2417:8:50772:50780	339262	0	True				
ANR	345782	BitAndExpression	m & T_BIT		339262	0		&			
ANR	345783	Identifier	m		339262	0					
ANR	345784	Identifier	T_BIT		339262	1					
ANR	345785	CompoundStatement		1125:19:24924:24924	339262	1					
ANR	345786	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		339262	0					
ANR	345787	Condition	( num < 0 ) || ( num > 255 )	2418:9:50794:50817	339262	0	True				
ANR	345788	OrExpression	( num < 0 ) || ( num > 255 )		339262	0		||			
ANR	345789	RelationalExpression	num < 0		339262	0		<			
ANR	345790	Identifier	num		339262	0					
ANR	345791	PrimaryExpression	0		339262	1					
ANR	345792	RelationalExpression	num > 255		339262	1		>			
ANR	345793	Identifier	num		339262	0					
ANR	345794	PrimaryExpression	255		339262	1					
ANR	345795	CompoundStatement		1126:35:24961:24961	339262	1					
ANR	345796	ReturnStatement	return - 1 ;	2419:6:50828:50837	339262	0	True				
ANR	345797	UnaryOperationExpression	- 1		339262	0					
ANR	345798	UnaryOperator	-		339262	0					
ANR	345799	PrimaryExpression	1		339262	1					
ANR	345800	ExpressionStatement	ao -> o = 0x50f8000e	2421:5:50851:50869	339262	1	True				
ANR	345801	AssignmentExpression	ao -> o = 0x50f8000e		339262	0		=			
ANR	345802	PtrMemberAccess	ao -> o		339262	0					
ANR	345803	Identifier	ao		339262	0					
ANR	345804	Identifier	o		339262	1					
ANR	345805	PrimaryExpression	0x50f8000e		339262	1					
ANR	345806	ExpressionStatement	ao -> o |= num << 8	2422:5:50876:50893	339262	2	True				
ANR	345807	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	345808	PtrMemberAccess	ao -> o		339262	0					
ANR	345809	Identifier	ao		339262	0					
ANR	345810	Identifier	o		339262	1					
ANR	345811	ShiftExpression	num << 8		339262	1		<<			
ANR	345812	Identifier	num		339262	0					
ANR	345813	PrimaryExpression	8		339262	1					
ANR	345814	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2423:5:50900:50929	339262	3	True				
ANR	345815	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	345816	Callee	mem_32bit_2reg		339262	0					
ANR	345817	Identifier	mem_32bit_2reg		339262	0					
ANR	345818	ArgumentList	ao		339262	1					
ANR	345819	Argument	ao		339262	0					
ANR	345820	Identifier	ao		339262	0					
ANR	345821	Argument	m		339262	1					
ANR	345822	Identifier	m		339262	0					
ANR	345823	IfStatement	if ( reg2 == 15 )		339262	1					
ANR	345824	Condition	reg2 == 15	2425:8:50945:50954	339262	0	True				
ANR	345825	EqualityExpression	reg2 == 15		339262	0		==			
ANR	345826	Identifier	reg2		339262	0					
ANR	345827	PrimaryExpression	15		339262	1					
ANR	345828	CompoundStatement		1133:20:25098:25098	339262	1					
ANR	345829	IfStatement	if ( ( num > 4095 ) || ( num < - 4095 ) )		339262	0					
ANR	345830	Condition	( num > 4095 ) || ( num < - 4095 )	2426:9:50968:50996	339262	0	True				
ANR	345831	OrExpression	( num > 4095 ) || ( num < - 4095 )		339262	0		||			
ANR	345832	RelationalExpression	num > 4095		339262	0		>			
ANR	345833	Identifier	num		339262	0					
ANR	345834	PrimaryExpression	4095		339262	1					
ANR	345835	RelationalExpression	num < - 4095		339262	1		<			
ANR	345836	Identifier	num		339262	0					
ANR	345837	UnaryOperationExpression	- 4095		339262	1					
ANR	345838	UnaryOperator	-		339262	0					
ANR	345839	PrimaryExpression	4095		339262	1					
ANR	345840	CompoundStatement		1134:40:25140:25140	339262	1					
ANR	345841	ReturnStatement	return - 1 ;	2427:6:51007:51016	339262	0	True				
ANR	345842	UnaryOperationExpression	- 1		339262	0					
ANR	345843	UnaryOperator	-		339262	0					
ANR	345844	PrimaryExpression	1		339262	1					
ANR	345845	IfStatement	if ( ( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) )		339262	1					
ANR	345846	Condition	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 )	2429:9:51034:51077	339262	0	True				
ANR	345847	AndExpression	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 )		339262	0		&&			
ANR	345848	RelationalExpression	reg1 < 8		339262	0		<			
ANR	345849	Identifier	reg1		339262	0					
ANR	345850	PrimaryExpression	8		339262	1					
ANR	345851	AndExpression	( num < 1024 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	345852	RelationalExpression	num < 1024		339262	0		<			
ANR	345853	Identifier	num		339262	0					
ANR	345854	PrimaryExpression	1024		339262	1					
ANR	345855	EqualityExpression	num % 4 == 0		339262	1		==			
ANR	345856	MultiplicativeExpression	num % 4		339262	0		%			
ANR	345857	Identifier	num		339262	0					
ANR	345858	PrimaryExpression	4		339262	1					
ANR	345859	PrimaryExpression	0		339262	1					
ANR	345860	CompoundStatement		1137:55:25221:25221	339262	1					
ANR	345861	ExpressionStatement	ao -> o = 0x0048	2430:6:51088:51102	339262	0	True				
ANR	345862	AssignmentExpression	ao -> o = 0x0048		339262	0		=			
ANR	345863	PtrMemberAccess	ao -> o		339262	0					
ANR	345864	Identifier	ao		339262	0					
ANR	345865	Identifier	o		339262	1					
ANR	345866	PrimaryExpression	0x0048		339262	1					
ANR	345867	ExpressionStatement	ao -> o |= reg1	2431:6:51110:51123	339262	1	True				
ANR	345868	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	345869	PtrMemberAccess	ao -> o		339262	0					
ANR	345870	Identifier	ao		339262	0					
ANR	345871	Identifier	o		339262	1					
ANR	345872	Identifier	reg1		339262	1					
ANR	345873	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2432:6:51131:51155	339262	2	True				
ANR	345874	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	345875	PtrMemberAccess	ao -> o		339262	0					
ANR	345876	Identifier	ao		339262	0					
ANR	345877	Identifier	o		339262	1					
ANR	345878	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	345879	ShiftExpression	num >> 2		339262	0		>>			
ANR	345880	Identifier	num		339262	0					
ANR	345881	PrimaryExpression	2		339262	1					
ANR	345882	PrimaryExpression	8		339262	1					
ANR	345883	ReturnStatement	return 2 ;	2433:6:51163:51171	339262	3	True				
ANR	345884	PrimaryExpression	2		339262	0					
ANR	345885	ExpressionStatement	ao -> o = 0x5ff80000	2435:5:51185:51203	339262	2	True				
ANR	345886	AssignmentExpression	ao -> o = 0x5ff80000		339262	0		=			
ANR	345887	PtrMemberAccess	ao -> o		339262	0					
ANR	345888	Identifier	ao		339262	0					
ANR	345889	Identifier	o		339262	1					
ANR	345890	PrimaryExpression	0x5ff80000		339262	1					
ANR	345891	IfStatement	if ( num < 0 )		339262	3					
ANR	345892	Condition	num < 0	2436:9:51214:51220	339262	0	True				
ANR	345893	RelationalExpression	num < 0		339262	0		<			
ANR	345894	Identifier	num		339262	0					
ANR	345895	PrimaryExpression	0		339262	1					
ANR	345896	CompoundStatement		1144:18:25364:25364	339262	1					
ANR	345897	ExpressionStatement	num = - num	2437:6:51231:51241	339262	0	True				
ANR	345898	AssignmentExpression	num = - num		339262	0		=			
ANR	345899	Identifier	num		339262	0					
ANR	345900	UnaryOperationExpression	- num		339262	1					
ANR	345901	UnaryOperator	-		339262	0					
ANR	345902	Identifier	num		339262	1					
ANR	345903	ElseStatement	else		339262	0					
ANR	345904	CompoundStatement		1146:12:25396:25396	339262	0					
ANR	345905	ExpressionStatement	ao -> o |= 1 << 31	2439:6:51263:51279	339262	0	True				
ANR	345906	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	345907	PtrMemberAccess	ao -> o		339262	0					
ANR	345908	Identifier	ao		339262	0					
ANR	345909	Identifier	o		339262	1					
ANR	345910	ShiftExpression	1 << 31		339262	1		<<			
ANR	345911	PrimaryExpression	1		339262	0					
ANR	345912	PrimaryExpression	31		339262	1					
ANR	345913	ExpressionStatement	ao -> o |= reg1 << 4	2441:5:51293:51311	339262	4	True				
ANR	345914	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	345915	PtrMemberAccess	ao -> o		339262	0					
ANR	345916	Identifier	ao		339262	0					
ANR	345917	Identifier	o		339262	1					
ANR	345918	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	345919	Identifier	reg1		339262	0					
ANR	345920	PrimaryExpression	4		339262	1					
ANR	345921	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2442:5:51318:51344	339262	5	True				
ANR	345922	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		339262	0		|=			
ANR	345923	PtrMemberAccess	ao -> o		339262	0					
ANR	345924	Identifier	ao		339262	0					
ANR	345925	Identifier	o		339262	1					
ANR	345926	ShiftExpression	( num & 0xff ) << 8		339262	1		<<			
ANR	345927	BitAndExpression	num & 0xff		339262	0		&			
ANR	345928	Identifier	num		339262	0					
ANR	345929	PrimaryExpression	0xff		339262	1					
ANR	345930	PrimaryExpression	8		339262	1					
ANR	345931	ExpressionStatement	ao -> o |= ( num & 0x0f00 ) >> 8	2443:5:51351:51379	339262	6	True				
ANR	345932	AssignmentExpression	ao -> o |= ( num & 0x0f00 ) >> 8		339262	0		|=			
ANR	345933	PtrMemberAccess	ao -> o		339262	0					
ANR	345934	Identifier	ao		339262	0					
ANR	345935	Identifier	o		339262	1					
ANR	345936	ShiftExpression	( num & 0x0f00 ) >> 8		339262	1		>>			
ANR	345937	BitAndExpression	num & 0x0f00		339262	0		&			
ANR	345938	Identifier	num		339262	0					
ANR	345939	PrimaryExpression	0x0f00		339262	1					
ANR	345940	PrimaryExpression	8		339262	1					
ANR	345941	ReturnStatement	return 4 ;	2444:5:51386:51394	339262	7	True				
ANR	345942	PrimaryExpression	4		339262	0					
ANR	345943	IfStatement	if ( ( reg2 == 13 ) && ( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) )		339262	2					
ANR	345944	Condition	( reg2 == 13 ) && ( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )	2446:8:51410:51504	339262	0	True				
ANR	345945	AndExpression	( reg2 == 13 ) && ( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	345946	EqualityExpression	reg2 == 13		339262	0		==			
ANR	345947	Identifier	reg2		339262	0					
ANR	345948	PrimaryExpression	13		339262	1					
ANR	345949	AndExpression	( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	345950	RelationalExpression	reg1 < 8		339262	0		<			
ANR	345951	Identifier	reg1		339262	0					
ANR	345952	PrimaryExpression	8		339262	1					
ANR	345953	AndExpression	( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	345954	RelationalExpression	num >= 0		339262	0		>=			
ANR	345955	Identifier	num		339262	0					
ANR	345956	PrimaryExpression	0		339262	1					
ANR	345957	AndExpression	( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	345958	RelationalExpression	num < 1024		339262	0		<			
ANR	345959	Identifier	num		339262	0					
ANR	345960	PrimaryExpression	1024		339262	1					
ANR	345961	AndExpression	( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	345962	EqualityExpression	num % 4 == 0		339262	0		==			
ANR	345963	MultiplicativeExpression	num % 4		339262	0		%			
ANR	345964	Identifier	num		339262	0					
ANR	345965	PrimaryExpression	4		339262	1					
ANR	345966	PrimaryExpression	0		339262	1					
ANR	345967	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	345968	UnaryOperator	!		339262	0					
ANR	345969	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	345970	Identifier	m		339262	0					
ANR	345971	Identifier	DOTW_BIT		339262	1					
ANR	345972	CompoundStatement		1154:105:25648:25648	339262	1					
ANR	345973	ExpressionStatement	ao -> o = 0x0098	2447:5:51514:51528	339262	0	True				
ANR	345974	AssignmentExpression	ao -> o = 0x0098		339262	0		=			
ANR	345975	PtrMemberAccess	ao -> o		339262	0					
ANR	345976	Identifier	ao		339262	0					
ANR	345977	Identifier	o		339262	1					
ANR	345978	PrimaryExpression	0x0098		339262	1					
ANR	345979	ExpressionStatement	ao -> o |= reg1	2448:5:51535:51548	339262	1	True				
ANR	345980	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	345981	PtrMemberAccess	ao -> o		339262	0					
ANR	345982	Identifier	ao		339262	0					
ANR	345983	Identifier	o		339262	1					
ANR	345984	Identifier	reg1		339262	1					
ANR	345985	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2449:5:51555:51579	339262	2	True				
ANR	345986	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	345987	PtrMemberAccess	ao -> o		339262	0					
ANR	345988	Identifier	ao		339262	0					
ANR	345989	Identifier	o		339262	1					
ANR	345990	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	345991	ShiftExpression	num >> 2		339262	0		>>			
ANR	345992	Identifier	num		339262	0					
ANR	345993	PrimaryExpression	2		339262	1					
ANR	345994	PrimaryExpression	8		339262	1					
ANR	345995	ReturnStatement	return 2 ;	2450:5:51586:51594	339262	3	True				
ANR	345996	PrimaryExpression	2		339262	0					
ANR	345997	IfStatement	if ( ( num >= 0 ) && ( num < 128 ) && ( num % 4 == 0 ) )		339262	3					
ANR	345998	Condition	( num >= 0 ) && ( num < 128 ) && ( num % 4 == 0 )	2452:8:51610:51652	339262	0	True				
ANR	345999	AndExpression	( num >= 0 ) && ( num < 128 ) && ( num % 4 == 0 )		339262	0		&&			
ANR	346000	RelationalExpression	num >= 0		339262	0		>=			
ANR	346001	Identifier	num		339262	0					
ANR	346002	PrimaryExpression	0		339262	1					
ANR	346003	AndExpression	( num < 128 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	346004	RelationalExpression	num < 128		339262	0		<			
ANR	346005	Identifier	num		339262	0					
ANR	346006	PrimaryExpression	128		339262	1					
ANR	346007	EqualityExpression	num % 4 == 0		339262	1		==			
ANR	346008	MultiplicativeExpression	num % 4		339262	0		%			
ANR	346009	Identifier	num		339262	0					
ANR	346010	PrimaryExpression	4		339262	1					
ANR	346011	PrimaryExpression	0		339262	1					
ANR	346012	CompoundStatement		1160:53:25796:25796	339262	1					
ANR	346013	ExpressionStatement	ao -> o = 0x0068	2453:5:51662:51676	339262	0	True				
ANR	346014	AssignmentExpression	ao -> o = 0x0068		339262	0		=			
ANR	346015	PtrMemberAccess	ao -> o		339262	0					
ANR	346016	Identifier	ao		339262	0					
ANR	346017	Identifier	o		339262	1					
ANR	346018	PrimaryExpression	0x0068		339262	1					
ANR	346019	ExpressionStatement	ao -> o |= ( num >> 4 )	2454:5:51683:51702	339262	1	True				
ANR	346020	AssignmentExpression	ao -> o |= ( num >> 4 )		339262	0		|=			
ANR	346021	PtrMemberAccess	ao -> o		339262	0					
ANR	346022	Identifier	ao		339262	0					
ANR	346023	Identifier	o		339262	1					
ANR	346024	ShiftExpression	num >> 4		339262	1		>>			
ANR	346025	Identifier	num		339262	0					
ANR	346026	PrimaryExpression	4		339262	1					
ANR	346027	ExpressionStatement	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14	2455:5:51709:51742	339262	2	True				
ANR	346028	AssignmentExpression	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14		339262	0		|=			
ANR	346029	PtrMemberAccess	ao -> o		339262	0					
ANR	346030	Identifier	ao		339262	0					
ANR	346031	Identifier	o		339262	1					
ANR	346032	ShiftExpression	( ( num >> 2 ) & 0x3 ) << 14		339262	1		<<			
ANR	346033	BitAndExpression	( num >> 2 ) & 0x3		339262	0		&			
ANR	346034	ShiftExpression	num >> 2		339262	0		>>			
ANR	346035	Identifier	num		339262	0					
ANR	346036	PrimaryExpression	2		339262	1					
ANR	346037	PrimaryExpression	0x3		339262	1					
ANR	346038	PrimaryExpression	14		339262	1					
ANR	346039	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		339262	3					
ANR	346040	Condition	"mem_16bit_2reg ( ao , m )"	2456:9:51753:51774	339262	0	True				
ANR	346041	CallExpression	"mem_16bit_2reg ( ao , m )"		339262	0					
ANR	346042	Callee	mem_16bit_2reg		339262	0					
ANR	346043	Identifier	mem_16bit_2reg		339262	0					
ANR	346044	ArgumentList	ao		339262	1					
ANR	346045	Argument	ao		339262	0					
ANR	346046	Identifier	ao		339262	0					
ANR	346047	Argument	m		339262	1					
ANR	346048	Identifier	m		339262	0					
ANR	346049	CompoundStatement		1164:33:25918:25918	339262	1					
ANR	346050	ReturnStatement	return 2 ;	2457:6:51785:51793	339262	0	True				
ANR	346051	PrimaryExpression	2		339262	0					
ANR	346052	IfStatement	if ( ( num > 4095 ) || ( num < - 1023 ) )		339262	4					
ANR	346053	Condition	( num > 4095 ) || ( num < - 1023 )	2460:8:51816:51844	339262	0	True				
ANR	346054	OrExpression	( num > 4095 ) || ( num < - 1023 )		339262	0		||			
ANR	346055	RelationalExpression	num > 4095		339262	0		>			
ANR	346056	Identifier	num		339262	0					
ANR	346057	PrimaryExpression	4095		339262	1					
ANR	346058	RelationalExpression	num < - 1023		339262	1		<			
ANR	346059	Identifier	num		339262	0					
ANR	346060	UnaryOperationExpression	- 1023		339262	1					
ANR	346061	UnaryOperator	-		339262	0					
ANR	346062	PrimaryExpression	1023		339262	1					
ANR	346063	CompoundStatement		1168:39:25988:25988	339262	1					
ANR	346064	ReturnStatement	return - 1 ;	2461:5:51854:51863	339262	0	True				
ANR	346065	UnaryOperationExpression	- 1		339262	0					
ANR	346066	UnaryOperator	-		339262	0					
ANR	346067	PrimaryExpression	1		339262	1					
ANR	346068	IfStatement	if ( num >= 0 )		339262	5					
ANR	346069	Condition	num >= 0	2463:8:51879:51886	339262	0	True				
ANR	346070	RelationalExpression	num >= 0		339262	0		>=			
ANR	346071	Identifier	num		339262	0					
ANR	346072	PrimaryExpression	0		339262	1					
ANR	346073	CompoundStatement		1171:18:26030:26030	339262	1					
ANR	346074	ExpressionStatement	ao -> o = 0xd0f80000	2464:5:51896:51914	339262	0	True				
ANR	346075	AssignmentExpression	ao -> o = 0xd0f80000		339262	0		=			
ANR	346076	PtrMemberAccess	ao -> o		339262	0					
ANR	346077	Identifier	ao		339262	0					
ANR	346078	Identifier	o		339262	1					
ANR	346079	PrimaryExpression	0xd0f80000		339262	1					
ANR	346080	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2465:5:51921:51947	339262	1	True				
ANR	346081	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		339262	0		|=			
ANR	346082	PtrMemberAccess	ao -> o		339262	0					
ANR	346083	Identifier	ao		339262	0					
ANR	346084	Identifier	o		339262	1					
ANR	346085	ShiftExpression	( num & 0xff ) << 8		339262	1		<<			
ANR	346086	BitAndExpression	num & 0xff		339262	0		&			
ANR	346087	Identifier	num		339262	0					
ANR	346088	PrimaryExpression	0xff		339262	1					
ANR	346089	PrimaryExpression	8		339262	1					
ANR	346090	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	2466:5:51954:51981	339262	2	True				
ANR	346091	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	346092	PtrMemberAccess	ao -> o		339262	0					
ANR	346093	Identifier	ao		339262	0					
ANR	346094	Identifier	o		339262	1					
ANR	346095	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	346096	BitAndExpression	num & 0xf00		339262	0		&			
ANR	346097	Identifier	num		339262	0					
ANR	346098	PrimaryExpression	0xf00		339262	1					
ANR	346099	PrimaryExpression	8		339262	1					
ANR	346100	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2467:5:51988:52017	339262	3	True				
ANR	346101	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346102	Callee	mem_32bit_2reg		339262	0					
ANR	346103	Identifier	mem_32bit_2reg		339262	0					
ANR	346104	ArgumentList	ao		339262	1					
ANR	346105	Argument	ao		339262	0					
ANR	346106	Identifier	ao		339262	0					
ANR	346107	Argument	m		339262	1					
ANR	346108	Identifier	m		339262	0					
ANR	346109	ExpressionStatement	ao -> o = 0x50f8000c	2469:4:52029:52047	339262	6	True				
ANR	346110	AssignmentExpression	ao -> o = 0x50f8000c		339262	0		=			
ANR	346111	PtrMemberAccess	ao -> o		339262	0					
ANR	346112	Identifier	ao		339262	0					
ANR	346113	Identifier	o		339262	1					
ANR	346114	PrimaryExpression	0x50f8000c		339262	1					
ANR	346115	ExpressionStatement	ao -> o |= ( - num & 0xff ) << 8	2470:4:52053:52080	339262	7	True				
ANR	346116	AssignmentExpression	ao -> o |= ( - num & 0xff ) << 8		339262	0		|=			
ANR	346117	PtrMemberAccess	ao -> o		339262	0					
ANR	346118	Identifier	ao		339262	0					
ANR	346119	Identifier	o		339262	1					
ANR	346120	ShiftExpression	( - num & 0xff ) << 8		339262	1		<<			
ANR	346121	BitAndExpression	- num & 0xff		339262	0		&			
ANR	346122	UnaryOperationExpression	- num		339262	0					
ANR	346123	UnaryOperator	-		339262	0					
ANR	346124	Identifier	num		339262	1					
ANR	346125	PrimaryExpression	0xff		339262	1					
ANR	346126	PrimaryExpression	8		339262	1					
ANR	346127	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2471:4:52086:52115	339262	8	True				
ANR	346128	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346129	Callee	mem_32bit_2reg		339262	0					
ANR	346130	Identifier	mem_32bit_2reg		339262	0					
ANR	346131	ArgumentList	ao		339262	1					
ANR	346132	Argument	ao		339262	0					
ANR	346133	Identifier	ao		339262	0					
ANR	346134	Argument	m		339262	1					
ANR	346135	Identifier	m		339262	0					
ANR	346136	ElseStatement	else		339262	0					
ANR	346137	IfStatement	if ( ldrsel == B_BIT )		339262	0					
ANR	346138	Condition	ldrsel == B_BIT	2473:7:52134:52148	339262	0	True				
ANR	346139	EqualityExpression	ldrsel == B_BIT		339262	0		==			
ANR	346140	Identifier	ldrsel		339262	0					
ANR	346141	Identifier	B_BIT		339262	1					
ANR	346142	CompoundStatement		1181:24:26292:26292	339262	1					
ANR	346143	IfStatement	if ( m & T_BIT )		339262	0					
ANR	346144	Condition	m & T_BIT	2474:8:52161:52169	339262	0	True				
ANR	346145	BitAndExpression	m & T_BIT		339262	0		&			
ANR	346146	Identifier	m		339262	0					
ANR	346147	Identifier	T_BIT		339262	1					
ANR	346148	CompoundStatement		1182:19:26313:26313	339262	1					
ANR	346149	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		339262	0					
ANR	346150	Condition	( num < 0 ) || ( num > 255 )	2475:9:52183:52206	339262	0	True				
ANR	346151	OrExpression	( num < 0 ) || ( num > 255 )		339262	0		||			
ANR	346152	RelationalExpression	num < 0		339262	0		<			
ANR	346153	Identifier	num		339262	0					
ANR	346154	PrimaryExpression	0		339262	1					
ANR	346155	RelationalExpression	num > 255		339262	1		>			
ANR	346156	Identifier	num		339262	0					
ANR	346157	PrimaryExpression	255		339262	1					
ANR	346158	CompoundStatement		1183:35:26350:26350	339262	1					
ANR	346159	ReturnStatement	return - 1 ;	2476:6:52217:52226	339262	0	True				
ANR	346160	UnaryOperationExpression	- 1		339262	0					
ANR	346161	UnaryOperator	-		339262	0					
ANR	346162	PrimaryExpression	1		339262	1					
ANR	346163	ExpressionStatement	ao -> o = 0x10f8000e	2478:5:52240:52258	339262	1	True				
ANR	346164	AssignmentExpression	ao -> o = 0x10f8000e		339262	0		=			
ANR	346165	PtrMemberAccess	ao -> o		339262	0					
ANR	346166	Identifier	ao		339262	0					
ANR	346167	Identifier	o		339262	1					
ANR	346168	PrimaryExpression	0x10f8000e		339262	1					
ANR	346169	IfStatement	if ( m & S_BIT )		339262	2					
ANR	346170	Condition	m & S_BIT	2479:9:52269:52277	339262	0	True				
ANR	346171	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346172	Identifier	m		339262	0					
ANR	346173	Identifier	S_BIT		339262	1					
ANR	346174	CompoundStatement		1187:20:26421:26421	339262	1					
ANR	346175	ExpressionStatement	ao -> o |= 1 << 16	2480:6:52288:52304	339262	0	True				
ANR	346176	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346177	PtrMemberAccess	ao -> o		339262	0					
ANR	346178	Identifier	ao		339262	0					
ANR	346179	Identifier	o		339262	1					
ANR	346180	ShiftExpression	1 << 16		339262	1		<<			
ANR	346181	PrimaryExpression	1		339262	0					
ANR	346182	PrimaryExpression	16		339262	1					
ANR	346183	ExpressionStatement	ao -> o |= num << 8	2482:5:52318:52335	339262	3	True				
ANR	346184	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	346185	PtrMemberAccess	ao -> o		339262	0					
ANR	346186	Identifier	ao		339262	0					
ANR	346187	Identifier	o		339262	1					
ANR	346188	ShiftExpression	num << 8		339262	1		<<			
ANR	346189	Identifier	num		339262	0					
ANR	346190	PrimaryExpression	8		339262	1					
ANR	346191	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2483:5:52342:52371	339262	4	True				
ANR	346192	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346193	Callee	mem_32bit_2reg		339262	0					
ANR	346194	Identifier	mem_32bit_2reg		339262	0					
ANR	346195	ArgumentList	ao		339262	1					
ANR	346196	Argument	ao		339262	0					
ANR	346197	Identifier	ao		339262	0					
ANR	346198	Argument	m		339262	1					
ANR	346199	Identifier	m		339262	0					
ANR	346200	IfStatement	if ( reg2 == 15 )		339262	1					
ANR	346201	Condition	reg2 == 15	2485:8:52387:52396	339262	0	True				
ANR	346202	EqualityExpression	reg2 == 15		339262	0		==			
ANR	346203	Identifier	reg2		339262	0					
ANR	346204	PrimaryExpression	15		339262	1					
ANR	346205	CompoundStatement		1193:20:26540:26540	339262	1					
ANR	346206	IfStatement	if ( ( num > 4095 ) || ( num < - 4095 ) )		339262	0					
ANR	346207	Condition	( num > 4095 ) || ( num < - 4095 )	2486:9:52410:52438	339262	0	True				
ANR	346208	OrExpression	( num > 4095 ) || ( num < - 4095 )		339262	0		||			
ANR	346209	RelationalExpression	num > 4095		339262	0		>			
ANR	346210	Identifier	num		339262	0					
ANR	346211	PrimaryExpression	4095		339262	1					
ANR	346212	RelationalExpression	num < - 4095		339262	1		<			
ANR	346213	Identifier	num		339262	0					
ANR	346214	UnaryOperationExpression	- 4095		339262	1					
ANR	346215	UnaryOperator	-		339262	0					
ANR	346216	PrimaryExpression	4095		339262	1					
ANR	346217	CompoundStatement		1194:40:26582:26582	339262	1					
ANR	346218	ReturnStatement	return - 1 ;	2487:6:52449:52458	339262	0	True				
ANR	346219	UnaryOperationExpression	- 1		339262	0					
ANR	346220	UnaryOperator	-		339262	0					
ANR	346221	PrimaryExpression	1		339262	1					
ANR	346222	ExpressionStatement	ao -> o = 0x1ff80000	2489:5:52472:52490	339262	1	True				
ANR	346223	AssignmentExpression	ao -> o = 0x1ff80000		339262	0		=			
ANR	346224	PtrMemberAccess	ao -> o		339262	0					
ANR	346225	Identifier	ao		339262	0					
ANR	346226	Identifier	o		339262	1					
ANR	346227	PrimaryExpression	0x1ff80000		339262	1					
ANR	346228	IfStatement	if ( m & S_BIT )		339262	2					
ANR	346229	Condition	m & S_BIT	2490:9:52501:52509	339262	0	True				
ANR	346230	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346231	Identifier	m		339262	0					
ANR	346232	Identifier	S_BIT		339262	1					
ANR	346233	CompoundStatement		1198:20:26653:26653	339262	1					
ANR	346234	ExpressionStatement	ao -> o |= 1 << 16	2491:6:52520:52536	339262	0	True				
ANR	346235	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346236	PtrMemberAccess	ao -> o		339262	0					
ANR	346237	Identifier	ao		339262	0					
ANR	346238	Identifier	o		339262	1					
ANR	346239	ShiftExpression	1 << 16		339262	1		<<			
ANR	346240	PrimaryExpression	1		339262	0					
ANR	346241	PrimaryExpression	16		339262	1					
ANR	346242	IfStatement	if ( num < 0 )		339262	3					
ANR	346243	Condition	num < 0	2493:9:52554:52560	339262	0	True				
ANR	346244	RelationalExpression	num < 0		339262	0		<			
ANR	346245	Identifier	num		339262	0					
ANR	346246	PrimaryExpression	0		339262	1					
ANR	346247	CompoundStatement		1201:18:26704:26704	339262	1					
ANR	346248	ExpressionStatement	num = - num	2494:6:52571:52581	339262	0	True				
ANR	346249	AssignmentExpression	num = - num		339262	0		=			
ANR	346250	Identifier	num		339262	0					
ANR	346251	UnaryOperationExpression	- num		339262	1					
ANR	346252	UnaryOperator	-		339262	0					
ANR	346253	Identifier	num		339262	1					
ANR	346254	ElseStatement	else		339262	0					
ANR	346255	CompoundStatement		1203:12:26736:26736	339262	0					
ANR	346256	ExpressionStatement	ao -> o |= 1 << 31	2496:6:52603:52619	339262	0	True				
ANR	346257	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	346258	PtrMemberAccess	ao -> o		339262	0					
ANR	346259	Identifier	ao		339262	0					
ANR	346260	Identifier	o		339262	1					
ANR	346261	ShiftExpression	1 << 31		339262	1		<<			
ANR	346262	PrimaryExpression	1		339262	0					
ANR	346263	PrimaryExpression	31		339262	1					
ANR	346264	ExpressionStatement	ao -> o |= reg1 << 4	2498:5:52633:52651	339262	4	True				
ANR	346265	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	346266	PtrMemberAccess	ao -> o		339262	0					
ANR	346267	Identifier	ao		339262	0					
ANR	346268	Identifier	o		339262	1					
ANR	346269	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	346270	Identifier	reg1		339262	0					
ANR	346271	PrimaryExpression	4		339262	1					
ANR	346272	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2499:5:52658:52684	339262	5	True				
ANR	346273	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		339262	0		|=			
ANR	346274	PtrMemberAccess	ao -> o		339262	0					
ANR	346275	Identifier	ao		339262	0					
ANR	346276	Identifier	o		339262	1					
ANR	346277	ShiftExpression	( num & 0xff ) << 8		339262	1		<<			
ANR	346278	BitAndExpression	num & 0xff		339262	0		&			
ANR	346279	Identifier	num		339262	0					
ANR	346280	PrimaryExpression	0xff		339262	1					
ANR	346281	PrimaryExpression	8		339262	1					
ANR	346282	ExpressionStatement	ao -> o |= ( num & 0x0f00 ) >> 8	2500:5:52691:52719	339262	6	True				
ANR	346283	AssignmentExpression	ao -> o |= ( num & 0x0f00 ) >> 8		339262	0		|=			
ANR	346284	PtrMemberAccess	ao -> o		339262	0					
ANR	346285	Identifier	ao		339262	0					
ANR	346286	Identifier	o		339262	1					
ANR	346287	ShiftExpression	( num & 0x0f00 ) >> 8		339262	1		>>			
ANR	346288	BitAndExpression	num & 0x0f00		339262	0		&			
ANR	346289	Identifier	num		339262	0					
ANR	346290	PrimaryExpression	0x0f00		339262	1					
ANR	346291	PrimaryExpression	8		339262	1					
ANR	346292	ReturnStatement	return 4 ;	2501:5:52726:52734	339262	7	True				
ANR	346293	PrimaryExpression	4		339262	0					
ANR	346294	IfStatement	if ( ( num >= 0 ) && ( num < 32 ) && ( ! ( m & S_BIT ) ) )		339262	2					
ANR	346295	Condition	( num >= 0 ) && ( num < 32 ) && ( ! ( m & S_BIT ) )	2503:8:52750:52791	339262	0	True				
ANR	346296	AndExpression	( num >= 0 ) && ( num < 32 ) && ( ! ( m & S_BIT ) )		339262	0		&&			
ANR	346297	RelationalExpression	num >= 0		339262	0		>=			
ANR	346298	Identifier	num		339262	0					
ANR	346299	PrimaryExpression	0		339262	1					
ANR	346300	AndExpression	( num < 32 ) && ( ! ( m & S_BIT ) )		339262	1		&&			
ANR	346301	RelationalExpression	num < 32		339262	0		<			
ANR	346302	Identifier	num		339262	0					
ANR	346303	PrimaryExpression	32		339262	1					
ANR	346304	UnaryOperationExpression	! ( m & S_BIT )		339262	1					
ANR	346305	UnaryOperator	!		339262	0					
ANR	346306	BitAndExpression	m & S_BIT		339262	1		&			
ANR	346307	Identifier	m		339262	0					
ANR	346308	Identifier	S_BIT		339262	1					
ANR	346309	CompoundStatement		1211:52:26935:26935	339262	1					
ANR	346310	ExpressionStatement	ao -> o = 0x0078	2504:5:52801:52815	339262	0	True				
ANR	346311	AssignmentExpression	ao -> o = 0x0078		339262	0		=			
ANR	346312	PtrMemberAccess	ao -> o		339262	0					
ANR	346313	Identifier	ao		339262	0					
ANR	346314	Identifier	o		339262	1					
ANR	346315	PrimaryExpression	0x0078		339262	1					
ANR	346316	ExpressionStatement	ao -> o |= ( num >> 2 )	2505:5:52822:52841	339262	1	True				
ANR	346317	AssignmentExpression	ao -> o |= ( num >> 2 )		339262	0		|=			
ANR	346318	PtrMemberAccess	ao -> o		339262	0					
ANR	346319	Identifier	ao		339262	0					
ANR	346320	Identifier	o		339262	1					
ANR	346321	ShiftExpression	num >> 2		339262	1		>>			
ANR	346322	Identifier	num		339262	0					
ANR	346323	PrimaryExpression	2		339262	1					
ANR	346324	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	2506:5:52848:52874	339262	2	True				
ANR	346325	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	346326	PtrMemberAccess	ao -> o		339262	0					
ANR	346327	Identifier	ao		339262	0					
ANR	346328	Identifier	o		339262	1					
ANR	346329	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	346330	BitAndExpression	num & 0x3		339262	0		&			
ANR	346331	Identifier	num		339262	0					
ANR	346332	PrimaryExpression	0x3		339262	1					
ANR	346333	PrimaryExpression	14		339262	1					
ANR	346334	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		339262	3					
ANR	346335	Condition	"mem_16bit_2reg ( ao , m )"	2507:9:52885:52906	339262	0	True				
ANR	346336	CallExpression	"mem_16bit_2reg ( ao , m )"		339262	0					
ANR	346337	Callee	mem_16bit_2reg		339262	0					
ANR	346338	Identifier	mem_16bit_2reg		339262	0					
ANR	346339	ArgumentList	ao		339262	1					
ANR	346340	Argument	ao		339262	0					
ANR	346341	Identifier	ao		339262	0					
ANR	346342	Argument	m		339262	1					
ANR	346343	Identifier	m		339262	0					
ANR	346344	CompoundStatement		1215:33:27050:27050	339262	1					
ANR	346345	ReturnStatement	return 2 ;	2508:6:52917:52925	339262	0	True				
ANR	346346	PrimaryExpression	2		339262	0					
ANR	346347	IfStatement	if ( ( num > 4095 ) || ( num < - 255 ) )		339262	3					
ANR	346348	Condition	( num > 4095 ) || ( num < - 255 )	2511:8:52948:52975	339262	0	True				
ANR	346349	OrExpression	( num > 4095 ) || ( num < - 255 )		339262	0		||			
ANR	346350	RelationalExpression	num > 4095		339262	0		>			
ANR	346351	Identifier	num		339262	0					
ANR	346352	PrimaryExpression	4095		339262	1					
ANR	346353	RelationalExpression	num < - 255		339262	1		<			
ANR	346354	Identifier	num		339262	0					
ANR	346355	UnaryOperationExpression	- 255		339262	1					
ANR	346356	UnaryOperator	-		339262	0					
ANR	346357	PrimaryExpression	255		339262	1					
ANR	346358	CompoundStatement		1219:38:27119:27119	339262	1					
ANR	346359	ReturnStatement	return - 1 ;	2512:5:52985:52994	339262	0	True				
ANR	346360	UnaryOperationExpression	- 1		339262	0					
ANR	346361	UnaryOperator	-		339262	0					
ANR	346362	PrimaryExpression	1		339262	1					
ANR	346363	IfStatement	if ( num >= 0 )		339262	4					
ANR	346364	Condition	num >= 0	2514:8:53010:53017	339262	0	True				
ANR	346365	RelationalExpression	num >= 0		339262	0		>=			
ANR	346366	Identifier	num		339262	0					
ANR	346367	PrimaryExpression	0		339262	1					
ANR	346368	CompoundStatement		1222:18:27161:27161	339262	1					
ANR	346369	ExpressionStatement	ao -> o = 0x90f80000	2515:5:53027:53045	339262	0	True				
ANR	346370	AssignmentExpression	ao -> o = 0x90f80000		339262	0		=			
ANR	346371	PtrMemberAccess	ao -> o		339262	0					
ANR	346372	Identifier	ao		339262	0					
ANR	346373	Identifier	o		339262	1					
ANR	346374	PrimaryExpression	0x90f80000		339262	1					
ANR	346375	IfStatement	if ( m & S_BIT )		339262	1					
ANR	346376	Condition	m & S_BIT	2516:9:53056:53064	339262	0	True				
ANR	346377	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346378	Identifier	m		339262	0					
ANR	346379	Identifier	S_BIT		339262	1					
ANR	346380	CompoundStatement		1224:20:27208:27208	339262	1					
ANR	346381	ExpressionStatement	ao -> o |= 1 << 16	2517:6:53075:53091	339262	0	True				
ANR	346382	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346383	PtrMemberAccess	ao -> o		339262	0					
ANR	346384	Identifier	ao		339262	0					
ANR	346385	Identifier	o		339262	1					
ANR	346386	ShiftExpression	1 << 16		339262	1		<<			
ANR	346387	PrimaryExpression	1		339262	0					
ANR	346388	PrimaryExpression	16		339262	1					
ANR	346389	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2519:5:53105:53131	339262	2	True				
ANR	346390	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		339262	0		|=			
ANR	346391	PtrMemberAccess	ao -> o		339262	0					
ANR	346392	Identifier	ao		339262	0					
ANR	346393	Identifier	o		339262	1					
ANR	346394	ShiftExpression	( num & 0xff ) << 8		339262	1		<<			
ANR	346395	BitAndExpression	num & 0xff		339262	0		&			
ANR	346396	Identifier	num		339262	0					
ANR	346397	PrimaryExpression	0xff		339262	1					
ANR	346398	PrimaryExpression	8		339262	1					
ANR	346399	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	2520:5:53138:53165	339262	3	True				
ANR	346400	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	346401	PtrMemberAccess	ao -> o		339262	0					
ANR	346402	Identifier	ao		339262	0					
ANR	346403	Identifier	o		339262	1					
ANR	346404	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	346405	BitAndExpression	num & 0xf00		339262	0		&			
ANR	346406	Identifier	num		339262	0					
ANR	346407	PrimaryExpression	0xf00		339262	1					
ANR	346408	PrimaryExpression	8		339262	1					
ANR	346409	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2521:5:53172:53201	339262	4	True				
ANR	346410	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346411	Callee	mem_32bit_2reg		339262	0					
ANR	346412	Identifier	mem_32bit_2reg		339262	0					
ANR	346413	ArgumentList	ao		339262	1					
ANR	346414	Argument	ao		339262	0					
ANR	346415	Identifier	ao		339262	0					
ANR	346416	Argument	m		339262	1					
ANR	346417	Identifier	m		339262	0					
ANR	346418	ExpressionStatement	ao -> o = 0x10f8000c	2523:4:53213:53231	339262	5	True				
ANR	346419	AssignmentExpression	ao -> o = 0x10f8000c		339262	0		=			
ANR	346420	PtrMemberAccess	ao -> o		339262	0					
ANR	346421	Identifier	ao		339262	0					
ANR	346422	Identifier	o		339262	1					
ANR	346423	PrimaryExpression	0x10f8000c		339262	1					
ANR	346424	IfStatement	if ( m & S_BIT )		339262	6					
ANR	346425	Condition	m & S_BIT	2524:8:53241:53249	339262	0	True				
ANR	346426	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346427	Identifier	m		339262	0					
ANR	346428	Identifier	S_BIT		339262	1					
ANR	346429	CompoundStatement		1232:19:27393:27393	339262	1					
ANR	346430	ExpressionStatement	ao -> o |= 1 << 16	2525:5:53259:53275	339262	0	True				
ANR	346431	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346432	PtrMemberAccess	ao -> o		339262	0					
ANR	346433	Identifier	ao		339262	0					
ANR	346434	Identifier	o		339262	1					
ANR	346435	ShiftExpression	1 << 16		339262	1		<<			
ANR	346436	PrimaryExpression	1		339262	0					
ANR	346437	PrimaryExpression	16		339262	1					
ANR	346438	ExpressionStatement	ao -> o |= - num << 8	2527:4:53287:53305	339262	7	True				
ANR	346439	AssignmentExpression	ao -> o |= - num << 8		339262	0		|=			
ANR	346440	PtrMemberAccess	ao -> o		339262	0					
ANR	346441	Identifier	ao		339262	0					
ANR	346442	Identifier	o		339262	1					
ANR	346443	ShiftExpression	- num << 8		339262	1		<<			
ANR	346444	UnaryOperationExpression	- num		339262	0					
ANR	346445	UnaryOperator	-		339262	0					
ANR	346446	Identifier	num		339262	1					
ANR	346447	PrimaryExpression	8		339262	1					
ANR	346448	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2528:4:53311:53340	339262	8	True				
ANR	346449	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346450	Callee	mem_32bit_2reg		339262	0					
ANR	346451	Identifier	mem_32bit_2reg		339262	0					
ANR	346452	ArgumentList	ao		339262	1					
ANR	346453	Argument	ao		339262	0					
ANR	346454	Identifier	ao		339262	0					
ANR	346455	Argument	m		339262	1					
ANR	346456	Identifier	m		339262	0					
ANR	346457	ElseStatement	else		339262	0					
ANR	346458	IfStatement	if ( ldrsel == H_BIT )		339262	0					
ANR	346459	Condition	ldrsel == H_BIT	2530:7:53359:53373	339262	0	True				
ANR	346460	EqualityExpression	ldrsel == H_BIT		339262	0		==			
ANR	346461	Identifier	ldrsel		339262	0					
ANR	346462	Identifier	H_BIT		339262	1					
ANR	346463	CompoundStatement		1238:24:27517:27517	339262	1					
ANR	346464	IfStatement	if ( m & T_BIT )		339262	0					
ANR	346465	Condition	m & T_BIT	2531:8:53386:53394	339262	0	True				
ANR	346466	BitAndExpression	m & T_BIT		339262	0		&			
ANR	346467	Identifier	m		339262	0					
ANR	346468	Identifier	T_BIT		339262	1					
ANR	346469	CompoundStatement		1239:19:27538:27538	339262	1					
ANR	346470	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		339262	0					
ANR	346471	Condition	( num < 0 ) || ( num > 255 )	2532:9:53408:53431	339262	0	True				
ANR	346472	OrExpression	( num < 0 ) || ( num > 255 )		339262	0		||			
ANR	346473	RelationalExpression	num < 0		339262	0		<			
ANR	346474	Identifier	num		339262	0					
ANR	346475	PrimaryExpression	0		339262	1					
ANR	346476	RelationalExpression	num > 255		339262	1		>			
ANR	346477	Identifier	num		339262	0					
ANR	346478	PrimaryExpression	255		339262	1					
ANR	346479	CompoundStatement		1240:35:27575:27575	339262	1					
ANR	346480	ReturnStatement	return - 1 ;	2533:6:53442:53451	339262	0	True				
ANR	346481	UnaryOperationExpression	- 1		339262	0					
ANR	346482	UnaryOperator	-		339262	0					
ANR	346483	PrimaryExpression	1		339262	1					
ANR	346484	ExpressionStatement	ao -> o = 0x30f8000e	2535:5:53465:53483	339262	1	True				
ANR	346485	AssignmentExpression	ao -> o = 0x30f8000e		339262	0		=			
ANR	346486	PtrMemberAccess	ao -> o		339262	0					
ANR	346487	Identifier	ao		339262	0					
ANR	346488	Identifier	o		339262	1					
ANR	346489	PrimaryExpression	0x30f8000e		339262	1					
ANR	346490	IfStatement	if ( m & S_BIT )		339262	2					
ANR	346491	Condition	m & S_BIT	2536:9:53494:53502	339262	0	True				
ANR	346492	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346493	Identifier	m		339262	0					
ANR	346494	Identifier	S_BIT		339262	1					
ANR	346495	CompoundStatement		1244:20:27646:27646	339262	1					
ANR	346496	ExpressionStatement	ao -> o |= 1 << 16	2537:6:53513:53529	339262	0	True				
ANR	346497	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346498	PtrMemberAccess	ao -> o		339262	0					
ANR	346499	Identifier	ao		339262	0					
ANR	346500	Identifier	o		339262	1					
ANR	346501	ShiftExpression	1 << 16		339262	1		<<			
ANR	346502	PrimaryExpression	1		339262	0					
ANR	346503	PrimaryExpression	16		339262	1					
ANR	346504	ExpressionStatement	ao -> o |= num << 8	2539:5:53543:53560	339262	3	True				
ANR	346505	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	346506	PtrMemberAccess	ao -> o		339262	0					
ANR	346507	Identifier	ao		339262	0					
ANR	346508	Identifier	o		339262	1					
ANR	346509	ShiftExpression	num << 8		339262	1		<<			
ANR	346510	Identifier	num		339262	0					
ANR	346511	PrimaryExpression	8		339262	1					
ANR	346512	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2540:5:53567:53596	339262	4	True				
ANR	346513	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346514	Callee	mem_32bit_2reg		339262	0					
ANR	346515	Identifier	mem_32bit_2reg		339262	0					
ANR	346516	ArgumentList	ao		339262	1					
ANR	346517	Argument	ao		339262	0					
ANR	346518	Identifier	ao		339262	0					
ANR	346519	Argument	m		339262	1					
ANR	346520	Identifier	m		339262	0					
ANR	346521	IfStatement	if ( reg2 == 15 )		339262	1					
ANR	346522	Condition	reg2 == 15	2542:8:53612:53621	339262	0	True				
ANR	346523	EqualityExpression	reg2 == 15		339262	0		==			
ANR	346524	Identifier	reg2		339262	0					
ANR	346525	PrimaryExpression	15		339262	1					
ANR	346526	CompoundStatement		1250:20:27765:27765	339262	1					
ANR	346527	IfStatement	if ( ( num > 4095 ) || ( num < - 4095 ) )		339262	0					
ANR	346528	Condition	( num > 4095 ) || ( num < - 4095 )	2543:9:53635:53663	339262	0	True				
ANR	346529	OrExpression	( num > 4095 ) || ( num < - 4095 )		339262	0		||			
ANR	346530	RelationalExpression	num > 4095		339262	0		>			
ANR	346531	Identifier	num		339262	0					
ANR	346532	PrimaryExpression	4095		339262	1					
ANR	346533	RelationalExpression	num < - 4095		339262	1		<			
ANR	346534	Identifier	num		339262	0					
ANR	346535	UnaryOperationExpression	- 4095		339262	1					
ANR	346536	UnaryOperator	-		339262	0					
ANR	346537	PrimaryExpression	4095		339262	1					
ANR	346538	CompoundStatement		1251:40:27807:27807	339262	1					
ANR	346539	ReturnStatement	return - 1 ;	2544:6:53674:53683	339262	0	True				
ANR	346540	UnaryOperationExpression	- 1		339262	0					
ANR	346541	UnaryOperator	-		339262	0					
ANR	346542	PrimaryExpression	1		339262	1					
ANR	346543	ExpressionStatement	ao -> o = 0x3ff80000	2546:5:53697:53715	339262	1	True				
ANR	346544	AssignmentExpression	ao -> o = 0x3ff80000		339262	0		=			
ANR	346545	PtrMemberAccess	ao -> o		339262	0					
ANR	346546	Identifier	ao		339262	0					
ANR	346547	Identifier	o		339262	1					
ANR	346548	PrimaryExpression	0x3ff80000		339262	1					
ANR	346549	IfStatement	if ( m & S_BIT )		339262	2					
ANR	346550	Condition	m & S_BIT	2547:9:53726:53734	339262	0	True				
ANR	346551	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346552	Identifier	m		339262	0					
ANR	346553	Identifier	S_BIT		339262	1					
ANR	346554	CompoundStatement		1255:20:27878:27878	339262	1					
ANR	346555	ExpressionStatement	ao -> o |= 1 << 16	2548:6:53745:53761	339262	0	True				
ANR	346556	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346557	PtrMemberAccess	ao -> o		339262	0					
ANR	346558	Identifier	ao		339262	0					
ANR	346559	Identifier	o		339262	1					
ANR	346560	ShiftExpression	1 << 16		339262	1		<<			
ANR	346561	PrimaryExpression	1		339262	0					
ANR	346562	PrimaryExpression	16		339262	1					
ANR	346563	IfStatement	if ( num < 0 )		339262	3					
ANR	346564	Condition	num < 0	2550:9:53779:53785	339262	0	True				
ANR	346565	RelationalExpression	num < 0		339262	0		<			
ANR	346566	Identifier	num		339262	0					
ANR	346567	PrimaryExpression	0		339262	1					
ANR	346568	CompoundStatement		1258:18:27929:27929	339262	1					
ANR	346569	ExpressionStatement	num = - num	2551:6:53796:53806	339262	0	True				
ANR	346570	AssignmentExpression	num = - num		339262	0		=			
ANR	346571	Identifier	num		339262	0					
ANR	346572	UnaryOperationExpression	- num		339262	1					
ANR	346573	UnaryOperator	-		339262	0					
ANR	346574	Identifier	num		339262	1					
ANR	346575	ElseStatement	else		339262	0					
ANR	346576	CompoundStatement		1260:12:27961:27961	339262	0					
ANR	346577	ExpressionStatement	ao -> o |= 1 << 31	2553:6:53828:53844	339262	0	True				
ANR	346578	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	346579	PtrMemberAccess	ao -> o		339262	0					
ANR	346580	Identifier	ao		339262	0					
ANR	346581	Identifier	o		339262	1					
ANR	346582	ShiftExpression	1 << 31		339262	1		<<			
ANR	346583	PrimaryExpression	1		339262	0					
ANR	346584	PrimaryExpression	31		339262	1					
ANR	346585	ExpressionStatement	ao -> o |= reg1 << 4	2555:5:53858:53876	339262	4	True				
ANR	346586	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	346587	PtrMemberAccess	ao -> o		339262	0					
ANR	346588	Identifier	ao		339262	0					
ANR	346589	Identifier	o		339262	1					
ANR	346590	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	346591	Identifier	reg1		339262	0					
ANR	346592	PrimaryExpression	4		339262	1					
ANR	346593	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2556:5:53883:53909	339262	5	True				
ANR	346594	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		339262	0		|=			
ANR	346595	PtrMemberAccess	ao -> o		339262	0					
ANR	346596	Identifier	ao		339262	0					
ANR	346597	Identifier	o		339262	1					
ANR	346598	ShiftExpression	( num & 0xff ) << 8		339262	1		<<			
ANR	346599	BitAndExpression	num & 0xff		339262	0		&			
ANR	346600	Identifier	num		339262	0					
ANR	346601	PrimaryExpression	0xff		339262	1					
ANR	346602	PrimaryExpression	8		339262	1					
ANR	346603	ExpressionStatement	ao -> o |= ( num & 0x0f00 ) >> 8	2557:5:53916:53944	339262	6	True				
ANR	346604	AssignmentExpression	ao -> o |= ( num & 0x0f00 ) >> 8		339262	0		|=			
ANR	346605	PtrMemberAccess	ao -> o		339262	0					
ANR	346606	Identifier	ao		339262	0					
ANR	346607	Identifier	o		339262	1					
ANR	346608	ShiftExpression	( num & 0x0f00 ) >> 8		339262	1		>>			
ANR	346609	BitAndExpression	num & 0x0f00		339262	0		&			
ANR	346610	Identifier	num		339262	0					
ANR	346611	PrimaryExpression	0x0f00		339262	1					
ANR	346612	PrimaryExpression	8		339262	1					
ANR	346613	ReturnStatement	return 4 ;	2558:5:53951:53959	339262	7	True				
ANR	346614	PrimaryExpression	4		339262	0					
ANR	346615	IfStatement	if ( ( num >= 0 ) && ( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) ) )		339262	2					
ANR	346616	Condition	( num >= 0 ) && ( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) )	2560:8:53975:54034	339262	0	True				
ANR	346617	AndExpression	( num >= 0 ) && ( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) )		339262	0		&&			
ANR	346618	RelationalExpression	num >= 0		339262	0		>=			
ANR	346619	Identifier	num		339262	0					
ANR	346620	PrimaryExpression	0		339262	1					
ANR	346621	AndExpression	( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) )		339262	1		&&			
ANR	346622	RelationalExpression	num < 64		339262	0		<			
ANR	346623	Identifier	num		339262	0					
ANR	346624	PrimaryExpression	64		339262	1					
ANR	346625	AndExpression	( num % 2 == 0 ) && ( ! ( m & S_BIT ) )		339262	1		&&			
ANR	346626	EqualityExpression	num % 2 == 0		339262	0		==			
ANR	346627	MultiplicativeExpression	num % 2		339262	0		%			
ANR	346628	Identifier	num		339262	0					
ANR	346629	PrimaryExpression	2		339262	1					
ANR	346630	PrimaryExpression	0		339262	1					
ANR	346631	UnaryOperationExpression	! ( m & S_BIT )		339262	1					
ANR	346632	UnaryOperator	!		339262	0					
ANR	346633	BitAndExpression	m & S_BIT		339262	1		&			
ANR	346634	Identifier	m		339262	0					
ANR	346635	Identifier	S_BIT		339262	1					
ANR	346636	CompoundStatement		1268:70:28178:28178	339262	1					
ANR	346637	ExpressionStatement	ao -> o = 0x0088	2561:5:54044:54058	339262	0	True				
ANR	346638	AssignmentExpression	ao -> o = 0x0088		339262	0		=			
ANR	346639	PtrMemberAccess	ao -> o		339262	0					
ANR	346640	Identifier	ao		339262	0					
ANR	346641	Identifier	o		339262	1					
ANR	346642	PrimaryExpression	0x0088		339262	1					
ANR	346643	ExpressionStatement	ao -> o |= ( num >> 3 )	2562:5:54065:54084	339262	1	True				
ANR	346644	AssignmentExpression	ao -> o |= ( num >> 3 )		339262	0		|=			
ANR	346645	PtrMemberAccess	ao -> o		339262	0					
ANR	346646	Identifier	ao		339262	0					
ANR	346647	Identifier	o		339262	1					
ANR	346648	ShiftExpression	num >> 3		339262	1		>>			
ANR	346649	Identifier	num		339262	0					
ANR	346650	PrimaryExpression	3		339262	1					
ANR	346651	ExpressionStatement	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14	2563:5:54091:54124	339262	2	True				
ANR	346652	AssignmentExpression	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14		339262	0		|=			
ANR	346653	PtrMemberAccess	ao -> o		339262	0					
ANR	346654	Identifier	ao		339262	0					
ANR	346655	Identifier	o		339262	1					
ANR	346656	ShiftExpression	( ( num >> 1 ) & 0x3 ) << 14		339262	1		<<			
ANR	346657	BitAndExpression	( num >> 1 ) & 0x3		339262	0		&			
ANR	346658	ShiftExpression	num >> 1		339262	0		>>			
ANR	346659	Identifier	num		339262	0					
ANR	346660	PrimaryExpression	1		339262	1					
ANR	346661	PrimaryExpression	0x3		339262	1					
ANR	346662	PrimaryExpression	14		339262	1					
ANR	346663	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		339262	3					
ANR	346664	Condition	"mem_16bit_2reg ( ao , m )"	2564:9:54135:54156	339262	0	True				
ANR	346665	CallExpression	"mem_16bit_2reg ( ao , m )"		339262	0					
ANR	346666	Callee	mem_16bit_2reg		339262	0					
ANR	346667	Identifier	mem_16bit_2reg		339262	0					
ANR	346668	ArgumentList	ao		339262	1					
ANR	346669	Argument	ao		339262	0					
ANR	346670	Identifier	ao		339262	0					
ANR	346671	Argument	m		339262	1					
ANR	346672	Identifier	m		339262	0					
ANR	346673	CompoundStatement		1272:33:28300:28300	339262	1					
ANR	346674	ReturnStatement	return 2 ;	2565:6:54167:54175	339262	0	True				
ANR	346675	PrimaryExpression	2		339262	0					
ANR	346676	IfStatement	if ( ( num > 4095 ) || ( num < - 255 ) )		339262	3					
ANR	346677	Condition	( num > 4095 ) || ( num < - 255 )	2568:8:54198:54225	339262	0	True				
ANR	346678	OrExpression	( num > 4095 ) || ( num < - 255 )		339262	0		||			
ANR	346679	RelationalExpression	num > 4095		339262	0		>			
ANR	346680	Identifier	num		339262	0					
ANR	346681	PrimaryExpression	4095		339262	1					
ANR	346682	RelationalExpression	num < - 255		339262	1		<			
ANR	346683	Identifier	num		339262	0					
ANR	346684	UnaryOperationExpression	- 255		339262	1					
ANR	346685	UnaryOperator	-		339262	0					
ANR	346686	PrimaryExpression	255		339262	1					
ANR	346687	CompoundStatement		1276:38:28369:28369	339262	1					
ANR	346688	ReturnStatement	return - 1 ;	2569:5:54235:54244	339262	0	True				
ANR	346689	UnaryOperationExpression	- 1		339262	0					
ANR	346690	UnaryOperator	-		339262	0					
ANR	346691	PrimaryExpression	1		339262	1					
ANR	346692	IfStatement	if ( num >= 0 )		339262	4					
ANR	346693	Condition	num >= 0	2571:8:54260:54267	339262	0	True				
ANR	346694	RelationalExpression	num >= 0		339262	0		>=			
ANR	346695	Identifier	num		339262	0					
ANR	346696	PrimaryExpression	0		339262	1					
ANR	346697	CompoundStatement		1279:18:28411:28411	339262	1					
ANR	346698	ExpressionStatement	ao -> o = 0xb0f80000	2572:5:54277:54295	339262	0	True				
ANR	346699	AssignmentExpression	ao -> o = 0xb0f80000		339262	0		=			
ANR	346700	PtrMemberAccess	ao -> o		339262	0					
ANR	346701	Identifier	ao		339262	0					
ANR	346702	Identifier	o		339262	1					
ANR	346703	PrimaryExpression	0xb0f80000		339262	1					
ANR	346704	IfStatement	if ( m & S_BIT )		339262	1					
ANR	346705	Condition	m & S_BIT	2573:9:54306:54314	339262	0	True				
ANR	346706	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346707	Identifier	m		339262	0					
ANR	346708	Identifier	S_BIT		339262	1					
ANR	346709	CompoundStatement		1281:20:28458:28458	339262	1					
ANR	346710	ExpressionStatement	ao -> o |= 1 << 16	2574:6:54325:54341	339262	0	True				
ANR	346711	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346712	PtrMemberAccess	ao -> o		339262	0					
ANR	346713	Identifier	ao		339262	0					
ANR	346714	Identifier	o		339262	1					
ANR	346715	ShiftExpression	1 << 16		339262	1		<<			
ANR	346716	PrimaryExpression	1		339262	0					
ANR	346717	PrimaryExpression	16		339262	1					
ANR	346718	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2576:5:54355:54381	339262	2	True				
ANR	346719	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		339262	0		|=			
ANR	346720	PtrMemberAccess	ao -> o		339262	0					
ANR	346721	Identifier	ao		339262	0					
ANR	346722	Identifier	o		339262	1					
ANR	346723	ShiftExpression	( num & 0xff ) << 8		339262	1		<<			
ANR	346724	BitAndExpression	num & 0xff		339262	0		&			
ANR	346725	Identifier	num		339262	0					
ANR	346726	PrimaryExpression	0xff		339262	1					
ANR	346727	PrimaryExpression	8		339262	1					
ANR	346728	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	2577:5:54388:54415	339262	3	True				
ANR	346729	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	346730	PtrMemberAccess	ao -> o		339262	0					
ANR	346731	Identifier	ao		339262	0					
ANR	346732	Identifier	o		339262	1					
ANR	346733	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	346734	BitAndExpression	num & 0xf00		339262	0		&			
ANR	346735	Identifier	num		339262	0					
ANR	346736	PrimaryExpression	0xf00		339262	1					
ANR	346737	PrimaryExpression	8		339262	1					
ANR	346738	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2578:5:54422:54451	339262	4	True				
ANR	346739	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346740	Callee	mem_32bit_2reg		339262	0					
ANR	346741	Identifier	mem_32bit_2reg		339262	0					
ANR	346742	ArgumentList	ao		339262	1					
ANR	346743	Argument	ao		339262	0					
ANR	346744	Identifier	ao		339262	0					
ANR	346745	Argument	m		339262	1					
ANR	346746	Identifier	m		339262	0					
ANR	346747	ExpressionStatement	ao -> o = 0x30f8000c	2580:4:54463:54481	339262	5	True				
ANR	346748	AssignmentExpression	ao -> o = 0x30f8000c		339262	0		=			
ANR	346749	PtrMemberAccess	ao -> o		339262	0					
ANR	346750	Identifier	ao		339262	0					
ANR	346751	Identifier	o		339262	1					
ANR	346752	PrimaryExpression	0x30f8000c		339262	1					
ANR	346753	IfStatement	if ( m & S_BIT )		339262	6					
ANR	346754	Condition	m & S_BIT	2581:8:54491:54499	339262	0	True				
ANR	346755	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346756	Identifier	m		339262	0					
ANR	346757	Identifier	S_BIT		339262	1					
ANR	346758	CompoundStatement		1289:19:28643:28643	339262	1					
ANR	346759	ExpressionStatement	ao -> o |= 1 << 16	2582:5:54509:54525	339262	0	True				
ANR	346760	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346761	PtrMemberAccess	ao -> o		339262	0					
ANR	346762	Identifier	ao		339262	0					
ANR	346763	Identifier	o		339262	1					
ANR	346764	ShiftExpression	1 << 16		339262	1		<<			
ANR	346765	PrimaryExpression	1		339262	0					
ANR	346766	PrimaryExpression	16		339262	1					
ANR	346767	ExpressionStatement	ao -> o |= - num << 8	2584:4:54537:54555	339262	7	True				
ANR	346768	AssignmentExpression	ao -> o |= - num << 8		339262	0		|=			
ANR	346769	PtrMemberAccess	ao -> o		339262	0					
ANR	346770	Identifier	ao		339262	0					
ANR	346771	Identifier	o		339262	1					
ANR	346772	ShiftExpression	- num << 8		339262	1		<<			
ANR	346773	UnaryOperationExpression	- num		339262	0					
ANR	346774	UnaryOperator	-		339262	0					
ANR	346775	Identifier	num		339262	1					
ANR	346776	PrimaryExpression	8		339262	1					
ANR	346777	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2585:4:54561:54590	339262	8	True				
ANR	346778	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	346779	Callee	mem_32bit_2reg		339262	0					
ANR	346780	Identifier	mem_32bit_2reg		339262	0					
ANR	346781	ArgumentList	ao		339262	1					
ANR	346782	Argument	ao		339262	0					
ANR	346783	Identifier	ao		339262	0					
ANR	346784	Argument	m		339262	1					
ANR	346785	Identifier	m		339262	0					
ANR	346786	ElseStatement	else		339262	0					
ANR	346787	CompoundStatement		1294:10:28743:28743	339262	0					
ANR	346788	ReturnStatement	return - 1 ;	2587:4:54608:54617	339262	0	True				
ANR	346789	UnaryOperationExpression	- 1		339262	0					
ANR	346790	UnaryOperator	-		339262	0					
ANR	346791	PrimaryExpression	1		339262	1					
ANR	346792	BreakStatement	break ;	2590:3:54642:54647	339262	8	True				
ANR	346793	Label	case THUMB_REG_BRACKREGBRACK_CONST :	2591:2:54651:54685	339262	9	True				
ANR	346794	Identifier	THUMB_REG_BRACKREGBRACK_CONST		339262	0					
ANR	346795	CompoundStatement		1302:3:28910:28938	339262	10					
ANR	346796	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2592:3:54692:54720	339262	0	True				
ANR	346797	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	346798	IdentifierDeclType	ut8		339262	0					
ANR	346799	Identifier	reg1		339262	1					
ANR	346800	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	346801	Identifier	reg1		339262	0					
ANR	346802	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	346803	Callee	getreg		339262	0					
ANR	346804	Identifier	getreg		339262	0					
ANR	346805	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	346806	Argument	ao -> a [ 0 ]		339262	0					
ANR	346807	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	346808	PtrMemberAccess	ao -> a		339262	0					
ANR	346809	Identifier	ao		339262	0					
ANR	346810	Identifier	a		339262	1					
ANR	346811	PrimaryExpression	0		339262	1					
ANR	346812	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 1 ] ) ;	2593:3:54725:54764	339262	1	True				
ANR	346813	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 1 ] )		339262	0					
ANR	346814	IdentifierDeclType	ut8		339262	0					
ANR	346815	Identifier	reg2		339262	1					
ANR	346816	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 1 ] )		339262	2		=			
ANR	346817	Identifier	reg2		339262	0					
ANR	346818	CallExpression	getregmemstartend ( ao -> a [ 1 ] )		339262	1					
ANR	346819	Callee	getregmemstartend		339262	0					
ANR	346820	Identifier	getregmemstartend		339262	0					
ANR	346821	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	346822	Argument	ao -> a [ 1 ]		339262	0					
ANR	346823	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	346824	PtrMemberAccess	ao -> a		339262	0					
ANR	346825	Identifier	ao		339262	0					
ANR	346826	Identifier	a		339262	1					
ANR	346827	PrimaryExpression	1		339262	1					
ANR	346828	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 2 ] ) ;	2594:3:54769:54797	339262	2	True				
ANR	346829	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	346830	IdentifierDeclType	st32		339262	0					
ANR	346831	Identifier	num		339262	1					
ANR	346832	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	346833	Identifier	num		339262	0					
ANR	346834	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	346835	Callee	getnum		339262	0					
ANR	346836	Identifier	getnum		339262	0					
ANR	346837	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	346838	Argument	ao -> a [ 2 ]		339262	0					
ANR	346839	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	346840	PtrMemberAccess	ao -> a		339262	0					
ANR	346841	Identifier	ao		339262	0					
ANR	346842	Identifier	a		339262	1					
ANR	346843	PrimaryExpression	2		339262	1					
ANR	346844	IfStatement	if ( ( num < - 255 ) || ( num > 255 ) )		339262	3					
ANR	346845	Condition	( num < - 255 ) || ( num > 255 )	2595:7:54806:54832	339262	0	True				
ANR	346846	OrExpression	( num < - 255 ) || ( num > 255 )		339262	0		||			
ANR	346847	RelationalExpression	num < - 255		339262	0		<			
ANR	346848	Identifier	num		339262	0					
ANR	346849	UnaryOperationExpression	- 255		339262	1					
ANR	346850	UnaryOperator	-		339262	0					
ANR	346851	PrimaryExpression	255		339262	1					
ANR	346852	RelationalExpression	num > 255		339262	1		>			
ANR	346853	Identifier	num		339262	0					
ANR	346854	PrimaryExpression	255		339262	1					
ANR	346855	CompoundStatement		1303:36:28976:28976	339262	1					
ANR	346856	ReturnStatement	return - 1 ;	2596:4:54841:54850	339262	0	True				
ANR	346857	UnaryOperationExpression	- 1		339262	0					
ANR	346858	UnaryOperator	-		339262	0					
ANR	346859	PrimaryExpression	1		339262	1					
ANR	346860	IfStatement	if ( ldrsel == 0 )		339262	4					
ANR	346861	Condition	ldrsel == 0	2598:7:54864:54874	339262	0	True				
ANR	346862	EqualityExpression	ldrsel == 0		339262	0		==			
ANR	346863	Identifier	ldrsel		339262	0					
ANR	346864	PrimaryExpression	0		339262	1					
ANR	346865	CompoundStatement		1306:20:29018:29018	339262	1					
ANR	346866	ExpressionStatement	ao -> o = 0x50f80009	2599:4:54883:54901	339262	0	True				
ANR	346867	AssignmentExpression	ao -> o = 0x50f80009		339262	0		=			
ANR	346868	PtrMemberAccess	ao -> o		339262	0					
ANR	346869	Identifier	ao		339262	0					
ANR	346870	Identifier	o		339262	1					
ANR	346871	PrimaryExpression	0x50f80009		339262	1					
ANR	346872	ElseStatement	else		339262	0					
ANR	346873	IfStatement	if ( ldrsel == B_BIT )		339262	0					
ANR	346874	Condition	ldrsel == B_BIT	2601:7:54921:54935	339262	0	True				
ANR	346875	EqualityExpression	ldrsel == B_BIT		339262	0		==			
ANR	346876	Identifier	ldrsel		339262	0					
ANR	346877	Identifier	B_BIT		339262	1					
ANR	346878	CompoundStatement		1309:24:29079:29079	339262	1					
ANR	346879	ExpressionStatement	ao -> o = 0x10f80009	2602:4:54944:54962	339262	0	True				
ANR	346880	AssignmentExpression	ao -> o = 0x10f80009		339262	0		=			
ANR	346881	PtrMemberAccess	ao -> o		339262	0					
ANR	346882	Identifier	ao		339262	0					
ANR	346883	Identifier	o		339262	1					
ANR	346884	PrimaryExpression	0x10f80009		339262	1					
ANR	346885	ElseStatement	else		339262	0					
ANR	346886	IfStatement	if ( ldrsel == H_BIT )		339262	0					
ANR	346887	Condition	ldrsel == H_BIT	2604:7:54982:54996	339262	0	True				
ANR	346888	EqualityExpression	ldrsel == H_BIT		339262	0		==			
ANR	346889	Identifier	ldrsel		339262	0					
ANR	346890	Identifier	H_BIT		339262	1					
ANR	346891	CompoundStatement		1312:24:29140:29140	339262	1					
ANR	346892	ExpressionStatement	ao -> o = 0x30f80009	2605:4:55005:55023	339262	0	True				
ANR	346893	AssignmentExpression	ao -> o = 0x30f80009		339262	0		=			
ANR	346894	PtrMemberAccess	ao -> o		339262	0					
ANR	346895	Identifier	ao		339262	0					
ANR	346896	Identifier	o		339262	1					
ANR	346897	PrimaryExpression	0x30f80009		339262	1					
ANR	346898	ElseStatement	else		339262	0					
ANR	346899	CompoundStatement		1314:10:29176:29176	339262	0					
ANR	346900	ReturnStatement	return - 1 ;	2607:4:55041:55050	339262	0	True				
ANR	346901	UnaryOperationExpression	- 1		339262	0					
ANR	346902	UnaryOperator	-		339262	0					
ANR	346903	PrimaryExpression	1		339262	1					
ANR	346904	IfStatement	if ( m & S_BIT )		339262	5					
ANR	346905	Condition	m & S_BIT	2609:7:55064:55072	339262	0	True				
ANR	346906	BitAndExpression	m & S_BIT		339262	0		&			
ANR	346907	Identifier	m		339262	0					
ANR	346908	Identifier	S_BIT		339262	1					
ANR	346909	CompoundStatement		1317:18:29216:29216	339262	1					
ANR	346910	ExpressionStatement	ao -> o |= 1 << 16	2610:4:55081:55097	339262	0	True				
ANR	346911	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	346912	PtrMemberAccess	ao -> o		339262	0					
ANR	346913	Identifier	ao		339262	0					
ANR	346914	Identifier	o		339262	1					
ANR	346915	ShiftExpression	1 << 16		339262	1		<<			
ANR	346916	PrimaryExpression	1		339262	0					
ANR	346917	PrimaryExpression	16		339262	1					
ANR	346918	IfStatement	if ( num < 0 )		339262	6					
ANR	346919	Condition	num < 0	2612:7:55111:55117	339262	0	True				
ANR	346920	RelationalExpression	num < 0		339262	0		<			
ANR	346921	Identifier	num		339262	0					
ANR	346922	PrimaryExpression	0		339262	1					
ANR	346923	CompoundStatement		1320:16:29261:29261	339262	1					
ANR	346924	ExpressionStatement	num = - num	2613:4:55126:55136	339262	0	True				
ANR	346925	AssignmentExpression	num = - num		339262	0		=			
ANR	346926	Identifier	num		339262	0					
ANR	346927	UnaryOperationExpression	- num		339262	1					
ANR	346928	UnaryOperator	-		339262	0					
ANR	346929	Identifier	num		339262	1					
ANR	346930	ElseStatement	else		339262	0					
ANR	346931	CompoundStatement		1322:10:29289:29289	339262	0					
ANR	346932	ExpressionStatement	ao -> o |= 1 << 1	2615:4:55154:55169	339262	0	True				
ANR	346933	AssignmentExpression	ao -> o |= 1 << 1		339262	0		|=			
ANR	346934	PtrMemberAccess	ao -> o		339262	0					
ANR	346935	Identifier	ao		339262	0					
ANR	346936	Identifier	o		339262	1					
ANR	346937	ShiftExpression	1 << 1		339262	1		<<			
ANR	346938	PrimaryExpression	1		339262	0					
ANR	346939	PrimaryExpression	1		339262	1					
ANR	346940	ExpressionStatement	ao -> o |= num << 8	2617:3:55179:55196	339262	7	True				
ANR	346941	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	346942	PtrMemberAccess	ao -> o		339262	0					
ANR	346943	Identifier	ao		339262	0					
ANR	346944	Identifier	o		339262	1					
ANR	346945	ShiftExpression	num << 8		339262	1		<<			
ANR	346946	Identifier	num		339262	0					
ANR	346947	PrimaryExpression	8		339262	1					
ANR	346948	ExpressionStatement	ao -> o |= reg1 << 4	2618:3:55201:55219	339262	8	True				
ANR	346949	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	346950	PtrMemberAccess	ao -> o		339262	0					
ANR	346951	Identifier	ao		339262	0					
ANR	346952	Identifier	o		339262	1					
ANR	346953	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	346954	Identifier	reg1		339262	0					
ANR	346955	PrimaryExpression	4		339262	1					
ANR	346956	ExpressionStatement	ao -> o |= reg2 << 24	2619:3:55224:55243	339262	9	True				
ANR	346957	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	346958	PtrMemberAccess	ao -> o		339262	0					
ANR	346959	Identifier	ao		339262	0					
ANR	346960	Identifier	o		339262	1					
ANR	346961	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	346962	Identifier	reg2		339262	0					
ANR	346963	PrimaryExpression	24		339262	1					
ANR	346964	ReturnStatement	return 4 ;	2620:3:55248:55256	339262	10	True				
ANR	346965	PrimaryExpression	4		339262	0					
ANR	346966	BreakStatement	break ;	2622:3:55273:55278	339262	11	True				
ANR	346967	Label	case THUMB_REG_BRACKREG_CONSTBRACKBANG :	2623:2:55282:55320	339262	12	True				
ANR	346968	Identifier	THUMB_REG_BRACKREG_CONSTBRACKBANG		339262	0					
ANR	346969	CompoundStatement		1332:3:29468:29506	339262	13					
ANR	346970	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 2 ] ) ;	2624:3:55327:55365	339262	0	True				
ANR	346971	IdentifierDecl	num = getnummemendbang ( ao -> a [ 2 ] )		339262	0					
ANR	346972	IdentifierDeclType	st32		339262	0					
ANR	346973	Identifier	num		339262	1					
ANR	346974	AssignmentExpression	num = getnummemendbang ( ao -> a [ 2 ] )		339262	2		=			
ANR	346975	Identifier	num		339262	0					
ANR	346976	CallExpression	getnummemendbang ( ao -> a [ 2 ] )		339262	1					
ANR	346977	Callee	getnummemendbang		339262	0					
ANR	346978	Identifier	getnummemendbang		339262	0					
ANR	346979	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	346980	Argument	ao -> a [ 2 ]		339262	0					
ANR	346981	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	346982	PtrMemberAccess	ao -> a		339262	0					
ANR	346983	Identifier	ao		339262	0					
ANR	346984	Identifier	a		339262	1					
ANR	346985	PrimaryExpression	2		339262	1					
ANR	346986	IfStatement	if ( ( num < - 255 ) || ( num > 255 ) )		339262	1					
ANR	346987	Condition	( num < - 255 ) || ( num > 255 )	2625:7:55374:55400	339262	0	True				
ANR	346988	OrExpression	( num < - 255 ) || ( num > 255 )		339262	0		||			
ANR	346989	RelationalExpression	num < - 255		339262	0		<			
ANR	346990	Identifier	num		339262	0					
ANR	346991	UnaryOperationExpression	- 255		339262	1					
ANR	346992	UnaryOperator	-		339262	0					
ANR	346993	PrimaryExpression	255		339262	1					
ANR	346994	RelationalExpression	num > 255		339262	1		>			
ANR	346995	Identifier	num		339262	0					
ANR	346996	PrimaryExpression	255		339262	1					
ANR	346997	CompoundStatement		1333:36:29544:29544	339262	1					
ANR	346998	ReturnStatement	return - 1 ;	2626:4:55409:55418	339262	0	True				
ANR	346999	UnaryOperationExpression	- 1		339262	0					
ANR	347000	UnaryOperator	-		339262	0					
ANR	347001	PrimaryExpression	1		339262	1					
ANR	347002	IfStatement	if ( ldrsel == 0 )		339262	2					
ANR	347003	Condition	ldrsel == 0	2628:7:55432:55442	339262	0	True				
ANR	347004	EqualityExpression	ldrsel == 0		339262	0		==			
ANR	347005	Identifier	ldrsel		339262	0					
ANR	347006	PrimaryExpression	0		339262	1					
ANR	347007	CompoundStatement		1336:20:29586:29586	339262	1					
ANR	347008	ExpressionStatement	ao -> o = 0x50f8000d	2629:4:55451:55469	339262	0	True				
ANR	347009	AssignmentExpression	ao -> o = 0x50f8000d		339262	0		=			
ANR	347010	PtrMemberAccess	ao -> o		339262	0					
ANR	347011	Identifier	ao		339262	0					
ANR	347012	Identifier	o		339262	1					
ANR	347013	PrimaryExpression	0x50f8000d		339262	1					
ANR	347014	ElseStatement	else		339262	0					
ANR	347015	IfStatement	if ( ldrsel == B_BIT )		339262	0					
ANR	347016	Condition	ldrsel == B_BIT	2631:7:55489:55503	339262	0	True				
ANR	347017	EqualityExpression	ldrsel == B_BIT		339262	0		==			
ANR	347018	Identifier	ldrsel		339262	0					
ANR	347019	Identifier	B_BIT		339262	1					
ANR	347020	CompoundStatement		1339:24:29647:29647	339262	1					
ANR	347021	ExpressionStatement	ao -> o = 0x10f8000d	2632:4:55512:55530	339262	0	True				
ANR	347022	AssignmentExpression	ao -> o = 0x10f8000d		339262	0		=			
ANR	347023	PtrMemberAccess	ao -> o		339262	0					
ANR	347024	Identifier	ao		339262	0					
ANR	347025	Identifier	o		339262	1					
ANR	347026	PrimaryExpression	0x10f8000d		339262	1					
ANR	347027	ElseStatement	else		339262	0					
ANR	347028	IfStatement	if ( ldrsel == H_BIT )		339262	0					
ANR	347029	Condition	ldrsel == H_BIT	2634:7:55550:55564	339262	0	True				
ANR	347030	EqualityExpression	ldrsel == H_BIT		339262	0		==			
ANR	347031	Identifier	ldrsel		339262	0					
ANR	347032	Identifier	H_BIT		339262	1					
ANR	347033	CompoundStatement		1342:24:29708:29708	339262	1					
ANR	347034	ExpressionStatement	ao -> o = 0x30f8000d	2635:4:55573:55591	339262	0	True				
ANR	347035	AssignmentExpression	ao -> o = 0x30f8000d		339262	0		=			
ANR	347036	PtrMemberAccess	ao -> o		339262	0					
ANR	347037	Identifier	ao		339262	0					
ANR	347038	Identifier	o		339262	1					
ANR	347039	PrimaryExpression	0x30f8000d		339262	1					
ANR	347040	ElseStatement	else		339262	0					
ANR	347041	CompoundStatement		1344:10:29744:29744	339262	0					
ANR	347042	ReturnStatement	return - 1 ;	2637:4:55609:55618	339262	0	True				
ANR	347043	UnaryOperationExpression	- 1		339262	0					
ANR	347044	UnaryOperator	-		339262	0					
ANR	347045	PrimaryExpression	1		339262	1					
ANR	347046	IfStatement	if ( m & S_BIT )		339262	3					
ANR	347047	Condition	m & S_BIT	2639:7:55632:55640	339262	0	True				
ANR	347048	BitAndExpression	m & S_BIT		339262	0		&			
ANR	347049	Identifier	m		339262	0					
ANR	347050	Identifier	S_BIT		339262	1					
ANR	347051	CompoundStatement		1347:18:29784:29784	339262	1					
ANR	347052	ExpressionStatement	ao -> o |= 1 << 16	2640:4:55649:55665	339262	0	True				
ANR	347053	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	347054	PtrMemberAccess	ao -> o		339262	0					
ANR	347055	Identifier	ao		339262	0					
ANR	347056	Identifier	o		339262	1					
ANR	347057	ShiftExpression	1 << 16		339262	1		<<			
ANR	347058	PrimaryExpression	1		339262	0					
ANR	347059	PrimaryExpression	16		339262	1					
ANR	347060	IfStatement	if ( num < 0 )		339262	4					
ANR	347061	Condition	num < 0	2642:7:55679:55685	339262	0	True				
ANR	347062	RelationalExpression	num < 0		339262	0		<			
ANR	347063	Identifier	num		339262	0					
ANR	347064	PrimaryExpression	0		339262	1					
ANR	347065	CompoundStatement		1350:16:29829:29829	339262	1					
ANR	347066	ExpressionStatement	num = - num	2643:4:55694:55704	339262	0	True				
ANR	347067	AssignmentExpression	num = - num		339262	0		=			
ANR	347068	Identifier	num		339262	0					
ANR	347069	UnaryOperationExpression	- num		339262	1					
ANR	347070	UnaryOperator	-		339262	0					
ANR	347071	Identifier	num		339262	1					
ANR	347072	ElseStatement	else		339262	0					
ANR	347073	CompoundStatement		1352:10:29857:29857	339262	0					
ANR	347074	ExpressionStatement	ao -> o |= 1 << 1	2645:4:55722:55737	339262	0	True				
ANR	347075	AssignmentExpression	ao -> o |= 1 << 1		339262	0		|=			
ANR	347076	PtrMemberAccess	ao -> o		339262	0					
ANR	347077	Identifier	ao		339262	0					
ANR	347078	Identifier	o		339262	1					
ANR	347079	ShiftExpression	1 << 1		339262	1		<<			
ANR	347080	PrimaryExpression	1		339262	0					
ANR	347081	PrimaryExpression	1		339262	1					
ANR	347082	ExpressionStatement	ao -> o |= num << 8	2647:3:55747:55764	339262	5	True				
ANR	347083	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	347084	PtrMemberAccess	ao -> o		339262	0					
ANR	347085	Identifier	ao		339262	0					
ANR	347086	Identifier	o		339262	1					
ANR	347087	ShiftExpression	num << 8		339262	1		<<			
ANR	347088	Identifier	num		339262	0					
ANR	347089	PrimaryExpression	8		339262	1					
ANR	347090	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2648:3:55769:55798	339262	6	True				
ANR	347091	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	347092	Callee	mem_32bit_2reg		339262	0					
ANR	347093	Identifier	mem_32bit_2reg		339262	0					
ANR	347094	ArgumentList	ao		339262	1					
ANR	347095	Argument	ao		339262	0					
ANR	347096	Identifier	ao		339262	0					
ANR	347097	Argument	m		339262	1					
ANR	347098	Identifier	m		339262	0					
ANR	347099	BreakStatement	break ;	2650:3:55815:55820	339262	14	True				
ANR	347100	Label	case THUMB_REG_BRACKREG_REGBRACK :	2651:2:55824:55856	339262	15	True				
ANR	347101	Identifier	THUMB_REG_BRACKREG_REGBRACK		339262	0					
ANR	347102	CompoundStatement		1360:3:30004:30038	339262	16					
ANR	347103	IdentifierDeclStatement	ut8 reg3 = getregmemend ( ao -> a [ 2 ] ) ;	2652:3:55863:55897	339262	0	True				
ANR	347104	IdentifierDecl	reg3 = getregmemend ( ao -> a [ 2 ] )		339262	0					
ANR	347105	IdentifierDeclType	ut8		339262	0					
ANR	347106	Identifier	reg3		339262	1					
ANR	347107	AssignmentExpression	reg3 = getregmemend ( ao -> a [ 2 ] )		339262	2		=			
ANR	347108	Identifier	reg3		339262	0					
ANR	347109	CallExpression	getregmemend ( ao -> a [ 2 ] )		339262	1					
ANR	347110	Callee	getregmemend		339262	0					
ANR	347111	Identifier	getregmemend		339262	0					
ANR	347112	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347113	Argument	ao -> a [ 2 ]		339262	0					
ANR	347114	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347115	PtrMemberAccess	ao -> a		339262	0					
ANR	347116	Identifier	ao		339262	0					
ANR	347117	Identifier	a		339262	1					
ANR	347118	PrimaryExpression	2		339262	1					
ANR	347119	IfStatement	if ( reg3 < 8 )		339262	1					
ANR	347120	Condition	reg3 < 8	2653:7:55906:55913	339262	0	True				
ANR	347121	RelationalExpression	reg3 < 8		339262	0		<			
ANR	347122	Identifier	reg3		339262	0					
ANR	347123	PrimaryExpression	8		339262	1					
ANR	347124	CompoundStatement		1361:17:30057:30057	339262	1					
ANR	347125	IfStatement	if ( ldrsel == 0 )		339262	0					
ANR	347126	Condition	ldrsel == 0	2654:8:55926:55936	339262	0	True				
ANR	347127	EqualityExpression	ldrsel == 0		339262	0		==			
ANR	347128	Identifier	ldrsel		339262	0					
ANR	347129	PrimaryExpression	0		339262	1					
ANR	347130	CompoundStatement		1362:21:30080:30080	339262	1					
ANR	347131	ExpressionStatement	ao -> o = 0x0058	2655:5:55946:55960	339262	0	True				
ANR	347132	AssignmentExpression	ao -> o = 0x0058		339262	0		=			
ANR	347133	PtrMemberAccess	ao -> o		339262	0					
ANR	347134	Identifier	ao		339262	0					
ANR	347135	Identifier	o		339262	1					
ANR	347136	PrimaryExpression	0x0058		339262	1					
ANR	347137	ElseStatement	else		339262	0					
ANR	347138	IfStatement	if ( ldrsel == B_BIT )		339262	0					
ANR	347139	Condition	ldrsel == B_BIT	2657:8:55981:55995	339262	0	True				
ANR	347140	EqualityExpression	ldrsel == B_BIT		339262	0		==			
ANR	347141	Identifier	ldrsel		339262	0					
ANR	347142	Identifier	B_BIT		339262	1					
ANR	347143	CompoundStatement		1365:25:30139:30139	339262	1					
ANR	347144	IfStatement	if ( m & S_BIT )		339262	0					
ANR	347145	Condition	m & S_BIT	2658:9:56009:56017	339262	0	True				
ANR	347146	BitAndExpression	m & S_BIT		339262	0		&			
ANR	347147	Identifier	m		339262	0					
ANR	347148	Identifier	S_BIT		339262	1					
ANR	347149	CompoundStatement		1366:20:30161:30161	339262	1					
ANR	347150	ExpressionStatement	ao -> o = 0x0056	2659:6:56028:56042	339262	0	True				
ANR	347151	AssignmentExpression	ao -> o = 0x0056		339262	0		=			
ANR	347152	PtrMemberAccess	ao -> o		339262	0					
ANR	347153	Identifier	ao		339262	0					
ANR	347154	Identifier	o		339262	1					
ANR	347155	PrimaryExpression	0x0056		339262	1					
ANR	347156	ElseStatement	else		339262	0					
ANR	347157	CompoundStatement		1368:12:30197:30197	339262	0					
ANR	347158	ExpressionStatement	ao -> o = 0x005c	2661:6:56064:56078	339262	0	True				
ANR	347159	AssignmentExpression	ao -> o = 0x005c		339262	0		=			
ANR	347160	PtrMemberAccess	ao -> o		339262	0					
ANR	347161	Identifier	ao		339262	0					
ANR	347162	Identifier	o		339262	1					
ANR	347163	PrimaryExpression	0x005c		339262	1					
ANR	347164	ElseStatement	else		339262	0					
ANR	347165	IfStatement	if ( ldrsel == H_BIT )		339262	0					
ANR	347166	Condition	ldrsel == H_BIT	2664:8:56106:56120	339262	0	True				
ANR	347167	EqualityExpression	ldrsel == H_BIT		339262	0		==			
ANR	347168	Identifier	ldrsel		339262	0					
ANR	347169	Identifier	H_BIT		339262	1					
ANR	347170	CompoundStatement		1372:25:30264:30264	339262	1					
ANR	347171	IfStatement	if ( m & S_BIT )		339262	0					
ANR	347172	Condition	m & S_BIT	2665:9:56134:56142	339262	0	True				
ANR	347173	BitAndExpression	m & S_BIT		339262	0		&			
ANR	347174	Identifier	m		339262	0					
ANR	347175	Identifier	S_BIT		339262	1					
ANR	347176	CompoundStatement		1373:20:30286:30286	339262	1					
ANR	347177	ExpressionStatement	ao -> o = 0x005e	2666:6:56153:56167	339262	0	True				
ANR	347178	AssignmentExpression	ao -> o = 0x005e		339262	0		=			
ANR	347179	PtrMemberAccess	ao -> o		339262	0					
ANR	347180	Identifier	ao		339262	0					
ANR	347181	Identifier	o		339262	1					
ANR	347182	PrimaryExpression	0x005e		339262	1					
ANR	347183	ElseStatement	else		339262	0					
ANR	347184	CompoundStatement		1375:12:30322:30322	339262	0					
ANR	347185	ExpressionStatement	ao -> o = 0x005a	2668:6:56189:56203	339262	0	True				
ANR	347186	AssignmentExpression	ao -> o = 0x005a		339262	0		=			
ANR	347187	PtrMemberAccess	ao -> o		339262	0					
ANR	347188	Identifier	ao		339262	0					
ANR	347189	Identifier	o		339262	1					
ANR	347190	PrimaryExpression	0x005a		339262	1					
ANR	347191	ElseStatement	else		339262	0					
ANR	347192	CompoundStatement		1379:4:30368:30368	339262	0					
ANR	347193	ReturnStatement	return - 1 ;	2672:5:56234:56243	339262	0	True				
ANR	347194	UnaryOperationExpression	- 1		339262	0					
ANR	347195	UnaryOperator	-		339262	0					
ANR	347196	PrimaryExpression	1		339262	1					
ANR	347197	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	2674:4:56255:56282	339262	1	True				
ANR	347198	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		339262	0		|=			
ANR	347199	PtrMemberAccess	ao -> o		339262	0					
ANR	347200	Identifier	ao		339262	0					
ANR	347201	Identifier	o		339262	1					
ANR	347202	ShiftExpression	( reg3 & 0x3 ) << 14		339262	1		<<			
ANR	347203	BitAndExpression	reg3 & 0x3		339262	0		&			
ANR	347204	Identifier	reg3		339262	0					
ANR	347205	PrimaryExpression	0x3		339262	1					
ANR	347206	PrimaryExpression	14		339262	1					
ANR	347207	ExpressionStatement	ao -> o |= ( reg3 & 0x4 ) >> 2	2675:4:56288:56314	339262	2	True				
ANR	347208	AssignmentExpression	ao -> o |= ( reg3 & 0x4 ) >> 2		339262	0		|=			
ANR	347209	PtrMemberAccess	ao -> o		339262	0					
ANR	347210	Identifier	ao		339262	0					
ANR	347211	Identifier	o		339262	1					
ANR	347212	ShiftExpression	( reg3 & 0x4 ) >> 2		339262	1		>>			
ANR	347213	BitAndExpression	reg3 & 0x4		339262	0		&			
ANR	347214	Identifier	reg3		339262	0					
ANR	347215	PrimaryExpression	0x4		339262	1					
ANR	347216	PrimaryExpression	2		339262	1					
ANR	347217	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		339262	3					
ANR	347218	Condition	"mem_16bit_2reg ( ao , m )"	2676:8:56324:56345	339262	0	True				
ANR	347219	CallExpression	"mem_16bit_2reg ( ao , m )"		339262	0					
ANR	347220	Callee	mem_16bit_2reg		339262	0					
ANR	347221	Identifier	mem_16bit_2reg		339262	0					
ANR	347222	ArgumentList	ao		339262	1					
ANR	347223	Argument	ao		339262	0					
ANR	347224	Identifier	ao		339262	0					
ANR	347225	Argument	m		339262	1					
ANR	347226	Identifier	m		339262	0					
ANR	347227	CompoundStatement		1384:32:30489:30489	339262	1					
ANR	347228	ReturnStatement	return 2 ;	2677:5:56355:56363	339262	0	True				
ANR	347229	PrimaryExpression	2		339262	0					
ANR	347230	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	2680:3:56379:56416	339262	2	True				
ANR	347231	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	347232	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		339262	0					
ANR	347233	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347234	PtrMemberAccess	ao -> a		339262	0					
ANR	347235	Identifier	ao		339262	0					
ANR	347236	Identifier	a		339262	1					
ANR	347237	PrimaryExpression	2		339262	1					
ANR	347238	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		339262	1		-			
ANR	347239	CallExpression	strlen ( ao -> a [ 2 ] )		339262	0					
ANR	347240	Callee	strlen		339262	0					
ANR	347241	Identifier	strlen		339262	0					
ANR	347242	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347243	Argument	ao -> a [ 2 ]		339262	0					
ANR	347244	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347245	PtrMemberAccess	ao -> a		339262	0					
ANR	347246	Identifier	ao		339262	0					
ANR	347247	Identifier	a		339262	1					
ANR	347248	PrimaryExpression	2		339262	1					
ANR	347249	PrimaryExpression	1		339262	1					
ANR	347250	PrimaryExpression	'\\0'		339262	1					
ANR	347251	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0]"""	2681:3:56421:56440	339262	3	True				
ANR	347252	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0]"""		339262	0		=			
ANR	347253	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	347254	PtrMemberAccess	ao -> a		339262	0					
ANR	347255	Identifier	ao		339262	0					
ANR	347256	Identifier	a		339262	1					
ANR	347257	PrimaryExpression	3		339262	1					
ANR	347258	PrimaryExpression	"""lsl 0]"""		339262	1					
ANR	347259	Label	case THUMB_REG_BRACKREG_REG_SHIFTBRACK :	2684:2:56486:56524	339262	17	True				
ANR	347260	Identifier	THUMB_REG_BRACKREG_REG_SHIFTBRACK		339262	0					
ANR	347261	CompoundStatement		1394:3:30705:30743	339262	18					
ANR	347262	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	2685:3:56531:56559	339262	0	True				
ANR	347263	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	347264	IdentifierDeclType	ut8		339262	0					
ANR	347265	Identifier	reg3		339262	1					
ANR	347266	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	347267	Identifier	reg3		339262	0					
ANR	347268	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	347269	Callee	getreg		339262	0					
ANR	347270	Identifier	getreg		339262	0					
ANR	347271	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347272	Argument	ao -> a [ 2 ]		339262	0					
ANR	347273	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347274	PtrMemberAccess	ao -> a		339262	0					
ANR	347275	Identifier	ao		339262	0					
ANR	347276	Identifier	a		339262	1					
ANR	347277	PrimaryExpression	2		339262	1					
ANR	347278	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 3 ] ) ;	2686:3:56564:56602	339262	1	True				
ANR	347279	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 3 ] )		339262	0					
ANR	347280	IdentifierDeclType	ut32		339262	0					
ANR	347281	Identifier	shift		339262	1					
ANR	347282	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 3 ] )		339262	2		=			
ANR	347283	Identifier	shift		339262	0					
ANR	347284	CallExpression	getshiftmemend ( ao -> a [ 3 ] )		339262	1					
ANR	347285	Callee	getshiftmemend		339262	0					
ANR	347286	Identifier	getshiftmemend		339262	0					
ANR	347287	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	347288	Argument	ao -> a [ 3 ]		339262	0					
ANR	347289	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	347290	PtrMemberAccess	ao -> a		339262	0					
ANR	347291	Identifier	ao		339262	0					
ANR	347292	Identifier	a		339262	1					
ANR	347293	PrimaryExpression	3		339262	1					
ANR	347294	ExpressionStatement	shift >>= 2	2688:3:56608:56619	339262	2	True				
ANR	347295	AssignmentExpression	shift >>= 2		339262	0		>>=			
ANR	347296	Identifier	shift		339262	0					
ANR	347297	PrimaryExpression	2		339262	1					
ANR	347298	IfStatement	if ( shift & 0xffffcfff )		339262	3					
ANR	347299	Condition	shift & 0xffffcfff	2689:7:56628:56645	339262	0	True				
ANR	347300	BitAndExpression	shift & 0xffffcfff		339262	0		&			
ANR	347301	Identifier	shift		339262	0					
ANR	347302	PrimaryExpression	0xffffcfff		339262	1					
ANR	347303	CompoundStatement		1397:27:30789:30789	339262	1					
ANR	347304	ReturnStatement	return - 1 ;	2690:4:56654:56663	339262	0	True				
ANR	347305	UnaryOperationExpression	- 1		339262	0					
ANR	347306	UnaryOperator	-		339262	0					
ANR	347307	PrimaryExpression	1		339262	1					
ANR	347308	IfStatement	if ( ldrsel == 0 )		339262	4					
ANR	347309	Condition	ldrsel == 0	2693:7:56678:56688	339262	0	True				
ANR	347310	EqualityExpression	ldrsel == 0		339262	0		==			
ANR	347311	Identifier	ldrsel		339262	0					
ANR	347312	PrimaryExpression	0		339262	1					
ANR	347313	CompoundStatement		1401:20:30832:30832	339262	1					
ANR	347314	ExpressionStatement	ao -> o = 0x50f80000	2694:4:56697:56715	339262	0	True				
ANR	347315	AssignmentExpression	ao -> o = 0x50f80000		339262	0		=			
ANR	347316	PtrMemberAccess	ao -> o		339262	0					
ANR	347317	Identifier	ao		339262	0					
ANR	347318	Identifier	o		339262	1					
ANR	347319	PrimaryExpression	0x50f80000		339262	1					
ANR	347320	ElseStatement	else		339262	0					
ANR	347321	IfStatement	if ( ldrsel == B_BIT )		339262	0					
ANR	347322	Condition	ldrsel == B_BIT	2696:7:56734:56748	339262	0	True				
ANR	347323	EqualityExpression	ldrsel == B_BIT		339262	0		==			
ANR	347324	Identifier	ldrsel		339262	0					
ANR	347325	Identifier	B_BIT		339262	1					
ANR	347326	CompoundStatement		1404:24:30892:30892	339262	1					
ANR	347327	ExpressionStatement	ao -> o = 0x10f80000	2697:4:56757:56775	339262	0	True				
ANR	347328	AssignmentExpression	ao -> o = 0x10f80000		339262	0		=			
ANR	347329	PtrMemberAccess	ao -> o		339262	0					
ANR	347330	Identifier	ao		339262	0					
ANR	347331	Identifier	o		339262	1					
ANR	347332	PrimaryExpression	0x10f80000		339262	1					
ANR	347333	ElseStatement	else		339262	0					
ANR	347334	IfStatement	if ( ldrsel == H_BIT )		339262	0					
ANR	347335	Condition	ldrsel == H_BIT	2699:7:56794:56808	339262	0	True				
ANR	347336	EqualityExpression	ldrsel == H_BIT		339262	0		==			
ANR	347337	Identifier	ldrsel		339262	0					
ANR	347338	Identifier	H_BIT		339262	1					
ANR	347339	CompoundStatement		1407:24:30952:30952	339262	1					
ANR	347340	ExpressionStatement	ao -> o = 0x30f80000	2700:4:56817:56835	339262	0	True				
ANR	347341	AssignmentExpression	ao -> o = 0x30f80000		339262	0		=			
ANR	347342	PtrMemberAccess	ao -> o		339262	0					
ANR	347343	Identifier	ao		339262	0					
ANR	347344	Identifier	o		339262	1					
ANR	347345	PrimaryExpression	0x30f80000		339262	1					
ANR	347346	ElseStatement	else		339262	0					
ANR	347347	CompoundStatement		1410:3:30991:30991	339262	0					
ANR	347348	ReturnStatement	return - 1 ;	2703:4:56856:56865	339262	0	True				
ANR	347349	UnaryOperationExpression	- 1		339262	0					
ANR	347350	UnaryOperator	-		339262	0					
ANR	347351	PrimaryExpression	1		339262	1					
ANR	347352	IfStatement	if ( m & S_BIT )		339262	5					
ANR	347353	Condition	m & S_BIT	2705:7:56879:56887	339262	0	True				
ANR	347354	BitAndExpression	m & S_BIT		339262	0		&			
ANR	347355	Identifier	m		339262	0					
ANR	347356	Identifier	S_BIT		339262	1					
ANR	347357	CompoundStatement		1413:18:31031:31031	339262	1					
ANR	347358	ExpressionStatement	ao -> o |= 1 << 16	2706:4:56896:56912	339262	0	True				
ANR	347359	AssignmentExpression	ao -> o |= 1 << 16		339262	0		|=			
ANR	347360	PtrMemberAccess	ao -> o		339262	0					
ANR	347361	Identifier	ao		339262	0					
ANR	347362	Identifier	o		339262	1					
ANR	347363	ShiftExpression	1 << 16		339262	1		<<			
ANR	347364	PrimaryExpression	1		339262	0					
ANR	347365	PrimaryExpression	16		339262	1					
ANR	347366	ExpressionStatement	ao -> o |= reg3 << 8	2708:3:56922:56940	339262	6	True				
ANR	347367	AssignmentExpression	ao -> o |= reg3 << 8		339262	0		|=			
ANR	347368	PtrMemberAccess	ao -> o		339262	0					
ANR	347369	Identifier	ao		339262	0					
ANR	347370	Identifier	o		339262	1					
ANR	347371	ShiftExpression	reg3 << 8		339262	1		<<			
ANR	347372	Identifier	reg3		339262	0					
ANR	347373	PrimaryExpression	8		339262	1					
ANR	347374	ExpressionStatement	ao -> o |= shift	2709:3:56945:56959	339262	7	True				
ANR	347375	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	347376	PtrMemberAccess	ao -> o		339262	0					
ANR	347377	Identifier	ao		339262	0					
ANR	347378	Identifier	o		339262	1					
ANR	347379	Identifier	shift		339262	1					
ANR	347380	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2710:3:56964:56993	339262	8	True				
ANR	347381	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	347382	Callee	mem_32bit_2reg		339262	0					
ANR	347383	Identifier	mem_32bit_2reg		339262	0					
ANR	347384	ArgumentList	ao		339262	1					
ANR	347385	Argument	ao		339262	0					
ANR	347386	Identifier	ao		339262	0					
ANR	347387	Argument	m		339262	1					
ANR	347388	Identifier	m		339262	0					
ANR	347389	BreakStatement	break ;	2712:3:57010:57015	339262	19	True				
ANR	347390	Label	case THUMB_REG_REG_BRACKREGBRACK :	2713:2:57019:57051	339262	20	True				
ANR	347391	Identifier	THUMB_REG_REG_BRACKREGBRACK		339262	0					
ANR	347392	CompoundStatement		1421:36:31194:31194	339262	21					
ANR	347393	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	2714:3:57058:57095	339262	0	True				
ANR	347394	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	347395	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		339262	0					
ANR	347396	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347397	PtrMemberAccess	ao -> a		339262	0					
ANR	347398	Identifier	ao		339262	0					
ANR	347399	Identifier	a		339262	1					
ANR	347400	PrimaryExpression	2		339262	1					
ANR	347401	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		339262	1		-			
ANR	347402	CallExpression	strlen ( ao -> a [ 2 ] )		339262	0					
ANR	347403	Callee	strlen		339262	0					
ANR	347404	Identifier	strlen		339262	0					
ANR	347405	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347406	Argument	ao -> a [ 2 ]		339262	0					
ANR	347407	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347408	PtrMemberAccess	ao -> a		339262	0					
ANR	347409	Identifier	ao		339262	0					
ANR	347410	Identifier	a		339262	1					
ANR	347411	PrimaryExpression	2		339262	1					
ANR	347412	PrimaryExpression	1		339262	1					
ANR	347413	PrimaryExpression	'\\0'		339262	1					
ANR	347414	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	2715:3:57100:57115	339262	1	True				
ANR	347415	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		339262	0		=			
ANR	347416	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	347417	PtrMemberAccess	ao -> a		339262	0					
ANR	347418	Identifier	ao		339262	0					
ANR	347419	Identifier	a		339262	1					
ANR	347420	PrimaryExpression	3		339262	1					
ANR	347421	PrimaryExpression	"""0]"""		339262	1					
ANR	347422	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACK :	2718:2:57161:57199	339262	22	True				
ANR	347423	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACK		339262	0					
ANR	347424	CompoundStatement		1430:3:31454:31488	339262	23					
ANR	347425	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2719:3:57206:57234	339262	0	True				
ANR	347426	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	347427	IdentifierDeclType	ut8		339262	0					
ANR	347428	Identifier	reg1		339262	1					
ANR	347429	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	347430	Identifier	reg1		339262	0					
ANR	347431	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	347432	Callee	getreg		339262	0					
ANR	347433	Identifier	getreg		339262	0					
ANR	347434	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	347435	Argument	ao -> a [ 0 ]		339262	0					
ANR	347436	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	347437	PtrMemberAccess	ao -> a		339262	0					
ANR	347438	Identifier	ao		339262	0					
ANR	347439	Identifier	a		339262	1					
ANR	347440	PrimaryExpression	0		339262	1					
ANR	347441	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2720:3:57239:57267	339262	1	True				
ANR	347442	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	347443	IdentifierDeclType	ut8		339262	0					
ANR	347444	Identifier	reg2		339262	1					
ANR	347445	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	347446	Identifier	reg2		339262	0					
ANR	347447	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	347448	Callee	getreg		339262	0					
ANR	347449	Identifier	getreg		339262	0					
ANR	347450	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	347451	Argument	ao -> a [ 1 ]		339262	0					
ANR	347452	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	347453	PtrMemberAccess	ao -> a		339262	0					
ANR	347454	Identifier	ao		339262	0					
ANR	347455	Identifier	a		339262	1					
ANR	347456	PrimaryExpression	1		339262	1					
ANR	347457	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	2721:3:57272:57308	339262	2	True				
ANR	347458	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	347459	IdentifierDeclType	ut8		339262	0					
ANR	347460	Identifier	reg3		339262	1					
ANR	347461	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	347462	Identifier	reg3		339262	0					
ANR	347463	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	347464	Callee	getregmemstart		339262	0					
ANR	347465	Identifier	getregmemstart		339262	0					
ANR	347466	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347467	Argument	ao -> a [ 2 ]		339262	0					
ANR	347468	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347469	PtrMemberAccess	ao -> a		339262	0					
ANR	347470	Identifier	ao		339262	0					
ANR	347471	Identifier	a		339262	1					
ANR	347472	PrimaryExpression	2		339262	1					
ANR	347473	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	2722:3:57313:57347	339262	3	True				
ANR	347474	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		339262	0					
ANR	347475	IdentifierDeclType	st32		339262	0					
ANR	347476	Identifier	num		339262	1					
ANR	347477	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		339262	2		=			
ANR	347478	Identifier	num		339262	0					
ANR	347479	CallExpression	getnummemend ( ao -> a [ 3 ] )		339262	1					
ANR	347480	Callee	getnummemend		339262	0					
ANR	347481	Identifier	getnummemend		339262	0					
ANR	347482	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	347483	Argument	ao -> a [ 3 ]		339262	0					
ANR	347484	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	347485	PtrMemberAccess	ao -> a		339262	0					
ANR	347486	Identifier	ao		339262	0					
ANR	347487	Identifier	a		339262	1					
ANR	347488	PrimaryExpression	3		339262	1					
ANR	347489	IfStatement	if ( ( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT ) )		339262	4					
ANR	347490	Condition	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )	2724:7:57357:57424	339262	0	True				
ANR	347491	OrExpression	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	0		||			
ANR	347492	RelationalExpression	num > 1020		339262	0		>			
ANR	347493	Identifier	num		339262	0					
ANR	347494	PrimaryExpression	1020		339262	1					
ANR	347495	OrExpression	( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	1		||			
ANR	347496	RelationalExpression	num < - 1020		339262	0		<			
ANR	347497	Identifier	num		339262	0					
ANR	347498	UnaryOperationExpression	- 1020		339262	1					
ANR	347499	UnaryOperator	-		339262	0					
ANR	347500	PrimaryExpression	1020		339262	1					
ANR	347501	OrExpression	( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	1		||			
ANR	347502	EqualityExpression	num % 4 != 0		339262	0		!=			
ANR	347503	MultiplicativeExpression	num % 4		339262	0		%			
ANR	347504	Identifier	num		339262	0					
ANR	347505	PrimaryExpression	4		339262	1					
ANR	347506	PrimaryExpression	0		339262	1					
ANR	347507	EqualityExpression	ldrsel != D_BIT		339262	1		!=			
ANR	347508	Identifier	ldrsel		339262	0					
ANR	347509	Identifier	D_BIT		339262	1					
ANR	347510	CompoundStatement		1432:77:31568:31568	339262	1					
ANR	347511	ReturnStatement	return - 1 ;	2725:4:57433:57442	339262	0	True				
ANR	347512	UnaryOperationExpression	- 1		339262	0					
ANR	347513	UnaryOperator	-		339262	0					
ANR	347514	PrimaryExpression	1		339262	1					
ANR	347515	ExpressionStatement	ao -> o = 0x50e90000	2727:3:57452:57470	339262	5	True				
ANR	347516	AssignmentExpression	ao -> o = 0x50e90000		339262	0		=			
ANR	347517	PtrMemberAccess	ao -> o		339262	0					
ANR	347518	Identifier	ao		339262	0					
ANR	347519	Identifier	o		339262	1					
ANR	347520	PrimaryExpression	0x50e90000		339262	1					
ANR	347521	IfStatement	if ( num < 0 )		339262	6					
ANR	347522	Condition	num < 0	2728:7:57479:57485	339262	0	True				
ANR	347523	RelationalExpression	num < 0		339262	0		<			
ANR	347524	Identifier	num		339262	0					
ANR	347525	PrimaryExpression	0		339262	1					
ANR	347526	CompoundStatement		1436:16:31629:31629	339262	1					
ANR	347527	ExpressionStatement	num = - num	2729:4:57494:57504	339262	0	True				
ANR	347528	AssignmentExpression	num = - num		339262	0		=			
ANR	347529	Identifier	num		339262	0					
ANR	347530	UnaryOperationExpression	- num		339262	1					
ANR	347531	UnaryOperator	-		339262	0					
ANR	347532	Identifier	num		339262	1					
ANR	347533	ElseStatement	else		339262	0					
ANR	347534	CompoundStatement		1438:10:31657:31657	339262	0					
ANR	347535	ExpressionStatement	ao -> o |= 1 << 31	2731:4:57522:57538	339262	0	True				
ANR	347536	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	347537	PtrMemberAccess	ao -> o		339262	0					
ANR	347538	Identifier	ao		339262	0					
ANR	347539	Identifier	o		339262	1					
ANR	347540	ShiftExpression	1 << 31		339262	1		<<			
ANR	347541	PrimaryExpression	1		339262	0					
ANR	347542	PrimaryExpression	31		339262	1					
ANR	347543	ExpressionStatement	ao -> o |= reg1 << 4	2733:3:57548:57566	339262	7	True				
ANR	347544	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	347545	PtrMemberAccess	ao -> o		339262	0					
ANR	347546	Identifier	ao		339262	0					
ANR	347547	Identifier	o		339262	1					
ANR	347548	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	347549	Identifier	reg1		339262	0					
ANR	347550	PrimaryExpression	4		339262	1					
ANR	347551	ExpressionStatement	ao -> o |= reg2	2734:3:57571:57584	339262	8	True				
ANR	347552	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	347553	PtrMemberAccess	ao -> o		339262	0					
ANR	347554	Identifier	ao		339262	0					
ANR	347555	Identifier	o		339262	1					
ANR	347556	Identifier	reg2		339262	1					
ANR	347557	ExpressionStatement	ao -> o |= reg3 << 24	2735:3:57589:57608	339262	9	True				
ANR	347558	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	347559	PtrMemberAccess	ao -> o		339262	0					
ANR	347560	Identifier	ao		339262	0					
ANR	347561	Identifier	o		339262	1					
ANR	347562	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	347563	Identifier	reg3		339262	0					
ANR	347564	PrimaryExpression	24		339262	1					
ANR	347565	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2736:3:57613:57637	339262	10	True				
ANR	347566	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	347567	PtrMemberAccess	ao -> o		339262	0					
ANR	347568	Identifier	ao		339262	0					
ANR	347569	Identifier	o		339262	1					
ANR	347570	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	347571	ShiftExpression	num >> 2		339262	0		>>			
ANR	347572	Identifier	num		339262	0					
ANR	347573	PrimaryExpression	2		339262	1					
ANR	347574	PrimaryExpression	8		339262	1					
ANR	347575	ReturnStatement	return 4 ;	2737:3:57642:57650	339262	11	True				
ANR	347576	PrimaryExpression	4		339262	0					
ANR	347577	BreakStatement	break ;	2739:3:57667:57672	339262	24	True				
ANR	347578	Label	case THUMB_REG_REG_BRACKREGBRACK_CONST :	2740:2:57676:57714	339262	25	True				
ANR	347579	Identifier	THUMB_REG_REG_BRACKREGBRACK_CONST		339262	0					
ANR	347580	CompoundStatement		1452:3:31972:32000	339262	26					
ANR	347581	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2741:3:57721:57749	339262	0	True				
ANR	347582	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	347583	IdentifierDeclType	ut8		339262	0					
ANR	347584	Identifier	reg1		339262	1					
ANR	347585	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	347586	Identifier	reg1		339262	0					
ANR	347587	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	347588	Callee	getreg		339262	0					
ANR	347589	Identifier	getreg		339262	0					
ANR	347590	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	347591	Argument	ao -> a [ 0 ]		339262	0					
ANR	347592	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	347593	PtrMemberAccess	ao -> a		339262	0					
ANR	347594	Identifier	ao		339262	0					
ANR	347595	Identifier	a		339262	1					
ANR	347596	PrimaryExpression	0		339262	1					
ANR	347597	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2742:3:57754:57782	339262	1	True				
ANR	347598	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	347599	IdentifierDeclType	ut8		339262	0					
ANR	347600	Identifier	reg2		339262	1					
ANR	347601	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	347602	Identifier	reg2		339262	0					
ANR	347603	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	347604	Callee	getreg		339262	0					
ANR	347605	Identifier	getreg		339262	0					
ANR	347606	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	347607	Argument	ao -> a [ 1 ]		339262	0					
ANR	347608	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	347609	PtrMemberAccess	ao -> a		339262	0					
ANR	347610	Identifier	ao		339262	0					
ANR	347611	Identifier	a		339262	1					
ANR	347612	PrimaryExpression	1		339262	1					
ANR	347613	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	2743:3:57787:57826	339262	2	True				
ANR	347614	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	0					
ANR	347615	IdentifierDeclType	ut8		339262	0					
ANR	347616	Identifier	reg3		339262	1					
ANR	347617	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	2		=			
ANR	347618	Identifier	reg3		339262	0					
ANR	347619	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		339262	1					
ANR	347620	Callee	getregmemstartend		339262	0					
ANR	347621	Identifier	getregmemstartend		339262	0					
ANR	347622	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347623	Argument	ao -> a [ 2 ]		339262	0					
ANR	347624	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347625	PtrMemberAccess	ao -> a		339262	0					
ANR	347626	Identifier	ao		339262	0					
ANR	347627	Identifier	a		339262	1					
ANR	347628	PrimaryExpression	2		339262	1					
ANR	347629	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 3 ] ) ;	2744:3:57831:57859	339262	3	True				
ANR	347630	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		339262	0					
ANR	347631	IdentifierDeclType	st32		339262	0					
ANR	347632	Identifier	num		339262	1					
ANR	347633	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		339262	2		=			
ANR	347634	Identifier	num		339262	0					
ANR	347635	CallExpression	getnum ( ao -> a [ 3 ] )		339262	1					
ANR	347636	Callee	getnum		339262	0					
ANR	347637	Identifier	getnum		339262	0					
ANR	347638	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	347639	Argument	ao -> a [ 3 ]		339262	0					
ANR	347640	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	347641	PtrMemberAccess	ao -> a		339262	0					
ANR	347642	Identifier	ao		339262	0					
ANR	347643	Identifier	a		339262	1					
ANR	347644	PrimaryExpression	3		339262	1					
ANR	347645	IfStatement	if ( ( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT ) )		339262	4					
ANR	347646	Condition	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )	2745:7:57868:57935	339262	0	True				
ANR	347647	OrExpression	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	0		||			
ANR	347648	RelationalExpression	num > 1020		339262	0		>			
ANR	347649	Identifier	num		339262	0					
ANR	347650	PrimaryExpression	1020		339262	1					
ANR	347651	OrExpression	( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	1		||			
ANR	347652	RelationalExpression	num < - 1020		339262	0		<			
ANR	347653	Identifier	num		339262	0					
ANR	347654	UnaryOperationExpression	- 1020		339262	1					
ANR	347655	UnaryOperator	-		339262	0					
ANR	347656	PrimaryExpression	1020		339262	1					
ANR	347657	OrExpression	( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	1		||			
ANR	347658	EqualityExpression	num % 4 != 0		339262	0		!=			
ANR	347659	MultiplicativeExpression	num % 4		339262	0		%			
ANR	347660	Identifier	num		339262	0					
ANR	347661	PrimaryExpression	4		339262	1					
ANR	347662	PrimaryExpression	0		339262	1					
ANR	347663	EqualityExpression	ldrsel != D_BIT		339262	1		!=			
ANR	347664	Identifier	ldrsel		339262	0					
ANR	347665	Identifier	D_BIT		339262	1					
ANR	347666	CompoundStatement		1453:77:32079:32079	339262	1					
ANR	347667	ReturnStatement	return - 1 ;	2746:4:57944:57953	339262	0	True				
ANR	347668	UnaryOperationExpression	- 1		339262	0					
ANR	347669	UnaryOperator	-		339262	0					
ANR	347670	PrimaryExpression	1		339262	1					
ANR	347671	ExpressionStatement	ao -> o = 0x70e80000	2748:3:57963:57981	339262	5	True				
ANR	347672	AssignmentExpression	ao -> o = 0x70e80000		339262	0		=			
ANR	347673	PtrMemberAccess	ao -> o		339262	0					
ANR	347674	Identifier	ao		339262	0					
ANR	347675	Identifier	o		339262	1					
ANR	347676	PrimaryExpression	0x70e80000		339262	1					
ANR	347677	IfStatement	if ( num < 0 )		339262	6					
ANR	347678	Condition	num < 0	2749:7:57990:57996	339262	0	True				
ANR	347679	RelationalExpression	num < 0		339262	0		<			
ANR	347680	Identifier	num		339262	0					
ANR	347681	PrimaryExpression	0		339262	1					
ANR	347682	CompoundStatement		1457:16:32140:32140	339262	1					
ANR	347683	ExpressionStatement	num = - num	2750:4:58005:58015	339262	0	True				
ANR	347684	AssignmentExpression	num = - num		339262	0		=			
ANR	347685	Identifier	num		339262	0					
ANR	347686	UnaryOperationExpression	- num		339262	1					
ANR	347687	UnaryOperator	-		339262	0					
ANR	347688	Identifier	num		339262	1					
ANR	347689	ElseStatement	else		339262	0					
ANR	347690	CompoundStatement		1459:10:32168:32168	339262	0					
ANR	347691	ExpressionStatement	ao -> o |= 1 << 31	2752:4:58033:58049	339262	0	True				
ANR	347692	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	347693	PtrMemberAccess	ao -> o		339262	0					
ANR	347694	Identifier	ao		339262	0					
ANR	347695	Identifier	o		339262	1					
ANR	347696	ShiftExpression	1 << 31		339262	1		<<			
ANR	347697	PrimaryExpression	1		339262	0					
ANR	347698	PrimaryExpression	31		339262	1					
ANR	347699	ExpressionStatement	ao -> o |= reg1 << 4	2754:3:58059:58077	339262	7	True				
ANR	347700	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	347701	PtrMemberAccess	ao -> o		339262	0					
ANR	347702	Identifier	ao		339262	0					
ANR	347703	Identifier	o		339262	1					
ANR	347704	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	347705	Identifier	reg1		339262	0					
ANR	347706	PrimaryExpression	4		339262	1					
ANR	347707	ExpressionStatement	ao -> o |= reg2	2755:3:58082:58095	339262	8	True				
ANR	347708	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	347709	PtrMemberAccess	ao -> o		339262	0					
ANR	347710	Identifier	ao		339262	0					
ANR	347711	Identifier	o		339262	1					
ANR	347712	Identifier	reg2		339262	1					
ANR	347713	ExpressionStatement	ao -> o |= reg3 << 24	2756:3:58100:58119	339262	9	True				
ANR	347714	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	347715	PtrMemberAccess	ao -> o		339262	0					
ANR	347716	Identifier	ao		339262	0					
ANR	347717	Identifier	o		339262	1					
ANR	347718	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	347719	Identifier	reg3		339262	0					
ANR	347720	PrimaryExpression	24		339262	1					
ANR	347721	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2757:3:58124:58148	339262	10	True				
ANR	347722	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	347723	PtrMemberAccess	ao -> o		339262	0					
ANR	347724	Identifier	ao		339262	0					
ANR	347725	Identifier	o		339262	1					
ANR	347726	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	347727	ShiftExpression	num >> 2		339262	0		>>			
ANR	347728	Identifier	num		339262	0					
ANR	347729	PrimaryExpression	2		339262	1					
ANR	347730	PrimaryExpression	8		339262	1					
ANR	347731	ReturnStatement	return 4 ;	2758:3:58153:58161	339262	11	True				
ANR	347732	PrimaryExpression	4		339262	0					
ANR	347733	BreakStatement	break ;	2760:3:58178:58183	339262	27	True				
ANR	347734	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACKBANG :	2761:2:58187:58229	339262	28	True				
ANR	347735	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACKBANG		339262	0					
ANR	347736	CompoundStatement		1473:3:32484:32522	339262	29					
ANR	347737	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2762:3:58236:58264	339262	0	True				
ANR	347738	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	347739	IdentifierDeclType	ut8		339262	0					
ANR	347740	Identifier	reg1		339262	1					
ANR	347741	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	347742	Identifier	reg1		339262	0					
ANR	347743	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	347744	Callee	getreg		339262	0					
ANR	347745	Identifier	getreg		339262	0					
ANR	347746	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	347747	Argument	ao -> a [ 0 ]		339262	0					
ANR	347748	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	347749	PtrMemberAccess	ao -> a		339262	0					
ANR	347750	Identifier	ao		339262	0					
ANR	347751	Identifier	a		339262	1					
ANR	347752	PrimaryExpression	0		339262	1					
ANR	347753	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2763:3:58269:58297	339262	1	True				
ANR	347754	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	347755	IdentifierDeclType	ut8		339262	0					
ANR	347756	Identifier	reg2		339262	1					
ANR	347757	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	347758	Identifier	reg2		339262	0					
ANR	347759	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	347760	Callee	getreg		339262	0					
ANR	347761	Identifier	getreg		339262	0					
ANR	347762	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	347763	Argument	ao -> a [ 1 ]		339262	0					
ANR	347764	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	347765	PtrMemberAccess	ao -> a		339262	0					
ANR	347766	Identifier	ao		339262	0					
ANR	347767	Identifier	a		339262	1					
ANR	347768	PrimaryExpression	1		339262	1					
ANR	347769	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	2764:3:58302:58338	339262	2	True				
ANR	347770	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	347771	IdentifierDeclType	ut8		339262	0					
ANR	347772	Identifier	reg3		339262	1					
ANR	347773	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	347774	Identifier	reg3		339262	0					
ANR	347775	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	347776	Callee	getregmemstart		339262	0					
ANR	347777	Identifier	getregmemstart		339262	0					
ANR	347778	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	347779	Argument	ao -> a [ 2 ]		339262	0					
ANR	347780	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	347781	PtrMemberAccess	ao -> a		339262	0					
ANR	347782	Identifier	ao		339262	0					
ANR	347783	Identifier	a		339262	1					
ANR	347784	PrimaryExpression	2		339262	1					
ANR	347785	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 3 ] ) ;	2765:3:58343:58381	339262	3	True				
ANR	347786	IdentifierDecl	num = getnummemendbang ( ao -> a [ 3 ] )		339262	0					
ANR	347787	IdentifierDeclType	st32		339262	0					
ANR	347788	Identifier	num		339262	1					
ANR	347789	AssignmentExpression	num = getnummemendbang ( ao -> a [ 3 ] )		339262	2		=			
ANR	347790	Identifier	num		339262	0					
ANR	347791	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		339262	1					
ANR	347792	Callee	getnummemendbang		339262	0					
ANR	347793	Identifier	getnummemendbang		339262	0					
ANR	347794	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	347795	Argument	ao -> a [ 3 ]		339262	0					
ANR	347796	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	347797	PtrMemberAccess	ao -> a		339262	0					
ANR	347798	Identifier	ao		339262	0					
ANR	347799	Identifier	a		339262	1					
ANR	347800	PrimaryExpression	3		339262	1					
ANR	347801	IfStatement	if ( ( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT ) )		339262	4					
ANR	347802	Condition	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )	2766:7:58390:58457	339262	0	True				
ANR	347803	OrExpression	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	0		||			
ANR	347804	RelationalExpression	num > 1020		339262	0		>			
ANR	347805	Identifier	num		339262	0					
ANR	347806	PrimaryExpression	1020		339262	1					
ANR	347807	OrExpression	( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	1		||			
ANR	347808	RelationalExpression	num < - 1020		339262	0		<			
ANR	347809	Identifier	num		339262	0					
ANR	347810	UnaryOperationExpression	- 1020		339262	1					
ANR	347811	UnaryOperator	-		339262	0					
ANR	347812	PrimaryExpression	1020		339262	1					
ANR	347813	OrExpression	( num % 4 != 0 ) || ( ldrsel != D_BIT )		339262	1		||			
ANR	347814	EqualityExpression	num % 4 != 0		339262	0		!=			
ANR	347815	MultiplicativeExpression	num % 4		339262	0		%			
ANR	347816	Identifier	num		339262	0					
ANR	347817	PrimaryExpression	4		339262	1					
ANR	347818	PrimaryExpression	0		339262	1					
ANR	347819	EqualityExpression	ldrsel != D_BIT		339262	1		!=			
ANR	347820	Identifier	ldrsel		339262	0					
ANR	347821	Identifier	D_BIT		339262	1					
ANR	347822	CompoundStatement		1474:77:32601:32601	339262	1					
ANR	347823	ReturnStatement	return - 1 ;	2767:4:58466:58475	339262	0	True				
ANR	347824	UnaryOperationExpression	- 1		339262	0					
ANR	347825	UnaryOperator	-		339262	0					
ANR	347826	PrimaryExpression	1		339262	1					
ANR	347827	ExpressionStatement	ao -> o = 0x70e90000	2769:3:58485:58503	339262	5	True				
ANR	347828	AssignmentExpression	ao -> o = 0x70e90000		339262	0		=			
ANR	347829	PtrMemberAccess	ao -> o		339262	0					
ANR	347830	Identifier	ao		339262	0					
ANR	347831	Identifier	o		339262	1					
ANR	347832	PrimaryExpression	0x70e90000		339262	1					
ANR	347833	IfStatement	if ( num < 0 )		339262	6					
ANR	347834	Condition	num < 0	2770:7:58512:58518	339262	0	True				
ANR	347835	RelationalExpression	num < 0		339262	0		<			
ANR	347836	Identifier	num		339262	0					
ANR	347837	PrimaryExpression	0		339262	1					
ANR	347838	CompoundStatement		1478:16:32662:32662	339262	1					
ANR	347839	ExpressionStatement	num = - num	2771:4:58527:58537	339262	0	True				
ANR	347840	AssignmentExpression	num = - num		339262	0		=			
ANR	347841	Identifier	num		339262	0					
ANR	347842	UnaryOperationExpression	- num		339262	1					
ANR	347843	UnaryOperator	-		339262	0					
ANR	347844	Identifier	num		339262	1					
ANR	347845	ElseStatement	else		339262	0					
ANR	347846	CompoundStatement		1480:10:32690:32690	339262	0					
ANR	347847	ExpressionStatement	ao -> o |= 1 << 31	2773:4:58555:58571	339262	0	True				
ANR	347848	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	347849	PtrMemberAccess	ao -> o		339262	0					
ANR	347850	Identifier	ao		339262	0					
ANR	347851	Identifier	o		339262	1					
ANR	347852	ShiftExpression	1 << 31		339262	1		<<			
ANR	347853	PrimaryExpression	1		339262	0					
ANR	347854	PrimaryExpression	31		339262	1					
ANR	347855	ExpressionStatement	ao -> o |= reg1 << 4	2775:3:58581:58599	339262	7	True				
ANR	347856	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	347857	PtrMemberAccess	ao -> o		339262	0					
ANR	347858	Identifier	ao		339262	0					
ANR	347859	Identifier	o		339262	1					
ANR	347860	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	347861	Identifier	reg1		339262	0					
ANR	347862	PrimaryExpression	4		339262	1					
ANR	347863	ExpressionStatement	ao -> o |= reg2	2776:3:58604:58617	339262	8	True				
ANR	347864	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	347865	PtrMemberAccess	ao -> o		339262	0					
ANR	347866	Identifier	ao		339262	0					
ANR	347867	Identifier	o		339262	1					
ANR	347868	Identifier	reg2		339262	1					
ANR	347869	ExpressionStatement	ao -> o |= reg3 << 24	2777:3:58622:58641	339262	9	True				
ANR	347870	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	347871	PtrMemberAccess	ao -> o		339262	0					
ANR	347872	Identifier	ao		339262	0					
ANR	347873	Identifier	o		339262	1					
ANR	347874	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	347875	Identifier	reg3		339262	0					
ANR	347876	PrimaryExpression	24		339262	1					
ANR	347877	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2778:3:58646:58670	339262	10	True				
ANR	347878	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	347879	PtrMemberAccess	ao -> o		339262	0					
ANR	347880	Identifier	ao		339262	0					
ANR	347881	Identifier	o		339262	1					
ANR	347882	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	347883	ShiftExpression	num >> 2		339262	0		>>			
ANR	347884	Identifier	num		339262	0					
ANR	347885	PrimaryExpression	2		339262	1					
ANR	347886	PrimaryExpression	8		339262	1					
ANR	347887	ReturnStatement	return 4 ;	2779:3:58675:58683	339262	11	True				
ANR	347888	PrimaryExpression	4		339262	0					
ANR	347889	BreakStatement	break ;	2781:3:58700:58705	339262	30	True				
ANR	347890	Label	default :	2782:2:58709:58716	339262	31	True				
ANR	347891	Identifier	default		339262	0					
ANR	347892	ReturnStatement	return - 1 ;	2783:3:58721:58730	339262	32	True				
ANR	347893	UnaryOperationExpression	- 1		339262	0					
ANR	347894	UnaryOperator	-		339262	0					
ANR	347895	PrimaryExpression	1		339262	1					
ANR	347896	ElseStatement	else		339262	0					
ANR	347897	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT ) ) )"		339262	0					
ANR	347898	Condition	"m = opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT )"	2786:5:58749:58801	339262	0	True				
ANR	347899	AssignmentExpression	"m = opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT )"		339262	0		=			
ANR	347900	Identifier	m		339262	0					
ANR	347901	CallExpression	"opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT )"		339262	1					
ANR	347902	Callee	opmask		339262	0					
ANR	347903	Identifier	opmask		339262	0					
ANR	347904	ArgumentList	ao -> op		339262	1					
ANR	347905	Argument	ao -> op		339262	0					
ANR	347906	PtrMemberAccess	ao -> op		339262	0					
ANR	347907	Identifier	ao		339262	0					
ANR	347908	Identifier	op		339262	1					
ANR	347909	Argument	"""ldrex"""		339262	1					
ANR	347910	PrimaryExpression	"""ldrex"""		339262	0					
ANR	347911	Argument	B_BIT | H_BIT | D_BIT		339262	2					
ANR	347912	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		339262	0		|			
ANR	347913	Identifier	B_BIT		339262	0					
ANR	347914	InclusiveOrExpression	H_BIT | D_BIT		339262	1		|			
ANR	347915	Identifier	H_BIT		339262	0					
ANR	347916	Identifier	D_BIT		339262	1					
ANR	347917	CompoundStatement		1496:2:32987:33028	339262	1					
ANR	347918	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2787:2:58808:58842	339262	0	True				
ANR	347919	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	347920	IdentifierDeclType	ut64		339262	0					
ANR	347921	Identifier	argt		339262	1					
ANR	347922	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	347923	Identifier	argt		339262	0					
ANR	347924	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	347925	Callee	thumb_selector		339262	0					
ANR	347926	Identifier	thumb_selector		339262	0					
ANR	347927	ArgumentList	ao -> a		339262	1					
ANR	347928	Argument	ao -> a		339262	0					
ANR	347929	PtrMemberAccess	ao -> a		339262	0					
ANR	347930	Identifier	ao		339262	0					
ANR	347931	Identifier	a		339262	1					
ANR	347932	IdentifierDeclStatement	ut32 ldrsel = m & ( B_BIT | H_BIT | D_BIT ) ;	2788:2:58846:58887	339262	1	True				
ANR	347933	IdentifierDecl	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		339262	0					
ANR	347934	IdentifierDeclType	ut32		339262	0					
ANR	347935	Identifier	ldrsel		339262	1					
ANR	347936	AssignmentExpression	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		339262	2		=			
ANR	347937	Identifier	ldrsel		339262	0					
ANR	347938	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		339262	1		&			
ANR	347939	Identifier	m		339262	0					
ANR	347940	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		339262	1		|			
ANR	347941	Identifier	B_BIT		339262	0					
ANR	347942	InclusiveOrExpression	H_BIT | D_BIT		339262	1		|			
ANR	347943	Identifier	H_BIT		339262	0					
ANR	347944	Identifier	D_BIT		339262	1					
ANR	347945	SwitchStatement	switch ( argt )		339262	2					
ANR	347946	Condition	argt	2789:10:58899:58902	339262	0	True				
ANR	347947	Identifier	argt		339262	0					
ANR	347948	CompoundStatement		1497:16:33046:33046	339262	1					
ANR	347949	Label	case THUMB_REG_BRACKREGBRACK :	2790:2:58909:58937	339262	0	True				
ANR	347950	Identifier	THUMB_REG_BRACKREGBRACK		339262	0					
ANR	347951	CompoundStatement		1500:3:33118:33157	339262	1					
ANR	347952	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2791:3:58944:58972	339262	0	True				
ANR	347953	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	347954	IdentifierDeclType	ut8		339262	0					
ANR	347955	Identifier	reg1		339262	1					
ANR	347956	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	347957	Identifier	reg1		339262	0					
ANR	347958	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	347959	Callee	getreg		339262	0					
ANR	347960	Identifier	getreg		339262	0					
ANR	347961	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	347962	Argument	ao -> a [ 0 ]		339262	0					
ANR	347963	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	347964	PtrMemberAccess	ao -> a		339262	0					
ANR	347965	Identifier	ao		339262	0					
ANR	347966	Identifier	a		339262	1					
ANR	347967	PrimaryExpression	0		339262	1					
ANR	347968	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 1 ] ) ;	2792:3:58977:59016	339262	1	True				
ANR	347969	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 1 ] )		339262	0					
ANR	347970	IdentifierDeclType	ut8		339262	0					
ANR	347971	Identifier	reg2		339262	1					
ANR	347972	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 1 ] )		339262	2		=			
ANR	347973	Identifier	reg2		339262	0					
ANR	347974	CallExpression	getregmemstartend ( ao -> a [ 1 ] )		339262	1					
ANR	347975	Callee	getregmemstartend		339262	0					
ANR	347976	Identifier	getregmemstartend		339262	0					
ANR	347977	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	347978	Argument	ao -> a [ 1 ]		339262	0					
ANR	347979	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	347980	PtrMemberAccess	ao -> a		339262	0					
ANR	347981	Identifier	ao		339262	0					
ANR	347982	Identifier	a		339262	1					
ANR	347983	PrimaryExpression	1		339262	1					
ANR	347984	IfStatement	if ( ldrsel == B_BIT )		339262	2					
ANR	347985	Condition	ldrsel == B_BIT	2794:7:59029:59043	339262	0	True				
ANR	347986	EqualityExpression	ldrsel == B_BIT		339262	0		==			
ANR	347987	Identifier	ldrsel		339262	0					
ANR	347988	Identifier	B_BIT		339262	1					
ANR	347989	CompoundStatement		1502:24:33187:33187	339262	1					
ANR	347990	ExpressionStatement	ao -> o = 0xd0e84f0f	2795:4:59052:59070	339262	0	True				
ANR	347991	AssignmentExpression	ao -> o = 0xd0e84f0f		339262	0		=			
ANR	347992	PtrMemberAccess	ao -> o		339262	0					
ANR	347993	Identifier	ao		339262	0					
ANR	347994	Identifier	o		339262	1					
ANR	347995	PrimaryExpression	0xd0e84f0f		339262	1					
ANR	347996	ExpressionStatement	ao -> o |= reg1 << 4	2796:4:59076:59094	339262	1	True				
ANR	347997	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	347998	PtrMemberAccess	ao -> o		339262	0					
ANR	347999	Identifier	ao		339262	0					
ANR	348000	Identifier	o		339262	1					
ANR	348001	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	348002	Identifier	reg1		339262	0					
ANR	348003	PrimaryExpression	4		339262	1					
ANR	348004	ExpressionStatement	ao -> o |= reg2 << 24	2797:4:59100:59119	339262	2	True				
ANR	348005	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	348006	PtrMemberAccess	ao -> o		339262	0					
ANR	348007	Identifier	ao		339262	0					
ANR	348008	Identifier	o		339262	1					
ANR	348009	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	348010	Identifier	reg2		339262	0					
ANR	348011	PrimaryExpression	24		339262	1					
ANR	348012	ReturnStatement	return 4 ;	2798:4:59125:59133	339262	3	True				
ANR	348013	PrimaryExpression	4		339262	0					
ANR	348014	ElseStatement	else		339262	0					
ANR	348015	IfStatement	if ( ldrsel == H_BIT )		339262	0					
ANR	348016	Condition	ldrsel == H_BIT	2800:7:59152:59166	339262	0	True				
ANR	348017	EqualityExpression	ldrsel == H_BIT		339262	0		==			
ANR	348018	Identifier	ldrsel		339262	0					
ANR	348019	Identifier	H_BIT		339262	1					
ANR	348020	CompoundStatement		1508:24:33310:33310	339262	1					
ANR	348021	ExpressionStatement	ao -> o = 0xd0e85f0f	2801:4:59175:59193	339262	0	True				
ANR	348022	AssignmentExpression	ao -> o = 0xd0e85f0f		339262	0		=			
ANR	348023	PtrMemberAccess	ao -> o		339262	0					
ANR	348024	Identifier	ao		339262	0					
ANR	348025	Identifier	o		339262	1					
ANR	348026	PrimaryExpression	0xd0e85f0f		339262	1					
ANR	348027	ExpressionStatement	ao -> o |= reg1 << 4	2802:4:59199:59217	339262	1	True				
ANR	348028	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	348029	PtrMemberAccess	ao -> o		339262	0					
ANR	348030	Identifier	ao		339262	0					
ANR	348031	Identifier	o		339262	1					
ANR	348032	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	348033	Identifier	reg1		339262	0					
ANR	348034	PrimaryExpression	4		339262	1					
ANR	348035	ExpressionStatement	ao -> o |= reg2 << 24	2803:4:59223:59242	339262	2	True				
ANR	348036	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	348037	PtrMemberAccess	ao -> o		339262	0					
ANR	348038	Identifier	ao		339262	0					
ANR	348039	Identifier	o		339262	1					
ANR	348040	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	348041	Identifier	reg2		339262	0					
ANR	348042	PrimaryExpression	24		339262	1					
ANR	348043	ReturnStatement	return 4 ;	2804:4:59248:59256	339262	3	True				
ANR	348044	PrimaryExpression	4		339262	0					
ANR	348045	ElseStatement	else		339262	0					
ANR	348046	IfStatement	if ( ldrsel == 0 )		339262	0					
ANR	348047	Condition	ldrsel == 0	2806:7:59275:59285	339262	0	True				
ANR	348048	EqualityExpression	ldrsel == 0		339262	0		==			
ANR	348049	Identifier	ldrsel		339262	0					
ANR	348050	PrimaryExpression	0		339262	1					
ANR	348051	CompoundStatement		1514:20:33429:33429	339262	1					
ANR	348052	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	2807:4:59294:59332	339262	0	True				
ANR	348053	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	348054	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		339262	0					
ANR	348055	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	348056	PtrMemberAccess	ao -> a		339262	0					
ANR	348057	Identifier	ao		339262	0					
ANR	348058	Identifier	a		339262	1					
ANR	348059	PrimaryExpression	1		339262	1					
ANR	348060	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	348061	CallExpression	strlen ( ao -> a [ 1 ] )		339262	0					
ANR	348062	Callee	strlen		339262	0					
ANR	348063	Identifier	strlen		339262	0					
ANR	348064	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	348065	Argument	ao -> a [ 1 ]		339262	0					
ANR	348066	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	348067	PtrMemberAccess	ao -> a		339262	0					
ANR	348068	Identifier	ao		339262	0					
ANR	348069	Identifier	a		339262	1					
ANR	348070	PrimaryExpression	1		339262	1					
ANR	348071	PrimaryExpression	1		339262	1					
ANR	348072	PrimaryExpression	'\\0'		339262	1					
ANR	348073	ExpressionStatement	"ao -> a [ 2 ] = ""0]"""	2808:4:59338:59353	339262	1	True				
ANR	348074	AssignmentExpression	"ao -> a [ 2 ] = ""0]"""		339262	0		=			
ANR	348075	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	348076	PtrMemberAccess	ao -> a		339262	0					
ANR	348077	Identifier	ao		339262	0					
ANR	348078	Identifier	a		339262	1					
ANR	348079	PrimaryExpression	2		339262	1					
ANR	348080	PrimaryExpression	"""0]"""		339262	1					
ANR	348081	ElseStatement	else		339262	0					
ANR	348082	CompoundStatement		1517:10:33506:33506	339262	0					
ANR	348083	ReturnStatement	return - 1 ;	2810:4:59371:59380	339262	0	True				
ANR	348084	UnaryOperationExpression	- 1		339262	0					
ANR	348085	UnaryOperator	-		339262	0					
ANR	348086	PrimaryExpression	1		339262	1					
ANR	348087	Label	case THUMB_REG_BRACKREG_CONSTBRACK :	2814:2:59424:59458	339262	2	True				
ANR	348088	Identifier	THUMB_REG_BRACKREG_CONSTBRACK		339262	0					
ANR	348089	CompoundStatement		1523:3:33606:33640	339262	3					
ANR	348090	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 2 ] ) ;	2815:3:59465:59499	339262	0	True				
ANR	348091	IdentifierDecl	num = getnummemend ( ao -> a [ 2 ] )		339262	0					
ANR	348092	IdentifierDeclType	st32		339262	0					
ANR	348093	Identifier	num		339262	1					
ANR	348094	AssignmentExpression	num = getnummemend ( ao -> a [ 2 ] )		339262	2		=			
ANR	348095	Identifier	num		339262	0					
ANR	348096	CallExpression	getnummemend ( ao -> a [ 2 ] )		339262	1					
ANR	348097	Callee	getnummemend		339262	0					
ANR	348098	Identifier	getnummemend		339262	0					
ANR	348099	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	348100	Argument	ao -> a [ 2 ]		339262	0					
ANR	348101	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	348102	PtrMemberAccess	ao -> a		339262	0					
ANR	348103	Identifier	ao		339262	0					
ANR	348104	Identifier	a		339262	1					
ANR	348105	PrimaryExpression	2		339262	1					
ANR	348106	IfStatement	if ( ( ldrsel != 0 ) || ( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 ) )		339262	1					
ANR	348107	Condition	( ldrsel != 0 ) || ( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 )	2816:7:59508:59567	339262	0	True				
ANR	348108	OrExpression	( ldrsel != 0 ) || ( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 )		339262	0		||			
ANR	348109	EqualityExpression	ldrsel != 0		339262	0		!=			
ANR	348110	Identifier	ldrsel		339262	0					
ANR	348111	PrimaryExpression	0		339262	1					
ANR	348112	OrExpression	( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 )		339262	1		||			
ANR	348113	RelationalExpression	num < 0		339262	0		<			
ANR	348114	Identifier	num		339262	0					
ANR	348115	PrimaryExpression	0		339262	1					
ANR	348116	OrExpression	( num > 1020 ) || ( num % 4 != 0 )		339262	1		||			
ANR	348117	RelationalExpression	num > 1020		339262	0		>			
ANR	348118	Identifier	num		339262	0					
ANR	348119	PrimaryExpression	1020		339262	1					
ANR	348120	EqualityExpression	num % 4 != 0		339262	1		!=			
ANR	348121	MultiplicativeExpression	num % 4		339262	0		%			
ANR	348122	Identifier	num		339262	0					
ANR	348123	PrimaryExpression	4		339262	1					
ANR	348124	PrimaryExpression	0		339262	1					
ANR	348125	CompoundStatement		1524:69:33711:33711	339262	1					
ANR	348126	ReturnStatement	return - 1 ;	2817:4:59576:59585	339262	0	True				
ANR	348127	UnaryOperationExpression	- 1		339262	0					
ANR	348128	UnaryOperator	-		339262	0					
ANR	348129	PrimaryExpression	1		339262	1					
ANR	348130	ExpressionStatement	ao -> o = 0x50e8000f	2819:3:59595:59613	339262	2	True				
ANR	348131	AssignmentExpression	ao -> o = 0x50e8000f		339262	0		=			
ANR	348132	PtrMemberAccess	ao -> o		339262	0					
ANR	348133	Identifier	ao		339262	0					
ANR	348134	Identifier	o		339262	1					
ANR	348135	PrimaryExpression	0x50e8000f		339262	1					
ANR	348136	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2820:3:59618:59642	339262	3	True				
ANR	348137	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	348138	PtrMemberAccess	ao -> o		339262	0					
ANR	348139	Identifier	ao		339262	0					
ANR	348140	Identifier	o		339262	1					
ANR	348141	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	348142	ShiftExpression	num >> 2		339262	0		>>			
ANR	348143	Identifier	num		339262	0					
ANR	348144	PrimaryExpression	2		339262	1					
ANR	348145	PrimaryExpression	8		339262	1					
ANR	348146	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2821:3:59647:59676	339262	4	True				
ANR	348147	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	348148	Callee	mem_32bit_2reg		339262	0					
ANR	348149	Identifier	mem_32bit_2reg		339262	0					
ANR	348150	ArgumentList	ao		339262	1					
ANR	348151	Argument	ao		339262	0					
ANR	348152	Identifier	ao		339262	0					
ANR	348153	Argument	m		339262	1					
ANR	348154	Identifier	m		339262	0					
ANR	348155	BreakStatement	break ;	2823:3:59693:59698	339262	4	True				
ANR	348156	Label	case THUMB_REG_REG_BRACKREGBRACK :	2824:2:59702:59734	339262	5	True				
ANR	348157	Identifier	THUMB_REG_REG_BRACKREGBRACK		339262	0					
ANR	348158	CompoundStatement		1535:3:33948:33987	339262	6					
ANR	348159	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2825:3:59741:59769	339262	0	True				
ANR	348160	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	348161	IdentifierDeclType	ut8		339262	0					
ANR	348162	Identifier	reg1		339262	1					
ANR	348163	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	348164	Identifier	reg1		339262	0					
ANR	348165	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	348166	Callee	getreg		339262	0					
ANR	348167	Identifier	getreg		339262	0					
ANR	348168	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	348169	Argument	ao -> a [ 0 ]		339262	0					
ANR	348170	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	348171	PtrMemberAccess	ao -> a		339262	0					
ANR	348172	Identifier	ao		339262	0					
ANR	348173	Identifier	a		339262	1					
ANR	348174	PrimaryExpression	0		339262	1					
ANR	348175	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2826:3:59774:59802	339262	1	True				
ANR	348176	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	348177	IdentifierDeclType	ut8		339262	0					
ANR	348178	Identifier	reg2		339262	1					
ANR	348179	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	348180	Identifier	reg2		339262	0					
ANR	348181	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	348182	Callee	getreg		339262	0					
ANR	348183	Identifier	getreg		339262	0					
ANR	348184	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	348185	Argument	ao -> a [ 1 ]		339262	0					
ANR	348186	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	348187	PtrMemberAccess	ao -> a		339262	0					
ANR	348188	Identifier	ao		339262	0					
ANR	348189	Identifier	a		339262	1					
ANR	348190	PrimaryExpression	1		339262	1					
ANR	348191	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	2827:3:59807:59846	339262	2	True				
ANR	348192	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	0					
ANR	348193	IdentifierDeclType	ut8		339262	0					
ANR	348194	Identifier	reg3		339262	1					
ANR	348195	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	2		=			
ANR	348196	Identifier	reg3		339262	0					
ANR	348197	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		339262	1					
ANR	348198	Callee	getregmemstartend		339262	0					
ANR	348199	Identifier	getregmemstartend		339262	0					
ANR	348200	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	348201	Argument	ao -> a [ 2 ]		339262	0					
ANR	348202	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	348203	PtrMemberAccess	ao -> a		339262	0					
ANR	348204	Identifier	ao		339262	0					
ANR	348205	Identifier	a		339262	1					
ANR	348206	PrimaryExpression	2		339262	1					
ANR	348207	IfStatement	if ( ! ( ldrsel & D_BIT ) )		339262	3					
ANR	348208	Condition	! ( ldrsel & D_BIT )	2828:7:59855:59871	339262	0	True				
ANR	348209	UnaryOperationExpression	! ( ldrsel & D_BIT )		339262	0					
ANR	348210	UnaryOperator	!		339262	0					
ANR	348211	BitAndExpression	ldrsel & D_BIT		339262	1		&			
ANR	348212	Identifier	ldrsel		339262	0					
ANR	348213	Identifier	D_BIT		339262	1					
ANR	348214	CompoundStatement		1536:26:34015:34015	339262	1					
ANR	348215	ReturnStatement	return - 1 ;	2829:4:59880:59889	339262	0	True				
ANR	348216	UnaryOperationExpression	- 1		339262	0					
ANR	348217	UnaryOperator	-		339262	0					
ANR	348218	PrimaryExpression	1		339262	1					
ANR	348219	ExpressionStatement	ao -> o = 0xd0e87f00	2831:3:59899:59917	339262	4	True				
ANR	348220	AssignmentExpression	ao -> o = 0xd0e87f00		339262	0		=			
ANR	348221	PtrMemberAccess	ao -> o		339262	0					
ANR	348222	Identifier	ao		339262	0					
ANR	348223	Identifier	o		339262	1					
ANR	348224	PrimaryExpression	0xd0e87f00		339262	1					
ANR	348225	ExpressionStatement	ao -> o |= reg1 << 4	2832:3:59922:59940	339262	5	True				
ANR	348226	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	348227	PtrMemberAccess	ao -> o		339262	0					
ANR	348228	Identifier	ao		339262	0					
ANR	348229	Identifier	o		339262	1					
ANR	348230	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	348231	Identifier	reg1		339262	0					
ANR	348232	PrimaryExpression	4		339262	1					
ANR	348233	ExpressionStatement	ao -> o |= reg2	2833:3:59945:59958	339262	6	True				
ANR	348234	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	348235	PtrMemberAccess	ao -> o		339262	0					
ANR	348236	Identifier	ao		339262	0					
ANR	348237	Identifier	o		339262	1					
ANR	348238	Identifier	reg2		339262	1					
ANR	348239	ExpressionStatement	ao -> o |= reg3 << 24	2834:3:59963:59982	339262	7	True				
ANR	348240	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	348241	PtrMemberAccess	ao -> o		339262	0					
ANR	348242	Identifier	ao		339262	0					
ANR	348243	Identifier	o		339262	1					
ANR	348244	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	348245	Identifier	reg3		339262	0					
ANR	348246	PrimaryExpression	24		339262	1					
ANR	348247	ReturnStatement	return 4 ;	2835:3:59987:59995	339262	8	True				
ANR	348248	PrimaryExpression	4		339262	0					
ANR	348249	BreakStatement	break ;	2837:3:60004:60009	339262	7	True				
ANR	348250	Label	default :	2838:2:60013:60020	339262	8	True				
ANR	348251	Identifier	default		339262	0					
ANR	348252	ReturnStatement	return - 1 ;	2839:3:60025:60034	339262	9	True				
ANR	348253	UnaryOperationExpression	- 1		339262	0					
ANR	348254	UnaryOperator	-		339262	0					
ANR	348255	PrimaryExpression	1		339262	1					
ANR	348256	ElseStatement	else		339262	0					
ANR	348257	IfStatement	"if ( ( m = opmask ( ao -> op , ""lsl"" , S_BIT ) ) )"		339262	0					
ANR	348258	Condition	"m = opmask ( ao -> op , ""lsl"" , S_BIT )"	2842:5:60053:60087	339262	0	True				
ANR	348259	AssignmentExpression	"m = opmask ( ao -> op , ""lsl"" , S_BIT )"		339262	0		=			
ANR	348260	Identifier	m		339262	0					
ANR	348261	CallExpression	"opmask ( ao -> op , ""lsl"" , S_BIT )"		339262	1					
ANR	348262	Callee	opmask		339262	0					
ANR	348263	Identifier	opmask		339262	0					
ANR	348264	ArgumentList	ao -> op		339262	1					
ANR	348265	Argument	ao -> op		339262	0					
ANR	348266	PtrMemberAccess	ao -> op		339262	0					
ANR	348267	Identifier	ao		339262	0					
ANR	348268	Identifier	op		339262	1					
ANR	348269	Argument	"""lsl"""		339262	1					
ANR	348270	PrimaryExpression	"""lsl"""		339262	0					
ANR	348271	Argument	S_BIT		339262	2					
ANR	348272	Identifier	S_BIT		339262	0					
ANR	348273	CompoundStatement		1551:2:34235:34269	339262	1					
ANR	348274	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2843:2:60094:60128	339262	0	True				
ANR	348275	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	348276	IdentifierDeclType	ut64		339262	0					
ANR	348277	Identifier	argt		339262	1					
ANR	348278	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	348279	Identifier	argt		339262	0					
ANR	348280	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	348281	Callee	thumb_selector		339262	0					
ANR	348282	Identifier	thumb_selector		339262	0					
ANR	348283	ArgumentList	ao -> a		339262	1					
ANR	348284	Argument	ao -> a		339262	0					
ANR	348285	PtrMemberAccess	ao -> a		339262	0					
ANR	348286	Identifier	ao		339262	0					
ANR	348287	Identifier	a		339262	1					
ANR	348288	SwitchStatement	switch ( argt )		339262	1					
ANR	348289	Condition	argt	2844:10:60140:60143	339262	0	True				
ANR	348290	Identifier	argt		339262	0					
ANR	348291	CompoundStatement		1552:16:34287:34287	339262	1					
ANR	348292	Label	case THUMB_REG_REG_CONST :	2845:2:60150:60174	339262	0	True				
ANR	348293	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	348294	CompoundStatement		1556:3:34388:34416	339262	1					
ANR	348295	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2846:3:60181:60209	339262	0	True				
ANR	348296	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	348297	IdentifierDeclType	ut8		339262	0					
ANR	348298	Identifier	reg1		339262	1					
ANR	348299	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	348300	Identifier	reg1		339262	0					
ANR	348301	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	348302	Callee	getreg		339262	0					
ANR	348303	Identifier	getreg		339262	0					
ANR	348304	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	348305	Argument	ao -> a [ 0 ]		339262	0					
ANR	348306	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	348307	PtrMemberAccess	ao -> a		339262	0					
ANR	348308	Identifier	ao		339262	0					
ANR	348309	Identifier	a		339262	1					
ANR	348310	PrimaryExpression	0		339262	1					
ANR	348311	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2847:3:60214:60242	339262	1	True				
ANR	348312	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	348313	IdentifierDeclType	ut8		339262	0					
ANR	348314	Identifier	reg2		339262	1					
ANR	348315	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	348316	Identifier	reg2		339262	0					
ANR	348317	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	348318	Callee	getreg		339262	0					
ANR	348319	Identifier	getreg		339262	0					
ANR	348320	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	348321	Argument	ao -> a [ 1 ]		339262	0					
ANR	348322	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	348323	PtrMemberAccess	ao -> a		339262	0					
ANR	348324	Identifier	ao		339262	0					
ANR	348325	Identifier	a		339262	1					
ANR	348326	PrimaryExpression	1		339262	1					
ANR	348327	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	2848:3:60247:60275	339262	2	True				
ANR	348328	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	348329	IdentifierDeclType	ut32		339262	0					
ANR	348330	Identifier	num		339262	1					
ANR	348331	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	348332	Identifier	num		339262	0					
ANR	348333	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	348334	Callee	getnum		339262	0					
ANR	348335	Identifier	getnum		339262	0					
ANR	348336	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	348337	Argument	ao -> a [ 2 ]		339262	0					
ANR	348338	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	348339	PtrMemberAccess	ao -> a		339262	0					
ANR	348340	Identifier	ao		339262	0					
ANR	348341	Identifier	a		339262	1					
ANR	348342	PrimaryExpression	2		339262	1					
ANR	348343	IfStatement	if ( num > 32 )		339262	3					
ANR	348344	Condition	num > 32	2849:7:60284:60291	339262	0	True				
ANR	348345	RelationalExpression	num > 32		339262	0		>			
ANR	348346	Identifier	num		339262	0					
ANR	348347	PrimaryExpression	32		339262	1					
ANR	348348	CompoundStatement		1557:17:34435:34435	339262	1					
ANR	348349	ReturnStatement	return - 1 ;	2850:4:60300:60309	339262	0	True				
ANR	348350	UnaryOperationExpression	- 1		339262	0					
ANR	348351	UnaryOperator	-		339262	0					
ANR	348352	PrimaryExpression	1		339262	1					
ANR	348353	ExpressionStatement	ao -> o = 0x0000	2852:3:60319:60333	339262	4	True				
ANR	348354	AssignmentExpression	ao -> o = 0x0000		339262	0		=			
ANR	348355	PtrMemberAccess	ao -> o		339262	0					
ANR	348356	Identifier	ao		339262	0					
ANR	348357	Identifier	o		339262	1					
ANR	348358	PrimaryExpression	0x0000		339262	1					
ANR	348359	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	5					
ANR	348360	Condition	"std_16bit_2reg ( ao , m )"	2853:7:60345:60366	339262	0	True				
ANR	348361	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	348362	Callee	std_16bit_2reg		339262	0					
ANR	348363	Identifier	std_16bit_2reg		339262	0					
ANR	348364	ArgumentList	ao		339262	1					
ANR	348365	Argument	ao		339262	0					
ANR	348366	Identifier	ao		339262	0					
ANR	348367	Argument	m		339262	1					
ANR	348368	Identifier	m		339262	0					
ANR	348369	CompoundStatement		1561:31:34510:34510	339262	1					
ANR	348370	ExpressionStatement	ao -> o |= ( num & 0x03 ) << 14	2854:4:60375:60402	339262	0	True				
ANR	348371	AssignmentExpression	ao -> o |= ( num & 0x03 ) << 14		339262	0		|=			
ANR	348372	PtrMemberAccess	ao -> o		339262	0					
ANR	348373	Identifier	ao		339262	0					
ANR	348374	Identifier	o		339262	1					
ANR	348375	ShiftExpression	( num & 0x03 ) << 14		339262	1		<<			
ANR	348376	BitAndExpression	num & 0x03		339262	0		&			
ANR	348377	Identifier	num		339262	0					
ANR	348378	PrimaryExpression	0x03		339262	1					
ANR	348379	PrimaryExpression	14		339262	1					
ANR	348380	ExpressionStatement	ao -> o |= num >> 2	2855:4:60408:60425	339262	1	True				
ANR	348381	AssignmentExpression	ao -> o |= num >> 2		339262	0		|=			
ANR	348382	PtrMemberAccess	ao -> o		339262	0					
ANR	348383	Identifier	ao		339262	0					
ANR	348384	Identifier	o		339262	1					
ANR	348385	ShiftExpression	num >> 2		339262	1		>>			
ANR	348386	Identifier	num		339262	0					
ANR	348387	PrimaryExpression	2		339262	1					
ANR	348388	ReturnStatement	return 2 ;	2856:4:60431:60439	339262	2	True				
ANR	348389	PrimaryExpression	2		339262	0					
ANR	348390	ExpressionStatement	ao -> o = 0x4fea0000	2858:3:60449:60467	339262	6	True				
ANR	348391	AssignmentExpression	ao -> o = 0x4fea0000		339262	0		=			
ANR	348392	PtrMemberAccess	ao -> o		339262	0					
ANR	348393	Identifier	ao		339262	0					
ANR	348394	Identifier	o		339262	1					
ANR	348395	PrimaryExpression	0x4fea0000		339262	1					
ANR	348396	ExpressionStatement	ao -> o |= reg1	2859:3:60472:60485	339262	7	True				
ANR	348397	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	348398	PtrMemberAccess	ao -> o		339262	0					
ANR	348399	Identifier	ao		339262	0					
ANR	348400	Identifier	o		339262	1					
ANR	348401	Identifier	reg1		339262	1					
ANR	348402	ExpressionStatement	ao -> o |= reg2 << 8	2860:3:60490:60508	339262	8	True				
ANR	348403	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	348404	PtrMemberAccess	ao -> o		339262	0					
ANR	348405	Identifier	ao		339262	0					
ANR	348406	Identifier	o		339262	1					
ANR	348407	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	348408	Identifier	reg2		339262	0					
ANR	348409	PrimaryExpression	8		339262	1					
ANR	348410	ExpressionStatement	ao -> o |= ( num >> 2 ) << 4	2861:3:60513:60537	339262	9	True				
ANR	348411	AssignmentExpression	ao -> o |= ( num >> 2 ) << 4		339262	0		|=			
ANR	348412	PtrMemberAccess	ao -> o		339262	0					
ANR	348413	Identifier	ao		339262	0					
ANR	348414	Identifier	o		339262	1					
ANR	348415	ShiftExpression	( num >> 2 ) << 4		339262	1		<<			
ANR	348416	ShiftExpression	num >> 2		339262	0		>>			
ANR	348417	Identifier	num		339262	0					
ANR	348418	PrimaryExpression	2		339262	1					
ANR	348419	PrimaryExpression	4		339262	1					
ANR	348420	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	2862:3:60542:60568	339262	10	True				
ANR	348421	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	348422	PtrMemberAccess	ao -> o		339262	0					
ANR	348423	Identifier	ao		339262	0					
ANR	348424	Identifier	o		339262	1					
ANR	348425	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	348426	BitAndExpression	num & 0x3		339262	0		&			
ANR	348427	Identifier	num		339262	0					
ANR	348428	PrimaryExpression	0x3		339262	1					
ANR	348429	PrimaryExpression	14		339262	1					
ANR	348430	IfStatement	if ( m & S_BIT )		339262	11					
ANR	348431	Condition	m & S_BIT	2863:7:60577:60585	339262	0	True				
ANR	348432	BitAndExpression	m & S_BIT		339262	0		&			
ANR	348433	Identifier	m		339262	0					
ANR	348434	Identifier	S_BIT		339262	1					
ANR	348435	CompoundStatement		1571:18:34729:34729	339262	1					
ANR	348436	ExpressionStatement	ao -> o |= 1 << 28	2864:4:60594:60610	339262	0	True				
ANR	348437	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	348438	PtrMemberAccess	ao -> o		339262	0					
ANR	348439	Identifier	ao		339262	0					
ANR	348440	Identifier	o		339262	1					
ANR	348441	ShiftExpression	1 << 28		339262	1		<<			
ANR	348442	PrimaryExpression	1		339262	0					
ANR	348443	PrimaryExpression	28		339262	1					
ANR	348444	ReturnStatement	return 4 ;	2866:3:60620:60628	339262	12	True				
ANR	348445	PrimaryExpression	4		339262	0					
ANR	348446	BreakStatement	break ;	2868:3:60645:60650	339262	2	True				
ANR	348447	Label	case THUMB_REG_REG :	2869:2:60654:60672	339262	3	True				
ANR	348448	Identifier	THUMB_REG_REG		339262	0					
ANR	348449	CompoundStatement		1577:22:34815:34815	339262	4					
ANR	348450	ExpressionStatement	ao -> o = 0x8040	2870:3:60679:60693	339262	0	True				
ANR	348451	AssignmentExpression	ao -> o = 0x8040		339262	0		=			
ANR	348452	PtrMemberAccess	ao -> o		339262	0					
ANR	348453	Identifier	ao		339262	0					
ANR	348454	Identifier	o		339262	1					
ANR	348455	PrimaryExpression	0x8040		339262	1					
ANR	348456	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	348457	Condition	"std_16bit_2reg ( ao , m )"	2871:7:60702:60723	339262	0	True				
ANR	348458	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	348459	Callee	std_16bit_2reg		339262	0					
ANR	348460	Identifier	std_16bit_2reg		339262	0					
ANR	348461	ArgumentList	ao		339262	1					
ANR	348462	Argument	ao		339262	0					
ANR	348463	Identifier	ao		339262	0					
ANR	348464	Argument	m		339262	1					
ANR	348465	Identifier	m		339262	0					
ANR	348466	CompoundStatement		1579:31:34867:34867	339262	1					
ANR	348467	ReturnStatement	return 2 ;	2872:4:60732:60740	339262	0	True				
ANR	348468	PrimaryExpression	2		339262	0					
ANR	348469	ExpressionStatement	std_opt_2 ( ao )	2874:3:60750:60764	339262	2	True				
ANR	348470	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	348471	Callee	std_opt_2		339262	0					
ANR	348472	Identifier	std_opt_2		339262	0					
ANR	348473	ArgumentList	ao		339262	1					
ANR	348474	Argument	ao		339262	0					
ANR	348475	Identifier	ao		339262	0					
ANR	348476	Label	case THUMB_REG_REG_REG :	2877:2:60810:60832	339262	5	True				
ANR	348477	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	348478	CompoundStatement		1585:26:34975:34975	339262	6					
ANR	348479	ExpressionStatement	ao -> o = 0x00fa00f0	2878:3:60839:60857	339262	0	True				
ANR	348480	AssignmentExpression	ao -> o = 0x00fa00f0		339262	0		=			
ANR	348481	PtrMemberAccess	ao -> o		339262	0					
ANR	348482	Identifier	ao		339262	0					
ANR	348483	Identifier	o		339262	1					
ANR	348484	PrimaryExpression	0x00fa00f0		339262	1					
ANR	348485	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	2879:3:60862:60898	339262	1	True				
ANR	348486	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	348487	Callee	std_32bit_3reg		339262	0					
ANR	348488	Identifier	std_32bit_3reg		339262	0					
ANR	348489	ArgumentList	ao		339262	1					
ANR	348490	Argument	ao		339262	0					
ANR	348491	Identifier	ao		339262	0					
ANR	348492	Argument	m		339262	1					
ANR	348493	Identifier	m		339262	0					
ANR	348494	Argument	false		339262	2					
ANR	348495	Identifier	false		339262	0					
ANR	348496	BreakStatement	break ;	2881:3:60915:60920	339262	7	True				
ANR	348497	Label	default :	2882:2:60924:60931	339262	8	True				
ANR	348498	Identifier	default		339262	0					
ANR	348499	ReturnStatement	return - 1 ;	2883:3:60936:60945	339262	9	True				
ANR	348500	UnaryOperationExpression	- 1		339262	0					
ANR	348501	UnaryOperator	-		339262	0					
ANR	348502	PrimaryExpression	1		339262	1					
ANR	348503	ElseStatement	else		339262	0					
ANR	348504	IfStatement	"if ( ( m = opmask ( ao -> op , ""lsr"" , S_BIT ) ) )"		339262	0					
ANR	348505	Condition	"m = opmask ( ao -> op , ""lsr"" , S_BIT )"	2886:5:60966:61000	339262	0	True				
ANR	348506	AssignmentExpression	"m = opmask ( ao -> op , ""lsr"" , S_BIT )"		339262	0		=			
ANR	348507	Identifier	m		339262	0					
ANR	348508	CallExpression	"opmask ( ao -> op , ""lsr"" , S_BIT )"		339262	1					
ANR	348509	Callee	opmask		339262	0					
ANR	348510	Identifier	opmask		339262	0					
ANR	348511	ArgumentList	ao -> op		339262	1					
ANR	348512	Argument	ao -> op		339262	0					
ANR	348513	PtrMemberAccess	ao -> op		339262	0					
ANR	348514	Identifier	ao		339262	0					
ANR	348515	Identifier	op		339262	1					
ANR	348516	Argument	"""lsr"""		339262	1					
ANR	348517	PrimaryExpression	"""lsr"""		339262	0					
ANR	348518	Argument	S_BIT		339262	2					
ANR	348519	Identifier	S_BIT		339262	0					
ANR	348520	CompoundStatement		1595:2:35148:35182	339262	1					
ANR	348521	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2887:2:61007:61041	339262	0	True				
ANR	348522	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	348523	IdentifierDeclType	ut64		339262	0					
ANR	348524	Identifier	argt		339262	1					
ANR	348525	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	348526	Identifier	argt		339262	0					
ANR	348527	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	348528	Callee	thumb_selector		339262	0					
ANR	348529	Identifier	thumb_selector		339262	0					
ANR	348530	ArgumentList	ao -> a		339262	1					
ANR	348531	Argument	ao -> a		339262	0					
ANR	348532	PtrMemberAccess	ao -> a		339262	0					
ANR	348533	Identifier	ao		339262	0					
ANR	348534	Identifier	a		339262	1					
ANR	348535	SwitchStatement	switch ( argt )		339262	1					
ANR	348536	Condition	argt	2888:10:61053:61056	339262	0	True				
ANR	348537	Identifier	argt		339262	0					
ANR	348538	CompoundStatement		1596:16:35200:35200	339262	1					
ANR	348539	Label	case THUMB_REG_REG_CONST :	2889:2:61063:61087	339262	0	True				
ANR	348540	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	348541	CompoundStatement		1600:3:35301:35329	339262	1					
ANR	348542	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2890:3:61094:61122	339262	0	True				
ANR	348543	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	348544	IdentifierDeclType	ut8		339262	0					
ANR	348545	Identifier	reg1		339262	1					
ANR	348546	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	348547	Identifier	reg1		339262	0					
ANR	348548	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	348549	Callee	getreg		339262	0					
ANR	348550	Identifier	getreg		339262	0					
ANR	348551	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	348552	Argument	ao -> a [ 0 ]		339262	0					
ANR	348553	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	348554	PtrMemberAccess	ao -> a		339262	0					
ANR	348555	Identifier	ao		339262	0					
ANR	348556	Identifier	a		339262	1					
ANR	348557	PrimaryExpression	0		339262	1					
ANR	348558	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2891:3:61127:61155	339262	1	True				
ANR	348559	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	348560	IdentifierDeclType	ut8		339262	0					
ANR	348561	Identifier	reg2		339262	1					
ANR	348562	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	348563	Identifier	reg2		339262	0					
ANR	348564	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	348565	Callee	getreg		339262	0					
ANR	348566	Identifier	getreg		339262	0					
ANR	348567	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	348568	Argument	ao -> a [ 1 ]		339262	0					
ANR	348569	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	348570	PtrMemberAccess	ao -> a		339262	0					
ANR	348571	Identifier	ao		339262	0					
ANR	348572	Identifier	a		339262	1					
ANR	348573	PrimaryExpression	1		339262	1					
ANR	348574	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	2892:3:61160:61188	339262	2	True				
ANR	348575	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	348576	IdentifierDeclType	ut32		339262	0					
ANR	348577	Identifier	num		339262	1					
ANR	348578	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	348579	Identifier	num		339262	0					
ANR	348580	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	348581	Callee	getnum		339262	0					
ANR	348582	Identifier	getnum		339262	0					
ANR	348583	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	348584	Argument	ao -> a [ 2 ]		339262	0					
ANR	348585	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	348586	PtrMemberAccess	ao -> a		339262	0					
ANR	348587	Identifier	ao		339262	0					
ANR	348588	Identifier	a		339262	1					
ANR	348589	PrimaryExpression	2		339262	1					
ANR	348590	IfStatement	if ( num > 32 )		339262	3					
ANR	348591	Condition	num > 32	2893:7:61197:61204	339262	0	True				
ANR	348592	RelationalExpression	num > 32		339262	0		>			
ANR	348593	Identifier	num		339262	0					
ANR	348594	PrimaryExpression	32		339262	1					
ANR	348595	CompoundStatement		1601:17:35348:35348	339262	1					
ANR	348596	ReturnStatement	return - 1 ;	2894:4:61213:61222	339262	0	True				
ANR	348597	UnaryOperationExpression	- 1		339262	0					
ANR	348598	UnaryOperator	-		339262	0					
ANR	348599	PrimaryExpression	1		339262	1					
ANR	348600	ExpressionStatement	ao -> o = 0x0008	2896:3:61232:61246	339262	4	True				
ANR	348601	AssignmentExpression	ao -> o = 0x0008		339262	0		=			
ANR	348602	PtrMemberAccess	ao -> o		339262	0					
ANR	348603	Identifier	ao		339262	0					
ANR	348604	Identifier	o		339262	1					
ANR	348605	PrimaryExpression	0x0008		339262	1					
ANR	348606	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	5					
ANR	348607	Condition	"std_16bit_2reg ( ao , m )"	2897:7:61255:61276	339262	0	True				
ANR	348608	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	348609	Callee	std_16bit_2reg		339262	0					
ANR	348610	Identifier	std_16bit_2reg		339262	0					
ANR	348611	ArgumentList	ao		339262	1					
ANR	348612	Argument	ao		339262	0					
ANR	348613	Identifier	ao		339262	0					
ANR	348614	Argument	m		339262	1					
ANR	348615	Identifier	m		339262	0					
ANR	348616	CompoundStatement		1605:31:35420:35420	339262	1					
ANR	348617	ExpressionStatement	ao -> o |= ( num & 0x03 ) << 14	2898:4:61285:61312	339262	0	True				
ANR	348618	AssignmentExpression	ao -> o |= ( num & 0x03 ) << 14		339262	0		|=			
ANR	348619	PtrMemberAccess	ao -> o		339262	0					
ANR	348620	Identifier	ao		339262	0					
ANR	348621	Identifier	o		339262	1					
ANR	348622	ShiftExpression	( num & 0x03 ) << 14		339262	1		<<			
ANR	348623	BitAndExpression	num & 0x03		339262	0		&			
ANR	348624	Identifier	num		339262	0					
ANR	348625	PrimaryExpression	0x03		339262	1					
ANR	348626	PrimaryExpression	14		339262	1					
ANR	348627	ExpressionStatement	ao -> o |= num >> 2	2899:4:61318:61335	339262	1	True				
ANR	348628	AssignmentExpression	ao -> o |= num >> 2		339262	0		|=			
ANR	348629	PtrMemberAccess	ao -> o		339262	0					
ANR	348630	Identifier	ao		339262	0					
ANR	348631	Identifier	o		339262	1					
ANR	348632	ShiftExpression	num >> 2		339262	1		>>			
ANR	348633	Identifier	num		339262	0					
ANR	348634	PrimaryExpression	2		339262	1					
ANR	348635	ReturnStatement	return 2 ;	2900:4:61341:61349	339262	2	True				
ANR	348636	PrimaryExpression	2		339262	0					
ANR	348637	ExpressionStatement	ao -> o = 0x4fea1000	2902:3:61359:61377	339262	6	True				
ANR	348638	AssignmentExpression	ao -> o = 0x4fea1000		339262	0		=			
ANR	348639	PtrMemberAccess	ao -> o		339262	0					
ANR	348640	Identifier	ao		339262	0					
ANR	348641	Identifier	o		339262	1					
ANR	348642	PrimaryExpression	0x4fea1000		339262	1					
ANR	348643	ExpressionStatement	ao -> o |= reg1	2903:3:61382:61395	339262	7	True				
ANR	348644	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	348645	PtrMemberAccess	ao -> o		339262	0					
ANR	348646	Identifier	ao		339262	0					
ANR	348647	Identifier	o		339262	1					
ANR	348648	Identifier	reg1		339262	1					
ANR	348649	ExpressionStatement	ao -> o |= reg2 << 8	2904:3:61400:61418	339262	8	True				
ANR	348650	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	348651	PtrMemberAccess	ao -> o		339262	0					
ANR	348652	Identifier	ao		339262	0					
ANR	348653	Identifier	o		339262	1					
ANR	348654	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	348655	Identifier	reg2		339262	0					
ANR	348656	PrimaryExpression	8		339262	1					
ANR	348657	ExpressionStatement	ao -> o |= ( num >> 2 ) << 4	2905:3:61423:61447	339262	9	True				
ANR	348658	AssignmentExpression	ao -> o |= ( num >> 2 ) << 4		339262	0		|=			
ANR	348659	PtrMemberAccess	ao -> o		339262	0					
ANR	348660	Identifier	ao		339262	0					
ANR	348661	Identifier	o		339262	1					
ANR	348662	ShiftExpression	( num >> 2 ) << 4		339262	1		<<			
ANR	348663	ShiftExpression	num >> 2		339262	0		>>			
ANR	348664	Identifier	num		339262	0					
ANR	348665	PrimaryExpression	2		339262	1					
ANR	348666	PrimaryExpression	4		339262	1					
ANR	348667	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	2906:3:61452:61478	339262	10	True				
ANR	348668	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	348669	PtrMemberAccess	ao -> o		339262	0					
ANR	348670	Identifier	ao		339262	0					
ANR	348671	Identifier	o		339262	1					
ANR	348672	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	348673	BitAndExpression	num & 0x3		339262	0		&			
ANR	348674	Identifier	num		339262	0					
ANR	348675	PrimaryExpression	0x3		339262	1					
ANR	348676	PrimaryExpression	14		339262	1					
ANR	348677	IfStatement	if ( m & S_BIT )		339262	11					
ANR	348678	Condition	m & S_BIT	2907:7:61487:61495	339262	0	True				
ANR	348679	BitAndExpression	m & S_BIT		339262	0		&			
ANR	348680	Identifier	m		339262	0					
ANR	348681	Identifier	S_BIT		339262	1					
ANR	348682	CompoundStatement		1615:18:35639:35639	339262	1					
ANR	348683	ExpressionStatement	ao -> o |= 1 << 28	2908:4:61504:61520	339262	0	True				
ANR	348684	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	348685	PtrMemberAccess	ao -> o		339262	0					
ANR	348686	Identifier	ao		339262	0					
ANR	348687	Identifier	o		339262	1					
ANR	348688	ShiftExpression	1 << 28		339262	1		<<			
ANR	348689	PrimaryExpression	1		339262	0					
ANR	348690	PrimaryExpression	28		339262	1					
ANR	348691	ReturnStatement	return 4 ;	2910:3:61530:61538	339262	12	True				
ANR	348692	PrimaryExpression	4		339262	0					
ANR	348693	BreakStatement	break ;	2912:3:61555:61560	339262	2	True				
ANR	348694	Label	case THUMB_REG_REG :	2913:2:61564:61582	339262	3	True				
ANR	348695	Identifier	THUMB_REG_REG		339262	0					
ANR	348696	CompoundStatement		1621:22:35725:35725	339262	4					
ANR	348697	ExpressionStatement	ao -> o = 0xc040	2914:3:61589:61603	339262	0	True				
ANR	348698	AssignmentExpression	ao -> o = 0xc040		339262	0		=			
ANR	348699	PtrMemberAccess	ao -> o		339262	0					
ANR	348700	Identifier	ao		339262	0					
ANR	348701	Identifier	o		339262	1					
ANR	348702	PrimaryExpression	0xc040		339262	1					
ANR	348703	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	348704	Condition	"std_16bit_2reg ( ao , m )"	2915:7:61612:61633	339262	0	True				
ANR	348705	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	348706	Callee	std_16bit_2reg		339262	0					
ANR	348707	Identifier	std_16bit_2reg		339262	0					
ANR	348708	ArgumentList	ao		339262	1					
ANR	348709	Argument	ao		339262	0					
ANR	348710	Identifier	ao		339262	0					
ANR	348711	Argument	m		339262	1					
ANR	348712	Identifier	m		339262	0					
ANR	348713	CompoundStatement		1623:31:35777:35777	339262	1					
ANR	348714	ReturnStatement	return 2 ;	2916:4:61642:61650	339262	0	True				
ANR	348715	PrimaryExpression	2		339262	0					
ANR	348716	ExpressionStatement	std_opt_2 ( ao )	2918:3:61660:61674	339262	2	True				
ANR	348717	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	348718	Callee	std_opt_2		339262	0					
ANR	348719	Identifier	std_opt_2		339262	0					
ANR	348720	ArgumentList	ao		339262	1					
ANR	348721	Argument	ao		339262	0					
ANR	348722	Identifier	ao		339262	0					
ANR	348723	Label	case THUMB_REG_REG_REG :	2921:2:61720:61742	339262	5	True				
ANR	348724	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	348725	CompoundStatement		1629:26:35885:35885	339262	6					
ANR	348726	ExpressionStatement	ao -> o = 0x20fa00f0	2922:3:61749:61767	339262	0	True				
ANR	348727	AssignmentExpression	ao -> o = 0x20fa00f0		339262	0		=			
ANR	348728	PtrMemberAccess	ao -> o		339262	0					
ANR	348729	Identifier	ao		339262	0					
ANR	348730	Identifier	o		339262	1					
ANR	348731	PrimaryExpression	0x20fa00f0		339262	1					
ANR	348732	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	2923:3:61772:61808	339262	1	True				
ANR	348733	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	348734	Callee	std_32bit_3reg		339262	0					
ANR	348735	Identifier	std_32bit_3reg		339262	0					
ANR	348736	ArgumentList	ao		339262	1					
ANR	348737	Argument	ao		339262	0					
ANR	348738	Identifier	ao		339262	0					
ANR	348739	Argument	m		339262	1					
ANR	348740	Identifier	m		339262	0					
ANR	348741	Argument	false		339262	2					
ANR	348742	Identifier	false		339262	0					
ANR	348743	BreakStatement	break ;	2925:3:61825:61830	339262	7	True				
ANR	348744	Label	default :	2926:2:61834:61841	339262	8	True				
ANR	348745	Identifier	default		339262	0					
ANR	348746	ReturnStatement	return - 1 ;	2927:3:61846:61855	339262	9	True				
ANR	348747	UnaryOperationExpression	- 1		339262	0					
ANR	348748	UnaryOperator	-		339262	0					
ANR	348749	PrimaryExpression	1		339262	1					
ANR	348750	ElseStatement	else		339262	0					
ANR	348751	IfStatement	"if ( ( m = opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT ) ) )"		339262	0					
ANR	348752	Condition	"m = opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT )"	2930:5:61874:61918	339262	0	True				
ANR	348753	AssignmentExpression	"m = opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT )"		339262	0		=			
ANR	348754	Identifier	m		339262	0					
ANR	348755	CallExpression	"opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT )"		339262	1					
ANR	348756	Callee	opmask		339262	0					
ANR	348757	Identifier	opmask		339262	0					
ANR	348758	ArgumentList	ao -> op		339262	1					
ANR	348759	Argument	ao -> op		339262	0					
ANR	348760	PtrMemberAccess	ao -> op		339262	0					
ANR	348761	Identifier	ao		339262	0					
ANR	348762	Identifier	op		339262	1					
ANR	348763	Argument	"""mcr"""		339262	1					
ANR	348764	PrimaryExpression	"""mcr"""		339262	0					
ANR	348765	Argument	R_BIT | TWO_BIT		339262	2					
ANR	348766	InclusiveOrExpression	R_BIT | TWO_BIT		339262	0		|			
ANR	348767	Identifier	R_BIT		339262	0					
ANR	348768	Identifier	TWO_BIT		339262	1					
ANR	348769	CompoundStatement		1639:2:36066:36100	339262	1					
ANR	348770	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2931:2:61925:61959	339262	0	True				
ANR	348771	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	348772	IdentifierDeclType	ut64		339262	0					
ANR	348773	Identifier	argt		339262	1					
ANR	348774	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	348775	Identifier	argt		339262	0					
ANR	348776	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	348777	Callee	thumb_selector		339262	0					
ANR	348778	Identifier	thumb_selector		339262	0					
ANR	348779	ArgumentList	ao -> a		339262	1					
ANR	348780	Argument	ao -> a		339262	0					
ANR	348781	PtrMemberAccess	ao -> a		339262	0					
ANR	348782	Identifier	ao		339262	0					
ANR	348783	Identifier	a		339262	1					
ANR	348784	SwitchStatement	switch ( argt )		339262	1					
ANR	348785	Condition	argt	2932:10:61971:61974	339262	0	True				
ANR	348786	Identifier	argt		339262	0					
ANR	348787	CompoundStatement		1640:16:36118:36118	339262	1					
ANR	348788	Label	case THUMB_COPROC_CONST_REG_COREG_COREG :	2933:2:61981:62020	339262	0	True				
ANR	348789	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG		339262	0					
ANR	348790	CompoundStatement		1641:43:36163:36163	339262	1					
ANR	348791	ExpressionStatement	"ao -> a [ 5 ] = ""0"""	2934:3:62027:62041	339262	0	True				
ANR	348792	AssignmentExpression	"ao -> a [ 5 ] = ""0"""		339262	0		=			
ANR	348793	ArrayIndexing	ao -> a [ 5 ]		339262	0					
ANR	348794	PtrMemberAccess	ao -> a		339262	0					
ANR	348795	Identifier	ao		339262	0					
ANR	348796	Identifier	a		339262	1					
ANR	348797	PrimaryExpression	5		339262	1					
ANR	348798	PrimaryExpression	"""0"""		339262	1					
ANR	348799	Label	case THUMB_COPROC_CONST_REG_COREG_COREG_CONST :	2937:2:62087:62132	339262	2	True				
ANR	348800	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG_CONST		339262	0					
ANR	348801	CompoundStatement		1651:3:36471:36500	339262	3					
ANR	348802	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	2938:3:62139:62173	339262	0	True				
ANR	348803	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	348804	IdentifierDeclType	ut32		339262	0					
ANR	348805	Identifier	coproc		339262	1					
ANR	348806	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	348807	Identifier	coproc		339262	0					
ANR	348808	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	348809	Callee	getcoproc		339262	0					
ANR	348810	Identifier	getcoproc		339262	0					
ANR	348811	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	348812	Argument	ao -> a [ 0 ]		339262	0					
ANR	348813	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	348814	PtrMemberAccess	ao -> a		339262	0					
ANR	348815	Identifier	ao		339262	0					
ANR	348816	Identifier	a		339262	1					
ANR	348817	PrimaryExpression	0		339262	1					
ANR	348818	IdentifierDeclStatement	ut32 opc1 = getnum ( ao -> a [ 1 ] ) ;	2939:3:62178:62207	339262	1	True				
ANR	348819	IdentifierDecl	opc1 = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	348820	IdentifierDeclType	ut32		339262	0					
ANR	348821	Identifier	opc1		339262	1					
ANR	348822	AssignmentExpression	opc1 = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	348823	Identifier	opc1		339262	0					
ANR	348824	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	348825	Callee	getnum		339262	0					
ANR	348826	Identifier	getnum		339262	0					
ANR	348827	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	348828	Argument	ao -> a [ 1 ]		339262	0					
ANR	348829	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	348830	PtrMemberAccess	ao -> a		339262	0					
ANR	348831	Identifier	ao		339262	0					
ANR	348832	Identifier	a		339262	1					
ANR	348833	PrimaryExpression	1		339262	1					
ANR	348834	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	2940:3:62212:62241	339262	2	True				
ANR	348835	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	348836	IdentifierDeclType	ut32		339262	0					
ANR	348837	Identifier	reg1		339262	1					
ANR	348838	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	348839	Identifier	reg1		339262	0					
ANR	348840	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	348841	Callee	getreg		339262	0					
ANR	348842	Identifier	getreg		339262	0					
ANR	348843	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	348844	Argument	ao -> a [ 2 ]		339262	0					
ANR	348845	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	348846	PtrMemberAccess	ao -> a		339262	0					
ANR	348847	Identifier	ao		339262	0					
ANR	348848	Identifier	a		339262	1					
ANR	348849	PrimaryExpression	2		339262	1					
ANR	348850	IdentifierDeclStatement	ut32 coreg1 = getcoprocreg ( ao -> a [ 3 ] ) ;	2941:3:62246:62283	339262	3	True				
ANR	348851	IdentifierDecl	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		339262	0					
ANR	348852	IdentifierDeclType	ut32		339262	0					
ANR	348853	Identifier	coreg1		339262	1					
ANR	348854	AssignmentExpression	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	348855	Identifier	coreg1		339262	0					
ANR	348856	CallExpression	getcoprocreg ( ao -> a [ 3 ] )		339262	1					
ANR	348857	Callee	getcoprocreg		339262	0					
ANR	348858	Identifier	getcoprocreg		339262	0					
ANR	348859	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	348860	Argument	ao -> a [ 3 ]		339262	0					
ANR	348861	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	348862	PtrMemberAccess	ao -> a		339262	0					
ANR	348863	Identifier	ao		339262	0					
ANR	348864	Identifier	a		339262	1					
ANR	348865	PrimaryExpression	3		339262	1					
ANR	348866	IdentifierDeclStatement	ut32 coreg2 = getcoprocreg ( ao -> a [ 4 ] ) ;	2942:3:62288:62325	339262	4	True				
ANR	348867	IdentifierDecl	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		339262	0					
ANR	348868	IdentifierDeclType	ut32		339262	0					
ANR	348869	Identifier	coreg2		339262	1					
ANR	348870	AssignmentExpression	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		339262	2		=			
ANR	348871	Identifier	coreg2		339262	0					
ANR	348872	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		339262	1					
ANR	348873	Callee	getcoprocreg		339262	0					
ANR	348874	Identifier	getcoprocreg		339262	0					
ANR	348875	ArgumentList	ao -> a [ 4 ]		339262	1					
ANR	348876	Argument	ao -> a [ 4 ]		339262	0					
ANR	348877	ArrayIndexing	ao -> a [ 4 ]		339262	0					
ANR	348878	PtrMemberAccess	ao -> a		339262	0					
ANR	348879	Identifier	ao		339262	0					
ANR	348880	Identifier	a		339262	1					
ANR	348881	PrimaryExpression	4		339262	1					
ANR	348882	IdentifierDeclStatement	ut32 opc2 = getnum ( ao -> a [ 5 ] ) ;	2943:3:62330:62359	339262	5	True				
ANR	348883	IdentifierDecl	opc2 = getnum ( ao -> a [ 5 ] )		339262	0					
ANR	348884	IdentifierDeclType	ut32		339262	0					
ANR	348885	Identifier	opc2		339262	1					
ANR	348886	AssignmentExpression	opc2 = getnum ( ao -> a [ 5 ] )		339262	2		=			
ANR	348887	Identifier	opc2		339262	0					
ANR	348888	CallExpression	getnum ( ao -> a [ 5 ] )		339262	1					
ANR	348889	Callee	getnum		339262	0					
ANR	348890	Identifier	getnum		339262	0					
ANR	348891	ArgumentList	ao -> a [ 5 ]		339262	1					
ANR	348892	Argument	ao -> a [ 5 ]		339262	0					
ANR	348893	ArrayIndexing	ao -> a [ 5 ]		339262	0					
ANR	348894	PtrMemberAccess	ao -> a		339262	0					
ANR	348895	Identifier	ao		339262	0					
ANR	348896	Identifier	a		339262	1					
ANR	348897	PrimaryExpression	5		339262	1					
ANR	348898	IfStatement	if ( ( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT ) )		339262	6					
ANR	348899	Condition	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )	2945:7:62369:62473	339262	0	True				
ANR	348900	OrExpression	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		339262	0		||			
ANR	348901	RelationalExpression	coproc > 15		339262	0		>			
ANR	348902	Identifier	coproc		339262	0					
ANR	348903	PrimaryExpression	15		339262	1					
ANR	348904	OrExpression	( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		339262	1		||			
ANR	348905	RelationalExpression	opc1 > 7		339262	0		>			
ANR	348906	Identifier	opc1		339262	0					
ANR	348907	PrimaryExpression	7		339262	1					
ANR	348908	OrExpression	( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		339262	1		||			
ANR	348909	RelationalExpression	reg1 > 15		339262	0		>			
ANR	348910	Identifier	reg1		339262	0					
ANR	348911	PrimaryExpression	15		339262	1					
ANR	348912	OrExpression	( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		339262	1		||			
ANR	348913	RelationalExpression	coreg1 > 15		339262	0		>			
ANR	348914	Identifier	coreg1		339262	0					
ANR	348915	PrimaryExpression	15		339262	1					
ANR	348916	OrExpression	( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		339262	1		||			
ANR	348917	RelationalExpression	coreg2 > 15		339262	0		>			
ANR	348918	Identifier	coreg2		339262	0					
ANR	348919	PrimaryExpression	15		339262	1					
ANR	348920	OrExpression	( opc2 > 7 ) || ( m & R_BIT )		339262	1		||			
ANR	348921	RelationalExpression	opc2 > 7		339262	0		>			
ANR	348922	Identifier	opc2		339262	0					
ANR	348923	PrimaryExpression	7		339262	1					
ANR	348924	BitAndExpression	m & R_BIT		339262	1		&			
ANR	348925	Identifier	m		339262	0					
ANR	348926	Identifier	R_BIT		339262	1					
ANR	348927	CompoundStatement		1653:114:36617:36617	339262	1					
ANR	348928	ReturnStatement	return - 1 ;	2946:4:62482:62491	339262	0	True				
ANR	348929	UnaryOperationExpression	- 1		339262	0					
ANR	348930	UnaryOperator	-		339262	0					
ANR	348931	PrimaryExpression	1		339262	1					
ANR	348932	ExpressionStatement	ao -> o = 0x00ee1000	2949:3:62502:62520	339262	7	True				
ANR	348933	AssignmentExpression	ao -> o = 0x00ee1000		339262	0		=			
ANR	348934	PtrMemberAccess	ao -> o		339262	0					
ANR	348935	Identifier	ao		339262	0					
ANR	348936	Identifier	o		339262	1					
ANR	348937	PrimaryExpression	0x00ee1000		339262	1					
ANR	348938	IfStatement	if ( m & TWO_BIT )		339262	8					
ANR	348939	Condition	m & TWO_BIT	2950:7:62529:62539	339262	0	True				
ANR	348940	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	348941	Identifier	m		339262	0					
ANR	348942	Identifier	TWO_BIT		339262	1					
ANR	348943	CompoundStatement		1658:20:36683:36683	339262	1					
ANR	348944	ExpressionStatement	ao -> o |= 1 << 20	2951:4:62548:62564	339262	0	True				
ANR	348945	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	348946	PtrMemberAccess	ao -> o		339262	0					
ANR	348947	Identifier	ao		339262	0					
ANR	348948	Identifier	o		339262	1					
ANR	348949	ShiftExpression	1 << 20		339262	1		<<			
ANR	348950	PrimaryExpression	1		339262	0					
ANR	348951	PrimaryExpression	20		339262	1					
ANR	348952	ExpressionStatement	ao -> o |= coproc	2953:3:62574:62589	339262	9	True				
ANR	348953	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	348954	PtrMemberAccess	ao -> o		339262	0					
ANR	348955	Identifier	ao		339262	0					
ANR	348956	Identifier	o		339262	1					
ANR	348957	Identifier	coproc		339262	1					
ANR	348958	ExpressionStatement	ao -> o |= opc1 << 29	2954:3:62594:62613	339262	10	True				
ANR	348959	AssignmentExpression	ao -> o |= opc1 << 29		339262	0		|=			
ANR	348960	PtrMemberAccess	ao -> o		339262	0					
ANR	348961	Identifier	ao		339262	0					
ANR	348962	Identifier	o		339262	1					
ANR	348963	ShiftExpression	opc1 << 29		339262	1		<<			
ANR	348964	Identifier	opc1		339262	0					
ANR	348965	PrimaryExpression	29		339262	1					
ANR	348966	ExpressionStatement	ao -> o |= reg1 << 4	2955:3:62618:62636	339262	11	True				
ANR	348967	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	348968	PtrMemberAccess	ao -> o		339262	0					
ANR	348969	Identifier	ao		339262	0					
ANR	348970	Identifier	o		339262	1					
ANR	348971	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	348972	Identifier	reg1		339262	0					
ANR	348973	PrimaryExpression	4		339262	1					
ANR	348974	ExpressionStatement	ao -> o |= coreg1 << 24	2956:3:62641:62662	339262	12	True				
ANR	348975	AssignmentExpression	ao -> o |= coreg1 << 24		339262	0		|=			
ANR	348976	PtrMemberAccess	ao -> o		339262	0					
ANR	348977	Identifier	ao		339262	0					
ANR	348978	Identifier	o		339262	1					
ANR	348979	ShiftExpression	coreg1 << 24		339262	1		<<			
ANR	348980	Identifier	coreg1		339262	0					
ANR	348981	PrimaryExpression	24		339262	1					
ANR	348982	ExpressionStatement	ao -> o |= coreg2 << 8	2957:3:62667:62687	339262	13	True				
ANR	348983	AssignmentExpression	ao -> o |= coreg2 << 8		339262	0		|=			
ANR	348984	PtrMemberAccess	ao -> o		339262	0					
ANR	348985	Identifier	ao		339262	0					
ANR	348986	Identifier	o		339262	1					
ANR	348987	ShiftExpression	coreg2 << 8		339262	1		<<			
ANR	348988	Identifier	coreg2		339262	0					
ANR	348989	PrimaryExpression	8		339262	1					
ANR	348990	ExpressionStatement	ao -> o |= opc2 << 13	2958:3:62692:62711	339262	14	True				
ANR	348991	AssignmentExpression	ao -> o |= opc2 << 13		339262	0		|=			
ANR	348992	PtrMemberAccess	ao -> o		339262	0					
ANR	348993	Identifier	ao		339262	0					
ANR	348994	Identifier	o		339262	1					
ANR	348995	ShiftExpression	opc2 << 13		339262	1		<<			
ANR	348996	Identifier	opc2		339262	0					
ANR	348997	PrimaryExpression	13		339262	1					
ANR	348998	ReturnStatement	return 4 ;	2959:3:62716:62724	339262	15	True				
ANR	348999	PrimaryExpression	4		339262	0					
ANR	349000	BreakStatement	break ;	2961:3:62741:62746	339262	4	True				
ANR	349001	Label	case THUMB_COPROC_CONST_REG_REG_COREG :	2962:2:62750:62787	339262	5	True				
ANR	349002	Identifier	THUMB_COPROC_CONST_REG_REG_COREG		339262	0					
ANR	349003	CompoundStatement		1675:3:37075:37111	339262	6					
ANR	349004	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	2963:3:62794:62828	339262	0	True				
ANR	349005	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	349006	IdentifierDeclType	ut32		339262	0					
ANR	349007	Identifier	coproc		339262	1					
ANR	349008	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	349009	Identifier	coproc		339262	0					
ANR	349010	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	349011	Callee	getcoproc		339262	0					
ANR	349012	Identifier	getcoproc		339262	0					
ANR	349013	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	349014	Argument	ao -> a [ 0 ]		339262	0					
ANR	349015	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	349016	PtrMemberAccess	ao -> a		339262	0					
ANR	349017	Identifier	ao		339262	0					
ANR	349018	Identifier	a		339262	1					
ANR	349019	PrimaryExpression	0		339262	1					
ANR	349020	IdentifierDeclStatement	ut32 opc = getnum ( ao -> a [ 1 ] ) ;	2964:3:62833:62861	339262	1	True				
ANR	349021	IdentifierDecl	opc = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	349022	IdentifierDeclType	ut32		339262	0					
ANR	349023	Identifier	opc		339262	1					
ANR	349024	AssignmentExpression	opc = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	349025	Identifier	opc		339262	0					
ANR	349026	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	349027	Callee	getnum		339262	0					
ANR	349028	Identifier	getnum		339262	0					
ANR	349029	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	349030	Argument	ao -> a [ 1 ]		339262	0					
ANR	349031	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	349032	PtrMemberAccess	ao -> a		339262	0					
ANR	349033	Identifier	ao		339262	0					
ANR	349034	Identifier	a		339262	1					
ANR	349035	PrimaryExpression	1		339262	1					
ANR	349036	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	2965:3:62866:62895	339262	2	True				
ANR	349037	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	349038	IdentifierDeclType	ut32		339262	0					
ANR	349039	Identifier	reg1		339262	1					
ANR	349040	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	349041	Identifier	reg1		339262	0					
ANR	349042	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	349043	Callee	getreg		339262	0					
ANR	349044	Identifier	getreg		339262	0					
ANR	349045	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	349046	Argument	ao -> a [ 2 ]		339262	0					
ANR	349047	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	349048	PtrMemberAccess	ao -> a		339262	0					
ANR	349049	Identifier	ao		339262	0					
ANR	349050	Identifier	a		339262	1					
ANR	349051	PrimaryExpression	2		339262	1					
ANR	349052	IdentifierDeclStatement	ut32 reg2 = getreg ( ao -> a [ 3 ] ) ;	2966:3:62900:62929	339262	3	True				
ANR	349053	IdentifierDecl	reg2 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	349054	IdentifierDeclType	ut32		339262	0					
ANR	349055	Identifier	reg2		339262	1					
ANR	349056	AssignmentExpression	reg2 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	349057	Identifier	reg2		339262	0					
ANR	349058	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	349059	Callee	getreg		339262	0					
ANR	349060	Identifier	getreg		339262	0					
ANR	349061	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	349062	Argument	ao -> a [ 3 ]		339262	0					
ANR	349063	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	349064	PtrMemberAccess	ao -> a		339262	0					
ANR	349065	Identifier	ao		339262	0					
ANR	349066	Identifier	a		339262	1					
ANR	349067	PrimaryExpression	3		339262	1					
ANR	349068	IdentifierDeclStatement	ut32 coreg = getcoprocreg ( ao -> a [ 4 ] ) ;	2967:3:62934:62970	339262	4	True				
ANR	349069	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 4 ] )		339262	0					
ANR	349070	IdentifierDeclType	ut32		339262	0					
ANR	349071	Identifier	coreg		339262	1					
ANR	349072	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 4 ] )		339262	2		=			
ANR	349073	Identifier	coreg		339262	0					
ANR	349074	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		339262	1					
ANR	349075	Callee	getcoprocreg		339262	0					
ANR	349076	Identifier	getcoprocreg		339262	0					
ANR	349077	ArgumentList	ao -> a [ 4 ]		339262	1					
ANR	349078	Argument	ao -> a [ 4 ]		339262	0					
ANR	349079	ArrayIndexing	ao -> a [ 4 ]		339262	0					
ANR	349080	PtrMemberAccess	ao -> a		339262	0					
ANR	349081	Identifier	ao		339262	0					
ANR	349082	Identifier	a		339262	1					
ANR	349083	PrimaryExpression	4		339262	1					
ANR	349084	IfStatement	if ( ( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) ) )		339262	5					
ANR	349085	Condition	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )	2969:7:62980:63070	339262	0	True				
ANR	349086	OrExpression	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		339262	0		||			
ANR	349087	RelationalExpression	coproc > 15		339262	0		>			
ANR	349088	Identifier	coproc		339262	0					
ANR	349089	PrimaryExpression	15		339262	1					
ANR	349090	OrExpression	( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		339262	1		||			
ANR	349091	RelationalExpression	opc > 15		339262	0		>			
ANR	349092	Identifier	opc		339262	0					
ANR	349093	PrimaryExpression	15		339262	1					
ANR	349094	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		339262	1		||			
ANR	349095	RelationalExpression	reg1 > 15		339262	0		>			
ANR	349096	Identifier	reg1		339262	0					
ANR	349097	PrimaryExpression	15		339262	1					
ANR	349098	OrExpression	( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		339262	1		||			
ANR	349099	RelationalExpression	reg2 > 15		339262	0		>			
ANR	349100	Identifier	reg2		339262	0					
ANR	349101	PrimaryExpression	15		339262	1					
ANR	349102	OrExpression	( coreg > 15 ) || ( ! ( m & R_BIT ) )		339262	1		||			
ANR	349103	RelationalExpression	coreg > 15		339262	0		>			
ANR	349104	Identifier	coreg		339262	0					
ANR	349105	PrimaryExpression	15		339262	1					
ANR	349106	UnaryOperationExpression	! ( m & R_BIT )		339262	1					
ANR	349107	UnaryOperator	!		339262	0					
ANR	349108	BitAndExpression	m & R_BIT		339262	1		&			
ANR	349109	Identifier	m		339262	0					
ANR	349110	Identifier	R_BIT		339262	1					
ANR	349111	CompoundStatement		1677:100:37214:37214	339262	1					
ANR	349112	ReturnStatement	return - 1 ;	2970:4:63079:63088	339262	0	True				
ANR	349113	UnaryOperationExpression	- 1		339262	0					
ANR	349114	UnaryOperator	-		339262	0					
ANR	349115	PrimaryExpression	1		339262	1					
ANR	349116	ExpressionStatement	ao -> o = 0x40ec0000	2973:3:63099:63117	339262	6	True				
ANR	349117	AssignmentExpression	ao -> o = 0x40ec0000		339262	0		=			
ANR	349118	PtrMemberAccess	ao -> o		339262	0					
ANR	349119	Identifier	ao		339262	0					
ANR	349120	Identifier	o		339262	1					
ANR	349121	PrimaryExpression	0x40ec0000		339262	1					
ANR	349122	IfStatement	if ( m & TWO_BIT )		339262	7					
ANR	349123	Condition	m & TWO_BIT	2974:7:63126:63136	339262	0	True				
ANR	349124	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	349125	Identifier	m		339262	0					
ANR	349126	Identifier	TWO_BIT		339262	1					
ANR	349127	CompoundStatement		1682:20:37280:37280	339262	1					
ANR	349128	ExpressionStatement	ao -> o |= 1 << 20	2975:4:63145:63161	339262	0	True				
ANR	349129	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	349130	PtrMemberAccess	ao -> o		339262	0					
ANR	349131	Identifier	ao		339262	0					
ANR	349132	Identifier	o		339262	1					
ANR	349133	ShiftExpression	1 << 20		339262	1		<<			
ANR	349134	PrimaryExpression	1		339262	0					
ANR	349135	PrimaryExpression	20		339262	1					
ANR	349136	ExpressionStatement	ao -> o |= coproc	2977:3:63171:63186	339262	8	True				
ANR	349137	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	349138	PtrMemberAccess	ao -> o		339262	0					
ANR	349139	Identifier	ao		339262	0					
ANR	349140	Identifier	o		339262	1					
ANR	349141	Identifier	coproc		339262	1					
ANR	349142	ExpressionStatement	ao -> o |= opc << 12	2978:3:63191:63209	339262	9	True				
ANR	349143	AssignmentExpression	ao -> o |= opc << 12		339262	0		|=			
ANR	349144	PtrMemberAccess	ao -> o		339262	0					
ANR	349145	Identifier	ao		339262	0					
ANR	349146	Identifier	o		339262	1					
ANR	349147	ShiftExpression	opc << 12		339262	1		<<			
ANR	349148	Identifier	opc		339262	0					
ANR	349149	PrimaryExpression	12		339262	1					
ANR	349150	ExpressionStatement	ao -> o |= reg1 << 4	2979:3:63214:63232	339262	10	True				
ANR	349151	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	349152	PtrMemberAccess	ao -> o		339262	0					
ANR	349153	Identifier	ao		339262	0					
ANR	349154	Identifier	o		339262	1					
ANR	349155	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	349156	Identifier	reg1		339262	0					
ANR	349157	PrimaryExpression	4		339262	1					
ANR	349158	ExpressionStatement	ao -> o |= reg2 << 24	2980:3:63237:63256	339262	11	True				
ANR	349159	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	349160	PtrMemberAccess	ao -> o		339262	0					
ANR	349161	Identifier	ao		339262	0					
ANR	349162	Identifier	o		339262	1					
ANR	349163	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	349164	Identifier	reg2		339262	0					
ANR	349165	PrimaryExpression	24		339262	1					
ANR	349166	ExpressionStatement	ao -> o |= coreg << 8	2981:3:63261:63280	339262	12	True				
ANR	349167	AssignmentExpression	ao -> o |= coreg << 8		339262	0		|=			
ANR	349168	PtrMemberAccess	ao -> o		339262	0					
ANR	349169	Identifier	ao		339262	0					
ANR	349170	Identifier	o		339262	1					
ANR	349171	ShiftExpression	coreg << 8		339262	1		<<			
ANR	349172	Identifier	coreg		339262	0					
ANR	349173	PrimaryExpression	8		339262	1					
ANR	349174	ReturnStatement	return 4 ;	2982:3:63285:63293	339262	13	True				
ANR	349175	PrimaryExpression	4		339262	0					
ANR	349176	BreakStatement	break ;	2984:3:63310:63315	339262	7	True				
ANR	349177	Label	default :	2985:2:63319:63326	339262	8	True				
ANR	349178	Identifier	default		339262	0					
ANR	349179	ReturnStatement	return - 1 ;	2986:3:63331:63340	339262	9	True				
ANR	349180	UnaryOperationExpression	- 1		339262	0					
ANR	349181	UnaryOperator	-		339262	0					
ANR	349182	PrimaryExpression	1		339262	1					
ANR	349183	ElseStatement	else		339262	0					
ANR	349184	IfStatement	"if ( ( m = opmask ( ao -> op , ""mla"" , 0 ) ) )"		339262	0					
ANR	349185	Condition	"m = opmask ( ao -> op , ""mla"" , 0 )"	2989:5:63359:63389	339262	0	True				
ANR	349186	AssignmentExpression	"m = opmask ( ao -> op , ""mla"" , 0 )"		339262	0		=			
ANR	349187	Identifier	m		339262	0					
ANR	349188	CallExpression	"opmask ( ao -> op , ""mla"" , 0 )"		339262	1					
ANR	349189	Callee	opmask		339262	0					
ANR	349190	Identifier	opmask		339262	0					
ANR	349191	ArgumentList	ao -> op		339262	1					
ANR	349192	Argument	ao -> op		339262	0					
ANR	349193	PtrMemberAccess	ao -> op		339262	0					
ANR	349194	Identifier	ao		339262	0					
ANR	349195	Identifier	op		339262	1					
ANR	349196	Argument	"""mla"""		339262	1					
ANR	349197	PrimaryExpression	"""mla"""		339262	0					
ANR	349198	Argument	0		339262	2					
ANR	349199	PrimaryExpression	0		339262	0					
ANR	349200	CompoundStatement		1698:2:37537:37571	339262	1					
ANR	349201	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2990:2:63396:63430	339262	0	True				
ANR	349202	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	349203	IdentifierDeclType	ut64		339262	0					
ANR	349204	Identifier	argt		339262	1					
ANR	349205	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	349206	Identifier	argt		339262	0					
ANR	349207	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	349208	Callee	thumb_selector		339262	0					
ANR	349209	Identifier	thumb_selector		339262	0					
ANR	349210	ArgumentList	ao -> a		339262	1					
ANR	349211	Argument	ao -> a		339262	0					
ANR	349212	PtrMemberAccess	ao -> a		339262	0					
ANR	349213	Identifier	ao		339262	0					
ANR	349214	Identifier	a		339262	1					
ANR	349215	SwitchStatement	switch ( argt )		339262	1					
ANR	349216	Condition	argt	2991:10:63442:63445	339262	0	True				
ANR	349217	Identifier	argt		339262	0					
ANR	349218	CompoundStatement		1699:16:37589:37589	339262	1					
ANR	349219	Label	case THUMB_REG_REG_REG_REG :	2992:2:63452:63478	339262	0	True				
ANR	349220	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	349221	CompoundStatement		1701:3:37626:37655	339262	1					
ANR	349222	IdentifierDeclStatement	ut32 reg4 = getreg ( ao -> a [ 3 ] ) ;	2993:3:63485:63514	339262	0	True				
ANR	349223	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	349224	IdentifierDeclType	ut32		339262	0					
ANR	349225	Identifier	reg4		339262	1					
ANR	349226	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	349227	Identifier	reg4		339262	0					
ANR	349228	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	349229	Callee	getreg		339262	0					
ANR	349230	Identifier	getreg		339262	0					
ANR	349231	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	349232	Argument	ao -> a [ 3 ]		339262	0					
ANR	349233	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	349234	PtrMemberAccess	ao -> a		339262	0					
ANR	349235	Identifier	ao		339262	0					
ANR	349236	Identifier	a		339262	1					
ANR	349237	PrimaryExpression	3		339262	1					
ANR	349238	IfStatement	if ( reg4 > 15 )		339262	1					
ANR	349239	Condition	reg4 > 15	2994:7:63523:63531	339262	0	True				
ANR	349240	RelationalExpression	reg4 > 15		339262	0		>			
ANR	349241	Identifier	reg4		339262	0					
ANR	349242	PrimaryExpression	15		339262	1					
ANR	349243	CompoundStatement		1702:18:37675:37675	339262	1					
ANR	349244	ReturnStatement	return - 1 ;	2995:4:63540:63549	339262	0	True				
ANR	349245	UnaryOperationExpression	- 1		339262	0					
ANR	349246	UnaryOperator	-		339262	0					
ANR	349247	PrimaryExpression	1		339262	1					
ANR	349248	ExpressionStatement	ao -> o = 0x00fb0000	2997:3:63559:63577	339262	2	True				
ANR	349249	AssignmentExpression	ao -> o = 0x00fb0000		339262	0		=			
ANR	349250	PtrMemberAccess	ao -> o		339262	0					
ANR	349251	Identifier	ao		339262	0					
ANR	349252	Identifier	o		339262	1					
ANR	349253	PrimaryExpression	0x00fb0000		339262	1					
ANR	349254	ExpressionStatement	ao -> o |= reg4 << 4	2998:3:63582:63600	339262	3	True				
ANR	349255	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	349256	PtrMemberAccess	ao -> o		339262	0					
ANR	349257	Identifier	ao		339262	0					
ANR	349258	Identifier	o		339262	1					
ANR	349259	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	349260	Identifier	reg4		339262	0					
ANR	349261	PrimaryExpression	4		339262	1					
ANR	349262	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3000:3:63606:63642	339262	4	True				
ANR	349263	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	349264	Callee	std_32bit_3reg		339262	0					
ANR	349265	Identifier	std_32bit_3reg		339262	0					
ANR	349266	ArgumentList	ao		339262	1					
ANR	349267	Argument	ao		339262	0					
ANR	349268	Identifier	ao		339262	0					
ANR	349269	Argument	m		339262	1					
ANR	349270	Identifier	m		339262	0					
ANR	349271	Argument	false		339262	2					
ANR	349272	Identifier	false		339262	0					
ANR	349273	BreakStatement	break ;	3002:3:63659:63664	339262	2	True				
ANR	349274	Label	default :	3003:2:63668:63675	339262	3	True				
ANR	349275	Identifier	default		339262	0					
ANR	349276	ReturnStatement	return - 1 ;	3004:3:63680:63689	339262	4	True				
ANR	349277	UnaryOperationExpression	- 1		339262	0					
ANR	349278	UnaryOperator	-		339262	0					
ANR	349279	PrimaryExpression	1		339262	1					
ANR	349280	ElseStatement	else		339262	0					
ANR	349281	IfStatement	"if ( ( m = opmask ( ao -> op , ""mls"" , 0 ) ) )"		339262	0					
ANR	349282	Condition	"m = opmask ( ao -> op , ""mls"" , 0 )"	3007:5:63708:63738	339262	0	True				
ANR	349283	AssignmentExpression	"m = opmask ( ao -> op , ""mls"" , 0 )"		339262	0		=			
ANR	349284	Identifier	m		339262	0					
ANR	349285	CallExpression	"opmask ( ao -> op , ""mls"" , 0 )"		339262	1					
ANR	349286	Callee	opmask		339262	0					
ANR	349287	Identifier	opmask		339262	0					
ANR	349288	ArgumentList	ao -> op		339262	1					
ANR	349289	Argument	ao -> op		339262	0					
ANR	349290	PtrMemberAccess	ao -> op		339262	0					
ANR	349291	Identifier	ao		339262	0					
ANR	349292	Identifier	op		339262	1					
ANR	349293	Argument	"""mls"""		339262	1					
ANR	349294	PrimaryExpression	"""mls"""		339262	0					
ANR	349295	Argument	0		339262	2					
ANR	349296	PrimaryExpression	0		339262	0					
ANR	349297	CompoundStatement		1716:2:37886:37920	339262	1					
ANR	349298	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3008:2:63745:63779	339262	0	True				
ANR	349299	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	349300	IdentifierDeclType	ut64		339262	0					
ANR	349301	Identifier	argt		339262	1					
ANR	349302	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	349303	Identifier	argt		339262	0					
ANR	349304	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	349305	Callee	thumb_selector		339262	0					
ANR	349306	Identifier	thumb_selector		339262	0					
ANR	349307	ArgumentList	ao -> a		339262	1					
ANR	349308	Argument	ao -> a		339262	0					
ANR	349309	PtrMemberAccess	ao -> a		339262	0					
ANR	349310	Identifier	ao		339262	0					
ANR	349311	Identifier	a		339262	1					
ANR	349312	SwitchStatement	switch ( argt )		339262	1					
ANR	349313	Condition	argt	3009:10:63791:63794	339262	0	True				
ANR	349314	Identifier	argt		339262	0					
ANR	349315	CompoundStatement		1717:16:37938:37938	339262	1					
ANR	349316	Label	case THUMB_REG_REG_REG_REG :	3010:2:63801:63827	339262	0	True				
ANR	349317	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	349318	CompoundStatement		1719:3:37975:38004	339262	1					
ANR	349319	IdentifierDeclStatement	ut32 reg4 = getreg ( ao -> a [ 3 ] ) ;	3011:3:63834:63863	339262	0	True				
ANR	349320	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	349321	IdentifierDeclType	ut32		339262	0					
ANR	349322	Identifier	reg4		339262	1					
ANR	349323	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	349324	Identifier	reg4		339262	0					
ANR	349325	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	349326	Callee	getreg		339262	0					
ANR	349327	Identifier	getreg		339262	0					
ANR	349328	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	349329	Argument	ao -> a [ 3 ]		339262	0					
ANR	349330	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	349331	PtrMemberAccess	ao -> a		339262	0					
ANR	349332	Identifier	ao		339262	0					
ANR	349333	Identifier	a		339262	1					
ANR	349334	PrimaryExpression	3		339262	1					
ANR	349335	IfStatement	if ( reg4 > 15 )		339262	1					
ANR	349336	Condition	reg4 > 15	3012:7:63872:63880	339262	0	True				
ANR	349337	RelationalExpression	reg4 > 15		339262	0		>			
ANR	349338	Identifier	reg4		339262	0					
ANR	349339	PrimaryExpression	15		339262	1					
ANR	349340	CompoundStatement		1720:18:38024:38024	339262	1					
ANR	349341	ReturnStatement	return - 1 ;	3013:4:63889:63898	339262	0	True				
ANR	349342	UnaryOperationExpression	- 1		339262	0					
ANR	349343	UnaryOperator	-		339262	0					
ANR	349344	PrimaryExpression	1		339262	1					
ANR	349345	ExpressionStatement	ao -> o = 0x00fb1000	3015:3:63908:63926	339262	2	True				
ANR	349346	AssignmentExpression	ao -> o = 0x00fb1000		339262	0		=			
ANR	349347	PtrMemberAccess	ao -> o		339262	0					
ANR	349348	Identifier	ao		339262	0					
ANR	349349	Identifier	o		339262	1					
ANR	349350	PrimaryExpression	0x00fb1000		339262	1					
ANR	349351	ExpressionStatement	ao -> o |= reg4 << 4	3016:3:63931:63949	339262	3	True				
ANR	349352	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	349353	PtrMemberAccess	ao -> o		339262	0					
ANR	349354	Identifier	ao		339262	0					
ANR	349355	Identifier	o		339262	1					
ANR	349356	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	349357	Identifier	reg4		339262	0					
ANR	349358	PrimaryExpression	4		339262	1					
ANR	349359	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3018:3:63955:63991	339262	4	True				
ANR	349360	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	349361	Callee	std_32bit_3reg		339262	0					
ANR	349362	Identifier	std_32bit_3reg		339262	0					
ANR	349363	ArgumentList	ao		339262	1					
ANR	349364	Argument	ao		339262	0					
ANR	349365	Identifier	ao		339262	0					
ANR	349366	Argument	m		339262	1					
ANR	349367	Identifier	m		339262	0					
ANR	349368	Argument	false		339262	2					
ANR	349369	Identifier	false		339262	0					
ANR	349370	BreakStatement	break ;	3020:3:64008:64013	339262	2	True				
ANR	349371	Label	default :	3021:2:64017:64024	339262	3	True				
ANR	349372	Identifier	default		339262	0					
ANR	349373	ReturnStatement	return - 1 ;	3022:3:64029:64038	339262	4	True				
ANR	349374	UnaryOperationExpression	- 1		339262	0					
ANR	349375	UnaryOperator	-		339262	0					
ANR	349376	PrimaryExpression	1		339262	1					
ANR	349377	ElseStatement	else		339262	0					
ANR	349378	IfStatement	"if ( ( m = opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT ) ) )"		339262	0					
ANR	349379	Condition	"m = opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT )"	3025:5:64057:64107	339262	0	True				
ANR	349380	AssignmentExpression	"m = opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT )"		339262	0		=			
ANR	349381	Identifier	m		339262	0					
ANR	349382	CallExpression	"opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT )"		339262	1					
ANR	349383	Callee	opmask		339262	0					
ANR	349384	Identifier	opmask		339262	0					
ANR	349385	ArgumentList	ao -> op		339262	1					
ANR	349386	Argument	ao -> op		339262	0					
ANR	349387	PtrMemberAccess	ao -> op		339262	0					
ANR	349388	Identifier	ao		339262	0					
ANR	349389	Identifier	op		339262	1					
ANR	349390	Argument	"""mov"""		339262	1					
ANR	349391	PrimaryExpression	"""mov"""		339262	0					
ANR	349392	Argument	S_BIT | W_BIT | T_BIT		339262	2					
ANR	349393	InclusiveOrExpression	S_BIT | W_BIT | T_BIT		339262	0		|			
ANR	349394	Identifier	S_BIT		339262	0					
ANR	349395	InclusiveOrExpression	W_BIT | T_BIT		339262	1		|			
ANR	349396	Identifier	W_BIT		339262	0					
ANR	349397	Identifier	T_BIT		339262	1					
ANR	349398	CompoundStatement		1734:2:38255:38289	339262	1					
ANR	349399	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3026:2:64114:64148	339262	0	True				
ANR	349400	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	349401	IdentifierDeclType	ut64		339262	0					
ANR	349402	Identifier	argt		339262	1					
ANR	349403	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	349404	Identifier	argt		339262	0					
ANR	349405	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	349406	Callee	thumb_selector		339262	0					
ANR	349407	Identifier	thumb_selector		339262	0					
ANR	349408	ArgumentList	ao -> a		339262	1					
ANR	349409	Argument	ao -> a		339262	0					
ANR	349410	PtrMemberAccess	ao -> a		339262	0					
ANR	349411	Identifier	ao		339262	0					
ANR	349412	Identifier	a		339262	1					
ANR	349413	SwitchStatement	switch ( argt )		339262	1					
ANR	349414	Condition	argt	3027:10:64160:64163	339262	0	True				
ANR	349415	Identifier	argt		339262	0					
ANR	349416	CompoundStatement		1735:16:38307:38307	339262	1					
ANR	349417	Label	case THUMB_REG_CONST :	3028:2:64170:64190	339262	0	True				
ANR	349418	Identifier	THUMB_REG_CONST		339262	0					
ANR	349419	CompoundStatement		1739:3:38388:38416	339262	1					
ANR	349420	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	3029:3:64197:64226	339262	0	True				
ANR	349421	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	349422	IdentifierDeclType	ut32		339262	0					
ANR	349423	Identifier	reg1		339262	1					
ANR	349424	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	349425	Identifier	reg1		339262	0					
ANR	349426	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	349427	Callee	getreg		339262	0					
ANR	349428	Identifier	getreg		339262	0					
ANR	349429	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	349430	Argument	ao -> a [ 0 ]		339262	0					
ANR	349431	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	349432	PtrMemberAccess	ao -> a		339262	0					
ANR	349433	Identifier	ao		339262	0					
ANR	349434	Identifier	a		339262	1					
ANR	349435	PrimaryExpression	0		339262	1					
ANR	349436	ExpressionStatement	err = false	3030:3:64231:64242	339262	1	True				
ANR	349437	AssignmentExpression	err = false		339262	0		=			
ANR	349438	Identifier	err		339262	0					
ANR	349439	Identifier	false		339262	1					
ANR	349440	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	3031:3:64247:64275	339262	2	True				
ANR	349441	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	349442	IdentifierDeclType	ut32		339262	0					
ANR	349443	Identifier	num		339262	1					
ANR	349444	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	349445	Identifier	num		339262	0					
ANR	349446	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	349447	Callee	getnum		339262	0					
ANR	349448	Identifier	getnum		339262	0					
ANR	349449	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	349450	Argument	ao -> a [ 1 ]		339262	0					
ANR	349451	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	349452	PtrMemberAccess	ao -> a		339262	0					
ANR	349453	Identifier	ao		339262	0					
ANR	349454	Identifier	a		339262	1					
ANR	349455	PrimaryExpression	1		339262	1					
ANR	349456	IfStatement	if ( reg1 > 15 )		339262	3					
ANR	349457	Condition	reg1 > 15	3033:7:64285:64293	339262	0	True				
ANR	349458	RelationalExpression	reg1 > 15		339262	0		>			
ANR	349459	Identifier	reg1		339262	0					
ANR	349460	PrimaryExpression	15		339262	1					
ANR	349461	CompoundStatement		1741:18:38437:38437	339262	1					
ANR	349462	ReturnStatement	return - 1 ;	3034:4:64302:64311	339262	0	True				
ANR	349463	UnaryOperationExpression	- 1		339262	0					
ANR	349464	UnaryOperator	-		339262	0					
ANR	349465	PrimaryExpression	1		339262	1					
ANR	349466	IfStatement	if ( ( m & W_BIT ) || ( m & T_BIT ) )		339262	4					
ANR	349467	Condition	( m & W_BIT ) || ( m & T_BIT )	3037:7:64329:64354	339262	0	True				
ANR	349468	OrExpression	( m & W_BIT ) || ( m & T_BIT )		339262	0		||			
ANR	349469	BitAndExpression	m & W_BIT		339262	0		&			
ANR	349470	Identifier	m		339262	0					
ANR	349471	Identifier	W_BIT		339262	1					
ANR	349472	BitAndExpression	m & T_BIT		339262	1		&			
ANR	349473	Identifier	m		339262	0					
ANR	349474	Identifier	T_BIT		339262	1					
ANR	349475	CompoundStatement		1746:4:38504:38533	339262	1					
ANR	349476	IdentifierDeclStatement	ut32 wnum = getnum ( ao -> a [ 1 ] ) ;	3038:4:64363:64392	339262	0	True				
ANR	349477	IdentifierDecl	wnum = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	349478	IdentifierDeclType	ut32		339262	0					
ANR	349479	Identifier	wnum		339262	1					
ANR	349480	AssignmentExpression	wnum = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	349481	Identifier	wnum		339262	0					
ANR	349482	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	349483	Callee	getnum		339262	0					
ANR	349484	Identifier	getnum		339262	0					
ANR	349485	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	349486	Argument	ao -> a [ 1 ]		339262	0					
ANR	349487	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	349488	PtrMemberAccess	ao -> a		339262	0					
ANR	349489	Identifier	ao		339262	0					
ANR	349490	Identifier	a		339262	1					
ANR	349491	PrimaryExpression	1		339262	1					
ANR	349492	IfStatement	if ( wnum > 65535 )		339262	1					
ANR	349493	Condition	wnum > 65535	3039:8:64402:64413	339262	0	True				
ANR	349494	RelationalExpression	wnum > 65535		339262	0		>			
ANR	349495	Identifier	wnum		339262	0					
ANR	349496	PrimaryExpression	65535		339262	1					
ANR	349497	CompoundStatement		1747:22:38557:38557	339262	1					
ANR	349498	ReturnStatement	return - 1 ;	3040:5:64423:64432	339262	0	True				
ANR	349499	UnaryOperationExpression	- 1		339262	0					
ANR	349500	UnaryOperator	-		339262	0					
ANR	349501	PrimaryExpression	1		339262	1					
ANR	349502	ExpressionStatement	ao -> o = 0x40f20000	3042:4:64444:64462	339262	2	True				
ANR	349503	AssignmentExpression	ao -> o = 0x40f20000		339262	0		=			
ANR	349504	PtrMemberAccess	ao -> o		339262	0					
ANR	349505	Identifier	ao		339262	0					
ANR	349506	Identifier	o		339262	1					
ANR	349507	PrimaryExpression	0x40f20000		339262	1					
ANR	349508	IfStatement	if ( m & T_BIT )		339262	3					
ANR	349509	Condition	m & T_BIT	3043:8:64472:64480	339262	0	True				
ANR	349510	BitAndExpression	m & T_BIT		339262	0		&			
ANR	349511	Identifier	m		339262	0					
ANR	349512	Identifier	T_BIT		339262	1					
ANR	349513	CompoundStatement		1751:19:38624:38624	339262	1					
ANR	349514	ExpressionStatement	ao -> o |= 1 << 31	3044:5:64490:64506	339262	0	True				
ANR	349515	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	349516	PtrMemberAccess	ao -> o		339262	0					
ANR	349517	Identifier	ao		339262	0					
ANR	349518	Identifier	o		339262	1					
ANR	349519	ShiftExpression	1 << 31		339262	1		<<			
ANR	349520	PrimaryExpression	1		339262	0					
ANR	349521	PrimaryExpression	31		339262	1					
ANR	349522	ExpressionStatement	ao -> o |= reg1	3046:4:64518:64531	339262	4	True				
ANR	349523	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	349524	PtrMemberAccess	ao -> o		339262	0					
ANR	349525	Identifier	ao		339262	0					
ANR	349526	Identifier	o		339262	1					
ANR	349527	Identifier	reg1		339262	1					
ANR	349528	ExpressionStatement	ao -> o |= getthzeroimmed16 ( wnum )	3047:4:64537:64569	339262	5	True				
ANR	349529	AssignmentExpression	ao -> o |= getthzeroimmed16 ( wnum )		339262	0		|=			
ANR	349530	PtrMemberAccess	ao -> o		339262	0					
ANR	349531	Identifier	ao		339262	0					
ANR	349532	Identifier	o		339262	1					
ANR	349533	CallExpression	getthzeroimmed16 ( wnum )		339262	1					
ANR	349534	Callee	getthzeroimmed16		339262	0					
ANR	349535	Identifier	getthzeroimmed16		339262	0					
ANR	349536	ArgumentList	wnum		339262	1					
ANR	349537	Argument	wnum		339262	0					
ANR	349538	Identifier	wnum		339262	0					
ANR	349539	ReturnStatement	return 4 ;	3048:4:64575:64583	339262	6	True				
ANR	349540	PrimaryExpression	4		339262	0					
ANR	349541	IfStatement	if ( err )		339262	5					
ANR	349542	Condition	err	3051:7:64601:64603	339262	0	True				
ANR	349543	Identifier	err		339262	0					
ANR	349544	CompoundStatement		1759:12:38747:38747	339262	1					
ANR	349545	ReturnStatement	return - 1 ;	3052:4:64612:64621	339262	0	True				
ANR	349546	UnaryOperationExpression	- 1		339262	0					
ANR	349547	UnaryOperator	-		339262	0					
ANR	349548	PrimaryExpression	1		339262	1					
ANR	349549	IfStatement	if ( ( num < 256 ) && ( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		339262	6					
ANR	349550	Condition	( num < 256 ) && ( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) )	3055:7:64639:64684	339262	0	True				
ANR	349551	AndExpression	( num < 256 ) && ( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	349552	RelationalExpression	num < 256		339262	0		<			
ANR	349553	Identifier	num		339262	0					
ANR	349554	PrimaryExpression	256		339262	1					
ANR	349555	AndExpression	( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	349556	RelationalExpression	reg1 < 8		339262	0		<			
ANR	349557	Identifier	reg1		339262	0					
ANR	349558	PrimaryExpression	8		339262	1					
ANR	349559	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	349560	UnaryOperator	!		339262	0					
ANR	349561	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	349562	Identifier	m		339262	0					
ANR	349563	Identifier	DOTW_BIT		339262	1					
ANR	349564	CompoundStatement		1763:55:38828:38828	339262	1					
ANR	349565	ExpressionStatement	ao -> o = 0x0020	3056:4:64693:64707	339262	0	True				
ANR	349566	AssignmentExpression	ao -> o = 0x0020		339262	0		=			
ANR	349567	PtrMemberAccess	ao -> o		339262	0					
ANR	349568	Identifier	ao		339262	0					
ANR	349569	Identifier	o		339262	1					
ANR	349570	PrimaryExpression	0x0020		339262	1					
ANR	349571	ExpressionStatement	ao -> o |= reg1	3057:4:64713:64726	339262	1	True				
ANR	349572	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	349573	PtrMemberAccess	ao -> o		339262	0					
ANR	349574	Identifier	ao		339262	0					
ANR	349575	Identifier	o		339262	1					
ANR	349576	Identifier	reg1		339262	1					
ANR	349577	ExpressionStatement	ao -> o |= num << 8	3058:4:64732:64749	339262	2	True				
ANR	349578	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	349579	PtrMemberAccess	ao -> o		339262	0					
ANR	349580	Identifier	ao		339262	0					
ANR	349581	Identifier	o		339262	1					
ANR	349582	ShiftExpression	num << 8		339262	1		<<			
ANR	349583	Identifier	num		339262	0					
ANR	349584	PrimaryExpression	8		339262	1					
ANR	349585	ReturnStatement	return 2 ;	3059:4:64755:64763	339262	3	True				
ANR	349586	PrimaryExpression	2		339262	0					
ANR	349587	ExpressionStatement	ao -> o = 0x4ff00000	3062:3:64778:64796	339262	7	True				
ANR	349588	AssignmentExpression	ao -> o = 0x4ff00000		339262	0		=			
ANR	349589	PtrMemberAccess	ao -> o		339262	0					
ANR	349590	Identifier	ao		339262	0					
ANR	349591	Identifier	o		339262	1					
ANR	349592	PrimaryExpression	0x4ff00000		339262	1					
ANR	349593	ExpressionStatement	ao -> o |= reg1	3063:3:64801:64814	339262	8	True				
ANR	349594	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	349595	PtrMemberAccess	ao -> o		339262	0					
ANR	349596	Identifier	ao		339262	0					
ANR	349597	Identifier	o		339262	1					
ANR	349598	Identifier	reg1		339262	1					
ANR	349599	ExpressionStatement	ao -> o |= getthimmed12 ( ao -> a [ 1 ] )	3064:3:64819:64851	339262	9	True				
ANR	349600	AssignmentExpression	ao -> o |= getthimmed12 ( ao -> a [ 1 ] )		339262	0		|=			
ANR	349601	PtrMemberAccess	ao -> o		339262	0					
ANR	349602	Identifier	ao		339262	0					
ANR	349603	Identifier	o		339262	1					
ANR	349604	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		339262	1					
ANR	349605	Callee	getthimmed12		339262	0					
ANR	349606	Identifier	getthimmed12		339262	0					
ANR	349607	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	349608	Argument	ao -> a [ 1 ]		339262	0					
ANR	349609	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	349610	PtrMemberAccess	ao -> a		339262	0					
ANR	349611	Identifier	ao		339262	0					
ANR	349612	Identifier	a		339262	1					
ANR	349613	PrimaryExpression	1		339262	1					
ANR	349614	IfStatement	if ( m & S_BIT )		339262	10					
ANR	349615	Condition	m & S_BIT	3065:7:64860:64868	339262	0	True				
ANR	349616	BitAndExpression	m & S_BIT		339262	0		&			
ANR	349617	Identifier	m		339262	0					
ANR	349618	Identifier	S_BIT		339262	1					
ANR	349619	CompoundStatement		1773:18:39012:39012	339262	1					
ANR	349620	ExpressionStatement	ao -> o |= 1 << 28	3066:4:64877:64893	339262	0	True				
ANR	349621	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	349622	PtrMemberAccess	ao -> o		339262	0					
ANR	349623	Identifier	ao		339262	0					
ANR	349624	Identifier	o		339262	1					
ANR	349625	ShiftExpression	1 << 28		339262	1		<<			
ANR	349626	PrimaryExpression	1		339262	0					
ANR	349627	PrimaryExpression	28		339262	1					
ANR	349628	ReturnStatement	return 4 ;	3068:3:64903:64911	339262	11	True				
ANR	349629	PrimaryExpression	4		339262	0					
ANR	349630	BreakStatement	break ;	3070:3:64928:64933	339262	2	True				
ANR	349631	Label	case THUMB_REG_REG :	3071:2:64937:64955	339262	3	True				
ANR	349632	Identifier	THUMB_REG_REG		339262	0					
ANR	349633	CompoundStatement		1781:3:39137:39166	339262	4					
ANR	349634	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	3072:3:64962:64991	339262	0	True				
ANR	349635	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	349636	IdentifierDeclType	ut32		339262	0					
ANR	349637	Identifier	reg1		339262	1					
ANR	349638	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	349639	Identifier	reg1		339262	0					
ANR	349640	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	349641	Callee	getreg		339262	0					
ANR	349642	Identifier	getreg		339262	0					
ANR	349643	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	349644	Argument	ao -> a [ 0 ]		339262	0					
ANR	349645	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	349646	PtrMemberAccess	ao -> a		339262	0					
ANR	349647	Identifier	ao		339262	0					
ANR	349648	Identifier	a		339262	1					
ANR	349649	PrimaryExpression	0		339262	1					
ANR	349650	IdentifierDeclStatement	ut32 reg2 = getreg ( ao -> a [ 1 ] ) ;	3073:3:64996:65025	339262	1	True				
ANR	349651	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	349652	IdentifierDeclType	ut32		339262	0					
ANR	349653	Identifier	reg2		339262	1					
ANR	349654	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	349655	Identifier	reg2		339262	0					
ANR	349656	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	349657	Callee	getreg		339262	0					
ANR	349658	Identifier	getreg		339262	0					
ANR	349659	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	349660	Argument	ao -> a [ 1 ]		339262	0					
ANR	349661	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	349662	PtrMemberAccess	ao -> a		339262	0					
ANR	349663	Identifier	ao		339262	0					
ANR	349664	Identifier	a		339262	1					
ANR	349665	PrimaryExpression	1		339262	1					
ANR	349666	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		339262	2					
ANR	349667	Condition	( reg1 > 15 ) || ( reg2 > 15 )	3075:7:65038:65063	339262	0	True				
ANR	349668	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	349669	RelationalExpression	reg1 > 15		339262	0		>			
ANR	349670	Identifier	reg1		339262	0					
ANR	349671	PrimaryExpression	15		339262	1					
ANR	349672	RelationalExpression	reg2 > 15		339262	1		>			
ANR	349673	Identifier	reg2		339262	0					
ANR	349674	PrimaryExpression	15		339262	1					
ANR	349675	CompoundStatement		1783:35:39207:39207	339262	1					
ANR	349676	ReturnStatement	return - 1 ;	3076:4:65072:65081	339262	0	True				
ANR	349677	UnaryOperationExpression	- 1		339262	0					
ANR	349678	UnaryOperator	-		339262	0					
ANR	349679	PrimaryExpression	1		339262	1					
ANR	349680	IfStatement	if ( ( ! ( m & S_BIT ) ) && ( ! ( m & DOTW_BIT ) ) )		339262	3					
ANR	349681	Condition	( ! ( m & S_BIT ) ) && ( ! ( m & DOTW_BIT ) )	3079:7:65096:65130	339262	0	True				
ANR	349682	AndExpression	( ! ( m & S_BIT ) ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	349683	UnaryOperationExpression	! ( m & S_BIT )		339262	0					
ANR	349684	UnaryOperator	!		339262	0					
ANR	349685	BitAndExpression	m & S_BIT		339262	1		&			
ANR	349686	Identifier	m		339262	0					
ANR	349687	Identifier	S_BIT		339262	1					
ANR	349688	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	349689	UnaryOperator	!		339262	0					
ANR	349690	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	349691	Identifier	m		339262	0					
ANR	349692	Identifier	DOTW_BIT		339262	1					
ANR	349693	CompoundStatement		1787:44:39274:39274	339262	1					
ANR	349694	ExpressionStatement	ao -> o = 0x0046	3080:4:65139:65153	339262	0	True				
ANR	349695	AssignmentExpression	ao -> o = 0x0046		339262	0		=			
ANR	349696	PtrMemberAccess	ao -> o		339262	0					
ANR	349697	Identifier	ao		339262	0					
ANR	349698	Identifier	o		339262	1					
ANR	349699	PrimaryExpression	0x0046		339262	1					
ANR	349700	ExpressionStatement	ao -> o |= ( reg1 & 0x7 ) << 8	3081:4:65159:65185	339262	1	True				
ANR	349701	AssignmentExpression	ao -> o |= ( reg1 & 0x7 ) << 8		339262	0		|=			
ANR	349702	PtrMemberAccess	ao -> o		339262	0					
ANR	349703	Identifier	ao		339262	0					
ANR	349704	Identifier	o		339262	1					
ANR	349705	ShiftExpression	( reg1 & 0x7 ) << 8		339262	1		<<			
ANR	349706	BitAndExpression	reg1 & 0x7		339262	0		&			
ANR	349707	Identifier	reg1		339262	0					
ANR	349708	PrimaryExpression	0x7		339262	1					
ANR	349709	PrimaryExpression	8		339262	1					
ANR	349710	ExpressionStatement	ao -> o |= ( reg1 & 0x8 ) << 12	3082:4:65191:65218	339262	2	True				
ANR	349711	AssignmentExpression	ao -> o |= ( reg1 & 0x8 ) << 12		339262	0		|=			
ANR	349712	PtrMemberAccess	ao -> o		339262	0					
ANR	349713	Identifier	ao		339262	0					
ANR	349714	Identifier	o		339262	1					
ANR	349715	ShiftExpression	( reg1 & 0x8 ) << 12		339262	1		<<			
ANR	349716	BitAndExpression	reg1 & 0x8		339262	0		&			
ANR	349717	Identifier	reg1		339262	0					
ANR	349718	PrimaryExpression	0x8		339262	1					
ANR	349719	PrimaryExpression	12		339262	1					
ANR	349720	ExpressionStatement	ao -> o |= reg2 << 11	3083:4:65224:65243	339262	3	True				
ANR	349721	AssignmentExpression	ao -> o |= reg2 << 11		339262	0		|=			
ANR	349722	PtrMemberAccess	ao -> o		339262	0					
ANR	349723	Identifier	ao		339262	0					
ANR	349724	Identifier	o		339262	1					
ANR	349725	ShiftExpression	reg2 << 11		339262	1		<<			
ANR	349726	Identifier	reg2		339262	0					
ANR	349727	PrimaryExpression	11		339262	1					
ANR	349728	ReturnStatement	return 2 ;	3084:4:65249:65257	339262	4	True				
ANR	349729	PrimaryExpression	2		339262	0					
ANR	349730	IfStatement	if ( ( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		339262	4					
ANR	349731	Condition	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) )	3087:7:65275:65319	339262	0	True				
ANR	349732	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	349733	RelationalExpression	reg1 < 8		339262	0		<			
ANR	349734	Identifier	reg1		339262	0					
ANR	349735	PrimaryExpression	8		339262	1					
ANR	349736	AndExpression	( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	349737	RelationalExpression	reg2 < 8		339262	0		<			
ANR	349738	Identifier	reg2		339262	0					
ANR	349739	PrimaryExpression	8		339262	1					
ANR	349740	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	349741	UnaryOperator	!		339262	0					
ANR	349742	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	349743	Identifier	m		339262	0					
ANR	349744	Identifier	DOTW_BIT		339262	1					
ANR	349745	CompoundStatement		1795:54:39463:39463	339262	1					
ANR	349746	ExpressionStatement	ao -> o = 0	3088:4:65328:65337	339262	0	True				
ANR	349747	AssignmentExpression	ao -> o = 0		339262	0		=			
ANR	349748	PtrMemberAccess	ao -> o		339262	0					
ANR	349749	Identifier	ao		339262	0					
ANR	349750	Identifier	o		339262	1					
ANR	349751	PrimaryExpression	0		339262	1					
ANR	349752	ExpressionStatement	ao -> o |= reg1 << 8	3089:4:65343:65361	339262	1	True				
ANR	349753	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	349754	PtrMemberAccess	ao -> o		339262	0					
ANR	349755	Identifier	ao		339262	0					
ANR	349756	Identifier	o		339262	1					
ANR	349757	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	349758	Identifier	reg1		339262	0					
ANR	349759	PrimaryExpression	8		339262	1					
ANR	349760	ExpressionStatement	ao -> o |= reg2 << 11	3090:4:65367:65386	339262	2	True				
ANR	349761	AssignmentExpression	ao -> o |= reg2 << 11		339262	0		|=			
ANR	349762	PtrMemberAccess	ao -> o		339262	0					
ANR	349763	Identifier	ao		339262	0					
ANR	349764	Identifier	o		339262	1					
ANR	349765	ShiftExpression	reg2 << 11		339262	1		<<			
ANR	349766	Identifier	reg2		339262	0					
ANR	349767	PrimaryExpression	11		339262	1					
ANR	349768	ReturnStatement	return 2 ;	3091:4:65392:65400	339262	3	True				
ANR	349769	PrimaryExpression	2		339262	0					
ANR	349770	ExpressionStatement	ao -> o = 0x4fea0000	3094:3:65414:65432	339262	5	True				
ANR	349771	AssignmentExpression	ao -> o = 0x4fea0000		339262	0		=			
ANR	349772	PtrMemberAccess	ao -> o		339262	0					
ANR	349773	Identifier	ao		339262	0					
ANR	349774	Identifier	o		339262	1					
ANR	349775	PrimaryExpression	0x4fea0000		339262	1					
ANR	349776	ExpressionStatement	ao -> o |= reg1	3095:3:65437:65450	339262	6	True				
ANR	349777	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	349778	PtrMemberAccess	ao -> o		339262	0					
ANR	349779	Identifier	ao		339262	0					
ANR	349780	Identifier	o		339262	1					
ANR	349781	Identifier	reg1		339262	1					
ANR	349782	ExpressionStatement	ao -> o |= reg2 << 8	3096:3:65455:65473	339262	7	True				
ANR	349783	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	349784	PtrMemberAccess	ao -> o		339262	0					
ANR	349785	Identifier	ao		339262	0					
ANR	349786	Identifier	o		339262	1					
ANR	349787	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	349788	Identifier	reg2		339262	0					
ANR	349789	PrimaryExpression	8		339262	1					
ANR	349790	IfStatement	if ( m & S_BIT )		339262	8					
ANR	349791	Condition	m & S_BIT	3097:7:65482:65490	339262	0	True				
ANR	349792	BitAndExpression	m & S_BIT		339262	0		&			
ANR	349793	Identifier	m		339262	0					
ANR	349794	Identifier	S_BIT		339262	1					
ANR	349795	CompoundStatement		1805:18:39634:39634	339262	1					
ANR	349796	ExpressionStatement	ao -> o |= 1 << 28	3098:4:65499:65515	339262	0	True				
ANR	349797	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	349798	PtrMemberAccess	ao -> o		339262	0					
ANR	349799	Identifier	ao		339262	0					
ANR	349800	Identifier	o		339262	1					
ANR	349801	ShiftExpression	1 << 28		339262	1		<<			
ANR	349802	PrimaryExpression	1		339262	0					
ANR	349803	PrimaryExpression	28		339262	1					
ANR	349804	ReturnStatement	return 4 ;	3100:3:65525:65533	339262	9	True				
ANR	349805	PrimaryExpression	4		339262	0					
ANR	349806	BreakStatement	break ;	3102:3:65550:65555	339262	5	True				
ANR	349807	Label	default :	3103:2:65559:65566	339262	6	True				
ANR	349808	Identifier	default		339262	0					
ANR	349809	ReturnStatement	return - 1 ;	3104:3:65571:65580	339262	7	True				
ANR	349810	UnaryOperationExpression	- 1		339262	0					
ANR	349811	UnaryOperator	-		339262	0					
ANR	349812	PrimaryExpression	1		339262	1					
ANR	349813	ElseStatement	else		339262	0					
ANR	349814	IfStatement	"if ( ( m = opmask ( ao -> op , ""mrc"" , TWO_BIT ) ) )"		339262	0					
ANR	349815	Condition	"m = opmask ( ao -> op , ""mrc"" , TWO_BIT )"	3107:5:65600:65636	339262	0	True				
ANR	349816	AssignmentExpression	"m = opmask ( ao -> op , ""mrc"" , TWO_BIT )"		339262	0		=			
ANR	349817	Identifier	m		339262	0					
ANR	349818	CallExpression	"opmask ( ao -> op , ""mrc"" , TWO_BIT )"		339262	1					
ANR	349819	Callee	opmask		339262	0					
ANR	349820	Identifier	opmask		339262	0					
ANR	349821	ArgumentList	ao -> op		339262	1					
ANR	349822	Argument	ao -> op		339262	0					
ANR	349823	PtrMemberAccess	ao -> op		339262	0					
ANR	349824	Identifier	ao		339262	0					
ANR	349825	Identifier	op		339262	1					
ANR	349826	Argument	"""mrc"""		339262	1					
ANR	349827	PrimaryExpression	"""mrc"""		339262	0					
ANR	349828	Argument	TWO_BIT		339262	2					
ANR	349829	Identifier	TWO_BIT		339262	0					
ANR	349830	CompoundStatement		1816:2:39784:39818	339262	1					
ANR	349831	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3108:2:65643:65677	339262	0	True				
ANR	349832	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	349833	IdentifierDeclType	ut64		339262	0					
ANR	349834	Identifier	argt		339262	1					
ANR	349835	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	349836	Identifier	argt		339262	0					
ANR	349837	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	349838	Callee	thumb_selector		339262	0					
ANR	349839	Identifier	thumb_selector		339262	0					
ANR	349840	ArgumentList	ao -> a		339262	1					
ANR	349841	Argument	ao -> a		339262	0					
ANR	349842	PtrMemberAccess	ao -> a		339262	0					
ANR	349843	Identifier	ao		339262	0					
ANR	349844	Identifier	a		339262	1					
ANR	349845	SwitchStatement	switch ( argt )		339262	1					
ANR	349846	Condition	argt	3109:10:65689:65692	339262	0	True				
ANR	349847	Identifier	argt		339262	0					
ANR	349848	CompoundStatement		1817:16:39836:39836	339262	1					
ANR	349849	Label	case THUMB_COPROC_CONST_REG_COREG_COREG :	3110:2:65699:65738	339262	0	True				
ANR	349850	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG		339262	0					
ANR	349851	CompoundStatement		1818:43:39881:39881	339262	1					
ANR	349852	ExpressionStatement	"ao -> a [ 5 ] = ""0"""	3111:3:65745:65759	339262	0	True				
ANR	349853	AssignmentExpression	"ao -> a [ 5 ] = ""0"""		339262	0		=			
ANR	349854	ArrayIndexing	ao -> a [ 5 ]		339262	0					
ANR	349855	PtrMemberAccess	ao -> a		339262	0					
ANR	349856	Identifier	ao		339262	0					
ANR	349857	Identifier	a		339262	1					
ANR	349858	PrimaryExpression	5		339262	1					
ANR	349859	PrimaryExpression	"""0"""		339262	1					
ANR	349860	Label	case THUMB_COPROC_CONST_REG_COREG_COREG_CONST :	3114:2:65805:65850	339262	2	True				
ANR	349861	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG_CONST		339262	0					
ANR	349862	CompoundStatement		1828:3:40189:40218	339262	3					
ANR	349863	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	3115:3:65857:65891	339262	0	True				
ANR	349864	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	349865	IdentifierDeclType	ut32		339262	0					
ANR	349866	Identifier	coproc		339262	1					
ANR	349867	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	349868	Identifier	coproc		339262	0					
ANR	349869	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	349870	Callee	getcoproc		339262	0					
ANR	349871	Identifier	getcoproc		339262	0					
ANR	349872	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	349873	Argument	ao -> a [ 0 ]		339262	0					
ANR	349874	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	349875	PtrMemberAccess	ao -> a		339262	0					
ANR	349876	Identifier	ao		339262	0					
ANR	349877	Identifier	a		339262	1					
ANR	349878	PrimaryExpression	0		339262	1					
ANR	349879	IdentifierDeclStatement	ut32 opc1 = getnum ( ao -> a [ 1 ] ) ;	3116:3:65896:65925	339262	1	True				
ANR	349880	IdentifierDecl	opc1 = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	349881	IdentifierDeclType	ut32		339262	0					
ANR	349882	Identifier	opc1		339262	1					
ANR	349883	AssignmentExpression	opc1 = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	349884	Identifier	opc1		339262	0					
ANR	349885	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	349886	Callee	getnum		339262	0					
ANR	349887	Identifier	getnum		339262	0					
ANR	349888	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	349889	Argument	ao -> a [ 1 ]		339262	0					
ANR	349890	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	349891	PtrMemberAccess	ao -> a		339262	0					
ANR	349892	Identifier	ao		339262	0					
ANR	349893	Identifier	a		339262	1					
ANR	349894	PrimaryExpression	1		339262	1					
ANR	349895	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	3117:3:65930:65959	339262	2	True				
ANR	349896	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	349897	IdentifierDeclType	ut32		339262	0					
ANR	349898	Identifier	reg1		339262	1					
ANR	349899	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	349900	Identifier	reg1		339262	0					
ANR	349901	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	349902	Callee	getreg		339262	0					
ANR	349903	Identifier	getreg		339262	0					
ANR	349904	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	349905	Argument	ao -> a [ 2 ]		339262	0					
ANR	349906	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	349907	PtrMemberAccess	ao -> a		339262	0					
ANR	349908	Identifier	ao		339262	0					
ANR	349909	Identifier	a		339262	1					
ANR	349910	PrimaryExpression	2		339262	1					
ANR	349911	IdentifierDeclStatement	ut32 coreg1 = getcoprocreg ( ao -> a [ 3 ] ) ;	3118:3:65964:66001	339262	3	True				
ANR	349912	IdentifierDecl	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		339262	0					
ANR	349913	IdentifierDeclType	ut32		339262	0					
ANR	349914	Identifier	coreg1		339262	1					
ANR	349915	AssignmentExpression	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	349916	Identifier	coreg1		339262	0					
ANR	349917	CallExpression	getcoprocreg ( ao -> a [ 3 ] )		339262	1					
ANR	349918	Callee	getcoprocreg		339262	0					
ANR	349919	Identifier	getcoprocreg		339262	0					
ANR	349920	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	349921	Argument	ao -> a [ 3 ]		339262	0					
ANR	349922	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	349923	PtrMemberAccess	ao -> a		339262	0					
ANR	349924	Identifier	ao		339262	0					
ANR	349925	Identifier	a		339262	1					
ANR	349926	PrimaryExpression	3		339262	1					
ANR	349927	IdentifierDeclStatement	ut32 coreg2 = getcoprocreg ( ao -> a [ 4 ] ) ;	3119:3:66006:66043	339262	4	True				
ANR	349928	IdentifierDecl	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		339262	0					
ANR	349929	IdentifierDeclType	ut32		339262	0					
ANR	349930	Identifier	coreg2		339262	1					
ANR	349931	AssignmentExpression	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		339262	2		=			
ANR	349932	Identifier	coreg2		339262	0					
ANR	349933	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		339262	1					
ANR	349934	Callee	getcoprocreg		339262	0					
ANR	349935	Identifier	getcoprocreg		339262	0					
ANR	349936	ArgumentList	ao -> a [ 4 ]		339262	1					
ANR	349937	Argument	ao -> a [ 4 ]		339262	0					
ANR	349938	ArrayIndexing	ao -> a [ 4 ]		339262	0					
ANR	349939	PtrMemberAccess	ao -> a		339262	0					
ANR	349940	Identifier	ao		339262	0					
ANR	349941	Identifier	a		339262	1					
ANR	349942	PrimaryExpression	4		339262	1					
ANR	349943	IdentifierDeclStatement	ut32 opc2 = getnum ( ao -> a [ 5 ] ) ;	3120:3:66048:66077	339262	5	True				
ANR	349944	IdentifierDecl	opc2 = getnum ( ao -> a [ 5 ] )		339262	0					
ANR	349945	IdentifierDeclType	ut32		339262	0					
ANR	349946	Identifier	opc2		339262	1					
ANR	349947	AssignmentExpression	opc2 = getnum ( ao -> a [ 5 ] )		339262	2		=			
ANR	349948	Identifier	opc2		339262	0					
ANR	349949	CallExpression	getnum ( ao -> a [ 5 ] )		339262	1					
ANR	349950	Callee	getnum		339262	0					
ANR	349951	Identifier	getnum		339262	0					
ANR	349952	ArgumentList	ao -> a [ 5 ]		339262	1					
ANR	349953	Argument	ao -> a [ 5 ]		339262	0					
ANR	349954	ArrayIndexing	ao -> a [ 5 ]		339262	0					
ANR	349955	PtrMemberAccess	ao -> a		339262	0					
ANR	349956	Identifier	ao		339262	0					
ANR	349957	Identifier	a		339262	1					
ANR	349958	PrimaryExpression	5		339262	1					
ANR	349959	IfStatement	if ( ( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) )		339262	6					
ANR	349960	Condition	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )	3122:7:66087:66176	339262	0	True				
ANR	349961	OrExpression	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		339262	0		||			
ANR	349962	RelationalExpression	coproc > 15		339262	0		>			
ANR	349963	Identifier	coproc		339262	0					
ANR	349964	PrimaryExpression	15		339262	1					
ANR	349965	OrExpression	( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		339262	1		||			
ANR	349966	RelationalExpression	opc1 > 7		339262	0		>			
ANR	349967	Identifier	opc1		339262	0					
ANR	349968	PrimaryExpression	7		339262	1					
ANR	349969	OrExpression	( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		339262	1		||			
ANR	349970	RelationalExpression	reg1 > 15		339262	0		>			
ANR	349971	Identifier	reg1		339262	0					
ANR	349972	PrimaryExpression	15		339262	1					
ANR	349973	OrExpression	( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		339262	1		||			
ANR	349974	RelationalExpression	coreg1 > 15		339262	0		>			
ANR	349975	Identifier	coreg1		339262	0					
ANR	349976	PrimaryExpression	15		339262	1					
ANR	349977	OrExpression	( coreg2 > 15 ) || ( opc2 > 7 )		339262	1		||			
ANR	349978	RelationalExpression	coreg2 > 15		339262	0		>			
ANR	349979	Identifier	coreg2		339262	0					
ANR	349980	PrimaryExpression	15		339262	1					
ANR	349981	RelationalExpression	opc2 > 7		339262	1		>			
ANR	349982	Identifier	opc2		339262	0					
ANR	349983	PrimaryExpression	7		339262	1					
ANR	349984	CompoundStatement		1830:99:40320:40320	339262	1					
ANR	349985	ReturnStatement	return - 1 ;	3123:4:66185:66194	339262	0	True				
ANR	349986	UnaryOperationExpression	- 1		339262	0					
ANR	349987	UnaryOperator	-		339262	0					
ANR	349988	PrimaryExpression	1		339262	1					
ANR	349989	ExpressionStatement	ao -> o = 0x10ee1000	3126:3:66205:66223	339262	7	True				
ANR	349990	AssignmentExpression	ao -> o = 0x10ee1000		339262	0		=			
ANR	349991	PtrMemberAccess	ao -> o		339262	0					
ANR	349992	Identifier	ao		339262	0					
ANR	349993	Identifier	o		339262	1					
ANR	349994	PrimaryExpression	0x10ee1000		339262	1					
ANR	349995	IfStatement	if ( m & TWO_BIT )		339262	8					
ANR	349996	Condition	m & TWO_BIT	3127:7:66232:66242	339262	0	True				
ANR	349997	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	349998	Identifier	m		339262	0					
ANR	349999	Identifier	TWO_BIT		339262	1					
ANR	350000	CompoundStatement		1835:20:40386:40386	339262	1					
ANR	350001	ExpressionStatement	ao -> o |= 1 << 20	3128:4:66251:66267	339262	0	True				
ANR	350002	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	350003	PtrMemberAccess	ao -> o		339262	0					
ANR	350004	Identifier	ao		339262	0					
ANR	350005	Identifier	o		339262	1					
ANR	350006	ShiftExpression	1 << 20		339262	1		<<			
ANR	350007	PrimaryExpression	1		339262	0					
ANR	350008	PrimaryExpression	20		339262	1					
ANR	350009	ExpressionStatement	ao -> o |= coproc	3130:3:66277:66292	339262	9	True				
ANR	350010	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	350011	PtrMemberAccess	ao -> o		339262	0					
ANR	350012	Identifier	ao		339262	0					
ANR	350013	Identifier	o		339262	1					
ANR	350014	Identifier	coproc		339262	1					
ANR	350015	ExpressionStatement	ao -> o |= opc1 << 29	3131:3:66297:66316	339262	10	True				
ANR	350016	AssignmentExpression	ao -> o |= opc1 << 29		339262	0		|=			
ANR	350017	PtrMemberAccess	ao -> o		339262	0					
ANR	350018	Identifier	ao		339262	0					
ANR	350019	Identifier	o		339262	1					
ANR	350020	ShiftExpression	opc1 << 29		339262	1		<<			
ANR	350021	Identifier	opc1		339262	0					
ANR	350022	PrimaryExpression	29		339262	1					
ANR	350023	ExpressionStatement	ao -> o |= reg1 << 4	3132:3:66321:66339	339262	11	True				
ANR	350024	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	350025	PtrMemberAccess	ao -> o		339262	0					
ANR	350026	Identifier	ao		339262	0					
ANR	350027	Identifier	o		339262	1					
ANR	350028	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	350029	Identifier	reg1		339262	0					
ANR	350030	PrimaryExpression	4		339262	1					
ANR	350031	ExpressionStatement	ao -> o |= coreg1 << 24	3133:3:66344:66365	339262	12	True				
ANR	350032	AssignmentExpression	ao -> o |= coreg1 << 24		339262	0		|=			
ANR	350033	PtrMemberAccess	ao -> o		339262	0					
ANR	350034	Identifier	ao		339262	0					
ANR	350035	Identifier	o		339262	1					
ANR	350036	ShiftExpression	coreg1 << 24		339262	1		<<			
ANR	350037	Identifier	coreg1		339262	0					
ANR	350038	PrimaryExpression	24		339262	1					
ANR	350039	ExpressionStatement	ao -> o |= coreg2 << 8	3134:3:66370:66390	339262	13	True				
ANR	350040	AssignmentExpression	ao -> o |= coreg2 << 8		339262	0		|=			
ANR	350041	PtrMemberAccess	ao -> o		339262	0					
ANR	350042	Identifier	ao		339262	0					
ANR	350043	Identifier	o		339262	1					
ANR	350044	ShiftExpression	coreg2 << 8		339262	1		<<			
ANR	350045	Identifier	coreg2		339262	0					
ANR	350046	PrimaryExpression	8		339262	1					
ANR	350047	ExpressionStatement	ao -> o |= opc2 << 13	3135:3:66395:66414	339262	14	True				
ANR	350048	AssignmentExpression	ao -> o |= opc2 << 13		339262	0		|=			
ANR	350049	PtrMemberAccess	ao -> o		339262	0					
ANR	350050	Identifier	ao		339262	0					
ANR	350051	Identifier	o		339262	1					
ANR	350052	ShiftExpression	opc2 << 13		339262	1		<<			
ANR	350053	Identifier	opc2		339262	0					
ANR	350054	PrimaryExpression	13		339262	1					
ANR	350055	ReturnStatement	return 4 ;	3136:3:66419:66427	339262	15	True				
ANR	350056	PrimaryExpression	4		339262	0					
ANR	350057	BreakStatement	break ;	3138:3:66444:66449	339262	4	True				
ANR	350058	Label	default :	3139:2:66453:66460	339262	5	True				
ANR	350059	Identifier	default		339262	0					
ANR	350060	ReturnStatement	return - 1 ;	3140:3:66465:66474	339262	6	True				
ANR	350061	UnaryOperationExpression	- 1		339262	0					
ANR	350062	UnaryOperator	-		339262	0					
ANR	350063	PrimaryExpression	1		339262	1					
ANR	350064	ElseStatement	else		339262	0					
ANR	350065	IfStatement	"if ( ( m = opmask ( ao -> op , ""mrrc"" , TWO_BIT ) ) )"		339262	0					
ANR	350066	Condition	"m = opmask ( ao -> op , ""mrrc"" , TWO_BIT )"	3143:5:66493:66530	339262	0	True				
ANR	350067	AssignmentExpression	"m = opmask ( ao -> op , ""mrrc"" , TWO_BIT )"		339262	0		=			
ANR	350068	Identifier	m		339262	0					
ANR	350069	CallExpression	"opmask ( ao -> op , ""mrrc"" , TWO_BIT )"		339262	1					
ANR	350070	Callee	opmask		339262	0					
ANR	350071	Identifier	opmask		339262	0					
ANR	350072	ArgumentList	ao -> op		339262	1					
ANR	350073	Argument	ao -> op		339262	0					
ANR	350074	PtrMemberAccess	ao -> op		339262	0					
ANR	350075	Identifier	ao		339262	0					
ANR	350076	Identifier	op		339262	1					
ANR	350077	Argument	"""mrrc"""		339262	1					
ANR	350078	PrimaryExpression	"""mrrc"""		339262	0					
ANR	350079	Argument	TWO_BIT		339262	2					
ANR	350080	Identifier	TWO_BIT		339262	0					
ANR	350081	CompoundStatement		1852:2:40678:40712	339262	1					
ANR	350082	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3144:2:66537:66571	339262	0	True				
ANR	350083	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	350084	IdentifierDeclType	ut64		339262	0					
ANR	350085	Identifier	argt		339262	1					
ANR	350086	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	350087	Identifier	argt		339262	0					
ANR	350088	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	350089	Callee	thumb_selector		339262	0					
ANR	350090	Identifier	thumb_selector		339262	0					
ANR	350091	ArgumentList	ao -> a		339262	1					
ANR	350092	Argument	ao -> a		339262	0					
ANR	350093	PtrMemberAccess	ao -> a		339262	0					
ANR	350094	Identifier	ao		339262	0					
ANR	350095	Identifier	a		339262	1					
ANR	350096	SwitchStatement	switch ( argt )		339262	1					
ANR	350097	Condition	argt	3145:10:66583:66586	339262	0	True				
ANR	350098	Identifier	argt		339262	0					
ANR	350099	CompoundStatement		1853:16:40730:40730	339262	1					
ANR	350100	Label	case THUMB_COPROC_CONST_REG_REG_COREG :	3146:2:66593:66630	339262	0	True				
ANR	350101	Identifier	THUMB_COPROC_CONST_REG_REG_COREG		339262	0					
ANR	350102	CompoundStatement		1859:3:40918:40954	339262	1					
ANR	350103	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	3147:3:66637:66671	339262	0	True				
ANR	350104	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	350105	IdentifierDeclType	ut32		339262	0					
ANR	350106	Identifier	coproc		339262	1					
ANR	350107	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	350108	Identifier	coproc		339262	0					
ANR	350109	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	350110	Callee	getcoproc		339262	0					
ANR	350111	Identifier	getcoproc		339262	0					
ANR	350112	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350113	Argument	ao -> a [ 0 ]		339262	0					
ANR	350114	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350115	PtrMemberAccess	ao -> a		339262	0					
ANR	350116	Identifier	ao		339262	0					
ANR	350117	Identifier	a		339262	1					
ANR	350118	PrimaryExpression	0		339262	1					
ANR	350119	IdentifierDeclStatement	ut32 opc = getnum ( ao -> a [ 1 ] ) ;	3148:3:66676:66704	339262	1	True				
ANR	350120	IdentifierDecl	opc = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	350121	IdentifierDeclType	ut32		339262	0					
ANR	350122	Identifier	opc		339262	1					
ANR	350123	AssignmentExpression	opc = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	350124	Identifier	opc		339262	0					
ANR	350125	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	350126	Callee	getnum		339262	0					
ANR	350127	Identifier	getnum		339262	0					
ANR	350128	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350129	Argument	ao -> a [ 1 ]		339262	0					
ANR	350130	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350131	PtrMemberAccess	ao -> a		339262	0					
ANR	350132	Identifier	ao		339262	0					
ANR	350133	Identifier	a		339262	1					
ANR	350134	PrimaryExpression	1		339262	1					
ANR	350135	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	3149:3:66709:66738	339262	2	True				
ANR	350136	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	350137	IdentifierDeclType	ut32		339262	0					
ANR	350138	Identifier	reg1		339262	1					
ANR	350139	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	350140	Identifier	reg1		339262	0					
ANR	350141	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	350142	Callee	getreg		339262	0					
ANR	350143	Identifier	getreg		339262	0					
ANR	350144	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	350145	Argument	ao -> a [ 2 ]		339262	0					
ANR	350146	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	350147	PtrMemberAccess	ao -> a		339262	0					
ANR	350148	Identifier	ao		339262	0					
ANR	350149	Identifier	a		339262	1					
ANR	350150	PrimaryExpression	2		339262	1					
ANR	350151	IdentifierDeclStatement	ut32 reg2 = getreg ( ao -> a [ 3 ] ) ;	3150:3:66743:66772	339262	3	True				
ANR	350152	IdentifierDecl	reg2 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	350153	IdentifierDeclType	ut32		339262	0					
ANR	350154	Identifier	reg2		339262	1					
ANR	350155	AssignmentExpression	reg2 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	350156	Identifier	reg2		339262	0					
ANR	350157	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	350158	Callee	getreg		339262	0					
ANR	350159	Identifier	getreg		339262	0					
ANR	350160	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	350161	Argument	ao -> a [ 3 ]		339262	0					
ANR	350162	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	350163	PtrMemberAccess	ao -> a		339262	0					
ANR	350164	Identifier	ao		339262	0					
ANR	350165	Identifier	a		339262	1					
ANR	350166	PrimaryExpression	3		339262	1					
ANR	350167	IdentifierDeclStatement	ut32 coreg = getcoprocreg ( ao -> a [ 4 ] ) ;	3151:3:66777:66813	339262	4	True				
ANR	350168	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 4 ] )		339262	0					
ANR	350169	IdentifierDeclType	ut32		339262	0					
ANR	350170	Identifier	coreg		339262	1					
ANR	350171	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 4 ] )		339262	2		=			
ANR	350172	Identifier	coreg		339262	0					
ANR	350173	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		339262	1					
ANR	350174	Callee	getcoprocreg		339262	0					
ANR	350175	Identifier	getcoprocreg		339262	0					
ANR	350176	ArgumentList	ao -> a [ 4 ]		339262	1					
ANR	350177	Argument	ao -> a [ 4 ]		339262	0					
ANR	350178	ArrayIndexing	ao -> a [ 4 ]		339262	0					
ANR	350179	PtrMemberAccess	ao -> a		339262	0					
ANR	350180	Identifier	ao		339262	0					
ANR	350181	Identifier	a		339262	1					
ANR	350182	PrimaryExpression	4		339262	1					
ANR	350183	IfStatement	if ( ( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) )		339262	5					
ANR	350184	Condition	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )	3153:7:66823:66895	339262	0	True				
ANR	350185	OrExpression	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )		339262	0		||			
ANR	350186	RelationalExpression	coproc > 15		339262	0		>			
ANR	350187	Identifier	coproc		339262	0					
ANR	350188	PrimaryExpression	15		339262	1					
ANR	350189	OrExpression	( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )		339262	1		||			
ANR	350190	RelationalExpression	opc > 15		339262	0		>			
ANR	350191	Identifier	opc		339262	0					
ANR	350192	PrimaryExpression	15		339262	1					
ANR	350193	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )		339262	1		||			
ANR	350194	RelationalExpression	reg1 > 15		339262	0		>			
ANR	350195	Identifier	reg1		339262	0					
ANR	350196	PrimaryExpression	15		339262	1					
ANR	350197	OrExpression	( reg2 > 15 ) || ( coreg > 15 )		339262	1		||			
ANR	350198	RelationalExpression	reg2 > 15		339262	0		>			
ANR	350199	Identifier	reg2		339262	0					
ANR	350200	PrimaryExpression	15		339262	1					
ANR	350201	RelationalExpression	coreg > 15		339262	1		>			
ANR	350202	Identifier	coreg		339262	0					
ANR	350203	PrimaryExpression	15		339262	1					
ANR	350204	CompoundStatement		1861:82:41039:41039	339262	1					
ANR	350205	ReturnStatement	return - 1 ;	3154:4:66904:66913	339262	0	True				
ANR	350206	UnaryOperationExpression	- 1		339262	0					
ANR	350207	UnaryOperator	-		339262	0					
ANR	350208	PrimaryExpression	1		339262	1					
ANR	350209	ExpressionStatement	ao -> o = 0x50ec0000	3157:3:66924:66942	339262	6	True				
ANR	350210	AssignmentExpression	ao -> o = 0x50ec0000		339262	0		=			
ANR	350211	PtrMemberAccess	ao -> o		339262	0					
ANR	350212	Identifier	ao		339262	0					
ANR	350213	Identifier	o		339262	1					
ANR	350214	PrimaryExpression	0x50ec0000		339262	1					
ANR	350215	IfStatement	if ( m & TWO_BIT )		339262	7					
ANR	350216	Condition	m & TWO_BIT	3158:7:66951:66961	339262	0	True				
ANR	350217	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	350218	Identifier	m		339262	0					
ANR	350219	Identifier	TWO_BIT		339262	1					
ANR	350220	CompoundStatement		1866:20:41105:41105	339262	1					
ANR	350221	ExpressionStatement	ao -> o |= 1 << 20	3159:4:66970:66986	339262	0	True				
ANR	350222	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	350223	PtrMemberAccess	ao -> o		339262	0					
ANR	350224	Identifier	ao		339262	0					
ANR	350225	Identifier	o		339262	1					
ANR	350226	ShiftExpression	1 << 20		339262	1		<<			
ANR	350227	PrimaryExpression	1		339262	0					
ANR	350228	PrimaryExpression	20		339262	1					
ANR	350229	ExpressionStatement	ao -> o |= coproc	3161:3:66996:67011	339262	8	True				
ANR	350230	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	350231	PtrMemberAccess	ao -> o		339262	0					
ANR	350232	Identifier	ao		339262	0					
ANR	350233	Identifier	o		339262	1					
ANR	350234	Identifier	coproc		339262	1					
ANR	350235	ExpressionStatement	ao -> o |= opc << 12	3162:3:67016:67034	339262	9	True				
ANR	350236	AssignmentExpression	ao -> o |= opc << 12		339262	0		|=			
ANR	350237	PtrMemberAccess	ao -> o		339262	0					
ANR	350238	Identifier	ao		339262	0					
ANR	350239	Identifier	o		339262	1					
ANR	350240	ShiftExpression	opc << 12		339262	1		<<			
ANR	350241	Identifier	opc		339262	0					
ANR	350242	PrimaryExpression	12		339262	1					
ANR	350243	ExpressionStatement	ao -> o |= reg1 << 4	3163:3:67039:67057	339262	10	True				
ANR	350244	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	350245	PtrMemberAccess	ao -> o		339262	0					
ANR	350246	Identifier	ao		339262	0					
ANR	350247	Identifier	o		339262	1					
ANR	350248	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	350249	Identifier	reg1		339262	0					
ANR	350250	PrimaryExpression	4		339262	1					
ANR	350251	ExpressionStatement	ao -> o |= reg2 << 24	3164:3:67062:67081	339262	11	True				
ANR	350252	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	350253	PtrMemberAccess	ao -> o		339262	0					
ANR	350254	Identifier	ao		339262	0					
ANR	350255	Identifier	o		339262	1					
ANR	350256	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	350257	Identifier	reg2		339262	0					
ANR	350258	PrimaryExpression	24		339262	1					
ANR	350259	ExpressionStatement	ao -> o |= coreg << 8	3165:3:67086:67105	339262	12	True				
ANR	350260	AssignmentExpression	ao -> o |= coreg << 8		339262	0		|=			
ANR	350261	PtrMemberAccess	ao -> o		339262	0					
ANR	350262	Identifier	ao		339262	0					
ANR	350263	Identifier	o		339262	1					
ANR	350264	ShiftExpression	coreg << 8		339262	1		<<			
ANR	350265	Identifier	coreg		339262	0					
ANR	350266	PrimaryExpression	8		339262	1					
ANR	350267	ReturnStatement	return 4 ;	3166:3:67110:67118	339262	13	True				
ANR	350268	PrimaryExpression	4		339262	0					
ANR	350269	BreakStatement	break ;	3168:3:67135:67140	339262	2	True				
ANR	350270	Label	default :	3169:2:67144:67151	339262	3	True				
ANR	350271	Identifier	default		339262	0					
ANR	350272	ReturnStatement	return - 1 ;	3170:3:67156:67165	339262	4	True				
ANR	350273	UnaryOperationExpression	- 1		339262	0					
ANR	350274	UnaryOperator	-		339262	0					
ANR	350275	PrimaryExpression	1		339262	1					
ANR	350276	ElseStatement	else		339262	0					
ANR	350277	IfStatement	"if ( ( m = opmask ( ao -> op , ""mrs"" , 0 ) ) )"		339262	0					
ANR	350278	Condition	"m = opmask ( ao -> op , ""mrs"" , 0 )"	3173:5:67184:67214	339262	0	True				
ANR	350279	AssignmentExpression	"m = opmask ( ao -> op , ""mrs"" , 0 )"		339262	0		=			
ANR	350280	Identifier	m		339262	0					
ANR	350281	CallExpression	"opmask ( ao -> op , ""mrs"" , 0 )"		339262	1					
ANR	350282	Callee	opmask		339262	0					
ANR	350283	Identifier	opmask		339262	0					
ANR	350284	ArgumentList	ao -> op		339262	1					
ANR	350285	Argument	ao -> op		339262	0					
ANR	350286	PtrMemberAccess	ao -> op		339262	0					
ANR	350287	Identifier	ao		339262	0					
ANR	350288	Identifier	op		339262	1					
ANR	350289	Argument	"""mrs"""		339262	1					
ANR	350290	PrimaryExpression	"""mrs"""		339262	0					
ANR	350291	Argument	0		339262	2					
ANR	350292	PrimaryExpression	0		339262	0					
ANR	350293	CompoundStatement		1882:2:41362:41396	339262	1					
ANR	350294	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3174:2:67221:67255	339262	0	True				
ANR	350295	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	350296	IdentifierDeclType	ut64		339262	0					
ANR	350297	Identifier	argt		339262	1					
ANR	350298	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	350299	Identifier	argt		339262	0					
ANR	350300	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	350301	Callee	thumb_selector		339262	0					
ANR	350302	Identifier	thumb_selector		339262	0					
ANR	350303	ArgumentList	ao -> a		339262	1					
ANR	350304	Argument	ao -> a		339262	0					
ANR	350305	PtrMemberAccess	ao -> a		339262	0					
ANR	350306	Identifier	ao		339262	0					
ANR	350307	Identifier	a		339262	1					
ANR	350308	SwitchStatement	switch ( argt )		339262	1					
ANR	350309	Condition	argt	3175:10:67267:67270	339262	0	True				
ANR	350310	Identifier	argt		339262	0					
ANR	350311	CompoundStatement		1883:16:41414:41414	339262	1					
ANR	350312	Label	case THUMB_REG_OTHER :	3176:2:67277:67297	339262	0	True				
ANR	350313	Identifier	THUMB_REG_OTHER		339262	0					
ANR	350314	CompoundStatement		1885:3:41445:41474	339262	1					
ANR	350315	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	3177:3:67304:67333	339262	0	True				
ANR	350316	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	350317	IdentifierDeclType	ut32		339262	0					
ANR	350318	Identifier	reg1		339262	1					
ANR	350319	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	350320	Identifier	reg1		339262	0					
ANR	350321	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	350322	Callee	getreg		339262	0					
ANR	350323	Identifier	getreg		339262	0					
ANR	350324	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350325	Argument	ao -> a [ 0 ]		339262	0					
ANR	350326	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350327	PtrMemberAccess	ao -> a		339262	0					
ANR	350328	Identifier	ao		339262	0					
ANR	350329	Identifier	a		339262	1					
ANR	350330	PrimaryExpression	0		339262	1					
ANR	350331	ExpressionStatement	"r_str_case ( ao -> a [ 1 ] , false )"	3178:3:67338:67366	339262	1	True				
ANR	350332	CallExpression	"r_str_case ( ao -> a [ 1 ] , false )"		339262	0					
ANR	350333	Callee	r_str_case		339262	0					
ANR	350334	Identifier	r_str_case		339262	0					
ANR	350335	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350336	Argument	ao -> a [ 1 ]		339262	0					
ANR	350337	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350338	PtrMemberAccess	ao -> a		339262	0					
ANR	350339	Identifier	ao		339262	0					
ANR	350340	Identifier	a		339262	1					
ANR	350341	PrimaryExpression	1		339262	1					
ANR	350342	Argument	false		339262	1					
ANR	350343	Identifier	false		339262	0					
ANR	350344	IfStatement	if ( reg1 > 15 )		339262	2					
ANR	350345	Condition	reg1 > 15	3180:7:67376:67384	339262	0	True				
ANR	350346	RelationalExpression	reg1 > 15		339262	0		>			
ANR	350347	Identifier	reg1		339262	0					
ANR	350348	PrimaryExpression	15		339262	1					
ANR	350349	CompoundStatement		1888:18:41528:41528	339262	1					
ANR	350350	ReturnStatement	return - 1 ;	3181:4:67393:67402	339262	0	True				
ANR	350351	UnaryOperationExpression	- 1		339262	0					
ANR	350352	UnaryOperator	-		339262	0					
ANR	350353	PrimaryExpression	1		339262	1					
ANR	350354	IfStatement	"if ( ( ! strcmp ( ao -> a [ 1 ] , ""cpsr"" ) ) || ( ! strcmp ( ao -> a [ 1 ] , ""apsr"" ) ) )"		339262	3					
ANR	350355	Condition	"( ! strcmp ( ao -> a [ 1 ] , ""cpsr"" ) ) || ( ! strcmp ( ao -> a [ 1 ] , ""apsr"" ) )"	3184:7:67417:67474	339262	0	True				
ANR	350356	OrExpression	"( ! strcmp ( ao -> a [ 1 ] , ""cpsr"" ) ) || ( ! strcmp ( ao -> a [ 1 ] , ""apsr"" ) )"		339262	0		||			
ANR	350357	UnaryOperationExpression	"! strcmp ( ao -> a [ 1 ] , ""cpsr"" )"		339262	0					
ANR	350358	UnaryOperator	!		339262	0					
ANR	350359	CallExpression	"strcmp ( ao -> a [ 1 ] , ""cpsr"" )"		339262	1					
ANR	350360	Callee	strcmp		339262	0					
ANR	350361	Identifier	strcmp		339262	0					
ANR	350362	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350363	Argument	ao -> a [ 1 ]		339262	0					
ANR	350364	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350365	PtrMemberAccess	ao -> a		339262	0					
ANR	350366	Identifier	ao		339262	0					
ANR	350367	Identifier	a		339262	1					
ANR	350368	PrimaryExpression	1		339262	1					
ANR	350369	Argument	"""cpsr"""		339262	1					
ANR	350370	PrimaryExpression	"""cpsr"""		339262	0					
ANR	350371	UnaryOperationExpression	"! strcmp ( ao -> a [ 1 ] , ""apsr"" )"		339262	1					
ANR	350372	UnaryOperator	!		339262	0					
ANR	350373	CallExpression	"strcmp ( ao -> a [ 1 ] , ""apsr"" )"		339262	1					
ANR	350374	Callee	strcmp		339262	0					
ANR	350375	Identifier	strcmp		339262	0					
ANR	350376	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350377	Argument	ao -> a [ 1 ]		339262	0					
ANR	350378	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350379	PtrMemberAccess	ao -> a		339262	0					
ANR	350380	Identifier	ao		339262	0					
ANR	350381	Identifier	a		339262	1					
ANR	350382	PrimaryExpression	1		339262	1					
ANR	350383	Argument	"""apsr"""		339262	1					
ANR	350384	PrimaryExpression	"""apsr"""		339262	0					
ANR	350385	CompoundStatement		1892:67:41618:41618	339262	1					
ANR	350386	ExpressionStatement	ao -> o = 0xeff30080	3185:4:67483:67501	339262	0	True				
ANR	350387	AssignmentExpression	ao -> o = 0xeff30080		339262	0		=			
ANR	350388	PtrMemberAccess	ao -> o		339262	0					
ANR	350389	Identifier	ao		339262	0					
ANR	350390	Identifier	o		339262	1					
ANR	350391	PrimaryExpression	0xeff30080		339262	1					
ANR	350392	ExpressionStatement	ao -> o |= reg1	3186:4:67507:67520	339262	1	True				
ANR	350393	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	350394	PtrMemberAccess	ao -> o		339262	0					
ANR	350395	Identifier	ao		339262	0					
ANR	350396	Identifier	o		339262	1					
ANR	350397	Identifier	reg1		339262	1					
ANR	350398	ReturnStatement	return 4 ;	3187:4:67526:67534	339262	2	True				
ANR	350399	PrimaryExpression	4		339262	0					
ANR	350400	IfStatement	"if ( ! strcmp ( ao -> a [ 1 ] , ""spsr"" ) )"		339262	4					
ANR	350401	Condition	"! strcmp ( ao -> a [ 1 ] , ""spsr"" )"	3190:7:67549:67573	339262	0	True				
ANR	350402	UnaryOperationExpression	"! strcmp ( ao -> a [ 1 ] , ""spsr"" )"		339262	0					
ANR	350403	UnaryOperator	!		339262	0					
ANR	350404	CallExpression	"strcmp ( ao -> a [ 1 ] , ""spsr"" )"		339262	1					
ANR	350405	Callee	strcmp		339262	0					
ANR	350406	Identifier	strcmp		339262	0					
ANR	350407	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350408	Argument	ao -> a [ 1 ]		339262	0					
ANR	350409	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350410	PtrMemberAccess	ao -> a		339262	0					
ANR	350411	Identifier	ao		339262	0					
ANR	350412	Identifier	a		339262	1					
ANR	350413	PrimaryExpression	1		339262	1					
ANR	350414	Argument	"""spsr"""		339262	1					
ANR	350415	PrimaryExpression	"""spsr"""		339262	0					
ANR	350416	CompoundStatement		1898:34:41717:41717	339262	1					
ANR	350417	ExpressionStatement	ao -> o = 0xfff30080	3191:4:67582:67600	339262	0	True				
ANR	350418	AssignmentExpression	ao -> o = 0xfff30080		339262	0		=			
ANR	350419	PtrMemberAccess	ao -> o		339262	0					
ANR	350420	Identifier	ao		339262	0					
ANR	350421	Identifier	o		339262	1					
ANR	350422	PrimaryExpression	0xfff30080		339262	1					
ANR	350423	ExpressionStatement	ao -> o |= reg1	3192:4:67606:67619	339262	1	True				
ANR	350424	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	350425	PtrMemberAccess	ao -> o		339262	0					
ANR	350426	Identifier	ao		339262	0					
ANR	350427	Identifier	o		339262	1					
ANR	350428	Identifier	reg1		339262	1					
ANR	350429	ReturnStatement	return 4 ;	3193:4:67625:67633	339262	2	True				
ANR	350430	PrimaryExpression	4		339262	0					
ANR	350431	ReturnStatement	return - 1 ;	3196:3:67647:67656	339262	5	True				
ANR	350432	UnaryOperationExpression	- 1		339262	0					
ANR	350433	UnaryOperator	-		339262	0					
ANR	350434	PrimaryExpression	1		339262	1					
ANR	350435	BreakStatement	break ;	3198:3:67673:67678	339262	2	True				
ANR	350436	Label	default :	3199:2:67682:67689	339262	3	True				
ANR	350437	Identifier	default		339262	0					
ANR	350438	ReturnStatement	return - 1 ;	3200:3:67694:67703	339262	4	True				
ANR	350439	UnaryOperationExpression	- 1		339262	0					
ANR	350440	UnaryOperator	-		339262	0					
ANR	350441	PrimaryExpression	1		339262	1					
ANR	350442	ElseStatement	else		339262	0					
ANR	350443	IfStatement	"if ( ( m = opmask ( ao -> op , ""msr"" , 0 ) ) )"		339262	0					
ANR	350444	Condition	"m = opmask ( ao -> op , ""msr"" , 0 )"	3203:5:67723:67753	339262	0	True				
ANR	350445	AssignmentExpression	"m = opmask ( ao -> op , ""msr"" , 0 )"		339262	0		=			
ANR	350446	Identifier	m		339262	0					
ANR	350447	CallExpression	"opmask ( ao -> op , ""msr"" , 0 )"		339262	1					
ANR	350448	Callee	opmask		339262	0					
ANR	350449	Identifier	opmask		339262	0					
ANR	350450	ArgumentList	ao -> op		339262	1					
ANR	350451	Argument	ao -> op		339262	0					
ANR	350452	PtrMemberAccess	ao -> op		339262	0					
ANR	350453	Identifier	ao		339262	0					
ANR	350454	Identifier	op		339262	1					
ANR	350455	Argument	"""msr"""		339262	1					
ANR	350456	PrimaryExpression	"""msr"""		339262	0					
ANR	350457	Argument	0		339262	2					
ANR	350458	PrimaryExpression	0		339262	0					
ANR	350459	CompoundStatement		1912:2:41901:41935	339262	1					
ANR	350460	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3204:2:67760:67794	339262	0	True				
ANR	350461	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	350462	IdentifierDeclType	ut64		339262	0					
ANR	350463	Identifier	argt		339262	1					
ANR	350464	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	350465	Identifier	argt		339262	0					
ANR	350466	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	350467	Callee	thumb_selector		339262	0					
ANR	350468	Identifier	thumb_selector		339262	0					
ANR	350469	ArgumentList	ao -> a		339262	1					
ANR	350470	Argument	ao -> a		339262	0					
ANR	350471	PtrMemberAccess	ao -> a		339262	0					
ANR	350472	Identifier	ao		339262	0					
ANR	350473	Identifier	a		339262	1					
ANR	350474	SwitchStatement	switch ( argt )		339262	1					
ANR	350475	Condition	argt	3205:10:67806:67809	339262	0	True				
ANR	350476	Identifier	argt		339262	0					
ANR	350477	CompoundStatement		1913:16:41953:41953	339262	1					
ANR	350478	Label	case THUMB_OTHER_REG :	3206:2:67816:67836	339262	0	True				
ANR	350479	Identifier	THUMB_OTHER_REG		339262	0					
ANR	350480	CompoundStatement		1918:3:42085:42114	339262	1					
ANR	350481	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	3207:3:67843:67871	339262	0	True				
ANR	350482	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		339262	0					
ANR	350483	Callee	r_str_case		339262	0					
ANR	350484	Identifier	r_str_case		339262	0					
ANR	350485	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350486	Argument	ao -> a [ 0 ]		339262	0					
ANR	350487	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350488	PtrMemberAccess	ao -> a		339262	0					
ANR	350489	Identifier	ao		339262	0					
ANR	350490	Identifier	a		339262	1					
ANR	350491	PrimaryExpression	0		339262	1					
ANR	350492	Argument	false		339262	1					
ANR	350493	Identifier	false		339262	0					
ANR	350494	IdentifierDeclStatement	ut8 spsr = 0 ;	3208:3:67876:67888	339262	1	True				
ANR	350495	IdentifierDecl	spsr = 0		339262	0					
ANR	350496	IdentifierDeclType	ut8		339262	0					
ANR	350497	Identifier	spsr		339262	1					
ANR	350498	AssignmentExpression	spsr = 0		339262	2		=			
ANR	350499	Identifier	spsr		339262	0					
ANR	350500	PrimaryExpression	0		339262	1					
ANR	350501	IdentifierDeclStatement	"ut8 bank = interpret_msrbank ( ao -> a [ 0 ] , & spsr ) ;"	3209:3:67893:67939	339262	2	True				
ANR	350502	IdentifierDecl	"bank = interpret_msrbank ( ao -> a [ 0 ] , & spsr )"		339262	0					
ANR	350503	IdentifierDeclType	ut8		339262	0					
ANR	350504	Identifier	bank		339262	1					
ANR	350505	AssignmentExpression	"bank = interpret_msrbank ( ao -> a [ 0 ] , & spsr )"		339262	2		=			
ANR	350506	Identifier	bank		339262	0					
ANR	350507	CallExpression	"interpret_msrbank ( ao -> a [ 0 ] , & spsr )"		339262	1					
ANR	350508	Callee	interpret_msrbank		339262	0					
ANR	350509	Identifier	interpret_msrbank		339262	0					
ANR	350510	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350511	Argument	ao -> a [ 0 ]		339262	0					
ANR	350512	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350513	PtrMemberAccess	ao -> a		339262	0					
ANR	350514	Identifier	ao		339262	0					
ANR	350515	Identifier	a		339262	1					
ANR	350516	PrimaryExpression	0		339262	1					
ANR	350517	Argument	& spsr		339262	1					
ANR	350518	UnaryOperationExpression	& spsr		339262	0					
ANR	350519	UnaryOperator	&		339262	0					
ANR	350520	Identifier	spsr		339262	1					
ANR	350521	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 1 ] ) ;	3210:3:67944:67973	339262	3	True				
ANR	350522	IdentifierDecl	reg1 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	350523	IdentifierDeclType	ut32		339262	0					
ANR	350524	Identifier	reg1		339262	1					
ANR	350525	AssignmentExpression	reg1 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	350526	Identifier	reg1		339262	0					
ANR	350527	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	350528	Callee	getreg		339262	0					
ANR	350529	Identifier	getreg		339262	0					
ANR	350530	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350531	Argument	ao -> a [ 1 ]		339262	0					
ANR	350532	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350533	PtrMemberAccess	ao -> a		339262	0					
ANR	350534	Identifier	ao		339262	0					
ANR	350535	Identifier	a		339262	1					
ANR	350536	PrimaryExpression	1		339262	1					
ANR	350537	IfStatement	if ( ( bank == 0 ) || ( reg1 > 15 ) )		339262	4					
ANR	350538	Condition	( bank == 0 ) || ( reg1 > 15 )	3212:7:67983:68008	339262	0	True				
ANR	350539	OrExpression	( bank == 0 ) || ( reg1 > 15 )		339262	0		||			
ANR	350540	EqualityExpression	bank == 0		339262	0		==			
ANR	350541	Identifier	bank		339262	0					
ANR	350542	PrimaryExpression	0		339262	1					
ANR	350543	RelationalExpression	reg1 > 15		339262	1		>			
ANR	350544	Identifier	reg1		339262	0					
ANR	350545	PrimaryExpression	15		339262	1					
ANR	350546	CompoundStatement		1920:35:42152:42152	339262	1					
ANR	350547	ReturnStatement	return - 1 ;	3213:4:68017:68026	339262	0	True				
ANR	350548	UnaryOperationExpression	- 1		339262	0					
ANR	350549	UnaryOperator	-		339262	0					
ANR	350550	PrimaryExpression	1		339262	1					
ANR	350551	ExpressionStatement	ao -> o = 0x80f30080	3216:3:68040:68058	339262	5	True				
ANR	350552	AssignmentExpression	ao -> o = 0x80f30080		339262	0		=			
ANR	350553	PtrMemberAccess	ao -> o		339262	0					
ANR	350554	Identifier	ao		339262	0					
ANR	350555	Identifier	o		339262	1					
ANR	350556	PrimaryExpression	0x80f30080		339262	1					
ANR	350557	ExpressionStatement	ao -> o |= reg1 << 24	3217:3:68063:68082	339262	6	True				
ANR	350558	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	350559	PtrMemberAccess	ao -> o		339262	0					
ANR	350560	Identifier	ao		339262	0					
ANR	350561	Identifier	o		339262	1					
ANR	350562	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	350563	Identifier	reg1		339262	0					
ANR	350564	PrimaryExpression	24		339262	1					
ANR	350565	ExpressionStatement	ao -> o |= bank	3218:3:68087:68100	339262	7	True				
ANR	350566	AssignmentExpression	ao -> o |= bank		339262	0		|=			
ANR	350567	PtrMemberAccess	ao -> o		339262	0					
ANR	350568	Identifier	ao		339262	0					
ANR	350569	Identifier	o		339262	1					
ANR	350570	Identifier	bank		339262	1					
ANR	350571	IfStatement	if ( spsr != 0 )		339262	8					
ANR	350572	Condition	spsr != 0	3219:7:68109:68117	339262	0	True				
ANR	350573	EqualityExpression	spsr != 0		339262	0		!=			
ANR	350574	Identifier	spsr		339262	0					
ANR	350575	PrimaryExpression	0		339262	1					
ANR	350576	CompoundStatement		1927:18:42261:42261	339262	1					
ANR	350577	ExpressionStatement	ao -> o |= 1 << 28	3220:4:68126:68142	339262	0	True				
ANR	350578	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	350579	PtrMemberAccess	ao -> o		339262	0					
ANR	350580	Identifier	ao		339262	0					
ANR	350581	Identifier	o		339262	1					
ANR	350582	ShiftExpression	1 << 28		339262	1		<<			
ANR	350583	PrimaryExpression	1		339262	0					
ANR	350584	PrimaryExpression	28		339262	1					
ANR	350585	ReturnStatement	return 4 ;	3222:3:68152:68160	339262	9	True				
ANR	350586	PrimaryExpression	4		339262	0					
ANR	350587	BreakStatement	break ;	3224:3:68177:68182	339262	2	True				
ANR	350588	Label	default :	3225:2:68186:68193	339262	3	True				
ANR	350589	Identifier	default		339262	0					
ANR	350590	ReturnStatement	return - 1 ;	3226:3:68198:68207	339262	4	True				
ANR	350591	UnaryOperationExpression	- 1		339262	0					
ANR	350592	UnaryOperator	-		339262	0					
ANR	350593	PrimaryExpression	1		339262	1					
ANR	350594	ElseStatement	else		339262	0					
ANR	350595	IfStatement	"if ( ( m = opmask ( ao -> op , ""mul"" , 0 ) ) )"		339262	0					
ANR	350596	Condition	"m = opmask ( ao -> op , ""mul"" , 0 )"	3229:5:68226:68256	339262	0	True				
ANR	350597	AssignmentExpression	"m = opmask ( ao -> op , ""mul"" , 0 )"		339262	0		=			
ANR	350598	Identifier	m		339262	0					
ANR	350599	CallExpression	"opmask ( ao -> op , ""mul"" , 0 )"		339262	1					
ANR	350600	Callee	opmask		339262	0					
ANR	350601	Identifier	opmask		339262	0					
ANR	350602	ArgumentList	ao -> op		339262	1					
ANR	350603	Argument	ao -> op		339262	0					
ANR	350604	PtrMemberAccess	ao -> op		339262	0					
ANR	350605	Identifier	ao		339262	0					
ANR	350606	Identifier	op		339262	1					
ANR	350607	Argument	"""mul"""		339262	1					
ANR	350608	PrimaryExpression	"""mul"""		339262	0					
ANR	350609	Argument	0		339262	2					
ANR	350610	PrimaryExpression	0		339262	0					
ANR	350611	CompoundStatement		1938:2:42404:42438	339262	1					
ANR	350612	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3230:2:68263:68297	339262	0	True				
ANR	350613	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	350614	IdentifierDeclType	ut64		339262	0					
ANR	350615	Identifier	argt		339262	1					
ANR	350616	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	350617	Identifier	argt		339262	0					
ANR	350618	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	350619	Callee	thumb_selector		339262	0					
ANR	350620	Identifier	thumb_selector		339262	0					
ANR	350621	ArgumentList	ao -> a		339262	1					
ANR	350622	Argument	ao -> a		339262	0					
ANR	350623	PtrMemberAccess	ao -> a		339262	0					
ANR	350624	Identifier	ao		339262	0					
ANR	350625	Identifier	a		339262	1					
ANR	350626	SwitchStatement	switch ( argt )		339262	1					
ANR	350627	Condition	argt	3231:10:68309:68312	339262	0	True				
ANR	350628	Identifier	argt		339262	0					
ANR	350629	CompoundStatement		1939:16:42456:42456	339262	1					
ANR	350630	Label	case THUMB_REG_REG :	3232:2:68319:68337	339262	0	True				
ANR	350631	Identifier	THUMB_REG_REG		339262	0					
ANR	350632	CompoundStatement		1940:22:42480:42480	339262	1					
ANR	350633	ExpressionStatement	std_opt_2 ( ao )	3233:3:68344:68358	339262	0	True				
ANR	350634	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	350635	Callee	std_opt_2		339262	0					
ANR	350636	Identifier	std_opt_2		339262	0					
ANR	350637	ArgumentList	ao		339262	1					
ANR	350638	Argument	ao		339262	0					
ANR	350639	Identifier	ao		339262	0					
ANR	350640	Label	case THUMB_REG_REG_REG :	3236:2:68404:68426	339262	2	True				
ANR	350641	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	350642	CompoundStatement		1946:3:42607:42635	339262	3					
ANR	350643	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3237:3:68433:68461	339262	0	True				
ANR	350644	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	350645	IdentifierDeclType	ut8		339262	0					
ANR	350646	Identifier	reg1		339262	1					
ANR	350647	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	350648	Identifier	reg1		339262	0					
ANR	350649	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	350650	Callee	getreg		339262	0					
ANR	350651	Identifier	getreg		339262	0					
ANR	350652	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350653	Argument	ao -> a [ 0 ]		339262	0					
ANR	350654	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350655	PtrMemberAccess	ao -> a		339262	0					
ANR	350656	Identifier	ao		339262	0					
ANR	350657	Identifier	a		339262	1					
ANR	350658	PrimaryExpression	0		339262	1					
ANR	350659	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	3238:3:68466:68494	339262	1	True				
ANR	350660	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	350661	IdentifierDeclType	ut8		339262	0					
ANR	350662	Identifier	reg3		339262	1					
ANR	350663	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	350664	Identifier	reg3		339262	0					
ANR	350665	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	350666	Callee	getreg		339262	0					
ANR	350667	Identifier	getreg		339262	0					
ANR	350668	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	350669	Argument	ao -> a [ 2 ]		339262	0					
ANR	350670	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	350671	PtrMemberAccess	ao -> a		339262	0					
ANR	350672	Identifier	ao		339262	0					
ANR	350673	Identifier	a		339262	1					
ANR	350674	PrimaryExpression	2		339262	1					
ANR	350675	ExpressionStatement	ao -> o = 0x4043	3240:3:68500:68514	339262	2	True				
ANR	350676	AssignmentExpression	ao -> o = 0x4043		339262	0		=			
ANR	350677	PtrMemberAccess	ao -> o		339262	0					
ANR	350678	Identifier	ao		339262	0					
ANR	350679	Identifier	o		339262	1					
ANR	350680	PrimaryExpression	0x4043		339262	1					
ANR	350681	IfStatement	"if ( ( reg1 == reg3 ) && ( std_16bit_2reg ( ao , m ) ) )"		339262	3					
ANR	350682	Condition	"( reg1 == reg3 ) && ( std_16bit_2reg ( ao , m ) )"	3241:7:68523:68564	339262	0	True				
ANR	350683	AndExpression	"( reg1 == reg3 ) && ( std_16bit_2reg ( ao , m ) )"		339262	0		&&			
ANR	350684	EqualityExpression	reg1 == reg3		339262	0		==			
ANR	350685	Identifier	reg1		339262	0					
ANR	350686	Identifier	reg3		339262	1					
ANR	350687	CallExpression	"std_16bit_2reg ( ao , m )"		339262	1					
ANR	350688	Callee	std_16bit_2reg		339262	0					
ANR	350689	Identifier	std_16bit_2reg		339262	0					
ANR	350690	ArgumentList	ao		339262	1					
ANR	350691	Argument	ao		339262	0					
ANR	350692	Identifier	ao		339262	0					
ANR	350693	Argument	m		339262	1					
ANR	350694	Identifier	m		339262	0					
ANR	350695	CompoundStatement		1949:51:42708:42708	339262	1					
ANR	350696	ReturnStatement	return 2 ;	3242:4:68573:68581	339262	0	True				
ANR	350697	PrimaryExpression	2		339262	0					
ANR	350698	ExpressionStatement	ao -> o = 0x00fb00f0	3245:3:68592:68610	339262	4	True				
ANR	350699	AssignmentExpression	ao -> o = 0x00fb00f0		339262	0		=			
ANR	350700	PtrMemberAccess	ao -> o		339262	0					
ANR	350701	Identifier	ao		339262	0					
ANR	350702	Identifier	o		339262	1					
ANR	350703	PrimaryExpression	0x00fb00f0		339262	1					
ANR	350704	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3246:3:68615:68651	339262	5	True				
ANR	350705	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	350706	Callee	std_32bit_3reg		339262	0					
ANR	350707	Identifier	std_32bit_3reg		339262	0					
ANR	350708	ArgumentList	ao		339262	1					
ANR	350709	Argument	ao		339262	0					
ANR	350710	Identifier	ao		339262	0					
ANR	350711	Argument	m		339262	1					
ANR	350712	Identifier	m		339262	0					
ANR	350713	Argument	false		339262	2					
ANR	350714	Identifier	false		339262	0					
ANR	350715	BreakStatement	break ;	3248:3:68668:68673	339262	4	True				
ANR	350716	Label	default :	3249:2:68677:68684	339262	5	True				
ANR	350717	Identifier	default		339262	0					
ANR	350718	ReturnStatement	return - 1 ;	3250:3:68689:68698	339262	6	True				
ANR	350719	UnaryOperationExpression	- 1		339262	0					
ANR	350720	UnaryOperator	-		339262	0					
ANR	350721	PrimaryExpression	1		339262	1					
ANR	350722	ElseStatement	else		339262	0					
ANR	350723	IfStatement	"if ( ( m = opmask ( ao -> op , ""mvn"" , S_BIT ) ) )"		339262	0					
ANR	350724	Condition	"m = opmask ( ao -> op , ""mvn"" , S_BIT )"	3253:5:68717:68751	339262	0	True				
ANR	350725	AssignmentExpression	"m = opmask ( ao -> op , ""mvn"" , S_BIT )"		339262	0		=			
ANR	350726	Identifier	m		339262	0					
ANR	350727	CallExpression	"opmask ( ao -> op , ""mvn"" , S_BIT )"		339262	1					
ANR	350728	Callee	opmask		339262	0					
ANR	350729	Identifier	opmask		339262	0					
ANR	350730	ArgumentList	ao -> op		339262	1					
ANR	350731	Argument	ao -> op		339262	0					
ANR	350732	PtrMemberAccess	ao -> op		339262	0					
ANR	350733	Identifier	ao		339262	0					
ANR	350734	Identifier	op		339262	1					
ANR	350735	Argument	"""mvn"""		339262	1					
ANR	350736	PrimaryExpression	"""mvn"""		339262	0					
ANR	350737	Argument	S_BIT		339262	2					
ANR	350738	Identifier	S_BIT		339262	0					
ANR	350739	CompoundStatement		1962:2:42899:42933	339262	1					
ANR	350740	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3254:2:68758:68792	339262	0	True				
ANR	350741	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	350742	IdentifierDeclType	ut64		339262	0					
ANR	350743	Identifier	argt		339262	1					
ANR	350744	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	350745	Identifier	argt		339262	0					
ANR	350746	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	350747	Callee	thumb_selector		339262	0					
ANR	350748	Identifier	thumb_selector		339262	0					
ANR	350749	ArgumentList	ao -> a		339262	1					
ANR	350750	Argument	ao -> a		339262	0					
ANR	350751	PtrMemberAccess	ao -> a		339262	0					
ANR	350752	Identifier	ao		339262	0					
ANR	350753	Identifier	a		339262	1					
ANR	350754	SwitchStatement	switch ( argt )		339262	1					
ANR	350755	Condition	argt	3255:10:68804:68807	339262	0	True				
ANR	350756	Identifier	argt		339262	0					
ANR	350757	CompoundStatement		1963:16:42951:42951	339262	1					
ANR	350758	Label	case THUMB_REG_CONST :	3256:2:68814:68834	339262	0	True				
ANR	350759	Identifier	THUMB_REG_CONST		339262	0					
ANR	350760	CompoundStatement		1967:3:43031:43065	339262	1					
ANR	350761	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3257:3:68841:68869	339262	0	True				
ANR	350762	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	350763	IdentifierDeclType	ut8		339262	0					
ANR	350764	Identifier	reg1		339262	1					
ANR	350765	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	350766	Identifier	reg1		339262	0					
ANR	350767	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	350768	Callee	getreg		339262	0					
ANR	350769	Identifier	getreg		339262	0					
ANR	350770	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350771	Argument	ao -> a [ 0 ]		339262	0					
ANR	350772	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350773	PtrMemberAccess	ao -> a		339262	0					
ANR	350774	Identifier	ao		339262	0					
ANR	350775	Identifier	a		339262	1					
ANR	350776	PrimaryExpression	0		339262	1					
ANR	350777	ExpressionStatement	err = false	3258:3:68874:68885	339262	1	True				
ANR	350778	AssignmentExpression	err = false		339262	0		=			
ANR	350779	Identifier	err		339262	0					
ANR	350780	Identifier	false		339262	1					
ANR	350781	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	3259:3:68890:68924	339262	2	True				
ANR	350782	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		339262	0					
ANR	350783	IdentifierDeclType	ut32		339262	0					
ANR	350784	Identifier	num		339262	1					
ANR	350785	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		339262	2		=			
ANR	350786	Identifier	num		339262	0					
ANR	350787	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		339262	1					
ANR	350788	Callee	getthimmed12		339262	0					
ANR	350789	Identifier	getthimmed12		339262	0					
ANR	350790	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350791	Argument	ao -> a [ 1 ]		339262	0					
ANR	350792	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350793	PtrMemberAccess	ao -> a		339262	0					
ANR	350794	Identifier	ao		339262	0					
ANR	350795	Identifier	a		339262	1					
ANR	350796	PrimaryExpression	1		339262	1					
ANR	350797	IfStatement	if ( ( reg1 > 15 ) || err )		339262	3					
ANR	350798	Condition	( reg1 > 15 ) || err	3261:7:68937:68954	339262	0	True				
ANR	350799	OrExpression	( reg1 > 15 ) || err		339262	0		||			
ANR	350800	RelationalExpression	reg1 > 15		339262	0		>			
ANR	350801	Identifier	reg1		339262	0					
ANR	350802	PrimaryExpression	15		339262	1					
ANR	350803	Identifier	err		339262	1					
ANR	350804	CompoundStatement		1969:27:43098:43098	339262	1					
ANR	350805	ReturnStatement	return - 1 ;	3262:4:68963:68972	339262	0	True				
ANR	350806	UnaryOperationExpression	- 1		339262	0					
ANR	350807	UnaryOperator	-		339262	0					
ANR	350808	PrimaryExpression	1		339262	1					
ANR	350809	ExpressionStatement	ao -> o = 0x6ff00000	3265:3:68983:69001	339262	4	True				
ANR	350810	AssignmentExpression	ao -> o = 0x6ff00000		339262	0		=			
ANR	350811	PtrMemberAccess	ao -> o		339262	0					
ANR	350812	Identifier	ao		339262	0					
ANR	350813	Identifier	o		339262	1					
ANR	350814	PrimaryExpression	0x6ff00000		339262	1					
ANR	350815	ExpressionStatement	ao -> o |= reg1	3266:3:69006:69019	339262	5	True				
ANR	350816	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	350817	PtrMemberAccess	ao -> o		339262	0					
ANR	350818	Identifier	ao		339262	0					
ANR	350819	Identifier	o		339262	1					
ANR	350820	Identifier	reg1		339262	1					
ANR	350821	ExpressionStatement	ao -> o |= num	3267:3:69024:69036	339262	6	True				
ANR	350822	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	350823	PtrMemberAccess	ao -> o		339262	0					
ANR	350824	Identifier	ao		339262	0					
ANR	350825	Identifier	o		339262	1					
ANR	350826	Identifier	num		339262	1					
ANR	350827	IfStatement	if ( m & S_BIT )		339262	7					
ANR	350828	Condition	m & S_BIT	3268:7:69045:69053	339262	0	True				
ANR	350829	BitAndExpression	m & S_BIT		339262	0		&			
ANR	350830	Identifier	m		339262	0					
ANR	350831	Identifier	S_BIT		339262	1					
ANR	350832	CompoundStatement		1976:18:43197:43197	339262	1					
ANR	350833	ExpressionStatement	ao -> o |= 1 << 28	3269:4:69062:69078	339262	0	True				
ANR	350834	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	350835	PtrMemberAccess	ao -> o		339262	0					
ANR	350836	Identifier	ao		339262	0					
ANR	350837	Identifier	o		339262	1					
ANR	350838	ShiftExpression	1 << 28		339262	1		<<			
ANR	350839	PrimaryExpression	1		339262	0					
ANR	350840	PrimaryExpression	28		339262	1					
ANR	350841	ReturnStatement	return 4 ;	3271:3:69088:69096	339262	8	True				
ANR	350842	PrimaryExpression	4		339262	0					
ANR	350843	BreakStatement	break ;	3273:3:69113:69118	339262	2	True				
ANR	350844	Label	case THUMB_REG_REG :	3274:2:69122:69140	339262	3	True				
ANR	350845	Identifier	THUMB_REG_REG		339262	0					
ANR	350846	CompoundStatement		1982:22:43283:43283	339262	4					
ANR	350847	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	3275:3:69147:69165	339262	0	True				
ANR	350848	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	350849	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	350850	PtrMemberAccess	ao -> a		339262	0					
ANR	350851	Identifier	ao		339262	0					
ANR	350852	Identifier	a		339262	1					
ANR	350853	PrimaryExpression	2		339262	1					
ANR	350854	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	350855	Label	case THUMB_REG_REG_SHIFT :	3278:2:69211:69235	339262	5	True				
ANR	350856	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	350857	CompoundStatement		1989:3:43449:43487	339262	6					
ANR	350858	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3279:3:69242:69270	339262	0	True				
ANR	350859	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	350860	IdentifierDeclType	ut8		339262	0					
ANR	350861	Identifier	reg1		339262	1					
ANR	350862	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	350863	Identifier	reg1		339262	0					
ANR	350864	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	350865	Callee	getreg		339262	0					
ANR	350866	Identifier	getreg		339262	0					
ANR	350867	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	350868	Argument	ao -> a [ 0 ]		339262	0					
ANR	350869	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	350870	PtrMemberAccess	ao -> a		339262	0					
ANR	350871	Identifier	ao		339262	0					
ANR	350872	Identifier	a		339262	1					
ANR	350873	PrimaryExpression	0		339262	1					
ANR	350874	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3280:3:69275:69303	339262	1	True				
ANR	350875	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	350876	IdentifierDeclType	ut8		339262	0					
ANR	350877	Identifier	reg2		339262	1					
ANR	350878	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	350879	Identifier	reg2		339262	0					
ANR	350880	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	350881	Callee	getreg		339262	0					
ANR	350882	Identifier	getreg		339262	0					
ANR	350883	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	350884	Argument	ao -> a [ 1 ]		339262	0					
ANR	350885	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	350886	PtrMemberAccess	ao -> a		339262	0					
ANR	350887	Identifier	ao		339262	0					
ANR	350888	Identifier	a		339262	1					
ANR	350889	PrimaryExpression	1		339262	1					
ANR	350890	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	3281:3:69308:69346	339262	2	True				
ANR	350891	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	0					
ANR	350892	IdentifierDeclType	ut32		339262	0					
ANR	350893	Identifier	shift		339262	1					
ANR	350894	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	2		=			
ANR	350895	Identifier	shift		339262	0					
ANR	350896	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		339262	1					
ANR	350897	Callee	thumb_getshift		339262	0					
ANR	350898	Identifier	thumb_getshift		339262	0					
ANR	350899	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	350900	Argument	ao -> a [ 2 ]		339262	0					
ANR	350901	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	350902	PtrMemberAccess	ao -> a		339262	0					
ANR	350903	Identifier	ao		339262	0					
ANR	350904	Identifier	a		339262	1					
ANR	350905	PrimaryExpression	2		339262	1					
ANR	350906	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		339262	3					
ANR	350907	Condition	( reg1 > 15 ) || ( reg2 > 15 )	3283:7:69356:69381	339262	0	True				
ANR	350908	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	350909	RelationalExpression	reg1 > 15		339262	0		>			
ANR	350910	Identifier	reg1		339262	0					
ANR	350911	PrimaryExpression	15		339262	1					
ANR	350912	RelationalExpression	reg2 > 15		339262	1		>			
ANR	350913	Identifier	reg2		339262	0					
ANR	350914	PrimaryExpression	15		339262	1					
ANR	350915	CompoundStatement		1991:35:43525:43525	339262	1					
ANR	350916	ReturnStatement	return - 1 ;	3284:4:69390:69399	339262	0	True				
ANR	350917	UnaryOperationExpression	- 1		339262	0					
ANR	350918	UnaryOperator	-		339262	0					
ANR	350919	PrimaryExpression	1		339262	1					
ANR	350920	ExpressionStatement	ao -> o = 0xc043	3287:3:69413:69427	339262	4	True				
ANR	350921	AssignmentExpression	ao -> o = 0xc043		339262	0		=			
ANR	350922	PtrMemberAccess	ao -> o		339262	0					
ANR	350923	Identifier	ao		339262	0					
ANR	350924	Identifier	o		339262	1					
ANR	350925	PrimaryExpression	0xc043		339262	1					
ANR	350926	IfStatement	"if ( ( shift == 0 ) && ( std_16bit_2reg ( ao , m ) ) )"		339262	5					
ANR	350927	Condition	"( shift == 0 ) && ( std_16bit_2reg ( ao , m ) )"	3288:7:69436:69475	339262	0	True				
ANR	350928	AndExpression	"( shift == 0 ) && ( std_16bit_2reg ( ao , m ) )"		339262	0		&&			
ANR	350929	EqualityExpression	shift == 0		339262	0		==			
ANR	350930	Identifier	shift		339262	0					
ANR	350931	PrimaryExpression	0		339262	1					
ANR	350932	CallExpression	"std_16bit_2reg ( ao , m )"		339262	1					
ANR	350933	Callee	std_16bit_2reg		339262	0					
ANR	350934	Identifier	std_16bit_2reg		339262	0					
ANR	350935	ArgumentList	ao		339262	1					
ANR	350936	Argument	ao		339262	0					
ANR	350937	Identifier	ao		339262	0					
ANR	350938	Argument	m		339262	1					
ANR	350939	Identifier	m		339262	0					
ANR	350940	CompoundStatement		1996:49:43619:43619	339262	1					
ANR	350941	ReturnStatement	return 2 ;	3289:4:69484:69492	339262	0	True				
ANR	350942	PrimaryExpression	2		339262	0					
ANR	350943	ExpressionStatement	ao -> o = 0x6fea0000	3292:3:69503:69521	339262	6	True				
ANR	350944	AssignmentExpression	ao -> o = 0x6fea0000		339262	0		=			
ANR	350945	PtrMemberAccess	ao -> o		339262	0					
ANR	350946	Identifier	ao		339262	0					
ANR	350947	Identifier	o		339262	1					
ANR	350948	PrimaryExpression	0x6fea0000		339262	1					
ANR	350949	ExpressionStatement	ao -> o |= reg1	3293:3:69526:69539	339262	7	True				
ANR	350950	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	350951	PtrMemberAccess	ao -> o		339262	0					
ANR	350952	Identifier	ao		339262	0					
ANR	350953	Identifier	o		339262	1					
ANR	350954	Identifier	reg1		339262	1					
ANR	350955	ExpressionStatement	ao -> o |= reg2 << 8	3294:3:69544:69562	339262	8	True				
ANR	350956	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	350957	PtrMemberAccess	ao -> o		339262	0					
ANR	350958	Identifier	ao		339262	0					
ANR	350959	Identifier	o		339262	1					
ANR	350960	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	350961	Identifier	reg2		339262	0					
ANR	350962	PrimaryExpression	8		339262	1					
ANR	350963	ExpressionStatement	ao -> o |= shift	3295:3:69567:69581	339262	9	True				
ANR	350964	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	350965	PtrMemberAccess	ao -> o		339262	0					
ANR	350966	Identifier	ao		339262	0					
ANR	350967	Identifier	o		339262	1					
ANR	350968	Identifier	shift		339262	1					
ANR	350969	IfStatement	if ( m & S_BIT )		339262	10					
ANR	350970	Condition	m & S_BIT	3296:7:69590:69598	339262	0	True				
ANR	350971	BitAndExpression	m & S_BIT		339262	0		&			
ANR	350972	Identifier	m		339262	0					
ANR	350973	Identifier	S_BIT		339262	1					
ANR	350974	CompoundStatement		2004:18:43742:43742	339262	1					
ANR	350975	ExpressionStatement	ao -> o |= 1 << 28	3297:4:69607:69623	339262	0	True				
ANR	350976	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	350977	PtrMemberAccess	ao -> o		339262	0					
ANR	350978	Identifier	ao		339262	0					
ANR	350979	Identifier	o		339262	1					
ANR	350980	ShiftExpression	1 << 28		339262	1		<<			
ANR	350981	PrimaryExpression	1		339262	0					
ANR	350982	PrimaryExpression	28		339262	1					
ANR	350983	ReturnStatement	return 4 ;	3299:3:69633:69641	339262	11	True				
ANR	350984	PrimaryExpression	4		339262	0					
ANR	350985	BreakStatement	break ;	3301:3:69658:69663	339262	7	True				
ANR	350986	Label	default :	3302:2:69667:69674	339262	8	True				
ANR	350987	Identifier	default		339262	0					
ANR	350988	ReturnStatement	return - 1 ;	3303:3:69679:69688	339262	9	True				
ANR	350989	UnaryOperationExpression	- 1		339262	0					
ANR	350990	UnaryOperator	-		339262	0					
ANR	350991	PrimaryExpression	1		339262	1					
ANR	350992	ElseStatement	else		339262	0					
ANR	350993	IfStatement	"if ( ( m = opmask ( ao -> op , ""nop"" , 0 ) ) )"		339262	0					
ANR	350994	Condition	"m = opmask ( ao -> op , ""nop"" , 0 )"	3306:5:69707:69737	339262	0	True				
ANR	350995	AssignmentExpression	"m = opmask ( ao -> op , ""nop"" , 0 )"		339262	0		=			
ANR	350996	Identifier	m		339262	0					
ANR	350997	CallExpression	"opmask ( ao -> op , ""nop"" , 0 )"		339262	1					
ANR	350998	Callee	opmask		339262	0					
ANR	350999	Identifier	opmask		339262	0					
ANR	351000	ArgumentList	ao -> op		339262	1					
ANR	351001	Argument	ao -> op		339262	0					
ANR	351002	PtrMemberAccess	ao -> op		339262	0					
ANR	351003	Identifier	ao		339262	0					
ANR	351004	Identifier	op		339262	1					
ANR	351005	Argument	"""nop"""		339262	1					
ANR	351006	PrimaryExpression	"""nop"""		339262	0					
ANR	351007	Argument	0		339262	2					
ANR	351008	PrimaryExpression	0		339262	0					
ANR	351009	CompoundStatement		2015:2:43885:43919	339262	1					
ANR	351010	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3307:2:69744:69778	339262	0	True				
ANR	351011	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	351012	IdentifierDeclType	ut64		339262	0					
ANR	351013	Identifier	argt		339262	1					
ANR	351014	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	351015	Identifier	argt		339262	0					
ANR	351016	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	351017	Callee	thumb_selector		339262	0					
ANR	351018	Identifier	thumb_selector		339262	0					
ANR	351019	ArgumentList	ao -> a		339262	1					
ANR	351020	Argument	ao -> a		339262	0					
ANR	351021	PtrMemberAccess	ao -> a		339262	0					
ANR	351022	Identifier	ao		339262	0					
ANR	351023	Identifier	a		339262	1					
ANR	351024	SwitchStatement	switch ( argt )		339262	1					
ANR	351025	Condition	argt	3308:10:69790:69793	339262	0	True				
ANR	351026	Identifier	argt		339262	0					
ANR	351027	CompoundStatement		2016:16:43937:43937	339262	1					
ANR	351028	Label	case THUMB_NONE :	3309:2:69800:69815	339262	0	True				
ANR	351029	Identifier	THUMB_NONE		339262	0					
ANR	351030	CompoundStatement		2017:19:43958:43958	339262	1					
ANR	351031	IfStatement	if ( m & DOTW_BIT )		339262	0					
ANR	351032	Condition	m & DOTW_BIT	3310:7:69826:69837	339262	0	True				
ANR	351033	BitAndExpression	m & DOTW_BIT		339262	0		&			
ANR	351034	Identifier	m		339262	0					
ANR	351035	Identifier	DOTW_BIT		339262	1					
ANR	351036	CompoundStatement		2018:21:43981:43981	339262	1					
ANR	351037	ExpressionStatement	ao -> o = 0xaff30080	3311:4:69846:69864	339262	0	True				
ANR	351038	AssignmentExpression	ao -> o = 0xaff30080		339262	0		=			
ANR	351039	PtrMemberAccess	ao -> o		339262	0					
ANR	351040	Identifier	ao		339262	0					
ANR	351041	Identifier	o		339262	1					
ANR	351042	PrimaryExpression	0xaff30080		339262	1					
ANR	351043	ReturnStatement	return 4 ;	3312:4:69870:69878	339262	1	True				
ANR	351044	PrimaryExpression	4		339262	0					
ANR	351045	ExpressionStatement	ao -> o = 0x00bf	3314:3:69888:69902	339262	1	True				
ANR	351046	AssignmentExpression	ao -> o = 0x00bf		339262	0		=			
ANR	351047	PtrMemberAccess	ao -> o		339262	0					
ANR	351048	Identifier	ao		339262	0					
ANR	351049	Identifier	o		339262	1					
ANR	351050	PrimaryExpression	0x00bf		339262	1					
ANR	351051	ReturnStatement	return 2 ;	3315:3:69907:69915	339262	2	True				
ANR	351052	PrimaryExpression	2		339262	0					
ANR	351053	BreakStatement	break ;	3317:3:69932:69937	339262	2	True				
ANR	351054	Label	default :	3318:2:69941:69948	339262	3	True				
ANR	351055	Identifier	default		339262	0					
ANR	351056	ReturnStatement	return - 1 ;	3319:3:69953:69962	339262	4	True				
ANR	351057	UnaryOperationExpression	- 1		339262	0					
ANR	351058	UnaryOperator	-		339262	0					
ANR	351059	PrimaryExpression	1		339262	1					
ANR	351060	ElseStatement	else		339262	0					
ANR	351061	IfStatement	"if ( ( m = opmask ( ao -> op , ""orn"" , S_BIT ) ) )"		339262	0					
ANR	351062	Condition	"m = opmask ( ao -> op , ""orn"" , S_BIT )"	3322:5:69981:70015	339262	0	True				
ANR	351063	AssignmentExpression	"m = opmask ( ao -> op , ""orn"" , S_BIT )"		339262	0		=			
ANR	351064	Identifier	m		339262	0					
ANR	351065	CallExpression	"opmask ( ao -> op , ""orn"" , S_BIT )"		339262	1					
ANR	351066	Callee	opmask		339262	0					
ANR	351067	Identifier	opmask		339262	0					
ANR	351068	ArgumentList	ao -> op		339262	1					
ANR	351069	Argument	ao -> op		339262	0					
ANR	351070	PtrMemberAccess	ao -> op		339262	0					
ANR	351071	Identifier	ao		339262	0					
ANR	351072	Identifier	op		339262	1					
ANR	351073	Argument	"""orn"""		339262	1					
ANR	351074	PrimaryExpression	"""orn"""		339262	0					
ANR	351075	Argument	S_BIT		339262	2					
ANR	351076	Identifier	S_BIT		339262	0					
ANR	351077	CompoundStatement		2031:2:44163:44197	339262	1					
ANR	351078	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3323:2:70022:70056	339262	0	True				
ANR	351079	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	351080	IdentifierDeclType	ut64		339262	0					
ANR	351081	Identifier	argt		339262	1					
ANR	351082	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	351083	Identifier	argt		339262	0					
ANR	351084	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	351085	Callee	thumb_selector		339262	0					
ANR	351086	Identifier	thumb_selector		339262	0					
ANR	351087	ArgumentList	ao -> a		339262	1					
ANR	351088	Argument	ao -> a		339262	0					
ANR	351089	PtrMemberAccess	ao -> a		339262	0					
ANR	351090	Identifier	ao		339262	0					
ANR	351091	Identifier	a		339262	1					
ANR	351092	SwitchStatement	switch ( argt )		339262	1					
ANR	351093	Condition	argt	3324:10:70068:70071	339262	0	True				
ANR	351094	Identifier	argt		339262	0					
ANR	351095	CompoundStatement		2032:16:44215:44215	339262	1					
ANR	351096	Label	case THUMB_REG_CONST :	3325:2:70078:70098	339262	0	True				
ANR	351097	Identifier	THUMB_REG_CONST		339262	0					
ANR	351098	CompoundStatement		2033:24:44241:44241	339262	1					
ANR	351099	ExpressionStatement	std_opt_2 ( ao )	3326:3:70105:70119	339262	0	True				
ANR	351100	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	351101	Callee	std_opt_2		339262	0					
ANR	351102	Identifier	std_opt_2		339262	0					
ANR	351103	ArgumentList	ao		339262	1					
ANR	351104	Argument	ao		339262	0					
ANR	351105	Identifier	ao		339262	0					
ANR	351106	Label	case THUMB_REG_REG_CONST :	3329:2:70165:70189	339262	2	True				
ANR	351107	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	351108	CompoundStatement		2039:3:44353:44387	339262	3					
ANR	351109	ExpressionStatement	err = false	3330:3:70196:70207	339262	0	True				
ANR	351110	AssignmentExpression	err = false		339262	0		=			
ANR	351111	Identifier	err		339262	0					
ANR	351112	Identifier	false		339262	1					
ANR	351113	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	3331:3:70212:70246	339262	1	True				
ANR	351114	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	351115	IdentifierDeclType	ut32		339262	0					
ANR	351116	Identifier	num		339262	1					
ANR	351117	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	351118	Identifier	num		339262	0					
ANR	351119	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	351120	Callee	getthimmed12		339262	0					
ANR	351121	Identifier	getthimmed12		339262	0					
ANR	351122	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	351123	Argument	ao -> a [ 2 ]		339262	0					
ANR	351124	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	351125	PtrMemberAccess	ao -> a		339262	0					
ANR	351126	Identifier	ao		339262	0					
ANR	351127	Identifier	a		339262	1					
ANR	351128	PrimaryExpression	2		339262	1					
ANR	351129	IfStatement	if ( err )		339262	2					
ANR	351130	Condition	err	3333:7:70256:70258	339262	0	True				
ANR	351131	Identifier	err		339262	0					
ANR	351132	CompoundStatement		2041:12:44402:44402	339262	1					
ANR	351133	ReturnStatement	return - 1 ;	3334:4:70267:70276	339262	0	True				
ANR	351134	UnaryOperationExpression	- 1		339262	0					
ANR	351135	UnaryOperator	-		339262	0					
ANR	351136	PrimaryExpression	1		339262	1					
ANR	351137	ExpressionStatement	ao -> o = 0x60f00000	3337:3:70287:70305	339262	3	True				
ANR	351138	AssignmentExpression	ao -> o = 0x60f00000		339262	0		=			
ANR	351139	PtrMemberAccess	ao -> o		339262	0					
ANR	351140	Identifier	ao		339262	0					
ANR	351141	Identifier	o		339262	1					
ANR	351142	PrimaryExpression	0x60f00000		339262	1					
ANR	351143	ExpressionStatement	ao -> o |= num	3338:3:70310:70322	339262	4	True				
ANR	351144	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	351145	PtrMemberAccess	ao -> o		339262	0					
ANR	351146	Identifier	ao		339262	0					
ANR	351147	Identifier	o		339262	1					
ANR	351148	Identifier	num		339262	1					
ANR	351149	ReturnStatement	"return ( std_32bit_2reg ( ao , m , false ) ) ;"	3339:3:70327:70365	339262	5	True				
ANR	351150	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	351151	Callee	std_32bit_2reg		339262	0					
ANR	351152	Identifier	std_32bit_2reg		339262	0					
ANR	351153	ArgumentList	ao		339262	1					
ANR	351154	Argument	ao		339262	0					
ANR	351155	Identifier	ao		339262	0					
ANR	351156	Argument	m		339262	1					
ANR	351157	Identifier	m		339262	0					
ANR	351158	Argument	false		339262	2					
ANR	351159	Identifier	false		339262	0					
ANR	351160	BreakStatement	break ;	3341:3:70382:70387	339262	4	True				
ANR	351161	Label	case THUMB_REG_REG :	3342:2:70391:70409	339262	5	True				
ANR	351162	Identifier	THUMB_REG_REG		339262	0					
ANR	351163	CompoundStatement		2050:22:44552:44552	339262	6					
ANR	351164	ExpressionStatement	std_opt_2 ( ao )	3343:3:70416:70430	339262	0	True				
ANR	351165	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	351166	Callee	std_opt_2		339262	0					
ANR	351167	Identifier	std_opt_2		339262	0					
ANR	351168	ArgumentList	ao		339262	1					
ANR	351169	Argument	ao		339262	0					
ANR	351170	Identifier	ao		339262	0					
ANR	351171	Label	case THUMB_REG_REG_REG :	3346:2:70476:70498	339262	7	True				
ANR	351172	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	351173	CompoundStatement		2054:26:44641:44641	339262	8					
ANR	351174	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3347:3:70505:70523	339262	0	True				
ANR	351175	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	351176	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351177	PtrMemberAccess	ao -> a		339262	0					
ANR	351178	Identifier	ao		339262	0					
ANR	351179	Identifier	a		339262	1					
ANR	351180	PrimaryExpression	3		339262	1					
ANR	351181	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	351182	Label	case THUMB_REG_REG_SHIFT :	3350:2:70569:70593	339262	9	True				
ANR	351183	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	351184	CompoundStatement		2058:28:44736:44736	339262	10					
ANR	351185	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	351186	Condition	ao -> a [ 3 ] == NULL	3351:7:70604:70619	339262	0	True				
ANR	351187	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	351188	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351189	PtrMemberAccess	ao -> a		339262	0					
ANR	351190	Identifier	ao		339262	0					
ANR	351191	Identifier	a		339262	1					
ANR	351192	PrimaryExpression	3		339262	1					
ANR	351193	Identifier	NULL		339262	1					
ANR	351194	CompoundStatement		2059:25:44763:44763	339262	1					
ANR	351195	ExpressionStatement	std_opt_3 ( ao )	3352:4:70650:70664	339262	0	True				
ANR	351196	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	351197	Callee	std_opt_3		339262	0					
ANR	351198	Identifier	std_opt_3		339262	0					
ANR	351199	ArgumentList	ao		339262	1					
ANR	351200	Argument	ao		339262	0					
ANR	351201	Identifier	ao		339262	0					
ANR	351202	Label	case THUMB_REG_REG_REG_SHIFT :	3356:2:70715:70743	339262	11	True				
ANR	351203	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	351204	CompoundStatement		2064:32:44886:44886	339262	12					
ANR	351205	ExpressionStatement	ao -> o = 0x60ea0000	3357:3:70750:70768	339262	0	True				
ANR	351206	AssignmentExpression	ao -> o = 0x60ea0000		339262	0		=			
ANR	351207	PtrMemberAccess	ao -> o		339262	0					
ANR	351208	Identifier	ao		339262	0					
ANR	351209	Identifier	o		339262	1					
ANR	351210	PrimaryExpression	0x60ea0000		339262	1					
ANR	351211	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	3358:3:70773:70808	339262	1	True				
ANR	351212	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	351213	Callee	std_32bit_3reg		339262	0					
ANR	351214	Identifier	std_32bit_3reg		339262	0					
ANR	351215	ArgumentList	ao		339262	1					
ANR	351216	Argument	ao		339262	0					
ANR	351217	Identifier	ao		339262	0					
ANR	351218	Argument	m		339262	1					
ANR	351219	Identifier	m		339262	0					
ANR	351220	Argument	true		339262	2					
ANR	351221	Identifier	true		339262	0					
ANR	351222	BreakStatement	break ;	3360:3:70825:70830	339262	13	True				
ANR	351223	Label	default :	3361:2:70834:70841	339262	14	True				
ANR	351224	Identifier	default		339262	0					
ANR	351225	ReturnStatement	return - 1 ;	3362:3:70846:70855	339262	15	True				
ANR	351226	UnaryOperationExpression	- 1		339262	0					
ANR	351227	UnaryOperator	-		339262	0					
ANR	351228	PrimaryExpression	1		339262	1					
ANR	351229	ElseStatement	else		339262	0					
ANR	351230	IfStatement	"if ( ( m = opmask ( ao -> op , ""orr"" , S_BIT ) ) )"		339262	0					
ANR	351231	Condition	"m = opmask ( ao -> op , ""orr"" , S_BIT )"	3365:5:70875:70909	339262	0	True				
ANR	351232	AssignmentExpression	"m = opmask ( ao -> op , ""orr"" , S_BIT )"		339262	0		=			
ANR	351233	Identifier	m		339262	0					
ANR	351234	CallExpression	"opmask ( ao -> op , ""orr"" , S_BIT )"		339262	1					
ANR	351235	Callee	opmask		339262	0					
ANR	351236	Identifier	opmask		339262	0					
ANR	351237	ArgumentList	ao -> op		339262	1					
ANR	351238	Argument	ao -> op		339262	0					
ANR	351239	PtrMemberAccess	ao -> op		339262	0					
ANR	351240	Identifier	ao		339262	0					
ANR	351241	Identifier	op		339262	1					
ANR	351242	Argument	"""orr"""		339262	1					
ANR	351243	PrimaryExpression	"""orr"""		339262	0					
ANR	351244	Argument	S_BIT		339262	2					
ANR	351245	Identifier	S_BIT		339262	0					
ANR	351246	CompoundStatement		2074:2:45057:45091	339262	1					
ANR	351247	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3366:2:70916:70950	339262	0	True				
ANR	351248	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	351249	IdentifierDeclType	ut64		339262	0					
ANR	351250	Identifier	argt		339262	1					
ANR	351251	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	351252	Identifier	argt		339262	0					
ANR	351253	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	351254	Callee	thumb_selector		339262	0					
ANR	351255	Identifier	thumb_selector		339262	0					
ANR	351256	ArgumentList	ao -> a		339262	1					
ANR	351257	Argument	ao -> a		339262	0					
ANR	351258	PtrMemberAccess	ao -> a		339262	0					
ANR	351259	Identifier	ao		339262	0					
ANR	351260	Identifier	a		339262	1					
ANR	351261	SwitchStatement	switch ( argt )		339262	1					
ANR	351262	Condition	argt	3367:10:70962:70965	339262	0	True				
ANR	351263	Identifier	argt		339262	0					
ANR	351264	CompoundStatement		2075:16:45109:45109	339262	1					
ANR	351265	Label	case THUMB_REG_CONST :	3368:2:70972:70992	339262	0	True				
ANR	351266	Identifier	THUMB_REG_CONST		339262	0					
ANR	351267	CompoundStatement		2076:24:45135:45135	339262	1					
ANR	351268	ExpressionStatement	std_opt_2 ( ao )	3369:3:70999:71013	339262	0	True				
ANR	351269	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	351270	Callee	std_opt_2		339262	0					
ANR	351271	Identifier	std_opt_2		339262	0					
ANR	351272	ArgumentList	ao		339262	1					
ANR	351273	Argument	ao		339262	0					
ANR	351274	Identifier	ao		339262	0					
ANR	351275	Label	case THUMB_REG_REG_CONST :	3372:2:71059:71083	339262	2	True				
ANR	351276	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	351277	CompoundStatement		2082:3:45247:45281	339262	3					
ANR	351278	ExpressionStatement	err = false	3373:3:71090:71101	339262	0	True				
ANR	351279	AssignmentExpression	err = false		339262	0		=			
ANR	351280	Identifier	err		339262	0					
ANR	351281	Identifier	false		339262	1					
ANR	351282	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	3374:3:71106:71140	339262	1	True				
ANR	351283	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	351284	IdentifierDeclType	ut32		339262	0					
ANR	351285	Identifier	num		339262	1					
ANR	351286	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	351287	Identifier	num		339262	0					
ANR	351288	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	351289	Callee	getthimmed12		339262	0					
ANR	351290	Identifier	getthimmed12		339262	0					
ANR	351291	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	351292	Argument	ao -> a [ 2 ]		339262	0					
ANR	351293	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	351294	PtrMemberAccess	ao -> a		339262	0					
ANR	351295	Identifier	ao		339262	0					
ANR	351296	Identifier	a		339262	1					
ANR	351297	PrimaryExpression	2		339262	1					
ANR	351298	IfStatement	if ( err )		339262	2					
ANR	351299	Condition	err	3376:7:71150:71152	339262	0	True				
ANR	351300	Identifier	err		339262	0					
ANR	351301	CompoundStatement		2084:12:45296:45296	339262	1					
ANR	351302	ReturnStatement	return - 1 ;	3377:4:71161:71170	339262	0	True				
ANR	351303	UnaryOperationExpression	- 1		339262	0					
ANR	351304	UnaryOperator	-		339262	0					
ANR	351305	PrimaryExpression	1		339262	1					
ANR	351306	ExpressionStatement	ao -> o = 0x40f00000	3380:3:71181:71199	339262	3	True				
ANR	351307	AssignmentExpression	ao -> o = 0x40f00000		339262	0		=			
ANR	351308	PtrMemberAccess	ao -> o		339262	0					
ANR	351309	Identifier	ao		339262	0					
ANR	351310	Identifier	o		339262	1					
ANR	351311	PrimaryExpression	0x40f00000		339262	1					
ANR	351312	ExpressionStatement	ao -> o |= num	3381:3:71204:71216	339262	4	True				
ANR	351313	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	351314	PtrMemberAccess	ao -> o		339262	0					
ANR	351315	Identifier	ao		339262	0					
ANR	351316	Identifier	o		339262	1					
ANR	351317	Identifier	num		339262	1					
ANR	351318	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	3382:3:71221:71257	339262	5	True				
ANR	351319	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	351320	Callee	std_32bit_2reg		339262	0					
ANR	351321	Identifier	std_32bit_2reg		339262	0					
ANR	351322	ArgumentList	ao		339262	1					
ANR	351323	Argument	ao		339262	0					
ANR	351324	Identifier	ao		339262	0					
ANR	351325	Argument	m		339262	1					
ANR	351326	Identifier	m		339262	0					
ANR	351327	Argument	false		339262	2					
ANR	351328	Identifier	false		339262	0					
ANR	351329	BreakStatement	break ;	3384:3:71274:71279	339262	4	True				
ANR	351330	Label	case THUMB_REG_REG :	3385:2:71283:71301	339262	5	True				
ANR	351331	Identifier	THUMB_REG_REG		339262	0					
ANR	351332	CompoundStatement		2093:22:45444:45444	339262	6					
ANR	351333	ExpressionStatement	ao -> o = 0x0043	3386:3:71308:71322	339262	0	True				
ANR	351334	AssignmentExpression	ao -> o = 0x0043		339262	0		=			
ANR	351335	PtrMemberAccess	ao -> o		339262	0					
ANR	351336	Identifier	ao		339262	0					
ANR	351337	Identifier	o		339262	1					
ANR	351338	PrimaryExpression	0x0043		339262	1					
ANR	351339	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	351340	Condition	"std_16bit_2reg ( ao , m )"	3387:7:71331:71352	339262	0	True				
ANR	351341	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	351342	Callee	std_16bit_2reg		339262	0					
ANR	351343	Identifier	std_16bit_2reg		339262	0					
ANR	351344	ArgumentList	ao		339262	1					
ANR	351345	Argument	ao		339262	0					
ANR	351346	Identifier	ao		339262	0					
ANR	351347	Argument	m		339262	1					
ANR	351348	Identifier	m		339262	0					
ANR	351349	CompoundStatement		2095:31:45496:45496	339262	1					
ANR	351350	ReturnStatement	return 2 ;	3388:4:71361:71369	339262	0	True				
ANR	351351	PrimaryExpression	2		339262	0					
ANR	351352	ExpressionStatement	std_opt_2 ( ao )	3390:3:71379:71393	339262	2	True				
ANR	351353	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	351354	Callee	std_opt_2		339262	0					
ANR	351355	Identifier	std_opt_2		339262	0					
ANR	351356	ArgumentList	ao		339262	1					
ANR	351357	Argument	ao		339262	0					
ANR	351358	Identifier	ao		339262	0					
ANR	351359	Label	case THUMB_REG_REG_REG :	3393:2:71439:71461	339262	7	True				
ANR	351360	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	351361	CompoundStatement		2101:26:45604:45604	339262	8					
ANR	351362	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3394:3:71468:71486	339262	0	True				
ANR	351363	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	351364	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351365	PtrMemberAccess	ao -> a		339262	0					
ANR	351366	Identifier	ao		339262	0					
ANR	351367	Identifier	a		339262	1					
ANR	351368	PrimaryExpression	3		339262	1					
ANR	351369	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	351370	Label	case THUMB_REG_REG_SHIFT :	3397:2:71532:71556	339262	9	True				
ANR	351371	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	351372	CompoundStatement		2105:28:45699:45699	339262	10					
ANR	351373	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	351374	Condition	ao -> a [ 3 ] == NULL	3398:7:71567:71582	339262	0	True				
ANR	351375	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	351376	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351377	PtrMemberAccess	ao -> a		339262	0					
ANR	351378	Identifier	ao		339262	0					
ANR	351379	Identifier	a		339262	1					
ANR	351380	PrimaryExpression	3		339262	1					
ANR	351381	Identifier	NULL		339262	1					
ANR	351382	CompoundStatement		2106:25:45726:45726	339262	1					
ANR	351383	ExpressionStatement	std_opt_3 ( ao )	3399:4:71613:71627	339262	0	True				
ANR	351384	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	351385	Callee	std_opt_3		339262	0					
ANR	351386	Identifier	std_opt_3		339262	0					
ANR	351387	ArgumentList	ao		339262	1					
ANR	351388	Argument	ao		339262	0					
ANR	351389	Identifier	ao		339262	0					
ANR	351390	Label	case THUMB_REG_REG_REG_SHIFT :	3403:2:71678:71706	339262	11	True				
ANR	351391	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	351392	CompoundStatement		2111:32:45849:45849	339262	12					
ANR	351393	ExpressionStatement	ao -> o = 0x40ea0000	3404:3:71713:71731	339262	0	True				
ANR	351394	AssignmentExpression	ao -> o = 0x40ea0000		339262	0		=			
ANR	351395	PtrMemberAccess	ao -> o		339262	0					
ANR	351396	Identifier	ao		339262	0					
ANR	351397	Identifier	o		339262	1					
ANR	351398	PrimaryExpression	0x40ea0000		339262	1					
ANR	351399	ReturnStatement	"return ( std_32bit_3reg ( ao , m , true ) ) ;"	3405:3:71736:71773	339262	1	True				
ANR	351400	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	351401	Callee	std_32bit_3reg		339262	0					
ANR	351402	Identifier	std_32bit_3reg		339262	0					
ANR	351403	ArgumentList	ao		339262	1					
ANR	351404	Argument	ao		339262	0					
ANR	351405	Identifier	ao		339262	0					
ANR	351406	Argument	m		339262	1					
ANR	351407	Identifier	m		339262	0					
ANR	351408	Argument	true		339262	2					
ANR	351409	Identifier	true		339262	0					
ANR	351410	BreakStatement	break ;	3407:3:71790:71795	339262	13	True				
ANR	351411	Label	default :	3408:2:71799:71806	339262	14	True				
ANR	351412	Identifier	default		339262	0					
ANR	351413	ReturnStatement	return - 1 ;	3409:3:71811:71820	339262	15	True				
ANR	351414	UnaryOperationExpression	- 1		339262	0					
ANR	351415	UnaryOperator	-		339262	0					
ANR	351416	PrimaryExpression	1		339262	1					
ANR	351417	ElseStatement	else		339262	0					
ANR	351418	IfStatement	"if ( ( m = opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT ) ) )"		339262	0					
ANR	351419	Condition	"m = opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT )"	3412:5:71840:71884	339262	0	True				
ANR	351420	AssignmentExpression	"m = opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT )"		339262	0		=			
ANR	351421	Identifier	m		339262	0					
ANR	351422	CallExpression	"opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT )"		339262	1					
ANR	351423	Callee	opmask		339262	0					
ANR	351424	Identifier	opmask		339262	0					
ANR	351425	ArgumentList	ao -> op		339262	1					
ANR	351426	Argument	ao -> op		339262	0					
ANR	351427	PtrMemberAccess	ao -> op		339262	0					
ANR	351428	Identifier	ao		339262	0					
ANR	351429	Identifier	op		339262	1					
ANR	351430	Argument	"""pkh"""		339262	1					
ANR	351431	PrimaryExpression	"""pkh"""		339262	0					
ANR	351432	Argument	BT_BIT | TB_BIT		339262	2					
ANR	351433	InclusiveOrExpression	BT_BIT | TB_BIT		339262	0		|			
ANR	351434	Identifier	BT_BIT		339262	0					
ANR	351435	Identifier	TB_BIT		339262	1					
ANR	351436	CompoundStatement		2121:2:46032:46066	339262	1					
ANR	351437	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3413:2:71891:71925	339262	0	True				
ANR	351438	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	351439	IdentifierDeclType	ut64		339262	0					
ANR	351440	Identifier	argt		339262	1					
ANR	351441	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	351442	Identifier	argt		339262	0					
ANR	351443	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	351444	Callee	thumb_selector		339262	0					
ANR	351445	Identifier	thumb_selector		339262	0					
ANR	351446	ArgumentList	ao -> a		339262	1					
ANR	351447	Argument	ao -> a		339262	0					
ANR	351448	PtrMemberAccess	ao -> a		339262	0					
ANR	351449	Identifier	ao		339262	0					
ANR	351450	Identifier	a		339262	1					
ANR	351451	SwitchStatement	switch ( argt )		339262	1					
ANR	351452	Condition	argt	3414:10:71937:71940	339262	0	True				
ANR	351453	Identifier	argt		339262	0					
ANR	351454	CompoundStatement		2122:16:46084:46084	339262	1					
ANR	351455	Label	case THUMB_REG_REG :	3415:2:71947:71965	339262	0	True				
ANR	351456	Identifier	THUMB_REG_REG		339262	0					
ANR	351457	CompoundStatement		2123:22:46108:46108	339262	1					
ANR	351458	ExpressionStatement	std_opt_2 ( ao )	3416:3:71972:71986	339262	0	True				
ANR	351459	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	351460	Callee	std_opt_2		339262	0					
ANR	351461	Identifier	std_opt_2		339262	0					
ANR	351462	ArgumentList	ao		339262	1					
ANR	351463	Argument	ao		339262	0					
ANR	351464	Identifier	ao		339262	0					
ANR	351465	Label	case THUMB_REG_REG_REG :	3419:2:72032:72054	339262	2	True				
ANR	351466	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	351467	CompoundStatement		2127:26:46197:46197	339262	3					
ANR	351468	IfStatement	if ( m & TB_BIT )		339262	0					
ANR	351469	Condition	m & TB_BIT	3420:7:72065:72074	339262	0	True				
ANR	351470	BitAndExpression	m & TB_BIT		339262	0		&			
ANR	351471	Identifier	m		339262	0					
ANR	351472	Identifier	TB_BIT		339262	1					
ANR	351473	CompoundStatement		2128:19:46218:46218	339262	1					
ANR	351474	ExpressionStatement	"ao -> a [ 3 ] = ""asr 0"""	3421:4:72083:72101	339262	0	True				
ANR	351475	AssignmentExpression	"ao -> a [ 3 ] = ""asr 0"""		339262	0		=			
ANR	351476	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351477	PtrMemberAccess	ao -> a		339262	0					
ANR	351478	Identifier	ao		339262	0					
ANR	351479	Identifier	a		339262	1					
ANR	351480	PrimaryExpression	3		339262	1					
ANR	351481	PrimaryExpression	"""asr 0"""		339262	1					
ANR	351482	ElseStatement	else		339262	0					
ANR	351483	IfStatement	if ( m & BT_BIT )		339262	0					
ANR	351484	Condition	m & BT_BIT	3423:7:72120:72129	339262	0	True				
ANR	351485	BitAndExpression	m & BT_BIT		339262	0		&			
ANR	351486	Identifier	m		339262	0					
ANR	351487	Identifier	BT_BIT		339262	1					
ANR	351488	CompoundStatement		2131:19:46273:46273	339262	1					
ANR	351489	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3424:4:72138:72156	339262	0	True				
ANR	351490	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	351491	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351492	PtrMemberAccess	ao -> a		339262	0					
ANR	351493	Identifier	ao		339262	0					
ANR	351494	Identifier	a		339262	1					
ANR	351495	PrimaryExpression	3		339262	1					
ANR	351496	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	351497	ElseStatement	else		339262	0					
ANR	351498	CompoundStatement		2133:10:46309:46309	339262	0					
ANR	351499	ReturnStatement	return - 1 ;	3426:4:72174:72183	339262	0	True				
ANR	351500	UnaryOperationExpression	- 1		339262	0					
ANR	351501	UnaryOperator	-		339262	0					
ANR	351502	PrimaryExpression	1		339262	1					
ANR	351503	Label	case THUMB_REG_REG_SHIFT :	3430:2:72234:72258	339262	4	True				
ANR	351504	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	351505	CompoundStatement		2138:28:46401:46401	339262	5					
ANR	351506	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	351507	Condition	ao -> a [ 3 ] == NULL	3431:7:72269:72284	339262	0	True				
ANR	351508	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	351509	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351510	PtrMemberAccess	ao -> a		339262	0					
ANR	351511	Identifier	ao		339262	0					
ANR	351512	Identifier	a		339262	1					
ANR	351513	PrimaryExpression	3		339262	1					
ANR	351514	Identifier	NULL		339262	1					
ANR	351515	CompoundStatement		2139:25:46428:46428	339262	1					
ANR	351516	ExpressionStatement	std_opt_3 ( ao )	3432:4:72315:72329	339262	0	True				
ANR	351517	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	351518	Callee	std_opt_3		339262	0					
ANR	351519	Identifier	std_opt_3		339262	0					
ANR	351520	ArgumentList	ao		339262	1					
ANR	351521	Argument	ao		339262	0					
ANR	351522	Identifier	ao		339262	0					
ANR	351523	Label	case THUMB_REG_REG_REG_SHIFT :	3436:2:72380:72408	339262	6	True				
ANR	351524	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	351525	CompoundStatement		2145:3:46556:46594	339262	7					
ANR	351526	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	3437:3:72415:72453	339262	0	True				
ANR	351527	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	351528	IdentifierDeclType	ut32		339262	0					
ANR	351529	Identifier	shift		339262	1					
ANR	351530	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	351531	Identifier	shift		339262	0					
ANR	351532	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	351533	Callee	thumb_getshift		339262	0					
ANR	351534	Identifier	thumb_getshift		339262	0					
ANR	351535	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	351536	Argument	ao -> a [ 3 ]		339262	0					
ANR	351537	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	351538	PtrMemberAccess	ao -> a		339262	0					
ANR	351539	Identifier	ao		339262	0					
ANR	351540	Identifier	a		339262	1					
ANR	351541	PrimaryExpression	3		339262	1					
ANR	351542	IfStatement	if ( ( ( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 ) ) || ( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 ) )		339262	1					
ANR	351543	Condition	( ( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 ) ) || ( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 )	3439:7:72463:72599	339262	0	True				
ANR	351544	OrExpression	( ( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 ) ) || ( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 )		339262	0		||			
ANR	351545	AndExpression	( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 )		339262	0		&&			
ANR	351546	BitAndExpression	m & TB_BIT		339262	0		&			
ANR	351547	Identifier	m		339262	0					
ANR	351548	Identifier	TB_BIT		339262	1					
ANR	351549	EqualityExpression	( shift & 0x00003000 ) != 0x00002000		339262	1		!=			
ANR	351550	BitAndExpression	shift & 0x00003000		339262	0		&			
ANR	351551	Identifier	shift		339262	0					
ANR	351552	PrimaryExpression	0x00003000		339262	1					
ANR	351553	PrimaryExpression	0x00002000		339262	1					
ANR	351554	OrExpression	( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 )		339262	1		||			
ANR	351555	AndExpression	( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 )		339262	0		&&			
ANR	351556	BitAndExpression	m & BT_BIT		339262	0		&			
ANR	351557	Identifier	m		339262	0					
ANR	351558	Identifier	BT_BIT		339262	1					
ANR	351559	EqualityExpression	( shift & 0x00003000 ) != 0		339262	1		!=			
ANR	351560	BitAndExpression	shift & 0x00003000		339262	0		&			
ANR	351561	Identifier	shift		339262	0					
ANR	351562	PrimaryExpression	0x00003000		339262	1					
ANR	351563	PrimaryExpression	0		339262	1					
ANR	351564	EqualityExpression	( m & ( TB_BIT | BT_BIT ) ) == 0		339262	1		==			
ANR	351565	BitAndExpression	m & ( TB_BIT | BT_BIT )		339262	0		&			
ANR	351566	Identifier	m		339262	0					
ANR	351567	InclusiveOrExpression	TB_BIT | BT_BIT		339262	1		|			
ANR	351568	Identifier	TB_BIT		339262	0					
ANR	351569	Identifier	BT_BIT		339262	1					
ANR	351570	PrimaryExpression	0		339262	1					
ANR	351571	CompoundStatement		2147:146:46743:46743	339262	1					
ANR	351572	ReturnStatement	return - 1 ;	3440:4:72609:72618	339262	0	True				
ANR	351573	UnaryOperationExpression	- 1		339262	0					
ANR	351574	UnaryOperator	-		339262	0					
ANR	351575	PrimaryExpression	1		339262	1					
ANR	351576	ExpressionStatement	ao -> o = 0xc0ea0000	3443:3:72629:72647	339262	2	True				
ANR	351577	AssignmentExpression	ao -> o = 0xc0ea0000		339262	0		=			
ANR	351578	PtrMemberAccess	ao -> o		339262	0					
ANR	351579	Identifier	ao		339262	0					
ANR	351580	Identifier	o		339262	1					
ANR	351581	PrimaryExpression	0xc0ea0000		339262	1					
ANR	351582	ReturnStatement	"return ( std_32bit_3reg ( ao , m , true ) ) ;"	3444:3:72652:72689	339262	3	True				
ANR	351583	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	351584	Callee	std_32bit_3reg		339262	0					
ANR	351585	Identifier	std_32bit_3reg		339262	0					
ANR	351586	ArgumentList	ao		339262	1					
ANR	351587	Argument	ao		339262	0					
ANR	351588	Identifier	ao		339262	0					
ANR	351589	Argument	m		339262	1					
ANR	351590	Identifier	m		339262	0					
ANR	351591	Argument	true		339262	2					
ANR	351592	Identifier	true		339262	0					
ANR	351593	BreakStatement	break ;	3446:3:72706:72711	339262	8	True				
ANR	351594	Label	default :	3447:2:72715:72722	339262	9	True				
ANR	351595	Identifier	default		339262	0					
ANR	351596	ReturnStatement	return - 1 ;	3448:3:72727:72736	339262	10	True				
ANR	351597	UnaryOperationExpression	- 1		339262	0					
ANR	351598	UnaryOperator	-		339262	0					
ANR	351599	PrimaryExpression	1		339262	1					
ANR	351600	ElseStatement	else		339262	0					
ANR	351601	IfStatement	"if ( ( m = opmask ( ao -> op , ""pld"" , 0 ) ) )"		339262	0					
ANR	351602	Condition	"m = opmask ( ao -> op , ""pld"" , 0 )"	3451:5:72755:72785	339262	0	True				
ANR	351603	AssignmentExpression	"m = opmask ( ao -> op , ""pld"" , 0 )"		339262	0		=			
ANR	351604	Identifier	m		339262	0					
ANR	351605	CallExpression	"opmask ( ao -> op , ""pld"" , 0 )"		339262	1					
ANR	351606	Callee	opmask		339262	0					
ANR	351607	Identifier	opmask		339262	0					
ANR	351608	ArgumentList	ao -> op		339262	1					
ANR	351609	Argument	ao -> op		339262	0					
ANR	351610	PtrMemberAccess	ao -> op		339262	0					
ANR	351611	Identifier	ao		339262	0					
ANR	351612	Identifier	op		339262	1					
ANR	351613	Argument	"""pld"""		339262	1					
ANR	351614	PrimaryExpression	"""pld"""		339262	0					
ANR	351615	Argument	0		339262	2					
ANR	351616	PrimaryExpression	0		339262	0					
ANR	351617	CompoundStatement		2160:2:46933:46967	339262	1					
ANR	351618	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3452:2:72792:72826	339262	0	True				
ANR	351619	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	351620	IdentifierDeclType	ut64		339262	0					
ANR	351621	Identifier	argt		339262	1					
ANR	351622	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	351623	Identifier	argt		339262	0					
ANR	351624	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	351625	Callee	thumb_selector		339262	0					
ANR	351626	Identifier	thumb_selector		339262	0					
ANR	351627	ArgumentList	ao -> a		339262	1					
ANR	351628	Argument	ao -> a		339262	0					
ANR	351629	PtrMemberAccess	ao -> a		339262	0					
ANR	351630	Identifier	ao		339262	0					
ANR	351631	Identifier	a		339262	1					
ANR	351632	SwitchStatement	switch ( argt )		339262	1					
ANR	351633	Condition	argt	3453:10:72838:72841	339262	0	True				
ANR	351634	Identifier	argt		339262	0					
ANR	351635	CompoundStatement		2161:16:46985:46985	339262	1					
ANR	351636	Label	case THUMB_BRACKREG_CONSTBRACK :	3454:2:72848:72878	339262	0	True				
ANR	351637	Identifier	THUMB_BRACKREG_CONSTBRACK		339262	0					
ANR	351638	CompoundStatement		2164:3:47067:47101	339262	1					
ANR	351639	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3455:3:72885:72921	339262	0	True				
ANR	351640	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	0					
ANR	351641	IdentifierDeclType	ut8		339262	0					
ANR	351642	Identifier	reg1		339262	1					
ANR	351643	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	2		=			
ANR	351644	Identifier	reg1		339262	0					
ANR	351645	CallExpression	getregmemstart ( ao -> a [ 0 ] )		339262	1					
ANR	351646	Callee	getregmemstart		339262	0					
ANR	351647	Identifier	getregmemstart		339262	0					
ANR	351648	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	351649	Argument	ao -> a [ 0 ]		339262	0					
ANR	351650	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	351651	PtrMemberAccess	ao -> a		339262	0					
ANR	351652	Identifier	ao		339262	0					
ANR	351653	Identifier	a		339262	1					
ANR	351654	PrimaryExpression	0		339262	1					
ANR	351655	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 1 ] ) ;	3456:3:72926:72960	339262	1	True				
ANR	351656	IdentifierDecl	num = getnummemend ( ao -> a [ 1 ] )		339262	0					
ANR	351657	IdentifierDeclType	st32		339262	0					
ANR	351658	Identifier	num		339262	1					
ANR	351659	AssignmentExpression	num = getnummemend ( ao -> a [ 1 ] )		339262	2		=			
ANR	351660	Identifier	num		339262	0					
ANR	351661	CallExpression	getnummemend ( ao -> a [ 1 ] )		339262	1					
ANR	351662	Callee	getnummemend		339262	0					
ANR	351663	Identifier	getnummemend		339262	0					
ANR	351664	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	351665	Argument	ao -> a [ 1 ]		339262	0					
ANR	351666	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	351667	PtrMemberAccess	ao -> a		339262	0					
ANR	351668	Identifier	ao		339262	0					
ANR	351669	Identifier	a		339262	1					
ANR	351670	PrimaryExpression	1		339262	1					
ANR	351671	IfStatement	if ( reg1 == 15 )		339262	2					
ANR	351672	Condition	reg1 == 15	3458:7:72970:72979	339262	0	True				
ANR	351673	EqualityExpression	reg1 == 15		339262	0		==			
ANR	351674	Identifier	reg1		339262	0					
ANR	351675	PrimaryExpression	15		339262	1					
ANR	351676	CompoundStatement		2166:19:47123:47123	339262	1					
ANR	351677	IfStatement	if ( ( num < - 4095 ) || ( num > 4095 ) )		339262	0					
ANR	351678	Condition	( num < - 4095 ) || ( num > 4095 )	3459:8:72992:73020	339262	0	True				
ANR	351679	OrExpression	( num < - 4095 ) || ( num > 4095 )		339262	0		||			
ANR	351680	RelationalExpression	num < - 4095		339262	0		<			
ANR	351681	Identifier	num		339262	0					
ANR	351682	UnaryOperationExpression	- 4095		339262	1					
ANR	351683	UnaryOperator	-		339262	0					
ANR	351684	PrimaryExpression	4095		339262	1					
ANR	351685	RelationalExpression	num > 4095		339262	1		>			
ANR	351686	Identifier	num		339262	0					
ANR	351687	PrimaryExpression	4095		339262	1					
ANR	351688	CompoundStatement		2167:39:47164:47164	339262	1					
ANR	351689	ReturnStatement	return - 1 ;	3460:5:73030:73039	339262	0	True				
ANR	351690	UnaryOperationExpression	- 1		339262	0					
ANR	351691	UnaryOperator	-		339262	0					
ANR	351692	PrimaryExpression	1		339262	1					
ANR	351693	ExpressionStatement	ao -> o = 0x1ff800f0	3462:4:73051:73069	339262	1	True				
ANR	351694	AssignmentExpression	ao -> o = 0x1ff800f0		339262	0		=			
ANR	351695	PtrMemberAccess	ao -> o		339262	0					
ANR	351696	Identifier	ao		339262	0					
ANR	351697	Identifier	o		339262	1					
ANR	351698	PrimaryExpression	0x1ff800f0		339262	1					
ANR	351699	IfStatement	if ( num > 0 )		339262	2					
ANR	351700	Condition	num > 0	3463:8:73079:73085	339262	0	True				
ANR	351701	RelationalExpression	num > 0		339262	0		>			
ANR	351702	Identifier	num		339262	0					
ANR	351703	PrimaryExpression	0		339262	1					
ANR	351704	CompoundStatement		2171:17:47229:47229	339262	1					
ANR	351705	ExpressionStatement	ao -> o |= 1 << 31	3464:5:73095:73111	339262	0	True				
ANR	351706	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	351707	PtrMemberAccess	ao -> o		339262	0					
ANR	351708	Identifier	ao		339262	0					
ANR	351709	Identifier	o		339262	1					
ANR	351710	ShiftExpression	1 << 31		339262	1		<<			
ANR	351711	PrimaryExpression	1		339262	0					
ANR	351712	PrimaryExpression	31		339262	1					
ANR	351713	ElseStatement	else		339262	0					
ANR	351714	CompoundStatement		2173:11:47265:47265	339262	0					
ANR	351715	ExpressionStatement	num = - num	3466:5:73131:73141	339262	0	True				
ANR	351716	AssignmentExpression	num = - num		339262	0		=			
ANR	351717	Identifier	num		339262	0					
ANR	351718	UnaryOperationExpression	- num		339262	1					
ANR	351719	UnaryOperator	-		339262	0					
ANR	351720	Identifier	num		339262	1					
ANR	351721	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3468:4:73153:73180	339262	3	True				
ANR	351722	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		339262	0		|=			
ANR	351723	PtrMemberAccess	ao -> o		339262	0					
ANR	351724	Identifier	ao		339262	0					
ANR	351725	Identifier	o		339262	1					
ANR	351726	ShiftExpression	( num & 0x0ff ) << 8		339262	1		<<			
ANR	351727	BitAndExpression	num & 0x0ff		339262	0		&			
ANR	351728	Identifier	num		339262	0					
ANR	351729	PrimaryExpression	0x0ff		339262	1					
ANR	351730	PrimaryExpression	8		339262	1					
ANR	351731	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3469:4:73186:73213	339262	4	True				
ANR	351732	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	351733	PtrMemberAccess	ao -> o		339262	0					
ANR	351734	Identifier	ao		339262	0					
ANR	351735	Identifier	o		339262	1					
ANR	351736	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	351737	BitAndExpression	num & 0xf00		339262	0		&			
ANR	351738	Identifier	num		339262	0					
ANR	351739	PrimaryExpression	0xf00		339262	1					
ANR	351740	PrimaryExpression	8		339262	1					
ANR	351741	ReturnStatement	return 4 ;	3470:4:73219:73227	339262	5	True				
ANR	351742	PrimaryExpression	4		339262	0					
ANR	351743	IfStatement	if ( ( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 ) )		339262	3					
ANR	351744	Condition	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )	3473:7:73242:73284	339262	0	True				
ANR	351745	OrExpression	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )		339262	0		||			
ANR	351746	RelationalExpression	reg1 > 15		339262	0		>			
ANR	351747	Identifier	reg1		339262	0					
ANR	351748	PrimaryExpression	15		339262	1					
ANR	351749	OrExpression	( num < - 255 ) || ( num > 4095 )		339262	1		||			
ANR	351750	RelationalExpression	num < - 255		339262	0		<			
ANR	351751	Identifier	num		339262	0					
ANR	351752	UnaryOperationExpression	- 255		339262	1					
ANR	351753	UnaryOperator	-		339262	0					
ANR	351754	PrimaryExpression	255		339262	1					
ANR	351755	RelationalExpression	num > 4095		339262	1		>			
ANR	351756	Identifier	num		339262	0					
ANR	351757	PrimaryExpression	4095		339262	1					
ANR	351758	CompoundStatement		2181:52:47428:47428	339262	1					
ANR	351759	ReturnStatement	return - 1 ;	3474:4:73293:73302	339262	0	True				
ANR	351760	UnaryOperationExpression	- 1		339262	0					
ANR	351761	UnaryOperator	-		339262	0					
ANR	351762	PrimaryExpression	1		339262	1					
ANR	351763	IfStatement	if ( num > 0 )		339262	4					
ANR	351764	Condition	num > 0	3477:7:73317:73323	339262	0	True				
ANR	351765	RelationalExpression	num > 0		339262	0		>			
ANR	351766	Identifier	num		339262	0					
ANR	351767	PrimaryExpression	0		339262	1					
ANR	351768	CompoundStatement		2185:16:47467:47467	339262	1					
ANR	351769	ExpressionStatement	ao -> o = 0x90f800f0	3478:4:73332:73350	339262	0	True				
ANR	351770	AssignmentExpression	ao -> o = 0x90f800f0		339262	0		=			
ANR	351771	PtrMemberAccess	ao -> o		339262	0					
ANR	351772	Identifier	ao		339262	0					
ANR	351773	Identifier	o		339262	1					
ANR	351774	PrimaryExpression	0x90f800f0		339262	1					
ANR	351775	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3479:4:73356:73383	339262	1	True				
ANR	351776	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		339262	0		|=			
ANR	351777	PtrMemberAccess	ao -> o		339262	0					
ANR	351778	Identifier	ao		339262	0					
ANR	351779	Identifier	o		339262	1					
ANR	351780	ShiftExpression	( num & 0x0ff ) << 8		339262	1		<<			
ANR	351781	BitAndExpression	num & 0x0ff		339262	0		&			
ANR	351782	Identifier	num		339262	0					
ANR	351783	PrimaryExpression	0x0ff		339262	1					
ANR	351784	PrimaryExpression	8		339262	1					
ANR	351785	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3480:4:73389:73416	339262	2	True				
ANR	351786	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	351787	PtrMemberAccess	ao -> o		339262	0					
ANR	351788	Identifier	ao		339262	0					
ANR	351789	Identifier	o		339262	1					
ANR	351790	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	351791	BitAndExpression	num & 0xf00		339262	0		&			
ANR	351792	Identifier	num		339262	0					
ANR	351793	PrimaryExpression	0xf00		339262	1					
ANR	351794	PrimaryExpression	8		339262	1					
ANR	351795	ExpressionStatement	ao -> o |= reg1 << 24	3481:4:73422:73441	339262	3	True				
ANR	351796	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	351797	PtrMemberAccess	ao -> o		339262	0					
ANR	351798	Identifier	ao		339262	0					
ANR	351799	Identifier	o		339262	1					
ANR	351800	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	351801	Identifier	reg1		339262	0					
ANR	351802	PrimaryExpression	24		339262	1					
ANR	351803	ReturnStatement	return 4 ;	3482:4:73447:73455	339262	4	True				
ANR	351804	PrimaryExpression	4		339262	0					
ANR	351805	ExpressionStatement	num = - num	3484:3:73465:73475	339262	5	True				
ANR	351806	AssignmentExpression	num = - num		339262	0		=			
ANR	351807	Identifier	num		339262	0					
ANR	351808	UnaryOperationExpression	- num		339262	1					
ANR	351809	UnaryOperator	-		339262	0					
ANR	351810	Identifier	num		339262	1					
ANR	351811	ExpressionStatement	ao -> o = 0x10f800fc	3485:3:73480:73498	339262	6	True				
ANR	351812	AssignmentExpression	ao -> o = 0x10f800fc		339262	0		=			
ANR	351813	PtrMemberAccess	ao -> o		339262	0					
ANR	351814	Identifier	ao		339262	0					
ANR	351815	Identifier	o		339262	1					
ANR	351816	PrimaryExpression	0x10f800fc		339262	1					
ANR	351817	ExpressionStatement	ao -> o |= num << 8	3486:3:73503:73520	339262	7	True				
ANR	351818	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	351819	PtrMemberAccess	ao -> o		339262	0					
ANR	351820	Identifier	ao		339262	0					
ANR	351821	Identifier	o		339262	1					
ANR	351822	ShiftExpression	num << 8		339262	1		<<			
ANR	351823	Identifier	num		339262	0					
ANR	351824	PrimaryExpression	8		339262	1					
ANR	351825	ExpressionStatement	ao -> o |= reg1 << 24	3487:3:73525:73544	339262	8	True				
ANR	351826	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	351827	PtrMemberAccess	ao -> o		339262	0					
ANR	351828	Identifier	ao		339262	0					
ANR	351829	Identifier	o		339262	1					
ANR	351830	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	351831	Identifier	reg1		339262	0					
ANR	351832	PrimaryExpression	24		339262	1					
ANR	351833	ReturnStatement	return 4 ;	3488:3:73549:73557	339262	9	True				
ANR	351834	PrimaryExpression	4		339262	0					
ANR	351835	BreakStatement	break ;	3490:3:73574:73579	339262	2	True				
ANR	351836	Label	case THUMB_BRACKREG_REGBRACK :	3491:2:73583:73611	339262	3	True				
ANR	351837	Identifier	THUMB_BRACKREG_REGBRACK		339262	0					
ANR	351838	CompoundStatement		2199:32:47754:47754	339262	4					
ANR	351839	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	3492:3:73618:73656	339262	0	True				
ANR	351840	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	351841	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		339262	0					
ANR	351842	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	351843	PtrMemberAccess	ao -> a		339262	0					
ANR	351844	Identifier	ao		339262	0					
ANR	351845	Identifier	a		339262	1					
ANR	351846	PrimaryExpression	1		339262	1					
ANR	351847	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	351848	CallExpression	strlen ( ao -> a [ 1 ] )		339262	0					
ANR	351849	Callee	strlen		339262	0					
ANR	351850	Identifier	strlen		339262	0					
ANR	351851	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	351852	Argument	ao -> a [ 1 ]		339262	0					
ANR	351853	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	351854	PtrMemberAccess	ao -> a		339262	0					
ANR	351855	Identifier	ao		339262	0					
ANR	351856	Identifier	a		339262	1					
ANR	351857	PrimaryExpression	1		339262	1					
ANR	351858	PrimaryExpression	1		339262	1					
ANR	351859	PrimaryExpression	'\\0'		339262	1					
ANR	351860	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0]"""	3493:3:73661:73680	339262	1	True				
ANR	351861	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0]"""		339262	0		=			
ANR	351862	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	351863	PtrMemberAccess	ao -> a		339262	0					
ANR	351864	Identifier	ao		339262	0					
ANR	351865	Identifier	a		339262	1					
ANR	351866	PrimaryExpression	2		339262	1					
ANR	351867	PrimaryExpression	"""lsl 0]"""		339262	1					
ANR	351868	Label	case THUMB_BRACKREG_REG_SHIFTBRACK :	3496:2:73726:73760	339262	5	True				
ANR	351869	Identifier	THUMB_BRACKREG_REG_SHIFTBRACK		339262	0					
ANR	351870	CompoundStatement		2207:3:47982:48025	339262	6					
ANR	351871	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3497:3:73767:73803	339262	0	True				
ANR	351872	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	0					
ANR	351873	IdentifierDeclType	ut8		339262	0					
ANR	351874	Identifier	reg1		339262	1					
ANR	351875	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	2		=			
ANR	351876	Identifier	reg1		339262	0					
ANR	351877	CallExpression	getregmemstart ( ao -> a [ 0 ] )		339262	1					
ANR	351878	Callee	getregmemstart		339262	0					
ANR	351879	Identifier	getregmemstart		339262	0					
ANR	351880	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	351881	Argument	ao -> a [ 0 ]		339262	0					
ANR	351882	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	351883	PtrMemberAccess	ao -> a		339262	0					
ANR	351884	Identifier	ao		339262	0					
ANR	351885	Identifier	a		339262	1					
ANR	351886	PrimaryExpression	0		339262	1					
ANR	351887	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3498:3:73808:73836	339262	1	True				
ANR	351888	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	351889	IdentifierDeclType	ut8		339262	0					
ANR	351890	Identifier	reg2		339262	1					
ANR	351891	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	351892	Identifier	reg2		339262	0					
ANR	351893	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	351894	Callee	getreg		339262	0					
ANR	351895	Identifier	getreg		339262	0					
ANR	351896	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	351897	Argument	ao -> a [ 1 ]		339262	0					
ANR	351898	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	351899	PtrMemberAccess	ao -> a		339262	0					
ANR	351900	Identifier	ao		339262	0					
ANR	351901	Identifier	a		339262	1					
ANR	351902	PrimaryExpression	1		339262	1					
ANR	351903	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2 ;	3499:3:73841:73884	339262	2	True				
ANR	351904	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		339262	0					
ANR	351905	IdentifierDeclType	ut32		339262	0					
ANR	351906	Identifier	shift		339262	1					
ANR	351907	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		339262	2		=			
ANR	351908	Identifier	shift		339262	0					
ANR	351909	ShiftExpression	getshiftmemend ( ao -> a [ 2 ] ) >> 2		339262	1		>>			
ANR	351910	CallExpression	getshiftmemend ( ao -> a [ 2 ] )		339262	0					
ANR	351911	Callee	getshiftmemend		339262	0					
ANR	351912	Identifier	getshiftmemend		339262	0					
ANR	351913	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	351914	Argument	ao -> a [ 2 ]		339262	0					
ANR	351915	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	351916	PtrMemberAccess	ao -> a		339262	0					
ANR	351917	Identifier	ao		339262	0					
ANR	351918	Identifier	a		339262	1					
ANR	351919	PrimaryExpression	2		339262	1					
ANR	351920	PrimaryExpression	2		339262	1					
ANR	351921	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 ) )		339262	3					
ANR	351922	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )	3501:7:73894:73950	339262	0	True				
ANR	351923	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		339262	0		||			
ANR	351924	RelationalExpression	reg1 > 15		339262	0		>			
ANR	351925	Identifier	reg1		339262	0					
ANR	351926	PrimaryExpression	15		339262	1					
ANR	351927	OrExpression	( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		339262	1		||			
ANR	351928	RelationalExpression	reg2 > 15		339262	0		>			
ANR	351929	Identifier	reg2		339262	0					
ANR	351930	PrimaryExpression	15		339262	1					
ANR	351931	EqualityExpression	( shift & 0xffffcfff ) != 0		339262	1		!=			
ANR	351932	BitAndExpression	shift & 0xffffcfff		339262	0		&			
ANR	351933	Identifier	shift		339262	0					
ANR	351934	PrimaryExpression	0xffffcfff		339262	1					
ANR	351935	PrimaryExpression	0		339262	1					
ANR	351936	CompoundStatement		2209:66:48094:48094	339262	1					
ANR	351937	ReturnStatement	return - 1 ;	3502:4:73959:73968	339262	0	True				
ANR	351938	UnaryOperationExpression	- 1		339262	0					
ANR	351939	UnaryOperator	-		339262	0					
ANR	351940	PrimaryExpression	1		339262	1					
ANR	351941	ExpressionStatement	ao -> o = 0x10f800f0	3505:3:73979:73997	339262	4	True				
ANR	351942	AssignmentExpression	ao -> o = 0x10f800f0		339262	0		=			
ANR	351943	PtrMemberAccess	ao -> o		339262	0					
ANR	351944	Identifier	ao		339262	0					
ANR	351945	Identifier	o		339262	1					
ANR	351946	PrimaryExpression	0x10f800f0		339262	1					
ANR	351947	ExpressionStatement	ao -> o |= reg1 << 24	3506:3:74002:74021	339262	5	True				
ANR	351948	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	351949	PtrMemberAccess	ao -> o		339262	0					
ANR	351950	Identifier	ao		339262	0					
ANR	351951	Identifier	o		339262	1					
ANR	351952	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	351953	Identifier	reg1		339262	0					
ANR	351954	PrimaryExpression	24		339262	1					
ANR	351955	ExpressionStatement	ao -> o |= reg2 << 8	3507:3:74026:74044	339262	6	True				
ANR	351956	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	351957	PtrMemberAccess	ao -> o		339262	0					
ANR	351958	Identifier	ao		339262	0					
ANR	351959	Identifier	o		339262	1					
ANR	351960	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	351961	Identifier	reg2		339262	0					
ANR	351962	PrimaryExpression	8		339262	1					
ANR	351963	ExpressionStatement	ao -> o |= shift	3508:3:74049:74063	339262	7	True				
ANR	351964	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	351965	PtrMemberAccess	ao -> o		339262	0					
ANR	351966	Identifier	ao		339262	0					
ANR	351967	Identifier	o		339262	1					
ANR	351968	Identifier	shift		339262	1					
ANR	351969	ReturnStatement	return 4 ;	3509:3:74068:74076	339262	8	True				
ANR	351970	PrimaryExpression	4		339262	0					
ANR	351971	BreakStatement	break ;	3511:3:74093:74098	339262	7	True				
ANR	351972	Label	default :	3512:2:74102:74109	339262	8	True				
ANR	351973	Identifier	default		339262	0					
ANR	351974	ReturnStatement	return - 1 ;	3513:3:74114:74123	339262	9	True				
ANR	351975	UnaryOperationExpression	- 1		339262	0					
ANR	351976	UnaryOperator	-		339262	0					
ANR	351977	PrimaryExpression	1		339262	1					
ANR	351978	ElseStatement	else		339262	0					
ANR	351979	IfStatement	"if ( ( m = opmask ( ao -> op , ""pli"" , 0 ) ) )"		339262	0					
ANR	351980	Condition	"m = opmask ( ao -> op , ""pli"" , 0 )"	3516:5:74142:74172	339262	0	True				
ANR	351981	AssignmentExpression	"m = opmask ( ao -> op , ""pli"" , 0 )"		339262	0		=			
ANR	351982	Identifier	m		339262	0					
ANR	351983	CallExpression	"opmask ( ao -> op , ""pli"" , 0 )"		339262	1					
ANR	351984	Callee	opmask		339262	0					
ANR	351985	Identifier	opmask		339262	0					
ANR	351986	ArgumentList	ao -> op		339262	1					
ANR	351987	Argument	ao -> op		339262	0					
ANR	351988	PtrMemberAccess	ao -> op		339262	0					
ANR	351989	Identifier	ao		339262	0					
ANR	351990	Identifier	op		339262	1					
ANR	351991	Argument	"""pli"""		339262	1					
ANR	351992	PrimaryExpression	"""pli"""		339262	0					
ANR	351993	Argument	0		339262	2					
ANR	351994	PrimaryExpression	0		339262	0					
ANR	351995	CompoundStatement		2225:2:48320:48354	339262	1					
ANR	351996	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3517:2:74179:74213	339262	0	True				
ANR	351997	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	351998	IdentifierDeclType	ut64		339262	0					
ANR	351999	Identifier	argt		339262	1					
ANR	352000	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352001	Identifier	argt		339262	0					
ANR	352002	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352003	Callee	thumb_selector		339262	0					
ANR	352004	Identifier	thumb_selector		339262	0					
ANR	352005	ArgumentList	ao -> a		339262	1					
ANR	352006	Argument	ao -> a		339262	0					
ANR	352007	PtrMemberAccess	ao -> a		339262	0					
ANR	352008	Identifier	ao		339262	0					
ANR	352009	Identifier	a		339262	1					
ANR	352010	SwitchStatement	switch ( argt )		339262	1					
ANR	352011	Condition	argt	3518:10:74225:74228	339262	0	True				
ANR	352012	Identifier	argt		339262	0					
ANR	352013	CompoundStatement		2226:16:48372:48372	339262	1					
ANR	352014	Label	case THUMB_BRACKREG_CONSTBRACK :	3519:2:74235:74265	339262	0	True				
ANR	352015	Identifier	THUMB_BRACKREG_CONSTBRACK		339262	0					
ANR	352016	CompoundStatement		2229:3:48454:48488	339262	1					
ANR	352017	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3520:3:74272:74308	339262	0	True				
ANR	352018	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	0					
ANR	352019	IdentifierDeclType	ut8		339262	0					
ANR	352020	Identifier	reg1		339262	1					
ANR	352021	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	2		=			
ANR	352022	Identifier	reg1		339262	0					
ANR	352023	CallExpression	getregmemstart ( ao -> a [ 0 ] )		339262	1					
ANR	352024	Callee	getregmemstart		339262	0					
ANR	352025	Identifier	getregmemstart		339262	0					
ANR	352026	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	352027	Argument	ao -> a [ 0 ]		339262	0					
ANR	352028	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	352029	PtrMemberAccess	ao -> a		339262	0					
ANR	352030	Identifier	ao		339262	0					
ANR	352031	Identifier	a		339262	1					
ANR	352032	PrimaryExpression	0		339262	1					
ANR	352033	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 1 ] ) ;	3521:3:74313:74347	339262	1	True				
ANR	352034	IdentifierDecl	num = getnummemend ( ao -> a [ 1 ] )		339262	0					
ANR	352035	IdentifierDeclType	st32		339262	0					
ANR	352036	Identifier	num		339262	1					
ANR	352037	AssignmentExpression	num = getnummemend ( ao -> a [ 1 ] )		339262	2		=			
ANR	352038	Identifier	num		339262	0					
ANR	352039	CallExpression	getnummemend ( ao -> a [ 1 ] )		339262	1					
ANR	352040	Callee	getnummemend		339262	0					
ANR	352041	Identifier	getnummemend		339262	0					
ANR	352042	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	352043	Argument	ao -> a [ 1 ]		339262	0					
ANR	352044	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	352045	PtrMemberAccess	ao -> a		339262	0					
ANR	352046	Identifier	ao		339262	0					
ANR	352047	Identifier	a		339262	1					
ANR	352048	PrimaryExpression	1		339262	1					
ANR	352049	IfStatement	if ( reg1 == 15 )		339262	2					
ANR	352050	Condition	reg1 == 15	3523:7:74357:74366	339262	0	True				
ANR	352051	EqualityExpression	reg1 == 15		339262	0		==			
ANR	352052	Identifier	reg1		339262	0					
ANR	352053	PrimaryExpression	15		339262	1					
ANR	352054	CompoundStatement		2231:19:48510:48510	339262	1					
ANR	352055	IfStatement	if ( ( num < - 4095 ) || ( num > 4095 ) )		339262	0					
ANR	352056	Condition	( num < - 4095 ) || ( num > 4095 )	3524:8:74379:74407	339262	0	True				
ANR	352057	OrExpression	( num < - 4095 ) || ( num > 4095 )		339262	0		||			
ANR	352058	RelationalExpression	num < - 4095		339262	0		<			
ANR	352059	Identifier	num		339262	0					
ANR	352060	UnaryOperationExpression	- 4095		339262	1					
ANR	352061	UnaryOperator	-		339262	0					
ANR	352062	PrimaryExpression	4095		339262	1					
ANR	352063	RelationalExpression	num > 4095		339262	1		>			
ANR	352064	Identifier	num		339262	0					
ANR	352065	PrimaryExpression	4095		339262	1					
ANR	352066	CompoundStatement		2232:39:48551:48551	339262	1					
ANR	352067	ReturnStatement	return - 1 ;	3525:5:74417:74426	339262	0	True				
ANR	352068	UnaryOperationExpression	- 1		339262	0					
ANR	352069	UnaryOperator	-		339262	0					
ANR	352070	PrimaryExpression	1		339262	1					
ANR	352071	ExpressionStatement	ao -> o = 0x1ff900f0	3527:4:74438:74456	339262	1	True				
ANR	352072	AssignmentExpression	ao -> o = 0x1ff900f0		339262	0		=			
ANR	352073	PtrMemberAccess	ao -> o		339262	0					
ANR	352074	Identifier	ao		339262	0					
ANR	352075	Identifier	o		339262	1					
ANR	352076	PrimaryExpression	0x1ff900f0		339262	1					
ANR	352077	IfStatement	if ( num > 0 )		339262	2					
ANR	352078	Condition	num > 0	3528:8:74466:74472	339262	0	True				
ANR	352079	RelationalExpression	num > 0		339262	0		>			
ANR	352080	Identifier	num		339262	0					
ANR	352081	PrimaryExpression	0		339262	1					
ANR	352082	CompoundStatement		2236:17:48616:48616	339262	1					
ANR	352083	ExpressionStatement	ao -> o |= 1 << 31	3529:5:74482:74498	339262	0	True				
ANR	352084	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	352085	PtrMemberAccess	ao -> o		339262	0					
ANR	352086	Identifier	ao		339262	0					
ANR	352087	Identifier	o		339262	1					
ANR	352088	ShiftExpression	1 << 31		339262	1		<<			
ANR	352089	PrimaryExpression	1		339262	0					
ANR	352090	PrimaryExpression	31		339262	1					
ANR	352091	ElseStatement	else		339262	0					
ANR	352092	CompoundStatement		2238:11:48652:48652	339262	0					
ANR	352093	ExpressionStatement	num = - num	3531:5:74518:74528	339262	0	True				
ANR	352094	AssignmentExpression	num = - num		339262	0		=			
ANR	352095	Identifier	num		339262	0					
ANR	352096	UnaryOperationExpression	- num		339262	1					
ANR	352097	UnaryOperator	-		339262	0					
ANR	352098	Identifier	num		339262	1					
ANR	352099	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3533:4:74540:74567	339262	3	True				
ANR	352100	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		339262	0		|=			
ANR	352101	PtrMemberAccess	ao -> o		339262	0					
ANR	352102	Identifier	ao		339262	0					
ANR	352103	Identifier	o		339262	1					
ANR	352104	ShiftExpression	( num & 0x0ff ) << 8		339262	1		<<			
ANR	352105	BitAndExpression	num & 0x0ff		339262	0		&			
ANR	352106	Identifier	num		339262	0					
ANR	352107	PrimaryExpression	0x0ff		339262	1					
ANR	352108	PrimaryExpression	8		339262	1					
ANR	352109	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3534:4:74573:74600	339262	4	True				
ANR	352110	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	352111	PtrMemberAccess	ao -> o		339262	0					
ANR	352112	Identifier	ao		339262	0					
ANR	352113	Identifier	o		339262	1					
ANR	352114	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	352115	BitAndExpression	num & 0xf00		339262	0		&			
ANR	352116	Identifier	num		339262	0					
ANR	352117	PrimaryExpression	0xf00		339262	1					
ANR	352118	PrimaryExpression	8		339262	1					
ANR	352119	ReturnStatement	return 4 ;	3535:4:74606:74614	339262	5	True				
ANR	352120	PrimaryExpression	4		339262	0					
ANR	352121	IfStatement	if ( ( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 ) )		339262	3					
ANR	352122	Condition	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )	3538:7:74629:74671	339262	0	True				
ANR	352123	OrExpression	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )		339262	0		||			
ANR	352124	RelationalExpression	reg1 > 15		339262	0		>			
ANR	352125	Identifier	reg1		339262	0					
ANR	352126	PrimaryExpression	15		339262	1					
ANR	352127	OrExpression	( num < - 255 ) || ( num > 4095 )		339262	1		||			
ANR	352128	RelationalExpression	num < - 255		339262	0		<			
ANR	352129	Identifier	num		339262	0					
ANR	352130	UnaryOperationExpression	- 255		339262	1					
ANR	352131	UnaryOperator	-		339262	0					
ANR	352132	PrimaryExpression	255		339262	1					
ANR	352133	RelationalExpression	num > 4095		339262	1		>			
ANR	352134	Identifier	num		339262	0					
ANR	352135	PrimaryExpression	4095		339262	1					
ANR	352136	CompoundStatement		2246:52:48815:48815	339262	1					
ANR	352137	ReturnStatement	return - 1 ;	3539:4:74680:74689	339262	0	True				
ANR	352138	UnaryOperationExpression	- 1		339262	0					
ANR	352139	UnaryOperator	-		339262	0					
ANR	352140	PrimaryExpression	1		339262	1					
ANR	352141	IfStatement	if ( num > 0 )		339262	4					
ANR	352142	Condition	num > 0	3542:7:74704:74710	339262	0	True				
ANR	352143	RelationalExpression	num > 0		339262	0		>			
ANR	352144	Identifier	num		339262	0					
ANR	352145	PrimaryExpression	0		339262	1					
ANR	352146	CompoundStatement		2250:16:48854:48854	339262	1					
ANR	352147	ExpressionStatement	ao -> o = 0x90f900f0	3543:4:74719:74737	339262	0	True				
ANR	352148	AssignmentExpression	ao -> o = 0x90f900f0		339262	0		=			
ANR	352149	PtrMemberAccess	ao -> o		339262	0					
ANR	352150	Identifier	ao		339262	0					
ANR	352151	Identifier	o		339262	1					
ANR	352152	PrimaryExpression	0x90f900f0		339262	1					
ANR	352153	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3544:4:74743:74770	339262	1	True				
ANR	352154	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		339262	0		|=			
ANR	352155	PtrMemberAccess	ao -> o		339262	0					
ANR	352156	Identifier	ao		339262	0					
ANR	352157	Identifier	o		339262	1					
ANR	352158	ShiftExpression	( num & 0x0ff ) << 8		339262	1		<<			
ANR	352159	BitAndExpression	num & 0x0ff		339262	0		&			
ANR	352160	Identifier	num		339262	0					
ANR	352161	PrimaryExpression	0x0ff		339262	1					
ANR	352162	PrimaryExpression	8		339262	1					
ANR	352163	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3545:4:74776:74803	339262	2	True				
ANR	352164	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		339262	0		|=			
ANR	352165	PtrMemberAccess	ao -> o		339262	0					
ANR	352166	Identifier	ao		339262	0					
ANR	352167	Identifier	o		339262	1					
ANR	352168	ShiftExpression	( num & 0xf00 ) >> 8		339262	1		>>			
ANR	352169	BitAndExpression	num & 0xf00		339262	0		&			
ANR	352170	Identifier	num		339262	0					
ANR	352171	PrimaryExpression	0xf00		339262	1					
ANR	352172	PrimaryExpression	8		339262	1					
ANR	352173	ExpressionStatement	ao -> o |= reg1 << 24	3546:4:74809:74828	339262	3	True				
ANR	352174	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	352175	PtrMemberAccess	ao -> o		339262	0					
ANR	352176	Identifier	ao		339262	0					
ANR	352177	Identifier	o		339262	1					
ANR	352178	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	352179	Identifier	reg1		339262	0					
ANR	352180	PrimaryExpression	24		339262	1					
ANR	352181	ReturnStatement	return 4 ;	3547:4:74834:74842	339262	4	True				
ANR	352182	PrimaryExpression	4		339262	0					
ANR	352183	ExpressionStatement	num = - num	3549:3:74852:74862	339262	5	True				
ANR	352184	AssignmentExpression	num = - num		339262	0		=			
ANR	352185	Identifier	num		339262	0					
ANR	352186	UnaryOperationExpression	- num		339262	1					
ANR	352187	UnaryOperator	-		339262	0					
ANR	352188	Identifier	num		339262	1					
ANR	352189	ExpressionStatement	ao -> o = 0x10f900fc	3550:3:74867:74885	339262	6	True				
ANR	352190	AssignmentExpression	ao -> o = 0x10f900fc		339262	0		=			
ANR	352191	PtrMemberAccess	ao -> o		339262	0					
ANR	352192	Identifier	ao		339262	0					
ANR	352193	Identifier	o		339262	1					
ANR	352194	PrimaryExpression	0x10f900fc		339262	1					
ANR	352195	ExpressionStatement	ao -> o |= num << 8	3551:3:74890:74907	339262	7	True				
ANR	352196	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	352197	PtrMemberAccess	ao -> o		339262	0					
ANR	352198	Identifier	ao		339262	0					
ANR	352199	Identifier	o		339262	1					
ANR	352200	ShiftExpression	num << 8		339262	1		<<			
ANR	352201	Identifier	num		339262	0					
ANR	352202	PrimaryExpression	8		339262	1					
ANR	352203	ExpressionStatement	ao -> o |= reg1 << 24	3552:3:74912:74931	339262	8	True				
ANR	352204	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	352205	PtrMemberAccess	ao -> o		339262	0					
ANR	352206	Identifier	ao		339262	0					
ANR	352207	Identifier	o		339262	1					
ANR	352208	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	352209	Identifier	reg1		339262	0					
ANR	352210	PrimaryExpression	24		339262	1					
ANR	352211	ReturnStatement	return 4 ;	3553:3:74936:74944	339262	9	True				
ANR	352212	PrimaryExpression	4		339262	0					
ANR	352213	BreakStatement	break ;	3555:3:74961:74966	339262	2	True				
ANR	352214	Label	case THUMB_BRACKREG_REGBRACK :	3556:2:74970:74998	339262	3	True				
ANR	352215	Identifier	THUMB_BRACKREG_REGBRACK		339262	0					
ANR	352216	CompoundStatement		2264:32:49141:49141	339262	4					
ANR	352217	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	3557:3:75005:75042	339262	0	True				
ANR	352218	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	352219	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		339262	0					
ANR	352220	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	352221	PtrMemberAccess	ao -> a		339262	0					
ANR	352222	Identifier	ao		339262	0					
ANR	352223	Identifier	a		339262	1					
ANR	352224	PrimaryExpression	1		339262	1					
ANR	352225	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	352226	CallExpression	strlen ( ao -> a [ 1 ] )		339262	0					
ANR	352227	Callee	strlen		339262	0					
ANR	352228	Identifier	strlen		339262	0					
ANR	352229	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	352230	Argument	ao -> a [ 1 ]		339262	0					
ANR	352231	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	352232	PtrMemberAccess	ao -> a		339262	0					
ANR	352233	Identifier	ao		339262	0					
ANR	352234	Identifier	a		339262	1					
ANR	352235	PrimaryExpression	1		339262	1					
ANR	352236	PrimaryExpression	1		339262	1					
ANR	352237	PrimaryExpression	'\\0'		339262	1					
ANR	352238	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0]"""	3558:3:75047:75066	339262	1	True				
ANR	352239	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0]"""		339262	0		=			
ANR	352240	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	352241	PtrMemberAccess	ao -> a		339262	0					
ANR	352242	Identifier	ao		339262	0					
ANR	352243	Identifier	a		339262	1					
ANR	352244	PrimaryExpression	2		339262	1					
ANR	352245	PrimaryExpression	"""lsl 0]"""		339262	1					
ANR	352246	Label	case THUMB_BRACKREG_REG_SHIFTBRACK :	3561:2:75112:75146	339262	5	True				
ANR	352247	Identifier	THUMB_BRACKREG_REG_SHIFTBRACK		339262	0					
ANR	352248	CompoundStatement		2272:3:49368:49411	339262	6					
ANR	352249	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3562:3:75153:75189	339262	0	True				
ANR	352250	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	0					
ANR	352251	IdentifierDeclType	ut8		339262	0					
ANR	352252	Identifier	reg1		339262	1					
ANR	352253	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	2		=			
ANR	352254	Identifier	reg1		339262	0					
ANR	352255	CallExpression	getregmemstart ( ao -> a [ 0 ] )		339262	1					
ANR	352256	Callee	getregmemstart		339262	0					
ANR	352257	Identifier	getregmemstart		339262	0					
ANR	352258	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	352259	Argument	ao -> a [ 0 ]		339262	0					
ANR	352260	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	352261	PtrMemberAccess	ao -> a		339262	0					
ANR	352262	Identifier	ao		339262	0					
ANR	352263	Identifier	a		339262	1					
ANR	352264	PrimaryExpression	0		339262	1					
ANR	352265	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3563:3:75194:75222	339262	1	True				
ANR	352266	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	352267	IdentifierDeclType	ut8		339262	0					
ANR	352268	Identifier	reg2		339262	1					
ANR	352269	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	352270	Identifier	reg2		339262	0					
ANR	352271	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	352272	Callee	getreg		339262	0					
ANR	352273	Identifier	getreg		339262	0					
ANR	352274	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	352275	Argument	ao -> a [ 1 ]		339262	0					
ANR	352276	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	352277	PtrMemberAccess	ao -> a		339262	0					
ANR	352278	Identifier	ao		339262	0					
ANR	352279	Identifier	a		339262	1					
ANR	352280	PrimaryExpression	1		339262	1					
ANR	352281	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2 ;	3564:3:75227:75270	339262	2	True				
ANR	352282	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		339262	0					
ANR	352283	IdentifierDeclType	ut32		339262	0					
ANR	352284	Identifier	shift		339262	1					
ANR	352285	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		339262	2		=			
ANR	352286	Identifier	shift		339262	0					
ANR	352287	ShiftExpression	getshiftmemend ( ao -> a [ 2 ] ) >> 2		339262	1		>>			
ANR	352288	CallExpression	getshiftmemend ( ao -> a [ 2 ] )		339262	0					
ANR	352289	Callee	getshiftmemend		339262	0					
ANR	352290	Identifier	getshiftmemend		339262	0					
ANR	352291	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	352292	Argument	ao -> a [ 2 ]		339262	0					
ANR	352293	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	352294	PtrMemberAccess	ao -> a		339262	0					
ANR	352295	Identifier	ao		339262	0					
ANR	352296	Identifier	a		339262	1					
ANR	352297	PrimaryExpression	2		339262	1					
ANR	352298	PrimaryExpression	2		339262	1					
ANR	352299	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 ) )		339262	3					
ANR	352300	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )	3566:7:75280:75336	339262	0	True				
ANR	352301	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		339262	0		||			
ANR	352302	RelationalExpression	reg1 > 15		339262	0		>			
ANR	352303	Identifier	reg1		339262	0					
ANR	352304	PrimaryExpression	15		339262	1					
ANR	352305	OrExpression	( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		339262	1		||			
ANR	352306	RelationalExpression	reg2 > 15		339262	0		>			
ANR	352307	Identifier	reg2		339262	0					
ANR	352308	PrimaryExpression	15		339262	1					
ANR	352309	EqualityExpression	( shift & 0xffffcfff ) != 0		339262	1		!=			
ANR	352310	BitAndExpression	shift & 0xffffcfff		339262	0		&			
ANR	352311	Identifier	shift		339262	0					
ANR	352312	PrimaryExpression	0xffffcfff		339262	1					
ANR	352313	PrimaryExpression	0		339262	1					
ANR	352314	CompoundStatement		2274:66:49480:49480	339262	1					
ANR	352315	ReturnStatement	return - 1 ;	3567:4:75345:75354	339262	0	True				
ANR	352316	UnaryOperationExpression	- 1		339262	0					
ANR	352317	UnaryOperator	-		339262	0					
ANR	352318	PrimaryExpression	1		339262	1					
ANR	352319	ExpressionStatement	ao -> o = 0x10f900f0	3570:3:75365:75383	339262	4	True				
ANR	352320	AssignmentExpression	ao -> o = 0x10f900f0		339262	0		=			
ANR	352321	PtrMemberAccess	ao -> o		339262	0					
ANR	352322	Identifier	ao		339262	0					
ANR	352323	Identifier	o		339262	1					
ANR	352324	PrimaryExpression	0x10f900f0		339262	1					
ANR	352325	ExpressionStatement	ao -> o |= reg1 << 24	3571:3:75388:75407	339262	5	True				
ANR	352326	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	352327	PtrMemberAccess	ao -> o		339262	0					
ANR	352328	Identifier	ao		339262	0					
ANR	352329	Identifier	o		339262	1					
ANR	352330	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	352331	Identifier	reg1		339262	0					
ANR	352332	PrimaryExpression	24		339262	1					
ANR	352333	ExpressionStatement	ao -> o |= reg2 << 8	3572:3:75412:75430	339262	6	True				
ANR	352334	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	352335	PtrMemberAccess	ao -> o		339262	0					
ANR	352336	Identifier	ao		339262	0					
ANR	352337	Identifier	o		339262	1					
ANR	352338	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	352339	Identifier	reg2		339262	0					
ANR	352340	PrimaryExpression	8		339262	1					
ANR	352341	ExpressionStatement	ao -> o |= shift	3573:3:75435:75449	339262	7	True				
ANR	352342	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	352343	PtrMemberAccess	ao -> o		339262	0					
ANR	352344	Identifier	ao		339262	0					
ANR	352345	Identifier	o		339262	1					
ANR	352346	Identifier	shift		339262	1					
ANR	352347	ReturnStatement	return 4 ;	3574:3:75454:75462	339262	8	True				
ANR	352348	PrimaryExpression	4		339262	0					
ANR	352349	BreakStatement	break ;	3576:3:75479:75484	339262	7	True				
ANR	352350	Label	default :	3577:2:75488:75495	339262	8	True				
ANR	352351	Identifier	default		339262	0					
ANR	352352	ReturnStatement	return - 1 ;	3578:3:75500:75509	339262	9	True				
ANR	352353	UnaryOperationExpression	- 1		339262	0					
ANR	352354	UnaryOperator	-		339262	0					
ANR	352355	PrimaryExpression	1		339262	1					
ANR	352356	ElseStatement	else		339262	0					
ANR	352357	IfStatement	"if ( ( m = opmask ( ao -> op , ""pop"" , 0 ) ) )"		339262	0					
ANR	352358	Condition	"m = opmask ( ao -> op , ""pop"" , 0 )"	3581:5:75528:75558	339262	0	True				
ANR	352359	AssignmentExpression	"m = opmask ( ao -> op , ""pop"" , 0 )"		339262	0		=			
ANR	352360	Identifier	m		339262	0					
ANR	352361	CallExpression	"opmask ( ao -> op , ""pop"" , 0 )"		339262	1					
ANR	352362	Callee	opmask		339262	0					
ANR	352363	Identifier	opmask		339262	0					
ANR	352364	ArgumentList	ao -> op		339262	1					
ANR	352365	Argument	ao -> op		339262	0					
ANR	352366	PtrMemberAccess	ao -> op		339262	0					
ANR	352367	Identifier	ao		339262	0					
ANR	352368	Identifier	op		339262	1					
ANR	352369	Argument	"""pop"""		339262	1					
ANR	352370	PrimaryExpression	"""pop"""		339262	0					
ANR	352371	Argument	0		339262	2					
ANR	352372	PrimaryExpression	0		339262	0					
ANR	352373	CompoundStatement		2290:2:49706:49740	339262	1					
ANR	352374	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3582:2:75565:75599	339262	0	True				
ANR	352375	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352376	IdentifierDeclType	ut64		339262	0					
ANR	352377	Identifier	argt		339262	1					
ANR	352378	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352379	Identifier	argt		339262	0					
ANR	352380	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352381	Callee	thumb_selector		339262	0					
ANR	352382	Identifier	thumb_selector		339262	0					
ANR	352383	ArgumentList	ao -> a		339262	1					
ANR	352384	Argument	ao -> a		339262	0					
ANR	352385	PtrMemberAccess	ao -> a		339262	0					
ANR	352386	Identifier	ao		339262	0					
ANR	352387	Identifier	a		339262	1					
ANR	352388	SwitchStatement	switch ( argt )		339262	1					
ANR	352389	Condition	argt	3583:10:75611:75614	339262	0	True				
ANR	352390	Identifier	argt		339262	0					
ANR	352391	CompoundStatement		2291:16:49758:49758	339262	1					
ANR	352392	Label	case THUMB_LIST :	3584:2:75621:75636	339262	0	True				
ANR	352393	Identifier	THUMB_LIST		339262	0					
ANR	352394	CompoundStatement		2293:3:49784:49817	339262	1					
ANR	352395	IdentifierDeclStatement	st32 list = getreglist ( ao -> a [ 0 ] ) ;	3585:3:75643:75676	339262	0	True				
ANR	352396	IdentifierDecl	list = getreglist ( ao -> a [ 0 ] )		339262	0					
ANR	352397	IdentifierDeclType	st32		339262	0					
ANR	352398	Identifier	list		339262	1					
ANR	352399	AssignmentExpression	list = getreglist ( ao -> a [ 0 ] )		339262	2		=			
ANR	352400	Identifier	list		339262	0					
ANR	352401	CallExpression	getreglist ( ao -> a [ 0 ] )		339262	1					
ANR	352402	Callee	getreglist		339262	0					
ANR	352403	Identifier	getreglist		339262	0					
ANR	352404	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	352405	Argument	ao -> a [ 0 ]		339262	0					
ANR	352406	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	352407	PtrMemberAccess	ao -> a		339262	0					
ANR	352408	Identifier	ao		339262	0					
ANR	352409	Identifier	a		339262	1					
ANR	352410	PrimaryExpression	0		339262	1					
ANR	352411	IfStatement	if ( ( list <= 0 ) || ( ( list & ( 1 << 13 ) ) != 0 ) )		339262	1					
ANR	352412	Condition	( list <= 0 ) || ( ( list & ( 1 << 13 ) ) != 0 )	3586:7:75685:75724	339262	0	True				
ANR	352413	OrExpression	( list <= 0 ) || ( ( list & ( 1 << 13 ) ) != 0 )		339262	0		||			
ANR	352414	RelationalExpression	list <= 0		339262	0		<=			
ANR	352415	Identifier	list		339262	0					
ANR	352416	PrimaryExpression	0		339262	1					
ANR	352417	EqualityExpression	( list & ( 1 << 13 ) ) != 0		339262	1		!=			
ANR	352418	BitAndExpression	list & ( 1 << 13 )		339262	0		&			
ANR	352419	Identifier	list		339262	0					
ANR	352420	ShiftExpression	1 << 13		339262	1		<<			
ANR	352421	PrimaryExpression	1		339262	0					
ANR	352422	PrimaryExpression	13		339262	1					
ANR	352423	PrimaryExpression	0		339262	1					
ANR	352424	CompoundStatement		2294:49:49868:49868	339262	1					
ANR	352425	ReturnStatement	return - 1 ;	3587:4:75733:75742	339262	0	True				
ANR	352426	UnaryOperationExpression	- 1		339262	0					
ANR	352427	UnaryOperator	-		339262	0					
ANR	352428	PrimaryExpression	1		339262	1					
ANR	352429	IfStatement	if ( ( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00007f00 ) == 0 ) )		339262	2					
ANR	352430	Condition	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00007f00 ) == 0 )	3589:7:75756:75802	339262	0	True				
ANR	352431	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00007f00 ) == 0 )		339262	0		&&			
ANR	352432	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	352433	UnaryOperator	!		339262	0					
ANR	352434	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	352435	Identifier	m		339262	0					
ANR	352436	Identifier	DOTW_BIT		339262	1					
ANR	352437	EqualityExpression	( list & 0x00007f00 ) == 0		339262	1		==			
ANR	352438	BitAndExpression	list & 0x00007f00		339262	0		&			
ANR	352439	Identifier	list		339262	0					
ANR	352440	PrimaryExpression	0x00007f00		339262	1					
ANR	352441	PrimaryExpression	0		339262	1					
ANR	352442	CompoundStatement		2297:56:49946:49946	339262	1					
ANR	352443	ExpressionStatement	ao -> o = 0x00bc	3590:4:75811:75825	339262	0	True				
ANR	352444	AssignmentExpression	ao -> o = 0x00bc		339262	0		=			
ANR	352445	PtrMemberAccess	ao -> o		339262	0					
ANR	352446	Identifier	ao		339262	0					
ANR	352447	Identifier	o		339262	1					
ANR	352448	PrimaryExpression	0x00bc		339262	1					
ANR	352449	ExpressionStatement	ao -> o |= ( list & 0x8000 ) >> 15	3591:4:75831:75861	339262	1	True				
ANR	352450	AssignmentExpression	ao -> o |= ( list & 0x8000 ) >> 15		339262	0		|=			
ANR	352451	PtrMemberAccess	ao -> o		339262	0					
ANR	352452	Identifier	ao		339262	0					
ANR	352453	Identifier	o		339262	1					
ANR	352454	ShiftExpression	( list & 0x8000 ) >> 15		339262	1		>>			
ANR	352455	BitAndExpression	list & 0x8000		339262	0		&			
ANR	352456	Identifier	list		339262	0					
ANR	352457	PrimaryExpression	0x8000		339262	1					
ANR	352458	PrimaryExpression	15		339262	1					
ANR	352459	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3592:4:75867:75894	339262	2	True				
ANR	352460	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	352461	PtrMemberAccess	ao -> o		339262	0					
ANR	352462	Identifier	ao		339262	0					
ANR	352463	Identifier	o		339262	1					
ANR	352464	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	352465	BitAndExpression	list & 0xff		339262	0		&			
ANR	352466	Identifier	list		339262	0					
ANR	352467	PrimaryExpression	0xff		339262	1					
ANR	352468	PrimaryExpression	8		339262	1					
ANR	352469	ReturnStatement	return 2 ;	3593:4:75900:75908	339262	3	True				
ANR	352470	PrimaryExpression	2		339262	0					
ANR	352471	ExpressionStatement	ao -> o = 0xbde80000	3595:3:75918:75936	339262	3	True				
ANR	352472	AssignmentExpression	ao -> o = 0xbde80000		339262	0		=			
ANR	352473	PtrMemberAccess	ao -> o		339262	0					
ANR	352474	Identifier	ao		339262	0					
ANR	352475	Identifier	o		339262	1					
ANR	352476	PrimaryExpression	0xbde80000		339262	1					
ANR	352477	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	3596:3:75941:75970	339262	4	True				
ANR	352478	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		339262	0		|=			
ANR	352479	PtrMemberAccess	ao -> o		339262	0					
ANR	352480	Identifier	ao		339262	0					
ANR	352481	Identifier	o		339262	1					
ANR	352482	ShiftExpression	( list & 0xff00 ) >> 8		339262	1		>>			
ANR	352483	BitAndExpression	list & 0xff00		339262	0		&			
ANR	352484	Identifier	list		339262	0					
ANR	352485	PrimaryExpression	0xff00		339262	1					
ANR	352486	PrimaryExpression	8		339262	1					
ANR	352487	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3597:3:75975:76002	339262	5	True				
ANR	352488	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	352489	PtrMemberAccess	ao -> o		339262	0					
ANR	352490	Identifier	ao		339262	0					
ANR	352491	Identifier	o		339262	1					
ANR	352492	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	352493	BitAndExpression	list & 0xff		339262	0		&			
ANR	352494	Identifier	list		339262	0					
ANR	352495	PrimaryExpression	0xff		339262	1					
ANR	352496	PrimaryExpression	8		339262	1					
ANR	352497	ReturnStatement	return 4 ;	3598:3:76007:76015	339262	6	True				
ANR	352498	PrimaryExpression	4		339262	0					
ANR	352499	BreakStatement	break ;	3600:3:76032:76037	339262	2	True				
ANR	352500	Label	default :	3601:2:76041:76048	339262	3	True				
ANR	352501	Identifier	default		339262	0					
ANR	352502	ReturnStatement	return - 1 ;	3602:3:76053:76062	339262	4	True				
ANR	352503	UnaryOperationExpression	- 1		339262	0					
ANR	352504	UnaryOperator	-		339262	0					
ANR	352505	PrimaryExpression	1		339262	1					
ANR	352506	ElseStatement	else		339262	0					
ANR	352507	IfStatement	"if ( ( m = opmask ( ao -> op , ""push"" , 0 ) ) )"		339262	0					
ANR	352508	Condition	"m = opmask ( ao -> op , ""push"" , 0 )"	3605:5:76081:76112	339262	0	True				
ANR	352509	AssignmentExpression	"m = opmask ( ao -> op , ""push"" , 0 )"		339262	0		=			
ANR	352510	Identifier	m		339262	0					
ANR	352511	CallExpression	"opmask ( ao -> op , ""push"" , 0 )"		339262	1					
ANR	352512	Callee	opmask		339262	0					
ANR	352513	Identifier	opmask		339262	0					
ANR	352514	ArgumentList	ao -> op		339262	1					
ANR	352515	Argument	ao -> op		339262	0					
ANR	352516	PtrMemberAccess	ao -> op		339262	0					
ANR	352517	Identifier	ao		339262	0					
ANR	352518	Identifier	op		339262	1					
ANR	352519	Argument	"""push"""		339262	1					
ANR	352520	PrimaryExpression	"""push"""		339262	0					
ANR	352521	Argument	0		339262	2					
ANR	352522	PrimaryExpression	0		339262	0					
ANR	352523	CompoundStatement		2314:2:50260:50294	339262	1					
ANR	352524	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3606:2:76119:76153	339262	0	True				
ANR	352525	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352526	IdentifierDeclType	ut64		339262	0					
ANR	352527	Identifier	argt		339262	1					
ANR	352528	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352529	Identifier	argt		339262	0					
ANR	352530	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352531	Callee	thumb_selector		339262	0					
ANR	352532	Identifier	thumb_selector		339262	0					
ANR	352533	ArgumentList	ao -> a		339262	1					
ANR	352534	Argument	ao -> a		339262	0					
ANR	352535	PtrMemberAccess	ao -> a		339262	0					
ANR	352536	Identifier	ao		339262	0					
ANR	352537	Identifier	a		339262	1					
ANR	352538	SwitchStatement	switch ( argt )		339262	1					
ANR	352539	Condition	argt	3607:10:76165:76168	339262	0	True				
ANR	352540	Identifier	argt		339262	0					
ANR	352541	CompoundStatement		2315:16:50312:50312	339262	1					
ANR	352542	Label	case THUMB_LIST :	3608:2:76175:76190	339262	0	True				
ANR	352543	Identifier	THUMB_LIST		339262	0					
ANR	352544	CompoundStatement		2317:3:50338:50371	339262	1					
ANR	352545	IdentifierDeclStatement	st32 list = getreglist ( ao -> a [ 0 ] ) ;	3609:3:76197:76230	339262	0	True				
ANR	352546	IdentifierDecl	list = getreglist ( ao -> a [ 0 ] )		339262	0					
ANR	352547	IdentifierDeclType	st32		339262	0					
ANR	352548	Identifier	list		339262	1					
ANR	352549	AssignmentExpression	list = getreglist ( ao -> a [ 0 ] )		339262	2		=			
ANR	352550	Identifier	list		339262	0					
ANR	352551	CallExpression	getreglist ( ao -> a [ 0 ] )		339262	1					
ANR	352552	Callee	getreglist		339262	0					
ANR	352553	Identifier	getreglist		339262	0					
ANR	352554	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	352555	Argument	ao -> a [ 0 ]		339262	0					
ANR	352556	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	352557	PtrMemberAccess	ao -> a		339262	0					
ANR	352558	Identifier	ao		339262	0					
ANR	352559	Identifier	a		339262	1					
ANR	352560	PrimaryExpression	0		339262	1					
ANR	352561	IfStatement	if ( ( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 ) )		339262	1					
ANR	352562	Condition	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )	3610:7:76239:76279	339262	0	True				
ANR	352563	OrExpression	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )		339262	0		||			
ANR	352564	RelationalExpression	list <= 0		339262	0		<=			
ANR	352565	Identifier	list		339262	0					
ANR	352566	PrimaryExpression	0		339262	1					
ANR	352567	EqualityExpression	( list & 0x0000a000 ) != 0		339262	1		!=			
ANR	352568	BitAndExpression	list & 0x0000a000		339262	0		&			
ANR	352569	Identifier	list		339262	0					
ANR	352570	PrimaryExpression	0x0000a000		339262	1					
ANR	352571	PrimaryExpression	0		339262	1					
ANR	352572	CompoundStatement		2318:50:50423:50423	339262	1					
ANR	352573	ReturnStatement	return - 1 ;	3611:4:76288:76297	339262	0	True				
ANR	352574	UnaryOperationExpression	- 1		339262	0					
ANR	352575	UnaryOperator	-		339262	0					
ANR	352576	PrimaryExpression	1		339262	1					
ANR	352577	IfStatement	if ( ( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00001f00 ) == 0 ) )		339262	2					
ANR	352578	Condition	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00001f00 ) == 0 )	3613:7:76311:76357	339262	0	True				
ANR	352579	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00001f00 ) == 0 )		339262	0		&&			
ANR	352580	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	352581	UnaryOperator	!		339262	0					
ANR	352582	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	352583	Identifier	m		339262	0					
ANR	352584	Identifier	DOTW_BIT		339262	1					
ANR	352585	EqualityExpression	( list & 0x00001f00 ) == 0		339262	1		==			
ANR	352586	BitAndExpression	list & 0x00001f00		339262	0		&			
ANR	352587	Identifier	list		339262	0					
ANR	352588	PrimaryExpression	0x00001f00		339262	1					
ANR	352589	PrimaryExpression	0		339262	1					
ANR	352590	CompoundStatement		2321:56:50501:50501	339262	1					
ANR	352591	ExpressionStatement	ao -> o = 0x00b4	3614:4:76366:76380	339262	0	True				
ANR	352592	AssignmentExpression	ao -> o = 0x00b4		339262	0		=			
ANR	352593	PtrMemberAccess	ao -> o		339262	0					
ANR	352594	Identifier	ao		339262	0					
ANR	352595	Identifier	o		339262	1					
ANR	352596	PrimaryExpression	0x00b4		339262	1					
ANR	352597	ExpressionStatement	ao -> o |= ( list & 0x4000 ) >> 14	3615:4:76386:76416	339262	1	True				
ANR	352598	AssignmentExpression	ao -> o |= ( list & 0x4000 ) >> 14		339262	0		|=			
ANR	352599	PtrMemberAccess	ao -> o		339262	0					
ANR	352600	Identifier	ao		339262	0					
ANR	352601	Identifier	o		339262	1					
ANR	352602	ShiftExpression	( list & 0x4000 ) >> 14		339262	1		>>			
ANR	352603	BitAndExpression	list & 0x4000		339262	0		&			
ANR	352604	Identifier	list		339262	0					
ANR	352605	PrimaryExpression	0x4000		339262	1					
ANR	352606	PrimaryExpression	14		339262	1					
ANR	352607	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3616:4:76422:76449	339262	2	True				
ANR	352608	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	352609	PtrMemberAccess	ao -> o		339262	0					
ANR	352610	Identifier	ao		339262	0					
ANR	352611	Identifier	o		339262	1					
ANR	352612	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	352613	BitAndExpression	list & 0xff		339262	0		&			
ANR	352614	Identifier	list		339262	0					
ANR	352615	PrimaryExpression	0xff		339262	1					
ANR	352616	PrimaryExpression	8		339262	1					
ANR	352617	ReturnStatement	return 2 ;	3617:4:76455:76463	339262	3	True				
ANR	352618	PrimaryExpression	2		339262	0					
ANR	352619	ExpressionStatement	ao -> o = 0x2de90000	3619:3:76473:76491	339262	3	True				
ANR	352620	AssignmentExpression	ao -> o = 0x2de90000		339262	0		=			
ANR	352621	PtrMemberAccess	ao -> o		339262	0					
ANR	352622	Identifier	ao		339262	0					
ANR	352623	Identifier	o		339262	1					
ANR	352624	PrimaryExpression	0x2de90000		339262	1					
ANR	352625	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	3620:3:76496:76525	339262	4	True				
ANR	352626	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		339262	0		|=			
ANR	352627	PtrMemberAccess	ao -> o		339262	0					
ANR	352628	Identifier	ao		339262	0					
ANR	352629	Identifier	o		339262	1					
ANR	352630	ShiftExpression	( list & 0xff00 ) >> 8		339262	1		>>			
ANR	352631	BitAndExpression	list & 0xff00		339262	0		&			
ANR	352632	Identifier	list		339262	0					
ANR	352633	PrimaryExpression	0xff00		339262	1					
ANR	352634	PrimaryExpression	8		339262	1					
ANR	352635	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3621:3:76530:76557	339262	5	True				
ANR	352636	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		339262	0		|=			
ANR	352637	PtrMemberAccess	ao -> o		339262	0					
ANR	352638	Identifier	ao		339262	0					
ANR	352639	Identifier	o		339262	1					
ANR	352640	ShiftExpression	( list & 0xff ) << 8		339262	1		<<			
ANR	352641	BitAndExpression	list & 0xff		339262	0		&			
ANR	352642	Identifier	list		339262	0					
ANR	352643	PrimaryExpression	0xff		339262	1					
ANR	352644	PrimaryExpression	8		339262	1					
ANR	352645	ReturnStatement	return 4 ;	3622:3:76562:76570	339262	6	True				
ANR	352646	PrimaryExpression	4		339262	0					
ANR	352647	BreakStatement	break ;	3624:3:76587:76592	339262	2	True				
ANR	352648	Label	default :	3625:2:76596:76603	339262	3	True				
ANR	352649	Identifier	default		339262	0					
ANR	352650	ReturnStatement	return - 1 ;	3626:3:76608:76617	339262	4	True				
ANR	352651	UnaryOperationExpression	- 1		339262	0					
ANR	352652	UnaryOperator	-		339262	0					
ANR	352653	PrimaryExpression	1		339262	1					
ANR	352654	ElseStatement	else		339262	0					
ANR	352655	IfStatement	"if ( ( m = opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	352656	Condition	"m = opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT )"	3629:5:76636:76689	339262	0	True				
ANR	352657	AssignmentExpression	"m = opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	352658	Identifier	m		339262	0					
ANR	352659	CallExpression	"opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	352660	Callee	opmask		339262	0					
ANR	352661	Identifier	opmask		339262	0					
ANR	352662	ArgumentList	ao -> op		339262	1					
ANR	352663	Argument	ao -> op		339262	0					
ANR	352664	PtrMemberAccess	ao -> op		339262	0					
ANR	352665	Identifier	ao		339262	0					
ANR	352666	Identifier	op		339262	1					
ANR	352667	Argument	"""qadd"""		339262	1					
ANR	352668	PrimaryExpression	"""qadd"""		339262	0					
ANR	352669	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	352670	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	352671	Identifier	EIGHT_BIT		339262	0					
ANR	352672	Identifier	SIXTEEN_BIT		339262	1					
ANR	352673	CompoundStatement		2338:2:50837:50871	339262	1					
ANR	352674	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3630:2:76696:76730	339262	0	True				
ANR	352675	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352676	IdentifierDeclType	ut64		339262	0					
ANR	352677	Identifier	argt		339262	1					
ANR	352678	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352679	Identifier	argt		339262	0					
ANR	352680	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352681	Callee	thumb_selector		339262	0					
ANR	352682	Identifier	thumb_selector		339262	0					
ANR	352683	ArgumentList	ao -> a		339262	1					
ANR	352684	Argument	ao -> a		339262	0					
ANR	352685	PtrMemberAccess	ao -> a		339262	0					
ANR	352686	Identifier	ao		339262	0					
ANR	352687	Identifier	a		339262	1					
ANR	352688	SwitchStatement	switch ( argt )		339262	1					
ANR	352689	Condition	argt	3631:10:76742:76745	339262	0	True				
ANR	352690	Identifier	argt		339262	0					
ANR	352691	CompoundStatement		2339:16:50889:50889	339262	1					
ANR	352692	Label	case THUMB_REG_REG :	3632:2:76752:76770	339262	0	True				
ANR	352693	Identifier	THUMB_REG_REG		339262	0					
ANR	352694	CompoundStatement		2340:22:50913:50913	339262	1					
ANR	352695	ExpressionStatement	std_opt_2 ( ao )	3633:3:76777:76791	339262	0	True				
ANR	352696	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	352697	Callee	std_opt_2		339262	0					
ANR	352698	Identifier	std_opt_2		339262	0					
ANR	352699	ArgumentList	ao		339262	1					
ANR	352700	Argument	ao		339262	0					
ANR	352701	Identifier	ao		339262	0					
ANR	352702	Label	case THUMB_REG_REG_REG :	3636:2:76837:76859	339262	2	True				
ANR	352703	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	352704	CompoundStatement		2344:26:51002:51002	339262	3					
ANR	352705	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	352706	Condition	m & SIXTEEN_BIT	3637:7:76870:76884	339262	0	True				
ANR	352707	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	352708	Identifier	m		339262	0					
ANR	352709	Identifier	SIXTEEN_BIT		339262	1					
ANR	352710	CompoundStatement		2345:24:51028:51028	339262	1					
ANR	352711	ExpressionStatement	ao -> o = 0x90fa10f0	3638:4:76893:76911	339262	0	True				
ANR	352712	AssignmentExpression	ao -> o = 0x90fa10f0		339262	0		=			
ANR	352713	PtrMemberAccess	ao -> o		339262	0					
ANR	352714	Identifier	ao		339262	0					
ANR	352715	Identifier	o		339262	1					
ANR	352716	PrimaryExpression	0x90fa10f0		339262	1					
ANR	352717	ElseStatement	else		339262	0					
ANR	352718	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	352719	Condition	m & EIGHT_BIT	3640:7:76930:76942	339262	0	True				
ANR	352720	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	352721	Identifier	m		339262	0					
ANR	352722	Identifier	EIGHT_BIT		339262	1					
ANR	352723	CompoundStatement		2348:22:51086:51086	339262	1					
ANR	352724	ExpressionStatement	ao -> o = 0x80fa10f0	3641:4:76951:76969	339262	0	True				
ANR	352725	AssignmentExpression	ao -> o = 0x80fa10f0		339262	0		=			
ANR	352726	PtrMemberAccess	ao -> o		339262	0					
ANR	352727	Identifier	ao		339262	0					
ANR	352728	Identifier	o		339262	1					
ANR	352729	PrimaryExpression	0x80fa10f0		339262	1					
ANR	352730	ElseStatement	else		339262	0					
ANR	352731	CompoundStatement		2350:10:51122:51122	339262	0					
ANR	352732	ExpressionStatement	ao -> o = 0x80fa80f0	3643:4:76987:77005	339262	0	True				
ANR	352733	AssignmentExpression	ao -> o = 0x80fa80f0		339262	0		=			
ANR	352734	PtrMemberAccess	ao -> o		339262	0					
ANR	352735	Identifier	ao		339262	0					
ANR	352736	Identifier	o		339262	1					
ANR	352737	PrimaryExpression	0x80fa80f0		339262	1					
ANR	352738	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3646:3:77016:77052	339262	1	True				
ANR	352739	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	352740	Callee	std_32bit_3reg		339262	0					
ANR	352741	Identifier	std_32bit_3reg		339262	0					
ANR	352742	ArgumentList	ao		339262	1					
ANR	352743	Argument	ao		339262	0					
ANR	352744	Identifier	ao		339262	0					
ANR	352745	Argument	m		339262	1					
ANR	352746	Identifier	m		339262	0					
ANR	352747	Argument	false		339262	2					
ANR	352748	Identifier	false		339262	0					
ANR	352749	BreakStatement	break ;	3648:3:77069:77074	339262	4	True				
ANR	352750	Label	default :	3649:2:77078:77085	339262	5	True				
ANR	352751	Identifier	default		339262	0					
ANR	352752	ReturnStatement	return - 1 ;	3650:3:77090:77099	339262	6	True				
ANR	352753	UnaryOperationExpression	- 1		339262	0					
ANR	352754	UnaryOperator	-		339262	0					
ANR	352755	PrimaryExpression	1		339262	1					
ANR	352756	ElseStatement	else		339262	0					
ANR	352757	IfStatement	"if ( ( m = opmask ( ao -> op , ""qasx"" , 0 ) ) )"		339262	0					
ANR	352758	Condition	"m = opmask ( ao -> op , ""qasx"" , 0 )"	3653:5:77118:77149	339262	0	True				
ANR	352759	AssignmentExpression	"m = opmask ( ao -> op , ""qasx"" , 0 )"		339262	0		=			
ANR	352760	Identifier	m		339262	0					
ANR	352761	CallExpression	"opmask ( ao -> op , ""qasx"" , 0 )"		339262	1					
ANR	352762	Callee	opmask		339262	0					
ANR	352763	Identifier	opmask		339262	0					
ANR	352764	ArgumentList	ao -> op		339262	1					
ANR	352765	Argument	ao -> op		339262	0					
ANR	352766	PtrMemberAccess	ao -> op		339262	0					
ANR	352767	Identifier	ao		339262	0					
ANR	352768	Identifier	op		339262	1					
ANR	352769	Argument	"""qasx"""		339262	1					
ANR	352770	PrimaryExpression	"""qasx"""		339262	0					
ANR	352771	Argument	0		339262	2					
ANR	352772	PrimaryExpression	0		339262	0					
ANR	352773	CompoundStatement		2362:2:51297:51331	339262	1					
ANR	352774	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3654:2:77156:77190	339262	0	True				
ANR	352775	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352776	IdentifierDeclType	ut64		339262	0					
ANR	352777	Identifier	argt		339262	1					
ANR	352778	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352779	Identifier	argt		339262	0					
ANR	352780	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352781	Callee	thumb_selector		339262	0					
ANR	352782	Identifier	thumb_selector		339262	0					
ANR	352783	ArgumentList	ao -> a		339262	1					
ANR	352784	Argument	ao -> a		339262	0					
ANR	352785	PtrMemberAccess	ao -> a		339262	0					
ANR	352786	Identifier	ao		339262	0					
ANR	352787	Identifier	a		339262	1					
ANR	352788	SwitchStatement	switch ( argt )		339262	1					
ANR	352789	Condition	argt	3655:10:77202:77205	339262	0	True				
ANR	352790	Identifier	argt		339262	0					
ANR	352791	CompoundStatement		2363:16:51349:51349	339262	1					
ANR	352792	Label	case THUMB_REG_REG :	3656:2:77212:77230	339262	0	True				
ANR	352793	Identifier	THUMB_REG_REG		339262	0					
ANR	352794	CompoundStatement		2364:22:51373:51373	339262	1					
ANR	352795	ExpressionStatement	std_opt_2 ( ao )	3657:3:77237:77251	339262	0	True				
ANR	352796	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	352797	Callee	std_opt_2		339262	0					
ANR	352798	Identifier	std_opt_2		339262	0					
ANR	352799	ArgumentList	ao		339262	1					
ANR	352800	Argument	ao		339262	0					
ANR	352801	Identifier	ao		339262	0					
ANR	352802	Label	case THUMB_REG_REG_REG :	3660:2:77297:77319	339262	2	True				
ANR	352803	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	352804	CompoundStatement		2368:26:51462:51462	339262	3					
ANR	352805	ExpressionStatement	ao -> o = 0xa0fa10f0	3661:3:77326:77344	339262	0	True				
ANR	352806	AssignmentExpression	ao -> o = 0xa0fa10f0		339262	0		=			
ANR	352807	PtrMemberAccess	ao -> o		339262	0					
ANR	352808	Identifier	ao		339262	0					
ANR	352809	Identifier	o		339262	1					
ANR	352810	PrimaryExpression	0xa0fa10f0		339262	1					
ANR	352811	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3662:3:77349:77385	339262	1	True				
ANR	352812	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	352813	Callee	std_32bit_3reg		339262	0					
ANR	352814	Identifier	std_32bit_3reg		339262	0					
ANR	352815	ArgumentList	ao		339262	1					
ANR	352816	Argument	ao		339262	0					
ANR	352817	Identifier	ao		339262	0					
ANR	352818	Argument	m		339262	1					
ANR	352819	Identifier	m		339262	0					
ANR	352820	Argument	false		339262	2					
ANR	352821	Identifier	false		339262	0					
ANR	352822	BreakStatement	break ;	3664:3:77402:77407	339262	4	True				
ANR	352823	Label	default :	3665:2:77411:77418	339262	5	True				
ANR	352824	Identifier	default		339262	0					
ANR	352825	ReturnStatement	return - 1 ;	3666:3:77423:77432	339262	6	True				
ANR	352826	UnaryOperationExpression	- 1		339262	0					
ANR	352827	UnaryOperator	-		339262	0					
ANR	352828	PrimaryExpression	1		339262	1					
ANR	352829	ElseStatement	else		339262	0					
ANR	352830	IfStatement	"if ( ( m = opmask ( ao -> op , ""qdadd"" , 0 ) ) )"		339262	0					
ANR	352831	Condition	"m = opmask ( ao -> op , ""qdadd"" , 0 )"	3669:5:77451:77483	339262	0	True				
ANR	352832	AssignmentExpression	"m = opmask ( ao -> op , ""qdadd"" , 0 )"		339262	0		=			
ANR	352833	Identifier	m		339262	0					
ANR	352834	CallExpression	"opmask ( ao -> op , ""qdadd"" , 0 )"		339262	1					
ANR	352835	Callee	opmask		339262	0					
ANR	352836	Identifier	opmask		339262	0					
ANR	352837	ArgumentList	ao -> op		339262	1					
ANR	352838	Argument	ao -> op		339262	0					
ANR	352839	PtrMemberAccess	ao -> op		339262	0					
ANR	352840	Identifier	ao		339262	0					
ANR	352841	Identifier	op		339262	1					
ANR	352842	Argument	"""qdadd"""		339262	1					
ANR	352843	PrimaryExpression	"""qdadd"""		339262	0					
ANR	352844	Argument	0		339262	2					
ANR	352845	PrimaryExpression	0		339262	0					
ANR	352846	CompoundStatement		2378:2:51631:51665	339262	1					
ANR	352847	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3670:2:77490:77524	339262	0	True				
ANR	352848	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352849	IdentifierDeclType	ut64		339262	0					
ANR	352850	Identifier	argt		339262	1					
ANR	352851	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352852	Identifier	argt		339262	0					
ANR	352853	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352854	Callee	thumb_selector		339262	0					
ANR	352855	Identifier	thumb_selector		339262	0					
ANR	352856	ArgumentList	ao -> a		339262	1					
ANR	352857	Argument	ao -> a		339262	0					
ANR	352858	PtrMemberAccess	ao -> a		339262	0					
ANR	352859	Identifier	ao		339262	0					
ANR	352860	Identifier	a		339262	1					
ANR	352861	SwitchStatement	switch ( argt )		339262	1					
ANR	352862	Condition	argt	3671:10:77536:77539	339262	0	True				
ANR	352863	Identifier	argt		339262	0					
ANR	352864	CompoundStatement		2379:16:51683:51683	339262	1					
ANR	352865	Label	case THUMB_REG_REG :	3672:2:77546:77564	339262	0	True				
ANR	352866	Identifier	THUMB_REG_REG		339262	0					
ANR	352867	CompoundStatement		2380:22:51707:51707	339262	1					
ANR	352868	ExpressionStatement	std_opt_2 ( ao )	3673:3:77571:77585	339262	0	True				
ANR	352869	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	352870	Callee	std_opt_2		339262	0					
ANR	352871	Identifier	std_opt_2		339262	0					
ANR	352872	ArgumentList	ao		339262	1					
ANR	352873	Argument	ao		339262	0					
ANR	352874	Identifier	ao		339262	0					
ANR	352875	Label	case THUMB_REG_REG_REG :	3676:2:77631:77653	339262	2	True				
ANR	352876	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	352877	CompoundStatement		2384:26:51796:51796	339262	3					
ANR	352878	ExpressionStatement	ao -> o = 0x80fa90f0	3677:3:77660:77678	339262	0	True				
ANR	352879	AssignmentExpression	ao -> o = 0x80fa90f0		339262	0		=			
ANR	352880	PtrMemberAccess	ao -> o		339262	0					
ANR	352881	Identifier	ao		339262	0					
ANR	352882	Identifier	o		339262	1					
ANR	352883	PrimaryExpression	0x80fa90f0		339262	1					
ANR	352884	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3678:3:77683:77719	339262	1	True				
ANR	352885	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	352886	Callee	std_32bit_3reg		339262	0					
ANR	352887	Identifier	std_32bit_3reg		339262	0					
ANR	352888	ArgumentList	ao		339262	1					
ANR	352889	Argument	ao		339262	0					
ANR	352890	Identifier	ao		339262	0					
ANR	352891	Argument	m		339262	1					
ANR	352892	Identifier	m		339262	0					
ANR	352893	Argument	false		339262	2					
ANR	352894	Identifier	false		339262	0					
ANR	352895	BreakStatement	break ;	3680:3:77736:77741	339262	4	True				
ANR	352896	Label	default :	3681:2:77745:77752	339262	5	True				
ANR	352897	Identifier	default		339262	0					
ANR	352898	ReturnStatement	return - 1 ;	3682:3:77757:77766	339262	6	True				
ANR	352899	UnaryOperationExpression	- 1		339262	0					
ANR	352900	UnaryOperator	-		339262	0					
ANR	352901	PrimaryExpression	1		339262	1					
ANR	352902	ElseStatement	else		339262	0					
ANR	352903	IfStatement	"if ( ( m = opmask ( ao -> op , ""qdsub"" , 0 ) ) )"		339262	0					
ANR	352904	Condition	"m = opmask ( ao -> op , ""qdsub"" , 0 )"	3685:5:77785:77817	339262	0	True				
ANR	352905	AssignmentExpression	"m = opmask ( ao -> op , ""qdsub"" , 0 )"		339262	0		=			
ANR	352906	Identifier	m		339262	0					
ANR	352907	CallExpression	"opmask ( ao -> op , ""qdsub"" , 0 )"		339262	1					
ANR	352908	Callee	opmask		339262	0					
ANR	352909	Identifier	opmask		339262	0					
ANR	352910	ArgumentList	ao -> op		339262	1					
ANR	352911	Argument	ao -> op		339262	0					
ANR	352912	PtrMemberAccess	ao -> op		339262	0					
ANR	352913	Identifier	ao		339262	0					
ANR	352914	Identifier	op		339262	1					
ANR	352915	Argument	"""qdsub"""		339262	1					
ANR	352916	PrimaryExpression	"""qdsub"""		339262	0					
ANR	352917	Argument	0		339262	2					
ANR	352918	PrimaryExpression	0		339262	0					
ANR	352919	CompoundStatement		2394:2:51965:51999	339262	1					
ANR	352920	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3686:2:77824:77858	339262	0	True				
ANR	352921	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352922	IdentifierDeclType	ut64		339262	0					
ANR	352923	Identifier	argt		339262	1					
ANR	352924	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352925	Identifier	argt		339262	0					
ANR	352926	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	352927	Callee	thumb_selector		339262	0					
ANR	352928	Identifier	thumb_selector		339262	0					
ANR	352929	ArgumentList	ao -> a		339262	1					
ANR	352930	Argument	ao -> a		339262	0					
ANR	352931	PtrMemberAccess	ao -> a		339262	0					
ANR	352932	Identifier	ao		339262	0					
ANR	352933	Identifier	a		339262	1					
ANR	352934	SwitchStatement	switch ( argt )		339262	1					
ANR	352935	Condition	argt	3687:10:77870:77873	339262	0	True				
ANR	352936	Identifier	argt		339262	0					
ANR	352937	CompoundStatement		2395:16:52017:52017	339262	1					
ANR	352938	Label	case THUMB_REG_REG :	3688:2:77880:77898	339262	0	True				
ANR	352939	Identifier	THUMB_REG_REG		339262	0					
ANR	352940	CompoundStatement		2396:22:52041:52041	339262	1					
ANR	352941	ExpressionStatement	std_opt_2 ( ao )	3689:3:77905:77919	339262	0	True				
ANR	352942	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	352943	Callee	std_opt_2		339262	0					
ANR	352944	Identifier	std_opt_2		339262	0					
ANR	352945	ArgumentList	ao		339262	1					
ANR	352946	Argument	ao		339262	0					
ANR	352947	Identifier	ao		339262	0					
ANR	352948	Label	case THUMB_REG_REG_REG :	3692:2:77965:77987	339262	2	True				
ANR	352949	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	352950	CompoundStatement		2400:26:52130:52130	339262	3					
ANR	352951	ExpressionStatement	ao -> o = 0x80fab0f0	3693:3:77994:78012	339262	0	True				
ANR	352952	AssignmentExpression	ao -> o = 0x80fab0f0		339262	0		=			
ANR	352953	PtrMemberAccess	ao -> o		339262	0					
ANR	352954	Identifier	ao		339262	0					
ANR	352955	Identifier	o		339262	1					
ANR	352956	PrimaryExpression	0x80fab0f0		339262	1					
ANR	352957	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3694:3:78017:78053	339262	1	True				
ANR	352958	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	352959	Callee	std_32bit_3reg		339262	0					
ANR	352960	Identifier	std_32bit_3reg		339262	0					
ANR	352961	ArgumentList	ao		339262	1					
ANR	352962	Argument	ao		339262	0					
ANR	352963	Identifier	ao		339262	0					
ANR	352964	Argument	m		339262	1					
ANR	352965	Identifier	m		339262	0					
ANR	352966	Argument	false		339262	2					
ANR	352967	Identifier	false		339262	0					
ANR	352968	BreakStatement	break ;	3696:3:78070:78075	339262	4	True				
ANR	352969	Label	default :	3697:2:78079:78086	339262	5	True				
ANR	352970	Identifier	default		339262	0					
ANR	352971	ReturnStatement	return - 1 ;	3698:3:78091:78100	339262	6	True				
ANR	352972	UnaryOperationExpression	- 1		339262	0					
ANR	352973	UnaryOperator	-		339262	0					
ANR	352974	PrimaryExpression	1		339262	1					
ANR	352975	ElseStatement	else		339262	0					
ANR	352976	IfStatement	"if ( ( m = opmask ( ao -> op , ""qsax"" , 0 ) ) )"		339262	0					
ANR	352977	Condition	"m = opmask ( ao -> op , ""qsax"" , 0 )"	3701:5:78119:78150	339262	0	True				
ANR	352978	AssignmentExpression	"m = opmask ( ao -> op , ""qsax"" , 0 )"		339262	0		=			
ANR	352979	Identifier	m		339262	0					
ANR	352980	CallExpression	"opmask ( ao -> op , ""qsax"" , 0 )"		339262	1					
ANR	352981	Callee	opmask		339262	0					
ANR	352982	Identifier	opmask		339262	0					
ANR	352983	ArgumentList	ao -> op		339262	1					
ANR	352984	Argument	ao -> op		339262	0					
ANR	352985	PtrMemberAccess	ao -> op		339262	0					
ANR	352986	Identifier	ao		339262	0					
ANR	352987	Identifier	op		339262	1					
ANR	352988	Argument	"""qsax"""		339262	1					
ANR	352989	PrimaryExpression	"""qsax"""		339262	0					
ANR	352990	Argument	0		339262	2					
ANR	352991	PrimaryExpression	0		339262	0					
ANR	352992	CompoundStatement		2410:2:52298:52332	339262	1					
ANR	352993	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3702:2:78157:78191	339262	0	True				
ANR	352994	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	352995	IdentifierDeclType	ut64		339262	0					
ANR	352996	Identifier	argt		339262	1					
ANR	352997	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	352998	Identifier	argt		339262	0					
ANR	352999	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353000	Callee	thumb_selector		339262	0					
ANR	353001	Identifier	thumb_selector		339262	0					
ANR	353002	ArgumentList	ao -> a		339262	1					
ANR	353003	Argument	ao -> a		339262	0					
ANR	353004	PtrMemberAccess	ao -> a		339262	0					
ANR	353005	Identifier	ao		339262	0					
ANR	353006	Identifier	a		339262	1					
ANR	353007	SwitchStatement	switch ( argt )		339262	1					
ANR	353008	Condition	argt	3703:10:78203:78206	339262	0	True				
ANR	353009	Identifier	argt		339262	0					
ANR	353010	CompoundStatement		2411:16:52350:52350	339262	1					
ANR	353011	Label	case THUMB_REG_REG :	3704:2:78213:78231	339262	0	True				
ANR	353012	Identifier	THUMB_REG_REG		339262	0					
ANR	353013	CompoundStatement		2412:22:52374:52374	339262	1					
ANR	353014	ExpressionStatement	std_opt_2 ( ao )	3705:3:78238:78252	339262	0	True				
ANR	353015	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	353016	Callee	std_opt_2		339262	0					
ANR	353017	Identifier	std_opt_2		339262	0					
ANR	353018	ArgumentList	ao		339262	1					
ANR	353019	Argument	ao		339262	0					
ANR	353020	Identifier	ao		339262	0					
ANR	353021	Label	case THUMB_REG_REG_REG :	3708:2:78298:78320	339262	2	True				
ANR	353022	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	353023	CompoundStatement		2416:26:52463:52463	339262	3					
ANR	353024	ExpressionStatement	ao -> o = 0xe0fa10f0	3709:3:78327:78345	339262	0	True				
ANR	353025	AssignmentExpression	ao -> o = 0xe0fa10f0		339262	0		=			
ANR	353026	PtrMemberAccess	ao -> o		339262	0					
ANR	353027	Identifier	ao		339262	0					
ANR	353028	Identifier	o		339262	1					
ANR	353029	PrimaryExpression	0xe0fa10f0		339262	1					
ANR	353030	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3710:3:78350:78386	339262	1	True				
ANR	353031	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	353032	Callee	std_32bit_3reg		339262	0					
ANR	353033	Identifier	std_32bit_3reg		339262	0					
ANR	353034	ArgumentList	ao		339262	1					
ANR	353035	Argument	ao		339262	0					
ANR	353036	Identifier	ao		339262	0					
ANR	353037	Argument	m		339262	1					
ANR	353038	Identifier	m		339262	0					
ANR	353039	Argument	false		339262	2					
ANR	353040	Identifier	false		339262	0					
ANR	353041	BreakStatement	break ;	3712:3:78403:78408	339262	4	True				
ANR	353042	Label	default :	3713:2:78412:78419	339262	5	True				
ANR	353043	Identifier	default		339262	0					
ANR	353044	ReturnStatement	return - 1 ;	3714:3:78424:78433	339262	6	True				
ANR	353045	UnaryOperationExpression	- 1		339262	0					
ANR	353046	UnaryOperator	-		339262	0					
ANR	353047	PrimaryExpression	1		339262	1					
ANR	353048	ElseStatement	else		339262	0					
ANR	353049	IfStatement	"if ( ( m = opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	353050	Condition	"m = opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT )"	3717:5:78452:78505	339262	0	True				
ANR	353051	AssignmentExpression	"m = opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	353052	Identifier	m		339262	0					
ANR	353053	CallExpression	"opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	353054	Callee	opmask		339262	0					
ANR	353055	Identifier	opmask		339262	0					
ANR	353056	ArgumentList	ao -> op		339262	1					
ANR	353057	Argument	ao -> op		339262	0					
ANR	353058	PtrMemberAccess	ao -> op		339262	0					
ANR	353059	Identifier	ao		339262	0					
ANR	353060	Identifier	op		339262	1					
ANR	353061	Argument	"""qsub"""		339262	1					
ANR	353062	PrimaryExpression	"""qsub"""		339262	0					
ANR	353063	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	353064	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	353065	Identifier	EIGHT_BIT		339262	0					
ANR	353066	Identifier	SIXTEEN_BIT		339262	1					
ANR	353067	CompoundStatement		2426:2:52653:52687	339262	1					
ANR	353068	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3718:2:78512:78546	339262	0	True				
ANR	353069	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353070	IdentifierDeclType	ut64		339262	0					
ANR	353071	Identifier	argt		339262	1					
ANR	353072	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353073	Identifier	argt		339262	0					
ANR	353074	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353075	Callee	thumb_selector		339262	0					
ANR	353076	Identifier	thumb_selector		339262	0					
ANR	353077	ArgumentList	ao -> a		339262	1					
ANR	353078	Argument	ao -> a		339262	0					
ANR	353079	PtrMemberAccess	ao -> a		339262	0					
ANR	353080	Identifier	ao		339262	0					
ANR	353081	Identifier	a		339262	1					
ANR	353082	SwitchStatement	switch ( argt )		339262	1					
ANR	353083	Condition	argt	3719:10:78558:78561	339262	0	True				
ANR	353084	Identifier	argt		339262	0					
ANR	353085	CompoundStatement		2427:16:52705:52705	339262	1					
ANR	353086	Label	case THUMB_REG_REG :	3720:2:78568:78586	339262	0	True				
ANR	353087	Identifier	THUMB_REG_REG		339262	0					
ANR	353088	CompoundStatement		2428:22:52729:52729	339262	1					
ANR	353089	ExpressionStatement	std_opt_2 ( ao )	3721:3:78593:78607	339262	0	True				
ANR	353090	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	353091	Callee	std_opt_2		339262	0					
ANR	353092	Identifier	std_opt_2		339262	0					
ANR	353093	ArgumentList	ao		339262	1					
ANR	353094	Argument	ao		339262	0					
ANR	353095	Identifier	ao		339262	0					
ANR	353096	Label	case THUMB_REG_REG_REG :	3724:2:78653:78675	339262	2	True				
ANR	353097	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	353098	CompoundStatement		2432:26:52818:52818	339262	3					
ANR	353099	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	353100	Condition	m & SIXTEEN_BIT	3725:7:78686:78700	339262	0	True				
ANR	353101	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	353102	Identifier	m		339262	0					
ANR	353103	Identifier	SIXTEEN_BIT		339262	1					
ANR	353104	CompoundStatement		2433:24:52844:52844	339262	1					
ANR	353105	ExpressionStatement	ao -> o = 0xd0fa10f0	3726:4:78709:78727	339262	0	True				
ANR	353106	AssignmentExpression	ao -> o = 0xd0fa10f0		339262	0		=			
ANR	353107	PtrMemberAccess	ao -> o		339262	0					
ANR	353108	Identifier	ao		339262	0					
ANR	353109	Identifier	o		339262	1					
ANR	353110	PrimaryExpression	0xd0fa10f0		339262	1					
ANR	353111	ElseStatement	else		339262	0					
ANR	353112	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	353113	Condition	m & EIGHT_BIT	3728:7:78746:78758	339262	0	True				
ANR	353114	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	353115	Identifier	m		339262	0					
ANR	353116	Identifier	EIGHT_BIT		339262	1					
ANR	353117	CompoundStatement		2436:22:52902:52902	339262	1					
ANR	353118	ExpressionStatement	ao -> o = 0xc0fa10f0	3729:4:78767:78785	339262	0	True				
ANR	353119	AssignmentExpression	ao -> o = 0xc0fa10f0		339262	0		=			
ANR	353120	PtrMemberAccess	ao -> o		339262	0					
ANR	353121	Identifier	ao		339262	0					
ANR	353122	Identifier	o		339262	1					
ANR	353123	PrimaryExpression	0xc0fa10f0		339262	1					
ANR	353124	ElseStatement	else		339262	0					
ANR	353125	CompoundStatement		2438:10:52938:52938	339262	0					
ANR	353126	ExpressionStatement	ao -> o = 0x80faa0f0	3731:4:78803:78821	339262	0	True				
ANR	353127	AssignmentExpression	ao -> o = 0x80faa0f0		339262	0		=			
ANR	353128	PtrMemberAccess	ao -> o		339262	0					
ANR	353129	Identifier	ao		339262	0					
ANR	353130	Identifier	o		339262	1					
ANR	353131	PrimaryExpression	0x80faa0f0		339262	1					
ANR	353132	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3733:3:78831:78867	339262	1	True				
ANR	353133	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	353134	Callee	std_32bit_3reg		339262	0					
ANR	353135	Identifier	std_32bit_3reg		339262	0					
ANR	353136	ArgumentList	ao		339262	1					
ANR	353137	Argument	ao		339262	0					
ANR	353138	Identifier	ao		339262	0					
ANR	353139	Argument	m		339262	1					
ANR	353140	Identifier	m		339262	0					
ANR	353141	Argument	false		339262	2					
ANR	353142	Identifier	false		339262	0					
ANR	353143	BreakStatement	break ;	3735:3:78884:78889	339262	4	True				
ANR	353144	Label	default :	3736:2:78893:78900	339262	5	True				
ANR	353145	Identifier	default		339262	0					
ANR	353146	ReturnStatement	return - 1 ;	3737:3:78905:78914	339262	6	True				
ANR	353147	UnaryOperationExpression	- 1		339262	0					
ANR	353148	UnaryOperator	-		339262	0					
ANR	353149	PrimaryExpression	1		339262	1					
ANR	353150	ElseStatement	else		339262	0					
ANR	353151	IfStatement	"if ( ( m = opmask ( ao -> op , ""rbit"" , 0 ) ) )"		339262	0					
ANR	353152	Condition	"m = opmask ( ao -> op , ""rbit"" , 0 )"	3740:5:78933:78964	339262	0	True				
ANR	353153	AssignmentExpression	"m = opmask ( ao -> op , ""rbit"" , 0 )"		339262	0		=			
ANR	353154	Identifier	m		339262	0					
ANR	353155	CallExpression	"opmask ( ao -> op , ""rbit"" , 0 )"		339262	1					
ANR	353156	Callee	opmask		339262	0					
ANR	353157	Identifier	opmask		339262	0					
ANR	353158	ArgumentList	ao -> op		339262	1					
ANR	353159	Argument	ao -> op		339262	0					
ANR	353160	PtrMemberAccess	ao -> op		339262	0					
ANR	353161	Identifier	ao		339262	0					
ANR	353162	Identifier	op		339262	1					
ANR	353163	Argument	"""rbit"""		339262	1					
ANR	353164	PrimaryExpression	"""rbit"""		339262	0					
ANR	353165	Argument	0		339262	2					
ANR	353166	PrimaryExpression	0		339262	0					
ANR	353167	CompoundStatement		2449:2:53112:53146	339262	1					
ANR	353168	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3741:2:78971:79005	339262	0	True				
ANR	353169	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353170	IdentifierDeclType	ut64		339262	0					
ANR	353171	Identifier	argt		339262	1					
ANR	353172	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353173	Identifier	argt		339262	0					
ANR	353174	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353175	Callee	thumb_selector		339262	0					
ANR	353176	Identifier	thumb_selector		339262	0					
ANR	353177	ArgumentList	ao -> a		339262	1					
ANR	353178	Argument	ao -> a		339262	0					
ANR	353179	PtrMemberAccess	ao -> a		339262	0					
ANR	353180	Identifier	ao		339262	0					
ANR	353181	Identifier	a		339262	1					
ANR	353182	SwitchStatement	switch ( argt )		339262	1					
ANR	353183	Condition	argt	3742:10:79017:79020	339262	0	True				
ANR	353184	Identifier	argt		339262	0					
ANR	353185	CompoundStatement		2450:16:53164:53164	339262	1					
ANR	353186	Label	case THUMB_REG_REG :	3743:2:79027:79045	339262	0	True				
ANR	353187	Identifier	THUMB_REG_REG		339262	0					
ANR	353188	CompoundStatement		2451:22:53188:53188	339262	1					
ANR	353189	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	3744:3:79052:79071	339262	0	True				
ANR	353190	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		339262	0		=			
ANR	353191	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	353192	PtrMemberAccess	ao -> a		339262	0					
ANR	353193	Identifier	ao		339262	0					
ANR	353194	Identifier	a		339262	1					
ANR	353195	PrimaryExpression	2		339262	1					
ANR	353196	ArrayIndexing	ao -> a [ 1 ]		339262	1					
ANR	353197	PtrMemberAccess	ao -> a		339262	0					
ANR	353198	Identifier	ao		339262	0					
ANR	353199	Identifier	a		339262	1					
ANR	353200	PrimaryExpression	1		339262	1					
ANR	353201	ExpressionStatement	ao -> o = 0x90faa0f0	3745:3:79076:79094	339262	1	True				
ANR	353202	AssignmentExpression	ao -> o = 0x90faa0f0		339262	0		=			
ANR	353203	PtrMemberAccess	ao -> o		339262	0					
ANR	353204	Identifier	ao		339262	0					
ANR	353205	Identifier	o		339262	1					
ANR	353206	PrimaryExpression	0x90faa0f0		339262	1					
ANR	353207	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3746:3:79099:79135	339262	2	True				
ANR	353208	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	353209	Callee	std_32bit_3reg		339262	0					
ANR	353210	Identifier	std_32bit_3reg		339262	0					
ANR	353211	ArgumentList	ao		339262	1					
ANR	353212	Argument	ao		339262	0					
ANR	353213	Identifier	ao		339262	0					
ANR	353214	Argument	m		339262	1					
ANR	353215	Identifier	m		339262	0					
ANR	353216	Argument	false		339262	2					
ANR	353217	Identifier	false		339262	0					
ANR	353218	BreakStatement	break ;	3748:3:79152:79157	339262	2	True				
ANR	353219	Label	default :	3749:2:79161:79168	339262	3	True				
ANR	353220	Identifier	default		339262	0					
ANR	353221	ReturnStatement	return - 1 ;	3750:3:79173:79182	339262	4	True				
ANR	353222	UnaryOperationExpression	- 1		339262	0					
ANR	353223	UnaryOperator	-		339262	0					
ANR	353224	PrimaryExpression	1		339262	1					
ANR	353225	ElseStatement	else		339262	0					
ANR	353226	IfStatement	"if ( ( m = opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT ) ) )"		339262	0					
ANR	353227	Condition	"m = opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT )"	3753:5:79201:79250	339262	0	True				
ANR	353228	AssignmentExpression	"m = opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT )"		339262	0		=			
ANR	353229	Identifier	m		339262	0					
ANR	353230	CallExpression	"opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT )"		339262	1					
ANR	353231	Callee	opmask		339262	0					
ANR	353232	Identifier	opmask		339262	0					
ANR	353233	ArgumentList	ao -> op		339262	1					
ANR	353234	Argument	ao -> op		339262	0					
ANR	353235	PtrMemberAccess	ao -> op		339262	0					
ANR	353236	Identifier	ao		339262	0					
ANR	353237	Identifier	op		339262	1					
ANR	353238	Argument	"""rev"""		339262	1					
ANR	353239	PrimaryExpression	"""rev"""		339262	0					
ANR	353240	Argument	SIXTEEN_BIT | SH_BIT		339262	2					
ANR	353241	InclusiveOrExpression	SIXTEEN_BIT | SH_BIT		339262	0		|			
ANR	353242	Identifier	SIXTEEN_BIT		339262	0					
ANR	353243	Identifier	SH_BIT		339262	1					
ANR	353244	CompoundStatement		2462:2:53398:53432	339262	1					
ANR	353245	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3754:2:79257:79291	339262	0	True				
ANR	353246	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353247	IdentifierDeclType	ut64		339262	0					
ANR	353248	Identifier	argt		339262	1					
ANR	353249	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353250	Identifier	argt		339262	0					
ANR	353251	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353252	Callee	thumb_selector		339262	0					
ANR	353253	Identifier	thumb_selector		339262	0					
ANR	353254	ArgumentList	ao -> a		339262	1					
ANR	353255	Argument	ao -> a		339262	0					
ANR	353256	PtrMemberAccess	ao -> a		339262	0					
ANR	353257	Identifier	ao		339262	0					
ANR	353258	Identifier	a		339262	1					
ANR	353259	SwitchStatement	switch ( argt )		339262	1					
ANR	353260	Condition	argt	3755:10:79303:79306	339262	0	True				
ANR	353261	Identifier	argt		339262	0					
ANR	353262	CompoundStatement		2463:16:53450:53450	339262	1					
ANR	353263	Label	case THUMB_REG_REG :	3756:2:79313:79331	339262	0	True				
ANR	353264	Identifier	THUMB_REG_REG		339262	0					
ANR	353265	CompoundStatement		2464:22:53474:53474	339262	1					
ANR	353266	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	353267	Condition	m & SIXTEEN_BIT	3757:7:79342:79356	339262	0	True				
ANR	353268	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	353269	Identifier	m		339262	0					
ANR	353270	Identifier	SIXTEEN_BIT		339262	1					
ANR	353271	CompoundStatement		2465:24:53500:53500	339262	1					
ANR	353272	ExpressionStatement	ao -> o = 0x40ba	3758:4:79365:79379	339262	0	True				
ANR	353273	AssignmentExpression	ao -> o = 0x40ba		339262	0		=			
ANR	353274	PtrMemberAccess	ao -> o		339262	0					
ANR	353275	Identifier	ao		339262	0					
ANR	353276	Identifier	o		339262	1					
ANR	353277	PrimaryExpression	0x40ba		339262	1					
ANR	353278	ElseStatement	else		339262	0					
ANR	353279	IfStatement	if ( m & SH_BIT )		339262	0					
ANR	353280	Condition	m & SH_BIT	3760:7:79398:79407	339262	0	True				
ANR	353281	BitAndExpression	m & SH_BIT		339262	0		&			
ANR	353282	Identifier	m		339262	0					
ANR	353283	Identifier	SH_BIT		339262	1					
ANR	353284	CompoundStatement		2468:19:53551:53551	339262	1					
ANR	353285	ExpressionStatement	ao -> o = 0xc0ba	3761:4:79416:79430	339262	0	True				
ANR	353286	AssignmentExpression	ao -> o = 0xc0ba		339262	0		=			
ANR	353287	PtrMemberAccess	ao -> o		339262	0					
ANR	353288	Identifier	ao		339262	0					
ANR	353289	Identifier	o		339262	1					
ANR	353290	PrimaryExpression	0xc0ba		339262	1					
ANR	353291	ElseStatement	else		339262	0					
ANR	353292	CompoundStatement		2470:10:53583:53583	339262	0					
ANR	353293	ExpressionStatement	ao -> o = 0x00ba	3763:4:79448:79462	339262	0	True				
ANR	353294	AssignmentExpression	ao -> o = 0x00ba		339262	0		=			
ANR	353295	PtrMemberAccess	ao -> o		339262	0					
ANR	353296	Identifier	ao		339262	0					
ANR	353297	Identifier	o		339262	1					
ANR	353298	PrimaryExpression	0x00ba		339262	1					
ANR	353299	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	353300	Condition	"std_16bit_2reg ( ao , m )"	3766:7:79477:79498	339262	0	True				
ANR	353301	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	353302	Callee	std_16bit_2reg		339262	0					
ANR	353303	Identifier	std_16bit_2reg		339262	0					
ANR	353304	ArgumentList	ao		339262	1					
ANR	353305	Argument	ao		339262	0					
ANR	353306	Identifier	ao		339262	0					
ANR	353307	Argument	m		339262	1					
ANR	353308	Identifier	m		339262	0					
ANR	353309	CompoundStatement		2474:31:53642:53642	339262	1					
ANR	353310	ReturnStatement	return 2 ;	3767:4:79507:79515	339262	0	True				
ANR	353311	PrimaryExpression	2		339262	0					
ANR	353312	IfStatement	if ( m & SIXTEEN_BIT )		339262	2					
ANR	353313	Condition	m & SIXTEEN_BIT	3770:7:79533:79547	339262	0	True				
ANR	353314	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	353315	Identifier	m		339262	0					
ANR	353316	Identifier	SIXTEEN_BIT		339262	1					
ANR	353317	CompoundStatement		2478:24:53691:53691	339262	1					
ANR	353318	ExpressionStatement	ao -> o = 0x90fa90f0	3771:4:79556:79574	339262	0	True				
ANR	353319	AssignmentExpression	ao -> o = 0x90fa90f0		339262	0		=			
ANR	353320	PtrMemberAccess	ao -> o		339262	0					
ANR	353321	Identifier	ao		339262	0					
ANR	353322	Identifier	o		339262	1					
ANR	353323	PrimaryExpression	0x90fa90f0		339262	1					
ANR	353324	ElseStatement	else		339262	0					
ANR	353325	IfStatement	if ( m & SH_BIT )		339262	0					
ANR	353326	Condition	m & SH_BIT	3773:7:79593:79602	339262	0	True				
ANR	353327	BitAndExpression	m & SH_BIT		339262	0		&			
ANR	353328	Identifier	m		339262	0					
ANR	353329	Identifier	SH_BIT		339262	1					
ANR	353330	CompoundStatement		2481:19:53746:53746	339262	1					
ANR	353331	ExpressionStatement	ao -> o = 0x90fab0f0	3774:4:79611:79629	339262	0	True				
ANR	353332	AssignmentExpression	ao -> o = 0x90fab0f0		339262	0		=			
ANR	353333	PtrMemberAccess	ao -> o		339262	0					
ANR	353334	Identifier	ao		339262	0					
ANR	353335	Identifier	o		339262	1					
ANR	353336	PrimaryExpression	0x90fab0f0		339262	1					
ANR	353337	ElseStatement	else		339262	0					
ANR	353338	CompoundStatement		2483:10:53782:53782	339262	0					
ANR	353339	ExpressionStatement	ao -> o = 0x90fa80f0	3776:4:79647:79665	339262	0	True				
ANR	353340	AssignmentExpression	ao -> o = 0x90fa80f0		339262	0		=			
ANR	353341	PtrMemberAccess	ao -> o		339262	0					
ANR	353342	Identifier	ao		339262	0					
ANR	353343	Identifier	o		339262	1					
ANR	353344	PrimaryExpression	0x90fa80f0		339262	1					
ANR	353345	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	3778:3:79675:79694	339262	3	True				
ANR	353346	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		339262	0		=			
ANR	353347	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	353348	PtrMemberAccess	ao -> a		339262	0					
ANR	353349	Identifier	ao		339262	0					
ANR	353350	Identifier	a		339262	1					
ANR	353351	PrimaryExpression	2		339262	1					
ANR	353352	ArrayIndexing	ao -> a [ 1 ]		339262	1					
ANR	353353	PtrMemberAccess	ao -> a		339262	0					
ANR	353354	Identifier	ao		339262	0					
ANR	353355	Identifier	a		339262	1					
ANR	353356	PrimaryExpression	1		339262	1					
ANR	353357	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3779:3:79699:79735	339262	4	True				
ANR	353358	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	353359	Callee	std_32bit_3reg		339262	0					
ANR	353360	Identifier	std_32bit_3reg		339262	0					
ANR	353361	ArgumentList	ao		339262	1					
ANR	353362	Argument	ao		339262	0					
ANR	353363	Identifier	ao		339262	0					
ANR	353364	Argument	m		339262	1					
ANR	353365	Identifier	m		339262	0					
ANR	353366	Argument	false		339262	2					
ANR	353367	Identifier	false		339262	0					
ANR	353368	BreakStatement	break ;	3781:3:79752:79757	339262	2	True				
ANR	353369	Label	default :	3782:2:79761:79768	339262	3	True				
ANR	353370	Identifier	default		339262	0					
ANR	353371	ReturnStatement	return - 1 ;	3783:3:79773:79782	339262	4	True				
ANR	353372	UnaryOperationExpression	- 1		339262	0					
ANR	353373	UnaryOperator	-		339262	0					
ANR	353374	PrimaryExpression	1		339262	1					
ANR	353375	ElseStatement	else		339262	0					
ANR	353376	IfStatement	"if ( ( m = opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT ) ) )"		339262	0					
ANR	353377	Condition	"m = opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT )"	3786:5:79801:79863	339262	0	True				
ANR	353378	AssignmentExpression	"m = opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT )"		339262	0		=			
ANR	353379	Identifier	m		339262	0					
ANR	353380	CallExpression	"opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT )"		339262	1					
ANR	353381	Callee	opmask		339262	0					
ANR	353382	Identifier	opmask		339262	0					
ANR	353383	ArgumentList	ao -> op		339262	1					
ANR	353384	Argument	ao -> op		339262	0					
ANR	353385	PtrMemberAccess	ao -> op		339262	0					
ANR	353386	Identifier	ao		339262	0					
ANR	353387	Identifier	op		339262	1					
ANR	353388	Argument	"""rfe"""		339262	1					
ANR	353389	PrimaryExpression	"""rfe"""		339262	0					
ANR	353390	Argument	IA_BIT | FD_BIT | DB_BIT | EA_BIT		339262	2					
ANR	353391	InclusiveOrExpression	IA_BIT | FD_BIT | DB_BIT | EA_BIT		339262	0		|			
ANR	353392	Identifier	IA_BIT		339262	0					
ANR	353393	InclusiveOrExpression	FD_BIT | DB_BIT | EA_BIT		339262	1		|			
ANR	353394	Identifier	FD_BIT		339262	0					
ANR	353395	InclusiveOrExpression	DB_BIT | EA_BIT		339262	1		|			
ANR	353396	Identifier	DB_BIT		339262	0					
ANR	353397	Identifier	EA_BIT		339262	1					
ANR	353398	CompoundStatement		2496:2:54049:54060	339262	1					
ANR	353399	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3787:2:79870:79904	339262	0	True				
ANR	353400	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353401	IdentifierDeclType	ut64		339262	0					
ANR	353402	Identifier	argt		339262	1					
ANR	353403	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353404	Identifier	argt		339262	0					
ANR	353405	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353406	Callee	thumb_selector		339262	0					
ANR	353407	Identifier	thumb_selector		339262	0					
ANR	353408	ArgumentList	ao -> a		339262	1					
ANR	353409	Argument	ao -> a		339262	0					
ANR	353410	PtrMemberAccess	ao -> a		339262	0					
ANR	353411	Identifier	ao		339262	0					
ANR	353412	Identifier	a		339262	1					
ANR	353413	IdentifierDeclStatement	ut32 wb = 0 ;	3788:2:79908:79919	339262	1	True				
ANR	353414	IdentifierDecl	wb = 0		339262	0					
ANR	353415	IdentifierDeclType	ut32		339262	0					
ANR	353416	Identifier	wb		339262	1					
ANR	353417	AssignmentExpression	wb = 0		339262	2		=			
ANR	353418	Identifier	wb		339262	0					
ANR	353419	PrimaryExpression	0		339262	1					
ANR	353420	SwitchStatement	switch ( argt )		339262	2					
ANR	353421	Condition	argt	3789:10:79931:79934	339262	0	True				
ANR	353422	Identifier	argt		339262	0					
ANR	353423	CompoundStatement		2497:16:54078:54078	339262	1					
ANR	353424	Label	case THUMB_REGBANG :	3790:2:79941:79959	339262	0	True				
ANR	353425	Identifier	THUMB_REGBANG		339262	0					
ANR	353426	CompoundStatement		2498:22:54102:54102	339262	1					
ANR	353427	ExpressionStatement	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'	3791:3:79966:80004	339262	0	True				
ANR	353428	AssignmentExpression	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	353429	ArrayIndexing	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ]		339262	0					
ANR	353430	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	353431	PtrMemberAccess	ao -> a		339262	0					
ANR	353432	Identifier	ao		339262	0					
ANR	353433	Identifier	a		339262	1					
ANR	353434	PrimaryExpression	0		339262	1					
ANR	353435	AdditiveExpression	strlen ( ao -> a [ 0 ] ) - 1		339262	1		-			
ANR	353436	CallExpression	strlen ( ao -> a [ 0 ] )		339262	0					
ANR	353437	Callee	strlen		339262	0					
ANR	353438	Identifier	strlen		339262	0					
ANR	353439	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	353440	Argument	ao -> a [ 0 ]		339262	0					
ANR	353441	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	353442	PtrMemberAccess	ao -> a		339262	0					
ANR	353443	Identifier	ao		339262	0					
ANR	353444	Identifier	a		339262	1					
ANR	353445	PrimaryExpression	0		339262	1					
ANR	353446	PrimaryExpression	1		339262	1					
ANR	353447	PrimaryExpression	'\\0'		339262	1					
ANR	353448	ExpressionStatement	wb = 0x20000000	3792:3:80009:80024	339262	1	True				
ANR	353449	AssignmentExpression	wb = 0x20000000		339262	0		=			
ANR	353450	Identifier	wb		339262	0					
ANR	353451	PrimaryExpression	0x20000000		339262	1					
ANR	353452	Label	case THUMB_REG :	3795:2:80070:80084	339262	2	True				
ANR	353453	Identifier	THUMB_REG		339262	0					
ANR	353454	CompoundStatement		2504:3:54232:54260	339262	3					
ANR	353455	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3796:3:80091:80119	339262	0	True				
ANR	353456	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	353457	IdentifierDeclType	ut8		339262	0					
ANR	353458	Identifier	reg1		339262	1					
ANR	353459	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	353460	Identifier	reg1		339262	0					
ANR	353461	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	353462	Callee	getreg		339262	0					
ANR	353463	Identifier	getreg		339262	0					
ANR	353464	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	353465	Argument	ao -> a [ 0 ]		339262	0					
ANR	353466	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	353467	PtrMemberAccess	ao -> a		339262	0					
ANR	353468	Identifier	ao		339262	0					
ANR	353469	Identifier	a		339262	1					
ANR	353470	PrimaryExpression	0		339262	1					
ANR	353471	IfStatement	if ( reg1 > 15 )		339262	1					
ANR	353472	Condition	reg1 > 15	3798:7:80129:80137	339262	0	True				
ANR	353473	RelationalExpression	reg1 > 15		339262	0		>			
ANR	353474	Identifier	reg1		339262	0					
ANR	353475	PrimaryExpression	15		339262	1					
ANR	353476	CompoundStatement		2506:18:54281:54281	339262	1					
ANR	353477	ReturnStatement	return - 1 ;	3799:4:80146:80155	339262	0	True				
ANR	353478	UnaryOperationExpression	- 1		339262	0					
ANR	353479	UnaryOperator	-		339262	0					
ANR	353480	PrimaryExpression	1		339262	1					
ANR	353481	IfStatement	if ( ( m & DB_BIT ) || ( m & EA_BIT ) )		339262	2					
ANR	353482	Condition	( m & DB_BIT ) || ( m & EA_BIT )	3802:7:80173:80200	339262	0	True				
ANR	353483	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		339262	0		||			
ANR	353484	BitAndExpression	m & DB_BIT		339262	0		&			
ANR	353485	Identifier	m		339262	0					
ANR	353486	Identifier	DB_BIT		339262	1					
ANR	353487	BitAndExpression	m & EA_BIT		339262	1		&			
ANR	353488	Identifier	m		339262	0					
ANR	353489	Identifier	EA_BIT		339262	1					
ANR	353490	CompoundStatement		2510:37:54344:54344	339262	1					
ANR	353491	ExpressionStatement	ao -> o = 0x10e800c0	3803:4:80209:80227	339262	0	True				
ANR	353492	AssignmentExpression	ao -> o = 0x10e800c0		339262	0		=			
ANR	353493	PtrMemberAccess	ao -> o		339262	0					
ANR	353494	Identifier	ao		339262	0					
ANR	353495	Identifier	o		339262	1					
ANR	353496	PrimaryExpression	0x10e800c0		339262	1					
ANR	353497	ElseStatement	else		339262	0					
ANR	353498	CompoundStatement		2512:10:54380:54380	339262	0					
ANR	353499	ExpressionStatement	ao -> o = 0x90e900c0	3805:4:80245:80263	339262	0	True				
ANR	353500	AssignmentExpression	ao -> o = 0x90e900c0		339262	0		=			
ANR	353501	PtrMemberAccess	ao -> o		339262	0					
ANR	353502	Identifier	ao		339262	0					
ANR	353503	Identifier	o		339262	1					
ANR	353504	PrimaryExpression	0x90e900c0		339262	1					
ANR	353505	ExpressionStatement	ao -> o |= reg1 << 24	3808:3:80274:80293	339262	3	True				
ANR	353506	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	353507	PtrMemberAccess	ao -> o		339262	0					
ANR	353508	Identifier	ao		339262	0					
ANR	353509	Identifier	o		339262	1					
ANR	353510	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	353511	Identifier	reg1		339262	0					
ANR	353512	PrimaryExpression	24		339262	1					
ANR	353513	ExpressionStatement	ao -> o |= wb	3809:3:80298:80309	339262	4	True				
ANR	353514	AssignmentExpression	ao -> o |= wb		339262	0		|=			
ANR	353515	PtrMemberAccess	ao -> o		339262	0					
ANR	353516	Identifier	ao		339262	0					
ANR	353517	Identifier	o		339262	1					
ANR	353518	Identifier	wb		339262	1					
ANR	353519	ReturnStatement	return 4 ;	3810:3:80314:80322	339262	5	True				
ANR	353520	PrimaryExpression	4		339262	0					
ANR	353521	BreakStatement	break ;	3812:3:80339:80344	339262	4	True				
ANR	353522	Label	default :	3813:2:80348:80355	339262	5	True				
ANR	353523	Identifier	default		339262	0					
ANR	353524	ReturnStatement	return - 1 ;	3814:3:80360:80369	339262	6	True				
ANR	353525	UnaryOperationExpression	- 1		339262	0					
ANR	353526	UnaryOperator	-		339262	0					
ANR	353527	PrimaryExpression	1		339262	1					
ANR	353528	ElseStatement	else		339262	0					
ANR	353529	IfStatement	"if ( ( m = opmask ( ao -> op , ""ror"" , S_BIT ) ) )"		339262	0					
ANR	353530	Condition	"m = opmask ( ao -> op , ""ror"" , S_BIT )"	3817:5:80388:80422	339262	0	True				
ANR	353531	AssignmentExpression	"m = opmask ( ao -> op , ""ror"" , S_BIT )"		339262	0		=			
ANR	353532	Identifier	m		339262	0					
ANR	353533	CallExpression	"opmask ( ao -> op , ""ror"" , S_BIT )"		339262	1					
ANR	353534	Callee	opmask		339262	0					
ANR	353535	Identifier	opmask		339262	0					
ANR	353536	ArgumentList	ao -> op		339262	1					
ANR	353537	Argument	ao -> op		339262	0					
ANR	353538	PtrMemberAccess	ao -> op		339262	0					
ANR	353539	Identifier	ao		339262	0					
ANR	353540	Identifier	op		339262	1					
ANR	353541	Argument	"""ror"""		339262	1					
ANR	353542	PrimaryExpression	"""ror"""		339262	0					
ANR	353543	Argument	S_BIT		339262	2					
ANR	353544	Identifier	S_BIT		339262	0					
ANR	353545	CompoundStatement		2526:2:54570:54604	339262	1					
ANR	353546	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3818:2:80429:80463	339262	0	True				
ANR	353547	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353548	IdentifierDeclType	ut64		339262	0					
ANR	353549	Identifier	argt		339262	1					
ANR	353550	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353551	Identifier	argt		339262	0					
ANR	353552	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353553	Callee	thumb_selector		339262	0					
ANR	353554	Identifier	thumb_selector		339262	0					
ANR	353555	ArgumentList	ao -> a		339262	1					
ANR	353556	Argument	ao -> a		339262	0					
ANR	353557	PtrMemberAccess	ao -> a		339262	0					
ANR	353558	Identifier	ao		339262	0					
ANR	353559	Identifier	a		339262	1					
ANR	353560	SwitchStatement	switch ( argt )		339262	1					
ANR	353561	Condition	argt	3819:10:80475:80478	339262	0	True				
ANR	353562	Identifier	argt		339262	0					
ANR	353563	CompoundStatement		2527:16:54622:54622	339262	1					
ANR	353564	Label	case THUMB_REG_REG_CONST :	3820:2:80485:80509	339262	0	True				
ANR	353565	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	353566	CompoundStatement		2531:3:54723:54751	339262	1					
ANR	353567	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3821:3:80516:80544	339262	0	True				
ANR	353568	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	353569	IdentifierDeclType	ut8		339262	0					
ANR	353570	Identifier	reg1		339262	1					
ANR	353571	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	353572	Identifier	reg1		339262	0					
ANR	353573	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	353574	Callee	getreg		339262	0					
ANR	353575	Identifier	getreg		339262	0					
ANR	353576	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	353577	Argument	ao -> a [ 0 ]		339262	0					
ANR	353578	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	353579	PtrMemberAccess	ao -> a		339262	0					
ANR	353580	Identifier	ao		339262	0					
ANR	353581	Identifier	a		339262	1					
ANR	353582	PrimaryExpression	0		339262	1					
ANR	353583	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3822:3:80549:80577	339262	1	True				
ANR	353584	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	353585	IdentifierDeclType	ut8		339262	0					
ANR	353586	Identifier	reg2		339262	1					
ANR	353587	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	353588	Identifier	reg2		339262	0					
ANR	353589	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	353590	Callee	getreg		339262	0					
ANR	353591	Identifier	getreg		339262	0					
ANR	353592	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	353593	Argument	ao -> a [ 1 ]		339262	0					
ANR	353594	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	353595	PtrMemberAccess	ao -> a		339262	0					
ANR	353596	Identifier	ao		339262	0					
ANR	353597	Identifier	a		339262	1					
ANR	353598	PrimaryExpression	1		339262	1					
ANR	353599	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	3823:3:80582:80610	339262	2	True				
ANR	353600	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	353601	IdentifierDeclType	ut32		339262	0					
ANR	353602	Identifier	num		339262	1					
ANR	353603	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	353604	Identifier	num		339262	0					
ANR	353605	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	353606	Callee	getnum		339262	0					
ANR	353607	Identifier	getnum		339262	0					
ANR	353608	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	353609	Argument	ao -> a [ 2 ]		339262	0					
ANR	353610	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	353611	PtrMemberAccess	ao -> a		339262	0					
ANR	353612	Identifier	ao		339262	0					
ANR	353613	Identifier	a		339262	1					
ANR	353614	PrimaryExpression	2		339262	1					
ANR	353615	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( num < 1 ) )		339262	3					
ANR	353616	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( num < 1 )	3825:7:80620:80672	339262	0	True				
ANR	353617	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( num < 1 )		339262	0		||			
ANR	353618	RelationalExpression	reg1 > 15		339262	0		>			
ANR	353619	Identifier	reg1		339262	0					
ANR	353620	PrimaryExpression	15		339262	1					
ANR	353621	OrExpression	( reg2 > 15 ) || ( num > 31 ) || ( num < 1 )		339262	1		||			
ANR	353622	RelationalExpression	reg2 > 15		339262	0		>			
ANR	353623	Identifier	reg2		339262	0					
ANR	353624	PrimaryExpression	15		339262	1					
ANR	353625	OrExpression	( num > 31 ) || ( num < 1 )		339262	1		||			
ANR	353626	RelationalExpression	num > 31		339262	0		>			
ANR	353627	Identifier	num		339262	0					
ANR	353628	PrimaryExpression	31		339262	1					
ANR	353629	RelationalExpression	num < 1		339262	1		<			
ANR	353630	Identifier	num		339262	0					
ANR	353631	PrimaryExpression	1		339262	1					
ANR	353632	CompoundStatement		2533:62:54816:54816	339262	1					
ANR	353633	ReturnStatement	return - 1 ;	3826:4:80681:80690	339262	0	True				
ANR	353634	UnaryOperationExpression	- 1		339262	0					
ANR	353635	UnaryOperator	-		339262	0					
ANR	353636	PrimaryExpression	1		339262	1					
ANR	353637	ExpressionStatement	ao -> o = 0x4fea3000	3829:3:80701:80719	339262	4	True				
ANR	353638	AssignmentExpression	ao -> o = 0x4fea3000		339262	0		=			
ANR	353639	PtrMemberAccess	ao -> o		339262	0					
ANR	353640	Identifier	ao		339262	0					
ANR	353641	Identifier	o		339262	1					
ANR	353642	PrimaryExpression	0x4fea3000		339262	1					
ANR	353643	ExpressionStatement	ao -> o |= reg1	3830:3:80724:80737	339262	5	True				
ANR	353644	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	353645	PtrMemberAccess	ao -> o		339262	0					
ANR	353646	Identifier	ao		339262	0					
ANR	353647	Identifier	o		339262	1					
ANR	353648	Identifier	reg1		339262	1					
ANR	353649	ExpressionStatement	ao -> o |= reg2 << 8	3831:3:80742:80760	339262	6	True				
ANR	353650	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	353651	PtrMemberAccess	ao -> o		339262	0					
ANR	353652	Identifier	ao		339262	0					
ANR	353653	Identifier	o		339262	1					
ANR	353654	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	353655	Identifier	reg2		339262	0					
ANR	353656	PrimaryExpression	8		339262	1					
ANR	353657	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	3832:3:80765:80791	339262	7	True				
ANR	353658	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	353659	PtrMemberAccess	ao -> o		339262	0					
ANR	353660	Identifier	ao		339262	0					
ANR	353661	Identifier	o		339262	1					
ANR	353662	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	353663	BitAndExpression	num & 0x3		339262	0		&			
ANR	353664	Identifier	num		339262	0					
ANR	353665	PrimaryExpression	0x3		339262	1					
ANR	353666	PrimaryExpression	14		339262	1					
ANR	353667	ExpressionStatement	ao -> o |= ( num & 0x1c ) << 2	3833:3:80796:80822	339262	8	True				
ANR	353668	AssignmentExpression	ao -> o |= ( num & 0x1c ) << 2		339262	0		|=			
ANR	353669	PtrMemberAccess	ao -> o		339262	0					
ANR	353670	Identifier	ao		339262	0					
ANR	353671	Identifier	o		339262	1					
ANR	353672	ShiftExpression	( num & 0x1c ) << 2		339262	1		<<			
ANR	353673	BitAndExpression	num & 0x1c		339262	0		&			
ANR	353674	Identifier	num		339262	0					
ANR	353675	PrimaryExpression	0x1c		339262	1					
ANR	353676	PrimaryExpression	2		339262	1					
ANR	353677	IfStatement	if ( m & S_BIT )		339262	9					
ANR	353678	Condition	m & S_BIT	3834:7:80831:80839	339262	0	True				
ANR	353679	BitAndExpression	m & S_BIT		339262	0		&			
ANR	353680	Identifier	m		339262	0					
ANR	353681	Identifier	S_BIT		339262	1					
ANR	353682	CompoundStatement		2542:18:54983:54983	339262	1					
ANR	353683	ExpressionStatement	ao -> o |= 1 << 28	3835:4:80848:80864	339262	0	True				
ANR	353684	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	353685	PtrMemberAccess	ao -> o		339262	0					
ANR	353686	Identifier	ao		339262	0					
ANR	353687	Identifier	o		339262	1					
ANR	353688	ShiftExpression	1 << 28		339262	1		<<			
ANR	353689	PrimaryExpression	1		339262	0					
ANR	353690	PrimaryExpression	28		339262	1					
ANR	353691	ReturnStatement	return 4 ;	3837:3:80874:80882	339262	10	True				
ANR	353692	PrimaryExpression	4		339262	0					
ANR	353693	BreakStatement	break ;	3839:3:80899:80904	339262	2	True				
ANR	353694	Label	case THUMB_REG_REG :	3840:2:80908:80926	339262	3	True				
ANR	353695	Identifier	THUMB_REG_REG		339262	0					
ANR	353696	CompoundStatement		2548:22:55069:55069	339262	4					
ANR	353697	ExpressionStatement	ao -> o = 0xc041	3841:3:80933:80947	339262	0	True				
ANR	353698	AssignmentExpression	ao -> o = 0xc041		339262	0		=			
ANR	353699	PtrMemberAccess	ao -> o		339262	0					
ANR	353700	Identifier	ao		339262	0					
ANR	353701	Identifier	o		339262	1					
ANR	353702	PrimaryExpression	0xc041		339262	1					
ANR	353703	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	353704	Condition	"std_16bit_2reg ( ao , m )"	3842:7:80956:80977	339262	0	True				
ANR	353705	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	353706	Callee	std_16bit_2reg		339262	0					
ANR	353707	Identifier	std_16bit_2reg		339262	0					
ANR	353708	ArgumentList	ao		339262	1					
ANR	353709	Argument	ao		339262	0					
ANR	353710	Identifier	ao		339262	0					
ANR	353711	Argument	m		339262	1					
ANR	353712	Identifier	m		339262	0					
ANR	353713	CompoundStatement		2550:31:55121:55121	339262	1					
ANR	353714	ReturnStatement	return 2 ;	3843:4:80986:80994	339262	0	True				
ANR	353715	PrimaryExpression	2		339262	0					
ANR	353716	ExpressionStatement	std_opt_2 ( ao )	3845:3:81004:81018	339262	2	True				
ANR	353717	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	353718	Callee	std_opt_2		339262	0					
ANR	353719	Identifier	std_opt_2		339262	0					
ANR	353720	ArgumentList	ao		339262	1					
ANR	353721	Argument	ao		339262	0					
ANR	353722	Identifier	ao		339262	0					
ANR	353723	Label	case THUMB_REG_REG_REG :	3848:2:81064:81086	339262	5	True				
ANR	353724	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	353725	CompoundStatement		2556:26:55229:55229	339262	6					
ANR	353726	ExpressionStatement	ao -> o = 0x60fa00f0	3849:3:81093:81111	339262	0	True				
ANR	353727	AssignmentExpression	ao -> o = 0x60fa00f0		339262	0		=			
ANR	353728	PtrMemberAccess	ao -> o		339262	0					
ANR	353729	Identifier	ao		339262	0					
ANR	353730	Identifier	o		339262	1					
ANR	353731	PrimaryExpression	0x60fa00f0		339262	1					
ANR	353732	ReturnStatement	"return ( std_32bit_3reg ( ao , m , false ) ) ;"	3850:3:81116:81154	339262	1	True				
ANR	353733	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	353734	Callee	std_32bit_3reg		339262	0					
ANR	353735	Identifier	std_32bit_3reg		339262	0					
ANR	353736	ArgumentList	ao		339262	1					
ANR	353737	Argument	ao		339262	0					
ANR	353738	Identifier	ao		339262	0					
ANR	353739	Argument	m		339262	1					
ANR	353740	Identifier	m		339262	0					
ANR	353741	Argument	false		339262	2					
ANR	353742	Identifier	false		339262	0					
ANR	353743	BreakStatement	break ;	3852:3:81171:81176	339262	7	True				
ANR	353744	Label	default :	3853:2:81180:81187	339262	8	True				
ANR	353745	Identifier	default		339262	0					
ANR	353746	ReturnStatement	return - 1 ;	3854:3:81192:81201	339262	9	True				
ANR	353747	UnaryOperationExpression	- 1		339262	0					
ANR	353748	UnaryOperator	-		339262	0					
ANR	353749	PrimaryExpression	1		339262	1					
ANR	353750	ElseStatement	else		339262	0					
ANR	353751	IfStatement	"if ( ( m = opmask ( ao -> op , ""rrx"" , S_BIT ) ) )"		339262	0					
ANR	353752	Condition	"m = opmask ( ao -> op , ""rrx"" , S_BIT )"	3857:5:81220:81254	339262	0	True				
ANR	353753	AssignmentExpression	"m = opmask ( ao -> op , ""rrx"" , S_BIT )"		339262	0		=			
ANR	353754	Identifier	m		339262	0					
ANR	353755	CallExpression	"opmask ( ao -> op , ""rrx"" , S_BIT )"		339262	1					
ANR	353756	Callee	opmask		339262	0					
ANR	353757	Identifier	opmask		339262	0					
ANR	353758	ArgumentList	ao -> op		339262	1					
ANR	353759	Argument	ao -> op		339262	0					
ANR	353760	PtrMemberAccess	ao -> op		339262	0					
ANR	353761	Identifier	ao		339262	0					
ANR	353762	Identifier	op		339262	1					
ANR	353763	Argument	"""rrx"""		339262	1					
ANR	353764	PrimaryExpression	"""rrx"""		339262	0					
ANR	353765	Argument	S_BIT		339262	2					
ANR	353766	Identifier	S_BIT		339262	0					
ANR	353767	CompoundStatement		2566:2:55402:55436	339262	1					
ANR	353768	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3858:2:81261:81295	339262	0	True				
ANR	353769	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353770	IdentifierDeclType	ut64		339262	0					
ANR	353771	Identifier	argt		339262	1					
ANR	353772	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353773	Identifier	argt		339262	0					
ANR	353774	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353775	Callee	thumb_selector		339262	0					
ANR	353776	Identifier	thumb_selector		339262	0					
ANR	353777	ArgumentList	ao -> a		339262	1					
ANR	353778	Argument	ao -> a		339262	0					
ANR	353779	PtrMemberAccess	ao -> a		339262	0					
ANR	353780	Identifier	ao		339262	0					
ANR	353781	Identifier	a		339262	1					
ANR	353782	SwitchStatement	switch ( argt )		339262	1					
ANR	353783	Condition	argt	3859:10:81307:81310	339262	0	True				
ANR	353784	Identifier	argt		339262	0					
ANR	353785	CompoundStatement		2567:16:55454:55454	339262	1					
ANR	353786	Label	case THUMB_REG_REG :	3860:2:81317:81335	339262	0	True				
ANR	353787	Identifier	THUMB_REG_REG		339262	0					
ANR	353788	CompoundStatement		2570:3:55516:55544	339262	1					
ANR	353789	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3861:3:81342:81370	339262	0	True				
ANR	353790	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	353791	IdentifierDeclType	ut8		339262	0					
ANR	353792	Identifier	reg1		339262	1					
ANR	353793	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	353794	Identifier	reg1		339262	0					
ANR	353795	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	353796	Callee	getreg		339262	0					
ANR	353797	Identifier	getreg		339262	0					
ANR	353798	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	353799	Argument	ao -> a [ 0 ]		339262	0					
ANR	353800	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	353801	PtrMemberAccess	ao -> a		339262	0					
ANR	353802	Identifier	ao		339262	0					
ANR	353803	Identifier	a		339262	1					
ANR	353804	PrimaryExpression	0		339262	1					
ANR	353805	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3862:3:81375:81403	339262	1	True				
ANR	353806	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	353807	IdentifierDeclType	ut8		339262	0					
ANR	353808	Identifier	reg2		339262	1					
ANR	353809	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	353810	Identifier	reg2		339262	0					
ANR	353811	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	353812	Callee	getreg		339262	0					
ANR	353813	Identifier	getreg		339262	0					
ANR	353814	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	353815	Argument	ao -> a [ 1 ]		339262	0					
ANR	353816	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	353817	PtrMemberAccess	ao -> a		339262	0					
ANR	353818	Identifier	ao		339262	0					
ANR	353819	Identifier	a		339262	1					
ANR	353820	PrimaryExpression	1		339262	1					
ANR	353821	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		339262	2					
ANR	353822	Condition	( reg1 > 15 ) || ( reg2 > 15 )	3864:7:81416:81441	339262	0	True				
ANR	353823	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	353824	RelationalExpression	reg1 > 15		339262	0		>			
ANR	353825	Identifier	reg1		339262	0					
ANR	353826	PrimaryExpression	15		339262	1					
ANR	353827	RelationalExpression	reg2 > 15		339262	1		>			
ANR	353828	Identifier	reg2		339262	0					
ANR	353829	PrimaryExpression	15		339262	1					
ANR	353830	CompoundStatement		2572:35:55585:55585	339262	1					
ANR	353831	ReturnStatement	return - 1 ;	3865:4:81450:81459	339262	0	True				
ANR	353832	UnaryOperationExpression	- 1		339262	0					
ANR	353833	UnaryOperator	-		339262	0					
ANR	353834	PrimaryExpression	1		339262	1					
ANR	353835	ExpressionStatement	ao -> o = 0x4fea3000	3868:3:81473:81491	339262	3	True				
ANR	353836	AssignmentExpression	ao -> o = 0x4fea3000		339262	0		=			
ANR	353837	PtrMemberAccess	ao -> o		339262	0					
ANR	353838	Identifier	ao		339262	0					
ANR	353839	Identifier	o		339262	1					
ANR	353840	PrimaryExpression	0x4fea3000		339262	1					
ANR	353841	ExpressionStatement	ao -> o |= reg1	3869:3:81496:81509	339262	4	True				
ANR	353842	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	353843	PtrMemberAccess	ao -> o		339262	0					
ANR	353844	Identifier	ao		339262	0					
ANR	353845	Identifier	o		339262	1					
ANR	353846	Identifier	reg1		339262	1					
ANR	353847	ExpressionStatement	ao -> o |= reg2 << 8	3870:3:81514:81532	339262	5	True				
ANR	353848	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	353849	PtrMemberAccess	ao -> o		339262	0					
ANR	353850	Identifier	ao		339262	0					
ANR	353851	Identifier	o		339262	1					
ANR	353852	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	353853	Identifier	reg2		339262	0					
ANR	353854	PrimaryExpression	8		339262	1					
ANR	353855	IfStatement	if ( m & S_BIT )		339262	6					
ANR	353856	Condition	m & S_BIT	3871:7:81541:81549	339262	0	True				
ANR	353857	BitAndExpression	m & S_BIT		339262	0		&			
ANR	353858	Identifier	m		339262	0					
ANR	353859	Identifier	S_BIT		339262	1					
ANR	353860	CompoundStatement		2579:18:55693:55693	339262	1					
ANR	353861	ExpressionStatement	ao -> o |= 1 << 28	3872:4:81558:81574	339262	0	True				
ANR	353862	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	353863	PtrMemberAccess	ao -> o		339262	0					
ANR	353864	Identifier	ao		339262	0					
ANR	353865	Identifier	o		339262	1					
ANR	353866	ShiftExpression	1 << 28		339262	1		<<			
ANR	353867	PrimaryExpression	1		339262	0					
ANR	353868	PrimaryExpression	28		339262	1					
ANR	353869	ReturnStatement	return 4 ;	3874:3:81584:81592	339262	7	True				
ANR	353870	PrimaryExpression	4		339262	0					
ANR	353871	BreakStatement	break ;	3876:3:81609:81614	339262	2	True				
ANR	353872	Label	default :	3877:2:81618:81625	339262	3	True				
ANR	353873	Identifier	default		339262	0					
ANR	353874	ReturnStatement	return - 1 ;	3878:3:81630:81639	339262	4	True				
ANR	353875	UnaryOperationExpression	- 1		339262	0					
ANR	353876	UnaryOperator	-		339262	0					
ANR	353877	PrimaryExpression	1		339262	1					
ANR	353878	ElseStatement	else		339262	0					
ANR	353879	IfStatement	"if ( ( m = opmask ( ao -> op , ""rsb"" , S_BIT ) ) )"		339262	0					
ANR	353880	Condition	"m = opmask ( ao -> op , ""rsb"" , S_BIT )"	3881:5:81658:81692	339262	0	True				
ANR	353881	AssignmentExpression	"m = opmask ( ao -> op , ""rsb"" , S_BIT )"		339262	0		=			
ANR	353882	Identifier	m		339262	0					
ANR	353883	CallExpression	"opmask ( ao -> op , ""rsb"" , S_BIT )"		339262	1					
ANR	353884	Callee	opmask		339262	0					
ANR	353885	Identifier	opmask		339262	0					
ANR	353886	ArgumentList	ao -> op		339262	1					
ANR	353887	Argument	ao -> op		339262	0					
ANR	353888	PtrMemberAccess	ao -> op		339262	0					
ANR	353889	Identifier	ao		339262	0					
ANR	353890	Identifier	op		339262	1					
ANR	353891	Argument	"""rsb"""		339262	1					
ANR	353892	PrimaryExpression	"""rsb"""		339262	0					
ANR	353893	Argument	S_BIT		339262	2					
ANR	353894	Identifier	S_BIT		339262	0					
ANR	353895	CompoundStatement		2590:2:55840:55874	339262	1					
ANR	353896	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3882:2:81699:81733	339262	0	True				
ANR	353897	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	353898	IdentifierDeclType	ut64		339262	0					
ANR	353899	Identifier	argt		339262	1					
ANR	353900	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	353901	Identifier	argt		339262	0					
ANR	353902	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	353903	Callee	thumb_selector		339262	0					
ANR	353904	Identifier	thumb_selector		339262	0					
ANR	353905	ArgumentList	ao -> a		339262	1					
ANR	353906	Argument	ao -> a		339262	0					
ANR	353907	PtrMemberAccess	ao -> a		339262	0					
ANR	353908	Identifier	ao		339262	0					
ANR	353909	Identifier	a		339262	1					
ANR	353910	SwitchStatement	switch ( argt )		339262	1					
ANR	353911	Condition	argt	3883:10:81745:81748	339262	0	True				
ANR	353912	Identifier	argt		339262	0					
ANR	353913	CompoundStatement		2591:16:55892:55892	339262	1					
ANR	353914	Label	case THUMB_REG_CONST :	3884:2:81755:81775	339262	0	True				
ANR	353915	Identifier	THUMB_REG_CONST		339262	0					
ANR	353916	CompoundStatement		2592:24:55918:55918	339262	1					
ANR	353917	ExpressionStatement	std_opt_2 ( ao )	3885:3:81782:81796	339262	0	True				
ANR	353918	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	353919	Callee	std_opt_2		339262	0					
ANR	353920	Identifier	std_opt_2		339262	0					
ANR	353921	ArgumentList	ao		339262	1					
ANR	353922	Argument	ao		339262	0					
ANR	353923	Identifier	ao		339262	0					
ANR	353924	Label	case THUMB_REG_REG_CONST :	3888:2:81842:81866	339262	2	True				
ANR	353925	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	353926	CompoundStatement		2598:3:56030:56064	339262	3					
ANR	353927	ExpressionStatement	err = false	3889:3:81873:81884	339262	0	True				
ANR	353928	AssignmentExpression	err = false		339262	0		=			
ANR	353929	Identifier	err		339262	0					
ANR	353930	Identifier	false		339262	1					
ANR	353931	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	3890:3:81889:81923	339262	1	True				
ANR	353932	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	353933	IdentifierDeclType	ut32		339262	0					
ANR	353934	Identifier	num		339262	1					
ANR	353935	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	353936	Identifier	num		339262	0					
ANR	353937	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	353938	Callee	getthimmed12		339262	0					
ANR	353939	Identifier	getthimmed12		339262	0					
ANR	353940	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	353941	Argument	ao -> a [ 2 ]		339262	0					
ANR	353942	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	353943	PtrMemberAccess	ao -> a		339262	0					
ANR	353944	Identifier	ao		339262	0					
ANR	353945	Identifier	a		339262	1					
ANR	353946	PrimaryExpression	2		339262	1					
ANR	353947	IfStatement	if ( err )		339262	2					
ANR	353948	Condition	err	3892:7:81933:81935	339262	0	True				
ANR	353949	Identifier	err		339262	0					
ANR	353950	CompoundStatement		2600:12:56079:56079	339262	1					
ANR	353951	ReturnStatement	return - 1 ;	3893:4:81944:81953	339262	0	True				
ANR	353952	UnaryOperationExpression	- 1		339262	0					
ANR	353953	UnaryOperator	-		339262	0					
ANR	353954	PrimaryExpression	1		339262	1					
ANR	353955	ExpressionStatement	ao -> o = 0x4042	3896:3:81964:81978	339262	3	True				
ANR	353956	AssignmentExpression	ao -> o = 0x4042		339262	0		=			
ANR	353957	PtrMemberAccess	ao -> o		339262	0					
ANR	353958	Identifier	ao		339262	0					
ANR	353959	Identifier	o		339262	1					
ANR	353960	PrimaryExpression	0x4042		339262	1					
ANR	353961	IfStatement	"if ( ( num == 0 ) && std_16bit_2reg ( ao , m ) )"		339262	4					
ANR	353962	Condition	"( num == 0 ) && std_16bit_2reg ( ao , m )"	3897:7:81987:82022	339262	0	True				
ANR	353963	AndExpression	"( num == 0 ) && std_16bit_2reg ( ao , m )"		339262	0		&&			
ANR	353964	EqualityExpression	num == 0		339262	0		==			
ANR	353965	Identifier	num		339262	0					
ANR	353966	PrimaryExpression	0		339262	1					
ANR	353967	CallExpression	"std_16bit_2reg ( ao , m )"		339262	1					
ANR	353968	Callee	std_16bit_2reg		339262	0					
ANR	353969	Identifier	std_16bit_2reg		339262	0					
ANR	353970	ArgumentList	ao		339262	1					
ANR	353971	Argument	ao		339262	0					
ANR	353972	Identifier	ao		339262	0					
ANR	353973	Argument	m		339262	1					
ANR	353974	Identifier	m		339262	0					
ANR	353975	CompoundStatement		2605:45:56166:56166	339262	1					
ANR	353976	ReturnStatement	return 2 ;	3898:4:82031:82039	339262	0	True				
ANR	353977	PrimaryExpression	2		339262	0					
ANR	353978	ExpressionStatement	ao -> o = 0xc0f10000	3901:3:82050:82068	339262	5	True				
ANR	353979	AssignmentExpression	ao -> o = 0xc0f10000		339262	0		=			
ANR	353980	PtrMemberAccess	ao -> o		339262	0					
ANR	353981	Identifier	ao		339262	0					
ANR	353982	Identifier	o		339262	1					
ANR	353983	PrimaryExpression	0xc0f10000		339262	1					
ANR	353984	ExpressionStatement	ao -> o |= num	3902:3:82073:82085	339262	6	True				
ANR	353985	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	353986	PtrMemberAccess	ao -> o		339262	0					
ANR	353987	Identifier	ao		339262	0					
ANR	353988	Identifier	o		339262	1					
ANR	353989	Identifier	num		339262	1					
ANR	353990	ReturnStatement	"return ( std_32bit_2reg ( ao , m , false ) ) ;"	3903:3:82090:82128	339262	7	True				
ANR	353991	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	353992	Callee	std_32bit_2reg		339262	0					
ANR	353993	Identifier	std_32bit_2reg		339262	0					
ANR	353994	ArgumentList	ao		339262	1					
ANR	353995	Argument	ao		339262	0					
ANR	353996	Identifier	ao		339262	0					
ANR	353997	Argument	m		339262	1					
ANR	353998	Identifier	m		339262	0					
ANR	353999	Argument	false		339262	2					
ANR	354000	Identifier	false		339262	0					
ANR	354001	BreakStatement	break ;	3905:3:82145:82150	339262	4	True				
ANR	354002	Label	case THUMB_REG_REG :	3906:2:82154:82172	339262	5	True				
ANR	354003	Identifier	THUMB_REG_REG		339262	0					
ANR	354004	CompoundStatement		2614:22:56315:56315	339262	6					
ANR	354005	ExpressionStatement	std_opt_2 ( ao )	3907:3:82179:82193	339262	0	True				
ANR	354006	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354007	Callee	std_opt_2		339262	0					
ANR	354008	Identifier	std_opt_2		339262	0					
ANR	354009	ArgumentList	ao		339262	1					
ANR	354010	Argument	ao		339262	0					
ANR	354011	Identifier	ao		339262	0					
ANR	354012	Label	case THUMB_REG_REG_REG :	3910:2:82239:82261	339262	7	True				
ANR	354013	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354014	CompoundStatement		2618:26:56404:56404	339262	8					
ANR	354015	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3911:3:82268:82286	339262	0	True				
ANR	354016	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	354017	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	354018	PtrMemberAccess	ao -> a		339262	0					
ANR	354019	Identifier	ao		339262	0					
ANR	354020	Identifier	a		339262	1					
ANR	354021	PrimaryExpression	3		339262	1					
ANR	354022	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	354023	Label	case THUMB_REG_REG_SHIFT :	3914:2:82332:82356	339262	9	True				
ANR	354024	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	354025	CompoundStatement		2622:28:56499:56499	339262	10					
ANR	354026	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	354027	Condition	ao -> a [ 3 ] == NULL	3915:7:82367:82382	339262	0	True				
ANR	354028	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	354029	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	354030	PtrMemberAccess	ao -> a		339262	0					
ANR	354031	Identifier	ao		339262	0					
ANR	354032	Identifier	a		339262	1					
ANR	354033	PrimaryExpression	3		339262	1					
ANR	354034	Identifier	NULL		339262	1					
ANR	354035	CompoundStatement		2623:25:56526:56526	339262	1					
ANR	354036	ExpressionStatement	std_opt_3 ( ao )	3916:4:82413:82427	339262	0	True				
ANR	354037	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	354038	Callee	std_opt_3		339262	0					
ANR	354039	Identifier	std_opt_3		339262	0					
ANR	354040	ArgumentList	ao		339262	1					
ANR	354041	Argument	ao		339262	0					
ANR	354042	Identifier	ao		339262	0					
ANR	354043	Label	case THUMB_REG_REG_REG_SHIFT :	3920:2:82478:82506	339262	11	True				
ANR	354044	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	354045	CompoundStatement		2628:32:56649:56649	339262	12					
ANR	354046	ExpressionStatement	ao -> o = 0xc0eb0000	3921:3:82513:82531	339262	0	True				
ANR	354047	AssignmentExpression	ao -> o = 0xc0eb0000		339262	0		=			
ANR	354048	PtrMemberAccess	ao -> o		339262	0					
ANR	354049	Identifier	ao		339262	0					
ANR	354050	Identifier	o		339262	1					
ANR	354051	PrimaryExpression	0xc0eb0000		339262	1					
ANR	354052	ReturnStatement	"return ( std_32bit_3reg ( ao , m , true ) ) ;"	3922:3:82536:82573	339262	1	True				
ANR	354053	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	354054	Callee	std_32bit_3reg		339262	0					
ANR	354055	Identifier	std_32bit_3reg		339262	0					
ANR	354056	ArgumentList	ao		339262	1					
ANR	354057	Argument	ao		339262	0					
ANR	354058	Identifier	ao		339262	0					
ANR	354059	Argument	m		339262	1					
ANR	354060	Identifier	m		339262	0					
ANR	354061	Argument	true		339262	2					
ANR	354062	Identifier	true		339262	0					
ANR	354063	BreakStatement	break ;	3924:3:82590:82595	339262	13	True				
ANR	354064	Label	default :	3925:2:82599:82606	339262	14	True				
ANR	354065	Identifier	default		339262	0					
ANR	354066	ReturnStatement	return - 1 ;	3926:3:82611:82620	339262	15	True				
ANR	354067	UnaryOperationExpression	- 1		339262	0					
ANR	354068	UnaryOperator	-		339262	0					
ANR	354069	PrimaryExpression	1		339262	1					
ANR	354070	ElseStatement	else		339262	0					
ANR	354071	IfStatement	"if ( ( m = opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	354072	Condition	"m = opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT )"	3929:5:82639:82692	339262	0	True				
ANR	354073	AssignmentExpression	"m = opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	354074	Identifier	m		339262	0					
ANR	354075	CallExpression	"opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	354076	Callee	opmask		339262	0					
ANR	354077	Identifier	opmask		339262	0					
ANR	354078	ArgumentList	ao -> op		339262	1					
ANR	354079	Argument	ao -> op		339262	0					
ANR	354080	PtrMemberAccess	ao -> op		339262	0					
ANR	354081	Identifier	ao		339262	0					
ANR	354082	Identifier	op		339262	1					
ANR	354083	Argument	"""sadd"""		339262	1					
ANR	354084	PrimaryExpression	"""sadd"""		339262	0					
ANR	354085	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	354086	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	354087	Identifier	EIGHT_BIT		339262	0					
ANR	354088	Identifier	SIXTEEN_BIT		339262	1					
ANR	354089	CompoundStatement		2638:2:56840:56874	339262	1					
ANR	354090	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3930:2:82699:82733	339262	0	True				
ANR	354091	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354092	IdentifierDeclType	ut64		339262	0					
ANR	354093	Identifier	argt		339262	1					
ANR	354094	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354095	Identifier	argt		339262	0					
ANR	354096	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354097	Callee	thumb_selector		339262	0					
ANR	354098	Identifier	thumb_selector		339262	0					
ANR	354099	ArgumentList	ao -> a		339262	1					
ANR	354100	Argument	ao -> a		339262	0					
ANR	354101	PtrMemberAccess	ao -> a		339262	0					
ANR	354102	Identifier	ao		339262	0					
ANR	354103	Identifier	a		339262	1					
ANR	354104	SwitchStatement	switch ( argt )		339262	1					
ANR	354105	Condition	argt	3931:10:82745:82748	339262	0	True				
ANR	354106	Identifier	argt		339262	0					
ANR	354107	CompoundStatement		2639:16:56892:56892	339262	1					
ANR	354108	Label	case THUMB_REG_REG :	3932:2:82755:82773	339262	0	True				
ANR	354109	Identifier	THUMB_REG_REG		339262	0					
ANR	354110	CompoundStatement		2640:22:56916:56916	339262	1					
ANR	354111	ExpressionStatement	std_opt_2 ( ao )	3933:3:82780:82794	339262	0	True				
ANR	354112	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354113	Callee	std_opt_2		339262	0					
ANR	354114	Identifier	std_opt_2		339262	0					
ANR	354115	ArgumentList	ao		339262	1					
ANR	354116	Argument	ao		339262	0					
ANR	354117	Identifier	ao		339262	0					
ANR	354118	Label	case THUMB_REG_REG_REG :	3936:2:82840:82862	339262	2	True				
ANR	354119	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354120	CompoundStatement		2644:26:57005:57005	339262	3					
ANR	354121	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	354122	Condition	m & SIXTEEN_BIT	3937:7:82873:82887	339262	0	True				
ANR	354123	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	354124	Identifier	m		339262	0					
ANR	354125	Identifier	SIXTEEN_BIT		339262	1					
ANR	354126	CompoundStatement		2645:24:57031:57031	339262	1					
ANR	354127	ExpressionStatement	ao -> o = 0x90fa00f0	3938:4:82896:82914	339262	0	True				
ANR	354128	AssignmentExpression	ao -> o = 0x90fa00f0		339262	0		=			
ANR	354129	PtrMemberAccess	ao -> o		339262	0					
ANR	354130	Identifier	ao		339262	0					
ANR	354131	Identifier	o		339262	1					
ANR	354132	PrimaryExpression	0x90fa00f0		339262	1					
ANR	354133	ElseStatement	else		339262	0					
ANR	354134	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	354135	Condition	m & EIGHT_BIT	3940:7:82933:82945	339262	0	True				
ANR	354136	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	354137	Identifier	m		339262	0					
ANR	354138	Identifier	EIGHT_BIT		339262	1					
ANR	354139	CompoundStatement		2648:22:57089:57089	339262	1					
ANR	354140	ExpressionStatement	ao -> o = 0x80fa00f0	3941:4:82954:82972	339262	0	True				
ANR	354141	AssignmentExpression	ao -> o = 0x80fa00f0		339262	0		=			
ANR	354142	PtrMemberAccess	ao -> o		339262	0					
ANR	354143	Identifier	ao		339262	0					
ANR	354144	Identifier	o		339262	1					
ANR	354145	PrimaryExpression	0x80fa00f0		339262	1					
ANR	354146	ElseStatement	else		339262	0					
ANR	354147	CompoundStatement		2650:10:57125:57125	339262	0					
ANR	354148	ReturnStatement	return - 1 ;	3943:4:82990:82999	339262	0	True				
ANR	354149	UnaryOperationExpression	- 1		339262	0					
ANR	354150	UnaryOperator	-		339262	0					
ANR	354151	PrimaryExpression	1		339262	1					
ANR	354152	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3945:3:83009:83045	339262	1	True				
ANR	354153	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	354154	Callee	std_32bit_3reg		339262	0					
ANR	354155	Identifier	std_32bit_3reg		339262	0					
ANR	354156	ArgumentList	ao		339262	1					
ANR	354157	Argument	ao		339262	0					
ANR	354158	Identifier	ao		339262	0					
ANR	354159	Argument	m		339262	1					
ANR	354160	Identifier	m		339262	0					
ANR	354161	Argument	false		339262	2					
ANR	354162	Identifier	false		339262	0					
ANR	354163	BreakStatement	break ;	3947:3:83062:83067	339262	4	True				
ANR	354164	Label	default :	3948:2:83071:83078	339262	5	True				
ANR	354165	Identifier	default		339262	0					
ANR	354166	ReturnStatement	return - 1 ;	3949:3:83083:83092	339262	6	True				
ANR	354167	UnaryOperationExpression	- 1		339262	0					
ANR	354168	UnaryOperator	-		339262	0					
ANR	354169	PrimaryExpression	1		339262	1					
ANR	354170	ElseStatement	else		339262	0					
ANR	354171	IfStatement	"if ( ( m = opmask ( ao -> op , ""sasx"" , 0 ) ) )"		339262	0					
ANR	354172	Condition	"m = opmask ( ao -> op , ""sasx"" , 0 )"	3952:5:83111:83142	339262	0	True				
ANR	354173	AssignmentExpression	"m = opmask ( ao -> op , ""sasx"" , 0 )"		339262	0		=			
ANR	354174	Identifier	m		339262	0					
ANR	354175	CallExpression	"opmask ( ao -> op , ""sasx"" , 0 )"		339262	1					
ANR	354176	Callee	opmask		339262	0					
ANR	354177	Identifier	opmask		339262	0					
ANR	354178	ArgumentList	ao -> op		339262	1					
ANR	354179	Argument	ao -> op		339262	0					
ANR	354180	PtrMemberAccess	ao -> op		339262	0					
ANR	354181	Identifier	ao		339262	0					
ANR	354182	Identifier	op		339262	1					
ANR	354183	Argument	"""sasx"""		339262	1					
ANR	354184	PrimaryExpression	"""sasx"""		339262	0					
ANR	354185	Argument	0		339262	2					
ANR	354186	PrimaryExpression	0		339262	0					
ANR	354187	CompoundStatement		2661:2:57290:57324	339262	1					
ANR	354188	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3953:2:83149:83183	339262	0	True				
ANR	354189	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354190	IdentifierDeclType	ut64		339262	0					
ANR	354191	Identifier	argt		339262	1					
ANR	354192	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354193	Identifier	argt		339262	0					
ANR	354194	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354195	Callee	thumb_selector		339262	0					
ANR	354196	Identifier	thumb_selector		339262	0					
ANR	354197	ArgumentList	ao -> a		339262	1					
ANR	354198	Argument	ao -> a		339262	0					
ANR	354199	PtrMemberAccess	ao -> a		339262	0					
ANR	354200	Identifier	ao		339262	0					
ANR	354201	Identifier	a		339262	1					
ANR	354202	SwitchStatement	switch ( argt )		339262	1					
ANR	354203	Condition	argt	3954:10:83195:83198	339262	0	True				
ANR	354204	Identifier	argt		339262	0					
ANR	354205	CompoundStatement		2662:16:57342:57342	339262	1					
ANR	354206	Label	case THUMB_REG_REG :	3955:2:83205:83223	339262	0	True				
ANR	354207	Identifier	THUMB_REG_REG		339262	0					
ANR	354208	CompoundStatement		2663:22:57366:57366	339262	1					
ANR	354209	ExpressionStatement	std_opt_2 ( ao )	3956:3:83230:83244	339262	0	True				
ANR	354210	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354211	Callee	std_opt_2		339262	0					
ANR	354212	Identifier	std_opt_2		339262	0					
ANR	354213	ArgumentList	ao		339262	1					
ANR	354214	Argument	ao		339262	0					
ANR	354215	Identifier	ao		339262	0					
ANR	354216	Label	case THUMB_REG_REG_REG :	3959:2:83290:83312	339262	2	True				
ANR	354217	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354218	CompoundStatement		2667:26:57455:57455	339262	3					
ANR	354219	ExpressionStatement	ao -> o = 0xa0fa00f0	3960:3:83319:83337	339262	0	True				
ANR	354220	AssignmentExpression	ao -> o = 0xa0fa00f0		339262	0		=			
ANR	354221	PtrMemberAccess	ao -> o		339262	0					
ANR	354222	Identifier	ao		339262	0					
ANR	354223	Identifier	o		339262	1					
ANR	354224	PrimaryExpression	0xa0fa00f0		339262	1					
ANR	354225	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3961:3:83342:83378	339262	1	True				
ANR	354226	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	354227	Callee	std_32bit_3reg		339262	0					
ANR	354228	Identifier	std_32bit_3reg		339262	0					
ANR	354229	ArgumentList	ao		339262	1					
ANR	354230	Argument	ao		339262	0					
ANR	354231	Identifier	ao		339262	0					
ANR	354232	Argument	m		339262	1					
ANR	354233	Identifier	m		339262	0					
ANR	354234	Argument	false		339262	2					
ANR	354235	Identifier	false		339262	0					
ANR	354236	BreakStatement	break ;	3963:3:83395:83400	339262	4	True				
ANR	354237	Label	default :	3964:2:83404:83411	339262	5	True				
ANR	354238	Identifier	default		339262	0					
ANR	354239	ReturnStatement	return - 1 ;	3965:3:83416:83425	339262	6	True				
ANR	354240	UnaryOperationExpression	- 1		339262	0					
ANR	354241	UnaryOperator	-		339262	0					
ANR	354242	PrimaryExpression	1		339262	1					
ANR	354243	ElseStatement	else		339262	0					
ANR	354244	IfStatement	"if ( ( m = opmask ( ao -> op , ""sbc"" , S_BIT ) ) )"		339262	0					
ANR	354245	Condition	"m = opmask ( ao -> op , ""sbc"" , S_BIT )"	3968:5:83444:83478	339262	0	True				
ANR	354246	AssignmentExpression	"m = opmask ( ao -> op , ""sbc"" , S_BIT )"		339262	0		=			
ANR	354247	Identifier	m		339262	0					
ANR	354248	CallExpression	"opmask ( ao -> op , ""sbc"" , S_BIT )"		339262	1					
ANR	354249	Callee	opmask		339262	0					
ANR	354250	Identifier	opmask		339262	0					
ANR	354251	ArgumentList	ao -> op		339262	1					
ANR	354252	Argument	ao -> op		339262	0					
ANR	354253	PtrMemberAccess	ao -> op		339262	0					
ANR	354254	Identifier	ao		339262	0					
ANR	354255	Identifier	op		339262	1					
ANR	354256	Argument	"""sbc"""		339262	1					
ANR	354257	PrimaryExpression	"""sbc"""		339262	0					
ANR	354258	Argument	S_BIT		339262	2					
ANR	354259	Identifier	S_BIT		339262	0					
ANR	354260	CompoundStatement		2677:2:57626:57660	339262	1					
ANR	354261	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3969:2:83485:83519	339262	0	True				
ANR	354262	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354263	IdentifierDeclType	ut64		339262	0					
ANR	354264	Identifier	argt		339262	1					
ANR	354265	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354266	Identifier	argt		339262	0					
ANR	354267	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354268	Callee	thumb_selector		339262	0					
ANR	354269	Identifier	thumb_selector		339262	0					
ANR	354270	ArgumentList	ao -> a		339262	1					
ANR	354271	Argument	ao -> a		339262	0					
ANR	354272	PtrMemberAccess	ao -> a		339262	0					
ANR	354273	Identifier	ao		339262	0					
ANR	354274	Identifier	a		339262	1					
ANR	354275	SwitchStatement	switch ( argt )		339262	1					
ANR	354276	Condition	argt	3970:10:83531:83534	339262	0	True				
ANR	354277	Identifier	argt		339262	0					
ANR	354278	CompoundStatement		2678:16:57678:57678	339262	1					
ANR	354279	Label	case THUMB_REG_REG :	3971:2:83541:83559	339262	0	True				
ANR	354280	Identifier	THUMB_REG_REG		339262	0					
ANR	354281	CompoundStatement		2679:22:57702:57702	339262	1					
ANR	354282	ExpressionStatement	ao -> o = 0x8041	3972:3:83566:83580	339262	0	True				
ANR	354283	AssignmentExpression	ao -> o = 0x8041		339262	0		=			
ANR	354284	PtrMemberAccess	ao -> o		339262	0					
ANR	354285	Identifier	ao		339262	0					
ANR	354286	Identifier	o		339262	1					
ANR	354287	PrimaryExpression	0x8041		339262	1					
ANR	354288	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	354289	Condition	"std_16bit_2reg ( ao , m )"	3973:7:83589:83610	339262	0	True				
ANR	354290	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	354291	Callee	std_16bit_2reg		339262	0					
ANR	354292	Identifier	std_16bit_2reg		339262	0					
ANR	354293	ArgumentList	ao		339262	1					
ANR	354294	Argument	ao		339262	0					
ANR	354295	Identifier	ao		339262	0					
ANR	354296	Argument	m		339262	1					
ANR	354297	Identifier	m		339262	0					
ANR	354298	CompoundStatement		2681:31:57754:57754	339262	1					
ANR	354299	ReturnStatement	return 2 ;	3974:4:83619:83627	339262	0	True				
ANR	354300	PrimaryExpression	2		339262	0					
ANR	354301	ExpressionStatement	std_opt_2 ( ao )	3976:3:83637:83651	339262	2	True				
ANR	354302	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354303	Callee	std_opt_2		339262	0					
ANR	354304	Identifier	std_opt_2		339262	0					
ANR	354305	ArgumentList	ao		339262	1					
ANR	354306	Argument	ao		339262	0					
ANR	354307	Identifier	ao		339262	0					
ANR	354308	Label	case THUMB_REG_REG_REG :	3979:2:83697:83719	339262	2	True				
ANR	354309	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354310	CompoundStatement		2687:26:57862:57862	339262	3					
ANR	354311	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3980:3:83726:83744	339262	0	True				
ANR	354312	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	354313	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	354314	PtrMemberAccess	ao -> a		339262	0					
ANR	354315	Identifier	ao		339262	0					
ANR	354316	Identifier	a		339262	1					
ANR	354317	PrimaryExpression	3		339262	1					
ANR	354318	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	354319	Label	case THUMB_REG_REG_SHIFT :	3983:2:83790:83814	339262	4	True				
ANR	354320	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	354321	CompoundStatement		2691:28:57957:57957	339262	5					
ANR	354322	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	354323	Condition	ao -> a [ 3 ] == NULL	3984:7:83825:83840	339262	0	True				
ANR	354324	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	354325	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	354326	PtrMemberAccess	ao -> a		339262	0					
ANR	354327	Identifier	ao		339262	0					
ANR	354328	Identifier	a		339262	1					
ANR	354329	PrimaryExpression	3		339262	1					
ANR	354330	Identifier	NULL		339262	1					
ANR	354331	CompoundStatement		2692:25:57984:57984	339262	1					
ANR	354332	ExpressionStatement	std_opt_3 ( ao )	3985:4:83871:83885	339262	0	True				
ANR	354333	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	354334	Callee	std_opt_3		339262	0					
ANR	354335	Identifier	std_opt_3		339262	0					
ANR	354336	ArgumentList	ao		339262	1					
ANR	354337	Argument	ao		339262	0					
ANR	354338	Identifier	ao		339262	0					
ANR	354339	Label	case THUMB_REG_REG_REG_SHIFT :	3989:2:83936:83964	339262	6	True				
ANR	354340	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	354341	CompoundStatement		2697:32:58107:58107	339262	7					
ANR	354342	ExpressionStatement	ao -> o = 0x60eb0000	3990:3:83971:83989	339262	0	True				
ANR	354343	AssignmentExpression	ao -> o = 0x60eb0000		339262	0		=			
ANR	354344	PtrMemberAccess	ao -> o		339262	0					
ANR	354345	Identifier	ao		339262	0					
ANR	354346	Identifier	o		339262	1					
ANR	354347	PrimaryExpression	0x60eb0000		339262	1					
ANR	354348	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	3991:3:83994:84029	339262	1	True				
ANR	354349	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	354350	Callee	std_32bit_3reg		339262	0					
ANR	354351	Identifier	std_32bit_3reg		339262	0					
ANR	354352	ArgumentList	ao		339262	1					
ANR	354353	Argument	ao		339262	0					
ANR	354354	Identifier	ao		339262	0					
ANR	354355	Argument	m		339262	1					
ANR	354356	Identifier	m		339262	0					
ANR	354357	Argument	true		339262	2					
ANR	354358	Identifier	true		339262	0					
ANR	354359	BreakStatement	break ;	3993:3:84046:84051	339262	8	True				
ANR	354360	Label	case THUMB_REG_CONST :	3994:2:84055:84075	339262	9	True				
ANR	354361	Identifier	THUMB_REG_CONST		339262	0					
ANR	354362	CompoundStatement		2702:24:58218:58218	339262	10					
ANR	354363	ExpressionStatement	std_opt_2 ( ao )	3995:3:84082:84096	339262	0	True				
ANR	354364	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354365	Callee	std_opt_2		339262	0					
ANR	354366	Identifier	std_opt_2		339262	0					
ANR	354367	ArgumentList	ao		339262	1					
ANR	354368	Argument	ao		339262	0					
ANR	354369	Identifier	ao		339262	0					
ANR	354370	Label	case THUMB_REG_REG_CONST :	3998:2:84142:84166	339262	11	True				
ANR	354371	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	354372	CompoundStatement		2709:3:58353:58387	339262	12					
ANR	354373	ExpressionStatement	ao -> o = 0x60f10000	3999:3:84173:84191	339262	0	True				
ANR	354374	AssignmentExpression	ao -> o = 0x60f10000		339262	0		=			
ANR	354375	PtrMemberAccess	ao -> o		339262	0					
ANR	354376	Identifier	ao		339262	0					
ANR	354377	Identifier	o		339262	1					
ANR	354378	PrimaryExpression	0x60f10000		339262	1					
ANR	354379	ExpressionStatement	err = false	4000:3:84196:84207	339262	1	True				
ANR	354380	AssignmentExpression	err = false		339262	0		=			
ANR	354381	Identifier	err		339262	0					
ANR	354382	Identifier	false		339262	1					
ANR	354383	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	4001:3:84212:84246	339262	2	True				
ANR	354384	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	354385	IdentifierDeclType	ut32		339262	0					
ANR	354386	Identifier	num		339262	1					
ANR	354387	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	354388	Identifier	num		339262	0					
ANR	354389	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	354390	Callee	getthimmed12		339262	0					
ANR	354391	Identifier	getthimmed12		339262	0					
ANR	354392	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	354393	Argument	ao -> a [ 2 ]		339262	0					
ANR	354394	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	354395	PtrMemberAccess	ao -> a		339262	0					
ANR	354396	Identifier	ao		339262	0					
ANR	354397	Identifier	a		339262	1					
ANR	354398	PrimaryExpression	2		339262	1					
ANR	354399	IfStatement	if ( err )		339262	3					
ANR	354400	Condition	err	4003:7:84256:84258	339262	0	True				
ANR	354401	Identifier	err		339262	0					
ANR	354402	CompoundStatement		2711:12:58402:58402	339262	1					
ANR	354403	ReturnStatement	return - 1 ;	4004:4:84267:84276	339262	0	True				
ANR	354404	UnaryOperationExpression	- 1		339262	0					
ANR	354405	UnaryOperator	-		339262	0					
ANR	354406	PrimaryExpression	1		339262	1					
ANR	354407	ExpressionStatement	ao -> o |= num	4006:3:84286:84298	339262	4	True				
ANR	354408	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	354409	PtrMemberAccess	ao -> o		339262	0					
ANR	354410	Identifier	ao		339262	0					
ANR	354411	Identifier	o		339262	1					
ANR	354412	Identifier	num		339262	1					
ANR	354413	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	4008:3:84307:84343	339262	5	True				
ANR	354414	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	354415	Callee	std_32bit_2reg		339262	0					
ANR	354416	Identifier	std_32bit_2reg		339262	0					
ANR	354417	ArgumentList	ao		339262	1					
ANR	354418	Argument	ao		339262	0					
ANR	354419	Identifier	ao		339262	0					
ANR	354420	Argument	m		339262	1					
ANR	354421	Identifier	m		339262	0					
ANR	354422	Argument	false		339262	2					
ANR	354423	Identifier	false		339262	0					
ANR	354424	BreakStatement	break ;	4010:3:84360:84365	339262	13	True				
ANR	354425	Label	default :	4011:2:84369:84376	339262	14	True				
ANR	354426	Identifier	default		339262	0					
ANR	354427	ReturnStatement	return - 1 ;	4012:3:84381:84390	339262	15	True				
ANR	354428	UnaryOperationExpression	- 1		339262	0					
ANR	354429	UnaryOperator	-		339262	0					
ANR	354430	PrimaryExpression	1		339262	1					
ANR	354431	ElseStatement	else		339262	0					
ANR	354432	IfStatement	"if ( ( m = opmask ( ao -> op , ""sbfx"" , 0 ) ) )"		339262	0					
ANR	354433	Condition	"m = opmask ( ao -> op , ""sbfx"" , 0 )"	4015:5:84409:84442	339262	0	True				
ANR	354434	AssignmentExpression	"m = opmask ( ao -> op , ""sbfx"" , 0 )"		339262	0		=			
ANR	354435	Identifier	m		339262	0					
ANR	354436	CallExpression	"opmask ( ao -> op , ""sbfx"" , 0 )"		339262	1					
ANR	354437	Callee	opmask		339262	0					
ANR	354438	Identifier	opmask		339262	0					
ANR	354439	ArgumentList	ao -> op		339262	1					
ANR	354440	Argument	ao -> op		339262	0					
ANR	354441	PtrMemberAccess	ao -> op		339262	0					
ANR	354442	Identifier	ao		339262	0					
ANR	354443	Identifier	op		339262	1					
ANR	354444	Argument	"""sbfx"""		339262	1					
ANR	354445	PrimaryExpression	"""sbfx"""		339262	0					
ANR	354446	Argument	0		339262	2					
ANR	354447	PrimaryExpression	0		339262	0					
ANR	354448	CompoundStatement		2724:2:58590:58624	339262	1					
ANR	354449	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4016:2:84449:84483	339262	0	True				
ANR	354450	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354451	IdentifierDeclType	ut64		339262	0					
ANR	354452	Identifier	argt		339262	1					
ANR	354453	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354454	Identifier	argt		339262	0					
ANR	354455	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354456	Callee	thumb_selector		339262	0					
ANR	354457	Identifier	thumb_selector		339262	0					
ANR	354458	ArgumentList	ao -> a		339262	1					
ANR	354459	Argument	ao -> a		339262	0					
ANR	354460	PtrMemberAccess	ao -> a		339262	0					
ANR	354461	Identifier	ao		339262	0					
ANR	354462	Identifier	a		339262	1					
ANR	354463	SwitchStatement	switch ( argt )		339262	1					
ANR	354464	Condition	argt	4017:10:84495:84498	339262	0	True				
ANR	354465	Identifier	argt		339262	0					
ANR	354466	CompoundStatement		2725:16:58642:58642	339262	1					
ANR	354467	Label	case THUMB_REG_REG_CONST_CONST :	4018:2:84505:84535	339262	0	True				
ANR	354468	Identifier	THUMB_REG_REG_CONST_CONST		339262	0					
ANR	354469	CompoundStatement		2729:3:58751:58777	339262	1					
ANR	354470	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 2 ] ) ;	4019:3:84542:84570	339262	0	True				
ANR	354471	IdentifierDecl	lsb = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	354472	IdentifierDeclType	ut32		339262	0					
ANR	354473	Identifier	lsb		339262	1					
ANR	354474	AssignmentExpression	lsb = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	354475	Identifier	lsb		339262	0					
ANR	354476	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	354477	Callee	getnum		339262	0					
ANR	354478	Identifier	getnum		339262	0					
ANR	354479	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	354480	Argument	ao -> a [ 2 ]		339262	0					
ANR	354481	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	354482	PtrMemberAccess	ao -> a		339262	0					
ANR	354483	Identifier	ao		339262	0					
ANR	354484	Identifier	a		339262	1					
ANR	354485	PrimaryExpression	2		339262	1					
ANR	354486	IdentifierDeclStatement	ut32 width = getnum ( ao -> a [ 3 ] ) ;	4020:3:84575:84605	339262	1	True				
ANR	354487	IdentifierDecl	width = getnum ( ao -> a [ 3 ] )		339262	0					
ANR	354488	IdentifierDeclType	ut32		339262	0					
ANR	354489	Identifier	width		339262	1					
ANR	354490	AssignmentExpression	width = getnum ( ao -> a [ 3 ] )		339262	2		=			
ANR	354491	Identifier	width		339262	0					
ANR	354492	CallExpression	getnum ( ao -> a [ 3 ] )		339262	1					
ANR	354493	Callee	getnum		339262	0					
ANR	354494	Identifier	getnum		339262	0					
ANR	354495	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	354496	Argument	ao -> a [ 3 ]		339262	0					
ANR	354497	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	354498	PtrMemberAccess	ao -> a		339262	0					
ANR	354499	Identifier	ao		339262	0					
ANR	354500	Identifier	a		339262	1					
ANR	354501	PrimaryExpression	3		339262	1					
ANR	354502	IdentifierDeclStatement	ut32 msb = lsb + width - 1 ;	4021:3:84610:84636	339262	2	True				
ANR	354503	IdentifierDecl	msb = lsb + width - 1		339262	0					
ANR	354504	IdentifierDeclType	ut32		339262	0					
ANR	354505	Identifier	msb		339262	1					
ANR	354506	AssignmentExpression	msb = lsb + width - 1		339262	2		=			
ANR	354507	Identifier	msb		339262	0					
ANR	354508	AdditiveExpression	lsb + width - 1		339262	1		+			
ANR	354509	Identifier	lsb		339262	0					
ANR	354510	AdditiveExpression	width - 1		339262	1		-			
ANR	354511	Identifier	width		339262	0					
ANR	354512	PrimaryExpression	1		339262	1					
ANR	354513	IfStatement	if ( ( lsb > 31 ) || ( msb > 31 ) )		339262	3					
ANR	354514	Condition	( lsb > 31 ) || ( msb > 31 )	4022:7:84645:84668	339262	0	True				
ANR	354515	OrExpression	( lsb > 31 ) || ( msb > 31 )		339262	0		||			
ANR	354516	RelationalExpression	lsb > 31		339262	0		>			
ANR	354517	Identifier	lsb		339262	0					
ANR	354518	PrimaryExpression	31		339262	1					
ANR	354519	RelationalExpression	msb > 31		339262	1		>			
ANR	354520	Identifier	msb		339262	0					
ANR	354521	PrimaryExpression	31		339262	1					
ANR	354522	CompoundStatement		2730:33:58812:58812	339262	1					
ANR	354523	ReturnStatement	return - 1 ;	4023:4:84677:84686	339262	0	True				
ANR	354524	UnaryOperationExpression	- 1		339262	0					
ANR	354525	UnaryOperator	-		339262	0					
ANR	354526	PrimaryExpression	1		339262	1					
ANR	354527	ExpressionStatement	ao -> o = 0x40f30000	4025:3:84696:84714	339262	4	True				
ANR	354528	AssignmentExpression	ao -> o = 0x40f30000		339262	0		=			
ANR	354529	PtrMemberAccess	ao -> o		339262	0					
ANR	354530	Identifier	ao		339262	0					
ANR	354531	Identifier	o		339262	1					
ANR	354532	PrimaryExpression	0x40f30000		339262	1					
ANR	354533	ExpressionStatement	ao -> o |= ( ( lsb & 0x1c ) << 2 )	4026:3:84719:84747	339262	5	True				
ANR	354534	AssignmentExpression	ao -> o |= ( ( lsb & 0x1c ) << 2 )		339262	0		|=			
ANR	354535	PtrMemberAccess	ao -> o		339262	0					
ANR	354536	Identifier	ao		339262	0					
ANR	354537	Identifier	o		339262	1					
ANR	354538	ShiftExpression	( lsb & 0x1c ) << 2		339262	1		<<			
ANR	354539	BitAndExpression	lsb & 0x1c		339262	0		&			
ANR	354540	Identifier	lsb		339262	0					
ANR	354541	PrimaryExpression	0x1c		339262	1					
ANR	354542	PrimaryExpression	2		339262	1					
ANR	354543	ExpressionStatement	ao -> o |= ( ( lsb & 0x3 ) << 14 )	4027:3:84752:84780	339262	6	True				
ANR	354544	AssignmentExpression	ao -> o |= ( ( lsb & 0x3 ) << 14 )		339262	0		|=			
ANR	354545	PtrMemberAccess	ao -> o		339262	0					
ANR	354546	Identifier	ao		339262	0					
ANR	354547	Identifier	o		339262	1					
ANR	354548	ShiftExpression	( lsb & 0x3 ) << 14		339262	1		<<			
ANR	354549	BitAndExpression	lsb & 0x3		339262	0		&			
ANR	354550	Identifier	lsb		339262	0					
ANR	354551	PrimaryExpression	0x3		339262	1					
ANR	354552	PrimaryExpression	14		339262	1					
ANR	354553	ExpressionStatement	ao -> o |= ( ( width - 1 ) << 8 )	4028:3:84785:84812	339262	7	True				
ANR	354554	AssignmentExpression	ao -> o |= ( ( width - 1 ) << 8 )		339262	0		|=			
ANR	354555	PtrMemberAccess	ao -> o		339262	0					
ANR	354556	Identifier	ao		339262	0					
ANR	354557	Identifier	o		339262	1					
ANR	354558	ShiftExpression	( width - 1 ) << 8		339262	1		<<			
ANR	354559	AdditiveExpression	width - 1		339262	0		-			
ANR	354560	Identifier	width		339262	0					
ANR	354561	PrimaryExpression	1		339262	1					
ANR	354562	PrimaryExpression	8		339262	1					
ANR	354563	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	4029:3:84817:84853	339262	8	True				
ANR	354564	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	354565	Callee	std_32bit_2reg		339262	0					
ANR	354566	Identifier	std_32bit_2reg		339262	0					
ANR	354567	ArgumentList	ao		339262	1					
ANR	354568	Argument	ao		339262	0					
ANR	354569	Identifier	ao		339262	0					
ANR	354570	Argument	m		339262	1					
ANR	354571	Identifier	m		339262	0					
ANR	354572	Argument	false		339262	2					
ANR	354573	Identifier	false		339262	0					
ANR	354574	BreakStatement	break ;	4031:3:84870:84875	339262	2	True				
ANR	354575	Label	default :	4032:2:84879:84886	339262	3	True				
ANR	354576	Identifier	default		339262	0					
ANR	354577	ReturnStatement	return - 1 ;	4033:3:84891:84900	339262	4	True				
ANR	354578	UnaryOperationExpression	- 1		339262	0					
ANR	354579	UnaryOperator	-		339262	0					
ANR	354580	PrimaryExpression	1		339262	1					
ANR	354581	ElseStatement	else		339262	0					
ANR	354582	IfStatement	"if ( ( m = opmask ( ao -> op , ""sdiv"" , 0 ) ) )"		339262	0					
ANR	354583	Condition	"m = opmask ( ao -> op , ""sdiv"" , 0 )"	4036:5:84919:84950	339262	0	True				
ANR	354584	AssignmentExpression	"m = opmask ( ao -> op , ""sdiv"" , 0 )"		339262	0		=			
ANR	354585	Identifier	m		339262	0					
ANR	354586	CallExpression	"opmask ( ao -> op , ""sdiv"" , 0 )"		339262	1					
ANR	354587	Callee	opmask		339262	0					
ANR	354588	Identifier	opmask		339262	0					
ANR	354589	ArgumentList	ao -> op		339262	1					
ANR	354590	Argument	ao -> op		339262	0					
ANR	354591	PtrMemberAccess	ao -> op		339262	0					
ANR	354592	Identifier	ao		339262	0					
ANR	354593	Identifier	op		339262	1					
ANR	354594	Argument	"""sdiv"""		339262	1					
ANR	354595	PrimaryExpression	"""sdiv"""		339262	0					
ANR	354596	Argument	0		339262	2					
ANR	354597	PrimaryExpression	0		339262	0					
ANR	354598	CompoundStatement		2745:2:59098:59132	339262	1					
ANR	354599	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4037:2:84957:84991	339262	0	True				
ANR	354600	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354601	IdentifierDeclType	ut64		339262	0					
ANR	354602	Identifier	argt		339262	1					
ANR	354603	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354604	Identifier	argt		339262	0					
ANR	354605	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354606	Callee	thumb_selector		339262	0					
ANR	354607	Identifier	thumb_selector		339262	0					
ANR	354608	ArgumentList	ao -> a		339262	1					
ANR	354609	Argument	ao -> a		339262	0					
ANR	354610	PtrMemberAccess	ao -> a		339262	0					
ANR	354611	Identifier	ao		339262	0					
ANR	354612	Identifier	a		339262	1					
ANR	354613	SwitchStatement	switch ( argt )		339262	1					
ANR	354614	Condition	argt	4038:10:85003:85006	339262	0	True				
ANR	354615	Identifier	argt		339262	0					
ANR	354616	CompoundStatement		2746:16:59150:59150	339262	1					
ANR	354617	Label	case THUMB_REG_REG :	4039:2:85013:85031	339262	0	True				
ANR	354618	Identifier	THUMB_REG_REG		339262	0					
ANR	354619	CompoundStatement		2747:22:59174:59174	339262	1					
ANR	354620	ExpressionStatement	std_opt_2 ( ao )	4040:3:85038:85052	339262	0	True				
ANR	354621	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354622	Callee	std_opt_2		339262	0					
ANR	354623	Identifier	std_opt_2		339262	0					
ANR	354624	ArgumentList	ao		339262	1					
ANR	354625	Argument	ao		339262	0					
ANR	354626	Identifier	ao		339262	0					
ANR	354627	Label	case THUMB_REG_REG_REG :	4043:2:85098:85120	339262	2	True				
ANR	354628	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354629	CompoundStatement		2751:26:59263:59263	339262	3					
ANR	354630	ExpressionStatement	ao -> o = 0x90fbf0f0	4044:3:85127:85145	339262	0	True				
ANR	354631	AssignmentExpression	ao -> o = 0x90fbf0f0		339262	0		=			
ANR	354632	PtrMemberAccess	ao -> o		339262	0					
ANR	354633	Identifier	ao		339262	0					
ANR	354634	Identifier	o		339262	1					
ANR	354635	PrimaryExpression	0x90fbf0f0		339262	1					
ANR	354636	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4045:3:85150:85186	339262	1	True				
ANR	354637	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	354638	Callee	std_32bit_3reg		339262	0					
ANR	354639	Identifier	std_32bit_3reg		339262	0					
ANR	354640	ArgumentList	ao		339262	1					
ANR	354641	Argument	ao		339262	0					
ANR	354642	Identifier	ao		339262	0					
ANR	354643	Argument	m		339262	1					
ANR	354644	Identifier	m		339262	0					
ANR	354645	Argument	false		339262	2					
ANR	354646	Identifier	false		339262	0					
ANR	354647	BreakStatement	break ;	4047:3:85203:85208	339262	4	True				
ANR	354648	Label	default :	4048:2:85212:85219	339262	5	True				
ANR	354649	Identifier	default		339262	0					
ANR	354650	ReturnStatement	return - 1 ;	4049:3:85224:85233	339262	6	True				
ANR	354651	UnaryOperationExpression	- 1		339262	0					
ANR	354652	UnaryOperator	-		339262	0					
ANR	354653	PrimaryExpression	1		339262	1					
ANR	354654	ElseStatement	else		339262	0					
ANR	354655	IfStatement	"if ( ( m = opmask ( ao -> op , ""sel"" , 0 ) ) )"		339262	0					
ANR	354656	Condition	"m = opmask ( ao -> op , ""sel"" , 0 )"	4052:5:85252:85282	339262	0	True				
ANR	354657	AssignmentExpression	"m = opmask ( ao -> op , ""sel"" , 0 )"		339262	0		=			
ANR	354658	Identifier	m		339262	0					
ANR	354659	CallExpression	"opmask ( ao -> op , ""sel"" , 0 )"		339262	1					
ANR	354660	Callee	opmask		339262	0					
ANR	354661	Identifier	opmask		339262	0					
ANR	354662	ArgumentList	ao -> op		339262	1					
ANR	354663	Argument	ao -> op		339262	0					
ANR	354664	PtrMemberAccess	ao -> op		339262	0					
ANR	354665	Identifier	ao		339262	0					
ANR	354666	Identifier	op		339262	1					
ANR	354667	Argument	"""sel"""		339262	1					
ANR	354668	PrimaryExpression	"""sel"""		339262	0					
ANR	354669	Argument	0		339262	2					
ANR	354670	PrimaryExpression	0		339262	0					
ANR	354671	CompoundStatement		2761:2:59430:59464	339262	1					
ANR	354672	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4053:2:85289:85323	339262	0	True				
ANR	354673	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354674	IdentifierDeclType	ut64		339262	0					
ANR	354675	Identifier	argt		339262	1					
ANR	354676	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354677	Identifier	argt		339262	0					
ANR	354678	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354679	Callee	thumb_selector		339262	0					
ANR	354680	Identifier	thumb_selector		339262	0					
ANR	354681	ArgumentList	ao -> a		339262	1					
ANR	354682	Argument	ao -> a		339262	0					
ANR	354683	PtrMemberAccess	ao -> a		339262	0					
ANR	354684	Identifier	ao		339262	0					
ANR	354685	Identifier	a		339262	1					
ANR	354686	SwitchStatement	switch ( argt )		339262	1					
ANR	354687	Condition	argt	4054:10:85335:85338	339262	0	True				
ANR	354688	Identifier	argt		339262	0					
ANR	354689	CompoundStatement		2762:16:59482:59482	339262	1					
ANR	354690	Label	case THUMB_REG_REG :	4055:2:85345:85363	339262	0	True				
ANR	354691	Identifier	THUMB_REG_REG		339262	0					
ANR	354692	CompoundStatement		2763:22:59506:59506	339262	1					
ANR	354693	ExpressionStatement	std_opt_2 ( ao )	4056:3:85370:85384	339262	0	True				
ANR	354694	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354695	Callee	std_opt_2		339262	0					
ANR	354696	Identifier	std_opt_2		339262	0					
ANR	354697	ArgumentList	ao		339262	1					
ANR	354698	Argument	ao		339262	0					
ANR	354699	Identifier	ao		339262	0					
ANR	354700	Label	case THUMB_REG_REG_REG :	4059:2:85430:85452	339262	2	True				
ANR	354701	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354702	CompoundStatement		2767:26:59595:59595	339262	3					
ANR	354703	ExpressionStatement	ao -> o = 0xa0fa80f0	4060:3:85459:85477	339262	0	True				
ANR	354704	AssignmentExpression	ao -> o = 0xa0fa80f0		339262	0		=			
ANR	354705	PtrMemberAccess	ao -> o		339262	0					
ANR	354706	Identifier	ao		339262	0					
ANR	354707	Identifier	o		339262	1					
ANR	354708	PrimaryExpression	0xa0fa80f0		339262	1					
ANR	354709	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4061:3:85482:85518	339262	1	True				
ANR	354710	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	354711	Callee	std_32bit_3reg		339262	0					
ANR	354712	Identifier	std_32bit_3reg		339262	0					
ANR	354713	ArgumentList	ao		339262	1					
ANR	354714	Argument	ao		339262	0					
ANR	354715	Identifier	ao		339262	0					
ANR	354716	Argument	m		339262	1					
ANR	354717	Identifier	m		339262	0					
ANR	354718	Argument	false		339262	2					
ANR	354719	Identifier	false		339262	0					
ANR	354720	BreakStatement	break ;	4063:3:85535:85540	339262	4	True				
ANR	354721	Label	default :	4064:2:85544:85551	339262	5	True				
ANR	354722	Identifier	default		339262	0					
ANR	354723	ReturnStatement	return - 1 ;	4065:3:85556:85565	339262	6	True				
ANR	354724	UnaryOperationExpression	- 1		339262	0					
ANR	354725	UnaryOperator	-		339262	0					
ANR	354726	PrimaryExpression	1		339262	1					
ANR	354727	ElseStatement	else		339262	0					
ANR	354728	IfStatement	"if ( ( m = opmask ( ao -> op , ""setend"" , 0 ) ) )"		339262	0					
ANR	354729	Condition	"m = opmask ( ao -> op , ""setend"" , 0 )"	4068:5:85584:85617	339262	0	True				
ANR	354730	AssignmentExpression	"m = opmask ( ao -> op , ""setend"" , 0 )"		339262	0		=			
ANR	354731	Identifier	m		339262	0					
ANR	354732	CallExpression	"opmask ( ao -> op , ""setend"" , 0 )"		339262	1					
ANR	354733	Callee	opmask		339262	0					
ANR	354734	Identifier	opmask		339262	0					
ANR	354735	ArgumentList	ao -> op		339262	1					
ANR	354736	Argument	ao -> op		339262	0					
ANR	354737	PtrMemberAccess	ao -> op		339262	0					
ANR	354738	Identifier	ao		339262	0					
ANR	354739	Identifier	op		339262	1					
ANR	354740	Argument	"""setend"""		339262	1					
ANR	354741	PrimaryExpression	"""setend"""		339262	0					
ANR	354742	Argument	0		339262	2					
ANR	354743	PrimaryExpression	0		339262	0					
ANR	354744	CompoundStatement		2777:2:59765:59799	339262	1					
ANR	354745	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4069:2:85624:85658	339262	0	True				
ANR	354746	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354747	IdentifierDeclType	ut64		339262	0					
ANR	354748	Identifier	argt		339262	1					
ANR	354749	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354750	Identifier	argt		339262	0					
ANR	354751	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354752	Callee	thumb_selector		339262	0					
ANR	354753	Identifier	thumb_selector		339262	0					
ANR	354754	ArgumentList	ao -> a		339262	1					
ANR	354755	Argument	ao -> a		339262	0					
ANR	354756	PtrMemberAccess	ao -> a		339262	0					
ANR	354757	Identifier	ao		339262	0					
ANR	354758	Identifier	a		339262	1					
ANR	354759	SwitchStatement	switch ( argt )		339262	1					
ANR	354760	Condition	argt	4070:10:85670:85673	339262	0	True				
ANR	354761	Identifier	argt		339262	0					
ANR	354762	CompoundStatement		2778:16:59817:59817	339262	1					
ANR	354763	Label	case THUMB_OTHER :	4071:2:85680:85696	339262	0	True				
ANR	354764	Identifier	THUMB_OTHER		339262	0					
ANR	354765	CompoundStatement		2779:20:59839:59839	339262	1					
ANR	354766	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	4072:3:85703:85731	339262	0	True				
ANR	354767	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		339262	0					
ANR	354768	Callee	r_str_case		339262	0					
ANR	354769	Identifier	r_str_case		339262	0					
ANR	354770	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	354771	Argument	ao -> a [ 0 ]		339262	0					
ANR	354772	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	354773	PtrMemberAccess	ao -> a		339262	0					
ANR	354774	Identifier	ao		339262	0					
ANR	354775	Identifier	a		339262	1					
ANR	354776	PrimaryExpression	0		339262	1					
ANR	354777	Argument	false		339262	1					
ANR	354778	Identifier	false		339262	0					
ANR	354779	ExpressionStatement	ao -> o = 0x50b6	4073:3:85736:85750	339262	1	True				
ANR	354780	AssignmentExpression	ao -> o = 0x50b6		339262	0		=			
ANR	354781	PtrMemberAccess	ao -> o		339262	0					
ANR	354782	Identifier	ao		339262	0					
ANR	354783	Identifier	o		339262	1					
ANR	354784	PrimaryExpression	0x50b6		339262	1					
ANR	354785	IfStatement	"if ( ! ( strcmpnull ( ao -> a [ 0 ] , ""be"" ) ) )"		339262	2					
ANR	354786	Condition	"! ( strcmpnull ( ao -> a [ 0 ] , ""be"" ) )"	4074:7:85759:85788	339262	0	True				
ANR	354787	UnaryOperationExpression	"! ( strcmpnull ( ao -> a [ 0 ] , ""be"" ) )"		339262	0					
ANR	354788	UnaryOperator	!		339262	0					
ANR	354789	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""be"" )"		339262	1					
ANR	354790	Callee	strcmpnull		339262	0					
ANR	354791	Identifier	strcmpnull		339262	0					
ANR	354792	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	354793	Argument	ao -> a [ 0 ]		339262	0					
ANR	354794	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	354795	PtrMemberAccess	ao -> a		339262	0					
ANR	354796	Identifier	ao		339262	0					
ANR	354797	Identifier	a		339262	1					
ANR	354798	PrimaryExpression	0		339262	1					
ANR	354799	Argument	"""be"""		339262	1					
ANR	354800	PrimaryExpression	"""be"""		339262	0					
ANR	354801	CompoundStatement		2782:39:59932:59932	339262	1					
ANR	354802	ExpressionStatement	ao -> o |= 1 << 11	4075:4:85797:85813	339262	0	True				
ANR	354803	AssignmentExpression	ao -> o |= 1 << 11		339262	0		|=			
ANR	354804	PtrMemberAccess	ao -> o		339262	0					
ANR	354805	Identifier	ao		339262	0					
ANR	354806	Identifier	o		339262	1					
ANR	354807	ShiftExpression	1 << 11		339262	1		<<			
ANR	354808	PrimaryExpression	1		339262	0					
ANR	354809	PrimaryExpression	11		339262	1					
ANR	354810	ReturnStatement	return 2 ;	4076:4:85819:85827	339262	1	True				
ANR	354811	PrimaryExpression	2		339262	0					
ANR	354812	ElseStatement	else		339262	0					
ANR	354813	IfStatement	"if ( ! ( strcmpnull ( ao -> a [ 0 ] , ""le"" ) ) )"		339262	0					
ANR	354814	Condition	"! ( strcmpnull ( ao -> a [ 0 ] , ""le"" ) )"	4078:7:85846:85875	339262	0	True				
ANR	354815	UnaryOperationExpression	"! ( strcmpnull ( ao -> a [ 0 ] , ""le"" ) )"		339262	0					
ANR	354816	UnaryOperator	!		339262	0					
ANR	354817	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""le"" )"		339262	1					
ANR	354818	Callee	strcmpnull		339262	0					
ANR	354819	Identifier	strcmpnull		339262	0					
ANR	354820	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	354821	Argument	ao -> a [ 0 ]		339262	0					
ANR	354822	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	354823	PtrMemberAccess	ao -> a		339262	0					
ANR	354824	Identifier	ao		339262	0					
ANR	354825	Identifier	a		339262	1					
ANR	354826	PrimaryExpression	0		339262	1					
ANR	354827	Argument	"""le"""		339262	1					
ANR	354828	PrimaryExpression	"""le"""		339262	0					
ANR	354829	CompoundStatement		2786:39:60019:60019	339262	1					
ANR	354830	ReturnStatement	return 2 ;	4079:4:85884:85892	339262	0	True				
ANR	354831	PrimaryExpression	2		339262	0					
ANR	354832	ElseStatement	else		339262	0					
ANR	354833	CompoundStatement		2788:10:60045:60045	339262	0					
ANR	354834	ReturnStatement	return - 1 ;	4081:4:85910:85919	339262	0	True				
ANR	354835	UnaryOperationExpression	- 1		339262	0					
ANR	354836	UnaryOperator	-		339262	0					
ANR	354837	PrimaryExpression	1		339262	1					
ANR	354838	BreakStatement	break ;	4083:3:85929:85934	339262	3	True				
ANR	354839	Label	default :	4085:2:85950:85957	339262	2	True				
ANR	354840	Identifier	default		339262	0					
ANR	354841	ReturnStatement	return - 1 ;	4086:3:85962:85971	339262	3	True				
ANR	354842	UnaryOperationExpression	- 1		339262	0					
ANR	354843	UnaryOperator	-		339262	0					
ANR	354844	PrimaryExpression	1		339262	1					
ANR	354845	ElseStatement	else		339262	0					
ANR	354846	IfStatement	"if ( ( m = opmask ( ao -> op , ""sev"" , 0 ) ) )"		339262	0					
ANR	354847	Condition	"m = opmask ( ao -> op , ""sev"" , 0 )"	4089:5:85990:86020	339262	0	True				
ANR	354848	AssignmentExpression	"m = opmask ( ao -> op , ""sev"" , 0 )"		339262	0		=			
ANR	354849	Identifier	m		339262	0					
ANR	354850	CallExpression	"opmask ( ao -> op , ""sev"" , 0 )"		339262	1					
ANR	354851	Callee	opmask		339262	0					
ANR	354852	Identifier	opmask		339262	0					
ANR	354853	ArgumentList	ao -> op		339262	1					
ANR	354854	Argument	ao -> op		339262	0					
ANR	354855	PtrMemberAccess	ao -> op		339262	0					
ANR	354856	Identifier	ao		339262	0					
ANR	354857	Identifier	op		339262	1					
ANR	354858	Argument	"""sev"""		339262	1					
ANR	354859	PrimaryExpression	"""sev"""		339262	0					
ANR	354860	Argument	0		339262	2					
ANR	354861	PrimaryExpression	0		339262	0					
ANR	354862	CompoundStatement		2798:2:60168:60202	339262	1					
ANR	354863	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4090:2:86027:86061	339262	0	True				
ANR	354864	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354865	IdentifierDeclType	ut64		339262	0					
ANR	354866	Identifier	argt		339262	1					
ANR	354867	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354868	Identifier	argt		339262	0					
ANR	354869	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354870	Callee	thumb_selector		339262	0					
ANR	354871	Identifier	thumb_selector		339262	0					
ANR	354872	ArgumentList	ao -> a		339262	1					
ANR	354873	Argument	ao -> a		339262	0					
ANR	354874	PtrMemberAccess	ao -> a		339262	0					
ANR	354875	Identifier	ao		339262	0					
ANR	354876	Identifier	a		339262	1					
ANR	354877	SwitchStatement	switch ( argt )		339262	1					
ANR	354878	Condition	argt	4091:10:86073:86076	339262	0	True				
ANR	354879	Identifier	argt		339262	0					
ANR	354880	CompoundStatement		2799:16:60220:60220	339262	1					
ANR	354881	Label	case THUMB_NONE :	4092:2:86083:86098	339262	0	True				
ANR	354882	Identifier	THUMB_NONE		339262	0					
ANR	354883	IfStatement	if ( m & DOTW_BIT )		339262	1					
ANR	354884	Condition	m & DOTW_BIT	4093:7:86107:86118	339262	0	True				
ANR	354885	BitAndExpression	m & DOTW_BIT		339262	0		&			
ANR	354886	Identifier	m		339262	0					
ANR	354887	Identifier	DOTW_BIT		339262	1					
ANR	354888	CompoundStatement		2801:21:60262:60262	339262	1					
ANR	354889	ExpressionStatement	ao -> o = 0xaff30480	4094:4:86127:86145	339262	0	True				
ANR	354890	AssignmentExpression	ao -> o = 0xaff30480		339262	0		=			
ANR	354891	PtrMemberAccess	ao -> o		339262	0					
ANR	354892	Identifier	ao		339262	0					
ANR	354893	Identifier	o		339262	1					
ANR	354894	PrimaryExpression	0xaff30480		339262	1					
ANR	354895	ReturnStatement	return 4 ;	4095:4:86151:86159	339262	1	True				
ANR	354896	PrimaryExpression	4		339262	0					
ANR	354897	ElseStatement	else		339262	0					
ANR	354898	CompoundStatement		2804:10:60312:60312	339262	0					
ANR	354899	ExpressionStatement	ao -> o = 0x40bf	4097:4:86177:86191	339262	0	True				
ANR	354900	AssignmentExpression	ao -> o = 0x40bf		339262	0		=			
ANR	354901	PtrMemberAccess	ao -> o		339262	0					
ANR	354902	Identifier	ao		339262	0					
ANR	354903	Identifier	o		339262	1					
ANR	354904	PrimaryExpression	0x40bf		339262	1					
ANR	354905	ReturnStatement	return 2 ;	4098:4:86197:86205	339262	1	True				
ANR	354906	PrimaryExpression	2		339262	0					
ANR	354907	BreakStatement	break ;	4100:3:86215:86220	339262	2	True				
ANR	354908	Label	default :	4101:2:86224:86231	339262	3	True				
ANR	354909	Identifier	default		339262	0					
ANR	354910	ReturnStatement	return - 1 ;	4102:3:86236:86245	339262	4	True				
ANR	354911	UnaryOperationExpression	- 1		339262	0					
ANR	354912	UnaryOperator	-		339262	0					
ANR	354913	PrimaryExpression	1		339262	1					
ANR	354914	ElseStatement	else		339262	0					
ANR	354915	IfStatement	"if ( ( m = opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	354916	Condition	"m = opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT )"	4105:5:86264:86319	339262	0	True				
ANR	354917	AssignmentExpression	"m = opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	354918	Identifier	m		339262	0					
ANR	354919	CallExpression	"opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	354920	Callee	opmask		339262	0					
ANR	354921	Identifier	opmask		339262	0					
ANR	354922	ArgumentList	ao -> op		339262	1					
ANR	354923	Argument	ao -> op		339262	0					
ANR	354924	PtrMemberAccess	ao -> op		339262	0					
ANR	354925	Identifier	ao		339262	0					
ANR	354926	Identifier	op		339262	1					
ANR	354927	Argument	"""shadd"""		339262	1					
ANR	354928	PrimaryExpression	"""shadd"""		339262	0					
ANR	354929	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	354930	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	354931	Identifier	EIGHT_BIT		339262	0					
ANR	354932	Identifier	SIXTEEN_BIT		339262	1					
ANR	354933	CompoundStatement		2814:2:60467:60501	339262	1					
ANR	354934	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4106:2:86326:86360	339262	0	True				
ANR	354935	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	354936	IdentifierDeclType	ut64		339262	0					
ANR	354937	Identifier	argt		339262	1					
ANR	354938	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	354939	Identifier	argt		339262	0					
ANR	354940	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	354941	Callee	thumb_selector		339262	0					
ANR	354942	Identifier	thumb_selector		339262	0					
ANR	354943	ArgumentList	ao -> a		339262	1					
ANR	354944	Argument	ao -> a		339262	0					
ANR	354945	PtrMemberAccess	ao -> a		339262	0					
ANR	354946	Identifier	ao		339262	0					
ANR	354947	Identifier	a		339262	1					
ANR	354948	SwitchStatement	switch ( argt )		339262	1					
ANR	354949	Condition	argt	4107:10:86372:86375	339262	0	True				
ANR	354950	Identifier	argt		339262	0					
ANR	354951	CompoundStatement		2815:16:60519:60519	339262	1					
ANR	354952	Label	case THUMB_REG_REG :	4108:2:86382:86400	339262	0	True				
ANR	354953	Identifier	THUMB_REG_REG		339262	0					
ANR	354954	CompoundStatement		2816:22:60543:60543	339262	1					
ANR	354955	ExpressionStatement	std_opt_2 ( ao )	4109:3:86407:86421	339262	0	True				
ANR	354956	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	354957	Callee	std_opt_2		339262	0					
ANR	354958	Identifier	std_opt_2		339262	0					
ANR	354959	ArgumentList	ao		339262	1					
ANR	354960	Argument	ao		339262	0					
ANR	354961	Identifier	ao		339262	0					
ANR	354962	Label	case THUMB_REG_REG_REG :	4112:2:86467:86489	339262	2	True				
ANR	354963	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	354964	CompoundStatement		2820:26:60632:60632	339262	3					
ANR	354965	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	354966	Condition	m & SIXTEEN_BIT	4113:7:86500:86514	339262	0	True				
ANR	354967	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	354968	Identifier	m		339262	0					
ANR	354969	Identifier	SIXTEEN_BIT		339262	1					
ANR	354970	CompoundStatement		2821:24:60658:60658	339262	1					
ANR	354971	ExpressionStatement	ao -> o = 0x90fa20f0	4114:4:86523:86541	339262	0	True				
ANR	354972	AssignmentExpression	ao -> o = 0x90fa20f0		339262	0		=			
ANR	354973	PtrMemberAccess	ao -> o		339262	0					
ANR	354974	Identifier	ao		339262	0					
ANR	354975	Identifier	o		339262	1					
ANR	354976	PrimaryExpression	0x90fa20f0		339262	1					
ANR	354977	ElseStatement	else		339262	0					
ANR	354978	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	354979	Condition	m & EIGHT_BIT	4116:7:86560:86572	339262	0	True				
ANR	354980	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	354981	Identifier	m		339262	0					
ANR	354982	Identifier	EIGHT_BIT		339262	1					
ANR	354983	CompoundStatement		2824:22:60716:60716	339262	1					
ANR	354984	ExpressionStatement	ao -> o = 0x80fa20f0	4117:4:86581:86599	339262	0	True				
ANR	354985	AssignmentExpression	ao -> o = 0x80fa20f0		339262	0		=			
ANR	354986	PtrMemberAccess	ao -> o		339262	0					
ANR	354987	Identifier	ao		339262	0					
ANR	354988	Identifier	o		339262	1					
ANR	354989	PrimaryExpression	0x80fa20f0		339262	1					
ANR	354990	ElseStatement	else		339262	0					
ANR	354991	CompoundStatement		2826:10:60752:60752	339262	0					
ANR	354992	ReturnStatement	return - 1 ;	4119:4:86617:86626	339262	0	True				
ANR	354993	UnaryOperationExpression	- 1		339262	0					
ANR	354994	UnaryOperator	-		339262	0					
ANR	354995	PrimaryExpression	1		339262	1					
ANR	354996	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4121:3:86636:86672	339262	1	True				
ANR	354997	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	354998	Callee	std_32bit_3reg		339262	0					
ANR	354999	Identifier	std_32bit_3reg		339262	0					
ANR	355000	ArgumentList	ao		339262	1					
ANR	355001	Argument	ao		339262	0					
ANR	355002	Identifier	ao		339262	0					
ANR	355003	Argument	m		339262	1					
ANR	355004	Identifier	m		339262	0					
ANR	355005	Argument	false		339262	2					
ANR	355006	Identifier	false		339262	0					
ANR	355007	BreakStatement	break ;	4123:3:86689:86694	339262	4	True				
ANR	355008	Label	default :	4124:2:86698:86705	339262	5	True				
ANR	355009	Identifier	default		339262	0					
ANR	355010	ReturnStatement	return - 1 ;	4125:3:86710:86719	339262	6	True				
ANR	355011	UnaryOperationExpression	- 1		339262	0					
ANR	355012	UnaryOperator	-		339262	0					
ANR	355013	PrimaryExpression	1		339262	1					
ANR	355014	ElseStatement	else		339262	0					
ANR	355015	IfStatement	"if ( ( m = opmask ( ao -> op , ""shasx"" , 0 ) ) )"		339262	0					
ANR	355016	Condition	"m = opmask ( ao -> op , ""shasx"" , 0 )"	4128:5:86738:86770	339262	0	True				
ANR	355017	AssignmentExpression	"m = opmask ( ao -> op , ""shasx"" , 0 )"		339262	0		=			
ANR	355018	Identifier	m		339262	0					
ANR	355019	CallExpression	"opmask ( ao -> op , ""shasx"" , 0 )"		339262	1					
ANR	355020	Callee	opmask		339262	0					
ANR	355021	Identifier	opmask		339262	0					
ANR	355022	ArgumentList	ao -> op		339262	1					
ANR	355023	Argument	ao -> op		339262	0					
ANR	355024	PtrMemberAccess	ao -> op		339262	0					
ANR	355025	Identifier	ao		339262	0					
ANR	355026	Identifier	op		339262	1					
ANR	355027	Argument	"""shasx"""		339262	1					
ANR	355028	PrimaryExpression	"""shasx"""		339262	0					
ANR	355029	Argument	0		339262	2					
ANR	355030	PrimaryExpression	0		339262	0					
ANR	355031	CompoundStatement		2837:2:60918:60952	339262	1					
ANR	355032	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4129:2:86777:86811	339262	0	True				
ANR	355033	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355034	IdentifierDeclType	ut64		339262	0					
ANR	355035	Identifier	argt		339262	1					
ANR	355036	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355037	Identifier	argt		339262	0					
ANR	355038	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	355039	Callee	thumb_selector		339262	0					
ANR	355040	Identifier	thumb_selector		339262	0					
ANR	355041	ArgumentList	ao -> a		339262	1					
ANR	355042	Argument	ao -> a		339262	0					
ANR	355043	PtrMemberAccess	ao -> a		339262	0					
ANR	355044	Identifier	ao		339262	0					
ANR	355045	Identifier	a		339262	1					
ANR	355046	SwitchStatement	switch ( argt )		339262	1					
ANR	355047	Condition	argt	4130:10:86823:86826	339262	0	True				
ANR	355048	Identifier	argt		339262	0					
ANR	355049	CompoundStatement		2838:16:60970:60970	339262	1					
ANR	355050	Label	case THUMB_REG_REG :	4131:2:86833:86851	339262	0	True				
ANR	355051	Identifier	THUMB_REG_REG		339262	0					
ANR	355052	CompoundStatement		2839:22:60994:60994	339262	1					
ANR	355053	ExpressionStatement	std_opt_2 ( ao )	4132:3:86858:86872	339262	0	True				
ANR	355054	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	355055	Callee	std_opt_2		339262	0					
ANR	355056	Identifier	std_opt_2		339262	0					
ANR	355057	ArgumentList	ao		339262	1					
ANR	355058	Argument	ao		339262	0					
ANR	355059	Identifier	ao		339262	0					
ANR	355060	Label	case THUMB_REG_REG_REG :	4135:2:86918:86940	339262	2	True				
ANR	355061	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	355062	CompoundStatement		2843:26:61083:61083	339262	3					
ANR	355063	ExpressionStatement	ao -> o = 0xa0fa20f0	4136:3:86947:86965	339262	0	True				
ANR	355064	AssignmentExpression	ao -> o = 0xa0fa20f0		339262	0		=			
ANR	355065	PtrMemberAccess	ao -> o		339262	0					
ANR	355066	Identifier	ao		339262	0					
ANR	355067	Identifier	o		339262	1					
ANR	355068	PrimaryExpression	0xa0fa20f0		339262	1					
ANR	355069	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4137:3:86970:87006	339262	1	True				
ANR	355070	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355071	Callee	std_32bit_3reg		339262	0					
ANR	355072	Identifier	std_32bit_3reg		339262	0					
ANR	355073	ArgumentList	ao		339262	1					
ANR	355074	Argument	ao		339262	0					
ANR	355075	Identifier	ao		339262	0					
ANR	355076	Argument	m		339262	1					
ANR	355077	Identifier	m		339262	0					
ANR	355078	Argument	false		339262	2					
ANR	355079	Identifier	false		339262	0					
ANR	355080	BreakStatement	break ;	4139:3:87023:87028	339262	4	True				
ANR	355081	Label	default :	4140:2:87032:87039	339262	5	True				
ANR	355082	Identifier	default		339262	0					
ANR	355083	ReturnStatement	return - 1 ;	4141:3:87044:87053	339262	6	True				
ANR	355084	UnaryOperationExpression	- 1		339262	0					
ANR	355085	UnaryOperator	-		339262	0					
ANR	355086	PrimaryExpression	1		339262	1					
ANR	355087	ElseStatement	else		339262	0					
ANR	355088	IfStatement	"if ( ( m = opmask ( ao -> op , ""shsax"" , 0 ) ) )"		339262	0					
ANR	355089	Condition	"m = opmask ( ao -> op , ""shsax"" , 0 )"	4144:5:87072:87104	339262	0	True				
ANR	355090	AssignmentExpression	"m = opmask ( ao -> op , ""shsax"" , 0 )"		339262	0		=			
ANR	355091	Identifier	m		339262	0					
ANR	355092	CallExpression	"opmask ( ao -> op , ""shsax"" , 0 )"		339262	1					
ANR	355093	Callee	opmask		339262	0					
ANR	355094	Identifier	opmask		339262	0					
ANR	355095	ArgumentList	ao -> op		339262	1					
ANR	355096	Argument	ao -> op		339262	0					
ANR	355097	PtrMemberAccess	ao -> op		339262	0					
ANR	355098	Identifier	ao		339262	0					
ANR	355099	Identifier	op		339262	1					
ANR	355100	Argument	"""shsax"""		339262	1					
ANR	355101	PrimaryExpression	"""shsax"""		339262	0					
ANR	355102	Argument	0		339262	2					
ANR	355103	PrimaryExpression	0		339262	0					
ANR	355104	CompoundStatement		2853:2:61252:61286	339262	1					
ANR	355105	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4145:2:87111:87145	339262	0	True				
ANR	355106	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355107	IdentifierDeclType	ut64		339262	0					
ANR	355108	Identifier	argt		339262	1					
ANR	355109	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355110	Identifier	argt		339262	0					
ANR	355111	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	355112	Callee	thumb_selector		339262	0					
ANR	355113	Identifier	thumb_selector		339262	0					
ANR	355114	ArgumentList	ao -> a		339262	1					
ANR	355115	Argument	ao -> a		339262	0					
ANR	355116	PtrMemberAccess	ao -> a		339262	0					
ANR	355117	Identifier	ao		339262	0					
ANR	355118	Identifier	a		339262	1					
ANR	355119	SwitchStatement	switch ( argt )		339262	1					
ANR	355120	Condition	argt	4146:10:87157:87160	339262	0	True				
ANR	355121	Identifier	argt		339262	0					
ANR	355122	CompoundStatement		2854:16:61304:61304	339262	1					
ANR	355123	Label	case THUMB_REG_REG :	4147:2:87167:87185	339262	0	True				
ANR	355124	Identifier	THUMB_REG_REG		339262	0					
ANR	355125	CompoundStatement		2855:22:61328:61328	339262	1					
ANR	355126	ExpressionStatement	std_opt_2 ( ao )	4148:3:87192:87206	339262	0	True				
ANR	355127	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	355128	Callee	std_opt_2		339262	0					
ANR	355129	Identifier	std_opt_2		339262	0					
ANR	355130	ArgumentList	ao		339262	1					
ANR	355131	Argument	ao		339262	0					
ANR	355132	Identifier	ao		339262	0					
ANR	355133	Label	case THUMB_REG_REG_REG :	4151:2:87252:87274	339262	2	True				
ANR	355134	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	355135	CompoundStatement		2859:26:61417:61417	339262	3					
ANR	355136	ExpressionStatement	ao -> o = 0xe0fa20f0	4152:3:87281:87299	339262	0	True				
ANR	355137	AssignmentExpression	ao -> o = 0xe0fa20f0		339262	0		=			
ANR	355138	PtrMemberAccess	ao -> o		339262	0					
ANR	355139	Identifier	ao		339262	0					
ANR	355140	Identifier	o		339262	1					
ANR	355141	PrimaryExpression	0xe0fa20f0		339262	1					
ANR	355142	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4153:3:87304:87340	339262	1	True				
ANR	355143	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355144	Callee	std_32bit_3reg		339262	0					
ANR	355145	Identifier	std_32bit_3reg		339262	0					
ANR	355146	ArgumentList	ao		339262	1					
ANR	355147	Argument	ao		339262	0					
ANR	355148	Identifier	ao		339262	0					
ANR	355149	Argument	m		339262	1					
ANR	355150	Identifier	m		339262	0					
ANR	355151	Argument	false		339262	2					
ANR	355152	Identifier	false		339262	0					
ANR	355153	BreakStatement	break ;	4155:3:87357:87362	339262	4	True				
ANR	355154	Label	default :	4156:2:87366:87373	339262	5	True				
ANR	355155	Identifier	default		339262	0					
ANR	355156	ReturnStatement	return - 1 ;	4157:3:87378:87387	339262	6	True				
ANR	355157	UnaryOperationExpression	- 1		339262	0					
ANR	355158	UnaryOperator	-		339262	0					
ANR	355159	PrimaryExpression	1		339262	1					
ANR	355160	ElseStatement	else		339262	0					
ANR	355161	IfStatement	"if ( ( m = opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	355162	Condition	"m = opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT )"	4160:5:87406:87460	339262	0	True				
ANR	355163	AssignmentExpression	"m = opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	355164	Identifier	m		339262	0					
ANR	355165	CallExpression	"opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	355166	Callee	opmask		339262	0					
ANR	355167	Identifier	opmask		339262	0					
ANR	355168	ArgumentList	ao -> op		339262	1					
ANR	355169	Argument	ao -> op		339262	0					
ANR	355170	PtrMemberAccess	ao -> op		339262	0					
ANR	355171	Identifier	ao		339262	0					
ANR	355172	Identifier	op		339262	1					
ANR	355173	Argument	"""shsub"""		339262	1					
ANR	355174	PrimaryExpression	"""shsub"""		339262	0					
ANR	355175	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	355176	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	355177	Identifier	EIGHT_BIT		339262	0					
ANR	355178	Identifier	SIXTEEN_BIT		339262	1					
ANR	355179	CompoundStatement		2869:2:61608:61642	339262	1					
ANR	355180	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4161:2:87467:87501	339262	0	True				
ANR	355181	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355182	IdentifierDeclType	ut64		339262	0					
ANR	355183	Identifier	argt		339262	1					
ANR	355184	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355185	Identifier	argt		339262	0					
ANR	355186	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	355187	Callee	thumb_selector		339262	0					
ANR	355188	Identifier	thumb_selector		339262	0					
ANR	355189	ArgumentList	ao -> a		339262	1					
ANR	355190	Argument	ao -> a		339262	0					
ANR	355191	PtrMemberAccess	ao -> a		339262	0					
ANR	355192	Identifier	ao		339262	0					
ANR	355193	Identifier	a		339262	1					
ANR	355194	SwitchStatement	switch ( argt )		339262	1					
ANR	355195	Condition	argt	4162:10:87513:87516	339262	0	True				
ANR	355196	Identifier	argt		339262	0					
ANR	355197	CompoundStatement		2870:16:61660:61660	339262	1					
ANR	355198	Label	case THUMB_REG_REG :	4163:2:87523:87541	339262	0	True				
ANR	355199	Identifier	THUMB_REG_REG		339262	0					
ANR	355200	CompoundStatement		2871:22:61684:61684	339262	1					
ANR	355201	ExpressionStatement	std_opt_2 ( ao )	4164:3:87548:87562	339262	0	True				
ANR	355202	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	355203	Callee	std_opt_2		339262	0					
ANR	355204	Identifier	std_opt_2		339262	0					
ANR	355205	ArgumentList	ao		339262	1					
ANR	355206	Argument	ao		339262	0					
ANR	355207	Identifier	ao		339262	0					
ANR	355208	Label	case THUMB_REG_REG_REG :	4167:2:87608:87630	339262	2	True				
ANR	355209	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	355210	CompoundStatement		2875:26:61773:61773	339262	3					
ANR	355211	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	355212	Condition	m & SIXTEEN_BIT	4168:7:87641:87655	339262	0	True				
ANR	355213	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	355214	Identifier	m		339262	0					
ANR	355215	Identifier	SIXTEEN_BIT		339262	1					
ANR	355216	CompoundStatement		2876:24:61799:61799	339262	1					
ANR	355217	ExpressionStatement	ao -> o = 0xd0fa20f0	4169:4:87664:87682	339262	0	True				
ANR	355218	AssignmentExpression	ao -> o = 0xd0fa20f0		339262	0		=			
ANR	355219	PtrMemberAccess	ao -> o		339262	0					
ANR	355220	Identifier	ao		339262	0					
ANR	355221	Identifier	o		339262	1					
ANR	355222	PrimaryExpression	0xd0fa20f0		339262	1					
ANR	355223	ElseStatement	else		339262	0					
ANR	355224	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	355225	Condition	m & EIGHT_BIT	4171:7:87701:87713	339262	0	True				
ANR	355226	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	355227	Identifier	m		339262	0					
ANR	355228	Identifier	EIGHT_BIT		339262	1					
ANR	355229	CompoundStatement		2879:22:61857:61857	339262	1					
ANR	355230	ExpressionStatement	ao -> o = 0xc0fa20f0	4172:4:87722:87740	339262	0	True				
ANR	355231	AssignmentExpression	ao -> o = 0xc0fa20f0		339262	0		=			
ANR	355232	PtrMemberAccess	ao -> o		339262	0					
ANR	355233	Identifier	ao		339262	0					
ANR	355234	Identifier	o		339262	1					
ANR	355235	PrimaryExpression	0xc0fa20f0		339262	1					
ANR	355236	ElseStatement	else		339262	0					
ANR	355237	CompoundStatement		2881:10:61893:61893	339262	0					
ANR	355238	ReturnStatement	return - 1 ;	4174:4:87758:87767	339262	0	True				
ANR	355239	UnaryOperationExpression	- 1		339262	0					
ANR	355240	UnaryOperator	-		339262	0					
ANR	355241	PrimaryExpression	1		339262	1					
ANR	355242	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4176:3:87777:87813	339262	1	True				
ANR	355243	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355244	Callee	std_32bit_3reg		339262	0					
ANR	355245	Identifier	std_32bit_3reg		339262	0					
ANR	355246	ArgumentList	ao		339262	1					
ANR	355247	Argument	ao		339262	0					
ANR	355248	Identifier	ao		339262	0					
ANR	355249	Argument	m		339262	1					
ANR	355250	Identifier	m		339262	0					
ANR	355251	Argument	false		339262	2					
ANR	355252	Identifier	false		339262	0					
ANR	355253	BreakStatement	break ;	4178:3:87830:87835	339262	4	True				
ANR	355254	Label	default :	4179:2:87839:87846	339262	5	True				
ANR	355255	Identifier	default		339262	0					
ANR	355256	ReturnStatement	return - 1 ;	4180:3:87851:87860	339262	6	True				
ANR	355257	UnaryOperationExpression	- 1		339262	0					
ANR	355258	UnaryOperator	-		339262	0					
ANR	355259	PrimaryExpression	1		339262	1					
ANR	355260	ElseStatement	else		339262	0					
ANR	355261	IfStatement	"if ( ( m = opmask ( ao -> op , ""smc"" , 0 ) ) )"		339262	0					
ANR	355262	Condition	"m = opmask ( ao -> op , ""smc"" , 0 )"	4183:5:87879:87909	339262	0	True				
ANR	355263	AssignmentExpression	"m = opmask ( ao -> op , ""smc"" , 0 )"		339262	0		=			
ANR	355264	Identifier	m		339262	0					
ANR	355265	CallExpression	"opmask ( ao -> op , ""smc"" , 0 )"		339262	1					
ANR	355266	Callee	opmask		339262	0					
ANR	355267	Identifier	opmask		339262	0					
ANR	355268	ArgumentList	ao -> op		339262	1					
ANR	355269	Argument	ao -> op		339262	0					
ANR	355270	PtrMemberAccess	ao -> op		339262	0					
ANR	355271	Identifier	ao		339262	0					
ANR	355272	Identifier	op		339262	1					
ANR	355273	Argument	"""smc"""		339262	1					
ANR	355274	PrimaryExpression	"""smc"""		339262	0					
ANR	355275	Argument	0		339262	2					
ANR	355276	PrimaryExpression	0		339262	0					
ANR	355277	CompoundStatement		2892:2:62057:62091	339262	1					
ANR	355278	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4184:2:87916:87950	339262	0	True				
ANR	355279	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355280	IdentifierDeclType	ut64		339262	0					
ANR	355281	Identifier	argt		339262	1					
ANR	355282	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355283	Identifier	argt		339262	0					
ANR	355284	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	355285	Callee	thumb_selector		339262	0					
ANR	355286	Identifier	thumb_selector		339262	0					
ANR	355287	ArgumentList	ao -> a		339262	1					
ANR	355288	Argument	ao -> a		339262	0					
ANR	355289	PtrMemberAccess	ao -> a		339262	0					
ANR	355290	Identifier	ao		339262	0					
ANR	355291	Identifier	a		339262	1					
ANR	355292	SwitchStatement	switch ( argt )		339262	1					
ANR	355293	Condition	argt	4185:10:87962:87965	339262	0	True				
ANR	355294	Identifier	argt		339262	0					
ANR	355295	CompoundStatement		2893:16:62109:62109	339262	1					
ANR	355296	Label	case THUMB_CONST :	4186:2:87972:87988	339262	0	True				
ANR	355297	Identifier	THUMB_CONST		339262	0					
ANR	355298	CompoundStatement		2896:3:62152:62180	339262	1					
ANR	355299	ExpressionStatement	err = false	4187:3:87995:88006	339262	0	True				
ANR	355300	AssignmentExpression	err = false		339262	0		=			
ANR	355301	Identifier	err		339262	0					
ANR	355302	Identifier	false		339262	1					
ANR	355303	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	4188:3:88011:88039	339262	1	True				
ANR	355304	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	355305	IdentifierDeclType	ut32		339262	0					
ANR	355306	Identifier	num		339262	1					
ANR	355307	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	355308	Identifier	num		339262	0					
ANR	355309	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	355310	Callee	getnum		339262	0					
ANR	355311	Identifier	getnum		339262	0					
ANR	355312	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	355313	Argument	ao -> a [ 0 ]		339262	0					
ANR	355314	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	355315	PtrMemberAccess	ao -> a		339262	0					
ANR	355316	Identifier	ao		339262	0					
ANR	355317	Identifier	a		339262	1					
ANR	355318	PrimaryExpression	0		339262	1					
ANR	355319	IfStatement	if ( err || ( num > 15 ) )		339262	2					
ANR	355320	Condition	err || ( num > 15 )	4190:7:88052:88068	339262	0	True				
ANR	355321	OrExpression	err || ( num > 15 )		339262	0		||			
ANR	355322	Identifier	err		339262	0					
ANR	355323	RelationalExpression	num > 15		339262	1		>			
ANR	355324	Identifier	num		339262	0					
ANR	355325	PrimaryExpression	15		339262	1					
ANR	355326	CompoundStatement		2898:26:62212:62212	339262	1					
ANR	355327	ReturnStatement	return - 1 ;	4191:4:88077:88086	339262	0	True				
ANR	355328	UnaryOperationExpression	- 1		339262	0					
ANR	355329	UnaryOperator	-		339262	0					
ANR	355330	PrimaryExpression	1		339262	1					
ANR	355331	ExpressionStatement	ao -> o = 0xf0f70080	4194:3:88097:88115	339262	3	True				
ANR	355332	AssignmentExpression	ao -> o = 0xf0f70080		339262	0		=			
ANR	355333	PtrMemberAccess	ao -> o		339262	0					
ANR	355334	Identifier	ao		339262	0					
ANR	355335	Identifier	o		339262	1					
ANR	355336	PrimaryExpression	0xf0f70080		339262	1					
ANR	355337	ExpressionStatement	ao -> o |= num << 24	4195:3:88120:88138	339262	4	True				
ANR	355338	AssignmentExpression	ao -> o |= num << 24		339262	0		|=			
ANR	355339	PtrMemberAccess	ao -> o		339262	0					
ANR	355340	Identifier	ao		339262	0					
ANR	355341	Identifier	o		339262	1					
ANR	355342	ShiftExpression	num << 24		339262	1		<<			
ANR	355343	Identifier	num		339262	0					
ANR	355344	PrimaryExpression	24		339262	1					
ANR	355345	ReturnStatement	return 4 ;	4196:3:88143:88151	339262	5	True				
ANR	355346	PrimaryExpression	4		339262	0					
ANR	355347	BreakStatement	break ;	4198:3:88168:88173	339262	2	True				
ANR	355348	Label	default :	4199:2:88177:88184	339262	3	True				
ANR	355349	Identifier	default		339262	0					
ANR	355350	ReturnStatement	return - 1 ;	4200:3:88189:88198	339262	4	True				
ANR	355351	UnaryOperationExpression	- 1		339262	0					
ANR	355352	UnaryOperator	-		339262	0					
ANR	355353	PrimaryExpression	1		339262	1					
ANR	355354	ElseStatement	else		339262	0					
ANR	355355	IfStatement	"if ( ( m = opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT ) ) )"		339262	0					
ANR	355356	Condition	"m = opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT )"	4203:5:88217:88322	339262	0	True				
ANR	355357	AssignmentExpression	"m = opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT )"		339262	0		=			
ANR	355358	Identifier	m		339262	0					
ANR	355359	CallExpression	"opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT )"		339262	1					
ANR	355360	Callee	opmask		339262	0					
ANR	355361	Identifier	opmask		339262	0					
ANR	355362	ArgumentList	ao -> op		339262	1					
ANR	355363	Argument	ao -> op		339262	0					
ANR	355364	PtrMemberAccess	ao -> op		339262	0					
ANR	355365	Identifier	ao		339262	0					
ANR	355366	Identifier	op		339262	1					
ANR	355367	Argument	"""smla"""		339262	1					
ANR	355368	PrimaryExpression	"""smla"""		339262	0					
ANR	355369	Argument	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		339262	2					
ANR	355370	InclusiveOrExpression	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		339262	0		|			
ANR	355371	Identifier	BB_BIT		339262	0					
ANR	355372	InclusiveOrExpression	BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		339262	1		|			
ANR	355373	Identifier	BT_BIT		339262	0					
ANR	355374	InclusiveOrExpression	TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		339262	1		|			
ANR	355375	Identifier	TB_BIT		339262	0					
ANR	355376	InclusiveOrExpression	TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		339262	1		|			
ANR	355377	Identifier	TT_BIT		339262	0					
ANR	355378	InclusiveOrExpression	WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		339262	1		|			
ANR	355379	Identifier	WB_BIT		339262	0					
ANR	355380	InclusiveOrExpression	WT_BIT | L_BIT | D_BIT | X_BIT		339262	1		|			
ANR	355381	Identifier	WT_BIT		339262	0					
ANR	355382	InclusiveOrExpression	L_BIT | D_BIT | X_BIT		339262	1		|			
ANR	355383	Identifier	L_BIT		339262	0					
ANR	355384	InclusiveOrExpression	D_BIT | X_BIT		339262	1		|			
ANR	355385	Identifier	D_BIT		339262	0					
ANR	355386	Identifier	X_BIT		339262	1					
ANR	355387	CompoundStatement		2912:2:62470:62504	339262	1					
ANR	355388	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4204:2:88329:88363	339262	0	True				
ANR	355389	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355390	IdentifierDeclType	ut64		339262	0					
ANR	355391	Identifier	argt		339262	1					
ANR	355392	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355393	Identifier	argt		339262	0					
ANR	355394	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	355395	Callee	thumb_selector		339262	0					
ANR	355396	Identifier	thumb_selector		339262	0					
ANR	355397	ArgumentList	ao -> a		339262	1					
ANR	355398	Argument	ao -> a		339262	0					
ANR	355399	PtrMemberAccess	ao -> a		339262	0					
ANR	355400	Identifier	ao		339262	0					
ANR	355401	Identifier	a		339262	1					
ANR	355402	SwitchStatement	switch ( argt )		339262	1					
ANR	355403	Condition	argt	4205:10:88375:88378	339262	0	True				
ANR	355404	Identifier	argt		339262	0					
ANR	355405	CompoundStatement		2913:16:62522:62522	339262	1					
ANR	355406	Label	case THUMB_REG_REG_REG_REG :	4206:2:88385:88411	339262	0	True				
ANR	355407	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	355408	CompoundStatement		2918:3:62658:62686	339262	1					
ANR	355409	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4207:3:88418:88446	339262	0	True				
ANR	355410	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	355411	IdentifierDeclType	ut8		339262	0					
ANR	355412	Identifier	reg1		339262	1					
ANR	355413	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	355414	Identifier	reg1		339262	0					
ANR	355415	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	355416	Callee	getreg		339262	0					
ANR	355417	Identifier	getreg		339262	0					
ANR	355418	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	355419	Argument	ao -> a [ 0 ]		339262	0					
ANR	355420	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	355421	PtrMemberAccess	ao -> a		339262	0					
ANR	355422	Identifier	ao		339262	0					
ANR	355423	Identifier	a		339262	1					
ANR	355424	PrimaryExpression	0		339262	1					
ANR	355425	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4208:3:88451:88479	339262	1	True				
ANR	355426	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	355427	IdentifierDeclType	ut8		339262	0					
ANR	355428	Identifier	reg2		339262	1					
ANR	355429	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	355430	Identifier	reg2		339262	0					
ANR	355431	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	355432	Callee	getreg		339262	0					
ANR	355433	Identifier	getreg		339262	0					
ANR	355434	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	355435	Argument	ao -> a [ 1 ]		339262	0					
ANR	355436	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	355437	PtrMemberAccess	ao -> a		339262	0					
ANR	355438	Identifier	ao		339262	0					
ANR	355439	Identifier	a		339262	1					
ANR	355440	PrimaryExpression	1		339262	1					
ANR	355441	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4209:3:88484:88512	339262	2	True				
ANR	355442	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	355443	IdentifierDeclType	ut8		339262	0					
ANR	355444	Identifier	reg3		339262	1					
ANR	355445	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	355446	Identifier	reg3		339262	0					
ANR	355447	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	355448	Callee	getreg		339262	0					
ANR	355449	Identifier	getreg		339262	0					
ANR	355450	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	355451	Argument	ao -> a [ 2 ]		339262	0					
ANR	355452	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	355453	PtrMemberAccess	ao -> a		339262	0					
ANR	355454	Identifier	ao		339262	0					
ANR	355455	Identifier	a		339262	1					
ANR	355456	PrimaryExpression	2		339262	1					
ANR	355457	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4210:3:88517:88545	339262	3	True				
ANR	355458	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	355459	IdentifierDeclType	ut8		339262	0					
ANR	355460	Identifier	reg4		339262	1					
ANR	355461	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	355462	Identifier	reg4		339262	0					
ANR	355463	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	355464	Callee	getreg		339262	0					
ANR	355465	Identifier	getreg		339262	0					
ANR	355466	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	355467	Argument	ao -> a [ 3 ]		339262	0					
ANR	355468	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	355469	PtrMemberAccess	ao -> a		339262	0					
ANR	355470	Identifier	ao		339262	0					
ANR	355471	Identifier	a		339262	1					
ANR	355472	PrimaryExpression	3		339262	1					
ANR	355473	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) )		339262	4					
ANR	355474	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )	4212:7:88558:88631	339262	0	True				
ANR	355475	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		339262	0		||			
ANR	355476	RelationalExpression	reg1 > 15		339262	0		>			
ANR	355477	Identifier	reg1		339262	0					
ANR	355478	PrimaryExpression	15		339262	1					
ANR	355479	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		339262	1		||			
ANR	355480	RelationalExpression	reg2 > 15		339262	0		>			
ANR	355481	Identifier	reg2		339262	0					
ANR	355482	PrimaryExpression	15		339262	1					
ANR	355483	OrExpression	( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		339262	1		||			
ANR	355484	RelationalExpression	reg3 > 15		339262	0		>			
ANR	355485	Identifier	reg3		339262	0					
ANR	355486	PrimaryExpression	15		339262	1					
ANR	355487	OrExpression	( reg4 > 15 ) || ( m & DOTN_BIT )		339262	1		||			
ANR	355488	RelationalExpression	reg4 > 15		339262	0		>			
ANR	355489	Identifier	reg4		339262	0					
ANR	355490	PrimaryExpression	15		339262	1					
ANR	355491	BitAndExpression	m & DOTN_BIT		339262	1		&			
ANR	355492	Identifier	m		339262	0					
ANR	355493	Identifier	DOTN_BIT		339262	1					
ANR	355494	CompoundStatement		2920:83:62775:62775	339262	1					
ANR	355495	ReturnStatement	return - 1 ;	4213:4:88640:88649	339262	0	True				
ANR	355496	UnaryOperationExpression	- 1		339262	0					
ANR	355497	UnaryOperator	-		339262	0					
ANR	355498	PrimaryExpression	1		339262	1					
ANR	355499	IfStatement	if ( m & L_BIT )		339262	5					
ANR	355500	Condition	m & L_BIT	4215:7:88663:88671	339262	0	True				
ANR	355501	BitAndExpression	m & L_BIT		339262	0		&			
ANR	355502	Identifier	m		339262	0					
ANR	355503	Identifier	L_BIT		339262	1					
ANR	355504	CompoundStatement		2923:18:62815:62815	339262	1					
ANR	355505	IfStatement	if ( m & BB_BIT )		339262	0					
ANR	355506	Condition	m & BB_BIT	4216:8:88684:88693	339262	0	True				
ANR	355507	BitAndExpression	m & BB_BIT		339262	0		&			
ANR	355508	Identifier	m		339262	0					
ANR	355509	Identifier	BB_BIT		339262	1					
ANR	355510	CompoundStatement		2924:20:62837:62837	339262	1					
ANR	355511	ExpressionStatement	ao -> o = 0xc0fb8000	4217:5:88703:88721	339262	0	True				
ANR	355512	AssignmentExpression	ao -> o = 0xc0fb8000		339262	0		=			
ANR	355513	PtrMemberAccess	ao -> o		339262	0					
ANR	355514	Identifier	ao		339262	0					
ANR	355515	Identifier	o		339262	1					
ANR	355516	PrimaryExpression	0xc0fb8000		339262	1					
ANR	355517	ElseStatement	else		339262	0					
ANR	355518	IfStatement	if ( m & BT_BIT )		339262	0					
ANR	355519	Condition	m & BT_BIT	4219:8:88742:88751	339262	0	True				
ANR	355520	BitAndExpression	m & BT_BIT		339262	0		&			
ANR	355521	Identifier	m		339262	0					
ANR	355522	Identifier	BT_BIT		339262	1					
ANR	355523	CompoundStatement		2927:20:62895:62895	339262	1					
ANR	355524	ExpressionStatement	ao -> o = 0xc0fb9000	4220:5:88761:88779	339262	0	True				
ANR	355525	AssignmentExpression	ao -> o = 0xc0fb9000		339262	0		=			
ANR	355526	PtrMemberAccess	ao -> o		339262	0					
ANR	355527	Identifier	ao		339262	0					
ANR	355528	Identifier	o		339262	1					
ANR	355529	PrimaryExpression	0xc0fb9000		339262	1					
ANR	355530	ElseStatement	else		339262	0					
ANR	355531	IfStatement	if ( m & TB_BIT )		339262	0					
ANR	355532	Condition	m & TB_BIT	4222:8:88800:88809	339262	0	True				
ANR	355533	BitAndExpression	m & TB_BIT		339262	0		&			
ANR	355534	Identifier	m		339262	0					
ANR	355535	Identifier	TB_BIT		339262	1					
ANR	355536	CompoundStatement		2930:20:62953:62953	339262	1					
ANR	355537	ExpressionStatement	ao -> o = 0xc0fba000	4223:5:88819:88837	339262	0	True				
ANR	355538	AssignmentExpression	ao -> o = 0xc0fba000		339262	0		=			
ANR	355539	PtrMemberAccess	ao -> o		339262	0					
ANR	355540	Identifier	ao		339262	0					
ANR	355541	Identifier	o		339262	1					
ANR	355542	PrimaryExpression	0xc0fba000		339262	1					
ANR	355543	ElseStatement	else		339262	0					
ANR	355544	IfStatement	if ( m & TT_BIT )		339262	0					
ANR	355545	Condition	m & TT_BIT	4225:8:88858:88867	339262	0	True				
ANR	355546	BitAndExpression	m & TT_BIT		339262	0		&			
ANR	355547	Identifier	m		339262	0					
ANR	355548	Identifier	TT_BIT		339262	1					
ANR	355549	CompoundStatement		2933:20:63011:63011	339262	1					
ANR	355550	ExpressionStatement	ao -> o = 0xc0fbb000	4226:5:88877:88895	339262	0	True				
ANR	355551	AssignmentExpression	ao -> o = 0xc0fbb000		339262	0		=			
ANR	355552	PtrMemberAccess	ao -> o		339262	0					
ANR	355553	Identifier	ao		339262	0					
ANR	355554	Identifier	o		339262	1					
ANR	355555	PrimaryExpression	0xc0fbb000		339262	1					
ANR	355556	ElseStatement	else		339262	0					
ANR	355557	IfStatement	if ( m & D_BIT )		339262	0					
ANR	355558	Condition	m & D_BIT	4228:8:88916:88924	339262	0	True				
ANR	355559	BitAndExpression	m & D_BIT		339262	0		&			
ANR	355560	Identifier	m		339262	0					
ANR	355561	Identifier	D_BIT		339262	1					
ANR	355562	CompoundStatement		2936:19:63068:63068	339262	1					
ANR	355563	ExpressionStatement	ao -> o = 0xc0fbc000	4229:5:88934:88952	339262	0	True				
ANR	355564	AssignmentExpression	ao -> o = 0xc0fbc000		339262	0		=			
ANR	355565	PtrMemberAccess	ao -> o		339262	0					
ANR	355566	Identifier	ao		339262	0					
ANR	355567	Identifier	o		339262	1					
ANR	355568	PrimaryExpression	0xc0fbc000		339262	1					
ANR	355569	IfStatement	if ( m & X_BIT )		339262	1					
ANR	355570	Condition	m & X_BIT	4230:9:88963:88971	339262	0	True				
ANR	355571	BitAndExpression	m & X_BIT		339262	0		&			
ANR	355572	Identifier	m		339262	0					
ANR	355573	Identifier	X_BIT		339262	1					
ANR	355574	CompoundStatement		2938:20:63115:63115	339262	1					
ANR	355575	ExpressionStatement	ao -> o |= 1 << 12	4231:6:88982:88998	339262	0	True				
ANR	355576	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	355577	PtrMemberAccess	ao -> o		339262	0					
ANR	355578	Identifier	ao		339262	0					
ANR	355579	Identifier	o		339262	1					
ANR	355580	ShiftExpression	1 << 12		339262	1		<<			
ANR	355581	PrimaryExpression	1		339262	0					
ANR	355582	PrimaryExpression	12		339262	1					
ANR	355583	ElseStatement	else		339262	0					
ANR	355584	CompoundStatement		2941:11:63159:63159	339262	0					
ANR	355585	ExpressionStatement	ao -> o = 0xc0fb0000	4234:5:89025:89043	339262	0	True				
ANR	355586	AssignmentExpression	ao -> o = 0xc0fb0000		339262	0		=			
ANR	355587	PtrMemberAccess	ao -> o		339262	0					
ANR	355588	Identifier	ao		339262	0					
ANR	355589	Identifier	o		339262	1					
ANR	355590	PrimaryExpression	0xc0fb0000		339262	1					
ANR	355591	ExpressionStatement	ao -> o |= reg1 << 4	4236:4:89055:89073	339262	1	True				
ANR	355592	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	355593	PtrMemberAccess	ao -> o		339262	0					
ANR	355594	Identifier	ao		339262	0					
ANR	355595	Identifier	o		339262	1					
ANR	355596	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	355597	Identifier	reg1		339262	0					
ANR	355598	PrimaryExpression	4		339262	1					
ANR	355599	ExpressionStatement	ao -> o |= reg2	4237:4:89079:89092	339262	2	True				
ANR	355600	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	355601	PtrMemberAccess	ao -> o		339262	0					
ANR	355602	Identifier	ao		339262	0					
ANR	355603	Identifier	o		339262	1					
ANR	355604	Identifier	reg2		339262	1					
ANR	355605	ExpressionStatement	ao -> o |= reg3 << 24	4238:4:89098:89117	339262	3	True				
ANR	355606	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	355607	PtrMemberAccess	ao -> o		339262	0					
ANR	355608	Identifier	ao		339262	0					
ANR	355609	Identifier	o		339262	1					
ANR	355610	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	355611	Identifier	reg3		339262	0					
ANR	355612	PrimaryExpression	24		339262	1					
ANR	355613	ExpressionStatement	ao -> o |= reg4 << 8	4239:4:89123:89141	339262	4	True				
ANR	355614	AssignmentExpression	ao -> o |= reg4 << 8		339262	0		|=			
ANR	355615	PtrMemberAccess	ao -> o		339262	0					
ANR	355616	Identifier	ao		339262	0					
ANR	355617	Identifier	o		339262	1					
ANR	355618	ShiftExpression	reg4 << 8		339262	1		<<			
ANR	355619	Identifier	reg4		339262	0					
ANR	355620	PrimaryExpression	8		339262	1					
ANR	355621	ReturnStatement	return 4 ;	4240:4:89147:89155	339262	5	True				
ANR	355622	PrimaryExpression	4		339262	0					
ANR	355623	IfStatement	if ( m & BB_BIT )		339262	6					
ANR	355624	Condition	m & BB_BIT	4242:7:89169:89178	339262	0	True				
ANR	355625	BitAndExpression	m & BB_BIT		339262	0		&			
ANR	355626	Identifier	m		339262	0					
ANR	355627	Identifier	BB_BIT		339262	1					
ANR	355628	CompoundStatement		2950:19:63322:63322	339262	1					
ANR	355629	ExpressionStatement	ao -> o = 0x10fb0000	4243:4:89187:89205	339262	0	True				
ANR	355630	AssignmentExpression	ao -> o = 0x10fb0000		339262	0		=			
ANR	355631	PtrMemberAccess	ao -> o		339262	0					
ANR	355632	Identifier	ao		339262	0					
ANR	355633	Identifier	o		339262	1					
ANR	355634	PrimaryExpression	0x10fb0000		339262	1					
ANR	355635	ExpressionStatement	ao -> o |= reg4 << 4	4244:4:89211:89229	339262	1	True				
ANR	355636	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355637	PtrMemberAccess	ao -> o		339262	0					
ANR	355638	Identifier	ao		339262	0					
ANR	355639	Identifier	o		339262	1					
ANR	355640	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355641	Identifier	reg4		339262	0					
ANR	355642	PrimaryExpression	4		339262	1					
ANR	355643	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4245:4:89235:89271	339262	2	True				
ANR	355644	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355645	Callee	std_32bit_3reg		339262	0					
ANR	355646	Identifier	std_32bit_3reg		339262	0					
ANR	355647	ArgumentList	ao		339262	1					
ANR	355648	Argument	ao		339262	0					
ANR	355649	Identifier	ao		339262	0					
ANR	355650	Argument	m		339262	1					
ANR	355651	Identifier	m		339262	0					
ANR	355652	Argument	false		339262	2					
ANR	355653	Identifier	false		339262	0					
ANR	355654	IfStatement	if ( m & BT_BIT )		339262	7					
ANR	355655	Condition	m & BT_BIT	4247:7:89285:89294	339262	0	True				
ANR	355656	BitAndExpression	m & BT_BIT		339262	0		&			
ANR	355657	Identifier	m		339262	0					
ANR	355658	Identifier	BT_BIT		339262	1					
ANR	355659	CompoundStatement		2955:19:63438:63438	339262	1					
ANR	355660	ExpressionStatement	ao -> o = 0x10fb1000	4248:4:89303:89321	339262	0	True				
ANR	355661	AssignmentExpression	ao -> o = 0x10fb1000		339262	0		=			
ANR	355662	PtrMemberAccess	ao -> o		339262	0					
ANR	355663	Identifier	ao		339262	0					
ANR	355664	Identifier	o		339262	1					
ANR	355665	PrimaryExpression	0x10fb1000		339262	1					
ANR	355666	ExpressionStatement	ao -> o |= reg4 << 4	4249:4:89327:89345	339262	1	True				
ANR	355667	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355668	PtrMemberAccess	ao -> o		339262	0					
ANR	355669	Identifier	ao		339262	0					
ANR	355670	Identifier	o		339262	1					
ANR	355671	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355672	Identifier	reg4		339262	0					
ANR	355673	PrimaryExpression	4		339262	1					
ANR	355674	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4250:4:89351:89387	339262	2	True				
ANR	355675	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355676	Callee	std_32bit_3reg		339262	0					
ANR	355677	Identifier	std_32bit_3reg		339262	0					
ANR	355678	ArgumentList	ao		339262	1					
ANR	355679	Argument	ao		339262	0					
ANR	355680	Identifier	ao		339262	0					
ANR	355681	Argument	m		339262	1					
ANR	355682	Identifier	m		339262	0					
ANR	355683	Argument	false		339262	2					
ANR	355684	Identifier	false		339262	0					
ANR	355685	IfStatement	if ( m & TB_BIT )		339262	8					
ANR	355686	Condition	m & TB_BIT	4252:7:89401:89410	339262	0	True				
ANR	355687	BitAndExpression	m & TB_BIT		339262	0		&			
ANR	355688	Identifier	m		339262	0					
ANR	355689	Identifier	TB_BIT		339262	1					
ANR	355690	CompoundStatement		2960:19:63554:63554	339262	1					
ANR	355691	ExpressionStatement	ao -> o = 0x10fb2000	4253:4:89419:89437	339262	0	True				
ANR	355692	AssignmentExpression	ao -> o = 0x10fb2000		339262	0		=			
ANR	355693	PtrMemberAccess	ao -> o		339262	0					
ANR	355694	Identifier	ao		339262	0					
ANR	355695	Identifier	o		339262	1					
ANR	355696	PrimaryExpression	0x10fb2000		339262	1					
ANR	355697	ExpressionStatement	ao -> o |= reg4 << 4	4254:4:89443:89461	339262	1	True				
ANR	355698	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355699	PtrMemberAccess	ao -> o		339262	0					
ANR	355700	Identifier	ao		339262	0					
ANR	355701	Identifier	o		339262	1					
ANR	355702	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355703	Identifier	reg4		339262	0					
ANR	355704	PrimaryExpression	4		339262	1					
ANR	355705	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4255:4:89467:89503	339262	2	True				
ANR	355706	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355707	Callee	std_32bit_3reg		339262	0					
ANR	355708	Identifier	std_32bit_3reg		339262	0					
ANR	355709	ArgumentList	ao		339262	1					
ANR	355710	Argument	ao		339262	0					
ANR	355711	Identifier	ao		339262	0					
ANR	355712	Argument	m		339262	1					
ANR	355713	Identifier	m		339262	0					
ANR	355714	Argument	false		339262	2					
ANR	355715	Identifier	false		339262	0					
ANR	355716	IfStatement	if ( m & TT_BIT )		339262	9					
ANR	355717	Condition	m & TT_BIT	4257:7:89517:89526	339262	0	True				
ANR	355718	BitAndExpression	m & TT_BIT		339262	0		&			
ANR	355719	Identifier	m		339262	0					
ANR	355720	Identifier	TT_BIT		339262	1					
ANR	355721	CompoundStatement		2965:19:63670:63670	339262	1					
ANR	355722	ExpressionStatement	ao -> o = 0x10fb3000	4258:4:89535:89553	339262	0	True				
ANR	355723	AssignmentExpression	ao -> o = 0x10fb3000		339262	0		=			
ANR	355724	PtrMemberAccess	ao -> o		339262	0					
ANR	355725	Identifier	ao		339262	0					
ANR	355726	Identifier	o		339262	1					
ANR	355727	PrimaryExpression	0x10fb3000		339262	1					
ANR	355728	ExpressionStatement	ao -> o |= reg4 << 4	4259:4:89559:89577	339262	1	True				
ANR	355729	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355730	PtrMemberAccess	ao -> o		339262	0					
ANR	355731	Identifier	ao		339262	0					
ANR	355732	Identifier	o		339262	1					
ANR	355733	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355734	Identifier	reg4		339262	0					
ANR	355735	PrimaryExpression	4		339262	1					
ANR	355736	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4260:4:89583:89619	339262	2	True				
ANR	355737	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355738	Callee	std_32bit_3reg		339262	0					
ANR	355739	Identifier	std_32bit_3reg		339262	0					
ANR	355740	ArgumentList	ao		339262	1					
ANR	355741	Argument	ao		339262	0					
ANR	355742	Identifier	ao		339262	0					
ANR	355743	Argument	m		339262	1					
ANR	355744	Identifier	m		339262	0					
ANR	355745	Argument	false		339262	2					
ANR	355746	Identifier	false		339262	0					
ANR	355747	IfStatement	if ( m & D_BIT )		339262	10					
ANR	355748	Condition	m & D_BIT	4262:7:89633:89641	339262	0	True				
ANR	355749	BitAndExpression	m & D_BIT		339262	0		&			
ANR	355750	Identifier	m		339262	0					
ANR	355751	Identifier	D_BIT		339262	1					
ANR	355752	CompoundStatement		2970:18:63785:63785	339262	1					
ANR	355753	ExpressionStatement	ao -> o = 0x20fb0000	4263:4:89650:89668	339262	0	True				
ANR	355754	AssignmentExpression	ao -> o = 0x20fb0000		339262	0		=			
ANR	355755	PtrMemberAccess	ao -> o		339262	0					
ANR	355756	Identifier	ao		339262	0					
ANR	355757	Identifier	o		339262	1					
ANR	355758	PrimaryExpression	0x20fb0000		339262	1					
ANR	355759	IfStatement	if ( m & X_BIT )		339262	1					
ANR	355760	Condition	m & X_BIT	4264:8:89678:89686	339262	0	True				
ANR	355761	BitAndExpression	m & X_BIT		339262	0		&			
ANR	355762	Identifier	m		339262	0					
ANR	355763	Identifier	X_BIT		339262	1					
ANR	355764	CompoundStatement		2972:19:63830:63830	339262	1					
ANR	355765	ExpressionStatement	ao -> o |= 1 << 12	4265:5:89696:89712	339262	0	True				
ANR	355766	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	355767	PtrMemberAccess	ao -> o		339262	0					
ANR	355768	Identifier	ao		339262	0					
ANR	355769	Identifier	o		339262	1					
ANR	355770	ShiftExpression	1 << 12		339262	1		<<			
ANR	355771	PrimaryExpression	1		339262	0					
ANR	355772	PrimaryExpression	12		339262	1					
ANR	355773	ExpressionStatement	ao -> o |= reg4 << 4	4267:4:89724:89742	339262	2	True				
ANR	355774	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355775	PtrMemberAccess	ao -> o		339262	0					
ANR	355776	Identifier	ao		339262	0					
ANR	355777	Identifier	o		339262	1					
ANR	355778	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355779	Identifier	reg4		339262	0					
ANR	355780	PrimaryExpression	4		339262	1					
ANR	355781	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4268:4:89748:89784	339262	3	True				
ANR	355782	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355783	Callee	std_32bit_3reg		339262	0					
ANR	355784	Identifier	std_32bit_3reg		339262	0					
ANR	355785	ArgumentList	ao		339262	1					
ANR	355786	Argument	ao		339262	0					
ANR	355787	Identifier	ao		339262	0					
ANR	355788	Argument	m		339262	1					
ANR	355789	Identifier	m		339262	0					
ANR	355790	Argument	false		339262	2					
ANR	355791	Identifier	false		339262	0					
ANR	355792	IfStatement	if ( m & WB_BIT )		339262	11					
ANR	355793	Condition	m & WB_BIT	4270:7:89798:89807	339262	0	True				
ANR	355794	BitAndExpression	m & WB_BIT		339262	0		&			
ANR	355795	Identifier	m		339262	0					
ANR	355796	Identifier	WB_BIT		339262	1					
ANR	355797	CompoundStatement		2978:19:63951:63951	339262	1					
ANR	355798	ExpressionStatement	ao -> o = 0x30fb0000	4271:4:89816:89834	339262	0	True				
ANR	355799	AssignmentExpression	ao -> o = 0x30fb0000		339262	0		=			
ANR	355800	PtrMemberAccess	ao -> o		339262	0					
ANR	355801	Identifier	ao		339262	0					
ANR	355802	Identifier	o		339262	1					
ANR	355803	PrimaryExpression	0x30fb0000		339262	1					
ANR	355804	ExpressionStatement	ao -> o |= reg4 << 4	4272:4:89840:89858	339262	1	True				
ANR	355805	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355806	PtrMemberAccess	ao -> o		339262	0					
ANR	355807	Identifier	ao		339262	0					
ANR	355808	Identifier	o		339262	1					
ANR	355809	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355810	Identifier	reg4		339262	0					
ANR	355811	PrimaryExpression	4		339262	1					
ANR	355812	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4273:4:89864:89900	339262	2	True				
ANR	355813	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355814	Callee	std_32bit_3reg		339262	0					
ANR	355815	Identifier	std_32bit_3reg		339262	0					
ANR	355816	ArgumentList	ao		339262	1					
ANR	355817	Argument	ao		339262	0					
ANR	355818	Identifier	ao		339262	0					
ANR	355819	Argument	m		339262	1					
ANR	355820	Identifier	m		339262	0					
ANR	355821	Argument	false		339262	2					
ANR	355822	Identifier	false		339262	0					
ANR	355823	IfStatement	if ( m & WT_BIT )		339262	12					
ANR	355824	Condition	m & WT_BIT	4275:7:89914:89923	339262	0	True				
ANR	355825	BitAndExpression	m & WT_BIT		339262	0		&			
ANR	355826	Identifier	m		339262	0					
ANR	355827	Identifier	WT_BIT		339262	1					
ANR	355828	CompoundStatement		2983:19:64067:64067	339262	1					
ANR	355829	ExpressionStatement	ao -> o = 0x30fb1000	4276:4:89932:89950	339262	0	True				
ANR	355830	AssignmentExpression	ao -> o = 0x30fb1000		339262	0		=			
ANR	355831	PtrMemberAccess	ao -> o		339262	0					
ANR	355832	Identifier	ao		339262	0					
ANR	355833	Identifier	o		339262	1					
ANR	355834	PrimaryExpression	0x30fb1000		339262	1					
ANR	355835	ExpressionStatement	ao -> o |= reg4 << 4	4277:4:89956:89974	339262	1	True				
ANR	355836	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355837	PtrMemberAccess	ao -> o		339262	0					
ANR	355838	Identifier	ao		339262	0					
ANR	355839	Identifier	o		339262	1					
ANR	355840	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355841	Identifier	reg4		339262	0					
ANR	355842	PrimaryExpression	4		339262	1					
ANR	355843	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4278:4:89980:90016	339262	2	True				
ANR	355844	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355845	Callee	std_32bit_3reg		339262	0					
ANR	355846	Identifier	std_32bit_3reg		339262	0					
ANR	355847	ArgumentList	ao		339262	1					
ANR	355848	Argument	ao		339262	0					
ANR	355849	Identifier	ao		339262	0					
ANR	355850	Argument	m		339262	1					
ANR	355851	Identifier	m		339262	0					
ANR	355852	Argument	false		339262	2					
ANR	355853	Identifier	false		339262	0					
ANR	355854	ReturnStatement	return - 1 ;	4280:3:90026:90035	339262	13	True				
ANR	355855	UnaryOperationExpression	- 1		339262	0					
ANR	355856	UnaryOperator	-		339262	0					
ANR	355857	PrimaryExpression	1		339262	1					
ANR	355858	BreakStatement	break ;	4282:3:90052:90057	339262	2	True				
ANR	355859	Label	default :	4283:2:90061:90068	339262	3	True				
ANR	355860	Identifier	default		339262	0					
ANR	355861	ReturnStatement	return - 1 ;	4284:3:90073:90082	339262	4	True				
ANR	355862	UnaryOperationExpression	- 1		339262	0					
ANR	355863	UnaryOperator	-		339262	0					
ANR	355864	PrimaryExpression	1		339262	1					
ANR	355865	ElseStatement	else		339262	0					
ANR	355866	IfStatement	"if ( ( m = opmask ( ao -> op , ""smlsd"" , X_BIT ) ) )"		339262	0					
ANR	355867	Condition	"m = opmask ( ao -> op , ""smlsd"" , X_BIT )"	4287:5:90101:90137	339262	0	True				
ANR	355868	AssignmentExpression	"m = opmask ( ao -> op , ""smlsd"" , X_BIT )"		339262	0		=			
ANR	355869	Identifier	m		339262	0					
ANR	355870	CallExpression	"opmask ( ao -> op , ""smlsd"" , X_BIT )"		339262	1					
ANR	355871	Callee	opmask		339262	0					
ANR	355872	Identifier	opmask		339262	0					
ANR	355873	ArgumentList	ao -> op		339262	1					
ANR	355874	Argument	ao -> op		339262	0					
ANR	355875	PtrMemberAccess	ao -> op		339262	0					
ANR	355876	Identifier	ao		339262	0					
ANR	355877	Identifier	op		339262	1					
ANR	355878	Argument	"""smlsd"""		339262	1					
ANR	355879	PrimaryExpression	"""smlsd"""		339262	0					
ANR	355880	Argument	X_BIT		339262	2					
ANR	355881	Identifier	X_BIT		339262	0					
ANR	355882	CompoundStatement		2996:2:64285:64319	339262	1					
ANR	355883	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4288:2:90144:90178	339262	0	True				
ANR	355884	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355885	IdentifierDeclType	ut64		339262	0					
ANR	355886	Identifier	argt		339262	1					
ANR	355887	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355888	Identifier	argt		339262	0					
ANR	355889	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	355890	Callee	thumb_selector		339262	0					
ANR	355891	Identifier	thumb_selector		339262	0					
ANR	355892	ArgumentList	ao -> a		339262	1					
ANR	355893	Argument	ao -> a		339262	0					
ANR	355894	PtrMemberAccess	ao -> a		339262	0					
ANR	355895	Identifier	ao		339262	0					
ANR	355896	Identifier	a		339262	1					
ANR	355897	SwitchStatement	switch ( argt )		339262	1					
ANR	355898	Condition	argt	4289:10:90190:90193	339262	0	True				
ANR	355899	Identifier	argt		339262	0					
ANR	355900	CompoundStatement		2997:16:64337:64337	339262	1					
ANR	355901	Label	case THUMB_REG_REG_REG_REG :	4290:2:90200:90226	339262	0	True				
ANR	355902	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	355903	CompoundStatement		2999:3:64374:64402	339262	1					
ANR	355904	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4291:3:90233:90261	339262	0	True				
ANR	355905	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	355906	IdentifierDeclType	ut8		339262	0					
ANR	355907	Identifier	reg4		339262	1					
ANR	355908	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	355909	Identifier	reg4		339262	0					
ANR	355910	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	355911	Callee	getreg		339262	0					
ANR	355912	Identifier	getreg		339262	0					
ANR	355913	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	355914	Argument	ao -> a [ 3 ]		339262	0					
ANR	355915	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	355916	PtrMemberAccess	ao -> a		339262	0					
ANR	355917	Identifier	ao		339262	0					
ANR	355918	Identifier	a		339262	1					
ANR	355919	PrimaryExpression	3		339262	1					
ANR	355920	IfStatement	if ( reg4 > 15 )		339262	1					
ANR	355921	Condition	reg4 > 15	4293:7:90271:90279	339262	0	True				
ANR	355922	RelationalExpression	reg4 > 15		339262	0		>			
ANR	355923	Identifier	reg4		339262	0					
ANR	355924	PrimaryExpression	15		339262	1					
ANR	355925	CompoundStatement		3001:18:64423:64423	339262	1					
ANR	355926	ReturnStatement	return - 1 ;	4294:4:90288:90297	339262	0	True				
ANR	355927	UnaryOperationExpression	- 1		339262	0					
ANR	355928	UnaryOperator	-		339262	0					
ANR	355929	PrimaryExpression	1		339262	1					
ANR	355930	ExpressionStatement	ao -> o = 0x40fb0000	4296:3:90307:90325	339262	2	True				
ANR	355931	AssignmentExpression	ao -> o = 0x40fb0000		339262	0		=			
ANR	355932	PtrMemberAccess	ao -> o		339262	0					
ANR	355933	Identifier	ao		339262	0					
ANR	355934	Identifier	o		339262	1					
ANR	355935	PrimaryExpression	0x40fb0000		339262	1					
ANR	355936	IfStatement	if ( m & X_BIT )		339262	3					
ANR	355937	Condition	m & X_BIT	4297:7:90334:90342	339262	0	True				
ANR	355938	BitAndExpression	m & X_BIT		339262	0		&			
ANR	355939	Identifier	m		339262	0					
ANR	355940	Identifier	X_BIT		339262	1					
ANR	355941	CompoundStatement		3005:18:64486:64486	339262	1					
ANR	355942	ExpressionStatement	ao -> o |= 1 << 12	4298:4:90351:90367	339262	0	True				
ANR	355943	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	355944	PtrMemberAccess	ao -> o		339262	0					
ANR	355945	Identifier	ao		339262	0					
ANR	355946	Identifier	o		339262	1					
ANR	355947	ShiftExpression	1 << 12		339262	1		<<			
ANR	355948	PrimaryExpression	1		339262	0					
ANR	355949	PrimaryExpression	12		339262	1					
ANR	355950	ExpressionStatement	ao -> o |= reg4 << 4	4300:3:90377:90395	339262	4	True				
ANR	355951	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	355952	PtrMemberAccess	ao -> o		339262	0					
ANR	355953	Identifier	ao		339262	0					
ANR	355954	Identifier	o		339262	1					
ANR	355955	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	355956	Identifier	reg4		339262	0					
ANR	355957	PrimaryExpression	4		339262	1					
ANR	355958	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4301:3:90400:90436	339262	5	True				
ANR	355959	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	355960	Callee	std_32bit_3reg		339262	0					
ANR	355961	Identifier	std_32bit_3reg		339262	0					
ANR	355962	ArgumentList	ao		339262	1					
ANR	355963	Argument	ao		339262	0					
ANR	355964	Identifier	ao		339262	0					
ANR	355965	Argument	m		339262	1					
ANR	355966	Identifier	m		339262	0					
ANR	355967	Argument	false		339262	2					
ANR	355968	Identifier	false		339262	0					
ANR	355969	BreakStatement	break ;	4303:3:90453:90458	339262	2	True				
ANR	355970	Label	default :	4304:2:90462:90469	339262	3	True				
ANR	355971	Identifier	default		339262	0					
ANR	355972	ReturnStatement	return - 1 ;	4305:3:90474:90483	339262	4	True				
ANR	355973	UnaryOperationExpression	- 1		339262	0					
ANR	355974	UnaryOperator	-		339262	0					
ANR	355975	PrimaryExpression	1		339262	1					
ANR	355976	ElseStatement	else		339262	0					
ANR	355977	IfStatement	"if ( ( m = opmask ( ao -> op , ""smlsld"" , X_BIT ) ) )"		339262	0					
ANR	355978	Condition	"m = opmask ( ao -> op , ""smlsld"" , X_BIT )"	4308:5:90502:90539	339262	0	True				
ANR	355979	AssignmentExpression	"m = opmask ( ao -> op , ""smlsld"" , X_BIT )"		339262	0		=			
ANR	355980	Identifier	m		339262	0					
ANR	355981	CallExpression	"opmask ( ao -> op , ""smlsld"" , X_BIT )"		339262	1					
ANR	355982	Callee	opmask		339262	0					
ANR	355983	Identifier	opmask		339262	0					
ANR	355984	ArgumentList	ao -> op		339262	1					
ANR	355985	Argument	ao -> op		339262	0					
ANR	355986	PtrMemberAccess	ao -> op		339262	0					
ANR	355987	Identifier	ao		339262	0					
ANR	355988	Identifier	op		339262	1					
ANR	355989	Argument	"""smlsld"""		339262	1					
ANR	355990	PrimaryExpression	"""smlsld"""		339262	0					
ANR	355991	Argument	X_BIT		339262	2					
ANR	355992	Identifier	X_BIT		339262	0					
ANR	355993	CompoundStatement		3017:2:64687:64721	339262	1					
ANR	355994	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4309:2:90546:90580	339262	0	True				
ANR	355995	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	355996	IdentifierDeclType	ut64		339262	0					
ANR	355997	Identifier	argt		339262	1					
ANR	355998	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	355999	Identifier	argt		339262	0					
ANR	356000	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356001	Callee	thumb_selector		339262	0					
ANR	356002	Identifier	thumb_selector		339262	0					
ANR	356003	ArgumentList	ao -> a		339262	1					
ANR	356004	Argument	ao -> a		339262	0					
ANR	356005	PtrMemberAccess	ao -> a		339262	0					
ANR	356006	Identifier	ao		339262	0					
ANR	356007	Identifier	a		339262	1					
ANR	356008	SwitchStatement	switch ( argt )		339262	1					
ANR	356009	Condition	argt	4310:10:90592:90595	339262	0	True				
ANR	356010	Identifier	argt		339262	0					
ANR	356011	CompoundStatement		3018:16:64739:64739	339262	1					
ANR	356012	Label	case THUMB_REG_REG_REG_REG :	4311:2:90602:90628	339262	0	True				
ANR	356013	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	356014	CompoundStatement		3023:3:64875:64903	339262	1					
ANR	356015	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4312:3:90635:90663	339262	0	True				
ANR	356016	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	356017	IdentifierDeclType	ut8		339262	0					
ANR	356018	Identifier	reg1		339262	1					
ANR	356019	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	356020	Identifier	reg1		339262	0					
ANR	356021	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	356022	Callee	getreg		339262	0					
ANR	356023	Identifier	getreg		339262	0					
ANR	356024	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	356025	Argument	ao -> a [ 0 ]		339262	0					
ANR	356026	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	356027	PtrMemberAccess	ao -> a		339262	0					
ANR	356028	Identifier	ao		339262	0					
ANR	356029	Identifier	a		339262	1					
ANR	356030	PrimaryExpression	0		339262	1					
ANR	356031	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4313:3:90668:90696	339262	1	True				
ANR	356032	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	356033	IdentifierDeclType	ut8		339262	0					
ANR	356034	Identifier	reg2		339262	1					
ANR	356035	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	356036	Identifier	reg2		339262	0					
ANR	356037	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	356038	Callee	getreg		339262	0					
ANR	356039	Identifier	getreg		339262	0					
ANR	356040	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	356041	Argument	ao -> a [ 1 ]		339262	0					
ANR	356042	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	356043	PtrMemberAccess	ao -> a		339262	0					
ANR	356044	Identifier	ao		339262	0					
ANR	356045	Identifier	a		339262	1					
ANR	356046	PrimaryExpression	1		339262	1					
ANR	356047	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4314:3:90701:90729	339262	2	True				
ANR	356048	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	356049	IdentifierDeclType	ut8		339262	0					
ANR	356050	Identifier	reg3		339262	1					
ANR	356051	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	356052	Identifier	reg3		339262	0					
ANR	356053	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	356054	Callee	getreg		339262	0					
ANR	356055	Identifier	getreg		339262	0					
ANR	356056	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	356057	Argument	ao -> a [ 2 ]		339262	0					
ANR	356058	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	356059	PtrMemberAccess	ao -> a		339262	0					
ANR	356060	Identifier	ao		339262	0					
ANR	356061	Identifier	a		339262	1					
ANR	356062	PrimaryExpression	2		339262	1					
ANR	356063	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4315:3:90734:90762	339262	3	True				
ANR	356064	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	356065	IdentifierDeclType	ut8		339262	0					
ANR	356066	Identifier	reg4		339262	1					
ANR	356067	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	356068	Identifier	reg4		339262	0					
ANR	356069	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	356070	Callee	getreg		339262	0					
ANR	356071	Identifier	getreg		339262	0					
ANR	356072	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	356073	Argument	ao -> a [ 3 ]		339262	0					
ANR	356074	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	356075	PtrMemberAccess	ao -> a		339262	0					
ANR	356076	Identifier	ao		339262	0					
ANR	356077	Identifier	a		339262	1					
ANR	356078	PrimaryExpression	3		339262	1					
ANR	356079	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) )		339262	4					
ANR	356080	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )	4317:7:90772:90845	339262	0	True				
ANR	356081	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		339262	0		||			
ANR	356082	RelationalExpression	reg1 > 15		339262	0		>			
ANR	356083	Identifier	reg1		339262	0					
ANR	356084	PrimaryExpression	15		339262	1					
ANR	356085	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		339262	1		||			
ANR	356086	RelationalExpression	reg2 > 15		339262	0		>			
ANR	356087	Identifier	reg2		339262	0					
ANR	356088	PrimaryExpression	15		339262	1					
ANR	356089	OrExpression	( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		339262	1		||			
ANR	356090	RelationalExpression	reg3 > 15		339262	0		>			
ANR	356091	Identifier	reg3		339262	0					
ANR	356092	PrimaryExpression	15		339262	1					
ANR	356093	OrExpression	( reg4 > 15 ) || ( m & DOTN_BIT )		339262	1		||			
ANR	356094	RelationalExpression	reg4 > 15		339262	0		>			
ANR	356095	Identifier	reg4		339262	0					
ANR	356096	PrimaryExpression	15		339262	1					
ANR	356097	BitAndExpression	m & DOTN_BIT		339262	1		&			
ANR	356098	Identifier	m		339262	0					
ANR	356099	Identifier	DOTN_BIT		339262	1					
ANR	356100	CompoundStatement		3025:83:64989:64989	339262	1					
ANR	356101	ReturnStatement	return - 1 ;	4318:4:90854:90863	339262	0	True				
ANR	356102	UnaryOperationExpression	- 1		339262	0					
ANR	356103	UnaryOperator	-		339262	0					
ANR	356104	PrimaryExpression	1		339262	1					
ANR	356105	ExpressionStatement	ao -> o = 0xd0fbc000	4320:3:90873:90891	339262	5	True				
ANR	356106	AssignmentExpression	ao -> o = 0xd0fbc000		339262	0		=			
ANR	356107	PtrMemberAccess	ao -> o		339262	0					
ANR	356108	Identifier	ao		339262	0					
ANR	356109	Identifier	o		339262	1					
ANR	356110	PrimaryExpression	0xd0fbc000		339262	1					
ANR	356111	IfStatement	if ( m & X_BIT )		339262	6					
ANR	356112	Condition	m & X_BIT	4322:7:90901:90909	339262	0	True				
ANR	356113	BitAndExpression	m & X_BIT		339262	0		&			
ANR	356114	Identifier	m		339262	0					
ANR	356115	Identifier	X_BIT		339262	1					
ANR	356116	CompoundStatement		3030:18:65053:65053	339262	1					
ANR	356117	ExpressionStatement	ao -> o |= 1 << 12	4323:4:90918:90934	339262	0	True				
ANR	356118	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	356119	PtrMemberAccess	ao -> o		339262	0					
ANR	356120	Identifier	ao		339262	0					
ANR	356121	Identifier	o		339262	1					
ANR	356122	ShiftExpression	1 << 12		339262	1		<<			
ANR	356123	PrimaryExpression	1		339262	0					
ANR	356124	PrimaryExpression	12		339262	1					
ANR	356125	ExpressionStatement	ao -> o |= reg1 << 4	4326:3:90945:90963	339262	7	True				
ANR	356126	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	356127	PtrMemberAccess	ao -> o		339262	0					
ANR	356128	Identifier	ao		339262	0					
ANR	356129	Identifier	o		339262	1					
ANR	356130	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	356131	Identifier	reg1		339262	0					
ANR	356132	PrimaryExpression	4		339262	1					
ANR	356133	ExpressionStatement	ao -> o |= reg2	4327:3:90968:90981	339262	8	True				
ANR	356134	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	356135	PtrMemberAccess	ao -> o		339262	0					
ANR	356136	Identifier	ao		339262	0					
ANR	356137	Identifier	o		339262	1					
ANR	356138	Identifier	reg2		339262	1					
ANR	356139	ExpressionStatement	ao -> o |= reg3 << 24	4328:3:90986:91005	339262	9	True				
ANR	356140	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	356141	PtrMemberAccess	ao -> o		339262	0					
ANR	356142	Identifier	ao		339262	0					
ANR	356143	Identifier	o		339262	1					
ANR	356144	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	356145	Identifier	reg3		339262	0					
ANR	356146	PrimaryExpression	24		339262	1					
ANR	356147	ExpressionStatement	ao -> o |= reg4 << 8	4329:3:91010:91028	339262	10	True				
ANR	356148	AssignmentExpression	ao -> o |= reg4 << 8		339262	0		|=			
ANR	356149	PtrMemberAccess	ao -> o		339262	0					
ANR	356150	Identifier	ao		339262	0					
ANR	356151	Identifier	o		339262	1					
ANR	356152	ShiftExpression	reg4 << 8		339262	1		<<			
ANR	356153	Identifier	reg4		339262	0					
ANR	356154	PrimaryExpression	8		339262	1					
ANR	356155	ReturnStatement	return 4 ;	4330:3:91033:91041	339262	11	True				
ANR	356156	PrimaryExpression	4		339262	0					
ANR	356157	BreakStatement	break ;	4332:3:91058:91063	339262	2	True				
ANR	356158	Label	default :	4333:2:91067:91074	339262	3	True				
ANR	356159	Identifier	default		339262	0					
ANR	356160	ReturnStatement	return - 1 ;	4334:3:91079:91088	339262	4	True				
ANR	356161	UnaryOperationExpression	- 1		339262	0					
ANR	356162	UnaryOperator	-		339262	0					
ANR	356163	PrimaryExpression	1		339262	1					
ANR	356164	ElseStatement	else		339262	0					
ANR	356165	IfStatement	"if ( ( m = opmask ( ao -> op , ""smmla"" , R_BIT ) ) )"		339262	0					
ANR	356166	Condition	"m = opmask ( ao -> op , ""smmla"" , R_BIT )"	4337:5:91107:91143	339262	0	True				
ANR	356167	AssignmentExpression	"m = opmask ( ao -> op , ""smmla"" , R_BIT )"		339262	0		=			
ANR	356168	Identifier	m		339262	0					
ANR	356169	CallExpression	"opmask ( ao -> op , ""smmla"" , R_BIT )"		339262	1					
ANR	356170	Callee	opmask		339262	0					
ANR	356171	Identifier	opmask		339262	0					
ANR	356172	ArgumentList	ao -> op		339262	1					
ANR	356173	Argument	ao -> op		339262	0					
ANR	356174	PtrMemberAccess	ao -> op		339262	0					
ANR	356175	Identifier	ao		339262	0					
ANR	356176	Identifier	op		339262	1					
ANR	356177	Argument	"""smmla"""		339262	1					
ANR	356178	PrimaryExpression	"""smmla"""		339262	0					
ANR	356179	Argument	R_BIT		339262	2					
ANR	356180	Identifier	R_BIT		339262	0					
ANR	356181	CompoundStatement		3046:2:65291:65325	339262	1					
ANR	356182	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4338:2:91150:91184	339262	0	True				
ANR	356183	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356184	IdentifierDeclType	ut64		339262	0					
ANR	356185	Identifier	argt		339262	1					
ANR	356186	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356187	Identifier	argt		339262	0					
ANR	356188	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356189	Callee	thumb_selector		339262	0					
ANR	356190	Identifier	thumb_selector		339262	0					
ANR	356191	ArgumentList	ao -> a		339262	1					
ANR	356192	Argument	ao -> a		339262	0					
ANR	356193	PtrMemberAccess	ao -> a		339262	0					
ANR	356194	Identifier	ao		339262	0					
ANR	356195	Identifier	a		339262	1					
ANR	356196	SwitchStatement	switch ( argt )		339262	1					
ANR	356197	Condition	argt	4339:10:91196:91199	339262	0	True				
ANR	356198	Identifier	argt		339262	0					
ANR	356199	CompoundStatement		3047:16:65343:65343	339262	1					
ANR	356200	Label	case THUMB_REG_REG_REG_REG :	4340:2:91206:91232	339262	0	True				
ANR	356201	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	356202	CompoundStatement		3049:3:65380:65408	339262	1					
ANR	356203	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4341:3:91239:91267	339262	0	True				
ANR	356204	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	356205	IdentifierDeclType	ut8		339262	0					
ANR	356206	Identifier	reg4		339262	1					
ANR	356207	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	356208	Identifier	reg4		339262	0					
ANR	356209	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	356210	Callee	getreg		339262	0					
ANR	356211	Identifier	getreg		339262	0					
ANR	356212	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	356213	Argument	ao -> a [ 3 ]		339262	0					
ANR	356214	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	356215	PtrMemberAccess	ao -> a		339262	0					
ANR	356216	Identifier	ao		339262	0					
ANR	356217	Identifier	a		339262	1					
ANR	356218	PrimaryExpression	3		339262	1					
ANR	356219	IfStatement	if ( reg4 > 15 )		339262	1					
ANR	356220	Condition	reg4 > 15	4343:7:91277:91285	339262	0	True				
ANR	356221	RelationalExpression	reg4 > 15		339262	0		>			
ANR	356222	Identifier	reg4		339262	0					
ANR	356223	PrimaryExpression	15		339262	1					
ANR	356224	CompoundStatement		3051:18:65429:65429	339262	1					
ANR	356225	ReturnStatement	return - 1 ;	4344:4:91294:91303	339262	0	True				
ANR	356226	UnaryOperationExpression	- 1		339262	0					
ANR	356227	UnaryOperator	-		339262	0					
ANR	356228	PrimaryExpression	1		339262	1					
ANR	356229	ExpressionStatement	ao -> o = 0x50fb0000	4346:3:91313:91331	339262	2	True				
ANR	356230	AssignmentExpression	ao -> o = 0x50fb0000		339262	0		=			
ANR	356231	PtrMemberAccess	ao -> o		339262	0					
ANR	356232	Identifier	ao		339262	0					
ANR	356233	Identifier	o		339262	1					
ANR	356234	PrimaryExpression	0x50fb0000		339262	1					
ANR	356235	IfStatement	if ( m & R_BIT )		339262	3					
ANR	356236	Condition	m & R_BIT	4347:7:91340:91348	339262	0	True				
ANR	356237	BitAndExpression	m & R_BIT		339262	0		&			
ANR	356238	Identifier	m		339262	0					
ANR	356239	Identifier	R_BIT		339262	1					
ANR	356240	CompoundStatement		3055:18:65492:65492	339262	1					
ANR	356241	ExpressionStatement	ao -> o |= 1 << 12	4348:4:91357:91373	339262	0	True				
ANR	356242	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	356243	PtrMemberAccess	ao -> o		339262	0					
ANR	356244	Identifier	ao		339262	0					
ANR	356245	Identifier	o		339262	1					
ANR	356246	ShiftExpression	1 << 12		339262	1		<<			
ANR	356247	PrimaryExpression	1		339262	0					
ANR	356248	PrimaryExpression	12		339262	1					
ANR	356249	ExpressionStatement	ao -> o |= reg4 << 4	4350:3:91383:91401	339262	4	True				
ANR	356250	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	356251	PtrMemberAccess	ao -> o		339262	0					
ANR	356252	Identifier	ao		339262	0					
ANR	356253	Identifier	o		339262	1					
ANR	356254	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	356255	Identifier	reg4		339262	0					
ANR	356256	PrimaryExpression	4		339262	1					
ANR	356257	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4351:3:91406:91442	339262	5	True				
ANR	356258	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	356259	Callee	std_32bit_3reg		339262	0					
ANR	356260	Identifier	std_32bit_3reg		339262	0					
ANR	356261	ArgumentList	ao		339262	1					
ANR	356262	Argument	ao		339262	0					
ANR	356263	Identifier	ao		339262	0					
ANR	356264	Argument	m		339262	1					
ANR	356265	Identifier	m		339262	0					
ANR	356266	Argument	false		339262	2					
ANR	356267	Identifier	false		339262	0					
ANR	356268	BreakStatement	break ;	4353:3:91459:91464	339262	2	True				
ANR	356269	Label	default :	4354:2:91468:91475	339262	3	True				
ANR	356270	Identifier	default		339262	0					
ANR	356271	ReturnStatement	return - 1 ;	4355:3:91480:91489	339262	4	True				
ANR	356272	UnaryOperationExpression	- 1		339262	0					
ANR	356273	UnaryOperator	-		339262	0					
ANR	356274	PrimaryExpression	1		339262	1					
ANR	356275	ElseStatement	else		339262	0					
ANR	356276	IfStatement	"if ( ( m = opmask ( ao -> op , ""smmls"" , R_BIT ) ) )"		339262	0					
ANR	356277	Condition	"m = opmask ( ao -> op , ""smmls"" , R_BIT )"	4358:5:91508:91544	339262	0	True				
ANR	356278	AssignmentExpression	"m = opmask ( ao -> op , ""smmls"" , R_BIT )"		339262	0		=			
ANR	356279	Identifier	m		339262	0					
ANR	356280	CallExpression	"opmask ( ao -> op , ""smmls"" , R_BIT )"		339262	1					
ANR	356281	Callee	opmask		339262	0					
ANR	356282	Identifier	opmask		339262	0					
ANR	356283	ArgumentList	ao -> op		339262	1					
ANR	356284	Argument	ao -> op		339262	0					
ANR	356285	PtrMemberAccess	ao -> op		339262	0					
ANR	356286	Identifier	ao		339262	0					
ANR	356287	Identifier	op		339262	1					
ANR	356288	Argument	"""smmls"""		339262	1					
ANR	356289	PrimaryExpression	"""smmls"""		339262	0					
ANR	356290	Argument	R_BIT		339262	2					
ANR	356291	Identifier	R_BIT		339262	0					
ANR	356292	CompoundStatement		3067:2:65692:65726	339262	1					
ANR	356293	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4359:2:91551:91585	339262	0	True				
ANR	356294	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356295	IdentifierDeclType	ut64		339262	0					
ANR	356296	Identifier	argt		339262	1					
ANR	356297	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356298	Identifier	argt		339262	0					
ANR	356299	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356300	Callee	thumb_selector		339262	0					
ANR	356301	Identifier	thumb_selector		339262	0					
ANR	356302	ArgumentList	ao -> a		339262	1					
ANR	356303	Argument	ao -> a		339262	0					
ANR	356304	PtrMemberAccess	ao -> a		339262	0					
ANR	356305	Identifier	ao		339262	0					
ANR	356306	Identifier	a		339262	1					
ANR	356307	SwitchStatement	switch ( argt )		339262	1					
ANR	356308	Condition	argt	4360:10:91597:91600	339262	0	True				
ANR	356309	Identifier	argt		339262	0					
ANR	356310	CompoundStatement		3068:16:65744:65744	339262	1					
ANR	356311	Label	case THUMB_REG_REG_REG_REG :	4361:2:91607:91633	339262	0	True				
ANR	356312	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	356313	CompoundStatement		3070:3:65781:65809	339262	1					
ANR	356314	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4362:3:91640:91668	339262	0	True				
ANR	356315	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	356316	IdentifierDeclType	ut8		339262	0					
ANR	356317	Identifier	reg4		339262	1					
ANR	356318	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	356319	Identifier	reg4		339262	0					
ANR	356320	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	356321	Callee	getreg		339262	0					
ANR	356322	Identifier	getreg		339262	0					
ANR	356323	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	356324	Argument	ao -> a [ 3 ]		339262	0					
ANR	356325	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	356326	PtrMemberAccess	ao -> a		339262	0					
ANR	356327	Identifier	ao		339262	0					
ANR	356328	Identifier	a		339262	1					
ANR	356329	PrimaryExpression	3		339262	1					
ANR	356330	IfStatement	if ( reg4 > 15 )		339262	1					
ANR	356331	Condition	reg4 > 15	4364:7:91678:91686	339262	0	True				
ANR	356332	RelationalExpression	reg4 > 15		339262	0		>			
ANR	356333	Identifier	reg4		339262	0					
ANR	356334	PrimaryExpression	15		339262	1					
ANR	356335	CompoundStatement		3072:18:65830:65830	339262	1					
ANR	356336	ReturnStatement	return - 1 ;	4365:4:91695:91704	339262	0	True				
ANR	356337	UnaryOperationExpression	- 1		339262	0					
ANR	356338	UnaryOperator	-		339262	0					
ANR	356339	PrimaryExpression	1		339262	1					
ANR	356340	ExpressionStatement	ao -> o = 0x60fb0000	4367:3:91714:91732	339262	2	True				
ANR	356341	AssignmentExpression	ao -> o = 0x60fb0000		339262	0		=			
ANR	356342	PtrMemberAccess	ao -> o		339262	0					
ANR	356343	Identifier	ao		339262	0					
ANR	356344	Identifier	o		339262	1					
ANR	356345	PrimaryExpression	0x60fb0000		339262	1					
ANR	356346	IfStatement	if ( m & R_BIT )		339262	3					
ANR	356347	Condition	m & R_BIT	4368:7:91741:91749	339262	0	True				
ANR	356348	BitAndExpression	m & R_BIT		339262	0		&			
ANR	356349	Identifier	m		339262	0					
ANR	356350	Identifier	R_BIT		339262	1					
ANR	356351	CompoundStatement		3076:18:65893:65893	339262	1					
ANR	356352	ExpressionStatement	ao -> o |= 1 << 12	4369:4:91758:91774	339262	0	True				
ANR	356353	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	356354	PtrMemberAccess	ao -> o		339262	0					
ANR	356355	Identifier	ao		339262	0					
ANR	356356	Identifier	o		339262	1					
ANR	356357	ShiftExpression	1 << 12		339262	1		<<			
ANR	356358	PrimaryExpression	1		339262	0					
ANR	356359	PrimaryExpression	12		339262	1					
ANR	356360	ExpressionStatement	ao -> o |= reg4 << 4	4371:3:91784:91802	339262	4	True				
ANR	356361	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	356362	PtrMemberAccess	ao -> o		339262	0					
ANR	356363	Identifier	ao		339262	0					
ANR	356364	Identifier	o		339262	1					
ANR	356365	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	356366	Identifier	reg4		339262	0					
ANR	356367	PrimaryExpression	4		339262	1					
ANR	356368	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4372:3:91807:91843	339262	5	True				
ANR	356369	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	356370	Callee	std_32bit_3reg		339262	0					
ANR	356371	Identifier	std_32bit_3reg		339262	0					
ANR	356372	ArgumentList	ao		339262	1					
ANR	356373	Argument	ao		339262	0					
ANR	356374	Identifier	ao		339262	0					
ANR	356375	Argument	m		339262	1					
ANR	356376	Identifier	m		339262	0					
ANR	356377	Argument	false		339262	2					
ANR	356378	Identifier	false		339262	0					
ANR	356379	BreakStatement	break ;	4374:3:91860:91865	339262	2	True				
ANR	356380	Label	default :	4375:2:91869:91876	339262	3	True				
ANR	356381	Identifier	default		339262	0					
ANR	356382	ReturnStatement	return - 1 ;	4376:3:91881:91890	339262	4	True				
ANR	356383	UnaryOperationExpression	- 1		339262	0					
ANR	356384	UnaryOperator	-		339262	0					
ANR	356385	PrimaryExpression	1		339262	1					
ANR	356386	ElseStatement	else		339262	0					
ANR	356387	IfStatement	"if ( ( m = opmask ( ao -> op , ""smmul"" , R_BIT ) ) )"		339262	0					
ANR	356388	Condition	"m = opmask ( ao -> op , ""smmul"" , R_BIT )"	4379:5:91909:91945	339262	0	True				
ANR	356389	AssignmentExpression	"m = opmask ( ao -> op , ""smmul"" , R_BIT )"		339262	0		=			
ANR	356390	Identifier	m		339262	0					
ANR	356391	CallExpression	"opmask ( ao -> op , ""smmul"" , R_BIT )"		339262	1					
ANR	356392	Callee	opmask		339262	0					
ANR	356393	Identifier	opmask		339262	0					
ANR	356394	ArgumentList	ao -> op		339262	1					
ANR	356395	Argument	ao -> op		339262	0					
ANR	356396	PtrMemberAccess	ao -> op		339262	0					
ANR	356397	Identifier	ao		339262	0					
ANR	356398	Identifier	op		339262	1					
ANR	356399	Argument	"""smmul"""		339262	1					
ANR	356400	PrimaryExpression	"""smmul"""		339262	0					
ANR	356401	Argument	R_BIT		339262	2					
ANR	356402	Identifier	R_BIT		339262	0					
ANR	356403	CompoundStatement		3088:2:66093:66127	339262	1					
ANR	356404	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4380:2:91952:91986	339262	0	True				
ANR	356405	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356406	IdentifierDeclType	ut64		339262	0					
ANR	356407	Identifier	argt		339262	1					
ANR	356408	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356409	Identifier	argt		339262	0					
ANR	356410	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356411	Callee	thumb_selector		339262	0					
ANR	356412	Identifier	thumb_selector		339262	0					
ANR	356413	ArgumentList	ao -> a		339262	1					
ANR	356414	Argument	ao -> a		339262	0					
ANR	356415	PtrMemberAccess	ao -> a		339262	0					
ANR	356416	Identifier	ao		339262	0					
ANR	356417	Identifier	a		339262	1					
ANR	356418	SwitchStatement	switch ( argt )		339262	1					
ANR	356419	Condition	argt	4381:10:91998:92001	339262	0	True				
ANR	356420	Identifier	argt		339262	0					
ANR	356421	CompoundStatement		3089:16:66145:66145	339262	1					
ANR	356422	Label	case THUMB_REG_REG :	4382:2:92008:92026	339262	0	True				
ANR	356423	Identifier	THUMB_REG_REG		339262	0					
ANR	356424	CompoundStatement		3090:22:66169:66169	339262	1					
ANR	356425	ExpressionStatement	std_opt_2 ( ao )	4383:3:92033:92047	339262	0	True				
ANR	356426	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	356427	Callee	std_opt_2		339262	0					
ANR	356428	Identifier	std_opt_2		339262	0					
ANR	356429	ArgumentList	ao		339262	1					
ANR	356430	Argument	ao		339262	0					
ANR	356431	Identifier	ao		339262	0					
ANR	356432	Label	case THUMB_REG_REG_REG :	4386:2:92093:92115	339262	2	True				
ANR	356433	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	356434	CompoundStatement		3094:26:66258:66258	339262	3					
ANR	356435	ExpressionStatement	ao -> o = 0x50fb00f0	4387:3:92122:92140	339262	0	True				
ANR	356436	AssignmentExpression	ao -> o = 0x50fb00f0		339262	0		=			
ANR	356437	PtrMemberAccess	ao -> o		339262	0					
ANR	356438	Identifier	ao		339262	0					
ANR	356439	Identifier	o		339262	1					
ANR	356440	PrimaryExpression	0x50fb00f0		339262	1					
ANR	356441	IfStatement	if ( m & R_BIT )		339262	1					
ANR	356442	Condition	m & R_BIT	4388:7:92149:92157	339262	0	True				
ANR	356443	BitAndExpression	m & R_BIT		339262	0		&			
ANR	356444	Identifier	m		339262	0					
ANR	356445	Identifier	R_BIT		339262	1					
ANR	356446	CompoundStatement		3096:18:66301:66301	339262	1					
ANR	356447	ExpressionStatement	ao -> o |= 1 << 12	4389:4:92166:92182	339262	0	True				
ANR	356448	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	356449	PtrMemberAccess	ao -> o		339262	0					
ANR	356450	Identifier	ao		339262	0					
ANR	356451	Identifier	o		339262	1					
ANR	356452	ShiftExpression	1 << 12		339262	1		<<			
ANR	356453	PrimaryExpression	1		339262	0					
ANR	356454	PrimaryExpression	12		339262	1					
ANR	356455	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4391:3:92192:92228	339262	2	True				
ANR	356456	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	356457	Callee	std_32bit_3reg		339262	0					
ANR	356458	Identifier	std_32bit_3reg		339262	0					
ANR	356459	ArgumentList	ao		339262	1					
ANR	356460	Argument	ao		339262	0					
ANR	356461	Identifier	ao		339262	0					
ANR	356462	Argument	m		339262	1					
ANR	356463	Identifier	m		339262	0					
ANR	356464	Argument	false		339262	2					
ANR	356465	Identifier	false		339262	0					
ANR	356466	BreakStatement	break ;	4393:3:92245:92250	339262	4	True				
ANR	356467	Label	default :	4394:2:92254:92261	339262	5	True				
ANR	356468	Identifier	default		339262	0					
ANR	356469	ReturnStatement	return - 1 ;	4395:3:92266:92275	339262	6	True				
ANR	356470	UnaryOperationExpression	- 1		339262	0					
ANR	356471	UnaryOperator	-		339262	0					
ANR	356472	PrimaryExpression	1		339262	1					
ANR	356473	ElseStatement	else		339262	0					
ANR	356474	IfStatement	"if ( ( m = opmask ( ao -> op , ""smuad"" , X_BIT ) ) )"		339262	0					
ANR	356475	Condition	"m = opmask ( ao -> op , ""smuad"" , X_BIT )"	4398:5:92294:92330	339262	0	True				
ANR	356476	AssignmentExpression	"m = opmask ( ao -> op , ""smuad"" , X_BIT )"		339262	0		=			
ANR	356477	Identifier	m		339262	0					
ANR	356478	CallExpression	"opmask ( ao -> op , ""smuad"" , X_BIT )"		339262	1					
ANR	356479	Callee	opmask		339262	0					
ANR	356480	Identifier	opmask		339262	0					
ANR	356481	ArgumentList	ao -> op		339262	1					
ANR	356482	Argument	ao -> op		339262	0					
ANR	356483	PtrMemberAccess	ao -> op		339262	0					
ANR	356484	Identifier	ao		339262	0					
ANR	356485	Identifier	op		339262	1					
ANR	356486	Argument	"""smuad"""		339262	1					
ANR	356487	PrimaryExpression	"""smuad"""		339262	0					
ANR	356488	Argument	X_BIT		339262	2					
ANR	356489	Identifier	X_BIT		339262	0					
ANR	356490	CompoundStatement		3107:2:66478:66512	339262	1					
ANR	356491	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4399:2:92337:92371	339262	0	True				
ANR	356492	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356493	IdentifierDeclType	ut64		339262	0					
ANR	356494	Identifier	argt		339262	1					
ANR	356495	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356496	Identifier	argt		339262	0					
ANR	356497	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356498	Callee	thumb_selector		339262	0					
ANR	356499	Identifier	thumb_selector		339262	0					
ANR	356500	ArgumentList	ao -> a		339262	1					
ANR	356501	Argument	ao -> a		339262	0					
ANR	356502	PtrMemberAccess	ao -> a		339262	0					
ANR	356503	Identifier	ao		339262	0					
ANR	356504	Identifier	a		339262	1					
ANR	356505	SwitchStatement	switch ( argt )		339262	1					
ANR	356506	Condition	argt	4400:10:92383:92386	339262	0	True				
ANR	356507	Identifier	argt		339262	0					
ANR	356508	CompoundStatement		3108:16:66530:66530	339262	1					
ANR	356509	Label	case THUMB_REG_REG :	4401:2:92393:92411	339262	0	True				
ANR	356510	Identifier	THUMB_REG_REG		339262	0					
ANR	356511	CompoundStatement		3109:22:66554:66554	339262	1					
ANR	356512	ExpressionStatement	std_opt_2 ( ao )	4402:3:92418:92432	339262	0	True				
ANR	356513	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	356514	Callee	std_opt_2		339262	0					
ANR	356515	Identifier	std_opt_2		339262	0					
ANR	356516	ArgumentList	ao		339262	1					
ANR	356517	Argument	ao		339262	0					
ANR	356518	Identifier	ao		339262	0					
ANR	356519	Label	case THUMB_REG_REG_REG :	4405:2:92478:92500	339262	2	True				
ANR	356520	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	356521	CompoundStatement		3113:26:66643:66643	339262	3					
ANR	356522	ExpressionStatement	ao -> o = 0x20fb00f0	4406:3:92507:92525	339262	0	True				
ANR	356523	AssignmentExpression	ao -> o = 0x20fb00f0		339262	0		=			
ANR	356524	PtrMemberAccess	ao -> o		339262	0					
ANR	356525	Identifier	ao		339262	0					
ANR	356526	Identifier	o		339262	1					
ANR	356527	PrimaryExpression	0x20fb00f0		339262	1					
ANR	356528	IfStatement	if ( m & X_BIT )		339262	1					
ANR	356529	Condition	m & X_BIT	4407:7:92534:92542	339262	0	True				
ANR	356530	BitAndExpression	m & X_BIT		339262	0		&			
ANR	356531	Identifier	m		339262	0					
ANR	356532	Identifier	X_BIT		339262	1					
ANR	356533	CompoundStatement		3115:18:66686:66686	339262	1					
ANR	356534	ExpressionStatement	ao -> o |= 1 << 12	4408:4:92551:92567	339262	0	True				
ANR	356535	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	356536	PtrMemberAccess	ao -> o		339262	0					
ANR	356537	Identifier	ao		339262	0					
ANR	356538	Identifier	o		339262	1					
ANR	356539	ShiftExpression	1 << 12		339262	1		<<			
ANR	356540	PrimaryExpression	1		339262	0					
ANR	356541	PrimaryExpression	12		339262	1					
ANR	356542	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4410:3:92577:92613	339262	2	True				
ANR	356543	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	356544	Callee	std_32bit_3reg		339262	0					
ANR	356545	Identifier	std_32bit_3reg		339262	0					
ANR	356546	ArgumentList	ao		339262	1					
ANR	356547	Argument	ao		339262	0					
ANR	356548	Identifier	ao		339262	0					
ANR	356549	Argument	m		339262	1					
ANR	356550	Identifier	m		339262	0					
ANR	356551	Argument	false		339262	2					
ANR	356552	Identifier	false		339262	0					
ANR	356553	BreakStatement	break ;	4412:3:92630:92635	339262	4	True				
ANR	356554	Label	default :	4413:2:92639:92646	339262	5	True				
ANR	356555	Identifier	default		339262	0					
ANR	356556	ReturnStatement	return - 1 ;	4414:3:92651:92660	339262	6	True				
ANR	356557	UnaryOperationExpression	- 1		339262	0					
ANR	356558	UnaryOperator	-		339262	0					
ANR	356559	PrimaryExpression	1		339262	1					
ANR	356560	ElseStatement	else		339262	0					
ANR	356561	IfStatement	"if ( ( m = opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT ) ) )"		339262	0					
ANR	356562	Condition	"m = opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT )"	4417:5:92679:92768	339262	0	True				
ANR	356563	AssignmentExpression	"m = opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT )"		339262	0		=			
ANR	356564	Identifier	m		339262	0					
ANR	356565	CallExpression	"opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT )"		339262	1					
ANR	356566	Callee	opmask		339262	0					
ANR	356567	Identifier	opmask		339262	0					
ANR	356568	ArgumentList	ao -> op		339262	1					
ANR	356569	Argument	ao -> op		339262	0					
ANR	356570	PtrMemberAccess	ao -> op		339262	0					
ANR	356571	Identifier	ao		339262	0					
ANR	356572	Identifier	op		339262	1					
ANR	356573	Argument	"""smul"""		339262	1					
ANR	356574	PrimaryExpression	"""smul"""		339262	0					
ANR	356575	Argument	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		339262	2					
ANR	356576	InclusiveOrExpression	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		339262	0		|			
ANR	356577	Identifier	BB_BIT		339262	0					
ANR	356578	InclusiveOrExpression	BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		339262	1		|			
ANR	356579	Identifier	BT_BIT		339262	0					
ANR	356580	InclusiveOrExpression	TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		339262	1		|			
ANR	356581	Identifier	TB_BIT		339262	0					
ANR	356582	InclusiveOrExpression	TT_BIT | WB_BIT | WT_BIT | L_BIT		339262	1		|			
ANR	356583	Identifier	TT_BIT		339262	0					
ANR	356584	InclusiveOrExpression	WB_BIT | WT_BIT | L_BIT		339262	1		|			
ANR	356585	Identifier	WB_BIT		339262	0					
ANR	356586	InclusiveOrExpression	WT_BIT | L_BIT		339262	1		|			
ANR	356587	Identifier	WT_BIT		339262	0					
ANR	356588	Identifier	L_BIT		339262	1					
ANR	356589	CompoundStatement		3126:2:66916:66950	339262	1					
ANR	356590	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4418:2:92775:92809	339262	0	True				
ANR	356591	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356592	IdentifierDeclType	ut64		339262	0					
ANR	356593	Identifier	argt		339262	1					
ANR	356594	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356595	Identifier	argt		339262	0					
ANR	356596	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356597	Callee	thumb_selector		339262	0					
ANR	356598	Identifier	thumb_selector		339262	0					
ANR	356599	ArgumentList	ao -> a		339262	1					
ANR	356600	Argument	ao -> a		339262	0					
ANR	356601	PtrMemberAccess	ao -> a		339262	0					
ANR	356602	Identifier	ao		339262	0					
ANR	356603	Identifier	a		339262	1					
ANR	356604	SwitchStatement	switch ( argt )		339262	1					
ANR	356605	Condition	argt	4419:10:92821:92824	339262	0	True				
ANR	356606	Identifier	argt		339262	0					
ANR	356607	CompoundStatement		3127:16:66968:66968	339262	1					
ANR	356608	Label	case THUMB_REG_REG :	4420:2:92831:92849	339262	0	True				
ANR	356609	Identifier	THUMB_REG_REG		339262	0					
ANR	356610	CompoundStatement		3128:22:66992:66992	339262	1					
ANR	356611	ExpressionStatement	std_opt_2 ( ao )	4421:3:92856:92870	339262	0	True				
ANR	356612	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	356613	Callee	std_opt_2		339262	0					
ANR	356614	Identifier	std_opt_2		339262	0					
ANR	356615	ArgumentList	ao		339262	1					
ANR	356616	Argument	ao		339262	0					
ANR	356617	Identifier	ao		339262	0					
ANR	356618	Label	case THUMB_REG_REG_REG :	4424:2:92916:92938	339262	2	True				
ANR	356619	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	356620	CompoundStatement		3132:26:67081:67081	339262	3					
ANR	356621	IfStatement	if ( m & BB_BIT )		339262	0					
ANR	356622	Condition	m & BB_BIT	4425:7:92949:92958	339262	0	True				
ANR	356623	BitAndExpression	m & BB_BIT		339262	0		&			
ANR	356624	Identifier	m		339262	0					
ANR	356625	Identifier	BB_BIT		339262	1					
ANR	356626	CompoundStatement		3133:19:67102:67102	339262	1					
ANR	356627	ExpressionStatement	ao -> o = 0x10fb00f0	4426:4:92967:92985	339262	0	True				
ANR	356628	AssignmentExpression	ao -> o = 0x10fb00f0		339262	0		=			
ANR	356629	PtrMemberAccess	ao -> o		339262	0					
ANR	356630	Identifier	ao		339262	0					
ANR	356631	Identifier	o		339262	1					
ANR	356632	PrimaryExpression	0x10fb00f0		339262	1					
ANR	356633	ElseStatement	else		339262	0					
ANR	356634	IfStatement	if ( m & BT_BIT )		339262	0					
ANR	356635	Condition	m & BT_BIT	4428:7:93004:93013	339262	0	True				
ANR	356636	BitAndExpression	m & BT_BIT		339262	0		&			
ANR	356637	Identifier	m		339262	0					
ANR	356638	Identifier	BT_BIT		339262	1					
ANR	356639	CompoundStatement		3136:19:67157:67157	339262	1					
ANR	356640	ExpressionStatement	ao -> o = 0x10fb10f0	4429:4:93022:93040	339262	0	True				
ANR	356641	AssignmentExpression	ao -> o = 0x10fb10f0		339262	0		=			
ANR	356642	PtrMemberAccess	ao -> o		339262	0					
ANR	356643	Identifier	ao		339262	0					
ANR	356644	Identifier	o		339262	1					
ANR	356645	PrimaryExpression	0x10fb10f0		339262	1					
ANR	356646	ElseStatement	else		339262	0					
ANR	356647	IfStatement	if ( m & TB_BIT )		339262	0					
ANR	356648	Condition	m & TB_BIT	4431:7:93059:93068	339262	0	True				
ANR	356649	BitAndExpression	m & TB_BIT		339262	0		&			
ANR	356650	Identifier	m		339262	0					
ANR	356651	Identifier	TB_BIT		339262	1					
ANR	356652	CompoundStatement		3139:19:67212:67212	339262	1					
ANR	356653	ExpressionStatement	ao -> o = 0x10fb20f0	4432:4:93077:93095	339262	0	True				
ANR	356654	AssignmentExpression	ao -> o = 0x10fb20f0		339262	0		=			
ANR	356655	PtrMemberAccess	ao -> o		339262	0					
ANR	356656	Identifier	ao		339262	0					
ANR	356657	Identifier	o		339262	1					
ANR	356658	PrimaryExpression	0x10fb20f0		339262	1					
ANR	356659	ElseStatement	else		339262	0					
ANR	356660	IfStatement	if ( m & TT_BIT )		339262	0					
ANR	356661	Condition	m & TT_BIT	4434:7:93114:93123	339262	0	True				
ANR	356662	BitAndExpression	m & TT_BIT		339262	0		&			
ANR	356663	Identifier	m		339262	0					
ANR	356664	Identifier	TT_BIT		339262	1					
ANR	356665	CompoundStatement		3142:19:67267:67267	339262	1					
ANR	356666	ExpressionStatement	ao -> o = 0x10fb30f0	4435:4:93132:93150	339262	0	True				
ANR	356667	AssignmentExpression	ao -> o = 0x10fb30f0		339262	0		=			
ANR	356668	PtrMemberAccess	ao -> o		339262	0					
ANR	356669	Identifier	ao		339262	0					
ANR	356670	Identifier	o		339262	1					
ANR	356671	PrimaryExpression	0x10fb30f0		339262	1					
ANR	356672	ElseStatement	else		339262	0					
ANR	356673	IfStatement	if ( m & WB_BIT )		339262	0					
ANR	356674	Condition	m & WB_BIT	4437:7:93169:93178	339262	0	True				
ANR	356675	BitAndExpression	m & WB_BIT		339262	0		&			
ANR	356676	Identifier	m		339262	0					
ANR	356677	Identifier	WB_BIT		339262	1					
ANR	356678	CompoundStatement		3145:19:67322:67322	339262	1					
ANR	356679	ExpressionStatement	ao -> o = 0x30fb00f0	4438:4:93187:93205	339262	0	True				
ANR	356680	AssignmentExpression	ao -> o = 0x30fb00f0		339262	0		=			
ANR	356681	PtrMemberAccess	ao -> o		339262	0					
ANR	356682	Identifier	ao		339262	0					
ANR	356683	Identifier	o		339262	1					
ANR	356684	PrimaryExpression	0x30fb00f0		339262	1					
ANR	356685	ElseStatement	else		339262	0					
ANR	356686	IfStatement	if ( m & WT_BIT )		339262	0					
ANR	356687	Condition	m & WT_BIT	4440:7:93224:93233	339262	0	True				
ANR	356688	BitAndExpression	m & WT_BIT		339262	0		&			
ANR	356689	Identifier	m		339262	0					
ANR	356690	Identifier	WT_BIT		339262	1					
ANR	356691	CompoundStatement		3148:19:67377:67377	339262	1					
ANR	356692	ExpressionStatement	ao -> o = 0x30fb10f0	4441:4:93242:93260	339262	0	True				
ANR	356693	AssignmentExpression	ao -> o = 0x30fb10f0		339262	0		=			
ANR	356694	PtrMemberAccess	ao -> o		339262	0					
ANR	356695	Identifier	ao		339262	0					
ANR	356696	Identifier	o		339262	1					
ANR	356697	PrimaryExpression	0x30fb10f0		339262	1					
ANR	356698	ElseStatement	else		339262	0					
ANR	356699	CompoundStatement		3150:10:67413:67413	339262	0					
ANR	356700	ReturnStatement	return - 1 ;	4443:4:93278:93287	339262	0	True				
ANR	356701	UnaryOperationExpression	- 1		339262	0					
ANR	356702	UnaryOperator	-		339262	0					
ANR	356703	PrimaryExpression	1		339262	1					
ANR	356704	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4445:3:93297:93333	339262	1	True				
ANR	356705	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	356706	Callee	std_32bit_3reg		339262	0					
ANR	356707	Identifier	std_32bit_3reg		339262	0					
ANR	356708	ArgumentList	ao		339262	1					
ANR	356709	Argument	ao		339262	0					
ANR	356710	Identifier	ao		339262	0					
ANR	356711	Argument	m		339262	1					
ANR	356712	Identifier	m		339262	0					
ANR	356713	Argument	false		339262	2					
ANR	356714	Identifier	false		339262	0					
ANR	356715	BreakStatement	break ;	4447:3:93350:93355	339262	4	True				
ANR	356716	Label	case THUMB_REG_REG_REG_REG :	4448:2:93359:93385	339262	5	True				
ANR	356717	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	356718	CompoundStatement		3160:3:67632:67660	339262	6					
ANR	356719	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4449:3:93392:93420	339262	0	True				
ANR	356720	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	356721	IdentifierDeclType	ut8		339262	0					
ANR	356722	Identifier	reg1		339262	1					
ANR	356723	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	356724	Identifier	reg1		339262	0					
ANR	356725	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	356726	Callee	getreg		339262	0					
ANR	356727	Identifier	getreg		339262	0					
ANR	356728	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	356729	Argument	ao -> a [ 0 ]		339262	0					
ANR	356730	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	356731	PtrMemberAccess	ao -> a		339262	0					
ANR	356732	Identifier	ao		339262	0					
ANR	356733	Identifier	a		339262	1					
ANR	356734	PrimaryExpression	0		339262	1					
ANR	356735	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4450:3:93425:93453	339262	1	True				
ANR	356736	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	356737	IdentifierDeclType	ut8		339262	0					
ANR	356738	Identifier	reg2		339262	1					
ANR	356739	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	356740	Identifier	reg2		339262	0					
ANR	356741	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	356742	Callee	getreg		339262	0					
ANR	356743	Identifier	getreg		339262	0					
ANR	356744	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	356745	Argument	ao -> a [ 1 ]		339262	0					
ANR	356746	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	356747	PtrMemberAccess	ao -> a		339262	0					
ANR	356748	Identifier	ao		339262	0					
ANR	356749	Identifier	a		339262	1					
ANR	356750	PrimaryExpression	1		339262	1					
ANR	356751	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4451:3:93458:93486	339262	2	True				
ANR	356752	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	356753	IdentifierDeclType	ut8		339262	0					
ANR	356754	Identifier	reg3		339262	1					
ANR	356755	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	356756	Identifier	reg3		339262	0					
ANR	356757	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	356758	Callee	getreg		339262	0					
ANR	356759	Identifier	getreg		339262	0					
ANR	356760	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	356761	Argument	ao -> a [ 2 ]		339262	0					
ANR	356762	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	356763	PtrMemberAccess	ao -> a		339262	0					
ANR	356764	Identifier	ao		339262	0					
ANR	356765	Identifier	a		339262	1					
ANR	356766	PrimaryExpression	2		339262	1					
ANR	356767	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4452:3:93491:93519	339262	3	True				
ANR	356768	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	356769	IdentifierDeclType	ut8		339262	0					
ANR	356770	Identifier	reg4		339262	1					
ANR	356771	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	356772	Identifier	reg4		339262	0					
ANR	356773	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	356774	Callee	getreg		339262	0					
ANR	356775	Identifier	getreg		339262	0					
ANR	356776	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	356777	Argument	ao -> a [ 3 ]		339262	0					
ANR	356778	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	356779	PtrMemberAccess	ao -> a		339262	0					
ANR	356780	Identifier	ao		339262	0					
ANR	356781	Identifier	a		339262	1					
ANR	356782	PrimaryExpression	3		339262	1					
ANR	356783	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) ) )		339262	4					
ANR	356784	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )	4454:7:93529:93620	339262	0	True				
ANR	356785	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		339262	0		||			
ANR	356786	RelationalExpression	reg1 > 15		339262	0		>			
ANR	356787	Identifier	reg1		339262	0					
ANR	356788	PrimaryExpression	15		339262	1					
ANR	356789	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		339262	1		||			
ANR	356790	RelationalExpression	reg2 > 15		339262	0		>			
ANR	356791	Identifier	reg2		339262	0					
ANR	356792	PrimaryExpression	15		339262	1					
ANR	356793	OrExpression	( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		339262	1		||			
ANR	356794	RelationalExpression	reg3 > 15		339262	0		>			
ANR	356795	Identifier	reg3		339262	0					
ANR	356796	PrimaryExpression	15		339262	1					
ANR	356797	OrExpression	( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		339262	1		||			
ANR	356798	RelationalExpression	reg4 > 15		339262	0		>			
ANR	356799	Identifier	reg4		339262	0					
ANR	356800	PrimaryExpression	15		339262	1					
ANR	356801	OrExpression	( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		339262	1		||			
ANR	356802	BitAndExpression	m & DOTN_BIT		339262	0		&			
ANR	356803	Identifier	m		339262	0					
ANR	356804	Identifier	DOTN_BIT		339262	1					
ANR	356805	UnaryOperationExpression	! ( m & L_BIT )		339262	1					
ANR	356806	UnaryOperator	!		339262	0					
ANR	356807	BitAndExpression	m & L_BIT		339262	1		&			
ANR	356808	Identifier	m		339262	0					
ANR	356809	Identifier	L_BIT		339262	1					
ANR	356810	CompoundStatement		3162:101:67764:67764	339262	1					
ANR	356811	ReturnStatement	return - 1 ;	4455:4:93629:93638	339262	0	True				
ANR	356812	UnaryOperationExpression	- 1		339262	0					
ANR	356813	UnaryOperator	-		339262	0					
ANR	356814	PrimaryExpression	1		339262	1					
ANR	356815	ExpressionStatement	ao -> o = 0x80fb0000	4458:3:93649:93667	339262	5	True				
ANR	356816	AssignmentExpression	ao -> o = 0x80fb0000		339262	0		=			
ANR	356817	PtrMemberAccess	ao -> o		339262	0					
ANR	356818	Identifier	ao		339262	0					
ANR	356819	Identifier	o		339262	1					
ANR	356820	PrimaryExpression	0x80fb0000		339262	1					
ANR	356821	ExpressionStatement	ao -> o |= reg1 << 4	4459:3:93672:93690	339262	6	True				
ANR	356822	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	356823	PtrMemberAccess	ao -> o		339262	0					
ANR	356824	Identifier	ao		339262	0					
ANR	356825	Identifier	o		339262	1					
ANR	356826	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	356827	Identifier	reg1		339262	0					
ANR	356828	PrimaryExpression	4		339262	1					
ANR	356829	ExpressionStatement	ao -> o |= reg2	4460:3:93695:93708	339262	7	True				
ANR	356830	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	356831	PtrMemberAccess	ao -> o		339262	0					
ANR	356832	Identifier	ao		339262	0					
ANR	356833	Identifier	o		339262	1					
ANR	356834	Identifier	reg2		339262	1					
ANR	356835	ExpressionStatement	ao -> o |= reg3 << 24	4461:3:93713:93732	339262	8	True				
ANR	356836	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	356837	PtrMemberAccess	ao -> o		339262	0					
ANR	356838	Identifier	ao		339262	0					
ANR	356839	Identifier	o		339262	1					
ANR	356840	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	356841	Identifier	reg3		339262	0					
ANR	356842	PrimaryExpression	24		339262	1					
ANR	356843	ExpressionStatement	ao -> o |= reg4 << 8	4462:3:93737:93755	339262	9	True				
ANR	356844	AssignmentExpression	ao -> o |= reg4 << 8		339262	0		|=			
ANR	356845	PtrMemberAccess	ao -> o		339262	0					
ANR	356846	Identifier	ao		339262	0					
ANR	356847	Identifier	o		339262	1					
ANR	356848	ShiftExpression	reg4 << 8		339262	1		<<			
ANR	356849	Identifier	reg4		339262	0					
ANR	356850	PrimaryExpression	8		339262	1					
ANR	356851	ReturnStatement	return 4 ;	4463:3:93760:93768	339262	10	True				
ANR	356852	PrimaryExpression	4		339262	0					
ANR	356853	BreakStatement	break ;	4465:3:93785:93790	339262	7	True				
ANR	356854	Label	default :	4466:2:93794:93801	339262	8	True				
ANR	356855	Identifier	default		339262	0					
ANR	356856	ReturnStatement	return - 1 ;	4467:3:93806:93815	339262	9	True				
ANR	356857	UnaryOperationExpression	- 1		339262	0					
ANR	356858	UnaryOperator	-		339262	0					
ANR	356859	PrimaryExpression	1		339262	1					
ANR	356860	ElseStatement	else		339262	0					
ANR	356861	IfStatement	"if ( ( m = opmask ( ao -> op , ""smusd"" , X_BIT ) ) )"		339262	0					
ANR	356862	Condition	"m = opmask ( ao -> op , ""smusd"" , X_BIT )"	4470:5:93834:93870	339262	0	True				
ANR	356863	AssignmentExpression	"m = opmask ( ao -> op , ""smusd"" , X_BIT )"		339262	0		=			
ANR	356864	Identifier	m		339262	0					
ANR	356865	CallExpression	"opmask ( ao -> op , ""smusd"" , X_BIT )"		339262	1					
ANR	356866	Callee	opmask		339262	0					
ANR	356867	Identifier	opmask		339262	0					
ANR	356868	ArgumentList	ao -> op		339262	1					
ANR	356869	Argument	ao -> op		339262	0					
ANR	356870	PtrMemberAccess	ao -> op		339262	0					
ANR	356871	Identifier	ao		339262	0					
ANR	356872	Identifier	op		339262	1					
ANR	356873	Argument	"""smusd"""		339262	1					
ANR	356874	PrimaryExpression	"""smusd"""		339262	0					
ANR	356875	Argument	X_BIT		339262	2					
ANR	356876	Identifier	X_BIT		339262	0					
ANR	356877	CompoundStatement		3179:2:68018:68052	339262	1					
ANR	356878	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4471:2:93877:93911	339262	0	True				
ANR	356879	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356880	IdentifierDeclType	ut64		339262	0					
ANR	356881	Identifier	argt		339262	1					
ANR	356882	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356883	Identifier	argt		339262	0					
ANR	356884	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356885	Callee	thumb_selector		339262	0					
ANR	356886	Identifier	thumb_selector		339262	0					
ANR	356887	ArgumentList	ao -> a		339262	1					
ANR	356888	Argument	ao -> a		339262	0					
ANR	356889	PtrMemberAccess	ao -> a		339262	0					
ANR	356890	Identifier	ao		339262	0					
ANR	356891	Identifier	a		339262	1					
ANR	356892	SwitchStatement	switch ( argt )		339262	1					
ANR	356893	Condition	argt	4472:10:93923:93926	339262	0	True				
ANR	356894	Identifier	argt		339262	0					
ANR	356895	CompoundStatement		3180:16:68070:68070	339262	1					
ANR	356896	Label	case THUMB_REG_REG :	4473:2:93933:93951	339262	0	True				
ANR	356897	Identifier	THUMB_REG_REG		339262	0					
ANR	356898	CompoundStatement		3181:22:68094:68094	339262	1					
ANR	356899	ExpressionStatement	std_opt_2 ( ao )	4474:3:93958:93972	339262	0	True				
ANR	356900	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	356901	Callee	std_opt_2		339262	0					
ANR	356902	Identifier	std_opt_2		339262	0					
ANR	356903	ArgumentList	ao		339262	1					
ANR	356904	Argument	ao		339262	0					
ANR	356905	Identifier	ao		339262	0					
ANR	356906	Label	case THUMB_REG_REG_REG :	4477:2:94018:94040	339262	2	True				
ANR	356907	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	356908	CompoundStatement		3185:26:68183:68183	339262	3					
ANR	356909	ExpressionStatement	ao -> o = 0x40fb00f0	4478:3:94047:94065	339262	0	True				
ANR	356910	AssignmentExpression	ao -> o = 0x40fb00f0		339262	0		=			
ANR	356911	PtrMemberAccess	ao -> o		339262	0					
ANR	356912	Identifier	ao		339262	0					
ANR	356913	Identifier	o		339262	1					
ANR	356914	PrimaryExpression	0x40fb00f0		339262	1					
ANR	356915	IfStatement	if ( m & X_BIT )		339262	1					
ANR	356916	Condition	m & X_BIT	4479:7:94074:94082	339262	0	True				
ANR	356917	BitAndExpression	m & X_BIT		339262	0		&			
ANR	356918	Identifier	m		339262	0					
ANR	356919	Identifier	X_BIT		339262	1					
ANR	356920	CompoundStatement		3187:18:68226:68226	339262	1					
ANR	356921	ExpressionStatement	ao -> o |= 1 << 12	4480:4:94091:94107	339262	0	True				
ANR	356922	AssignmentExpression	ao -> o |= 1 << 12		339262	0		|=			
ANR	356923	PtrMemberAccess	ao -> o		339262	0					
ANR	356924	Identifier	ao		339262	0					
ANR	356925	Identifier	o		339262	1					
ANR	356926	ShiftExpression	1 << 12		339262	1		<<			
ANR	356927	PrimaryExpression	1		339262	0					
ANR	356928	PrimaryExpression	12		339262	1					
ANR	356929	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4482:3:94117:94153	339262	2	True				
ANR	356930	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	356931	Callee	std_32bit_3reg		339262	0					
ANR	356932	Identifier	std_32bit_3reg		339262	0					
ANR	356933	ArgumentList	ao		339262	1					
ANR	356934	Argument	ao		339262	0					
ANR	356935	Identifier	ao		339262	0					
ANR	356936	Argument	m		339262	1					
ANR	356937	Identifier	m		339262	0					
ANR	356938	Argument	false		339262	2					
ANR	356939	Identifier	false		339262	0					
ANR	356940	BreakStatement	break ;	4484:3:94170:94175	339262	4	True				
ANR	356941	Label	default :	4485:2:94179:94186	339262	5	True				
ANR	356942	Identifier	default		339262	0					
ANR	356943	ReturnStatement	return - 1 ;	4486:3:94191:94200	339262	6	True				
ANR	356944	UnaryOperationExpression	- 1		339262	0					
ANR	356945	UnaryOperator	-		339262	0					
ANR	356946	PrimaryExpression	1		339262	1					
ANR	356947	ElseStatement	else		339262	0					
ANR	356948	IfStatement	"if ( ( m = opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT ) ) )"		339262	0					
ANR	356949	Condition	"m = opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT )"	4489:5:94219:94281	339262	0	True				
ANR	356950	AssignmentExpression	"m = opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT )"		339262	0		=			
ANR	356951	Identifier	m		339262	0					
ANR	356952	CallExpression	"opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT )"		339262	1					
ANR	356953	Callee	opmask		339262	0					
ANR	356954	Identifier	opmask		339262	0					
ANR	356955	ArgumentList	ao -> op		339262	1					
ANR	356956	Argument	ao -> op		339262	0					
ANR	356957	PtrMemberAccess	ao -> op		339262	0					
ANR	356958	Identifier	ao		339262	0					
ANR	356959	Identifier	op		339262	1					
ANR	356960	Argument	"""srs"""		339262	1					
ANR	356961	PrimaryExpression	"""srs"""		339262	0					
ANR	356962	Argument	DB_BIT | FD_BIT | IA_BIT | EA_BIT		339262	2					
ANR	356963	InclusiveOrExpression	DB_BIT | FD_BIT | IA_BIT | EA_BIT		339262	0		|			
ANR	356964	Identifier	DB_BIT		339262	0					
ANR	356965	InclusiveOrExpression	FD_BIT | IA_BIT | EA_BIT		339262	1		|			
ANR	356966	Identifier	FD_BIT		339262	0					
ANR	356967	InclusiveOrExpression	IA_BIT | EA_BIT		339262	1		|			
ANR	356968	Identifier	IA_BIT		339262	0					
ANR	356969	Identifier	EA_BIT		339262	1					
ANR	356970	CompoundStatement		3199:2:68443:68477	339262	1					
ANR	356971	IdentifierDeclStatement	ut32 w = 0 ;	4490:2:94288:94298	339262	0	True				
ANR	356972	IdentifierDecl	w = 0		339262	0					
ANR	356973	IdentifierDeclType	ut32		339262	0					
ANR	356974	Identifier	w		339262	1					
ANR	356975	AssignmentExpression	w = 0		339262	2		=			
ANR	356976	Identifier	w		339262	0					
ANR	356977	PrimaryExpression	0		339262	1					
ANR	356978	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4491:2:94302:94336	339262	1	True				
ANR	356979	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	356980	IdentifierDeclType	ut64		339262	0					
ANR	356981	Identifier	argt		339262	1					
ANR	356982	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	356983	Identifier	argt		339262	0					
ANR	356984	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	356985	Callee	thumb_selector		339262	0					
ANR	356986	Identifier	thumb_selector		339262	0					
ANR	356987	ArgumentList	ao -> a		339262	1					
ANR	356988	Argument	ao -> a		339262	0					
ANR	356989	PtrMemberAccess	ao -> a		339262	0					
ANR	356990	Identifier	ao		339262	0					
ANR	356991	Identifier	a		339262	1					
ANR	356992	SwitchStatement	switch ( argt )		339262	2					
ANR	356993	Condition	argt	4492:10:94348:94351	339262	0	True				
ANR	356994	Identifier	argt		339262	0					
ANR	356995	CompoundStatement		3200:16:68495:68495	339262	1					
ANR	356996	Label	case THUMB_CONSTBANG :	4493:2:94358:94378	339262	0	True				
ANR	356997	Identifier	THUMB_CONSTBANG		339262	0					
ANR	356998	CompoundStatement		3201:24:68521:68521	339262	1					
ANR	356999	ExpressionStatement	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'	4494:3:94385:94423	339262	0	True				
ANR	357000	AssignmentExpression	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	357001	ArrayIndexing	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ]		339262	0					
ANR	357002	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357003	PtrMemberAccess	ao -> a		339262	0					
ANR	357004	Identifier	ao		339262	0					
ANR	357005	Identifier	a		339262	1					
ANR	357006	PrimaryExpression	0		339262	1					
ANR	357007	AdditiveExpression	strlen ( ao -> a [ 0 ] ) - 1		339262	1		-			
ANR	357008	CallExpression	strlen ( ao -> a [ 0 ] )		339262	0					
ANR	357009	Callee	strlen		339262	0					
ANR	357010	Identifier	strlen		339262	0					
ANR	357011	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	357012	Argument	ao -> a [ 0 ]		339262	0					
ANR	357013	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357014	PtrMemberAccess	ao -> a		339262	0					
ANR	357015	Identifier	ao		339262	0					
ANR	357016	Identifier	a		339262	1					
ANR	357017	PrimaryExpression	0		339262	1					
ANR	357018	PrimaryExpression	1		339262	1					
ANR	357019	PrimaryExpression	'\\0'		339262	1					
ANR	357020	ExpressionStatement	w = 1	4495:3:94428:94433	339262	1	True				
ANR	357021	AssignmentExpression	w = 1		339262	0		=			
ANR	357022	Identifier	w		339262	0					
ANR	357023	PrimaryExpression	1		339262	1					
ANR	357024	Label	case THUMB_CONST :	4498:2:94479:94495	339262	2	True				
ANR	357025	Identifier	THUMB_CONST		339262	0					
ANR	357026	CompoundStatement		3207:3:68643:68671	339262	3					
ANR	357027	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	4499:3:94502:94530	339262	0	True				
ANR	357028	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	357029	IdentifierDeclType	ut32		339262	0					
ANR	357030	Identifier	num		339262	1					
ANR	357031	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	357032	Identifier	num		339262	0					
ANR	357033	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	357034	Callee	getnum		339262	0					
ANR	357035	Identifier	getnum		339262	0					
ANR	357036	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	357037	Argument	ao -> a [ 0 ]		339262	0					
ANR	357038	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357039	PtrMemberAccess	ao -> a		339262	0					
ANR	357040	Identifier	ao		339262	0					
ANR	357041	Identifier	a		339262	1					
ANR	357042	PrimaryExpression	0		339262	1					
ANR	357043	IfStatement	if ( num > 31 )		339262	1					
ANR	357044	Condition	num > 31	4500:7:94539:94546	339262	0	True				
ANR	357045	RelationalExpression	num > 31		339262	0		>			
ANR	357046	Identifier	num		339262	0					
ANR	357047	PrimaryExpression	31		339262	1					
ANR	357048	CompoundStatement		3208:17:68690:68690	339262	1					
ANR	357049	ReturnStatement	return - 1 ;	4501:4:94555:94564	339262	0	True				
ANR	357050	UnaryOperationExpression	- 1		339262	0					
ANR	357051	UnaryOperator	-		339262	0					
ANR	357052	PrimaryExpression	1		339262	1					
ANR	357053	IfStatement	if ( ( m & DB_BIT ) || ( m & FD_BIT ) )		339262	2					
ANR	357054	Condition	( m & DB_BIT ) || ( m & FD_BIT )	4503:7:94578:94605	339262	0	True				
ANR	357055	OrExpression	( m & DB_BIT ) || ( m & FD_BIT )		339262	0		||			
ANR	357056	BitAndExpression	m & DB_BIT		339262	0		&			
ANR	357057	Identifier	m		339262	0					
ANR	357058	Identifier	DB_BIT		339262	1					
ANR	357059	BitAndExpression	m & FD_BIT		339262	1		&			
ANR	357060	Identifier	m		339262	0					
ANR	357061	Identifier	FD_BIT		339262	1					
ANR	357062	CompoundStatement		3211:37:68749:68749	339262	1					
ANR	357063	ExpressionStatement	ao -> o = 0x0de800c0	4504:4:94614:94632	339262	0	True				
ANR	357064	AssignmentExpression	ao -> o = 0x0de800c0		339262	0		=			
ANR	357065	PtrMemberAccess	ao -> o		339262	0					
ANR	357066	Identifier	ao		339262	0					
ANR	357067	Identifier	o		339262	1					
ANR	357068	PrimaryExpression	0x0de800c0		339262	1					
ANR	357069	ElseStatement	else		339262	0					
ANR	357070	CompoundStatement		3213:10:68785:68785	339262	0					
ANR	357071	ExpressionStatement	ao -> o = 0x8de900c0	4506:4:94650:94668	339262	0	True				
ANR	357072	AssignmentExpression	ao -> o = 0x8de900c0		339262	0		=			
ANR	357073	PtrMemberAccess	ao -> o		339262	0					
ANR	357074	Identifier	ao		339262	0					
ANR	357075	Identifier	o		339262	1					
ANR	357076	PrimaryExpression	0x8de900c0		339262	1					
ANR	357077	ExpressionStatement	ao -> o |= num << 8	4508:3:94682:94699	339262	3	True				
ANR	357078	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	357079	PtrMemberAccess	ao -> o		339262	0					
ANR	357080	Identifier	ao		339262	0					
ANR	357081	Identifier	o		339262	1					
ANR	357082	ShiftExpression	num << 8		339262	1		<<			
ANR	357083	Identifier	num		339262	0					
ANR	357084	PrimaryExpression	8		339262	1					
ANR	357085	ExpressionStatement	ao -> o |= w << 29	4509:3:94704:94720	339262	4	True				
ANR	357086	AssignmentExpression	ao -> o |= w << 29		339262	0		|=			
ANR	357087	PtrMemberAccess	ao -> o		339262	0					
ANR	357088	Identifier	ao		339262	0					
ANR	357089	Identifier	o		339262	1					
ANR	357090	ShiftExpression	w << 29		339262	1		<<			
ANR	357091	Identifier	w		339262	0					
ANR	357092	PrimaryExpression	29		339262	1					
ANR	357093	ReturnStatement	return 4 ;	4510:3:94725:94733	339262	5	True				
ANR	357094	PrimaryExpression	4		339262	0					
ANR	357095	BreakStatement	break ;	4512:3:94750:94755	339262	4	True				
ANR	357096	Label	default :	4513:2:94759:94766	339262	5	True				
ANR	357097	Identifier	default		339262	0					
ANR	357098	ReturnStatement	return - 1 ;	4514:3:94771:94780	339262	6	True				
ANR	357099	UnaryOperationExpression	- 1		339262	0					
ANR	357100	UnaryOperator	-		339262	0					
ANR	357101	PrimaryExpression	1		339262	1					
ANR	357102	ElseStatement	else		339262	0					
ANR	357103	IfStatement	"if ( ( m = opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT ) ) )"		339262	0					
ANR	357104	Condition	"m = opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT )"	4517:5:94799:94840	339262	0	True				
ANR	357105	AssignmentExpression	"m = opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT )"		339262	0		=			
ANR	357106	Identifier	m		339262	0					
ANR	357107	CallExpression	"opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT )"		339262	1					
ANR	357108	Callee	opmask		339262	0					
ANR	357109	Identifier	opmask		339262	0					
ANR	357110	ArgumentList	ao -> op		339262	1					
ANR	357111	Argument	ao -> op		339262	0					
ANR	357112	PtrMemberAccess	ao -> op		339262	0					
ANR	357113	Identifier	ao		339262	0					
ANR	357114	Identifier	op		339262	1					
ANR	357115	Argument	"""ssat"""		339262	1					
ANR	357116	PrimaryExpression	"""ssat"""		339262	0					
ANR	357117	Argument	SIXTEEN_BIT		339262	2					
ANR	357118	Identifier	SIXTEEN_BIT		339262	0					
ANR	357119	CompoundStatement		3226:2:68988:69022	339262	1					
ANR	357120	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4518:2:94847:94881	339262	0	True				
ANR	357121	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	357122	IdentifierDeclType	ut64		339262	0					
ANR	357123	Identifier	argt		339262	1					
ANR	357124	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	357125	Identifier	argt		339262	0					
ANR	357126	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	357127	Callee	thumb_selector		339262	0					
ANR	357128	Identifier	thumb_selector		339262	0					
ANR	357129	ArgumentList	ao -> a		339262	1					
ANR	357130	Argument	ao -> a		339262	0					
ANR	357131	PtrMemberAccess	ao -> a		339262	0					
ANR	357132	Identifier	ao		339262	0					
ANR	357133	Identifier	a		339262	1					
ANR	357134	SwitchStatement	switch ( argt )		339262	1					
ANR	357135	Condition	argt	4519:10:94893:94896	339262	0	True				
ANR	357136	Identifier	argt		339262	0					
ANR	357137	CompoundStatement		3227:16:69040:69040	339262	1					
ANR	357138	Label	case THUMB_REG_CONST_REG :	4520:2:94903:94927	339262	0	True				
ANR	357139	Identifier	THUMB_REG_CONST_REG		339262	0					
ANR	357140	CompoundStatement		3228:28:69070:69070	339262	1					
ANR	357141	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	4521:3:94934:94952	339262	0	True				
ANR	357142	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	357143	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	357144	PtrMemberAccess	ao -> a		339262	0					
ANR	357145	Identifier	ao		339262	0					
ANR	357146	Identifier	a		339262	1					
ANR	357147	PrimaryExpression	3		339262	1					
ANR	357148	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	357149	Label	case THUMB_REG_CONST_REG_SHIFT :	4524:2:94998:95028	339262	2	True				
ANR	357150	Identifier	THUMB_REG_CONST_REG_SHIFT		339262	0					
ANR	357151	CompoundStatement		3236:3:69279:69317	339262	3					
ANR	357152	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4525:3:95035:95063	339262	0	True				
ANR	357153	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	357154	IdentifierDeclType	ut8		339262	0					
ANR	357155	Identifier	reg1		339262	1					
ANR	357156	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	357157	Identifier	reg1		339262	0					
ANR	357158	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	357159	Callee	getreg		339262	0					
ANR	357160	Identifier	getreg		339262	0					
ANR	357161	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	357162	Argument	ao -> a [ 0 ]		339262	0					
ANR	357163	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357164	PtrMemberAccess	ao -> a		339262	0					
ANR	357165	Identifier	ao		339262	0					
ANR	357166	Identifier	a		339262	1					
ANR	357167	PrimaryExpression	0		339262	1					
ANR	357168	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) - 1 ;	4526:3:95068:95100	339262	1	True				
ANR	357169	IdentifierDecl	num = getnum ( ao -> a [ 1 ] ) - 1		339262	0					
ANR	357170	IdentifierDeclType	ut32		339262	0					
ANR	357171	Identifier	num		339262	1					
ANR	357172	AssignmentExpression	num = getnum ( ao -> a [ 1 ] ) - 1		339262	2		=			
ANR	357173	Identifier	num		339262	0					
ANR	357174	AdditiveExpression	getnum ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	357175	CallExpression	getnum ( ao -> a [ 1 ] )		339262	0					
ANR	357176	Callee	getnum		339262	0					
ANR	357177	Identifier	getnum		339262	0					
ANR	357178	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	357179	Argument	ao -> a [ 1 ]		339262	0					
ANR	357180	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	357181	PtrMemberAccess	ao -> a		339262	0					
ANR	357182	Identifier	ao		339262	0					
ANR	357183	Identifier	a		339262	1					
ANR	357184	PrimaryExpression	1		339262	1					
ANR	357185	PrimaryExpression	1		339262	1					
ANR	357186	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 2 ] ) ;	4527:3:95105:95133	339262	2	True				
ANR	357187	IdentifierDecl	reg2 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	357188	IdentifierDeclType	ut8		339262	0					
ANR	357189	Identifier	reg2		339262	1					
ANR	357190	AssignmentExpression	reg2 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	357191	Identifier	reg2		339262	0					
ANR	357192	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	357193	Callee	getreg		339262	0					
ANR	357194	Identifier	getreg		339262	0					
ANR	357195	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	357196	Argument	ao -> a [ 2 ]		339262	0					
ANR	357197	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	357198	PtrMemberAccess	ao -> a		339262	0					
ANR	357199	Identifier	ao		339262	0					
ANR	357200	Identifier	a		339262	1					
ANR	357201	PrimaryExpression	2		339262	1					
ANR	357202	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	4528:3:95138:95176	339262	3	True				
ANR	357203	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	357204	IdentifierDeclType	ut32		339262	0					
ANR	357205	Identifier	shift		339262	1					
ANR	357206	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	357207	Identifier	shift		339262	0					
ANR	357208	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	357209	Callee	thumb_getshift		339262	0					
ANR	357210	Identifier	thumb_getshift		339262	0					
ANR	357211	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	357212	Argument	ao -> a [ 3 ]		339262	0					
ANR	357213	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	357214	PtrMemberAccess	ao -> a		339262	0					
ANR	357215	Identifier	ao		339262	0					
ANR	357216	Identifier	a		339262	1					
ANR	357217	PrimaryExpression	3		339262	1					
ANR	357218	IfStatement	if ( err || ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift ) )		339262	4					
ANR	357219	Condition	err || ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )	4530:7:95186:95288	339262	0	True				
ANR	357220	OrExpression	err || ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		339262	0		||			
ANR	357221	Identifier	err		339262	0					
ANR	357222	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		339262	1		||			
ANR	357223	RelationalExpression	reg1 > 15		339262	0		>			
ANR	357224	Identifier	reg1		339262	0					
ANR	357225	PrimaryExpression	15		339262	1					
ANR	357226	OrExpression	( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		339262	1		||			
ANR	357227	RelationalExpression	reg2 > 15		339262	0		>			
ANR	357228	Identifier	reg2		339262	0					
ANR	357229	PrimaryExpression	15		339262	1					
ANR	357230	OrExpression	( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		339262	1		||			
ANR	357231	RelationalExpression	num > 31		339262	0		>			
ANR	357232	Identifier	num		339262	0					
ANR	357233	PrimaryExpression	31		339262	1					
ANR	357234	OrExpression	( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		339262	1		||			
ANR	357235	BitAndExpression	shift & 0x00001000		339262	0		&			
ANR	357236	Identifier	shift		339262	0					
ANR	357237	PrimaryExpression	0x00001000		339262	1					
ANR	357238	AndExpression	( m & SIXTEEN_BIT ) && shift		339262	1		&&			
ANR	357239	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	357240	Identifier	m		339262	0					
ANR	357241	Identifier	SIXTEEN_BIT		339262	1					
ANR	357242	Identifier	shift		339262	1					
ANR	357243	CompoundStatement		3238:112:69432:69432	339262	1					
ANR	357244	ReturnStatement	return - 1 ;	4531:4:95297:95306	339262	0	True				
ANR	357245	UnaryOperationExpression	- 1		339262	0					
ANR	357246	UnaryOperator	-		339262	0					
ANR	357247	PrimaryExpression	1		339262	1					
ANR	357248	IfStatement	if ( shift & 0x00002000 )		339262	5					
ANR	357249	Condition	shift & 0x00002000	4534:7:95321:95338	339262	0	True				
ANR	357250	BitAndExpression	shift & 0x00002000		339262	0		&			
ANR	357251	Identifier	shift		339262	0					
ANR	357252	PrimaryExpression	0x00002000		339262	1					
ANR	357253	CompoundStatement		3242:27:69482:69482	339262	1					
ANR	357254	ExpressionStatement	shift |= 0x20000000	4535:4:95347:95366	339262	0	True				
ANR	357255	AssignmentExpression	shift |= 0x20000000		339262	0		|=			
ANR	357256	Identifier	shift		339262	0					
ANR	357257	PrimaryExpression	0x20000000		339262	1					
ANR	357258	ExpressionStatement	shift &= 0xffffdfff	4536:4:95372:95391	339262	1	True				
ANR	357259	AssignmentExpression	shift &= 0xffffdfff		339262	0		&=			
ANR	357260	Identifier	shift		339262	0					
ANR	357261	PrimaryExpression	0xffffdfff		339262	1					
ANR	357262	IfStatement	if ( m & SIXTEEN_BIT )		339262	6					
ANR	357263	Condition	m & SIXTEEN_BIT	4539:7:95406:95420	339262	0	True				
ANR	357264	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	357265	Identifier	m		339262	0					
ANR	357266	Identifier	SIXTEEN_BIT		339262	1					
ANR	357267	CompoundStatement		3247:24:69564:69564	339262	1					
ANR	357268	ExpressionStatement	ao -> o = 0x20f30000	4540:4:95429:95447	339262	0	True				
ANR	357269	AssignmentExpression	ao -> o = 0x20f30000		339262	0		=			
ANR	357270	PtrMemberAccess	ao -> o		339262	0					
ANR	357271	Identifier	ao		339262	0					
ANR	357272	Identifier	o		339262	1					
ANR	357273	PrimaryExpression	0x20f30000		339262	1					
ANR	357274	ElseStatement	else		339262	0					
ANR	357275	CompoundStatement		3249:10:69600:69600	339262	0					
ANR	357276	ExpressionStatement	ao -> o = 0x00f30000	4542:4:95465:95483	339262	0	True				
ANR	357277	AssignmentExpression	ao -> o = 0x00f30000		339262	0		=			
ANR	357278	PtrMemberAccess	ao -> o		339262	0					
ANR	357279	Identifier	ao		339262	0					
ANR	357280	Identifier	o		339262	1					
ANR	357281	PrimaryExpression	0x00f30000		339262	1					
ANR	357282	ExpressionStatement	ao -> o |= reg1	4545:3:95494:95507	339262	7	True				
ANR	357283	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	357284	PtrMemberAccess	ao -> o		339262	0					
ANR	357285	Identifier	ao		339262	0					
ANR	357286	Identifier	o		339262	1					
ANR	357287	Identifier	reg1		339262	1					
ANR	357288	ExpressionStatement	ao -> o |= reg2 << 24	4546:3:95512:95531	339262	8	True				
ANR	357289	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	357290	PtrMemberAccess	ao -> o		339262	0					
ANR	357291	Identifier	ao		339262	0					
ANR	357292	Identifier	o		339262	1					
ANR	357293	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	357294	Identifier	reg2		339262	0					
ANR	357295	PrimaryExpression	24		339262	1					
ANR	357296	ExpressionStatement	ao -> o |= num << 8	4547:3:95536:95553	339262	9	True				
ANR	357297	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	357298	PtrMemberAccess	ao -> o		339262	0					
ANR	357299	Identifier	ao		339262	0					
ANR	357300	Identifier	o		339262	1					
ANR	357301	ShiftExpression	num << 8		339262	1		<<			
ANR	357302	Identifier	num		339262	0					
ANR	357303	PrimaryExpression	8		339262	1					
ANR	357304	ExpressionStatement	ao -> o |= shift	4548:3:95558:95572	339262	10	True				
ANR	357305	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	357306	PtrMemberAccess	ao -> o		339262	0					
ANR	357307	Identifier	ao		339262	0					
ANR	357308	Identifier	o		339262	1					
ANR	357309	Identifier	shift		339262	1					
ANR	357310	ReturnStatement	return 4 ;	4549:3:95577:95585	339262	11	True				
ANR	357311	PrimaryExpression	4		339262	0					
ANR	357312	BreakStatement	break ;	4551:3:95602:95607	339262	4	True				
ANR	357313	Label	default :	4552:2:95611:95618	339262	5	True				
ANR	357314	Identifier	default		339262	0					
ANR	357315	ReturnStatement	return - 1 ;	4553:3:95623:95632	339262	6	True				
ANR	357316	UnaryOperationExpression	- 1		339262	0					
ANR	357317	UnaryOperator	-		339262	0					
ANR	357318	PrimaryExpression	1		339262	1					
ANR	357319	ElseStatement	else		339262	0					
ANR	357320	IfStatement	"if ( ( m = opmask ( ao -> op , ""ssax"" , 0 ) ) )"		339262	0					
ANR	357321	Condition	"m = opmask ( ao -> op , ""ssax"" , 0 )"	4556:5:95651:95682	339262	0	True				
ANR	357322	AssignmentExpression	"m = opmask ( ao -> op , ""ssax"" , 0 )"		339262	0		=			
ANR	357323	Identifier	m		339262	0					
ANR	357324	CallExpression	"opmask ( ao -> op , ""ssax"" , 0 )"		339262	1					
ANR	357325	Callee	opmask		339262	0					
ANR	357326	Identifier	opmask		339262	0					
ANR	357327	ArgumentList	ao -> op		339262	1					
ANR	357328	Argument	ao -> op		339262	0					
ANR	357329	PtrMemberAccess	ao -> op		339262	0					
ANR	357330	Identifier	ao		339262	0					
ANR	357331	Identifier	op		339262	1					
ANR	357332	Argument	"""ssax"""		339262	1					
ANR	357333	PrimaryExpression	"""ssax"""		339262	0					
ANR	357334	Argument	0		339262	2					
ANR	357335	PrimaryExpression	0		339262	0					
ANR	357336	CompoundStatement		3265:2:69830:69864	339262	1					
ANR	357337	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4557:2:95689:95723	339262	0	True				
ANR	357338	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	357339	IdentifierDeclType	ut64		339262	0					
ANR	357340	Identifier	argt		339262	1					
ANR	357341	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	357342	Identifier	argt		339262	0					
ANR	357343	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	357344	Callee	thumb_selector		339262	0					
ANR	357345	Identifier	thumb_selector		339262	0					
ANR	357346	ArgumentList	ao -> a		339262	1					
ANR	357347	Argument	ao -> a		339262	0					
ANR	357348	PtrMemberAccess	ao -> a		339262	0					
ANR	357349	Identifier	ao		339262	0					
ANR	357350	Identifier	a		339262	1					
ANR	357351	SwitchStatement	switch ( argt )		339262	1					
ANR	357352	Condition	argt	4558:10:95735:95738	339262	0	True				
ANR	357353	Identifier	argt		339262	0					
ANR	357354	CompoundStatement		3266:16:69882:69882	339262	1					
ANR	357355	Label	case THUMB_REG_REG :	4559:2:95745:95763	339262	0	True				
ANR	357356	Identifier	THUMB_REG_REG		339262	0					
ANR	357357	CompoundStatement		3267:22:69906:69906	339262	1					
ANR	357358	ExpressionStatement	std_opt_2 ( ao )	4560:3:95770:95784	339262	0	True				
ANR	357359	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	357360	Callee	std_opt_2		339262	0					
ANR	357361	Identifier	std_opt_2		339262	0					
ANR	357362	ArgumentList	ao		339262	1					
ANR	357363	Argument	ao		339262	0					
ANR	357364	Identifier	ao		339262	0					
ANR	357365	Label	case THUMB_REG_REG_REG :	4563:2:95830:95852	339262	2	True				
ANR	357366	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	357367	CompoundStatement		3271:26:69995:69995	339262	3					
ANR	357368	ExpressionStatement	ao -> o = 0xe0fa00f0	4564:3:95859:95877	339262	0	True				
ANR	357369	AssignmentExpression	ao -> o = 0xe0fa00f0		339262	0		=			
ANR	357370	PtrMemberAccess	ao -> o		339262	0					
ANR	357371	Identifier	ao		339262	0					
ANR	357372	Identifier	o		339262	1					
ANR	357373	PrimaryExpression	0xe0fa00f0		339262	1					
ANR	357374	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4565:3:95882:95918	339262	1	True				
ANR	357375	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	357376	Callee	std_32bit_3reg		339262	0					
ANR	357377	Identifier	std_32bit_3reg		339262	0					
ANR	357378	ArgumentList	ao		339262	1					
ANR	357379	Argument	ao		339262	0					
ANR	357380	Identifier	ao		339262	0					
ANR	357381	Argument	m		339262	1					
ANR	357382	Identifier	m		339262	0					
ANR	357383	Argument	false		339262	2					
ANR	357384	Identifier	false		339262	0					
ANR	357385	BreakStatement	break ;	4567:3:95935:95940	339262	4	True				
ANR	357386	Label	default :	4568:2:95944:95951	339262	5	True				
ANR	357387	Identifier	default		339262	0					
ANR	357388	ReturnStatement	return - 1 ;	4569:3:95956:95965	339262	6	True				
ANR	357389	UnaryOperationExpression	- 1		339262	0					
ANR	357390	UnaryOperator	-		339262	0					
ANR	357391	PrimaryExpression	1		339262	1					
ANR	357392	ElseStatement	else		339262	0					
ANR	357393	IfStatement	"if ( ( m = opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	357394	Condition	"m = opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT )"	4572:5:95984:96037	339262	0	True				
ANR	357395	AssignmentExpression	"m = opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	357396	Identifier	m		339262	0					
ANR	357397	CallExpression	"opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	357398	Callee	opmask		339262	0					
ANR	357399	Identifier	opmask		339262	0					
ANR	357400	ArgumentList	ao -> op		339262	1					
ANR	357401	Argument	ao -> op		339262	0					
ANR	357402	PtrMemberAccess	ao -> op		339262	0					
ANR	357403	Identifier	ao		339262	0					
ANR	357404	Identifier	op		339262	1					
ANR	357405	Argument	"""ssub"""		339262	1					
ANR	357406	PrimaryExpression	"""ssub"""		339262	0					
ANR	357407	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	357408	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	357409	Identifier	EIGHT_BIT		339262	0					
ANR	357410	Identifier	SIXTEEN_BIT		339262	1					
ANR	357411	CompoundStatement		3281:2:70185:70219	339262	1					
ANR	357412	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4573:2:96044:96078	339262	0	True				
ANR	357413	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	357414	IdentifierDeclType	ut64		339262	0					
ANR	357415	Identifier	argt		339262	1					
ANR	357416	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	357417	Identifier	argt		339262	0					
ANR	357418	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	357419	Callee	thumb_selector		339262	0					
ANR	357420	Identifier	thumb_selector		339262	0					
ANR	357421	ArgumentList	ao -> a		339262	1					
ANR	357422	Argument	ao -> a		339262	0					
ANR	357423	PtrMemberAccess	ao -> a		339262	0					
ANR	357424	Identifier	ao		339262	0					
ANR	357425	Identifier	a		339262	1					
ANR	357426	SwitchStatement	switch ( argt )		339262	1					
ANR	357427	Condition	argt	4574:10:96090:96093	339262	0	True				
ANR	357428	Identifier	argt		339262	0					
ANR	357429	CompoundStatement		3282:16:70237:70237	339262	1					
ANR	357430	Label	case THUMB_REG_REG :	4575:2:96100:96118	339262	0	True				
ANR	357431	Identifier	THUMB_REG_REG		339262	0					
ANR	357432	CompoundStatement		3283:22:70261:70261	339262	1					
ANR	357433	ExpressionStatement	std_opt_2 ( ao )	4576:3:96125:96139	339262	0	True				
ANR	357434	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	357435	Callee	std_opt_2		339262	0					
ANR	357436	Identifier	std_opt_2		339262	0					
ANR	357437	ArgumentList	ao		339262	1					
ANR	357438	Argument	ao		339262	0					
ANR	357439	Identifier	ao		339262	0					
ANR	357440	Label	case THUMB_REG_REG_REG :	4579:2:96185:96207	339262	2	True				
ANR	357441	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	357442	CompoundStatement		3287:26:70350:70350	339262	3					
ANR	357443	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	357444	Condition	m & EIGHT_BIT	4580:7:96218:96230	339262	0	True				
ANR	357445	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	357446	Identifier	m		339262	0					
ANR	357447	Identifier	EIGHT_BIT		339262	1					
ANR	357448	CompoundStatement		3288:22:70374:70374	339262	1					
ANR	357449	ExpressionStatement	ao -> o = 0xc0fa00f0	4581:4:96239:96257	339262	0	True				
ANR	357450	AssignmentExpression	ao -> o = 0xc0fa00f0		339262	0		=			
ANR	357451	PtrMemberAccess	ao -> o		339262	0					
ANR	357452	Identifier	ao		339262	0					
ANR	357453	Identifier	o		339262	1					
ANR	357454	PrimaryExpression	0xc0fa00f0		339262	1					
ANR	357455	ElseStatement	else		339262	0					
ANR	357456	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	357457	Condition	m & SIXTEEN_BIT	4583:7:96276:96290	339262	0	True				
ANR	357458	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	357459	Identifier	m		339262	0					
ANR	357460	Identifier	SIXTEEN_BIT		339262	1					
ANR	357461	CompoundStatement		3291:24:70434:70434	339262	1					
ANR	357462	ExpressionStatement	ao -> o = 0xd0fa00f0	4584:4:96299:96317	339262	0	True				
ANR	357463	AssignmentExpression	ao -> o = 0xd0fa00f0		339262	0		=			
ANR	357464	PtrMemberAccess	ao -> o		339262	0					
ANR	357465	Identifier	ao		339262	0					
ANR	357466	Identifier	o		339262	1					
ANR	357467	PrimaryExpression	0xd0fa00f0		339262	1					
ANR	357468	ElseStatement	else		339262	0					
ANR	357469	CompoundStatement		3293:10:70470:70470	339262	0					
ANR	357470	ReturnStatement	return - 1 ;	4586:4:96335:96344	339262	0	True				
ANR	357471	UnaryOperationExpression	- 1		339262	0					
ANR	357472	UnaryOperator	-		339262	0					
ANR	357473	PrimaryExpression	1		339262	1					
ANR	357474	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4588:3:96354:96390	339262	1	True				
ANR	357475	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	357476	Callee	std_32bit_3reg		339262	0					
ANR	357477	Identifier	std_32bit_3reg		339262	0					
ANR	357478	ArgumentList	ao		339262	1					
ANR	357479	Argument	ao		339262	0					
ANR	357480	Identifier	ao		339262	0					
ANR	357481	Argument	m		339262	1					
ANR	357482	Identifier	m		339262	0					
ANR	357483	Argument	false		339262	2					
ANR	357484	Identifier	false		339262	0					
ANR	357485	BreakStatement	break ;	4590:3:96407:96412	339262	4	True				
ANR	357486	Label	default :	4591:2:96416:96423	339262	5	True				
ANR	357487	Identifier	default		339262	0					
ANR	357488	ReturnStatement	return - 1 ;	4592:3:96428:96437	339262	6	True				
ANR	357489	UnaryOperationExpression	- 1		339262	0					
ANR	357490	UnaryOperator	-		339262	0					
ANR	357491	PrimaryExpression	1		339262	1					
ANR	357492	ElseStatement	else		339262	0					
ANR	357493	IfStatement	"if ( ( m = opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT ) ) )"		339262	0					
ANR	357494	Condition	"m = opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT )"	4594:12:96455:96499	339262	0	True				
ANR	357495	AssignmentExpression	"m = opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT )"		339262	0		=			
ANR	357496	Identifier	m		339262	0					
ANR	357497	CallExpression	"opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT )"		339262	1					
ANR	357498	Callee	opmask		339262	0					
ANR	357499	Identifier	opmask		339262	0					
ANR	357500	ArgumentList	ao -> op		339262	1					
ANR	357501	Argument	ao -> op		339262	0					
ANR	357502	PtrMemberAccess	ao -> op		339262	0					
ANR	357503	Identifier	ao		339262	0					
ANR	357504	Identifier	op		339262	1					
ANR	357505	Argument	"""stc"""		339262	1					
ANR	357506	PrimaryExpression	"""stc"""		339262	0					
ANR	357507	Argument	L_BIT | TWO_BIT		339262	2					
ANR	357508	InclusiveOrExpression	L_BIT | TWO_BIT		339262	0		|			
ANR	357509	Identifier	L_BIT		339262	0					
ANR	357510	Identifier	TWO_BIT		339262	1					
ANR	357511	CompoundStatement		3303:2:70647:70681	339262	1					
ANR	357512	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4595:2:96506:96540	339262	0	True				
ANR	357513	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	357514	IdentifierDeclType	ut64		339262	0					
ANR	357515	Identifier	argt		339262	1					
ANR	357516	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	357517	Identifier	argt		339262	0					
ANR	357518	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	357519	Callee	thumb_selector		339262	0					
ANR	357520	Identifier	thumb_selector		339262	0					
ANR	357521	ArgumentList	ao -> a		339262	1					
ANR	357522	Argument	ao -> a		339262	0					
ANR	357523	PtrMemberAccess	ao -> a		339262	0					
ANR	357524	Identifier	ao		339262	0					
ANR	357525	Identifier	a		339262	1					
ANR	357526	SwitchStatement	switch ( argt )		339262	1					
ANR	357527	Condition	argt	4596:10:96552:96555	339262	0	True				
ANR	357528	Identifier	argt		339262	0					
ANR	357529	CompoundStatement		3304:16:70699:70699	339262	1					
ANR	357530	Label	case THUMB_COPROC_COREG_BRACKREGBRACK :	4597:2:96562:96599	339262	0	True				
ANR	357531	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK		339262	0					
ANR	357532	CompoundStatement		3305:41:70742:70742	339262	1					
ANR	357533	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	4598:3:96606:96644	339262	0	True				
ANR	357534	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	357535	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		339262	0					
ANR	357536	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	357537	PtrMemberAccess	ao -> a		339262	0					
ANR	357538	Identifier	ao		339262	0					
ANR	357539	Identifier	a		339262	1					
ANR	357540	PrimaryExpression	2		339262	1					
ANR	357541	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		339262	1		-			
ANR	357542	CallExpression	strlen ( ao -> a [ 2 ] )		339262	0					
ANR	357543	Callee	strlen		339262	0					
ANR	357544	Identifier	strlen		339262	0					
ANR	357545	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	357546	Argument	ao -> a [ 2 ]		339262	0					
ANR	357547	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	357548	PtrMemberAccess	ao -> a		339262	0					
ANR	357549	Identifier	ao		339262	0					
ANR	357550	Identifier	a		339262	1					
ANR	357551	PrimaryExpression	2		339262	1					
ANR	357552	PrimaryExpression	1		339262	1					
ANR	357553	PrimaryExpression	'\\0'		339262	1					
ANR	357554	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	4599:3:96649:96664	339262	1	True				
ANR	357555	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		339262	0		=			
ANR	357556	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	357557	PtrMemberAccess	ao -> a		339262	0					
ANR	357558	Identifier	ao		339262	0					
ANR	357559	Identifier	a		339262	1					
ANR	357560	PrimaryExpression	3		339262	1					
ANR	357561	PrimaryExpression	"""0]"""		339262	1					
ANR	357562	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACK :	4602:2:96710:96753	339262	2	True				
ANR	357563	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACK		339262	0					
ANR	357564	CompoundStatement		3314:3:71019:71053	339262	3					
ANR	357565	IdentifierDeclStatement	ut8 coproc = getcoproc ( ao -> a [ 0 ] ) ;	4603:3:96760:96793	339262	0	True				
ANR	357566	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	357567	IdentifierDeclType	ut8		339262	0					
ANR	357568	Identifier	coproc		339262	1					
ANR	357569	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	357570	Identifier	coproc		339262	0					
ANR	357571	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	357572	Callee	getcoproc		339262	0					
ANR	357573	Identifier	getcoproc		339262	0					
ANR	357574	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	357575	Argument	ao -> a [ 0 ]		339262	0					
ANR	357576	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357577	PtrMemberAccess	ao -> a		339262	0					
ANR	357578	Identifier	ao		339262	0					
ANR	357579	Identifier	a		339262	1					
ANR	357580	PrimaryExpression	0		339262	1					
ANR	357581	IdentifierDeclStatement	ut8 coreg = getcoprocreg ( ao -> a [ 1 ] ) ;	4604:3:96798:96833	339262	1	True				
ANR	357582	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 1 ] )		339262	0					
ANR	357583	IdentifierDeclType	ut8		339262	0					
ANR	357584	Identifier	coreg		339262	1					
ANR	357585	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	357586	Identifier	coreg		339262	0					
ANR	357587	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		339262	1					
ANR	357588	Callee	getcoprocreg		339262	0					
ANR	357589	Identifier	getcoprocreg		339262	0					
ANR	357590	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	357591	Argument	ao -> a [ 1 ]		339262	0					
ANR	357592	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	357593	PtrMemberAccess	ao -> a		339262	0					
ANR	357594	Identifier	ao		339262	0					
ANR	357595	Identifier	a		339262	1					
ANR	357596	PrimaryExpression	1		339262	1					
ANR	357597	IdentifierDeclStatement	ut8 reg = getregmemstart ( ao -> a [ 2 ] ) ;	4605:3:96838:96873	339262	2	True				
ANR	357598	IdentifierDecl	reg = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	357599	IdentifierDeclType	ut8		339262	0					
ANR	357600	Identifier	reg		339262	1					
ANR	357601	AssignmentExpression	reg = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	357602	Identifier	reg		339262	0					
ANR	357603	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	357604	Callee	getregmemstart		339262	0					
ANR	357605	Identifier	getregmemstart		339262	0					
ANR	357606	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	357607	Argument	ao -> a [ 2 ]		339262	0					
ANR	357608	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	357609	PtrMemberAccess	ao -> a		339262	0					
ANR	357610	Identifier	ao		339262	0					
ANR	357611	Identifier	a		339262	1					
ANR	357612	PrimaryExpression	2		339262	1					
ANR	357613	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	4606:3:96878:96912	339262	3	True				
ANR	357614	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		339262	0					
ANR	357615	IdentifierDeclType	st32		339262	0					
ANR	357616	Identifier	num		339262	1					
ANR	357617	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		339262	2		=			
ANR	357618	Identifier	num		339262	0					
ANR	357619	CallExpression	getnummemend ( ao -> a [ 3 ] )		339262	1					
ANR	357620	Callee	getnummemend		339262	0					
ANR	357621	Identifier	getnummemend		339262	0					
ANR	357622	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	357623	Argument	ao -> a [ 3 ]		339262	0					
ANR	357624	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	357625	PtrMemberAccess	ao -> a		339262	0					
ANR	357626	Identifier	ao		339262	0					
ANR	357627	Identifier	a		339262	1					
ANR	357628	PrimaryExpression	3		339262	1					
ANR	357629	IfStatement	if ( ( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 ) )		339262	4					
ANR	357630	Condition	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )	4608:7:96922:97015	339262	0	True				
ANR	357631	OrExpression	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	0		||			
ANR	357632	RelationalExpression	coproc > 15		339262	0		>			
ANR	357633	Identifier	coproc		339262	0					
ANR	357634	PrimaryExpression	15		339262	1					
ANR	357635	OrExpression	( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357636	RelationalExpression	coreg > 15		339262	0		>			
ANR	357637	Identifier	coreg		339262	0					
ANR	357638	PrimaryExpression	15		339262	1					
ANR	357639	OrExpression	( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357640	RelationalExpression	reg > 15		339262	0		>			
ANR	357641	Identifier	reg		339262	0					
ANR	357642	PrimaryExpression	15		339262	1					
ANR	357643	OrExpression	( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357644	RelationalExpression	num > 4092		339262	0		>			
ANR	357645	Identifier	num		339262	0					
ANR	357646	PrimaryExpression	4092		339262	1					
ANR	357647	OrExpression	( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357648	RelationalExpression	num < - 4092		339262	0		<			
ANR	357649	Identifier	num		339262	0					
ANR	357650	UnaryOperationExpression	- 4092		339262	1					
ANR	357651	UnaryOperator	-		339262	0					
ANR	357652	PrimaryExpression	4092		339262	1					
ANR	357653	EqualityExpression	num % 4 != 0		339262	1		!=			
ANR	357654	MultiplicativeExpression	num % 4		339262	0		%			
ANR	357655	Identifier	num		339262	0					
ANR	357656	PrimaryExpression	4		339262	1					
ANR	357657	PrimaryExpression	0		339262	1					
ANR	357658	CompoundStatement		3316:103:71159:71159	339262	1					
ANR	357659	ReturnStatement	return - 1 ;	4609:4:97024:97033	339262	0	True				
ANR	357660	UnaryOperationExpression	- 1		339262	0					
ANR	357661	UnaryOperator	-		339262	0					
ANR	357662	PrimaryExpression	1		339262	1					
ANR	357663	ExpressionStatement	ao -> o = 0x00ed0000	4612:3:97046:97064	339262	5	True				
ANR	357664	AssignmentExpression	ao -> o = 0x00ed0000		339262	0		=			
ANR	357665	PtrMemberAccess	ao -> o		339262	0					
ANR	357666	Identifier	ao		339262	0					
ANR	357667	Identifier	o		339262	1					
ANR	357668	PrimaryExpression	0x00ed0000		339262	1					
ANR	357669	IfStatement	if ( m & L_BIT )		339262	6					
ANR	357670	Condition	m & L_BIT	4613:7:97073:97081	339262	0	True				
ANR	357671	BitAndExpression	m & L_BIT		339262	0		&			
ANR	357672	Identifier	m		339262	0					
ANR	357673	Identifier	L_BIT		339262	1					
ANR	357674	CompoundStatement		3321:18:71225:71225	339262	1					
ANR	357675	ExpressionStatement	ao -> o |= 1 << 30	4614:4:97090:97106	339262	0	True				
ANR	357676	AssignmentExpression	ao -> o |= 1 << 30		339262	0		|=			
ANR	357677	PtrMemberAccess	ao -> o		339262	0					
ANR	357678	Identifier	ao		339262	0					
ANR	357679	Identifier	o		339262	1					
ANR	357680	ShiftExpression	1 << 30		339262	1		<<			
ANR	357681	PrimaryExpression	1		339262	0					
ANR	357682	PrimaryExpression	30		339262	1					
ANR	357683	IfStatement	if ( m & TWO_BIT )		339262	7					
ANR	357684	Condition	m & TWO_BIT	4616:7:97120:97130	339262	0	True				
ANR	357685	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	357686	Identifier	m		339262	0					
ANR	357687	Identifier	TWO_BIT		339262	1					
ANR	357688	CompoundStatement		3324:20:71274:71274	339262	1					
ANR	357689	ExpressionStatement	ao -> o |= 1 << 20	4617:4:97139:97155	339262	0	True				
ANR	357690	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	357691	PtrMemberAccess	ao -> o		339262	0					
ANR	357692	Identifier	ao		339262	0					
ANR	357693	Identifier	o		339262	1					
ANR	357694	ShiftExpression	1 << 20		339262	1		<<			
ANR	357695	PrimaryExpression	1		339262	0					
ANR	357696	PrimaryExpression	20		339262	1					
ANR	357697	IfStatement	if ( num < 0 )		339262	8					
ANR	357698	Condition	num < 0	4619:7:97169:97175	339262	0	True				
ANR	357699	RelationalExpression	num < 0		339262	0		<			
ANR	357700	Identifier	num		339262	0					
ANR	357701	PrimaryExpression	0		339262	1					
ANR	357702	CompoundStatement		3327:16:71319:71319	339262	1					
ANR	357703	ExpressionStatement	num = - num	4620:4:97184:97194	339262	0	True				
ANR	357704	AssignmentExpression	num = - num		339262	0		=			
ANR	357705	Identifier	num		339262	0					
ANR	357706	UnaryOperationExpression	- num		339262	1					
ANR	357707	UnaryOperator	-		339262	0					
ANR	357708	Identifier	num		339262	1					
ANR	357709	ElseStatement	else		339262	0					
ANR	357710	CompoundStatement		3329:10:71347:71347	339262	0					
ANR	357711	ExpressionStatement	ao -> o |= 1 << 31	4622:4:97212:97228	339262	0	True				
ANR	357712	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	357713	PtrMemberAccess	ao -> o		339262	0					
ANR	357714	Identifier	ao		339262	0					
ANR	357715	Identifier	o		339262	1					
ANR	357716	ShiftExpression	1 << 31		339262	1		<<			
ANR	357717	PrimaryExpression	1		339262	0					
ANR	357718	PrimaryExpression	31		339262	1					
ANR	357719	ExpressionStatement	ao -> o |= coproc	4624:3:97242:97257	339262	9	True				
ANR	357720	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	357721	PtrMemberAccess	ao -> o		339262	0					
ANR	357722	Identifier	ao		339262	0					
ANR	357723	Identifier	o		339262	1					
ANR	357724	Identifier	coproc		339262	1					
ANR	357725	ExpressionStatement	ao -> o |= coreg << 4	4625:3:97262:97281	339262	10	True				
ANR	357726	AssignmentExpression	ao -> o |= coreg << 4		339262	0		|=			
ANR	357727	PtrMemberAccess	ao -> o		339262	0					
ANR	357728	Identifier	ao		339262	0					
ANR	357729	Identifier	o		339262	1					
ANR	357730	ShiftExpression	coreg << 4		339262	1		<<			
ANR	357731	Identifier	coreg		339262	0					
ANR	357732	PrimaryExpression	4		339262	1					
ANR	357733	ExpressionStatement	ao -> o |= reg << 24	4626:3:97286:97304	339262	11	True				
ANR	357734	AssignmentExpression	ao -> o |= reg << 24		339262	0		|=			
ANR	357735	PtrMemberAccess	ao -> o		339262	0					
ANR	357736	Identifier	ao		339262	0					
ANR	357737	Identifier	o		339262	1					
ANR	357738	ShiftExpression	reg << 24		339262	1		<<			
ANR	357739	Identifier	reg		339262	0					
ANR	357740	PrimaryExpression	24		339262	1					
ANR	357741	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4627:3:97309:97333	339262	12	True				
ANR	357742	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	357743	PtrMemberAccess	ao -> o		339262	0					
ANR	357744	Identifier	ao		339262	0					
ANR	357745	Identifier	o		339262	1					
ANR	357746	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	357747	ShiftExpression	num >> 2		339262	0		>>			
ANR	357748	Identifier	num		339262	0					
ANR	357749	PrimaryExpression	2		339262	1					
ANR	357750	PrimaryExpression	8		339262	1					
ANR	357751	ReturnStatement	return 4 ;	4628:3:97338:97346	339262	13	True				
ANR	357752	PrimaryExpression	4		339262	0					
ANR	357753	BreakStatement	break ;	4630:3:97363:97368	339262	4	True				
ANR	357754	Label	case THUMB_COPROC_COREG_BRACKREGBRACK_CONST :	4631:2:97372:97415	339262	5	True				
ANR	357755	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK_CONST		339262	0					
ANR	357756	CompoundStatement		3343:3:71684:71712	339262	6					
ANR	357757	IdentifierDeclStatement	ut8 coproc = getcoproc ( ao -> a [ 0 ] ) ;	4632:3:97422:97455	339262	0	True				
ANR	357758	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	357759	IdentifierDeclType	ut8		339262	0					
ANR	357760	Identifier	coproc		339262	1					
ANR	357761	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	357762	Identifier	coproc		339262	0					
ANR	357763	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	357764	Callee	getcoproc		339262	0					
ANR	357765	Identifier	getcoproc		339262	0					
ANR	357766	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	357767	Argument	ao -> a [ 0 ]		339262	0					
ANR	357768	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357769	PtrMemberAccess	ao -> a		339262	0					
ANR	357770	Identifier	ao		339262	0					
ANR	357771	Identifier	a		339262	1					
ANR	357772	PrimaryExpression	0		339262	1					
ANR	357773	IdentifierDeclStatement	ut8 coreg = getcoprocreg ( ao -> a [ 1 ] ) ;	4633:3:97460:97495	339262	1	True				
ANR	357774	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 1 ] )		339262	0					
ANR	357775	IdentifierDeclType	ut8		339262	0					
ANR	357776	Identifier	coreg		339262	1					
ANR	357777	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	357778	Identifier	coreg		339262	0					
ANR	357779	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		339262	1					
ANR	357780	Callee	getcoprocreg		339262	0					
ANR	357781	Identifier	getcoprocreg		339262	0					
ANR	357782	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	357783	Argument	ao -> a [ 1 ]		339262	0					
ANR	357784	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	357785	PtrMemberAccess	ao -> a		339262	0					
ANR	357786	Identifier	ao		339262	0					
ANR	357787	Identifier	a		339262	1					
ANR	357788	PrimaryExpression	1		339262	1					
ANR	357789	IdentifierDeclStatement	ut8 reg = getregmemstartend ( ao -> a [ 2 ] ) ;	4634:3:97500:97538	339262	2	True				
ANR	357790	IdentifierDecl	reg = getregmemstartend ( ao -> a [ 2 ] )		339262	0					
ANR	357791	IdentifierDeclType	ut8		339262	0					
ANR	357792	Identifier	reg		339262	1					
ANR	357793	AssignmentExpression	reg = getregmemstartend ( ao -> a [ 2 ] )		339262	2		=			
ANR	357794	Identifier	reg		339262	0					
ANR	357795	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		339262	1					
ANR	357796	Callee	getregmemstartend		339262	0					
ANR	357797	Identifier	getregmemstartend		339262	0					
ANR	357798	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	357799	Argument	ao -> a [ 2 ]		339262	0					
ANR	357800	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	357801	PtrMemberAccess	ao -> a		339262	0					
ANR	357802	Identifier	ao		339262	0					
ANR	357803	Identifier	a		339262	1					
ANR	357804	PrimaryExpression	2		339262	1					
ANR	357805	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 3 ] ) ;	4635:3:97543:97571	339262	3	True				
ANR	357806	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		339262	0					
ANR	357807	IdentifierDeclType	st32		339262	0					
ANR	357808	Identifier	num		339262	1					
ANR	357809	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		339262	2		=			
ANR	357810	Identifier	num		339262	0					
ANR	357811	CallExpression	getnum ( ao -> a [ 3 ] )		339262	1					
ANR	357812	Callee	getnum		339262	0					
ANR	357813	Identifier	getnum		339262	0					
ANR	357814	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	357815	Argument	ao -> a [ 3 ]		339262	0					
ANR	357816	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	357817	PtrMemberAccess	ao -> a		339262	0					
ANR	357818	Identifier	ao		339262	0					
ANR	357819	Identifier	a		339262	1					
ANR	357820	PrimaryExpression	3		339262	1					
ANR	357821	IfStatement	if ( ( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 ) )		339262	4					
ANR	357822	Condition	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )	4637:7:97581:97674	339262	0	True				
ANR	357823	OrExpression	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	0		||			
ANR	357824	RelationalExpression	coproc > 15		339262	0		>			
ANR	357825	Identifier	coproc		339262	0					
ANR	357826	PrimaryExpression	15		339262	1					
ANR	357827	OrExpression	( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357828	RelationalExpression	coreg > 15		339262	0		>			
ANR	357829	Identifier	coreg		339262	0					
ANR	357830	PrimaryExpression	15		339262	1					
ANR	357831	OrExpression	( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357832	RelationalExpression	reg > 15		339262	0		>			
ANR	357833	Identifier	reg		339262	0					
ANR	357834	PrimaryExpression	15		339262	1					
ANR	357835	OrExpression	( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357836	RelationalExpression	num > 4092		339262	0		>			
ANR	357837	Identifier	num		339262	0					
ANR	357838	PrimaryExpression	4092		339262	1					
ANR	357839	OrExpression	( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	357840	RelationalExpression	num < - 4092		339262	0		<			
ANR	357841	Identifier	num		339262	0					
ANR	357842	UnaryOperationExpression	- 4092		339262	1					
ANR	357843	UnaryOperator	-		339262	0					
ANR	357844	PrimaryExpression	4092		339262	1					
ANR	357845	EqualityExpression	num % 4 != 0		339262	1		!=			
ANR	357846	MultiplicativeExpression	num % 4		339262	0		%			
ANR	357847	Identifier	num		339262	0					
ANR	357848	PrimaryExpression	4		339262	1					
ANR	357849	PrimaryExpression	0		339262	1					
ANR	357850	CompoundStatement		3345:103:71818:71818	339262	1					
ANR	357851	ReturnStatement	return - 1 ;	4638:4:97683:97692	339262	0	True				
ANR	357852	UnaryOperationExpression	- 1		339262	0					
ANR	357853	UnaryOperator	-		339262	0					
ANR	357854	PrimaryExpression	1		339262	1					
ANR	357855	ExpressionStatement	ao -> o = 0x20ec0000	4641:3:97705:97723	339262	5	True				
ANR	357856	AssignmentExpression	ao -> o = 0x20ec0000		339262	0		=			
ANR	357857	PtrMemberAccess	ao -> o		339262	0					
ANR	357858	Identifier	ao		339262	0					
ANR	357859	Identifier	o		339262	1					
ANR	357860	PrimaryExpression	0x20ec0000		339262	1					
ANR	357861	IfStatement	if ( m & L_BIT )		339262	6					
ANR	357862	Condition	m & L_BIT	4642:7:97732:97740	339262	0	True				
ANR	357863	BitAndExpression	m & L_BIT		339262	0		&			
ANR	357864	Identifier	m		339262	0					
ANR	357865	Identifier	L_BIT		339262	1					
ANR	357866	CompoundStatement		3350:18:71884:71884	339262	1					
ANR	357867	ExpressionStatement	ao -> o |= 1 << 30	4643:4:97749:97765	339262	0	True				
ANR	357868	AssignmentExpression	ao -> o |= 1 << 30		339262	0		|=			
ANR	357869	PtrMemberAccess	ao -> o		339262	0					
ANR	357870	Identifier	ao		339262	0					
ANR	357871	Identifier	o		339262	1					
ANR	357872	ShiftExpression	1 << 30		339262	1		<<			
ANR	357873	PrimaryExpression	1		339262	0					
ANR	357874	PrimaryExpression	30		339262	1					
ANR	357875	IfStatement	if ( m & TWO_BIT )		339262	7					
ANR	357876	Condition	m & TWO_BIT	4645:7:97779:97789	339262	0	True				
ANR	357877	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	357878	Identifier	m		339262	0					
ANR	357879	Identifier	TWO_BIT		339262	1					
ANR	357880	CompoundStatement		3353:20:71933:71933	339262	1					
ANR	357881	ExpressionStatement	ao -> o |= 1 << 20	4646:4:97798:97814	339262	0	True				
ANR	357882	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	357883	PtrMemberAccess	ao -> o		339262	0					
ANR	357884	Identifier	ao		339262	0					
ANR	357885	Identifier	o		339262	1					
ANR	357886	ShiftExpression	1 << 20		339262	1		<<			
ANR	357887	PrimaryExpression	1		339262	0					
ANR	357888	PrimaryExpression	20		339262	1					
ANR	357889	IfStatement	if ( num < 0 )		339262	8					
ANR	357890	Condition	num < 0	4648:7:97828:97834	339262	0	True				
ANR	357891	RelationalExpression	num < 0		339262	0		<			
ANR	357892	Identifier	num		339262	0					
ANR	357893	PrimaryExpression	0		339262	1					
ANR	357894	CompoundStatement		3356:16:71978:71978	339262	1					
ANR	357895	ExpressionStatement	num = - num	4649:4:97843:97853	339262	0	True				
ANR	357896	AssignmentExpression	num = - num		339262	0		=			
ANR	357897	Identifier	num		339262	0					
ANR	357898	UnaryOperationExpression	- num		339262	1					
ANR	357899	UnaryOperator	-		339262	0					
ANR	357900	Identifier	num		339262	1					
ANR	357901	ElseStatement	else		339262	0					
ANR	357902	CompoundStatement		3358:10:72006:72006	339262	0					
ANR	357903	ExpressionStatement	ao -> o |= 1 << 31	4651:4:97871:97887	339262	0	True				
ANR	357904	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	357905	PtrMemberAccess	ao -> o		339262	0					
ANR	357906	Identifier	ao		339262	0					
ANR	357907	Identifier	o		339262	1					
ANR	357908	ShiftExpression	1 << 31		339262	1		<<			
ANR	357909	PrimaryExpression	1		339262	0					
ANR	357910	PrimaryExpression	31		339262	1					
ANR	357911	ExpressionStatement	ao -> o |= coproc	4653:3:97897:97912	339262	9	True				
ANR	357912	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	357913	PtrMemberAccess	ao -> o		339262	0					
ANR	357914	Identifier	ao		339262	0					
ANR	357915	Identifier	o		339262	1					
ANR	357916	Identifier	coproc		339262	1					
ANR	357917	ExpressionStatement	ao -> o |= coreg << 4	4654:3:97917:97936	339262	10	True				
ANR	357918	AssignmentExpression	ao -> o |= coreg << 4		339262	0		|=			
ANR	357919	PtrMemberAccess	ao -> o		339262	0					
ANR	357920	Identifier	ao		339262	0					
ANR	357921	Identifier	o		339262	1					
ANR	357922	ShiftExpression	coreg << 4		339262	1		<<			
ANR	357923	Identifier	coreg		339262	0					
ANR	357924	PrimaryExpression	4		339262	1					
ANR	357925	ExpressionStatement	ao -> o |= reg << 24	4655:3:97941:97959	339262	11	True				
ANR	357926	AssignmentExpression	ao -> o |= reg << 24		339262	0		|=			
ANR	357927	PtrMemberAccess	ao -> o		339262	0					
ANR	357928	Identifier	ao		339262	0					
ANR	357929	Identifier	o		339262	1					
ANR	357930	ShiftExpression	reg << 24		339262	1		<<			
ANR	357931	Identifier	reg		339262	0					
ANR	357932	PrimaryExpression	24		339262	1					
ANR	357933	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4656:3:97964:97988	339262	12	True				
ANR	357934	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	357935	PtrMemberAccess	ao -> o		339262	0					
ANR	357936	Identifier	ao		339262	0					
ANR	357937	Identifier	o		339262	1					
ANR	357938	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	357939	ShiftExpression	num >> 2		339262	0		>>			
ANR	357940	Identifier	num		339262	0					
ANR	357941	PrimaryExpression	2		339262	1					
ANR	357942	PrimaryExpression	8		339262	1					
ANR	357943	ReturnStatement	return 4 ;	4657:3:97993:98001	339262	13	True				
ANR	357944	PrimaryExpression	4		339262	0					
ANR	357945	BreakStatement	break ;	4659:3:98018:98023	339262	7	True				
ANR	357946	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG :	4660:2:98027:98074	339262	8	True				
ANR	357947	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG		339262	0					
ANR	357948	CompoundStatement		3372:3:72340:72378	339262	9					
ANR	357949	IdentifierDeclStatement	ut8 coproc = getcoproc ( ao -> a [ 0 ] ) ;	4661:3:98081:98114	339262	0	True				
ANR	357950	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		339262	0					
ANR	357951	IdentifierDeclType	ut8		339262	0					
ANR	357952	Identifier	coproc		339262	1					
ANR	357953	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		339262	2		=			
ANR	357954	Identifier	coproc		339262	0					
ANR	357955	CallExpression	getcoproc ( ao -> a [ 0 ] )		339262	1					
ANR	357956	Callee	getcoproc		339262	0					
ANR	357957	Identifier	getcoproc		339262	0					
ANR	357958	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	357959	Argument	ao -> a [ 0 ]		339262	0					
ANR	357960	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	357961	PtrMemberAccess	ao -> a		339262	0					
ANR	357962	Identifier	ao		339262	0					
ANR	357963	Identifier	a		339262	1					
ANR	357964	PrimaryExpression	0		339262	1					
ANR	357965	IdentifierDeclStatement	ut8 coreg = getcoprocreg ( ao -> a [ 1 ] ) ;	4662:3:98119:98154	339262	1	True				
ANR	357966	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 1 ] )		339262	0					
ANR	357967	IdentifierDeclType	ut8		339262	0					
ANR	357968	Identifier	coreg		339262	1					
ANR	357969	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	357970	Identifier	coreg		339262	0					
ANR	357971	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		339262	1					
ANR	357972	Callee	getcoprocreg		339262	0					
ANR	357973	Identifier	getcoprocreg		339262	0					
ANR	357974	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	357975	Argument	ao -> a [ 1 ]		339262	0					
ANR	357976	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	357977	PtrMemberAccess	ao -> a		339262	0					
ANR	357978	Identifier	ao		339262	0					
ANR	357979	Identifier	a		339262	1					
ANR	357980	PrimaryExpression	1		339262	1					
ANR	357981	IdentifierDeclStatement	ut8 reg = getregmemstart ( ao -> a [ 2 ] ) ;	4663:3:98159:98194	339262	2	True				
ANR	357982	IdentifierDecl	reg = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	357983	IdentifierDeclType	ut8		339262	0					
ANR	357984	Identifier	reg		339262	1					
ANR	357985	AssignmentExpression	reg = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	357986	Identifier	reg		339262	0					
ANR	357987	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	357988	Callee	getregmemstart		339262	0					
ANR	357989	Identifier	getregmemstart		339262	0					
ANR	357990	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	357991	Argument	ao -> a [ 2 ]		339262	0					
ANR	357992	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	357993	PtrMemberAccess	ao -> a		339262	0					
ANR	357994	Identifier	ao		339262	0					
ANR	357995	Identifier	a		339262	1					
ANR	357996	PrimaryExpression	2		339262	1					
ANR	357997	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 3 ] ) ;	4664:3:98199:98237	339262	3	True				
ANR	357998	IdentifierDecl	num = getnummemendbang ( ao -> a [ 3 ] )		339262	0					
ANR	357999	IdentifierDeclType	st32		339262	0					
ANR	358000	Identifier	num		339262	1					
ANR	358001	AssignmentExpression	num = getnummemendbang ( ao -> a [ 3 ] )		339262	2		=			
ANR	358002	Identifier	num		339262	0					
ANR	358003	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		339262	1					
ANR	358004	Callee	getnummemendbang		339262	0					
ANR	358005	Identifier	getnummemendbang		339262	0					
ANR	358006	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	358007	Argument	ao -> a [ 3 ]		339262	0					
ANR	358008	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	358009	PtrMemberAccess	ao -> a		339262	0					
ANR	358010	Identifier	ao		339262	0					
ANR	358011	Identifier	a		339262	1					
ANR	358012	PrimaryExpression	3		339262	1					
ANR	358013	IfStatement	if ( ( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 ) )		339262	4					
ANR	358014	Condition	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )	4666:7:98247:98340	339262	0	True				
ANR	358015	OrExpression	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	0		||			
ANR	358016	RelationalExpression	coproc > 15		339262	0		>			
ANR	358017	Identifier	coproc		339262	0					
ANR	358018	PrimaryExpression	15		339262	1					
ANR	358019	OrExpression	( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	358020	RelationalExpression	coreg > 15		339262	0		>			
ANR	358021	Identifier	coreg		339262	0					
ANR	358022	PrimaryExpression	15		339262	1					
ANR	358023	OrExpression	( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	358024	RelationalExpression	reg > 15		339262	0		>			
ANR	358025	Identifier	reg		339262	0					
ANR	358026	PrimaryExpression	15		339262	1					
ANR	358027	OrExpression	( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	358028	RelationalExpression	num > 4092		339262	0		>			
ANR	358029	Identifier	num		339262	0					
ANR	358030	PrimaryExpression	4092		339262	1					
ANR	358031	OrExpression	( num < - 4092 ) || ( num % 4 != 0 )		339262	1		||			
ANR	358032	RelationalExpression	num < - 4092		339262	0		<			
ANR	358033	Identifier	num		339262	0					
ANR	358034	UnaryOperationExpression	- 4092		339262	1					
ANR	358035	UnaryOperator	-		339262	0					
ANR	358036	PrimaryExpression	4092		339262	1					
ANR	358037	EqualityExpression	num % 4 != 0		339262	1		!=			
ANR	358038	MultiplicativeExpression	num % 4		339262	0		%			
ANR	358039	Identifier	num		339262	0					
ANR	358040	PrimaryExpression	4		339262	1					
ANR	358041	PrimaryExpression	0		339262	1					
ANR	358042	CompoundStatement		3374:103:72484:72484	339262	1					
ANR	358043	ReturnStatement	return - 1 ;	4667:4:98349:98358	339262	0	True				
ANR	358044	UnaryOperationExpression	- 1		339262	0					
ANR	358045	UnaryOperator	-		339262	0					
ANR	358046	PrimaryExpression	1		339262	1					
ANR	358047	ExpressionStatement	ao -> o = 0x20ed0000	4670:3:98371:98389	339262	5	True				
ANR	358048	AssignmentExpression	ao -> o = 0x20ed0000		339262	0		=			
ANR	358049	PtrMemberAccess	ao -> o		339262	0					
ANR	358050	Identifier	ao		339262	0					
ANR	358051	Identifier	o		339262	1					
ANR	358052	PrimaryExpression	0x20ed0000		339262	1					
ANR	358053	IfStatement	if ( m & L_BIT )		339262	6					
ANR	358054	Condition	m & L_BIT	4671:7:98398:98406	339262	0	True				
ANR	358055	BitAndExpression	m & L_BIT		339262	0		&			
ANR	358056	Identifier	m		339262	0					
ANR	358057	Identifier	L_BIT		339262	1					
ANR	358058	CompoundStatement		3379:18:72550:72550	339262	1					
ANR	358059	ExpressionStatement	ao -> o |= 1 << 30	4672:4:98415:98431	339262	0	True				
ANR	358060	AssignmentExpression	ao -> o |= 1 << 30		339262	0		|=			
ANR	358061	PtrMemberAccess	ao -> o		339262	0					
ANR	358062	Identifier	ao		339262	0					
ANR	358063	Identifier	o		339262	1					
ANR	358064	ShiftExpression	1 << 30		339262	1		<<			
ANR	358065	PrimaryExpression	1		339262	0					
ANR	358066	PrimaryExpression	30		339262	1					
ANR	358067	IfStatement	if ( m & TWO_BIT )		339262	7					
ANR	358068	Condition	m & TWO_BIT	4674:7:98445:98455	339262	0	True				
ANR	358069	BitAndExpression	m & TWO_BIT		339262	0		&			
ANR	358070	Identifier	m		339262	0					
ANR	358071	Identifier	TWO_BIT		339262	1					
ANR	358072	CompoundStatement		3382:20:72599:72599	339262	1					
ANR	358073	ExpressionStatement	ao -> o |= 1 << 20	4675:4:98464:98480	339262	0	True				
ANR	358074	AssignmentExpression	ao -> o |= 1 << 20		339262	0		|=			
ANR	358075	PtrMemberAccess	ao -> o		339262	0					
ANR	358076	Identifier	ao		339262	0					
ANR	358077	Identifier	o		339262	1					
ANR	358078	ShiftExpression	1 << 20		339262	1		<<			
ANR	358079	PrimaryExpression	1		339262	0					
ANR	358080	PrimaryExpression	20		339262	1					
ANR	358081	IfStatement	if ( num < 0 )		339262	8					
ANR	358082	Condition	num < 0	4677:7:98494:98500	339262	0	True				
ANR	358083	RelationalExpression	num < 0		339262	0		<			
ANR	358084	Identifier	num		339262	0					
ANR	358085	PrimaryExpression	0		339262	1					
ANR	358086	CompoundStatement		3385:16:72644:72644	339262	1					
ANR	358087	ExpressionStatement	num = - num	4678:4:98509:98519	339262	0	True				
ANR	358088	AssignmentExpression	num = - num		339262	0		=			
ANR	358089	Identifier	num		339262	0					
ANR	358090	UnaryOperationExpression	- num		339262	1					
ANR	358091	UnaryOperator	-		339262	0					
ANR	358092	Identifier	num		339262	1					
ANR	358093	ElseStatement	else		339262	0					
ANR	358094	CompoundStatement		3387:10:72672:72672	339262	0					
ANR	358095	ExpressionStatement	ao -> o |= 1 << 31	4680:4:98537:98553	339262	0	True				
ANR	358096	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	358097	PtrMemberAccess	ao -> o		339262	0					
ANR	358098	Identifier	ao		339262	0					
ANR	358099	Identifier	o		339262	1					
ANR	358100	ShiftExpression	1 << 31		339262	1		<<			
ANR	358101	PrimaryExpression	1		339262	0					
ANR	358102	PrimaryExpression	31		339262	1					
ANR	358103	ExpressionStatement	ao -> o |= coproc	4682:3:98563:98578	339262	9	True				
ANR	358104	AssignmentExpression	ao -> o |= coproc		339262	0		|=			
ANR	358105	PtrMemberAccess	ao -> o		339262	0					
ANR	358106	Identifier	ao		339262	0					
ANR	358107	Identifier	o		339262	1					
ANR	358108	Identifier	coproc		339262	1					
ANR	358109	ExpressionStatement	ao -> o |= coreg << 4	4683:3:98583:98602	339262	10	True				
ANR	358110	AssignmentExpression	ao -> o |= coreg << 4		339262	0		|=			
ANR	358111	PtrMemberAccess	ao -> o		339262	0					
ANR	358112	Identifier	ao		339262	0					
ANR	358113	Identifier	o		339262	1					
ANR	358114	ShiftExpression	coreg << 4		339262	1		<<			
ANR	358115	Identifier	coreg		339262	0					
ANR	358116	PrimaryExpression	4		339262	1					
ANR	358117	ExpressionStatement	ao -> o |= reg << 24	4684:3:98607:98625	339262	11	True				
ANR	358118	AssignmentExpression	ao -> o |= reg << 24		339262	0		|=			
ANR	358119	PtrMemberAccess	ao -> o		339262	0					
ANR	358120	Identifier	ao		339262	0					
ANR	358121	Identifier	o		339262	1					
ANR	358122	ShiftExpression	reg << 24		339262	1		<<			
ANR	358123	Identifier	reg		339262	0					
ANR	358124	PrimaryExpression	24		339262	1					
ANR	358125	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4685:3:98630:98654	339262	12	True				
ANR	358126	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	358127	PtrMemberAccess	ao -> o		339262	0					
ANR	358128	Identifier	ao		339262	0					
ANR	358129	Identifier	o		339262	1					
ANR	358130	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	358131	ShiftExpression	num >> 2		339262	0		>>			
ANR	358132	Identifier	num		339262	0					
ANR	358133	PrimaryExpression	2		339262	1					
ANR	358134	PrimaryExpression	8		339262	1					
ANR	358135	ReturnStatement	return 4 ;	4686:3:98659:98667	339262	13	True				
ANR	358136	PrimaryExpression	4		339262	0					
ANR	358137	BreakStatement	break ;	4688:3:98684:98689	339262	10	True				
ANR	358138	Label	default :	4689:2:98693:98700	339262	11	True				
ANR	358139	Identifier	default		339262	0					
ANR	358140	ReturnStatement	return - 1 ;	4690:3:98705:98714	339262	12	True				
ANR	358141	UnaryOperationExpression	- 1		339262	0					
ANR	358142	UnaryOperator	-		339262	0					
ANR	358143	PrimaryExpression	1		339262	1					
ANR	358144	ElseStatement	else		339262	0					
ANR	358145	IfStatement	"if ( ( m = opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) )"		339262	0					
ANR	358146	Condition	"m = opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT )"	4692:12:98732:98794	339262	0	True				
ANR	358147	AssignmentExpression	"m = opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT )"		339262	0		=			
ANR	358148	Identifier	m		339262	0					
ANR	358149	CallExpression	"opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT )"		339262	1					
ANR	358150	Callee	opmask		339262	0					
ANR	358151	Identifier	opmask		339262	0					
ANR	358152	ArgumentList	ao -> op		339262	1					
ANR	358153	Argument	ao -> op		339262	0					
ANR	358154	PtrMemberAccess	ao -> op		339262	0					
ANR	358155	Identifier	ao		339262	0					
ANR	358156	Identifier	op		339262	1					
ANR	358157	Argument	"""stm"""		339262	1					
ANR	358158	PrimaryExpression	"""stm"""		339262	0					
ANR	358159	Argument	FD_BIT | DB_BIT | IA_BIT | EA_BIT		339262	2					
ANR	358160	InclusiveOrExpression	FD_BIT | DB_BIT | IA_BIT | EA_BIT		339262	0		|			
ANR	358161	Identifier	FD_BIT		339262	0					
ANR	358162	InclusiveOrExpression	DB_BIT | IA_BIT | EA_BIT		339262	1		|			
ANR	358163	Identifier	DB_BIT		339262	0					
ANR	358164	InclusiveOrExpression	IA_BIT | EA_BIT		339262	1		|			
ANR	358165	Identifier	IA_BIT		339262	0					
ANR	358166	Identifier	EA_BIT		339262	1					
ANR	358167	CompoundStatement		3402:2:72980:72995	339262	1					
ANR	358168	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4693:2:98801:98835	339262	0	True				
ANR	358169	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	358170	IdentifierDeclType	ut64		339262	0					
ANR	358171	Identifier	argt		339262	1					
ANR	358172	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	358173	Identifier	argt		339262	0					
ANR	358174	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	358175	Callee	thumb_selector		339262	0					
ANR	358176	Identifier	thumb_selector		339262	0					
ANR	358177	ArgumentList	ao -> a		339262	1					
ANR	358178	Argument	ao -> a		339262	0					
ANR	358179	PtrMemberAccess	ao -> a		339262	0					
ANR	358180	Identifier	ao		339262	0					
ANR	358181	Identifier	a		339262	1					
ANR	358182	IdentifierDeclStatement	bool wb = false ;	4694:2:98839:98854	339262	1	True				
ANR	358183	IdentifierDecl	wb = false		339262	0					
ANR	358184	IdentifierDeclType	bool		339262	0					
ANR	358185	Identifier	wb		339262	1					
ANR	358186	AssignmentExpression	wb = false		339262	2		=			
ANR	358187	Identifier	false		339262	0					
ANR	358188	Identifier	false		339262	1					
ANR	358189	SwitchStatement	switch ( argt )		339262	2					
ANR	358190	Condition	argt	4695:10:98866:98869	339262	0	True				
ANR	358191	Identifier	argt		339262	0					
ANR	358192	CompoundStatement		3403:16:73013:73013	339262	1					
ANR	358193	Label	case THUMB_REGBANG_LIST :	4696:2:98876:98899	339262	0	True				
ANR	358194	Identifier	THUMB_REGBANG_LIST		339262	0					
ANR	358195	CompoundStatement		3404:27:73042:73042	339262	1					
ANR	358196	ExpressionStatement	wb = true	4697:3:98906:98915	339262	0	True				
ANR	358197	AssignmentExpression	wb = true		339262	0		=			
ANR	358198	Identifier	wb		339262	0					
ANR	358199	Identifier	true		339262	1					
ANR	358200	ExpressionStatement	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'	4698:3:98920:98958	339262	1	True				
ANR	358201	AssignmentExpression	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	358202	ArrayIndexing	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ]		339262	0					
ANR	358203	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	358204	PtrMemberAccess	ao -> a		339262	0					
ANR	358205	Identifier	ao		339262	0					
ANR	358206	Identifier	a		339262	1					
ANR	358207	PrimaryExpression	0		339262	1					
ANR	358208	AdditiveExpression	strlen ( ao -> a [ 0 ] ) - 1		339262	1		-			
ANR	358209	CallExpression	strlen ( ao -> a [ 0 ] )		339262	0					
ANR	358210	Callee	strlen		339262	0					
ANR	358211	Identifier	strlen		339262	0					
ANR	358212	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	358213	Argument	ao -> a [ 0 ]		339262	0					
ANR	358214	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	358215	PtrMemberAccess	ao -> a		339262	0					
ANR	358216	Identifier	ao		339262	0					
ANR	358217	Identifier	a		339262	1					
ANR	358218	PrimaryExpression	0		339262	1					
ANR	358219	PrimaryExpression	1		339262	1					
ANR	358220	PrimaryExpression	'\\0'		339262	1					
ANR	358221	Label	case THUMB_REG_LIST :	4701:2:99004:99023	339262	2	True				
ANR	358222	Identifier	THUMB_REG_LIST		339262	0					
ANR	358223	CompoundStatement		3411:3:73203:73236	339262	3					
ANR	358224	IdentifierDeclStatement	ut8 reg = getreg ( ao -> a [ 0 ] ) ;	4702:3:99030:99057	339262	0	True				
ANR	358225	IdentifierDecl	reg = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	358226	IdentifierDeclType	ut8		339262	0					
ANR	358227	Identifier	reg		339262	1					
ANR	358228	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	358229	Identifier	reg		339262	0					
ANR	358230	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	358231	Callee	getreg		339262	0					
ANR	358232	Identifier	getreg		339262	0					
ANR	358233	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	358234	Argument	ao -> a [ 0 ]		339262	0					
ANR	358235	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	358236	PtrMemberAccess	ao -> a		339262	0					
ANR	358237	Identifier	ao		339262	0					
ANR	358238	Identifier	a		339262	1					
ANR	358239	PrimaryExpression	0		339262	1					
ANR	358240	IdentifierDeclStatement	st32 list = getreglist ( ao -> a [ 1 ] ) ;	4703:3:99062:99095	339262	1	True				
ANR	358241	IdentifierDecl	list = getreglist ( ao -> a [ 1 ] )		339262	0					
ANR	358242	IdentifierDeclType	st32		339262	0					
ANR	358243	Identifier	list		339262	1					
ANR	358244	AssignmentExpression	list = getreglist ( ao -> a [ 1 ] )		339262	2		=			
ANR	358245	Identifier	list		339262	0					
ANR	358246	CallExpression	getreglist ( ao -> a [ 1 ] )		339262	1					
ANR	358247	Callee	getreglist		339262	0					
ANR	358248	Identifier	getreglist		339262	0					
ANR	358249	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	358250	Argument	ao -> a [ 1 ]		339262	0					
ANR	358251	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	358252	PtrMemberAccess	ao -> a		339262	0					
ANR	358253	Identifier	ao		339262	0					
ANR	358254	Identifier	a		339262	1					
ANR	358255	PrimaryExpression	1		339262	1					
ANR	358256	IfStatement	if ( ( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 ) )		339262	2					
ANR	358257	Condition	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )	4704:7:99104:99144	339262	0	True				
ANR	358258	OrExpression	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )		339262	0		||			
ANR	358259	RelationalExpression	list <= 0		339262	0		<=			
ANR	358260	Identifier	list		339262	0					
ANR	358261	PrimaryExpression	0		339262	1					
ANR	358262	EqualityExpression	( list & 0x0000a000 ) != 0		339262	1		!=			
ANR	358263	BitAndExpression	list & 0x0000a000		339262	0		&			
ANR	358264	Identifier	list		339262	0					
ANR	358265	PrimaryExpression	0x0000a000		339262	1					
ANR	358266	PrimaryExpression	0		339262	1					
ANR	358267	CompoundStatement		3412:50:73288:73288	339262	1					
ANR	358268	ReturnStatement	return - 1 ;	4705:4:99153:99162	339262	0	True				
ANR	358269	UnaryOperationExpression	- 1		339262	0					
ANR	358270	UnaryOperator	-		339262	0					
ANR	358271	PrimaryExpression	1		339262	1					
ANR	358272	IfStatement	if ( ( ! ( m & DOTW_BIT ) ) && ( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb )		339262	3					
ANR	358273	Condition	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb	4708:7:99177:99259	339262	0	True				
ANR	358274	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb		339262	0		&&			
ANR	358275	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	358276	UnaryOperator	!		339262	0					
ANR	358277	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	358278	Identifier	m		339262	0					
ANR	358279	Identifier	DOTW_BIT		339262	1					
ANR	358280	AndExpression	( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb		339262	1		&&			
ANR	358281	EqualityExpression	( list & 0x0000ff00 ) == 0		339262	0		==			
ANR	358282	BitAndExpression	list & 0x0000ff00		339262	0		&			
ANR	358283	Identifier	list		339262	0					
ANR	358284	PrimaryExpression	0x0000ff00		339262	1					
ANR	358285	PrimaryExpression	0		339262	1					
ANR	358286	AndExpression	( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb		339262	1		&&			
ANR	358287	UnaryOperationExpression	! ( m & ( FD_BIT | DB_BIT ) )		339262	0					
ANR	358288	UnaryOperator	!		339262	0					
ANR	358289	BitAndExpression	m & ( FD_BIT | DB_BIT )		339262	1		&			
ANR	358290	Identifier	m		339262	0					
ANR	358291	InclusiveOrExpression	FD_BIT | DB_BIT		339262	1		|			
ANR	358292	Identifier	FD_BIT		339262	0					
ANR	358293	Identifier	DB_BIT		339262	1					
ANR	358294	Identifier	wb		339262	1					
ANR	358295	CompoundStatement		3416:92:73403:73403	339262	1					
ANR	358296	ExpressionStatement	ao -> o = 0x00c0	4709:4:99268:99282	339262	0	True				
ANR	358297	AssignmentExpression	ao -> o = 0x00c0		339262	0		=			
ANR	358298	PtrMemberAccess	ao -> o		339262	0					
ANR	358299	Identifier	ao		339262	0					
ANR	358300	Identifier	o		339262	1					
ANR	358301	PrimaryExpression	0x00c0		339262	1					
ANR	358302	ExpressionStatement	ao -> o |= ( list & 0x000000ff ) << 8	4710:4:99288:99321	339262	1	True				
ANR	358303	AssignmentExpression	ao -> o |= ( list & 0x000000ff ) << 8		339262	0		|=			
ANR	358304	PtrMemberAccess	ao -> o		339262	0					
ANR	358305	Identifier	ao		339262	0					
ANR	358306	Identifier	o		339262	1					
ANR	358307	ShiftExpression	( list & 0x000000ff ) << 8		339262	1		<<			
ANR	358308	BitAndExpression	list & 0x000000ff		339262	0		&			
ANR	358309	Identifier	list		339262	0					
ANR	358310	PrimaryExpression	0x000000ff		339262	1					
ANR	358311	PrimaryExpression	8		339262	1					
ANR	358312	ExpressionStatement	ao -> o |= reg	4711:4:99327:99339	339262	2	True				
ANR	358313	AssignmentExpression	ao -> o |= reg		339262	0		|=			
ANR	358314	PtrMemberAccess	ao -> o		339262	0					
ANR	358315	Identifier	ao		339262	0					
ANR	358316	Identifier	o		339262	1					
ANR	358317	Identifier	reg		339262	1					
ANR	358318	ReturnStatement	return 2 ;	4712:4:99345:99353	339262	3	True				
ANR	358319	PrimaryExpression	2		339262	0					
ANR	358320	IfStatement	if ( ( m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) == 0 )		339262	4					
ANR	358321	Condition	( m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) == 0	4715:7:99368:99413	339262	0	True				
ANR	358322	EqualityExpression	( m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) == 0		339262	0		==			
ANR	358323	BitAndExpression	m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT )		339262	0		&			
ANR	358324	Identifier	m		339262	0					
ANR	358325	InclusiveOrExpression	FD_BIT | DB_BIT | IA_BIT | EA_BIT		339262	1		|			
ANR	358326	Identifier	FD_BIT		339262	0					
ANR	358327	InclusiveOrExpression	DB_BIT | IA_BIT | EA_BIT		339262	1		|			
ANR	358328	Identifier	DB_BIT		339262	0					
ANR	358329	InclusiveOrExpression	IA_BIT | EA_BIT		339262	1		|			
ANR	358330	Identifier	IA_BIT		339262	0					
ANR	358331	Identifier	EA_BIT		339262	1					
ANR	358332	PrimaryExpression	0		339262	1					
ANR	358333	CompoundStatement		3423:55:73557:73557	339262	1					
ANR	358334	ReturnStatement	return - 1 ;	4716:4:99422:99431	339262	0	True				
ANR	358335	UnaryOperationExpression	- 1		339262	0					
ANR	358336	UnaryOperator	-		339262	0					
ANR	358337	PrimaryExpression	1		339262	1					
ANR	358338	IfStatement	if ( m & ( FD_BIT | DB_BIT ) )		339262	5					
ANR	358339	Condition	m & ( FD_BIT | DB_BIT )	4719:7:99449:99469	339262	0	True				
ANR	358340	BitAndExpression	m & ( FD_BIT | DB_BIT )		339262	0		&			
ANR	358341	Identifier	m		339262	0					
ANR	358342	InclusiveOrExpression	FD_BIT | DB_BIT		339262	1		|			
ANR	358343	Identifier	FD_BIT		339262	0					
ANR	358344	Identifier	DB_BIT		339262	1					
ANR	358345	CompoundStatement		3427:30:73613:73613	339262	1					
ANR	358346	ExpressionStatement	ao -> o = 0x00e90000	4720:4:99478:99496	339262	0	True				
ANR	358347	AssignmentExpression	ao -> o = 0x00e90000		339262	0		=			
ANR	358348	PtrMemberAccess	ao -> o		339262	0					
ANR	358349	Identifier	ao		339262	0					
ANR	358350	Identifier	o		339262	1					
ANR	358351	PrimaryExpression	0x00e90000		339262	1					
ANR	358352	ElseStatement	else		339262	0					
ANR	358353	CompoundStatement		3429:10:73649:73649	339262	0					
ANR	358354	ExpressionStatement	ao -> o = 0x80e80000	4722:4:99514:99532	339262	0	True				
ANR	358355	AssignmentExpression	ao -> o = 0x80e80000		339262	0		=			
ANR	358356	PtrMemberAccess	ao -> o		339262	0					
ANR	358357	Identifier	ao		339262	0					
ANR	358358	Identifier	o		339262	1					
ANR	358359	PrimaryExpression	0x80e80000		339262	1					
ANR	358360	IfStatement	if ( wb )		339262	6					
ANR	358361	Condition	wb	4725:7:99547:99548	339262	0	True				
ANR	358362	Identifier	wb		339262	0					
ANR	358363	CompoundStatement		3433:11:73692:73692	339262	1					
ANR	358364	ExpressionStatement	ao -> o |= 1 << 29	4726:4:99557:99573	339262	0	True				
ANR	358365	AssignmentExpression	ao -> o |= 1 << 29		339262	0		|=			
ANR	358366	PtrMemberAccess	ao -> o		339262	0					
ANR	358367	Identifier	ao		339262	0					
ANR	358368	Identifier	o		339262	1					
ANR	358369	ShiftExpression	1 << 29		339262	1		<<			
ANR	358370	PrimaryExpression	1		339262	0					
ANR	358371	PrimaryExpression	29		339262	1					
ANR	358372	ExpressionStatement	ao -> o |= reg << 24	4729:3:99584:99602	339262	7	True				
ANR	358373	AssignmentExpression	ao -> o |= reg << 24		339262	0		|=			
ANR	358374	PtrMemberAccess	ao -> o		339262	0					
ANR	358375	Identifier	ao		339262	0					
ANR	358376	Identifier	o		339262	1					
ANR	358377	ShiftExpression	reg << 24		339262	1		<<			
ANR	358378	Identifier	reg		339262	0					
ANR	358379	PrimaryExpression	24		339262	1					
ANR	358380	ExpressionStatement	ao -> o |= ( list & 0x000000ff ) << 8	4730:3:99607:99640	339262	8	True				
ANR	358381	AssignmentExpression	ao -> o |= ( list & 0x000000ff ) << 8		339262	0		|=			
ANR	358382	PtrMemberAccess	ao -> o		339262	0					
ANR	358383	Identifier	ao		339262	0					
ANR	358384	Identifier	o		339262	1					
ANR	358385	ShiftExpression	( list & 0x000000ff ) << 8		339262	1		<<			
ANR	358386	BitAndExpression	list & 0x000000ff		339262	0		&			
ANR	358387	Identifier	list		339262	0					
ANR	358388	PrimaryExpression	0x000000ff		339262	1					
ANR	358389	PrimaryExpression	8		339262	1					
ANR	358390	ExpressionStatement	ao -> o |= ( list & 0x0000ff00 ) >> 8	4731:3:99645:99678	339262	9	True				
ANR	358391	AssignmentExpression	ao -> o |= ( list & 0x0000ff00 ) >> 8		339262	0		|=			
ANR	358392	PtrMemberAccess	ao -> o		339262	0					
ANR	358393	Identifier	ao		339262	0					
ANR	358394	Identifier	o		339262	1					
ANR	358395	ShiftExpression	( list & 0x0000ff00 ) >> 8		339262	1		>>			
ANR	358396	BitAndExpression	list & 0x0000ff00		339262	0		&			
ANR	358397	Identifier	list		339262	0					
ANR	358398	PrimaryExpression	0x0000ff00		339262	1					
ANR	358399	PrimaryExpression	8		339262	1					
ANR	358400	ReturnStatement	return 4 ;	4732:3:99683:99691	339262	10	True				
ANR	358401	PrimaryExpression	4		339262	0					
ANR	358402	BreakStatement	break ;	4734:3:99708:99713	339262	4	True				
ANR	358403	Label	default :	4735:2:99717:99724	339262	5	True				
ANR	358404	Identifier	default		339262	0					
ANR	358405	ReturnStatement	return - 1 ;	4736:3:99729:99738	339262	6	True				
ANR	358406	UnaryOperationExpression	- 1		339262	0					
ANR	358407	UnaryOperator	-		339262	0					
ANR	358408	PrimaryExpression	1		339262	1					
ANR	358409	ElseStatement	else		339262	0					
ANR	358410	IfStatement	"if ( ( m = opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT ) ) )"		339262	0					
ANR	358411	Condition	"m = opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT )"	4738:12:99756:99814	339262	0	True				
ANR	358412	AssignmentExpression	"m = opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT )"		339262	0		=			
ANR	358413	Identifier	m		339262	0					
ANR	358414	CallExpression	"opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT )"		339262	1					
ANR	358415	Callee	opmask		339262	0					
ANR	358416	Identifier	opmask		339262	0					
ANR	358417	ArgumentList	ao -> op		339262	1					
ANR	358418	Argument	ao -> op		339262	0					
ANR	358419	PtrMemberAccess	ao -> op		339262	0					
ANR	358420	Identifier	ao		339262	0					
ANR	358421	Identifier	op		339262	1					
ANR	358422	Argument	"""str"""		339262	1					
ANR	358423	PrimaryExpression	"""str"""		339262	0					
ANR	358424	Argument	B_BIT | T_BIT | D_BIT | H_BIT		339262	2					
ANR	358425	InclusiveOrExpression	B_BIT | T_BIT | D_BIT | H_BIT		339262	0		|			
ANR	358426	Identifier	B_BIT		339262	0					
ANR	358427	InclusiveOrExpression	T_BIT | D_BIT | H_BIT		339262	1		|			
ANR	358428	Identifier	T_BIT		339262	0					
ANR	358429	InclusiveOrExpression	D_BIT | H_BIT		339262	1		|			
ANR	358430	Identifier	D_BIT		339262	0					
ANR	358431	Identifier	H_BIT		339262	1					
ANR	358432	CompoundStatement		3448:2:74000:74041	339262	1					
ANR	358433	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4739:2:99821:99855	339262	0	True				
ANR	358434	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	358435	IdentifierDeclType	ut64		339262	0					
ANR	358436	Identifier	argt		339262	1					
ANR	358437	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	358438	Identifier	argt		339262	0					
ANR	358439	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	358440	Callee	thumb_selector		339262	0					
ANR	358441	Identifier	thumb_selector		339262	0					
ANR	358442	ArgumentList	ao -> a		339262	1					
ANR	358443	Argument	ao -> a		339262	0					
ANR	358444	PtrMemberAccess	ao -> a		339262	0					
ANR	358445	Identifier	ao		339262	0					
ANR	358446	Identifier	a		339262	1					
ANR	358447	IdentifierDeclStatement	ut32 strsel = m & ( B_BIT | H_BIT | D_BIT ) ;	4740:2:99859:99900	339262	1	True				
ANR	358448	IdentifierDecl	strsel = m & ( B_BIT | H_BIT | D_BIT )		339262	0					
ANR	358449	IdentifierDeclType	ut32		339262	0					
ANR	358450	Identifier	strsel		339262	1					
ANR	358451	AssignmentExpression	strsel = m & ( B_BIT | H_BIT | D_BIT )		339262	2		=			
ANR	358452	Identifier	strsel		339262	0					
ANR	358453	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		339262	1		&			
ANR	358454	Identifier	m		339262	0					
ANR	358455	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		339262	1		|			
ANR	358456	Identifier	B_BIT		339262	0					
ANR	358457	InclusiveOrExpression	H_BIT | D_BIT		339262	1		|			
ANR	358458	Identifier	H_BIT		339262	0					
ANR	358459	Identifier	D_BIT		339262	1					
ANR	358460	SwitchStatement	switch ( argt )		339262	2					
ANR	358461	Condition	argt	4741:10:99912:99915	339262	0	True				
ANR	358462	Identifier	argt		339262	0					
ANR	358463	CompoundStatement		3449:16:74059:74059	339262	1					
ANR	358464	Label	case THUMB_REG_BRACKREGBRACK :	4742:2:99922:99950	339262	0	True				
ANR	358465	Identifier	THUMB_REG_BRACKREGBRACK		339262	0					
ANR	358466	IfStatement	if ( ao -> a [ 2 ] == NULL )		339262	1					
ANR	358467	Condition	ao -> a [ 2 ] == NULL	4743:7:99959:99974	339262	0	True				
ANR	358468	EqualityExpression	ao -> a [ 2 ] == NULL		339262	0		==			
ANR	358469	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	358470	PtrMemberAccess	ao -> a		339262	0					
ANR	358471	Identifier	ao		339262	0					
ANR	358472	Identifier	a		339262	1					
ANR	358473	PrimaryExpression	2		339262	1					
ANR	358474	Identifier	NULL		339262	1					
ANR	358475	CompoundStatement		3451:25:74118:74118	339262	1					
ANR	358476	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	4744:4:100005:100042	339262	0	True				
ANR	358477	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	358478	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		339262	0					
ANR	358479	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	358480	PtrMemberAccess	ao -> a		339262	0					
ANR	358481	Identifier	ao		339262	0					
ANR	358482	Identifier	a		339262	1					
ANR	358483	PrimaryExpression	1		339262	1					
ANR	358484	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	358485	CallExpression	strlen ( ao -> a [ 1 ] )		339262	0					
ANR	358486	Callee	strlen		339262	0					
ANR	358487	Identifier	strlen		339262	0					
ANR	358488	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	358489	Argument	ao -> a [ 1 ]		339262	0					
ANR	358490	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	358491	PtrMemberAccess	ao -> a		339262	0					
ANR	358492	Identifier	ao		339262	0					
ANR	358493	Identifier	a		339262	1					
ANR	358494	PrimaryExpression	1		339262	1					
ANR	358495	PrimaryExpression	1		339262	1					
ANR	358496	PrimaryExpression	'\\0'		339262	1					
ANR	358497	ExpressionStatement	"ao -> a [ 2 ] = ""0]"""	4745:4:100048:100063	339262	1	True				
ANR	358498	AssignmentExpression	"ao -> a [ 2 ] = ""0]"""		339262	0		=			
ANR	358499	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	358500	PtrMemberAccess	ao -> a		339262	0					
ANR	358501	Identifier	ao		339262	0					
ANR	358502	Identifier	a		339262	1					
ANR	358503	PrimaryExpression	2		339262	1					
ANR	358504	PrimaryExpression	"""0]"""		339262	1					
ANR	358505	Label	case THUMB_REG_BRACKREG_CONSTBRACK :	4748:2:100102:100136	339262	2	True				
ANR	358506	Identifier	THUMB_REG_BRACKREG_CONSTBRACK		339262	0					
ANR	358507	CompoundStatement		3486:3:74978:74997	339262	3					
ANR	358508	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4749:3:100143:100171	339262	0	True				
ANR	358509	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	358510	IdentifierDeclType	ut8		339262	0					
ANR	358511	Identifier	reg1		339262	1					
ANR	358512	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	358513	Identifier	reg1		339262	0					
ANR	358514	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	358515	Callee	getreg		339262	0					
ANR	358516	Identifier	getreg		339262	0					
ANR	358517	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	358518	Argument	ao -> a [ 0 ]		339262	0					
ANR	358519	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	358520	PtrMemberAccess	ao -> a		339262	0					
ANR	358521	Identifier	ao		339262	0					
ANR	358522	Identifier	a		339262	1					
ANR	358523	PrimaryExpression	0		339262	1					
ANR	358524	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	4750:3:100176:100212	339262	1	True				
ANR	358525	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	0					
ANR	358526	IdentifierDeclType	ut8		339262	0					
ANR	358527	Identifier	reg2		339262	1					
ANR	358528	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	2		=			
ANR	358529	Identifier	reg2		339262	0					
ANR	358530	CallExpression	getregmemstart ( ao -> a [ 1 ] )		339262	1					
ANR	358531	Callee	getregmemstart		339262	0					
ANR	358532	Identifier	getregmemstart		339262	0					
ANR	358533	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	358534	Argument	ao -> a [ 1 ]		339262	0					
ANR	358535	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	358536	PtrMemberAccess	ao -> a		339262	0					
ANR	358537	Identifier	ao		339262	0					
ANR	358538	Identifier	a		339262	1					
ANR	358539	PrimaryExpression	1		339262	1					
ANR	358540	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 2 ] ) ;	4751:3:100217:100251	339262	2	True				
ANR	358541	IdentifierDecl	num = getnummemend ( ao -> a [ 2 ] )		339262	0					
ANR	358542	IdentifierDeclType	st32		339262	0					
ANR	358543	Identifier	num		339262	1					
ANR	358544	AssignmentExpression	num = getnummemend ( ao -> a [ 2 ] )		339262	2		=			
ANR	358545	Identifier	num		339262	0					
ANR	358546	CallExpression	getnummemend ( ao -> a [ 2 ] )		339262	1					
ANR	358547	Callee	getnummemend		339262	0					
ANR	358548	Identifier	getnummemend		339262	0					
ANR	358549	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	358550	Argument	ao -> a [ 2 ]		339262	0					
ANR	358551	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	358552	PtrMemberAccess	ao -> a		339262	0					
ANR	358553	Identifier	ao		339262	0					
ANR	358554	Identifier	a		339262	1					
ANR	358555	PrimaryExpression	2		339262	1					
ANR	358556	IfStatement	if ( m & T_BIT )		339262	3					
ANR	358557	Condition	m & T_BIT	4752:7:100260:100268	339262	0	True				
ANR	358558	BitAndExpression	m & T_BIT		339262	0		&			
ANR	358559	Identifier	m		339262	0					
ANR	358560	Identifier	T_BIT		339262	1					
ANR	358561	CompoundStatement		3460:18:74412:74412	339262	1					
ANR	358562	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		339262	0					
ANR	358563	Condition	( num < 0 ) || ( num > 255 )	4753:8:100281:100304	339262	0	True				
ANR	358564	OrExpression	( num < 0 ) || ( num > 255 )		339262	0		||			
ANR	358565	RelationalExpression	num < 0		339262	0		<			
ANR	358566	Identifier	num		339262	0					
ANR	358567	PrimaryExpression	0		339262	1					
ANR	358568	RelationalExpression	num > 255		339262	1		>			
ANR	358569	Identifier	num		339262	0					
ANR	358570	PrimaryExpression	255		339262	1					
ANR	358571	CompoundStatement		3461:34:74448:74448	339262	1					
ANR	358572	ReturnStatement	return - 1 ;	4754:5:100314:100323	339262	0	True				
ANR	358573	UnaryOperationExpression	- 1		339262	0					
ANR	358574	UnaryOperator	-		339262	0					
ANR	358575	PrimaryExpression	1		339262	1					
ANR	358576	IfStatement	if ( strsel == 0 )		339262	1					
ANR	358577	Condition	strsel == 0	4756:8:100339:100349	339262	0	True				
ANR	358578	EqualityExpression	strsel == 0		339262	0		==			
ANR	358579	Identifier	strsel		339262	0					
ANR	358580	PrimaryExpression	0		339262	1					
ANR	358581	CompoundStatement		3464:21:74493:74493	339262	1					
ANR	358582	ExpressionStatement	ao -> o = 0x40f8000e	4757:5:100359:100377	339262	0	True				
ANR	358583	AssignmentExpression	ao -> o = 0x40f8000e		339262	0		=			
ANR	358584	PtrMemberAccess	ao -> o		339262	0					
ANR	358585	Identifier	ao		339262	0					
ANR	358586	Identifier	o		339262	1					
ANR	358587	PrimaryExpression	0x40f8000e		339262	1					
ANR	358588	ElseStatement	else		339262	0					
ANR	358589	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	358590	Condition	strsel == H_BIT	4759:15:100405:100419	339262	0	True				
ANR	358591	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	358592	Identifier	strsel		339262	0					
ANR	358593	Identifier	H_BIT		339262	1					
ANR	358594	CompoundStatement		3467:32:74563:74563	339262	1					
ANR	358595	ExpressionStatement	ao -> o = 0x20f8000e	4760:5:100429:100447	339262	0	True				
ANR	358596	AssignmentExpression	ao -> o = 0x20f8000e		339262	0		=			
ANR	358597	PtrMemberAccess	ao -> o		339262	0					
ANR	358598	Identifier	ao		339262	0					
ANR	358599	Identifier	o		339262	1					
ANR	358600	PrimaryExpression	0x20f8000e		339262	1					
ANR	358601	ElseStatement	else		339262	0					
ANR	358602	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	358603	Condition	strsel == B_BIT	4762:15:100475:100489	339262	0	True				
ANR	358604	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	358605	Identifier	strsel		339262	0					
ANR	358606	Identifier	B_BIT		339262	1					
ANR	358607	CompoundStatement		3470:32:74633:74633	339262	1					
ANR	358608	ExpressionStatement	ao -> o = 0x00f8000e	4763:5:100499:100517	339262	0	True				
ANR	358609	AssignmentExpression	ao -> o = 0x00f8000e		339262	0		=			
ANR	358610	PtrMemberAccess	ao -> o		339262	0					
ANR	358611	Identifier	ao		339262	0					
ANR	358612	Identifier	o		339262	1					
ANR	358613	PrimaryExpression	0x00f8000e		339262	1					
ANR	358614	ElseStatement	else		339262	0					
ANR	358615	CompoundStatement		3472:11:74671:74671	339262	0					
ANR	358616	ReturnStatement	return - 1 ;	4765:5:100537:100546	339262	0	True				
ANR	358617	UnaryOperationExpression	- 1		339262	0					
ANR	358618	UnaryOperator	-		339262	0					
ANR	358619	PrimaryExpression	1		339262	1					
ANR	358620	ExpressionStatement	ao -> o |= num << 8	4767:4:100558:100575	339262	2	True				
ANR	358621	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	358622	PtrMemberAccess	ao -> o		339262	0					
ANR	358623	Identifier	ao		339262	0					
ANR	358624	Identifier	o		339262	1					
ANR	358625	ShiftExpression	num << 8		339262	1		<<			
ANR	358626	Identifier	num		339262	0					
ANR	358627	PrimaryExpression	8		339262	1					
ANR	358628	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4768:4:100581:100610	339262	3	True				
ANR	358629	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	358630	Callee	mem_32bit_2reg		339262	0					
ANR	358631	Identifier	mem_32bit_2reg		339262	0					
ANR	358632	ArgumentList	ao		339262	1					
ANR	358633	Argument	ao		339262	0					
ANR	358634	Identifier	ao		339262	0					
ANR	358635	Argument	m		339262	1					
ANR	358636	Identifier	m		339262	0					
ANR	358637	IfStatement	if ( ( strsel == 0 ) && ( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) ) )		339262	4					
ANR	358638	Condition	( strsel == 0 ) && ( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )	4771:7:100628:100740	339262	0	True				
ANR	358639	AndExpression	( strsel == 0 ) && ( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	358640	EqualityExpression	strsel == 0		339262	0		==			
ANR	358641	Identifier	strsel		339262	0					
ANR	358642	PrimaryExpression	0		339262	1					
ANR	358643	AndExpression	( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	358644	EqualityExpression	reg2 == 13		339262	0		==			
ANR	358645	Identifier	reg2		339262	0					
ANR	358646	PrimaryExpression	13		339262	1					
ANR	358647	AndExpression	( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	358648	RelationalExpression	num >= 0		339262	0		>=			
ANR	358649	Identifier	num		339262	0					
ANR	358650	PrimaryExpression	0		339262	1					
ANR	358651	AndExpression	( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	358652	RelationalExpression	num < 1024		339262	0		<			
ANR	358653	Identifier	num		339262	0					
ANR	358654	PrimaryExpression	1024		339262	1					
ANR	358655	AndExpression	( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	358656	EqualityExpression	( num % 4 ) == 0		339262	0		==			
ANR	358657	MultiplicativeExpression	num % 4		339262	0		%			
ANR	358658	Identifier	num		339262	0					
ANR	358659	PrimaryExpression	4		339262	1					
ANR	358660	PrimaryExpression	0		339262	1					
ANR	358661	BitAndExpression	( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		339262	1		&			
ANR	358662	RelationalExpression	reg1 < 8		339262	0		<			
ANR	358663	Identifier	reg1		339262	0					
ANR	358664	PrimaryExpression	8		339262	1					
ANR	358665	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	358666	UnaryOperator	!		339262	0					
ANR	358667	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	358668	Identifier	m		339262	0					
ANR	358669	Identifier	DOTW_BIT		339262	1					
ANR	358670	CompoundStatement		3479:122:74884:74884	339262	1					
ANR	358671	ExpressionStatement	ao -> o = 0x0090	4772:4:100749:100763	339262	0	True				
ANR	358672	AssignmentExpression	ao -> o = 0x0090		339262	0		=			
ANR	358673	PtrMemberAccess	ao -> o		339262	0					
ANR	358674	Identifier	ao		339262	0					
ANR	358675	Identifier	o		339262	1					
ANR	358676	PrimaryExpression	0x0090		339262	1					
ANR	358677	ExpressionStatement	ao -> o |= reg1	4773:4:100769:100782	339262	1	True				
ANR	358678	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	358679	PtrMemberAccess	ao -> o		339262	0					
ANR	358680	Identifier	ao		339262	0					
ANR	358681	Identifier	o		339262	1					
ANR	358682	Identifier	reg1		339262	1					
ANR	358683	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4774:4:100788:100812	339262	2	True				
ANR	358684	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	358685	PtrMemberAccess	ao -> o		339262	0					
ANR	358686	Identifier	ao		339262	0					
ANR	358687	Identifier	o		339262	1					
ANR	358688	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	358689	ShiftExpression	num >> 2		339262	0		>>			
ANR	358690	Identifier	num		339262	0					
ANR	358691	PrimaryExpression	2		339262	1					
ANR	358692	PrimaryExpression	8		339262	1					
ANR	358693	ReturnStatement	return 2 ;	4775:4:100818:100826	339262	3	True				
ANR	358694	PrimaryExpression	2		339262	0					
ANR	358695	IdentifierDeclStatement	bool t1form = false ;	4778:3:100837:100856	339262	5	True				
ANR	358696	IdentifierDecl	t1form = false		339262	0					
ANR	358697	IdentifierDeclType	bool		339262	0					
ANR	358698	Identifier	t1form		339262	1					
ANR	358699	AssignmentExpression	t1form = false		339262	2		=			
ANR	358700	Identifier	false		339262	0					
ANR	358701	Identifier	false		339262	1					
ANR	358702	IfStatement	if ( ( strsel == 0 ) && ( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 ) )		339262	6					
ANR	358703	Condition	( strsel == 0 ) && ( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 )	4779:7:100865:100924	339262	0	True				
ANR	358704	AndExpression	( strsel == 0 ) && ( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 )		339262	0		&&			
ANR	358705	EqualityExpression	strsel == 0		339262	0		==			
ANR	358706	Identifier	strsel		339262	0					
ANR	358707	PrimaryExpression	0		339262	1					
ANR	358708	AndExpression	( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	358709	RelationalExpression	num < 128		339262	0		<			
ANR	358710	Identifier	num		339262	0					
ANR	358711	PrimaryExpression	128		339262	1					
ANR	358712	AndExpression	( num >= 0 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	358713	RelationalExpression	num >= 0		339262	0		>=			
ANR	358714	Identifier	num		339262	0					
ANR	358715	PrimaryExpression	0		339262	1					
ANR	358716	EqualityExpression	num % 4 == 0		339262	1		==			
ANR	358717	MultiplicativeExpression	num % 4		339262	0		%			
ANR	358718	Identifier	num		339262	0					
ANR	358719	PrimaryExpression	4		339262	1					
ANR	358720	PrimaryExpression	0		339262	1					
ANR	358721	CompoundStatement		3487:69:75068:75068	339262	1					
ANR	358722	ExpressionStatement	ao -> o = 0x0060	4780:4:100933:100947	339262	0	True				
ANR	358723	AssignmentExpression	ao -> o = 0x0060		339262	0		=			
ANR	358724	PtrMemberAccess	ao -> o		339262	0					
ANR	358725	Identifier	ao		339262	0					
ANR	358726	Identifier	o		339262	1					
ANR	358727	PrimaryExpression	0x0060		339262	1					
ANR	358728	ExpressionStatement	ao -> o |= ( num >> 4 )	4781:4:100953:100972	339262	1	True				
ANR	358729	AssignmentExpression	ao -> o |= ( num >> 4 )		339262	0		|=			
ANR	358730	PtrMemberAccess	ao -> o		339262	0					
ANR	358731	Identifier	ao		339262	0					
ANR	358732	Identifier	o		339262	1					
ANR	358733	ShiftExpression	num >> 4		339262	1		>>			
ANR	358734	Identifier	num		339262	0					
ANR	358735	PrimaryExpression	4		339262	1					
ANR	358736	ExpressionStatement	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14	4782:4:100978:101011	339262	2	True				
ANR	358737	AssignmentExpression	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14		339262	0		|=			
ANR	358738	PtrMemberAccess	ao -> o		339262	0					
ANR	358739	Identifier	ao		339262	0					
ANR	358740	Identifier	o		339262	1					
ANR	358741	ShiftExpression	( ( num >> 2 ) & 0x3 ) << 14		339262	1		<<			
ANR	358742	BitAndExpression	( num >> 2 ) & 0x3		339262	0		&			
ANR	358743	ShiftExpression	num >> 2		339262	0		>>			
ANR	358744	Identifier	num		339262	0					
ANR	358745	PrimaryExpression	2		339262	1					
ANR	358746	PrimaryExpression	0x3		339262	1					
ANR	358747	PrimaryExpression	14		339262	1					
ANR	358748	ExpressionStatement	t1form = true	4783:4:101017:101030	339262	3	True				
ANR	358749	AssignmentExpression	t1form = true		339262	0		=			
ANR	358750	Identifier	t1form		339262	0					
ANR	358751	Identifier	true		339262	1					
ANR	358752	IfStatement	if ( ( strsel == B_BIT ) && ( num < 32 ) && ( num >= 0 ) )		339262	7					
ANR	358753	Condition	( strsel == B_BIT ) && ( num < 32 ) && ( num >= 0 )	4785:7:101044:101088	339262	0	True				
ANR	358754	AndExpression	( strsel == B_BIT ) && ( num < 32 ) && ( num >= 0 )		339262	0		&&			
ANR	358755	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	358756	Identifier	strsel		339262	0					
ANR	358757	Identifier	B_BIT		339262	1					
ANR	358758	AndExpression	( num < 32 ) && ( num >= 0 )		339262	1		&&			
ANR	358759	RelationalExpression	num < 32		339262	0		<			
ANR	358760	Identifier	num		339262	0					
ANR	358761	PrimaryExpression	32		339262	1					
ANR	358762	RelationalExpression	num >= 0		339262	1		>=			
ANR	358763	Identifier	num		339262	0					
ANR	358764	PrimaryExpression	0		339262	1					
ANR	358765	CompoundStatement		3493:54:75232:75232	339262	1					
ANR	358766	ExpressionStatement	ao -> o = 0x0070	4786:4:101097:101111	339262	0	True				
ANR	358767	AssignmentExpression	ao -> o = 0x0070		339262	0		=			
ANR	358768	PtrMemberAccess	ao -> o		339262	0					
ANR	358769	Identifier	ao		339262	0					
ANR	358770	Identifier	o		339262	1					
ANR	358771	PrimaryExpression	0x0070		339262	1					
ANR	358772	ExpressionStatement	ao -> o |= ( num >> 2 )	4787:4:101117:101136	339262	1	True				
ANR	358773	AssignmentExpression	ao -> o |= ( num >> 2 )		339262	0		|=			
ANR	358774	PtrMemberAccess	ao -> o		339262	0					
ANR	358775	Identifier	ao		339262	0					
ANR	358776	Identifier	o		339262	1					
ANR	358777	ShiftExpression	num >> 2		339262	1		>>			
ANR	358778	Identifier	num		339262	0					
ANR	358779	PrimaryExpression	2		339262	1					
ANR	358780	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	4788:4:101142:101168	339262	2	True				
ANR	358781	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	358782	PtrMemberAccess	ao -> o		339262	0					
ANR	358783	Identifier	ao		339262	0					
ANR	358784	Identifier	o		339262	1					
ANR	358785	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	358786	BitAndExpression	num & 0x3		339262	0		&			
ANR	358787	Identifier	num		339262	0					
ANR	358788	PrimaryExpression	0x3		339262	1					
ANR	358789	PrimaryExpression	14		339262	1					
ANR	358790	ExpressionStatement	t1form = true	4789:4:101174:101187	339262	3	True				
ANR	358791	AssignmentExpression	t1form = true		339262	0		=			
ANR	358792	Identifier	t1form		339262	0					
ANR	358793	Identifier	true		339262	1					
ANR	358794	IfStatement	if ( ( strsel == H_BIT ) && ( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 ) )		339262	8					
ANR	358795	Condition	( strsel == H_BIT ) && ( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 )	4791:7:101201:101263	339262	0	True				
ANR	358796	AndExpression	( strsel == H_BIT ) && ( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 )		339262	0		&&			
ANR	358797	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	358798	Identifier	strsel		339262	0					
ANR	358799	Identifier	H_BIT		339262	1					
ANR	358800	AndExpression	( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 )		339262	1		&&			
ANR	358801	RelationalExpression	num < 64		339262	0		<			
ANR	358802	Identifier	num		339262	0					
ANR	358803	PrimaryExpression	64		339262	1					
ANR	358804	AndExpression	( num >= 0 ) && ( num % 2 == 0 )		339262	1		&&			
ANR	358805	RelationalExpression	num >= 0		339262	0		>=			
ANR	358806	Identifier	num		339262	0					
ANR	358807	PrimaryExpression	0		339262	1					
ANR	358808	EqualityExpression	num % 2 == 0		339262	1		==			
ANR	358809	MultiplicativeExpression	num % 2		339262	0		%			
ANR	358810	Identifier	num		339262	0					
ANR	358811	PrimaryExpression	2		339262	1					
ANR	358812	PrimaryExpression	0		339262	1					
ANR	358813	CompoundStatement		3499:72:75407:75407	339262	1					
ANR	358814	ExpressionStatement	ao -> o = 0x0080	4792:4:101272:101286	339262	0	True				
ANR	358815	AssignmentExpression	ao -> o = 0x0080		339262	0		=			
ANR	358816	PtrMemberAccess	ao -> o		339262	0					
ANR	358817	Identifier	ao		339262	0					
ANR	358818	Identifier	o		339262	1					
ANR	358819	PrimaryExpression	0x0080		339262	1					
ANR	358820	ExpressionStatement	ao -> o |= ( num >> 3 )	4793:4:101292:101311	339262	1	True				
ANR	358821	AssignmentExpression	ao -> o |= ( num >> 3 )		339262	0		|=			
ANR	358822	PtrMemberAccess	ao -> o		339262	0					
ANR	358823	Identifier	ao		339262	0					
ANR	358824	Identifier	o		339262	1					
ANR	358825	ShiftExpression	num >> 3		339262	1		>>			
ANR	358826	Identifier	num		339262	0					
ANR	358827	PrimaryExpression	3		339262	1					
ANR	358828	ExpressionStatement	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14	4794:4:101317:101350	339262	2	True				
ANR	358829	AssignmentExpression	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14		339262	0		|=			
ANR	358830	PtrMemberAccess	ao -> o		339262	0					
ANR	358831	Identifier	ao		339262	0					
ANR	358832	Identifier	o		339262	1					
ANR	358833	ShiftExpression	( ( num >> 1 ) & 0x3 ) << 14		339262	1		<<			
ANR	358834	BitAndExpression	( num >> 1 ) & 0x3		339262	0		&			
ANR	358835	ShiftExpression	num >> 1		339262	0		>>			
ANR	358836	Identifier	num		339262	0					
ANR	358837	PrimaryExpression	1		339262	1					
ANR	358838	PrimaryExpression	0x3		339262	1					
ANR	358839	PrimaryExpression	14		339262	1					
ANR	358840	ExpressionStatement	t1form = true	4795:4:101356:101369	339262	3	True				
ANR	358841	AssignmentExpression	t1form = true		339262	0		=			
ANR	358842	Identifier	t1form		339262	0					
ANR	358843	Identifier	true		339262	1					
ANR	358844	IfStatement	if ( t1form )		339262	9					
ANR	358845	Condition	t1form	4797:7:101383:101388	339262	0	True				
ANR	358846	Identifier	t1form		339262	0					
ANR	358847	CompoundStatement		3505:15:75532:75532	339262	1					
ANR	358848	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		339262	0					
ANR	358849	Condition	"mem_16bit_2reg ( ao , m )"	4798:8:101401:101422	339262	0	True				
ANR	358850	CallExpression	"mem_16bit_2reg ( ao , m )"		339262	0					
ANR	358851	Callee	mem_16bit_2reg		339262	0					
ANR	358852	Identifier	mem_16bit_2reg		339262	0					
ANR	358853	ArgumentList	ao		339262	1					
ANR	358854	Argument	ao		339262	0					
ANR	358855	Identifier	ao		339262	0					
ANR	358856	Argument	m		339262	1					
ANR	358857	Identifier	m		339262	0					
ANR	358858	CompoundStatement		3506:32:75566:75566	339262	1					
ANR	358859	ReturnStatement	return 2 ;	4799:5:101432:101440	339262	0	True				
ANR	358860	PrimaryExpression	2		339262	0					
ANR	358861	IfStatement	if ( ( num > 4095 ) || ( num < - 255 ) )		339262	10					
ANR	358862	Condition	( num > 4095 ) || ( num < - 255 )	4803:7:101464:101491	339262	0	True				
ANR	358863	OrExpression	( num > 4095 ) || ( num < - 255 )		339262	0		||			
ANR	358864	RelationalExpression	num > 4095		339262	0		>			
ANR	358865	Identifier	num		339262	0					
ANR	358866	PrimaryExpression	4095		339262	1					
ANR	358867	RelationalExpression	num < - 255		339262	1		<			
ANR	358868	Identifier	num		339262	0					
ANR	358869	UnaryOperationExpression	- 255		339262	1					
ANR	358870	UnaryOperator	-		339262	0					
ANR	358871	PrimaryExpression	255		339262	1					
ANR	358872	CompoundStatement		3511:37:75635:75635	339262	1					
ANR	358873	ReturnStatement	return - 1 ;	4804:4:101500:101509	339262	0	True				
ANR	358874	UnaryOperationExpression	- 1		339262	0					
ANR	358875	UnaryOperator	-		339262	0					
ANR	358876	PrimaryExpression	1		339262	1					
ANR	358877	IfStatement	if ( num >= 0 )		339262	11					
ANR	358878	Condition	num >= 0	4806:7:101523:101530	339262	0	True				
ANR	358879	RelationalExpression	num >= 0		339262	0		>=			
ANR	358880	Identifier	num		339262	0					
ANR	358881	PrimaryExpression	0		339262	1					
ANR	358882	CompoundStatement		3514:17:75674:75674	339262	1					
ANR	358883	IfStatement	if ( strsel == 0 )		339262	0					
ANR	358884	Condition	strsel == 0	4807:8:101543:101553	339262	0	True				
ANR	358885	EqualityExpression	strsel == 0		339262	0		==			
ANR	358886	Identifier	strsel		339262	0					
ANR	358887	PrimaryExpression	0		339262	1					
ANR	358888	CompoundStatement		3515:21:75697:75697	339262	1					
ANR	358889	ExpressionStatement	ao -> o = 0xc0f80000	4808:5:101563:101581	339262	0	True				
ANR	358890	AssignmentExpression	ao -> o = 0xc0f80000		339262	0		=			
ANR	358891	PtrMemberAccess	ao -> o		339262	0					
ANR	358892	Identifier	ao		339262	0					
ANR	358893	Identifier	o		339262	1					
ANR	358894	PrimaryExpression	0xc0f80000		339262	1					
ANR	358895	ElseStatement	else		339262	0					
ANR	358896	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	358897	Condition	strsel == B_BIT	4810:8:101602:101616	339262	0	True				
ANR	358898	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	358899	Identifier	strsel		339262	0					
ANR	358900	Identifier	B_BIT		339262	1					
ANR	358901	CompoundStatement		3518:25:75760:75760	339262	1					
ANR	358902	ExpressionStatement	ao -> o = 0x80f80000	4811:5:101626:101644	339262	0	True				
ANR	358903	AssignmentExpression	ao -> o = 0x80f80000		339262	0		=			
ANR	358904	PtrMemberAccess	ao -> o		339262	0					
ANR	358905	Identifier	ao		339262	0					
ANR	358906	Identifier	o		339262	1					
ANR	358907	PrimaryExpression	0x80f80000		339262	1					
ANR	358908	ElseStatement	else		339262	0					
ANR	358909	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	358910	Condition	strsel == H_BIT	4813:8:101665:101679	339262	0	True				
ANR	358911	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	358912	Identifier	strsel		339262	0					
ANR	358913	Identifier	H_BIT		339262	1					
ANR	358914	CompoundStatement		3521:25:75823:75823	339262	1					
ANR	358915	ExpressionStatement	ao -> o = 0xa0f80000	4814:5:101689:101707	339262	0	True				
ANR	358916	AssignmentExpression	ao -> o = 0xa0f80000		339262	0		=			
ANR	358917	PtrMemberAccess	ao -> o		339262	0					
ANR	358918	Identifier	ao		339262	0					
ANR	358919	Identifier	o		339262	1					
ANR	358920	PrimaryExpression	0xa0f80000		339262	1					
ANR	358921	ElseStatement	else		339262	0					
ANR	358922	CompoundStatement		3523:11:75861:75861	339262	0					
ANR	358923	ReturnStatement	return - 1 ;	4816:5:101727:101736	339262	0	True				
ANR	358924	UnaryOperationExpression	- 1		339262	0					
ANR	358925	UnaryOperator	-		339262	0					
ANR	358926	PrimaryExpression	1		339262	1					
ANR	358927	ExpressionStatement	ao -> o |= ( num >> 8 )	4818:4:101748:101767	339262	1	True				
ANR	358928	AssignmentExpression	ao -> o |= ( num >> 8 )		339262	0		|=			
ANR	358929	PtrMemberAccess	ao -> o		339262	0					
ANR	358930	Identifier	ao		339262	0					
ANR	358931	Identifier	o		339262	1					
ANR	358932	ShiftExpression	num >> 8		339262	1		>>			
ANR	358933	Identifier	num		339262	0					
ANR	358934	PrimaryExpression	8		339262	1					
ANR	358935	ExpressionStatement	ao -> o |= ( num & 0x000000ff ) << 8	4819:4:101773:101805	339262	2	True				
ANR	358936	AssignmentExpression	ao -> o |= ( num & 0x000000ff ) << 8		339262	0		|=			
ANR	358937	PtrMemberAccess	ao -> o		339262	0					
ANR	358938	Identifier	ao		339262	0					
ANR	358939	Identifier	o		339262	1					
ANR	358940	ShiftExpression	( num & 0x000000ff ) << 8		339262	1		<<			
ANR	358941	BitAndExpression	num & 0x000000ff		339262	0		&			
ANR	358942	Identifier	num		339262	0					
ANR	358943	PrimaryExpression	0x000000ff		339262	1					
ANR	358944	PrimaryExpression	8		339262	1					
ANR	358945	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4820:4:101811:101840	339262	3	True				
ANR	358946	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	358947	Callee	mem_32bit_2reg		339262	0					
ANR	358948	Identifier	mem_32bit_2reg		339262	0					
ANR	358949	ArgumentList	ao		339262	1					
ANR	358950	Argument	ao		339262	0					
ANR	358951	Identifier	ao		339262	0					
ANR	358952	Argument	m		339262	1					
ANR	358953	Identifier	m		339262	0					
ANR	358954	IfStatement	if ( strsel == 0 )		339262	12					
ANR	358955	Condition	strsel == 0	4822:7:101854:101864	339262	0	True				
ANR	358956	EqualityExpression	strsel == 0		339262	0		==			
ANR	358957	Identifier	strsel		339262	0					
ANR	358958	PrimaryExpression	0		339262	1					
ANR	358959	CompoundStatement		3530:20:76008:76008	339262	1					
ANR	358960	ExpressionStatement	ao -> o = 0x40f8000c	4823:4:101873:101891	339262	0	True				
ANR	358961	AssignmentExpression	ao -> o = 0x40f8000c		339262	0		=			
ANR	358962	PtrMemberAccess	ao -> o		339262	0					
ANR	358963	Identifier	ao		339262	0					
ANR	358964	Identifier	o		339262	1					
ANR	358965	PrimaryExpression	0x40f8000c		339262	1					
ANR	358966	ElseStatement	else		339262	0					
ANR	358967	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	358968	Condition	strsel == B_BIT	4825:7:101910:101924	339262	0	True				
ANR	358969	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	358970	Identifier	strsel		339262	0					
ANR	358971	Identifier	B_BIT		339262	1					
ANR	358972	CompoundStatement		3533:24:76068:76068	339262	1					
ANR	358973	ExpressionStatement	ao -> o = 0x00f8000c	4826:4:101933:101951	339262	0	True				
ANR	358974	AssignmentExpression	ao -> o = 0x00f8000c		339262	0		=			
ANR	358975	PtrMemberAccess	ao -> o		339262	0					
ANR	358976	Identifier	ao		339262	0					
ANR	358977	Identifier	o		339262	1					
ANR	358978	PrimaryExpression	0x00f8000c		339262	1					
ANR	358979	ElseStatement	else		339262	0					
ANR	358980	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	358981	Condition	strsel == H_BIT	4828:7:101970:101984	339262	0	True				
ANR	358982	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	358983	Identifier	strsel		339262	0					
ANR	358984	Identifier	H_BIT		339262	1					
ANR	358985	CompoundStatement		3536:24:76128:76128	339262	1					
ANR	358986	ExpressionStatement	ao -> o = 0x20f8000c	4829:4:101993:102011	339262	0	True				
ANR	358987	AssignmentExpression	ao -> o = 0x20f8000c		339262	0		=			
ANR	358988	PtrMemberAccess	ao -> o		339262	0					
ANR	358989	Identifier	ao		339262	0					
ANR	358990	Identifier	o		339262	1					
ANR	358991	PrimaryExpression	0x20f8000c		339262	1					
ANR	358992	ElseStatement	else		339262	0					
ANR	358993	CompoundStatement		3538:10:76164:76164	339262	0					
ANR	358994	ReturnStatement	return - 1 ;	4831:4:102029:102038	339262	0	True				
ANR	358995	UnaryOperationExpression	- 1		339262	0					
ANR	358996	UnaryOperator	-		339262	0					
ANR	358997	PrimaryExpression	1		339262	1					
ANR	358998	ExpressionStatement	ao -> o |= - num << 8	4833:3:102048:102066	339262	13	True				
ANR	358999	AssignmentExpression	ao -> o |= - num << 8		339262	0		|=			
ANR	359000	PtrMemberAccess	ao -> o		339262	0					
ANR	359001	Identifier	ao		339262	0					
ANR	359002	Identifier	o		339262	1					
ANR	359003	ShiftExpression	- num << 8		339262	1		<<			
ANR	359004	UnaryOperationExpression	- num		339262	0					
ANR	359005	UnaryOperator	-		339262	0					
ANR	359006	Identifier	num		339262	1					
ANR	359007	PrimaryExpression	8		339262	1					
ANR	359008	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4834:3:102071:102100	339262	14	True				
ANR	359009	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	359010	Callee	mem_32bit_2reg		339262	0					
ANR	359011	Identifier	mem_32bit_2reg		339262	0					
ANR	359012	ArgumentList	ao		339262	1					
ANR	359013	Argument	ao		339262	0					
ANR	359014	Identifier	ao		339262	0					
ANR	359015	Argument	m		339262	1					
ANR	359016	Identifier	m		339262	0					
ANR	359017	BreakStatement	break ;	4836:3:102117:102122	339262	4	True				
ANR	359018	Label	case THUMB_REG_BRACKREGBRACK_CONST :	4837:2:102126:102160	339262	5	True				
ANR	359019	Identifier	THUMB_REG_BRACKREGBRACK_CONST		339262	0					
ANR	359020	CompoundStatement		3548:3:76385:76413	339262	6					
ANR	359021	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4838:3:102167:102195	339262	0	True				
ANR	359022	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	359023	IdentifierDeclType	ut8		339262	0					
ANR	359024	Identifier	reg1		339262	1					
ANR	359025	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	359026	Identifier	reg1		339262	0					
ANR	359027	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	359028	Callee	getreg		339262	0					
ANR	359029	Identifier	getreg		339262	0					
ANR	359030	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	359031	Argument	ao -> a [ 0 ]		339262	0					
ANR	359032	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	359033	PtrMemberAccess	ao -> a		339262	0					
ANR	359034	Identifier	ao		339262	0					
ANR	359035	Identifier	a		339262	1					
ANR	359036	PrimaryExpression	0		339262	1					
ANR	359037	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 1 ] ) ;	4839:3:102200:102239	339262	1	True				
ANR	359038	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 1 ] )		339262	0					
ANR	359039	IdentifierDeclType	ut8		339262	0					
ANR	359040	Identifier	reg2		339262	1					
ANR	359041	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 1 ] )		339262	2		=			
ANR	359042	Identifier	reg2		339262	0					
ANR	359043	CallExpression	getregmemstartend ( ao -> a [ 1 ] )		339262	1					
ANR	359044	Callee	getregmemstartend		339262	0					
ANR	359045	Identifier	getregmemstartend		339262	0					
ANR	359046	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	359047	Argument	ao -> a [ 1 ]		339262	0					
ANR	359048	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	359049	PtrMemberAccess	ao -> a		339262	0					
ANR	359050	Identifier	ao		339262	0					
ANR	359051	Identifier	a		339262	1					
ANR	359052	PrimaryExpression	1		339262	1					
ANR	359053	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 2 ] ) ;	4840:3:102244:102272	339262	2	True				
ANR	359054	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	359055	IdentifierDeclType	st32		339262	0					
ANR	359056	Identifier	num		339262	1					
ANR	359057	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	359058	Identifier	num		339262	0					
ANR	359059	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	359060	Callee	getnum		339262	0					
ANR	359061	Identifier	getnum		339262	0					
ANR	359062	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359063	Argument	ao -> a [ 2 ]		339262	0					
ANR	359064	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359065	PtrMemberAccess	ao -> a		339262	0					
ANR	359066	Identifier	ao		339262	0					
ANR	359067	Identifier	a		339262	1					
ANR	359068	PrimaryExpression	2		339262	1					
ANR	359069	IfStatement	if ( ( num > 255 ) || ( num < - 255 ) )		339262	3					
ANR	359070	Condition	( num > 255 ) || ( num < - 255 )	4842:7:102282:102308	339262	0	True				
ANR	359071	OrExpression	( num > 255 ) || ( num < - 255 )		339262	0		||			
ANR	359072	RelationalExpression	num > 255		339262	0		>			
ANR	359073	Identifier	num		339262	0					
ANR	359074	PrimaryExpression	255		339262	1					
ANR	359075	RelationalExpression	num < - 255		339262	1		<			
ANR	359076	Identifier	num		339262	0					
ANR	359077	UnaryOperationExpression	- 255		339262	1					
ANR	359078	UnaryOperator	-		339262	0					
ANR	359079	PrimaryExpression	255		339262	1					
ANR	359080	CompoundStatement		3550:36:76452:76452	339262	1					
ANR	359081	ReturnStatement	return - 1 ;	4843:4:102317:102326	339262	0	True				
ANR	359082	UnaryOperationExpression	- 1		339262	0					
ANR	359083	UnaryOperator	-		339262	0					
ANR	359084	PrimaryExpression	1		339262	1					
ANR	359085	IfStatement	if ( strsel == 0 )		339262	4					
ANR	359086	Condition	strsel == 0	4846:7:102341:102351	339262	0	True				
ANR	359087	EqualityExpression	strsel == 0		339262	0		==			
ANR	359088	Identifier	strsel		339262	0					
ANR	359089	PrimaryExpression	0		339262	1					
ANR	359090	CompoundStatement		3554:20:76495:76495	339262	1					
ANR	359091	ExpressionStatement	ao -> o = 0x40f80009	4847:4:102360:102378	339262	0	True				
ANR	359092	AssignmentExpression	ao -> o = 0x40f80009		339262	0		=			
ANR	359093	PtrMemberAccess	ao -> o		339262	0					
ANR	359094	Identifier	ao		339262	0					
ANR	359095	Identifier	o		339262	1					
ANR	359096	PrimaryExpression	0x40f80009		339262	1					
ANR	359097	ElseStatement	else		339262	0					
ANR	359098	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	359099	Condition	strsel == B_BIT	4849:7:102398:102412	339262	0	True				
ANR	359100	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	359101	Identifier	strsel		339262	0					
ANR	359102	Identifier	B_BIT		339262	1					
ANR	359103	CompoundStatement		3557:24:76556:76556	339262	1					
ANR	359104	ExpressionStatement	ao -> o = 0x00f80009	4850:4:102421:102439	339262	0	True				
ANR	359105	AssignmentExpression	ao -> o = 0x00f80009		339262	0		=			
ANR	359106	PtrMemberAccess	ao -> o		339262	0					
ANR	359107	Identifier	ao		339262	0					
ANR	359108	Identifier	o		339262	1					
ANR	359109	PrimaryExpression	0x00f80009		339262	1					
ANR	359110	ElseStatement	else		339262	0					
ANR	359111	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	359112	Condition	strsel == H_BIT	4852:7:102459:102473	339262	0	True				
ANR	359113	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	359114	Identifier	strsel		339262	0					
ANR	359115	Identifier	H_BIT		339262	1					
ANR	359116	CompoundStatement		3560:24:76617:76617	339262	1					
ANR	359117	ExpressionStatement	ao -> o = 0x20f80009	4853:4:102482:102500	339262	0	True				
ANR	359118	AssignmentExpression	ao -> o = 0x20f80009		339262	0		=			
ANR	359119	PtrMemberAccess	ao -> o		339262	0					
ANR	359120	Identifier	ao		339262	0					
ANR	359121	Identifier	o		339262	1					
ANR	359122	PrimaryExpression	0x20f80009		339262	1					
ANR	359123	ElseStatement	else		339262	0					
ANR	359124	CompoundStatement		3562:10:76653:76653	339262	0					
ANR	359125	ReturnStatement	return - 1 ;	4855:4:102518:102527	339262	0	True				
ANR	359126	UnaryOperationExpression	- 1		339262	0					
ANR	359127	UnaryOperator	-		339262	0					
ANR	359128	PrimaryExpression	1		339262	1					
ANR	359129	IfStatement	if ( num < 0 )		339262	5					
ANR	359130	Condition	num < 0	4858:7:102542:102548	339262	0	True				
ANR	359131	RelationalExpression	num < 0		339262	0		<			
ANR	359132	Identifier	num		339262	0					
ANR	359133	PrimaryExpression	0		339262	1					
ANR	359134	CompoundStatement		3566:16:76692:76692	339262	1					
ANR	359135	ExpressionStatement	num = - num	4859:4:102557:102567	339262	0	True				
ANR	359136	AssignmentExpression	num = - num		339262	0		=			
ANR	359137	Identifier	num		339262	0					
ANR	359138	UnaryOperationExpression	- num		339262	1					
ANR	359139	UnaryOperator	-		339262	0					
ANR	359140	Identifier	num		339262	1					
ANR	359141	ElseStatement	else		339262	0					
ANR	359142	CompoundStatement		3568:10:76720:76720	339262	0					
ANR	359143	ExpressionStatement	ao -> o |= 1 << 1	4861:4:102585:102600	339262	0	True				
ANR	359144	AssignmentExpression	ao -> o |= 1 << 1		339262	0		|=			
ANR	359145	PtrMemberAccess	ao -> o		339262	0					
ANR	359146	Identifier	ao		339262	0					
ANR	359147	Identifier	o		339262	1					
ANR	359148	ShiftExpression	1 << 1		339262	1		<<			
ANR	359149	PrimaryExpression	1		339262	0					
ANR	359150	PrimaryExpression	1		339262	1					
ANR	359151	ExpressionStatement	ao -> o |= num << 8	4863:3:102610:102627	339262	6	True				
ANR	359152	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	359153	PtrMemberAccess	ao -> o		339262	0					
ANR	359154	Identifier	ao		339262	0					
ANR	359155	Identifier	o		339262	1					
ANR	359156	ShiftExpression	num << 8		339262	1		<<			
ANR	359157	Identifier	num		339262	0					
ANR	359158	PrimaryExpression	8		339262	1					
ANR	359159	ExpressionStatement	ao -> o |= reg1 << 4	4864:3:102632:102650	339262	7	True				
ANR	359160	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	359161	PtrMemberAccess	ao -> o		339262	0					
ANR	359162	Identifier	ao		339262	0					
ANR	359163	Identifier	o		339262	1					
ANR	359164	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	359165	Identifier	reg1		339262	0					
ANR	359166	PrimaryExpression	4		339262	1					
ANR	359167	ExpressionStatement	ao -> o |= reg2 << 24	4865:3:102655:102674	339262	8	True				
ANR	359168	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	359169	PtrMemberAccess	ao -> o		339262	0					
ANR	359170	Identifier	ao		339262	0					
ANR	359171	Identifier	o		339262	1					
ANR	359172	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	359173	Identifier	reg2		339262	0					
ANR	359174	PrimaryExpression	24		339262	1					
ANR	359175	ReturnStatement	return 4 ;	4866:3:102679:102687	339262	9	True				
ANR	359176	PrimaryExpression	4		339262	0					
ANR	359177	BreakStatement	break ;	4868:3:102704:102709	339262	7	True				
ANR	359178	Label	case THUMB_REG_BRACKREG_CONSTBRACKBANG :	4869:2:102713:102751	339262	8	True				
ANR	359179	Identifier	THUMB_REG_BRACKREG_CONSTBRACKBANG		339262	0					
ANR	359180	CompoundStatement		3578:3:76899:76937	339262	9					
ANR	359181	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 2 ] ) ;	4870:3:102758:102796	339262	0	True				
ANR	359182	IdentifierDecl	num = getnummemendbang ( ao -> a [ 2 ] )		339262	0					
ANR	359183	IdentifierDeclType	st32		339262	0					
ANR	359184	Identifier	num		339262	1					
ANR	359185	AssignmentExpression	num = getnummemendbang ( ao -> a [ 2 ] )		339262	2		=			
ANR	359186	Identifier	num		339262	0					
ANR	359187	CallExpression	getnummemendbang ( ao -> a [ 2 ] )		339262	1					
ANR	359188	Callee	getnummemendbang		339262	0					
ANR	359189	Identifier	getnummemendbang		339262	0					
ANR	359190	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359191	Argument	ao -> a [ 2 ]		339262	0					
ANR	359192	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359193	PtrMemberAccess	ao -> a		339262	0					
ANR	359194	Identifier	ao		339262	0					
ANR	359195	Identifier	a		339262	1					
ANR	359196	PrimaryExpression	2		339262	1					
ANR	359197	IfStatement	if ( ( num > 255 ) || ( num < - 255 ) )		339262	1					
ANR	359198	Condition	( num > 255 ) || ( num < - 255 )	4872:7:102806:102832	339262	0	True				
ANR	359199	OrExpression	( num > 255 ) || ( num < - 255 )		339262	0		||			
ANR	359200	RelationalExpression	num > 255		339262	0		>			
ANR	359201	Identifier	num		339262	0					
ANR	359202	PrimaryExpression	255		339262	1					
ANR	359203	RelationalExpression	num < - 255		339262	1		<			
ANR	359204	Identifier	num		339262	0					
ANR	359205	UnaryOperationExpression	- 255		339262	1					
ANR	359206	UnaryOperator	-		339262	0					
ANR	359207	PrimaryExpression	255		339262	1					
ANR	359208	CompoundStatement		3580:36:76976:76976	339262	1					
ANR	359209	ReturnStatement	return - 1 ;	4873:4:102841:102850	339262	0	True				
ANR	359210	UnaryOperationExpression	- 1		339262	0					
ANR	359211	UnaryOperator	-		339262	0					
ANR	359212	PrimaryExpression	1		339262	1					
ANR	359213	IfStatement	if ( strsel == 0 )		339262	2					
ANR	359214	Condition	strsel == 0	4876:7:102865:102875	339262	0	True				
ANR	359215	EqualityExpression	strsel == 0		339262	0		==			
ANR	359216	Identifier	strsel		339262	0					
ANR	359217	PrimaryExpression	0		339262	1					
ANR	359218	CompoundStatement		3584:20:77019:77019	339262	1					
ANR	359219	ExpressionStatement	ao -> o = 0x40f8000d	4877:4:102884:102902	339262	0	True				
ANR	359220	AssignmentExpression	ao -> o = 0x40f8000d		339262	0		=			
ANR	359221	PtrMemberAccess	ao -> o		339262	0					
ANR	359222	Identifier	ao		339262	0					
ANR	359223	Identifier	o		339262	1					
ANR	359224	PrimaryExpression	0x40f8000d		339262	1					
ANR	359225	ElseStatement	else		339262	0					
ANR	359226	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	359227	Condition	strsel == B_BIT	4879:7:102922:102936	339262	0	True				
ANR	359228	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	359229	Identifier	strsel		339262	0					
ANR	359230	Identifier	B_BIT		339262	1					
ANR	359231	CompoundStatement		3587:24:77080:77080	339262	1					
ANR	359232	ExpressionStatement	ao -> o = 0x00f8000d	4880:4:102945:102963	339262	0	True				
ANR	359233	AssignmentExpression	ao -> o = 0x00f8000d		339262	0		=			
ANR	359234	PtrMemberAccess	ao -> o		339262	0					
ANR	359235	Identifier	ao		339262	0					
ANR	359236	Identifier	o		339262	1					
ANR	359237	PrimaryExpression	0x00f8000d		339262	1					
ANR	359238	ElseStatement	else		339262	0					
ANR	359239	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	359240	Condition	strsel == H_BIT	4882:7:102983:102997	339262	0	True				
ANR	359241	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	359242	Identifier	strsel		339262	0					
ANR	359243	Identifier	H_BIT		339262	1					
ANR	359244	CompoundStatement		3590:24:77141:77141	339262	1					
ANR	359245	ExpressionStatement	ao -> o = 0x20f8000d	4883:4:103006:103024	339262	0	True				
ANR	359246	AssignmentExpression	ao -> o = 0x20f8000d		339262	0		=			
ANR	359247	PtrMemberAccess	ao -> o		339262	0					
ANR	359248	Identifier	ao		339262	0					
ANR	359249	Identifier	o		339262	1					
ANR	359250	PrimaryExpression	0x20f8000d		339262	1					
ANR	359251	ElseStatement	else		339262	0					
ANR	359252	CompoundStatement		3592:10:77177:77177	339262	0					
ANR	359253	ReturnStatement	return - 1 ;	4885:4:103042:103051	339262	0	True				
ANR	359254	UnaryOperationExpression	- 1		339262	0					
ANR	359255	UnaryOperator	-		339262	0					
ANR	359256	PrimaryExpression	1		339262	1					
ANR	359257	IfStatement	if ( num < 0 )		339262	3					
ANR	359258	Condition	num < 0	4888:7:103066:103072	339262	0	True				
ANR	359259	RelationalExpression	num < 0		339262	0		<			
ANR	359260	Identifier	num		339262	0					
ANR	359261	PrimaryExpression	0		339262	1					
ANR	359262	CompoundStatement		3596:16:77216:77216	339262	1					
ANR	359263	ExpressionStatement	num = - num	4889:4:103081:103091	339262	0	True				
ANR	359264	AssignmentExpression	num = - num		339262	0		=			
ANR	359265	Identifier	num		339262	0					
ANR	359266	UnaryOperationExpression	- num		339262	1					
ANR	359267	UnaryOperator	-		339262	0					
ANR	359268	Identifier	num		339262	1					
ANR	359269	ElseStatement	else		339262	0					
ANR	359270	CompoundStatement		3598:10:77244:77244	339262	0					
ANR	359271	ExpressionStatement	ao -> o |= 1 << 1	4891:4:103109:103124	339262	0	True				
ANR	359272	AssignmentExpression	ao -> o |= 1 << 1		339262	0		|=			
ANR	359273	PtrMemberAccess	ao -> o		339262	0					
ANR	359274	Identifier	ao		339262	0					
ANR	359275	Identifier	o		339262	1					
ANR	359276	ShiftExpression	1 << 1		339262	1		<<			
ANR	359277	PrimaryExpression	1		339262	0					
ANR	359278	PrimaryExpression	1		339262	1					
ANR	359279	ExpressionStatement	ao -> o |= num << 8	4893:3:103134:103151	339262	4	True				
ANR	359280	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	359281	PtrMemberAccess	ao -> o		339262	0					
ANR	359282	Identifier	ao		339262	0					
ANR	359283	Identifier	o		339262	1					
ANR	359284	ShiftExpression	num << 8		339262	1		<<			
ANR	359285	Identifier	num		339262	0					
ANR	359286	PrimaryExpression	8		339262	1					
ANR	359287	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4894:3:103156:103185	339262	5	True				
ANR	359288	CallExpression	"mem_32bit_2reg ( ao , m )"		339262	0					
ANR	359289	Callee	mem_32bit_2reg		339262	0					
ANR	359290	Identifier	mem_32bit_2reg		339262	0					
ANR	359291	ArgumentList	ao		339262	1					
ANR	359292	Argument	ao		339262	0					
ANR	359293	Identifier	ao		339262	0					
ANR	359294	Argument	m		339262	1					
ANR	359295	Identifier	m		339262	0					
ANR	359296	BreakStatement	break ;	4896:3:103202:103207	339262	10	True				
ANR	359297	Label	case THUMB_REG_BRACKREG_REGBRACK :	4897:2:103211:103243	339262	11	True				
ANR	359298	Identifier	THUMB_REG_BRACKREG_REGBRACK		339262	0					
ANR	359299	CompoundStatement		3608:3:77465:77499	339262	12					
ANR	359300	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4898:3:103250:103278	339262	0	True				
ANR	359301	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	359302	IdentifierDeclType	ut8		339262	0					
ANR	359303	Identifier	reg1		339262	1					
ANR	359304	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	359305	Identifier	reg1		339262	0					
ANR	359306	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	359307	Callee	getreg		339262	0					
ANR	359308	Identifier	getreg		339262	0					
ANR	359309	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	359310	Argument	ao -> a [ 0 ]		339262	0					
ANR	359311	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	359312	PtrMemberAccess	ao -> a		339262	0					
ANR	359313	Identifier	ao		339262	0					
ANR	359314	Identifier	a		339262	1					
ANR	359315	PrimaryExpression	0		339262	1					
ANR	359316	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	4899:3:103283:103319	339262	1	True				
ANR	359317	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	0					
ANR	359318	IdentifierDeclType	ut8		339262	0					
ANR	359319	Identifier	reg2		339262	1					
ANR	359320	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	2		=			
ANR	359321	Identifier	reg2		339262	0					
ANR	359322	CallExpression	getregmemstart ( ao -> a [ 1 ] )		339262	1					
ANR	359323	Callee	getregmemstart		339262	0					
ANR	359324	Identifier	getregmemstart		339262	0					
ANR	359325	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	359326	Argument	ao -> a [ 1 ]		339262	0					
ANR	359327	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	359328	PtrMemberAccess	ao -> a		339262	0					
ANR	359329	Identifier	ao		339262	0					
ANR	359330	Identifier	a		339262	1					
ANR	359331	PrimaryExpression	1		339262	1					
ANR	359332	IdentifierDeclStatement	ut8 reg3 = getregmemend ( ao -> a [ 2 ] ) ;	4900:3:103324:103358	339262	2	True				
ANR	359333	IdentifierDecl	reg3 = getregmemend ( ao -> a [ 2 ] )		339262	0					
ANR	359334	IdentifierDeclType	ut8		339262	0					
ANR	359335	Identifier	reg3		339262	1					
ANR	359336	AssignmentExpression	reg3 = getregmemend ( ao -> a [ 2 ] )		339262	2		=			
ANR	359337	Identifier	reg3		339262	0					
ANR	359338	CallExpression	getregmemend ( ao -> a [ 2 ] )		339262	1					
ANR	359339	Callee	getregmemend		339262	0					
ANR	359340	Identifier	getregmemend		339262	0					
ANR	359341	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359342	Argument	ao -> a [ 2 ]		339262	0					
ANR	359343	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359344	PtrMemberAccess	ao -> a		339262	0					
ANR	359345	Identifier	ao		339262	0					
ANR	359346	Identifier	a		339262	1					
ANR	359347	PrimaryExpression	2		339262	1					
ANR	359348	IfStatement	if ( ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		339262	3					
ANR	359349	Condition	( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )	4901:7:103367:103425	339262	0	True				
ANR	359350	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	359351	RelationalExpression	reg1 < 8		339262	0		<			
ANR	359352	Identifier	reg1		339262	0					
ANR	359353	PrimaryExpression	8		339262	1					
ANR	359354	AndExpression	( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	359355	RelationalExpression	reg2 < 8		339262	0		<			
ANR	359356	Identifier	reg2		339262	0					
ANR	359357	PrimaryExpression	8		339262	1					
ANR	359358	AndExpression	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	359359	RelationalExpression	reg3 < 8		339262	0		<			
ANR	359360	Identifier	reg3		339262	0					
ANR	359361	PrimaryExpression	8		339262	1					
ANR	359362	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	359363	UnaryOperator	!		339262	0					
ANR	359364	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	359365	Identifier	m		339262	0					
ANR	359366	Identifier	DOTW_BIT		339262	1					
ANR	359367	CompoundStatement		3609:68:77569:77569	339262	1					
ANR	359368	IfStatement	if ( strsel == 0 )		339262	0					
ANR	359369	Condition	strsel == 0	4902:8:103438:103448	339262	0	True				
ANR	359370	EqualityExpression	strsel == 0		339262	0		==			
ANR	359371	Identifier	strsel		339262	0					
ANR	359372	PrimaryExpression	0		339262	1					
ANR	359373	CompoundStatement		3610:21:77592:77592	339262	1					
ANR	359374	ExpressionStatement	ao -> o = 0x0050	4903:5:103458:103472	339262	0	True				
ANR	359375	AssignmentExpression	ao -> o = 0x0050		339262	0		=			
ANR	359376	PtrMemberAccess	ao -> o		339262	0					
ANR	359377	Identifier	ao		339262	0					
ANR	359378	Identifier	o		339262	1					
ANR	359379	PrimaryExpression	0x0050		339262	1					
ANR	359380	ElseStatement	else		339262	0					
ANR	359381	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	359382	Condition	strsel == B_BIT	4905:8:103493:103507	339262	0	True				
ANR	359383	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	359384	Identifier	strsel		339262	0					
ANR	359385	Identifier	B_BIT		339262	1					
ANR	359386	CompoundStatement		3613:25:77651:77651	339262	1					
ANR	359387	ExpressionStatement	ao -> o = 0x0054	4906:5:103517:103531	339262	0	True				
ANR	359388	AssignmentExpression	ao -> o = 0x0054		339262	0		=			
ANR	359389	PtrMemberAccess	ao -> o		339262	0					
ANR	359390	Identifier	ao		339262	0					
ANR	359391	Identifier	o		339262	1					
ANR	359392	PrimaryExpression	0x0054		339262	1					
ANR	359393	ElseStatement	else		339262	0					
ANR	359394	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	359395	Condition	strsel == H_BIT	4908:8:103552:103566	339262	0	True				
ANR	359396	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	359397	Identifier	strsel		339262	0					
ANR	359398	Identifier	H_BIT		339262	1					
ANR	359399	CompoundStatement		3616:25:77710:77710	339262	1					
ANR	359400	ExpressionStatement	ao -> o = 0x0052	4909:5:103576:103590	339262	0	True				
ANR	359401	AssignmentExpression	ao -> o = 0x0052		339262	0		=			
ANR	359402	PtrMemberAccess	ao -> o		339262	0					
ANR	359403	Identifier	ao		339262	0					
ANR	359404	Identifier	o		339262	1					
ANR	359405	PrimaryExpression	0x0052		339262	1					
ANR	359406	ElseStatement	else		339262	0					
ANR	359407	CompoundStatement		3618:11:77744:77744	339262	0					
ANR	359408	ReturnStatement	return - 1 ;	4911:5:103610:103619	339262	0	True				
ANR	359409	UnaryOperationExpression	- 1		339262	0					
ANR	359410	UnaryOperator	-		339262	0					
ANR	359411	PrimaryExpression	1		339262	1					
ANR	359412	ExpressionStatement	ao -> o |= reg1 << 8	4913:4:103631:103649	339262	1	True				
ANR	359413	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	359414	PtrMemberAccess	ao -> o		339262	0					
ANR	359415	Identifier	ao		339262	0					
ANR	359416	Identifier	o		339262	1					
ANR	359417	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	359418	Identifier	reg1		339262	0					
ANR	359419	PrimaryExpression	8		339262	1					
ANR	359420	ExpressionStatement	ao -> o |= reg2 << 11	4914:4:103655:103674	339262	2	True				
ANR	359421	AssignmentExpression	ao -> o |= reg2 << 11		339262	0		|=			
ANR	359422	PtrMemberAccess	ao -> o		339262	0					
ANR	359423	Identifier	ao		339262	0					
ANR	359424	Identifier	o		339262	1					
ANR	359425	ShiftExpression	reg2 << 11		339262	1		<<			
ANR	359426	Identifier	reg2		339262	0					
ANR	359427	PrimaryExpression	11		339262	1					
ANR	359428	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	4915:4:103680:103707	339262	3	True				
ANR	359429	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		339262	0		|=			
ANR	359430	PtrMemberAccess	ao -> o		339262	0					
ANR	359431	Identifier	ao		339262	0					
ANR	359432	Identifier	o		339262	1					
ANR	359433	ShiftExpression	( reg3 & 0x3 ) << 14		339262	1		<<			
ANR	359434	BitAndExpression	reg3 & 0x3		339262	0		&			
ANR	359435	Identifier	reg3		339262	0					
ANR	359436	PrimaryExpression	0x3		339262	1					
ANR	359437	PrimaryExpression	14		339262	1					
ANR	359438	ExpressionStatement	ao -> o |= ( reg3 >> 2 )	4916:4:103713:103733	339262	4	True				
ANR	359439	AssignmentExpression	ao -> o |= ( reg3 >> 2 )		339262	0		|=			
ANR	359440	PtrMemberAccess	ao -> o		339262	0					
ANR	359441	Identifier	ao		339262	0					
ANR	359442	Identifier	o		339262	1					
ANR	359443	ShiftExpression	reg3 >> 2		339262	1		>>			
ANR	359444	Identifier	reg3		339262	0					
ANR	359445	PrimaryExpression	2		339262	1					
ANR	359446	ReturnStatement	return 2 ;	4917:4:103739:103747	339262	5	True				
ANR	359447	PrimaryExpression	2		339262	0					
ANR	359448	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	4919:3:103757:103795	339262	4	True				
ANR	359449	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	359450	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		339262	0					
ANR	359451	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359452	PtrMemberAccess	ao -> a		339262	0					
ANR	359453	Identifier	ao		339262	0					
ANR	359454	Identifier	a		339262	1					
ANR	359455	PrimaryExpression	2		339262	1					
ANR	359456	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		339262	1		-			
ANR	359457	CallExpression	strlen ( ao -> a [ 2 ] )		339262	0					
ANR	359458	Callee	strlen		339262	0					
ANR	359459	Identifier	strlen		339262	0					
ANR	359460	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359461	Argument	ao -> a [ 2 ]		339262	0					
ANR	359462	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359463	PtrMemberAccess	ao -> a		339262	0					
ANR	359464	Identifier	ao		339262	0					
ANR	359465	Identifier	a		339262	1					
ANR	359466	PrimaryExpression	2		339262	1					
ANR	359467	PrimaryExpression	1		339262	1					
ANR	359468	PrimaryExpression	'\\0'		339262	1					
ANR	359469	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0]"""	4920:3:103800:103819	339262	5	True				
ANR	359470	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0]"""		339262	0		=			
ANR	359471	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	359472	PtrMemberAccess	ao -> a		339262	0					
ANR	359473	Identifier	ao		339262	0					
ANR	359474	Identifier	a		339262	1					
ANR	359475	PrimaryExpression	3		339262	1					
ANR	359476	PrimaryExpression	"""lsl 0]"""		339262	1					
ANR	359477	Label	case THUMB_REG_BRACKREG_REG_SHIFTBRACK :	4923:2:103865:103903	339262	13	True				
ANR	359478	Identifier	THUMB_REG_BRACKREG_REG_SHIFTBRACK		339262	0					
ANR	359479	CompoundStatement		3635:3:78158:78201	339262	14					
ANR	359480	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4924:3:103910:103938	339262	0	True				
ANR	359481	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	359482	IdentifierDeclType	ut8		339262	0					
ANR	359483	Identifier	reg1		339262	1					
ANR	359484	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	359485	Identifier	reg1		339262	0					
ANR	359486	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	359487	Callee	getreg		339262	0					
ANR	359488	Identifier	getreg		339262	0					
ANR	359489	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	359490	Argument	ao -> a [ 0 ]		339262	0					
ANR	359491	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	359492	PtrMemberAccess	ao -> a		339262	0					
ANR	359493	Identifier	ao		339262	0					
ANR	359494	Identifier	a		339262	1					
ANR	359495	PrimaryExpression	0		339262	1					
ANR	359496	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	4925:3:103943:103979	339262	1	True				
ANR	359497	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	0					
ANR	359498	IdentifierDeclType	ut8		339262	0					
ANR	359499	Identifier	reg2		339262	1					
ANR	359500	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		339262	2		=			
ANR	359501	Identifier	reg2		339262	0					
ANR	359502	CallExpression	getregmemstart ( ao -> a [ 1 ] )		339262	1					
ANR	359503	Callee	getregmemstart		339262	0					
ANR	359504	Identifier	getregmemstart		339262	0					
ANR	359505	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	359506	Argument	ao -> a [ 1 ]		339262	0					
ANR	359507	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	359508	PtrMemberAccess	ao -> a		339262	0					
ANR	359509	Identifier	ao		339262	0					
ANR	359510	Identifier	a		339262	1					
ANR	359511	PrimaryExpression	1		339262	1					
ANR	359512	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4926:3:103984:104012	339262	2	True				
ANR	359513	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	359514	IdentifierDeclType	ut8		339262	0					
ANR	359515	Identifier	reg3		339262	1					
ANR	359516	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	359517	Identifier	reg3		339262	0					
ANR	359518	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	359519	Callee	getreg		339262	0					
ANR	359520	Identifier	getreg		339262	0					
ANR	359521	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359522	Argument	ao -> a [ 2 ]		339262	0					
ANR	359523	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359524	PtrMemberAccess	ao -> a		339262	0					
ANR	359525	Identifier	ao		339262	0					
ANR	359526	Identifier	a		339262	1					
ANR	359527	PrimaryExpression	2		339262	1					
ANR	359528	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 3 ] ) >> 2 ;	4927:3:104017:104060	339262	3	True				
ANR	359529	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 3 ] ) >> 2		339262	0					
ANR	359530	IdentifierDeclType	ut32		339262	0					
ANR	359531	Identifier	shift		339262	1					
ANR	359532	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 3 ] ) >> 2		339262	2		=			
ANR	359533	Identifier	shift		339262	0					
ANR	359534	ShiftExpression	getshiftmemend ( ao -> a [ 3 ] ) >> 2		339262	1		>>			
ANR	359535	CallExpression	getshiftmemend ( ao -> a [ 3 ] )		339262	0					
ANR	359536	Callee	getshiftmemend		339262	0					
ANR	359537	Identifier	getshiftmemend		339262	0					
ANR	359538	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	359539	Argument	ao -> a [ 3 ]		339262	0					
ANR	359540	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	359541	PtrMemberAccess	ao -> a		339262	0					
ANR	359542	Identifier	ao		339262	0					
ANR	359543	Identifier	a		339262	1					
ANR	359544	PrimaryExpression	3		339262	1					
ANR	359545	PrimaryExpression	2		339262	1					
ANR	359546	IfStatement	if ( ( ( shift & 0xffffcfff ) != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) )		339262	4					
ANR	359547	Condition	( ( shift & 0xffffcfff ) != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )	4929:7:104073:104144	339262	0	True				
ANR	359548	OrExpression	( ( shift & 0xffffcfff ) != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		339262	0		||			
ANR	359549	EqualityExpression	( shift & 0xffffcfff ) != 0		339262	0		!=			
ANR	359550	BitAndExpression	shift & 0xffffcfff		339262	0		&			
ANR	359551	Identifier	shift		339262	0					
ANR	359552	PrimaryExpression	0xffffcfff		339262	1					
ANR	359553	PrimaryExpression	0		339262	1					
ANR	359554	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		339262	1		||			
ANR	359555	RelationalExpression	reg1 > 15		339262	0		>			
ANR	359556	Identifier	reg1		339262	0					
ANR	359557	PrimaryExpression	15		339262	1					
ANR	359558	OrExpression	( reg2 > 15 ) || ( reg3 > 15 )		339262	1		||			
ANR	359559	RelationalExpression	reg2 > 15		339262	0		>			
ANR	359560	Identifier	reg2		339262	0					
ANR	359561	PrimaryExpression	15		339262	1					
ANR	359562	RelationalExpression	reg3 > 15		339262	1		>			
ANR	359563	Identifier	reg3		339262	0					
ANR	359564	PrimaryExpression	15		339262	1					
ANR	359565	CompoundStatement		3637:81:78288:78288	339262	1					
ANR	359566	ReturnStatement	return - 1 ;	4930:4:104153:104162	339262	0	True				
ANR	359567	UnaryOperationExpression	- 1		339262	0					
ANR	359568	UnaryOperator	-		339262	0					
ANR	359569	PrimaryExpression	1		339262	1					
ANR	359570	IfStatement	if ( strsel == 0 )		339262	5					
ANR	359571	Condition	strsel == 0	4933:7:104177:104187	339262	0	True				
ANR	359572	EqualityExpression	strsel == 0		339262	0		==			
ANR	359573	Identifier	strsel		339262	0					
ANR	359574	PrimaryExpression	0		339262	1					
ANR	359575	CompoundStatement		3641:20:78331:78331	339262	1					
ANR	359576	ExpressionStatement	ao -> o = 0x40f80000	4934:4:104196:104214	339262	0	True				
ANR	359577	AssignmentExpression	ao -> o = 0x40f80000		339262	0		=			
ANR	359578	PtrMemberAccess	ao -> o		339262	0					
ANR	359579	Identifier	ao		339262	0					
ANR	359580	Identifier	o		339262	1					
ANR	359581	PrimaryExpression	0x40f80000		339262	1					
ANR	359582	ElseStatement	else		339262	0					
ANR	359583	IfStatement	if ( strsel == B_BIT )		339262	0					
ANR	359584	Condition	strsel == B_BIT	4936:7:104234:104248	339262	0	True				
ANR	359585	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	359586	Identifier	strsel		339262	0					
ANR	359587	Identifier	B_BIT		339262	1					
ANR	359588	CompoundStatement		3644:24:78392:78392	339262	1					
ANR	359589	ExpressionStatement	ao -> o = 0x00f80000	4937:4:104257:104275	339262	0	True				
ANR	359590	AssignmentExpression	ao -> o = 0x00f80000		339262	0		=			
ANR	359591	PtrMemberAccess	ao -> o		339262	0					
ANR	359592	Identifier	ao		339262	0					
ANR	359593	Identifier	o		339262	1					
ANR	359594	PrimaryExpression	0x00f80000		339262	1					
ANR	359595	ElseStatement	else		339262	0					
ANR	359596	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	359597	Condition	strsel == H_BIT	4939:7:104295:104309	339262	0	True				
ANR	359598	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	359599	Identifier	strsel		339262	0					
ANR	359600	Identifier	H_BIT		339262	1					
ANR	359601	CompoundStatement		3647:24:78453:78453	339262	1					
ANR	359602	ExpressionStatement	ao -> o = 0x20f80000	4940:4:104318:104336	339262	0	True				
ANR	359603	AssignmentExpression	ao -> o = 0x20f80000		339262	0		=			
ANR	359604	PtrMemberAccess	ao -> o		339262	0					
ANR	359605	Identifier	ao		339262	0					
ANR	359606	Identifier	o		339262	1					
ANR	359607	PrimaryExpression	0x20f80000		339262	1					
ANR	359608	ElseStatement	else		339262	0					
ANR	359609	CompoundStatement		3649:10:78489:78489	339262	0					
ANR	359610	ReturnStatement	return - 1 ;	4942:4:104354:104363	339262	0	True				
ANR	359611	UnaryOperationExpression	- 1		339262	0					
ANR	359612	UnaryOperator	-		339262	0					
ANR	359613	PrimaryExpression	1		339262	1					
ANR	359614	ExpressionStatement	ao -> o |= reg1 << 4	4945:3:104377:104395	339262	6	True				
ANR	359615	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	359616	PtrMemberAccess	ao -> o		339262	0					
ANR	359617	Identifier	ao		339262	0					
ANR	359618	Identifier	o		339262	1					
ANR	359619	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	359620	Identifier	reg1		339262	0					
ANR	359621	PrimaryExpression	4		339262	1					
ANR	359622	ExpressionStatement	ao -> o |= reg2 << 24	4946:3:104400:104419	339262	7	True				
ANR	359623	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	359624	PtrMemberAccess	ao -> o		339262	0					
ANR	359625	Identifier	ao		339262	0					
ANR	359626	Identifier	o		339262	1					
ANR	359627	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	359628	Identifier	reg2		339262	0					
ANR	359629	PrimaryExpression	24		339262	1					
ANR	359630	ExpressionStatement	ao -> o |= reg3 << 8	4947:3:104424:104442	339262	8	True				
ANR	359631	AssignmentExpression	ao -> o |= reg3 << 8		339262	0		|=			
ANR	359632	PtrMemberAccess	ao -> o		339262	0					
ANR	359633	Identifier	ao		339262	0					
ANR	359634	Identifier	o		339262	1					
ANR	359635	ShiftExpression	reg3 << 8		339262	1		<<			
ANR	359636	Identifier	reg3		339262	0					
ANR	359637	PrimaryExpression	8		339262	1					
ANR	359638	ExpressionStatement	ao -> o |= shift	4948:3:104447:104461	339262	9	True				
ANR	359639	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	359640	PtrMemberAccess	ao -> o		339262	0					
ANR	359641	Identifier	ao		339262	0					
ANR	359642	Identifier	o		339262	1					
ANR	359643	Identifier	shift		339262	1					
ANR	359644	ReturnStatement	return 4 ;	4949:3:104466:104474	339262	10	True				
ANR	359645	PrimaryExpression	4		339262	0					
ANR	359646	BreakStatement	break ;	4951:3:104491:104496	339262	15	True				
ANR	359647	Label	case THUMB_REG_REG_BRACKREGBRACK :	4952:2:104500:104532	339262	16	True				
ANR	359648	Identifier	THUMB_REG_REG_BRACKREGBRACK		339262	0					
ANR	359649	CompoundStatement		3660:36:78675:78675	339262	17					
ANR	359650	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	4953:3:104539:104577	339262	0	True				
ANR	359651	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	359652	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		339262	0					
ANR	359653	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359654	PtrMemberAccess	ao -> a		339262	0					
ANR	359655	Identifier	ao		339262	0					
ANR	359656	Identifier	a		339262	1					
ANR	359657	PrimaryExpression	2		339262	1					
ANR	359658	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		339262	1		-			
ANR	359659	CallExpression	strlen ( ao -> a [ 2 ] )		339262	0					
ANR	359660	Callee	strlen		339262	0					
ANR	359661	Identifier	strlen		339262	0					
ANR	359662	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359663	Argument	ao -> a [ 2 ]		339262	0					
ANR	359664	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359665	PtrMemberAccess	ao -> a		339262	0					
ANR	359666	Identifier	ao		339262	0					
ANR	359667	Identifier	a		339262	1					
ANR	359668	PrimaryExpression	2		339262	1					
ANR	359669	PrimaryExpression	1		339262	1					
ANR	359670	PrimaryExpression	'\\0'		339262	1					
ANR	359671	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	4954:3:104582:104597	339262	1	True				
ANR	359672	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		339262	0		=			
ANR	359673	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	359674	PtrMemberAccess	ao -> a		339262	0					
ANR	359675	Identifier	ao		339262	0					
ANR	359676	Identifier	a		339262	1					
ANR	359677	PrimaryExpression	3		339262	1					
ANR	359678	PrimaryExpression	"""0]"""		339262	1					
ANR	359679	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACK :	4957:2:104643:104681	339262	18	True				
ANR	359680	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACK		339262	0					
ANR	359681	CompoundStatement		3669:3:78936:78970	339262	19					
ANR	359682	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4958:3:104688:104716	339262	0	True				
ANR	359683	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	359684	IdentifierDeclType	ut8		339262	0					
ANR	359685	Identifier	reg1		339262	1					
ANR	359686	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	359687	Identifier	reg1		339262	0					
ANR	359688	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	359689	Callee	getreg		339262	0					
ANR	359690	Identifier	getreg		339262	0					
ANR	359691	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	359692	Argument	ao -> a [ 0 ]		339262	0					
ANR	359693	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	359694	PtrMemberAccess	ao -> a		339262	0					
ANR	359695	Identifier	ao		339262	0					
ANR	359696	Identifier	a		339262	1					
ANR	359697	PrimaryExpression	0		339262	1					
ANR	359698	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4959:3:104721:104749	339262	1	True				
ANR	359699	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	359700	IdentifierDeclType	ut8		339262	0					
ANR	359701	Identifier	reg2		339262	1					
ANR	359702	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	359703	Identifier	reg2		339262	0					
ANR	359704	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	359705	Callee	getreg		339262	0					
ANR	359706	Identifier	getreg		339262	0					
ANR	359707	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	359708	Argument	ao -> a [ 1 ]		339262	0					
ANR	359709	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	359710	PtrMemberAccess	ao -> a		339262	0					
ANR	359711	Identifier	ao		339262	0					
ANR	359712	Identifier	a		339262	1					
ANR	359713	PrimaryExpression	1		339262	1					
ANR	359714	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	4960:3:104754:104790	339262	2	True				
ANR	359715	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	359716	IdentifierDeclType	ut8		339262	0					
ANR	359717	Identifier	reg3		339262	1					
ANR	359718	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	359719	Identifier	reg3		339262	0					
ANR	359720	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	359721	Callee	getregmemstart		339262	0					
ANR	359722	Identifier	getregmemstart		339262	0					
ANR	359723	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359724	Argument	ao -> a [ 2 ]		339262	0					
ANR	359725	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359726	PtrMemberAccess	ao -> a		339262	0					
ANR	359727	Identifier	ao		339262	0					
ANR	359728	Identifier	a		339262	1					
ANR	359729	PrimaryExpression	2		339262	1					
ANR	359730	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	4961:3:104795:104829	339262	3	True				
ANR	359731	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		339262	0					
ANR	359732	IdentifierDeclType	st32		339262	0					
ANR	359733	Identifier	num		339262	1					
ANR	359734	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		339262	2		=			
ANR	359735	Identifier	num		339262	0					
ANR	359736	CallExpression	getnummemend ( ao -> a [ 3 ] )		339262	1					
ANR	359737	Callee	getnummemend		339262	0					
ANR	359738	Identifier	getnummemend		339262	0					
ANR	359739	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	359740	Argument	ao -> a [ 3 ]		339262	0					
ANR	359741	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	359742	PtrMemberAccess	ao -> a		339262	0					
ANR	359743	Identifier	ao		339262	0					
ANR	359744	Identifier	a		339262	1					
ANR	359745	PrimaryExpression	3		339262	1					
ANR	359746	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 ) )		339262	4					
ANR	359747	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )	4963:7:104839:104953	339262	0	True				
ANR	359748	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	0		||			
ANR	359749	RelationalExpression	reg1 > 15		339262	0		>			
ANR	359750	Identifier	reg1		339262	0					
ANR	359751	PrimaryExpression	15		339262	1					
ANR	359752	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359753	RelationalExpression	reg2 > 15		339262	0		>			
ANR	359754	Identifier	reg2		339262	0					
ANR	359755	PrimaryExpression	15		339262	1					
ANR	359756	OrExpression	( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359757	RelationalExpression	reg3 > 15		339262	0		>			
ANR	359758	Identifier	reg3		339262	0					
ANR	359759	PrimaryExpression	15		339262	1					
ANR	359760	OrExpression	( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359761	EqualityExpression	strsel != D_BIT		339262	0		!=			
ANR	359762	Identifier	strsel		339262	0					
ANR	359763	Identifier	D_BIT		339262	1					
ANR	359764	OrExpression	( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359765	RelationalExpression	num > 1023		339262	0		>			
ANR	359766	Identifier	num		339262	0					
ANR	359767	PrimaryExpression	1023		339262	1					
ANR	359768	OrExpression	( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359769	RelationalExpression	num < - 1023		339262	0		<			
ANR	359770	Identifier	num		339262	0					
ANR	359771	UnaryOperationExpression	- 1023		339262	1					
ANR	359772	UnaryOperator	-		339262	0					
ANR	359773	PrimaryExpression	1023		339262	1					
ANR	359774	EqualityExpression	( num % 4 ) != 0		339262	1		!=			
ANR	359775	MultiplicativeExpression	num % 4		339262	0		%			
ANR	359776	Identifier	num		339262	0					
ANR	359777	PrimaryExpression	4		339262	1					
ANR	359778	PrimaryExpression	0		339262	1					
ANR	359779	CompoundStatement		3671:124:79097:79097	339262	1					
ANR	359780	ReturnStatement	return - 1 ;	4964:4:104962:104971	339262	0	True				
ANR	359781	UnaryOperationExpression	- 1		339262	0					
ANR	359782	UnaryOperator	-		339262	0					
ANR	359783	PrimaryExpression	1		339262	1					
ANR	359784	ExpressionStatement	ao -> o = 0x40e90000	4967:3:104982:105000	339262	5	True				
ANR	359785	AssignmentExpression	ao -> o = 0x40e90000		339262	0		=			
ANR	359786	PtrMemberAccess	ao -> o		339262	0					
ANR	359787	Identifier	ao		339262	0					
ANR	359788	Identifier	o		339262	1					
ANR	359789	PrimaryExpression	0x40e90000		339262	1					
ANR	359790	IfStatement	if ( num < 0 )		339262	6					
ANR	359791	Condition	num < 0	4969:7:105010:105016	339262	0	True				
ANR	359792	RelationalExpression	num < 0		339262	0		<			
ANR	359793	Identifier	num		339262	0					
ANR	359794	PrimaryExpression	0		339262	1					
ANR	359795	CompoundStatement		3677:16:79160:79160	339262	1					
ANR	359796	ExpressionStatement	num = - num	4970:4:105025:105035	339262	0	True				
ANR	359797	AssignmentExpression	num = - num		339262	0		=			
ANR	359798	Identifier	num		339262	0					
ANR	359799	UnaryOperationExpression	- num		339262	1					
ANR	359800	UnaryOperator	-		339262	0					
ANR	359801	Identifier	num		339262	1					
ANR	359802	ElseStatement	else		339262	0					
ANR	359803	CompoundStatement		3679:10:79188:79188	339262	0					
ANR	359804	ExpressionStatement	ao -> o |= 1 << 31	4972:4:105053:105069	339262	0	True				
ANR	359805	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	359806	PtrMemberAccess	ao -> o		339262	0					
ANR	359807	Identifier	ao		339262	0					
ANR	359808	Identifier	o		339262	1					
ANR	359809	ShiftExpression	1 << 31		339262	1		<<			
ANR	359810	PrimaryExpression	1		339262	0					
ANR	359811	PrimaryExpression	31		339262	1					
ANR	359812	ExpressionStatement	ao -> o |= reg1 << 4	4974:3:105079:105097	339262	7	True				
ANR	359813	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	359814	PtrMemberAccess	ao -> o		339262	0					
ANR	359815	Identifier	ao		339262	0					
ANR	359816	Identifier	o		339262	1					
ANR	359817	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	359818	Identifier	reg1		339262	0					
ANR	359819	PrimaryExpression	4		339262	1					
ANR	359820	ExpressionStatement	ao -> o |= reg2	4975:3:105102:105115	339262	8	True				
ANR	359821	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	359822	PtrMemberAccess	ao -> o		339262	0					
ANR	359823	Identifier	ao		339262	0					
ANR	359824	Identifier	o		339262	1					
ANR	359825	Identifier	reg2		339262	1					
ANR	359826	ExpressionStatement	ao -> o |= reg3 << 24	4976:3:105120:105139	339262	9	True				
ANR	359827	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	359828	PtrMemberAccess	ao -> o		339262	0					
ANR	359829	Identifier	ao		339262	0					
ANR	359830	Identifier	o		339262	1					
ANR	359831	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	359832	Identifier	reg3		339262	0					
ANR	359833	PrimaryExpression	24		339262	1					
ANR	359834	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4977:3:105144:105168	339262	10	True				
ANR	359835	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	359836	PtrMemberAccess	ao -> o		339262	0					
ANR	359837	Identifier	ao		339262	0					
ANR	359838	Identifier	o		339262	1					
ANR	359839	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	359840	ShiftExpression	num >> 2		339262	0		>>			
ANR	359841	Identifier	num		339262	0					
ANR	359842	PrimaryExpression	2		339262	1					
ANR	359843	PrimaryExpression	8		339262	1					
ANR	359844	ReturnStatement	return 4 ;	4978:3:105173:105181	339262	11	True				
ANR	359845	PrimaryExpression	4		339262	0					
ANR	359846	BreakStatement	break ;	4980:3:105198:105203	339262	20	True				
ANR	359847	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACKBANG :	4981:2:105207:105249	339262	21	True				
ANR	359848	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACKBANG		339262	0					
ANR	359849	CompoundStatement		3693:3:79504:79542	339262	22					
ANR	359850	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4982:3:105256:105284	339262	0	True				
ANR	359851	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	359852	IdentifierDeclType	ut8		339262	0					
ANR	359853	Identifier	reg1		339262	1					
ANR	359854	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	359855	Identifier	reg1		339262	0					
ANR	359856	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	359857	Callee	getreg		339262	0					
ANR	359858	Identifier	getreg		339262	0					
ANR	359859	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	359860	Argument	ao -> a [ 0 ]		339262	0					
ANR	359861	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	359862	PtrMemberAccess	ao -> a		339262	0					
ANR	359863	Identifier	ao		339262	0					
ANR	359864	Identifier	a		339262	1					
ANR	359865	PrimaryExpression	0		339262	1					
ANR	359866	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4983:3:105289:105317	339262	1	True				
ANR	359867	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	359868	IdentifierDeclType	ut8		339262	0					
ANR	359869	Identifier	reg2		339262	1					
ANR	359870	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	359871	Identifier	reg2		339262	0					
ANR	359872	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	359873	Callee	getreg		339262	0					
ANR	359874	Identifier	getreg		339262	0					
ANR	359875	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	359876	Argument	ao -> a [ 1 ]		339262	0					
ANR	359877	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	359878	PtrMemberAccess	ao -> a		339262	0					
ANR	359879	Identifier	ao		339262	0					
ANR	359880	Identifier	a		339262	1					
ANR	359881	PrimaryExpression	1		339262	1					
ANR	359882	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	4984:3:105322:105358	339262	2	True				
ANR	359883	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	359884	IdentifierDeclType	ut8		339262	0					
ANR	359885	Identifier	reg3		339262	1					
ANR	359886	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	359887	Identifier	reg3		339262	0					
ANR	359888	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	359889	Callee	getregmemstart		339262	0					
ANR	359890	Identifier	getregmemstart		339262	0					
ANR	359891	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	359892	Argument	ao -> a [ 2 ]		339262	0					
ANR	359893	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	359894	PtrMemberAccess	ao -> a		339262	0					
ANR	359895	Identifier	ao		339262	0					
ANR	359896	Identifier	a		339262	1					
ANR	359897	PrimaryExpression	2		339262	1					
ANR	359898	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 3 ] ) ;	4985:3:105363:105401	339262	3	True				
ANR	359899	IdentifierDecl	num = getnummemendbang ( ao -> a [ 3 ] )		339262	0					
ANR	359900	IdentifierDeclType	st32		339262	0					
ANR	359901	Identifier	num		339262	1					
ANR	359902	AssignmentExpression	num = getnummemendbang ( ao -> a [ 3 ] )		339262	2		=			
ANR	359903	Identifier	num		339262	0					
ANR	359904	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		339262	1					
ANR	359905	Callee	getnummemendbang		339262	0					
ANR	359906	Identifier	getnummemendbang		339262	0					
ANR	359907	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	359908	Argument	ao -> a [ 3 ]		339262	0					
ANR	359909	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	359910	PtrMemberAccess	ao -> a		339262	0					
ANR	359911	Identifier	ao		339262	0					
ANR	359912	Identifier	a		339262	1					
ANR	359913	PrimaryExpression	3		339262	1					
ANR	359914	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 ) )		339262	4					
ANR	359915	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )	4987:7:105411:105525	339262	0	True				
ANR	359916	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	0		||			
ANR	359917	RelationalExpression	reg1 > 15		339262	0		>			
ANR	359918	Identifier	reg1		339262	0					
ANR	359919	PrimaryExpression	15		339262	1					
ANR	359920	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359921	RelationalExpression	reg2 > 15		339262	0		>			
ANR	359922	Identifier	reg2		339262	0					
ANR	359923	PrimaryExpression	15		339262	1					
ANR	359924	OrExpression	( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359925	RelationalExpression	reg3 > 15		339262	0		>			
ANR	359926	Identifier	reg3		339262	0					
ANR	359927	PrimaryExpression	15		339262	1					
ANR	359928	OrExpression	( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359929	EqualityExpression	strsel != D_BIT		339262	0		!=			
ANR	359930	Identifier	strsel		339262	0					
ANR	359931	Identifier	D_BIT		339262	1					
ANR	359932	OrExpression	( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359933	RelationalExpression	num > 1023		339262	0		>			
ANR	359934	Identifier	num		339262	0					
ANR	359935	PrimaryExpression	1023		339262	1					
ANR	359936	OrExpression	( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	359937	RelationalExpression	num < - 1023		339262	0		<			
ANR	359938	Identifier	num		339262	0					
ANR	359939	UnaryOperationExpression	- 1023		339262	1					
ANR	359940	UnaryOperator	-		339262	0					
ANR	359941	PrimaryExpression	1023		339262	1					
ANR	359942	EqualityExpression	( num % 4 ) != 0		339262	1		!=			
ANR	359943	MultiplicativeExpression	num % 4		339262	0		%			
ANR	359944	Identifier	num		339262	0					
ANR	359945	PrimaryExpression	4		339262	1					
ANR	359946	PrimaryExpression	0		339262	1					
ANR	359947	CompoundStatement		3695:124:79669:79669	339262	1					
ANR	359948	ReturnStatement	return - 1 ;	4988:4:105534:105543	339262	0	True				
ANR	359949	UnaryOperationExpression	- 1		339262	0					
ANR	359950	UnaryOperator	-		339262	0					
ANR	359951	PrimaryExpression	1		339262	1					
ANR	359952	ExpressionStatement	ao -> o = 0x60e90000	4991:3:105554:105572	339262	5	True				
ANR	359953	AssignmentExpression	ao -> o = 0x60e90000		339262	0		=			
ANR	359954	PtrMemberAccess	ao -> o		339262	0					
ANR	359955	Identifier	ao		339262	0					
ANR	359956	Identifier	o		339262	1					
ANR	359957	PrimaryExpression	0x60e90000		339262	1					
ANR	359958	IfStatement	if ( num < 0 )		339262	6					
ANR	359959	Condition	num < 0	4993:7:105582:105588	339262	0	True				
ANR	359960	RelationalExpression	num < 0		339262	0		<			
ANR	359961	Identifier	num		339262	0					
ANR	359962	PrimaryExpression	0		339262	1					
ANR	359963	CompoundStatement		3701:16:79732:79732	339262	1					
ANR	359964	ExpressionStatement	num = - num	4994:4:105597:105607	339262	0	True				
ANR	359965	AssignmentExpression	num = - num		339262	0		=			
ANR	359966	Identifier	num		339262	0					
ANR	359967	UnaryOperationExpression	- num		339262	1					
ANR	359968	UnaryOperator	-		339262	0					
ANR	359969	Identifier	num		339262	1					
ANR	359970	ElseStatement	else		339262	0					
ANR	359971	CompoundStatement		3703:10:79760:79760	339262	0					
ANR	359972	ExpressionStatement	ao -> o |= 1 << 31	4996:4:105625:105641	339262	0	True				
ANR	359973	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	359974	PtrMemberAccess	ao -> o		339262	0					
ANR	359975	Identifier	ao		339262	0					
ANR	359976	Identifier	o		339262	1					
ANR	359977	ShiftExpression	1 << 31		339262	1		<<			
ANR	359978	PrimaryExpression	1		339262	0					
ANR	359979	PrimaryExpression	31		339262	1					
ANR	359980	ExpressionStatement	ao -> o |= reg1 << 4	4998:3:105651:105669	339262	7	True				
ANR	359981	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	359982	PtrMemberAccess	ao -> o		339262	0					
ANR	359983	Identifier	ao		339262	0					
ANR	359984	Identifier	o		339262	1					
ANR	359985	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	359986	Identifier	reg1		339262	0					
ANR	359987	PrimaryExpression	4		339262	1					
ANR	359988	ExpressionStatement	ao -> o |= reg2	4999:3:105674:105687	339262	8	True				
ANR	359989	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	359990	PtrMemberAccess	ao -> o		339262	0					
ANR	359991	Identifier	ao		339262	0					
ANR	359992	Identifier	o		339262	1					
ANR	359993	Identifier	reg2		339262	1					
ANR	359994	ExpressionStatement	ao -> o |= reg3 << 24	5000:3:105692:105711	339262	9	True				
ANR	359995	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	359996	PtrMemberAccess	ao -> o		339262	0					
ANR	359997	Identifier	ao		339262	0					
ANR	359998	Identifier	o		339262	1					
ANR	359999	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	360000	Identifier	reg3		339262	0					
ANR	360001	PrimaryExpression	24		339262	1					
ANR	360002	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5001:3:105716:105740	339262	10	True				
ANR	360003	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	360004	PtrMemberAccess	ao -> o		339262	0					
ANR	360005	Identifier	ao		339262	0					
ANR	360006	Identifier	o		339262	1					
ANR	360007	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	360008	ShiftExpression	num >> 2		339262	0		>>			
ANR	360009	Identifier	num		339262	0					
ANR	360010	PrimaryExpression	2		339262	1					
ANR	360011	PrimaryExpression	8		339262	1					
ANR	360012	ReturnStatement	return 4 ;	5002:3:105745:105753	339262	11	True				
ANR	360013	PrimaryExpression	4		339262	0					
ANR	360014	BreakStatement	break ;	5004:3:105770:105775	339262	23	True				
ANR	360015	Label	case THUMB_REG_REG_BRACKREGBRACK_CONST :	5005:2:105779:105817	339262	24	True				
ANR	360016	Identifier	THUMB_REG_REG_BRACKREGBRACK_CONST		339262	0					
ANR	360017	CompoundStatement		3717:3:80075:80103	339262	25					
ANR	360018	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5006:3:105824:105852	339262	0	True				
ANR	360019	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	360020	IdentifierDeclType	ut8		339262	0					
ANR	360021	Identifier	reg1		339262	1					
ANR	360022	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	360023	Identifier	reg1		339262	0					
ANR	360024	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	360025	Callee	getreg		339262	0					
ANR	360026	Identifier	getreg		339262	0					
ANR	360027	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	360028	Argument	ao -> a [ 0 ]		339262	0					
ANR	360029	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	360030	PtrMemberAccess	ao -> a		339262	0					
ANR	360031	Identifier	ao		339262	0					
ANR	360032	Identifier	a		339262	1					
ANR	360033	PrimaryExpression	0		339262	1					
ANR	360034	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5007:3:105857:105885	339262	1	True				
ANR	360035	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	360036	IdentifierDeclType	ut8		339262	0					
ANR	360037	Identifier	reg2		339262	1					
ANR	360038	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	360039	Identifier	reg2		339262	0					
ANR	360040	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	360041	Callee	getreg		339262	0					
ANR	360042	Identifier	getreg		339262	0					
ANR	360043	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	360044	Argument	ao -> a [ 1 ]		339262	0					
ANR	360045	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	360046	PtrMemberAccess	ao -> a		339262	0					
ANR	360047	Identifier	ao		339262	0					
ANR	360048	Identifier	a		339262	1					
ANR	360049	PrimaryExpression	1		339262	1					
ANR	360050	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	5008:3:105890:105929	339262	2	True				
ANR	360051	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	0					
ANR	360052	IdentifierDeclType	ut8		339262	0					
ANR	360053	Identifier	reg3		339262	1					
ANR	360054	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	2		=			
ANR	360055	Identifier	reg3		339262	0					
ANR	360056	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		339262	1					
ANR	360057	Callee	getregmemstartend		339262	0					
ANR	360058	Identifier	getregmemstartend		339262	0					
ANR	360059	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360060	Argument	ao -> a [ 2 ]		339262	0					
ANR	360061	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360062	PtrMemberAccess	ao -> a		339262	0					
ANR	360063	Identifier	ao		339262	0					
ANR	360064	Identifier	a		339262	1					
ANR	360065	PrimaryExpression	2		339262	1					
ANR	360066	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 3 ] ) ;	5009:3:105934:105962	339262	3	True				
ANR	360067	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		339262	0					
ANR	360068	IdentifierDeclType	st32		339262	0					
ANR	360069	Identifier	num		339262	1					
ANR	360070	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		339262	2		=			
ANR	360071	Identifier	num		339262	0					
ANR	360072	CallExpression	getnum ( ao -> a [ 3 ] )		339262	1					
ANR	360073	Callee	getnum		339262	0					
ANR	360074	Identifier	getnum		339262	0					
ANR	360075	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	360076	Argument	ao -> a [ 3 ]		339262	0					
ANR	360077	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	360078	PtrMemberAccess	ao -> a		339262	0					
ANR	360079	Identifier	ao		339262	0					
ANR	360080	Identifier	a		339262	1					
ANR	360081	PrimaryExpression	3		339262	1					
ANR	360082	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 ) )		339262	4					
ANR	360083	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )	5011:7:105972:106086	339262	0	True				
ANR	360084	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	0		||			
ANR	360085	RelationalExpression	reg1 > 15		339262	0		>			
ANR	360086	Identifier	reg1		339262	0					
ANR	360087	PrimaryExpression	15		339262	1					
ANR	360088	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360089	RelationalExpression	reg2 > 15		339262	0		>			
ANR	360090	Identifier	reg2		339262	0					
ANR	360091	PrimaryExpression	15		339262	1					
ANR	360092	OrExpression	( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360093	RelationalExpression	reg3 > 15		339262	0		>			
ANR	360094	Identifier	reg3		339262	0					
ANR	360095	PrimaryExpression	15		339262	1					
ANR	360096	OrExpression	( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360097	EqualityExpression	strsel != D_BIT		339262	0		!=			
ANR	360098	Identifier	strsel		339262	0					
ANR	360099	Identifier	D_BIT		339262	1					
ANR	360100	OrExpression	( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360101	RelationalExpression	num > 1023		339262	0		>			
ANR	360102	Identifier	num		339262	0					
ANR	360103	PrimaryExpression	1023		339262	1					
ANR	360104	OrExpression	( num < - 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360105	RelationalExpression	num < - 1023		339262	0		<			
ANR	360106	Identifier	num		339262	0					
ANR	360107	UnaryOperationExpression	- 1023		339262	1					
ANR	360108	UnaryOperator	-		339262	0					
ANR	360109	PrimaryExpression	1023		339262	1					
ANR	360110	EqualityExpression	( num % 4 ) != 0		339262	1		!=			
ANR	360111	MultiplicativeExpression	num % 4		339262	0		%			
ANR	360112	Identifier	num		339262	0					
ANR	360113	PrimaryExpression	4		339262	1					
ANR	360114	PrimaryExpression	0		339262	1					
ANR	360115	CompoundStatement		3719:124:80230:80230	339262	1					
ANR	360116	ReturnStatement	return - 1 ;	5012:4:106095:106104	339262	0	True				
ANR	360117	UnaryOperationExpression	- 1		339262	0					
ANR	360118	UnaryOperator	-		339262	0					
ANR	360119	PrimaryExpression	1		339262	1					
ANR	360120	ExpressionStatement	ao -> o = 0x60e80000	5015:3:106115:106133	339262	5	True				
ANR	360121	AssignmentExpression	ao -> o = 0x60e80000		339262	0		=			
ANR	360122	PtrMemberAccess	ao -> o		339262	0					
ANR	360123	Identifier	ao		339262	0					
ANR	360124	Identifier	o		339262	1					
ANR	360125	PrimaryExpression	0x60e80000		339262	1					
ANR	360126	IfStatement	if ( num < 0 )		339262	6					
ANR	360127	Condition	num < 0	5017:7:106143:106149	339262	0	True				
ANR	360128	RelationalExpression	num < 0		339262	0		<			
ANR	360129	Identifier	num		339262	0					
ANR	360130	PrimaryExpression	0		339262	1					
ANR	360131	CompoundStatement		3725:16:80293:80293	339262	1					
ANR	360132	ExpressionStatement	num = - num	5018:4:106158:106168	339262	0	True				
ANR	360133	AssignmentExpression	num = - num		339262	0		=			
ANR	360134	Identifier	num		339262	0					
ANR	360135	UnaryOperationExpression	- num		339262	1					
ANR	360136	UnaryOperator	-		339262	0					
ANR	360137	Identifier	num		339262	1					
ANR	360138	ElseStatement	else		339262	0					
ANR	360139	CompoundStatement		3727:10:80321:80321	339262	0					
ANR	360140	ExpressionStatement	ao -> o |= 1 << 31	5020:4:106186:106202	339262	0	True				
ANR	360141	AssignmentExpression	ao -> o |= 1 << 31		339262	0		|=			
ANR	360142	PtrMemberAccess	ao -> o		339262	0					
ANR	360143	Identifier	ao		339262	0					
ANR	360144	Identifier	o		339262	1					
ANR	360145	ShiftExpression	1 << 31		339262	1		<<			
ANR	360146	PrimaryExpression	1		339262	0					
ANR	360147	PrimaryExpression	31		339262	1					
ANR	360148	ExpressionStatement	ao -> o |= reg1 << 4	5022:3:106212:106230	339262	7	True				
ANR	360149	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	360150	PtrMemberAccess	ao -> o		339262	0					
ANR	360151	Identifier	ao		339262	0					
ANR	360152	Identifier	o		339262	1					
ANR	360153	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	360154	Identifier	reg1		339262	0					
ANR	360155	PrimaryExpression	4		339262	1					
ANR	360156	ExpressionStatement	ao -> o |= reg2	5023:3:106235:106248	339262	8	True				
ANR	360157	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	360158	PtrMemberAccess	ao -> o		339262	0					
ANR	360159	Identifier	ao		339262	0					
ANR	360160	Identifier	o		339262	1					
ANR	360161	Identifier	reg2		339262	1					
ANR	360162	ExpressionStatement	ao -> o |= reg3 << 24	5024:3:106253:106272	339262	9	True				
ANR	360163	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	360164	PtrMemberAccess	ao -> o		339262	0					
ANR	360165	Identifier	ao		339262	0					
ANR	360166	Identifier	o		339262	1					
ANR	360167	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	360168	Identifier	reg3		339262	0					
ANR	360169	PrimaryExpression	24		339262	1					
ANR	360170	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5025:3:106277:106301	339262	10	True				
ANR	360171	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	360172	PtrMemberAccess	ao -> o		339262	0					
ANR	360173	Identifier	ao		339262	0					
ANR	360174	Identifier	o		339262	1					
ANR	360175	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	360176	ShiftExpression	num >> 2		339262	0		>>			
ANR	360177	Identifier	num		339262	0					
ANR	360178	PrimaryExpression	2		339262	1					
ANR	360179	PrimaryExpression	8		339262	1					
ANR	360180	ReturnStatement	return 4 ;	5026:3:106306:106314	339262	11	True				
ANR	360181	PrimaryExpression	4		339262	0					
ANR	360182	BreakStatement	break ;	5028:3:106331:106336	339262	26	True				
ANR	360183	Label	default :	5029:2:106340:106347	339262	27	True				
ANR	360184	Identifier	default		339262	0					
ANR	360185	ReturnStatement	return - 1 ;	5030:3:106352:106361	339262	28	True				
ANR	360186	UnaryOperationExpression	- 1		339262	0					
ANR	360187	UnaryOperator	-		339262	0					
ANR	360188	PrimaryExpression	1		339262	1					
ANR	360189	ElseStatement	else		339262	0					
ANR	360190	IfStatement	"if ( ( m = opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT ) ) )"		339262	0					
ANR	360191	Condition	"m = opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT )"	5033:5:106380:106432	339262	0	True				
ANR	360192	AssignmentExpression	"m = opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT )"		339262	0		=			
ANR	360193	Identifier	m		339262	0					
ANR	360194	CallExpression	"opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT )"		339262	1					
ANR	360195	Callee	opmask		339262	0					
ANR	360196	Identifier	opmask		339262	0					
ANR	360197	ArgumentList	ao -> op		339262	1					
ANR	360198	Argument	ao -> op		339262	0					
ANR	360199	PtrMemberAccess	ao -> op		339262	0					
ANR	360200	Identifier	ao		339262	0					
ANR	360201	Identifier	op		339262	1					
ANR	360202	Argument	"""strex"""		339262	1					
ANR	360203	PrimaryExpression	"""strex"""		339262	0					
ANR	360204	Argument	B_BIT | D_BIT | H_BIT		339262	2					
ANR	360205	InclusiveOrExpression	B_BIT | D_BIT | H_BIT		339262	0		|			
ANR	360206	Identifier	B_BIT		339262	0					
ANR	360207	InclusiveOrExpression	D_BIT | H_BIT		339262	1		|			
ANR	360208	Identifier	D_BIT		339262	0					
ANR	360209	Identifier	H_BIT		339262	1					
ANR	360210	CompoundStatement		3743:2:80618:80659	339262	1					
ANR	360211	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5034:2:106439:106473	339262	0	True				
ANR	360212	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	360213	IdentifierDeclType	ut64		339262	0					
ANR	360214	Identifier	argt		339262	1					
ANR	360215	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	360216	Identifier	argt		339262	0					
ANR	360217	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	360218	Callee	thumb_selector		339262	0					
ANR	360219	Identifier	thumb_selector		339262	0					
ANR	360220	ArgumentList	ao -> a		339262	1					
ANR	360221	Argument	ao -> a		339262	0					
ANR	360222	PtrMemberAccess	ao -> a		339262	0					
ANR	360223	Identifier	ao		339262	0					
ANR	360224	Identifier	a		339262	1					
ANR	360225	IdentifierDeclStatement	ut32 strsel = m & ( B_BIT | H_BIT | D_BIT ) ;	5035:2:106477:106518	339262	1	True				
ANR	360226	IdentifierDecl	strsel = m & ( B_BIT | H_BIT | D_BIT )		339262	0					
ANR	360227	IdentifierDeclType	ut32		339262	0					
ANR	360228	Identifier	strsel		339262	1					
ANR	360229	AssignmentExpression	strsel = m & ( B_BIT | H_BIT | D_BIT )		339262	2		=			
ANR	360230	Identifier	strsel		339262	0					
ANR	360231	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		339262	1		&			
ANR	360232	Identifier	m		339262	0					
ANR	360233	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		339262	1		|			
ANR	360234	Identifier	B_BIT		339262	0					
ANR	360235	InclusiveOrExpression	H_BIT | D_BIT		339262	1		|			
ANR	360236	Identifier	H_BIT		339262	0					
ANR	360237	Identifier	D_BIT		339262	1					
ANR	360238	SwitchStatement	switch ( argt )		339262	2					
ANR	360239	Condition	argt	5036:10:106530:106533	339262	0	True				
ANR	360240	Identifier	argt		339262	0					
ANR	360241	CompoundStatement		3744:16:80677:80677	339262	1					
ANR	360242	Label	case THUMB_REG_REG_BRACKREGBRACK :	5037:2:106540:106572	339262	0	True				
ANR	360243	Identifier	THUMB_REG_REG_BRACKREGBRACK		339262	0					
ANR	360244	CompoundStatement		3748:3:80786:80825	339262	1					
ANR	360245	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5038:3:106579:106607	339262	0	True				
ANR	360246	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	360247	IdentifierDeclType	ut8		339262	0					
ANR	360248	Identifier	reg1		339262	1					
ANR	360249	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	360250	Identifier	reg1		339262	0					
ANR	360251	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	360252	Callee	getreg		339262	0					
ANR	360253	Identifier	getreg		339262	0					
ANR	360254	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	360255	Argument	ao -> a [ 0 ]		339262	0					
ANR	360256	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	360257	PtrMemberAccess	ao -> a		339262	0					
ANR	360258	Identifier	ao		339262	0					
ANR	360259	Identifier	a		339262	1					
ANR	360260	PrimaryExpression	0		339262	1					
ANR	360261	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5039:3:106612:106640	339262	1	True				
ANR	360262	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	360263	IdentifierDeclType	ut8		339262	0					
ANR	360264	Identifier	reg2		339262	1					
ANR	360265	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	360266	Identifier	reg2		339262	0					
ANR	360267	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	360268	Callee	getreg		339262	0					
ANR	360269	Identifier	getreg		339262	0					
ANR	360270	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	360271	Argument	ao -> a [ 1 ]		339262	0					
ANR	360272	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	360273	PtrMemberAccess	ao -> a		339262	0					
ANR	360274	Identifier	ao		339262	0					
ANR	360275	Identifier	a		339262	1					
ANR	360276	PrimaryExpression	1		339262	1					
ANR	360277	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	5040:3:106645:106684	339262	2	True				
ANR	360278	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	0					
ANR	360279	IdentifierDeclType	ut8		339262	0					
ANR	360280	Identifier	reg3		339262	1					
ANR	360281	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		339262	2		=			
ANR	360282	Identifier	reg3		339262	0					
ANR	360283	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		339262	1					
ANR	360284	Callee	getregmemstartend		339262	0					
ANR	360285	Identifier	getregmemstartend		339262	0					
ANR	360286	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360287	Argument	ao -> a [ 2 ]		339262	0					
ANR	360288	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360289	PtrMemberAccess	ao -> a		339262	0					
ANR	360290	Identifier	ao		339262	0					
ANR	360291	Identifier	a		339262	1					
ANR	360292	PrimaryExpression	2		339262	1					
ANR	360293	IfStatement	if ( ( strsel == D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) )		339262	3					
ANR	360294	Condition	( strsel == D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )	5042:7:106697:106758	339262	0	True				
ANR	360295	OrExpression	( strsel == D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		339262	0		||			
ANR	360296	EqualityExpression	strsel == D_BIT		339262	0		==			
ANR	360297	Identifier	strsel		339262	0					
ANR	360298	Identifier	D_BIT		339262	1					
ANR	360299	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		339262	1		||			
ANR	360300	RelationalExpression	reg1 > 15		339262	0		>			
ANR	360301	Identifier	reg1		339262	0					
ANR	360302	PrimaryExpression	15		339262	1					
ANR	360303	OrExpression	( reg2 > 15 ) || ( reg3 > 15 )		339262	1		||			
ANR	360304	RelationalExpression	reg2 > 15		339262	0		>			
ANR	360305	Identifier	reg2		339262	0					
ANR	360306	PrimaryExpression	15		339262	1					
ANR	360307	RelationalExpression	reg3 > 15		339262	1		>			
ANR	360308	Identifier	reg3		339262	0					
ANR	360309	PrimaryExpression	15		339262	1					
ANR	360310	CompoundStatement		3750:71:80902:80902	339262	1					
ANR	360311	ReturnStatement	return - 1 ;	5043:4:106767:106776	339262	0	True				
ANR	360312	UnaryOperationExpression	- 1		339262	0					
ANR	360313	UnaryOperator	-		339262	0					
ANR	360314	PrimaryExpression	1		339262	1					
ANR	360315	IfStatement	if ( strsel == B_BIT )		339262	4					
ANR	360316	Condition	strsel == B_BIT	5045:7:106790:106804	339262	0	True				
ANR	360317	EqualityExpression	strsel == B_BIT		339262	0		==			
ANR	360318	Identifier	strsel		339262	0					
ANR	360319	Identifier	B_BIT		339262	1					
ANR	360320	CompoundStatement		3753:24:80948:80948	339262	1					
ANR	360321	ExpressionStatement	ao -> o = 0xc0e8400f	5046:4:106813:106831	339262	0	True				
ANR	360322	AssignmentExpression	ao -> o = 0xc0e8400f		339262	0		=			
ANR	360323	PtrMemberAccess	ao -> o		339262	0					
ANR	360324	Identifier	ao		339262	0					
ANR	360325	Identifier	o		339262	1					
ANR	360326	PrimaryExpression	0xc0e8400f		339262	1					
ANR	360327	ExpressionStatement	ao -> o |= reg1 << 8	5047:4:106837:106855	339262	1	True				
ANR	360328	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	360329	PtrMemberAccess	ao -> o		339262	0					
ANR	360330	Identifier	ao		339262	0					
ANR	360331	Identifier	o		339262	1					
ANR	360332	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	360333	Identifier	reg1		339262	0					
ANR	360334	PrimaryExpression	8		339262	1					
ANR	360335	ExpressionStatement	ao -> o |= reg2 << 4	5048:4:106861:106879	339262	2	True				
ANR	360336	AssignmentExpression	ao -> o |= reg2 << 4		339262	0		|=			
ANR	360337	PtrMemberAccess	ao -> o		339262	0					
ANR	360338	Identifier	ao		339262	0					
ANR	360339	Identifier	o		339262	1					
ANR	360340	ShiftExpression	reg2 << 4		339262	1		<<			
ANR	360341	Identifier	reg2		339262	0					
ANR	360342	PrimaryExpression	4		339262	1					
ANR	360343	ExpressionStatement	ao -> o |= reg3 << 24	5049:4:106885:106904	339262	3	True				
ANR	360344	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	360345	PtrMemberAccess	ao -> o		339262	0					
ANR	360346	Identifier	ao		339262	0					
ANR	360347	Identifier	o		339262	1					
ANR	360348	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	360349	Identifier	reg3		339262	0					
ANR	360350	PrimaryExpression	24		339262	1					
ANR	360351	ReturnStatement	return 4 ;	5050:4:106910:106918	339262	4	True				
ANR	360352	PrimaryExpression	4		339262	0					
ANR	360353	ElseStatement	else		339262	0					
ANR	360354	IfStatement	if ( strsel == H_BIT )		339262	0					
ANR	360355	Condition	strsel == H_BIT	5052:7:106937:106951	339262	0	True				
ANR	360356	EqualityExpression	strsel == H_BIT		339262	0		==			
ANR	360357	Identifier	strsel		339262	0					
ANR	360358	Identifier	H_BIT		339262	1					
ANR	360359	CompoundStatement		3760:24:81095:81095	339262	1					
ANR	360360	ExpressionStatement	ao -> o = 0xc0e8500f	5053:4:106960:106978	339262	0	True				
ANR	360361	AssignmentExpression	ao -> o = 0xc0e8500f		339262	0		=			
ANR	360362	PtrMemberAccess	ao -> o		339262	0					
ANR	360363	Identifier	ao		339262	0					
ANR	360364	Identifier	o		339262	1					
ANR	360365	PrimaryExpression	0xc0e8500f		339262	1					
ANR	360366	ExpressionStatement	ao -> o |= reg1 << 8	5054:4:106984:107002	339262	1	True				
ANR	360367	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	360368	PtrMemberAccess	ao -> o		339262	0					
ANR	360369	Identifier	ao		339262	0					
ANR	360370	Identifier	o		339262	1					
ANR	360371	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	360372	Identifier	reg1		339262	0					
ANR	360373	PrimaryExpression	8		339262	1					
ANR	360374	ExpressionStatement	ao -> o |= reg2 << 4	5055:4:107008:107026	339262	2	True				
ANR	360375	AssignmentExpression	ao -> o |= reg2 << 4		339262	0		|=			
ANR	360376	PtrMemberAccess	ao -> o		339262	0					
ANR	360377	Identifier	ao		339262	0					
ANR	360378	Identifier	o		339262	1					
ANR	360379	ShiftExpression	reg2 << 4		339262	1		<<			
ANR	360380	Identifier	reg2		339262	0					
ANR	360381	PrimaryExpression	4		339262	1					
ANR	360382	ExpressionStatement	ao -> o |= reg3 << 24	5056:4:107032:107051	339262	3	True				
ANR	360383	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	360384	PtrMemberAccess	ao -> o		339262	0					
ANR	360385	Identifier	ao		339262	0					
ANR	360386	Identifier	o		339262	1					
ANR	360387	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	360388	Identifier	reg3		339262	0					
ANR	360389	PrimaryExpression	24		339262	1					
ANR	360390	ReturnStatement	return 4 ;	5057:4:107057:107065	339262	4	True				
ANR	360391	PrimaryExpression	4		339262	0					
ANR	360392	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	5060:3:107076:107114	339262	5	True				
ANR	360393	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	360394	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		339262	0					
ANR	360395	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360396	PtrMemberAccess	ao -> a		339262	0					
ANR	360397	Identifier	ao		339262	0					
ANR	360398	Identifier	a		339262	1					
ANR	360399	PrimaryExpression	2		339262	1					
ANR	360400	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		339262	1		-			
ANR	360401	CallExpression	strlen ( ao -> a [ 2 ] )		339262	0					
ANR	360402	Callee	strlen		339262	0					
ANR	360403	Identifier	strlen		339262	0					
ANR	360404	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360405	Argument	ao -> a [ 2 ]		339262	0					
ANR	360406	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360407	PtrMemberAccess	ao -> a		339262	0					
ANR	360408	Identifier	ao		339262	0					
ANR	360409	Identifier	a		339262	1					
ANR	360410	PrimaryExpression	2		339262	1					
ANR	360411	PrimaryExpression	1		339262	1					
ANR	360412	PrimaryExpression	'\\0'		339262	1					
ANR	360413	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	5061:3:107119:107134	339262	6	True				
ANR	360414	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		339262	0		=			
ANR	360415	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	360416	PtrMemberAccess	ao -> a		339262	0					
ANR	360417	Identifier	ao		339262	0					
ANR	360418	Identifier	a		339262	1					
ANR	360419	PrimaryExpression	3		339262	1					
ANR	360420	PrimaryExpression	"""0]"""		339262	1					
ANR	360421	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACK :	5064:2:107180:107218	339262	2	True				
ANR	360422	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACK		339262	0					
ANR	360423	CompoundStatement		3776:3:81473:81507	339262	3					
ANR	360424	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5065:3:107225:107253	339262	0	True				
ANR	360425	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	360426	IdentifierDeclType	ut8		339262	0					
ANR	360427	Identifier	reg1		339262	1					
ANR	360428	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	360429	Identifier	reg1		339262	0					
ANR	360430	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	360431	Callee	getreg		339262	0					
ANR	360432	Identifier	getreg		339262	0					
ANR	360433	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	360434	Argument	ao -> a [ 0 ]		339262	0					
ANR	360435	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	360436	PtrMemberAccess	ao -> a		339262	0					
ANR	360437	Identifier	ao		339262	0					
ANR	360438	Identifier	a		339262	1					
ANR	360439	PrimaryExpression	0		339262	1					
ANR	360440	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5066:3:107258:107286	339262	1	True				
ANR	360441	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	360442	IdentifierDeclType	ut8		339262	0					
ANR	360443	Identifier	reg2		339262	1					
ANR	360444	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	360445	Identifier	reg2		339262	0					
ANR	360446	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	360447	Callee	getreg		339262	0					
ANR	360448	Identifier	getreg		339262	0					
ANR	360449	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	360450	Argument	ao -> a [ 1 ]		339262	0					
ANR	360451	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	360452	PtrMemberAccess	ao -> a		339262	0					
ANR	360453	Identifier	ao		339262	0					
ANR	360454	Identifier	a		339262	1					
ANR	360455	PrimaryExpression	1		339262	1					
ANR	360456	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	5067:3:107291:107327	339262	2	True				
ANR	360457	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	0					
ANR	360458	IdentifierDeclType	ut8		339262	0					
ANR	360459	Identifier	reg3		339262	1					
ANR	360460	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		339262	2		=			
ANR	360461	Identifier	reg3		339262	0					
ANR	360462	CallExpression	getregmemstart ( ao -> a [ 2 ] )		339262	1					
ANR	360463	Callee	getregmemstart		339262	0					
ANR	360464	Identifier	getregmemstart		339262	0					
ANR	360465	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360466	Argument	ao -> a [ 2 ]		339262	0					
ANR	360467	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360468	PtrMemberAccess	ao -> a		339262	0					
ANR	360469	Identifier	ao		339262	0					
ANR	360470	Identifier	a		339262	1					
ANR	360471	PrimaryExpression	2		339262	1					
ANR	360472	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	5068:3:107332:107366	339262	3	True				
ANR	360473	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		339262	0					
ANR	360474	IdentifierDeclType	st32		339262	0					
ANR	360475	Identifier	num		339262	1					
ANR	360476	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		339262	2		=			
ANR	360477	Identifier	num		339262	0					
ANR	360478	CallExpression	getnummemend ( ao -> a [ 3 ] )		339262	1					
ANR	360479	Callee	getnummemend		339262	0					
ANR	360480	Identifier	getnummemend		339262	0					
ANR	360481	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	360482	Argument	ao -> a [ 3 ]		339262	0					
ANR	360483	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	360484	PtrMemberAccess	ao -> a		339262	0					
ANR	360485	Identifier	ao		339262	0					
ANR	360486	Identifier	a		339262	1					
ANR	360487	PrimaryExpression	3		339262	1					
ANR	360488	IfStatement	if ( ( strsel != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 ) )		339262	4					
ANR	360489	Condition	( strsel != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )	5070:7:107376:107481	339262	0	True				
ANR	360490	OrExpression	( strsel != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		339262	0		||			
ANR	360491	EqualityExpression	strsel != 0		339262	0		!=			
ANR	360492	Identifier	strsel		339262	0					
ANR	360493	PrimaryExpression	0		339262	1					
ANR	360494	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360495	RelationalExpression	reg1 > 15		339262	0		>			
ANR	360496	Identifier	reg1		339262	0					
ANR	360497	PrimaryExpression	15		339262	1					
ANR	360498	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360499	RelationalExpression	reg2 > 15		339262	0		>			
ANR	360500	Identifier	reg2		339262	0					
ANR	360501	PrimaryExpression	15		339262	1					
ANR	360502	OrExpression	( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360503	RelationalExpression	reg3 > 15		339262	0		>			
ANR	360504	Identifier	reg3		339262	0					
ANR	360505	PrimaryExpression	15		339262	1					
ANR	360506	OrExpression	( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360507	RelationalExpression	num < 0		339262	0		<			
ANR	360508	Identifier	num		339262	0					
ANR	360509	PrimaryExpression	0		339262	1					
ANR	360510	OrExpression	( num > 1023 ) || ( ( num % 4 ) != 0 )		339262	1		||			
ANR	360511	RelationalExpression	num > 1023		339262	0		>			
ANR	360512	Identifier	num		339262	0					
ANR	360513	PrimaryExpression	1023		339262	1					
ANR	360514	EqualityExpression	( num % 4 ) != 0		339262	1		!=			
ANR	360515	MultiplicativeExpression	num % 4		339262	0		%			
ANR	360516	Identifier	num		339262	0					
ANR	360517	PrimaryExpression	4		339262	1					
ANR	360518	PrimaryExpression	0		339262	1					
ANR	360519	CompoundStatement		3778:115:81625:81625	339262	1					
ANR	360520	ReturnStatement	return - 1 ;	5071:4:107490:107499	339262	0	True				
ANR	360521	UnaryOperationExpression	- 1		339262	0					
ANR	360522	UnaryOperator	-		339262	0					
ANR	360523	PrimaryExpression	1		339262	1					
ANR	360524	ExpressionStatement	ao -> o = 0x40e80000	5074:3:107510:107528	339262	5	True				
ANR	360525	AssignmentExpression	ao -> o = 0x40e80000		339262	0		=			
ANR	360526	PtrMemberAccess	ao -> o		339262	0					
ANR	360527	Identifier	ao		339262	0					
ANR	360528	Identifier	o		339262	1					
ANR	360529	PrimaryExpression	0x40e80000		339262	1					
ANR	360530	ExpressionStatement	ao -> o |= reg1	5075:3:107533:107546	339262	6	True				
ANR	360531	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	360532	PtrMemberAccess	ao -> o		339262	0					
ANR	360533	Identifier	ao		339262	0					
ANR	360534	Identifier	o		339262	1					
ANR	360535	Identifier	reg1		339262	1					
ANR	360536	ExpressionStatement	ao -> o |= reg2 << 4	5076:3:107551:107569	339262	7	True				
ANR	360537	AssignmentExpression	ao -> o |= reg2 << 4		339262	0		|=			
ANR	360538	PtrMemberAccess	ao -> o		339262	0					
ANR	360539	Identifier	ao		339262	0					
ANR	360540	Identifier	o		339262	1					
ANR	360541	ShiftExpression	reg2 << 4		339262	1		<<			
ANR	360542	Identifier	reg2		339262	0					
ANR	360543	PrimaryExpression	4		339262	1					
ANR	360544	ExpressionStatement	ao -> o |= reg3 << 24	5077:3:107574:107593	339262	8	True				
ANR	360545	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	360546	PtrMemberAccess	ao -> o		339262	0					
ANR	360547	Identifier	ao		339262	0					
ANR	360548	Identifier	o		339262	1					
ANR	360549	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	360550	Identifier	reg3		339262	0					
ANR	360551	PrimaryExpression	24		339262	1					
ANR	360552	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5078:3:107598:107622	339262	9	True				
ANR	360553	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	360554	PtrMemberAccess	ao -> o		339262	0					
ANR	360555	Identifier	ao		339262	0					
ANR	360556	Identifier	o		339262	1					
ANR	360557	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	360558	ShiftExpression	num >> 2		339262	0		>>			
ANR	360559	Identifier	num		339262	0					
ANR	360560	PrimaryExpression	2		339262	1					
ANR	360561	PrimaryExpression	8		339262	1					
ANR	360562	ReturnStatement	return 4 ;	5079:3:107627:107635	339262	10	True				
ANR	360563	PrimaryExpression	4		339262	0					
ANR	360564	BreakStatement	break ;	5081:3:107652:107657	339262	4	True				
ANR	360565	Label	case THUMB_REG_REG_REG_BRACKREGBRACK :	5082:2:107661:107697	339262	5	True				
ANR	360566	Identifier	THUMB_REG_REG_REG_BRACKREGBRACK		339262	0					
ANR	360567	CompoundStatement		3794:3:81944:81983	339262	6					
ANR	360568	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5083:3:107704:107732	339262	0	True				
ANR	360569	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	360570	IdentifierDeclType	ut8		339262	0					
ANR	360571	Identifier	reg1		339262	1					
ANR	360572	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	360573	Identifier	reg1		339262	0					
ANR	360574	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	360575	Callee	getreg		339262	0					
ANR	360576	Identifier	getreg		339262	0					
ANR	360577	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	360578	Argument	ao -> a [ 0 ]		339262	0					
ANR	360579	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	360580	PtrMemberAccess	ao -> a		339262	0					
ANR	360581	Identifier	ao		339262	0					
ANR	360582	Identifier	a		339262	1					
ANR	360583	PrimaryExpression	0		339262	1					
ANR	360584	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5084:3:107737:107765	339262	1	True				
ANR	360585	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	360586	IdentifierDeclType	ut8		339262	0					
ANR	360587	Identifier	reg2		339262	1					
ANR	360588	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	360589	Identifier	reg2		339262	0					
ANR	360590	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	360591	Callee	getreg		339262	0					
ANR	360592	Identifier	getreg		339262	0					
ANR	360593	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	360594	Argument	ao -> a [ 1 ]		339262	0					
ANR	360595	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	360596	PtrMemberAccess	ao -> a		339262	0					
ANR	360597	Identifier	ao		339262	0					
ANR	360598	Identifier	a		339262	1					
ANR	360599	PrimaryExpression	1		339262	1					
ANR	360600	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5085:3:107770:107798	339262	2	True				
ANR	360601	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	360602	IdentifierDeclType	ut8		339262	0					
ANR	360603	Identifier	reg3		339262	1					
ANR	360604	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	360605	Identifier	reg3		339262	0					
ANR	360606	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	360607	Callee	getreg		339262	0					
ANR	360608	Identifier	getreg		339262	0					
ANR	360609	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360610	Argument	ao -> a [ 2 ]		339262	0					
ANR	360611	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360612	PtrMemberAccess	ao -> a		339262	0					
ANR	360613	Identifier	ao		339262	0					
ANR	360614	Identifier	a		339262	1					
ANR	360615	PrimaryExpression	2		339262	1					
ANR	360616	IdentifierDeclStatement	ut8 reg4 = getregmemstartend ( ao -> a [ 3 ] ) ;	5086:3:107803:107842	339262	3	True				
ANR	360617	IdentifierDecl	reg4 = getregmemstartend ( ao -> a [ 3 ] )		339262	0					
ANR	360618	IdentifierDeclType	ut8		339262	0					
ANR	360619	Identifier	reg4		339262	1					
ANR	360620	AssignmentExpression	reg4 = getregmemstartend ( ao -> a [ 3 ] )		339262	2		=			
ANR	360621	Identifier	reg4		339262	0					
ANR	360622	CallExpression	getregmemstartend ( ao -> a [ 3 ] )		339262	1					
ANR	360623	Callee	getregmemstartend		339262	0					
ANR	360624	Identifier	getregmemstartend		339262	0					
ANR	360625	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	360626	Argument	ao -> a [ 3 ]		339262	0					
ANR	360627	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	360628	PtrMemberAccess	ao -> a		339262	0					
ANR	360629	Identifier	ao		339262	0					
ANR	360630	Identifier	a		339262	1					
ANR	360631	PrimaryExpression	3		339262	1					
ANR	360632	IfStatement	if ( ( strsel != D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		339262	4					
ANR	360633	Condition	( strsel != D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5088:7:107852:107928	339262	0	True				
ANR	360634	OrExpression	( strsel != D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	0		||			
ANR	360635	EqualityExpression	strsel != D_BIT		339262	0		!=			
ANR	360636	Identifier	strsel		339262	0					
ANR	360637	Identifier	D_BIT		339262	1					
ANR	360638	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	360639	RelationalExpression	reg1 > 15		339262	0		>			
ANR	360640	Identifier	reg1		339262	0					
ANR	360641	PrimaryExpression	15		339262	1					
ANR	360642	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	360643	RelationalExpression	reg2 > 15		339262	0		>			
ANR	360644	Identifier	reg2		339262	0					
ANR	360645	PrimaryExpression	15		339262	1					
ANR	360646	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	360647	RelationalExpression	reg3 > 15		339262	0		>			
ANR	360648	Identifier	reg3		339262	0					
ANR	360649	PrimaryExpression	15		339262	1					
ANR	360650	RelationalExpression	reg4 > 15		339262	1		>			
ANR	360651	Identifier	reg4		339262	0					
ANR	360652	PrimaryExpression	15		339262	1					
ANR	360653	CompoundStatement		3796:86:82072:82072	339262	1					
ANR	360654	ReturnStatement	return - 1 ;	5089:4:107937:107946	339262	0	True				
ANR	360655	UnaryOperationExpression	- 1		339262	0					
ANR	360656	UnaryOperator	-		339262	0					
ANR	360657	PrimaryExpression	1		339262	1					
ANR	360658	ExpressionStatement	ao -> o = 0xc0e87000	5092:3:107957:107975	339262	5	True				
ANR	360659	AssignmentExpression	ao -> o = 0xc0e87000		339262	0		=			
ANR	360660	PtrMemberAccess	ao -> o		339262	0					
ANR	360661	Identifier	ao		339262	0					
ANR	360662	Identifier	o		339262	1					
ANR	360663	PrimaryExpression	0xc0e87000		339262	1					
ANR	360664	ExpressionStatement	ao -> o |= reg1 << 8	5093:3:107980:107998	339262	6	True				
ANR	360665	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	360666	PtrMemberAccess	ao -> o		339262	0					
ANR	360667	Identifier	ao		339262	0					
ANR	360668	Identifier	o		339262	1					
ANR	360669	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	360670	Identifier	reg1		339262	0					
ANR	360671	PrimaryExpression	8		339262	1					
ANR	360672	ExpressionStatement	ao -> o |= reg2 << 4	5094:3:108003:108021	339262	7	True				
ANR	360673	AssignmentExpression	ao -> o |= reg2 << 4		339262	0		|=			
ANR	360674	PtrMemberAccess	ao -> o		339262	0					
ANR	360675	Identifier	ao		339262	0					
ANR	360676	Identifier	o		339262	1					
ANR	360677	ShiftExpression	reg2 << 4		339262	1		<<			
ANR	360678	Identifier	reg2		339262	0					
ANR	360679	PrimaryExpression	4		339262	1					
ANR	360680	ExpressionStatement	ao -> o |= reg3	5095:3:108026:108039	339262	8	True				
ANR	360681	AssignmentExpression	ao -> o |= reg3		339262	0		|=			
ANR	360682	PtrMemberAccess	ao -> o		339262	0					
ANR	360683	Identifier	ao		339262	0					
ANR	360684	Identifier	o		339262	1					
ANR	360685	Identifier	reg3		339262	1					
ANR	360686	ExpressionStatement	ao -> o |= reg4 << 24	5096:3:108044:108063	339262	9	True				
ANR	360687	AssignmentExpression	ao -> o |= reg4 << 24		339262	0		|=			
ANR	360688	PtrMemberAccess	ao -> o		339262	0					
ANR	360689	Identifier	ao		339262	0					
ANR	360690	Identifier	o		339262	1					
ANR	360691	ShiftExpression	reg4 << 24		339262	1		<<			
ANR	360692	Identifier	reg4		339262	0					
ANR	360693	PrimaryExpression	24		339262	1					
ANR	360694	ReturnStatement	return 4 ;	5097:3:108068:108076	339262	10	True				
ANR	360695	PrimaryExpression	4		339262	0					
ANR	360696	BreakStatement	break ;	5099:3:108093:108098	339262	7	True				
ANR	360697	ElseStatement	else		339262	0					
ANR	360698	IfStatement	"if ( ( m = opmask ( ao -> op , ""sub"" , S_BIT | W_BIT ) ) )"		339262	0					
ANR	360699	Condition	"m = opmask ( ao -> op , ""sub"" , S_BIT | W_BIT )"	5102:5:108118:108160	339262	0	True				
ANR	360700	AssignmentExpression	"m = opmask ( ao -> op , ""sub"" , S_BIT | W_BIT )"		339262	0		=			
ANR	360701	Identifier	m		339262	0					
ANR	360702	CallExpression	"opmask ( ao -> op , ""sub"" , S_BIT | W_BIT )"		339262	1					
ANR	360703	Callee	opmask		339262	0					
ANR	360704	Identifier	opmask		339262	0					
ANR	360705	ArgumentList	ao -> op		339262	1					
ANR	360706	Argument	ao -> op		339262	0					
ANR	360707	PtrMemberAccess	ao -> op		339262	0					
ANR	360708	Identifier	ao		339262	0					
ANR	360709	Identifier	op		339262	1					
ANR	360710	Argument	"""sub"""		339262	1					
ANR	360711	PrimaryExpression	"""sub"""		339262	0					
ANR	360712	Argument	S_BIT | W_BIT		339262	2					
ANR	360713	InclusiveOrExpression	S_BIT | W_BIT		339262	0		|			
ANR	360714	Identifier	S_BIT		339262	0					
ANR	360715	Identifier	W_BIT		339262	1					
ANR	360716	CompoundStatement		3811:2:82308:82342	339262	1					
ANR	360717	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5103:2:108167:108201	339262	0	True				
ANR	360718	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	360719	IdentifierDeclType	ut64		339262	0					
ANR	360720	Identifier	argt		339262	1					
ANR	360721	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	360722	Identifier	argt		339262	0					
ANR	360723	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	360724	Callee	thumb_selector		339262	0					
ANR	360725	Identifier	thumb_selector		339262	0					
ANR	360726	ArgumentList	ao -> a		339262	1					
ANR	360727	Argument	ao -> a		339262	0					
ANR	360728	PtrMemberAccess	ao -> a		339262	0					
ANR	360729	Identifier	ao		339262	0					
ANR	360730	Identifier	a		339262	1					
ANR	360731	SwitchStatement	switch ( argt )		339262	1					
ANR	360732	Condition	argt	5104:10:108213:108216	339262	0	True				
ANR	360733	Identifier	argt		339262	0					
ANR	360734	CompoundStatement		3812:16:82360:82360	339262	1					
ANR	360735	Label	case THUMB_REG_CONST :	5105:2:108223:108243	339262	0	True				
ANR	360736	Identifier	THUMB_REG_CONST		339262	0					
ANR	360737	CompoundStatement		3813:24:82386:82386	339262	1					
ANR	360738	ExpressionStatement	std_opt_2 ( ao )	5106:3:108250:108264	339262	0	True				
ANR	360739	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	360740	Callee	std_opt_2		339262	0					
ANR	360741	Identifier	std_opt_2		339262	0					
ANR	360742	ArgumentList	ao		339262	1					
ANR	360743	Argument	ao		339262	0					
ANR	360744	Identifier	ao		339262	0					
ANR	360745	Label	case THUMB_REG_REG_CONST :	5109:2:108310:108334	339262	2	True				
ANR	360746	Identifier	THUMB_REG_REG_CONST		339262	0					
ANR	360747	CompoundStatement		3877:3:83760:83796	339262	3					
ANR	360748	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5110:3:108341:108369	339262	0	True				
ANR	360749	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	360750	IdentifierDeclType	ut8		339262	0					
ANR	360751	Identifier	reg1		339262	1					
ANR	360752	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	360753	Identifier	reg1		339262	0					
ANR	360754	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	360755	Callee	getreg		339262	0					
ANR	360756	Identifier	getreg		339262	0					
ANR	360757	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	360758	Argument	ao -> a [ 0 ]		339262	0					
ANR	360759	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	360760	PtrMemberAccess	ao -> a		339262	0					
ANR	360761	Identifier	ao		339262	0					
ANR	360762	Identifier	a		339262	1					
ANR	360763	PrimaryExpression	0		339262	1					
ANR	360764	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5111:3:108374:108402	339262	1	True				
ANR	360765	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	360766	IdentifierDeclType	ut8		339262	0					
ANR	360767	Identifier	reg2		339262	1					
ANR	360768	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	360769	Identifier	reg2		339262	0					
ANR	360770	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	360771	Callee	getreg		339262	0					
ANR	360772	Identifier	getreg		339262	0					
ANR	360773	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	360774	Argument	ao -> a [ 1 ]		339262	0					
ANR	360775	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	360776	PtrMemberAccess	ao -> a		339262	0					
ANR	360777	Identifier	ao		339262	0					
ANR	360778	Identifier	a		339262	1					
ANR	360779	PrimaryExpression	1		339262	1					
ANR	360780	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	5112:3:108407:108435	339262	2	True				
ANR	360781	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	360782	IdentifierDeclType	ut32		339262	0					
ANR	360783	Identifier	num		339262	1					
ANR	360784	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	360785	Identifier	num		339262	0					
ANR	360786	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	360787	Callee	getnum		339262	0					
ANR	360788	Identifier	getnum		339262	0					
ANR	360789	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360790	Argument	ao -> a [ 2 ]		339262	0					
ANR	360791	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360792	PtrMemberAccess	ao -> a		339262	0					
ANR	360793	Identifier	ao		339262	0					
ANR	360794	Identifier	a		339262	1					
ANR	360795	PrimaryExpression	2		339262	1					
ANR	360796	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		339262	3					
ANR	360797	Condition	( reg1 > 15 ) || ( reg2 > 15 )	5114:7:108445:108470	339262	0	True				
ANR	360798	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	360799	RelationalExpression	reg1 > 15		339262	0		>			
ANR	360800	Identifier	reg1		339262	0					
ANR	360801	PrimaryExpression	15		339262	1					
ANR	360802	RelationalExpression	reg2 > 15		339262	1		>			
ANR	360803	Identifier	reg2		339262	0					
ANR	360804	PrimaryExpression	15		339262	1					
ANR	360805	CompoundStatement		3822:35:82614:82614	339262	1					
ANR	360806	ReturnStatement	return - 1 ;	5115:4:108479:108488	339262	0	True				
ANR	360807	UnaryOperationExpression	- 1		339262	0					
ANR	360808	UnaryOperator	-		339262	0					
ANR	360809	PrimaryExpression	1		339262	1					
ANR	360810	IfStatement	if ( ( reg1 == 15 ) && ( reg2 == 14 ) && ( num < 256 ) )		339262	4					
ANR	360811	Condition	( reg1 == 15 ) && ( reg2 == 14 ) && ( num < 256 )	5118:7:108503:108545	339262	0	True				
ANR	360812	AndExpression	( reg1 == 15 ) && ( reg2 == 14 ) && ( num < 256 )		339262	0		&&			
ANR	360813	EqualityExpression	reg1 == 15		339262	0		==			
ANR	360814	Identifier	reg1		339262	0					
ANR	360815	PrimaryExpression	15		339262	1					
ANR	360816	AndExpression	( reg2 == 14 ) && ( num < 256 )		339262	1		&&			
ANR	360817	EqualityExpression	reg2 == 14		339262	0		==			
ANR	360818	Identifier	reg2		339262	0					
ANR	360819	PrimaryExpression	14		339262	1					
ANR	360820	RelationalExpression	num < 256		339262	1		<			
ANR	360821	Identifier	num		339262	0					
ANR	360822	PrimaryExpression	256		339262	1					
ANR	360823	CompoundStatement		3826:52:82689:82689	339262	1					
ANR	360824	ExpressionStatement	ao -> o = 0xdef3008f	5119:4:108554:108572	339262	0	True				
ANR	360825	AssignmentExpression	ao -> o = 0xdef3008f		339262	0		=			
ANR	360826	PtrMemberAccess	ao -> o		339262	0					
ANR	360827	Identifier	ao		339262	0					
ANR	360828	Identifier	o		339262	1					
ANR	360829	PrimaryExpression	0xdef3008f		339262	1					
ANR	360830	ExpressionStatement	ao -> o |= num << 8	5120:4:108578:108595	339262	1	True				
ANR	360831	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	360832	PtrMemberAccess	ao -> o		339262	0					
ANR	360833	Identifier	ao		339262	0					
ANR	360834	Identifier	o		339262	1					
ANR	360835	ShiftExpression	num << 8		339262	1		<<			
ANR	360836	Identifier	num		339262	0					
ANR	360837	PrimaryExpression	8		339262	1					
ANR	360838	ReturnStatement	return 4 ;	5121:4:108601:108609	339262	2	True				
ANR	360839	PrimaryExpression	4		339262	0					
ANR	360840	IfStatement	if ( reg2 == 13 )		339262	5					
ANR	360841	Condition	reg2 == 13	5123:7:108623:108632	339262	0	True				
ANR	360842	EqualityExpression	reg2 == 13		339262	0		==			
ANR	360843	Identifier	reg2		339262	0					
ANR	360844	PrimaryExpression	13		339262	1					
ANR	360845	CompoundStatement		3838:4:82970:83006	339262	1					
ANR	360846	IfStatement	if ( ( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 ) )		339262	0					
ANR	360847	Condition	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )	5124:8:108645:108730	339262	0	True				
ANR	360848	AndExpression	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )		339262	0		&&			
ANR	360849	EqualityExpression	reg1 == 13		339262	0		==			
ANR	360850	Identifier	reg1		339262	0					
ANR	360851	PrimaryExpression	13		339262	1					
ANR	360852	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	360853	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	360854	UnaryOperator	!		339262	0					
ANR	360855	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	360856	Identifier	m		339262	0					
ANR	360857	Identifier	DOTW_BIT		339262	1					
ANR	360858	AndExpression	( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	360859	UnaryOperationExpression	! ( m & W_BIT )		339262	0					
ANR	360860	UnaryOperator	!		339262	0					
ANR	360861	BitAndExpression	m & W_BIT		339262	1		&			
ANR	360862	Identifier	m		339262	0					
ANR	360863	Identifier	W_BIT		339262	1					
ANR	360864	AndExpression	( num <= 4096 ) && ( num % 4 == 0 )		339262	1		&&			
ANR	360865	RelationalExpression	num <= 4096		339262	0		<=			
ANR	360866	Identifier	num		339262	0					
ANR	360867	PrimaryExpression	4096		339262	1					
ANR	360868	EqualityExpression	num % 4 == 0		339262	1		==			
ANR	360869	MultiplicativeExpression	num % 4		339262	0		%			
ANR	360870	Identifier	num		339262	0					
ANR	360871	PrimaryExpression	4		339262	1					
ANR	360872	PrimaryExpression	0		339262	1					
ANR	360873	CompoundStatement		3832:96:82874:82874	339262	1					
ANR	360874	ExpressionStatement	ao -> o = 0x80b0	5125:5:108740:108754	339262	0	True				
ANR	360875	AssignmentExpression	ao -> o = 0x80b0		339262	0		=			
ANR	360876	PtrMemberAccess	ao -> o		339262	0					
ANR	360877	Identifier	ao		339262	0					
ANR	360878	Identifier	o		339262	1					
ANR	360879	PrimaryExpression	0x80b0		339262	1					
ANR	360880	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5126:5:108761:108785	339262	1	True				
ANR	360881	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		339262	0		|=			
ANR	360882	PtrMemberAccess	ao -> o		339262	0					
ANR	360883	Identifier	ao		339262	0					
ANR	360884	Identifier	o		339262	1					
ANR	360885	ShiftExpression	( num >> 2 ) << 8		339262	1		<<			
ANR	360886	ShiftExpression	num >> 2		339262	0		>>			
ANR	360887	Identifier	num		339262	0					
ANR	360888	PrimaryExpression	2		339262	1					
ANR	360889	PrimaryExpression	8		339262	1					
ANR	360890	ReturnStatement	return 2 ;	5127:5:108792:108800	339262	2	True				
ANR	360891	PrimaryExpression	2		339262	0					
ANR	360892	ExpressionStatement	err = false	5129:4:108812:108823	339262	1	True				
ANR	360893	AssignmentExpression	err = false		339262	0		=			
ANR	360894	Identifier	err		339262	0					
ANR	360895	Identifier	false		339262	1					
ANR	360896	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	5130:4:108829:108865	339262	2	True				
ANR	360897	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	360898	IdentifierDeclType	ut32		339262	0					
ANR	360899	Identifier	thnum		339262	1					
ANR	360900	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	360901	Identifier	thnum		339262	0					
ANR	360902	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	360903	Callee	getthimmed12		339262	0					
ANR	360904	Identifier	getthimmed12		339262	0					
ANR	360905	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	360906	Argument	ao -> a [ 2 ]		339262	0					
ANR	360907	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	360908	PtrMemberAccess	ao -> a		339262	0					
ANR	360909	Identifier	ao		339262	0					
ANR	360910	Identifier	a		339262	1					
ANR	360911	PrimaryExpression	2		339262	1					
ANR	360912	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		339262	3					
ANR	360913	Condition	! err && ( ! ( m & W_BIT ) )	5132:8:108880:108901	339262	0	True				
ANR	360914	AndExpression	! err && ( ! ( m & W_BIT ) )		339262	0		&&			
ANR	360915	UnaryOperationExpression	! err		339262	0					
ANR	360916	UnaryOperator	!		339262	0					
ANR	360917	Identifier	err		339262	1					
ANR	360918	UnaryOperationExpression	! ( m & W_BIT )		339262	1					
ANR	360919	UnaryOperator	!		339262	0					
ANR	360920	BitAndExpression	m & W_BIT		339262	1		&			
ANR	360921	Identifier	m		339262	0					
ANR	360922	Identifier	W_BIT		339262	1					
ANR	360923	CompoundStatement		3840:32:83045:83045	339262	1					
ANR	360924	ExpressionStatement	ao -> o = 0xadf10000	5133:5:108911:108929	339262	0	True				
ANR	360925	AssignmentExpression	ao -> o = 0xadf10000		339262	0		=			
ANR	360926	PtrMemberAccess	ao -> o		339262	0					
ANR	360927	Identifier	ao		339262	0					
ANR	360928	Identifier	o		339262	1					
ANR	360929	PrimaryExpression	0xadf10000		339262	1					
ANR	360930	ExpressionStatement	ao -> o |= thnum	5134:5:108936:108950	339262	1	True				
ANR	360931	AssignmentExpression	ao -> o |= thnum		339262	0		|=			
ANR	360932	PtrMemberAccess	ao -> o		339262	0					
ANR	360933	Identifier	ao		339262	0					
ANR	360934	Identifier	o		339262	1					
ANR	360935	Identifier	thnum		339262	1					
ANR	360936	ExpressionStatement	ao -> o |= reg1	5135:5:108957:108970	339262	2	True				
ANR	360937	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	360938	PtrMemberAccess	ao -> o		339262	0					
ANR	360939	Identifier	ao		339262	0					
ANR	360940	Identifier	o		339262	1					
ANR	360941	Identifier	reg1		339262	1					
ANR	360942	IfStatement	if ( m & S_BIT )		339262	3					
ANR	360943	Condition	m & S_BIT	5136:9:108981:108989	339262	0	True				
ANR	360944	BitAndExpression	m & S_BIT		339262	0		&			
ANR	360945	Identifier	m		339262	0					
ANR	360946	Identifier	S_BIT		339262	1					
ANR	360947	CompoundStatement		3844:20:83133:83133	339262	1					
ANR	360948	ExpressionStatement	ao -> o |= 1 << 28	5137:6:109000:109016	339262	0	True				
ANR	360949	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	360950	PtrMemberAccess	ao -> o		339262	0					
ANR	360951	Identifier	ao		339262	0					
ANR	360952	Identifier	o		339262	1					
ANR	360953	ShiftExpression	1 << 28		339262	1		<<			
ANR	360954	PrimaryExpression	1		339262	0					
ANR	360955	PrimaryExpression	28		339262	1					
ANR	360956	ReturnStatement	return 4 ;	5139:5:109030:109038	339262	4	True				
ANR	360957	PrimaryExpression	4		339262	0					
ANR	360958	IfStatement	if ( num > 4096 )		339262	4					
ANR	360959	Condition	num > 4096	5142:8:109055:109064	339262	0	True				
ANR	360960	RelationalExpression	num > 4096		339262	0		>			
ANR	360961	Identifier	num		339262	0					
ANR	360962	PrimaryExpression	4096		339262	1					
ANR	360963	CompoundStatement		3850:20:83208:83208	339262	1					
ANR	360964	ReturnStatement	return - 1 ;	5143:5:109074:109083	339262	0	True				
ANR	360965	UnaryOperationExpression	- 1		339262	0					
ANR	360966	UnaryOperator	-		339262	0					
ANR	360967	PrimaryExpression	1		339262	1					
ANR	360968	ExpressionStatement	ao -> o = 0xadf20000	5146:4:109096:109114	339262	5	True				
ANR	360969	AssignmentExpression	ao -> o = 0xadf20000		339262	0		=			
ANR	360970	PtrMemberAccess	ao -> o		339262	0					
ANR	360971	Identifier	ao		339262	0					
ANR	360972	Identifier	o		339262	1					
ANR	360973	PrimaryExpression	0xadf20000		339262	1					
ANR	360974	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	5147:4:109120:109151	339262	6	True				
ANR	360975	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		339262	0		|=			
ANR	360976	PtrMemberAccess	ao -> o		339262	0					
ANR	360977	Identifier	ao		339262	0					
ANR	360978	Identifier	o		339262	1					
ANR	360979	CallExpression	getthzeroimmed12 ( num )		339262	1					
ANR	360980	Callee	getthzeroimmed12		339262	0					
ANR	360981	Identifier	getthzeroimmed12		339262	0					
ANR	360982	ArgumentList	num		339262	1					
ANR	360983	Argument	num		339262	0					
ANR	360984	Identifier	num		339262	0					
ANR	360985	ExpressionStatement	ao -> o |= reg1	5148:4:109157:109170	339262	7	True				
ANR	360986	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	360987	PtrMemberAccess	ao -> o		339262	0					
ANR	360988	Identifier	ao		339262	0					
ANR	360989	Identifier	o		339262	1					
ANR	360990	Identifier	reg1		339262	1					
ANR	360991	ReturnStatement	return 4 ;	5149:4:109176:109184	339262	8	True				
ANR	360992	PrimaryExpression	4		339262	0					
ANR	360993	IfStatement	if ( ( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 ) )		339262	6					
ANR	360994	Condition	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )	5152:7:109199:109274	339262	0	True				
ANR	360995	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )		339262	0		&&			
ANR	360996	RelationalExpression	reg1 < 8		339262	0		<			
ANR	360997	Identifier	reg1		339262	0					
ANR	360998	PrimaryExpression	8		339262	1					
ANR	360999	AndExpression	( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )		339262	1		&&			
ANR	361000	RelationalExpression	reg2 < 8		339262	0		<			
ANR	361001	Identifier	reg2		339262	0					
ANR	361002	PrimaryExpression	8		339262	1					
ANR	361003	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )		339262	1		&&			
ANR	361004	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	361005	UnaryOperator	!		339262	0					
ANR	361006	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	361007	Identifier	m		339262	0					
ANR	361008	Identifier	DOTW_BIT		339262	1					
ANR	361009	AndExpression	( ! ( m & W_BIT ) ) && ( num < 8 )		339262	1		&&			
ANR	361010	UnaryOperationExpression	! ( m & W_BIT )		339262	0					
ANR	361011	UnaryOperator	!		339262	0					
ANR	361012	BitAndExpression	m & W_BIT		339262	1		&			
ANR	361013	Identifier	m		339262	0					
ANR	361014	Identifier	W_BIT		339262	1					
ANR	361015	RelationalExpression	num < 8		339262	1		<			
ANR	361016	Identifier	num		339262	0					
ANR	361017	PrimaryExpression	8		339262	1					
ANR	361018	CompoundStatement		3860:85:83418:83418	339262	1					
ANR	361019	ExpressionStatement	ao -> o = 0x001e	5153:4:109283:109297	339262	0	True				
ANR	361020	AssignmentExpression	ao -> o = 0x001e		339262	0		=			
ANR	361021	PtrMemberAccess	ao -> o		339262	0					
ANR	361022	Identifier	ao		339262	0					
ANR	361023	Identifier	o		339262	1					
ANR	361024	PrimaryExpression	0x001e		339262	1					
ANR	361025	ExpressionStatement	ao -> o |= reg1 << 8	5154:4:109303:109321	339262	1	True				
ANR	361026	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	361027	PtrMemberAccess	ao -> o		339262	0					
ANR	361028	Identifier	ao		339262	0					
ANR	361029	Identifier	o		339262	1					
ANR	361030	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	361031	Identifier	reg1		339262	0					
ANR	361032	PrimaryExpression	8		339262	1					
ANR	361033	ExpressionStatement	ao -> o |= reg2 << 11	5155:4:109327:109346	339262	2	True				
ANR	361034	AssignmentExpression	ao -> o |= reg2 << 11		339262	0		|=			
ANR	361035	PtrMemberAccess	ao -> o		339262	0					
ANR	361036	Identifier	ao		339262	0					
ANR	361037	Identifier	o		339262	1					
ANR	361038	ShiftExpression	reg2 << 11		339262	1		<<			
ANR	361039	Identifier	reg2		339262	0					
ANR	361040	PrimaryExpression	11		339262	1					
ANR	361041	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	5156:4:109352:109378	339262	3	True				
ANR	361042	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		339262	0		|=			
ANR	361043	PtrMemberAccess	ao -> o		339262	0					
ANR	361044	Identifier	ao		339262	0					
ANR	361045	Identifier	o		339262	1					
ANR	361046	ShiftExpression	( num & 0x3 ) << 14		339262	1		<<			
ANR	361047	BitAndExpression	num & 0x3		339262	0		&			
ANR	361048	Identifier	num		339262	0					
ANR	361049	PrimaryExpression	0x3		339262	1					
ANR	361050	PrimaryExpression	14		339262	1					
ANR	361051	ExpressionStatement	ao -> o |= ( num >> 2 )	5157:4:109384:109403	339262	4	True				
ANR	361052	AssignmentExpression	ao -> o |= ( num >> 2 )		339262	0		|=			
ANR	361053	PtrMemberAccess	ao -> o		339262	0					
ANR	361054	Identifier	ao		339262	0					
ANR	361055	Identifier	o		339262	1					
ANR	361056	ShiftExpression	num >> 2		339262	1		>>			
ANR	361057	Identifier	num		339262	0					
ANR	361058	PrimaryExpression	2		339262	1					
ANR	361059	ReturnStatement	return 2 ;	5158:4:109409:109417	339262	5	True				
ANR	361060	PrimaryExpression	2		339262	0					
ANR	361061	IfStatement	if ( ( reg1 < 8 ) && ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 ) )		339262	7					
ANR	361062	Condition	( reg1 < 8 ) && ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )	5161:7:109432:109513	339262	0	True				
ANR	361063	AndExpression	( reg1 < 8 ) && ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )		339262	0		&&			
ANR	361064	RelationalExpression	reg1 < 8		339262	0		<			
ANR	361065	Identifier	reg1		339262	0					
ANR	361066	PrimaryExpression	8		339262	1					
ANR	361067	AndExpression	( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )		339262	1		&&			
ANR	361068	EqualityExpression	reg1 == reg2		339262	0		==			
ANR	361069	Identifier	reg1		339262	0					
ANR	361070	Identifier	reg2		339262	1					
ANR	361071	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )		339262	1		&&			
ANR	361072	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	0					
ANR	361073	UnaryOperator	!		339262	0					
ANR	361074	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	361075	Identifier	m		339262	0					
ANR	361076	Identifier	DOTW_BIT		339262	1					
ANR	361077	AndExpression	( ! ( m & W_BIT ) ) && ( num < 256 )		339262	1		&&			
ANR	361078	UnaryOperationExpression	! ( m & W_BIT )		339262	0					
ANR	361079	UnaryOperator	!		339262	0					
ANR	361080	BitAndExpression	m & W_BIT		339262	1		&			
ANR	361081	Identifier	m		339262	0					
ANR	361082	Identifier	W_BIT		339262	1					
ANR	361083	RelationalExpression	num < 256		339262	1		<			
ANR	361084	Identifier	num		339262	0					
ANR	361085	PrimaryExpression	256		339262	1					
ANR	361086	CompoundStatement		3869:91:83657:83657	339262	1					
ANR	361087	ExpressionStatement	ao -> o = 0x0038	5162:4:109522:109536	339262	0	True				
ANR	361088	AssignmentExpression	ao -> o = 0x0038		339262	0		=			
ANR	361089	PtrMemberAccess	ao -> o		339262	0					
ANR	361090	Identifier	ao		339262	0					
ANR	361091	Identifier	o		339262	1					
ANR	361092	PrimaryExpression	0x0038		339262	1					
ANR	361093	ExpressionStatement	ao -> o |= reg1	5163:4:109542:109555	339262	1	True				
ANR	361094	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	361095	PtrMemberAccess	ao -> o		339262	0					
ANR	361096	Identifier	ao		339262	0					
ANR	361097	Identifier	o		339262	1					
ANR	361098	Identifier	reg1		339262	1					
ANR	361099	ExpressionStatement	ao -> o |= num << 8	5164:4:109561:109578	339262	2	True				
ANR	361100	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	361101	PtrMemberAccess	ao -> o		339262	0					
ANR	361102	Identifier	ao		339262	0					
ANR	361103	Identifier	o		339262	1					
ANR	361104	ShiftExpression	num << 8		339262	1		<<			
ANR	361105	Identifier	num		339262	0					
ANR	361106	PrimaryExpression	8		339262	1					
ANR	361107	ReturnStatement	return 2 ;	5165:4:109584:109592	339262	3	True				
ANR	361108	PrimaryExpression	2		339262	0					
ANR	361109	ExpressionStatement	err = false	5168:3:109603:109614	339262	8	True				
ANR	361110	AssignmentExpression	err = false		339262	0		=			
ANR	361111	Identifier	err		339262	0					
ANR	361112	Identifier	false		339262	1					
ANR	361113	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	5169:3:109619:109655	339262	9	True				
ANR	361114	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	0					
ANR	361115	IdentifierDeclType	ut32		339262	0					
ANR	361116	Identifier	thnum		339262	1					
ANR	361117	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		339262	2		=			
ANR	361118	Identifier	thnum		339262	0					
ANR	361119	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		339262	1					
ANR	361120	Callee	getthimmed12		339262	0					
ANR	361121	Identifier	getthimmed12		339262	0					
ANR	361122	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	361123	Argument	ao -> a [ 2 ]		339262	0					
ANR	361124	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	361125	PtrMemberAccess	ao -> a		339262	0					
ANR	361126	Identifier	ao		339262	0					
ANR	361127	Identifier	a		339262	1					
ANR	361128	PrimaryExpression	2		339262	1					
ANR	361129	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		339262	10					
ANR	361130	Condition	! err && ( ! ( m & W_BIT ) )	5171:7:109668:109689	339262	0	True				
ANR	361131	AndExpression	! err && ( ! ( m & W_BIT ) )		339262	0		&&			
ANR	361132	UnaryOperationExpression	! err		339262	0					
ANR	361133	UnaryOperator	!		339262	0					
ANR	361134	Identifier	err		339262	1					
ANR	361135	UnaryOperationExpression	! ( m & W_BIT )		339262	1					
ANR	361136	UnaryOperator	!		339262	0					
ANR	361137	BitAndExpression	m & W_BIT		339262	1		&			
ANR	361138	Identifier	m		339262	0					
ANR	361139	Identifier	W_BIT		339262	1					
ANR	361140	CompoundStatement		3879:31:83833:83833	339262	1					
ANR	361141	ExpressionStatement	ao -> o = 0xa0f10000	5172:4:109698:109716	339262	0	True				
ANR	361142	AssignmentExpression	ao -> o = 0xa0f10000		339262	0		=			
ANR	361143	PtrMemberAccess	ao -> o		339262	0					
ANR	361144	Identifier	ao		339262	0					
ANR	361145	Identifier	o		339262	1					
ANR	361146	PrimaryExpression	0xa0f10000		339262	1					
ANR	361147	ExpressionStatement	ao -> o |= thnum	5173:4:109722:109736	339262	1	True				
ANR	361148	AssignmentExpression	ao -> o |= thnum		339262	0		|=			
ANR	361149	PtrMemberAccess	ao -> o		339262	0					
ANR	361150	Identifier	ao		339262	0					
ANR	361151	Identifier	o		339262	1					
ANR	361152	Identifier	thnum		339262	1					
ANR	361153	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	5174:4:109742:109778	339262	2	True				
ANR	361154	CallExpression	"std_32bit_2reg ( ao , m , false )"		339262	0					
ANR	361155	Callee	std_32bit_2reg		339262	0					
ANR	361156	Identifier	std_32bit_2reg		339262	0					
ANR	361157	ArgumentList	ao		339262	1					
ANR	361158	Argument	ao		339262	0					
ANR	361159	Identifier	ao		339262	0					
ANR	361160	Argument	m		339262	1					
ANR	361161	Identifier	m		339262	0					
ANR	361162	Argument	false		339262	2					
ANR	361163	Identifier	false		339262	0					
ANR	361164	IfStatement	if ( num > 4096 )		339262	11					
ANR	361165	Condition	num > 4096	5177:7:109793:109802	339262	0	True				
ANR	361166	RelationalExpression	num > 4096		339262	0		>			
ANR	361167	Identifier	num		339262	0					
ANR	361168	PrimaryExpression	4096		339262	1					
ANR	361169	CompoundStatement		3885:19:83946:83946	339262	1					
ANR	361170	ReturnStatement	return - 1 ;	5178:4:109811:109820	339262	0	True				
ANR	361171	UnaryOperationExpression	- 1		339262	0					
ANR	361172	UnaryOperator	-		339262	0					
ANR	361173	PrimaryExpression	1		339262	1					
ANR	361174	ExpressionStatement	ao -> o = 0xa0f20000	5181:3:109831:109849	339262	12	True				
ANR	361175	AssignmentExpression	ao -> o = 0xa0f20000		339262	0		=			
ANR	361176	PtrMemberAccess	ao -> o		339262	0					
ANR	361177	Identifier	ao		339262	0					
ANR	361178	Identifier	o		339262	1					
ANR	361179	PrimaryExpression	0xa0f20000		339262	1					
ANR	361180	ExpressionStatement	ao -> o |= reg1	5182:3:109854:109867	339262	13	True				
ANR	361181	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	361182	PtrMemberAccess	ao -> o		339262	0					
ANR	361183	Identifier	ao		339262	0					
ANR	361184	Identifier	o		339262	1					
ANR	361185	Identifier	reg1		339262	1					
ANR	361186	ExpressionStatement	ao -> o |= reg2 << 24	5183:3:109872:109891	339262	14	True				
ANR	361187	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	361188	PtrMemberAccess	ao -> o		339262	0					
ANR	361189	Identifier	ao		339262	0					
ANR	361190	Identifier	o		339262	1					
ANR	361191	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	361192	Identifier	reg2		339262	0					
ANR	361193	PrimaryExpression	24		339262	1					
ANR	361194	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	5184:3:109896:109927	339262	15	True				
ANR	361195	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		339262	0		|=			
ANR	361196	PtrMemberAccess	ao -> o		339262	0					
ANR	361197	Identifier	ao		339262	0					
ANR	361198	Identifier	o		339262	1					
ANR	361199	CallExpression	getthzeroimmed12 ( num )		339262	1					
ANR	361200	Callee	getthzeroimmed12		339262	0					
ANR	361201	Identifier	getthzeroimmed12		339262	0					
ANR	361202	ArgumentList	num		339262	1					
ANR	361203	Argument	num		339262	0					
ANR	361204	Identifier	num		339262	0					
ANR	361205	ReturnStatement	return 4 ;	5185:3:109932:109940	339262	16	True				
ANR	361206	PrimaryExpression	4		339262	0					
ANR	361207	BreakStatement	break ;	5187:3:109957:109962	339262	4	True				
ANR	361208	Label	case THUMB_REG_REG :	5188:2:109966:109984	339262	5	True				
ANR	361209	Identifier	THUMB_REG_REG		339262	0					
ANR	361210	CompoundStatement		3896:22:84127:84127	339262	6					
ANR	361211	ExpressionStatement	std_opt_2 ( ao )	5189:3:109991:110005	339262	0	True				
ANR	361212	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	361213	Callee	std_opt_2		339262	0					
ANR	361214	Identifier	std_opt_2		339262	0					
ANR	361215	ArgumentList	ao		339262	1					
ANR	361216	Argument	ao		339262	0					
ANR	361217	Identifier	ao		339262	0					
ANR	361218	Label	case THUMB_REG_REG_REG :	5192:2:110051:110073	339262	7	True				
ANR	361219	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	361220	CompoundStatement		3900:26:84216:84216	339262	8					
ANR	361221	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5193:3:110080:110098	339262	0	True				
ANR	361222	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	361223	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	361224	PtrMemberAccess	ao -> a		339262	0					
ANR	361225	Identifier	ao		339262	0					
ANR	361226	Identifier	a		339262	1					
ANR	361227	PrimaryExpression	3		339262	1					
ANR	361228	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	361229	Label	case THUMB_REG_REG_SHIFT :	5196:2:110144:110168	339262	9	True				
ANR	361230	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	361231	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	10					
ANR	361232	Condition	ao -> a [ 3 ] == NULL	5197:7:110177:110192	339262	0	True				
ANR	361233	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	361234	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	361235	PtrMemberAccess	ao -> a		339262	0					
ANR	361236	Identifier	ao		339262	0					
ANR	361237	Identifier	a		339262	1					
ANR	361238	PrimaryExpression	3		339262	1					
ANR	361239	Identifier	NULL		339262	1					
ANR	361240	CompoundStatement		3905:25:84336:84336	339262	1					
ANR	361241	ExpressionStatement	std_opt_3 ( ao )	5198:4:110223:110237	339262	0	True				
ANR	361242	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	361243	Callee	std_opt_3		339262	0					
ANR	361244	Identifier	std_opt_3		339262	0					
ANR	361245	ArgumentList	ao		339262	1					
ANR	361246	Argument	ao		339262	0					
ANR	361247	Identifier	ao		339262	0					
ANR	361248	Label	case THUMB_REG_REG_REG_SHIFT :	5201:2:110276:110304	339262	11	True				
ANR	361249	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	361250	CompoundStatement		3913:3:84551:84589	339262	12					
ANR	361251	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5202:3:110311:110339	339262	0	True				
ANR	361252	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	361253	IdentifierDeclType	ut8		339262	0					
ANR	361254	Identifier	reg1		339262	1					
ANR	361255	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	361256	Identifier	reg1		339262	0					
ANR	361257	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	361258	Callee	getreg		339262	0					
ANR	361259	Identifier	getreg		339262	0					
ANR	361260	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	361261	Argument	ao -> a [ 0 ]		339262	0					
ANR	361262	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	361263	PtrMemberAccess	ao -> a		339262	0					
ANR	361264	Identifier	ao		339262	0					
ANR	361265	Identifier	a		339262	1					
ANR	361266	PrimaryExpression	0		339262	1					
ANR	361267	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5203:3:110344:110372	339262	1	True				
ANR	361268	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	361269	IdentifierDeclType	ut8		339262	0					
ANR	361270	Identifier	reg2		339262	1					
ANR	361271	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	361272	Identifier	reg2		339262	0					
ANR	361273	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	361274	Callee	getreg		339262	0					
ANR	361275	Identifier	getreg		339262	0					
ANR	361276	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	361277	Argument	ao -> a [ 1 ]		339262	0					
ANR	361278	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	361279	PtrMemberAccess	ao -> a		339262	0					
ANR	361280	Identifier	ao		339262	0					
ANR	361281	Identifier	a		339262	1					
ANR	361282	PrimaryExpression	1		339262	1					
ANR	361283	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5204:3:110377:110405	339262	2	True				
ANR	361284	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	361285	IdentifierDeclType	ut8		339262	0					
ANR	361286	Identifier	reg3		339262	1					
ANR	361287	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	361288	Identifier	reg3		339262	0					
ANR	361289	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	361290	Callee	getreg		339262	0					
ANR	361291	Identifier	getreg		339262	0					
ANR	361292	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	361293	Argument	ao -> a [ 2 ]		339262	0					
ANR	361294	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	361295	PtrMemberAccess	ao -> a		339262	0					
ANR	361296	Identifier	ao		339262	0					
ANR	361297	Identifier	a		339262	1					
ANR	361298	PrimaryExpression	2		339262	1					
ANR	361299	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5205:3:110410:110448	339262	3	True				
ANR	361300	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	361301	IdentifierDeclType	ut32		339262	0					
ANR	361302	Identifier	shift		339262	1					
ANR	361303	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	361304	Identifier	shift		339262	0					
ANR	361305	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	361306	Callee	thumb_getshift		339262	0					
ANR	361307	Identifier	thumb_getshift		339262	0					
ANR	361308	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	361309	Argument	ao -> a [ 3 ]		339262	0					
ANR	361310	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	361311	PtrMemberAccess	ao -> a		339262	0					
ANR	361312	Identifier	ao		339262	0					
ANR	361313	Identifier	a		339262	1					
ANR	361314	PrimaryExpression	3		339262	1					
ANR	361315	IfStatement	if ( reg2 == 13 )		339262	4					
ANR	361316	Condition	reg2 == 13	5207:7:110458:110467	339262	0	True				
ANR	361317	EqualityExpression	reg2 == 13		339262	0		==			
ANR	361318	Identifier	reg2		339262	0					
ANR	361319	PrimaryExpression	13		339262	1					
ANR	361320	CompoundStatement		3915:19:84611:84611	339262	1					
ANR	361321	ExpressionStatement	ao -> o = 0xadeb0000	5208:4:110476:110494	339262	0	True				
ANR	361322	AssignmentExpression	ao -> o = 0xadeb0000		339262	0		=			
ANR	361323	PtrMemberAccess	ao -> o		339262	0					
ANR	361324	Identifier	ao		339262	0					
ANR	361325	Identifier	o		339262	1					
ANR	361326	PrimaryExpression	0xadeb0000		339262	1					
ANR	361327	ExpressionStatement	ao -> o |= reg1	5209:4:110500:110513	339262	1	True				
ANR	361328	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	361329	PtrMemberAccess	ao -> o		339262	0					
ANR	361330	Identifier	ao		339262	0					
ANR	361331	Identifier	o		339262	1					
ANR	361332	Identifier	reg1		339262	1					
ANR	361333	ExpressionStatement	ao -> o |= reg3 << 8	5210:4:110519:110537	339262	2	True				
ANR	361334	AssignmentExpression	ao -> o |= reg3 << 8		339262	0		|=			
ANR	361335	PtrMemberAccess	ao -> o		339262	0					
ANR	361336	Identifier	ao		339262	0					
ANR	361337	Identifier	o		339262	1					
ANR	361338	ShiftExpression	reg3 << 8		339262	1		<<			
ANR	361339	Identifier	reg3		339262	0					
ANR	361340	PrimaryExpression	8		339262	1					
ANR	361341	ExpressionStatement	ao -> o |= shift	5211:4:110543:110557	339262	3	True				
ANR	361342	AssignmentExpression	ao -> o |= shift		339262	0		|=			
ANR	361343	PtrMemberAccess	ao -> o		339262	0					
ANR	361344	Identifier	ao		339262	0					
ANR	361345	Identifier	o		339262	1					
ANR	361346	Identifier	shift		339262	1					
ANR	361347	IfStatement	if ( m & S_BIT )		339262	4					
ANR	361348	Condition	m & S_BIT	5212:8:110567:110575	339262	0	True				
ANR	361349	BitAndExpression	m & S_BIT		339262	0		&			
ANR	361350	Identifier	m		339262	0					
ANR	361351	Identifier	S_BIT		339262	1					
ANR	361352	CompoundStatement		3920:19:84719:84719	339262	1					
ANR	361353	ExpressionStatement	ao -> o |= 1 << 28	5213:5:110585:110601	339262	0	True				
ANR	361354	AssignmentExpression	ao -> o |= 1 << 28		339262	0		|=			
ANR	361355	PtrMemberAccess	ao -> o		339262	0					
ANR	361356	Identifier	ao		339262	0					
ANR	361357	Identifier	o		339262	1					
ANR	361358	ShiftExpression	1 << 28		339262	1		<<			
ANR	361359	PrimaryExpression	1		339262	0					
ANR	361360	PrimaryExpression	28		339262	1					
ANR	361361	ReturnStatement	return 4 ;	5215:4:110613:110621	339262	5	True				
ANR	361362	PrimaryExpression	4		339262	0					
ANR	361363	IfStatement	if ( ( shift == 0 ) && ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		339262	5					
ANR	361364	Condition	( shift == 0 ) && ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )	5218:7:110636:110710	339262	0	True				
ANR	361365	AndExpression	( shift == 0 ) && ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	0		&&			
ANR	361366	EqualityExpression	shift == 0		339262	0		==			
ANR	361367	Identifier	shift		339262	0					
ANR	361368	PrimaryExpression	0		339262	1					
ANR	361369	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	361370	RelationalExpression	reg1 < 8		339262	0		<			
ANR	361371	Identifier	reg1		339262	0					
ANR	361372	PrimaryExpression	8		339262	1					
ANR	361373	AndExpression	( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	361374	RelationalExpression	reg2 < 8		339262	0		<			
ANR	361375	Identifier	reg2		339262	0					
ANR	361376	PrimaryExpression	8		339262	1					
ANR	361377	AndExpression	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		339262	1		&&			
ANR	361378	RelationalExpression	reg3 < 8		339262	0		<			
ANR	361379	Identifier	reg3		339262	0					
ANR	361380	PrimaryExpression	8		339262	1					
ANR	361381	UnaryOperationExpression	! ( m & DOTW_BIT )		339262	1					
ANR	361382	UnaryOperator	!		339262	0					
ANR	361383	BitAndExpression	m & DOTW_BIT		339262	1		&			
ANR	361384	Identifier	m		339262	0					
ANR	361385	Identifier	DOTW_BIT		339262	1					
ANR	361386	CompoundStatement		3926:84:84854:84854	339262	1					
ANR	361387	ExpressionStatement	ao -> o = 0x001a	5219:4:110719:110733	339262	0	True				
ANR	361388	AssignmentExpression	ao -> o = 0x001a		339262	0		=			
ANR	361389	PtrMemberAccess	ao -> o		339262	0					
ANR	361390	Identifier	ao		339262	0					
ANR	361391	Identifier	o		339262	1					
ANR	361392	PrimaryExpression	0x001a		339262	1					
ANR	361393	ExpressionStatement	ao -> o |= reg1 << 8	5220:4:110739:110757	339262	1	True				
ANR	361394	AssignmentExpression	ao -> o |= reg1 << 8		339262	0		|=			
ANR	361395	PtrMemberAccess	ao -> o		339262	0					
ANR	361396	Identifier	ao		339262	0					
ANR	361397	Identifier	o		339262	1					
ANR	361398	ShiftExpression	reg1 << 8		339262	1		<<			
ANR	361399	Identifier	reg1		339262	0					
ANR	361400	PrimaryExpression	8		339262	1					
ANR	361401	ExpressionStatement	ao -> o |= reg2 << 11	5221:4:110763:110782	339262	2	True				
ANR	361402	AssignmentExpression	ao -> o |= reg2 << 11		339262	0		|=			
ANR	361403	PtrMemberAccess	ao -> o		339262	0					
ANR	361404	Identifier	ao		339262	0					
ANR	361405	Identifier	o		339262	1					
ANR	361406	ShiftExpression	reg2 << 11		339262	1		<<			
ANR	361407	Identifier	reg2		339262	0					
ANR	361408	PrimaryExpression	11		339262	1					
ANR	361409	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	5222:4:110788:110815	339262	3	True				
ANR	361410	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		339262	0		|=			
ANR	361411	PtrMemberAccess	ao -> o		339262	0					
ANR	361412	Identifier	ao		339262	0					
ANR	361413	Identifier	o		339262	1					
ANR	361414	ShiftExpression	( reg3 & 0x3 ) << 14		339262	1		<<			
ANR	361415	BitAndExpression	reg3 & 0x3		339262	0		&			
ANR	361416	Identifier	reg3		339262	0					
ANR	361417	PrimaryExpression	0x3		339262	1					
ANR	361418	PrimaryExpression	14		339262	1					
ANR	361419	ExpressionStatement	ao -> o |= ( reg3 >> 2 )	5223:4:110821:110841	339262	4	True				
ANR	361420	AssignmentExpression	ao -> o |= ( reg3 >> 2 )		339262	0		|=			
ANR	361421	PtrMemberAccess	ao -> o		339262	0					
ANR	361422	Identifier	ao		339262	0					
ANR	361423	Identifier	o		339262	1					
ANR	361424	ShiftExpression	reg3 >> 2		339262	1		>>			
ANR	361425	Identifier	reg3		339262	0					
ANR	361426	PrimaryExpression	2		339262	1					
ANR	361427	ReturnStatement	return 2 ;	5224:4:110847:110855	339262	5	True				
ANR	361428	PrimaryExpression	2		339262	0					
ANR	361429	ExpressionStatement	ao -> o = 0xa0eb0000	5227:3:110869:110887	339262	6	True				
ANR	361430	AssignmentExpression	ao -> o = 0xa0eb0000		339262	0		=			
ANR	361431	PtrMemberAccess	ao -> o		339262	0					
ANR	361432	Identifier	ao		339262	0					
ANR	361433	Identifier	o		339262	1					
ANR	361434	PrimaryExpression	0xa0eb0000		339262	1					
ANR	361435	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	5228:3:110892:110927	339262	7	True				
ANR	361436	CallExpression	"std_32bit_3reg ( ao , m , true )"		339262	0					
ANR	361437	Callee	std_32bit_3reg		339262	0					
ANR	361438	Identifier	std_32bit_3reg		339262	0					
ANR	361439	ArgumentList	ao		339262	1					
ANR	361440	Argument	ao		339262	0					
ANR	361441	Identifier	ao		339262	0					
ANR	361442	Argument	m		339262	1					
ANR	361443	Identifier	m		339262	0					
ANR	361444	Argument	true		339262	2					
ANR	361445	Identifier	true		339262	0					
ANR	361446	BreakStatement	break ;	5230:3:110944:110949	339262	13	True				
ANR	361447	Label	default :	5231:2:110953:110960	339262	14	True				
ANR	361448	Identifier	default		339262	0					
ANR	361449	ReturnStatement	return - 1 ;	5232:3:110965:110974	339262	15	True				
ANR	361450	UnaryOperationExpression	- 1		339262	0					
ANR	361451	UnaryOperator	-		339262	0					
ANR	361452	PrimaryExpression	1		339262	1					
ANR	361453	ElseStatement	else		339262	0					
ANR	361454	IfStatement	"if ( ( m = opmask ( ao -> op , ""svc"" , 0 ) ) )"		339262	0					
ANR	361455	Condition	"m = opmask ( ao -> op , ""svc"" , 0 )"	5235:5:110993:111023	339262	0	True				
ANR	361456	AssignmentExpression	"m = opmask ( ao -> op , ""svc"" , 0 )"		339262	0		=			
ANR	361457	Identifier	m		339262	0					
ANR	361458	CallExpression	"opmask ( ao -> op , ""svc"" , 0 )"		339262	1					
ANR	361459	Callee	opmask		339262	0					
ANR	361460	Identifier	opmask		339262	0					
ANR	361461	ArgumentList	ao -> op		339262	1					
ANR	361462	Argument	ao -> op		339262	0					
ANR	361463	PtrMemberAccess	ao -> op		339262	0					
ANR	361464	Identifier	ao		339262	0					
ANR	361465	Identifier	op		339262	1					
ANR	361466	Argument	"""svc"""		339262	1					
ANR	361467	PrimaryExpression	"""svc"""		339262	0					
ANR	361468	Argument	0		339262	2					
ANR	361469	PrimaryExpression	0		339262	0					
ANR	361470	CompoundStatement		3944:2:85171:85205	339262	1					
ANR	361471	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5236:2:111030:111064	339262	0	True				
ANR	361472	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	361473	IdentifierDeclType	ut64		339262	0					
ANR	361474	Identifier	argt		339262	1					
ANR	361475	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	361476	Identifier	argt		339262	0					
ANR	361477	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	361478	Callee	thumb_selector		339262	0					
ANR	361479	Identifier	thumb_selector		339262	0					
ANR	361480	ArgumentList	ao -> a		339262	1					
ANR	361481	Argument	ao -> a		339262	0					
ANR	361482	PtrMemberAccess	ao -> a		339262	0					
ANR	361483	Identifier	ao		339262	0					
ANR	361484	Identifier	a		339262	1					
ANR	361485	SwitchStatement	switch ( argt )		339262	1					
ANR	361486	Condition	argt	5237:10:111076:111079	339262	0	True				
ANR	361487	Identifier	argt		339262	0					
ANR	361488	CompoundStatement		3945:16:85223:85223	339262	1					
ANR	361489	Label	case THUMB_CONST :	5238:2:111086:111102	339262	0	True				
ANR	361490	Identifier	THUMB_CONST		339262	0					
ANR	361491	CompoundStatement		3947:3:85250:85278	339262	1					
ANR	361492	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	5239:3:111109:111137	339262	0	True				
ANR	361493	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		339262	0					
ANR	361494	IdentifierDeclType	ut32		339262	0					
ANR	361495	Identifier	num		339262	1					
ANR	361496	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		339262	2		=			
ANR	361497	Identifier	num		339262	0					
ANR	361498	CallExpression	getnum ( ao -> a [ 0 ] )		339262	1					
ANR	361499	Callee	getnum		339262	0					
ANR	361500	Identifier	getnum		339262	0					
ANR	361501	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	361502	Argument	ao -> a [ 0 ]		339262	0					
ANR	361503	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	361504	PtrMemberAccess	ao -> a		339262	0					
ANR	361505	Identifier	ao		339262	0					
ANR	361506	Identifier	a		339262	1					
ANR	361507	PrimaryExpression	0		339262	1					
ANR	361508	IfStatement	if ( num > 255 )		339262	1					
ANR	361509	Condition	num > 255	5240:7:111146:111154	339262	0	True				
ANR	361510	RelationalExpression	num > 255		339262	0		>			
ANR	361511	Identifier	num		339262	0					
ANR	361512	PrimaryExpression	255		339262	1					
ANR	361513	CompoundStatement		3948:18:85298:85298	339262	1					
ANR	361514	ReturnStatement	return - 1 ;	5241:4:111163:111172	339262	0	True				
ANR	361515	UnaryOperationExpression	- 1		339262	0					
ANR	361516	UnaryOperator	-		339262	0					
ANR	361517	PrimaryExpression	1		339262	1					
ANR	361518	ExpressionStatement	ao -> o = 0x00df	5243:3:111182:111196	339262	2	True				
ANR	361519	AssignmentExpression	ao -> o = 0x00df		339262	0		=			
ANR	361520	PtrMemberAccess	ao -> o		339262	0					
ANR	361521	Identifier	ao		339262	0					
ANR	361522	Identifier	o		339262	1					
ANR	361523	PrimaryExpression	0x00df		339262	1					
ANR	361524	ExpressionStatement	ao -> o |= num << 8	5244:3:111201:111218	339262	3	True				
ANR	361525	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	361526	PtrMemberAccess	ao -> o		339262	0					
ANR	361527	Identifier	ao		339262	0					
ANR	361528	Identifier	o		339262	1					
ANR	361529	ShiftExpression	num << 8		339262	1		<<			
ANR	361530	Identifier	num		339262	0					
ANR	361531	PrimaryExpression	8		339262	1					
ANR	361532	ReturnStatement	return 2 ;	5245:3:111223:111231	339262	4	True				
ANR	361533	PrimaryExpression	2		339262	0					
ANR	361534	BreakStatement	break ;	5247:3:111248:111253	339262	2	True				
ANR	361535	Label	default :	5248:2:111257:111264	339262	3	True				
ANR	361536	Identifier	default		339262	0					
ANR	361537	ReturnStatement	return - 1 ;	5249:3:111269:111278	339262	4	True				
ANR	361538	UnaryOperationExpression	- 1		339262	0					
ANR	361539	UnaryOperator	-		339262	0					
ANR	361540	PrimaryExpression	1		339262	1					
ANR	361541	ElseStatement	else		339262	0					
ANR	361542	IfStatement	"if ( ( m = opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	361543	Condition	"m = opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5252:5:111297:111354	339262	0	True				
ANR	361544	AssignmentExpression	"m = opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	361545	Identifier	m		339262	0					
ANR	361546	CallExpression	"opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	1					
ANR	361547	Callee	opmask		339262	0					
ANR	361548	Identifier	opmask		339262	0					
ANR	361549	ArgumentList	ao -> op		339262	1					
ANR	361550	Argument	ao -> op		339262	0					
ANR	361551	PtrMemberAccess	ao -> op		339262	0					
ANR	361552	Identifier	ao		339262	0					
ANR	361553	Identifier	op		339262	1					
ANR	361554	Argument	"""sxta"""		339262	1					
ANR	361555	PrimaryExpression	"""sxta"""		339262	0					
ANR	361556	Argument	B_BIT | H_BIT | SIXTEEN_BIT		339262	2					
ANR	361557	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	0		|			
ANR	361558	Identifier	B_BIT		339262	0					
ANR	361559	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361560	Identifier	H_BIT		339262	0					
ANR	361561	Identifier	SIXTEEN_BIT		339262	1					
ANR	361562	CompoundStatement		3961:2:85502:85536	339262	1					
ANR	361563	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5253:2:111361:111395	339262	0	True				
ANR	361564	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	361565	IdentifierDeclType	ut64		339262	0					
ANR	361566	Identifier	argt		339262	1					
ANR	361567	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	361568	Identifier	argt		339262	0					
ANR	361569	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	361570	Callee	thumb_selector		339262	0					
ANR	361571	Identifier	thumb_selector		339262	0					
ANR	361572	ArgumentList	ao -> a		339262	1					
ANR	361573	Argument	ao -> a		339262	0					
ANR	361574	PtrMemberAccess	ao -> a		339262	0					
ANR	361575	Identifier	ao		339262	0					
ANR	361576	Identifier	a		339262	1					
ANR	361577	SwitchStatement	switch ( argt )		339262	1					
ANR	361578	Condition	argt	5254:10:111407:111410	339262	0	True				
ANR	361579	Identifier	argt		339262	0					
ANR	361580	CompoundStatement		3962:16:85554:85554	339262	1					
ANR	361581	Label	case THUMB_REG_REG :	5255:2:111417:111435	339262	0	True				
ANR	361582	Identifier	THUMB_REG_REG		339262	0					
ANR	361583	CompoundStatement		3963:22:85578:85578	339262	1					
ANR	361584	ExpressionStatement	std_opt_2 ( ao )	5256:3:111442:111456	339262	0	True				
ANR	361585	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	361586	Callee	std_opt_2		339262	0					
ANR	361587	Identifier	std_opt_2		339262	0					
ANR	361588	ArgumentList	ao		339262	1					
ANR	361589	Argument	ao		339262	0					
ANR	361590	Identifier	ao		339262	0					
ANR	361591	Label	case THUMB_REG_REG_REG :	5259:2:111502:111524	339262	2	True				
ANR	361592	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	361593	CompoundStatement		3967:26:85667:85667	339262	3					
ANR	361594	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5260:3:111531:111549	339262	0	True				
ANR	361595	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	361596	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	361597	PtrMemberAccess	ao -> a		339262	0					
ANR	361598	Identifier	ao		339262	0					
ANR	361599	Identifier	a		339262	1					
ANR	361600	PrimaryExpression	3		339262	1					
ANR	361601	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	361602	Label	case THUMB_REG_REG_SHIFT :	5263:2:111595:111619	339262	4	True				
ANR	361603	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	361604	CompoundStatement		3971:28:85762:85762	339262	5					
ANR	361605	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	361606	Condition	ao -> a [ 3 ] == NULL	5264:7:111630:111645	339262	0	True				
ANR	361607	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	361608	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	361609	PtrMemberAccess	ao -> a		339262	0					
ANR	361610	Identifier	ao		339262	0					
ANR	361611	Identifier	a		339262	1					
ANR	361612	PrimaryExpression	3		339262	1					
ANR	361613	Identifier	NULL		339262	1					
ANR	361614	CompoundStatement		3972:25:85789:85789	339262	1					
ANR	361615	ExpressionStatement	std_opt_3 ( ao )	5265:4:111676:111690	339262	0	True				
ANR	361616	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	361617	Callee	std_opt_3		339262	0					
ANR	361618	Identifier	std_opt_3		339262	0					
ANR	361619	ArgumentList	ao		339262	1					
ANR	361620	Argument	ao		339262	0					
ANR	361621	Identifier	ao		339262	0					
ANR	361622	Label	case THUMB_REG_REG_REG_SHIFT :	5269:2:111741:111769	339262	6	True				
ANR	361623	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	361624	CompoundStatement		3984:3:86045:86092	339262	7					
ANR	361625	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5270:3:111776:111814	339262	0	True				
ANR	361626	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	361627	IdentifierDeclType	ut32		339262	0					
ANR	361628	Identifier	shift		339262	1					
ANR	361629	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	361630	Identifier	shift		339262	0					
ANR	361631	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	361632	Callee	thumb_getshift		339262	0					
ANR	361633	Identifier	thumb_getshift		339262	0					
ANR	361634	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	361635	Argument	ao -> a [ 3 ]		339262	0					
ANR	361636	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	361637	PtrMemberAccess	ao -> a		339262	0					
ANR	361638	Identifier	ao		339262	0					
ANR	361639	Identifier	a		339262	1					
ANR	361640	PrimaryExpression	3		339262	1					
ANR	361641	IfStatement	if ( ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		339262	1					
ANR	361642	Condition	( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )	5272:7:111824:111875	339262	0	True				
ANR	361643	AndExpression	( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		339262	0		&&			
ANR	361644	EqualityExpression	shift != 0		339262	0		!=			
ANR	361645	Identifier	shift		339262	0					
ANR	361646	PrimaryExpression	0		339262	1					
ANR	361647	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		339262	1		!=			
ANR	361648	BitAndExpression	shift & 0x0000f010		339262	0		&			
ANR	361649	Identifier	shift		339262	0					
ANR	361650	PrimaryExpression	0x0000f010		339262	1					
ANR	361651	PrimaryExpression	0x00003000		339262	1					
ANR	361652	CompoundStatement		3980:61:86019:86019	339262	1					
ANR	361653	ReturnStatement	return - 1 ;	5273:4:111884:111893	339262	0	True				
ANR	361654	UnaryOperationExpression	- 1		339262	0					
ANR	361655	UnaryOperator	-		339262	0					
ANR	361656	PrimaryExpression	1		339262	1					
ANR	361657	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5276:3:111904:111951	339262	2	True				
ANR	361658	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	0					
ANR	361659	IdentifierDeclType	ut64		339262	0					
ANR	361660	Identifier	sufsel		339262	1					
ANR	361661	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	361662	Identifier	sufsel		339262	0					
ANR	361663	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	361664	Identifier	m		339262	0					
ANR	361665	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361666	Identifier	B_BIT		339262	0					
ANR	361667	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361668	Identifier	H_BIT		339262	0					
ANR	361669	Identifier	SIXTEEN_BIT		339262	1					
ANR	361670	IfStatement	if ( sufsel == B_BIT )		339262	3					
ANR	361671	Condition	sufsel == B_BIT	5278:7:111964:111978	339262	0	True				
ANR	361672	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	361673	Identifier	sufsel		339262	0					
ANR	361674	Identifier	B_BIT		339262	1					
ANR	361675	CompoundStatement		3986:24:86122:86122	339262	1					
ANR	361676	ExpressionStatement	ao -> o = 0x40fa80f0	5279:4:111987:112005	339262	0	True				
ANR	361677	AssignmentExpression	ao -> o = 0x40fa80f0		339262	0		=			
ANR	361678	PtrMemberAccess	ao -> o		339262	0					
ANR	361679	Identifier	ao		339262	0					
ANR	361680	Identifier	o		339262	1					
ANR	361681	PrimaryExpression	0x40fa80f0		339262	1					
ANR	361682	ElseStatement	else		339262	0					
ANR	361683	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		339262	0					
ANR	361684	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5281:7:112024:112054	339262	0	True				
ANR	361685	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		339262	0		==			
ANR	361686	Identifier	sufsel		339262	0					
ANR	361687	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361688	Identifier	B_BIT		339262	0					
ANR	361689	Identifier	SIXTEEN_BIT		339262	1					
ANR	361690	CompoundStatement		3989:40:86198:86198	339262	1					
ANR	361691	ExpressionStatement	ao -> o = 0x20fa80f0	5282:4:112063:112081	339262	0	True				
ANR	361692	AssignmentExpression	ao -> o = 0x20fa80f0		339262	0		=			
ANR	361693	PtrMemberAccess	ao -> o		339262	0					
ANR	361694	Identifier	ao		339262	0					
ANR	361695	Identifier	o		339262	1					
ANR	361696	PrimaryExpression	0x20fa80f0		339262	1					
ANR	361697	ElseStatement	else		339262	0					
ANR	361698	IfStatement	if ( sufsel == H_BIT )		339262	0					
ANR	361699	Condition	sufsel == H_BIT	5284:7:112100:112114	339262	0	True				
ANR	361700	EqualityExpression	sufsel == H_BIT		339262	0		==			
ANR	361701	Identifier	sufsel		339262	0					
ANR	361702	Identifier	H_BIT		339262	1					
ANR	361703	CompoundStatement		3992:24:86258:86258	339262	1					
ANR	361704	ExpressionStatement	ao -> o = 0x00fa80f0	5285:4:112123:112141	339262	0	True				
ANR	361705	AssignmentExpression	ao -> o = 0x00fa80f0		339262	0		=			
ANR	361706	PtrMemberAccess	ao -> o		339262	0					
ANR	361707	Identifier	ao		339262	0					
ANR	361708	Identifier	o		339262	1					
ANR	361709	PrimaryExpression	0x00fa80f0		339262	1					
ANR	361710	ElseStatement	else		339262	0					
ANR	361711	CompoundStatement		3994:10:86294:86294	339262	0					
ANR	361712	ReturnStatement	return - 1 ;	5287:4:112159:112168	339262	0	True				
ANR	361713	UnaryOperationExpression	- 1		339262	0					
ANR	361714	UnaryOperator	-		339262	0					
ANR	361715	PrimaryExpression	1		339262	1					
ANR	361716	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5290:3:112179:112213	339262	4	True				
ANR	361717	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		339262	0		|=			
ANR	361718	PtrMemberAccess	ao -> o		339262	0					
ANR	361719	Identifier	ao		339262	0					
ANR	361720	Identifier	o		339262	1					
ANR	361721	ShiftExpression	( shift & 0x00000060 ) << 7		339262	1		<<			
ANR	361722	BitAndExpression	shift & 0x00000060		339262	0		&			
ANR	361723	Identifier	shift		339262	0					
ANR	361724	PrimaryExpression	0x00000060		339262	1					
ANR	361725	PrimaryExpression	7		339262	1					
ANR	361726	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5291:3:112218:112254	339262	5	True				
ANR	361727	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	361728	Callee	std_32bit_3reg		339262	0					
ANR	361729	Identifier	std_32bit_3reg		339262	0					
ANR	361730	ArgumentList	ao		339262	1					
ANR	361731	Argument	ao		339262	0					
ANR	361732	Identifier	ao		339262	0					
ANR	361733	Argument	m		339262	1					
ANR	361734	Identifier	m		339262	0					
ANR	361735	Argument	false		339262	2					
ANR	361736	Identifier	false		339262	0					
ANR	361737	BreakStatement	break ;	5293:3:112271:112276	339262	8	True				
ANR	361738	ElseStatement	else		339262	0					
ANR	361739	IfStatement	"if ( ( m = opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	361740	Condition	"m = opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5296:5:112295:112351	339262	0	True				
ANR	361741	AssignmentExpression	"m = opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	361742	Identifier	m		339262	0					
ANR	361743	CallExpression	"opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	1					
ANR	361744	Callee	opmask		339262	0					
ANR	361745	Identifier	opmask		339262	0					
ANR	361746	ArgumentList	ao -> op		339262	1					
ANR	361747	Argument	ao -> op		339262	0					
ANR	361748	PtrMemberAccess	ao -> op		339262	0					
ANR	361749	Identifier	ao		339262	0					
ANR	361750	Identifier	op		339262	1					
ANR	361751	Argument	"""sxt"""		339262	1					
ANR	361752	PrimaryExpression	"""sxt"""		339262	0					
ANR	361753	Argument	B_BIT | H_BIT | SIXTEEN_BIT		339262	2					
ANR	361754	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	0		|			
ANR	361755	Identifier	B_BIT		339262	0					
ANR	361756	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361757	Identifier	H_BIT		339262	0					
ANR	361758	Identifier	SIXTEEN_BIT		339262	1					
ANR	361759	CompoundStatement		4006:2:86550:86584	339262	1					
ANR	361760	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5297:2:112358:112405	339262	0	True				
ANR	361761	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	0					
ANR	361762	IdentifierDeclType	ut64		339262	0					
ANR	361763	Identifier	sufsel		339262	1					
ANR	361764	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	361765	Identifier	sufsel		339262	0					
ANR	361766	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	361767	Identifier	m		339262	0					
ANR	361768	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361769	Identifier	B_BIT		339262	0					
ANR	361770	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361771	Identifier	H_BIT		339262	0					
ANR	361772	Identifier	SIXTEEN_BIT		339262	1					
ANR	361773	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5298:2:112409:112443	339262	1	True				
ANR	361774	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	361775	IdentifierDeclType	ut64		339262	0					
ANR	361776	Identifier	argt		339262	1					
ANR	361777	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	361778	Identifier	argt		339262	0					
ANR	361779	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	361780	Callee	thumb_selector		339262	0					
ANR	361781	Identifier	thumb_selector		339262	0					
ANR	361782	ArgumentList	ao -> a		339262	1					
ANR	361783	Argument	ao -> a		339262	0					
ANR	361784	PtrMemberAccess	ao -> a		339262	0					
ANR	361785	Identifier	ao		339262	0					
ANR	361786	Identifier	a		339262	1					
ANR	361787	SwitchStatement	switch ( argt )		339262	2					
ANR	361788	Condition	argt	5299:10:112455:112458	339262	0	True				
ANR	361789	Identifier	argt		339262	0					
ANR	361790	CompoundStatement		4007:16:86602:86602	339262	1					
ANR	361791	Label	case THUMB_REG_REG :	5300:2:112465:112483	339262	0	True				
ANR	361792	Identifier	THUMB_REG_REG		339262	0					
ANR	361793	CompoundStatement		4008:22:86626:86626	339262	1					
ANR	361794	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5301:3:112490:112508	339262	0	True				
ANR	361795	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	361796	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	361797	PtrMemberAccess	ao -> a		339262	0					
ANR	361798	Identifier	ao		339262	0					
ANR	361799	Identifier	a		339262	1					
ANR	361800	PrimaryExpression	2		339262	1					
ANR	361801	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	361802	Label	case THUMB_REG_REG_SHIFT :	5304:2:112554:112578	339262	2	True				
ANR	361803	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	361804	CompoundStatement		4015:3:86792:86830	339262	3					
ANR	361805	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5305:3:112585:112613	339262	0	True				
ANR	361806	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	361807	IdentifierDeclType	ut8		339262	0					
ANR	361808	Identifier	reg1		339262	1					
ANR	361809	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	361810	Identifier	reg1		339262	0					
ANR	361811	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	361812	Callee	getreg		339262	0					
ANR	361813	Identifier	getreg		339262	0					
ANR	361814	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	361815	Argument	ao -> a [ 0 ]		339262	0					
ANR	361816	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	361817	PtrMemberAccess	ao -> a		339262	0					
ANR	361818	Identifier	ao		339262	0					
ANR	361819	Identifier	a		339262	1					
ANR	361820	PrimaryExpression	0		339262	1					
ANR	361821	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5306:3:112618:112646	339262	1	True				
ANR	361822	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	361823	IdentifierDeclType	ut8		339262	0					
ANR	361824	Identifier	reg2		339262	1					
ANR	361825	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	361826	Identifier	reg2		339262	0					
ANR	361827	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	361828	Callee	getreg		339262	0					
ANR	361829	Identifier	getreg		339262	0					
ANR	361830	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	361831	Argument	ao -> a [ 1 ]		339262	0					
ANR	361832	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	361833	PtrMemberAccess	ao -> a		339262	0					
ANR	361834	Identifier	ao		339262	0					
ANR	361835	Identifier	a		339262	1					
ANR	361836	PrimaryExpression	1		339262	1					
ANR	361837	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	5307:3:112651:112689	339262	2	True				
ANR	361838	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	0					
ANR	361839	IdentifierDeclType	ut32		339262	0					
ANR	361840	Identifier	shift		339262	1					
ANR	361841	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	2		=			
ANR	361842	Identifier	shift		339262	0					
ANR	361843	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		339262	1					
ANR	361844	Callee	thumb_getshift		339262	0					
ANR	361845	Identifier	thumb_getshift		339262	0					
ANR	361846	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	361847	Argument	ao -> a [ 2 ]		339262	0					
ANR	361848	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	361849	PtrMemberAccess	ao -> a		339262	0					
ANR	361850	Identifier	ao		339262	0					
ANR	361851	Identifier	a		339262	1					
ANR	361852	PrimaryExpression	2		339262	1					
ANR	361853	IfStatement	if ( ( reg1 > 15 ) && ( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		339262	3					
ANR	361854	Condition	( reg1 > 15 ) && ( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )	5309:7:112699:112780	339262	0	True				
ANR	361855	AndExpression	( reg1 > 15 ) && ( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		339262	0		&&			
ANR	361856	RelationalExpression	reg1 > 15		339262	0		>			
ANR	361857	Identifier	reg1		339262	0					
ANR	361858	PrimaryExpression	15		339262	1					
ANR	361859	AndExpression	( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		339262	1		&&			
ANR	361860	RelationalExpression	reg2 > 15		339262	0		>			
ANR	361861	Identifier	reg2		339262	0					
ANR	361862	PrimaryExpression	15		339262	1					
ANR	361863	AndExpression	( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		339262	1		&&			
ANR	361864	EqualityExpression	shift != 0		339262	0		!=			
ANR	361865	Identifier	shift		339262	0					
ANR	361866	PrimaryExpression	0		339262	1					
ANR	361867	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		339262	1		!=			
ANR	361868	BitAndExpression	shift & 0x0000f010		339262	0		&			
ANR	361869	Identifier	shift		339262	0					
ANR	361870	PrimaryExpression	0x0000f010		339262	1					
ANR	361871	PrimaryExpression	0x00003000		339262	1					
ANR	361872	CompoundStatement		4017:91:86924:86924	339262	1					
ANR	361873	ReturnStatement	return - 1 ;	5310:4:112789:112798	339262	0	True				
ANR	361874	UnaryOperationExpression	- 1		339262	0					
ANR	361875	UnaryOperator	-		339262	0					
ANR	361876	PrimaryExpression	1		339262	1					
ANR	361877	IfStatement	if ( sufsel == B_BIT )		339262	4					
ANR	361878	Condition	sufsel == B_BIT	5313:7:112813:112827	339262	0	True				
ANR	361879	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	361880	Identifier	sufsel		339262	0					
ANR	361881	Identifier	B_BIT		339262	1					
ANR	361882	CompoundStatement		4021:24:86971:86971	339262	1					
ANR	361883	ExpressionStatement	ao -> o = 0x40b2	5314:4:112836:112850	339262	0	True				
ANR	361884	AssignmentExpression	ao -> o = 0x40b2		339262	0		=			
ANR	361885	PtrMemberAccess	ao -> o		339262	0					
ANR	361886	Identifier	ao		339262	0					
ANR	361887	Identifier	o		339262	1					
ANR	361888	PrimaryExpression	0x40b2		339262	1					
ANR	361889	IfStatement	"if ( ( shift == 0 ) && std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	361890	Condition	"( shift == 0 ) && std_16bit_2reg ( ao , m )"	5315:8:112860:112897	339262	0	True				
ANR	361891	AndExpression	"( shift == 0 ) && std_16bit_2reg ( ao , m )"		339262	0		&&			
ANR	361892	EqualityExpression	shift == 0		339262	0		==			
ANR	361893	Identifier	shift		339262	0					
ANR	361894	PrimaryExpression	0		339262	1					
ANR	361895	CallExpression	"std_16bit_2reg ( ao , m )"		339262	1					
ANR	361896	Callee	std_16bit_2reg		339262	0					
ANR	361897	Identifier	std_16bit_2reg		339262	0					
ANR	361898	ArgumentList	ao		339262	1					
ANR	361899	Argument	ao		339262	0					
ANR	361900	Identifier	ao		339262	0					
ANR	361901	Argument	m		339262	1					
ANR	361902	Identifier	m		339262	0					
ANR	361903	CompoundStatement		4023:48:87041:87041	339262	1					
ANR	361904	ReturnStatement	return 2 ;	5316:5:112907:112915	339262	0	True				
ANR	361905	PrimaryExpression	2		339262	0					
ANR	361906	ExpressionStatement	ao -> o = 0x4ffa80f0	5318:4:112927:112945	339262	2	True				
ANR	361907	AssignmentExpression	ao -> o = 0x4ffa80f0		339262	0		=			
ANR	361908	PtrMemberAccess	ao -> o		339262	0					
ANR	361909	Identifier	ao		339262	0					
ANR	361910	Identifier	o		339262	1					
ANR	361911	PrimaryExpression	0x4ffa80f0		339262	1					
ANR	361912	ElseStatement	else		339262	0					
ANR	361913	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		339262	0					
ANR	361914	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5320:7:112964:112994	339262	0	True				
ANR	361915	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		339262	0		==			
ANR	361916	Identifier	sufsel		339262	0					
ANR	361917	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		339262	1		|			
ANR	361918	Identifier	B_BIT		339262	0					
ANR	361919	Identifier	SIXTEEN_BIT		339262	1					
ANR	361920	CompoundStatement		4028:40:87138:87138	339262	1					
ANR	361921	ExpressionStatement	ao -> o = 0x2ffa80f0	5321:4:113003:113021	339262	0	True				
ANR	361922	AssignmentExpression	ao -> o = 0x2ffa80f0		339262	0		=			
ANR	361923	PtrMemberAccess	ao -> o		339262	0					
ANR	361924	Identifier	ao		339262	0					
ANR	361925	Identifier	o		339262	1					
ANR	361926	PrimaryExpression	0x2ffa80f0		339262	1					
ANR	361927	ElseStatement	else		339262	0					
ANR	361928	IfStatement	if ( sufsel == H_BIT )		339262	0					
ANR	361929	Condition	sufsel == H_BIT	5323:7:113040:113054	339262	0	True				
ANR	361930	EqualityExpression	sufsel == H_BIT		339262	0		==			
ANR	361931	Identifier	sufsel		339262	0					
ANR	361932	Identifier	H_BIT		339262	1					
ANR	361933	CompoundStatement		4031:24:87198:87198	339262	1					
ANR	361934	ExpressionStatement	ao -> o = 0x00b2	5324:4:113063:113077	339262	0	True				
ANR	361935	AssignmentExpression	ao -> o = 0x00b2		339262	0		=			
ANR	361936	PtrMemberAccess	ao -> o		339262	0					
ANR	361937	Identifier	ao		339262	0					
ANR	361938	Identifier	o		339262	1					
ANR	361939	PrimaryExpression	0x00b2		339262	1					
ANR	361940	IfStatement	"if ( ( shift == 0 ) && std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	361941	Condition	"( shift == 0 ) && std_16bit_2reg ( ao , m )"	5325:8:113087:113124	339262	0	True				
ANR	361942	AndExpression	"( shift == 0 ) && std_16bit_2reg ( ao , m )"		339262	0		&&			
ANR	361943	EqualityExpression	shift == 0		339262	0		==			
ANR	361944	Identifier	shift		339262	0					
ANR	361945	PrimaryExpression	0		339262	1					
ANR	361946	CallExpression	"std_16bit_2reg ( ao , m )"		339262	1					
ANR	361947	Callee	std_16bit_2reg		339262	0					
ANR	361948	Identifier	std_16bit_2reg		339262	0					
ANR	361949	ArgumentList	ao		339262	1					
ANR	361950	Argument	ao		339262	0					
ANR	361951	Identifier	ao		339262	0					
ANR	361952	Argument	m		339262	1					
ANR	361953	Identifier	m		339262	0					
ANR	361954	CompoundStatement		4033:48:87268:87268	339262	1					
ANR	361955	ReturnStatement	return 2 ;	5326:5:113134:113142	339262	0	True				
ANR	361956	PrimaryExpression	2		339262	0					
ANR	361957	ExpressionStatement	ao -> o = 0x0ffa80f0	5328:4:113154:113172	339262	2	True				
ANR	361958	AssignmentExpression	ao -> o = 0x0ffa80f0		339262	0		=			
ANR	361959	PtrMemberAccess	ao -> o		339262	0					
ANR	361960	Identifier	ao		339262	0					
ANR	361961	Identifier	o		339262	1					
ANR	361962	PrimaryExpression	0x0ffa80f0		339262	1					
ANR	361963	ElseStatement	else		339262	0					
ANR	361964	CompoundStatement		4037:10:87325:87325	339262	0					
ANR	361965	ReturnStatement	return - 1 ;	5330:4:113190:113199	339262	0	True				
ANR	361966	UnaryOperationExpression	- 1		339262	0					
ANR	361967	UnaryOperator	-		339262	0					
ANR	361968	PrimaryExpression	1		339262	1					
ANR	361969	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5333:3:113210:113244	339262	5	True				
ANR	361970	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		339262	0		|=			
ANR	361971	PtrMemberAccess	ao -> o		339262	0					
ANR	361972	Identifier	ao		339262	0					
ANR	361973	Identifier	o		339262	1					
ANR	361974	ShiftExpression	( shift & 0x00000060 ) << 7		339262	1		<<			
ANR	361975	BitAndExpression	shift & 0x00000060		339262	0		&			
ANR	361976	Identifier	shift		339262	0					
ANR	361977	PrimaryExpression	0x00000060		339262	1					
ANR	361978	PrimaryExpression	7		339262	1					
ANR	361979	ExpressionStatement	ao -> o |= reg1	5334:3:113249:113262	339262	6	True				
ANR	361980	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	361981	PtrMemberAccess	ao -> o		339262	0					
ANR	361982	Identifier	ao		339262	0					
ANR	361983	Identifier	o		339262	1					
ANR	361984	Identifier	reg1		339262	1					
ANR	361985	ExpressionStatement	ao -> o |= reg2 << 8	5335:3:113267:113285	339262	7	True				
ANR	361986	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	361987	PtrMemberAccess	ao -> o		339262	0					
ANR	361988	Identifier	ao		339262	0					
ANR	361989	Identifier	o		339262	1					
ANR	361990	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	361991	Identifier	reg2		339262	0					
ANR	361992	PrimaryExpression	8		339262	1					
ANR	361993	ReturnStatement	return 4 ;	5336:3:113290:113298	339262	8	True				
ANR	361994	PrimaryExpression	4		339262	0					
ANR	361995	BreakStatement	break ;	5338:3:113315:113320	339262	4	True				
ANR	361996	ElseStatement	else		339262	0					
ANR	361997	IfStatement	"if ( ( m = opmask ( ao -> op , ""tb"" , B_BIT | H_BIT ) ) )"		339262	0					
ANR	361998	Condition	"m = opmask ( ao -> op , ""tb"" , B_BIT | H_BIT )"	5341:5:113339:113380	339262	0	True				
ANR	361999	AssignmentExpression	"m = opmask ( ao -> op , ""tb"" , B_BIT | H_BIT )"		339262	0		=			
ANR	362000	Identifier	m		339262	0					
ANR	362001	CallExpression	"opmask ( ao -> op , ""tb"" , B_BIT | H_BIT )"		339262	1					
ANR	362002	Callee	opmask		339262	0					
ANR	362003	Identifier	opmask		339262	0					
ANR	362004	ArgumentList	ao -> op		339262	1					
ANR	362005	Argument	ao -> op		339262	0					
ANR	362006	PtrMemberAccess	ao -> op		339262	0					
ANR	362007	Identifier	ao		339262	0					
ANR	362008	Identifier	op		339262	1					
ANR	362009	Argument	"""tb"""		339262	1					
ANR	362010	PrimaryExpression	"""tb"""		339262	0					
ANR	362011	Argument	B_BIT | H_BIT		339262	2					
ANR	362012	InclusiveOrExpression	B_BIT | H_BIT		339262	0		|			
ANR	362013	Identifier	B_BIT		339262	0					
ANR	362014	Identifier	H_BIT		339262	1					
ANR	362015	CompoundStatement		4051:2:87566:87599	339262	1					
ANR	362016	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5342:2:113387:113421	339262	0	True				
ANR	362017	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362018	IdentifierDeclType	ut64		339262	0					
ANR	362019	Identifier	argt		339262	1					
ANR	362020	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362021	Identifier	argt		339262	0					
ANR	362022	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362023	Callee	thumb_selector		339262	0					
ANR	362024	Identifier	thumb_selector		339262	0					
ANR	362025	ArgumentList	ao -> a		339262	1					
ANR	362026	Argument	ao -> a		339262	0					
ANR	362027	PtrMemberAccess	ao -> a		339262	0					
ANR	362028	Identifier	ao		339262	0					
ANR	362029	Identifier	a		339262	1					
ANR	362030	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT ) ;	5343:2:113425:113458	339262	1	True				
ANR	362031	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT )		339262	0					
ANR	362032	IdentifierDeclType	ut64		339262	0					
ANR	362033	Identifier	sufsel		339262	1					
ANR	362034	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT )		339262	2		=			
ANR	362035	Identifier	sufsel		339262	0					
ANR	362036	BitAndExpression	m & ( B_BIT | H_BIT )		339262	1		&			
ANR	362037	Identifier	m		339262	0					
ANR	362038	InclusiveOrExpression	B_BIT | H_BIT		339262	1		|			
ANR	362039	Identifier	B_BIT		339262	0					
ANR	362040	Identifier	H_BIT		339262	1					
ANR	362041	SwitchStatement	switch ( argt )		339262	2					
ANR	362042	Condition	argt	5344:10:113470:113473	339262	0	True				
ANR	362043	Identifier	argt		339262	0					
ANR	362044	CompoundStatement		4052:16:87617:87617	339262	1					
ANR	362045	Label	case THUMB_BRACKREG_REGBRACK :	5345:2:113480:113508	339262	0	True				
ANR	362046	Identifier	THUMB_BRACKREG_REGBRACK		339262	0					
ANR	362047	CompoundStatement		4055:3:87697:87731	339262	1					
ANR	362048	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	5346:3:113515:113551	339262	0	True				
ANR	362049	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	0					
ANR	362050	IdentifierDeclType	ut8		339262	0					
ANR	362051	Identifier	reg1		339262	1					
ANR	362052	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	2		=			
ANR	362053	Identifier	reg1		339262	0					
ANR	362054	CallExpression	getregmemstart ( ao -> a [ 0 ] )		339262	1					
ANR	362055	Callee	getregmemstart		339262	0					
ANR	362056	Identifier	getregmemstart		339262	0					
ANR	362057	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	362058	Argument	ao -> a [ 0 ]		339262	0					
ANR	362059	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	362060	PtrMemberAccess	ao -> a		339262	0					
ANR	362061	Identifier	ao		339262	0					
ANR	362062	Identifier	a		339262	1					
ANR	362063	PrimaryExpression	0		339262	1					
ANR	362064	IdentifierDeclStatement	ut8 reg2 = getregmemend ( ao -> a [ 1 ] ) ;	5347:3:113556:113590	339262	1	True				
ANR	362065	IdentifierDecl	reg2 = getregmemend ( ao -> a [ 1 ] )		339262	0					
ANR	362066	IdentifierDeclType	ut8		339262	0					
ANR	362067	Identifier	reg2		339262	1					
ANR	362068	AssignmentExpression	reg2 = getregmemend ( ao -> a [ 1 ] )		339262	2		=			
ANR	362069	Identifier	reg2		339262	0					
ANR	362070	CallExpression	getregmemend ( ao -> a [ 1 ] )		339262	1					
ANR	362071	Callee	getregmemend		339262	0					
ANR	362072	Identifier	getregmemend		339262	0					
ANR	362073	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	362074	Argument	ao -> a [ 1 ]		339262	0					
ANR	362075	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362076	PtrMemberAccess	ao -> a		339262	0					
ANR	362077	Identifier	ao		339262	0					
ANR	362078	Identifier	a		339262	1					
ANR	362079	PrimaryExpression	1		339262	1					
ANR	362080	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		339262	2					
ANR	362081	Condition	( reg1 > 15 ) || ( reg2 > 15 )	5349:7:113600:113625	339262	0	True				
ANR	362082	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	362083	RelationalExpression	reg1 > 15		339262	0		>			
ANR	362084	Identifier	reg1		339262	0					
ANR	362085	PrimaryExpression	15		339262	1					
ANR	362086	RelationalExpression	reg2 > 15		339262	1		>			
ANR	362087	Identifier	reg2		339262	0					
ANR	362088	PrimaryExpression	15		339262	1					
ANR	362089	CompoundStatement		4057:35:87769:87769	339262	1					
ANR	362090	ReturnStatement	return - 1 ;	5350:4:113634:113643	339262	0	True				
ANR	362091	UnaryOperationExpression	- 1		339262	0					
ANR	362092	UnaryOperator	-		339262	0					
ANR	362093	PrimaryExpression	1		339262	1					
ANR	362094	IfStatement	if ( sufsel == B_BIT )		339262	3					
ANR	362095	Condition	sufsel == B_BIT	5353:7:113658:113672	339262	0	True				
ANR	362096	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	362097	Identifier	sufsel		339262	0					
ANR	362098	Identifier	B_BIT		339262	1					
ANR	362099	CompoundStatement		4061:24:87816:87816	339262	1					
ANR	362100	ExpressionStatement	ao -> o = 0xd0e800f0	5354:4:113681:113699	339262	0	True				
ANR	362101	AssignmentExpression	ao -> o = 0xd0e800f0		339262	0		=			
ANR	362102	PtrMemberAccess	ao -> o		339262	0					
ANR	362103	Identifier	ao		339262	0					
ANR	362104	Identifier	o		339262	1					
ANR	362105	PrimaryExpression	0xd0e800f0		339262	1					
ANR	362106	ExpressionStatement	ao -> o |= reg1 << 24	5355:4:113705:113724	339262	1	True				
ANR	362107	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	362108	PtrMemberAccess	ao -> o		339262	0					
ANR	362109	Identifier	ao		339262	0					
ANR	362110	Identifier	o		339262	1					
ANR	362111	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	362112	Identifier	reg1		339262	0					
ANR	362113	PrimaryExpression	24		339262	1					
ANR	362114	ExpressionStatement	ao -> o |= reg2 << 8	5356:4:113730:113748	339262	2	True				
ANR	362115	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	362116	PtrMemberAccess	ao -> o		339262	0					
ANR	362117	Identifier	ao		339262	0					
ANR	362118	Identifier	o		339262	1					
ANR	362119	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	362120	Identifier	reg2		339262	0					
ANR	362121	PrimaryExpression	8		339262	1					
ANR	362122	ReturnStatement	return 4 ;	5357:4:113754:113762	339262	3	True				
ANR	362123	PrimaryExpression	4		339262	0					
ANR	362124	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	5359:3:113772:113810	339262	4	True				
ANR	362125	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		339262	0		=			
ANR	362126	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		339262	0					
ANR	362127	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362128	PtrMemberAccess	ao -> a		339262	0					
ANR	362129	Identifier	ao		339262	0					
ANR	362130	Identifier	a		339262	1					
ANR	362131	PrimaryExpression	1		339262	1					
ANR	362132	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		339262	1		-			
ANR	362133	CallExpression	strlen ( ao -> a [ 1 ] )		339262	0					
ANR	362134	Callee	strlen		339262	0					
ANR	362135	Identifier	strlen		339262	0					
ANR	362136	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	362137	Argument	ao -> a [ 1 ]		339262	0					
ANR	362138	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362139	PtrMemberAccess	ao -> a		339262	0					
ANR	362140	Identifier	ao		339262	0					
ANR	362141	Identifier	a		339262	1					
ANR	362142	PrimaryExpression	1		339262	1					
ANR	362143	PrimaryExpression	1		339262	1					
ANR	362144	PrimaryExpression	'\\0'		339262	1					
ANR	362145	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 1]"""	5360:3:113815:113834	339262	5	True				
ANR	362146	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 1]"""		339262	0		=			
ANR	362147	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	362148	PtrMemberAccess	ao -> a		339262	0					
ANR	362149	Identifier	ao		339262	0					
ANR	362150	Identifier	a		339262	1					
ANR	362151	PrimaryExpression	2		339262	1					
ANR	362152	PrimaryExpression	"""lsl 1]"""		339262	1					
ANR	362153	Label	case THUMB_BRACKREG_REG_SHIFTBRACK :	5363:2:113880:113914	339262	2	True				
ANR	362154	Identifier	THUMB_BRACKREG_REG_SHIFTBRACK		339262	0					
ANR	362155	CompoundStatement		4074:3:88136:88174	339262	3					
ANR	362156	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	5364:3:113921:113957	339262	0	True				
ANR	362157	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	0					
ANR	362158	IdentifierDeclType	ut8		339262	0					
ANR	362159	Identifier	reg1		339262	1					
ANR	362160	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		339262	2		=			
ANR	362161	Identifier	reg1		339262	0					
ANR	362162	CallExpression	getregmemstart ( ao -> a [ 0 ] )		339262	1					
ANR	362163	Callee	getregmemstart		339262	0					
ANR	362164	Identifier	getregmemstart		339262	0					
ANR	362165	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	362166	Argument	ao -> a [ 0 ]		339262	0					
ANR	362167	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	362168	PtrMemberAccess	ao -> a		339262	0					
ANR	362169	Identifier	ao		339262	0					
ANR	362170	Identifier	a		339262	1					
ANR	362171	PrimaryExpression	0		339262	1					
ANR	362172	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5365:3:113962:113990	339262	1	True				
ANR	362173	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	362174	IdentifierDeclType	ut8		339262	0					
ANR	362175	Identifier	reg2		339262	1					
ANR	362176	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	362177	Identifier	reg2		339262	0					
ANR	362178	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	362179	Callee	getreg		339262	0					
ANR	362180	Identifier	getreg		339262	0					
ANR	362181	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	362182	Argument	ao -> a [ 1 ]		339262	0					
ANR	362183	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362184	PtrMemberAccess	ao -> a		339262	0					
ANR	362185	Identifier	ao		339262	0					
ANR	362186	Identifier	a		339262	1					
ANR	362187	PrimaryExpression	1		339262	1					
ANR	362188	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 2 ] ) ;	5366:3:113995:114033	339262	2	True				
ANR	362189	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 2 ] )		339262	0					
ANR	362190	IdentifierDeclType	ut32		339262	0					
ANR	362191	Identifier	shift		339262	1					
ANR	362192	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 2 ] )		339262	2		=			
ANR	362193	Identifier	shift		339262	0					
ANR	362194	CallExpression	getshiftmemend ( ao -> a [ 2 ] )		339262	1					
ANR	362195	Callee	getshiftmemend		339262	0					
ANR	362196	Identifier	getshiftmemend		339262	0					
ANR	362197	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	362198	Argument	ao -> a [ 2 ]		339262	0					
ANR	362199	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	362200	PtrMemberAccess	ao -> a		339262	0					
ANR	362201	Identifier	ao		339262	0					
ANR	362202	Identifier	a		339262	1					
ANR	362203	PrimaryExpression	2		339262	1					
ANR	362204	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT ) )		339262	3					
ANR	362205	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT )	5368:7:114046:114117	339262	0	True				
ANR	362206	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT )		339262	0		||			
ANR	362207	RelationalExpression	reg1 > 15		339262	0		>			
ANR	362208	Identifier	reg1		339262	0					
ANR	362209	PrimaryExpression	15		339262	1					
ANR	362210	OrExpression	( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT )		339262	1		||			
ANR	362211	RelationalExpression	reg2 > 15		339262	0		>			
ANR	362212	Identifier	reg2		339262	0					
ANR	362213	PrimaryExpression	15		339262	1					
ANR	362214	OrExpression	( shift != 0x00004000 ) || ( sufsel != H_BIT )		339262	1		||			
ANR	362215	EqualityExpression	shift != 0x00004000		339262	0		!=			
ANR	362216	Identifier	shift		339262	0					
ANR	362217	PrimaryExpression	0x00004000		339262	1					
ANR	362218	EqualityExpression	sufsel != H_BIT		339262	1		!=			
ANR	362219	Identifier	sufsel		339262	0					
ANR	362220	Identifier	H_BIT		339262	1					
ANR	362221	CompoundStatement		4076:81:88261:88261	339262	1					
ANR	362222	ReturnStatement	return - 1 ;	5369:4:114126:114135	339262	0	True				
ANR	362223	UnaryOperationExpression	- 1		339262	0					
ANR	362224	UnaryOperator	-		339262	0					
ANR	362225	PrimaryExpression	1		339262	1					
ANR	362226	ExpressionStatement	ao -> o = 0xd0e810f0	5372:3:114146:114164	339262	4	True				
ANR	362227	AssignmentExpression	ao -> o = 0xd0e810f0		339262	0		=			
ANR	362228	PtrMemberAccess	ao -> o		339262	0					
ANR	362229	Identifier	ao		339262	0					
ANR	362230	Identifier	o		339262	1					
ANR	362231	PrimaryExpression	0xd0e810f0		339262	1					
ANR	362232	ExpressionStatement	ao -> o |= reg1 << 24	5373:3:114169:114188	339262	5	True				
ANR	362233	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	362234	PtrMemberAccess	ao -> o		339262	0					
ANR	362235	Identifier	ao		339262	0					
ANR	362236	Identifier	o		339262	1					
ANR	362237	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	362238	Identifier	reg1		339262	0					
ANR	362239	PrimaryExpression	24		339262	1					
ANR	362240	ExpressionStatement	ao -> o |= reg2 << 8	5374:3:114193:114211	339262	6	True				
ANR	362241	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	362242	PtrMemberAccess	ao -> o		339262	0					
ANR	362243	Identifier	ao		339262	0					
ANR	362244	Identifier	o		339262	1					
ANR	362245	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	362246	Identifier	reg2		339262	0					
ANR	362247	PrimaryExpression	8		339262	1					
ANR	362248	ReturnStatement	return 4 ;	5375:3:114216:114224	339262	7	True				
ANR	362249	PrimaryExpression	4		339262	0					
ANR	362250	BreakStatement	break ;	5377:3:114241:114246	339262	4	True				
ANR	362251	Label	default :	5378:2:114250:114257	339262	5	True				
ANR	362252	Identifier	default		339262	0					
ANR	362253	ReturnStatement	return - 1 ;	5379:3:114262:114271	339262	6	True				
ANR	362254	UnaryOperationExpression	- 1		339262	0					
ANR	362255	UnaryOperator	-		339262	0					
ANR	362256	PrimaryExpression	1		339262	1					
ANR	362257	ElseStatement	else		339262	0					
ANR	362258	IfStatement	"if ( ( m = opmask ( ao -> op , ""teq"" , 0 ) ) )"		339262	0					
ANR	362259	Condition	"m = opmask ( ao -> op , ""teq"" , 0 )"	5382:5:114290:114320	339262	0	True				
ANR	362260	AssignmentExpression	"m = opmask ( ao -> op , ""teq"" , 0 )"		339262	0		=			
ANR	362261	Identifier	m		339262	0					
ANR	362262	CallExpression	"opmask ( ao -> op , ""teq"" , 0 )"		339262	1					
ANR	362263	Callee	opmask		339262	0					
ANR	362264	Identifier	opmask		339262	0					
ANR	362265	ArgumentList	ao -> op		339262	1					
ANR	362266	Argument	ao -> op		339262	0					
ANR	362267	PtrMemberAccess	ao -> op		339262	0					
ANR	362268	Identifier	ao		339262	0					
ANR	362269	Identifier	op		339262	1					
ANR	362270	Argument	"""teq"""		339262	1					
ANR	362271	PrimaryExpression	"""teq"""		339262	0					
ANR	362272	Argument	0		339262	2					
ANR	362273	PrimaryExpression	0		339262	0					
ANR	362274	CompoundStatement		4091:2:88468:88502	339262	1					
ANR	362275	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5383:2:114327:114361	339262	0	True				
ANR	362276	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362277	IdentifierDeclType	ut64		339262	0					
ANR	362278	Identifier	argt		339262	1					
ANR	362279	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362280	Identifier	argt		339262	0					
ANR	362281	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362282	Callee	thumb_selector		339262	0					
ANR	362283	Identifier	thumb_selector		339262	0					
ANR	362284	ArgumentList	ao -> a		339262	1					
ANR	362285	Argument	ao -> a		339262	0					
ANR	362286	PtrMemberAccess	ao -> a		339262	0					
ANR	362287	Identifier	ao		339262	0					
ANR	362288	Identifier	a		339262	1					
ANR	362289	SwitchStatement	switch ( argt )		339262	1					
ANR	362290	Condition	argt	5384:10:114373:114376	339262	0	True				
ANR	362291	Identifier	argt		339262	0					
ANR	362292	CompoundStatement		4092:16:88520:88520	339262	1					
ANR	362293	Label	case THUMB_REG_CONST :	5385:2:114383:114403	339262	0	True				
ANR	362294	Identifier	THUMB_REG_CONST		339262	0					
ANR	362295	CompoundStatement		4096:3:88599:88633	339262	1					
ANR	362296	IdentifierDeclStatement	ut8 reg = getreg ( ao -> a [ 0 ] ) ;	5386:3:114410:114437	339262	0	True				
ANR	362297	IdentifierDecl	reg = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	362298	IdentifierDeclType	ut8		339262	0					
ANR	362299	Identifier	reg		339262	1					
ANR	362300	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	362301	Identifier	reg		339262	0					
ANR	362302	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	362303	Callee	getreg		339262	0					
ANR	362304	Identifier	getreg		339262	0					
ANR	362305	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	362306	Argument	ao -> a [ 0 ]		339262	0					
ANR	362307	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	362308	PtrMemberAccess	ao -> a		339262	0					
ANR	362309	Identifier	ao		339262	0					
ANR	362310	Identifier	a		339262	1					
ANR	362311	PrimaryExpression	0		339262	1					
ANR	362312	ExpressionStatement	err = false	5387:3:114442:114453	339262	1	True				
ANR	362313	AssignmentExpression	err = false		339262	0		=			
ANR	362314	Identifier	err		339262	0					
ANR	362315	Identifier	false		339262	1					
ANR	362316	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	5388:3:114458:114492	339262	2	True				
ANR	362317	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		339262	0					
ANR	362318	IdentifierDeclType	ut32		339262	0					
ANR	362319	Identifier	num		339262	1					
ANR	362320	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		339262	2		=			
ANR	362321	Identifier	num		339262	0					
ANR	362322	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		339262	1					
ANR	362323	Callee	getthimmed12		339262	0					
ANR	362324	Identifier	getthimmed12		339262	0					
ANR	362325	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	362326	Argument	ao -> a [ 1 ]		339262	0					
ANR	362327	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362328	PtrMemberAccess	ao -> a		339262	0					
ANR	362329	Identifier	ao		339262	0					
ANR	362330	Identifier	a		339262	1					
ANR	362331	PrimaryExpression	1		339262	1					
ANR	362332	IfStatement	if ( err || ( reg > 15 ) )		339262	3					
ANR	362333	Condition	err || ( reg > 15 )	5390:7:114502:114518	339262	0	True				
ANR	362334	OrExpression	err || ( reg > 15 )		339262	0		||			
ANR	362335	Identifier	err		339262	0					
ANR	362336	RelationalExpression	reg > 15		339262	1		>			
ANR	362337	Identifier	reg		339262	0					
ANR	362338	PrimaryExpression	15		339262	1					
ANR	362339	CompoundStatement		4098:26:88662:88662	339262	1					
ANR	362340	ReturnStatement	return - 1 ;	5391:4:114527:114536	339262	0	True				
ANR	362341	UnaryOperationExpression	- 1		339262	0					
ANR	362342	UnaryOperator	-		339262	0					
ANR	362343	PrimaryExpression	1		339262	1					
ANR	362344	ExpressionStatement	ao -> o = 0x90f0000f	5394:3:114547:114565	339262	4	True				
ANR	362345	AssignmentExpression	ao -> o = 0x90f0000f		339262	0		=			
ANR	362346	PtrMemberAccess	ao -> o		339262	0					
ANR	362347	Identifier	ao		339262	0					
ANR	362348	Identifier	o		339262	1					
ANR	362349	PrimaryExpression	0x90f0000f		339262	1					
ANR	362350	ExpressionStatement	ao -> o |= reg << 24	5395:3:114570:114588	339262	5	True				
ANR	362351	AssignmentExpression	ao -> o |= reg << 24		339262	0		|=			
ANR	362352	PtrMemberAccess	ao -> o		339262	0					
ANR	362353	Identifier	ao		339262	0					
ANR	362354	Identifier	o		339262	1					
ANR	362355	ShiftExpression	reg << 24		339262	1		<<			
ANR	362356	Identifier	reg		339262	0					
ANR	362357	PrimaryExpression	24		339262	1					
ANR	362358	ExpressionStatement	ao -> o |= num	5396:3:114593:114605	339262	6	True				
ANR	362359	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	362360	PtrMemberAccess	ao -> o		339262	0					
ANR	362361	Identifier	ao		339262	0					
ANR	362362	Identifier	o		339262	1					
ANR	362363	Identifier	num		339262	1					
ANR	362364	ReturnStatement	return 4 ;	5397:3:114610:114618	339262	7	True				
ANR	362365	PrimaryExpression	4		339262	0					
ANR	362366	BreakStatement	break ;	5399:3:114635:114640	339262	2	True				
ANR	362367	Label	case THUMB_REG_REG :	5400:2:114644:114662	339262	3	True				
ANR	362368	Identifier	THUMB_REG_REG		339262	0					
ANR	362369	CompoundStatement		4108:22:88805:88805	339262	4					
ANR	362370	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5401:3:114669:114687	339262	0	True				
ANR	362371	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	362372	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	362373	PtrMemberAccess	ao -> a		339262	0					
ANR	362374	Identifier	ao		339262	0					
ANR	362375	Identifier	a		339262	1					
ANR	362376	PrimaryExpression	2		339262	1					
ANR	362377	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	362378	Label	case THUMB_REG_REG_SHIFT :	5404:2:114733:114757	339262	5	True				
ANR	362379	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	362380	CompoundStatement		4112:28:88900:88900	339262	6					
ANR	362381	ExpressionStatement	ao -> o = 0x90ea000f	5405:3:114764:114782	339262	0	True				
ANR	362382	AssignmentExpression	ao -> o = 0x90ea000f		339262	0		=			
ANR	362383	PtrMemberAccess	ao -> o		339262	0					
ANR	362384	Identifier	ao		339262	0					
ANR	362385	Identifier	o		339262	1					
ANR	362386	PrimaryExpression	0x90ea000f		339262	1					
ANR	362387	ReturnStatement	"return std_32bit_2reg ( ao , m , true ) ;"	5406:3:114787:114822	339262	1	True				
ANR	362388	CallExpression	"std_32bit_2reg ( ao , m , true )"		339262	0					
ANR	362389	Callee	std_32bit_2reg		339262	0					
ANR	362390	Identifier	std_32bit_2reg		339262	0					
ANR	362391	ArgumentList	ao		339262	1					
ANR	362392	Argument	ao		339262	0					
ANR	362393	Identifier	ao		339262	0					
ANR	362394	Argument	m		339262	1					
ANR	362395	Identifier	m		339262	0					
ANR	362396	Argument	true		339262	2					
ANR	362397	Identifier	true		339262	0					
ANR	362398	BreakStatement	break ;	5408:3:114839:114844	339262	7	True				
ANR	362399	Label	default :	5409:2:114848:114855	339262	8	True				
ANR	362400	Identifier	default		339262	0					
ANR	362401	ReturnStatement	return - 1 ;	5410:3:114860:114869	339262	9	True				
ANR	362402	UnaryOperationExpression	- 1		339262	0					
ANR	362403	UnaryOperator	-		339262	0					
ANR	362404	PrimaryExpression	1		339262	1					
ANR	362405	ElseStatement	else		339262	0					
ANR	362406	IfStatement	"if ( ( m = opmask ( ao -> op , ""tst"" , 0 ) ) )"		339262	0					
ANR	362407	Condition	"m = opmask ( ao -> op , ""tst"" , 0 )"	5413:5:114888:114918	339262	0	True				
ANR	362408	AssignmentExpression	"m = opmask ( ao -> op , ""tst"" , 0 )"		339262	0		=			
ANR	362409	Identifier	m		339262	0					
ANR	362410	CallExpression	"opmask ( ao -> op , ""tst"" , 0 )"		339262	1					
ANR	362411	Callee	opmask		339262	0					
ANR	362412	Identifier	opmask		339262	0					
ANR	362413	ArgumentList	ao -> op		339262	1					
ANR	362414	Argument	ao -> op		339262	0					
ANR	362415	PtrMemberAccess	ao -> op		339262	0					
ANR	362416	Identifier	ao		339262	0					
ANR	362417	Identifier	op		339262	1					
ANR	362418	Argument	"""tst"""		339262	1					
ANR	362419	PrimaryExpression	"""tst"""		339262	0					
ANR	362420	Argument	0		339262	2					
ANR	362421	PrimaryExpression	0		339262	0					
ANR	362422	CompoundStatement		4122:2:89066:89100	339262	1					
ANR	362423	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5414:2:114925:114959	339262	0	True				
ANR	362424	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362425	IdentifierDeclType	ut64		339262	0					
ANR	362426	Identifier	argt		339262	1					
ANR	362427	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362428	Identifier	argt		339262	0					
ANR	362429	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362430	Callee	thumb_selector		339262	0					
ANR	362431	Identifier	thumb_selector		339262	0					
ANR	362432	ArgumentList	ao -> a		339262	1					
ANR	362433	Argument	ao -> a		339262	0					
ANR	362434	PtrMemberAccess	ao -> a		339262	0					
ANR	362435	Identifier	ao		339262	0					
ANR	362436	Identifier	a		339262	1					
ANR	362437	SwitchStatement	switch ( argt )		339262	1					
ANR	362438	Condition	argt	5415:10:114971:114974	339262	0	True				
ANR	362439	Identifier	argt		339262	0					
ANR	362440	CompoundStatement		4123:16:89118:89118	339262	1					
ANR	362441	Label	case THUMB_REG_CONST :	5416:2:114981:115001	339262	0	True				
ANR	362442	Identifier	THUMB_REG_CONST		339262	0					
ANR	362443	CompoundStatement		4127:3:89198:89232	339262	1					
ANR	362444	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5417:3:115008:115036	339262	0	True				
ANR	362445	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	362446	IdentifierDeclType	ut8		339262	0					
ANR	362447	Identifier	reg1		339262	1					
ANR	362448	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	362449	Identifier	reg1		339262	0					
ANR	362450	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	362451	Callee	getreg		339262	0					
ANR	362452	Identifier	getreg		339262	0					
ANR	362453	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	362454	Argument	ao -> a [ 0 ]		339262	0					
ANR	362455	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	362456	PtrMemberAccess	ao -> a		339262	0					
ANR	362457	Identifier	ao		339262	0					
ANR	362458	Identifier	a		339262	1					
ANR	362459	PrimaryExpression	0		339262	1					
ANR	362460	ExpressionStatement	err = false	5418:3:115041:115052	339262	1	True				
ANR	362461	AssignmentExpression	err = false		339262	0		=			
ANR	362462	Identifier	err		339262	0					
ANR	362463	Identifier	false		339262	1					
ANR	362464	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	5419:3:115057:115091	339262	2	True				
ANR	362465	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		339262	0					
ANR	362466	IdentifierDeclType	ut32		339262	0					
ANR	362467	Identifier	num		339262	1					
ANR	362468	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		339262	2		=			
ANR	362469	Identifier	num		339262	0					
ANR	362470	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		339262	1					
ANR	362471	Callee	getthimmed12		339262	0					
ANR	362472	Identifier	getthimmed12		339262	0					
ANR	362473	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	362474	Argument	ao -> a [ 1 ]		339262	0					
ANR	362475	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362476	PtrMemberAccess	ao -> a		339262	0					
ANR	362477	Identifier	ao		339262	0					
ANR	362478	Identifier	a		339262	1					
ANR	362479	PrimaryExpression	1		339262	1					
ANR	362480	IfStatement	if ( err || ( reg1 > 15 ) )		339262	3					
ANR	362481	Condition	err || ( reg1 > 15 )	5421:7:115101:115118	339262	0	True				
ANR	362482	OrExpression	err || ( reg1 > 15 )		339262	0		||			
ANR	362483	Identifier	err		339262	0					
ANR	362484	RelationalExpression	reg1 > 15		339262	1		>			
ANR	362485	Identifier	reg1		339262	0					
ANR	362486	PrimaryExpression	15		339262	1					
ANR	362487	CompoundStatement		4129:27:89262:89262	339262	1					
ANR	362488	ReturnStatement	return - 1 ;	5422:4:115127:115136	339262	0	True				
ANR	362489	UnaryOperationExpression	- 1		339262	0					
ANR	362490	UnaryOperator	-		339262	0					
ANR	362491	PrimaryExpression	1		339262	1					
ANR	362492	ExpressionStatement	ao -> o = 0x10f0000f	5425:3:115147:115165	339262	4	True				
ANR	362493	AssignmentExpression	ao -> o = 0x10f0000f		339262	0		=			
ANR	362494	PtrMemberAccess	ao -> o		339262	0					
ANR	362495	Identifier	ao		339262	0					
ANR	362496	Identifier	o		339262	1					
ANR	362497	PrimaryExpression	0x10f0000f		339262	1					
ANR	362498	ExpressionStatement	ao -> o |= reg1 << 24	5426:3:115170:115189	339262	5	True				
ANR	362499	AssignmentExpression	ao -> o |= reg1 << 24		339262	0		|=			
ANR	362500	PtrMemberAccess	ao -> o		339262	0					
ANR	362501	Identifier	ao		339262	0					
ANR	362502	Identifier	o		339262	1					
ANR	362503	ShiftExpression	reg1 << 24		339262	1		<<			
ANR	362504	Identifier	reg1		339262	0					
ANR	362505	PrimaryExpression	24		339262	1					
ANR	362506	ExpressionStatement	ao -> o |= num	5427:3:115194:115206	339262	6	True				
ANR	362507	AssignmentExpression	ao -> o |= num		339262	0		|=			
ANR	362508	PtrMemberAccess	ao -> o		339262	0					
ANR	362509	Identifier	ao		339262	0					
ANR	362510	Identifier	o		339262	1					
ANR	362511	Identifier	num		339262	1					
ANR	362512	ReturnStatement	return 4 ;	5428:3:115211:115219	339262	7	True				
ANR	362513	PrimaryExpression	4		339262	0					
ANR	362514	BreakStatement	break ;	5430:3:115236:115241	339262	2	True				
ANR	362515	Label	case THUMB_REG_REG :	5431:2:115245:115263	339262	3	True				
ANR	362516	Identifier	THUMB_REG_REG		339262	0					
ANR	362517	CompoundStatement		4139:22:89406:89406	339262	4					
ANR	362518	ExpressionStatement	ao -> o = 0x0042	5432:3:115270:115284	339262	0	True				
ANR	362519	AssignmentExpression	ao -> o = 0x0042		339262	0		=			
ANR	362520	PtrMemberAccess	ao -> o		339262	0					
ANR	362521	Identifier	ao		339262	0					
ANR	362522	Identifier	o		339262	1					
ANR	362523	PrimaryExpression	0x0042		339262	1					
ANR	362524	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	362525	Condition	"std_16bit_2reg ( ao , m )"	5434:7:115297:115318	339262	0	True				
ANR	362526	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	362527	Callee	std_16bit_2reg		339262	0					
ANR	362528	Identifier	std_16bit_2reg		339262	0					
ANR	362529	ArgumentList	ao		339262	1					
ANR	362530	Argument	ao		339262	0					
ANR	362531	Identifier	ao		339262	0					
ANR	362532	Argument	m		339262	1					
ANR	362533	Identifier	m		339262	0					
ANR	362534	CompoundStatement		4142:31:89462:89462	339262	1					
ANR	362535	ReturnStatement	return 2 ;	5435:4:115327:115335	339262	0	True				
ANR	362536	PrimaryExpression	2		339262	0					
ANR	362537	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5438:3:115346:115364	339262	2	True				
ANR	362538	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	362539	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	362540	PtrMemberAccess	ao -> a		339262	0					
ANR	362541	Identifier	ao		339262	0					
ANR	362542	Identifier	a		339262	1					
ANR	362543	PrimaryExpression	2		339262	1					
ANR	362544	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	362545	Label	case THUMB_REG_REG_SHIFT :	5441:2:115410:115434	339262	5	True				
ANR	362546	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	362547	CompoundStatement		4149:28:89577:89577	339262	6					
ANR	362548	ExpressionStatement	ao -> o = 0x10ea000f	5442:3:115441:115459	339262	0	True				
ANR	362549	AssignmentExpression	ao -> o = 0x10ea000f		339262	0		=			
ANR	362550	PtrMemberAccess	ao -> o		339262	0					
ANR	362551	Identifier	ao		339262	0					
ANR	362552	Identifier	o		339262	1					
ANR	362553	PrimaryExpression	0x10ea000f		339262	1					
ANR	362554	ReturnStatement	"return std_32bit_2reg ( ao , m , true ) ;"	5443:3:115464:115499	339262	1	True				
ANR	362555	CallExpression	"std_32bit_2reg ( ao , m , true )"		339262	0					
ANR	362556	Callee	std_32bit_2reg		339262	0					
ANR	362557	Identifier	std_32bit_2reg		339262	0					
ANR	362558	ArgumentList	ao		339262	1					
ANR	362559	Argument	ao		339262	0					
ANR	362560	Identifier	ao		339262	0					
ANR	362561	Argument	m		339262	1					
ANR	362562	Identifier	m		339262	0					
ANR	362563	Argument	true		339262	2					
ANR	362564	Identifier	true		339262	0					
ANR	362565	BreakStatement	break ;	5445:3:115516:115521	339262	7	True				
ANR	362566	Label	default :	5446:2:115525:115532	339262	8	True				
ANR	362567	Identifier	default		339262	0					
ANR	362568	ReturnStatement	return - 1 ;	5447:3:115537:115546	339262	9	True				
ANR	362569	UnaryOperationExpression	- 1		339262	0					
ANR	362570	UnaryOperator	-		339262	0					
ANR	362571	PrimaryExpression	1		339262	1					
ANR	362572	ElseStatement	else		339262	0					
ANR	362573	IfStatement	"if ( ( m = opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	362574	Condition	"m = opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT )"	5450:5:115565:115618	339262	0	True				
ANR	362575	AssignmentExpression	"m = opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	362576	Identifier	m		339262	0					
ANR	362577	CallExpression	"opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	362578	Callee	opmask		339262	0					
ANR	362579	Identifier	opmask		339262	0					
ANR	362580	ArgumentList	ao -> op		339262	1					
ANR	362581	Argument	ao -> op		339262	0					
ANR	362582	PtrMemberAccess	ao -> op		339262	0					
ANR	362583	Identifier	ao		339262	0					
ANR	362584	Identifier	op		339262	1					
ANR	362585	Argument	"""uadd"""		339262	1					
ANR	362586	PrimaryExpression	"""uadd"""		339262	0					
ANR	362587	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	362588	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	362589	Identifier	EIGHT_BIT		339262	0					
ANR	362590	Identifier	SIXTEEN_BIT		339262	1					
ANR	362591	CompoundStatement		4159:2:89766:89800	339262	1					
ANR	362592	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5451:2:115625:115659	339262	0	True				
ANR	362593	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362594	IdentifierDeclType	ut64		339262	0					
ANR	362595	Identifier	argt		339262	1					
ANR	362596	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362597	Identifier	argt		339262	0					
ANR	362598	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362599	Callee	thumb_selector		339262	0					
ANR	362600	Identifier	thumb_selector		339262	0					
ANR	362601	ArgumentList	ao -> a		339262	1					
ANR	362602	Argument	ao -> a		339262	0					
ANR	362603	PtrMemberAccess	ao -> a		339262	0					
ANR	362604	Identifier	ao		339262	0					
ANR	362605	Identifier	a		339262	1					
ANR	362606	SwitchStatement	switch ( argt )		339262	1					
ANR	362607	Condition	argt	5452:10:115671:115674	339262	0	True				
ANR	362608	Identifier	argt		339262	0					
ANR	362609	CompoundStatement		4160:16:89818:89818	339262	1					
ANR	362610	Label	case THUMB_REG_REG :	5453:2:115681:115699	339262	0	True				
ANR	362611	Identifier	THUMB_REG_REG		339262	0					
ANR	362612	CompoundStatement		4161:22:89842:89842	339262	1					
ANR	362613	ExpressionStatement	std_opt_2 ( ao )	5454:3:115706:115720	339262	0	True				
ANR	362614	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	362615	Callee	std_opt_2		339262	0					
ANR	362616	Identifier	std_opt_2		339262	0					
ANR	362617	ArgumentList	ao		339262	1					
ANR	362618	Argument	ao		339262	0					
ANR	362619	Identifier	ao		339262	0					
ANR	362620	Label	case THUMB_REG_REG_REG :	5457:2:115766:115788	339262	2	True				
ANR	362621	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	362622	CompoundStatement		4165:26:89931:89931	339262	3					
ANR	362623	IfStatement	if ( m & EIGHT_BIT )		339262	0					
ANR	362624	Condition	m & EIGHT_BIT	5458:7:115799:115811	339262	0	True				
ANR	362625	BitAndExpression	m & EIGHT_BIT		339262	0		&			
ANR	362626	Identifier	m		339262	0					
ANR	362627	Identifier	EIGHT_BIT		339262	1					
ANR	362628	CompoundStatement		4166:22:89955:89955	339262	1					
ANR	362629	ExpressionStatement	ao -> o = 0x80fa40f0	5459:4:115820:115838	339262	0	True				
ANR	362630	AssignmentExpression	ao -> o = 0x80fa40f0		339262	0		=			
ANR	362631	PtrMemberAccess	ao -> o		339262	0					
ANR	362632	Identifier	ao		339262	0					
ANR	362633	Identifier	o		339262	1					
ANR	362634	PrimaryExpression	0x80fa40f0		339262	1					
ANR	362635	ElseStatement	else		339262	0					
ANR	362636	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	362637	Condition	m & SIXTEEN_BIT	5461:7:115857:115871	339262	0	True				
ANR	362638	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	362639	Identifier	m		339262	0					
ANR	362640	Identifier	SIXTEEN_BIT		339262	1					
ANR	362641	CompoundStatement		4169:24:90015:90015	339262	1					
ANR	362642	ExpressionStatement	ao -> o = 0x90fa40f0	5462:4:115880:115898	339262	0	True				
ANR	362643	AssignmentExpression	ao -> o = 0x90fa40f0		339262	0		=			
ANR	362644	PtrMemberAccess	ao -> o		339262	0					
ANR	362645	Identifier	ao		339262	0					
ANR	362646	Identifier	o		339262	1					
ANR	362647	PrimaryExpression	0x90fa40f0		339262	1					
ANR	362648	ElseStatement	else		339262	0					
ANR	362649	CompoundStatement		4171:10:90051:90051	339262	0					
ANR	362650	ReturnStatement	return - 1 ;	5464:4:115916:115925	339262	0	True				
ANR	362651	UnaryOperationExpression	- 1		339262	0					
ANR	362652	UnaryOperator	-		339262	0					
ANR	362653	PrimaryExpression	1		339262	1					
ANR	362654	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5467:3:115936:115972	339262	1	True				
ANR	362655	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	362656	Callee	std_32bit_3reg		339262	0					
ANR	362657	Identifier	std_32bit_3reg		339262	0					
ANR	362658	ArgumentList	ao		339262	1					
ANR	362659	Argument	ao		339262	0					
ANR	362660	Identifier	ao		339262	0					
ANR	362661	Argument	m		339262	1					
ANR	362662	Identifier	m		339262	0					
ANR	362663	Argument	false		339262	2					
ANR	362664	Identifier	false		339262	0					
ANR	362665	BreakStatement	break ;	5469:3:115989:115994	339262	4	True				
ANR	362666	Label	default :	5470:2:115998:116005	339262	5	True				
ANR	362667	Identifier	default		339262	0					
ANR	362668	ReturnStatement	return - 1 ;	5471:3:116010:116019	339262	6	True				
ANR	362669	UnaryOperationExpression	- 1		339262	0					
ANR	362670	UnaryOperator	-		339262	0					
ANR	362671	PrimaryExpression	1		339262	1					
ANR	362672	ElseStatement	else		339262	0					
ANR	362673	IfStatement	"if ( ( m = opmask ( ao -> op , ""uasx"" , 0 ) ) )"		339262	0					
ANR	362674	Condition	"m = opmask ( ao -> op , ""uasx"" , 0 )"	5474:5:116038:116069	339262	0	True				
ANR	362675	AssignmentExpression	"m = opmask ( ao -> op , ""uasx"" , 0 )"		339262	0		=			
ANR	362676	Identifier	m		339262	0					
ANR	362677	CallExpression	"opmask ( ao -> op , ""uasx"" , 0 )"		339262	1					
ANR	362678	Callee	opmask		339262	0					
ANR	362679	Identifier	opmask		339262	0					
ANR	362680	ArgumentList	ao -> op		339262	1					
ANR	362681	Argument	ao -> op		339262	0					
ANR	362682	PtrMemberAccess	ao -> op		339262	0					
ANR	362683	Identifier	ao		339262	0					
ANR	362684	Identifier	op		339262	1					
ANR	362685	Argument	"""uasx"""		339262	1					
ANR	362686	PrimaryExpression	"""uasx"""		339262	0					
ANR	362687	Argument	0		339262	2					
ANR	362688	PrimaryExpression	0		339262	0					
ANR	362689	CompoundStatement		4183:2:90217:90251	339262	1					
ANR	362690	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5475:2:116076:116110	339262	0	True				
ANR	362691	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362692	IdentifierDeclType	ut64		339262	0					
ANR	362693	Identifier	argt		339262	1					
ANR	362694	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362695	Identifier	argt		339262	0					
ANR	362696	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362697	Callee	thumb_selector		339262	0					
ANR	362698	Identifier	thumb_selector		339262	0					
ANR	362699	ArgumentList	ao -> a		339262	1					
ANR	362700	Argument	ao -> a		339262	0					
ANR	362701	PtrMemberAccess	ao -> a		339262	0					
ANR	362702	Identifier	ao		339262	0					
ANR	362703	Identifier	a		339262	1					
ANR	362704	SwitchStatement	switch ( argt )		339262	1					
ANR	362705	Condition	argt	5476:10:116122:116125	339262	0	True				
ANR	362706	Identifier	argt		339262	0					
ANR	362707	CompoundStatement		4184:16:90269:90269	339262	1					
ANR	362708	Label	case THUMB_REG_REG :	5477:2:116132:116150	339262	0	True				
ANR	362709	Identifier	THUMB_REG_REG		339262	0					
ANR	362710	CompoundStatement		4185:22:90293:90293	339262	1					
ANR	362711	ExpressionStatement	std_opt_2 ( ao )	5478:3:116157:116171	339262	0	True				
ANR	362712	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	362713	Callee	std_opt_2		339262	0					
ANR	362714	Identifier	std_opt_2		339262	0					
ANR	362715	ArgumentList	ao		339262	1					
ANR	362716	Argument	ao		339262	0					
ANR	362717	Identifier	ao		339262	0					
ANR	362718	Label	case THUMB_REG_REG_REG :	5481:2:116217:116239	339262	2	True				
ANR	362719	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	362720	CompoundStatement		4189:26:90382:90382	339262	3					
ANR	362721	ExpressionStatement	ao -> o = 0xa0fa40f0	5482:3:116246:116264	339262	0	True				
ANR	362722	AssignmentExpression	ao -> o = 0xa0fa40f0		339262	0		=			
ANR	362723	PtrMemberAccess	ao -> o		339262	0					
ANR	362724	Identifier	ao		339262	0					
ANR	362725	Identifier	o		339262	1					
ANR	362726	PrimaryExpression	0xa0fa40f0		339262	1					
ANR	362727	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5483:3:116269:116305	339262	1	True				
ANR	362728	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	362729	Callee	std_32bit_3reg		339262	0					
ANR	362730	Identifier	std_32bit_3reg		339262	0					
ANR	362731	ArgumentList	ao		339262	1					
ANR	362732	Argument	ao		339262	0					
ANR	362733	Identifier	ao		339262	0					
ANR	362734	Argument	m		339262	1					
ANR	362735	Identifier	m		339262	0					
ANR	362736	Argument	false		339262	2					
ANR	362737	Identifier	false		339262	0					
ANR	362738	BreakStatement	break ;	5485:3:116322:116327	339262	4	True				
ANR	362739	Label	default :	5486:2:116331:116338	339262	5	True				
ANR	362740	Identifier	default		339262	0					
ANR	362741	ReturnStatement	return - 1 ;	5487:3:116343:116352	339262	6	True				
ANR	362742	UnaryOperationExpression	- 1		339262	0					
ANR	362743	UnaryOperator	-		339262	0					
ANR	362744	PrimaryExpression	1		339262	1					
ANR	362745	ElseStatement	else		339262	0					
ANR	362746	IfStatement	"if ( ( m = opmask ( ao -> op , ""ubfx"" , 0 ) ) )"		339262	0					
ANR	362747	Condition	"m = opmask ( ao -> op , ""ubfx"" , 0 )"	5490:5:116371:116402	339262	0	True				
ANR	362748	AssignmentExpression	"m = opmask ( ao -> op , ""ubfx"" , 0 )"		339262	0		=			
ANR	362749	Identifier	m		339262	0					
ANR	362750	CallExpression	"opmask ( ao -> op , ""ubfx"" , 0 )"		339262	1					
ANR	362751	Callee	opmask		339262	0					
ANR	362752	Identifier	opmask		339262	0					
ANR	362753	ArgumentList	ao -> op		339262	1					
ANR	362754	Argument	ao -> op		339262	0					
ANR	362755	PtrMemberAccess	ao -> op		339262	0					
ANR	362756	Identifier	ao		339262	0					
ANR	362757	Identifier	op		339262	1					
ANR	362758	Argument	"""ubfx"""		339262	1					
ANR	362759	PrimaryExpression	"""ubfx"""		339262	0					
ANR	362760	Argument	0		339262	2					
ANR	362761	PrimaryExpression	0		339262	0					
ANR	362762	CompoundStatement		4199:2:90550:90584	339262	1					
ANR	362763	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5491:2:116409:116443	339262	0	True				
ANR	362764	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362765	IdentifierDeclType	ut64		339262	0					
ANR	362766	Identifier	argt		339262	1					
ANR	362767	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362768	Identifier	argt		339262	0					
ANR	362769	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362770	Callee	thumb_selector		339262	0					
ANR	362771	Identifier	thumb_selector		339262	0					
ANR	362772	ArgumentList	ao -> a		339262	1					
ANR	362773	Argument	ao -> a		339262	0					
ANR	362774	PtrMemberAccess	ao -> a		339262	0					
ANR	362775	Identifier	ao		339262	0					
ANR	362776	Identifier	a		339262	1					
ANR	362777	SwitchStatement	switch ( argt )		339262	1					
ANR	362778	Condition	argt	5492:10:116455:116458	339262	0	True				
ANR	362779	Identifier	argt		339262	0					
ANR	362780	CompoundStatement		4200:16:90602:90602	339262	1					
ANR	362781	Label	case THUMB_REG_REG_CONST_CONST :	5493:2:116465:116495	339262	0	True				
ANR	362782	Identifier	THUMB_REG_REG_CONST_CONST		339262	0					
ANR	362783	CompoundStatement		4205:3:90742:90778	339262	1					
ANR	362784	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5494:3:116502:116530	339262	0	True				
ANR	362785	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	362786	IdentifierDeclType	ut8		339262	0					
ANR	362787	Identifier	reg1		339262	1					
ANR	362788	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	362789	Identifier	reg1		339262	0					
ANR	362790	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	362791	Callee	getreg		339262	0					
ANR	362792	Identifier	getreg		339262	0					
ANR	362793	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	362794	Argument	ao -> a [ 0 ]		339262	0					
ANR	362795	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	362796	PtrMemberAccess	ao -> a		339262	0					
ANR	362797	Identifier	ao		339262	0					
ANR	362798	Identifier	a		339262	1					
ANR	362799	PrimaryExpression	0		339262	1					
ANR	362800	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5495:3:116535:116563	339262	1	True				
ANR	362801	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	362802	IdentifierDeclType	ut8		339262	0					
ANR	362803	Identifier	reg2		339262	1					
ANR	362804	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	362805	Identifier	reg2		339262	0					
ANR	362806	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	362807	Callee	getreg		339262	0					
ANR	362808	Identifier	getreg		339262	0					
ANR	362809	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	362810	Argument	ao -> a [ 1 ]		339262	0					
ANR	362811	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	362812	PtrMemberAccess	ao -> a		339262	0					
ANR	362813	Identifier	ao		339262	0					
ANR	362814	Identifier	a		339262	1					
ANR	362815	PrimaryExpression	1		339262	1					
ANR	362816	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 2 ] ) ;	5496:3:116568:116596	339262	2	True				
ANR	362817	IdentifierDecl	lsb = getnum ( ao -> a [ 2 ] )		339262	0					
ANR	362818	IdentifierDeclType	ut32		339262	0					
ANR	362819	Identifier	lsb		339262	1					
ANR	362820	AssignmentExpression	lsb = getnum ( ao -> a [ 2 ] )		339262	2		=			
ANR	362821	Identifier	lsb		339262	0					
ANR	362822	CallExpression	getnum ( ao -> a [ 2 ] )		339262	1					
ANR	362823	Callee	getnum		339262	0					
ANR	362824	Identifier	getnum		339262	0					
ANR	362825	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	362826	Argument	ao -> a [ 2 ]		339262	0					
ANR	362827	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	362828	PtrMemberAccess	ao -> a		339262	0					
ANR	362829	Identifier	ao		339262	0					
ANR	362830	Identifier	a		339262	1					
ANR	362831	PrimaryExpression	2		339262	1					
ANR	362832	IdentifierDeclStatement	ut32 widthm1 = getnum ( ao -> a [ 3 ] ) - 1 ;	5497:3:116601:116637	339262	3	True				
ANR	362833	IdentifierDecl	widthm1 = getnum ( ao -> a [ 3 ] ) - 1		339262	0					
ANR	362834	IdentifierDeclType	ut32		339262	0					
ANR	362835	Identifier	widthm1		339262	1					
ANR	362836	AssignmentExpression	widthm1 = getnum ( ao -> a [ 3 ] ) - 1		339262	2		=			
ANR	362837	Identifier	widthm1		339262	0					
ANR	362838	AdditiveExpression	getnum ( ao -> a [ 3 ] ) - 1		339262	1		-			
ANR	362839	CallExpression	getnum ( ao -> a [ 3 ] )		339262	0					
ANR	362840	Callee	getnum		339262	0					
ANR	362841	Identifier	getnum		339262	0					
ANR	362842	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	362843	Argument	ao -> a [ 3 ]		339262	0					
ANR	362844	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	362845	PtrMemberAccess	ao -> a		339262	0					
ANR	362846	Identifier	ao		339262	0					
ANR	362847	Identifier	a		339262	1					
ANR	362848	PrimaryExpression	3		339262	1					
ANR	362849	PrimaryExpression	1		339262	1					
ANR	362850	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 ) )		339262	4					
ANR	362851	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )	5499:7:116650:116716	339262	0	True				
ANR	362852	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )		339262	0		||			
ANR	362853	RelationalExpression	reg1 > 15		339262	0		>			
ANR	362854	Identifier	reg1		339262	0					
ANR	362855	PrimaryExpression	15		339262	1					
ANR	362856	OrExpression	( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )		339262	1		||			
ANR	362857	RelationalExpression	reg2 > 15		339262	0		>			
ANR	362858	Identifier	reg2		339262	0					
ANR	362859	PrimaryExpression	15		339262	1					
ANR	362860	OrExpression	( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )		339262	1		||			
ANR	362861	RelationalExpression	lsb > 31		339262	0		>			
ANR	362862	Identifier	lsb		339262	0					
ANR	362863	PrimaryExpression	31		339262	1					
ANR	362864	RelationalExpression	( 31 - lsb ) <= widthm1		339262	1		<=			
ANR	362865	AdditiveExpression	31 - lsb		339262	0		-			
ANR	362866	PrimaryExpression	31		339262	0					
ANR	362867	Identifier	lsb		339262	1					
ANR	362868	Identifier	widthm1		339262	1					
ANR	362869	CompoundStatement		4207:76:90860:90860	339262	1					
ANR	362870	ReturnStatement	return - 1 ;	5500:4:116725:116734	339262	0	True				
ANR	362871	UnaryOperationExpression	- 1		339262	0					
ANR	362872	UnaryOperator	-		339262	0					
ANR	362873	PrimaryExpression	1		339262	1					
ANR	362874	ExpressionStatement	ao -> o = 0xc0f30000	5503:3:116745:116763	339262	5	True				
ANR	362875	AssignmentExpression	ao -> o = 0xc0f30000		339262	0		=			
ANR	362876	PtrMemberAccess	ao -> o		339262	0					
ANR	362877	Identifier	ao		339262	0					
ANR	362878	Identifier	o		339262	1					
ANR	362879	PrimaryExpression	0xc0f30000		339262	1					
ANR	362880	ExpressionStatement	ao -> o |= reg1	5504:3:116768:116781	339262	6	True				
ANR	362881	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	362882	PtrMemberAccess	ao -> o		339262	0					
ANR	362883	Identifier	ao		339262	0					
ANR	362884	Identifier	o		339262	1					
ANR	362885	Identifier	reg1		339262	1					
ANR	362886	ExpressionStatement	ao -> o |= reg2 << 24	5505:3:116786:116805	339262	7	True				
ANR	362887	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	362888	PtrMemberAccess	ao -> o		339262	0					
ANR	362889	Identifier	ao		339262	0					
ANR	362890	Identifier	o		339262	1					
ANR	362891	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	362892	Identifier	reg2		339262	0					
ANR	362893	PrimaryExpression	24		339262	1					
ANR	362894	ExpressionStatement	ao -> o |= ( lsb & 0x1c ) << 2	5506:3:116810:116836	339262	8	True				
ANR	362895	AssignmentExpression	ao -> o |= ( lsb & 0x1c ) << 2		339262	0		|=			
ANR	362896	PtrMemberAccess	ao -> o		339262	0					
ANR	362897	Identifier	ao		339262	0					
ANR	362898	Identifier	o		339262	1					
ANR	362899	ShiftExpression	( lsb & 0x1c ) << 2		339262	1		<<			
ANR	362900	BitAndExpression	lsb & 0x1c		339262	0		&			
ANR	362901	Identifier	lsb		339262	0					
ANR	362902	PrimaryExpression	0x1c		339262	1					
ANR	362903	PrimaryExpression	2		339262	1					
ANR	362904	ExpressionStatement	ao -> o |= ( lsb & 0x3 ) << 14	5507:3:116841:116867	339262	9	True				
ANR	362905	AssignmentExpression	ao -> o |= ( lsb & 0x3 ) << 14		339262	0		|=			
ANR	362906	PtrMemberAccess	ao -> o		339262	0					
ANR	362907	Identifier	ao		339262	0					
ANR	362908	Identifier	o		339262	1					
ANR	362909	ShiftExpression	( lsb & 0x3 ) << 14		339262	1		<<			
ANR	362910	BitAndExpression	lsb & 0x3		339262	0		&			
ANR	362911	Identifier	lsb		339262	0					
ANR	362912	PrimaryExpression	0x3		339262	1					
ANR	362913	PrimaryExpression	14		339262	1					
ANR	362914	ExpressionStatement	ao -> o |= widthm1 << 8	5508:3:116872:116893	339262	10	True				
ANR	362915	AssignmentExpression	ao -> o |= widthm1 << 8		339262	0		|=			
ANR	362916	PtrMemberAccess	ao -> o		339262	0					
ANR	362917	Identifier	ao		339262	0					
ANR	362918	Identifier	o		339262	1					
ANR	362919	ShiftExpression	widthm1 << 8		339262	1		<<			
ANR	362920	Identifier	widthm1		339262	0					
ANR	362921	PrimaryExpression	8		339262	1					
ANR	362922	ReturnStatement	return 4 ;	5509:3:116898:116906	339262	11	True				
ANR	362923	PrimaryExpression	4		339262	0					
ANR	362924	BreakStatement	break ;	5511:3:116923:116928	339262	2	True				
ANR	362925	Label	default :	5512:2:116932:116939	339262	3	True				
ANR	362926	Identifier	default		339262	0					
ANR	362927	ReturnStatement	return - 1 ;	5513:3:116944:116953	339262	4	True				
ANR	362928	UnaryOperationExpression	- 1		339262	0					
ANR	362929	UnaryOperator	-		339262	0					
ANR	362930	PrimaryExpression	1		339262	1					
ANR	362931	ElseStatement	else		339262	0					
ANR	362932	IfStatement	"if ( ( m = opmask ( ao -> op , ""udiv"" , 0 ) ) )"		339262	0					
ANR	362933	Condition	"m = opmask ( ao -> op , ""udiv"" , 0 )"	5516:5:116972:117003	339262	0	True				
ANR	362934	AssignmentExpression	"m = opmask ( ao -> op , ""udiv"" , 0 )"		339262	0		=			
ANR	362935	Identifier	m		339262	0					
ANR	362936	CallExpression	"opmask ( ao -> op , ""udiv"" , 0 )"		339262	1					
ANR	362937	Callee	opmask		339262	0					
ANR	362938	Identifier	opmask		339262	0					
ANR	362939	ArgumentList	ao -> op		339262	1					
ANR	362940	Argument	ao -> op		339262	0					
ANR	362941	PtrMemberAccess	ao -> op		339262	0					
ANR	362942	Identifier	ao		339262	0					
ANR	362943	Identifier	op		339262	1					
ANR	362944	Argument	"""udiv"""		339262	1					
ANR	362945	PrimaryExpression	"""udiv"""		339262	0					
ANR	362946	Argument	0		339262	2					
ANR	362947	PrimaryExpression	0		339262	0					
ANR	362948	CompoundStatement		4225:2:91151:91185	339262	1					
ANR	362949	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5517:2:117010:117044	339262	0	True				
ANR	362950	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	362951	IdentifierDeclType	ut64		339262	0					
ANR	362952	Identifier	argt		339262	1					
ANR	362953	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	362954	Identifier	argt		339262	0					
ANR	362955	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	362956	Callee	thumb_selector		339262	0					
ANR	362957	Identifier	thumb_selector		339262	0					
ANR	362958	ArgumentList	ao -> a		339262	1					
ANR	362959	Argument	ao -> a		339262	0					
ANR	362960	PtrMemberAccess	ao -> a		339262	0					
ANR	362961	Identifier	ao		339262	0					
ANR	362962	Identifier	a		339262	1					
ANR	362963	SwitchStatement	switch ( argt )		339262	1					
ANR	362964	Condition	argt	5518:10:117056:117059	339262	0	True				
ANR	362965	Identifier	argt		339262	0					
ANR	362966	CompoundStatement		4226:16:91203:91203	339262	1					
ANR	362967	Label	case THUMB_REG_REG :	5519:2:117066:117084	339262	0	True				
ANR	362968	Identifier	THUMB_REG_REG		339262	0					
ANR	362969	CompoundStatement		4227:22:91227:91227	339262	1					
ANR	362970	ExpressionStatement	std_opt_2 ( ao )	5520:3:117091:117105	339262	0	True				
ANR	362971	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	362972	Callee	std_opt_2		339262	0					
ANR	362973	Identifier	std_opt_2		339262	0					
ANR	362974	ArgumentList	ao		339262	1					
ANR	362975	Argument	ao		339262	0					
ANR	362976	Identifier	ao		339262	0					
ANR	362977	Label	case THUMB_REG_REG_REG :	5523:2:117151:117173	339262	2	True				
ANR	362978	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	362979	CompoundStatement		4231:26:91316:91316	339262	3					
ANR	362980	ExpressionStatement	ao -> o = 0xb0fbf0f0	5524:3:117180:117198	339262	0	True				
ANR	362981	AssignmentExpression	ao -> o = 0xb0fbf0f0		339262	0		=			
ANR	362982	PtrMemberAccess	ao -> o		339262	0					
ANR	362983	Identifier	ao		339262	0					
ANR	362984	Identifier	o		339262	1					
ANR	362985	PrimaryExpression	0xb0fbf0f0		339262	1					
ANR	362986	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5525:3:117203:117239	339262	1	True				
ANR	362987	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	362988	Callee	std_32bit_3reg		339262	0					
ANR	362989	Identifier	std_32bit_3reg		339262	0					
ANR	362990	ArgumentList	ao		339262	1					
ANR	362991	Argument	ao		339262	0					
ANR	362992	Identifier	ao		339262	0					
ANR	362993	Argument	m		339262	1					
ANR	362994	Identifier	m		339262	0					
ANR	362995	Argument	false		339262	2					
ANR	362996	Identifier	false		339262	0					
ANR	362997	BreakStatement	break ;	5527:3:117256:117261	339262	4	True				
ANR	362998	Label	default :	5528:2:117265:117272	339262	5	True				
ANR	362999	Identifier	default		339262	0					
ANR	363000	ReturnStatement	return - 1 ;	5529:3:117277:117286	339262	6	True				
ANR	363001	UnaryOperationExpression	- 1		339262	0					
ANR	363002	UnaryOperator	-		339262	0					
ANR	363003	PrimaryExpression	1		339262	1					
ANR	363004	ElseStatement	else		339262	0					
ANR	363005	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	363006	Condition	"m = opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT )"	5532:5:117305:117359	339262	0	True				
ANR	363007	AssignmentExpression	"m = opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	363008	Identifier	m		339262	0					
ANR	363009	CallExpression	"opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	363010	Callee	opmask		339262	0					
ANR	363011	Identifier	opmask		339262	0					
ANR	363012	ArgumentList	ao -> op		339262	1					
ANR	363013	Argument	ao -> op		339262	0					
ANR	363014	PtrMemberAccess	ao -> op		339262	0					
ANR	363015	Identifier	ao		339262	0					
ANR	363016	Identifier	op		339262	1					
ANR	363017	Argument	"""uhadd"""		339262	1					
ANR	363018	PrimaryExpression	"""uhadd"""		339262	0					
ANR	363019	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	363020	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	363021	Identifier	EIGHT_BIT		339262	0					
ANR	363022	Identifier	SIXTEEN_BIT		339262	1					
ANR	363023	CompoundStatement		4242:2:91545:91588	339262	1					
ANR	363024	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5533:2:117366:117400	339262	0	True				
ANR	363025	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363026	IdentifierDeclType	ut64		339262	0					
ANR	363027	Identifier	argt		339262	1					
ANR	363028	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363029	Identifier	argt		339262	0					
ANR	363030	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363031	Callee	thumb_selector		339262	0					
ANR	363032	Identifier	thumb_selector		339262	0					
ANR	363033	ArgumentList	ao -> a		339262	1					
ANR	363034	Argument	ao -> a		339262	0					
ANR	363035	PtrMemberAccess	ao -> a		339262	0					
ANR	363036	Identifier	ao		339262	0					
ANR	363037	Identifier	a		339262	1					
ANR	363038	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5534:2:117404:117447	339262	1	True				
ANR	363039	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	0					
ANR	363040	IdentifierDeclType	ut64		339262	0					
ANR	363041	Identifier	sufsel		339262	1					
ANR	363042	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	363043	Identifier	sufsel		339262	0					
ANR	363044	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	363045	Identifier	m		339262	0					
ANR	363046	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	1		|			
ANR	363047	Identifier	EIGHT_BIT		339262	0					
ANR	363048	Identifier	SIXTEEN_BIT		339262	1					
ANR	363049	SwitchStatement	switch ( argt )		339262	2					
ANR	363050	Condition	argt	5535:10:117459:117462	339262	0	True				
ANR	363051	Identifier	argt		339262	0					
ANR	363052	CompoundStatement		4243:16:91606:91606	339262	1					
ANR	363053	Label	case THUMB_REG_REG :	5536:2:117469:117487	339262	0	True				
ANR	363054	Identifier	THUMB_REG_REG		339262	0					
ANR	363055	CompoundStatement		4244:22:91630:91630	339262	1					
ANR	363056	ExpressionStatement	std_opt_2 ( ao )	5537:3:117494:117508	339262	0	True				
ANR	363057	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	363058	Callee	std_opt_2		339262	0					
ANR	363059	Identifier	std_opt_2		339262	0					
ANR	363060	ArgumentList	ao		339262	1					
ANR	363061	Argument	ao		339262	0					
ANR	363062	Identifier	ao		339262	0					
ANR	363063	Label	case THUMB_REG_REG_REG :	5540:2:117554:117576	339262	2	True				
ANR	363064	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	363065	CompoundStatement		4248:26:91719:91719	339262	3					
ANR	363066	IfStatement	if ( sufsel == EIGHT_BIT )		339262	0					
ANR	363067	Condition	sufsel == EIGHT_BIT	5541:7:117587:117605	339262	0	True				
ANR	363068	EqualityExpression	sufsel == EIGHT_BIT		339262	0		==			
ANR	363069	Identifier	sufsel		339262	0					
ANR	363070	Identifier	EIGHT_BIT		339262	1					
ANR	363071	CompoundStatement		4249:28:91749:91749	339262	1					
ANR	363072	ExpressionStatement	ao -> o = 0x80fa60f0	5542:4:117614:117632	339262	0	True				
ANR	363073	AssignmentExpression	ao -> o = 0x80fa60f0		339262	0		=			
ANR	363074	PtrMemberAccess	ao -> o		339262	0					
ANR	363075	Identifier	ao		339262	0					
ANR	363076	Identifier	o		339262	1					
ANR	363077	PrimaryExpression	0x80fa60f0		339262	1					
ANR	363078	ElseStatement	else		339262	0					
ANR	363079	IfStatement	if ( sufsel == SIXTEEN_BIT )		339262	0					
ANR	363080	Condition	sufsel == SIXTEEN_BIT	5544:7:117652:117672	339262	0	True				
ANR	363081	EqualityExpression	sufsel == SIXTEEN_BIT		339262	0		==			
ANR	363082	Identifier	sufsel		339262	0					
ANR	363083	Identifier	SIXTEEN_BIT		339262	1					
ANR	363084	CompoundStatement		4252:30:91816:91816	339262	1					
ANR	363085	ExpressionStatement	ao -> o = 0x90fa60f0	5545:4:117681:117699	339262	0	True				
ANR	363086	AssignmentExpression	ao -> o = 0x90fa60f0		339262	0		=			
ANR	363087	PtrMemberAccess	ao -> o		339262	0					
ANR	363088	Identifier	ao		339262	0					
ANR	363089	Identifier	o		339262	1					
ANR	363090	PrimaryExpression	0x90fa60f0		339262	1					
ANR	363091	ElseStatement	else		339262	0					
ANR	363092	CompoundStatement		4254:10:91852:91852	339262	0					
ANR	363093	ReturnStatement	return - 1 ;	5547:4:117717:117726	339262	0	True				
ANR	363094	UnaryOperationExpression	- 1		339262	0					
ANR	363095	UnaryOperator	-		339262	0					
ANR	363096	PrimaryExpression	1		339262	1					
ANR	363097	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5550:3:117741:117777	339262	1	True				
ANR	363098	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	363099	Callee	std_32bit_3reg		339262	0					
ANR	363100	Identifier	std_32bit_3reg		339262	0					
ANR	363101	ArgumentList	ao		339262	1					
ANR	363102	Argument	ao		339262	0					
ANR	363103	Identifier	ao		339262	0					
ANR	363104	Argument	m		339262	1					
ANR	363105	Identifier	m		339262	0					
ANR	363106	Argument	false		339262	2					
ANR	363107	Identifier	false		339262	0					
ANR	363108	BreakStatement	break ;	5552:3:117794:117799	339262	4	True				
ANR	363109	Label	default :	5553:2:117803:117810	339262	5	True				
ANR	363110	Identifier	default		339262	0					
ANR	363111	ReturnStatement	return - 1 ;	5554:3:117815:117824	339262	6	True				
ANR	363112	UnaryOperationExpression	- 1		339262	0					
ANR	363113	UnaryOperator	-		339262	0					
ANR	363114	PrimaryExpression	1		339262	1					
ANR	363115	ElseStatement	else		339262	0					
ANR	363116	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhasx"" , 0 ) ) )"		339262	0					
ANR	363117	Condition	"m = opmask ( ao -> op , ""uhasx"" , 0 )"	5557:5:117843:117875	339262	0	True				
ANR	363118	AssignmentExpression	"m = opmask ( ao -> op , ""uhasx"" , 0 )"		339262	0		=			
ANR	363119	Identifier	m		339262	0					
ANR	363120	CallExpression	"opmask ( ao -> op , ""uhasx"" , 0 )"		339262	1					
ANR	363121	Callee	opmask		339262	0					
ANR	363122	Identifier	opmask		339262	0					
ANR	363123	ArgumentList	ao -> op		339262	1					
ANR	363124	Argument	ao -> op		339262	0					
ANR	363125	PtrMemberAccess	ao -> op		339262	0					
ANR	363126	Identifier	ao		339262	0					
ANR	363127	Identifier	op		339262	1					
ANR	363128	Argument	"""uhasx"""		339262	1					
ANR	363129	PrimaryExpression	"""uhasx"""		339262	0					
ANR	363130	Argument	0		339262	2					
ANR	363131	PrimaryExpression	0		339262	0					
ANR	363132	CompoundStatement		4266:2:92023:92057	339262	1					
ANR	363133	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5558:2:117882:117916	339262	0	True				
ANR	363134	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363135	IdentifierDeclType	ut64		339262	0					
ANR	363136	Identifier	argt		339262	1					
ANR	363137	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363138	Identifier	argt		339262	0					
ANR	363139	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363140	Callee	thumb_selector		339262	0					
ANR	363141	Identifier	thumb_selector		339262	0					
ANR	363142	ArgumentList	ao -> a		339262	1					
ANR	363143	Argument	ao -> a		339262	0					
ANR	363144	PtrMemberAccess	ao -> a		339262	0					
ANR	363145	Identifier	ao		339262	0					
ANR	363146	Identifier	a		339262	1					
ANR	363147	SwitchStatement	switch ( argt )		339262	1					
ANR	363148	Condition	argt	5559:10:117928:117931	339262	0	True				
ANR	363149	Identifier	argt		339262	0					
ANR	363150	CompoundStatement		4267:16:92075:92075	339262	1					
ANR	363151	Label	case THUMB_REG_REG :	5560:2:117938:117956	339262	0	True				
ANR	363152	Identifier	THUMB_REG_REG		339262	0					
ANR	363153	CompoundStatement		4268:22:92099:92099	339262	1					
ANR	363154	ExpressionStatement	std_opt_2 ( ao )	5561:3:117963:117977	339262	0	True				
ANR	363155	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	363156	Callee	std_opt_2		339262	0					
ANR	363157	Identifier	std_opt_2		339262	0					
ANR	363158	ArgumentList	ao		339262	1					
ANR	363159	Argument	ao		339262	0					
ANR	363160	Identifier	ao		339262	0					
ANR	363161	Label	case THUMB_REG_REG_REG :	5564:2:118023:118045	339262	2	True				
ANR	363162	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	363163	CompoundStatement		4272:26:92188:92188	339262	3					
ANR	363164	ExpressionStatement	ao -> o = 0xa0fa60f0	5565:3:118052:118070	339262	0	True				
ANR	363165	AssignmentExpression	ao -> o = 0xa0fa60f0		339262	0		=			
ANR	363166	PtrMemberAccess	ao -> o		339262	0					
ANR	363167	Identifier	ao		339262	0					
ANR	363168	Identifier	o		339262	1					
ANR	363169	PrimaryExpression	0xa0fa60f0		339262	1					
ANR	363170	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5567:3:118079:118115	339262	1	True				
ANR	363171	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	363172	Callee	std_32bit_3reg		339262	0					
ANR	363173	Identifier	std_32bit_3reg		339262	0					
ANR	363174	ArgumentList	ao		339262	1					
ANR	363175	Argument	ao		339262	0					
ANR	363176	Identifier	ao		339262	0					
ANR	363177	Argument	m		339262	1					
ANR	363178	Identifier	m		339262	0					
ANR	363179	Argument	false		339262	2					
ANR	363180	Identifier	false		339262	0					
ANR	363181	BreakStatement	break ;	5570:3:118136:118141	339262	4	True				
ANR	363182	Label	default :	5571:2:118145:118152	339262	5	True				
ANR	363183	Identifier	default		339262	0					
ANR	363184	ReturnStatement	return - 1 ;	5572:3:118157:118166	339262	6	True				
ANR	363185	UnaryOperationExpression	- 1		339262	0					
ANR	363186	UnaryOperator	-		339262	0					
ANR	363187	PrimaryExpression	1		339262	1					
ANR	363188	ElseStatement	else		339262	0					
ANR	363189	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhsax"" , 0 ) ) )"		339262	0					
ANR	363190	Condition	"m = opmask ( ao -> op , ""uhsax"" , 0 )"	5575:5:118185:118217	339262	0	True				
ANR	363191	AssignmentExpression	"m = opmask ( ao -> op , ""uhsax"" , 0 )"		339262	0		=			
ANR	363192	Identifier	m		339262	0					
ANR	363193	CallExpression	"opmask ( ao -> op , ""uhsax"" , 0 )"		339262	1					
ANR	363194	Callee	opmask		339262	0					
ANR	363195	Identifier	opmask		339262	0					
ANR	363196	ArgumentList	ao -> op		339262	1					
ANR	363197	Argument	ao -> op		339262	0					
ANR	363198	PtrMemberAccess	ao -> op		339262	0					
ANR	363199	Identifier	ao		339262	0					
ANR	363200	Identifier	op		339262	1					
ANR	363201	Argument	"""uhsax"""		339262	1					
ANR	363202	PrimaryExpression	"""uhsax"""		339262	0					
ANR	363203	Argument	0		339262	2					
ANR	363204	PrimaryExpression	0		339262	0					
ANR	363205	CompoundStatement		4284:2:92365:92399	339262	1					
ANR	363206	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5576:2:118224:118258	339262	0	True				
ANR	363207	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363208	IdentifierDeclType	ut64		339262	0					
ANR	363209	Identifier	argt		339262	1					
ANR	363210	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363211	Identifier	argt		339262	0					
ANR	363212	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363213	Callee	thumb_selector		339262	0					
ANR	363214	Identifier	thumb_selector		339262	0					
ANR	363215	ArgumentList	ao -> a		339262	1					
ANR	363216	Argument	ao -> a		339262	0					
ANR	363217	PtrMemberAccess	ao -> a		339262	0					
ANR	363218	Identifier	ao		339262	0					
ANR	363219	Identifier	a		339262	1					
ANR	363220	SwitchStatement	switch ( argt )		339262	1					
ANR	363221	Condition	argt	5577:10:118270:118273	339262	0	True				
ANR	363222	Identifier	argt		339262	0					
ANR	363223	CompoundStatement		4285:16:92417:92417	339262	1					
ANR	363224	Label	case THUMB_REG_REG :	5578:2:118280:118298	339262	0	True				
ANR	363225	Identifier	THUMB_REG_REG		339262	0					
ANR	363226	CompoundStatement		4286:22:92441:92441	339262	1					
ANR	363227	ExpressionStatement	std_opt_2 ( ao )	5579:3:118305:118319	339262	0	True				
ANR	363228	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	363229	Callee	std_opt_2		339262	0					
ANR	363230	Identifier	std_opt_2		339262	0					
ANR	363231	ArgumentList	ao		339262	1					
ANR	363232	Argument	ao		339262	0					
ANR	363233	Identifier	ao		339262	0					
ANR	363234	Label	case THUMB_REG_REG_REG :	5582:2:118365:118387	339262	2	True				
ANR	363235	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	363236	CompoundStatement		4290:26:92530:92530	339262	3					
ANR	363237	ExpressionStatement	ao -> o = 0xe0fa60f0	5583:3:118394:118412	339262	0	True				
ANR	363238	AssignmentExpression	ao -> o = 0xe0fa60f0		339262	0		=			
ANR	363239	PtrMemberAccess	ao -> o		339262	0					
ANR	363240	Identifier	ao		339262	0					
ANR	363241	Identifier	o		339262	1					
ANR	363242	PrimaryExpression	0xe0fa60f0		339262	1					
ANR	363243	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5585:3:118421:118457	339262	1	True				
ANR	363244	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	363245	Callee	std_32bit_3reg		339262	0					
ANR	363246	Identifier	std_32bit_3reg		339262	0					
ANR	363247	ArgumentList	ao		339262	1					
ANR	363248	Argument	ao		339262	0					
ANR	363249	Identifier	ao		339262	0					
ANR	363250	Argument	m		339262	1					
ANR	363251	Identifier	m		339262	0					
ANR	363252	Argument	false		339262	2					
ANR	363253	Identifier	false		339262	0					
ANR	363254	BreakStatement	break ;	5587:3:118474:118479	339262	4	True				
ANR	363255	Label	default :	5588:2:118483:118490	339262	5	True				
ANR	363256	Identifier	default		339262	0					
ANR	363257	ReturnStatement	return - 1 ;	5589:3:118495:118504	339262	6	True				
ANR	363258	UnaryOperationExpression	- 1		339262	0					
ANR	363259	UnaryOperator	-		339262	0					
ANR	363260	PrimaryExpression	1		339262	1					
ANR	363261	ElseStatement	else		339262	0					
ANR	363262	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	363263	Condition	"m = opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT )"	5592:5:118523:118577	339262	0	True				
ANR	363264	AssignmentExpression	"m = opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	363265	Identifier	m		339262	0					
ANR	363266	CallExpression	"opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	363267	Callee	opmask		339262	0					
ANR	363268	Identifier	opmask		339262	0					
ANR	363269	ArgumentList	ao -> op		339262	1					
ANR	363270	Argument	ao -> op		339262	0					
ANR	363271	PtrMemberAccess	ao -> op		339262	0					
ANR	363272	Identifier	ao		339262	0					
ANR	363273	Identifier	op		339262	1					
ANR	363274	Argument	"""uhsub"""		339262	1					
ANR	363275	PrimaryExpression	"""uhsub"""		339262	0					
ANR	363276	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	363277	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	363278	Identifier	EIGHT_BIT		339262	0					
ANR	363279	Identifier	SIXTEEN_BIT		339262	1					
ANR	363280	CompoundStatement		4302:2:92763:92806	339262	1					
ANR	363281	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5593:2:118584:118618	339262	0	True				
ANR	363282	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363283	IdentifierDeclType	ut64		339262	0					
ANR	363284	Identifier	argt		339262	1					
ANR	363285	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363286	Identifier	argt		339262	0					
ANR	363287	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363288	Callee	thumb_selector		339262	0					
ANR	363289	Identifier	thumb_selector		339262	0					
ANR	363290	ArgumentList	ao -> a		339262	1					
ANR	363291	Argument	ao -> a		339262	0					
ANR	363292	PtrMemberAccess	ao -> a		339262	0					
ANR	363293	Identifier	ao		339262	0					
ANR	363294	Identifier	a		339262	1					
ANR	363295	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5594:2:118622:118665	339262	1	True				
ANR	363296	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	0					
ANR	363297	IdentifierDeclType	ut64		339262	0					
ANR	363298	Identifier	sufsel		339262	1					
ANR	363299	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	363300	Identifier	sufsel		339262	0					
ANR	363301	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	363302	Identifier	m		339262	0					
ANR	363303	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	1		|			
ANR	363304	Identifier	EIGHT_BIT		339262	0					
ANR	363305	Identifier	SIXTEEN_BIT		339262	1					
ANR	363306	SwitchStatement	switch ( argt )		339262	2					
ANR	363307	Condition	argt	5595:10:118677:118680	339262	0	True				
ANR	363308	Identifier	argt		339262	0					
ANR	363309	CompoundStatement		4303:16:92824:92824	339262	1					
ANR	363310	Label	case THUMB_REG_REG :	5596:2:118687:118705	339262	0	True				
ANR	363311	Identifier	THUMB_REG_REG		339262	0					
ANR	363312	CompoundStatement		4304:22:92848:92848	339262	1					
ANR	363313	ExpressionStatement	std_opt_2 ( ao )	5597:3:118712:118726	339262	0	True				
ANR	363314	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	363315	Callee	std_opt_2		339262	0					
ANR	363316	Identifier	std_opt_2		339262	0					
ANR	363317	ArgumentList	ao		339262	1					
ANR	363318	Argument	ao		339262	0					
ANR	363319	Identifier	ao		339262	0					
ANR	363320	Label	case THUMB_REG_REG_REG :	5600:2:118772:118794	339262	2	True				
ANR	363321	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	363322	CompoundStatement		4308:26:92937:92937	339262	3					
ANR	363323	IfStatement	if ( sufsel == EIGHT_BIT )		339262	0					
ANR	363324	Condition	sufsel == EIGHT_BIT	5601:7:118805:118823	339262	0	True				
ANR	363325	EqualityExpression	sufsel == EIGHT_BIT		339262	0		==			
ANR	363326	Identifier	sufsel		339262	0					
ANR	363327	Identifier	EIGHT_BIT		339262	1					
ANR	363328	CompoundStatement		4309:28:92967:92967	339262	1					
ANR	363329	ExpressionStatement	ao -> o = 0xc0fa60f0	5602:4:118832:118850	339262	0	True				
ANR	363330	AssignmentExpression	ao -> o = 0xc0fa60f0		339262	0		=			
ANR	363331	PtrMemberAccess	ao -> o		339262	0					
ANR	363332	Identifier	ao		339262	0					
ANR	363333	Identifier	o		339262	1					
ANR	363334	PrimaryExpression	0xc0fa60f0		339262	1					
ANR	363335	ElseStatement	else		339262	0					
ANR	363336	IfStatement	if ( sufsel == SIXTEEN_BIT )		339262	0					
ANR	363337	Condition	sufsel == SIXTEEN_BIT	5604:7:118870:118890	339262	0	True				
ANR	363338	EqualityExpression	sufsel == SIXTEEN_BIT		339262	0		==			
ANR	363339	Identifier	sufsel		339262	0					
ANR	363340	Identifier	SIXTEEN_BIT		339262	1					
ANR	363341	CompoundStatement		4312:30:93034:93034	339262	1					
ANR	363342	ExpressionStatement	ao -> o = 0xd0fa60f0	5605:4:118899:118917	339262	0	True				
ANR	363343	AssignmentExpression	ao -> o = 0xd0fa60f0		339262	0		=			
ANR	363344	PtrMemberAccess	ao -> o		339262	0					
ANR	363345	Identifier	ao		339262	0					
ANR	363346	Identifier	o		339262	1					
ANR	363347	PrimaryExpression	0xd0fa60f0		339262	1					
ANR	363348	ElseStatement	else		339262	0					
ANR	363349	CompoundStatement		4314:10:93070:93070	339262	0					
ANR	363350	ReturnStatement	return - 1 ;	5607:4:118935:118944	339262	0	True				
ANR	363351	UnaryOperationExpression	- 1		339262	0					
ANR	363352	UnaryOperator	-		339262	0					
ANR	363353	PrimaryExpression	1		339262	1					
ANR	363354	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5610:3:118959:118995	339262	1	True				
ANR	363355	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	363356	Callee	std_32bit_3reg		339262	0					
ANR	363357	Identifier	std_32bit_3reg		339262	0					
ANR	363358	ArgumentList	ao		339262	1					
ANR	363359	Argument	ao		339262	0					
ANR	363360	Identifier	ao		339262	0					
ANR	363361	Argument	m		339262	1					
ANR	363362	Identifier	m		339262	0					
ANR	363363	Argument	false		339262	2					
ANR	363364	Identifier	false		339262	0					
ANR	363365	BreakStatement	break ;	5612:3:119012:119017	339262	4	True				
ANR	363366	Label	default :	5613:2:119021:119028	339262	5	True				
ANR	363367	Identifier	default		339262	0					
ANR	363368	ReturnStatement	return - 1 ;	5614:3:119033:119042	339262	6	True				
ANR	363369	UnaryOperationExpression	- 1		339262	0					
ANR	363370	UnaryOperator	-		339262	0					
ANR	363371	PrimaryExpression	1		339262	1					
ANR	363372	ElseStatement	else		339262	0					
ANR	363373	IfStatement	"if ( ( m = opmask ( ao -> op , ""umaal"" , 0 ) ) )"		339262	0					
ANR	363374	Condition	"m = opmask ( ao -> op , ""umaal"" , 0 )"	5617:5:119061:119093	339262	0	True				
ANR	363375	AssignmentExpression	"m = opmask ( ao -> op , ""umaal"" , 0 )"		339262	0		=			
ANR	363376	Identifier	m		339262	0					
ANR	363377	CallExpression	"opmask ( ao -> op , ""umaal"" , 0 )"		339262	1					
ANR	363378	Callee	opmask		339262	0					
ANR	363379	Identifier	opmask		339262	0					
ANR	363380	ArgumentList	ao -> op		339262	1					
ANR	363381	Argument	ao -> op		339262	0					
ANR	363382	PtrMemberAccess	ao -> op		339262	0					
ANR	363383	Identifier	ao		339262	0					
ANR	363384	Identifier	op		339262	1					
ANR	363385	Argument	"""umaal"""		339262	1					
ANR	363386	PrimaryExpression	"""umaal"""		339262	0					
ANR	363387	Argument	0		339262	2					
ANR	363388	PrimaryExpression	0		339262	0					
ANR	363389	CompoundStatement		4326:2:93241:93275	339262	1					
ANR	363390	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5618:2:119100:119134	339262	0	True				
ANR	363391	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363392	IdentifierDeclType	ut64		339262	0					
ANR	363393	Identifier	argt		339262	1					
ANR	363394	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363395	Identifier	argt		339262	0					
ANR	363396	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363397	Callee	thumb_selector		339262	0					
ANR	363398	Identifier	thumb_selector		339262	0					
ANR	363399	ArgumentList	ao -> a		339262	1					
ANR	363400	Argument	ao -> a		339262	0					
ANR	363401	PtrMemberAccess	ao -> a		339262	0					
ANR	363402	Identifier	ao		339262	0					
ANR	363403	Identifier	a		339262	1					
ANR	363404	SwitchStatement	switch ( argt )		339262	1					
ANR	363405	Condition	argt	5619:10:119146:119149	339262	0	True				
ANR	363406	Identifier	argt		339262	0					
ANR	363407	CompoundStatement		4327:16:93293:93293	339262	1					
ANR	363408	Label	case THUMB_REG_REG_REG_REG :	5620:2:119156:119182	339262	0	True				
ANR	363409	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	363410	CompoundStatement		4332:3:93429:93457	339262	1					
ANR	363411	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5621:3:119189:119217	339262	0	True				
ANR	363412	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	363413	IdentifierDeclType	ut8		339262	0					
ANR	363414	Identifier	reg1		339262	1					
ANR	363415	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	363416	Identifier	reg1		339262	0					
ANR	363417	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	363418	Callee	getreg		339262	0					
ANR	363419	Identifier	getreg		339262	0					
ANR	363420	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	363421	Argument	ao -> a [ 0 ]		339262	0					
ANR	363422	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	363423	PtrMemberAccess	ao -> a		339262	0					
ANR	363424	Identifier	ao		339262	0					
ANR	363425	Identifier	a		339262	1					
ANR	363426	PrimaryExpression	0		339262	1					
ANR	363427	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5622:3:119222:119250	339262	1	True				
ANR	363428	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	363429	IdentifierDeclType	ut8		339262	0					
ANR	363430	Identifier	reg2		339262	1					
ANR	363431	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	363432	Identifier	reg2		339262	0					
ANR	363433	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	363434	Callee	getreg		339262	0					
ANR	363435	Identifier	getreg		339262	0					
ANR	363436	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	363437	Argument	ao -> a [ 1 ]		339262	0					
ANR	363438	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	363439	PtrMemberAccess	ao -> a		339262	0					
ANR	363440	Identifier	ao		339262	0					
ANR	363441	Identifier	a		339262	1					
ANR	363442	PrimaryExpression	1		339262	1					
ANR	363443	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5623:3:119255:119283	339262	2	True				
ANR	363444	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	363445	IdentifierDeclType	ut8		339262	0					
ANR	363446	Identifier	reg3		339262	1					
ANR	363447	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	363448	Identifier	reg3		339262	0					
ANR	363449	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	363450	Callee	getreg		339262	0					
ANR	363451	Identifier	getreg		339262	0					
ANR	363452	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	363453	Argument	ao -> a [ 2 ]		339262	0					
ANR	363454	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	363455	PtrMemberAccess	ao -> a		339262	0					
ANR	363456	Identifier	ao		339262	0					
ANR	363457	Identifier	a		339262	1					
ANR	363458	PrimaryExpression	2		339262	1					
ANR	363459	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5624:3:119288:119316	339262	3	True				
ANR	363460	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	363461	IdentifierDeclType	ut8		339262	0					
ANR	363462	Identifier	reg4		339262	1					
ANR	363463	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	363464	Identifier	reg4		339262	0					
ANR	363465	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	363466	Callee	getreg		339262	0					
ANR	363467	Identifier	getreg		339262	0					
ANR	363468	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	363469	Argument	ao -> a [ 3 ]		339262	0					
ANR	363470	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	363471	PtrMemberAccess	ao -> a		339262	0					
ANR	363472	Identifier	ao		339262	0					
ANR	363473	Identifier	a		339262	1					
ANR	363474	PrimaryExpression	3		339262	1					
ANR	363475	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		339262	4					
ANR	363476	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5626:7:119326:119381	339262	0	True				
ANR	363477	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	0		||			
ANR	363478	RelationalExpression	reg1 > 15		339262	0		>			
ANR	363479	Identifier	reg1		339262	0					
ANR	363480	PrimaryExpression	15		339262	1					
ANR	363481	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	363482	RelationalExpression	reg2 > 15		339262	0		>			
ANR	363483	Identifier	reg2		339262	0					
ANR	363484	PrimaryExpression	15		339262	1					
ANR	363485	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	363486	RelationalExpression	reg3 > 15		339262	0		>			
ANR	363487	Identifier	reg3		339262	0					
ANR	363488	PrimaryExpression	15		339262	1					
ANR	363489	RelationalExpression	reg4 > 15		339262	1		>			
ANR	363490	Identifier	reg4		339262	0					
ANR	363491	PrimaryExpression	15		339262	1					
ANR	363492	CompoundStatement		4334:65:93525:93525	339262	1					
ANR	363493	ReturnStatement	return - 1 ;	5627:4:119390:119399	339262	0	True				
ANR	363494	UnaryOperationExpression	- 1		339262	0					
ANR	363495	UnaryOperator	-		339262	0					
ANR	363496	PrimaryExpression	1		339262	1					
ANR	363497	ExpressionStatement	ao -> o = 0xe0fb6000	5630:3:119413:119431	339262	5	True				
ANR	363498	AssignmentExpression	ao -> o = 0xe0fb6000		339262	0		=			
ANR	363499	PtrMemberAccess	ao -> o		339262	0					
ANR	363500	Identifier	ao		339262	0					
ANR	363501	Identifier	o		339262	1					
ANR	363502	PrimaryExpression	0xe0fb6000		339262	1					
ANR	363503	ExpressionStatement	ao -> o |= reg1 << 4	5631:3:119436:119454	339262	6	True				
ANR	363504	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	363505	PtrMemberAccess	ao -> o		339262	0					
ANR	363506	Identifier	ao		339262	0					
ANR	363507	Identifier	o		339262	1					
ANR	363508	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	363509	Identifier	reg1		339262	0					
ANR	363510	PrimaryExpression	4		339262	1					
ANR	363511	ExpressionStatement	ao -> o |= reg2	5632:3:119459:119472	339262	7	True				
ANR	363512	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	363513	PtrMemberAccess	ao -> o		339262	0					
ANR	363514	Identifier	ao		339262	0					
ANR	363515	Identifier	o		339262	1					
ANR	363516	Identifier	reg2		339262	1					
ANR	363517	ExpressionStatement	ao -> o |= reg3 << 24	5633:3:119477:119496	339262	8	True				
ANR	363518	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	363519	PtrMemberAccess	ao -> o		339262	0					
ANR	363520	Identifier	ao		339262	0					
ANR	363521	Identifier	o		339262	1					
ANR	363522	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	363523	Identifier	reg3		339262	0					
ANR	363524	PrimaryExpression	24		339262	1					
ANR	363525	ExpressionStatement	ao -> o |= reg4 << 8	5634:3:119501:119519	339262	9	True				
ANR	363526	AssignmentExpression	ao -> o |= reg4 << 8		339262	0		|=			
ANR	363527	PtrMemberAccess	ao -> o		339262	0					
ANR	363528	Identifier	ao		339262	0					
ANR	363529	Identifier	o		339262	1					
ANR	363530	ShiftExpression	reg4 << 8		339262	1		<<			
ANR	363531	Identifier	reg4		339262	0					
ANR	363532	PrimaryExpression	8		339262	1					
ANR	363533	ReturnStatement	return 4 ;	5635:3:119524:119532	339262	10	True				
ANR	363534	PrimaryExpression	4		339262	0					
ANR	363535	BreakStatement	break ;	5637:3:119549:119554	339262	2	True				
ANR	363536	Label	default :	5638:2:119558:119565	339262	3	True				
ANR	363537	Identifier	default		339262	0					
ANR	363538	ReturnStatement	return - 1 ;	5639:3:119570:119579	339262	4	True				
ANR	363539	UnaryOperationExpression	- 1		339262	0					
ANR	363540	UnaryOperator	-		339262	0					
ANR	363541	PrimaryExpression	1		339262	1					
ANR	363542	ElseStatement	else		339262	0					
ANR	363543	IfStatement	"if ( ( m = opmask ( ao -> op , ""umlal"" , 0 ) ) )"		339262	0					
ANR	363544	Condition	"m = opmask ( ao -> op , ""umlal"" , 0 )"	5642:5:119598:119630	339262	0	True				
ANR	363545	AssignmentExpression	"m = opmask ( ao -> op , ""umlal"" , 0 )"		339262	0		=			
ANR	363546	Identifier	m		339262	0					
ANR	363547	CallExpression	"opmask ( ao -> op , ""umlal"" , 0 )"		339262	1					
ANR	363548	Callee	opmask		339262	0					
ANR	363549	Identifier	opmask		339262	0					
ANR	363550	ArgumentList	ao -> op		339262	1					
ANR	363551	Argument	ao -> op		339262	0					
ANR	363552	PtrMemberAccess	ao -> op		339262	0					
ANR	363553	Identifier	ao		339262	0					
ANR	363554	Identifier	op		339262	1					
ANR	363555	Argument	"""umlal"""		339262	1					
ANR	363556	PrimaryExpression	"""umlal"""		339262	0					
ANR	363557	Argument	0		339262	2					
ANR	363558	PrimaryExpression	0		339262	0					
ANR	363559	CompoundStatement		4351:2:93778:93812	339262	1					
ANR	363560	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5643:2:119637:119671	339262	0	True				
ANR	363561	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363562	IdentifierDeclType	ut64		339262	0					
ANR	363563	Identifier	argt		339262	1					
ANR	363564	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363565	Identifier	argt		339262	0					
ANR	363566	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363567	Callee	thumb_selector		339262	0					
ANR	363568	Identifier	thumb_selector		339262	0					
ANR	363569	ArgumentList	ao -> a		339262	1					
ANR	363570	Argument	ao -> a		339262	0					
ANR	363571	PtrMemberAccess	ao -> a		339262	0					
ANR	363572	Identifier	ao		339262	0					
ANR	363573	Identifier	a		339262	1					
ANR	363574	SwitchStatement	switch ( argt )		339262	1					
ANR	363575	Condition	argt	5644:10:119683:119686	339262	0	True				
ANR	363576	Identifier	argt		339262	0					
ANR	363577	CompoundStatement		4352:16:93830:93830	339262	1					
ANR	363578	Label	case THUMB_REG_REG_REG_REG :	5645:2:119693:119719	339262	0	True				
ANR	363579	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	363580	CompoundStatement		4357:3:93966:93994	339262	1					
ANR	363581	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5646:3:119726:119754	339262	0	True				
ANR	363582	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	363583	IdentifierDeclType	ut8		339262	0					
ANR	363584	Identifier	reg1		339262	1					
ANR	363585	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	363586	Identifier	reg1		339262	0					
ANR	363587	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	363588	Callee	getreg		339262	0					
ANR	363589	Identifier	getreg		339262	0					
ANR	363590	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	363591	Argument	ao -> a [ 0 ]		339262	0					
ANR	363592	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	363593	PtrMemberAccess	ao -> a		339262	0					
ANR	363594	Identifier	ao		339262	0					
ANR	363595	Identifier	a		339262	1					
ANR	363596	PrimaryExpression	0		339262	1					
ANR	363597	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5647:3:119759:119787	339262	1	True				
ANR	363598	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	363599	IdentifierDeclType	ut8		339262	0					
ANR	363600	Identifier	reg2		339262	1					
ANR	363601	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	363602	Identifier	reg2		339262	0					
ANR	363603	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	363604	Callee	getreg		339262	0					
ANR	363605	Identifier	getreg		339262	0					
ANR	363606	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	363607	Argument	ao -> a [ 1 ]		339262	0					
ANR	363608	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	363609	PtrMemberAccess	ao -> a		339262	0					
ANR	363610	Identifier	ao		339262	0					
ANR	363611	Identifier	a		339262	1					
ANR	363612	PrimaryExpression	1		339262	1					
ANR	363613	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5648:3:119792:119820	339262	2	True				
ANR	363614	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	363615	IdentifierDeclType	ut8		339262	0					
ANR	363616	Identifier	reg3		339262	1					
ANR	363617	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	363618	Identifier	reg3		339262	0					
ANR	363619	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	363620	Callee	getreg		339262	0					
ANR	363621	Identifier	getreg		339262	0					
ANR	363622	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	363623	Argument	ao -> a [ 2 ]		339262	0					
ANR	363624	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	363625	PtrMemberAccess	ao -> a		339262	0					
ANR	363626	Identifier	ao		339262	0					
ANR	363627	Identifier	a		339262	1					
ANR	363628	PrimaryExpression	2		339262	1					
ANR	363629	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5649:3:119825:119853	339262	3	True				
ANR	363630	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	363631	IdentifierDeclType	ut8		339262	0					
ANR	363632	Identifier	reg4		339262	1					
ANR	363633	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	363634	Identifier	reg4		339262	0					
ANR	363635	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	363636	Callee	getreg		339262	0					
ANR	363637	Identifier	getreg		339262	0					
ANR	363638	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	363639	Argument	ao -> a [ 3 ]		339262	0					
ANR	363640	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	363641	PtrMemberAccess	ao -> a		339262	0					
ANR	363642	Identifier	ao		339262	0					
ANR	363643	Identifier	a		339262	1					
ANR	363644	PrimaryExpression	3		339262	1					
ANR	363645	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		339262	4					
ANR	363646	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5651:7:119863:119918	339262	0	True				
ANR	363647	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	0		||			
ANR	363648	RelationalExpression	reg1 > 15		339262	0		>			
ANR	363649	Identifier	reg1		339262	0					
ANR	363650	PrimaryExpression	15		339262	1					
ANR	363651	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	363652	RelationalExpression	reg2 > 15		339262	0		>			
ANR	363653	Identifier	reg2		339262	0					
ANR	363654	PrimaryExpression	15		339262	1					
ANR	363655	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	363656	RelationalExpression	reg3 > 15		339262	0		>			
ANR	363657	Identifier	reg3		339262	0					
ANR	363658	PrimaryExpression	15		339262	1					
ANR	363659	RelationalExpression	reg4 > 15		339262	1		>			
ANR	363660	Identifier	reg4		339262	0					
ANR	363661	PrimaryExpression	15		339262	1					
ANR	363662	CompoundStatement		4359:65:94062:94062	339262	1					
ANR	363663	ReturnStatement	return - 1 ;	5652:4:119927:119936	339262	0	True				
ANR	363664	UnaryOperationExpression	- 1		339262	0					
ANR	363665	UnaryOperator	-		339262	0					
ANR	363666	PrimaryExpression	1		339262	1					
ANR	363667	ExpressionStatement	ao -> o = 0xe0fb0000	5655:3:119950:119968	339262	5	True				
ANR	363668	AssignmentExpression	ao -> o = 0xe0fb0000		339262	0		=			
ANR	363669	PtrMemberAccess	ao -> o		339262	0					
ANR	363670	Identifier	ao		339262	0					
ANR	363671	Identifier	o		339262	1					
ANR	363672	PrimaryExpression	0xe0fb0000		339262	1					
ANR	363673	ExpressionStatement	ao -> o |= reg1 << 4	5656:3:119973:119991	339262	6	True				
ANR	363674	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	363675	PtrMemberAccess	ao -> o		339262	0					
ANR	363676	Identifier	ao		339262	0					
ANR	363677	Identifier	o		339262	1					
ANR	363678	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	363679	Identifier	reg1		339262	0					
ANR	363680	PrimaryExpression	4		339262	1					
ANR	363681	ExpressionStatement	ao -> o |= reg2	5657:3:119996:120009	339262	7	True				
ANR	363682	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	363683	PtrMemberAccess	ao -> o		339262	0					
ANR	363684	Identifier	ao		339262	0					
ANR	363685	Identifier	o		339262	1					
ANR	363686	Identifier	reg2		339262	1					
ANR	363687	ExpressionStatement	ao -> o |= reg3 << 24	5658:3:120014:120033	339262	8	True				
ANR	363688	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	363689	PtrMemberAccess	ao -> o		339262	0					
ANR	363690	Identifier	ao		339262	0					
ANR	363691	Identifier	o		339262	1					
ANR	363692	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	363693	Identifier	reg3		339262	0					
ANR	363694	PrimaryExpression	24		339262	1					
ANR	363695	ExpressionStatement	ao -> o |= reg4 << 8	5659:3:120038:120056	339262	9	True				
ANR	363696	AssignmentExpression	ao -> o |= reg4 << 8		339262	0		|=			
ANR	363697	PtrMemberAccess	ao -> o		339262	0					
ANR	363698	Identifier	ao		339262	0					
ANR	363699	Identifier	o		339262	1					
ANR	363700	ShiftExpression	reg4 << 8		339262	1		<<			
ANR	363701	Identifier	reg4		339262	0					
ANR	363702	PrimaryExpression	8		339262	1					
ANR	363703	ReturnStatement	return 4 ;	5660:3:120061:120069	339262	10	True				
ANR	363704	PrimaryExpression	4		339262	0					
ANR	363705	BreakStatement	break ;	5662:3:120086:120091	339262	2	True				
ANR	363706	Label	default :	5663:2:120095:120102	339262	3	True				
ANR	363707	Identifier	default		339262	0					
ANR	363708	ReturnStatement	return - 1 ;	5664:3:120107:120116	339262	4	True				
ANR	363709	UnaryOperationExpression	- 1		339262	0					
ANR	363710	UnaryOperator	-		339262	0					
ANR	363711	PrimaryExpression	1		339262	1					
ANR	363712	ElseStatement	else		339262	0					
ANR	363713	IfStatement	"if ( ( m = opmask ( ao -> op , ""umull"" , 0 ) ) )"		339262	0					
ANR	363714	Condition	"m = opmask ( ao -> op , ""umull"" , 0 )"	5667:5:120135:120167	339262	0	True				
ANR	363715	AssignmentExpression	"m = opmask ( ao -> op , ""umull"" , 0 )"		339262	0		=			
ANR	363716	Identifier	m		339262	0					
ANR	363717	CallExpression	"opmask ( ao -> op , ""umull"" , 0 )"		339262	1					
ANR	363718	Callee	opmask		339262	0					
ANR	363719	Identifier	opmask		339262	0					
ANR	363720	ArgumentList	ao -> op		339262	1					
ANR	363721	Argument	ao -> op		339262	0					
ANR	363722	PtrMemberAccess	ao -> op		339262	0					
ANR	363723	Identifier	ao		339262	0					
ANR	363724	Identifier	op		339262	1					
ANR	363725	Argument	"""umull"""		339262	1					
ANR	363726	PrimaryExpression	"""umull"""		339262	0					
ANR	363727	Argument	0		339262	2					
ANR	363728	PrimaryExpression	0		339262	0					
ANR	363729	CompoundStatement		4376:2:94315:94349	339262	1					
ANR	363730	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5668:2:120174:120208	339262	0	True				
ANR	363731	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363732	IdentifierDeclType	ut64		339262	0					
ANR	363733	Identifier	argt		339262	1					
ANR	363734	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363735	Identifier	argt		339262	0					
ANR	363736	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363737	Callee	thumb_selector		339262	0					
ANR	363738	Identifier	thumb_selector		339262	0					
ANR	363739	ArgumentList	ao -> a		339262	1					
ANR	363740	Argument	ao -> a		339262	0					
ANR	363741	PtrMemberAccess	ao -> a		339262	0					
ANR	363742	Identifier	ao		339262	0					
ANR	363743	Identifier	a		339262	1					
ANR	363744	SwitchStatement	switch ( argt )		339262	1					
ANR	363745	Condition	argt	5669:10:120220:120223	339262	0	True				
ANR	363746	Identifier	argt		339262	0					
ANR	363747	CompoundStatement		4377:16:94367:94367	339262	1					
ANR	363748	Label	case THUMB_REG_REG_REG_REG :	5670:2:120230:120256	339262	0	True				
ANR	363749	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	363750	CompoundStatement		4382:3:94503:94531	339262	1					
ANR	363751	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5671:3:120263:120291	339262	0	True				
ANR	363752	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	363753	IdentifierDeclType	ut8		339262	0					
ANR	363754	Identifier	reg1		339262	1					
ANR	363755	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	363756	Identifier	reg1		339262	0					
ANR	363757	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	363758	Callee	getreg		339262	0					
ANR	363759	Identifier	getreg		339262	0					
ANR	363760	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	363761	Argument	ao -> a [ 0 ]		339262	0					
ANR	363762	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	363763	PtrMemberAccess	ao -> a		339262	0					
ANR	363764	Identifier	ao		339262	0					
ANR	363765	Identifier	a		339262	1					
ANR	363766	PrimaryExpression	0		339262	1					
ANR	363767	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5672:3:120296:120324	339262	1	True				
ANR	363768	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	363769	IdentifierDeclType	ut8		339262	0					
ANR	363770	Identifier	reg2		339262	1					
ANR	363771	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	363772	Identifier	reg2		339262	0					
ANR	363773	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	363774	Callee	getreg		339262	0					
ANR	363775	Identifier	getreg		339262	0					
ANR	363776	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	363777	Argument	ao -> a [ 1 ]		339262	0					
ANR	363778	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	363779	PtrMemberAccess	ao -> a		339262	0					
ANR	363780	Identifier	ao		339262	0					
ANR	363781	Identifier	a		339262	1					
ANR	363782	PrimaryExpression	1		339262	1					
ANR	363783	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5673:3:120329:120357	339262	2	True				
ANR	363784	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	363785	IdentifierDeclType	ut8		339262	0					
ANR	363786	Identifier	reg3		339262	1					
ANR	363787	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	363788	Identifier	reg3		339262	0					
ANR	363789	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	363790	Callee	getreg		339262	0					
ANR	363791	Identifier	getreg		339262	0					
ANR	363792	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	363793	Argument	ao -> a [ 2 ]		339262	0					
ANR	363794	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	363795	PtrMemberAccess	ao -> a		339262	0					
ANR	363796	Identifier	ao		339262	0					
ANR	363797	Identifier	a		339262	1					
ANR	363798	PrimaryExpression	2		339262	1					
ANR	363799	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5674:3:120362:120390	339262	3	True				
ANR	363800	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	363801	IdentifierDeclType	ut8		339262	0					
ANR	363802	Identifier	reg4		339262	1					
ANR	363803	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	363804	Identifier	reg4		339262	0					
ANR	363805	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	363806	Callee	getreg		339262	0					
ANR	363807	Identifier	getreg		339262	0					
ANR	363808	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	363809	Argument	ao -> a [ 3 ]		339262	0					
ANR	363810	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	363811	PtrMemberAccess	ao -> a		339262	0					
ANR	363812	Identifier	ao		339262	0					
ANR	363813	Identifier	a		339262	1					
ANR	363814	PrimaryExpression	3		339262	1					
ANR	363815	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		339262	4					
ANR	363816	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5676:7:120400:120455	339262	0	True				
ANR	363817	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	0		||			
ANR	363818	RelationalExpression	reg1 > 15		339262	0		>			
ANR	363819	Identifier	reg1		339262	0					
ANR	363820	PrimaryExpression	15		339262	1					
ANR	363821	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	363822	RelationalExpression	reg2 > 15		339262	0		>			
ANR	363823	Identifier	reg2		339262	0					
ANR	363824	PrimaryExpression	15		339262	1					
ANR	363825	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	363826	RelationalExpression	reg3 > 15		339262	0		>			
ANR	363827	Identifier	reg3		339262	0					
ANR	363828	PrimaryExpression	15		339262	1					
ANR	363829	RelationalExpression	reg4 > 15		339262	1		>			
ANR	363830	Identifier	reg4		339262	0					
ANR	363831	PrimaryExpression	15		339262	1					
ANR	363832	CompoundStatement		4384:65:94599:94599	339262	1					
ANR	363833	ReturnStatement	return - 1 ;	5677:4:120464:120473	339262	0	True				
ANR	363834	UnaryOperationExpression	- 1		339262	0					
ANR	363835	UnaryOperator	-		339262	0					
ANR	363836	PrimaryExpression	1		339262	1					
ANR	363837	ExpressionStatement	ao -> o = 0xa0fb0000	5680:3:120487:120505	339262	5	True				
ANR	363838	AssignmentExpression	ao -> o = 0xa0fb0000		339262	0		=			
ANR	363839	PtrMemberAccess	ao -> o		339262	0					
ANR	363840	Identifier	ao		339262	0					
ANR	363841	Identifier	o		339262	1					
ANR	363842	PrimaryExpression	0xa0fb0000		339262	1					
ANR	363843	ExpressionStatement	ao -> o |= reg1 << 4	5681:3:120510:120528	339262	6	True				
ANR	363844	AssignmentExpression	ao -> o |= reg1 << 4		339262	0		|=			
ANR	363845	PtrMemberAccess	ao -> o		339262	0					
ANR	363846	Identifier	ao		339262	0					
ANR	363847	Identifier	o		339262	1					
ANR	363848	ShiftExpression	reg1 << 4		339262	1		<<			
ANR	363849	Identifier	reg1		339262	0					
ANR	363850	PrimaryExpression	4		339262	1					
ANR	363851	ExpressionStatement	ao -> o |= reg2	5682:3:120533:120546	339262	7	True				
ANR	363852	AssignmentExpression	ao -> o |= reg2		339262	0		|=			
ANR	363853	PtrMemberAccess	ao -> o		339262	0					
ANR	363854	Identifier	ao		339262	0					
ANR	363855	Identifier	o		339262	1					
ANR	363856	Identifier	reg2		339262	1					
ANR	363857	ExpressionStatement	ao -> o |= reg3 << 24	5683:3:120551:120570	339262	8	True				
ANR	363858	AssignmentExpression	ao -> o |= reg3 << 24		339262	0		|=			
ANR	363859	PtrMemberAccess	ao -> o		339262	0					
ANR	363860	Identifier	ao		339262	0					
ANR	363861	Identifier	o		339262	1					
ANR	363862	ShiftExpression	reg3 << 24		339262	1		<<			
ANR	363863	Identifier	reg3		339262	0					
ANR	363864	PrimaryExpression	24		339262	1					
ANR	363865	ExpressionStatement	ao -> o |= reg4 << 8	5684:3:120575:120593	339262	9	True				
ANR	363866	AssignmentExpression	ao -> o |= reg4 << 8		339262	0		|=			
ANR	363867	PtrMemberAccess	ao -> o		339262	0					
ANR	363868	Identifier	ao		339262	0					
ANR	363869	Identifier	o		339262	1					
ANR	363870	ShiftExpression	reg4 << 8		339262	1		<<			
ANR	363871	Identifier	reg4		339262	0					
ANR	363872	PrimaryExpression	8		339262	1					
ANR	363873	ReturnStatement	return 4 ;	5685:3:120598:120606	339262	10	True				
ANR	363874	PrimaryExpression	4		339262	0					
ANR	363875	BreakStatement	break ;	5687:3:120623:120628	339262	2	True				
ANR	363876	Label	default :	5688:2:120632:120639	339262	3	True				
ANR	363877	Identifier	default		339262	0					
ANR	363878	ReturnStatement	return - 1 ;	5689:3:120644:120653	339262	4	True				
ANR	363879	UnaryOperationExpression	- 1		339262	0					
ANR	363880	UnaryOperator	-		339262	0					
ANR	363881	PrimaryExpression	1		339262	1					
ANR	363882	ElseStatement	else		339262	0					
ANR	363883	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	363884	Condition	"m = opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT )"	5692:5:120672:120726	339262	0	True				
ANR	363885	AssignmentExpression	"m = opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	363886	Identifier	m		339262	0					
ANR	363887	CallExpression	"opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	363888	Callee	opmask		339262	0					
ANR	363889	Identifier	opmask		339262	0					
ANR	363890	ArgumentList	ao -> op		339262	1					
ANR	363891	Argument	ao -> op		339262	0					
ANR	363892	PtrMemberAccess	ao -> op		339262	0					
ANR	363893	Identifier	ao		339262	0					
ANR	363894	Identifier	op		339262	1					
ANR	363895	Argument	"""uqadd"""		339262	1					
ANR	363896	PrimaryExpression	"""uqadd"""		339262	0					
ANR	363897	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	363898	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	363899	Identifier	EIGHT_BIT		339262	0					
ANR	363900	Identifier	SIXTEEN_BIT		339262	1					
ANR	363901	CompoundStatement		4402:2:94912:94955	339262	1					
ANR	363902	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5693:2:120733:120767	339262	0	True				
ANR	363903	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	363904	IdentifierDeclType	ut64		339262	0					
ANR	363905	Identifier	argt		339262	1					
ANR	363906	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	363907	Identifier	argt		339262	0					
ANR	363908	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	363909	Callee	thumb_selector		339262	0					
ANR	363910	Identifier	thumb_selector		339262	0					
ANR	363911	ArgumentList	ao -> a		339262	1					
ANR	363912	Argument	ao -> a		339262	0					
ANR	363913	PtrMemberAccess	ao -> a		339262	0					
ANR	363914	Identifier	ao		339262	0					
ANR	363915	Identifier	a		339262	1					
ANR	363916	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5694:2:120771:120814	339262	1	True				
ANR	363917	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	0					
ANR	363918	IdentifierDeclType	ut64		339262	0					
ANR	363919	Identifier	sufsel		339262	1					
ANR	363920	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	363921	Identifier	sufsel		339262	0					
ANR	363922	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	363923	Identifier	m		339262	0					
ANR	363924	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	1		|			
ANR	363925	Identifier	EIGHT_BIT		339262	0					
ANR	363926	Identifier	SIXTEEN_BIT		339262	1					
ANR	363927	SwitchStatement	switch ( argt )		339262	2					
ANR	363928	Condition	argt	5695:10:120826:120829	339262	0	True				
ANR	363929	Identifier	argt		339262	0					
ANR	363930	CompoundStatement		4403:16:94973:94973	339262	1					
ANR	363931	Label	case THUMB_REG_REG :	5696:2:120836:120854	339262	0	True				
ANR	363932	Identifier	THUMB_REG_REG		339262	0					
ANR	363933	CompoundStatement		4404:22:94997:94997	339262	1					
ANR	363934	ExpressionStatement	std_opt_2 ( ao )	5697:3:120861:120875	339262	0	True				
ANR	363935	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	363936	Callee	std_opt_2		339262	0					
ANR	363937	Identifier	std_opt_2		339262	0					
ANR	363938	ArgumentList	ao		339262	1					
ANR	363939	Argument	ao		339262	0					
ANR	363940	Identifier	ao		339262	0					
ANR	363941	Label	case THUMB_REG_REG_REG :	5700:2:120921:120943	339262	2	True				
ANR	363942	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	363943	CompoundStatement		4408:26:95086:95086	339262	3					
ANR	363944	IfStatement	if ( sufsel == EIGHT_BIT )		339262	0					
ANR	363945	Condition	sufsel == EIGHT_BIT	5701:7:120954:120972	339262	0	True				
ANR	363946	EqualityExpression	sufsel == EIGHT_BIT		339262	0		==			
ANR	363947	Identifier	sufsel		339262	0					
ANR	363948	Identifier	EIGHT_BIT		339262	1					
ANR	363949	CompoundStatement		4409:28:95116:95116	339262	1					
ANR	363950	ExpressionStatement	ao -> o = 0x80fa50f0	5702:4:120981:120999	339262	0	True				
ANR	363951	AssignmentExpression	ao -> o = 0x80fa50f0		339262	0		=			
ANR	363952	PtrMemberAccess	ao -> o		339262	0					
ANR	363953	Identifier	ao		339262	0					
ANR	363954	Identifier	o		339262	1					
ANR	363955	PrimaryExpression	0x80fa50f0		339262	1					
ANR	363956	ElseStatement	else		339262	0					
ANR	363957	IfStatement	if ( sufsel == SIXTEEN_BIT )		339262	0					
ANR	363958	Condition	sufsel == SIXTEEN_BIT	5704:7:121019:121039	339262	0	True				
ANR	363959	EqualityExpression	sufsel == SIXTEEN_BIT		339262	0		==			
ANR	363960	Identifier	sufsel		339262	0					
ANR	363961	Identifier	SIXTEEN_BIT		339262	1					
ANR	363962	CompoundStatement		4412:30:95183:95183	339262	1					
ANR	363963	ExpressionStatement	ao -> o = 0x90fa50f0	5705:4:121048:121066	339262	0	True				
ANR	363964	AssignmentExpression	ao -> o = 0x90fa50f0		339262	0		=			
ANR	363965	PtrMemberAccess	ao -> o		339262	0					
ANR	363966	Identifier	ao		339262	0					
ANR	363967	Identifier	o		339262	1					
ANR	363968	PrimaryExpression	0x90fa50f0		339262	1					
ANR	363969	ElseStatement	else		339262	0					
ANR	363970	CompoundStatement		4414:10:95219:95219	339262	0					
ANR	363971	ReturnStatement	return - 1 ;	5707:4:121084:121093	339262	0	True				
ANR	363972	UnaryOperationExpression	- 1		339262	0					
ANR	363973	UnaryOperator	-		339262	0					
ANR	363974	PrimaryExpression	1		339262	1					
ANR	363975	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5710:3:121108:121144	339262	1	True				
ANR	363976	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	363977	Callee	std_32bit_3reg		339262	0					
ANR	363978	Identifier	std_32bit_3reg		339262	0					
ANR	363979	ArgumentList	ao		339262	1					
ANR	363980	Argument	ao		339262	0					
ANR	363981	Identifier	ao		339262	0					
ANR	363982	Argument	m		339262	1					
ANR	363983	Identifier	m		339262	0					
ANR	363984	Argument	false		339262	2					
ANR	363985	Identifier	false		339262	0					
ANR	363986	BreakStatement	break ;	5712:3:121161:121166	339262	4	True				
ANR	363987	Label	default :	5713:2:121170:121177	339262	5	True				
ANR	363988	Identifier	default		339262	0					
ANR	363989	ReturnStatement	return - 1 ;	5714:3:121182:121191	339262	6	True				
ANR	363990	UnaryOperationExpression	- 1		339262	0					
ANR	363991	UnaryOperator	-		339262	0					
ANR	363992	PrimaryExpression	1		339262	1					
ANR	363993	ElseStatement	else		339262	0					
ANR	363994	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqasx"" , 0 ) ) )"		339262	0					
ANR	363995	Condition	"m = opmask ( ao -> op , ""uqasx"" , 0 )"	5717:5:121210:121242	339262	0	True				
ANR	363996	AssignmentExpression	"m = opmask ( ao -> op , ""uqasx"" , 0 )"		339262	0		=			
ANR	363997	Identifier	m		339262	0					
ANR	363998	CallExpression	"opmask ( ao -> op , ""uqasx"" , 0 )"		339262	1					
ANR	363999	Callee	opmask		339262	0					
ANR	364000	Identifier	opmask		339262	0					
ANR	364001	ArgumentList	ao -> op		339262	1					
ANR	364002	Argument	ao -> op		339262	0					
ANR	364003	PtrMemberAccess	ao -> op		339262	0					
ANR	364004	Identifier	ao		339262	0					
ANR	364005	Identifier	op		339262	1					
ANR	364006	Argument	"""uqasx"""		339262	1					
ANR	364007	PrimaryExpression	"""uqasx"""		339262	0					
ANR	364008	Argument	0		339262	2					
ANR	364009	PrimaryExpression	0		339262	0					
ANR	364010	CompoundStatement		4426:2:95390:95424	339262	1					
ANR	364011	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5718:2:121249:121283	339262	0	True				
ANR	364012	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364013	IdentifierDeclType	ut64		339262	0					
ANR	364014	Identifier	argt		339262	1					
ANR	364015	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364016	Identifier	argt		339262	0					
ANR	364017	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364018	Callee	thumb_selector		339262	0					
ANR	364019	Identifier	thumb_selector		339262	0					
ANR	364020	ArgumentList	ao -> a		339262	1					
ANR	364021	Argument	ao -> a		339262	0					
ANR	364022	PtrMemberAccess	ao -> a		339262	0					
ANR	364023	Identifier	ao		339262	0					
ANR	364024	Identifier	a		339262	1					
ANR	364025	SwitchStatement	switch ( argt )		339262	1					
ANR	364026	Condition	argt	5719:10:121295:121298	339262	0	True				
ANR	364027	Identifier	argt		339262	0					
ANR	364028	CompoundStatement		4427:16:95442:95442	339262	1					
ANR	364029	Label	case THUMB_REG_REG :	5720:2:121305:121323	339262	0	True				
ANR	364030	Identifier	THUMB_REG_REG		339262	0					
ANR	364031	CompoundStatement		4428:22:95466:95466	339262	1					
ANR	364032	ExpressionStatement	std_opt_2 ( ao )	5721:3:121330:121344	339262	0	True				
ANR	364033	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	364034	Callee	std_opt_2		339262	0					
ANR	364035	Identifier	std_opt_2		339262	0					
ANR	364036	ArgumentList	ao		339262	1					
ANR	364037	Argument	ao		339262	0					
ANR	364038	Identifier	ao		339262	0					
ANR	364039	Label	case THUMB_REG_REG_REG :	5724:2:121390:121412	339262	2	True				
ANR	364040	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	364041	CompoundStatement		4432:26:95555:95555	339262	3					
ANR	364042	ExpressionStatement	ao -> o = 0xa0fa50f0	5725:3:121419:121437	339262	0	True				
ANR	364043	AssignmentExpression	ao -> o = 0xa0fa50f0		339262	0		=			
ANR	364044	PtrMemberAccess	ao -> o		339262	0					
ANR	364045	Identifier	ao		339262	0					
ANR	364046	Identifier	o		339262	1					
ANR	364047	PrimaryExpression	0xa0fa50f0		339262	1					
ANR	364048	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5727:3:121446:121482	339262	1	True				
ANR	364049	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	364050	Callee	std_32bit_3reg		339262	0					
ANR	364051	Identifier	std_32bit_3reg		339262	0					
ANR	364052	ArgumentList	ao		339262	1					
ANR	364053	Argument	ao		339262	0					
ANR	364054	Identifier	ao		339262	0					
ANR	364055	Argument	m		339262	1					
ANR	364056	Identifier	m		339262	0					
ANR	364057	Argument	false		339262	2					
ANR	364058	Identifier	false		339262	0					
ANR	364059	BreakStatement	break ;	5729:3:121499:121504	339262	4	True				
ANR	364060	Label	default :	5730:2:121508:121515	339262	5	True				
ANR	364061	Identifier	default		339262	0					
ANR	364062	ReturnStatement	return - 1 ;	5731:3:121520:121529	339262	6	True				
ANR	364063	UnaryOperationExpression	- 1		339262	0					
ANR	364064	UnaryOperator	-		339262	0					
ANR	364065	PrimaryExpression	1		339262	1					
ANR	364066	ElseStatement	else		339262	0					
ANR	364067	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqsax"" , 0 ) ) )"		339262	0					
ANR	364068	Condition	"m = opmask ( ao -> op , ""uqsax"" , 0 )"	5734:5:121548:121580	339262	0	True				
ANR	364069	AssignmentExpression	"m = opmask ( ao -> op , ""uqsax"" , 0 )"		339262	0		=			
ANR	364070	Identifier	m		339262	0					
ANR	364071	CallExpression	"opmask ( ao -> op , ""uqsax"" , 0 )"		339262	1					
ANR	364072	Callee	opmask		339262	0					
ANR	364073	Identifier	opmask		339262	0					
ANR	364074	ArgumentList	ao -> op		339262	1					
ANR	364075	Argument	ao -> op		339262	0					
ANR	364076	PtrMemberAccess	ao -> op		339262	0					
ANR	364077	Identifier	ao		339262	0					
ANR	364078	Identifier	op		339262	1					
ANR	364079	Argument	"""uqsax"""		339262	1					
ANR	364080	PrimaryExpression	"""uqsax"""		339262	0					
ANR	364081	Argument	0		339262	2					
ANR	364082	PrimaryExpression	0		339262	0					
ANR	364083	CompoundStatement		4443:2:95728:95762	339262	1					
ANR	364084	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5735:2:121587:121621	339262	0	True				
ANR	364085	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364086	IdentifierDeclType	ut64		339262	0					
ANR	364087	Identifier	argt		339262	1					
ANR	364088	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364089	Identifier	argt		339262	0					
ANR	364090	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364091	Callee	thumb_selector		339262	0					
ANR	364092	Identifier	thumb_selector		339262	0					
ANR	364093	ArgumentList	ao -> a		339262	1					
ANR	364094	Argument	ao -> a		339262	0					
ANR	364095	PtrMemberAccess	ao -> a		339262	0					
ANR	364096	Identifier	ao		339262	0					
ANR	364097	Identifier	a		339262	1					
ANR	364098	SwitchStatement	switch ( argt )		339262	1					
ANR	364099	Condition	argt	5736:10:121633:121636	339262	0	True				
ANR	364100	Identifier	argt		339262	0					
ANR	364101	CompoundStatement		4444:16:95780:95780	339262	1					
ANR	364102	Label	case THUMB_REG_REG :	5737:2:121643:121661	339262	0	True				
ANR	364103	Identifier	THUMB_REG_REG		339262	0					
ANR	364104	CompoundStatement		4445:22:95804:95804	339262	1					
ANR	364105	ExpressionStatement	std_opt_2 ( ao )	5738:3:121668:121682	339262	0	True				
ANR	364106	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	364107	Callee	std_opt_2		339262	0					
ANR	364108	Identifier	std_opt_2		339262	0					
ANR	364109	ArgumentList	ao		339262	1					
ANR	364110	Argument	ao		339262	0					
ANR	364111	Identifier	ao		339262	0					
ANR	364112	Label	case THUMB_REG_REG_REG :	5741:2:121728:121750	339262	2	True				
ANR	364113	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	364114	CompoundStatement		4449:26:95893:95893	339262	3					
ANR	364115	ExpressionStatement	ao -> o = 0xe0fa50f0	5742:3:121757:121775	339262	0	True				
ANR	364116	AssignmentExpression	ao -> o = 0xe0fa50f0		339262	0		=			
ANR	364117	PtrMemberAccess	ao -> o		339262	0					
ANR	364118	Identifier	ao		339262	0					
ANR	364119	Identifier	o		339262	1					
ANR	364120	PrimaryExpression	0xe0fa50f0		339262	1					
ANR	364121	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5744:3:121784:121820	339262	1	True				
ANR	364122	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	364123	Callee	std_32bit_3reg		339262	0					
ANR	364124	Identifier	std_32bit_3reg		339262	0					
ANR	364125	ArgumentList	ao		339262	1					
ANR	364126	Argument	ao		339262	0					
ANR	364127	Identifier	ao		339262	0					
ANR	364128	Argument	m		339262	1					
ANR	364129	Identifier	m		339262	0					
ANR	364130	Argument	false		339262	2					
ANR	364131	Identifier	false		339262	0					
ANR	364132	BreakStatement	break ;	5746:3:121837:121842	339262	4	True				
ANR	364133	Label	default :	5747:2:121846:121853	339262	5	True				
ANR	364134	Identifier	default		339262	0					
ANR	364135	ReturnStatement	return - 1 ;	5748:3:121858:121867	339262	6	True				
ANR	364136	UnaryOperationExpression	- 1		339262	0					
ANR	364137	UnaryOperator	-		339262	0					
ANR	364138	PrimaryExpression	1		339262	1					
ANR	364139	ElseStatement	else		339262	0					
ANR	364140	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	364141	Condition	"m = opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT )"	5751:5:121886:121940	339262	0	True				
ANR	364142	AssignmentExpression	"m = opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	364143	Identifier	m		339262	0					
ANR	364144	CallExpression	"opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	364145	Callee	opmask		339262	0					
ANR	364146	Identifier	opmask		339262	0					
ANR	364147	ArgumentList	ao -> op		339262	1					
ANR	364148	Argument	ao -> op		339262	0					
ANR	364149	PtrMemberAccess	ao -> op		339262	0					
ANR	364150	Identifier	ao		339262	0					
ANR	364151	Identifier	op		339262	1					
ANR	364152	Argument	"""uqsub"""		339262	1					
ANR	364153	PrimaryExpression	"""uqsub"""		339262	0					
ANR	364154	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	364155	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	364156	Identifier	EIGHT_BIT		339262	0					
ANR	364157	Identifier	SIXTEEN_BIT		339262	1					
ANR	364158	CompoundStatement		4461:2:96126:96169	339262	1					
ANR	364159	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5752:2:121947:121981	339262	0	True				
ANR	364160	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364161	IdentifierDeclType	ut64		339262	0					
ANR	364162	Identifier	argt		339262	1					
ANR	364163	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364164	Identifier	argt		339262	0					
ANR	364165	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364166	Callee	thumb_selector		339262	0					
ANR	364167	Identifier	thumb_selector		339262	0					
ANR	364168	ArgumentList	ao -> a		339262	1					
ANR	364169	Argument	ao -> a		339262	0					
ANR	364170	PtrMemberAccess	ao -> a		339262	0					
ANR	364171	Identifier	ao		339262	0					
ANR	364172	Identifier	a		339262	1					
ANR	364173	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5753:2:121985:122028	339262	1	True				
ANR	364174	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	0					
ANR	364175	IdentifierDeclType	ut64		339262	0					
ANR	364176	Identifier	sufsel		339262	1					
ANR	364177	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	364178	Identifier	sufsel		339262	0					
ANR	364179	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	364180	Identifier	m		339262	0					
ANR	364181	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	1		|			
ANR	364182	Identifier	EIGHT_BIT		339262	0					
ANR	364183	Identifier	SIXTEEN_BIT		339262	1					
ANR	364184	SwitchStatement	switch ( argt )		339262	2					
ANR	364185	Condition	argt	5754:10:122040:122043	339262	0	True				
ANR	364186	Identifier	argt		339262	0					
ANR	364187	CompoundStatement		4462:16:96187:96187	339262	1					
ANR	364188	Label	case THUMB_REG_REG :	5755:2:122050:122068	339262	0	True				
ANR	364189	Identifier	THUMB_REG_REG		339262	0					
ANR	364190	CompoundStatement		4463:22:96211:96211	339262	1					
ANR	364191	ExpressionStatement	std_opt_2 ( ao )	5756:3:122075:122089	339262	0	True				
ANR	364192	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	364193	Callee	std_opt_2		339262	0					
ANR	364194	Identifier	std_opt_2		339262	0					
ANR	364195	ArgumentList	ao		339262	1					
ANR	364196	Argument	ao		339262	0					
ANR	364197	Identifier	ao		339262	0					
ANR	364198	Label	case THUMB_REG_REG_REG :	5759:2:122135:122157	339262	2	True				
ANR	364199	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	364200	CompoundStatement		4467:26:96300:96300	339262	3					
ANR	364201	IfStatement	if ( sufsel == EIGHT_BIT )		339262	0					
ANR	364202	Condition	sufsel == EIGHT_BIT	5760:7:122168:122186	339262	0	True				
ANR	364203	EqualityExpression	sufsel == EIGHT_BIT		339262	0		==			
ANR	364204	Identifier	sufsel		339262	0					
ANR	364205	Identifier	EIGHT_BIT		339262	1					
ANR	364206	CompoundStatement		4468:28:96330:96330	339262	1					
ANR	364207	ExpressionStatement	ao -> o = 0xc0fa50f0	5761:4:122195:122213	339262	0	True				
ANR	364208	AssignmentExpression	ao -> o = 0xc0fa50f0		339262	0		=			
ANR	364209	PtrMemberAccess	ao -> o		339262	0					
ANR	364210	Identifier	ao		339262	0					
ANR	364211	Identifier	o		339262	1					
ANR	364212	PrimaryExpression	0xc0fa50f0		339262	1					
ANR	364213	ElseStatement	else		339262	0					
ANR	364214	IfStatement	if ( sufsel == SIXTEEN_BIT )		339262	0					
ANR	364215	Condition	sufsel == SIXTEEN_BIT	5763:7:122233:122253	339262	0	True				
ANR	364216	EqualityExpression	sufsel == SIXTEEN_BIT		339262	0		==			
ANR	364217	Identifier	sufsel		339262	0					
ANR	364218	Identifier	SIXTEEN_BIT		339262	1					
ANR	364219	CompoundStatement		4471:30:96397:96397	339262	1					
ANR	364220	ExpressionStatement	ao -> o = 0xd0fa50f0	5764:4:122262:122280	339262	0	True				
ANR	364221	AssignmentExpression	ao -> o = 0xd0fa50f0		339262	0		=			
ANR	364222	PtrMemberAccess	ao -> o		339262	0					
ANR	364223	Identifier	ao		339262	0					
ANR	364224	Identifier	o		339262	1					
ANR	364225	PrimaryExpression	0xd0fa50f0		339262	1					
ANR	364226	ElseStatement	else		339262	0					
ANR	364227	CompoundStatement		4473:10:96433:96433	339262	0					
ANR	364228	ReturnStatement	return - 1 ;	5766:4:122298:122307	339262	0	True				
ANR	364229	UnaryOperationExpression	- 1		339262	0					
ANR	364230	UnaryOperator	-		339262	0					
ANR	364231	PrimaryExpression	1		339262	1					
ANR	364232	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5769:3:122322:122358	339262	1	True				
ANR	364233	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	364234	Callee	std_32bit_3reg		339262	0					
ANR	364235	Identifier	std_32bit_3reg		339262	0					
ANR	364236	ArgumentList	ao		339262	1					
ANR	364237	Argument	ao		339262	0					
ANR	364238	Identifier	ao		339262	0					
ANR	364239	Argument	m		339262	1					
ANR	364240	Identifier	m		339262	0					
ANR	364241	Argument	false		339262	2					
ANR	364242	Identifier	false		339262	0					
ANR	364243	BreakStatement	break ;	5771:3:122375:122380	339262	4	True				
ANR	364244	Label	default :	5772:2:122384:122391	339262	5	True				
ANR	364245	Identifier	default		339262	0					
ANR	364246	ReturnStatement	return - 1 ;	5773:3:122396:122405	339262	6	True				
ANR	364247	UnaryOperationExpression	- 1		339262	0					
ANR	364248	UnaryOperator	-		339262	0					
ANR	364249	PrimaryExpression	1		339262	1					
ANR	364250	ElseStatement	else		339262	0					
ANR	364251	IfStatement	"if ( ( m = opmask ( ao -> op , ""usad8"" , 0 ) ) )"		339262	0					
ANR	364252	Condition	"m = opmask ( ao -> op , ""usad8"" , 0 )"	5776:5:122424:122456	339262	0	True				
ANR	364253	AssignmentExpression	"m = opmask ( ao -> op , ""usad8"" , 0 )"		339262	0		=			
ANR	364254	Identifier	m		339262	0					
ANR	364255	CallExpression	"opmask ( ao -> op , ""usad8"" , 0 )"		339262	1					
ANR	364256	Callee	opmask		339262	0					
ANR	364257	Identifier	opmask		339262	0					
ANR	364258	ArgumentList	ao -> op		339262	1					
ANR	364259	Argument	ao -> op		339262	0					
ANR	364260	PtrMemberAccess	ao -> op		339262	0					
ANR	364261	Identifier	ao		339262	0					
ANR	364262	Identifier	op		339262	1					
ANR	364263	Argument	"""usad8"""		339262	1					
ANR	364264	PrimaryExpression	"""usad8"""		339262	0					
ANR	364265	Argument	0		339262	2					
ANR	364266	PrimaryExpression	0		339262	0					
ANR	364267	CompoundStatement		4485:2:96604:96638	339262	1					
ANR	364268	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5777:2:122463:122497	339262	0	True				
ANR	364269	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364270	IdentifierDeclType	ut64		339262	0					
ANR	364271	Identifier	argt		339262	1					
ANR	364272	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364273	Identifier	argt		339262	0					
ANR	364274	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364275	Callee	thumb_selector		339262	0					
ANR	364276	Identifier	thumb_selector		339262	0					
ANR	364277	ArgumentList	ao -> a		339262	1					
ANR	364278	Argument	ao -> a		339262	0					
ANR	364279	PtrMemberAccess	ao -> a		339262	0					
ANR	364280	Identifier	ao		339262	0					
ANR	364281	Identifier	a		339262	1					
ANR	364282	SwitchStatement	switch ( argt )		339262	1					
ANR	364283	Condition	argt	5778:10:122509:122512	339262	0	True				
ANR	364284	Identifier	argt		339262	0					
ANR	364285	CompoundStatement		4486:16:96656:96656	339262	1					
ANR	364286	Label	case THUMB_REG_REG :	5779:2:122519:122537	339262	0	True				
ANR	364287	Identifier	THUMB_REG_REG		339262	0					
ANR	364288	CompoundStatement		4487:22:96680:96680	339262	1					
ANR	364289	ExpressionStatement	std_opt_2 ( ao )	5780:3:122544:122558	339262	0	True				
ANR	364290	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	364291	Callee	std_opt_2		339262	0					
ANR	364292	Identifier	std_opt_2		339262	0					
ANR	364293	ArgumentList	ao		339262	1					
ANR	364294	Argument	ao		339262	0					
ANR	364295	Identifier	ao		339262	0					
ANR	364296	Label	case THUMB_REG_REG_REG :	5783:2:122604:122626	339262	2	True				
ANR	364297	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	364298	CompoundStatement		4491:26:96769:96769	339262	3					
ANR	364299	ExpressionStatement	ao -> o = 0x70fb00f0	5784:3:122633:122651	339262	0	True				
ANR	364300	AssignmentExpression	ao -> o = 0x70fb00f0		339262	0		=			
ANR	364301	PtrMemberAccess	ao -> o		339262	0					
ANR	364302	Identifier	ao		339262	0					
ANR	364303	Identifier	o		339262	1					
ANR	364304	PrimaryExpression	0x70fb00f0		339262	1					
ANR	364305	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5786:3:122660:122696	339262	1	True				
ANR	364306	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	364307	Callee	std_32bit_3reg		339262	0					
ANR	364308	Identifier	std_32bit_3reg		339262	0					
ANR	364309	ArgumentList	ao		339262	1					
ANR	364310	Argument	ao		339262	0					
ANR	364311	Identifier	ao		339262	0					
ANR	364312	Argument	m		339262	1					
ANR	364313	Identifier	m		339262	0					
ANR	364314	Argument	false		339262	2					
ANR	364315	Identifier	false		339262	0					
ANR	364316	BreakStatement	break ;	5788:3:122713:122718	339262	4	True				
ANR	364317	Label	default :	5789:2:122722:122729	339262	5	True				
ANR	364318	Identifier	default		339262	0					
ANR	364319	ReturnStatement	return - 1 ;	5790:3:122734:122743	339262	6	True				
ANR	364320	UnaryOperationExpression	- 1		339262	0					
ANR	364321	UnaryOperator	-		339262	0					
ANR	364322	PrimaryExpression	1		339262	1					
ANR	364323	ElseStatement	else		339262	0					
ANR	364324	IfStatement	"if ( ( m = opmask ( ao -> op , ""usada8"" , 0 ) ) )"		339262	0					
ANR	364325	Condition	"m = opmask ( ao -> op , ""usada8"" , 0 )"	5793:5:122762:122795	339262	0	True				
ANR	364326	AssignmentExpression	"m = opmask ( ao -> op , ""usada8"" , 0 )"		339262	0		=			
ANR	364327	Identifier	m		339262	0					
ANR	364328	CallExpression	"opmask ( ao -> op , ""usada8"" , 0 )"		339262	1					
ANR	364329	Callee	opmask		339262	0					
ANR	364330	Identifier	opmask		339262	0					
ANR	364331	ArgumentList	ao -> op		339262	1					
ANR	364332	Argument	ao -> op		339262	0					
ANR	364333	PtrMemberAccess	ao -> op		339262	0					
ANR	364334	Identifier	ao		339262	0					
ANR	364335	Identifier	op		339262	1					
ANR	364336	Argument	"""usada8"""		339262	1					
ANR	364337	PrimaryExpression	"""usada8"""		339262	0					
ANR	364338	Argument	0		339262	2					
ANR	364339	PrimaryExpression	0		339262	0					
ANR	364340	CompoundStatement		4502:2:96943:96977	339262	1					
ANR	364341	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5794:2:122802:122836	339262	0	True				
ANR	364342	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364343	IdentifierDeclType	ut64		339262	0					
ANR	364344	Identifier	argt		339262	1					
ANR	364345	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364346	Identifier	argt		339262	0					
ANR	364347	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364348	Callee	thumb_selector		339262	0					
ANR	364349	Identifier	thumb_selector		339262	0					
ANR	364350	ArgumentList	ao -> a		339262	1					
ANR	364351	Argument	ao -> a		339262	0					
ANR	364352	PtrMemberAccess	ao -> a		339262	0					
ANR	364353	Identifier	ao		339262	0					
ANR	364354	Identifier	a		339262	1					
ANR	364355	SwitchStatement	switch ( argt )		339262	1					
ANR	364356	Condition	argt	5795:10:122848:122851	339262	0	True				
ANR	364357	Identifier	argt		339262	0					
ANR	364358	CompoundStatement		4503:16:96995:96995	339262	1					
ANR	364359	Label	case THUMB_REG_REG_REG_REG :	5796:2:122858:122884	339262	0	True				
ANR	364360	Identifier	THUMB_REG_REG_REG_REG		339262	0					
ANR	364361	CompoundStatement		4508:3:97131:97159	339262	1					
ANR	364362	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5797:3:122891:122919	339262	0	True				
ANR	364363	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	364364	IdentifierDeclType	ut8		339262	0					
ANR	364365	Identifier	reg1		339262	1					
ANR	364366	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	364367	Identifier	reg1		339262	0					
ANR	364368	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	364369	Callee	getreg		339262	0					
ANR	364370	Identifier	getreg		339262	0					
ANR	364371	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	364372	Argument	ao -> a [ 0 ]		339262	0					
ANR	364373	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	364374	PtrMemberAccess	ao -> a		339262	0					
ANR	364375	Identifier	ao		339262	0					
ANR	364376	Identifier	a		339262	1					
ANR	364377	PrimaryExpression	0		339262	1					
ANR	364378	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5798:3:122924:122952	339262	1	True				
ANR	364379	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	364380	IdentifierDeclType	ut8		339262	0					
ANR	364381	Identifier	reg2		339262	1					
ANR	364382	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	364383	Identifier	reg2		339262	0					
ANR	364384	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	364385	Callee	getreg		339262	0					
ANR	364386	Identifier	getreg		339262	0					
ANR	364387	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	364388	Argument	ao -> a [ 1 ]		339262	0					
ANR	364389	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	364390	PtrMemberAccess	ao -> a		339262	0					
ANR	364391	Identifier	ao		339262	0					
ANR	364392	Identifier	a		339262	1					
ANR	364393	PrimaryExpression	1		339262	1					
ANR	364394	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5799:3:122957:122985	339262	2	True				
ANR	364395	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	364396	IdentifierDeclType	ut8		339262	0					
ANR	364397	Identifier	reg3		339262	1					
ANR	364398	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	364399	Identifier	reg3		339262	0					
ANR	364400	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	364401	Callee	getreg		339262	0					
ANR	364402	Identifier	getreg		339262	0					
ANR	364403	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	364404	Argument	ao -> a [ 2 ]		339262	0					
ANR	364405	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	364406	PtrMemberAccess	ao -> a		339262	0					
ANR	364407	Identifier	ao		339262	0					
ANR	364408	Identifier	a		339262	1					
ANR	364409	PrimaryExpression	2		339262	1					
ANR	364410	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5800:3:122990:123018	339262	3	True				
ANR	364411	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		339262	0					
ANR	364412	IdentifierDeclType	ut8		339262	0					
ANR	364413	Identifier	reg4		339262	1					
ANR	364414	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		339262	2		=			
ANR	364415	Identifier	reg4		339262	0					
ANR	364416	CallExpression	getreg ( ao -> a [ 3 ] )		339262	1					
ANR	364417	Callee	getreg		339262	0					
ANR	364418	Identifier	getreg		339262	0					
ANR	364419	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	364420	Argument	ao -> a [ 3 ]		339262	0					
ANR	364421	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	364422	PtrMemberAccess	ao -> a		339262	0					
ANR	364423	Identifier	ao		339262	0					
ANR	364424	Identifier	a		339262	1					
ANR	364425	PrimaryExpression	3		339262	1					
ANR	364426	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		339262	4					
ANR	364427	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5802:7:123028:123083	339262	0	True				
ANR	364428	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	0		||			
ANR	364429	RelationalExpression	reg1 > 15		339262	0		>			
ANR	364430	Identifier	reg1		339262	0					
ANR	364431	PrimaryExpression	15		339262	1					
ANR	364432	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	364433	RelationalExpression	reg2 > 15		339262	0		>			
ANR	364434	Identifier	reg2		339262	0					
ANR	364435	PrimaryExpression	15		339262	1					
ANR	364436	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		339262	1		||			
ANR	364437	RelationalExpression	reg3 > 15		339262	0		>			
ANR	364438	Identifier	reg3		339262	0					
ANR	364439	PrimaryExpression	15		339262	1					
ANR	364440	RelationalExpression	reg4 > 15		339262	1		>			
ANR	364441	Identifier	reg4		339262	0					
ANR	364442	PrimaryExpression	15		339262	1					
ANR	364443	CompoundStatement		4510:65:97227:97227	339262	1					
ANR	364444	ReturnStatement	return - 1 ;	5803:4:123092:123101	339262	0	True				
ANR	364445	UnaryOperationExpression	- 1		339262	0					
ANR	364446	UnaryOperator	-		339262	0					
ANR	364447	PrimaryExpression	1		339262	1					
ANR	364448	ExpressionStatement	ao -> o = 0x70fb0000	5806:3:123115:123133	339262	5	True				
ANR	364449	AssignmentExpression	ao -> o = 0x70fb0000		339262	0		=			
ANR	364450	PtrMemberAccess	ao -> o		339262	0					
ANR	364451	Identifier	ao		339262	0					
ANR	364452	Identifier	o		339262	1					
ANR	364453	PrimaryExpression	0x70fb0000		339262	1					
ANR	364454	ExpressionStatement	ao -> o |= reg1	5807:3:123138:123151	339262	6	True				
ANR	364455	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	364456	PtrMemberAccess	ao -> o		339262	0					
ANR	364457	Identifier	ao		339262	0					
ANR	364458	Identifier	o		339262	1					
ANR	364459	Identifier	reg1		339262	1					
ANR	364460	ExpressionStatement	ao -> o |= reg2 << 24	5808:3:123156:123175	339262	7	True				
ANR	364461	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	364462	PtrMemberAccess	ao -> o		339262	0					
ANR	364463	Identifier	ao		339262	0					
ANR	364464	Identifier	o		339262	1					
ANR	364465	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	364466	Identifier	reg2		339262	0					
ANR	364467	PrimaryExpression	24		339262	1					
ANR	364468	ExpressionStatement	ao -> o |= reg3 << 8	5809:3:123180:123198	339262	8	True				
ANR	364469	AssignmentExpression	ao -> o |= reg3 << 8		339262	0		|=			
ANR	364470	PtrMemberAccess	ao -> o		339262	0					
ANR	364471	Identifier	ao		339262	0					
ANR	364472	Identifier	o		339262	1					
ANR	364473	ShiftExpression	reg3 << 8		339262	1		<<			
ANR	364474	Identifier	reg3		339262	0					
ANR	364475	PrimaryExpression	8		339262	1					
ANR	364476	ExpressionStatement	ao -> o |= reg4 << 4	5810:3:123203:123221	339262	9	True				
ANR	364477	AssignmentExpression	ao -> o |= reg4 << 4		339262	0		|=			
ANR	364478	PtrMemberAccess	ao -> o		339262	0					
ANR	364479	Identifier	ao		339262	0					
ANR	364480	Identifier	o		339262	1					
ANR	364481	ShiftExpression	reg4 << 4		339262	1		<<			
ANR	364482	Identifier	reg4		339262	0					
ANR	364483	PrimaryExpression	4		339262	1					
ANR	364484	ReturnStatement	return 4 ;	5811:3:123226:123234	339262	10	True				
ANR	364485	PrimaryExpression	4		339262	0					
ANR	364486	BreakStatement	break ;	5813:3:123251:123256	339262	2	True				
ANR	364487	Label	default :	5814:2:123260:123267	339262	3	True				
ANR	364488	Identifier	default		339262	0					
ANR	364489	ReturnStatement	return - 1 ;	5815:3:123272:123281	339262	4	True				
ANR	364490	UnaryOperationExpression	- 1		339262	0					
ANR	364491	UnaryOperator	-		339262	0					
ANR	364492	PrimaryExpression	1		339262	1					
ANR	364493	ElseStatement	else		339262	0					
ANR	364494	IfStatement	"if ( ( m = opmask ( ao -> op , ""usat"" , SIXTEEN_BIT ) ) )"		339262	0					
ANR	364495	Condition	"m = opmask ( ao -> op , ""usat"" , SIXTEEN_BIT )"	5818:5:123300:123341	339262	0	True				
ANR	364496	AssignmentExpression	"m = opmask ( ao -> op , ""usat"" , SIXTEEN_BIT )"		339262	0		=			
ANR	364497	Identifier	m		339262	0					
ANR	364498	CallExpression	"opmask ( ao -> op , ""usat"" , SIXTEEN_BIT )"		339262	1					
ANR	364499	Callee	opmask		339262	0					
ANR	364500	Identifier	opmask		339262	0					
ANR	364501	ArgumentList	ao -> op		339262	1					
ANR	364502	Argument	ao -> op		339262	0					
ANR	364503	PtrMemberAccess	ao -> op		339262	0					
ANR	364504	Identifier	ao		339262	0					
ANR	364505	Identifier	op		339262	1					
ANR	364506	Argument	"""usat"""		339262	1					
ANR	364507	PrimaryExpression	"""usat"""		339262	0					
ANR	364508	Argument	SIXTEEN_BIT		339262	2					
ANR	364509	Identifier	SIXTEEN_BIT		339262	0					
ANR	364510	CompoundStatement		4527:2:97489:97523	339262	1					
ANR	364511	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5819:2:123348:123382	339262	0	True				
ANR	364512	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364513	IdentifierDeclType	ut64		339262	0					
ANR	364514	Identifier	argt		339262	1					
ANR	364515	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364516	Identifier	argt		339262	0					
ANR	364517	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364518	Callee	thumb_selector		339262	0					
ANR	364519	Identifier	thumb_selector		339262	0					
ANR	364520	ArgumentList	ao -> a		339262	1					
ANR	364521	Argument	ao -> a		339262	0					
ANR	364522	PtrMemberAccess	ao -> a		339262	0					
ANR	364523	Identifier	ao		339262	0					
ANR	364524	Identifier	a		339262	1					
ANR	364525	SwitchStatement	switch ( argt )		339262	1					
ANR	364526	Condition	argt	5820:10:123394:123397	339262	0	True				
ANR	364527	Identifier	argt		339262	0					
ANR	364528	CompoundStatement		4528:16:97541:97541	339262	1					
ANR	364529	Label	case THUMB_REG_CONST_REG :	5821:2:123404:123428	339262	0	True				
ANR	364530	Identifier	THUMB_REG_CONST_REG		339262	0					
ANR	364531	CompoundStatement		4529:28:97571:97571	339262	1					
ANR	364532	IfStatement	if ( m & SIXTEEN_BIT )		339262	0					
ANR	364533	Condition	m & SIXTEEN_BIT	5822:7:123439:123453	339262	0	True				
ANR	364534	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	364535	Identifier	m		339262	0					
ANR	364536	Identifier	SIXTEEN_BIT		339262	1					
ANR	364537	CompoundStatement		4533:4:97671:97699	339262	1					
ANR	364538	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5823:4:123462:123490	339262	0	True				
ANR	364539	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	364540	IdentifierDeclType	ut8		339262	0					
ANR	364541	Identifier	reg1		339262	1					
ANR	364542	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	364543	Identifier	reg1		339262	0					
ANR	364544	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	364545	Callee	getreg		339262	0					
ANR	364546	Identifier	getreg		339262	0					
ANR	364547	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	364548	Argument	ao -> a [ 0 ]		339262	0					
ANR	364549	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	364550	PtrMemberAccess	ao -> a		339262	0					
ANR	364551	Identifier	ao		339262	0					
ANR	364552	Identifier	a		339262	1					
ANR	364553	PrimaryExpression	0		339262	1					
ANR	364554	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	5824:4:123496:123524	339262	1	True				
ANR	364555	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	364556	IdentifierDeclType	ut32		339262	0					
ANR	364557	Identifier	num		339262	1					
ANR	364558	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	364559	Identifier	num		339262	0					
ANR	364560	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	364561	Callee	getnum		339262	0					
ANR	364562	Identifier	getnum		339262	0					
ANR	364563	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	364564	Argument	ao -> a [ 1 ]		339262	0					
ANR	364565	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	364566	PtrMemberAccess	ao -> a		339262	0					
ANR	364567	Identifier	ao		339262	0					
ANR	364568	Identifier	a		339262	1					
ANR	364569	PrimaryExpression	1		339262	1					
ANR	364570	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 2 ] ) ;	5825:4:123530:123558	339262	2	True				
ANR	364571	IdentifierDecl	reg2 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	364572	IdentifierDeclType	ut8		339262	0					
ANR	364573	Identifier	reg2		339262	1					
ANR	364574	AssignmentExpression	reg2 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	364575	Identifier	reg2		339262	0					
ANR	364576	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	364577	Callee	getreg		339262	0					
ANR	364578	Identifier	getreg		339262	0					
ANR	364579	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	364580	Argument	ao -> a [ 2 ]		339262	0					
ANR	364581	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	364582	PtrMemberAccess	ao -> a		339262	0					
ANR	364583	Identifier	ao		339262	0					
ANR	364584	Identifier	a		339262	1					
ANR	364585	PrimaryExpression	2		339262	1					
ANR	364586	IfStatement	if ( ( reg1 > 15 ) || ( num > 15 ) || ( reg2 > 15 ) )		339262	3					
ANR	364587	Condition	( reg1 > 15 ) || ( num > 15 ) || ( reg2 > 15 )	5827:8:123569:123608	339262	0	True				
ANR	364588	OrExpression	( reg1 > 15 ) || ( num > 15 ) || ( reg2 > 15 )		339262	0		||			
ANR	364589	RelationalExpression	reg1 > 15		339262	0		>			
ANR	364590	Identifier	reg1		339262	0					
ANR	364591	PrimaryExpression	15		339262	1					
ANR	364592	OrExpression	( num > 15 ) || ( reg2 > 15 )		339262	1		||			
ANR	364593	RelationalExpression	num > 15		339262	0		>			
ANR	364594	Identifier	num		339262	0					
ANR	364595	PrimaryExpression	15		339262	1					
ANR	364596	RelationalExpression	reg2 > 15		339262	1		>			
ANR	364597	Identifier	reg2		339262	0					
ANR	364598	PrimaryExpression	15		339262	1					
ANR	364599	CompoundStatement		4535:50:97752:97752	339262	1					
ANR	364600	ReturnStatement	return - 1 ;	5828:5:123618:123627	339262	0	True				
ANR	364601	UnaryOperationExpression	- 1		339262	0					
ANR	364602	UnaryOperator	-		339262	0					
ANR	364603	PrimaryExpression	1		339262	1					
ANR	364604	ExpressionStatement	ao -> o = 0xa0f30000	5831:4:123640:123658	339262	4	True				
ANR	364605	AssignmentExpression	ao -> o = 0xa0f30000		339262	0		=			
ANR	364606	PtrMemberAccess	ao -> o		339262	0					
ANR	364607	Identifier	ao		339262	0					
ANR	364608	Identifier	o		339262	1					
ANR	364609	PrimaryExpression	0xa0f30000		339262	1					
ANR	364610	ExpressionStatement	ao -> o |= reg1	5832:4:123664:123677	339262	5	True				
ANR	364611	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	364612	PtrMemberAccess	ao -> o		339262	0					
ANR	364613	Identifier	ao		339262	0					
ANR	364614	Identifier	o		339262	1					
ANR	364615	Identifier	reg1		339262	1					
ANR	364616	ExpressionStatement	ao -> o |= reg2 << 24	5833:4:123683:123702	339262	6	True				
ANR	364617	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	364618	PtrMemberAccess	ao -> o		339262	0					
ANR	364619	Identifier	ao		339262	0					
ANR	364620	Identifier	o		339262	1					
ANR	364621	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	364622	Identifier	reg2		339262	0					
ANR	364623	PrimaryExpression	24		339262	1					
ANR	364624	ExpressionStatement	ao -> o |= num << 8	5834:4:123708:123725	339262	7	True				
ANR	364625	AssignmentExpression	ao -> o |= num << 8		339262	0		|=			
ANR	364626	PtrMemberAccess	ao -> o		339262	0					
ANR	364627	Identifier	ao		339262	0					
ANR	364628	Identifier	o		339262	1					
ANR	364629	ShiftExpression	num << 8		339262	1		<<			
ANR	364630	Identifier	num		339262	0					
ANR	364631	PrimaryExpression	8		339262	1					
ANR	364632	ReturnStatement	return 4 ;	5835:4:123731:123739	339262	8	True				
ANR	364633	PrimaryExpression	4		339262	0					
ANR	364634	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5838:3:123750:123768	339262	1	True				
ANR	364635	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	364636	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	364637	PtrMemberAccess	ao -> a		339262	0					
ANR	364638	Identifier	ao		339262	0					
ANR	364639	Identifier	a		339262	1					
ANR	364640	PrimaryExpression	3		339262	1					
ANR	364641	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	364642	Label	case THUMB_REG_CONST_REG_SHIFT :	5841:2:123814:123844	339262	2	True				
ANR	364643	Identifier	THUMB_REG_CONST_REG_SHIFT		339262	0					
ANR	364644	CompoundStatement		4553:3:98091:98129	339262	3					
ANR	364645	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5842:3:123851:123879	339262	0	True				
ANR	364646	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	364647	IdentifierDeclType	ut8		339262	0					
ANR	364648	Identifier	reg1		339262	1					
ANR	364649	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	364650	Identifier	reg1		339262	0					
ANR	364651	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	364652	Callee	getreg		339262	0					
ANR	364653	Identifier	getreg		339262	0					
ANR	364654	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	364655	Argument	ao -> a [ 0 ]		339262	0					
ANR	364656	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	364657	PtrMemberAccess	ao -> a		339262	0					
ANR	364658	Identifier	ao		339262	0					
ANR	364659	Identifier	a		339262	1					
ANR	364660	PrimaryExpression	0		339262	1					
ANR	364661	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	5843:3:123884:123912	339262	1	True				
ANR	364662	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		339262	0					
ANR	364663	IdentifierDeclType	ut32		339262	0					
ANR	364664	Identifier	num		339262	1					
ANR	364665	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		339262	2		=			
ANR	364666	Identifier	num		339262	0					
ANR	364667	CallExpression	getnum ( ao -> a [ 1 ] )		339262	1					
ANR	364668	Callee	getnum		339262	0					
ANR	364669	Identifier	getnum		339262	0					
ANR	364670	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	364671	Argument	ao -> a [ 1 ]		339262	0					
ANR	364672	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	364673	PtrMemberAccess	ao -> a		339262	0					
ANR	364674	Identifier	ao		339262	0					
ANR	364675	Identifier	a		339262	1					
ANR	364676	PrimaryExpression	1		339262	1					
ANR	364677	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 2 ] ) ;	5844:3:123917:123945	339262	2	True				
ANR	364678	IdentifierDecl	reg2 = getreg ( ao -> a [ 2 ] )		339262	0					
ANR	364679	IdentifierDeclType	ut8		339262	0					
ANR	364680	Identifier	reg2		339262	1					
ANR	364681	AssignmentExpression	reg2 = getreg ( ao -> a [ 2 ] )		339262	2		=			
ANR	364682	Identifier	reg2		339262	0					
ANR	364683	CallExpression	getreg ( ao -> a [ 2 ] )		339262	1					
ANR	364684	Callee	getreg		339262	0					
ANR	364685	Identifier	getreg		339262	0					
ANR	364686	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	364687	Argument	ao -> a [ 2 ]		339262	0					
ANR	364688	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	364689	PtrMemberAccess	ao -> a		339262	0					
ANR	364690	Identifier	ao		339262	0					
ANR	364691	Identifier	a		339262	1					
ANR	364692	PrimaryExpression	2		339262	1					
ANR	364693	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5845:3:123950:123988	339262	3	True				
ANR	364694	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	364695	IdentifierDeclType	ut32		339262	0					
ANR	364696	Identifier	shift		339262	1					
ANR	364697	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	364698	Identifier	shift		339262	0					
ANR	364699	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	364700	Callee	thumb_getshift		339262	0					
ANR	364701	Identifier	thumb_getshift		339262	0					
ANR	364702	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	364703	Argument	ao -> a [ 3 ]		339262	0					
ANR	364704	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	364705	PtrMemberAccess	ao -> a		339262	0					
ANR	364706	Identifier	ao		339262	0					
ANR	364707	Identifier	a		339262	1					
ANR	364708	PrimaryExpression	3		339262	1					
ANR	364709	IfStatement	if ( ( reg1 > 15 ) || ( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 ) )		339262	4					
ANR	364710	Condition	( reg1 > 15 ) || ( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )	5847:7:123998:124089	339262	0	True				
ANR	364711	OrExpression	( reg1 > 15 ) || ( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		339262	0		||			
ANR	364712	RelationalExpression	reg1 > 15		339262	0		>			
ANR	364713	Identifier	reg1		339262	0					
ANR	364714	PrimaryExpression	15		339262	1					
ANR	364715	OrExpression	( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		339262	1		||			
ANR	364716	RelationalExpression	num > 31		339262	0		>			
ANR	364717	Identifier	num		339262	0					
ANR	364718	PrimaryExpression	31		339262	1					
ANR	364719	OrExpression	( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		339262	1		||			
ANR	364720	RelationalExpression	reg2 > 15		339262	0		>			
ANR	364721	Identifier	reg2		339262	0					
ANR	364722	PrimaryExpression	15		339262	1					
ANR	364723	OrExpression	( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		339262	1		||			
ANR	364724	BitAndExpression	m & SIXTEEN_BIT		339262	0		&			
ANR	364725	Identifier	m		339262	0					
ANR	364726	Identifier	SIXTEEN_BIT		339262	1					
ANR	364727	EqualityExpression	( shift & 0x00001000 ) != 0		339262	1		!=			
ANR	364728	BitAndExpression	shift & 0x00001000		339262	0		&			
ANR	364729	Identifier	shift		339262	0					
ANR	364730	PrimaryExpression	0x00001000		339262	1					
ANR	364731	PrimaryExpression	0		339262	1					
ANR	364732	CompoundStatement		4555:101:98233:98233	339262	1					
ANR	364733	ReturnStatement	return - 1 ;	5848:4:124098:124107	339262	0	True				
ANR	364734	UnaryOperationExpression	- 1		339262	0					
ANR	364735	UnaryOperator	-		339262	0					
ANR	364736	PrimaryExpression	1		339262	1					
ANR	364737	ExpressionStatement	ao -> o = 0x80f30000	5851:3:124118:124136	339262	5	True				
ANR	364738	AssignmentExpression	ao -> o = 0x80f30000		339262	0		=			
ANR	364739	PtrMemberAccess	ao -> o		339262	0					
ANR	364740	Identifier	ao		339262	0					
ANR	364741	Identifier	o		339262	1					
ANR	364742	PrimaryExpression	0x80f30000		339262	1					
ANR	364743	ExpressionStatement	ao -> o |= reg1	5852:3:124141:124154	339262	6	True				
ANR	364744	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	364745	PtrMemberAccess	ao -> o		339262	0					
ANR	364746	Identifier	ao		339262	0					
ANR	364747	Identifier	o		339262	1					
ANR	364748	Identifier	reg1		339262	1					
ANR	364749	ExpressionStatement	ao -> o |= ( num & 0xf ) << 8	5853:3:124159:124184	339262	7	True				
ANR	364750	AssignmentExpression	ao -> o |= ( num & 0xf ) << 8		339262	0		|=			
ANR	364751	PtrMemberAccess	ao -> o		339262	0					
ANR	364752	Identifier	ao		339262	0					
ANR	364753	Identifier	o		339262	1					
ANR	364754	ShiftExpression	( num & 0xf ) << 8		339262	1		<<			
ANR	364755	BitAndExpression	num & 0xf		339262	0		&			
ANR	364756	Identifier	num		339262	0					
ANR	364757	PrimaryExpression	0xf		339262	1					
ANR	364758	PrimaryExpression	8		339262	1					
ANR	364759	ExpressionStatement	ao -> o |= ( num >> 4 ) << 12	5854:3:124189:124215	339262	8	True				
ANR	364760	AssignmentExpression	ao -> o |= ( num >> 4 ) << 12		339262	0		|=			
ANR	364761	PtrMemberAccess	ao -> o		339262	0					
ANR	364762	Identifier	ao		339262	0					
ANR	364763	Identifier	o		339262	1					
ANR	364764	ShiftExpression	( num >> 4 ) << 12		339262	1		<<			
ANR	364765	ShiftExpression	num >> 4		339262	0		>>			
ANR	364766	Identifier	num		339262	0					
ANR	364767	PrimaryExpression	4		339262	1					
ANR	364768	PrimaryExpression	12		339262	1					
ANR	364769	ExpressionStatement	ao -> o |= reg2 << 24	5855:3:124220:124239	339262	9	True				
ANR	364770	AssignmentExpression	ao -> o |= reg2 << 24		339262	0		|=			
ANR	364771	PtrMemberAccess	ao -> o		339262	0					
ANR	364772	Identifier	ao		339262	0					
ANR	364773	Identifier	o		339262	1					
ANR	364774	ShiftExpression	reg2 << 24		339262	1		<<			
ANR	364775	Identifier	reg2		339262	0					
ANR	364776	PrimaryExpression	24		339262	1					
ANR	364777	ExpressionStatement	ao -> o |= ( shift & 0x00002000 ) << 16	5856:3:124244:124279	339262	10	True				
ANR	364778	AssignmentExpression	ao -> o |= ( shift & 0x00002000 ) << 16		339262	0		|=			
ANR	364779	PtrMemberAccess	ao -> o		339262	0					
ANR	364780	Identifier	ao		339262	0					
ANR	364781	Identifier	o		339262	1					
ANR	364782	ShiftExpression	( shift & 0x00002000 ) << 16		339262	1		<<			
ANR	364783	BitAndExpression	shift & 0x00002000		339262	0		&			
ANR	364784	Identifier	shift		339262	0					
ANR	364785	PrimaryExpression	0x00002000		339262	1					
ANR	364786	PrimaryExpression	16		339262	1					
ANR	364787	ExpressionStatement	ao -> o |= ( shift & 0x0000c070 )	5857:3:124284:124313	339262	11	True				
ANR	364788	AssignmentExpression	ao -> o |= ( shift & 0x0000c070 )		339262	0		|=			
ANR	364789	PtrMemberAccess	ao -> o		339262	0					
ANR	364790	Identifier	ao		339262	0					
ANR	364791	Identifier	o		339262	1					
ANR	364792	BitAndExpression	shift & 0x0000c070		339262	1		&			
ANR	364793	Identifier	shift		339262	0					
ANR	364794	PrimaryExpression	0x0000c070		339262	1					
ANR	364795	ReturnStatement	return 4 ;	5858:3:124318:124326	339262	12	True				
ANR	364796	PrimaryExpression	4		339262	0					
ANR	364797	BreakStatement	break ;	5860:3:124343:124348	339262	4	True				
ANR	364798	Label	default :	5861:2:124352:124359	339262	5	True				
ANR	364799	Identifier	default		339262	0					
ANR	364800	ReturnStatement	return - 1 ;	5862:3:124364:124373	339262	6	True				
ANR	364801	UnaryOperationExpression	- 1		339262	0					
ANR	364802	UnaryOperator	-		339262	0					
ANR	364803	PrimaryExpression	1		339262	1					
ANR	364804	ElseStatement	else		339262	0					
ANR	364805	IfStatement	"if ( ( m = opmask ( ao -> op , ""usax"" , 0 ) ) )"		339262	0					
ANR	364806	Condition	"m = opmask ( ao -> op , ""usax"" , 0 )"	5865:5:124392:124423	339262	0	True				
ANR	364807	AssignmentExpression	"m = opmask ( ao -> op , ""usax"" , 0 )"		339262	0		=			
ANR	364808	Identifier	m		339262	0					
ANR	364809	CallExpression	"opmask ( ao -> op , ""usax"" , 0 )"		339262	1					
ANR	364810	Callee	opmask		339262	0					
ANR	364811	Identifier	opmask		339262	0					
ANR	364812	ArgumentList	ao -> op		339262	1					
ANR	364813	Argument	ao -> op		339262	0					
ANR	364814	PtrMemberAccess	ao -> op		339262	0					
ANR	364815	Identifier	ao		339262	0					
ANR	364816	Identifier	op		339262	1					
ANR	364817	Argument	"""usax"""		339262	1					
ANR	364818	PrimaryExpression	"""usax"""		339262	0					
ANR	364819	Argument	0		339262	2					
ANR	364820	PrimaryExpression	0		339262	0					
ANR	364821	CompoundStatement		4574:2:98571:98605	339262	1					
ANR	364822	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5866:2:124430:124464	339262	0	True				
ANR	364823	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364824	IdentifierDeclType	ut64		339262	0					
ANR	364825	Identifier	argt		339262	1					
ANR	364826	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364827	Identifier	argt		339262	0					
ANR	364828	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364829	Callee	thumb_selector		339262	0					
ANR	364830	Identifier	thumb_selector		339262	0					
ANR	364831	ArgumentList	ao -> a		339262	1					
ANR	364832	Argument	ao -> a		339262	0					
ANR	364833	PtrMemberAccess	ao -> a		339262	0					
ANR	364834	Identifier	ao		339262	0					
ANR	364835	Identifier	a		339262	1					
ANR	364836	SwitchStatement	switch ( argt )		339262	1					
ANR	364837	Condition	argt	5867:10:124476:124479	339262	0	True				
ANR	364838	Identifier	argt		339262	0					
ANR	364839	CompoundStatement		4575:16:98623:98623	339262	1					
ANR	364840	Label	case THUMB_REG_REG :	5868:2:124486:124504	339262	0	True				
ANR	364841	Identifier	THUMB_REG_REG		339262	0					
ANR	364842	CompoundStatement		4576:22:98647:98647	339262	1					
ANR	364843	ExpressionStatement	std_opt_2 ( ao )	5869:3:124511:124525	339262	0	True				
ANR	364844	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	364845	Callee	std_opt_2		339262	0					
ANR	364846	Identifier	std_opt_2		339262	0					
ANR	364847	ArgumentList	ao		339262	1					
ANR	364848	Argument	ao		339262	0					
ANR	364849	Identifier	ao		339262	0					
ANR	364850	Label	case THUMB_REG_REG_REG :	5872:2:124571:124593	339262	2	True				
ANR	364851	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	364852	CompoundStatement		4580:26:98736:98736	339262	3					
ANR	364853	ExpressionStatement	ao -> o = 0xe0fa40f0	5873:3:124600:124618	339262	0	True				
ANR	364854	AssignmentExpression	ao -> o = 0xe0fa40f0		339262	0		=			
ANR	364855	PtrMemberAccess	ao -> o		339262	0					
ANR	364856	Identifier	ao		339262	0					
ANR	364857	Identifier	o		339262	1					
ANR	364858	PrimaryExpression	0xe0fa40f0		339262	1					
ANR	364859	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5875:3:124627:124663	339262	1	True				
ANR	364860	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	364861	Callee	std_32bit_3reg		339262	0					
ANR	364862	Identifier	std_32bit_3reg		339262	0					
ANR	364863	ArgumentList	ao		339262	1					
ANR	364864	Argument	ao		339262	0					
ANR	364865	Identifier	ao		339262	0					
ANR	364866	Argument	m		339262	1					
ANR	364867	Identifier	m		339262	0					
ANR	364868	Argument	false		339262	2					
ANR	364869	Identifier	false		339262	0					
ANR	364870	BreakStatement	break ;	5877:3:124680:124685	339262	4	True				
ANR	364871	Label	default :	5878:2:124689:124696	339262	5	True				
ANR	364872	Identifier	default		339262	0					
ANR	364873	ReturnStatement	return - 1 ;	5879:3:124701:124710	339262	6	True				
ANR	364874	UnaryOperationExpression	- 1		339262	0					
ANR	364875	UnaryOperator	-		339262	0					
ANR	364876	PrimaryExpression	1		339262	1					
ANR	364877	ElseStatement	else		339262	0					
ANR	364878	IfStatement	"if ( ( m = opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	364879	Condition	"m = opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT )"	5882:5:124729:124782	339262	0	True				
ANR	364880	AssignmentExpression	"m = opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	364881	Identifier	m		339262	0					
ANR	364882	CallExpression	"opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT )"		339262	1					
ANR	364883	Callee	opmask		339262	0					
ANR	364884	Identifier	opmask		339262	0					
ANR	364885	ArgumentList	ao -> op		339262	1					
ANR	364886	Argument	ao -> op		339262	0					
ANR	364887	PtrMemberAccess	ao -> op		339262	0					
ANR	364888	Identifier	ao		339262	0					
ANR	364889	Identifier	op		339262	1					
ANR	364890	Argument	"""usub"""		339262	1					
ANR	364891	PrimaryExpression	"""usub"""		339262	0					
ANR	364892	Argument	EIGHT_BIT | SIXTEEN_BIT		339262	2					
ANR	364893	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	0		|			
ANR	364894	Identifier	EIGHT_BIT		339262	0					
ANR	364895	Identifier	SIXTEEN_BIT		339262	1					
ANR	364896	CompoundStatement		4592:2:98968:99011	339262	1					
ANR	364897	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5883:2:124789:124823	339262	0	True				
ANR	364898	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	364899	IdentifierDeclType	ut64		339262	0					
ANR	364900	Identifier	argt		339262	1					
ANR	364901	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	364902	Identifier	argt		339262	0					
ANR	364903	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	364904	Callee	thumb_selector		339262	0					
ANR	364905	Identifier	thumb_selector		339262	0					
ANR	364906	ArgumentList	ao -> a		339262	1					
ANR	364907	Argument	ao -> a		339262	0					
ANR	364908	PtrMemberAccess	ao -> a		339262	0					
ANR	364909	Identifier	ao		339262	0					
ANR	364910	Identifier	a		339262	1					
ANR	364911	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5884:2:124827:124870	339262	1	True				
ANR	364912	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	0					
ANR	364913	IdentifierDeclType	ut64		339262	0					
ANR	364914	Identifier	sufsel		339262	1					
ANR	364915	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	364916	Identifier	sufsel		339262	0					
ANR	364917	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	364918	Identifier	m		339262	0					
ANR	364919	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		339262	1		|			
ANR	364920	Identifier	EIGHT_BIT		339262	0					
ANR	364921	Identifier	SIXTEEN_BIT		339262	1					
ANR	364922	SwitchStatement	switch ( argt )		339262	2					
ANR	364923	Condition	argt	5885:10:124882:124885	339262	0	True				
ANR	364924	Identifier	argt		339262	0					
ANR	364925	CompoundStatement		4593:16:99029:99029	339262	1					
ANR	364926	Label	case THUMB_REG_REG :	5886:2:124892:124910	339262	0	True				
ANR	364927	Identifier	THUMB_REG_REG		339262	0					
ANR	364928	CompoundStatement		4594:22:99053:99053	339262	1					
ANR	364929	ExpressionStatement	std_opt_2 ( ao )	5887:3:124917:124931	339262	0	True				
ANR	364930	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	364931	Callee	std_opt_2		339262	0					
ANR	364932	Identifier	std_opt_2		339262	0					
ANR	364933	ArgumentList	ao		339262	1					
ANR	364934	Argument	ao		339262	0					
ANR	364935	Identifier	ao		339262	0					
ANR	364936	Label	case THUMB_REG_REG_REG :	5890:2:124977:124999	339262	2	True				
ANR	364937	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	364938	CompoundStatement		4598:26:99142:99142	339262	3					
ANR	364939	IfStatement	if ( sufsel == EIGHT_BIT )		339262	0					
ANR	364940	Condition	sufsel == EIGHT_BIT	5891:7:125010:125028	339262	0	True				
ANR	364941	EqualityExpression	sufsel == EIGHT_BIT		339262	0		==			
ANR	364942	Identifier	sufsel		339262	0					
ANR	364943	Identifier	EIGHT_BIT		339262	1					
ANR	364944	CompoundStatement		4599:28:99172:99172	339262	1					
ANR	364945	ExpressionStatement	ao -> o = 0xc0fa40f0	5892:4:125037:125055	339262	0	True				
ANR	364946	AssignmentExpression	ao -> o = 0xc0fa40f0		339262	0		=			
ANR	364947	PtrMemberAccess	ao -> o		339262	0					
ANR	364948	Identifier	ao		339262	0					
ANR	364949	Identifier	o		339262	1					
ANR	364950	PrimaryExpression	0xc0fa40f0		339262	1					
ANR	364951	ElseStatement	else		339262	0					
ANR	364952	IfStatement	if ( sufsel == SIXTEEN_BIT )		339262	0					
ANR	364953	Condition	sufsel == SIXTEEN_BIT	5894:7:125075:125095	339262	0	True				
ANR	364954	EqualityExpression	sufsel == SIXTEEN_BIT		339262	0		==			
ANR	364955	Identifier	sufsel		339262	0					
ANR	364956	Identifier	SIXTEEN_BIT		339262	1					
ANR	364957	CompoundStatement		4602:30:99239:99239	339262	1					
ANR	364958	ExpressionStatement	ao -> o = 0xd0fa40f0	5895:4:125104:125122	339262	0	True				
ANR	364959	AssignmentExpression	ao -> o = 0xd0fa40f0		339262	0		=			
ANR	364960	PtrMemberAccess	ao -> o		339262	0					
ANR	364961	Identifier	ao		339262	0					
ANR	364962	Identifier	o		339262	1					
ANR	364963	PrimaryExpression	0xd0fa40f0		339262	1					
ANR	364964	ElseStatement	else		339262	0					
ANR	364965	CompoundStatement		4604:10:99275:99275	339262	0					
ANR	364966	ReturnStatement	return - 1 ;	5897:4:125140:125149	339262	0	True				
ANR	364967	UnaryOperationExpression	- 1		339262	0					
ANR	364968	UnaryOperator	-		339262	0					
ANR	364969	PrimaryExpression	1		339262	1					
ANR	364970	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5900:3:125164:125200	339262	1	True				
ANR	364971	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	364972	Callee	std_32bit_3reg		339262	0					
ANR	364973	Identifier	std_32bit_3reg		339262	0					
ANR	364974	ArgumentList	ao		339262	1					
ANR	364975	Argument	ao		339262	0					
ANR	364976	Identifier	ao		339262	0					
ANR	364977	Argument	m		339262	1					
ANR	364978	Identifier	m		339262	0					
ANR	364979	Argument	false		339262	2					
ANR	364980	Identifier	false		339262	0					
ANR	364981	BreakStatement	break ;	5902:3:125217:125222	339262	4	True				
ANR	364982	Label	default :	5903:2:125226:125233	339262	5	True				
ANR	364983	Identifier	default		339262	0					
ANR	364984	ReturnStatement	return - 1 ;	5904:3:125238:125247	339262	6	True				
ANR	364985	UnaryOperationExpression	- 1		339262	0					
ANR	364986	UnaryOperator	-		339262	0					
ANR	364987	PrimaryExpression	1		339262	1					
ANR	364988	ElseStatement	else		339262	0					
ANR	364989	IfStatement	"if ( ( m = opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	364990	Condition	"m = opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5907:5:125266:125323	339262	0	True				
ANR	364991	AssignmentExpression	"m = opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	364992	Identifier	m		339262	0					
ANR	364993	CallExpression	"opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	1					
ANR	364994	Callee	opmask		339262	0					
ANR	364995	Identifier	opmask		339262	0					
ANR	364996	ArgumentList	ao -> op		339262	1					
ANR	364997	Argument	ao -> op		339262	0					
ANR	364998	PtrMemberAccess	ao -> op		339262	0					
ANR	364999	Identifier	ao		339262	0					
ANR	365000	Identifier	op		339262	1					
ANR	365001	Argument	"""uxta"""		339262	1					
ANR	365002	PrimaryExpression	"""uxta"""		339262	0					
ANR	365003	Argument	B_BIT | H_BIT | SIXTEEN_BIT		339262	2					
ANR	365004	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	0		|			
ANR	365005	Identifier	B_BIT		339262	0					
ANR	365006	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365007	Identifier	H_BIT		339262	0					
ANR	365008	Identifier	SIXTEEN_BIT		339262	1					
ANR	365009	CompoundStatement		4617:2:99509:99556	339262	1					
ANR	365010	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5908:2:125330:125364	339262	0	True				
ANR	365011	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	365012	IdentifierDeclType	ut64		339262	0					
ANR	365013	Identifier	argt		339262	1					
ANR	365014	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	365015	Identifier	argt		339262	0					
ANR	365016	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	365017	Callee	thumb_selector		339262	0					
ANR	365018	Identifier	thumb_selector		339262	0					
ANR	365019	ArgumentList	ao -> a		339262	1					
ANR	365020	Argument	ao -> a		339262	0					
ANR	365021	PtrMemberAccess	ao -> a		339262	0					
ANR	365022	Identifier	ao		339262	0					
ANR	365023	Identifier	a		339262	1					
ANR	365024	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5909:2:125368:125415	339262	1	True				
ANR	365025	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	0					
ANR	365026	IdentifierDeclType	ut64		339262	0					
ANR	365027	Identifier	sufsel		339262	1					
ANR	365028	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	365029	Identifier	sufsel		339262	0					
ANR	365030	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	365031	Identifier	m		339262	0					
ANR	365032	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365033	Identifier	B_BIT		339262	0					
ANR	365034	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365035	Identifier	H_BIT		339262	0					
ANR	365036	Identifier	SIXTEEN_BIT		339262	1					
ANR	365037	SwitchStatement	switch ( argt )		339262	2					
ANR	365038	Condition	argt	5910:10:125427:125430	339262	0	True				
ANR	365039	Identifier	argt		339262	0					
ANR	365040	CompoundStatement		4618:16:99574:99574	339262	1					
ANR	365041	Label	case THUMB_REG_REG :	5911:2:125437:125455	339262	0	True				
ANR	365042	Identifier	THUMB_REG_REG		339262	0					
ANR	365043	CompoundStatement		4619:22:99598:99598	339262	1					
ANR	365044	ExpressionStatement	std_opt_2 ( ao )	5912:3:125462:125476	339262	0	True				
ANR	365045	CallExpression	std_opt_2 ( ao )		339262	0					
ANR	365046	Callee	std_opt_2		339262	0					
ANR	365047	Identifier	std_opt_2		339262	0					
ANR	365048	ArgumentList	ao		339262	1					
ANR	365049	Argument	ao		339262	0					
ANR	365050	Identifier	ao		339262	0					
ANR	365051	Label	case THUMB_REG_REG_REG :	5915:2:125522:125544	339262	2	True				
ANR	365052	Identifier	THUMB_REG_REG_REG		339262	0					
ANR	365053	CompoundStatement		4623:26:99687:99687	339262	3					
ANR	365054	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5916:3:125551:125569	339262	0	True				
ANR	365055	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		339262	0		=			
ANR	365056	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	365057	PtrMemberAccess	ao -> a		339262	0					
ANR	365058	Identifier	ao		339262	0					
ANR	365059	Identifier	a		339262	1					
ANR	365060	PrimaryExpression	3		339262	1					
ANR	365061	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	365062	Label	case THUMB_REG_REG_SHIFT :	5919:2:125615:125639	339262	4	True				
ANR	365063	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	365064	CompoundStatement		4627:28:99782:99782	339262	5					
ANR	365065	IfStatement	if ( ao -> a [ 3 ] == NULL )		339262	0					
ANR	365066	Condition	ao -> a [ 3 ] == NULL	5920:7:125650:125665	339262	0	True				
ANR	365067	EqualityExpression	ao -> a [ 3 ] == NULL		339262	0		==			
ANR	365068	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	365069	PtrMemberAccess	ao -> a		339262	0					
ANR	365070	Identifier	ao		339262	0					
ANR	365071	Identifier	a		339262	1					
ANR	365072	PrimaryExpression	3		339262	1					
ANR	365073	Identifier	NULL		339262	1					
ANR	365074	CompoundStatement		4628:25:99809:99809	339262	1					
ANR	365075	ExpressionStatement	std_opt_3 ( ao )	5921:4:125696:125710	339262	0	True				
ANR	365076	CallExpression	std_opt_3 ( ao )		339262	0					
ANR	365077	Callee	std_opt_3		339262	0					
ANR	365078	Identifier	std_opt_3		339262	0					
ANR	365079	ArgumentList	ao		339262	1					
ANR	365080	Argument	ao		339262	0					
ANR	365081	Identifier	ao		339262	0					
ANR	365082	Label	case THUMB_REG_REG_REG_SHIFT :	5925:2:125761:125789	339262	6	True				
ANR	365083	Identifier	THUMB_REG_REG_REG_SHIFT		339262	0					
ANR	365084	CompoundStatement		4634:3:99937:99975	339262	7					
ANR	365085	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5926:3:125796:125834	339262	0	True				
ANR	365086	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	0					
ANR	365087	IdentifierDeclType	ut32		339262	0					
ANR	365088	Identifier	shift		339262	1					
ANR	365089	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		339262	2		=			
ANR	365090	Identifier	shift		339262	0					
ANR	365091	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		339262	1					
ANR	365092	Callee	thumb_getshift		339262	0					
ANR	365093	Identifier	thumb_getshift		339262	0					
ANR	365094	ArgumentList	ao -> a [ 3 ]		339262	1					
ANR	365095	Argument	ao -> a [ 3 ]		339262	0					
ANR	365096	ArrayIndexing	ao -> a [ 3 ]		339262	0					
ANR	365097	PtrMemberAccess	ao -> a		339262	0					
ANR	365098	Identifier	ao		339262	0					
ANR	365099	Identifier	a		339262	1					
ANR	365100	PrimaryExpression	3		339262	1					
ANR	365101	IfStatement	if ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		339262	1					
ANR	365102	Condition	shift && ( ( shift & 0x0000f010 ) != 0x00003000 )	5928:7:125844:125888	339262	0	True				
ANR	365103	AndExpression	shift && ( ( shift & 0x0000f010 ) != 0x00003000 )		339262	0		&&			
ANR	365104	Identifier	shift		339262	0					
ANR	365105	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		339262	1		!=			
ANR	365106	BitAndExpression	shift & 0x0000f010		339262	0		&			
ANR	365107	Identifier	shift		339262	0					
ANR	365108	PrimaryExpression	0x0000f010		339262	1					
ANR	365109	PrimaryExpression	0x00003000		339262	1					
ANR	365110	CompoundStatement		4636:54:100032:100032	339262	1					
ANR	365111	ReturnStatement	return - 1 ;	5929:4:125897:125906	339262	0	True				
ANR	365112	UnaryOperationExpression	- 1		339262	0					
ANR	365113	UnaryOperator	-		339262	0					
ANR	365114	PrimaryExpression	1		339262	1					
ANR	365115	IfStatement	if ( sufsel == B_BIT )		339262	2					
ANR	365116	Condition	sufsel == B_BIT	5932:7:125921:125935	339262	0	True				
ANR	365117	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	365118	Identifier	sufsel		339262	0					
ANR	365119	Identifier	B_BIT		339262	1					
ANR	365120	CompoundStatement		4640:24:100079:100079	339262	1					
ANR	365121	ExpressionStatement	ao -> o = 0x50fa80f0	5933:4:125944:125962	339262	0	True				
ANR	365122	AssignmentExpression	ao -> o = 0x50fa80f0		339262	0		=			
ANR	365123	PtrMemberAccess	ao -> o		339262	0					
ANR	365124	Identifier	ao		339262	0					
ANR	365125	Identifier	o		339262	1					
ANR	365126	PrimaryExpression	0x50fa80f0		339262	1					
ANR	365127	ElseStatement	else		339262	0					
ANR	365128	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		339262	0					
ANR	365129	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5935:7:125981:126011	339262	0	True				
ANR	365130	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		339262	0		==			
ANR	365131	Identifier	sufsel		339262	0					
ANR	365132	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365133	Identifier	B_BIT		339262	0					
ANR	365134	Identifier	SIXTEEN_BIT		339262	1					
ANR	365135	CompoundStatement		4643:40:100155:100155	339262	1					
ANR	365136	ExpressionStatement	ao -> o = 0x30fa80f0	5936:4:126020:126038	339262	0	True				
ANR	365137	AssignmentExpression	ao -> o = 0x30fa80f0		339262	0		=			
ANR	365138	PtrMemberAccess	ao -> o		339262	0					
ANR	365139	Identifier	ao		339262	0					
ANR	365140	Identifier	o		339262	1					
ANR	365141	PrimaryExpression	0x30fa80f0		339262	1					
ANR	365142	ElseStatement	else		339262	0					
ANR	365143	IfStatement	if ( sufsel == H_BIT )		339262	0					
ANR	365144	Condition	sufsel == H_BIT	5938:7:126057:126071	339262	0	True				
ANR	365145	EqualityExpression	sufsel == H_BIT		339262	0		==			
ANR	365146	Identifier	sufsel		339262	0					
ANR	365147	Identifier	H_BIT		339262	1					
ANR	365148	CompoundStatement		4646:24:100215:100215	339262	1					
ANR	365149	ExpressionStatement	ao -> o = 0x10fa80f0	5939:4:126080:126098	339262	0	True				
ANR	365150	AssignmentExpression	ao -> o = 0x10fa80f0		339262	0		=			
ANR	365151	PtrMemberAccess	ao -> o		339262	0					
ANR	365152	Identifier	ao		339262	0					
ANR	365153	Identifier	o		339262	1					
ANR	365154	PrimaryExpression	0x10fa80f0		339262	1					
ANR	365155	ElseStatement	else		339262	0					
ANR	365156	CompoundStatement		4648:10:100251:100251	339262	0					
ANR	365157	ReturnStatement	return - 1 ;	5941:4:126116:126125	339262	0	True				
ANR	365158	UnaryOperationExpression	- 1		339262	0					
ANR	365159	UnaryOperator	-		339262	0					
ANR	365160	PrimaryExpression	1		339262	1					
ANR	365161	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5944:3:126136:126170	339262	3	True				
ANR	365162	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		339262	0		|=			
ANR	365163	PtrMemberAccess	ao -> o		339262	0					
ANR	365164	Identifier	ao		339262	0					
ANR	365165	Identifier	o		339262	1					
ANR	365166	ShiftExpression	( shift & 0x00000060 ) << 7		339262	1		<<			
ANR	365167	BitAndExpression	shift & 0x00000060		339262	0		&			
ANR	365168	Identifier	shift		339262	0					
ANR	365169	PrimaryExpression	0x00000060		339262	1					
ANR	365170	PrimaryExpression	7		339262	1					
ANR	365171	ReturnStatement	"return ( std_32bit_3reg ( ao , m , false ) ) ;"	5945:3:126175:126213	339262	4	True				
ANR	365172	CallExpression	"std_32bit_3reg ( ao , m , false )"		339262	0					
ANR	365173	Callee	std_32bit_3reg		339262	0					
ANR	365174	Identifier	std_32bit_3reg		339262	0					
ANR	365175	ArgumentList	ao		339262	1					
ANR	365176	Argument	ao		339262	0					
ANR	365177	Identifier	ao		339262	0					
ANR	365178	Argument	m		339262	1					
ANR	365179	Identifier	m		339262	0					
ANR	365180	Argument	false		339262	2					
ANR	365181	Identifier	false		339262	0					
ANR	365182	BreakStatement	break ;	5947:3:126230:126235	339262	8	True				
ANR	365183	Label	default :	5948:2:126239:126246	339262	9	True				
ANR	365184	Identifier	default		339262	0					
ANR	365185	ReturnStatement	return - 1 ;	5949:3:126251:126260	339262	10	True				
ANR	365186	UnaryOperationExpression	- 1		339262	0					
ANR	365187	UnaryOperator	-		339262	0					
ANR	365188	PrimaryExpression	1		339262	1					
ANR	365189	ElseStatement	else		339262	0					
ANR	365190	IfStatement	"if ( ( m = opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		339262	0					
ANR	365191	Condition	"m = opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5952:5:126279:126335	339262	0	True				
ANR	365192	AssignmentExpression	"m = opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	0		=			
ANR	365193	Identifier	m		339262	0					
ANR	365194	CallExpression	"opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		339262	1					
ANR	365195	Callee	opmask		339262	0					
ANR	365196	Identifier	opmask		339262	0					
ANR	365197	ArgumentList	ao -> op		339262	1					
ANR	365198	Argument	ao -> op		339262	0					
ANR	365199	PtrMemberAccess	ao -> op		339262	0					
ANR	365200	Identifier	ao		339262	0					
ANR	365201	Identifier	op		339262	1					
ANR	365202	Argument	"""uxt"""		339262	1					
ANR	365203	PrimaryExpression	"""uxt"""		339262	0					
ANR	365204	Argument	B_BIT | H_BIT | SIXTEEN_BIT		339262	2					
ANR	365205	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	0		|			
ANR	365206	Identifier	B_BIT		339262	0					
ANR	365207	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365208	Identifier	H_BIT		339262	0					
ANR	365209	Identifier	SIXTEEN_BIT		339262	1					
ANR	365210	CompoundStatement		4662:2:100521:100568	339262	1					
ANR	365211	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5953:2:126342:126376	339262	0	True				
ANR	365212	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	365213	IdentifierDeclType	ut64		339262	0					
ANR	365214	Identifier	argt		339262	1					
ANR	365215	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	365216	Identifier	argt		339262	0					
ANR	365217	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	365218	Callee	thumb_selector		339262	0					
ANR	365219	Identifier	thumb_selector		339262	0					
ANR	365220	ArgumentList	ao -> a		339262	1					
ANR	365221	Argument	ao -> a		339262	0					
ANR	365222	PtrMemberAccess	ao -> a		339262	0					
ANR	365223	Identifier	ao		339262	0					
ANR	365224	Identifier	a		339262	1					
ANR	365225	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5954:2:126380:126427	339262	1	True				
ANR	365226	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	0					
ANR	365227	IdentifierDeclType	ut64		339262	0					
ANR	365228	Identifier	sufsel		339262	1					
ANR	365229	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	2		=			
ANR	365230	Identifier	sufsel		339262	0					
ANR	365231	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		339262	1		&			
ANR	365232	Identifier	m		339262	0					
ANR	365233	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365234	Identifier	B_BIT		339262	0					
ANR	365235	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365236	Identifier	H_BIT		339262	0					
ANR	365237	Identifier	SIXTEEN_BIT		339262	1					
ANR	365238	SwitchStatement	switch ( argt )		339262	2					
ANR	365239	Condition	argt	5955:10:126439:126442	339262	0	True				
ANR	365240	Identifier	argt		339262	0					
ANR	365241	CompoundStatement		4663:16:100586:100586	339262	1					
ANR	365242	Label	case THUMB_REG_REG :	5956:2:126449:126467	339262	0	True				
ANR	365243	Identifier	THUMB_REG_REG		339262	0					
ANR	365244	CompoundStatement		4664:22:100610:100610	339262	1					
ANR	365245	IfStatement	if ( ( sufsel == B_BIT ) || ( sufsel == H_BIT ) )		339262	0					
ANR	365246	Condition	( sufsel == B_BIT ) || ( sufsel == H_BIT )	5957:7:126478:126515	339262	0	True				
ANR	365247	OrExpression	( sufsel == B_BIT ) || ( sufsel == H_BIT )		339262	0		||			
ANR	365248	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	365249	Identifier	sufsel		339262	0					
ANR	365250	Identifier	B_BIT		339262	1					
ANR	365251	EqualityExpression	sufsel == H_BIT		339262	1		==			
ANR	365252	Identifier	sufsel		339262	0					
ANR	365253	Identifier	H_BIT		339262	1					
ANR	365254	CompoundStatement		4665:47:100659:100659	339262	1					
ANR	365255	IfStatement	if ( sufsel == B_BIT )		339262	0					
ANR	365256	Condition	sufsel == B_BIT	5958:8:126528:126542	339262	0	True				
ANR	365257	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	365258	Identifier	sufsel		339262	0					
ANR	365259	Identifier	B_BIT		339262	1					
ANR	365260	CompoundStatement		4666:25:100686:100686	339262	1					
ANR	365261	ExpressionStatement	ao -> o = 0xc0b2	5959:5:126552:126566	339262	0	True				
ANR	365262	AssignmentExpression	ao -> o = 0xc0b2		339262	0		=			
ANR	365263	PtrMemberAccess	ao -> o		339262	0					
ANR	365264	Identifier	ao		339262	0					
ANR	365265	Identifier	o		339262	1					
ANR	365266	PrimaryExpression	0xc0b2		339262	1					
ANR	365267	ElseStatement	else		339262	0					
ANR	365268	CompoundStatement		4668:11:100720:100720	339262	0					
ANR	365269	ExpressionStatement	ao -> o = 0x80b2	5961:5:126586:126600	339262	0	True				
ANR	365270	AssignmentExpression	ao -> o = 0x80b2		339262	0		=			
ANR	365271	PtrMemberAccess	ao -> o		339262	0					
ANR	365272	Identifier	ao		339262	0					
ANR	365273	Identifier	o		339262	1					
ANR	365274	PrimaryExpression	0x80b2		339262	1					
ANR	365275	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		339262	1					
ANR	365276	Condition	"std_16bit_2reg ( ao , m )"	5963:8:126616:126637	339262	0	True				
ANR	365277	CallExpression	"std_16bit_2reg ( ao , m )"		339262	0					
ANR	365278	Callee	std_16bit_2reg		339262	0					
ANR	365279	Identifier	std_16bit_2reg		339262	0					
ANR	365280	ArgumentList	ao		339262	1					
ANR	365281	Argument	ao		339262	0					
ANR	365282	Identifier	ao		339262	0					
ANR	365283	Argument	m		339262	1					
ANR	365284	Identifier	m		339262	0					
ANR	365285	CompoundStatement		4671:32:100781:100781	339262	1					
ANR	365286	ReturnStatement	return 2 ;	5964:5:126647:126655	339262	0	True				
ANR	365287	PrimaryExpression	2		339262	0					
ANR	365288	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5967:3:126671:126689	339262	1	True				
ANR	365289	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		339262	0		=			
ANR	365290	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	365291	PtrMemberAccess	ao -> a		339262	0					
ANR	365292	Identifier	ao		339262	0					
ANR	365293	Identifier	a		339262	1					
ANR	365294	PrimaryExpression	2		339262	1					
ANR	365295	PrimaryExpression	"""lsl 0"""		339262	1					
ANR	365296	Label	case THUMB_REG_REG_SHIFT :	5970:2:126735:126759	339262	2	True				
ANR	365297	Identifier	THUMB_REG_REG_SHIFT		339262	0					
ANR	365298	CompoundStatement		4681:3:100973:101011	339262	3					
ANR	365299	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5971:3:126766:126794	339262	0	True				
ANR	365300	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		339262	0					
ANR	365301	IdentifierDeclType	ut8		339262	0					
ANR	365302	Identifier	reg1		339262	1					
ANR	365303	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		339262	2		=			
ANR	365304	Identifier	reg1		339262	0					
ANR	365305	CallExpression	getreg ( ao -> a [ 0 ] )		339262	1					
ANR	365306	Callee	getreg		339262	0					
ANR	365307	Identifier	getreg		339262	0					
ANR	365308	ArgumentList	ao -> a [ 0 ]		339262	1					
ANR	365309	Argument	ao -> a [ 0 ]		339262	0					
ANR	365310	ArrayIndexing	ao -> a [ 0 ]		339262	0					
ANR	365311	PtrMemberAccess	ao -> a		339262	0					
ANR	365312	Identifier	ao		339262	0					
ANR	365313	Identifier	a		339262	1					
ANR	365314	PrimaryExpression	0		339262	1					
ANR	365315	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5972:3:126799:126827	339262	1	True				
ANR	365316	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		339262	0					
ANR	365317	IdentifierDeclType	ut8		339262	0					
ANR	365318	Identifier	reg2		339262	1					
ANR	365319	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		339262	2		=			
ANR	365320	Identifier	reg2		339262	0					
ANR	365321	CallExpression	getreg ( ao -> a [ 1 ] )		339262	1					
ANR	365322	Callee	getreg		339262	0					
ANR	365323	Identifier	getreg		339262	0					
ANR	365324	ArgumentList	ao -> a [ 1 ]		339262	1					
ANR	365325	Argument	ao -> a [ 1 ]		339262	0					
ANR	365326	ArrayIndexing	ao -> a [ 1 ]		339262	0					
ANR	365327	PtrMemberAccess	ao -> a		339262	0					
ANR	365328	Identifier	ao		339262	0					
ANR	365329	Identifier	a		339262	1					
ANR	365330	PrimaryExpression	1		339262	1					
ANR	365331	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	5973:3:126832:126870	339262	2	True				
ANR	365332	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	0					
ANR	365333	IdentifierDeclType	ut32		339262	0					
ANR	365334	Identifier	shift		339262	1					
ANR	365335	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		339262	2		=			
ANR	365336	Identifier	shift		339262	0					
ANR	365337	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		339262	1					
ANR	365338	Callee	thumb_getshift		339262	0					
ANR	365339	Identifier	thumb_getshift		339262	0					
ANR	365340	ArgumentList	ao -> a [ 2 ]		339262	1					
ANR	365341	Argument	ao -> a [ 2 ]		339262	0					
ANR	365342	ArrayIndexing	ao -> a [ 2 ]		339262	0					
ANR	365343	PtrMemberAccess	ao -> a		339262	0					
ANR	365344	Identifier	ao		339262	0					
ANR	365345	Identifier	a		339262	1					
ANR	365346	PrimaryExpression	2		339262	1					
ANR	365347	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) ) )		339262	3					
ANR	365348	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )	5975:7:126880:126956	339262	0	True				
ANR	365349	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		339262	0		||			
ANR	365350	RelationalExpression	reg1 > 15		339262	0		>			
ANR	365351	Identifier	reg1		339262	0					
ANR	365352	PrimaryExpression	15		339262	1					
ANR	365353	OrExpression	( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		339262	1		||			
ANR	365354	RelationalExpression	reg2 > 15		339262	0		>			
ANR	365355	Identifier	reg2		339262	0					
ANR	365356	PrimaryExpression	15		339262	1					
ANR	365357	AndExpression	shift && ( ( shift & 0x0000f010 ) != 0x00003000 )		339262	1		&&			
ANR	365358	Identifier	shift		339262	0					
ANR	365359	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		339262	1		!=			
ANR	365360	BitAndExpression	shift & 0x0000f010		339262	0		&			
ANR	365361	Identifier	shift		339262	0					
ANR	365362	PrimaryExpression	0x0000f010		339262	1					
ANR	365363	PrimaryExpression	0x00003000		339262	1					
ANR	365364	CompoundStatement		4683:86:101100:101100	339262	1					
ANR	365365	ReturnStatement	return - 1 ;	5976:4:126965:126974	339262	0	True				
ANR	365366	UnaryOperationExpression	- 1		339262	0					
ANR	365367	UnaryOperator	-		339262	0					
ANR	365368	PrimaryExpression	1		339262	1					
ANR	365369	IfStatement	if ( sufsel == B_BIT )		339262	4					
ANR	365370	Condition	sufsel == B_BIT	5979:7:126989:127003	339262	0	True				
ANR	365371	EqualityExpression	sufsel == B_BIT		339262	0		==			
ANR	365372	Identifier	sufsel		339262	0					
ANR	365373	Identifier	B_BIT		339262	1					
ANR	365374	CompoundStatement		4687:24:101147:101147	339262	1					
ANR	365375	ExpressionStatement	ao -> o = 0x5ffa80f0	5980:4:127012:127030	339262	0	True				
ANR	365376	AssignmentExpression	ao -> o = 0x5ffa80f0		339262	0		=			
ANR	365377	PtrMemberAccess	ao -> o		339262	0					
ANR	365378	Identifier	ao		339262	0					
ANR	365379	Identifier	o		339262	1					
ANR	365380	PrimaryExpression	0x5ffa80f0		339262	1					
ANR	365381	ElseStatement	else		339262	0					
ANR	365382	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		339262	0					
ANR	365383	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5982:7:127049:127079	339262	0	True				
ANR	365384	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		339262	0		==			
ANR	365385	Identifier	sufsel		339262	0					
ANR	365386	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		339262	1		|			
ANR	365387	Identifier	B_BIT		339262	0					
ANR	365388	Identifier	SIXTEEN_BIT		339262	1					
ANR	365389	CompoundStatement		4690:40:101223:101223	339262	1					
ANR	365390	ExpressionStatement	ao -> o = 0x3ffa80f0	5983:4:127088:127106	339262	0	True				
ANR	365391	AssignmentExpression	ao -> o = 0x3ffa80f0		339262	0		=			
ANR	365392	PtrMemberAccess	ao -> o		339262	0					
ANR	365393	Identifier	ao		339262	0					
ANR	365394	Identifier	o		339262	1					
ANR	365395	PrimaryExpression	0x3ffa80f0		339262	1					
ANR	365396	ElseStatement	else		339262	0					
ANR	365397	IfStatement	if ( sufsel == H_BIT )		339262	0					
ANR	365398	Condition	sufsel == H_BIT	5985:7:127125:127139	339262	0	True				
ANR	365399	EqualityExpression	sufsel == H_BIT		339262	0		==			
ANR	365400	Identifier	sufsel		339262	0					
ANR	365401	Identifier	H_BIT		339262	1					
ANR	365402	CompoundStatement		4693:24:101283:101283	339262	1					
ANR	365403	ExpressionStatement	ao -> o = 0x1ffa80f0	5986:4:127148:127166	339262	0	True				
ANR	365404	AssignmentExpression	ao -> o = 0x1ffa80f0		339262	0		=			
ANR	365405	PtrMemberAccess	ao -> o		339262	0					
ANR	365406	Identifier	ao		339262	0					
ANR	365407	Identifier	o		339262	1					
ANR	365408	PrimaryExpression	0x1ffa80f0		339262	1					
ANR	365409	ElseStatement	else		339262	0					
ANR	365410	CompoundStatement		4695:10:101319:101319	339262	0					
ANR	365411	ReturnStatement	return - 1 ;	5988:4:127184:127193	339262	0	True				
ANR	365412	UnaryOperationExpression	- 1		339262	0					
ANR	365413	UnaryOperator	-		339262	0					
ANR	365414	PrimaryExpression	1		339262	1					
ANR	365415	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5991:3:127204:127238	339262	5	True				
ANR	365416	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		339262	0		|=			
ANR	365417	PtrMemberAccess	ao -> o		339262	0					
ANR	365418	Identifier	ao		339262	0					
ANR	365419	Identifier	o		339262	1					
ANR	365420	ShiftExpression	( shift & 0x00000060 ) << 7		339262	1		<<			
ANR	365421	BitAndExpression	shift & 0x00000060		339262	0		&			
ANR	365422	Identifier	shift		339262	0					
ANR	365423	PrimaryExpression	0x00000060		339262	1					
ANR	365424	PrimaryExpression	7		339262	1					
ANR	365425	ExpressionStatement	ao -> o |= reg1	5992:3:127243:127256	339262	6	True				
ANR	365426	AssignmentExpression	ao -> o |= reg1		339262	0		|=			
ANR	365427	PtrMemberAccess	ao -> o		339262	0					
ANR	365428	Identifier	ao		339262	0					
ANR	365429	Identifier	o		339262	1					
ANR	365430	Identifier	reg1		339262	1					
ANR	365431	ExpressionStatement	ao -> o |= reg2 << 8	5993:3:127261:127279	339262	7	True				
ANR	365432	AssignmentExpression	ao -> o |= reg2 << 8		339262	0		|=			
ANR	365433	PtrMemberAccess	ao -> o		339262	0					
ANR	365434	Identifier	ao		339262	0					
ANR	365435	Identifier	o		339262	1					
ANR	365436	ShiftExpression	reg2 << 8		339262	1		<<			
ANR	365437	Identifier	reg2		339262	0					
ANR	365438	PrimaryExpression	8		339262	1					
ANR	365439	ReturnStatement	return 4 ;	5994:3:127284:127292	339262	8	True				
ANR	365440	PrimaryExpression	4		339262	0					
ANR	365441	BreakStatement	break ;	5996:3:127309:127314	339262	4	True				
ANR	365442	Label	default :	5997:2:127318:127325	339262	5	True				
ANR	365443	Identifier	default		339262	0					
ANR	365444	ReturnStatement	return - 1 ;	5998:3:127330:127339	339262	6	True				
ANR	365445	UnaryOperationExpression	- 1		339262	0					
ANR	365446	UnaryOperator	-		339262	0					
ANR	365447	PrimaryExpression	1		339262	1					
ANR	365448	ElseStatement	else		339262	0					
ANR	365449	IfStatement	"if ( ( m = opmask ( ao -> op , ""wfe"" , 0 ) ) )"		339262	0					
ANR	365450	Condition	"m = opmask ( ao -> op , ""wfe"" , 0 )"	6002:5:127359:127389	339262	0	True				
ANR	365451	AssignmentExpression	"m = opmask ( ao -> op , ""wfe"" , 0 )"		339262	0		=			
ANR	365452	Identifier	m		339262	0					
ANR	365453	CallExpression	"opmask ( ao -> op , ""wfe"" , 0 )"		339262	1					
ANR	365454	Callee	opmask		339262	0					
ANR	365455	Identifier	opmask		339262	0					
ANR	365456	ArgumentList	ao -> op		339262	1					
ANR	365457	Argument	ao -> op		339262	0					
ANR	365458	PtrMemberAccess	ao -> op		339262	0					
ANR	365459	Identifier	ao		339262	0					
ANR	365460	Identifier	op		339262	1					
ANR	365461	Argument	"""wfe"""		339262	1					
ANR	365462	PrimaryExpression	"""wfe"""		339262	0					
ANR	365463	Argument	0		339262	2					
ANR	365464	PrimaryExpression	0		339262	0					
ANR	365465	CompoundStatement		4711:2:101537:101571	339262	1					
ANR	365466	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	6003:2:127396:127430	339262	0	True				
ANR	365467	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	365468	IdentifierDeclType	ut64		339262	0					
ANR	365469	Identifier	argt		339262	1					
ANR	365470	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	365471	Identifier	argt		339262	0					
ANR	365472	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	365473	Callee	thumb_selector		339262	0					
ANR	365474	Identifier	thumb_selector		339262	0					
ANR	365475	ArgumentList	ao -> a		339262	1					
ANR	365476	Argument	ao -> a		339262	0					
ANR	365477	PtrMemberAccess	ao -> a		339262	0					
ANR	365478	Identifier	ao		339262	0					
ANR	365479	Identifier	a		339262	1					
ANR	365480	SwitchStatement	switch ( argt )		339262	1					
ANR	365481	Condition	argt	6004:10:127442:127445	339262	0	True				
ANR	365482	Identifier	argt		339262	0					
ANR	365483	CompoundStatement		4712:16:101589:101589	339262	1					
ANR	365484	Label	case THUMB_NONE :	6005:2:127452:127467	339262	0	True				
ANR	365485	Identifier	THUMB_NONE		339262	0					
ANR	365486	CompoundStatement		4713:19:101610:101610	339262	1					
ANR	365487	IfStatement	if ( m & DOTW_BIT )		339262	0					
ANR	365488	Condition	m & DOTW_BIT	6006:7:127478:127489	339262	0	True				
ANR	365489	BitAndExpression	m & DOTW_BIT		339262	0		&			
ANR	365490	Identifier	m		339262	0					
ANR	365491	Identifier	DOTW_BIT		339262	1					
ANR	365492	CompoundStatement		4714:21:101633:101633	339262	1					
ANR	365493	ExpressionStatement	ao -> o = 0xaff30280	6007:4:127498:127516	339262	0	True				
ANR	365494	AssignmentExpression	ao -> o = 0xaff30280		339262	0		=			
ANR	365495	PtrMemberAccess	ao -> o		339262	0					
ANR	365496	Identifier	ao		339262	0					
ANR	365497	Identifier	o		339262	1					
ANR	365498	PrimaryExpression	0xaff30280		339262	1					
ANR	365499	ReturnStatement	return 4 ;	6008:4:127522:127530	339262	1	True				
ANR	365500	PrimaryExpression	4		339262	0					
ANR	365501	ElseStatement	else		339262	0					
ANR	365502	CompoundStatement		4717:17:101690:101690	339262	0					
ANR	365503	ExpressionStatement	ao -> o = 0x20bf	6010:4:127555:127569	339262	0	True				
ANR	365504	AssignmentExpression	ao -> o = 0x20bf		339262	0		=			
ANR	365505	PtrMemberAccess	ao -> o		339262	0					
ANR	365506	Identifier	ao		339262	0					
ANR	365507	Identifier	o		339262	1					
ANR	365508	PrimaryExpression	0x20bf		339262	1					
ANR	365509	ReturnStatement	return 2 ;	6011:4:127575:127583	339262	1	True				
ANR	365510	PrimaryExpression	2		339262	0					
ANR	365511	BreakStatement	break ;	6014:3:127612:127617	339262	2	True				
ANR	365512	Label	default :	6015:2:127621:127628	339262	3	True				
ANR	365513	Identifier	default		339262	0					
ANR	365514	ReturnStatement	return - 1 ;	6016:3:127633:127642	339262	4	True				
ANR	365515	UnaryOperationExpression	- 1		339262	0					
ANR	365516	UnaryOperator	-		339262	0					
ANR	365517	PrimaryExpression	1		339262	1					
ANR	365518	ElseStatement	else		339262	0					
ANR	365519	IfStatement	"if ( ( m = opmask ( ao -> op , ""wfi"" , 0 ) ) )"		339262	0					
ANR	365520	Condition	"m = opmask ( ao -> op , ""wfi"" , 0 )"	6019:5:127661:127691	339262	0	True				
ANR	365521	AssignmentExpression	"m = opmask ( ao -> op , ""wfi"" , 0 )"		339262	0		=			
ANR	365522	Identifier	m		339262	0					
ANR	365523	CallExpression	"opmask ( ao -> op , ""wfi"" , 0 )"		339262	1					
ANR	365524	Callee	opmask		339262	0					
ANR	365525	Identifier	opmask		339262	0					
ANR	365526	ArgumentList	ao -> op		339262	1					
ANR	365527	Argument	ao -> op		339262	0					
ANR	365528	PtrMemberAccess	ao -> op		339262	0					
ANR	365529	Identifier	ao		339262	0					
ANR	365530	Identifier	op		339262	1					
ANR	365531	Argument	"""wfi"""		339262	1					
ANR	365532	PrimaryExpression	"""wfi"""		339262	0					
ANR	365533	Argument	0		339262	2					
ANR	365534	PrimaryExpression	0		339262	0					
ANR	365535	CompoundStatement		4728:2:101839:101873	339262	1					
ANR	365536	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	6020:2:127698:127732	339262	0	True				
ANR	365537	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	365538	IdentifierDeclType	ut64		339262	0					
ANR	365539	Identifier	argt		339262	1					
ANR	365540	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	365541	Identifier	argt		339262	0					
ANR	365542	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	365543	Callee	thumb_selector		339262	0					
ANR	365544	Identifier	thumb_selector		339262	0					
ANR	365545	ArgumentList	ao -> a		339262	1					
ANR	365546	Argument	ao -> a		339262	0					
ANR	365547	PtrMemberAccess	ao -> a		339262	0					
ANR	365548	Identifier	ao		339262	0					
ANR	365549	Identifier	a		339262	1					
ANR	365550	SwitchStatement	switch ( argt )		339262	1					
ANR	365551	Condition	argt	6021:10:127744:127747	339262	0	True				
ANR	365552	Identifier	argt		339262	0					
ANR	365553	CompoundStatement		4729:16:101891:101891	339262	1					
ANR	365554	Label	case THUMB_NONE :	6022:2:127754:127769	339262	0	True				
ANR	365555	Identifier	THUMB_NONE		339262	0					
ANR	365556	CompoundStatement		4730:19:101912:101912	339262	1					
ANR	365557	IfStatement	if ( m & DOTW_BIT )		339262	0					
ANR	365558	Condition	m & DOTW_BIT	6023:7:127780:127791	339262	0	True				
ANR	365559	BitAndExpression	m & DOTW_BIT		339262	0		&			
ANR	365560	Identifier	m		339262	0					
ANR	365561	Identifier	DOTW_BIT		339262	1					
ANR	365562	CompoundStatement		4731:21:101935:101935	339262	1					
ANR	365563	ExpressionStatement	ao -> o = 0xaff30380	6024:4:127800:127818	339262	0	True				
ANR	365564	AssignmentExpression	ao -> o = 0xaff30380		339262	0		=			
ANR	365565	PtrMemberAccess	ao -> o		339262	0					
ANR	365566	Identifier	ao		339262	0					
ANR	365567	Identifier	o		339262	1					
ANR	365568	PrimaryExpression	0xaff30380		339262	1					
ANR	365569	ReturnStatement	return 4 ;	6025:4:127824:127832	339262	1	True				
ANR	365570	PrimaryExpression	4		339262	0					
ANR	365571	ElseStatement	else		339262	0					
ANR	365572	CompoundStatement		4734:17:101992:101992	339262	0					
ANR	365573	ExpressionStatement	ao -> o = 0x30bf	6027:4:127857:127871	339262	0	True				
ANR	365574	AssignmentExpression	ao -> o = 0x30bf		339262	0		=			
ANR	365575	PtrMemberAccess	ao -> o		339262	0					
ANR	365576	Identifier	ao		339262	0					
ANR	365577	Identifier	o		339262	1					
ANR	365578	PrimaryExpression	0x30bf		339262	1					
ANR	365579	ReturnStatement	return 2 ;	6028:4:127877:127885	339262	1	True				
ANR	365580	PrimaryExpression	2		339262	0					
ANR	365581	BreakStatement	break ;	6031:3:127914:127919	339262	2	True				
ANR	365582	Label	default :	6032:2:127923:127930	339262	3	True				
ANR	365583	Identifier	default		339262	0					
ANR	365584	ReturnStatement	return - 1 ;	6033:3:127935:127944	339262	4	True				
ANR	365585	UnaryOperationExpression	- 1		339262	0					
ANR	365586	UnaryOperator	-		339262	0					
ANR	365587	PrimaryExpression	1		339262	1					
ANR	365588	ElseStatement	else		339262	0					
ANR	365589	IfStatement	"if ( ( m = opmask ( ao -> op , ""yield"" , 0 ) ) )"		339262	0					
ANR	365590	Condition	"m = opmask ( ao -> op , ""yield"" , 0 )"	6036:5:127963:127995	339262	0	True				
ANR	365591	AssignmentExpression	"m = opmask ( ao -> op , ""yield"" , 0 )"		339262	0		=			
ANR	365592	Identifier	m		339262	0					
ANR	365593	CallExpression	"opmask ( ao -> op , ""yield"" , 0 )"		339262	1					
ANR	365594	Callee	opmask		339262	0					
ANR	365595	Identifier	opmask		339262	0					
ANR	365596	ArgumentList	ao -> op		339262	1					
ANR	365597	Argument	ao -> op		339262	0					
ANR	365598	PtrMemberAccess	ao -> op		339262	0					
ANR	365599	Identifier	ao		339262	0					
ANR	365600	Identifier	op		339262	1					
ANR	365601	Argument	"""yield"""		339262	1					
ANR	365602	PrimaryExpression	"""yield"""		339262	0					
ANR	365603	Argument	0		339262	2					
ANR	365604	PrimaryExpression	0		339262	0					
ANR	365605	CompoundStatement		4745:2:102143:102177	339262	1					
ANR	365606	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	6037:2:128002:128036	339262	0	True				
ANR	365607	IdentifierDecl	argt = thumb_selector ( ao -> a )		339262	0					
ANR	365608	IdentifierDeclType	ut64		339262	0					
ANR	365609	Identifier	argt		339262	1					
ANR	365610	AssignmentExpression	argt = thumb_selector ( ao -> a )		339262	2		=			
ANR	365611	Identifier	argt		339262	0					
ANR	365612	CallExpression	thumb_selector ( ao -> a )		339262	1					
ANR	365613	Callee	thumb_selector		339262	0					
ANR	365614	Identifier	thumb_selector		339262	0					
ANR	365615	ArgumentList	ao -> a		339262	1					
ANR	365616	Argument	ao -> a		339262	0					
ANR	365617	PtrMemberAccess	ao -> a		339262	0					
ANR	365618	Identifier	ao		339262	0					
ANR	365619	Identifier	a		339262	1					
ANR	365620	SwitchStatement	switch ( argt )		339262	1					
ANR	365621	Condition	argt	6038:10:128048:128051	339262	0	True				
ANR	365622	Identifier	argt		339262	0					
ANR	365623	CompoundStatement		4746:16:102195:102195	339262	1					
ANR	365624	Label	case THUMB_NONE :	6039:2:128058:128073	339262	0	True				
ANR	365625	Identifier	THUMB_NONE		339262	0					
ANR	365626	CompoundStatement		4747:19:102216:102216	339262	1					
ANR	365627	IfStatement	if ( m & DOTW_BIT )		339262	0					
ANR	365628	Condition	m & DOTW_BIT	6040:7:128084:128095	339262	0	True				
ANR	365629	BitAndExpression	m & DOTW_BIT		339262	0		&			
ANR	365630	Identifier	m		339262	0					
ANR	365631	Identifier	DOTW_BIT		339262	1					
ANR	365632	CompoundStatement		4748:21:102239:102239	339262	1					
ANR	365633	ExpressionStatement	ao -> o = 0xaff30180	6041:4:128104:128122	339262	0	True				
ANR	365634	AssignmentExpression	ao -> o = 0xaff30180		339262	0		=			
ANR	365635	PtrMemberAccess	ao -> o		339262	0					
ANR	365636	Identifier	ao		339262	0					
ANR	365637	Identifier	o		339262	1					
ANR	365638	PrimaryExpression	0xaff30180		339262	1					
ANR	365639	ReturnStatement	return 4 ;	6042:4:128128:128136	339262	1	True				
ANR	365640	PrimaryExpression	4		339262	0					
ANR	365641	ElseStatement	else		339262	0					
ANR	365642	CompoundStatement		4751:17:102296:102296	339262	0					
ANR	365643	ExpressionStatement	ao -> o = 0x10bf	6044:4:128161:128175	339262	0	True				
ANR	365644	AssignmentExpression	ao -> o = 0x10bf		339262	0		=			
ANR	365645	PtrMemberAccess	ao -> o		339262	0					
ANR	365646	Identifier	ao		339262	0					
ANR	365647	Identifier	o		339262	1					
ANR	365648	PrimaryExpression	0x10bf		339262	1					
ANR	365649	ReturnStatement	return 2 ;	6045:4:128181:128189	339262	1	True				
ANR	365650	PrimaryExpression	2		339262	0					
ANR	365651	BreakStatement	break ;	6048:3:128218:128223	339262	2	True				
ANR	365652	Label	default :	6049:2:128227:128234	339262	3	True				
ANR	365653	Identifier	default		339262	0					
ANR	365654	ReturnStatement	return - 1 ;	6050:3:128239:128248	339262	4	True				
ANR	365655	UnaryOperationExpression	- 1		339262	0					
ANR	365656	UnaryOperator	-		339262	0					
ANR	365657	PrimaryExpression	1		339262	1					
ANR	365658	ReturnStatement	return 0 ;	6053:1:128258:128266	339262	3	True				
ANR	365659	PrimaryExpression	0		339262	0					
ANR	365660	ReturnType	static int		339262	1					
ANR	365661	Identifier	thumb_assemble		339262	2					
ANR	365662	ParameterList	"ArmOpcode * ao , ut64 off , const char * str"		339262	3					
ANR	365663	Parameter	ArmOpcode * ao	1293:26:25816:25828	339262	0	True				
ANR	365664	ParameterType	ArmOpcode *		339262	0					
ANR	365665	Identifier	ao		339262	1					
ANR	365666	Parameter	ut64 off	1293:41:25831:25838	339262	1	True				
ANR	365667	ParameterType	ut64		339262	0					
ANR	365668	Identifier	off		339262	1					
ANR	365669	Parameter	const char * str	1293:51:25841:25855	339262	2	True				
ANR	365670	ParameterType	const char *		339262	0					
ANR	365671	Identifier	str		339262	1					
ANR	365672	CFGEntryNode	ENTRY		339262		True				
ANR	365673	CFGExitNode	EXIT		339262		True				
ANR	365674	Symbol	BB_BIT		339262						
ANR	365675	Symbol	thnum		339262						
ANR	365676	Symbol	getregmembang		339262						
ANR	365677	Symbol	shift		339262						
ANR	365678	Symbol	nrcs		339262						
ANR	365679	Symbol	SIXTEEN_BIT		339262						
ANR	365680	Symbol	ao -> o		339262						
ANR	365681	Symbol	cond		339262						
ANR	365682	Symbol	getshiftmemend		339262						
ANR	365683	Symbol	coreg		339262						
ANR	365684	Symbol	thiset		339262						
ANR	365685	Symbol	bank		339262						
ANR	365686	Symbol	* conds		339262						
ANR	365687	Symbol	reg4		339262						
ANR	365688	Symbol	getthbimmed		339262						
ANR	365689	Symbol	IA_BIT		339262						
ANR	365690	Symbol	ao -> a		339262						
ANR	365691	Symbol	parse_hints		339262						
ANR	365692	Symbol	L_BIT		339262						
ANR	365693	Symbol	ldrsel		339262						
ANR	365694	Symbol	std_32bit_2reg		339262						
ANR	365695	Symbol	reg1		339262						
ANR	365696	Symbol	reg3		339262						
ANR	365697	Symbol	reg2		339262						
ANR	365698	Symbol	C_BITS		339262						
ANR	365699	Symbol	getregmemstart		339262						
ANR	365700	Symbol	ao		339262						
ANR	365701	Symbol	R_BIT		339262						
ANR	365702	Symbol	str		339262						
ANR	365703	Symbol	conds		339262						
ANR	365704	Symbol	EIGHT_BIT		339262						
ANR	365705	Symbol	WB_BIT		339262						
ANR	365706	Symbol	aif		339262						
ANR	365707	Symbol	getnummemend		339262						
ANR	365708	Symbol	widthm1		339262						
ANR	365709	Symbol	std_32bit_3reg		339262						
ANR	365710	Symbol	sufsel		339262						
ANR	365711	Symbol	T_BIT		339262						
ANR	365712	Symbol	spsr		339262						
ANR	365713	Symbol	getregmemend		339262						
ANR	365714	Symbol	getreglist		339262						
ANR	365715	Symbol	H_BIT		339262						
ANR	365716	Symbol	DOTW_BIT		339262						
ANR	365717	Symbol	itmask		339262						
ANR	365718	Symbol	t1form		339262						
ANR	365719	Symbol	DOTN_BIT		339262						
ANR	365720	Symbol	strsel		339262						
ANR	365721	Symbol	getcoprocreg		339262						
ANR	365722	Symbol	proc		339262						
ANR	365723	Symbol	err		339262						
ANR	365724	Symbol	ao -> op		339262						
ANR	365725	Symbol	i		339262						
ANR	365726	Symbol	* * ao -> a		339262						
ANR	365727	Symbol	getcoproc		339262						
ANR	365728	Symbol	m		339262						
ANR	365729	Symbol	off		339262						
ANR	365730	Symbol	getnummemendbang		339262						
ANR	365731	Symbol	* strlen		339262						
ANR	365732	Symbol	w		339262						
ANR	365733	Symbol	width		339262						
ANR	365734	Symbol	DB_BIT		339262						
ANR	365735	Symbol	std_16bit_2reg		339262						
ANR	365736	Symbol	msb		339262						
ANR	365737	Symbol	UT32_MAX		339262						
ANR	365738	Symbol	thumb_getoffset		339262						
ANR	365739	Symbol	coproc		339262						
ANR	365740	Symbol	X_BIT		339262						
ANR	365741	Symbol	thumb_getshift		339262						
ANR	365742	Symbol	num		339262						
ANR	365743	Symbol	opmask		339262						
ANR	365744	Symbol	TT_BIT		339262						
ANR	365745	Symbol	mode		339262						
ANR	365746	Symbol	strlen		339262						
ANR	365747	Symbol	reg		339262						
ANR	365748	Symbol	mem_32bit_2reg		339262						
ANR	365749	Symbol	* * ao		339262						
ANR	365750	Symbol	D_BIT		339262						
ANR	365751	Symbol	wnum		339262						
ANR	365752	Symbol	strcmp		339262						
ANR	365753	Symbol	iflag		339262						
ANR	365754	Symbol	NULL		339262						
ANR	365755	Symbol	opc		339262						
ANR	365756	Symbol	offset		339262						
ANR	365757	Symbol	getthimmed12		339262						
ANR	365758	Symbol	list		339262						
ANR	365759	Symbol	* ao -> a		339262						
ANR	365760	Symbol	FD_BIT		339262						
ANR	365761	Symbol	EA_BIT		339262						
ANR	365762	Symbol	ID_BIT		339262						
ANR	365763	Symbol	true		339262						
ANR	365764	Symbol	TB_BIT		339262						
ANR	365765	Symbol	lsb		339262						
ANR	365766	Symbol	S_BIT		339262						
ANR	365767	Symbol	B_BIT		339262						
ANR	365768	Symbol	option		339262						
ANR	365769	Symbol	IE_BIT		339262						
ANR	365770	Symbol	SH_BIT		339262						
ANR	365771	Symbol	imm		339262						
ANR	365772	Symbol	coreg1		339262						
ANR	365773	Symbol	WT_BIT		339262						
ANR	365774	Symbol	coreg2		339262						
ANR	365775	Symbol	wb		339262						
ANR	365776	Symbol	strcmpnull		339262						
ANR	365777	Symbol	TWO_BIT		339262						
ANR	365778	Symbol	getthzeroimmed16		339262						
ANR	365779	Symbol	opc2		339262						
ANR	365780	Symbol	mem_16bit_2reg		339262						
ANR	365781	Symbol	interpret_msrbank		339262						
ANR	365782	Symbol	& spsr		339262						
ANR	365783	Symbol	false		339262						
ANR	365784	Symbol	getregmemstartend		339262						
ANR	365785	Symbol	* * * ao		339262						
ANR	365786	Symbol	label		339262						
ANR	365787	Symbol	BT_BIT		339262						
ANR	365788	Symbol	getthzeroimmed12		339262						
ANR	365789	Symbol	W_BIT		339262						
ANR	365790	Symbol	argt		339262						
ANR	365791	Symbol	* i		339262						
ANR	365792	Symbol	getreg		339262						
ANR	365793	Symbol	* ao		339262						
ANR	365794	Symbol	getnum		339262						
ANR	365795	Symbol	thumb_selector		339262						
ANR	365796	Symbol	opc1		339262						
ANR	365797	Function	findyz	6056:0:128271:128525							
ANR	365798	FunctionDef	"findyz (int x , int * y , int * z)"		365797	0					
ANR	365799	CompoundStatement		6056:41:128312:128525	365797	0					
ANR	365800	IdentifierDeclStatement	"int i , j ;"	6057:1:128315:128323	365797	0	True				
ANR	365801	IdentifierDecl	i		365797	0					
ANR	365802	IdentifierDeclType	int		365797	0					
ANR	365803	Identifier	i		365797	1					
ANR	365804	IdentifierDecl	j		365797	1					
ANR	365805	IdentifierDeclType	int		365797	0					
ANR	365806	Identifier	j		365797	1					
ANR	365807	ForStatement	for ( i = 0 ; i < 0xff ; i ++ )		365797	1					
ANR	365808	ForInit	i = 0 ;	6058:6:128331:128336	365797	0	True				
ANR	365809	AssignmentExpression	i = 0		365797	0		=			
ANR	365810	Identifier	i		365797	0					
ANR	365811	PrimaryExpression	0		365797	1					
ANR	365812	Condition	i < 0xff	6058:12:128337:128344	365797	1	True				
ANR	365813	RelationalExpression	i < 0xff		365797	0		<			
ANR	365814	Identifier	i		365797	0					
ANR	365815	PrimaryExpression	0xff		365797	1					
ANR	365816	PostIncDecOperationExpression	i ++	6058:22:128347:128349	365797	2	True				
ANR	365817	Identifier	i		365797	0					
ANR	365818	IncDec	++		365797	1					
ANR	365819	CompoundStatement		3:27:39:39	365797	3					
ANR	365820	ForStatement	for ( j = 0 ; j < 0xf ; j ++ )		365797	0					
ANR	365821	ForInit	j = 0 ;	6059:7:128361:128366	365797	0	True				
ANR	365822	AssignmentExpression	j = 0		365797	0		=			
ANR	365823	Identifier	j		365797	0					
ANR	365824	PrimaryExpression	0		365797	1					
ANR	365825	Condition	j < 0xf	6059:13:128367:128373	365797	1	True				
ANR	365826	RelationalExpression	j < 0xf		365797	0		<			
ANR	365827	Identifier	j		365797	0					
ANR	365828	PrimaryExpression	0xf		365797	1					
ANR	365829	PostIncDecOperationExpression	j ++	6059:21:128375:128377	365797	2	True				
ANR	365830	Identifier	j		365797	0					
ANR	365831	IncDec	++		365797	1					
ANR	365832	CompoundStatement		5:3:72:86	365797	3					
ANR	365833	IdentifierDeclStatement	int v = i << j ;	6060:3:128385:128399	365797	0	True				
ANR	365834	IdentifierDecl	v = i << j		365797	0					
ANR	365835	IdentifierDeclType	int		365797	0					
ANR	365836	Identifier	v		365797	1					
ANR	365837	AssignmentExpression	v = i << j		365797	2		=			
ANR	365838	Identifier	v		365797	0					
ANR	365839	ShiftExpression	i << j		365797	1		<<			
ANR	365840	Identifier	i		365797	0					
ANR	365841	Identifier	j		365797	1					
ANR	365842	IfStatement	if ( v > x )		365797	1					
ANR	365843	Condition	v > x	6061:7:128408:128412	365797	0	True				
ANR	365844	RelationalExpression	v > x		365797	0		>			
ANR	365845	Identifier	v		365797	0					
ANR	365846	Identifier	x		365797	1					
ANR	365847	CompoundStatement		6:14:102:102	365797	1					
ANR	365848	ContinueStatement	continue ;	6062:4:128421:128429	365797	0	True				
ANR	365849	IfStatement	if ( v == x )		365797	2					
ANR	365850	Condition	v == x	6064:7:128443:128448	365797	0	True				
ANR	365851	EqualityExpression	v == x		365797	0		==			
ANR	365852	Identifier	v		365797	0					
ANR	365853	Identifier	x		365797	1					
ANR	365854	CompoundStatement		9:15:138:138	365797	1					
ANR	365855	ExpressionStatement	* y = i	6065:4:128457:128463	365797	0	True				
ANR	365856	AssignmentExpression	* y = i		365797	0		=			
ANR	365857	UnaryOperationExpression	* y		365797	0					
ANR	365858	UnaryOperator	*		365797	0					
ANR	365859	Identifier	y		365797	1					
ANR	365860	Identifier	i		365797	1					
ANR	365861	ExpressionStatement	* z = 16 - ( j / 2 )	6066:4:128469:128486	365797	1	True				
ANR	365862	AssignmentExpression	* z = 16 - ( j / 2 )		365797	0		=			
ANR	365863	UnaryOperationExpression	* z		365797	0					
ANR	365864	UnaryOperator	*		365797	0					
ANR	365865	Identifier	z		365797	1					
ANR	365866	AdditiveExpression	16 - ( j / 2 )		365797	1		-			
ANR	365867	PrimaryExpression	16		365797	0					
ANR	365868	MultiplicativeExpression	j / 2		365797	1		/			
ANR	365869	Identifier	j		365797	0					
ANR	365870	PrimaryExpression	2		365797	1					
ANR	365871	ReturnStatement	return 1 ;	6067:4:128492:128500	365797	2	True				
ANR	365872	PrimaryExpression	1		365797	0					
ANR	365873	ReturnStatement	return 0 ;	6071:1:128515:128523	365797	2	True				
ANR	365874	PrimaryExpression	0		365797	0					
ANR	365875	ReturnType	static int		365797	1					
ANR	365876	Identifier	findyz		365797	2					
ANR	365877	ParameterList	"int x , int * y , int * z"		365797	3					
ANR	365878	Parameter	int x	6056:18:128289:128293	365797	0	True				
ANR	365879	ParameterType	int		365797	0					
ANR	365880	Identifier	x		365797	1					
ANR	365881	Parameter	int * y	6056:25:128296:128301	365797	1	True				
ANR	365882	ParameterType	int *		365797	0					
ANR	365883	Identifier	y		365797	1					
ANR	365884	Parameter	int * z	6056:33:128304:128309	365797	2	True				
ANR	365885	ParameterType	int *		365797	0					
ANR	365886	Identifier	z		365797	1					
ANR	365887	CFGEntryNode	ENTRY		365797		True				
ANR	365888	CFGExitNode	EXIT		365797		True				
ANR	365889	Symbol	* y		365797						
ANR	365890	Symbol	* z		365797						
ANR	365891	Symbol	v		365797						
ANR	365892	Symbol	x		365797						
ANR	365893	Symbol	y		365797						
ANR	365894	Symbol	i		365797						
ANR	365895	Symbol	z		365797						
ANR	365896	Symbol	j		365797						
ANR	365897	Function	arm_assemble	6074:0:128528:139373							
ANR	365898	FunctionDef	"arm_assemble (ArmOpcode * ao , ut64 off , const char * str)"		365897	0					
ANR	365899	CompoundStatement		6074:66:128594:139373	365897	0					
ANR	365900	IdentifierDeclStatement	"int i , j , ret , reg , a , b ;"	6075:1:128597:128621	365897	0	True				
ANR	365901	IdentifierDecl	i		365897	0					
ANR	365902	IdentifierDeclType	int		365897	0					
ANR	365903	Identifier	i		365897	1					
ANR	365904	IdentifierDecl	j		365897	1					
ANR	365905	IdentifierDeclType	int		365897	0					
ANR	365906	Identifier	j		365897	1					
ANR	365907	IdentifierDecl	ret		365897	2					
ANR	365908	IdentifierDeclType	int		365897	0					
ANR	365909	Identifier	ret		365897	1					
ANR	365910	IdentifierDecl	reg		365897	3					
ANR	365911	IdentifierDeclType	int		365897	0					
ANR	365912	Identifier	reg		365897	1					
ANR	365913	IdentifierDecl	a		365897	4					
ANR	365914	IdentifierDeclType	int		365897	0					
ANR	365915	Identifier	a		365897	1					
ANR	365916	IdentifierDecl	b		365897	5					
ANR	365917	IdentifierDeclType	int		365897	0					
ANR	365918	Identifier	b		365897	1					
ANR	365919	IdentifierDeclStatement	"int coproc , opc ;"	6076:1:128624:128639	365897	1	True				
ANR	365920	IdentifierDecl	coproc		365897	0					
ANR	365921	IdentifierDeclType	int		365897	0					
ANR	365922	Identifier	coproc		365897	1					
ANR	365923	IdentifierDecl	opc		365897	1					
ANR	365924	IdentifierDeclType	int		365897	0					
ANR	365925	Identifier	opc		365897	1					
ANR	365926	IdentifierDeclStatement	bool rex = false ;	6077:1:128642:128658	365897	2	True				
ANR	365927	IdentifierDecl	rex = false		365897	0					
ANR	365928	IdentifierDeclType	bool		365897	0					
ANR	365929	Identifier	rex		365897	1					
ANR	365930	AssignmentExpression	rex = false		365897	2		=			
ANR	365931	Identifier	false		365897	0					
ANR	365932	Identifier	false		365897	1					
ANR	365933	IdentifierDeclStatement	"int shift , low , high ;"	6078:1:128661:128681	365897	3	True				
ANR	365934	IdentifierDecl	shift		365897	0					
ANR	365935	IdentifierDeclType	int		365897	0					
ANR	365936	Identifier	shift		365897	1					
ANR	365937	IdentifierDecl	low		365897	1					
ANR	365938	IdentifierDeclType	int		365897	0					
ANR	365939	Identifier	low		365897	1					
ANR	365940	IdentifierDecl	high		365897	2					
ANR	365941	IdentifierDeclType	int		365897	0					
ANR	365942	Identifier	high		365897	1					
ANR	365943	ForStatement	for ( i = 0 ; ops [ i ] . name ; i ++ )		365897	4					
ANR	365944	ForInit	i = 0 ;	6079:6:128689:128694	365897	0	True				
ANR	365945	AssignmentExpression	i = 0		365897	0		=			
ANR	365946	Identifier	i		365897	0					
ANR	365947	PrimaryExpression	0		365897	1					
ANR	365948	Condition	ops [ i ] . name	6079:13:128696:128706	365897	1	True				
ANR	365949	MemberAccess	ops [ i ] . name		365897	0					
ANR	365950	ArrayIndexing	ops [ i ]		365897	0					
ANR	365951	Identifier	ops		365897	0					
ANR	365952	Identifier	i		365897	1					
ANR	365953	Identifier	name		365897	1					
ANR	365954	PostIncDecOperationExpression	i ++	6079:26:128709:128711	365897	2	True				
ANR	365955	Identifier	i		365897	0					
ANR	365956	IncDec	++		365897	1					
ANR	365957	CompoundStatement		6:31:119:119	365897	3					
ANR	365958	IfStatement	"if ( ! strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) ) )"		365897	0					
ANR	365959	Condition	"! strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) )"	6080:6:128722:128773	365897	0	True				
ANR	365960	UnaryOperationExpression	"! strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) )"		365897	0					
ANR	365961	UnaryOperator	!		365897	0					
ANR	365962	CallExpression	"strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) )"		365897	1					
ANR	365963	Callee	strncmp		365897	0					
ANR	365964	Identifier	strncmp		365897	0					
ANR	365965	ArgumentList	ao -> op		365897	1					
ANR	365966	Argument	ao -> op		365897	0					
ANR	365967	PtrMemberAccess	ao -> op		365897	0					
ANR	365968	Identifier	ao		365897	0					
ANR	365969	Identifier	op		365897	1					
ANR	365970	Argument	ops [ i ] . name		365897	1					
ANR	365971	MemberAccess	ops [ i ] . name		365897	0					
ANR	365972	ArrayIndexing	ops [ i ]		365897	0					
ANR	365973	Identifier	ops		365897	0					
ANR	365974	Identifier	i		365897	1					
ANR	365975	Identifier	name		365897	1					
ANR	365976	Argument	strlen ( ops [ i ] . name )		365897	2					
ANR	365977	CallExpression	strlen ( ops [ i ] . name )		365897	0					
ANR	365978	Callee	strlen		365897	0					
ANR	365979	Identifier	strlen		365897	0					
ANR	365980	ArgumentList	ops [ i ] . name		365897	1					
ANR	365981	Argument	ops [ i ] . name		365897	0					
ANR	365982	MemberAccess	ops [ i ] . name		365897	0					
ANR	365983	ArrayIndexing	ops [ i ]		365897	0					
ANR	365984	Identifier	ops		365897	0					
ANR	365985	Identifier	i		365897	1					
ANR	365986	Identifier	name		365897	1					
ANR	365987	CompoundStatement		7:60:181:181	365897	1					
ANR	365988	ExpressionStatement	ao -> o = ops [ i ] . code	6081:3:128781:128800	365897	0	True				
ANR	365989	AssignmentExpression	ao -> o = ops [ i ] . code		365897	0		=			
ANR	365990	PtrMemberAccess	ao -> o		365897	0					
ANR	365991	Identifier	ao		365897	0					
ANR	365992	Identifier	o		365897	1					
ANR	365993	MemberAccess	ops [ i ] . code		365897	1					
ANR	365994	ArrayIndexing	ops [ i ]		365897	0					
ANR	365995	Identifier	ops		365897	0					
ANR	365996	Identifier	i		365897	1					
ANR	365997	Identifier	code		365897	1					
ANR	365998	ExpressionStatement	"arm_opcode_cond ( ao , strlen ( ops [ i ] . name ) )"	6082:3:128805:128846	365897	1	True				
ANR	365999	CallExpression	"arm_opcode_cond ( ao , strlen ( ops [ i ] . name ) )"		365897	0					
ANR	366000	Callee	arm_opcode_cond		365897	0					
ANR	366001	Identifier	arm_opcode_cond		365897	0					
ANR	366002	ArgumentList	ao		365897	1					
ANR	366003	Argument	ao		365897	0					
ANR	366004	Identifier	ao		365897	0					
ANR	366005	Argument	strlen ( ops [ i ] . name )		365897	1					
ANR	366006	CallExpression	strlen ( ops [ i ] . name )		365897	0					
ANR	366007	Callee	strlen		365897	0					
ANR	366008	Identifier	strlen		365897	0					
ANR	366009	ArgumentList	ops [ i ] . name		365897	1					
ANR	366010	Argument	ops [ i ] . name		365897	0					
ANR	366011	MemberAccess	ops [ i ] . name		365897	0					
ANR	366012	ArrayIndexing	ops [ i ]		365897	0					
ANR	366013	Identifier	ops		365897	0					
ANR	366014	Identifier	i		365897	1					
ANR	366015	Identifier	name		365897	1					
ANR	366016	IfStatement	if ( ao -> a [ 0 ] || ops [ i ] . type == TYPE_BKP )		365897	2					
ANR	366017	Condition	ao -> a [ 0 ] || ops [ i ] . type == TYPE_BKP	6083:7:128855:128889	365897	0	True				
ANR	366018	OrExpression	ao -> a [ 0 ] || ops [ i ] . type == TYPE_BKP		365897	0		||			
ANR	366019	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366020	PtrMemberAccess	ao -> a		365897	0					
ANR	366021	Identifier	ao		365897	0					
ANR	366022	Identifier	a		365897	1					
ANR	366023	PrimaryExpression	0		365897	1					
ANR	366024	EqualityExpression	ops [ i ] . type == TYPE_BKP		365897	1		==			
ANR	366025	MemberAccess	ops [ i ] . type		365897	0					
ANR	366026	ArrayIndexing	ops [ i ]		365897	0					
ANR	366027	Identifier	ops		365897	0					
ANR	366028	Identifier	i		365897	1					
ANR	366029	Identifier	type		365897	1					
ANR	366030	Identifier	TYPE_BKP		365897	1					
ANR	366031	CompoundStatement		10:44:297:297	365897	1					
ANR	366032	SwitchStatement	switch ( ops [ i ] . type )		365897	0					
ANR	366033	Condition	ops [ i ] . type	6084:12:128906:128916	365897	0	True				
ANR	366034	MemberAccess	ops [ i ] . type		365897	0					
ANR	366035	ArrayIndexing	ops [ i ]		365897	0					
ANR	366036	Identifier	ops		365897	0					
ANR	366037	Identifier	i		365897	1					
ANR	366038	Identifier	type		365897	1					
ANR	366039	CompoundStatement		463:4:10507:10538	365897	1					
ANR	366040	Label	case TYPE_MEM :	6085:4:128925:128938	365897	0	True				
ANR	366041	Identifier	TYPE_MEM		365897	0					
ANR	366042	IfStatement	"if ( ! strncmp ( ops [ i ] . name , ""strex"" , 5 ) )"		365897	1					
ANR	366043	Condition	"! strncmp ( ops [ i ] . name , ""strex"" , 5 )"	6086:9:128949:128982	365897	0	True				
ANR	366044	UnaryOperationExpression	"! strncmp ( ops [ i ] . name , ""strex"" , 5 )"		365897	0					
ANR	366045	UnaryOperator	!		365897	0					
ANR	366046	CallExpression	"strncmp ( ops [ i ] . name , ""strex"" , 5 )"		365897	1					
ANR	366047	Callee	strncmp		365897	0					
ANR	366048	Identifier	strncmp		365897	0					
ANR	366049	ArgumentList	ops [ i ] . name		365897	1					
ANR	366050	Argument	ops [ i ] . name		365897	0					
ANR	366051	MemberAccess	ops [ i ] . name		365897	0					
ANR	366052	ArrayIndexing	ops [ i ]		365897	0					
ANR	366053	Identifier	ops		365897	0					
ANR	366054	Identifier	i		365897	1					
ANR	366055	Identifier	name		365897	1					
ANR	366056	Argument	"""strex"""		365897	1					
ANR	366057	PrimaryExpression	"""strex"""		365897	0					
ANR	366058	Argument	5		365897	2					
ANR	366059	PrimaryExpression	5		365897	0					
ANR	366060	CompoundStatement		13:45:390:390	365897	1					
ANR	366061	ExpressionStatement	rex = 1	6087:6:128993:129000	365897	0	True				
ANR	366062	AssignmentExpression	rex = 1		365897	0		=			
ANR	366063	Identifier	rex		365897	0					
ANR	366064	PrimaryExpression	1		365897	1					
ANR	366065	IfStatement	"if ( ! strcmp ( ops [ i ] . name , ""str"" ) || ! strcmp ( ops [ i ] . name , ""ldr"" ) )"		365897	2					
ANR	366066	Condition	"! strcmp ( ops [ i ] . name , ""str"" ) || ! strcmp ( ops [ i ] . name , ""ldr"" )"	6089:9:129018:129077	365897	0	True				
ANR	366067	OrExpression	"! strcmp ( ops [ i ] . name , ""str"" ) || ! strcmp ( ops [ i ] . name , ""ldr"" )"		365897	0		||			
ANR	366068	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""str"" )"		365897	0					
ANR	366069	UnaryOperator	!		365897	0					
ANR	366070	CallExpression	"strcmp ( ops [ i ] . name , ""str"" )"		365897	1					
ANR	366071	Callee	strcmp		365897	0					
ANR	366072	Identifier	strcmp		365897	0					
ANR	366073	ArgumentList	ops [ i ] . name		365897	1					
ANR	366074	Argument	ops [ i ] . name		365897	0					
ANR	366075	MemberAccess	ops [ i ] . name		365897	0					
ANR	366076	ArrayIndexing	ops [ i ]		365897	0					
ANR	366077	Identifier	ops		365897	0					
ANR	366078	Identifier	i		365897	1					
ANR	366079	Identifier	name		365897	1					
ANR	366080	Argument	"""str"""		365897	1					
ANR	366081	PrimaryExpression	"""str"""		365897	0					
ANR	366082	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""ldr"" )"		365897	1					
ANR	366083	UnaryOperator	!		365897	0					
ANR	366084	CallExpression	"strcmp ( ops [ i ] . name , ""ldr"" )"		365897	1					
ANR	366085	Callee	strcmp		365897	0					
ANR	366086	Identifier	strcmp		365897	0					
ANR	366087	ArgumentList	ops [ i ] . name		365897	1					
ANR	366088	Argument	ops [ i ] . name		365897	0					
ANR	366089	MemberAccess	ops [ i ] . name		365897	0					
ANR	366090	ArrayIndexing	ops [ i ]		365897	0					
ANR	366091	Identifier	ops		365897	0					
ANR	366092	Identifier	i		365897	1					
ANR	366093	Identifier	name		365897	1					
ANR	366094	Argument	"""ldr"""		365897	1					
ANR	366095	PrimaryExpression	"""ldr"""		365897	0					
ANR	366096	CompoundStatement		16:71:485:485	365897	1					
ANR	366097	IfStatement	if ( ! ao -> a [ 2 ] )		365897	0					
ANR	366098	Condition	! ao -> a [ 2 ]	6090:10:129092:129100	365897	0	True				
ANR	366099	UnaryOperationExpression	! ao -> a [ 2 ]		365897	0					
ANR	366100	UnaryOperator	!		365897	0					
ANR	366101	ArrayIndexing	ao -> a [ 2 ]		365897	1					
ANR	366102	PtrMemberAccess	ao -> a		365897	0					
ANR	366103	Identifier	ao		365897	0					
ANR	366104	Identifier	a		365897	1					
ANR	366105	PrimaryExpression	2		365897	1					
ANR	366106	CompoundStatement		17:21:508:508	365897	1					
ANR	366107	ExpressionStatement	"ao -> a [ 2 ] = ""0"""	6091:7:129112:129126	365897	0	True				
ANR	366108	AssignmentExpression	"ao -> a [ 2 ] = ""0"""		365897	0		=			
ANR	366109	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366110	PtrMemberAccess	ao -> a		365897	0					
ANR	366111	Identifier	ao		365897	0					
ANR	366112	Identifier	a		365897	1					
ANR	366113	PrimaryExpression	2		365897	1					
ANR	366114	PrimaryExpression	"""0"""		365897	1					
ANR	366115	ExpressionStatement	getrange ( ao -> a [ 0 ] )	6094:5:129148:129167	365897	3	True				
ANR	366116	CallExpression	getrange ( ao -> a [ 0 ] )		365897	0					
ANR	366117	Callee	getrange		365897	0					
ANR	366118	Identifier	getrange		365897	0					
ANR	366119	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366120	Argument	ao -> a [ 0 ]		365897	0					
ANR	366121	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366122	PtrMemberAccess	ao -> a		365897	0					
ANR	366123	Identifier	ao		365897	0					
ANR	366124	Identifier	a		365897	1					
ANR	366125	PrimaryExpression	0		365897	1					
ANR	366126	ExpressionStatement	getrange ( ao -> a [ 1 ] )	6095:5:129174:129193	365897	4	True				
ANR	366127	CallExpression	getrange ( ao -> a [ 1 ] )		365897	0					
ANR	366128	Callee	getrange		365897	0					
ANR	366129	Identifier	getrange		365897	0					
ANR	366130	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	366131	Argument	ao -> a [ 1 ]		365897	0					
ANR	366132	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	366133	PtrMemberAccess	ao -> a		365897	0					
ANR	366134	Identifier	ao		365897	0					
ANR	366135	Identifier	a		365897	1					
ANR	366136	PrimaryExpression	1		365897	1					
ANR	366137	ExpressionStatement	getrange ( ao -> a [ 2 ] )	6096:5:129200:129219	365897	5	True				
ANR	366138	CallExpression	getrange ( ao -> a [ 2 ] )		365897	0					
ANR	366139	Callee	getrange		365897	0					
ANR	366140	Identifier	getrange		365897	0					
ANR	366141	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	366142	Argument	ao -> a [ 2 ]		365897	0					
ANR	366143	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366144	PtrMemberAccess	ao -> a		365897	0					
ANR	366145	Identifier	ao		365897	0					
ANR	366146	Identifier	a		365897	1					
ANR	366147	PrimaryExpression	2		365897	1					
ANR	366148	IfStatement	if ( ao -> a [ 0 ] && ao -> a [ 1 ] )		365897	6					
ANR	366149	Condition	ao -> a [ 0 ] && ao -> a [ 1 ]	6097:9:129230:129249	365897	0	True				
ANR	366150	AndExpression	ao -> a [ 0 ] && ao -> a [ 1 ]		365897	0		&&			
ANR	366151	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366152	PtrMemberAccess	ao -> a		365897	0					
ANR	366153	Identifier	ao		365897	0					
ANR	366154	Identifier	a		365897	1					
ANR	366155	PrimaryExpression	0		365897	1					
ANR	366156	ArrayIndexing	ao -> a [ 1 ]		365897	1					
ANR	366157	PtrMemberAccess	ao -> a		365897	0					
ANR	366158	Identifier	ao		365897	0					
ANR	366159	Identifier	a		365897	1					
ANR	366160	PrimaryExpression	1		365897	1					
ANR	366161	CompoundStatement		28:6:750:776	365897	1					
ANR	366162	IdentifierDeclStatement	char rn [ 8 ] ;	6098:6:129260:129270	365897	0	True				
ANR	366163	IdentifierDecl	rn [ 8 ]		365897	0					
ANR	366164	IdentifierDeclType	char [ 8 ]		365897	0					
ANR	366165	Identifier	rn		365897	1					
ANR	366166	PrimaryExpression	8		365897	2					
ANR	366167	ExpressionStatement	"strncpy ( rn , ao -> a [ 1 ] , 7 )"	6099:6:129278:129303	365897	1	True				
ANR	366168	CallExpression	"strncpy ( rn , ao -> a [ 1 ] , 7 )"		365897	0					
ANR	366169	Callee	strncpy		365897	0					
ANR	366170	Identifier	strncpy		365897	0					
ANR	366171	ArgumentList	rn		365897	1					
ANR	366172	Argument	rn		365897	0					
ANR	366173	Identifier	rn		365897	0					
ANR	366174	Argument	ao -> a [ 1 ]		365897	1					
ANR	366175	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	366176	PtrMemberAccess	ao -> a		365897	0					
ANR	366177	Identifier	ao		365897	0					
ANR	366178	Identifier	a		365897	1					
ANR	366179	PrimaryExpression	1		365897	1					
ANR	366180	Argument	7		365897	2					
ANR	366181	PrimaryExpression	7		365897	0					
ANR	366182	IdentifierDeclStatement	int r0 = getreg ( ao -> a [ 0 ] ) ;	6100:6:129311:129337	365897	2	True				
ANR	366183	IdentifierDecl	r0 = getreg ( ao -> a [ 0 ] )		365897	0					
ANR	366184	IdentifierDeclType	int		365897	0					
ANR	366185	Identifier	r0		365897	1					
ANR	366186	AssignmentExpression	r0 = getreg ( ao -> a [ 0 ] )		365897	2		=			
ANR	366187	Identifier	r0		365897	0					
ANR	366188	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	366189	Callee	getreg		365897	0					
ANR	366190	Identifier	getreg		365897	0					
ANR	366191	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366192	Argument	ao -> a [ 0 ]		365897	0					
ANR	366193	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366194	PtrMemberAccess	ao -> a		365897	0					
ANR	366195	Identifier	ao		365897	0					
ANR	366196	Identifier	a		365897	1					
ANR	366197	PrimaryExpression	0		365897	1					
ANR	366198	IdentifierDeclStatement	int r1 = getreg ( ao -> a [ 1 ] ) ;	6101:6:129345:129371	365897	3	True				
ANR	366199	IdentifierDecl	r1 = getreg ( ao -> a [ 1 ] )		365897	0					
ANR	366200	IdentifierDeclType	int		365897	0					
ANR	366201	Identifier	r1		365897	1					
ANR	366202	AssignmentExpression	r1 = getreg ( ao -> a [ 1 ] )		365897	2		=			
ANR	366203	Identifier	r1		365897	0					
ANR	366204	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	366205	Callee	getreg		365897	0					
ANR	366206	Identifier	getreg		365897	0					
ANR	366207	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	366208	Argument	ao -> a [ 1 ]		365897	0					
ANR	366209	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	366210	PtrMemberAccess	ao -> a		365897	0					
ANR	366211	Identifier	ao		365897	0					
ANR	366212	Identifier	a		365897	1					
ANR	366213	PrimaryExpression	1		365897	1					
ANR	366214	IfStatement	if ( ( r0 < 0 || r0 > 15 ) || ( r1 > 15 || r1 < 0 ) )		365897	4					
ANR	366215	Condition	( r0 < 0 || r0 > 15 ) || ( r1 > 15 || r1 < 0 )	6102:10:129383:129424	365897	0	True				
ANR	366216	OrExpression	( r0 < 0 || r0 > 15 ) || ( r1 > 15 || r1 < 0 )		365897	0		||			
ANR	366217	OrExpression	r0 < 0 || r0 > 15		365897	0		||			
ANR	366218	RelationalExpression	r0 < 0		365897	0		<			
ANR	366219	Identifier	r0		365897	0					
ANR	366220	PrimaryExpression	0		365897	1					
ANR	366221	RelationalExpression	r0 > 15		365897	1		>			
ANR	366222	Identifier	r0		365897	0					
ANR	366223	PrimaryExpression	15		365897	1					
ANR	366224	OrExpression	r1 > 15 || r1 < 0		365897	1		||			
ANR	366225	RelationalExpression	r1 > 15		365897	0		>			
ANR	366226	Identifier	r1		365897	0					
ANR	366227	PrimaryExpression	15		365897	1					
ANR	366228	RelationalExpression	r1 < 0		365897	1		<			
ANR	366229	Identifier	r1		365897	0					
ANR	366230	PrimaryExpression	0		365897	1					
ANR	366231	CompoundStatement		29:54:832:832	365897	1					
ANR	366232	ReturnStatement	return 0 ;	6103:7:129436:129444	365897	0	True				
ANR	366233	PrimaryExpression	0		365897	0					
ANR	366234	ExpressionStatement	ao -> o |= r0 << 20	6105:6:129460:129477	365897	5	True				
ANR	366235	AssignmentExpression	ao -> o |= r0 << 20		365897	0		|=			
ANR	366236	PtrMemberAccess	ao -> o		365897	0					
ANR	366237	Identifier	ao		365897	0					
ANR	366238	Identifier	o		365897	1					
ANR	366239	ShiftExpression	r0 << 20		365897	1		<<			
ANR	366240	Identifier	r0		365897	0					
ANR	366241	PrimaryExpression	20		365897	1					
ANR	366242	IfStatement	"if ( ! strcmp ( ops [ i ] . name , ""strd"" ) )"		365897	6					
ANR	366243	Condition	"! strcmp ( ops [ i ] . name , ""strd"" )"	6106:10:129489:129517	365897	0	True				
ANR	366244	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""strd"" )"		365897	0					
ANR	366245	UnaryOperator	!		365897	0					
ANR	366246	CallExpression	"strcmp ( ops [ i ] . name , ""strd"" )"		365897	1					
ANR	366247	Callee	strcmp		365897	0					
ANR	366248	Identifier	strcmp		365897	0					
ANR	366249	ArgumentList	ops [ i ] . name		365897	1					
ANR	366250	Argument	ops [ i ] . name		365897	0					
ANR	366251	MemberAccess	ops [ i ] . name		365897	0					
ANR	366252	ArrayIndexing	ops [ i ]		365897	0					
ANR	366253	Identifier	ops		365897	0					
ANR	366254	Identifier	i		365897	1					
ANR	366255	Identifier	name		365897	1					
ANR	366256	Argument	"""strd"""		365897	1					
ANR	366257	PrimaryExpression	"""strd"""		365897	0					
ANR	366258	CompoundStatement		33:41:925:925	365897	1					
ANR	366259	ExpressionStatement	r1 = getreg ( ao -> a [ 2 ] )	6107:7:129529:129551	365897	0	True				
ANR	366260	AssignmentExpression	r1 = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	366261	Identifier	r1		365897	0					
ANR	366262	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	366263	Callee	getreg		365897	0					
ANR	366264	Identifier	getreg		365897	0					
ANR	366265	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	366266	Argument	ao -> a [ 2 ]		365897	0					
ANR	366267	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366268	PtrMemberAccess	ao -> a		365897	0					
ANR	366269	Identifier	ao		365897	0					
ANR	366270	Identifier	a		365897	1					
ANR	366271	PrimaryExpression	2		365897	1					
ANR	366272	IfStatement	if ( r1 == - 1 )		365897	1					
ANR	366273	Condition	r1 == - 1	6108:11:129564:129571	365897	0	True				
ANR	366274	EqualityExpression	r1 == - 1		365897	0		==			
ANR	366275	Identifier	r1		365897	0					
ANR	366276	UnaryOperationExpression	- 1		365897	1					
ANR	366277	UnaryOperator	-		365897	0					
ANR	366278	PrimaryExpression	1		365897	1					
ANR	366279	CompoundStatement		35:21:979:979	365897	1					
ANR	366280	BreakStatement	break ;	6109:8:129584:129589	365897	0	True				
ANR	366281	ExpressionStatement	ao -> o |= r1 << 8	6111:7:129607:129623	365897	2	True				
ANR	366282	AssignmentExpression	ao -> o |= r1 << 8		365897	0		|=			
ANR	366283	PtrMemberAccess	ao -> o		365897	0					
ANR	366284	Identifier	ao		365897	0					
ANR	366285	Identifier	o		365897	1					
ANR	366286	ShiftExpression	r1 << 8		365897	1		<<			
ANR	366287	Identifier	r1		365897	0					
ANR	366288	PrimaryExpression	8		365897	1					
ANR	366289	IfStatement	if ( ao -> a [ 3 ] )		365897	3					
ANR	366290	Condition	ao -> a [ 3 ]	6112:11:129636:129643	365897	0	True				
ANR	366291	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	366292	PtrMemberAccess	ao -> a		365897	0					
ANR	366293	Identifier	ao		365897	0					
ANR	366294	Identifier	a		365897	1					
ANR	366295	PrimaryExpression	3		365897	1					
ANR	366296	CompoundStatement		44:8:1168:1195	365897	1					
ANR	366297	IdentifierDeclStatement	"char * bracket = strchr ( ao -> a [ 3 ] , ']' ) ;"	6113:8:129656:129694	365897	0	True				
ANR	366298	IdentifierDecl	"* bracket = strchr ( ao -> a [ 3 ] , ']' )"		365897	0					
ANR	366299	IdentifierDeclType	char *		365897	0					
ANR	366300	Identifier	bracket		365897	1					
ANR	366301	AssignmentExpression	"* bracket = strchr ( ao -> a [ 3 ] , ']' )"		365897	2		=			
ANR	366302	Identifier	bracket		365897	0					
ANR	366303	CallExpression	"strchr ( ao -> a [ 3 ] , ']' )"		365897	1					
ANR	366304	Callee	strchr		365897	0					
ANR	366305	Identifier	strchr		365897	0					
ANR	366306	ArgumentList	ao -> a [ 3 ]		365897	1					
ANR	366307	Argument	ao -> a [ 3 ]		365897	0					
ANR	366308	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	366309	PtrMemberAccess	ao -> a		365897	0					
ANR	366310	Identifier	ao		365897	0					
ANR	366311	Identifier	a		365897	1					
ANR	366312	PrimaryExpression	3		365897	1					
ANR	366313	Argument	']'		365897	1					
ANR	366314	PrimaryExpression	']'		365897	0					
ANR	366315	IfStatement	if ( bracket )		365897	1					
ANR	366316	Condition	bracket	6114:12:129708:129714	365897	0	True				
ANR	366317	Identifier	bracket		365897	0					
ANR	366318	CompoundStatement		41:21:1122:1122	365897	1					
ANR	366319	ExpressionStatement	* bracket = '\\0'	6115:9:129728:129743	365897	0	True				
ANR	366320	AssignmentExpression	* bracket = '\\0'		365897	0		=			
ANR	366321	UnaryOperationExpression	* bracket		365897	0					
ANR	366322	UnaryOperator	*		365897	0					
ANR	366323	Identifier	bracket		365897	1					
ANR	366324	PrimaryExpression	'\\0'		365897	1					
ANR	366325	IdentifierDeclStatement	int num = getnum ( ao -> a [ 3 ] ) ;	6117:8:129763:129790	365897	2	True				
ANR	366326	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		365897	0					
ANR	366327	IdentifierDeclType	int		365897	0					
ANR	366328	Identifier	num		365897	1					
ANR	366329	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		365897	2		=			
ANR	366330	Identifier	num		365897	0					
ANR	366331	CallExpression	getnum ( ao -> a [ 3 ] )		365897	1					
ANR	366332	Callee	getnum		365897	0					
ANR	366333	Identifier	getnum		365897	0					
ANR	366334	ArgumentList	ao -> a [ 3 ]		365897	1					
ANR	366335	Argument	ao -> a [ 3 ]		365897	0					
ANR	366336	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	366337	PtrMemberAccess	ao -> a		365897	0					
ANR	366338	Identifier	ao		365897	0					
ANR	366339	Identifier	a		365897	1					
ANR	366340	PrimaryExpression	3		365897	1					
ANR	366341	ExpressionStatement	ao -> o |= ( num & 0x0f ) << 24	6118:8:129800:129827	365897	3	True				
ANR	366342	AssignmentExpression	ao -> o |= ( num & 0x0f ) << 24		365897	0		|=			
ANR	366343	PtrMemberAccess	ao -> o		365897	0					
ANR	366344	Identifier	ao		365897	0					
ANR	366345	Identifier	o		365897	1					
ANR	366346	ShiftExpression	( num & 0x0f ) << 24		365897	1		<<			
ANR	366347	BitAndExpression	num & 0x0f		365897	0		&			
ANR	366348	Identifier	num		365897	0					
ANR	366349	PrimaryExpression	0x0f		365897	1					
ANR	366350	PrimaryExpression	24		365897	1					
ANR	366351	ExpressionStatement	ao -> o |= ( ( num >> 4 ) & 0x0f ) << 16	6119:8:129837:129871	365897	4	True				
ANR	366352	AssignmentExpression	ao -> o |= ( ( num >> 4 ) & 0x0f ) << 16		365897	0		|=			
ANR	366353	PtrMemberAccess	ao -> o		365897	0					
ANR	366354	Identifier	ao		365897	0					
ANR	366355	Identifier	o		365897	1					
ANR	366356	ShiftExpression	( ( num >> 4 ) & 0x0f ) << 16		365897	1		<<			
ANR	366357	BitAndExpression	( num >> 4 ) & 0x0f		365897	0		&			
ANR	366358	ShiftExpression	num >> 4		365897	0		>>			
ANR	366359	Identifier	num		365897	0					
ANR	366360	PrimaryExpression	4		365897	1					
ANR	366361	PrimaryExpression	0x0f		365897	1					
ANR	366362	PrimaryExpression	16		365897	1					
ANR	366363	BreakStatement	break ;	6121:7:129889:129894	365897	4	True				
ANR	366364	IfStatement	"if ( ! strcmp ( ops [ i ] . name , ""strh"" ) )"		365897	7					
ANR	366365	Condition	"! strcmp ( ops [ i ] . name , ""strh"" )"	6123:10:129914:129942	365897	0	True				
ANR	366366	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""strh"" )"		365897	0					
ANR	366367	UnaryOperator	!		365897	0					
ANR	366368	CallExpression	"strcmp ( ops [ i ] . name , ""strh"" )"		365897	1					
ANR	366369	Callee	strcmp		365897	0					
ANR	366370	Identifier	strcmp		365897	0					
ANR	366371	ArgumentList	ops [ i ] . name		365897	1					
ANR	366372	Argument	ops [ i ] . name		365897	0					
ANR	366373	MemberAccess	ops [ i ] . name		365897	0					
ANR	366374	ArrayIndexing	ops [ i ]		365897	0					
ANR	366375	Identifier	ops		365897	0					
ANR	366376	Identifier	i		365897	1					
ANR	366377	Identifier	name		365897	1					
ANR	366378	Argument	"""strh"""		365897	1					
ANR	366379	PrimaryExpression	"""strh"""		365897	0					
ANR	366380	CompoundStatement		50:41:1350:1350	365897	1					
ANR	366381	ExpressionStatement	ao -> o |= r1 << 8	6124:7:129954:129970	365897	0	True				
ANR	366382	AssignmentExpression	ao -> o |= r1 << 8		365897	0		|=			
ANR	366383	PtrMemberAccess	ao -> o		365897	0					
ANR	366384	Identifier	ao		365897	0					
ANR	366385	Identifier	o		365897	1					
ANR	366386	ShiftExpression	r1 << 8		365897	1		<<			
ANR	366387	Identifier	r1		365897	0					
ANR	366388	PrimaryExpression	8		365897	1					
ANR	366389	IfStatement	if ( ao -> a [ 2 ] )		365897	1					
ANR	366390	Condition	ao -> a [ 2 ]	6125:11:129983:129990	365897	0	True				
ANR	366391	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366392	PtrMemberAccess	ao -> a		365897	0					
ANR	366393	Identifier	ao		365897	0					
ANR	366394	Identifier	a		365897	1					
ANR	366395	PrimaryExpression	2		365897	1					
ANR	366396	CompoundStatement		52:21:1398:1398	365897	1					
ANR	366397	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6126:8:130003:130026	365897	0	True				
ANR	366398	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	366399	Identifier	reg		365897	0					
ANR	366400	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	366401	Callee	getreg		365897	0					
ANR	366402	Identifier	getreg		365897	0					
ANR	366403	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	366404	Argument	ao -> a [ 2 ]		365897	0					
ANR	366405	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366406	PtrMemberAccess	ao -> a		365897	0					
ANR	366407	Identifier	ao		365897	0					
ANR	366408	Identifier	a		365897	1					
ANR	366409	PrimaryExpression	2		365897	1					
ANR	366410	IfStatement	if ( reg != - 1 )		365897	1					
ANR	366411	Condition	reg != - 1	6127:12:130040:130048	365897	0	True				
ANR	366412	EqualityExpression	reg != - 1		365897	0		!=			
ANR	366413	Identifier	reg		365897	0					
ANR	366414	UnaryOperationExpression	- 1		365897	1					
ANR	366415	UnaryOperator	-		365897	0					
ANR	366416	PrimaryExpression	1		365897	1					
ANR	366417	CompoundStatement		54:23:1456:1456	365897	1					
ANR	366418	ExpressionStatement	ao -> o |= reg << 24	6128:9:130062:130080	365897	0	True				
ANR	366419	AssignmentExpression	ao -> o |= reg << 24		365897	0		|=			
ANR	366420	PtrMemberAccess	ao -> o		365897	0					
ANR	366421	Identifier	ao		365897	0					
ANR	366422	Identifier	o		365897	1					
ANR	366423	ShiftExpression	reg << 24		365897	1		<<			
ANR	366424	Identifier	reg		365897	0					
ANR	366425	PrimaryExpression	24		365897	1					
ANR	366426	ElseStatement	else		365897	0					
ANR	366427	CompoundStatement		56:15:1502:1502	365897	0					
ANR	366428	ExpressionStatement	ao -> o |= 1 << 14	6130:9:130108:130124	365897	0	True				
ANR	366429	AssignmentExpression	ao -> o |= 1 << 14		365897	0		|=			
ANR	366430	PtrMemberAccess	ao -> o		365897	0					
ANR	366431	Identifier	ao		365897	0					
ANR	366432	Identifier	o		365897	1					
ANR	366433	ShiftExpression	1 << 14		365897	1		<<			
ANR	366434	PrimaryExpression	1		365897	0					
ANR	366435	PrimaryExpression	14		365897	1					
ANR	366436	ExpressionStatement	ao -> o |= getnum ( ao -> a [ 2 ] ) << 24	6131:9:130135:130167	365897	1	True				
ANR	366437	AssignmentExpression	ao -> o |= getnum ( ao -> a [ 2 ] ) << 24		365897	0		|=			
ANR	366438	PtrMemberAccess	ao -> o		365897	0					
ANR	366439	Identifier	ao		365897	0					
ANR	366440	Identifier	o		365897	1					
ANR	366441	ShiftExpression	getnum ( ao -> a [ 2 ] ) << 24		365897	1		<<			
ANR	366442	CallExpression	getnum ( ao -> a [ 2 ] )		365897	0					
ANR	366443	Callee	getnum		365897	0					
ANR	366444	Identifier	getnum		365897	0					
ANR	366445	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	366446	Argument	ao -> a [ 2 ]		365897	0					
ANR	366447	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366448	PtrMemberAccess	ao -> a		365897	0					
ANR	366449	Identifier	ao		365897	0					
ANR	366450	Identifier	a		365897	1					
ANR	366451	PrimaryExpression	2		365897	1					
ANR	366452	PrimaryExpression	24		365897	1					
ANR	366453	ElseStatement	else		365897	0					
ANR	366454	CompoundStatement		60:14:1598:1598	365897	0					
ANR	366455	ExpressionStatement	ao -> o |= 1 << 14	6134:8:130203:130219	365897	0	True				
ANR	366456	AssignmentExpression	ao -> o |= 1 << 14		365897	0		|=			
ANR	366457	PtrMemberAccess	ao -> o		365897	0					
ANR	366458	Identifier	ao		365897	0					
ANR	366459	Identifier	o		365897	1					
ANR	366460	ShiftExpression	1 << 14		365897	1		<<			
ANR	366461	PrimaryExpression	1		365897	0					
ANR	366462	PrimaryExpression	14		365897	1					
ANR	366463	BreakStatement	break ;	6136:7:130237:130242	365897	2	True				
ANR	366464	IfStatement	if ( rex )		365897	8					
ANR	366465	Condition	rex	6138:10:130262:130264	365897	0	True				
ANR	366466	Identifier	rex		365897	0					
ANR	366467	CompoundStatement		65:15:1672:1672	365897	1					
ANR	366468	ExpressionStatement	ao -> o |= r1 << 24	6139:7:130276:130293	365897	0	True				
ANR	366469	AssignmentExpression	ao -> o |= r1 << 24		365897	0		|=			
ANR	366470	PtrMemberAccess	ao -> o		365897	0					
ANR	366471	Identifier	ao		365897	0					
ANR	366472	Identifier	o		365897	1					
ANR	366473	ShiftExpression	r1 << 24		365897	1		<<			
ANR	366474	Identifier	r1		365897	0					
ANR	366475	PrimaryExpression	24		365897	1					
ANR	366476	ElseStatement	else		365897	0					
ANR	366477	CompoundStatement		67:13:1713:1713	365897	0					
ANR	366478	ExpressionStatement	ao -> o |= r1 << 8	6141:7:130317:130333	365897	0	True				
ANR	366479	AssignmentExpression	ao -> o |= r1 << 8		365897	0		|=			
ANR	366480	PtrMemberAccess	ao -> o		365897	0					
ANR	366481	Identifier	ao		365897	0					
ANR	366482	Identifier	o		365897	1					
ANR	366483	ShiftExpression	r1 << 8		365897	1		<<			
ANR	366484	Identifier	r1		365897	0					
ANR	366485	PrimaryExpression	8		365897	1					
ANR	366486	ElseStatement	else		365897	0					
ANR	366487	CompoundStatement		70:12:1769:1769	365897	0					
ANR	366488	ReturnStatement	return 0 ;	6144:6:130372:130380	365897	0	True				
ANR	366489	PrimaryExpression	0		365897	0					
ANR	366490	ExpressionStatement	ret = getreg ( ao -> a [ 2 ] )	6147:5:130395:130418	365897	7	True				
ANR	366491	AssignmentExpression	ret = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	366492	Identifier	ret		365897	0					
ANR	366493	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	366494	Callee	getreg		365897	0					
ANR	366495	Identifier	getreg		365897	0					
ANR	366496	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	366497	Argument	ao -> a [ 2 ]		365897	0					
ANR	366498	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366499	PtrMemberAccess	ao -> a		365897	0					
ANR	366500	Identifier	ao		365897	0					
ANR	366501	Identifier	a		365897	1					
ANR	366502	PrimaryExpression	2		365897	1					
ANR	366503	IfStatement	if ( ret != - 1 )		365897	8					
ANR	366504	Condition	ret != - 1	6148:9:130429:130437	365897	0	True				
ANR	366505	EqualityExpression	ret != - 1		365897	0		!=			
ANR	366506	Identifier	ret		365897	0					
ANR	366507	UnaryOperationExpression	- 1		365897	1					
ANR	366508	UnaryOperator	-		365897	0					
ANR	366509	PrimaryExpression	1		365897	1					
ANR	366510	CompoundStatement		75:20:1845:1845	365897	1					
ANR	366511	IfStatement	if ( rex )		365897	0					
ANR	366512	Condition	rex	6149:10:130452:130454	365897	0	True				
ANR	366513	Identifier	rex		365897	0					
ANR	366514	CompoundStatement		76:15:1862:1862	365897	1					
ANR	366515	ExpressionStatement	ao -> o |= 1	6150:7:130466:130476	365897	0	True				
ANR	366516	AssignmentExpression	ao -> o |= 1		365897	0		|=			
ANR	366517	PtrMemberAccess	ao -> o		365897	0					
ANR	366518	Identifier	ao		365897	0					
ANR	366519	Identifier	o		365897	1					
ANR	366520	PrimaryExpression	1		365897	1					
ANR	366521	ExpressionStatement	ao -> o |= ( ret & 0x0f ) << 8	6151:7:130485:130511	365897	1	True				
ANR	366522	AssignmentExpression	ao -> o |= ( ret & 0x0f ) << 8		365897	0		|=			
ANR	366523	PtrMemberAccess	ao -> o		365897	0					
ANR	366524	Identifier	ao		365897	0					
ANR	366525	Identifier	o		365897	1					
ANR	366526	ShiftExpression	( ret & 0x0f ) << 8		365897	1		<<			
ANR	366527	BitAndExpression	ret & 0x0f		365897	0		&			
ANR	366528	Identifier	ret		365897	0					
ANR	366529	PrimaryExpression	0x0f		365897	1					
ANR	366530	PrimaryExpression	8		365897	1					
ANR	366531	ElseStatement	else		365897	0					
ANR	366532	CompoundStatement		79:13:1931:1931	365897	0					
ANR	366533	ExpressionStatement	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 6 : 7"	6153:7:130535:130572	365897	0	True				
ANR	366534	AssignmentExpression	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 6 : 7"		365897	0		|=			
ANR	366535	PtrMemberAccess	ao -> o		365897	0					
ANR	366536	Identifier	ao		365897	0					
ANR	366537	Identifier	o		365897	1					
ANR	366538	ConditionalExpression	"( strstr ( str , ""],"" ) ) ? 6 : 7"		365897	1					
ANR	366539	Condition	"strstr ( str , ""],"" )"		365897	0					
ANR	366540	CallExpression	"strstr ( str , ""],"" )"		365897	0					
ANR	366541	Callee	strstr		365897	0					
ANR	366542	Identifier	strstr		365897	0					
ANR	366543	ArgumentList	str		365897	1					
ANR	366544	Argument	str		365897	0					
ANR	366545	Identifier	str		365897	0					
ANR	366546	Argument	"""],"""		365897	1					
ANR	366547	PrimaryExpression	"""],"""		365897	0					
ANR	366548	PrimaryExpression	6		365897	1					
ANR	366549	PrimaryExpression	7		365897	2					
ANR	366550	ExpressionStatement	ao -> o |= ( ret & 0x0f ) << 24	6154:7:130581:130608	365897	1	True				
ANR	366551	AssignmentExpression	ao -> o |= ( ret & 0x0f ) << 24		365897	0		|=			
ANR	366552	PtrMemberAccess	ao -> o		365897	0					
ANR	366553	Identifier	ao		365897	0					
ANR	366554	Identifier	o		365897	1					
ANR	366555	ShiftExpression	( ret & 0x0f ) << 24		365897	1		<<			
ANR	366556	BitAndExpression	ret & 0x0f		365897	0		&			
ANR	366557	Identifier	ret		365897	0					
ANR	366558	PrimaryExpression	0x0f		365897	1					
ANR	366559	PrimaryExpression	24		365897	1					
ANR	366560	IfStatement	if ( ao -> a [ 3 ] )		365897	1					
ANR	366561	Condition	ao -> a [ 3 ]	6156:10:130628:130635	365897	0	True				
ANR	366562	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	366563	PtrMemberAccess	ao -> a		365897	0					
ANR	366564	Identifier	ao		365897	0					
ANR	366565	Identifier	a		365897	1					
ANR	366566	PrimaryExpression	3		365897	1					
ANR	366567	CompoundStatement		83:20:2043:2043	365897	1					
ANR	366568	ExpressionStatement	shift = getshift ( ao -> a [ 3 ] )	6157:7:130647:130674	365897	0	True				
ANR	366569	AssignmentExpression	shift = getshift ( ao -> a [ 3 ] )		365897	0		=			
ANR	366570	Identifier	shift		365897	0					
ANR	366571	CallExpression	getshift ( ao -> a [ 3 ] )		365897	1					
ANR	366572	Callee	getshift		365897	0					
ANR	366573	Identifier	getshift		365897	0					
ANR	366574	ArgumentList	ao -> a [ 3 ]		365897	1					
ANR	366575	Argument	ao -> a [ 3 ]		365897	0					
ANR	366576	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	366577	PtrMemberAccess	ao -> a		365897	0					
ANR	366578	Identifier	ao		365897	0					
ANR	366579	Identifier	a		365897	1					
ANR	366580	PrimaryExpression	3		365897	1					
ANR	366581	ExpressionStatement	low = shift & 0xFF	6158:7:130683:130701	365897	1	True				
ANR	366582	AssignmentExpression	low = shift & 0xFF		365897	0		=			
ANR	366583	Identifier	low		365897	0					
ANR	366584	BitAndExpression	shift & 0xFF		365897	1		&			
ANR	366585	Identifier	shift		365897	0					
ANR	366586	PrimaryExpression	0xFF		365897	1					
ANR	366587	ExpressionStatement	high = shift & 0xFF00	6159:7:130710:130731	365897	2	True				
ANR	366588	AssignmentExpression	high = shift & 0xFF00		365897	0		=			
ANR	366589	Identifier	high		365897	0					
ANR	366590	BitAndExpression	shift & 0xFF00		365897	1		&			
ANR	366591	Identifier	shift		365897	0					
ANR	366592	PrimaryExpression	0xFF00		365897	1					
ANR	366593	ExpressionStatement	ao -> o |= low << 24	6160:7:130740:130758	365897	3	True				
ANR	366594	AssignmentExpression	ao -> o |= low << 24		365897	0		|=			
ANR	366595	PtrMemberAccess	ao -> o		365897	0					
ANR	366596	Identifier	ao		365897	0					
ANR	366597	Identifier	o		365897	1					
ANR	366598	ShiftExpression	low << 24		365897	1		<<			
ANR	366599	Identifier	low		365897	0					
ANR	366600	PrimaryExpression	24		365897	1					
ANR	366601	ExpressionStatement	ao -> o |= high << 8	6161:7:130767:130785	365897	4	True				
ANR	366602	AssignmentExpression	ao -> o |= high << 8		365897	0		|=			
ANR	366603	PtrMemberAccess	ao -> o		365897	0					
ANR	366604	Identifier	ao		365897	0					
ANR	366605	Identifier	o		365897	1					
ANR	366606	ShiftExpression	high << 8		365897	1		<<			
ANR	366607	Identifier	high		365897	0					
ANR	366608	PrimaryExpression	8		365897	1					
ANR	366609	ElseStatement	else		365897	0					
ANR	366610	CompoundStatement		91:6:2220:2255	365897	0					
ANR	366611	IdentifierDeclStatement	int num = getnum ( ao -> a [ 2 ] ) & 0xfff ;	6164:6:130815:130850	365897	0	True				
ANR	366612	IdentifierDecl	num = getnum ( ao -> a [ 2 ] ) & 0xfff		365897	0					
ANR	366613	IdentifierDeclType	int		365897	0					
ANR	366614	Identifier	num		365897	1					
ANR	366615	AssignmentExpression	num = getnum ( ao -> a [ 2 ] ) & 0xfff		365897	2		=			
ANR	366616	Identifier	num		365897	0					
ANR	366617	BitAndExpression	getnum ( ao -> a [ 2 ] ) & 0xfff		365897	1		&			
ANR	366618	CallExpression	getnum ( ao -> a [ 2 ] )		365897	0					
ANR	366619	Callee	getnum		365897	0					
ANR	366620	Identifier	getnum		365897	0					
ANR	366621	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	366622	Argument	ao -> a [ 2 ]		365897	0					
ANR	366623	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	366624	PtrMemberAccess	ao -> a		365897	0					
ANR	366625	Identifier	ao		365897	0					
ANR	366626	Identifier	a		365897	1					
ANR	366627	PrimaryExpression	2		365897	1					
ANR	366628	PrimaryExpression	0xfff		365897	1					
ANR	366629	IfStatement	if ( err )		365897	1					
ANR	366630	Condition	err	6165:10:130862:130864	365897	0	True				
ANR	366631	Identifier	err		365897	0					
ANR	366632	CompoundStatement		92:15:2272:2272	365897	1					
ANR	366633	BreakStatement	break ;	6166:7:130876:130881	365897	0	True				
ANR	366634	IfStatement	if ( rex )		365897	2					
ANR	366635	Condition	rex	6168:10:130901:130903	365897	0	True				
ANR	366636	Identifier	rex		365897	0					
ANR	366637	CompoundStatement		95:15:2311:2311	365897	1					
ANR	366638	ExpressionStatement	ao -> o |= 1	6169:7:130915:130925	365897	0	True				
ANR	366639	AssignmentExpression	ao -> o |= 1		365897	0		|=			
ANR	366640	PtrMemberAccess	ao -> o		365897	0					
ANR	366641	Identifier	ao		365897	0					
ANR	366642	Identifier	o		365897	1					
ANR	366643	PrimaryExpression	1		365897	1					
ANR	366644	ElseStatement	else		365897	0					
ANR	366645	CompoundStatement		97:13:2345:2345	365897	0					
ANR	366646	ExpressionStatement	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 4 : 5"	6171:7:130949:130986	365897	0	True				
ANR	366647	AssignmentExpression	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 4 : 5"		365897	0		|=			
ANR	366648	PtrMemberAccess	ao -> o		365897	0					
ANR	366649	Identifier	ao		365897	0					
ANR	366650	Identifier	o		365897	1					
ANR	366651	ConditionalExpression	"( strstr ( str , ""],"" ) ) ? 4 : 5"		365897	1					
ANR	366652	Condition	"strstr ( str , ""],"" )"		365897	0					
ANR	366653	CallExpression	"strstr ( str , ""],"" )"		365897	0					
ANR	366654	Callee	strstr		365897	0					
ANR	366655	Identifier	strstr		365897	0					
ANR	366656	ArgumentList	str		365897	1					
ANR	366657	Argument	str		365897	0					
ANR	366658	Identifier	str		365897	0					
ANR	366659	Argument	"""],"""		365897	1					
ANR	366660	PrimaryExpression	"""],"""		365897	0					
ANR	366661	PrimaryExpression	4		365897	1					
ANR	366662	PrimaryExpression	5		365897	2					
ANR	366663	ExpressionStatement	ao -> o |= 1	6173:6:131002:131012	365897	3	True				
ANR	366664	AssignmentExpression	ao -> o |= 1		365897	0		|=			
ANR	366665	PtrMemberAccess	ao -> o		365897	0					
ANR	366666	Identifier	ao		365897	0					
ANR	366667	Identifier	o		365897	1					
ANR	366668	PrimaryExpression	1		365897	1					
ANR	366669	ExpressionStatement	ao -> o |= ( num & 0xff ) << 24	6174:6:131020:131047	365897	4	True				
ANR	366670	AssignmentExpression	ao -> o |= ( num & 0xff ) << 24		365897	0		|=			
ANR	366671	PtrMemberAccess	ao -> o		365897	0					
ANR	366672	Identifier	ao		365897	0					
ANR	366673	Identifier	o		365897	1					
ANR	366674	ShiftExpression	( num & 0xff ) << 24		365897	1		<<			
ANR	366675	BitAndExpression	num & 0xff		365897	0		&			
ANR	366676	Identifier	num		365897	0					
ANR	366677	PrimaryExpression	0xff		365897	1					
ANR	366678	PrimaryExpression	24		365897	1					
ANR	366679	ExpressionStatement	ao -> o |= ( ( num >> 8 ) & 0xf ) << 16	6175:6:131055:131088	365897	5	True				
ANR	366680	AssignmentExpression	ao -> o |= ( ( num >> 8 ) & 0xf ) << 16		365897	0		|=			
ANR	366681	PtrMemberAccess	ao -> o		365897	0					
ANR	366682	Identifier	ao		365897	0					
ANR	366683	Identifier	o		365897	1					
ANR	366684	ShiftExpression	( ( num >> 8 ) & 0xf ) << 16		365897	1		<<			
ANR	366685	BitAndExpression	( num >> 8 ) & 0xf		365897	0		&			
ANR	366686	ShiftExpression	num >> 8		365897	0		>>			
ANR	366687	Identifier	num		365897	0					
ANR	366688	PrimaryExpression	8		365897	1					
ANR	366689	PrimaryExpression	0xf		365897	1					
ANR	366690	PrimaryExpression	16		365897	1					
ANR	366691	BreakStatement	break ;	6178:5:131103:131108	365897	9	True				
ANR	366692	Label	case TYPE_IMM :	6179:4:131114:131127	365897	10	True				
ANR	366693	Identifier	TYPE_IMM		365897	0					
ANR	366694	IfStatement	if ( * ao -> a [ 0 ] ++ == '{' )		365897	11					
ANR	366695	Condition	* ao -> a [ 0 ] ++ == '{'	6180:9:131138:131155	365897	0	True				
ANR	366696	EqualityExpression	* ao -> a [ 0 ] ++ == '{'		365897	0		==			
ANR	366697	UnaryOperationExpression	* ao -> a [ 0 ] ++		365897	0					
ANR	366698	UnaryOperator	*		365897	0					
ANR	366699	PostIncDecOperationExpression	ao -> a [ 0 ] ++		365897	1					
ANR	366700	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366701	PtrMemberAccess	ao -> a		365897	0					
ANR	366702	Identifier	ao		365897	0					
ANR	366703	Identifier	a		365897	1					
ANR	366704	PrimaryExpression	0		365897	1					
ANR	366705	IncDec	++		365897	1					
ANR	366706	PrimaryExpression	'{'		365897	1					
ANR	366707	CompoundStatement		107:29:2563:2563	365897	1					
ANR	366708	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		365897	0					
ANR	366709	ForInit	j = 0 ;	6181:11:131171:131176	365897	0	True				
ANR	366710	AssignmentExpression	j = 0		365897	0		=			
ANR	366711	Identifier	j		365897	0					
ANR	366712	PrimaryExpression	0		365897	1					
ANR	366713	Condition	j < 16	6181:18:131178:131183	365897	1	True				
ANR	366714	RelationalExpression	j < 16		365897	0		<			
ANR	366715	Identifier	j		365897	0					
ANR	366716	PrimaryExpression	16		365897	1					
ANR	366717	PostIncDecOperationExpression	j ++	6181:26:131186:131188	365897	2	True				
ANR	366718	Identifier	j		365897	0					
ANR	366719	IncDec	++		365897	1					
ANR	366720	CompoundStatement		108:31:2596:2596	365897	3					
ANR	366721	IfStatement	if ( ao -> a [ j ] && * ao -> a [ j ] )		365897	0					
ANR	366722	Condition	ao -> a [ j ] && * ao -> a [ j ]	6182:11:131204:131224	365897	0	True				
ANR	366723	AndExpression	ao -> a [ j ] && * ao -> a [ j ]		365897	0		&&			
ANR	366724	ArrayIndexing	ao -> a [ j ]		365897	0					
ANR	366725	PtrMemberAccess	ao -> a		365897	0					
ANR	366726	Identifier	ao		365897	0					
ANR	366727	Identifier	a		365897	1					
ANR	366728	Identifier	j		365897	1					
ANR	366729	UnaryOperationExpression	* ao -> a [ j ]		365897	1					
ANR	366730	UnaryOperator	*		365897	0					
ANR	366731	ArrayIndexing	ao -> a [ j ]		365897	1					
ANR	366732	PtrMemberAccess	ao -> a		365897	0					
ANR	366733	Identifier	ao		365897	0					
ANR	366734	Identifier	a		365897	1					
ANR	366735	Identifier	j		365897	1					
ANR	366736	CompoundStatement		109:34:2632:2632	365897	1					
ANR	366737	ExpressionStatement	getrange ( ao -> a [ j ] )	6183:8:131237:131256	365897	0	True				
ANR	366738	CallExpression	getrange ( ao -> a [ j ] )		365897	0					
ANR	366739	Callee	getrange		365897	0					
ANR	366740	Identifier	getrange		365897	0					
ANR	366741	ArgumentList	ao -> a [ j ]		365897	1					
ANR	366742	Argument	ao -> a [ j ]		365897	0					
ANR	366743	ArrayIndexing	ao -> a [ j ]		365897	0					
ANR	366744	PtrMemberAccess	ao -> a		365897	0					
ANR	366745	Identifier	ao		365897	0					
ANR	366746	Identifier	a		365897	1					
ANR	366747	Identifier	j		365897	1					
ANR	366748	ExpressionStatement	reg = getreg ( ao -> a [ j ] )	6184:8:131295:131318	365897	1	True				
ANR	366749	AssignmentExpression	reg = getreg ( ao -> a [ j ] )		365897	0		=			
ANR	366750	Identifier	reg		365897	0					
ANR	366751	CallExpression	getreg ( ao -> a [ j ] )		365897	1					
ANR	366752	Callee	getreg		365897	0					
ANR	366753	Identifier	getreg		365897	0					
ANR	366754	ArgumentList	ao -> a [ j ]		365897	1					
ANR	366755	Argument	ao -> a [ j ]		365897	0					
ANR	366756	ArrayIndexing	ao -> a [ j ]		365897	0					
ANR	366757	PtrMemberAccess	ao -> a		365897	0					
ANR	366758	Identifier	ao		365897	0					
ANR	366759	Identifier	a		365897	1					
ANR	366760	Identifier	j		365897	1					
ANR	366761	IfStatement	if ( reg != - 1 )		365897	2					
ANR	366762	Condition	reg != - 1	6185:12:131332:131340	365897	0	True				
ANR	366763	EqualityExpression	reg != - 1		365897	0		!=			
ANR	366764	Identifier	reg		365897	0					
ANR	366765	UnaryOperationExpression	- 1		365897	1					
ANR	366766	UnaryOperator	-		365897	0					
ANR	366767	PrimaryExpression	1		365897	1					
ANR	366768	CompoundStatement		112:23:2748:2748	365897	1					
ANR	366769	IfStatement	if ( reg < 8 )		365897	0					
ANR	366770	Condition	reg < 8	6186:13:131358:131364	365897	0	True				
ANR	366771	RelationalExpression	reg < 8		365897	0		<			
ANR	366772	Identifier	reg		365897	0					
ANR	366773	PrimaryExpression	8		365897	1					
ANR	366774	CompoundStatement		113:22:2772:2772	365897	1					
ANR	366775	ExpressionStatement	ao -> o |= 1 << ( 24 + reg )	6187:10:131379:131403	365897	0	True				
ANR	366776	AssignmentExpression	ao -> o |= 1 << ( 24 + reg )		365897	0		|=			
ANR	366777	PtrMemberAccess	ao -> o		365897	0					
ANR	366778	Identifier	ao		365897	0					
ANR	366779	Identifier	o		365897	1					
ANR	366780	ShiftExpression	1 << ( 24 + reg )		365897	1		<<			
ANR	366781	PrimaryExpression	1		365897	0					
ANR	366782	AdditiveExpression	24 + reg		365897	1		+			
ANR	366783	PrimaryExpression	24		365897	0					
ANR	366784	Identifier	reg		365897	1					
ANR	366785	ElseStatement	else		365897	0					
ANR	366786	CompoundStatement		115:16:2826:2826	365897	0					
ANR	366787	ExpressionStatement	ao -> o |= 1 << ( 8 + reg )	6189:10:131433:131456	365897	0	True				
ANR	366788	AssignmentExpression	ao -> o |= 1 << ( 8 + reg )		365897	0		|=			
ANR	366789	PtrMemberAccess	ao -> o		365897	0					
ANR	366790	Identifier	ao		365897	0					
ANR	366791	Identifier	o		365897	1					
ANR	366792	ShiftExpression	1 << ( 8 + reg )		365897	1		<<			
ANR	366793	PrimaryExpression	1		365897	0					
ANR	366794	AdditiveExpression	8 + reg		365897	1		+			
ANR	366795	PrimaryExpression	8		365897	0					
ANR	366796	Identifier	reg		365897	1					
ANR	366797	ElseStatement	else		365897	0					
ANR	366798	CompoundStatement		121:12:2913:2913	365897	0					
ANR	366799	ExpressionStatement	ao -> o |= getnum ( ao -> a [ 0 ] ) << 24	6195:6:131516:131548	365897	0	True				
ANR	366800	AssignmentExpression	ao -> o |= getnum ( ao -> a [ 0 ] ) << 24		365897	0		|=			
ANR	366801	PtrMemberAccess	ao -> o		365897	0					
ANR	366802	Identifier	ao		365897	0					
ANR	366803	Identifier	o		365897	1					
ANR	366804	ShiftExpression	getnum ( ao -> a [ 0 ] ) << 24		365897	1		<<			
ANR	366805	CallExpression	getnum ( ao -> a [ 0 ] )		365897	0					
ANR	366806	Callee	getnum		365897	0					
ANR	366807	Identifier	getnum		365897	0					
ANR	366808	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366809	Argument	ao -> a [ 0 ]		365897	0					
ANR	366810	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366811	PtrMemberAccess	ao -> a		365897	0					
ANR	366812	Identifier	ao		365897	0					
ANR	366813	Identifier	a		365897	1					
ANR	366814	PrimaryExpression	0		365897	1					
ANR	366815	PrimaryExpression	24		365897	1					
ANR	366816	BreakStatement	break ;	6197:5:131569:131574	365897	12	True				
ANR	366817	Label	case TYPE_BRA :	6198:4:131580:131593	365897	13	True				
ANR	366818	Identifier	TYPE_BRA		365897	0					
ANR	366819	IfStatement	if ( ( ret = getreg ( ao -> a [ 0 ] ) ) == - 1 )		365897	14					
ANR	366820	Condition	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1	6199:9:131604:131634	365897	0	True				
ANR	366821	EqualityExpression	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1		365897	0		==			
ANR	366822	AssignmentExpression	ret = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	366823	Identifier	ret		365897	0					
ANR	366824	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	366825	Callee	getreg		365897	0					
ANR	366826	Identifier	getreg		365897	0					
ANR	366827	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366828	Argument	ao -> a [ 0 ]		365897	0					
ANR	366829	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366830	PtrMemberAccess	ao -> a		365897	0					
ANR	366831	Identifier	ao		365897	0					
ANR	366832	Identifier	a		365897	1					
ANR	366833	PrimaryExpression	0		365897	1					
ANR	366834	UnaryOperationExpression	- 1		365897	1					
ANR	366835	UnaryOperator	-		365897	0					
ANR	366836	PrimaryExpression	1		365897	1					
ANR	366837	CompoundStatement		126:42:3042:3042	365897	1					
ANR	366838	ExpressionStatement	ret = ( getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8 ) / 4	6201:6:131691:131739	365897	0	True				
ANR	366839	AssignmentExpression	ret = ( getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8 ) / 4		365897	0		=			
ANR	366840	Identifier	ret		365897	0					
ANR	366841	MultiplicativeExpression	( getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8 ) / 4		365897	1		/			
ANR	366842	AdditiveExpression	getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8		365897	0		-			
ANR	366843	CallExpression	getnum ( ao -> a [ 0 ] )		365897	0					
ANR	366844	Callee	getnum		365897	0					
ANR	366845	Identifier	getnum		365897	0					
ANR	366846	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366847	Argument	ao -> a [ 0 ]		365897	0					
ANR	366848	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366849	PtrMemberAccess	ao -> a		365897	0					
ANR	366850	Identifier	ao		365897	0					
ANR	366851	Identifier	a		365897	1					
ANR	366852	PrimaryExpression	0		365897	1					
ANR	366853	AdditiveExpression	( int ) ao -> off - 8		365897	1		-			
ANR	366854	CastExpression	( int ) ao -> off		365897	0					
ANR	366855	CastTarget	int		365897	0					
ANR	366856	PtrMemberAccess	ao -> off		365897	1					
ANR	366857	Identifier	ao		365897	0					
ANR	366858	Identifier	off		365897	1					
ANR	366859	PrimaryExpression	8		365897	1					
ANR	366860	PrimaryExpression	4		365897	1					
ANR	366861	IfStatement	if ( ret >= 0x00800000 || ret < ( int ) 0xff800000 )		365897	1					
ANR	366862	Condition	ret >= 0x00800000 || ret < ( int ) 0xff800000	6202:10:131751:131792	365897	0	True				
ANR	366863	OrExpression	ret >= 0x00800000 || ret < ( int ) 0xff800000		365897	0		||			
ANR	366864	RelationalExpression	ret >= 0x00800000		365897	0		>=			
ANR	366865	Identifier	ret		365897	0					
ANR	366866	PrimaryExpression	0x00800000		365897	1					
ANR	366867	RelationalExpression	ret < ( int ) 0xff800000		365897	1		<			
ANR	366868	Identifier	ret		365897	0					
ANR	366869	CastExpression	( int ) 0xff800000		365897	1					
ANR	366870	CastTarget	int		365897	0					
ANR	366871	PrimaryExpression	0xff800000		365897	1					
ANR	366872	CompoundStatement		129:54:3200:3200	365897	1					
ANR	366873	ExpressionStatement	"eprintf ( ""Branch into out of range\\n"" )"	6203:7:131804:131842	365897	0	True				
ANR	366874	CallExpression	"eprintf ( ""Branch into out of range\\n"" )"		365897	0					
ANR	366875	Callee	eprintf		365897	0					
ANR	366876	Identifier	eprintf		365897	0					
ANR	366877	ArgumentList	"""Branch into out of range\\n"""		365897	1					
ANR	366878	Argument	"""Branch into out of range\\n"""		365897	0					
ANR	366879	PrimaryExpression	"""Branch into out of range\\n"""		365897	0					
ANR	366880	ReturnStatement	return 0 ;	6204:7:131851:131859	365897	1	True				
ANR	366881	PrimaryExpression	0		365897	0					
ANR	366882	ExpressionStatement	ao -> o |= ( ( ret >> 16 ) & 0xff ) << 8	6206:6:131875:131909	365897	2	True				
ANR	366883	AssignmentExpression	ao -> o |= ( ( ret >> 16 ) & 0xff ) << 8		365897	0		|=			
ANR	366884	PtrMemberAccess	ao -> o		365897	0					
ANR	366885	Identifier	ao		365897	0					
ANR	366886	Identifier	o		365897	1					
ANR	366887	ShiftExpression	( ( ret >> 16 ) & 0xff ) << 8		365897	1		<<			
ANR	366888	BitAndExpression	( ret >> 16 ) & 0xff		365897	0		&			
ANR	366889	ShiftExpression	ret >> 16		365897	0		>>			
ANR	366890	Identifier	ret		365897	0					
ANR	366891	PrimaryExpression	16		365897	1					
ANR	366892	PrimaryExpression	0xff		365897	1					
ANR	366893	PrimaryExpression	8		365897	1					
ANR	366894	ExpressionStatement	ao -> o |= ( ( ret >> 8 ) & 0xff ) << 16	6207:6:131917:131951	365897	3	True				
ANR	366895	AssignmentExpression	ao -> o |= ( ( ret >> 8 ) & 0xff ) << 16		365897	0		|=			
ANR	366896	PtrMemberAccess	ao -> o		365897	0					
ANR	366897	Identifier	ao		365897	0					
ANR	366898	Identifier	o		365897	1					
ANR	366899	ShiftExpression	( ( ret >> 8 ) & 0xff ) << 16		365897	1		<<			
ANR	366900	BitAndExpression	( ret >> 8 ) & 0xff		365897	0		&			
ANR	366901	ShiftExpression	ret >> 8		365897	0		>>			
ANR	366902	Identifier	ret		365897	0					
ANR	366903	PrimaryExpression	8		365897	1					
ANR	366904	PrimaryExpression	0xff		365897	1					
ANR	366905	PrimaryExpression	16		365897	1					
ANR	366906	ExpressionStatement	ao -> o |= ( ( ret ) & 0xff ) << 24	6208:6:131959:131986	365897	4	True				
ANR	366907	AssignmentExpression	ao -> o |= ( ( ret ) & 0xff ) << 24		365897	0		|=			
ANR	366908	PtrMemberAccess	ao -> o		365897	0					
ANR	366909	Identifier	ao		365897	0					
ANR	366910	Identifier	o		365897	1					
ANR	366911	ShiftExpression	( ( ret ) & 0xff ) << 24		365897	1		<<			
ANR	366912	CastExpression	( ret ) & 0xff		365897	0					
ANR	366913	CastTarget	ret		365897	0					
ANR	366914	UnaryOperationExpression	& 0xff		365897	1					
ANR	366915	UnaryOperator	&		365897	0					
ANR	366916	PrimaryExpression	0xff		365897	1					
ANR	366917	PrimaryExpression	24		365897	1					
ANR	366918	ElseStatement	else		365897	0					
ANR	366919	CompoundStatement		136:12:3405:3405	365897	0					
ANR	366920	ExpressionStatement	"eprintf ( ""This branch does not accept reg as arg\\n"" )"	6210:6:132008:132060	365897	0	True				
ANR	366921	CallExpression	"eprintf ( ""This branch does not accept reg as arg\\n"" )"		365897	0					
ANR	366922	Callee	eprintf		365897	0					
ANR	366923	Identifier	eprintf		365897	0					
ANR	366924	ArgumentList	"""This branch does not accept reg as arg\\n"""		365897	1					
ANR	366925	Argument	"""This branch does not accept reg as arg\\n"""		365897	0					
ANR	366926	PrimaryExpression	"""This branch does not accept reg as arg\\n"""		365897	0					
ANR	366927	ReturnStatement	return 0 ;	6211:6:132068:132076	365897	1	True				
ANR	366928	PrimaryExpression	0		365897	0					
ANR	366929	BreakStatement	break ;	6213:5:132090:132095	365897	15	True				
ANR	366930	Label	case TYPE_BKP :	6214:4:132101:132114	365897	16	True				
ANR	366931	Identifier	TYPE_BKP		365897	0					
ANR	366932	ExpressionStatement	ao -> o |= 0x70 << 24	6215:5:132121:132140	365897	17	True				
ANR	366933	AssignmentExpression	ao -> o |= 0x70 << 24		365897	0		|=			
ANR	366934	PtrMemberAccess	ao -> o		365897	0					
ANR	366935	Identifier	ao		365897	0					
ANR	366936	Identifier	o		365897	1					
ANR	366937	ShiftExpression	0x70 << 24		365897	1		<<			
ANR	366938	PrimaryExpression	0x70		365897	0					
ANR	366939	PrimaryExpression	24		365897	1					
ANR	366940	IfStatement	if ( ao -> a [ 0 ] )		365897	18					
ANR	366941	Condition	ao -> a [ 0 ]	6216:9:132151:132158	365897	0	True				
ANR	366942	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366943	PtrMemberAccess	ao -> a		365897	0					
ANR	366944	Identifier	ao		365897	0					
ANR	366945	Identifier	a		365897	1					
ANR	366946	PrimaryExpression	0		365897	1					
ANR	366947	CompoundStatement		144:6:3574:3599	365897	1					
ANR	366948	IdentifierDeclStatement	int n = getnum ( ao -> a [ 0 ] ) ;	6217:6:132169:132194	365897	0	True				
ANR	366949	IdentifierDecl	n = getnum ( ao -> a [ 0 ] )		365897	0					
ANR	366950	IdentifierDeclType	int		365897	0					
ANR	366951	Identifier	n		365897	1					
ANR	366952	AssignmentExpression	n = getnum ( ao -> a [ 0 ] )		365897	2		=			
ANR	366953	Identifier	n		365897	0					
ANR	366954	CallExpression	getnum ( ao -> a [ 0 ] )		365897	1					
ANR	366955	Callee	getnum		365897	0					
ANR	366956	Identifier	getnum		365897	0					
ANR	366957	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366958	Argument	ao -> a [ 0 ]		365897	0					
ANR	366959	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	366960	PtrMemberAccess	ao -> a		365897	0					
ANR	366961	Identifier	ao		365897	0					
ANR	366962	Identifier	a		365897	1					
ANR	366963	PrimaryExpression	0		365897	1					
ANR	366964	ExpressionStatement	ao -> o |= ( ( n & 0xf ) << 24 )	6218:6:132202:132228	365897	1	True				
ANR	366965	AssignmentExpression	ao -> o |= ( ( n & 0xf ) << 24 )		365897	0		|=			
ANR	366966	PtrMemberAccess	ao -> o		365897	0					
ANR	366967	Identifier	ao		365897	0					
ANR	366968	Identifier	o		365897	1					
ANR	366969	ShiftExpression	( n & 0xf ) << 24		365897	1		<<			
ANR	366970	BitAndExpression	n & 0xf		365897	0		&			
ANR	366971	Identifier	n		365897	0					
ANR	366972	PrimaryExpression	0xf		365897	1					
ANR	366973	PrimaryExpression	24		365897	1					
ANR	366974	ExpressionStatement	ao -> o |= ( ( ( n >> 4 ) & 0xff ) << 16 )	6219:6:132236:132270	365897	2	True				
ANR	366975	AssignmentExpression	ao -> o |= ( ( ( n >> 4 ) & 0xff ) << 16 )		365897	0		|=			
ANR	366976	PtrMemberAccess	ao -> o		365897	0					
ANR	366977	Identifier	ao		365897	0					
ANR	366978	Identifier	o		365897	1					
ANR	366979	ShiftExpression	( ( n >> 4 ) & 0xff ) << 16		365897	1		<<			
ANR	366980	BitAndExpression	( n >> 4 ) & 0xff		365897	0		&			
ANR	366981	ShiftExpression	n >> 4		365897	0		>>			
ANR	366982	Identifier	n		365897	0					
ANR	366983	PrimaryExpression	4		365897	1					
ANR	366984	PrimaryExpression	0xff		365897	1					
ANR	366985	PrimaryExpression	16		365897	1					
ANR	366986	BreakStatement	break ;	6221:5:132284:132289	365897	19	True				
ANR	366987	Label	case TYPE_BRR :	6222:4:132295:132308	365897	20	True				
ANR	366988	Identifier	TYPE_BRR		365897	0					
ANR	366989	IfStatement	if ( ( ret = getreg ( ao -> a [ 0 ] ) ) == - 1 )		365897	21					
ANR	366990	Condition	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1	6223:9:132319:132349	365897	0	True				
ANR	366991	EqualityExpression	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1		365897	0		==			
ANR	366992	AssignmentExpression	ret = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	366993	Identifier	ret		365897	0					
ANR	366994	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	366995	Callee	getreg		365897	0					
ANR	366996	Identifier	getreg		365897	0					
ANR	366997	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	366998	Argument	ao -> a [ 0 ]		365897	0					
ANR	366999	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367000	PtrMemberAccess	ao -> a		365897	0					
ANR	367001	Identifier	ao		365897	0					
ANR	367002	Identifier	a		365897	1					
ANR	367003	PrimaryExpression	0		365897	1					
ANR	367004	UnaryOperationExpression	- 1		365897	1					
ANR	367005	UnaryOperator	-		365897	0					
ANR	367006	PrimaryExpression	1		365897	1					
ANR	367007	CompoundStatement		151:6:3765:3793	365897	1					
ANR	367008	IdentifierDeclStatement	ut32 dst = getnum ( ao -> a [ 0 ] ) ;	6224:6:132360:132388	365897	0	True				
ANR	367009	IdentifierDecl	dst = getnum ( ao -> a [ 0 ] )		365897	0					
ANR	367010	IdentifierDeclType	ut32		365897	0					
ANR	367011	Identifier	dst		365897	1					
ANR	367012	AssignmentExpression	dst = getnum ( ao -> a [ 0 ] )		365897	2		=			
ANR	367013	Identifier	dst		365897	0					
ANR	367014	CallExpression	getnum ( ao -> a [ 0 ] )		365897	1					
ANR	367015	Callee	getnum		365897	0					
ANR	367016	Identifier	getnum		365897	0					
ANR	367017	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367018	Argument	ao -> a [ 0 ]		365897	0					
ANR	367019	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367020	PtrMemberAccess	ao -> a		365897	0					
ANR	367021	Identifier	ao		365897	0					
ANR	367022	Identifier	a		365897	1					
ANR	367023	PrimaryExpression	0		365897	1					
ANR	367024	ExpressionStatement	dst -= ( ao -> off + 8 )	6225:6:132396:132416	365897	1	True				
ANR	367025	AssignmentExpression	dst -= ( ao -> off + 8 )		365897	0		-=			
ANR	367026	Identifier	dst		365897	0					
ANR	367027	AdditiveExpression	ao -> off + 8		365897	1		+			
ANR	367028	PtrMemberAccess	ao -> off		365897	0					
ANR	367029	Identifier	ao		365897	0					
ANR	367030	Identifier	off		365897	1					
ANR	367031	PrimaryExpression	8		365897	1					
ANR	367032	IfStatement	if ( dst & 0x2 )		365897	2					
ANR	367033	Condition	dst & 0x2	6226:10:132428:132436	365897	0	True				
ANR	367034	BitAndExpression	dst & 0x2		365897	0		&			
ANR	367035	Identifier	dst		365897	0					
ANR	367036	PrimaryExpression	0x2		365897	1					
ANR	367037	CompoundStatement		153:21:3844:3844	365897	1					
ANR	367038	ExpressionStatement	ao -> o = 0xfb	6227:7:132448:132460	365897	0	True				
ANR	367039	AssignmentExpression	ao -> o = 0xfb		365897	0		=			
ANR	367040	PtrMemberAccess	ao -> o		365897	0					
ANR	367041	Identifier	ao		365897	0					
ANR	367042	Identifier	o		365897	1					
ANR	367043	PrimaryExpression	0xfb		365897	1					
ANR	367044	ElseStatement	else		365897	0					
ANR	367045	CompoundStatement		155:13:3880:3880	365897	0					
ANR	367046	ExpressionStatement	ao -> o = 0xfa	6229:7:132484:132496	365897	0	True				
ANR	367047	AssignmentExpression	ao -> o = 0xfa		365897	0		=			
ANR	367048	PtrMemberAccess	ao -> o		365897	0					
ANR	367049	Identifier	ao		365897	0					
ANR	367050	Identifier	o		365897	1					
ANR	367051	PrimaryExpression	0xfa		365897	1					
ANR	367052	ExpressionStatement	dst /= 4	6231:6:132512:132520	365897	3	True				
ANR	367053	AssignmentExpression	dst /= 4		365897	0		/=			
ANR	367054	Identifier	dst		365897	0					
ANR	367055	PrimaryExpression	4		365897	1					
ANR	367056	ExpressionStatement	ao -> o |= ( ( dst >> 16 ) & 0xff ) << 8	6232:6:132528:132562	365897	4	True				
ANR	367057	AssignmentExpression	ao -> o |= ( ( dst >> 16 ) & 0xff ) << 8		365897	0		|=			
ANR	367058	PtrMemberAccess	ao -> o		365897	0					
ANR	367059	Identifier	ao		365897	0					
ANR	367060	Identifier	o		365897	1					
ANR	367061	ShiftExpression	( ( dst >> 16 ) & 0xff ) << 8		365897	1		<<			
ANR	367062	BitAndExpression	( dst >> 16 ) & 0xff		365897	0		&			
ANR	367063	ShiftExpression	dst >> 16		365897	0		>>			
ANR	367064	Identifier	dst		365897	0					
ANR	367065	PrimaryExpression	16		365897	1					
ANR	367066	PrimaryExpression	0xff		365897	1					
ANR	367067	PrimaryExpression	8		365897	1					
ANR	367068	ExpressionStatement	ao -> o |= ( ( dst >> 8 ) & 0xff ) << 16	6233:6:132570:132604	365897	5	True				
ANR	367069	AssignmentExpression	ao -> o |= ( ( dst >> 8 ) & 0xff ) << 16		365897	0		|=			
ANR	367070	PtrMemberAccess	ao -> o		365897	0					
ANR	367071	Identifier	ao		365897	0					
ANR	367072	Identifier	o		365897	1					
ANR	367073	ShiftExpression	( ( dst >> 8 ) & 0xff ) << 16		365897	1		<<			
ANR	367074	BitAndExpression	( dst >> 8 ) & 0xff		365897	0		&			
ANR	367075	ShiftExpression	dst >> 8		365897	0		>>			
ANR	367076	Identifier	dst		365897	0					
ANR	367077	PrimaryExpression	8		365897	1					
ANR	367078	PrimaryExpression	0xff		365897	1					
ANR	367079	PrimaryExpression	16		365897	1					
ANR	367080	ExpressionStatement	ao -> o |= ( ( dst ) & 0xff ) << 24	6234:6:132612:132639	365897	6	True				
ANR	367081	AssignmentExpression	ao -> o |= ( ( dst ) & 0xff ) << 24		365897	0		|=			
ANR	367082	PtrMemberAccess	ao -> o		365897	0					
ANR	367083	Identifier	ao		365897	0					
ANR	367084	Identifier	o		365897	1					
ANR	367085	ShiftExpression	( ( dst ) & 0xff ) << 24		365897	1		<<			
ANR	367086	CastExpression	( dst ) & 0xff		365897	0					
ANR	367087	CastTarget	dst		365897	0					
ANR	367088	UnaryOperationExpression	& 0xff		365897	1					
ANR	367089	UnaryOperator	&		365897	0					
ANR	367090	PrimaryExpression	0xff		365897	1					
ANR	367091	PrimaryExpression	24		365897	1					
ANR	367092	ReturnStatement	return 4 ;	6235:6:132647:132655	365897	7	True				
ANR	367093	PrimaryExpression	4		365897	0					
ANR	367094	ElseStatement	else		365897	0					
ANR	367095	CompoundStatement		163:12:4074:4074	365897	0					
ANR	367096	ExpressionStatement	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 24 )	6237:6:132677:132711	365897	0	True				
ANR	367097	AssignmentExpression	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 24 )		365897	0		|=			
ANR	367098	PtrMemberAccess	ao -> o		365897	0					
ANR	367099	Identifier	ao		365897	0					
ANR	367100	Identifier	o		365897	1					
ANR	367101	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 24		365897	1		<<			
ANR	367102	CallExpression	getreg ( ao -> a [ 0 ] )		365897	0					
ANR	367103	Callee	getreg		365897	0					
ANR	367104	Identifier	getreg		365897	0					
ANR	367105	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367106	Argument	ao -> a [ 0 ]		365897	0					
ANR	367107	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367108	PtrMemberAccess	ao -> a		365897	0					
ANR	367109	Identifier	ao		365897	0					
ANR	367110	Identifier	a		365897	1					
ANR	367111	PrimaryExpression	0		365897	1					
ANR	367112	PrimaryExpression	24		365897	1					
ANR	367113	BreakStatement	break ;	6239:5:132725:132730	365897	22	True				
ANR	367114	Label	case TYPE_HLT :	6240:4:132736:132749	365897	23	True				
ANR	367115	Identifier	TYPE_HLT		365897	0					
ANR	367116	CompoundStatement		168:5:4163:4196	365897	24					
ANR	367117	IdentifierDeclStatement	"ut32 o = 0 , n = getnum ( ao -> a [ 0 ] ) ;"	6241:5:132758:132791	365897	0	True				
ANR	367118	IdentifierDecl	o = 0		365897	0					
ANR	367119	IdentifierDeclType	ut32		365897	0					
ANR	367120	Identifier	o		365897	1					
ANR	367121	AssignmentExpression	o = 0		365897	2		=			
ANR	367122	Identifier	o		365897	0					
ANR	367123	PrimaryExpression	0		365897	1					
ANR	367124	IdentifierDecl	n = getnum ( ao -> a [ 0 ] )		365897	1					
ANR	367125	IdentifierDeclType	ut32		365897	0					
ANR	367126	Identifier	n		365897	1					
ANR	367127	AssignmentExpression	n = getnum ( ao -> a [ 0 ] )		365897	2		=			
ANR	367128	Identifier	n		365897	0					
ANR	367129	CallExpression	getnum ( ao -> a [ 0 ] )		365897	1					
ANR	367130	Callee	getnum		365897	0					
ANR	367131	Identifier	getnum		365897	0					
ANR	367132	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367133	Argument	ao -> a [ 0 ]		365897	0					
ANR	367134	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367135	PtrMemberAccess	ao -> a		365897	0					
ANR	367136	Identifier	ao		365897	0					
ANR	367137	Identifier	a		365897	1					
ANR	367138	PrimaryExpression	0		365897	1					
ANR	367139	ExpressionStatement	o |= ( ( n >> 12 ) & 0xf ) << 8	6242:5:132798:132825	365897	1	True				
ANR	367140	AssignmentExpression	o |= ( ( n >> 12 ) & 0xf ) << 8		365897	0		|=			
ANR	367141	Identifier	o		365897	0					
ANR	367142	ShiftExpression	( ( n >> 12 ) & 0xf ) << 8		365897	1		<<			
ANR	367143	BitAndExpression	( n >> 12 ) & 0xf		365897	0		&			
ANR	367144	ShiftExpression	n >> 12		365897	0		>>			
ANR	367145	Identifier	n		365897	0					
ANR	367146	PrimaryExpression	12		365897	1					
ANR	367147	PrimaryExpression	0xf		365897	1					
ANR	367148	PrimaryExpression	8		365897	1					
ANR	367149	ExpressionStatement	o |= ( ( n >> 8 ) & 0xf ) << 20	6243:5:132832:132859	365897	2	True				
ANR	367150	AssignmentExpression	o |= ( ( n >> 8 ) & 0xf ) << 20		365897	0		|=			
ANR	367151	Identifier	o		365897	0					
ANR	367152	ShiftExpression	( ( n >> 8 ) & 0xf ) << 20		365897	1		<<			
ANR	367153	BitAndExpression	( n >> 8 ) & 0xf		365897	0		&			
ANR	367154	ShiftExpression	n >> 8		365897	0		>>			
ANR	367155	Identifier	n		365897	0					
ANR	367156	PrimaryExpression	8		365897	1					
ANR	367157	PrimaryExpression	0xf		365897	1					
ANR	367158	PrimaryExpression	20		365897	1					
ANR	367159	ExpressionStatement	o |= ( ( n >> 4 ) & 0xf ) << 16	6244:5:132866:132893	365897	3	True				
ANR	367160	AssignmentExpression	o |= ( ( n >> 4 ) & 0xf ) << 16		365897	0		|=			
ANR	367161	Identifier	o		365897	0					
ANR	367162	ShiftExpression	( ( n >> 4 ) & 0xf ) << 16		365897	1		<<			
ANR	367163	BitAndExpression	( n >> 4 ) & 0xf		365897	0		&			
ANR	367164	ShiftExpression	n >> 4		365897	0		>>			
ANR	367165	Identifier	n		365897	0					
ANR	367166	PrimaryExpression	4		365897	1					
ANR	367167	PrimaryExpression	0xf		365897	1					
ANR	367168	PrimaryExpression	16		365897	1					
ANR	367169	ExpressionStatement	o |= ( ( n ) & 0xf ) << 24	6245:5:132900:132922	365897	4	True				
ANR	367170	AssignmentExpression	o |= ( ( n ) & 0xf ) << 24		365897	0		|=			
ANR	367171	Identifier	o		365897	0					
ANR	367172	ShiftExpression	( ( n ) & 0xf ) << 24		365897	1		<<			
ANR	367173	CastExpression	( n ) & 0xf		365897	0					
ANR	367174	CastTarget	n		365897	0					
ANR	367175	UnaryOperationExpression	& 0xf		365897	1					
ANR	367176	UnaryOperator	&		365897	0					
ANR	367177	PrimaryExpression	0xf		365897	1					
ANR	367178	PrimaryExpression	24		365897	1					
ANR	367179	ExpressionStatement	ao -> o |= o	6246:5:132929:132938	365897	5	True				
ANR	367180	AssignmentExpression	ao -> o |= o		365897	0		|=			
ANR	367181	PtrMemberAccess	ao -> o		365897	0					
ANR	367182	Identifier	ao		365897	0					
ANR	367183	Identifier	o		365897	1					
ANR	367184	Identifier	o		365897	1					
ANR	367185	BreakStatement	break ;	6248:4:132950:132955	365897	25	True				
ANR	367186	Label	case TYPE_SWI :	6249:3:132960:132973	365897	26	True				
ANR	367187	Identifier	TYPE_SWI		365897	0					
ANR	367188	ExpressionStatement	ao -> o |= ( getnum ( ao -> a [ 0 ] ) & 0xff ) << 24	6250:4:132979:133020	365897	27	True				
ANR	367189	AssignmentExpression	ao -> o |= ( getnum ( ao -> a [ 0 ] ) & 0xff ) << 24		365897	0		|=			
ANR	367190	PtrMemberAccess	ao -> o		365897	0					
ANR	367191	Identifier	ao		365897	0					
ANR	367192	Identifier	o		365897	1					
ANR	367193	ShiftExpression	( getnum ( ao -> a [ 0 ] ) & 0xff ) << 24		365897	1		<<			
ANR	367194	BitAndExpression	getnum ( ao -> a [ 0 ] ) & 0xff		365897	0		&			
ANR	367195	CallExpression	getnum ( ao -> a [ 0 ] )		365897	0					
ANR	367196	Callee	getnum		365897	0					
ANR	367197	Identifier	getnum		365897	0					
ANR	367198	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367199	Argument	ao -> a [ 0 ]		365897	0					
ANR	367200	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367201	PtrMemberAccess	ao -> a		365897	0					
ANR	367202	Identifier	ao		365897	0					
ANR	367203	Identifier	a		365897	1					
ANR	367204	PrimaryExpression	0		365897	1					
ANR	367205	PrimaryExpression	0xff		365897	1					
ANR	367206	PrimaryExpression	24		365897	1					
ANR	367207	ExpressionStatement	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff ) << 16	6251:4:133026:133074	365897	28	True				
ANR	367208	AssignmentExpression	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff ) << 16		365897	0		|=			
ANR	367209	PtrMemberAccess	ao -> o		365897	0					
ANR	367210	Identifier	ao		365897	0					
ANR	367211	Identifier	o		365897	1					
ANR	367212	ShiftExpression	( ( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff ) << 16		365897	1		<<			
ANR	367213	BitAndExpression	( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff		365897	0		&			
ANR	367214	ShiftExpression	getnum ( ao -> a [ 0 ] ) >> 8		365897	0		>>			
ANR	367215	CallExpression	getnum ( ao -> a [ 0 ] )		365897	0					
ANR	367216	Callee	getnum		365897	0					
ANR	367217	Identifier	getnum		365897	0					
ANR	367218	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367219	Argument	ao -> a [ 0 ]		365897	0					
ANR	367220	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367221	PtrMemberAccess	ao -> a		365897	0					
ANR	367222	Identifier	ao		365897	0					
ANR	367223	Identifier	a		365897	1					
ANR	367224	PrimaryExpression	0		365897	1					
ANR	367225	PrimaryExpression	8		365897	1					
ANR	367226	PrimaryExpression	0xff		365897	1					
ANR	367227	PrimaryExpression	16		365897	1					
ANR	367228	ExpressionStatement	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff ) << 8	6252:4:133080:133128	365897	29	True				
ANR	367229	AssignmentExpression	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff ) << 8		365897	0		|=			
ANR	367230	PtrMemberAccess	ao -> o		365897	0					
ANR	367231	Identifier	ao		365897	0					
ANR	367232	Identifier	o		365897	1					
ANR	367233	ShiftExpression	( ( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff ) << 8		365897	1		<<			
ANR	367234	BitAndExpression	( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff		365897	0		&			
ANR	367235	ShiftExpression	getnum ( ao -> a [ 0 ] ) >> 16		365897	0		>>			
ANR	367236	CallExpression	getnum ( ao -> a [ 0 ] )		365897	0					
ANR	367237	Callee	getnum		365897	0					
ANR	367238	Identifier	getnum		365897	0					
ANR	367239	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367240	Argument	ao -> a [ 0 ]		365897	0					
ANR	367241	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367242	PtrMemberAccess	ao -> a		365897	0					
ANR	367243	Identifier	ao		365897	0					
ANR	367244	Identifier	a		365897	1					
ANR	367245	PrimaryExpression	0		365897	1					
ANR	367246	PrimaryExpression	16		365897	1					
ANR	367247	PrimaryExpression	0xff		365897	1					
ANR	367248	PrimaryExpression	8		365897	1					
ANR	367249	BreakStatement	break ;	6253:4:133134:133139	365897	30	True				
ANR	367250	Label	case TYPE_UDF :	6254:3:133144:133157	365897	31	True				
ANR	367251	Identifier	TYPE_UDF		365897	0					
ANR	367252	CompoundStatement		185:5:4630:4656	365897	32					
ANR	367253	IdentifierDeclStatement	ut32 n = getnum ( ao -> a [ 0 ] ) ;	6258:5:133225:133251	365897	0	True				
ANR	367254	IdentifierDecl	n = getnum ( ao -> a [ 0 ] )		365897	0					
ANR	367255	IdentifierDeclType	ut32		365897	0					
ANR	367256	Identifier	n		365897	1					
ANR	367257	AssignmentExpression	n = getnum ( ao -> a [ 0 ] )		365897	2		=			
ANR	367258	Identifier	n		365897	0					
ANR	367259	CallExpression	getnum ( ao -> a [ 0 ] )		365897	1					
ANR	367260	Callee	getnum		365897	0					
ANR	367261	Identifier	getnum		365897	0					
ANR	367262	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367263	Argument	ao -> a [ 0 ]		365897	0					
ANR	367264	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367265	PtrMemberAccess	ao -> a		365897	0					
ANR	367266	Identifier	ao		365897	0					
ANR	367267	Identifier	a		365897	1					
ANR	367268	PrimaryExpression	0		365897	1					
ANR	367269	ExpressionStatement	ao -> o |= 0xe7	6259:5:133258:133271	365897	1	True				
ANR	367270	AssignmentExpression	ao -> o |= 0xe7		365897	0		|=			
ANR	367271	PtrMemberAccess	ao -> o		365897	0					
ANR	367272	Identifier	ao		365897	0					
ANR	367273	Identifier	o		365897	1					
ANR	367274	PrimaryExpression	0xe7		365897	1					
ANR	367275	ExpressionStatement	ao -> o |= ( n & 0xf ) << 24	6260:5:133278:133302	365897	2	True				
ANR	367276	AssignmentExpression	ao -> o |= ( n & 0xf ) << 24		365897	0		|=			
ANR	367277	PtrMemberAccess	ao -> o		365897	0					
ANR	367278	Identifier	ao		365897	0					
ANR	367279	Identifier	o		365897	1					
ANR	367280	ShiftExpression	( n & 0xf ) << 24		365897	1		<<			
ANR	367281	BitAndExpression	n & 0xf		365897	0		&			
ANR	367282	Identifier	n		365897	0					
ANR	367283	PrimaryExpression	0xf		365897	1					
ANR	367284	PrimaryExpression	24		365897	1					
ANR	367285	ExpressionStatement	ao -> o |= ( ( n >> 4 ) & 0xff ) << 16	6261:5:133309:133341	365897	3	True				
ANR	367286	AssignmentExpression	ao -> o |= ( ( n >> 4 ) & 0xff ) << 16		365897	0		|=			
ANR	367287	PtrMemberAccess	ao -> o		365897	0					
ANR	367288	Identifier	ao		365897	0					
ANR	367289	Identifier	o		365897	1					
ANR	367290	ShiftExpression	( ( n >> 4 ) & 0xff ) << 16		365897	1		<<			
ANR	367291	BitAndExpression	( n >> 4 ) & 0xff		365897	0		&			
ANR	367292	ShiftExpression	n >> 4		365897	0		>>			
ANR	367293	Identifier	n		365897	0					
ANR	367294	PrimaryExpression	4		365897	1					
ANR	367295	PrimaryExpression	0xff		365897	1					
ANR	367296	PrimaryExpression	16		365897	1					
ANR	367297	ExpressionStatement	ao -> o |= ( ( n >> 12 ) & 0xf ) << 8	6262:5:133348:133379	365897	4	True				
ANR	367298	AssignmentExpression	ao -> o |= ( ( n >> 12 ) & 0xf ) << 8		365897	0		|=			
ANR	367299	PtrMemberAccess	ao -> o		365897	0					
ANR	367300	Identifier	ao		365897	0					
ANR	367301	Identifier	o		365897	1					
ANR	367302	ShiftExpression	( ( n >> 12 ) & 0xf ) << 8		365897	1		<<			
ANR	367303	BitAndExpression	( n >> 12 ) & 0xf		365897	0		&			
ANR	367304	ShiftExpression	n >> 12		365897	0		>>			
ANR	367305	Identifier	n		365897	0					
ANR	367306	PrimaryExpression	12		365897	1					
ANR	367307	PrimaryExpression	0xf		365897	1					
ANR	367308	PrimaryExpression	8		365897	1					
ANR	367309	BreakStatement	break ;	6264:4:133391:133396	365897	33	True				
ANR	367310	Label	case TYPE_ARI :	6265:3:133401:133414	365897	34	True				
ANR	367311	Identifier	TYPE_ARI		365897	0					
ANR	367312	IfStatement	if ( ! ao -> a [ 2 ] )		365897	35					
ANR	367313	Condition	! ao -> a [ 2 ]	6266:8:133424:133432	365897	0	True				
ANR	367314	UnaryOperationExpression	! ao -> a [ 2 ]		365897	0					
ANR	367315	UnaryOperator	!		365897	0					
ANR	367316	ArrayIndexing	ao -> a [ 2 ]		365897	1					
ANR	367317	PtrMemberAccess	ao -> a		365897	0					
ANR	367318	Identifier	ao		365897	0					
ANR	367319	Identifier	a		365897	1					
ANR	367320	PrimaryExpression	2		365897	1					
ANR	367321	CompoundStatement		193:19:4840:4840	365897	1					
ANR	367322	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	6267:5:133442:133461	365897	0	True				
ANR	367323	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		365897	0		=			
ANR	367324	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367325	PtrMemberAccess	ao -> a		365897	0					
ANR	367326	Identifier	ao		365897	0					
ANR	367327	Identifier	a		365897	1					
ANR	367328	PrimaryExpression	2		365897	1					
ANR	367329	ArrayIndexing	ao -> a [ 1 ]		365897	1					
ANR	367330	PtrMemberAccess	ao -> a		365897	0					
ANR	367331	Identifier	ao		365897	0					
ANR	367332	Identifier	a		365897	1					
ANR	367333	PrimaryExpression	1		365897	1					
ANR	367334	ExpressionStatement	ao -> a [ 1 ] = ao -> a [ 0 ]	6268:5:133468:133487	365897	1	True				
ANR	367335	AssignmentExpression	ao -> a [ 1 ] = ao -> a [ 0 ]		365897	0		=			
ANR	367336	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367337	PtrMemberAccess	ao -> a		365897	0					
ANR	367338	Identifier	ao		365897	0					
ANR	367339	Identifier	a		365897	1					
ANR	367340	PrimaryExpression	1		365897	1					
ANR	367341	ArrayIndexing	ao -> a [ 0 ]		365897	1					
ANR	367342	PtrMemberAccess	ao -> a		365897	0					
ANR	367343	Identifier	ao		365897	0					
ANR	367344	Identifier	a		365897	1					
ANR	367345	PrimaryExpression	0		365897	1					
ANR	367346	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6270:4:133499:133522	365897	36	True				
ANR	367347	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	367348	Identifier	reg		365897	0					
ANR	367349	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	367350	Callee	getreg		365897	0					
ANR	367351	Identifier	getreg		365897	0					
ANR	367352	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367353	Argument	ao -> a [ 0 ]		365897	0					
ANR	367354	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367355	PtrMemberAccess	ao -> a		365897	0					
ANR	367356	Identifier	ao		365897	0					
ANR	367357	Identifier	a		365897	1					
ANR	367358	PrimaryExpression	0		365897	1					
ANR	367359	IfStatement	if ( reg == - 1 )		365897	37					
ANR	367360	Condition	reg == - 1	6271:8:133532:133540	365897	0	True				
ANR	367361	EqualityExpression	reg == - 1		365897	0		==			
ANR	367362	Identifier	reg		365897	0					
ANR	367363	UnaryOperationExpression	- 1		365897	1					
ANR	367364	UnaryOperator	-		365897	0					
ANR	367365	PrimaryExpression	1		365897	1					
ANR	367366	CompoundStatement		198:19:4948:4948	365897	1					
ANR	367367	ReturnStatement	return 0 ;	6272:5:133550:133558	365897	0	True				
ANR	367368	PrimaryExpression	0		365897	0					
ANR	367369	ExpressionStatement	ao -> o |= reg << 20	6274:4:133570:133588	365897	38	True				
ANR	367370	AssignmentExpression	ao -> o |= reg << 20		365897	0		|=			
ANR	367371	PtrMemberAccess	ao -> o		365897	0					
ANR	367372	Identifier	ao		365897	0					
ANR	367373	Identifier	o		365897	1					
ANR	367374	ShiftExpression	reg << 20		365897	1		<<			
ANR	367375	Identifier	reg		365897	0					
ANR	367376	PrimaryExpression	20		365897	1					
ANR	367377	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6276:4:133595:133618	365897	39	True				
ANR	367378	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	367379	Identifier	reg		365897	0					
ANR	367380	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	367381	Callee	getreg		365897	0					
ANR	367382	Identifier	getreg		365897	0					
ANR	367383	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367384	Argument	ao -> a [ 1 ]		365897	0					
ANR	367385	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367386	PtrMemberAccess	ao -> a		365897	0					
ANR	367387	Identifier	ao		365897	0					
ANR	367388	Identifier	a		365897	1					
ANR	367389	PrimaryExpression	1		365897	1					
ANR	367390	IfStatement	if ( reg == - 1 )		365897	40					
ANR	367391	Condition	reg == - 1	6277:8:133628:133636	365897	0	True				
ANR	367392	EqualityExpression	reg == - 1		365897	0		==			
ANR	367393	Identifier	reg		365897	0					
ANR	367394	UnaryOperationExpression	- 1		365897	1					
ANR	367395	UnaryOperator	-		365897	0					
ANR	367396	PrimaryExpression	1		365897	1					
ANR	367397	CompoundStatement		204:19:5044:5044	365897	1					
ANR	367398	ReturnStatement	return 0 ;	6278:5:133646:133654	365897	0	True				
ANR	367399	PrimaryExpression	0		365897	0					
ANR	367400	ExpressionStatement	ao -> o |= reg << 8	6280:4:133666:133683	365897	41	True				
ANR	367401	AssignmentExpression	ao -> o |= reg << 8		365897	0		|=			
ANR	367402	PtrMemberAccess	ao -> o		365897	0					
ANR	367403	Identifier	ao		365897	0					
ANR	367404	Identifier	o		365897	1					
ANR	367405	ShiftExpression	reg << 8		365897	1		<<			
ANR	367406	Identifier	reg		365897	0					
ANR	367407	PrimaryExpression	8		365897	1					
ANR	367408	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6281:4:133689:133712	365897	42	True				
ANR	367409	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	367410	Identifier	reg		365897	0					
ANR	367411	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	367412	Callee	getreg		365897	0					
ANR	367413	Identifier	getreg		365897	0					
ANR	367414	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	367415	Argument	ao -> a [ 2 ]		365897	0					
ANR	367416	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367417	PtrMemberAccess	ao -> a		365897	0					
ANR	367418	Identifier	ao		365897	0					
ANR	367419	Identifier	a		365897	1					
ANR	367420	PrimaryExpression	2		365897	1					
ANR	367421	ExpressionStatement	ao -> o |= ( reg != - 1 ) ? reg << 24 : 2 | getnum ( ao -> a [ 2 ] ) << 24	6282:4:133718:133779	365897	43	True				
ANR	367422	AssignmentExpression	ao -> o |= ( reg != - 1 ) ? reg << 24 : 2 | getnum ( ao -> a [ 2 ] ) << 24		365897	0		|=			
ANR	367423	PtrMemberAccess	ao -> o		365897	0					
ANR	367424	Identifier	ao		365897	0					
ANR	367425	Identifier	o		365897	1					
ANR	367426	ConditionalExpression	( reg != - 1 ) ? reg << 24 : 2 | getnum ( ao -> a [ 2 ] ) << 24		365897	1					
ANR	367427	Condition	reg != - 1		365897	0					
ANR	367428	EqualityExpression	reg != - 1		365897	0		!=			
ANR	367429	Identifier	reg		365897	0					
ANR	367430	UnaryOperationExpression	- 1		365897	1					
ANR	367431	UnaryOperator	-		365897	0					
ANR	367432	PrimaryExpression	1		365897	1					
ANR	367433	ShiftExpression	reg << 24		365897	1		<<			
ANR	367434	Identifier	reg		365897	0					
ANR	367435	PrimaryExpression	24		365897	1					
ANR	367436	InclusiveOrExpression	2 | getnum ( ao -> a [ 2 ] ) << 24		365897	2		|			
ANR	367437	PrimaryExpression	2		365897	0					
ANR	367438	ShiftExpression	getnum ( ao -> a [ 2 ] ) << 24		365897	1		<<			
ANR	367439	CallExpression	getnum ( ao -> a [ 2 ] )		365897	0					
ANR	367440	Callee	getnum		365897	0					
ANR	367441	Identifier	getnum		365897	0					
ANR	367442	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	367443	Argument	ao -> a [ 2 ]		365897	0					
ANR	367444	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367445	PtrMemberAccess	ao -> a		365897	0					
ANR	367446	Identifier	ao		365897	0					
ANR	367447	Identifier	a		365897	1					
ANR	367448	PrimaryExpression	2		365897	1					
ANR	367449	PrimaryExpression	24		365897	1					
ANR	367450	IfStatement	if ( ao -> a [ 3 ] )		365897	44					
ANR	367451	Condition	ao -> a [ 3 ]	6283:8:133789:133796	365897	0	True				
ANR	367452	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	367453	PtrMemberAccess	ao -> a		365897	0					
ANR	367454	Identifier	ao		365897	0					
ANR	367455	Identifier	a		365897	1					
ANR	367456	PrimaryExpression	3		365897	1					
ANR	367457	CompoundStatement		210:18:5204:5204	365897	1					
ANR	367458	ExpressionStatement	ao -> o |= getshift ( ao -> a [ 3 ] )	6284:5:133806:133834	365897	0	True				
ANR	367459	AssignmentExpression	ao -> o |= getshift ( ao -> a [ 3 ] )		365897	0		|=			
ANR	367460	PtrMemberAccess	ao -> o		365897	0					
ANR	367461	Identifier	ao		365897	0					
ANR	367462	Identifier	o		365897	1					
ANR	367463	CallExpression	getshift ( ao -> a [ 3 ] )		365897	1					
ANR	367464	Callee	getshift		365897	0					
ANR	367465	Identifier	getshift		365897	0					
ANR	367466	ArgumentList	ao -> a [ 3 ]		365897	1					
ANR	367467	Argument	ao -> a [ 3 ]		365897	0					
ANR	367468	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	367469	PtrMemberAccess	ao -> a		365897	0					
ANR	367470	Identifier	ao		365897	0					
ANR	367471	Identifier	a		365897	1					
ANR	367472	PrimaryExpression	3		365897	1					
ANR	367473	BreakStatement	break ;	6286:4:133846:133851	365897	45	True				
ANR	367474	Label	case TYPE_SWP :	6287:3:133856:133869	365897	46	True				
ANR	367475	Identifier	TYPE_SWP		365897	0					
ANR	367476	CompoundStatement		216:4:5286:5312	365897	47					
ANR	367477	IdentifierDeclStatement	int a1 = getreg ( ao -> a [ 1 ] ) ;	6289:4:133881:133907	365897	0	True				
ANR	367478	IdentifierDecl	a1 = getreg ( ao -> a [ 1 ] )		365897	0					
ANR	367479	IdentifierDeclType	int		365897	0					
ANR	367480	Identifier	a1		365897	1					
ANR	367481	AssignmentExpression	a1 = getreg ( ao -> a [ 1 ] )		365897	2		=			
ANR	367482	Identifier	a1		365897	0					
ANR	367483	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	367484	Callee	getreg		365897	0					
ANR	367485	Identifier	getreg		365897	0					
ANR	367486	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367487	Argument	ao -> a [ 1 ]		365897	0					
ANR	367488	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367489	PtrMemberAccess	ao -> a		365897	0					
ANR	367490	Identifier	ao		365897	0					
ANR	367491	Identifier	a		365897	1					
ANR	367492	PrimaryExpression	1		365897	1					
ANR	367493	IfStatement	if ( a1 )		365897	1					
ANR	367494	Condition	a1	6290:8:133917:133918	365897	0	True				
ANR	367495	Identifier	a1		365897	0					
ANR	367496	CompoundStatement		217:12:5326:5326	365897	1					
ANR	367497	ExpressionStatement	ao -> o = 0xe1	6291:5:133928:133940	365897	0	True				
ANR	367498	AssignmentExpression	ao -> o = 0xe1		365897	0		=			
ANR	367499	PtrMemberAccess	ao -> o		365897	0					
ANR	367500	Identifier	ao		365897	0					
ANR	367501	Identifier	o		365897	1					
ANR	367502	PrimaryExpression	0xe1		365897	1					
ANR	367503	ExpressionStatement	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 4 ) << 16	6292:5:133947:133986	365897	1	True				
ANR	367504	AssignmentExpression	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 4 ) << 16		365897	0		|=			
ANR	367505	PtrMemberAccess	ao -> o		365897	0					
ANR	367506	Identifier	ao		365897	0					
ANR	367507	Identifier	o		365897	1					
ANR	367508	ShiftExpression	( getreg ( ao -> a [ 0 ] ) << 4 ) << 16		365897	1		<<			
ANR	367509	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 4		365897	0		<<			
ANR	367510	CallExpression	getreg ( ao -> a [ 0 ] )		365897	0					
ANR	367511	Callee	getreg		365897	0					
ANR	367512	Identifier	getreg		365897	0					
ANR	367513	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367514	Argument	ao -> a [ 0 ]		365897	0					
ANR	367515	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367516	PtrMemberAccess	ao -> a		365897	0					
ANR	367517	Identifier	ao		365897	0					
ANR	367518	Identifier	a		365897	1					
ANR	367519	PrimaryExpression	0		365897	1					
ANR	367520	PrimaryExpression	4		365897	1					
ANR	367521	PrimaryExpression	16		365897	1					
ANR	367522	ExpressionStatement	ao -> o |= ( 0x90 + a1 ) << 24	6293:5:133993:134019	365897	2	True				
ANR	367523	AssignmentExpression	ao -> o |= ( 0x90 + a1 ) << 24		365897	0		|=			
ANR	367524	PtrMemberAccess	ao -> o		365897	0					
ANR	367525	Identifier	ao		365897	0					
ANR	367526	Identifier	o		365897	1					
ANR	367527	ShiftExpression	( 0x90 + a1 ) << 24		365897	1		<<			
ANR	367528	AdditiveExpression	0x90 + a1		365897	0		+			
ANR	367529	PrimaryExpression	0x90		365897	0					
ANR	367530	Identifier	a1		365897	1					
ANR	367531	PrimaryExpression	24		365897	1					
ANR	367532	IfStatement	if ( ao -> a [ 2 ] )		365897	3					
ANR	367533	Condition	ao -> a [ 2 ]	6294:9:134030:134037	365897	0	True				
ANR	367534	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367535	PtrMemberAccess	ao -> a		365897	0					
ANR	367536	Identifier	ao		365897	0					
ANR	367537	Identifier	a		365897	1					
ANR	367538	PrimaryExpression	2		365897	1					
ANR	367539	CompoundStatement		221:19:5445:5445	365897	1					
ANR	367540	ExpressionStatement	ao -> o |= ( getreg ( ao -> a [ 2 ] + 1 ) ) << 8	6295:6:134048:134085	365897	0	True				
ANR	367541	AssignmentExpression	ao -> o |= ( getreg ( ao -> a [ 2 ] + 1 ) ) << 8		365897	0		|=			
ANR	367542	PtrMemberAccess	ao -> o		365897	0					
ANR	367543	Identifier	ao		365897	0					
ANR	367544	Identifier	o		365897	1					
ANR	367545	ShiftExpression	( getreg ( ao -> a [ 2 ] + 1 ) ) << 8		365897	1		<<			
ANR	367546	CallExpression	getreg ( ao -> a [ 2 ] + 1 )		365897	0					
ANR	367547	Callee	getreg		365897	0					
ANR	367548	Identifier	getreg		365897	0					
ANR	367549	ArgumentList	ao -> a [ 2 ] + 1		365897	1					
ANR	367550	Argument	ao -> a [ 2 ] + 1		365897	0					
ANR	367551	AdditiveExpression	ao -> a [ 2 ] + 1		365897	0		+			
ANR	367552	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367553	PtrMemberAccess	ao -> a		365897	0					
ANR	367554	Identifier	ao		365897	0					
ANR	367555	Identifier	a		365897	1					
ANR	367556	PrimaryExpression	2		365897	1					
ANR	367557	PrimaryExpression	1		365897	1					
ANR	367558	PrimaryExpression	8		365897	1					
ANR	367559	ElseStatement	else		365897	0					
ANR	367560	CompoundStatement		223:12:5504:5504	365897	0					
ANR	367561	ReturnStatement	return 0 ;	6297:6:134107:134115	365897	0	True				
ANR	367562	PrimaryExpression	0		365897	0					
ANR	367563	IfStatement	if ( 0xff == ( ( ao -> o >> 16 ) & 0xff ) )		365897	2					
ANR	367564	Condition	0xff == ( ( ao -> o >> 16 ) & 0xff )	6300:8:134138:134167	365897	0	True				
ANR	367565	EqualityExpression	0xff == ( ( ao -> o >> 16 ) & 0xff )		365897	0		==			
ANR	367566	PrimaryExpression	0xff		365897	0					
ANR	367567	BitAndExpression	( ao -> o >> 16 ) & 0xff		365897	1		&			
ANR	367568	ShiftExpression	ao -> o >> 16		365897	0		>>			
ANR	367569	PtrMemberAccess	ao -> o		365897	0					
ANR	367570	Identifier	ao		365897	0					
ANR	367571	Identifier	o		365897	1					
ANR	367572	PrimaryExpression	16		365897	1					
ANR	367573	PrimaryExpression	0xff		365897	1					
ANR	367574	CompoundStatement		227:40:5575:5575	365897	1					
ANR	367575	ReturnStatement	return 0 ;	6301:5:134177:134185	365897	0	True				
ANR	367576	PrimaryExpression	0		365897	0					
ANR	367577	BreakStatement	break ;	6304:4:134203:134208	365897	48	True				
ANR	367578	Label	case TYPE_MOV :	6305:3:134213:134226	365897	49	True				
ANR	367579	Identifier	TYPE_MOV		365897	0					
ANR	367580	IfStatement	"if ( ! strcmpnull ( ao -> op , ""movs"" ) )"		365897	50					
ANR	367581	Condition	"! strcmpnull ( ao -> op , ""movs"" )"	6306:8:134236:134263	365897	0	True				
ANR	367582	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""movs"" )"		365897	0					
ANR	367583	UnaryOperator	!		365897	0					
ANR	367584	CallExpression	"strcmpnull ( ao -> op , ""movs"" )"		365897	1					
ANR	367585	Callee	strcmpnull		365897	0					
ANR	367586	Identifier	strcmpnull		365897	0					
ANR	367587	ArgumentList	ao -> op		365897	1					
ANR	367588	Argument	ao -> op		365897	0					
ANR	367589	PtrMemberAccess	ao -> op		365897	0					
ANR	367590	Identifier	ao		365897	0					
ANR	367591	Identifier	op		365897	1					
ANR	367592	Argument	"""movs"""		365897	1					
ANR	367593	PrimaryExpression	"""movs"""		365897	0					
ANR	367594	CompoundStatement		233:38:5671:5671	365897	1					
ANR	367595	ExpressionStatement	ao -> o = 0xb0e1	6307:5:134273:134287	365897	0	True				
ANR	367596	AssignmentExpression	ao -> o = 0xb0e1		365897	0		=			
ANR	367597	PtrMemberAccess	ao -> o		365897	0					
ANR	367598	Identifier	ao		365897	0					
ANR	367599	Identifier	o		365897	1					
ANR	367600	PrimaryExpression	0xb0e1		365897	1					
ANR	367601	ExpressionStatement	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20	6309:4:134299:134331	365897	51	True				
ANR	367602	AssignmentExpression	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20		365897	0		|=			
ANR	367603	PtrMemberAccess	ao -> o		365897	0					
ANR	367604	Identifier	ao		365897	0					
ANR	367605	Identifier	o		365897	1					
ANR	367606	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 20		365897	1		<<			
ANR	367607	CallExpression	getreg ( ao -> a [ 0 ] )		365897	0					
ANR	367608	Callee	getreg		365897	0					
ANR	367609	Identifier	getreg		365897	0					
ANR	367610	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367611	Argument	ao -> a [ 0 ]		365897	0					
ANR	367612	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367613	PtrMemberAccess	ao -> a		365897	0					
ANR	367614	Identifier	ao		365897	0					
ANR	367615	Identifier	a		365897	1					
ANR	367616	PrimaryExpression	0		365897	1					
ANR	367617	PrimaryExpression	20		365897	1					
ANR	367618	ExpressionStatement	ret = getreg ( ao -> a [ 1 ] )	6310:4:134337:134360	365897	52	True				
ANR	367619	AssignmentExpression	ret = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	367620	Identifier	ret		365897	0					
ANR	367621	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	367622	Callee	getreg		365897	0					
ANR	367623	Identifier	getreg		365897	0					
ANR	367624	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367625	Argument	ao -> a [ 1 ]		365897	0					
ANR	367626	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367627	PtrMemberAccess	ao -> a		365897	0					
ANR	367628	Identifier	ao		365897	0					
ANR	367629	Identifier	a		365897	1					
ANR	367630	PrimaryExpression	1		365897	1					
ANR	367631	IfStatement	if ( ret != - 1 )		365897	53					
ANR	367632	Condition	ret != - 1	6311:8:134370:134378	365897	0	True				
ANR	367633	EqualityExpression	ret != - 1		365897	0		!=			
ANR	367634	Identifier	ret		365897	0					
ANR	367635	UnaryOperationExpression	- 1		365897	1					
ANR	367636	UnaryOperator	-		365897	0					
ANR	367637	PrimaryExpression	1		365897	1					
ANR	367638	CompoundStatement		238:19:5786:5786	365897	1					
ANR	367639	ExpressionStatement	ao -> o |= ret << 24	6312:5:134388:134406	365897	0	True				
ANR	367640	AssignmentExpression	ao -> o |= ret << 24		365897	0		|=			
ANR	367641	PtrMemberAccess	ao -> o		365897	0					
ANR	367642	Identifier	ao		365897	0					
ANR	367643	Identifier	o		365897	1					
ANR	367644	ShiftExpression	ret << 24		365897	1		<<			
ANR	367645	Identifier	ret		365897	0					
ANR	367646	PrimaryExpression	24		365897	1					
ANR	367647	ElseStatement	else		365897	0					
ANR	367648	CompoundStatement		241:5:5831:5863	365897	0					
ANR	367649	IdentifierDeclStatement	int immed = getimmed8 ( ao -> a [ 1 ] ) ;	6314:5:134426:134458	365897	0	True				
ANR	367650	IdentifierDecl	immed = getimmed8 ( ao -> a [ 1 ] )		365897	0					
ANR	367651	IdentifierDeclType	int		365897	0					
ANR	367652	Identifier	immed		365897	1					
ANR	367653	AssignmentExpression	immed = getimmed8 ( ao -> a [ 1 ] )		365897	2		=			
ANR	367654	Identifier	immed		365897	0					
ANR	367655	CallExpression	getimmed8 ( ao -> a [ 1 ] )		365897	1					
ANR	367656	Callee	getimmed8		365897	0					
ANR	367657	Identifier	getimmed8		365897	0					
ANR	367658	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367659	Argument	ao -> a [ 1 ]		365897	0					
ANR	367660	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367661	PtrMemberAccess	ao -> a		365897	0					
ANR	367662	Identifier	ao		365897	0					
ANR	367663	Identifier	a		365897	1					
ANR	367664	PrimaryExpression	1		365897	1					
ANR	367665	IfStatement	if ( err )		365897	1					
ANR	367666	Condition	err	6315:9:134469:134471	365897	0	True				
ANR	367667	Identifier	err		365897	0					
ANR	367668	CompoundStatement		242:14:5879:5879	365897	1					
ANR	367669	ReturnStatement	return 0 ;	6316:6:134482:134490	365897	0	True				
ANR	367670	PrimaryExpression	0		365897	0					
ANR	367671	ExpressionStatement	ao -> o |= 0xa003 | ( immed & 0xff ) << 24 | ( immed >> 8 ) << 16	6318:5:134504:134563	365897	2	True				
ANR	367672	AssignmentExpression	ao -> o |= 0xa003 | ( immed & 0xff ) << 24 | ( immed >> 8 ) << 16		365897	0		|=			
ANR	367673	PtrMemberAccess	ao -> o		365897	0					
ANR	367674	Identifier	ao		365897	0					
ANR	367675	Identifier	o		365897	1					
ANR	367676	InclusiveOrExpression	0xa003 | ( immed & 0xff ) << 24 | ( immed >> 8 ) << 16		365897	1		|			
ANR	367677	PrimaryExpression	0xa003		365897	0					
ANR	367678	InclusiveOrExpression	( immed & 0xff ) << 24 | ( immed >> 8 ) << 16		365897	1		|			
ANR	367679	ShiftExpression	( immed & 0xff ) << 24		365897	0		<<			
ANR	367680	BitAndExpression	immed & 0xff		365897	0		&			
ANR	367681	Identifier	immed		365897	0					
ANR	367682	PrimaryExpression	0xff		365897	1					
ANR	367683	PrimaryExpression	24		365897	1					
ANR	367684	ShiftExpression	( immed >> 8 ) << 16		365897	1		<<			
ANR	367685	ShiftExpression	immed >> 8		365897	0		>>			
ANR	367686	Identifier	immed		365897	0					
ANR	367687	PrimaryExpression	8		365897	1					
ANR	367688	PrimaryExpression	16		365897	1					
ANR	367689	BreakStatement	break ;	6320:4:134575:134580	365897	54	True				
ANR	367690	Label	case TYPE_MOVW :	6321:3:134585:134599	365897	55	True				
ANR	367691	Identifier	TYPE_MOVW		365897	0					
ANR	367692	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6322:4:134605:134628	365897	56	True				
ANR	367693	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	367694	Identifier	reg		365897	0					
ANR	367695	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	367696	Callee	getreg		365897	0					
ANR	367697	Identifier	getreg		365897	0					
ANR	367698	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367699	Argument	ao -> a [ 0 ]		365897	0					
ANR	367700	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367701	PtrMemberAccess	ao -> a		365897	0					
ANR	367702	Identifier	ao		365897	0					
ANR	367703	Identifier	a		365897	1					
ANR	367704	PrimaryExpression	0		365897	1					
ANR	367705	IfStatement	if ( reg == - 1 )		365897	57					
ANR	367706	Condition	reg == - 1	6323:8:134638:134646	365897	0	True				
ANR	367707	EqualityExpression	reg == - 1		365897	0		==			
ANR	367708	Identifier	reg		365897	0					
ANR	367709	UnaryOperationExpression	- 1		365897	1					
ANR	367710	UnaryOperator	-		365897	0					
ANR	367711	PrimaryExpression	1		365897	1					
ANR	367712	CompoundStatement		250:19:6054:6054	365897	1					
ANR	367713	ReturnStatement	return 0 ;	6324:5:134656:134664	365897	0	True				
ANR	367714	PrimaryExpression	0		365897	0					
ANR	367715	ExpressionStatement	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20	6326:4:134676:134708	365897	58	True				
ANR	367716	AssignmentExpression	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20		365897	0		|=			
ANR	367717	PtrMemberAccess	ao -> o		365897	0					
ANR	367718	Identifier	ao		365897	0					
ANR	367719	Identifier	o		365897	1					
ANR	367720	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 20		365897	1		<<			
ANR	367721	CallExpression	getreg ( ao -> a [ 0 ] )		365897	0					
ANR	367722	Callee	getreg		365897	0					
ANR	367723	Identifier	getreg		365897	0					
ANR	367724	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367725	Argument	ao -> a [ 0 ]		365897	0					
ANR	367726	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367727	PtrMemberAccess	ao -> a		365897	0					
ANR	367728	Identifier	ao		365897	0					
ANR	367729	Identifier	a		365897	1					
ANR	367730	PrimaryExpression	0		365897	1					
ANR	367731	PrimaryExpression	20		365897	1					
ANR	367732	ExpressionStatement	ret = getnum ( ao -> a [ 1 ] )	6327:4:134714:134737	365897	59	True				
ANR	367733	AssignmentExpression	ret = getnum ( ao -> a [ 1 ] )		365897	0		=			
ANR	367734	Identifier	ret		365897	0					
ANR	367735	CallExpression	getnum ( ao -> a [ 1 ] )		365897	1					
ANR	367736	Callee	getnum		365897	0					
ANR	367737	Identifier	getnum		365897	0					
ANR	367738	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367739	Argument	ao -> a [ 1 ]		365897	0					
ANR	367740	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367741	PtrMemberAccess	ao -> a		365897	0					
ANR	367742	Identifier	ao		365897	0					
ANR	367743	Identifier	a		365897	1					
ANR	367744	PrimaryExpression	1		365897	1					
ANR	367745	ExpressionStatement	ao -> o |= 0x3 | ret << 24	6329:4:134744:134768	365897	60	True				
ANR	367746	AssignmentExpression	ao -> o |= 0x3 | ret << 24		365897	0		|=			
ANR	367747	PtrMemberAccess	ao -> o		365897	0					
ANR	367748	Identifier	ao		365897	0					
ANR	367749	Identifier	o		365897	1					
ANR	367750	InclusiveOrExpression	0x3 | ret << 24		365897	1		|			
ANR	367751	PrimaryExpression	0x3		365897	0					
ANR	367752	ShiftExpression	ret << 24		365897	1		<<			
ANR	367753	Identifier	ret		365897	0					
ANR	367754	PrimaryExpression	24		365897	1					
ANR	367755	ExpressionStatement	ao -> o |= ( ret & 0xf000 ) >> 4	6330:4:134774:134802	365897	61	True				
ANR	367756	AssignmentExpression	ao -> o |= ( ret & 0xf000 ) >> 4		365897	0		|=			
ANR	367757	PtrMemberAccess	ao -> o		365897	0					
ANR	367758	Identifier	ao		365897	0					
ANR	367759	Identifier	o		365897	1					
ANR	367760	ShiftExpression	( ret & 0xf000 ) >> 4		365897	1		>>			
ANR	367761	BitAndExpression	ret & 0xf000		365897	0		&			
ANR	367762	Identifier	ret		365897	0					
ANR	367763	PrimaryExpression	0xf000		365897	1					
ANR	367764	PrimaryExpression	4		365897	1					
ANR	367765	ExpressionStatement	ao -> o |= ( ret & 0xf00 ) << 8	6331:4:134808:134835	365897	62	True				
ANR	367766	AssignmentExpression	ao -> o |= ( ret & 0xf00 ) << 8		365897	0		|=			
ANR	367767	PtrMemberAccess	ao -> o		365897	0					
ANR	367768	Identifier	ao		365897	0					
ANR	367769	Identifier	o		365897	1					
ANR	367770	ShiftExpression	( ret & 0xf00 ) << 8		365897	1		<<			
ANR	367771	BitAndExpression	ret & 0xf00		365897	0		&			
ANR	367772	Identifier	ret		365897	0					
ANR	367773	PrimaryExpression	0xf00		365897	1					
ANR	367774	PrimaryExpression	8		365897	1					
ANR	367775	BreakStatement	break ;	6332:4:134841:134846	365897	63	True				
ANR	367776	Label	case TYPE_MOVT :	6333:3:134851:134865	365897	64	True				
ANR	367777	Identifier	TYPE_MOVT		365897	0					
ANR	367778	ExpressionStatement	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20	6334:4:134871:134903	365897	65	True				
ANR	367779	AssignmentExpression	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20		365897	0		|=			
ANR	367780	PtrMemberAccess	ao -> o		365897	0					
ANR	367781	Identifier	ao		365897	0					
ANR	367782	Identifier	o		365897	1					
ANR	367783	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 20		365897	1		<<			
ANR	367784	CallExpression	getreg ( ao -> a [ 0 ] )		365897	0					
ANR	367785	Callee	getreg		365897	0					
ANR	367786	Identifier	getreg		365897	0					
ANR	367787	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367788	Argument	ao -> a [ 0 ]		365897	0					
ANR	367789	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367790	PtrMemberAccess	ao -> a		365897	0					
ANR	367791	Identifier	ao		365897	0					
ANR	367792	Identifier	a		365897	1					
ANR	367793	PrimaryExpression	0		365897	1					
ANR	367794	PrimaryExpression	20		365897	1					
ANR	367795	ExpressionStatement	ret = getnum ( ao -> a [ 1 ] )	6335:4:134909:134932	365897	66	True				
ANR	367796	AssignmentExpression	ret = getnum ( ao -> a [ 1 ] )		365897	0		=			
ANR	367797	Identifier	ret		365897	0					
ANR	367798	CallExpression	getnum ( ao -> a [ 1 ] )		365897	1					
ANR	367799	Callee	getnum		365897	0					
ANR	367800	Identifier	getnum		365897	0					
ANR	367801	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367802	Argument	ao -> a [ 1 ]		365897	0					
ANR	367803	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367804	PtrMemberAccess	ao -> a		365897	0					
ANR	367805	Identifier	ao		365897	0					
ANR	367806	Identifier	a		365897	1					
ANR	367807	PrimaryExpression	1		365897	1					
ANR	367808	ExpressionStatement	ao -> o |= 0x4003 | ret << 24	6337:4:134939:134966	365897	67	True				
ANR	367809	AssignmentExpression	ao -> o |= 0x4003 | ret << 24		365897	0		|=			
ANR	367810	PtrMemberAccess	ao -> o		365897	0					
ANR	367811	Identifier	ao		365897	0					
ANR	367812	Identifier	o		365897	1					
ANR	367813	InclusiveOrExpression	0x4003 | ret << 24		365897	1		|			
ANR	367814	PrimaryExpression	0x4003		365897	0					
ANR	367815	ShiftExpression	ret << 24		365897	1		<<			
ANR	367816	Identifier	ret		365897	0					
ANR	367817	PrimaryExpression	24		365897	1					
ANR	367818	ExpressionStatement	ao -> o |= ( ret & 0xf000 ) >> 4	6338:4:134972:135000	365897	68	True				
ANR	367819	AssignmentExpression	ao -> o |= ( ret & 0xf000 ) >> 4		365897	0		|=			
ANR	367820	PtrMemberAccess	ao -> o		365897	0					
ANR	367821	Identifier	ao		365897	0					
ANR	367822	Identifier	o		365897	1					
ANR	367823	ShiftExpression	( ret & 0xf000 ) >> 4		365897	1		>>			
ANR	367824	BitAndExpression	ret & 0xf000		365897	0		&			
ANR	367825	Identifier	ret		365897	0					
ANR	367826	PrimaryExpression	0xf000		365897	1					
ANR	367827	PrimaryExpression	4		365897	1					
ANR	367828	ExpressionStatement	ao -> o |= ( ret & 0xf00 ) << 8	6339:4:135006:135033	365897	69	True				
ANR	367829	AssignmentExpression	ao -> o |= ( ret & 0xf00 ) << 8		365897	0		|=			
ANR	367830	PtrMemberAccess	ao -> o		365897	0					
ANR	367831	Identifier	ao		365897	0					
ANR	367832	Identifier	o		365897	1					
ANR	367833	ShiftExpression	( ret & 0xf00 ) << 8		365897	1		<<			
ANR	367834	BitAndExpression	ret & 0xf00		365897	0		&			
ANR	367835	Identifier	ret		365897	0					
ANR	367836	PrimaryExpression	0xf00		365897	1					
ANR	367837	PrimaryExpression	8		365897	1					
ANR	367838	BreakStatement	break ;	6340:4:135039:135044	365897	70	True				
ANR	367839	Label	case TYPE_MUL :	6341:3:135049:135062	365897	71	True				
ANR	367840	Identifier	TYPE_MUL		365897	0					
ANR	367841	IfStatement	"if ( ! strcmpnull ( ao -> op , ""mul"" ) )"		365897	72					
ANR	367842	Condition	"! strcmpnull ( ao -> op , ""mul"" )"	6342:8:135072:135098	365897	0	True				
ANR	367843	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""mul"" )"		365897	0					
ANR	367844	UnaryOperator	!		365897	0					
ANR	367845	CallExpression	"strcmpnull ( ao -> op , ""mul"" )"		365897	1					
ANR	367846	Callee	strcmpnull		365897	0					
ANR	367847	Identifier	strcmpnull		365897	0					
ANR	367848	ArgumentList	ao -> op		365897	1					
ANR	367849	Argument	ao -> op		365897	0					
ANR	367850	PtrMemberAccess	ao -> op		365897	0					
ANR	367851	Identifier	ao		365897	0					
ANR	367852	Identifier	op		365897	1					
ANR	367853	Argument	"""mul"""		365897	1					
ANR	367854	PrimaryExpression	"""mul"""		365897	0					
ANR	367855	CompoundStatement		269:37:6506:6506	365897	1					
ANR	367856	ExpressionStatement	ret = getreg ( ao -> a [ 0 ] )	6343:5:135108:135131	365897	0	True				
ANR	367857	AssignmentExpression	ret = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	367858	Identifier	ret		365897	0					
ANR	367859	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	367860	Callee	getreg		365897	0					
ANR	367861	Identifier	getreg		365897	0					
ANR	367862	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367863	Argument	ao -> a [ 0 ]		365897	0					
ANR	367864	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367865	PtrMemberAccess	ao -> a		365897	0					
ANR	367866	Identifier	ao		365897	0					
ANR	367867	Identifier	a		365897	1					
ANR	367868	PrimaryExpression	0		365897	1					
ANR	367869	ExpressionStatement	a = getreg ( ao -> a [ 1 ] )	6344:5:135138:135159	365897	1	True				
ANR	367870	AssignmentExpression	a = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	367871	Identifier	a		365897	0					
ANR	367872	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	367873	Callee	getreg		365897	0					
ANR	367874	Identifier	getreg		365897	0					
ANR	367875	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367876	Argument	ao -> a [ 1 ]		365897	0					
ANR	367877	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367878	PtrMemberAccess	ao -> a		365897	0					
ANR	367879	Identifier	ao		365897	0					
ANR	367880	Identifier	a		365897	1					
ANR	367881	PrimaryExpression	1		365897	1					
ANR	367882	ExpressionStatement	b = getreg ( ao -> a [ 2 ] )	6345:5:135166:135187	365897	2	True				
ANR	367883	AssignmentExpression	b = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	367884	Identifier	b		365897	0					
ANR	367885	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	367886	Callee	getreg		365897	0					
ANR	367887	Identifier	getreg		365897	0					
ANR	367888	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	367889	Argument	ao -> a [ 2 ]		365897	0					
ANR	367890	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367891	PtrMemberAccess	ao -> a		365897	0					
ANR	367892	Identifier	ao		365897	0					
ANR	367893	Identifier	a		365897	1					
ANR	367894	PrimaryExpression	2		365897	1					
ANR	367895	IfStatement	if ( b == - 1 )		365897	3					
ANR	367896	Condition	b == - 1	6346:9:135198:135204	365897	0	True				
ANR	367897	EqualityExpression	b == - 1		365897	0		==			
ANR	367898	Identifier	b		365897	0					
ANR	367899	UnaryOperationExpression	- 1		365897	1					
ANR	367900	UnaryOperator	-		365897	0					
ANR	367901	PrimaryExpression	1		365897	1					
ANR	367902	CompoundStatement		273:18:6612:6612	365897	1					
ANR	367903	ExpressionStatement	b = a	6347:6:135215:135220	365897	0	True				
ANR	367904	AssignmentExpression	b = a		365897	0		=			
ANR	367905	Identifier	b		365897	0					
ANR	367906	Identifier	a		365897	1					
ANR	367907	ExpressionStatement	a = ret	6348:6:135228:135235	365897	1	True				
ANR	367908	AssignmentExpression	a = ret		365897	0		=			
ANR	367909	Identifier	a		365897	0					
ANR	367910	Identifier	ret		365897	1					
ANR	367911	IfStatement	if ( ret == - 1 || a == - 1 )		365897	4					
ANR	367912	Condition	ret == - 1 || a == - 1	6350:9:135253:135272	365897	0	True				
ANR	367913	OrExpression	ret == - 1 || a == - 1		365897	0		||			
ANR	367914	EqualityExpression	ret == - 1		365897	0		==			
ANR	367915	Identifier	ret		365897	0					
ANR	367916	UnaryOperationExpression	- 1		365897	1					
ANR	367917	UnaryOperator	-		365897	0					
ANR	367918	PrimaryExpression	1		365897	1					
ANR	367919	EqualityExpression	a == - 1		365897	1		==			
ANR	367920	Identifier	a		365897	0					
ANR	367921	UnaryOperationExpression	- 1		365897	1					
ANR	367922	UnaryOperator	-		365897	0					
ANR	367923	PrimaryExpression	1		365897	1					
ANR	367924	CompoundStatement		277:31:6680:6680	365897	1					
ANR	367925	ReturnStatement	return 0 ;	6351:6:135283:135291	365897	0	True				
ANR	367926	PrimaryExpression	0		365897	0					
ANR	367927	ExpressionStatement	ao -> o |= ret << 8	6353:5:135305:135322	365897	5	True				
ANR	367928	AssignmentExpression	ao -> o |= ret << 8		365897	0		|=			
ANR	367929	PtrMemberAccess	ao -> o		365897	0					
ANR	367930	Identifier	ao		365897	0					
ANR	367931	Identifier	o		365897	1					
ANR	367932	ShiftExpression	ret << 8		365897	1		<<			
ANR	367933	Identifier	ret		365897	0					
ANR	367934	PrimaryExpression	8		365897	1					
ANR	367935	ExpressionStatement	ao -> o |= a << 24	6354:5:135329:135345	365897	6	True				
ANR	367936	AssignmentExpression	ao -> o |= a << 24		365897	0		|=			
ANR	367937	PtrMemberAccess	ao -> o		365897	0					
ANR	367938	Identifier	ao		365897	0					
ANR	367939	Identifier	o		365897	1					
ANR	367940	ShiftExpression	a << 24		365897	1		<<			
ANR	367941	Identifier	a		365897	0					
ANR	367942	PrimaryExpression	24		365897	1					
ANR	367943	ExpressionStatement	ao -> o |= b << 16	6355:5:135352:135368	365897	7	True				
ANR	367944	AssignmentExpression	ao -> o |= b << 16		365897	0		|=			
ANR	367945	PtrMemberAccess	ao -> o		365897	0					
ANR	367946	Identifier	ao		365897	0					
ANR	367947	Identifier	o		365897	1					
ANR	367948	ShiftExpression	b << 16		365897	1		<<			
ANR	367949	Identifier	b		365897	0					
ANR	367950	PrimaryExpression	16		365897	1					
ANR	367951	ElseStatement	else		365897	0					
ANR	367952	CompoundStatement		283:11:6786:6786	365897	0					
ANR	367953	ExpressionStatement	low = getreg ( ao -> a [ 0 ] )	6357:5:135388:135411	365897	0	True				
ANR	367954	AssignmentExpression	low = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	367955	Identifier	low		365897	0					
ANR	367956	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	367957	Callee	getreg		365897	0					
ANR	367958	Identifier	getreg		365897	0					
ANR	367959	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	367960	Argument	ao -> a [ 0 ]		365897	0					
ANR	367961	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	367962	PtrMemberAccess	ao -> a		365897	0					
ANR	367963	Identifier	ao		365897	0					
ANR	367964	Identifier	a		365897	1					
ANR	367965	PrimaryExpression	0		365897	1					
ANR	367966	ExpressionStatement	high = getreg ( ao -> a [ 1 ] )	6358:5:135418:135442	365897	1	True				
ANR	367967	AssignmentExpression	high = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	367968	Identifier	high		365897	0					
ANR	367969	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	367970	Callee	getreg		365897	0					
ANR	367971	Identifier	getreg		365897	0					
ANR	367972	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	367973	Argument	ao -> a [ 1 ]		365897	0					
ANR	367974	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	367975	PtrMemberAccess	ao -> a		365897	0					
ANR	367976	Identifier	ao		365897	0					
ANR	367977	Identifier	a		365897	1					
ANR	367978	PrimaryExpression	1		365897	1					
ANR	367979	ExpressionStatement	a = getreg ( ao -> a [ 2 ] )	6359:5:135449:135470	365897	2	True				
ANR	367980	AssignmentExpression	a = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	367981	Identifier	a		365897	0					
ANR	367982	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	367983	Callee	getreg		365897	0					
ANR	367984	Identifier	getreg		365897	0					
ANR	367985	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	367986	Argument	ao -> a [ 2 ]		365897	0					
ANR	367987	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	367988	PtrMemberAccess	ao -> a		365897	0					
ANR	367989	Identifier	ao		365897	0					
ANR	367990	Identifier	a		365897	1					
ANR	367991	PrimaryExpression	2		365897	1					
ANR	367992	ExpressionStatement	b = getreg ( ao -> a [ 3 ] )	6360:5:135477:135498	365897	3	True				
ANR	367993	AssignmentExpression	b = getreg ( ao -> a [ 3 ] )		365897	0		=			
ANR	367994	Identifier	b		365897	0					
ANR	367995	CallExpression	getreg ( ao -> a [ 3 ] )		365897	1					
ANR	367996	Callee	getreg		365897	0					
ANR	367997	Identifier	getreg		365897	0					
ANR	367998	ArgumentList	ao -> a [ 3 ]		365897	1					
ANR	367999	Argument	ao -> a [ 3 ]		365897	0					
ANR	368000	ArrayIndexing	ao -> a [ 3 ]		365897	0					
ANR	368001	PtrMemberAccess	ao -> a		365897	0					
ANR	368002	Identifier	ao		365897	0					
ANR	368003	Identifier	a		365897	1					
ANR	368004	PrimaryExpression	3		365897	1					
ANR	368005	IfStatement	if ( low == - 1 || high == - 1 || a == - 1 || b == - 1 )		365897	4					
ANR	368006	Condition	low == - 1 || high == - 1 || a == - 1 || b == - 1	6361:9:135509:135553	365897	0	True				
ANR	368007	OrExpression	low == - 1 || high == - 1 || a == - 1 || b == - 1		365897	0		||			
ANR	368008	EqualityExpression	low == - 1		365897	0		==			
ANR	368009	Identifier	low		365897	0					
ANR	368010	UnaryOperationExpression	- 1		365897	1					
ANR	368011	UnaryOperator	-		365897	0					
ANR	368012	PrimaryExpression	1		365897	1					
ANR	368013	OrExpression	high == - 1 || a == - 1 || b == - 1		365897	1		||			
ANR	368014	EqualityExpression	high == - 1		365897	0		==			
ANR	368015	Identifier	high		365897	0					
ANR	368016	UnaryOperationExpression	- 1		365897	1					
ANR	368017	UnaryOperator	-		365897	0					
ANR	368018	PrimaryExpression	1		365897	1					
ANR	368019	OrExpression	a == - 1 || b == - 1		365897	1		||			
ANR	368020	EqualityExpression	a == - 1		365897	0		==			
ANR	368021	Identifier	a		365897	0					
ANR	368022	UnaryOperationExpression	- 1		365897	1					
ANR	368023	UnaryOperator	-		365897	0					
ANR	368024	PrimaryExpression	1		365897	1					
ANR	368025	EqualityExpression	b == - 1		365897	1		==			
ANR	368026	Identifier	b		365897	0					
ANR	368027	UnaryOperationExpression	- 1		365897	1					
ANR	368028	UnaryOperator	-		365897	0					
ANR	368029	PrimaryExpression	1		365897	1					
ANR	368030	CompoundStatement		288:56:6961:6961	365897	1					
ANR	368031	ReturnStatement	return 0 ;	6362:6:135564:135572	365897	0	True				
ANR	368032	PrimaryExpression	0		365897	0					
ANR	368033	IfStatement	"if ( ! strcmpnull ( ao -> op , ""smlal"" ) )"		365897	5					
ANR	368034	Condition	"! strcmpnull ( ao -> op , ""smlal"" )"	6364:9:135590:135618	365897	0	True				
ANR	368035	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""smlal"" )"		365897	0					
ANR	368036	UnaryOperator	!		365897	0					
ANR	368037	CallExpression	"strcmpnull ( ao -> op , ""smlal"" )"		365897	1					
ANR	368038	Callee	strcmpnull		365897	0					
ANR	368039	Identifier	strcmpnull		365897	0					
ANR	368040	ArgumentList	ao -> op		365897	1					
ANR	368041	Argument	ao -> op		365897	0					
ANR	368042	PtrMemberAccess	ao -> op		365897	0					
ANR	368043	Identifier	ao		365897	0					
ANR	368044	Identifier	op		365897	1					
ANR	368045	Argument	"""smlal"""		365897	1					
ANR	368046	PrimaryExpression	"""smlal"""		365897	0					
ANR	368047	CompoundStatement		291:40:7026:7026	365897	1					
ANR	368048	ExpressionStatement	ao -> o |= low << 20	6365:6:135629:135647	365897	0	True				
ANR	368049	AssignmentExpression	ao -> o |= low << 20		365897	0		|=			
ANR	368050	PtrMemberAccess	ao -> o		365897	0					
ANR	368051	Identifier	ao		365897	0					
ANR	368052	Identifier	o		365897	1					
ANR	368053	ShiftExpression	low << 20		365897	1		<<			
ANR	368054	Identifier	low		365897	0					
ANR	368055	PrimaryExpression	20		365897	1					
ANR	368056	ExpressionStatement	ao -> o |= high << 8	6366:6:135655:135673	365897	1	True				
ANR	368057	AssignmentExpression	ao -> o |= high << 8		365897	0		|=			
ANR	368058	PtrMemberAccess	ao -> o		365897	0					
ANR	368059	Identifier	ao		365897	0					
ANR	368060	Identifier	o		365897	1					
ANR	368061	ShiftExpression	high << 8		365897	1		<<			
ANR	368062	Identifier	high		365897	0					
ANR	368063	PrimaryExpression	8		365897	1					
ANR	368064	ExpressionStatement	ao -> o |= a << 24	6367:6:135681:135697	365897	2	True				
ANR	368065	AssignmentExpression	ao -> o |= a << 24		365897	0		|=			
ANR	368066	PtrMemberAccess	ao -> o		365897	0					
ANR	368067	Identifier	ao		365897	0					
ANR	368068	Identifier	o		365897	1					
ANR	368069	ShiftExpression	a << 24		365897	1		<<			
ANR	368070	Identifier	a		365897	0					
ANR	368071	PrimaryExpression	24		365897	1					
ANR	368072	ExpressionStatement	ao -> o |= b << 16	6368:6:135705:135721	365897	3	True				
ANR	368073	AssignmentExpression	ao -> o |= b << 16		365897	0		|=			
ANR	368074	PtrMemberAccess	ao -> o		365897	0					
ANR	368075	Identifier	ao		365897	0					
ANR	368076	Identifier	o		365897	1					
ANR	368077	ShiftExpression	b << 16		365897	1		<<			
ANR	368078	Identifier	b		365897	0					
ANR	368079	PrimaryExpression	16		365897	1					
ANR	368080	ElseStatement	else		365897	0					
ANR	368081	IfStatement	"if ( ! strncmp ( ao -> op , ""smla"" , 4 ) )"		365897	0					
ANR	368082	Condition	"! strncmp ( ao -> op , ""smla"" , 4 )"	6369:16:135739:135766	365897	0	True				
ANR	368083	UnaryOperationExpression	"! strncmp ( ao -> op , ""smla"" , 4 )"		365897	0					
ANR	368084	UnaryOperator	!		365897	0					
ANR	368085	CallExpression	"strncmp ( ao -> op , ""smla"" , 4 )"		365897	1					
ANR	368086	Callee	strncmp		365897	0					
ANR	368087	Identifier	strncmp		365897	0					
ANR	368088	ArgumentList	ao -> op		365897	1					
ANR	368089	Argument	ao -> op		365897	0					
ANR	368090	PtrMemberAccess	ao -> op		365897	0					
ANR	368091	Identifier	ao		365897	0					
ANR	368092	Identifier	op		365897	1					
ANR	368093	Argument	"""smla"""		365897	1					
ANR	368094	PrimaryExpression	"""smla"""		365897	0					
ANR	368095	Argument	4		365897	2					
ANR	368096	PrimaryExpression	4		365897	0					
ANR	368097	CompoundStatement		296:46:7174:7174	365897	1					
ANR	368098	IfStatement	if ( low > 14 || high > 14 || a > 14 )		365897	0					
ANR	368099	Condition	low > 14 || high > 14 || a > 14	6370:10:135781:135811	365897	0	True				
ANR	368100	OrExpression	low > 14 || high > 14 || a > 14		365897	0		||			
ANR	368101	RelationalExpression	low > 14		365897	0		>			
ANR	368102	Identifier	low		365897	0					
ANR	368103	PrimaryExpression	14		365897	1					
ANR	368104	OrExpression	high > 14 || a > 14		365897	1		||			
ANR	368105	RelationalExpression	high > 14		365897	0		>			
ANR	368106	Identifier	high		365897	0					
ANR	368107	PrimaryExpression	14		365897	1					
ANR	368108	RelationalExpression	a > 14		365897	1		>			
ANR	368109	Identifier	a		365897	0					
ANR	368110	PrimaryExpression	14		365897	1					
ANR	368111	CompoundStatement		297:43:7219:7219	365897	1					
ANR	368112	ReturnStatement	return 0 ;	6371:7:135823:135831	365897	0	True				
ANR	368113	PrimaryExpression	0		365897	0					
ANR	368114	ExpressionStatement	ao -> o |= low << 8	6373:6:135847:135864	365897	1	True				
ANR	368115	AssignmentExpression	ao -> o |= low << 8		365897	0		|=			
ANR	368116	PtrMemberAccess	ao -> o		365897	0					
ANR	368117	Identifier	ao		365897	0					
ANR	368118	Identifier	o		365897	1					
ANR	368119	ShiftExpression	low << 8		365897	1		<<			
ANR	368120	Identifier	low		365897	0					
ANR	368121	PrimaryExpression	8		365897	1					
ANR	368122	ExpressionStatement	ao -> o |= high << 24	6374:6:135872:135891	365897	2	True				
ANR	368123	AssignmentExpression	ao -> o |= high << 24		365897	0		|=			
ANR	368124	PtrMemberAccess	ao -> o		365897	0					
ANR	368125	Identifier	ao		365897	0					
ANR	368126	Identifier	o		365897	1					
ANR	368127	ShiftExpression	high << 24		365897	1		<<			
ANR	368128	Identifier	high		365897	0					
ANR	368129	PrimaryExpression	24		365897	1					
ANR	368130	ExpressionStatement	ao -> o |= a << 16	6375:6:135899:135915	365897	3	True				
ANR	368131	AssignmentExpression	ao -> o |= a << 16		365897	0		|=			
ANR	368132	PtrMemberAccess	ao -> o		365897	0					
ANR	368133	Identifier	ao		365897	0					
ANR	368134	Identifier	o		365897	1					
ANR	368135	ShiftExpression	a << 16		365897	1		<<			
ANR	368136	Identifier	a		365897	0					
ANR	368137	PrimaryExpression	16		365897	1					
ANR	368138	ExpressionStatement	ao -> o |= b << 20	6376:6:135923:135939	365897	4	True				
ANR	368139	AssignmentExpression	ao -> o |= b << 20		365897	0		|=			
ANR	368140	PtrMemberAccess	ao -> o		365897	0					
ANR	368141	Identifier	ao		365897	0					
ANR	368142	Identifier	o		365897	1					
ANR	368143	ShiftExpression	b << 20		365897	1		<<			
ANR	368144	Identifier	b		365897	0					
ANR	368145	PrimaryExpression	20		365897	1					
ANR	368146	BreakStatement	break ;	6377:6:135947:135952	365897	5	True				
ANR	368147	ElseStatement	else		365897	0					
ANR	368148	CompoundStatement		305:12:7371:7371	365897	0					
ANR	368149	ExpressionStatement	ao -> o |= low << 20	6379:6:135974:135992	365897	0	True				
ANR	368150	AssignmentExpression	ao -> o |= low << 20		365897	0		|=			
ANR	368151	PtrMemberAccess	ao -> o		365897	0					
ANR	368152	Identifier	ao		365897	0					
ANR	368153	Identifier	o		365897	1					
ANR	368154	ShiftExpression	low << 20		365897	1		<<			
ANR	368155	Identifier	low		365897	0					
ANR	368156	PrimaryExpression	20		365897	1					
ANR	368157	ExpressionStatement	ao -> o |= high << 8	6380:6:136000:136018	365897	1	True				
ANR	368158	AssignmentExpression	ao -> o |= high << 8		365897	0		|=			
ANR	368159	PtrMemberAccess	ao -> o		365897	0					
ANR	368160	Identifier	ao		365897	0					
ANR	368161	Identifier	o		365897	1					
ANR	368162	ShiftExpression	high << 8		365897	1		<<			
ANR	368163	Identifier	high		365897	0					
ANR	368164	PrimaryExpression	8		365897	1					
ANR	368165	ExpressionStatement	ao -> o |= a << 24	6381:6:136026:136042	365897	2	True				
ANR	368166	AssignmentExpression	ao -> o |= a << 24		365897	0		|=			
ANR	368167	PtrMemberAccess	ao -> o		365897	0					
ANR	368168	Identifier	ao		365897	0					
ANR	368169	Identifier	o		365897	1					
ANR	368170	ShiftExpression	a << 24		365897	1		<<			
ANR	368171	Identifier	a		365897	0					
ANR	368172	PrimaryExpression	24		365897	1					
ANR	368173	ExpressionStatement	ao -> o |= b << 16	6382:6:136050:136066	365897	3	True				
ANR	368174	AssignmentExpression	ao -> o |= b << 16		365897	0		|=			
ANR	368175	PtrMemberAccess	ao -> o		365897	0					
ANR	368176	Identifier	ao		365897	0					
ANR	368177	Identifier	o		365897	1					
ANR	368178	ShiftExpression	b << 16		365897	1		<<			
ANR	368179	Identifier	b		365897	0					
ANR	368180	PrimaryExpression	16		365897	1					
ANR	368181	BreakStatement	break ;	6385:4:136085:136090	365897	73	True				
ANR	368182	Label	case TYPE_TST :	6386:3:136095:136108	365897	74	True				
ANR	368183	Identifier	TYPE_TST		365897	0					
ANR	368184	ExpressionStatement	a = getreg ( ao -> a [ 0 ] )	6387:4:136114:136135	365897	75	True				
ANR	368185	AssignmentExpression	a = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	368186	Identifier	a		365897	0					
ANR	368187	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	368188	Callee	getreg		365897	0					
ANR	368189	Identifier	getreg		365897	0					
ANR	368190	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	368191	Argument	ao -> a [ 0 ]		365897	0					
ANR	368192	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368193	PtrMemberAccess	ao -> a		365897	0					
ANR	368194	Identifier	ao		365897	0					
ANR	368195	Identifier	a		365897	1					
ANR	368196	PrimaryExpression	0		365897	1					
ANR	368197	ExpressionStatement	b = getreg ( ao -> a [ 1 ] )	6388:4:136141:136162	365897	76	True				
ANR	368198	AssignmentExpression	b = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	368199	Identifier	b		365897	0					
ANR	368200	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	368201	Callee	getreg		365897	0					
ANR	368202	Identifier	getreg		365897	0					
ANR	368203	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	368204	Argument	ao -> a [ 1 ]		365897	0					
ANR	368205	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	368206	PtrMemberAccess	ao -> a		365897	0					
ANR	368207	Identifier	ao		365897	0					
ANR	368208	Identifier	a		365897	1					
ANR	368209	PrimaryExpression	1		365897	1					
ANR	368210	IfStatement	if ( b == - 1 )		365897	77					
ANR	368211	Condition	b == - 1	6389:8:136172:136178	365897	0	True				
ANR	368212	EqualityExpression	b == - 1		365897	0		==			
ANR	368213	Identifier	b		365897	0					
ANR	368214	UnaryOperationExpression	- 1		365897	1					
ANR	368215	UnaryOperator	-		365897	0					
ANR	368216	PrimaryExpression	1		365897	1					
ANR	368217	CompoundStatement		317:5:7593:7601	365897	1					
ANR	368218	IdentifierDeclStatement	"int y , z ;"	6390:5:136188:136196	365897	0	True				
ANR	368219	IdentifierDecl	y		365897	0					
ANR	368220	IdentifierDeclType	int		365897	0					
ANR	368221	Identifier	y		365897	1					
ANR	368222	IdentifierDecl	z		365897	1					
ANR	368223	IdentifierDeclType	int		365897	0					
ANR	368224	Identifier	z		365897	1					
ANR	368225	ExpressionStatement	b = getnum ( ao -> a [ 1 ] )	6391:5:136203:136224	365897	1	True				
ANR	368226	AssignmentExpression	b = getnum ( ao -> a [ 1 ] )		365897	0		=			
ANR	368227	Identifier	b		365897	0					
ANR	368228	CallExpression	getnum ( ao -> a [ 1 ] )		365897	1					
ANR	368229	Callee	getnum		365897	0					
ANR	368230	Identifier	getnum		365897	0					
ANR	368231	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	368232	Argument	ao -> a [ 1 ]		365897	0					
ANR	368233	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	368234	PtrMemberAccess	ao -> a		365897	0					
ANR	368235	Identifier	ao		365897	0					
ANR	368236	Identifier	a		365897	1					
ANR	368237	PrimaryExpression	1		365897	1					
ANR	368238	IfStatement	if ( b >= 0 && b <= 0xff )		365897	2					
ANR	368239	Condition	b >= 0 && b <= 0xff	6392:9:136235:136253	365897	0	True				
ANR	368240	AndExpression	b >= 0 && b <= 0xff		365897	0		&&			
ANR	368241	RelationalExpression	b >= 0		365897	0		>=			
ANR	368242	Identifier	b		365897	0					
ANR	368243	PrimaryExpression	0		365897	1					
ANR	368244	RelationalExpression	b <= 0xff		365897	1		<=			
ANR	368245	Identifier	b		365897	0					
ANR	368246	PrimaryExpression	0xff		365897	1					
ANR	368247	CompoundStatement		319:30:7661:7661	365897	1					
ANR	368248	ExpressionStatement	ao -> o = 0x50e3	6393:6:136264:136278	365897	0	True				
ANR	368249	AssignmentExpression	ao -> o = 0x50e3		365897	0		=			
ANR	368250	PtrMemberAccess	ao -> o		365897	0					
ANR	368251	Identifier	ao		365897	0					
ANR	368252	Identifier	o		365897	1					
ANR	368253	PrimaryExpression	0x50e3		365897	1					
ANR	368254	ExpressionStatement	ao -> o |= ( a << 8 )	6395:6:136336:136353	365897	1	True				
ANR	368255	AssignmentExpression	ao -> o |= ( a << 8 )		365897	0		|=			
ANR	368256	PtrMemberAccess	ao -> o		365897	0					
ANR	368257	Identifier	ao		365897	0					
ANR	368258	Identifier	o		365897	1					
ANR	368259	ShiftExpression	a << 8		365897	1		<<			
ANR	368260	Identifier	a		365897	0					
ANR	368261	PrimaryExpression	8		365897	1					
ANR	368262	ExpressionStatement	ao -> o |= ( ( b & 0xff ) << 24 )	6396:6:136361:136388	365897	2	True				
ANR	368263	AssignmentExpression	ao -> o |= ( ( b & 0xff ) << 24 )		365897	0		|=			
ANR	368264	PtrMemberAccess	ao -> o		365897	0					
ANR	368265	Identifier	ao		365897	0					
ANR	368266	Identifier	o		365897	1					
ANR	368267	ShiftExpression	( b & 0xff ) << 24		365897	1		<<			
ANR	368268	BitAndExpression	b & 0xff		365897	0		&			
ANR	368269	Identifier	b		365897	0					
ANR	368270	PrimaryExpression	0xff		365897	1					
ANR	368271	PrimaryExpression	24		365897	1					
ANR	368272	ElseStatement	else		365897	0					
ANR	368273	IfStatement	"if ( findyz ( b , & y , & z ) )"		365897	0					
ANR	368274	Condition	"findyz ( b , & y , & z )"	6398:9:136411:136428	365897	0	True				
ANR	368275	CallExpression	"findyz ( b , & y , & z )"		365897	0					
ANR	368276	Callee	findyz		365897	0					
ANR	368277	Identifier	findyz		365897	0					
ANR	368278	ArgumentList	b		365897	1					
ANR	368279	Argument	b		365897	0					
ANR	368280	Identifier	b		365897	0					
ANR	368281	Argument	& y		365897	1					
ANR	368282	UnaryOperationExpression	& y		365897	0					
ANR	368283	UnaryOperator	&		365897	0					
ANR	368284	Identifier	y		365897	1					
ANR	368285	Argument	& z		365897	2					
ANR	368286	UnaryOperationExpression	& z		365897	0					
ANR	368287	UnaryOperator	&		365897	0					
ANR	368288	Identifier	z		365897	1					
ANR	368289	CompoundStatement		325:29:7836:7836	365897	1					
ANR	368290	ExpressionStatement	ao -> o = 0x50e3	6399:6:136439:136453	365897	0	True				
ANR	368291	AssignmentExpression	ao -> o = 0x50e3		365897	0		=			
ANR	368292	PtrMemberAccess	ao -> o		365897	0					
ANR	368293	Identifier	ao		365897	0					
ANR	368294	Identifier	o		365897	1					
ANR	368295	PrimaryExpression	0x50e3		365897	1					
ANR	368296	ExpressionStatement	ao -> o |= ( y << 24 )	6400:6:136461:136479	365897	1	True				
ANR	368297	AssignmentExpression	ao -> o |= ( y << 24 )		365897	0		|=			
ANR	368298	PtrMemberAccess	ao -> o		365897	0					
ANR	368299	Identifier	ao		365897	0					
ANR	368300	Identifier	o		365897	1					
ANR	368301	ShiftExpression	y << 24		365897	1		<<			
ANR	368302	Identifier	y		365897	0					
ANR	368303	PrimaryExpression	24		365897	1					
ANR	368304	ExpressionStatement	ao -> o |= ( z << 16 )	6401:6:136487:136505	365897	2	True				
ANR	368305	AssignmentExpression	ao -> o |= ( z << 16 )		365897	0		|=			
ANR	368306	PtrMemberAccess	ao -> o		365897	0					
ANR	368307	Identifier	ao		365897	0					
ANR	368308	Identifier	o		365897	1					
ANR	368309	ShiftExpression	z << 16		365897	1		<<			
ANR	368310	Identifier	z		365897	0					
ANR	368311	PrimaryExpression	16		365897	1					
ANR	368312	ElseStatement	else		365897	0					
ANR	368313	CompoundStatement		329:12:7924:7924	365897	0					
ANR	368314	ExpressionStatement	"eprintf ( ""Parameter %d out0x3000a0e1 of range (0-255)\\n"" , ( int ) b )"	6403:6:136527:136592	365897	0	True				
ANR	368315	CallExpression	"eprintf ( ""Parameter %d out0x3000a0e1 of range (0-255)\\n"" , ( int ) b )"		365897	0					
ANR	368316	Callee	eprintf		365897	0					
ANR	368317	Identifier	eprintf		365897	0					
ANR	368318	ArgumentList	"""Parameter %d out0x3000a0e1 of range (0-255)\\n"""		365897	1					
ANR	368319	Argument	"""Parameter %d out0x3000a0e1 of range (0-255)\\n"""		365897	0					
ANR	368320	PrimaryExpression	"""Parameter %d out0x3000a0e1 of range (0-255)\\n"""		365897	0					
ANR	368321	Argument	( int ) b		365897	1					
ANR	368322	CastExpression	( int ) b		365897	0					
ANR	368323	CastTarget	int		365897	0					
ANR	368324	Identifier	b		365897	1					
ANR	368325	ReturnStatement	return 0 ;	6404:6:136600:136608	365897	1	True				
ANR	368326	PrimaryExpression	0		365897	0					
ANR	368327	ElseStatement	else		365897	0					
ANR	368328	CompoundStatement		333:11:8033:8033	365897	0					
ANR	368329	ExpressionStatement	ao -> o |= ( a << 8 )	6407:5:136635:136652	365897	0	True				
ANR	368330	AssignmentExpression	ao -> o |= ( a << 8 )		365897	0		|=			
ANR	368331	PtrMemberAccess	ao -> o		365897	0					
ANR	368332	Identifier	ao		365897	0					
ANR	368333	Identifier	o		365897	1					
ANR	368334	ShiftExpression	a << 8		365897	1		<<			
ANR	368335	Identifier	a		365897	0					
ANR	368336	PrimaryExpression	8		365897	1					
ANR	368337	ExpressionStatement	ao -> o |= ( b << 24 )	6408:5:136659:136677	365897	1	True				
ANR	368338	AssignmentExpression	ao -> o |= ( b << 24 )		365897	0		|=			
ANR	368339	PtrMemberAccess	ao -> o		365897	0					
ANR	368340	Identifier	ao		365897	0					
ANR	368341	Identifier	o		365897	1					
ANR	368342	ShiftExpression	b << 24		365897	1		<<			
ANR	368343	Identifier	b		365897	0					
ANR	368344	PrimaryExpression	24		365897	1					
ANR	368345	IfStatement	if ( ao -> a [ 2 ] )		365897	2					
ANR	368346	Condition	ao -> a [ 2 ]	6409:9:136688:136695	365897	0	True				
ANR	368347	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	368348	PtrMemberAccess	ao -> a		365897	0					
ANR	368349	Identifier	ao		365897	0					
ANR	368350	Identifier	a		365897	1					
ANR	368351	PrimaryExpression	2		365897	1					
ANR	368352	CompoundStatement		336:19:8103:8103	365897	1					
ANR	368353	ExpressionStatement	ao -> o |= getshift ( ao -> a [ 2 ] )	6410:6:136706:136734	365897	0	True				
ANR	368354	AssignmentExpression	ao -> o |= getshift ( ao -> a [ 2 ] )		365897	0		|=			
ANR	368355	PtrMemberAccess	ao -> o		365897	0					
ANR	368356	Identifier	ao		365897	0					
ANR	368357	Identifier	o		365897	1					
ANR	368358	CallExpression	getshift ( ao -> a [ 2 ] )		365897	1					
ANR	368359	Callee	getshift		365897	0					
ANR	368360	Identifier	getshift		365897	0					
ANR	368361	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	368362	Argument	ao -> a [ 2 ]		365897	0					
ANR	368363	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	368364	PtrMemberAccess	ao -> a		365897	0					
ANR	368365	Identifier	ao		365897	0					
ANR	368366	Identifier	a		365897	1					
ANR	368367	PrimaryExpression	2		365897	1					
ANR	368368	IfStatement	if ( ao -> a [ 2 ] )		365897	78					
ANR	368369	Condition	ao -> a [ 2 ]	6413:8:136757:136764	365897	0	True				
ANR	368370	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	368371	PtrMemberAccess	ao -> a		365897	0					
ANR	368372	Identifier	ao		365897	0					
ANR	368373	Identifier	a		365897	1					
ANR	368374	PrimaryExpression	2		365897	1					
ANR	368375	CompoundStatement		341:5:8179:8204	365897	1					
ANR	368376	IdentifierDeclStatement	int n = getnum ( ao -> a [ 2 ] ) ;	6414:5:136774:136799	365897	0	True				
ANR	368377	IdentifierDecl	n = getnum ( ao -> a [ 2 ] )		365897	0					
ANR	368378	IdentifierDeclType	int		365897	0					
ANR	368379	Identifier	n		365897	1					
ANR	368380	AssignmentExpression	n = getnum ( ao -> a [ 2 ] )		365897	2		=			
ANR	368381	Identifier	n		365897	0					
ANR	368382	CallExpression	getnum ( ao -> a [ 2 ] )		365897	1					
ANR	368383	Callee	getnum		365897	0					
ANR	368384	Identifier	getnum		365897	0					
ANR	368385	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	368386	Argument	ao -> a [ 2 ]		365897	0					
ANR	368387	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	368388	PtrMemberAccess	ao -> a		365897	0					
ANR	368389	Identifier	ao		365897	0					
ANR	368390	Identifier	a		365897	1					
ANR	368391	PrimaryExpression	2		365897	1					
ANR	368392	IfStatement	if ( n & 1 )		365897	1					
ANR	368393	Condition	n & 1	6415:9:136810:136814	365897	0	True				
ANR	368394	BitAndExpression	n & 1		365897	0		&			
ANR	368395	Identifier	n		365897	0					
ANR	368396	PrimaryExpression	1		365897	1					
ANR	368397	CompoundStatement		342:16:8222:8222	365897	1					
ANR	368398	ExpressionStatement	"eprintf ( ""Invalid multiplier\\n"" )"	6416:6:136825:136857	365897	0	True				
ANR	368399	CallExpression	"eprintf ( ""Invalid multiplier\\n"" )"		365897	0					
ANR	368400	Callee	eprintf		365897	0					
ANR	368401	Identifier	eprintf		365897	0					
ANR	368402	ArgumentList	"""Invalid multiplier\\n"""		365897	1					
ANR	368403	Argument	"""Invalid multiplier\\n"""		365897	0					
ANR	368404	PrimaryExpression	"""Invalid multiplier\\n"""		365897	0					
ANR	368405	ReturnStatement	return 0 ;	6417:6:136865:136873	365897	1	True				
ANR	368406	PrimaryExpression	0		365897	0					
ANR	368407	ExpressionStatement	ao -> o |= ( n >> 1 ) << 16	6419:5:136887:136910	365897	2	True				
ANR	368408	AssignmentExpression	ao -> o |= ( n >> 1 ) << 16		365897	0		|=			
ANR	368409	PtrMemberAccess	ao -> o		365897	0					
ANR	368410	Identifier	ao		365897	0					
ANR	368411	Identifier	o		365897	1					
ANR	368412	ShiftExpression	( n >> 1 ) << 16		365897	1		<<			
ANR	368413	ShiftExpression	n >> 1		365897	0		>>			
ANR	368414	Identifier	n		365897	0					
ANR	368415	PrimaryExpression	1		365897	1					
ANR	368416	PrimaryExpression	16		365897	1					
ANR	368417	BreakStatement	break ;	6421:4:136922:136927	365897	79	True				
ANR	368418	Label	case TYPE_SHFT :	6422:3:136932:136946	365897	80	True				
ANR	368419	Identifier	TYPE_SHFT		365897	0					
ANR	368420	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6423:4:136952:136975	365897	81	True				
ANR	368421	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	368422	Identifier	reg		365897	0					
ANR	368423	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	368424	Callee	getreg		365897	0					
ANR	368425	Identifier	getreg		365897	0					
ANR	368426	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	368427	Argument	ao -> a [ 2 ]		365897	0					
ANR	368428	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	368429	PtrMemberAccess	ao -> a		365897	0					
ANR	368430	Identifier	ao		365897	0					
ANR	368431	Identifier	a		365897	1					
ANR	368432	PrimaryExpression	2		365897	1					
ANR	368433	IfStatement	if ( reg == - 1 || reg > 14 )		365897	82					
ANR	368434	Condition	reg == - 1 || reg > 14	6424:8:136985:137005	365897	0	True				
ANR	368435	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368436	EqualityExpression	reg == - 1		365897	0		==			
ANR	368437	Identifier	reg		365897	0					
ANR	368438	UnaryOperationExpression	- 1		365897	1					
ANR	368439	UnaryOperator	-		365897	0					
ANR	368440	PrimaryExpression	1		365897	1					
ANR	368441	RelationalExpression	reg > 14		365897	1		>			
ANR	368442	Identifier	reg		365897	0					
ANR	368443	PrimaryExpression	14		365897	1					
ANR	368444	CompoundStatement		351:31:8413:8413	365897	1					
ANR	368445	ReturnStatement	return 0 ;	6425:5:137015:137023	365897	0	True				
ANR	368446	PrimaryExpression	0		365897	0					
ANR	368447	ExpressionStatement	ao -> o |= reg << 16	6427:4:137035:137053	365897	83	True				
ANR	368448	AssignmentExpression	ao -> o |= reg << 16		365897	0		|=			
ANR	368449	PtrMemberAccess	ao -> o		365897	0					
ANR	368450	Identifier	ao		365897	0					
ANR	368451	Identifier	o		365897	1					
ANR	368452	ShiftExpression	reg << 16		365897	1		<<			
ANR	368453	Identifier	reg		365897	0					
ANR	368454	PrimaryExpression	16		365897	1					
ANR	368455	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6429:4:137060:137083	365897	84	True				
ANR	368456	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	368457	Identifier	reg		365897	0					
ANR	368458	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	368459	Callee	getreg		365897	0					
ANR	368460	Identifier	getreg		365897	0					
ANR	368461	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	368462	Argument	ao -> a [ 0 ]		365897	0					
ANR	368463	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368464	PtrMemberAccess	ao -> a		365897	0					
ANR	368465	Identifier	ao		365897	0					
ANR	368466	Identifier	a		365897	1					
ANR	368467	PrimaryExpression	0		365897	1					
ANR	368468	IfStatement	if ( reg == - 1 || reg > 14 )		365897	85					
ANR	368469	Condition	reg == - 1 || reg > 14	6430:8:137093:137113	365897	0	True				
ANR	368470	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368471	EqualityExpression	reg == - 1		365897	0		==			
ANR	368472	Identifier	reg		365897	0					
ANR	368473	UnaryOperationExpression	- 1		365897	1					
ANR	368474	UnaryOperator	-		365897	0					
ANR	368475	PrimaryExpression	1		365897	1					
ANR	368476	RelationalExpression	reg > 14		365897	1		>			
ANR	368477	Identifier	reg		365897	0					
ANR	368478	PrimaryExpression	14		365897	1					
ANR	368479	CompoundStatement		357:31:8521:8521	365897	1					
ANR	368480	ReturnStatement	return 0 ;	6431:5:137123:137131	365897	0	True				
ANR	368481	PrimaryExpression	0		365897	0					
ANR	368482	ExpressionStatement	ao -> o |= reg << 20	6433:4:137143:137161	365897	86	True				
ANR	368483	AssignmentExpression	ao -> o |= reg << 20		365897	0		|=			
ANR	368484	PtrMemberAccess	ao -> o		365897	0					
ANR	368485	Identifier	ao		365897	0					
ANR	368486	Identifier	o		365897	1					
ANR	368487	ShiftExpression	reg << 20		365897	1		<<			
ANR	368488	Identifier	reg		365897	0					
ANR	368489	PrimaryExpression	20		365897	1					
ANR	368490	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6435:4:137168:137191	365897	87	True				
ANR	368491	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	368492	Identifier	reg		365897	0					
ANR	368493	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	368494	Callee	getreg		365897	0					
ANR	368495	Identifier	getreg		365897	0					
ANR	368496	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	368497	Argument	ao -> a [ 1 ]		365897	0					
ANR	368498	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	368499	PtrMemberAccess	ao -> a		365897	0					
ANR	368500	Identifier	ao		365897	0					
ANR	368501	Identifier	a		365897	1					
ANR	368502	PrimaryExpression	1		365897	1					
ANR	368503	IfStatement	if ( reg == - 1 || reg > 14 )		365897	88					
ANR	368504	Condition	reg == - 1 || reg > 14	6436:8:137201:137221	365897	0	True				
ANR	368505	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368506	EqualityExpression	reg == - 1		365897	0		==			
ANR	368507	Identifier	reg		365897	0					
ANR	368508	UnaryOperationExpression	- 1		365897	1					
ANR	368509	UnaryOperator	-		365897	0					
ANR	368510	PrimaryExpression	1		365897	1					
ANR	368511	RelationalExpression	reg > 14		365897	1		>			
ANR	368512	Identifier	reg		365897	0					
ANR	368513	PrimaryExpression	14		365897	1					
ANR	368514	CompoundStatement		363:31:8629:8629	365897	1					
ANR	368515	ReturnStatement	return 0 ;	6437:5:137231:137239	365897	0	True				
ANR	368516	PrimaryExpression	0		365897	0					
ANR	368517	ExpressionStatement	ao -> o |= reg << 24	6439:4:137251:137269	365897	89	True				
ANR	368518	AssignmentExpression	ao -> o |= reg << 24		365897	0		|=			
ANR	368519	PtrMemberAccess	ao -> o		365897	0					
ANR	368520	Identifier	ao		365897	0					
ANR	368521	Identifier	o		365897	1					
ANR	368522	ShiftExpression	reg << 24		365897	1		<<			
ANR	368523	Identifier	reg		365897	0					
ANR	368524	PrimaryExpression	24		365897	1					
ANR	368525	BreakStatement	break ;	6440:4:137275:137280	365897	90	True				
ANR	368526	Label	case TYPE_REV :	6441:3:137285:137298	365897	91	True				
ANR	368527	Identifier	TYPE_REV		365897	0					
ANR	368528	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6442:4:137304:137327	365897	92	True				
ANR	368529	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	368530	Identifier	reg		365897	0					
ANR	368531	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	368532	Callee	getreg		365897	0					
ANR	368533	Identifier	getreg		365897	0					
ANR	368534	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	368535	Argument	ao -> a [ 0 ]		365897	0					
ANR	368536	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368537	PtrMemberAccess	ao -> a		365897	0					
ANR	368538	Identifier	ao		365897	0					
ANR	368539	Identifier	a		365897	1					
ANR	368540	PrimaryExpression	0		365897	1					
ANR	368541	IfStatement	if ( reg == - 1 || reg > 14 )		365897	93					
ANR	368542	Condition	reg == - 1 || reg > 14	6443:8:137337:137357	365897	0	True				
ANR	368543	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368544	EqualityExpression	reg == - 1		365897	0		==			
ANR	368545	Identifier	reg		365897	0					
ANR	368546	UnaryOperationExpression	- 1		365897	1					
ANR	368547	UnaryOperator	-		365897	0					
ANR	368548	PrimaryExpression	1		365897	1					
ANR	368549	RelationalExpression	reg > 14		365897	1		>			
ANR	368550	Identifier	reg		365897	0					
ANR	368551	PrimaryExpression	14		365897	1					
ANR	368552	CompoundStatement		370:31:8765:8765	365897	1					
ANR	368553	ReturnStatement	return 0 ;	6444:5:137367:137375	365897	0	True				
ANR	368554	PrimaryExpression	0		365897	0					
ANR	368555	ExpressionStatement	ao -> o |= reg << 20	6446:4:137387:137405	365897	94	True				
ANR	368556	AssignmentExpression	ao -> o |= reg << 20		365897	0		|=			
ANR	368557	PtrMemberAccess	ao -> o		365897	0					
ANR	368558	Identifier	ao		365897	0					
ANR	368559	Identifier	o		365897	1					
ANR	368560	ShiftExpression	reg << 20		365897	1		<<			
ANR	368561	Identifier	reg		365897	0					
ANR	368562	PrimaryExpression	20		365897	1					
ANR	368563	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6448:4:137412:137435	365897	95	True				
ANR	368564	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	368565	Identifier	reg		365897	0					
ANR	368566	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	368567	Callee	getreg		365897	0					
ANR	368568	Identifier	getreg		365897	0					
ANR	368569	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	368570	Argument	ao -> a [ 1 ]		365897	0					
ANR	368571	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	368572	PtrMemberAccess	ao -> a		365897	0					
ANR	368573	Identifier	ao		365897	0					
ANR	368574	Identifier	a		365897	1					
ANR	368575	PrimaryExpression	1		365897	1					
ANR	368576	IfStatement	if ( reg == - 1 || reg > 14 )		365897	96					
ANR	368577	Condition	reg == - 1 || reg > 14	6449:8:137445:137465	365897	0	True				
ANR	368578	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368579	EqualityExpression	reg == - 1		365897	0		==			
ANR	368580	Identifier	reg		365897	0					
ANR	368581	UnaryOperationExpression	- 1		365897	1					
ANR	368582	UnaryOperator	-		365897	0					
ANR	368583	PrimaryExpression	1		365897	1					
ANR	368584	RelationalExpression	reg > 14		365897	1		>			
ANR	368585	Identifier	reg		365897	0					
ANR	368586	PrimaryExpression	14		365897	1					
ANR	368587	CompoundStatement		376:31:8873:8873	365897	1					
ANR	368588	ReturnStatement	return 0 ;	6450:5:137475:137483	365897	0	True				
ANR	368589	PrimaryExpression	0		365897	0					
ANR	368590	ExpressionStatement	ao -> o |= reg << 24	6452:4:137495:137513	365897	97	True				
ANR	368591	AssignmentExpression	ao -> o |= reg << 24		365897	0		|=			
ANR	368592	PtrMemberAccess	ao -> o		365897	0					
ANR	368593	Identifier	ao		365897	0					
ANR	368594	Identifier	o		365897	1					
ANR	368595	ShiftExpression	reg << 24		365897	1		<<			
ANR	368596	Identifier	reg		365897	0					
ANR	368597	PrimaryExpression	24		365897	1					
ANR	368598	BreakStatement	break ;	6454:4:137520:137525	365897	98	True				
ANR	368599	Label	case TYPE_ENDIAN :	6455:3:137530:137546	365897	99	True				
ANR	368600	Identifier	TYPE_ENDIAN		365897	0					
ANR	368601	IfStatement	"if ( ! strcmp ( ao -> a [ 0 ] , ""le"" ) )"		365897	100					
ANR	368602	Condition	"! strcmp ( ao -> a [ 0 ] , ""le"" )"	6456:8:137556:137579	365897	0	True				
ANR	368603	UnaryOperationExpression	"! strcmp ( ao -> a [ 0 ] , ""le"" )"		365897	0					
ANR	368604	UnaryOperator	!		365897	0					
ANR	368605	CallExpression	"strcmp ( ao -> a [ 0 ] , ""le"" )"		365897	1					
ANR	368606	Callee	strcmp		365897	0					
ANR	368607	Identifier	strcmp		365897	0					
ANR	368608	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	368609	Argument	ao -> a [ 0 ]		365897	0					
ANR	368610	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368611	PtrMemberAccess	ao -> a		365897	0					
ANR	368612	Identifier	ao		365897	0					
ANR	368613	Identifier	a		365897	1					
ANR	368614	PrimaryExpression	0		365897	1					
ANR	368615	Argument	"""le"""		365897	1					
ANR	368616	PrimaryExpression	"""le"""		365897	0					
ANR	368617	CompoundStatement		383:34:8987:8987	365897	1					
ANR	368618	ExpressionStatement	ao -> o |= 0	6457:5:137589:137599	365897	0	True				
ANR	368619	AssignmentExpression	ao -> o |= 0		365897	0		|=			
ANR	368620	PtrMemberAccess	ao -> o		365897	0					
ANR	368621	Identifier	ao		365897	0					
ANR	368622	Identifier	o		365897	1					
ANR	368623	PrimaryExpression	0		365897	1					
ANR	368624	ElseStatement	else		365897	0					
ANR	368625	IfStatement	"if ( ! strcmp ( ao -> a [ 0 ] , ""be"" ) )"		365897	0					
ANR	368626	Condition	"! strcmp ( ao -> a [ 0 ] , ""be"" )"	6458:15:137616:137639	365897	0	True				
ANR	368627	UnaryOperationExpression	"! strcmp ( ao -> a [ 0 ] , ""be"" )"		365897	0					
ANR	368628	UnaryOperator	!		365897	0					
ANR	368629	CallExpression	"strcmp ( ao -> a [ 0 ] , ""be"" )"		365897	1					
ANR	368630	Callee	strcmp		365897	0					
ANR	368631	Identifier	strcmp		365897	0					
ANR	368632	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	368633	Argument	ao -> a [ 0 ]		365897	0					
ANR	368634	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368635	PtrMemberAccess	ao -> a		365897	0					
ANR	368636	Identifier	ao		365897	0					
ANR	368637	Identifier	a		365897	1					
ANR	368638	PrimaryExpression	0		365897	1					
ANR	368639	Argument	"""be"""		365897	1					
ANR	368640	PrimaryExpression	"""be"""		365897	0					
ANR	368641	CompoundStatement		385:41:9047:9047	365897	1					
ANR	368642	ExpressionStatement	ao -> o |= 0x20000	6459:5:137649:137665	365897	0	True				
ANR	368643	AssignmentExpression	ao -> o |= 0x20000		365897	0		|=			
ANR	368644	PtrMemberAccess	ao -> o		365897	0					
ANR	368645	Identifier	ao		365897	0					
ANR	368646	Identifier	o		365897	1					
ANR	368647	PrimaryExpression	0x20000		365897	1					
ANR	368648	ElseStatement	else		365897	0					
ANR	368649	CompoundStatement		387:11:9083:9083	365897	0					
ANR	368650	ReturnStatement	return 0 ;	6461:5:137685:137693	365897	0	True				
ANR	368651	PrimaryExpression	0		365897	0					
ANR	368652	BreakStatement	break ;	6463:4:137705:137710	365897	101	True				
ANR	368653	Label	case TYPE_COPROC :	6464:3:137715:137731	365897	102	True				
ANR	368654	Identifier	TYPE_COPROC		365897	0					
ANR	368655	IfStatement	if ( ao -> a [ 0 ] )		365897	103					
ANR	368656	Condition	ao -> a [ 0 ]	6466:8:137827:137834	365897	0	True				
ANR	368657	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368658	PtrMemberAccess	ao -> a		365897	0					
ANR	368659	Identifier	ao		365897	0					
ANR	368660	Identifier	a		365897	1					
ANR	368661	PrimaryExpression	0		365897	1					
ANR	368662	CompoundStatement		393:18:9242:9242	365897	1					
ANR	368663	ExpressionStatement	coproc = getnum ( ao -> a [ 0 ] + 1 )	6467:5:137844:137874	365897	0	True				
ANR	368664	AssignmentExpression	coproc = getnum ( ao -> a [ 0 ] + 1 )		365897	0		=			
ANR	368665	Identifier	coproc		365897	0					
ANR	368666	CallExpression	getnum ( ao -> a [ 0 ] + 1 )		365897	1					
ANR	368667	Callee	getnum		365897	0					
ANR	368668	Identifier	getnum		365897	0					
ANR	368669	ArgumentList	ao -> a [ 0 ] + 1		365897	1					
ANR	368670	Argument	ao -> a [ 0 ] + 1		365897	0					
ANR	368671	AdditiveExpression	ao -> a [ 0 ] + 1		365897	0		+			
ANR	368672	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368673	PtrMemberAccess	ao -> a		365897	0					
ANR	368674	Identifier	ao		365897	0					
ANR	368675	Identifier	a		365897	1					
ANR	368676	PrimaryExpression	0		365897	1					
ANR	368677	PrimaryExpression	1		365897	1					
ANR	368678	IfStatement	if ( coproc == - 1 || coproc > 9 )		365897	1					
ANR	368679	Condition	coproc == - 1 || coproc > 9	6468:9:137885:137910	365897	0	True				
ANR	368680	OrExpression	coproc == - 1 || coproc > 9		365897	0		||			
ANR	368681	EqualityExpression	coproc == - 1		365897	0		==			
ANR	368682	Identifier	coproc		365897	0					
ANR	368683	UnaryOperationExpression	- 1		365897	1					
ANR	368684	UnaryOperator	-		365897	0					
ANR	368685	PrimaryExpression	1		365897	1					
ANR	368686	RelationalExpression	coproc > 9		365897	1		>			
ANR	368687	Identifier	coproc		365897	0					
ANR	368688	PrimaryExpression	9		365897	1					
ANR	368689	CompoundStatement		395:37:9318:9318	365897	1					
ANR	368690	ReturnStatement	return 0 ;	6469:6:137921:137929	365897	0	True				
ANR	368691	PrimaryExpression	0		365897	0					
ANR	368692	ExpressionStatement	ao -> o |= coproc << 16	6471:5:137943:137964	365897	2	True				
ANR	368693	AssignmentExpression	ao -> o |= coproc << 16		365897	0		|=			
ANR	368694	PtrMemberAccess	ao -> o		365897	0					
ANR	368695	Identifier	ao		365897	0					
ANR	368696	Identifier	o		365897	1					
ANR	368697	ShiftExpression	coproc << 16		365897	1		<<			
ANR	368698	Identifier	coproc		365897	0					
ANR	368699	PrimaryExpression	16		365897	1					
ANR	368700	ExpressionStatement	opc = getnum ( ao -> a [ 1 ] )	6474:4:137977:138000	365897	104	True				
ANR	368701	AssignmentExpression	opc = getnum ( ao -> a [ 1 ] )		365897	0		=			
ANR	368702	Identifier	opc		365897	0					
ANR	368703	CallExpression	getnum ( ao -> a [ 1 ] )		365897	1					
ANR	368704	Callee	getnum		365897	0					
ANR	368705	Identifier	getnum		365897	0					
ANR	368706	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	368707	Argument	ao -> a [ 1 ]		365897	0					
ANR	368708	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	368709	PtrMemberAccess	ao -> a		365897	0					
ANR	368710	Identifier	ao		365897	0					
ANR	368711	Identifier	a		365897	1					
ANR	368712	PrimaryExpression	1		365897	1					
ANR	368713	IfStatement	if ( opc == - 1 || opc > 7 )		365897	105					
ANR	368714	Condition	opc == - 1 || opc > 7	6475:8:138010:138029	365897	0	True				
ANR	368715	OrExpression	opc == - 1 || opc > 7		365897	0		||			
ANR	368716	EqualityExpression	opc == - 1		365897	0		==			
ANR	368717	Identifier	opc		365897	0					
ANR	368718	UnaryOperationExpression	- 1		365897	1					
ANR	368719	UnaryOperator	-		365897	0					
ANR	368720	PrimaryExpression	1		365897	1					
ANR	368721	RelationalExpression	opc > 7		365897	1		>			
ANR	368722	Identifier	opc		365897	0					
ANR	368723	PrimaryExpression	7		365897	1					
ANR	368724	CompoundStatement		402:30:9437:9437	365897	1					
ANR	368725	ReturnStatement	return 0 ;	6476:5:138039:138047	365897	0	True				
ANR	368726	PrimaryExpression	0		365897	0					
ANR	368727	ExpressionStatement	ao -> o |= opc << 13	6478:4:138059:138077	365897	106	True				
ANR	368728	AssignmentExpression	ao -> o |= opc << 13		365897	0		|=			
ANR	368729	PtrMemberAccess	ao -> o		365897	0					
ANR	368730	Identifier	ao		365897	0					
ANR	368731	Identifier	o		365897	1					
ANR	368732	ShiftExpression	opc << 13		365897	1		<<			
ANR	368733	Identifier	opc		365897	0					
ANR	368734	PrimaryExpression	13		365897	1					
ANR	368735	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6480:4:138084:138107	365897	107	True				
ANR	368736	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		365897	0		=			
ANR	368737	Identifier	reg		365897	0					
ANR	368738	CallExpression	getreg ( ao -> a [ 2 ] )		365897	1					
ANR	368739	Callee	getreg		365897	0					
ANR	368740	Identifier	getreg		365897	0					
ANR	368741	ArgumentList	ao -> a [ 2 ]		365897	1					
ANR	368742	Argument	ao -> a [ 2 ]		365897	0					
ANR	368743	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	368744	PtrMemberAccess	ao -> a		365897	0					
ANR	368745	Identifier	ao		365897	0					
ANR	368746	Identifier	a		365897	1					
ANR	368747	PrimaryExpression	2		365897	1					
ANR	368748	IfStatement	if ( reg == - 1 || reg > 14 )		365897	108					
ANR	368749	Condition	reg == - 1 || reg > 14	6481:8:138117:138137	365897	0	True				
ANR	368750	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368751	EqualityExpression	reg == - 1		365897	0		==			
ANR	368752	Identifier	reg		365897	0					
ANR	368753	UnaryOperationExpression	- 1		365897	1					
ANR	368754	UnaryOperator	-		365897	0					
ANR	368755	PrimaryExpression	1		365897	1					
ANR	368756	RelationalExpression	reg > 14		365897	1		>			
ANR	368757	Identifier	reg		365897	0					
ANR	368758	PrimaryExpression	14		365897	1					
ANR	368759	CompoundStatement		408:31:9545:9545	365897	1					
ANR	368760	ReturnStatement	return 0 ;	6482:5:138147:138155	365897	0	True				
ANR	368761	PrimaryExpression	0		365897	0					
ANR	368762	ExpressionStatement	ao -> o |= reg << 20	6484:4:138167:138185	365897	109	True				
ANR	368763	AssignmentExpression	ao -> o |= reg << 20		365897	0		|=			
ANR	368764	PtrMemberAccess	ao -> o		365897	0					
ANR	368765	Identifier	ao		365897	0					
ANR	368766	Identifier	o		365897	1					
ANR	368767	ShiftExpression	reg << 20		365897	1		<<			
ANR	368768	Identifier	reg		365897	0					
ANR	368769	PrimaryExpression	20		365897	1					
ANR	368770	IdentifierDeclStatement	const char * a3 = ao -> a [ 3 ] ;	6487:4:138217:138242	365897	110	True				
ANR	368771	IdentifierDecl	* a3 = ao -> a [ 3 ]		365897	0					
ANR	368772	IdentifierDeclType	const char *		365897	0					
ANR	368773	Identifier	a3		365897	1					
ANR	368774	AssignmentExpression	* a3 = ao -> a [ 3 ]		365897	2		=			
ANR	368775	Identifier	a3		365897	0					
ANR	368776	ArrayIndexing	ao -> a [ 3 ]		365897	1					
ANR	368777	PtrMemberAccess	ao -> a		365897	0					
ANR	368778	Identifier	ao		365897	0					
ANR	368779	Identifier	a		365897	1					
ANR	368780	PrimaryExpression	3		365897	1					
ANR	368781	IfStatement	if ( a3 )		365897	111					
ANR	368782	Condition	a3	6488:8:138252:138253	365897	0	True				
ANR	368783	Identifier	a3		365897	0					
ANR	368784	CompoundStatement		415:12:9661:9661	365897	1					
ANR	368785	ExpressionStatement	coproc = getnum ( a3 + 1 )	6489:5:138263:138287	365897	0	True				
ANR	368786	AssignmentExpression	coproc = getnum ( a3 + 1 )		365897	0		=			
ANR	368787	Identifier	coproc		365897	0					
ANR	368788	CallExpression	getnum ( a3 + 1 )		365897	1					
ANR	368789	Callee	getnum		365897	0					
ANR	368790	Identifier	getnum		365897	0					
ANR	368791	ArgumentList	a3 + 1		365897	1					
ANR	368792	Argument	a3 + 1		365897	0					
ANR	368793	AdditiveExpression	a3 + 1		365897	0		+			
ANR	368794	Identifier	a3		365897	0					
ANR	368795	PrimaryExpression	1		365897	1					
ANR	368796	IfStatement	if ( coproc == - 1 || coproc > 15 )		365897	1					
ANR	368797	Condition	coproc == - 1 || coproc > 15	6490:9:138298:138324	365897	0	True				
ANR	368798	OrExpression	coproc == - 1 || coproc > 15		365897	0		||			
ANR	368799	EqualityExpression	coproc == - 1		365897	0		==			
ANR	368800	Identifier	coproc		365897	0					
ANR	368801	UnaryOperationExpression	- 1		365897	1					
ANR	368802	UnaryOperator	-		365897	0					
ANR	368803	PrimaryExpression	1		365897	1					
ANR	368804	RelationalExpression	coproc > 15		365897	1		>			
ANR	368805	Identifier	coproc		365897	0					
ANR	368806	PrimaryExpression	15		365897	1					
ANR	368807	CompoundStatement		417:38:9732:9732	365897	1					
ANR	368808	ReturnStatement	return 0 ;	6491:6:138335:138343	365897	0	True				
ANR	368809	PrimaryExpression	0		365897	0					
ANR	368810	ExpressionStatement	ao -> o |= coproc << 8	6493:5:138357:138377	365897	2	True				
ANR	368811	AssignmentExpression	ao -> o |= coproc << 8		365897	0		|=			
ANR	368812	PtrMemberAccess	ao -> o		365897	0					
ANR	368813	Identifier	ao		365897	0					
ANR	368814	Identifier	o		365897	1					
ANR	368815	ShiftExpression	coproc << 8		365897	1		<<			
ANR	368816	Identifier	coproc		365897	0					
ANR	368817	PrimaryExpression	8		365897	1					
ANR	368818	IdentifierDeclStatement	const char * a4 = ao -> a [ 4 ] ;	6496:4:138390:138415	365897	112	True				
ANR	368819	IdentifierDecl	* a4 = ao -> a [ 4 ]		365897	0					
ANR	368820	IdentifierDeclType	const char *		365897	0					
ANR	368821	Identifier	a4		365897	1					
ANR	368822	AssignmentExpression	* a4 = ao -> a [ 4 ]		365897	2		=			
ANR	368823	Identifier	a4		365897	0					
ANR	368824	ArrayIndexing	ao -> a [ 4 ]		365897	1					
ANR	368825	PtrMemberAccess	ao -> a		365897	0					
ANR	368826	Identifier	ao		365897	0					
ANR	368827	Identifier	a		365897	1					
ANR	368828	PrimaryExpression	4		365897	1					
ANR	368829	IfStatement	if ( a4 )		365897	113					
ANR	368830	Condition	a4	6497:8:138425:138426	365897	0	True				
ANR	368831	Identifier	a4		365897	0					
ANR	368832	CompoundStatement		424:12:9834:9834	365897	1					
ANR	368833	ExpressionStatement	coproc = getnum ( ao -> a [ 4 ] + 1 )	6498:5:138436:138466	365897	0	True				
ANR	368834	AssignmentExpression	coproc = getnum ( ao -> a [ 4 ] + 1 )		365897	0		=			
ANR	368835	Identifier	coproc		365897	0					
ANR	368836	CallExpression	getnum ( ao -> a [ 4 ] + 1 )		365897	1					
ANR	368837	Callee	getnum		365897	0					
ANR	368838	Identifier	getnum		365897	0					
ANR	368839	ArgumentList	ao -> a [ 4 ] + 1		365897	1					
ANR	368840	Argument	ao -> a [ 4 ] + 1		365897	0					
ANR	368841	AdditiveExpression	ao -> a [ 4 ] + 1		365897	0		+			
ANR	368842	ArrayIndexing	ao -> a [ 4 ]		365897	0					
ANR	368843	PtrMemberAccess	ao -> a		365897	0					
ANR	368844	Identifier	ao		365897	0					
ANR	368845	Identifier	a		365897	1					
ANR	368846	PrimaryExpression	4		365897	1					
ANR	368847	PrimaryExpression	1		365897	1					
ANR	368848	IfStatement	if ( coproc == - 1 || coproc > 15 )		365897	1					
ANR	368849	Condition	coproc == - 1 || coproc > 15	6499:9:138477:138503	365897	0	True				
ANR	368850	OrExpression	coproc == - 1 || coproc > 15		365897	0		||			
ANR	368851	EqualityExpression	coproc == - 1		365897	0		==			
ANR	368852	Identifier	coproc		365897	0					
ANR	368853	UnaryOperationExpression	- 1		365897	1					
ANR	368854	UnaryOperator	-		365897	0					
ANR	368855	PrimaryExpression	1		365897	1					
ANR	368856	RelationalExpression	coproc > 15		365897	1		>			
ANR	368857	Identifier	coproc		365897	0					
ANR	368858	PrimaryExpression	15		365897	1					
ANR	368859	CompoundStatement		426:38:9911:9911	365897	1					
ANR	368860	ReturnStatement	return 0 ;	6500:6:138514:138522	365897	0	True				
ANR	368861	PrimaryExpression	0		365897	0					
ANR	368862	ExpressionStatement	ao -> o |= coproc << 24	6502:5:138536:138557	365897	2	True				
ANR	368863	AssignmentExpression	ao -> o |= coproc << 24		365897	0		|=			
ANR	368864	PtrMemberAccess	ao -> o		365897	0					
ANR	368865	Identifier	ao		365897	0					
ANR	368866	Identifier	o		365897	1					
ANR	368867	ShiftExpression	coproc << 24		365897	1		<<			
ANR	368868	Identifier	coproc		365897	0					
ANR	368869	PrimaryExpression	24		365897	1					
ANR	368870	ExpressionStatement	coproc = getnum ( ao -> a [ 5 ] )	6505:4:138570:138596	365897	114	True				
ANR	368871	AssignmentExpression	coproc = getnum ( ao -> a [ 5 ] )		365897	0		=			
ANR	368872	Identifier	coproc		365897	0					
ANR	368873	CallExpression	getnum ( ao -> a [ 5 ] )		365897	1					
ANR	368874	Callee	getnum		365897	0					
ANR	368875	Identifier	getnum		365897	0					
ANR	368876	ArgumentList	ao -> a [ 5 ]		365897	1					
ANR	368877	Argument	ao -> a [ 5 ]		365897	0					
ANR	368878	ArrayIndexing	ao -> a [ 5 ]		365897	0					
ANR	368879	PtrMemberAccess	ao -> a		365897	0					
ANR	368880	Identifier	ao		365897	0					
ANR	368881	Identifier	a		365897	1					
ANR	368882	PrimaryExpression	5		365897	1					
ANR	368883	IfStatement	if ( coproc > - 1 )		365897	115					
ANR	368884	Condition	coproc > - 1	6506:8:138606:138616	365897	0	True				
ANR	368885	RelationalExpression	coproc > - 1		365897	0		>			
ANR	368886	Identifier	coproc		365897	0					
ANR	368887	UnaryOperationExpression	- 1		365897	1					
ANR	368888	UnaryOperator	-		365897	0					
ANR	368889	PrimaryExpression	1		365897	1					
ANR	368890	CompoundStatement		433:21:10024:10024	365897	1					
ANR	368891	IfStatement	if ( coproc > 7 )		365897	0					
ANR	368892	Condition	coproc > 7	6507:9:138630:138639	365897	0	True				
ANR	368893	RelationalExpression	coproc > 7		365897	0		>			
ANR	368894	Identifier	coproc		365897	0					
ANR	368895	PrimaryExpression	7		365897	1					
ANR	368896	CompoundStatement		434:21:10047:10047	365897	1					
ANR	368897	ReturnStatement	return 0 ;	6508:6:138650:138658	365897	0	True				
ANR	368898	PrimaryExpression	0		365897	0					
ANR	368899	ExpressionStatement	ao -> o |= coproc << 29	6511:5:138696:138717	365897	1	True				
ANR	368900	AssignmentExpression	ao -> o |= coproc << 29		365897	0		|=			
ANR	368901	PtrMemberAccess	ao -> o		365897	0					
ANR	368902	Identifier	ao		365897	0					
ANR	368903	Identifier	o		365897	1					
ANR	368904	ShiftExpression	coproc << 29		365897	1		<<			
ANR	368905	Identifier	coproc		365897	0					
ANR	368906	PrimaryExpression	29		365897	1					
ANR	368907	BreakStatement	break ;	6514:4:138730:138735	365897	116	True				
ANR	368908	Label	case TYPE_CLZ :	6515:3:138740:138753	365897	117	True				
ANR	368909	Identifier	TYPE_CLZ		365897	0					
ANR	368910	ExpressionStatement	ao -> o |= 1 << 28	6516:4:138759:138775	365897	118	True				
ANR	368911	AssignmentExpression	ao -> o |= 1 << 28		365897	0		|=			
ANR	368912	PtrMemberAccess	ao -> o		365897	0					
ANR	368913	Identifier	ao		365897	0					
ANR	368914	Identifier	o		365897	1					
ANR	368915	ShiftExpression	1 << 28		365897	1		<<			
ANR	368916	PrimaryExpression	1		365897	0					
ANR	368917	PrimaryExpression	28		365897	1					
ANR	368918	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6518:4:138782:138805	365897	119	True				
ANR	368919	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		365897	0		=			
ANR	368920	Identifier	reg		365897	0					
ANR	368921	CallExpression	getreg ( ao -> a [ 0 ] )		365897	1					
ANR	368922	Callee	getreg		365897	0					
ANR	368923	Identifier	getreg		365897	0					
ANR	368924	ArgumentList	ao -> a [ 0 ]		365897	1					
ANR	368925	Argument	ao -> a [ 0 ]		365897	0					
ANR	368926	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	368927	PtrMemberAccess	ao -> a		365897	0					
ANR	368928	Identifier	ao		365897	0					
ANR	368929	Identifier	a		365897	1					
ANR	368930	PrimaryExpression	0		365897	1					
ANR	368931	IfStatement	if ( reg == - 1 || reg > 14 )		365897	120					
ANR	368932	Condition	reg == - 1 || reg > 14	6519:8:138815:138835	365897	0	True				
ANR	368933	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368934	EqualityExpression	reg == - 1		365897	0		==			
ANR	368935	Identifier	reg		365897	0					
ANR	368936	UnaryOperationExpression	- 1		365897	1					
ANR	368937	UnaryOperator	-		365897	0					
ANR	368938	PrimaryExpression	1		365897	1					
ANR	368939	RelationalExpression	reg > 14		365897	1		>			
ANR	368940	Identifier	reg		365897	0					
ANR	368941	PrimaryExpression	14		365897	1					
ANR	368942	CompoundStatement		446:31:10243:10243	365897	1					
ANR	368943	ReturnStatement	return 0 ;	6520:5:138845:138853	365897	0	True				
ANR	368944	PrimaryExpression	0		365897	0					
ANR	368945	ExpressionStatement	ao -> o |= reg << 20	6522:4:138865:138883	365897	121	True				
ANR	368946	AssignmentExpression	ao -> o |= reg << 20		365897	0		|=			
ANR	368947	PtrMemberAccess	ao -> o		365897	0					
ANR	368948	Identifier	ao		365897	0					
ANR	368949	Identifier	o		365897	1					
ANR	368950	ShiftExpression	reg << 20		365897	1		<<			
ANR	368951	Identifier	reg		365897	0					
ANR	368952	PrimaryExpression	20		365897	1					
ANR	368953	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6524:4:138890:138913	365897	122	True				
ANR	368954	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		365897	0		=			
ANR	368955	Identifier	reg		365897	0					
ANR	368956	CallExpression	getreg ( ao -> a [ 1 ] )		365897	1					
ANR	368957	Callee	getreg		365897	0					
ANR	368958	Identifier	getreg		365897	0					
ANR	368959	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	368960	Argument	ao -> a [ 1 ]		365897	0					
ANR	368961	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	368962	PtrMemberAccess	ao -> a		365897	0					
ANR	368963	Identifier	ao		365897	0					
ANR	368964	Identifier	a		365897	1					
ANR	368965	PrimaryExpression	1		365897	1					
ANR	368966	IfStatement	if ( reg == - 1 || reg > 14 )		365897	123					
ANR	368967	Condition	reg == - 1 || reg > 14	6525:8:138923:138943	365897	0	True				
ANR	368968	OrExpression	reg == - 1 || reg > 14		365897	0		||			
ANR	368969	EqualityExpression	reg == - 1		365897	0		==			
ANR	368970	Identifier	reg		365897	0					
ANR	368971	UnaryOperationExpression	- 1		365897	1					
ANR	368972	UnaryOperator	-		365897	0					
ANR	368973	PrimaryExpression	1		365897	1					
ANR	368974	RelationalExpression	reg > 14		365897	1		>			
ANR	368975	Identifier	reg		365897	0					
ANR	368976	PrimaryExpression	14		365897	1					
ANR	368977	CompoundStatement		452:31:10351:10351	365897	1					
ANR	368978	ReturnStatement	return 0 ;	6526:5:138953:138961	365897	0	True				
ANR	368979	PrimaryExpression	0		365897	0					
ANR	368980	ExpressionStatement	ao -> o |= reg << 24	6528:4:138973:138991	365897	124	True				
ANR	368981	AssignmentExpression	ao -> o |= reg << 24		365897	0		|=			
ANR	368982	PtrMemberAccess	ao -> o		365897	0					
ANR	368983	Identifier	ao		365897	0					
ANR	368984	Identifier	o		365897	1					
ANR	368985	ShiftExpression	reg << 24		365897	1		<<			
ANR	368986	Identifier	reg		365897	0					
ANR	368987	PrimaryExpression	24		365897	1					
ANR	368988	BreakStatement	break ;	6530:4:138998:139003	365897	125	True				
ANR	368989	Label	case TYPE_NEG :	6531:3:139008:139021	365897	126	True				
ANR	368990	Identifier	TYPE_NEG		365897	0					
ANR	368991	IfStatement	if ( ! ao -> a [ 0 ] || ! ao -> a [ 1 ] )		365897	127					
ANR	368992	Condition	! ao -> a [ 0 ] || ! ao -> a [ 1 ]	6532:8:139031:139052	365897	0	True				
ANR	368993	OrExpression	! ao -> a [ 0 ] || ! ao -> a [ 1 ]		365897	0		||			
ANR	368994	UnaryOperationExpression	! ao -> a [ 0 ]		365897	0					
ANR	368995	UnaryOperator	!		365897	0					
ANR	368996	ArrayIndexing	ao -> a [ 0 ]		365897	1					
ANR	368997	PtrMemberAccess	ao -> a		365897	0					
ANR	368998	Identifier	ao		365897	0					
ANR	368999	Identifier	a		365897	1					
ANR	369000	PrimaryExpression	0		365897	1					
ANR	369001	UnaryOperationExpression	! ao -> a [ 1 ]		365897	1					
ANR	369002	UnaryOperator	!		365897	0					
ANR	369003	ArrayIndexing	ao -> a [ 1 ]		365897	1					
ANR	369004	PtrMemberAccess	ao -> a		365897	0					
ANR	369005	Identifier	ao		365897	0					
ANR	369006	Identifier	a		365897	1					
ANR	369007	PrimaryExpression	1		365897	1					
ANR	369008	CompoundStatement		459:32:10460:10460	365897	1					
ANR	369009	ReturnStatement	return 0 ;	6533:5:139062:139070	365897	0	True				
ANR	369010	PrimaryExpression	0		365897	0					
ANR	369011	ExpressionStatement	"ao -> a [ 2 ] = ""0"""	6535:4:139082:139096	365897	128	True				
ANR	369012	AssignmentExpression	"ao -> a [ 2 ] = ""0"""		365897	0		=			
ANR	369013	ArrayIndexing	ao -> a [ 2 ]		365897	0					
ANR	369014	PtrMemberAccess	ao -> a		365897	0					
ANR	369015	Identifier	ao		365897	0					
ANR	369016	Identifier	a		365897	1					
ANR	369017	PrimaryExpression	2		365897	1					
ANR	369018	PrimaryExpression	"""0"""		365897	1					
ANR	369019	IdentifierDeclStatement	int len = strlen ( ao -> a [ 1 ] ) + 1 ;	6536:4:139102:139133	365897	129	True				
ANR	369020	IdentifierDecl	len = strlen ( ao -> a [ 1 ] ) + 1		365897	0					
ANR	369021	IdentifierDeclType	int		365897	0					
ANR	369022	Identifier	len		365897	1					
ANR	369023	AssignmentExpression	len = strlen ( ao -> a [ 1 ] ) + 1		365897	2		=			
ANR	369024	Identifier	len		365897	0					
ANR	369025	AdditiveExpression	strlen ( ao -> a [ 1 ] ) + 1		365897	1		+			
ANR	369026	CallExpression	strlen ( ao -> a [ 1 ] )		365897	0					
ANR	369027	Callee	strlen		365897	0					
ANR	369028	Identifier	strlen		365897	0					
ANR	369029	ArgumentList	ao -> a [ 1 ]		365897	1					
ANR	369030	Argument	ao -> a [ 1 ]		365897	0					
ANR	369031	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	369032	PtrMemberAccess	ao -> a		365897	0					
ANR	369033	Identifier	ao		365897	0					
ANR	369034	Identifier	a		365897	1					
ANR	369035	PrimaryExpression	1		365897	1					
ANR	369036	PrimaryExpression	1		365897	1					
ANR	369037	ExpressionStatement	"memmove ( ao -> a [ 0 ] + 1 , ao -> a [ 0 ] , ao -> a [ 1 ] - ao -> a [ 0 ] + len )"	6537:4:139139:139198	365897	130	True				
ANR	369038	CallExpression	"memmove ( ao -> a [ 0 ] + 1 , ao -> a [ 0 ] , ao -> a [ 1 ] - ao -> a [ 0 ] + len )"		365897	0					
ANR	369039	Callee	memmove		365897	0					
ANR	369040	Identifier	memmove		365897	0					
ANR	369041	ArgumentList	ao -> a [ 0 ] + 1		365897	1					
ANR	369042	Argument	ao -> a [ 0 ] + 1		365897	0					
ANR	369043	AdditiveExpression	ao -> a [ 0 ] + 1		365897	0		+			
ANR	369044	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	369045	PtrMemberAccess	ao -> a		365897	0					
ANR	369046	Identifier	ao		365897	0					
ANR	369047	Identifier	a		365897	1					
ANR	369048	PrimaryExpression	0		365897	1					
ANR	369049	PrimaryExpression	1		365897	1					
ANR	369050	Argument	ao -> a [ 0 ]		365897	1					
ANR	369051	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	369052	PtrMemberAccess	ao -> a		365897	0					
ANR	369053	Identifier	ao		365897	0					
ANR	369054	Identifier	a		365897	1					
ANR	369055	PrimaryExpression	0		365897	1					
ANR	369056	Argument	ao -> a [ 1 ] - ao -> a [ 0 ] + len		365897	2					
ANR	369057	AdditiveExpression	ao -> a [ 1 ] - ao -> a [ 0 ] + len		365897	0		-			
ANR	369058	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	369059	PtrMemberAccess	ao -> a		365897	0					
ANR	369060	Identifier	ao		365897	0					
ANR	369061	Identifier	a		365897	1					
ANR	369062	PrimaryExpression	1		365897	1					
ANR	369063	AdditiveExpression	ao -> a [ 0 ] + len		365897	1		+			
ANR	369064	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	369065	PtrMemberAccess	ao -> a		365897	0					
ANR	369066	Identifier	ao		365897	0					
ANR	369067	Identifier	a		365897	1					
ANR	369068	PrimaryExpression	0		365897	1					
ANR	369069	Identifier	len		365897	1					
ANR	369070	ExpressionStatement	ao -> a [ 0 ] ++	6538:4:139204:139214	365897	131	True				
ANR	369071	PostIncDecOperationExpression	ao -> a [ 0 ] ++		365897	0					
ANR	369072	ArrayIndexing	ao -> a [ 0 ]		365897	0					
ANR	369073	PtrMemberAccess	ao -> a		365897	0					
ANR	369074	Identifier	ao		365897	0					
ANR	369075	Identifier	a		365897	1					
ANR	369076	PrimaryExpression	0		365897	1					
ANR	369077	IncDec	++		365897	1					
ANR	369078	ExpressionStatement	ao -> a [ 1 ] ++	6539:4:139220:139230	365897	132	True				
ANR	369079	PostIncDecOperationExpression	ao -> a [ 1 ] ++		365897	0					
ANR	369080	ArrayIndexing	ao -> a [ 1 ]		365897	0					
ANR	369081	PtrMemberAccess	ao -> a		365897	0					
ANR	369082	Identifier	ao		365897	0					
ANR	369083	Identifier	a		365897	1					
ANR	369084	PrimaryExpression	1		365897	1					
ANR	369085	IncDec	++		365897	1					
ANR	369086	ExpressionStatement	"strncpy ( ao -> op , ""rsbs"" , 5 )"	6540:4:139236:139263	365897	133	True				
ANR	369087	CallExpression	"strncpy ( ao -> op , ""rsbs"" , 5 )"		365897	0					
ANR	369088	Callee	strncpy		365897	0					
ANR	369089	Identifier	strncpy		365897	0					
ANR	369090	ArgumentList	ao -> op		365897	1					
ANR	369091	Argument	ao -> op		365897	0					
ANR	369092	PtrMemberAccess	ao -> op		365897	0					
ANR	369093	Identifier	ao		365897	0					
ANR	369094	Identifier	op		365897	1					
ANR	369095	Argument	"""rsbs"""		365897	1					
ANR	369096	PrimaryExpression	"""rsbs"""		365897	0					
ANR	369097	Argument	5		365897	2					
ANR	369098	PrimaryExpression	5		365897	0					
ANR	369099	ExpressionStatement	"arm_assemble ( ao , off , str )"	6541:4:139269:139296	365897	134	True				
ANR	369100	CallExpression	"arm_assemble ( ao , off , str )"		365897	0					
ANR	369101	Callee	arm_assemble		365897	0					
ANR	369102	Identifier	arm_assemble		365897	0					
ANR	369103	ArgumentList	ao		365897	1					
ANR	369104	Argument	ao		365897	0					
ANR	369105	Identifier	ao		365897	0					
ANR	369106	Argument	off		365897	1					
ANR	369107	Identifier	off		365897	0					
ANR	369108	Argument	str		365897	2					
ANR	369109	Identifier	str		365897	0					
ANR	369110	BreakStatement	break ;	6542:4:139325:139330	365897	135	True				
ANR	369111	ReturnStatement	return 1 ;	6545:3:139345:139353	365897	3	True				
ANR	369112	PrimaryExpression	1		365897	0					
ANR	369113	ReturnStatement	return 0 ;	6548:1:139363:139371	365897	5	True				
ANR	369114	PrimaryExpression	0		365897	0					
ANR	369115	ReturnType	static int		365897	1					
ANR	369116	Identifier	arm_assemble		365897	2					
ANR	369117	ParameterList	"ArmOpcode * ao , ut64 off , const char * str"		365897	3					
ANR	369118	Parameter	ArmOpcode * ao	6074:24:128552:128564	365897	0	True				
ANR	369119	ParameterType	ArmOpcode *		365897	0					
ANR	369120	Identifier	ao		365897	1					
ANR	369121	Parameter	ut64 off	6074:39:128567:128574	365897	1	True				
ANR	369122	ParameterType	ut64		365897	0					
ANR	369123	Identifier	off		365897	1					
ANR	369124	Parameter	const char * str	6074:49:128577:128591	365897	2	True				
ANR	369125	ParameterType	const char *		365897	0					
ANR	369126	Identifier	str		365897	1					
ANR	369127	CFGEntryNode	ENTRY		365897		True				
ANR	369128	CFGExitNode	EXIT		365897		True				
ANR	369129	Symbol	& z		365897						
ANR	369130	Symbol	coproc		365897						
ANR	369131	Symbol	ops [ i ] . code		365897						
ANR	369132	Symbol	shift		365897						
ANR	369133	Symbol	num		365897						
ANR	369134	Symbol	strchr		365897						
ANR	369135	Symbol	getshift		365897						
ANR	369136	Symbol	ao -> o		365897						
ANR	369137	Symbol	strlen		365897						
ANR	369138	Symbol	strncmp		365897						
ANR	369139	Symbol	high		365897						
ANR	369140	Symbol	findyz		365897						
ANR	369141	Symbol	len		365897						
ANR	369142	Symbol	reg		365897						
ANR	369143	Symbol	* * ao		365897						
ANR	369144	Symbol	bracket		365897						
ANR	369145	Symbol	ao -> a		365897						
ANR	369146	Symbol	ret		365897						
ANR	369147	Symbol	strcmp		365897						
ANR	369148	Symbol	* * j		365897						
ANR	369149	Symbol	* bracket		365897						
ANR	369150	Symbol	opc		365897						
ANR	369151	Symbol	rex		365897						
ANR	369152	Symbol	ao -> off		365897						
ANR	369153	Symbol	ao		365897						
ANR	369154	Symbol	str		365897						
ANR	369155	Symbol	* ao -> a		365897						
ANR	369156	Symbol	* ao -> a [ 0 ] ++		365897						
ANR	369157	Symbol	ops		365897						
ANR	369158	Symbol	strstr		365897						
ANR	369159	Symbol	* ao -> a [ j ]		365897						
ANR	369160	Symbol	rn		365897						
ANR	369161	Symbol	dst		365897						
ANR	369162	Symbol	TYPE_BKP		365897						
ANR	369163	Symbol	ops [ i ] . type		365897						
ANR	369164	Symbol	strcmpnull		365897						
ANR	369165	Symbol	immed		365897						
ANR	369166	Symbol	low		365897						
ANR	369167	Symbol	* ops		365897						
ANR	369168	Symbol	a		365897						
ANR	369169	Symbol	b		365897						
ANR	369170	Symbol	err		365897						
ANR	369171	Symbol	false		365897						
ANR	369172	Symbol	i		365897						
ANR	369173	Symbol	ao -> op		365897						
ANR	369174	Symbol	* * ao -> a		365897						
ANR	369175	Symbol	j		365897						
ANR	369176	Symbol	* * * ao		365897						
ANR	369177	Symbol	off		365897						
ANR	369178	Symbol	n		365897						
ANR	369179	Symbol	o		365897						
ANR	369180	Symbol	a1		365897						
ANR	369181	Symbol	a3		365897						
ANR	369182	Symbol	* i		365897						
ANR	369183	Symbol	a4		365897						
ANR	369184	Symbol	* j		365897						
ANR	369185	Symbol	getimmed8		365897						
ANR	369186	Symbol	getreg		365897						
ANR	369187	Symbol	* ao		365897						
ANR	369188	Symbol	getnum		365897						
ANR	369189	Symbol	ops [ i ] . name		365897						
ANR	369190	Symbol	y		365897						
ANR	369191	Symbol	z		365897						
ANR	369192	Symbol	r0		365897						
ANR	369193	Symbol	r1		365897						
ANR	369194	Symbol	& y		365897						
ANR	369195	DeclStmt									
ANR	369196	Decl							"int ( * ) ( ArmOpcode * , ut64 , const char * )"	"int ( * ) ( ArmOpcode * , ut64 , const char * )"	AssembleFunction
ANR	369197	DeclStmt									
ANR	369198	Decl							AssembleFunction	AssembleFunction [ 2 ]	assemble
ANR	369199	Function	armass_assemble	6554:0:139517:140017							
ANR	369200	FunctionDef	"armass_assemble (const char * str , ut64 off , int thumb)"		369199	0					
ANR	369201	CompoundStatement		6554:59:139576:140017	369199	0					
ANR	369202	IdentifierDeclStatement	"int i , j ;"	6555:1:139579:139587	369199	0	True				
ANR	369203	IdentifierDecl	i		369199	0					
ANR	369204	IdentifierDeclType	int		369199	0					
ANR	369205	Identifier	i		369199	1					
ANR	369206	IdentifierDecl	j		369199	1					
ANR	369207	IdentifierDeclType	int		369199	0					
ANR	369208	Identifier	j		369199	1					
ANR	369209	IdentifierDeclStatement	char buf [ 128 ] ;	6556:1:139590:139603	369199	1	True				
ANR	369210	IdentifierDecl	buf [ 128 ]		369199	0					
ANR	369211	IdentifierDeclType	char [ 128 ]		369199	0					
ANR	369212	Identifier	buf		369199	1					
ANR	369213	PrimaryExpression	128		369199	2					
ANR	369214	Statement	ArmOpcode	6557:1:139606:139614	369199	2	True				
ANR	369215	Statement	aop	6557:11:139616:139618	369199	3	True				
ANR	369216	Statement	=	6557:15:139620:139620	369199	4	True				
ANR	369217	CompoundStatement		4:17:45:45	369199	5					
ANR	369218	Statement	.	6557:18:139623:139623	369199	0	True				
ANR	369219	Statement	off	6557:19:139624:139626	369199	1	True				
ANR	369220	Statement	=	6557:23:139628:139628	369199	2	True				
ANR	369221	Statement	off	6557:25:139630:139632	369199	3	True				
ANR	369222	ExpressionStatement		6557:29:139634:139634	369199	6	True				
ANR	369223	ForStatement	"for ( i = j = 0 ; i < sizeof ( buf ) - 1 && str [ j ] ; i ++ , j ++ )"		369199	7					
ANR	369224	ForInit	i = j = 0 ;	6558:6:139642:139651	369199	0	True				
ANR	369225	AssignmentExpression	i = j = 0		369199	0		=			
ANR	369226	Identifier	i		369199	0					
ANR	369227	AssignmentExpression	j = 0		369199	1		=			
ANR	369228	Identifier	j		369199	0					
ANR	369229	PrimaryExpression	0		369199	1					
ANR	369230	Condition	i < sizeof ( buf ) - 1 && str [ j ]	6558:17:139653:139682	369199	1	True				
ANR	369231	AndExpression	i < sizeof ( buf ) - 1 && str [ j ]		369199	0		&&			
ANR	369232	RelationalExpression	i < sizeof ( buf ) - 1		369199	0		<			
ANR	369233	Identifier	i		369199	0					
ANR	369234	AdditiveExpression	sizeof ( buf ) - 1		369199	1		-			
ANR	369235	SizeofExpression	sizeof ( buf )		369199	0					
ANR	369236	Sizeof	sizeof		369199	0					
ANR	369237	SizeofOperand	buf		369199	1					
ANR	369238	PrimaryExpression	1		369199	1					
ANR	369239	ArrayIndexing	str [ j ]		369199	1					
ANR	369240	Identifier	str		369199	0					
ANR	369241	Identifier	j		369199	1					
ANR	369242	Expression	"i ++ , j ++"	6558:49:139685:139692	369199	2	True				
ANR	369243	PostIncDecOperationExpression	i ++		369199	0					
ANR	369244	Identifier	i		369199	0					
ANR	369245	IncDec	++		369199	1					
ANR	369246	PostIncDecOperationExpression	j ++		369199	1					
ANR	369247	Identifier	j		369199	0					
ANR	369248	IncDec	++		369199	1					
ANR	369249	CompoundStatement		5:59:118:118	369199	3					
ANR	369250	IfStatement	if ( str [ j ] == '#' )		369199	0					
ANR	369251	Condition	str [ j ] == '#'	6559:6:139703:139715	369199	0	True				
ANR	369252	EqualityExpression	str [ j ] == '#'		369199	0		==			
ANR	369253	ArrayIndexing	str [ j ]		369199	0					
ANR	369254	Identifier	str		369199	0					
ANR	369255	Identifier	j		369199	1					
ANR	369256	PrimaryExpression	'#'		369199	1					
ANR	369257	CompoundStatement		6:21:141:141	369199	1					
ANR	369258	ExpressionStatement	i --	6560:3:139723:139726	369199	0	True				
ANR	369259	PostIncDecOperationExpression	i --		369199	0					
ANR	369260	Identifier	i		369199	0					
ANR	369261	IncDec	--		369199	1					
ANR	369262	ContinueStatement	continue ;	6560:8:139728:139736	369199	1	True				
ANR	369263	ExpressionStatement	buf [ i ] = tolower ( ( const ut8 ) str [ j ] )	6562:2:139744:139780	369199	1	True				
ANR	369264	AssignmentExpression	buf [ i ] = tolower ( ( const ut8 ) str [ j ] )		369199	0		=			
ANR	369265	ArrayIndexing	buf [ i ]		369199	0					
ANR	369266	Identifier	buf		369199	0					
ANR	369267	Identifier	i		369199	1					
ANR	369268	CallExpression	tolower ( ( const ut8 ) str [ j ] )		369199	1					
ANR	369269	Callee	tolower		369199	0					
ANR	369270	Identifier	tolower		369199	0					
ANR	369271	ArgumentList	( const ut8 ) str [ j ]		369199	1					
ANR	369272	Argument	( const ut8 ) str [ j ]		369199	0					
ANR	369273	CastExpression	( const ut8 ) str [ j ]		369199	0					
ANR	369274	CastTarget	const ut8		369199	0					
ANR	369275	ArrayIndexing	str [ j ]		369199	1					
ANR	369276	Identifier	str		369199	0					
ANR	369277	Identifier	j		369199	1					
ANR	369278	ExpressionStatement	buf [ i ] = 0	6564:1:139786:139796	369199	8	True				
ANR	369279	AssignmentExpression	buf [ i ] = 0		369199	0		=			
ANR	369280	ArrayIndexing	buf [ i ]		369199	0					
ANR	369281	Identifier	buf		369199	0					
ANR	369282	Identifier	i		369199	1					
ANR	369283	PrimaryExpression	0		369199	1					
ANR	369284	ExpressionStatement	"arm_opcode_parse ( & aop , buf )"	6565:1:139799:139827	369199	9	True				
ANR	369285	CallExpression	"arm_opcode_parse ( & aop , buf )"		369199	0					
ANR	369286	Callee	arm_opcode_parse		369199	0					
ANR	369287	Identifier	arm_opcode_parse		369199	0					
ANR	369288	ArgumentList	& aop		369199	1					
ANR	369289	Argument	& aop		369199	0					
ANR	369290	UnaryOperationExpression	& aop		369199	0					
ANR	369291	UnaryOperator	&		369199	0					
ANR	369292	Identifier	aop		369199	1					
ANR	369293	Argument	buf		369199	1					
ANR	369294	Identifier	buf		369199	0					
ANR	369295	ExpressionStatement	aop . off = off	6566:1:139830:139843	369199	10	True				
ANR	369296	AssignmentExpression	aop . off = off		369199	0		=			
ANR	369297	MemberAccess	aop . off		369199	0					
ANR	369298	Identifier	aop		369199	0					
ANR	369299	Identifier	off		369199	1					
ANR	369300	Identifier	off		369199	1					
ANR	369301	IfStatement	if ( thumb < 0 || thumb > 1 )		369199	11					
ANR	369302	Condition	thumb < 0 || thumb > 1	6567:5:139850:139871	369199	0	True				
ANR	369303	OrExpression	thumb < 0 || thumb > 1		369199	0		||			
ANR	369304	RelationalExpression	thumb < 0		369199	0		<			
ANR	369305	Identifier	thumb		369199	0					
ANR	369306	PrimaryExpression	0		369199	1					
ANR	369307	RelationalExpression	thumb > 1		369199	1		>			
ANR	369308	Identifier	thumb		369199	0					
ANR	369309	PrimaryExpression	1		369199	1					
ANR	369310	CompoundStatement		14:29:297:297	369199	1					
ANR	369311	ReturnStatement	return - 1 ;	6568:2:139878:139887	369199	0	True				
ANR	369312	UnaryOperationExpression	- 1		369199	0					
ANR	369313	UnaryOperator	-		369199	0					
ANR	369314	PrimaryExpression	1		369199	1					
ANR	369315	IfStatement	"if ( ! assemble [ thumb ] ( & aop , off , buf ) )"		369199	12					
ANR	369316	Condition	"! assemble [ thumb ] ( & aop , off , buf )"	6570:5:139897:139929	369199	0	True				
ANR	369317	UnaryOperationExpression	"! assemble [ thumb ] ( & aop , off , buf )"		369199	0					
ANR	369318	UnaryOperator	!		369199	0					
ANR	369319	CallExpression	"assemble [ thumb ] ( & aop , off , buf )"		369199	1					
ANR	369320	Callee	assemble [ thumb ]		369199	0					
ANR	369321	ArrayIndexing	assemble [ thumb ]		369199	0					
ANR	369322	Identifier	assemble		369199	0					
ANR	369323	Identifier	thumb		369199	1					
ANR	369324	ArgumentList	& aop		369199	1					
ANR	369325	Argument	& aop		369199	0					
ANR	369326	UnaryOperationExpression	& aop		369199	0					
ANR	369327	UnaryOperator	&		369199	0					
ANR	369328	Identifier	aop		369199	1					
ANR	369329	Argument	off		369199	1					
ANR	369330	Identifier	off		369199	0					
ANR	369331	Argument	buf		369199	2					
ANR	369332	Identifier	buf		369199	0					
ANR	369333	CompoundStatement		17:40:355:355	369199	1					
ANR	369334	ReturnStatement	return - 1 ;	6572:2:139988:139997	369199	0	True				
ANR	369335	UnaryOperationExpression	- 1		369199	0					
ANR	369336	UnaryOperator	-		369199	0					
ANR	369337	PrimaryExpression	1		369199	1					
ANR	369338	ReturnStatement	return aop . o ;	6574:1:140003:140015	369199	13	True				
ANR	369339	MemberAccess	aop . o		369199	0					
ANR	369340	Identifier	aop		369199	0					
ANR	369341	Identifier	o		369199	1					
ANR	369342	ReturnType	ut32		369199	1					
ANR	369343	Identifier	armass_assemble		369199	2					
ANR	369344	ParameterList	"const char * str , ut64 off , int thumb"		369199	3					
ANR	369345	Parameter	const char * str	6554:21:139538:139552	369199	0	True				
ANR	369346	ParameterType	const char *		369199	0					
ANR	369347	Identifier	str		369199	1					
ANR	369348	Parameter	ut64 off	6554:38:139555:139562	369199	1	True				
ANR	369349	ParameterType	ut64		369199	0					
ANR	369350	Identifier	off		369199	1					
ANR	369351	Parameter	int thumb	6554:48:139565:139573	369199	2	True				
ANR	369352	ParameterType	int		369199	0					
ANR	369353	Identifier	thumb		369199	1					
ANR	369354	CFGEntryNode	ENTRY		369199		True				
ANR	369355	CFGExitNode	EXIT		369199		True				
ANR	369356	Symbol	aop . o		369199						
ANR	369357	Symbol	* buf		369199						
ANR	369358	Symbol	aop . off		369199						
ANR	369359	Symbol	aop		369199						
ANR	369360	Symbol	tolower		369199						
ANR	369361	Symbol	thumb		369199						
ANR	369362	Symbol	i		369199						
ANR	369363	Symbol	j		369199						
ANR	369364	Symbol	assemble		369199						
ANR	369365	Symbol	off		369199						
ANR	369366	Symbol	& aop		369199						
ANR	369367	Symbol	str		369199						
ANR	369368	Symbol	* assemble		369199						
ANR	369369	Symbol	buf		369199						
ANR	369370	Symbol	* i		369199						
ANR	369371	Symbol	* j		369199						
ANR	369372	Symbol	* thumb		369199						
ANR	369373	Symbol	* str		369199						
ANR	369374	Function	thisplay	6578:0:140032:140237							
ANR	369375	FunctionDef	thisplay (const char * str)		369374	0					
ANR	369376	CompoundStatement		6578:31:140063:140237	369374	0					
ANR	369377	IdentifierDeclStatement	char cmd [ 32 ] ;	6579:1:140066:140078	369374	0	True				
ANR	369378	IdentifierDecl	cmd [ 32 ]		369374	0					
ANR	369379	IdentifierDeclType	char [ 32 ]		369374	0					
ANR	369380	Identifier	cmd		369374	1					
ANR	369381	PrimaryExpression	32		369374	2					
ANR	369382	IdentifierDeclStatement	"int op = armass_assemble ( str , 0x1000 , 1 ) ;"	6580:1:140081:140122	369374	1	True				
ANR	369383	IdentifierDecl	"op = armass_assemble ( str , 0x1000 , 1 )"		369374	0					
ANR	369384	IdentifierDeclType	int		369374	0					
ANR	369385	Identifier	op		369374	1					
ANR	369386	AssignmentExpression	"op = armass_assemble ( str , 0x1000 , 1 )"		369374	2		=			
ANR	369387	Identifier	op		369374	0					
ANR	369388	CallExpression	"armass_assemble ( str , 0x1000 , 1 )"		369374	1					
ANR	369389	Callee	armass_assemble		369374	0					
ANR	369390	Identifier	armass_assemble		369374	0					
ANR	369391	ArgumentList	str		369374	1					
ANR	369392	Argument	str		369374	0					
ANR	369393	Identifier	str		369374	0					
ANR	369394	Argument	0x1000		369374	1					
ANR	369395	PrimaryExpression	0x1000		369374	0					
ANR	369396	Argument	1		369374	2					
ANR	369397	PrimaryExpression	1		369374	0					
ANR	369398	ExpressionStatement	"printf ( ""[%04x] %s\\n"" , op , str )"	6581:1:140125:140156	369374	2	True				
ANR	369399	CallExpression	"printf ( ""[%04x] %s\\n"" , op , str )"		369374	0					
ANR	369400	Callee	printf		369374	0					
ANR	369401	Identifier	printf		369374	0					
ANR	369402	ArgumentList	"""[%04x] %s\\n"""		369374	1					
ANR	369403	Argument	"""[%04x] %s\\n"""		369374	0					
ANR	369404	PrimaryExpression	"""[%04x] %s\\n"""		369374	0					
ANR	369405	Argument	op		369374	1					
ANR	369406	Identifier	op		369374	0					
ANR	369407	Argument	str		369374	2					
ANR	369408	Identifier	str		369374	0					
ANR	369409	ExpressionStatement	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -b 16 -a arm %04x"" , op )"	6582:1:140159:140220	369374	3	True				
ANR	369410	CallExpression	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -b 16 -a arm %04x"" , op )"		369374	0					
ANR	369411	Callee	snprintf		369374	0					
ANR	369412	Identifier	snprintf		369374	0					
ANR	369413	ArgumentList	cmd		369374	1					
ANR	369414	Argument	cmd		369374	0					
ANR	369415	Identifier	cmd		369374	0					
ANR	369416	Argument	sizeof ( cmd )		369374	1					
ANR	369417	SizeofExpression	sizeof ( cmd )		369374	0					
ANR	369418	Sizeof	sizeof		369374	0					
ANR	369419	SizeofOperand	cmd		369374	1					
ANR	369420	Argument	"""rasm2 -d -b 16 -a arm %04x"""		369374	2					
ANR	369421	PrimaryExpression	"""rasm2 -d -b 16 -a arm %04x"""		369374	0					
ANR	369422	Argument	op		369374	3					
ANR	369423	Identifier	op		369374	0					
ANR	369424	ExpressionStatement	system ( cmd )	6583:1:140223:140235	369374	4	True				
ANR	369425	CallExpression	system ( cmd )		369374	0					
ANR	369426	Callee	system		369374	0					
ANR	369427	Identifier	system		369374	0					
ANR	369428	ArgumentList	cmd		369374	1					
ANR	369429	Argument	cmd		369374	0					
ANR	369430	Identifier	cmd		369374	0					
ANR	369431	ReturnType	void		369374	1					
ANR	369432	Identifier	thisplay		369374	2					
ANR	369433	ParameterList	const char * str		369374	3					
ANR	369434	Parameter	const char * str	6578:14:140046:140060	369374	0	True				
ANR	369435	ParameterType	const char *		369374	0					
ANR	369436	Identifier	str		369374	1					
ANR	369437	CFGEntryNode	ENTRY		369374		True				
ANR	369438	CFGExitNode	EXIT		369374		True				
ANR	369439	Symbol	str		369374						
ANR	369440	Symbol	op		369374						
ANR	369441	Symbol	armass_assemble		369374						
ANR	369442	Symbol	cmd		369374						
ANR	369443	Function	display	6586:0:140240:140438							
ANR	369444	FunctionDef	display (const char * str)		369443	0					
ANR	369445	CompoundStatement		6586:30:140270:140438	369443	0					
ANR	369446	IdentifierDeclStatement	char cmd [ 32 ] ;	6587:1:140273:140285	369443	0	True				
ANR	369447	IdentifierDecl	cmd [ 32 ]		369443	0					
ANR	369448	IdentifierDeclType	char [ 32 ]		369443	0					
ANR	369449	Identifier	cmd		369443	1					
ANR	369450	PrimaryExpression	32		369443	2					
ANR	369451	IdentifierDeclStatement	"int op = armass_assemble ( str , 0x1000 , 0 ) ;"	6588:1:140288:140329	369443	1	True				
ANR	369452	IdentifierDecl	"op = armass_assemble ( str , 0x1000 , 0 )"		369443	0					
ANR	369453	IdentifierDeclType	int		369443	0					
ANR	369454	Identifier	op		369443	1					
ANR	369455	AssignmentExpression	"op = armass_assemble ( str , 0x1000 , 0 )"		369443	2		=			
ANR	369456	Identifier	op		369443	0					
ANR	369457	CallExpression	"armass_assemble ( str , 0x1000 , 0 )"		369443	1					
ANR	369458	Callee	armass_assemble		369443	0					
ANR	369459	Identifier	armass_assemble		369443	0					
ANR	369460	ArgumentList	str		369443	1					
ANR	369461	Argument	str		369443	0					
ANR	369462	Identifier	str		369443	0					
ANR	369463	Argument	0x1000		369443	1					
ANR	369464	PrimaryExpression	0x1000		369443	0					
ANR	369465	Argument	0		369443	2					
ANR	369466	PrimaryExpression	0		369443	0					
ANR	369467	ExpressionStatement	"printf ( ""[%08x] %s\\n"" , op , str )"	6589:1:140332:140363	369443	2	True				
ANR	369468	CallExpression	"printf ( ""[%08x] %s\\n"" , op , str )"		369443	0					
ANR	369469	Callee	printf		369443	0					
ANR	369470	Identifier	printf		369443	0					
ANR	369471	ArgumentList	"""[%08x] %s\\n"""		369443	1					
ANR	369472	Argument	"""[%08x] %s\\n"""		369443	0					
ANR	369473	PrimaryExpression	"""[%08x] %s\\n"""		369443	0					
ANR	369474	Argument	op		369443	1					
ANR	369475	Identifier	op		369443	0					
ANR	369476	Argument	str		369443	2					
ANR	369477	Identifier	str		369443	0					
ANR	369478	ExpressionStatement	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -a arm %08x"" , op )"	6590:1:140366:140421	369443	3	True				
ANR	369479	CallExpression	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -a arm %08x"" , op )"		369443	0					
ANR	369480	Callee	snprintf		369443	0					
ANR	369481	Identifier	snprintf		369443	0					
ANR	369482	ArgumentList	cmd		369443	1					
ANR	369483	Argument	cmd		369443	0					
ANR	369484	Identifier	cmd		369443	0					
ANR	369485	Argument	sizeof ( cmd )		369443	1					
ANR	369486	SizeofExpression	sizeof ( cmd )		369443	0					
ANR	369487	Sizeof	sizeof		369443	0					
ANR	369488	SizeofOperand	cmd		369443	1					
ANR	369489	Argument	"""rasm2 -d -a arm %08x"""		369443	2					
ANR	369490	PrimaryExpression	"""rasm2 -d -a arm %08x"""		369443	0					
ANR	369491	Argument	op		369443	3					
ANR	369492	Identifier	op		369443	0					
ANR	369493	ExpressionStatement	system ( cmd )	6591:1:140424:140436	369443	4	True				
ANR	369494	CallExpression	system ( cmd )		369443	0					
ANR	369495	Callee	system		369443	0					
ANR	369496	Identifier	system		369443	0					
ANR	369497	ArgumentList	cmd		369443	1					
ANR	369498	Argument	cmd		369443	0					
ANR	369499	Identifier	cmd		369443	0					
ANR	369500	ReturnType	void		369443	1					
ANR	369501	Identifier	display		369443	2					
ANR	369502	ParameterList	const char * str		369443	3					
ANR	369503	Parameter	const char * str	6586:13:140253:140267	369443	0	True				
ANR	369504	ParameterType	const char *		369443	0					
ANR	369505	Identifier	str		369443	1					
ANR	369506	CFGEntryNode	ENTRY		369443		True				
ANR	369507	CFGExitNode	EXIT		369443		True				
ANR	369508	Symbol	str		369443						
ANR	369509	Symbol	op		369443						
ANR	369510	Symbol	armass_assemble		369443						
ANR	369511	Symbol	cmd		369443						
ANR	369512	Function	main	6594:0:140441:143593							
ANR	369513	FunctionDef	main ()		369512	0					
ANR	369514	CompoundStatement		6594:11:140452:143593	369512	0					
ANR	369515	ExpressionStatement	"thisplay ( ""ldmia r1!, {r3, r4, r5}"" )"	6595:1:140455:140491	369512	0	True				
ANR	369516	CallExpression	"thisplay ( ""ldmia r1!, {r3, r4, r5}"" )"		369512	0					
ANR	369517	Callee	thisplay		369512	0					
ANR	369518	Identifier	thisplay		369512	0					
ANR	369519	ArgumentList	"""ldmia r1!, {r3, r4, r5}"""		369512	1					
ANR	369520	Argument	"""ldmia r1!, {r3, r4, r5}"""		369512	0					
ANR	369521	PrimaryExpression	"""ldmia r1!, {r3, r4, r5}"""		369512	0					
ANR	369522	ExpressionStatement	"thisplay ( ""stmia r1!, {r3, r4, r5}"" )"	6596:1:140494:140530	369512	1	True				
ANR	369523	CallExpression	"thisplay ( ""stmia r1!, {r3, r4, r5}"" )"		369512	0					
ANR	369524	Callee	thisplay		369512	0					
ANR	369525	Identifier	thisplay		369512	0					
ANR	369526	ArgumentList	"""stmia r1!, {r3, r4, r5}"""		369512	1					
ANR	369527	Argument	"""stmia r1!, {r3, r4, r5}"""		369512	0					
ANR	369528	PrimaryExpression	"""stmia r1!, {r3, r4, r5}"""		369512	0					
ANR	369529	ExpressionStatement	"thisplay ( ""bkpt 12"" )"	6597:1:140533:140553	369512	2	True				
ANR	369530	CallExpression	"thisplay ( ""bkpt 12"" )"		369512	0					
ANR	369531	Callee	thisplay		369512	0					
ANR	369532	Identifier	thisplay		369512	0					
ANR	369533	ArgumentList	"""bkpt 12"""		369512	1					
ANR	369534	Argument	"""bkpt 12"""		369512	0					
ANR	369535	PrimaryExpression	"""bkpt 12"""		369512	0					
ANR	369536	ReturnStatement	return 0 ;	6598:0:140555:140563	369512	3	True				
ANR	369537	PrimaryExpression	0		369512	0					
ANR	369538	ExpressionStatement	"thisplay ( ""sub r1, r2, 0"" )"	6599:1:140566:140591	369512	4	True				
ANR	369539	CallExpression	"thisplay ( ""sub r1, r2, 0"" )"		369512	0					
ANR	369540	Callee	thisplay		369512	0					
ANR	369541	Identifier	thisplay		369512	0					
ANR	369542	ArgumentList	"""sub r1, r2, 0"""		369512	1					
ANR	369543	Argument	"""sub r1, r2, 0"""		369512	0					
ANR	369544	PrimaryExpression	"""sub r1, r2, 0"""		369512	0					
ANR	369545	ExpressionStatement	"thisplay ( ""sub r1, r2, 4"" )"	6600:1:140594:140619	369512	5	True				
ANR	369546	CallExpression	"thisplay ( ""sub r1, r2, 4"" )"		369512	0					
ANR	369547	Callee	thisplay		369512	0					
ANR	369548	Identifier	thisplay		369512	0					
ANR	369549	ArgumentList	"""sub r1, r2, 4"""		369512	1					
ANR	369550	Argument	"""sub r1, r2, 4"""		369512	0					
ANR	369551	PrimaryExpression	"""sub r1, r2, 4"""		369512	0					
ANR	369552	ExpressionStatement	"thisplay ( ""sub r1, r2, 5"" )"	6601:1:140622:140647	369512	6	True				
ANR	369553	CallExpression	"thisplay ( ""sub r1, r2, 5"" )"		369512	0					
ANR	369554	Callee	thisplay		369512	0					
ANR	369555	Identifier	thisplay		369512	0					
ANR	369556	ArgumentList	"""sub r1, r2, 5"""		369512	1					
ANR	369557	Argument	"""sub r1, r2, 5"""		369512	0					
ANR	369558	PrimaryExpression	"""sub r1, r2, 5"""		369512	0					
ANR	369559	ExpressionStatement	"thisplay ( ""sub r1, r2, 7"" )"	6602:1:140650:140675	369512	7	True				
ANR	369560	CallExpression	"thisplay ( ""sub r1, r2, 7"" )"		369512	0					
ANR	369561	Callee	thisplay		369512	0					
ANR	369562	Identifier	thisplay		369512	0					
ANR	369563	ArgumentList	"""sub r1, r2, 7"""		369512	1					
ANR	369564	Argument	"""sub r1, r2, 7"""		369512	0					
ANR	369565	PrimaryExpression	"""sub r1, r2, 7"""		369512	0					
ANR	369566	ExpressionStatement	"thisplay ( ""sub r3, 44"" )"	6603:1:140678:140700	369512	8	True				
ANR	369567	CallExpression	"thisplay ( ""sub r3, 44"" )"		369512	0					
ANR	369568	Callee	thisplay		369512	0					
ANR	369569	Identifier	thisplay		369512	0					
ANR	369570	ArgumentList	"""sub r3, 44"""		369512	1					
ANR	369571	Argument	"""sub r3, 44"""		369512	0					
ANR	369572	PrimaryExpression	"""sub r3, 44"""		369512	0					
ANR	369573	ReturnStatement	return 0 ;	6604:0:140702:140710	369512	9	True				
ANR	369574	PrimaryExpression	0		369512	0					
ANR	369575	ExpressionStatement	"thisplay ( ""mov r0, 11"" )"	6606:1:140719:140741	369512	10	True				
ANR	369576	CallExpression	"thisplay ( ""mov r0, 11"" )"		369512	0					
ANR	369577	Callee	thisplay		369512	0					
ANR	369578	Identifier	thisplay		369512	0					
ANR	369579	ArgumentList	"""mov r0, 11"""		369512	1					
ANR	369580	Argument	"""mov r0, 11"""		369512	0					
ANR	369581	PrimaryExpression	"""mov r0, 11"""		369512	0					
ANR	369582	ExpressionStatement	"thisplay ( ""mov r0, r2"" )"	6607:1:140744:140766	369512	11	True				
ANR	369583	CallExpression	"thisplay ( ""mov r0, r2"" )"		369512	0					
ANR	369584	Callee	thisplay		369512	0					
ANR	369585	Identifier	thisplay		369512	0					
ANR	369586	ArgumentList	"""mov r0, r2"""		369512	1					
ANR	369587	Argument	"""mov r0, r2"""		369512	0					
ANR	369588	PrimaryExpression	"""mov r0, r2"""		369512	0					
ANR	369589	ExpressionStatement	"thisplay ( ""mov r1, r4"" )"	6608:1:140769:140791	369512	12	True				
ANR	369590	CallExpression	"thisplay ( ""mov r1, r4"" )"		369512	0					
ANR	369591	Callee	thisplay		369512	0					
ANR	369592	Identifier	thisplay		369512	0					
ANR	369593	ArgumentList	"""mov r1, r4"""		369512	1					
ANR	369594	Argument	"""mov r1, r4"""		369512	0					
ANR	369595	PrimaryExpression	"""mov r1, r4"""		369512	0					
ANR	369596	ExpressionStatement	"thisplay ( ""cmp r1, r2"" )"	6609:1:140794:140816	369512	13	True				
ANR	369597	CallExpression	"thisplay ( ""cmp r1, r2"" )"		369512	0					
ANR	369598	Callee	thisplay		369512	0					
ANR	369599	Identifier	thisplay		369512	0					
ANR	369600	ArgumentList	"""cmp r1, r2"""		369512	1					
ANR	369601	Argument	"""cmp r1, r2"""		369512	0					
ANR	369602	PrimaryExpression	"""cmp r1, r2"""		369512	0					
ANR	369603	ExpressionStatement	"thisplay ( ""cmp r3, 44"" )"	6610:1:140819:140841	369512	14	True				
ANR	369604	CallExpression	"thisplay ( ""cmp r3, 44"" )"		369512	0					
ANR	369605	Callee	thisplay		369512	0					
ANR	369606	Identifier	thisplay		369512	0					
ANR	369607	ArgumentList	"""cmp r3, 44"""		369512	1					
ANR	369608	Argument	"""cmp r3, 44"""		369512	0					
ANR	369609	PrimaryExpression	"""cmp r3, 44"""		369512	0					
ANR	369610	ExpressionStatement	"thisplay ( ""nop"" )"	6611:1:140844:140859	369512	15	True				
ANR	369611	CallExpression	"thisplay ( ""nop"" )"		369512	0					
ANR	369612	Callee	thisplay		369512	0					
ANR	369613	Identifier	thisplay		369512	0					
ANR	369614	ArgumentList	"""nop"""		369512	1					
ANR	369615	Argument	"""nop"""		369512	0					
ANR	369616	PrimaryExpression	"""nop"""		369512	0					
ANR	369617	ExpressionStatement	"thisplay ( ""svc 15"" )"	6612:1:140862:140880	369512	16	True				
ANR	369618	CallExpression	"thisplay ( ""svc 15"" )"		369512	0					
ANR	369619	Callee	thisplay		369512	0					
ANR	369620	Identifier	thisplay		369512	0					
ANR	369621	ArgumentList	"""svc 15"""		369512	1					
ANR	369622	Argument	"""svc 15"""		369512	0					
ANR	369623	PrimaryExpression	"""svc 15"""		369512	0					
ANR	369624	ExpressionStatement	"thisplay ( ""add r1, r2"" )"	6613:1:140883:140905	369512	17	True				
ANR	369625	CallExpression	"thisplay ( ""add r1, r2"" )"		369512	0					
ANR	369626	Callee	thisplay		369512	0					
ANR	369627	Identifier	thisplay		369512	0					
ANR	369628	ArgumentList	"""add r1, r2"""		369512	1					
ANR	369629	Argument	"""add r1, r2"""		369512	0					
ANR	369630	PrimaryExpression	"""add r1, r2"""		369512	0					
ANR	369631	ExpressionStatement	"thisplay ( ""add r3, 44"" )"	6614:1:140908:140930	369512	18	True				
ANR	369632	CallExpression	"thisplay ( ""add r3, 44"" )"		369512	0					
ANR	369633	Callee	thisplay		369512	0					
ANR	369634	Identifier	thisplay		369512	0					
ANR	369635	ArgumentList	"""add r3, 44"""		369512	1					
ANR	369636	Argument	"""add r3, 44"""		369512	0					
ANR	369637	PrimaryExpression	"""add r3, 44"""		369512	0					
ANR	369638	ExpressionStatement	"thisplay ( ""sub r1, r2, 3"" )"	6615:1:140933:140958	369512	19	True				
ANR	369639	CallExpression	"thisplay ( ""sub r1, r2, 3"" )"		369512	0					
ANR	369640	Callee	thisplay		369512	0					
ANR	369641	Identifier	thisplay		369512	0					
ANR	369642	ArgumentList	"""sub r1, r2, 3"""		369512	1					
ANR	369643	Argument	"""sub r1, r2, 3"""		369512	0					
ANR	369644	PrimaryExpression	"""sub r1, r2, 3"""		369512	0					
ANR	369645	ExpressionStatement	"thisplay ( ""sub r3, 44"" )"	6616:1:140961:140983	369512	20	True				
ANR	369646	CallExpression	"thisplay ( ""sub r3, 44"" )"		369512	0					
ANR	369647	Callee	thisplay		369512	0					
ANR	369648	Identifier	thisplay		369512	0					
ANR	369649	ArgumentList	"""sub r3, 44"""		369512	1					
ANR	369650	Argument	"""sub r3, 44"""		369512	0					
ANR	369651	PrimaryExpression	"""sub r3, 44"""		369512	0					
ANR	369652	ExpressionStatement	"thisplay ( ""tst r3,r4"" )"	6617:1:140986:141007	369512	21	True				
ANR	369653	CallExpression	"thisplay ( ""tst r3,r4"" )"		369512	0					
ANR	369654	Callee	thisplay		369512	0					
ANR	369655	Identifier	thisplay		369512	0					
ANR	369656	ArgumentList	"""tst r3,r4"""		369512	1					
ANR	369657	Argument	"""tst r3,r4"""		369512	0					
ANR	369658	PrimaryExpression	"""tst r3,r4"""		369512	0					
ANR	369659	ExpressionStatement	"thisplay ( ""bx r3"" )"	6618:1:141010:141027	369512	22	True				
ANR	369660	CallExpression	"thisplay ( ""bx r3"" )"		369512	0					
ANR	369661	Callee	thisplay		369512	0					
ANR	369662	Identifier	thisplay		369512	0					
ANR	369663	ArgumentList	"""bx r3"""		369512	1					
ANR	369664	Argument	"""bx r3"""		369512	0					
ANR	369665	PrimaryExpression	"""bx r3"""		369512	0					
ANR	369666	ExpressionStatement	"thisplay ( ""b 33"" )"	6619:1:141030:141046	369512	23	True				
ANR	369667	CallExpression	"thisplay ( ""b 33"" )"		369512	0					
ANR	369668	Callee	thisplay		369512	0					
ANR	369669	Identifier	thisplay		369512	0					
ANR	369670	ArgumentList	"""b 33"""		369512	1					
ANR	369671	Argument	"""b 33"""		369512	0					
ANR	369672	PrimaryExpression	"""b 33"""		369512	0					
ANR	369673	ExpressionStatement	"thisplay ( ""b 0"" )"	6620:1:141049:141064	369512	24	True				
ANR	369674	CallExpression	"thisplay ( ""b 0"" )"		369512	0					
ANR	369675	Callee	thisplay		369512	0					
ANR	369676	Identifier	thisplay		369512	0					
ANR	369677	ArgumentList	"""b 0"""		369512	1					
ANR	369678	Argument	"""b 0"""		369512	0					
ANR	369679	PrimaryExpression	"""b 0"""		369512	0					
ANR	369680	ExpressionStatement	"thisplay ( ""bne 44"" )"	6621:1:141067:141085	369512	25	True				
ANR	369681	CallExpression	"thisplay ( ""bne 44"" )"		369512	0					
ANR	369682	Callee	thisplay		369512	0					
ANR	369683	Identifier	thisplay		369512	0					
ANR	369684	ArgumentList	"""bne 44"""		369512	1					
ANR	369685	Argument	"""bne 44"""		369512	0					
ANR	369686	PrimaryExpression	"""bne 44"""		369512	0					
ANR	369687	ExpressionStatement	"thisplay ( ""and r2,r3"" )"	6622:1:141088:141109	369512	26	True				
ANR	369688	CallExpression	"thisplay ( ""and r2,r3"" )"		369512	0					
ANR	369689	Callee	thisplay		369512	0					
ANR	369690	Identifier	thisplay		369512	0					
ANR	369691	ArgumentList	"""and r2,r3"""		369512	1					
ANR	369692	Argument	"""and r2,r3"""		369512	0					
ANR	369693	PrimaryExpression	"""and r2,r3"""		369512	0					
ANR	369694	ExpressionStatement	"thisplay ( ""ldr r1, [pc, 12]"" )"	6627:1:141209:141237	369512	27	True				
ANR	369695	CallExpression	"thisplay ( ""ldr r1, [pc, 12]"" )"		369512	0					
ANR	369696	Callee	thisplay		369512	0					
ANR	369697	Identifier	thisplay		369512	0					
ANR	369698	ArgumentList	"""ldr r1, [pc, 12]"""		369512	1					
ANR	369699	Argument	"""ldr r1, [pc, 12]"""		369512	0					
ANR	369700	PrimaryExpression	"""ldr r1, [pc, 12]"""		369512	0					
ANR	369701	ExpressionStatement	"thisplay ( ""ldr r1, [sp, 24]"" )"	6628:1:141240:141268	369512	28	True				
ANR	369702	CallExpression	"thisplay ( ""ldr r1, [sp, 24]"" )"		369512	0					
ANR	369703	Callee	thisplay		369512	0					
ANR	369704	Identifier	thisplay		369512	0					
ANR	369705	ArgumentList	"""ldr r1, [sp, 24]"""		369512	1					
ANR	369706	Argument	"""ldr r1, [sp, 24]"""		369512	0					
ANR	369707	PrimaryExpression	"""ldr r1, [sp, 24]"""		369512	0					
ANR	369708	ExpressionStatement	"thisplay ( ""ldr r1, [r2, r3]"" )"	6629:1:141271:141299	369512	29	True				
ANR	369709	CallExpression	"thisplay ( ""ldr r1, [r2, r3]"" )"		369512	0					
ANR	369710	Callee	thisplay		369512	0					
ANR	369711	Identifier	thisplay		369512	0					
ANR	369712	ArgumentList	"""ldr r1, [r2, r3]"""		369512	1					
ANR	369713	Argument	"""ldr r1, [r2, r3]"""		369512	0					
ANR	369714	PrimaryExpression	"""ldr r1, [r2, r3]"""		369512	0					
ANR	369715	Label	0 :	6635:3:141443:141444	369512	30	True				
ANR	369716	Statement	8991	6635:8:141448:141451	369512	31	True				
ANR	369717	Statement	ldrh	6635:24:141464:141467	369512	32	True				
ANR	369718	Statement	r1	6635:32:141472:141473	369512	33	True				
ANR	369719	Statement	","	6635:34:141474:141474	369512	34	True				
ANR	369720	Statement	[	6635:36:141476:141476	369512	35	True				
ANR	369721	Statement	r2	6635:37:141477:141478	369512	36	True				
ANR	369722	Statement	","	6635:39:141479:141479	369512	37	True				
ANR	369723	Statement	12	6635:42:141482:141483	369512	38	True				
ANR	369724	Statement	]	6635:44:141484:141484	369512	39	True				
ANR	369725	Label	2 :	6636:3:141489:141490	369512	40	True				
ANR	369726	Statement	7	6636:8:141494:141494	369512	41	True				
ANR	369727	Statement	b11	6636:9:141495:141497	369512	42	True				
ANR	369728	Statement	ldrb	6636:24:141510:141513	369512	43	True				
ANR	369729	Statement	r1	6636:32:141518:141519	369512	44	True				
ANR	369730	Statement	","	6636:34:141520:141520	369512	45	True				
ANR	369731	Statement	[	6636:36:141522:141522	369512	46	True				
ANR	369732	Statement	r2	6636:37:141523:141524	369512	47	True				
ANR	369733	Statement	","	6636:39:141525:141525	369512	48	True				
ANR	369734	Statement	12	6636:42:141528:141529	369512	49	True				
ANR	369735	Statement	]	6636:44:141530:141530	369512	50	True				
ANR	369736	Label	4 :	6637:3:141535:141536	369512	51	True				
ANR	369737	Statement	8191	6637:8:141540:141543	369512	52	True				
ANR	369738	Statement	strh	6637:24:141556:141559	369512	53	True				
ANR	369739	Statement	r1	6637:32:141564:141565	369512	54	True				
ANR	369740	Statement	","	6637:34:141566:141566	369512	55	True				
ANR	369741	Statement	[	6637:36:141568:141568	369512	56	True				
ANR	369742	Statement	r2	6637:37:141569:141570	369512	57	True				
ANR	369743	Statement	","	6637:39:141571:141571	369512	58	True				
ANR	369744	Statement	12	6637:42:141574:141575	369512	59	True				
ANR	369745	Statement	]	6637:44:141576:141576	369512	60	True				
ANR	369746	Label	6 :	6638:3:141581:141582	369512	61	True				
ANR	369747	Statement	7311	6638:8:141586:141589	369512	62	True				
ANR	369748	Statement	strb	6638:24:141602:141605	369512	63	True				
ANR	369749	Statement	r1	6638:32:141610:141611	369512	64	True				
ANR	369750	Statement	","	6638:34:141612:141612	369512	65	True				
ANR	369751	Statement	[	6638:36:141614:141614	369512	66	True				
ANR	369752	Statement	r2	6638:37:141615:141616	369512	67	True				
ANR	369753	Statement	","	6638:39:141617:141617	369512	68	True				
ANR	369754	Statement	12	6638:42:141620:141621	369512	69	True				
ANR	369755	Statement	]	6638:44:141622:141622	369512	70	True				
ANR	369756	ExpressionStatement	"thisplay ( ""ldrh r1, [r2, 8]"" )"	6640:1:141632:141660	369512	71	True				
ANR	369757	CallExpression	"thisplay ( ""ldrh r1, [r2, 8]"" )"		369512	0					
ANR	369758	Callee	thisplay		369512	0					
ANR	369759	Identifier	thisplay		369512	0					
ANR	369760	ArgumentList	"""ldrh r1, [r2, 8]"""		369512	1					
ANR	369761	Argument	"""ldrh r1, [r2, 8]"""		369512	0					
ANR	369762	PrimaryExpression	"""ldrh r1, [r2, 8]"""		369512	0					
ANR	369763	ExpressionStatement	"thisplay ( ""ldrh r1, [r3, 8]"" )"	6641:1:141679:141707	369512	72	True				
ANR	369764	CallExpression	"thisplay ( ""ldrh r1, [r3, 8]"" )"		369512	0					
ANR	369765	Callee	thisplay		369512	0					
ANR	369766	Identifier	thisplay		369512	0					
ANR	369767	ArgumentList	"""ldrh r1, [r3, 8]"""		369512	1					
ANR	369768	Argument	"""ldrh r1, [r3, 8]"""		369512	0					
ANR	369769	PrimaryExpression	"""ldrh r1, [r3, 8]"""		369512	0					
ANR	369770	ExpressionStatement	"thisplay ( ""ldrh r1, [r4, 16]"" )"	6642:1:141726:141755	369512	73	True				
ANR	369771	CallExpression	"thisplay ( ""ldrh r1, [r4, 16]"" )"		369512	0					
ANR	369772	Callee	thisplay		369512	0					
ANR	369773	Identifier	thisplay		369512	0					
ANR	369774	ArgumentList	"""ldrh r1, [r4, 16]"""		369512	1					
ANR	369775	Argument	"""ldrh r1, [r4, 16]"""		369512	0					
ANR	369776	PrimaryExpression	"""ldrh r1, [r4, 16]"""		369512	0					
ANR	369777	ExpressionStatement	"thisplay ( ""ldrh r1, [r2, 32]"" )"	6643:1:141774:141803	369512	74	True				
ANR	369778	CallExpression	"thisplay ( ""ldrh r1, [r2, 32]"" )"		369512	0					
ANR	369779	Callee	thisplay		369512	0					
ANR	369780	Identifier	thisplay		369512	0					
ANR	369781	ArgumentList	"""ldrh r1, [r2, 32]"""		369512	1					
ANR	369782	Argument	"""ldrh r1, [r2, 32]"""		369512	0					
ANR	369783	PrimaryExpression	"""ldrh r1, [r2, 32]"""		369512	0					
ANR	369784	ExpressionStatement	"thisplay ( ""ldrb r1, [r2, 20]"" )"	6644:1:141822:141851	369512	75	True				
ANR	369785	CallExpression	"thisplay ( ""ldrb r1, [r2, 20]"" )"		369512	0					
ANR	369786	Callee	thisplay		369512	0					
ANR	369787	Identifier	thisplay		369512	0					
ANR	369788	ArgumentList	"""ldrb r1, [r2, 20]"""		369512	1					
ANR	369789	Argument	"""ldrb r1, [r2, 20]"""		369512	0					
ANR	369790	PrimaryExpression	"""ldrb r1, [r2, 20]"""		369512	0					
ANR	369791	ExpressionStatement	"thisplay ( ""strh r1, [r2, 20]"" )"	6645:1:141870:141899	369512	76	True				
ANR	369792	CallExpression	"thisplay ( ""strh r1, [r2, 20]"" )"		369512	0					
ANR	369793	Callee	thisplay		369512	0					
ANR	369794	Identifier	thisplay		369512	0					
ANR	369795	ArgumentList	"""strh r1, [r2, 20]"""		369512	1					
ANR	369796	Argument	"""strh r1, [r2, 20]"""		369512	0					
ANR	369797	PrimaryExpression	"""strh r1, [r2, 20]"""		369512	0					
ANR	369798	ExpressionStatement	"thisplay ( ""strb r1, [r2, 20]"" )"	6646:1:141918:141947	369512	77	True				
ANR	369799	CallExpression	"thisplay ( ""strb r1, [r2, 20]"" )"		369512	0					
ANR	369800	Callee	thisplay		369512	0					
ANR	369801	Identifier	thisplay		369512	0					
ANR	369802	ArgumentList	"""strb r1, [r2, 20]"""		369512	1					
ANR	369803	Argument	"""strb r1, [r2, 20]"""		369512	0					
ANR	369804	PrimaryExpression	"""strb r1, [r2, 20]"""		369512	0					
ANR	369805	ExpressionStatement	"thisplay ( ""str r1, [sp, 20]"" )"	6647:1:141966:141994	369512	78	True				
ANR	369806	CallExpression	"thisplay ( ""str r1, [sp, 20]"" )"		369512	0					
ANR	369807	Callee	thisplay		369512	0					
ANR	369808	Identifier	thisplay		369512	0					
ANR	369809	ArgumentList	"""str r1, [sp, 20]"""		369512	1					
ANR	369810	Argument	"""str r1, [sp, 20]"""		369512	0					
ANR	369811	PrimaryExpression	"""str r1, [sp, 20]"""		369512	0					
ANR	369812	ExpressionStatement	"thisplay ( ""str r1, [r2, 12]"" )"	6648:1:142013:142041	369512	79	True				
ANR	369813	CallExpression	"thisplay ( ""str r1, [r2, 12]"" )"		369512	0					
ANR	369814	Callee	thisplay		369512	0					
ANR	369815	Identifier	thisplay		369512	0					
ANR	369816	ArgumentList	"""str r1, [r2, 12]"""		369512	1					
ANR	369817	Argument	"""str r1, [r2, 12]"""		369512	0					
ANR	369818	PrimaryExpression	"""str r1, [r2, 12]"""		369512	0					
ANR	369819	ExpressionStatement	"thisplay ( ""str r1, [r2, r3]"" )"	6649:1:142050:142078	369512	80	True				
ANR	369820	CallExpression	"thisplay ( ""str r1, [r2, r3]"" )"		369512	0					
ANR	369821	Callee	thisplay		369512	0					
ANR	369822	Identifier	thisplay		369512	0					
ANR	369823	ArgumentList	"""str r1, [r2, r3]"""		369512	1					
ANR	369824	Argument	"""str r1, [r2, r3]"""		369512	0					
ANR	369825	PrimaryExpression	"""str r1, [r2, r3]"""		369512	0					
ANR	369826	ReturnStatement	return 0 ;	6650:0:142080:142088	369512	81	True				
ANR	369827	PrimaryExpression	0		369512	0					
ANR	369828	ExpressionStatement	"display ( ""mov r0, 33"" )"	6652:1:142097:142118	369512	82	True				
ANR	369829	CallExpression	"display ( ""mov r0, 33"" )"		369512	0					
ANR	369830	Callee	display		369512	0					
ANR	369831	Identifier	display		369512	0					
ANR	369832	ArgumentList	"""mov r0, 33"""		369512	1					
ANR	369833	Argument	"""mov r0, 33"""		369512	0					
ANR	369834	PrimaryExpression	"""mov r0, 33"""		369512	0					
ANR	369835	ExpressionStatement	"display ( ""mov r1, 33"" )"	6653:1:142121:142142	369512	83	True				
ANR	369836	CallExpression	"display ( ""mov r1, 33"" )"		369512	0					
ANR	369837	Callee	display		369512	0					
ANR	369838	Identifier	display		369512	0					
ANR	369839	ArgumentList	"""mov r1, 33"""		369512	1					
ANR	369840	Argument	"""mov r1, 33"""		369512	0					
ANR	369841	PrimaryExpression	"""mov r1, 33"""		369512	0					
ANR	369842	ExpressionStatement	"display ( ""movne r0, 33"" )"	6654:1:142145:142168	369512	84	True				
ANR	369843	CallExpression	"display ( ""movne r0, 33"" )"		369512	0					
ANR	369844	Callee	display		369512	0					
ANR	369845	Identifier	display		369512	0					
ANR	369846	ArgumentList	"""movne r0, 33"""		369512	1					
ANR	369847	Argument	"""movne r0, 33"""		369512	0					
ANR	369848	PrimaryExpression	"""movne r0, 33"""		369512	0					
ANR	369849	ExpressionStatement	"display ( ""tst r0, r1, lsl #2"" )"	6655:1:142171:142200	369512	85	True				
ANR	369850	CallExpression	"display ( ""tst r0, r1, lsl #2"" )"		369512	0					
ANR	369851	Callee	display		369512	0					
ANR	369852	Identifier	display		369512	0					
ANR	369853	ArgumentList	"""tst r0, r1, lsl #2"""		369512	1					
ANR	369854	Argument	"""tst r0, r1, lsl #2"""		369512	0					
ANR	369855	PrimaryExpression	"""tst r0, r1, lsl #2"""		369512	0					
ANR	369856	ExpressionStatement	"display ( ""svc 0x80"" )"	6656:1:142203:142222	369512	86	True				
ANR	369857	CallExpression	"display ( ""svc 0x80"" )"		369512	0					
ANR	369858	Callee	display		369512	0					
ANR	369859	Identifier	display		369512	0					
ANR	369860	ArgumentList	"""svc 0x80"""		369512	1					
ANR	369861	Argument	"""svc 0x80"""		369512	0					
ANR	369862	PrimaryExpression	"""svc 0x80"""		369512	0					
ANR	369863	ExpressionStatement	"display ( ""sub r3, r1, r2"" )"	6657:1:142225:142250	369512	87	True				
ANR	369864	CallExpression	"display ( ""sub r3, r1, r2"" )"		369512	0					
ANR	369865	Callee	display		369512	0					
ANR	369866	Identifier	display		369512	0					
ANR	369867	ArgumentList	"""sub r3, r1, r2"""		369512	1					
ANR	369868	Argument	"""sub r3, r1, r2"""		369512	0					
ANR	369869	PrimaryExpression	"""sub r3, r1, r2"""		369512	0					
ANR	369870	ExpressionStatement	"display ( ""add r0, r1, r2"" )"	6658:1:142253:142278	369512	88	True				
ANR	369871	CallExpression	"display ( ""add r0, r1, r2"" )"		369512	0					
ANR	369872	Callee	display		369512	0					
ANR	369873	Identifier	display		369512	0					
ANR	369874	ArgumentList	"""add r0, r1, r2"""		369512	1					
ANR	369875	Argument	"""add r0, r1, r2"""		369512	0					
ANR	369876	PrimaryExpression	"""add r0, r1, r2"""		369512	0					
ANR	369877	ExpressionStatement	"display ( ""mov fp, 0"" )"	6659:1:142281:142301	369512	89	True				
ANR	369878	CallExpression	"display ( ""mov fp, 0"" )"		369512	0					
ANR	369879	Callee	display		369512	0					
ANR	369880	Identifier	display		369512	0					
ANR	369881	ArgumentList	"""mov fp, 0"""		369512	1					
ANR	369882	Argument	"""mov fp, 0"""		369512	0					
ANR	369883	PrimaryExpression	"""mov fp, 0"""		369512	0					
ANR	369884	ExpressionStatement	"display ( ""pop {pc}"" )"	6660:1:142304:142323	369512	90	True				
ANR	369885	CallExpression	"display ( ""pop {pc}"" )"		369512	0					
ANR	369886	Callee	display		369512	0					
ANR	369887	Identifier	display		369512	0					
ANR	369888	ArgumentList	"""pop {pc}"""		369512	1					
ANR	369889	Argument	"""pop {pc}"""		369512	0					
ANR	369890	PrimaryExpression	"""pop {pc}"""		369512	0					
ANR	369891	ExpressionStatement	"display ( ""pop {r3}"" )"	6661:1:142326:142345	369512	91	True				
ANR	369892	CallExpression	"display ( ""pop {r3}"" )"		369512	0					
ANR	369893	Callee	display		369512	0					
ANR	369894	Identifier	display		369512	0					
ANR	369895	ArgumentList	"""pop {r3}"""		369512	1					
ANR	369896	Argument	"""pop {r3}"""		369512	0					
ANR	369897	PrimaryExpression	"""pop {r3}"""		369512	0					
ANR	369898	ExpressionStatement	"display ( ""bx r1"" )"	6662:1:142348:142364	369512	92	True				
ANR	369899	CallExpression	"display ( ""bx r1"" )"		369512	0					
ANR	369900	Callee	display		369512	0					
ANR	369901	Identifier	display		369512	0					
ANR	369902	ArgumentList	"""bx r1"""		369512	1					
ANR	369903	Argument	"""bx r1"""		369512	0					
ANR	369904	PrimaryExpression	"""bx r1"""		369512	0					
ANR	369905	ExpressionStatement	"display ( ""bx r3"" )"	6663:1:142367:142383	369512	93	True				
ANR	369906	CallExpression	"display ( ""bx r3"" )"		369512	0					
ANR	369907	Callee	display		369512	0					
ANR	369908	Identifier	display		369512	0					
ANR	369909	ArgumentList	"""bx r3"""		369512	1					
ANR	369910	Argument	"""bx r3"""		369512	0					
ANR	369911	PrimaryExpression	"""bx r3"""		369512	0					
ANR	369912	ExpressionStatement	"display ( ""bx pc"" )"	6664:1:142386:142402	369512	94	True				
ANR	369913	CallExpression	"display ( ""bx pc"" )"		369512	0					
ANR	369914	Callee	display		369512	0					
ANR	369915	Identifier	display		369512	0					
ANR	369916	ArgumentList	"""bx pc"""		369512	1					
ANR	369917	Argument	"""bx pc"""		369512	0					
ANR	369918	PrimaryExpression	"""bx pc"""		369512	0					
ANR	369919	ExpressionStatement	"display ( ""blx fp"" )"	6665:1:142405:142422	369512	95	True				
ANR	369920	CallExpression	"display ( ""blx fp"" )"		369512	0					
ANR	369921	Callee	display		369512	0					
ANR	369922	Identifier	display		369512	0					
ANR	369923	ArgumentList	"""blx fp"""		369512	1					
ANR	369924	Argument	"""blx fp"""		369512	0					
ANR	369925	PrimaryExpression	"""blx fp"""		369512	0					
ANR	369926	ExpressionStatement	"display ( ""pop {pc}"" )"	6666:1:142425:142444	369512	96	True				
ANR	369927	CallExpression	"display ( ""pop {pc}"" )"		369512	0					
ANR	369928	Callee	display		369512	0					
ANR	369929	Identifier	display		369512	0					
ANR	369930	ArgumentList	"""pop {pc}"""		369512	1					
ANR	369931	Argument	"""pop {pc}"""		369512	0					
ANR	369932	PrimaryExpression	"""pop {pc}"""		369512	0					
ANR	369933	ExpressionStatement	"display ( ""add lr, pc, lr"" )"	6667:1:142447:142472	369512	97	True				
ANR	369934	CallExpression	"display ( ""add lr, pc, lr"" )"		369512	0					
ANR	369935	Callee	display		369512	0					
ANR	369936	Identifier	display		369512	0					
ANR	369937	ArgumentList	"""add lr, pc, lr"""		369512	1					
ANR	369938	Argument	"""add lr, pc, lr"""		369512	0					
ANR	369939	PrimaryExpression	"""add lr, pc, lr"""		369512	0					
ANR	369940	ExpressionStatement	"display ( ""adds r3, #8"" )"	6668:1:142475:142497	369512	98	True				
ANR	369941	CallExpression	"display ( ""adds r3, #8"" )"		369512	0					
ANR	369942	Callee	display		369512	0					
ANR	369943	Identifier	display		369512	0					
ANR	369944	ArgumentList	"""adds r3, #8"""		369512	1					
ANR	369945	Argument	"""adds r3, #8"""		369512	0					
ANR	369946	PrimaryExpression	"""adds r3, #8"""		369512	0					
ANR	369947	ExpressionStatement	"display ( ""adds r3, r2, #8"" )"	6669:1:142500:142526	369512	99	True				
ANR	369948	CallExpression	"display ( ""adds r3, r2, #8"" )"		369512	0					
ANR	369949	Callee	display		369512	0					
ANR	369950	Identifier	display		369512	0					
ANR	369951	ArgumentList	"""adds r3, r2, #8"""		369512	1					
ANR	369952	Argument	"""adds r3, r2, #8"""		369512	0					
ANR	369953	PrimaryExpression	"""adds r3, r2, #8"""		369512	0					
ANR	369954	ExpressionStatement	"display ( ""subs r2, #1"" )"	6670:1:142529:142551	369512	100	True				
ANR	369955	CallExpression	"display ( ""subs r2, #1"" )"		369512	0					
ANR	369956	Callee	display		369512	0					
ANR	369957	Identifier	display		369512	0					
ANR	369958	ArgumentList	"""subs r2, #1"""		369512	1					
ANR	369959	Argument	"""subs r2, #1"""		369512	0					
ANR	369960	PrimaryExpression	"""subs r2, #1"""		369512	0					
ANR	369961	ExpressionStatement	"display ( ""cmp r0, r4"" )"	6671:1:142554:142575	369512	101	True				
ANR	369962	CallExpression	"display ( ""cmp r0, r4"" )"		369512	0					
ANR	369963	Callee	display		369512	0					
ANR	369964	Identifier	display		369512	0					
ANR	369965	ArgumentList	"""cmp r0, r4"""		369512	1					
ANR	369966	Argument	"""cmp r0, r4"""		369512	0					
ANR	369967	PrimaryExpression	"""cmp r0, r4"""		369512	0					
ANR	369968	ExpressionStatement	"display ( ""cmp r7, pc"" )"	6672:1:142578:142599	369512	102	True				
ANR	369969	CallExpression	"display ( ""cmp r7, pc"" )"		369512	0					
ANR	369970	Callee	display		369512	0					
ANR	369971	Identifier	display		369512	0					
ANR	369972	ArgumentList	"""cmp r7, pc"""		369512	1					
ANR	369973	Argument	"""cmp r7, pc"""		369512	0					
ANR	369974	PrimaryExpression	"""cmp r7, pc"""		369512	0					
ANR	369975	ExpressionStatement	"display ( ""cmp r1, r3"" )"	6673:1:142602:142623	369512	103	True				
ANR	369976	CallExpression	"display ( ""cmp r1, r3"" )"		369512	0					
ANR	369977	Callee	display		369512	0					
ANR	369978	Identifier	display		369512	0					
ANR	369979	ArgumentList	"""cmp r1, r3"""		369512	1					
ANR	369980	Argument	"""cmp r1, r3"""		369512	0					
ANR	369981	PrimaryExpression	"""cmp r1, r3"""		369512	0					
ANR	369982	ExpressionStatement	"display ( ""mov pc, 44"" )"	6674:1:142626:142647	369512	104	True				
ANR	369983	CallExpression	"display ( ""mov pc, 44"" )"		369512	0					
ANR	369984	Callee	display		369512	0					
ANR	369985	Identifier	display		369512	0					
ANR	369986	ArgumentList	"""mov pc, 44"""		369512	1					
ANR	369987	Argument	"""mov pc, 44"""		369512	0					
ANR	369988	PrimaryExpression	"""mov pc, 44"""		369512	0					
ANR	369989	ExpressionStatement	"display ( ""mov pc, r3"" )"	6675:1:142650:142671	369512	105	True				
ANR	369990	CallExpression	"display ( ""mov pc, r3"" )"		369512	0					
ANR	369991	Callee	display		369512	0					
ANR	369992	Identifier	display		369512	0					
ANR	369993	ArgumentList	"""mov pc, r3"""		369512	1					
ANR	369994	Argument	"""mov pc, r3"""		369512	0					
ANR	369995	PrimaryExpression	"""mov pc, r3"""		369512	0					
ANR	369996	ExpressionStatement	"display ( ""push {pc}"" )"	6676:1:142674:142694	369512	106	True				
ANR	369997	CallExpression	"display ( ""push {pc}"" )"		369512	0					
ANR	369998	Callee	display		369512	0					
ANR	369999	Identifier	display		369512	0					
ANR	370000	ArgumentList	"""push {pc}"""		369512	1					
ANR	370001	Argument	"""push {pc}"""		369512	0					
ANR	370002	PrimaryExpression	"""push {pc}"""		369512	0					
ANR	370003	ExpressionStatement	"display ( ""pop {pc}"" )"	6677:1:142697:142716	369512	107	True				
ANR	370004	CallExpression	"display ( ""pop {pc}"" )"		369512	0					
ANR	370005	Callee	display		369512	0					
ANR	370006	Identifier	display		369512	0					
ANR	370007	ArgumentList	"""pop {pc}"""		369512	1					
ANR	370008	Argument	"""pop {pc}"""		369512	0					
ANR	370009	PrimaryExpression	"""pop {pc}"""		369512	0					
ANR	370010	ExpressionStatement	"display ( ""nop"" )"	6678:1:142719:142733	369512	108	True				
ANR	370011	CallExpression	"display ( ""nop"" )"		369512	0					
ANR	370012	Callee	display		369512	0					
ANR	370013	Identifier	display		369512	0					
ANR	370014	ArgumentList	"""nop"""		369512	1					
ANR	370015	Argument	"""nop"""		369512	0					
ANR	370016	PrimaryExpression	"""nop"""		369512	0					
ANR	370017	ExpressionStatement	"display ( ""ldr r1, [r2, 33]"" )"	6679:1:142736:142763	369512	109	True				
ANR	370018	CallExpression	"display ( ""ldr r1, [r2, 33]"" )"		369512	0					
ANR	370019	Callee	display		369512	0					
ANR	370020	Identifier	display		369512	0					
ANR	370021	ArgumentList	"""ldr r1, [r2, 33]"""		369512	1					
ANR	370022	Argument	"""ldr r1, [r2, 33]"""		369512	0					
ANR	370023	PrimaryExpression	"""ldr r1, [r2, 33]"""		369512	0					
ANR	370024	ExpressionStatement	"display ( ""ldr r1, [r2, r3]"" )"	6680:1:142766:142793	369512	110	True				
ANR	370025	CallExpression	"display ( ""ldr r1, [r2, r3]"" )"		369512	0					
ANR	370026	Callee	display		369512	0					
ANR	370027	Identifier	display		369512	0					
ANR	370028	ArgumentList	"""ldr r1, [r2, r3]"""		369512	1					
ANR	370029	Argument	"""ldr r1, [r2, r3]"""		369512	0					
ANR	370030	PrimaryExpression	"""ldr r1, [r2, r3]"""		369512	0					
ANR	370031	ExpressionStatement	"display ( ""ldr r3, [r4, r6]"" )"	6681:1:142796:142823	369512	111	True				
ANR	370032	CallExpression	"display ( ""ldr r3, [r4, r6]"" )"		369512	0					
ANR	370033	Callee	display		369512	0					
ANR	370034	Identifier	display		369512	0					
ANR	370035	ArgumentList	"""ldr r3, [r4, r6]"""		369512	1					
ANR	370036	Argument	"""ldr r3, [r4, r6]"""		369512	0					
ANR	370037	PrimaryExpression	"""ldr r3, [r4, r6]"""		369512	0					
ANR	370038	ExpressionStatement	"display ( ""str r1, [pc, 33]"" )"	6682:1:142826:142853	369512	112	True				
ANR	370039	CallExpression	"display ( ""str r1, [pc, 33]"" )"		369512	0					
ANR	370040	Callee	display		369512	0					
ANR	370041	Identifier	display		369512	0					
ANR	370042	ArgumentList	"""str r1, [pc, 33]"""		369512	1					
ANR	370043	Argument	"""str r1, [pc, 33]"""		369512	0					
ANR	370044	PrimaryExpression	"""str r1, [pc, 33]"""		369512	0					
ANR	370045	ExpressionStatement	"display ( ""str r1, [pc], 2"" )"	6683:1:142856:142882	369512	113	True				
ANR	370046	CallExpression	"display ( ""str r1, [pc], 2"" )"		369512	0					
ANR	370047	Callee	display		369512	0					
ANR	370048	Identifier	display		369512	0					
ANR	370049	ArgumentList	"""str r1, [pc], 2"""		369512	1					
ANR	370050	Argument	"""str r1, [pc], 2"""		369512	0					
ANR	370051	PrimaryExpression	"""str r1, [pc], 2"""		369512	0					
ANR	370052	ExpressionStatement	"display ( ""str r1, [pc, 3]"" )"	6684:1:142885:142911	369512	114	True				
ANR	370053	CallExpression	"display ( ""str r1, [pc, 3]"" )"		369512	0					
ANR	370054	Callee	display		369512	0					
ANR	370055	Identifier	display		369512	0					
ANR	370056	ArgumentList	"""str r1, [pc, 3]"""		369512	1					
ANR	370057	Argument	"""str r1, [pc, 3]"""		369512	0					
ANR	370058	PrimaryExpression	"""str r1, [pc, 3]"""		369512	0					
ANR	370059	ExpressionStatement	"display ( ""str r1, [pc, r4]"" )"	6685:1:142914:142941	369512	115	True				
ANR	370060	CallExpression	"display ( ""str r1, [pc, r4]"" )"		369512	0					
ANR	370061	Callee	display		369512	0					
ANR	370062	Identifier	display		369512	0					
ANR	370063	ArgumentList	"""str r1, [pc, r4]"""		369512	1					
ANR	370064	Argument	"""str r1, [pc, r4]"""		369512	0					
ANR	370065	PrimaryExpression	"""str r1, [pc, r4]"""		369512	0					
ANR	370066	ExpressionStatement	"display ( ""bx r3"" )"	6686:1:142944:142960	369512	116	True				
ANR	370067	CallExpression	"display ( ""bx r3"" )"		369512	0					
ANR	370068	Callee	display		369512	0					
ANR	370069	Identifier	display		369512	0					
ANR	370070	ArgumentList	"""bx r3"""		369512	1					
ANR	370071	Argument	"""bx r3"""		369512	0					
ANR	370072	PrimaryExpression	"""bx r3"""		369512	0					
ANR	370073	ExpressionStatement	"display ( ""bcc 33"" )"	6687:1:142963:142980	369512	117	True				
ANR	370074	CallExpression	"display ( ""bcc 33"" )"		369512	0					
ANR	370075	Callee	display		369512	0					
ANR	370076	Identifier	display		369512	0					
ANR	370077	ArgumentList	"""bcc 33"""		369512	1					
ANR	370078	Argument	"""bcc 33"""		369512	0					
ANR	370079	PrimaryExpression	"""bcc 33"""		369512	0					
ANR	370080	ExpressionStatement	"display ( ""blx r3"" )"	6688:1:142983:143000	369512	118	True				
ANR	370081	CallExpression	"display ( ""blx r3"" )"		369512	0					
ANR	370082	Callee	display		369512	0					
ANR	370083	Identifier	display		369512	0					
ANR	370084	ArgumentList	"""blx r3"""		369512	1					
ANR	370085	Argument	"""blx r3"""		369512	0					
ANR	370086	PrimaryExpression	"""blx r3"""		369512	0					
ANR	370087	ExpressionStatement	"display ( ""bne 0x1200"" )"	6689:1:143003:143024	369512	119	True				
ANR	370088	CallExpression	"display ( ""bne 0x1200"" )"		369512	0					
ANR	370089	Callee	display		369512	0					
ANR	370090	Identifier	display		369512	0					
ANR	370091	ArgumentList	"""bne 0x1200"""		369512	1					
ANR	370092	Argument	"""bne 0x1200"""		369512	0					
ANR	370093	PrimaryExpression	"""bne 0x1200"""		369512	0					
ANR	370094	ExpressionStatement	"display ( ""str r0, [r1]"" )"	6690:1:143027:143050	369512	120	True				
ANR	370095	CallExpression	"display ( ""str r0, [r1]"" )"		369512	0					
ANR	370096	Callee	display		369512	0					
ANR	370097	Identifier	display		369512	0					
ANR	370098	ArgumentList	"""str r0, [r1]"""		369512	1					
ANR	370099	Argument	"""str r0, [r1]"""		369512	0					
ANR	370100	PrimaryExpression	"""str r0, [r1]"""		369512	0					
ANR	370101	ExpressionStatement	"display ( ""push {fp,lr}"" )"	6691:1:143053:143076	369512	121	True				
ANR	370102	CallExpression	"display ( ""push {fp,lr}"" )"		369512	0					
ANR	370103	Callee	display		369512	0					
ANR	370104	Identifier	display		369512	0					
ANR	370105	ArgumentList	"""push {fp,lr}"""		369512	1					
ANR	370106	Argument	"""push {fp,lr}"""		369512	0					
ANR	370107	PrimaryExpression	"""push {fp,lr}"""		369512	0					
ANR	370108	ExpressionStatement	"display ( ""pop {fp,lr}"" )"	6692:1:143079:143101	369512	122	True				
ANR	370109	CallExpression	"display ( ""pop {fp,lr}"" )"		369512	0					
ANR	370110	Callee	display		369512	0					
ANR	370111	Identifier	display		369512	0					
ANR	370112	ArgumentList	"""pop {fp,lr}"""		369512	1					
ANR	370113	Argument	"""pop {fp,lr}"""		369512	0					
ANR	370114	PrimaryExpression	"""pop {fp,lr}"""		369512	0					
ANR	370115	ExpressionStatement	"display ( ""pop {pc}"" )"	6693:1:143104:143123	369512	123	True				
ANR	370116	CallExpression	"display ( ""pop {pc}"" )"		369512	0					
ANR	370117	Callee	display		369512	0					
ANR	370118	Identifier	display		369512	0					
ANR	370119	ArgumentList	"""pop {pc}"""		369512	1					
ANR	370120	Argument	"""pop {pc}"""		369512	0					
ANR	370121	PrimaryExpression	"""pop {pc}"""		369512	0					
ANR	370122	ExpressionStatement	"display ( ""andeq r7, r4, r0, lsr lr"" )"	6699:1:143257:143292	369512	124	True				
ANR	370123	CallExpression	"display ( ""andeq r7, r4, r0, lsr lr"" )"		369512	0					
ANR	370124	Callee	display		369512	0					
ANR	370125	Identifier	display		369512	0					
ANR	370126	ArgumentList	"""andeq r7, r4, r0, lsr lr"""		369512	1					
ANR	370127	Argument	"""andeq r7, r4, r0, lsr lr"""		369512	0					
ANR	370128	PrimaryExpression	"""andeq r7, r4, r0, lsr lr"""		369512	0					
ANR	370129	ExpressionStatement	"display ( ""andeq r6, r3, r0, ror lr"" )"	6700:1:143295:143330	369512	125	True				
ANR	370130	CallExpression	"display ( ""andeq r6, r3, r0, ror lr"" )"		369512	0					
ANR	370131	Callee	display		369512	0					
ANR	370132	Identifier	display		369512	0					
ANR	370133	ArgumentList	"""andeq r6, r3, r0, ror lr"""		369512	1					
ANR	370134	Argument	"""andeq r6, r3, r0, ror lr"""		369512	0					
ANR	370135	PrimaryExpression	"""andeq r6, r3, r0, ror lr"""		369512	0					
ANR	370136	ExpressionStatement	"display ( ""pop {r4,r5,r6,r7,pc}"" )"	6702:1:143388:143419	369512	126	True				
ANR	370137	CallExpression	"display ( ""pop {r4,r5,r6,r7,pc}"" )"		369512	0					
ANR	370138	Callee	display		369512	0					
ANR	370139	Identifier	display		369512	0					
ANR	370140	ArgumentList	"""pop {r4,r5,r6,r7,pc}"""		369512	1					
ANR	370141	Argument	"""pop {r4,r5,r6,r7,pc}"""		369512	0					
ANR	370142	PrimaryExpression	"""pop {r4,r5,r6,r7,pc}"""		369512	0					
ANR	370143	ExpressionStatement	"display ( ""blx r1"" )"	6706:1:143430:143447	369512	127	True				
ANR	370144	CallExpression	"display ( ""blx r1"" )"		369512	0					
ANR	370145	Callee	display		369512	0					
ANR	370146	Identifier	display		369512	0					
ANR	370147	ArgumentList	"""blx r1"""		369512	1					
ANR	370148	Argument	"""blx r1"""		369512	0					
ANR	370149	PrimaryExpression	"""blx r1"""		369512	0					
ANR	370150	ExpressionStatement	"display ( ""blx 0x8048"" )"	6707:1:143450:143471	369512	128	True				
ANR	370151	CallExpression	"display ( ""blx 0x8048"" )"		369512	0					
ANR	370152	Callee	display		369512	0					
ANR	370153	Identifier	display		369512	0					
ANR	370154	ArgumentList	"""blx 0x8048"""		369512	1					
ANR	370155	Argument	"""blx 0x8048"""		369512	0					
ANR	370156	PrimaryExpression	"""blx 0x8048"""		369512	0					
ANR	370157	ExpressionStatement	"display ( ""b 0x123"" )"	6711:1:143488:143506	369512	129	True				
ANR	370158	CallExpression	"display ( ""b 0x123"" )"		369512	0					
ANR	370159	Callee	display		369512	0					
ANR	370160	Identifier	display		369512	0					
ANR	370161	ArgumentList	"""b 0x123"""		369512	1					
ANR	370162	Argument	"""b 0x123"""		369512	0					
ANR	370163	PrimaryExpression	"""b 0x123"""		369512	0					
ANR	370164	ExpressionStatement	"display ( ""bl 0x123"" )"	6712:1:143509:143528	369512	130	True				
ANR	370165	CallExpression	"display ( ""bl 0x123"" )"		369512	0					
ANR	370166	Callee	display		369512	0					
ANR	370167	Identifier	display		369512	0					
ANR	370168	ArgumentList	"""bl 0x123"""		369512	1					
ANR	370169	Argument	"""bl 0x123"""		369512	0					
ANR	370170	PrimaryExpression	"""bl 0x123"""		369512	0					
ANR	370171	ExpressionStatement	"display ( ""blt 0x123"" )"	6713:1:143531:143551	369512	131	True				
ANR	370172	CallExpression	"display ( ""blt 0x123"" )"		369512	0					
ANR	370173	Callee	display		369512	0					
ANR	370174	Identifier	display		369512	0					
ANR	370175	ArgumentList	"""blt 0x123"""		369512	1					
ANR	370176	Argument	"""blt 0x123"""		369512	0					
ANR	370177	PrimaryExpression	"""blt 0x123"""		369512	0					
ANR	370178	ReturnStatement	return 0 ;	6715:1:143583:143591	369512	132	True				
ANR	370179	PrimaryExpression	0		369512	0					
ANR	370180	ReturnType	int		369512	1					
ANR	370181	Identifier	main		369512	2					
ANR	370182	ParameterList			369512	3					
ANR	370183	CFGEntryNode	ENTRY		369512		True				
ANR	370184	CFGExitNode	EXIT		369512		True				
