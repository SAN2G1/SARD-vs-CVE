command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	726631	File	data/converged/CVE-2019-16718~_radare2/cc.c								
ANR	726632	Function	r_anal_cc_del	6:17:164:479							
ANR	726633	FunctionDef	"r_anal_cc_del (RAnal * anal , const char * name)"		726632	0					
ANR	726634	CompoundStatement		8:56:228:479	726632	0					
ANR	726635	IdentifierDeclStatement	int i ;	9:1:231:236	726632	0	True				
ANR	726636	IdentifierDecl	i		726632	0					
ANR	726637	IdentifierDeclType	int		726632	0					
ANR	726638	Identifier	i		726632	1					
ANR	726639	ExpressionStatement	"sdb_unset ( DB , sdb_fmt ( ""%s"" , name ) , 0 )"	10:1:239:278	726632	1	True				
ANR	726640	CallExpression	"sdb_unset ( DB , sdb_fmt ( ""%s"" , name ) , 0 )"		726632	0					
ANR	726641	Callee	sdb_unset		726632	0					
ANR	726642	Identifier	sdb_unset		726632	0					
ANR	726643	ArgumentList	DB		726632	1					
ANR	726644	Argument	DB		726632	0					
ANR	726645	Identifier	DB		726632	0					
ANR	726646	Argument	"sdb_fmt ( ""%s"" , name )"		726632	1					
ANR	726647	CallExpression	"sdb_fmt ( ""%s"" , name )"		726632	0					
ANR	726648	Callee	sdb_fmt		726632	0					
ANR	726649	Identifier	sdb_fmt		726632	0					
ANR	726650	ArgumentList	"""%s"""		726632	1					
ANR	726651	Argument	"""%s"""		726632	0					
ANR	726652	PrimaryExpression	"""%s"""		726632	0					
ANR	726653	Argument	name		726632	1					
ANR	726654	Identifier	name		726632	0					
ANR	726655	Argument	0		726632	2					
ANR	726656	PrimaryExpression	0		726632	0					
ANR	726657	ExpressionStatement	"sdb_unset ( DB , sdb_fmt ( ""cc.%s.ret"" , name ) , 0 )"	11:1:281:327	726632	2	True				
ANR	726658	CallExpression	"sdb_unset ( DB , sdb_fmt ( ""cc.%s.ret"" , name ) , 0 )"		726632	0					
ANR	726659	Callee	sdb_unset		726632	0					
ANR	726660	Identifier	sdb_unset		726632	0					
ANR	726661	ArgumentList	DB		726632	1					
ANR	726662	Argument	DB		726632	0					
ANR	726663	Identifier	DB		726632	0					
ANR	726664	Argument	"sdb_fmt ( ""cc.%s.ret"" , name )"		726632	1					
ANR	726665	CallExpression	"sdb_fmt ( ""cc.%s.ret"" , name )"		726632	0					
ANR	726666	Callee	sdb_fmt		726632	0					
ANR	726667	Identifier	sdb_fmt		726632	0					
ANR	726668	ArgumentList	"""cc.%s.ret"""		726632	1					
ANR	726669	Argument	"""cc.%s.ret"""		726632	0					
ANR	726670	PrimaryExpression	"""cc.%s.ret"""		726632	0					
ANR	726671	Argument	name		726632	1					
ANR	726672	Identifier	name		726632	0					
ANR	726673	Argument	0		726632	2					
ANR	726674	PrimaryExpression	0		726632	0					
ANR	726675	ExpressionStatement	"sdb_unset ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , 0 )"	12:1:330:377	726632	3	True				
ANR	726676	CallExpression	"sdb_unset ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , 0 )"		726632	0					
ANR	726677	Callee	sdb_unset		726632	0					
ANR	726678	Identifier	sdb_unset		726632	0					
ANR	726679	ArgumentList	DB		726632	1					
ANR	726680	Argument	DB		726632	0					
ANR	726681	Identifier	DB		726632	0					
ANR	726682	Argument	"sdb_fmt ( ""cc.%s.argn"" , name )"		726632	1					
ANR	726683	CallExpression	"sdb_fmt ( ""cc.%s.argn"" , name )"		726632	0					
ANR	726684	Callee	sdb_fmt		726632	0					
ANR	726685	Identifier	sdb_fmt		726632	0					
ANR	726686	ArgumentList	"""cc.%s.argn"""		726632	1					
ANR	726687	Argument	"""cc.%s.argn"""		726632	0					
ANR	726688	PrimaryExpression	"""cc.%s.argn"""		726632	0					
ANR	726689	Argument	name		726632	1					
ANR	726690	Identifier	name		726632	0					
ANR	726691	Argument	0		726632	2					
ANR	726692	PrimaryExpression	0		726632	0					
ANR	726693	ForStatement	for ( i = 0 ; i < R_ANAL_CC_MAXARG ; i ++ )		726632	4					
ANR	726694	ForInit	i = 0 ;	13:6:385:390	726632	0	True				
ANR	726695	AssignmentExpression	i = 0		726632	0		=			
ANR	726696	Identifier	i		726632	0					
ANR	726697	PrimaryExpression	0		726632	1					
ANR	726698	Condition	i < R_ANAL_CC_MAXARG	13:13:392:411	726632	1	True				
ANR	726699	RelationalExpression	i < R_ANAL_CC_MAXARG		726632	0		<			
ANR	726700	Identifier	i		726632	0					
ANR	726701	Identifier	R_ANAL_CC_MAXARG		726632	1					
ANR	726702	PostIncDecOperationExpression	i ++	13:35:414:416	726632	2	True				
ANR	726703	Identifier	i		726632	0					
ANR	726704	IncDec	++		726632	1					
ANR	726705	CompoundStatement		6:40:190:190	726632	3					
ANR	726706	ExpressionStatement	"sdb_unset ( DB , sdb_fmt ( ""cc.%s.arg%d"" , name , i ) , 0 )"	14:2:423:474	726632	0	True				
ANR	726707	CallExpression	"sdb_unset ( DB , sdb_fmt ( ""cc.%s.arg%d"" , name , i ) , 0 )"		726632	0					
ANR	726708	Callee	sdb_unset		726632	0					
ANR	726709	Identifier	sdb_unset		726632	0					
ANR	726710	ArgumentList	DB		726632	1					
ANR	726711	Argument	DB		726632	0					
ANR	726712	Identifier	DB		726632	0					
ANR	726713	Argument	"sdb_fmt ( ""cc.%s.arg%d"" , name , i )"		726632	1					
ANR	726714	CallExpression	"sdb_fmt ( ""cc.%s.arg%d"" , name , i )"		726632	0					
ANR	726715	Callee	sdb_fmt		726632	0					
ANR	726716	Identifier	sdb_fmt		726632	0					
ANR	726717	ArgumentList	"""cc.%s.arg%d"""		726632	1					
ANR	726718	Argument	"""cc.%s.arg%d"""		726632	0					
ANR	726719	PrimaryExpression	"""cc.%s.arg%d"""		726632	0					
ANR	726720	Argument	name		726632	1					
ANR	726721	Identifier	name		726632	0					
ANR	726722	Argument	i		726632	2					
ANR	726723	Identifier	i		726632	0					
ANR	726724	Argument	0		726632	2					
ANR	726725	PrimaryExpression	0		726632	0					
ANR	726726	ReturnType	sdb_cc R_API void		726632	1					
ANR	726727	Identifier	r_anal_cc_del		726632	2					
ANR	726728	ParameterList	"RAnal * anal , const char * name"		726632	3					
ANR	726729	Parameter	RAnal * anal	8:25:197:207	726632	0	True				
ANR	726730	ParameterType	RAnal *		726632	0					
ANR	726731	Identifier	anal		726632	1					
ANR	726732	Parameter	const char * name	8:38:210:225	726632	1	True				
ANR	726733	ParameterType	const char *		726632	0					
ANR	726734	Identifier	name		726632	1					
ANR	726735	CFGEntryNode	ENTRY		726632		True				
ANR	726736	CFGExitNode	EXIT		726632		True				
ANR	726737	Symbol	anal		726632						
ANR	726738	Symbol	name		726632						
ANR	726739	Symbol	i		726632						
ANR	726740	Symbol	R_ANAL_CC_MAXARG		726632						
ANR	726741	Symbol	sdb_fmt		726632						
ANR	726742	Symbol	DB		726632						
ANR	726743	Function	r_anal_cc_set	18:0:482:1380							
ANR	726744	FunctionDef	"r_anal_cc_set (RAnal * anal , const char * expr)"		726743	0					
ANR	726745	CompoundStatement		18:56:538:1380	726743	0					
ANR	726746	IdentifierDeclStatement	char * e = strdup ( expr ) ;	19:1:541:564	726743	0	True				
ANR	726747	IdentifierDecl	* e = strdup ( expr )		726743	0					
ANR	726748	IdentifierDeclType	char *		726743	0					
ANR	726749	Identifier	e		726743	1					
ANR	726750	AssignmentExpression	* e = strdup ( expr )		726743	2		=			
ANR	726751	Identifier	e		726743	0					
ANR	726752	CallExpression	strdup ( expr )		726743	1					
ANR	726753	Callee	strdup		726743	0					
ANR	726754	Identifier	strdup		726743	0					
ANR	726755	ArgumentList	expr		726743	1					
ANR	726756	Argument	expr		726743	0					
ANR	726757	Identifier	expr		726743	0					
ANR	726758	IdentifierDeclStatement	"char * p = strchr ( e , '(' ) ;"	20:1:567:592	726743	1	True				
ANR	726759	IdentifierDecl	"* p = strchr ( e , '(' )"		726743	0					
ANR	726760	IdentifierDeclType	char *		726743	0					
ANR	726761	Identifier	p		726743	1					
ANR	726762	AssignmentExpression	"* p = strchr ( e , '(' )"		726743	2		=			
ANR	726763	Identifier	p		726743	0					
ANR	726764	CallExpression	"strchr ( e , '(' )"		726743	1					
ANR	726765	Callee	strchr		726743	0					
ANR	726766	Identifier	strchr		726743	0					
ANR	726767	ArgumentList	e		726743	1					
ANR	726768	Argument	e		726743	0					
ANR	726769	Identifier	e		726743	0					
ANR	726770	Argument	'('		726743	1					
ANR	726771	PrimaryExpression	'('		726743	0					
ANR	726772	IfStatement	if ( p )		726743	2					
ANR	726773	Condition	p	21:5:599:599	726743	0	True				
ANR	726774	Identifier	p		726743	0					
ANR	726775	CompoundStatement		4:8:63:63	726743	1					
ANR	726776	ExpressionStatement	* p ++ = 0	22:2:606:614	726743	0	True				
ANR	726777	AssignmentExpression	* p ++ = 0		726743	0		=			
ANR	726778	UnaryOperationExpression	* p ++		726743	0					
ANR	726779	UnaryOperator	*		726743	0					
ANR	726780	PostIncDecOperationExpression	p ++		726743	1					
ANR	726781	Identifier	p		726743	0					
ANR	726782	IncDec	++		726743	1					
ANR	726783	PrimaryExpression	0		726743	1					
ANR	726784	IdentifierDeclStatement	char * args = strdup ( p ) ;	24:1:620:643	726743	3	True				
ANR	726785	IdentifierDecl	* args = strdup ( p )		726743	0					
ANR	726786	IdentifierDeclType	char *		726743	0					
ANR	726787	Identifier	args		726743	1					
ANR	726788	AssignmentExpression	* args = strdup ( p )		726743	2		=			
ANR	726789	Identifier	args		726743	0					
ANR	726790	CallExpression	strdup ( p )		726743	1					
ANR	726791	Callee	strdup		726743	0					
ANR	726792	Identifier	strdup		726743	0					
ANR	726793	ArgumentList	p		726743	1					
ANR	726794	Argument	p		726743	0					
ANR	726795	Identifier	p		726743	0					
ANR	726796	IdentifierDeclStatement	"char * end = strchr ( args , ')' ) ;"	25:1:646:676	726743	4	True				
ANR	726797	IdentifierDecl	"* end = strchr ( args , ')' )"		726743	0					
ANR	726798	IdentifierDeclType	char *		726743	0					
ANR	726799	Identifier	end		726743	1					
ANR	726800	AssignmentExpression	"* end = strchr ( args , ')' )"		726743	2		=			
ANR	726801	Identifier	end		726743	0					
ANR	726802	CallExpression	"strchr ( args , ')' )"		726743	1					
ANR	726803	Callee	strchr		726743	0					
ANR	726804	Identifier	strchr		726743	0					
ANR	726805	ArgumentList	args		726743	1					
ANR	726806	Argument	args		726743	0					
ANR	726807	Identifier	args		726743	0					
ANR	726808	Argument	')'		726743	1					
ANR	726809	PrimaryExpression	')'		726743	0					
ANR	726810	IfStatement	if ( end )		726743	5					
ANR	726811	Condition	end	26:5:683:685	726743	0	True				
ANR	726812	Identifier	end		726743	0					
ANR	726813	CompoundStatement		12:2:216:263	726743	1					
ANR	726814	ExpressionStatement	* end ++ = 0	27:2:692:702	726743	0	True				
ANR	726815	AssignmentExpression	* end ++ = 0		726743	0		=			
ANR	726816	UnaryOperationExpression	* end ++		726743	0					
ANR	726817	UnaryOperator	*		726743	0					
ANR	726818	PostIncDecOperationExpression	end ++		726743	1					
ANR	726819	Identifier	end		726743	0					
ANR	726820	IncDec	++		726743	1					
ANR	726821	PrimaryExpression	0		726743	1					
ANR	726822	IdentifierDeclStatement	"RList * retName = r_str_split_list ( e , "" "" , 0 ) ;"	28:2:706:751	726743	1	True				
ANR	726823	IdentifierDecl	"* retName = r_str_split_list ( e , "" "" , 0 )"		726743	0					
ANR	726824	IdentifierDeclType	RList *		726743	0					
ANR	726825	Identifier	retName		726743	1					
ANR	726826	AssignmentExpression	"* retName = r_str_split_list ( e , "" "" , 0 )"		726743	2		=			
ANR	726827	Identifier	retName		726743	0					
ANR	726828	CallExpression	"r_str_split_list ( e , "" "" , 0 )"		726743	1					
ANR	726829	Callee	r_str_split_list		726743	0					
ANR	726830	Identifier	r_str_split_list		726743	0					
ANR	726831	ArgumentList	e		726743	1					
ANR	726832	Argument	e		726743	0					
ANR	726833	Identifier	e		726743	0					
ANR	726834	Argument	""" """		726743	1					
ANR	726835	PrimaryExpression	""" """		726743	0					
ANR	726836	Argument	0		726743	2					
ANR	726837	PrimaryExpression	0		726743	0					
ANR	726838	IdentifierDeclStatement	"RList * ccArgs = r_str_split_list ( args , "","" , 0 ) ;"	29:2:755:802	726743	2	True				
ANR	726839	IdentifierDecl	"* ccArgs = r_str_split_list ( args , "","" , 0 )"		726743	0					
ANR	726840	IdentifierDeclType	RList *		726743	0					
ANR	726841	Identifier	ccArgs		726743	1					
ANR	726842	AssignmentExpression	"* ccArgs = r_str_split_list ( args , "","" , 0 )"		726743	2		=			
ANR	726843	Identifier	ccArgs		726743	0					
ANR	726844	CallExpression	"r_str_split_list ( args , "","" , 0 )"		726743	1					
ANR	726845	Callee	r_str_split_list		726743	0					
ANR	726846	Identifier	r_str_split_list		726743	0					
ANR	726847	ArgumentList	args		726743	1					
ANR	726848	Argument	args		726743	0					
ANR	726849	Identifier	args		726743	0					
ANR	726850	Argument	""","""		726743	1					
ANR	726851	PrimaryExpression	""","""		726743	0					
ANR	726852	Argument	0		726743	2					
ANR	726853	PrimaryExpression	0		726743	0					
ANR	726854	IfStatement	if ( r_list_length ( retName ) == 2 )		726743	3					
ANR	726855	Condition	r_list_length ( retName ) == 2	30:6:810:837	726743	0	True				
ANR	726856	EqualityExpression	r_list_length ( retName ) == 2		726743	0		==			
ANR	726857	CallExpression	r_list_length ( retName )		726743	0					
ANR	726858	Callee	r_list_length		726743	0					
ANR	726859	Identifier	r_list_length		726743	0					
ANR	726860	ArgumentList	retName		726743	1					
ANR	726861	Argument	retName		726743	0					
ANR	726862	Identifier	retName		726743	0					
ANR	726863	PrimaryExpression	2		726743	1					
ANR	726864	CompoundStatement		20:3:523:532	726743	1					
ANR	726865	IdentifierDeclStatement	"const char * ret = r_list_get_n ( retName , 0 ) ;"	31:3:845:888	726743	0	True				
ANR	726866	IdentifierDecl	"* ret = r_list_get_n ( retName , 0 )"		726743	0					
ANR	726867	IdentifierDeclType	const char *		726743	0					
ANR	726868	Identifier	ret		726743	1					
ANR	726869	AssignmentExpression	"* ret = r_list_get_n ( retName , 0 )"		726743	2		=			
ANR	726870	Identifier	ret		726743	0					
ANR	726871	CallExpression	"r_list_get_n ( retName , 0 )"		726743	1					
ANR	726872	Callee	r_list_get_n		726743	0					
ANR	726873	Identifier	r_list_get_n		726743	0					
ANR	726874	ArgumentList	retName		726743	1					
ANR	726875	Argument	retName		726743	0					
ANR	726876	Identifier	retName		726743	0					
ANR	726877	Argument	0		726743	1					
ANR	726878	PrimaryExpression	0		726743	0					
ANR	726879	IdentifierDeclStatement	"const char * name = r_list_get_n ( retName , 1 ) ;"	32:3:893:937	726743	1	True				
ANR	726880	IdentifierDecl	"* name = r_list_get_n ( retName , 1 )"		726743	0					
ANR	726881	IdentifierDeclType	const char *		726743	0					
ANR	726882	Identifier	name		726743	1					
ANR	726883	AssignmentExpression	"* name = r_list_get_n ( retName , 1 )"		726743	2		=			
ANR	726884	Identifier	name		726743	0					
ANR	726885	CallExpression	"r_list_get_n ( retName , 1 )"		726743	1					
ANR	726886	Callee	r_list_get_n		726743	0					
ANR	726887	Identifier	r_list_get_n		726743	0					
ANR	726888	ArgumentList	retName		726743	1					
ANR	726889	Argument	retName		726743	0					
ANR	726890	Identifier	retName		726743	0					
ANR	726891	Argument	1		726743	1					
ANR	726892	PrimaryExpression	1		726743	0					
ANR	726893	ExpressionStatement	"sdb_set ( DB , name , ""cc"" , 0 )"	33:3:942:969	726743	2	True				
ANR	726894	CallExpression	"sdb_set ( DB , name , ""cc"" , 0 )"		726743	0					
ANR	726895	Callee	sdb_set		726743	0					
ANR	726896	Identifier	sdb_set		726743	0					
ANR	726897	ArgumentList	DB		726743	1					
ANR	726898	Argument	DB		726743	0					
ANR	726899	Identifier	DB		726743	0					
ANR	726900	Argument	name		726743	1					
ANR	726901	Identifier	name		726743	0					
ANR	726902	Argument	"""cc"""		726743	2					
ANR	726903	PrimaryExpression	"""cc"""		726743	0					
ANR	726904	Argument	0		726743	3					
ANR	726905	PrimaryExpression	0		726743	0					
ANR	726906	ExpressionStatement	"sdb_set ( DB , sdb_fmt ( ""cc.%s.ret"" ) , ret , 0 )"	34:3:974:1017	726743	3	True				
ANR	726907	CallExpression	"sdb_set ( DB , sdb_fmt ( ""cc.%s.ret"" ) , ret , 0 )"		726743	0					
ANR	726908	Callee	sdb_set		726743	0					
ANR	726909	Identifier	sdb_set		726743	0					
ANR	726910	ArgumentList	DB		726743	1					
ANR	726911	Argument	DB		726743	0					
ANR	726912	Identifier	DB		726743	0					
ANR	726913	Argument	"sdb_fmt ( ""cc.%s.ret"" )"		726743	1					
ANR	726914	CallExpression	"sdb_fmt ( ""cc.%s.ret"" )"		726743	0					
ANR	726915	Callee	sdb_fmt		726743	0					
ANR	726916	Identifier	sdb_fmt		726743	0					
ANR	726917	ArgumentList	"""cc.%s.ret"""		726743	1					
ANR	726918	Argument	"""cc.%s.ret"""		726743	0					
ANR	726919	PrimaryExpression	"""cc.%s.ret"""		726743	0					
ANR	726920	Argument	ret		726743	2					
ANR	726921	Identifier	ret		726743	0					
ANR	726922	Argument	0		726743	3					
ANR	726923	PrimaryExpression	0		726743	0					
ANR	726924	IdentifierDeclStatement	RListIter * iter ;	35:3:1022:1037	726743	4	True				
ANR	726925	IdentifierDecl	* iter		726743	0					
ANR	726926	IdentifierDeclType	RListIter *		726743	0					
ANR	726927	Identifier	iter		726743	1					
ANR	726928	IdentifierDeclStatement	const char * arg ;	36:3:1042:1057	726743	5	True				
ANR	726929	IdentifierDecl	* arg		726743	0					
ANR	726930	IdentifierDeclType	const char *		726743	0					
ANR	726931	Identifier	arg		726743	1					
ANR	726932	IdentifierDeclStatement	int n = 0 ;	37:3:1062:1071	726743	6	True				
ANR	726933	IdentifierDecl	n = 0		726743	0					
ANR	726934	IdentifierDeclType	int		726743	0					
ANR	726935	Identifier	n		726743	1					
ANR	726936	AssignmentExpression	n = 0		726743	2		=			
ANR	726937	Identifier	n		726743	0					
ANR	726938	PrimaryExpression	0		726743	1					
ANR	726939	Statement	r_list_foreach	38:3:1076:1089	726743	7	True				
ANR	726940	Statement	(	38:18:1091:1091	726743	8	True				
ANR	726941	Statement	ccArgs	38:19:1092:1097	726743	9	True				
ANR	726942	Statement	","	38:25:1098:1098	726743	10	True				
ANR	726943	Statement	iter	38:27:1100:1103	726743	11	True				
ANR	726944	Statement	","	38:31:1104:1104	726743	12	True				
ANR	726945	Statement	arg	38:33:1106:1108	726743	13	True				
ANR	726946	Statement	)	38:36:1109:1109	726743	14	True				
ANR	726947	CompoundStatement		21:38:572:572	726743	15					
ANR	726948	IfStatement	"if ( ! strcmp ( arg , ""stack"" ) )"		726743	0					
ANR	726949	Condition	"! strcmp ( arg , ""stack"" )"	39:8:1121:1142	726743	0	True				
ANR	726950	UnaryOperationExpression	"! strcmp ( arg , ""stack"" )"		726743	0					
ANR	726951	UnaryOperator	!		726743	0					
ANR	726952	CallExpression	"strcmp ( arg , ""stack"" )"		726743	1					
ANR	726953	Callee	strcmp		726743	0					
ANR	726954	Identifier	strcmp		726743	0					
ANR	726955	ArgumentList	arg		726743	1					
ANR	726956	Argument	arg		726743	0					
ANR	726957	Identifier	arg		726743	0					
ANR	726958	Argument	"""stack"""		726743	1					
ANR	726959	PrimaryExpression	"""stack"""		726743	0					
ANR	726960	CompoundStatement		22:32:606:606	726743	1					
ANR	726961	ExpressionStatement	"sdb_set ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , arg , 0 )"	40:5:1152:1202	726743	0	True				
ANR	726962	CallExpression	"sdb_set ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , arg , 0 )"		726743	0					
ANR	726963	Callee	sdb_set		726743	0					
ANR	726964	Identifier	sdb_set		726743	0					
ANR	726965	ArgumentList	DB		726743	1					
ANR	726966	Argument	DB		726743	0					
ANR	726967	Identifier	DB		726743	0					
ANR	726968	Argument	"sdb_fmt ( ""cc.%s.argn"" , name )"		726743	1					
ANR	726969	CallExpression	"sdb_fmt ( ""cc.%s.argn"" , name )"		726743	0					
ANR	726970	Callee	sdb_fmt		726743	0					
ANR	726971	Identifier	sdb_fmt		726743	0					
ANR	726972	ArgumentList	"""cc.%s.argn"""		726743	1					
ANR	726973	Argument	"""cc.%s.argn"""		726743	0					
ANR	726974	PrimaryExpression	"""cc.%s.argn"""		726743	0					
ANR	726975	Argument	name		726743	1					
ANR	726976	Identifier	name		726743	0					
ANR	726977	Argument	arg		726743	2					
ANR	726978	Identifier	arg		726743	0					
ANR	726979	Argument	0		726743	3					
ANR	726980	PrimaryExpression	0		726743	0					
ANR	726981	ElseStatement	else		726743	0					
ANR	726982	CompoundStatement		24:11:676:676	726743	0					
ANR	726983	ExpressionStatement	"sdb_set ( DB , sdb_fmt ( ""cc.%s.arg%d"" , name , n ) , arg , 0 )"	42:5:1222:1276	726743	0	True				
ANR	726984	CallExpression	"sdb_set ( DB , sdb_fmt ( ""cc.%s.arg%d"" , name , n ) , arg , 0 )"		726743	0					
ANR	726985	Callee	sdb_set		726743	0					
ANR	726986	Identifier	sdb_set		726743	0					
ANR	726987	ArgumentList	DB		726743	1					
ANR	726988	Argument	DB		726743	0					
ANR	726989	Identifier	DB		726743	0					
ANR	726990	Argument	"sdb_fmt ( ""cc.%s.arg%d"" , name , n )"		726743	1					
ANR	726991	CallExpression	"sdb_fmt ( ""cc.%s.arg%d"" , name , n )"		726743	0					
ANR	726992	Callee	sdb_fmt		726743	0					
ANR	726993	Identifier	sdb_fmt		726743	0					
ANR	726994	ArgumentList	"""cc.%s.arg%d"""		726743	1					
ANR	726995	Argument	"""cc.%s.arg%d"""		726743	0					
ANR	726996	PrimaryExpression	"""cc.%s.arg%d"""		726743	0					
ANR	726997	Argument	name		726743	1					
ANR	726998	Identifier	name		726743	0					
ANR	726999	Argument	n		726743	2					
ANR	727000	Identifier	n		726743	0					
ANR	727001	Argument	arg		726743	2					
ANR	727002	Identifier	arg		726743	0					
ANR	727003	Argument	0		726743	3					
ANR	727004	PrimaryExpression	0		726743	0					
ANR	727005	ExpressionStatement	n ++	43:5:1283:1286	726743	1	True				
ANR	727006	PostIncDecOperationExpression	n ++		726743	0					
ANR	727007	Identifier	n		726743	0					
ANR	727008	IncDec	++		726743	1					
ANR	727009	ExpressionStatement	r_list_free ( retName )	47:2:1305:1326	726743	4	True				
ANR	727010	CallExpression	r_list_free ( retName )		726743	0					
ANR	727011	Callee	r_list_free		726743	0					
ANR	727012	Identifier	r_list_free		726743	0					
ANR	727013	ArgumentList	retName		726743	1					
ANR	727014	Argument	retName		726743	0					
ANR	727015	Identifier	retName		726743	0					
ANR	727016	ExpressionStatement	r_list_free ( ccArgs )	48:2:1330:1350	726743	5	True				
ANR	727017	CallExpression	r_list_free ( ccArgs )		726743	0					
ANR	727018	Callee	r_list_free		726743	0					
ANR	727019	Identifier	r_list_free		726743	0					
ANR	727020	ArgumentList	ccArgs		726743	1					
ANR	727021	Argument	ccArgs		726743	0					
ANR	727022	Identifier	ccArgs		726743	0					
ANR	727023	ExpressionStatement	free ( e )	50:1:1356:1364	726743	6	True				
ANR	727024	CallExpression	free ( e )		726743	0					
ANR	727025	Callee	free		726743	0					
ANR	727026	Identifier	free		726743	0					
ANR	727027	ArgumentList	e		726743	1					
ANR	727028	Argument	e		726743	0					
ANR	727029	Identifier	e		726743	0					
ANR	727030	ExpressionStatement	free ( args )	51:1:1367:1378	726743	7	True				
ANR	727031	CallExpression	free ( args )		726743	0					
ANR	727032	Callee	free		726743	0					
ANR	727033	Identifier	free		726743	0					
ANR	727034	ArgumentList	args		726743	1					
ANR	727035	Argument	args		726743	0					
ANR	727036	Identifier	args		726743	0					
ANR	727037	ReturnType	R_API void		726743	1					
ANR	727038	Identifier	r_anal_cc_set		726743	2					
ANR	727039	ParameterList	"RAnal * anal , const char * expr"		726743	3					
ANR	727040	Parameter	RAnal * anal	18:25:507:517	726743	0	True				
ANR	727041	ParameterType	RAnal *		726743	0					
ANR	727042	Identifier	anal		726743	1					
ANR	727043	Parameter	const char * expr	18:38:520:535	726743	1	True				
ANR	727044	ParameterType	const char *		726743	0					
ANR	727045	Identifier	expr		726743	1					
ANR	727046	CFGEntryNode	ENTRY		726743		True				
ANR	727047	CFGExitNode	EXIT		726743		True				
ANR	727048	Symbol	ret		726743						
ANR	727049	Symbol	strcmp		726743						
ANR	727050	Symbol	e		726743						
ANR	727051	Symbol	* p ++		726743						
ANR	727052	Symbol	r_str_split_list		726743						
ANR	727053	Symbol	strchr		726743						
ANR	727054	Symbol	r_list_get_n		726743						
ANR	727055	Symbol	iter		726743						
ANR	727056	Symbol	retName		726743						
ANR	727057	Symbol	n		726743						
ANR	727058	Symbol	p		726743						
ANR	727059	Symbol	args		726743						
ANR	727060	Symbol	anal		726743						
ANR	727061	Symbol	* end ++		726743						
ANR	727062	Symbol	arg		726743						
ANR	727063	Symbol	name		726743						
ANR	727064	Symbol	expr		726743						
ANR	727065	Symbol	end		726743						
ANR	727066	Symbol	strdup		726743						
ANR	727067	Symbol	sdb_fmt		726743						
ANR	727068	Symbol	r_list_length		726743						
ANR	727069	Symbol	DB		726743						
ANR	727070	Symbol	ccArgs		726743						
ANR	727071	Function	r_anal_cc_get	54:0:1383:2324							
ANR	727072	FunctionDef	"r_anal_cc_get (RAnal * anal , const char * name)"		727071	0					
ANR	727073	CompoundStatement		54:57:1440:2324	727071	0					
ANR	727074	IdentifierDeclStatement	int i ;	55:1:1443:1448	727071	0	True				
ANR	727075	IdentifierDecl	i		727071	0					
ANR	727076	IdentifierDeclType	int		727071	0					
ANR	727077	Identifier	i		727071	1					
ANR	727078	IfStatement	"if ( r_str_cmp ( sdb_const_get ( DB , name , 0 ) , ""cc"" , - 1 ) )"		727071	1					
ANR	727079	Condition	"r_str_cmp ( sdb_const_get ( DB , name , 0 ) , ""cc"" , - 1 )"	57:5:1493:1541	727071	0	True				
ANR	727080	CallExpression	"r_str_cmp ( sdb_const_get ( DB , name , 0 ) , ""cc"" , - 1 )"		727071	0					
ANR	727081	Callee	r_str_cmp		727071	0					
ANR	727082	Identifier	r_str_cmp		727071	0					
ANR	727083	ArgumentList	"sdb_const_get ( DB , name , 0 )"		727071	1					
ANR	727084	Argument	"sdb_const_get ( DB , name , 0 )"		727071	0					
ANR	727085	CallExpression	"sdb_const_get ( DB , name , 0 )"		727071	0					
ANR	727086	Callee	sdb_const_get		727071	0					
ANR	727087	Identifier	sdb_const_get		727071	0					
ANR	727088	ArgumentList	DB		727071	1					
ANR	727089	Argument	DB		727071	0					
ANR	727090	Identifier	DB		727071	0					
ANR	727091	Argument	name		727071	1					
ANR	727092	Identifier	name		727071	0					
ANR	727093	Argument	0		727071	2					
ANR	727094	PrimaryExpression	0		727071	0					
ANR	727095	Argument	"""cc"""		727071	1					
ANR	727096	PrimaryExpression	"""cc"""		727071	0					
ANR	727097	Argument	- 1		727071	2					
ANR	727098	UnaryOperationExpression	- 1		727071	0					
ANR	727099	UnaryOperator	-		727071	0					
ANR	727100	PrimaryExpression	1		727071	1					
ANR	727101	CompoundStatement		4:56:103:103	727071	1					
ANR	727102	ExpressionStatement	"eprintf ( ""This is not a valid calling convention name\\n"" )"	58:2:1548:1605	727071	0	True				
ANR	727103	CallExpression	"eprintf ( ""This is not a valid calling convention name\\n"" )"		727071	0					
ANR	727104	Callee	eprintf		727071	0					
ANR	727105	Identifier	eprintf		727071	0					
ANR	727106	ArgumentList	"""This is not a valid calling convention name\\n"""		727071	1					
ANR	727107	Argument	"""This is not a valid calling convention name\\n"""		727071	0					
ANR	727108	PrimaryExpression	"""This is not a valid calling convention name\\n"""		727071	0					
ANR	727109	ReturnStatement	return NULL ;	59:2:1609:1620	727071	1	True				
ANR	727110	Identifier	NULL		727071	0					
ANR	727111	IdentifierDeclStatement	"const char * ret = sdb_const_get ( DB , sdb_fmt ( ""cc.%s.ret"" , name ) , 0 ) ;"	61:1:1626:1694	727071	2	True				
ANR	727112	IdentifierDecl	"* ret = sdb_const_get ( DB , sdb_fmt ( ""cc.%s.ret"" , name ) , 0 )"		727071	0					
ANR	727113	IdentifierDeclType	const char *		727071	0					
ANR	727114	Identifier	ret		727071	1					
ANR	727115	AssignmentExpression	"* ret = sdb_const_get ( DB , sdb_fmt ( ""cc.%s.ret"" , name ) , 0 )"		727071	2		=			
ANR	727116	Identifier	ret		727071	0					
ANR	727117	CallExpression	"sdb_const_get ( DB , sdb_fmt ( ""cc.%s.ret"" , name ) , 0 )"		727071	1					
ANR	727118	Callee	sdb_const_get		727071	0					
ANR	727119	Identifier	sdb_const_get		727071	0					
ANR	727120	ArgumentList	DB		727071	1					
ANR	727121	Argument	DB		727071	0					
ANR	727122	Identifier	DB		727071	0					
ANR	727123	Argument	"sdb_fmt ( ""cc.%s.ret"" , name )"		727071	1					
ANR	727124	CallExpression	"sdb_fmt ( ""cc.%s.ret"" , name )"		727071	0					
ANR	727125	Callee	sdb_fmt		727071	0					
ANR	727126	Identifier	sdb_fmt		727071	0					
ANR	727127	ArgumentList	"""cc.%s.ret"""		727071	1					
ANR	727128	Argument	"""cc.%s.ret"""		727071	0					
ANR	727129	PrimaryExpression	"""cc.%s.ret"""		727071	0					
ANR	727130	Argument	name		727071	1					
ANR	727131	Identifier	name		727071	0					
ANR	727132	Argument	0		727071	2					
ANR	727133	PrimaryExpression	0		727071	0					
ANR	727134	IfStatement	if ( ! ret )		727071	3					
ANR	727135	Condition	! ret	62:5:1701:1704	727071	0	True				
ANR	727136	UnaryOperationExpression	! ret		727071	0					
ANR	727137	UnaryOperator	!		727071	0					
ANR	727138	Identifier	ret		727071	1					
ANR	727139	CompoundStatement		9:11:266:266	727071	1					
ANR	727140	ExpressionStatement	"eprintf ( ""Cannot find return key\\n"" )"	63:2:1711:1747	727071	0	True				
ANR	727141	CallExpression	"eprintf ( ""Cannot find return key\\n"" )"		727071	0					
ANR	727142	Callee	eprintf		727071	0					
ANR	727143	Identifier	eprintf		727071	0					
ANR	727144	ArgumentList	"""Cannot find return key\\n"""		727071	1					
ANR	727145	Argument	"""Cannot find return key\\n"""		727071	0					
ANR	727146	PrimaryExpression	"""Cannot find return key\\n"""		727071	0					
ANR	727147	ReturnStatement	return NULL ;	64:2:1751:1762	727071	1	True				
ANR	727148	Identifier	NULL		727071	0					
ANR	727149	IdentifierDeclStatement	RStrBuf * sb = r_strbuf_new ( NULL ) ;	66:1:1768:1801	727071	4	True				
ANR	727150	IdentifierDecl	* sb = r_strbuf_new ( NULL )		727071	0					
ANR	727151	IdentifierDeclType	RStrBuf *		727071	0					
ANR	727152	Identifier	sb		727071	1					
ANR	727153	AssignmentExpression	* sb = r_strbuf_new ( NULL )		727071	2		=			
ANR	727154	Identifier	sb		727071	0					
ANR	727155	CallExpression	r_strbuf_new ( NULL )		727071	1					
ANR	727156	Callee	r_strbuf_new		727071	0					
ANR	727157	Identifier	r_strbuf_new		727071	0					
ANR	727158	ArgumentList	NULL		727071	1					
ANR	727159	Argument	NULL		727071	0					
ANR	727160	Identifier	NULL		727071	0					
ANR	727161	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s %s ("" , ret , name )"	67:1:1804:1847	727071	5	True				
ANR	727162	CallExpression	"r_strbuf_appendf ( sb , ""%s %s ("" , ret , name )"		727071	0					
ANR	727163	Callee	r_strbuf_appendf		727071	0					
ANR	727164	Identifier	r_strbuf_appendf		727071	0					
ANR	727165	ArgumentList	sb		727071	1					
ANR	727166	Argument	sb		727071	0					
ANR	727167	Identifier	sb		727071	0					
ANR	727168	Argument	"""%s %s ("""		727071	1					
ANR	727169	PrimaryExpression	"""%s %s ("""		727071	0					
ANR	727170	Argument	ret		727071	2					
ANR	727171	Identifier	ret		727071	0					
ANR	727172	Argument	name		727071	3					
ANR	727173	Identifier	name		727071	0					
ANR	727174	IdentifierDeclStatement	bool isFirst = true ;	68:1:1850:1869	727071	6	True				
ANR	727175	IdentifierDecl	isFirst = true		727071	0					
ANR	727176	IdentifierDeclType	bool		727071	0					
ANR	727177	Identifier	isFirst		727071	1					
ANR	727178	AssignmentExpression	isFirst = true		727071	2		=			
ANR	727179	Identifier	true		727071	0					
ANR	727180	Identifier	true		727071	1					
ANR	727181	ForStatement	for ( i = 0 ; i < R_ANAL_CC_MAXARG ; i ++ )		727071	7					
ANR	727182	ForInit	i = 0 ;	69:6:1877:1882	727071	0	True				
ANR	727183	AssignmentExpression	i = 0		727071	0		=			
ANR	727184	Identifier	i		727071	0					
ANR	727185	PrimaryExpression	0		727071	1					
ANR	727186	Condition	i < R_ANAL_CC_MAXARG	69:13:1884:1903	727071	1	True				
ANR	727187	RelationalExpression	i < R_ANAL_CC_MAXARG		727071	0		<			
ANR	727188	Identifier	i		727071	0					
ANR	727189	Identifier	R_ANAL_CC_MAXARG		727071	1					
ANR	727190	PostIncDecOperationExpression	i ++	69:35:1906:1908	727071	2	True				
ANR	727191	Identifier	i		727071	0					
ANR	727192	IncDec	++		727071	1					
ANR	727193	CompoundStatement		18:2:526:568	727071	3					
ANR	727194	IdentifierDeclStatement	"const char * k = sdb_fmt ( ""cc.%s.arg%d"" , name , i ) ;"	70:2:1915:1963	727071	0	True				
ANR	727195	IdentifierDecl	"* k = sdb_fmt ( ""cc.%s.arg%d"" , name , i )"		727071	0					
ANR	727196	IdentifierDeclType	const char *		727071	0					
ANR	727197	Identifier	k		727071	1					
ANR	727198	AssignmentExpression	"* k = sdb_fmt ( ""cc.%s.arg%d"" , name , i )"		727071	2		=			
ANR	727199	Identifier	k		727071	0					
ANR	727200	CallExpression	"sdb_fmt ( ""cc.%s.arg%d"" , name , i )"		727071	1					
ANR	727201	Callee	sdb_fmt		727071	0					
ANR	727202	Identifier	sdb_fmt		727071	0					
ANR	727203	ArgumentList	"""cc.%s.arg%d"""		727071	1					
ANR	727204	Argument	"""cc.%s.arg%d"""		727071	0					
ANR	727205	PrimaryExpression	"""cc.%s.arg%d"""		727071	0					
ANR	727206	Argument	name		727071	1					
ANR	727207	Identifier	name		727071	0					
ANR	727208	Argument	i		727071	2					
ANR	727209	Identifier	i		727071	0					
ANR	727210	IdentifierDeclStatement	"const char * arg = sdb_const_get ( DB , k , 0 ) ;"	71:2:1967:2009	727071	1	True				
ANR	727211	IdentifierDecl	"* arg = sdb_const_get ( DB , k , 0 )"		727071	0					
ANR	727212	IdentifierDeclType	const char *		727071	0					
ANR	727213	Identifier	arg		727071	1					
ANR	727214	AssignmentExpression	"* arg = sdb_const_get ( DB , k , 0 )"		727071	2		=			
ANR	727215	Identifier	arg		727071	0					
ANR	727216	CallExpression	"sdb_const_get ( DB , k , 0 )"		727071	1					
ANR	727217	Callee	sdb_const_get		727071	0					
ANR	727218	Identifier	sdb_const_get		727071	0					
ANR	727219	ArgumentList	DB		727071	1					
ANR	727220	Argument	DB		727071	0					
ANR	727221	Identifier	DB		727071	0					
ANR	727222	Argument	k		727071	1					
ANR	727223	Identifier	k		727071	0					
ANR	727224	Argument	0		727071	2					
ANR	727225	PrimaryExpression	0		727071	0					
ANR	727226	IfStatement	if ( ! arg )		727071	2					
ANR	727227	Condition	! arg	72:6:2017:2020	727071	0	True				
ANR	727228	UnaryOperationExpression	! arg		727071	0					
ANR	727229	UnaryOperator	!		727071	0					
ANR	727230	Identifier	arg		727071	1					
ANR	727231	CompoundStatement		19:12:582:582	727071	1					
ANR	727232	BreakStatement	break ;	73:3:2028:2033	727071	0	True				
ANR	727233	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s"" , isFirst ? """" : "", "" , arg )"	75:2:2041:2094	727071	3	True				
ANR	727234	CallExpression	"r_strbuf_appendf ( sb , ""%s%s"" , isFirst ? """" : "", "" , arg )"		727071	0					
ANR	727235	Callee	r_strbuf_appendf		727071	0					
ANR	727236	Identifier	r_strbuf_appendf		727071	0					
ANR	727237	ArgumentList	sb		727071	1					
ANR	727238	Argument	sb		727071	0					
ANR	727239	Identifier	sb		727071	0					
ANR	727240	Argument	"""%s%s"""		727071	1					
ANR	727241	PrimaryExpression	"""%s%s"""		727071	0					
ANR	727242	Argument	"isFirst ? """" : "", """		727071	2					
ANR	727243	ConditionalExpression	"isFirst ? """" : "", """		727071	0					
ANR	727244	Condition	isFirst		727071	0					
ANR	727245	Identifier	isFirst		727071	0					
ANR	727246	PrimaryExpression	""""""		727071	1					
ANR	727247	PrimaryExpression	""", """		727071	2					
ANR	727248	Argument	arg		727071	3					
ANR	727249	Identifier	arg		727071	0					
ANR	727250	ExpressionStatement	isFirst = false	76:2:2098:2113	727071	4	True				
ANR	727251	AssignmentExpression	isFirst = false		727071	0		=			
ANR	727252	Identifier	isFirst		727071	0					
ANR	727253	Identifier	false		727071	1					
ANR	727254	IdentifierDeclStatement	"const char * argn = sdb_const_get ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , 0 ) ;"	78:1:2119:2189	727071	8	True				
ANR	727255	IdentifierDecl	"* argn = sdb_const_get ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , 0 )"		727071	0					
ANR	727256	IdentifierDeclType	const char *		727071	0					
ANR	727257	Identifier	argn		727071	1					
ANR	727258	AssignmentExpression	"* argn = sdb_const_get ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , 0 )"		727071	2		=			
ANR	727259	Identifier	argn		727071	0					
ANR	727260	CallExpression	"sdb_const_get ( DB , sdb_fmt ( ""cc.%s.argn"" , name ) , 0 )"		727071	1					
ANR	727261	Callee	sdb_const_get		727071	0					
ANR	727262	Identifier	sdb_const_get		727071	0					
ANR	727263	ArgumentList	DB		727071	1					
ANR	727264	Argument	DB		727071	0					
ANR	727265	Identifier	DB		727071	0					
ANR	727266	Argument	"sdb_fmt ( ""cc.%s.argn"" , name )"		727071	1					
ANR	727267	CallExpression	"sdb_fmt ( ""cc.%s.argn"" , name )"		727071	0					
ANR	727268	Callee	sdb_fmt		727071	0					
ANR	727269	Identifier	sdb_fmt		727071	0					
ANR	727270	ArgumentList	"""cc.%s.argn"""		727071	1					
ANR	727271	Argument	"""cc.%s.argn"""		727071	0					
ANR	727272	PrimaryExpression	"""cc.%s.argn"""		727071	0					
ANR	727273	Argument	name		727071	1					
ANR	727274	Identifier	name		727071	0					
ANR	727275	Argument	0		727071	2					
ANR	727276	PrimaryExpression	0		727071	0					
ANR	727277	IfStatement	if ( argn )		727071	9					
ANR	727278	Condition	argn	79:5:2196:2199	727071	0	True				
ANR	727279	Identifier	argn		727071	0					
ANR	727280	CompoundStatement		26:11:761:761	727071	1					
ANR	727281	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s"" , isFirst ? """" : "", "" , argn )"	80:2:2206:2260	727071	0	True				
ANR	727282	CallExpression	"r_strbuf_appendf ( sb , ""%s%s"" , isFirst ? """" : "", "" , argn )"		727071	0					
ANR	727283	Callee	r_strbuf_appendf		727071	0					
ANR	727284	Identifier	r_strbuf_appendf		727071	0					
ANR	727285	ArgumentList	sb		727071	1					
ANR	727286	Argument	sb		727071	0					
ANR	727287	Identifier	sb		727071	0					
ANR	727288	Argument	"""%s%s"""		727071	1					
ANR	727289	PrimaryExpression	"""%s%s"""		727071	0					
ANR	727290	Argument	"isFirst ? """" : "", """		727071	2					
ANR	727291	ConditionalExpression	"isFirst ? """" : "", """		727071	0					
ANR	727292	Condition	isFirst		727071	0					
ANR	727293	Identifier	isFirst		727071	0					
ANR	727294	PrimaryExpression	""""""		727071	1					
ANR	727295	PrimaryExpression	""", """		727071	2					
ANR	727296	Argument	argn		727071	3					
ANR	727297	Identifier	argn		727071	0					
ANR	727298	ExpressionStatement	"r_strbuf_appendf ( sb , "");"" )"	82:1:2266:2293	727071	10	True				
ANR	727299	CallExpression	"r_strbuf_appendf ( sb , "");"" )"		727071	0					
ANR	727300	Callee	r_strbuf_appendf		727071	0					
ANR	727301	Identifier	r_strbuf_appendf		727071	0					
ANR	727302	ArgumentList	sb		727071	1					
ANR	727303	Argument	sb		727071	0					
ANR	727304	Identifier	sb		727071	0					
ANR	727305	Argument	""");"""		727071	1					
ANR	727306	PrimaryExpression	""");"""		727071	0					
ANR	727307	ReturnStatement	return r_strbuf_drain ( sb ) ;	83:1:2296:2322	727071	11	True				
ANR	727308	CallExpression	r_strbuf_drain ( sb )		727071	0					
ANR	727309	Callee	r_strbuf_drain		727071	0					
ANR	727310	Identifier	r_strbuf_drain		727071	0					
ANR	727311	ArgumentList	sb		727071	1					
ANR	727312	Argument	sb		727071	0					
ANR	727313	Identifier	sb		727071	0					
ANR	727314	ReturnType	R_API char *		727071	1					
ANR	727315	Identifier	r_anal_cc_get		727071	2					
ANR	727316	ParameterList	"RAnal * anal , const char * name"		727071	3					
ANR	727317	Parameter	RAnal * anal	54:26:1409:1419	727071	0	True				
ANR	727318	ParameterType	RAnal *		727071	0					
ANR	727319	Identifier	anal		727071	1					
ANR	727320	Parameter	const char * name	54:39:1422:1437	727071	1	True				
ANR	727321	ParameterType	const char *		727071	0					
ANR	727322	Identifier	name		727071	1					
ANR	727323	CFGEntryNode	ENTRY		727071		True				
ANR	727324	CFGExitNode	EXIT		727071		True				
ANR	727325	Symbol	ret		727071						
ANR	727326	Symbol	NULL		727071						
ANR	727327	Symbol	r_strbuf_new		727071						
ANR	727328	Symbol	false		727071						
ANR	727329	Symbol	i		727071						
ANR	727330	Symbol	k		727071						
ANR	727331	Symbol	sdb_const_get		727071						
ANR	727332	Symbol	sb		727071						
ANR	727333	Symbol	r_str_cmp		727071						
ANR	727334	Symbol	isFirst		727071						
ANR	727335	Symbol	anal		727071						
ANR	727336	Symbol	argn		727071						
ANR	727337	Symbol	arg		727071						
ANR	727338	Symbol	name		727071						
ANR	727339	Symbol	true		727071						
ANR	727340	Symbol	r_strbuf_drain		727071						
ANR	727341	Symbol	R_ANAL_CC_MAXARG		727071						
ANR	727342	Symbol	sdb_fmt		727071						
ANR	727343	Symbol	DB		727071						
ANR	727344	Function	r_anal_cc_exist	87:0:2328:2536							
ANR	727345	FunctionDef	"r_anal_cc_exist (RAnal * anal , const char * convention)"		727344	0					
ANR	727346	CompoundStatement		87:65:2393:2536	727344	0					
ANR	727347	ExpressionStatement	"r_return_val_if_fail ( anal && convention , false )"	88:1:2396:2444	727344	0	True				
ANR	727348	CallExpression	"r_return_val_if_fail ( anal && convention , false )"		727344	0					
ANR	727349	Callee	r_return_val_if_fail		727344	0					
ANR	727350	Identifier	r_return_val_if_fail		727344	0					
ANR	727351	ArgumentList	anal && convention		727344	1					
ANR	727352	Argument	anal && convention		727344	0					
ANR	727353	AndExpression	anal && convention		727344	0		&&			
ANR	727354	Identifier	anal		727344	0					
ANR	727355	Identifier	convention		727344	1					
ANR	727356	Argument	false		727344	1					
ANR	727357	Identifier	false		727344	0					
ANR	727358	IdentifierDeclStatement	"const char * x = sdb_const_get ( DB , convention , 0 ) ;"	89:1:2447:2496	727344	1	True				
ANR	727359	IdentifierDecl	"* x = sdb_const_get ( DB , convention , 0 )"		727344	0					
ANR	727360	IdentifierDeclType	const char *		727344	0					
ANR	727361	Identifier	x		727344	1					
ANR	727362	AssignmentExpression	"* x = sdb_const_get ( DB , convention , 0 )"		727344	2		=			
ANR	727363	Identifier	x		727344	0					
ANR	727364	CallExpression	"sdb_const_get ( DB , convention , 0 )"		727344	1					
ANR	727365	Callee	sdb_const_get		727344	0					
ANR	727366	Identifier	sdb_const_get		727344	0					
ANR	727367	ArgumentList	DB		727344	1					
ANR	727368	Argument	DB		727344	0					
ANR	727369	Identifier	DB		727344	0					
ANR	727370	Argument	convention		727344	1					
ANR	727371	Identifier	convention		727344	0					
ANR	727372	Argument	0		727344	2					
ANR	727373	PrimaryExpression	0		727344	0					
ANR	727374	ReturnStatement	"return x && * x && ! strcmp ( x , ""cc"" ) ;"	90:1:2499:2534	727344	2	True				
ANR	727375	AndExpression	"x && * x && ! strcmp ( x , ""cc"" )"		727344	0		&&			
ANR	727376	Identifier	x		727344	0					
ANR	727377	AndExpression	"* x && ! strcmp ( x , ""cc"" )"		727344	1		&&			
ANR	727378	UnaryOperationExpression	* x		727344	0					
ANR	727379	UnaryOperator	*		727344	0					
ANR	727380	Identifier	x		727344	1					
ANR	727381	UnaryOperationExpression	"! strcmp ( x , ""cc"" )"		727344	1					
ANR	727382	UnaryOperator	!		727344	0					
ANR	727383	CallExpression	"strcmp ( x , ""cc"" )"		727344	1					
ANR	727384	Callee	strcmp		727344	0					
ANR	727385	Identifier	strcmp		727344	0					
ANR	727386	ArgumentList	x		727344	1					
ANR	727387	Argument	x		727344	0					
ANR	727388	Identifier	x		727344	0					
ANR	727389	Argument	"""cc"""		727344	1					
ANR	727390	PrimaryExpression	"""cc"""		727344	0					
ANR	727391	ReturnType	R_API bool		727344	1					
ANR	727392	Identifier	r_anal_cc_exist		727344	2					
ANR	727393	ParameterList	"RAnal * anal , const char * convention"		727344	3					
ANR	727394	Parameter	RAnal * anal	87:28:2356:2366	727344	0	True				
ANR	727395	ParameterType	RAnal *		727344	0					
ANR	727396	Identifier	anal		727344	1					
ANR	727397	Parameter	const char * convention	87:41:2369:2390	727344	1	True				
ANR	727398	ParameterType	const char *		727344	0					
ANR	727399	Identifier	convention		727344	1					
ANR	727400	CFGEntryNode	ENTRY		727344		True				
ANR	727401	CFGExitNode	EXIT		727344		True				
ANR	727402	Symbol	convention		727344						
ANR	727403	Symbol	strcmp		727344						
ANR	727404	Symbol	* x		727344						
ANR	727405	Symbol	anal		727344						
ANR	727406	Symbol	false		727344						
ANR	727407	Symbol	x		727344						
ANR	727408	Symbol	sdb_const_get		727344						
ANR	727409	Symbol	DB		727344						
ANR	727410	Function	r_anal_cc_arg	94:6:2634:3127							
ANR	727411	FunctionDef	"r_anal_cc_arg (RAnal * anal , const char * convention , int n)"		727410	0					
ANR	727412	CompoundStatement		94:76:2704:3127	727410	0					
ANR	727413	ExpressionStatement	"r_return_val_if_fail ( anal && convention , NULL )"	95:1:2707:2754	727410	0	True				
ANR	727414	CallExpression	"r_return_val_if_fail ( anal && convention , NULL )"		727410	0					
ANR	727415	Callee	r_return_val_if_fail		727410	0					
ANR	727416	Identifier	r_return_val_if_fail		727410	0					
ANR	727417	ArgumentList	anal && convention		727410	1					
ANR	727418	Argument	anal && convention		727410	0					
ANR	727419	AndExpression	anal && convention		727410	0		&&			
ANR	727420	Identifier	anal		727410	0					
ANR	727421	Identifier	convention		727410	1					
ANR	727422	Argument	NULL		727410	1					
ANR	727423	Identifier	NULL		727410	0					
ANR	727424	IfStatement	if ( n < 0 )		727410	1					
ANR	727425	Condition	n < 0	96:5:2761:2765	727410	0	True				
ANR	727426	RelationalExpression	n < 0		727410	0		<			
ANR	727427	Identifier	n		727410	0					
ANR	727428	PrimaryExpression	0		727410	1					
ANR	727429	CompoundStatement		3:12:63:63	727410	1					
ANR	727430	ReturnStatement	"return """" ;"	97:2:2772:2781	727410	0	True				
ANR	727431	PrimaryExpression	""""""		727410	0					
ANR	727432	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""cc.%s.arg%d"" , convention , n ) ;"	99:1:2787:2845	727410	2	True				
ANR	727433	IdentifierDecl	"* query = sdb_fmt ( ""cc.%s.arg%d"" , convention , n )"		727410	0					
ANR	727434	IdentifierDeclType	const char *		727410	0					
ANR	727435	Identifier	query		727410	1					
ANR	727436	AssignmentExpression	"* query = sdb_fmt ( ""cc.%s.arg%d"" , convention , n )"		727410	2		=			
ANR	727437	Identifier	query		727410	0					
ANR	727438	CallExpression	"sdb_fmt ( ""cc.%s.arg%d"" , convention , n )"		727410	1					
ANR	727439	Callee	sdb_fmt		727410	0					
ANR	727440	Identifier	sdb_fmt		727410	0					
ANR	727441	ArgumentList	"""cc.%s.arg%d"""		727410	1					
ANR	727442	Argument	"""cc.%s.arg%d"""		727410	0					
ANR	727443	PrimaryExpression	"""cc.%s.arg%d"""		727410	0					
ANR	727444	Argument	convention		727410	1					
ANR	727445	Identifier	convention		727410	0					
ANR	727446	Argument	n		727410	2					
ANR	727447	Identifier	n		727410	0					
ANR	727448	IdentifierDeclStatement	"const char * ret = sdb_const_get ( DB , query , 0 ) ;"	100:1:2848:2894	727410	3	True				
ANR	727449	IdentifierDecl	"* ret = sdb_const_get ( DB , query , 0 )"		727410	0					
ANR	727450	IdentifierDeclType	const char *		727410	0					
ANR	727451	Identifier	ret		727410	1					
ANR	727452	AssignmentExpression	"* ret = sdb_const_get ( DB , query , 0 )"		727410	2		=			
ANR	727453	Identifier	ret		727410	0					
ANR	727454	CallExpression	"sdb_const_get ( DB , query , 0 )"		727410	1					
ANR	727455	Callee	sdb_const_get		727410	0					
ANR	727456	Identifier	sdb_const_get		727410	0					
ANR	727457	ArgumentList	DB		727410	1					
ANR	727458	Argument	DB		727410	0					
ANR	727459	Identifier	DB		727410	0					
ANR	727460	Argument	query		727410	1					
ANR	727461	Identifier	query		727410	0					
ANR	727462	Argument	0		727410	2					
ANR	727463	PrimaryExpression	0		727410	0					
ANR	727464	IfStatement	if ( ! ret )		727410	4					
ANR	727465	Condition	! ret	101:5:2901:2904	727410	0	True				
ANR	727466	UnaryOperationExpression	! ret		727410	0					
ANR	727467	UnaryOperator	!		727410	0					
ANR	727468	Identifier	ret		727410	1					
ANR	727469	CompoundStatement		8:11:202:202	727410	1					
ANR	727470	ExpressionStatement	"query = sdb_fmt ( ""cc.%s.argn"" , convention )"	102:2:2911:2953	727410	0	True				
ANR	727471	AssignmentExpression	"query = sdb_fmt ( ""cc.%s.argn"" , convention )"		727410	0		=			
ANR	727472	Identifier	query		727410	0					
ANR	727473	CallExpression	"sdb_fmt ( ""cc.%s.argn"" , convention )"		727410	1					
ANR	727474	Callee	sdb_fmt		727410	0					
ANR	727475	Identifier	sdb_fmt		727410	0					
ANR	727476	ArgumentList	"""cc.%s.argn"""		727410	1					
ANR	727477	Argument	"""cc.%s.argn"""		727410	0					
ANR	727478	PrimaryExpression	"""cc.%s.argn"""		727410	0					
ANR	727479	Argument	convention		727410	1					
ANR	727480	Identifier	convention		727410	0					
ANR	727481	ExpressionStatement	"ret = sdb_const_get ( DB , query , 0 )"	103:2:2957:2991	727410	1	True				
ANR	727482	AssignmentExpression	"ret = sdb_const_get ( DB , query , 0 )"		727410	0		=			
ANR	727483	Identifier	ret		727410	0					
ANR	727484	CallExpression	"sdb_const_get ( DB , query , 0 )"		727410	1					
ANR	727485	Callee	sdb_const_get		727410	0					
ANR	727486	Identifier	sdb_const_get		727410	0					
ANR	727487	ArgumentList	DB		727410	1					
ANR	727488	Argument	DB		727410	0					
ANR	727489	Identifier	DB		727410	0					
ANR	727490	Argument	query		727410	1					
ANR	727491	Identifier	query		727410	0					
ANR	727492	Argument	0		727410	2					
ANR	727493	PrimaryExpression	0		727410	0					
ANR	727494	IfStatement	"if ( ! strcmp ( ret , ""stack"" ) )"		727410	2					
ANR	727495	Condition	"! strcmp ( ret , ""stack"" )"	105:6:3005:3026	727410	0	True				
ANR	727496	UnaryOperationExpression	"! strcmp ( ret , ""stack"" )"		727410	0					
ANR	727497	UnaryOperator	!		727410	0					
ANR	727498	CallExpression	"strcmp ( ret , ""stack"" )"		727410	1					
ANR	727499	Callee	strcmp		727410	0					
ANR	727500	Identifier	strcmp		727410	0					
ANR	727501	ArgumentList	ret		727410	1					
ANR	727502	Argument	ret		727410	0					
ANR	727503	Identifier	ret		727410	0					
ANR	727504	Argument	"""stack"""		727410	1					
ANR	727505	PrimaryExpression	"""stack"""		727410	0					
ANR	727506	CompoundStatement		12:30:324:324	727410	1					
ANR	727507	ReturnStatement	return NULL ;	107:3:3073:3084	727410	0	True				
ANR	727508	Identifier	NULL		727410	0					
ANR	727509	ReturnStatement	return r_str_const ( ret ) ;	111:1:3101:3125	727410	5	True				
ANR	727510	CallExpression	r_str_const ( ret )		727410	0					
ANR	727511	Callee	r_str_const		727410	0					
ANR	727512	Identifier	r_str_const		727410	0					
ANR	727513	ArgumentList	ret		727410	1					
ANR	727514	Argument	ret		727410	0					
ANR	727515	Identifier	ret		727410	0					
ANR	727516	ReturnType	const char *		727410	1					
ANR	727517	Identifier	r_anal_cc_arg		727410	2					
ANR	727518	ParameterList	"RAnal * anal , const char * convention , int n"		727410	3					
ANR	727519	Parameter	RAnal * anal	94:32:2660:2670	727410	0	True				
ANR	727520	ParameterType	RAnal *		727410	0					
ANR	727521	Identifier	anal		727410	1					
ANR	727522	Parameter	const char * convention	94:45:2673:2694	727410	1	True				
ANR	727523	ParameterType	const char *		727410	0					
ANR	727524	Identifier	convention		727410	1					
ANR	727525	Parameter	int n	94:69:2697:2701	727410	2	True				
ANR	727526	ParameterType	int		727410	0					
ANR	727527	Identifier	n		727410	1					
ANR	727528	CFGEntryNode	ENTRY		727410		True				
ANR	727529	CFGExitNode	EXIT		727410		True				
ANR	727530	Symbol	convention		727410						
ANR	727531	Symbol	ret		727410						
ANR	727532	Symbol	strcmp		727410						
ANR	727533	Symbol	r_str_const		727410						
ANR	727534	Symbol	NULL		727410						
ANR	727535	Symbol	anal		727410						
ANR	727536	Symbol	query		727410						
ANR	727537	Symbol	sdb_fmt		727410						
ANR	727538	Symbol	sdb_const_get		727410						
ANR	727539	Symbol	n		727410						
ANR	727540	Symbol	DB		727410						
ANR	727541	Function	r_anal_cc_max_arg	114:0:3130:3640							
ANR	727542	FunctionDef	"r_anal_cc_max_arg (RAnal * anal , const char * cc)"		727541	0					
ANR	727543	CompoundStatement		114:57:3187:3640	727541	0					
ANR	727544	IdentifierDeclStatement	int i = 0 ;	115:1:3190:3199	727541	0	True				
ANR	727545	IdentifierDecl	i = 0		727541	0					
ANR	727546	IdentifierDeclType	int		727541	0					
ANR	727547	Identifier	i		727541	1					
ANR	727548	AssignmentExpression	i = 0		727541	2		=			
ANR	727549	Identifier	i		727541	0					
ANR	727550	PrimaryExpression	0		727541	1					
ANR	727551	ExpressionStatement	"r_return_val_if_fail ( anal && DB && cc , 0 )"	116:1:3202:3244	727541	1	True				
ANR	727552	CallExpression	"r_return_val_if_fail ( anal && DB && cc , 0 )"		727541	0					
ANR	727553	Callee	r_return_val_if_fail		727541	0					
ANR	727554	Identifier	r_return_val_if_fail		727541	0					
ANR	727555	ArgumentList	anal && DB && cc		727541	1					
ANR	727556	Argument	anal && DB && cc		727541	0					
ANR	727557	AndExpression	anal && DB && cc		727541	0		&&			
ANR	727558	Identifier	anal		727541	0					
ANR	727559	AndExpression	DB && cc		727541	1		&&			
ANR	727560	Identifier	DB		727541	0					
ANR	727561	Identifier	cc		727541	1					
ANR	727562	Argument	0		727541	1					
ANR	727563	PrimaryExpression	0		727541	0					
ANR	727564	Statement	static	117:1:3247:3252	727541	2	True				
ANR	727565	IdentifierDeclStatement	void * oldDB = NULL ;	117:8:3254:3272	727541	3	True				
ANR	727566	IdentifierDecl	* oldDB = NULL		727541	0					
ANR	727567	IdentifierDeclType	void *		727541	0					
ANR	727568	Identifier	oldDB		727541	1					
ANR	727569	AssignmentExpression	* oldDB = NULL		727541	2		=			
ANR	727570	Identifier	NULL		727541	0					
ANR	727571	Identifier	NULL		727541	1					
ANR	727572	Statement	static	118:1:3275:3280	727541	4	True				
ANR	727573	IdentifierDeclStatement	char * oldCC = NULL ;	118:8:3282:3300	727541	5	True				
ANR	727574	IdentifierDecl	* oldCC = NULL		727541	0					
ANR	727575	IdentifierDeclType	char *		727541	0					
ANR	727576	Identifier	oldCC		727541	1					
ANR	727577	AssignmentExpression	* oldCC = NULL		727541	2		=			
ANR	727578	Identifier	NULL		727541	0					
ANR	727579	Identifier	NULL		727541	1					
ANR	727580	Statement	static	119:1:3303:3308	727541	6	True				
ANR	727581	IdentifierDeclStatement	int oldArg = 0 ;	119:8:3310:3324	727541	7	True				
ANR	727582	IdentifierDecl	oldArg = 0		727541	0					
ANR	727583	IdentifierDeclType	int		727541	0					
ANR	727584	Identifier	oldArg		727541	1					
ANR	727585	AssignmentExpression	oldArg = 0		727541	2		=			
ANR	727586	Identifier	oldArg		727541	0					
ANR	727587	PrimaryExpression	0		727541	1					
ANR	727588	IfStatement	"if ( oldDB == DB && ! strcmp ( cc , oldCC ) )"		727541	8					
ANR	727589	Condition	"oldDB == DB && ! strcmp ( cc , oldCC )"	120:5:3331:3364	727541	0	True				
ANR	727590	AndExpression	"oldDB == DB && ! strcmp ( cc , oldCC )"		727541	0		&&			
ANR	727591	EqualityExpression	oldDB == DB		727541	0		==			
ANR	727592	Identifier	oldDB		727541	0					
ANR	727593	Identifier	DB		727541	1					
ANR	727594	UnaryOperationExpression	"! strcmp ( cc , oldCC )"		727541	1					
ANR	727595	UnaryOperator	!		727541	0					
ANR	727596	CallExpression	"strcmp ( cc , oldCC )"		727541	1					
ANR	727597	Callee	strcmp		727541	0					
ANR	727598	Identifier	strcmp		727541	0					
ANR	727599	ArgumentList	cc		727541	1					
ANR	727600	Argument	cc		727541	0					
ANR	727601	Identifier	cc		727541	0					
ANR	727602	Argument	oldCC		727541	1					
ANR	727603	Identifier	oldCC		727541	0					
ANR	727604	CompoundStatement		7:41:179:179	727541	1					
ANR	727605	ReturnStatement	return oldArg ;	121:2:3371:3384	727541	0	True				
ANR	727606	Identifier	oldArg		727541	0					
ANR	727607	ExpressionStatement	oldDB = DB	123:1:3390:3400	727541	9	True				
ANR	727608	AssignmentExpression	oldDB = DB		727541	0		=			
ANR	727609	Identifier	oldDB		727541	0					
ANR	727610	Identifier	DB		727541	1					
ANR	727611	ExpressionStatement	free ( oldCC )	124:1:3403:3415	727541	10	True				
ANR	727612	CallExpression	free ( oldCC )		727541	0					
ANR	727613	Callee	free		727541	0					
ANR	727614	Identifier	free		727541	0					
ANR	727615	ArgumentList	oldCC		727541	1					
ANR	727616	Argument	oldCC		727541	0					
ANR	727617	Identifier	oldCC		727541	0					
ANR	727618	ExpressionStatement	oldCC = strdup ( cc )	125:1:3418:3437	727541	11	True				
ANR	727619	AssignmentExpression	oldCC = strdup ( cc )		727541	0		=			
ANR	727620	Identifier	oldCC		727541	0					
ANR	727621	CallExpression	strdup ( cc )		727541	1					
ANR	727622	Callee	strdup		727541	0					
ANR	727623	Identifier	strdup		727541	0					
ANR	727624	ArgumentList	cc		727541	1					
ANR	727625	Argument	cc		727541	0					
ANR	727626	Identifier	cc		727541	0					
ANR	727627	ForStatement	for ( i = 0 ; i < R_ANAL_CC_MAXARG ; i ++ )		727541	12					
ANR	727628	ForInit	i = 0 ;	126:6:3445:3450	727541	0	True				
ANR	727629	AssignmentExpression	i = 0		727541	0		=			
ANR	727630	Identifier	i		727541	0					
ANR	727631	PrimaryExpression	0		727541	1					
ANR	727632	Condition	i < R_ANAL_CC_MAXARG	126:13:3452:3471	727541	1	True				
ANR	727633	RelationalExpression	i < R_ANAL_CC_MAXARG		727541	0		<			
ANR	727634	Identifier	i		727541	0					
ANR	727635	Identifier	R_ANAL_CC_MAXARG		727541	1					
ANR	727636	PostIncDecOperationExpression	i ++	126:35:3474:3476	727541	2	True				
ANR	727637	Identifier	i		727541	0					
ANR	727638	IncDec	++		727541	1					
ANR	727639	CompoundStatement		15:2:349:395	727541	3					
ANR	727640	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""cc.%s.arg%d"" , cc , i ) ;"	127:2:3483:3533	727541	0	True				
ANR	727641	IdentifierDecl	"* query = sdb_fmt ( ""cc.%s.arg%d"" , cc , i )"		727541	0					
ANR	727642	IdentifierDeclType	const char *		727541	0					
ANR	727643	Identifier	query		727541	1					
ANR	727644	AssignmentExpression	"* query = sdb_fmt ( ""cc.%s.arg%d"" , cc , i )"		727541	2		=			
ANR	727645	Identifier	query		727541	0					
ANR	727646	CallExpression	"sdb_fmt ( ""cc.%s.arg%d"" , cc , i )"		727541	1					
ANR	727647	Callee	sdb_fmt		727541	0					
ANR	727648	Identifier	sdb_fmt		727541	0					
ANR	727649	ArgumentList	"""cc.%s.arg%d"""		727541	1					
ANR	727650	Argument	"""cc.%s.arg%d"""		727541	0					
ANR	727651	PrimaryExpression	"""cc.%s.arg%d"""		727541	0					
ANR	727652	Argument	cc		727541	1					
ANR	727653	Identifier	cc		727541	0					
ANR	727654	Argument	i		727541	2					
ANR	727655	Identifier	i		727541	0					
ANR	727656	IdentifierDeclStatement	"const char * res = sdb_const_get ( DB , query , 0 ) ;"	128:2:3537:3583	727541	1	True				
ANR	727657	IdentifierDecl	"* res = sdb_const_get ( DB , query , 0 )"		727541	0					
ANR	727658	IdentifierDeclType	const char *		727541	0					
ANR	727659	Identifier	res		727541	1					
ANR	727660	AssignmentExpression	"* res = sdb_const_get ( DB , query , 0 )"		727541	2		=			
ANR	727661	Identifier	res		727541	0					
ANR	727662	CallExpression	"sdb_const_get ( DB , query , 0 )"		727541	1					
ANR	727663	Callee	sdb_const_get		727541	0					
ANR	727664	Identifier	sdb_const_get		727541	0					
ANR	727665	ArgumentList	DB		727541	1					
ANR	727666	Argument	DB		727541	0					
ANR	727667	Identifier	DB		727541	0					
ANR	727668	Argument	query		727541	1					
ANR	727669	Identifier	query		727541	0					
ANR	727670	Argument	0		727541	2					
ANR	727671	PrimaryExpression	0		727541	0					
ANR	727672	IfStatement	if ( ! res )		727541	2					
ANR	727673	Condition	! res	129:6:3591:3594	727541	0	True				
ANR	727674	UnaryOperationExpression	! res		727541	0					
ANR	727675	UnaryOperator	!		727541	0					
ANR	727676	Identifier	res		727541	1					
ANR	727677	CompoundStatement		16:12:409:409	727541	1					
ANR	727678	BreakStatement	break ;	130:3:3602:3607	727541	0	True				
ANR	727679	ExpressionStatement	oldArg = i	133:1:3617:3627	727541	13	True				
ANR	727680	AssignmentExpression	oldArg = i		727541	0		=			
ANR	727681	Identifier	oldArg		727541	0					
ANR	727682	Identifier	i		727541	1					
ANR	727683	ReturnStatement	return i ;	134:1:3630:3638	727541	14	True				
ANR	727684	Identifier	i		727541	0					
ANR	727685	ReturnType	R_API int		727541	1					
ANR	727686	Identifier	r_anal_cc_max_arg		727541	2					
ANR	727687	ParameterList	"RAnal * anal , const char * cc"		727541	3					
ANR	727688	Parameter	RAnal * anal	114:28:3158:3168	727541	0	True				
ANR	727689	ParameterType	RAnal *		727541	0					
ANR	727690	Identifier	anal		727541	1					
ANR	727691	Parameter	const char * cc	114:41:3171:3184	727541	1	True				
ANR	727692	ParameterType	const char *		727541	0					
ANR	727693	Identifier	cc		727541	1					
ANR	727694	CFGEntryNode	ENTRY		727541		True				
ANR	727695	CFGExitNode	EXIT		727541		True				
ANR	727696	Symbol	cc		727541						
ANR	727697	Symbol	strcmp		727541						
ANR	727698	Symbol	res		727541						
ANR	727699	Symbol	NULL		727541						
ANR	727700	Symbol	oldArg		727541						
ANR	727701	Symbol	query		727541						
ANR	727702	Symbol	i		727541						
ANR	727703	Symbol	oldCC		727541						
ANR	727704	Symbol	oldDB		727541						
ANR	727705	Symbol	sdb_const_get		727541						
ANR	727706	Symbol	anal		727541						
ANR	727707	Symbol	strdup		727541						
ANR	727708	Symbol	R_ANAL_CC_MAXARG		727541						
ANR	727709	Symbol	sdb_fmt		727541						
ANR	727710	Symbol	DB		727541						
ANR	727711	Function	r_anal_cc_ret	137:6:3649:3852							
ANR	727712	FunctionDef	"r_anal_cc_ret (RAnal * anal , const char * convention)"		727711	0					
ANR	727713	CompoundStatement		137:69:3712:3852	727711	0					
ANR	727714	ExpressionStatement	"r_return_val_if_fail ( anal && convention , NULL )"	138:1:3715:3762	727711	0	True				
ANR	727715	CallExpression	"r_return_val_if_fail ( anal && convention , NULL )"		727711	0					
ANR	727716	Callee	r_return_val_if_fail		727711	0					
ANR	727717	Identifier	r_return_val_if_fail		727711	0					
ANR	727718	ArgumentList	anal && convention		727711	1					
ANR	727719	Argument	anal && convention		727711	0					
ANR	727720	AndExpression	anal && convention		727711	0		&&			
ANR	727721	Identifier	anal		727711	0					
ANR	727722	Identifier	convention		727711	1					
ANR	727723	Argument	NULL		727711	1					
ANR	727724	Identifier	NULL		727711	0					
ANR	727725	IdentifierDeclStatement	"char * query = sdb_fmt ( ""cc.%s.ret"" , convention ) ;"	139:1:3765:3812	727711	1	True				
ANR	727726	IdentifierDecl	"* query = sdb_fmt ( ""cc.%s.ret"" , convention )"		727711	0					
ANR	727727	IdentifierDeclType	char *		727711	0					
ANR	727728	Identifier	query		727711	1					
ANR	727729	AssignmentExpression	"* query = sdb_fmt ( ""cc.%s.ret"" , convention )"		727711	2		=			
ANR	727730	Identifier	query		727711	0					
ANR	727731	CallExpression	"sdb_fmt ( ""cc.%s.ret"" , convention )"		727711	1					
ANR	727732	Callee	sdb_fmt		727711	0					
ANR	727733	Identifier	sdb_fmt		727711	0					
ANR	727734	ArgumentList	"""cc.%s.ret"""		727711	1					
ANR	727735	Argument	"""cc.%s.ret"""		727711	0					
ANR	727736	PrimaryExpression	"""cc.%s.ret"""		727711	0					
ANR	727737	Argument	convention		727711	1					
ANR	727738	Identifier	convention		727711	0					
ANR	727739	ReturnStatement	"return sdb_const_get ( DB , query , 0 ) ;"	140:1:3815:3850	727711	2	True				
ANR	727740	CallExpression	"sdb_const_get ( DB , query , 0 )"		727711	0					
ANR	727741	Callee	sdb_const_get		727711	0					
ANR	727742	Identifier	sdb_const_get		727711	0					
ANR	727743	ArgumentList	DB		727711	1					
ANR	727744	Argument	DB		727711	0					
ANR	727745	Identifier	DB		727711	0					
ANR	727746	Argument	query		727711	1					
ANR	727747	Identifier	query		727711	0					
ANR	727748	Argument	0		727711	2					
ANR	727749	PrimaryExpression	0		727711	0					
ANR	727750	ReturnType	const char *		727711	1					
ANR	727751	Identifier	r_anal_cc_ret		727711	2					
ANR	727752	ParameterList	"RAnal * anal , const char * convention"		727711	3					
ANR	727753	Parameter	RAnal * anal	137:32:3675:3685	727711	0	True				
ANR	727754	ParameterType	RAnal *		727711	0					
ANR	727755	Identifier	anal		727711	1					
ANR	727756	Parameter	const char * convention	137:45:3688:3709	727711	1	True				
ANR	727757	ParameterType	const char *		727711	0					
ANR	727758	Identifier	convention		727711	1					
ANR	727759	CFGEntryNode	ENTRY		727711		True				
ANR	727760	CFGExitNode	EXIT		727711		True				
ANR	727761	Symbol	convention		727711						
ANR	727762	Symbol	NULL		727711						
ANR	727763	Symbol	anal		727711						
ANR	727764	Symbol	query		727711						
ANR	727765	Symbol	sdb_fmt		727711						
ANR	727766	Symbol	sdb_const_get		727711						
ANR	727767	Symbol	DB		727711						
ANR	727768	Function	r_anal_cc_default	143:6:3861:3987							
ANR	727769	FunctionDef	r_anal_cc_default (RAnal * anal)		727768	0					
ANR	727770	CompoundStatement		143:49:3904:3987	727768	0					
ANR	727771	ExpressionStatement	"r_return_val_if_fail ( anal , NULL )"	144:1:3907:3940	727768	0	True				
ANR	727772	CallExpression	"r_return_val_if_fail ( anal , NULL )"		727768	0					
ANR	727773	Callee	r_return_val_if_fail		727768	0					
ANR	727774	Identifier	r_return_val_if_fail		727768	0					
ANR	727775	ArgumentList	anal		727768	1					
ANR	727776	Argument	anal		727768	0					
ANR	727777	Identifier	anal		727768	0					
ANR	727778	Argument	NULL		727768	1					
ANR	727779	Identifier	NULL		727768	0					
ANR	727780	ReturnStatement	"return sdb_const_get ( DB , ""default.cc"" , 0 ) ;"	145:1:3943:3985	727768	1	True				
ANR	727781	CallExpression	"sdb_const_get ( DB , ""default.cc"" , 0 )"		727768	0					
ANR	727782	Callee	sdb_const_get		727768	0					
ANR	727783	Identifier	sdb_const_get		727768	0					
ANR	727784	ArgumentList	DB		727768	1					
ANR	727785	Argument	DB		727768	0					
ANR	727786	Identifier	DB		727768	0					
ANR	727787	Argument	"""default.cc"""		727768	1					
ANR	727788	PrimaryExpression	"""default.cc"""		727768	0					
ANR	727789	Argument	0		727768	2					
ANR	727790	PrimaryExpression	0		727768	0					
ANR	727791	ReturnType	const char *		727768	1					
ANR	727792	Identifier	r_anal_cc_default		727768	2					
ANR	727793	ParameterList	RAnal * anal		727768	3					
ANR	727794	Parameter	RAnal * anal	143:36:3891:3901	727768	0	True				
ANR	727795	ParameterType	RAnal *		727768	0					
ANR	727796	Identifier	anal		727768	1					
ANR	727797	CFGEntryNode	ENTRY		727768		True				
ANR	727798	CFGExitNode	EXIT		727768		True				
ANR	727799	Symbol	NULL		727768						
ANR	727800	Symbol	anal		727768						
ANR	727801	Symbol	sdb_const_get		727768						
ANR	727802	Symbol	DB		727768						
ANR	727803	Function	r_anal_cc_func	148:6:3996:4271							
ANR	727804	FunctionDef	"r_anal_cc_func (RAnal * anal , const char * func_name)"		727803	0					
ANR	727805	CompoundStatement		148:69:4059:4271	727803	0					
ANR	727806	ExpressionStatement	"r_return_val_if_fail ( anal && func_name , NULL )"	149:1:4062:4108	727803	0	True				
ANR	727807	CallExpression	"r_return_val_if_fail ( anal && func_name , NULL )"		727803	0					
ANR	727808	Callee	r_return_val_if_fail		727803	0					
ANR	727809	Identifier	r_return_val_if_fail		727803	0					
ANR	727810	ArgumentList	anal && func_name		727803	1					
ANR	727811	Argument	anal && func_name		727803	0					
ANR	727812	AndExpression	anal && func_name		727803	0		&&			
ANR	727813	Identifier	anal		727803	0					
ANR	727814	Identifier	func_name		727803	1					
ANR	727815	Argument	NULL		727803	1					
ANR	727816	Identifier	NULL		727803	0					
ANR	727817	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""func.%s.cc"" , func_name ) ;"	150:1:4111:4164	727803	1	True				
ANR	727818	IdentifierDecl	"* query = sdb_fmt ( ""func.%s.cc"" , func_name )"		727803	0					
ANR	727819	IdentifierDeclType	const char *		727803	0					
ANR	727820	Identifier	query		727803	1					
ANR	727821	AssignmentExpression	"* query = sdb_fmt ( ""func.%s.cc"" , func_name )"		727803	2		=			
ANR	727822	Identifier	query		727803	0					
ANR	727823	CallExpression	"sdb_fmt ( ""func.%s.cc"" , func_name )"		727803	1					
ANR	727824	Callee	sdb_fmt		727803	0					
ANR	727825	Identifier	sdb_fmt		727803	0					
ANR	727826	ArgumentList	"""func.%s.cc"""		727803	1					
ANR	727827	Argument	"""func.%s.cc"""		727803	0					
ANR	727828	PrimaryExpression	"""func.%s.cc"""		727803	0					
ANR	727829	Argument	func_name		727803	1					
ANR	727830	Identifier	func_name		727803	0					
ANR	727831	IdentifierDeclStatement	"const char * cc = sdb_const_get ( anal -> sdb_types , query , 0 ) ;"	151:1:4167:4225	727803	2	True				
ANR	727832	IdentifierDecl	"* cc = sdb_const_get ( anal -> sdb_types , query , 0 )"		727803	0					
ANR	727833	IdentifierDeclType	const char *		727803	0					
ANR	727834	Identifier	cc		727803	1					
ANR	727835	AssignmentExpression	"* cc = sdb_const_get ( anal -> sdb_types , query , 0 )"		727803	2		=			
ANR	727836	Identifier	cc		727803	0					
ANR	727837	CallExpression	"sdb_const_get ( anal -> sdb_types , query , 0 )"		727803	1					
ANR	727838	Callee	sdb_const_get		727803	0					
ANR	727839	Identifier	sdb_const_get		727803	0					
ANR	727840	ArgumentList	anal -> sdb_types		727803	1					
ANR	727841	Argument	anal -> sdb_types		727803	0					
ANR	727842	PtrMemberAccess	anal -> sdb_types		727803	0					
ANR	727843	Identifier	anal		727803	0					
ANR	727844	Identifier	sdb_types		727803	1					
ANR	727845	Argument	query		727803	1					
ANR	727846	Identifier	query		727803	0					
ANR	727847	Argument	0		727803	2					
ANR	727848	PrimaryExpression	0		727803	0					
ANR	727849	ReturnStatement	return cc ? cc : r_anal_cc_default ( anal ) ;	152:1:4228:4269	727803	3	True				
ANR	727850	ConditionalExpression	cc ? cc : r_anal_cc_default ( anal )		727803	0					
ANR	727851	Condition	cc		727803	0					
ANR	727852	Identifier	cc		727803	0					
ANR	727853	Identifier	cc		727803	1					
ANR	727854	CallExpression	r_anal_cc_default ( anal )		727803	2					
ANR	727855	Callee	r_anal_cc_default		727803	0					
ANR	727856	Identifier	r_anal_cc_default		727803	0					
ANR	727857	ArgumentList	anal		727803	1					
ANR	727858	Argument	anal		727803	0					
ANR	727859	Identifier	anal		727803	0					
ANR	727860	ReturnType	const char *		727803	1					
ANR	727861	Identifier	r_anal_cc_func		727803	2					
ANR	727862	ParameterList	"RAnal * anal , const char * func_name"		727803	3					
ANR	727863	Parameter	RAnal * anal	148:33:4023:4033	727803	0	True				
ANR	727864	ParameterType	RAnal *		727803	0					
ANR	727865	Identifier	anal		727803	1					
ANR	727866	Parameter	const char * func_name	148:46:4036:4056	727803	1	True				
ANR	727867	ParameterType	const char *		727803	0					
ANR	727868	Identifier	func_name		727803	1					
ANR	727869	CFGEntryNode	ENTRY		727803		True				
ANR	727870	CFGExitNode	EXIT		727803		True				
ANR	727871	Symbol	cc		727803						
ANR	727872	Symbol	r_anal_cc_default		727803						
ANR	727873	Symbol	* anal		727803						
ANR	727874	Symbol	NULL		727803						
ANR	727875	Symbol	anal		727803						
ANR	727876	Symbol	query		727803						
ANR	727877	Symbol	anal -> sdb_types		727803						
ANR	727878	Symbol	sdb_fmt		727803						
ANR	727879	Symbol	sdb_const_get		727803						
ANR	727880	Symbol	func_name		727803						
