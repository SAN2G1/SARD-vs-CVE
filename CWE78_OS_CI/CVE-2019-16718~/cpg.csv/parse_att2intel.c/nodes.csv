command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5538081	File	data/converged/CVE-2019-16718~_radare2/parse_att2intel.c								
ANR	5538082	Function	replace	13:0:221:1404							
ANR	5538083	FunctionDef	"replace (int argc , const char * argv [ ] , char * newstr)"		5538082	0					
ANR	5538084	CompoundStatement		13:63:284:1404	5538082	0					
ANR	5538085	IdentifierDeclStatement	"int i , j , k ;"	14:1:287:296	5538082	0	True				
ANR	5538086	IdentifierDecl	i		5538082	0					
ANR	5538087	IdentifierDeclType	int		5538082	0					
ANR	5538088	Identifier	i		5538082	1					
ANR	5538089	IdentifierDecl	j		5538082	1					
ANR	5538090	IdentifierDeclType	int		5538082	0					
ANR	5538091	Identifier	j		5538082	1					
ANR	5538092	IdentifierDecl	k		5538082	2					
ANR	5538093	IdentifierDeclType	int		5538082	0					
ANR	5538094	Identifier	k		5538082	1					
ANR	5538095	ClassDefStatement	"struct { char * op ; char * str ; } ops [ ] = { { ""cmpl"" , ""cmp 2, 1"" } , { ""testl"" , ""test 2, 1"" } , { ""leal"" , ""lea 2, 1"" } , { ""movl"" , ""mov 2, 1"" } , { ""xorl"" , ""xor 2, 1"" } , { ""andl"" , ""and 2, 1"" } , { ""orl"" , ""or 2, 1"" } , { ""addl"" , ""add 2, 1"" } , { ""incl"" , ""inc 1"" } , { ""decl"" , ""dec 1"" } , { ""subl"" , ""sub 2, 1"" } , { ""mull"" , ""mul 2, 1"" } , { ""divl"" , ""div 2, 1"" } , { ""pushl"" , ""push 1"" } , { ""popl"" , ""pop 1"" } , { ""ret"" , ""ret"" } , { NULL } } ;"	15:1:299:758	5538082	1	True				
ANR	5538096	IdentifierDecl	"ops [ ] = { { ""cmpl"" , ""cmp 2, 1"" } , { ""testl"" , ""test 2, 1"" } , { ""leal"" , ""lea 2, 1"" } , { ""movl"" , ""mov 2, 1"" } , { ""xorl"" , ""xor 2, 1"" } , { ""andl"" , ""and 2, 1"" } , { ""orl"" , ""or 2, 1"" } , { ""addl"" , ""add 2, 1"" } , { ""incl"" , ""inc 1"" } , { ""decl"" , ""dec 1"" } , { ""subl"" , ""sub 2, 1"" } , { ""mull"" , ""mul 2, 1"" } , { ""divl"" , ""div 2, 1"" } , { ""pushl"" , ""push 1"" } , { ""popl"" , ""pop 1"" } , { ""ret"" , ""ret"" } , { NULL } }"		5538082	0					
ANR	5538097	IdentifierDeclType	 [ ]		5538082	0					
ANR	5538098	Identifier	ops		5538082	1					
ANR	5538099	AssignmentExpression	"ops [ ] = { { ""cmpl"" , ""cmp 2, 1"" } , { ""testl"" , ""test 2, 1"" } , { ""leal"" , ""lea 2, 1"" } , { ""movl"" , ""mov 2, 1"" } , { ""xorl"" , ""xor 2, 1"" } , { ""andl"" , ""and 2, 1"" } , { ""orl"" , ""or 2, 1"" } , { ""addl"" , ""add 2, 1"" } , { ""incl"" , ""inc 1"" } , { ""decl"" , ""dec 1"" } , { ""subl"" , ""sub 2, 1"" } , { ""mull"" , ""mul 2, 1"" } , { ""divl"" , ""div 2, 1"" } , { ""pushl"" , ""push 1"" } , { ""popl"" , ""pop 1"" } , { ""ret"" , ""ret"" } , { NULL } }"		5538082	2		=			
ANR	5538100	Identifier	ops		5538082	0					
ANR	5538101	InitializerList	"""cmpl"""		5538082	1					
ANR	5538102	InitializerList	"""cmpl"""		5538082	0					
ANR	5538103	PrimaryExpression	"""cmpl"""		5538082	0					
ANR	5538104	PrimaryExpression	"""cmp 2, 1"""		5538082	1					
ANR	5538105	InitializerList	"""testl"""		5538082	1					
ANR	5538106	PrimaryExpression	"""testl"""		5538082	0					
ANR	5538107	PrimaryExpression	"""test 2, 1"""		5538082	1					
ANR	5538108	InitializerList	"""leal"""		5538082	2					
ANR	5538109	PrimaryExpression	"""leal"""		5538082	0					
ANR	5538110	PrimaryExpression	"""lea 2, 1"""		5538082	1					
ANR	5538111	InitializerList	"""movl"""		5538082	3					
ANR	5538112	PrimaryExpression	"""movl"""		5538082	0					
ANR	5538113	PrimaryExpression	"""mov 2, 1"""		5538082	1					
ANR	5538114	InitializerList	"""xorl"""		5538082	4					
ANR	5538115	PrimaryExpression	"""xorl"""		5538082	0					
ANR	5538116	PrimaryExpression	"""xor 2, 1"""		5538082	1					
ANR	5538117	InitializerList	"""andl"""		5538082	5					
ANR	5538118	PrimaryExpression	"""andl"""		5538082	0					
ANR	5538119	PrimaryExpression	"""and 2, 1"""		5538082	1					
ANR	5538120	InitializerList	"""orl"""		5538082	6					
ANR	5538121	PrimaryExpression	"""orl"""		5538082	0					
ANR	5538122	PrimaryExpression	"""or 2, 1"""		5538082	1					
ANR	5538123	InitializerList	"""addl"""		5538082	7					
ANR	5538124	PrimaryExpression	"""addl"""		5538082	0					
ANR	5538125	PrimaryExpression	"""add 2, 1"""		5538082	1					
ANR	5538126	InitializerList	"""incl"""		5538082	8					
ANR	5538127	PrimaryExpression	"""incl"""		5538082	0					
ANR	5538128	PrimaryExpression	"""inc 1"""		5538082	1					
ANR	5538129	InitializerList	"""decl"""		5538082	9					
ANR	5538130	PrimaryExpression	"""decl"""		5538082	0					
ANR	5538131	PrimaryExpression	"""dec 1"""		5538082	1					
ANR	5538132	InitializerList	"""subl"""		5538082	10					
ANR	5538133	PrimaryExpression	"""subl"""		5538082	0					
ANR	5538134	PrimaryExpression	"""sub 2, 1"""		5538082	1					
ANR	5538135	InitializerList	"""mull"""		5538082	11					
ANR	5538136	PrimaryExpression	"""mull"""		5538082	0					
ANR	5538137	PrimaryExpression	"""mul 2, 1"""		5538082	1					
ANR	5538138	InitializerList	"""divl"""		5538082	12					
ANR	5538139	PrimaryExpression	"""divl"""		5538082	0					
ANR	5538140	PrimaryExpression	"""div 2, 1"""		5538082	1					
ANR	5538141	InitializerList	"""pushl"""		5538082	13					
ANR	5538142	PrimaryExpression	"""pushl"""		5538082	0					
ANR	5538143	PrimaryExpression	"""push 1"""		5538082	1					
ANR	5538144	InitializerList	"""popl"""		5538082	14					
ANR	5538145	PrimaryExpression	"""popl"""		5538082	0					
ANR	5538146	PrimaryExpression	"""pop 1"""		5538082	1					
ANR	5538147	InitializerList	"""ret"""		5538082	15					
ANR	5538148	PrimaryExpression	"""ret"""		5538082	0					
ANR	5538149	PrimaryExpression	"""ret"""		5538082	1					
ANR	5538150	InitializerList	NULL		5538082	16					
ANR	5538151	Identifier	NULL		5538082	0					
ANR	5538152	ForStatement	for ( i = 0 ; ops [ i ] . op != NULL ; i ++ )		5538082	2					
ANR	5538153	ForInit	i = 0 ;	38:6:767:770	5538082	0	True				
ANR	5538154	AssignmentExpression	i = 0		5538082	0		=			
ANR	5538155	Identifier	i		5538082	0					
ANR	5538156	PrimaryExpression	0		5538082	1					
ANR	5538157	Condition	ops [ i ] . op != NULL	38:11:772:788	5538082	1	True				
ANR	5538158	EqualityExpression	ops [ i ] . op != NULL		5538082	0		!=			
ANR	5538159	MemberAccess	ops [ i ] . op		5538082	0					
ANR	5538160	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538161	Identifier	ops		5538082	0					
ANR	5538162	Identifier	i		5538082	1					
ANR	5538163	Identifier	op		5538082	1					
ANR	5538164	Identifier	NULL		5538082	1					
ANR	5538165	PostIncDecOperationExpression	i ++	38:30:791:793	5538082	2	True				
ANR	5538166	Identifier	i		5538082	0					
ANR	5538167	IncDec	++		5538082	1					
ANR	5538168	CompoundStatement		26:35:511:511	5538082	3					
ANR	5538169	IfStatement	"if ( ! strcmp ( ops [ i ] . op , argv [ 0 ] ) )"		5538082	0					
ANR	5538170	Condition	"! strcmp ( ops [ i ] . op , argv [ 0 ] )"	39:6:804:831	5538082	0	True				
ANR	5538171	UnaryOperationExpression	"! strcmp ( ops [ i ] . op , argv [ 0 ] )"		5538082	0					
ANR	5538172	UnaryOperator	!		5538082	0					
ANR	5538173	CallExpression	"strcmp ( ops [ i ] . op , argv [ 0 ] )"		5538082	1					
ANR	5538174	Callee	strcmp		5538082	0					
ANR	5538175	Identifier	strcmp		5538082	0					
ANR	5538176	ArgumentList	ops [ i ] . op		5538082	1					
ANR	5538177	Argument	ops [ i ] . op		5538082	0					
ANR	5538178	MemberAccess	ops [ i ] . op		5538082	0					
ANR	5538179	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538180	Identifier	ops		5538082	0					
ANR	5538181	Identifier	i		5538082	1					
ANR	5538182	Identifier	op		5538082	1					
ANR	5538183	Argument	argv [ 0 ]		5538082	1					
ANR	5538184	ArrayIndexing	argv [ 0 ]		5538082	0					
ANR	5538185	Identifier	argv		5538082	0					
ANR	5538186	PrimaryExpression	0		5538082	1					
ANR	5538187	CompoundStatement		27:36:549:549	5538082	1					
ANR	5538188	IfStatement	if ( newstr != NULL )		5538082	0					
ANR	5538189	Condition	newstr != NULL	40:7:843:856	5538082	0	True				
ANR	5538190	EqualityExpression	newstr != NULL		5538082	0		!=			
ANR	5538191	Identifier	newstr		5538082	0					
ANR	5538192	Identifier	NULL		5538082	1					
ANR	5538193	CompoundStatement		28:23:574:574	5538082	1					
ANR	5538194	ForStatement	"for ( j = k = 0 ; ops [ i ] . str [ j ] != '\\0' ; j ++ , k ++ )"		5538082	0					
ANR	5538195	ForInit	j = k = 0 ;	41:9:870:875	5538082	0	True				
ANR	5538196	AssignmentExpression	j = k = 0		5538082	0		=			
ANR	5538197	Identifier	j		5538082	0					
ANR	5538198	AssignmentExpression	k = 0		5538082	1		=			
ANR	5538199	Identifier	k		5538082	0					
ANR	5538200	PrimaryExpression	0		5538082	1					
ANR	5538201	Condition	ops [ i ] . str [ j ] != '\\0'	41:15:876:894	5538082	1	True				
ANR	5538202	EqualityExpression	ops [ i ] . str [ j ] != '\\0'		5538082	0		!=			
ANR	5538203	ArrayIndexing	ops [ i ] . str [ j ]		5538082	0					
ANR	5538204	MemberAccess	ops [ i ] . str		5538082	0					
ANR	5538205	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538206	Identifier	ops		5538082	0					
ANR	5538207	Identifier	i		5538082	1					
ANR	5538208	Identifier	str		5538082	1					
ANR	5538209	Identifier	j		5538082	1					
ANR	5538210	PrimaryExpression	'\\0'		5538082	1					
ANR	5538211	Expression	"j ++ , k ++"	41:35:896:902	5538082	2	True				
ANR	5538212	PostIncDecOperationExpression	j ++		5538082	0					
ANR	5538213	Identifier	j		5538082	0					
ANR	5538214	IncDec	++		5538082	1					
ANR	5538215	PostIncDecOperationExpression	k ++		5538082	1					
ANR	5538216	Identifier	k		5538082	0					
ANR	5538217	IncDec	++		5538082	1					
ANR	5538218	CompoundStatement		29:44:620:620	5538082	3					
ANR	5538219	IfStatement	if ( ops [ i ] . str [ j ] >= '0' && ops [ i ] . str [ j ] <= '9' )		5538082	0					
ANR	5538220	Condition	ops [ i ] . str [ j ] >= '0' && ops [ i ] . str [ j ] <= '9'	42:9:916:955	5538082	0	True				
ANR	5538221	AndExpression	ops [ i ] . str [ j ] >= '0' && ops [ i ] . str [ j ] <= '9'		5538082	0		&&			
ANR	5538222	RelationalExpression	ops [ i ] . str [ j ] >= '0'		5538082	0		>=			
ANR	5538223	ArrayIndexing	ops [ i ] . str [ j ]		5538082	0					
ANR	5538224	MemberAccess	ops [ i ] . str		5538082	0					
ANR	5538225	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538226	Identifier	ops		5538082	0					
ANR	5538227	Identifier	i		5538082	1					
ANR	5538228	Identifier	str		5538082	1					
ANR	5538229	Identifier	j		5538082	1					
ANR	5538230	PrimaryExpression	'0'		5538082	1					
ANR	5538231	RelationalExpression	ops [ i ] . str [ j ] <= '9'		5538082	1		<=			
ANR	5538232	ArrayIndexing	ops [ i ] . str [ j ]		5538082	0					
ANR	5538233	MemberAccess	ops [ i ] . str		5538082	0					
ANR	5538234	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538235	Identifier	ops		5538082	0					
ANR	5538236	Identifier	i		5538082	1					
ANR	5538237	Identifier	str		5538082	1					
ANR	5538238	Identifier	j		5538082	1					
ANR	5538239	PrimaryExpression	'9'		5538082	1					
ANR	5538240	CompoundStatement		31:6:681:722	5538082	1					
ANR	5538241	IdentifierDeclStatement	const char * w = argv [ ops [ i ] . str [ j ] - '0' ] ;	43:6:966:1007	5538082	0	True				
ANR	5538242	IdentifierDecl	* w = argv [ ops [ i ] . str [ j ] - '0' ]		5538082	0					
ANR	5538243	IdentifierDeclType	const char *		5538082	0					
ANR	5538244	Identifier	w		5538082	1					
ANR	5538245	AssignmentExpression	* w = argv [ ops [ i ] . str [ j ] - '0' ]		5538082	2		=			
ANR	5538246	Identifier	w		5538082	0					
ANR	5538247	ArrayIndexing	argv [ ops [ i ] . str [ j ] - '0' ]		5538082	1					
ANR	5538248	Identifier	argv		5538082	0					
ANR	5538249	AdditiveExpression	ops [ i ] . str [ j ] - '0'		5538082	1		-			
ANR	5538250	ArrayIndexing	ops [ i ] . str [ j ]		5538082	0					
ANR	5538251	MemberAccess	ops [ i ] . str		5538082	0					
ANR	5538252	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538253	Identifier	ops		5538082	0					
ANR	5538254	Identifier	i		5538082	1					
ANR	5538255	Identifier	str		5538082	1					
ANR	5538256	Identifier	j		5538082	1					
ANR	5538257	PrimaryExpression	'0'		5538082	1					
ANR	5538258	IfStatement	if ( w != NULL )		5538082	1					
ANR	5538259	Condition	w != NULL	44:10:1019:1027	5538082	0	True				
ANR	5538260	EqualityExpression	w != NULL		5538082	0		!=			
ANR	5538261	Identifier	w		5538082	0					
ANR	5538262	Identifier	NULL		5538082	1					
ANR	5538263	CompoundStatement		32:21:745:745	5538082	1					
ANR	5538264	ExpressionStatement	"strcpy ( newstr + k , w )"	45:7:1039:1058	5538082	0	True				
ANR	5538265	CallExpression	"strcpy ( newstr + k , w )"		5538082	0					
ANR	5538266	Callee	strcpy		5538082	0					
ANR	5538267	Identifier	strcpy		5538082	0					
ANR	5538268	ArgumentList	newstr + k		5538082	1					
ANR	5538269	Argument	newstr + k		5538082	0					
ANR	5538270	AdditiveExpression	newstr + k		5538082	0		+			
ANR	5538271	Identifier	newstr		5538082	0					
ANR	5538272	Identifier	k		5538082	1					
ANR	5538273	Argument	w		5538082	1					
ANR	5538274	Identifier	w		5538082	0					
ANR	5538275	ExpressionStatement	k += strlen ( w ) - 1	46:7:1067:1083	5538082	1	True				
ANR	5538276	AssignmentExpression	k += strlen ( w ) - 1		5538082	0		+=			
ANR	5538277	Identifier	k		5538082	0					
ANR	5538278	AdditiveExpression	strlen ( w ) - 1		5538082	1		-			
ANR	5538279	CallExpression	strlen ( w )		5538082	0					
ANR	5538280	Callee	strlen		5538082	0					
ANR	5538281	Identifier	strlen		5538082	0					
ANR	5538282	ArgumentList	w		5538082	1					
ANR	5538283	Argument	w		5538082	0					
ANR	5538284	Identifier	w		5538082	0					
ANR	5538285	PrimaryExpression	1		5538082	1					
ANR	5538286	ElseStatement	else		5538082	0					
ANR	5538287	CompoundStatement		36:12:820:820	5538082	0					
ANR	5538288	ExpressionStatement	newstr [ k ] = ops [ i ] . str [ j ]	49:6:1113:1138	5538082	0	True				
ANR	5538289	AssignmentExpression	newstr [ k ] = ops [ i ] . str [ j ]		5538082	0		=			
ANR	5538290	ArrayIndexing	newstr [ k ]		5538082	0					
ANR	5538291	Identifier	newstr		5538082	0					
ANR	5538292	Identifier	k		5538082	1					
ANR	5538293	ArrayIndexing	ops [ i ] . str [ j ]		5538082	1					
ANR	5538294	MemberAccess	ops [ i ] . str		5538082	0					
ANR	5538295	ArrayIndexing	ops [ i ]		5538082	0					
ANR	5538296	Identifier	ops		5538082	0					
ANR	5538297	Identifier	i		5538082	1					
ANR	5538298	Identifier	str		5538082	1					
ANR	5538299	Identifier	j		5538082	1					
ANR	5538300	ExpressionStatement	newstr [ k ] = '\\0'	52:4:1157:1171	5538082	1	True				
ANR	5538301	AssignmentExpression	newstr [ k ] = '\\0'		5538082	0		=			
ANR	5538302	ArrayIndexing	newstr [ k ]		5538082	0					
ANR	5538303	Identifier	newstr		5538082	0					
ANR	5538304	Identifier	k		5538082	1					
ANR	5538305	PrimaryExpression	'\\0'		5538082	1					
ANR	5538306	ReturnStatement	return true ;	54:3:1181:1192	5538082	1	True				
ANR	5538307	Identifier	true		5538082	0					
ANR	5538308	IfStatement	if ( newstr != NULL )		5538082	3					
ANR	5538309	Condition	newstr != NULL	59:5:1233:1246	5538082	0	True				
ANR	5538310	EqualityExpression	newstr != NULL		5538082	0		!=			
ANR	5538311	Identifier	newstr		5538082	0					
ANR	5538312	Identifier	NULL		5538082	1					
ANR	5538313	CompoundStatement		47:21:964:964	5538082	1					
ANR	5538314	ExpressionStatement	newstr [ 0 ] = '\\0'	60:2:1253:1269	5538082	0	True				
ANR	5538315	AssignmentExpression	newstr [ 0 ] = '\\0'		5538082	0		=			
ANR	5538316	ArrayIndexing	newstr [ 0 ]		5538082	0					
ANR	5538317	Identifier	newstr		5538082	0					
ANR	5538318	PrimaryExpression	0		5538082	1					
ANR	5538319	PrimaryExpression	'\\0'		5538082	1					
ANR	5538320	ForStatement	for ( i = 0 ; i < argc ; i ++ )		5538082	1					
ANR	5538321	ForInit	i = 0 ;	61:7:1278:1281	5538082	0	True				
ANR	5538322	AssignmentExpression	i = 0		5538082	0		=			
ANR	5538323	Identifier	i		5538082	0					
ANR	5538324	PrimaryExpression	0		5538082	1					
ANR	5538325	Condition	i < argc	61:12:1283:1288	5538082	1	True				
ANR	5538326	RelationalExpression	i < argc		5538082	0		<			
ANR	5538327	Identifier	i		5538082	0					
ANR	5538328	Identifier	argc		5538082	1					
ANR	5538329	PostIncDecOperationExpression	i ++	61:20:1291:1293	5538082	2	True				
ANR	5538330	Identifier	i		5538082	0					
ANR	5538331	IncDec	++		5538082	1					
ANR	5538332	CompoundStatement		49:25:1011:1011	5538082	3					
ANR	5538333	ExpressionStatement	"strcat ( newstr , argv [ i ] )"	62:3:1301:1325	5538082	0	True				
ANR	5538334	CallExpression	"strcat ( newstr , argv [ i ] )"		5538082	0					
ANR	5538335	Callee	strcat		5538082	0					
ANR	5538336	Identifier	strcat		5538082	0					
ANR	5538337	ArgumentList	newstr		5538082	1					
ANR	5538338	Argument	newstr		5538082	0					
ANR	5538339	Identifier	newstr		5538082	0					
ANR	5538340	Argument	argv [ i ]		5538082	1					
ANR	5538341	ArrayIndexing	argv [ i ]		5538082	0					
ANR	5538342	Identifier	argv		5538082	0					
ANR	5538343	Identifier	i		5538082	1					
ANR	5538344	ExpressionStatement	"strcat ( newstr , ( i == 0 || i == argc - 1 ) ? "" "" : "","" )"	63:3:1330:1379	5538082	1	True				
ANR	5538345	CallExpression	"strcat ( newstr , ( i == 0 || i == argc - 1 ) ? "" "" : "","" )"		5538082	0					
ANR	5538346	Callee	strcat		5538082	0					
ANR	5538347	Identifier	strcat		5538082	0					
ANR	5538348	ArgumentList	newstr		5538082	1					
ANR	5538349	Argument	newstr		5538082	0					
ANR	5538350	Identifier	newstr		5538082	0					
ANR	5538351	Argument	"( i == 0 || i == argc - 1 ) ? "" "" : "","""		5538082	1					
ANR	5538352	ConditionalExpression	"( i == 0 || i == argc - 1 ) ? "" "" : "","""		5538082	0					
ANR	5538353	Condition	i == 0 || i == argc - 1		5538082	0					
ANR	5538354	OrExpression	i == 0 || i == argc - 1		5538082	0		||			
ANR	5538355	EqualityExpression	i == 0		5538082	0		==			
ANR	5538356	Identifier	i		5538082	0					
ANR	5538357	PrimaryExpression	0		5538082	1					
ANR	5538358	EqualityExpression	i == argc - 1		5538082	1		==			
ANR	5538359	Identifier	i		5538082	0					
ANR	5538360	AdditiveExpression	argc - 1		5538082	1		-			
ANR	5538361	Identifier	argc		5538082	0					
ANR	5538362	PrimaryExpression	1		5538082	1					
ANR	5538363	PrimaryExpression	""" """		5538082	1					
ANR	5538364	PrimaryExpression	""","""		5538082	2					
ANR	5538365	ReturnStatement	return false ;	67:1:1390:1402	5538082	4	True				
ANR	5538366	Identifier	false		5538082	0					
ANR	5538367	ReturnType	static int		5538082	1					
ANR	5538368	Identifier	replace		5538082	2					
ANR	5538369	ParameterList	"int argc , const char * argv [ ] , char * newstr"		5538082	3					
ANR	5538370	Parameter	int argc	13:19:240:247	5538082	0	True				
ANR	5538371	ParameterType	int		5538082	0					
ANR	5538372	Identifier	argc		5538082	1					
ANR	5538373	Parameter	const char * argv [ ]	13:29:250:267	5538082	1	True				
ANR	5538374	ParameterType	const char * [ ]		5538082	0					
ANR	5538375	Identifier	argv		5538082	1					
ANR	5538376	Parameter	char * newstr	13:49:270:281	5538082	2	True				
ANR	5538377	ParameterType	char *		5538082	0					
ANR	5538378	Identifier	newstr		5538082	1					
ANR	5538379	CFGEntryNode	ENTRY		5538082		True				
ANR	5538380	CFGExitNode	EXIT		5538082		True				
ANR	5538381	Symbol	* ops [ i ] . str		5538082						
ANR	5538382	Symbol	* * ops		5538082						
ANR	5538383	Symbol	* argv		5538082						
ANR	5538384	Symbol	argv		5538082						
ANR	5538385	Symbol	ops [ i ] . str		5538082						
ANR	5538386	Symbol	strlen		5538082						
ANR	5538387	Symbol	ops [ i ] . op		5538082						
ANR	5538388	Symbol	* ops		5538082						
ANR	5538389	Symbol	argc		5538082						
ANR	5538390	Symbol	strcmp		5538082						
ANR	5538391	Symbol	* * j		5538082						
ANR	5538392	Symbol	* * i		5538082						
ANR	5538393	Symbol	NULL		5538082						
ANR	5538394	Symbol	* * ops [ i ] . str		5538082						
ANR	5538395	Symbol	false		5538082						
ANR	5538396	Symbol	i		5538082						
ANR	5538397	Symbol	j		5538082						
ANR	5538398	Symbol	k		5538082						
ANR	5538399	Symbol	newstr		5538082						
ANR	5538400	Symbol	* * * ops		5538082						
ANR	5538401	Symbol	ops		5538082						
ANR	5538402	Symbol	* i		5538082						
ANR	5538403	Symbol	* newstr		5538082						
ANR	5538404	Symbol	* j		5538082						
ANR	5538405	Symbol	* k		5538082						
ANR	5538406	Symbol	w		5538082						
ANR	5538407	Symbol	* * * i		5538082						
ANR	5538408	Symbol	true		5538082						
ANR	5538409	Function	parse	70:0:1407:3403							
ANR	5538410	FunctionDef	"parse (RParse * p , const char * data , char * str)"		5538409	0					
ANR	5538411	CompoundStatement		70:57:1464:3403	5538409	0					
ANR	5538412	IdentifierDeclStatement	"int i , n ;"	71:1:1467:1475	5538409	0	True				
ANR	5538413	IdentifierDecl	i		5538409	0					
ANR	5538414	IdentifierDeclType	int		5538409	0					
ANR	5538415	Identifier	i		5538409	1					
ANR	5538416	IdentifierDecl	n		5538409	1					
ANR	5538417	IdentifierDeclType	int		5538409	0					
ANR	5538418	Identifier	n		5538409	1					
ANR	5538419	IdentifierDeclStatement	char w0 [ 32 ] ;	72:1:1478:1489	5538409	1	True				
ANR	5538420	IdentifierDecl	w0 [ 32 ]		5538409	0					
ANR	5538421	IdentifierDeclType	char [ 32 ]		5538409	0					
ANR	5538422	Identifier	w0		5538409	1					
ANR	5538423	PrimaryExpression	32		5538409	2					
ANR	5538424	IdentifierDeclStatement	char w1 [ 32 ] ;	73:1:1492:1503	5538409	2	True				
ANR	5538425	IdentifierDecl	w1 [ 32 ]		5538409	0					
ANR	5538426	IdentifierDeclType	char [ 32 ]		5538409	0					
ANR	5538427	Identifier	w1		5538409	1					
ANR	5538428	PrimaryExpression	32		5538409	2					
ANR	5538429	IdentifierDeclStatement	char w2 [ 32 ] ;	74:1:1506:1517	5538409	3	True				
ANR	5538430	IdentifierDecl	w2 [ 32 ]		5538409	0					
ANR	5538431	IdentifierDeclType	char [ 32 ]		5538409	0					
ANR	5538432	Identifier	w2		5538409	1					
ANR	5538433	PrimaryExpression	32		5538409	2					
ANR	5538434	IdentifierDeclStatement	char w3 [ 32 ] ;	75:1:1520:1531	5538409	4	True				
ANR	5538435	IdentifierDecl	w3 [ 32 ]		5538409	0					
ANR	5538436	IdentifierDeclType	char [ 32 ]		5538409	0					
ANR	5538437	Identifier	w3		5538409	1					
ANR	5538438	PrimaryExpression	32		5538409	2					
ANR	5538439	IdentifierDeclStatement	"char * buf , * ptr , * optr , * num ;"	76:1:1534:1562	5538409	5	True				
ANR	5538440	IdentifierDecl	* buf		5538409	0					
ANR	5538441	IdentifierDeclType	char *		5538409	0					
ANR	5538442	Identifier	buf		5538409	1					
ANR	5538443	IdentifierDecl	* ptr		5538409	1					
ANR	5538444	IdentifierDeclType	char *		5538409	0					
ANR	5538445	Identifier	ptr		5538409	1					
ANR	5538446	IdentifierDecl	* optr		5538409	2					
ANR	5538447	IdentifierDeclType	char *		5538409	0					
ANR	5538448	Identifier	optr		5538409	1					
ANR	5538449	IdentifierDecl	* num		5538409	3					
ANR	5538450	IdentifierDeclType	char *		5538409	0					
ANR	5538451	Identifier	num		5538409	1					
ANR	5538452	ExpressionStatement	buf = strdup ( data )	79:1:1597:1616	5538409	6	True				
ANR	5538453	AssignmentExpression	buf = strdup ( data )		5538409	0		=			
ANR	5538454	Identifier	buf		5538409	0					
ANR	5538455	CallExpression	strdup ( data )		5538409	1					
ANR	5538456	Callee	strdup		5538409	0					
ANR	5538457	Identifier	strdup		5538409	0					
ANR	5538458	ArgumentList	data		5538409	1					
ANR	5538459	Argument	data		5538409	0					
ANR	5538460	Identifier	data		5538409	0					
ANR	5538461	IfStatement	if ( ! buf )		5538409	7					
ANR	5538462	Condition	! buf	80:5:1623:1626	5538409	0	True				
ANR	5538463	UnaryOperationExpression	! buf		5538409	0					
ANR	5538464	UnaryOperator	!		5538409	0					
ANR	5538465	Identifier	buf		5538409	1					
ANR	5538466	CompoundStatement		11:11:164:164	5538409	1					
ANR	5538467	ReturnStatement	return false ;	81:2:1633:1645	5538409	0	True				
ANR	5538468	Identifier	false		5538409	0					
ANR	5538469	ExpressionStatement	r_str_trim_head ( buf )	83:1:1651:1672	5538409	8	True				
ANR	5538470	CallExpression	r_str_trim_head ( buf )		5538409	0					
ANR	5538471	Callee	r_str_trim_head		5538409	0					
ANR	5538472	Identifier	r_str_trim_head		5538409	0					
ANR	5538473	ArgumentList	buf		5538409	1					
ANR	5538474	Argument	buf		5538409	0					
ANR	5538475	Identifier	buf		5538409	0					
ANR	5538476	ExpressionStatement	"ptr = strchr ( buf , '#' )"	85:1:1676:1699	5538409	9	True				
ANR	5538477	AssignmentExpression	"ptr = strchr ( buf , '#' )"		5538409	0		=			
ANR	5538478	Identifier	ptr		5538409	0					
ANR	5538479	CallExpression	"strchr ( buf , '#' )"		5538409	1					
ANR	5538480	Callee	strchr		5538409	0					
ANR	5538481	Identifier	strchr		5538409	0					
ANR	5538482	ArgumentList	buf		5538409	1					
ANR	5538483	Argument	buf		5538409	0					
ANR	5538484	Identifier	buf		5538409	0					
ANR	5538485	Argument	'#'		5538409	1					
ANR	5538486	PrimaryExpression	'#'		5538409	0					
ANR	5538487	IfStatement	if ( ptr )		5538409	10					
ANR	5538488	Condition	ptr	86:5:1706:1708	5538409	0	True				
ANR	5538489	Identifier	ptr		5538409	0					
ANR	5538490	CompoundStatement		17:10:246:246	5538409	1					
ANR	5538491	ExpressionStatement	* ptr = 0	87:2:1715:1723	5538409	0	True				
ANR	5538492	AssignmentExpression	* ptr = 0		5538409	0		=			
ANR	5538493	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538494	UnaryOperator	*		5538409	0					
ANR	5538495	Identifier	ptr		5538409	1					
ANR	5538496	PrimaryExpression	0		5538409	1					
ANR	5538497	ExpressionStatement	r_str_trim ( buf )	88:2:1727:1743	5538409	1	True				
ANR	5538498	CallExpression	r_str_trim ( buf )		5538409	0					
ANR	5538499	Callee	r_str_trim		5538409	0					
ANR	5538500	Identifier	r_str_trim		5538409	0					
ANR	5538501	ArgumentList	buf		5538409	1					
ANR	5538502	Argument	buf		5538409	0					
ANR	5538503	Identifier	buf		5538409	0					
ANR	5538504	IfStatement	if ( * buf == '.' || buf [ strlen ( buf ) - 1 ] == ':' )		5538409	11					
ANR	5538505	Condition	* buf == '.' || buf [ strlen ( buf ) - 1 ] == ':'	90:5:1753:1792	5538409	0	True				
ANR	5538506	OrExpression	* buf == '.' || buf [ strlen ( buf ) - 1 ] == ':'		5538409	0		||			
ANR	5538507	EqualityExpression	* buf == '.'		5538409	0		==			
ANR	5538508	UnaryOperationExpression	* buf		5538409	0					
ANR	5538509	UnaryOperator	*		5538409	0					
ANR	5538510	Identifier	buf		5538409	1					
ANR	5538511	PrimaryExpression	'.'		5538409	1					
ANR	5538512	EqualityExpression	buf [ strlen ( buf ) - 1 ] == ':'		5538409	1		==			
ANR	5538513	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		5538409	0					
ANR	5538514	Identifier	buf		5538409	0					
ANR	5538515	AdditiveExpression	strlen ( buf ) - 1		5538409	1		-			
ANR	5538516	CallExpression	strlen ( buf )		5538409	0					
ANR	5538517	Callee	strlen		5538409	0					
ANR	5538518	Identifier	strlen		5538409	0					
ANR	5538519	ArgumentList	buf		5538409	1					
ANR	5538520	Argument	buf		5538409	0					
ANR	5538521	Identifier	buf		5538409	0					
ANR	5538522	PrimaryExpression	1		5538409	1					
ANR	5538523	PrimaryExpression	':'		5538409	1					
ANR	5538524	CompoundStatement		21:47:330:330	5538409	1					
ANR	5538525	ExpressionStatement	free ( buf )	91:2:1799:1809	5538409	0	True				
ANR	5538526	CallExpression	free ( buf )		5538409	0					
ANR	5538527	Callee	free		5538409	0					
ANR	5538528	Identifier	free		5538409	0					
ANR	5538529	ArgumentList	buf		5538409	1					
ANR	5538530	Argument	buf		5538409	0					
ANR	5538531	Identifier	buf		5538409	0					
ANR	5538532	ExpressionStatement	"strcpy ( str , data )"	92:2:1813:1831	5538409	1	True				
ANR	5538533	CallExpression	"strcpy ( str , data )"		5538409	0					
ANR	5538534	Callee	strcpy		5538409	0					
ANR	5538535	Identifier	strcpy		5538409	0					
ANR	5538536	ArgumentList	str		5538409	1					
ANR	5538537	Argument	str		5538409	0					
ANR	5538538	Identifier	str		5538409	0					
ANR	5538539	Argument	data		5538409	1					
ANR	5538540	Identifier	data		5538409	0					
ANR	5538541	ReturnStatement	return true ;	93:2:1835:1846	5538409	2	True				
ANR	5538542	Identifier	true		5538409	0					
ANR	5538543	ExpressionStatement	"r_str_replace_char ( buf , '$' , 0 )"	95:1:1852:1884	5538409	12	True				
ANR	5538544	CallExpression	"r_str_replace_char ( buf , '$' , 0 )"		5538409	0					
ANR	5538545	Callee	r_str_replace_char		5538409	0					
ANR	5538546	Identifier	r_str_replace_char		5538409	0					
ANR	5538547	ArgumentList	buf		5538409	1					
ANR	5538548	Argument	buf		5538409	0					
ANR	5538549	Identifier	buf		5538409	0					
ANR	5538550	Argument	'$'		5538409	1					
ANR	5538551	PrimaryExpression	'$'		5538409	0					
ANR	5538552	Argument	0		5538409	2					
ANR	5538553	PrimaryExpression	0		5538409	0					
ANR	5538554	ExpressionStatement	"r_str_replace_char ( buf , '%' , 0 )"	96:1:1887:1919	5538409	13	True				
ANR	5538555	CallExpression	"r_str_replace_char ( buf , '%' , 0 )"		5538409	0					
ANR	5538556	Callee	r_str_replace_char		5538409	0					
ANR	5538557	Identifier	r_str_replace_char		5538409	0					
ANR	5538558	ArgumentList	buf		5538409	1					
ANR	5538559	Argument	buf		5538409	0					
ANR	5538560	Identifier	buf		5538409	0					
ANR	5538561	Argument	'%'		5538409	1					
ANR	5538562	PrimaryExpression	'%'		5538409	0					
ANR	5538563	Argument	0		5538409	2					
ANR	5538564	PrimaryExpression	0		5538409	0					
ANR	5538565	ExpressionStatement	"r_str_replace_char ( buf , '\\t' , ' ' )"	97:1:1922:1957	5538409	14	True				
ANR	5538566	CallExpression	"r_str_replace_char ( buf , '\\t' , ' ' )"		5538409	0					
ANR	5538567	Callee	r_str_replace_char		5538409	0					
ANR	5538568	Identifier	r_str_replace_char		5538409	0					
ANR	5538569	ArgumentList	buf		5538409	1					
ANR	5538570	Argument	buf		5538409	0					
ANR	5538571	Identifier	buf		5538409	0					
ANR	5538572	Argument	'\\t'		5538409	1					
ANR	5538573	PrimaryExpression	'\\t'		5538409	0					
ANR	5538574	Argument	' '		5538409	2					
ANR	5538575	PrimaryExpression	' '		5538409	0					
ANR	5538576	ExpressionStatement	"r_str_replace_char ( buf , '(' , '[' )"	98:1:1960:1994	5538409	15	True				
ANR	5538577	CallExpression	"r_str_replace_char ( buf , '(' , '[' )"		5538409	0					
ANR	5538578	Callee	r_str_replace_char		5538409	0					
ANR	5538579	Identifier	r_str_replace_char		5538409	0					
ANR	5538580	ArgumentList	buf		5538409	1					
ANR	5538581	Argument	buf		5538409	0					
ANR	5538582	Identifier	buf		5538409	0					
ANR	5538583	Argument	'('		5538409	1					
ANR	5538584	PrimaryExpression	'('		5538409	0					
ANR	5538585	Argument	'['		5538409	2					
ANR	5538586	PrimaryExpression	'['		5538409	0					
ANR	5538587	ExpressionStatement	"r_str_replace_char ( buf , ')' , ']' )"	99:1:1997:2031	5538409	16	True				
ANR	5538588	CallExpression	"r_str_replace_char ( buf , ')' , ']' )"		5538409	0					
ANR	5538589	Callee	r_str_replace_char		5538409	0					
ANR	5538590	Identifier	r_str_replace_char		5538409	0					
ANR	5538591	ArgumentList	buf		5538409	1					
ANR	5538592	Argument	buf		5538409	0					
ANR	5538593	Identifier	buf		5538409	0					
ANR	5538594	Argument	')'		5538409	1					
ANR	5538595	PrimaryExpression	')'		5538409	0					
ANR	5538596	Argument	']'		5538409	2					
ANR	5538597	PrimaryExpression	']'		5538409	0					
ANR	5538598	ExpressionStatement	"ptr = strchr ( buf , '[' )"	100:1:2034:2057	5538409	17	True				
ANR	5538599	AssignmentExpression	"ptr = strchr ( buf , '[' )"		5538409	0		=			
ANR	5538600	Identifier	ptr		5538409	0					
ANR	5538601	CallExpression	"strchr ( buf , '[' )"		5538409	1					
ANR	5538602	Callee	strchr		5538409	0					
ANR	5538603	Identifier	strchr		5538409	0					
ANR	5538604	ArgumentList	buf		5538409	1					
ANR	5538605	Argument	buf		5538409	0					
ANR	5538606	Identifier	buf		5538409	0					
ANR	5538607	Argument	'['		5538409	1					
ANR	5538608	PrimaryExpression	'['		5538409	0					
ANR	5538609	IfStatement	if ( ptr )		5538409	18					
ANR	5538610	Condition	ptr	101:5:2064:2066	5538409	0	True				
ANR	5538611	Identifier	ptr		5538409	0					
ANR	5538612	CompoundStatement		32:10:604:604	5538409	1					
ANR	5538613	ExpressionStatement	* ptr = 0	102:2:2073:2081	5538409	0	True				
ANR	5538614	AssignmentExpression	* ptr = 0		5538409	0		=			
ANR	5538615	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538616	UnaryOperator	*		5538409	0					
ANR	5538617	Identifier	ptr		5538409	1					
ANR	5538618	PrimaryExpression	0		5538409	1					
ANR	5538619	ExpressionStatement	"num = ( char * ) r_str_lchr ( buf , ' ' )"	103:2:2085:2119	5538409	1	True				
ANR	5538620	AssignmentExpression	"num = ( char * ) r_str_lchr ( buf , ' ' )"		5538409	0		=			
ANR	5538621	Identifier	num		5538409	0					
ANR	5538622	CastExpression	"( char * ) r_str_lchr ( buf , ' ' )"		5538409	1					
ANR	5538623	CastTarget	char *		5538409	0					
ANR	5538624	CallExpression	"r_str_lchr ( buf , ' ' )"		5538409	1					
ANR	5538625	Callee	r_str_lchr		5538409	0					
ANR	5538626	Identifier	r_str_lchr		5538409	0					
ANR	5538627	ArgumentList	buf		5538409	1					
ANR	5538628	Argument	buf		5538409	0					
ANR	5538629	Identifier	buf		5538409	0					
ANR	5538630	Argument	' '		5538409	1					
ANR	5538631	PrimaryExpression	' '		5538409	0					
ANR	5538632	IfStatement	if ( ! num )		5538409	2					
ANR	5538633	Condition	! num	104:6:2127:2130	5538409	0	True				
ANR	5538634	UnaryOperationExpression	! num		5538409	0					
ANR	5538635	UnaryOperator	!		5538409	0					
ANR	5538636	Identifier	num		5538409	1					
ANR	5538637	CompoundStatement		35:12:668:668	5538409	1					
ANR	5538638	ExpressionStatement	"num = ( char * ) r_str_lchr ( buf , ',' )"	105:3:2138:2173	5538409	0	True				
ANR	5538639	AssignmentExpression	"num = ( char * ) r_str_lchr ( buf , ',' )"		5538409	0		=			
ANR	5538640	Identifier	num		5538409	0					
ANR	5538641	CastExpression	"( char * ) r_str_lchr ( buf , ',' )"		5538409	1					
ANR	5538642	CastTarget	char *		5538409	0					
ANR	5538643	CallExpression	"r_str_lchr ( buf , ',' )"		5538409	1					
ANR	5538644	Callee	r_str_lchr		5538409	0					
ANR	5538645	Identifier	r_str_lchr		5538409	0					
ANR	5538646	ArgumentList	buf		5538409	1					
ANR	5538647	Argument	buf		5538409	0					
ANR	5538648	Identifier	buf		5538409	0					
ANR	5538649	Argument	"','"		5538409	1					
ANR	5538650	PrimaryExpression	"','"		5538409	0					
ANR	5538651	IfStatement	if ( num )		5538409	3					
ANR	5538652	Condition	num	107:6:2185:2187	5538409	0	True				
ANR	5538653	Identifier	num		5538409	0					
ANR	5538654	CompoundStatement		38:11:725:725	5538409	1					
ANR	5538655	ExpressionStatement	n = atoi ( num + 1 )	108:3:2195:2211	5538409	0	True				
ANR	5538656	AssignmentExpression	n = atoi ( num + 1 )		5538409	0		=			
ANR	5538657	Identifier	n		5538409	0					
ANR	5538658	CallExpression	atoi ( num + 1 )		5538409	1					
ANR	5538659	Callee	atoi		5538409	0					
ANR	5538660	Identifier	atoi		5538409	0					
ANR	5538661	ArgumentList	num + 1		5538409	1					
ANR	5538662	Argument	num + 1		5538409	0					
ANR	5538663	AdditiveExpression	num + 1		5538409	0		+			
ANR	5538664	Identifier	num		5538409	0					
ANR	5538665	PrimaryExpression	1		5538409	1					
ANR	5538666	ExpressionStatement	* ptr = '['	109:3:2216:2226	5538409	1	True				
ANR	5538667	AssignmentExpression	* ptr = '['		5538409	0		=			
ANR	5538668	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538669	UnaryOperator	*		5538409	0					
ANR	5538670	Identifier	ptr		5538409	1					
ANR	5538671	PrimaryExpression	'['		5538409	1					
ANR	5538672	ExpressionStatement	"memmove ( num + 1 , ptr , strlen ( ptr ) + 1 )"	110:3:2231:2267	5538409	2	True				
ANR	5538673	CallExpression	"memmove ( num + 1 , ptr , strlen ( ptr ) + 1 )"		5538409	0					
ANR	5538674	Callee	memmove		5538409	0					
ANR	5538675	Identifier	memmove		5538409	0					
ANR	5538676	ArgumentList	num + 1		5538409	1					
ANR	5538677	Argument	num + 1		5538409	0					
ANR	5538678	AdditiveExpression	num + 1		5538409	0		+			
ANR	5538679	Identifier	num		5538409	0					
ANR	5538680	PrimaryExpression	1		5538409	1					
ANR	5538681	Argument	ptr		5538409	1					
ANR	5538682	Identifier	ptr		5538409	0					
ANR	5538683	Argument	strlen ( ptr ) + 1		5538409	2					
ANR	5538684	AdditiveExpression	strlen ( ptr ) + 1		5538409	0		+			
ANR	5538685	CallExpression	strlen ( ptr )		5538409	0					
ANR	5538686	Callee	strlen		5538409	0					
ANR	5538687	Identifier	strlen		5538409	0					
ANR	5538688	ArgumentList	ptr		5538409	1					
ANR	5538689	Argument	ptr		5538409	0					
ANR	5538690	Identifier	ptr		5538409	0					
ANR	5538691	PrimaryExpression	1		5538409	1					
ANR	5538692	ExpressionStatement	"ptr = ( char * ) r_str_lchr ( buf , ']' )"	111:3:2272:2306	5538409	3	True				
ANR	5538693	AssignmentExpression	"ptr = ( char * ) r_str_lchr ( buf , ']' )"		5538409	0		=			
ANR	5538694	Identifier	ptr		5538409	0					
ANR	5538695	CastExpression	"( char * ) r_str_lchr ( buf , ']' )"		5538409	1					
ANR	5538696	CastTarget	char *		5538409	0					
ANR	5538697	CallExpression	"r_str_lchr ( buf , ']' )"		5538409	1					
ANR	5538698	Callee	r_str_lchr		5538409	0					
ANR	5538699	Identifier	r_str_lchr		5538409	0					
ANR	5538700	ArgumentList	buf		5538409	1					
ANR	5538701	Argument	buf		5538409	0					
ANR	5538702	Identifier	buf		5538409	0					
ANR	5538703	Argument	']'		5538409	1					
ANR	5538704	PrimaryExpression	']'		5538409	0					
ANR	5538705	IfStatement	if ( n && ptr )		5538409	4					
ANR	5538706	Condition	n && ptr	112:7:2315:2322	5538409	0	True				
ANR	5538707	AndExpression	n && ptr		5538409	0		&&			
ANR	5538708	Identifier	n		5538409	0					
ANR	5538709	Identifier	ptr		5538409	1					
ANR	5538710	CompoundStatement		44:4:866:893	5538409	1					
ANR	5538711	IdentifierDeclStatement	char * rest = strdup ( ptr + 1 ) ;	113:4:2331:2358	5538409	0	True				
ANR	5538712	IdentifierDecl	* rest = strdup ( ptr + 1 )		5538409	0					
ANR	5538713	IdentifierDeclType	char *		5538409	0					
ANR	5538714	Identifier	rest		5538409	1					
ANR	5538715	AssignmentExpression	* rest = strdup ( ptr + 1 )		5538409	2		=			
ANR	5538716	Identifier	rest		5538409	0					
ANR	5538717	CallExpression	strdup ( ptr + 1 )		5538409	1					
ANR	5538718	Callee	strdup		5538409	0					
ANR	5538719	Identifier	strdup		5538409	0					
ANR	5538720	ArgumentList	ptr + 1		5538409	1					
ANR	5538721	Argument	ptr + 1		5538409	0					
ANR	5538722	AdditiveExpression	ptr + 1		5538409	0		+			
ANR	5538723	Identifier	ptr		5538409	0					
ANR	5538724	PrimaryExpression	1		5538409	1					
ANR	5538725	IfStatement	if ( n > 0 )		5538409	1					
ANR	5538726	Condition	n > 0	114:8:2368:2372	5538409	0	True				
ANR	5538727	RelationalExpression	n > 0		5538409	0		>			
ANR	5538728	Identifier	n		5538409	0					
ANR	5538729	PrimaryExpression	0		5538409	1					
ANR	5538730	CompoundStatement		45:15:910:910	5538409	1					
ANR	5538731	ExpressionStatement	"sprintf ( ptr , ""+%d]%s"" , n , rest )"	115:5:2382:2414	5538409	0	True				
ANR	5538732	CallExpression	"sprintf ( ptr , ""+%d]%s"" , n , rest )"		5538409	0					
ANR	5538733	Callee	sprintf		5538409	0					
ANR	5538734	Identifier	sprintf		5538409	0					
ANR	5538735	ArgumentList	ptr		5538409	1					
ANR	5538736	Argument	ptr		5538409	0					
ANR	5538737	Identifier	ptr		5538409	0					
ANR	5538738	Argument	"""+%d]%s"""		5538409	1					
ANR	5538739	PrimaryExpression	"""+%d]%s"""		5538409	0					
ANR	5538740	Argument	n		5538409	2					
ANR	5538741	Identifier	n		5538409	0					
ANR	5538742	Argument	rest		5538409	3					
ANR	5538743	Identifier	rest		5538409	0					
ANR	5538744	ElseStatement	else		5538409	0					
ANR	5538745	CompoundStatement		47:11:962:962	5538409	0					
ANR	5538746	ExpressionStatement	"sprintf ( ptr , ""%d]%s"" , n , rest )"	117:5:2434:2465	5538409	0	True				
ANR	5538747	CallExpression	"sprintf ( ptr , ""%d]%s"" , n , rest )"		5538409	0					
ANR	5538748	Callee	sprintf		5538409	0					
ANR	5538749	Identifier	sprintf		5538409	0					
ANR	5538750	ArgumentList	ptr		5538409	1					
ANR	5538751	Argument	ptr		5538409	0					
ANR	5538752	Identifier	ptr		5538409	0					
ANR	5538753	Argument	"""%d]%s"""		5538409	1					
ANR	5538754	PrimaryExpression	"""%d]%s"""		5538409	0					
ANR	5538755	Argument	n		5538409	2					
ANR	5538756	Identifier	n		5538409	0					
ANR	5538757	Argument	rest		5538409	3					
ANR	5538758	Identifier	rest		5538409	0					
ANR	5538759	ExpressionStatement	free ( rest )	119:4:2477:2488	5538409	2	True				
ANR	5538760	CallExpression	free ( rest )		5538409	0					
ANR	5538761	Callee	free		5538409	0					
ANR	5538762	Identifier	free		5538409	0					
ANR	5538763	ArgumentList	rest		5538409	1					
ANR	5538764	Argument	rest		5538409	0					
ANR	5538765	Identifier	rest		5538409	0					
ANR	5538766	ElseStatement	else		5538409	0					
ANR	5538767	CompoundStatement		52:9:1039:1039	5538409	0					
ANR	5538768	ExpressionStatement	* ptr = '['	122:3:2509:2519	5538409	0	True				
ANR	5538769	AssignmentExpression	* ptr = '['		5538409	0		=			
ANR	5538770	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538771	UnaryOperator	*		5538409	0					
ANR	5538772	Identifier	ptr		5538409	1					
ANR	5538773	PrimaryExpression	'['		5538409	1					
ANR	5538774	IfStatement	if ( * buf )		5538409	19					
ANR	5538775	Condition	* buf	126:5:2534:2537	5538409	0	True				
ANR	5538776	UnaryOperationExpression	* buf		5538409	0					
ANR	5538777	UnaryOperator	*		5538409	0					
ANR	5538778	Identifier	buf		5538409	1					
ANR	5538779	CompoundStatement		57:11:1075:1075	5538409	1					
ANR	5538780	ExpressionStatement	* w0 = * w1 = * w2 = * w3 = 0	127:2:2544:2569	5538409	0	True				
ANR	5538781	AssignmentExpression	* w0 = * w1 = * w2 = * w3 = 0		5538409	0		=			
ANR	5538782	UnaryOperationExpression	* w0		5538409	0					
ANR	5538783	UnaryOperator	*		5538409	0					
ANR	5538784	Identifier	w0		5538409	1					
ANR	5538785	AssignmentExpression	* w1 = * w2 = * w3 = 0		5538409	1		=			
ANR	5538786	UnaryOperationExpression	* w1		5538409	0					
ANR	5538787	UnaryOperator	*		5538409	0					
ANR	5538788	Identifier	w1		5538409	1					
ANR	5538789	AssignmentExpression	* w2 = * w3 = 0		5538409	1		=			
ANR	5538790	UnaryOperationExpression	* w2		5538409	0					
ANR	5538791	UnaryOperator	*		5538409	0					
ANR	5538792	Identifier	w2		5538409	1					
ANR	5538793	AssignmentExpression	* w3 = 0		5538409	1		=			
ANR	5538794	UnaryOperationExpression	* w3		5538409	0					
ANR	5538795	UnaryOperator	*		5538409	0					
ANR	5538796	Identifier	w3		5538409	1					
ANR	5538797	PrimaryExpression	0		5538409	1					
ANR	5538798	ExpressionStatement	"ptr = strchr ( buf , ' ' )"	128:2:2573:2596	5538409	1	True				
ANR	5538799	AssignmentExpression	"ptr = strchr ( buf , ' ' )"		5538409	0		=			
ANR	5538800	Identifier	ptr		5538409	0					
ANR	5538801	CallExpression	"strchr ( buf , ' ' )"		5538409	1					
ANR	5538802	Callee	strchr		5538409	0					
ANR	5538803	Identifier	strchr		5538409	0					
ANR	5538804	ArgumentList	buf		5538409	1					
ANR	5538805	Argument	buf		5538409	0					
ANR	5538806	Identifier	buf		5538409	0					
ANR	5538807	Argument	' '		5538409	1					
ANR	5538808	PrimaryExpression	' '		5538409	0					
ANR	5538809	IfStatement	if ( ! ptr )		5538409	2					
ANR	5538810	Condition	! ptr	129:6:2604:2607	5538409	0	True				
ANR	5538811	UnaryOperationExpression	! ptr		5538409	0					
ANR	5538812	UnaryOperator	!		5538409	0					
ANR	5538813	Identifier	ptr		5538409	1					
ANR	5538814	CompoundStatement		60:12:1145:1145	5538409	1					
ANR	5538815	ExpressionStatement	"ptr = strchr ( buf , '\\t' )"	130:3:2615:2639	5538409	0	True				
ANR	5538816	AssignmentExpression	"ptr = strchr ( buf , '\\t' )"		5538409	0		=			
ANR	5538817	Identifier	ptr		5538409	0					
ANR	5538818	CallExpression	"strchr ( buf , '\\t' )"		5538409	1					
ANR	5538819	Callee	strchr		5538409	0					
ANR	5538820	Identifier	strchr		5538409	0					
ANR	5538821	ArgumentList	buf		5538409	1					
ANR	5538822	Argument	buf		5538409	0					
ANR	5538823	Identifier	buf		5538409	0					
ANR	5538824	Argument	'\\t'		5538409	1					
ANR	5538825	PrimaryExpression	'\\t'		5538409	0					
ANR	5538826	IfStatement	if ( ptr )		5538409	3					
ANR	5538827	Condition	ptr	132:6:2651:2653	5538409	0	True				
ANR	5538828	Identifier	ptr		5538409	0					
ANR	5538829	CompoundStatement		63:11:1191:1191	5538409	1					
ANR	5538830	ExpressionStatement	* ptr = '\\0'	133:3:2661:2672	5538409	0	True				
ANR	5538831	AssignmentExpression	* ptr = '\\0'		5538409	0		=			
ANR	5538832	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538833	UnaryOperator	*		5538409	0					
ANR	5538834	Identifier	ptr		5538409	1					
ANR	5538835	PrimaryExpression	'\\0'		5538409	1					
ANR	5538836	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5538409	1					
ANR	5538837	ForInit	++ ptr ;	134:8:2682:2687	5538409	0	True				
ANR	5538838	UnaryExpression	++ ptr		5538409	0					
ANR	5538839	IncDec	++		5538409	0					
ANR	5538840	Identifier	ptr		5538409	1					
ANR	5538841	Condition	* ptr == ' '	134:15:2689:2699	5538409	1	True				
ANR	5538842	EqualityExpression	* ptr == ' '		5538409	0		==			
ANR	5538843	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538844	UnaryOperator	*		5538409	0					
ANR	5538845	Identifier	ptr		5538409	1					
ANR	5538846	PrimaryExpression	' '		5538409	1					
ANR	5538847	PostIncDecOperationExpression	ptr ++	134:28:2702:2706	5538409	2	True				
ANR	5538848	Identifier	ptr		5538409	0					
ANR	5538849	IncDec	++		5538409	1					
ANR	5538850	CompoundStatement		65:35:1244:1244	5538409	3					
ANR	5538851	ExpressionStatement		135:4:2715:2715	5538409	0	True				
ANR	5538852	ExpressionStatement	"strncpy ( w0 , buf , sizeof ( w0 ) - 1 )"	137:3:2725:2758	5538409	2	True				
ANR	5538853	CallExpression	"strncpy ( w0 , buf , sizeof ( w0 ) - 1 )"		5538409	0					
ANR	5538854	Callee	strncpy		5538409	0					
ANR	5538855	Identifier	strncpy		5538409	0					
ANR	5538856	ArgumentList	w0		5538409	1					
ANR	5538857	Argument	w0		5538409	0					
ANR	5538858	Identifier	w0		5538409	0					
ANR	5538859	Argument	buf		5538409	1					
ANR	5538860	Identifier	buf		5538409	0					
ANR	5538861	Argument	sizeof ( w0 ) - 1		5538409	2					
ANR	5538862	AdditiveExpression	sizeof ( w0 ) - 1		5538409	0		-			
ANR	5538863	SizeofExpression	sizeof ( w0 )		5538409	0					
ANR	5538864	Sizeof	sizeof		5538409	0					
ANR	5538865	SizeofOperand	w0		5538409	1					
ANR	5538866	PrimaryExpression	1		5538409	1					
ANR	5538867	ExpressionStatement	"strncpy ( w1 , ptr , sizeof ( w1 ) - 1 )"	138:3:2763:2796	5538409	3	True				
ANR	5538868	CallExpression	"strncpy ( w1 , ptr , sizeof ( w1 ) - 1 )"		5538409	0					
ANR	5538869	Callee	strncpy		5538409	0					
ANR	5538870	Identifier	strncpy		5538409	0					
ANR	5538871	ArgumentList	w1		5538409	1					
ANR	5538872	Argument	w1		5538409	0					
ANR	5538873	Identifier	w1		5538409	0					
ANR	5538874	Argument	ptr		5538409	1					
ANR	5538875	Identifier	ptr		5538409	0					
ANR	5538876	Argument	sizeof ( w1 ) - 1		5538409	2					
ANR	5538877	AdditiveExpression	sizeof ( w1 ) - 1		5538409	0		-			
ANR	5538878	SizeofExpression	sizeof ( w1 )		5538409	0					
ANR	5538879	Sizeof	sizeof		5538409	0					
ANR	5538880	SizeofOperand	w1		5538409	1					
ANR	5538881	PrimaryExpression	1		5538409	1					
ANR	5538882	ExpressionStatement	optr = ptr	140:3:2802:2812	5538409	4	True				
ANR	5538883	AssignmentExpression	optr = ptr		5538409	0		=			
ANR	5538884	Identifier	optr		5538409	0					
ANR	5538885	Identifier	ptr		5538409	1					
ANR	5538886	ExpressionStatement	"ptr = strchr ( ptr , ',' )"	141:3:2817:2840	5538409	5	True				
ANR	5538887	AssignmentExpression	"ptr = strchr ( ptr , ',' )"		5538409	0		=			
ANR	5538888	Identifier	ptr		5538409	0					
ANR	5538889	CallExpression	"strchr ( ptr , ',' )"		5538409	1					
ANR	5538890	Callee	strchr		5538409	0					
ANR	5538891	Identifier	strchr		5538409	0					
ANR	5538892	ArgumentList	ptr		5538409	1					
ANR	5538893	Argument	ptr		5538409	0					
ANR	5538894	Identifier	ptr		5538409	0					
ANR	5538895	Argument	"','"		5538409	1					
ANR	5538896	PrimaryExpression	"','"		5538409	0					
ANR	5538897	IfStatement	if ( ptr )		5538409	6					
ANR	5538898	Condition	ptr	142:7:2849:2851	5538409	0	True				
ANR	5538899	Identifier	ptr		5538409	0					
ANR	5538900	CompoundStatement		73:12:1389:1389	5538409	1					
ANR	5538901	ExpressionStatement	* ptr = '\\0'	143:4:2860:2871	5538409	0	True				
ANR	5538902	AssignmentExpression	* ptr = '\\0'		5538409	0		=			
ANR	5538903	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538904	UnaryOperator	*		5538409	0					
ANR	5538905	Identifier	ptr		5538409	1					
ANR	5538906	PrimaryExpression	'\\0'		5538409	1					
ANR	5538907	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5538409	1					
ANR	5538908	ForInit	++ ptr ;	144:9:2882:2887	5538409	0	True				
ANR	5538909	UnaryExpression	++ ptr		5538409	0					
ANR	5538910	IncDec	++		5538409	0					
ANR	5538911	Identifier	ptr		5538409	1					
ANR	5538912	Condition	* ptr == ' '	144:16:2889:2899	5538409	1	True				
ANR	5538913	EqualityExpression	* ptr == ' '		5538409	0		==			
ANR	5538914	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538915	UnaryOperator	*		5538409	0					
ANR	5538916	Identifier	ptr		5538409	1					
ANR	5538917	PrimaryExpression	' '		5538409	1					
ANR	5538918	PostIncDecOperationExpression	ptr ++	144:29:2902:2906	5538409	2	True				
ANR	5538919	Identifier	ptr		5538409	0					
ANR	5538920	IncDec	++		5538409	1					
ANR	5538921	CompoundStatement		75:36:1444:1444	5538409	3					
ANR	5538922	ExpressionStatement		145:5:2916:2916	5538409	0	True				
ANR	5538923	ExpressionStatement	"strncpy ( w1 , optr , sizeof ( w1 ) - 1 )"	147:4:2928:2960	5538409	2	True				
ANR	5538924	CallExpression	"strncpy ( w1 , optr , sizeof ( w1 ) - 1 )"		5538409	0					
ANR	5538925	Callee	strncpy		5538409	0					
ANR	5538926	Identifier	strncpy		5538409	0					
ANR	5538927	ArgumentList	w1		5538409	1					
ANR	5538928	Argument	w1		5538409	0					
ANR	5538929	Identifier	w1		5538409	0					
ANR	5538930	Argument	optr		5538409	1					
ANR	5538931	Identifier	optr		5538409	0					
ANR	5538932	Argument	sizeof ( w1 ) - 1		5538409	2					
ANR	5538933	AdditiveExpression	sizeof ( w1 ) - 1		5538409	0		-			
ANR	5538934	SizeofExpression	sizeof ( w1 )		5538409	0					
ANR	5538935	Sizeof	sizeof		5538409	0					
ANR	5538936	SizeofOperand	w1		5538409	1					
ANR	5538937	PrimaryExpression	1		5538409	1					
ANR	5538938	ExpressionStatement	"strncpy ( w2 , ptr , sizeof ( w2 ) - 1 )"	148:4:2966:2997	5538409	3	True				
ANR	5538939	CallExpression	"strncpy ( w2 , ptr , sizeof ( w2 ) - 1 )"		5538409	0					
ANR	5538940	Callee	strncpy		5538409	0					
ANR	5538941	Identifier	strncpy		5538409	0					
ANR	5538942	ArgumentList	w2		5538409	1					
ANR	5538943	Argument	w2		5538409	0					
ANR	5538944	Identifier	w2		5538409	0					
ANR	5538945	Argument	ptr		5538409	1					
ANR	5538946	Identifier	ptr		5538409	0					
ANR	5538947	Argument	sizeof ( w2 ) - 1		5538409	2					
ANR	5538948	AdditiveExpression	sizeof ( w2 ) - 1		5538409	0		-			
ANR	5538949	SizeofExpression	sizeof ( w2 )		5538409	0					
ANR	5538950	Sizeof	sizeof		5538409	0					
ANR	5538951	SizeofOperand	w2		5538409	1					
ANR	5538952	PrimaryExpression	1		5538409	1					
ANR	5538953	ExpressionStatement	"ptr = strchr ( ptr , ',' )"	149:4:3003:3026	5538409	4	True				
ANR	5538954	AssignmentExpression	"ptr = strchr ( ptr , ',' )"		5538409	0		=			
ANR	5538955	Identifier	ptr		5538409	0					
ANR	5538956	CallExpression	"strchr ( ptr , ',' )"		5538409	1					
ANR	5538957	Callee	strchr		5538409	0					
ANR	5538958	Identifier	strchr		5538409	0					
ANR	5538959	ArgumentList	ptr		5538409	1					
ANR	5538960	Argument	ptr		5538409	0					
ANR	5538961	Identifier	ptr		5538409	0					
ANR	5538962	Argument	"','"		5538409	1					
ANR	5538963	PrimaryExpression	"','"		5538409	0					
ANR	5538964	IfStatement	if ( ptr )		5538409	5					
ANR	5538965	Condition	ptr	150:8:3036:3038	5538409	0	True				
ANR	5538966	Identifier	ptr		5538409	0					
ANR	5538967	CompoundStatement		81:13:1576:1576	5538409	1					
ANR	5538968	ExpressionStatement	* ptr = '\\0'	151:5:3048:3059	5538409	0	True				
ANR	5538969	AssignmentExpression	* ptr = '\\0'		5538409	0		=			
ANR	5538970	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538971	UnaryOperator	*		5538409	0					
ANR	5538972	Identifier	ptr		5538409	1					
ANR	5538973	PrimaryExpression	'\\0'		5538409	1					
ANR	5538974	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5538409	1					
ANR	5538975	ForInit	++ ptr ;	152:10:3071:3076	5538409	0	True				
ANR	5538976	UnaryExpression	++ ptr		5538409	0					
ANR	5538977	IncDec	++		5538409	0					
ANR	5538978	Identifier	ptr		5538409	1					
ANR	5538979	Condition	* ptr == ' '	152:17:3078:3088	5538409	1	True				
ANR	5538980	EqualityExpression	* ptr == ' '		5538409	0		==			
ANR	5538981	UnaryOperationExpression	* ptr		5538409	0					
ANR	5538982	UnaryOperator	*		5538409	0					
ANR	5538983	Identifier	ptr		5538409	1					
ANR	5538984	PrimaryExpression	' '		5538409	1					
ANR	5538985	PostIncDecOperationExpression	ptr ++	152:30:3091:3095	5538409	2	True				
ANR	5538986	Identifier	ptr		5538409	0					
ANR	5538987	IncDec	++		5538409	1					
ANR	5538988	CompoundStatement		83:37:1633:1633	5538409	3					
ANR	5538989	ExpressionStatement		153:6:3106:3106	5538409	0	True				
ANR	5538990	ExpressionStatement	"strncpy ( w2 , optr , sizeof ( w2 ) - 1 )"	155:5:3120:3152	5538409	2	True				
ANR	5538991	CallExpression	"strncpy ( w2 , optr , sizeof ( w2 ) - 1 )"		5538409	0					
ANR	5538992	Callee	strncpy		5538409	0					
ANR	5538993	Identifier	strncpy		5538409	0					
ANR	5538994	ArgumentList	w2		5538409	1					
ANR	5538995	Argument	w2		5538409	0					
ANR	5538996	Identifier	w2		5538409	0					
ANR	5538997	Argument	optr		5538409	1					
ANR	5538998	Identifier	optr		5538409	0					
ANR	5538999	Argument	sizeof ( w2 ) - 1		5538409	2					
ANR	5539000	AdditiveExpression	sizeof ( w2 ) - 1		5538409	0		-			
ANR	5539001	SizeofExpression	sizeof ( w2 )		5538409	0					
ANR	5539002	Sizeof	sizeof		5538409	0					
ANR	5539003	SizeofOperand	w2		5538409	1					
ANR	5539004	PrimaryExpression	1		5538409	1					
ANR	5539005	ExpressionStatement	"strncpy ( w3 , ptr , sizeof ( w3 ) - 1 )"	156:5:3159:3190	5538409	3	True				
ANR	5539006	CallExpression	"strncpy ( w3 , ptr , sizeof ( w3 ) - 1 )"		5538409	0					
ANR	5539007	Callee	strncpy		5538409	0					
ANR	5539008	Identifier	strncpy		5538409	0					
ANR	5539009	ArgumentList	w3		5538409	1					
ANR	5539010	Argument	w3		5538409	0					
ANR	5539011	Identifier	w3		5538409	0					
ANR	5539012	Argument	ptr		5538409	1					
ANR	5539013	Identifier	ptr		5538409	0					
ANR	5539014	Argument	sizeof ( w3 ) - 1		5538409	2					
ANR	5539015	AdditiveExpression	sizeof ( w3 ) - 1		5538409	0		-			
ANR	5539016	SizeofExpression	sizeof ( w3 )		5538409	0					
ANR	5539017	Sizeof	sizeof		5538409	0					
ANR	5539018	SizeofOperand	w3		5538409	1					
ANR	5539019	PrimaryExpression	1		5538409	1					
ANR	5539020	CompoundStatement		93:3:1791:1801	5538409	4					
ANR	5539021	IdentifierDeclStatement	"const char * wa [ ] = { w0 , w1 , w2 , w3 } ;"	161:3:3214:3251	5538409	0	True				
ANR	5539022	IdentifierDecl	"* wa [ ] = { w0 , w1 , w2 , w3 }"		5538409	0					
ANR	5539023	IdentifierDeclType	const char * [ ]		5538409	0					
ANR	5539024	Identifier	wa		5538409	1					
ANR	5539025	AssignmentExpression	"* wa [ ] = { w0 , w1 , w2 , w3 }"		5538409	2		=			
ANR	5539026	Identifier	wa		5538409	0					
ANR	5539027	InitializerList	w0		5538409	1					
ANR	5539028	Identifier	w0		5538409	0					
ANR	5539029	Identifier	w1		5538409	1					
ANR	5539030	Identifier	w2		5538409	2					
ANR	5539031	Identifier	w3		5538409	3					
ANR	5539032	IdentifierDeclStatement	int nw = 0 ;	162:3:3256:3266	5538409	1	True				
ANR	5539033	IdentifierDecl	nw = 0		5538409	0					
ANR	5539034	IdentifierDeclType	int		5538409	0					
ANR	5539035	Identifier	nw		5538409	1					
ANR	5539036	AssignmentExpression	nw = 0		5538409	2		=			
ANR	5539037	Identifier	nw		5538409	0					
ANR	5539038	PrimaryExpression	0		5538409	1					
ANR	5539039	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5538409	2					
ANR	5539040	ForInit	i = 0 ;	163:8:3276:3279	5538409	0	True				
ANR	5539041	AssignmentExpression	i = 0		5538409	0		=			
ANR	5539042	Identifier	i		5538409	0					
ANR	5539043	PrimaryExpression	0		5538409	1					
ANR	5539044	Condition	i < 4	163:13:3281:3283	5538409	1	True				
ANR	5539045	RelationalExpression	i < 4		5538409	0		<			
ANR	5539046	Identifier	i		5538409	0					
ANR	5539047	PrimaryExpression	4		5538409	1					
ANR	5539048	PostIncDecOperationExpression	i ++	163:18:3286:3288	5538409	2	True				
ANR	5539049	Identifier	i		5538409	0					
ANR	5539050	IncDec	++		5538409	1					
ANR	5539051	CompoundStatement		94:23:1826:1826	5538409	3					
ANR	5539052	IfStatement	if ( wa [ i ] [ 0 ] != '\\0' )		5538409	0					
ANR	5539053	Condition	wa [ i ] [ 0 ] != '\\0'	164:8:3301:3316	5538409	0	True				
ANR	5539054	EqualityExpression	wa [ i ] [ 0 ] != '\\0'		5538409	0		!=			
ANR	5539055	ArrayIndexing	wa [ i ] [ 0 ]		5538409	0					
ANR	5539056	ArrayIndexing	wa [ i ]		5538409	0					
ANR	5539057	Identifier	wa		5538409	0					
ANR	5539058	Identifier	i		5538409	1					
ANR	5539059	PrimaryExpression	0		5538409	1					
ANR	5539060	PrimaryExpression	'\\0'		5538409	1					
ANR	5539061	CompoundStatement		95:26:1854:1854	5538409	1					
ANR	5539062	ExpressionStatement	nw ++	165:5:3326:3330	5538409	0	True				
ANR	5539063	PostIncDecOperationExpression	nw ++		5538409	0					
ANR	5539064	Identifier	nw		5538409	0					
ANR	5539065	IncDec	++		5538409	1					
ANR	5539066	ExpressionStatement	"replace ( nw , wa , str )"	168:3:3346:3367	5538409	3	True				
ANR	5539067	CallExpression	"replace ( nw , wa , str )"		5538409	0					
ANR	5539068	Callee	replace		5538409	0					
ANR	5539069	Identifier	replace		5538409	0					
ANR	5539070	ArgumentList	nw		5538409	1					
ANR	5539071	Argument	nw		5538409	0					
ANR	5539072	Identifier	nw		5538409	0					
ANR	5539073	Argument	wa		5538409	1					
ANR	5539074	Identifier	wa		5538409	0					
ANR	5539075	Argument	str		5538409	2					
ANR	5539076	Identifier	str		5538409	0					
ANR	5539077	ExpressionStatement	free ( buf )	171:1:3377:3387	5538409	20	True				
ANR	5539078	CallExpression	free ( buf )		5538409	0					
ANR	5539079	Callee	free		5538409	0					
ANR	5539080	Identifier	free		5538409	0					
ANR	5539081	ArgumentList	buf		5538409	1					
ANR	5539082	Argument	buf		5538409	0					
ANR	5539083	Identifier	buf		5538409	0					
ANR	5539084	ReturnStatement	return true ;	172:1:3390:3401	5538409	21	True				
ANR	5539085	Identifier	true		5538409	0					
ANR	5539086	ReturnType	static int		5538409	1					
ANR	5539087	Identifier	parse		5538409	2					
ANR	5539088	ParameterList	"RParse * p , const char * data , char * str"		5538409	3					
ANR	5539089	Parameter	RParse * p	70:17:1424:1432	5538409	0	True				
ANR	5539090	ParameterType	RParse *		5538409	0					
ANR	5539091	Identifier	p		5538409	1					
ANR	5539092	Parameter	const char * data	70:28:1435:1450	5538409	1	True				
ANR	5539093	ParameterType	const char *		5538409	0					
ANR	5539094	Identifier	data		5538409	1					
ANR	5539095	Parameter	char * str	70:46:1453:1461	5538409	2	True				
ANR	5539096	ParameterType	char *		5538409	0					
ANR	5539097	Identifier	str		5538409	1					
ANR	5539098	CFGEntryNode	ENTRY		5538409		True				
ANR	5539099	CFGExitNode	EXIT		5538409		True				
ANR	5539100	Symbol	* w3		5538409						
ANR	5539101	Symbol	* w2		5538409						
ANR	5539102	Symbol	* w1		5538409						
ANR	5539103	Symbol	data		5538409						
ANR	5539104	Symbol	num		5538409						
ANR	5539105	Symbol	strchr		5538409						
ANR	5539106	Symbol	nw		5538409						
ANR	5539107	Symbol	wa		5538409						
ANR	5539108	Symbol	strlen		5538409						
ANR	5539109	Symbol	* wa		5538409						
ANR	5539110	Symbol	* ptr		5538409						
ANR	5539111	Symbol	w0		5538409						
ANR	5539112	Symbol	w1		5538409						
ANR	5539113	Symbol	w2		5538409						
ANR	5539114	Symbol	w3		5538409						
ANR	5539115	Symbol	* w0		5538409						
ANR	5539116	Symbol	atoi		5538409						
ANR	5539117	Symbol	rest		5538409						
ANR	5539118	Symbol	* buf		5538409						
ANR	5539119	Symbol	* * i		5538409						
ANR	5539120	Symbol	false		5538409						
ANR	5539121	Symbol	i		5538409						
ANR	5539122	Symbol	optr		5538409						
ANR	5539123	Symbol	n		5538409						
ANR	5539124	Symbol	ptr		5538409						
ANR	5539125	Symbol	p		5538409						
ANR	5539126	Symbol	str		5538409						
ANR	5539127	Symbol	buf		5538409						
ANR	5539128	Symbol	* i		5538409						
ANR	5539129	Symbol	* strlen		5538409						
ANR	5539130	Symbol	* * wa		5538409						
ANR	5539131	Symbol	r_str_lchr		5538409						
ANR	5539132	Symbol	true		5538409						
ANR	5539133	Symbol	strdup		5538409						
ANR	5539134	DeclStmt									
ANR	5539135	Decl							RParsePlugin	RParsePlugin	r_parse_plugin_att2intel
ANR	5539136	DeclStmt									
ANR	5539137	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
