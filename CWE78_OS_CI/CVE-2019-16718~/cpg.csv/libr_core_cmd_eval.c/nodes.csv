command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4227135	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_eval.c								
ANR	4227136	DeclStmt									
ANR	4227137	Decl							const char	const char * [ ]	help_msg_e
ANR	4227138	DeclStmt									
ANR	4227139	Decl							const char	const char * [ ]	help_msg_ec
ANR	4227140	DeclStmt									
ANR	4227141	Decl							const char	const char * [ ]	help_msg_eco
ANR	4227142	DeclStmt									
ANR	4227143	Decl							char	char *	curtheme
ANR	4227144	DeclStmt									
ANR	4227145	Decl							bool	bool	getNext
ANR	4227146	Function	cmd_eval_init	70:0:2747:2857							
ANR	4227147	FunctionDef	cmd_eval_init (RCore * core)		4227146	0					
ANR	4227148	CompoundStatement		70:39:2786:2857	4227146	0					
ANR	4227149	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , e )"	71:1:2789:2820	4227146	0	True				
ANR	4227150	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , e )"		4227146	0					
ANR	4227151	Callee	DEFINE_CMD_DESCRIPTOR		4227146	0					
ANR	4227152	Identifier	DEFINE_CMD_DESCRIPTOR		4227146	0					
ANR	4227153	ArgumentList	core		4227146	1					
ANR	4227154	Argument	core		4227146	0					
ANR	4227155	Identifier	core		4227146	0					
ANR	4227156	Argument	e		4227146	1					
ANR	4227157	Identifier	e		4227146	0					
ANR	4227158	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ec )"	72:1:2823:2855	4227146	1	True				
ANR	4227159	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ec )"		4227146	0					
ANR	4227160	Callee	DEFINE_CMD_DESCRIPTOR		4227146	0					
ANR	4227161	Identifier	DEFINE_CMD_DESCRIPTOR		4227146	0					
ANR	4227162	ArgumentList	core		4227146	1					
ANR	4227163	Argument	core		4227146	0					
ANR	4227164	Identifier	core		4227146	0					
ANR	4227165	Argument	ec		4227146	1					
ANR	4227166	Identifier	ec		4227146	0					
ANR	4227167	ReturnType	static void		4227146	1					
ANR	4227168	Identifier	cmd_eval_init		4227146	2					
ANR	4227169	ParameterList	RCore * core		4227146	3					
ANR	4227170	Parameter	RCore * core	70:26:2773:2783	4227146	0	True				
ANR	4227171	ParameterType	RCore *		4227146	0					
ANR	4227172	Identifier	core		4227146	1					
ANR	4227173	CFGEntryNode	ENTRY		4227146		True				
ANR	4227174	CFGExitNode	EXIT		4227146		True				
ANR	4227175	Symbol	core		4227146						
ANR	4227176	Symbol	e		4227146						
ANR	4227177	Symbol	ec		4227146						
ANR	4227178	Function	load_theme	75:0:2860:3116							
ANR	4227179	FunctionDef	"load_theme (RCore * core , const char * path)"		4227178	0					
ANR	4227180	CompoundStatement		75:54:2914:3116	4227178	0					
ANR	4227181	IfStatement	if ( ! r_file_exists ( path ) )		4227178	0					
ANR	4227182	Condition	! r_file_exists ( path )	76:5:2921:2941	4227178	0	True				
ANR	4227183	UnaryOperationExpression	! r_file_exists ( path )		4227178	0					
ANR	4227184	UnaryOperator	!		4227178	0					
ANR	4227185	CallExpression	r_file_exists ( path )		4227178	1					
ANR	4227186	Callee	r_file_exists		4227178	0					
ANR	4227187	Identifier	r_file_exists		4227178	0					
ANR	4227188	ArgumentList	path		4227178	1					
ANR	4227189	Argument	path		4227178	0					
ANR	4227190	Identifier	path		4227178	0					
ANR	4227191	CompoundStatement		2:28:29:29	4227178	1					
ANR	4227192	ReturnStatement	return false ;	77:2:2948:2960	4227178	0	True				
ANR	4227193	Identifier	false		4227178	0					
ANR	4227194	ExpressionStatement	"core -> cmdfilter = ""ec """	79:1:2966:2989	4227178	1	True				
ANR	4227195	AssignmentExpression	"core -> cmdfilter = ""ec """		4227178	0		=			
ANR	4227196	PtrMemberAccess	core -> cmdfilter		4227178	0					
ANR	4227197	Identifier	core		4227178	0					
ANR	4227198	Identifier	cmdfilter		4227178	1					
ANR	4227199	PrimaryExpression	"""ec """		4227178	1					
ANR	4227200	IdentifierDeclStatement	"bool res = r_core_cmd_file ( core , path ) ;"	80:1:2992:3031	4227178	2	True				
ANR	4227201	IdentifierDecl	"res = r_core_cmd_file ( core , path )"		4227178	0					
ANR	4227202	IdentifierDeclType	bool		4227178	0					
ANR	4227203	Identifier	res		4227178	1					
ANR	4227204	AssignmentExpression	"res = r_core_cmd_file ( core , path )"		4227178	2		=			
ANR	4227205	Identifier	res		4227178	0					
ANR	4227206	CallExpression	"r_core_cmd_file ( core , path )"		4227178	1					
ANR	4227207	Callee	r_core_cmd_file		4227178	0					
ANR	4227208	Identifier	r_core_cmd_file		4227178	0					
ANR	4227209	ArgumentList	core		4227178	1					
ANR	4227210	Argument	core		4227178	0					
ANR	4227211	Identifier	core		4227178	0					
ANR	4227212	Argument	path		4227178	1					
ANR	4227213	Identifier	path		4227178	0					
ANR	4227214	IfStatement	if ( res )		4227178	3					
ANR	4227215	Condition	res	81:5:3038:3040	4227178	0	True				
ANR	4227216	Identifier	res		4227178	0					
ANR	4227217	CompoundStatement		7:10:128:128	4227178	1					
ANR	4227218	ExpressionStatement	r_cons_pal_update_event ( )	82:2:3047:3073	4227178	0	True				
ANR	4227219	CallExpression	r_cons_pal_update_event ( )		4227178	0					
ANR	4227220	Callee	r_cons_pal_update_event		4227178	0					
ANR	4227221	Identifier	r_cons_pal_update_event		4227178	0					
ANR	4227222	ArgumentList			4227178	1					
ANR	4227223	ExpressionStatement	core -> cmdfilter = NULL	84:1:3079:3101	4227178	4	True				
ANR	4227224	AssignmentExpression	core -> cmdfilter = NULL		4227178	0		=			
ANR	4227225	PtrMemberAccess	core -> cmdfilter		4227178	0					
ANR	4227226	Identifier	core		4227178	0					
ANR	4227227	Identifier	cmdfilter		4227178	1					
ANR	4227228	Identifier	NULL		4227178	1					
ANR	4227229	ReturnStatement	return res ;	85:1:3104:3114	4227178	5	True				
ANR	4227230	Identifier	res		4227178	0					
ANR	4227231	ReturnType	static bool		4227178	1					
ANR	4227232	Identifier	load_theme		4227178	2					
ANR	4227233	ParameterList	"RCore * core , const char * path"		4227178	3					
ANR	4227234	Parameter	RCore * core	75:23:2883:2893	4227178	0	True				
ANR	4227235	ParameterType	RCore *		4227178	0					
ANR	4227236	Identifier	core		4227178	1					
ANR	4227237	Parameter	const char * path	75:36:2896:2911	4227178	1	True				
ANR	4227238	ParameterType	const char *		4227178	0					
ANR	4227239	Identifier	path		4227178	1					
ANR	4227240	CFGEntryNode	ENTRY		4227178		True				
ANR	4227241	CFGExitNode	EXIT		4227178		True				
ANR	4227242	Symbol	core		4227178						
ANR	4227243	Symbol	path		4227178						
ANR	4227244	Symbol	res		4227178						
ANR	4227245	Symbol	r_core_cmd_file		4227178						
ANR	4227246	Symbol	NULL		4227178						
ANR	4227247	Symbol	core -> cmdfilter		4227178						
ANR	4227248	Symbol	false		4227178						
ANR	4227249	Symbol	* core		4227178						
ANR	4227250	Symbol	r_file_exists		4227178						
ANR	4227251	Function	nextpal_item	88:0:3119:3754							
ANR	4227252	FunctionDef	"nextpal_item (RCore * core , int mode , const char * file , int ctr)"		4227251	0					
ANR	4227253	CompoundStatement		88:75:3194:3754	4227251	0					
ANR	4227254	IdentifierDeclStatement	"const char * fn = r_str_lchr ( file , '/' ) ;"	89:1:3197:3236	4227251	0	True				
ANR	4227255	IdentifierDecl	"* fn = r_str_lchr ( file , '/' )"		4227251	0					
ANR	4227256	IdentifierDeclType	const char *		4227251	0					
ANR	4227257	Identifier	fn		4227251	1					
ANR	4227258	AssignmentExpression	"* fn = r_str_lchr ( file , '/' )"		4227251	2		=			
ANR	4227259	Identifier	fn		4227251	0					
ANR	4227260	CallExpression	"r_str_lchr ( file , '/' )"		4227251	1					
ANR	4227261	Callee	r_str_lchr		4227251	0					
ANR	4227262	Identifier	r_str_lchr		4227251	0					
ANR	4227263	ArgumentList	file		4227251	1					
ANR	4227264	Argument	file		4227251	0					
ANR	4227265	Identifier	file		4227251	0					
ANR	4227266	Argument	'/'		4227251	1					
ANR	4227267	PrimaryExpression	'/'		4227251	0					
ANR	4227268	IfStatement	if ( ! fn )		4227251	1					
ANR	4227269	Condition	! fn	90:5:3243:3245	4227251	0	True				
ANR	4227270	UnaryOperationExpression	! fn		4227251	0					
ANR	4227271	UnaryOperator	!		4227251	0					
ANR	4227272	Identifier	fn		4227251	1					
ANR	4227273	ExpressionStatement	fn = file	90:10:3248:3257	4227251	1	True				
ANR	4227274	AssignmentExpression	fn = file		4227251	0		=			
ANR	4227275	Identifier	fn		4227251	0					
ANR	4227276	Identifier	file		4227251	1					
ANR	4227277	SwitchStatement	switch ( mode )		4227251	2					
ANR	4227278	Condition	mode	91:9:3268:3271	4227251	0	True				
ANR	4227279	Identifier	mode		4227251	0					
ANR	4227280	CompoundStatement		4:15:79:79	4227251	1					
ANR	4227281	Label	case 'j' :	92:1:3277:3285	4227251	0	True				
ANR	4227282	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"""" , ctr ? "","" : """" , fn )"	93:2:3297:3339	4227251	1	True				
ANR	4227283	CallExpression	"r_cons_printf ( ""%s\\""%s\\"""" , ctr ? "","" : """" , fn )"		4227251	0					
ANR	4227284	Callee	r_cons_printf		4227251	0					
ANR	4227285	Identifier	r_cons_printf		4227251	0					
ANR	4227286	ArgumentList	"""%s\\""%s\\"""""		4227251	1					
ANR	4227287	Argument	"""%s\\""%s\\"""""		4227251	0					
ANR	4227288	PrimaryExpression	"""%s\\""%s\\"""""		4227251	0					
ANR	4227289	Argument	"ctr ? "","" : """""		4227251	1					
ANR	4227290	ConditionalExpression	"ctr ? "","" : """""		4227251	0					
ANR	4227291	Condition	ctr		4227251	0					
ANR	4227292	Identifier	ctr		4227251	0					
ANR	4227293	PrimaryExpression	""","""		4227251	1					
ANR	4227294	PrimaryExpression	""""""		4227251	2					
ANR	4227295	Argument	fn		4227251	2					
ANR	4227296	Identifier	fn		4227251	0					
ANR	4227297	BreakStatement	break ;	94:2:3343:3348	4227251	2	True				
ANR	4227298	Label	case 'l' :	95:1:3351:3359	4227251	3	True				
ANR	4227299	ExpressionStatement	r_cons_println ( fn )	96:2:3371:3390	4227251	4	True				
ANR	4227300	CallExpression	r_cons_println ( fn )		4227251	0					
ANR	4227301	Callee	r_cons_println		4227251	0					
ANR	4227302	Identifier	r_cons_println		4227251	0					
ANR	4227303	ArgumentList	fn		4227251	1					
ANR	4227304	Argument	fn		4227251	0					
ANR	4227305	Identifier	fn		4227251	0					
ANR	4227306	BreakStatement	break ;	97:2:3394:3399	4227251	5	True				
ANR	4227307	Label	case 'p' :	98:1:3402:3410	4227251	6	True				
ANR	4227308	BreakStatement	break ;	100:2:3453:3458	4227251	7	True				
ANR	4227309	Label	case 'n' :	101:1:3461:3469	4227251	8	True				
ANR	4227310	IfStatement	if ( getNext )		4227251	9					
ANR	4227311	Condition	getNext	102:6:3485:3491	4227251	0	True				
ANR	4227312	Identifier	getNext		4227251	0					
ANR	4227313	CompoundStatement		15:15:299:299	4227251	1					
ANR	4227314	ExpressionStatement	"curtheme = r_str_dup ( curtheme , fn )"	103:3:3499:3534	4227251	0	True				
ANR	4227315	AssignmentExpression	"curtheme = r_str_dup ( curtheme , fn )"		4227251	0		=			
ANR	4227316	Identifier	curtheme		4227251	0					
ANR	4227317	CallExpression	"r_str_dup ( curtheme , fn )"		4227251	1					
ANR	4227318	Callee	r_str_dup		4227251	0					
ANR	4227319	Identifier	r_str_dup		4227251	0					
ANR	4227320	ArgumentList	curtheme		4227251	1					
ANR	4227321	Argument	curtheme		4227251	0					
ANR	4227322	Identifier	curtheme		4227251	0					
ANR	4227323	Argument	fn		4227251	1					
ANR	4227324	Identifier	fn		4227251	0					
ANR	4227325	ExpressionStatement	getNext = false	104:3:3539:3554	4227251	1	True				
ANR	4227326	AssignmentExpression	getNext = false		4227251	0		=			
ANR	4227327	Identifier	getNext		4227251	0					
ANR	4227328	Identifier	false		4227251	1					
ANR	4227329	ReturnStatement	return false ;	105:3:3559:3571	4227251	2	True				
ANR	4227330	Identifier	false		4227251	0					
ANR	4227331	ElseStatement	else		4227251	0					
ANR	4227332	IfStatement	if ( curtheme )		4227251	0					
ANR	4227333	Condition	curtheme	106:13:3586:3593	4227251	0	True				
ANR	4227334	Identifier	curtheme		4227251	0					
ANR	4227335	CompoundStatement		19:23:401:401	4227251	1					
ANR	4227336	IfStatement	"if ( ! strcmp ( curtheme , fn ) )"		4227251	0					
ANR	4227337	Condition	"! strcmp ( curtheme , fn )"	107:7:3605:3626	4227251	0	True				
ANR	4227338	UnaryOperationExpression	"! strcmp ( curtheme , fn )"		4227251	0					
ANR	4227339	UnaryOperator	!		4227251	0					
ANR	4227340	CallExpression	"strcmp ( curtheme , fn )"		4227251	1					
ANR	4227341	Callee	strcmp		4227251	0					
ANR	4227342	Identifier	strcmp		4227251	0					
ANR	4227343	ArgumentList	curtheme		4227251	1					
ANR	4227344	Argument	curtheme		4227251	0					
ANR	4227345	Identifier	curtheme		4227251	0					
ANR	4227346	Argument	fn		4227251	1					
ANR	4227347	Identifier	fn		4227251	0					
ANR	4227348	CompoundStatement		20:31:434:434	4227251	1					
ANR	4227349	ExpressionStatement	getNext = true	108:4:3635:3649	4227251	0	True				
ANR	4227350	AssignmentExpression	getNext = true		4227251	0		=			
ANR	4227351	Identifier	getNext		4227251	0					
ANR	4227352	Identifier	true		4227251	1					
ANR	4227353	ElseStatement	else		4227251	0					
ANR	4227354	CompoundStatement		23:9:470:470	4227251	0					
ANR	4227355	ExpressionStatement	"curtheme = r_str_dup ( curtheme , fn )"	111:3:3670:3705	4227251	0	True				
ANR	4227356	AssignmentExpression	"curtheme = r_str_dup ( curtheme , fn )"		4227251	0		=			
ANR	4227357	Identifier	curtheme		4227251	0					
ANR	4227358	CallExpression	"r_str_dup ( curtheme , fn )"		4227251	1					
ANR	4227359	Callee	r_str_dup		4227251	0					
ANR	4227360	Identifier	r_str_dup		4227251	0					
ANR	4227361	ArgumentList	curtheme		4227251	1					
ANR	4227362	Argument	curtheme		4227251	0					
ANR	4227363	Identifier	curtheme		4227251	0					
ANR	4227364	Argument	fn		4227251	1					
ANR	4227365	Identifier	fn		4227251	0					
ANR	4227366	ReturnStatement	return false ;	112:3:3710:3722	4227251	1	True				
ANR	4227367	Identifier	false		4227251	0					
ANR	4227368	BreakStatement	break ;	114:2:3730:3735	4227251	10	True				
ANR	4227369	ReturnStatement	return true ;	116:1:3741:3752	4227251	3	True				
ANR	4227370	Identifier	true		4227251	0					
ANR	4227371	ReturnType	static bool		4227251	1					
ANR	4227372	Identifier	nextpal_item		4227251	2					
ANR	4227373	ParameterList	"RCore * core , int mode , const char * file , int ctr"		4227251	3					
ANR	4227374	Parameter	RCore * core	88:25:3144:3154	4227251	0	True				
ANR	4227375	ParameterType	RCore *		4227251	0					
ANR	4227376	Identifier	core		4227251	1					
ANR	4227377	Parameter	int mode	88:38:3157:3164	4227251	1	True				
ANR	4227378	ParameterType	int		4227251	0					
ANR	4227379	Identifier	mode		4227251	1					
ANR	4227380	Parameter	const char * file	88:48:3167:3182	4227251	2	True				
ANR	4227381	ParameterType	const char *		4227251	0					
ANR	4227382	Identifier	file		4227251	1					
ANR	4227383	Parameter	int ctr	88:66:3185:3191	4227251	3	True				
ANR	4227384	ParameterType	int		4227251	0					
ANR	4227385	Identifier	ctr		4227251	1					
ANR	4227386	CFGEntryNode	ENTRY		4227251		True				
ANR	4227387	CFGExitNode	EXIT		4227251		True				
ANR	4227388	Symbol	mode		4227251						
ANR	4227389	Symbol	ctr		4227251						
ANR	4227390	Symbol	curtheme		4227251						
ANR	4227391	Symbol	strcmp		4227251						
ANR	4227392	Symbol	core		4227251						
ANR	4227393	Symbol	file		4227251						
ANR	4227394	Symbol	r_str_lchr		4227251						
ANR	4227395	Symbol	fn		4227251						
ANR	4227396	Symbol	false		4227251						
ANR	4227397	Symbol	true		4227251						
ANR	4227398	Symbol	getNext		4227251						
ANR	4227399	Symbol	r_str_dup		4227251						
ANR	4227400	Function	cmd_load_theme	119:0:3757:4735							
ANR	4227401	FunctionDef	"cmd_load_theme (RCore * core , const char * _arg)"		4227400	0					
ANR	4227402	CompoundStatement		119:58:3815:4735	4227400	0					
ANR	4227403	IdentifierDeclStatement	bool failed = false ;	120:1:3818:3837	4227400	0	True				
ANR	4227404	IdentifierDecl	failed = false		4227400	0					
ANR	4227405	IdentifierDeclType	bool		4227400	0					
ANR	4227406	Identifier	failed		4227400	1					
ANR	4227407	AssignmentExpression	failed = false		4227400	2		=			
ANR	4227408	Identifier	false		4227400	0					
ANR	4227409	Identifier	false		4227400	1					
ANR	4227410	IdentifierDeclStatement	char * path ;	121:1:3840:3850	4227400	1	True				
ANR	4227411	IdentifierDecl	* path		4227400	0					
ANR	4227412	IdentifierDeclType	char *		4227400	0					
ANR	4227413	Identifier	path		4227400	1					
ANR	4227414	IfStatement	if ( ! _arg || ! * _arg )		4227400	2					
ANR	4227415	Condition	! _arg || ! * _arg	122:5:3857:3871	4227400	0	True				
ANR	4227416	OrExpression	! _arg || ! * _arg		4227400	0		||			
ANR	4227417	UnaryOperationExpression	! _arg		4227400	0					
ANR	4227418	UnaryOperator	!		4227400	0					
ANR	4227419	Identifier	_arg		4227400	1					
ANR	4227420	UnaryOperationExpression	! * _arg		4227400	1					
ANR	4227421	UnaryOperator	!		4227400	0					
ANR	4227422	UnaryOperationExpression	* _arg		4227400	1					
ANR	4227423	UnaryOperator	*		4227400	0					
ANR	4227424	Identifier	_arg		4227400	1					
ANR	4227425	CompoundStatement		4:22:58:58	4227400	1					
ANR	4227426	ReturnStatement	return false ;	123:2:3878:3890	4227400	0	True				
ANR	4227427	Identifier	false		4227400	0					
ANR	4227428	IfStatement	"if ( ! r_str_cmp ( _arg , ""default"" , strlen ( _arg ) ) )"		4227400	3					
ANR	4227429	Condition	"! r_str_cmp ( _arg , ""default"" , strlen ( _arg ) )"	125:5:3900:3942	4227400	0	True				
ANR	4227430	UnaryOperationExpression	"! r_str_cmp ( _arg , ""default"" , strlen ( _arg ) )"		4227400	0					
ANR	4227431	UnaryOperator	!		4227400	0					
ANR	4227432	CallExpression	"r_str_cmp ( _arg , ""default"" , strlen ( _arg ) )"		4227400	1					
ANR	4227433	Callee	r_str_cmp		4227400	0					
ANR	4227434	Identifier	r_str_cmp		4227400	0					
ANR	4227435	ArgumentList	_arg		4227400	1					
ANR	4227436	Argument	_arg		4227400	0					
ANR	4227437	Identifier	_arg		4227400	0					
ANR	4227438	Argument	"""default"""		4227400	1					
ANR	4227439	PrimaryExpression	"""default"""		4227400	0					
ANR	4227440	Argument	strlen ( _arg )		4227400	2					
ANR	4227441	CallExpression	strlen ( _arg )		4227400	0					
ANR	4227442	Callee	strlen		4227400	0					
ANR	4227443	Identifier	strlen		4227400	0					
ANR	4227444	ArgumentList	_arg		4227400	1					
ANR	4227445	Argument	_arg		4227400	0					
ANR	4227446	Identifier	_arg		4227400	0					
ANR	4227447	CompoundStatement		7:50:129:129	4227400	1					
ANR	4227448	ExpressionStatement	curtheme = strdup ( _arg )	126:2:3949:3973	4227400	0	True				
ANR	4227449	AssignmentExpression	curtheme = strdup ( _arg )		4227400	0		=			
ANR	4227450	Identifier	curtheme		4227400	0					
ANR	4227451	CallExpression	strdup ( _arg )		4227400	1					
ANR	4227452	Callee	strdup		4227400	0					
ANR	4227453	Identifier	strdup		4227400	0					
ANR	4227454	ArgumentList	_arg		4227400	1					
ANR	4227455	Argument	_arg		4227400	0					
ANR	4227456	Identifier	_arg		4227400	0					
ANR	4227457	ExpressionStatement	r_cons_pal_init ( core -> cons -> context )	127:2:3977:4014	4227400	1	True				
ANR	4227458	CallExpression	r_cons_pal_init ( core -> cons -> context )		4227400	0					
ANR	4227459	Callee	r_cons_pal_init		4227400	0					
ANR	4227460	Identifier	r_cons_pal_init		4227400	0					
ANR	4227461	ArgumentList	core -> cons -> context		4227400	1					
ANR	4227462	Argument	core -> cons -> context		4227400	0					
ANR	4227463	PtrMemberAccess	core -> cons -> context		4227400	0					
ANR	4227464	PtrMemberAccess	core -> cons		4227400	0					
ANR	4227465	Identifier	core		4227400	0					
ANR	4227466	Identifier	cons		4227400	1					
ANR	4227467	Identifier	context		4227400	1					
ANR	4227468	ReturnStatement	return true ;	128:2:4018:4029	4227400	2	True				
ANR	4227469	Identifier	true		4227400	0					
ANR	4227470	IdentifierDeclStatement	char * arg = strdup ( _arg ) ;	130:1:4035:4060	4227400	4	True				
ANR	4227471	IdentifierDecl	* arg = strdup ( _arg )		4227400	0					
ANR	4227472	IdentifierDeclType	char *		4227400	0					
ANR	4227473	Identifier	arg		4227400	1					
ANR	4227474	AssignmentExpression	* arg = strdup ( _arg )		4227400	2		=			
ANR	4227475	Identifier	arg		4227400	0					
ANR	4227476	CallExpression	strdup ( _arg )		4227400	1					
ANR	4227477	Callee	strdup		4227400	0					
ANR	4227478	Identifier	strdup		4227400	0					
ANR	4227479	ArgumentList	_arg		4227400	1					
ANR	4227480	Argument	_arg		4227400	0					
ANR	4227481	Identifier	_arg		4227400	0					
ANR	4227482	IdentifierDeclStatement	"char * tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg ) ;"	132:1:4064:4131	4227400	5	True				
ANR	4227483	IdentifierDecl	"* tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg )"		4227400	0					
ANR	4227484	IdentifierDeclType	char *		4227400	0					
ANR	4227485	Identifier	tmp		4227400	1					
ANR	4227486	AssignmentExpression	"* tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg )"		4227400	2		=			
ANR	4227487	Identifier	tmp		4227400	0					
ANR	4227488	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg )"		4227400	1					
ANR	4227489	Callee	r_str_newf		4227400	0					
ANR	4227490	Identifier	r_str_newf		4227400	0					
ANR	4227491	ArgumentList	"R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" )"		4227400	1					
ANR	4227492	Argument	"R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" )"		4227400	0					
ANR	4227493	CallExpression	"R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" )"		4227400	0					
ANR	4227494	Callee	R_JOIN_2_PATHS		4227400	0					
ANR	4227495	Identifier	R_JOIN_2_PATHS		4227400	0					
ANR	4227496	ArgumentList	R2_HOME_THEMES		4227400	1					
ANR	4227497	Argument	R2_HOME_THEMES		4227400	0					
ANR	4227498	Identifier	R2_HOME_THEMES		4227400	0					
ANR	4227499	Argument	"""%s"""		4227400	1					
ANR	4227500	PrimaryExpression	"""%s"""		4227400	0					
ANR	4227501	Argument	arg		4227400	1					
ANR	4227502	Identifier	arg		4227400	0					
ANR	4227503	IdentifierDeclStatement	char * home = tmp ? r_str_home ( tmp ) : NULL ;	133:1:4134:4176	4227400	6	True				
ANR	4227504	IdentifierDecl	* home = tmp ? r_str_home ( tmp ) : NULL		4227400	0					
ANR	4227505	IdentifierDeclType	char *		4227400	0					
ANR	4227506	Identifier	home		4227400	1					
ANR	4227507	AssignmentExpression	* home = tmp ? r_str_home ( tmp ) : NULL		4227400	2		=			
ANR	4227508	Identifier	home		4227400	0					
ANR	4227509	ConditionalExpression	tmp ? r_str_home ( tmp ) : NULL		4227400	1					
ANR	4227510	Condition	tmp		4227400	0					
ANR	4227511	Identifier	tmp		4227400	0					
ANR	4227512	CallExpression	r_str_home ( tmp )		4227400	1					
ANR	4227513	Callee	r_str_home		4227400	0					
ANR	4227514	Identifier	r_str_home		4227400	0					
ANR	4227515	ArgumentList	tmp		4227400	1					
ANR	4227516	Argument	tmp		4227400	0					
ANR	4227517	Identifier	tmp		4227400	0					
ANR	4227518	Identifier	NULL		4227400	2					
ANR	4227519	ExpressionStatement	free ( tmp )	134:1:4179:4189	4227400	7	True				
ANR	4227520	CallExpression	free ( tmp )		4227400	0					
ANR	4227521	Callee	free		4227400	0					
ANR	4227522	Identifier	free		4227400	0					
ANR	4227523	ArgumentList	tmp		4227400	1					
ANR	4227524	Argument	tmp		4227400	0					
ANR	4227525	Identifier	tmp		4227400	0					
ANR	4227526	ExpressionStatement	"tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_THEMES , ""%s"" ) , arg )"	136:1:4193:4249	4227400	8	True				
ANR	4227527	AssignmentExpression	"tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_THEMES , ""%s"" ) , arg )"		4227400	0		=			
ANR	4227528	Identifier	tmp		4227400	0					
ANR	4227529	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( R2_THEMES , ""%s"" ) , arg )"		4227400	1					
ANR	4227530	Callee	r_str_newf		4227400	0					
ANR	4227531	Identifier	r_str_newf		4227400	0					
ANR	4227532	ArgumentList	"R_JOIN_2_PATHS ( R2_THEMES , ""%s"" )"		4227400	1					
ANR	4227533	Argument	"R_JOIN_2_PATHS ( R2_THEMES , ""%s"" )"		4227400	0					
ANR	4227534	CallExpression	"R_JOIN_2_PATHS ( R2_THEMES , ""%s"" )"		4227400	0					
ANR	4227535	Callee	R_JOIN_2_PATHS		4227400	0					
ANR	4227536	Identifier	R_JOIN_2_PATHS		4227400	0					
ANR	4227537	ArgumentList	R2_THEMES		4227400	1					
ANR	4227538	Argument	R2_THEMES		4227400	0					
ANR	4227539	Identifier	R2_THEMES		4227400	0					
ANR	4227540	Argument	"""%s"""		4227400	1					
ANR	4227541	PrimaryExpression	"""%s"""		4227400	0					
ANR	4227542	Argument	arg		4227400	1					
ANR	4227543	Identifier	arg		4227400	0					
ANR	4227544	ExpressionStatement	path = tmp ? r_str_r2_prefix ( tmp ) : NULL	137:1:4252:4293	4227400	9	True				
ANR	4227545	AssignmentExpression	path = tmp ? r_str_r2_prefix ( tmp ) : NULL		4227400	0		=			
ANR	4227546	Identifier	path		4227400	0					
ANR	4227547	ConditionalExpression	tmp ? r_str_r2_prefix ( tmp ) : NULL		4227400	1					
ANR	4227548	Condition	tmp		4227400	0					
ANR	4227549	Identifier	tmp		4227400	0					
ANR	4227550	CallExpression	r_str_r2_prefix ( tmp )		4227400	1					
ANR	4227551	Callee	r_str_r2_prefix		4227400	0					
ANR	4227552	Identifier	r_str_r2_prefix		4227400	0					
ANR	4227553	ArgumentList	tmp		4227400	1					
ANR	4227554	Argument	tmp		4227400	0					
ANR	4227555	Identifier	tmp		4227400	0					
ANR	4227556	Identifier	NULL		4227400	2					
ANR	4227557	ExpressionStatement	free ( tmp )	138:1:4296:4306	4227400	10	True				
ANR	4227558	CallExpression	free ( tmp )		4227400	0					
ANR	4227559	Callee	free		4227400	0					
ANR	4227560	Identifier	free		4227400	0					
ANR	4227561	ArgumentList	tmp		4227400	1					
ANR	4227562	Argument	tmp		4227400	0					
ANR	4227563	Identifier	tmp		4227400	0					
ANR	4227564	IfStatement	"if ( ! load_theme ( core , home ) )"		4227400	11					
ANR	4227565	Condition	"! load_theme ( core , home )"	140:5:4314:4337	4227400	0	True				
ANR	4227566	UnaryOperationExpression	"! load_theme ( core , home )"		4227400	0					
ANR	4227567	UnaryOperator	!		4227400	0					
ANR	4227568	CallExpression	"load_theme ( core , home )"		4227400	1					
ANR	4227569	Callee	load_theme		4227400	0					
ANR	4227570	Identifier	load_theme		4227400	0					
ANR	4227571	ArgumentList	core		4227400	1					
ANR	4227572	Argument	core		4227400	0					
ANR	4227573	Identifier	core		4227400	0					
ANR	4227574	Argument	home		4227400	1					
ANR	4227575	Identifier	home		4227400	0					
ANR	4227576	CompoundStatement		22:31:524:524	4227400	1					
ANR	4227577	IfStatement	"if ( load_theme ( core , path ) )"		4227400	0					
ANR	4227578	Condition	"load_theme ( core , path )"	141:6:4348:4370	4227400	0	True				
ANR	4227579	CallExpression	"load_theme ( core , path )"		4227400	0					
ANR	4227580	Callee	load_theme		4227400	0					
ANR	4227581	Identifier	load_theme		4227400	0					
ANR	4227582	ArgumentList	core		4227400	1					
ANR	4227583	Argument	core		4227400	0					
ANR	4227584	Identifier	core		4227400	0					
ANR	4227585	Argument	path		4227400	1					
ANR	4227586	Identifier	path		4227400	0					
ANR	4227587	CompoundStatement		23:31:557:557	4227400	1					
ANR	4227588	ExpressionStatement	"curtheme = r_str_dup ( curtheme , arg )"	142:3:4378:4414	4227400	0	True				
ANR	4227589	AssignmentExpression	"curtheme = r_str_dup ( curtheme , arg )"		4227400	0		=			
ANR	4227590	Identifier	curtheme		4227400	0					
ANR	4227591	CallExpression	"r_str_dup ( curtheme , arg )"		4227400	1					
ANR	4227592	Callee	r_str_dup		4227400	0					
ANR	4227593	Identifier	r_str_dup		4227400	0					
ANR	4227594	ArgumentList	curtheme		4227400	1					
ANR	4227595	Argument	curtheme		4227400	0					
ANR	4227596	Identifier	curtheme		4227400	0					
ANR	4227597	Argument	arg		4227400	1					
ANR	4227598	Identifier	arg		4227400	0					
ANR	4227599	ElseStatement	else		4227400	0					
ANR	4227600	CompoundStatement		25:9:609:609	4227400	0					
ANR	4227601	IfStatement	"if ( load_theme ( core , arg ) )"		4227400	0					
ANR	4227602	Condition	"load_theme ( core , arg )"	144:7:4434:4455	4227400	0	True				
ANR	4227603	CallExpression	"load_theme ( core , arg )"		4227400	0					
ANR	4227604	Callee	load_theme		4227400	0					
ANR	4227605	Identifier	load_theme		4227400	0					
ANR	4227606	ArgumentList	core		4227400	1					
ANR	4227607	Argument	core		4227400	0					
ANR	4227608	Identifier	core		4227400	0					
ANR	4227609	Argument	arg		4227400	1					
ANR	4227610	Identifier	arg		4227400	0					
ANR	4227611	CompoundStatement		26:31:642:642	4227400	1					
ANR	4227612	ExpressionStatement	"curtheme = r_str_dup ( curtheme , arg )"	145:4:4464:4500	4227400	0	True				
ANR	4227613	AssignmentExpression	"curtheme = r_str_dup ( curtheme , arg )"		4227400	0		=			
ANR	4227614	Identifier	curtheme		4227400	0					
ANR	4227615	CallExpression	"r_str_dup ( curtheme , arg )"		4227400	1					
ANR	4227616	Callee	r_str_dup		4227400	0					
ANR	4227617	Identifier	r_str_dup		4227400	0					
ANR	4227618	ArgumentList	curtheme		4227400	1					
ANR	4227619	Argument	curtheme		4227400	0					
ANR	4227620	Identifier	curtheme		4227400	0					
ANR	4227621	Argument	arg		4227400	1					
ANR	4227622	Identifier	arg		4227400	0					
ANR	4227623	ElseStatement	else		4227400	0					
ANR	4227624	CompoundStatement		29:4:702:738	4227400	0					
ANR	4227625	IdentifierDeclStatement	char * absfile = r_file_abspath ( arg ) ;	147:4:4518:4554	4227400	0	True				
ANR	4227626	IdentifierDecl	* absfile = r_file_abspath ( arg )		4227400	0					
ANR	4227627	IdentifierDeclType	char *		4227400	0					
ANR	4227628	Identifier	absfile		4227400	1					
ANR	4227629	AssignmentExpression	* absfile = r_file_abspath ( arg )		4227400	2		=			
ANR	4227630	Identifier	absfile		4227400	0					
ANR	4227631	CallExpression	r_file_abspath ( arg )		4227400	1					
ANR	4227632	Callee	r_file_abspath		4227400	0					
ANR	4227633	Identifier	r_file_abspath		4227400	0					
ANR	4227634	ArgumentList	arg		4227400	1					
ANR	4227635	Argument	arg		4227400	0					
ANR	4227636	Identifier	arg		4227400	0					
ANR	4227637	ExpressionStatement	"eprintf ( ""eco: cannot open colorscheme profile (%s)\\n"" , absfile )"	148:4:4560:4624	4227400	1	True				
ANR	4227638	CallExpression	"eprintf ( ""eco: cannot open colorscheme profile (%s)\\n"" , absfile )"		4227400	0					
ANR	4227639	Callee	eprintf		4227400	0					
ANR	4227640	Identifier	eprintf		4227400	0					
ANR	4227641	ArgumentList	"""eco: cannot open colorscheme profile (%s)\\n"""		4227400	1					
ANR	4227642	Argument	"""eco: cannot open colorscheme profile (%s)\\n"""		4227400	0					
ANR	4227643	PrimaryExpression	"""eco: cannot open colorscheme profile (%s)\\n"""		4227400	0					
ANR	4227644	Argument	absfile		4227400	1					
ANR	4227645	Identifier	absfile		4227400	0					
ANR	4227646	ExpressionStatement	free ( absfile )	149:4:4630:4644	4227400	2	True				
ANR	4227647	CallExpression	free ( absfile )		4227400	0					
ANR	4227648	Callee	free		4227400	0					
ANR	4227649	Identifier	free		4227400	0					
ANR	4227650	ArgumentList	absfile		4227400	1					
ANR	4227651	Argument	absfile		4227400	0					
ANR	4227652	Identifier	absfile		4227400	0					
ANR	4227653	ExpressionStatement	failed = true	150:4:4650:4663	4227400	3	True				
ANR	4227654	AssignmentExpression	failed = true		4227400	0		=			
ANR	4227655	Identifier	failed		4227400	0					
ANR	4227656	Identifier	true		4227400	1					
ANR	4227657	ExpressionStatement	free ( home )	154:1:4678:4689	4227400	12	True				
ANR	4227658	CallExpression	free ( home )		4227400	0					
ANR	4227659	Callee	free		4227400	0					
ANR	4227660	Identifier	free		4227400	0					
ANR	4227661	ArgumentList	home		4227400	1					
ANR	4227662	Argument	home		4227400	0					
ANR	4227663	Identifier	home		4227400	0					
ANR	4227664	ExpressionStatement	free ( path )	155:1:4692:4703	4227400	13	True				
ANR	4227665	CallExpression	free ( path )		4227400	0					
ANR	4227666	Callee	free		4227400	0					
ANR	4227667	Identifier	free		4227400	0					
ANR	4227668	ArgumentList	path		4227400	1					
ANR	4227669	Argument	path		4227400	0					
ANR	4227670	Identifier	path		4227400	0					
ANR	4227671	ExpressionStatement	free ( arg )	156:1:4706:4716	4227400	14	True				
ANR	4227672	CallExpression	free ( arg )		4227400	0					
ANR	4227673	Callee	free		4227400	0					
ANR	4227674	Identifier	free		4227400	0					
ANR	4227675	ArgumentList	arg		4227400	1					
ANR	4227676	Argument	arg		4227400	0					
ANR	4227677	Identifier	arg		4227400	0					
ANR	4227678	ReturnStatement	return ! failed ;	157:1:4719:4733	4227400	15	True				
ANR	4227679	UnaryOperationExpression	! failed		4227400	0					
ANR	4227680	UnaryOperator	!		4227400	0					
ANR	4227681	Identifier	failed		4227400	1					
ANR	4227682	ReturnType	static bool		4227400	1					
ANR	4227683	Identifier	cmd_load_theme		4227400	2					
ANR	4227684	ParameterList	"RCore * core , const char * _arg"		4227400	3					
ANR	4227685	Parameter	RCore * core	119:27:3784:3794	4227400	0	True				
ANR	4227686	ParameterType	RCore *		4227400	0					
ANR	4227687	Identifier	core		4227400	1					
ANR	4227688	Parameter	const char * _arg	119:40:3797:3812	4227400	1	True				
ANR	4227689	ParameterType	const char *		4227400	0					
ANR	4227690	Identifier	_arg		4227400	1					
ANR	4227691	CFGEntryNode	ENTRY		4227400		True				
ANR	4227692	CFGExitNode	EXIT		4227400		True				
ANR	4227693	Symbol	r_file_abspath		4227400						
ANR	4227694	Symbol	* core -> cons		4227400						
ANR	4227695	Symbol	* core		4227400						
ANR	4227696	Symbol	r_str_newf		4227400						
ANR	4227697	Symbol	R2_THEMES		4227400						
ANR	4227698	Symbol	path		4227400						
ANR	4227699	Symbol	strlen		4227400						
ANR	4227700	Symbol	core -> cons		4227400						
ANR	4227701	Symbol	absfile		4227400						
ANR	4227702	Symbol	* _arg		4227400						
ANR	4227703	Symbol	tmp		4227400						
ANR	4227704	Symbol	arg		4227400						
ANR	4227705	Symbol	r_str_home		4227400						
ANR	4227706	Symbol	* * core		4227400						
ANR	4227707	Symbol	curtheme		4227400						
ANR	4227708	Symbol	NULL		4227400						
ANR	4227709	Symbol	R2_HOME_THEMES		4227400						
ANR	4227710	Symbol	false		4227400						
ANR	4227711	Symbol	load_theme		4227400						
ANR	4227712	Symbol	failed		4227400						
ANR	4227713	Symbol	home		4227400						
ANR	4227714	Symbol	r_str_cmp		4227400						
ANR	4227715	Symbol	core		4227400						
ANR	4227716	Symbol	R_JOIN_2_PATHS		4227400						
ANR	4227717	Symbol	true		4227400						
ANR	4227718	Symbol	r_str_r2_prefix		4227400						
ANR	4227719	Symbol	_arg		4227400						
ANR	4227720	Symbol	strdup		4227400						
ANR	4227721	Symbol	core -> cons -> context		4227400						
ANR	4227722	Symbol	r_str_dup		4227400						
ANR	4227723	Function	list_themes_in_path	160:0:4738:5002							
ANR	4227724	FunctionDef	"list_themes_in_path (RList * list , const char * path)"		4227723	0					
ANR	4227725	CompoundStatement		160:63:4801:5002	4227723	0					
ANR	4227726	IdentifierDeclStatement	RListIter * iter ;	161:1:4804:4819	4227723	0	True				
ANR	4227727	IdentifierDecl	* iter		4227723	0					
ANR	4227728	IdentifierDeclType	RListIter *		4227723	0					
ANR	4227729	Identifier	iter		4227723	1					
ANR	4227730	IdentifierDeclStatement	const char * fn ;	162:1:4822:4836	4227723	1	True				
ANR	4227731	IdentifierDecl	* fn		4227723	0					
ANR	4227732	IdentifierDeclType	const char *		4227723	0					
ANR	4227733	Identifier	fn		4227723	1					
ANR	4227734	IdentifierDeclStatement	RList * files = r_sys_dir ( path ) ;	163:1:4839:4870	4227723	2	True				
ANR	4227735	IdentifierDecl	* files = r_sys_dir ( path )		4227723	0					
ANR	4227736	IdentifierDeclType	RList *		4227723	0					
ANR	4227737	Identifier	files		4227723	1					
ANR	4227738	AssignmentExpression	* files = r_sys_dir ( path )		4227723	2		=			
ANR	4227739	Identifier	files		4227723	0					
ANR	4227740	CallExpression	r_sys_dir ( path )		4227723	1					
ANR	4227741	Callee	r_sys_dir		4227723	0					
ANR	4227742	Identifier	r_sys_dir		4227723	0					
ANR	4227743	ArgumentList	path		4227723	1					
ANR	4227744	Argument	path		4227723	0					
ANR	4227745	Identifier	path		4227723	0					
ANR	4227746	Statement	r_list_foreach	164:1:4873:4886	4227723	3	True				
ANR	4227747	Statement	(	164:16:4888:4888	4227723	4	True				
ANR	4227748	Statement	files	164:17:4889:4893	4227723	5	True				
ANR	4227749	Statement	","	164:22:4894:4894	4227723	6	True				
ANR	4227750	Statement	iter	164:24:4896:4899	4227723	7	True				
ANR	4227751	Statement	","	164:28:4900:4900	4227723	8	True				
ANR	4227752	Statement	fn	164:30:4902:4903	4227723	9	True				
ANR	4227753	Statement	)	164:32:4904:4904	4227723	10	True				
ANR	4227754	CompoundStatement		5:34:104:104	4227723	11					
ANR	4227755	IfStatement	if ( * fn && * fn != '.' )		4227723	0					
ANR	4227756	Condition	* fn && * fn != '.'	165:6:4914:4930	4227723	0	True				
ANR	4227757	AndExpression	* fn && * fn != '.'		4227723	0		&&			
ANR	4227758	UnaryOperationExpression	* fn		4227723	0					
ANR	4227759	UnaryOperator	*		4227723	0					
ANR	4227760	Identifier	fn		4227723	1					
ANR	4227761	EqualityExpression	* fn != '.'		4227723	1		!=			
ANR	4227762	UnaryOperationExpression	* fn		4227723	0					
ANR	4227763	UnaryOperator	*		4227723	0					
ANR	4227764	Identifier	fn		4227723	1					
ANR	4227765	PrimaryExpression	'.'		4227723	1					
ANR	4227766	CompoundStatement		6:25:131:131	4227723	1					
ANR	4227767	ExpressionStatement	"r_list_append ( list , strdup ( fn ) )"	166:3:4938:4971	4227723	0	True				
ANR	4227768	CallExpression	"r_list_append ( list , strdup ( fn ) )"		4227723	0					
ANR	4227769	Callee	r_list_append		4227723	0					
ANR	4227770	Identifier	r_list_append		4227723	0					
ANR	4227771	ArgumentList	list		4227723	1					
ANR	4227772	Argument	list		4227723	0					
ANR	4227773	Identifier	list		4227723	0					
ANR	4227774	Argument	strdup ( fn )		4227723	1					
ANR	4227775	CallExpression	strdup ( fn )		4227723	0					
ANR	4227776	Callee	strdup		4227723	0					
ANR	4227777	Identifier	strdup		4227723	0					
ANR	4227778	ArgumentList	fn		4227723	1					
ANR	4227779	Argument	fn		4227723	0					
ANR	4227780	Identifier	fn		4227723	0					
ANR	4227781	ExpressionStatement	r_list_free ( files )	169:1:4981:5000	4227723	12	True				
ANR	4227782	CallExpression	r_list_free ( files )		4227723	0					
ANR	4227783	Callee	r_list_free		4227723	0					
ANR	4227784	Identifier	r_list_free		4227723	0					
ANR	4227785	ArgumentList	files		4227723	1					
ANR	4227786	Argument	files		4227723	0					
ANR	4227787	Identifier	files		4227723	0					
ANR	4227788	ReturnType	static void		4227723	1					
ANR	4227789	Identifier	list_themes_in_path		4227723	2					
ANR	4227790	ParameterList	"RList * list , const char * path"		4227723	3					
ANR	4227791	Parameter	RList * list	160:32:4770:4780	4227723	0	True				
ANR	4227792	ParameterType	RList *		4227723	0					
ANR	4227793	Identifier	list		4227723	1					
ANR	4227794	Parameter	const char * path	160:45:4783:4798	4227723	1	True				
ANR	4227795	ParameterType	const char *		4227723	0					
ANR	4227796	Identifier	path		4227723	1					
ANR	4227797	CFGEntryNode	ENTRY		4227723		True				
ANR	4227798	CFGExitNode	EXIT		4227723		True				
ANR	4227799	Symbol	path		4227723						
ANR	4227800	Symbol	fn		4227723						
ANR	4227801	Symbol	iter		4227723						
ANR	4227802	Symbol	files		4227723						
ANR	4227803	Symbol	strdup		4227723						
ANR	4227804	Symbol	list		4227723						
ANR	4227805	Symbol	* fn		4227723						
ANR	4227806	Symbol	r_sys_dir		4227723						
ANR	4227807	Function	r_core_get_theme	172:0:5005:5057							
ANR	4227808	FunctionDef	r_core_get_theme ()		4227807	0					
ANR	4227809	CompoundStatement		172:32:5037:5057	4227807	0					
ANR	4227810	ReturnStatement	return curtheme ;	173:1:5040:5055	4227807	0	True				
ANR	4227811	Identifier	curtheme		4227807	0					
ANR	4227812	ReturnType	R_API char *		4227807	1					
ANR	4227813	Identifier	r_core_get_theme		4227807	2					
ANR	4227814	ParameterList			4227807	3					
ANR	4227815	CFGEntryNode	ENTRY		4227807		True				
ANR	4227816	CFGExitNode	EXIT		4227807		True				
ANR	4227817	Symbol	curtheme		4227807						
ANR	4227818	Function	r_core_list_themes	176:0:5060:5475							
ANR	4227819	FunctionDef	r_core_list_themes (RCore * core)		4227818	0					
ANR	4227820	CompoundStatement		176:45:5105:5475	4227818	0					
ANR	4227821	IdentifierDeclStatement	RList * list = r_list_newf ( free ) ;	177:1:5108:5140	4227818	0	True				
ANR	4227822	IdentifierDecl	* list = r_list_newf ( free )		4227818	0					
ANR	4227823	IdentifierDeclType	RList *		4227818	0					
ANR	4227824	Identifier	list		4227818	1					
ANR	4227825	AssignmentExpression	* list = r_list_newf ( free )		4227818	2		=			
ANR	4227826	Identifier	list		4227818	0					
ANR	4227827	CallExpression	r_list_newf ( free )		4227818	1					
ANR	4227828	Callee	r_list_newf		4227818	0					
ANR	4227829	Identifier	r_list_newf		4227818	0					
ANR	4227830	ArgumentList	free		4227818	1					
ANR	4227831	Argument	free		4227818	0					
ANR	4227832	Identifier	free		4227818	0					
ANR	4227833	ExpressionStatement	getNext = false	178:1:5143:5158	4227818	1	True				
ANR	4227834	AssignmentExpression	getNext = false		4227818	0		=			
ANR	4227835	Identifier	getNext		4227818	0					
ANR	4227836	Identifier	false		4227818	1					
ANR	4227837	IdentifierDeclStatement	"char * tmp = strdup ( ""default"" ) ;"	179:1:5161:5191	4227818	2	True				
ANR	4227838	IdentifierDecl	"* tmp = strdup ( ""default"" )"		4227818	0					
ANR	4227839	IdentifierDeclType	char *		4227818	0					
ANR	4227840	Identifier	tmp		4227818	1					
ANR	4227841	AssignmentExpression	"* tmp = strdup ( ""default"" )"		4227818	2		=			
ANR	4227842	Identifier	tmp		4227818	0					
ANR	4227843	CallExpression	"strdup ( ""default"" )"		4227818	1					
ANR	4227844	Callee	strdup		4227818	0					
ANR	4227845	Identifier	strdup		4227818	0					
ANR	4227846	ArgumentList	"""default"""		4227818	1					
ANR	4227847	Argument	"""default"""		4227818	0					
ANR	4227848	PrimaryExpression	"""default"""		4227818	0					
ANR	4227849	ExpressionStatement	"r_list_append ( list , tmp )"	180:1:5194:5219	4227818	3	True				
ANR	4227850	CallExpression	"r_list_append ( list , tmp )"		4227818	0					
ANR	4227851	Callee	r_list_append		4227818	0					
ANR	4227852	Identifier	r_list_append		4227818	0					
ANR	4227853	ArgumentList	list		4227818	1					
ANR	4227854	Argument	list		4227818	0					
ANR	4227855	Identifier	list		4227818	0					
ANR	4227856	Argument	tmp		4227818	1					
ANR	4227857	Identifier	tmp		4227818	0					
ANR	4227858	Statement	char	181:1:5222:5225	4227818	4	True				
ANR	4227859	Statement	*	181:6:5227:5227	4227818	5	True				
ANR	4227860	Statement	path	181:7:5228:5231	4227818	6	True				
ANR	4227861	Statement	=	181:12:5233:5233	4227818	7	True				
ANR	4227862	Statement	r_str_home	181:14:5235:5244	4227818	8	True				
ANR	4227863	Statement	(	181:25:5246:5246	4227818	9	True				
ANR	4227864	Statement	R2_HOME_THEMES	181:26:5247:5260	4227818	10	True				
ANR	4227865	Statement	R_SYS_DIR	181:41:5262:5270	4227818	11	True				
ANR	4227866	Statement	)	181:50:5271:5271	4227818	12	True				
ANR	4227867	ExpressionStatement		181:51:5272:5272	4227818	13	True				
ANR	4227868	IfStatement	if ( path )		4227818	14					
ANR	4227869	Condition	path	182:5:5279:5282	4227818	0	True				
ANR	4227870	Identifier	path		4227818	0					
ANR	4227871	CompoundStatement		7:11:179:179	4227818	1					
ANR	4227872	ExpressionStatement	"list_themes_in_path ( list , path )"	183:2:5289:5321	4227818	0	True				
ANR	4227873	CallExpression	"list_themes_in_path ( list , path )"		4227818	0					
ANR	4227874	Callee	list_themes_in_path		4227818	0					
ANR	4227875	Identifier	list_themes_in_path		4227818	0					
ANR	4227876	ArgumentList	list		4227818	1					
ANR	4227877	Argument	list		4227818	0					
ANR	4227878	Identifier	list		4227818	0					
ANR	4227879	Argument	path		4227818	1					
ANR	4227880	Identifier	path		4227818	0					
ANR	4227881	ExpressionStatement	R_FREE ( path )	184:2:5325:5338	4227818	1	True				
ANR	4227882	CallExpression	R_FREE ( path )		4227818	0					
ANR	4227883	Callee	R_FREE		4227818	0					
ANR	4227884	Identifier	R_FREE		4227818	0					
ANR	4227885	ArgumentList	path		4227818	1					
ANR	4227886	Argument	path		4227818	0					
ANR	4227887	Identifier	path		4227818	0					
ANR	4227888	Statement	path	187:1:5345:5348	4227818	15	True				
ANR	4227889	Statement	=	187:6:5350:5350	4227818	16	True				
ANR	4227890	Statement	r_str_r2_prefix	187:8:5352:5366	4227818	17	True				
ANR	4227891	Statement	(	187:24:5368:5368	4227818	18	True				
ANR	4227892	Statement	R2_THEMES	187:25:5369:5377	4227818	19	True				
ANR	4227893	Statement	R_SYS_DIR	187:35:5379:5387	4227818	20	True				
ANR	4227894	Statement	)	187:44:5388:5388	4227818	21	True				
ANR	4227895	ExpressionStatement		187:45:5389:5389	4227818	22	True				
ANR	4227896	IfStatement	if ( path )		4227818	23					
ANR	4227897	Condition	path	188:5:5396:5399	4227818	0	True				
ANR	4227898	Identifier	path		4227818	0					
ANR	4227899	CompoundStatement		13:11:296:296	4227818	1					
ANR	4227900	ExpressionStatement	"list_themes_in_path ( list , path )"	189:2:5406:5438	4227818	0	True				
ANR	4227901	CallExpression	"list_themes_in_path ( list , path )"		4227818	0					
ANR	4227902	Callee	list_themes_in_path		4227818	0					
ANR	4227903	Identifier	list_themes_in_path		4227818	0					
ANR	4227904	ArgumentList	list		4227818	1					
ANR	4227905	Argument	list		4227818	0					
ANR	4227906	Identifier	list		4227818	0					
ANR	4227907	Argument	path		4227818	1					
ANR	4227908	Identifier	path		4227818	0					
ANR	4227909	ExpressionStatement	R_FREE ( path )	190:2:5442:5455	4227818	1	True				
ANR	4227910	CallExpression	R_FREE ( path )		4227818	0					
ANR	4227911	Callee	R_FREE		4227818	0					
ANR	4227912	Identifier	R_FREE		4227818	0					
ANR	4227913	ArgumentList	path		4227818	1					
ANR	4227914	Argument	path		4227818	0					
ANR	4227915	Identifier	path		4227818	0					
ANR	4227916	ReturnStatement	return list ;	193:1:5462:5473	4227818	24	True				
ANR	4227917	Identifier	list		4227818	0					
ANR	4227918	ReturnType	R_API RList *		4227818	1					
ANR	4227919	Identifier	r_core_list_themes		4227818	2					
ANR	4227920	ParameterList	RCore * core		4227818	3					
ANR	4227921	Parameter	RCore * core	176:32:5092:5102	4227818	0	True				
ANR	4227922	ParameterType	RCore *		4227818	0					
ANR	4227923	Identifier	core		4227818	1					
ANR	4227924	CFGEntryNode	ENTRY		4227818		True				
ANR	4227925	CFGExitNode	EXIT		4227818		True				
ANR	4227926	Symbol	core		4227818						
ANR	4227927	Symbol	path		4227818						
ANR	4227928	Symbol	r_list_newf		4227818						
ANR	4227929	Symbol	tmp		4227818						
ANR	4227930	Symbol	false		4227818						
ANR	4227931	Symbol	getNext		4227818						
ANR	4227932	Symbol	strdup		4227818						
ANR	4227933	Symbol	list		4227818						
ANR	4227934	Symbol	free		4227818						
ANR	4227935	Function	nextpal	196:0:5478:7491							
ANR	4227936	FunctionDef	"nextpal (RCore * core , int mode)"		4227935	0					
ANR	4227937	CompoundStatement		196:43:5521:7491	4227935	0					
ANR	4227938	IdentifierDeclStatement	RList * files = NULL ;	198:1:5597:5616	4227935	0	True				
ANR	4227939	IdentifierDecl	* files = NULL		4227935	0					
ANR	4227940	IdentifierDeclType	RList *		4227935	0					
ANR	4227941	Identifier	files		4227935	1					
ANR	4227942	AssignmentExpression	* files = NULL		4227935	2		=			
ANR	4227943	Identifier	NULL		4227935	0					
ANR	4227944	Identifier	NULL		4227935	1					
ANR	4227945	IdentifierDeclStatement	RListIter * iter ;	199:1:5619:5634	4227935	1	True				
ANR	4227946	IdentifierDecl	* iter		4227935	0					
ANR	4227947	IdentifierDeclType	RListIter *		4227935	0					
ANR	4227948	Identifier	iter		4227935	1					
ANR	4227949	IdentifierDeclStatement	const char * fn ;	200:1:5637:5651	4227935	2	True				
ANR	4227950	IdentifierDecl	* fn		4227935	0					
ANR	4227951	IdentifierDeclType	const char *		4227935	0					
ANR	4227952	Identifier	fn		4227935	1					
ANR	4227953	IdentifierDeclStatement	char * path = NULL ;	201:1:5654:5671	4227935	3	True				
ANR	4227954	IdentifierDecl	* path = NULL		4227935	0					
ANR	4227955	IdentifierDeclType	char *		4227935	0					
ANR	4227956	Identifier	path		4227935	1					
ANR	4227957	AssignmentExpression	* path = NULL		4227935	2		=			
ANR	4227958	Identifier	NULL		4227935	0					
ANR	4227959	Identifier	NULL		4227935	1					
ANR	4227960	IdentifierDeclStatement	int ctr = 0 ;	202:1:5674:5685	4227935	4	True				
ANR	4227961	IdentifierDecl	ctr = 0		4227935	0					
ANR	4227962	IdentifierDeclType	int		4227935	0					
ANR	4227963	Identifier	ctr		4227935	1					
ANR	4227964	AssignmentExpression	ctr = 0		4227935	2		=			
ANR	4227965	Identifier	ctr		4227935	0					
ANR	4227966	PrimaryExpression	0		4227935	1					
ANR	4227967	Statement	char	203:1:5688:5691	4227935	5	True				
ANR	4227968	Statement	*	203:6:5693:5693	4227935	6	True				
ANR	4227969	Statement	home	203:7:5694:5697	4227935	7	True				
ANR	4227970	Statement	=	203:12:5699:5699	4227935	8	True				
ANR	4227971	Statement	r_str_home	203:14:5701:5710	4227935	9	True				
ANR	4227972	Statement	(	203:25:5712:5712	4227935	10	True				
ANR	4227973	Statement	R2_HOME_THEMES	203:26:5713:5726	4227935	11	True				
ANR	4227974	Statement	R_SYS_DIR	203:41:5728:5736	4227935	12	True				
ANR	4227975	Statement	)	203:50:5737:5737	4227935	13	True				
ANR	4227976	ExpressionStatement		203:51:5738:5738	4227935	14	True				
ANR	4227977	ExpressionStatement	getNext = false	205:1:5742:5757	4227935	15	True				
ANR	4227978	AssignmentExpression	getNext = false		4227935	0		=			
ANR	4227979	Identifier	getNext		4227935	0					
ANR	4227980	Identifier	false		4227935	1					
ANR	4227981	IfStatement	if ( mode == 'j' )		4227935	16					
ANR	4227982	Condition	mode == 'j'	206:5:5764:5774	4227935	0	True				
ANR	4227983	EqualityExpression	mode == 'j'		4227935	0		==			
ANR	4227984	Identifier	mode		4227935	0					
ANR	4227985	PrimaryExpression	'j'		4227935	1					
ANR	4227986	CompoundStatement		11:18:255:255	4227935	1					
ANR	4227987	ExpressionStatement	"r_cons_printf ( ""["" )"	207:2:5781:5800	4227935	0	True				
ANR	4227988	CallExpression	"r_cons_printf ( ""["" )"		4227935	0					
ANR	4227989	Callee	r_cons_printf		4227935	0					
ANR	4227990	Identifier	r_cons_printf		4227935	0					
ANR	4227991	ArgumentList	"""["""		4227935	1					
ANR	4227992	Argument	"""["""		4227935	0					
ANR	4227993	PrimaryExpression	"""["""		4227935	0					
ANR	4227994	IfStatement	if ( home )		4227935	17					
ANR	4227995	Condition	home	209:5:5810:5813	4227935	0	True				
ANR	4227996	Identifier	home		4227935	0					
ANR	4227997	CompoundStatement		14:11:294:294	4227935	1					
ANR	4227998	ExpressionStatement	files = r_sys_dir ( home )	210:2:5820:5844	4227935	0	True				
ANR	4227999	AssignmentExpression	files = r_sys_dir ( home )		4227935	0		=			
ANR	4228000	Identifier	files		4227935	0					
ANR	4228001	CallExpression	r_sys_dir ( home )		4227935	1					
ANR	4228002	Callee	r_sys_dir		4227935	0					
ANR	4228003	Identifier	r_sys_dir		4227935	0					
ANR	4228004	ArgumentList	home		4227935	1					
ANR	4228005	Argument	home		4227935	0					
ANR	4228006	Identifier	home		4227935	0					
ANR	4228007	Statement	r_list_foreach	211:2:5848:5861	4227935	1	True				
ANR	4228008	Statement	(	211:17:5863:5863	4227935	2	True				
ANR	4228009	Statement	files	211:18:5864:5868	4227935	3	True				
ANR	4228010	Statement	","	211:23:5869:5869	4227935	4	True				
ANR	4228011	Statement	iter	211:25:5871:5874	4227935	5	True				
ANR	4228012	Statement	","	211:29:5875:5875	4227935	6	True				
ANR	4228013	Statement	fn	211:31:5877:5878	4227935	7	True				
ANR	4228014	Statement	)	211:33:5879:5879	4227935	8	True				
ANR	4228015	CompoundStatement		16:35:359:359	4227935	9					
ANR	4228016	IfStatement	if ( * fn && * fn != '.' )		4227935	0					
ANR	4228017	Condition	* fn && * fn != '.'	212:7:5890:5906	4227935	0	True				
ANR	4228018	AndExpression	* fn && * fn != '.'		4227935	0		&&			
ANR	4228019	UnaryOperationExpression	* fn		4227935	0					
ANR	4228020	UnaryOperator	*		4227935	0					
ANR	4228021	Identifier	fn		4227935	1					
ANR	4228022	EqualityExpression	* fn != '.'		4227935	1		!=			
ANR	4228023	UnaryOperationExpression	* fn		4227935	0					
ANR	4228024	UnaryOperator	*		4227935	0					
ANR	4228025	Identifier	fn		4227935	1					
ANR	4228026	PrimaryExpression	'.'		4227935	1					
ANR	4228027	CompoundStatement		17:26:387:387	4227935	1					
ANR	4228028	IfStatement	if ( mode == 'p' )		4227935	0					
ANR	4228029	Condition	mode == 'p'	213:8:5919:5929	4227935	0	True				
ANR	4228030	EqualityExpression	mode == 'p'		4227935	0		==			
ANR	4228031	Identifier	mode		4227935	0					
ANR	4228032	PrimaryExpression	'p'		4227935	1					
ANR	4228033	CompoundStatement		19:5:417:463	4227935	1					
ANR	4228034	IdentifierDeclStatement	const char * nfn = iter -> n ? iter -> n -> data : NULL ;	214:5:5939:5985	4227935	0	True				
ANR	4228035	IdentifierDecl	* nfn = iter -> n ? iter -> n -> data : NULL		4227935	0					
ANR	4228036	IdentifierDeclType	const char *		4227935	0					
ANR	4228037	Identifier	nfn		4227935	1					
ANR	4228038	AssignmentExpression	* nfn = iter -> n ? iter -> n -> data : NULL		4227935	2		=			
ANR	4228039	Identifier	nfn		4227935	0					
ANR	4228040	ConditionalExpression	iter -> n ? iter -> n -> data : NULL		4227935	1					
ANR	4228041	Condition	iter -> n		4227935	0					
ANR	4228042	PtrMemberAccess	iter -> n		4227935	0					
ANR	4228043	Identifier	iter		4227935	0					
ANR	4228044	Identifier	n		4227935	1					
ANR	4228045	PtrMemberAccess	iter -> n -> data		4227935	1					
ANR	4228046	PtrMemberAccess	iter -> n		4227935	0					
ANR	4228047	Identifier	iter		4227935	0					
ANR	4228048	Identifier	n		4227935	1					
ANR	4228049	Identifier	data		4227935	1					
ANR	4228050	Identifier	NULL		4227935	2					
ANR	4228051	IfStatement	if ( ! curtheme )		4227935	1					
ANR	4228052	Condition	! curtheme	215:9:5996:6004	4227935	0	True				
ANR	4228053	UnaryOperationExpression	! curtheme		4227935	0					
ANR	4228054	UnaryOperator	!		4227935	0					
ANR	4228055	Identifier	curtheme		4227935	1					
ANR	4228056	CompoundStatement		20:20:485:485	4227935	1					
ANR	4228057	ExpressionStatement	free ( home )	216:6:6015:6026	4227935	0	True				
ANR	4228058	CallExpression	free ( home )		4227935	0					
ANR	4228059	Callee	free		4227935	0					
ANR	4228060	Identifier	free		4227935	0					
ANR	4228061	ArgumentList	home		4227935	1					
ANR	4228062	Argument	home		4227935	0					
ANR	4228063	Identifier	home		4227935	0					
ANR	4228064	ExpressionStatement	r_list_free ( files )	217:6:6034:6053	4227935	1	True				
ANR	4228065	CallExpression	r_list_free ( files )		4227935	0					
ANR	4228066	Callee	r_list_free		4227935	0					
ANR	4228067	Identifier	r_list_free		4227935	0					
ANR	4228068	ArgumentList	files		4227935	1					
ANR	4228069	Argument	files		4227935	0					
ANR	4228070	Identifier	files		4227935	0					
ANR	4228071	ReturnStatement	return ;	218:6:6061:6067	4227935	2	True				
ANR	4228072	ExpressionStatement	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"	220:5:6081:6122	4227935	2	True				
ANR	4228073	CallExpression	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"		4227935	0					
ANR	4228074	Callee	eprintf		4227935	0					
ANR	4228075	Identifier	eprintf		4227935	0					
ANR	4228076	ArgumentList	"""%s %s %s\\n"""		4227935	1					
ANR	4228077	Argument	"""%s %s %s\\n"""		4227935	0					
ANR	4228078	PrimaryExpression	"""%s %s %s\\n"""		4227935	0					
ANR	4228079	Argument	nfn		4227935	1					
ANR	4228080	Identifier	nfn		4227935	0					
ANR	4228081	Argument	curtheme		4227935	2					
ANR	4228082	Identifier	curtheme		4227935	0					
ANR	4228083	Argument	fn		4227935	3					
ANR	4228084	Identifier	fn		4227935	0					
ANR	4228085	IfStatement	"if ( nfn && ! strcmp ( nfn , curtheme ) )"		4227935	3					
ANR	4228086	Condition	"nfn && ! strcmp ( nfn , curtheme )"	221:9:6133:6162	4227935	0	True				
ANR	4228087	AndExpression	"nfn && ! strcmp ( nfn , curtheme )"		4227935	0		&&			
ANR	4228088	Identifier	nfn		4227935	0					
ANR	4228089	UnaryOperationExpression	"! strcmp ( nfn , curtheme )"		4227935	1					
ANR	4228090	UnaryOperator	!		4227935	0					
ANR	4228091	CallExpression	"strcmp ( nfn , curtheme )"		4227935	1					
ANR	4228092	Callee	strcmp		4227935	0					
ANR	4228093	Identifier	strcmp		4227935	0					
ANR	4228094	ArgumentList	nfn		4227935	1					
ANR	4228095	Argument	nfn		4227935	0					
ANR	4228096	Identifier	nfn		4227935	0					
ANR	4228097	Argument	curtheme		4227935	1					
ANR	4228098	Identifier	curtheme		4227935	0					
ANR	4228099	CompoundStatement		26:41:643:643	4227935	1					
ANR	4228100	ExpressionStatement	r_list_free ( files )	222:6:6173:6192	4227935	0	True				
ANR	4228101	CallExpression	r_list_free ( files )		4227935	0					
ANR	4228102	Callee	r_list_free		4227935	0					
ANR	4228103	Identifier	r_list_free		4227935	0					
ANR	4228104	ArgumentList	files		4227935	1					
ANR	4228105	Argument	files		4227935	0					
ANR	4228106	Identifier	files		4227935	0					
ANR	4228107	ExpressionStatement	files = NULL	223:6:6200:6212	4227935	1	True				
ANR	4228108	AssignmentExpression	files = NULL		4227935	0		=			
ANR	4228109	Identifier	files		4227935	0					
ANR	4228110	Identifier	NULL		4227935	1					
ANR	4228111	ExpressionStatement	free ( curtheme )	224:6:6220:6235	4227935	2	True				
ANR	4228112	CallExpression	free ( curtheme )		4227935	0					
ANR	4228113	Callee	free		4227935	0					
ANR	4228114	Identifier	free		4227935	0					
ANR	4228115	ArgumentList	curtheme		4227935	1					
ANR	4228116	Argument	curtheme		4227935	0					
ANR	4228117	Identifier	curtheme		4227935	0					
ANR	4228118	ExpressionStatement	curtheme = strdup ( fn )	225:6:6243:6265	4227935	3	True				
ANR	4228119	AssignmentExpression	curtheme = strdup ( fn )		4227935	0		=			
ANR	4228120	Identifier	curtheme		4227935	0					
ANR	4228121	CallExpression	strdup ( fn )		4227935	1					
ANR	4228122	Callee	strdup		4227935	0					
ANR	4228123	Identifier	strdup		4227935	0					
ANR	4228124	ArgumentList	fn		4227935	1					
ANR	4228125	Argument	fn		4227935	0					
ANR	4228126	Identifier	fn		4227935	0					
ANR	4228127	ExpressionStatement	R_FREE ( home )	226:6:6273:6286	4227935	4	True				
ANR	4228128	CallExpression	R_FREE ( home )		4227935	0					
ANR	4228129	Callee	R_FREE		4227935	0					
ANR	4228130	Identifier	R_FREE		4227935	0					
ANR	4228131	ArgumentList	home		4227935	1					
ANR	4228132	Argument	home		4227935	0					
ANR	4228133	Identifier	home		4227935	0					
ANR	4228134	GotoStatement	goto done ;	227:6:6294:6303	4227935	5	True				
ANR	4228135	Identifier	done		4227935	0					
ANR	4228136	ElseStatement	else		4227935	0					
ANR	4228137	CompoundStatement		34:11:801:801	4227935	0					
ANR	4228138	IfStatement	"if ( ! nextpal_item ( core , mode , fn , ctr ++ ) )"		4227935	0					
ANR	4228139	Condition	"! nextpal_item ( core , mode , fn , ctr ++ )"	230:9:6334:6370	4227935	0	True				
ANR	4228140	UnaryOperationExpression	"! nextpal_item ( core , mode , fn , ctr ++ )"		4227935	0					
ANR	4228141	UnaryOperator	!		4227935	0					
ANR	4228142	CallExpression	"nextpal_item ( core , mode , fn , ctr ++ )"		4227935	1					
ANR	4228143	Callee	nextpal_item		4227935	0					
ANR	4228144	Identifier	nextpal_item		4227935	0					
ANR	4228145	ArgumentList	core		4227935	1					
ANR	4228146	Argument	core		4227935	0					
ANR	4228147	Identifier	core		4227935	0					
ANR	4228148	Argument	mode		4227935	1					
ANR	4228149	Identifier	mode		4227935	0					
ANR	4228150	Argument	fn		4227935	2					
ANR	4228151	Identifier	fn		4227935	0					
ANR	4228152	Argument	ctr ++		4227935	3					
ANR	4228153	PostIncDecOperationExpression	ctr ++		4227935	0					
ANR	4228154	Identifier	ctr		4227935	0					
ANR	4228155	IncDec	++		4227935	1					
ANR	4228156	CompoundStatement		35:48:851:851	4227935	1					
ANR	4228157	ExpressionStatement	r_list_free ( files )	231:6:6381:6400	4227935	0	True				
ANR	4228158	CallExpression	r_list_free ( files )		4227935	0					
ANR	4228159	Callee	r_list_free		4227935	0					
ANR	4228160	Identifier	r_list_free		4227935	0					
ANR	4228161	ArgumentList	files		4227935	1					
ANR	4228162	Argument	files		4227935	0					
ANR	4228163	Identifier	files		4227935	0					
ANR	4228164	ExpressionStatement	files = NULL	232:6:6408:6420	4227935	1	True				
ANR	4228165	AssignmentExpression	files = NULL		4227935	0		=			
ANR	4228166	Identifier	files		4227935	0					
ANR	4228167	Identifier	NULL		4227935	1					
ANR	4228168	ExpressionStatement	R_FREE ( home )	233:6:6428:6441	4227935	2	True				
ANR	4228169	CallExpression	R_FREE ( home )		4227935	0					
ANR	4228170	Callee	R_FREE		4227935	0					
ANR	4228171	Identifier	R_FREE		4227935	0					
ANR	4228172	ArgumentList	home		4227935	1					
ANR	4228173	Argument	home		4227935	0					
ANR	4228174	Identifier	home		4227935	0					
ANR	4228175	GotoStatement	goto done ;	234:6:6449:6458	4227935	3	True				
ANR	4228176	Identifier	done		4227935	0					
ANR	4228177	ExpressionStatement	r_list_free ( files )	239:2:6484:6503	4227935	10	True				
ANR	4228178	CallExpression	r_list_free ( files )		4227935	0					
ANR	4228179	Callee	r_list_free		4227935	0					
ANR	4228180	Identifier	r_list_free		4227935	0					
ANR	4228181	ArgumentList	files		4227935	1					
ANR	4228182	Argument	files		4227935	0					
ANR	4228183	Identifier	files		4227935	0					
ANR	4228184	ExpressionStatement	R_FREE ( home )	240:2:6507:6520	4227935	11	True				
ANR	4228185	CallExpression	R_FREE ( home )		4227935	0					
ANR	4228186	Callee	R_FREE		4227935	0					
ANR	4228187	Identifier	R_FREE		4227935	0					
ANR	4228188	ArgumentList	home		4227935	1					
ANR	4228189	Argument	home		4227935	0					
ANR	4228190	Identifier	home		4227935	0					
ANR	4228191	Statement	path	243:1:6527:6530	4227935	18	True				
ANR	4228192	Statement	=	243:6:6532:6532	4227935	19	True				
ANR	4228193	Statement	r_str_r2_prefix	243:8:6534:6548	4227935	20	True				
ANR	4228194	Statement	(	243:24:6550:6550	4227935	21	True				
ANR	4228195	Statement	R2_THEMES	243:25:6551:6559	4227935	22	True				
ANR	4228196	Statement	R_SYS_DIR	243:35:6561:6569	4227935	23	True				
ANR	4228197	Statement	)	243:44:6570:6570	4227935	24	True				
ANR	4228198	ExpressionStatement		243:45:6571:6571	4227935	25	True				
ANR	4228199	IfStatement	if ( path )		4227935	26					
ANR	4228200	Condition	path	244:5:6578:6581	4227935	0	True				
ANR	4228201	Identifier	path		4227935	0					
ANR	4228202	CompoundStatement		49:11:1062:1062	4227935	1					
ANR	4228203	ExpressionStatement	files = r_sys_dir ( path )	245:2:6588:6612	4227935	0	True				
ANR	4228204	AssignmentExpression	files = r_sys_dir ( path )		4227935	0		=			
ANR	4228205	Identifier	files		4227935	0					
ANR	4228206	CallExpression	r_sys_dir ( path )		4227935	1					
ANR	4228207	Callee	r_sys_dir		4227935	0					
ANR	4228208	Identifier	r_sys_dir		4227935	0					
ANR	4228209	ArgumentList	path		4227935	1					
ANR	4228210	Argument	path		4227935	0					
ANR	4228211	Identifier	path		4227935	0					
ANR	4228212	Statement	r_list_foreach	246:2:6616:6629	4227935	1	True				
ANR	4228213	Statement	(	246:17:6631:6631	4227935	2	True				
ANR	4228214	Statement	files	246:18:6632:6636	4227935	3	True				
ANR	4228215	Statement	","	246:23:6637:6637	4227935	4	True				
ANR	4228216	Statement	iter	246:25:6639:6642	4227935	5	True				
ANR	4228217	Statement	","	246:29:6643:6643	4227935	6	True				
ANR	4228218	Statement	fn	246:31:6645:6646	4227935	7	True				
ANR	4228219	Statement	)	246:33:6647:6647	4227935	8	True				
ANR	4228220	CompoundStatement		51:35:1127:1127	4227935	9					
ANR	4228221	IfStatement	if ( * fn && * fn != '.' )		4227935	0					
ANR	4228222	Condition	* fn && * fn != '.'	247:7:6658:6674	4227935	0	True				
ANR	4228223	AndExpression	* fn && * fn != '.'		4227935	0		&&			
ANR	4228224	UnaryOperationExpression	* fn		4227935	0					
ANR	4228225	UnaryOperator	*		4227935	0					
ANR	4228226	Identifier	fn		4227935	1					
ANR	4228227	EqualityExpression	* fn != '.'		4227935	1		!=			
ANR	4228228	UnaryOperationExpression	* fn		4227935	0					
ANR	4228229	UnaryOperator	*		4227935	0					
ANR	4228230	Identifier	fn		4227935	1					
ANR	4228231	PrimaryExpression	'.'		4227935	1					
ANR	4228232	CompoundStatement		52:26:1155:1155	4227935	1					
ANR	4228233	IfStatement	if ( mode == 'p' )		4227935	0					
ANR	4228234	Condition	mode == 'p'	248:8:6687:6697	4227935	0	True				
ANR	4228235	EqualityExpression	mode == 'p'		4227935	0		==			
ANR	4228236	Identifier	mode		4227935	0					
ANR	4228237	PrimaryExpression	'p'		4227935	1					
ANR	4228238	CompoundStatement		54:5:1185:1231	4227935	1					
ANR	4228239	IdentifierDeclStatement	const char * nfn = iter -> n ? iter -> n -> data : NULL ;	249:5:6707:6753	4227935	0	True				
ANR	4228240	IdentifierDecl	* nfn = iter -> n ? iter -> n -> data : NULL		4227935	0					
ANR	4228241	IdentifierDeclType	const char *		4227935	0					
ANR	4228242	Identifier	nfn		4227935	1					
ANR	4228243	AssignmentExpression	* nfn = iter -> n ? iter -> n -> data : NULL		4227935	2		=			
ANR	4228244	Identifier	nfn		4227935	0					
ANR	4228245	ConditionalExpression	iter -> n ? iter -> n -> data : NULL		4227935	1					
ANR	4228246	Condition	iter -> n		4227935	0					
ANR	4228247	PtrMemberAccess	iter -> n		4227935	0					
ANR	4228248	Identifier	iter		4227935	0					
ANR	4228249	Identifier	n		4227935	1					
ANR	4228250	PtrMemberAccess	iter -> n -> data		4227935	1					
ANR	4228251	PtrMemberAccess	iter -> n		4227935	0					
ANR	4228252	Identifier	iter		4227935	0					
ANR	4228253	Identifier	n		4227935	1					
ANR	4228254	Identifier	data		4227935	1					
ANR	4228255	Identifier	NULL		4227935	2					
ANR	4228256	IfStatement	if ( ! curtheme )		4227935	1					
ANR	4228257	Condition	! curtheme	250:9:6764:6772	4227935	0	True				
ANR	4228258	UnaryOperationExpression	! curtheme		4227935	0					
ANR	4228259	UnaryOperator	!		4227935	0					
ANR	4228260	Identifier	curtheme		4227935	1					
ANR	4228261	CompoundStatement		55:20:1253:1253	4227935	1					
ANR	4228262	ExpressionStatement	free ( home )	251:6:6783:6794	4227935	0	True				
ANR	4228263	CallExpression	free ( home )		4227935	0					
ANR	4228264	Callee	free		4227935	0					
ANR	4228265	Identifier	free		4227935	0					
ANR	4228266	ArgumentList	home		4227935	1					
ANR	4228267	Argument	home		4227935	0					
ANR	4228268	Identifier	home		4227935	0					
ANR	4228269	ExpressionStatement	r_list_free ( files )	252:6:6802:6821	4227935	1	True				
ANR	4228270	CallExpression	r_list_free ( files )		4227935	0					
ANR	4228271	Callee	r_list_free		4227935	0					
ANR	4228272	Identifier	r_list_free		4227935	0					
ANR	4228273	ArgumentList	files		4227935	1					
ANR	4228274	Argument	files		4227935	0					
ANR	4228275	Identifier	files		4227935	0					
ANR	4228276	ReturnStatement	return ;	253:6:6829:6835	4227935	2	True				
ANR	4228277	ExpressionStatement	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"	255:5:6849:6890	4227935	2	True				
ANR	4228278	CallExpression	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"		4227935	0					
ANR	4228279	Callee	eprintf		4227935	0					
ANR	4228280	Identifier	eprintf		4227935	0					
ANR	4228281	ArgumentList	"""%s %s %s\\n"""		4227935	1					
ANR	4228282	Argument	"""%s %s %s\\n"""		4227935	0					
ANR	4228283	PrimaryExpression	"""%s %s %s\\n"""		4227935	0					
ANR	4228284	Argument	nfn		4227935	1					
ANR	4228285	Identifier	nfn		4227935	0					
ANR	4228286	Argument	curtheme		4227935	2					
ANR	4228287	Identifier	curtheme		4227935	0					
ANR	4228288	Argument	fn		4227935	3					
ANR	4228289	Identifier	fn		4227935	0					
ANR	4228290	IfStatement	"if ( nfn && ! strcmp ( nfn , curtheme ) )"		4227935	3					
ANR	4228291	Condition	"nfn && ! strcmp ( nfn , curtheme )"	256:9:6901:6930	4227935	0	True				
ANR	4228292	AndExpression	"nfn && ! strcmp ( nfn , curtheme )"		4227935	0		&&			
ANR	4228293	Identifier	nfn		4227935	0					
ANR	4228294	UnaryOperationExpression	"! strcmp ( nfn , curtheme )"		4227935	1					
ANR	4228295	UnaryOperator	!		4227935	0					
ANR	4228296	CallExpression	"strcmp ( nfn , curtheme )"		4227935	1					
ANR	4228297	Callee	strcmp		4227935	0					
ANR	4228298	Identifier	strcmp		4227935	0					
ANR	4228299	ArgumentList	nfn		4227935	1					
ANR	4228300	Argument	nfn		4227935	0					
ANR	4228301	Identifier	nfn		4227935	0					
ANR	4228302	Argument	curtheme		4227935	1					
ANR	4228303	Identifier	curtheme		4227935	0					
ANR	4228304	CompoundStatement		61:41:1411:1411	4227935	1					
ANR	4228305	ExpressionStatement	free ( curtheme )	257:6:6941:6956	4227935	0	True				
ANR	4228306	CallExpression	free ( curtheme )		4227935	0					
ANR	4228307	Callee	free		4227935	0					
ANR	4228308	Identifier	free		4227935	0					
ANR	4228309	ArgumentList	curtheme		4227935	1					
ANR	4228310	Argument	curtheme		4227935	0					
ANR	4228311	Identifier	curtheme		4227935	0					
ANR	4228312	ExpressionStatement	curtheme = strdup ( fn )	258:6:6964:6986	4227935	1	True				
ANR	4228313	AssignmentExpression	curtheme = strdup ( fn )		4227935	0		=			
ANR	4228314	Identifier	curtheme		4227935	0					
ANR	4228315	CallExpression	strdup ( fn )		4227935	1					
ANR	4228316	Callee	strdup		4227935	0					
ANR	4228317	Identifier	strdup		4227935	0					
ANR	4228318	ArgumentList	fn		4227935	1					
ANR	4228319	Argument	fn		4227935	0					
ANR	4228320	Identifier	fn		4227935	0					
ANR	4228321	GotoStatement	goto done ;	259:6:6994:7003	4227935	2	True				
ANR	4228322	Identifier	done		4227935	0					
ANR	4228323	ElseStatement	else		4227935	0					
ANR	4228324	CompoundStatement		66:11:1501:1501	4227935	0					
ANR	4228325	IfStatement	"if ( ! nextpal_item ( core , mode , fn , ctr ++ ) )"		4227935	0					
ANR	4228326	Condition	"! nextpal_item ( core , mode , fn , ctr ++ )"	262:9:7034:7070	4227935	0	True				
ANR	4228327	UnaryOperationExpression	"! nextpal_item ( core , mode , fn , ctr ++ )"		4227935	0					
ANR	4228328	UnaryOperator	!		4227935	0					
ANR	4228329	CallExpression	"nextpal_item ( core , mode , fn , ctr ++ )"		4227935	1					
ANR	4228330	Callee	nextpal_item		4227935	0					
ANR	4228331	Identifier	nextpal_item		4227935	0					
ANR	4228332	ArgumentList	core		4227935	1					
ANR	4228333	Argument	core		4227935	0					
ANR	4228334	Identifier	core		4227935	0					
ANR	4228335	Argument	mode		4227935	1					
ANR	4228336	Identifier	mode		4227935	0					
ANR	4228337	Argument	fn		4227935	2					
ANR	4228338	Identifier	fn		4227935	0					
ANR	4228339	Argument	ctr ++		4227935	3					
ANR	4228340	PostIncDecOperationExpression	ctr ++		4227935	0					
ANR	4228341	Identifier	ctr		4227935	0					
ANR	4228342	IncDec	++		4227935	1					
ANR	4228343	CompoundStatement		67:48:1551:1551	4227935	1					
ANR	4228344	GotoStatement	goto done ;	263:6:7081:7090	4227935	0	True				
ANR	4228345	Identifier	done		4227935	0					
ANR	4228346	Label	done :	270:0:7118:7122	4227935	27	True				
ANR	4228347	Identifier	done		4227935	0					
ANR	4228348	ExpressionStatement	free ( path )	271:1:7125:7136	4227935	28	True				
ANR	4228349	CallExpression	free ( path )		4227935	0					
ANR	4228350	Callee	free		4227935	0					
ANR	4228351	Identifier	free		4227935	0					
ANR	4228352	ArgumentList	path		4227935	1					
ANR	4228353	Argument	path		4227935	0					
ANR	4228354	Identifier	path		4227935	0					
ANR	4228355	IfStatement	if ( getNext )		4227935	29					
ANR	4228356	Condition	getNext	272:5:7143:7149	4227935	0	True				
ANR	4228357	Identifier	getNext		4227935	0					
ANR	4228358	CompoundStatement		77:14:1630:1630	4227935	1					
ANR	4228359	ExpressionStatement	R_FREE ( curtheme )	273:2:7156:7173	4227935	0	True				
ANR	4228360	CallExpression	R_FREE ( curtheme )		4227935	0					
ANR	4228361	Callee	R_FREE		4227935	0					
ANR	4228362	Identifier	R_FREE		4227935	0					
ANR	4228363	ArgumentList	curtheme		4227935	1					
ANR	4228364	Argument	curtheme		4227935	0					
ANR	4228365	Identifier	curtheme		4227935	0					
ANR	4228366	ExpressionStatement	"nextpal ( core , mode )"	274:2:7177:7197	4227935	1	True				
ANR	4228367	CallExpression	"nextpal ( core , mode )"		4227935	0					
ANR	4228368	Callee	nextpal		4227935	0					
ANR	4228369	Identifier	nextpal		4227935	0					
ANR	4228370	ArgumentList	core		4227935	1					
ANR	4228371	Argument	core		4227935	0					
ANR	4228372	Identifier	core		4227935	0					
ANR	4228373	Argument	mode		4227935	1					
ANR	4228374	Identifier	mode		4227935	0					
ANR	4228375	ReturnStatement	return ;	275:2:7201:7207	4227935	2	True				
ANR	4228376	IfStatement	if ( mode == 'l' && ! curtheme && ! r_list_empty ( files ) )		4227935	30					
ANR	4228377	Condition	mode == 'l' && ! curtheme && ! r_list_empty ( files )	277:5:7217:7265	4227935	0	True				
ANR	4228378	AndExpression	mode == 'l' && ! curtheme && ! r_list_empty ( files )		4227935	0		&&			
ANR	4228379	EqualityExpression	mode == 'l'		4227935	0		==			
ANR	4228380	Identifier	mode		4227935	0					
ANR	4228381	PrimaryExpression	'l'		4227935	1					
ANR	4228382	AndExpression	! curtheme && ! r_list_empty ( files )		4227935	1		&&			
ANR	4228383	UnaryOperationExpression	! curtheme		4227935	0					
ANR	4228384	UnaryOperator	!		4227935	0					
ANR	4228385	Identifier	curtheme		4227935	1					
ANR	4228386	UnaryOperationExpression	! r_list_empty ( files )		4227935	1					
ANR	4228387	UnaryOperator	!		4227935	0					
ANR	4228388	CallExpression	r_list_empty ( files )		4227935	1					
ANR	4228389	Callee	r_list_empty		4227935	0					
ANR	4228390	Identifier	r_list_empty		4227935	0					
ANR	4228391	ArgumentList	files		4227935	1					
ANR	4228392	Argument	files		4227935	0					
ANR	4228393	Identifier	files		4227935	0					
ANR	4228394	CompoundStatement		82:56:1746:1746	4227935	1					
ANR	4228395	ElseStatement	else		4227935	0					
ANR	4228396	IfStatement	if ( mode == 'n' || mode == 'p' )		4227935	0					
ANR	4228397	Condition	mode == 'n' || mode == 'p'	279:12:7308:7333	4227935	0	True				
ANR	4228398	OrExpression	mode == 'n' || mode == 'p'		4227935	0		||			
ANR	4228399	EqualityExpression	mode == 'n'		4227935	0		==			
ANR	4228400	Identifier	mode		4227935	0					
ANR	4228401	PrimaryExpression	'n'		4227935	1					
ANR	4228402	EqualityExpression	mode == 'p'		4227935	1		==			
ANR	4228403	Identifier	mode		4227935	0					
ANR	4228404	PrimaryExpression	'p'		4227935	1					
ANR	4228405	CompoundStatement		84:40:1814:1814	4227935	1					
ANR	4228406	IfStatement	if ( curtheme )		4227935	0					
ANR	4228407	Condition	curtheme	280:6:7344:7351	4227935	0	True				
ANR	4228408	Identifier	curtheme		4227935	0					
ANR	4228409	CompoundStatement		85:16:1832:1832	4227935	1					
ANR	4228410	ExpressionStatement	"r_core_cmdf ( core , ""eco %s"" , curtheme )"	281:3:7359:7397	4227935	0	True				
ANR	4228411	CallExpression	"r_core_cmdf ( core , ""eco %s"" , curtheme )"		4227935	0					
ANR	4228412	Callee	r_core_cmdf		4227935	0					
ANR	4228413	Identifier	r_core_cmdf		4227935	0					
ANR	4228414	ArgumentList	core		4227935	1					
ANR	4228415	Argument	core		4227935	0					
ANR	4228416	Identifier	core		4227935	0					
ANR	4228417	Argument	"""eco %s"""		4227935	1					
ANR	4228418	PrimaryExpression	"""eco %s"""		4227935	0					
ANR	4228419	Argument	curtheme		4227935	2					
ANR	4228420	Identifier	curtheme		4227935	0					
ANR	4228421	ExpressionStatement	r_list_free ( files )	284:1:7407:7426	4227935	31	True				
ANR	4228422	CallExpression	r_list_free ( files )		4227935	0					
ANR	4228423	Callee	r_list_free		4227935	0					
ANR	4228424	Identifier	r_list_free		4227935	0					
ANR	4228425	ArgumentList	files		4227935	1					
ANR	4228426	Argument	files		4227935	0					
ANR	4228427	Identifier	files		4227935	0					
ANR	4228428	ExpressionStatement	files = NULL	285:1:7429:7441	4227935	32	True				
ANR	4228429	AssignmentExpression	files = NULL		4227935	0		=			
ANR	4228430	Identifier	files		4227935	0					
ANR	4228431	Identifier	NULL		4227935	1					
ANR	4228432	IfStatement	if ( mode == 'j' )		4227935	33					
ANR	4228433	Condition	mode == 'j'	286:5:7448:7458	4227935	0	True				
ANR	4228434	EqualityExpression	mode == 'j'		4227935	0		==			
ANR	4228435	Identifier	mode		4227935	0					
ANR	4228436	PrimaryExpression	'j'		4227935	1					
ANR	4228437	CompoundStatement		91:18:1939:1939	4227935	1					
ANR	4228438	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	287:2:7465:7486	4227935	0	True				
ANR	4228439	CallExpression	"r_cons_printf ( ""]\\n"" )"		4227935	0					
ANR	4228440	Callee	r_cons_printf		4227935	0					
ANR	4228441	Identifier	r_cons_printf		4227935	0					
ANR	4228442	ArgumentList	"""]\\n"""		4227935	1					
ANR	4228443	Argument	"""]\\n"""		4227935	0					
ANR	4228444	PrimaryExpression	"""]\\n"""		4227935	0					
ANR	4228445	ReturnType	static void		4227935	1					
ANR	4228446	Identifier	nextpal		4227935	2					
ANR	4228447	ParameterList	"RCore * core , int mode"		4227935	3					
ANR	4228448	Parameter	RCore * core	196:20:5498:5508	4227935	0	True				
ANR	4228449	ParameterType	RCore *		4227935	0					
ANR	4228450	Identifier	core		4227935	1					
ANR	4228451	Parameter	int mode	196:33:5511:5518	4227935	1	True				
ANR	4228452	ParameterType	int		4227935	0					
ANR	4228453	Identifier	mode		4227935	1					
ANR	4228454	CFGEntryNode	ENTRY		4227935		True				
ANR	4228455	CFGExitNode	EXIT		4227935		True				
ANR	4228456	Symbol	ctr		4227935						
ANR	4228457	Symbol	curtheme		4227935						
ANR	4228458	Symbol	strcmp		4227935						
ANR	4228459	Symbol	NULL		4227935						
ANR	4228460	Symbol	fn		4227935						
ANR	4228461	Symbol	false		4227935						
ANR	4228462	Symbol	iter		4227935						
ANR	4228463	Symbol	iter -> n -> data		4227935						
ANR	4228464	Symbol	getNext		4227935						
ANR	4228465	Symbol	* fn		4227935						
ANR	4228466	Symbol	home		4227935						
ANR	4228467	Symbol	mode		4227935						
ANR	4228468	Symbol	core		4227935						
ANR	4228469	Symbol	path		4227935						
ANR	4228470	Symbol	* iter		4227935						
ANR	4228471	Symbol	* iter -> n		4227935						
ANR	4228472	Symbol	iter -> n		4227935						
ANR	4228473	Symbol	nfn		4227935						
ANR	4228474	Symbol	files		4227935						
ANR	4228475	Symbol	r_list_empty		4227935						
ANR	4228476	Symbol	strdup		4227935						
ANR	4228477	Symbol	* * iter		4227935						
ANR	4228478	Symbol	nextpal_item		4227935						
ANR	4228479	Symbol	r_sys_dir		4227935						
ANR	4228480	Function	r_core_echo	291:0:7494:7825							
ANR	4228481	FunctionDef	"r_core_echo (RCore * core , const char * input)"		4228480	0					
ANR	4228482	CompoundStatement		291:55:7549:7825	4228480	0					
ANR	4228483	IfStatement	"if ( ! strncmp ( input , ""64 "" , 3 ) )"		4228480	0					
ANR	4228484	Condition	"! strncmp ( input , ""64 "" , 3 )"	292:5:7556:7581	4228480	0	True				
ANR	4228485	UnaryOperationExpression	"! strncmp ( input , ""64 "" , 3 )"		4228480	0					
ANR	4228486	UnaryOperator	!		4228480	0					
ANR	4228487	CallExpression	"strncmp ( input , ""64 "" , 3 )"		4228480	1					
ANR	4228488	Callee	strncmp		4228480	0					
ANR	4228489	Identifier	strncmp		4228480	0					
ANR	4228490	ArgumentList	input		4228480	1					
ANR	4228491	Argument	input		4228480	0					
ANR	4228492	Identifier	input		4228480	0					
ANR	4228493	Argument	"""64 """		4228480	1					
ANR	4228494	PrimaryExpression	"""64 """		4228480	0					
ANR	4228495	Argument	3		4228480	2					
ANR	4228496	PrimaryExpression	3		4228480	0					
ANR	4228497	CompoundStatement		3:2:38:64	4228480	1					
ANR	4228498	IdentifierDeclStatement	char * buf = strdup ( input ) ;	293:2:7588:7614	4228480	0	True				
ANR	4228499	IdentifierDecl	* buf = strdup ( input )		4228480	0					
ANR	4228500	IdentifierDeclType	char *		4228480	0					
ANR	4228501	Identifier	buf		4228480	1					
ANR	4228502	AssignmentExpression	* buf = strdup ( input )		4228480	2		=			
ANR	4228503	Identifier	buf		4228480	0					
ANR	4228504	CallExpression	strdup ( input )		4228480	1					
ANR	4228505	Callee	strdup		4228480	0					
ANR	4228506	Identifier	strdup		4228480	0					
ANR	4228507	ArgumentList	input		4228480	1					
ANR	4228508	Argument	input		4228480	0					
ANR	4228509	Identifier	input		4228480	0					
ANR	4228510	ExpressionStatement	"r_base64_decode ( ( ut8 * ) buf , input + 3 , - 1 )"	294:2:7618:7660	4228480	1	True				
ANR	4228511	CallExpression	"r_base64_decode ( ( ut8 * ) buf , input + 3 , - 1 )"		4228480	0					
ANR	4228512	Callee	r_base64_decode		4228480	0					
ANR	4228513	Identifier	r_base64_decode		4228480	0					
ANR	4228514	ArgumentList	( ut8 * ) buf		4228480	1					
ANR	4228515	Argument	( ut8 * ) buf		4228480	0					
ANR	4228516	CastExpression	( ut8 * ) buf		4228480	0					
ANR	4228517	CastTarget	ut8 *		4228480	0					
ANR	4228518	Identifier	buf		4228480	1					
ANR	4228519	Argument	input + 3		4228480	1					
ANR	4228520	AdditiveExpression	input + 3		4228480	0		+			
ANR	4228521	Identifier	input		4228480	0					
ANR	4228522	PrimaryExpression	3		4228480	1					
ANR	4228523	Argument	- 1		4228480	2					
ANR	4228524	UnaryOperationExpression	- 1		4228480	0					
ANR	4228525	UnaryOperator	-		4228480	0					
ANR	4228526	PrimaryExpression	1		4228480	1					
ANR	4228527	IfStatement	if ( * buf )		4228480	2					
ANR	4228528	Condition	* buf	295:6:7668:7671	4228480	0	True				
ANR	4228529	UnaryOperationExpression	* buf		4228480	0					
ANR	4228530	UnaryOperator	*		4228480	0					
ANR	4228531	Identifier	buf		4228480	1					
ANR	4228532	CompoundStatement		5:12:124:124	4228480	1					
ANR	4228533	ExpressionStatement	r_cons_echo ( buf )	296:3:7679:7696	4228480	0	True				
ANR	4228534	CallExpression	r_cons_echo ( buf )		4228480	0					
ANR	4228535	Callee	r_cons_echo		4228480	0					
ANR	4228536	Identifier	r_cons_echo		4228480	0					
ANR	4228537	ArgumentList	buf		4228480	1					
ANR	4228538	Argument	buf		4228480	0					
ANR	4228539	Identifier	buf		4228480	0					
ANR	4228540	ExpressionStatement	free ( buf )	298:2:7704:7714	4228480	3	True				
ANR	4228541	CallExpression	free ( buf )		4228480	0					
ANR	4228542	Callee	free		4228480	0					
ANR	4228543	Identifier	free		4228480	0					
ANR	4228544	ArgumentList	buf		4228480	1					
ANR	4228545	Argument	buf		4228480	0					
ANR	4228546	Identifier	buf		4228480	0					
ANR	4228547	ElseStatement	else		4228480	0					
ANR	4228548	CompoundStatement		10:2:178:207	4228480	0					
ANR	4228549	IdentifierDeclStatement	"char * p = strchr ( input , ' ' ) ;"	300:2:7728:7757	4228480	0	True				
ANR	4228550	IdentifierDecl	"* p = strchr ( input , ' ' )"		4228480	0					
ANR	4228551	IdentifierDeclType	char *		4228480	0					
ANR	4228552	Identifier	p		4228480	1					
ANR	4228553	AssignmentExpression	"* p = strchr ( input , ' ' )"		4228480	2		=			
ANR	4228554	Identifier	p		4228480	0					
ANR	4228555	CallExpression	"strchr ( input , ' ' )"		4228480	1					
ANR	4228556	Callee	strchr		4228480	0					
ANR	4228557	Identifier	strchr		4228480	0					
ANR	4228558	ArgumentList	input		4228480	1					
ANR	4228559	Argument	input		4228480	0					
ANR	4228560	Identifier	input		4228480	0					
ANR	4228561	Argument	' '		4228480	1					
ANR	4228562	PrimaryExpression	' '		4228480	0					
ANR	4228563	IfStatement	if ( p )		4228480	1					
ANR	4228564	Condition	p	301:6:7765:7765	4228480	0	True				
ANR	4228565	Identifier	p		4228480	0					
ANR	4228566	CompoundStatement		11:9:218:218	4228480	1					
ANR	4228567	ExpressionStatement	r_cons_strcat ( p + 1 )	302:3:7773:7794	4228480	0	True				
ANR	4228568	CallExpression	r_cons_strcat ( p + 1 )		4228480	0					
ANR	4228569	Callee	r_cons_strcat		4228480	0					
ANR	4228570	Identifier	r_cons_strcat		4228480	0					
ANR	4228571	ArgumentList	p + 1		4228480	1					
ANR	4228572	Argument	p + 1		4228480	0					
ANR	4228573	AdditiveExpression	p + 1		4228480	0		+			
ANR	4228574	Identifier	p		4228480	0					
ANR	4228575	PrimaryExpression	1		4228480	1					
ANR	4228576	ExpressionStatement	r_cons_newline ( )	303:3:7799:7816	4228480	1	True				
ANR	4228577	CallExpression	r_cons_newline ( )		4228480	0					
ANR	4228578	Callee	r_cons_newline		4228480	0					
ANR	4228579	Identifier	r_cons_newline		4228480	0					
ANR	4228580	ArgumentList			4228480	1					
ANR	4228581	ReturnType	R_API void		4228480	1					
ANR	4228582	Identifier	r_core_echo		4228480	2					
ANR	4228583	ParameterList	"RCore * core , const char * input"		4228480	3					
ANR	4228584	Parameter	RCore * core	291:23:7517:7527	4228480	0	True				
ANR	4228585	ParameterType	RCore *		4228480	0					
ANR	4228586	Identifier	core		4228480	1					
ANR	4228587	Parameter	const char * input	291:36:7530:7546	4228480	1	True				
ANR	4228588	ParameterType	const char *		4228480	0					
ANR	4228589	Identifier	input		4228480	1					
ANR	4228590	CFGEntryNode	ENTRY		4228480		True				
ANR	4228591	CFGExitNode	EXIT		4228480		True				
ANR	4228592	Symbol	p		4228480						
ANR	4228593	Symbol	core		4228480						
ANR	4228594	Symbol	input		4228480						
ANR	4228595	Symbol	strncmp		4228480						
ANR	4228596	Symbol	buf		4228480						
ANR	4228597	Symbol	* buf		4228480						
ANR	4228598	Symbol	strchr		4228480						
ANR	4228599	Symbol	strdup		4228480						
ANR	4228600	Function	cmd_eval	308:0:7828:15904							
ANR	4228601	FunctionDef	"cmd_eval (void * data , const char * input)"		4228600	0					
ANR	4228602	CompoundStatement		308:51:7879:15904	4228600	0					
ANR	4228603	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	309:1:7882:7909	4228600	0	True				
ANR	4228604	IdentifierDecl	* core = ( RCore * ) data		4228600	0					
ANR	4228605	IdentifierDeclType	RCore *		4228600	0					
ANR	4228606	Identifier	core		4228600	1					
ANR	4228607	AssignmentExpression	* core = ( RCore * ) data		4228600	2		=			
ANR	4228608	Identifier	core		4228600	0					
ANR	4228609	CastExpression	( RCore * ) data		4228600	1					
ANR	4228610	CastTarget	RCore *		4228600	0					
ANR	4228611	Identifier	data		4228600	1					
ANR	4228612	SwitchStatement	switch ( input [ 0 ] )		4228600	1					
ANR	4228613	Condition	input [ 0 ]	310:9:7920:7927	4228600	0	True				
ANR	4228614	ArrayIndexing	input [ 0 ]		4228600	0					
ANR	4228615	Identifier	input		4228600	0					
ANR	4228616	PrimaryExpression	0		4228600	1					
ANR	4228617	CompoundStatement		3:19:50:50	4228600	1					
ANR	4228618	Label	case '\\0' :	311:1:7933:7942	4228600	0	True				
ANR	4228619	ExpressionStatement	"r_config_list ( core -> config , NULL , 0 )"	312:2:7953:7990	4228600	1	True				
ANR	4228620	CallExpression	"r_config_list ( core -> config , NULL , 0 )"		4228600	0					
ANR	4228621	Callee	r_config_list		4228600	0					
ANR	4228622	Identifier	r_config_list		4228600	0					
ANR	4228623	ArgumentList	core -> config		4228600	1					
ANR	4228624	Argument	core -> config		4228600	0					
ANR	4228625	PtrMemberAccess	core -> config		4228600	0					
ANR	4228626	Identifier	core		4228600	0					
ANR	4228627	Identifier	config		4228600	1					
ANR	4228628	Argument	NULL		4228600	1					
ANR	4228629	Identifier	NULL		4228600	0					
ANR	4228630	Argument	0		4228600	2					
ANR	4228631	PrimaryExpression	0		4228600	0					
ANR	4228632	BreakStatement	break ;	313:2:7994:7999	4228600	2	True				
ANR	4228633	Label	case '?' :	314:1:8002:8010	4228600	3	True				
ANR	4228634	Label	default :	315:1:8021:8028	4228600	4	True				
ANR	4228635	Identifier	default		4228600	0					
ANR	4228636	SwitchStatement	switch ( input [ 1 ] )		4228600	5					
ANR	4228637	Condition	input [ 1 ]	316:10:8040:8047	4228600	0	True				
ANR	4228638	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4228639	Identifier	input		4228600	0					
ANR	4228640	PrimaryExpression	1		4228600	1					
ANR	4228641	CompoundStatement		9:20:170:170	4228600	1					
ANR	4228642	Label	case '\\0' :	317:2:8054:8063	4228600	0	True				
ANR	4228643	ExpressionStatement	"r_core_cmd_help ( core , help_msg_e )"	317:13:8065:8099	4228600	1	True				
ANR	4228644	CallExpression	"r_core_cmd_help ( core , help_msg_e )"		4228600	0					
ANR	4228645	Callee	r_core_cmd_help		4228600	0					
ANR	4228646	Identifier	r_core_cmd_help		4228600	0					
ANR	4228647	ArgumentList	core		4228600	1					
ANR	4228648	Argument	core		4228600	0					
ANR	4228649	Identifier	core		4228600	0					
ANR	4228650	Argument	help_msg_e		4228600	1					
ANR	4228651	Identifier	help_msg_e		4228600	0					
ANR	4228652	BreakStatement	break ;	317:49:8101:8106	4228600	2	True				
ANR	4228653	Label	case '?' :	318:2:8110:8118	4228600	3	True				
ANR	4228654	ExpressionStatement	"r_config_list ( core -> config , input + 2 , 2 )"	318:12:8120:8162	4228600	4	True				
ANR	4228655	CallExpression	"r_config_list ( core -> config , input + 2 , 2 )"		4228600	0					
ANR	4228656	Callee	r_config_list		4228600	0					
ANR	4228657	Identifier	r_config_list		4228600	0					
ANR	4228658	ArgumentList	core -> config		4228600	1					
ANR	4228659	Argument	core -> config		4228600	0					
ANR	4228660	PtrMemberAccess	core -> config		4228600	0					
ANR	4228661	Identifier	core		4228600	0					
ANR	4228662	Identifier	config		4228600	1					
ANR	4228663	Argument	input + 2		4228600	1					
ANR	4228664	AdditiveExpression	input + 2		4228600	0		+			
ANR	4228665	Identifier	input		4228600	0					
ANR	4228666	PrimaryExpression	2		4228600	1					
ANR	4228667	Argument	2		4228600	2					
ANR	4228668	PrimaryExpression	2		4228600	0					
ANR	4228669	BreakStatement	break ;	318:56:8164:8169	4228600	5	True				
ANR	4228670	Label	default :	319:2:8173:8180	4228600	6	True				
ANR	4228671	Identifier	default		4228600	0					
ANR	4228672	ExpressionStatement	"r_config_list ( core -> config , input + 1 , 2 )"	319:11:8182:8224	4228600	7	True				
ANR	4228673	CallExpression	"r_config_list ( core -> config , input + 1 , 2 )"		4228600	0					
ANR	4228674	Callee	r_config_list		4228600	0					
ANR	4228675	Identifier	r_config_list		4228600	0					
ANR	4228676	ArgumentList	core -> config		4228600	1					
ANR	4228677	Argument	core -> config		4228600	0					
ANR	4228678	PtrMemberAccess	core -> config		4228600	0					
ANR	4228679	Identifier	core		4228600	0					
ANR	4228680	Identifier	config		4228600	1					
ANR	4228681	Argument	input + 1		4228600	1					
ANR	4228682	AdditiveExpression	input + 1		4228600	0		+			
ANR	4228683	Identifier	input		4228600	0					
ANR	4228684	PrimaryExpression	1		4228600	1					
ANR	4228685	Argument	2		4228600	2					
ANR	4228686	PrimaryExpression	2		4228600	0					
ANR	4228687	BreakStatement	break ;	319:55:8226:8231	4228600	8	True				
ANR	4228688	BreakStatement	break ;	321:2:8239:8244	4228600	6	True				
ANR	4228689	Label	case 't' :	322:1:8247:8255	4228600	7	True				
ANR	4228690	IfStatement	if ( input [ 1 ] == 'a' )		4228600	8					
ANR	4228691	Condition	input [ 1 ] == 'a'	323:6:8271:8285	4228600	0	True				
ANR	4228692	EqualityExpression	input [ 1 ] == 'a'		4228600	0		==			
ANR	4228693	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4228694	Identifier	input		4228600	0					
ANR	4228695	PrimaryExpression	1		4228600	1					
ANR	4228696	PrimaryExpression	'a'		4228600	1					
ANR	4228697	CompoundStatement		16:23:408:408	4228600	1					
ANR	4228698	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"" )"	324:3:8293:8352	4228600	0	True				
ANR	4228699	CallExpression	"r_cons_printf ( ""%s\\n"" , ( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"" )"		4228600	0					
ANR	4228700	Callee	r_cons_printf		4228600	0					
ANR	4228701	Identifier	r_cons_printf		4228600	0					
ANR	4228702	ArgumentList	"""%s\\n"""		4228600	1					
ANR	4228703	Argument	"""%s\\n"""		4228600	0					
ANR	4228704	PrimaryExpression	"""%s\\n"""		4228600	0					
ANR	4228705	Argument	"( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"""		4228600	1					
ANR	4228706	ConditionalExpression	"( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"""		4228600	0					
ANR	4228707	Condition	r_num_rand ( 10 ) % 2		4228600	0					
ANR	4228708	MultiplicativeExpression	r_num_rand ( 10 ) % 2		4228600	0		%			
ANR	4228709	CallExpression	r_num_rand ( 10 )		4228600	0					
ANR	4228710	Callee	r_num_rand		4228600	0					
ANR	4228711	Identifier	r_num_rand		4228600	0					
ANR	4228712	ArgumentList	10		4228600	1					
ANR	4228713	Argument	10		4228600	0					
ANR	4228714	PrimaryExpression	10		4228600	0					
ANR	4228715	PrimaryExpression	2		4228600	1					
ANR	4228716	PrimaryExpression	"""wen"""		4228600	1					
ANR	4228717	PrimaryExpression	"""son"""		4228600	2					
ANR	4228718	ElseStatement	else		4228600	0					
ANR	4228719	IfStatement	if ( input [ 1 ] == ' ' && input [ 2 ] )		4228600	0					
ANR	4228720	Condition	input [ 1 ] == ' ' && input [ 2 ]	325:13:8367:8391	4228600	0	True				
ANR	4228721	AndExpression	input [ 1 ] == ' ' && input [ 2 ]		4228600	0		&&			
ANR	4228722	EqualityExpression	input [ 1 ] == ' '		4228600	0		==			
ANR	4228723	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4228724	Identifier	input		4228600	0					
ANR	4228725	PrimaryExpression	1		4228600	1					
ANR	4228726	PrimaryExpression	' '		4228600	1					
ANR	4228727	ArrayIndexing	input [ 2 ]		4228600	1					
ANR	4228728	Identifier	input		4228600	0					
ANR	4228729	PrimaryExpression	2		4228600	1					
ANR	4228730	CompoundStatement		19:3:519:580	4228600	1					
ANR	4228731	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( core -> config , input + 2 ) ;"	326:3:8399:8460	4228600	0	True				
ANR	4228732	IdentifierDecl	"* node = r_config_node_get ( core -> config , input + 2 )"		4228600	0					
ANR	4228733	IdentifierDeclType	RConfigNode *		4228600	0					
ANR	4228734	Identifier	node		4228600	1					
ANR	4228735	AssignmentExpression	"* node = r_config_node_get ( core -> config , input + 2 )"		4228600	2		=			
ANR	4228736	Identifier	node		4228600	0					
ANR	4228737	CallExpression	"r_config_node_get ( core -> config , input + 2 )"		4228600	1					
ANR	4228738	Callee	r_config_node_get		4228600	0					
ANR	4228739	Identifier	r_config_node_get		4228600	0					
ANR	4228740	ArgumentList	core -> config		4228600	1					
ANR	4228741	Argument	core -> config		4228600	0					
ANR	4228742	PtrMemberAccess	core -> config		4228600	0					
ANR	4228743	Identifier	core		4228600	0					
ANR	4228744	Identifier	config		4228600	1					
ANR	4228745	Argument	input + 2		4228600	1					
ANR	4228746	AdditiveExpression	input + 2		4228600	0		+			
ANR	4228747	Identifier	input		4228600	0					
ANR	4228748	PrimaryExpression	2		4228600	1					
ANR	4228749	IfStatement	if ( node )		4228600	1					
ANR	4228750	Condition	node	327:7:8469:8472	4228600	0	True				
ANR	4228751	Identifier	node		4228600	0					
ANR	4228752	CompoundStatement		21:4:601:645	4228600	1					
ANR	4228753	IdentifierDeclStatement	const char * type = r_config_node_type ( node ) ;	328:4:8481:8525	4228600	0	True				
ANR	4228754	IdentifierDecl	* type = r_config_node_type ( node )		4228600	0					
ANR	4228755	IdentifierDeclType	const char *		4228600	0					
ANR	4228756	Identifier	type		4228600	1					
ANR	4228757	AssignmentExpression	* type = r_config_node_type ( node )		4228600	2		=			
ANR	4228758	Identifier	type		4228600	0					
ANR	4228759	CallExpression	r_config_node_type ( node )		4228600	1					
ANR	4228760	Callee	r_config_node_type		4228600	0					
ANR	4228761	Identifier	r_config_node_type		4228600	0					
ANR	4228762	ArgumentList	node		4228600	1					
ANR	4228763	Argument	node		4228600	0					
ANR	4228764	Identifier	node		4228600	0					
ANR	4228765	IfStatement	if ( type && * type )		4228600	1					
ANR	4228766	Condition	type && * type	329:8:8535:8547	4228600	0	True				
ANR	4228767	AndExpression	type && * type		4228600	0		&&			
ANR	4228768	Identifier	type		4228600	0					
ANR	4228769	UnaryOperationExpression	* type		4228600	1					
ANR	4228770	UnaryOperator	*		4228600	0					
ANR	4228771	Identifier	type		4228600	1					
ANR	4228772	CompoundStatement		22:23:670:670	4228600	1					
ANR	4228773	ExpressionStatement	r_cons_println ( type )	330:5:8557:8578	4228600	0	True				
ANR	4228774	CallExpression	r_cons_println ( type )		4228600	0					
ANR	4228775	Callee	r_cons_println		4228600	0					
ANR	4228776	Identifier	r_cons_println		4228600	0					
ANR	4228777	ArgumentList	type		4228600	1					
ANR	4228778	Argument	type		4228600	0					
ANR	4228779	Identifier	type		4228600	0					
ANR	4228780	ElseStatement	else		4228600	0					
ANR	4228781	CompoundStatement		26:9:720:720	4228600	0					
ANR	4228782	ExpressionStatement	"eprintf ( ""Usage: et [varname]  ; show type of eval var\\n"" )"	334:3:8605:8663	4228600	0	True				
ANR	4228783	CallExpression	"eprintf ( ""Usage: et [varname]  ; show type of eval var\\n"" )"		4228600	0					
ANR	4228784	Callee	eprintf		4228600	0					
ANR	4228785	Identifier	eprintf		4228600	0					
ANR	4228786	ArgumentList	"""Usage: et [varname]  ; show type of eval var\\n"""		4228600	1					
ANR	4228787	Argument	"""Usage: et [varname]  ; show type of eval var\\n"""		4228600	0					
ANR	4228788	PrimaryExpression	"""Usage: et [varname]  ; show type of eval var\\n"""		4228600	0					
ANR	4228789	BreakStatement	break ;	336:2:8671:8676	4228600	9	True				
ANR	4228790	Label	case 'n' :	337:1:8679:8687	4228600	10	True				
ANR	4228791	IfStatement	"if ( ! strchr ( input , '=' ) )"		4228600	11					
ANR	4228792	Condition	"! strchr ( input , '=' )"	338:6:8703:8722	4228600	0	True				
ANR	4228793	UnaryOperationExpression	"! strchr ( input , '=' )"		4228600	0					
ANR	4228794	UnaryOperator	!		4228600	0					
ANR	4228795	CallExpression	"strchr ( input , '=' )"		4228600	1					
ANR	4228796	Callee	strchr		4228600	0					
ANR	4228797	Identifier	strchr		4228600	0					
ANR	4228798	ArgumentList	input		4228600	1					
ANR	4228799	Argument	input		4228600	0					
ANR	4228800	Identifier	input		4228600	0					
ANR	4228801	Argument	'='		4228600	1					
ANR	4228802	PrimaryExpression	'='		4228600	0					
ANR	4228803	CompoundStatement		32:3:850:863	4228600	1					
ANR	4228804	IdentifierDeclStatement	"char * var , * p ;"	339:3:8730:8743	4228600	0	True				
ANR	4228805	IdentifierDecl	* var		4228600	0					
ANR	4228806	IdentifierDeclType	char *		4228600	0					
ANR	4228807	Identifier	var		4228600	1					
ANR	4228808	IdentifierDecl	* p		4228600	1					
ANR	4228809	IdentifierDeclType	char *		4228600	0					
ANR	4228810	Identifier	p		4228600	1					
ANR	4228811	ExpressionStatement	"var = strchr ( input , ' ' )"	340:3:8748:8773	4228600	1	True				
ANR	4228812	AssignmentExpression	"var = strchr ( input , ' ' )"		4228600	0		=			
ANR	4228813	Identifier	var		4228600	0					
ANR	4228814	CallExpression	"strchr ( input , ' ' )"		4228600	1					
ANR	4228815	Callee	strchr		4228600	0					
ANR	4228816	Identifier	strchr		4228600	0					
ANR	4228817	ArgumentList	input		4228600	1					
ANR	4228818	Argument	input		4228600	0					
ANR	4228819	Identifier	input		4228600	0					
ANR	4228820	Argument	' '		4228600	1					
ANR	4228821	PrimaryExpression	' '		4228600	0					
ANR	4228822	IfStatement	if ( var )		4228600	2					
ANR	4228823	Condition	var	341:7:8782:8784	4228600	0	True				
ANR	4228824	Identifier	var		4228600	0					
ANR	4228825	WhileStatement	while ( * var == ' ' )		4228600	1					
ANR	4228826	Condition	* var == ' '	341:19:8794:8802	4228600	0	True				
ANR	4228827	EqualityExpression	* var == ' '		4228600	0		==			
ANR	4228828	UnaryOperationExpression	* var		4228600	0					
ANR	4228829	UnaryOperator	*		4228600	0					
ANR	4228830	Identifier	var		4228600	1					
ANR	4228831	PrimaryExpression	' '		4228600	1					
ANR	4228832	ExpressionStatement	var ++	341:30:8805:8810	4228600	1	True				
ANR	4228833	PostIncDecOperationExpression	var ++		4228600	0					
ANR	4228834	Identifier	var		4228600	0					
ANR	4228835	IncDec	++		4228600	1					
ANR	4228836	ExpressionStatement	p = r_sys_getenv ( var )	342:3:8815:8837	4228600	3	True				
ANR	4228837	AssignmentExpression	p = r_sys_getenv ( var )		4228600	0		=			
ANR	4228838	Identifier	p		4228600	0					
ANR	4228839	CallExpression	r_sys_getenv ( var )		4228600	1					
ANR	4228840	Callee	r_sys_getenv		4228600	0					
ANR	4228841	Identifier	r_sys_getenv		4228600	0					
ANR	4228842	ArgumentList	var		4228600	1					
ANR	4228843	Argument	var		4228600	0					
ANR	4228844	Identifier	var		4228600	0					
ANR	4228845	IfStatement	if ( p )		4228600	4					
ANR	4228846	Condition	p	343:7:8846:8846	4228600	0	True				
ANR	4228847	Identifier	p		4228600	0					
ANR	4228848	CompoundStatement		36:10:969:969	4228600	1					
ANR	4228849	ExpressionStatement	r_cons_println ( p )	344:4:8855:8873	4228600	0	True				
ANR	4228850	CallExpression	r_cons_println ( p )		4228600	0					
ANR	4228851	Callee	r_cons_println		4228600	0					
ANR	4228852	Identifier	r_cons_println		4228600	0					
ANR	4228853	ArgumentList	p		4228600	1					
ANR	4228854	Argument	p		4228600	0					
ANR	4228855	Identifier	p		4228600	0					
ANR	4228856	ExpressionStatement	free ( p )	345:4:8879:8887	4228600	1	True				
ANR	4228857	CallExpression	free ( p )		4228600	0					
ANR	4228858	Callee	free		4228600	0					
ANR	4228859	Identifier	free		4228600	0					
ANR	4228860	ArgumentList	p		4228600	1					
ANR	4228861	Argument	p		4228600	0					
ANR	4228862	Identifier	p		4228600	0					
ANR	4228863	ElseStatement	else		4228600	0					
ANR	4228864	CompoundStatement		40:4:1025:1056	4228600	0					
ANR	4228865	IdentifierDeclStatement	char * * e = r_sys_get_environ ( ) ;	347:4:8905:8936	4228600	0	True				
ANR	4228866	IdentifierDecl	* * e = r_sys_get_environ ( )		4228600	0					
ANR	4228867	IdentifierDeclType	char * *		4228600	0					
ANR	4228868	Identifier	e		4228600	1					
ANR	4228869	AssignmentExpression	* * e = r_sys_get_environ ( )		4228600	2		=			
ANR	4228870	Identifier	e		4228600	0					
ANR	4228871	CallExpression	r_sys_get_environ ( )		4228600	1					
ANR	4228872	Callee	r_sys_get_environ		4228600	0					
ANR	4228873	Identifier	r_sys_get_environ		4228600	0					
ANR	4228874	ArgumentList			4228600	1					
ANR	4228875	WhileStatement	while ( e && * e )		4228600	1					
ANR	4228876	Condition	e && * e	348:11:8949:8955	4228600	0	True				
ANR	4228877	AndExpression	e && * e		4228600	0		&&			
ANR	4228878	Identifier	e		4228600	0					
ANR	4228879	UnaryOperationExpression	* e		4228600	1					
ANR	4228880	UnaryOperator	*		4228600	0					
ANR	4228881	Identifier	e		4228600	1					
ANR	4228882	CompoundStatement		41:20:1078:1078	4228600	1					
ANR	4228883	ExpressionStatement	r_cons_println ( * e )	349:5:8965:8984	4228600	0	True				
ANR	4228884	CallExpression	r_cons_println ( * e )		4228600	0					
ANR	4228885	Callee	r_cons_println		4228600	0					
ANR	4228886	Identifier	r_cons_println		4228600	0					
ANR	4228887	ArgumentList	* e		4228600	1					
ANR	4228888	Argument	* e		4228600	0					
ANR	4228889	UnaryOperationExpression	* e		4228600	0					
ANR	4228890	UnaryOperator	*		4228600	0					
ANR	4228891	Identifier	e		4228600	1					
ANR	4228892	ExpressionStatement	e ++	350:5:8991:8994	4228600	1	True				
ANR	4228893	PostIncDecOperationExpression	e ++		4228600	0					
ANR	4228894	Identifier	e		4228600	0					
ANR	4228895	IncDec	++		4228600	1					
ANR	4228896	ElseStatement	else		4228600	0					
ANR	4228897	IfStatement	if ( strlen ( input ) > 3 )		4228600	0					
ANR	4228898	Condition	strlen ( input ) > 3	353:13:9020:9035	4228600	0	True				
ANR	4228899	RelationalExpression	strlen ( input ) > 3		4228600	0		>			
ANR	4228900	CallExpression	strlen ( input )		4228600	0					
ANR	4228901	Callee	strlen		4228600	0					
ANR	4228902	Identifier	strlen		4228600	0					
ANR	4228903	ArgumentList	input		4228600	1					
ANR	4228904	Argument	input		4228600	0					
ANR	4228905	Identifier	input		4228600	0					
ANR	4228906	PrimaryExpression	3		4228600	1					
ANR	4228907	CompoundStatement		47:3:1163:1193	4228600	1					
ANR	4228908	IdentifierDeclStatement	"char * v , * k = strdup ( input + 3 ) ;"	354:3:9043:9073	4228600	0	True				
ANR	4228909	IdentifierDecl	* v		4228600	0					
ANR	4228910	IdentifierDeclType	char *		4228600	0					
ANR	4228911	Identifier	v		4228600	1					
ANR	4228912	IdentifierDecl	* k = strdup ( input + 3 )		4228600	1					
ANR	4228913	IdentifierDeclType	char *		4228600	0					
ANR	4228914	Identifier	k		4228600	1					
ANR	4228915	AssignmentExpression	* k = strdup ( input + 3 )		4228600	2		=			
ANR	4228916	Identifier	k		4228600	0					
ANR	4228917	CallExpression	strdup ( input + 3 )		4228600	1					
ANR	4228918	Callee	strdup		4228600	0					
ANR	4228919	Identifier	strdup		4228600	0					
ANR	4228920	ArgumentList	input + 3		4228600	1					
ANR	4228921	Argument	input + 3		4228600	0					
ANR	4228922	AdditiveExpression	input + 3		4228600	0		+			
ANR	4228923	Identifier	input		4228600	0					
ANR	4228924	PrimaryExpression	3		4228600	1					
ANR	4228925	IfStatement	if ( ! k )		4228600	1					
ANR	4228926	Condition	! k	355:7:9082:9083	4228600	0	True				
ANR	4228927	UnaryOperationExpression	! k		4228600	0					
ANR	4228928	UnaryOperator	!		4228600	0					
ANR	4228929	Identifier	k		4228600	1					
ANR	4228930	BreakStatement	break ;	355:11:9086:9091	4228600	1	True				
ANR	4228931	ExpressionStatement	"v = strchr ( k , '=' )"	356:3:9096:9115	4228600	2	True				
ANR	4228932	AssignmentExpression	"v = strchr ( k , '=' )"		4228600	0		=			
ANR	4228933	Identifier	v		4228600	0					
ANR	4228934	CallExpression	"strchr ( k , '=' )"		4228600	1					
ANR	4228935	Callee	strchr		4228600	0					
ANR	4228936	Identifier	strchr		4228600	0					
ANR	4228937	ArgumentList	k		4228600	1					
ANR	4228938	Argument	k		4228600	0					
ANR	4228939	Identifier	k		4228600	0					
ANR	4228940	Argument	'='		4228600	1					
ANR	4228941	PrimaryExpression	'='		4228600	0					
ANR	4228942	IfStatement	if ( v )		4228600	3					
ANR	4228943	Condition	v	357:7:9124:9124	4228600	0	True				
ANR	4228944	Identifier	v		4228600	0					
ANR	4228945	CompoundStatement		50:10:1247:1247	4228600	1					
ANR	4228946	ExpressionStatement	* v ++ = 0	358:4:9133:9141	4228600	0	True				
ANR	4228947	AssignmentExpression	* v ++ = 0		4228600	0		=			
ANR	4228948	UnaryOperationExpression	* v ++		4228600	0					
ANR	4228949	UnaryOperator	*		4228600	0					
ANR	4228950	PostIncDecOperationExpression	v ++		4228600	1					
ANR	4228951	Identifier	v		4228600	0					
ANR	4228952	IncDec	++		4228600	1					
ANR	4228953	PrimaryExpression	0		4228600	1					
ANR	4228954	ExpressionStatement	"r_sys_setenv ( k , v )"	359:4:9147:9166	4228600	1	True				
ANR	4228955	CallExpression	"r_sys_setenv ( k , v )"		4228600	0					
ANR	4228956	Callee	r_sys_setenv		4228600	0					
ANR	4228957	Identifier	r_sys_setenv		4228600	0					
ANR	4228958	ArgumentList	k		4228600	1					
ANR	4228959	Argument	k		4228600	0					
ANR	4228960	Identifier	k		4228600	0					
ANR	4228961	Argument	v		4228600	1					
ANR	4228962	Identifier	v		4228600	0					
ANR	4228963	ExpressionStatement	free ( k )	361:3:9176:9184	4228600	4	True				
ANR	4228964	CallExpression	free ( k )		4228600	0					
ANR	4228965	Callee	free		4228600	0					
ANR	4228966	Identifier	free		4228600	0					
ANR	4228967	ArgumentList	k		4228600	1					
ANR	4228968	Argument	k		4228600	0					
ANR	4228969	Identifier	k		4228600	0					
ANR	4228970	ReturnStatement	return true ;	363:2:9192:9203	4228600	12	True				
ANR	4228971	Identifier	true		4228600	0					
ANR	4228972	Label	case 'x' :	364:1:9206:9214	4228600	13	True				
ANR	4228973	ReturnStatement	"return cmd_quit ( data , """" ) ;"	366:2:9274:9300	4228600	14	True				
ANR	4228974	CallExpression	"cmd_quit ( data , """" )"		4228600	0					
ANR	4228975	Callee	cmd_quit		4228600	0					
ANR	4228976	Identifier	cmd_quit		4228600	0					
ANR	4228977	ArgumentList	data		4228600	1					
ANR	4228978	Argument	data		4228600	0					
ANR	4228979	Identifier	data		4228600	0					
ANR	4228980	Argument	""""""		4228600	1					
ANR	4228981	PrimaryExpression	""""""		4228600	0					
ANR	4228982	Label	case 'j' :	367:1:9303:9311	4228600	15	True				
ANR	4228983	ExpressionStatement	"r_config_list ( core -> config , NULL , 'j' )"	368:2:9323:9362	4228600	16	True				
ANR	4228984	CallExpression	"r_config_list ( core -> config , NULL , 'j' )"		4228600	0					
ANR	4228985	Callee	r_config_list		4228600	0					
ANR	4228986	Identifier	r_config_list		4228600	0					
ANR	4228987	ArgumentList	core -> config		4228600	1					
ANR	4228988	Argument	core -> config		4228600	0					
ANR	4228989	PtrMemberAccess	core -> config		4228600	0					
ANR	4228990	Identifier	core		4228600	0					
ANR	4228991	Identifier	config		4228600	1					
ANR	4228992	Argument	NULL		4228600	1					
ANR	4228993	Identifier	NULL		4228600	0					
ANR	4228994	Argument	'j'		4228600	2					
ANR	4228995	PrimaryExpression	'j'		4228600	0					
ANR	4228996	BreakStatement	break ;	369:2:9366:9371	4228600	17	True				
ANR	4228997	Label	case 'v' :	370:1:9374:9382	4228600	18	True				
ANR	4228998	ExpressionStatement	"r_config_list ( core -> config , input + 1 , 'v' )"	371:2:9397:9441	4228600	19	True				
ANR	4228999	CallExpression	"r_config_list ( core -> config , input + 1 , 'v' )"		4228600	0					
ANR	4229000	Callee	r_config_list		4228600	0					
ANR	4229001	Identifier	r_config_list		4228600	0					
ANR	4229002	ArgumentList	core -> config		4228600	1					
ANR	4229003	Argument	core -> config		4228600	0					
ANR	4229004	PtrMemberAccess	core -> config		4228600	0					
ANR	4229005	Identifier	core		4228600	0					
ANR	4229006	Identifier	config		4228600	1					
ANR	4229007	Argument	input + 1		4228600	1					
ANR	4229008	AdditiveExpression	input + 1		4228600	0		+			
ANR	4229009	Identifier	input		4228600	0					
ANR	4229010	PrimaryExpression	1		4228600	1					
ANR	4229011	Argument	'v'		4228600	2					
ANR	4229012	PrimaryExpression	'v'		4228600	0					
ANR	4229013	BreakStatement	break ;	372:2:9445:9450	4228600	20	True				
ANR	4229014	Label	case 'q' :	373:1:9453:9461	4228600	21	True				
ANR	4229015	ExpressionStatement	"r_config_list ( core -> config , NULL , 'q' )"	374:2:9492:9531	4228600	22	True				
ANR	4229016	CallExpression	"r_config_list ( core -> config , NULL , 'q' )"		4228600	0					
ANR	4229017	Callee	r_config_list		4228600	0					
ANR	4229018	Identifier	r_config_list		4228600	0					
ANR	4229019	ArgumentList	core -> config		4228600	1					
ANR	4229020	Argument	core -> config		4228600	0					
ANR	4229021	PtrMemberAccess	core -> config		4228600	0					
ANR	4229022	Identifier	core		4228600	0					
ANR	4229023	Identifier	config		4228600	1					
ANR	4229024	Argument	NULL		4228600	1					
ANR	4229025	Identifier	NULL		4228600	0					
ANR	4229026	Argument	'q'		4228600	2					
ANR	4229027	PrimaryExpression	'q'		4228600	0					
ANR	4229028	BreakStatement	break ;	375:2:9535:9540	4228600	23	True				
ANR	4229029	Label	case 'c' :	376:1:9543:9551	4228600	24	True				
ANR	4229030	SwitchStatement	switch ( input [ 1 ] )		4228600	25					
ANR	4229031	Condition	input [ 1 ]	377:10:9571:9578	4228600	0	True				
ANR	4229032	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4229033	Identifier	input		4228600	0					
ANR	4229034	PrimaryExpression	1		4228600	1					
ANR	4229035	CompoundStatement		70:20:1701:1701	4228600	1					
ANR	4229036	Label	case 'd' :	378:2:9585:9593	4228600	0	True				
ANR	4229037	ExpressionStatement	r_cons_pal_init ( core -> cons -> context )	379:3:9607:9644	4228600	1	True				
ANR	4229038	CallExpression	r_cons_pal_init ( core -> cons -> context )		4228600	0					
ANR	4229039	Callee	r_cons_pal_init		4228600	0					
ANR	4229040	Identifier	r_cons_pal_init		4228600	0					
ANR	4229041	ArgumentList	core -> cons -> context		4228600	1					
ANR	4229042	Argument	core -> cons -> context		4228600	0					
ANR	4229043	PtrMemberAccess	core -> cons -> context		4228600	0					
ANR	4229044	PtrMemberAccess	core -> cons		4228600	0					
ANR	4229045	Identifier	core		4228600	0					
ANR	4229046	Identifier	cons		4228600	1					
ANR	4229047	Identifier	context		4228600	1					
ANR	4229048	BreakStatement	break ;	380:3:9649:9654	4228600	2	True				
ANR	4229049	Label	case '?' :	381:2:9658:9666	4228600	3	True				
ANR	4229050	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ec )"	382:3:9671:9706	4228600	4	True				
ANR	4229051	CallExpression	"r_core_cmd_help ( core , help_msg_ec )"		4228600	0					
ANR	4229052	Callee	r_core_cmd_help		4228600	0					
ANR	4229053	Identifier	r_core_cmd_help		4228600	0					
ANR	4229054	ArgumentList	core		4228600	1					
ANR	4229055	Argument	core		4228600	0					
ANR	4229056	Identifier	core		4228600	0					
ANR	4229057	Argument	help_msg_ec		4228600	1					
ANR	4229058	Identifier	help_msg_ec		4228600	0					
ANR	4229059	BreakStatement	break ;	383:3:9711:9716	4228600	5	True				
ANR	4229060	Label	case 'o' :	384:2:9720:9728	4228600	6	True				
ANR	4229061	IfStatement	if ( input [ 2 ] == 'j' )		4228600	7					
ANR	4229062	Condition	input [ 2 ] == 'j'	385:7:9746:9760	4228600	0	True				
ANR	4229063	EqualityExpression	input [ 2 ] == 'j'		4228600	0		==			
ANR	4229064	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229065	Identifier	input		4228600	0					
ANR	4229066	PrimaryExpression	2		4228600	1					
ANR	4229067	PrimaryExpression	'j'		4228600	1					
ANR	4229068	CompoundStatement		78:24:1883:1883	4228600	1					
ANR	4229069	ExpressionStatement	"nextpal ( core , 'j' )"	386:4:9769:9788	4228600	0	True				
ANR	4229070	CallExpression	"nextpal ( core , 'j' )"		4228600	0					
ANR	4229071	Callee	nextpal		4228600	0					
ANR	4229072	Identifier	nextpal		4228600	0					
ANR	4229073	ArgumentList	core		4228600	1					
ANR	4229074	Argument	core		4228600	0					
ANR	4229075	Identifier	core		4228600	0					
ANR	4229076	Argument	'j'		4228600	1					
ANR	4229077	PrimaryExpression	'j'		4228600	0					
ANR	4229078	ElseStatement	else		4228600	0					
ANR	4229079	IfStatement	if ( input [ 2 ] == ' ' )		4228600	0					
ANR	4229080	Condition	input [ 2 ] == ' '	387:14:9804:9818	4228600	0	True				
ANR	4229081	EqualityExpression	input [ 2 ] == ' '		4228600	0		==			
ANR	4229082	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229083	Identifier	input		4228600	0					
ANR	4229084	PrimaryExpression	2		4228600	1					
ANR	4229085	PrimaryExpression	' '		4228600	1					
ANR	4229086	CompoundStatement		80:31:1941:1941	4228600	1					
ANR	4229087	ExpressionStatement	"cmd_load_theme ( core , input + 3 )"	388:4:9827:9859	4228600	0	True				
ANR	4229088	CallExpression	"cmd_load_theme ( core , input + 3 )"		4228600	0					
ANR	4229089	Callee	cmd_load_theme		4228600	0					
ANR	4229090	Identifier	cmd_load_theme		4228600	0					
ANR	4229091	ArgumentList	core		4228600	1					
ANR	4229092	Argument	core		4228600	0					
ANR	4229093	Identifier	core		4228600	0					
ANR	4229094	Argument	input + 3		4228600	1					
ANR	4229095	AdditiveExpression	input + 3		4228600	0		+			
ANR	4229096	Identifier	input		4228600	0					
ANR	4229097	PrimaryExpression	3		4228600	1					
ANR	4229098	ElseStatement	else		4228600	0					
ANR	4229099	IfStatement	if ( input [ 2 ] == 'o' )		4228600	0					
ANR	4229100	Condition	input [ 2 ] == 'o'	389:14:9875:9889	4228600	0	True				
ANR	4229101	EqualityExpression	input [ 2 ] == 'o'		4228600	0		==			
ANR	4229102	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229103	Identifier	input		4228600	0					
ANR	4229104	PrimaryExpression	2		4228600	1					
ANR	4229105	PrimaryExpression	'o'		4228600	1					
ANR	4229106	CompoundStatement		82:31:2012:2012	4228600	1					
ANR	4229107	ExpressionStatement	"cmd_load_theme ( core , r_core_get_theme ( ) )"	390:4:9898:9940	4228600	0	True				
ANR	4229108	CallExpression	"cmd_load_theme ( core , r_core_get_theme ( ) )"		4228600	0					
ANR	4229109	Callee	cmd_load_theme		4228600	0					
ANR	4229110	Identifier	cmd_load_theme		4228600	0					
ANR	4229111	ArgumentList	core		4228600	1					
ANR	4229112	Argument	core		4228600	0					
ANR	4229113	Identifier	core		4228600	0					
ANR	4229114	Argument	r_core_get_theme ( )		4228600	1					
ANR	4229115	CallExpression	r_core_get_theme ( )		4228600	0					
ANR	4229116	Callee	r_core_get_theme		4228600	0					
ANR	4229117	Identifier	r_core_get_theme		4228600	0					
ANR	4229118	ArgumentList			4228600	1					
ANR	4229119	ElseStatement	else		4228600	0					
ANR	4229120	IfStatement	if ( input [ 2 ] == 'c' || input [ 2 ] == '.' )		4228600	0					
ANR	4229121	Condition	input [ 2 ] == 'c' || input [ 2 ] == '.'	391:14:9956:9989	4228600	0	True				
ANR	4229122	OrExpression	input [ 2 ] == 'c' || input [ 2 ] == '.'		4228600	0		||			
ANR	4229123	EqualityExpression	input [ 2 ] == 'c'		4228600	0		==			
ANR	4229124	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229125	Identifier	input		4228600	0					
ANR	4229126	PrimaryExpression	2		4228600	1					
ANR	4229127	PrimaryExpression	'c'		4228600	1					
ANR	4229128	EqualityExpression	input [ 2 ] == '.'		4228600	1		==			
ANR	4229129	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229130	Identifier	input		4228600	0					
ANR	4229131	PrimaryExpression	2		4228600	1					
ANR	4229132	PrimaryExpression	'.'		4228600	1					
ANR	4229133	CompoundStatement		84:50:2112:2112	4228600	1					
ANR	4229134	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , r_core_get_theme ( ) )"	392:4:9998:10041	4228600	0	True				
ANR	4229135	CallExpression	"r_cons_printf ( ""%s\\n"" , r_core_get_theme ( ) )"		4228600	0					
ANR	4229136	Callee	r_cons_printf		4228600	0					
ANR	4229137	Identifier	r_cons_printf		4228600	0					
ANR	4229138	ArgumentList	"""%s\\n"""		4228600	1					
ANR	4229139	Argument	"""%s\\n"""		4228600	0					
ANR	4229140	PrimaryExpression	"""%s\\n"""		4228600	0					
ANR	4229141	Argument	r_core_get_theme ( )		4228600	1					
ANR	4229142	CallExpression	r_core_get_theme ( )		4228600	0					
ANR	4229143	Callee	r_core_get_theme		4228600	0					
ANR	4229144	Identifier	r_core_get_theme		4228600	0					
ANR	4229145	ArgumentList			4228600	1					
ANR	4229146	ElseStatement	else		4228600	0					
ANR	4229147	IfStatement	if ( input [ 2 ] == '?' )		4228600	0					
ANR	4229148	Condition	input [ 2 ] == '?'	393:14:10057:10071	4228600	0	True				
ANR	4229149	EqualityExpression	input [ 2 ] == '?'		4228600	0		==			
ANR	4229150	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229151	Identifier	input		4228600	0					
ANR	4229152	PrimaryExpression	2		4228600	1					
ANR	4229153	PrimaryExpression	'?'		4228600	1					
ANR	4229154	CompoundStatement		86:31:2194:2194	4228600	1					
ANR	4229155	ExpressionStatement	"r_core_cmd_help ( core , help_msg_eco )"	394:4:10080:10116	4228600	0	True				
ANR	4229156	CallExpression	"r_core_cmd_help ( core , help_msg_eco )"		4228600	0					
ANR	4229157	Callee	r_core_cmd_help		4228600	0					
ANR	4229158	Identifier	r_core_cmd_help		4228600	0					
ANR	4229159	ArgumentList	core		4228600	1					
ANR	4229160	Argument	core		4228600	0					
ANR	4229161	Identifier	core		4228600	0					
ANR	4229162	Argument	help_msg_eco		4228600	1					
ANR	4229163	Identifier	help_msg_eco		4228600	0					
ANR	4229164	ElseStatement	else		4228600	0					
ANR	4229165	IfStatement	if ( input [ 2 ] == 'q' )		4228600	0					
ANR	4229166	Condition	input [ 2 ] == 'q'	395:14:10132:10146	4228600	0	True				
ANR	4229167	EqualityExpression	input [ 2 ] == 'q'		4228600	0		==			
ANR	4229168	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229169	Identifier	input		4228600	0					
ANR	4229170	PrimaryExpression	2		4228600	1					
ANR	4229171	PrimaryExpression	'q'		4228600	1					
ANR	4229172	CompoundStatement		91:4:2351:2365	4228600	1					
ANR	4229173	IdentifierDeclStatement	RList * themes_list = r_core_list_themes ( core ) ;	396:4:10155:10201	4228600	0	True				
ANR	4229174	IdentifierDecl	* themes_list = r_core_list_themes ( core )		4228600	0					
ANR	4229175	IdentifierDeclType	RList *		4228600	0					
ANR	4229176	Identifier	themes_list		4228600	1					
ANR	4229177	AssignmentExpression	* themes_list = r_core_list_themes ( core )		4228600	2		=			
ANR	4229178	Identifier	themes_list		4228600	0					
ANR	4229179	CallExpression	r_core_list_themes ( core )		4228600	1					
ANR	4229180	Callee	r_core_list_themes		4228600	0					
ANR	4229181	Identifier	r_core_list_themes		4228600	0					
ANR	4229182	ArgumentList	core		4228600	1					
ANR	4229183	Argument	core		4228600	0					
ANR	4229184	Identifier	core		4228600	0					
ANR	4229185	IdentifierDeclStatement	RListIter * th_iter ;	397:4:10207:10225	4228600	1	True				
ANR	4229186	IdentifierDecl	* th_iter		4228600	0					
ANR	4229187	IdentifierDeclType	RListIter *		4228600	0					
ANR	4229188	Identifier	th_iter		4228600	1					
ANR	4229189	IdentifierDeclStatement	const char * th ;	398:4:10231:10245	4228600	2	True				
ANR	4229190	IdentifierDecl	* th		4228600	0					
ANR	4229191	IdentifierDeclType	const char *		4228600	0					
ANR	4229192	Identifier	th		4228600	1					
ANR	4229193	Statement	r_list_foreach	399:4:10251:10264	4228600	3	True				
ANR	4229194	Statement	(	399:19:10266:10266	4228600	4	True				
ANR	4229195	Statement	themes_list	399:20:10267:10277	4228600	5	True				
ANR	4229196	Statement	","	399:31:10278:10278	4228600	6	True				
ANR	4229197	Statement	th_iter	399:33:10280:10286	4228600	7	True				
ANR	4229198	Statement	","	399:40:10287:10287	4228600	8	True				
ANR	4229199	Statement	th	399:42:10289:10290	4228600	9	True				
ANR	4229200	Statement	)	399:44:10291:10291	4228600	10	True				
ANR	4229201	CompoundStatement		92:46:2413:2413	4228600	11					
ANR	4229202	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , th )"	400:5:10300:10326	4228600	0	True				
ANR	4229203	CallExpression	"r_cons_printf ( ""%s\\n"" , th )"		4228600	0					
ANR	4229204	Callee	r_cons_printf		4228600	0					
ANR	4229205	Identifier	r_cons_printf		4228600	0					
ANR	4229206	ArgumentList	"""%s\\n"""		4228600	1					
ANR	4229207	Argument	"""%s\\n"""		4228600	0					
ANR	4229208	PrimaryExpression	"""%s\\n"""		4228600	0					
ANR	4229209	Argument	th		4228600	1					
ANR	4229210	Identifier	th		4228600	0					
ANR	4229211	ElseStatement	else		4228600	0					
ANR	4229212	CompoundStatement		98:4:2546:2560	4228600	0					
ANR	4229213	IdentifierDeclStatement	RList * themes_list = r_core_list_themes ( core ) ;	403:4:10350:10396	4228600	0	True				
ANR	4229214	IdentifierDecl	* themes_list = r_core_list_themes ( core )		4228600	0					
ANR	4229215	IdentifierDeclType	RList *		4228600	0					
ANR	4229216	Identifier	themes_list		4228600	1					
ANR	4229217	AssignmentExpression	* themes_list = r_core_list_themes ( core )		4228600	2		=			
ANR	4229218	Identifier	themes_list		4228600	0					
ANR	4229219	CallExpression	r_core_list_themes ( core )		4228600	1					
ANR	4229220	Callee	r_core_list_themes		4228600	0					
ANR	4229221	Identifier	r_core_list_themes		4228600	0					
ANR	4229222	ArgumentList	core		4228600	1					
ANR	4229223	Argument	core		4228600	0					
ANR	4229224	Identifier	core		4228600	0					
ANR	4229225	IdentifierDeclStatement	RListIter * th_iter ;	404:4:10402:10420	4228600	1	True				
ANR	4229226	IdentifierDecl	* th_iter		4228600	0					
ANR	4229227	IdentifierDeclType	RListIter *		4228600	0					
ANR	4229228	Identifier	th_iter		4228600	1					
ANR	4229229	IdentifierDeclStatement	const char * th ;	405:4:10426:10440	4228600	2	True				
ANR	4229230	IdentifierDecl	* th		4228600	0					
ANR	4229231	IdentifierDeclType	const char *		4228600	0					
ANR	4229232	Identifier	th		4228600	1					
ANR	4229233	Statement	r_list_foreach	406:4:10446:10459	4228600	3	True				
ANR	4229234	Statement	(	406:19:10461:10461	4228600	4	True				
ANR	4229235	Statement	themes_list	406:20:10462:10472	4228600	5	True				
ANR	4229236	Statement	","	406:31:10473:10473	4228600	6	True				
ANR	4229237	Statement	th_iter	406:33:10475:10481	4228600	7	True				
ANR	4229238	Statement	","	406:40:10482:10482	4228600	8	True				
ANR	4229239	Statement	th	406:42:10484:10485	4228600	9	True				
ANR	4229240	Statement	)	406:44:10486:10486	4228600	10	True				
ANR	4229241	CompoundStatement		99:46:2608:2608	4228600	11					
ANR	4229242	IfStatement	"if ( curtheme && ! strcmp ( curtheme , th ) )"		4228600	0					
ANR	4229243	Condition	"curtheme && ! strcmp ( curtheme , th )"	407:9:10499:10532	4228600	0	True				
ANR	4229244	AndExpression	"curtheme && ! strcmp ( curtheme , th )"		4228600	0		&&			
ANR	4229245	Identifier	curtheme		4228600	0					
ANR	4229246	UnaryOperationExpression	"! strcmp ( curtheme , th )"		4228600	1					
ANR	4229247	UnaryOperator	!		4228600	0					
ANR	4229248	CallExpression	"strcmp ( curtheme , th )"		4228600	1					
ANR	4229249	Callee	strcmp		4228600	0					
ANR	4229250	Identifier	strcmp		4228600	0					
ANR	4229251	ArgumentList	curtheme		4228600	1					
ANR	4229252	Argument	curtheme		4228600	0					
ANR	4229253	Identifier	curtheme		4228600	0					
ANR	4229254	Argument	th		4228600	1					
ANR	4229255	Identifier	th		4228600	0					
ANR	4229256	CompoundStatement		100:45:2655:2655	4228600	1					
ANR	4229257	ExpressionStatement	"r_cons_printf ( ""> %s\\n"" , th )"	408:6:10543:10571	4228600	0	True				
ANR	4229258	CallExpression	"r_cons_printf ( ""> %s\\n"" , th )"		4228600	0					
ANR	4229259	Callee	r_cons_printf		4228600	0					
ANR	4229260	Identifier	r_cons_printf		4228600	0					
ANR	4229261	ArgumentList	"""> %s\\n"""		4228600	1					
ANR	4229262	Argument	"""> %s\\n"""		4228600	0					
ANR	4229263	PrimaryExpression	"""> %s\\n"""		4228600	0					
ANR	4229264	Argument	th		4228600	1					
ANR	4229265	Identifier	th		4228600	0					
ANR	4229266	ElseStatement	else		4228600	0					
ANR	4229267	CompoundStatement		102:12:2705:2705	4228600	0					
ANR	4229268	ExpressionStatement	"r_cons_printf ( ""  %s\\n"" , th )"	410:6:10593:10621	4228600	0	True				
ANR	4229269	CallExpression	"r_cons_printf ( ""  %s\\n"" , th )"		4228600	0					
ANR	4229270	Callee	r_cons_printf		4228600	0					
ANR	4229271	Identifier	r_cons_printf		4228600	0					
ANR	4229272	ArgumentList	"""  %s\\n"""		4228600	1					
ANR	4229273	Argument	"""  %s\\n"""		4228600	0					
ANR	4229274	PrimaryExpression	"""  %s\\n"""		4228600	0					
ANR	4229275	Argument	th		4228600	1					
ANR	4229276	Identifier	th		4228600	0					
ANR	4229277	BreakStatement	break ;	414:3:10644:10649	4228600	8	True				
ANR	4229278	Label	case 's' :	415:2:10653:10661	4228600	9	True				
ANR	4229279	ExpressionStatement	r_cons_pal_show ( )	415:12:10663:10681	4228600	10	True				
ANR	4229280	CallExpression	r_cons_pal_show ( )		4228600	0					
ANR	4229281	Callee	r_cons_pal_show		4228600	0					
ANR	4229282	Identifier	r_cons_pal_show		4228600	0					
ANR	4229283	ArgumentList			4228600	1					
ANR	4229284	BreakStatement	break ;	415:32:10683:10688	4228600	11	True				
ANR	4229285	Label	case '*' :	416:2:10701:10709	4228600	12	True				
ANR	4229286	ExpressionStatement	"r_cons_pal_list ( 1 , NULL )"	416:12:10711:10736	4228600	13	True				
ANR	4229287	CallExpression	"r_cons_pal_list ( 1 , NULL )"		4228600	0					
ANR	4229288	Callee	r_cons_pal_list		4228600	0					
ANR	4229289	Identifier	r_cons_pal_list		4228600	0					
ANR	4229290	ArgumentList	1		4228600	1					
ANR	4229291	Argument	1		4228600	0					
ANR	4229292	PrimaryExpression	1		4228600	0					
ANR	4229293	Argument	NULL		4228600	1					
ANR	4229294	Identifier	NULL		4228600	0					
ANR	4229295	BreakStatement	break ;	416:39:10738:10743	4228600	14	True				
ANR	4229296	Label	case 'h' :	417:2:10756:10764	4228600	15	True				
ANR	4229297	IfStatement	if ( input [ 2 ] == 'o' )		4228600	16					
ANR	4229298	Condition	input [ 2 ] == 'o'	418:7:10781:10795	4228600	0	True				
ANR	4229299	EqualityExpression	input [ 2 ] == 'o'		4228600	0		==			
ANR	4229300	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229301	Identifier	input		4228600	0					
ANR	4229302	PrimaryExpression	2		4228600	1					
ANR	4229303	PrimaryExpression	'o'		4228600	1					
ANR	4229304	CompoundStatement		111:24:2918:2918	4228600	1					
ANR	4229305	ExpressionStatement	"r_core_echo ( core , input + 3 )"	419:4:10804:10833	4228600	0	True				
ANR	4229306	CallExpression	"r_core_echo ( core , input + 3 )"		4228600	0					
ANR	4229307	Callee	r_core_echo		4228600	0					
ANR	4229308	Identifier	r_core_echo		4228600	0					
ANR	4229309	ArgumentList	core		4228600	1					
ANR	4229310	Argument	core		4228600	0					
ANR	4229311	Identifier	core		4228600	0					
ANR	4229312	Argument	input + 3		4228600	1					
ANR	4229313	AdditiveExpression	input + 3		4228600	0		+			
ANR	4229314	Identifier	input		4228600	0					
ANR	4229315	PrimaryExpression	3		4228600	1					
ANR	4229316	ElseStatement	else		4228600	0					
ANR	4229317	CompoundStatement		113:10:2965:2965	4228600	0					
ANR	4229318	ExpressionStatement	"r_cons_pal_list ( 'h' , NULL )"	421:4:10851:10878	4228600	0	True				
ANR	4229319	CallExpression	"r_cons_pal_list ( 'h' , NULL )"		4228600	0					
ANR	4229320	Callee	r_cons_pal_list		4228600	0					
ANR	4229321	Identifier	r_cons_pal_list		4228600	0					
ANR	4229322	ArgumentList	'h'		4228600	1					
ANR	4229323	Argument	'h'		4228600	0					
ANR	4229324	PrimaryExpression	'h'		4228600	0					
ANR	4229325	Argument	NULL		4228600	1					
ANR	4229326	Identifier	NULL		4228600	0					
ANR	4229327	BreakStatement	break ;	423:3:10888:10893	4228600	17	True				
ANR	4229328	Label	case 'j' :	424:2:10897:10905	4228600	18	True				
ANR	4229329	ExpressionStatement	"r_cons_pal_list ( 'j' , NULL )"	425:3:10919:10946	4228600	19	True				
ANR	4229330	CallExpression	"r_cons_pal_list ( 'j' , NULL )"		4228600	0					
ANR	4229331	Callee	r_cons_pal_list		4228600	0					
ANR	4229332	Identifier	r_cons_pal_list		4228600	0					
ANR	4229333	ArgumentList	'j'		4228600	1					
ANR	4229334	Argument	'j'		4228600	0					
ANR	4229335	PrimaryExpression	'j'		4228600	0					
ANR	4229336	Argument	NULL		4228600	1					
ANR	4229337	Identifier	NULL		4228600	0					
ANR	4229338	BreakStatement	break ;	426:3:10951:10956	4228600	20	True				
ANR	4229339	Label	case 'c' :	427:2:10960:10968	4228600	21	True				
ANR	4229340	ExpressionStatement	"r_cons_pal_list ( 'c' , input + 2 )"	428:3:10982:11014	4228600	22	True				
ANR	4229341	CallExpression	"r_cons_pal_list ( 'c' , input + 2 )"		4228600	0					
ANR	4229342	Callee	r_cons_pal_list		4228600	0					
ANR	4229343	Identifier	r_cons_pal_list		4228600	0					
ANR	4229344	ArgumentList	'c'		4228600	1					
ANR	4229345	Argument	'c'		4228600	0					
ANR	4229346	PrimaryExpression	'c'		4228600	0					
ANR	4229347	Argument	input + 2		4228600	1					
ANR	4229348	AdditiveExpression	input + 2		4228600	0		+			
ANR	4229349	Identifier	input		4228600	0					
ANR	4229350	PrimaryExpression	2		4228600	1					
ANR	4229351	BreakStatement	break ;	429:3:11019:11024	4228600	23	True				
ANR	4229352	Label	case '\\0' :	430:2:11028:11037	4228600	24	True				
ANR	4229353	ExpressionStatement	"r_cons_pal_list ( 0 , NULL )"	431:3:11050:11075	4228600	25	True				
ANR	4229354	CallExpression	"r_cons_pal_list ( 0 , NULL )"		4228600	0					
ANR	4229355	Callee	r_cons_pal_list		4228600	0					
ANR	4229356	Identifier	r_cons_pal_list		4228600	0					
ANR	4229357	ArgumentList	0		4228600	1					
ANR	4229358	Argument	0		4228600	0					
ANR	4229359	PrimaryExpression	0		4228600	0					
ANR	4229360	Argument	NULL		4228600	1					
ANR	4229361	Identifier	NULL		4228600	0					
ANR	4229362	BreakStatement	break ;	432:3:11080:11085	4228600	26	True				
ANR	4229363	Label	case 'r' :	433:2:11089:11097	4228600	27	True				
ANR	4229364	ExpressionStatement	r_cons_pal_random ( )	434:3:11111:11131	4228600	28	True				
ANR	4229365	CallExpression	r_cons_pal_random ( )		4228600	0					
ANR	4229366	Callee	r_cons_pal_random		4228600	0					
ANR	4229367	Identifier	r_cons_pal_random		4228600	0					
ANR	4229368	ArgumentList			4228600	1					
ANR	4229369	BreakStatement	break ;	435:3:11136:11141	4228600	29	True				
ANR	4229370	Label	case 'n' :	436:2:11145:11153	4228600	30	True				
ANR	4229371	ExpressionStatement	"nextpal ( core , 'n' )"	437:3:11167:11186	4228600	31	True				
ANR	4229372	CallExpression	"nextpal ( core , 'n' )"		4228600	0					
ANR	4229373	Callee	nextpal		4228600	0					
ANR	4229374	Identifier	nextpal		4228600	0					
ANR	4229375	ArgumentList	core		4228600	1					
ANR	4229376	Argument	core		4228600	0					
ANR	4229377	Identifier	core		4228600	0					
ANR	4229378	Argument	'n'		4228600	1					
ANR	4229379	PrimaryExpression	'n'		4228600	0					
ANR	4229380	BreakStatement	break ;	438:3:11191:11196	4228600	32	True				
ANR	4229381	Label	case 'p' :	439:2:11200:11208	4228600	33	True				
ANR	4229382	ExpressionStatement	"nextpal ( core , 'p' )"	440:3:11222:11241	4228600	34	True				
ANR	4229383	CallExpression	"nextpal ( core , 'p' )"		4228600	0					
ANR	4229384	Callee	nextpal		4228600	0					
ANR	4229385	Identifier	nextpal		4228600	0					
ANR	4229386	ArgumentList	core		4228600	1					
ANR	4229387	Argument	core		4228600	0					
ANR	4229388	Identifier	core		4228600	0					
ANR	4229389	Argument	'p'		4228600	1					
ANR	4229390	PrimaryExpression	'p'		4228600	0					
ANR	4229391	BreakStatement	break ;	441:3:11246:11251	4228600	35	True				
ANR	4229392	Label	case 'H' :	442:2:11255:11263	4228600	36	True				
ANR	4229393	CompoundStatement		189:3:4880:5008	4228600	37					
ANR	4229394	IdentifierDeclStatement	char * color_code = NULL ;	443:3:11279:11302	4228600	0	True				
ANR	4229395	IdentifierDecl	* color_code = NULL		4228600	0					
ANR	4229396	IdentifierDeclType	char *		4228600	0					
ANR	4229397	Identifier	color_code		4228600	1					
ANR	4229398	AssignmentExpression	* color_code = NULL		4228600	2		=			
ANR	4229399	Identifier	NULL		4228600	0					
ANR	4229400	Identifier	NULL		4228600	1					
ANR	4229401	IdentifierDeclStatement	char * word = NULL ;	444:3:11307:11324	4228600	1	True				
ANR	4229402	IdentifierDecl	* word = NULL		4228600	0					
ANR	4229403	IdentifierDeclType	char *		4228600	0					
ANR	4229404	Identifier	word		4228600	1					
ANR	4229405	AssignmentExpression	* word = NULL		4228600	2		=			
ANR	4229406	Identifier	NULL		4228600	0					
ANR	4229407	Identifier	NULL		4228600	1					
ANR	4229408	IdentifierDeclStatement	int argc = 0 ;	445:3:11329:11341	4228600	2	True				
ANR	4229409	IdentifierDecl	argc = 0		4228600	0					
ANR	4229410	IdentifierDeclType	int		4228600	0					
ANR	4229411	Identifier	argc		4228600	1					
ANR	4229412	AssignmentExpression	argc = 0		4228600	2		=			
ANR	4229413	Identifier	argc		4228600	0					
ANR	4229414	PrimaryExpression	0		4228600	1					
ANR	4229415	IdentifierDeclStatement	"char * * argv = r_str_argv ( input + 4 , & argc ) ;"	446:3:11346:11389	4228600	3	True				
ANR	4229416	IdentifierDecl	"* * argv = r_str_argv ( input + 4 , & argc )"		4228600	0					
ANR	4229417	IdentifierDeclType	char * *		4228600	0					
ANR	4229418	Identifier	argv		4228600	1					
ANR	4229419	AssignmentExpression	"* * argv = r_str_argv ( input + 4 , & argc )"		4228600	2		=			
ANR	4229420	Identifier	argv		4228600	0					
ANR	4229421	CallExpression	"r_str_argv ( input + 4 , & argc )"		4228600	1					
ANR	4229422	Callee	r_str_argv		4228600	0					
ANR	4229423	Identifier	r_str_argv		4228600	0					
ANR	4229424	ArgumentList	input + 4		4228600	1					
ANR	4229425	Argument	input + 4		4228600	0					
ANR	4229426	AdditiveExpression	input + 4		4228600	0		+			
ANR	4229427	Identifier	input		4228600	0					
ANR	4229428	PrimaryExpression	4		4228600	1					
ANR	4229429	Argument	& argc		4228600	1					
ANR	4229430	UnaryOperationExpression	& argc		4228600	0					
ANR	4229431	UnaryOperator	&		4228600	0					
ANR	4229432	Identifier	argc		4228600	1					
ANR	4229433	SwitchStatement	switch ( input [ 2 ] )		4228600	4					
ANR	4229434	Condition	input [ 2 ]	447:11:11402:11409	4228600	0	True				
ANR	4229435	ArrayIndexing	input [ 2 ]		4228600	0					
ANR	4229436	Identifier	input		4228600	0					
ANR	4229437	PrimaryExpression	2		4228600	1					
ANR	4229438	CompoundStatement		140:21:3532:3532	4228600	1					
ANR	4229439	Label	case '?' :	448:3:11417:11425	4228600	0	True				
ANR	4229440	CompoundStatement		142:4:3553:3863	4228600	1					
ANR	4229441	IdentifierDeclStatement	"const char * helpmsg [ ] = { ""Usage ecH[iw-?]"" , """" , """" , ""ecHi"" , ""[color]"" , ""highlight current instruction with 'color' background"" , ""ecHw"" , ""[word] [color]"" , ""highlight 'word ' in current instruction with 'color' background"" , ""ecH-"" , """" , ""remove all highlights on current instruction"" , NULL } ;"	449:4:11433:11743	4228600	0	True				
ANR	4229442	IdentifierDecl	"* helpmsg [ ] = { ""Usage ecH[iw-?]"" , """" , """" , ""ecHi"" , ""[color]"" , ""highlight current instruction with 'color' background"" , ""ecHw"" , ""[word] [color]"" , ""highlight 'word ' in current instruction with 'color' background"" , ""ecH-"" , """" , ""remove all highlights on current instruction"" , NULL }"		4228600	0					
ANR	4229443	IdentifierDeclType	const char * [ ]		4228600	0					
ANR	4229444	Identifier	helpmsg		4228600	1					
ANR	4229445	AssignmentExpression	"* helpmsg [ ] = { ""Usage ecH[iw-?]"" , """" , """" , ""ecHi"" , ""[color]"" , ""highlight current instruction with 'color' background"" , ""ecHw"" , ""[word] [color]"" , ""highlight 'word ' in current instruction with 'color' background"" , ""ecH-"" , """" , ""remove all highlights on current instruction"" , NULL }"		4228600	2		=			
ANR	4229446	Identifier	helpmsg		4228600	0					
ANR	4229447	InitializerList	"""Usage ecH[iw-?]"""		4228600	1					
ANR	4229448	PrimaryExpression	"""Usage ecH[iw-?]"""		4228600	0					
ANR	4229449	PrimaryExpression	""""""		4228600	1					
ANR	4229450	PrimaryExpression	""""""		4228600	2					
ANR	4229451	PrimaryExpression	"""ecHi"""		4228600	3					
ANR	4229452	PrimaryExpression	"""[color]"""		4228600	4					
ANR	4229453	PrimaryExpression	"""highlight current instruction with 'color' background"""		4228600	5					
ANR	4229454	PrimaryExpression	"""ecHw"""		4228600	6					
ANR	4229455	PrimaryExpression	"""[word] [color]"""		4228600	7					
ANR	4229456	PrimaryExpression	"""highlight 'word ' in current instruction with 'color' background"""		4228600	8					
ANR	4229457	PrimaryExpression	"""ecH-"""		4228600	9					
ANR	4229458	PrimaryExpression	""""""		4228600	10					
ANR	4229459	PrimaryExpression	"""remove all highlights on current instruction"""		4228600	11					
ANR	4229460	Identifier	NULL		4228600	12					
ANR	4229461	ExpressionStatement	"r_core_cmd_help ( core , helpmsg )"	456:4:11749:11780	4228600	1	True				
ANR	4229462	CallExpression	"r_core_cmd_help ( core , helpmsg )"		4228600	0					
ANR	4229463	Callee	r_core_cmd_help		4228600	0					
ANR	4229464	Identifier	r_core_cmd_help		4228600	0					
ANR	4229465	ArgumentList	core		4228600	1					
ANR	4229466	Argument	core		4228600	0					
ANR	4229467	Identifier	core		4228600	0					
ANR	4229468	Argument	helpmsg		4228600	1					
ANR	4229469	Identifier	helpmsg		4228600	0					
ANR	4229470	BreakStatement	break ;	458:4:11792:11797	4228600	2	True				
ANR	4229471	Label	case '-' :	459:3:11802:11810	4228600	3	True				
ANR	4229472	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , """" )"	460:4:11816:11887	4228600	4	True				
ANR	4229473	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , """" )"		4228600	0					
ANR	4229474	Callee	r_meta_set_string		4228600	0					
ANR	4229475	Identifier	r_meta_set_string		4228600	0					
ANR	4229476	ArgumentList	core -> anal		4228600	1					
ANR	4229477	Argument	core -> anal		4228600	0					
ANR	4229478	PtrMemberAccess	core -> anal		4228600	0					
ANR	4229479	Identifier	core		4228600	0					
ANR	4229480	Identifier	anal		4228600	1					
ANR	4229481	Argument	R_META_TYPE_HIGHLIGHT		4228600	1					
ANR	4229482	Identifier	R_META_TYPE_HIGHLIGHT		4228600	0					
ANR	4229483	Argument	core -> offset		4228600	2					
ANR	4229484	PtrMemberAccess	core -> offset		4228600	0					
ANR	4229485	Identifier	core		4228600	0					
ANR	4229486	Identifier	offset		4228600	1					
ANR	4229487	Argument	""""""		4228600	3					
ANR	4229488	PrimaryExpression	""""""		4228600	0					
ANR	4229489	ReturnStatement	return false ;	461:4:11893:11905	4228600	5	True				
ANR	4229490	Identifier	false		4228600	0					
ANR	4229491	Label	case '\\0' :	462:3:11910:11919	4228600	6	True				
ANR	4229492	Label	case 'i' :	463:3:11924:11932	4228600	7	True				
ANR	4229493	IfStatement	if ( argc )		4228600	8					
ANR	4229494	Condition	argc	464:8:11952:11955	4228600	0	True				
ANR	4229495	Identifier	argc		4228600	0					
ANR	4229496	CompoundStatement		158:5:4085:4130	4228600	1					
ANR	4229497	IdentifierDeclStatement	"char * dup = r_str_newf ( ""bgonly %s"" , argv [ 0 ] ) ;"	465:5:11965:12010	4228600	0	True				
ANR	4229498	IdentifierDecl	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 0 ] )"		4228600	0					
ANR	4229499	IdentifierDeclType	char *		4228600	0					
ANR	4229500	Identifier	dup		4228600	1					
ANR	4229501	AssignmentExpression	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 0 ] )"		4228600	2		=			
ANR	4229502	Identifier	dup		4228600	0					
ANR	4229503	CallExpression	"r_str_newf ( ""bgonly %s"" , argv [ 0 ] )"		4228600	1					
ANR	4229504	Callee	r_str_newf		4228600	0					
ANR	4229505	Identifier	r_str_newf		4228600	0					
ANR	4229506	ArgumentList	"""bgonly %s"""		4228600	1					
ANR	4229507	Argument	"""bgonly %s"""		4228600	0					
ANR	4229508	PrimaryExpression	"""bgonly %s"""		4228600	0					
ANR	4229509	Argument	argv [ 0 ]		4228600	1					
ANR	4229510	ArrayIndexing	argv [ 0 ]		4228600	0					
ANR	4229511	Identifier	argv		4228600	0					
ANR	4229512	PrimaryExpression	0		4228600	1					
ANR	4229513	ExpressionStatement	"color_code = r_cons_pal_parse ( dup , NULL )"	466:5:12017:12058	4228600	1	True				
ANR	4229514	AssignmentExpression	"color_code = r_cons_pal_parse ( dup , NULL )"		4228600	0		=			
ANR	4229515	Identifier	color_code		4228600	0					
ANR	4229516	CallExpression	"r_cons_pal_parse ( dup , NULL )"		4228600	1					
ANR	4229517	Callee	r_cons_pal_parse		4228600	0					
ANR	4229518	Identifier	r_cons_pal_parse		4228600	0					
ANR	4229519	ArgumentList	dup		4228600	1					
ANR	4229520	Argument	dup		4228600	0					
ANR	4229521	Identifier	dup		4228600	0					
ANR	4229522	Argument	NULL		4228600	1					
ANR	4229523	Identifier	NULL		4228600	0					
ANR	4229524	ExpressionStatement	R_FREE ( dup )	467:5:12065:12077	4228600	2	True				
ANR	4229525	CallExpression	R_FREE ( dup )		4228600	0					
ANR	4229526	Callee	R_FREE		4228600	0					
ANR	4229527	Identifier	R_FREE		4228600	0					
ANR	4229528	ArgumentList	dup		4228600	1					
ANR	4229529	Argument	dup		4228600	0					
ANR	4229530	Identifier	dup		4228600	0					
ANR	4229531	BreakStatement	break ;	469:4:12089:12094	4228600	9	True				
ANR	4229532	Label	case 'w' :	470:3:12099:12107	4228600	10	True				
ANR	4229533	IfStatement	if ( ! argc )		4228600	11					
ANR	4229534	Condition	! argc	471:8:12127:12131	4228600	0	True				
ANR	4229535	UnaryOperationExpression	! argc		4228600	0					
ANR	4229536	UnaryOperator	!		4228600	0					
ANR	4229537	Identifier	argc		4228600	1					
ANR	4229538	CompoundStatement		164:15:4254:4254	4228600	1					
ANR	4229539	ExpressionStatement	"eprintf ( ""Usage: echw word [color]\\n"" )"	472:5:12141:12179	4228600	0	True				
ANR	4229540	CallExpression	"eprintf ( ""Usage: echw word [color]\\n"" )"		4228600	0					
ANR	4229541	Callee	eprintf		4228600	0					
ANR	4229542	Identifier	eprintf		4228600	0					
ANR	4229543	ArgumentList	"""Usage: echw word [color]\\n"""		4228600	1					
ANR	4229544	Argument	"""Usage: echw word [color]\\n"""		4228600	0					
ANR	4229545	PrimaryExpression	"""Usage: echw word [color]\\n"""		4228600	0					
ANR	4229546	ExpressionStatement	r_str_argv_free ( argv )	473:5:12186:12208	4228600	1	True				
ANR	4229547	CallExpression	r_str_argv_free ( argv )		4228600	0					
ANR	4229548	Callee	r_str_argv_free		4228600	0					
ANR	4229549	Identifier	r_str_argv_free		4228600	0					
ANR	4229550	ArgumentList	argv		4228600	1					
ANR	4229551	Argument	argv		4228600	0					
ANR	4229552	Identifier	argv		4228600	0					
ANR	4229553	ReturnStatement	return true ;	474:5:12215:12226	4228600	2	True				
ANR	4229554	Identifier	true		4228600	0					
ANR	4229555	ExpressionStatement	word = strdup ( argv [ 0 ] )	476:4:12238:12261	4228600	12	True				
ANR	4229556	AssignmentExpression	word = strdup ( argv [ 0 ] )		4228600	0		=			
ANR	4229557	Identifier	word		4228600	0					
ANR	4229558	CallExpression	strdup ( argv [ 0 ] )		4228600	1					
ANR	4229559	Callee	strdup		4228600	0					
ANR	4229560	Identifier	strdup		4228600	0					
ANR	4229561	ArgumentList	argv [ 0 ]		4228600	1					
ANR	4229562	Argument	argv [ 0 ]		4228600	0					
ANR	4229563	ArrayIndexing	argv [ 0 ]		4228600	0					
ANR	4229564	Identifier	argv		4228600	0					
ANR	4229565	PrimaryExpression	0		4228600	1					
ANR	4229566	IfStatement	if ( argc > 1 )		4228600	13					
ANR	4229567	Condition	argc > 1	477:8:12271:12278	4228600	0	True				
ANR	4229568	RelationalExpression	argc > 1		4228600	0		>			
ANR	4229569	Identifier	argc		4228600	0					
ANR	4229570	PrimaryExpression	1		4228600	1					
ANR	4229571	CompoundStatement		171:5:4408:4453	4228600	1					
ANR	4229572	IdentifierDeclStatement	"char * dup = r_str_newf ( ""bgonly %s"" , argv [ 1 ] ) ;"	478:5:12288:12333	4228600	0	True				
ANR	4229573	IdentifierDecl	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 1 ] )"		4228600	0					
ANR	4229574	IdentifierDeclType	char *		4228600	0					
ANR	4229575	Identifier	dup		4228600	1					
ANR	4229576	AssignmentExpression	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 1 ] )"		4228600	2		=			
ANR	4229577	Identifier	dup		4228600	0					
ANR	4229578	CallExpression	"r_str_newf ( ""bgonly %s"" , argv [ 1 ] )"		4228600	1					
ANR	4229579	Callee	r_str_newf		4228600	0					
ANR	4229580	Identifier	r_str_newf		4228600	0					
ANR	4229581	ArgumentList	"""bgonly %s"""		4228600	1					
ANR	4229582	Argument	"""bgonly %s"""		4228600	0					
ANR	4229583	PrimaryExpression	"""bgonly %s"""		4228600	0					
ANR	4229584	Argument	argv [ 1 ]		4228600	1					
ANR	4229585	ArrayIndexing	argv [ 1 ]		4228600	0					
ANR	4229586	Identifier	argv		4228600	0					
ANR	4229587	PrimaryExpression	1		4228600	1					
ANR	4229588	ExpressionStatement	"color_code = r_cons_pal_parse ( dup , NULL )"	479:5:12340:12381	4228600	1	True				
ANR	4229589	AssignmentExpression	"color_code = r_cons_pal_parse ( dup , NULL )"		4228600	0		=			
ANR	4229590	Identifier	color_code		4228600	0					
ANR	4229591	CallExpression	"r_cons_pal_parse ( dup , NULL )"		4228600	1					
ANR	4229592	Callee	r_cons_pal_parse		4228600	0					
ANR	4229593	Identifier	r_cons_pal_parse		4228600	0					
ANR	4229594	ArgumentList	dup		4228600	1					
ANR	4229595	Argument	dup		4228600	0					
ANR	4229596	Identifier	dup		4228600	0					
ANR	4229597	Argument	NULL		4228600	1					
ANR	4229598	Identifier	NULL		4228600	0					
ANR	4229599	IfStatement	if ( ! color_code )		4228600	2					
ANR	4229600	Condition	! color_code	480:9:12392:12402	4228600	0	True				
ANR	4229601	UnaryOperationExpression	! color_code		4228600	0					
ANR	4229602	UnaryOperator	!		4228600	0					
ANR	4229603	Identifier	color_code		4228600	1					
ANR	4229604	CompoundStatement		173:22:4525:4525	4228600	1					
ANR	4229605	ExpressionStatement	"eprintf ( ""Unknown color %s\\n"" , argv [ 1 ] )"	481:6:12413:12452	4228600	0	True				
ANR	4229606	CallExpression	"eprintf ( ""Unknown color %s\\n"" , argv [ 1 ] )"		4228600	0					
ANR	4229607	Callee	eprintf		4228600	0					
ANR	4229608	Identifier	eprintf		4228600	0					
ANR	4229609	ArgumentList	"""Unknown color %s\\n"""		4228600	1					
ANR	4229610	Argument	"""Unknown color %s\\n"""		4228600	0					
ANR	4229611	PrimaryExpression	"""Unknown color %s\\n"""		4228600	0					
ANR	4229612	Argument	argv [ 1 ]		4228600	1					
ANR	4229613	ArrayIndexing	argv [ 1 ]		4228600	0					
ANR	4229614	Identifier	argv		4228600	0					
ANR	4229615	PrimaryExpression	1		4228600	1					
ANR	4229616	ExpressionStatement	r_str_argv_free ( argv )	482:6:12460:12482	4228600	1	True				
ANR	4229617	CallExpression	r_str_argv_free ( argv )		4228600	0					
ANR	4229618	Callee	r_str_argv_free		4228600	0					
ANR	4229619	Identifier	r_str_argv_free		4228600	0					
ANR	4229620	ArgumentList	argv		4228600	1					
ANR	4229621	Argument	argv		4228600	0					
ANR	4229622	Identifier	argv		4228600	0					
ANR	4229623	ExpressionStatement	free ( dup )	483:6:12490:12500	4228600	2	True				
ANR	4229624	CallExpression	free ( dup )		4228600	0					
ANR	4229625	Callee	free		4228600	0					
ANR	4229626	Identifier	free		4228600	0					
ANR	4229627	ArgumentList	dup		4228600	1					
ANR	4229628	Argument	dup		4228600	0					
ANR	4229629	Identifier	dup		4228600	0					
ANR	4229630	ExpressionStatement	free ( word )	484:6:12508:12519	4228600	3	True				
ANR	4229631	CallExpression	free ( word )		4228600	0					
ANR	4229632	Callee	free		4228600	0					
ANR	4229633	Identifier	free		4228600	0					
ANR	4229634	ArgumentList	word		4228600	1					
ANR	4229635	Argument	word		4228600	0					
ANR	4229636	Identifier	word		4228600	0					
ANR	4229637	ReturnStatement	return true ;	485:6:12527:12538	4228600	4	True				
ANR	4229638	Identifier	true		4228600	0					
ANR	4229639	ExpressionStatement	R_FREE ( dup )	487:5:12552:12564	4228600	3	True				
ANR	4229640	CallExpression	R_FREE ( dup )		4228600	0					
ANR	4229641	Callee	R_FREE		4228600	0					
ANR	4229642	Identifier	R_FREE		4228600	0					
ANR	4229643	ArgumentList	dup		4228600	1					
ANR	4229644	Argument	dup		4228600	0					
ANR	4229645	Identifier	dup		4228600	0					
ANR	4229646	BreakStatement	break ;	489:4:12576:12581	4228600	14	True				
ANR	4229647	Label	default :	490:3:12586:12593	4228600	15	True				
ANR	4229648	Identifier	default		4228600	0					
ANR	4229649	ExpressionStatement	"eprintf ( ""See ecH?\\n"" )"	491:4:12599:12621	4228600	16	True				
ANR	4229650	CallExpression	"eprintf ( ""See ecH?\\n"" )"		4228600	0					
ANR	4229651	Callee	eprintf		4228600	0					
ANR	4229652	Identifier	eprintf		4228600	0					
ANR	4229653	ArgumentList	"""See ecH?\\n"""		4228600	1					
ANR	4229654	Argument	"""See ecH?\\n"""		4228600	0					
ANR	4229655	PrimaryExpression	"""See ecH?\\n"""		4228600	0					
ANR	4229656	ExpressionStatement	r_str_argv_free ( argv )	492:4:12627:12649	4228600	17	True				
ANR	4229657	CallExpression	r_str_argv_free ( argv )		4228600	0					
ANR	4229658	Callee	r_str_argv_free		4228600	0					
ANR	4229659	Identifier	r_str_argv_free		4228600	0					
ANR	4229660	ArgumentList	argv		4228600	1					
ANR	4229661	Argument	argv		4228600	0					
ANR	4229662	Identifier	argv		4228600	0					
ANR	4229663	ReturnStatement	return true ;	493:4:12655:12666	4228600	18	True				
ANR	4229664	Identifier	true		4228600	0					
ANR	4229665	IdentifierDeclStatement	"char * str = r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset ) ;"	495:3:12676:12755	4228600	5	True				
ANR	4229666	IdentifierDecl	"* str = r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset )"		4228600	0					
ANR	4229667	IdentifierDeclType	char *		4228600	0					
ANR	4229668	Identifier	str		4228600	1					
ANR	4229669	AssignmentExpression	"* str = r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset )"		4228600	2		=			
ANR	4229670	Identifier	str		4228600	0					
ANR	4229671	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset )"		4228600	1					
ANR	4229672	Callee	r_meta_get_string		4228600	0					
ANR	4229673	Identifier	r_meta_get_string		4228600	0					
ANR	4229674	ArgumentList	core -> anal		4228600	1					
ANR	4229675	Argument	core -> anal		4228600	0					
ANR	4229676	PtrMemberAccess	core -> anal		4228600	0					
ANR	4229677	Identifier	core		4228600	0					
ANR	4229678	Identifier	anal		4228600	1					
ANR	4229679	Argument	R_META_TYPE_HIGHLIGHT		4228600	1					
ANR	4229680	Identifier	R_META_TYPE_HIGHLIGHT		4228600	0					
ANR	4229681	Argument	core -> offset		4228600	2					
ANR	4229682	PtrMemberAccess	core -> offset		4228600	0					
ANR	4229683	Identifier	core		4228600	0					
ANR	4229684	Identifier	offset		4228600	1					
ANR	4229685	IdentifierDeclStatement	"char * dup = r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl ) ;"	496:3:12760:12888	4228600	6	True				
ANR	4229686	IdentifierDecl	"* dup = r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl )"		4228600	0					
ANR	4229687	IdentifierDeclType	char *		4228600	0					
ANR	4229688	Identifier	dup		4228600	1					
ANR	4229689	AssignmentExpression	"* dup = r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl )"		4228600	2		=			
ANR	4229690	Identifier	dup		4228600	0					
ANR	4229691	CallExpression	"r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl )"		4228600	1					
ANR	4229692	Callee	r_str_newf		4228600	0					
ANR	4229693	Identifier	r_str_newf		4228600	0					
ANR	4229694	ArgumentList	"""%s \\""%s%s\\"""""		4228600	1					
ANR	4229695	Argument	"""%s \\""%s%s\\"""""		4228600	0					
ANR	4229696	PrimaryExpression	"""%s \\""%s%s\\"""""		4228600	0					
ANR	4229697	Argument	"str ? str : """""		4228600	1					
ANR	4229698	ConditionalExpression	"str ? str : """""		4228600	0					
ANR	4229699	Condition	str		4228600	0					
ANR	4229700	Identifier	str		4228600	0					
ANR	4229701	Identifier	str		4228600	1					
ANR	4229702	PrimaryExpression	""""""		4228600	2					
ANR	4229703	Argument	"word ? word : """""		4228600	2					
ANR	4229704	ConditionalExpression	"word ? word : """""		4228600	0					
ANR	4229705	Condition	word		4228600	0					
ANR	4229706	Identifier	word		4228600	0					
ANR	4229707	Identifier	word		4228600	1					
ANR	4229708	PrimaryExpression	""""""		4228600	2					
ANR	4229709	Argument	color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl		4228600	3					
ANR	4229710	ConditionalExpression	color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl		4228600	0					
ANR	4229711	Condition	color_code		4228600	0					
ANR	4229712	Identifier	color_code		4228600	0					
ANR	4229713	Identifier	color_code		4228600	1					
ANR	4229714	MemberAccess	r_cons_singleton ( ) -> context -> pal . wordhl		4228600	2					
ANR	4229715	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		4228600	0					
ANR	4229716	PtrMemberAccess	r_cons_singleton ( ) -> context		4228600	0					
ANR	4229717	CallExpression	r_cons_singleton ( )		4228600	0					
ANR	4229718	Callee	r_cons_singleton		4228600	0					
ANR	4229719	Identifier	r_cons_singleton		4228600	0					
ANR	4229720	ArgumentList			4228600	1					
ANR	4229721	Identifier	context		4228600	1					
ANR	4229722	Identifier	pal		4228600	1					
ANR	4229723	Identifier	wordhl		4228600	1					
ANR	4229724	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , dup )"	497:3:12893:12965	4228600	7	True				
ANR	4229725	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , dup )"		4228600	0					
ANR	4229726	Callee	r_meta_set_string		4228600	0					
ANR	4229727	Identifier	r_meta_set_string		4228600	0					
ANR	4229728	ArgumentList	core -> anal		4228600	1					
ANR	4229729	Argument	core -> anal		4228600	0					
ANR	4229730	PtrMemberAccess	core -> anal		4228600	0					
ANR	4229731	Identifier	core		4228600	0					
ANR	4229732	Identifier	anal		4228600	1					
ANR	4229733	Argument	R_META_TYPE_HIGHLIGHT		4228600	1					
ANR	4229734	Identifier	R_META_TYPE_HIGHLIGHT		4228600	0					
ANR	4229735	Argument	core -> offset		4228600	2					
ANR	4229736	PtrMemberAccess	core -> offset		4228600	0					
ANR	4229737	Identifier	core		4228600	0					
ANR	4229738	Identifier	offset		4228600	1					
ANR	4229739	Argument	dup		4228600	3					
ANR	4229740	Identifier	dup		4228600	0					
ANR	4229741	ExpressionStatement	r_str_argv_free ( argv )	498:3:12970:12992	4228600	8	True				
ANR	4229742	CallExpression	r_str_argv_free ( argv )		4228600	0					
ANR	4229743	Callee	r_str_argv_free		4228600	0					
ANR	4229744	Identifier	r_str_argv_free		4228600	0					
ANR	4229745	ArgumentList	argv		4228600	1					
ANR	4229746	Argument	argv		4228600	0					
ANR	4229747	Identifier	argv		4228600	0					
ANR	4229748	ExpressionStatement	R_FREE ( word )	499:3:12997:13010	4228600	9	True				
ANR	4229749	CallExpression	R_FREE ( word )		4228600	0					
ANR	4229750	Callee	R_FREE		4228600	0					
ANR	4229751	Identifier	R_FREE		4228600	0					
ANR	4229752	ArgumentList	word		4228600	1					
ANR	4229753	Argument	word		4228600	0					
ANR	4229754	Identifier	word		4228600	0					
ANR	4229755	ExpressionStatement	R_FREE ( dup )	500:3:13015:13027	4228600	10	True				
ANR	4229756	CallExpression	R_FREE ( dup )		4228600	0					
ANR	4229757	Callee	R_FREE		4228600	0					
ANR	4229758	Identifier	R_FREE		4228600	0					
ANR	4229759	ArgumentList	dup		4228600	1					
ANR	4229760	Argument	dup		4228600	0					
ANR	4229761	Identifier	dup		4228600	0					
ANR	4229762	BreakStatement	break ;	501:3:13032:13037	4228600	11	True				
ANR	4229763	Label	default :	503:2:13045:13052	4228600	38	True				
ANR	4229764	Identifier	default		4228600	0					
ANR	4229765	CompoundStatement		198:3:5212:5237	4228600	39					
ANR	4229766	IdentifierDeclStatement	char * p = strdup ( input + 2 ) ;	504:3:13059:13087	4228600	0	True				
ANR	4229767	IdentifierDecl	* p = strdup ( input + 2 )		4228600	0					
ANR	4229768	IdentifierDeclType	char *		4228600	0					
ANR	4229769	Identifier	p		4228600	1					
ANR	4229770	AssignmentExpression	* p = strdup ( input + 2 )		4228600	2		=			
ANR	4229771	Identifier	p		4228600	0					
ANR	4229772	CallExpression	strdup ( input + 2 )		4228600	1					
ANR	4229773	Callee	strdup		4228600	0					
ANR	4229774	Identifier	strdup		4228600	0					
ANR	4229775	ArgumentList	input + 2		4228600	1					
ANR	4229776	Argument	input + 2		4228600	0					
ANR	4229777	AdditiveExpression	input + 2		4228600	0		+			
ANR	4229778	Identifier	input		4228600	0					
ANR	4229779	PrimaryExpression	2		4228600	1					
ANR	4229780	IdentifierDeclStatement	"char * q = strchr ( p , '=' ) ;"	505:3:13092:13117	4228600	1	True				
ANR	4229781	IdentifierDecl	"* q = strchr ( p , '=' )"		4228600	0					
ANR	4229782	IdentifierDeclType	char *		4228600	0					
ANR	4229783	Identifier	q		4228600	1					
ANR	4229784	AssignmentExpression	"* q = strchr ( p , '=' )"		4228600	2		=			
ANR	4229785	Identifier	q		4228600	0					
ANR	4229786	CallExpression	"strchr ( p , '=' )"		4228600	1					
ANR	4229787	Callee	strchr		4228600	0					
ANR	4229788	Identifier	strchr		4228600	0					
ANR	4229789	ArgumentList	p		4228600	1					
ANR	4229790	Argument	p		4228600	0					
ANR	4229791	Identifier	p		4228600	0					
ANR	4229792	Argument	'='		4228600	1					
ANR	4229793	PrimaryExpression	'='		4228600	0					
ANR	4229794	IfStatement	if ( ! q )		4228600	2					
ANR	4229795	Condition	! q	506:7:13126:13127	4228600	0	True				
ANR	4229796	UnaryOperationExpression	! q		4228600	0					
ANR	4229797	UnaryOperator	!		4228600	0					
ANR	4229798	Identifier	q		4228600	1					
ANR	4229799	CompoundStatement		199:11:5250:5250	4228600	1					
ANR	4229800	ExpressionStatement	"q = strchr ( p , ' ' )"	507:4:13136:13155	4228600	0	True				
ANR	4229801	AssignmentExpression	"q = strchr ( p , ' ' )"		4228600	0		=			
ANR	4229802	Identifier	q		4228600	0					
ANR	4229803	CallExpression	"strchr ( p , ' ' )"		4228600	1					
ANR	4229804	Callee	strchr		4228600	0					
ANR	4229805	Identifier	strchr		4228600	0					
ANR	4229806	ArgumentList	p		4228600	1					
ANR	4229807	Argument	p		4228600	0					
ANR	4229808	Identifier	p		4228600	0					
ANR	4229809	Argument	' '		4228600	1					
ANR	4229810	PrimaryExpression	' '		4228600	0					
ANR	4229811	IfStatement	if ( q )		4228600	3					
ANR	4229812	Condition	q	509:7:13169:13169	4228600	0	True				
ANR	4229813	Identifier	q		4228600	0					
ANR	4229814	CompoundStatement		202:10:5292:5292	4228600	1					
ANR	4229815	ExpressionStatement	* q ++ = 0	511:4:13195:13203	4228600	0	True				
ANR	4229816	AssignmentExpression	* q ++ = 0		4228600	0		=			
ANR	4229817	UnaryOperationExpression	* q ++		4228600	0					
ANR	4229818	UnaryOperator	*		4228600	0					
ANR	4229819	PostIncDecOperationExpression	q ++		4228600	1					
ANR	4229820	Identifier	q		4228600	0					
ANR	4229821	IncDec	++		4228600	1					
ANR	4229822	PrimaryExpression	0		4228600	1					
ANR	4229823	IfStatement	"if ( r_cons_pal_set ( p , q ) )"		4228600	1					
ANR	4229824	Condition	"r_cons_pal_set ( p , q )"	512:8:13213:13233	4228600	0	True				
ANR	4229825	CallExpression	"r_cons_pal_set ( p , q )"		4228600	0					
ANR	4229826	Callee	r_cons_pal_set		4228600	0					
ANR	4229827	Identifier	r_cons_pal_set		4228600	0					
ANR	4229828	ArgumentList	p		4228600	1					
ANR	4229829	Argument	p		4228600	0					
ANR	4229830	Identifier	p		4228600	0					
ANR	4229831	Argument	q		4228600	1					
ANR	4229832	Identifier	q		4228600	0					
ANR	4229833	CompoundStatement		205:31:5356:5356	4228600	1					
ANR	4229834	ExpressionStatement	r_cons_pal_update_event ( )	513:5:13243:13269	4228600	0	True				
ANR	4229835	CallExpression	r_cons_pal_update_event ( )		4228600	0					
ANR	4229836	Callee	r_cons_pal_update_event		4228600	0					
ANR	4229837	Identifier	r_cons_pal_update_event		4228600	0					
ANR	4229838	ArgumentList			4228600	1					
ANR	4229839	ElseStatement	else		4228600	0					
ANR	4229840	CompoundStatement		210:4:5433:5467	4228600	0					
ANR	4229841	IdentifierDeclStatement	char color [ 32 ] ;	516:4:13293:13307	4228600	0	True				
ANR	4229842	IdentifierDecl	color [ 32 ]		4228600	0					
ANR	4229843	IdentifierDeclType	char [ 32 ]		4228600	0					
ANR	4229844	Identifier	color		4228600	1					
ANR	4229845	PrimaryExpression	32		4228600	2					
ANR	4229846	IdentifierDeclStatement	RColor rcolor = r_cons_pal_get ( p ) ;	517:4:13313:13347	4228600	1	True				
ANR	4229847	IdentifierDecl	rcolor = r_cons_pal_get ( p )		4228600	0					
ANR	4229848	IdentifierDeclType	RColor		4228600	0					
ANR	4229849	Identifier	rcolor		4228600	1					
ANR	4229850	AssignmentExpression	rcolor = r_cons_pal_get ( p )		4228600	2		=			
ANR	4229851	Identifier	rcolor		4228600	0					
ANR	4229852	CallExpression	r_cons_pal_get ( p )		4228600	1					
ANR	4229853	Callee	r_cons_pal_get		4228600	0					
ANR	4229854	Identifier	r_cons_pal_get		4228600	0					
ANR	4229855	ArgumentList	p		4228600	1					
ANR	4229856	Argument	p		4228600	0					
ANR	4229857	Identifier	p		4228600	0					
ANR	4229858	ExpressionStatement	"r_cons_rgb_str ( color , sizeof ( color ) , & rcolor )"	518:4:13353:13400	4228600	2	True				
ANR	4229859	CallExpression	"r_cons_rgb_str ( color , sizeof ( color ) , & rcolor )"		4228600	0					
ANR	4229860	Callee	r_cons_rgb_str		4228600	0					
ANR	4229861	Identifier	r_cons_rgb_str		4228600	0					
ANR	4229862	ArgumentList	color		4228600	1					
ANR	4229863	Argument	color		4228600	0					
ANR	4229864	Identifier	color		4228600	0					
ANR	4229865	Argument	sizeof ( color )		4228600	1					
ANR	4229866	SizeofExpression	sizeof ( color )		4228600	0					
ANR	4229867	Sizeof	sizeof		4228600	0					
ANR	4229868	SizeofOperand	color		4228600	1					
ANR	4229869	Argument	& rcolor		4228600	2					
ANR	4229870	UnaryOperationExpression	& rcolor		4228600	0					
ANR	4229871	UnaryOperator	&		4228600	0					
ANR	4229872	Identifier	rcolor		4228600	1					
ANR	4229873	Statement	eprintf	519:4:13406:13412	4228600	3	True				
ANR	4229874	Statement	(	519:12:13414:13414	4228600	4	True				
ANR	4229875	Statement	"""(%s)(%sCOLOR"""	519:13:13415:13428	4228600	5	True				
ANR	4229876	Statement	Color_RESET	519:27:13429:13439	4228600	6	True				
ANR	4229877	Statement	""")\\n"""	519:38:13440:13444	4228600	7	True				
ANR	4229878	Statement	","	519:43:13445:13445	4228600	8	True				
ANR	4229879	Statement	p	519:45:13447:13447	4228600	9	True				
ANR	4229880	Statement	","	519:46:13448:13448	4228600	10	True				
ANR	4229881	Statement	color	519:48:13450:13454	4228600	11	True				
ANR	4229882	Statement	)	519:53:13455:13455	4228600	12	True				
ANR	4229883	ExpressionStatement		519:54:13456:13456	4228600	13	True				
ANR	4229884	ExpressionStatement	free ( p )	521:3:13466:13474	4228600	4	True				
ANR	4229885	CallExpression	free ( p )		4228600	0					
ANR	4229886	Callee	free		4228600	0					
ANR	4229887	Identifier	free		4228600	0					
ANR	4229888	ArgumentList	p		4228600	1					
ANR	4229889	Argument	p		4228600	0					
ANR	4229890	Identifier	p		4228600	0					
ANR	4229891	BreakStatement	break ;	524:2:13486:13491	4228600	26	True				
ANR	4229892	Label	case 'd' :	525:1:13494:13502	4228600	27	True				
ANR	4229893	IfStatement	if ( input [ 1 ] == '?' )		4228600	28					
ANR	4229894	Condition	input [ 1 ] == '?'	526:6:13518:13532	4228600	0	True				
ANR	4229895	EqualityExpression	input [ 1 ] == '?'		4228600	0		==			
ANR	4229896	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4229897	Identifier	input		4228600	0					
ANR	4229898	PrimaryExpression	1		4228600	1					
ANR	4229899	PrimaryExpression	'?'		4228600	1					
ANR	4229900	CompoundStatement		219:23:5655:5655	4228600	1					
ANR	4229901	ExpressionStatement	"eprintf ( ""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"" )"	527:3:13540:13605	4228600	0	True				
ANR	4229902	CallExpression	"eprintf ( ""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"" )"		4228600	0					
ANR	4229903	Callee	eprintf		4228600	0					
ANR	4229904	Identifier	eprintf		4228600	0					
ANR	4229905	ArgumentList	"""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"""		4228600	1					
ANR	4229906	Argument	"""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"""		4228600	0					
ANR	4229907	PrimaryExpression	"""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"""		4228600	0					
ANR	4229908	ExpressionStatement	"eprintf ( ""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"" )"	528:3:13610:13680	4228600	1	True				
ANR	4229909	CallExpression	"eprintf ( ""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"" )"		4228600	0					
ANR	4229910	Callee	eprintf		4228600	0					
ANR	4229911	Identifier	eprintf		4228600	0					
ANR	4229912	ArgumentList	"""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"""		4228600	1					
ANR	4229913	Argument	"""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"""		4228600	0					
ANR	4229914	PrimaryExpression	"""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"""		4228600	0					
ANR	4229915	ExpressionStatement	"eprintf ( ""  ed    : ${cfg.editor} ~/.radare2rc\\n"" )"	529:3:13685:13735	4228600	2	True				
ANR	4229916	CallExpression	"eprintf ( ""  ed    : ${cfg.editor} ~/.radare2rc\\n"" )"		4228600	0					
ANR	4229917	Callee	eprintf		4228600	0					
ANR	4229918	Identifier	eprintf		4228600	0					
ANR	4229919	ArgumentList	"""  ed    : ${cfg.editor} ~/.radare2rc\\n"""		4228600	1					
ANR	4229920	Argument	"""  ed    : ${cfg.editor} ~/.radare2rc\\n"""		4228600	0					
ANR	4229921	PrimaryExpression	"""  ed    : ${cfg.editor} ~/.radare2rc\\n"""		4228600	0					
ANR	4229922	ExpressionStatement	"eprintf ( ""  ed-   : rm ~/.radare2rc\\n"" )"	530:3:13740:13779	4228600	3	True				
ANR	4229923	CallExpression	"eprintf ( ""  ed-   : rm ~/.radare2rc\\n"" )"		4228600	0					
ANR	4229924	Callee	eprintf		4228600	0					
ANR	4229925	Identifier	eprintf		4228600	0					
ANR	4229926	ArgumentList	"""  ed-   : rm ~/.radare2rc\\n"""		4228600	1					
ANR	4229927	Argument	"""  ed-   : rm ~/.radare2rc\\n"""		4228600	0					
ANR	4229928	PrimaryExpression	"""  ed-   : rm ~/.radare2rc\\n"""		4228600	0					
ANR	4229929	ElseStatement	else		4228600	0					
ANR	4229930	IfStatement	if ( input [ 1 ] == '-' )		4228600	0					
ANR	4229931	Condition	input [ 1 ] == '-'	531:13:13794:13808	4228600	0	True				
ANR	4229932	EqualityExpression	input [ 1 ] == '-'		4228600	0		==			
ANR	4229933	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4229934	Identifier	input		4228600	0					
ANR	4229935	PrimaryExpression	1		4228600	1					
ANR	4229936	PrimaryExpression	'-'		4228600	1					
ANR	4229937	CompoundStatement		225:3:5936:5974	4228600	1					
ANR	4229938	IdentifierDeclStatement	"char * file = r_str_home ( "".radare2rc"" ) ;"	532:3:13816:13854	4228600	0	True				
ANR	4229939	IdentifierDecl	"* file = r_str_home ( "".radare2rc"" )"		4228600	0					
ANR	4229940	IdentifierDeclType	char *		4228600	0					
ANR	4229941	Identifier	file		4228600	1					
ANR	4229942	AssignmentExpression	"* file = r_str_home ( "".radare2rc"" )"		4228600	2		=			
ANR	4229943	Identifier	file		4228600	0					
ANR	4229944	CallExpression	"r_str_home ( "".radare2rc"" )"		4228600	1					
ANR	4229945	Callee	r_str_home		4228600	0					
ANR	4229946	Identifier	r_str_home		4228600	0					
ANR	4229947	ArgumentList	""".radare2rc"""		4228600	1					
ANR	4229948	Argument	""".radare2rc"""		4228600	0					
ANR	4229949	PrimaryExpression	""".radare2rc"""		4228600	0					
ANR	4229950	ExpressionStatement	"r_cons_printf ( ""rm %s\\n"" , file )"	533:3:13859:13890	4228600	1	True				
ANR	4229951	CallExpression	"r_cons_printf ( ""rm %s\\n"" , file )"		4228600	0					
ANR	4229952	Callee	r_cons_printf		4228600	0					
ANR	4229953	Identifier	r_cons_printf		4228600	0					
ANR	4229954	ArgumentList	"""rm %s\\n"""		4228600	1					
ANR	4229955	Argument	"""rm %s\\n"""		4228600	0					
ANR	4229956	PrimaryExpression	"""rm %s\\n"""		4228600	0					
ANR	4229957	Argument	file		4228600	1					
ANR	4229958	Identifier	file		4228600	0					
ANR	4229959	ExpressionStatement	free ( file )	535:3:13919:13930	4228600	2	True				
ANR	4229960	CallExpression	free ( file )		4228600	0					
ANR	4229961	Callee	free		4228600	0					
ANR	4229962	Identifier	free		4228600	0					
ANR	4229963	ArgumentList	file		4228600	1					
ANR	4229964	Argument	file		4228600	0					
ANR	4229965	Identifier	file		4228600	0					
ANR	4229966	ElseStatement	else		4228600	0					
ANR	4229967	CompoundStatement		230:3:6066:6104	4228600	0					
ANR	4229968	IdentifierDeclStatement	"char * file = r_str_home ( "".radare2rc"" ) ;"	537:3:13946:13984	4228600	0	True				
ANR	4229969	IdentifierDecl	"* file = r_str_home ( "".radare2rc"" )"		4228600	0					
ANR	4229970	IdentifierDeclType	char *		4228600	0					
ANR	4229971	Identifier	file		4228600	1					
ANR	4229972	AssignmentExpression	"* file = r_str_home ( "".radare2rc"" )"		4228600	2		=			
ANR	4229973	Identifier	file		4228600	0					
ANR	4229974	CallExpression	"r_str_home ( "".radare2rc"" )"		4228600	1					
ANR	4229975	Callee	r_str_home		4228600	0					
ANR	4229976	Identifier	r_str_home		4228600	0					
ANR	4229977	ArgumentList	""".radare2rc"""		4228600	1					
ANR	4229978	Argument	""".radare2rc"""		4228600	0					
ANR	4229979	PrimaryExpression	""".radare2rc"""		4228600	0					
ANR	4229980	IfStatement	if ( r_cons_is_interactive ( ) )		4228600	1					
ANR	4229981	Condition	r_cons_is_interactive ( )	538:7:13993:14016	4228600	0	True				
ANR	4229982	CallExpression	r_cons_is_interactive ( )		4228600	0					
ANR	4229983	Callee	r_cons_is_interactive		4228600	0					
ANR	4229984	Identifier	r_cons_is_interactive		4228600	0					
ANR	4229985	ArgumentList			4228600	1					
ANR	4229986	CompoundStatement		233:4:6170:6209	4228600	1					
ANR	4229987	ExpressionStatement	r_file_touch ( file )	539:4:14025:14044	4228600	0	True				
ANR	4229988	CallExpression	r_file_touch ( file )		4228600	0					
ANR	4229989	Callee	r_file_touch		4228600	0					
ANR	4229990	Identifier	r_file_touch		4228600	0					
ANR	4229991	ArgumentList	file		4228600	1					
ANR	4229992	Argument	file		4228600	0					
ANR	4229993	Identifier	file		4228600	0					
ANR	4229994	IdentifierDeclStatement	"char * res = r_cons_editor ( file , NULL ) ;"	540:4:14050:14089	4228600	1	True				
ANR	4229995	IdentifierDecl	"* res = r_cons_editor ( file , NULL )"		4228600	0					
ANR	4229996	IdentifierDeclType	char *		4228600	0					
ANR	4229997	Identifier	res		4228600	1					
ANR	4229998	AssignmentExpression	"* res = r_cons_editor ( file , NULL )"		4228600	2		=			
ANR	4229999	Identifier	res		4228600	0					
ANR	4230000	CallExpression	"r_cons_editor ( file , NULL )"		4228600	1					
ANR	4230001	Callee	r_cons_editor		4228600	0					
ANR	4230002	Identifier	r_cons_editor		4228600	0					
ANR	4230003	ArgumentList	file		4228600	1					
ANR	4230004	Argument	file		4228600	0					
ANR	4230005	Identifier	file		4228600	0					
ANR	4230006	Argument	NULL		4228600	1					
ANR	4230007	Identifier	NULL		4228600	0					
ANR	4230008	IfStatement	if ( res )		4228600	2					
ANR	4230009	Condition	res	541:8:14099:14101	4228600	0	True				
ANR	4230010	Identifier	res		4228600	0					
ANR	4230011	CompoundStatement		234:13:6224:6224	4228600	1					
ANR	4230012	IfStatement	"if ( r_cons_yesno ( 'y' , ""Reload? (Y/n)"" ) )"		4228600	0					
ANR	4230013	Condition	"r_cons_yesno ( 'y' , ""Reload? (Y/n)"" )"	542:9:14115:14149	4228600	0	True				
ANR	4230014	CallExpression	"r_cons_yesno ( 'y' , ""Reload? (Y/n)"" )"		4228600	0					
ANR	4230015	Callee	r_cons_yesno		4228600	0					
ANR	4230016	Identifier	r_cons_yesno		4228600	0					
ANR	4230017	ArgumentList	'y'		4228600	1					
ANR	4230018	Argument	'y'		4228600	0					
ANR	4230019	PrimaryExpression	'y'		4228600	0					
ANR	4230020	Argument	"""Reload? (Y/n)"""		4228600	1					
ANR	4230021	PrimaryExpression	"""Reload? (Y/n)"""		4228600	0					
ANR	4230022	CompoundStatement		235:46:6272:6272	4228600	1					
ANR	4230023	ExpressionStatement	"r_core_run_script ( core , file )"	543:6:14160:14190	4228600	0	True				
ANR	4230024	CallExpression	"r_core_run_script ( core , file )"		4228600	0					
ANR	4230025	Callee	r_core_run_script		4228600	0					
ANR	4230026	Identifier	r_core_run_script		4228600	0					
ANR	4230027	ArgumentList	core		4228600	1					
ANR	4230028	Argument	core		4228600	0					
ANR	4230029	Identifier	core		4228600	0					
ANR	4230030	Argument	file		4228600	1					
ANR	4230031	Identifier	file		4228600	0					
ANR	4230032	ElseStatement	else		4228600	0					
ANR	4230033	CompoundStatement		239:10:6335:6335	4228600	0					
ANR	4230034	ExpressionStatement	"r_core_run_script ( core , file )"	547:4:14221:14251	4228600	0	True				
ANR	4230035	CallExpression	"r_core_run_script ( core , file )"		4228600	0					
ANR	4230036	Callee	r_core_run_script		4228600	0					
ANR	4230037	Identifier	r_core_run_script		4228600	0					
ANR	4230038	ArgumentList	core		4228600	1					
ANR	4230039	Argument	core		4228600	0					
ANR	4230040	Identifier	core		4228600	0					
ANR	4230041	Argument	file		4228600	1					
ANR	4230042	Identifier	file		4228600	0					
ANR	4230043	ExpressionStatement	free ( file )	549:3:14261:14272	4228600	2	True				
ANR	4230044	CallExpression	free ( file )		4228600	0					
ANR	4230045	Callee	free		4228600	0					
ANR	4230046	Identifier	free		4228600	0					
ANR	4230047	ArgumentList	file		4228600	1					
ANR	4230048	Argument	file		4228600	0					
ANR	4230049	Identifier	file		4228600	0					
ANR	4230050	BreakStatement	break ;	551:2:14280:14285	4228600	29	True				
ANR	4230051	Label	case 'e' :	552:1:14288:14296	4228600	30	True				
ANR	4230052	IfStatement	if ( input [ 1 ] == ' ' )		4228600	31					
ANR	4230053	Condition	input [ 1 ] == ' '	553:6:14312:14326	4228600	0	True				
ANR	4230054	EqualityExpression	input [ 1 ] == ' '		4228600	0		==			
ANR	4230055	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4230056	Identifier	input		4228600	0					
ANR	4230057	PrimaryExpression	1		4228600	1					
ANR	4230058	PrimaryExpression	' '		4228600	1					
ANR	4230059	CompoundStatement		250:3:6562:6615	4228600	1					
ANR	4230060	IdentifierDeclStatement	char * p ;	554:3:14334:14341	4228600	0	True				
ANR	4230061	IdentifierDecl	* p		4228600	0					
ANR	4230062	IdentifierDeclType	char *		4228600	0					
ANR	4230063	Identifier	p		4228600	1					
ANR	4230064	IdentifierDeclStatement	"const char * input2 = strchr ( input + 2 , ' ' ) ;"	555:3:14346:14390	4228600	1	True				
ANR	4230065	IdentifierDecl	"* input2 = strchr ( input + 2 , ' ' )"		4228600	0					
ANR	4230066	IdentifierDeclType	const char *		4228600	0					
ANR	4230067	Identifier	input2		4228600	1					
ANR	4230068	AssignmentExpression	"* input2 = strchr ( input + 2 , ' ' )"		4228600	2		=			
ANR	4230069	Identifier	input2		4228600	0					
ANR	4230070	CallExpression	"strchr ( input + 2 , ' ' )"		4228600	1					
ANR	4230071	Callee	strchr		4228600	0					
ANR	4230072	Identifier	strchr		4228600	0					
ANR	4230073	ArgumentList	input + 2		4228600	1					
ANR	4230074	Argument	input + 2		4228600	0					
ANR	4230075	AdditiveExpression	input + 2		4228600	0		+			
ANR	4230076	Identifier	input		4228600	0					
ANR	4230077	PrimaryExpression	2		4228600	1					
ANR	4230078	Argument	' '		4228600	1					
ANR	4230079	PrimaryExpression	' '		4228600	0					
ANR	4230080	ExpressionStatement	input2 = ( input2 ) ? input2 + 1 : input + 2	556:3:14395:14437	4228600	2	True				
ANR	4230081	AssignmentExpression	input2 = ( input2 ) ? input2 + 1 : input + 2		4228600	0		=			
ANR	4230082	Identifier	input2		4228600	0					
ANR	4230083	ConditionalExpression	( input2 ) ? input2 + 1 : input + 2		4228600	1					
ANR	4230084	Condition	input2		4228600	0					
ANR	4230085	Identifier	input2		4228600	0					
ANR	4230086	AdditiveExpression	input2 + 1		4228600	1		+			
ANR	4230087	Identifier	input2		4228600	0					
ANR	4230088	PrimaryExpression	1		4228600	1					
ANR	4230089	AdditiveExpression	input + 2		4228600	2		+			
ANR	4230090	Identifier	input		4228600	0					
ANR	4230091	PrimaryExpression	2		4228600	1					
ANR	4230092	IdentifierDeclStatement	"const char * val = r_config_get ( core -> config , input2 ) ;"	557:3:14442:14495	4228600	3	True				
ANR	4230093	IdentifierDecl	"* val = r_config_get ( core -> config , input2 )"		4228600	0					
ANR	4230094	IdentifierDeclType	const char *		4228600	0					
ANR	4230095	Identifier	val		4228600	1					
ANR	4230096	AssignmentExpression	"* val = r_config_get ( core -> config , input2 )"		4228600	2		=			
ANR	4230097	Identifier	val		4228600	0					
ANR	4230098	CallExpression	"r_config_get ( core -> config , input2 )"		4228600	1					
ANR	4230099	Callee	r_config_get		4228600	0					
ANR	4230100	Identifier	r_config_get		4228600	0					
ANR	4230101	ArgumentList	core -> config		4228600	1					
ANR	4230102	Argument	core -> config		4228600	0					
ANR	4230103	PtrMemberAccess	core -> config		4228600	0					
ANR	4230104	Identifier	core		4228600	0					
ANR	4230105	Identifier	config		4228600	1					
ANR	4230106	Argument	input2		4228600	1					
ANR	4230107	Identifier	input2		4228600	0					
ANR	4230108	ExpressionStatement	"p = r_core_editor ( core , NULL , val )"	558:3:14500:14535	4228600	4	True				
ANR	4230109	AssignmentExpression	"p = r_core_editor ( core , NULL , val )"		4228600	0		=			
ANR	4230110	Identifier	p		4228600	0					
ANR	4230111	CallExpression	"r_core_editor ( core , NULL , val )"		4228600	1					
ANR	4230112	Callee	r_core_editor		4228600	0					
ANR	4230113	Identifier	r_core_editor		4228600	0					
ANR	4230114	ArgumentList	core		4228600	1					
ANR	4230115	Argument	core		4228600	0					
ANR	4230116	Identifier	core		4228600	0					
ANR	4230117	Argument	NULL		4228600	1					
ANR	4230118	Identifier	NULL		4228600	0					
ANR	4230119	Argument	val		4228600	2					
ANR	4230120	Identifier	val		4228600	0					
ANR	4230121	IfStatement	if ( p )		4228600	5					
ANR	4230122	Condition	p	559:7:14544:14544	4228600	0	True				
ANR	4230123	Identifier	p		4228600	0					
ANR	4230124	CompoundStatement		252:10:6667:6667	4228600	1					
ANR	4230125	ExpressionStatement	"r_str_replace_char ( p , '\\n' , ';' )"	560:4:14553:14586	4228600	0	True				
ANR	4230126	CallExpression	"r_str_replace_char ( p , '\\n' , ';' )"		4228600	0					
ANR	4230127	Callee	r_str_replace_char		4228600	0					
ANR	4230128	Identifier	r_str_replace_char		4228600	0					
ANR	4230129	ArgumentList	p		4228600	1					
ANR	4230130	Argument	p		4228600	0					
ANR	4230131	Identifier	p		4228600	0					
ANR	4230132	Argument	'\\n'		4228600	1					
ANR	4230133	PrimaryExpression	'\\n'		4228600	0					
ANR	4230134	Argument	';'		4228600	2					
ANR	4230135	PrimaryExpression	';'		4228600	0					
ANR	4230136	ExpressionStatement	"r_config_set ( core -> config , input2 , p )"	561:4:14592:14630	4228600	1	True				
ANR	4230137	CallExpression	"r_config_set ( core -> config , input2 , p )"		4228600	0					
ANR	4230138	Callee	r_config_set		4228600	0					
ANR	4230139	Identifier	r_config_set		4228600	0					
ANR	4230140	ArgumentList	core -> config		4228600	1					
ANR	4230141	Argument	core -> config		4228600	0					
ANR	4230142	PtrMemberAccess	core -> config		4228600	0					
ANR	4230143	Identifier	core		4228600	0					
ANR	4230144	Identifier	config		4228600	1					
ANR	4230145	Argument	input2		4228600	1					
ANR	4230146	Identifier	input2		4228600	0					
ANR	4230147	Argument	p		4228600	2					
ANR	4230148	Identifier	p		4228600	0					
ANR	4230149	ElseStatement	else		4228600	0					
ANR	4230150	CompoundStatement		256:9:6766:6766	4228600	0					
ANR	4230151	ExpressionStatement	"eprintf ( ""Usage: ee varname # use $EDITOR to edit this config value\\n"" )"	564:3:14651:14722	4228600	0	True				
ANR	4230152	CallExpression	"eprintf ( ""Usage: ee varname # use $EDITOR to edit this config value\\n"" )"		4228600	0					
ANR	4230153	Callee	eprintf		4228600	0					
ANR	4230154	Identifier	eprintf		4228600	0					
ANR	4230155	ArgumentList	"""Usage: ee varname # use $EDITOR to edit this config value\\n"""		4228600	1					
ANR	4230156	Argument	"""Usage: ee varname # use $EDITOR to edit this config value\\n"""		4228600	0					
ANR	4230157	PrimaryExpression	"""Usage: ee varname # use $EDITOR to edit this config value\\n"""		4228600	0					
ANR	4230158	BreakStatement	break ;	566:2:14730:14735	4228600	32	True				
ANR	4230159	Label	case '!' :	567:1:14738:14746	4228600	33	True				
ANR	4230160	ExpressionStatement	input = r_str_trim_ro ( input + 1 )	568:2:14758:14791	4228600	34	True				
ANR	4230161	AssignmentExpression	input = r_str_trim_ro ( input + 1 )		4228600	0		=			
ANR	4230162	Identifier	input		4228600	0					
ANR	4230163	CallExpression	r_str_trim_ro ( input + 1 )		4228600	1					
ANR	4230164	Callee	r_str_trim_ro		4228600	0					
ANR	4230165	Identifier	r_str_trim_ro		4228600	0					
ANR	4230166	ArgumentList	input + 1		4228600	1					
ANR	4230167	Argument	input + 1		4228600	0					
ANR	4230168	AdditiveExpression	input + 1		4228600	0		+			
ANR	4230169	Identifier	input		4228600	0					
ANR	4230170	PrimaryExpression	1		4228600	1					
ANR	4230171	IfStatement	"if ( ! r_config_toggle ( core -> config , input ) )"		4228600	35					
ANR	4230172	Condition	"! r_config_toggle ( core -> config , input )"	569:6:14799:14836	4228600	0	True				
ANR	4230173	UnaryOperationExpression	"! r_config_toggle ( core -> config , input )"		4228600	0					
ANR	4230174	UnaryOperator	!		4228600	0					
ANR	4230175	CallExpression	"r_config_toggle ( core -> config , input )"		4228600	1					
ANR	4230176	Callee	r_config_toggle		4228600	0					
ANR	4230177	Identifier	r_config_toggle		4228600	0					
ANR	4230178	ArgumentList	core -> config		4228600	1					
ANR	4230179	Argument	core -> config		4228600	0					
ANR	4230180	PtrMemberAccess	core -> config		4228600	0					
ANR	4230181	Identifier	core		4228600	0					
ANR	4230182	Identifier	config		4228600	1					
ANR	4230183	Argument	input		4228600	1					
ANR	4230184	Identifier	input		4228600	0					
ANR	4230185	CompoundStatement		262:46:6959:6959	4228600	1					
ANR	4230186	ExpressionStatement	"eprintf ( ""r_config: '%s' is not a boolean variable.\\n"" , input )"	570:3:14844:14906	4228600	0	True				
ANR	4230187	CallExpression	"eprintf ( ""r_config: '%s' is not a boolean variable.\\n"" , input )"		4228600	0					
ANR	4230188	Callee	eprintf		4228600	0					
ANR	4230189	Identifier	eprintf		4228600	0					
ANR	4230190	ArgumentList	"""r_config: '%s' is not a boolean variable.\\n"""		4228600	1					
ANR	4230191	Argument	"""r_config: '%s' is not a boolean variable.\\n"""		4228600	0					
ANR	4230192	PrimaryExpression	"""r_config: '%s' is not a boolean variable.\\n"""		4228600	0					
ANR	4230193	Argument	input		4228600	1					
ANR	4230194	Identifier	input		4228600	0					
ANR	4230195	BreakStatement	break ;	572:2:14914:14919	4228600	36	True				
ANR	4230196	Label	case 's' :	573:1:14922:14930	4228600	37	True				
ANR	4230197	ExpressionStatement	"r_config_list ( core -> config , ( input [ 1 ] ) ? input + 1 : NULL , 's' )"	574:2:14942:15004	4228600	38	True				
ANR	4230198	CallExpression	"r_config_list ( core -> config , ( input [ 1 ] ) ? input + 1 : NULL , 's' )"		4228600	0					
ANR	4230199	Callee	r_config_list		4228600	0					
ANR	4230200	Identifier	r_config_list		4228600	0					
ANR	4230201	ArgumentList	core -> config		4228600	1					
ANR	4230202	Argument	core -> config		4228600	0					
ANR	4230203	PtrMemberAccess	core -> config		4228600	0					
ANR	4230204	Identifier	core		4228600	0					
ANR	4230205	Identifier	config		4228600	1					
ANR	4230206	Argument	( input [ 1 ] ) ? input + 1 : NULL		4228600	1					
ANR	4230207	ConditionalExpression	( input [ 1 ] ) ? input + 1 : NULL		4228600	0					
ANR	4230208	Condition	input [ 1 ]		4228600	0					
ANR	4230209	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4230210	Identifier	input		4228600	0					
ANR	4230211	PrimaryExpression	1		4228600	1					
ANR	4230212	AdditiveExpression	input + 1		4228600	1		+			
ANR	4230213	Identifier	input		4228600	0					
ANR	4230214	PrimaryExpression	1		4228600	1					
ANR	4230215	Identifier	NULL		4228600	2					
ANR	4230216	Argument	's'		4228600	2					
ANR	4230217	PrimaryExpression	's'		4228600	0					
ANR	4230218	BreakStatement	break ;	575:2:15008:15013	4228600	39	True				
ANR	4230219	Label	case '-' :	576:1:15016:15024	4228600	40	True				
ANR	4230220	ExpressionStatement	r_core_config_init ( core )	577:2:15036:15061	4228600	41	True				
ANR	4230221	CallExpression	r_core_config_init ( core )		4228600	0					
ANR	4230222	Callee	r_core_config_init		4228600	0					
ANR	4230223	Identifier	r_core_config_init		4228600	0					
ANR	4230224	ArgumentList	core		4228600	1					
ANR	4230225	Argument	core		4228600	0					
ANR	4230226	Identifier	core		4228600	0					
ANR	4230227	BreakStatement	break ;	579:2:15151:15156	4228600	42	True				
ANR	4230228	Label	case '*' :	580:1:15159:15167	4228600	43	True				
ANR	4230229	ExpressionStatement	"r_config_list ( core -> config , NULL , 1 )"	581:2:15179:15216	4228600	44	True				
ANR	4230230	CallExpression	"r_config_list ( core -> config , NULL , 1 )"		4228600	0					
ANR	4230231	Callee	r_config_list		4228600	0					
ANR	4230232	Identifier	r_config_list		4228600	0					
ANR	4230233	ArgumentList	core -> config		4228600	1					
ANR	4230234	Argument	core -> config		4228600	0					
ANR	4230235	PtrMemberAccess	core -> config		4228600	0					
ANR	4230236	Identifier	core		4228600	0					
ANR	4230237	Identifier	config		4228600	1					
ANR	4230238	Argument	NULL		4228600	1					
ANR	4230239	Identifier	NULL		4228600	0					
ANR	4230240	Argument	1		4228600	2					
ANR	4230241	PrimaryExpression	1		4228600	0					
ANR	4230242	BreakStatement	break ;	582:2:15220:15225	4228600	45	True				
ANR	4230243	Label	case 'r' :	583:1:15228:15236	4228600	46	True				
ANR	4230244	IfStatement	if ( input [ 1 ] )		4228600	47					
ANR	4230245	Condition	input [ 1 ]	584:6:15252:15259	4228600	0	True				
ANR	4230246	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4230247	Identifier	input		4228600	0					
ANR	4230248	PrimaryExpression	1		4228600	1					
ANR	4230249	CompoundStatement		278:3:7387:7438	4228600	1					
ANR	4230250	IdentifierDeclStatement	const char * key = input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 ) ;	585:3:15267:15318	4228600	0	True				
ANR	4230251	IdentifierDecl	* key = input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 )		4228600	0					
ANR	4230252	IdentifierDeclType	const char *		4228600	0					
ANR	4230253	Identifier	key		4228600	1					
ANR	4230254	AssignmentExpression	* key = input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 )		4228600	2		=			
ANR	4230255	Identifier	key		4228600	0					
ANR	4230256	AdditiveExpression	input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 )		4228600	1		+			
ANR	4230257	Identifier	input		4228600	0					
ANR	4230258	ConditionalExpression	( input [ 1 ] == ' ' ) ? 2 : 1		4228600	1					
ANR	4230259	Condition	input [ 1 ] == ' '		4228600	0					
ANR	4230260	EqualityExpression	input [ 1 ] == ' '		4228600	0		==			
ANR	4230261	ArrayIndexing	input [ 1 ]		4228600	0					
ANR	4230262	Identifier	input		4228600	0					
ANR	4230263	PrimaryExpression	1		4228600	1					
ANR	4230264	PrimaryExpression	' '		4228600	1					
ANR	4230265	PrimaryExpression	2		4228600	1					
ANR	4230266	PrimaryExpression	1		4228600	2					
ANR	4230267	IfStatement	"if ( ! r_config_readonly ( core -> config , key ) )"		4228600	1					
ANR	4230268	Condition	"! r_config_readonly ( core -> config , key )"	586:7:15327:15364	4228600	0	True				
ANR	4230269	UnaryOperationExpression	"! r_config_readonly ( core -> config , key )"		4228600	0					
ANR	4230270	UnaryOperator	!		4228600	0					
ANR	4230271	CallExpression	"r_config_readonly ( core -> config , key )"		4228600	1					
ANR	4230272	Callee	r_config_readonly		4228600	0					
ANR	4230273	Identifier	r_config_readonly		4228600	0					
ANR	4230274	ArgumentList	core -> config		4228600	1					
ANR	4230275	Argument	core -> config		4228600	0					
ANR	4230276	PtrMemberAccess	core -> config		4228600	0					
ANR	4230277	Identifier	core		4228600	0					
ANR	4230278	Identifier	config		4228600	1					
ANR	4230279	Argument	key		4228600	1					
ANR	4230280	Identifier	key		4228600	0					
ANR	4230281	CompoundStatement		279:47:7487:7487	4228600	1					
ANR	4230282	ExpressionStatement	"eprintf ( ""cannot find key '%s'\\n"" , key )"	587:4:15373:15412	4228600	0	True				
ANR	4230283	CallExpression	"eprintf ( ""cannot find key '%s'\\n"" , key )"		4228600	0					
ANR	4230284	Callee	eprintf		4228600	0					
ANR	4230285	Identifier	eprintf		4228600	0					
ANR	4230286	ArgumentList	"""cannot find key '%s'\\n"""		4228600	1					
ANR	4230287	Argument	"""cannot find key '%s'\\n"""		4228600	0					
ANR	4230288	PrimaryExpression	"""cannot find key '%s'\\n"""		4228600	0					
ANR	4230289	Argument	key		4228600	1					
ANR	4230290	Identifier	key		4228600	0					
ANR	4230291	ElseStatement	else		4228600	0					
ANR	4230292	CompoundStatement		282:9:7548:7548	4228600	0					
ANR	4230293	ExpressionStatement	"eprintf ( ""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"" )"	590:3:15433:15504	4228600	0	True				
ANR	4230294	CallExpression	"eprintf ( ""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"" )"		4228600	0					
ANR	4230295	Callee	eprintf		4228600	0					
ANR	4230296	Identifier	eprintf		4228600	0					
ANR	4230297	ArgumentList	"""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"""		4228600	1					
ANR	4230298	Argument	"""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"""		4228600	0					
ANR	4230299	PrimaryExpression	"""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"""		4228600	0					
ANR	4230300	BreakStatement	break ;	592:2:15512:15517	4228600	48	True				
ANR	4230301	Label	"case ',' :"	593:1:15520:15528	4228600	49	True				
ANR	4230302	ExpressionStatement	"r_config_eval ( core -> config , input + 1 , true )"	594:2:15540:15585	4228600	50	True				
ANR	4230303	CallExpression	"r_config_eval ( core -> config , input + 1 , true )"		4228600	0					
ANR	4230304	Callee	r_config_eval		4228600	0					
ANR	4230305	Identifier	r_config_eval		4228600	0					
ANR	4230306	ArgumentList	core -> config		4228600	1					
ANR	4230307	Argument	core -> config		4228600	0					
ANR	4230308	PtrMemberAccess	core -> config		4228600	0					
ANR	4230309	Identifier	core		4228600	0					
ANR	4230310	Identifier	config		4228600	1					
ANR	4230311	Argument	input + 1		4228600	1					
ANR	4230312	AdditiveExpression	input + 1		4228600	0		+			
ANR	4230313	Identifier	input		4228600	0					
ANR	4230314	PrimaryExpression	1		4228600	1					
ANR	4230315	Argument	true		4228600	2					
ANR	4230316	Identifier	true		4228600	0					
ANR	4230317	BreakStatement	break ;	595:2:15589:15594	4228600	51	True				
ANR	4230318	Label	case '.' :	596:1:15597:15605	4228600	52	True				
ANR	4230319	Label	case ' ' :	597:1:15616:15624	4228600	53	True				
ANR	4230320	IfStatement	"if ( r_str_endswith ( input , ""."" ) )"		4228600	54					
ANR	4230321	Condition	"r_str_endswith ( input , ""."" )"	598:6:15640:15666	4228600	0	True				
ANR	4230322	CallExpression	"r_str_endswith ( input , ""."" )"		4228600	0					
ANR	4230323	Callee	r_str_endswith		4228600	0					
ANR	4230324	Identifier	r_str_endswith		4228600	0					
ANR	4230325	ArgumentList	input		4228600	1					
ANR	4230326	Argument	input		4228600	0					
ANR	4230327	Identifier	input		4228600	0					
ANR	4230328	Argument	"""."""		4228600	1					
ANR	4230329	PrimaryExpression	"""."""		4228600	0					
ANR	4230330	CompoundStatement		291:35:7789:7789	4228600	1					
ANR	4230331	ExpressionStatement	"r_config_list ( core -> config , input + 1 , 0 )"	599:3:15674:15716	4228600	0	True				
ANR	4230332	CallExpression	"r_config_list ( core -> config , input + 1 , 0 )"		4228600	0					
ANR	4230333	Callee	r_config_list		4228600	0					
ANR	4230334	Identifier	r_config_list		4228600	0					
ANR	4230335	ArgumentList	core -> config		4228600	1					
ANR	4230336	Argument	core -> config		4228600	0					
ANR	4230337	PtrMemberAccess	core -> config		4228600	0					
ANR	4230338	Identifier	core		4228600	0					
ANR	4230339	Identifier	config		4228600	1					
ANR	4230340	Argument	input + 1		4228600	1					
ANR	4230341	AdditiveExpression	input + 1		4228600	0		+			
ANR	4230342	Identifier	input		4228600	0					
ANR	4230343	PrimaryExpression	1		4228600	1					
ANR	4230344	Argument	0		4228600	2					
ANR	4230345	PrimaryExpression	0		4228600	0					
ANR	4230346	ElseStatement	else		4228600	0					
ANR	4230347	CompoundStatement		293:9:7847:7847	4228600	0					
ANR	4230348	ExpressionStatement	"r_config_eval ( core -> config , input + 1 , false )"	602:3:15829:15875	4228600	0	True				
ANR	4230349	CallExpression	"r_config_eval ( core -> config , input + 1 , false )"		4228600	0					
ANR	4230350	Callee	r_config_eval		4228600	0					
ANR	4230351	Identifier	r_config_eval		4228600	0					
ANR	4230352	ArgumentList	core -> config		4228600	1					
ANR	4230353	Argument	core -> config		4228600	0					
ANR	4230354	PtrMemberAccess	core -> config		4228600	0					
ANR	4230355	Identifier	core		4228600	0					
ANR	4230356	Identifier	config		4228600	1					
ANR	4230357	Argument	input + 1		4228600	1					
ANR	4230358	AdditiveExpression	input + 1		4228600	0		+			
ANR	4230359	Identifier	input		4228600	0					
ANR	4230360	PrimaryExpression	1		4228600	1					
ANR	4230361	Argument	false		4228600	2					
ANR	4230362	Identifier	false		4228600	0					
ANR	4230363	BreakStatement	break ;	604:2:15883:15888	4228600	55	True				
ANR	4230364	ReturnStatement	return 0 ;	606:1:15894:15902	4228600	2	True				
ANR	4230365	PrimaryExpression	0		4228600	0					
ANR	4230366	ReturnType	static int		4228600	1					
ANR	4230367	Identifier	cmd_eval		4228600	2					
ANR	4230368	ParameterList	"void * data , const char * input"		4228600	3					
ANR	4230369	Parameter	void * data	308:20:7848:7857	4228600	0	True				
ANR	4230370	ParameterType	void *		4228600	0					
ANR	4230371	Identifier	data		4228600	1					
ANR	4230372	Parameter	const char * input	308:32:7860:7876	4228600	1	True				
ANR	4230373	ParameterType	const char *		4228600	0					
ANR	4230374	Identifier	input		4228600	1					
ANR	4230375	CFGEntryNode	ENTRY		4228600		True				
ANR	4230376	CFGExitNode	EXIT		4228600		True				
ANR	4230377	Symbol	r_core_list_themes		4228600						
ANR	4230378	Symbol	r_core_get_theme		4228600						
ANR	4230379	Symbol	data		4228600						
ANR	4230380	Symbol	cmd_quit		4228600						
ANR	4230381	Symbol	r_sys_getenv		4228600						
ANR	4230382	Symbol	* q ++		4228600						
ANR	4230383	Symbol	* input		4228600						
ANR	4230384	Symbol	& rcolor		4228600						
ANR	4230385	Symbol	strchr		4228600						
ANR	4230386	Symbol	core -> offset		4228600						
ANR	4230387	Symbol	* argv		4228600						
ANR	4230388	Symbol	type		4228600						
ANR	4230389	Symbol	strlen		4228600						
ANR	4230390	Symbol	r_core_editor		4228600						
ANR	4230391	Symbol	color_code		4228600						
ANR	4230392	Symbol	rcolor		4228600						
ANR	4230393	Symbol	strcmp		4228600						
ANR	4230394	Symbol	val		4228600						
ANR	4230395	Symbol	res		4228600						
ANR	4230396	Symbol	r_cons_is_interactive		4228600						
ANR	4230397	Symbol	NULL		4228600						
ANR	4230398	Symbol	* v ++		4228600						
ANR	4230399	Symbol	themes_list		4228600						
ANR	4230400	Symbol	var		4228600						
ANR	4230401	Symbol	r_cons_pal_set		4228600						
ANR	4230402	Symbol	r_config_readonly		4228600						
ANR	4230403	Symbol	helpmsg		4228600						
ANR	4230404	Symbol	help_msg_eco		4228600						
ANR	4230405	Symbol	r_cons_pal_get		4228600						
ANR	4230406	Symbol	r_sys_get_environ		4228600						
ANR	4230407	Symbol	str		4228600						
ANR	4230408	Symbol	input		4228600						
ANR	4230409	Symbol	core		4228600						
ANR	4230410	Symbol	node		4228600						
ANR	4230411	Symbol	r_cons_singleton ( ) -> context -> pal . wordhl		4228600						
ANR	4230412	Symbol	th_iter		4228600						
ANR	4230413	Symbol	r_config_node_type		4228600						
ANR	4230414	Symbol	true		4228600						
ANR	4230415	Symbol	r_str_trim_ro		4228600						
ANR	4230416	Symbol	r_config_node_get		4228600						
ANR	4230417	Symbol	word		4228600						
ANR	4230418	Symbol	core -> cons -> context		4228600						
ANR	4230419	Symbol	color		4228600						
ANR	4230420	Symbol	* core -> cons		4228600						
ANR	4230421	Symbol	input2		4228600						
ANR	4230422	Symbol	* core		4228600						
ANR	4230423	Symbol	r_config_get		4228600						
ANR	4230424	Symbol	help_msg_e		4228600						
ANR	4230425	Symbol	r_str_newf		4228600						
ANR	4230426	Symbol	argv		4228600						
ANR	4230427	Symbol	core -> anal		4228600						
ANR	4230428	Symbol	r_cons_pal_parse		4228600						
ANR	4230429	Symbol	& argc		4228600						
ANR	4230430	Symbol	* var		4228600						
ANR	4230431	Symbol	core -> cons		4228600						
ANR	4230432	Symbol	file		4228600						
ANR	4230433	Symbol	* type		4228600						
ANR	4230434	Symbol	R_META_TYPE_HIGHLIGHT		4228600						
ANR	4230435	Symbol	r_cons_singleton		4228600						
ANR	4230436	Symbol	r_str_endswith		4228600						
ANR	4230437	Symbol	r_str_home		4228600						
ANR	4230438	Symbol	* * core		4228600						
ANR	4230439	Symbol	r_meta_get_string		4228600						
ANR	4230440	Symbol	key		4228600						
ANR	4230441	Symbol	r_str_argv		4228600						
ANR	4230442	Symbol	core -> config		4228600						
ANR	4230443	Symbol	curtheme		4228600						
ANR	4230444	Symbol	argc		4228600						
ANR	4230445	Symbol	help_msg_ec		4228600						
ANR	4230446	Symbol	e		4228600						
ANR	4230447	Symbol	r_cons_singleton ( ) -> context -> pal		4228600						
ANR	4230448	Symbol	false		4228600						
ANR	4230449	Symbol	r_cons_yesno		4228600						
ANR	4230450	Symbol	* r_cons_singleton ( ) -> context		4228600						
ANR	4230451	Symbol	k		4228600						
ANR	4230452	Symbol	* * r_cons_singleton		4228600						
ANR	4230453	Symbol	r_num_rand		4228600						
ANR	4230454	Symbol	* e		4228600						
ANR	4230455	Symbol	p		4228600						
ANR	4230456	Symbol	q		4228600						
ANR	4230457	Symbol	r_config_toggle		4228600						
ANR	4230458	Symbol	th		4228600						
ANR	4230459	Symbol	v		4228600						
ANR	4230460	Symbol	r_cons_editor		4228600						
ANR	4230461	Symbol	strdup		4228600						
ANR	4230462	Symbol	r_cons_singleton ( ) -> context		4228600						
ANR	4230463	Symbol	dup		4228600						
ANR	4230464	Symbol	* r_cons_singleton		4228600						
