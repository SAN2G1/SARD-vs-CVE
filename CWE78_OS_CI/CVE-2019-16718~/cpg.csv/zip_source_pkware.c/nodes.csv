command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6645204	File	data/converged/CVE-2019-16718~_radare2/zip_source_pkware.c								
ANR	6645205	ClassDef	trad_pkware	41:0:1709:1770							
ANR	6645206	DeclStmt									
ANR	6645207	Decl							int	int [ 2 ]	e
ANR	6645208	DeclStmt									
ANR	6645209	Decl							zip_uint32_t	zip_uint32_t [ 3 ]	key
ANR	6645210	DeclStmt									
ANR	6645211	Decl							void	"void ( struct trad_pkware * , zip_uint8_t * , const zip_uint8_t * , zip_uint64_t , int )"	decrypt
ANR	6645212	DeclStmt									
ANR	6645213	Decl							int	"int ( struct zip_source * , struct trad_pkware * )"	decrypt_header
ANR	6645214	DeclStmt									
ANR	6645215	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	pkware_decrypt
ANR	6645216	DeclStmt									
ANR	6645217	Decl							void	void ( struct trad_pkware * )	pkware_free
ANR	6645218	Function	zip_source_pkware	63:0:2209:3091							
ANR	6645219	FunctionDef	"zip_source_pkware (struct zip * za , struct zip_source * src , zip_uint16_t em , int flags , const char * password)"		6645218	0					
ANR	6645220	CompoundStatement		66:0:2341:3091	6645218	0					
ANR	6645221	IdentifierDeclStatement	struct trad_pkware * ctx ;	67:4:2347:2370	6645218	0	True				
ANR	6645222	IdentifierDecl	* ctx		6645218	0					
ANR	6645223	IdentifierDeclType	struct trad_pkware *		6645218	0					
ANR	6645224	Identifier	ctx		6645218	1					
ANR	6645225	IdentifierDeclStatement	struct zip_source * s2 ;	68:4:2376:2397	6645218	1	True				
ANR	6645226	IdentifierDecl	* s2		6645218	0					
ANR	6645227	IdentifierDeclType	struct zip_source *		6645218	0					
ANR	6645228	Identifier	s2		6645218	1					
ANR	6645229	IfStatement	if ( password == NULL || src == NULL || em != ZIP_EM_TRAD_PKWARE )		6645218	2					
ANR	6645230	Condition	password == NULL || src == NULL || em != ZIP_EM_TRAD_PKWARE	70:8:2408:2466	6645218	0	True				
ANR	6645231	OrExpression	password == NULL || src == NULL || em != ZIP_EM_TRAD_PKWARE		6645218	0		||			
ANR	6645232	EqualityExpression	password == NULL		6645218	0		==			
ANR	6645233	Identifier	password		6645218	0					
ANR	6645234	Identifier	NULL		6645218	1					
ANR	6645235	OrExpression	src == NULL || em != ZIP_EM_TRAD_PKWARE		6645218	1		||			
ANR	6645236	EqualityExpression	src == NULL		6645218	0		==			
ANR	6645237	Identifier	src		6645218	0					
ANR	6645238	Identifier	NULL		6645218	1					
ANR	6645239	EqualityExpression	em != ZIP_EM_TRAD_PKWARE		6645218	1		!=			
ANR	6645240	Identifier	em		6645218	0					
ANR	6645241	Identifier	ZIP_EM_TRAD_PKWARE		6645218	1					
ANR	6645242	CompoundStatement		5:69:127:127	6645218	1					
ANR	6645243	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	71:1:2472:2515	6645218	0	True				
ANR	6645244	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6645218	0					
ANR	6645245	Callee	_zip_error_set		6645218	0					
ANR	6645246	Identifier	_zip_error_set		6645218	0					
ANR	6645247	ArgumentList	& za -> error		6645218	1					
ANR	6645248	Argument	& za -> error		6645218	0					
ANR	6645249	UnaryOperationExpression	& za -> error		6645218	0					
ANR	6645250	UnaryOperator	&		6645218	0					
ANR	6645251	PtrMemberAccess	za -> error		6645218	1					
ANR	6645252	Identifier	za		6645218	0					
ANR	6645253	Identifier	error		6645218	1					
ANR	6645254	Argument	ZIP_ER_INVAL		6645218	1					
ANR	6645255	Identifier	ZIP_ER_INVAL		6645218	0					
ANR	6645256	Argument	0		6645218	2					
ANR	6645257	PrimaryExpression	0		6645218	0					
ANR	6645258	ReturnStatement	return NULL ;	72:1:2518:2529	6645218	1	True				
ANR	6645259	Identifier	NULL		6645218	0					
ANR	6645260	IfStatement	if ( flags & ZIP_CODEC_ENCODE )		6645218	3					
ANR	6645261	Condition	flags & ZIP_CODEC_ENCODE	74:8:2545:2568	6645218	0	True				
ANR	6645262	BitAndExpression	flags & ZIP_CODEC_ENCODE		6645218	0		&			
ANR	6645263	Identifier	flags		6645218	0					
ANR	6645264	Identifier	ZIP_CODEC_ENCODE		6645218	1					
ANR	6645265	CompoundStatement		9:34:229:229	6645218	1					
ANR	6645266	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_ENCRNOTSUPP , 0 )"	75:1:2574:2623	6645218	0	True				
ANR	6645267	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_ENCRNOTSUPP , 0 )"		6645218	0					
ANR	6645268	Callee	_zip_error_set		6645218	0					
ANR	6645269	Identifier	_zip_error_set		6645218	0					
ANR	6645270	ArgumentList	& za -> error		6645218	1					
ANR	6645271	Argument	& za -> error		6645218	0					
ANR	6645272	UnaryOperationExpression	& za -> error		6645218	0					
ANR	6645273	UnaryOperator	&		6645218	0					
ANR	6645274	PtrMemberAccess	za -> error		6645218	1					
ANR	6645275	Identifier	za		6645218	0					
ANR	6645276	Identifier	error		6645218	1					
ANR	6645277	Argument	ZIP_ER_ENCRNOTSUPP		6645218	1					
ANR	6645278	Identifier	ZIP_ER_ENCRNOTSUPP		6645218	0					
ANR	6645279	Argument	0		6645218	2					
ANR	6645280	PrimaryExpression	0		6645218	0					
ANR	6645281	ReturnStatement	return NULL ;	76:1:2626:2637	6645218	1	True				
ANR	6645282	Identifier	NULL		6645218	0					
ANR	6645283	IfStatement	if ( ( ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) ) ) == NULL )		6645218	4					
ANR	6645284	Condition	( ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) ) ) == NULL	79:8:2654:2709	6645218	0	True				
ANR	6645285	EqualityExpression	( ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) ) ) == NULL		6645218	0		==			
ANR	6645286	AssignmentExpression	ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) )		6645218	0		=			
ANR	6645287	Identifier	ctx		6645218	0					
ANR	6645288	CastExpression	( struct trad_pkware * ) malloc ( sizeof ( * ctx ) )		6645218	1					
ANR	6645289	CastTarget	struct trad_pkware *		6645218	0					
ANR	6645290	CallExpression	malloc ( sizeof ( * ctx ) )		6645218	1					
ANR	6645291	Callee	malloc		6645218	0					
ANR	6645292	Identifier	malloc		6645218	0					
ANR	6645293	ArgumentList	sizeof ( * ctx )		6645218	1					
ANR	6645294	Argument	sizeof ( * ctx )		6645218	0					
ANR	6645295	SizeofExpression	sizeof ( * ctx )		6645218	0					
ANR	6645296	Sizeof	sizeof		6645218	0					
ANR	6645297	UnaryOperationExpression	* ctx		6645218	1					
ANR	6645298	UnaryOperator	*		6645218	0					
ANR	6645299	Identifier	ctx		6645218	1					
ANR	6645300	Identifier	NULL		6645218	1					
ANR	6645301	CompoundStatement		14:66:370:370	6645218	1					
ANR	6645302	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	80:1:2715:2759	6645218	0	True				
ANR	6645303	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6645218	0					
ANR	6645304	Callee	_zip_error_set		6645218	0					
ANR	6645305	Identifier	_zip_error_set		6645218	0					
ANR	6645306	ArgumentList	& za -> error		6645218	1					
ANR	6645307	Argument	& za -> error		6645218	0					
ANR	6645308	UnaryOperationExpression	& za -> error		6645218	0					
ANR	6645309	UnaryOperator	&		6645218	0					
ANR	6645310	PtrMemberAccess	za -> error		6645218	1					
ANR	6645311	Identifier	za		6645218	0					
ANR	6645312	Identifier	error		6645218	1					
ANR	6645313	Argument	ZIP_ER_MEMORY		6645218	1					
ANR	6645314	Identifier	ZIP_ER_MEMORY		6645218	0					
ANR	6645315	Argument	0		6645218	2					
ANR	6645316	PrimaryExpression	0		6645218	0					
ANR	6645317	ReturnStatement	return NULL ;	81:1:2762:2773	6645218	1	True				
ANR	6645318	Identifier	NULL		6645218	0					
ANR	6645319	ExpressionStatement	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0	84:4:2786:2811	6645218	5	True				
ANR	6645320	AssignmentExpression	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0		6645218	0		=			
ANR	6645321	ArrayIndexing	ctx -> e [ 0 ]		6645218	0					
ANR	6645322	PtrMemberAccess	ctx -> e		6645218	0					
ANR	6645323	Identifier	ctx		6645218	0					
ANR	6645324	Identifier	e		6645218	1					
ANR	6645325	PrimaryExpression	0		6645218	1					
ANR	6645326	AssignmentExpression	ctx -> e [ 1 ] = 0		6645218	1		=			
ANR	6645327	ArrayIndexing	ctx -> e [ 1 ]		6645218	0					
ANR	6645328	PtrMemberAccess	ctx -> e		6645218	0					
ANR	6645329	Identifier	ctx		6645218	0					
ANR	6645330	Identifier	e		6645218	1					
ANR	6645331	PrimaryExpression	1		6645218	1					
ANR	6645332	PrimaryExpression	0		6645218	1					
ANR	6645333	ExpressionStatement	ctx -> key [ 0 ] = KEY0	86:4:2818:2836	6645218	6	True				
ANR	6645334	AssignmentExpression	ctx -> key [ 0 ] = KEY0		6645218	0		=			
ANR	6645335	ArrayIndexing	ctx -> key [ 0 ]		6645218	0					
ANR	6645336	PtrMemberAccess	ctx -> key		6645218	0					
ANR	6645337	Identifier	ctx		6645218	0					
ANR	6645338	Identifier	key		6645218	1					
ANR	6645339	PrimaryExpression	0		6645218	1					
ANR	6645340	Identifier	KEY0		6645218	1					
ANR	6645341	ExpressionStatement	ctx -> key [ 1 ] = KEY1	87:4:2842:2860	6645218	7	True				
ANR	6645342	AssignmentExpression	ctx -> key [ 1 ] = KEY1		6645218	0		=			
ANR	6645343	ArrayIndexing	ctx -> key [ 1 ]		6645218	0					
ANR	6645344	PtrMemberAccess	ctx -> key		6645218	0					
ANR	6645345	Identifier	ctx		6645218	0					
ANR	6645346	Identifier	key		6645218	1					
ANR	6645347	PrimaryExpression	1		6645218	1					
ANR	6645348	Identifier	KEY1		6645218	1					
ANR	6645349	ExpressionStatement	ctx -> key [ 2 ] = KEY2	88:4:2866:2884	6645218	8	True				
ANR	6645350	AssignmentExpression	ctx -> key [ 2 ] = KEY2		6645218	0		=			
ANR	6645351	ArrayIndexing	ctx -> key [ 2 ]		6645218	0					
ANR	6645352	PtrMemberAccess	ctx -> key		6645218	0					
ANR	6645353	Identifier	ctx		6645218	0					
ANR	6645354	Identifier	key		6645218	1					
ANR	6645355	PrimaryExpression	2		6645218	1					
ANR	6645356	Identifier	KEY2		6645218	1					
ANR	6645357	ExpressionStatement	"decrypt ( ctx , NULL , ( const zip_uint8_t * ) password , strlen ( password ) , 1 )"	89:4:2890:2960	6645218	9	True				
ANR	6645358	CallExpression	"decrypt ( ctx , NULL , ( const zip_uint8_t * ) password , strlen ( password ) , 1 )"		6645218	0					
ANR	6645359	Callee	decrypt		6645218	0					
ANR	6645360	Identifier	decrypt		6645218	0					
ANR	6645361	ArgumentList	ctx		6645218	1					
ANR	6645362	Argument	ctx		6645218	0					
ANR	6645363	Identifier	ctx		6645218	0					
ANR	6645364	Argument	NULL		6645218	1					
ANR	6645365	Identifier	NULL		6645218	0					
ANR	6645366	Argument	( const zip_uint8_t * ) password		6645218	2					
ANR	6645367	CastExpression	( const zip_uint8_t * ) password		6645218	0					
ANR	6645368	CastTarget	const zip_uint8_t *		6645218	0					
ANR	6645369	Identifier	password		6645218	1					
ANR	6645370	Argument	strlen ( password )		6645218	3					
ANR	6645371	CallExpression	strlen ( password )		6645218	0					
ANR	6645372	Callee	strlen		6645218	0					
ANR	6645373	Identifier	strlen		6645218	0					
ANR	6645374	ArgumentList	password		6645218	1					
ANR	6645375	Argument	password		6645218	0					
ANR	6645376	Identifier	password		6645218	0					
ANR	6645377	Argument	1		6645218	4					
ANR	6645378	PrimaryExpression	1		6645218	0					
ANR	6645379	IfStatement	"if ( ( s2 = zip_source_layered ( za , src , pkware_decrypt , ctx ) ) == NULL )"		6645218	10					
ANR	6645380	Condition	"( s2 = zip_source_layered ( za , src , pkware_decrypt , ctx ) ) == NULL"	91:8:2971:3031	6645218	0	True				
ANR	6645381	EqualityExpression	"( s2 = zip_source_layered ( za , src , pkware_decrypt , ctx ) ) == NULL"		6645218	0		==			
ANR	6645382	AssignmentExpression	"s2 = zip_source_layered ( za , src , pkware_decrypt , ctx )"		6645218	0		=			
ANR	6645383	Identifier	s2		6645218	0					
ANR	6645384	CallExpression	"zip_source_layered ( za , src , pkware_decrypt , ctx )"		6645218	1					
ANR	6645385	Callee	zip_source_layered		6645218	0					
ANR	6645386	Identifier	zip_source_layered		6645218	0					
ANR	6645387	ArgumentList	za		6645218	1					
ANR	6645388	Argument	za		6645218	0					
ANR	6645389	Identifier	za		6645218	0					
ANR	6645390	Argument	src		6645218	1					
ANR	6645391	Identifier	src		6645218	0					
ANR	6645392	Argument	pkware_decrypt		6645218	2					
ANR	6645393	Identifier	pkware_decrypt		6645218	0					
ANR	6645394	Argument	ctx		6645218	3					
ANR	6645395	Identifier	ctx		6645218	0					
ANR	6645396	Identifier	NULL		6645218	1					
ANR	6645397	CompoundStatement		26:71:692:692	6645218	1					
ANR	6645398	ExpressionStatement	pkware_free ( ctx )	92:1:3037:3053	6645218	0	True				
ANR	6645399	CallExpression	pkware_free ( ctx )		6645218	0					
ANR	6645400	Callee	pkware_free		6645218	0					
ANR	6645401	Identifier	pkware_free		6645218	0					
ANR	6645402	ArgumentList	ctx		6645218	1					
ANR	6645403	Argument	ctx		6645218	0					
ANR	6645404	Identifier	ctx		6645218	0					
ANR	6645405	ReturnStatement	return NULL ;	93:1:3056:3067	6645218	1	True				
ANR	6645406	Identifier	NULL		6645218	0					
ANR	6645407	ReturnStatement	return s2 ;	96:4:3080:3089	6645218	11	True				
ANR	6645408	Identifier	s2		6645218	0					
ANR	6645409	ReturnType	struct zip_source *		6645218	1					
ANR	6645410	Identifier	zip_source_pkware		6645218	2					
ANR	6645411	ParameterList	"struct zip * za , struct zip_source * src , zip_uint16_t em , int flags , const char * password"		6645218	3					
ANR	6645412	Parameter	struct zip * za	64:18:2247:2260	6645218	0	True				
ANR	6645413	ParameterType	struct zip *		6645218	0					
ANR	6645414	Identifier	za		6645218	1					
ANR	6645415	Parameter	struct zip_source * src	64:34:2263:2284	6645218	1	True				
ANR	6645416	ParameterType	struct zip_source *		6645218	0					
ANR	6645417	Identifier	src		6645218	1					
ANR	6645418	Parameter	zip_uint16_t em	65:4:2291:2305	6645218	2	True				
ANR	6645419	ParameterType	zip_uint16_t		6645218	0					
ANR	6645420	Identifier	em		6645218	1					
ANR	6645421	Parameter	int flags	65:21:2308:2316	6645218	3	True				
ANR	6645422	ParameterType	int		6645218	0					
ANR	6645423	Identifier	flags		6645218	1					
ANR	6645424	Parameter	const char * password	65:32:2319:2338	6645218	4	True				
ANR	6645425	ParameterType	const char *		6645218	0					
ANR	6645426	Identifier	password		6645218	1					
ANR	6645427	CFGEntryNode	ENTRY		6645218		True				
ANR	6645428	CFGExitNode	EXIT		6645218		True				
ANR	6645429	Symbol	* ctx -> key		6645218						
ANR	6645430	Symbol	& za -> error		6645218						
ANR	6645431	Symbol	flags		6645218						
ANR	6645432	Symbol	ctx -> key		6645218						
ANR	6645433	Symbol	ctx -> e		6645218						
ANR	6645434	Symbol	ZIP_ER_INVAL		6645218						
ANR	6645435	Symbol	strlen		6645218						
ANR	6645436	Symbol	password		6645218						
ANR	6645437	Symbol	ZIP_ER_ENCRNOTSUPP		6645218						
ANR	6645438	Symbol	* ctx -> e		6645218						
ANR	6645439	Symbol	ZIP_ER_MEMORY		6645218						
ANR	6645440	Symbol	s2		6645218						
ANR	6645441	Symbol	malloc		6645218						
ANR	6645442	Symbol	NULL		6645218						
ANR	6645443	Symbol	src		6645218						
ANR	6645444	Symbol	ctx		6645218						
ANR	6645445	Symbol	za		6645218						
ANR	6645446	Symbol	em		6645218						
ANR	6645447	Symbol	ZIP_CODEC_ENCODE		6645218						
ANR	6645448	Symbol	ZIP_EM_TRAD_PKWARE		6645218						
ANR	6645449	Symbol	* ctx		6645218						
ANR	6645450	Symbol	KEY2		6645218						
ANR	6645451	Symbol	KEY1		6645218						
ANR	6645452	Symbol	KEY0		6645218						
ANR	6645453	Symbol	zip_source_layered		6645218						
ANR	6645454	Symbol	pkware_decrypt		6645218						
ANR	6645455	Symbol	* * ctx		6645218						
ANR	6645456	Function	decrypt	101:0:3097:3807							
ANR	6645457	FunctionDef	"decrypt (struct trad_pkware * ctx , zip_uint8_t * out , const zip_uint8_t * in , zip_uint64_t len , int update_only)"		6645456	0					
ANR	6645458	CompoundStatement		104:0:3219:3807	6645456	0					
ANR	6645459	IdentifierDeclStatement	zip_uint16_t tmp ;	105:4:3225:3241	6645456	0	True				
ANR	6645460	IdentifierDecl	tmp		6645456	0					
ANR	6645461	IdentifierDeclType	zip_uint16_t		6645456	0					
ANR	6645462	Identifier	tmp		6645456	1					
ANR	6645463	IdentifierDeclStatement	zip_uint64_t i ;	106:4:3247:3261	6645456	1	True				
ANR	6645464	IdentifierDecl	i		6645456	0					
ANR	6645465	IdentifierDeclType	zip_uint64_t		6645456	0					
ANR	6645466	Identifier	i		6645456	1					
ANR	6645467	IdentifierDeclStatement	Bytef b ;	107:4:3267:3274	6645456	2	True				
ANR	6645468	IdentifierDecl	b		6645456	0					
ANR	6645469	IdentifierDeclType	Bytef		6645456	0					
ANR	6645470	Identifier	b		6645456	1					
ANR	6645471	ForStatement	for ( i = 0 ; i < len ; i ++ )		6645456	3					
ANR	6645472	ForInit	i = 0 ;	109:9:3286:3289	6645456	0	True				
ANR	6645473	AssignmentExpression	i = 0		6645456	0		=			
ANR	6645474	Identifier	i		6645456	0					
ANR	6645475	PrimaryExpression	0		6645456	1					
ANR	6645476	Condition	i < len	109:14:3291:3295	6645456	1	True				
ANR	6645477	RelationalExpression	i < len		6645456	0		<			
ANR	6645478	Identifier	i		6645456	0					
ANR	6645479	Identifier	len		6645456	1					
ANR	6645480	PostIncDecOperationExpression	i ++	109:21:3298:3300	6645456	2	True				
ANR	6645481	Identifier	i		6645456	0					
ANR	6645482	IncDec	++		6645456	1					
ANR	6645483	CompoundStatement		6:26:83:83	6645456	3					
ANR	6645484	ExpressionStatement	b = in [ i ]	110:1:3306:3315	6645456	0	True				
ANR	6645485	AssignmentExpression	b = in [ i ]		6645456	0		=			
ANR	6645486	Identifier	b		6645456	0					
ANR	6645487	ArrayIndexing	in [ i ]		6645456	1					
ANR	6645488	Identifier	in		6645456	0					
ANR	6645489	Identifier	i		6645456	1					
ANR	6645490	IfStatement	if ( ! update_only )		6645456	1					
ANR	6645491	Condition	! update_only	112:5:3323:3334	6645456	0	True				
ANR	6645492	UnaryOperationExpression	! update_only		6645456	0					
ANR	6645493	UnaryOperator	!		6645456	0					
ANR	6645494	Identifier	update_only		6645456	1					
ANR	6645495	CompoundStatement		9:19:117:117	6645456	1					
ANR	6645496	ExpressionStatement	tmp = ( zip_uint16_t ) ( ctx -> key [ 2 ] | 2 )	114:5:3373:3410	6645456	0	True				
ANR	6645497	AssignmentExpression	tmp = ( zip_uint16_t ) ( ctx -> key [ 2 ] | 2 )		6645456	0		=			
ANR	6645498	Identifier	tmp		6645456	0					
ANR	6645499	CastExpression	( zip_uint16_t ) ( ctx -> key [ 2 ] | 2 )		6645456	1					
ANR	6645500	CastTarget	zip_uint16_t		6645456	0					
ANR	6645501	InclusiveOrExpression	ctx -> key [ 2 ] | 2		6645456	1		|			
ANR	6645502	ArrayIndexing	ctx -> key [ 2 ]		6645456	0					
ANR	6645503	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645504	Identifier	ctx		6645456	0					
ANR	6645505	Identifier	key		6645456	1					
ANR	6645506	PrimaryExpression	2		6645456	1					
ANR	6645507	PrimaryExpression	2		6645456	1					
ANR	6645508	ExpressionStatement	tmp = ( tmp * ( tmp ^ 1 ) ) >> 8	115:5:3417:3445	6645456	1	True				
ANR	6645509	AssignmentExpression	tmp = ( tmp * ( tmp ^ 1 ) ) >> 8		6645456	0		=			
ANR	6645510	Identifier	tmp		6645456	0					
ANR	6645511	ShiftExpression	( tmp * ( tmp ^ 1 ) ) >> 8		6645456	1		>>			
ANR	6645512	MultiplicativeExpression	tmp * ( tmp ^ 1 )		6645456	0		*			
ANR	6645513	Identifier	tmp		6645456	0					
ANR	6645514	ExclusiveOrExpression	tmp ^ 1		6645456	1		^			
ANR	6645515	Identifier	tmp		6645456	0					
ANR	6645516	PrimaryExpression	1		6645456	1					
ANR	6645517	PrimaryExpression	8		6645456	1					
ANR	6645518	ExpressionStatement	b ^= tmp	116:5:3452:3460	6645456	2	True				
ANR	6645519	AssignmentExpression	b ^= tmp		6645456	0		^=			
ANR	6645520	Identifier	b		6645456	0					
ANR	6645521	Identifier	tmp		6645456	1					
ANR	6645522	IfStatement	if ( out )		6645456	2					
ANR	6645523	Condition	out	120:5:3494:3496	6645456	0	True				
ANR	6645524	Identifier	out		6645456	0					
ANR	6645525	ExpressionStatement	out [ i ] = b	121:5:3504:3514	6645456	1	True				
ANR	6645526	AssignmentExpression	out [ i ] = b		6645456	0		=			
ANR	6645527	ArrayIndexing	out [ i ]		6645456	0					
ANR	6645528	Identifier	out		6645456	0					
ANR	6645529	Identifier	i		6645456	1					
ANR	6645530	Identifier	b		6645456	1					
ANR	6645531	ExpressionStatement	"ctx -> key [ 0 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"	124:1:3537:3620	6645456	3	True				
ANR	6645532	AssignmentExpression	"ctx -> key [ 0 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6645456	0		=			
ANR	6645533	ArrayIndexing	ctx -> key [ 0 ]		6645456	0					
ANR	6645534	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645535	Identifier	ctx		6645456	0					
ANR	6645536	Identifier	key		6645456	1					
ANR	6645537	PrimaryExpression	0		6645456	1					
ANR	6645538	ExclusiveOrExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6645456	1		^			
ANR	6645539	CastExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 )"		6645456	0					
ANR	6645540	CastTarget	zip_uint32_t		6645456	0					
ANR	6645541	CallExpression	"crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 )"		6645456	1					
ANR	6645542	Callee	crc32		6645456	0					
ANR	6645543	Identifier	crc32		6645456	0					
ANR	6645544	ArgumentList	ctx -> key [ 0 ] ^ 0xffffffffUL		6645456	1					
ANR	6645545	Argument	ctx -> key [ 0 ] ^ 0xffffffffUL		6645456	0					
ANR	6645546	ExclusiveOrExpression	ctx -> key [ 0 ] ^ 0xffffffffUL		6645456	0		^			
ANR	6645547	ArrayIndexing	ctx -> key [ 0 ]		6645456	0					
ANR	6645548	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645549	Identifier	ctx		6645456	0					
ANR	6645550	Identifier	key		6645456	1					
ANR	6645551	PrimaryExpression	0		6645456	1					
ANR	6645552	PrimaryExpression	0xffffffffUL		6645456	1					
ANR	6645553	Argument	& b		6645456	1					
ANR	6645554	UnaryOperationExpression	& b		6645456	0					
ANR	6645555	UnaryOperator	&		6645456	0					
ANR	6645556	Identifier	b		6645456	1					
ANR	6645557	Argument	1		6645456	2					
ANR	6645558	PrimaryExpression	1		6645456	0					
ANR	6645559	PrimaryExpression	0xffffffffUL		6645456	1					
ANR	6645560	ExpressionStatement	ctx -> key [ 1 ] = ( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813 + 1	125:1:3623:3689	6645456	4	True				
ANR	6645561	AssignmentExpression	ctx -> key [ 1 ] = ( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813 + 1		6645456	0		=			
ANR	6645562	ArrayIndexing	ctx -> key [ 1 ]		6645456	0					
ANR	6645563	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645564	Identifier	ctx		6645456	0					
ANR	6645565	Identifier	key		6645456	1					
ANR	6645566	PrimaryExpression	1		6645456	1					
ANR	6645567	AdditiveExpression	( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813 + 1		6645456	1		+			
ANR	6645568	MultiplicativeExpression	( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813		6645456	0		*			
ANR	6645569	AdditiveExpression	ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff )		6645456	0		+			
ANR	6645570	ArrayIndexing	ctx -> key [ 1 ]		6645456	0					
ANR	6645571	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645572	Identifier	ctx		6645456	0					
ANR	6645573	Identifier	key		6645456	1					
ANR	6645574	PrimaryExpression	1		6645456	1					
ANR	6645575	BitAndExpression	ctx -> key [ 0 ] & 0xff		6645456	1		&			
ANR	6645576	ArrayIndexing	ctx -> key [ 0 ]		6645456	0					
ANR	6645577	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645578	Identifier	ctx		6645456	0					
ANR	6645579	Identifier	key		6645456	1					
ANR	6645580	PrimaryExpression	0		6645456	1					
ANR	6645581	PrimaryExpression	0xff		6645456	1					
ANR	6645582	PrimaryExpression	134775813		6645456	1					
ANR	6645583	PrimaryExpression	1		6645456	1					
ANR	6645584	ExpressionStatement	b = ctx -> key [ 1 ] >> 24	126:1:3692:3713	6645456	5	True				
ANR	6645585	AssignmentExpression	b = ctx -> key [ 1 ] >> 24		6645456	0		=			
ANR	6645586	Identifier	b		6645456	0					
ANR	6645587	ShiftExpression	ctx -> key [ 1 ] >> 24		6645456	1		>>			
ANR	6645588	ArrayIndexing	ctx -> key [ 1 ]		6645456	0					
ANR	6645589	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645590	Identifier	ctx		6645456	0					
ANR	6645591	Identifier	key		6645456	1					
ANR	6645592	PrimaryExpression	1		6645456	1					
ANR	6645593	PrimaryExpression	24		6645456	1					
ANR	6645594	ExpressionStatement	"ctx -> key [ 2 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"	127:1:3716:3799	6645456	6	True				
ANR	6645595	AssignmentExpression	"ctx -> key [ 2 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6645456	0		=			
ANR	6645596	ArrayIndexing	ctx -> key [ 2 ]		6645456	0					
ANR	6645597	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645598	Identifier	ctx		6645456	0					
ANR	6645599	Identifier	key		6645456	1					
ANR	6645600	PrimaryExpression	2		6645456	1					
ANR	6645601	ExclusiveOrExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6645456	1		^			
ANR	6645602	CastExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 )"		6645456	0					
ANR	6645603	CastTarget	zip_uint32_t		6645456	0					
ANR	6645604	CallExpression	"crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 )"		6645456	1					
ANR	6645605	Callee	crc32		6645456	0					
ANR	6645606	Identifier	crc32		6645456	0					
ANR	6645607	ArgumentList	ctx -> key [ 2 ] ^ 0xffffffffUL		6645456	1					
ANR	6645608	Argument	ctx -> key [ 2 ] ^ 0xffffffffUL		6645456	0					
ANR	6645609	ExclusiveOrExpression	ctx -> key [ 2 ] ^ 0xffffffffUL		6645456	0		^			
ANR	6645610	ArrayIndexing	ctx -> key [ 2 ]		6645456	0					
ANR	6645611	PtrMemberAccess	ctx -> key		6645456	0					
ANR	6645612	Identifier	ctx		6645456	0					
ANR	6645613	Identifier	key		6645456	1					
ANR	6645614	PrimaryExpression	2		6645456	1					
ANR	6645615	PrimaryExpression	0xffffffffUL		6645456	1					
ANR	6645616	Argument	& b		6645456	1					
ANR	6645617	UnaryOperationExpression	& b		6645456	0					
ANR	6645618	UnaryOperator	&		6645456	0					
ANR	6645619	Identifier	b		6645456	1					
ANR	6645620	Argument	1		6645456	2					
ANR	6645621	PrimaryExpression	1		6645456	0					
ANR	6645622	PrimaryExpression	0xffffffffUL		6645456	1					
ANR	6645623	ReturnType	static void		6645456	1					
ANR	6645624	Identifier	decrypt		6645456	2					
ANR	6645625	ParameterList	"struct trad_pkware * ctx , zip_uint8_t * out , const zip_uint8_t * in , zip_uint64_t len , int update_only"		6645456	3					
ANR	6645626	Parameter	struct trad_pkware * ctx	102:8:3117:3139	6645456	0	True				
ANR	6645627	ParameterType	struct trad_pkware *		6645456	0					
ANR	6645628	Identifier	ctx		6645456	1					
ANR	6645629	Parameter	zip_uint8_t * out	102:33:3142:3157	6645456	1	True				
ANR	6645630	ParameterType	zip_uint8_t *		6645456	0					
ANR	6645631	Identifier	out		6645456	1					
ANR	6645632	Parameter	const zip_uint8_t * in	102:51:3160:3180	6645456	2	True				
ANR	6645633	ParameterType	const zip_uint8_t *		6645456	0					
ANR	6645634	Identifier	in		6645456	1					
ANR	6645635	Parameter	zip_uint64_t len	103:1:3184:3199	6645456	3	True				
ANR	6645636	ParameterType	zip_uint64_t		6645456	0					
ANR	6645637	Identifier	len		6645456	1					
ANR	6645638	Parameter	int update_only	103:19:3202:3216	6645456	4	True				
ANR	6645639	ParameterType	int		6645456	0					
ANR	6645640	Identifier	update_only		6645456	1					
ANR	6645641	CFGEntryNode	ENTRY		6645456		True				
ANR	6645642	CFGExitNode	EXIT		6645456		True				
ANR	6645643	Symbol	b		6645456						
ANR	6645644	Symbol	* ctx -> key		6645456						
ANR	6645645	Symbol	in		6645456						
ANR	6645646	Symbol	ctx		6645456						
ANR	6645647	Symbol	* in		6645456						
ANR	6645648	Symbol	ctx -> key		6645456						
ANR	6645649	Symbol	& b		6645456						
ANR	6645650	Symbol	i		6645456						
ANR	6645651	Symbol	update_only		6645456						
ANR	6645652	Symbol	* ctx		6645456						
ANR	6645653	Symbol	out		6645456						
ANR	6645654	Symbol	* i		6645456						
ANR	6645655	Symbol	len		6645456						
ANR	6645656	Symbol	tmp		6645456						
ANR	6645657	Symbol	* out		6645456						
ANR	6645658	Symbol	* * ctx		6645456						
ANR	6645659	Symbol	crc32		6645456						
ANR	6645660	Function	decrypt_header	133:0:3813:4584							
ANR	6645661	FunctionDef	"decrypt_header (struct zip_source * src , struct trad_pkware * ctx)"		6645660	0					
ANR	6645662	CompoundStatement		135:0:3888:4584	6645660	0					
ANR	6645663	IdentifierDeclStatement	zip_uint8_t header [ HEADERLEN ] ;	136:4:3894:3923	6645660	0	True				
ANR	6645664	IdentifierDecl	header [ HEADERLEN ]		6645660	0					
ANR	6645665	IdentifierDeclType	zip_uint8_t [ HEADERLEN ]		6645660	0					
ANR	6645666	Identifier	header		6645660	1					
ANR	6645667	Identifier	HEADERLEN		6645660	2					
ANR	6645668	IdentifierDeclStatement	struct zip_stat st ;	137:4:3929:3947	6645660	1	True				
ANR	6645669	IdentifierDecl	st		6645660	0					
ANR	6645670	IdentifierDeclType	struct zip_stat		6645660	0					
ANR	6645671	Identifier	st		6645660	1					
ANR	6645672	IdentifierDeclStatement	zip_int64_t n ;	138:4:3953:3966	6645660	2	True				
ANR	6645673	IdentifierDecl	n		6645660	0					
ANR	6645674	IdentifierDeclType	zip_int64_t		6645660	0					
ANR	6645675	Identifier	n		6645660	1					
ANR	6645676	IdentifierDeclStatement	"unsigned short dostime , dosdate ;"	139:4:3972:4003	6645660	3	True				
ANR	6645677	IdentifierDecl	dostime		6645660	0					
ANR	6645678	IdentifierDeclType	unsigned short		6645660	0					
ANR	6645679	Identifier	dostime		6645660	1					
ANR	6645680	IdentifierDecl	dosdate		6645660	1					
ANR	6645681	IdentifierDeclType	unsigned short		6645660	0					
ANR	6645682	Identifier	dosdate		6645660	1					
ANR	6645683	IfStatement	"if ( ( n = zip_source_read ( src , header , HEADERLEN ) ) < 0 )"		6645660	4					
ANR	6645684	Condition	"( n = zip_source_read ( src , header , HEADERLEN ) ) < 0"	141:8:4014:4060	6645660	0	True				
ANR	6645685	RelationalExpression	"( n = zip_source_read ( src , header , HEADERLEN ) ) < 0"		6645660	0		<			
ANR	6645686	AssignmentExpression	"n = zip_source_read ( src , header , HEADERLEN )"		6645660	0		=			
ANR	6645687	Identifier	n		6645660	0					
ANR	6645688	CallExpression	"zip_source_read ( src , header , HEADERLEN )"		6645660	1					
ANR	6645689	Callee	zip_source_read		6645660	0					
ANR	6645690	Identifier	zip_source_read		6645660	0					
ANR	6645691	ArgumentList	src		6645660	1					
ANR	6645692	Argument	src		6645660	0					
ANR	6645693	Identifier	src		6645660	0					
ANR	6645694	Argument	header		6645660	1					
ANR	6645695	Identifier	header		6645660	0					
ANR	6645696	Argument	HEADERLEN		6645660	2					
ANR	6645697	Identifier	HEADERLEN		6645660	0					
ANR	6645698	PrimaryExpression	0		6645660	1					
ANR	6645699	CompoundStatement		7:57:174:174	6645660	1					
ANR	6645700	ExpressionStatement	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"	142:1:4066:4105	6645660	0	True				
ANR	6645701	CallExpression	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"		6645660	0					
ANR	6645702	Callee	zip_source_error		6645660	0					
ANR	6645703	Identifier	zip_source_error		6645660	0					
ANR	6645704	ArgumentList	src		6645660	1					
ANR	6645705	Argument	src		6645660	0					
ANR	6645706	Identifier	src		6645660	0					
ANR	6645707	Argument	ctx -> e		6645660	1					
ANR	6645708	PtrMemberAccess	ctx -> e		6645660	0					
ANR	6645709	Identifier	ctx		6645660	0					
ANR	6645710	Identifier	e		6645660	1					
ANR	6645711	Argument	ctx -> e + 1		6645660	2					
ANR	6645712	AdditiveExpression	ctx -> e + 1		6645660	0		+			
ANR	6645713	PtrMemberAccess	ctx -> e		6645660	0					
ANR	6645714	Identifier	ctx		6645660	0					
ANR	6645715	Identifier	e		6645660	1					
ANR	6645716	PrimaryExpression	1		6645660	1					
ANR	6645717	ReturnStatement	return - 1 ;	143:1:4108:4117	6645660	1	True				
ANR	6645718	UnaryOperationExpression	- 1		6645660	0					
ANR	6645719	UnaryOperator	-		6645660	0					
ANR	6645720	PrimaryExpression	1		6645660	1					
ANR	6645721	IfStatement	if ( n != HEADERLEN )		6645660	5					
ANR	6645722	Condition	n != HEADERLEN	146:8:4138:4151	6645660	0	True				
ANR	6645723	EqualityExpression	n != HEADERLEN		6645660	0		!=			
ANR	6645724	Identifier	n		6645660	0					
ANR	6645725	Identifier	HEADERLEN		6645660	1					
ANR	6645726	CompoundStatement		12:24:265:265	6645660	1					
ANR	6645727	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_EOF	147:1:4157:4179	6645660	0	True				
ANR	6645728	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_EOF		6645660	0		=			
ANR	6645729	ArrayIndexing	ctx -> e [ 0 ]		6645660	0					
ANR	6645730	PtrMemberAccess	ctx -> e		6645660	0					
ANR	6645731	Identifier	ctx		6645660	0					
ANR	6645732	Identifier	e		6645660	1					
ANR	6645733	PrimaryExpression	0		6645660	1					
ANR	6645734	Identifier	ZIP_ER_EOF		6645660	1					
ANR	6645735	ExpressionStatement	ctx -> e [ 1 ] = 0	148:1:4182:4195	6645660	1	True				
ANR	6645736	AssignmentExpression	ctx -> e [ 1 ] = 0		6645660	0		=			
ANR	6645737	ArrayIndexing	ctx -> e [ 1 ]		6645660	0					
ANR	6645738	PtrMemberAccess	ctx -> e		6645660	0					
ANR	6645739	Identifier	ctx		6645660	0					
ANR	6645740	Identifier	e		6645660	1					
ANR	6645741	PrimaryExpression	1		6645660	1					
ANR	6645742	PrimaryExpression	0		6645660	1					
ANR	6645743	ReturnStatement	return - 1 ;	149:1:4198:4207	6645660	2	True				
ANR	6645744	UnaryOperationExpression	- 1		6645660	0					
ANR	6645745	UnaryOperator	-		6645660	0					
ANR	6645746	PrimaryExpression	1		6645660	1					
ANR	6645747	ExpressionStatement	"decrypt ( ctx , header , header , HEADERLEN , 0 )"	152:4:4220:4262	6645660	6	True				
ANR	6645748	CallExpression	"decrypt ( ctx , header , header , HEADERLEN , 0 )"		6645660	0					
ANR	6645749	Callee	decrypt		6645660	0					
ANR	6645750	Identifier	decrypt		6645660	0					
ANR	6645751	ArgumentList	ctx		6645660	1					
ANR	6645752	Argument	ctx		6645660	0					
ANR	6645753	Identifier	ctx		6645660	0					
ANR	6645754	Argument	header		6645660	1					
ANR	6645755	Identifier	header		6645660	0					
ANR	6645756	Argument	header		6645660	2					
ANR	6645757	Identifier	header		6645660	0					
ANR	6645758	Argument	HEADERLEN		6645660	3					
ANR	6645759	Identifier	HEADERLEN		6645660	0					
ANR	6645760	Argument	0		6645660	4					
ANR	6645761	PrimaryExpression	0		6645660	0					
ANR	6645762	IfStatement	"if ( zip_source_stat ( src , & st ) < 0 )"		6645660	7					
ANR	6645763	Condition	"zip_source_stat ( src , & st ) < 0"	154:8:4273:4301	6645660	0	True				
ANR	6645764	RelationalExpression	"zip_source_stat ( src , & st ) < 0"		6645660	0		<			
ANR	6645765	CallExpression	"zip_source_stat ( src , & st )"		6645660	0					
ANR	6645766	Callee	zip_source_stat		6645660	0					
ANR	6645767	Identifier	zip_source_stat		6645660	0					
ANR	6645768	ArgumentList	src		6645660	1					
ANR	6645769	Argument	src		6645660	0					
ANR	6645770	Identifier	src		6645660	0					
ANR	6645771	Argument	& st		6645660	1					
ANR	6645772	UnaryOperationExpression	& st		6645660	0					
ANR	6645773	UnaryOperator	&		6645660	0					
ANR	6645774	Identifier	st		6645660	1					
ANR	6645775	PrimaryExpression	0		6645660	1					
ANR	6645776	CompoundStatement		20:39:415:415	6645660	1					
ANR	6645777	ReturnStatement	return 0 ;	156:1:4352:4360	6645660	0	True				
ANR	6645778	PrimaryExpression	0		6645660	0					
ANR	6645779	ExpressionStatement	"_zip_u2d_time ( st . mtime , & dostime , & dosdate )"	159:4:4373:4416	6645660	8	True				
ANR	6645780	CallExpression	"_zip_u2d_time ( st . mtime , & dostime , & dosdate )"		6645660	0					
ANR	6645781	Callee	_zip_u2d_time		6645660	0					
ANR	6645782	Identifier	_zip_u2d_time		6645660	0					
ANR	6645783	ArgumentList	st . mtime		6645660	1					
ANR	6645784	Argument	st . mtime		6645660	0					
ANR	6645785	MemberAccess	st . mtime		6645660	0					
ANR	6645786	Identifier	st		6645660	0					
ANR	6645787	Identifier	mtime		6645660	1					
ANR	6645788	Argument	& dostime		6645660	1					
ANR	6645789	UnaryOperationExpression	& dostime		6645660	0					
ANR	6645790	UnaryOperator	&		6645660	0					
ANR	6645791	Identifier	dostime		6645660	1					
ANR	6645792	Argument	& dosdate		6645660	2					
ANR	6645793	UnaryOperationExpression	& dosdate		6645660	0					
ANR	6645794	UnaryOperator	&		6645660	0					
ANR	6645795	Identifier	dosdate		6645660	1					
ANR	6645796	IfStatement	if ( header [ HEADERLEN - 1 ] != st . crc >> 24 && header [ HEADERLEN - 1 ] != dostime >> 8 )		6645660	9					
ANR	6645797	Condition	header [ HEADERLEN - 1 ] != st . crc >> 24 && header [ HEADERLEN - 1 ] != dostime >> 8	161:8:4427:4497	6645660	0	True				
ANR	6645798	AndExpression	header [ HEADERLEN - 1 ] != st . crc >> 24 && header [ HEADERLEN - 1 ] != dostime >> 8		6645660	0		&&			
ANR	6645799	EqualityExpression	header [ HEADERLEN - 1 ] != st . crc >> 24		6645660	0		!=			
ANR	6645800	ArrayIndexing	header [ HEADERLEN - 1 ]		6645660	0					
ANR	6645801	Identifier	header		6645660	0					
ANR	6645802	AdditiveExpression	HEADERLEN - 1		6645660	1		-			
ANR	6645803	Identifier	HEADERLEN		6645660	0					
ANR	6645804	PrimaryExpression	1		6645660	1					
ANR	6645805	ShiftExpression	st . crc >> 24		6645660	1		>>			
ANR	6645806	MemberAccess	st . crc		6645660	0					
ANR	6645807	Identifier	st		6645660	0					
ANR	6645808	Identifier	crc		6645660	1					
ANR	6645809	PrimaryExpression	24		6645660	1					
ANR	6645810	EqualityExpression	header [ HEADERLEN - 1 ] != dostime >> 8		6645660	1		!=			
ANR	6645811	ArrayIndexing	header [ HEADERLEN - 1 ]		6645660	0					
ANR	6645812	Identifier	header		6645660	0					
ANR	6645813	AdditiveExpression	HEADERLEN - 1		6645660	1		-			
ANR	6645814	Identifier	HEADERLEN		6645660	0					
ANR	6645815	PrimaryExpression	1		6645660	1					
ANR	6645816	ShiftExpression	dostime >> 8		6645660	1		>>			
ANR	6645817	Identifier	dostime		6645660	0					
ANR	6645818	PrimaryExpression	8		6645660	1					
ANR	6645819	CompoundStatement		28:39:611:611	6645660	1					
ANR	6645820	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_WRONGPASSWD	163:1:4503:4533	6645660	0	True				
ANR	6645821	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_WRONGPASSWD		6645660	0		=			
ANR	6645822	ArrayIndexing	ctx -> e [ 0 ]		6645660	0					
ANR	6645823	PtrMemberAccess	ctx -> e		6645660	0					
ANR	6645824	Identifier	ctx		6645660	0					
ANR	6645825	Identifier	e		6645660	1					
ANR	6645826	PrimaryExpression	0		6645660	1					
ANR	6645827	Identifier	ZIP_ER_WRONGPASSWD		6645660	1					
ANR	6645828	ExpressionStatement	ctx -> e [ 1 ] = 0	164:1:4536:4549	6645660	1	True				
ANR	6645829	AssignmentExpression	ctx -> e [ 1 ] = 0		6645660	0		=			
ANR	6645830	ArrayIndexing	ctx -> e [ 1 ]		6645660	0					
ANR	6645831	PtrMemberAccess	ctx -> e		6645660	0					
ANR	6645832	Identifier	ctx		6645660	0					
ANR	6645833	Identifier	e		6645660	1					
ANR	6645834	PrimaryExpression	1		6645660	1					
ANR	6645835	PrimaryExpression	0		6645660	1					
ANR	6645836	ReturnStatement	return - 1 ;	165:1:4552:4561	6645660	2	True				
ANR	6645837	UnaryOperationExpression	- 1		6645660	0					
ANR	6645838	UnaryOperator	-		6645660	0					
ANR	6645839	PrimaryExpression	1		6645660	1					
ANR	6645840	ReturnStatement	return 0 ;	168:4:4574:4582	6645660	10	True				
ANR	6645841	PrimaryExpression	0		6645660	0					
ANR	6645842	ReturnType	static int		6645660	1					
ANR	6645843	Identifier	decrypt_header		6645660	2					
ANR	6645844	ParameterList	"struct zip_source * src , struct trad_pkware * ctx"		6645660	3					
ANR	6645845	Parameter	struct zip_source * src	134:15:3839:3860	6645660	0	True				
ANR	6645846	ParameterType	struct zip_source *		6645660	0					
ANR	6645847	Identifier	src		6645660	1					
ANR	6645848	Parameter	struct trad_pkware * ctx	134:39:3863:3885	6645660	1	True				
ANR	6645849	ParameterType	struct trad_pkware *		6645660	0					
ANR	6645850	Identifier	ctx		6645660	1					
ANR	6645851	CFGEntryNode	ENTRY		6645660		True				
ANR	6645852	CFGExitNode	EXIT		6645660		True				
ANR	6645853	Symbol	st		6645660						
ANR	6645854	Symbol	zip_source_stat		6645660						
ANR	6645855	Symbol	src		6645660						
ANR	6645856	Symbol	ctx		6645660						
ANR	6645857	Symbol	zip_source_read		6645660						
ANR	6645858	Symbol	* HEADERLEN		6645660						
ANR	6645859	Symbol	HEADERLEN		6645660						
ANR	6645860	Symbol	& dostime		6645660						
ANR	6645861	Symbol	dosdate		6645660						
ANR	6645862	Symbol	ctx -> e		6645660						
ANR	6645863	Symbol	& st		6645660						
ANR	6645864	Symbol	n		6645660						
ANR	6645865	Symbol	* ctx		6645660						
ANR	6645866	Symbol	st . crc		6645660						
ANR	6645867	Symbol	* header		6645660						
ANR	6645868	Symbol	ZIP_ER_WRONGPASSWD		6645660						
ANR	6645869	Symbol	dostime		6645660						
ANR	6645870	Symbol	& dosdate		6645660						
ANR	6645871	Symbol	header		6645660						
ANR	6645872	Symbol	ZIP_ER_EOF		6645660						
ANR	6645873	Symbol	* ctx -> e		6645660						
ANR	6645874	Symbol	* * ctx		6645660						
ANR	6645875	Symbol	st . mtime		6645660						
ANR	6645876	Function	pkware_decrypt	173:0:4590:5721							
ANR	6645877	FunctionDef	"pkware_decrypt (struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6645876	0					
ANR	6645878	CompoundStatement		176:0:4721:5721	6645876	0					
ANR	6645879	IdentifierDeclStatement	struct trad_pkware * ctx ;	177:4:4727:4750	6645876	0	True				
ANR	6645880	IdentifierDecl	* ctx		6645876	0					
ANR	6645881	IdentifierDeclType	struct trad_pkware *		6645876	0					
ANR	6645882	Identifier	ctx		6645876	1					
ANR	6645883	IdentifierDeclStatement	zip_int64_t n ;	178:4:4756:4769	6645876	1	True				
ANR	6645884	IdentifierDecl	n		6645876	0					
ANR	6645885	IdentifierDeclType	zip_int64_t		6645876	0					
ANR	6645886	Identifier	n		6645876	1					
ANR	6645887	ExpressionStatement	ctx = ( struct trad_pkware * ) ud	180:4:4776:4806	6645876	2	True				
ANR	6645888	AssignmentExpression	ctx = ( struct trad_pkware * ) ud		6645876	0		=			
ANR	6645889	Identifier	ctx		6645876	0					
ANR	6645890	CastExpression	( struct trad_pkware * ) ud		6645876	1					
ANR	6645891	CastTarget	struct trad_pkware *		6645876	0					
ANR	6645892	Identifier	ud		6645876	1					
ANR	6645893	SwitchStatement	switch ( cmd )		6645876	3					
ANR	6645894	Condition	cmd	182:12:4821:4823	6645876	0	True				
ANR	6645895	Identifier	cmd		6645876	0					
ANR	6645896	CompoundStatement		7:17:104:104	6645876	1					
ANR	6645897	Label	case ZIP_SOURCE_OPEN :	183:4:4832:4852	6645876	0	True				
ANR	6645898	Identifier	ZIP_SOURCE_OPEN		6645876	0					
ANR	6645899	IfStatement	"if ( decrypt_header ( src , ctx ) < 0 )"		6645876	1					
ANR	6645900	Condition	"decrypt_header ( src , ctx ) < 0"	184:5:4859:4886	6645876	0	True				
ANR	6645901	RelationalExpression	"decrypt_header ( src , ctx ) < 0"		6645876	0		<			
ANR	6645902	CallExpression	"decrypt_header ( src , ctx )"		6645876	0					
ANR	6645903	Callee	decrypt_header		6645876	0					
ANR	6645904	Identifier	decrypt_header		6645876	0					
ANR	6645905	ArgumentList	src		6645876	1					
ANR	6645906	Argument	src		6645876	0					
ANR	6645907	Identifier	src		6645876	0					
ANR	6645908	Argument	ctx		6645876	1					
ANR	6645909	Identifier	ctx		6645876	0					
ANR	6645910	PrimaryExpression	0		6645876	1					
ANR	6645911	ReturnStatement	return - 1 ;	185:5:4894:4903	6645876	1	True				
ANR	6645912	UnaryOperationExpression	- 1		6645876	0					
ANR	6645913	UnaryOperator	-		6645876	0					
ANR	6645914	PrimaryExpression	1		6645876	1					
ANR	6645915	ReturnStatement	return 0 ;	186:1:4906:4914	6645876	2	True				
ANR	6645916	PrimaryExpression	0		6645876	0					
ANR	6645917	Label	case ZIP_SOURCE_READ :	188:4:4921:4941	6645876	3	True				
ANR	6645918	Identifier	ZIP_SOURCE_READ		6645876	0					
ANR	6645919	IfStatement	"if ( ( n = zip_source_read ( src , data , len ) ) < 0 )"		6645876	4					
ANR	6645920	Condition	"( n = zip_source_read ( src , data , len ) ) < 0"	189:5:4948:4986	6645876	0	True				
ANR	6645921	RelationalExpression	"( n = zip_source_read ( src , data , len ) ) < 0"		6645876	0		<			
ANR	6645922	AssignmentExpression	"n = zip_source_read ( src , data , len )"		6645876	0		=			
ANR	6645923	Identifier	n		6645876	0					
ANR	6645924	CallExpression	"zip_source_read ( src , data , len )"		6645876	1					
ANR	6645925	Callee	zip_source_read		6645876	0					
ANR	6645926	Identifier	zip_source_read		6645876	0					
ANR	6645927	ArgumentList	src		6645876	1					
ANR	6645928	Argument	src		6645876	0					
ANR	6645929	Identifier	src		6645876	0					
ANR	6645930	Argument	data		6645876	1					
ANR	6645931	Identifier	data		6645876	0					
ANR	6645932	Argument	len		6645876	2					
ANR	6645933	Identifier	len		6645876	0					
ANR	6645934	PrimaryExpression	0		6645876	1					
ANR	6645935	ReturnStatement	return ZIP_SOURCE_ERR_LOWER ;	190:5:4994:5021	6645876	1	True				
ANR	6645936	Identifier	ZIP_SOURCE_ERR_LOWER		6645876	0					
ANR	6645937	ExpressionStatement	"decrypt ( ( struct trad_pkware * ) ud , ( zip_uint8_t * ) data , ( zip_uint8_t * ) data , ( zip_uint64_t ) n , 0 )"	192:1:5025:5122	6645876	5	True				
ANR	6645938	CallExpression	"decrypt ( ( struct trad_pkware * ) ud , ( zip_uint8_t * ) data , ( zip_uint8_t * ) data , ( zip_uint64_t ) n , 0 )"		6645876	0					
ANR	6645939	Callee	decrypt		6645876	0					
ANR	6645940	Identifier	decrypt		6645876	0					
ANR	6645941	ArgumentList	( struct trad_pkware * ) ud		6645876	1					
ANR	6645942	Argument	( struct trad_pkware * ) ud		6645876	0					
ANR	6645943	CastExpression	( struct trad_pkware * ) ud		6645876	0					
ANR	6645944	CastTarget	struct trad_pkware *		6645876	0					
ANR	6645945	Identifier	ud		6645876	1					
ANR	6645946	Argument	( zip_uint8_t * ) data		6645876	1					
ANR	6645947	CastExpression	( zip_uint8_t * ) data		6645876	0					
ANR	6645948	CastTarget	zip_uint8_t *		6645876	0					
ANR	6645949	Identifier	data		6645876	1					
ANR	6645950	Argument	( zip_uint8_t * ) data		6645876	2					
ANR	6645951	CastExpression	( zip_uint8_t * ) data		6645876	0					
ANR	6645952	CastTarget	zip_uint8_t *		6645876	0					
ANR	6645953	Identifier	data		6645876	1					
ANR	6645954	Argument	( zip_uint64_t ) n		6645876	3					
ANR	6645955	CastExpression	( zip_uint64_t ) n		6645876	0					
ANR	6645956	CastTarget	zip_uint64_t		6645876	0					
ANR	6645957	Identifier	n		6645876	1					
ANR	6645958	Argument	0		6645876	4					
ANR	6645959	PrimaryExpression	0		6645876	0					
ANR	6645960	ReturnStatement	return n ;	194:1:5125:5133	6645876	6	True				
ANR	6645961	Identifier	n		6645876	0					
ANR	6645962	Label	case ZIP_SOURCE_CLOSE :	196:4:5140:5161	6645876	7	True				
ANR	6645963	Identifier	ZIP_SOURCE_CLOSE		6645876	0					
ANR	6645964	ReturnStatement	return 0 ;	197:1:5164:5172	6645876	8	True				
ANR	6645965	PrimaryExpression	0		6645876	0					
ANR	6645966	Label	case ZIP_SOURCE_STAT :	199:4:5179:5199	6645876	9	True				
ANR	6645967	Identifier	ZIP_SOURCE_STAT		6645876	0					
ANR	6645968	CompoundStatement		26:5:487:506	6645876	10					
ANR	6645969	IdentifierDeclStatement	struct zip_stat * st ;	201:5:5209:5228	6645876	0	True				
ANR	6645970	IdentifierDecl	* st		6645876	0					
ANR	6645971	IdentifierDeclType	struct zip_stat *		6645876	0					
ANR	6645972	Identifier	st		6645876	1					
ANR	6645973	ExpressionStatement	st = ( struct zip_stat * ) data	203:5:5236:5264	6645876	1	True				
ANR	6645974	AssignmentExpression	st = ( struct zip_stat * ) data		6645876	0		=			
ANR	6645975	Identifier	st		6645876	0					
ANR	6645976	CastExpression	( struct zip_stat * ) data		6645876	1					
ANR	6645977	CastTarget	struct zip_stat *		6645876	0					
ANR	6645978	Identifier	data		6645876	1					
ANR	6645979	ExpressionStatement	st -> encryption_method = ZIP_EM_NONE	205:5:5272:5307	6645876	2	True				
ANR	6645980	AssignmentExpression	st -> encryption_method = ZIP_EM_NONE		6645876	0		=			
ANR	6645981	PtrMemberAccess	st -> encryption_method		6645876	0					
ANR	6645982	Identifier	st		6645876	0					
ANR	6645983	Identifier	encryption_method		6645876	1					
ANR	6645984	Identifier	ZIP_EM_NONE		6645876	1					
ANR	6645985	ExpressionStatement	st -> valid |= ZIP_STAT_ENCRYPTION_METHOD	206:5:5314:5353	6645876	3	True				
ANR	6645986	AssignmentExpression	st -> valid |= ZIP_STAT_ENCRYPTION_METHOD		6645876	0		|=			
ANR	6645987	PtrMemberAccess	st -> valid		6645876	0					
ANR	6645988	Identifier	st		6645876	0					
ANR	6645989	Identifier	valid		6645876	1					
ANR	6645990	Identifier	ZIP_STAT_ENCRYPTION_METHOD		6645876	1					
ANR	6645991	IfStatement	if ( st -> valid & ZIP_STAT_COMP_SIZE )		6645876	4					
ANR	6645992	Condition	st -> valid & ZIP_STAT_COMP_SIZE	208:9:5424:5453	6645876	0	True				
ANR	6645993	BitAndExpression	st -> valid & ZIP_STAT_COMP_SIZE		6645876	0		&			
ANR	6645994	PtrMemberAccess	st -> valid		6645876	0					
ANR	6645995	Identifier	st		6645876	0					
ANR	6645996	Identifier	valid		6645876	1					
ANR	6645997	Identifier	ZIP_STAT_COMP_SIZE		6645876	1					
ANR	6645998	ExpressionStatement	st -> comp_size -= HEADERLEN	209:2:5458:5484	6645876	1	True				
ANR	6645999	AssignmentExpression	st -> comp_size -= HEADERLEN		6645876	0		-=			
ANR	6646000	PtrMemberAccess	st -> comp_size		6645876	0					
ANR	6646001	Identifier	st		6645876	0					
ANR	6646002	Identifier	comp_size		6645876	1					
ANR	6646003	Identifier	HEADERLEN		6645876	1					
ANR	6646004	ReturnStatement	return 0 ;	211:1:5490:5498	6645876	11	True				
ANR	6646005	PrimaryExpression	0		6645876	0					
ANR	6646006	Label	case ZIP_SOURCE_ERROR :	213:4:5505:5526	6645876	12	True				
ANR	6646007	Identifier	ZIP_SOURCE_ERROR		6645876	0					
ANR	6646008	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"	214:1:5529:5564	6645876	13	True				
ANR	6646009	CallExpression	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"		6645876	0					
ANR	6646010	Callee	memcpy		6645876	0					
ANR	6646011	Identifier	memcpy		6645876	0					
ANR	6646012	ArgumentList	data		6645876	1					
ANR	6646013	Argument	data		6645876	0					
ANR	6646014	Identifier	data		6645876	0					
ANR	6646015	Argument	ctx -> e		6645876	1					
ANR	6646016	PtrMemberAccess	ctx -> e		6645876	0					
ANR	6646017	Identifier	ctx		6645876	0					
ANR	6646018	Identifier	e		6645876	1					
ANR	6646019	Argument	sizeof ( int ) * 2		6645876	2					
ANR	6646020	MultiplicativeExpression	sizeof ( int ) * 2		6645876	0		*			
ANR	6646021	SizeofExpression	sizeof ( int )		6645876	0					
ANR	6646022	Sizeof	sizeof		6645876	0					
ANR	6646023	SizeofOperand	int		6645876	1					
ANR	6646024	PrimaryExpression	2		6645876	1					
ANR	6646025	ReturnStatement	return sizeof ( int ) * 2 ;	215:1:5567:5587	6645876	14	True				
ANR	6646026	MultiplicativeExpression	sizeof ( int ) * 2		6645876	0		*			
ANR	6646027	SizeofExpression	sizeof ( int )		6645876	0					
ANR	6646028	Sizeof	sizeof		6645876	0					
ANR	6646029	SizeofOperand	int		6645876	1					
ANR	6646030	PrimaryExpression	2		6645876	1					
ANR	6646031	Label	case ZIP_SOURCE_FREE :	217:4:5594:5614	6645876	15	True				
ANR	6646032	Identifier	ZIP_SOURCE_FREE		6645876	0					
ANR	6646033	ExpressionStatement	pkware_free ( ctx )	218:1:5617:5633	6645876	16	True				
ANR	6646034	CallExpression	pkware_free ( ctx )		6645876	0					
ANR	6646035	Callee	pkware_free		6645876	0					
ANR	6646036	Identifier	pkware_free		6645876	0					
ANR	6646037	ArgumentList	ctx		6645876	1					
ANR	6646038	Argument	ctx		6645876	0					
ANR	6646039	Identifier	ctx		6645876	0					
ANR	6646040	ReturnStatement	return 0 ;	219:1:5636:5644	6645876	17	True				
ANR	6646041	PrimaryExpression	0		6645876	0					
ANR	6646042	Label	default :	221:4:5651:5658	6645876	18	True				
ANR	6646043	Identifier	default		6645876	0					
ANR	6646044	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INVAL	222:1:5661:5685	6645876	19	True				
ANR	6646045	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INVAL		6645876	0		=			
ANR	6646046	ArrayIndexing	ctx -> e [ 0 ]		6645876	0					
ANR	6646047	PtrMemberAccess	ctx -> e		6645876	0					
ANR	6646048	Identifier	ctx		6645876	0					
ANR	6646049	Identifier	e		6645876	1					
ANR	6646050	PrimaryExpression	0		6645876	1					
ANR	6646051	Identifier	ZIP_ER_INVAL		6645876	1					
ANR	6646052	ExpressionStatement	ctx -> e [ 1 ] = 0	223:1:5688:5701	6645876	20	True				
ANR	6646053	AssignmentExpression	ctx -> e [ 1 ] = 0		6645876	0		=			
ANR	6646054	ArrayIndexing	ctx -> e [ 1 ]		6645876	0					
ANR	6646055	PtrMemberAccess	ctx -> e		6645876	0					
ANR	6646056	Identifier	ctx		6645876	0					
ANR	6646057	Identifier	e		6645876	1					
ANR	6646058	PrimaryExpression	1		6645876	1					
ANR	6646059	PrimaryExpression	0		6645876	1					
ANR	6646060	ReturnStatement	return - 1 ;	224:1:5704:5713	6645876	21	True				
ANR	6646061	UnaryOperationExpression	- 1		6645876	0					
ANR	6646062	UnaryOperator	-		6645876	0					
ANR	6646063	PrimaryExpression	1		6645876	1					
ANR	6646064	ReturnType	static zip_int64_t		6645876	1					
ANR	6646065	Identifier	pkware_decrypt		6645876	2					
ANR	6646066	ParameterList	"struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6645876	3					
ANR	6646067	Parameter	struct zip_source * src	174:15:4624:4645	6645876	0	True				
ANR	6646068	ParameterType	struct zip_source *		6645876	0					
ANR	6646069	Identifier	src		6645876	1					
ANR	6646070	Parameter	void * ud	174:39:4648:4655	6645876	1	True				
ANR	6646071	ParameterType	void *		6645876	0					
ANR	6646072	Identifier	ud		6645876	1					
ANR	6646073	Parameter	void * data	174:49:4658:4667	6645876	2	True				
ANR	6646074	ParameterType	void *		6645876	0					
ANR	6646075	Identifier	data		6645876	1					
ANR	6646076	Parameter	zip_uint64_t len	175:8:4678:4693	6645876	3	True				
ANR	6646077	ParameterType	zip_uint64_t		6645876	0					
ANR	6646078	Identifier	len		6645876	1					
ANR	6646079	Parameter	enum zip_source_cmd cmd	175:26:4696:4718	6645876	4	True				
ANR	6646080	ParameterType	enum zip_source_cmd		6645876	0					
ANR	6646081	Identifier	cmd		6645876	1					
ANR	6646082	CFGEntryNode	ENTRY		6645876		True				
ANR	6646083	CFGExitNode	EXIT		6645876		True				
ANR	6646084	Symbol	st		6645876						
ANR	6646085	Symbol	data		6645876						
ANR	6646086	Symbol	* st		6645876						
ANR	6646087	Symbol	src		6645876						
ANR	6646088	Symbol	ctx		6645876						
ANR	6646089	Symbol	st -> encryption_method		6645876						
ANR	6646090	Symbol	zip_source_read		6645876						
ANR	6646091	Symbol	HEADERLEN		6645876						
ANR	6646092	Symbol	ctx -> e		6645876						
ANR	6646093	Symbol	decrypt_header		6645876						
ANR	6646094	Symbol	ZIP_EM_NONE		6645876						
ANR	6646095	Symbol	st -> comp_size		6645876						
ANR	6646096	Symbol	n		6645876						
ANR	6646097	Symbol	* ctx		6645876						
ANR	6646098	Symbol	ud		6645876						
ANR	6646099	Symbol	ZIP_STAT_ENCRYPTION_METHOD		6645876						
ANR	6646100	Symbol	ZIP_ER_INVAL		6645876						
ANR	6646101	Symbol	len		6645876						
ANR	6646102	Symbol	ZIP_STAT_COMP_SIZE		6645876						
ANR	6646103	Symbol	* ctx -> e		6645876						
ANR	6646104	Symbol	cmd		6645876						
ANR	6646105	Symbol	* * ctx		6645876						
ANR	6646106	Symbol	ZIP_SOURCE_ERR_LOWER		6645876						
ANR	6646107	Symbol	st -> valid		6645876						
ANR	6646108	Function	pkware_free	230:0:5727:5793							
ANR	6646109	FunctionDef	pkware_free (struct trad_pkware * ctx)		6646108	0					
ANR	6646110	CompoundStatement		232:0:5776:5793	6646108	0					
ANR	6646111	ExpressionStatement	free ( ctx )	233:4:5782:5791	6646108	0	True				
ANR	6646112	CallExpression	free ( ctx )		6646108	0					
ANR	6646113	Callee	free		6646108	0					
ANR	6646114	Identifier	free		6646108	0					
ANR	6646115	ArgumentList	ctx		6646108	1					
ANR	6646116	Argument	ctx		6646108	0					
ANR	6646117	Identifier	ctx		6646108	0					
ANR	6646118	ReturnType	static void		6646108	1					
ANR	6646119	Identifier	pkware_free		6646108	2					
ANR	6646120	ParameterList	struct trad_pkware * ctx		6646108	3					
ANR	6646121	Parameter	struct trad_pkware * ctx	231:12:5751:5773	6646108	0	True				
ANR	6646122	ParameterType	struct trad_pkware *		6646108	0					
ANR	6646123	Identifier	ctx		6646108	1					
ANR	6646124	CFGEntryNode	ENTRY		6646108		True				
ANR	6646125	CFGExitNode	EXIT		6646108		True				
ANR	6646126	Symbol	ctx		6646108						
