command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3357030	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_xap_dis.c								
ANR	3357031	DeclStmt									
ANR	3357032	Decl							struct state	struct state	_state
ANR	3357033	Function	get_state	16:0:271:379							
ANR	3357034	FunctionDef	get_state ()		3357033	0					
ANR	3357035	CompoundStatement		16:44:315:379	3357033	0					
ANR	3357036	ExpressionStatement	"memset ( & _state , 0 , sizeof ( struct state ) )"	17:1:318:360	3357033	0	True				
ANR	3357037	CallExpression	"memset ( & _state , 0 , sizeof ( struct state ) )"		3357033	0					
ANR	3357038	Callee	memset		3357033	0					
ANR	3357039	Identifier	memset		3357033	0					
ANR	3357040	ArgumentList	& _state		3357033	1					
ANR	3357041	Argument	& _state		3357033	0					
ANR	3357042	UnaryOperationExpression	& _state		3357033	0					
ANR	3357043	UnaryOperator	&		3357033	0					
ANR	3357044	Identifier	_state		3357033	1					
ANR	3357045	Argument	0		3357033	1					
ANR	3357046	PrimaryExpression	0		3357033	0					
ANR	3357047	Argument	sizeof ( struct state )		3357033	2					
ANR	3357048	SizeofExpression	sizeof ( struct state )		3357033	0					
ANR	3357049	Sizeof	sizeof		3357033	0					
ANR	3357050	SizeofOperand	struct state		3357033	1					
ANR	3357051	ReturnStatement	return & _state ;	18:1:363:377	3357033	1	True				
ANR	3357052	UnaryOperationExpression	& _state		3357033	0					
ANR	3357053	UnaryOperator	&		3357033	0					
ANR	3357054	Identifier	_state		3357033	1					
ANR	3357055	ReturnType	static inline struct state *		3357033	1					
ANR	3357056	Identifier	get_state		3357033	2					
ANR	3357057	ParameterList			3357033	3					
ANR	3357058	CFGEntryNode	ENTRY		3357033		True				
ANR	3357059	CFGExitNode	EXIT		3357033		True				
ANR	3357060	Symbol	& _state		3357033						
ANR	3357061	Function	i2u16	21:0:382:456							
ANR	3357062	FunctionDef	i2u16 (struct instruction * in)		3357061	0					
ANR	3357063	CompoundStatement		21:46:428:456	3357061	0					
ANR	3357064	ReturnStatement	return * ( ( uint16_t * ) in ) ;	22:1:431:454	3357061	0	True				
ANR	3357065	UnaryOperationExpression	* ( ( uint16_t * ) in )		3357061	0					
ANR	3357066	UnaryOperator	*		3357061	0					
ANR	3357067	CastExpression	( uint16_t * ) in		3357061	1					
ANR	3357068	CastTarget	uint16_t *		3357061	0					
ANR	3357069	Identifier	in		3357061	1					
ANR	3357070	ReturnType	static uint16_t		3357061	1					
ANR	3357071	Identifier	i2u16		3357061	2					
ANR	3357072	ParameterList	struct instruction * in		3357061	3					
ANR	3357073	Parameter	struct instruction * in	21:22:404:425	3357061	0	True				
ANR	3357074	ParameterType	struct instruction *		3357061	0					
ANR	3357075	Identifier	in		3357061	1					
ANR	3357076	CFGEntryNode	ENTRY		3357061		True				
ANR	3357077	CFGExitNode	EXIT		3357061		True				
ANR	3357078	Symbol	in		3357061						
ANR	3357079	Symbol	* in		3357061						
ANR	3357080	Symbol	* ( ( uint16_t * ) in )		3357061						
ANR	3357081	Function	output	26:0:465:621							
ANR	3357082	FunctionDef	"output (struct state * s , char * fmt)"		3357081	0					
ANR	3357083	CompoundStatement		27:0:517:621	3357081	0					
ANR	3357084	IdentifierDeclStatement	va_list ap ;	28:1:520:530	3357081	0	True				
ANR	3357085	IdentifierDecl	ap		3357081	0					
ANR	3357086	IdentifierDeclType	va_list		3357081	0					
ANR	3357087	Identifier	ap		3357081	1					
ANR	3357088	ExpressionStatement	"va_start ( ap , fmt )"	30:1:534:551	3357081	1	True				
ANR	3357089	CallExpression	"va_start ( ap , fmt )"		3357081	0					
ANR	3357090	Callee	va_start		3357081	0					
ANR	3357091	Identifier	va_start		3357081	0					
ANR	3357092	ArgumentList	ap		3357081	1					
ANR	3357093	Argument	ap		3357081	0					
ANR	3357094	Identifier	ap		3357081	0					
ANR	3357095	Argument	fmt		3357081	1					
ANR	3357096	Identifier	fmt		3357081	0					
ANR	3357097	ExpressionStatement	"cons_printf ( fmt , ap )"	31:1:554:574	3357081	2	True				
ANR	3357098	CallExpression	"cons_printf ( fmt , ap )"		3357081	0					
ANR	3357099	Callee	cons_printf		3357081	0					
ANR	3357100	Identifier	cons_printf		3357081	0					
ANR	3357101	ArgumentList	fmt		3357081	1					
ANR	3357102	Argument	fmt		3357081	0					
ANR	3357103	Identifier	fmt		3357081	0					
ANR	3357104	Argument	ap		3357081	1					
ANR	3357105	Identifier	ap		3357081	0					
ANR	3357106	ExpressionStatement	va_end ( ap )	33:1:609:619	3357081	3	True				
ANR	3357107	CallExpression	va_end ( ap )		3357081	0					
ANR	3357108	Callee	va_end		3357081	0					
ANR	3357109	Identifier	va_end		3357081	0					
ANR	3357110	ArgumentList	ap		3357081	1					
ANR	3357111	Argument	ap		3357081	0					
ANR	3357112	Identifier	ap		3357081	0					
ANR	3357113	ReturnType	static void		3357081	1					
ANR	3357114	Identifier	output		3357081	2					
ANR	3357115	ParameterList	"struct state * s , char * fmt"		3357081	3					
ANR	3357116	Parameter	struct state * s	26:19:484:498	3357081	0	True				
ANR	3357117	ParameterType	struct state *		3357081	0					
ANR	3357118	Identifier	s		3357081	1					
ANR	3357119	Parameter	char * fmt	26:36:501:509	3357081	1	True				
ANR	3357120	ParameterType	char *		3357081	0					
ANR	3357121	Identifier	fmt		3357081	1					
ANR	3357122	CFGEntryNode	ENTRY		3357081		True				
ANR	3357123	CFGExitNode	EXIT		3357081		True				
ANR	3357124	Symbol	s		3357081						
ANR	3357125	Symbol	fmt		3357081						
ANR	3357126	Symbol	ap		3357081						
ANR	3357127	Function	decode_unknown	37:0:631:879							
ANR	3357128	FunctionDef	"decode_unknown (struct state * s , struct directive * d)"		3357127	0					
ANR	3357129	CompoundStatement		37:65:696:879	3357127	0					
ANR	3357130	ExpressionStatement	"printf ( ""Opcode 0x%x reg %d mode %d operand 0x%x"" , in -> in_opcode , in -> in_reg , in -> in_mode , in -> in_operand )"	39:1:705:818	3357127	0	True				
ANR	3357131	CallExpression	"printf ( ""Opcode 0x%x reg %d mode %d operand 0x%x"" , in -> in_opcode , in -> in_reg , in -> in_mode , in -> in_operand )"		3357127	0					
ANR	3357132	Callee	printf		3357127	0					
ANR	3357133	Identifier	printf		3357127	0					
ANR	3357134	ArgumentList	"""Opcode 0x%x reg %d mode %d operand 0x%x"""		3357127	1					
ANR	3357135	Argument	"""Opcode 0x%x reg %d mode %d operand 0x%x"""		3357127	0					
ANR	3357136	PrimaryExpression	"""Opcode 0x%x reg %d mode %d operand 0x%x"""		3357127	0					
ANR	3357137	Argument	in -> in_opcode		3357127	1					
ANR	3357138	PtrMemberAccess	in -> in_opcode		3357127	0					
ANR	3357139	Identifier	in		3357127	0					
ANR	3357140	Identifier	in_opcode		3357127	1					
ANR	3357141	Argument	in -> in_reg		3357127	2					
ANR	3357142	PtrMemberAccess	in -> in_reg		3357127	0					
ANR	3357143	Identifier	in		3357127	0					
ANR	3357144	Identifier	in_reg		3357127	1					
ANR	3357145	Argument	in -> in_mode		3357127	3					
ANR	3357146	PtrMemberAccess	in -> in_mode		3357127	0					
ANR	3357147	Identifier	in		3357127	0					
ANR	3357148	Identifier	in_mode		3357127	1					
ANR	3357149	Argument	in -> in_operand		3357127	4					
ANR	3357150	PtrMemberAccess	in -> in_operand		3357127	0					
ANR	3357151	Identifier	in		3357127	0					
ANR	3357152	Identifier	in_operand		3357127	1					
ANR	3357153	ExpressionStatement	"sprintf ( d -> d_asm , ""DC 0x%4x"" , i2u16 ( & d -> d_inst ) )"	42:1:828:877	3357127	1	True				
ANR	3357154	CallExpression	"sprintf ( d -> d_asm , ""DC 0x%4x"" , i2u16 ( & d -> d_inst ) )"		3357127	0					
ANR	3357155	Callee	sprintf		3357127	0					
ANR	3357156	Identifier	sprintf		3357127	0					
ANR	3357157	ArgumentList	d -> d_asm		3357127	1					
ANR	3357158	Argument	d -> d_asm		3357127	0					
ANR	3357159	PtrMemberAccess	d -> d_asm		3357127	0					
ANR	3357160	Identifier	d		3357127	0					
ANR	3357161	Identifier	d_asm		3357127	1					
ANR	3357162	Argument	"""DC 0x%4x"""		3357127	1					
ANR	3357163	PrimaryExpression	"""DC 0x%4x"""		3357127	0					
ANR	3357164	Argument	i2u16 ( & d -> d_inst )		3357127	2					
ANR	3357165	CallExpression	i2u16 ( & d -> d_inst )		3357127	0					
ANR	3357166	Callee	i2u16		3357127	0					
ANR	3357167	Identifier	i2u16		3357127	0					
ANR	3357168	ArgumentList	& d -> d_inst		3357127	1					
ANR	3357169	Argument	& d -> d_inst		3357127	0					
ANR	3357170	UnaryOperationExpression	& d -> d_inst		3357127	0					
ANR	3357171	UnaryOperator	&		3357127	0					
ANR	3357172	PtrMemberAccess	d -> d_inst		3357127	1					
ANR	3357173	Identifier	d		3357127	0					
ANR	3357174	Identifier	d_inst		3357127	1					
ANR	3357175	ReturnType	static void		3357127	1					
ANR	3357176	Identifier	decode_unknown		3357127	2					
ANR	3357177	ParameterList	"struct state * s , struct directive * d"		3357127	3					
ANR	3357178	Parameter	struct state * s	37:27:658:672	3357127	0	True				
ANR	3357179	ParameterType	struct state *		3357127	0					
ANR	3357180	Identifier	s		3357127	1					
ANR	3357181	Parameter	struct directive * d	37:44:675:693	3357127	1	True				
ANR	3357182	ParameterType	struct directive *		3357127	0					
ANR	3357183	Identifier	d		3357127	1					
ANR	3357184	CFGEntryNode	ENTRY		3357127		True				
ANR	3357185	CFGExitNode	EXIT		3357127		True				
ANR	3357186	Symbol	in -> in_reg		3357127						
ANR	3357187	Symbol	i2u16		3357127						
ANR	3357188	Symbol	in -> in_mode		3357127						
ANR	3357189	Symbol	s		3357127						
ANR	3357190	Symbol	d -> d_asm		3357127						
ANR	3357191	Symbol	d		3357127						
ANR	3357192	Symbol	in -> in_operand		3357127						
ANR	3357193	Symbol	in		3357127						
ANR	3357194	Symbol	* in		3357127						
ANR	3357195	Symbol	in -> in_opcode		3357127						
ANR	3357196	Symbol	* d		3357127						
ANR	3357197	Symbol	& d -> d_inst		3357127						
ANR	3357198	Function	decode_fixed	45:0:882:1474							
ANR	3357199	FunctionDef	"decode_fixed (struct state * s , struct directive * d)"		3357198	0					
ANR	3357200	CompoundStatement		45:62:944:1474	3357198	0					
ANR	3357201	ExpressionStatement	* d -> d_asm = '\\0'	46:1:947:963	3357198	0	True				
ANR	3357202	AssignmentExpression	* d -> d_asm = '\\0'		3357198	0		=			
ANR	3357203	UnaryOperationExpression	* d -> d_asm		3357198	0					
ANR	3357204	UnaryOperator	*		3357198	0					
ANR	3357205	PtrMemberAccess	d -> d_asm		3357198	1					
ANR	3357206	Identifier	d		3357198	0					
ANR	3357207	Identifier	d_asm		3357198	1					
ANR	3357208	PrimaryExpression	'\\0'		3357198	1					
ANR	3357209	SwitchStatement	switch ( i2u16 ( & d -> d_inst ) )		3357198	1					
ANR	3357210	Condition	i2u16 ( & d -> d_inst )	47:9:974:991	3357198	0	True				
ANR	3357211	CallExpression	i2u16 ( & d -> d_inst )		3357198	0					
ANR	3357212	Callee	i2u16		3357198	0					
ANR	3357213	Identifier	i2u16		3357198	0					
ANR	3357214	ArgumentList	& d -> d_inst		3357198	1					
ANR	3357215	Argument	& d -> d_inst		3357198	0					
ANR	3357216	UnaryOperationExpression	& d -> d_inst		3357198	0					
ANR	3357217	UnaryOperator	&		3357198	0					
ANR	3357218	PtrMemberAccess	d -> d_inst		3357198	1					
ANR	3357219	Identifier	d		3357198	0					
ANR	3357220	Identifier	d_inst		3357198	1					
ANR	3357221	CompoundStatement		3:29:49:49	3357198	1					
ANR	3357222	Label	case INST_NOP :	48:1:997:1010	3357198	0	True				
ANR	3357223	Identifier	INST_NOP		3357198	0					
ANR	3357224	IfStatement	if ( s -> s_prefix )		3357198	1					
ANR	3357225	Condition	s -> s_prefix	49:6:1018:1028	3357198	0	True				
ANR	3357226	PtrMemberAccess	s -> s_prefix		3357198	0					
ANR	3357227	Identifier	s		3357198	0					
ANR	3357228	Identifier	s_prefix		3357198	1					
ANR	3357229	CompoundStatement		5:19:86:86	3357198	1					
ANR	3357230	ReturnStatement	return 0 ;	50:3:1036:1044	3357198	0	True				
ANR	3357231	PrimaryExpression	0		3357198	0					
ANR	3357232	ExpressionStatement	s -> s_nop ++	52:2:1052:1062	3357198	2	True				
ANR	3357233	PostIncDecOperationExpression	s -> s_nop ++		3357198	0					
ANR	3357234	PtrMemberAccess	s -> s_nop		3357198	0					
ANR	3357235	Identifier	s		3357198	0					
ANR	3357236	Identifier	s_nop		3357198	1					
ANR	3357237	IncDec	++		3357198	1					
ANR	3357238	ExpressionStatement	"strcpy ( d -> d_asm , ""nop"" )"	53:2:1066:1089	3357198	3	True				
ANR	3357239	CallExpression	"strcpy ( d -> d_asm , ""nop"" )"		3357198	0					
ANR	3357240	Callee	strcpy		3357198	0					
ANR	3357241	Identifier	strcpy		3357198	0					
ANR	3357242	ArgumentList	d -> d_asm		3357198	1					
ANR	3357243	Argument	d -> d_asm		3357198	0					
ANR	3357244	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357245	Identifier	d		3357198	0					
ANR	3357246	Identifier	d_asm		3357198	1					
ANR	3357247	Argument	"""nop"""		3357198	1					
ANR	3357248	PrimaryExpression	"""nop"""		3357198	0					
ANR	3357249	BreakStatement	break ;	54:2:1093:1098	3357198	4	True				
ANR	3357250	Label	case INST_BRK :	55:1:1101:1114	3357198	5	True				
ANR	3357251	Identifier	INST_BRK		3357198	0					
ANR	3357252	ExpressionStatement	"strcpy ( d -> d_asm , ""brk"" )"	55:16:1116:1139	3357198	6	True				
ANR	3357253	CallExpression	"strcpy ( d -> d_asm , ""brk"" )"		3357198	0					
ANR	3357254	Callee	strcpy		3357198	0					
ANR	3357255	Identifier	strcpy		3357198	0					
ANR	3357256	ArgumentList	d -> d_asm		3357198	1					
ANR	3357257	Argument	d -> d_asm		3357198	0					
ANR	3357258	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357259	Identifier	d		3357198	0					
ANR	3357260	Identifier	d_asm		3357198	1					
ANR	3357261	Argument	"""brk"""		3357198	1					
ANR	3357262	PrimaryExpression	"""brk"""		3357198	0					
ANR	3357263	BreakStatement	break ;	55:41:1141:1146	3357198	7	True				
ANR	3357264	Label	case INST_SLEEP :	56:1:1149:1164	3357198	8	True				
ANR	3357265	Identifier	INST_SLEEP		3357198	0					
ANR	3357266	ExpressionStatement	"strcpy ( d -> d_asm , ""sleep"" )"	56:18:1166:1191	3357198	9	True				
ANR	3357267	CallExpression	"strcpy ( d -> d_asm , ""sleep"" )"		3357198	0					
ANR	3357268	Callee	strcpy		3357198	0					
ANR	3357269	Identifier	strcpy		3357198	0					
ANR	3357270	ArgumentList	d -> d_asm		3357198	1					
ANR	3357271	Argument	d -> d_asm		3357198	0					
ANR	3357272	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357273	Identifier	d		3357198	0					
ANR	3357274	Identifier	d_asm		3357198	1					
ANR	3357275	Argument	"""sleep"""		3357198	1					
ANR	3357276	PrimaryExpression	"""sleep"""		3357198	0					
ANR	3357277	BreakStatement	break ;	56:45:1193:1198	3357198	10	True				
ANR	3357278	Label	case INST_SIF :	57:1:1201:1214	3357198	11	True				
ANR	3357279	Identifier	INST_SIF		3357198	0					
ANR	3357280	ExpressionStatement	"strcpy ( d -> d_asm , ""sif"" )"	57:16:1216:1239	3357198	12	True				
ANR	3357281	CallExpression	"strcpy ( d -> d_asm , ""sif"" )"		3357198	0					
ANR	3357282	Callee	strcpy		3357198	0					
ANR	3357283	Identifier	strcpy		3357198	0					
ANR	3357284	ArgumentList	d -> d_asm		3357198	1					
ANR	3357285	Argument	d -> d_asm		3357198	0					
ANR	3357286	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357287	Identifier	d		3357198	0					
ANR	3357288	Identifier	d_asm		3357198	1					
ANR	3357289	Argument	"""sif"""		3357198	1					
ANR	3357290	PrimaryExpression	"""sif"""		3357198	0					
ANR	3357291	BreakStatement	break ;	57:41:1241:1246	3357198	13	True				
ANR	3357292	Label	case INST_BC :	58:1:1249:1261	3357198	14	True				
ANR	3357293	Identifier	INST_BC		3357198	0					
ANR	3357294	ExpressionStatement	"strcpy ( d -> d_asm , ""bc"" )"	58:15:1263:1285	3357198	15	True				
ANR	3357295	CallExpression	"strcpy ( d -> d_asm , ""bc"" )"		3357198	0					
ANR	3357296	Callee	strcpy		3357198	0					
ANR	3357297	Identifier	strcpy		3357198	0					
ANR	3357298	ArgumentList	d -> d_asm		3357198	1					
ANR	3357299	Argument	d -> d_asm		3357198	0					
ANR	3357300	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357301	Identifier	d		3357198	0					
ANR	3357302	Identifier	d_asm		3357198	1					
ANR	3357303	Argument	"""bc"""		3357198	1					
ANR	3357304	PrimaryExpression	"""bc"""		3357198	0					
ANR	3357305	BreakStatement	break ;	58:39:1287:1292	3357198	16	True				
ANR	3357306	Label	case INST_BRXL :	59:1:1295:1309	3357198	17	True				
ANR	3357307	Identifier	INST_BRXL		3357198	0					
ANR	3357308	ExpressionStatement	"strcpy ( d -> d_asm , ""brxl"" )"	59:17:1311:1335	3357198	18	True				
ANR	3357309	CallExpression	"strcpy ( d -> d_asm , ""brxl"" )"		3357198	0					
ANR	3357310	Callee	strcpy		3357198	0					
ANR	3357311	Identifier	strcpy		3357198	0					
ANR	3357312	ArgumentList	d -> d_asm		3357198	1					
ANR	3357313	Argument	d -> d_asm		3357198	0					
ANR	3357314	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357315	Identifier	d		3357198	0					
ANR	3357316	Identifier	d_asm		3357198	1					
ANR	3357317	Argument	"""brxl"""		3357198	1					
ANR	3357318	PrimaryExpression	"""brxl"""		3357198	0					
ANR	3357319	BreakStatement	break ;	59:43:1337:1342	3357198	19	True				
ANR	3357320	Label	case INST_U :	60:1:1345:1356	3357198	20	True				
ANR	3357321	Identifier	INST_U		3357198	0					
ANR	3357322	ExpressionStatement	"strcpy ( d -> d_asm , """" )"	60:14:1358:1378	3357198	21	True				
ANR	3357323	CallExpression	"strcpy ( d -> d_asm , """" )"		3357198	0					
ANR	3357324	Callee	strcpy		3357198	0					
ANR	3357325	Identifier	strcpy		3357198	0					
ANR	3357326	ArgumentList	d -> d_asm		3357198	1					
ANR	3357327	Argument	d -> d_asm		3357198	0					
ANR	3357328	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357329	Identifier	d		3357198	0					
ANR	3357330	Identifier	d_asm		3357198	1					
ANR	3357331	Argument	""""""		3357198	1					
ANR	3357332	PrimaryExpression	""""""		3357198	0					
ANR	3357333	ExpressionStatement	s -> s_u = 1	60:36:1380:1390	3357198	22	True				
ANR	3357334	AssignmentExpression	s -> s_u = 1		3357198	0		=			
ANR	3357335	PtrMemberAccess	s -> s_u		3357198	0					
ANR	3357336	Identifier	s		3357198	0					
ANR	3357337	Identifier	s_u		3357198	1					
ANR	3357338	PrimaryExpression	1		3357198	1					
ANR	3357339	BreakStatement	break ;	60:48:1392:1397	3357198	23	True				
ANR	3357340	Label	case INST_RTS :	61:1:1400:1413	3357198	24	True				
ANR	3357341	Identifier	INST_RTS		3357198	0					
ANR	3357342	ExpressionStatement	"strcpy ( d -> d_asm , ""rts"" )"	61:16:1415:1438	3357198	25	True				
ANR	3357343	CallExpression	"strcpy ( d -> d_asm , ""rts"" )"		3357198	0					
ANR	3357344	Callee	strcpy		3357198	0					
ANR	3357345	Identifier	strcpy		3357198	0					
ANR	3357346	ArgumentList	d -> d_asm		3357198	1					
ANR	3357347	Argument	d -> d_asm		3357198	0					
ANR	3357348	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357349	Identifier	d		3357198	0					
ANR	3357350	Identifier	d_asm		3357198	1					
ANR	3357351	Argument	"""rts"""		3357198	1					
ANR	3357352	PrimaryExpression	"""rts"""		3357198	0					
ANR	3357353	BreakStatement	break ;	61:41:1440:1445	3357198	26	True				
ANR	3357354	ReturnStatement	return d -> d_asm [ 0 ] != 0 ;	63:1:1451:1472	3357198	2	True				
ANR	3357355	EqualityExpression	d -> d_asm [ 0 ] != 0		3357198	0		!=			
ANR	3357356	ArrayIndexing	d -> d_asm [ 0 ]		3357198	0					
ANR	3357357	PtrMemberAccess	d -> d_asm		3357198	0					
ANR	3357358	Identifier	d		3357198	0					
ANR	3357359	Identifier	d_asm		3357198	1					
ANR	3357360	PrimaryExpression	0		3357198	1					
ANR	3357361	PrimaryExpression	0		3357198	1					
ANR	3357362	ReturnType	static int		3357198	1					
ANR	3357363	Identifier	decode_fixed		3357198	2					
ANR	3357364	ParameterList	"struct state * s , struct directive * d"		3357198	3					
ANR	3357365	Parameter	struct state * s	45:24:906:920	3357198	0	True				
ANR	3357366	ParameterType	struct state *		3357198	0					
ANR	3357367	Identifier	s		3357198	1					
ANR	3357368	Parameter	struct directive * d	45:41:923:941	3357198	1	True				
ANR	3357369	ParameterType	struct directive *		3357198	0					
ANR	3357370	Identifier	d		3357198	1					
ANR	3357371	CFGEntryNode	ENTRY		3357198		True				
ANR	3357372	CFGExitNode	EXIT		3357198		True				
ANR	3357373	Symbol	i2u16		3357198						
ANR	3357374	Symbol	s		3357198						
ANR	3357375	Symbol	d -> d_asm		3357198						
ANR	3357376	Symbol	d		3357198						
ANR	3357377	Symbol	s -> s_u		3357198						
ANR	3357378	Symbol	* * d		3357198						
ANR	3357379	Symbol	s -> s_prefix		3357198						
ANR	3357380	Symbol	* d -> d_asm		3357198						
ANR	3357381	Symbol	* s		3357198						
ANR	3357382	Symbol	* d		3357198						
ANR	3357383	Symbol	& d -> d_inst		3357198						
ANR	3357384	Symbol	s -> s_nop		3357198						
ANR	3357385	Function	regname	66:0:1477:1646							
ANR	3357386	FunctionDef	regname (int reg)		3357385	0					
ANR	3357387	CompoundStatement		66:30:1507:1646	3357385	0					
ANR	3357388	SwitchStatement	switch ( reg )		3357385	0					
ANR	3357389	Condition	reg	67:9:1518:1520	3357385	0	True				
ANR	3357390	Identifier	reg		3357385	0					
ANR	3357391	CompoundStatement		2:14:15:15	3357385	1					
ANR	3357392	Label	case REG_AH :	68:1:1526:1537	3357385	0	True				
ANR	3357393	Identifier	REG_AH		3357385	0					
ANR	3357394	ReturnStatement	"return ""AH"" ;"	68:14:1539:1550	3357385	1	True				
ANR	3357395	PrimaryExpression	"""AH"""		3357385	0					
ANR	3357396	Label	case REG_AL :	69:1:1553:1564	3357385	2	True				
ANR	3357397	Identifier	REG_AL		3357385	0					
ANR	3357398	ReturnStatement	"return ""AL"" ;"	69:14:1566:1577	3357385	3	True				
ANR	3357399	PrimaryExpression	"""AL"""		3357385	0					
ANR	3357400	Label	case REG_X :	70:1:1580:1590	3357385	4	True				
ANR	3357401	Identifier	REG_X		3357385	0					
ANR	3357402	ReturnStatement	"return ""X"" ;"	70:13:1592:1602	3357385	5	True				
ANR	3357403	PrimaryExpression	"""X"""		3357385	0					
ANR	3357404	Label	case REG_Y :	71:1:1605:1615	3357385	6	True				
ANR	3357405	Identifier	REG_Y		3357385	0					
ANR	3357406	ReturnStatement	"return ""Y"" ;"	71:13:1617:1627	3357385	7	True				
ANR	3357407	PrimaryExpression	"""Y"""		3357385	0					
ANR	3357408	ReturnStatement	return NULL ;	73:1:1633:1644	3357385	1	True				
ANR	3357409	Identifier	NULL		3357385	0					
ANR	3357410	ReturnType	static char *		3357385	1					
ANR	3357411	Identifier	regname		3357385	2					
ANR	3357412	ParameterList	int reg		3357385	3					
ANR	3357413	Parameter	int reg	66:21:1498:1504	3357385	0	True				
ANR	3357414	ParameterType	int		3357385	0					
ANR	3357415	Identifier	reg		3357385	1					
ANR	3357416	CFGEntryNode	ENTRY		3357385		True				
ANR	3357417	CFGExitNode	EXIT		3357385		True				
ANR	3357418	Symbol	NULL		3357385						
ANR	3357419	Symbol	reg		3357385						
ANR	3357420	Function	get_num	76:0:1649:1757							
ANR	3357421	FunctionDef	"get_num (int num , int shift)"		3357420	0					
ANR	3357422	CompoundStatement		76:39:1688:1757	3357420	0					
ANR	3357423	IdentifierDeclStatement	char x = ( char ) ( ( num >> shift ) & 0xff ) ;	77:1:1691:1730	3357420	0	True				
ANR	3357424	IdentifierDecl	x = ( char ) ( ( num >> shift ) & 0xff )		3357420	0					
ANR	3357425	IdentifierDeclType	char		3357420	0					
ANR	3357426	Identifier	x		3357420	1					
ANR	3357427	AssignmentExpression	x = ( char ) ( ( num >> shift ) & 0xff )		3357420	2		=			
ANR	3357428	Identifier	x		3357420	0					
ANR	3357429	CastExpression	( char ) ( ( num >> shift ) & 0xff )		3357420	1					
ANR	3357430	CastTarget	char		3357420	0					
ANR	3357431	BitAndExpression	( num >> shift ) & 0xff		3357420	1		&			
ANR	3357432	ShiftExpression	num >> shift		3357420	0		>>			
ANR	3357433	Identifier	num		3357420	0					
ANR	3357434	Identifier	shift		3357420	1					
ANR	3357435	PrimaryExpression	0xff		3357420	1					
ANR	3357436	ReturnStatement	return ( int ) ( x << shift ) ;	78:1:1733:1755	3357420	1	True				
ANR	3357437	CastExpression	( int ) ( x << shift )		3357420	0					
ANR	3357438	CastTarget	int		3357420	0					
ANR	3357439	ShiftExpression	x << shift		3357420	1		<<			
ANR	3357440	Identifier	x		3357420	0					
ANR	3357441	Identifier	shift		3357420	1					
ANR	3357442	ReturnType	static int		3357420	1					
ANR	3357443	Identifier	get_num		3357420	2					
ANR	3357444	ParameterList	"int num , int shift"		3357420	3					
ANR	3357445	Parameter	int num	76:19:1668:1674	3357420	0	True				
ANR	3357446	ParameterType	int		3357420	0					
ANR	3357447	Identifier	num		3357420	1					
ANR	3357448	Parameter	int shift	76:28:1677:1685	3357420	1	True				
ANR	3357449	ParameterType	int		3357420	0					
ANR	3357450	Identifier	shift		3357420	1					
ANR	3357451	CFGEntryNode	ENTRY		3357420		True				
ANR	3357452	CFGExitNode	EXIT		3357420		True				
ANR	3357453	Symbol	num		3357420						
ANR	3357454	Symbol	shift		3357420						
ANR	3357455	Symbol	x		3357420						
ANR	3357456	Function	get_operand	81:0:1760:2007							
ANR	3357457	FunctionDef	"get_operand (struct state * s , struct directive * d)"		3357456	0					
ANR	3357458	CompoundStatement		81:61:1821:2007	3357456	0					
ANR	3357459	IdentifierDeclStatement	"int total = get_num ( d -> d_inst . in_operand , 0 ) ;"	82:1:1824:1868	3357456	0	True				
ANR	3357460	IdentifierDecl	"total = get_num ( d -> d_inst . in_operand , 0 )"		3357456	0					
ANR	3357461	IdentifierDeclType	int		3357456	0					
ANR	3357462	Identifier	total		3357456	1					
ANR	3357463	AssignmentExpression	"total = get_num ( d -> d_inst . in_operand , 0 )"		3357456	2		=			
ANR	3357464	Identifier	total		3357456	0					
ANR	3357465	CallExpression	"get_num ( d -> d_inst . in_operand , 0 )"		3357456	1					
ANR	3357466	Callee	get_num		3357456	0					
ANR	3357467	Identifier	get_num		3357456	0					
ANR	3357468	ArgumentList	d -> d_inst . in_operand		3357456	1					
ANR	3357469	Argument	d -> d_inst . in_operand		3357456	0					
ANR	3357470	MemberAccess	d -> d_inst . in_operand		3357456	0					
ANR	3357471	PtrMemberAccess	d -> d_inst		3357456	0					
ANR	3357472	Identifier	d		3357456	0					
ANR	3357473	Identifier	d_inst		3357456	1					
ANR	3357474	Identifier	in_operand		3357456	1					
ANR	3357475	Argument	0		3357456	1					
ANR	3357476	PrimaryExpression	0		3357456	0					
ANR	3357477	IfStatement	if ( s -> s_prefix )		3357456	1					
ANR	3357478	Condition	s -> s_prefix	83:5:1875:1885	3357456	0	True				
ANR	3357479	PtrMemberAccess	s -> s_prefix		3357456	0					
ANR	3357480	Identifier	s		3357456	0					
ANR	3357481	Identifier	s_prefix		3357456	1					
ANR	3357482	ExpressionStatement	"total += get_num ( s -> s_prefix_val , 8 )"	84:2:1890:1926	3357456	1	True				
ANR	3357483	AssignmentExpression	"total += get_num ( s -> s_prefix_val , 8 )"		3357456	0		+=			
ANR	3357484	Identifier	total		3357456	0					
ANR	3357485	CallExpression	"get_num ( s -> s_prefix_val , 8 )"		3357456	1					
ANR	3357486	Callee	get_num		3357456	0					
ANR	3357487	Identifier	get_num		3357456	0					
ANR	3357488	ArgumentList	s -> s_prefix_val		3357456	1					
ANR	3357489	Argument	s -> s_prefix_val		3357456	0					
ANR	3357490	PtrMemberAccess	s -> s_prefix_val		3357456	0					
ANR	3357491	Identifier	s		3357456	0					
ANR	3357492	Identifier	s_prefix_val		3357456	1					
ANR	3357493	Argument	8		3357456	1					
ANR	3357494	PrimaryExpression	8		3357456	0					
ANR	3357495	IfStatement	if ( s -> s_prefix == 2 )		3357456	2					
ANR	3357496	Condition	s -> s_prefix == 2	85:5:1933:1948	3357456	0	True				
ANR	3357497	EqualityExpression	s -> s_prefix == 2		3357456	0		==			
ANR	3357498	PtrMemberAccess	s -> s_prefix		3357456	0					
ANR	3357499	Identifier	s		3357456	0					
ANR	3357500	Identifier	s_prefix		3357456	1					
ANR	3357501	PrimaryExpression	2		3357456	1					
ANR	3357502	ExpressionStatement	"total += get_num ( s -> s_prefix_val , 16 )"	86:2:1953:1990	3357456	1	True				
ANR	3357503	AssignmentExpression	"total += get_num ( s -> s_prefix_val , 16 )"		3357456	0		+=			
ANR	3357504	Identifier	total		3357456	0					
ANR	3357505	CallExpression	"get_num ( s -> s_prefix_val , 16 )"		3357456	1					
ANR	3357506	Callee	get_num		3357456	0					
ANR	3357507	Identifier	get_num		3357456	0					
ANR	3357508	ArgumentList	s -> s_prefix_val		3357456	1					
ANR	3357509	Argument	s -> s_prefix_val		3357456	0					
ANR	3357510	PtrMemberAccess	s -> s_prefix_val		3357456	0					
ANR	3357511	Identifier	s		3357456	0					
ANR	3357512	Identifier	s_prefix_val		3357456	1					
ANR	3357513	Argument	16		3357456	1					
ANR	3357514	PrimaryExpression	16		3357456	0					
ANR	3357515	ReturnStatement	return total ;	87:1:1993:2005	3357456	3	True				
ANR	3357516	Identifier	total		3357456	0					
ANR	3357517	ReturnType	static int		3357456	1					
ANR	3357518	Identifier	get_operand		3357456	2					
ANR	3357519	ParameterList	"struct state * s , struct directive * d"		3357456	3					
ANR	3357520	Parameter	struct state * s	81:23:1783:1797	3357456	0	True				
ANR	3357521	ParameterType	struct state *		3357456	0					
ANR	3357522	Identifier	s		3357456	1					
ANR	3357523	Parameter	struct directive * d	81:40:1800:1818	3357456	1	True				
ANR	3357524	ParameterType	struct directive *		3357456	0					
ANR	3357525	Identifier	d		3357456	1					
ANR	3357526	CFGEntryNode	ENTRY		3357456		True				
ANR	3357527	CFGExitNode	EXIT		3357456		True				
ANR	3357528	Symbol	total		3357456						
ANR	3357529	Symbol	s		3357456						
ANR	3357530	Symbol	s -> s_prefix_val		3357456						
ANR	3357531	Symbol	d		3357456						
ANR	3357532	Symbol	get_num		3357456						
ANR	3357533	Symbol	s -> s_prefix		3357456						
ANR	3357534	Symbol	d -> d_inst		3357456						
ANR	3357535	Symbol	* s		3357456						
ANR	3357536	Symbol	* d		3357456						
ANR	3357537	Symbol	d -> d_inst . in_operand		3357456						
ANR	3357538	Function	decode_known	90:0:2010:7616							
ANR	3357539	FunctionDef	"decode_known (struct state * s , struct directive * d)"		3357538	0					
ANR	3357540	CompoundStatement		90:62:2072:7616	3357538	0					
ANR	3357541	IdentifierDeclStatement	char * op = NULL ;	91:1:2075:2090	3357538	0	True				
ANR	3357542	IdentifierDecl	* op = NULL		3357538	0					
ANR	3357543	IdentifierDeclType	char *		3357538	0					
ANR	3357544	Identifier	op		3357538	1					
ANR	3357545	AssignmentExpression	* op = NULL		3357538	2		=			
ANR	3357546	Identifier	NULL		3357538	0					
ANR	3357547	Identifier	NULL		3357538	1					
ANR	3357548	IdentifierDeclStatement	char * regn = NULL ;	92:1:2093:2110	3357538	1	True				
ANR	3357549	IdentifierDecl	* regn = NULL		3357538	0					
ANR	3357550	IdentifierDeclType	char *		3357538	0					
ANR	3357551	Identifier	regn		3357538	1					
ANR	3357552	AssignmentExpression	* regn = NULL		3357538	2		=			
ANR	3357553	Identifier	NULL		3357538	0					
ANR	3357554	Identifier	NULL		3357538	1					
ANR	3357555	IdentifierDeclStatement	int reg = 0 ;	93:1:2113:2124	3357538	2	True				
ANR	3357556	IdentifierDecl	reg = 0		3357538	0					
ANR	3357557	IdentifierDeclType	int		3357538	0					
ANR	3357558	Identifier	reg		3357538	1					
ANR	3357559	AssignmentExpression	reg = 0		3357538	2		=			
ANR	3357560	Identifier	reg		3357538	0					
ANR	3357561	PrimaryExpression	0		3357538	1					
ANR	3357562	IdentifierDeclStatement	int ptr = 1 ;	94:1:2127:2138	3357538	3	True				
ANR	3357563	IdentifierDecl	ptr = 1		3357538	0					
ANR	3357564	IdentifierDeclType	int		3357538	0					
ANR	3357565	Identifier	ptr		3357538	1					
ANR	3357566	AssignmentExpression	ptr = 1		3357538	2		=			
ANR	3357567	Identifier	ptr		3357538	0					
ANR	3357568	PrimaryExpression	1		3357538	1					
ANR	3357569	IdentifierDeclStatement	int idx = 1 ;	95:1:2141:2152	3357538	4	True				
ANR	3357570	IdentifierDecl	idx = 1		3357538	0					
ANR	3357571	IdentifierDeclType	int		3357538	0					
ANR	3357572	Identifier	idx		3357538	1					
ANR	3357573	AssignmentExpression	idx = 1		3357538	2		=			
ANR	3357574	Identifier	idx		3357538	0					
ANR	3357575	PrimaryExpression	1		3357538	1					
ANR	3357576	IdentifierDeclStatement	int imm = 0 ;	96:1:2155:2166	3357538	5	True				
ANR	3357577	IdentifierDecl	imm = 0		3357538	0					
ANR	3357578	IdentifierDeclType	int		3357538	0					
ANR	3357579	Identifier	imm		3357538	1					
ANR	3357580	AssignmentExpression	imm = 0		3357538	2		=			
ANR	3357581	Identifier	imm		3357538	0					
ANR	3357582	PrimaryExpression	0		3357538	1					
ANR	3357583	IdentifierDeclStatement	int rel = 0 ;	97:1:2169:2180	3357538	6	True				
ANR	3357584	IdentifierDecl	rel = 0		3357538	0					
ANR	3357585	IdentifierDeclType	int		3357538	0					
ANR	3357586	Identifier	rel		3357538	1					
ANR	3357587	AssignmentExpression	rel = 0		3357538	2		=			
ANR	3357588	Identifier	rel		3357538	0					
ANR	3357589	PrimaryExpression	0		3357538	1					
ANR	3357590	IdentifierDeclStatement	char fmt [ 16 ] ;	98:1:2183:2195	3357538	7	True				
ANR	3357591	IdentifierDecl	fmt [ 16 ]		3357538	0					
ANR	3357592	IdentifierDeclType	char [ 16 ]		3357538	0					
ANR	3357593	Identifier	fmt		3357538	1					
ANR	3357594	PrimaryExpression	16		3357538	2					
ANR	3357595	IdentifierDeclStatement	char tmp [ 128 ] ;	99:1:2198:2211	3357538	8	True				
ANR	3357596	IdentifierDecl	tmp [ 128 ]		3357538	0					
ANR	3357597	IdentifierDeclType	char [ 128 ]		3357538	0					
ANR	3357598	Identifier	tmp		3357538	1					
ANR	3357599	PrimaryExpression	128		3357538	2					
ANR	3357600	IdentifierDeclStatement	int fmtsz ;	100:1:2214:2223	3357538	9	True				
ANR	3357601	IdentifierDecl	fmtsz		3357538	0					
ANR	3357602	IdentifierDeclType	int		3357538	0					
ANR	3357603	Identifier	fmtsz		3357538	1					
ANR	3357604	IdentifierDeclStatement	int branch = 0 ;	101:1:2226:2240	3357538	10	True				
ANR	3357605	IdentifierDecl	branch = 0		3357538	0					
ANR	3357606	IdentifierDeclType	int		3357538	0					
ANR	3357607	Identifier	branch		3357538	1					
ANR	3357608	AssignmentExpression	branch = 0		3357538	2		=			
ANR	3357609	Identifier	branch		3357538	0					
ANR	3357610	PrimaryExpression	0		3357538	1					
ANR	3357611	IdentifierDeclStatement	struct instruction * in = & d -> d_inst ;	102:1:2243:2278	3357538	11	True				
ANR	3357612	IdentifierDecl	* in = & d -> d_inst		3357538	0					
ANR	3357613	IdentifierDeclType	struct instruction *		3357538	0					
ANR	3357614	Identifier	in		3357538	1					
ANR	3357615	AssignmentExpression	* in = & d -> d_inst		3357538	2		=			
ANR	3357616	Identifier	in		3357538	0					
ANR	3357617	UnaryOperationExpression	& d -> d_inst		3357538	1					
ANR	3357618	UnaryOperator	&		3357538	0					
ANR	3357619	PtrMemberAccess	d -> d_inst		3357538	1					
ANR	3357620	Identifier	d		3357538	0					
ANR	3357621	Identifier	d_inst		3357538	1					
ANR	3357622	IdentifierDeclStatement	"char * sign = """" ;"	104:1:2297:2312	3357538	12	True				
ANR	3357623	IdentifierDecl	"* sign = """""		3357538	0					
ANR	3357624	IdentifierDeclType	char *		3357538	0					
ANR	3357625	Identifier	sign		3357538	1					
ANR	3357626	AssignmentExpression	"* sign = """""		3357538	2		=			
ANR	3357627	Identifier	sign		3357538	0					
ANR	3357628	PrimaryExpression	""""""		3357538	1					
ANR	3357629	IdentifierDeclStatement	int rti = 0 ;	105:1:2315:2326	3357538	13	True				
ANR	3357630	IdentifierDecl	rti = 0		3357538	0					
ANR	3357631	IdentifierDeclType	int		3357538	0					
ANR	3357632	Identifier	rti		3357538	1					
ANR	3357633	AssignmentExpression	rti = 0		3357538	2		=			
ANR	3357634	Identifier	rti		3357538	0					
ANR	3357635	PrimaryExpression	0		3357538	1					
ANR	3357636	SwitchStatement	switch ( in -> in_opcode )		3357538	14					
ANR	3357637	Condition	in -> in_opcode	107:9:2338:2350	3357538	0	True				
ANR	3357638	PtrMemberAccess	in -> in_opcode		3357538	0					
ANR	3357639	Identifier	in		3357538	0					
ANR	3357640	Identifier	in_opcode		3357538	1					
ANR	3357641	CompoundStatement		18:24:280:280	3357538	1					
ANR	3357642	Label	case 0 :	108:1:2356:2362	3357538	0	True				
ANR	3357643	IfStatement	if ( in -> in_reg == 0 && in -> in_mode == 0 )		3357538	1					
ANR	3357644	Condition	in -> in_reg == 0 && in -> in_mode == 0	109:6:2370:2404	3357538	0	True				
ANR	3357645	AndExpression	in -> in_reg == 0 && in -> in_mode == 0		3357538	0		&&			
ANR	3357646	EqualityExpression	in -> in_reg == 0		3357538	0		==			
ANR	3357647	PtrMemberAccess	in -> in_reg		3357538	0					
ANR	3357648	Identifier	in		3357538	0					
ANR	3357649	Identifier	in_reg		3357538	1					
ANR	3357650	PrimaryExpression	0		3357538	1					
ANR	3357651	EqualityExpression	in -> in_mode == 0		3357538	1		==			
ANR	3357652	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3357653	Identifier	in		3357538	0					
ANR	3357654	Identifier	in_mode		3357538	1					
ANR	3357655	PrimaryExpression	0		3357538	1					
ANR	3357656	CompoundStatement		20:43:334:334	3357538	1					
ANR	3357657	IfStatement	if ( s -> s_prefix == 0 )		3357538	0					
ANR	3357658	Condition	s -> s_prefix == 0	110:7:2416:2431	3357538	0	True				
ANR	3357659	EqualityExpression	s -> s_prefix == 0		3357538	0		==			
ANR	3357660	PtrMemberAccess	s -> s_prefix		3357538	0					
ANR	3357661	Identifier	s		3357538	0					
ANR	3357662	Identifier	s_prefix		3357538	1					
ANR	3357663	PrimaryExpression	0		3357538	1					
ANR	3357664	ExpressionStatement	s -> s_prefix_val = 0	111:4:2438:2457	3357538	1	True				
ANR	3357665	AssignmentExpression	s -> s_prefix_val = 0		3357538	0		=			
ANR	3357666	PtrMemberAccess	s -> s_prefix_val		3357538	0					
ANR	3357667	Identifier	s		3357538	0					
ANR	3357668	Identifier	s_prefix_val		3357538	1					
ANR	3357669	PrimaryExpression	0		3357538	1					
ANR	3357670	ExpressionStatement	s -> s_prefix ++	112:3:2462:2475	3357538	1	True				
ANR	3357671	PostIncDecOperationExpression	s -> s_prefix ++		3357538	0					
ANR	3357672	PtrMemberAccess	s -> s_prefix		3357538	0					
ANR	3357673	Identifier	s		3357538	0					
ANR	3357674	Identifier	s_prefix		3357538	1					
ANR	3357675	IncDec	++		3357538	1					
ANR	3357676	IfStatement	if ( s -> s_prefix == 2 )		3357538	2					
ANR	3357677	Condition	s -> s_prefix == 2	114:7:2485:2500	3357538	0	True				
ANR	3357678	EqualityExpression	s -> s_prefix == 2		3357538	0		==			
ANR	3357679	PtrMemberAccess	s -> s_prefix		3357538	0					
ANR	3357680	Identifier	s		3357538	0					
ANR	3357681	Identifier	s_prefix		3357538	1					
ANR	3357682	PrimaryExpression	2		3357538	1					
ANR	3357683	ExpressionStatement	s -> s_prefix_val <<= 8	115:4:2507:2528	3357538	1	True				
ANR	3357684	AssignmentExpression	s -> s_prefix_val <<= 8		3357538	0		<<=			
ANR	3357685	PtrMemberAccess	s -> s_prefix_val		3357538	0					
ANR	3357686	Identifier	s		3357538	0					
ANR	3357687	Identifier	s_prefix_val		3357538	1					
ANR	3357688	PrimaryExpression	8		3357538	1					
ANR	3357689	IfStatement	if ( s -> s_nopd && in -> in_operand == 0x80 )		3357538	3					
ANR	3357690	Condition	s -> s_nopd && in -> in_operand == 0x80	119:7:2634:2668	3357538	0	True				
ANR	3357691	AndExpression	s -> s_nopd && in -> in_operand == 0x80		3357538	0		&&			
ANR	3357692	PtrMemberAccess	s -> s_nopd		3357538	0					
ANR	3357693	Identifier	s		3357538	0					
ANR	3357694	Identifier	s_nopd		3357538	1					
ANR	3357695	EqualityExpression	in -> in_operand == 0x80		3357538	1		==			
ANR	3357696	PtrMemberAccess	in -> in_operand		3357538	0					
ANR	3357697	Identifier	in		3357538	0					
ANR	3357698	Identifier	in_operand		3357538	1					
ANR	3357699	PrimaryExpression	0x80		3357538	1					
ANR	3357700	ExpressionStatement	"strcpy ( s -> s_nopd -> d_asm , """" )"	120:4:2675:2703	3357538	1	True				
ANR	3357701	CallExpression	"strcpy ( s -> s_nopd -> d_asm , """" )"		3357538	0					
ANR	3357702	Callee	strcpy		3357538	0					
ANR	3357703	Identifier	strcpy		3357538	0					
ANR	3357704	ArgumentList	s -> s_nopd -> d_asm		3357538	1					
ANR	3357705	Argument	s -> s_nopd -> d_asm		3357538	0					
ANR	3357706	PtrMemberAccess	s -> s_nopd -> d_asm		3357538	0					
ANR	3357707	PtrMemberAccess	s -> s_nopd		3357538	0					
ANR	3357708	Identifier	s		3357538	0					
ANR	3357709	Identifier	s_nopd		3357538	1					
ANR	3357710	Identifier	d_asm		3357538	1					
ANR	3357711	Argument	""""""		3357538	1					
ANR	3357712	PrimaryExpression	""""""		3357538	0					
ANR	3357713	ExpressionStatement	s -> s_prefix_val |= in -> in_operand << 8	122:3:2715:2753	3357538	4	True				
ANR	3357714	AssignmentExpression	s -> s_prefix_val |= in -> in_operand << 8		3357538	0		|=			
ANR	3357715	PtrMemberAccess	s -> s_prefix_val		3357538	0					
ANR	3357716	Identifier	s		3357538	0					
ANR	3357717	Identifier	s_prefix_val		3357538	1					
ANR	3357718	ShiftExpression	in -> in_operand << 8		3357538	1		<<			
ANR	3357719	PtrMemberAccess	in -> in_operand		3357538	0					
ANR	3357720	Identifier	in		3357538	0					
ANR	3357721	Identifier	in_operand		3357538	1					
ANR	3357722	PrimaryExpression	8		3357538	1					
ANR	3357723	ExpressionStatement	"strcpy ( d -> d_asm , """" )"	124:3:2759:2779	3357538	5	True				
ANR	3357724	CallExpression	"strcpy ( d -> d_asm , """" )"		3357538	0					
ANR	3357725	Callee	strcpy		3357538	0					
ANR	3357726	Identifier	strcpy		3357538	0					
ANR	3357727	ArgumentList	d -> d_asm		3357538	1					
ANR	3357728	Argument	d -> d_asm		3357538	0					
ANR	3357729	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3357730	Identifier	d		3357538	0					
ANR	3357731	Identifier	d_asm		3357538	1					
ANR	3357732	Argument	""""""		3357538	1					
ANR	3357733	PrimaryExpression	""""""		3357538	0					
ANR	3357734	ReturnStatement	return 1 ;	125:3:2784:2792	3357538	6	True				
ANR	3357735	PrimaryExpression	1		3357538	0					
ANR	3357736	SwitchStatement	switch ( i2u16 ( in ) & 0xf )		3357538	2					
ANR	3357737	Condition	i2u16 ( in ) & 0xf	128:10:2809:2823	3357538	0	True				
ANR	3357738	BitAndExpression	i2u16 ( in ) & 0xf		3357538	0		&			
ANR	3357739	CallExpression	i2u16 ( in )		3357538	0					
ANR	3357740	Callee	i2u16		3357538	0					
ANR	3357741	Identifier	i2u16		3357538	0					
ANR	3357742	ArgumentList	in		3357538	1					
ANR	3357743	Argument	in		3357538	0					
ANR	3357744	Identifier	in		3357538	0					
ANR	3357745	PrimaryExpression	0xf		3357538	1					
ANR	3357746	CompoundStatement		39:27:753:753	3357538	1					
ANR	3357747	Label	case 1 :	129:2:2830:2836	3357538	0	True				
ANR	3357748	ExpressionStatement	"op = ""st"""	130:3:2841:2850	3357538	1	True				
ANR	3357749	AssignmentExpression	"op = ""st"""		3357538	0		=			
ANR	3357750	Identifier	op		3357538	0					
ANR	3357751	PrimaryExpression	"""st"""		3357538	1					
ANR	3357752	ExpressionStatement	"regn = ""FLAGS"""	131:3:2855:2869	3357538	2	True				
ANR	3357753	AssignmentExpression	"regn = ""FLAGS"""		3357538	0		=			
ANR	3357754	Identifier	regn		3357538	0					
ANR	3357755	PrimaryExpression	"""FLAGS"""		3357538	1					
ANR	3357756	BreakStatement	break ;	132:3:2874:2879	3357538	3	True				
ANR	3357757	Label	case 2 :	133:2:2883:2889	3357538	4	True				
ANR	3357758	ExpressionStatement	"op = ""st"""	134:3:2894:2903	3357538	5	True				
ANR	3357759	AssignmentExpression	"op = ""st"""		3357538	0		=			
ANR	3357760	Identifier	op		3357538	0					
ANR	3357761	PrimaryExpression	"""st"""		3357538	1					
ANR	3357762	ExpressionStatement	"regn = ""UX"""	135:3:2908:2919	3357538	6	True				
ANR	3357763	AssignmentExpression	"regn = ""UX"""		3357538	0		=			
ANR	3357764	Identifier	regn		3357538	0					
ANR	3357765	PrimaryExpression	"""UX"""		3357538	1					
ANR	3357766	BreakStatement	break ;	136:3:2924:2929	3357538	7	True				
ANR	3357767	Label	case 3 :	137:2:2933:2939	3357538	8	True				
ANR	3357768	ExpressionStatement	"op = ""st"""	138:3:2944:2953	3357538	9	True				
ANR	3357769	AssignmentExpression	"op = ""st"""		3357538	0		=			
ANR	3357770	Identifier	op		3357538	0					
ANR	3357771	PrimaryExpression	"""st"""		3357538	1					
ANR	3357772	ExpressionStatement	"regn = ""UY"""	139:3:2958:2969	3357538	10	True				
ANR	3357773	AssignmentExpression	"regn = ""UY"""		3357538	0		=			
ANR	3357774	Identifier	regn		3357538	0					
ANR	3357775	PrimaryExpression	"""UY"""		3357538	1					
ANR	3357776	BreakStatement	break ;	140:3:2974:2979	3357538	11	True				
ANR	3357777	Label	case 5 :	141:2:2983:2989	3357538	12	True				
ANR	3357778	ExpressionStatement	"op = ""ld"""	142:3:2994:3003	3357538	13	True				
ANR	3357779	AssignmentExpression	"op = ""ld"""		3357538	0		=			
ANR	3357780	Identifier	op		3357538	0					
ANR	3357781	PrimaryExpression	"""ld"""		3357538	1					
ANR	3357782	ExpressionStatement	"regn = ""FLAGS"""	143:3:3008:3022	3357538	14	True				
ANR	3357783	AssignmentExpression	"regn = ""FLAGS"""		3357538	0		=			
ANR	3357784	Identifier	regn		3357538	0					
ANR	3357785	PrimaryExpression	"""FLAGS"""		3357538	1					
ANR	3357786	BreakStatement	break ;	144:3:3027:3032	3357538	15	True				
ANR	3357787	Label	case 6 :	145:2:3036:3042	3357538	16	True				
ANR	3357788	ExpressionStatement	"op = ""ld"""	146:3:3047:3056	3357538	17	True				
ANR	3357789	AssignmentExpression	"op = ""ld"""		3357538	0		=			
ANR	3357790	Identifier	op		3357538	0					
ANR	3357791	PrimaryExpression	"""ld"""		3357538	1					
ANR	3357792	ExpressionStatement	"regn = ""UX"""	147:3:3061:3072	3357538	18	True				
ANR	3357793	AssignmentExpression	"regn = ""UX"""		3357538	0		=			
ANR	3357794	Identifier	regn		3357538	0					
ANR	3357795	PrimaryExpression	"""UX"""		3357538	1					
ANR	3357796	BreakStatement	break ;	148:3:3077:3082	3357538	19	True				
ANR	3357797	Label	case 7 :	149:2:3086:3092	3357538	20	True				
ANR	3357798	ExpressionStatement	"op = ""ld"""	150:3:3097:3106	3357538	21	True				
ANR	3357799	AssignmentExpression	"op = ""ld"""		3357538	0		=			
ANR	3357800	Identifier	op		3357538	0					
ANR	3357801	PrimaryExpression	"""ld"""		3357538	1					
ANR	3357802	ExpressionStatement	"regn = ""UY"""	151:3:3111:3122	3357538	22	True				
ANR	3357803	AssignmentExpression	"regn = ""UY"""		3357538	0		=			
ANR	3357804	Identifier	regn		3357538	0					
ANR	3357805	PrimaryExpression	"""UY"""		3357538	1					
ANR	3357806	BreakStatement	break ;	152:3:3127:3132	3357538	23	True				
ANR	3357807	Label	case 0xa :	153:2:3136:3144	3357538	24	True				
ANR	3357808	ExpressionStatement	"op = ""st"""	154:3:3149:3158	3357538	25	True				
ANR	3357809	AssignmentExpression	"op = ""st"""		3357538	0		=			
ANR	3357810	Identifier	op		3357538	0					
ANR	3357811	PrimaryExpression	"""st"""		3357538	1					
ANR	3357812	ExpressionStatement	"regn = ""XH"""	155:3:3163:3174	3357538	26	True				
ANR	3357813	AssignmentExpression	"regn = ""XH"""		3357538	0		=			
ANR	3357814	Identifier	regn		3357538	0					
ANR	3357815	PrimaryExpression	"""XH"""		3357538	1					
ANR	3357816	BreakStatement	break ;	156:3:3179:3184	3357538	27	True				
ANR	3357817	Label	case 0xd :	157:2:3188:3196	3357538	28	True				
ANR	3357818	ExpressionStatement	"op = ""rti"""	158:3:3201:3211	3357538	29	True				
ANR	3357819	AssignmentExpression	"op = ""rti"""		3357538	0		=			
ANR	3357820	Identifier	op		3357538	0					
ANR	3357821	PrimaryExpression	"""rti"""		3357538	1					
ANR	3357822	ExpressionStatement	"regn = """""	159:3:3216:3225	3357538	30	True				
ANR	3357823	AssignmentExpression	"regn = """""		3357538	0		=			
ANR	3357824	Identifier	regn		3357538	0					
ANR	3357825	PrimaryExpression	""""""		3357538	1					
ANR	3357826	ExpressionStatement	rti = 1	160:3:3230:3237	3357538	31	True				
ANR	3357827	AssignmentExpression	rti = 1		3357538	0		=			
ANR	3357828	Identifier	rti		3357538	0					
ANR	3357829	PrimaryExpression	1		3357538	1					
ANR	3357830	BreakStatement	break ;	161:3:3242:3247	3357538	32	True				
ANR	3357831	Label	case 0xe :	162:2:3251:3259	3357538	33	True				
ANR	3357832	ExpressionStatement	"op = ""ld"""	163:3:3264:3273	3357538	34	True				
ANR	3357833	AssignmentExpression	"op = ""ld"""		3357538	0		=			
ANR	3357834	Identifier	op		3357538	0					
ANR	3357835	PrimaryExpression	"""ld"""		3357538	1					
ANR	3357836	ExpressionStatement	"regn = ""XH"""	164:3:3278:3289	3357538	35	True				
ANR	3357837	AssignmentExpression	"regn = ""XH"""		3357538	0		=			
ANR	3357838	Identifier	regn		3357538	0					
ANR	3357839	PrimaryExpression	"""XH"""		3357538	1					
ANR	3357840	BreakStatement	break ;	165:3:3294:3299	3357538	36	True				
ANR	3357841	BreakStatement	break ;	167:2:3307:3312	3357538	3	True				
ANR	3357842	Label	case 1 :	169:1:3316:3322	3357538	4	True				
ANR	3357843	ExpressionStatement	"op = ""ld"""	170:2:3326:3335	3357538	5	True				
ANR	3357844	AssignmentExpression	"op = ""ld"""		3357538	0		=			
ANR	3357845	Identifier	op		3357538	0					
ANR	3357846	PrimaryExpression	"""ld"""		3357538	1					
ANR	3357847	ExpressionStatement	reg = 1	171:2:3339:3346	3357538	6	True				
ANR	3357848	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357849	Identifier	reg		3357538	0					
ANR	3357850	PrimaryExpression	1		3357538	1					
ANR	3357851	ExpressionStatement	ptr = 1	172:2:3350:3357	3357538	7	True				
ANR	3357852	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3357853	Identifier	ptr		3357538	0					
ANR	3357854	PrimaryExpression	1		3357538	1					
ANR	3357855	ExpressionStatement	idx = 1	173:2:3361:3368	3357538	8	True				
ANR	3357856	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3357857	Identifier	idx		3357538	0					
ANR	3357858	PrimaryExpression	1		3357538	1					
ANR	3357859	ExpressionStatement	imm = 1	174:2:3372:3379	3357538	9	True				
ANR	3357860	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3357861	Identifier	imm		3357538	0					
ANR	3357862	PrimaryExpression	1		3357538	1					
ANR	3357863	BreakStatement	break ;	175:2:3383:3388	3357538	10	True				
ANR	3357864	Label	case 2 :	176:1:3391:3397	3357538	11	True				
ANR	3357865	IfStatement	if ( in -> in_mode == DATA_MODE_IMMEDIATE )		3357538	12					
ANR	3357866	Condition	in -> in_mode == DATA_MODE_IMMEDIATE	177:6:3405:3438	3357538	0	True				
ANR	3357867	EqualityExpression	in -> in_mode == DATA_MODE_IMMEDIATE		3357538	0		==			
ANR	3357868	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3357869	Identifier	in		3357538	0					
ANR	3357870	Identifier	in_mode		3357538	1					
ANR	3357871	Identifier	DATA_MODE_IMMEDIATE		3357538	1					
ANR	3357872	CompoundStatement		88:42:1368:1368	3357538	1					
ANR	3357873	ExpressionStatement	"op = ""print"""	178:3:3446:3458	3357538	0	True				
ANR	3357874	AssignmentExpression	"op = ""print"""		3357538	0		=			
ANR	3357875	Identifier	op		3357538	0					
ANR	3357876	PrimaryExpression	"""print"""		3357538	1					
ANR	3357877	ExpressionStatement	imm = 1	179:3:3463:3470	3357538	1	True				
ANR	3357878	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3357879	Identifier	imm		3357538	0					
ANR	3357880	PrimaryExpression	1		3357538	1					
ANR	3357881	ExpressionStatement	reg = 1	180:3:3475:3482	3357538	2	True				
ANR	3357882	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357883	Identifier	reg		3357538	0					
ANR	3357884	PrimaryExpression	1		3357538	1					
ANR	3357885	ElseStatement	else		3357538	0					
ANR	3357886	CompoundStatement		92:9:1420:1420	3357538	0					
ANR	3357887	ExpressionStatement	"op = ""st"""	182:3:3498:3507	3357538	0	True				
ANR	3357888	AssignmentExpression	"op = ""st"""		3357538	0		=			
ANR	3357889	Identifier	op		3357538	0					
ANR	3357890	PrimaryExpression	"""st"""		3357538	1					
ANR	3357891	ExpressionStatement	reg = 1	183:3:3512:3519	3357538	1	True				
ANR	3357892	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357893	Identifier	reg		3357538	0					
ANR	3357894	PrimaryExpression	1		3357538	1					
ANR	3357895	ExpressionStatement	ptr = 1	184:3:3524:3531	3357538	2	True				
ANR	3357896	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3357897	Identifier	ptr		3357538	0					
ANR	3357898	PrimaryExpression	1		3357538	1					
ANR	3357899	ExpressionStatement	idx = 1	185:3:3536:3543	3357538	3	True				
ANR	3357900	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3357901	Identifier	idx		3357538	0					
ANR	3357902	PrimaryExpression	1		3357538	1					
ANR	3357903	BreakStatement	break ;	187:2:3551:3556	3357538	13	True				
ANR	3357904	Label	case 3 :	188:1:3559:3565	3357538	14	True				
ANR	3357905	ExpressionStatement	"op = ""add"""	189:2:3569:3579	3357538	15	True				
ANR	3357906	AssignmentExpression	"op = ""add"""		3357538	0		=			
ANR	3357907	Identifier	op		3357538	0					
ANR	3357908	PrimaryExpression	"""add"""		3357538	1					
ANR	3357909	ExpressionStatement	reg = 1	190:2:3583:3590	3357538	16	True				
ANR	3357910	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357911	Identifier	reg		3357538	0					
ANR	3357912	PrimaryExpression	1		3357538	1					
ANR	3357913	ExpressionStatement	ptr = 1	191:2:3594:3601	3357538	17	True				
ANR	3357914	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3357915	Identifier	ptr		3357538	0					
ANR	3357916	PrimaryExpression	1		3357538	1					
ANR	3357917	ExpressionStatement	idx = 1	192:2:3605:3612	3357538	18	True				
ANR	3357918	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3357919	Identifier	idx		3357538	0					
ANR	3357920	PrimaryExpression	1		3357538	1					
ANR	3357921	ExpressionStatement	imm = 1	193:2:3616:3623	3357538	19	True				
ANR	3357922	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3357923	Identifier	imm		3357538	0					
ANR	3357924	PrimaryExpression	1		3357538	1					
ANR	3357925	BreakStatement	break ;	194:2:3627:3632	3357538	20	True				
ANR	3357926	Label	case 4 :	195:1:3635:3641	3357538	21	True				
ANR	3357927	ExpressionStatement	"op = ""addc"""	196:2:3645:3656	3357538	22	True				
ANR	3357928	AssignmentExpression	"op = ""addc"""		3357538	0		=			
ANR	3357929	Identifier	op		3357538	0					
ANR	3357930	PrimaryExpression	"""addc"""		3357538	1					
ANR	3357931	ExpressionStatement	reg = 1	197:2:3660:3667	3357538	23	True				
ANR	3357932	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357933	Identifier	reg		3357538	0					
ANR	3357934	PrimaryExpression	1		3357538	1					
ANR	3357935	ExpressionStatement	ptr = 1	198:2:3671:3678	3357538	24	True				
ANR	3357936	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3357937	Identifier	ptr		3357538	0					
ANR	3357938	PrimaryExpression	1		3357538	1					
ANR	3357939	ExpressionStatement	idx = 1	199:2:3682:3689	3357538	25	True				
ANR	3357940	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3357941	Identifier	idx		3357538	0					
ANR	3357942	PrimaryExpression	1		3357538	1					
ANR	3357943	ExpressionStatement	imm = 1	200:2:3693:3700	3357538	26	True				
ANR	3357944	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3357945	Identifier	imm		3357538	0					
ANR	3357946	PrimaryExpression	1		3357538	1					
ANR	3357947	BreakStatement	break ;	201:2:3704:3709	3357538	27	True				
ANR	3357948	Label	case 5 :	202:1:3712:3718	3357538	28	True				
ANR	3357949	ExpressionStatement	"op = ""sub"""	203:2:3722:3732	3357538	29	True				
ANR	3357950	AssignmentExpression	"op = ""sub"""		3357538	0		=			
ANR	3357951	Identifier	op		3357538	0					
ANR	3357952	PrimaryExpression	"""sub"""		3357538	1					
ANR	3357953	ExpressionStatement	reg = 1	204:2:3736:3743	3357538	30	True				
ANR	3357954	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357955	Identifier	reg		3357538	0					
ANR	3357956	PrimaryExpression	1		3357538	1					
ANR	3357957	ExpressionStatement	ptr = 1	205:2:3747:3754	3357538	31	True				
ANR	3357958	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3357959	Identifier	ptr		3357538	0					
ANR	3357960	PrimaryExpression	1		3357538	1					
ANR	3357961	ExpressionStatement	idx = 1	206:2:3758:3765	3357538	32	True				
ANR	3357962	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3357963	Identifier	idx		3357538	0					
ANR	3357964	PrimaryExpression	1		3357538	1					
ANR	3357965	ExpressionStatement	imm = 1	207:2:3769:3776	3357538	33	True				
ANR	3357966	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3357967	Identifier	imm		3357538	0					
ANR	3357968	PrimaryExpression	1		3357538	1					
ANR	3357969	BreakStatement	break ;	208:2:3780:3785	3357538	34	True				
ANR	3357970	Label	case 6 :	209:1:3788:3794	3357538	35	True				
ANR	3357971	ExpressionStatement	"op = ""subc"""	210:2:3798:3809	3357538	36	True				
ANR	3357972	AssignmentExpression	"op = ""subc"""		3357538	0		=			
ANR	3357973	Identifier	op		3357538	0					
ANR	3357974	PrimaryExpression	"""subc"""		3357538	1					
ANR	3357975	ExpressionStatement	reg = 1	211:2:3813:3820	3357538	37	True				
ANR	3357976	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357977	Identifier	reg		3357538	0					
ANR	3357978	PrimaryExpression	1		3357538	1					
ANR	3357979	ExpressionStatement	ptr = 1	212:2:3824:3831	3357538	38	True				
ANR	3357980	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3357981	Identifier	ptr		3357538	0					
ANR	3357982	PrimaryExpression	1		3357538	1					
ANR	3357983	ExpressionStatement	idx = 1	213:2:3835:3842	3357538	39	True				
ANR	3357984	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3357985	Identifier	idx		3357538	0					
ANR	3357986	PrimaryExpression	1		3357538	1					
ANR	3357987	ExpressionStatement	imm = 1	214:2:3846:3853	3357538	40	True				
ANR	3357988	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3357989	Identifier	imm		3357538	0					
ANR	3357990	PrimaryExpression	1		3357538	1					
ANR	3357991	BreakStatement	break ;	215:2:3857:3862	3357538	41	True				
ANR	3357992	Label	case 7 :	216:1:3865:3871	3357538	42	True				
ANR	3357993	ExpressionStatement	"op = ""nadd"""	217:2:3875:3886	3357538	43	True				
ANR	3357994	AssignmentExpression	"op = ""nadd"""		3357538	0		=			
ANR	3357995	Identifier	op		3357538	0					
ANR	3357996	PrimaryExpression	"""nadd"""		3357538	1					
ANR	3357997	ExpressionStatement	reg = 1	218:2:3890:3897	3357538	44	True				
ANR	3357998	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3357999	Identifier	reg		3357538	0					
ANR	3358000	PrimaryExpression	1		3357538	1					
ANR	3358001	ExpressionStatement	ptr = 1	219:2:3901:3908	3357538	45	True				
ANR	3358002	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358003	Identifier	ptr		3357538	0					
ANR	3358004	PrimaryExpression	1		3357538	1					
ANR	3358005	ExpressionStatement	idx = 1	220:2:3912:3919	3357538	46	True				
ANR	3358006	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358007	Identifier	idx		3357538	0					
ANR	3358008	PrimaryExpression	1		3357538	1					
ANR	3358009	ExpressionStatement	imm = 1	221:2:3923:3930	3357538	47	True				
ANR	3358010	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358011	Identifier	imm		3357538	0					
ANR	3358012	PrimaryExpression	1		3357538	1					
ANR	3358013	BreakStatement	break ;	222:2:3934:3939	3357538	48	True				
ANR	3358014	Label	case 8 :	223:1:3942:3948	3357538	49	True				
ANR	3358015	ExpressionStatement	"op = ""cmp"""	224:2:3952:3962	3357538	50	True				
ANR	3358016	AssignmentExpression	"op = ""cmp"""		3357538	0		=			
ANR	3358017	Identifier	op		3357538	0					
ANR	3358018	PrimaryExpression	"""cmp"""		3357538	1					
ANR	3358019	ExpressionStatement	reg = 1	225:2:3966:3973	3357538	51	True				
ANR	3358020	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3358021	Identifier	reg		3357538	0					
ANR	3358022	PrimaryExpression	1		3357538	1					
ANR	3358023	ExpressionStatement	ptr = 1	226:2:3977:3984	3357538	52	True				
ANR	3358024	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358025	Identifier	ptr		3357538	0					
ANR	3358026	PrimaryExpression	1		3357538	1					
ANR	3358027	ExpressionStatement	idx = 1	227:2:3988:3995	3357538	53	True				
ANR	3358028	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358029	Identifier	idx		3357538	0					
ANR	3358030	PrimaryExpression	1		3357538	1					
ANR	3358031	ExpressionStatement	imm = 1	228:2:3999:4006	3357538	54	True				
ANR	3358032	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358033	Identifier	imm		3357538	0					
ANR	3358034	PrimaryExpression	1		3357538	1					
ANR	3358035	BreakStatement	break ;	229:2:4010:4015	3357538	55	True				
ANR	3358036	Label	case 0x9 :	230:1:4018:4026	3357538	56	True				
ANR	3358037	SwitchStatement	switch ( in -> in_reg )		3357538	57					
ANR	3358038	Condition	in -> in_reg	231:10:4038:4047	3357538	0	True				
ANR	3358039	PtrMemberAccess	in -> in_reg		3357538	0					
ANR	3358040	Identifier	in		3357538	0					
ANR	3358041	Identifier	in_reg		3357538	1					
ANR	3358042	CompoundStatement		142:22:1977:1977	3357538	1					
ANR	3358043	Label	case 0 :	232:2:4054:4060	3357538	0	True				
ANR	3358044	IfStatement	if ( s -> s_u )		3357538	1					
ANR	3358045	Condition	s -> s_u	233:7:4069:4074	3357538	0	True				
ANR	3358046	PtrMemberAccess	s -> s_u		3357538	0					
ANR	3358047	Identifier	s		3357538	0					
ANR	3358048	Identifier	s_u		3357538	1					
ANR	3358049	ExpressionStatement	"op = ""umult"""	233:15:4077:4089	3357538	1	True				
ANR	3358050	AssignmentExpression	"op = ""umult"""		3357538	0		=			
ANR	3358051	Identifier	op		3357538	0					
ANR	3358052	PrimaryExpression	"""umult"""		3357538	1					
ANR	3358053	ElseStatement	else		3357538	0					
ANR	3358054	ExpressionStatement	"op = ""smult"""	234:8:4099:4111	3357538	0	True				
ANR	3358055	AssignmentExpression	"op = ""smult"""		3357538	0		=			
ANR	3358056	Identifier	op		3357538	0					
ANR	3358057	PrimaryExpression	"""smult"""		3357538	1					
ANR	3358058	ExpressionStatement	imm = 1	235:3:4116:4123	3357538	2	True				
ANR	3358059	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358060	Identifier	imm		3357538	0					
ANR	3358061	PrimaryExpression	1		3357538	1					
ANR	3358062	ExpressionStatement	s -> s_u = 0	236:3:4128:4138	3357538	3	True				
ANR	3358063	AssignmentExpression	s -> s_u = 0		3357538	0		=			
ANR	3358064	PtrMemberAccess	s -> s_u		3357538	0					
ANR	3358065	Identifier	s		3357538	0					
ANR	3358066	Identifier	s_u		3357538	1					
ANR	3358067	PrimaryExpression	0		3357538	1					
ANR	3358068	ExpressionStatement	idx = 1	237:3:4143:4150	3357538	4	True				
ANR	3358069	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358070	Identifier	idx		3357538	0					
ANR	3358071	PrimaryExpression	1		3357538	1					
ANR	3358072	ExpressionStatement	ptr = 1	238:3:4155:4162	3357538	5	True				
ANR	3358073	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358074	Identifier	ptr		3357538	0					
ANR	3358075	PrimaryExpression	1		3357538	1					
ANR	3358076	BreakStatement	break ;	239:3:4167:4172	3357538	6	True				
ANR	3358077	Label	case 1 :	240:2:4176:4182	3357538	7	True				
ANR	3358078	IfStatement	if ( s -> s_u )		3357538	8					
ANR	3358079	Condition	s -> s_u	241:7:4191:4196	3357538	0	True				
ANR	3358080	PtrMemberAccess	s -> s_u		3357538	0					
ANR	3358081	Identifier	s		3357538	0					
ANR	3358082	Identifier	s_u		3357538	1					
ANR	3358083	ExpressionStatement	"op = ""udiv"""	241:15:4199:4210	3357538	1	True				
ANR	3358084	AssignmentExpression	"op = ""udiv"""		3357538	0		=			
ANR	3358085	Identifier	op		3357538	0					
ANR	3358086	PrimaryExpression	"""udiv"""		3357538	1					
ANR	3358087	ElseStatement	else		3357538	0					
ANR	3358088	ExpressionStatement	"op = ""sdiv"""	242:8:4220:4231	3357538	0	True				
ANR	3358089	AssignmentExpression	"op = ""sdiv"""		3357538	0		=			
ANR	3358090	Identifier	op		3357538	0					
ANR	3358091	PrimaryExpression	"""sdiv"""		3357538	1					
ANR	3358092	ExpressionStatement	s -> s_u = 0	243:3:4236:4246	3357538	9	True				
ANR	3358093	AssignmentExpression	s -> s_u = 0		3357538	0		=			
ANR	3358094	PtrMemberAccess	s -> s_u		3357538	0					
ANR	3358095	Identifier	s		3357538	0					
ANR	3358096	Identifier	s_u		3357538	1					
ANR	3358097	PrimaryExpression	0		3357538	1					
ANR	3358098	ExpressionStatement	imm = 1	244:3:4251:4258	3357538	10	True				
ANR	3358099	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358100	Identifier	imm		3357538	0					
ANR	3358101	PrimaryExpression	1		3357538	1					
ANR	3358102	BreakStatement	break ;	245:3:4263:4268	3357538	11	True				
ANR	3358103	Label	case 2 :	246:2:4272:4278	3357538	12	True				
ANR	3358104	ExpressionStatement	"op = ""tst"""	247:3:4283:4293	3357538	13	True				
ANR	3358105	AssignmentExpression	"op = ""tst"""		3357538	0		=			
ANR	3358106	Identifier	op		3357538	0					
ANR	3358107	PrimaryExpression	"""tst"""		3357538	1					
ANR	3358108	ExpressionStatement	imm = 1	248:3:4298:4305	3357538	14	True				
ANR	3358109	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358110	Identifier	imm		3357538	0					
ANR	3358111	PrimaryExpression	1		3357538	1					
ANR	3358112	ExpressionStatement	ptr = 1	249:3:4310:4317	3357538	15	True				
ANR	3358113	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358114	Identifier	ptr		3357538	0					
ANR	3358115	PrimaryExpression	1		3357538	1					
ANR	3358116	ExpressionStatement	idx = 1	250:3:4322:4329	3357538	16	True				
ANR	3358117	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358118	Identifier	idx		3357538	0					
ANR	3358119	PrimaryExpression	1		3357538	1					
ANR	3358120	BreakStatement	break ;	251:3:4334:4339	3357538	17	True				
ANR	3358121	Label	case 3 :	252:2:4343:4349	3357538	18	True				
ANR	3358122	ExpressionStatement	branch = 1	253:3:4354:4364	3357538	19	True				
ANR	3358123	AssignmentExpression	branch = 1		3357538	0		=			
ANR	3358124	Identifier	branch		3357538	0					
ANR	3358125	PrimaryExpression	1		3357538	1					
ANR	3358126	ExpressionStatement	"op = ""bsr"""	254:3:4369:4379	3357538	20	True				
ANR	3358127	AssignmentExpression	"op = ""bsr"""		3357538	0		=			
ANR	3358128	Identifier	op		3357538	0					
ANR	3358129	PrimaryExpression	"""bsr"""		3357538	1					
ANR	3358130	ExpressionStatement	ptr = 1	255:3:4384:4391	3357538	21	True				
ANR	3358131	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358132	Identifier	ptr		3357538	0					
ANR	3358133	PrimaryExpression	1		3357538	1					
ANR	3358134	ExpressionStatement	idx = 1	256:3:4396:4403	3357538	22	True				
ANR	3358135	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358136	Identifier	idx		3357538	0					
ANR	3358137	PrimaryExpression	1		3357538	1					
ANR	3358138	IfStatement	if ( in -> in_mode == ADDR_MODE_RELATIVE )		3357538	23					
ANR	3358139	Condition	in -> in_mode == ADDR_MODE_RELATIVE	257:7:4412:4444	3357538	0	True				
ANR	3358140	EqualityExpression	in -> in_mode == ADDR_MODE_RELATIVE		3357538	0		==			
ANR	3358141	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358142	Identifier	in		3357538	0					
ANR	3358143	Identifier	in_mode		3357538	1					
ANR	3358144	Identifier	ADDR_MODE_RELATIVE		3357538	1					
ANR	3358145	ExpressionStatement	rel = 1	258:4:4451:4458	3357538	1	True				
ANR	3358146	AssignmentExpression	rel = 1		3357538	0		=			
ANR	3358147	Identifier	rel		3357538	0					
ANR	3358148	PrimaryExpression	1		3357538	1					
ANR	3358149	BreakStatement	break ;	259:3:4463:4468	3357538	24	True				
ANR	3358150	BreakStatement	break ;	261:2:4476:4481	3357538	58	True				
ANR	3358151	Label	case 0xa :	262:1:4484:4492	3357538	59	True				
ANR	3358152	SwitchStatement	switch ( in -> in_reg )		3357538	60					
ANR	3358153	Condition	in -> in_reg	263:10:4504:4513	3357538	0	True				
ANR	3358154	PtrMemberAccess	in -> in_reg		3357538	0					
ANR	3358155	Identifier	in		3357538	0					
ANR	3358156	Identifier	in_reg		3357538	1					
ANR	3358157	CompoundStatement		174:22:2443:2443	3357538	1					
ANR	3358158	Label	case 0 :	264:2:4520:4526	3357538	0	True				
ANR	3358159	ExpressionStatement	"op = ""asl"""	265:3:4531:4541	3357538	1	True				
ANR	3358160	AssignmentExpression	"op = ""asl"""		3357538	0		=			
ANR	3358161	Identifier	op		3357538	0					
ANR	3358162	PrimaryExpression	"""asl"""		3357538	1					
ANR	3358163	ExpressionStatement	imm = 1	266:3:4546:4553	3357538	2	True				
ANR	3358164	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358165	Identifier	imm		3357538	0					
ANR	3358166	PrimaryExpression	1		3357538	1					
ANR	3358167	BreakStatement	break ;	267:3:4558:4563	3357538	3	True				
ANR	3358168	Label	case 1 :	268:2:4567:4573	3357538	4	True				
ANR	3358169	IfStatement	if ( s -> s_u )		3357538	5					
ANR	3358170	Condition	s -> s_u	269:7:4582:4587	3357538	0	True				
ANR	3358171	PtrMemberAccess	s -> s_u		3357538	0					
ANR	3358172	Identifier	s		3357538	0					
ANR	3358173	Identifier	s_u		3357538	1					
ANR	3358174	ExpressionStatement	"op = ""lsr"""	269:15:4590:4600	3357538	1	True				
ANR	3358175	AssignmentExpression	"op = ""lsr"""		3357538	0		=			
ANR	3358176	Identifier	op		3357538	0					
ANR	3358177	PrimaryExpression	"""lsr"""		3357538	1					
ANR	3358178	ElseStatement	else		3357538	0					
ANR	3358179	ExpressionStatement	"op = ""asr"""	270:8:4610:4620	3357538	0	True				
ANR	3358180	AssignmentExpression	"op = ""asr"""		3357538	0		=			
ANR	3358181	Identifier	op		3357538	0					
ANR	3358182	PrimaryExpression	"""asr"""		3357538	1					
ANR	3358183	ExpressionStatement	s -> s_u = 0	271:3:4625:4635	3357538	6	True				
ANR	3358184	AssignmentExpression	s -> s_u = 0		3357538	0		=			
ANR	3358185	PtrMemberAccess	s -> s_u		3357538	0					
ANR	3358186	Identifier	s		3357538	0					
ANR	3358187	Identifier	s_u		3357538	1					
ANR	3358188	PrimaryExpression	0		3357538	1					
ANR	3358189	ExpressionStatement	imm = 1	272:3:4640:4647	3357538	7	True				
ANR	3358190	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358191	Identifier	imm		3357538	0					
ANR	3358192	PrimaryExpression	1		3357538	1					
ANR	3358193	ExpressionStatement	idx = 1	273:3:4652:4659	3357538	8	True				
ANR	3358194	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358195	Identifier	idx		3357538	0					
ANR	3358196	PrimaryExpression	1		3357538	1					
ANR	3358197	ExpressionStatement	ptr = 1	274:3:4664:4671	3357538	9	True				
ANR	3358198	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358199	Identifier	ptr		3357538	0					
ANR	3358200	PrimaryExpression	1		3357538	1					
ANR	3358201	BreakStatement	break ;	275:3:4676:4681	3357538	10	True				
ANR	3358202	Label	case 2 :	276:2:4685:4691	3357538	11	True				
ANR	3358203	ExpressionStatement	"op = ""rol"""	277:3:4696:4706	3357538	12	True				
ANR	3358204	AssignmentExpression	"op = ""rol"""		3357538	0		=			
ANR	3358205	Identifier	op		3357538	0					
ANR	3358206	PrimaryExpression	"""rol"""		3357538	1					
ANR	3358207	ExpressionStatement	imm = 1	278:3:4711:4718	3357538	13	True				
ANR	3358208	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358209	Identifier	imm		3357538	0					
ANR	3358210	PrimaryExpression	1		3357538	1					
ANR	3358211	BreakStatement	break ;	279:3:4723:4728	3357538	14	True				
ANR	3358212	Label	case 3 :	280:2:4732:4738	3357538	15	True				
ANR	3358213	ExpressionStatement	"op = ""ror"""	281:3:4743:4753	3357538	16	True				
ANR	3358214	AssignmentExpression	"op = ""ror"""		3357538	0		=			
ANR	3358215	Identifier	op		3357538	0					
ANR	3358216	PrimaryExpression	"""ror"""		3357538	1					
ANR	3358217	ExpressionStatement	imm = 1	282:3:4758:4765	3357538	17	True				
ANR	3358218	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358219	Identifier	imm		3357538	0					
ANR	3358220	PrimaryExpression	1		3357538	1					
ANR	3358221	BreakStatement	break ;	283:3:4770:4775	3357538	18	True				
ANR	3358222	BreakStatement	break ;	285:2:4783:4788	3357538	61	True				
ANR	3358223	Label	case 0xb :	287:1:4792:4800	3357538	62	True				
ANR	3358224	ExpressionStatement	"op = ""or"""	288:2:4804:4813	3357538	63	True				
ANR	3358225	AssignmentExpression	"op = ""or"""		3357538	0		=			
ANR	3358226	Identifier	op		3357538	0					
ANR	3358227	PrimaryExpression	"""or"""		3357538	1					
ANR	3358228	ExpressionStatement	reg = 1	289:2:4817:4824	3357538	64	True				
ANR	3358229	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3358230	Identifier	reg		3357538	0					
ANR	3358231	PrimaryExpression	1		3357538	1					
ANR	3358232	ExpressionStatement	ptr = 1	290:2:4828:4835	3357538	65	True				
ANR	3358233	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358234	Identifier	ptr		3357538	0					
ANR	3358235	PrimaryExpression	1		3357538	1					
ANR	3358236	ExpressionStatement	idx = 1	291:2:4839:4846	3357538	66	True				
ANR	3358237	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358238	Identifier	idx		3357538	0					
ANR	3358239	PrimaryExpression	1		3357538	1					
ANR	3358240	ExpressionStatement	imm = 1	292:2:4850:4857	3357538	67	True				
ANR	3358241	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358242	Identifier	imm		3357538	0					
ANR	3358243	PrimaryExpression	1		3357538	1					
ANR	3358244	BreakStatement	break ;	293:2:4861:4866	3357538	68	True				
ANR	3358245	Label	case 0xc :	294:1:4869:4877	3357538	69	True				
ANR	3358246	ExpressionStatement	"op = ""and"""	295:2:4881:4891	3357538	70	True				
ANR	3358247	AssignmentExpression	"op = ""and"""		3357538	0		=			
ANR	3358248	Identifier	op		3357538	0					
ANR	3358249	PrimaryExpression	"""and"""		3357538	1					
ANR	3358250	ExpressionStatement	reg = 1	296:2:4895:4902	3357538	71	True				
ANR	3358251	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3358252	Identifier	reg		3357538	0					
ANR	3358253	PrimaryExpression	1		3357538	1					
ANR	3358254	ExpressionStatement	ptr = 1	297:2:4906:4913	3357538	72	True				
ANR	3358255	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358256	Identifier	ptr		3357538	0					
ANR	3358257	PrimaryExpression	1		3357538	1					
ANR	3358258	ExpressionStatement	idx = 1	298:2:4917:4924	3357538	73	True				
ANR	3358259	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358260	Identifier	idx		3357538	0					
ANR	3358261	PrimaryExpression	1		3357538	1					
ANR	3358262	ExpressionStatement	imm = 1	299:2:4928:4935	3357538	74	True				
ANR	3358263	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358264	Identifier	imm		3357538	0					
ANR	3358265	PrimaryExpression	1		3357538	1					
ANR	3358266	BreakStatement	break ;	300:2:4939:4944	3357538	75	True				
ANR	3358267	Label	case 0xd :	301:1:4947:4955	3357538	76	True				
ANR	3358268	ExpressionStatement	"op = ""xor"""	302:2:4959:4969	3357538	77	True				
ANR	3358269	AssignmentExpression	"op = ""xor"""		3357538	0		=			
ANR	3358270	Identifier	op		3357538	0					
ANR	3358271	PrimaryExpression	"""xor"""		3357538	1					
ANR	3358272	ExpressionStatement	reg = 1	303:2:4973:4980	3357538	78	True				
ANR	3358273	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3358274	Identifier	reg		3357538	0					
ANR	3358275	PrimaryExpression	1		3357538	1					
ANR	3358276	ExpressionStatement	ptr = 1	304:2:4984:4991	3357538	79	True				
ANR	3358277	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358278	Identifier	ptr		3357538	0					
ANR	3358279	PrimaryExpression	1		3357538	1					
ANR	3358280	ExpressionStatement	idx = 1	305:2:4995:5002	3357538	80	True				
ANR	3358281	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358282	Identifier	idx		3357538	0					
ANR	3358283	PrimaryExpression	1		3357538	1					
ANR	3358284	ExpressionStatement	imm = 1	306:2:5006:5013	3357538	81	True				
ANR	3358285	AssignmentExpression	imm = 1		3357538	0		=			
ANR	3358286	Identifier	imm		3357538	0					
ANR	3358287	PrimaryExpression	1		3357538	1					
ANR	3358288	BreakStatement	break ;	307:2:5017:5022	3357538	82	True				
ANR	3358289	Label	case 0xe :	308:1:5025:5033	3357538	83	True				
ANR	3358290	ExpressionStatement	branch = 1	309:2:5037:5047	3357538	84	True				
ANR	3358291	AssignmentExpression	branch = 1		3357538	0		=			
ANR	3358292	Identifier	branch		3357538	0					
ANR	3358293	PrimaryExpression	1		3357538	1					
ANR	3358294	IfStatement	if ( in -> in_mode == ADDR_MODE_RELATIVE )		3357538	85					
ANR	3358295	Condition	in -> in_mode == ADDR_MODE_RELATIVE	310:6:5055:5087	3357538	0	True				
ANR	3358296	EqualityExpression	in -> in_mode == ADDR_MODE_RELATIVE		3357538	0		==			
ANR	3358297	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358298	Identifier	in		3357538	0					
ANR	3358299	Identifier	in_mode		3357538	1					
ANR	3358300	Identifier	ADDR_MODE_RELATIVE		3357538	1					
ANR	3358301	ExpressionStatement	rel = 1	311:3:5093:5100	3357538	1	True				
ANR	3358302	AssignmentExpression	rel = 1		3357538	0		=			
ANR	3358303	Identifier	rel		3357538	0					
ANR	3358304	PrimaryExpression	1		3357538	1					
ANR	3358305	SwitchStatement	switch ( in -> in_reg )		3357538	86					
ANR	3358306	Condition	in -> in_reg	312:10:5112:5121	3357538	0	True				
ANR	3358307	PtrMemberAccess	in -> in_reg		3357538	0					
ANR	3358308	Identifier	in		3357538	0					
ANR	3358309	Identifier	in_reg		3357538	1					
ANR	3358310	CompoundStatement		223:22:3051:3051	3357538	1					
ANR	3358311	Label	case 0 :	313:2:5128:5134	3357538	0	True				
ANR	3358312	ExpressionStatement	"op = ""bra"""	314:3:5139:5149	3357538	1	True				
ANR	3358313	AssignmentExpression	"op = ""bra"""		3357538	0		=			
ANR	3358314	Identifier	op		3357538	0					
ANR	3358315	PrimaryExpression	"""bra"""		3357538	1					
ANR	3358316	ExpressionStatement	ptr = 1	315:3:5154:5161	3357538	2	True				
ANR	3358317	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358318	Identifier	ptr		3357538	0					
ANR	3358319	PrimaryExpression	1		3357538	1					
ANR	3358320	ExpressionStatement	idx = 1	316:3:5166:5173	3357538	3	True				
ANR	3358321	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358322	Identifier	idx		3357538	0					
ANR	3358323	PrimaryExpression	1		3357538	1					
ANR	3358324	IfStatement	if ( s -> s_nopd )		3357538	4					
ANR	3358325	Condition	s -> s_nopd	318:7:5188:5196	3357538	0	True				
ANR	3358326	PtrMemberAccess	s -> s_nopd		3357538	0					
ANR	3358327	Identifier	s		3357538	0					
ANR	3358328	Identifier	s_nopd		3357538	1					
ANR	3358329	CompoundStatement		229:18:3126:3126	3357538	1					
ANR	3358330	ExpressionStatement	"op = ""bra2"""	319:4:5205:5216	3357538	0	True				
ANR	3358331	AssignmentExpression	"op = ""bra2"""		3357538	0		=			
ANR	3358332	Identifier	op		3357538	0					
ANR	3358333	PrimaryExpression	"""bra2"""		3357538	1					
ANR	3358334	ExpressionStatement	"strcpy ( s -> s_nopd -> d_asm , """" )"	320:4:5250:5278	3357538	1	True				
ANR	3358335	CallExpression	"strcpy ( s -> s_nopd -> d_asm , """" )"		3357538	0					
ANR	3358336	Callee	strcpy		3357538	0					
ANR	3358337	Identifier	strcpy		3357538	0					
ANR	3358338	ArgumentList	s -> s_nopd -> d_asm		3357538	1					
ANR	3358339	Argument	s -> s_nopd -> d_asm		3357538	0					
ANR	3358340	PtrMemberAccess	s -> s_nopd -> d_asm		3357538	0					
ANR	3358341	PtrMemberAccess	s -> s_nopd		3357538	0					
ANR	3358342	Identifier	s		3357538	0					
ANR	3358343	Identifier	s_nopd		3357538	1					
ANR	3358344	Identifier	d_asm		3357538	1					
ANR	3358345	Argument	""""""		3357538	1					
ANR	3358346	PrimaryExpression	""""""		3357538	0					
ANR	3358347	BreakStatement	break ;	323:3:5295:5300	3357538	5	True				
ANR	3358348	Label	case 1 :	325:2:5305:5311	3357538	6	True				
ANR	3358349	ExpressionStatement	"op = ""blt"""	326:3:5316:5326	3357538	7	True				
ANR	3358350	AssignmentExpression	"op = ""blt"""		3357538	0		=			
ANR	3358351	Identifier	op		3357538	0					
ANR	3358352	PrimaryExpression	"""blt"""		3357538	1					
ANR	3358353	BreakStatement	break ;	327:3:5343:5348	3357538	8	True				
ANR	3358354	Label	case 2 :	328:2:5352:5358	3357538	9	True				
ANR	3358355	ExpressionStatement	"op = ""bpl"""	329:3:5363:5373	3357538	10	True				
ANR	3358356	AssignmentExpression	"op = ""bpl"""		3357538	0		=			
ANR	3358357	Identifier	op		3357538	0					
ANR	3358358	PrimaryExpression	"""bpl"""		3357538	1					
ANR	3358359	BreakStatement	break ;	330:3:5378:5383	3357538	11	True				
ANR	3358360	Label	case 3 :	331:2:5387:5393	3357538	12	True				
ANR	3358361	ExpressionStatement	"op = ""bmi"""	332:3:5398:5408	3357538	13	True				
ANR	3358362	AssignmentExpression	"op = ""bmi"""		3357538	0		=			
ANR	3358363	Identifier	op		3357538	0					
ANR	3358364	PrimaryExpression	"""bmi"""		3357538	1					
ANR	3358365	BreakStatement	break ;	333:3:5413:5418	3357538	14	True				
ANR	3358366	BreakStatement	break ;	335:2:5426:5431	3357538	87	True				
ANR	3358367	Label	case 0xf :	336:1:5434:5442	3357538	88	True				
ANR	3358368	ExpressionStatement	branch = 1	337:2:5446:5456	3357538	89	True				
ANR	3358369	AssignmentExpression	branch = 1		3357538	0		=			
ANR	3358370	Identifier	branch		3357538	0					
ANR	3358371	PrimaryExpression	1		3357538	1					
ANR	3358372	IfStatement	if ( in -> in_mode == ADDR_MODE_RELATIVE )		3357538	90					
ANR	3358373	Condition	in -> in_mode == ADDR_MODE_RELATIVE	338:6:5464:5496	3357538	0	True				
ANR	3358374	EqualityExpression	in -> in_mode == ADDR_MODE_RELATIVE		3357538	0		==			
ANR	3358375	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358376	Identifier	in		3357538	0					
ANR	3358377	Identifier	in_mode		3357538	1					
ANR	3358378	Identifier	ADDR_MODE_RELATIVE		3357538	1					
ANR	3358379	ExpressionStatement	rel = 1	339:3:5502:5509	3357538	1	True				
ANR	3358380	AssignmentExpression	rel = 1		3357538	0		=			
ANR	3358381	Identifier	rel		3357538	0					
ANR	3358382	PrimaryExpression	1		3357538	1					
ANR	3358383	SwitchStatement	switch ( in -> in_reg )		3357538	91					
ANR	3358384	Condition	in -> in_reg	340:10:5521:5530	3357538	0	True				
ANR	3358385	PtrMemberAccess	in -> in_reg		3357538	0					
ANR	3358386	Identifier	in		3357538	0					
ANR	3358387	Identifier	in_reg		3357538	1					
ANR	3358388	CompoundStatement		251:22:3460:3460	3357538	1					
ANR	3358389	Label	case 0 :	341:2:5537:5543	3357538	0	True				
ANR	3358390	ExpressionStatement	"op = ""bne"""	341:10:5545:5555	3357538	1	True				
ANR	3358391	AssignmentExpression	"op = ""bne"""		3357538	0		=			
ANR	3358392	Identifier	op		3357538	0					
ANR	3358393	PrimaryExpression	"""bne"""		3357538	1					
ANR	3358394	BreakStatement	break ;	341:22:5557:5562	3357538	2	True				
ANR	3358395	Label	case 1 :	342:2:5566:5572	3357538	3	True				
ANR	3358396	ExpressionStatement	"op = ""beq"""	342:10:5574:5584	3357538	4	True				
ANR	3358397	AssignmentExpression	"op = ""beq"""		3357538	0		=			
ANR	3358398	Identifier	op		3357538	0					
ANR	3358399	PrimaryExpression	"""beq"""		3357538	1					
ANR	3358400	BreakStatement	break ;	342:22:5586:5591	3357538	5	True				
ANR	3358401	Label	case 2 :	343:2:5595:5601	3357538	6	True				
ANR	3358402	ExpressionStatement	"op = ""bcc"""	343:10:5603:5613	3357538	7	True				
ANR	3358403	AssignmentExpression	"op = ""bcc"""		3357538	0		=			
ANR	3358404	Identifier	op		3357538	0					
ANR	3358405	PrimaryExpression	"""bcc"""		3357538	1					
ANR	3358406	BreakStatement	break ;	343:22:5615:5620	3357538	8	True				
ANR	3358407	Label	case 3 :	344:2:5624:5630	3357538	9	True				
ANR	3358408	ExpressionStatement	"op = ""bcs"""	344:10:5632:5642	3357538	10	True				
ANR	3358409	AssignmentExpression	"op = ""bcs"""		3357538	0		=			
ANR	3358410	Identifier	op		3357538	0					
ANR	3358411	PrimaryExpression	"""bcs"""		3357538	1					
ANR	3358412	BreakStatement	break ;	344:22:5644:5649	3357538	11	True				
ANR	3358413	BreakStatement	break ;	346:2:5657:5662	3357538	92	True				
ANR	3358414	IfStatement	if ( ! op )		3357538	15					
ANR	3358415	Condition	! op	349:5:5673:5675	3357538	0	True				
ANR	3358416	UnaryOperationExpression	! op		3357538	0					
ANR	3358417	UnaryOperator	!		3357538	0					
ANR	3358418	Identifier	op		3357538	1					
ANR	3358419	ReturnStatement	return 0 ;	349:10:5678:5686	3357538	1	True				
ANR	3358420	PrimaryExpression	0		3357538	0					
ANR	3358421	IfStatement	if ( ptr && in -> in_mode == DATA_MODE_IMMEDIATE )		3357538	16					
ANR	3358422	Condition	ptr && in -> in_mode == DATA_MODE_IMMEDIATE	351:5:5694:5734	3357538	0	True				
ANR	3358423	AndExpression	ptr && in -> in_mode == DATA_MODE_IMMEDIATE		3357538	0		&&			
ANR	3358424	Identifier	ptr		3357538	0					
ANR	3358425	EqualityExpression	in -> in_mode == DATA_MODE_IMMEDIATE		3357538	1		==			
ANR	3358426	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358427	Identifier	in		3357538	0					
ANR	3358428	Identifier	in_mode		3357538	1					
ANR	3358429	Identifier	DATA_MODE_IMMEDIATE		3357538	1					
ANR	3358430	ExpressionStatement	ptr = 0	352:2:5739:5746	3357538	1	True				
ANR	3358431	AssignmentExpression	ptr = 0		3357538	0		=			
ANR	3358432	Identifier	ptr		3357538	0					
ANR	3358433	PrimaryExpression	0		3357538	1					
ANR	3358434	IfStatement	if ( branch && in -> in_mode == ADDR_MODE_X_RELATIVE )		3357538	17					
ANR	3358435	Condition	branch && in -> in_mode == ADDR_MODE_X_RELATIVE	354:5:5754:5798	3357538	0	True				
ANR	3358436	AndExpression	branch && in -> in_mode == ADDR_MODE_X_RELATIVE		3357538	0		&&			
ANR	3358437	Identifier	branch		3357538	0					
ANR	3358438	EqualityExpression	in -> in_mode == ADDR_MODE_X_RELATIVE		3357538	1		==			
ANR	3358439	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358440	Identifier	in		3357538	0					
ANR	3358441	Identifier	in_mode		3357538	1					
ANR	3358442	Identifier	ADDR_MODE_X_RELATIVE		3357538	1					
ANR	3358443	ExpressionStatement	ptr = 0	355:2:5803:5810	3357538	1	True				
ANR	3358444	AssignmentExpression	ptr = 0		3357538	0		=			
ANR	3358445	Identifier	ptr		3357538	0					
ANR	3358446	PrimaryExpression	0		3357538	1					
ANR	3358447	IfStatement	if ( idx && ( ! ( in -> in_mode & 2 ) ) )		3357538	18					
ANR	3358448	Condition	idx && ( ! ( in -> in_mode & 2 ) )	357:5:5818:5844	3357538	0	True				
ANR	3358449	AndExpression	idx && ( ! ( in -> in_mode & 2 ) )		3357538	0		&&			
ANR	3358450	Identifier	idx		3357538	0					
ANR	3358451	UnaryOperationExpression	! ( in -> in_mode & 2 )		3357538	1					
ANR	3358452	UnaryOperator	!		3357538	0					
ANR	3358453	BitAndExpression	in -> in_mode & 2		3357538	1		&			
ANR	3358454	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358455	Identifier	in		3357538	0					
ANR	3358456	Identifier	in_mode		3357538	1					
ANR	3358457	PrimaryExpression	2		3357538	1					
ANR	3358458	ExpressionStatement	idx = 0	358:2:5849:5856	3357538	1	True				
ANR	3358459	AssignmentExpression	idx = 0		3357538	0		=			
ANR	3358460	Identifier	idx		3357538	0					
ANR	3358461	PrimaryExpression	0		3357538	1					
ANR	3358462	IfStatement	if ( regn )		3357538	19					
ANR	3358463	Condition	regn	360:5:5864:5867	3357538	0	True				
ANR	3358464	Identifier	regn		3357538	0					
ANR	3358465	CompoundStatement		271:11:3797:3797	3357538	1					
ANR	3358466	ExpressionStatement	ptr = 1	361:2:5874:5881	3357538	0	True				
ANR	3358467	AssignmentExpression	ptr = 1		3357538	0		=			
ANR	3358468	Identifier	ptr		3357538	0					
ANR	3358469	PrimaryExpression	1		3357538	1					
ANR	3358470	ExpressionStatement	idx = 1	362:2:5885:5892	3357538	1	True				
ANR	3358471	AssignmentExpression	idx = 1		3357538	0		=			
ANR	3358472	Identifier	idx		3357538	0					
ANR	3358473	PrimaryExpression	1		3357538	1					
ANR	3358474	ExpressionStatement	reg = 1	363:2:5896:5903	3357538	2	True				
ANR	3358475	AssignmentExpression	reg = 1		3357538	0		=			
ANR	3358476	Identifier	reg		3357538	0					
ANR	3358477	PrimaryExpression	1		3357538	1					
ANR	3358478	ExpressionStatement	"sprintf ( d -> d_asm , ""%s "" , op )"	366:1:5910:5939	3357538	20	True				
ANR	3358479	CallExpression	"sprintf ( d -> d_asm , ""%s "" , op )"		3357538	0					
ANR	3358480	Callee	sprintf		3357538	0					
ANR	3358481	Identifier	sprintf		3357538	0					
ANR	3358482	ArgumentList	d -> d_asm		3357538	1					
ANR	3358483	Argument	d -> d_asm		3357538	0					
ANR	3358484	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358485	Identifier	d		3357538	0					
ANR	3358486	Identifier	d_asm		3357538	1					
ANR	3358487	Argument	"""%s """		3357538	1					
ANR	3358488	PrimaryExpression	"""%s """		3357538	0					
ANR	3358489	Argument	op		3357538	2					
ANR	3358490	Identifier	op		3357538	0					
ANR	3358491	IfStatement	if ( reg )		3357538	21					
ANR	3358492	Condition	reg	367:5:5946:5948	3357538	0	True				
ANR	3358493	Identifier	reg		3357538	0					
ANR	3358494	CompoundStatement		279:2:3882:3896	3357538	1					
ANR	3358495	IdentifierDeclStatement	char * r = regn ;	368:2:5955:5969	3357538	0	True				
ANR	3358496	IdentifierDecl	* r = regn		3357538	0					
ANR	3358497	IdentifierDeclType	char *		3357538	0					
ANR	3358498	Identifier	r		3357538	1					
ANR	3358499	AssignmentExpression	* r = regn		3357538	2		=			
ANR	3358500	Identifier	regn		3357538	0					
ANR	3358501	Identifier	regn		3357538	1					
ANR	3358502	IfStatement	if ( ! r )		3357538	1					
ANR	3358503	Condition	! r	369:6:5977:5978	3357538	0	True				
ANR	3358504	UnaryOperationExpression	! r		3357538	0					
ANR	3358505	UnaryOperator	!		3357538	0					
ANR	3358506	Identifier	r		3357538	1					
ANR	3358507	CompoundStatement		280:10:3908:3908	3357538	1					
ANR	3358508	ExpressionStatement	r = regname ( in -> in_reg )	370:3:5986:6010	3357538	0	True				
ANR	3358509	AssignmentExpression	r = regname ( in -> in_reg )		3357538	0		=			
ANR	3358510	Identifier	r		3357538	0					
ANR	3358511	CallExpression	regname ( in -> in_reg )		3357538	1					
ANR	3358512	Callee	regname		3357538	0					
ANR	3358513	Identifier	regname		3357538	0					
ANR	3358514	ArgumentList	in -> in_reg		3357538	1					
ANR	3358515	Argument	in -> in_reg		3357538	0					
ANR	3358516	PtrMemberAccess	in -> in_reg		3357538	0					
ANR	3358517	Identifier	in		3357538	0					
ANR	3358518	Identifier	in_reg		3357538	1					
ANR	3358519	IfStatement	if ( r && ! rti )		3357538	2					
ANR	3358520	Condition	r && ! rti	372:6:6022:6030	3357538	0	True				
ANR	3358521	AndExpression	r && ! rti		3357538	0		&&			
ANR	3358522	Identifier	r		3357538	0					
ANR	3358523	UnaryOperationExpression	! rti		3357538	1					
ANR	3358524	UnaryOperator	!		3357538	0					
ANR	3358525	Identifier	rti		3357538	1					
ANR	3358526	CompoundStatement		283:17:3960:3960	3357538	1					
ANR	3358527	IfStatement	if ( ( strlen ( r ) + 4 + strlen ( d -> d_asm ) ) < sizeof ( d -> d_asm ) )		3357538	0					
ANR	3358528	Condition	( strlen ( r ) + 4 + strlen ( d -> d_asm ) ) < sizeof ( d -> d_asm )	373:7:6042:6097	3357538	0	True				
ANR	3358529	RelationalExpression	( strlen ( r ) + 4 + strlen ( d -> d_asm ) ) < sizeof ( d -> d_asm )		3357538	0		<			
ANR	3358530	AdditiveExpression	strlen ( r ) + 4 + strlen ( d -> d_asm )		3357538	0		+			
ANR	3358531	CallExpression	strlen ( r )		3357538	0					
ANR	3358532	Callee	strlen		3357538	0					
ANR	3358533	Identifier	strlen		3357538	0					
ANR	3358534	ArgumentList	r		3357538	1					
ANR	3358535	Argument	r		3357538	0					
ANR	3358536	Identifier	r		3357538	0					
ANR	3358537	AdditiveExpression	4 + strlen ( d -> d_asm )		3357538	1		+			
ANR	3358538	PrimaryExpression	4		3357538	0					
ANR	3358539	CallExpression	strlen ( d -> d_asm )		3357538	1					
ANR	3358540	Callee	strlen		3357538	0					
ANR	3358541	Identifier	strlen		3357538	0					
ANR	3358542	ArgumentList	d -> d_asm		3357538	1					
ANR	3358543	Argument	d -> d_asm		3357538	0					
ANR	3358544	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358545	Identifier	d		3357538	0					
ANR	3358546	Identifier	d_asm		3357538	1					
ANR	3358547	SizeofExpression	sizeof ( d -> d_asm )		3357538	1					
ANR	3358548	Sizeof	sizeof		3357538	0					
ANR	3358549	PtrMemberAccess	d -> d_asm		3357538	1					
ANR	3358550	Identifier	d		3357538	0					
ANR	3358551	Identifier	d_asm		3357538	1					
ANR	3358552	CompoundStatement		284:65:4027:4027	3357538	1					
ANR	3358553	ExpressionStatement	"strcat ( d -> d_asm , r )"	374:4:6106:6126	3357538	0	True				
ANR	3358554	CallExpression	"strcat ( d -> d_asm , r )"		3357538	0					
ANR	3358555	Callee	strcat		3357538	0					
ANR	3358556	Identifier	strcat		3357538	0					
ANR	3358557	ArgumentList	d -> d_asm		3357538	1					
ANR	3358558	Argument	d -> d_asm		3357538	0					
ANR	3358559	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358560	Identifier	d		3357538	0					
ANR	3358561	Identifier	d_asm		3357538	1					
ANR	3358562	Argument	r		3357538	1					
ANR	3358563	Identifier	r		3357538	0					
ANR	3358564	ExpressionStatement	"strcat ( d -> d_asm , "", "" )"	375:4:6132:6155	3357538	1	True				
ANR	3358565	CallExpression	"strcat ( d -> d_asm , "", "" )"		3357538	0					
ANR	3358566	Callee	strcat		3357538	0					
ANR	3358567	Identifier	strcat		3357538	0					
ANR	3358568	ArgumentList	d -> d_asm		3357538	1					
ANR	3358569	Argument	d -> d_asm		3357538	0					
ANR	3358570	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358571	Identifier	d		3357538	0					
ANR	3358572	Identifier	d_asm		3357538	1					
ANR	3358573	Argument	""", """		3357538	1					
ANR	3358574	PrimaryExpression	""", """		3357538	0					
ANR	3358575	IfStatement	if ( ptr )		3357538	22					
ANR	3358576	Condition	ptr	379:5:6174:6176	3357538	0	True				
ANR	3358577	Identifier	ptr		3357538	0					
ANR	3358578	CompoundStatement		290:10:4106:4106	3357538	1					
ANR	3358579	ExpressionStatement	"strcat ( d -> d_asm , ""@"" )"	380:2:6183:6205	3357538	0	True				
ANR	3358580	CallExpression	"strcat ( d -> d_asm , ""@"" )"		3357538	0					
ANR	3358581	Callee	strcat		3357538	0					
ANR	3358582	Identifier	strcat		3357538	0					
ANR	3358583	ArgumentList	d -> d_asm		3357538	1					
ANR	3358584	Argument	d -> d_asm		3357538	0					
ANR	3358585	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358586	Identifier	d		3357538	0					
ANR	3358587	Identifier	d_asm		3357538	1					
ANR	3358588	Argument	"""@"""		3357538	1					
ANR	3358589	PrimaryExpression	"""@"""		3357538	0					
ANR	3358590	ExpressionStatement	rel = 0	381:2:6209:6216	3357538	1	True				
ANR	3358591	AssignmentExpression	rel = 0		3357538	0		=			
ANR	3358592	Identifier	rel		3357538	0					
ANR	3358593	PrimaryExpression	0		3357538	1					
ANR	3358594	ElseStatement	else		3357538	0					
ANR	3358595	IfStatement	if ( imm )		3357538	0					
ANR	3358596	Condition	imm	382:12:6230:6232	3357538	0	True				
ANR	3358597	Identifier	imm		3357538	0					
ANR	3358598	CompoundStatement		293:17:4162:4162	3357538	1					
ANR	3358599	ExpressionStatement	"strcat ( d -> d_asm , ""#"" )"	383:2:6239:6261	3357538	0	True				
ANR	3358600	CallExpression	"strcat ( d -> d_asm , ""#"" )"		3357538	0					
ANR	3358601	Callee	strcat		3357538	0					
ANR	3358602	Identifier	strcat		3357538	0					
ANR	3358603	ArgumentList	d -> d_asm		3357538	1					
ANR	3358604	Argument	d -> d_asm		3357538	0					
ANR	3358605	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358606	Identifier	d		3357538	0					
ANR	3358607	Identifier	d_asm		3357538	1					
ANR	3358608	Argument	"""#"""		3357538	1					
ANR	3358609	PrimaryExpression	"""#"""		3357538	0					
ANR	3358610	IfStatement	if ( idx && ptr )		3357538	23					
ANR	3358611	Condition	idx && ptr	385:5:6271:6280	3357538	0	True				
ANR	3358612	AndExpression	idx && ptr		3357538	0		&&			
ANR	3358613	Identifier	idx		3357538	0					
ANR	3358614	Identifier	ptr		3357538	1					
ANR	3358615	CompoundStatement		296:17:4210:4210	3357538	1					
ANR	3358616	ExpressionStatement	"strcat ( d -> d_asm , ""("" )"	386:2:6287:6309	3357538	0	True				
ANR	3358617	CallExpression	"strcat ( d -> d_asm , ""("" )"		3357538	0					
ANR	3358618	Callee	strcat		3357538	0					
ANR	3358619	Identifier	strcat		3357538	0					
ANR	3358620	ArgumentList	d -> d_asm		3357538	1					
ANR	3358621	Argument	d -> d_asm		3357538	0					
ANR	3358622	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358623	Identifier	d		3357538	0					
ANR	3358624	Identifier	d_asm		3357538	1					
ANR	3358625	Argument	"""("""		3357538	1					
ANR	3358626	PrimaryExpression	"""("""		3357538	0					
ANR	3358627	ExpressionStatement	d -> d_prefix = s -> s_prefix	389:1:6316:6341	3357538	24	True				
ANR	3358628	AssignmentExpression	d -> d_prefix = s -> s_prefix		3357538	0		=			
ANR	3358629	PtrMemberAccess	d -> d_prefix		3357538	0					
ANR	3358630	Identifier	d		3357538	0					
ANR	3358631	Identifier	d_prefix		3357538	1					
ANR	3358632	PtrMemberAccess	s -> s_prefix		3357538	1					
ANR	3358633	Identifier	s		3357538	0					
ANR	3358634	Identifier	s_prefix		3357538	1					
ANR	3358635	IfStatement	if ( ( branch && idx ) || rti )		3357538	25					
ANR	3358636	Condition	( branch && idx ) || rti	392:5:6391:6412	3357538	0	True				
ANR	3358637	OrExpression	( branch && idx ) || rti		3357538	0		||			
ANR	3358638	AndExpression	branch && idx		3357538	0		&&			
ANR	3358639	Identifier	branch		3357538	0					
ANR	3358640	Identifier	idx		3357538	1					
ANR	3358641	Identifier	rti		3357538	1					
ANR	3358642	CompoundStatement		303:29:4342:4342	3357538	1					
ANR	3358643	ExpressionStatement	"d -> d_operand = get_operand ( s , d )"	393:2:6419:6451	3357538	0	True				
ANR	3358644	AssignmentExpression	"d -> d_operand = get_operand ( s , d )"		3357538	0		=			
ANR	3358645	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358646	Identifier	d		3357538	0					
ANR	3358647	Identifier	d_operand		3357538	1					
ANR	3358648	CallExpression	"get_operand ( s , d )"		3357538	1					
ANR	3358649	Callee	get_operand		3357538	0					
ANR	3358650	Identifier	get_operand		3357538	0					
ANR	3358651	ArgumentList	s		3357538	1					
ANR	3358652	Argument	s		3357538	0					
ANR	3358653	Identifier	s		3357538	0					
ANR	3358654	Argument	d		3357538	1					
ANR	3358655	Identifier	d		3357538	0					
ANR	3358656	IfStatement	if ( d -> d_operand < 0 )		3357538	1					
ANR	3358657	Condition	d -> d_operand < 0	394:6:6459:6474	3357538	0	True				
ANR	3358658	RelationalExpression	d -> d_operand < 0		3357538	0		<			
ANR	3358659	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358660	Identifier	d		3357538	0					
ANR	3358661	Identifier	d_operand		3357538	1					
ANR	3358662	PrimaryExpression	0		3357538	1					
ANR	3358663	CompoundStatement		305:24:4404:4404	3357538	1					
ANR	3358664	ExpressionStatement	d -> d_operand *= - 1	395:3:6482:6500	3357538	0	True				
ANR	3358665	AssignmentExpression	d -> d_operand *= - 1		3357538	0		*=			
ANR	3358666	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358667	Identifier	d		3357538	0					
ANR	3358668	Identifier	d_operand		3357538	1					
ANR	3358669	UnaryOperationExpression	- 1		3357538	1					
ANR	3358670	UnaryOperator	-		3357538	0					
ANR	3358671	PrimaryExpression	1		3357538	1					
ANR	3358672	ExpressionStatement	"sign = ""-"""	396:3:6505:6515	3357538	1	True				
ANR	3358673	AssignmentExpression	"sign = ""-"""		3357538	0		=			
ANR	3358674	Identifier	sign		3357538	0					
ANR	3358675	PrimaryExpression	"""-"""		3357538	1					
ANR	3358676	ElseStatement	else		3357538	0					
ANR	3358677	CompoundStatement		309:8:4457:4457	3357538	0					
ANR	3358678	ExpressionStatement	d -> d_operand = s -> s_prefix_val | in -> in_operand	399:2:6534:6581	3357538	0	True				
ANR	3358679	AssignmentExpression	d -> d_operand = s -> s_prefix_val | in -> in_operand		3357538	0		=			
ANR	3358680	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358681	Identifier	d		3357538	0					
ANR	3358682	Identifier	d_operand		3357538	1					
ANR	3358683	InclusiveOrExpression	s -> s_prefix_val | in -> in_operand		3357538	1		|			
ANR	3358684	PtrMemberAccess	s -> s_prefix_val		3357538	0					
ANR	3358685	Identifier	s		3357538	0					
ANR	3358686	Identifier	s_prefix_val		3357538	1					
ANR	3358687	PtrMemberAccess	in -> in_operand		3357538	1					
ANR	3358688	Identifier	in		3357538	0					
ANR	3358689	Identifier	in_operand		3357538	1					
ANR	3358690	IfStatement	if ( d -> d_operand & 0x80 )		3357538	1					
ANR	3358691	Condition	d -> d_operand & 0x80	400:6:6589:6607	3357538	0	True				
ANR	3358692	BitAndExpression	d -> d_operand & 0x80		3357538	0		&			
ANR	3358693	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358694	Identifier	d		3357538	0					
ANR	3358695	Identifier	d_operand		3357538	1					
ANR	3358696	PrimaryExpression	0x80		3357538	1					
ANR	3358697	CompoundStatement		311:27:4537:4537	3357538	1					
ANR	3358698	IfStatement	if ( d -> d_prefix )		3357538	0					
ANR	3358699	Condition	d -> d_prefix	401:7:6619:6629	3357538	0	True				
ANR	3358700	PtrMemberAccess	d -> d_prefix		3357538	0					
ANR	3358701	Identifier	d		3357538	0					
ANR	3358702	Identifier	d_prefix		3357538	1					
ANR	3358703	CompoundStatement		312:20:4559:4559	3357538	1					
ANR	3358704	IfStatement	if ( ! rel )		3357538	0					
ANR	3358705	Condition	! rel	402:8:6642:6645	3357538	0	True				
ANR	3358706	UnaryOperationExpression	! rel		3357538	0					
ANR	3358707	UnaryOperator	!		3357538	0					
ANR	3358708	Identifier	rel		3357538	1					
ANR	3358709	ExpressionStatement	d -> d_operand -= 0x100	402:14:6648:6669	3357538	1	True				
ANR	3358710	AssignmentExpression	d -> d_operand -= 0x100		3357538	0		-=			
ANR	3358711	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358712	Identifier	d		3357538	0					
ANR	3358713	Identifier	d_operand		3357538	1					
ANR	3358714	PrimaryExpression	0x100		3357538	1					
ANR	3358715	ElseStatement	else		3357538	0					
ANR	3358716	ExpressionStatement	d -> d_operand |= 0xff00	403:10:6681:6703	3357538	0	True				
ANR	3358717	AssignmentExpression	d -> d_operand |= 0xff00		3357538	0		|=			
ANR	3358718	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358719	Identifier	d		3357538	0					
ANR	3358720	Identifier	d_operand		3357538	1					
ANR	3358721	PrimaryExpression	0xff00		3357538	1					
ANR	3358722	ExpressionStatement	operand = d -> d_operand	408:1:6726:6748	3357538	26	True				
ANR	3358723	AssignmentExpression	operand = d -> d_operand		3357538	0		=			
ANR	3358724	Identifier	operand		3357538	0					
ANR	3358725	PtrMemberAccess	d -> d_operand		3357538	1					
ANR	3358726	Identifier	d		3357538	0					
ANR	3358727	Identifier	d_operand		3357538	1					
ANR	3358728	IfStatement	if ( operand < 0 )		3357538	27					
ANR	3358729	Condition	operand < 0	409:5:6755:6765	3357538	0	True				
ANR	3358730	RelationalExpression	operand < 0		3357538	0		<			
ANR	3358731	Identifier	operand		3357538	0					
ANR	3358732	PrimaryExpression	0		3357538	1					
ANR	3358733	ExpressionStatement	operand *= - 1	410:2:6770:6783	3357538	1	True				
ANR	3358734	AssignmentExpression	operand *= - 1		3357538	0		*=			
ANR	3358735	Identifier	operand		3357538	0					
ANR	3358736	UnaryOperationExpression	- 1		3357538	1					
ANR	3358737	UnaryOperator	-		3357538	0					
ANR	3358738	PrimaryExpression	1		3357538	1					
ANR	3358739	ExpressionStatement	fmtsz = 4	412:1:6793:6802	3357538	28	True				
ANR	3358740	AssignmentExpression	fmtsz = 4		3357538	0		=			
ANR	3358741	Identifier	fmtsz		3357538	0					
ANR	3358742	PrimaryExpression	4		3357538	1					
ANR	3358743	IfStatement	if ( d -> d_operand & 0xff0000 )		3357538	29					
ANR	3358744	Condition	d -> d_operand & 0xff0000	413:5:6809:6831	3357538	0	True				
ANR	3358745	BitAndExpression	d -> d_operand & 0xff0000		3357538	0		&			
ANR	3358746	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358747	Identifier	d		3357538	0					
ANR	3358748	Identifier	d_operand		3357538	1					
ANR	3358749	PrimaryExpression	0xff0000		3357538	1					
ANR	3358750	ExpressionStatement	fmtsz += 2	414:2:6836:6846	3357538	1	True				
ANR	3358751	AssignmentExpression	fmtsz += 2		3357538	0		+=			
ANR	3358752	Identifier	fmtsz		3357538	0					
ANR	3358753	PrimaryExpression	2		3357538	1					
ANR	3358754	ExpressionStatement	"snprintf ( fmt , sizeof ( fmt ) , ""%s0x%%.%dX"" , sign , fmtsz )"	417:1:6887:6942	3357538	30	True				
ANR	3358755	CallExpression	"snprintf ( fmt , sizeof ( fmt ) , ""%s0x%%.%dX"" , sign , fmtsz )"		3357538	0					
ANR	3358756	Callee	snprintf		3357538	0					
ANR	3358757	Identifier	snprintf		3357538	0					
ANR	3358758	ArgumentList	fmt		3357538	1					
ANR	3358759	Argument	fmt		3357538	0					
ANR	3358760	Identifier	fmt		3357538	0					
ANR	3358761	Argument	sizeof ( fmt )		3357538	1					
ANR	3358762	SizeofExpression	sizeof ( fmt )		3357538	0					
ANR	3358763	Sizeof	sizeof		3357538	0					
ANR	3358764	SizeofOperand	fmt		3357538	1					
ANR	3358765	Argument	"""%s0x%%.%dX"""		3357538	2					
ANR	3358766	PrimaryExpression	"""%s0x%%.%dX"""		3357538	0					
ANR	3358767	Argument	sign		3357538	3					
ANR	3358768	Identifier	sign		3357538	0					
ANR	3358769	Argument	fmtsz		3357538	4					
ANR	3358770	Identifier	fmtsz		3357538	0					
ANR	3358771	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , fmt , d -> d_operand )"	418:1:6945:6992	3357538	31	True				
ANR	3358772	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , fmt , d -> d_operand )"		3357538	0					
ANR	3358773	Callee	snprintf		3357538	0					
ANR	3358774	Identifier	snprintf		3357538	0					
ANR	3358775	ArgumentList	tmp		3357538	1					
ANR	3358776	Argument	tmp		3357538	0					
ANR	3358777	Identifier	tmp		3357538	0					
ANR	3358778	Argument	sizeof ( tmp )		3357538	1					
ANR	3358779	SizeofExpression	sizeof ( tmp )		3357538	0					
ANR	3358780	Sizeof	sizeof		3357538	0					
ANR	3358781	SizeofOperand	tmp		3357538	1					
ANR	3358782	Argument	fmt		3357538	2					
ANR	3358783	Identifier	fmt		3357538	0					
ANR	3358784	Argument	d -> d_operand		3357538	3					
ANR	3358785	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358786	Identifier	d		3357538	0					
ANR	3358787	Identifier	d_operand		3357538	1					
ANR	3358788	ExpressionStatement	"strcat ( d -> d_asm , tmp )"	419:1:6995:7017	3357538	32	True				
ANR	3358789	CallExpression	"strcat ( d -> d_asm , tmp )"		3357538	0					
ANR	3358790	Callee	strcat		3357538	0					
ANR	3358791	Identifier	strcat		3357538	0					
ANR	3358792	ArgumentList	d -> d_asm		3357538	1					
ANR	3358793	Argument	d -> d_asm		3357538	0					
ANR	3358794	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358795	Identifier	d		3357538	0					
ANR	3358796	Identifier	d_asm		3357538	1					
ANR	3358797	Argument	tmp		3357538	1					
ANR	3358798	Identifier	tmp		3357538	0					
ANR	3358799	IfStatement	if ( idx )		3357538	33					
ANR	3358800	Condition	idx	421:5:7025:7027	3357538	0	True				
ANR	3358801	Identifier	idx		3357538	0					
ANR	3358802	CompoundStatement		333:2:4961:5017	3357538	1					
ANR	3358803	IdentifierDeclStatement	"char * r = in -> in_mode == DATA_MODE_INDEXED_X ? ""X"" : ""Y"" ;"	422:2:7034:7090	3357538	0	True				
ANR	3358804	IdentifierDecl	"* r = in -> in_mode == DATA_MODE_INDEXED_X ? ""X"" : ""Y"""		3357538	0					
ANR	3358805	IdentifierDeclType	char *		3357538	0					
ANR	3358806	Identifier	r		3357538	1					
ANR	3358807	AssignmentExpression	"* r = in -> in_mode == DATA_MODE_INDEXED_X ? ""X"" : ""Y"""		3357538	2		=			
ANR	3358808	Identifier	r		3357538	0					
ANR	3358809	ConditionalExpression	"in -> in_mode == DATA_MODE_INDEXED_X ? ""X"" : ""Y"""		3357538	1					
ANR	3358810	Condition	in -> in_mode == DATA_MODE_INDEXED_X		3357538	0					
ANR	3358811	EqualityExpression	in -> in_mode == DATA_MODE_INDEXED_X		3357538	0		==			
ANR	3358812	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358813	Identifier	in		3357538	0					
ANR	3358814	Identifier	in_mode		3357538	1					
ANR	3358815	Identifier	DATA_MODE_INDEXED_X		3357538	1					
ANR	3358816	PrimaryExpression	"""X"""		3357538	1					
ANR	3358817	PrimaryExpression	"""Y"""		3357538	2					
ANR	3358818	IfStatement	if ( regn )		3357538	1					
ANR	3358819	Condition	regn	423:6:7098:7101	3357538	0	True				
ANR	3358820	Identifier	regn		3357538	0					
ANR	3358821	ExpressionStatement	"r = ""Y"""	423:12:7104:7111	3357538	1	True				
ANR	3358822	AssignmentExpression	"r = ""Y"""		3357538	0		=			
ANR	3358823	Identifier	r		3357538	0					
ANR	3358824	PrimaryExpression	"""Y"""		3357538	1					
ANR	3358825	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , "", %s"" , r )"	424:2:7115:7152	3357538	2	True				
ANR	3358826	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , "", %s"" , r )"		3357538	0					
ANR	3358827	Callee	snprintf		3357538	0					
ANR	3358828	Identifier	snprintf		3357538	0					
ANR	3358829	ArgumentList	tmp		3357538	1					
ANR	3358830	Argument	tmp		3357538	0					
ANR	3358831	Identifier	tmp		3357538	0					
ANR	3358832	Argument	sizeof ( tmp )		3357538	1					
ANR	3358833	SizeofExpression	sizeof ( tmp )		3357538	0					
ANR	3358834	Sizeof	sizeof		3357538	0					
ANR	3358835	SizeofOperand	tmp		3357538	1					
ANR	3358836	Argument	""", %s"""		3357538	2					
ANR	3358837	PrimaryExpression	""", %s"""		3357538	0					
ANR	3358838	Argument	r		3357538	3					
ANR	3358839	Identifier	r		3357538	0					
ANR	3358840	ExpressionStatement	"strcat ( d -> d_asm , tmp )"	425:2:7156:7177	3357538	3	True				
ANR	3358841	CallExpression	"strcat ( d -> d_asm , tmp )"		3357538	0					
ANR	3358842	Callee	strcat		3357538	0					
ANR	3358843	Identifier	strcat		3357538	0					
ANR	3358844	ArgumentList	d -> d_asm		3357538	1					
ANR	3358845	Argument	d -> d_asm		3357538	0					
ANR	3358846	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358847	Identifier	d		3357538	0					
ANR	3358848	Identifier	d_asm		3357538	1					
ANR	3358849	Argument	tmp		3357538	1					
ANR	3358850	Identifier	tmp		3357538	0					
ANR	3358851	IfStatement	if ( ptr )		3357538	4					
ANR	3358852	Condition	ptr	426:6:7185:7187	3357538	0	True				
ANR	3358853	Identifier	ptr		3357538	0					
ANR	3358854	ExpressionStatement	"strcat ( d -> d_asm , "")"" )"	427:3:7193:7214	3357538	1	True				
ANR	3358855	CallExpression	"strcat ( d -> d_asm , "")"" )"		3357538	0					
ANR	3358856	Callee	strcat		3357538	0					
ANR	3358857	Identifier	strcat		3357538	0					
ANR	3358858	ArgumentList	d -> d_asm		3357538	1					
ANR	3358859	Argument	d -> d_asm		3357538	0					
ANR	3358860	PtrMemberAccess	d -> d_asm		3357538	0					
ANR	3358861	Identifier	d		3357538	0					
ANR	3358862	Identifier	d_asm		3357538	1					
ANR	3358863	Argument	""")"""		3357538	1					
ANR	3358864	PrimaryExpression	""")"""		3357538	0					
ANR	3358865	IfStatement	if ( ! rel && in -> in_mode == DATA_MODE_IMMEDIATE && ( ( d -> d_operand & 0xff00 ) == 0x7F00 ) && d -> d_operand & 0x80 )		3357538	34					
ANR	3358866	Condition	! rel && in -> in_mode == DATA_MODE_IMMEDIATE && ( ( d -> d_operand & 0xff00 ) == 0x7F00 ) && d -> d_operand & 0x80	432:5:7249:7357	3357538	0	True				
ANR	3358867	AndExpression	! rel && in -> in_mode == DATA_MODE_IMMEDIATE && ( ( d -> d_operand & 0xff00 ) == 0x7F00 ) && d -> d_operand & 0x80		3357538	0		&&			
ANR	3358868	UnaryOperationExpression	! rel		3357538	0					
ANR	3358869	UnaryOperator	!		3357538	0					
ANR	3358870	Identifier	rel		3357538	1					
ANR	3358871	AndExpression	in -> in_mode == DATA_MODE_IMMEDIATE && ( ( d -> d_operand & 0xff00 ) == 0x7F00 ) && d -> d_operand & 0x80		3357538	1		&&			
ANR	3358872	EqualityExpression	in -> in_mode == DATA_MODE_IMMEDIATE		3357538	0		==			
ANR	3358873	PtrMemberAccess	in -> in_mode		3357538	0					
ANR	3358874	Identifier	in		3357538	0					
ANR	3358875	Identifier	in_mode		3357538	1					
ANR	3358876	Identifier	DATA_MODE_IMMEDIATE		3357538	1					
ANR	3358877	AndExpression	( ( d -> d_operand & 0xff00 ) == 0x7F00 ) && d -> d_operand & 0x80		3357538	1		&&			
ANR	3358878	EqualityExpression	( d -> d_operand & 0xff00 ) == 0x7F00		3357538	0		==			
ANR	3358879	BitAndExpression	d -> d_operand & 0xff00		3357538	0		&			
ANR	3358880	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358881	Identifier	d		3357538	0					
ANR	3358882	Identifier	d_operand		3357538	1					
ANR	3358883	PrimaryExpression	0xff00		3357538	1					
ANR	3358884	PrimaryExpression	0x7F00		3357538	1					
ANR	3358885	BitAndExpression	d -> d_operand & 0x80		3357538	1		&			
ANR	3358886	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358887	Identifier	d		3357538	0					
ANR	3358888	Identifier	d_operand		3357538	1					
ANR	3358889	PrimaryExpression	0x80		3357538	1					
ANR	3358890	ExpressionStatement	s -> s_ff_quirk = 1	434:2:7362:7379	3357538	1	True				
ANR	3358891	AssignmentExpression	s -> s_ff_quirk = 1		3357538	0		=			
ANR	3358892	PtrMemberAccess	s -> s_ff_quirk		3357538	0					
ANR	3358893	Identifier	s		3357538	0					
ANR	3358894	Identifier	s_ff_quirk		3357538	1					
ANR	3358895	PrimaryExpression	1		3357538	1					
ANR	3358896	IfStatement	if ( rel && ! s -> s_prefix && d -> d_operand == 0x7F )		3357538	35					
ANR	3358897	Condition	rel && ! s -> s_prefix && d -> d_operand == 0x7F	436:5:7387:7429	3357538	0	True				
ANR	3358898	AndExpression	rel && ! s -> s_prefix && d -> d_operand == 0x7F		3357538	0		&&			
ANR	3358899	Identifier	rel		3357538	0					
ANR	3358900	AndExpression	! s -> s_prefix && d -> d_operand == 0x7F		3357538	1		&&			
ANR	3358901	UnaryOperationExpression	! s -> s_prefix		3357538	0					
ANR	3358902	UnaryOperator	!		3357538	0					
ANR	3358903	PtrMemberAccess	s -> s_prefix		3357538	1					
ANR	3358904	Identifier	s		3357538	0					
ANR	3358905	Identifier	s_prefix		3357538	1					
ANR	3358906	EqualityExpression	d -> d_operand == 0x7F		3357538	1		==			
ANR	3358907	PtrMemberAccess	d -> d_operand		3357538	0					
ANR	3358908	Identifier	d		3357538	0					
ANR	3358909	Identifier	d_operand		3357538	1					
ANR	3358910	PrimaryExpression	0x7F		3357538	1					
ANR	3358911	CompoundStatement		347:50:5359:5359	3357538	1					
ANR	3358912	IfStatement	if ( s -> s_nopd )		3357538	0					
ANR	3358913	Condition	s -> s_nopd	437:6:7440:7448	3357538	0	True				
ANR	3358914	PtrMemberAccess	s -> s_nopd		3357538	0					
ANR	3358915	Identifier	s		3357538	0					
ANR	3358916	Identifier	s_nopd		3357538	1					
ANR	3358917	CompoundStatement		348:17:5378:5378	3357538	1					
ANR	3358918	ExpressionStatement	"printf ( ""w00t\\n"" )"	438:3:7456:7472	3357538	0	True				
ANR	3358919	CallExpression	"printf ( ""w00t\\n"" )"		3357538	0					
ANR	3358920	Callee	printf		3357538	0					
ANR	3358921	Identifier	printf		3357538	0					
ANR	3358922	ArgumentList	"""w00t\\n"""		3357538	1					
ANR	3358923	Argument	"""w00t\\n"""		3357538	0					
ANR	3358924	PrimaryExpression	"""w00t\\n"""		3357538	0					
ANR	3358925	ExpressionStatement	"strcpy ( s -> s_nopd -> d_asm , ""nop"" )"	439:3:7477:7508	3357538	1	True				
ANR	3358926	CallExpression	"strcpy ( s -> s_nopd -> d_asm , ""nop"" )"		3357538	0					
ANR	3358927	Callee	strcpy		3357538	0					
ANR	3358928	Identifier	strcpy		3357538	0					
ANR	3358929	ArgumentList	s -> s_nopd -> d_asm		3357538	1					
ANR	3358930	Argument	s -> s_nopd -> d_asm		3357538	0					
ANR	3358931	PtrMemberAccess	s -> s_nopd -> d_asm		3357538	0					
ANR	3358932	PtrMemberAccess	s -> s_nopd		3357538	0					
ANR	3358933	Identifier	s		3357538	0					
ANR	3358934	Identifier	s_nopd		3357538	1					
ANR	3358935	Identifier	d_asm		3357538	1					
ANR	3358936	Argument	"""nop"""		3357538	1					
ANR	3358937	PrimaryExpression	"""nop"""		3357538	0					
ANR	3358938	ExpressionStatement	"printf ( ""Warning: fucking up a branch %x\\n"" , d -> d_off )"	441:2:7516:7569	3357538	1	True				
ANR	3358939	CallExpression	"printf ( ""Warning: fucking up a branch %x\\n"" , d -> d_off )"		3357538	0					
ANR	3358940	Callee	printf		3357538	0					
ANR	3358941	Identifier	printf		3357538	0					
ANR	3358942	ArgumentList	"""Warning: fucking up a branch %x\\n"""		3357538	1					
ANR	3358943	Argument	"""Warning: fucking up a branch %x\\n"""		3357538	0					
ANR	3358944	PrimaryExpression	"""Warning: fucking up a branch %x\\n"""		3357538	0					
ANR	3358945	Argument	d -> d_off		3357538	1					
ANR	3358946	PtrMemberAccess	d -> d_off		3357538	0					
ANR	3358947	Identifier	d		3357538	0					
ANR	3358948	Identifier	d_off		3357538	1					
ANR	3358949	ExpressionStatement	"decode_unknown ( s , d )"	442:2:7573:7593	3357538	2	True				
ANR	3358950	CallExpression	"decode_unknown ( s , d )"		3357538	0					
ANR	3358951	Callee	decode_unknown		3357538	0					
ANR	3358952	Identifier	decode_unknown		3357538	0					
ANR	3358953	ArgumentList	s		3357538	1					
ANR	3358954	Argument	s		3357538	0					
ANR	3358955	Identifier	s		3357538	0					
ANR	3358956	Argument	d		3357538	1					
ANR	3358957	Identifier	d		3357538	0					
ANR	3358958	ReturnStatement	return 1 ;	445:1:7606:7614	3357538	36	True				
ANR	3358959	PrimaryExpression	1		3357538	0					
ANR	3358960	ReturnType	static int		3357538	1					
ANR	3358961	Identifier	decode_known		3357538	2					
ANR	3358962	ParameterList	"struct state * s , struct directive * d"		3357538	3					
ANR	3358963	Parameter	struct state * s	90:24:2034:2048	3357538	0	True				
ANR	3358964	ParameterType	struct state *		3357538	0					
ANR	3358965	Identifier	s		3357538	1					
ANR	3358966	Parameter	struct directive * d	90:41:2051:2069	3357538	1	True				
ANR	3358967	ParameterType	struct directive *		3357538	0					
ANR	3358968	Identifier	d		3357538	1					
ANR	3358969	CFGEntryNode	ENTRY		3357538		True				
ANR	3358970	CFGExitNode	EXIT		3357538		True				
ANR	3358971	Symbol	in -> in_reg		3357538						
ANR	3358972	Symbol	in -> in_operand		3357538						
ANR	3358973	Symbol	s -> s_prefix		3357538						
ANR	3358974	Symbol	imm		3357538						
ANR	3358975	Symbol	sign		3357538						
ANR	3358976	Symbol	* in		3357538						
ANR	3358977	Symbol	d -> d_prefix		3357538						
ANR	3358978	Symbol	fmt		3357538						
ANR	3358979	Symbol	* s -> s_nopd		3357538						
ANR	3358980	Symbol	branch		3357538						
ANR	3358981	Symbol	& d -> d_inst		3357538						
ANR	3358982	Symbol	s -> s_nopd		3357538						
ANR	3358983	Symbol	strlen		3357538						
ANR	3358984	Symbol	reg		3357538						
ANR	3358985	Symbol	tmp		3357538						
ANR	3358986	Symbol	rel		3357538						
ANR	3358987	Symbol	* * s		3357538						
ANR	3358988	Symbol	ADDR_MODE_RELATIVE		3357538						
ANR	3358989	Symbol	op		3357538						
ANR	3358990	Symbol	regname		3357538						
ANR	3358991	Symbol	NULL		3357538						
ANR	3358992	Symbol	s -> s_prefix_val		3357538						
ANR	3358993	Symbol	d		3357538						
ANR	3358994	Symbol	fmtsz		3357538						
ANR	3358995	Symbol	in		3357538						
ANR	3358996	Symbol	rti		3357538						
ANR	3358997	Symbol	get_operand		3357538						
ANR	3358998	Symbol	in -> in_opcode		3357538						
ANR	3358999	Symbol	d -> d_operand		3357538						
ANR	3359000	Symbol	s -> s_nopd -> d_asm		3357538						
ANR	3359001	Symbol	* d		3357538						
ANR	3359002	Symbol	regn		3357538						
ANR	3359003	Symbol	ptr		3357538						
ANR	3359004	Symbol	i2u16		3357538						
ANR	3359005	Symbol	in -> in_mode		3357538						
ANR	3359006	Symbol	r		3357538						
ANR	3359007	Symbol	s		3357538						
ANR	3359008	Symbol	d -> d_asm		3357538						
ANR	3359009	Symbol	s -> s_u		3357538						
ANR	3359010	Symbol	DATA_MODE_INDEXED_X		3357538						
ANR	3359011	Symbol	idx		3357538						
ANR	3359012	Symbol	* s		3357538						
ANR	3359013	Symbol	s -> s_ff_quirk		3357538						
ANR	3359014	Symbol	ADDR_MODE_X_RELATIVE		3357538						
ANR	3359015	Symbol	operand		3357538						
ANR	3359016	Symbol	DATA_MODE_IMMEDIATE		3357538						
ANR	3359017	Symbol	d -> d_off		3357538						
ANR	3359018	Function	xap_decode	448:0:7619:7855							
ANR	3359019	FunctionDef	"xap_decode (struct state * s , struct directive * d)"		3359018	0					
ANR	3359020	CompoundStatement		448:61:7680:7855	3359018	0					
ANR	3359021	IdentifierDeclStatement	int prefix = s -> s_prefix ;	449:1:7683:7707	3359018	0	True				
ANR	3359022	IdentifierDecl	prefix = s -> s_prefix		3359018	0					
ANR	3359023	IdentifierDeclType	int		3359018	0					
ANR	3359024	Identifier	prefix		3359018	1					
ANR	3359025	AssignmentExpression	prefix = s -> s_prefix		3359018	2		=			
ANR	3359026	Identifier	prefix		3359018	0					
ANR	3359027	PtrMemberAccess	s -> s_prefix		3359018	1					
ANR	3359028	Identifier	s		3359018	0					
ANR	3359029	Identifier	s_prefix		3359018	1					
ANR	3359030	IfStatement	"if ( ! decode_fixed ( s , d ) )"		3359018	1					
ANR	3359031	Condition	"! decode_fixed ( s , d )"	450:5:7714:7733	3359018	0	True				
ANR	3359032	UnaryOperationExpression	"! decode_fixed ( s , d )"		3359018	0					
ANR	3359033	UnaryOperator	!		3359018	0					
ANR	3359034	CallExpression	"decode_fixed ( s , d )"		3359018	1					
ANR	3359035	Callee	decode_fixed		3359018	0					
ANR	3359036	Identifier	decode_fixed		3359018	0					
ANR	3359037	ArgumentList	s		3359018	1					
ANR	3359038	Argument	s		3359018	0					
ANR	3359039	Identifier	s		3359018	0					
ANR	3359040	Argument	d		3359018	1					
ANR	3359041	Identifier	d		3359018	0					
ANR	3359042	IfStatement	"if ( ! decode_known ( s , d ) )"		3359018	1					
ANR	3359043	Condition	"! decode_known ( s , d )"	451:6:7742:7761	3359018	0	True				
ANR	3359044	UnaryOperationExpression	"! decode_known ( s , d )"		3359018	0					
ANR	3359045	UnaryOperator	!		3359018	0					
ANR	3359046	CallExpression	"decode_known ( s , d )"		3359018	1					
ANR	3359047	Callee	decode_known		3359018	0					
ANR	3359048	Identifier	decode_known		3359018	0					
ANR	3359049	ArgumentList	s		3359018	1					
ANR	3359050	Argument	s		3359018	0					
ANR	3359051	Identifier	s		3359018	0					
ANR	3359052	Argument	d		3359018	1					
ANR	3359053	Identifier	d		3359018	0					
ANR	3359054	ExpressionStatement	"decode_unknown ( s , d )"	452:3:7767:7788	3359018	1	True				
ANR	3359055	CallExpression	"decode_unknown ( s , d )"		3359018	0					
ANR	3359056	Callee	decode_unknown		3359018	0					
ANR	3359057	Identifier	decode_unknown		3359018	0					
ANR	3359058	ArgumentList	s		3359018	1					
ANR	3359059	Argument	s		3359018	0					
ANR	3359060	Identifier	s		3359018	0					
ANR	3359061	Argument	d		3359018	1					
ANR	3359062	Identifier	d		3359018	0					
ANR	3359063	IfStatement	if ( s -> s_prefix == prefix )		3359018	2					
ANR	3359064	Condition	s -> s_prefix == prefix	453:5:7795:7815	3359018	0	True				
ANR	3359065	EqualityExpression	s -> s_prefix == prefix		3359018	0		==			
ANR	3359066	PtrMemberAccess	s -> s_prefix		3359018	0					
ANR	3359067	Identifier	s		3359018	0					
ANR	3359068	Identifier	s_prefix		3359018	1					
ANR	3359069	Identifier	prefix		3359018	1					
ANR	3359070	ExpressionStatement	s -> s_prefix_val = s -> s_prefix = 0	454:2:7820:7853	3359018	1	True				
ANR	3359071	AssignmentExpression	s -> s_prefix_val = s -> s_prefix = 0		3359018	0		=			
ANR	3359072	PtrMemberAccess	s -> s_prefix_val		3359018	0					
ANR	3359073	Identifier	s		3359018	0					
ANR	3359074	Identifier	s_prefix_val		3359018	1					
ANR	3359075	AssignmentExpression	s -> s_prefix = 0		3359018	1		=			
ANR	3359076	PtrMemberAccess	s -> s_prefix		3359018	0					
ANR	3359077	Identifier	s		3359018	0					
ANR	3359078	Identifier	s_prefix		3359018	1					
ANR	3359079	PrimaryExpression	0		3359018	1					
ANR	3359080	ReturnType	static void		3359018	1					
ANR	3359081	Identifier	xap_decode		3359018	2					
ANR	3359082	ParameterList	"struct state * s , struct directive * d"		3359018	3					
ANR	3359083	Parameter	struct state * s	448:23:7642:7656	3359018	0	True				
ANR	3359084	ParameterType	struct state *		3359018	0					
ANR	3359085	Identifier	s		3359018	1					
ANR	3359086	Parameter	struct directive * d	448:40:7659:7677	3359018	1	True				
ANR	3359087	ParameterType	struct directive *		3359018	0					
ANR	3359088	Identifier	d		3359018	1					
ANR	3359089	CFGEntryNode	ENTRY		3359018		True				
ANR	3359090	CFGExitNode	EXIT		3359018		True				
ANR	3359091	Symbol	decode_known		3359018						
ANR	3359092	Symbol	s		3359018						
ANR	3359093	Symbol	s -> s_prefix_val		3359018						
ANR	3359094	Symbol	d		3359018						
ANR	3359095	Symbol	prefix		3359018						
ANR	3359096	Symbol	s -> s_prefix		3359018						
ANR	3359097	Symbol	decode_fixed		3359018						
ANR	3359098	Symbol	* s		3359018						
ANR	3359099	Function	read_bin	457:0:7858:8003							
ANR	3359100	FunctionDef	"read_bin (struct state * s , struct directive * d)"		3359099	0					
ANR	3359101	CompoundStatement		457:58:7916:8003	3359099	0					
ANR	3359102	ExpressionStatement	"memcpy ( & d -> d_inst , s -> s_buf , sizeof ( d -> d_inst ) )"	458:1:7919:7966	3359099	0	True				
ANR	3359103	CallExpression	"memcpy ( & d -> d_inst , s -> s_buf , sizeof ( d -> d_inst ) )"		3359099	0					
ANR	3359104	Callee	memcpy		3359099	0					
ANR	3359105	Identifier	memcpy		3359099	0					
ANR	3359106	ArgumentList	& d -> d_inst		3359099	1					
ANR	3359107	Argument	& d -> d_inst		3359099	0					
ANR	3359108	UnaryOperationExpression	& d -> d_inst		3359099	0					
ANR	3359109	UnaryOperator	&		3359099	0					
ANR	3359110	PtrMemberAccess	d -> d_inst		3359099	1					
ANR	3359111	Identifier	d		3359099	0					
ANR	3359112	Identifier	d_inst		3359099	1					
ANR	3359113	Argument	s -> s_buf		3359099	1					
ANR	3359114	PtrMemberAccess	s -> s_buf		3359099	0					
ANR	3359115	Identifier	s		3359099	0					
ANR	3359116	Identifier	s_buf		3359099	1					
ANR	3359117	Argument	sizeof ( d -> d_inst )		3359099	2					
ANR	3359118	SizeofExpression	sizeof ( d -> d_inst )		3359099	0					
ANR	3359119	Sizeof	sizeof		3359099	0					
ANR	3359120	PtrMemberAccess	d -> d_inst		3359099	1					
ANR	3359121	Identifier	d		3359099	0					
ANR	3359122	Identifier	d_inst		3359099	1					
ANR	3359123	ExpressionStatement	d -> d_off = s -> s_off ++	459:1:7969:7990	3359099	1	True				
ANR	3359124	AssignmentExpression	d -> d_off = s -> s_off ++		3359099	0		=			
ANR	3359125	PtrMemberAccess	d -> d_off		3359099	0					
ANR	3359126	Identifier	d		3359099	0					
ANR	3359127	Identifier	d_off		3359099	1					
ANR	3359128	PostIncDecOperationExpression	s -> s_off ++		3359099	1					
ANR	3359129	PtrMemberAccess	s -> s_off		3359099	0					
ANR	3359130	Identifier	s		3359099	0					
ANR	3359131	Identifier	s_off		3359099	1					
ANR	3359132	IncDec	++		3359099	1					
ANR	3359133	ReturnStatement	return 1 ;	460:1:7993:8001	3359099	2	True				
ANR	3359134	PrimaryExpression	1		3359099	0					
ANR	3359135	ReturnType	static int		3359099	1					
ANR	3359136	Identifier	read_bin		3359099	2					
ANR	3359137	ParameterList	"struct state * s , struct directive * d"		3359099	3					
ANR	3359138	Parameter	struct state * s	457:20:7878:7892	3359099	0	True				
ANR	3359139	ParameterType	struct state *		3359099	0					
ANR	3359140	Identifier	s		3359099	1					
ANR	3359141	Parameter	struct directive * d	457:37:7895:7913	3359099	1	True				
ANR	3359142	ParameterType	struct directive *		3359099	0					
ANR	3359143	Identifier	d		3359099	1					
ANR	3359144	CFGEntryNode	ENTRY		3359099		True				
ANR	3359145	CFGExitNode	EXIT		3359099		True				
ANR	3359146	Symbol	s		3359099						
ANR	3359147	Symbol	d		3359099						
ANR	3359148	Symbol	d -> d_inst		3359099						
ANR	3359149	Symbol	s -> s_buf		3359099						
ANR	3359150	Symbol	* s		3359099						
ANR	3359151	Symbol	& d -> d_inst		3359099						
ANR	3359152	Symbol	* d		3359099						
ANR	3359153	Symbol	s -> s_off		3359099						
ANR	3359154	Symbol	d -> d_off		3359099						
ANR	3359155	Function	next_inst	463:0:8006:8340							
ANR	3359156	FunctionDef	next_inst (struct state * s)		3359155	0					
ANR	3359157	CompoundStatement		463:59:8065:8340	3359155	0					
ANR	3359158	IdentifierDeclStatement	int rd ;	464:1:8068:8074	3359155	0	True				
ANR	3359159	IdentifierDecl	rd		3359155	0					
ANR	3359160	IdentifierDeclType	int		3359155	0					
ANR	3359161	Identifier	rd		3359155	1					
ANR	3359162	IdentifierDeclStatement	struct directive * d = malloc ( sizeof ( * d ) ) ;	465:1:8077:8119	3359155	1	True				
ANR	3359163	IdentifierDecl	* d = malloc ( sizeof ( * d ) )		3359155	0					
ANR	3359164	IdentifierDeclType	struct directive *		3359155	0					
ANR	3359165	Identifier	d		3359155	1					
ANR	3359166	AssignmentExpression	* d = malloc ( sizeof ( * d ) )		3359155	2		=			
ANR	3359167	Identifier	d		3359155	0					
ANR	3359168	CallExpression	malloc ( sizeof ( * d ) )		3359155	1					
ANR	3359169	Callee	malloc		3359155	0					
ANR	3359170	Identifier	malloc		3359155	0					
ANR	3359171	ArgumentList	sizeof ( * d )		3359155	1					
ANR	3359172	Argument	sizeof ( * d )		3359155	0					
ANR	3359173	SizeofExpression	sizeof ( * d )		3359155	0					
ANR	3359174	Sizeof	sizeof		3359155	0					
ANR	3359175	UnaryOperationExpression	* d		3359155	1					
ANR	3359176	UnaryOperator	*		3359155	0					
ANR	3359177	Identifier	d		3359155	1					
ANR	3359178	IfStatement	if ( ! d )		3359155	2					
ANR	3359179	Condition	! d	466:5:8126:8127	3359155	0	True				
ANR	3359180	UnaryOperationExpression	! d		3359155	0					
ANR	3359181	UnaryOperator	!		3359155	0					
ANR	3359182	Identifier	d		3359155	1					
ANR	3359183	CompoundStatement		4:9:64:64	3359155	1					
ANR	3359184	ExpressionStatement	"perror ( ""malloc()"" )"	467:2:8134:8153	3359155	0	True				
ANR	3359185	CallExpression	"perror ( ""malloc()"" )"		3359155	0					
ANR	3359186	Callee	perror		3359155	0					
ANR	3359187	Identifier	perror		3359155	0					
ANR	3359188	ArgumentList	"""malloc()"""		3359155	1					
ANR	3359189	Argument	"""malloc()"""		3359155	0					
ANR	3359190	PrimaryExpression	"""malloc()"""		3359155	0					
ANR	3359191	ReturnStatement	return NULL ;	468:2:8157:8168	3359155	1	True				
ANR	3359192	Identifier	NULL		3359155	0					
ANR	3359193	ExpressionStatement	"memset ( d , 0 , sizeof ( * d ) )"	470:1:8174:8200	3359155	3	True				
ANR	3359194	CallExpression	"memset ( d , 0 , sizeof ( * d ) )"		3359155	0					
ANR	3359195	Callee	memset		3359155	0					
ANR	3359196	Identifier	memset		3359155	0					
ANR	3359197	ArgumentList	d		3359155	1					
ANR	3359198	Argument	d		3359155	0					
ANR	3359199	Identifier	d		3359155	0					
ANR	3359200	Argument	0		3359155	1					
ANR	3359201	PrimaryExpression	0		3359155	0					
ANR	3359202	Argument	sizeof ( * d )		3359155	2					
ANR	3359203	SizeofExpression	sizeof ( * d )		3359155	0					
ANR	3359204	Sizeof	sizeof		3359155	0					
ANR	3359205	UnaryOperationExpression	* d		3359155	1					
ANR	3359206	UnaryOperator	*		3359155	0					
ANR	3359207	Identifier	d		3359155	1					
ANR	3359208	IfStatement	if ( s -> s_format )		3359155	4					
ANR	3359209	Condition	s -> s_format	472:5:8213:8223	3359155	0	True				
ANR	3359210	PtrMemberAccess	s -> s_format		3359155	0					
ANR	3359211	Identifier	s		3359155	0					
ANR	3359212	Identifier	s_format		3359155	1					
ANR	3359213	ExpressionStatement	"rd = read_text ( s , d )"	473:2:8228:8248	3359155	1	True				
ANR	3359214	AssignmentExpression	"rd = read_text ( s , d )"		3359155	0		=			
ANR	3359215	Identifier	rd		3359155	0					
ANR	3359216	CallExpression	"read_text ( s , d )"		3359155	1					
ANR	3359217	Callee	read_text		3359155	0					
ANR	3359218	Identifier	read_text		3359155	0					
ANR	3359219	ArgumentList	s		3359155	1					
ANR	3359220	Argument	s		3359155	0					
ANR	3359221	Identifier	s		3359155	0					
ANR	3359222	Argument	d		3359155	1					
ANR	3359223	Identifier	d		3359155	0					
ANR	3359224	ElseStatement	else		3359155	0					
ANR	3359225	ExpressionStatement	"rd = read_bin ( s , d )"	476:1:8264:8284	3359155	0	True				
ANR	3359226	AssignmentExpression	"rd = read_bin ( s , d )"		3359155	0		=			
ANR	3359227	Identifier	rd		3359155	0					
ANR	3359228	CallExpression	"read_bin ( s , d )"		3359155	1					
ANR	3359229	Callee	read_bin		3359155	0					
ANR	3359230	Identifier	read_bin		3359155	0					
ANR	3359231	ArgumentList	s		3359155	1					
ANR	3359232	Argument	s		3359155	0					
ANR	3359233	Identifier	s		3359155	0					
ANR	3359234	Argument	d		3359155	1					
ANR	3359235	Identifier	d		3359155	0					
ANR	3359236	IfStatement	if ( ! rd )		3359155	5					
ANR	3359237	Condition	! rd	477:5:8291:8293	3359155	0	True				
ANR	3359238	UnaryOperationExpression	! rd		3359155	0					
ANR	3359239	UnaryOperator	!		3359155	0					
ANR	3359240	Identifier	rd		3359155	1					
ANR	3359241	CompoundStatement		15:10:230:230	3359155	1					
ANR	3359242	ExpressionStatement	free ( d )	478:2:8300:8308	3359155	0	True				
ANR	3359243	CallExpression	free ( d )		3359155	0					
ANR	3359244	Callee	free		3359155	0					
ANR	3359245	Identifier	free		3359155	0					
ANR	3359246	ArgumentList	d		3359155	1					
ANR	3359247	Argument	d		3359155	0					
ANR	3359248	Identifier	d		3359155	0					
ANR	3359249	ReturnStatement	return NULL ;	479:2:8312:8323	3359155	1	True				
ANR	3359250	Identifier	NULL		3359155	0					
ANR	3359251	ReturnStatement	return d ;	482:1:8330:8338	3359155	6	True				
ANR	3359252	Identifier	d		3359155	0					
ANR	3359253	ReturnType	static inline struct directive *		3359155	1					
ANR	3359254	Identifier	next_inst		3359155	2					
ANR	3359255	ParameterList	struct state * s		3359155	3					
ANR	3359256	Parameter	struct state * s	463:42:8048:8062	3359155	0	True				
ANR	3359257	ParameterType	struct state *		3359155	0					
ANR	3359258	Identifier	s		3359155	1					
ANR	3359259	CFGEntryNode	ENTRY		3359155		True				
ANR	3359260	CFGExitNode	EXIT		3359155		True				
ANR	3359261	Symbol	malloc		3359155						
ANR	3359262	Symbol	read_bin		3359155						
ANR	3359263	Symbol	rd		3359155						
ANR	3359264	Symbol	s		3359155						
ANR	3359265	Symbol	NULL		3359155						
ANR	3359266	Symbol	d		3359155						
ANR	3359267	Symbol	read_text		3359155						
ANR	3359268	Symbol	s -> s_format		3359155						
ANR	3359269	Symbol	* s		3359155						
ANR	3359270	Symbol	* d		3359155						
ANR	3359271	Function	own	486:0:8349:9714							
ANR	3359272	FunctionDef	own (struct state * s)		3359271	0					
ANR	3359273	CompoundStatement		487:0:8382:9714	3359271	0					
ANR	3359274	IdentifierDeclStatement	struct directive * d ;	488:1:8385:8404	3359271	0	True				
ANR	3359275	IdentifierDecl	* d		3359271	0					
ANR	3359276	IdentifierDeclType	struct directive *		3359271	0					
ANR	3359277	Identifier	d		3359271	1					
ANR	3359278	IdentifierDeclStatement	struct directive * last = & s -> s_dirs ;	489:1:8407:8442	3359271	1	True				
ANR	3359279	IdentifierDecl	* last = & s -> s_dirs		3359271	0					
ANR	3359280	IdentifierDeclType	struct directive *		3359271	0					
ANR	3359281	Identifier	last		3359271	1					
ANR	3359282	AssignmentExpression	* last = & s -> s_dirs		3359271	2		=			
ANR	3359283	Identifier	last		3359271	0					
ANR	3359284	UnaryOperationExpression	& s -> s_dirs		3359271	1					
ANR	3359285	UnaryOperator	&		3359271	0					
ANR	3359286	PtrMemberAccess	s -> s_dirs		3359271	1					
ANR	3359287	Identifier	s		3359271	0					
ANR	3359288	Identifier	s_dirs		3359271	1					
ANR	3359289	IdentifierDeclStatement	struct label * l ;	490:1:8445:8460	3359271	2	True				
ANR	3359290	IdentifierDecl	* l		3359271	0					
ANR	3359291	IdentifierDeclType	struct label *		3359271	0					
ANR	3359292	Identifier	l		3359271	1					
ANR	3359293	IdentifierDeclStatement	int flush = 0 ;	491:1:8463:8476	3359271	3	True				
ANR	3359294	IdentifierDecl	flush = 0		3359271	0					
ANR	3359295	IdentifierDeclType	int		3359271	0					
ANR	3359296	Identifier	flush		3359271	1					
ANR	3359297	AssignmentExpression	flush = 0		3359271	2		=			
ANR	3359298	Identifier	flush		3359271	0					
ANR	3359299	PrimaryExpression	0		3359271	1					
ANR	3359300	IdentifierDeclStatement	char fname [ 128 ] ;	492:1:8479:8494	3359271	4	True				
ANR	3359301	IdentifierDecl	fname [ 128 ]		3359271	0					
ANR	3359302	IdentifierDeclType	char [ 128 ]		3359271	0					
ANR	3359303	Identifier	fname		3359271	1					
ANR	3359304	PrimaryExpression	128		3359271	2					
ANR	3359305	IdentifierDeclStatement	char * fnamep ;	493:1:8497:8509	3359271	5	True				
ANR	3359306	IdentifierDecl	* fnamep		3359271	0					
ANR	3359307	IdentifierDeclType	char *		3359271	0					
ANR	3359308	Identifier	fnamep		3359271	1					
ANR	3359309	ExpressionStatement	"snprintf ( fname , sizeof ( fname ) , ""%s"" , s -> s_fname )"	495:1:8513:8561	3359271	6	True				
ANR	3359310	CallExpression	"snprintf ( fname , sizeof ( fname ) , ""%s"" , s -> s_fname )"		3359271	0					
ANR	3359311	Callee	snprintf		3359271	0					
ANR	3359312	Identifier	snprintf		3359271	0					
ANR	3359313	ArgumentList	fname		3359271	1					
ANR	3359314	Argument	fname		3359271	0					
ANR	3359315	Identifier	fname		3359271	0					
ANR	3359316	Argument	sizeof ( fname )		3359271	1					
ANR	3359317	SizeofExpression	sizeof ( fname )		3359271	0					
ANR	3359318	Sizeof	sizeof		3359271	0					
ANR	3359319	SizeofOperand	fname		3359271	1					
ANR	3359320	Argument	"""%s"""		3359271	2					
ANR	3359321	PrimaryExpression	"""%s"""		3359271	0					
ANR	3359322	Argument	s -> s_fname		3359271	3					
ANR	3359323	PtrMemberAccess	s -> s_fname		3359271	0					
ANR	3359324	Identifier	s		3359271	0					
ANR	3359325	Identifier	s_fname		3359271	1					
ANR	3359326	ExpressionStatement	"fnamep = strchr ( fname , '.' )"	496:1:8564:8591	3359271	7	True				
ANR	3359327	AssignmentExpression	"fnamep = strchr ( fname , '.' )"		3359271	0		=			
ANR	3359328	Identifier	fnamep		3359271	0					
ANR	3359329	CallExpression	"strchr ( fname , '.' )"		3359271	1					
ANR	3359330	Callee	strchr		3359271	0					
ANR	3359331	Identifier	strchr		3359271	0					
ANR	3359332	ArgumentList	fname		3359271	1					
ANR	3359333	Argument	fname		3359271	0					
ANR	3359334	Identifier	fname		3359271	0					
ANR	3359335	Argument	'.'		3359271	1					
ANR	3359336	PrimaryExpression	'.'		3359271	0					
ANR	3359337	IfStatement	if ( fnamep )		3359271	8					
ANR	3359338	Condition	fnamep	497:5:8598:8603	3359271	0	True				
ANR	3359339	Identifier	fnamep		3359271	0					
ANR	3359340	ExpressionStatement	* fnamep = 0	498:2:8608:8619	3359271	1	True				
ANR	3359341	AssignmentExpression	* fnamep = 0		3359271	0		=			
ANR	3359342	UnaryOperationExpression	* fnamep		3359271	0					
ANR	3359343	UnaryOperator	*		3359271	0					
ANR	3359344	Identifier	fnamep		3359271	1					
ANR	3359345	PrimaryExpression	0		3359271	1					
ANR	3359346	Statement	output	499:1:8622:8627	3359271	9	True				
ANR	3359347	Statement	(	499:7:8628:8628	3359271	10	True				
ANR	3359348	Statement	s	499:8:8629:8629	3359271	11	True				
ANR	3359349	Statement	","	499:9:8630:8630	3359271	12	True				
ANR	3359350	Statement	"""\\tMODULE %s\\n"""	499:11:8632:8646	3359271	13	True				
ANR	3359351	Statement	"""\\t.CODE\\n"""	500:11:8659:8669	3359271	14	True				
ANR	3359352	Statement	"""\\t.LARGE\\n"""	501:4:8675:8686	3359271	15	True				
ANR	3359353	Statement	"""\\n"""	502:11:8699:8702	3359271	16	True				
ANR	3359354	Statement	","	502:15:8703:8703	3359271	17	True				
ANR	3359355	Statement	fname	502:17:8705:8709	3359271	18	True				
ANR	3359356	Statement	)	502:22:8710:8710	3359271	19	True				
ANR	3359357	ExpressionStatement		502:23:8711:8711	3359271	20	True				
ANR	3359358	ExpressionStatement	s -> s_off = 0	505:1:8742:8754	3359271	21	True				
ANR	3359359	AssignmentExpression	s -> s_off = 0		3359271	0		=			
ANR	3359360	PtrMemberAccess	s -> s_off		3359271	0					
ANR	3359361	Identifier	s		3359271	0					
ANR	3359362	Identifier	s_off		3359271	1					
ANR	3359363	PrimaryExpression	0		3359271	1					
ANR	3359364	WhileStatement	while ( ( d = next_inst ( s ) ) )		3359271	22					
ANR	3359365	Condition	d = next_inst ( s )	506:8:8764:8781	3359271	0	True				
ANR	3359366	AssignmentExpression	d = next_inst ( s )		3359271	0		=			
ANR	3359367	Identifier	d		3359271	0					
ANR	3359368	CallExpression	next_inst ( s )		3359271	1					
ANR	3359369	Callee	next_inst		3359271	0					
ANR	3359370	Identifier	next_inst		3359271	0					
ANR	3359371	ArgumentList	s		3359271	1					
ANR	3359372	Argument	s		3359271	0					
ANR	3359373	Identifier	s		3359271	0					
ANR	3359374	CompoundStatement		20:28:401:401	3359271	1					
ANR	3359375	ExpressionStatement	"xap_decode ( s , d )"	507:2:8788:8804	3359271	0	True				
ANR	3359376	CallExpression	"xap_decode ( s , d )"		3359271	0					
ANR	3359377	Callee	xap_decode		3359271	0					
ANR	3359378	Identifier	xap_decode		3359271	0					
ANR	3359379	ArgumentList	s		3359271	1					
ANR	3359380	Argument	s		3359271	0					
ANR	3359381	Identifier	s		3359271	0					
ANR	3359382	Argument	d		3359271	1					
ANR	3359383	Identifier	d		3359271	0					
ANR	3359384	IfStatement	if ( s -> s_ff_quirk )		3359271	1					
ANR	3359385	Condition	s -> s_ff_quirk	509:6:8813:8825	3359271	0	True				
ANR	3359386	PtrMemberAccess	s -> s_ff_quirk		3359271	0					
ANR	3359387	Identifier	s		3359271	0					
ANR	3359388	Identifier	s_ff_quirk		3359271	1					
ANR	3359389	CompoundStatement		23:21:445:445	3359271	1					
ANR	3359390	ExpressionStatement	"strcpy ( last -> d_asm , ""DC\\t0x8000"" )"	510:3:8833:8866	3359271	0	True				
ANR	3359391	CallExpression	"strcpy ( last -> d_asm , ""DC\\t0x8000"" )"		3359271	0					
ANR	3359392	Callee	strcpy		3359271	0					
ANR	3359393	Identifier	strcpy		3359271	0					
ANR	3359394	ArgumentList	last -> d_asm		3359271	1					
ANR	3359395	Argument	last -> d_asm		3359271	0					
ANR	3359396	PtrMemberAccess	last -> d_asm		3359271	0					
ANR	3359397	Identifier	last		3359271	0					
ANR	3359398	Identifier	d_asm		3359271	1					
ANR	3359399	Argument	"""DC\\t0x8000"""		3359271	1					
ANR	3359400	PrimaryExpression	"""DC\\t0x8000"""		3359271	0					
ANR	3359401	ExpressionStatement	"sprintf ( d -> d_asm , ""DC\\t0x%.4x"" , i2u16 ( & d -> d_inst ) )"	512:3:8872:8922	3359271	1	True				
ANR	3359402	CallExpression	"sprintf ( d -> d_asm , ""DC\\t0x%.4x"" , i2u16 ( & d -> d_inst ) )"		3359271	0					
ANR	3359403	Callee	sprintf		3359271	0					
ANR	3359404	Identifier	sprintf		3359271	0					
ANR	3359405	ArgumentList	d -> d_asm		3359271	1					
ANR	3359406	Argument	d -> d_asm		3359271	0					
ANR	3359407	PtrMemberAccess	d -> d_asm		3359271	0					
ANR	3359408	Identifier	d		3359271	0					
ANR	3359409	Identifier	d_asm		3359271	1					
ANR	3359410	Argument	"""DC\\t0x%.4x"""		3359271	1					
ANR	3359411	PrimaryExpression	"""DC\\t0x%.4x"""		3359271	0					
ANR	3359412	Argument	i2u16 ( & d -> d_inst )		3359271	2					
ANR	3359413	CallExpression	i2u16 ( & d -> d_inst )		3359271	0					
ANR	3359414	Callee	i2u16		3359271	0					
ANR	3359415	Identifier	i2u16		3359271	0					
ANR	3359416	ArgumentList	& d -> d_inst		3359271	1					
ANR	3359417	Argument	& d -> d_inst		3359271	0					
ANR	3359418	UnaryOperationExpression	& d -> d_inst		3359271	0					
ANR	3359419	UnaryOperator	&		3359271	0					
ANR	3359420	PtrMemberAccess	d -> d_inst		3359271	1					
ANR	3359421	Identifier	d		3359271	0					
ANR	3359422	Identifier	d_inst		3359271	1					
ANR	3359423	ExpressionStatement	s -> s_ff_quirk = 0	513:3:8927:8944	3359271	2	True				
ANR	3359424	AssignmentExpression	s -> s_ff_quirk = 0		3359271	0		=			
ANR	3359425	PtrMemberAccess	s -> s_ff_quirk		3359271	0					
ANR	3359426	Identifier	s		3359271	0					
ANR	3359427	Identifier	s_ff_quirk		3359271	1					
ANR	3359428	PrimaryExpression	0		3359271	1					
ANR	3359429	IfStatement	if ( s -> s_nopd )		3359271	2					
ANR	3359430	Condition	s -> s_nopd	516:6:8957:8965	3359271	0	True				
ANR	3359431	PtrMemberAccess	s -> s_nopd		3359271	0					
ANR	3359432	Identifier	s		3359271	0					
ANR	3359433	Identifier	s_nopd		3359271	1					
ANR	3359434	CompoundStatement		30:17:585:585	3359271	1					
ANR	3359435	ExpressionStatement	last -> d_next = s -> s_nopd	517:3:8973:8997	3359271	0	True				
ANR	3359436	AssignmentExpression	last -> d_next = s -> s_nopd		3359271	0		=			
ANR	3359437	PtrMemberAccess	last -> d_next		3359271	0					
ANR	3359438	Identifier	last		3359271	0					
ANR	3359439	Identifier	d_next		3359271	1					
ANR	3359440	PtrMemberAccess	s -> s_nopd		3359271	1					
ANR	3359441	Identifier	s		3359271	0					
ANR	3359442	Identifier	s_nopd		3359271	1					
ANR	3359443	ExpressionStatement	last = s -> s_nopd	518:3:9002:9018	3359271	1	True				
ANR	3359444	AssignmentExpression	last = s -> s_nopd		3359271	0		=			
ANR	3359445	Identifier	last		3359271	0					
ANR	3359446	PtrMemberAccess	s -> s_nopd		3359271	1					
ANR	3359447	Identifier	s		3359271	0					
ANR	3359448	Identifier	s_nopd		3359271	1					
ANR	3359449	ExpressionStatement	s -> s_nopd = NULL	519:3:9023:9039	3359271	2	True				
ANR	3359450	AssignmentExpression	s -> s_nopd = NULL		3359271	0		=			
ANR	3359451	PtrMemberAccess	s -> s_nopd		3359271	0					
ANR	3359452	Identifier	s		3359271	0					
ANR	3359453	Identifier	s_nopd		3359271	1					
ANR	3359454	Identifier	NULL		3359271	1					
ANR	3359455	ExpressionStatement	s -> s_nop = 0	520:3:9044:9056	3359271	3	True				
ANR	3359456	AssignmentExpression	s -> s_nop = 0		3359271	0		=			
ANR	3359457	PtrMemberAccess	s -> s_nop		3359271	0					
ANR	3359458	Identifier	s		3359271	0					
ANR	3359459	Identifier	s_nop		3359271	1					
ANR	3359460	PrimaryExpression	0		3359271	1					
ANR	3359461	IfStatement	if ( s -> s_nop )		3359271	3					
ANR	3359462	Condition	s -> s_nop	523:6:9069:9076	3359271	0	True				
ANR	3359463	PtrMemberAccess	s -> s_nop		3359271	0					
ANR	3359464	Identifier	s		3359271	0					
ANR	3359465	Identifier	s_nop		3359271	1					
ANR	3359466	CompoundStatement		37:16:696:696	3359271	1					
ANR	3359467	ExpressionStatement	assert ( ! s -> s_nopd )	524:3:9084:9102	3359271	0	True				
ANR	3359468	CallExpression	assert ( ! s -> s_nopd )		3359271	0					
ANR	3359469	Callee	assert		3359271	0					
ANR	3359470	Identifier	assert		3359271	0					
ANR	3359471	ArgumentList	! s -> s_nopd		3359271	1					
ANR	3359472	Argument	! s -> s_nopd		3359271	0					
ANR	3359473	UnaryOperationExpression	! s -> s_nopd		3359271	0					
ANR	3359474	UnaryOperator	!		3359271	0					
ANR	3359475	PtrMemberAccess	s -> s_nopd		3359271	1					
ANR	3359476	Identifier	s		3359271	0					
ANR	3359477	Identifier	s_nopd		3359271	1					
ANR	3359478	ExpressionStatement	s -> s_nopd = d	525:3:9107:9120	3359271	1	True				
ANR	3359479	AssignmentExpression	s -> s_nopd = d		3359271	0		=			
ANR	3359480	PtrMemberAccess	s -> s_nopd		3359271	0					
ANR	3359481	Identifier	s		3359271	0					
ANR	3359482	Identifier	s_nopd		3359271	1					
ANR	3359483	Identifier	d		3359271	1					
ANR	3359484	ElseStatement	else		3359271	0					
ANR	3359485	CompoundStatement		40:9:748:748	3359271	0					
ANR	3359486	ExpressionStatement	last -> d_next = d	527:3:9136:9152	3359271	0	True				
ANR	3359487	AssignmentExpression	last -> d_next = d		3359271	0		=			
ANR	3359488	PtrMemberAccess	last -> d_next		3359271	0					
ANR	3359489	Identifier	last		3359271	0					
ANR	3359490	Identifier	d_next		3359271	1					
ANR	3359491	Identifier	d		3359271	1					
ANR	3359492	ExpressionStatement	last = d	528:3:9157:9165	3359271	1	True				
ANR	3359493	AssignmentExpression	last = d		3359271	0		=			
ANR	3359494	Identifier	last		3359271	0					
ANR	3359495	Identifier	d		3359271	1					
ANR	3359496	IfStatement	if ( flush ++ > 10000 )		3359271	4					
ANR	3359497	Condition	flush ++ > 10000	532:6:9184:9198	3359271	0	True				
ANR	3359498	RelationalExpression	flush ++ > 10000		3359271	0		>			
ANR	3359499	PostIncDecOperationExpression	flush ++		3359271	0					
ANR	3359500	Identifier	flush		3359271	0					
ANR	3359501	IncDec	++		3359271	1					
ANR	3359502	PrimaryExpression	10000		3359271	1					
ANR	3359503	CompoundStatement		46:23:818:818	3359271	1					
ANR	3359504	ExpressionStatement	"printf ( ""@0x%.6x\\r"" , d -> d_off )"	533:3:9206:9235	3359271	0	True				
ANR	3359505	CallExpression	"printf ( ""@0x%.6x\\r"" , d -> d_off )"		3359271	0					
ANR	3359506	Callee	printf		3359271	0					
ANR	3359507	Identifier	printf		3359271	0					
ANR	3359508	ArgumentList	"""@0x%.6x\\r"""		3359271	1					
ANR	3359509	Argument	"""@0x%.6x\\r"""		3359271	0					
ANR	3359510	PrimaryExpression	"""@0x%.6x\\r"""		3359271	0					
ANR	3359511	Argument	d -> d_off		3359271	1					
ANR	3359512	PtrMemberAccess	d -> d_off		3359271	0					
ANR	3359513	Identifier	d		3359271	0					
ANR	3359514	Identifier	d_off		3359271	1					
ANR	3359515	ExpressionStatement	fflush ( stdout )	534:3:9240:9254	3359271	1	True				
ANR	3359516	CallExpression	fflush ( stdout )		3359271	0					
ANR	3359517	Callee	fflush		3359271	0					
ANR	3359518	Identifier	fflush		3359271	0					
ANR	3359519	ArgumentList	stdout		3359271	1					
ANR	3359520	Argument	stdout		3359271	0					
ANR	3359521	Identifier	stdout		3359271	0					
ANR	3359522	ExpressionStatement	flush = 0	535:3:9259:9268	3359271	2	True				
ANR	3359523	AssignmentExpression	flush = 0		3359271	0		=			
ANR	3359524	Identifier	flush		3359271	0					
ANR	3359525	PrimaryExpression	0		3359271	1					
ANR	3359526	IfStatement	if ( s -> s_nopd )		3359271	23					
ANR	3359527	Condition	s -> s_nopd	539:5:9289:9297	3359271	0	True				
ANR	3359528	PtrMemberAccess	s -> s_nopd		3359271	0					
ANR	3359529	Identifier	s		3359271	0					
ANR	3359530	Identifier	s_nopd		3359271	1					
ANR	3359531	ExpressionStatement	last -> d_next = s -> s_nopd	540:2:9302:9326	3359271	1	True				
ANR	3359532	AssignmentExpression	last -> d_next = s -> s_nopd		3359271	0		=			
ANR	3359533	PtrMemberAccess	last -> d_next		3359271	0					
ANR	3359534	Identifier	last		3359271	0					
ANR	3359535	Identifier	d_next		3359271	1					
ANR	3359536	PtrMemberAccess	s -> s_nopd		3359271	1					
ANR	3359537	Identifier	s		3359271	0					
ANR	3359538	Identifier	s_nopd		3359271	1					
ANR	3359539	ExpressionStatement	"printf ( ""\\n"" )"	541:1:9329:9341	3359271	24	True				
ANR	3359540	CallExpression	"printf ( ""\\n"" )"		3359271	0					
ANR	3359541	Callee	printf		3359271	0					
ANR	3359542	Identifier	printf		3359271	0					
ANR	3359543	ArgumentList	"""\\n"""		3359271	1					
ANR	3359544	Argument	"""\\n"""		3359271	0					
ANR	3359545	PrimaryExpression	"""\\n"""		3359271	0					
ANR	3359546	ExpressionStatement	d = s -> s_dirs . d_next	544:1:9363:9383	3359271	25	True				
ANR	3359547	AssignmentExpression	d = s -> s_dirs . d_next		3359271	0		=			
ANR	3359548	Identifier	d		3359271	0					
ANR	3359549	MemberAccess	s -> s_dirs . d_next		3359271	1					
ANR	3359550	PtrMemberAccess	s -> s_dirs		3359271	0					
ANR	3359551	Identifier	s		3359271	0					
ANR	3359552	Identifier	s_dirs		3359271	1					
ANR	3359553	Identifier	d_next		3359271	1					
ANR	3359554	ExpressionStatement	l = s -> s_labels . l_next	545:1:9386:9408	3359271	26	True				
ANR	3359555	AssignmentExpression	l = s -> s_labels . l_next		3359271	0		=			
ANR	3359556	Identifier	l		3359271	0					
ANR	3359557	MemberAccess	s -> s_labels . l_next		3359271	1					
ANR	3359558	PtrMemberAccess	s -> s_labels		3359271	0					
ANR	3359559	Identifier	s		3359271	0					
ANR	3359560	Identifier	s_labels		3359271	1					
ANR	3359561	Identifier	l_next		3359271	1					
ANR	3359562	WhileStatement	while ( d )		3359271	27					
ANR	3359563	Condition	d	546:8:9418:9418	3359271	0	True				
ANR	3359564	Identifier	d		3359271	0					
ANR	3359565	CompoundStatement		60:11:1038:1038	3359271	1					
ANR	3359566	WhileStatement	while ( l )		3359271	0					
ANR	3359567	Condition	l	549:9:9464:9464	3359271	0	True				
ANR	3359568	Identifier	l		3359271	0					
ANR	3359569	CompoundStatement		63:12:1084:1084	3359271	1					
ANR	3359570	IfStatement	if ( l -> l_off > d -> d_off )		3359271	0					
ANR	3359571	Condition	l -> l_off > d -> d_off	550:7:9476:9494	3359271	0	True				
ANR	3359572	RelationalExpression	l -> l_off > d -> d_off		3359271	0		>			
ANR	3359573	PtrMemberAccess	l -> l_off		3359271	0					
ANR	3359574	Identifier	l		3359271	0					
ANR	3359575	Identifier	l_off		3359271	1					
ANR	3359576	PtrMemberAccess	d -> d_off		3359271	1					
ANR	3359577	Identifier	d		3359271	0					
ANR	3359578	Identifier	d_off		3359271	1					
ANR	3359579	BreakStatement	break ;	551:4:9501:9506	3359271	1	True				
ANR	3359580	ExpressionStatement	"print_label ( s , l )"	553:3:9512:9529	3359271	1	True				
ANR	3359581	CallExpression	"print_label ( s , l )"		3359271	0					
ANR	3359582	Callee	print_label		3359271	0					
ANR	3359583	Identifier	print_label		3359271	0					
ANR	3359584	ArgumentList	s		3359271	1					
ANR	3359585	Argument	s		3359271	0					
ANR	3359586	Identifier	s		3359271	0					
ANR	3359587	Argument	l		3359271	1					
ANR	3359588	Identifier	l		3359271	0					
ANR	3359589	ExpressionStatement	l = l -> l_next	554:3:9534:9547	3359271	2	True				
ANR	3359590	AssignmentExpression	l = l -> l_next		3359271	0		=			
ANR	3359591	Identifier	l		3359271	0					
ANR	3359592	PtrMemberAccess	l -> l_next		3359271	1					
ANR	3359593	Identifier	l		3359271	0					
ANR	3359594	Identifier	l_next		3359271	1					
ANR	3359595	ExpressionStatement	"add_comment ( s , d )"	557:2:9556:9573	3359271	1	True				
ANR	3359596	CallExpression	"add_comment ( s , d )"		3359271	0					
ANR	3359597	Callee	add_comment		3359271	0					
ANR	3359598	Identifier	add_comment		3359271	0					
ANR	3359599	ArgumentList	s		3359271	1					
ANR	3359600	Argument	s		3359271	0					
ANR	3359601	Identifier	s		3359271	0					
ANR	3359602	Argument	d		3359271	1					
ANR	3359603	Identifier	d		3359271	0					
ANR	3359604	ExpressionStatement	"output ( s , ""\\t%s\\n"" , d -> d_asm )"	558:2:9577:9606	3359271	2	True				
ANR	3359605	CallExpression	"output ( s , ""\\t%s\\n"" , d -> d_asm )"		3359271	0					
ANR	3359606	Callee	output		3359271	0					
ANR	3359607	Identifier	output		3359271	0					
ANR	3359608	ArgumentList	s		3359271	1					
ANR	3359609	Argument	s		3359271	0					
ANR	3359610	Identifier	s		3359271	0					
ANR	3359611	Argument	"""\\t%s\\n"""		3359271	1					
ANR	3359612	PrimaryExpression	"""\\t%s\\n"""		3359271	0					
ANR	3359613	Argument	d -> d_asm		3359271	2					
ANR	3359614	PtrMemberAccess	d -> d_asm		3359271	0					
ANR	3359615	Identifier	d		3359271	0					
ANR	3359616	Identifier	d_asm		3359271	1					
ANR	3359617	ExpressionStatement	d = d -> d_next	560:2:9611:9624	3359271	3	True				
ANR	3359618	AssignmentExpression	d = d -> d_next		3359271	0		=			
ANR	3359619	Identifier	d		3359271	0					
ANR	3359620	PtrMemberAccess	d -> d_next		3359271	1					
ANR	3359621	Identifier	d		3359271	0					
ANR	3359622	Identifier	d_next		3359271	1					
ANR	3359623	IfStatement	if ( l )		3359271	28					
ANR	3359624	Condition	l	562:5:9634:9634	3359271	0	True				
ANR	3359625	Identifier	l		3359271	0					
ANR	3359626	CompoundStatement		76:8:1254:1254	3359271	1					
ANR	3359627	ExpressionStatement	"print_label ( s , l )"	563:2:9641:9658	3359271	0	True				
ANR	3359628	CallExpression	"print_label ( s , l )"		3359271	0					
ANR	3359629	Callee	print_label		3359271	0					
ANR	3359630	Identifier	print_label		3359271	0					
ANR	3359631	ArgumentList	s		3359271	1					
ANR	3359632	Argument	s		3359271	0					
ANR	3359633	Identifier	s		3359271	0					
ANR	3359634	Argument	l		3359271	1					
ANR	3359635	Identifier	l		3359271	0					
ANR	3359636	ExpressionStatement	assert ( ! l -> l_next )	564:2:9662:9680	3359271	1	True				
ANR	3359637	CallExpression	assert ( ! l -> l_next )		3359271	0					
ANR	3359638	Callee	assert		3359271	0					
ANR	3359639	Identifier	assert		3359271	0					
ANR	3359640	ArgumentList	! l -> l_next		3359271	1					
ANR	3359641	Argument	! l -> l_next		3359271	0					
ANR	3359642	UnaryOperationExpression	! l -> l_next		3359271	0					
ANR	3359643	UnaryOperator	!		3359271	0					
ANR	3359644	PtrMemberAccess	l -> l_next		3359271	1					
ANR	3359645	Identifier	l		3359271	0					
ANR	3359646	Identifier	l_next		3359271	1					
ANR	3359647	ExpressionStatement	"output ( s , ""\\n\\tENDMOD\\n"" )"	567:1:9687:9712	3359271	29	True				
ANR	3359648	CallExpression	"output ( s , ""\\n\\tENDMOD\\n"" )"		3359271	0					
ANR	3359649	Callee	output		3359271	0					
ANR	3359650	Identifier	output		3359271	0					
ANR	3359651	ArgumentList	s		3359271	1					
ANR	3359652	Argument	s		3359271	0					
ANR	3359653	Identifier	s		3359271	0					
ANR	3359654	Argument	"""\\n\\tENDMOD\\n"""		3359271	1					
ANR	3359655	PrimaryExpression	"""\\n\\tENDMOD\\n"""		3359271	0					
ANR	3359656	ReturnType	static void		3359271	1					
ANR	3359657	Identifier	own		3359271	2					
ANR	3359658	ParameterList	struct state * s		3359271	3					
ANR	3359659	Parameter	struct state * s	486:16:8365:8379	3359271	0	True				
ANR	3359660	ParameterType	struct state *		3359271	0					
ANR	3359661	Identifier	s		3359271	1					
ANR	3359662	CFGEntryNode	ENTRY		3359271		True				
ANR	3359663	CFGExitNode	EXIT		3359271		True				
ANR	3359664	Symbol	s -> s_labels . l_next		3359271						
ANR	3359665	Symbol	stdout		3359271						
ANR	3359666	Symbol	strchr		3359271						
ANR	3359667	Symbol	& d -> d_inst		3359271						
ANR	3359668	Symbol	s -> s_nopd		3359271						
ANR	3359669	Symbol	last -> d_next		3359271						
ANR	3359670	Symbol	flush		3359271						
ANR	3359671	Symbol	fnamep		3359271						
ANR	3359672	Symbol	* fnamep		3359271						
ANR	3359673	Symbol	next_inst		3359271						
ANR	3359674	Symbol	s -> s_fname		3359271						
ANR	3359675	Symbol	s -> s_dirs		3359271						
ANR	3359676	Symbol	s -> s_nop		3359271						
ANR	3359677	Symbol	fname		3359271						
ANR	3359678	Symbol	NULL		3359271						
ANR	3359679	Symbol	d		3359271						
ANR	3359680	Symbol	last		3359271						
ANR	3359681	Symbol	& s -> s_dirs		3359271						
ANR	3359682	Symbol	l		3359271						
ANR	3359683	Symbol	* last		3359271						
ANR	3359684	Symbol	s -> s_dirs . d_next		3359271						
ANR	3359685	Symbol	* d		3359271						
ANR	3359686	Symbol	s -> s_labels		3359271						
ANR	3359687	Symbol	d -> d_next		3359271						
ANR	3359688	Symbol	i2u16		3359271						
ANR	3359689	Symbol	s		3359271						
ANR	3359690	Symbol	d -> d_asm		3359271						
ANR	3359691	Symbol	* l		3359271						
ANR	3359692	Symbol	l -> l_off		3359271						
ANR	3359693	Symbol	l -> l_next		3359271						
ANR	3359694	Symbol	last -> d_asm		3359271						
ANR	3359695	Symbol	* s		3359271						
ANR	3359696	Symbol	s -> s_ff_quirk		3359271						
ANR	3359697	Symbol	s -> s_off		3359271						
ANR	3359698	Symbol	d -> d_off		3359271						
