command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	415427	File	data/converged/CVE-2019-16718~_radare2/asm_x86_nz.c								
ANR	415428	DeclStmt									
ANR	415429	Decl							ut64	"ut64 ( RAsm * a , const char * s )"	getnum
ANR	415430	DeclStmt									
ANR	415431	Decl							const ut8	const ut8 [ ]	SEG_REG_PREFIXES
ANR	415432	ClassDef	tokentype_t	82:8:2960:3039							
ANR	415433	DeclStmt									
ANR	415434	Decl							tokentype_t	tokentype_t	x86newTokenType
ANR	415435	ClassDef	register_t	89:8:3050:3783							
ANR	415436	DeclStmt									
ANR	415437	Decl							register_t	register_t	Register
ANR	415438	ClassDef	operand_t	101:8:3794:4156							
ANR	415439	DeclStmt									
ANR	415440	Decl							ut32	ut32	type
ANR	415441	DeclStmt									
ANR	415442	Decl							st8	st8	sign
ANR	415443	ClassDef	<unnamed>	104:1:3837:3880							
ANR	415444	DeclStmt									
ANR	415445	Decl							Register	Register	reg
ANR	415446	DeclStmt									
ANR	415447	Decl							bool	bool	extended
ANR	415448	ClassDef	<unnamed>	108:1:3884:4090							
ANR	415449	ClassDef	<unnamed>	109:2:3894:3979							
ANR	415450	DeclStmt									
ANR	415451	Decl							ut64	ut64	offset
ANR	415452	DeclStmt									
ANR	415453	Decl							st8	st8	offset_sign
ANR	415454	DeclStmt									
ANR	415455	Decl							Register	Register [ 2 ]	regs
ANR	415456	DeclStmt									
ANR	415457	Decl							int	int [ 2 ]	scale
ANR	415458	ClassDef	<unnamed>	115:2:3984:4036							
ANR	415459	DeclStmt									
ANR	415460	Decl							ut64	ut64	immediate
ANR	415461	DeclStmt									
ANR	415462	Decl							bool	bool	is_good_flag
ANR	415463	ClassDef	<unnamed>	119:2:4041:4086							
ANR	415464	DeclStmt									
ANR	415465	Decl							char	char [ MAX_REPOP_LENGTH ]	rep_op
ANR	415466	DeclStmt									
ANR	415467	Decl							bool	bool	explicit_size
ANR	415468	DeclStmt									
ANR	415469	Decl							ut32	ut32	dest_size
ANR	415470	DeclStmt									
ANR	415471	Decl							ut32	ut32	reg_size
ANR	415472	DeclStmt									
ANR	415473	Decl							operand_t	operand_t	Operand
ANR	415474	ClassDef	Opcode_t	128:8:4167:4340							
ANR	415475	DeclStmt									
ANR	415476	Decl							char	char *	mnemonic
ANR	415477	DeclStmt									
ANR	415478	Decl							ut32	ut32 [ 3 ]	op
ANR	415479	DeclStmt									
ANR	415480	Decl							size_t	size_t	op_len
ANR	415481	DeclStmt									
ANR	415482	Decl							bool	bool	is_short
ANR	415483	DeclStmt									
ANR	415484	Decl							ut8	ut8 [ 3 ]	opcode
ANR	415485	DeclStmt									
ANR	415486	Decl							int	int	operands_count
ANR	415487	DeclStmt									
ANR	415488	Decl							Operand	Operand [ MAX_OPERANDS ]	operands
ANR	415489	DeclStmt									
ANR	415490	Decl							bool	bool	has_bnd
ANR	415491	DeclStmt									
ANR	415492	Decl							Opcode_t	Opcode_t	Opcode
ANR	415493	Function	is_debug_or_control	139:0:4343:4460							
ANR	415494	FunctionDef	is_debug_or_control (Operand op)		415493	0					
ANR	415495	CompoundStatement		139:51:4394:4460	415493	0					
ANR	415496	ReturnStatement	return ( op . type & OT_REGTYPE ) & ( OT_CONTROLREG | OT_DEBUGREG ) ;	140:1:4397:4458	415493	0	True				
ANR	415497	BitAndExpression	( op . type & OT_REGTYPE ) & ( OT_CONTROLREG | OT_DEBUGREG )		415493	0		&			
ANR	415498	BitAndExpression	op . type & OT_REGTYPE		415493	0		&			
ANR	415499	MemberAccess	op . type		415493	0					
ANR	415500	Identifier	op		415493	0					
ANR	415501	Identifier	type		415493	1					
ANR	415502	Identifier	OT_REGTYPE		415493	1					
ANR	415503	InclusiveOrExpression	OT_CONTROLREG | OT_DEBUGREG		415493	1		|			
ANR	415504	Identifier	OT_CONTROLREG		415493	0					
ANR	415505	Identifier	OT_DEBUGREG		415493	1					
ANR	415506	ReturnType	static inline bool		415493	1					
ANR	415507	Identifier	is_debug_or_control		415493	2					
ANR	415508	ParameterList	Operand op		415493	3					
ANR	415509	Parameter	Operand op	139:39:4382:4391	415493	0	True				
ANR	415510	ParameterType	Operand		415493	0					
ANR	415511	Identifier	op		415493	1					
ANR	415512	CFGEntryNode	ENTRY		415493		True				
ANR	415513	CFGExitNode	EXIT		415493		True				
ANR	415514	Symbol	op		415493						
ANR	415515	Symbol	OT_CONTROLREG		415493						
ANR	415516	Symbol	op . type		415493						
ANR	415517	Symbol	OT_DEBUGREG		415493						
ANR	415518	Symbol	OT_REGTYPE		415493						
ANR	415519	Function	getsib	143:0:4463:4581							
ANR	415520	FunctionDef	getsib (const ut8 sib)		415519	0					
ANR	415521	CompoundStatement		143:33:4496:4581	415519	0					
ANR	415522	IfStatement	if ( ! sib )		415519	0					
ANR	415523	Condition	! sib	144:5:4503:4506	415519	0	True				
ANR	415524	UnaryOperationExpression	! sib		415519	0					
ANR	415525	UnaryOperator	!		415519	0					
ANR	415526	Identifier	sib		415519	1					
ANR	415527	CompoundStatement		2:11:12:12	415519	1					
ANR	415528	ReturnStatement	return 0 ;	145:2:4513:4521	415519	0	True				
ANR	415529	PrimaryExpression	0		415519	0					
ANR	415530	ReturnStatement	return ( sib & 0x8 ) ? 3 : getsib ( ( sib << 1 ) | 1 ) - 1 ;	147:1:4527:4579	415519	1	True				
ANR	415531	ConditionalExpression	( sib & 0x8 ) ? 3 : getsib ( ( sib << 1 ) | 1 ) - 1		415519	0					
ANR	415532	Condition	sib & 0x8		415519	0					
ANR	415533	BitAndExpression	sib & 0x8		415519	0		&			
ANR	415534	Identifier	sib		415519	0					
ANR	415535	PrimaryExpression	0x8		415519	1					
ANR	415536	PrimaryExpression	3		415519	1					
ANR	415537	AdditiveExpression	getsib ( ( sib << 1 ) | 1 ) - 1		415519	2		-			
ANR	415538	CallExpression	getsib ( ( sib << 1 ) | 1 )		415519	0					
ANR	415539	Callee	getsib		415519	0					
ANR	415540	Identifier	getsib		415519	0					
ANR	415541	ArgumentList	( sib << 1 ) | 1		415519	1					
ANR	415542	Argument	( sib << 1 ) | 1		415519	0					
ANR	415543	InclusiveOrExpression	( sib << 1 ) | 1		415519	0		|			
ANR	415544	ShiftExpression	sib << 1		415519	0		<<			
ANR	415545	Identifier	sib		415519	0					
ANR	415546	PrimaryExpression	1		415519	1					
ANR	415547	PrimaryExpression	1		415519	1					
ANR	415548	PrimaryExpression	1		415519	1					
ANR	415549	ReturnType	static ut8		415519	1					
ANR	415550	Identifier	getsib		415519	2					
ANR	415551	ParameterList	const ut8 sib		415519	3					
ANR	415552	Parameter	const ut8 sib	143:18:4481:4493	415519	0	True				
ANR	415553	ParameterType	const ut8		415519	0					
ANR	415554	Identifier	sib		415519	1					
ANR	415555	CFGEntryNode	ENTRY		415519		True				
ANR	415556	CFGExitNode	EXIT		415519		True				
ANR	415557	Symbol	sib		415519						
ANR	415558	Symbol	getsib		415519						
ANR	415559	Function	is_al_reg	150:0:4584:4745							
ANR	415560	FunctionDef	is_al_reg (const Operand * op)		415559	0					
ANR	415561	CompoundStatement		150:40:4624:4745	415559	0					
ANR	415562	IfStatement	if ( op -> type & OT_MEMORY )		415559	0					
ANR	415563	Condition	op -> type & OT_MEMORY	151:5:4631:4650	415559	0	True				
ANR	415564	BitAndExpression	op -> type & OT_MEMORY		415559	0		&			
ANR	415565	PtrMemberAccess	op -> type		415559	0					
ANR	415566	Identifier	op		415559	0					
ANR	415567	Identifier	type		415559	1					
ANR	415568	Identifier	OT_MEMORY		415559	1					
ANR	415569	CompoundStatement		2:27:28:28	415559	1					
ANR	415570	ReturnStatement	return 0 ;	152:2:4657:4665	415559	0	True				
ANR	415571	PrimaryExpression	0		415559	0					
ANR	415572	IfStatement	if ( op -> reg == X86R_AL && op -> type & OT_BYTE )		415559	1					
ANR	415573	Condition	op -> reg == X86R_AL && op -> type & OT_BYTE	154:5:4675:4714	415559	0	True				
ANR	415574	AndExpression	op -> reg == X86R_AL && op -> type & OT_BYTE		415559	0		&&			
ANR	415575	EqualityExpression	op -> reg == X86R_AL		415559	0		==			
ANR	415576	PtrMemberAccess	op -> reg		415559	0					
ANR	415577	Identifier	op		415559	0					
ANR	415578	Identifier	reg		415559	1					
ANR	415579	Identifier	X86R_AL		415559	1					
ANR	415580	BitAndExpression	op -> type & OT_BYTE		415559	1		&			
ANR	415581	PtrMemberAccess	op -> type		415559	0					
ANR	415582	Identifier	op		415559	0					
ANR	415583	Identifier	type		415559	1					
ANR	415584	Identifier	OT_BYTE		415559	1					
ANR	415585	CompoundStatement		5:47:92:92	415559	1					
ANR	415586	ReturnStatement	return 1 ;	155:2:4721:4729	415559	0	True				
ANR	415587	PrimaryExpression	1		415559	0					
ANR	415588	ReturnStatement	return 0 ;	157:1:4735:4743	415559	2	True				
ANR	415589	PrimaryExpression	0		415559	0					
ANR	415590	ReturnType	static int		415559	1					
ANR	415591	Identifier	is_al_reg		415559	2					
ANR	415592	ParameterList	const Operand * op		415559	3					
ANR	415593	Parameter	const Operand * op	150:21:4605:4621	415559	0	True				
ANR	415594	ParameterType	const Operand *		415559	0					
ANR	415595	Identifier	op		415559	1					
ANR	415596	CFGEntryNode	ENTRY		415559		True				
ANR	415597	CFGExitNode	EXIT		415559		True				
ANR	415598	Symbol	op		415559						
ANR	415599	Symbol	* op		415559						
ANR	415600	Symbol	op -> type		415559						
ANR	415601	Symbol	OT_MEMORY		415559						
ANR	415602	Symbol	X86R_AL		415559						
ANR	415603	Symbol	op -> reg		415559						
ANR	415604	Symbol	OT_BYTE		415559						
ANR	415605	DeclStmt									
ANR	415606	Decl							int	"int ( RAsm * a , ut8 * data , const Opcode * op )"	oprep
ANR	415607	Function	process_16bit_group_1	162:0:4805:5420							
ANR	415608	FunctionDef	"process_16bit_group_1 (RAsm * a , ut8 * data , const Opcode * op , int op1)"		415607	0					
ANR	415609	CompoundStatement		162:80:4885:5420	415607	0					
ANR	415610	ExpressionStatement	is_valid_registers ( op )	163:1:4888:4911	415607	0	True				
ANR	415611	CallExpression	is_valid_registers ( op )		415607	0					
ANR	415612	Callee	is_valid_registers		415607	0					
ANR	415613	Identifier	is_valid_registers		415607	0					
ANR	415614	ArgumentList	op		415607	1					
ANR	415615	Argument	op		415607	0					
ANR	415616	Identifier	op		415607	0					
ANR	415617	IdentifierDeclStatement	int l = 0 ;	164:1:4914:4923	415607	1	True				
ANR	415618	IdentifierDecl	l = 0		415607	0					
ANR	415619	IdentifierDeclType	int		415607	0					
ANR	415620	Identifier	l		415607	1					
ANR	415621	AssignmentExpression	l = 0		415607	2		=			
ANR	415622	Identifier	l		415607	0					
ANR	415623	PrimaryExpression	0		415607	1					
ANR	415624	IdentifierDeclStatement	int immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign ;	165:1:4926:4990	415607	2	True				
ANR	415625	IdentifierDecl	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		415607	0					
ANR	415626	IdentifierDeclType	int		415607	0					
ANR	415627	Identifier	immediate		415607	1					
ANR	415628	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		415607	2		=			
ANR	415629	Identifier	immediate		415607	0					
ANR	415630	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		415607	1		*			
ANR	415631	MemberAccess	op -> operands [ 1 ] . immediate		415607	0					
ANR	415632	ArrayIndexing	op -> operands [ 1 ]		415607	0					
ANR	415633	PtrMemberAccess	op -> operands		415607	0					
ANR	415634	Identifier	op		415607	0					
ANR	415635	Identifier	operands		415607	1					
ANR	415636	PrimaryExpression	1		415607	1					
ANR	415637	Identifier	immediate		415607	1					
ANR	415638	MemberAccess	op -> operands [ 1 ] . sign		415607	1					
ANR	415639	ArrayIndexing	op -> operands [ 1 ]		415607	0					
ANR	415640	PtrMemberAccess	op -> operands		415607	0					
ANR	415641	Identifier	op		415607	0					
ANR	415642	Identifier	operands		415607	1					
ANR	415643	PrimaryExpression	1		415607	1					
ANR	415644	Identifier	sign		415607	1					
ANR	415645	ExpressionStatement	data [ l ++ ] = 0x66	167:1:4994:5010	415607	3	True				
ANR	415646	AssignmentExpression	data [ l ++ ] = 0x66		415607	0		=			
ANR	415647	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415648	Identifier	data		415607	0					
ANR	415649	PostIncDecOperationExpression	l ++		415607	1					
ANR	415650	Identifier	l		415607	0					
ANR	415651	IncDec	++		415607	1					
ANR	415652	PrimaryExpression	0x66		415607	1					
ANR	415653	IfStatement	if ( op -> operands [ 1 ] . immediate < 128 )		415607	4					
ANR	415654	Condition	op -> operands [ 1 ] . immediate < 128	168:5:5017:5047	415607	0	True				
ANR	415655	RelationalExpression	op -> operands [ 1 ] . immediate < 128		415607	0		<			
ANR	415656	MemberAccess	op -> operands [ 1 ] . immediate		415607	0					
ANR	415657	ArrayIndexing	op -> operands [ 1 ]		415607	0					
ANR	415658	PtrMemberAccess	op -> operands		415607	0					
ANR	415659	Identifier	op		415607	0					
ANR	415660	Identifier	operands		415607	1					
ANR	415661	PrimaryExpression	1		415607	1					
ANR	415662	Identifier	immediate		415607	1					
ANR	415663	PrimaryExpression	128		415607	1					
ANR	415664	CompoundStatement		7:38:164:164	415607	1					
ANR	415665	ExpressionStatement	data [ l ++ ] = 0x83	169:2:5054:5070	415607	0	True				
ANR	415666	AssignmentExpression	data [ l ++ ] = 0x83		415607	0		=			
ANR	415667	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415668	Identifier	data		415607	0					
ANR	415669	PostIncDecOperationExpression	l ++		415607	1					
ANR	415670	Identifier	l		415607	0					
ANR	415671	IncDec	++		415607	1					
ANR	415672	PrimaryExpression	0x83		415607	1					
ANR	415673	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg | ( 0xc0 + op1 + op -> operands [ 0 ] . reg )	170:2:5074:5142	415607	1	True				
ANR	415674	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg | ( 0xc0 + op1 + op -> operands [ 0 ] . reg )		415607	0		=			
ANR	415675	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415676	Identifier	data		415607	0					
ANR	415677	PostIncDecOperationExpression	l ++		415607	1					
ANR	415678	Identifier	l		415607	0					
ANR	415679	IncDec	++		415607	1					
ANR	415680	InclusiveOrExpression	op -> operands [ 0 ] . reg | ( 0xc0 + op1 + op -> operands [ 0 ] . reg )		415607	1		|			
ANR	415681	MemberAccess	op -> operands [ 0 ] . reg		415607	0					
ANR	415682	ArrayIndexing	op -> operands [ 0 ]		415607	0					
ANR	415683	PtrMemberAccess	op -> operands		415607	0					
ANR	415684	Identifier	op		415607	0					
ANR	415685	Identifier	operands		415607	1					
ANR	415686	PrimaryExpression	0		415607	1					
ANR	415687	Identifier	reg		415607	1					
ANR	415688	AdditiveExpression	0xc0 + op1 + op -> operands [ 0 ] . reg		415607	1		+			
ANR	415689	PrimaryExpression	0xc0		415607	0					
ANR	415690	AdditiveExpression	op1 + op -> operands [ 0 ] . reg		415607	1		+			
ANR	415691	Identifier	op1		415607	0					
ANR	415692	MemberAccess	op -> operands [ 0 ] . reg		415607	1					
ANR	415693	ArrayIndexing	op -> operands [ 0 ]		415607	0					
ANR	415694	PtrMemberAccess	op -> operands		415607	0					
ANR	415695	Identifier	op		415607	0					
ANR	415696	Identifier	operands		415607	1					
ANR	415697	PrimaryExpression	0		415607	1					
ANR	415698	Identifier	reg		415607	1					
ANR	415699	ElseStatement	else		415607	0					
ANR	415700	CompoundStatement		10:8:266:266	415607	0					
ANR	415701	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AX )		415607	0					
ANR	415702	Condition	op -> operands [ 0 ] . reg == X86R_AX	172:6:5160:5189	415607	0	True				
ANR	415703	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		415607	0		==			
ANR	415704	MemberAccess	op -> operands [ 0 ] . reg		415607	0					
ANR	415705	ArrayIndexing	op -> operands [ 0 ]		415607	0					
ANR	415706	PtrMemberAccess	op -> operands		415607	0					
ANR	415707	Identifier	op		415607	0					
ANR	415708	Identifier	operands		415607	1					
ANR	415709	PrimaryExpression	0		415607	1					
ANR	415710	Identifier	reg		415607	1					
ANR	415711	Identifier	X86R_AX		415607	1					
ANR	415712	CompoundStatement		11:38:306:306	415607	1					
ANR	415713	ExpressionStatement	data [ l ++ ] = 0x05 + op1	173:3:5197:5219	415607	0	True				
ANR	415714	AssignmentExpression	data [ l ++ ] = 0x05 + op1		415607	0		=			
ANR	415715	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415716	Identifier	data		415607	0					
ANR	415717	PostIncDecOperationExpression	l ++		415607	1					
ANR	415718	Identifier	l		415607	0					
ANR	415719	IncDec	++		415607	1					
ANR	415720	AdditiveExpression	0x05 + op1		415607	1		+			
ANR	415721	PrimaryExpression	0x05		415607	0					
ANR	415722	Identifier	op1		415607	1					
ANR	415723	ElseStatement	else		415607	0					
ANR	415724	CompoundStatement		13:9:344:344	415607	0					
ANR	415725	ExpressionStatement	data [ l ++ ] = 0x81	175:3:5235:5251	415607	0	True				
ANR	415726	AssignmentExpression	data [ l ++ ] = 0x81		415607	0		=			
ANR	415727	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415728	Identifier	data		415607	0					
ANR	415729	PostIncDecOperationExpression	l ++		415607	1					
ANR	415730	Identifier	l		415607	0					
ANR	415731	IncDec	++		415607	1					
ANR	415732	PrimaryExpression	0x81		415607	1					
ANR	415733	ExpressionStatement	data [ l ++ ] = ( 0xc0 + op1 ) | op -> operands [ 0 ] . reg	176:3:5256:5302	415607	1	True				
ANR	415734	AssignmentExpression	data [ l ++ ] = ( 0xc0 + op1 ) | op -> operands [ 0 ] . reg		415607	0		=			
ANR	415735	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415736	Identifier	data		415607	0					
ANR	415737	PostIncDecOperationExpression	l ++		415607	1					
ANR	415738	Identifier	l		415607	0					
ANR	415739	IncDec	++		415607	1					
ANR	415740	InclusiveOrExpression	( 0xc0 + op1 ) | op -> operands [ 0 ] . reg		415607	1		|			
ANR	415741	AdditiveExpression	0xc0 + op1		415607	0		+			
ANR	415742	PrimaryExpression	0xc0		415607	0					
ANR	415743	Identifier	op1		415607	1					
ANR	415744	MemberAccess	op -> operands [ 0 ] . reg		415607	1					
ANR	415745	ArrayIndexing	op -> operands [ 0 ]		415607	0					
ANR	415746	PtrMemberAccess	op -> operands		415607	0					
ANR	415747	Identifier	op		415607	0					
ANR	415748	Identifier	operands		415607	1					
ANR	415749	PrimaryExpression	0		415607	1					
ANR	415750	Identifier	reg		415607	1					
ANR	415751	ExpressionStatement	data [ l ++ ] = immediate	179:1:5312:5333	415607	5	True				
ANR	415752	AssignmentExpression	data [ l ++ ] = immediate		415607	0		=			
ANR	415753	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415754	Identifier	data		415607	0					
ANR	415755	PostIncDecOperationExpression	l ++		415607	1					
ANR	415756	Identifier	l		415607	0					
ANR	415757	IncDec	++		415607	1					
ANR	415758	Identifier	immediate		415607	1					
ANR	415759	IfStatement	if ( op -> operands [ 1 ] . immediate > 127 )		415607	6					
ANR	415760	Condition	op -> operands [ 1 ] . immediate > 127	180:5:5340:5370	415607	0	True				
ANR	415761	RelationalExpression	op -> operands [ 1 ] . immediate > 127		415607	0		>			
ANR	415762	MemberAccess	op -> operands [ 1 ] . immediate		415607	0					
ANR	415763	ArrayIndexing	op -> operands [ 1 ]		415607	0					
ANR	415764	PtrMemberAccess	op -> operands		415607	0					
ANR	415765	Identifier	op		415607	0					
ANR	415766	Identifier	operands		415607	1					
ANR	415767	PrimaryExpression	1		415607	1					
ANR	415768	Identifier	immediate		415607	1					
ANR	415769	PrimaryExpression	127		415607	1					
ANR	415770	CompoundStatement		19:38:487:487	415607	1					
ANR	415771	ExpressionStatement	data [ l ++ ] = immediate >> 8	181:2:5377:5403	415607	0	True				
ANR	415772	AssignmentExpression	data [ l ++ ] = immediate >> 8		415607	0		=			
ANR	415773	ArrayIndexing	data [ l ++ ]		415607	0					
ANR	415774	Identifier	data		415607	0					
ANR	415775	PostIncDecOperationExpression	l ++		415607	1					
ANR	415776	Identifier	l		415607	0					
ANR	415777	IncDec	++		415607	1					
ANR	415778	ShiftExpression	immediate >> 8		415607	1		>>			
ANR	415779	Identifier	immediate		415607	0					
ANR	415780	PrimaryExpression	8		415607	1					
ANR	415781	ReturnStatement	return l ;	184:1:5410:5418	415607	7	True				
ANR	415782	Identifier	l		415607	0					
ANR	415783	ReturnType	static int		415607	1					
ANR	415784	Identifier	process_16bit_group_1		415607	2					
ANR	415785	ParameterList	"RAsm * a , ut8 * data , const Opcode * op , int op1"		415607	3					
ANR	415786	Parameter	RAsm * a	162:33:4838:4844	415607	0	True				
ANR	415787	ParameterType	RAsm *		415607	0					
ANR	415788	Identifier	a		415607	1					
ANR	415789	Parameter	ut8 * data	162:42:4847:4855	415607	1	True				
ANR	415790	ParameterType	ut8 *		415607	0					
ANR	415791	Identifier	data		415607	1					
ANR	415792	Parameter	const Opcode * op	162:53:4858:4873	415607	2	True				
ANR	415793	ParameterType	const Opcode *		415607	0					
ANR	415794	Identifier	op		415607	1					
ANR	415795	Parameter	int op1	162:71:4876:4882	415607	3	True				
ANR	415796	ParameterType	int		415607	0					
ANR	415797	Identifier	op1		415607	1					
ANR	415798	CFGEntryNode	ENTRY		415607		True				
ANR	415799	CFGExitNode	EXIT		415607		True				
ANR	415800	Symbol	a		415607						
ANR	415801	Symbol	op		415607						
ANR	415802	Symbol	data		415607						
ANR	415803	Symbol	* op		415607						
ANR	415804	Symbol	X86R_AX		415607						
ANR	415805	Symbol	op -> operands [ 1 ] . immediate		415607						
ANR	415806	Symbol	l		415607						
ANR	415807	Symbol	* * op		415607						
ANR	415808	Symbol	op1		415607						
ANR	415809	Symbol	* op -> operands		415607						
ANR	415810	Symbol	immediate		415607						
ANR	415811	Symbol	op -> operands [ 1 ] . sign		415607						
ANR	415812	Symbol	op -> operands [ 0 ] . reg		415607						
ANR	415813	Symbol	op -> operands		415607						
ANR	415814	Symbol	* data		415607						
ANR	415815	Function	process_group_1	187:0:5423:7891							
ANR	415816	FunctionDef	"process_group_1 (RAsm * a , ut8 * data , const Opcode * op)"		415815	0					
ANR	415817	CompoundStatement		187:65:5488:7891	415815	0					
ANR	415818	ExpressionStatement	is_valid_registers ( op )	188:1:5491:5514	415815	0	True				
ANR	415819	CallExpression	is_valid_registers ( op )		415815	0					
ANR	415820	Callee	is_valid_registers		415815	0					
ANR	415821	Identifier	is_valid_registers		415815	0					
ANR	415822	ArgumentList	op		415815	1					
ANR	415823	Argument	op		415815	0					
ANR	415824	Identifier	op		415815	0					
ANR	415825	IdentifierDeclStatement	int l = 0 ;	189:1:5517:5526	415815	1	True				
ANR	415826	IdentifierDecl	l = 0		415815	0					
ANR	415827	IdentifierDeclType	int		415815	0					
ANR	415828	Identifier	l		415815	1					
ANR	415829	AssignmentExpression	l = 0		415815	2		=			
ANR	415830	Identifier	l		415815	0					
ANR	415831	PrimaryExpression	0		415815	1					
ANR	415832	IdentifierDeclStatement	int modrm = 0 ;	190:1:5529:5542	415815	2	True				
ANR	415833	IdentifierDecl	modrm = 0		415815	0					
ANR	415834	IdentifierDeclType	int		415815	0					
ANR	415835	Identifier	modrm		415815	1					
ANR	415836	AssignmentExpression	modrm = 0		415815	2		=			
ANR	415837	Identifier	modrm		415815	0					
ANR	415838	PrimaryExpression	0		415815	1					
ANR	415839	IdentifierDeclStatement	int mod_byte = 0 ;	191:1:5545:5561	415815	3	True				
ANR	415840	IdentifierDecl	mod_byte = 0		415815	0					
ANR	415841	IdentifierDeclType	int		415815	0					
ANR	415842	Identifier	mod_byte		415815	1					
ANR	415843	AssignmentExpression	mod_byte = 0		415815	2		=			
ANR	415844	Identifier	mod_byte		415815	0					
ANR	415845	PrimaryExpression	0		415815	1					
ANR	415846	IdentifierDeclStatement	int offset = 0 ;	192:1:5564:5578	415815	4	True				
ANR	415847	IdentifierDecl	offset = 0		415815	0					
ANR	415848	IdentifierDeclType	int		415815	0					
ANR	415849	Identifier	offset		415815	1					
ANR	415850	AssignmentExpression	offset = 0		415815	2		=			
ANR	415851	Identifier	offset		415815	0					
ANR	415852	PrimaryExpression	0		415815	1					
ANR	415853	IdentifierDeclStatement	int mem_ref = 0 ;	193:1:5581:5596	415815	5	True				
ANR	415854	IdentifierDecl	mem_ref = 0		415815	0					
ANR	415855	IdentifierDeclType	int		415815	0					
ANR	415856	Identifier	mem_ref		415815	1					
ANR	415857	AssignmentExpression	mem_ref = 0		415815	2		=			
ANR	415858	Identifier	mem_ref		415815	0					
ANR	415859	PrimaryExpression	0		415815	1					
ANR	415860	IdentifierDeclStatement	st32 immediate = 0 ;	194:1:5599:5617	415815	6	True				
ANR	415861	IdentifierDecl	immediate = 0		415815	0					
ANR	415862	IdentifierDeclType	st32		415815	0					
ANR	415863	Identifier	immediate		415815	1					
ANR	415864	AssignmentExpression	immediate = 0		415815	2		=			
ANR	415865	Identifier	immediate		415815	0					
ANR	415866	PrimaryExpression	0		415815	1					
ANR	415867	IfStatement	if ( ! op -> operands [ 1 ] . is_good_flag )		415815	7					
ANR	415868	Condition	! op -> operands [ 1 ] . is_good_flag	196:5:5625:5653	415815	0	True				
ANR	415869	UnaryOperationExpression	! op -> operands [ 1 ] . is_good_flag		415815	0					
ANR	415870	UnaryOperator	!		415815	0					
ANR	415871	MemberAccess	op -> operands [ 1 ] . is_good_flag		415815	1					
ANR	415872	ArrayIndexing	op -> operands [ 1 ]		415815	0					
ANR	415873	PtrMemberAccess	op -> operands		415815	0					
ANR	415874	Identifier	op		415815	0					
ANR	415875	Identifier	operands		415815	1					
ANR	415876	PrimaryExpression	1		415815	1					
ANR	415877	Identifier	is_good_flag		415815	1					
ANR	415878	CompoundStatement		10:36:167:167	415815	1					
ANR	415879	ReturnStatement	return - 1 ;	197:2:5660:5669	415815	0	True				
ANR	415880	UnaryOperationExpression	- 1		415815	0					
ANR	415881	UnaryOperator	-		415815	0					
ANR	415882	PrimaryExpression	1		415815	1					
ANR	415883	IfStatement	if ( a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD )		415815	8					
ANR	415884	Condition	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD	199:5:5679:5726	415815	0	True				
ANR	415885	AndExpression	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD		415815	0		&&			
ANR	415886	EqualityExpression	a -> bits == 64		415815	0		==			
ANR	415887	PtrMemberAccess	a -> bits		415815	0					
ANR	415888	Identifier	a		415815	0					
ANR	415889	Identifier	bits		415815	1					
ANR	415890	PrimaryExpression	64		415815	1					
ANR	415891	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		415815	1		&			
ANR	415892	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	415893	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	415894	PtrMemberAccess	op -> operands		415815	0					
ANR	415895	Identifier	op		415815	0					
ANR	415896	Identifier	operands		415815	1					
ANR	415897	PrimaryExpression	0		415815	1					
ANR	415898	Identifier	type		415815	1					
ANR	415899	Identifier	OT_QWORD		415815	1					
ANR	415900	CompoundStatement		13:55:240:240	415815	1					
ANR	415901	ExpressionStatement	data [ l ++ ] = 0x48	200:2:5733:5749	415815	0	True				
ANR	415902	AssignmentExpression	data [ l ++ ] = 0x48		415815	0		=			
ANR	415903	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	415904	Identifier	data		415815	0					
ANR	415905	PostIncDecOperationExpression	l ++		415815	1					
ANR	415906	Identifier	l		415815	0					
ANR	415907	IncDec	++		415815	1					
ANR	415908	PrimaryExpression	0x48		415815	1					
ANR	415909	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""adc"" ) )"		415815	9					
ANR	415910	Condition	"! strcmp ( op -> mnemonic , ""adc"" )"	202:5:5759:5787	415815	0	True				
ANR	415911	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""adc"" )"		415815	0					
ANR	415912	UnaryOperator	!		415815	0					
ANR	415913	CallExpression	"strcmp ( op -> mnemonic , ""adc"" )"		415815	1					
ANR	415914	Callee	strcmp		415815	0					
ANR	415915	Identifier	strcmp		415815	0					
ANR	415916	ArgumentList	op -> mnemonic		415815	1					
ANR	415917	Argument	op -> mnemonic		415815	0					
ANR	415918	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	415919	Identifier	op		415815	0					
ANR	415920	Identifier	mnemonic		415815	1					
ANR	415921	Argument	"""adc"""		415815	1					
ANR	415922	PrimaryExpression	"""adc"""		415815	0					
ANR	415923	CompoundStatement		16:36:301:301	415815	1					
ANR	415924	ExpressionStatement	modrm = 2	203:2:5794:5803	415815	0	True				
ANR	415925	AssignmentExpression	modrm = 2		415815	0		=			
ANR	415926	Identifier	modrm		415815	0					
ANR	415927	PrimaryExpression	2		415815	1					
ANR	415928	ElseStatement	else		415815	0					
ANR	415929	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""add"" ) )"		415815	0					
ANR	415930	Condition	"! strcmp ( op -> mnemonic , ""add"" )"	204:12:5817:5845	415815	0	True				
ANR	415931	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""add"" )"		415815	0					
ANR	415932	UnaryOperator	!		415815	0					
ANR	415933	CallExpression	"strcmp ( op -> mnemonic , ""add"" )"		415815	1					
ANR	415934	Callee	strcmp		415815	0					
ANR	415935	Identifier	strcmp		415815	0					
ANR	415936	ArgumentList	op -> mnemonic		415815	1					
ANR	415937	Argument	op -> mnemonic		415815	0					
ANR	415938	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	415939	Identifier	op		415815	0					
ANR	415940	Identifier	mnemonic		415815	1					
ANR	415941	Argument	"""add"""		415815	1					
ANR	415942	PrimaryExpression	"""add"""		415815	0					
ANR	415943	CompoundStatement		18:43:359:359	415815	1					
ANR	415944	ExpressionStatement	modrm = 0	205:2:5852:5861	415815	0	True				
ANR	415945	AssignmentExpression	modrm = 0		415815	0		=			
ANR	415946	Identifier	modrm		415815	0					
ANR	415947	PrimaryExpression	0		415815	1					
ANR	415948	ElseStatement	else		415815	0					
ANR	415949	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""or"" ) )"		415815	0					
ANR	415950	Condition	"! strcmp ( op -> mnemonic , ""or"" )"	206:12:5875:5902	415815	0	True				
ANR	415951	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""or"" )"		415815	0					
ANR	415952	UnaryOperator	!		415815	0					
ANR	415953	CallExpression	"strcmp ( op -> mnemonic , ""or"" )"		415815	1					
ANR	415954	Callee	strcmp		415815	0					
ANR	415955	Identifier	strcmp		415815	0					
ANR	415956	ArgumentList	op -> mnemonic		415815	1					
ANR	415957	Argument	op -> mnemonic		415815	0					
ANR	415958	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	415959	Identifier	op		415815	0					
ANR	415960	Identifier	mnemonic		415815	1					
ANR	415961	Argument	"""or"""		415815	1					
ANR	415962	PrimaryExpression	"""or"""		415815	0					
ANR	415963	CompoundStatement		20:42:416:416	415815	1					
ANR	415964	ExpressionStatement	modrm = 1	207:2:5909:5918	415815	0	True				
ANR	415965	AssignmentExpression	modrm = 1		415815	0		=			
ANR	415966	Identifier	modrm		415815	0					
ANR	415967	PrimaryExpression	1		415815	1					
ANR	415968	ElseStatement	else		415815	0					
ANR	415969	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""and"" ) )"		415815	0					
ANR	415970	Condition	"! strcmp ( op -> mnemonic , ""and"" )"	208:12:5932:5960	415815	0	True				
ANR	415971	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""and"" )"		415815	0					
ANR	415972	UnaryOperator	!		415815	0					
ANR	415973	CallExpression	"strcmp ( op -> mnemonic , ""and"" )"		415815	1					
ANR	415974	Callee	strcmp		415815	0					
ANR	415975	Identifier	strcmp		415815	0					
ANR	415976	ArgumentList	op -> mnemonic		415815	1					
ANR	415977	Argument	op -> mnemonic		415815	0					
ANR	415978	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	415979	Identifier	op		415815	0					
ANR	415980	Identifier	mnemonic		415815	1					
ANR	415981	Argument	"""and"""		415815	1					
ANR	415982	PrimaryExpression	"""and"""		415815	0					
ANR	415983	CompoundStatement		22:43:474:474	415815	1					
ANR	415984	ExpressionStatement	modrm = 4	209:2:5967:5976	415815	0	True				
ANR	415985	AssignmentExpression	modrm = 4		415815	0		=			
ANR	415986	Identifier	modrm		415815	0					
ANR	415987	PrimaryExpression	4		415815	1					
ANR	415988	ElseStatement	else		415815	0					
ANR	415989	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""xor"" ) )"		415815	0					
ANR	415990	Condition	"! strcmp ( op -> mnemonic , ""xor"" )"	210:12:5990:6018	415815	0	True				
ANR	415991	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""xor"" )"		415815	0					
ANR	415992	UnaryOperator	!		415815	0					
ANR	415993	CallExpression	"strcmp ( op -> mnemonic , ""xor"" )"		415815	1					
ANR	415994	Callee	strcmp		415815	0					
ANR	415995	Identifier	strcmp		415815	0					
ANR	415996	ArgumentList	op -> mnemonic		415815	1					
ANR	415997	Argument	op -> mnemonic		415815	0					
ANR	415998	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	415999	Identifier	op		415815	0					
ANR	416000	Identifier	mnemonic		415815	1					
ANR	416001	Argument	"""xor"""		415815	1					
ANR	416002	PrimaryExpression	"""xor"""		415815	0					
ANR	416003	CompoundStatement		24:43:532:532	415815	1					
ANR	416004	ExpressionStatement	modrm = 6	211:2:6025:6034	415815	0	True				
ANR	416005	AssignmentExpression	modrm = 6		415815	0		=			
ANR	416006	Identifier	modrm		415815	0					
ANR	416007	PrimaryExpression	6		415815	1					
ANR	416008	ElseStatement	else		415815	0					
ANR	416009	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sbb"" ) )"		415815	0					
ANR	416010	Condition	"! strcmp ( op -> mnemonic , ""sbb"" )"	212:12:6048:6076	415815	0	True				
ANR	416011	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sbb"" )"		415815	0					
ANR	416012	UnaryOperator	!		415815	0					
ANR	416013	CallExpression	"strcmp ( op -> mnemonic , ""sbb"" )"		415815	1					
ANR	416014	Callee	strcmp		415815	0					
ANR	416015	Identifier	strcmp		415815	0					
ANR	416016	ArgumentList	op -> mnemonic		415815	1					
ANR	416017	Argument	op -> mnemonic		415815	0					
ANR	416018	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	416019	Identifier	op		415815	0					
ANR	416020	Identifier	mnemonic		415815	1					
ANR	416021	Argument	"""sbb"""		415815	1					
ANR	416022	PrimaryExpression	"""sbb"""		415815	0					
ANR	416023	CompoundStatement		26:43:590:590	415815	1					
ANR	416024	ExpressionStatement	modrm = 3	213:2:6083:6092	415815	0	True				
ANR	416025	AssignmentExpression	modrm = 3		415815	0		=			
ANR	416026	Identifier	modrm		415815	0					
ANR	416027	PrimaryExpression	3		415815	1					
ANR	416028	ElseStatement	else		415815	0					
ANR	416029	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sub"" ) )"		415815	0					
ANR	416030	Condition	"! strcmp ( op -> mnemonic , ""sub"" )"	214:12:6106:6134	415815	0	True				
ANR	416031	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sub"" )"		415815	0					
ANR	416032	UnaryOperator	!		415815	0					
ANR	416033	CallExpression	"strcmp ( op -> mnemonic , ""sub"" )"		415815	1					
ANR	416034	Callee	strcmp		415815	0					
ANR	416035	Identifier	strcmp		415815	0					
ANR	416036	ArgumentList	op -> mnemonic		415815	1					
ANR	416037	Argument	op -> mnemonic		415815	0					
ANR	416038	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	416039	Identifier	op		415815	0					
ANR	416040	Identifier	mnemonic		415815	1					
ANR	416041	Argument	"""sub"""		415815	1					
ANR	416042	PrimaryExpression	"""sub"""		415815	0					
ANR	416043	CompoundStatement		28:43:648:648	415815	1					
ANR	416044	ExpressionStatement	modrm = 5	215:2:6141:6150	415815	0	True				
ANR	416045	AssignmentExpression	modrm = 5		415815	0		=			
ANR	416046	Identifier	modrm		415815	0					
ANR	416047	PrimaryExpression	5		415815	1					
ANR	416048	ElseStatement	else		415815	0					
ANR	416049	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""cmp"" ) )"		415815	0					
ANR	416050	Condition	"! strcmp ( op -> mnemonic , ""cmp"" )"	216:12:6164:6192	415815	0	True				
ANR	416051	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""cmp"" )"		415815	0					
ANR	416052	UnaryOperator	!		415815	0					
ANR	416053	CallExpression	"strcmp ( op -> mnemonic , ""cmp"" )"		415815	1					
ANR	416054	Callee	strcmp		415815	0					
ANR	416055	Identifier	strcmp		415815	0					
ANR	416056	ArgumentList	op -> mnemonic		415815	1					
ANR	416057	Argument	op -> mnemonic		415815	0					
ANR	416058	PtrMemberAccess	op -> mnemonic		415815	0					
ANR	416059	Identifier	op		415815	0					
ANR	416060	Identifier	mnemonic		415815	1					
ANR	416061	Argument	"""cmp"""		415815	1					
ANR	416062	PrimaryExpression	"""cmp"""		415815	0					
ANR	416063	CompoundStatement		30:43:706:706	415815	1					
ANR	416064	ExpressionStatement	modrm = 7	217:2:6199:6208	415815	0	True				
ANR	416065	AssignmentExpression	modrm = 7		415815	0		=			
ANR	416066	Identifier	modrm		415815	0					
ANR	416067	PrimaryExpression	7		415815	1					
ANR	416068	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	219:1:6214:6274	415815	10	True				
ANR	416069	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		415815	0		=			
ANR	416070	Identifier	immediate		415815	0					
ANR	416071	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		415815	1		*			
ANR	416072	MemberAccess	op -> operands [ 1 ] . immediate		415815	0					
ANR	416073	ArrayIndexing	op -> operands [ 1 ]		415815	0					
ANR	416074	PtrMemberAccess	op -> operands		415815	0					
ANR	416075	Identifier	op		415815	0					
ANR	416076	Identifier	operands		415815	1					
ANR	416077	PrimaryExpression	1		415815	1					
ANR	416078	Identifier	immediate		415815	1					
ANR	416079	MemberAccess	op -> operands [ 1 ] . sign		415815	1					
ANR	416080	ArrayIndexing	op -> operands [ 1 ]		415815	0					
ANR	416081	PtrMemberAccess	op -> operands		415815	0					
ANR	416082	Identifier	op		415815	0					
ANR	416083	Identifier	operands		415815	1					
ANR	416084	PrimaryExpression	1		415815	1					
ANR	416085	Identifier	sign		415815	1					
ANR	416086	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD || op -> operands [ 0 ] . type & OT_QWORD )		415815	11					
ANR	416087	Condition	op -> operands [ 0 ] . type & OT_DWORD || op -> operands [ 0 ] . type & OT_QWORD	221:5:6282:6349	415815	0	True				
ANR	416088	OrExpression	op -> operands [ 0 ] . type & OT_DWORD || op -> operands [ 0 ] . type & OT_QWORD		415815	0		||			
ANR	416089	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		415815	0		&			
ANR	416090	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416091	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416092	PtrMemberAccess	op -> operands		415815	0					
ANR	416093	Identifier	op		415815	0					
ANR	416094	Identifier	operands		415815	1					
ANR	416095	PrimaryExpression	0		415815	1					
ANR	416096	Identifier	type		415815	1					
ANR	416097	Identifier	OT_DWORD		415815	1					
ANR	416098	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		415815	1		&			
ANR	416099	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416100	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416101	PtrMemberAccess	op -> operands		415815	0					
ANR	416102	Identifier	op		415815	0					
ANR	416103	Identifier	operands		415815	1					
ANR	416104	PrimaryExpression	0		415815	1					
ANR	416105	Identifier	type		415815	1					
ANR	416106	Identifier	OT_QWORD		415815	1					
ANR	416107	CompoundStatement		36:35:863:863	415815	1					
ANR	416108	IfStatement	if ( op -> operands [ 1 ] . immediate < 128 )		415815	0					
ANR	416109	Condition	op -> operands [ 1 ] . immediate < 128	223:6:6360:6390	415815	0	True				
ANR	416110	RelationalExpression	op -> operands [ 1 ] . immediate < 128		415815	0		<			
ANR	416111	MemberAccess	op -> operands [ 1 ] . immediate		415815	0					
ANR	416112	ArrayIndexing	op -> operands [ 1 ]		415815	0					
ANR	416113	PtrMemberAccess	op -> operands		415815	0					
ANR	416114	Identifier	op		415815	0					
ANR	416115	Identifier	operands		415815	1					
ANR	416116	PrimaryExpression	1		415815	1					
ANR	416117	Identifier	immediate		415815	1					
ANR	416118	PrimaryExpression	128		415815	1					
ANR	416119	CompoundStatement		37:39:904:904	415815	1					
ANR	416120	ExpressionStatement	data [ l ++ ] = 0x83	224:3:6398:6414	415815	0	True				
ANR	416121	AssignmentExpression	data [ l ++ ] = 0x83		415815	0		=			
ANR	416122	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416123	Identifier	data		415815	0					
ANR	416124	PostIncDecOperationExpression	l ++		415815	1					
ANR	416125	Identifier	l		415815	0					
ANR	416126	IncDec	++		415815	1					
ANR	416127	PrimaryExpression	0x83		415815	1					
ANR	416128	ElseStatement	else		415815	0					
ANR	416129	IfStatement	if ( op -> operands [ 0 ] . reg != X86R_EAX || op -> operands [ 0 ] . type & OT_MEMORY )		415815	0					
ANR	416130	Condition	op -> operands [ 0 ] . reg != X86R_EAX || op -> operands [ 0 ] . type & OT_MEMORY	225:13:6429:6508	415815	0	True				
ANR	416131	OrExpression	op -> operands [ 0 ] . reg != X86R_EAX || op -> operands [ 0 ] . type & OT_MEMORY		415815	0		||			
ANR	416132	EqualityExpression	op -> operands [ 0 ] . reg != X86R_EAX		415815	0		!=			
ANR	416133	MemberAccess	op -> operands [ 0 ] . reg		415815	0					
ANR	416134	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416135	PtrMemberAccess	op -> operands		415815	0					
ANR	416136	Identifier	op		415815	0					
ANR	416137	Identifier	operands		415815	1					
ANR	416138	PrimaryExpression	0		415815	1					
ANR	416139	Identifier	reg		415815	1					
ANR	416140	Identifier	X86R_EAX		415815	1					
ANR	416141	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		415815	1		&			
ANR	416142	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416143	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416144	PtrMemberAccess	op -> operands		415815	0					
ANR	416145	Identifier	op		415815	0					
ANR	416146	Identifier	operands		415815	1					
ANR	416147	PrimaryExpression	0		415815	1					
ANR	416148	Identifier	type		415815	1					
ANR	416149	Identifier	OT_MEMORY		415815	1					
ANR	416150	CompoundStatement		40:47:1022:1022	415815	1					
ANR	416151	ExpressionStatement	data [ l ++ ] = 0x81	227:3:6516:6532	415815	0	True				
ANR	416152	AssignmentExpression	data [ l ++ ] = 0x81		415815	0		=			
ANR	416153	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416154	Identifier	data		415815	0					
ANR	416155	PostIncDecOperationExpression	l ++		415815	1					
ANR	416156	Identifier	l		415815	0					
ANR	416157	IncDec	++		415815	1					
ANR	416158	PrimaryExpression	0x81		415815	1					
ANR	416159	ElseStatement	else		415815	0					
ANR	416160	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		415815	0					
ANR	416161	Condition	op -> operands [ 0 ] . type & OT_BYTE	229:12:6550:6579	415815	0	True				
ANR	416162	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		415815	0		&			
ANR	416163	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416164	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416165	PtrMemberAccess	op -> operands		415815	0					
ANR	416166	Identifier	op		415815	0					
ANR	416167	Identifier	operands		415815	1					
ANR	416168	PrimaryExpression	0		415815	1					
ANR	416169	Identifier	type		415815	1					
ANR	416170	Identifier	OT_BYTE		415815	1					
ANR	416171	CompoundStatement		43:44:1093:1093	415815	1					
ANR	416172	IfStatement	if ( op -> operands [ 1 ] . immediate > 255 )		415815	0					
ANR	416173	Condition	op -> operands [ 1 ] . immediate > 255	230:6:6590:6620	415815	0	True				
ANR	416174	RelationalExpression	op -> operands [ 1 ] . immediate > 255		415815	0		>			
ANR	416175	MemberAccess	op -> operands [ 1 ] . immediate		415815	0					
ANR	416176	ArrayIndexing	op -> operands [ 1 ]		415815	0					
ANR	416177	PtrMemberAccess	op -> operands		415815	0					
ANR	416178	Identifier	op		415815	0					
ANR	416179	Identifier	operands		415815	1					
ANR	416180	PrimaryExpression	1		415815	1					
ANR	416181	Identifier	immediate		415815	1					
ANR	416182	PrimaryExpression	255		415815	1					
ANR	416183	CompoundStatement		44:39:1134:1134	415815	1					
ANR	416184	ExpressionStatement	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"	231:3:6628:6673	415815	0	True				
ANR	416185	CallExpression	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"		415815	0					
ANR	416186	Callee	eprintf		415815	0					
ANR	416187	Identifier	eprintf		415815	0					
ANR	416188	ArgumentList	"""Error: Immediate exceeds bounds\\n"""		415815	1					
ANR	416189	Argument	"""Error: Immediate exceeds bounds\\n"""		415815	0					
ANR	416190	PrimaryExpression	"""Error: Immediate exceeds bounds\\n"""		415815	0					
ANR	416191	ReturnStatement	return - 1 ;	232:3:6678:6687	415815	1	True				
ANR	416192	UnaryOperationExpression	- 1		415815	0					
ANR	416193	UnaryOperator	-		415815	0					
ANR	416194	PrimaryExpression	1		415815	1					
ANR	416195	ExpressionStatement	data [ l ++ ] = 0x80	234:2:6695:6711	415815	1	True				
ANR	416196	AssignmentExpression	data [ l ++ ] = 0x80		415815	0		=			
ANR	416197	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416198	Identifier	data		415815	0					
ANR	416199	PostIncDecOperationExpression	l ++		415815	1					
ANR	416200	Identifier	l		415815	0					
ANR	416201	IncDec	++		415815	1					
ANR	416202	PrimaryExpression	0x80		415815	1					
ANR	416203	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		415815	12					
ANR	416204	Condition	op -> operands [ 0 ] . type & OT_MEMORY	236:5:6721:6752	415815	0	True				
ANR	416205	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		415815	0		&			
ANR	416206	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416207	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416208	PtrMemberAccess	op -> operands		415815	0					
ANR	416209	Identifier	op		415815	0					
ANR	416210	Identifier	operands		415815	1					
ANR	416211	PrimaryExpression	0		415815	1					
ANR	416212	Identifier	type		415815	1					
ANR	416213	Identifier	OT_MEMORY		415815	1					
ANR	416214	CompoundStatement		58:2:1494:1528	415815	1					
ANR	416215	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	237:2:6759:6820	415815	0	True				
ANR	416216	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		415815	0		=			
ANR	416217	Identifier	offset		415815	0					
ANR	416218	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		415815	1		*			
ANR	416219	MemberAccess	op -> operands [ 0 ] . offset		415815	0					
ANR	416220	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416221	PtrMemberAccess	op -> operands		415815	0					
ANR	416222	Identifier	op		415815	0					
ANR	416223	Identifier	operands		415815	1					
ANR	416224	PrimaryExpression	0		415815	1					
ANR	416225	Identifier	offset		415815	1					
ANR	416226	MemberAccess	op -> operands [ 0 ] . offset_sign		415815	1					
ANR	416227	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416228	PtrMemberAccess	op -> operands		415815	0					
ANR	416229	Identifier	op		415815	0					
ANR	416230	Identifier	operands		415815	1					
ANR	416231	PrimaryExpression	0		415815	1					
ANR	416232	Identifier	offset_sign		415815	1					
ANR	416233	IfStatement	if ( op -> operands [ 0 ] . offset || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		415815	1					
ANR	416234	Condition	op -> operands [ 0 ] . offset || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	238:6:6828:6888	415815	0	True				
ANR	416235	OrExpression	op -> operands [ 0 ] . offset || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		415815	0		||			
ANR	416236	MemberAccess	op -> operands [ 0 ] . offset		415815	0					
ANR	416237	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416238	PtrMemberAccess	op -> operands		415815	0					
ANR	416239	Identifier	op		415815	0					
ANR	416240	Identifier	operands		415815	1					
ANR	416241	PrimaryExpression	0		415815	1					
ANR	416242	Identifier	offset		415815	1					
ANR	416243	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		415815	1		==			
ANR	416244	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		415815	0					
ANR	416245	MemberAccess	op -> operands [ 0 ] . regs		415815	0					
ANR	416246	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416247	PtrMemberAccess	op -> operands		415815	0					
ANR	416248	Identifier	op		415815	0					
ANR	416249	Identifier	operands		415815	1					
ANR	416250	PrimaryExpression	0		415815	1					
ANR	416251	Identifier	regs		415815	1					
ANR	416252	PrimaryExpression	0		415815	1					
ANR	416253	Identifier	X86R_EBP		415815	1					
ANR	416254	CompoundStatement		52:69:1402:1402	415815	1					
ANR	416255	ExpressionStatement	mod_byte = 1	239:3:6896:6908	415815	0	True				
ANR	416256	AssignmentExpression	mod_byte = 1		415815	0		=			
ANR	416257	Identifier	mod_byte		415815	0					
ANR	416258	PrimaryExpression	1		415815	1					
ANR	416259	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		415815	2					
ANR	416260	Condition	offset < ST8_MIN || offset > ST8_MAX	241:6:6920:6955	415815	0	True				
ANR	416261	OrExpression	offset < ST8_MIN || offset > ST8_MAX		415815	0		||			
ANR	416262	RelationalExpression	offset < ST8_MIN		415815	0		<			
ANR	416263	Identifier	offset		415815	0					
ANR	416264	Identifier	ST8_MIN		415815	1					
ANR	416265	RelationalExpression	offset > ST8_MAX		415815	1		>			
ANR	416266	Identifier	offset		415815	0					
ANR	416267	Identifier	ST8_MAX		415815	1					
ANR	416268	CompoundStatement		55:44:1469:1469	415815	1					
ANR	416269	ExpressionStatement	mod_byte = 2	242:3:6963:6975	415815	0	True				
ANR	416270	AssignmentExpression	mod_byte = 2		415815	0		=			
ANR	416271	Identifier	mod_byte		415815	0					
ANR	416272	PrimaryExpression	2		415815	1					
ANR	416273	IdentifierDeclStatement	int reg0 = op -> operands [ 0 ] . regs [ 0 ] ;	244:2:6983:7017	415815	3	True				
ANR	416274	IdentifierDecl	reg0 = op -> operands [ 0 ] . regs [ 0 ]		415815	0					
ANR	416275	IdentifierDeclType	int		415815	0					
ANR	416276	Identifier	reg0		415815	1					
ANR	416277	AssignmentExpression	reg0 = op -> operands [ 0 ] . regs [ 0 ]		415815	2		=			
ANR	416278	Identifier	reg0		415815	0					
ANR	416279	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		415815	1					
ANR	416280	MemberAccess	op -> operands [ 0 ] . regs		415815	0					
ANR	416281	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416282	PtrMemberAccess	op -> operands		415815	0					
ANR	416283	Identifier	op		415815	0					
ANR	416284	Identifier	operands		415815	1					
ANR	416285	PrimaryExpression	0		415815	1					
ANR	416286	Identifier	regs		415815	1					
ANR	416287	PrimaryExpression	0		415815	1					
ANR	416288	IfStatement	if ( reg0 == - 1 )		415815	4					
ANR	416289	Condition	reg0 == - 1	245:6:7025:7034	415815	0	True				
ANR	416290	EqualityExpression	reg0 == - 1		415815	0		==			
ANR	416291	Identifier	reg0		415815	0					
ANR	416292	UnaryOperationExpression	- 1		415815	1					
ANR	416293	UnaryOperator	-		415815	0					
ANR	416294	PrimaryExpression	1		415815	1					
ANR	416295	CompoundStatement		59:18:1548:1548	415815	1					
ANR	416296	ExpressionStatement	mem_ref = 1	246:3:7042:7053	415815	0	True				
ANR	416297	AssignmentExpression	mem_ref = 1		415815	0		=			
ANR	416298	Identifier	mem_ref		415815	0					
ANR	416299	PrimaryExpression	1		415815	1					
ANR	416300	ExpressionStatement	reg0 = 5	247:3:7058:7066	415815	1	True				
ANR	416301	AssignmentExpression	reg0 = 5		415815	0		=			
ANR	416302	Identifier	reg0		415815	0					
ANR	416303	PrimaryExpression	5		415815	1					
ANR	416304	ExpressionStatement	mod_byte = 0	248:3:7071:7083	415815	2	True				
ANR	416305	AssignmentExpression	mod_byte = 0		415815	0		=			
ANR	416306	Identifier	mod_byte		415815	0					
ANR	416307	PrimaryExpression	0		415815	1					
ANR	416308	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0	250:2:7091:7136	415815	5	True				
ANR	416309	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0		415815	0		=			
ANR	416310	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416311	Identifier	data		415815	0					
ANR	416312	PostIncDecOperationExpression	l ++		415815	1					
ANR	416313	Identifier	l		415815	0					
ANR	416314	IncDec	++		415815	1					
ANR	416315	InclusiveOrExpression	mod_byte << 6 | modrm << 3 | reg0		415815	1		|			
ANR	416316	ShiftExpression	mod_byte << 6		415815	0		<<			
ANR	416317	Identifier	mod_byte		415815	0					
ANR	416318	PrimaryExpression	6		415815	1					
ANR	416319	InclusiveOrExpression	modrm << 3 | reg0		415815	1		|			
ANR	416320	ShiftExpression	modrm << 3		415815	0		<<			
ANR	416321	Identifier	modrm		415815	0					
ANR	416322	PrimaryExpression	3		415815	1					
ANR	416323	Identifier	reg0		415815	1					
ANR	416324	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		415815	6					
ANR	416325	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	251:6:7144:7178	415815	0	True				
ANR	416326	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		415815	0		==			
ANR	416327	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		415815	0					
ANR	416328	MemberAccess	op -> operands [ 0 ] . regs		415815	0					
ANR	416329	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416330	PtrMemberAccess	op -> operands		415815	0					
ANR	416331	Identifier	op		415815	0					
ANR	416332	Identifier	operands		415815	1					
ANR	416333	PrimaryExpression	0		415815	1					
ANR	416334	Identifier	regs		415815	1					
ANR	416335	PrimaryExpression	0		415815	1					
ANR	416336	Identifier	X86R_ESP		415815	1					
ANR	416337	CompoundStatement		65:43:1692:1692	415815	1					
ANR	416338	ExpressionStatement	data [ l ++ ] = 0x24	252:3:7186:7202	415815	0	True				
ANR	416339	AssignmentExpression	data [ l ++ ] = 0x24		415815	0		=			
ANR	416340	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416341	Identifier	data		415815	0					
ANR	416342	PostIncDecOperationExpression	l ++		415815	1					
ANR	416343	Identifier	l		415815	0					
ANR	416344	IncDec	++		415815	1					
ANR	416345	PrimaryExpression	0x24		415815	1					
ANR	416346	IfStatement	if ( mod_byte || mem_ref )		415815	7					
ANR	416347	Condition	mod_byte || mem_ref	254:6:7214:7232	415815	0	True				
ANR	416348	OrExpression	mod_byte || mem_ref		415815	0		||			
ANR	416349	Identifier	mod_byte		415815	0					
ANR	416350	Identifier	mem_ref		415815	1					
ANR	416351	CompoundStatement		68:27:1746:1746	415815	1					
ANR	416352	ExpressionStatement	data [ l ++ ] = offset	255:3:7240:7258	415815	0	True				
ANR	416353	AssignmentExpression	data [ l ++ ] = offset		415815	0		=			
ANR	416354	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416355	Identifier	data		415815	0					
ANR	416356	PostIncDecOperationExpression	l ++		415815	1					
ANR	416357	Identifier	l		415815	0					
ANR	416358	IncDec	++		415815	1					
ANR	416359	Identifier	offset		415815	1					
ANR	416360	IfStatement	if ( mod_byte == 2 || mem_ref )		415815	1					
ANR	416361	Condition	mod_byte == 2 || mem_ref	256:7:7267:7290	415815	0	True				
ANR	416362	OrExpression	mod_byte == 2 || mem_ref		415815	0		||			
ANR	416363	EqualityExpression	mod_byte == 2		415815	0		==			
ANR	416364	Identifier	mod_byte		415815	0					
ANR	416365	PrimaryExpression	2		415815	1					
ANR	416366	Identifier	mem_ref		415815	1					
ANR	416367	CompoundStatement		70:33:1804:1804	415815	1					
ANR	416368	ExpressionStatement	data [ l ++ ] = offset >> 8	257:4:7299:7322	415815	0	True				
ANR	416369	AssignmentExpression	data [ l ++ ] = offset >> 8		415815	0		=			
ANR	416370	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416371	Identifier	data		415815	0					
ANR	416372	PostIncDecOperationExpression	l ++		415815	1					
ANR	416373	Identifier	l		415815	0					
ANR	416374	IncDec	++		415815	1					
ANR	416375	ShiftExpression	offset >> 8		415815	1		>>			
ANR	416376	Identifier	offset		415815	0					
ANR	416377	PrimaryExpression	8		415815	1					
ANR	416378	ExpressionStatement	data [ l ++ ] = offset >> 16	258:4:7328:7352	415815	1	True				
ANR	416379	AssignmentExpression	data [ l ++ ] = offset >> 16		415815	0		=			
ANR	416380	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416381	Identifier	data		415815	0					
ANR	416382	PostIncDecOperationExpression	l ++		415815	1					
ANR	416383	Identifier	l		415815	0					
ANR	416384	IncDec	++		415815	1					
ANR	416385	ShiftExpression	offset >> 16		415815	1		>>			
ANR	416386	Identifier	offset		415815	0					
ANR	416387	PrimaryExpression	16		415815	1					
ANR	416388	ExpressionStatement	data [ l ++ ] = offset >> 24	259:4:7358:7382	415815	2	True				
ANR	416389	AssignmentExpression	data [ l ++ ] = offset >> 24		415815	0		=			
ANR	416390	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416391	Identifier	data		415815	0					
ANR	416392	PostIncDecOperationExpression	l ++		415815	1					
ANR	416393	Identifier	l		415815	0					
ANR	416394	IncDec	++		415815	1					
ANR	416395	ShiftExpression	offset >> 24		415815	1		>>			
ANR	416396	Identifier	offset		415815	0					
ANR	416397	PrimaryExpression	24		415815	1					
ANR	416398	ElseStatement	else		415815	0					
ANR	416399	CompoundStatement		76:8:1912:1912	415815	0					
ANR	416400	IfStatement	if ( op -> operands [ 1 ] . immediate > 127 && op -> operands [ 0 ] . reg == X86R_EAX )		415815	0					
ANR	416401	Condition	op -> operands [ 1 ] . immediate > 127 && op -> operands [ 0 ] . reg == X86R_EAX	263:6:7409:7474	415815	0	True				
ANR	416402	AndExpression	op -> operands [ 1 ] . immediate > 127 && op -> operands [ 0 ] . reg == X86R_EAX		415815	0		&&			
ANR	416403	RelationalExpression	op -> operands [ 1 ] . immediate > 127		415815	0		>			
ANR	416404	MemberAccess	op -> operands [ 1 ] . immediate		415815	0					
ANR	416405	ArrayIndexing	op -> operands [ 1 ]		415815	0					
ANR	416406	PtrMemberAccess	op -> operands		415815	0					
ANR	416407	Identifier	op		415815	0					
ANR	416408	Identifier	operands		415815	1					
ANR	416409	PrimaryExpression	1		415815	1					
ANR	416410	Identifier	immediate		415815	1					
ANR	416411	PrimaryExpression	127		415815	1					
ANR	416412	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		415815	1		==			
ANR	416413	MemberAccess	op -> operands [ 0 ] . reg		415815	0					
ANR	416414	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416415	PtrMemberAccess	op -> operands		415815	0					
ANR	416416	Identifier	op		415815	0					
ANR	416417	Identifier	operands		415815	1					
ANR	416418	PrimaryExpression	0		415815	1					
ANR	416419	Identifier	reg		415815	1					
ANR	416420	Identifier	X86R_EAX		415815	1					
ANR	416421	CompoundStatement		77:74:1988:1988	415815	1					
ANR	416422	ExpressionStatement	data [ l ++ ] = 5 | modrm << 3 | op -> operands [ 0 ] . reg	264:3:7482:7530	415815	0	True				
ANR	416423	AssignmentExpression	data [ l ++ ] = 5 | modrm << 3 | op -> operands [ 0 ] . reg		415815	0		=			
ANR	416424	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416425	Identifier	data		415815	0					
ANR	416426	PostIncDecOperationExpression	l ++		415815	1					
ANR	416427	Identifier	l		415815	0					
ANR	416428	IncDec	++		415815	1					
ANR	416429	InclusiveOrExpression	5 | modrm << 3 | op -> operands [ 0 ] . reg		415815	1		|			
ANR	416430	PrimaryExpression	5		415815	0					
ANR	416431	InclusiveOrExpression	modrm << 3 | op -> operands [ 0 ] . reg		415815	1		|			
ANR	416432	ShiftExpression	modrm << 3		415815	0		<<			
ANR	416433	Identifier	modrm		415815	0					
ANR	416434	PrimaryExpression	3		415815	1					
ANR	416435	MemberAccess	op -> operands [ 0 ] . reg		415815	1					
ANR	416436	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416437	PtrMemberAccess	op -> operands		415815	0					
ANR	416438	Identifier	op		415815	0					
ANR	416439	Identifier	operands		415815	1					
ANR	416440	PrimaryExpression	0		415815	1					
ANR	416441	Identifier	reg		415815	1					
ANR	416442	ElseStatement	else		415815	0					
ANR	416443	CompoundStatement		79:9:2052:2052	415815	0					
ANR	416444	ExpressionStatement	mod_byte = 3	266:3:7546:7558	415815	0	True				
ANR	416445	AssignmentExpression	mod_byte = 3		415815	0		=			
ANR	416446	Identifier	mod_byte		415815	0					
ANR	416447	PrimaryExpression	3		415815	1					
ANR	416448	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | modrm << 3 | op -> operands [ 0 ] . reg	267:3:7563:7623	415815	1	True				
ANR	416449	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | modrm << 3 | op -> operands [ 0 ] . reg		415815	0		=			
ANR	416450	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416451	Identifier	data		415815	0					
ANR	416452	PostIncDecOperationExpression	l ++		415815	1					
ANR	416453	Identifier	l		415815	0					
ANR	416454	IncDec	++		415815	1					
ANR	416455	InclusiveOrExpression	mod_byte << 6 | modrm << 3 | op -> operands [ 0 ] . reg		415815	1		|			
ANR	416456	ShiftExpression	mod_byte << 6		415815	0		<<			
ANR	416457	Identifier	mod_byte		415815	0					
ANR	416458	PrimaryExpression	6		415815	1					
ANR	416459	InclusiveOrExpression	modrm << 3 | op -> operands [ 0 ] . reg		415815	1		|			
ANR	416460	ShiftExpression	modrm << 3		415815	0		<<			
ANR	416461	Identifier	modrm		415815	0					
ANR	416462	PrimaryExpression	3		415815	1					
ANR	416463	MemberAccess	op -> operands [ 0 ] . reg		415815	1					
ANR	416464	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416465	PtrMemberAccess	op -> operands		415815	0					
ANR	416466	Identifier	op		415815	0					
ANR	416467	Identifier	operands		415815	1					
ANR	416468	PrimaryExpression	0		415815	1					
ANR	416469	Identifier	reg		415815	1					
ANR	416470	ExpressionStatement	data [ l ++ ] = immediate	272:1:7635:7656	415815	13	True				
ANR	416471	AssignmentExpression	data [ l ++ ] = immediate		415815	0		=			
ANR	416472	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416473	Identifier	data		415815	0					
ANR	416474	PostIncDecOperationExpression	l ++		415815	1					
ANR	416475	Identifier	l		415815	0					
ANR	416476	IncDec	++		415815	1					
ANR	416477	Identifier	immediate		415815	1					
ANR	416478	IfStatement	if ( ( immediate > 127 || immediate < - 128 ) && ( ( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD ) ) )		415815	14					
ANR	416479	Condition	( immediate > 127 || immediate < - 128 ) && ( ( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD ) )	273:5:7663:7780	415815	0	True				
ANR	416480	AndExpression	( immediate > 127 || immediate < - 128 ) && ( ( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD ) )		415815	0		&&			
ANR	416481	OrExpression	immediate > 127 || immediate < - 128		415815	0		||			
ANR	416482	RelationalExpression	immediate > 127		415815	0		>			
ANR	416483	Identifier	immediate		415815	0					
ANR	416484	PrimaryExpression	127		415815	1					
ANR	416485	RelationalExpression	immediate < - 128		415815	1		<			
ANR	416486	Identifier	immediate		415815	0					
ANR	416487	UnaryOperationExpression	- 128		415815	1					
ANR	416488	UnaryOperator	-		415815	0					
ANR	416489	PrimaryExpression	128		415815	1					
ANR	416490	OrExpression	( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD )		415815	1		||			
ANR	416491	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		415815	0		&			
ANR	416492	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416493	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416494	PtrMemberAccess	op -> operands		415815	0					
ANR	416495	Identifier	op		415815	0					
ANR	416496	Identifier	operands		415815	1					
ANR	416497	PrimaryExpression	0		415815	1					
ANR	416498	Identifier	type		415815	1					
ANR	416499	Identifier	OT_DWORD		415815	1					
ANR	416500	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		415815	1		&			
ANR	416501	MemberAccess	op -> operands [ 0 ] . type		415815	0					
ANR	416502	ArrayIndexing	op -> operands [ 0 ]		415815	0					
ANR	416503	PtrMemberAccess	op -> operands		415815	0					
ANR	416504	Identifier	op		415815	0					
ANR	416505	Identifier	operands		415815	1					
ANR	416506	PrimaryExpression	0		415815	1					
ANR	416507	Identifier	type		415815	1					
ANR	416508	Identifier	OT_QWORD		415815	1					
ANR	416509	CompoundStatement		88:79:2294:2294	415815	1					
ANR	416510	ExpressionStatement	data [ l ++ ] = immediate >> 8	275:2:7787:7813	415815	0	True				
ANR	416511	AssignmentExpression	data [ l ++ ] = immediate >> 8		415815	0		=			
ANR	416512	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416513	Identifier	data		415815	0					
ANR	416514	PostIncDecOperationExpression	l ++		415815	1					
ANR	416515	Identifier	l		415815	0					
ANR	416516	IncDec	++		415815	1					
ANR	416517	ShiftExpression	immediate >> 8		415815	1		>>			
ANR	416518	Identifier	immediate		415815	0					
ANR	416519	PrimaryExpression	8		415815	1					
ANR	416520	ExpressionStatement	data [ l ++ ] = immediate >> 16	276:2:7817:7844	415815	1	True				
ANR	416521	AssignmentExpression	data [ l ++ ] = immediate >> 16		415815	0		=			
ANR	416522	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416523	Identifier	data		415815	0					
ANR	416524	PostIncDecOperationExpression	l ++		415815	1					
ANR	416525	Identifier	l		415815	0					
ANR	416526	IncDec	++		415815	1					
ANR	416527	ShiftExpression	immediate >> 16		415815	1		>>			
ANR	416528	Identifier	immediate		415815	0					
ANR	416529	PrimaryExpression	16		415815	1					
ANR	416530	ExpressionStatement	data [ l ++ ] = immediate >> 24	277:2:7848:7875	415815	2	True				
ANR	416531	AssignmentExpression	data [ l ++ ] = immediate >> 24		415815	0		=			
ANR	416532	ArrayIndexing	data [ l ++ ]		415815	0					
ANR	416533	Identifier	data		415815	0					
ANR	416534	PostIncDecOperationExpression	l ++		415815	1					
ANR	416535	Identifier	l		415815	0					
ANR	416536	IncDec	++		415815	1					
ANR	416537	ShiftExpression	immediate >> 24		415815	1		>>			
ANR	416538	Identifier	immediate		415815	0					
ANR	416539	PrimaryExpression	24		415815	1					
ANR	416540	ReturnStatement	return l ;	279:1:7881:7889	415815	15	True				
ANR	416541	Identifier	l		415815	0					
ANR	416542	ReturnType	static int		415815	1					
ANR	416543	Identifier	process_group_1		415815	2					
ANR	416544	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		415815	3					
ANR	416545	Parameter	RAsm * a	187:27:5450:5456	415815	0	True				
ANR	416546	ParameterType	RAsm *		415815	0					
ANR	416547	Identifier	a		415815	1					
ANR	416548	Parameter	ut8 * data	187:36:5459:5467	415815	1	True				
ANR	416549	ParameterType	ut8 *		415815	0					
ANR	416550	Identifier	data		415815	1					
ANR	416551	Parameter	const Opcode * op	187:47:5470:5485	415815	2	True				
ANR	416552	ParameterType	const Opcode *		415815	0					
ANR	416553	Identifier	op		415815	1					
ANR	416554	CFGEntryNode	ENTRY		415815		True				
ANR	416555	CFGExitNode	EXIT		415815		True				
ANR	416556	Symbol	op -> operands [ 0 ] . offset_sign		415815						
ANR	416557	Symbol	ST8_MAX		415815						
ANR	416558	Symbol	OT_QWORD		415815						
ANR	416559	Symbol	data		415815						
ANR	416560	Symbol	* op		415815						
ANR	416561	Symbol	op -> mnemonic		415815						
ANR	416562	Symbol	X86R_ESP		415815						
ANR	416563	Symbol	X86R_EBP		415815						
ANR	416564	Symbol	op -> operands [ 1 ] . immediate		415815						
ANR	416565	Symbol	modrm		415815						
ANR	416566	Symbol	* * op		415815						
ANR	416567	Symbol	* op -> operands		415815						
ANR	416568	Symbol	ST8_MIN		415815						
ANR	416569	Symbol	op -> operands [ 0 ] . type		415815						
ANR	416570	Symbol	op -> operands [ 0 ] . reg		415815						
ANR	416571	Symbol	op -> operands [ 0 ] . offset		415815						
ANR	416572	Symbol	OT_MEMORY		415815						
ANR	416573	Symbol	op -> operands [ 1 ] . is_good_flag		415815						
ANR	416574	Symbol	a -> bits		415815						
ANR	416575	Symbol	OT_BYTE		415815						
ANR	416576	Symbol	strcmp		415815						
ANR	416577	Symbol	X86R_EAX		415815						
ANR	416578	Symbol	a		415815						
ANR	416579	Symbol	op		415815						
ANR	416580	Symbol	mod_byte		415815						
ANR	416581	Symbol	offset		415815						
ANR	416582	Symbol	mem_ref		415815						
ANR	416583	Symbol	reg0		415815						
ANR	416584	Symbol	* a		415815						
ANR	416585	Symbol	* * op -> operands		415815						
ANR	416586	Symbol	l		415815						
ANR	416587	Symbol	immediate		415815						
ANR	416588	Symbol	op -> operands [ 1 ] . sign		415815						
ANR	416589	Symbol	* op -> operands [ 0 ] . regs		415815						
ANR	416590	Symbol	* * * op		415815						
ANR	416591	Symbol	op -> operands		415815						
ANR	416592	Symbol	* data		415815						
ANR	416593	Symbol	op -> operands [ 0 ] . regs		415815						
ANR	416594	Symbol	OT_DWORD		415815						
ANR	416595	Function	process_group_2	282:0:7894:9765							
ANR	416596	FunctionDef	"process_group_2 (RAsm * a , ut8 * data , const Opcode * op)"		416595	0					
ANR	416597	CompoundStatement		282:65:7959:9765	416595	0					
ANR	416598	ExpressionStatement	is_valid_registers ( op )	283:1:7962:7985	416595	0	True				
ANR	416599	CallExpression	is_valid_registers ( op )		416595	0					
ANR	416600	Callee	is_valid_registers		416595	0					
ANR	416601	Identifier	is_valid_registers		416595	0					
ANR	416602	ArgumentList	op		416595	1					
ANR	416603	Argument	op		416595	0					
ANR	416604	Identifier	op		416595	0					
ANR	416605	IdentifierDeclStatement	int l = 0 ;	284:1:7988:7997	416595	1	True				
ANR	416606	IdentifierDecl	l = 0		416595	0					
ANR	416607	IdentifierDeclType	int		416595	0					
ANR	416608	Identifier	l		416595	1					
ANR	416609	AssignmentExpression	l = 0		416595	2		=			
ANR	416610	Identifier	l		416595	0					
ANR	416611	PrimaryExpression	0		416595	1					
ANR	416612	IdentifierDeclStatement	int modrm = 0 ;	285:1:8000:8013	416595	2	True				
ANR	416613	IdentifierDecl	modrm = 0		416595	0					
ANR	416614	IdentifierDeclType	int		416595	0					
ANR	416615	Identifier	modrm		416595	1					
ANR	416616	AssignmentExpression	modrm = 0		416595	2		=			
ANR	416617	Identifier	modrm		416595	0					
ANR	416618	PrimaryExpression	0		416595	1					
ANR	416619	IdentifierDeclStatement	int mod_byte = 0 ;	286:1:8016:8032	416595	3	True				
ANR	416620	IdentifierDecl	mod_byte = 0		416595	0					
ANR	416621	IdentifierDeclType	int		416595	0					
ANR	416622	Identifier	mod_byte		416595	1					
ANR	416623	AssignmentExpression	mod_byte = 0		416595	2		=			
ANR	416624	Identifier	mod_byte		416595	0					
ANR	416625	PrimaryExpression	0		416595	1					
ANR	416626	IdentifierDeclStatement	int reg0 = 0 ;	287:1:8035:8047	416595	4	True				
ANR	416627	IdentifierDecl	reg0 = 0		416595	0					
ANR	416628	IdentifierDeclType	int		416595	0					
ANR	416629	Identifier	reg0		416595	1					
ANR	416630	AssignmentExpression	reg0 = 0		416595	2		=			
ANR	416631	Identifier	reg0		416595	0					
ANR	416632	PrimaryExpression	0		416595	1					
ANR	416633	IfStatement	if ( a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD )		416595	5					
ANR	416634	Condition	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD	289:5:8055:8102	416595	0	True				
ANR	416635	AndExpression	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD		416595	0		&&			
ANR	416636	EqualityExpression	a -> bits == 64		416595	0		==			
ANR	416637	PtrMemberAccess	a -> bits		416595	0					
ANR	416638	Identifier	a		416595	0					
ANR	416639	Identifier	bits		416595	1					
ANR	416640	PrimaryExpression	64		416595	1					
ANR	416641	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		416595	1		&			
ANR	416642	MemberAccess	op -> operands [ 0 ] . type		416595	0					
ANR	416643	ArrayIndexing	op -> operands [ 0 ]		416595	0					
ANR	416644	PtrMemberAccess	op -> operands		416595	0					
ANR	416645	Identifier	op		416595	0					
ANR	416646	Identifier	operands		416595	1					
ANR	416647	PrimaryExpression	0		416595	1					
ANR	416648	Identifier	type		416595	1					
ANR	416649	Identifier	OT_QWORD		416595	1					
ANR	416650	CompoundStatement		8:55:145:145	416595	1					
ANR	416651	ExpressionStatement	data [ l ++ ] = 0x48	289:57:8107:8123	416595	0	True				
ANR	416652	AssignmentExpression	data [ l ++ ] = 0x48		416595	0		=			
ANR	416653	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416654	Identifier	data		416595	0					
ANR	416655	PostIncDecOperationExpression	l ++		416595	1					
ANR	416656	Identifier	l		416595	0					
ANR	416657	IncDec	++		416595	1					
ANR	416658	PrimaryExpression	0x48		416595	1					
ANR	416659	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rol"" ) )"		416595	6					
ANR	416660	Condition	"! strcmp ( op -> mnemonic , ""rol"" )"	291:5:8133:8161	416595	0	True				
ANR	416661	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rol"" )"		416595	0					
ANR	416662	UnaryOperator	!		416595	0					
ANR	416663	CallExpression	"strcmp ( op -> mnemonic , ""rol"" )"		416595	1					
ANR	416664	Callee	strcmp		416595	0					
ANR	416665	Identifier	strcmp		416595	0					
ANR	416666	ArgumentList	op -> mnemonic		416595	1					
ANR	416667	Argument	op -> mnemonic		416595	0					
ANR	416668	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416669	Identifier	op		416595	0					
ANR	416670	Identifier	mnemonic		416595	1					
ANR	416671	Argument	"""rol"""		416595	1					
ANR	416672	PrimaryExpression	"""rol"""		416595	0					
ANR	416673	CompoundStatement		10:36:204:204	416595	1					
ANR	416674	ExpressionStatement	modrm = 0	292:2:8168:8177	416595	0	True				
ANR	416675	AssignmentExpression	modrm = 0		416595	0		=			
ANR	416676	Identifier	modrm		416595	0					
ANR	416677	PrimaryExpression	0		416595	1					
ANR	416678	ElseStatement	else		416595	0					
ANR	416679	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""ror"" ) )"		416595	0					
ANR	416680	Condition	"! strcmp ( op -> mnemonic , ""ror"" )"	293:12:8191:8219	416595	0	True				
ANR	416681	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""ror"" )"		416595	0					
ANR	416682	UnaryOperator	!		416595	0					
ANR	416683	CallExpression	"strcmp ( op -> mnemonic , ""ror"" )"		416595	1					
ANR	416684	Callee	strcmp		416595	0					
ANR	416685	Identifier	strcmp		416595	0					
ANR	416686	ArgumentList	op -> mnemonic		416595	1					
ANR	416687	Argument	op -> mnemonic		416595	0					
ANR	416688	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416689	Identifier	op		416595	0					
ANR	416690	Identifier	mnemonic		416595	1					
ANR	416691	Argument	"""ror"""		416595	1					
ANR	416692	PrimaryExpression	"""ror"""		416595	0					
ANR	416693	CompoundStatement		12:43:262:262	416595	1					
ANR	416694	ExpressionStatement	modrm = 1	294:2:8226:8235	416595	0	True				
ANR	416695	AssignmentExpression	modrm = 1		416595	0		=			
ANR	416696	Identifier	modrm		416595	0					
ANR	416697	PrimaryExpression	1		416595	1					
ANR	416698	ElseStatement	else		416595	0					
ANR	416699	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rcl"" ) )"		416595	0					
ANR	416700	Condition	"! strcmp ( op -> mnemonic , ""rcl"" )"	295:12:8249:8277	416595	0	True				
ANR	416701	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rcl"" )"		416595	0					
ANR	416702	UnaryOperator	!		416595	0					
ANR	416703	CallExpression	"strcmp ( op -> mnemonic , ""rcl"" )"		416595	1					
ANR	416704	Callee	strcmp		416595	0					
ANR	416705	Identifier	strcmp		416595	0					
ANR	416706	ArgumentList	op -> mnemonic		416595	1					
ANR	416707	Argument	op -> mnemonic		416595	0					
ANR	416708	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416709	Identifier	op		416595	0					
ANR	416710	Identifier	mnemonic		416595	1					
ANR	416711	Argument	"""rcl"""		416595	1					
ANR	416712	PrimaryExpression	"""rcl"""		416595	0					
ANR	416713	CompoundStatement		14:43:320:320	416595	1					
ANR	416714	ExpressionStatement	modrm = 2	296:2:8284:8293	416595	0	True				
ANR	416715	AssignmentExpression	modrm = 2		416595	0		=			
ANR	416716	Identifier	modrm		416595	0					
ANR	416717	PrimaryExpression	2		416595	1					
ANR	416718	ElseStatement	else		416595	0					
ANR	416719	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rcr"" ) )"		416595	0					
ANR	416720	Condition	"! strcmp ( op -> mnemonic , ""rcr"" )"	297:12:8307:8335	416595	0	True				
ANR	416721	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rcr"" )"		416595	0					
ANR	416722	UnaryOperator	!		416595	0					
ANR	416723	CallExpression	"strcmp ( op -> mnemonic , ""rcr"" )"		416595	1					
ANR	416724	Callee	strcmp		416595	0					
ANR	416725	Identifier	strcmp		416595	0					
ANR	416726	ArgumentList	op -> mnemonic		416595	1					
ANR	416727	Argument	op -> mnemonic		416595	0					
ANR	416728	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416729	Identifier	op		416595	0					
ANR	416730	Identifier	mnemonic		416595	1					
ANR	416731	Argument	"""rcr"""		416595	1					
ANR	416732	PrimaryExpression	"""rcr"""		416595	0					
ANR	416733	CompoundStatement		16:43:378:378	416595	1					
ANR	416734	ExpressionStatement	modrm = 3	298:2:8342:8351	416595	0	True				
ANR	416735	AssignmentExpression	modrm = 3		416595	0		=			
ANR	416736	Identifier	modrm		416595	0					
ANR	416737	PrimaryExpression	3		416595	1					
ANR	416738	ElseStatement	else		416595	0					
ANR	416739	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""shl"" ) )"		416595	0					
ANR	416740	Condition	"! strcmp ( op -> mnemonic , ""shl"" )"	299:12:8365:8393	416595	0	True				
ANR	416741	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""shl"" )"		416595	0					
ANR	416742	UnaryOperator	!		416595	0					
ANR	416743	CallExpression	"strcmp ( op -> mnemonic , ""shl"" )"		416595	1					
ANR	416744	Callee	strcmp		416595	0					
ANR	416745	Identifier	strcmp		416595	0					
ANR	416746	ArgumentList	op -> mnemonic		416595	1					
ANR	416747	Argument	op -> mnemonic		416595	0					
ANR	416748	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416749	Identifier	op		416595	0					
ANR	416750	Identifier	mnemonic		416595	1					
ANR	416751	Argument	"""shl"""		416595	1					
ANR	416752	PrimaryExpression	"""shl"""		416595	0					
ANR	416753	CompoundStatement		18:43:436:436	416595	1					
ANR	416754	ExpressionStatement	modrm = 4	300:2:8400:8409	416595	0	True				
ANR	416755	AssignmentExpression	modrm = 4		416595	0		=			
ANR	416756	Identifier	modrm		416595	0					
ANR	416757	PrimaryExpression	4		416595	1					
ANR	416758	ElseStatement	else		416595	0					
ANR	416759	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""shr"" ) )"		416595	0					
ANR	416760	Condition	"! strcmp ( op -> mnemonic , ""shr"" )"	301:12:8423:8451	416595	0	True				
ANR	416761	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""shr"" )"		416595	0					
ANR	416762	UnaryOperator	!		416595	0					
ANR	416763	CallExpression	"strcmp ( op -> mnemonic , ""shr"" )"		416595	1					
ANR	416764	Callee	strcmp		416595	0					
ANR	416765	Identifier	strcmp		416595	0					
ANR	416766	ArgumentList	op -> mnemonic		416595	1					
ANR	416767	Argument	op -> mnemonic		416595	0					
ANR	416768	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416769	Identifier	op		416595	0					
ANR	416770	Identifier	mnemonic		416595	1					
ANR	416771	Argument	"""shr"""		416595	1					
ANR	416772	PrimaryExpression	"""shr"""		416595	0					
ANR	416773	CompoundStatement		20:43:494:494	416595	1					
ANR	416774	ExpressionStatement	modrm = 5	302:2:8458:8467	416595	0	True				
ANR	416775	AssignmentExpression	modrm = 5		416595	0		=			
ANR	416776	Identifier	modrm		416595	0					
ANR	416777	PrimaryExpression	5		416595	1					
ANR	416778	ElseStatement	else		416595	0					
ANR	416779	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sal"" ) )"		416595	0					
ANR	416780	Condition	"! strcmp ( op -> mnemonic , ""sal"" )"	303:12:8481:8509	416595	0	True				
ANR	416781	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sal"" )"		416595	0					
ANR	416782	UnaryOperator	!		416595	0					
ANR	416783	CallExpression	"strcmp ( op -> mnemonic , ""sal"" )"		416595	1					
ANR	416784	Callee	strcmp		416595	0					
ANR	416785	Identifier	strcmp		416595	0					
ANR	416786	ArgumentList	op -> mnemonic		416595	1					
ANR	416787	Argument	op -> mnemonic		416595	0					
ANR	416788	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416789	Identifier	op		416595	0					
ANR	416790	Identifier	mnemonic		416595	1					
ANR	416791	Argument	"""sal"""		416595	1					
ANR	416792	PrimaryExpression	"""sal"""		416595	0					
ANR	416793	CompoundStatement		22:43:552:552	416595	1					
ANR	416794	ExpressionStatement	modrm = 6	304:2:8516:8525	416595	0	True				
ANR	416795	AssignmentExpression	modrm = 6		416595	0		=			
ANR	416796	Identifier	modrm		416595	0					
ANR	416797	PrimaryExpression	6		416595	1					
ANR	416798	ElseStatement	else		416595	0					
ANR	416799	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sar"" ) )"		416595	0					
ANR	416800	Condition	"! strcmp ( op -> mnemonic , ""sar"" )"	305:12:8539:8567	416595	0	True				
ANR	416801	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sar"" )"		416595	0					
ANR	416802	UnaryOperator	!		416595	0					
ANR	416803	CallExpression	"strcmp ( op -> mnemonic , ""sar"" )"		416595	1					
ANR	416804	Callee	strcmp		416595	0					
ANR	416805	Identifier	strcmp		416595	0					
ANR	416806	ArgumentList	op -> mnemonic		416595	1					
ANR	416807	Argument	op -> mnemonic		416595	0					
ANR	416808	PtrMemberAccess	op -> mnemonic		416595	0					
ANR	416809	Identifier	op		416595	0					
ANR	416810	Identifier	mnemonic		416595	1					
ANR	416811	Argument	"""sar"""		416595	1					
ANR	416812	PrimaryExpression	"""sar"""		416595	0					
ANR	416813	CompoundStatement		24:43:610:610	416595	1					
ANR	416814	ExpressionStatement	modrm = 7	306:2:8574:8583	416595	0	True				
ANR	416815	AssignmentExpression	modrm = 7		416595	0		=			
ANR	416816	Identifier	modrm		416595	0					
ANR	416817	PrimaryExpression	7		416595	1					
ANR	416818	IdentifierDeclStatement	st32 immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign ;	309:1:8590:8655	416595	7	True				
ANR	416819	IdentifierDecl	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		416595	0					
ANR	416820	IdentifierDeclType	st32		416595	0					
ANR	416821	Identifier	immediate		416595	1					
ANR	416822	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		416595	2		=			
ANR	416823	Identifier	immediate		416595	0					
ANR	416824	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		416595	1		*			
ANR	416825	MemberAccess	op -> operands [ 1 ] . immediate		416595	0					
ANR	416826	ArrayIndexing	op -> operands [ 1 ]		416595	0					
ANR	416827	PtrMemberAccess	op -> operands		416595	0					
ANR	416828	Identifier	op		416595	0					
ANR	416829	Identifier	operands		416595	1					
ANR	416830	PrimaryExpression	1		416595	1					
ANR	416831	Identifier	immediate		416595	1					
ANR	416832	MemberAccess	op -> operands [ 1 ] . sign		416595	1					
ANR	416833	ArrayIndexing	op -> operands [ 1 ]		416595	0					
ANR	416834	PtrMemberAccess	op -> operands		416595	0					
ANR	416835	Identifier	op		416595	0					
ANR	416836	Identifier	operands		416595	1					
ANR	416837	PrimaryExpression	1		416595	1					
ANR	416838	Identifier	sign		416595	1					
ANR	416839	IfStatement	if ( immediate > 255 || immediate < - 128 )		416595	8					
ANR	416840	Condition	immediate > 255 || immediate < - 128	310:5:8662:8696	416595	0	True				
ANR	416841	OrExpression	immediate > 255 || immediate < - 128		416595	0		||			
ANR	416842	RelationalExpression	immediate > 255		416595	0		>			
ANR	416843	Identifier	immediate		416595	0					
ANR	416844	PrimaryExpression	255		416595	1					
ANR	416845	RelationalExpression	immediate < - 128		416595	1		<			
ANR	416846	Identifier	immediate		416595	0					
ANR	416847	UnaryOperationExpression	- 128		416595	1					
ANR	416848	UnaryOperator	-		416595	0					
ANR	416849	PrimaryExpression	128		416595	1					
ANR	416850	CompoundStatement		29:42:739:739	416595	1					
ANR	416851	ExpressionStatement	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"	311:2:8703:8748	416595	0	True				
ANR	416852	CallExpression	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"		416595	0					
ANR	416853	Callee	eprintf		416595	0					
ANR	416854	Identifier	eprintf		416595	0					
ANR	416855	ArgumentList	"""Error: Immediate exceeds bounds\\n"""		416595	1					
ANR	416856	Argument	"""Error: Immediate exceeds bounds\\n"""		416595	0					
ANR	416857	PrimaryExpression	"""Error: Immediate exceeds bounds\\n"""		416595	0					
ANR	416858	ReturnStatement	return - 1 ;	312:2:8752:8761	416595	1	True				
ANR	416859	UnaryOperationExpression	- 1		416595	0					
ANR	416860	UnaryOperator	-		416595	0					
ANR	416861	PrimaryExpression	1		416595	1					
ANR	416862	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) )		416595	9					
ANR	416863	Condition	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )	315:5:8772:8815	416595	0	True				
ANR	416864	BitAndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )		416595	0		&			
ANR	416865	MemberAccess	op -> operands [ 0 ] . type		416595	0					
ANR	416866	ArrayIndexing	op -> operands [ 0 ]		416595	0					
ANR	416867	PtrMemberAccess	op -> operands		416595	0					
ANR	416868	Identifier	op		416595	0					
ANR	416869	Identifier	operands		416595	1					
ANR	416870	PrimaryExpression	0		416595	1					
ANR	416871	Identifier	type		416595	1					
ANR	416872	InclusiveOrExpression	OT_DWORD | OT_QWORD		416595	1		|			
ANR	416873	Identifier	OT_DWORD		416595	0					
ANR	416874	Identifier	OT_QWORD		416595	1					
ANR	416875	CompoundStatement		34:51:858:858	416595	1					
ANR	416876	IfStatement	if ( op -> operands [ 1 ] . type & ( OT_GPREG | OT_BYTE ) )		416595	0					
ANR	416877	Condition	op -> operands [ 1 ] . type & ( OT_GPREG | OT_BYTE )	316:6:8826:8868	416595	0	True				
ANR	416878	BitAndExpression	op -> operands [ 1 ] . type & ( OT_GPREG | OT_BYTE )		416595	0		&			
ANR	416879	MemberAccess	op -> operands [ 1 ] . type		416595	0					
ANR	416880	ArrayIndexing	op -> operands [ 1 ]		416595	0					
ANR	416881	PtrMemberAccess	op -> operands		416595	0					
ANR	416882	Identifier	op		416595	0					
ANR	416883	Identifier	operands		416595	1					
ANR	416884	PrimaryExpression	1		416595	1					
ANR	416885	Identifier	type		416595	1					
ANR	416886	InclusiveOrExpression	OT_GPREG | OT_BYTE		416595	1		|			
ANR	416887	Identifier	OT_GPREG		416595	0					
ANR	416888	Identifier	OT_BYTE		416595	1					
ANR	416889	CompoundStatement		35:51:911:911	416595	1					
ANR	416890	ExpressionStatement	data [ l ++ ] = 0xd3	317:3:8876:8892	416595	0	True				
ANR	416891	AssignmentExpression	data [ l ++ ] = 0xd3		416595	0		=			
ANR	416892	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416893	Identifier	data		416595	0					
ANR	416894	PostIncDecOperationExpression	l ++		416595	1					
ANR	416895	Identifier	l		416595	0					
ANR	416896	IncDec	++		416595	1					
ANR	416897	PrimaryExpression	0xd3		416595	1					
ANR	416898	ElseStatement	else		416595	0					
ANR	416899	IfStatement	if ( immediate == 1 )		416595	0					
ANR	416900	Condition	immediate == 1	318:13:8907:8920	416595	0	True				
ANR	416901	EqualityExpression	immediate == 1		416595	0		==			
ANR	416902	Identifier	immediate		416595	0					
ANR	416903	PrimaryExpression	1		416595	1					
ANR	416904	CompoundStatement		37:29:963:963	416595	1					
ANR	416905	ExpressionStatement	data [ l ++ ] = 0xd1	319:3:8928:8944	416595	0	True				
ANR	416906	AssignmentExpression	data [ l ++ ] = 0xd1		416595	0		=			
ANR	416907	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416908	Identifier	data		416595	0					
ANR	416909	PostIncDecOperationExpression	l ++		416595	1					
ANR	416910	Identifier	l		416595	0					
ANR	416911	IncDec	++		416595	1					
ANR	416912	PrimaryExpression	0xd1		416595	1					
ANR	416913	ElseStatement	else		416595	0					
ANR	416914	CompoundStatement		39:9:995:995	416595	0					
ANR	416915	ExpressionStatement	data [ l ++ ] = 0xc1	321:3:8960:8976	416595	0	True				
ANR	416916	AssignmentExpression	data [ l ++ ] = 0xc1		416595	0		=			
ANR	416917	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416918	Identifier	data		416595	0					
ANR	416919	PostIncDecOperationExpression	l ++		416595	1					
ANR	416920	Identifier	l		416595	0					
ANR	416921	IncDec	++		416595	1					
ANR	416922	PrimaryExpression	0xc1		416595	1					
ANR	416923	ElseStatement	else		416595	0					
ANR	416924	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		416595	0					
ANR	416925	Condition	op -> operands [ 0 ] . type & OT_BYTE	323:12:8994:9023	416595	0	True				
ANR	416926	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		416595	0		&			
ANR	416927	MemberAccess	op -> operands [ 0 ] . type		416595	0					
ANR	416928	ArrayIndexing	op -> operands [ 0 ]		416595	0					
ANR	416929	PtrMemberAccess	op -> operands		416595	0					
ANR	416930	Identifier	op		416595	0					
ANR	416931	Identifier	operands		416595	1					
ANR	416932	PrimaryExpression	0		416595	1					
ANR	416933	Identifier	type		416595	1					
ANR	416934	Identifier	OT_BYTE		416595	1					
ANR	416935	CompoundStatement		43:2:1070:1105	416595	1					
ANR	416936	IdentifierDeclStatement	const Operand * o = & op -> operands [ 0 ] ;	324:2:9030:9065	416595	0	True				
ANR	416937	IdentifierDecl	* o = & op -> operands [ 0 ]		416595	0					
ANR	416938	IdentifierDeclType	const Operand *		416595	0					
ANR	416939	Identifier	o		416595	1					
ANR	416940	AssignmentExpression	* o = & op -> operands [ 0 ]		416595	2		=			
ANR	416941	Identifier	o		416595	0					
ANR	416942	UnaryOperationExpression	& op -> operands [ 0 ]		416595	1					
ANR	416943	UnaryOperator	&		416595	0					
ANR	416944	ArrayIndexing	op -> operands [ 0 ]		416595	1					
ANR	416945	PtrMemberAccess	op -> operands		416595	0					
ANR	416946	Identifier	op		416595	0					
ANR	416947	Identifier	operands		416595	1					
ANR	416948	PrimaryExpression	0		416595	1					
ANR	416949	IfStatement	if ( o -> regs [ 0 ] != - 1 && o -> regs [ 1 ] != - 1 )		416595	1					
ANR	416950	Condition	o -> regs [ 0 ] != - 1 && o -> regs [ 1 ] != - 1	325:6:9073:9108	416595	0	True				
ANR	416951	AndExpression	o -> regs [ 0 ] != - 1 && o -> regs [ 1 ] != - 1		416595	0		&&			
ANR	416952	EqualityExpression	o -> regs [ 0 ] != - 1		416595	0		!=			
ANR	416953	ArrayIndexing	o -> regs [ 0 ]		416595	0					
ANR	416954	PtrMemberAccess	o -> regs		416595	0					
ANR	416955	Identifier	o		416595	0					
ANR	416956	Identifier	regs		416595	1					
ANR	416957	PrimaryExpression	0		416595	1					
ANR	416958	UnaryOperationExpression	- 1		416595	1					
ANR	416959	UnaryOperator	-		416595	0					
ANR	416960	PrimaryExpression	1		416595	1					
ANR	416961	EqualityExpression	o -> regs [ 1 ] != - 1		416595	1		!=			
ANR	416962	ArrayIndexing	o -> regs [ 1 ]		416595	0					
ANR	416963	PtrMemberAccess	o -> regs		416595	0					
ANR	416964	Identifier	o		416595	0					
ANR	416965	Identifier	regs		416595	1					
ANR	416966	PrimaryExpression	1		416595	1					
ANR	416967	UnaryOperationExpression	- 1		416595	1					
ANR	416968	UnaryOperator	-		416595	0					
ANR	416969	PrimaryExpression	1		416595	1					
ANR	416970	CompoundStatement		44:44:1151:1151	416595	1					
ANR	416971	ExpressionStatement	data [ l ++ ] = 0xc0	326:3:9116:9132	416595	0	True				
ANR	416972	AssignmentExpression	data [ l ++ ] = 0xc0		416595	0		=			
ANR	416973	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416974	Identifier	data		416595	0					
ANR	416975	PostIncDecOperationExpression	l ++		416595	1					
ANR	416976	Identifier	l		416595	0					
ANR	416977	IncDec	++		416595	1					
ANR	416978	PrimaryExpression	0xc0		416595	1					
ANR	416979	ExpressionStatement	data [ l ++ ] = 0x44	327:3:9137:9153	416595	1	True				
ANR	416980	AssignmentExpression	data [ l ++ ] = 0x44		416595	0		=			
ANR	416981	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416982	Identifier	data		416595	0					
ANR	416983	PostIncDecOperationExpression	l ++		416595	1					
ANR	416984	Identifier	l		416595	0					
ANR	416985	IncDec	++		416595	1					
ANR	416986	PrimaryExpression	0x44		416595	1					
ANR	416987	ExpressionStatement	data [ l ++ ] = o -> regs [ 0 ] | ( o -> regs [ 1 ] << 3 )	328:3:9158:9197	416595	2	True				
ANR	416988	AssignmentExpression	data [ l ++ ] = o -> regs [ 0 ] | ( o -> regs [ 1 ] << 3 )		416595	0		=			
ANR	416989	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	416990	Identifier	data		416595	0					
ANR	416991	PostIncDecOperationExpression	l ++		416595	1					
ANR	416992	Identifier	l		416595	0					
ANR	416993	IncDec	++		416595	1					
ANR	416994	InclusiveOrExpression	o -> regs [ 0 ] | ( o -> regs [ 1 ] << 3 )		416595	1		|			
ANR	416995	ArrayIndexing	o -> regs [ 0 ]		416595	0					
ANR	416996	PtrMemberAccess	o -> regs		416595	0					
ANR	416997	Identifier	o		416595	0					
ANR	416998	Identifier	regs		416595	1					
ANR	416999	PrimaryExpression	0		416595	1					
ANR	417000	ShiftExpression	o -> regs [ 1 ] << 3		416595	1		<<			
ANR	417001	ArrayIndexing	o -> regs [ 1 ]		416595	0					
ANR	417002	PtrMemberAccess	o -> regs		416595	0					
ANR	417003	Identifier	o		416595	0					
ANR	417004	Identifier	regs		416595	1					
ANR	417005	PrimaryExpression	1		416595	1					
ANR	417006	PrimaryExpression	3		416595	1					
ANR	417007	ExpressionStatement	data [ l ++ ] = ( ut8 ) ( ( o -> offset * o -> offset_sign ) & 0xff )	329:3:9202:9254	416595	3	True				
ANR	417008	AssignmentExpression	data [ l ++ ] = ( ut8 ) ( ( o -> offset * o -> offset_sign ) & 0xff )		416595	0		=			
ANR	417009	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417010	Identifier	data		416595	0					
ANR	417011	PostIncDecOperationExpression	l ++		416595	1					
ANR	417012	Identifier	l		416595	0					
ANR	417013	IncDec	++		416595	1					
ANR	417014	CastExpression	( ut8 ) ( ( o -> offset * o -> offset_sign ) & 0xff )		416595	1					
ANR	417015	CastTarget	ut8		416595	0					
ANR	417016	BitAndExpression	( o -> offset * o -> offset_sign ) & 0xff		416595	1		&			
ANR	417017	MultiplicativeExpression	o -> offset * o -> offset_sign		416595	0		*			
ANR	417018	PtrMemberAccess	o -> offset		416595	0					
ANR	417019	Identifier	o		416595	0					
ANR	417020	Identifier	offset		416595	1					
ANR	417021	PtrMemberAccess	o -> offset_sign		416595	1					
ANR	417022	Identifier	o		416595	0					
ANR	417023	Identifier	offset_sign		416595	1					
ANR	417024	PrimaryExpression	0xff		416595	1					
ANR	417025	ExpressionStatement	data [ l ++ ] = immediate	330:3:9259:9280	416595	4	True				
ANR	417026	AssignmentExpression	data [ l ++ ] = immediate		416595	0		=			
ANR	417027	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417028	Identifier	data		416595	0					
ANR	417029	PostIncDecOperationExpression	l ++		416595	1					
ANR	417030	Identifier	l		416595	0					
ANR	417031	IncDec	++		416595	1					
ANR	417032	Identifier	immediate		416595	1					
ANR	417033	ReturnStatement	return l ;	331:3:9285:9293	416595	5	True				
ANR	417034	Identifier	l		416595	0					
ANR	417035	ElseStatement	else		416595	0					
ANR	417036	IfStatement	if ( op -> operands [ 1 ] . type & ( OT_GPREG | OT_WORD ) )		416595	0					
ANR	417037	Condition	op -> operands [ 1 ] . type & ( OT_GPREG | OT_WORD )	332:13:9308:9350	416595	0	True				
ANR	417038	BitAndExpression	op -> operands [ 1 ] . type & ( OT_GPREG | OT_WORD )		416595	0		&			
ANR	417039	MemberAccess	op -> operands [ 1 ] . type		416595	0					
ANR	417040	ArrayIndexing	op -> operands [ 1 ]		416595	0					
ANR	417041	PtrMemberAccess	op -> operands		416595	0					
ANR	417042	Identifier	op		416595	0					
ANR	417043	Identifier	operands		416595	1					
ANR	417044	PrimaryExpression	1		416595	1					
ANR	417045	Identifier	type		416595	1					
ANR	417046	InclusiveOrExpression	OT_GPREG | OT_WORD		416595	1		|			
ANR	417047	Identifier	OT_GPREG		416595	0					
ANR	417048	Identifier	OT_WORD		416595	1					
ANR	417049	CompoundStatement		51:58:1393:1393	416595	1					
ANR	417050	ExpressionStatement	data [ l ++ ] = 0xd2	333:3:9358:9374	416595	0	True				
ANR	417051	AssignmentExpression	data [ l ++ ] = 0xd2		416595	0		=			
ANR	417052	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417053	Identifier	data		416595	0					
ANR	417054	PostIncDecOperationExpression	l ++		416595	1					
ANR	417055	Identifier	l		416595	0					
ANR	417056	IncDec	++		416595	1					
ANR	417057	PrimaryExpression	0xd2		416595	1					
ANR	417058	ElseStatement	else		416595	0					
ANR	417059	IfStatement	if ( immediate == 1 )		416595	0					
ANR	417060	Condition	immediate == 1	334:13:9389:9402	416595	0	True				
ANR	417061	EqualityExpression	immediate == 1		416595	0		==			
ANR	417062	Identifier	immediate		416595	0					
ANR	417063	PrimaryExpression	1		416595	1					
ANR	417064	CompoundStatement		53:29:1445:1445	416595	1					
ANR	417065	ExpressionStatement	data [ l ++ ] = 0xd0	335:3:9410:9426	416595	0	True				
ANR	417066	AssignmentExpression	data [ l ++ ] = 0xd0		416595	0		=			
ANR	417067	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417068	Identifier	data		416595	0					
ANR	417069	PostIncDecOperationExpression	l ++		416595	1					
ANR	417070	Identifier	l		416595	0					
ANR	417071	IncDec	++		416595	1					
ANR	417072	PrimaryExpression	0xd0		416595	1					
ANR	417073	ElseStatement	else		416595	0					
ANR	417074	CompoundStatement		55:9:1477:1477	416595	0					
ANR	417075	ExpressionStatement	data [ l ++ ] = 0xc0	337:3:9442:9458	416595	0	True				
ANR	417076	AssignmentExpression	data [ l ++ ] = 0xc0		416595	0		=			
ANR	417077	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417078	Identifier	data		416595	0					
ANR	417079	PostIncDecOperationExpression	l ++		416595	1					
ANR	417080	Identifier	l		416595	0					
ANR	417081	IncDec	++		416595	1					
ANR	417082	PrimaryExpression	0xc0		416595	1					
ANR	417083	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		416595	10					
ANR	417084	Condition	op -> operands [ 0 ] . type & OT_MEMORY	340:5:9472:9503	416595	0	True				
ANR	417085	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		416595	0		&			
ANR	417086	MemberAccess	op -> operands [ 0 ] . type		416595	0					
ANR	417087	ArrayIndexing	op -> operands [ 0 ]		416595	0					
ANR	417088	PtrMemberAccess	op -> operands		416595	0					
ANR	417089	Identifier	op		416595	0					
ANR	417090	Identifier	operands		416595	1					
ANR	417091	PrimaryExpression	0		416595	1					
ANR	417092	Identifier	type		416595	1					
ANR	417093	Identifier	OT_MEMORY		416595	1					
ANR	417094	CompoundStatement		59:39:1546:1546	416595	1					
ANR	417095	ExpressionStatement	reg0 = op -> operands [ 0 ] . regs [ 0 ]	341:2:9510:9540	416595	0	True				
ANR	417096	AssignmentExpression	reg0 = op -> operands [ 0 ] . regs [ 0 ]		416595	0		=			
ANR	417097	Identifier	reg0		416595	0					
ANR	417098	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		416595	1					
ANR	417099	MemberAccess	op -> operands [ 0 ] . regs		416595	0					
ANR	417100	ArrayIndexing	op -> operands [ 0 ]		416595	0					
ANR	417101	PtrMemberAccess	op -> operands		416595	0					
ANR	417102	Identifier	op		416595	0					
ANR	417103	Identifier	operands		416595	1					
ANR	417104	PrimaryExpression	0		416595	1					
ANR	417105	Identifier	regs		416595	1					
ANR	417106	PrimaryExpression	0		416595	1					
ANR	417107	ExpressionStatement	mod_byte = 0	342:2:9544:9556	416595	1	True				
ANR	417108	AssignmentExpression	mod_byte = 0		416595	0		=			
ANR	417109	Identifier	mod_byte		416595	0					
ANR	417110	PrimaryExpression	0		416595	1					
ANR	417111	ElseStatement	else		416595	0					
ANR	417112	CompoundStatement		62:8:1606:1606	416595	0					
ANR	417113	ExpressionStatement	reg0 = op -> operands [ 0 ] . reg	344:2:9570:9596	416595	0	True				
ANR	417114	AssignmentExpression	reg0 = op -> operands [ 0 ] . reg		416595	0		=			
ANR	417115	Identifier	reg0		416595	0					
ANR	417116	MemberAccess	op -> operands [ 0 ] . reg		416595	1					
ANR	417117	ArrayIndexing	op -> operands [ 0 ]		416595	0					
ANR	417118	PtrMemberAccess	op -> operands		416595	0					
ANR	417119	Identifier	op		416595	0					
ANR	417120	Identifier	operands		416595	1					
ANR	417121	PrimaryExpression	0		416595	1					
ANR	417122	Identifier	reg		416595	1					
ANR	417123	ExpressionStatement	mod_byte = 3	345:2:9600:9612	416595	1	True				
ANR	417124	AssignmentExpression	mod_byte = 3		416595	0		=			
ANR	417125	Identifier	mod_byte		416595	0					
ANR	417126	PrimaryExpression	3		416595	1					
ANR	417127	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0	347:1:9618:9663	416595	11	True				
ANR	417128	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0		416595	0		=			
ANR	417129	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417130	Identifier	data		416595	0					
ANR	417131	PostIncDecOperationExpression	l ++		416595	1					
ANR	417132	Identifier	l		416595	0					
ANR	417133	IncDec	++		416595	1					
ANR	417134	InclusiveOrExpression	mod_byte << 6 | modrm << 3 | reg0		416595	1		|			
ANR	417135	ShiftExpression	mod_byte << 6		416595	0		<<			
ANR	417136	Identifier	mod_byte		416595	0					
ANR	417137	PrimaryExpression	6		416595	1					
ANR	417138	InclusiveOrExpression	modrm << 3 | reg0		416595	1		|			
ANR	417139	ShiftExpression	modrm << 3		416595	0		<<			
ANR	417140	Identifier	modrm		416595	0					
ANR	417141	PrimaryExpression	3		416595	1					
ANR	417142	Identifier	reg0		416595	1					
ANR	417143	IfStatement	if ( immediate != 1 && ! ( op -> operands [ 1 ] . type & OT_GPREG ) )		416595	12					
ANR	417144	Condition	immediate != 1 && ! ( op -> operands [ 1 ] . type & OT_GPREG )	348:5:9670:9721	416595	0	True				
ANR	417145	AndExpression	immediate != 1 && ! ( op -> operands [ 1 ] . type & OT_GPREG )		416595	0		&&			
ANR	417146	EqualityExpression	immediate != 1		416595	0		!=			
ANR	417147	Identifier	immediate		416595	0					
ANR	417148	PrimaryExpression	1		416595	1					
ANR	417149	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_GPREG )		416595	1					
ANR	417150	UnaryOperator	!		416595	0					
ANR	417151	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		416595	1		&			
ANR	417152	MemberAccess	op -> operands [ 1 ] . type		416595	0					
ANR	417153	ArrayIndexing	op -> operands [ 1 ]		416595	0					
ANR	417154	PtrMemberAccess	op -> operands		416595	0					
ANR	417155	Identifier	op		416595	0					
ANR	417156	Identifier	operands		416595	1					
ANR	417157	PrimaryExpression	1		416595	1					
ANR	417158	Identifier	type		416595	1					
ANR	417159	Identifier	OT_GPREG		416595	1					
ANR	417160	CompoundStatement		67:59:1764:1764	416595	1					
ANR	417161	ExpressionStatement	data [ l ++ ] = immediate	349:2:9728:9749	416595	0	True				
ANR	417162	AssignmentExpression	data [ l ++ ] = immediate		416595	0		=			
ANR	417163	ArrayIndexing	data [ l ++ ]		416595	0					
ANR	417164	Identifier	data		416595	0					
ANR	417165	PostIncDecOperationExpression	l ++		416595	1					
ANR	417166	Identifier	l		416595	0					
ANR	417167	IncDec	++		416595	1					
ANR	417168	Identifier	immediate		416595	1					
ANR	417169	ReturnStatement	return l ;	351:1:9755:9763	416595	13	True				
ANR	417170	Identifier	l		416595	0					
ANR	417171	ReturnType	static int		416595	1					
ANR	417172	Identifier	process_group_2		416595	2					
ANR	417173	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		416595	3					
ANR	417174	Parameter	RAsm * a	282:27:7921:7927	416595	0	True				
ANR	417175	ParameterType	RAsm *		416595	0					
ANR	417176	Identifier	a		416595	1					
ANR	417177	Parameter	ut8 * data	282:36:7930:7938	416595	1	True				
ANR	417178	ParameterType	ut8 *		416595	0					
ANR	417179	Identifier	data		416595	1					
ANR	417180	Parameter	const Opcode * op	282:47:7941:7956	416595	2	True				
ANR	417181	ParameterType	const Opcode *		416595	0					
ANR	417182	Identifier	op		416595	1					
ANR	417183	CFGEntryNode	ENTRY		416595		True				
ANR	417184	CFGExitNode	EXIT		416595		True				
ANR	417185	Symbol	OT_QWORD		416595						
ANR	417186	Symbol	data		416595						
ANR	417187	Symbol	* op		416595						
ANR	417188	Symbol	op -> mnemonic		416595						
ANR	417189	Symbol	* o -> regs		416595						
ANR	417190	Symbol	op -> operands [ 1 ] . immediate		416595						
ANR	417191	Symbol	modrm		416595						
ANR	417192	Symbol	* * op		416595						
ANR	417193	Symbol	* op -> operands		416595						
ANR	417194	Symbol	o -> offset		416595						
ANR	417195	Symbol	op -> operands [ 0 ] . type		416595						
ANR	417196	Symbol	op -> operands [ 0 ] . reg		416595						
ANR	417197	Symbol	* * o		416595						
ANR	417198	Symbol	OT_MEMORY		416595						
ANR	417199	Symbol	a -> bits		416595						
ANR	417200	Symbol	OT_BYTE		416595						
ANR	417201	Symbol	strcmp		416595						
ANR	417202	Symbol	a		416595						
ANR	417203	Symbol	op		416595						
ANR	417204	Symbol	o -> offset_sign		416595						
ANR	417205	Symbol	OT_WORD		416595						
ANR	417206	Symbol	OT_GPREG		416595						
ANR	417207	Symbol	mod_byte		416595						
ANR	417208	Symbol	reg0		416595						
ANR	417209	Symbol	* a		416595						
ANR	417210	Symbol	* * op -> operands		416595						
ANR	417211	Symbol	l		416595						
ANR	417212	Symbol	o		416595						
ANR	417213	Symbol	o -> regs		416595						
ANR	417214	Symbol	immediate		416595						
ANR	417215	Symbol	op -> operands [ 1 ] . type		416595						
ANR	417216	Symbol	op -> operands [ 1 ] . sign		416595						
ANR	417217	Symbol	* op -> operands [ 0 ] . regs		416595						
ANR	417218	Symbol	* o		416595						
ANR	417219	Symbol	* * * op		416595						
ANR	417220	Symbol	op -> operands		416595						
ANR	417221	Symbol	* data		416595						
ANR	417222	Symbol	op -> operands [ 0 ] . regs		416595						
ANR	417223	Symbol	OT_DWORD		416595						
ANR	417224	Function	process_1byte_op	354:0:9768:13765							
ANR	417225	FunctionDef	"process_1byte_op (RAsm * a , ut8 * data , const Opcode * op , int op1)"		417224	0					
ANR	417226	CompoundStatement		354:75:9843:13765	417224	0					
ANR	417227	ExpressionStatement	is_valid_registers ( op )	355:1:9846:9869	417224	0	True				
ANR	417228	CallExpression	is_valid_registers ( op )		417224	0					
ANR	417229	Callee	is_valid_registers		417224	0					
ANR	417230	Identifier	is_valid_registers		417224	0					
ANR	417231	ArgumentList	op		417224	1					
ANR	417232	Argument	op		417224	0					
ANR	417233	Identifier	op		417224	0					
ANR	417234	IdentifierDeclStatement	int l = 0 ;	356:1:9872:9881	417224	1	True				
ANR	417235	IdentifierDecl	l = 0		417224	0					
ANR	417236	IdentifierDeclType	int		417224	0					
ANR	417237	Identifier	l		417224	1					
ANR	417238	AssignmentExpression	l = 0		417224	2		=			
ANR	417239	Identifier	l		417224	0					
ANR	417240	PrimaryExpression	0		417224	1					
ANR	417241	IdentifierDeclStatement	int mod_byte = 0 ;	357:1:9884:9900	417224	2	True				
ANR	417242	IdentifierDecl	mod_byte = 0		417224	0					
ANR	417243	IdentifierDeclType	int		417224	0					
ANR	417244	Identifier	mod_byte		417224	1					
ANR	417245	AssignmentExpression	mod_byte = 0		417224	2		=			
ANR	417246	Identifier	mod_byte		417224	0					
ANR	417247	PrimaryExpression	0		417224	1					
ANR	417248	IdentifierDeclStatement	int reg = 0 ;	358:1:9903:9914	417224	3	True				
ANR	417249	IdentifierDecl	reg = 0		417224	0					
ANR	417250	IdentifierDeclType	int		417224	0					
ANR	417251	Identifier	reg		417224	1					
ANR	417252	AssignmentExpression	reg = 0		417224	2		=			
ANR	417253	Identifier	reg		417224	0					
ANR	417254	PrimaryExpression	0		417224	1					
ANR	417255	IdentifierDeclStatement	int rm = 0 ;	359:1:9917:9927	417224	4	True				
ANR	417256	IdentifierDecl	rm = 0		417224	0					
ANR	417257	IdentifierDeclType	int		417224	0					
ANR	417258	Identifier	rm		417224	1					
ANR	417259	AssignmentExpression	rm = 0		417224	2		=			
ANR	417260	Identifier	rm		417224	0					
ANR	417261	PrimaryExpression	0		417224	1					
ANR	417262	IdentifierDeclStatement	int rex = 0 ;	360:1:9930:9941	417224	5	True				
ANR	417263	IdentifierDecl	rex = 0		417224	0					
ANR	417264	IdentifierDeclType	int		417224	0					
ANR	417265	Identifier	rex		417224	1					
ANR	417266	AssignmentExpression	rex = 0		417224	2		=			
ANR	417267	Identifier	rex		417224	0					
ANR	417268	PrimaryExpression	0		417224	1					
ANR	417269	IdentifierDeclStatement	int mem_ref = 0 ;	361:1:9944:9959	417224	6	True				
ANR	417270	IdentifierDecl	mem_ref = 0		417224	0					
ANR	417271	IdentifierDeclType	int		417224	0					
ANR	417272	Identifier	mem_ref		417224	1					
ANR	417273	AssignmentExpression	mem_ref = 0		417224	2		=			
ANR	417274	Identifier	mem_ref		417224	0					
ANR	417275	PrimaryExpression	0		417224	1					
ANR	417276	IdentifierDeclStatement	st32 offset = 0 ;	362:1:9962:9977	417224	7	True				
ANR	417277	IdentifierDecl	offset = 0		417224	0					
ANR	417278	IdentifierDeclType	st32		417224	0					
ANR	417279	Identifier	offset		417224	1					
ANR	417280	AssignmentExpression	offset = 0		417224	2		=			
ANR	417281	Identifier	offset		417224	0					
ANR	417282	PrimaryExpression	0		417224	1					
ANR	417283	IdentifierDeclStatement	int ebp_reg = 0 ;	363:1:9980:9995	417224	8	True				
ANR	417284	IdentifierDecl	ebp_reg = 0		417224	0					
ANR	417285	IdentifierDeclType	int		417224	0					
ANR	417286	Identifier	ebp_reg		417224	1					
ANR	417287	AssignmentExpression	ebp_reg = 0		417224	2		=			
ANR	417288	Identifier	ebp_reg		417224	0					
ANR	417289	PrimaryExpression	0		417224	1					
ANR	417290	IfStatement	if ( ! op -> operands [ 1 ] . is_good_flag )		417224	9					
ANR	417291	Condition	! op -> operands [ 1 ] . is_good_flag	365:5:10003:10031	417224	0	True				
ANR	417292	UnaryOperationExpression	! op -> operands [ 1 ] . is_good_flag		417224	0					
ANR	417293	UnaryOperator	!		417224	0					
ANR	417294	MemberAccess	op -> operands [ 1 ] . is_good_flag		417224	1					
ANR	417295	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417296	PtrMemberAccess	op -> operands		417224	0					
ANR	417297	Identifier	op		417224	0					
ANR	417298	Identifier	operands		417224	1					
ANR	417299	PrimaryExpression	1		417224	1					
ANR	417300	Identifier	is_good_flag		417224	1					
ANR	417301	CompoundStatement		12:36:190:190	417224	1					
ANR	417302	ReturnStatement	return - 1 ;	366:2:10038:10047	417224	0	True				
ANR	417303	UnaryOperationExpression	- 1		417224	0					
ANR	417304	UnaryOperator	-		417224	0					
ANR	417305	PrimaryExpression	1		417224	1					
ANR	417306	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_CONSTANT )		417224	10					
ANR	417307	Condition	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_CONSTANT	369:5:10058:10125	417224	0	True				
ANR	417308	AndExpression	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_CONSTANT		417224	0		&&			
ANR	417309	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AL		417224	0		==			
ANR	417310	MemberAccess	op -> operands [ 0 ] . reg		417224	0					
ANR	417311	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417312	PtrMemberAccess	op -> operands		417224	0					
ANR	417313	Identifier	op		417224	0					
ANR	417314	Identifier	operands		417224	1					
ANR	417315	PrimaryExpression	0		417224	1					
ANR	417316	Identifier	reg		417224	1					
ANR	417317	Identifier	X86R_AL		417224	1					
ANR	417318	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		417224	1		&			
ANR	417319	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417320	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417321	PtrMemberAccess	op -> operands		417224	0					
ANR	417322	Identifier	op		417224	0					
ANR	417323	Identifier	operands		417224	1					
ANR	417324	PrimaryExpression	1		417224	1					
ANR	417325	Identifier	type		417224	1					
ANR	417326	Identifier	OT_CONSTANT		417224	1					
ANR	417327	CompoundStatement		16:75:284:284	417224	1					
ANR	417328	ExpressionStatement	data [ l ++ ] = op1 + 4	370:2:10132:10151	417224	0	True				
ANR	417329	AssignmentExpression	data [ l ++ ] = op1 + 4		417224	0		=			
ANR	417330	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417331	Identifier	data		417224	0					
ANR	417332	PostIncDecOperationExpression	l ++		417224	1					
ANR	417333	Identifier	l		417224	0					
ANR	417334	IncDec	++		417224	1					
ANR	417335	AdditiveExpression	op1 + 4		417224	1		+			
ANR	417336	Identifier	op1		417224	0					
ANR	417337	PrimaryExpression	4		417224	1					
ANR	417338	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	371:2:10155:10215	417224	1	True				
ANR	417339	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		417224	0		=			
ANR	417340	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417341	Identifier	data		417224	0					
ANR	417342	PostIncDecOperationExpression	l ++		417224	1					
ANR	417343	Identifier	l		417224	0					
ANR	417344	IncDec	++		417224	1					
ANR	417345	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		417224	1		*			
ANR	417346	MemberAccess	op -> operands [ 1 ] . immediate		417224	0					
ANR	417347	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417348	PtrMemberAccess	op -> operands		417224	0					
ANR	417349	Identifier	op		417224	0					
ANR	417350	Identifier	operands		417224	1					
ANR	417351	PrimaryExpression	1		417224	1					
ANR	417352	Identifier	immediate		417224	1					
ANR	417353	MemberAccess	op -> operands [ 1 ] . sign		417224	1					
ANR	417354	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417355	PtrMemberAccess	op -> operands		417224	0					
ANR	417356	Identifier	op		417224	0					
ANR	417357	Identifier	operands		417224	1					
ANR	417358	PrimaryExpression	1		417224	1					
ANR	417359	Identifier	sign		417224	1					
ANR	417360	ReturnStatement	return l ;	372:2:10219:10227	417224	2	True				
ANR	417361	Identifier	l		417224	0					
ANR	417362	IfStatement	if ( a -> bits == 64 )		417224	11					
ANR	417363	Condition	a -> bits == 64	375:5:10238:10250	417224	0	True				
ANR	417364	EqualityExpression	a -> bits == 64		417224	0		==			
ANR	417365	PtrMemberAccess	a -> bits		417224	0					
ANR	417366	Identifier	a		417224	0					
ANR	417367	Identifier	bits		417224	1					
ANR	417368	PrimaryExpression	64		417224	1					
ANR	417369	CompoundStatement		22:20:409:409	417224	1					
ANR	417370	IfStatement	if ( ! ( op -> operands [ 0 ] . type & op -> operands [ 1 ] . type ) )		417224	0					
ANR	417371	Condition	! ( op -> operands [ 0 ] . type & op -> operands [ 1 ] . type )	376:6:10261:10306	417224	0	True				
ANR	417372	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & op -> operands [ 1 ] . type )		417224	0					
ANR	417373	UnaryOperator	!		417224	0					
ANR	417374	BitAndExpression	op -> operands [ 0 ] . type & op -> operands [ 1 ] . type		417224	1		&			
ANR	417375	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417376	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417377	PtrMemberAccess	op -> operands		417224	0					
ANR	417378	Identifier	op		417224	0					
ANR	417379	Identifier	operands		417224	1					
ANR	417380	PrimaryExpression	0		417224	1					
ANR	417381	Identifier	type		417224	1					
ANR	417382	MemberAccess	op -> operands [ 1 ] . type		417224	1					
ANR	417383	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417384	PtrMemberAccess	op -> operands		417224	0					
ANR	417385	Identifier	op		417224	0					
ANR	417386	Identifier	operands		417224	1					
ANR	417387	PrimaryExpression	1		417224	1					
ANR	417388	Identifier	type		417224	1					
ANR	417389	CompoundStatement		23:54:465:465	417224	1					
ANR	417390	ReturnStatement	return - 1 ;	377:3:10314:10323	417224	0	True				
ANR	417391	UnaryOperationExpression	- 1		417224	0					
ANR	417392	UnaryOperator	-		417224	0					
ANR	417393	PrimaryExpression	1		417224	1					
ANR	417394	IfStatement	if ( a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) )		417224	12					
ANR	417395	Condition	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )	381:5:10338:10425	417224	0	True				
ANR	417396	AndExpression	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )		417224	0		&&			
ANR	417397	EqualityExpression	a -> bits == 64		417224	0		==			
ANR	417398	PtrMemberAccess	a -> bits		417224	0					
ANR	417399	Identifier	a		417224	0					
ANR	417400	Identifier	bits		417224	1					
ANR	417401	PrimaryExpression	64		417224	1					
ANR	417402	InclusiveOrExpression	( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD )		417224	1		|			
ANR	417403	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		417224	0		&			
ANR	417404	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417405	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417406	PtrMemberAccess	op -> operands		417224	0					
ANR	417407	Identifier	op		417224	0					
ANR	417408	Identifier	operands		417224	1					
ANR	417409	PrimaryExpression	0		417224	1					
ANR	417410	Identifier	type		417224	1					
ANR	417411	Identifier	OT_QWORD		417224	1					
ANR	417412	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		417224	1		&			
ANR	417413	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417414	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417415	PtrMemberAccess	op -> operands		417224	0					
ANR	417416	Identifier	op		417224	0					
ANR	417417	Identifier	operands		417224	1					
ANR	417418	PrimaryExpression	1		417224	1					
ANR	417419	Identifier	type		417224	1					
ANR	417420	Identifier	OT_QWORD		417224	1					
ANR	417421	CompoundStatement		28:95:584:584	417224	1					
ANR	417422	IfStatement	if ( op -> operands [ 0 ] . extended )		417224	0					
ANR	417423	Condition	op -> operands [ 0 ] . extended	382:6:10436:10459	417224	0	True				
ANR	417424	MemberAccess	op -> operands [ 0 ] . extended		417224	0					
ANR	417425	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417426	PtrMemberAccess	op -> operands		417224	0					
ANR	417427	Identifier	op		417224	0					
ANR	417428	Identifier	operands		417224	1					
ANR	417429	PrimaryExpression	0		417224	1					
ANR	417430	Identifier	extended		417224	1					
ANR	417431	CompoundStatement		29:32:618:618	417224	1					
ANR	417432	ExpressionStatement	rex = 1	383:4:10468:10475	417224	0	True				
ANR	417433	AssignmentExpression	rex = 1		417224	0		=			
ANR	417434	Identifier	rex		417224	0					
ANR	417435	PrimaryExpression	1		417224	1					
ANR	417436	IfStatement	if ( op -> operands [ 1 ] . extended )		417224	1					
ANR	417437	Condition	op -> operands [ 1 ] . extended	385:6:10487:10510	417224	0	True				
ANR	417438	MemberAccess	op -> operands [ 1 ] . extended		417224	0					
ANR	417439	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417440	PtrMemberAccess	op -> operands		417224	0					
ANR	417441	Identifier	op		417224	0					
ANR	417442	Identifier	operands		417224	1					
ANR	417443	PrimaryExpression	1		417224	1					
ANR	417444	Identifier	extended		417224	1					
ANR	417445	CompoundStatement		32:32:669:669	417224	1					
ANR	417446	ExpressionStatement	rex += 4	386:3:10518:10526	417224	0	True				
ANR	417447	AssignmentExpression	rex += 4		417224	0		+=			
ANR	417448	Identifier	rex		417224	0					
ANR	417449	PrimaryExpression	4		417224	1					
ANR	417450	ExpressionStatement	data [ l ++ ] = 0x48 | rex	388:2:10534:10556	417224	2	True				
ANR	417451	AssignmentExpression	data [ l ++ ] = 0x48 | rex		417224	0		=			
ANR	417452	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417453	Identifier	data		417224	0					
ANR	417454	PostIncDecOperationExpression	l ++		417224	1					
ANR	417455	Identifier	l		417224	0					
ANR	417456	IncDec	++		417224	1					
ANR	417457	InclusiveOrExpression	0x48 | rex		417224	1		|			
ANR	417458	PrimaryExpression	0x48		417224	0					
ANR	417459	Identifier	rex		417224	1					
ANR	417460	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 1 ] . type & OT_REGALL )		417224	13					
ANR	417461	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 1 ] . type & OT_REGALL	391:5:10567:10634	417224	0	True				
ANR	417462	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 1 ] . type & OT_REGALL		417224	0		&&			
ANR	417463	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		417224	0		&			
ANR	417464	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417465	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417466	PtrMemberAccess	op -> operands		417224	0					
ANR	417467	Identifier	op		417224	0					
ANR	417468	Identifier	operands		417224	1					
ANR	417469	PrimaryExpression	0		417224	1					
ANR	417470	Identifier	type		417224	1					
ANR	417471	Identifier	OT_MEMORY		417224	1					
ANR	417472	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		417224	1		&			
ANR	417473	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417474	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417475	PtrMemberAccess	op -> operands		417224	0					
ANR	417476	Identifier	op		417224	0					
ANR	417477	Identifier	operands		417224	1					
ANR	417478	PrimaryExpression	1		417224	1					
ANR	417479	Identifier	type		417224	1					
ANR	417480	Identifier	OT_REGALL		417224	1					
ANR	417481	CompoundStatement		38:75:793:793	417224	1					
ANR	417482	IfStatement	if ( a -> bits == 64 && ( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD ) )		417224	0					
ANR	417483	Condition	a -> bits == 64 && ( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD )	392:6:10645:10737	417224	0	True				
ANR	417484	AndExpression	a -> bits == 64 && ( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD )		417224	0		&&			
ANR	417485	EqualityExpression	a -> bits == 64		417224	0		==			
ANR	417486	PtrMemberAccess	a -> bits		417224	0					
ANR	417487	Identifier	a		417224	0					
ANR	417488	Identifier	bits		417224	1					
ANR	417489	PrimaryExpression	64		417224	1					
ANR	417490	AndExpression	( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD )		417224	1		&&			
ANR	417491	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		417224	0		&			
ANR	417492	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417493	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417494	PtrMemberAccess	op -> operands		417224	0					
ANR	417495	Identifier	op		417224	0					
ANR	417496	Identifier	operands		417224	1					
ANR	417497	PrimaryExpression	0		417224	1					
ANR	417498	Identifier	type		417224	1					
ANR	417499	Identifier	OT_DWORD		417224	1					
ANR	417500	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		417224	1		&			
ANR	417501	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417502	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417503	PtrMemberAccess	op -> operands		417224	0					
ANR	417504	Identifier	op		417224	0					
ANR	417505	Identifier	operands		417224	1					
ANR	417506	PrimaryExpression	1		417224	1					
ANR	417507	Identifier	type		417224	1					
ANR	417508	Identifier	OT_DWORD		417224	1					
ANR	417509	CompoundStatement		40:41:896:896	417224	1					
ANR	417510	ExpressionStatement	data [ l ++ ] = 0x67	394:3:10745:10761	417224	0	True				
ANR	417511	AssignmentExpression	data [ l ++ ] = 0x67		417224	0		=			
ANR	417512	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417513	Identifier	data		417224	0					
ANR	417514	PostIncDecOperationExpression	l ++		417224	1					
ANR	417515	Identifier	l		417224	0					
ANR	417516	IncDec	++		417224	1					
ANR	417517	PrimaryExpression	0x67		417224	1					
ANR	417518	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		417224	1					
ANR	417519	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	396:6:10773:10836	417224	0	True				
ANR	417520	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		417224	0		&&			
ANR	417521	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		417224	0		&			
ANR	417522	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417523	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417524	PtrMemberAccess	op -> operands		417224	0					
ANR	417525	Identifier	op		417224	0					
ANR	417526	Identifier	operands		417224	1					
ANR	417527	PrimaryExpression	0		417224	1					
ANR	417528	Identifier	type		417224	1					
ANR	417529	Identifier	OT_BYTE		417224	1					
ANR	417530	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		417224	1		&			
ANR	417531	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417532	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417533	PtrMemberAccess	op -> operands		417224	0					
ANR	417534	Identifier	op		417224	0					
ANR	417535	Identifier	operands		417224	1					
ANR	417536	PrimaryExpression	1		417224	1					
ANR	417537	Identifier	type		417224	1					
ANR	417538	Identifier	OT_BYTE		417224	1					
ANR	417539	CompoundStatement		43:72:995:995	417224	1					
ANR	417540	ExpressionStatement	data [ l ++ ] = op1	397:3:10844:10859	417224	0	True				
ANR	417541	AssignmentExpression	data [ l ++ ] = op1		417224	0		=			
ANR	417542	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417543	Identifier	data		417224	0					
ANR	417544	PostIncDecOperationExpression	l ++		417224	1					
ANR	417545	Identifier	l		417224	0					
ANR	417546	IncDec	++		417224	1					
ANR	417547	Identifier	op1		417224	1					
ANR	417548	ElseStatement	else		417224	0					
ANR	417549	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD ) )		417224	0					
ANR	417550	Condition	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )	398:13:10874:10971	417224	0	True				
ANR	417551	AndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		417224	0		&&			
ANR	417552	BitAndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )		417224	0		&			
ANR	417553	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417554	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417555	PtrMemberAccess	op -> operands		417224	0					
ANR	417556	Identifier	op		417224	0					
ANR	417557	Identifier	operands		417224	1					
ANR	417558	PrimaryExpression	0		417224	1					
ANR	417559	Identifier	type		417224	1					
ANR	417560	InclusiveOrExpression	OT_DWORD | OT_QWORD		417224	1		|			
ANR	417561	Identifier	OT_DWORD		417224	0					
ANR	417562	Identifier	OT_QWORD		417224	1					
ANR	417563	BitAndExpression	op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		417224	1		&			
ANR	417564	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417565	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417566	PtrMemberAccess	op -> operands		417224	0					
ANR	417567	Identifier	op		417224	0					
ANR	417568	Identifier	operands		417224	1					
ANR	417569	PrimaryExpression	1		417224	1					
ANR	417570	Identifier	type		417224	1					
ANR	417571	InclusiveOrExpression	OT_DWORD | OT_QWORD		417224	1		|			
ANR	417572	Identifier	OT_DWORD		417224	0					
ANR	417573	Identifier	OT_QWORD		417224	1					
ANR	417574	CompoundStatement		46:52:1130:1130	417224	1					
ANR	417575	ExpressionStatement	data [ l ++ ] = op1 + 0x1	400:3:10979:11000	417224	0	True				
ANR	417576	AssignmentExpression	data [ l ++ ] = op1 + 0x1		417224	0		=			
ANR	417577	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417578	Identifier	data		417224	0					
ANR	417579	PostIncDecOperationExpression	l ++		417224	1					
ANR	417580	Identifier	l		417224	0					
ANR	417581	IncDec	++		417224	1					
ANR	417582	AdditiveExpression	op1 + 0x1		417224	1		+			
ANR	417583	Identifier	op1		417224	0					
ANR	417584	PrimaryExpression	0x1		417224	1					
ANR	417585	ElseStatement	else		417224	0					
ANR	417586	CompoundStatement		48:9:1167:1167	417224	0					
ANR	417587	ExpressionStatement	"eprintf ( ""Error: mismatched operand sizes\\n"" )"	402:3:11016:11061	417224	0	True				
ANR	417588	CallExpression	"eprintf ( ""Error: mismatched operand sizes\\n"" )"		417224	0					
ANR	417589	Callee	eprintf		417224	0					
ANR	417590	Identifier	eprintf		417224	0					
ANR	417591	ArgumentList	"""Error: mismatched operand sizes\\n"""		417224	1					
ANR	417592	Argument	"""Error: mismatched operand sizes\\n"""		417224	0					
ANR	417593	PrimaryExpression	"""Error: mismatched operand sizes\\n"""		417224	0					
ANR	417594	ReturnStatement	return - 1 ;	403:3:11066:11075	417224	1	True				
ANR	417595	UnaryOperationExpression	- 1		417224	0					
ANR	417596	UnaryOperator	-		417224	0					
ANR	417597	PrimaryExpression	1		417224	1					
ANR	417598	ExpressionStatement	reg = op -> operands [ 1 ] . reg	405:2:11083:11108	417224	2	True				
ANR	417599	AssignmentExpression	reg = op -> operands [ 1 ] . reg		417224	0		=			
ANR	417600	Identifier	reg		417224	0					
ANR	417601	MemberAccess	op -> operands [ 1 ] . reg		417224	1					
ANR	417602	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417603	PtrMemberAccess	op -> operands		417224	0					
ANR	417604	Identifier	op		417224	0					
ANR	417605	Identifier	operands		417224	1					
ANR	417606	PrimaryExpression	1		417224	1					
ANR	417607	Identifier	reg		417224	1					
ANR	417608	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	406:2:11112:11140	417224	3	True				
ANR	417609	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		417224	0		=			
ANR	417610	Identifier	rm		417224	0					
ANR	417611	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		417224	1					
ANR	417612	MemberAccess	op -> operands [ 0 ] . regs		417224	0					
ANR	417613	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417614	PtrMemberAccess	op -> operands		417224	0					
ANR	417615	Identifier	op		417224	0					
ANR	417616	Identifier	operands		417224	1					
ANR	417617	PrimaryExpression	0		417224	1					
ANR	417618	Identifier	regs		417224	1					
ANR	417619	PrimaryExpression	0		417224	1					
ANR	417620	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	407:2:11144:11205	417224	4	True				
ANR	417621	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		417224	0		=			
ANR	417622	Identifier	offset		417224	0					
ANR	417623	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		417224	1		*			
ANR	417624	MemberAccess	op -> operands [ 0 ] . offset		417224	0					
ANR	417625	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417626	PtrMemberAccess	op -> operands		417224	0					
ANR	417627	Identifier	op		417224	0					
ANR	417628	Identifier	operands		417224	1					
ANR	417629	PrimaryExpression	0		417224	1					
ANR	417630	Identifier	offset		417224	1					
ANR	417631	MemberAccess	op -> operands [ 0 ] . offset_sign		417224	1					
ANR	417632	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417633	PtrMemberAccess	op -> operands		417224	0					
ANR	417634	Identifier	op		417224	0					
ANR	417635	Identifier	operands		417224	1					
ANR	417636	PrimaryExpression	0		417224	1					
ANR	417637	Identifier	offset_sign		417224	1					
ANR	417638	IfStatement	if ( rm == - 1 )		417224	5					
ANR	417639	Condition	rm == - 1	408:6:11213:11220	417224	0	True				
ANR	417640	EqualityExpression	rm == - 1		417224	0		==			
ANR	417641	Identifier	rm		417224	0					
ANR	417642	UnaryOperationExpression	- 1		417224	1					
ANR	417643	UnaryOperator	-		417224	0					
ANR	417644	PrimaryExpression	1		417224	1					
ANR	417645	CompoundStatement		55:16:1379:1379	417224	1					
ANR	417646	ExpressionStatement	rm = 5	409:3:11228:11234	417224	0	True				
ANR	417647	AssignmentExpression	rm = 5		417224	0		=			
ANR	417648	Identifier	rm		417224	0					
ANR	417649	PrimaryExpression	5		417224	1					
ANR	417650	ExpressionStatement	mem_ref = 1	410:3:11239:11250	417224	1	True				
ANR	417651	AssignmentExpression	mem_ref = 1		417224	0		=			
ANR	417652	Identifier	mem_ref		417224	0					
ANR	417653	PrimaryExpression	1		417224	1					
ANR	417654	ElseStatement	else		417224	0					
ANR	417655	CompoundStatement		58:9:1417:1417	417224	0					
ANR	417656	IfStatement	if ( offset )		417224	0					
ANR	417657	Condition	offset	412:7:11270:11275	417224	0	True				
ANR	417658	Identifier	offset		417224	0					
ANR	417659	CompoundStatement		59:15:1434:1434	417224	1					
ANR	417660	ExpressionStatement	mod_byte = 1	413:4:11284:11296	417224	0	True				
ANR	417661	AssignmentExpression	mod_byte = 1		417224	0		=			
ANR	417662	Identifier	mod_byte		417224	0					
ANR	417663	PrimaryExpression	1		417224	1					
ANR	417664	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		417224	1					
ANR	417665	Condition	offset < ST8_MIN || offset > ST8_MAX	414:8:11306:11341	417224	0	True				
ANR	417666	OrExpression	offset < ST8_MIN || offset > ST8_MAX		417224	0		||			
ANR	417667	RelationalExpression	offset < ST8_MIN		417224	0		<			
ANR	417668	Identifier	offset		417224	0					
ANR	417669	Identifier	ST8_MIN		417224	1					
ANR	417670	RelationalExpression	offset > ST8_MAX		417224	1		>			
ANR	417671	Identifier	offset		417224	0					
ANR	417672	Identifier	ST8_MAX		417224	1					
ANR	417673	CompoundStatement		61:46:1500:1500	417224	1					
ANR	417674	ExpressionStatement	mod_byte = 2	415:5:11351:11363	417224	0	True				
ANR	417675	AssignmentExpression	mod_byte = 2		417224	0		=			
ANR	417676	Identifier	mod_byte		417224	0					
ANR	417677	PrimaryExpression	2		417224	1					
ANR	417678	ElseStatement	else		417224	0					
ANR	417679	IfStatement	if ( op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED )		417224	0					
ANR	417680	Condition	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED	417:14:11385:11425	417224	0	True				
ANR	417681	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED		417224	0		!=			
ANR	417682	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		417224	0					
ANR	417683	MemberAccess	op -> operands [ 0 ] . regs		417224	0					
ANR	417684	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417685	PtrMemberAccess	op -> operands		417224	0					
ANR	417686	Identifier	op		417224	0					
ANR	417687	Identifier	operands		417224	1					
ANR	417688	PrimaryExpression	0		417224	1					
ANR	417689	Identifier	regs		417224	1					
ANR	417690	PrimaryExpression	1		417224	1					
ANR	417691	Identifier	X86R_UNDEFINED		417224	1					
ANR	417692	CompoundStatement		64:57:1584:1584	417224	1					
ANR	417693	ExpressionStatement	rm = 4	418:4:11434:11440	417224	0	True				
ANR	417694	AssignmentExpression	rm = 4		417224	0		=			
ANR	417695	Identifier	rm		417224	0					
ANR	417696	PrimaryExpression	4		417224	1					
ANR	417697	ExpressionStatement	offset = op -> operands [ 0 ] . regs [ 1 ] << 3	419:4:11446:11483	417224	1	True				
ANR	417698	AssignmentExpression	offset = op -> operands [ 0 ] . regs [ 1 ] << 3		417224	0		=			
ANR	417699	Identifier	offset		417224	0					
ANR	417700	ShiftExpression	op -> operands [ 0 ] . regs [ 1 ] << 3		417224	1		<<			
ANR	417701	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		417224	0					
ANR	417702	MemberAccess	op -> operands [ 0 ] . regs		417224	0					
ANR	417703	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417704	PtrMemberAccess	op -> operands		417224	0					
ANR	417705	Identifier	op		417224	0					
ANR	417706	Identifier	operands		417224	1					
ANR	417707	PrimaryExpression	0		417224	1					
ANR	417708	Identifier	regs		417224	1					
ANR	417709	PrimaryExpression	1		417224	1					
ANR	417710	PrimaryExpression	3		417224	1					
ANR	417711	ElseStatement	else		417224	0					
ANR	417712	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL )		417224	0					
ANR	417713	Condition	op -> operands [ 0 ] . type & OT_REGALL	422:12:11506:11537	417224	0	True				
ANR	417714	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		417224	0		&			
ANR	417715	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417716	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417717	PtrMemberAccess	op -> operands		417224	0					
ANR	417718	Identifier	op		417224	0					
ANR	417719	Identifier	operands		417224	1					
ANR	417720	PrimaryExpression	0		417224	1					
ANR	417721	Identifier	type		417224	1					
ANR	417722	Identifier	OT_REGALL		417224	1					
ANR	417723	CompoundStatement		69:46:1696:1696	417224	1					
ANR	417724	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		417224	0					
ANR	417725	Condition	op -> operands [ 1 ] . type & OT_MEMORY	423:6:11548:11579	417224	0	True				
ANR	417726	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		417224	0		&			
ANR	417727	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417728	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417729	PtrMemberAccess	op -> operands		417224	0					
ANR	417730	Identifier	op		417224	0					
ANR	417731	Identifier	operands		417224	1					
ANR	417732	PrimaryExpression	1		417224	1					
ANR	417733	Identifier	type		417224	1					
ANR	417734	Identifier	OT_MEMORY		417224	1					
ANR	417735	CompoundStatement		70:40:1738:1738	417224	1					
ANR	417736	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		417224	0					
ANR	417737	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	424:7:11591:11654	417224	0	True				
ANR	417738	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		417224	0		&&			
ANR	417739	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		417224	0		&			
ANR	417740	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417741	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417742	PtrMemberAccess	op -> operands		417224	0					
ANR	417743	Identifier	op		417224	0					
ANR	417744	Identifier	operands		417224	1					
ANR	417745	PrimaryExpression	0		417224	1					
ANR	417746	Identifier	type		417224	1					
ANR	417747	Identifier	OT_BYTE		417224	1					
ANR	417748	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		417224	1		&			
ANR	417749	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417750	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417751	PtrMemberAccess	op -> operands		417224	0					
ANR	417752	Identifier	op		417224	0					
ANR	417753	Identifier	operands		417224	1					
ANR	417754	PrimaryExpression	1		417224	1					
ANR	417755	Identifier	type		417224	1					
ANR	417756	Identifier	OT_BYTE		417224	1					
ANR	417757	CompoundStatement		71:73:1813:1813	417224	1					
ANR	417758	ExpressionStatement	data [ l ++ ] = op1 + 0x2	425:4:11663:11684	417224	0	True				
ANR	417759	AssignmentExpression	data [ l ++ ] = op1 + 0x2		417224	0		=			
ANR	417760	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417761	Identifier	data		417224	0					
ANR	417762	PostIncDecOperationExpression	l ++		417224	1					
ANR	417763	Identifier	l		417224	0					
ANR	417764	IncDec	++		417224	1					
ANR	417765	AdditiveExpression	op1 + 0x2		417224	1		+			
ANR	417766	Identifier	op1		417224	0					
ANR	417767	PrimaryExpression	0x2		417224	1					
ANR	417768	ElseStatement	else		417224	0					
ANR	417769	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD ) )		417224	0					
ANR	417770	Condition	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )	426:14:11700:11799	417224	0	True				
ANR	417771	AndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		417224	0		&&			
ANR	417772	BitAndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )		417224	0		&			
ANR	417773	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	417774	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417775	PtrMemberAccess	op -> operands		417224	0					
ANR	417776	Identifier	op		417224	0					
ANR	417777	Identifier	operands		417224	1					
ANR	417778	PrimaryExpression	0		417224	1					
ANR	417779	Identifier	type		417224	1					
ANR	417780	InclusiveOrExpression	OT_DWORD | OT_QWORD		417224	1		|			
ANR	417781	Identifier	OT_DWORD		417224	0					
ANR	417782	Identifier	OT_QWORD		417224	1					
ANR	417783	BitAndExpression	op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		417224	1		&			
ANR	417784	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	417785	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417786	PtrMemberAccess	op -> operands		417224	0					
ANR	417787	Identifier	op		417224	0					
ANR	417788	Identifier	operands		417224	1					
ANR	417789	PrimaryExpression	1		417224	1					
ANR	417790	Identifier	type		417224	1					
ANR	417791	InclusiveOrExpression	OT_DWORD | OT_QWORD		417224	1		|			
ANR	417792	Identifier	OT_DWORD		417224	0					
ANR	417793	Identifier	OT_QWORD		417224	1					
ANR	417794	CompoundStatement		74:54:1958:1958	417224	1					
ANR	417795	ExpressionStatement	data [ l ++ ] = op1 + 0x3	428:4:11808:11829	417224	0	True				
ANR	417796	AssignmentExpression	data [ l ++ ] = op1 + 0x3		417224	0		=			
ANR	417797	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417798	Identifier	data		417224	0					
ANR	417799	PostIncDecOperationExpression	l ++		417224	1					
ANR	417800	Identifier	l		417224	0					
ANR	417801	IncDec	++		417224	1					
ANR	417802	AdditiveExpression	op1 + 0x3		417224	1		+			
ANR	417803	Identifier	op1		417224	0					
ANR	417804	PrimaryExpression	0x3		417224	1					
ANR	417805	ElseStatement	else		417224	0					
ANR	417806	CompoundStatement		76:10:1997:1997	417224	0					
ANR	417807	ExpressionStatement	"eprintf ( ""Error: mismatched operand sizes\\n"" )"	430:4:11847:11892	417224	0	True				
ANR	417808	CallExpression	"eprintf ( ""Error: mismatched operand sizes\\n"" )"		417224	0					
ANR	417809	Callee	eprintf		417224	0					
ANR	417810	Identifier	eprintf		417224	0					
ANR	417811	ArgumentList	"""Error: mismatched operand sizes\\n"""		417224	1					
ANR	417812	Argument	"""Error: mismatched operand sizes\\n"""		417224	0					
ANR	417813	PrimaryExpression	"""Error: mismatched operand sizes\\n"""		417224	0					
ANR	417814	ReturnStatement	return - 1 ;	431:4:11898:11907	417224	1	True				
ANR	417815	UnaryOperationExpression	- 1		417224	0					
ANR	417816	UnaryOperator	-		417224	0					
ANR	417817	PrimaryExpression	1		417224	1					
ANR	417818	ExpressionStatement	reg = op -> operands [ 0 ] . reg	433:3:11917:11942	417224	1	True				
ANR	417819	AssignmentExpression	reg = op -> operands [ 0 ] . reg		417224	0		=			
ANR	417820	Identifier	reg		417224	0					
ANR	417821	MemberAccess	op -> operands [ 0 ] . reg		417224	1					
ANR	417822	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417823	PtrMemberAccess	op -> operands		417224	0					
ANR	417824	Identifier	op		417224	0					
ANR	417825	Identifier	operands		417224	1					
ANR	417826	PrimaryExpression	0		417224	1					
ANR	417827	Identifier	reg		417224	1					
ANR	417828	ExpressionStatement	rm = op -> operands [ 1 ] . regs [ 0 ]	434:3:11947:11975	417224	2	True				
ANR	417829	AssignmentExpression	rm = op -> operands [ 1 ] . regs [ 0 ]		417224	0		=			
ANR	417830	Identifier	rm		417224	0					
ANR	417831	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		417224	1					
ANR	417832	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	417833	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417834	PtrMemberAccess	op -> operands		417224	0					
ANR	417835	Identifier	op		417224	0					
ANR	417836	Identifier	operands		417224	1					
ANR	417837	PrimaryExpression	1		417224	1					
ANR	417838	Identifier	regs		417224	1					
ANR	417839	PrimaryExpression	0		417224	1					
ANR	417840	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] > 1 )		417224	3					
ANR	417841	Condition	op -> operands [ 1 ] . scale [ 0 ] > 1	436:7:11985:12012	417224	0	True				
ANR	417842	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] > 1		417224	0		>			
ANR	417843	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		417224	0					
ANR	417844	MemberAccess	op -> operands [ 1 ] . scale		417224	0					
ANR	417845	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417846	PtrMemberAccess	op -> operands		417224	0					
ANR	417847	Identifier	op		417224	0					
ANR	417848	Identifier	operands		417224	1					
ANR	417849	PrimaryExpression	1		417224	1					
ANR	417850	Identifier	scale		417224	1					
ANR	417851	PrimaryExpression	0		417224	1					
ANR	417852	PrimaryExpression	1		417224	1					
ANR	417853	CompoundStatement		83:37:2171:2171	417224	1					
ANR	417854	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		417224	0					
ANR	417855	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	437:8:12025:12065	417224	0	True				
ANR	417856	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		417224	0		!=			
ANR	417857	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		417224	0					
ANR	417858	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	417859	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417860	PtrMemberAccess	op -> operands		417224	0					
ANR	417861	Identifier	op		417224	0					
ANR	417862	Identifier	operands		417224	1					
ANR	417863	PrimaryExpression	1		417224	1					
ANR	417864	Identifier	regs		417224	1					
ANR	417865	PrimaryExpression	1		417224	1					
ANR	417866	Identifier	X86R_UNDEFINED		417224	1					
ANR	417867	CompoundStatement		84:51:2224:2224	417224	1					
ANR	417868	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	438:5:12075:12115	417224	0	True				
ANR	417869	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		417224	0		=			
ANR	417870	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417871	Identifier	data		417224	0					
ANR	417872	PostIncDecOperationExpression	l ++		417224	1					
ANR	417873	Identifier	l		417224	0					
ANR	417874	IncDec	++		417224	1					
ANR	417875	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		417224	1		|			
ANR	417876	ShiftExpression	op -> operands [ 0 ] . reg << 3		417224	0		<<			
ANR	417877	MemberAccess	op -> operands [ 0 ] . reg		417224	0					
ANR	417878	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417879	PtrMemberAccess	op -> operands		417224	0					
ANR	417880	Identifier	op		417224	0					
ANR	417881	Identifier	operands		417224	1					
ANR	417882	PrimaryExpression	0		417224	1					
ANR	417883	Identifier	reg		417224	1					
ANR	417884	PrimaryExpression	3		417224	1					
ANR	417885	PrimaryExpression	4		417224	1					
ANR	417886	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]	439:5:12122:12249	417224	1	True				
ANR	417887	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		417224	0		=			
ANR	417888	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417889	Identifier	data		417224	0					
ANR	417890	PostIncDecOperationExpression	l ++		417224	1					
ANR	417891	Identifier	l		417224	0					
ANR	417892	IncDec	++		417224	1					
ANR	417893	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		417224	1		|			
ANR	417894	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		417224	0		<<			
ANR	417895	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		417224	0					
ANR	417896	Callee	getsib		417224	0					
ANR	417897	Identifier	getsib		417224	0					
ANR	417898	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		417224	1					
ANR	417899	Argument	op -> operands [ 1 ] . scale [ 0 ]		417224	0					
ANR	417900	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		417224	0					
ANR	417901	MemberAccess	op -> operands [ 1 ] . scale		417224	0					
ANR	417902	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417903	PtrMemberAccess	op -> operands		417224	0					
ANR	417904	Identifier	op		417224	0					
ANR	417905	Identifier	operands		417224	1					
ANR	417906	PrimaryExpression	1		417224	1					
ANR	417907	Identifier	scale		417224	1					
ANR	417908	PrimaryExpression	0		417224	1					
ANR	417909	PrimaryExpression	6		417224	1					
ANR	417910	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		417224	1		|			
ANR	417911	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		417224	0		<<			
ANR	417912	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		417224	0					
ANR	417913	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	417914	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417915	PtrMemberAccess	op -> operands		417224	0					
ANR	417916	Identifier	op		417224	0					
ANR	417917	Identifier	operands		417224	1					
ANR	417918	PrimaryExpression	1		417224	1					
ANR	417919	Identifier	regs		417224	1					
ANR	417920	PrimaryExpression	0		417224	1					
ANR	417921	PrimaryExpression	3		417224	1					
ANR	417922	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		417224	1					
ANR	417923	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	417924	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417925	PtrMemberAccess	op -> operands		417224	0					
ANR	417926	Identifier	op		417224	0					
ANR	417927	Identifier	operands		417224	1					
ANR	417928	PrimaryExpression	1		417224	1					
ANR	417929	Identifier	regs		417224	1					
ANR	417930	PrimaryExpression	1		417224	1					
ANR	417931	ReturnStatement	return l ;	442:5:12256:12264	417224	2	True				
ANR	417932	Identifier	l		417224	0					
ANR	417933	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	444:4:12276:12316	417224	1	True				
ANR	417934	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		417224	0		=			
ANR	417935	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417936	Identifier	data		417224	0					
ANR	417937	PostIncDecOperationExpression	l ++		417224	1					
ANR	417938	Identifier	l		417224	0					
ANR	417939	IncDec	++		417224	1					
ANR	417940	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		417224	1		|			
ANR	417941	ShiftExpression	op -> operands [ 0 ] . reg << 3		417224	0		<<			
ANR	417942	MemberAccess	op -> operands [ 0 ] . reg		417224	0					
ANR	417943	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	417944	PtrMemberAccess	op -> operands		417224	0					
ANR	417945	Identifier	op		417224	0					
ANR	417946	Identifier	operands		417224	1					
ANR	417947	PrimaryExpression	0		417224	1					
ANR	417948	Identifier	reg		417224	1					
ANR	417949	PrimaryExpression	3		417224	1					
ANR	417950	PrimaryExpression	4		417224	1					
ANR	417951	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5	445:4:12333:12418	417224	2	True				
ANR	417952	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		417224	0		=			
ANR	417953	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417954	Identifier	data		417224	0					
ANR	417955	PostIncDecOperationExpression	l ++		417224	1					
ANR	417956	Identifier	l		417224	0					
ANR	417957	IncDec	++		417224	1					
ANR	417958	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		417224	1		|			
ANR	417959	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		417224	0		<<			
ANR	417960	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		417224	0					
ANR	417961	Callee	getsib		417224	0					
ANR	417962	Identifier	getsib		417224	0					
ANR	417963	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		417224	1					
ANR	417964	Argument	op -> operands [ 1 ] . scale [ 0 ]		417224	0					
ANR	417965	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		417224	0					
ANR	417966	MemberAccess	op -> operands [ 1 ] . scale		417224	0					
ANR	417967	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417968	PtrMemberAccess	op -> operands		417224	0					
ANR	417969	Identifier	op		417224	0					
ANR	417970	Identifier	operands		417224	1					
ANR	417971	PrimaryExpression	1		417224	1					
ANR	417972	Identifier	scale		417224	1					
ANR	417973	PrimaryExpression	0		417224	1					
ANR	417974	PrimaryExpression	6		417224	1					
ANR	417975	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		417224	1		|			
ANR	417976	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		417224	0		<<			
ANR	417977	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		417224	0					
ANR	417978	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	417979	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417980	PtrMemberAccess	op -> operands		417224	0					
ANR	417981	Identifier	op		417224	0					
ANR	417982	Identifier	operands		417224	1					
ANR	417983	PrimaryExpression	1		417224	1					
ANR	417984	Identifier	regs		417224	1					
ANR	417985	PrimaryExpression	0		417224	1					
ANR	417986	PrimaryExpression	3		417224	1					
ANR	417987	PrimaryExpression	5		417224	1					
ANR	417988	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	446:4:12424:12488	417224	3	True				
ANR	417989	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		417224	0		=			
ANR	417990	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	417991	Identifier	data		417224	0					
ANR	417992	PostIncDecOperationExpression	l ++		417224	1					
ANR	417993	Identifier	l		417224	0					
ANR	417994	IncDec	++		417224	1					
ANR	417995	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		417224	1		*			
ANR	417996	MemberAccess	op -> operands [ 1 ] . offset		417224	0					
ANR	417997	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	417998	PtrMemberAccess	op -> operands		417224	0					
ANR	417999	Identifier	op		417224	0					
ANR	418000	Identifier	operands		417224	1					
ANR	418001	PrimaryExpression	1		417224	1					
ANR	418002	Identifier	offset		417224	1					
ANR	418003	MemberAccess	op -> operands [ 1 ] . offset_sign		417224	1					
ANR	418004	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418005	PtrMemberAccess	op -> operands		417224	0					
ANR	418006	Identifier	op		417224	0					
ANR	418007	Identifier	operands		417224	1					
ANR	418008	PrimaryExpression	1		417224	1					
ANR	418009	Identifier	offset_sign		417224	1					
ANR	418010	ExpressionStatement	data [ l ++ ] = 0	447:4:12494:12507	417224	4	True				
ANR	418011	AssignmentExpression	data [ l ++ ] = 0		417224	0		=			
ANR	418012	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418013	Identifier	data		417224	0					
ANR	418014	PostIncDecOperationExpression	l ++		417224	1					
ANR	418015	Identifier	l		417224	0					
ANR	418016	IncDec	++		417224	1					
ANR	418017	PrimaryExpression	0		417224	1					
ANR	418018	ExpressionStatement	data [ l ++ ] = 0	448:4:12513:12526	417224	5	True				
ANR	418019	AssignmentExpression	data [ l ++ ] = 0		417224	0		=			
ANR	418020	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418021	Identifier	data		417224	0					
ANR	418022	PostIncDecOperationExpression	l ++		417224	1					
ANR	418023	Identifier	l		417224	0					
ANR	418024	IncDec	++		417224	1					
ANR	418025	PrimaryExpression	0		417224	1					
ANR	418026	ExpressionStatement	data [ l ++ ] = 0	449:4:12532:12545	417224	6	True				
ANR	418027	AssignmentExpression	data [ l ++ ] = 0		417224	0		=			
ANR	418028	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418029	Identifier	data		417224	0					
ANR	418030	PostIncDecOperationExpression	l ++		417224	1					
ANR	418031	Identifier	l		417224	0					
ANR	418032	IncDec	++		417224	1					
ANR	418033	PrimaryExpression	0		417224	1					
ANR	418034	ReturnStatement	return l ;	450:4:12551:12559	417224	7	True				
ANR	418035	Identifier	l		417224	0					
ANR	418036	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	452:3:12569:12630	417224	4	True				
ANR	418037	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		417224	0		=			
ANR	418038	Identifier	offset		417224	0					
ANR	418039	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		417224	1		*			
ANR	418040	MemberAccess	op -> operands [ 1 ] . offset		417224	0					
ANR	418041	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418042	PtrMemberAccess	op -> operands		417224	0					
ANR	418043	Identifier	op		417224	0					
ANR	418044	Identifier	operands		417224	1					
ANR	418045	PrimaryExpression	1		417224	1					
ANR	418046	Identifier	offset		417224	1					
ANR	418047	MemberAccess	op -> operands [ 1 ] . offset_sign		417224	1					
ANR	418048	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418049	PtrMemberAccess	op -> operands		417224	0					
ANR	418050	Identifier	op		417224	0					
ANR	418051	Identifier	operands		417224	1					
ANR	418052	PrimaryExpression	1		417224	1					
ANR	418053	Identifier	offset_sign		417224	1					
ANR	418054	IfStatement	if ( offset )		417224	5					
ANR	418055	Condition	offset	453:7:12639:12644	417224	0	True				
ANR	418056	Identifier	offset		417224	0					
ANR	418057	CompoundStatement		100:15:2803:2803	417224	1					
ANR	418058	ExpressionStatement	mod_byte = 1	454:4:12653:12665	417224	0	True				
ANR	418059	AssignmentExpression	mod_byte = 1		417224	0		=			
ANR	418060	Identifier	mod_byte		417224	0					
ANR	418061	PrimaryExpression	1		417224	1					
ANR	418062	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		417224	1					
ANR	418063	Condition	offset < ST8_MIN || offset > ST8_MAX	455:8:12675:12710	417224	0	True				
ANR	418064	OrExpression	offset < ST8_MIN || offset > ST8_MAX		417224	0		||			
ANR	418065	RelationalExpression	offset < ST8_MIN		417224	0		<			
ANR	418066	Identifier	offset		417224	0					
ANR	418067	Identifier	ST8_MIN		417224	1					
ANR	418068	RelationalExpression	offset > ST8_MAX		417224	1		>			
ANR	418069	Identifier	offset		417224	0					
ANR	418070	Identifier	ST8_MAX		417224	1					
ANR	418071	CompoundStatement		102:46:2869:2869	417224	1					
ANR	418072	ExpressionStatement	mod_byte = 2	456:5:12720:12732	417224	0	True				
ANR	418073	AssignmentExpression	mod_byte = 2		417224	0		=			
ANR	418074	Identifier	mod_byte		417224	0					
ANR	418075	PrimaryExpression	2		417224	1					
ANR	418076	ElseStatement	else		417224	0					
ANR	418077	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGALL )		417224	0					
ANR	418078	Condition	op -> operands [ 1 ] . type & OT_REGALL	460:13:12759:12790	417224	0	True				
ANR	418079	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		417224	0		&			
ANR	418080	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	418081	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418082	PtrMemberAccess	op -> operands		417224	0					
ANR	418083	Identifier	op		417224	0					
ANR	418084	Identifier	operands		417224	1					
ANR	418085	PrimaryExpression	1		417224	1					
ANR	418086	Identifier	type		417224	1					
ANR	418087	Identifier	OT_REGALL		417224	1					
ANR	418088	CompoundStatement		107:47:2949:2949	417224	1					
ANR	418089	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		417224	0					
ANR	418090	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	461:7:12802:12865	417224	0	True				
ANR	418091	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		417224	0		&&			
ANR	418092	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		417224	0		&			
ANR	418093	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	418094	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	418095	PtrMemberAccess	op -> operands		417224	0					
ANR	418096	Identifier	op		417224	0					
ANR	418097	Identifier	operands		417224	1					
ANR	418098	PrimaryExpression	0		417224	1					
ANR	418099	Identifier	type		417224	1					
ANR	418100	Identifier	OT_BYTE		417224	1					
ANR	418101	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		417224	1		&			
ANR	418102	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	418103	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418104	PtrMemberAccess	op -> operands		417224	0					
ANR	418105	Identifier	op		417224	0					
ANR	418106	Identifier	operands		417224	1					
ANR	418107	PrimaryExpression	1		417224	1					
ANR	418108	Identifier	type		417224	1					
ANR	418109	Identifier	OT_BYTE		417224	1					
ANR	418110	CompoundStatement		108:73:3024:3024	417224	1					
ANR	418111	ExpressionStatement	data [ l ++ ] = op1	462:4:12874:12889	417224	0	True				
ANR	418112	AssignmentExpression	data [ l ++ ] = op1		417224	0		=			
ANR	418113	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418114	Identifier	data		417224	0					
ANR	418115	PostIncDecOperationExpression	l ++		417224	1					
ANR	418116	Identifier	l		417224	0					
ANR	418117	IncDec	++		417224	1					
ANR	418118	Identifier	op1		417224	1					
ANR	418119	ElseStatement	else		417224	0					
ANR	418120	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD && op -> operands [ 1 ] . type & OT_DWORD )		417224	0					
ANR	418121	Condition	op -> operands [ 0 ] . type & OT_DWORD && op -> operands [ 1 ] . type & OT_DWORD	463:14:12905:12970	417224	0	True				
ANR	418122	AndExpression	op -> operands [ 0 ] . type & OT_DWORD && op -> operands [ 1 ] . type & OT_DWORD		417224	0		&&			
ANR	418123	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		417224	0		&			
ANR	418124	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	418125	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	418126	PtrMemberAccess	op -> operands		417224	0					
ANR	418127	Identifier	op		417224	0					
ANR	418128	Identifier	operands		417224	1					
ANR	418129	PrimaryExpression	0		417224	1					
ANR	418130	Identifier	type		417224	1					
ANR	418131	Identifier	OT_DWORD		417224	1					
ANR	418132	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		417224	1		&			
ANR	418133	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	418134	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418135	PtrMemberAccess	op -> operands		417224	0					
ANR	418136	Identifier	op		417224	0					
ANR	418137	Identifier	operands		417224	1					
ANR	418138	PrimaryExpression	1		417224	1					
ANR	418139	Identifier	type		417224	1					
ANR	418140	Identifier	OT_DWORD		417224	1					
ANR	418141	CompoundStatement		110:82:3129:3129	417224	1					
ANR	418142	ExpressionStatement	data [ l ++ ] = op1 + 0x1	464:4:12979:13000	417224	0	True				
ANR	418143	AssignmentExpression	data [ l ++ ] = op1 + 0x1		417224	0		=			
ANR	418144	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418145	Identifier	data		417224	0					
ANR	418146	PostIncDecOperationExpression	l ++		417224	1					
ANR	418147	Identifier	l		417224	0					
ANR	418148	IncDec	++		417224	1					
ANR	418149	AdditiveExpression	op1 + 0x1		417224	1		+			
ANR	418150	Identifier	op1		417224	0					
ANR	418151	PrimaryExpression	0x1		417224	1					
ANR	418152	IfStatement	if ( a -> bits == 64 )		417224	1					
ANR	418153	Condition	a -> bits == 64	466:7:13014:13026	417224	0	True				
ANR	418154	EqualityExpression	a -> bits == 64		417224	0		==			
ANR	418155	PtrMemberAccess	a -> bits		417224	0					
ANR	418156	Identifier	a		417224	0					
ANR	418157	Identifier	bits		417224	1					
ANR	418158	PrimaryExpression	64		417224	1					
ANR	418159	CompoundStatement		113:22:3185:3185	417224	1					
ANR	418160	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD )		417224	0					
ANR	418161	Condition	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD	467:8:13039:13109	417224	0	True				
ANR	418162	AndExpression	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD		417224	0		&&			
ANR	418163	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		417224	0		&			
ANR	418164	MemberAccess	op -> operands [ 0 ] . type		417224	0					
ANR	418165	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	418166	PtrMemberAccess	op -> operands		417224	0					
ANR	418167	Identifier	op		417224	0					
ANR	418168	Identifier	operands		417224	1					
ANR	418169	PrimaryExpression	0		417224	1					
ANR	418170	Identifier	type		417224	1					
ANR	418171	Identifier	OT_QWORD		417224	1					
ANR	418172	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		417224	1		&			
ANR	418173	MemberAccess	op -> operands [ 1 ] . type		417224	0					
ANR	418174	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418175	PtrMemberAccess	op -> operands		417224	0					
ANR	418176	Identifier	op		417224	0					
ANR	418177	Identifier	operands		417224	1					
ANR	418178	PrimaryExpression	1		417224	1					
ANR	418179	Identifier	type		417224	1					
ANR	418180	Identifier	OT_QWORD		417224	1					
ANR	418181	CompoundStatement		115:38:3268:3268	417224	1					
ANR	418182	ExpressionStatement	data [ l ++ ] = op1 + 0x1	469:5:13119:13140	417224	0	True				
ANR	418183	AssignmentExpression	data [ l ++ ] = op1 + 0x1		417224	0		=			
ANR	418184	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418185	Identifier	data		417224	0					
ANR	418186	PostIncDecOperationExpression	l ++		417224	1					
ANR	418187	Identifier	l		417224	0					
ANR	418188	IncDec	++		417224	1					
ANR	418189	AdditiveExpression	op1 + 0x1		417224	1		+			
ANR	418190	Identifier	op1		417224	0					
ANR	418191	PrimaryExpression	0x1		417224	1					
ANR	418192	ExpressionStatement	mod_byte = 3	473:3:13157:13169	417224	2	True				
ANR	418193	AssignmentExpression	mod_byte = 3		417224	0		=			
ANR	418194	Identifier	mod_byte		417224	0					
ANR	418195	PrimaryExpression	3		417224	1					
ANR	418196	ExpressionStatement	reg = op -> operands [ 1 ] . reg	474:3:13174:13199	417224	3	True				
ANR	418197	AssignmentExpression	reg = op -> operands [ 1 ] . reg		417224	0		=			
ANR	418198	Identifier	reg		417224	0					
ANR	418199	MemberAccess	op -> operands [ 1 ] . reg		417224	1					
ANR	418200	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418201	PtrMemberAccess	op -> operands		417224	0					
ANR	418202	Identifier	op		417224	0					
ANR	418203	Identifier	operands		417224	1					
ANR	418204	PrimaryExpression	1		417224	1					
ANR	418205	Identifier	reg		417224	1					
ANR	418206	ExpressionStatement	rm = op -> operands [ 0 ] . reg	475:3:13204:13228	417224	4	True				
ANR	418207	AssignmentExpression	rm = op -> operands [ 0 ] . reg		417224	0		=			
ANR	418208	Identifier	rm		417224	0					
ANR	418209	MemberAccess	op -> operands [ 0 ] . reg		417224	1					
ANR	418210	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	418211	PtrMemberAccess	op -> operands		417224	0					
ANR	418212	Identifier	op		417224	0					
ANR	418213	Identifier	operands		417224	1					
ANR	418214	PrimaryExpression	0		417224	1					
ANR	418215	Identifier	reg		417224	1					
ANR	418216	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		417224	14					
ANR	418217	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	478:5:13242:13320	417224	0	True				
ANR	418218	OrExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		417224	0		||			
ANR	418219	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		417224	0		==			
ANR	418220	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		417224	0					
ANR	418221	MemberAccess	op -> operands [ 0 ] . regs		417224	0					
ANR	418222	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	418223	PtrMemberAccess	op -> operands		417224	0					
ANR	418224	Identifier	op		417224	0					
ANR	418225	Identifier	operands		417224	1					
ANR	418226	PrimaryExpression	0		417224	1					
ANR	418227	Identifier	regs		417224	1					
ANR	418228	PrimaryExpression	0		417224	1					
ANR	418229	Identifier	X86R_EBP		417224	1					
ANR	418230	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		417224	1		==			
ANR	418231	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		417224	0					
ANR	418232	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	418233	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418234	PtrMemberAccess	op -> operands		417224	0					
ANR	418235	Identifier	op		417224	0					
ANR	418236	Identifier	operands		417224	1					
ANR	418237	PrimaryExpression	1		417224	1					
ANR	418238	Identifier	regs		417224	1					
ANR	418239	PrimaryExpression	0		417224	1					
ANR	418240	Identifier	X86R_EBP		417224	1					
ANR	418241	CompoundStatement		126:42:3479:3479	417224	1					
ANR	418242	ExpressionStatement	ebp_reg = 1	481:3:13343:13354	417224	0	True				
ANR	418243	AssignmentExpression	ebp_reg = 1		417224	0		=			
ANR	418244	Identifier	ebp_reg		417224	0					
ANR	418245	PrimaryExpression	1		417224	1					
ANR	418246	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm	483:1:13360:13401	417224	15	True				
ANR	418247	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm		417224	0		=			
ANR	418248	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418249	Identifier	data		417224	0					
ANR	418250	PostIncDecOperationExpression	l ++		417224	1					
ANR	418251	Identifier	l		417224	0					
ANR	418252	IncDec	++		417224	1					
ANR	418253	InclusiveOrExpression	mod_byte << 6 | reg << 3 | rm		417224	1		|			
ANR	418254	ShiftExpression	mod_byte << 6		417224	0		<<			
ANR	418255	Identifier	mod_byte		417224	0					
ANR	418256	PrimaryExpression	6		417224	1					
ANR	418257	InclusiveOrExpression	reg << 3 | rm		417224	1		|			
ANR	418258	ShiftExpression	reg << 3		417224	0		<<			
ANR	418259	Identifier	reg		417224	0					
ANR	418260	PrimaryExpression	3		417224	1					
ANR	418261	Identifier	rm		417224	1					
ANR	418262	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP || op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		417224	16					
ANR	418263	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP || op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	485:5:13409:13487	417224	0	True				
ANR	418264	OrExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP || op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		417224	0		||			
ANR	418265	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		417224	0		==			
ANR	418266	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		417224	0					
ANR	418267	MemberAccess	op -> operands [ 0 ] . regs		417224	0					
ANR	418268	ArrayIndexing	op -> operands [ 0 ]		417224	0					
ANR	418269	PtrMemberAccess	op -> operands		417224	0					
ANR	418270	Identifier	op		417224	0					
ANR	418271	Identifier	operands		417224	1					
ANR	418272	PrimaryExpression	0		417224	1					
ANR	418273	Identifier	regs		417224	1					
ANR	418274	PrimaryExpression	0		417224	1					
ANR	418275	Identifier	X86R_ESP		417224	1					
ANR	418276	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		417224	1		==			
ANR	418277	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		417224	0					
ANR	418278	MemberAccess	op -> operands [ 1 ] . regs		417224	0					
ANR	418279	ArrayIndexing	op -> operands [ 1 ]		417224	0					
ANR	418280	PtrMemberAccess	op -> operands		417224	0					
ANR	418281	Identifier	op		417224	0					
ANR	418282	Identifier	operands		417224	1					
ANR	418283	PrimaryExpression	1		417224	1					
ANR	418284	Identifier	regs		417224	1					
ANR	418285	PrimaryExpression	0		417224	1					
ANR	418286	Identifier	X86R_ESP		417224	1					
ANR	418287	CompoundStatement		133:42:3646:3646	417224	1					
ANR	418288	ExpressionStatement	data [ l ++ ] = 0x24	487:3:13495:13511	417224	0	True				
ANR	418289	AssignmentExpression	data [ l ++ ] = 0x24		417224	0		=			
ANR	418290	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418291	Identifier	data		417224	0					
ANR	418292	PostIncDecOperationExpression	l ++		417224	1					
ANR	418293	Identifier	l		417224	0					
ANR	418294	IncDec	++		417224	1					
ANR	418295	PrimaryExpression	0x24		417224	1					
ANR	418296	IfStatement	if ( offset || mem_ref || ebp_reg )		417224	17					
ANR	418297	Condition	offset || mem_ref || ebp_reg	489:5:13521:13548	417224	0	True				
ANR	418298	OrExpression	offset || mem_ref || ebp_reg		417224	0		||			
ANR	418299	Identifier	offset		417224	0					
ANR	418300	OrExpression	mem_ref || ebp_reg		417224	1		||			
ANR	418301	Identifier	mem_ref		417224	0					
ANR	418302	Identifier	ebp_reg		417224	1					
ANR	418303	CompoundStatement		136:35:3707:3707	417224	1					
ANR	418304	ExpressionStatement	data [ l ++ ] = offset	491:2:13607:13625	417224	0	True				
ANR	418305	AssignmentExpression	data [ l ++ ] = offset		417224	0		=			
ANR	418306	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418307	Identifier	data		417224	0					
ANR	418308	PostIncDecOperationExpression	l ++		417224	1					
ANR	418309	Identifier	l		417224	0					
ANR	418310	IncDec	++		417224	1					
ANR	418311	Identifier	offset		417224	1					
ANR	418312	IfStatement	if ( mod_byte == 2 || mem_ref )		417224	1					
ANR	418313	Condition	mod_byte == 2 || mem_ref	492:6:13633:13656	417224	0	True				
ANR	418314	OrExpression	mod_byte == 2 || mem_ref		417224	0		||			
ANR	418315	EqualityExpression	mod_byte == 2		417224	0		==			
ANR	418316	Identifier	mod_byte		417224	0					
ANR	418317	PrimaryExpression	2		417224	1					
ANR	418318	Identifier	mem_ref		417224	1					
ANR	418319	CompoundStatement		139:32:3815:3815	417224	1					
ANR	418320	ExpressionStatement	data [ l ++ ] = offset >> 8	493:3:13664:13687	417224	0	True				
ANR	418321	AssignmentExpression	data [ l ++ ] = offset >> 8		417224	0		=			
ANR	418322	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418323	Identifier	data		417224	0					
ANR	418324	PostIncDecOperationExpression	l ++		417224	1					
ANR	418325	Identifier	l		417224	0					
ANR	418326	IncDec	++		417224	1					
ANR	418327	ShiftExpression	offset >> 8		417224	1		>>			
ANR	418328	Identifier	offset		417224	0					
ANR	418329	PrimaryExpression	8		417224	1					
ANR	418330	ExpressionStatement	data [ l ++ ] = offset >> 16	494:3:13692:13716	417224	1	True				
ANR	418331	AssignmentExpression	data [ l ++ ] = offset >> 16		417224	0		=			
ANR	418332	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418333	Identifier	data		417224	0					
ANR	418334	PostIncDecOperationExpression	l ++		417224	1					
ANR	418335	Identifier	l		417224	0					
ANR	418336	IncDec	++		417224	1					
ANR	418337	ShiftExpression	offset >> 16		417224	1		>>			
ANR	418338	Identifier	offset		417224	0					
ANR	418339	PrimaryExpression	16		417224	1					
ANR	418340	ExpressionStatement	data [ l ++ ] = offset >> 24	495:3:13721:13745	417224	2	True				
ANR	418341	AssignmentExpression	data [ l ++ ] = offset >> 24		417224	0		=			
ANR	418342	ArrayIndexing	data [ l ++ ]		417224	0					
ANR	418343	Identifier	data		417224	0					
ANR	418344	PostIncDecOperationExpression	l ++		417224	1					
ANR	418345	Identifier	l		417224	0					
ANR	418346	IncDec	++		417224	1					
ANR	418347	ShiftExpression	offset >> 24		417224	1		>>			
ANR	418348	Identifier	offset		417224	0					
ANR	418349	PrimaryExpression	24		417224	1					
ANR	418350	ReturnStatement	return l ;	498:1:13755:13763	417224	18	True				
ANR	418351	Identifier	l		417224	0					
ANR	418352	ReturnType	static int		417224	1					
ANR	418353	Identifier	process_1byte_op		417224	2					
ANR	418354	ParameterList	"RAsm * a , ut8 * data , const Opcode * op , int op1"		417224	3					
ANR	418355	Parameter	RAsm * a	354:28:9796:9802	417224	0	True				
ANR	418356	ParameterType	RAsm *		417224	0					
ANR	418357	Identifier	a		417224	1					
ANR	418358	Parameter	ut8 * data	354:37:9805:9813	417224	1	True				
ANR	418359	ParameterType	ut8 *		417224	0					
ANR	418360	Identifier	data		417224	1					
ANR	418361	Parameter	const Opcode * op	354:48:9816:9831	417224	2	True				
ANR	418362	ParameterType	const Opcode *		417224	0					
ANR	418363	Identifier	op		417224	1					
ANR	418364	Parameter	int op1	354:66:9834:9840	417224	3	True				
ANR	418365	ParameterType	int		417224	0					
ANR	418366	Identifier	op1		417224	1					
ANR	418367	CFGEntryNode	ENTRY		417224		True				
ANR	418368	CFGExitNode	EXIT		417224		True				
ANR	418369	Symbol	op -> operands [ 0 ] . offset_sign		417224						
ANR	418370	Symbol	data		417224						
ANR	418371	Symbol	* op		417224						
ANR	418372	Symbol	op -> operands [ 1 ] . immediate		417224						
ANR	418373	Symbol	op -> operands [ 0 ] . extended		417224						
ANR	418374	Symbol	* op -> operands [ 1 ] . regs		417224						
ANR	418375	Symbol	* op -> operands		417224						
ANR	418376	Symbol	reg		417224						
ANR	418377	Symbol	op -> operands [ 0 ] . reg		417224						
ANR	418378	Symbol	op -> operands [ 0 ] . offset		417224						
ANR	418379	Symbol	a -> bits		417224						
ANR	418380	Symbol	OT_BYTE		417224						
ANR	418381	Symbol	op -> operands [ 1 ] . scale		417224						
ANR	418382	Symbol	rex		417224						
ANR	418383	Symbol	mem_ref		417224						
ANR	418384	Symbol	offset		417224						
ANR	418385	Symbol	op -> operands [ 1 ] . reg		417224						
ANR	418386	Symbol	op -> operands [ 1 ] . offset		417224						
ANR	418387	Symbol	ebp_reg		417224						
ANR	418388	Symbol	* * * op		417224						
ANR	418389	Symbol	rm		417224						
ANR	418390	Symbol	op -> operands [ 0 ] . regs		417224						
ANR	418391	Symbol	getsib		417224						
ANR	418392	Symbol	ST8_MAX		417224						
ANR	418393	Symbol	OT_QWORD		417224						
ANR	418394	Symbol	X86R_ESP		417224						
ANR	418395	Symbol	X86R_EBP		417224						
ANR	418396	Symbol	op -> operands [ 1 ] . extended		417224						
ANR	418397	Symbol	* * op		417224						
ANR	418398	Symbol	op -> operands [ 1 ] . regs		417224						
ANR	418399	Symbol	ST8_MIN		417224						
ANR	418400	Symbol	op -> operands [ 0 ] . type		417224						
ANR	418401	Symbol	op -> operands [ 1 ] . offset_sign		417224						
ANR	418402	Symbol	* op -> operands [ 1 ] . scale		417224						
ANR	418403	Symbol	X86R_AL		417224						
ANR	418404	Symbol	OT_MEMORY		417224						
ANR	418405	Symbol	op -> operands [ 1 ] . is_good_flag		417224						
ANR	418406	Symbol	a		417224						
ANR	418407	Symbol	op		417224						
ANR	418408	Symbol	OT_CONSTANT		417224						
ANR	418409	Symbol	mod_byte		417224						
ANR	418410	Symbol	* a		417224						
ANR	418411	Symbol	* * op -> operands		417224						
ANR	418412	Symbol	l		417224						
ANR	418413	Symbol	OT_REGALL		417224						
ANR	418414	Symbol	op1		417224						
ANR	418415	Symbol	X86R_UNDEFINED		417224						
ANR	418416	Symbol	op -> operands [ 1 ] . type		417224						
ANR	418417	Symbol	op -> operands [ 1 ] . sign		417224						
ANR	418418	Symbol	* op -> operands [ 0 ] . regs		417224						
ANR	418419	Symbol	op -> operands		417224						
ANR	418420	Symbol	* data		417224						
ANR	418421	Symbol	OT_DWORD		417224						
ANR	418422	Function	opadc	501:0:13768:14139							
ANR	418423	FunctionDef	"opadc (RAsm * a , ut8 * data , const Opcode * op)"		418422	0					
ANR	418424	CompoundStatement		501:55:13823:14139	418422	0					
ANR	418425	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		418422	0					
ANR	418426	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	502:5:13830:13863	418422	0	True				
ANR	418427	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		418422	0		&			
ANR	418428	MemberAccess	op -> operands [ 1 ] . type		418422	0					
ANR	418429	ArrayIndexing	op -> operands [ 1 ]		418422	0					
ANR	418430	PtrMemberAccess	op -> operands		418422	0					
ANR	418431	Identifier	op		418422	0					
ANR	418432	Identifier	operands		418422	1					
ANR	418433	PrimaryExpression	1		418422	1					
ANR	418434	Identifier	type		418422	1					
ANR	418435	Identifier	OT_CONSTANT		418422	1					
ANR	418436	CompoundStatement		2:41:42:42	418422	1					
ANR	418437	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		418422	0					
ANR	418438	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	503:6:13874:13944	418422	0	True				
ANR	418439	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		418422	0		&&			
ANR	418440	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		418422	0		&			
ANR	418441	MemberAccess	op -> operands [ 0 ] . type		418422	0					
ANR	418442	ArrayIndexing	op -> operands [ 0 ]		418422	0					
ANR	418443	PtrMemberAccess	op -> operands		418422	0					
ANR	418444	Identifier	op		418422	0					
ANR	418445	Identifier	operands		418422	1					
ANR	418446	PrimaryExpression	0		418422	1					
ANR	418447	Identifier	type		418422	1					
ANR	418448	Identifier	OT_GPREG		418422	1					
ANR	418449	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		418422	1		&			
ANR	418450	MemberAccess	op -> operands [ 0 ] . type		418422	0					
ANR	418451	ArrayIndexing	op -> operands [ 0 ]		418422	0					
ANR	418452	PtrMemberAccess	op -> operands		418422	0					
ANR	418453	Identifier	op		418422	0					
ANR	418454	Identifier	operands		418422	1					
ANR	418455	PrimaryExpression	0		418422	1					
ANR	418456	Identifier	type		418422	1					
ANR	418457	Identifier	OT_WORD		418422	1					
ANR	418458	CompoundStatement		4:38:123:123	418422	1					
ANR	418459	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x10 ) ;"	505:3:13952:14000	418422	0	True				
ANR	418460	CallExpression	"process_16bit_group_1 ( a , data , op , 0x10 )"		418422	0					
ANR	418461	Callee	process_16bit_group_1		418422	0					
ANR	418462	Identifier	process_16bit_group_1		418422	0					
ANR	418463	ArgumentList	a		418422	1					
ANR	418464	Argument	a		418422	0					
ANR	418465	Identifier	a		418422	0					
ANR	418466	Argument	data		418422	1					
ANR	418467	Identifier	data		418422	0					
ANR	418468	Argument	op		418422	2					
ANR	418469	Identifier	op		418422	0					
ANR	418470	Argument	0x10		418422	3					
ANR	418471	PrimaryExpression	0x10		418422	0					
ANR	418472	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		418422	1					
ANR	418473	Condition	! is_al_reg ( & op -> operands [ 0 ] )	507:6:14012:14040	418422	0	True				
ANR	418474	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		418422	0					
ANR	418475	UnaryOperator	!		418422	0					
ANR	418476	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		418422	1					
ANR	418477	Callee	is_al_reg		418422	0					
ANR	418478	Identifier	is_al_reg		418422	0					
ANR	418479	ArgumentList	& op -> operands [ 0 ]		418422	1					
ANR	418480	Argument	& op -> operands [ 0 ]		418422	0					
ANR	418481	UnaryOperationExpression	& op -> operands [ 0 ]		418422	0					
ANR	418482	UnaryOperator	&		418422	0					
ANR	418483	ArrayIndexing	op -> operands [ 0 ]		418422	1					
ANR	418484	PtrMemberAccess	op -> operands		418422	0					
ANR	418485	Identifier	op		418422	0					
ANR	418486	Identifier	operands		418422	1					
ANR	418487	PrimaryExpression	0		418422	1					
ANR	418488	CompoundStatement		7:37:219:219	418422	1					
ANR	418489	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	508:3:14048:14084	418422	0	True				
ANR	418490	CallExpression	"process_group_1 ( a , data , op )"		418422	0					
ANR	418491	Callee	process_group_1		418422	0					
ANR	418492	Identifier	process_group_1		418422	0					
ANR	418493	ArgumentList	a		418422	1					
ANR	418494	Argument	a		418422	0					
ANR	418495	Identifier	a		418422	0					
ANR	418496	Argument	data		418422	1					
ANR	418497	Identifier	data		418422	0					
ANR	418498	Argument	op		418422	2					
ANR	418499	Identifier	op		418422	0					
ANR	418500	ReturnStatement	"return process_1byte_op ( a , data , op , 0x10 ) ;"	511:1:14094:14137	418422	1	True				
ANR	418501	CallExpression	"process_1byte_op ( a , data , op , 0x10 )"		418422	0					
ANR	418502	Callee	process_1byte_op		418422	0					
ANR	418503	Identifier	process_1byte_op		418422	0					
ANR	418504	ArgumentList	a		418422	1					
ANR	418505	Argument	a		418422	0					
ANR	418506	Identifier	a		418422	0					
ANR	418507	Argument	data		418422	1					
ANR	418508	Identifier	data		418422	0					
ANR	418509	Argument	op		418422	2					
ANR	418510	Identifier	op		418422	0					
ANR	418511	Argument	0x10		418422	3					
ANR	418512	PrimaryExpression	0x10		418422	0					
ANR	418513	ReturnType	static int		418422	1					
ANR	418514	Identifier	opadc		418422	2					
ANR	418515	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		418422	3					
ANR	418516	Parameter	RAsm * a	501:17:13785:13791	418422	0	True				
ANR	418517	ParameterType	RAsm *		418422	0					
ANR	418518	Identifier	a		418422	1					
ANR	418519	Parameter	ut8 * data	501:26:13794:13802	418422	1	True				
ANR	418520	ParameterType	ut8 *		418422	0					
ANR	418521	Identifier	data		418422	1					
ANR	418522	Parameter	const Opcode * op	501:37:13805:13820	418422	2	True				
ANR	418523	ParameterType	const Opcode *		418422	0					
ANR	418524	Identifier	op		418422	1					
ANR	418525	CFGEntryNode	ENTRY		418422		True				
ANR	418526	CFGExitNode	EXIT		418422		True				
ANR	418527	Symbol	a		418422						
ANR	418528	Symbol	op		418422						
ANR	418529	Symbol	OT_CONSTANT		418422						
ANR	418530	Symbol	OT_WORD		418422						
ANR	418531	Symbol	OT_GPREG		418422						
ANR	418532	Symbol	data		418422						
ANR	418533	Symbol	* op		418422						
ANR	418534	Symbol	process_group_1		418422						
ANR	418535	Symbol	process_1byte_op		418422						
ANR	418536	Symbol	* * op		418422						
ANR	418537	Symbol	* op -> operands		418422						
ANR	418538	Symbol	process_16bit_group_1		418422						
ANR	418539	Symbol	op -> operands [ 1 ] . type		418422						
ANR	418540	Symbol	op -> operands [ 0 ] . type		418422						
ANR	418541	Symbol	is_al_reg		418422						
ANR	418542	Symbol	op -> operands		418422						
ANR	418543	Function	opadd	514:0:14142:14513							
ANR	418544	FunctionDef	"opadd (RAsm * a , ut8 * data , const Opcode * op)"		418543	0					
ANR	418545	CompoundStatement		514:55:14197:14513	418543	0					
ANR	418546	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		418543	0					
ANR	418547	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	515:5:14204:14237	418543	0	True				
ANR	418548	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		418543	0		&			
ANR	418549	MemberAccess	op -> operands [ 1 ] . type		418543	0					
ANR	418550	ArrayIndexing	op -> operands [ 1 ]		418543	0					
ANR	418551	PtrMemberAccess	op -> operands		418543	0					
ANR	418552	Identifier	op		418543	0					
ANR	418553	Identifier	operands		418543	1					
ANR	418554	PrimaryExpression	1		418543	1					
ANR	418555	Identifier	type		418543	1					
ANR	418556	Identifier	OT_CONSTANT		418543	1					
ANR	418557	CompoundStatement		2:41:42:42	418543	1					
ANR	418558	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		418543	0					
ANR	418559	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	516:6:14248:14318	418543	0	True				
ANR	418560	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		418543	0		&&			
ANR	418561	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		418543	0		&			
ANR	418562	MemberAccess	op -> operands [ 0 ] . type		418543	0					
ANR	418563	ArrayIndexing	op -> operands [ 0 ]		418543	0					
ANR	418564	PtrMemberAccess	op -> operands		418543	0					
ANR	418565	Identifier	op		418543	0					
ANR	418566	Identifier	operands		418543	1					
ANR	418567	PrimaryExpression	0		418543	1					
ANR	418568	Identifier	type		418543	1					
ANR	418569	Identifier	OT_GPREG		418543	1					
ANR	418570	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		418543	1		&			
ANR	418571	MemberAccess	op -> operands [ 0 ] . type		418543	0					
ANR	418572	ArrayIndexing	op -> operands [ 0 ]		418543	0					
ANR	418573	PtrMemberAccess	op -> operands		418543	0					
ANR	418574	Identifier	op		418543	0					
ANR	418575	Identifier	operands		418543	1					
ANR	418576	PrimaryExpression	0		418543	1					
ANR	418577	Identifier	type		418543	1					
ANR	418578	Identifier	OT_WORD		418543	1					
ANR	418579	CompoundStatement		4:38:123:123	418543	1					
ANR	418580	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x00 ) ;"	518:3:14326:14374	418543	0	True				
ANR	418581	CallExpression	"process_16bit_group_1 ( a , data , op , 0x00 )"		418543	0					
ANR	418582	Callee	process_16bit_group_1		418543	0					
ANR	418583	Identifier	process_16bit_group_1		418543	0					
ANR	418584	ArgumentList	a		418543	1					
ANR	418585	Argument	a		418543	0					
ANR	418586	Identifier	a		418543	0					
ANR	418587	Argument	data		418543	1					
ANR	418588	Identifier	data		418543	0					
ANR	418589	Argument	op		418543	2					
ANR	418590	Identifier	op		418543	0					
ANR	418591	Argument	0x00		418543	3					
ANR	418592	PrimaryExpression	0x00		418543	0					
ANR	418593	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		418543	1					
ANR	418594	Condition	! is_al_reg ( & op -> operands [ 0 ] )	520:6:14386:14414	418543	0	True				
ANR	418595	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		418543	0					
ANR	418596	UnaryOperator	!		418543	0					
ANR	418597	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		418543	1					
ANR	418598	Callee	is_al_reg		418543	0					
ANR	418599	Identifier	is_al_reg		418543	0					
ANR	418600	ArgumentList	& op -> operands [ 0 ]		418543	1					
ANR	418601	Argument	& op -> operands [ 0 ]		418543	0					
ANR	418602	UnaryOperationExpression	& op -> operands [ 0 ]		418543	0					
ANR	418603	UnaryOperator	&		418543	0					
ANR	418604	ArrayIndexing	op -> operands [ 0 ]		418543	1					
ANR	418605	PtrMemberAccess	op -> operands		418543	0					
ANR	418606	Identifier	op		418543	0					
ANR	418607	Identifier	operands		418543	1					
ANR	418608	PrimaryExpression	0		418543	1					
ANR	418609	CompoundStatement		7:37:219:219	418543	1					
ANR	418610	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	521:3:14422:14458	418543	0	True				
ANR	418611	CallExpression	"process_group_1 ( a , data , op )"		418543	0					
ANR	418612	Callee	process_group_1		418543	0					
ANR	418613	Identifier	process_group_1		418543	0					
ANR	418614	ArgumentList	a		418543	1					
ANR	418615	Argument	a		418543	0					
ANR	418616	Identifier	a		418543	0					
ANR	418617	Argument	data		418543	1					
ANR	418618	Identifier	data		418543	0					
ANR	418619	Argument	op		418543	2					
ANR	418620	Identifier	op		418543	0					
ANR	418621	ReturnStatement	"return process_1byte_op ( a , data , op , 0x00 ) ;"	524:1:14468:14511	418543	1	True				
ANR	418622	CallExpression	"process_1byte_op ( a , data , op , 0x00 )"		418543	0					
ANR	418623	Callee	process_1byte_op		418543	0					
ANR	418624	Identifier	process_1byte_op		418543	0					
ANR	418625	ArgumentList	a		418543	1					
ANR	418626	Argument	a		418543	0					
ANR	418627	Identifier	a		418543	0					
ANR	418628	Argument	data		418543	1					
ANR	418629	Identifier	data		418543	0					
ANR	418630	Argument	op		418543	2					
ANR	418631	Identifier	op		418543	0					
ANR	418632	Argument	0x00		418543	3					
ANR	418633	PrimaryExpression	0x00		418543	0					
ANR	418634	ReturnType	static int		418543	1					
ANR	418635	Identifier	opadd		418543	2					
ANR	418636	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		418543	3					
ANR	418637	Parameter	RAsm * a	514:17:14159:14165	418543	0	True				
ANR	418638	ParameterType	RAsm *		418543	0					
ANR	418639	Identifier	a		418543	1					
ANR	418640	Parameter	ut8 * data	514:26:14168:14176	418543	1	True				
ANR	418641	ParameterType	ut8 *		418543	0					
ANR	418642	Identifier	data		418543	1					
ANR	418643	Parameter	const Opcode * op	514:37:14179:14194	418543	2	True				
ANR	418644	ParameterType	const Opcode *		418543	0					
ANR	418645	Identifier	op		418543	1					
ANR	418646	CFGEntryNode	ENTRY		418543		True				
ANR	418647	CFGExitNode	EXIT		418543		True				
ANR	418648	Symbol	a		418543						
ANR	418649	Symbol	op		418543						
ANR	418650	Symbol	OT_CONSTANT		418543						
ANR	418651	Symbol	OT_WORD		418543						
ANR	418652	Symbol	OT_GPREG		418543						
ANR	418653	Symbol	data		418543						
ANR	418654	Symbol	* op		418543						
ANR	418655	Symbol	process_group_1		418543						
ANR	418656	Symbol	process_1byte_op		418543						
ANR	418657	Symbol	* * op		418543						
ANR	418658	Symbol	* op -> operands		418543						
ANR	418659	Symbol	process_16bit_group_1		418543						
ANR	418660	Symbol	op -> operands [ 1 ] . type		418543						
ANR	418661	Symbol	op -> operands [ 0 ] . type		418543						
ANR	418662	Symbol	is_al_reg		418543						
ANR	418663	Symbol	op -> operands		418543						
ANR	418664	Function	opand	527:0:14516:14887							
ANR	418665	FunctionDef	"opand (RAsm * a , ut8 * data , const Opcode * op)"		418664	0					
ANR	418666	CompoundStatement		527:55:14571:14887	418664	0					
ANR	418667	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		418664	0					
ANR	418668	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	528:5:14578:14611	418664	0	True				
ANR	418669	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		418664	0		&			
ANR	418670	MemberAccess	op -> operands [ 1 ] . type		418664	0					
ANR	418671	ArrayIndexing	op -> operands [ 1 ]		418664	0					
ANR	418672	PtrMemberAccess	op -> operands		418664	0					
ANR	418673	Identifier	op		418664	0					
ANR	418674	Identifier	operands		418664	1					
ANR	418675	PrimaryExpression	1		418664	1					
ANR	418676	Identifier	type		418664	1					
ANR	418677	Identifier	OT_CONSTANT		418664	1					
ANR	418678	CompoundStatement		2:41:42:42	418664	1					
ANR	418679	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		418664	0					
ANR	418680	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	529:6:14622:14692	418664	0	True				
ANR	418681	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		418664	0		&&			
ANR	418682	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		418664	0		&			
ANR	418683	MemberAccess	op -> operands [ 0 ] . type		418664	0					
ANR	418684	ArrayIndexing	op -> operands [ 0 ]		418664	0					
ANR	418685	PtrMemberAccess	op -> operands		418664	0					
ANR	418686	Identifier	op		418664	0					
ANR	418687	Identifier	operands		418664	1					
ANR	418688	PrimaryExpression	0		418664	1					
ANR	418689	Identifier	type		418664	1					
ANR	418690	Identifier	OT_GPREG		418664	1					
ANR	418691	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		418664	1		&			
ANR	418692	MemberAccess	op -> operands [ 0 ] . type		418664	0					
ANR	418693	ArrayIndexing	op -> operands [ 0 ]		418664	0					
ANR	418694	PtrMemberAccess	op -> operands		418664	0					
ANR	418695	Identifier	op		418664	0					
ANR	418696	Identifier	operands		418664	1					
ANR	418697	PrimaryExpression	0		418664	1					
ANR	418698	Identifier	type		418664	1					
ANR	418699	Identifier	OT_WORD		418664	1					
ANR	418700	CompoundStatement		4:38:123:123	418664	1					
ANR	418701	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x20 ) ;"	531:3:14700:14748	418664	0	True				
ANR	418702	CallExpression	"process_16bit_group_1 ( a , data , op , 0x20 )"		418664	0					
ANR	418703	Callee	process_16bit_group_1		418664	0					
ANR	418704	Identifier	process_16bit_group_1		418664	0					
ANR	418705	ArgumentList	a		418664	1					
ANR	418706	Argument	a		418664	0					
ANR	418707	Identifier	a		418664	0					
ANR	418708	Argument	data		418664	1					
ANR	418709	Identifier	data		418664	0					
ANR	418710	Argument	op		418664	2					
ANR	418711	Identifier	op		418664	0					
ANR	418712	Argument	0x20		418664	3					
ANR	418713	PrimaryExpression	0x20		418664	0					
ANR	418714	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		418664	1					
ANR	418715	Condition	! is_al_reg ( & op -> operands [ 0 ] )	533:6:14760:14788	418664	0	True				
ANR	418716	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		418664	0					
ANR	418717	UnaryOperator	!		418664	0					
ANR	418718	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		418664	1					
ANR	418719	Callee	is_al_reg		418664	0					
ANR	418720	Identifier	is_al_reg		418664	0					
ANR	418721	ArgumentList	& op -> operands [ 0 ]		418664	1					
ANR	418722	Argument	& op -> operands [ 0 ]		418664	0					
ANR	418723	UnaryOperationExpression	& op -> operands [ 0 ]		418664	0					
ANR	418724	UnaryOperator	&		418664	0					
ANR	418725	ArrayIndexing	op -> operands [ 0 ]		418664	1					
ANR	418726	PtrMemberAccess	op -> operands		418664	0					
ANR	418727	Identifier	op		418664	0					
ANR	418728	Identifier	operands		418664	1					
ANR	418729	PrimaryExpression	0		418664	1					
ANR	418730	CompoundStatement		7:37:219:219	418664	1					
ANR	418731	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	534:3:14796:14832	418664	0	True				
ANR	418732	CallExpression	"process_group_1 ( a , data , op )"		418664	0					
ANR	418733	Callee	process_group_1		418664	0					
ANR	418734	Identifier	process_group_1		418664	0					
ANR	418735	ArgumentList	a		418664	1					
ANR	418736	Argument	a		418664	0					
ANR	418737	Identifier	a		418664	0					
ANR	418738	Argument	data		418664	1					
ANR	418739	Identifier	data		418664	0					
ANR	418740	Argument	op		418664	2					
ANR	418741	Identifier	op		418664	0					
ANR	418742	ReturnStatement	"return process_1byte_op ( a , data , op , 0x20 ) ;"	537:1:14842:14885	418664	1	True				
ANR	418743	CallExpression	"process_1byte_op ( a , data , op , 0x20 )"		418664	0					
ANR	418744	Callee	process_1byte_op		418664	0					
ANR	418745	Identifier	process_1byte_op		418664	0					
ANR	418746	ArgumentList	a		418664	1					
ANR	418747	Argument	a		418664	0					
ANR	418748	Identifier	a		418664	0					
ANR	418749	Argument	data		418664	1					
ANR	418750	Identifier	data		418664	0					
ANR	418751	Argument	op		418664	2					
ANR	418752	Identifier	op		418664	0					
ANR	418753	Argument	0x20		418664	3					
ANR	418754	PrimaryExpression	0x20		418664	0					
ANR	418755	ReturnType	static int		418664	1					
ANR	418756	Identifier	opand		418664	2					
ANR	418757	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		418664	3					
ANR	418758	Parameter	RAsm * a	527:17:14533:14539	418664	0	True				
ANR	418759	ParameterType	RAsm *		418664	0					
ANR	418760	Identifier	a		418664	1					
ANR	418761	Parameter	ut8 * data	527:26:14542:14550	418664	1	True				
ANR	418762	ParameterType	ut8 *		418664	0					
ANR	418763	Identifier	data		418664	1					
ANR	418764	Parameter	const Opcode * op	527:37:14553:14568	418664	2	True				
ANR	418765	ParameterType	const Opcode *		418664	0					
ANR	418766	Identifier	op		418664	1					
ANR	418767	CFGEntryNode	ENTRY		418664		True				
ANR	418768	CFGExitNode	EXIT		418664		True				
ANR	418769	Symbol	a		418664						
ANR	418770	Symbol	op		418664						
ANR	418771	Symbol	OT_CONSTANT		418664						
ANR	418772	Symbol	OT_WORD		418664						
ANR	418773	Symbol	OT_GPREG		418664						
ANR	418774	Symbol	data		418664						
ANR	418775	Symbol	* op		418664						
ANR	418776	Symbol	process_group_1		418664						
ANR	418777	Symbol	process_1byte_op		418664						
ANR	418778	Symbol	* * op		418664						
ANR	418779	Symbol	* op -> operands		418664						
ANR	418780	Symbol	process_16bit_group_1		418664						
ANR	418781	Symbol	op -> operands [ 1 ] . type		418664						
ANR	418782	Symbol	op -> operands [ 0 ] . type		418664						
ANR	418783	Symbol	is_al_reg		418664						
ANR	418784	Symbol	op -> operands		418664						
ANR	418785	Function	opcmp	540:0:14890:15261							
ANR	418786	FunctionDef	"opcmp (RAsm * a , ut8 * data , const Opcode * op)"		418785	0					
ANR	418787	CompoundStatement		540:55:14945:15261	418785	0					
ANR	418788	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		418785	0					
ANR	418789	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	541:5:14952:14985	418785	0	True				
ANR	418790	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		418785	0		&			
ANR	418791	MemberAccess	op -> operands [ 1 ] . type		418785	0					
ANR	418792	ArrayIndexing	op -> operands [ 1 ]		418785	0					
ANR	418793	PtrMemberAccess	op -> operands		418785	0					
ANR	418794	Identifier	op		418785	0					
ANR	418795	Identifier	operands		418785	1					
ANR	418796	PrimaryExpression	1		418785	1					
ANR	418797	Identifier	type		418785	1					
ANR	418798	Identifier	OT_CONSTANT		418785	1					
ANR	418799	CompoundStatement		2:41:42:42	418785	1					
ANR	418800	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		418785	0					
ANR	418801	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	542:6:14996:15066	418785	0	True				
ANR	418802	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		418785	0		&&			
ANR	418803	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		418785	0		&			
ANR	418804	MemberAccess	op -> operands [ 0 ] . type		418785	0					
ANR	418805	ArrayIndexing	op -> operands [ 0 ]		418785	0					
ANR	418806	PtrMemberAccess	op -> operands		418785	0					
ANR	418807	Identifier	op		418785	0					
ANR	418808	Identifier	operands		418785	1					
ANR	418809	PrimaryExpression	0		418785	1					
ANR	418810	Identifier	type		418785	1					
ANR	418811	Identifier	OT_GPREG		418785	1					
ANR	418812	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		418785	1		&			
ANR	418813	MemberAccess	op -> operands [ 0 ] . type		418785	0					
ANR	418814	ArrayIndexing	op -> operands [ 0 ]		418785	0					
ANR	418815	PtrMemberAccess	op -> operands		418785	0					
ANR	418816	Identifier	op		418785	0					
ANR	418817	Identifier	operands		418785	1					
ANR	418818	PrimaryExpression	0		418785	1					
ANR	418819	Identifier	type		418785	1					
ANR	418820	Identifier	OT_WORD		418785	1					
ANR	418821	CompoundStatement		4:38:123:123	418785	1					
ANR	418822	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x38 ) ;"	544:3:15074:15122	418785	0	True				
ANR	418823	CallExpression	"process_16bit_group_1 ( a , data , op , 0x38 )"		418785	0					
ANR	418824	Callee	process_16bit_group_1		418785	0					
ANR	418825	Identifier	process_16bit_group_1		418785	0					
ANR	418826	ArgumentList	a		418785	1					
ANR	418827	Argument	a		418785	0					
ANR	418828	Identifier	a		418785	0					
ANR	418829	Argument	data		418785	1					
ANR	418830	Identifier	data		418785	0					
ANR	418831	Argument	op		418785	2					
ANR	418832	Identifier	op		418785	0					
ANR	418833	Argument	0x38		418785	3					
ANR	418834	PrimaryExpression	0x38		418785	0					
ANR	418835	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		418785	1					
ANR	418836	Condition	! is_al_reg ( & op -> operands [ 0 ] )	546:6:15134:15162	418785	0	True				
ANR	418837	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		418785	0					
ANR	418838	UnaryOperator	!		418785	0					
ANR	418839	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		418785	1					
ANR	418840	Callee	is_al_reg		418785	0					
ANR	418841	Identifier	is_al_reg		418785	0					
ANR	418842	ArgumentList	& op -> operands [ 0 ]		418785	1					
ANR	418843	Argument	& op -> operands [ 0 ]		418785	0					
ANR	418844	UnaryOperationExpression	& op -> operands [ 0 ]		418785	0					
ANR	418845	UnaryOperator	&		418785	0					
ANR	418846	ArrayIndexing	op -> operands [ 0 ]		418785	1					
ANR	418847	PtrMemberAccess	op -> operands		418785	0					
ANR	418848	Identifier	op		418785	0					
ANR	418849	Identifier	operands		418785	1					
ANR	418850	PrimaryExpression	0		418785	1					
ANR	418851	CompoundStatement		7:37:219:219	418785	1					
ANR	418852	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	547:3:15170:15206	418785	0	True				
ANR	418853	CallExpression	"process_group_1 ( a , data , op )"		418785	0					
ANR	418854	Callee	process_group_1		418785	0					
ANR	418855	Identifier	process_group_1		418785	0					
ANR	418856	ArgumentList	a		418785	1					
ANR	418857	Argument	a		418785	0					
ANR	418858	Identifier	a		418785	0					
ANR	418859	Argument	data		418785	1					
ANR	418860	Identifier	data		418785	0					
ANR	418861	Argument	op		418785	2					
ANR	418862	Identifier	op		418785	0					
ANR	418863	ReturnStatement	"return process_1byte_op ( a , data , op , 0x38 ) ;"	550:1:15216:15259	418785	1	True				
ANR	418864	CallExpression	"process_1byte_op ( a , data , op , 0x38 )"		418785	0					
ANR	418865	Callee	process_1byte_op		418785	0					
ANR	418866	Identifier	process_1byte_op		418785	0					
ANR	418867	ArgumentList	a		418785	1					
ANR	418868	Argument	a		418785	0					
ANR	418869	Identifier	a		418785	0					
ANR	418870	Argument	data		418785	1					
ANR	418871	Identifier	data		418785	0					
ANR	418872	Argument	op		418785	2					
ANR	418873	Identifier	op		418785	0					
ANR	418874	Argument	0x38		418785	3					
ANR	418875	PrimaryExpression	0x38		418785	0					
ANR	418876	ReturnType	static int		418785	1					
ANR	418877	Identifier	opcmp		418785	2					
ANR	418878	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		418785	3					
ANR	418879	Parameter	RAsm * a	540:17:14907:14913	418785	0	True				
ANR	418880	ParameterType	RAsm *		418785	0					
ANR	418881	Identifier	a		418785	1					
ANR	418882	Parameter	ut8 * data	540:26:14916:14924	418785	1	True				
ANR	418883	ParameterType	ut8 *		418785	0					
ANR	418884	Identifier	data		418785	1					
ANR	418885	Parameter	const Opcode * op	540:37:14927:14942	418785	2	True				
ANR	418886	ParameterType	const Opcode *		418785	0					
ANR	418887	Identifier	op		418785	1					
ANR	418888	CFGEntryNode	ENTRY		418785		True				
ANR	418889	CFGExitNode	EXIT		418785		True				
ANR	418890	Symbol	a		418785						
ANR	418891	Symbol	op		418785						
ANR	418892	Symbol	OT_CONSTANT		418785						
ANR	418893	Symbol	OT_WORD		418785						
ANR	418894	Symbol	OT_GPREG		418785						
ANR	418895	Symbol	data		418785						
ANR	418896	Symbol	* op		418785						
ANR	418897	Symbol	process_group_1		418785						
ANR	418898	Symbol	process_1byte_op		418785						
ANR	418899	Symbol	* * op		418785						
ANR	418900	Symbol	* op -> operands		418785						
ANR	418901	Symbol	process_16bit_group_1		418785						
ANR	418902	Symbol	op -> operands [ 1 ] . type		418785						
ANR	418903	Symbol	op -> operands [ 0 ] . type		418785						
ANR	418904	Symbol	is_al_reg		418785						
ANR	418905	Symbol	op -> operands		418785						
ANR	418906	Function	opsub	553:0:15264:15635							
ANR	418907	FunctionDef	"opsub (RAsm * a , ut8 * data , const Opcode * op)"		418906	0					
ANR	418908	CompoundStatement		553:55:15319:15635	418906	0					
ANR	418909	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		418906	0					
ANR	418910	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	554:5:15326:15359	418906	0	True				
ANR	418911	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		418906	0		&			
ANR	418912	MemberAccess	op -> operands [ 1 ] . type		418906	0					
ANR	418913	ArrayIndexing	op -> operands [ 1 ]		418906	0					
ANR	418914	PtrMemberAccess	op -> operands		418906	0					
ANR	418915	Identifier	op		418906	0					
ANR	418916	Identifier	operands		418906	1					
ANR	418917	PrimaryExpression	1		418906	1					
ANR	418918	Identifier	type		418906	1					
ANR	418919	Identifier	OT_CONSTANT		418906	1					
ANR	418920	CompoundStatement		2:41:42:42	418906	1					
ANR	418921	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		418906	0					
ANR	418922	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	555:6:15370:15440	418906	0	True				
ANR	418923	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		418906	0		&&			
ANR	418924	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		418906	0		&			
ANR	418925	MemberAccess	op -> operands [ 0 ] . type		418906	0					
ANR	418926	ArrayIndexing	op -> operands [ 0 ]		418906	0					
ANR	418927	PtrMemberAccess	op -> operands		418906	0					
ANR	418928	Identifier	op		418906	0					
ANR	418929	Identifier	operands		418906	1					
ANR	418930	PrimaryExpression	0		418906	1					
ANR	418931	Identifier	type		418906	1					
ANR	418932	Identifier	OT_GPREG		418906	1					
ANR	418933	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		418906	1		&			
ANR	418934	MemberAccess	op -> operands [ 0 ] . type		418906	0					
ANR	418935	ArrayIndexing	op -> operands [ 0 ]		418906	0					
ANR	418936	PtrMemberAccess	op -> operands		418906	0					
ANR	418937	Identifier	op		418906	0					
ANR	418938	Identifier	operands		418906	1					
ANR	418939	PrimaryExpression	0		418906	1					
ANR	418940	Identifier	type		418906	1					
ANR	418941	Identifier	OT_WORD		418906	1					
ANR	418942	CompoundStatement		4:38:123:123	418906	1					
ANR	418943	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x28 ) ;"	557:3:15448:15496	418906	0	True				
ANR	418944	CallExpression	"process_16bit_group_1 ( a , data , op , 0x28 )"		418906	0					
ANR	418945	Callee	process_16bit_group_1		418906	0					
ANR	418946	Identifier	process_16bit_group_1		418906	0					
ANR	418947	ArgumentList	a		418906	1					
ANR	418948	Argument	a		418906	0					
ANR	418949	Identifier	a		418906	0					
ANR	418950	Argument	data		418906	1					
ANR	418951	Identifier	data		418906	0					
ANR	418952	Argument	op		418906	2					
ANR	418953	Identifier	op		418906	0					
ANR	418954	Argument	0x28		418906	3					
ANR	418955	PrimaryExpression	0x28		418906	0					
ANR	418956	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		418906	1					
ANR	418957	Condition	! is_al_reg ( & op -> operands [ 0 ] )	559:6:15508:15536	418906	0	True				
ANR	418958	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		418906	0					
ANR	418959	UnaryOperator	!		418906	0					
ANR	418960	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		418906	1					
ANR	418961	Callee	is_al_reg		418906	0					
ANR	418962	Identifier	is_al_reg		418906	0					
ANR	418963	ArgumentList	& op -> operands [ 0 ]		418906	1					
ANR	418964	Argument	& op -> operands [ 0 ]		418906	0					
ANR	418965	UnaryOperationExpression	& op -> operands [ 0 ]		418906	0					
ANR	418966	UnaryOperator	&		418906	0					
ANR	418967	ArrayIndexing	op -> operands [ 0 ]		418906	1					
ANR	418968	PtrMemberAccess	op -> operands		418906	0					
ANR	418969	Identifier	op		418906	0					
ANR	418970	Identifier	operands		418906	1					
ANR	418971	PrimaryExpression	0		418906	1					
ANR	418972	CompoundStatement		7:37:219:219	418906	1					
ANR	418973	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	560:3:15544:15580	418906	0	True				
ANR	418974	CallExpression	"process_group_1 ( a , data , op )"		418906	0					
ANR	418975	Callee	process_group_1		418906	0					
ANR	418976	Identifier	process_group_1		418906	0					
ANR	418977	ArgumentList	a		418906	1					
ANR	418978	Argument	a		418906	0					
ANR	418979	Identifier	a		418906	0					
ANR	418980	Argument	data		418906	1					
ANR	418981	Identifier	data		418906	0					
ANR	418982	Argument	op		418906	2					
ANR	418983	Identifier	op		418906	0					
ANR	418984	ReturnStatement	"return process_1byte_op ( a , data , op , 0x28 ) ;"	563:1:15590:15633	418906	1	True				
ANR	418985	CallExpression	"process_1byte_op ( a , data , op , 0x28 )"		418906	0					
ANR	418986	Callee	process_1byte_op		418906	0					
ANR	418987	Identifier	process_1byte_op		418906	0					
ANR	418988	ArgumentList	a		418906	1					
ANR	418989	Argument	a		418906	0					
ANR	418990	Identifier	a		418906	0					
ANR	418991	Argument	data		418906	1					
ANR	418992	Identifier	data		418906	0					
ANR	418993	Argument	op		418906	2					
ANR	418994	Identifier	op		418906	0					
ANR	418995	Argument	0x28		418906	3					
ANR	418996	PrimaryExpression	0x28		418906	0					
ANR	418997	ReturnType	static int		418906	1					
ANR	418998	Identifier	opsub		418906	2					
ANR	418999	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		418906	3					
ANR	419000	Parameter	RAsm * a	553:17:15281:15287	418906	0	True				
ANR	419001	ParameterType	RAsm *		418906	0					
ANR	419002	Identifier	a		418906	1					
ANR	419003	Parameter	ut8 * data	553:26:15290:15298	418906	1	True				
ANR	419004	ParameterType	ut8 *		418906	0					
ANR	419005	Identifier	data		418906	1					
ANR	419006	Parameter	const Opcode * op	553:37:15301:15316	418906	2	True				
ANR	419007	ParameterType	const Opcode *		418906	0					
ANR	419008	Identifier	op		418906	1					
ANR	419009	CFGEntryNode	ENTRY		418906		True				
ANR	419010	CFGExitNode	EXIT		418906		True				
ANR	419011	Symbol	a		418906						
ANR	419012	Symbol	op		418906						
ANR	419013	Symbol	OT_CONSTANT		418906						
ANR	419014	Symbol	OT_WORD		418906						
ANR	419015	Symbol	OT_GPREG		418906						
ANR	419016	Symbol	data		418906						
ANR	419017	Symbol	* op		418906						
ANR	419018	Symbol	process_group_1		418906						
ANR	419019	Symbol	process_1byte_op		418906						
ANR	419020	Symbol	* * op		418906						
ANR	419021	Symbol	* op -> operands		418906						
ANR	419022	Symbol	process_16bit_group_1		418906						
ANR	419023	Symbol	op -> operands [ 1 ] . type		418906						
ANR	419024	Symbol	op -> operands [ 0 ] . type		418906						
ANR	419025	Symbol	is_al_reg		418906						
ANR	419026	Symbol	op -> operands		418906						
ANR	419027	Function	opor	566:0:15638:16009							
ANR	419028	FunctionDef	"opor (RAsm * a , ut8 * data , const Opcode * op)"		419027	0					
ANR	419029	CompoundStatement		566:55:15693:16009	419027	0					
ANR	419030	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		419027	0					
ANR	419031	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	567:5:15700:15733	419027	0	True				
ANR	419032	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		419027	0		&			
ANR	419033	MemberAccess	op -> operands [ 1 ] . type		419027	0					
ANR	419034	ArrayIndexing	op -> operands [ 1 ]		419027	0					
ANR	419035	PtrMemberAccess	op -> operands		419027	0					
ANR	419036	Identifier	op		419027	0					
ANR	419037	Identifier	operands		419027	1					
ANR	419038	PrimaryExpression	1		419027	1					
ANR	419039	Identifier	type		419027	1					
ANR	419040	Identifier	OT_CONSTANT		419027	1					
ANR	419041	CompoundStatement		2:41:42:42	419027	1					
ANR	419042	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		419027	0					
ANR	419043	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	568:6:15744:15814	419027	0	True				
ANR	419044	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		419027	0		&&			
ANR	419045	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		419027	0		&			
ANR	419046	MemberAccess	op -> operands [ 0 ] . type		419027	0					
ANR	419047	ArrayIndexing	op -> operands [ 0 ]		419027	0					
ANR	419048	PtrMemberAccess	op -> operands		419027	0					
ANR	419049	Identifier	op		419027	0					
ANR	419050	Identifier	operands		419027	1					
ANR	419051	PrimaryExpression	0		419027	1					
ANR	419052	Identifier	type		419027	1					
ANR	419053	Identifier	OT_GPREG		419027	1					
ANR	419054	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		419027	1		&			
ANR	419055	MemberAccess	op -> operands [ 0 ] . type		419027	0					
ANR	419056	ArrayIndexing	op -> operands [ 0 ]		419027	0					
ANR	419057	PtrMemberAccess	op -> operands		419027	0					
ANR	419058	Identifier	op		419027	0					
ANR	419059	Identifier	operands		419027	1					
ANR	419060	PrimaryExpression	0		419027	1					
ANR	419061	Identifier	type		419027	1					
ANR	419062	Identifier	OT_WORD		419027	1					
ANR	419063	CompoundStatement		4:38:123:123	419027	1					
ANR	419064	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x08 ) ;"	570:3:15822:15870	419027	0	True				
ANR	419065	CallExpression	"process_16bit_group_1 ( a , data , op , 0x08 )"		419027	0					
ANR	419066	Callee	process_16bit_group_1		419027	0					
ANR	419067	Identifier	process_16bit_group_1		419027	0					
ANR	419068	ArgumentList	a		419027	1					
ANR	419069	Argument	a		419027	0					
ANR	419070	Identifier	a		419027	0					
ANR	419071	Argument	data		419027	1					
ANR	419072	Identifier	data		419027	0					
ANR	419073	Argument	op		419027	2					
ANR	419074	Identifier	op		419027	0					
ANR	419075	Argument	0x08		419027	3					
ANR	419076	PrimaryExpression	0x08		419027	0					
ANR	419077	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		419027	1					
ANR	419078	Condition	! is_al_reg ( & op -> operands [ 0 ] )	572:6:15882:15910	419027	0	True				
ANR	419079	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		419027	0					
ANR	419080	UnaryOperator	!		419027	0					
ANR	419081	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		419027	1					
ANR	419082	Callee	is_al_reg		419027	0					
ANR	419083	Identifier	is_al_reg		419027	0					
ANR	419084	ArgumentList	& op -> operands [ 0 ]		419027	1					
ANR	419085	Argument	& op -> operands [ 0 ]		419027	0					
ANR	419086	UnaryOperationExpression	& op -> operands [ 0 ]		419027	0					
ANR	419087	UnaryOperator	&		419027	0					
ANR	419088	ArrayIndexing	op -> operands [ 0 ]		419027	1					
ANR	419089	PtrMemberAccess	op -> operands		419027	0					
ANR	419090	Identifier	op		419027	0					
ANR	419091	Identifier	operands		419027	1					
ANR	419092	PrimaryExpression	0		419027	1					
ANR	419093	CompoundStatement		7:37:219:219	419027	1					
ANR	419094	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	573:3:15918:15954	419027	0	True				
ANR	419095	CallExpression	"process_group_1 ( a , data , op )"		419027	0					
ANR	419096	Callee	process_group_1		419027	0					
ANR	419097	Identifier	process_group_1		419027	0					
ANR	419098	ArgumentList	a		419027	1					
ANR	419099	Argument	a		419027	0					
ANR	419100	Identifier	a		419027	0					
ANR	419101	Argument	data		419027	1					
ANR	419102	Identifier	data		419027	0					
ANR	419103	Argument	op		419027	2					
ANR	419104	Identifier	op		419027	0					
ANR	419105	ReturnStatement	"return process_1byte_op ( a , data , op , 0x08 ) ;"	576:1:15964:16007	419027	1	True				
ANR	419106	CallExpression	"process_1byte_op ( a , data , op , 0x08 )"		419027	0					
ANR	419107	Callee	process_1byte_op		419027	0					
ANR	419108	Identifier	process_1byte_op		419027	0					
ANR	419109	ArgumentList	a		419027	1					
ANR	419110	Argument	a		419027	0					
ANR	419111	Identifier	a		419027	0					
ANR	419112	Argument	data		419027	1					
ANR	419113	Identifier	data		419027	0					
ANR	419114	Argument	op		419027	2					
ANR	419115	Identifier	op		419027	0					
ANR	419116	Argument	0x08		419027	3					
ANR	419117	PrimaryExpression	0x08		419027	0					
ANR	419118	ReturnType	static int		419027	1					
ANR	419119	Identifier	opor		419027	2					
ANR	419120	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		419027	3					
ANR	419121	Parameter	RAsm * a	566:16:15654:15660	419027	0	True				
ANR	419122	ParameterType	RAsm *		419027	0					
ANR	419123	Identifier	a		419027	1					
ANR	419124	Parameter	ut8 * data	566:25:15663:15672	419027	1	True				
ANR	419125	ParameterType	ut8 *		419027	0					
ANR	419126	Identifier	data		419027	1					
ANR	419127	Parameter	const Opcode * op	566:37:15675:15690	419027	2	True				
ANR	419128	ParameterType	const Opcode *		419027	0					
ANR	419129	Identifier	op		419027	1					
ANR	419130	CFGEntryNode	ENTRY		419027		True				
ANR	419131	CFGExitNode	EXIT		419027		True				
ANR	419132	Symbol	a		419027						
ANR	419133	Symbol	op		419027						
ANR	419134	Symbol	OT_CONSTANT		419027						
ANR	419135	Symbol	OT_WORD		419027						
ANR	419136	Symbol	OT_GPREG		419027						
ANR	419137	Symbol	data		419027						
ANR	419138	Symbol	* op		419027						
ANR	419139	Symbol	process_group_1		419027						
ANR	419140	Symbol	process_1byte_op		419027						
ANR	419141	Symbol	* * op		419027						
ANR	419142	Symbol	* op -> operands		419027						
ANR	419143	Symbol	process_16bit_group_1		419027						
ANR	419144	Symbol	op -> operands [ 1 ] . type		419027						
ANR	419145	Symbol	op -> operands [ 0 ] . type		419027						
ANR	419146	Symbol	is_al_reg		419027						
ANR	419147	Symbol	op -> operands		419027						
ANR	419148	Function	opxadd	579:0:16012:16566							
ANR	419149	FunctionDef	"opxadd (RAsm * a , ut8 * data , const Opcode * op)"		419148	0					
ANR	419150	CompoundStatement		579:56:16068:16566	419148	0					
ANR	419151	ExpressionStatement	is_valid_registers ( op )	580:1:16071:16094	419148	0	True				
ANR	419152	CallExpression	is_valid_registers ( op )		419148	0					
ANR	419153	Callee	is_valid_registers		419148	0					
ANR	419154	Identifier	is_valid_registers		419148	0					
ANR	419155	ArgumentList	op		419148	1					
ANR	419156	Argument	op		419148	0					
ANR	419157	Identifier	op		419148	0					
ANR	419158	IdentifierDeclStatement	int i = 0 ;	581:1:16097:16106	419148	1	True				
ANR	419159	IdentifierDecl	i = 0		419148	0					
ANR	419160	IdentifierDeclType	int		419148	0					
ANR	419161	Identifier	i		419148	1					
ANR	419162	AssignmentExpression	i = 0		419148	2		=			
ANR	419163	Identifier	i		419148	0					
ANR	419164	PrimaryExpression	0		419148	1					
ANR	419165	IfStatement	if ( op -> operands_count < 2 )		419148	2					
ANR	419166	Condition	op -> operands_count < 2	582:5:16113:16134	419148	0	True				
ANR	419167	RelationalExpression	op -> operands_count < 2		419148	0		<			
ANR	419168	PtrMemberAccess	op -> operands_count		419148	0					
ANR	419169	Identifier	op		419148	0					
ANR	419170	Identifier	operands_count		419148	1					
ANR	419171	PrimaryExpression	2		419148	1					
ANR	419172	CompoundStatement		4:30:69:69	419148	1					
ANR	419173	ReturnStatement	return - 1 ;	583:2:16142:16151	419148	0	True				
ANR	419174	UnaryOperationExpression	- 1		419148	0					
ANR	419175	UnaryOperator	-		419148	0					
ANR	419176	PrimaryExpression	1		419148	1					
ANR	419177	IfStatement	if ( a -> bits == 64 )		419148	3					
ANR	419178	Condition	a -> bits == 64	585:5:16161:16173	419148	0	True				
ANR	419179	EqualityExpression	a -> bits == 64		419148	0		==			
ANR	419180	PtrMemberAccess	a -> bits		419148	0					
ANR	419181	Identifier	a		419148	0					
ANR	419182	Identifier	bits		419148	1					
ANR	419183	PrimaryExpression	64		419148	1					
ANR	419184	CompoundStatement		7:20:107:107	419148	1					
ANR	419185	ExpressionStatement	data [ i ++ ] = 0x48	586:2:16180:16196	419148	0	True				
ANR	419186	AssignmentExpression	data [ i ++ ] = 0x48		419148	0		=			
ANR	419187	ArrayIndexing	data [ i ++ ]		419148	0					
ANR	419188	Identifier	data		419148	0					
ANR	419189	PostIncDecOperationExpression	i ++		419148	1					
ANR	419190	Identifier	i		419148	0					
ANR	419191	IncDec	++		419148	1					
ANR	419192	PrimaryExpression	0x48		419148	1					
ANR	419193	ExpressionStatement		587:2:16200:16200	419148	4	True				
ANR	419194	ExpressionStatement	data [ i ++ ] = 0x0f	588:1:16203:16219	419148	5	True				
ANR	419195	AssignmentExpression	data [ i ++ ] = 0x0f		419148	0		=			
ANR	419196	ArrayIndexing	data [ i ++ ]		419148	0					
ANR	419197	Identifier	data		419148	0					
ANR	419198	PostIncDecOperationExpression	i ++		419148	1					
ANR	419199	Identifier	i		419148	0					
ANR	419200	IncDec	++		419148	1					
ANR	419201	PrimaryExpression	0x0f		419148	1					
ANR	419202	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		419148	6					
ANR	419203	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	589:5:16226:16293	419148	0	True				
ANR	419204	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		419148	0		&&			
ANR	419205	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		419148	0		&			
ANR	419206	MemberAccess	op -> operands [ 0 ] . type		419148	0					
ANR	419207	ArrayIndexing	op -> operands [ 0 ]		419148	0					
ANR	419208	PtrMemberAccess	op -> operands		419148	0					
ANR	419209	Identifier	op		419148	0					
ANR	419210	Identifier	operands		419148	1					
ANR	419211	PrimaryExpression	0		419148	1					
ANR	419212	Identifier	type		419148	1					
ANR	419213	Identifier	OT_BYTE		419148	1					
ANR	419214	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		419148	1		&			
ANR	419215	MemberAccess	op -> operands [ 1 ] . type		419148	0					
ANR	419216	ArrayIndexing	op -> operands [ 1 ]		419148	0					
ANR	419217	PtrMemberAccess	op -> operands		419148	0					
ANR	419218	Identifier	op		419148	0					
ANR	419219	Identifier	operands		419148	1					
ANR	419220	PrimaryExpression	1		419148	1					
ANR	419221	Identifier	type		419148	1					
ANR	419222	Identifier	OT_BYTE		419148	1					
ANR	419223	CompoundStatement		12:36:227:227	419148	1					
ANR	419224	ExpressionStatement	data [ i ++ ] = 0xc0	591:2:16300:16316	419148	0	True				
ANR	419225	AssignmentExpression	data [ i ++ ] = 0xc0		419148	0		=			
ANR	419226	ArrayIndexing	data [ i ++ ]		419148	0					
ANR	419227	Identifier	data		419148	0					
ANR	419228	PostIncDecOperationExpression	i ++		419148	1					
ANR	419229	Identifier	i		419148	0					
ANR	419230	IncDec	++		419148	1					
ANR	419231	PrimaryExpression	0xc0		419148	1					
ANR	419232	ElseStatement	else		419148	0					
ANR	419233	CompoundStatement		14:8:257:257	419148	0					
ANR	419234	ExpressionStatement	data [ i ++ ] = 0xc1	593:2:16330:16346	419148	0	True				
ANR	419235	AssignmentExpression	data [ i ++ ] = 0xc1		419148	0		=			
ANR	419236	ArrayIndexing	data [ i ++ ]		419148	0					
ANR	419237	Identifier	data		419148	0					
ANR	419238	PostIncDecOperationExpression	i ++		419148	1					
ANR	419239	Identifier	i		419148	0					
ANR	419240	IncDec	++		419148	1					
ANR	419241	PrimaryExpression	0xc1		419148	1					
ANR	419242	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & OT_REGALL )		419148	7					
ANR	419243	Condition	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & OT_REGALL	595:5:16356:16430	419148	0	True				
ANR	419244	AndExpression	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & OT_REGALL		419148	0		&&			
ANR	419245	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		419148	0		&			
ANR	419246	MemberAccess	op -> operands [ 0 ] . type		419148	0					
ANR	419247	ArrayIndexing	op -> operands [ 0 ]		419148	0					
ANR	419248	PtrMemberAccess	op -> operands		419148	0					
ANR	419249	Identifier	op		419148	0					
ANR	419250	Identifier	operands		419148	1					
ANR	419251	PrimaryExpression	0		419148	1					
ANR	419252	Identifier	type		419148	1					
ANR	419253	Identifier	OT_REGALL		419148	1					
ANR	419254	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		419148	1		&			
ANR	419255	MemberAccess	op -> operands [ 1 ] . type		419148	0					
ANR	419256	ArrayIndexing	op -> operands [ 1 ]		419148	0					
ANR	419257	PtrMemberAccess	op -> operands		419148	0					
ANR	419258	Identifier	op		419148	0					
ANR	419259	Identifier	operands		419148	1					
ANR	419260	PrimaryExpression	1		419148	1					
ANR	419261	Identifier	type		419148	1					
ANR	419262	Identifier	OT_REGALL		419148	1					
ANR	419263	CompoundStatement		18:41:364:364	419148	1					
ANR	419264	ExpressionStatement	data [ i ] |= 0xc0	597:2:16458:16473	419148	0	True				
ANR	419265	AssignmentExpression	data [ i ] |= 0xc0		419148	0		|=			
ANR	419266	ArrayIndexing	data [ i ]		419148	0					
ANR	419267	Identifier	data		419148	0					
ANR	419268	Identifier	i		419148	1					
ANR	419269	PrimaryExpression	0xc0		419148	1					
ANR	419270	ExpressionStatement	data [ i ] |= ( op -> operands [ 1 ] . reg << 3 )	598:2:16477:16514	419148	1	True				
ANR	419271	AssignmentExpression	data [ i ] |= ( op -> operands [ 1 ] . reg << 3 )		419148	0		|=			
ANR	419272	ArrayIndexing	data [ i ]		419148	0					
ANR	419273	Identifier	data		419148	0					
ANR	419274	Identifier	i		419148	1					
ANR	419275	ShiftExpression	op -> operands [ 1 ] . reg << 3		419148	1		<<			
ANR	419276	MemberAccess	op -> operands [ 1 ] . reg		419148	0					
ANR	419277	ArrayIndexing	op -> operands [ 1 ]		419148	0					
ANR	419278	PtrMemberAccess	op -> operands		419148	0					
ANR	419279	Identifier	op		419148	0					
ANR	419280	Identifier	operands		419148	1					
ANR	419281	PrimaryExpression	1		419148	1					
ANR	419282	Identifier	reg		419148	1					
ANR	419283	PrimaryExpression	3		419148	1					
ANR	419284	ExpressionStatement	data [ i ++ ] |= op -> operands [ 0 ] . reg	599:2:16518:16550	419148	2	True				
ANR	419285	AssignmentExpression	data [ i ++ ] |= op -> operands [ 0 ] . reg		419148	0		|=			
ANR	419286	ArrayIndexing	data [ i ++ ]		419148	0					
ANR	419287	Identifier	data		419148	0					
ANR	419288	PostIncDecOperationExpression	i ++		419148	1					
ANR	419289	Identifier	i		419148	0					
ANR	419290	IncDec	++		419148	1					
ANR	419291	MemberAccess	op -> operands [ 0 ] . reg		419148	1					
ANR	419292	ArrayIndexing	op -> operands [ 0 ]		419148	0					
ANR	419293	PtrMemberAccess	op -> operands		419148	0					
ANR	419294	Identifier	op		419148	0					
ANR	419295	Identifier	operands		419148	1					
ANR	419296	PrimaryExpression	0		419148	1					
ANR	419297	Identifier	reg		419148	1					
ANR	419298	ReturnStatement	return i ;	601:1:16556:16564	419148	8	True				
ANR	419299	Identifier	i		419148	0					
ANR	419300	ReturnType	static int		419148	1					
ANR	419301	Identifier	opxadd		419148	2					
ANR	419302	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		419148	3					
ANR	419303	Parameter	RAsm * a	579:18:16030:16036	419148	0	True				
ANR	419304	ParameterType	RAsm *		419148	0					
ANR	419305	Identifier	a		419148	1					
ANR	419306	Parameter	ut8 * data	579:27:16039:16047	419148	1	True				
ANR	419307	ParameterType	ut8 *		419148	0					
ANR	419308	Identifier	data		419148	1					
ANR	419309	Parameter	const Opcode * op	579:38:16050:16065	419148	2	True				
ANR	419310	ParameterType	const Opcode *		419148	0					
ANR	419311	Identifier	op		419148	1					
ANR	419312	CFGEntryNode	ENTRY		419148		True				
ANR	419313	CFGExitNode	EXIT		419148		True				
ANR	419314	Symbol	a		419148						
ANR	419315	Symbol	op		419148						
ANR	419316	Symbol	data		419148						
ANR	419317	Symbol	* op		419148						
ANR	419318	Symbol	op -> operands [ 1 ] . reg		419148						
ANR	419319	Symbol	i		419148						
ANR	419320	Symbol	* a		419148						
ANR	419321	Symbol	OT_REGALL		419148						
ANR	419322	Symbol	* * op		419148						
ANR	419323	Symbol	* op -> operands		419148						
ANR	419324	Symbol	* i		419148						
ANR	419325	Symbol	op -> operands [ 1 ] . type		419148						
ANR	419326	Symbol	op -> operands_count		419148						
ANR	419327	Symbol	op -> operands [ 0 ] . type		419148						
ANR	419328	Symbol	op -> operands [ 0 ] . reg		419148						
ANR	419329	Symbol	op -> operands		419148						
ANR	419330	Symbol	* data		419148						
ANR	419331	Symbol	a -> bits		419148						
ANR	419332	Symbol	OT_BYTE		419148						
ANR	419333	Function	opxor	604:0:16569:17202							
ANR	419334	FunctionDef	"opxor (RAsm * a , ut8 * data , const Opcode * op)"		419333	0					
ANR	419335	CompoundStatement		604:56:16625:17202	419333	0					
ANR	419336	ExpressionStatement	is_valid_registers ( op )	605:1:16628:16651	419333	0	True				
ANR	419337	CallExpression	is_valid_registers ( op )		419333	0					
ANR	419338	Callee	is_valid_registers		419333	0					
ANR	419339	Identifier	is_valid_registers		419333	0					
ANR	419340	ArgumentList	op		419333	1					
ANR	419341	Argument	op		419333	0					
ANR	419342	Identifier	op		419333	0					
ANR	419343	IfStatement	if ( op -> operands_count < 2 )		419333	1					
ANR	419344	Condition	op -> operands_count < 2	606:5:16658:16679	419333	0	True				
ANR	419345	RelationalExpression	op -> operands_count < 2		419333	0		<			
ANR	419346	PtrMemberAccess	op -> operands_count		419333	0					
ANR	419347	Identifier	op		419333	0					
ANR	419348	Identifier	operands_count		419333	1					
ANR	419349	PrimaryExpression	2		419333	1					
ANR	419350	CompoundStatement		3:29:56:56	419333	1					
ANR	419351	ReturnStatement	return - 1 ;	607:2:16686:16695	419333	0	True				
ANR	419352	UnaryOperationExpression	- 1		419333	0					
ANR	419353	UnaryOperator	-		419333	0					
ANR	419354	PrimaryExpression	1		419333	1					
ANR	419355	IfStatement	if ( op -> operands [ 0 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED )		419333	2					
ANR	419356	Condition	op -> operands [ 0 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED	609:5:16705:16773	419333	0	True				
ANR	419357	AndExpression	op -> operands [ 0 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED		419333	0		&&			
ANR	419358	EqualityExpression	op -> operands [ 0 ] . type == 0x80		419333	0		==			
ANR	419359	MemberAccess	op -> operands [ 0 ] . type		419333	0					
ANR	419360	ArrayIndexing	op -> operands [ 0 ]		419333	0					
ANR	419361	PtrMemberAccess	op -> operands		419333	0					
ANR	419362	Identifier	op		419333	0					
ANR	419363	Identifier	operands		419333	1					
ANR	419364	PrimaryExpression	0		419333	1					
ANR	419365	Identifier	type		419333	1					
ANR	419366	PrimaryExpression	0x80		419333	1					
ANR	419367	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		419333	1		==			
ANR	419368	MemberAccess	op -> operands [ 0 ] . reg		419333	0					
ANR	419369	ArrayIndexing	op -> operands [ 0 ]		419333	0					
ANR	419370	PtrMemberAccess	op -> operands		419333	0					
ANR	419371	Identifier	op		419333	0					
ANR	419372	Identifier	operands		419333	1					
ANR	419373	PrimaryExpression	0		419333	1					
ANR	419374	Identifier	reg		419333	1					
ANR	419375	Identifier	X86R_UNDEFINED		419333	1					
ANR	419376	CompoundStatement		6:76:150:150	419333	1					
ANR	419377	ReturnStatement	return - 1 ;	610:2:16780:16789	419333	0	True				
ANR	419378	UnaryOperationExpression	- 1		419333	0					
ANR	419379	UnaryOperator	-		419333	0					
ANR	419380	PrimaryExpression	1		419333	1					
ANR	419381	IfStatement	if ( op -> operands [ 1 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED )		419333	3					
ANR	419382	Condition	op -> operands [ 1 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED	612:5:16799:16867	419333	0	True				
ANR	419383	AndExpression	op -> operands [ 1 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED		419333	0		&&			
ANR	419384	EqualityExpression	op -> operands [ 1 ] . type == 0x80		419333	0		==			
ANR	419385	MemberAccess	op -> operands [ 1 ] . type		419333	0					
ANR	419386	ArrayIndexing	op -> operands [ 1 ]		419333	0					
ANR	419387	PtrMemberAccess	op -> operands		419333	0					
ANR	419388	Identifier	op		419333	0					
ANR	419389	Identifier	operands		419333	1					
ANR	419390	PrimaryExpression	1		419333	1					
ANR	419391	Identifier	type		419333	1					
ANR	419392	PrimaryExpression	0x80		419333	1					
ANR	419393	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		419333	1		==			
ANR	419394	MemberAccess	op -> operands [ 0 ] . reg		419333	0					
ANR	419395	ArrayIndexing	op -> operands [ 0 ]		419333	0					
ANR	419396	PtrMemberAccess	op -> operands		419333	0					
ANR	419397	Identifier	op		419333	0					
ANR	419398	Identifier	operands		419333	1					
ANR	419399	PrimaryExpression	0		419333	1					
ANR	419400	Identifier	reg		419333	1					
ANR	419401	Identifier	X86R_UNDEFINED		419333	1					
ANR	419402	CompoundStatement		9:76:244:244	419333	1					
ANR	419403	ReturnStatement	return - 1 ;	613:2:16874:16883	419333	0	True				
ANR	419404	UnaryOperationExpression	- 1		419333	0					
ANR	419405	UnaryOperator	-		419333	0					
ANR	419406	PrimaryExpression	1		419333	1					
ANR	419407	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		419333	4					
ANR	419408	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	615:5:16893:16926	419333	0	True				
ANR	419409	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		419333	0		&			
ANR	419410	MemberAccess	op -> operands [ 1 ] . type		419333	0					
ANR	419411	ArrayIndexing	op -> operands [ 1 ]		419333	0					
ANR	419412	PtrMemberAccess	op -> operands		419333	0					
ANR	419413	Identifier	op		419333	0					
ANR	419414	Identifier	operands		419333	1					
ANR	419415	PrimaryExpression	1		419333	1					
ANR	419416	Identifier	type		419333	1					
ANR	419417	Identifier	OT_CONSTANT		419333	1					
ANR	419418	CompoundStatement		12:41:303:303	419333	1					
ANR	419419	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		419333	0					
ANR	419420	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	616:6:16937:17007	419333	0	True				
ANR	419421	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		419333	0		&&			
ANR	419422	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		419333	0		&			
ANR	419423	MemberAccess	op -> operands [ 0 ] . type		419333	0					
ANR	419424	ArrayIndexing	op -> operands [ 0 ]		419333	0					
ANR	419425	PtrMemberAccess	op -> operands		419333	0					
ANR	419426	Identifier	op		419333	0					
ANR	419427	Identifier	operands		419333	1					
ANR	419428	PrimaryExpression	0		419333	1					
ANR	419429	Identifier	type		419333	1					
ANR	419430	Identifier	OT_GPREG		419333	1					
ANR	419431	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		419333	1		&			
ANR	419432	MemberAccess	op -> operands [ 0 ] . type		419333	0					
ANR	419433	ArrayIndexing	op -> operands [ 0 ]		419333	0					
ANR	419434	PtrMemberAccess	op -> operands		419333	0					
ANR	419435	Identifier	op		419333	0					
ANR	419436	Identifier	operands		419333	1					
ANR	419437	PrimaryExpression	0		419333	1					
ANR	419438	Identifier	type		419333	1					
ANR	419439	Identifier	OT_WORD		419333	1					
ANR	419440	CompoundStatement		14:38:384:384	419333	1					
ANR	419441	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x30 ) ;"	618:3:17015:17063	419333	0	True				
ANR	419442	CallExpression	"process_16bit_group_1 ( a , data , op , 0x30 )"		419333	0					
ANR	419443	Callee	process_16bit_group_1		419333	0					
ANR	419444	Identifier	process_16bit_group_1		419333	0					
ANR	419445	ArgumentList	a		419333	1					
ANR	419446	Argument	a		419333	0					
ANR	419447	Identifier	a		419333	0					
ANR	419448	Argument	data		419333	1					
ANR	419449	Identifier	data		419333	0					
ANR	419450	Argument	op		419333	2					
ANR	419451	Identifier	op		419333	0					
ANR	419452	Argument	0x30		419333	3					
ANR	419453	PrimaryExpression	0x30		419333	0					
ANR	419454	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		419333	1					
ANR	419455	Condition	! is_al_reg ( & op -> operands [ 0 ] )	620:6:17075:17103	419333	0	True				
ANR	419456	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		419333	0					
ANR	419457	UnaryOperator	!		419333	0					
ANR	419458	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		419333	1					
ANR	419459	Callee	is_al_reg		419333	0					
ANR	419460	Identifier	is_al_reg		419333	0					
ANR	419461	ArgumentList	& op -> operands [ 0 ]		419333	1					
ANR	419462	Argument	& op -> operands [ 0 ]		419333	0					
ANR	419463	UnaryOperationExpression	& op -> operands [ 0 ]		419333	0					
ANR	419464	UnaryOperator	&		419333	0					
ANR	419465	ArrayIndexing	op -> operands [ 0 ]		419333	1					
ANR	419466	PtrMemberAccess	op -> operands		419333	0					
ANR	419467	Identifier	op		419333	0					
ANR	419468	Identifier	operands		419333	1					
ANR	419469	PrimaryExpression	0		419333	1					
ANR	419470	CompoundStatement		17:37:480:480	419333	1					
ANR	419471	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	621:3:17111:17147	419333	0	True				
ANR	419472	CallExpression	"process_group_1 ( a , data , op )"		419333	0					
ANR	419473	Callee	process_group_1		419333	0					
ANR	419474	Identifier	process_group_1		419333	0					
ANR	419475	ArgumentList	a		419333	1					
ANR	419476	Argument	a		419333	0					
ANR	419477	Identifier	a		419333	0					
ANR	419478	Argument	data		419333	1					
ANR	419479	Identifier	data		419333	0					
ANR	419480	Argument	op		419333	2					
ANR	419481	Identifier	op		419333	0					
ANR	419482	ReturnStatement	"return process_1byte_op ( a , data , op , 0x30 ) ;"	624:1:17157:17200	419333	5	True				
ANR	419483	CallExpression	"process_1byte_op ( a , data , op , 0x30 )"		419333	0					
ANR	419484	Callee	process_1byte_op		419333	0					
ANR	419485	Identifier	process_1byte_op		419333	0					
ANR	419486	ArgumentList	a		419333	1					
ANR	419487	Argument	a		419333	0					
ANR	419488	Identifier	a		419333	0					
ANR	419489	Argument	data		419333	1					
ANR	419490	Identifier	data		419333	0					
ANR	419491	Argument	op		419333	2					
ANR	419492	Identifier	op		419333	0					
ANR	419493	Argument	0x30		419333	3					
ANR	419494	PrimaryExpression	0x30		419333	0					
ANR	419495	ReturnType	static int		419333	1					
ANR	419496	Identifier	opxor		419333	2					
ANR	419497	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		419333	3					
ANR	419498	Parameter	RAsm * a	604:17:16586:16592	419333	0	True				
ANR	419499	ParameterType	RAsm *		419333	0					
ANR	419500	Identifier	a		419333	1					
ANR	419501	Parameter	ut8 * data	604:26:16595:16604	419333	1	True				
ANR	419502	ParameterType	ut8 *		419333	0					
ANR	419503	Identifier	data		419333	1					
ANR	419504	Parameter	const Opcode * op	604:38:16607:16622	419333	2	True				
ANR	419505	ParameterType	const Opcode *		419333	0					
ANR	419506	Identifier	op		419333	1					
ANR	419507	CFGEntryNode	ENTRY		419333		True				
ANR	419508	CFGExitNode	EXIT		419333		True				
ANR	419509	Symbol	a		419333						
ANR	419510	Symbol	op		419333						
ANR	419511	Symbol	OT_CONSTANT		419333						
ANR	419512	Symbol	OT_WORD		419333						
ANR	419513	Symbol	OT_GPREG		419333						
ANR	419514	Symbol	data		419333						
ANR	419515	Symbol	* op		419333						
ANR	419516	Symbol	process_group_1		419333						
ANR	419517	Symbol	process_1byte_op		419333						
ANR	419518	Symbol	* * op		419333						
ANR	419519	Symbol	* op -> operands		419333						
ANR	419520	Symbol	process_16bit_group_1		419333						
ANR	419521	Symbol	X86R_UNDEFINED		419333						
ANR	419522	Symbol	op -> operands [ 1 ] . type		419333						
ANR	419523	Symbol	op -> operands_count		419333						
ANR	419524	Symbol	op -> operands [ 0 ] . type		419333						
ANR	419525	Symbol	is_al_reg		419333						
ANR	419526	Symbol	op -> operands [ 0 ] . reg		419333						
ANR	419527	Symbol	op -> operands		419333						
ANR	419528	Function	opnot	627:0:17205:17806							
ANR	419529	FunctionDef	"opnot (RAsm * a , ut8 * data , const Opcode * op)"		419528	0					
ANR	419530	CompoundStatement		627:56:17261:17806	419528	0					
ANR	419531	ExpressionStatement	is_valid_registers ( op )	628:1:17264:17287	419528	0	True				
ANR	419532	CallExpression	is_valid_registers ( op )		419528	0					
ANR	419533	Callee	is_valid_registers		419528	0					
ANR	419534	Identifier	is_valid_registers		419528	0					
ANR	419535	ArgumentList	op		419528	1					
ANR	419536	Argument	op		419528	0					
ANR	419537	Identifier	op		419528	0					
ANR	419538	IdentifierDeclStatement	int l = 0 ;	629:1:17290:17299	419528	1	True				
ANR	419539	IdentifierDecl	l = 0		419528	0					
ANR	419540	IdentifierDeclType	int		419528	0					
ANR	419541	Identifier	l		419528	1					
ANR	419542	AssignmentExpression	l = 0		419528	2		=			
ANR	419543	Identifier	l		419528	0					
ANR	419544	PrimaryExpression	0		419528	1					
ANR	419545	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED )		419528	2					
ANR	419546	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED	631:5:17307:17343	419528	0	True				
ANR	419547	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		419528	0		==			
ANR	419548	MemberAccess	op -> operands [ 0 ] . reg		419528	0					
ANR	419549	ArrayIndexing	op -> operands [ 0 ]		419528	0					
ANR	419550	PtrMemberAccess	op -> operands		419528	0					
ANR	419551	Identifier	op		419528	0					
ANR	419552	Identifier	operands		419528	1					
ANR	419553	PrimaryExpression	0		419528	1					
ANR	419554	Identifier	reg		419528	1					
ANR	419555	Identifier	X86R_UNDEFINED		419528	1					
ANR	419556	CompoundStatement		5:45:85:85	419528	1					
ANR	419557	ReturnStatement	return - 1 ;	632:2:17351:17360	419528	0	True				
ANR	419558	UnaryOperationExpression	- 1		419528	0					
ANR	419559	UnaryOperator	-		419528	0					
ANR	419560	PrimaryExpression	1		419528	1					
ANR	419561	IdentifierDeclStatement	int size = op -> operands [ 0 ] . type & ALL_SIZE ;	635:1:17367:17409	419528	3	True				
ANR	419562	IdentifierDecl	size = op -> operands [ 0 ] . type & ALL_SIZE		419528	0					
ANR	419563	IdentifierDeclType	int		419528	0					
ANR	419564	Identifier	size		419528	1					
ANR	419565	AssignmentExpression	size = op -> operands [ 0 ] . type & ALL_SIZE		419528	2		=			
ANR	419566	Identifier	size		419528	0					
ANR	419567	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		419528	1		&			
ANR	419568	MemberAccess	op -> operands [ 0 ] . type		419528	0					
ANR	419569	ArrayIndexing	op -> operands [ 0 ]		419528	0					
ANR	419570	PtrMemberAccess	op -> operands		419528	0					
ANR	419571	Identifier	op		419528	0					
ANR	419572	Identifier	operands		419528	1					
ANR	419573	PrimaryExpression	0		419528	1					
ANR	419574	Identifier	type		419528	1					
ANR	419575	Identifier	ALL_SIZE		419528	1					
ANR	419576	IfStatement	if ( op -> operands [ 0 ] . explicit_size )		419528	4					
ANR	419577	Condition	op -> operands [ 0 ] . explicit_size	636:5:17416:17444	419528	0	True				
ANR	419578	MemberAccess	op -> operands [ 0 ] . explicit_size		419528	0					
ANR	419579	ArrayIndexing	op -> operands [ 0 ]		419528	0					
ANR	419580	PtrMemberAccess	op -> operands		419528	0					
ANR	419581	Identifier	op		419528	0					
ANR	419582	Identifier	operands		419528	1					
ANR	419583	PrimaryExpression	0		419528	1					
ANR	419584	Identifier	explicit_size		419528	1					
ANR	419585	CompoundStatement		10:36:185:185	419528	1					
ANR	419586	ExpressionStatement	size = op -> operands [ 0 ] . dest_size	637:2:17451:17483	419528	0	True				
ANR	419587	AssignmentExpression	size = op -> operands [ 0 ] . dest_size		419528	0		=			
ANR	419588	Identifier	size		419528	0					
ANR	419589	MemberAccess	op -> operands [ 0 ] . dest_size		419528	1					
ANR	419590	ArrayIndexing	op -> operands [ 0 ]		419528	0					
ANR	419591	PtrMemberAccess	op -> operands		419528	0					
ANR	419592	Identifier	op		419528	0					
ANR	419593	Identifier	operands		419528	1					
ANR	419594	PrimaryExpression	0		419528	1					
ANR	419595	Identifier	dest_size		419528	1					
ANR	419596	IdentifierDeclStatement	int rex = 1 << 6 ;	640:1:17503:17519	419528	5	True				
ANR	419597	IdentifierDecl	rex = 1 << 6		419528	0					
ANR	419598	IdentifierDeclType	int		419528	0					
ANR	419599	Identifier	rex		419528	1					
ANR	419600	AssignmentExpression	rex = 1 << 6		419528	2		=			
ANR	419601	Identifier	rex		419528	0					
ANR	419602	ShiftExpression	1 << 6		419528	1		<<			
ANR	419603	PrimaryExpression	1		419528	0					
ANR	419604	PrimaryExpression	6		419528	1					
ANR	419605	IdentifierDeclStatement	bool use_rex = false ;	641:1:17522:17542	419528	6	True				
ANR	419606	IdentifierDecl	use_rex = false		419528	0					
ANR	419607	IdentifierDeclType	bool		419528	0					
ANR	419608	Identifier	use_rex		419528	1					
ANR	419609	AssignmentExpression	use_rex = false		419528	2		=			
ANR	419610	Identifier	false		419528	0					
ANR	419611	Identifier	false		419528	1					
ANR	419612	IfStatement	if ( size & OT_QWORD )		419528	7					
ANR	419613	Condition	size & OT_QWORD	642:5:17549:17563	419528	0	True				
ANR	419614	BitAndExpression	size & OT_QWORD		419528	0		&			
ANR	419615	Identifier	size		419528	0					
ANR	419616	Identifier	OT_QWORD		419528	1					
ANR	419617	CompoundStatement		16:22:304:304	419528	1					
ANR	419618	ExpressionStatement	use_rex = true	643:2:17582:17596	419528	0	True				
ANR	419619	AssignmentExpression	use_rex = true		419528	0		=			
ANR	419620	Identifier	use_rex		419528	0					
ANR	419621	Identifier	true		419528	1					
ANR	419622	ExpressionStatement	rex |= 1 << 3	644:2:17600:17613	419528	1	True				
ANR	419623	AssignmentExpression	rex |= 1 << 3		419528	0		|=			
ANR	419624	Identifier	rex		419528	0					
ANR	419625	ShiftExpression	1 << 3		419528	1		<<			
ANR	419626	PrimaryExpression	1		419528	0					
ANR	419627	PrimaryExpression	3		419528	1					
ANR	419628	IfStatement	if ( op -> operands [ 0 ] . extended )		419528	8					
ANR	419629	Condition	op -> operands [ 0 ] . extended	646:5:17623:17646	419528	0	True				
ANR	419630	MemberAccess	op -> operands [ 0 ] . extended		419528	0					
ANR	419631	ArrayIndexing	op -> operands [ 0 ]		419528	0					
ANR	419632	PtrMemberAccess	op -> operands		419528	0					
ANR	419633	Identifier	op		419528	0					
ANR	419634	Identifier	operands		419528	1					
ANR	419635	PrimaryExpression	0		419528	1					
ANR	419636	Identifier	extended		419528	1					
ANR	419637	CompoundStatement		20:31:387:387	419528	1					
ANR	419638	ExpressionStatement	use_rex = true	647:2:17664:17678	419528	0	True				
ANR	419639	AssignmentExpression	use_rex = true		419528	0		=			
ANR	419640	Identifier	use_rex		419528	0					
ANR	419641	Identifier	true		419528	1					
ANR	419642	ExpressionStatement	rex |= 1	648:2:17682:17690	419528	1	True				
ANR	419643	AssignmentExpression	rex |= 1		419528	0		|=			
ANR	419644	Identifier	rex		419528	0					
ANR	419645	PrimaryExpression	1		419528	1					
ANR	419646	IfStatement	if ( use_rex )		419528	9					
ANR	419647	Condition	use_rex	651:5:17701:17707	419528	0	True				
ANR	419648	Identifier	use_rex		419528	0					
ANR	419649	CompoundStatement		25:14:448:448	419528	1					
ANR	419650	ExpressionStatement	data [ l ++ ] = rex	652:2:17714:17729	419528	0	True				
ANR	419651	AssignmentExpression	data [ l ++ ] = rex		419528	0		=			
ANR	419652	ArrayIndexing	data [ l ++ ]		419528	0					
ANR	419653	Identifier	data		419528	0					
ANR	419654	PostIncDecOperationExpression	l ++		419528	1					
ANR	419655	Identifier	l		419528	0					
ANR	419656	IncDec	++		419528	1					
ANR	419657	Identifier	rex		419528	1					
ANR	419658	ExpressionStatement	data [ l ++ ] = 0xf7	654:1:17735:17751	419528	10	True				
ANR	419659	AssignmentExpression	data [ l ++ ] = 0xf7		419528	0		=			
ANR	419660	ArrayIndexing	data [ l ++ ]		419528	0					
ANR	419661	Identifier	data		419528	0					
ANR	419662	PostIncDecOperationExpression	l ++		419528	1					
ANR	419663	Identifier	l		419528	0					
ANR	419664	IncDec	++		419528	1					
ANR	419665	PrimaryExpression	0xf7		419528	1					
ANR	419666	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg	655:1:17754:17792	419528	11	True				
ANR	419667	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg		419528	0		=			
ANR	419668	ArrayIndexing	data [ l ++ ]		419528	0					
ANR	419669	Identifier	data		419528	0					
ANR	419670	PostIncDecOperationExpression	l ++		419528	1					
ANR	419671	Identifier	l		419528	0					
ANR	419672	IncDec	++		419528	1					
ANR	419673	InclusiveOrExpression	0xd0 | op -> operands [ 0 ] . reg		419528	1		|			
ANR	419674	PrimaryExpression	0xd0		419528	0					
ANR	419675	MemberAccess	op -> operands [ 0 ] . reg		419528	1					
ANR	419676	ArrayIndexing	op -> operands [ 0 ]		419528	0					
ANR	419677	PtrMemberAccess	op -> operands		419528	0					
ANR	419678	Identifier	op		419528	0					
ANR	419679	Identifier	operands		419528	1					
ANR	419680	PrimaryExpression	0		419528	1					
ANR	419681	Identifier	reg		419528	1					
ANR	419682	ReturnStatement	return l ;	657:1:17796:17804	419528	12	True				
ANR	419683	Identifier	l		419528	0					
ANR	419684	ReturnType	static int		419528	1					
ANR	419685	Identifier	opnot		419528	2					
ANR	419686	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		419528	3					
ANR	419687	Parameter	RAsm * a	627:17:17222:17228	419528	0	True				
ANR	419688	ParameterType	RAsm *		419528	0					
ANR	419689	Identifier	a		419528	1					
ANR	419690	Parameter	ut8 * data	627:26:17231:17240	419528	1	True				
ANR	419691	ParameterType	ut8 *		419528	0					
ANR	419692	Identifier	data		419528	1					
ANR	419693	Parameter	const Opcode * op	627:38:17243:17258	419528	2	True				
ANR	419694	ParameterType	const Opcode *		419528	0					
ANR	419695	Identifier	op		419528	1					
ANR	419696	CFGEntryNode	ENTRY		419528		True				
ANR	419697	CFGExitNode	EXIT		419528		True				
ANR	419698	Symbol	a		419528						
ANR	419699	Symbol	op		419528						
ANR	419700	Symbol	OT_QWORD		419528						
ANR	419701	Symbol	data		419528						
ANR	419702	Symbol	* op		419528						
ANR	419703	Symbol	rex		419528						
ANR	419704	Symbol	op -> operands [ 0 ] . explicit_size		419528						
ANR	419705	Symbol	op -> operands [ 0 ] . dest_size		419528						
ANR	419706	Symbol	ALL_SIZE		419528						
ANR	419707	Symbol	false		419528						
ANR	419708	Symbol	l		419528						
ANR	419709	Symbol	* * op		419528						
ANR	419710	Symbol	op -> operands [ 0 ] . extended		419528						
ANR	419711	Symbol	* op -> operands		419528						
ANR	419712	Symbol	X86R_UNDEFINED		419528						
ANR	419713	Symbol	size		419528						
ANR	419714	Symbol	op -> operands [ 0 ] . type		419528						
ANR	419715	Symbol	true		419528						
ANR	419716	Symbol	op -> operands [ 0 ] . reg		419528						
ANR	419717	Symbol	op -> operands		419528						
ANR	419718	Symbol	* data		419528						
ANR	419719	Symbol	use_rex		419528						
ANR	419720	Function	opsbb	660:0:17809:18180							
ANR	419721	FunctionDef	"opsbb (RAsm * a , ut8 * data , const Opcode * op)"		419720	0					
ANR	419722	CompoundStatement		660:55:17864:18180	419720	0					
ANR	419723	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		419720	0					
ANR	419724	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	661:5:17871:17904	419720	0	True				
ANR	419725	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		419720	0		&			
ANR	419726	MemberAccess	op -> operands [ 1 ] . type		419720	0					
ANR	419727	ArrayIndexing	op -> operands [ 1 ]		419720	0					
ANR	419728	PtrMemberAccess	op -> operands		419720	0					
ANR	419729	Identifier	op		419720	0					
ANR	419730	Identifier	operands		419720	1					
ANR	419731	PrimaryExpression	1		419720	1					
ANR	419732	Identifier	type		419720	1					
ANR	419733	Identifier	OT_CONSTANT		419720	1					
ANR	419734	CompoundStatement		2:41:42:42	419720	1					
ANR	419735	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		419720	0					
ANR	419736	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	662:6:17915:17985	419720	0	True				
ANR	419737	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		419720	0		&&			
ANR	419738	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		419720	0		&			
ANR	419739	MemberAccess	op -> operands [ 0 ] . type		419720	0					
ANR	419740	ArrayIndexing	op -> operands [ 0 ]		419720	0					
ANR	419741	PtrMemberAccess	op -> operands		419720	0					
ANR	419742	Identifier	op		419720	0					
ANR	419743	Identifier	operands		419720	1					
ANR	419744	PrimaryExpression	0		419720	1					
ANR	419745	Identifier	type		419720	1					
ANR	419746	Identifier	OT_GPREG		419720	1					
ANR	419747	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		419720	1		&			
ANR	419748	MemberAccess	op -> operands [ 0 ] . type		419720	0					
ANR	419749	ArrayIndexing	op -> operands [ 0 ]		419720	0					
ANR	419750	PtrMemberAccess	op -> operands		419720	0					
ANR	419751	Identifier	op		419720	0					
ANR	419752	Identifier	operands		419720	1					
ANR	419753	PrimaryExpression	0		419720	1					
ANR	419754	Identifier	type		419720	1					
ANR	419755	Identifier	OT_WORD		419720	1					
ANR	419756	CompoundStatement		4:38:123:123	419720	1					
ANR	419757	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x18 ) ;"	664:3:17993:18041	419720	0	True				
ANR	419758	CallExpression	"process_16bit_group_1 ( a , data , op , 0x18 )"		419720	0					
ANR	419759	Callee	process_16bit_group_1		419720	0					
ANR	419760	Identifier	process_16bit_group_1		419720	0					
ANR	419761	ArgumentList	a		419720	1					
ANR	419762	Argument	a		419720	0					
ANR	419763	Identifier	a		419720	0					
ANR	419764	Argument	data		419720	1					
ANR	419765	Identifier	data		419720	0					
ANR	419766	Argument	op		419720	2					
ANR	419767	Identifier	op		419720	0					
ANR	419768	Argument	0x18		419720	3					
ANR	419769	PrimaryExpression	0x18		419720	0					
ANR	419770	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		419720	1					
ANR	419771	Condition	! is_al_reg ( & op -> operands [ 0 ] )	666:6:18053:18081	419720	0	True				
ANR	419772	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		419720	0					
ANR	419773	UnaryOperator	!		419720	0					
ANR	419774	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		419720	1					
ANR	419775	Callee	is_al_reg		419720	0					
ANR	419776	Identifier	is_al_reg		419720	0					
ANR	419777	ArgumentList	& op -> operands [ 0 ]		419720	1					
ANR	419778	Argument	& op -> operands [ 0 ]		419720	0					
ANR	419779	UnaryOperationExpression	& op -> operands [ 0 ]		419720	0					
ANR	419780	UnaryOperator	&		419720	0					
ANR	419781	ArrayIndexing	op -> operands [ 0 ]		419720	1					
ANR	419782	PtrMemberAccess	op -> operands		419720	0					
ANR	419783	Identifier	op		419720	0					
ANR	419784	Identifier	operands		419720	1					
ANR	419785	PrimaryExpression	0		419720	1					
ANR	419786	CompoundStatement		7:37:219:219	419720	1					
ANR	419787	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	667:3:18089:18125	419720	0	True				
ANR	419788	CallExpression	"process_group_1 ( a , data , op )"		419720	0					
ANR	419789	Callee	process_group_1		419720	0					
ANR	419790	Identifier	process_group_1		419720	0					
ANR	419791	ArgumentList	a		419720	1					
ANR	419792	Argument	a		419720	0					
ANR	419793	Identifier	a		419720	0					
ANR	419794	Argument	data		419720	1					
ANR	419795	Identifier	data		419720	0					
ANR	419796	Argument	op		419720	2					
ANR	419797	Identifier	op		419720	0					
ANR	419798	ReturnStatement	"return process_1byte_op ( a , data , op , 0x18 ) ;"	670:1:18135:18178	419720	1	True				
ANR	419799	CallExpression	"process_1byte_op ( a , data , op , 0x18 )"		419720	0					
ANR	419800	Callee	process_1byte_op		419720	0					
ANR	419801	Identifier	process_1byte_op		419720	0					
ANR	419802	ArgumentList	a		419720	1					
ANR	419803	Argument	a		419720	0					
ANR	419804	Identifier	a		419720	0					
ANR	419805	Argument	data		419720	1					
ANR	419806	Identifier	data		419720	0					
ANR	419807	Argument	op		419720	2					
ANR	419808	Identifier	op		419720	0					
ANR	419809	Argument	0x18		419720	3					
ANR	419810	PrimaryExpression	0x18		419720	0					
ANR	419811	ReturnType	static int		419720	1					
ANR	419812	Identifier	opsbb		419720	2					
ANR	419813	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		419720	3					
ANR	419814	Parameter	RAsm * a	660:17:17826:17832	419720	0	True				
ANR	419815	ParameterType	RAsm *		419720	0					
ANR	419816	Identifier	a		419720	1					
ANR	419817	Parameter	ut8 * data	660:26:17835:17843	419720	1	True				
ANR	419818	ParameterType	ut8 *		419720	0					
ANR	419819	Identifier	data		419720	1					
ANR	419820	Parameter	const Opcode * op	660:37:17846:17861	419720	2	True				
ANR	419821	ParameterType	const Opcode *		419720	0					
ANR	419822	Identifier	op		419720	1					
ANR	419823	CFGEntryNode	ENTRY		419720		True				
ANR	419824	CFGExitNode	EXIT		419720		True				
ANR	419825	Symbol	a		419720						
ANR	419826	Symbol	op		419720						
ANR	419827	Symbol	OT_CONSTANT		419720						
ANR	419828	Symbol	OT_WORD		419720						
ANR	419829	Symbol	OT_GPREG		419720						
ANR	419830	Symbol	data		419720						
ANR	419831	Symbol	* op		419720						
ANR	419832	Symbol	process_group_1		419720						
ANR	419833	Symbol	process_1byte_op		419720						
ANR	419834	Symbol	* * op		419720						
ANR	419835	Symbol	* op -> operands		419720						
ANR	419836	Symbol	process_16bit_group_1		419720						
ANR	419837	Symbol	op -> operands [ 1 ] . type		419720						
ANR	419838	Symbol	op -> operands [ 0 ] . type		419720						
ANR	419839	Symbol	is_al_reg		419720						
ANR	419840	Symbol	op -> operands		419720						
ANR	419841	Function	opbs	673:0:18183:19303							
ANR	419842	FunctionDef	"opbs (RAsm * a , ut8 * data , const Opcode * op)"		419841	0					
ANR	419843	CompoundStatement		673:54:18237:19303	419841	0					
ANR	419844	IdentifierDeclStatement	int l = 0 ;	674:1:18240:18249	419841	0	True				
ANR	419845	IdentifierDecl	l = 0		419841	0					
ANR	419846	IdentifierDeclType	int		419841	0					
ANR	419847	Identifier	l		419841	1					
ANR	419848	AssignmentExpression	l = 0		419841	2		=			
ANR	419849	Identifier	l		419841	0					
ANR	419850	PrimaryExpression	0		419841	1					
ANR	419851	IfStatement	if ( a -> bits >= 32 && op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD )		419841	1					
ANR	419852	Condition	a -> bits >= 32 && op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD	675:5:18256:18342	419841	0	True				
ANR	419853	AndExpression	a -> bits >= 32 && op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD		419841	0		&&			
ANR	419854	RelationalExpression	a -> bits >= 32		419841	0		>=			
ANR	419855	PtrMemberAccess	a -> bits		419841	0					
ANR	419856	Identifier	a		419841	0					
ANR	419857	Identifier	bits		419841	1					
ANR	419858	PrimaryExpression	32		419841	1					
ANR	419859	AndExpression	op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD		419841	1		&&			
ANR	419860	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		419841	0		&			
ANR	419861	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	419862	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	419863	PtrMemberAccess	op -> operands		419841	0					
ANR	419864	Identifier	op		419841	0					
ANR	419865	Identifier	operands		419841	1					
ANR	419866	PrimaryExpression	1		419841	1					
ANR	419867	Identifier	type		419841	1					
ANR	419868	Identifier	OT_MEMORY		419841	1					
ANR	419869	BitAndExpression	op -> operands [ 1 ] . reg_size & OT_WORD		419841	1		&			
ANR	419870	MemberAccess	op -> operands [ 1 ] . reg_size		419841	0					
ANR	419871	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	419872	PtrMemberAccess	op -> operands		419841	0					
ANR	419873	Identifier	op		419841	0					
ANR	419874	Identifier	operands		419841	1					
ANR	419875	PrimaryExpression	1		419841	1					
ANR	419876	Identifier	reg_size		419841	1					
ANR	419877	Identifier	OT_WORD		419841	1					
ANR	419878	CompoundStatement		3:94:107:107	419841	1					
ANR	419879	ReturnStatement	return - 1 ;	676:2:18349:18358	419841	0	True				
ANR	419880	UnaryOperationExpression	- 1		419841	0					
ANR	419881	UnaryOperator	-		419841	0					
ANR	419882	PrimaryExpression	1		419841	1					
ANR	419883	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_MEMORY ) && ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) ) )		419841	2					
ANR	419884	Condition	! ( op -> operands [ 1 ] . type & OT_MEMORY ) && ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) )	678:5:18368:18482	419841	0	True				
ANR	419885	AndExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY ) && ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) )		419841	0		&&			
ANR	419886	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		419841	0					
ANR	419887	UnaryOperator	!		419841	0					
ANR	419888	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		419841	1		&			
ANR	419889	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	419890	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	419891	PtrMemberAccess	op -> operands		419841	0					
ANR	419892	Identifier	op		419841	0					
ANR	419893	Identifier	operands		419841	1					
ANR	419894	PrimaryExpression	1		419841	1					
ANR	419895	Identifier	type		419841	1					
ANR	419896	Identifier	OT_MEMORY		419841	1					
ANR	419897	UnaryOperationExpression	! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) )		419841	1					
ANR	419898	UnaryOperator	!		419841	0					
ANR	419899	EqualityExpression	( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE )		419841	1		==			
ANR	419900	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		419841	0		&			
ANR	419901	MemberAccess	op -> operands [ 0 ] . type		419841	0					
ANR	419902	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	419903	PtrMemberAccess	op -> operands		419841	0					
ANR	419904	Identifier	op		419841	0					
ANR	419905	Identifier	operands		419841	1					
ANR	419906	PrimaryExpression	0		419841	1					
ANR	419907	Identifier	type		419841	1					
ANR	419908	Identifier	ALL_SIZE		419841	1					
ANR	419909	BitAndExpression	op -> operands [ 1 ] . type & ALL_SIZE		419841	1		&			
ANR	419910	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	419911	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	419912	PtrMemberAccess	op -> operands		419841	0					
ANR	419913	Identifier	op		419841	0					
ANR	419914	Identifier	operands		419841	1					
ANR	419915	PrimaryExpression	1		419841	1					
ANR	419916	Identifier	type		419841	1					
ANR	419917	Identifier	ALL_SIZE		419841	1					
ANR	419918	CompoundStatement		7:77:247:247	419841	1					
ANR	419919	ReturnStatement	return - 1 ;	680:2:18489:18498	419841	0	True				
ANR	419920	UnaryOperationExpression	- 1		419841	0					
ANR	419921	UnaryOperator	-		419841	0					
ANR	419922	PrimaryExpression	1		419841	1					
ANR	419923	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		419841	3					
ANR	419924	Condition	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )	682:5:18508:18577	419841	0	True				
ANR	419925	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )		419841	0		&&			
ANR	419926	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		419841	0		&			
ANR	419927	MemberAccess	op -> operands [ 0 ] . type		419841	0					
ANR	419928	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	419929	PtrMemberAccess	op -> operands		419841	0					
ANR	419930	Identifier	op		419841	0					
ANR	419931	Identifier	operands		419841	1					
ANR	419932	PrimaryExpression	0		419841	1					
ANR	419933	Identifier	type		419841	1					
ANR	419934	Identifier	OT_GPREG		419841	1					
ANR	419935	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		419841	1					
ANR	419936	UnaryOperator	!		419841	0					
ANR	419937	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		419841	1		&			
ANR	419938	MemberAccess	op -> operands [ 0 ] . type		419841	0					
ANR	419939	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	419940	PtrMemberAccess	op -> operands		419841	0					
ANR	419941	Identifier	op		419841	0					
ANR	419942	Identifier	operands		419841	1					
ANR	419943	PrimaryExpression	0		419841	1					
ANR	419944	Identifier	type		419841	1					
ANR	419945	Identifier	OT_MEMORY		419841	1					
ANR	419946	CompoundStatement		10:77:342:342	419841	1					
ANR	419947	IfStatement	if ( a -> bits == 64 )		419841	0					
ANR	419948	Condition	a -> bits == 64	683:6:18588:18600	419841	0	True				
ANR	419949	EqualityExpression	a -> bits == 64		419841	0		==			
ANR	419950	PtrMemberAccess	a -> bits		419841	0					
ANR	419951	Identifier	a		419841	0					
ANR	419952	Identifier	bits		419841	1					
ANR	419953	PrimaryExpression	64		419841	1					
ANR	419954	CompoundStatement		11:21:365:365	419841	1					
ANR	419955	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_DWORD )		419841	0					
ANR	419956	Condition	op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_DWORD	684:7:18612:18687	419841	0	True				
ANR	419957	AndExpression	op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_DWORD		419841	0		&&			
ANR	419958	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		419841	0		&			
ANR	419959	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	419960	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	419961	PtrMemberAccess	op -> operands		419841	0					
ANR	419962	Identifier	op		419841	0					
ANR	419963	Identifier	operands		419841	1					
ANR	419964	PrimaryExpression	1		419841	1					
ANR	419965	Identifier	type		419841	1					
ANR	419966	Identifier	OT_MEMORY		419841	1					
ANR	419967	BitAndExpression	op -> operands [ 1 ] . reg_size & OT_DWORD		419841	1		&			
ANR	419968	MemberAccess	op -> operands [ 1 ] . reg_size		419841	0					
ANR	419969	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	419970	PtrMemberAccess	op -> operands		419841	0					
ANR	419971	Identifier	op		419841	0					
ANR	419972	Identifier	operands		419841	1					
ANR	419973	PrimaryExpression	1		419841	1					
ANR	419974	Identifier	reg_size		419841	1					
ANR	419975	Identifier	OT_DWORD		419841	1					
ANR	419976	CompoundStatement		13:41:452:452	419841	1					
ANR	419977	ExpressionStatement	data [ l ++ ] = 0x67	686:4:18696:18712	419841	0	True				
ANR	419978	AssignmentExpression	data [ l ++ ] = 0x67		419841	0		=			
ANR	419979	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	419980	Identifier	data		419841	0					
ANR	419981	PostIncDecOperationExpression	l ++		419841	1					
ANR	419982	Identifier	l		419841	0					
ANR	419983	IncDec	++		419841	1					
ANR	419984	PrimaryExpression	0x67		419841	1					
ANR	419985	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		419841	1					
ANR	419986	Condition	op -> operands [ 0 ] . type & OT_WORD	688:7:18726:18755	419841	0	True				
ANR	419987	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		419841	0		&			
ANR	419988	MemberAccess	op -> operands [ 0 ] . type		419841	0					
ANR	419989	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	419990	PtrMemberAccess	op -> operands		419841	0					
ANR	419991	Identifier	op		419841	0					
ANR	419992	Identifier	operands		419841	1					
ANR	419993	PrimaryExpression	0		419841	1					
ANR	419994	Identifier	type		419841	1					
ANR	419995	Identifier	OT_WORD		419841	1					
ANR	419996	CompoundStatement		16:39:520:520	419841	1					
ANR	419997	ExpressionStatement	data [ l ++ ] = 0x66	689:4:18764:18780	419841	0	True				
ANR	419998	AssignmentExpression	data [ l ++ ] = 0x66		419841	0		=			
ANR	419999	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420000	Identifier	data		419841	0					
ANR	420001	PostIncDecOperationExpression	l ++		419841	1					
ANR	420002	Identifier	l		419841	0					
ANR	420003	IncDec	++		419841	1					
ANR	420004	PrimaryExpression	0x66		419841	1					
ANR	420005	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		419841	2					
ANR	420006	Condition	op -> operands [ 0 ] . type & OT_QWORD	691:7:18794:18824	419841	0	True				
ANR	420007	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		419841	0		&			
ANR	420008	MemberAccess	op -> operands [ 0 ] . type		419841	0					
ANR	420009	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	420010	PtrMemberAccess	op -> operands		419841	0					
ANR	420011	Identifier	op		419841	0					
ANR	420012	Identifier	operands		419841	1					
ANR	420013	PrimaryExpression	0		419841	1					
ANR	420014	Identifier	type		419841	1					
ANR	420015	Identifier	OT_QWORD		419841	1					
ANR	420016	CompoundStatement		19:40:589:589	419841	1					
ANR	420017	ExpressionStatement	data [ l ++ ] = 0x48	692:4:18833:18849	419841	0	True				
ANR	420018	AssignmentExpression	data [ l ++ ] = 0x48		419841	0		=			
ANR	420019	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420020	Identifier	data		419841	0					
ANR	420021	PostIncDecOperationExpression	l ++		419841	1					
ANR	420022	Identifier	l		419841	0					
ANR	420023	IncDec	++		419841	1					
ANR	420024	PrimaryExpression	0x48		419841	1					
ANR	420025	ElseStatement	else		419841	0					
ANR	420026	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		419841	0					
ANR	420027	Condition	op -> operands [ 0 ] . type & OT_WORD	694:13:18869:18898	419841	0	True				
ANR	420028	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		419841	0		&			
ANR	420029	MemberAccess	op -> operands [ 0 ] . type		419841	0					
ANR	420030	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	420031	PtrMemberAccess	op -> operands		419841	0					
ANR	420032	Identifier	op		419841	0					
ANR	420033	Identifier	operands		419841	1					
ANR	420034	PrimaryExpression	0		419841	1					
ANR	420035	Identifier	type		419841	1					
ANR	420036	Identifier	OT_WORD		419841	1					
ANR	420037	CompoundStatement		22:45:663:663	419841	1					
ANR	420038	ExpressionStatement	data [ l ++ ] = 0x66	695:4:18907:18923	419841	0	True				
ANR	420039	AssignmentExpression	data [ l ++ ] = 0x66		419841	0		=			
ANR	420040	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420041	Identifier	data		419841	0					
ANR	420042	PostIncDecOperationExpression	l ++		419841	1					
ANR	420043	Identifier	l		419841	0					
ANR	420044	IncDec	++		419841	1					
ANR	420045	PrimaryExpression	0x66		419841	1					
ANR	420046	ExpressionStatement	data [ l ++ ] = 0x0f	697:2:18931:18947	419841	1	True				
ANR	420047	AssignmentExpression	data [ l ++ ] = 0x0f		419841	0		=			
ANR	420048	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420049	Identifier	data		419841	0					
ANR	420050	PostIncDecOperationExpression	l ++		419841	1					
ANR	420051	Identifier	l		419841	0					
ANR	420052	IncDec	++		419841	1					
ANR	420053	PrimaryExpression	0x0f		419841	1					
ANR	420054	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""bsf"" ) )"		419841	2					
ANR	420055	Condition	"! strcmp ( op -> mnemonic , ""bsf"" )"	698:6:18955:18983	419841	0	True				
ANR	420056	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""bsf"" )"		419841	0					
ANR	420057	UnaryOperator	!		419841	0					
ANR	420058	CallExpression	"strcmp ( op -> mnemonic , ""bsf"" )"		419841	1					
ANR	420059	Callee	strcmp		419841	0					
ANR	420060	Identifier	strcmp		419841	0					
ANR	420061	ArgumentList	op -> mnemonic		419841	1					
ANR	420062	Argument	op -> mnemonic		419841	0					
ANR	420063	PtrMemberAccess	op -> mnemonic		419841	0					
ANR	420064	Identifier	op		419841	0					
ANR	420065	Identifier	mnemonic		419841	1					
ANR	420066	Argument	"""bsf"""		419841	1					
ANR	420067	PrimaryExpression	"""bsf"""		419841	0					
ANR	420068	CompoundStatement		26:37:748:748	419841	1					
ANR	420069	ExpressionStatement	data [ l ++ ] = 0xbc	699:3:18991:19007	419841	0	True				
ANR	420070	AssignmentExpression	data [ l ++ ] = 0xbc		419841	0		=			
ANR	420071	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420072	Identifier	data		419841	0					
ANR	420073	PostIncDecOperationExpression	l ++		419841	1					
ANR	420074	Identifier	l		419841	0					
ANR	420075	IncDec	++		419841	1					
ANR	420076	PrimaryExpression	0xbc		419841	1					
ANR	420077	ElseStatement	else		419841	0					
ANR	420078	CompoundStatement		28:9:780:780	419841	0					
ANR	420079	ExpressionStatement	data [ l ++ ] = 0xbd	701:3:19023:19039	419841	0	True				
ANR	420080	AssignmentExpression	data [ l ++ ] = 0xbd		419841	0		=			
ANR	420081	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420082	Identifier	data		419841	0					
ANR	420083	PostIncDecOperationExpression	l ++		419841	1					
ANR	420084	Identifier	l		419841	0					
ANR	420085	IncDec	++		419841	1					
ANR	420086	PrimaryExpression	0xbd		419841	1					
ANR	420087	IfStatement	if ( op -> operands [ 1 ] . type & OT_GPREG && ! ( op -> operands [ 1 ] . type & OT_MEMORY ) )		419841	3					
ANR	420088	Condition	op -> operands [ 1 ] . type & OT_GPREG && ! ( op -> operands [ 1 ] . type & OT_MEMORY )	703:6:19051:19120	419841	0	True				
ANR	420089	AndExpression	op -> operands [ 1 ] . type & OT_GPREG && ! ( op -> operands [ 1 ] . type & OT_MEMORY )		419841	0		&&			
ANR	420090	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		419841	0		&			
ANR	420091	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	420092	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	420093	PtrMemberAccess	op -> operands		419841	0					
ANR	420094	Identifier	op		419841	0					
ANR	420095	Identifier	operands		419841	1					
ANR	420096	PrimaryExpression	1		419841	1					
ANR	420097	Identifier	type		419841	1					
ANR	420098	Identifier	OT_GPREG		419841	1					
ANR	420099	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		419841	1					
ANR	420100	UnaryOperator	!		419841	0					
ANR	420101	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		419841	1		&			
ANR	420102	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	420103	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	420104	PtrMemberAccess	op -> operands		419841	0					
ANR	420105	Identifier	op		419841	0					
ANR	420106	Identifier	operands		419841	1					
ANR	420107	PrimaryExpression	1		419841	1					
ANR	420108	Identifier	type		419841	1					
ANR	420109	Identifier	OT_MEMORY		419841	1					
ANR	420110	CompoundStatement		31:78:885:885	419841	1					
ANR	420111	ExpressionStatement	data [ l ] = 0xc0	704:3:19128:19142	419841	0	True				
ANR	420112	AssignmentExpression	data [ l ] = 0xc0		419841	0		=			
ANR	420113	ArrayIndexing	data [ l ]		419841	0					
ANR	420114	Identifier	data		419841	0					
ANR	420115	Identifier	l		419841	1					
ANR	420116	PrimaryExpression	0xc0		419841	1					
ANR	420117	ElseStatement	else		419841	0					
ANR	420118	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_MEMORY ) )		419841	0					
ANR	420119	Condition	! ( op -> operands [ 1 ] . type & OT_MEMORY )	705:13:19157:19191	419841	0	True				
ANR	420120	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		419841	0					
ANR	420121	UnaryOperator	!		419841	0					
ANR	420122	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		419841	1		&			
ANR	420123	MemberAccess	op -> operands [ 1 ] . type		419841	0					
ANR	420124	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	420125	PtrMemberAccess	op -> operands		419841	0					
ANR	420126	Identifier	op		419841	0					
ANR	420127	Identifier	operands		419841	1					
ANR	420128	PrimaryExpression	1		419841	1					
ANR	420129	Identifier	type		419841	1					
ANR	420130	Identifier	OT_MEMORY		419841	1					
ANR	420131	CompoundStatement		33:50:956:956	419841	1					
ANR	420132	ReturnStatement	return - 1 ;	706:3:19199:19208	419841	0	True				
ANR	420133	UnaryOperationExpression	- 1		419841	0					
ANR	420134	UnaryOperator	-		419841	0					
ANR	420135	PrimaryExpression	1		419841	1					
ANR	420136	ExpressionStatement	data [ l ] += op -> operands [ 0 ] . reg << 3	708:2:19216:19251	419841	4	True				
ANR	420137	AssignmentExpression	data [ l ] += op -> operands [ 0 ] . reg << 3		419841	0		+=			
ANR	420138	ArrayIndexing	data [ l ]		419841	0					
ANR	420139	Identifier	data		419841	0					
ANR	420140	Identifier	l		419841	1					
ANR	420141	ShiftExpression	op -> operands [ 0 ] . reg << 3		419841	1		<<			
ANR	420142	MemberAccess	op -> operands [ 0 ] . reg		419841	0					
ANR	420143	ArrayIndexing	op -> operands [ 0 ]		419841	0					
ANR	420144	PtrMemberAccess	op -> operands		419841	0					
ANR	420145	Identifier	op		419841	0					
ANR	420146	Identifier	operands		419841	1					
ANR	420147	PrimaryExpression	0		419841	1					
ANR	420148	Identifier	reg		419841	1					
ANR	420149	PrimaryExpression	3		419841	1					
ANR	420150	ExpressionStatement	data [ l ++ ] += op -> operands [ 1 ] . reg	709:2:19255:19287	419841	5	True				
ANR	420151	AssignmentExpression	data [ l ++ ] += op -> operands [ 1 ] . reg		419841	0		+=			
ANR	420152	ArrayIndexing	data [ l ++ ]		419841	0					
ANR	420153	Identifier	data		419841	0					
ANR	420154	PostIncDecOperationExpression	l ++		419841	1					
ANR	420155	Identifier	l		419841	0					
ANR	420156	IncDec	++		419841	1					
ANR	420157	MemberAccess	op -> operands [ 1 ] . reg		419841	1					
ANR	420158	ArrayIndexing	op -> operands [ 1 ]		419841	0					
ANR	420159	PtrMemberAccess	op -> operands		419841	0					
ANR	420160	Identifier	op		419841	0					
ANR	420161	Identifier	operands		419841	1					
ANR	420162	PrimaryExpression	1		419841	1					
ANR	420163	Identifier	reg		419841	1					
ANR	420164	ReturnStatement	return l ;	711:1:19293:19301	419841	4	True				
ANR	420165	Identifier	l		419841	0					
ANR	420166	ReturnType	static int		419841	1					
ANR	420167	Identifier	opbs		419841	2					
ANR	420168	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		419841	3					
ANR	420169	Parameter	RAsm * a	673:16:18199:18205	419841	0	True				
ANR	420170	ParameterType	RAsm *		419841	0					
ANR	420171	Identifier	a		419841	1					
ANR	420172	Parameter	ut8 * data	673:25:18208:18216	419841	1	True				
ANR	420173	ParameterType	ut8 *		419841	0					
ANR	420174	Identifier	data		419841	1					
ANR	420175	Parameter	const Opcode * op	673:36:18219:18234	419841	2	True				
ANR	420176	ParameterType	const Opcode *		419841	0					
ANR	420177	Identifier	op		419841	1					
ANR	420178	CFGEntryNode	ENTRY		419841		True				
ANR	420179	CFGExitNode	EXIT		419841		True				
ANR	420180	Symbol	op -> operands [ 1 ] . reg_size		419841						
ANR	420181	Symbol	OT_QWORD		419841						
ANR	420182	Symbol	data		419841						
ANR	420183	Symbol	* op		419841						
ANR	420184	Symbol	op -> mnemonic		419841						
ANR	420185	Symbol	* * op		419841						
ANR	420186	Symbol	* op -> operands		419841						
ANR	420187	Symbol	op -> operands [ 0 ] . type		419841						
ANR	420188	Symbol	op -> operands [ 0 ] . reg		419841						
ANR	420189	Symbol	OT_MEMORY		419841						
ANR	420190	Symbol	a -> bits		419841						
ANR	420191	Symbol	strcmp		419841						
ANR	420192	Symbol	a		419841						
ANR	420193	Symbol	op		419841						
ANR	420194	Symbol	OT_WORD		419841						
ANR	420195	Symbol	OT_GPREG		419841						
ANR	420196	Symbol	op -> operands [ 1 ] . reg		419841						
ANR	420197	Symbol	ALL_SIZE		419841						
ANR	420198	Symbol	* a		419841						
ANR	420199	Symbol	l		419841						
ANR	420200	Symbol	op -> operands [ 1 ] . type		419841						
ANR	420201	Symbol	* l		419841						
ANR	420202	Symbol	op -> operands		419841						
ANR	420203	Symbol	* data		419841						
ANR	420204	Symbol	OT_DWORD		419841						
ANR	420205	Function	opbswap	714:0:19306:19792							
ANR	420206	FunctionDef	"opbswap (RAsm * a , ut8 * data , const Opcode * op)"		420205	0					
ANR	420207	CompoundStatement		714:57:19363:19792	420205	0					
ANR	420208	IdentifierDeclStatement	int l = 0 ;	715:1:19366:19375	420205	0	True				
ANR	420209	IdentifierDecl	l = 0		420205	0					
ANR	420210	IdentifierDeclType	int		420205	0					
ANR	420211	Identifier	l		420205	1					
ANR	420212	AssignmentExpression	l = 0		420205	2		=			
ANR	420213	Identifier	l		420205	0					
ANR	420214	PrimaryExpression	0		420205	1					
ANR	420215	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL )		420205	1					
ANR	420216	Condition	op -> operands [ 0 ] . type & OT_REGALL	716:5:19382:19413	420205	0	True				
ANR	420217	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		420205	0		&			
ANR	420218	MemberAccess	op -> operands [ 0 ] . type		420205	0					
ANR	420219	ArrayIndexing	op -> operands [ 0 ]		420205	0					
ANR	420220	PtrMemberAccess	op -> operands		420205	0					
ANR	420221	Identifier	op		420205	0					
ANR	420222	Identifier	operands		420205	1					
ANR	420223	PrimaryExpression	0		420205	1					
ANR	420224	Identifier	type		420205	1					
ANR	420225	Identifier	OT_REGALL		420205	1					
ANR	420226	CompoundStatement		3:39:52:52	420205	1					
ANR	420227	ExpressionStatement	is_valid_registers ( op )	717:2:19420:19443	420205	0	True				
ANR	420228	CallExpression	is_valid_registers ( op )		420205	0					
ANR	420229	Callee	is_valid_registers		420205	0					
ANR	420230	Identifier	is_valid_registers		420205	0					
ANR	420231	ArgumentList	op		420205	1					
ANR	420232	Argument	op		420205	0					
ANR	420233	Identifier	op		420205	0					
ANR	420234	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED )		420205	1					
ANR	420235	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED	718:6:19451:19487	420205	0	True				
ANR	420236	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		420205	0		==			
ANR	420237	MemberAccess	op -> operands [ 0 ] . reg		420205	0					
ANR	420238	ArrayIndexing	op -> operands [ 0 ]		420205	0					
ANR	420239	PtrMemberAccess	op -> operands		420205	0					
ANR	420240	Identifier	op		420205	0					
ANR	420241	Identifier	operands		420205	1					
ANR	420242	PrimaryExpression	0		420205	1					
ANR	420243	Identifier	reg		420205	1					
ANR	420244	Identifier	X86R_UNDEFINED		420205	1					
ANR	420245	CompoundStatement		5:45:126:126	420205	1					
ANR	420246	ReturnStatement	return - 1 ;	719:3:19495:19504	420205	0	True				
ANR	420247	UnaryOperationExpression	- 1		420205	0					
ANR	420248	UnaryOperator	-		420205	0					
ANR	420249	PrimaryExpression	1		420205	1					
ANR	420250	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		420205	2					
ANR	420251	Condition	op -> operands [ 0 ] . type & OT_QWORD	722:6:19517:19547	420205	0	True				
ANR	420252	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		420205	0		&			
ANR	420253	MemberAccess	op -> operands [ 0 ] . type		420205	0					
ANR	420254	ArrayIndexing	op -> operands [ 0 ]		420205	0					
ANR	420255	PtrMemberAccess	op -> operands		420205	0					
ANR	420256	Identifier	op		420205	0					
ANR	420257	Identifier	operands		420205	1					
ANR	420258	PrimaryExpression	0		420205	1					
ANR	420259	Identifier	type		420205	1					
ANR	420260	Identifier	OT_QWORD		420205	1					
ANR	420261	CompoundStatement		9:39:186:186	420205	1					
ANR	420262	ExpressionStatement	data [ l ++ ] = 0x48	723:3:19555:19571	420205	0	True				
ANR	420263	AssignmentExpression	data [ l ++ ] = 0x48		420205	0		=			
ANR	420264	ArrayIndexing	data [ l ++ ]		420205	0					
ANR	420265	Identifier	data		420205	0					
ANR	420266	PostIncDecOperationExpression	l ++		420205	1					
ANR	420267	Identifier	l		420205	0					
ANR	420268	IncDec	++		420205	1					
ANR	420269	PrimaryExpression	0x48		420205	1					
ANR	420270	ExpressionStatement	data [ l ++ ] = 0x0f	724:3:19576:19592	420205	1	True				
ANR	420271	AssignmentExpression	data [ l ++ ] = 0x0f		420205	0		=			
ANR	420272	ArrayIndexing	data [ l ++ ]		420205	0					
ANR	420273	Identifier	data		420205	0					
ANR	420274	PostIncDecOperationExpression	l ++		420205	1					
ANR	420275	Identifier	l		420205	0					
ANR	420276	IncDec	++		420205	1					
ANR	420277	PrimaryExpression	0x0f		420205	1					
ANR	420278	ExpressionStatement	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg	725:3:19597:19635	420205	2	True				
ANR	420279	AssignmentExpression	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg		420205	0		=			
ANR	420280	ArrayIndexing	data [ l ++ ]		420205	0					
ANR	420281	Identifier	data		420205	0					
ANR	420282	PostIncDecOperationExpression	l ++		420205	1					
ANR	420283	Identifier	l		420205	0					
ANR	420284	IncDec	++		420205	1					
ANR	420285	AdditiveExpression	0xc8 + op -> operands [ 0 ] . reg		420205	1		+			
ANR	420286	PrimaryExpression	0xc8		420205	0					
ANR	420287	MemberAccess	op -> operands [ 0 ] . reg		420205	1					
ANR	420288	ArrayIndexing	op -> operands [ 0 ]		420205	0					
ANR	420289	PtrMemberAccess	op -> operands		420205	0					
ANR	420290	Identifier	op		420205	0					
ANR	420291	Identifier	operands		420205	1					
ANR	420292	PrimaryExpression	0		420205	1					
ANR	420293	Identifier	reg		420205	1					
ANR	420294	ElseStatement	else		420205	0					
ANR	420295	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		420205	0					
ANR	420296	Condition	op -> operands [ 0 ] . type & OT_DWORD	726:13:19650:19680	420205	0	True				
ANR	420297	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		420205	0		&			
ANR	420298	MemberAccess	op -> operands [ 0 ] . type		420205	0					
ANR	420299	ArrayIndexing	op -> operands [ 0 ]		420205	0					
ANR	420300	PtrMemberAccess	op -> operands		420205	0					
ANR	420301	Identifier	op		420205	0					
ANR	420302	Identifier	operands		420205	1					
ANR	420303	PrimaryExpression	0		420205	1					
ANR	420304	Identifier	type		420205	1					
ANR	420305	Identifier	OT_DWORD		420205	1					
ANR	420306	CompoundStatement		13:46:319:319	420205	1					
ANR	420307	ExpressionStatement	data [ l ++ ] = 0x0f	727:3:19688:19704	420205	0	True				
ANR	420308	AssignmentExpression	data [ l ++ ] = 0x0f		420205	0		=			
ANR	420309	ArrayIndexing	data [ l ++ ]		420205	0					
ANR	420310	Identifier	data		420205	0					
ANR	420311	PostIncDecOperationExpression	l ++		420205	1					
ANR	420312	Identifier	l		420205	0					
ANR	420313	IncDec	++		420205	1					
ANR	420314	PrimaryExpression	0x0f		420205	1					
ANR	420315	ExpressionStatement	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg	728:3:19709:19747	420205	1	True				
ANR	420316	AssignmentExpression	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg		420205	0		=			
ANR	420317	ArrayIndexing	data [ l ++ ]		420205	0					
ANR	420318	Identifier	data		420205	0					
ANR	420319	PostIncDecOperationExpression	l ++		420205	1					
ANR	420320	Identifier	l		420205	0					
ANR	420321	IncDec	++		420205	1					
ANR	420322	AdditiveExpression	0xc8 + op -> operands [ 0 ] . reg		420205	1		+			
ANR	420323	PrimaryExpression	0xc8		420205	0					
ANR	420324	MemberAccess	op -> operands [ 0 ] . reg		420205	1					
ANR	420325	ArrayIndexing	op -> operands [ 0 ]		420205	0					
ANR	420326	PtrMemberAccess	op -> operands		420205	0					
ANR	420327	Identifier	op		420205	0					
ANR	420328	Identifier	operands		420205	1					
ANR	420329	PrimaryExpression	0		420205	1					
ANR	420330	Identifier	reg		420205	1					
ANR	420331	ElseStatement	else		420205	0					
ANR	420332	CompoundStatement		16:9:394:394	420205	0					
ANR	420333	ReturnStatement	return - 1 ;	730:3:19763:19772	420205	0	True				
ANR	420334	UnaryOperationExpression	- 1		420205	0					
ANR	420335	UnaryOperator	-		420205	0					
ANR	420336	PrimaryExpression	1		420205	1					
ANR	420337	ReturnStatement	return l ;	733:1:19782:19790	420205	2	True				
ANR	420338	Identifier	l		420205	0					
ANR	420339	ReturnType	static int		420205	1					
ANR	420340	Identifier	opbswap		420205	2					
ANR	420341	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		420205	3					
ANR	420342	Parameter	RAsm * a	714:19:19325:19331	420205	0	True				
ANR	420343	ParameterType	RAsm *		420205	0					
ANR	420344	Identifier	a		420205	1					
ANR	420345	Parameter	ut8 * data	714:28:19334:19342	420205	1	True				
ANR	420346	ParameterType	ut8 *		420205	0					
ANR	420347	Identifier	data		420205	1					
ANR	420348	Parameter	const Opcode * op	714:39:19345:19360	420205	2	True				
ANR	420349	ParameterType	const Opcode *		420205	0					
ANR	420350	Identifier	op		420205	1					
ANR	420351	CFGEntryNode	ENTRY		420205		True				
ANR	420352	CFGExitNode	EXIT		420205		True				
ANR	420353	Symbol	a		420205						
ANR	420354	Symbol	op		420205						
ANR	420355	Symbol	OT_QWORD		420205						
ANR	420356	Symbol	data		420205						
ANR	420357	Symbol	* op		420205						
ANR	420358	Symbol	l		420205						
ANR	420359	Symbol	OT_REGALL		420205						
ANR	420360	Symbol	* * op		420205						
ANR	420361	Symbol	* op -> operands		420205						
ANR	420362	Symbol	X86R_UNDEFINED		420205						
ANR	420363	Symbol	op -> operands [ 0 ] . type		420205						
ANR	420364	Symbol	op -> operands [ 0 ] . reg		420205						
ANR	420365	Symbol	op -> operands		420205						
ANR	420366	Symbol	* data		420205						
ANR	420367	Symbol	OT_DWORD		420205						
ANR	420368	Function	opcall	736:0:19795:21001							
ANR	420369	FunctionDef	"opcall (RAsm * a , ut8 * data , const Opcode * op)"		420368	0					
ANR	420370	CompoundStatement		736:56:19851:21001	420368	0					
ANR	420371	ExpressionStatement	is_valid_registers ( op )	737:1:19854:19877	420368	0	True				
ANR	420372	CallExpression	is_valid_registers ( op )		420368	0					
ANR	420373	Callee	is_valid_registers		420368	0					
ANR	420374	Identifier	is_valid_registers		420368	0					
ANR	420375	ArgumentList	op		420368	1					
ANR	420376	Argument	op		420368	0					
ANR	420377	Identifier	op		420368	0					
ANR	420378	IdentifierDeclStatement	int l = 0 ;	738:1:19880:19889	420368	1	True				
ANR	420379	IdentifierDecl	l = 0		420368	0					
ANR	420380	IdentifierDeclType	int		420368	0					
ANR	420381	Identifier	l		420368	1					
ANR	420382	AssignmentExpression	l = 0		420368	2		=			
ANR	420383	Identifier	l		420368	0					
ANR	420384	PrimaryExpression	0		420368	1					
ANR	420385	IdentifierDeclStatement	int immediate = 0 ;	739:1:19892:19909	420368	2	True				
ANR	420386	IdentifierDecl	immediate = 0		420368	0					
ANR	420387	IdentifierDeclType	int		420368	0					
ANR	420388	Identifier	immediate		420368	1					
ANR	420389	AssignmentExpression	immediate = 0		420368	2		=			
ANR	420390	Identifier	immediate		420368	0					
ANR	420391	PrimaryExpression	0		420368	1					
ANR	420392	IdentifierDeclStatement	int offset = 0 ;	740:1:19912:19926	420368	3	True				
ANR	420393	IdentifierDecl	offset = 0		420368	0					
ANR	420394	IdentifierDeclType	int		420368	0					
ANR	420395	Identifier	offset		420368	1					
ANR	420396	AssignmentExpression	offset = 0		420368	2		=			
ANR	420397	Identifier	offset		420368	0					
ANR	420398	PrimaryExpression	0		420368	1					
ANR	420399	IdentifierDeclStatement	int mod = 0 ;	741:1:19929:19940	420368	4	True				
ANR	420400	IdentifierDecl	mod = 0		420368	0					
ANR	420401	IdentifierDeclType	int		420368	0					
ANR	420402	Identifier	mod		420368	1					
ANR	420403	AssignmentExpression	mod = 0		420368	2		=			
ANR	420404	Identifier	mod		420368	0					
ANR	420405	PrimaryExpression	0		420368	1					
ANR	420406	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		420368	5					
ANR	420407	Condition	op -> operands [ 0 ] . type & OT_GPREG	743:5:19948:19978	420368	0	True				
ANR	420408	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		420368	0		&			
ANR	420409	MemberAccess	op -> operands [ 0 ] . type		420368	0					
ANR	420410	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420411	PtrMemberAccess	op -> operands		420368	0					
ANR	420412	Identifier	op		420368	0					
ANR	420413	Identifier	operands		420368	1					
ANR	420414	PrimaryExpression	0		420368	1					
ANR	420415	Identifier	type		420368	1					
ANR	420416	Identifier	OT_GPREG		420368	1					
ANR	420417	CompoundStatement		8:38:129:129	420368	1					
ANR	420418	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED )		420368	0					
ANR	420419	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED	744:6:19989:20025	420368	0	True				
ANR	420420	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		420368	0		==			
ANR	420421	MemberAccess	op -> operands [ 0 ] . reg		420368	0					
ANR	420422	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420423	PtrMemberAccess	op -> operands		420368	0					
ANR	420424	Identifier	op		420368	0					
ANR	420425	Identifier	operands		420368	1					
ANR	420426	PrimaryExpression	0		420368	1					
ANR	420427	Identifier	reg		420368	1					
ANR	420428	Identifier	X86R_UNDEFINED		420368	1					
ANR	420429	CompoundStatement		9:45:176:176	420368	1					
ANR	420430	ReturnStatement	return - 1 ;	745:3:20033:20042	420368	0	True				
ANR	420431	UnaryOperationExpression	- 1		420368	0					
ANR	420432	UnaryOperator	-		420368	0					
ANR	420433	PrimaryExpression	1		420368	1					
ANR	420434	IfStatement	if ( a -> bits == 64 && op -> operands [ 0 ] . extended )		420368	1					
ANR	420435	Condition	a -> bits == 64 && op -> operands [ 0 ] . extended	747:6:20054:20094	420368	0	True				
ANR	420436	AndExpression	a -> bits == 64 && op -> operands [ 0 ] . extended		420368	0		&&			
ANR	420437	EqualityExpression	a -> bits == 64		420368	0		==			
ANR	420438	PtrMemberAccess	a -> bits		420368	0					
ANR	420439	Identifier	a		420368	0					
ANR	420440	Identifier	bits		420368	1					
ANR	420441	PrimaryExpression	64		420368	1					
ANR	420442	MemberAccess	op -> operands [ 0 ] . extended		420368	1					
ANR	420443	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420444	PtrMemberAccess	op -> operands		420368	0					
ANR	420445	Identifier	op		420368	0					
ANR	420446	Identifier	operands		420368	1					
ANR	420447	PrimaryExpression	0		420368	1					
ANR	420448	Identifier	extended		420368	1					
ANR	420449	CompoundStatement		12:49:245:245	420368	1					
ANR	420450	ExpressionStatement	data [ l ++ ] = 0x41	748:3:20102:20118	420368	0	True				
ANR	420451	AssignmentExpression	data [ l ++ ] = 0x41		420368	0		=			
ANR	420452	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420453	Identifier	data		420368	0					
ANR	420454	PostIncDecOperationExpression	l ++		420368	1					
ANR	420455	Identifier	l		420368	0					
ANR	420456	IncDec	++		420368	1					
ANR	420457	PrimaryExpression	0x41		420368	1					
ANR	420458	ExpressionStatement	data [ l ++ ] = 0xff	750:2:20126:20142	420368	2	True				
ANR	420459	AssignmentExpression	data [ l ++ ] = 0xff		420368	0		=			
ANR	420460	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420461	Identifier	data		420368	0					
ANR	420462	PostIncDecOperationExpression	l ++		420368	1					
ANR	420463	Identifier	l		420368	0					
ANR	420464	IncDec	++		420368	1					
ANR	420465	PrimaryExpression	0xff		420368	1					
ANR	420466	ExpressionStatement	mod = 3	751:2:20146:20153	420368	3	True				
ANR	420467	AssignmentExpression	mod = 3		420368	0		=			
ANR	420468	Identifier	mod		420368	0					
ANR	420469	PrimaryExpression	3		420368	1					
ANR	420470	ExpressionStatement	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . reg	752:2:20157:20208	420368	4	True				
ANR	420471	AssignmentExpression	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . reg		420368	0		=			
ANR	420472	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420473	Identifier	data		420368	0					
ANR	420474	PostIncDecOperationExpression	l ++		420368	1					
ANR	420475	Identifier	l		420368	0					
ANR	420476	IncDec	++		420368	1					
ANR	420477	InclusiveOrExpression	mod << 6 | 2 << 3 | op -> operands [ 0 ] . reg		420368	1		|			
ANR	420478	ShiftExpression	mod << 6		420368	0		<<			
ANR	420479	Identifier	mod		420368	0					
ANR	420480	PrimaryExpression	6		420368	1					
ANR	420481	InclusiveOrExpression	2 << 3 | op -> operands [ 0 ] . reg		420368	1		|			
ANR	420482	ShiftExpression	2 << 3		420368	0		<<			
ANR	420483	PrimaryExpression	2		420368	0					
ANR	420484	PrimaryExpression	3		420368	1					
ANR	420485	MemberAccess	op -> operands [ 0 ] . reg		420368	1					
ANR	420486	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420487	PtrMemberAccess	op -> operands		420368	0					
ANR	420488	Identifier	op		420368	0					
ANR	420489	Identifier	operands		420368	1					
ANR	420490	PrimaryExpression	0		420368	1					
ANR	420491	Identifier	reg		420368	1					
ANR	420492	ElseStatement	else		420368	0					
ANR	420493	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		420368	0					
ANR	420494	Condition	op -> operands [ 0 ] . type & OT_MEMORY	753:12:20222:20253	420368	0	True				
ANR	420495	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		420368	0		&			
ANR	420496	MemberAccess	op -> operands [ 0 ] . type		420368	0					
ANR	420497	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420498	PtrMemberAccess	op -> operands		420368	0					
ANR	420499	Identifier	op		420368	0					
ANR	420500	Identifier	operands		420368	1					
ANR	420501	PrimaryExpression	0		420368	1					
ANR	420502	Identifier	type		420368	1					
ANR	420503	Identifier	OT_MEMORY		420368	1					
ANR	420504	CompoundStatement		18:46:404:404	420368	1					
ANR	420505	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED )		420368	0					
ANR	420506	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED	754:6:20264:20304	420368	0	True				
ANR	420507	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED		420368	0		==			
ANR	420508	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		420368	0					
ANR	420509	MemberAccess	op -> operands [ 0 ] . regs		420368	0					
ANR	420510	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420511	PtrMemberAccess	op -> operands		420368	0					
ANR	420512	Identifier	op		420368	0					
ANR	420513	Identifier	operands		420368	1					
ANR	420514	PrimaryExpression	0		420368	1					
ANR	420515	Identifier	regs		420368	1					
ANR	420516	PrimaryExpression	0		420368	1					
ANR	420517	Identifier	X86R_UNDEFINED		420368	1					
ANR	420518	CompoundStatement		19:49:455:455	420368	1					
ANR	420519	ReturnStatement	return - 1 ;	755:3:20312:20321	420368	0	True				
ANR	420520	UnaryOperationExpression	- 1		420368	0					
ANR	420521	UnaryOperator	-		420368	0					
ANR	420522	PrimaryExpression	1		420368	1					
ANR	420523	ExpressionStatement	data [ l ++ ] = 0xff	757:2:20329:20345	420368	1	True				
ANR	420524	AssignmentExpression	data [ l ++ ] = 0xff		420368	0		=			
ANR	420525	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420526	Identifier	data		420368	0					
ANR	420527	PostIncDecOperationExpression	l ++		420368	1					
ANR	420528	Identifier	l		420368	0					
ANR	420529	IncDec	++		420368	1					
ANR	420530	PrimaryExpression	0xff		420368	1					
ANR	420531	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	758:2:20349:20410	420368	2	True				
ANR	420532	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		420368	0		=			
ANR	420533	Identifier	offset		420368	0					
ANR	420534	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		420368	1		*			
ANR	420535	MemberAccess	op -> operands [ 0 ] . offset		420368	0					
ANR	420536	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420537	PtrMemberAccess	op -> operands		420368	0					
ANR	420538	Identifier	op		420368	0					
ANR	420539	Identifier	operands		420368	1					
ANR	420540	PrimaryExpression	0		420368	1					
ANR	420541	Identifier	offset		420368	1					
ANR	420542	MemberAccess	op -> operands [ 0 ] . offset_sign		420368	1					
ANR	420543	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420544	PtrMemberAccess	op -> operands		420368	0					
ANR	420545	Identifier	op		420368	0					
ANR	420546	Identifier	operands		420368	1					
ANR	420547	PrimaryExpression	0		420368	1					
ANR	420548	Identifier	offset_sign		420368	1					
ANR	420549	IfStatement	if ( offset )		420368	3					
ANR	420550	Condition	offset	759:6:20418:20423	420368	0	True				
ANR	420551	Identifier	offset		420368	0					
ANR	420552	CompoundStatement		24:14:574:574	420368	1					
ANR	420553	ExpressionStatement	mod = 1	760:3:20431:20438	420368	0	True				
ANR	420554	AssignmentExpression	mod = 1		420368	0		=			
ANR	420555	Identifier	mod		420368	0					
ANR	420556	PrimaryExpression	1		420368	1					
ANR	420557	IfStatement	if ( offset > 127 || offset < - 128 )		420368	1					
ANR	420558	Condition	offset > 127 || offset < - 128	761:7:20447:20475	420368	0	True				
ANR	420559	OrExpression	offset > 127 || offset < - 128		420368	0		||			
ANR	420560	RelationalExpression	offset > 127		420368	0		>			
ANR	420561	Identifier	offset		420368	0					
ANR	420562	PrimaryExpression	127		420368	1					
ANR	420563	RelationalExpression	offset < - 128		420368	1		<			
ANR	420564	Identifier	offset		420368	0					
ANR	420565	UnaryOperationExpression	- 128		420368	1					
ANR	420566	UnaryOperator	-		420368	0					
ANR	420567	PrimaryExpression	128		420368	1					
ANR	420568	CompoundStatement		26:38:626:626	420368	1					
ANR	420569	ExpressionStatement	mod = 2	762:4:20484:20491	420368	0	True				
ANR	420570	AssignmentExpression	mod = 2		420368	0		=			
ANR	420571	Identifier	mod		420368	0					
ANR	420572	PrimaryExpression	2		420368	1					
ANR	420573	ExpressionStatement	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . regs [ 0 ]	765:2:20504:20559	420368	4	True				
ANR	420574	AssignmentExpression	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . regs [ 0 ]		420368	0		=			
ANR	420575	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420576	Identifier	data		420368	0					
ANR	420577	PostIncDecOperationExpression	l ++		420368	1					
ANR	420578	Identifier	l		420368	0					
ANR	420579	IncDec	++		420368	1					
ANR	420580	InclusiveOrExpression	mod << 6 | 2 << 3 | op -> operands [ 0 ] . regs [ 0 ]		420368	1		|			
ANR	420581	ShiftExpression	mod << 6		420368	0		<<			
ANR	420582	Identifier	mod		420368	0					
ANR	420583	PrimaryExpression	6		420368	1					
ANR	420584	InclusiveOrExpression	2 << 3 | op -> operands [ 0 ] . regs [ 0 ]		420368	1		|			
ANR	420585	ShiftExpression	2 << 3		420368	0		<<			
ANR	420586	PrimaryExpression	2		420368	0					
ANR	420587	PrimaryExpression	3		420368	1					
ANR	420588	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		420368	1					
ANR	420589	MemberAccess	op -> operands [ 0 ] . regs		420368	0					
ANR	420590	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420591	PtrMemberAccess	op -> operands		420368	0					
ANR	420592	Identifier	op		420368	0					
ANR	420593	Identifier	operands		420368	1					
ANR	420594	PrimaryExpression	0		420368	1					
ANR	420595	Identifier	regs		420368	1					
ANR	420596	PrimaryExpression	0		420368	1					
ANR	420597	IfStatement	if ( mod )		420368	5					
ANR	420598	Condition	mod	766:6:20567:20569	420368	0	True				
ANR	420599	Identifier	mod		420368	0					
ANR	420600	CompoundStatement		31:11:720:720	420368	1					
ANR	420601	ExpressionStatement	data [ l ++ ] = offset	767:3:20577:20595	420368	0	True				
ANR	420602	AssignmentExpression	data [ l ++ ] = offset		420368	0		=			
ANR	420603	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420604	Identifier	data		420368	0					
ANR	420605	PostIncDecOperationExpression	l ++		420368	1					
ANR	420606	Identifier	l		420368	0					
ANR	420607	IncDec	++		420368	1					
ANR	420608	Identifier	offset		420368	1					
ANR	420609	IfStatement	if ( mod == 2 )		420368	1					
ANR	420610	Condition	mod == 2	768:7:20604:20611	420368	0	True				
ANR	420611	EqualityExpression	mod == 2		420368	0		==			
ANR	420612	Identifier	mod		420368	0					
ANR	420613	PrimaryExpression	2		420368	1					
ANR	420614	CompoundStatement		33:17:762:762	420368	1					
ANR	420615	ExpressionStatement	data [ l ++ ] = offset >> 8	769:4:20620:20643	420368	0	True				
ANR	420616	AssignmentExpression	data [ l ++ ] = offset >> 8		420368	0		=			
ANR	420617	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420618	Identifier	data		420368	0					
ANR	420619	PostIncDecOperationExpression	l ++		420368	1					
ANR	420620	Identifier	l		420368	0					
ANR	420621	IncDec	++		420368	1					
ANR	420622	ShiftExpression	offset >> 8		420368	1		>>			
ANR	420623	Identifier	offset		420368	0					
ANR	420624	PrimaryExpression	8		420368	1					
ANR	420625	ExpressionStatement	data [ l ++ ] = offset >> 16	770:4:20649:20673	420368	1	True				
ANR	420626	AssignmentExpression	data [ l ++ ] = offset >> 16		420368	0		=			
ANR	420627	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420628	Identifier	data		420368	0					
ANR	420629	PostIncDecOperationExpression	l ++		420368	1					
ANR	420630	Identifier	l		420368	0					
ANR	420631	IncDec	++		420368	1					
ANR	420632	ShiftExpression	offset >> 16		420368	1		>>			
ANR	420633	Identifier	offset		420368	0					
ANR	420634	PrimaryExpression	16		420368	1					
ANR	420635	ExpressionStatement	data [ l ++ ] = offset >> 24	771:4:20679:20703	420368	2	True				
ANR	420636	AssignmentExpression	data [ l ++ ] = offset >> 24		420368	0		=			
ANR	420637	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420638	Identifier	data		420368	0					
ANR	420639	PostIncDecOperationExpression	l ++		420368	1					
ANR	420640	Identifier	l		420368	0					
ANR	420641	IncDec	++		420368	1					
ANR	420642	ShiftExpression	offset >> 24		420368	1		>>			
ANR	420643	Identifier	offset		420368	0					
ANR	420644	PrimaryExpression	24		420368	1					
ANR	420645	ElseStatement	else		420368	0					
ANR	420646	CompoundStatement		40:2:874:899	420368	0					
ANR	420647	IdentifierDeclStatement	ut64 instr_offset = a -> pc ;	775:2:20726:20751	420368	0	True				
ANR	420648	IdentifierDecl	instr_offset = a -> pc		420368	0					
ANR	420649	IdentifierDeclType	ut64		420368	0					
ANR	420650	Identifier	instr_offset		420368	1					
ANR	420651	AssignmentExpression	instr_offset = a -> pc		420368	2		=			
ANR	420652	Identifier	instr_offset		420368	0					
ANR	420653	PtrMemberAccess	a -> pc		420368	1					
ANR	420654	Identifier	a		420368	0					
ANR	420655	Identifier	pc		420368	1					
ANR	420656	ExpressionStatement	data [ l ++ ] = 0xe8	776:2:20755:20771	420368	1	True				
ANR	420657	AssignmentExpression	data [ l ++ ] = 0xe8		420368	0		=			
ANR	420658	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420659	Identifier	data		420368	0					
ANR	420660	PostIncDecOperationExpression	l ++		420368	1					
ANR	420661	Identifier	l		420368	0					
ANR	420662	IncDec	++		420368	1					
ANR	420663	PrimaryExpression	0xe8		420368	1					
ANR	420664	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	777:2:20775:20835	420368	2	True				
ANR	420665	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		420368	0		=			
ANR	420666	Identifier	immediate		420368	0					
ANR	420667	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		420368	1		*			
ANR	420668	MemberAccess	op -> operands [ 0 ] . immediate		420368	0					
ANR	420669	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420670	PtrMemberAccess	op -> operands		420368	0					
ANR	420671	Identifier	op		420368	0					
ANR	420672	Identifier	operands		420368	1					
ANR	420673	PrimaryExpression	0		420368	1					
ANR	420674	Identifier	immediate		420368	1					
ANR	420675	MemberAccess	op -> operands [ 0 ] . sign		420368	1					
ANR	420676	ArrayIndexing	op -> operands [ 0 ]		420368	0					
ANR	420677	PtrMemberAccess	op -> operands		420368	0					
ANR	420678	Identifier	op		420368	0					
ANR	420679	Identifier	operands		420368	1					
ANR	420680	PrimaryExpression	0		420368	1					
ANR	420681	Identifier	sign		420368	1					
ANR	420682	ExpressionStatement	immediate -= instr_offset + 5	778:2:20839:20868	420368	3	True				
ANR	420683	AssignmentExpression	immediate -= instr_offset + 5		420368	0		-=			
ANR	420684	Identifier	immediate		420368	0					
ANR	420685	AdditiveExpression	instr_offset + 5		420368	1		+			
ANR	420686	Identifier	instr_offset		420368	0					
ANR	420687	PrimaryExpression	5		420368	1					
ANR	420688	ExpressionStatement	data [ l ++ ] = immediate	779:2:20872:20893	420368	4	True				
ANR	420689	AssignmentExpression	data [ l ++ ] = immediate		420368	0		=			
ANR	420690	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420691	Identifier	data		420368	0					
ANR	420692	PostIncDecOperationExpression	l ++		420368	1					
ANR	420693	Identifier	l		420368	0					
ANR	420694	IncDec	++		420368	1					
ANR	420695	Identifier	immediate		420368	1					
ANR	420696	ExpressionStatement	data [ l ++ ] = immediate >> 8	780:2:20897:20923	420368	5	True				
ANR	420697	AssignmentExpression	data [ l ++ ] = immediate >> 8		420368	0		=			
ANR	420698	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420699	Identifier	data		420368	0					
ANR	420700	PostIncDecOperationExpression	l ++		420368	1					
ANR	420701	Identifier	l		420368	0					
ANR	420702	IncDec	++		420368	1					
ANR	420703	ShiftExpression	immediate >> 8		420368	1		>>			
ANR	420704	Identifier	immediate		420368	0					
ANR	420705	PrimaryExpression	8		420368	1					
ANR	420706	ExpressionStatement	data [ l ++ ] = immediate >> 16	781:2:20927:20954	420368	6	True				
ANR	420707	AssignmentExpression	data [ l ++ ] = immediate >> 16		420368	0		=			
ANR	420708	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420709	Identifier	data		420368	0					
ANR	420710	PostIncDecOperationExpression	l ++		420368	1					
ANR	420711	Identifier	l		420368	0					
ANR	420712	IncDec	++		420368	1					
ANR	420713	ShiftExpression	immediate >> 16		420368	1		>>			
ANR	420714	Identifier	immediate		420368	0					
ANR	420715	PrimaryExpression	16		420368	1					
ANR	420716	ExpressionStatement	data [ l ++ ] = immediate >> 24	782:2:20958:20985	420368	7	True				
ANR	420717	AssignmentExpression	data [ l ++ ] = immediate >> 24		420368	0		=			
ANR	420718	ArrayIndexing	data [ l ++ ]		420368	0					
ANR	420719	Identifier	data		420368	0					
ANR	420720	PostIncDecOperationExpression	l ++		420368	1					
ANR	420721	Identifier	l		420368	0					
ANR	420722	IncDec	++		420368	1					
ANR	420723	ShiftExpression	immediate >> 24		420368	1		>>			
ANR	420724	Identifier	immediate		420368	0					
ANR	420725	PrimaryExpression	24		420368	1					
ANR	420726	ReturnStatement	return l ;	784:1:20991:20999	420368	6	True				
ANR	420727	Identifier	l		420368	0					
ANR	420728	ReturnType	static int		420368	1					
ANR	420729	Identifier	opcall		420368	2					
ANR	420730	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		420368	3					
ANR	420731	Parameter	RAsm * a	736:18:19813:19819	420368	0	True				
ANR	420732	ParameterType	RAsm *		420368	0					
ANR	420733	Identifier	a		420368	1					
ANR	420734	Parameter	ut8 * data	736:27:19822:19830	420368	1	True				
ANR	420735	ParameterType	ut8 *		420368	0					
ANR	420736	Identifier	data		420368	1					
ANR	420737	Parameter	const Opcode * op	736:38:19833:19848	420368	2	True				
ANR	420738	ParameterType	const Opcode *		420368	0					
ANR	420739	Identifier	op		420368	1					
ANR	420740	CFGEntryNode	ENTRY		420368		True				
ANR	420741	CFGExitNode	EXIT		420368		True				
ANR	420742	Symbol	op -> operands [ 0 ] . offset_sign		420368						
ANR	420743	Symbol	mod		420368						
ANR	420744	Symbol	data		420368						
ANR	420745	Symbol	* op		420368						
ANR	420746	Symbol	instr_offset		420368						
ANR	420747	Symbol	* * op		420368						
ANR	420748	Symbol	op -> operands [ 0 ] . extended		420368						
ANR	420749	Symbol	* op -> operands		420368						
ANR	420750	Symbol	op -> operands [ 0 ] . type		420368						
ANR	420751	Symbol	op -> operands [ 0 ] . reg		420368						
ANR	420752	Symbol	op -> operands [ 0 ] . offset		420368						
ANR	420753	Symbol	OT_MEMORY		420368						
ANR	420754	Symbol	a -> bits		420368						
ANR	420755	Symbol	op -> operands [ 0 ] . sign		420368						
ANR	420756	Symbol	a		420368						
ANR	420757	Symbol	op		420368						
ANR	420758	Symbol	OT_GPREG		420368						
ANR	420759	Symbol	offset		420368						
ANR	420760	Symbol	* a		420368						
ANR	420761	Symbol	* * op -> operands		420368						
ANR	420762	Symbol	l		420368						
ANR	420763	Symbol	op -> operands [ 0 ] . immediate		420368						
ANR	420764	Symbol	a -> pc		420368						
ANR	420765	Symbol	X86R_UNDEFINED		420368						
ANR	420766	Symbol	immediate		420368						
ANR	420767	Symbol	* op -> operands [ 0 ] . regs		420368						
ANR	420768	Symbol	* * * op		420368						
ANR	420769	Symbol	op -> operands		420368						
ANR	420770	Symbol	* data		420368						
ANR	420771	Symbol	op -> operands [ 0 ] . regs		420368						
ANR	420772	Function	opcmov	787:0:21004:24788							
ANR	420773	FunctionDef	"opcmov (RAsm * a , ut8 * data , const Opcode * op)"		420772	0					
ANR	420774	CompoundStatement		787:56:21060:24788	420772	0					
ANR	420775	ExpressionStatement	is_valid_registers ( op )	788:1:21063:21086	420772	0	True				
ANR	420776	CallExpression	is_valid_registers ( op )		420772	0					
ANR	420777	Callee	is_valid_registers		420772	0					
ANR	420778	Identifier	is_valid_registers		420772	0					
ANR	420779	ArgumentList	op		420772	1					
ANR	420780	Argument	op		420772	0					
ANR	420781	Identifier	op		420772	0					
ANR	420782	IdentifierDeclStatement	int l = 0 ;	789:1:21089:21098	420772	1	True				
ANR	420783	IdentifierDecl	l = 0		420772	0					
ANR	420784	IdentifierDeclType	int		420772	0					
ANR	420785	Identifier	l		420772	1					
ANR	420786	AssignmentExpression	l = 0		420772	2		=			
ANR	420787	Identifier	l		420772	0					
ANR	420788	PrimaryExpression	0		420772	1					
ANR	420789	IdentifierDeclStatement	int mod_byte = 0 ;	790:1:21101:21117	420772	2	True				
ANR	420790	IdentifierDecl	mod_byte = 0		420772	0					
ANR	420791	IdentifierDeclType	int		420772	0					
ANR	420792	Identifier	mod_byte		420772	1					
ANR	420793	AssignmentExpression	mod_byte = 0		420772	2		=			
ANR	420794	Identifier	mod_byte		420772	0					
ANR	420795	PrimaryExpression	0		420772	1					
ANR	420796	IdentifierDeclStatement	int offset = 0 ;	791:1:21120:21134	420772	3	True				
ANR	420797	IdentifierDecl	offset = 0		420772	0					
ANR	420798	IdentifierDeclType	int		420772	0					
ANR	420799	Identifier	offset		420772	1					
ANR	420800	AssignmentExpression	offset = 0		420772	2		=			
ANR	420801	Identifier	offset		420772	0					
ANR	420802	PrimaryExpression	0		420772	1					
ANR	420803	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_CONSTANT )		420772	4					
ANR	420804	Condition	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_CONSTANT	793:5:21142:21216	420772	0	True				
ANR	420805	OrExpression	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_CONSTANT		420772	0		||			
ANR	420806	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		420772	0		&			
ANR	420807	MemberAccess	op -> operands [ 0 ] . type		420772	0					
ANR	420808	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	420809	PtrMemberAccess	op -> operands		420772	0					
ANR	420810	Identifier	op		420772	0					
ANR	420811	Identifier	operands		420772	1					
ANR	420812	PrimaryExpression	0		420772	1					
ANR	420813	Identifier	type		420772	1					
ANR	420814	Identifier	OT_MEMORY		420772	1					
ANR	420815	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		420772	1		&			
ANR	420816	MemberAccess	op -> operands [ 1 ] . type		420772	0					
ANR	420817	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	420818	PtrMemberAccess	op -> operands		420772	0					
ANR	420819	Identifier	op		420772	0					
ANR	420820	Identifier	operands		420772	1					
ANR	420821	PrimaryExpression	1		420772	1					
ANR	420822	Identifier	type		420772	1					
ANR	420823	Identifier	OT_CONSTANT		420772	1					
ANR	420824	CompoundStatement		8:41:158:158	420772	1					
ANR	420825	ReturnStatement	return - 1 ;	795:2:21223:21232	420772	0	True				
ANR	420826	UnaryOperationExpression	- 1		420772	0					
ANR	420827	UnaryOperator	-		420772	0					
ANR	420828	PrimaryExpression	1		420772	1					
ANR	420829	ExpressionStatement	data [ l ++ ] = 0x0f	798:1:21239:21255	420772	5	True				
ANR	420830	AssignmentExpression	data [ l ++ ] = 0x0f		420772	0		=			
ANR	420831	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	420832	Identifier	data		420772	0					
ANR	420833	PostIncDecOperationExpression	l ++		420772	1					
ANR	420834	Identifier	l		420772	0					
ANR	420835	IncDec	++		420772	1					
ANR	420836	PrimaryExpression	0x0f		420772	1					
ANR	420837	IdentifierDeclStatement	char * cmov = op -> mnemonic + 4 ;	799:1:21258:21287	420772	6	True				
ANR	420838	IdentifierDecl	* cmov = op -> mnemonic + 4		420772	0					
ANR	420839	IdentifierDeclType	char *		420772	0					
ANR	420840	Identifier	cmov		420772	1					
ANR	420841	AssignmentExpression	* cmov = op -> mnemonic + 4		420772	2		=			
ANR	420842	Identifier	cmov		420772	0					
ANR	420843	AdditiveExpression	op -> mnemonic + 4		420772	1		+			
ANR	420844	PtrMemberAccess	op -> mnemonic		420772	0					
ANR	420845	Identifier	op		420772	0					
ANR	420846	Identifier	mnemonic		420772	1					
ANR	420847	PrimaryExpression	4		420772	1					
ANR	420848	IfStatement	"if ( ! strcmp ( cmov , ""o"" ) )"		420772	7					
ANR	420849	Condition	"! strcmp ( cmov , ""o"" )"	800:5:21294:21312	420772	0	True				
ANR	420850	UnaryOperationExpression	"! strcmp ( cmov , ""o"" )"		420772	0					
ANR	420851	UnaryOperator	!		420772	0					
ANR	420852	CallExpression	"strcmp ( cmov , ""o"" )"		420772	1					
ANR	420853	Callee	strcmp		420772	0					
ANR	420854	Identifier	strcmp		420772	0					
ANR	420855	ArgumentList	cmov		420772	1					
ANR	420856	Argument	cmov		420772	0					
ANR	420857	Identifier	cmov		420772	0					
ANR	420858	Argument	"""o"""		420772	1					
ANR	420859	PrimaryExpression	"""o"""		420772	0					
ANR	420860	CompoundStatement		14:26:254:254	420772	1					
ANR	420861	ExpressionStatement	data [ l ++ ] = 0x40	801:2:21319:21335	420772	0	True				
ANR	420862	AssignmentExpression	data [ l ++ ] = 0x40		420772	0		=			
ANR	420863	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	420864	Identifier	data		420772	0					
ANR	420865	PostIncDecOperationExpression	l ++		420772	1					
ANR	420866	Identifier	l		420772	0					
ANR	420867	IncDec	++		420772	1					
ANR	420868	PrimaryExpression	0x40		420772	1					
ANR	420869	ElseStatement	else		420772	0					
ANR	420870	IfStatement	"if ( ! strcmp ( cmov , ""no"" ) )"		420772	0					
ANR	420871	Condition	"! strcmp ( cmov , ""no"" )"	802:12:21349:21368	420772	0	True				
ANR	420872	UnaryOperationExpression	"! strcmp ( cmov , ""no"" )"		420772	0					
ANR	420873	UnaryOperator	!		420772	0					
ANR	420874	CallExpression	"strcmp ( cmov , ""no"" )"		420772	1					
ANR	420875	Callee	strcmp		420772	0					
ANR	420876	Identifier	strcmp		420772	0					
ANR	420877	ArgumentList	cmov		420772	1					
ANR	420878	Argument	cmov		420772	0					
ANR	420879	Identifier	cmov		420772	0					
ANR	420880	Argument	"""no"""		420772	1					
ANR	420881	PrimaryExpression	"""no"""		420772	0					
ANR	420882	CompoundStatement		16:34:310:310	420772	1					
ANR	420883	ExpressionStatement	data [ l ++ ] = 0x41	803:2:21375:21392	420772	0	True				
ANR	420884	AssignmentExpression	data [ l ++ ] = 0x41		420772	0		=			
ANR	420885	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	420886	Identifier	data		420772	0					
ANR	420887	PostIncDecOperationExpression	l ++		420772	1					
ANR	420888	Identifier	l		420772	0					
ANR	420889	IncDec	++		420772	1					
ANR	420890	PrimaryExpression	0x41		420772	1					
ANR	420891	ElseStatement	else		420772	0					
ANR	420892	IfStatement	"if ( ! strcmp ( cmov , ""b"" ) || ! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" ) )"		420772	0					
ANR	420893	Condition	"! strcmp ( cmov , ""b"" ) || ! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" )"	804:12:21406:21496	420772	0	True				
ANR	420894	OrExpression	"! strcmp ( cmov , ""b"" ) || ! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" )"		420772	0		||			
ANR	420895	UnaryOperationExpression	"! strcmp ( cmov , ""b"" )"		420772	0					
ANR	420896	UnaryOperator	!		420772	0					
ANR	420897	CallExpression	"strcmp ( cmov , ""b"" )"		420772	1					
ANR	420898	Callee	strcmp		420772	0					
ANR	420899	Identifier	strcmp		420772	0					
ANR	420900	ArgumentList	cmov		420772	1					
ANR	420901	Argument	cmov		420772	0					
ANR	420902	Identifier	cmov		420772	0					
ANR	420903	Argument	"""b"""		420772	1					
ANR	420904	PrimaryExpression	"""b"""		420772	0					
ANR	420905	OrExpression	"! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" )"		420772	1		||			
ANR	420906	UnaryOperationExpression	"! strcmp ( cmov , ""c"" )"		420772	0					
ANR	420907	UnaryOperator	!		420772	0					
ANR	420908	CallExpression	"strcmp ( cmov , ""c"" )"		420772	1					
ANR	420909	Callee	strcmp		420772	0					
ANR	420910	Identifier	strcmp		420772	0					
ANR	420911	ArgumentList	cmov		420772	1					
ANR	420912	Argument	cmov		420772	0					
ANR	420913	Identifier	cmov		420772	0					
ANR	420914	Argument	"""c"""		420772	1					
ANR	420915	PrimaryExpression	"""c"""		420772	0					
ANR	420916	UnaryOperationExpression	"! strcmp ( cmov , ""nae"" )"		420772	1					
ANR	420917	UnaryOperator	!		420772	0					
ANR	420918	CallExpression	"strcmp ( cmov , ""nae"" )"		420772	1					
ANR	420919	Callee	strcmp		420772	0					
ANR	420920	Identifier	strcmp		420772	0					
ANR	420921	ArgumentList	cmov		420772	1					
ANR	420922	Argument	cmov		420772	0					
ANR	420923	Identifier	cmov		420772	0					
ANR	420924	Argument	"""nae"""		420772	1					
ANR	420925	PrimaryExpression	"""nae"""		420772	0					
ANR	420926	CompoundStatement		20:35:438:438	420772	1					
ANR	420927	ExpressionStatement	data [ l ++ ] = 0x42	807:2:21503:21520	420772	0	True				
ANR	420928	AssignmentExpression	data [ l ++ ] = 0x42		420772	0		=			
ANR	420929	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	420930	Identifier	data		420772	0					
ANR	420931	PostIncDecOperationExpression	l ++		420772	1					
ANR	420932	Identifier	l		420772	0					
ANR	420933	IncDec	++		420772	1					
ANR	420934	PrimaryExpression	0x42		420772	1					
ANR	420935	ElseStatement	else		420772	0					
ANR	420936	IfStatement	"if ( ! strcmp ( cmov , ""ae"" ) || ! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" ) )"		420772	0					
ANR	420937	Condition	"! strcmp ( cmov , ""ae"" ) || ! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" )"	808:12:21534:21618	420772	0	True				
ANR	420938	OrExpression	"! strcmp ( cmov , ""ae"" ) || ! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" )"		420772	0		||			
ANR	420939	UnaryOperationExpression	"! strcmp ( cmov , ""ae"" )"		420772	0					
ANR	420940	UnaryOperator	!		420772	0					
ANR	420941	CallExpression	"strcmp ( cmov , ""ae"" )"		420772	1					
ANR	420942	Callee	strcmp		420772	0					
ANR	420943	Identifier	strcmp		420772	0					
ANR	420944	ArgumentList	cmov		420772	1					
ANR	420945	Argument	cmov		420772	0					
ANR	420946	Identifier	cmov		420772	0					
ANR	420947	Argument	"""ae"""		420772	1					
ANR	420948	PrimaryExpression	"""ae"""		420772	0					
ANR	420949	OrExpression	"! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" )"		420772	1		||			
ANR	420950	UnaryOperationExpression	"! strcmp ( cmov , ""nb"" )"		420772	0					
ANR	420951	UnaryOperator	!		420772	0					
ANR	420952	CallExpression	"strcmp ( cmov , ""nb"" )"		420772	1					
ANR	420953	Callee	strcmp		420772	0					
ANR	420954	Identifier	strcmp		420772	0					
ANR	420955	ArgumentList	cmov		420772	1					
ANR	420956	Argument	cmov		420772	0					
ANR	420957	Identifier	cmov		420772	0					
ANR	420958	Argument	"""nb"""		420772	1					
ANR	420959	PrimaryExpression	"""nb"""		420772	0					
ANR	420960	UnaryOperationExpression	"! strcmp ( cmov , ""nc"" )"		420772	1					
ANR	420961	UnaryOperator	!		420772	0					
ANR	420962	CallExpression	"strcmp ( cmov , ""nc"" )"		420772	1					
ANR	420963	Callee	strcmp		420772	0					
ANR	420964	Identifier	strcmp		420772	0					
ANR	420965	ArgumentList	cmov		420772	1					
ANR	420966	Argument	cmov		420772	0					
ANR	420967	Identifier	cmov		420772	0					
ANR	420968	Argument	"""nc"""		420772	1					
ANR	420969	PrimaryExpression	"""nc"""		420772	0					
ANR	420970	CompoundStatement		24:27:560:560	420772	1					
ANR	420971	ExpressionStatement	data [ l ++ ] = 0x43	811:2:21625:21642	420772	0	True				
ANR	420972	AssignmentExpression	data [ l ++ ] = 0x43		420772	0		=			
ANR	420973	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	420974	Identifier	data		420772	0					
ANR	420975	PostIncDecOperationExpression	l ++		420772	1					
ANR	420976	Identifier	l		420772	0					
ANR	420977	IncDec	++		420772	1					
ANR	420978	PrimaryExpression	0x43		420772	1					
ANR	420979	ElseStatement	else		420772	0					
ANR	420980	IfStatement	"if ( ! strcmp ( cmov , ""e"" ) || ! strcmp ( cmov , ""z"" ) )"		420772	0					
ANR	420981	Condition	"! strcmp ( cmov , ""e"" ) || ! strcmp ( cmov , ""z"" )"	812:12:21656:21716	420772	0	True				
ANR	420982	OrExpression	"! strcmp ( cmov , ""e"" ) || ! strcmp ( cmov , ""z"" )"		420772	0		||			
ANR	420983	UnaryOperationExpression	"! strcmp ( cmov , ""e"" )"		420772	0					
ANR	420984	UnaryOperator	!		420772	0					
ANR	420985	CallExpression	"strcmp ( cmov , ""e"" )"		420772	1					
ANR	420986	Callee	strcmp		420772	0					
ANR	420987	Identifier	strcmp		420772	0					
ANR	420988	ArgumentList	cmov		420772	1					
ANR	420989	Argument	cmov		420772	0					
ANR	420990	Identifier	cmov		420772	0					
ANR	420991	Argument	"""e"""		420772	1					
ANR	420992	PrimaryExpression	"""e"""		420772	0					
ANR	420993	UnaryOperationExpression	"! strcmp ( cmov , ""z"" )"		420772	1					
ANR	420994	UnaryOperator	!		420772	0					
ANR	420995	CallExpression	"strcmp ( cmov , ""z"" )"		420772	1					
ANR	420996	Callee	strcmp		420772	0					
ANR	420997	Identifier	strcmp		420772	0					
ANR	420998	ArgumentList	cmov		420772	1					
ANR	420999	Argument	cmov		420772	0					
ANR	421000	Identifier	cmov		420772	0					
ANR	421001	Argument	"""z"""		420772	1					
ANR	421002	PrimaryExpression	"""z"""		420772	0					
ANR	421003	CompoundStatement		27:40:658:658	420772	1					
ANR	421004	ExpressionStatement	data [ l ++ ] = 0x44	814:2:21723:21740	420772	0	True				
ANR	421005	AssignmentExpression	data [ l ++ ] = 0x44		420772	0		=			
ANR	421006	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421007	Identifier	data		420772	0					
ANR	421008	PostIncDecOperationExpression	l ++		420772	1					
ANR	421009	Identifier	l		420772	0					
ANR	421010	IncDec	++		420772	1					
ANR	421011	PrimaryExpression	0x44		420772	1					
ANR	421012	ElseStatement	else		420772	0					
ANR	421013	IfStatement	"if ( ! strcmp ( cmov , ""ne"" ) || ! strcmp ( cmov , ""nz"" ) )"		420772	0					
ANR	421014	Condition	"! strcmp ( cmov , ""ne"" ) || ! strcmp ( cmov , ""nz"" )"	815:12:21754:21809	420772	0	True				
ANR	421015	OrExpression	"! strcmp ( cmov , ""ne"" ) || ! strcmp ( cmov , ""nz"" )"		420772	0		||			
ANR	421016	UnaryOperationExpression	"! strcmp ( cmov , ""ne"" )"		420772	0					
ANR	421017	UnaryOperator	!		420772	0					
ANR	421018	CallExpression	"strcmp ( cmov , ""ne"" )"		420772	1					
ANR	421019	Callee	strcmp		420772	0					
ANR	421020	Identifier	strcmp		420772	0					
ANR	421021	ArgumentList	cmov		420772	1					
ANR	421022	Argument	cmov		420772	0					
ANR	421023	Identifier	cmov		420772	0					
ANR	421024	Argument	"""ne"""		420772	1					
ANR	421025	PrimaryExpression	"""ne"""		420772	0					
ANR	421026	UnaryOperationExpression	"! strcmp ( cmov , ""nz"" )"		420772	1					
ANR	421027	UnaryOperator	!		420772	0					
ANR	421028	CallExpression	"strcmp ( cmov , ""nz"" )"		420772	1					
ANR	421029	Callee	strcmp		420772	0					
ANR	421030	Identifier	strcmp		420772	0					
ANR	421031	ArgumentList	cmov		420772	1					
ANR	421032	Argument	cmov		420772	0					
ANR	421033	Identifier	cmov		420772	0					
ANR	421034	Argument	"""nz"""		420772	1					
ANR	421035	PrimaryExpression	"""nz"""		420772	0					
ANR	421036	CompoundStatement		30:34:751:751	420772	1					
ANR	421037	ExpressionStatement	data [ l ++ ] = 0x45	817:2:21816:21833	420772	0	True				
ANR	421038	AssignmentExpression	data [ l ++ ] = 0x45		420772	0		=			
ANR	421039	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421040	Identifier	data		420772	0					
ANR	421041	PostIncDecOperationExpression	l ++		420772	1					
ANR	421042	Identifier	l		420772	0					
ANR	421043	IncDec	++		420772	1					
ANR	421044	PrimaryExpression	0x45		420772	1					
ANR	421045	ElseStatement	else		420772	0					
ANR	421046	IfStatement	"if ( ! strcmp ( cmov , ""be"" ) || ! strcmp ( cmov , ""na"" ) )"		420772	0					
ANR	421047	Condition	"! strcmp ( cmov , ""be"" ) || ! strcmp ( cmov , ""na"" )"	818:19:21854:21909	420772	0	True				
ANR	421048	OrExpression	"! strcmp ( cmov , ""be"" ) || ! strcmp ( cmov , ""na"" )"		420772	0		||			
ANR	421049	UnaryOperationExpression	"! strcmp ( cmov , ""be"" )"		420772	0					
ANR	421050	UnaryOperator	!		420772	0					
ANR	421051	CallExpression	"strcmp ( cmov , ""be"" )"		420772	1					
ANR	421052	Callee	strcmp		420772	0					
ANR	421053	Identifier	strcmp		420772	0					
ANR	421054	ArgumentList	cmov		420772	1					
ANR	421055	Argument	cmov		420772	0					
ANR	421056	Identifier	cmov		420772	0					
ANR	421057	Argument	"""be"""		420772	1					
ANR	421058	PrimaryExpression	"""be"""		420772	0					
ANR	421059	UnaryOperationExpression	"! strcmp ( cmov , ""na"" )"		420772	1					
ANR	421060	UnaryOperator	!		420772	0					
ANR	421061	CallExpression	"strcmp ( cmov , ""na"" )"		420772	1					
ANR	421062	Callee	strcmp		420772	0					
ANR	421063	Identifier	strcmp		420772	0					
ANR	421064	ArgumentList	cmov		420772	1					
ANR	421065	Argument	cmov		420772	0					
ANR	421066	Identifier	cmov		420772	0					
ANR	421067	Argument	"""na"""		420772	1					
ANR	421068	PrimaryExpression	"""na"""		420772	0					
ANR	421069	CompoundStatement		33:34:851:851	420772	1					
ANR	421070	ExpressionStatement	data [ l ++ ] = 0x46	820:2:21916:21933	420772	0	True				
ANR	421071	AssignmentExpression	data [ l ++ ] = 0x46		420772	0		=			
ANR	421072	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421073	Identifier	data		420772	0					
ANR	421074	PostIncDecOperationExpression	l ++		420772	1					
ANR	421075	Identifier	l		420772	0					
ANR	421076	IncDec	++		420772	1					
ANR	421077	PrimaryExpression	0x46		420772	1					
ANR	421078	ElseStatement	else		420772	0					
ANR	421079	IfStatement	"if ( ! strcmp ( cmov , ""a"" ) || ! strcmp ( cmov , ""nbe"" ) )"		420772	0					
ANR	421080	Condition	"! strcmp ( cmov , ""a"" ) || ! strcmp ( cmov , ""nbe"" )"	821:19:21954:22009	420772	0	True				
ANR	421081	OrExpression	"! strcmp ( cmov , ""a"" ) || ! strcmp ( cmov , ""nbe"" )"		420772	0		||			
ANR	421082	UnaryOperationExpression	"! strcmp ( cmov , ""a"" )"		420772	0					
ANR	421083	UnaryOperator	!		420772	0					
ANR	421084	CallExpression	"strcmp ( cmov , ""a"" )"		420772	1					
ANR	421085	Callee	strcmp		420772	0					
ANR	421086	Identifier	strcmp		420772	0					
ANR	421087	ArgumentList	cmov		420772	1					
ANR	421088	Argument	cmov		420772	0					
ANR	421089	Identifier	cmov		420772	0					
ANR	421090	Argument	"""a"""		420772	1					
ANR	421091	PrimaryExpression	"""a"""		420772	0					
ANR	421092	UnaryOperationExpression	"! strcmp ( cmov , ""nbe"" )"		420772	1					
ANR	421093	UnaryOperator	!		420772	0					
ANR	421094	CallExpression	"strcmp ( cmov , ""nbe"" )"		420772	1					
ANR	421095	Callee	strcmp		420772	0					
ANR	421096	Identifier	strcmp		420772	0					
ANR	421097	ArgumentList	cmov		420772	1					
ANR	421098	Argument	cmov		420772	0					
ANR	421099	Identifier	cmov		420772	0					
ANR	421100	Argument	"""nbe"""		420772	1					
ANR	421101	PrimaryExpression	"""nbe"""		420772	0					
ANR	421102	CompoundStatement		36:35:951:951	420772	1					
ANR	421103	ExpressionStatement	data [ l ++ ] = 0x47	823:2:22016:22033	420772	0	True				
ANR	421104	AssignmentExpression	data [ l ++ ] = 0x47		420772	0		=			
ANR	421105	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421106	Identifier	data		420772	0					
ANR	421107	PostIncDecOperationExpression	l ++		420772	1					
ANR	421108	Identifier	l		420772	0					
ANR	421109	IncDec	++		420772	1					
ANR	421110	PrimaryExpression	0x47		420772	1					
ANR	421111	ElseStatement	else		420772	0					
ANR	421112	IfStatement	"if ( ! strcmp ( cmov , ""s"" ) )"		420772	0					
ANR	421113	Condition	"! strcmp ( cmov , ""s"" )"	824:12:22047:22065	420772	0	True				
ANR	421114	UnaryOperationExpression	"! strcmp ( cmov , ""s"" )"		420772	0					
ANR	421115	UnaryOperator	!		420772	0					
ANR	421116	CallExpression	"strcmp ( cmov , ""s"" )"		420772	1					
ANR	421117	Callee	strcmp		420772	0					
ANR	421118	Identifier	strcmp		420772	0					
ANR	421119	ArgumentList	cmov		420772	1					
ANR	421120	Argument	cmov		420772	0					
ANR	421121	Identifier	cmov		420772	0					
ANR	421122	Argument	"""s"""		420772	1					
ANR	421123	PrimaryExpression	"""s"""		420772	0					
ANR	421124	CompoundStatement		38:33:1007:1007	420772	1					
ANR	421125	ExpressionStatement	data [ l ++ ] = 0x48	825:2:22072:22089	420772	0	True				
ANR	421126	AssignmentExpression	data [ l ++ ] = 0x48		420772	0		=			
ANR	421127	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421128	Identifier	data		420772	0					
ANR	421129	PostIncDecOperationExpression	l ++		420772	1					
ANR	421130	Identifier	l		420772	0					
ANR	421131	IncDec	++		420772	1					
ANR	421132	PrimaryExpression	0x48		420772	1					
ANR	421133	ElseStatement	else		420772	0					
ANR	421134	IfStatement	"if ( ! strcmp ( cmov , ""ns"" ) )"		420772	0					
ANR	421135	Condition	"! strcmp ( cmov , ""ns"" )"	826:19:22110:22129	420772	0	True				
ANR	421136	UnaryOperationExpression	"! strcmp ( cmov , ""ns"" )"		420772	0					
ANR	421137	UnaryOperator	!		420772	0					
ANR	421138	CallExpression	"strcmp ( cmov , ""ns"" )"		420772	1					
ANR	421139	Callee	strcmp		420772	0					
ANR	421140	Identifier	strcmp		420772	0					
ANR	421141	ArgumentList	cmov		420772	1					
ANR	421142	Argument	cmov		420772	0					
ANR	421143	Identifier	cmov		420772	0					
ANR	421144	Argument	"""ns"""		420772	1					
ANR	421145	PrimaryExpression	"""ns"""		420772	0					
ANR	421146	CompoundStatement		40:41:1071:1071	420772	1					
ANR	421147	ExpressionStatement	data [ l ++ ] = 0x49	827:2:22136:22153	420772	0	True				
ANR	421148	AssignmentExpression	data [ l ++ ] = 0x49		420772	0		=			
ANR	421149	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421150	Identifier	data		420772	0					
ANR	421151	PostIncDecOperationExpression	l ++		420772	1					
ANR	421152	Identifier	l		420772	0					
ANR	421153	IncDec	++		420772	1					
ANR	421154	PrimaryExpression	0x49		420772	1					
ANR	421155	ElseStatement	else		420772	0					
ANR	421156	IfStatement	"if ( ! strcmp ( cmov , ""p"" ) || ! strcmp ( cmov , ""pe"" ) )"		420772	0					
ANR	421157	Condition	"! strcmp ( cmov , ""p"" ) || ! strcmp ( cmov , ""pe"" )"	828:19:22174:22228	420772	0	True				
ANR	421158	OrExpression	"! strcmp ( cmov , ""p"" ) || ! strcmp ( cmov , ""pe"" )"		420772	0		||			
ANR	421159	UnaryOperationExpression	"! strcmp ( cmov , ""p"" )"		420772	0					
ANR	421160	UnaryOperator	!		420772	0					
ANR	421161	CallExpression	"strcmp ( cmov , ""p"" )"		420772	1					
ANR	421162	Callee	strcmp		420772	0					
ANR	421163	Identifier	strcmp		420772	0					
ANR	421164	ArgumentList	cmov		420772	1					
ANR	421165	Argument	cmov		420772	0					
ANR	421166	Identifier	cmov		420772	0					
ANR	421167	Argument	"""p"""		420772	1					
ANR	421168	PrimaryExpression	"""p"""		420772	0					
ANR	421169	UnaryOperationExpression	"! strcmp ( cmov , ""pe"" )"		420772	1					
ANR	421170	UnaryOperator	!		420772	0					
ANR	421171	CallExpression	"strcmp ( cmov , ""pe"" )"		420772	1					
ANR	421172	Callee	strcmp		420772	0					
ANR	421173	Identifier	strcmp		420772	0					
ANR	421174	ArgumentList	cmov		420772	1					
ANR	421175	Argument	cmov		420772	0					
ANR	421176	Identifier	cmov		420772	0					
ANR	421177	Argument	"""pe"""		420772	1					
ANR	421178	PrimaryExpression	"""pe"""		420772	0					
ANR	421179	CompoundStatement		43:34:1170:1170	420772	1					
ANR	421180	ExpressionStatement	data [ l ++ ] = 0x4a	830:2:22235:22252	420772	0	True				
ANR	421181	AssignmentExpression	data [ l ++ ] = 0x4a		420772	0		=			
ANR	421182	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421183	Identifier	data		420772	0					
ANR	421184	PostIncDecOperationExpression	l ++		420772	1					
ANR	421185	Identifier	l		420772	0					
ANR	421186	IncDec	++		420772	1					
ANR	421187	PrimaryExpression	0x4a		420772	1					
ANR	421188	ElseStatement	else		420772	0					
ANR	421189	IfStatement	"if ( ! strcmp ( cmov , ""np"" ) || ! strcmp ( cmov , ""po"" ) )"		420772	0					
ANR	421190	Condition	"! strcmp ( cmov , ""np"" ) || ! strcmp ( cmov , ""po"" )"	831:19:22273:22328	420772	0	True				
ANR	421191	OrExpression	"! strcmp ( cmov , ""np"" ) || ! strcmp ( cmov , ""po"" )"		420772	0		||			
ANR	421192	UnaryOperationExpression	"! strcmp ( cmov , ""np"" )"		420772	0					
ANR	421193	UnaryOperator	!		420772	0					
ANR	421194	CallExpression	"strcmp ( cmov , ""np"" )"		420772	1					
ANR	421195	Callee	strcmp		420772	0					
ANR	421196	Identifier	strcmp		420772	0					
ANR	421197	ArgumentList	cmov		420772	1					
ANR	421198	Argument	cmov		420772	0					
ANR	421199	Identifier	cmov		420772	0					
ANR	421200	Argument	"""np"""		420772	1					
ANR	421201	PrimaryExpression	"""np"""		420772	0					
ANR	421202	UnaryOperationExpression	"! strcmp ( cmov , ""po"" )"		420772	1					
ANR	421203	UnaryOperator	!		420772	0					
ANR	421204	CallExpression	"strcmp ( cmov , ""po"" )"		420772	1					
ANR	421205	Callee	strcmp		420772	0					
ANR	421206	Identifier	strcmp		420772	0					
ANR	421207	ArgumentList	cmov		420772	1					
ANR	421208	Argument	cmov		420772	0					
ANR	421209	Identifier	cmov		420772	0					
ANR	421210	Argument	"""po"""		420772	1					
ANR	421211	PrimaryExpression	"""po"""		420772	0					
ANR	421212	CompoundStatement		46:34:1270:1270	420772	1					
ANR	421213	ExpressionStatement	data [ l ++ ] = 0x4b	833:2:22335:22352	420772	0	True				
ANR	421214	AssignmentExpression	data [ l ++ ] = 0x4b		420772	0		=			
ANR	421215	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421216	Identifier	data		420772	0					
ANR	421217	PostIncDecOperationExpression	l ++		420772	1					
ANR	421218	Identifier	l		420772	0					
ANR	421219	IncDec	++		420772	1					
ANR	421220	PrimaryExpression	0x4b		420772	1					
ANR	421221	ElseStatement	else		420772	0					
ANR	421222	IfStatement	"if ( ! strcmp ( cmov , ""l"" ) || ! strcmp ( cmov , ""nge"" ) )"		420772	0					
ANR	421223	Condition	"! strcmp ( cmov , ""l"" ) || ! strcmp ( cmov , ""nge"" )"	834:19:22373:22428	420772	0	True				
ANR	421224	OrExpression	"! strcmp ( cmov , ""l"" ) || ! strcmp ( cmov , ""nge"" )"		420772	0		||			
ANR	421225	UnaryOperationExpression	"! strcmp ( cmov , ""l"" )"		420772	0					
ANR	421226	UnaryOperator	!		420772	0					
ANR	421227	CallExpression	"strcmp ( cmov , ""l"" )"		420772	1					
ANR	421228	Callee	strcmp		420772	0					
ANR	421229	Identifier	strcmp		420772	0					
ANR	421230	ArgumentList	cmov		420772	1					
ANR	421231	Argument	cmov		420772	0					
ANR	421232	Identifier	cmov		420772	0					
ANR	421233	Argument	"""l"""		420772	1					
ANR	421234	PrimaryExpression	"""l"""		420772	0					
ANR	421235	UnaryOperationExpression	"! strcmp ( cmov , ""nge"" )"		420772	1					
ANR	421236	UnaryOperator	!		420772	0					
ANR	421237	CallExpression	"strcmp ( cmov , ""nge"" )"		420772	1					
ANR	421238	Callee	strcmp		420772	0					
ANR	421239	Identifier	strcmp		420772	0					
ANR	421240	ArgumentList	cmov		420772	1					
ANR	421241	Argument	cmov		420772	0					
ANR	421242	Identifier	cmov		420772	0					
ANR	421243	Argument	"""nge"""		420772	1					
ANR	421244	PrimaryExpression	"""nge"""		420772	0					
ANR	421245	CompoundStatement		49:35:1370:1370	420772	1					
ANR	421246	ExpressionStatement	data [ l ++ ] = 0x4c	836:2:22435:22452	420772	0	True				
ANR	421247	AssignmentExpression	data [ l ++ ] = 0x4c		420772	0		=			
ANR	421248	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421249	Identifier	data		420772	0					
ANR	421250	PostIncDecOperationExpression	l ++		420772	1					
ANR	421251	Identifier	l		420772	0					
ANR	421252	IncDec	++		420772	1					
ANR	421253	PrimaryExpression	0x4c		420772	1					
ANR	421254	ElseStatement	else		420772	0					
ANR	421255	IfStatement	"if ( ! strcmp ( cmov , ""ge"" ) || ! strcmp ( cmov , ""nl"" ) )"		420772	0					
ANR	421256	Condition	"! strcmp ( cmov , ""ge"" ) || ! strcmp ( cmov , ""nl"" )"	837:19:22473:22528	420772	0	True				
ANR	421257	OrExpression	"! strcmp ( cmov , ""ge"" ) || ! strcmp ( cmov , ""nl"" )"		420772	0		||			
ANR	421258	UnaryOperationExpression	"! strcmp ( cmov , ""ge"" )"		420772	0					
ANR	421259	UnaryOperator	!		420772	0					
ANR	421260	CallExpression	"strcmp ( cmov , ""ge"" )"		420772	1					
ANR	421261	Callee	strcmp		420772	0					
ANR	421262	Identifier	strcmp		420772	0					
ANR	421263	ArgumentList	cmov		420772	1					
ANR	421264	Argument	cmov		420772	0					
ANR	421265	Identifier	cmov		420772	0					
ANR	421266	Argument	"""ge"""		420772	1					
ANR	421267	PrimaryExpression	"""ge"""		420772	0					
ANR	421268	UnaryOperationExpression	"! strcmp ( cmov , ""nl"" )"		420772	1					
ANR	421269	UnaryOperator	!		420772	0					
ANR	421270	CallExpression	"strcmp ( cmov , ""nl"" )"		420772	1					
ANR	421271	Callee	strcmp		420772	0					
ANR	421272	Identifier	strcmp		420772	0					
ANR	421273	ArgumentList	cmov		420772	1					
ANR	421274	Argument	cmov		420772	0					
ANR	421275	Identifier	cmov		420772	0					
ANR	421276	Argument	"""nl"""		420772	1					
ANR	421277	PrimaryExpression	"""nl"""		420772	0					
ANR	421278	CompoundStatement		52:34:1470:1470	420772	1					
ANR	421279	ExpressionStatement	data [ l ++ ] = 0x4d	839:2:22535:22552	420772	0	True				
ANR	421280	AssignmentExpression	data [ l ++ ] = 0x4d		420772	0		=			
ANR	421281	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421282	Identifier	data		420772	0					
ANR	421283	PostIncDecOperationExpression	l ++		420772	1					
ANR	421284	Identifier	l		420772	0					
ANR	421285	IncDec	++		420772	1					
ANR	421286	PrimaryExpression	0x4d		420772	1					
ANR	421287	ElseStatement	else		420772	0					
ANR	421288	IfStatement	"if ( ! strcmp ( cmov , ""le"" ) || ! strcmp ( cmov , ""ng"" ) )"		420772	0					
ANR	421289	Condition	"! strcmp ( cmov , ""le"" ) || ! strcmp ( cmov , ""ng"" )"	840:19:22573:22628	420772	0	True				
ANR	421290	OrExpression	"! strcmp ( cmov , ""le"" ) || ! strcmp ( cmov , ""ng"" )"		420772	0		||			
ANR	421291	UnaryOperationExpression	"! strcmp ( cmov , ""le"" )"		420772	0					
ANR	421292	UnaryOperator	!		420772	0					
ANR	421293	CallExpression	"strcmp ( cmov , ""le"" )"		420772	1					
ANR	421294	Callee	strcmp		420772	0					
ANR	421295	Identifier	strcmp		420772	0					
ANR	421296	ArgumentList	cmov		420772	1					
ANR	421297	Argument	cmov		420772	0					
ANR	421298	Identifier	cmov		420772	0					
ANR	421299	Argument	"""le"""		420772	1					
ANR	421300	PrimaryExpression	"""le"""		420772	0					
ANR	421301	UnaryOperationExpression	"! strcmp ( cmov , ""ng"" )"		420772	1					
ANR	421302	UnaryOperator	!		420772	0					
ANR	421303	CallExpression	"strcmp ( cmov , ""ng"" )"		420772	1					
ANR	421304	Callee	strcmp		420772	0					
ANR	421305	Identifier	strcmp		420772	0					
ANR	421306	ArgumentList	cmov		420772	1					
ANR	421307	Argument	cmov		420772	0					
ANR	421308	Identifier	cmov		420772	0					
ANR	421309	Argument	"""ng"""		420772	1					
ANR	421310	PrimaryExpression	"""ng"""		420772	0					
ANR	421311	CompoundStatement		55:34:1570:1570	420772	1					
ANR	421312	ExpressionStatement	data [ l ++ ] = 0x4e	842:2:22635:22652	420772	0	True				
ANR	421313	AssignmentExpression	data [ l ++ ] = 0x4e		420772	0		=			
ANR	421314	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421315	Identifier	data		420772	0					
ANR	421316	PostIncDecOperationExpression	l ++		420772	1					
ANR	421317	Identifier	l		420772	0					
ANR	421318	IncDec	++		420772	1					
ANR	421319	PrimaryExpression	0x4e		420772	1					
ANR	421320	ElseStatement	else		420772	0					
ANR	421321	IfStatement	"if ( ! strcmp ( cmov , ""g"" ) || ! strcmp ( cmov , ""nle"" ) )"		420772	0					
ANR	421322	Condition	"! strcmp ( cmov , ""g"" ) || ! strcmp ( cmov , ""nle"" )"	843:19:22673:22728	420772	0	True				
ANR	421323	OrExpression	"! strcmp ( cmov , ""g"" ) || ! strcmp ( cmov , ""nle"" )"		420772	0		||			
ANR	421324	UnaryOperationExpression	"! strcmp ( cmov , ""g"" )"		420772	0					
ANR	421325	UnaryOperator	!		420772	0					
ANR	421326	CallExpression	"strcmp ( cmov , ""g"" )"		420772	1					
ANR	421327	Callee	strcmp		420772	0					
ANR	421328	Identifier	strcmp		420772	0					
ANR	421329	ArgumentList	cmov		420772	1					
ANR	421330	Argument	cmov		420772	0					
ANR	421331	Identifier	cmov		420772	0					
ANR	421332	Argument	"""g"""		420772	1					
ANR	421333	PrimaryExpression	"""g"""		420772	0					
ANR	421334	UnaryOperationExpression	"! strcmp ( cmov , ""nle"" )"		420772	1					
ANR	421335	UnaryOperator	!		420772	0					
ANR	421336	CallExpression	"strcmp ( cmov , ""nle"" )"		420772	1					
ANR	421337	Callee	strcmp		420772	0					
ANR	421338	Identifier	strcmp		420772	0					
ANR	421339	ArgumentList	cmov		420772	1					
ANR	421340	Argument	cmov		420772	0					
ANR	421341	Identifier	cmov		420772	0					
ANR	421342	Argument	"""nle"""		420772	1					
ANR	421343	PrimaryExpression	"""nle"""		420772	0					
ANR	421344	CompoundStatement		58:35:1670:1670	420772	1					
ANR	421345	ExpressionStatement	data [ l ++ ] = 0x4f	845:2:22735:22752	420772	0	True				
ANR	421346	AssignmentExpression	data [ l ++ ] = 0x4f		420772	0		=			
ANR	421347	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421348	Identifier	data		420772	0					
ANR	421349	PostIncDecOperationExpression	l ++		420772	1					
ANR	421350	Identifier	l		420772	0					
ANR	421351	IncDec	++		420772	1					
ANR	421352	PrimaryExpression	0x4f		420772	1					
ANR	421353	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL )		420772	8					
ANR	421354	Condition	op -> operands [ 0 ] . type & OT_REGALL	848:5:22770:22801	420772	0	True				
ANR	421355	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		420772	0		&			
ANR	421356	MemberAccess	op -> operands [ 0 ] . type		420772	0					
ANR	421357	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421358	PtrMemberAccess	op -> operands		420772	0					
ANR	421359	Identifier	op		420772	0					
ANR	421360	Identifier	operands		420772	1					
ANR	421361	PrimaryExpression	0		420772	1					
ANR	421362	Identifier	type		420772	1					
ANR	421363	Identifier	OT_REGALL		420772	1					
ANR	421364	CompoundStatement		62:39:1743:1743	420772	1					
ANR	421365	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		420772	0					
ANR	421366	Condition	op -> operands [ 1 ] . type & OT_MEMORY	849:6:22812:22843	420772	0	True				
ANR	421367	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		420772	0		&			
ANR	421368	MemberAccess	op -> operands [ 1 ] . type		420772	0					
ANR	421369	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421370	PtrMemberAccess	op -> operands		420772	0					
ANR	421371	Identifier	op		420772	0					
ANR	421372	Identifier	operands		420772	1					
ANR	421373	PrimaryExpression	1		420772	1					
ANR	421374	Identifier	type		420772	1					
ANR	421375	Identifier	OT_MEMORY		420772	1					
ANR	421376	CompoundStatement		63:40:1785:1785	420772	1					
ANR	421377	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] > 1 )		420772	0					
ANR	421378	Condition	op -> operands [ 1 ] . scale [ 0 ] > 1	850:7:22855:22882	420772	0	True				
ANR	421379	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] > 1		420772	0		>			
ANR	421380	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421381	MemberAccess	op -> operands [ 1 ] . scale		420772	0					
ANR	421382	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421383	PtrMemberAccess	op -> operands		420772	0					
ANR	421384	Identifier	op		420772	0					
ANR	421385	Identifier	operands		420772	1					
ANR	421386	PrimaryExpression	1		420772	1					
ANR	421387	Identifier	scale		420772	1					
ANR	421388	PrimaryExpression	0		420772	1					
ANR	421389	PrimaryExpression	1		420772	1					
ANR	421390	CompoundStatement		64:37:1824:1824	420772	1					
ANR	421391	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		420772	0					
ANR	421392	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	851:8:22895:22935	420772	0	True				
ANR	421393	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		420772	0		!=			
ANR	421394	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		420772	0					
ANR	421395	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421396	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421397	PtrMemberAccess	op -> operands		420772	0					
ANR	421398	Identifier	op		420772	0					
ANR	421399	Identifier	operands		420772	1					
ANR	421400	PrimaryExpression	1		420772	1					
ANR	421401	Identifier	regs		420772	1					
ANR	421402	PrimaryExpression	1		420772	1					
ANR	421403	Identifier	X86R_UNDEFINED		420772	1					
ANR	421404	CompoundStatement		65:51:1877:1877	420772	1					
ANR	421405	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	852:5:22945:22985	420772	0	True				
ANR	421406	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		420772	0		=			
ANR	421407	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421408	Identifier	data		420772	0					
ANR	421409	PostIncDecOperationExpression	l ++		420772	1					
ANR	421410	Identifier	l		420772	0					
ANR	421411	IncDec	++		420772	1					
ANR	421412	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		420772	1		|			
ANR	421413	ShiftExpression	op -> operands [ 0 ] . reg << 3		420772	0		<<			
ANR	421414	MemberAccess	op -> operands [ 0 ] . reg		420772	0					
ANR	421415	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421416	PtrMemberAccess	op -> operands		420772	0					
ANR	421417	Identifier	op		420772	0					
ANR	421418	Identifier	operands		420772	1					
ANR	421419	PrimaryExpression	0		420772	1					
ANR	421420	Identifier	reg		420772	1					
ANR	421421	PrimaryExpression	3		420772	1					
ANR	421422	PrimaryExpression	4		420772	1					
ANR	421423	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]	853:5:22992:23219	420772	1	True				
ANR	421424	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		420772	0		=			
ANR	421425	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421426	Identifier	data		420772	0					
ANR	421427	PostIncDecOperationExpression	l ++		420772	1					
ANR	421428	Identifier	l		420772	0					
ANR	421429	IncDec	++		420772	1					
ANR	421430	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		420772	1		|			
ANR	421431	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		420772	0		<<			
ANR	421432	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		420772	0					
ANR	421433	Callee	getsib		420772	0					
ANR	421434	Identifier	getsib		420772	0					
ANR	421435	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		420772	1					
ANR	421436	Argument	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421437	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421438	MemberAccess	op -> operands [ 1 ] . scale		420772	0					
ANR	421439	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421440	PtrMemberAccess	op -> operands		420772	0					
ANR	421441	Identifier	op		420772	0					
ANR	421442	Identifier	operands		420772	1					
ANR	421443	PrimaryExpression	1		420772	1					
ANR	421444	Identifier	scale		420772	1					
ANR	421445	PrimaryExpression	0		420772	1					
ANR	421446	PrimaryExpression	6		420772	1					
ANR	421447	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		420772	1		|			
ANR	421448	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		420772	0		<<			
ANR	421449	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	0					
ANR	421450	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421451	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421452	PtrMemberAccess	op -> operands		420772	0					
ANR	421453	Identifier	op		420772	0					
ANR	421454	Identifier	operands		420772	1					
ANR	421455	PrimaryExpression	1		420772	1					
ANR	421456	Identifier	regs		420772	1					
ANR	421457	PrimaryExpression	0		420772	1					
ANR	421458	PrimaryExpression	3		420772	1					
ANR	421459	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		420772	1					
ANR	421460	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421461	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421462	PtrMemberAccess	op -> operands		420772	0					
ANR	421463	Identifier	op		420772	0					
ANR	421464	Identifier	operands		420772	1					
ANR	421465	PrimaryExpression	1		420772	1					
ANR	421466	Identifier	regs		420772	1					
ANR	421467	PrimaryExpression	1		420772	1					
ANR	421468	ReturnStatement	return l ;	856:5:23226:23234	420772	2	True				
ANR	421469	Identifier	l		420772	0					
ANR	421470	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	858:4:23246:23307	420772	1	True				
ANR	421471	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		420772	0		=			
ANR	421472	Identifier	offset		420772	0					
ANR	421473	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		420772	1		*			
ANR	421474	MemberAccess	op -> operands [ 1 ] . offset		420772	0					
ANR	421475	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421476	PtrMemberAccess	op -> operands		420772	0					
ANR	421477	Identifier	op		420772	0					
ANR	421478	Identifier	operands		420772	1					
ANR	421479	PrimaryExpression	1		420772	1					
ANR	421480	Identifier	offset		420772	1					
ANR	421481	MemberAccess	op -> operands [ 1 ] . offset_sign		420772	1					
ANR	421482	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421483	PtrMemberAccess	op -> operands		420772	0					
ANR	421484	Identifier	op		420772	0					
ANR	421485	Identifier	operands		420772	1					
ANR	421486	PrimaryExpression	1		420772	1					
ANR	421487	Identifier	offset_sign		420772	1					
ANR	421488	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] == 2 && offset )		420772	2					
ANR	421489	Condition	op -> operands [ 1 ] . scale [ 0 ] == 2 && offset	860:8:23318:23356	420772	0	True				
ANR	421490	AndExpression	op -> operands [ 1 ] . scale [ 0 ] == 2 && offset		420772	0		&&			
ANR	421491	EqualityExpression	op -> operands [ 1 ] . scale [ 0 ] == 2		420772	0		==			
ANR	421492	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421493	MemberAccess	op -> operands [ 1 ] . scale		420772	0					
ANR	421494	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421495	PtrMemberAccess	op -> operands		420772	0					
ANR	421496	Identifier	op		420772	0					
ANR	421497	Identifier	operands		420772	1					
ANR	421498	PrimaryExpression	1		420772	1					
ANR	421499	Identifier	scale		420772	1					
ANR	421500	PrimaryExpression	0		420772	1					
ANR	421501	PrimaryExpression	2		420772	1					
ANR	421502	Identifier	offset		420772	1					
ANR	421503	CompoundStatement		74:49:2298:2298	420772	1					
ANR	421504	ExpressionStatement	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg << 3 | 4	861:5:23366:23413	420772	0	True				
ANR	421505	AssignmentExpression	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg << 3 | 4		420772	0		=			
ANR	421506	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421507	Identifier	data		420772	0					
ANR	421508	PostIncDecOperationExpression	l ++		420772	1					
ANR	421509	Identifier	l		420772	0					
ANR	421510	IncDec	++		420772	1					
ANR	421511	InclusiveOrExpression	0x40 | op -> operands [ 0 ] . reg << 3 | 4		420772	1		|			
ANR	421512	PrimaryExpression	0x40		420772	0					
ANR	421513	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		420772	1		|			
ANR	421514	ShiftExpression	op -> operands [ 0 ] . reg << 3		420772	0		<<			
ANR	421515	MemberAccess	op -> operands [ 0 ] . reg		420772	0					
ANR	421516	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421517	PtrMemberAccess	op -> operands		420772	0					
ANR	421518	Identifier	op		420772	0					
ANR	421519	Identifier	operands		420772	1					
ANR	421520	PrimaryExpression	0		420772	1					
ANR	421521	Identifier	reg		420772	1					
ANR	421522	PrimaryExpression	3		420772	1					
ANR	421523	PrimaryExpression	4		420772	1					
ANR	421524	ElseStatement	else		420772	0					
ANR	421525	CompoundStatement		76:11:2376:2376	420772	0					
ANR	421526	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	863:5:23444:23484	420772	0	True				
ANR	421527	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		420772	0		=			
ANR	421528	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421529	Identifier	data		420772	0					
ANR	421530	PostIncDecOperationExpression	l ++		420772	1					
ANR	421531	Identifier	l		420772	0					
ANR	421532	IncDec	++		420772	1					
ANR	421533	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		420772	1		|			
ANR	421534	ShiftExpression	op -> operands [ 0 ] . reg << 3		420772	0		<<			
ANR	421535	MemberAccess	op -> operands [ 0 ] . reg		420772	0					
ANR	421536	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421537	PtrMemberAccess	op -> operands		420772	0					
ANR	421538	Identifier	op		420772	0					
ANR	421539	Identifier	operands		420772	1					
ANR	421540	PrimaryExpression	0		420772	1					
ANR	421541	Identifier	reg		420772	1					
ANR	421542	PrimaryExpression	3		420772	1					
ANR	421543	PrimaryExpression	4		420772	1					
ANR	421544	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] == 2 )		420772	3					
ANR	421545	Condition	op -> operands [ 1 ] . scale [ 0 ] == 2	867:8:23513:23541	420772	0	True				
ANR	421546	EqualityExpression	op -> operands [ 1 ] . scale [ 0 ] == 2		420772	0		==			
ANR	421547	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421548	MemberAccess	op -> operands [ 1 ] . scale		420772	0					
ANR	421549	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421550	PtrMemberAccess	op -> operands		420772	0					
ANR	421551	Identifier	op		420772	0					
ANR	421552	Identifier	operands		420772	1					
ANR	421553	PrimaryExpression	1		420772	1					
ANR	421554	Identifier	scale		420772	1					
ANR	421555	PrimaryExpression	0		420772	1					
ANR	421556	PrimaryExpression	2		420772	1					
ANR	421557	CompoundStatement		81:39:2483:2483	420772	1					
ANR	421558	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	868:5:23551:23617	420772	0	True				
ANR	421559	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	0		=			
ANR	421560	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421561	Identifier	data		420772	0					
ANR	421562	PostIncDecOperationExpression	l ++		420772	1					
ANR	421563	Identifier	l		420772	0					
ANR	421564	IncDec	++		420772	1					
ANR	421565	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	1		|			
ANR	421566	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		420772	0		<<			
ANR	421567	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	0					
ANR	421568	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421569	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421570	PtrMemberAccess	op -> operands		420772	0					
ANR	421571	Identifier	op		420772	0					
ANR	421572	Identifier	operands		420772	1					
ANR	421573	PrimaryExpression	1		420772	1					
ANR	421574	Identifier	regs		420772	1					
ANR	421575	PrimaryExpression	0		420772	1					
ANR	421576	PrimaryExpression	3		420772	1					
ANR	421577	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	1					
ANR	421578	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421579	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421580	PtrMemberAccess	op -> operands		420772	0					
ANR	421581	Identifier	op		420772	0					
ANR	421582	Identifier	operands		420772	1					
ANR	421583	PrimaryExpression	1		420772	1					
ANR	421584	Identifier	regs		420772	1					
ANR	421585	PrimaryExpression	0		420772	1					
ANR	421586	ElseStatement	else		420772	0					
ANR	421587	CompoundStatement		84:11:2570:2570	420772	0					
ANR	421588	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5	871:5:23638:23783	420772	0	True				
ANR	421589	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		420772	0		=			
ANR	421590	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421591	Identifier	data		420772	0					
ANR	421592	PostIncDecOperationExpression	l ++		420772	1					
ANR	421593	Identifier	l		420772	0					
ANR	421594	IncDec	++		420772	1					
ANR	421595	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		420772	1		|			
ANR	421596	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		420772	0		<<			
ANR	421597	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		420772	0					
ANR	421598	Callee	getsib		420772	0					
ANR	421599	Identifier	getsib		420772	0					
ANR	421600	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		420772	1					
ANR	421601	Argument	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421602	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		420772	0					
ANR	421603	MemberAccess	op -> operands [ 1 ] . scale		420772	0					
ANR	421604	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421605	PtrMemberAccess	op -> operands		420772	0					
ANR	421606	Identifier	op		420772	0					
ANR	421607	Identifier	operands		420772	1					
ANR	421608	PrimaryExpression	1		420772	1					
ANR	421609	Identifier	scale		420772	1					
ANR	421610	PrimaryExpression	0		420772	1					
ANR	421611	PrimaryExpression	6		420772	1					
ANR	421612	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		420772	1		|			
ANR	421613	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		420772	0		<<			
ANR	421614	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	0					
ANR	421615	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421616	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421617	PtrMemberAccess	op -> operands		420772	0					
ANR	421618	Identifier	op		420772	0					
ANR	421619	Identifier	operands		420772	1					
ANR	421620	PrimaryExpression	1		420772	1					
ANR	421621	Identifier	regs		420772	1					
ANR	421622	PrimaryExpression	0		420772	1					
ANR	421623	PrimaryExpression	3		420772	1					
ANR	421624	PrimaryExpression	5		420772	1					
ANR	421625	IfStatement	if ( offset )		420772	4					
ANR	421626	Condition	offset	875:8:23800:23805	420772	0	True				
ANR	421627	Identifier	offset		420772	0					
ANR	421628	CompoundStatement		89:16:2747:2747	420772	1					
ANR	421629	ExpressionStatement	data [ l ++ ] = offset	876:5:23815:23833	420772	0	True				
ANR	421630	AssignmentExpression	data [ l ++ ] = offset		420772	0		=			
ANR	421631	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421632	Identifier	data		420772	0					
ANR	421633	PostIncDecOperationExpression	l ++		420772	1					
ANR	421634	Identifier	l		420772	0					
ANR	421635	IncDec	++		420772	1					
ANR	421636	Identifier	offset		420772	1					
ANR	421637	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		420772	1					
ANR	421638	Condition	offset < ST8_MIN || offset > ST8_MAX	877:9:23844:23879	420772	0	True				
ANR	421639	OrExpression	offset < ST8_MIN || offset > ST8_MAX		420772	0		||			
ANR	421640	RelationalExpression	offset < ST8_MIN		420772	0		<			
ANR	421641	Identifier	offset		420772	0					
ANR	421642	Identifier	ST8_MIN		420772	1					
ANR	421643	RelationalExpression	offset > ST8_MAX		420772	1		>			
ANR	421644	Identifier	offset		420772	0					
ANR	421645	Identifier	ST8_MAX		420772	1					
ANR	421646	CompoundStatement		91:47:2821:2821	420772	1					
ANR	421647	ExpressionStatement	data [ l ++ ] = offset >> 8	878:6:23890:23913	420772	0	True				
ANR	421648	AssignmentExpression	data [ l ++ ] = offset >> 8		420772	0		=			
ANR	421649	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421650	Identifier	data		420772	0					
ANR	421651	PostIncDecOperationExpression	l ++		420772	1					
ANR	421652	Identifier	l		420772	0					
ANR	421653	IncDec	++		420772	1					
ANR	421654	ShiftExpression	offset >> 8		420772	1		>>			
ANR	421655	Identifier	offset		420772	0					
ANR	421656	PrimaryExpression	8		420772	1					
ANR	421657	ExpressionStatement	data [ l ++ ] = offset >> 16	879:6:23921:23945	420772	1	True				
ANR	421658	AssignmentExpression	data [ l ++ ] = offset >> 16		420772	0		=			
ANR	421659	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421660	Identifier	data		420772	0					
ANR	421661	PostIncDecOperationExpression	l ++		420772	1					
ANR	421662	Identifier	l		420772	0					
ANR	421663	IncDec	++		420772	1					
ANR	421664	ShiftExpression	offset >> 16		420772	1		>>			
ANR	421665	Identifier	offset		420772	0					
ANR	421666	PrimaryExpression	16		420772	1					
ANR	421667	ExpressionStatement	data [ l ++ ] = offset >> 24	880:6:23953:23977	420772	2	True				
ANR	421668	AssignmentExpression	data [ l ++ ] = offset >> 24		420772	0		=			
ANR	421669	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421670	Identifier	data		420772	0					
ANR	421671	PostIncDecOperationExpression	l ++		420772	1					
ANR	421672	Identifier	l		420772	0					
ANR	421673	IncDec	++		420772	1					
ANR	421674	ShiftExpression	offset >> 24		420772	1		>>			
ANR	421675	Identifier	offset		420772	0					
ANR	421676	PrimaryExpression	24		420772	1					
ANR	421677	ReturnStatement	return l ;	883:4:23996:24004	420772	5	True				
ANR	421678	Identifier	l		420772	0					
ANR	421679	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		420772	1					
ANR	421680	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	885:7:24018:24058	420772	0	True				
ANR	421681	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		420772	0		!=			
ANR	421682	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		420772	0					
ANR	421683	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421684	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421685	PtrMemberAccess	op -> operands		420772	0					
ANR	421686	Identifier	op		420772	0					
ANR	421687	Identifier	operands		420772	1					
ANR	421688	PrimaryExpression	1		420772	1					
ANR	421689	Identifier	regs		420772	1					
ANR	421690	PrimaryExpression	1		420772	1					
ANR	421691	Identifier	X86R_UNDEFINED		420772	1					
ANR	421692	CompoundStatement		99:50:3000:3000	420772	1					
ANR	421693	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	886:4:24067:24107	420772	0	True				
ANR	421694	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		420772	0		=			
ANR	421695	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421696	Identifier	data		420772	0					
ANR	421697	PostIncDecOperationExpression	l ++		420772	1					
ANR	421698	Identifier	l		420772	0					
ANR	421699	IncDec	++		420772	1					
ANR	421700	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		420772	1		|			
ANR	421701	ShiftExpression	op -> operands [ 0 ] . reg << 3		420772	0		<<			
ANR	421702	MemberAccess	op -> operands [ 0 ] . reg		420772	0					
ANR	421703	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421704	PtrMemberAccess	op -> operands		420772	0					
ANR	421705	Identifier	op		420772	0					
ANR	421706	Identifier	operands		420772	1					
ANR	421707	PrimaryExpression	0		420772	1					
ANR	421708	Identifier	reg		420772	1					
ANR	421709	PrimaryExpression	3		420772	1					
ANR	421710	PrimaryExpression	4		420772	1					
ANR	421711	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	887:4:24113:24179	420772	1	True				
ANR	421712	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	0		=			
ANR	421713	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421714	Identifier	data		420772	0					
ANR	421715	PostIncDecOperationExpression	l ++		420772	1					
ANR	421716	Identifier	l		420772	0					
ANR	421717	IncDec	++		420772	1					
ANR	421718	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	1		|			
ANR	421719	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		420772	0		<<			
ANR	421720	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		420772	0					
ANR	421721	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421722	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421723	PtrMemberAccess	op -> operands		420772	0					
ANR	421724	Identifier	op		420772	0					
ANR	421725	Identifier	operands		420772	1					
ANR	421726	PrimaryExpression	1		420772	1					
ANR	421727	Identifier	regs		420772	1					
ANR	421728	PrimaryExpression	1		420772	1					
ANR	421729	PrimaryExpression	3		420772	1					
ANR	421730	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	1					
ANR	421731	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421732	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421733	PtrMemberAccess	op -> operands		420772	0					
ANR	421734	Identifier	op		420772	0					
ANR	421735	Identifier	operands		420772	1					
ANR	421736	PrimaryExpression	1		420772	1					
ANR	421737	Identifier	regs		420772	1					
ANR	421738	PrimaryExpression	0		420772	1					
ANR	421739	ReturnStatement	return l ;	888:4:24185:24193	420772	2	True				
ANR	421740	Identifier	l		420772	0					
ANR	421741	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	891:3:24204:24265	420772	2	True				
ANR	421742	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		420772	0		=			
ANR	421743	Identifier	offset		420772	0					
ANR	421744	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		420772	1		*			
ANR	421745	MemberAccess	op -> operands [ 1 ] . offset		420772	0					
ANR	421746	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421747	PtrMemberAccess	op -> operands		420772	0					
ANR	421748	Identifier	op		420772	0					
ANR	421749	Identifier	operands		420772	1					
ANR	421750	PrimaryExpression	1		420772	1					
ANR	421751	Identifier	offset		420772	1					
ANR	421752	MemberAccess	op -> operands [ 1 ] . offset_sign		420772	1					
ANR	421753	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421754	PtrMemberAccess	op -> operands		420772	0					
ANR	421755	Identifier	op		420772	0					
ANR	421756	Identifier	operands		420772	1					
ANR	421757	PrimaryExpression	1		420772	1					
ANR	421758	Identifier	offset_sign		420772	1					
ANR	421759	IfStatement	if ( op -> operands [ 1 ] . offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		420772	3					
ANR	421760	Condition	op -> operands [ 1 ] . offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	892:7:24274:24334	420772	0	True				
ANR	421761	OrExpression	op -> operands [ 1 ] . offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		420772	0		||			
ANR	421762	MemberAccess	op -> operands [ 1 ] . offset		420772	0					
ANR	421763	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421764	PtrMemberAccess	op -> operands		420772	0					
ANR	421765	Identifier	op		420772	0					
ANR	421766	Identifier	operands		420772	1					
ANR	421767	PrimaryExpression	1		420772	1					
ANR	421768	Identifier	offset		420772	1					
ANR	421769	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		420772	1		==			
ANR	421770	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	0					
ANR	421771	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421772	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421773	PtrMemberAccess	op -> operands		420772	0					
ANR	421774	Identifier	op		420772	0					
ANR	421775	Identifier	operands		420772	1					
ANR	421776	PrimaryExpression	1		420772	1					
ANR	421777	Identifier	regs		420772	1					
ANR	421778	PrimaryExpression	0		420772	1					
ANR	421779	Identifier	X86R_EBP		420772	1					
ANR	421780	CompoundStatement		106:70:3276:3276	420772	1					
ANR	421781	ExpressionStatement	mod_byte = 1	893:4:24343:24355	420772	0	True				
ANR	421782	AssignmentExpression	mod_byte = 1		420772	0		=			
ANR	421783	Identifier	mod_byte		420772	0					
ANR	421784	PrimaryExpression	1		420772	1					
ANR	421785	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		420772	4					
ANR	421786	Condition	offset < ST8_MIN || offset > ST8_MAX	895:7:24369:24404	420772	0	True				
ANR	421787	OrExpression	offset < ST8_MIN || offset > ST8_MAX		420772	0		||			
ANR	421788	RelationalExpression	offset < ST8_MIN		420772	0		<			
ANR	421789	Identifier	offset		420772	0					
ANR	421790	Identifier	ST8_MIN		420772	1					
ANR	421791	RelationalExpression	offset > ST8_MAX		420772	1		>			
ANR	421792	Identifier	offset		420772	0					
ANR	421793	Identifier	ST8_MAX		420772	1					
ANR	421794	CompoundStatement		109:45:3346:3346	420772	1					
ANR	421795	ExpressionStatement	mod_byte = 2	896:4:24413:24425	420772	0	True				
ANR	421796	AssignmentExpression	mod_byte = 2		420772	0		=			
ANR	421797	Identifier	mod_byte		420772	0					
ANR	421798	PrimaryExpression	2		420772	1					
ANR	421799	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	899:3:24436:24514	420772	5	True				
ANR	421800	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	0		=			
ANR	421801	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421802	Identifier	data		420772	0					
ANR	421803	PostIncDecOperationExpression	l ++		420772	1					
ANR	421804	Identifier	l		420772	0					
ANR	421805	IncDec	++		420772	1					
ANR	421806	InclusiveOrExpression	mod_byte << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	1		|			
ANR	421807	ShiftExpression	mod_byte << 6		420772	0		<<			
ANR	421808	Identifier	mod_byte		420772	0					
ANR	421809	PrimaryExpression	6		420772	1					
ANR	421810	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		420772	1		|			
ANR	421811	ShiftExpression	op -> operands [ 0 ] . reg << 3		420772	0		<<			
ANR	421812	MemberAccess	op -> operands [ 0 ] . reg		420772	0					
ANR	421813	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421814	PtrMemberAccess	op -> operands		420772	0					
ANR	421815	Identifier	op		420772	0					
ANR	421816	Identifier	operands		420772	1					
ANR	421817	PrimaryExpression	0		420772	1					
ANR	421818	Identifier	reg		420772	1					
ANR	421819	PrimaryExpression	3		420772	1					
ANR	421820	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		420772	1					
ANR	421821	MemberAccess	op -> operands [ 1 ] . regs		420772	0					
ANR	421822	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421823	PtrMemberAccess	op -> operands		420772	0					
ANR	421824	Identifier	op		420772	0					
ANR	421825	Identifier	operands		420772	1					
ANR	421826	PrimaryExpression	1		420772	1					
ANR	421827	Identifier	regs		420772	1					
ANR	421828	PrimaryExpression	0		420772	1					
ANR	421829	IfStatement	if ( mod_byte )		420772	6					
ANR	421830	Condition	mod_byte	901:7:24524:24531	420772	0	True				
ANR	421831	Identifier	mod_byte		420772	0					
ANR	421832	CompoundStatement		115:17:3473:3473	420772	1					
ANR	421833	ExpressionStatement	data [ l ++ ] = offset	902:4:24540:24558	420772	0	True				
ANR	421834	AssignmentExpression	data [ l ++ ] = offset		420772	0		=			
ANR	421835	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421836	Identifier	data		420772	0					
ANR	421837	PostIncDecOperationExpression	l ++		420772	1					
ANR	421838	Identifier	l		420772	0					
ANR	421839	IncDec	++		420772	1					
ANR	421840	Identifier	offset		420772	1					
ANR	421841	IfStatement	if ( mod_byte == 2 )		420772	1					
ANR	421842	Condition	mod_byte == 2	903:8:24568:24580	420772	0	True				
ANR	421843	EqualityExpression	mod_byte == 2		420772	0		==			
ANR	421844	Identifier	mod_byte		420772	0					
ANR	421845	PrimaryExpression	2		420772	1					
ANR	421846	CompoundStatement		117:23:3522:3522	420772	1					
ANR	421847	ExpressionStatement	data [ l ++ ] = offset >> 8	904:5:24590:24613	420772	0	True				
ANR	421848	AssignmentExpression	data [ l ++ ] = offset >> 8		420772	0		=			
ANR	421849	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421850	Identifier	data		420772	0					
ANR	421851	PostIncDecOperationExpression	l ++		420772	1					
ANR	421852	Identifier	l		420772	0					
ANR	421853	IncDec	++		420772	1					
ANR	421854	ShiftExpression	offset >> 8		420772	1		>>			
ANR	421855	Identifier	offset		420772	0					
ANR	421856	PrimaryExpression	8		420772	1					
ANR	421857	ExpressionStatement	data [ l ++ ] = offset >> 16	905:5:24620:24644	420772	1	True				
ANR	421858	AssignmentExpression	data [ l ++ ] = offset >> 16		420772	0		=			
ANR	421859	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421860	Identifier	data		420772	0					
ANR	421861	PostIncDecOperationExpression	l ++		420772	1					
ANR	421862	Identifier	l		420772	0					
ANR	421863	IncDec	++		420772	1					
ANR	421864	ShiftExpression	offset >> 16		420772	1		>>			
ANR	421865	Identifier	offset		420772	0					
ANR	421866	PrimaryExpression	16		420772	1					
ANR	421867	ExpressionStatement	data [ l ++ ] = offset >> 24	906:5:24651:24675	420772	2	True				
ANR	421868	AssignmentExpression	data [ l ++ ] = offset >> 24		420772	0		=			
ANR	421869	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421870	Identifier	data		420772	0					
ANR	421871	PostIncDecOperationExpression	l ++		420772	1					
ANR	421872	Identifier	l		420772	0					
ANR	421873	IncDec	++		420772	1					
ANR	421874	ShiftExpression	offset >> 24		420772	1		>>			
ANR	421875	Identifier	offset		420772	0					
ANR	421876	PrimaryExpression	24		420772	1					
ANR	421877	ElseStatement	else		420772	0					
ANR	421878	CompoundStatement		123:9:3636:3636	420772	0					
ANR	421879	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg	910:3:24702:24767	420772	0	True				
ANR	421880	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		420772	0		=			
ANR	421881	ArrayIndexing	data [ l ++ ]		420772	0					
ANR	421882	Identifier	data		420772	0					
ANR	421883	PostIncDecOperationExpression	l ++		420772	1					
ANR	421884	Identifier	l		420772	0					
ANR	421885	IncDec	++		420772	1					
ANR	421886	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		420772	1		|			
ANR	421887	PrimaryExpression	0xc0		420772	0					
ANR	421888	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		420772	1		|			
ANR	421889	ShiftExpression	op -> operands [ 0 ] . reg << 3		420772	0		<<			
ANR	421890	MemberAccess	op -> operands [ 0 ] . reg		420772	0					
ANR	421891	ArrayIndexing	op -> operands [ 0 ]		420772	0					
ANR	421892	PtrMemberAccess	op -> operands		420772	0					
ANR	421893	Identifier	op		420772	0					
ANR	421894	Identifier	operands		420772	1					
ANR	421895	PrimaryExpression	0		420772	1					
ANR	421896	Identifier	reg		420772	1					
ANR	421897	PrimaryExpression	3		420772	1					
ANR	421898	MemberAccess	op -> operands [ 1 ] . reg		420772	1					
ANR	421899	ArrayIndexing	op -> operands [ 1 ]		420772	0					
ANR	421900	PtrMemberAccess	op -> operands		420772	0					
ANR	421901	Identifier	op		420772	0					
ANR	421902	Identifier	operands		420772	1					
ANR	421903	PrimaryExpression	1		420772	1					
ANR	421904	Identifier	reg		420772	1					
ANR	421905	ReturnStatement	return l ;	914:1:24778:24786	420772	9	True				
ANR	421906	Identifier	l		420772	0					
ANR	421907	ReturnType	static int		420772	1					
ANR	421908	Identifier	opcmov		420772	2					
ANR	421909	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		420772	3					
ANR	421910	Parameter	RAsm * a	787:18:21022:21028	420772	0	True				
ANR	421911	ParameterType	RAsm *		420772	0					
ANR	421912	Identifier	a		420772	1					
ANR	421913	Parameter	ut8 * data	787:27:21031:21039	420772	1	True				
ANR	421914	ParameterType	ut8 *		420772	0					
ANR	421915	Identifier	data		420772	1					
ANR	421916	Parameter	const Opcode * op	787:38:21042:21057	420772	2	True				
ANR	421917	ParameterType	const Opcode *		420772	0					
ANR	421918	Identifier	op		420772	1					
ANR	421919	CFGEntryNode	ENTRY		420772		True				
ANR	421920	CFGExitNode	EXIT		420772		True				
ANR	421921	Symbol	ST8_MAX		420772						
ANR	421922	Symbol	data		420772						
ANR	421923	Symbol	* op		420772						
ANR	421924	Symbol	op -> mnemonic		420772						
ANR	421925	Symbol	X86R_EBP		420772						
ANR	421926	Symbol	* * op		420772						
ANR	421927	Symbol	* op -> operands [ 1 ] . regs		420772						
ANR	421928	Symbol	* op -> operands		420772						
ANR	421929	Symbol	op -> operands [ 1 ] . regs		420772						
ANR	421930	Symbol	ST8_MIN		420772						
ANR	421931	Symbol	op -> operands [ 0 ] . type		420772						
ANR	421932	Symbol	op -> operands [ 0 ] . reg		420772						
ANR	421933	Symbol	op -> operands [ 1 ] . offset_sign		420772						
ANR	421934	Symbol	* op -> operands [ 1 ] . scale		420772						
ANR	421935	Symbol	OT_MEMORY		420772						
ANR	421936	Symbol	strcmp		420772						
ANR	421937	Symbol	a		420772						
ANR	421938	Symbol	op		420772						
ANR	421939	Symbol	OT_CONSTANT		420772						
ANR	421940	Symbol	op -> operands [ 1 ] . scale		420772						
ANR	421941	Symbol	mod_byte		420772						
ANR	421942	Symbol	offset		420772						
ANR	421943	Symbol	op -> operands [ 1 ] . reg		420772						
ANR	421944	Symbol	op -> operands [ 1 ] . offset		420772						
ANR	421945	Symbol	* * op -> operands		420772						
ANR	421946	Symbol	l		420772						
ANR	421947	Symbol	OT_REGALL		420772						
ANR	421948	Symbol	X86R_UNDEFINED		420772						
ANR	421949	Symbol	op -> operands [ 1 ] . type		420772						
ANR	421950	Symbol	* * * op		420772						
ANR	421951	Symbol	op -> operands		420772						
ANR	421952	Symbol	* data		420772						
ANR	421953	Symbol	getsib		420772						
ANR	421954	Symbol	cmov		420772						
ANR	421955	Function	opmovx	917:0:24791:25372							
ANR	421956	FunctionDef	"opmovx (RAsm * a , ut8 * data , const Opcode * op)"		421955	0					
ANR	421957	CompoundStatement		917:56:24847:25372	421955	0					
ANR	421958	ExpressionStatement	is_valid_registers ( op )	918:1:24850:24873	421955	0	True				
ANR	421959	CallExpression	is_valid_registers ( op )		421955	0					
ANR	421960	Callee	is_valid_registers		421955	0					
ANR	421961	Identifier	is_valid_registers		421955	0					
ANR	421962	ArgumentList	op		421955	1					
ANR	421963	Argument	op		421955	0					
ANR	421964	Identifier	op		421955	0					
ANR	421965	IdentifierDeclStatement	int l = 0 ;	919:1:24876:24885	421955	1	True				
ANR	421966	IdentifierDecl	l = 0		421955	0					
ANR	421967	IdentifierDeclType	int		421955	0					
ANR	421968	Identifier	l		421955	1					
ANR	421969	AssignmentExpression	l = 0		421955	2		=			
ANR	421970	Identifier	l		421955	0					
ANR	421971	PrimaryExpression	0		421955	1					
ANR	421972	IdentifierDeclStatement	int word = 0 ;	920:1:24888:24900	421955	2	True				
ANR	421973	IdentifierDecl	word = 0		421955	0					
ANR	421974	IdentifierDeclType	int		421955	0					
ANR	421975	Identifier	word		421955	1					
ANR	421976	AssignmentExpression	word = 0		421955	2		=			
ANR	421977	Identifier	word		421955	0					
ANR	421978	PrimaryExpression	0		421955	1					
ANR	421979	IdentifierDeclStatement	char * movx = op -> mnemonic + 3 ;	921:1:24903:24932	421955	3	True				
ANR	421980	IdentifierDecl	* movx = op -> mnemonic + 3		421955	0					
ANR	421981	IdentifierDeclType	char *		421955	0					
ANR	421982	Identifier	movx		421955	1					
ANR	421983	AssignmentExpression	* movx = op -> mnemonic + 3		421955	2		=			
ANR	421984	Identifier	movx		421955	0					
ANR	421985	AdditiveExpression	op -> mnemonic + 3		421955	1		+			
ANR	421986	PtrMemberAccess	op -> mnemonic		421955	0					
ANR	421987	Identifier	op		421955	0					
ANR	421988	Identifier	mnemonic		421955	1					
ANR	421989	PrimaryExpression	3		421955	1					
ANR	421990	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY ) )		421955	4					
ANR	421991	Condition	! ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY )	923:5:24940:25011	421955	0	True				
ANR	421992	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY )		421955	0					
ANR	421993	UnaryOperator	!		421955	0					
ANR	421994	AndExpression	op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY		421955	1		&&			
ANR	421995	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE		421955	0		&			
ANR	421996	MemberAccess	op -> operands [ 0 ] . type		421955	0					
ANR	421997	ArrayIndexing	op -> operands [ 0 ]		421955	0					
ANR	421998	PtrMemberAccess	op -> operands		421955	0					
ANR	421999	Identifier	op		421955	0					
ANR	422000	Identifier	operands		421955	1					
ANR	422001	PrimaryExpression	0		421955	1					
ANR	422002	Identifier	type		421955	1					
ANR	422003	Identifier	OT_REGTYPE		421955	1					
ANR	422004	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		421955	1		&			
ANR	422005	MemberAccess	op -> operands [ 1 ] . type		421955	0					
ANR	422006	ArrayIndexing	op -> operands [ 1 ]		421955	0					
ANR	422007	PtrMemberAccess	op -> operands		421955	0					
ANR	422008	Identifier	op		421955	0					
ANR	422009	Identifier	operands		421955	1					
ANR	422010	PrimaryExpression	1		421955	1					
ANR	422011	Identifier	type		421955	1					
ANR	422012	Identifier	OT_MEMORY		421955	1					
ANR	422013	CompoundStatement		7:79:166:166	421955	1					
ANR	422014	ReturnStatement	return - 1 ;	924:2:25018:25027	421955	0	True				
ANR	422015	UnaryOperationExpression	- 1		421955	0					
ANR	422016	UnaryOperator	-		421955	0					
ANR	422017	PrimaryExpression	1		421955	1					
ANR	422018	IfStatement	if ( op -> operands [ 1 ] . type & OT_WORD )		421955	5					
ANR	422019	Condition	op -> operands [ 1 ] . type & OT_WORD	926:5:25037:25066	421955	0	True				
ANR	422020	BitAndExpression	op -> operands [ 1 ] . type & OT_WORD		421955	0		&			
ANR	422021	MemberAccess	op -> operands [ 1 ] . type		421955	0					
ANR	422022	ArrayIndexing	op -> operands [ 1 ]		421955	0					
ANR	422023	PtrMemberAccess	op -> operands		421955	0					
ANR	422024	Identifier	op		421955	0					
ANR	422025	Identifier	operands		421955	1					
ANR	422026	PrimaryExpression	1		421955	1					
ANR	422027	Identifier	type		421955	1					
ANR	422028	Identifier	OT_WORD		421955	1					
ANR	422029	CompoundStatement		10:37:221:221	421955	1					
ANR	422030	ExpressionStatement	word = 1	927:2:25073:25081	421955	0	True				
ANR	422031	AssignmentExpression	word = 1		421955	0		=			
ANR	422032	Identifier	word		421955	0					
ANR	422033	PrimaryExpression	1		421955	1					
ANR	422034	ExpressionStatement	data [ l ++ ] = 0x0f	930:1:25088:25104	421955	6	True				
ANR	422035	AssignmentExpression	data [ l ++ ] = 0x0f		421955	0		=			
ANR	422036	ArrayIndexing	data [ l ++ ]		421955	0					
ANR	422037	Identifier	data		421955	0					
ANR	422038	PostIncDecOperationExpression	l ++		421955	1					
ANR	422039	Identifier	l		421955	0					
ANR	422040	IncDec	++		421955	1					
ANR	422041	PrimaryExpression	0x0f		421955	1					
ANR	422042	IfStatement	"if ( ! strcmp ( movx , ""zx"" ) )"		421955	7					
ANR	422043	Condition	"! strcmp ( movx , ""zx"" )"	931:5:25111:25130	421955	0	True				
ANR	422044	UnaryOperationExpression	"! strcmp ( movx , ""zx"" )"		421955	0					
ANR	422045	UnaryOperator	!		421955	0					
ANR	422046	CallExpression	"strcmp ( movx , ""zx"" )"		421955	1					
ANR	422047	Callee	strcmp		421955	0					
ANR	422048	Identifier	strcmp		421955	0					
ANR	422049	ArgumentList	movx		421955	1					
ANR	422050	Argument	movx		421955	0					
ANR	422051	Identifier	movx		421955	0					
ANR	422052	Argument	"""zx"""		421955	1					
ANR	422053	PrimaryExpression	"""zx"""		421955	0					
ANR	422054	CompoundStatement		15:27:285:285	421955	1					
ANR	422055	ExpressionStatement	data [ l ++ ] = 0xb6 + word	932:2:25137:25160	421955	0	True				
ANR	422056	AssignmentExpression	data [ l ++ ] = 0xb6 + word		421955	0		=			
ANR	422057	ArrayIndexing	data [ l ++ ]		421955	0					
ANR	422058	Identifier	data		421955	0					
ANR	422059	PostIncDecOperationExpression	l ++		421955	1					
ANR	422060	Identifier	l		421955	0					
ANR	422061	IncDec	++		421955	1					
ANR	422062	AdditiveExpression	0xb6 + word		421955	1		+			
ANR	422063	PrimaryExpression	0xb6		421955	0					
ANR	422064	Identifier	word		421955	1					
ANR	422065	ElseStatement	else		421955	0					
ANR	422066	IfStatement	"if ( ! strcmp ( movx , ""sx"" ) )"		421955	0					
ANR	422067	Condition	"! strcmp ( movx , ""sx"" )"	933:12:25174:25193	421955	0	True				
ANR	422068	UnaryOperationExpression	"! strcmp ( movx , ""sx"" )"		421955	0					
ANR	422069	UnaryOperator	!		421955	0					
ANR	422070	CallExpression	"strcmp ( movx , ""sx"" )"		421955	1					
ANR	422071	Callee	strcmp		421955	0					
ANR	422072	Identifier	strcmp		421955	0					
ANR	422073	ArgumentList	movx		421955	1					
ANR	422074	Argument	movx		421955	0					
ANR	422075	Identifier	movx		421955	0					
ANR	422076	Argument	"""sx"""		421955	1					
ANR	422077	PrimaryExpression	"""sx"""		421955	0					
ANR	422078	CompoundStatement		17:34:348:348	421955	1					
ANR	422079	ExpressionStatement	data [ l ++ ] = 0xbe + word	934:2:25200:25223	421955	0	True				
ANR	422080	AssignmentExpression	data [ l ++ ] = 0xbe + word		421955	0		=			
ANR	422081	ArrayIndexing	data [ l ++ ]		421955	0					
ANR	422082	Identifier	data		421955	0					
ANR	422083	PostIncDecOperationExpression	l ++		421955	1					
ANR	422084	Identifier	l		421955	0					
ANR	422085	IncDec	++		421955	1					
ANR	422086	AdditiveExpression	0xbe + word		421955	1		+			
ANR	422087	PrimaryExpression	0xbe		421955	0					
ANR	422088	Identifier	word		421955	1					
ANR	422089	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	936:1:25229:25291	421955	8	True				
ANR	422090	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		421955	0		=			
ANR	422091	ArrayIndexing	data [ l ++ ]		421955	0					
ANR	422092	Identifier	data		421955	0					
ANR	422093	PostIncDecOperationExpression	l ++		421955	1					
ANR	422094	Identifier	l		421955	0					
ANR	422095	IncDec	++		421955	1					
ANR	422096	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		421955	1		|			
ANR	422097	ShiftExpression	op -> operands [ 0 ] . reg << 3		421955	0		<<			
ANR	422098	MemberAccess	op -> operands [ 0 ] . reg		421955	0					
ANR	422099	ArrayIndexing	op -> operands [ 0 ]		421955	0					
ANR	422100	PtrMemberAccess	op -> operands		421955	0					
ANR	422101	Identifier	op		421955	0					
ANR	422102	Identifier	operands		421955	1					
ANR	422103	PrimaryExpression	0		421955	1					
ANR	422104	Identifier	reg		421955	1					
ANR	422105	PrimaryExpression	3		421955	1					
ANR	422106	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		421955	1					
ANR	422107	MemberAccess	op -> operands [ 1 ] . regs		421955	0					
ANR	422108	ArrayIndexing	op -> operands [ 1 ]		421955	0					
ANR	422109	PtrMemberAccess	op -> operands		421955	0					
ANR	422110	Identifier	op		421955	0					
ANR	422111	Identifier	operands		421955	1					
ANR	422112	PrimaryExpression	1		421955	1					
ANR	422113	Identifier	regs		421955	1					
ANR	422114	PrimaryExpression	0		421955	1					
ANR	422115	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		421955	9					
ANR	422116	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	937:5:25298:25332	421955	0	True				
ANR	422117	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		421955	0		==			
ANR	422118	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		421955	0					
ANR	422119	MemberAccess	op -> operands [ 1 ] . regs		421955	0					
ANR	422120	ArrayIndexing	op -> operands [ 1 ]		421955	0					
ANR	422121	PtrMemberAccess	op -> operands		421955	0					
ANR	422122	Identifier	op		421955	0					
ANR	422123	Identifier	operands		421955	1					
ANR	422124	PrimaryExpression	1		421955	1					
ANR	422125	Identifier	regs		421955	1					
ANR	422126	PrimaryExpression	0		421955	1					
ANR	422127	Identifier	X86R_ESP		421955	1					
ANR	422128	CompoundStatement		21:42:487:487	421955	1					
ANR	422129	ExpressionStatement	data [ l ++ ] = 0x24	938:2:25339:25355	421955	0	True				
ANR	422130	AssignmentExpression	data [ l ++ ] = 0x24		421955	0		=			
ANR	422131	ArrayIndexing	data [ l ++ ]		421955	0					
ANR	422132	Identifier	data		421955	0					
ANR	422133	PostIncDecOperationExpression	l ++		421955	1					
ANR	422134	Identifier	l		421955	0					
ANR	422135	IncDec	++		421955	1					
ANR	422136	PrimaryExpression	0x24		421955	1					
ANR	422137	ReturnStatement	return l ;	941:1:25362:25370	421955	10	True				
ANR	422138	Identifier	l		421955	0					
ANR	422139	ReturnType	static int		421955	1					
ANR	422140	Identifier	opmovx		421955	2					
ANR	422141	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		421955	3					
ANR	422142	Parameter	RAsm * a	917:18:24809:24815	421955	0	True				
ANR	422143	ParameterType	RAsm *		421955	0					
ANR	422144	Identifier	a		421955	1					
ANR	422145	Parameter	ut8 * data	917:27:24818:24826	421955	1	True				
ANR	422146	ParameterType	ut8 *		421955	0					
ANR	422147	Identifier	data		421955	1					
ANR	422148	Parameter	const Opcode * op	917:38:24829:24844	421955	2	True				
ANR	422149	ParameterType	const Opcode *		421955	0					
ANR	422150	Identifier	op		421955	1					
ANR	422151	CFGEntryNode	ENTRY		421955		True				
ANR	422152	CFGExitNode	EXIT		421955		True				
ANR	422153	Symbol	strcmp		421955						
ANR	422154	Symbol	a		421955						
ANR	422155	Symbol	op		421955						
ANR	422156	Symbol	OT_WORD		421955						
ANR	422157	Symbol	data		421955						
ANR	422158	Symbol	* op		421955						
ANR	422159	Symbol	op -> mnemonic		421955						
ANR	422160	Symbol	X86R_ESP		421955						
ANR	422161	Symbol	* * op -> operands		421955						
ANR	422162	Symbol	l		421955						
ANR	422163	Symbol	* * op		421955						
ANR	422164	Symbol	OT_REGTYPE		421955						
ANR	422165	Symbol	* op -> operands [ 1 ] . regs		421955						
ANR	422166	Symbol	* op -> operands		421955						
ANR	422167	Symbol	op -> operands [ 1 ] . type		421955						
ANR	422168	Symbol	op -> operands [ 1 ] . regs		421955						
ANR	422169	Symbol	movx		421955						
ANR	422170	Symbol	op -> operands [ 0 ] . type		421955						
ANR	422171	Symbol	op -> operands [ 0 ] . reg		421955						
ANR	422172	Symbol	* * * op		421955						
ANR	422173	Symbol	op -> operands		421955						
ANR	422174	Symbol	word		421955						
ANR	422175	Symbol	OT_MEMORY		421955						
ANR	422176	Symbol	* data		421955						
ANR	422177	Function	opaam	944:0:25375:25689							
ANR	422178	FunctionDef	"opaam (RAsm * a , ut8 * data , const Opcode * op)"		422177	0					
ANR	422179	CompoundStatement		944:55:25430:25689	422177	0					
ANR	422180	ExpressionStatement	is_valid_registers ( op )	945:1:25433:25456	422177	0	True				
ANR	422181	CallExpression	is_valid_registers ( op )		422177	0					
ANR	422182	Callee	is_valid_registers		422177	0					
ANR	422183	Identifier	is_valid_registers		422177	0					
ANR	422184	ArgumentList	op		422177	1					
ANR	422185	Argument	op		422177	0					
ANR	422186	Identifier	op		422177	0					
ANR	422187	IdentifierDeclStatement	int l = 0 ;	946:1:25459:25468	422177	1	True				
ANR	422188	IdentifierDecl	l = 0		422177	0					
ANR	422189	IdentifierDeclType	int		422177	0					
ANR	422190	Identifier	l		422177	1					
ANR	422191	AssignmentExpression	l = 0		422177	2		=			
ANR	422192	Identifier	l		422177	0					
ANR	422193	PrimaryExpression	0		422177	1					
ANR	422194	IdentifierDeclStatement	int immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign ;	947:1:25471:25535	422177	2	True				
ANR	422195	IdentifierDecl	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		422177	0					
ANR	422196	IdentifierDeclType	int		422177	0					
ANR	422197	Identifier	immediate		422177	1					
ANR	422198	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		422177	2		=			
ANR	422199	Identifier	immediate		422177	0					
ANR	422200	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		422177	1		*			
ANR	422201	MemberAccess	op -> operands [ 0 ] . immediate		422177	0					
ANR	422202	ArrayIndexing	op -> operands [ 0 ]		422177	0					
ANR	422203	PtrMemberAccess	op -> operands		422177	0					
ANR	422204	Identifier	op		422177	0					
ANR	422205	Identifier	operands		422177	1					
ANR	422206	PrimaryExpression	0		422177	1					
ANR	422207	Identifier	immediate		422177	1					
ANR	422208	MemberAccess	op -> operands [ 0 ] . sign		422177	1					
ANR	422209	ArrayIndexing	op -> operands [ 0 ]		422177	0					
ANR	422210	PtrMemberAccess	op -> operands		422177	0					
ANR	422211	Identifier	op		422177	0					
ANR	422212	Identifier	operands		422177	1					
ANR	422213	PrimaryExpression	0		422177	1					
ANR	422214	Identifier	sign		422177	1					
ANR	422215	ExpressionStatement	data [ l ++ ] = 0xd4	948:1:25538:25554	422177	3	True				
ANR	422216	AssignmentExpression	data [ l ++ ] = 0xd4		422177	0		=			
ANR	422217	ArrayIndexing	data [ l ++ ]		422177	0					
ANR	422218	Identifier	data		422177	0					
ANR	422219	PostIncDecOperationExpression	l ++		422177	1					
ANR	422220	Identifier	l		422177	0					
ANR	422221	IncDec	++		422177	1					
ANR	422222	PrimaryExpression	0xd4		422177	1					
ANR	422223	IfStatement	if ( immediate == 0 )		422177	4					
ANR	422224	Condition	immediate == 0	949:5:25561:25574	422177	0	True				
ANR	422225	EqualityExpression	immediate == 0		422177	0		==			
ANR	422226	Identifier	immediate		422177	0					
ANR	422227	PrimaryExpression	0		422177	1					
ANR	422228	CompoundStatement		6:21:146:146	422177	1					
ANR	422229	ExpressionStatement	data [ l ++ ] = 0x0a	950:2:25581:25597	422177	0	True				
ANR	422230	AssignmentExpression	data [ l ++ ] = 0x0a		422177	0		=			
ANR	422231	ArrayIndexing	data [ l ++ ]		422177	0					
ANR	422232	Identifier	data		422177	0					
ANR	422233	PostIncDecOperationExpression	l ++		422177	1					
ANR	422234	Identifier	l		422177	0					
ANR	422235	IncDec	++		422177	1					
ANR	422236	PrimaryExpression	0x0a		422177	1					
ANR	422237	ElseStatement	else		422177	0					
ANR	422238	IfStatement	if ( immediate < 256 && immediate > - 129 )		422177	0					
ANR	422239	Condition	immediate < 256 && immediate > - 129	951:12:25611:25645	422177	0	True				
ANR	422240	AndExpression	immediate < 256 && immediate > - 129		422177	0		&&			
ANR	422241	RelationalExpression	immediate < 256		422177	0		<			
ANR	422242	Identifier	immediate		422177	0					
ANR	422243	PrimaryExpression	256		422177	1					
ANR	422244	RelationalExpression	immediate > - 129		422177	1		>			
ANR	422245	Identifier	immediate		422177	0					
ANR	422246	UnaryOperationExpression	- 129		422177	1					
ANR	422247	UnaryOperator	-		422177	0					
ANR	422248	PrimaryExpression	129		422177	1					
ANR	422249	CompoundStatement		8:49:217:217	422177	1					
ANR	422250	ExpressionStatement	data [ l ++ ] = immediate	952:2:25652:25673	422177	0	True				
ANR	422251	AssignmentExpression	data [ l ++ ] = immediate		422177	0		=			
ANR	422252	ArrayIndexing	data [ l ++ ]		422177	0					
ANR	422253	Identifier	data		422177	0					
ANR	422254	PostIncDecOperationExpression	l ++		422177	1					
ANR	422255	Identifier	l		422177	0					
ANR	422256	IncDec	++		422177	1					
ANR	422257	Identifier	immediate		422177	1					
ANR	422258	ReturnStatement	return l ;	954:1:25679:25687	422177	5	True				
ANR	422259	Identifier	l		422177	0					
ANR	422260	ReturnType	static int		422177	1					
ANR	422261	Identifier	opaam		422177	2					
ANR	422262	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		422177	3					
ANR	422263	Parameter	RAsm * a	944:17:25392:25398	422177	0	True				
ANR	422264	ParameterType	RAsm *		422177	0					
ANR	422265	Identifier	a		422177	1					
ANR	422266	Parameter	ut8 * data	944:26:25401:25409	422177	1	True				
ANR	422267	ParameterType	ut8 *		422177	0					
ANR	422268	Identifier	data		422177	1					
ANR	422269	Parameter	const Opcode * op	944:37:25412:25427	422177	2	True				
ANR	422270	ParameterType	const Opcode *		422177	0					
ANR	422271	Identifier	op		422177	1					
ANR	422272	CFGEntryNode	ENTRY		422177		True				
ANR	422273	CFGExitNode	EXIT		422177		True				
ANR	422274	Symbol	a		422177						
ANR	422275	Symbol	op		422177						
ANR	422276	Symbol	* op -> operands		422177						
ANR	422277	Symbol	data		422177						
ANR	422278	Symbol	* op		422177						
ANR	422279	Symbol	immediate		422177						
ANR	422280	Symbol	l		422177						
ANR	422281	Symbol	op -> operands [ 0 ] . immediate		422177						
ANR	422282	Symbol	op -> operands		422177						
ANR	422283	Symbol	* data		422177						
ANR	422284	Symbol	* * op		422177						
ANR	422285	Symbol	op -> operands [ 0 ] . sign		422177						
ANR	422286	Function	opdec	957:0:25692:29034							
ANR	422287	FunctionDef	"opdec (RAsm * a , ut8 * data , const Opcode * op)"		422286	0					
ANR	422288	CompoundStatement		957:55:25747:29034	422286	0					
ANR	422289	IfStatement	if ( op -> operands [ 1 ] . type )		422286	0					
ANR	422290	Condition	op -> operands [ 1 ] . type	958:5:25754:25773	422286	0	True				
ANR	422291	MemberAccess	op -> operands [ 1 ] . type		422286	0					
ANR	422292	ArrayIndexing	op -> operands [ 1 ]		422286	0					
ANR	422293	PtrMemberAccess	op -> operands		422286	0					
ANR	422294	Identifier	op		422286	0					
ANR	422295	Identifier	operands		422286	1					
ANR	422296	PrimaryExpression	1		422286	1					
ANR	422297	Identifier	type		422286	1					
ANR	422298	CompoundStatement		2:27:28:28	422286	1					
ANR	422299	ExpressionStatement	"eprintf ( ""Error: Invalid operands\\n"" )"	959:2:25780:25817	422286	0	True				
ANR	422300	CallExpression	"eprintf ( ""Error: Invalid operands\\n"" )"		422286	0					
ANR	422301	Callee	eprintf		422286	0					
ANR	422302	Identifier	eprintf		422286	0					
ANR	422303	ArgumentList	"""Error: Invalid operands\\n"""		422286	1					
ANR	422304	Argument	"""Error: Invalid operands\\n"""		422286	0					
ANR	422305	PrimaryExpression	"""Error: Invalid operands\\n"""		422286	0					
ANR	422306	ReturnStatement	return - 1 ;	960:2:25821:25830	422286	1	True				
ANR	422307	UnaryOperationExpression	- 1		422286	0					
ANR	422308	UnaryOperator	-		422286	0					
ANR	422309	PrimaryExpression	1		422286	1					
ANR	422310	ExpressionStatement	is_valid_registers ( op )	962:1:25836:25859	422286	1	True				
ANR	422311	CallExpression	is_valid_registers ( op )		422286	0					
ANR	422312	Callee	is_valid_registers		422286	0					
ANR	422313	Identifier	is_valid_registers		422286	0					
ANR	422314	ArgumentList	op		422286	1					
ANR	422315	Argument	op		422286	0					
ANR	422316	Identifier	op		422286	0					
ANR	422317	IdentifierDeclStatement	int l = 0 ;	963:1:25862:25871	422286	2	True				
ANR	422318	IdentifierDecl	l = 0		422286	0					
ANR	422319	IdentifierDeclType	int		422286	0					
ANR	422320	Identifier	l		422286	1					
ANR	422321	AssignmentExpression	l = 0		422286	2		=			
ANR	422322	Identifier	l		422286	0					
ANR	422323	PrimaryExpression	0		422286	1					
ANR	422324	IdentifierDeclStatement	int size = op -> operands [ 0 ] . type & ALL_SIZE ;	964:1:25874:25916	422286	3	True				
ANR	422325	IdentifierDecl	size = op -> operands [ 0 ] . type & ALL_SIZE		422286	0					
ANR	422326	IdentifierDeclType	int		422286	0					
ANR	422327	Identifier	size		422286	1					
ANR	422328	AssignmentExpression	size = op -> operands [ 0 ] . type & ALL_SIZE		422286	2		=			
ANR	422329	Identifier	size		422286	0					
ANR	422330	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		422286	1		&			
ANR	422331	MemberAccess	op -> operands [ 0 ] . type		422286	0					
ANR	422332	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422333	PtrMemberAccess	op -> operands		422286	0					
ANR	422334	Identifier	op		422286	0					
ANR	422335	Identifier	operands		422286	1					
ANR	422336	PrimaryExpression	0		422286	1					
ANR	422337	Identifier	type		422286	1					
ANR	422338	Identifier	ALL_SIZE		422286	1					
ANR	422339	IfStatement	if ( op -> operands [ 0 ] . explicit_size )		422286	4					
ANR	422340	Condition	op -> operands [ 0 ] . explicit_size	965:5:25923:25951	422286	0	True				
ANR	422341	MemberAccess	op -> operands [ 0 ] . explicit_size		422286	0					
ANR	422342	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422343	PtrMemberAccess	op -> operands		422286	0					
ANR	422344	Identifier	op		422286	0					
ANR	422345	Identifier	operands		422286	1					
ANR	422346	PrimaryExpression	0		422286	1					
ANR	422347	Identifier	explicit_size		422286	1					
ANR	422348	CompoundStatement		9:36:206:206	422286	1					
ANR	422349	ExpressionStatement	size = op -> operands [ 0 ] . dest_size	966:2:25958:25990	422286	0	True				
ANR	422350	AssignmentExpression	size = op -> operands [ 0 ] . dest_size		422286	0		=			
ANR	422351	Identifier	size		422286	0					
ANR	422352	MemberAccess	op -> operands [ 0 ] . dest_size		422286	1					
ANR	422353	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422354	PtrMemberAccess	op -> operands		422286	0					
ANR	422355	Identifier	op		422286	0					
ANR	422356	Identifier	operands		422286	1					
ANR	422357	PrimaryExpression	0		422286	1					
ANR	422358	Identifier	dest_size		422286	1					
ANR	422359	IfStatement	if ( size & OT_WORD )		422286	5					
ANR	422360	Condition	size & OT_WORD	969:5:26001:26014	422286	0	True				
ANR	422361	BitAndExpression	size & OT_WORD		422286	0		&			
ANR	422362	Identifier	size		422286	0					
ANR	422363	Identifier	OT_WORD		422286	1					
ANR	422364	CompoundStatement		13:21:269:269	422286	1					
ANR	422365	ExpressionStatement	data [ l ++ ] = 0x66	970:2:26021:26037	422286	0	True				
ANR	422366	AssignmentExpression	data [ l ++ ] = 0x66		422286	0		=			
ANR	422367	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	422368	Identifier	data		422286	0					
ANR	422369	PostIncDecOperationExpression	l ++		422286	1					
ANR	422370	Identifier	l		422286	0					
ANR	422371	IncDec	++		422286	1					
ANR	422372	PrimaryExpression	0x66		422286	1					
ANR	422373	IdentifierDeclStatement	int rex = 1 << 6 ;	974:1:26058:26074	422286	6	True				
ANR	422374	IdentifierDecl	rex = 1 << 6		422286	0					
ANR	422375	IdentifierDeclType	int		422286	0					
ANR	422376	Identifier	rex		422286	1					
ANR	422377	AssignmentExpression	rex = 1 << 6		422286	2		=			
ANR	422378	Identifier	rex		422286	0					
ANR	422379	ShiftExpression	1 << 6		422286	1		<<			
ANR	422380	PrimaryExpression	1		422286	0					
ANR	422381	PrimaryExpression	6		422286	1					
ANR	422382	IdentifierDeclStatement	bool use_rex = false ;	975:1:26077:26097	422286	7	True				
ANR	422383	IdentifierDecl	use_rex = false		422286	0					
ANR	422384	IdentifierDeclType	bool		422286	0					
ANR	422385	Identifier	use_rex		422286	1					
ANR	422386	AssignmentExpression	use_rex = false		422286	2		=			
ANR	422387	Identifier	false		422286	0					
ANR	422388	Identifier	false		422286	1					
ANR	422389	IfStatement	if ( size & OT_QWORD )		422286	8					
ANR	422390	Condition	size & OT_QWORD	976:5:26104:26118	422286	0	True				
ANR	422391	BitAndExpression	size & OT_QWORD		422286	0		&			
ANR	422392	Identifier	size		422286	0					
ANR	422393	Identifier	OT_QWORD		422286	1					
ANR	422394	CompoundStatement		20:22:373:373	422286	1					
ANR	422395	ExpressionStatement	use_rex = true	977:2:26137:26151	422286	0	True				
ANR	422396	AssignmentExpression	use_rex = true		422286	0		=			
ANR	422397	Identifier	use_rex		422286	0					
ANR	422398	Identifier	true		422286	1					
ANR	422399	ExpressionStatement	rex |= 1 << 3	978:2:26155:26168	422286	1	True				
ANR	422400	AssignmentExpression	rex |= 1 << 3		422286	0		|=			
ANR	422401	Identifier	rex		422286	0					
ANR	422402	ShiftExpression	1 << 3		422286	1		<<			
ANR	422403	PrimaryExpression	1		422286	0					
ANR	422404	PrimaryExpression	3		422286	1					
ANR	422405	IfStatement	if ( op -> operands [ 0 ] . extended )		422286	9					
ANR	422406	Condition	op -> operands [ 0 ] . extended	980:5:26178:26201	422286	0	True				
ANR	422407	MemberAccess	op -> operands [ 0 ] . extended		422286	0					
ANR	422408	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422409	PtrMemberAccess	op -> operands		422286	0					
ANR	422410	Identifier	op		422286	0					
ANR	422411	Identifier	operands		422286	1					
ANR	422412	PrimaryExpression	0		422286	1					
ANR	422413	Identifier	extended		422286	1					
ANR	422414	CompoundStatement		24:31:456:456	422286	1					
ANR	422415	ExpressionStatement	use_rex = true	981:2:26219:26233	422286	0	True				
ANR	422416	AssignmentExpression	use_rex = true		422286	0		=			
ANR	422417	Identifier	use_rex		422286	0					
ANR	422418	Identifier	true		422286	1					
ANR	422419	ExpressionStatement	rex |= 1	982:2:26237:26245	422286	1	True				
ANR	422420	AssignmentExpression	rex |= 1		422286	0		|=			
ANR	422421	Identifier	rex		422286	0					
ANR	422422	PrimaryExpression	1		422286	1					
ANR	422423	IdentifierDeclStatement	int opcode ;	986:1:26272:26282	422286	10	True				
ANR	422424	IdentifierDecl	opcode		422286	0					
ANR	422425	IdentifierDeclType	int		422286	0					
ANR	422426	Identifier	opcode		422286	1					
ANR	422427	IfStatement	if ( size & OT_BYTE )		422286	11					
ANR	422428	Condition	size & OT_BYTE	987:5:26289:26302	422286	0	True				
ANR	422429	BitAndExpression	size & OT_BYTE		422286	0		&			
ANR	422430	Identifier	size		422286	0					
ANR	422431	Identifier	OT_BYTE		422286	1					
ANR	422432	CompoundStatement		31:21:557:557	422286	1					
ANR	422433	ExpressionStatement	opcode = 0xfe	988:2:26309:26322	422286	0	True				
ANR	422434	AssignmentExpression	opcode = 0xfe		422286	0		=			
ANR	422435	Identifier	opcode		422286	0					
ANR	422436	PrimaryExpression	0xfe		422286	1					
ANR	422437	ElseStatement	else		422286	0					
ANR	422438	CompoundStatement		33:8:584:584	422286	0					
ANR	422439	ExpressionStatement	opcode = 0xff	990:2:26336:26349	422286	0	True				
ANR	422440	AssignmentExpression	opcode = 0xff		422286	0		=			
ANR	422441	Identifier	opcode		422286	0					
ANR	422442	PrimaryExpression	0xff		422286	1					
ANR	422443	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		422286	12					
ANR	422444	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	993:5:26360:26394	422286	0	True				
ANR	422445	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		422286	0					
ANR	422446	UnaryOperator	!		422286	0					
ANR	422447	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		422286	1		&			
ANR	422448	MemberAccess	op -> operands [ 0 ] . type		422286	0					
ANR	422449	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422450	PtrMemberAccess	op -> operands		422286	0					
ANR	422451	Identifier	op		422286	0					
ANR	422452	Identifier	operands		422286	1					
ANR	422453	PrimaryExpression	0		422286	1					
ANR	422454	Identifier	type		422286	1					
ANR	422455	Identifier	OT_MEMORY		422286	1					
ANR	422456	CompoundStatement		37:42:649:649	422286	1					
ANR	422457	IfStatement	if ( use_rex )		422286	0					
ANR	422458	Condition	use_rex	994:6:26405:26411	422286	0	True				
ANR	422459	Identifier	use_rex		422286	0					
ANR	422460	CompoundStatement		38:15:666:666	422286	1					
ANR	422461	ExpressionStatement	data [ l ++ ] = rex	995:3:26419:26434	422286	0	True				
ANR	422462	AssignmentExpression	data [ l ++ ] = rex		422286	0		=			
ANR	422463	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	422464	Identifier	data		422286	0					
ANR	422465	PostIncDecOperationExpression	l ++		422286	1					
ANR	422466	Identifier	l		422286	0					
ANR	422467	IncDec	++		422286	1					
ANR	422468	Identifier	rex		422286	1					
ANR	422469	IfStatement	if ( a -> bits > 32 || size & OT_BYTE )		422286	1					
ANR	422470	Condition	a -> bits > 32 || size & OT_BYTE	997:6:26446:26475	422286	0	True				
ANR	422471	OrExpression	a -> bits > 32 || size & OT_BYTE		422286	0		||			
ANR	422472	RelationalExpression	a -> bits > 32		422286	0		>			
ANR	422473	PtrMemberAccess	a -> bits		422286	0					
ANR	422474	Identifier	a		422286	0					
ANR	422475	Identifier	bits		422286	1					
ANR	422476	PrimaryExpression	32		422286	1					
ANR	422477	BitAndExpression	size & OT_BYTE		422286	1		&			
ANR	422478	Identifier	size		422286	0					
ANR	422479	Identifier	OT_BYTE		422286	1					
ANR	422480	CompoundStatement		41:38:730:730	422286	1					
ANR	422481	ExpressionStatement	data [ l ++ ] = opcode	998:3:26483:26501	422286	0	True				
ANR	422482	AssignmentExpression	data [ l ++ ] = opcode		422286	0		=			
ANR	422483	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	422484	Identifier	data		422286	0					
ANR	422485	PostIncDecOperationExpression	l ++		422286	1					
ANR	422486	Identifier	l		422286	0					
ANR	422487	IncDec	++		422286	1					
ANR	422488	Identifier	opcode		422286	1					
ANR	422489	IfStatement	if ( a -> bits == 32 && size & ( OT_DWORD | OT_WORD ) )		422286	2					
ANR	422490	Condition	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )	1000:6:26513:26556	422286	0	True				
ANR	422491	AndExpression	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )		422286	0		&&			
ANR	422492	EqualityExpression	a -> bits == 32		422286	0		==			
ANR	422493	PtrMemberAccess	a -> bits		422286	0					
ANR	422494	Identifier	a		422286	0					
ANR	422495	Identifier	bits		422286	1					
ANR	422496	PrimaryExpression	32		422286	1					
ANR	422497	BitAndExpression	size & ( OT_DWORD | OT_WORD )		422286	1		&			
ANR	422498	Identifier	size		422286	0					
ANR	422499	InclusiveOrExpression	OT_DWORD | OT_WORD		422286	1		|			
ANR	422500	Identifier	OT_DWORD		422286	0					
ANR	422501	Identifier	OT_WORD		422286	1					
ANR	422502	CompoundStatement		44:52:811:811	422286	1					
ANR	422503	ExpressionStatement	data [ l ++ ] = 0x48 | op -> operands [ 0 ] . reg	1001:3:26564:26602	422286	0	True				
ANR	422504	AssignmentExpression	data [ l ++ ] = 0x48 | op -> operands [ 0 ] . reg		422286	0		=			
ANR	422505	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	422506	Identifier	data		422286	0					
ANR	422507	PostIncDecOperationExpression	l ++		422286	1					
ANR	422508	Identifier	l		422286	0					
ANR	422509	IncDec	++		422286	1					
ANR	422510	InclusiveOrExpression	0x48 | op -> operands [ 0 ] . reg		422286	1		|			
ANR	422511	PrimaryExpression	0x48		422286	0					
ANR	422512	MemberAccess	op -> operands [ 0 ] . reg		422286	1					
ANR	422513	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422514	PtrMemberAccess	op -> operands		422286	0					
ANR	422515	Identifier	op		422286	0					
ANR	422516	Identifier	operands		422286	1					
ANR	422517	PrimaryExpression	0		422286	1					
ANR	422518	Identifier	reg		422286	1					
ANR	422519	ElseStatement	else		422286	0					
ANR	422520	CompoundStatement		46:9:865:865	422286	0					
ANR	422521	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	1003:3:26618:26656	422286	0	True				
ANR	422522	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		422286	0		=			
ANR	422523	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	422524	Identifier	data		422286	0					
ANR	422525	PostIncDecOperationExpression	l ++		422286	1					
ANR	422526	Identifier	l		422286	0					
ANR	422527	IncDec	++		422286	1					
ANR	422528	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		422286	1		|			
ANR	422529	PrimaryExpression	0xc8		422286	0					
ANR	422530	MemberAccess	op -> operands [ 0 ] . reg		422286	1					
ANR	422531	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422532	PtrMemberAccess	op -> operands		422286	0					
ANR	422533	Identifier	op		422286	0					
ANR	422534	Identifier	operands		422286	1					
ANR	422535	PrimaryExpression	0		422286	1					
ANR	422536	Identifier	reg		422286	1					
ANR	422537	ReturnStatement	return l ;	1005:2:26664:26672	422286	3	True				
ANR	422538	Identifier	l		422286	0					
ANR	422539	IdentifierDeclStatement	bool rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP ;	1009:1:26706:26756	422286	13	True				
ANR	422540	IdentifierDecl	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		422286	0					
ANR	422541	IdentifierDeclType	bool		422286	0					
ANR	422542	Identifier	rip_rel		422286	1					
ANR	422543	AssignmentExpression	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		422286	2		=			
ANR	422544	Identifier	rip_rel		422286	0					
ANR	422545	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		422286	1		==			
ANR	422546	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422547	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422548	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422549	PtrMemberAccess	op -> operands		422286	0					
ANR	422550	Identifier	op		422286	0					
ANR	422551	Identifier	operands		422286	1					
ANR	422552	PrimaryExpression	0		422286	1					
ANR	422553	Identifier	regs		422286	1					
ANR	422554	PrimaryExpression	0		422286	1					
ANR	422555	Identifier	X86R_RIP		422286	1					
ANR	422556	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1010:1:26759:26824	422286	14	True				
ANR	422557	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		422286	0					
ANR	422558	IdentifierDeclType	int		422286	0					
ANR	422559	Identifier	offset		422286	1					
ANR	422560	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		422286	2		=			
ANR	422561	Identifier	offset		422286	0					
ANR	422562	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		422286	1		*			
ANR	422563	MemberAccess	op -> operands [ 0 ] . offset		422286	0					
ANR	422564	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422565	PtrMemberAccess	op -> operands		422286	0					
ANR	422566	Identifier	op		422286	0					
ANR	422567	Identifier	operands		422286	1					
ANR	422568	PrimaryExpression	0		422286	1					
ANR	422569	Identifier	offset		422286	1					
ANR	422570	MemberAccess	op -> operands [ 0 ] . offset_sign		422286	1					
ANR	422571	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422572	PtrMemberAccess	op -> operands		422286	0					
ANR	422573	Identifier	op		422286	0					
ANR	422574	Identifier	operands		422286	1					
ANR	422575	PrimaryExpression	0		422286	1					
ANR	422576	Identifier	offset_sign		422286	1					
ANR	422577	IdentifierDeclStatement	int modrm = 0 ;	1011:1:26827:26840	422286	15	True				
ANR	422578	IdentifierDecl	modrm = 0		422286	0					
ANR	422579	IdentifierDeclType	int		422286	0					
ANR	422580	Identifier	modrm		422286	1					
ANR	422581	AssignmentExpression	modrm = 0		422286	2		=			
ANR	422582	Identifier	modrm		422286	0					
ANR	422583	PrimaryExpression	0		422286	1					
ANR	422584	IdentifierDeclStatement	int mod ;	1012:1:26843:26850	422286	16	True				
ANR	422585	IdentifierDecl	mod		422286	0					
ANR	422586	IdentifierDeclType	int		422286	0					
ANR	422587	Identifier	mod		422286	1					
ANR	422588	IdentifierDeclStatement	int reg = 0 ;	1013:1:26853:26864	422286	17	True				
ANR	422589	IdentifierDecl	reg = 0		422286	0					
ANR	422590	IdentifierDeclType	int		422286	0					
ANR	422591	Identifier	reg		422286	1					
ANR	422592	AssignmentExpression	reg = 0		422286	2		=			
ANR	422593	Identifier	reg		422286	0					
ANR	422594	PrimaryExpression	0		422286	1					
ANR	422595	IdentifierDeclStatement	int rm ;	1014:1:26867:26873	422286	18	True				
ANR	422596	IdentifierDecl	rm		422286	0					
ANR	422597	IdentifierDeclType	int		422286	0					
ANR	422598	Identifier	rm		422286	1					
ANR	422599	IdentifierDeclStatement	bool use_sib = false ;	1015:1:26876:26896	422286	19	True				
ANR	422600	IdentifierDecl	use_sib = false		422286	0					
ANR	422601	IdentifierDeclType	bool		422286	0					
ANR	422602	Identifier	use_sib		422286	1					
ANR	422603	AssignmentExpression	use_sib = false		422286	2		=			
ANR	422604	Identifier	false		422286	0					
ANR	422605	Identifier	false		422286	1					
ANR	422606	IdentifierDeclStatement	int sib = 0 ;	1016:1:26899:26910	422286	20	True				
ANR	422607	IdentifierDecl	sib = 0		422286	0					
ANR	422608	IdentifierDeclType	int		422286	0					
ANR	422609	Identifier	sib		422286	1					
ANR	422610	AssignmentExpression	sib = 0		422286	2		=			
ANR	422611	Identifier	sib		422286	0					
ANR	422612	PrimaryExpression	0		422286	1					
ANR	422613	IfStatement	if ( offset == 0 )		422286	21					
ANR	422614	Condition	offset == 0	1018:5:26924:26934	422286	0	True				
ANR	422615	EqualityExpression	offset == 0		422286	0		==			
ANR	422616	Identifier	offset		422286	0					
ANR	422617	PrimaryExpression	0		422286	1					
ANR	422618	CompoundStatement		62:18:1189:1189	422286	1					
ANR	422619	ExpressionStatement	mod = 0	1019:2:26941:26948	422286	0	True				
ANR	422620	AssignmentExpression	mod = 0		422286	0		=			
ANR	422621	Identifier	mod		422286	0					
ANR	422622	PrimaryExpression	0		422286	1					
ANR	422623	ElseStatement	else		422286	0					
ANR	422624	IfStatement	if ( offset < 128 && offset > - 129 )		422286	0					
ANR	422625	Condition	offset < 128 && offset > - 129	1020:12:26962:26990	422286	0	True				
ANR	422626	AndExpression	offset < 128 && offset > - 129		422286	0		&&			
ANR	422627	RelationalExpression	offset < 128		422286	0		<			
ANR	422628	Identifier	offset		422286	0					
ANR	422629	PrimaryExpression	128		422286	1					
ANR	422630	RelationalExpression	offset > - 129		422286	1		>			
ANR	422631	Identifier	offset		422286	0					
ANR	422632	UnaryOperationExpression	- 129		422286	1					
ANR	422633	UnaryOperator	-		422286	0					
ANR	422634	PrimaryExpression	129		422286	1					
ANR	422635	CompoundStatement		64:43:1245:1245	422286	1					
ANR	422636	ExpressionStatement	mod = 1	1021:2:26997:27004	422286	0	True				
ANR	422637	AssignmentExpression	mod = 1		422286	0		=			
ANR	422638	Identifier	mod		422286	0					
ANR	422639	PrimaryExpression	1		422286	1					
ANR	422640	ElseStatement	else		422286	0					
ANR	422641	CompoundStatement		66:8:1266:1266	422286	0					
ANR	422642	ExpressionStatement	mod = 2	1023:2:27018:27025	422286	0	True				
ANR	422643	AssignmentExpression	mod = 2		422286	0		=			
ANR	422644	Identifier	mod		422286	0					
ANR	422645	PrimaryExpression	2		422286	1					
ANR	422646	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD )		422286	22					
ANR	422647	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD	1026:5:27036:27068	422286	0	True				
ANR	422648	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		422286	0		&			
ANR	422649	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422650	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422651	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422652	PtrMemberAccess	op -> operands		422286	0					
ANR	422653	Identifier	op		422286	0					
ANR	422654	Identifier	operands		422286	1					
ANR	422655	PrimaryExpression	0		422286	1					
ANR	422656	Identifier	regs		422286	1					
ANR	422657	PrimaryExpression	0		422286	1					
ANR	422658	Identifier	OT_WORD		422286	1					
ANR	422659	CompoundStatement		70:40:1323:1323	422286	1					
ANR	422660	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		422286	0					
ANR	422661	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1027:6:27079:27150	422286	0	True				
ANR	422662	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		422286	0		&&			
ANR	422663	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		422286	0		==			
ANR	422664	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422665	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422666	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422667	PtrMemberAccess	op -> operands		422286	0					
ANR	422668	Identifier	op		422286	0					
ANR	422669	Identifier	operands		422286	1					
ANR	422670	PrimaryExpression	0		422286	1					
ANR	422671	Identifier	regs		422286	1					
ANR	422672	PrimaryExpression	0		422286	1					
ANR	422673	Identifier	X86R_BX		422286	1					
ANR	422674	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		422286	1		==			
ANR	422675	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422676	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422677	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422678	PtrMemberAccess	op -> operands		422286	0					
ANR	422679	Identifier	op		422286	0					
ANR	422680	Identifier	operands		422286	1					
ANR	422681	PrimaryExpression	0		422286	1					
ANR	422682	Identifier	regs		422286	1					
ANR	422683	PrimaryExpression	1		422286	1					
ANR	422684	Identifier	X86R_SI		422286	1					
ANR	422685	CompoundStatement		71:80:1405:1405	422286	1					
ANR	422686	ExpressionStatement	rm = B0000	1028:3:27158:27168	422286	0	True				
ANR	422687	AssignmentExpression	rm = B0000		422286	0		=			
ANR	422688	Identifier	rm		422286	0					
ANR	422689	Identifier	B0000		422286	1					
ANR	422690	ElseStatement	else		422286	0					
ANR	422691	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		422286	0					
ANR	422692	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1029:13:27183:27254	422286	0	True				
ANR	422693	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		422286	0		&&			
ANR	422694	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		422286	0		==			
ANR	422695	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422696	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422697	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422698	PtrMemberAccess	op -> operands		422286	0					
ANR	422699	Identifier	op		422286	0					
ANR	422700	Identifier	operands		422286	1					
ANR	422701	PrimaryExpression	0		422286	1					
ANR	422702	Identifier	regs		422286	1					
ANR	422703	PrimaryExpression	0		422286	1					
ANR	422704	Identifier	X86R_BX		422286	1					
ANR	422705	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		422286	1		==			
ANR	422706	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422707	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422708	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422709	PtrMemberAccess	op -> operands		422286	0					
ANR	422710	Identifier	op		422286	0					
ANR	422711	Identifier	operands		422286	1					
ANR	422712	PrimaryExpression	0		422286	1					
ANR	422713	Identifier	regs		422286	1					
ANR	422714	PrimaryExpression	1		422286	1					
ANR	422715	Identifier	X86R_DI		422286	1					
ANR	422716	CompoundStatement		73:87:1509:1509	422286	1					
ANR	422717	ExpressionStatement	rm = B0001	1030:3:27262:27272	422286	0	True				
ANR	422718	AssignmentExpression	rm = B0001		422286	0		=			
ANR	422719	Identifier	rm		422286	0					
ANR	422720	Identifier	B0001		422286	1					
ANR	422721	ElseStatement	else		422286	0					
ANR	422722	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		422286	0					
ANR	422723	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1031:13:27287:27358	422286	0	True				
ANR	422724	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		422286	0		&&			
ANR	422725	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		422286	0		==			
ANR	422726	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422727	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422728	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422729	PtrMemberAccess	op -> operands		422286	0					
ANR	422730	Identifier	op		422286	0					
ANR	422731	Identifier	operands		422286	1					
ANR	422732	PrimaryExpression	0		422286	1					
ANR	422733	Identifier	regs		422286	1					
ANR	422734	PrimaryExpression	0		422286	1					
ANR	422735	Identifier	X86R_BP		422286	1					
ANR	422736	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		422286	1		==			
ANR	422737	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422738	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422739	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422740	PtrMemberAccess	op -> operands		422286	0					
ANR	422741	Identifier	op		422286	0					
ANR	422742	Identifier	operands		422286	1					
ANR	422743	PrimaryExpression	0		422286	1					
ANR	422744	Identifier	regs		422286	1					
ANR	422745	PrimaryExpression	1		422286	1					
ANR	422746	Identifier	X86R_SI		422286	1					
ANR	422747	CompoundStatement		75:87:1613:1613	422286	1					
ANR	422748	ExpressionStatement	rm = B0010	1032:3:27366:27376	422286	0	True				
ANR	422749	AssignmentExpression	rm = B0010		422286	0		=			
ANR	422750	Identifier	rm		422286	0					
ANR	422751	Identifier	B0010		422286	1					
ANR	422752	ElseStatement	else		422286	0					
ANR	422753	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		422286	0					
ANR	422754	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1033:13:27391:27462	422286	0	True				
ANR	422755	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		422286	0		&&			
ANR	422756	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		422286	0		==			
ANR	422757	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422758	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422759	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422760	PtrMemberAccess	op -> operands		422286	0					
ANR	422761	Identifier	op		422286	0					
ANR	422762	Identifier	operands		422286	1					
ANR	422763	PrimaryExpression	0		422286	1					
ANR	422764	Identifier	regs		422286	1					
ANR	422765	PrimaryExpression	0		422286	1					
ANR	422766	Identifier	X86R_BP		422286	1					
ANR	422767	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		422286	1		==			
ANR	422768	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422769	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422770	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422771	PtrMemberAccess	op -> operands		422286	0					
ANR	422772	Identifier	op		422286	0					
ANR	422773	Identifier	operands		422286	1					
ANR	422774	PrimaryExpression	0		422286	1					
ANR	422775	Identifier	regs		422286	1					
ANR	422776	PrimaryExpression	1		422286	1					
ANR	422777	Identifier	X86R_DI		422286	1					
ANR	422778	CompoundStatement		77:87:1717:1717	422286	1					
ANR	422779	ExpressionStatement	rm = B0011	1034:3:27470:27480	422286	0	True				
ANR	422780	AssignmentExpression	rm = B0011		422286	0		=			
ANR	422781	Identifier	rm		422286	0					
ANR	422782	Identifier	B0011		422286	1					
ANR	422783	ElseStatement	else		422286	0					
ANR	422784	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		422286	0					
ANR	422785	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1035:13:27495:27561	422286	0	True				
ANR	422786	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1		422286	0		&&			
ANR	422787	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI		422286	0		==			
ANR	422788	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422789	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422790	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422791	PtrMemberAccess	op -> operands		422286	0					
ANR	422792	Identifier	op		422286	0					
ANR	422793	Identifier	operands		422286	1					
ANR	422794	PrimaryExpression	0		422286	1					
ANR	422795	Identifier	regs		422286	1					
ANR	422796	PrimaryExpression	0		422286	1					
ANR	422797	Identifier	X86R_SI		422286	1					
ANR	422798	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		422286	1		==			
ANR	422799	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422800	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422801	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422802	PtrMemberAccess	op -> operands		422286	0					
ANR	422803	Identifier	op		422286	0					
ANR	422804	Identifier	operands		422286	1					
ANR	422805	PrimaryExpression	0		422286	1					
ANR	422806	Identifier	regs		422286	1					
ANR	422807	PrimaryExpression	1		422286	1					
ANR	422808	UnaryOperationExpression	- 1		422286	1					
ANR	422809	UnaryOperator	-		422286	0					
ANR	422810	PrimaryExpression	1		422286	1					
ANR	422811	CompoundStatement		79:82:1816:1816	422286	1					
ANR	422812	ExpressionStatement	rm = B0100	1036:3:27569:27579	422286	0	True				
ANR	422813	AssignmentExpression	rm = B0100		422286	0		=			
ANR	422814	Identifier	rm		422286	0					
ANR	422815	Identifier	B0100		422286	1					
ANR	422816	ElseStatement	else		422286	0					
ANR	422817	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		422286	0					
ANR	422818	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1037:13:27594:27660	422286	0	True				
ANR	422819	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1		422286	0		&&			
ANR	422820	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI		422286	0		==			
ANR	422821	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422822	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422823	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422824	PtrMemberAccess	op -> operands		422286	0					
ANR	422825	Identifier	op		422286	0					
ANR	422826	Identifier	operands		422286	1					
ANR	422827	PrimaryExpression	0		422286	1					
ANR	422828	Identifier	regs		422286	1					
ANR	422829	PrimaryExpression	0		422286	1					
ANR	422830	Identifier	X86R_DI		422286	1					
ANR	422831	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		422286	1		==			
ANR	422832	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422833	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422834	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422835	PtrMemberAccess	op -> operands		422286	0					
ANR	422836	Identifier	op		422286	0					
ANR	422837	Identifier	operands		422286	1					
ANR	422838	PrimaryExpression	0		422286	1					
ANR	422839	Identifier	regs		422286	1					
ANR	422840	PrimaryExpression	1		422286	1					
ANR	422841	UnaryOperationExpression	- 1		422286	1					
ANR	422842	UnaryOperator	-		422286	0					
ANR	422843	PrimaryExpression	1		422286	1					
ANR	422844	CompoundStatement		81:82:1915:1915	422286	1					
ANR	422845	ExpressionStatement	rm = B0101	1038:3:27668:27678	422286	0	True				
ANR	422846	AssignmentExpression	rm = B0101		422286	0		=			
ANR	422847	Identifier	rm		422286	0					
ANR	422848	Identifier	B0101		422286	1					
ANR	422849	ElseStatement	else		422286	0					
ANR	422850	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		422286	0					
ANR	422851	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1	1039:13:27693:27759	422286	0	True				
ANR	422852	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1		422286	0		&&			
ANR	422853	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		422286	0		==			
ANR	422854	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	422855	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422856	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422857	PtrMemberAccess	op -> operands		422286	0					
ANR	422858	Identifier	op		422286	0					
ANR	422859	Identifier	operands		422286	1					
ANR	422860	PrimaryExpression	0		422286	1					
ANR	422861	Identifier	regs		422286	1					
ANR	422862	PrimaryExpression	0		422286	1					
ANR	422863	Identifier	X86R_BX		422286	1					
ANR	422864	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		422286	1		==			
ANR	422865	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422866	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422867	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422868	PtrMemberAccess	op -> operands		422286	0					
ANR	422869	Identifier	op		422286	0					
ANR	422870	Identifier	operands		422286	1					
ANR	422871	PrimaryExpression	0		422286	1					
ANR	422872	Identifier	regs		422286	1					
ANR	422873	PrimaryExpression	1		422286	1					
ANR	422874	UnaryOperationExpression	- 1		422286	1					
ANR	422875	UnaryOperator	-		422286	0					
ANR	422876	PrimaryExpression	1		422286	1					
ANR	422877	CompoundStatement		83:82:2014:2014	422286	1					
ANR	422878	ExpressionStatement	rm = B0111	1040:3:27767:27777	422286	0	True				
ANR	422879	AssignmentExpression	rm = B0111		422286	0		=			
ANR	422880	Identifier	rm		422286	0					
ANR	422881	Identifier	B0111		422286	1					
ANR	422882	ElseStatement	else		422286	0					
ANR	422883	CompoundStatement		85:9:2040:2040	422286	0					
ANR	422884	ReturnStatement	return - 1 ;	1043:3:27855:27864	422286	0	True				
ANR	422885	UnaryOperationExpression	- 1		422286	0					
ANR	422886	UnaryOperator	-		422286	0					
ANR	422887	PrimaryExpression	1		422286	1					
ANR	422888	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1045:2:27872:27908	422286	1	True				
ANR	422889	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		422286	0		=			
ANR	422890	Identifier	modrm		422286	0					
ANR	422891	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		422286	1		|			
ANR	422892	ShiftExpression	mod << 6		422286	0		<<			
ANR	422893	Identifier	mod		422286	0					
ANR	422894	PrimaryExpression	6		422286	1					
ANR	422895	InclusiveOrExpression	( reg << 3 ) | rm		422286	1		|			
ANR	422896	ShiftExpression	reg << 3		422286	0		<<			
ANR	422897	Identifier	reg		422286	0					
ANR	422898	PrimaryExpression	3		422286	1					
ANR	422899	Identifier	rm		422286	1					
ANR	422900	ElseStatement	else		422286	0					
ANR	422901	CompoundStatement		104:2:2442:2486	422286	0					
ANR	422902	IfStatement	if ( op -> operands [ 0 ] . extended )		422286	0					
ANR	422903	Condition	op -> operands [ 0 ] . extended	1048:6:27933:27956	422286	0	True				
ANR	422904	MemberAccess	op -> operands [ 0 ] . extended		422286	0					
ANR	422905	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422906	PtrMemberAccess	op -> operands		422286	0					
ANR	422907	Identifier	op		422286	0					
ANR	422908	Identifier	operands		422286	1					
ANR	422909	PrimaryExpression	0		422286	1					
ANR	422910	Identifier	extended		422286	1					
ANR	422911	CompoundStatement		92:32:2211:2211	422286	1					
ANR	422912	ExpressionStatement	rm = op -> operands [ 0 ] . reg	1049:3:27964:27988	422286	0	True				
ANR	422913	AssignmentExpression	rm = op -> operands [ 0 ] . reg		422286	0		=			
ANR	422914	Identifier	rm		422286	0					
ANR	422915	MemberAccess	op -> operands [ 0 ] . reg		422286	1					
ANR	422916	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422917	PtrMemberAccess	op -> operands		422286	0					
ANR	422918	Identifier	op		422286	0					
ANR	422919	Identifier	operands		422286	1					
ANR	422920	PrimaryExpression	0		422286	1					
ANR	422921	Identifier	reg		422286	1					
ANR	422922	ElseStatement	else		422286	0					
ANR	422923	CompoundStatement		94:9:2251:2251	422286	0					
ANR	422924	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	1051:3:28004:28032	422286	0	True				
ANR	422925	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		422286	0		=			
ANR	422926	Identifier	rm		422286	0					
ANR	422927	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	1					
ANR	422928	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422929	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422930	PtrMemberAccess	op -> operands		422286	0					
ANR	422931	Identifier	op		422286	0					
ANR	422932	Identifier	operands		422286	1					
ANR	422933	PrimaryExpression	0		422286	1					
ANR	422934	Identifier	regs		422286	1					
ANR	422935	PrimaryExpression	0		422286	1					
ANR	422936	IfStatement	if ( rm == 5 && mod == 0 )		422286	1					
ANR	422937	Condition	rm == 5 && mod == 0	1054:6:28101:28119	422286	0	True				
ANR	422938	AndExpression	rm == 5 && mod == 0		422286	0		&&			
ANR	422939	EqualityExpression	rm == 5		422286	0		==			
ANR	422940	Identifier	rm		422286	0					
ANR	422941	PrimaryExpression	5		422286	1					
ANR	422942	EqualityExpression	mod == 0		422286	1		==			
ANR	422943	Identifier	mod		422286	0					
ANR	422944	PrimaryExpression	0		422286	1					
ANR	422945	CompoundStatement		98:27:2374:2374	422286	1					
ANR	422946	ExpressionStatement	mod = 1	1055:3:28127:28134	422286	0	True				
ANR	422947	AssignmentExpression	mod = 1		422286	0		=			
ANR	422948	Identifier	mod		422286	0					
ANR	422949	PrimaryExpression	1		422286	1					
ANR	422950	IdentifierDeclStatement	int index = op -> operands [ 0 ] . regs [ 1 ] ;	1059:2:28151:28186	422286	2	True				
ANR	422951	IdentifierDecl	index = op -> operands [ 0 ] . regs [ 1 ]		422286	0					
ANR	422952	IdentifierDeclType	int		422286	0					
ANR	422953	Identifier	index		422286	1					
ANR	422954	AssignmentExpression	index = op -> operands [ 0 ] . regs [ 1 ]		422286	2		=			
ANR	422955	Identifier	index		422286	0					
ANR	422956	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		422286	1					
ANR	422957	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	422958	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422959	PtrMemberAccess	op -> operands		422286	0					
ANR	422960	Identifier	op		422286	0					
ANR	422961	Identifier	operands		422286	1					
ANR	422962	PrimaryExpression	0		422286	1					
ANR	422963	Identifier	regs		422286	1					
ANR	422964	PrimaryExpression	1		422286	1					
ANR	422965	IdentifierDeclStatement	int scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] ) ;	1060:2:28190:28234	422286	3	True				
ANR	422966	IdentifierDecl	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		422286	0					
ANR	422967	IdentifierDeclType	int		422286	0					
ANR	422968	Identifier	scale		422286	1					
ANR	422969	AssignmentExpression	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		422286	2		=			
ANR	422970	Identifier	scale		422286	0					
ANR	422971	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 1 ] )		422286	1					
ANR	422972	Callee	getsib		422286	0					
ANR	422973	Identifier	getsib		422286	0					
ANR	422974	ArgumentList	op -> operands [ 0 ] . scale [ 1 ]		422286	1					
ANR	422975	Argument	op -> operands [ 0 ] . scale [ 1 ]		422286	0					
ANR	422976	ArrayIndexing	op -> operands [ 0 ] . scale [ 1 ]		422286	0					
ANR	422977	MemberAccess	op -> operands [ 0 ] . scale		422286	0					
ANR	422978	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	422979	PtrMemberAccess	op -> operands		422286	0					
ANR	422980	Identifier	op		422286	0					
ANR	422981	Identifier	operands		422286	1					
ANR	422982	PrimaryExpression	0		422286	1					
ANR	422983	Identifier	scale		422286	1					
ANR	422984	PrimaryExpression	1		422286	1					
ANR	422985	IfStatement	if ( index != - 1 )		422286	4					
ANR	422986	Condition	index != - 1	1061:6:28242:28252	422286	0	True				
ANR	422987	EqualityExpression	index != - 1		422286	0		!=			
ANR	422988	Identifier	index		422286	0					
ANR	422989	UnaryOperationExpression	- 1		422286	1					
ANR	422990	UnaryOperator	-		422286	0					
ANR	422991	PrimaryExpression	1		422286	1					
ANR	422992	CompoundStatement		105:19:2507:2507	422286	1					
ANR	422993	ExpressionStatement	use_sib = true	1062:3:28260:28274	422286	0	True				
ANR	422994	AssignmentExpression	use_sib = true		422286	0		=			
ANR	422995	Identifier	use_sib		422286	0					
ANR	422996	Identifier	true		422286	1					
ANR	422997	ExpressionStatement	sib = ( scale << 6 ) | ( index << 3 ) | rm	1063:3:28279:28317	422286	1	True				
ANR	422998	AssignmentExpression	sib = ( scale << 6 ) | ( index << 3 ) | rm		422286	0		=			
ANR	422999	Identifier	sib		422286	0					
ANR	423000	InclusiveOrExpression	( scale << 6 ) | ( index << 3 ) | rm		422286	1		|			
ANR	423001	ShiftExpression	scale << 6		422286	0		<<			
ANR	423002	Identifier	scale		422286	0					
ANR	423003	PrimaryExpression	6		422286	1					
ANR	423004	InclusiveOrExpression	( index << 3 ) | rm		422286	1		|			
ANR	423005	ShiftExpression	index << 3		422286	0		<<			
ANR	423006	Identifier	index		422286	0					
ANR	423007	PrimaryExpression	3		422286	1					
ANR	423008	Identifier	rm		422286	1					
ANR	423009	ElseStatement	else		422286	0					
ANR	423010	IfStatement	if ( rm == 4 )		422286	0					
ANR	423011	Condition	rm == 4	1064:13:28332:28338	422286	0	True				
ANR	423012	EqualityExpression	rm == 4		422286	0		==			
ANR	423013	Identifier	rm		422286	0					
ANR	423014	PrimaryExpression	4		422286	1					
ANR	423015	CompoundStatement		108:22:2593:2593	422286	1					
ANR	423016	ExpressionStatement	use_sib = true	1065:3:28346:28360	422286	0	True				
ANR	423017	AssignmentExpression	use_sib = true		422286	0		=			
ANR	423018	Identifier	use_sib		422286	0					
ANR	423019	Identifier	true		422286	1					
ANR	423020	ExpressionStatement	sib = 0x24	1066:3:28365:28375	422286	1	True				
ANR	423021	AssignmentExpression	sib = 0x24		422286	0		=			
ANR	423022	Identifier	sib		422286	0					
ANR	423023	PrimaryExpression	0x24		422286	1					
ANR	423024	IfStatement	if ( use_sib )		422286	5					
ANR	423025	Condition	use_sib	1068:6:28387:28393	422286	0	True				
ANR	423026	Identifier	use_sib		422286	0					
ANR	423027	CompoundStatement		112:15:2648:2648	422286	1					
ANR	423028	ExpressionStatement	rm = B0100	1069:3:28401:28411	422286	0	True				
ANR	423029	AssignmentExpression	rm = B0100		422286	0		=			
ANR	423030	Identifier	rm		422286	0					
ANR	423031	Identifier	B0100		422286	1					
ANR	423032	IfStatement	if ( rip_rel )		422286	6					
ANR	423033	Condition	rip_rel	1071:6:28423:28429	422286	0	True				
ANR	423034	Identifier	rip_rel		422286	0					
ANR	423035	CompoundStatement		115:15:2684:2684	422286	1					
ANR	423036	ExpressionStatement	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101	1072:3:28437:28478	422286	0	True				
ANR	423037	AssignmentExpression	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101		422286	0		=			
ANR	423038	Identifier	modrm		422286	0					
ANR	423039	InclusiveOrExpression	( B0000 << 6 ) | ( reg << 3 ) | B0101		422286	1		|			
ANR	423040	ShiftExpression	B0000 << 6		422286	0		<<			
ANR	423041	Identifier	B0000		422286	0					
ANR	423042	PrimaryExpression	6		422286	1					
ANR	423043	InclusiveOrExpression	( reg << 3 ) | B0101		422286	1		|			
ANR	423044	ShiftExpression	reg << 3		422286	0		<<			
ANR	423045	Identifier	reg		422286	0					
ANR	423046	PrimaryExpression	3		422286	1					
ANR	423047	Identifier	B0101		422286	1					
ANR	423048	ExpressionStatement	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101	1073:3:28483:28524	422286	1	True				
ANR	423049	AssignmentExpression	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101		422286	0		=			
ANR	423050	Identifier	sib		422286	0					
ANR	423051	InclusiveOrExpression	( scale << 6 ) | ( B0100 << 3 ) | B0101		422286	1		|			
ANR	423052	ShiftExpression	scale << 6		422286	0		<<			
ANR	423053	Identifier	scale		422286	0					
ANR	423054	PrimaryExpression	6		422286	1					
ANR	423055	InclusiveOrExpression	( B0100 << 3 ) | B0101		422286	1		|			
ANR	423056	ShiftExpression	B0100 << 3		422286	0		<<			
ANR	423057	Identifier	B0100		422286	0					
ANR	423058	PrimaryExpression	3		422286	1					
ANR	423059	Identifier	B0101		422286	1					
ANR	423060	ElseStatement	else		422286	0					
ANR	423061	CompoundStatement		118:9:2787:2787	422286	0					
ANR	423062	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1075:3:28540:28576	422286	0	True				
ANR	423063	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		422286	0		=			
ANR	423064	Identifier	modrm		422286	0					
ANR	423065	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		422286	1		|			
ANR	423066	ShiftExpression	mod << 6		422286	0		<<			
ANR	423067	Identifier	mod		422286	0					
ANR	423068	PrimaryExpression	6		422286	1					
ANR	423069	InclusiveOrExpression	( reg << 3 ) | rm		422286	1		|			
ANR	423070	ShiftExpression	reg << 3		422286	0		<<			
ANR	423071	Identifier	reg		422286	0					
ANR	423072	PrimaryExpression	3		422286	1					
ANR	423073	Identifier	rm		422286	1					
ANR	423074	ExpressionStatement	modrm |= 1 << 3	1077:2:28584:28597	422286	7	True				
ANR	423075	AssignmentExpression	modrm |= 1 << 3		422286	0		|=			
ANR	423076	Identifier	modrm		422286	0					
ANR	423077	ShiftExpression	1 << 3		422286	1		<<			
ANR	423078	PrimaryExpression	1		422286	0					
ANR	423079	PrimaryExpression	3		422286	1					
ANR	423080	IfStatement	if ( use_rex )		422286	23					
ANR	423081	Condition	use_rex	1080:5:28608:28614	422286	0	True				
ANR	423082	Identifier	use_rex		422286	0					
ANR	423083	CompoundStatement		124:14:2869:2869	422286	1					
ANR	423084	ExpressionStatement	data [ l ++ ] = rex	1081:2:28621:28636	422286	0	True				
ANR	423085	AssignmentExpression	data [ l ++ ] = rex		422286	0		=			
ANR	423086	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423087	Identifier	data		422286	0					
ANR	423088	PostIncDecOperationExpression	l ++		422286	1					
ANR	423089	Identifier	l		422286	0					
ANR	423090	IncDec	++		422286	1					
ANR	423091	Identifier	rex		422286	1					
ANR	423092	ExpressionStatement	data [ l ++ ] = opcode	1083:1:28642:28660	422286	24	True				
ANR	423093	AssignmentExpression	data [ l ++ ] = opcode		422286	0		=			
ANR	423094	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423095	Identifier	data		422286	0					
ANR	423096	PostIncDecOperationExpression	l ++		422286	1					
ANR	423097	Identifier	l		422286	0					
ANR	423098	IncDec	++		422286	1					
ANR	423099	Identifier	opcode		422286	1					
ANR	423100	ExpressionStatement	data [ l ++ ] = modrm	1084:1:28663:28680	422286	25	True				
ANR	423101	AssignmentExpression	data [ l ++ ] = modrm		422286	0		=			
ANR	423102	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423103	Identifier	data		422286	0					
ANR	423104	PostIncDecOperationExpression	l ++		422286	1					
ANR	423105	Identifier	l		422286	0					
ANR	423106	IncDec	++		422286	1					
ANR	423107	Identifier	modrm		422286	1					
ANR	423108	IfStatement	if ( use_sib )		422286	26					
ANR	423109	Condition	use_sib	1085:5:28687:28693	422286	0	True				
ANR	423110	Identifier	use_sib		422286	0					
ANR	423111	CompoundStatement		129:14:2948:2948	422286	1					
ANR	423112	ExpressionStatement	data [ l ++ ] = sib	1086:2:28700:28715	422286	0	True				
ANR	423113	AssignmentExpression	data [ l ++ ] = sib		422286	0		=			
ANR	423114	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423115	Identifier	data		422286	0					
ANR	423116	PostIncDecOperationExpression	l ++		422286	1					
ANR	423117	Identifier	l		422286	0					
ANR	423118	IncDec	++		422286	1					
ANR	423119	Identifier	sib		422286	1					
ANR	423120	IfStatement	if ( mod == 1 )		422286	27					
ANR	423121	Condition	mod == 1	1089:5:28735:28742	422286	0	True				
ANR	423122	EqualityExpression	mod == 1		422286	0		==			
ANR	423123	Identifier	mod		422286	0					
ANR	423124	PrimaryExpression	1		422286	1					
ANR	423125	CompoundStatement		133:15:2997:2997	422286	1					
ANR	423126	ExpressionStatement	data [ l ++ ] = offset	1090:2:28749:28767	422286	0	True				
ANR	423127	AssignmentExpression	data [ l ++ ] = offset		422286	0		=			
ANR	423128	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423129	Identifier	data		422286	0					
ANR	423130	PostIncDecOperationExpression	l ++		422286	1					
ANR	423131	Identifier	l		422286	0					
ANR	423132	IncDec	++		422286	1					
ANR	423133	Identifier	offset		422286	1					
ANR	423134	ElseStatement	else		422286	0					
ANR	423135	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2 )		422286	0					
ANR	423136	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2	1091:12:28781:28825	422286	0	True				
ANR	423137	AndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2		422286	0		&&			
ANR	423138	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		422286	0		&			
ANR	423139	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		422286	0					
ANR	423140	MemberAccess	op -> operands [ 0 ] . regs		422286	0					
ANR	423141	ArrayIndexing	op -> operands [ 0 ]		422286	0					
ANR	423142	PtrMemberAccess	op -> operands		422286	0					
ANR	423143	Identifier	op		422286	0					
ANR	423144	Identifier	operands		422286	1					
ANR	423145	PrimaryExpression	0		422286	1					
ANR	423146	Identifier	regs		422286	1					
ANR	423147	PrimaryExpression	0		422286	1					
ANR	423148	Identifier	OT_WORD		422286	1					
ANR	423149	EqualityExpression	mod == 2		422286	1		==			
ANR	423150	Identifier	mod		422286	0					
ANR	423151	PrimaryExpression	2		422286	1					
ANR	423152	CompoundStatement		135:59:3080:3080	422286	1					
ANR	423153	ExpressionStatement	data [ l ++ ] = offset	1092:2:28832:28850	422286	0	True				
ANR	423154	AssignmentExpression	data [ l ++ ] = offset		422286	0		=			
ANR	423155	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423156	Identifier	data		422286	0					
ANR	423157	PostIncDecOperationExpression	l ++		422286	1					
ANR	423158	Identifier	l		422286	0					
ANR	423159	IncDec	++		422286	1					
ANR	423160	Identifier	offset		422286	1					
ANR	423161	ExpressionStatement	data [ l ++ ] = offset >> 8	1093:2:28854:28877	422286	1	True				
ANR	423162	AssignmentExpression	data [ l ++ ] = offset >> 8		422286	0		=			
ANR	423163	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423164	Identifier	data		422286	0					
ANR	423165	PostIncDecOperationExpression	l ++		422286	1					
ANR	423166	Identifier	l		422286	0					
ANR	423167	IncDec	++		422286	1					
ANR	423168	ShiftExpression	offset >> 8		422286	1		>>			
ANR	423169	Identifier	offset		422286	0					
ANR	423170	PrimaryExpression	8		422286	1					
ANR	423171	ElseStatement	else		422286	0					
ANR	423172	IfStatement	if ( mod == 2 || rip_rel )		422286	0					
ANR	423173	Condition	mod == 2 || rip_rel	1094:12:28891:28909	422286	0	True				
ANR	423174	OrExpression	mod == 2 || rip_rel		422286	0		||			
ANR	423175	EqualityExpression	mod == 2		422286	0		==			
ANR	423176	Identifier	mod		422286	0					
ANR	423177	PrimaryExpression	2		422286	1					
ANR	423178	Identifier	rip_rel		422286	1					
ANR	423179	CompoundStatement		138:33:3164:3164	422286	1					
ANR	423180	ExpressionStatement	data [ l ++ ] = offset	1095:2:28916:28934	422286	0	True				
ANR	423181	AssignmentExpression	data [ l ++ ] = offset		422286	0		=			
ANR	423182	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423183	Identifier	data		422286	0					
ANR	423184	PostIncDecOperationExpression	l ++		422286	1					
ANR	423185	Identifier	l		422286	0					
ANR	423186	IncDec	++		422286	1					
ANR	423187	Identifier	offset		422286	1					
ANR	423188	ExpressionStatement	data [ l ++ ] = offset >> 8	1096:2:28938:28961	422286	1	True				
ANR	423189	AssignmentExpression	data [ l ++ ] = offset >> 8		422286	0		=			
ANR	423190	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423191	Identifier	data		422286	0					
ANR	423192	PostIncDecOperationExpression	l ++		422286	1					
ANR	423193	Identifier	l		422286	0					
ANR	423194	IncDec	++		422286	1					
ANR	423195	ShiftExpression	offset >> 8		422286	1		>>			
ANR	423196	Identifier	offset		422286	0					
ANR	423197	PrimaryExpression	8		422286	1					
ANR	423198	ExpressionStatement	data [ l ++ ] = offset >> 16	1097:2:28965:28989	422286	2	True				
ANR	423199	AssignmentExpression	data [ l ++ ] = offset >> 16		422286	0		=			
ANR	423200	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423201	Identifier	data		422286	0					
ANR	423202	PostIncDecOperationExpression	l ++		422286	1					
ANR	423203	Identifier	l		422286	0					
ANR	423204	IncDec	++		422286	1					
ANR	423205	ShiftExpression	offset >> 16		422286	1		>>			
ANR	423206	Identifier	offset		422286	0					
ANR	423207	PrimaryExpression	16		422286	1					
ANR	423208	ExpressionStatement	data [ l ++ ] = offset >> 24	1098:2:28993:29017	422286	3	True				
ANR	423209	AssignmentExpression	data [ l ++ ] = offset >> 24		422286	0		=			
ANR	423210	ArrayIndexing	data [ l ++ ]		422286	0					
ANR	423211	Identifier	data		422286	0					
ANR	423212	PostIncDecOperationExpression	l ++		422286	1					
ANR	423213	Identifier	l		422286	0					
ANR	423214	IncDec	++		422286	1					
ANR	423215	ShiftExpression	offset >> 24		422286	1		>>			
ANR	423216	Identifier	offset		422286	0					
ANR	423217	PrimaryExpression	24		422286	1					
ANR	423218	ReturnStatement	return l ;	1101:1:29024:29032	422286	28	True				
ANR	423219	Identifier	l		422286	0					
ANR	423220	ReturnType	static int		422286	1					
ANR	423221	Identifier	opdec		422286	2					
ANR	423222	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		422286	3					
ANR	423223	Parameter	RAsm * a	957:17:25709:25715	422286	0	True				
ANR	423224	ParameterType	RAsm *		422286	0					
ANR	423225	Identifier	a		422286	1					
ANR	423226	Parameter	ut8 * data	957:26:25718:25726	422286	1	True				
ANR	423227	ParameterType	ut8 *		422286	0					
ANR	423228	Identifier	data		422286	1					
ANR	423229	Parameter	const Opcode * op	957:37:25729:25744	422286	2	True				
ANR	423230	ParameterType	const Opcode *		422286	0					
ANR	423231	Identifier	op		422286	1					
ANR	423232	CFGEntryNode	ENTRY		422286		True				
ANR	423233	CFGExitNode	EXIT		422286		True				
ANR	423234	Symbol	op -> operands [ 0 ] . offset_sign		422286						
ANR	423235	Symbol	mod		422286						
ANR	423236	Symbol	data		422286						
ANR	423237	Symbol	* op		422286						
ANR	423238	Symbol	op -> operands [ 0 ] . dest_size		422286						
ANR	423239	Symbol	opcode		422286						
ANR	423240	Symbol	modrm		422286						
ANR	423241	Symbol	op -> operands [ 0 ] . scale		422286						
ANR	423242	Symbol	op -> operands [ 0 ] . extended		422286						
ANR	423243	Symbol	* op -> operands		422286						
ANR	423244	Symbol	reg		422286						
ANR	423245	Symbol	op -> operands [ 0 ] . reg		422286						
ANR	423246	Symbol	op -> operands [ 0 ] . offset		422286						
ANR	423247	Symbol	B0111		422286						
ANR	423248	Symbol	OT_BYTE		422286						
ANR	423249	Symbol	a -> bits		422286						
ANR	423250	Symbol	rex		422286						
ANR	423251	Symbol	offset		422286						
ANR	423252	Symbol	use_sib		422286						
ANR	423253	Symbol	index		422286						
ANR	423254	Symbol	size		422286						
ANR	423255	Symbol	* op -> operands [ 0 ] . scale		422286						
ANR	423256	Symbol	true		422286						
ANR	423257	Symbol	* * * op		422286						
ANR	423258	Symbol	rm		422286						
ANR	423259	Symbol	X86R_DI		422286						
ANR	423260	Symbol	B0100		422286						
ANR	423261	Symbol	B0101		422286						
ANR	423262	Symbol	op -> operands [ 0 ] . regs		422286						
ANR	423263	Symbol	getsib		422286						
ANR	423264	Symbol	OT_QWORD		422286						
ANR	423265	Symbol	scale		422286						
ANR	423266	Symbol	sib		422286						
ANR	423267	Symbol	* * op		422286						
ANR	423268	Symbol	op -> operands [ 0 ] . type		422286						
ANR	423269	Symbol	B0010		422286						
ANR	423270	Symbol	B0011		422286						
ANR	423271	Symbol	OT_MEMORY		422286						
ANR	423272	Symbol	use_rex		422286						
ANR	423273	Symbol	a		422286						
ANR	423274	Symbol	op		422286						
ANR	423275	Symbol	OT_WORD		422286						
ANR	423276	Symbol	X86R_BP		422286						
ANR	423277	Symbol	op -> operands [ 0 ] . explicit_size		422286						
ANR	423278	Symbol	ALL_SIZE		422286						
ANR	423279	Symbol	false		422286						
ANR	423280	Symbol	X86R_BX		422286						
ANR	423281	Symbol	X86R_SI		422286						
ANR	423282	Symbol	* a		422286						
ANR	423283	Symbol	* * op -> operands		422286						
ANR	423284	Symbol	l		422286						
ANR	423285	Symbol	X86R_RIP		422286						
ANR	423286	Symbol	op -> operands [ 1 ] . type		422286						
ANR	423287	Symbol	* op -> operands [ 0 ] . regs		422286						
ANR	423288	Symbol	rip_rel		422286						
ANR	423289	Symbol	B0000		422286						
ANR	423290	Symbol	B0001		422286						
ANR	423291	Symbol	op -> operands		422286						
ANR	423292	Symbol	* data		422286						
ANR	423293	Symbol	OT_DWORD		422286						
ANR	423294	Function	opidiv	1104:0:29037:29596							
ANR	423295	FunctionDef	"opidiv (RAsm * a , ut8 * data , const Opcode * op)"		423294	0					
ANR	423296	CompoundStatement		1104:56:29093:29596	423294	0					
ANR	423297	ExpressionStatement	is_valid_registers ( op )	1105:1:29096:29119	423294	0	True				
ANR	423298	CallExpression	is_valid_registers ( op )		423294	0					
ANR	423299	Callee	is_valid_registers		423294	0					
ANR	423300	Identifier	is_valid_registers		423294	0					
ANR	423301	ArgumentList	op		423294	1					
ANR	423302	Argument	op		423294	0					
ANR	423303	Identifier	op		423294	0					
ANR	423304	IdentifierDeclStatement	int l = 0 ;	1106:1:29122:29131	423294	1	True				
ANR	423305	IdentifierDecl	l = 0		423294	0					
ANR	423306	IdentifierDeclType	int		423294	0					
ANR	423307	Identifier	l		423294	1					
ANR	423308	AssignmentExpression	l = 0		423294	2		=			
ANR	423309	Identifier	l		423294	0					
ANR	423310	PrimaryExpression	0		423294	1					
ANR	423311	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		423294	2					
ANR	423312	Condition	op -> operands [ 0 ] . type & OT_QWORD	1108:6:29140:29170	423294	0	True				
ANR	423313	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		423294	0		&			
ANR	423314	MemberAccess	op -> operands [ 0 ] . type		423294	0					
ANR	423315	ArrayIndexing	op -> operands [ 0 ]		423294	0					
ANR	423316	PtrMemberAccess	op -> operands		423294	0					
ANR	423317	Identifier	op		423294	0					
ANR	423318	Identifier	operands		423294	1					
ANR	423319	PrimaryExpression	0		423294	1					
ANR	423320	Identifier	type		423294	1					
ANR	423321	Identifier	OT_QWORD		423294	1					
ANR	423322	CompoundStatement		5:40:80:80	423294	1					
ANR	423323	ExpressionStatement	data [ l ++ ] = 0x48	1109:2:29178:29194	423294	0	True				
ANR	423324	AssignmentExpression	data [ l ++ ] = 0x48		423294	0		=			
ANR	423325	ArrayIndexing	data [ l ++ ]		423294	0					
ANR	423326	Identifier	data		423294	0					
ANR	423327	PostIncDecOperationExpression	l ++		423294	1					
ANR	423328	Identifier	l		423294	0					
ANR	423329	IncDec	++		423294	1					
ANR	423330	PrimaryExpression	0x48		423294	1					
ANR	423331	SwitchStatement	switch ( op -> operands_count )		423294	3					
ANR	423332	Condition	op -> operands_count	1111:9:29208:29225	423294	0	True				
ANR	423333	PtrMemberAccess	op -> operands_count		423294	0					
ANR	423334	Identifier	op		423294	0					
ANR	423335	Identifier	operands_count		423294	1					
ANR	423336	CompoundStatement		8:29:134:134	423294	1					
ANR	423337	Label	case 1 :	1112:1:29231:29237	423294	0	True				
ANR	423338	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		423294	1					
ANR	423339	Condition	op -> operands [ 0 ] . type & OT_WORD	1113:7:29246:29275	423294	0	True				
ANR	423340	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		423294	0		&			
ANR	423341	MemberAccess	op -> operands [ 0 ] . type		423294	0					
ANR	423342	ArrayIndexing	op -> operands [ 0 ]		423294	0					
ANR	423343	PtrMemberAccess	op -> operands		423294	0					
ANR	423344	Identifier	op		423294	0					
ANR	423345	Identifier	operands		423294	1					
ANR	423346	PrimaryExpression	0		423294	1					
ANR	423347	Identifier	type		423294	1					
ANR	423348	Identifier	OT_WORD		423294	1					
ANR	423349	CompoundStatement		10:40:185:185	423294	1					
ANR	423350	ExpressionStatement	data [ l ++ ] = 0x66	1114:3:29284:29300	423294	0	True				
ANR	423351	AssignmentExpression	data [ l ++ ] = 0x66		423294	0		=			
ANR	423352	ArrayIndexing	data [ l ++ ]		423294	0					
ANR	423353	Identifier	data		423294	0					
ANR	423354	PostIncDecOperationExpression	l ++		423294	1					
ANR	423355	Identifier	l		423294	0					
ANR	423356	IncDec	++		423294	1					
ANR	423357	PrimaryExpression	0x66		423294	1					
ANR	423358	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		423294	2					
ANR	423359	Condition	op -> operands [ 0 ] . type & OT_BYTE	1116:6:29312:29341	423294	0	True				
ANR	423360	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		423294	0		&			
ANR	423361	MemberAccess	op -> operands [ 0 ] . type		423294	0					
ANR	423362	ArrayIndexing	op -> operands [ 0 ]		423294	0					
ANR	423363	PtrMemberAccess	op -> operands		423294	0					
ANR	423364	Identifier	op		423294	0					
ANR	423365	Identifier	operands		423294	1					
ANR	423366	PrimaryExpression	0		423294	1					
ANR	423367	Identifier	type		423294	1					
ANR	423368	Identifier	OT_BYTE		423294	1					
ANR	423369	CompoundStatement		13:38:250:250	423294	1					
ANR	423370	ExpressionStatement	data [ l ++ ] = 0xf6	1117:3:29349:29365	423294	0	True				
ANR	423371	AssignmentExpression	data [ l ++ ] = 0xf6		423294	0		=			
ANR	423372	ArrayIndexing	data [ l ++ ]		423294	0					
ANR	423373	Identifier	data		423294	0					
ANR	423374	PostIncDecOperationExpression	l ++		423294	1					
ANR	423375	Identifier	l		423294	0					
ANR	423376	IncDec	++		423294	1					
ANR	423377	PrimaryExpression	0xf6		423294	1					
ANR	423378	ElseStatement	else		423294	0					
ANR	423379	CompoundStatement		15:9:282:282	423294	0					
ANR	423380	ExpressionStatement	data [ l ++ ] = 0xf7	1119:3:29381:29397	423294	0	True				
ANR	423381	AssignmentExpression	data [ l ++ ] = 0xf7		423294	0		=			
ANR	423382	ArrayIndexing	data [ l ++ ]		423294	0					
ANR	423383	Identifier	data		423294	0					
ANR	423384	PostIncDecOperationExpression	l ++		423294	1					
ANR	423385	Identifier	l		423294	0					
ANR	423386	IncDec	++		423294	1					
ANR	423387	PrimaryExpression	0xf7		423294	1					
ANR	423388	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		423294	3					
ANR	423389	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1121:6:29409:29440	423294	0	True				
ANR	423390	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		423294	0		&			
ANR	423391	MemberAccess	op -> operands [ 0 ] . type		423294	0					
ANR	423392	ArrayIndexing	op -> operands [ 0 ]		423294	0					
ANR	423393	PtrMemberAccess	op -> operands		423294	0					
ANR	423394	Identifier	op		423294	0					
ANR	423395	Identifier	operands		423294	1					
ANR	423396	PrimaryExpression	0		423294	1					
ANR	423397	Identifier	type		423294	1					
ANR	423398	Identifier	OT_MEMORY		423294	1					
ANR	423399	CompoundStatement		18:40:349:349	423294	1					
ANR	423400	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	1122:3:29448:29490	423294	0	True				
ANR	423401	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		423294	0		=			
ANR	423402	ArrayIndexing	data [ l ++ ]		423294	0					
ANR	423403	Identifier	data		423294	0					
ANR	423404	PostIncDecOperationExpression	l ++		423294	1					
ANR	423405	Identifier	l		423294	0					
ANR	423406	IncDec	++		423294	1					
ANR	423407	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		423294	1		|			
ANR	423408	PrimaryExpression	0x38		423294	0					
ANR	423409	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		423294	1					
ANR	423410	MemberAccess	op -> operands [ 0 ] . regs		423294	0					
ANR	423411	ArrayIndexing	op -> operands [ 0 ]		423294	0					
ANR	423412	PtrMemberAccess	op -> operands		423294	0					
ANR	423413	Identifier	op		423294	0					
ANR	423414	Identifier	operands		423294	1					
ANR	423415	PrimaryExpression	0		423294	1					
ANR	423416	Identifier	regs		423294	1					
ANR	423417	PrimaryExpression	0		423294	1					
ANR	423418	ElseStatement	else		423294	0					
ANR	423419	CompoundStatement		20:9:407:407	423294	0					
ANR	423420	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg	1124:3:29506:29544	423294	0	True				
ANR	423421	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg		423294	0		=			
ANR	423422	ArrayIndexing	data [ l ++ ]		423294	0					
ANR	423423	Identifier	data		423294	0					
ANR	423424	PostIncDecOperationExpression	l ++		423294	1					
ANR	423425	Identifier	l		423294	0					
ANR	423426	IncDec	++		423294	1					
ANR	423427	InclusiveOrExpression	0xf8 | op -> operands [ 0 ] . reg		423294	1		|			
ANR	423428	PrimaryExpression	0xf8		423294	0					
ANR	423429	MemberAccess	op -> operands [ 0 ] . reg		423294	1					
ANR	423430	ArrayIndexing	op -> operands [ 0 ]		423294	0					
ANR	423431	PtrMemberAccess	op -> operands		423294	0					
ANR	423432	Identifier	op		423294	0					
ANR	423433	Identifier	operands		423294	1					
ANR	423434	PrimaryExpression	0		423294	1					
ANR	423435	Identifier	reg		423294	1					
ANR	423436	BreakStatement	break ;	1126:2:29552:29557	423294	4	True				
ANR	423437	Label	default :	1127:1:29560:29567	423294	5	True				
ANR	423438	Identifier	default		423294	0					
ANR	423439	ReturnStatement	return - 1 ;	1128:2:29571:29580	423294	6	True				
ANR	423440	UnaryOperationExpression	- 1		423294	0					
ANR	423441	UnaryOperator	-		423294	0					
ANR	423442	PrimaryExpression	1		423294	1					
ANR	423443	ReturnStatement	return l ;	1130:1:29586:29594	423294	4	True				
ANR	423444	Identifier	l		423294	0					
ANR	423445	ReturnType	static int		423294	1					
ANR	423446	Identifier	opidiv		423294	2					
ANR	423447	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		423294	3					
ANR	423448	Parameter	RAsm * a	1104:18:29055:29061	423294	0	True				
ANR	423449	ParameterType	RAsm *		423294	0					
ANR	423450	Identifier	a		423294	1					
ANR	423451	Parameter	ut8 * data	1104:27:29064:29072	423294	1	True				
ANR	423452	ParameterType	ut8 *		423294	0					
ANR	423453	Identifier	data		423294	1					
ANR	423454	Parameter	const Opcode * op	1104:38:29075:29090	423294	2	True				
ANR	423455	ParameterType	const Opcode *		423294	0					
ANR	423456	Identifier	op		423294	1					
ANR	423457	CFGEntryNode	ENTRY		423294		True				
ANR	423458	CFGExitNode	EXIT		423294		True				
ANR	423459	Symbol	a		423294						
ANR	423460	Symbol	op		423294						
ANR	423461	Symbol	OT_WORD		423294						
ANR	423462	Symbol	OT_QWORD		423294						
ANR	423463	Symbol	data		423294						
ANR	423464	Symbol	* op		423294						
ANR	423465	Symbol	* * op -> operands		423294						
ANR	423466	Symbol	l		423294						
ANR	423467	Symbol	* * op		423294						
ANR	423468	Symbol	* op -> operands		423294						
ANR	423469	Symbol	op -> operands_count		423294						
ANR	423470	Symbol	* op -> operands [ 0 ] . regs		423294						
ANR	423471	Symbol	op -> operands [ 0 ] . type		423294						
ANR	423472	Symbol	* * * op		423294						
ANR	423473	Symbol	op -> operands [ 0 ] . reg		423294						
ANR	423474	Symbol	op -> operands		423294						
ANR	423475	Symbol	* data		423294						
ANR	423476	Symbol	OT_MEMORY		423294						
ANR	423477	Symbol	op -> operands [ 0 ] . regs		423294						
ANR	423478	Symbol	OT_BYTE		423294						
ANR	423479	Function	opdiv	1133:0:29599:30157							
ANR	423480	FunctionDef	"opdiv (RAsm * a , ut8 * data , const Opcode * op)"		423479	0					
ANR	423481	CompoundStatement		1133:55:29654:30157	423479	0					
ANR	423482	ExpressionStatement	is_valid_registers ( op )	1134:1:29657:29680	423479	0	True				
ANR	423483	CallExpression	is_valid_registers ( op )		423479	0					
ANR	423484	Callee	is_valid_registers		423479	0					
ANR	423485	Identifier	is_valid_registers		423479	0					
ANR	423486	ArgumentList	op		423479	1					
ANR	423487	Argument	op		423479	0					
ANR	423488	Identifier	op		423479	0					
ANR	423489	IdentifierDeclStatement	int l = 0 ;	1135:1:29683:29692	423479	1	True				
ANR	423490	IdentifierDecl	l = 0		423479	0					
ANR	423491	IdentifierDeclType	int		423479	0					
ANR	423492	Identifier	l		423479	1					
ANR	423493	AssignmentExpression	l = 0		423479	2		=			
ANR	423494	Identifier	l		423479	0					
ANR	423495	PrimaryExpression	0		423479	1					
ANR	423496	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		423479	2					
ANR	423497	Condition	op -> operands [ 0 ] . type & OT_QWORD	1137:6:29701:29731	423479	0	True				
ANR	423498	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		423479	0		&			
ANR	423499	MemberAccess	op -> operands [ 0 ] . type		423479	0					
ANR	423500	ArrayIndexing	op -> operands [ 0 ]		423479	0					
ANR	423501	PtrMemberAccess	op -> operands		423479	0					
ANR	423502	Identifier	op		423479	0					
ANR	423503	Identifier	operands		423479	1					
ANR	423504	PrimaryExpression	0		423479	1					
ANR	423505	Identifier	type		423479	1					
ANR	423506	Identifier	OT_QWORD		423479	1					
ANR	423507	CompoundStatement		5:40:80:80	423479	1					
ANR	423508	ExpressionStatement	data [ l ++ ] = 0x48	1138:2:29739:29755	423479	0	True				
ANR	423509	AssignmentExpression	data [ l ++ ] = 0x48		423479	0		=			
ANR	423510	ArrayIndexing	data [ l ++ ]		423479	0					
ANR	423511	Identifier	data		423479	0					
ANR	423512	PostIncDecOperationExpression	l ++		423479	1					
ANR	423513	Identifier	l		423479	0					
ANR	423514	IncDec	++		423479	1					
ANR	423515	PrimaryExpression	0x48		423479	1					
ANR	423516	SwitchStatement	switch ( op -> operands_count )		423479	3					
ANR	423517	Condition	op -> operands_count	1140:9:29769:29786	423479	0	True				
ANR	423518	PtrMemberAccess	op -> operands_count		423479	0					
ANR	423519	Identifier	op		423479	0					
ANR	423520	Identifier	operands_count		423479	1					
ANR	423521	CompoundStatement		8:29:134:134	423479	1					
ANR	423522	Label	case 1 :	1141:1:29792:29798	423479	0	True				
ANR	423523	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		423479	1					
ANR	423524	Condition	op -> operands [ 0 ] . type & OT_WORD	1142:7:29807:29836	423479	0	True				
ANR	423525	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		423479	0		&			
ANR	423526	MemberAccess	op -> operands [ 0 ] . type		423479	0					
ANR	423527	ArrayIndexing	op -> operands [ 0 ]		423479	0					
ANR	423528	PtrMemberAccess	op -> operands		423479	0					
ANR	423529	Identifier	op		423479	0					
ANR	423530	Identifier	operands		423479	1					
ANR	423531	PrimaryExpression	0		423479	1					
ANR	423532	Identifier	type		423479	1					
ANR	423533	Identifier	OT_WORD		423479	1					
ANR	423534	CompoundStatement		10:40:185:185	423479	1					
ANR	423535	ExpressionStatement	data [ l ++ ] = 0x66	1143:3:29845:29861	423479	0	True				
ANR	423536	AssignmentExpression	data [ l ++ ] = 0x66		423479	0		=			
ANR	423537	ArrayIndexing	data [ l ++ ]		423479	0					
ANR	423538	Identifier	data		423479	0					
ANR	423539	PostIncDecOperationExpression	l ++		423479	1					
ANR	423540	Identifier	l		423479	0					
ANR	423541	IncDec	++		423479	1					
ANR	423542	PrimaryExpression	0x66		423479	1					
ANR	423543	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		423479	2					
ANR	423544	Condition	op -> operands [ 0 ] . type & OT_BYTE	1145:6:29873:29902	423479	0	True				
ANR	423545	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		423479	0		&			
ANR	423546	MemberAccess	op -> operands [ 0 ] . type		423479	0					
ANR	423547	ArrayIndexing	op -> operands [ 0 ]		423479	0					
ANR	423548	PtrMemberAccess	op -> operands		423479	0					
ANR	423549	Identifier	op		423479	0					
ANR	423550	Identifier	operands		423479	1					
ANR	423551	PrimaryExpression	0		423479	1					
ANR	423552	Identifier	type		423479	1					
ANR	423553	Identifier	OT_BYTE		423479	1					
ANR	423554	CompoundStatement		13:38:250:250	423479	1					
ANR	423555	ExpressionStatement	data [ l ++ ] = 0xf6	1146:3:29910:29926	423479	0	True				
ANR	423556	AssignmentExpression	data [ l ++ ] = 0xf6		423479	0		=			
ANR	423557	ArrayIndexing	data [ l ++ ]		423479	0					
ANR	423558	Identifier	data		423479	0					
ANR	423559	PostIncDecOperationExpression	l ++		423479	1					
ANR	423560	Identifier	l		423479	0					
ANR	423561	IncDec	++		423479	1					
ANR	423562	PrimaryExpression	0xf6		423479	1					
ANR	423563	ElseStatement	else		423479	0					
ANR	423564	CompoundStatement		15:9:282:282	423479	0					
ANR	423565	ExpressionStatement	data [ l ++ ] = 0xf7	1148:3:29942:29958	423479	0	True				
ANR	423566	AssignmentExpression	data [ l ++ ] = 0xf7		423479	0		=			
ANR	423567	ArrayIndexing	data [ l ++ ]		423479	0					
ANR	423568	Identifier	data		423479	0					
ANR	423569	PostIncDecOperationExpression	l ++		423479	1					
ANR	423570	Identifier	l		423479	0					
ANR	423571	IncDec	++		423479	1					
ANR	423572	PrimaryExpression	0xf7		423479	1					
ANR	423573	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		423479	3					
ANR	423574	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1150:6:29970:30001	423479	0	True				
ANR	423575	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		423479	0		&			
ANR	423576	MemberAccess	op -> operands [ 0 ] . type		423479	0					
ANR	423577	ArrayIndexing	op -> operands [ 0 ]		423479	0					
ANR	423578	PtrMemberAccess	op -> operands		423479	0					
ANR	423579	Identifier	op		423479	0					
ANR	423580	Identifier	operands		423479	1					
ANR	423581	PrimaryExpression	0		423479	1					
ANR	423582	Identifier	type		423479	1					
ANR	423583	Identifier	OT_MEMORY		423479	1					
ANR	423584	CompoundStatement		18:40:349:349	423479	1					
ANR	423585	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	1151:3:30009:30051	423479	0	True				
ANR	423586	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		423479	0		=			
ANR	423587	ArrayIndexing	data [ l ++ ]		423479	0					
ANR	423588	Identifier	data		423479	0					
ANR	423589	PostIncDecOperationExpression	l ++		423479	1					
ANR	423590	Identifier	l		423479	0					
ANR	423591	IncDec	++		423479	1					
ANR	423592	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		423479	1		|			
ANR	423593	PrimaryExpression	0x30		423479	0					
ANR	423594	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		423479	1					
ANR	423595	MemberAccess	op -> operands [ 0 ] . regs		423479	0					
ANR	423596	ArrayIndexing	op -> operands [ 0 ]		423479	0					
ANR	423597	PtrMemberAccess	op -> operands		423479	0					
ANR	423598	Identifier	op		423479	0					
ANR	423599	Identifier	operands		423479	1					
ANR	423600	PrimaryExpression	0		423479	1					
ANR	423601	Identifier	regs		423479	1					
ANR	423602	PrimaryExpression	0		423479	1					
ANR	423603	ElseStatement	else		423479	0					
ANR	423604	CompoundStatement		20:9:407:407	423479	0					
ANR	423605	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	1153:3:30067:30105	423479	0	True				
ANR	423606	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		423479	0		=			
ANR	423607	ArrayIndexing	data [ l ++ ]		423479	0					
ANR	423608	Identifier	data		423479	0					
ANR	423609	PostIncDecOperationExpression	l ++		423479	1					
ANR	423610	Identifier	l		423479	0					
ANR	423611	IncDec	++		423479	1					
ANR	423612	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		423479	1		|			
ANR	423613	PrimaryExpression	0xf0		423479	0					
ANR	423614	MemberAccess	op -> operands [ 0 ] . reg		423479	1					
ANR	423615	ArrayIndexing	op -> operands [ 0 ]		423479	0					
ANR	423616	PtrMemberAccess	op -> operands		423479	0					
ANR	423617	Identifier	op		423479	0					
ANR	423618	Identifier	operands		423479	1					
ANR	423619	PrimaryExpression	0		423479	1					
ANR	423620	Identifier	reg		423479	1					
ANR	423621	BreakStatement	break ;	1155:2:30113:30118	423479	4	True				
ANR	423622	Label	default :	1156:1:30121:30128	423479	5	True				
ANR	423623	Identifier	default		423479	0					
ANR	423624	ReturnStatement	return - 1 ;	1157:2:30132:30141	423479	6	True				
ANR	423625	UnaryOperationExpression	- 1		423479	0					
ANR	423626	UnaryOperator	-		423479	0					
ANR	423627	PrimaryExpression	1		423479	1					
ANR	423628	ReturnStatement	return l ;	1159:1:30147:30155	423479	4	True				
ANR	423629	Identifier	l		423479	0					
ANR	423630	ReturnType	static int		423479	1					
ANR	423631	Identifier	opdiv		423479	2					
ANR	423632	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		423479	3					
ANR	423633	Parameter	RAsm * a	1133:17:29616:29622	423479	0	True				
ANR	423634	ParameterType	RAsm *		423479	0					
ANR	423635	Identifier	a		423479	1					
ANR	423636	Parameter	ut8 * data	1133:26:29625:29633	423479	1	True				
ANR	423637	ParameterType	ut8 *		423479	0					
ANR	423638	Identifier	data		423479	1					
ANR	423639	Parameter	const Opcode * op	1133:37:29636:29651	423479	2	True				
ANR	423640	ParameterType	const Opcode *		423479	0					
ANR	423641	Identifier	op		423479	1					
ANR	423642	CFGEntryNode	ENTRY		423479		True				
ANR	423643	CFGExitNode	EXIT		423479		True				
ANR	423644	Symbol	a		423479						
ANR	423645	Symbol	op		423479						
ANR	423646	Symbol	OT_WORD		423479						
ANR	423647	Symbol	OT_QWORD		423479						
ANR	423648	Symbol	data		423479						
ANR	423649	Symbol	* op		423479						
ANR	423650	Symbol	* * op -> operands		423479						
ANR	423651	Symbol	l		423479						
ANR	423652	Symbol	* * op		423479						
ANR	423653	Symbol	* op -> operands		423479						
ANR	423654	Symbol	op -> operands_count		423479						
ANR	423655	Symbol	* op -> operands [ 0 ] . regs		423479						
ANR	423656	Symbol	op -> operands [ 0 ] . type		423479						
ANR	423657	Symbol	* * * op		423479						
ANR	423658	Symbol	op -> operands [ 0 ] . reg		423479						
ANR	423659	Symbol	op -> operands		423479						
ANR	423660	Symbol	* data		423479						
ANR	423661	Symbol	OT_MEMORY		423479						
ANR	423662	Symbol	op -> operands [ 0 ] . regs		423479						
ANR	423663	Symbol	OT_BYTE		423479						
ANR	423664	Function	opimul	1162:0:30160:34296							
ANR	423665	FunctionDef	"opimul (RAsm * a , ut8 * data , const Opcode * op)"		423664	0					
ANR	423666	CompoundStatement		1162:56:30216:34296	423664	0					
ANR	423667	ExpressionStatement	is_valid_registers ( op )	1163:1:30219:30242	423664	0	True				
ANR	423668	CallExpression	is_valid_registers ( op )		423664	0					
ANR	423669	Callee	is_valid_registers		423664	0					
ANR	423670	Identifier	is_valid_registers		423664	0					
ANR	423671	ArgumentList	op		423664	1					
ANR	423672	Argument	op		423664	0					
ANR	423673	Identifier	op		423664	0					
ANR	423674	IdentifierDeclStatement	int l = 0 ;	1164:1:30245:30254	423664	1	True				
ANR	423675	IdentifierDecl	l = 0		423664	0					
ANR	423676	IdentifierDeclType	int		423664	0					
ANR	423677	Identifier	l		423664	1					
ANR	423678	AssignmentExpression	l = 0		423664	2		=			
ANR	423679	Identifier	l		423664	0					
ANR	423680	PrimaryExpression	0		423664	1					
ANR	423681	IdentifierDeclStatement	int offset = 0 ;	1165:1:30257:30271	423664	2	True				
ANR	423682	IdentifierDecl	offset = 0		423664	0					
ANR	423683	IdentifierDeclType	int		423664	0					
ANR	423684	Identifier	offset		423664	1					
ANR	423685	AssignmentExpression	offset = 0		423664	2		=			
ANR	423686	Identifier	offset		423664	0					
ANR	423687	PrimaryExpression	0		423664	1					
ANR	423688	IdentifierDeclStatement	st64 immediate = 0 ;	1166:1:30274:30292	423664	3	True				
ANR	423689	IdentifierDecl	immediate = 0		423664	0					
ANR	423690	IdentifierDeclType	st64		423664	0					
ANR	423691	Identifier	immediate		423664	1					
ANR	423692	AssignmentExpression	immediate = 0		423664	2		=			
ANR	423693	Identifier	immediate		423664	0					
ANR	423694	PrimaryExpression	0		423664	1					
ANR	423695	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		423664	4					
ANR	423696	Condition	op -> operands [ 0 ] . type & OT_QWORD	1168:6:30301:30331	423664	0	True				
ANR	423697	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		423664	0		&			
ANR	423698	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	423699	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423700	PtrMemberAccess	op -> operands		423664	0					
ANR	423701	Identifier	op		423664	0					
ANR	423702	Identifier	operands		423664	1					
ANR	423703	PrimaryExpression	0		423664	1					
ANR	423704	Identifier	type		423664	1					
ANR	423705	Identifier	OT_QWORD		423664	1					
ANR	423706	CompoundStatement		7:40:118:118	423664	1					
ANR	423707	ExpressionStatement	data [ l ++ ] = 0x48	1169:2:30339:30355	423664	0	True				
ANR	423708	AssignmentExpression	data [ l ++ ] = 0x48		423664	0		=			
ANR	423709	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423710	Identifier	data		423664	0					
ANR	423711	PostIncDecOperationExpression	l ++		423664	1					
ANR	423712	Identifier	l		423664	0					
ANR	423713	IncDec	++		423664	1					
ANR	423714	PrimaryExpression	0x48		423664	1					
ANR	423715	SwitchStatement	switch ( op -> operands_count )		423664	5					
ANR	423716	Condition	op -> operands_count	1171:9:30369:30386	423664	0	True				
ANR	423717	PtrMemberAccess	op -> operands_count		423664	0					
ANR	423718	Identifier	op		423664	0					
ANR	423719	Identifier	operands_count		423664	1					
ANR	423720	CompoundStatement		10:29:172:172	423664	1					
ANR	423721	Label	case 1 :	1172:1:30392:30398	423664	0	True				
ANR	423722	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		423664	1					
ANR	423723	Condition	op -> operands [ 0 ] . type & OT_WORD	1173:7:30407:30436	423664	0	True				
ANR	423724	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		423664	0		&			
ANR	423725	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	423726	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423727	PtrMemberAccess	op -> operands		423664	0					
ANR	423728	Identifier	op		423664	0					
ANR	423729	Identifier	operands		423664	1					
ANR	423730	PrimaryExpression	0		423664	1					
ANR	423731	Identifier	type		423664	1					
ANR	423732	Identifier	OT_WORD		423664	1					
ANR	423733	CompoundStatement		12:40:223:223	423664	1					
ANR	423734	ExpressionStatement	data [ l ++ ] = 0x66	1174:3:30445:30461	423664	0	True				
ANR	423735	AssignmentExpression	data [ l ++ ] = 0x66		423664	0		=			
ANR	423736	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423737	Identifier	data		423664	0					
ANR	423738	PostIncDecOperationExpression	l ++		423664	1					
ANR	423739	Identifier	l		423664	0					
ANR	423740	IncDec	++		423664	1					
ANR	423741	PrimaryExpression	0x66		423664	1					
ANR	423742	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		423664	2					
ANR	423743	Condition	op -> operands [ 0 ] . type & OT_BYTE	1176:6:30473:30502	423664	0	True				
ANR	423744	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		423664	0		&			
ANR	423745	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	423746	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423747	PtrMemberAccess	op -> operands		423664	0					
ANR	423748	Identifier	op		423664	0					
ANR	423749	Identifier	operands		423664	1					
ANR	423750	PrimaryExpression	0		423664	1					
ANR	423751	Identifier	type		423664	1					
ANR	423752	Identifier	OT_BYTE		423664	1					
ANR	423753	CompoundStatement		15:38:288:288	423664	1					
ANR	423754	ExpressionStatement	data [ l ++ ] = 0xf6	1177:3:30510:30526	423664	0	True				
ANR	423755	AssignmentExpression	data [ l ++ ] = 0xf6		423664	0		=			
ANR	423756	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423757	Identifier	data		423664	0					
ANR	423758	PostIncDecOperationExpression	l ++		423664	1					
ANR	423759	Identifier	l		423664	0					
ANR	423760	IncDec	++		423664	1					
ANR	423761	PrimaryExpression	0xf6		423664	1					
ANR	423762	ElseStatement	else		423664	0					
ANR	423763	CompoundStatement		17:9:320:320	423664	0					
ANR	423764	ExpressionStatement	data [ l ++ ] = 0xf7	1179:3:30542:30558	423664	0	True				
ANR	423765	AssignmentExpression	data [ l ++ ] = 0xf7		423664	0		=			
ANR	423766	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423767	Identifier	data		423664	0					
ANR	423768	PostIncDecOperationExpression	l ++		423664	1					
ANR	423769	Identifier	l		423664	0					
ANR	423770	IncDec	++		423664	1					
ANR	423771	PrimaryExpression	0xf7		423664	1					
ANR	423772	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		423664	3					
ANR	423773	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1181:6:30570:30601	423664	0	True				
ANR	423774	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		423664	0		&			
ANR	423775	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	423776	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423777	PtrMemberAccess	op -> operands		423664	0					
ANR	423778	Identifier	op		423664	0					
ANR	423779	Identifier	operands		423664	1					
ANR	423780	PrimaryExpression	0		423664	1					
ANR	423781	Identifier	type		423664	1					
ANR	423782	Identifier	OT_MEMORY		423664	1					
ANR	423783	CompoundStatement		20:40:387:387	423664	1					
ANR	423784	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	1182:3:30609:30651	423664	0	True				
ANR	423785	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		423664	0		=			
ANR	423786	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423787	Identifier	data		423664	0					
ANR	423788	PostIncDecOperationExpression	l ++		423664	1					
ANR	423789	Identifier	l		423664	0					
ANR	423790	IncDec	++		423664	1					
ANR	423791	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		423664	1		|			
ANR	423792	PrimaryExpression	0x28		423664	0					
ANR	423793	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		423664	1					
ANR	423794	MemberAccess	op -> operands [ 0 ] . regs		423664	0					
ANR	423795	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423796	PtrMemberAccess	op -> operands		423664	0					
ANR	423797	Identifier	op		423664	0					
ANR	423798	Identifier	operands		423664	1					
ANR	423799	PrimaryExpression	0		423664	1					
ANR	423800	Identifier	regs		423664	1					
ANR	423801	PrimaryExpression	0		423664	1					
ANR	423802	ElseStatement	else		423664	0					
ANR	423803	CompoundStatement		22:9:445:445	423664	0					
ANR	423804	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	1184:3:30667:30705	423664	0	True				
ANR	423805	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		423664	0		=			
ANR	423806	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423807	Identifier	data		423664	0					
ANR	423808	PostIncDecOperationExpression	l ++		423664	1					
ANR	423809	Identifier	l		423664	0					
ANR	423810	IncDec	++		423664	1					
ANR	423811	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		423664	1		|			
ANR	423812	PrimaryExpression	0xe8		423664	0					
ANR	423813	MemberAccess	op -> operands [ 0 ] . reg		423664	1					
ANR	423814	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423815	PtrMemberAccess	op -> operands		423664	0					
ANR	423816	Identifier	op		423664	0					
ANR	423817	Identifier	operands		423664	1					
ANR	423818	PrimaryExpression	0		423664	1					
ANR	423819	Identifier	reg		423664	1					
ANR	423820	BreakStatement	break ;	1186:2:30713:30718	423664	4	True				
ANR	423821	Label	case 2 :	1187:1:30721:30727	423664	5	True				
ANR	423822	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		423664	6					
ANR	423823	Condition	op -> operands [ 0 ] . type & OT_GPREG	1188:6:30735:30765	423664	0	True				
ANR	423824	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		423664	0		&			
ANR	423825	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	423826	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423827	PtrMemberAccess	op -> operands		423664	0					
ANR	423828	Identifier	op		423664	0					
ANR	423829	Identifier	operands		423664	1					
ANR	423830	PrimaryExpression	0		423664	1					
ANR	423831	Identifier	type		423664	1					
ANR	423832	Identifier	OT_GPREG		423664	1					
ANR	423833	CompoundStatement		27:39:551:551	423664	1					
ANR	423834	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		423664	0					
ANR	423835	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	1189:7:30777:30810	423664	0	True				
ANR	423836	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		423664	0		&			
ANR	423837	MemberAccess	op -> operands [ 1 ] . type		423664	0					
ANR	423838	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	423839	PtrMemberAccess	op -> operands		423664	0					
ANR	423840	Identifier	op		423664	0					
ANR	423841	Identifier	operands		423664	1					
ANR	423842	PrimaryExpression	1		423664	1					
ANR	423843	Identifier	type		423664	1					
ANR	423844	Identifier	OT_CONSTANT		423664	1					
ANR	423845	CompoundStatement		28:43:596:596	423664	1					
ANR	423846	IfStatement	if ( op -> operands [ 1 ] . immediate == - 1 )		423664	0					
ANR	423847	Condition	op -> operands [ 1 ] . immediate == - 1	1190:8:30823:30853	423664	0	True				
ANR	423848	EqualityExpression	op -> operands [ 1 ] . immediate == - 1		423664	0		==			
ANR	423849	MemberAccess	op -> operands [ 1 ] . immediate		423664	0					
ANR	423850	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	423851	PtrMemberAccess	op -> operands		423664	0					
ANR	423852	Identifier	op		423664	0					
ANR	423853	Identifier	operands		423664	1					
ANR	423854	PrimaryExpression	1		423664	1					
ANR	423855	Identifier	immediate		423664	1					
ANR	423856	UnaryOperationExpression	- 1		423664	1					
ANR	423857	UnaryOperator	-		423664	0					
ANR	423858	PrimaryExpression	1		423664	1					
ANR	423859	CompoundStatement		29:41:639:639	423664	1					
ANR	423860	ExpressionStatement	"eprintf ( ""Error: Immediate exceeds max\\n"" )"	1191:5:30863:30905	423664	0	True				
ANR	423861	CallExpression	"eprintf ( ""Error: Immediate exceeds max\\n"" )"		423664	0					
ANR	423862	Callee	eprintf		423664	0					
ANR	423863	Identifier	eprintf		423664	0					
ANR	423864	ArgumentList	"""Error: Immediate exceeds max\\n"""		423664	1					
ANR	423865	Argument	"""Error: Immediate exceeds max\\n"""		423664	0					
ANR	423866	PrimaryExpression	"""Error: Immediate exceeds max\\n"""		423664	0					
ANR	423867	ReturnStatement	return - 1 ;	1192:5:30912:30921	423664	1	True				
ANR	423868	UnaryOperationExpression	- 1		423664	0					
ANR	423869	UnaryOperator	-		423664	0					
ANR	423870	PrimaryExpression	1		423664	1					
ANR	423871	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1194:4:30933:30993	423664	1	True				
ANR	423872	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		423664	0		=			
ANR	423873	Identifier	immediate		423664	0					
ANR	423874	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		423664	1		*			
ANR	423875	MemberAccess	op -> operands [ 1 ] . immediate		423664	0					
ANR	423876	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	423877	PtrMemberAccess	op -> operands		423664	0					
ANR	423878	Identifier	op		423664	0					
ANR	423879	Identifier	operands		423664	1					
ANR	423880	PrimaryExpression	1		423664	1					
ANR	423881	Identifier	immediate		423664	1					
ANR	423882	MemberAccess	op -> operands [ 1 ] . sign		423664	1					
ANR	423883	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	423884	PtrMemberAccess	op -> operands		423664	0					
ANR	423885	Identifier	op		423664	0					
ANR	423886	Identifier	operands		423664	1					
ANR	423887	PrimaryExpression	1		423664	1					
ANR	423888	Identifier	sign		423664	1					
ANR	423889	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		423664	2					
ANR	423890	Condition	op -> operands [ 0 ] . type & OT_GPREG	1195:8:31003:31033	423664	0	True				
ANR	423891	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		423664	0		&			
ANR	423892	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	423893	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423894	PtrMemberAccess	op -> operands		423664	0					
ANR	423895	Identifier	op		423664	0					
ANR	423896	Identifier	operands		423664	1					
ANR	423897	PrimaryExpression	0		423664	1					
ANR	423898	Identifier	type		423664	1					
ANR	423899	Identifier	OT_GPREG		423664	1					
ANR	423900	CompoundStatement		34:41:819:819	423664	1					
ANR	423901	IfStatement	if ( immediate >= 128 )		423664	0					
ANR	423902	Condition	immediate >= 128	1196:9:31047:31062	423664	0	True				
ANR	423903	RelationalExpression	immediate >= 128		423664	0		>=			
ANR	423904	Identifier	immediate		423664	0					
ANR	423905	PrimaryExpression	128		423664	1					
ANR	423906	CompoundStatement		35:27:848:848	423664	1					
ANR	423907	ExpressionStatement	data [ l ++ ] = 0x69	1197:6:31073:31089	423664	0	True				
ANR	423908	AssignmentExpression	data [ l ++ ] = 0x69		423664	0		=			
ANR	423909	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423910	Identifier	data		423664	0					
ANR	423911	PostIncDecOperationExpression	l ++		423664	1					
ANR	423912	Identifier	l		423664	0					
ANR	423913	IncDec	++		423664	1					
ANR	423914	PrimaryExpression	0x69		423664	1					
ANR	423915	ElseStatement	else		423664	0					
ANR	423916	CompoundStatement		37:12:886:886	423664	0					
ANR	423917	ExpressionStatement	data [ l ++ ] = 0x6b	1199:6:31111:31127	423664	0	True				
ANR	423918	AssignmentExpression	data [ l ++ ] = 0x6b		423664	0		=			
ANR	423919	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423920	Identifier	data		423664	0					
ANR	423921	PostIncDecOperationExpression	l ++		423664	1					
ANR	423922	Identifier	l		423664	0					
ANR	423923	IncDec	++		423664	1					
ANR	423924	PrimaryExpression	0x6b		423664	1					
ANR	423925	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg	1201:5:31141:31206	423664	1	True				
ANR	423926	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg		423664	0		=			
ANR	423927	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423928	Identifier	data		423664	0					
ANR	423929	PostIncDecOperationExpression	l ++		423664	1					
ANR	423930	Identifier	l		423664	0					
ANR	423931	IncDec	++		423664	1					
ANR	423932	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg		423664	1		|			
ANR	423933	PrimaryExpression	0xc0		423664	0					
ANR	423934	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg		423664	1		|			
ANR	423935	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	423936	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	423937	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423938	PtrMemberAccess	op -> operands		423664	0					
ANR	423939	Identifier	op		423664	0					
ANR	423940	Identifier	operands		423664	1					
ANR	423941	PrimaryExpression	0		423664	1					
ANR	423942	Identifier	reg		423664	1					
ANR	423943	PrimaryExpression	3		423664	1					
ANR	423944	MemberAccess	op -> operands [ 0 ] . reg		423664	1					
ANR	423945	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	423946	PtrMemberAccess	op -> operands		423664	0					
ANR	423947	Identifier	op		423664	0					
ANR	423948	Identifier	operands		423664	1					
ANR	423949	PrimaryExpression	0		423664	1					
ANR	423950	Identifier	reg		423664	1					
ANR	423951	ExpressionStatement	data [ l ++ ] = immediate	1202:5:31213:31234	423664	2	True				
ANR	423952	AssignmentExpression	data [ l ++ ] = immediate		423664	0		=			
ANR	423953	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423954	Identifier	data		423664	0					
ANR	423955	PostIncDecOperationExpression	l ++		423664	1					
ANR	423956	Identifier	l		423664	0					
ANR	423957	IncDec	++		423664	1					
ANR	423958	Identifier	immediate		423664	1					
ANR	423959	IfStatement	if ( immediate >= 128 )		423664	3					
ANR	423960	Condition	immediate >= 128	1203:9:31245:31260	423664	0	True				
ANR	423961	RelationalExpression	immediate >= 128		423664	0		>=			
ANR	423962	Identifier	immediate		423664	0					
ANR	423963	PrimaryExpression	128		423664	1					
ANR	423964	CompoundStatement		42:27:1046:1046	423664	1					
ANR	423965	ExpressionStatement	data [ l ++ ] = immediate >> 8	1204:6:31271:31297	423664	0	True				
ANR	423966	AssignmentExpression	data [ l ++ ] = immediate >> 8		423664	0		=			
ANR	423967	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423968	Identifier	data		423664	0					
ANR	423969	PostIncDecOperationExpression	l ++		423664	1					
ANR	423970	Identifier	l		423664	0					
ANR	423971	IncDec	++		423664	1					
ANR	423972	ShiftExpression	immediate >> 8		423664	1		>>			
ANR	423973	Identifier	immediate		423664	0					
ANR	423974	PrimaryExpression	8		423664	1					
ANR	423975	ExpressionStatement	data [ l ++ ] = immediate >> 16	1205:6:31305:31332	423664	1	True				
ANR	423976	AssignmentExpression	data [ l ++ ] = immediate >> 16		423664	0		=			
ANR	423977	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423978	Identifier	data		423664	0					
ANR	423979	PostIncDecOperationExpression	l ++		423664	1					
ANR	423980	Identifier	l		423664	0					
ANR	423981	IncDec	++		423664	1					
ANR	423982	ShiftExpression	immediate >> 16		423664	1		>>			
ANR	423983	Identifier	immediate		423664	0					
ANR	423984	PrimaryExpression	16		423664	1					
ANR	423985	ExpressionStatement	data [ l ++ ] = immediate >> 24	1206:6:31340:31367	423664	2	True				
ANR	423986	AssignmentExpression	data [ l ++ ] = immediate >> 24		423664	0		=			
ANR	423987	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	423988	Identifier	data		423664	0					
ANR	423989	PostIncDecOperationExpression	l ++		423664	1					
ANR	423990	Identifier	l		423664	0					
ANR	423991	IncDec	++		423664	1					
ANR	423992	ShiftExpression	immediate >> 24		423664	1		>>			
ANR	423993	Identifier	immediate		423664	0					
ANR	423994	PrimaryExpression	24		423664	1					
ANR	423995	IfStatement	if ( a -> bits == 64 && immediate > UT32_MAX )		423664	4					
ANR	423996	Condition	a -> bits == 64 && immediate > UT32_MAX	1208:9:31385:31421	423664	0	True				
ANR	423997	AndExpression	a -> bits == 64 && immediate > UT32_MAX		423664	0		&&			
ANR	423998	EqualityExpression	a -> bits == 64		423664	0		==			
ANR	423999	PtrMemberAccess	a -> bits		423664	0					
ANR	424000	Identifier	a		423664	0					
ANR	424001	Identifier	bits		423664	1					
ANR	424002	PrimaryExpression	64		423664	1					
ANR	424003	RelationalExpression	immediate > UT32_MAX		423664	1		>			
ANR	424004	Identifier	immediate		423664	0					
ANR	424005	Identifier	UT32_MAX		423664	1					
ANR	424006	CompoundStatement		47:48:1207:1207	423664	1					
ANR	424007	ExpressionStatement	data [ l ++ ] = immediate >> 32	1209:6:31432:31459	423664	0	True				
ANR	424008	AssignmentExpression	data [ l ++ ] = immediate >> 32		423664	0		=			
ANR	424009	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424010	Identifier	data		423664	0					
ANR	424011	PostIncDecOperationExpression	l ++		423664	1					
ANR	424012	Identifier	l		423664	0					
ANR	424013	IncDec	++		423664	1					
ANR	424014	ShiftExpression	immediate >> 32		423664	1		>>			
ANR	424015	Identifier	immediate		423664	0					
ANR	424016	PrimaryExpression	32		423664	1					
ANR	424017	ExpressionStatement	data [ l ++ ] = immediate >> 40	1210:6:31467:31494	423664	1	True				
ANR	424018	AssignmentExpression	data [ l ++ ] = immediate >> 40		423664	0		=			
ANR	424019	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424020	Identifier	data		423664	0					
ANR	424021	PostIncDecOperationExpression	l ++		423664	1					
ANR	424022	Identifier	l		423664	0					
ANR	424023	IncDec	++		423664	1					
ANR	424024	ShiftExpression	immediate >> 40		423664	1		>>			
ANR	424025	Identifier	immediate		423664	0					
ANR	424026	PrimaryExpression	40		423664	1					
ANR	424027	ExpressionStatement	data [ l ++ ] = immediate >> 48	1211:6:31502:31529	423664	2	True				
ANR	424028	AssignmentExpression	data [ l ++ ] = immediate >> 48		423664	0		=			
ANR	424029	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424030	Identifier	data		423664	0					
ANR	424031	PostIncDecOperationExpression	l ++		423664	1					
ANR	424032	Identifier	l		423664	0					
ANR	424033	IncDec	++		423664	1					
ANR	424034	ShiftExpression	immediate >> 48		423664	1		>>			
ANR	424035	Identifier	immediate		423664	0					
ANR	424036	PrimaryExpression	48		423664	1					
ANR	424037	ExpressionStatement	data [ l ++ ] = immediate >> 56	1212:6:31537:31564	423664	3	True				
ANR	424038	AssignmentExpression	data [ l ++ ] = immediate >> 56		423664	0		=			
ANR	424039	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424040	Identifier	data		423664	0					
ANR	424041	PostIncDecOperationExpression	l ++		423664	1					
ANR	424042	Identifier	l		423664	0					
ANR	424043	IncDec	++		423664	1					
ANR	424044	ShiftExpression	immediate >> 56		423664	1		>>			
ANR	424045	Identifier	immediate		423664	0					
ANR	424046	PrimaryExpression	56		423664	1					
ANR	424047	ElseStatement	else		423664	0					
ANR	424048	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		423664	0					
ANR	424049	Condition	op -> operands [ 1 ] . type & OT_MEMORY	1215:14:31593:31624	423664	0	True				
ANR	424050	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		423664	0		&			
ANR	424051	MemberAccess	op -> operands [ 1 ] . type		423664	0					
ANR	424052	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424053	PtrMemberAccess	op -> operands		423664	0					
ANR	424054	Identifier	op		423664	0					
ANR	424055	Identifier	operands		423664	1					
ANR	424056	PrimaryExpression	1		423664	1					
ANR	424057	Identifier	type		423664	1					
ANR	424058	Identifier	OT_MEMORY		423664	1					
ANR	424059	CompoundStatement		54:48:1410:1410	423664	1					
ANR	424060	ExpressionStatement	data [ l ++ ] = 0x0f	1216:4:31633:31649	423664	0	True				
ANR	424061	AssignmentExpression	data [ l ++ ] = 0x0f		423664	0		=			
ANR	424062	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424063	Identifier	data		423664	0					
ANR	424064	PostIncDecOperationExpression	l ++		423664	1					
ANR	424065	Identifier	l		423664	0					
ANR	424066	IncDec	++		423664	1					
ANR	424067	PrimaryExpression	0x0f		423664	1					
ANR	424068	ExpressionStatement	data [ l ++ ] = 0xaf	1217:4:31655:31671	423664	1	True				
ANR	424069	AssignmentExpression	data [ l ++ ] = 0xaf		423664	0		=			
ANR	424070	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424071	Identifier	data		423664	0					
ANR	424072	PostIncDecOperationExpression	l ++		423664	1					
ANR	424073	Identifier	l		423664	0					
ANR	424074	IncDec	++		423664	1					
ANR	424075	PrimaryExpression	0xaf		423664	1					
ANR	424076	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] != X86R_UNDEFINED )		423664	2					
ANR	424077	Condition	op -> operands [ 1 ] . regs [ 0 ] != X86R_UNDEFINED	1218:8:31681:31721	423664	0	True				
ANR	424078	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] != X86R_UNDEFINED		423664	0		!=			
ANR	424079	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		423664	0					
ANR	424080	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424081	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424082	PtrMemberAccess	op -> operands		423664	0					
ANR	424083	Identifier	op		423664	0					
ANR	424084	Identifier	operands		423664	1					
ANR	424085	PrimaryExpression	1		423664	1					
ANR	424086	Identifier	regs		423664	1					
ANR	424087	PrimaryExpression	0		423664	1					
ANR	424088	Identifier	X86R_UNDEFINED		423664	1					
ANR	424089	CompoundStatement		57:51:1507:1507	423664	1					
ANR	424090	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1219:5:31731:31792	423664	0	True				
ANR	424091	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		423664	0		=			
ANR	424092	Identifier	offset		423664	0					
ANR	424093	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		423664	1		*			
ANR	424094	MemberAccess	op -> operands [ 1 ] . offset		423664	0					
ANR	424095	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424096	PtrMemberAccess	op -> operands		423664	0					
ANR	424097	Identifier	op		423664	0					
ANR	424098	Identifier	operands		423664	1					
ANR	424099	PrimaryExpression	1		423664	1					
ANR	424100	Identifier	offset		423664	1					
ANR	424101	MemberAccess	op -> operands [ 1 ] . offset_sign		423664	1					
ANR	424102	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424103	PtrMemberAccess	op -> operands		423664	0					
ANR	424104	Identifier	op		423664	0					
ANR	424105	Identifier	operands		423664	1					
ANR	424106	PrimaryExpression	1		423664	1					
ANR	424107	Identifier	offset_sign		423664	1					
ANR	424108	IfStatement	if ( offset != 0 )		423664	1					
ANR	424109	Condition	offset != 0	1220:9:31803:31813	423664	0	True				
ANR	424110	EqualityExpression	offset != 0		423664	0		!=			
ANR	424111	Identifier	offset		423664	0					
ANR	424112	PrimaryExpression	0		423664	1					
ANR	424113	CompoundStatement		59:22:1599:1599	423664	1					
ANR	424114	IfStatement	if ( offset >= 128 || offset <= - 128 )		423664	0					
ANR	424115	Condition	offset >= 128 || offset <= - 128	1221:10:31828:31858	423664	0	True				
ANR	424116	OrExpression	offset >= 128 || offset <= - 128		423664	0		||			
ANR	424117	RelationalExpression	offset >= 128		423664	0		>=			
ANR	424118	Identifier	offset		423664	0					
ANR	424119	PrimaryExpression	128		423664	1					
ANR	424120	RelationalExpression	offset <= - 128		423664	1		<=			
ANR	424121	Identifier	offset		423664	0					
ANR	424122	UnaryOperationExpression	- 128		423664	1					
ANR	424123	UnaryOperator	-		423664	0					
ANR	424124	PrimaryExpression	128		423664	1					
ANR	424125	CompoundStatement		60:43:1644:1644	423664	1					
ANR	424126	ExpressionStatement	data [ l ] = 0x80	1222:7:31870:31884	423664	0	True				
ANR	424127	AssignmentExpression	data [ l ] = 0x80		423664	0		=			
ANR	424128	ArrayIndexing	data [ l ]		423664	0					
ANR	424129	Identifier	data		423664	0					
ANR	424130	Identifier	l		423664	1					
ANR	424131	PrimaryExpression	0x80		423664	1					
ANR	424132	ElseStatement	else		423664	0					
ANR	424133	CompoundStatement		62:13:1682:1682	423664	0					
ANR	424134	ExpressionStatement	data [ l ] = 0x40	1224:7:31908:31922	423664	0	True				
ANR	424135	AssignmentExpression	data [ l ] = 0x40		423664	0		=			
ANR	424136	ArrayIndexing	data [ l ]		423664	0					
ANR	424137	Identifier	data		423664	0					
ANR	424138	Identifier	l		423664	1					
ANR	424139	PrimaryExpression	0x40		423664	1					
ANR	424140	ExpressionStatement	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1226:6:31938:32001	423664	1	True				
ANR	424141	AssignmentExpression	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	0		|=			
ANR	424142	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424143	Identifier	data		423664	0					
ANR	424144	PostIncDecOperationExpression	l ++		423664	1					
ANR	424145	Identifier	l		423664	0					
ANR	424146	IncDec	++		423664	1					
ANR	424147	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	1		|			
ANR	424148	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	424149	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424150	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424151	PtrMemberAccess	op -> operands		423664	0					
ANR	424152	Identifier	op		423664	0					
ANR	424153	Identifier	operands		423664	1					
ANR	424154	PrimaryExpression	0		423664	1					
ANR	424155	Identifier	reg		423664	1					
ANR	424156	PrimaryExpression	3		423664	1					
ANR	424157	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		423664	1					
ANR	424158	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424159	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424160	PtrMemberAccess	op -> operands		423664	0					
ANR	424161	Identifier	op		423664	0					
ANR	424162	Identifier	operands		423664	1					
ANR	424163	PrimaryExpression	1		423664	1					
ANR	424164	Identifier	regs		423664	1					
ANR	424165	PrimaryExpression	0		423664	1					
ANR	424166	ExpressionStatement	data [ l ++ ] = offset	1227:6:32009:32027	423664	2	True				
ANR	424167	AssignmentExpression	data [ l ++ ] = offset		423664	0		=			
ANR	424168	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424169	Identifier	data		423664	0					
ANR	424170	PostIncDecOperationExpression	l ++		423664	1					
ANR	424171	Identifier	l		423664	0					
ANR	424172	IncDec	++		423664	1					
ANR	424173	Identifier	offset		423664	1					
ANR	424174	IfStatement	if ( offset >= 128 || offset <= - 128 )		423664	3					
ANR	424175	Condition	offset >= 128 || offset <= - 128	1228:10:32039:32069	423664	0	True				
ANR	424176	OrExpression	offset >= 128 || offset <= - 128		423664	0		||			
ANR	424177	RelationalExpression	offset >= 128		423664	0		>=			
ANR	424178	Identifier	offset		423664	0					
ANR	424179	PrimaryExpression	128		423664	1					
ANR	424180	RelationalExpression	offset <= - 128		423664	1		<=			
ANR	424181	Identifier	offset		423664	0					
ANR	424182	UnaryOperationExpression	- 128		423664	1					
ANR	424183	UnaryOperator	-		423664	0					
ANR	424184	PrimaryExpression	128		423664	1					
ANR	424185	CompoundStatement		67:43:1855:1855	423664	1					
ANR	424186	ExpressionStatement	data [ l ++ ] = offset >> 8	1229:7:32081:32104	423664	0	True				
ANR	424187	AssignmentExpression	data [ l ++ ] = offset >> 8		423664	0		=			
ANR	424188	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424189	Identifier	data		423664	0					
ANR	424190	PostIncDecOperationExpression	l ++		423664	1					
ANR	424191	Identifier	l		423664	0					
ANR	424192	IncDec	++		423664	1					
ANR	424193	ShiftExpression	offset >> 8		423664	1		>>			
ANR	424194	Identifier	offset		423664	0					
ANR	424195	PrimaryExpression	8		423664	1					
ANR	424196	ExpressionStatement	data [ l ++ ] = offset >> 16	1230:7:32113:32137	423664	1	True				
ANR	424197	AssignmentExpression	data [ l ++ ] = offset >> 16		423664	0		=			
ANR	424198	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424199	Identifier	data		423664	0					
ANR	424200	PostIncDecOperationExpression	l ++		423664	1					
ANR	424201	Identifier	l		423664	0					
ANR	424202	IncDec	++		423664	1					
ANR	424203	ShiftExpression	offset >> 16		423664	1		>>			
ANR	424204	Identifier	offset		423664	0					
ANR	424205	PrimaryExpression	16		423664	1					
ANR	424206	ExpressionStatement	data [ l ++ ] = offset >> 24	1231:7:32146:32170	423664	2	True				
ANR	424207	AssignmentExpression	data [ l ++ ] = offset >> 24		423664	0		=			
ANR	424208	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424209	Identifier	data		423664	0					
ANR	424210	PostIncDecOperationExpression	l ++		423664	1					
ANR	424211	Identifier	l		423664	0					
ANR	424212	IncDec	++		423664	1					
ANR	424213	ShiftExpression	offset >> 24		423664	1		>>			
ANR	424214	Identifier	offset		423664	0					
ANR	424215	PrimaryExpression	24		423664	1					
ANR	424216	ElseStatement	else		423664	0					
ANR	424217	CompoundStatement		72:12:1975:1975	423664	0					
ANR	424218	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		423664	0					
ANR	424219	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	1234:10:32204:32244	423664	0	True				
ANR	424220	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		423664	0		!=			
ANR	424221	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		423664	0					
ANR	424222	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424223	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424224	PtrMemberAccess	op -> operands		423664	0					
ANR	424225	Identifier	op		423664	0					
ANR	424226	Identifier	operands		423664	1					
ANR	424227	PrimaryExpression	1		423664	1					
ANR	424228	Identifier	regs		423664	1					
ANR	424229	PrimaryExpression	1		423664	1					
ANR	424230	Identifier	X86R_UNDEFINED		423664	1					
ANR	424231	CompoundStatement		73:53:2030:2030	423664	1					
ANR	424232	ExpressionStatement	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3	1235:7:32256:32299	423664	0	True				
ANR	424233	AssignmentExpression	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3		423664	0		=			
ANR	424234	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424235	Identifier	data		423664	0					
ANR	424236	PostIncDecOperationExpression	l ++		423664	1					
ANR	424237	Identifier	l		423664	0					
ANR	424238	IncDec	++		423664	1					
ANR	424239	InclusiveOrExpression	0x04 | op -> operands [ 0 ] . reg << 3		423664	1		|			
ANR	424240	PrimaryExpression	0x04		423664	0					
ANR	424241	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	1		<<			
ANR	424242	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424243	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424244	PtrMemberAccess	op -> operands		423664	0					
ANR	424245	Identifier	op		423664	0					
ANR	424246	Identifier	operands		423664	1					
ANR	424247	PrimaryExpression	0		423664	1					
ANR	424248	Identifier	reg		423664	1					
ANR	424249	PrimaryExpression	3		423664	1					
ANR	424250	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	1236:7:32308:32374	423664	1	True				
ANR	424251	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	0		=			
ANR	424252	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424253	Identifier	data		423664	0					
ANR	424254	PostIncDecOperationExpression	l ++		423664	1					
ANR	424255	Identifier	l		423664	0					
ANR	424256	IncDec	++		423664	1					
ANR	424257	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	1		|			
ANR	424258	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		423664	0		<<			
ANR	424259	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		423664	0					
ANR	424260	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424261	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424262	PtrMemberAccess	op -> operands		423664	0					
ANR	424263	Identifier	op		423664	0					
ANR	424264	Identifier	operands		423664	1					
ANR	424265	PrimaryExpression	1		423664	1					
ANR	424266	Identifier	regs		423664	1					
ANR	424267	PrimaryExpression	1		423664	1					
ANR	424268	PrimaryExpression	3		423664	1					
ANR	424269	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		423664	1					
ANR	424270	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424271	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424272	PtrMemberAccess	op -> operands		423664	0					
ANR	424273	Identifier	op		423664	0					
ANR	424274	Identifier	operands		423664	1					
ANR	424275	PrimaryExpression	1		423664	1					
ANR	424276	Identifier	regs		423664	1					
ANR	424277	PrimaryExpression	0		423664	1					
ANR	424278	ElseStatement	else		423664	0					
ANR	424279	CompoundStatement		76:13:2172:2172	423664	0					
ANR	424280	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1238:7:32398:32460	423664	0	True				
ANR	424281	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	0		=			
ANR	424282	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424283	Identifier	data		423664	0					
ANR	424284	PostIncDecOperationExpression	l ++		423664	1					
ANR	424285	Identifier	l		423664	0					
ANR	424286	IncDec	++		423664	1					
ANR	424287	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	1		|			
ANR	424288	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	424289	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424290	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424291	PtrMemberAccess	op -> operands		423664	0					
ANR	424292	Identifier	op		423664	0					
ANR	424293	Identifier	operands		423664	1					
ANR	424294	PrimaryExpression	0		423664	1					
ANR	424295	Identifier	reg		423664	1					
ANR	424296	PrimaryExpression	3		423664	1					
ANR	424297	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		423664	1					
ANR	424298	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424299	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424300	PtrMemberAccess	op -> operands		423664	0					
ANR	424301	Identifier	op		423664	0					
ANR	424302	Identifier	operands		423664	1					
ANR	424303	PrimaryExpression	1		423664	1					
ANR	424304	Identifier	regs		423664	1					
ANR	424305	PrimaryExpression	0		423664	1					
ANR	424306	ElseStatement	else		423664	0					
ANR	424307	CompoundStatement		80:11:2271:2271	423664	0					
ANR	424308	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1242:5:32495:32555	423664	0	True				
ANR	424309	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		423664	0		=			
ANR	424310	Identifier	immediate		423664	0					
ANR	424311	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		423664	1		*			
ANR	424312	MemberAccess	op -> operands [ 1 ] . immediate		423664	0					
ANR	424313	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424314	PtrMemberAccess	op -> operands		423664	0					
ANR	424315	Identifier	op		423664	0					
ANR	424316	Identifier	operands		423664	1					
ANR	424317	PrimaryExpression	1		423664	1					
ANR	424318	Identifier	immediate		423664	1					
ANR	424319	MemberAccess	op -> operands [ 1 ] . sign		423664	1					
ANR	424320	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424321	PtrMemberAccess	op -> operands		423664	0					
ANR	424322	Identifier	op		423664	0					
ANR	424323	Identifier	operands		423664	1					
ANR	424324	PrimaryExpression	1		423664	1					
ANR	424325	Identifier	sign		423664	1					
ANR	424326	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5	1243:5:32562:32604	423664	1	True				
ANR	424327	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5		423664	0		=			
ANR	424328	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424329	Identifier	data		423664	0					
ANR	424330	PostIncDecOperationExpression	l ++		423664	1					
ANR	424331	Identifier	l		423664	0					
ANR	424332	IncDec	++		423664	1					
ANR	424333	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x5		423664	1		|			
ANR	424334	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	424335	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424336	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424337	PtrMemberAccess	op -> operands		423664	0					
ANR	424338	Identifier	op		423664	0					
ANR	424339	Identifier	operands		423664	1					
ANR	424340	PrimaryExpression	0		423664	1					
ANR	424341	Identifier	reg		423664	1					
ANR	424342	PrimaryExpression	3		423664	1					
ANR	424343	PrimaryExpression	0x5		423664	1					
ANR	424344	ExpressionStatement	data [ l ++ ] = immediate	1244:5:32611:32632	423664	2	True				
ANR	424345	AssignmentExpression	data [ l ++ ] = immediate		423664	0		=			
ANR	424346	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424347	Identifier	data		423664	0					
ANR	424348	PostIncDecOperationExpression	l ++		423664	1					
ANR	424349	Identifier	l		423664	0					
ANR	424350	IncDec	++		423664	1					
ANR	424351	Identifier	immediate		423664	1					
ANR	424352	ExpressionStatement	data [ l ++ ] = immediate >> 8	1245:5:32639:32665	423664	3	True				
ANR	424353	AssignmentExpression	data [ l ++ ] = immediate >> 8		423664	0		=			
ANR	424354	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424355	Identifier	data		423664	0					
ANR	424356	PostIncDecOperationExpression	l ++		423664	1					
ANR	424357	Identifier	l		423664	0					
ANR	424358	IncDec	++		423664	1					
ANR	424359	ShiftExpression	immediate >> 8		423664	1		>>			
ANR	424360	Identifier	immediate		423664	0					
ANR	424361	PrimaryExpression	8		423664	1					
ANR	424362	ExpressionStatement	data [ l ++ ] = immediate >> 16	1246:5:32672:32699	423664	4	True				
ANR	424363	AssignmentExpression	data [ l ++ ] = immediate >> 16		423664	0		=			
ANR	424364	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424365	Identifier	data		423664	0					
ANR	424366	PostIncDecOperationExpression	l ++		423664	1					
ANR	424367	Identifier	l		423664	0					
ANR	424368	IncDec	++		423664	1					
ANR	424369	ShiftExpression	immediate >> 16		423664	1		>>			
ANR	424370	Identifier	immediate		423664	0					
ANR	424371	PrimaryExpression	16		423664	1					
ANR	424372	ExpressionStatement	data [ l ++ ] = immediate >> 24	1247:5:32706:32733	423664	5	True				
ANR	424373	AssignmentExpression	data [ l ++ ] = immediate >> 24		423664	0		=			
ANR	424374	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424375	Identifier	data		423664	0					
ANR	424376	PostIncDecOperationExpression	l ++		423664	1					
ANR	424377	Identifier	l		423664	0					
ANR	424378	IncDec	++		423664	1					
ANR	424379	ShiftExpression	immediate >> 24		423664	1		>>			
ANR	424380	Identifier	immediate		423664	0					
ANR	424381	PrimaryExpression	24		423664	1					
ANR	424382	ElseStatement	else		423664	0					
ANR	424383	IfStatement	if ( op -> operands [ 1 ] . type & OT_GPREG )		423664	0					
ANR	424384	Condition	op -> operands [ 1 ] . type & OT_GPREG	1249:14:32755:32785	423664	0	True				
ANR	424385	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		423664	0		&			
ANR	424386	MemberAccess	op -> operands [ 1 ] . type		423664	0					
ANR	424387	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424388	PtrMemberAccess	op -> operands		423664	0					
ANR	424389	Identifier	op		423664	0					
ANR	424390	Identifier	operands		423664	1					
ANR	424391	PrimaryExpression	1		423664	1					
ANR	424392	Identifier	type		423664	1					
ANR	424393	Identifier	OT_GPREG		423664	1					
ANR	424394	CompoundStatement		88:47:2571:2571	423664	1					
ANR	424395	ExpressionStatement	data [ l ++ ] = 0x0f	1250:4:32794:32810	423664	0	True				
ANR	424396	AssignmentExpression	data [ l ++ ] = 0x0f		423664	0		=			
ANR	424397	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424398	Identifier	data		423664	0					
ANR	424399	PostIncDecOperationExpression	l ++		423664	1					
ANR	424400	Identifier	l		423664	0					
ANR	424401	IncDec	++		423664	1					
ANR	424402	PrimaryExpression	0x0f		423664	1					
ANR	424403	ExpressionStatement	data [ l ++ ] = 0xaf	1251:4:32816:32832	423664	1	True				
ANR	424404	AssignmentExpression	data [ l ++ ] = 0xaf		423664	0		=			
ANR	424405	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424406	Identifier	data		423664	0					
ANR	424407	PostIncDecOperationExpression	l ++		423664	1					
ANR	424408	Identifier	l		423664	0					
ANR	424409	IncDec	++		423664	1					
ANR	424410	PrimaryExpression	0xaf		423664	1					
ANR	424411	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg	1252:4:32838:32903	423664	2	True				
ANR	424412	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		423664	0		=			
ANR	424413	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424414	Identifier	data		423664	0					
ANR	424415	PostIncDecOperationExpression	l ++		423664	1					
ANR	424416	Identifier	l		423664	0					
ANR	424417	IncDec	++		423664	1					
ANR	424418	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		423664	1		|			
ANR	424419	PrimaryExpression	0xc0		423664	0					
ANR	424420	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		423664	1		|			
ANR	424421	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	424422	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424423	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424424	PtrMemberAccess	op -> operands		423664	0					
ANR	424425	Identifier	op		423664	0					
ANR	424426	Identifier	operands		423664	1					
ANR	424427	PrimaryExpression	0		423664	1					
ANR	424428	Identifier	reg		423664	1					
ANR	424429	PrimaryExpression	3		423664	1					
ANR	424430	MemberAccess	op -> operands [ 1 ] . reg		423664	1					
ANR	424431	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424432	PtrMemberAccess	op -> operands		423664	0					
ANR	424433	Identifier	op		423664	0					
ANR	424434	Identifier	operands		423664	1					
ANR	424435	PrimaryExpression	1		423664	1					
ANR	424436	Identifier	reg		423664	1					
ANR	424437	BreakStatement	break ;	1255:2:32916:32921	423664	7	True				
ANR	424438	Label	case 3 :	1256:1:32924:32930	423664	8	True				
ANR	424439	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT )		423664	9					
ANR	424440	Condition	op -> operands [ 0 ] . type & OT_GPREG && ( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT	1257:6:32938:33091	423664	0	True				
ANR	424441	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT		423664	0		&&			
ANR	424442	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		423664	0		&			
ANR	424443	MemberAccess	op -> operands [ 0 ] . type		423664	0					
ANR	424444	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424445	PtrMemberAccess	op -> operands		423664	0					
ANR	424446	Identifier	op		423664	0					
ANR	424447	Identifier	operands		423664	1					
ANR	424448	PrimaryExpression	0		423664	1					
ANR	424449	Identifier	type		423664	1					
ANR	424450	Identifier	OT_GPREG		423664	1					
ANR	424451	AndExpression	( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT		423664	1		&&			
ANR	424452	OrExpression	op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY		423664	0		||			
ANR	424453	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		423664	0		&			
ANR	424454	MemberAccess	op -> operands [ 1 ] . type		423664	0					
ANR	424455	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424456	PtrMemberAccess	op -> operands		423664	0					
ANR	424457	Identifier	op		423664	0					
ANR	424458	Identifier	operands		423664	1					
ANR	424459	PrimaryExpression	1		423664	1					
ANR	424460	Identifier	type		423664	1					
ANR	424461	Identifier	OT_GPREG		423664	1					
ANR	424462	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		423664	1		&			
ANR	424463	MemberAccess	op -> operands [ 1 ] . type		423664	0					
ANR	424464	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424465	PtrMemberAccess	op -> operands		423664	0					
ANR	424466	Identifier	op		423664	0					
ANR	424467	Identifier	operands		423664	1					
ANR	424468	PrimaryExpression	1		423664	1					
ANR	424469	Identifier	type		423664	1					
ANR	424470	Identifier	OT_MEMORY		423664	1					
ANR	424471	BitAndExpression	op -> operands [ 2 ] . type & OT_CONSTANT		423664	1		&			
ANR	424472	MemberAccess	op -> operands [ 2 ] . type		423664	0					
ANR	424473	ArrayIndexing	op -> operands [ 2 ]		423664	0					
ANR	424474	PtrMemberAccess	op -> operands		423664	0					
ANR	424475	Identifier	op		423664	0					
ANR	424476	Identifier	operands		423664	1					
ANR	424477	PrimaryExpression	2		423664	1					
ANR	424478	Identifier	type		423664	1					
ANR	424479	Identifier	OT_CONSTANT		423664	1					
ANR	424480	CompoundStatement		98:42:2877:2877	423664	1					
ANR	424481	ExpressionStatement	data [ l ++ ] = 0x6b	1260:4:33100:33116	423664	0	True				
ANR	424482	AssignmentExpression	data [ l ++ ] = 0x6b		423664	0		=			
ANR	424483	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424484	Identifier	data		423664	0					
ANR	424485	PostIncDecOperationExpression	l ++		423664	1					
ANR	424486	Identifier	l		423664	0					
ANR	424487	IncDec	++		423664	1					
ANR	424488	PrimaryExpression	0x6b		423664	1					
ANR	424489	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		423664	1					
ANR	424490	Condition	op -> operands [ 1 ] . type & OT_MEMORY	1261:8:33126:33157	423664	0	True				
ANR	424491	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		423664	0		&			
ANR	424492	MemberAccess	op -> operands [ 1 ] . type		423664	0					
ANR	424493	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424494	PtrMemberAccess	op -> operands		423664	0					
ANR	424495	Identifier	op		423664	0					
ANR	424496	Identifier	operands		423664	1					
ANR	424497	PrimaryExpression	1		423664	1					
ANR	424498	Identifier	type		423664	1					
ANR	424499	Identifier	OT_MEMORY		423664	1					
ANR	424500	CompoundStatement		100:42:2943:2943	423664	1					
ANR	424501	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		423664	0					
ANR	424502	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	1262:9:33171:33211	423664	0	True				
ANR	424503	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		423664	0		!=			
ANR	424504	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		423664	0					
ANR	424505	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424506	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424507	PtrMemberAccess	op -> operands		423664	0					
ANR	424508	Identifier	op		423664	0					
ANR	424509	Identifier	operands		423664	1					
ANR	424510	PrimaryExpression	1		423664	1					
ANR	424511	Identifier	regs		423664	1					
ANR	424512	PrimaryExpression	1		423664	1					
ANR	424513	Identifier	X86R_UNDEFINED		423664	1					
ANR	424514	CompoundStatement		101:52:2997:2997	423664	1					
ANR	424515	ExpressionStatement	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3	1263:6:33222:33265	423664	0	True				
ANR	424516	AssignmentExpression	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3		423664	0		=			
ANR	424517	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424518	Identifier	data		423664	0					
ANR	424519	PostIncDecOperationExpression	l ++		423664	1					
ANR	424520	Identifier	l		423664	0					
ANR	424521	IncDec	++		423664	1					
ANR	424522	InclusiveOrExpression	0x04 | op -> operands [ 0 ] . reg << 3		423664	1		|			
ANR	424523	PrimaryExpression	0x04		423664	0					
ANR	424524	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	1		<<			
ANR	424525	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424526	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424527	PtrMemberAccess	op -> operands		423664	0					
ANR	424528	Identifier	op		423664	0					
ANR	424529	Identifier	operands		423664	1					
ANR	424530	PrimaryExpression	0		423664	1					
ANR	424531	Identifier	reg		423664	1					
ANR	424532	PrimaryExpression	3		423664	1					
ANR	424533	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] | op -> operands [ 1 ] . regs [ 1 ] << 3	1264:6:33273:33340	423664	1	True				
ANR	424534	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] | op -> operands [ 1 ] . regs [ 1 ] << 3		423664	0		=			
ANR	424535	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424536	Identifier	data		423664	0					
ANR	424537	PostIncDecOperationExpression	l ++		423664	1					
ANR	424538	Identifier	l		423664	0					
ANR	424539	IncDec	++		423664	1					
ANR	424540	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] | op -> operands [ 1 ] . regs [ 1 ] << 3		423664	1		|			
ANR	424541	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		423664	0					
ANR	424542	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424543	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424544	PtrMemberAccess	op -> operands		423664	0					
ANR	424545	Identifier	op		423664	0					
ANR	424546	Identifier	operands		423664	1					
ANR	424547	PrimaryExpression	1		423664	1					
ANR	424548	Identifier	regs		423664	1					
ANR	424549	PrimaryExpression	0		423664	1					
ANR	424550	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		423664	1		<<			
ANR	424551	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		423664	0					
ANR	424552	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424553	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424554	PtrMemberAccess	op -> operands		423664	0					
ANR	424555	Identifier	op		423664	0					
ANR	424556	Identifier	operands		423664	1					
ANR	424557	PrimaryExpression	1		423664	1					
ANR	424558	Identifier	regs		423664	1					
ANR	424559	PrimaryExpression	1		423664	1					
ANR	424560	PrimaryExpression	3		423664	1					
ANR	424561	ElseStatement	else		423664	0					
ANR	424562	CompoundStatement		104:12:3137:3137	423664	0					
ANR	424563	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1266:6:33362:33423	423664	0	True				
ANR	424564	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		423664	0		=			
ANR	424565	Identifier	offset		423664	0					
ANR	424566	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		423664	1		*			
ANR	424567	MemberAccess	op -> operands [ 1 ] . offset		423664	0					
ANR	424568	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424569	PtrMemberAccess	op -> operands		423664	0					
ANR	424570	Identifier	op		423664	0					
ANR	424571	Identifier	operands		423664	1					
ANR	424572	PrimaryExpression	1		423664	1					
ANR	424573	Identifier	offset		423664	1					
ANR	424574	MemberAccess	op -> operands [ 1 ] . offset_sign		423664	1					
ANR	424575	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424576	PtrMemberAccess	op -> operands		423664	0					
ANR	424577	Identifier	op		423664	0					
ANR	424578	Identifier	operands		423664	1					
ANR	424579	PrimaryExpression	1		423664	1					
ANR	424580	Identifier	offset_sign		423664	1					
ANR	424581	IfStatement	if ( offset != 0 )		423664	1					
ANR	424582	Condition	offset != 0	1267:10:33435:33445	423664	0	True				
ANR	424583	EqualityExpression	offset != 0		423664	0		!=			
ANR	424584	Identifier	offset		423664	0					
ANR	424585	PrimaryExpression	0		423664	1					
ANR	424586	CompoundStatement		106:23:3231:3231	423664	1					
ANR	424587	IfStatement	if ( offset >= 128 || offset <= - 128 )		423664	0					
ANR	424588	Condition	offset >= 128 || offset <= - 128	1268:11:33461:33491	423664	0	True				
ANR	424589	OrExpression	offset >= 128 || offset <= - 128		423664	0		||			
ANR	424590	RelationalExpression	offset >= 128		423664	0		>=			
ANR	424591	Identifier	offset		423664	0					
ANR	424592	PrimaryExpression	128		423664	1					
ANR	424593	RelationalExpression	offset <= - 128		423664	1		<=			
ANR	424594	Identifier	offset		423664	0					
ANR	424595	UnaryOperationExpression	- 128		423664	1					
ANR	424596	UnaryOperator	-		423664	0					
ANR	424597	PrimaryExpression	128		423664	1					
ANR	424598	CompoundStatement		107:44:3277:3277	423664	1					
ANR	424599	ExpressionStatement	data [ l ] = 0x80	1269:8:33504:33518	423664	0	True				
ANR	424600	AssignmentExpression	data [ l ] = 0x80		423664	0		=			
ANR	424601	ArrayIndexing	data [ l ]		423664	0					
ANR	424602	Identifier	data		423664	0					
ANR	424603	Identifier	l		423664	1					
ANR	424604	PrimaryExpression	0x80		423664	1					
ANR	424605	ElseStatement	else		423664	0					
ANR	424606	CompoundStatement		109:14:3317:3317	423664	0					
ANR	424607	ExpressionStatement	data [ l ] = 0x40	1271:8:33544:33558	423664	0	True				
ANR	424608	AssignmentExpression	data [ l ] = 0x40		423664	0		=			
ANR	424609	ArrayIndexing	data [ l ]		423664	0					
ANR	424610	Identifier	data		423664	0					
ANR	424611	Identifier	l		423664	1					
ANR	424612	PrimaryExpression	0x40		423664	1					
ANR	424613	ExpressionStatement	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3	1273:7:33576:33613	423664	1	True				
ANR	424614	AssignmentExpression	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3		423664	0		|=			
ANR	424615	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424616	Identifier	data		423664	0					
ANR	424617	PostIncDecOperationExpression	l ++		423664	1					
ANR	424618	Identifier	l		423664	0					
ANR	424619	IncDec	++		423664	1					
ANR	424620	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	1		<<			
ANR	424621	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424622	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424623	PtrMemberAccess	op -> operands		423664	0					
ANR	424624	Identifier	op		423664	0					
ANR	424625	Identifier	operands		423664	1					
ANR	424626	PrimaryExpression	0		423664	1					
ANR	424627	Identifier	reg		423664	1					
ANR	424628	PrimaryExpression	3		423664	1					
ANR	424629	ExpressionStatement	data [ l ++ ] = offset	1274:7:33622:33640	423664	2	True				
ANR	424630	AssignmentExpression	data [ l ++ ] = offset		423664	0		=			
ANR	424631	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424632	Identifier	data		423664	0					
ANR	424633	PostIncDecOperationExpression	l ++		423664	1					
ANR	424634	Identifier	l		423664	0					
ANR	424635	IncDec	++		423664	1					
ANR	424636	Identifier	offset		423664	1					
ANR	424637	IfStatement	if ( offset >= 128 || offset <= - 128 )		423664	3					
ANR	424638	Condition	offset >= 128 || offset <= - 128	1275:11:33653:33683	423664	0	True				
ANR	424639	OrExpression	offset >= 128 || offset <= - 128		423664	0		||			
ANR	424640	RelationalExpression	offset >= 128		423664	0		>=			
ANR	424641	Identifier	offset		423664	0					
ANR	424642	PrimaryExpression	128		423664	1					
ANR	424643	RelationalExpression	offset <= - 128		423664	1		<=			
ANR	424644	Identifier	offset		423664	0					
ANR	424645	UnaryOperationExpression	- 128		423664	1					
ANR	424646	UnaryOperator	-		423664	0					
ANR	424647	PrimaryExpression	128		423664	1					
ANR	424648	CompoundStatement		114:44:3469:3469	423664	1					
ANR	424649	ExpressionStatement	data [ l ++ ] = offset >> 8	1276:8:33696:33719	423664	0	True				
ANR	424650	AssignmentExpression	data [ l ++ ] = offset >> 8		423664	0		=			
ANR	424651	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424652	Identifier	data		423664	0					
ANR	424653	PostIncDecOperationExpression	l ++		423664	1					
ANR	424654	Identifier	l		423664	0					
ANR	424655	IncDec	++		423664	1					
ANR	424656	ShiftExpression	offset >> 8		423664	1		>>			
ANR	424657	Identifier	offset		423664	0					
ANR	424658	PrimaryExpression	8		423664	1					
ANR	424659	ExpressionStatement	data [ l ++ ] = offset >> 16	1277:8:33729:33753	423664	1	True				
ANR	424660	AssignmentExpression	data [ l ++ ] = offset >> 16		423664	0		=			
ANR	424661	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424662	Identifier	data		423664	0					
ANR	424663	PostIncDecOperationExpression	l ++		423664	1					
ANR	424664	Identifier	l		423664	0					
ANR	424665	IncDec	++		423664	1					
ANR	424666	ShiftExpression	offset >> 16		423664	1		>>			
ANR	424667	Identifier	offset		423664	0					
ANR	424668	PrimaryExpression	16		423664	1					
ANR	424669	ExpressionStatement	data [ l ++ ] = offset >> 24	1278:8:33763:33787	423664	2	True				
ANR	424670	AssignmentExpression	data [ l ++ ] = offset >> 24		423664	0		=			
ANR	424671	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424672	Identifier	data		423664	0					
ANR	424673	PostIncDecOperationExpression	l ++		423664	1					
ANR	424674	Identifier	l		423664	0					
ANR	424675	IncDec	++		423664	1					
ANR	424676	ShiftExpression	offset >> 24		423664	1		>>			
ANR	424677	Identifier	offset		423664	0					
ANR	424678	PrimaryExpression	24		423664	1					
ANR	424679	ElseStatement	else		423664	0					
ANR	424680	CompoundStatement		119:13:3594:3594	423664	0					
ANR	424681	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1281:7:33820:33889	423664	0	True				
ANR	424682	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	0		=			
ANR	424683	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424684	Identifier	data		423664	0					
ANR	424685	PostIncDecOperationExpression	l ++		423664	1					
ANR	424686	Identifier	l		423664	0					
ANR	424687	IncDec	++		423664	1					
ANR	424688	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	1		|			
ANR	424689	PrimaryExpression	0x00		423664	0					
ANR	424690	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		423664	1		|			
ANR	424691	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	424692	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424693	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424694	PtrMemberAccess	op -> operands		423664	0					
ANR	424695	Identifier	op		423664	0					
ANR	424696	Identifier	operands		423664	1					
ANR	424697	PrimaryExpression	0		423664	1					
ANR	424698	Identifier	reg		423664	1					
ANR	424699	PrimaryExpression	3		423664	1					
ANR	424700	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		423664	1					
ANR	424701	MemberAccess	op -> operands [ 1 ] . regs		423664	0					
ANR	424702	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424703	PtrMemberAccess	op -> operands		423664	0					
ANR	424704	Identifier	op		423664	0					
ANR	424705	Identifier	operands		423664	1					
ANR	424706	PrimaryExpression	1		423664	1					
ANR	424707	Identifier	regs		423664	1					
ANR	424708	PrimaryExpression	0		423664	1					
ANR	424709	ElseStatement	else		423664	0					
ANR	424710	CompoundStatement		123:11:3700:3700	423664	0					
ANR	424711	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg	1285:5:33924:33989	423664	0	True				
ANR	424712	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		423664	0		=			
ANR	424713	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424714	Identifier	data		423664	0					
ANR	424715	PostIncDecOperationExpression	l ++		423664	1					
ANR	424716	Identifier	l		423664	0					
ANR	424717	IncDec	++		423664	1					
ANR	424718	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		423664	1		|			
ANR	424719	PrimaryExpression	0xc0		423664	0					
ANR	424720	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		423664	1		|			
ANR	424721	ShiftExpression	op -> operands [ 0 ] . reg << 3		423664	0		<<			
ANR	424722	MemberAccess	op -> operands [ 0 ] . reg		423664	0					
ANR	424723	ArrayIndexing	op -> operands [ 0 ]		423664	0					
ANR	424724	PtrMemberAccess	op -> operands		423664	0					
ANR	424725	Identifier	op		423664	0					
ANR	424726	Identifier	operands		423664	1					
ANR	424727	PrimaryExpression	0		423664	1					
ANR	424728	Identifier	reg		423664	1					
ANR	424729	PrimaryExpression	3		423664	1					
ANR	424730	MemberAccess	op -> operands [ 1 ] . reg		423664	1					
ANR	424731	ArrayIndexing	op -> operands [ 1 ]		423664	0					
ANR	424732	PtrMemberAccess	op -> operands		423664	0					
ANR	424733	Identifier	op		423664	0					
ANR	424734	Identifier	operands		423664	1					
ANR	424735	PrimaryExpression	1		423664	1					
ANR	424736	Identifier	reg		423664	1					
ANR	424737	ExpressionStatement	immediate = op -> operands [ 2 ] . immediate * op -> operands [ 2 ] . sign	1287:4:34001:34061	423664	2	True				
ANR	424738	AssignmentExpression	immediate = op -> operands [ 2 ] . immediate * op -> operands [ 2 ] . sign		423664	0		=			
ANR	424739	Identifier	immediate		423664	0					
ANR	424740	MultiplicativeExpression	op -> operands [ 2 ] . immediate * op -> operands [ 2 ] . sign		423664	1		*			
ANR	424741	MemberAccess	op -> operands [ 2 ] . immediate		423664	0					
ANR	424742	ArrayIndexing	op -> operands [ 2 ]		423664	0					
ANR	424743	PtrMemberAccess	op -> operands		423664	0					
ANR	424744	Identifier	op		423664	0					
ANR	424745	Identifier	operands		423664	1					
ANR	424746	PrimaryExpression	2		423664	1					
ANR	424747	Identifier	immediate		423664	1					
ANR	424748	MemberAccess	op -> operands [ 2 ] . sign		423664	1					
ANR	424749	ArrayIndexing	op -> operands [ 2 ]		423664	0					
ANR	424750	PtrMemberAccess	op -> operands		423664	0					
ANR	424751	Identifier	op		423664	0					
ANR	424752	Identifier	operands		423664	1					
ANR	424753	PrimaryExpression	2		423664	1					
ANR	424754	Identifier	sign		423664	1					
ANR	424755	ExpressionStatement	data [ l ++ ] = immediate	1288:4:34067:34088	423664	3	True				
ANR	424756	AssignmentExpression	data [ l ++ ] = immediate		423664	0		=			
ANR	424757	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424758	Identifier	data		423664	0					
ANR	424759	PostIncDecOperationExpression	l ++		423664	1					
ANR	424760	Identifier	l		423664	0					
ANR	424761	IncDec	++		423664	1					
ANR	424762	Identifier	immediate		423664	1					
ANR	424763	IfStatement	if ( immediate >= 128 || immediate <= - 128 )		423664	4					
ANR	424764	Condition	immediate >= 128 || immediate <= - 128	1289:8:34098:34134	423664	0	True				
ANR	424765	OrExpression	immediate >= 128 || immediate <= - 128		423664	0		||			
ANR	424766	RelationalExpression	immediate >= 128		423664	0		>=			
ANR	424767	Identifier	immediate		423664	0					
ANR	424768	PrimaryExpression	128		423664	1					
ANR	424769	RelationalExpression	immediate <= - 128		423664	1		<=			
ANR	424770	Identifier	immediate		423664	0					
ANR	424771	UnaryOperationExpression	- 128		423664	1					
ANR	424772	UnaryOperator	-		423664	0					
ANR	424773	PrimaryExpression	128		423664	1					
ANR	424774	CompoundStatement		128:47:3920:3920	423664	1					
ANR	424775	ExpressionStatement	data [ l ++ ] = immediate >> 8	1290:5:34144:34170	423664	0	True				
ANR	424776	AssignmentExpression	data [ l ++ ] = immediate >> 8		423664	0		=			
ANR	424777	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424778	Identifier	data		423664	0					
ANR	424779	PostIncDecOperationExpression	l ++		423664	1					
ANR	424780	Identifier	l		423664	0					
ANR	424781	IncDec	++		423664	1					
ANR	424782	ShiftExpression	immediate >> 8		423664	1		>>			
ANR	424783	Identifier	immediate		423664	0					
ANR	424784	PrimaryExpression	8		423664	1					
ANR	424785	ExpressionStatement	data [ l ++ ] = immediate >> 16	1291:5:34177:34204	423664	1	True				
ANR	424786	AssignmentExpression	data [ l ++ ] = immediate >> 16		423664	0		=			
ANR	424787	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424788	Identifier	data		423664	0					
ANR	424789	PostIncDecOperationExpression	l ++		423664	1					
ANR	424790	Identifier	l		423664	0					
ANR	424791	IncDec	++		423664	1					
ANR	424792	ShiftExpression	immediate >> 16		423664	1		>>			
ANR	424793	Identifier	immediate		423664	0					
ANR	424794	PrimaryExpression	16		423664	1					
ANR	424795	ExpressionStatement	data [ l ++ ] = immediate >> 24	1292:5:34211:34238	423664	2	True				
ANR	424796	AssignmentExpression	data [ l ++ ] = immediate >> 24		423664	0		=			
ANR	424797	ArrayIndexing	data [ l ++ ]		423664	0					
ANR	424798	Identifier	data		423664	0					
ANR	424799	PostIncDecOperationExpression	l ++		423664	1					
ANR	424800	Identifier	l		423664	0					
ANR	424801	IncDec	++		423664	1					
ANR	424802	ShiftExpression	immediate >> 24		423664	1		>>			
ANR	424803	Identifier	immediate		423664	0					
ANR	424804	PrimaryExpression	24		423664	1					
ANR	424805	BreakStatement	break ;	1295:2:34252:34257	423664	10	True				
ANR	424806	Label	default :	1296:1:34260:34267	423664	11	True				
ANR	424807	Identifier	default		423664	0					
ANR	424808	ReturnStatement	return - 1 ;	1297:2:34271:34280	423664	12	True				
ANR	424809	UnaryOperationExpression	- 1		423664	0					
ANR	424810	UnaryOperator	-		423664	0					
ANR	424811	PrimaryExpression	1		423664	1					
ANR	424812	ReturnStatement	return l ;	1299:1:34286:34294	423664	6	True				
ANR	424813	Identifier	l		423664	0					
ANR	424814	ReturnType	static int		423664	1					
ANR	424815	Identifier	opimul		423664	2					
ANR	424816	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		423664	3					
ANR	424817	Parameter	RAsm * a	1162:18:30178:30184	423664	0	True				
ANR	424818	ParameterType	RAsm *		423664	0					
ANR	424819	Identifier	a		423664	1					
ANR	424820	Parameter	ut8 * data	1162:27:30187:30195	423664	1	True				
ANR	424821	ParameterType	ut8 *		423664	0					
ANR	424822	Identifier	data		423664	1					
ANR	424823	Parameter	const Opcode * op	1162:38:30198:30213	423664	2	True				
ANR	424824	ParameterType	const Opcode *		423664	0					
ANR	424825	Identifier	op		423664	1					
ANR	424826	CFGEntryNode	ENTRY		423664		True				
ANR	424827	CFGExitNode	EXIT		423664		True				
ANR	424828	Symbol	UT32_MAX		423664						
ANR	424829	Symbol	OT_QWORD		423664						
ANR	424830	Symbol	data		423664						
ANR	424831	Symbol	* op		423664						
ANR	424832	Symbol	op -> operands [ 1 ] . immediate		423664						
ANR	424833	Symbol	* * op		423664						
ANR	424834	Symbol	* op -> operands [ 1 ] . regs		423664						
ANR	424835	Symbol	* op -> operands		423664						
ANR	424836	Symbol	op -> operands [ 1 ] . regs		423664						
ANR	424837	Symbol	op -> operands [ 0 ] . type		423664						
ANR	424838	Symbol	op -> operands [ 0 ] . reg		423664						
ANR	424839	Symbol	op -> operands [ 1 ] . offset_sign		423664						
ANR	424840	Symbol	OT_MEMORY		423664						
ANR	424841	Symbol	OT_BYTE		423664						
ANR	424842	Symbol	a -> bits		423664						
ANR	424843	Symbol	op -> operands [ 2 ] . immediate		423664						
ANR	424844	Symbol	a		423664						
ANR	424845	Symbol	op		423664						
ANR	424846	Symbol	OT_CONSTANT		423664						
ANR	424847	Symbol	OT_WORD		423664						
ANR	424848	Symbol	OT_GPREG		423664						
ANR	424849	Symbol	offset		423664						
ANR	424850	Symbol	op -> operands [ 1 ] . reg		423664						
ANR	424851	Symbol	op -> operands [ 1 ] . offset		423664						
ANR	424852	Symbol	* * op -> operands		423664						
ANR	424853	Symbol	* a		423664						
ANR	424854	Symbol	l		423664						
ANR	424855	Symbol	op -> operands [ 2 ] . type		423664						
ANR	424856	Symbol	op -> operands [ 2 ] . sign		423664						
ANR	424857	Symbol	X86R_UNDEFINED		423664						
ANR	424858	Symbol	immediate		423664						
ANR	424859	Symbol	op -> operands [ 1 ] . type		423664						
ANR	424860	Symbol	op -> operands_count		423664						
ANR	424861	Symbol	* l		423664						
ANR	424862	Symbol	* op -> operands [ 0 ] . regs		423664						
ANR	424863	Symbol	op -> operands [ 1 ] . sign		423664						
ANR	424864	Symbol	* * * op		423664						
ANR	424865	Symbol	op -> operands		423664						
ANR	424866	Symbol	* data		423664						
ANR	424867	Symbol	op -> operands [ 0 ] . regs		423664						
ANR	424868	Function	opin	1302:0:34299:35380							
ANR	424869	FunctionDef	"opin (RAsm * a , ut8 * data , const Opcode * op)"		424868	0					
ANR	424870	CompoundStatement		1302:54:34353:35380	424868	0					
ANR	424871	ExpressionStatement	is_valid_registers ( op )	1303:1:34356:34379	424868	0	True				
ANR	424872	CallExpression	is_valid_registers ( op )		424868	0					
ANR	424873	Callee	is_valid_registers		424868	0					
ANR	424874	Identifier	is_valid_registers		424868	0					
ANR	424875	ArgumentList	op		424868	1					
ANR	424876	Argument	op		424868	0					
ANR	424877	Identifier	op		424868	0					
ANR	424878	IdentifierDeclStatement	int l = 0 ;	1304:1:34382:34391	424868	1	True				
ANR	424879	IdentifierDecl	l = 0		424868	0					
ANR	424880	IdentifierDeclType	int		424868	0					
ANR	424881	Identifier	l		424868	1					
ANR	424882	AssignmentExpression	l = 0		424868	2		=			
ANR	424883	Identifier	l		424868	0					
ANR	424884	PrimaryExpression	0		424868	1					
ANR	424885	IdentifierDeclStatement	st32 immediate = 0 ;	1305:1:34394:34412	424868	2	True				
ANR	424886	IdentifierDecl	immediate = 0		424868	0					
ANR	424887	IdentifierDeclType	st32		424868	0					
ANR	424888	Identifier	immediate		424868	1					
ANR	424889	AssignmentExpression	immediate = 0		424868	2		=			
ANR	424890	Identifier	immediate		424868	0					
ANR	424891	PrimaryExpression	0		424868	1					
ANR	424892	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_DX )		424868	3					
ANR	424893	Condition	op -> operands [ 1 ] . reg == X86R_DX	1306:5:34419:34448	424868	0	True				
ANR	424894	EqualityExpression	op -> operands [ 1 ] . reg == X86R_DX		424868	0		==			
ANR	424895	MemberAccess	op -> operands [ 1 ] . reg		424868	0					
ANR	424896	ArrayIndexing	op -> operands [ 1 ]		424868	0					
ANR	424897	PtrMemberAccess	op -> operands		424868	0					
ANR	424898	Identifier	op		424868	0					
ANR	424899	Identifier	operands		424868	1					
ANR	424900	PrimaryExpression	1		424868	1					
ANR	424901	Identifier	reg		424868	1					
ANR	424902	Identifier	X86R_DX		424868	1					
ANR	424903	CompoundStatement		5:37:97:97	424868	1					
ANR	424904	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE )		424868	0					
ANR	424905	Condition	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE	1307:6:34459:34525	424868	0	True				
ANR	424906	AndExpression	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE		424868	0		&&			
ANR	424907	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AL		424868	0		==			
ANR	424908	MemberAccess	op -> operands [ 0 ] . reg		424868	0					
ANR	424909	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	424910	PtrMemberAccess	op -> operands		424868	0					
ANR	424911	Identifier	op		424868	0					
ANR	424912	Identifier	operands		424868	1					
ANR	424913	PrimaryExpression	0		424868	1					
ANR	424914	Identifier	reg		424868	1					
ANR	424915	Identifier	X86R_AL		424868	1					
ANR	424916	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		424868	1		&			
ANR	424917	MemberAccess	op -> operands [ 0 ] . type		424868	0					
ANR	424918	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	424919	PtrMemberAccess	op -> operands		424868	0					
ANR	424920	Identifier	op		424868	0					
ANR	424921	Identifier	operands		424868	1					
ANR	424922	PrimaryExpression	0		424868	1					
ANR	424923	Identifier	type		424868	1					
ANR	424924	Identifier	OT_BYTE		424868	1					
ANR	424925	CompoundStatement		7:35:174:174	424868	1					
ANR	424926	ExpressionStatement	data [ l ++ ] = 0xec	1309:3:34533:34549	424868	0	True				
ANR	424927	AssignmentExpression	data [ l ++ ] = 0xec		424868	0		=			
ANR	424928	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	424929	Identifier	data		424868	0					
ANR	424930	PostIncDecOperationExpression	l ++		424868	1					
ANR	424931	Identifier	l		424868	0					
ANR	424932	IncDec	++		424868	1					
ANR	424933	PrimaryExpression	0xec		424868	1					
ANR	424934	ReturnStatement	return l ;	1310:3:34554:34562	424868	1	True				
ANR	424935	Identifier	l		424868	0					
ANR	424936	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_WORD )		424868	1					
ANR	424937	Condition	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_WORD	1312:6:34574:34640	424868	0	True				
ANR	424938	AndExpression	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_WORD		424868	0		&&			
ANR	424939	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		424868	0		==			
ANR	424940	MemberAccess	op -> operands [ 0 ] . reg		424868	0					
ANR	424941	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	424942	PtrMemberAccess	op -> operands		424868	0					
ANR	424943	Identifier	op		424868	0					
ANR	424944	Identifier	operands		424868	1					
ANR	424945	PrimaryExpression	0		424868	1					
ANR	424946	Identifier	reg		424868	1					
ANR	424947	Identifier	X86R_AX		424868	1					
ANR	424948	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		424868	1		&			
ANR	424949	MemberAccess	op -> operands [ 0 ] . type		424868	0					
ANR	424950	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	424951	PtrMemberAccess	op -> operands		424868	0					
ANR	424952	Identifier	op		424868	0					
ANR	424953	Identifier	operands		424868	1					
ANR	424954	PrimaryExpression	0		424868	1					
ANR	424955	Identifier	type		424868	1					
ANR	424956	Identifier	OT_WORD		424868	1					
ANR	424957	CompoundStatement		12:35:289:289	424868	1					
ANR	424958	ExpressionStatement	data [ l ++ ] = 0x66	1314:3:34648:34664	424868	0	True				
ANR	424959	AssignmentExpression	data [ l ++ ] = 0x66		424868	0		=			
ANR	424960	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	424961	Identifier	data		424868	0					
ANR	424962	PostIncDecOperationExpression	l ++		424868	1					
ANR	424963	Identifier	l		424868	0					
ANR	424964	IncDec	++		424868	1					
ANR	424965	PrimaryExpression	0x66		424868	1					
ANR	424966	ExpressionStatement	data [ l ++ ] = 0xed	1315:3:34669:34685	424868	1	True				
ANR	424967	AssignmentExpression	data [ l ++ ] = 0xed		424868	0		=			
ANR	424968	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	424969	Identifier	data		424868	0					
ANR	424970	PostIncDecOperationExpression	l ++		424868	1					
ANR	424971	Identifier	l		424868	0					
ANR	424972	IncDec	++		424868	1					
ANR	424973	PrimaryExpression	0xed		424868	1					
ANR	424974	ReturnStatement	return l ;	1316:3:34690:34698	424868	2	True				
ANR	424975	Identifier	l		424868	0					
ANR	424976	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD )		424868	2					
ANR	424977	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD	1318:6:34710:34778	424868	0	True				
ANR	424978	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD		424868	0		&&			
ANR	424979	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		424868	0		==			
ANR	424980	MemberAccess	op -> operands [ 0 ] . reg		424868	0					
ANR	424981	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	424982	PtrMemberAccess	op -> operands		424868	0					
ANR	424983	Identifier	op		424868	0					
ANR	424984	Identifier	operands		424868	1					
ANR	424985	PrimaryExpression	0		424868	1					
ANR	424986	Identifier	reg		424868	1					
ANR	424987	Identifier	X86R_EAX		424868	1					
ANR	424988	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		424868	1		&			
ANR	424989	MemberAccess	op -> operands [ 0 ] . type		424868	0					
ANR	424990	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	424991	PtrMemberAccess	op -> operands		424868	0					
ANR	424992	Identifier	op		424868	0					
ANR	424993	Identifier	operands		424868	1					
ANR	424994	PrimaryExpression	0		424868	1					
ANR	424995	Identifier	type		424868	1					
ANR	424996	Identifier	OT_DWORD		424868	1					
ANR	424997	CompoundStatement		18:36:427:427	424868	1					
ANR	424998	ExpressionStatement	data [ l ++ ] = 0xed	1320:3:34786:34802	424868	0	True				
ANR	424999	AssignmentExpression	data [ l ++ ] = 0xed		424868	0		=			
ANR	425000	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	425001	Identifier	data		424868	0					
ANR	425002	PostIncDecOperationExpression	l ++		424868	1					
ANR	425003	Identifier	l		424868	0					
ANR	425004	IncDec	++		424868	1					
ANR	425005	PrimaryExpression	0xed		424868	1					
ANR	425006	ReturnStatement	return l ;	1321:3:34807:34815	424868	1	True				
ANR	425007	Identifier	l		424868	0					
ANR	425008	ElseStatement	else		424868	0					
ANR	425009	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		424868	0					
ANR	425010	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	1323:12:34833:34866	424868	0	True				
ANR	425011	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		424868	0		&			
ANR	425012	MemberAccess	op -> operands [ 1 ] . type		424868	0					
ANR	425013	ArrayIndexing	op -> operands [ 1 ]		424868	0					
ANR	425014	PtrMemberAccess	op -> operands		424868	0					
ANR	425015	Identifier	op		424868	0					
ANR	425016	Identifier	operands		424868	1					
ANR	425017	PrimaryExpression	1		424868	1					
ANR	425018	Identifier	type		424868	1					
ANR	425019	Identifier	OT_CONSTANT		424868	1					
ANR	425020	CompoundStatement		22:48:515:515	424868	1					
ANR	425021	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1324:2:34873:34933	424868	0	True				
ANR	425022	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		424868	0		=			
ANR	425023	Identifier	immediate		424868	0					
ANR	425024	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		424868	1		*			
ANR	425025	MemberAccess	op -> operands [ 1 ] . immediate		424868	0					
ANR	425026	ArrayIndexing	op -> operands [ 1 ]		424868	0					
ANR	425027	PtrMemberAccess	op -> operands		424868	0					
ANR	425028	Identifier	op		424868	0					
ANR	425029	Identifier	operands		424868	1					
ANR	425030	PrimaryExpression	1		424868	1					
ANR	425031	Identifier	immediate		424868	1					
ANR	425032	MemberAccess	op -> operands [ 1 ] . sign		424868	1					
ANR	425033	ArrayIndexing	op -> operands [ 1 ]		424868	0					
ANR	425034	PtrMemberAccess	op -> operands		424868	0					
ANR	425035	Identifier	op		424868	0					
ANR	425036	Identifier	operands		424868	1					
ANR	425037	PrimaryExpression	1		424868	1					
ANR	425038	Identifier	sign		424868	1					
ANR	425039	IfStatement	if ( immediate > 255 || immediate < - 128 )		424868	1					
ANR	425040	Condition	immediate > 255 || immediate < - 128	1325:6:34941:34975	424868	0	True				
ANR	425041	OrExpression	immediate > 255 || immediate < - 128		424868	0		||			
ANR	425042	RelationalExpression	immediate > 255		424868	0		>			
ANR	425043	Identifier	immediate		424868	0					
ANR	425044	PrimaryExpression	255		424868	1					
ANR	425045	RelationalExpression	immediate < - 128		424868	1		<			
ANR	425046	Identifier	immediate		424868	0					
ANR	425047	UnaryOperationExpression	- 128		424868	1					
ANR	425048	UnaryOperator	-		424868	0					
ANR	425049	PrimaryExpression	128		424868	1					
ANR	425050	CompoundStatement		24:43:624:624	424868	1					
ANR	425051	ReturnStatement	return - 1 ;	1326:3:34983:34992	424868	0	True				
ANR	425052	UnaryOperationExpression	- 1		424868	0					
ANR	425053	UnaryOperator	-		424868	0					
ANR	425054	PrimaryExpression	1		424868	1					
ANR	425055	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE )		424868	2					
ANR	425056	Condition	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE	1328:6:35004:35070	424868	0	True				
ANR	425057	AndExpression	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE		424868	0		&&			
ANR	425058	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AL		424868	0		==			
ANR	425059	MemberAccess	op -> operands [ 0 ] . reg		424868	0					
ANR	425060	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	425061	PtrMemberAccess	op -> operands		424868	0					
ANR	425062	Identifier	op		424868	0					
ANR	425063	Identifier	operands		424868	1					
ANR	425064	PrimaryExpression	0		424868	1					
ANR	425065	Identifier	reg		424868	1					
ANR	425066	Identifier	X86R_AL		424868	1					
ANR	425067	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		424868	1		&			
ANR	425068	MemberAccess	op -> operands [ 0 ] . type		424868	0					
ANR	425069	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	425070	PtrMemberAccess	op -> operands		424868	0					
ANR	425071	Identifier	op		424868	0					
ANR	425072	Identifier	operands		424868	1					
ANR	425073	PrimaryExpression	0		424868	1					
ANR	425074	Identifier	type		424868	1					
ANR	425075	Identifier	OT_BYTE		424868	1					
ANR	425076	CompoundStatement		28:35:719:719	424868	1					
ANR	425077	ExpressionStatement	data [ l ++ ] = 0xe4	1330:3:35078:35094	424868	0	True				
ANR	425078	AssignmentExpression	data [ l ++ ] = 0xe4		424868	0		=			
ANR	425079	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	425080	Identifier	data		424868	0					
ANR	425081	PostIncDecOperationExpression	l ++		424868	1					
ANR	425082	Identifier	l		424868	0					
ANR	425083	IncDec	++		424868	1					
ANR	425084	PrimaryExpression	0xe4		424868	1					
ANR	425085	ElseStatement	else		424868	0					
ANR	425086	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_BYTE )		424868	0					
ANR	425087	Condition	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_BYTE	1331:13:35109:35179	424868	0	True				
ANR	425088	AndExpression	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_BYTE		424868	0		&&			
ANR	425089	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		424868	0		==			
ANR	425090	MemberAccess	op -> operands [ 0 ] . reg		424868	0					
ANR	425091	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	425092	PtrMemberAccess	op -> operands		424868	0					
ANR	425093	Identifier	op		424868	0					
ANR	425094	Identifier	operands		424868	1					
ANR	425095	PrimaryExpression	0		424868	1					
ANR	425096	Identifier	reg		424868	1					
ANR	425097	Identifier	X86R_AX		424868	1					
ANR	425098	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		424868	1		&			
ANR	425099	MemberAccess	op -> operands [ 0 ] . type		424868	0					
ANR	425100	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	425101	PtrMemberAccess	op -> operands		424868	0					
ANR	425102	Identifier	op		424868	0					
ANR	425103	Identifier	operands		424868	1					
ANR	425104	PrimaryExpression	0		424868	1					
ANR	425105	Identifier	type		424868	1					
ANR	425106	Identifier	OT_BYTE		424868	1					
ANR	425107	CompoundStatement		31:39:828:828	424868	1					
ANR	425108	ExpressionStatement	data [ l ++ ] = 0x66	1333:3:35187:35203	424868	0	True				
ANR	425109	AssignmentExpression	data [ l ++ ] = 0x66		424868	0		=			
ANR	425110	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	425111	Identifier	data		424868	0					
ANR	425112	PostIncDecOperationExpression	l ++		424868	1					
ANR	425113	Identifier	l		424868	0					
ANR	425114	IncDec	++		424868	1					
ANR	425115	PrimaryExpression	0x66		424868	1					
ANR	425116	ExpressionStatement	data [ l ++ ] = 0xe5	1334:3:35208:35224	424868	1	True				
ANR	425117	AssignmentExpression	data [ l ++ ] = 0xe5		424868	0		=			
ANR	425118	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	425119	Identifier	data		424868	0					
ANR	425120	PostIncDecOperationExpression	l ++		424868	1					
ANR	425121	Identifier	l		424868	0					
ANR	425122	IncDec	++		424868	1					
ANR	425123	PrimaryExpression	0xe5		424868	1					
ANR	425124	ElseStatement	else		424868	0					
ANR	425125	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD )		424868	0					
ANR	425126	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD	1335:13:35239:35311	424868	0	True				
ANR	425127	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD		424868	0		&&			
ANR	425128	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		424868	0		==			
ANR	425129	MemberAccess	op -> operands [ 0 ] . reg		424868	0					
ANR	425130	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	425131	PtrMemberAccess	op -> operands		424868	0					
ANR	425132	Identifier	op		424868	0					
ANR	425133	Identifier	operands		424868	1					
ANR	425134	PrimaryExpression	0		424868	1					
ANR	425135	Identifier	reg		424868	1					
ANR	425136	Identifier	X86R_EAX		424868	1					
ANR	425137	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		424868	1		&			
ANR	425138	MemberAccess	op -> operands [ 0 ] . type		424868	0					
ANR	425139	ArrayIndexing	op -> operands [ 0 ]		424868	0					
ANR	425140	PtrMemberAccess	op -> operands		424868	0					
ANR	425141	Identifier	op		424868	0					
ANR	425142	Identifier	operands		424868	1					
ANR	425143	PrimaryExpression	0		424868	1					
ANR	425144	Identifier	type		424868	1					
ANR	425145	Identifier	OT_DWORD		424868	1					
ANR	425146	CompoundStatement		35:40:960:960	424868	1					
ANR	425147	ExpressionStatement	data [ l ++ ] = 0xe5	1337:3:35319:35335	424868	0	True				
ANR	425148	AssignmentExpression	data [ l ++ ] = 0xe5		424868	0		=			
ANR	425149	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	425150	Identifier	data		424868	0					
ANR	425151	PostIncDecOperationExpression	l ++		424868	1					
ANR	425152	Identifier	l		424868	0					
ANR	425153	IncDec	++		424868	1					
ANR	425154	PrimaryExpression	0xe5		424868	1					
ANR	425155	ExpressionStatement	data [ l ++ ] = immediate	1339:2:35343:35364	424868	3	True				
ANR	425156	AssignmentExpression	data [ l ++ ] = immediate		424868	0		=			
ANR	425157	ArrayIndexing	data [ l ++ ]		424868	0					
ANR	425158	Identifier	data		424868	0					
ANR	425159	PostIncDecOperationExpression	l ++		424868	1					
ANR	425160	Identifier	l		424868	0					
ANR	425161	IncDec	++		424868	1					
ANR	425162	Identifier	immediate		424868	1					
ANR	425163	ReturnStatement	return l ;	1341:1:35370:35378	424868	4	True				
ANR	425164	Identifier	l		424868	0					
ANR	425165	ReturnType	static int		424868	1					
ANR	425166	Identifier	opin		424868	2					
ANR	425167	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		424868	3					
ANR	425168	Parameter	RAsm * a	1302:16:34315:34321	424868	0	True				
ANR	425169	ParameterType	RAsm *		424868	0					
ANR	425170	Identifier	a		424868	1					
ANR	425171	Parameter	ut8 * data	1302:25:34324:34332	424868	1	True				
ANR	425172	ParameterType	ut8 *		424868	0					
ANR	425173	Identifier	data		424868	1					
ANR	425174	Parameter	const Opcode * op	1302:36:34335:34350	424868	2	True				
ANR	425175	ParameterType	const Opcode *		424868	0					
ANR	425176	Identifier	op		424868	1					
ANR	425177	CFGEntryNode	ENTRY		424868		True				
ANR	425178	CFGExitNode	EXIT		424868		True				
ANR	425179	Symbol	X86R_EAX		424868						
ANR	425180	Symbol	a		424868						
ANR	425181	Symbol	op		424868						
ANR	425182	Symbol	OT_CONSTANT		424868						
ANR	425183	Symbol	OT_WORD		424868						
ANR	425184	Symbol	data		424868						
ANR	425185	Symbol	X86R_DX		424868						
ANR	425186	Symbol	op -> operands [ 1 ] . reg		424868						
ANR	425187	Symbol	* op		424868						
ANR	425188	Symbol	X86R_AX		424868						
ANR	425189	Symbol	op -> operands [ 1 ] . immediate		424868						
ANR	425190	Symbol	l		424868						
ANR	425191	Symbol	* * op		424868						
ANR	425192	Symbol	* op -> operands		424868						
ANR	425193	Symbol	immediate		424868						
ANR	425194	Symbol	op -> operands [ 1 ] . type		424868						
ANR	425195	Symbol	op -> operands [ 1 ] . sign		424868						
ANR	425196	Symbol	op -> operands [ 0 ] . type		424868						
ANR	425197	Symbol	op -> operands [ 0 ] . reg		424868						
ANR	425198	Symbol	op -> operands		424868						
ANR	425199	Symbol	X86R_AL		424868						
ANR	425200	Symbol	* data		424868						
ANR	425201	Symbol	OT_BYTE		424868						
ANR	425202	Symbol	OT_DWORD		424868						
ANR	425203	Function	opclflush	1344:0:35383:36030							
ANR	425204	FunctionDef	"opclflush (RAsm * a , ut8 * data , const Opcode * op)"		425203	0					
ANR	425205	CompoundStatement		1344:59:35442:36030	425203	0					
ANR	425206	ExpressionStatement	is_valid_registers ( op )	1345:1:35445:35468	425203	0	True				
ANR	425207	CallExpression	is_valid_registers ( op )		425203	0					
ANR	425208	Callee	is_valid_registers		425203	0					
ANR	425209	Identifier	is_valid_registers		425203	0					
ANR	425210	ArgumentList	op		425203	1					
ANR	425211	Argument	op		425203	0					
ANR	425212	Identifier	op		425203	0					
ANR	425213	IdentifierDeclStatement	int l = 0 ;	1346:1:35471:35480	425203	1	True				
ANR	425214	IdentifierDecl	l = 0		425203	0					
ANR	425215	IdentifierDeclType	int		425203	0					
ANR	425216	Identifier	l		425203	1					
ANR	425217	AssignmentExpression	l = 0		425203	2		=			
ANR	425218	Identifier	l		425203	0					
ANR	425219	PrimaryExpression	0		425203	1					
ANR	425220	IdentifierDeclStatement	int offset = 0 ;	1347:1:35483:35497	425203	2	True				
ANR	425221	IdentifierDecl	offset = 0		425203	0					
ANR	425222	IdentifierDeclType	int		425203	0					
ANR	425223	Identifier	offset		425203	1					
ANR	425224	AssignmentExpression	offset = 0		425203	2		=			
ANR	425225	Identifier	offset		425203	0					
ANR	425226	PrimaryExpression	0		425203	1					
ANR	425227	IdentifierDeclStatement	int mod_byte = 0 ;	1348:1:35500:35516	425203	3	True				
ANR	425228	IdentifierDecl	mod_byte = 0		425203	0					
ANR	425229	IdentifierDeclType	int		425203	0					
ANR	425230	Identifier	mod_byte		425203	1					
ANR	425231	AssignmentExpression	mod_byte = 0		425203	2		=			
ANR	425232	Identifier	mod_byte		425203	0					
ANR	425233	PrimaryExpression	0		425203	1					
ANR	425234	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		425203	4					
ANR	425235	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1350:5:35524:35555	425203	0	True				
ANR	425236	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		425203	0		&			
ANR	425237	MemberAccess	op -> operands [ 0 ] . type		425203	0					
ANR	425238	ArrayIndexing	op -> operands [ 0 ]		425203	0					
ANR	425239	PtrMemberAccess	op -> operands		425203	0					
ANR	425240	Identifier	op		425203	0					
ANR	425241	Identifier	operands		425203	1					
ANR	425242	PrimaryExpression	0		425203	1					
ANR	425243	Identifier	type		425203	1					
ANR	425244	Identifier	OT_MEMORY		425203	1					
ANR	425245	CompoundStatement		7:39:115:115	425203	1					
ANR	425246	ExpressionStatement	data [ l ++ ] = 0x0f	1351:2:35562:35578	425203	0	True				
ANR	425247	AssignmentExpression	data [ l ++ ] = 0x0f		425203	0		=			
ANR	425248	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425249	Identifier	data		425203	0					
ANR	425250	PostIncDecOperationExpression	l ++		425203	1					
ANR	425251	Identifier	l		425203	0					
ANR	425252	IncDec	++		425203	1					
ANR	425253	PrimaryExpression	0x0f		425203	1					
ANR	425254	ExpressionStatement	data [ l ++ ] = 0xae	1352:2:35582:35598	425203	1	True				
ANR	425255	AssignmentExpression	data [ l ++ ] = 0xae		425203	0		=			
ANR	425256	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425257	Identifier	data		425203	0					
ANR	425258	PostIncDecOperationExpression	l ++		425203	1					
ANR	425259	Identifier	l		425203	0					
ANR	425260	IncDec	++		425203	1					
ANR	425261	PrimaryExpression	0xae		425203	1					
ANR	425262	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	1353:2:35602:35663	425203	2	True				
ANR	425263	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		425203	0		=			
ANR	425264	Identifier	offset		425203	0					
ANR	425265	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		425203	1		*			
ANR	425266	MemberAccess	op -> operands [ 0 ] . offset		425203	0					
ANR	425267	ArrayIndexing	op -> operands [ 0 ]		425203	0					
ANR	425268	PtrMemberAccess	op -> operands		425203	0					
ANR	425269	Identifier	op		425203	0					
ANR	425270	Identifier	operands		425203	1					
ANR	425271	PrimaryExpression	0		425203	1					
ANR	425272	Identifier	offset		425203	1					
ANR	425273	MemberAccess	op -> operands [ 0 ] . offset_sign		425203	1					
ANR	425274	ArrayIndexing	op -> operands [ 0 ]		425203	0					
ANR	425275	PtrMemberAccess	op -> operands		425203	0					
ANR	425276	Identifier	op		425203	0					
ANR	425277	Identifier	operands		425203	1					
ANR	425278	PrimaryExpression	0		425203	1					
ANR	425279	Identifier	offset_sign		425203	1					
ANR	425280	IfStatement	if ( offset )		425203	3					
ANR	425281	Condition	offset	1354:6:35671:35676	425203	0	True				
ANR	425282	Identifier	offset		425203	0					
ANR	425283	CompoundStatement		11:14:236:236	425203	1					
ANR	425284	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		425203	0					
ANR	425285	Condition	offset < ST8_MIN || offset > ST8_MAX	1355:7:35688:35723	425203	0	True				
ANR	425286	OrExpression	offset < ST8_MIN || offset > ST8_MAX		425203	0		||			
ANR	425287	RelationalExpression	offset < ST8_MIN		425203	0		<			
ANR	425288	Identifier	offset		425203	0					
ANR	425289	Identifier	ST8_MIN		425203	1					
ANR	425290	RelationalExpression	offset > ST8_MAX		425203	1		>			
ANR	425291	Identifier	offset		425203	0					
ANR	425292	Identifier	ST8_MAX		425203	1					
ANR	425293	CompoundStatement		12:45:283:283	425203	1					
ANR	425294	ExpressionStatement	mod_byte = 2	1356:4:35732:35744	425203	0	True				
ANR	425295	AssignmentExpression	mod_byte = 2		425203	0		=			
ANR	425296	Identifier	mod_byte		425203	0					
ANR	425297	PrimaryExpression	2		425203	1					
ANR	425298	ElseStatement	else		425203	0					
ANR	425299	CompoundStatement		14:10:313:313	425203	0					
ANR	425300	ExpressionStatement	mod_byte = 1	1358:4:35762:35774	425203	0	True				
ANR	425301	AssignmentExpression	mod_byte = 1		425203	0		=			
ANR	425302	Identifier	mod_byte		425203	0					
ANR	425303	PrimaryExpression	1		425203	1					
ANR	425304	ExpressionStatement	data [ l ++ ] = ( mod_byte << 6 ) | ( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]	1361:2:35787:35851	425203	4	True				
ANR	425305	AssignmentExpression	data [ l ++ ] = ( mod_byte << 6 ) | ( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]		425203	0		=			
ANR	425306	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425307	Identifier	data		425203	0					
ANR	425308	PostIncDecOperationExpression	l ++		425203	1					
ANR	425309	Identifier	l		425203	0					
ANR	425310	IncDec	++		425203	1					
ANR	425311	InclusiveOrExpression	( mod_byte << 6 ) | ( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]		425203	1		|			
ANR	425312	ShiftExpression	mod_byte << 6		425203	0		<<			
ANR	425313	Identifier	mod_byte		425203	0					
ANR	425314	PrimaryExpression	6		425203	1					
ANR	425315	InclusiveOrExpression	( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]		425203	1		|			
ANR	425316	ShiftExpression	7 << 3		425203	0		<<			
ANR	425317	PrimaryExpression	7		425203	0					
ANR	425318	PrimaryExpression	3		425203	1					
ANR	425319	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425203	1					
ANR	425320	MemberAccess	op -> operands [ 0 ] . regs		425203	0					
ANR	425321	ArrayIndexing	op -> operands [ 0 ]		425203	0					
ANR	425322	PtrMemberAccess	op -> operands		425203	0					
ANR	425323	Identifier	op		425203	0					
ANR	425324	Identifier	operands		425203	1					
ANR	425325	PrimaryExpression	0		425203	1					
ANR	425326	Identifier	regs		425203	1					
ANR	425327	PrimaryExpression	0		425203	1					
ANR	425328	IfStatement	if ( mod_byte )		425203	5					
ANR	425329	Condition	mod_byte	1362:6:35859:35866	425203	0	True				
ANR	425330	Identifier	mod_byte		425203	0					
ANR	425331	CompoundStatement		19:16:426:426	425203	1					
ANR	425332	ExpressionStatement	data [ l ++ ] = offset	1363:3:35874:35892	425203	0	True				
ANR	425333	AssignmentExpression	data [ l ++ ] = offset		425203	0		=			
ANR	425334	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425335	Identifier	data		425203	0					
ANR	425336	PostIncDecOperationExpression	l ++		425203	1					
ANR	425337	Identifier	l		425203	0					
ANR	425338	IncDec	++		425203	1					
ANR	425339	Identifier	offset		425203	1					
ANR	425340	IfStatement	if ( mod_byte == 2 )		425203	1					
ANR	425341	Condition	mod_byte == 2	1364:7:35901:35913	425203	0	True				
ANR	425342	EqualityExpression	mod_byte == 2		425203	0		==			
ANR	425343	Identifier	mod_byte		425203	0					
ANR	425344	PrimaryExpression	2		425203	1					
ANR	425345	CompoundStatement		21:22:473:473	425203	1					
ANR	425346	ExpressionStatement	data [ l ++ ] = offset >> 8	1365:4:35922:35945	425203	0	True				
ANR	425347	AssignmentExpression	data [ l ++ ] = offset >> 8		425203	0		=			
ANR	425348	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425349	Identifier	data		425203	0					
ANR	425350	PostIncDecOperationExpression	l ++		425203	1					
ANR	425351	Identifier	l		425203	0					
ANR	425352	IncDec	++		425203	1					
ANR	425353	ShiftExpression	offset >> 8		425203	1		>>			
ANR	425354	Identifier	offset		425203	0					
ANR	425355	PrimaryExpression	8		425203	1					
ANR	425356	ExpressionStatement	data [ l ++ ] = offset >> 16	1366:4:35951:35975	425203	1	True				
ANR	425357	AssignmentExpression	data [ l ++ ] = offset >> 16		425203	0		=			
ANR	425358	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425359	Identifier	data		425203	0					
ANR	425360	PostIncDecOperationExpression	l ++		425203	1					
ANR	425361	Identifier	l		425203	0					
ANR	425362	IncDec	++		425203	1					
ANR	425363	ShiftExpression	offset >> 16		425203	1		>>			
ANR	425364	Identifier	offset		425203	0					
ANR	425365	PrimaryExpression	16		425203	1					
ANR	425366	ExpressionStatement	data [ l ++ ] = offset >> 24	1367:4:35981:36005	425203	2	True				
ANR	425367	AssignmentExpression	data [ l ++ ] = offset >> 24		425203	0		=			
ANR	425368	ArrayIndexing	data [ l ++ ]		425203	0					
ANR	425369	Identifier	data		425203	0					
ANR	425370	PostIncDecOperationExpression	l ++		425203	1					
ANR	425371	Identifier	l		425203	0					
ANR	425372	IncDec	++		425203	1					
ANR	425373	ShiftExpression	offset >> 24		425203	1		>>			
ANR	425374	Identifier	offset		425203	0					
ANR	425375	PrimaryExpression	24		425203	1					
ANR	425376	ReturnStatement	return l ;	1371:1:36020:36028	425203	5	True				
ANR	425377	Identifier	l		425203	0					
ANR	425378	ReturnType	static int		425203	1					
ANR	425379	Identifier	opclflush		425203	2					
ANR	425380	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		425203	3					
ANR	425381	Parameter	RAsm * a	1344:21:35404:35410	425203	0	True				
ANR	425382	ParameterType	RAsm *		425203	0					
ANR	425383	Identifier	a		425203	1					
ANR	425384	Parameter	ut8 * data	1344:30:35413:35421	425203	1	True				
ANR	425385	ParameterType	ut8 *		425203	0					
ANR	425386	Identifier	data		425203	1					
ANR	425387	Parameter	const Opcode * op	1344:41:35424:35439	425203	2	True				
ANR	425388	ParameterType	const Opcode *		425203	0					
ANR	425389	Identifier	op		425203	1					
ANR	425390	CFGEntryNode	ENTRY		425203		True				
ANR	425391	CFGExitNode	EXIT		425203		True				
ANR	425392	Symbol	op -> operands [ 0 ] . offset_sign		425203						
ANR	425393	Symbol	a		425203						
ANR	425394	Symbol	op		425203						
ANR	425395	Symbol	ST8_MAX		425203						
ANR	425396	Symbol	data		425203						
ANR	425397	Symbol	offset		425203						
ANR	425398	Symbol	mod_byte		425203						
ANR	425399	Symbol	* op		425203						
ANR	425400	Symbol	* * op -> operands		425203						
ANR	425401	Symbol	l		425203						
ANR	425402	Symbol	* * op		425203						
ANR	425403	Symbol	* op -> operands		425203						
ANR	425404	Symbol	ST8_MIN		425203						
ANR	425405	Symbol	* op -> operands [ 0 ] . regs		425203						
ANR	425406	Symbol	op -> operands [ 0 ] . type		425203						
ANR	425407	Symbol	* * * op		425203						
ANR	425408	Symbol	op -> operands [ 0 ] . offset		425203						
ANR	425409	Symbol	op -> operands		425203						
ANR	425410	Symbol	OT_MEMORY		425203						
ANR	425411	Symbol	* data		425203						
ANR	425412	Symbol	op -> operands [ 0 ] . regs		425203						
ANR	425413	Function	opinc	1374:0:36033:39358							
ANR	425414	FunctionDef	"opinc (RAsm * a , ut8 * data , const Opcode * op)"		425413	0					
ANR	425415	CompoundStatement		1374:55:36088:39358	425413	0					
ANR	425416	IfStatement	if ( op -> operands [ 1 ] . type )		425413	0					
ANR	425417	Condition	op -> operands [ 1 ] . type	1375:5:36095:36114	425413	0	True				
ANR	425418	MemberAccess	op -> operands [ 1 ] . type		425413	0					
ANR	425419	ArrayIndexing	op -> operands [ 1 ]		425413	0					
ANR	425420	PtrMemberAccess	op -> operands		425413	0					
ANR	425421	Identifier	op		425413	0					
ANR	425422	Identifier	operands		425413	1					
ANR	425423	PrimaryExpression	1		425413	1					
ANR	425424	Identifier	type		425413	1					
ANR	425425	CompoundStatement		2:27:28:28	425413	1					
ANR	425426	ExpressionStatement	"eprintf ( ""Error: Invalid operands\\n"" )"	1376:2:36121:36158	425413	0	True				
ANR	425427	CallExpression	"eprintf ( ""Error: Invalid operands\\n"" )"		425413	0					
ANR	425428	Callee	eprintf		425413	0					
ANR	425429	Identifier	eprintf		425413	0					
ANR	425430	ArgumentList	"""Error: Invalid operands\\n"""		425413	1					
ANR	425431	Argument	"""Error: Invalid operands\\n"""		425413	0					
ANR	425432	PrimaryExpression	"""Error: Invalid operands\\n"""		425413	0					
ANR	425433	ReturnStatement	return - 1 ;	1377:2:36162:36171	425413	1	True				
ANR	425434	UnaryOperationExpression	- 1		425413	0					
ANR	425435	UnaryOperator	-		425413	0					
ANR	425436	PrimaryExpression	1		425413	1					
ANR	425437	ExpressionStatement	is_valid_registers ( op )	1379:1:36177:36200	425413	1	True				
ANR	425438	CallExpression	is_valid_registers ( op )		425413	0					
ANR	425439	Callee	is_valid_registers		425413	0					
ANR	425440	Identifier	is_valid_registers		425413	0					
ANR	425441	ArgumentList	op		425413	1					
ANR	425442	Argument	op		425413	0					
ANR	425443	Identifier	op		425413	0					
ANR	425444	IdentifierDeclStatement	int l = 0 ;	1380:1:36203:36212	425413	2	True				
ANR	425445	IdentifierDecl	l = 0		425413	0					
ANR	425446	IdentifierDeclType	int		425413	0					
ANR	425447	Identifier	l		425413	1					
ANR	425448	AssignmentExpression	l = 0		425413	2		=			
ANR	425449	Identifier	l		425413	0					
ANR	425450	PrimaryExpression	0		425413	1					
ANR	425451	IdentifierDeclStatement	int size = op -> operands [ 0 ] . type & ALL_SIZE ;	1381:1:36215:36257	425413	3	True				
ANR	425452	IdentifierDecl	size = op -> operands [ 0 ] . type & ALL_SIZE		425413	0					
ANR	425453	IdentifierDeclType	int		425413	0					
ANR	425454	Identifier	size		425413	1					
ANR	425455	AssignmentExpression	size = op -> operands [ 0 ] . type & ALL_SIZE		425413	2		=			
ANR	425456	Identifier	size		425413	0					
ANR	425457	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		425413	1		&			
ANR	425458	MemberAccess	op -> operands [ 0 ] . type		425413	0					
ANR	425459	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425460	PtrMemberAccess	op -> operands		425413	0					
ANR	425461	Identifier	op		425413	0					
ANR	425462	Identifier	operands		425413	1					
ANR	425463	PrimaryExpression	0		425413	1					
ANR	425464	Identifier	type		425413	1					
ANR	425465	Identifier	ALL_SIZE		425413	1					
ANR	425466	IfStatement	if ( op -> operands [ 0 ] . explicit_size )		425413	4					
ANR	425467	Condition	op -> operands [ 0 ] . explicit_size	1382:5:36264:36292	425413	0	True				
ANR	425468	MemberAccess	op -> operands [ 0 ] . explicit_size		425413	0					
ANR	425469	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425470	PtrMemberAccess	op -> operands		425413	0					
ANR	425471	Identifier	op		425413	0					
ANR	425472	Identifier	operands		425413	1					
ANR	425473	PrimaryExpression	0		425413	1					
ANR	425474	Identifier	explicit_size		425413	1					
ANR	425475	CompoundStatement		9:36:206:206	425413	1					
ANR	425476	ExpressionStatement	size = op -> operands [ 0 ] . dest_size	1383:2:36299:36331	425413	0	True				
ANR	425477	AssignmentExpression	size = op -> operands [ 0 ] . dest_size		425413	0		=			
ANR	425478	Identifier	size		425413	0					
ANR	425479	MemberAccess	op -> operands [ 0 ] . dest_size		425413	1					
ANR	425480	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425481	PtrMemberAccess	op -> operands		425413	0					
ANR	425482	Identifier	op		425413	0					
ANR	425483	Identifier	operands		425413	1					
ANR	425484	PrimaryExpression	0		425413	1					
ANR	425485	Identifier	dest_size		425413	1					
ANR	425486	IfStatement	if ( size & OT_WORD )		425413	5					
ANR	425487	Condition	size & OT_WORD	1386:5:36342:36355	425413	0	True				
ANR	425488	BitAndExpression	size & OT_WORD		425413	0		&			
ANR	425489	Identifier	size		425413	0					
ANR	425490	Identifier	OT_WORD		425413	1					
ANR	425491	CompoundStatement		13:21:269:269	425413	1					
ANR	425492	ExpressionStatement	data [ l ++ ] = 0x66	1387:2:36362:36378	425413	0	True				
ANR	425493	AssignmentExpression	data [ l ++ ] = 0x66		425413	0		=			
ANR	425494	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	425495	Identifier	data		425413	0					
ANR	425496	PostIncDecOperationExpression	l ++		425413	1					
ANR	425497	Identifier	l		425413	0					
ANR	425498	IncDec	++		425413	1					
ANR	425499	PrimaryExpression	0x66		425413	1					
ANR	425500	IdentifierDeclStatement	int rex = 1 << 6 ;	1391:1:36399:36415	425413	6	True				
ANR	425501	IdentifierDecl	rex = 1 << 6		425413	0					
ANR	425502	IdentifierDeclType	int		425413	0					
ANR	425503	Identifier	rex		425413	1					
ANR	425504	AssignmentExpression	rex = 1 << 6		425413	2		=			
ANR	425505	Identifier	rex		425413	0					
ANR	425506	ShiftExpression	1 << 6		425413	1		<<			
ANR	425507	PrimaryExpression	1		425413	0					
ANR	425508	PrimaryExpression	6		425413	1					
ANR	425509	IdentifierDeclStatement	bool use_rex = false ;	1392:1:36418:36438	425413	7	True				
ANR	425510	IdentifierDecl	use_rex = false		425413	0					
ANR	425511	IdentifierDeclType	bool		425413	0					
ANR	425512	Identifier	use_rex		425413	1					
ANR	425513	AssignmentExpression	use_rex = false		425413	2		=			
ANR	425514	Identifier	false		425413	0					
ANR	425515	Identifier	false		425413	1					
ANR	425516	IfStatement	if ( size & OT_QWORD )		425413	8					
ANR	425517	Condition	size & OT_QWORD	1393:5:36445:36459	425413	0	True				
ANR	425518	BitAndExpression	size & OT_QWORD		425413	0		&			
ANR	425519	Identifier	size		425413	0					
ANR	425520	Identifier	OT_QWORD		425413	1					
ANR	425521	CompoundStatement		20:22:373:373	425413	1					
ANR	425522	ExpressionStatement	use_rex = true	1394:2:36478:36492	425413	0	True				
ANR	425523	AssignmentExpression	use_rex = true		425413	0		=			
ANR	425524	Identifier	use_rex		425413	0					
ANR	425525	Identifier	true		425413	1					
ANR	425526	ExpressionStatement	rex |= 1 << 3	1395:2:36496:36509	425413	1	True				
ANR	425527	AssignmentExpression	rex |= 1 << 3		425413	0		|=			
ANR	425528	Identifier	rex		425413	0					
ANR	425529	ShiftExpression	1 << 3		425413	1		<<			
ANR	425530	PrimaryExpression	1		425413	0					
ANR	425531	PrimaryExpression	3		425413	1					
ANR	425532	IfStatement	if ( op -> operands [ 0 ] . extended )		425413	9					
ANR	425533	Condition	op -> operands [ 0 ] . extended	1397:5:36519:36542	425413	0	True				
ANR	425534	MemberAccess	op -> operands [ 0 ] . extended		425413	0					
ANR	425535	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425536	PtrMemberAccess	op -> operands		425413	0					
ANR	425537	Identifier	op		425413	0					
ANR	425538	Identifier	operands		425413	1					
ANR	425539	PrimaryExpression	0		425413	1					
ANR	425540	Identifier	extended		425413	1					
ANR	425541	CompoundStatement		24:31:456:456	425413	1					
ANR	425542	ExpressionStatement	use_rex = true	1398:2:36560:36574	425413	0	True				
ANR	425543	AssignmentExpression	use_rex = true		425413	0		=			
ANR	425544	Identifier	use_rex		425413	0					
ANR	425545	Identifier	true		425413	1					
ANR	425546	ExpressionStatement	rex |= 1	1399:2:36578:36586	425413	1	True				
ANR	425547	AssignmentExpression	rex |= 1		425413	0		|=			
ANR	425548	Identifier	rex		425413	0					
ANR	425549	PrimaryExpression	1		425413	1					
ANR	425550	IdentifierDeclStatement	int opcode ;	1403:1:36613:36623	425413	10	True				
ANR	425551	IdentifierDecl	opcode		425413	0					
ANR	425552	IdentifierDeclType	int		425413	0					
ANR	425553	Identifier	opcode		425413	1					
ANR	425554	IfStatement	if ( size & OT_BYTE )		425413	11					
ANR	425555	Condition	size & OT_BYTE	1404:5:36630:36643	425413	0	True				
ANR	425556	BitAndExpression	size & OT_BYTE		425413	0		&			
ANR	425557	Identifier	size		425413	0					
ANR	425558	Identifier	OT_BYTE		425413	1					
ANR	425559	CompoundStatement		31:21:557:557	425413	1					
ANR	425560	ExpressionStatement	opcode = 0xfe	1405:2:36650:36663	425413	0	True				
ANR	425561	AssignmentExpression	opcode = 0xfe		425413	0		=			
ANR	425562	Identifier	opcode		425413	0					
ANR	425563	PrimaryExpression	0xfe		425413	1					
ANR	425564	ElseStatement	else		425413	0					
ANR	425565	CompoundStatement		33:8:584:584	425413	0					
ANR	425566	ExpressionStatement	opcode = 0xff	1407:2:36677:36690	425413	0	True				
ANR	425567	AssignmentExpression	opcode = 0xff		425413	0		=			
ANR	425568	Identifier	opcode		425413	0					
ANR	425569	PrimaryExpression	0xff		425413	1					
ANR	425570	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		425413	12					
ANR	425571	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	1410:5:36701:36735	425413	0	True				
ANR	425572	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		425413	0					
ANR	425573	UnaryOperator	!		425413	0					
ANR	425574	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		425413	1		&			
ANR	425575	MemberAccess	op -> operands [ 0 ] . type		425413	0					
ANR	425576	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425577	PtrMemberAccess	op -> operands		425413	0					
ANR	425578	Identifier	op		425413	0					
ANR	425579	Identifier	operands		425413	1					
ANR	425580	PrimaryExpression	0		425413	1					
ANR	425581	Identifier	type		425413	1					
ANR	425582	Identifier	OT_MEMORY		425413	1					
ANR	425583	CompoundStatement		37:42:649:649	425413	1					
ANR	425584	IfStatement	if ( use_rex )		425413	0					
ANR	425585	Condition	use_rex	1411:6:36746:36752	425413	0	True				
ANR	425586	Identifier	use_rex		425413	0					
ANR	425587	CompoundStatement		38:15:666:666	425413	1					
ANR	425588	ExpressionStatement	data [ l ++ ] = rex	1412:3:36760:36775	425413	0	True				
ANR	425589	AssignmentExpression	data [ l ++ ] = rex		425413	0		=			
ANR	425590	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	425591	Identifier	data		425413	0					
ANR	425592	PostIncDecOperationExpression	l ++		425413	1					
ANR	425593	Identifier	l		425413	0					
ANR	425594	IncDec	++		425413	1					
ANR	425595	Identifier	rex		425413	1					
ANR	425596	IfStatement	if ( a -> bits > 32 || size & OT_BYTE )		425413	1					
ANR	425597	Condition	a -> bits > 32 || size & OT_BYTE	1414:6:36787:36816	425413	0	True				
ANR	425598	OrExpression	a -> bits > 32 || size & OT_BYTE		425413	0		||			
ANR	425599	RelationalExpression	a -> bits > 32		425413	0		>			
ANR	425600	PtrMemberAccess	a -> bits		425413	0					
ANR	425601	Identifier	a		425413	0					
ANR	425602	Identifier	bits		425413	1					
ANR	425603	PrimaryExpression	32		425413	1					
ANR	425604	BitAndExpression	size & OT_BYTE		425413	1		&			
ANR	425605	Identifier	size		425413	0					
ANR	425606	Identifier	OT_BYTE		425413	1					
ANR	425607	CompoundStatement		41:38:730:730	425413	1					
ANR	425608	ExpressionStatement	data [ l ++ ] = opcode	1415:3:36824:36842	425413	0	True				
ANR	425609	AssignmentExpression	data [ l ++ ] = opcode		425413	0		=			
ANR	425610	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	425611	Identifier	data		425413	0					
ANR	425612	PostIncDecOperationExpression	l ++		425413	1					
ANR	425613	Identifier	l		425413	0					
ANR	425614	IncDec	++		425413	1					
ANR	425615	Identifier	opcode		425413	1					
ANR	425616	IfStatement	if ( a -> bits == 32 && size & ( OT_DWORD | OT_WORD ) )		425413	2					
ANR	425617	Condition	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )	1417:6:36854:36897	425413	0	True				
ANR	425618	AndExpression	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )		425413	0		&&			
ANR	425619	EqualityExpression	a -> bits == 32		425413	0		==			
ANR	425620	PtrMemberAccess	a -> bits		425413	0					
ANR	425621	Identifier	a		425413	0					
ANR	425622	Identifier	bits		425413	1					
ANR	425623	PrimaryExpression	32		425413	1					
ANR	425624	BitAndExpression	size & ( OT_DWORD | OT_WORD )		425413	1		&			
ANR	425625	Identifier	size		425413	0					
ANR	425626	InclusiveOrExpression	OT_DWORD | OT_WORD		425413	1		|			
ANR	425627	Identifier	OT_DWORD		425413	0					
ANR	425628	Identifier	OT_WORD		425413	1					
ANR	425629	CompoundStatement		44:52:811:811	425413	1					
ANR	425630	ExpressionStatement	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg	1418:3:36905:36943	425413	0	True				
ANR	425631	AssignmentExpression	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg		425413	0		=			
ANR	425632	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	425633	Identifier	data		425413	0					
ANR	425634	PostIncDecOperationExpression	l ++		425413	1					
ANR	425635	Identifier	l		425413	0					
ANR	425636	IncDec	++		425413	1					
ANR	425637	InclusiveOrExpression	0x40 | op -> operands [ 0 ] . reg		425413	1		|			
ANR	425638	PrimaryExpression	0x40		425413	0					
ANR	425639	MemberAccess	op -> operands [ 0 ] . reg		425413	1					
ANR	425640	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425641	PtrMemberAccess	op -> operands		425413	0					
ANR	425642	Identifier	op		425413	0					
ANR	425643	Identifier	operands		425413	1					
ANR	425644	PrimaryExpression	0		425413	1					
ANR	425645	Identifier	reg		425413	1					
ANR	425646	ElseStatement	else		425413	0					
ANR	425647	CompoundStatement		46:9:865:865	425413	0					
ANR	425648	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	1420:3:36959:36997	425413	0	True				
ANR	425649	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		425413	0		=			
ANR	425650	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	425651	Identifier	data		425413	0					
ANR	425652	PostIncDecOperationExpression	l ++		425413	1					
ANR	425653	Identifier	l		425413	0					
ANR	425654	IncDec	++		425413	1					
ANR	425655	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		425413	1		|			
ANR	425656	PrimaryExpression	0xc0		425413	0					
ANR	425657	MemberAccess	op -> operands [ 0 ] . reg		425413	1					
ANR	425658	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425659	PtrMemberAccess	op -> operands		425413	0					
ANR	425660	Identifier	op		425413	0					
ANR	425661	Identifier	operands		425413	1					
ANR	425662	PrimaryExpression	0		425413	1					
ANR	425663	Identifier	reg		425413	1					
ANR	425664	ReturnStatement	return l ;	1422:2:37005:37013	425413	3	True				
ANR	425665	Identifier	l		425413	0					
ANR	425666	IdentifierDeclStatement	bool rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP ;	1426:1:37047:37097	425413	13	True				
ANR	425667	IdentifierDecl	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		425413	0					
ANR	425668	IdentifierDeclType	bool		425413	0					
ANR	425669	Identifier	rip_rel		425413	1					
ANR	425670	AssignmentExpression	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		425413	2		=			
ANR	425671	Identifier	rip_rel		425413	0					
ANR	425672	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		425413	1		==			
ANR	425673	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425674	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425675	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425676	PtrMemberAccess	op -> operands		425413	0					
ANR	425677	Identifier	op		425413	0					
ANR	425678	Identifier	operands		425413	1					
ANR	425679	PrimaryExpression	0		425413	1					
ANR	425680	Identifier	regs		425413	1					
ANR	425681	PrimaryExpression	0		425413	1					
ANR	425682	Identifier	X86R_RIP		425413	1					
ANR	425683	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1427:1:37100:37165	425413	14	True				
ANR	425684	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		425413	0					
ANR	425685	IdentifierDeclType	int		425413	0					
ANR	425686	Identifier	offset		425413	1					
ANR	425687	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		425413	2		=			
ANR	425688	Identifier	offset		425413	0					
ANR	425689	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		425413	1		*			
ANR	425690	MemberAccess	op -> operands [ 0 ] . offset		425413	0					
ANR	425691	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425692	PtrMemberAccess	op -> operands		425413	0					
ANR	425693	Identifier	op		425413	0					
ANR	425694	Identifier	operands		425413	1					
ANR	425695	PrimaryExpression	0		425413	1					
ANR	425696	Identifier	offset		425413	1					
ANR	425697	MemberAccess	op -> operands [ 0 ] . offset_sign		425413	1					
ANR	425698	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425699	PtrMemberAccess	op -> operands		425413	0					
ANR	425700	Identifier	op		425413	0					
ANR	425701	Identifier	operands		425413	1					
ANR	425702	PrimaryExpression	0		425413	1					
ANR	425703	Identifier	offset_sign		425413	1					
ANR	425704	IdentifierDeclStatement	int modrm = 0 ;	1428:1:37168:37181	425413	15	True				
ANR	425705	IdentifierDecl	modrm = 0		425413	0					
ANR	425706	IdentifierDeclType	int		425413	0					
ANR	425707	Identifier	modrm		425413	1					
ANR	425708	AssignmentExpression	modrm = 0		425413	2		=			
ANR	425709	Identifier	modrm		425413	0					
ANR	425710	PrimaryExpression	0		425413	1					
ANR	425711	IdentifierDeclStatement	int mod ;	1429:1:37184:37191	425413	16	True				
ANR	425712	IdentifierDecl	mod		425413	0					
ANR	425713	IdentifierDeclType	int		425413	0					
ANR	425714	Identifier	mod		425413	1					
ANR	425715	IdentifierDeclStatement	int reg = 0 ;	1430:1:37194:37205	425413	17	True				
ANR	425716	IdentifierDecl	reg = 0		425413	0					
ANR	425717	IdentifierDeclType	int		425413	0					
ANR	425718	Identifier	reg		425413	1					
ANR	425719	AssignmentExpression	reg = 0		425413	2		=			
ANR	425720	Identifier	reg		425413	0					
ANR	425721	PrimaryExpression	0		425413	1					
ANR	425722	IdentifierDeclStatement	int rm ;	1431:1:37208:37214	425413	18	True				
ANR	425723	IdentifierDecl	rm		425413	0					
ANR	425724	IdentifierDeclType	int		425413	0					
ANR	425725	Identifier	rm		425413	1					
ANR	425726	IdentifierDeclStatement	bool use_sib = false ;	1432:1:37217:37237	425413	19	True				
ANR	425727	IdentifierDecl	use_sib = false		425413	0					
ANR	425728	IdentifierDeclType	bool		425413	0					
ANR	425729	Identifier	use_sib		425413	1					
ANR	425730	AssignmentExpression	use_sib = false		425413	2		=			
ANR	425731	Identifier	false		425413	0					
ANR	425732	Identifier	false		425413	1					
ANR	425733	IdentifierDeclStatement	int sib = 0 ;	1433:1:37240:37251	425413	20	True				
ANR	425734	IdentifierDecl	sib = 0		425413	0					
ANR	425735	IdentifierDeclType	int		425413	0					
ANR	425736	Identifier	sib		425413	1					
ANR	425737	AssignmentExpression	sib = 0		425413	2		=			
ANR	425738	Identifier	sib		425413	0					
ANR	425739	PrimaryExpression	0		425413	1					
ANR	425740	IfStatement	if ( offset == 0 )		425413	21					
ANR	425741	Condition	offset == 0	1435:5:37265:37275	425413	0	True				
ANR	425742	EqualityExpression	offset == 0		425413	0		==			
ANR	425743	Identifier	offset		425413	0					
ANR	425744	PrimaryExpression	0		425413	1					
ANR	425745	CompoundStatement		62:18:1189:1189	425413	1					
ANR	425746	ExpressionStatement	mod = 0	1436:2:37282:37289	425413	0	True				
ANR	425747	AssignmentExpression	mod = 0		425413	0		=			
ANR	425748	Identifier	mod		425413	0					
ANR	425749	PrimaryExpression	0		425413	1					
ANR	425750	ElseStatement	else		425413	0					
ANR	425751	IfStatement	if ( offset < 128 && offset > - 129 )		425413	0					
ANR	425752	Condition	offset < 128 && offset > - 129	1437:12:37303:37331	425413	0	True				
ANR	425753	AndExpression	offset < 128 && offset > - 129		425413	0		&&			
ANR	425754	RelationalExpression	offset < 128		425413	0		<			
ANR	425755	Identifier	offset		425413	0					
ANR	425756	PrimaryExpression	128		425413	1					
ANR	425757	RelationalExpression	offset > - 129		425413	1		>			
ANR	425758	Identifier	offset		425413	0					
ANR	425759	UnaryOperationExpression	- 129		425413	1					
ANR	425760	UnaryOperator	-		425413	0					
ANR	425761	PrimaryExpression	129		425413	1					
ANR	425762	CompoundStatement		64:43:1245:1245	425413	1					
ANR	425763	ExpressionStatement	mod = 1	1438:2:37338:37345	425413	0	True				
ANR	425764	AssignmentExpression	mod = 1		425413	0		=			
ANR	425765	Identifier	mod		425413	0					
ANR	425766	PrimaryExpression	1		425413	1					
ANR	425767	ElseStatement	else		425413	0					
ANR	425768	CompoundStatement		66:8:1266:1266	425413	0					
ANR	425769	ExpressionStatement	mod = 2	1440:2:37359:37366	425413	0	True				
ANR	425770	AssignmentExpression	mod = 2		425413	0		=			
ANR	425771	Identifier	mod		425413	0					
ANR	425772	PrimaryExpression	2		425413	1					
ANR	425773	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD )		425413	22					
ANR	425774	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD	1443:5:37377:37409	425413	0	True				
ANR	425775	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		425413	0		&			
ANR	425776	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425777	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425778	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425779	PtrMemberAccess	op -> operands		425413	0					
ANR	425780	Identifier	op		425413	0					
ANR	425781	Identifier	operands		425413	1					
ANR	425782	PrimaryExpression	0		425413	1					
ANR	425783	Identifier	regs		425413	1					
ANR	425784	PrimaryExpression	0		425413	1					
ANR	425785	Identifier	OT_WORD		425413	1					
ANR	425786	CompoundStatement		70:40:1323:1323	425413	1					
ANR	425787	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		425413	0					
ANR	425788	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1444:6:37420:37491	425413	0	True				
ANR	425789	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		425413	0		&&			
ANR	425790	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		425413	0		==			
ANR	425791	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425792	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425793	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425794	PtrMemberAccess	op -> operands		425413	0					
ANR	425795	Identifier	op		425413	0					
ANR	425796	Identifier	operands		425413	1					
ANR	425797	PrimaryExpression	0		425413	1					
ANR	425798	Identifier	regs		425413	1					
ANR	425799	PrimaryExpression	0		425413	1					
ANR	425800	Identifier	X86R_BX		425413	1					
ANR	425801	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		425413	1		==			
ANR	425802	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425803	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425804	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425805	PtrMemberAccess	op -> operands		425413	0					
ANR	425806	Identifier	op		425413	0					
ANR	425807	Identifier	operands		425413	1					
ANR	425808	PrimaryExpression	0		425413	1					
ANR	425809	Identifier	regs		425413	1					
ANR	425810	PrimaryExpression	1		425413	1					
ANR	425811	Identifier	X86R_SI		425413	1					
ANR	425812	CompoundStatement		71:80:1405:1405	425413	1					
ANR	425813	ExpressionStatement	rm = B0000	1445:3:37499:37509	425413	0	True				
ANR	425814	AssignmentExpression	rm = B0000		425413	0		=			
ANR	425815	Identifier	rm		425413	0					
ANR	425816	Identifier	B0000		425413	1					
ANR	425817	ElseStatement	else		425413	0					
ANR	425818	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		425413	0					
ANR	425819	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1446:13:37524:37595	425413	0	True				
ANR	425820	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		425413	0		&&			
ANR	425821	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		425413	0		==			
ANR	425822	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425823	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425824	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425825	PtrMemberAccess	op -> operands		425413	0					
ANR	425826	Identifier	op		425413	0					
ANR	425827	Identifier	operands		425413	1					
ANR	425828	PrimaryExpression	0		425413	1					
ANR	425829	Identifier	regs		425413	1					
ANR	425830	PrimaryExpression	0		425413	1					
ANR	425831	Identifier	X86R_BX		425413	1					
ANR	425832	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		425413	1		==			
ANR	425833	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425834	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425835	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425836	PtrMemberAccess	op -> operands		425413	0					
ANR	425837	Identifier	op		425413	0					
ANR	425838	Identifier	operands		425413	1					
ANR	425839	PrimaryExpression	0		425413	1					
ANR	425840	Identifier	regs		425413	1					
ANR	425841	PrimaryExpression	1		425413	1					
ANR	425842	Identifier	X86R_DI		425413	1					
ANR	425843	CompoundStatement		73:87:1509:1509	425413	1					
ANR	425844	ExpressionStatement	rm = B0001	1447:3:37603:37613	425413	0	True				
ANR	425845	AssignmentExpression	rm = B0001		425413	0		=			
ANR	425846	Identifier	rm		425413	0					
ANR	425847	Identifier	B0001		425413	1					
ANR	425848	ElseStatement	else		425413	0					
ANR	425849	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		425413	0					
ANR	425850	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1448:13:37628:37699	425413	0	True				
ANR	425851	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		425413	0		&&			
ANR	425852	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		425413	0		==			
ANR	425853	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425854	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425855	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425856	PtrMemberAccess	op -> operands		425413	0					
ANR	425857	Identifier	op		425413	0					
ANR	425858	Identifier	operands		425413	1					
ANR	425859	PrimaryExpression	0		425413	1					
ANR	425860	Identifier	regs		425413	1					
ANR	425861	PrimaryExpression	0		425413	1					
ANR	425862	Identifier	X86R_BP		425413	1					
ANR	425863	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		425413	1		==			
ANR	425864	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425865	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425866	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425867	PtrMemberAccess	op -> operands		425413	0					
ANR	425868	Identifier	op		425413	0					
ANR	425869	Identifier	operands		425413	1					
ANR	425870	PrimaryExpression	0		425413	1					
ANR	425871	Identifier	regs		425413	1					
ANR	425872	PrimaryExpression	1		425413	1					
ANR	425873	Identifier	X86R_SI		425413	1					
ANR	425874	CompoundStatement		75:87:1613:1613	425413	1					
ANR	425875	ExpressionStatement	rm = B0010	1449:3:37707:37717	425413	0	True				
ANR	425876	AssignmentExpression	rm = B0010		425413	0		=			
ANR	425877	Identifier	rm		425413	0					
ANR	425878	Identifier	B0010		425413	1					
ANR	425879	ElseStatement	else		425413	0					
ANR	425880	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		425413	0					
ANR	425881	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1450:13:37732:37803	425413	0	True				
ANR	425882	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		425413	0		&&			
ANR	425883	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		425413	0		==			
ANR	425884	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425885	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425886	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425887	PtrMemberAccess	op -> operands		425413	0					
ANR	425888	Identifier	op		425413	0					
ANR	425889	Identifier	operands		425413	1					
ANR	425890	PrimaryExpression	0		425413	1					
ANR	425891	Identifier	regs		425413	1					
ANR	425892	PrimaryExpression	0		425413	1					
ANR	425893	Identifier	X86R_BP		425413	1					
ANR	425894	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		425413	1		==			
ANR	425895	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425896	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425897	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425898	PtrMemberAccess	op -> operands		425413	0					
ANR	425899	Identifier	op		425413	0					
ANR	425900	Identifier	operands		425413	1					
ANR	425901	PrimaryExpression	0		425413	1					
ANR	425902	Identifier	regs		425413	1					
ANR	425903	PrimaryExpression	1		425413	1					
ANR	425904	Identifier	X86R_DI		425413	1					
ANR	425905	CompoundStatement		77:87:1717:1717	425413	1					
ANR	425906	ExpressionStatement	rm = B0011	1451:3:37811:37821	425413	0	True				
ANR	425907	AssignmentExpression	rm = B0011		425413	0		=			
ANR	425908	Identifier	rm		425413	0					
ANR	425909	Identifier	B0011		425413	1					
ANR	425910	ElseStatement	else		425413	0					
ANR	425911	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		425413	0					
ANR	425912	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1452:13:37836:37902	425413	0	True				
ANR	425913	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1		425413	0		&&			
ANR	425914	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI		425413	0		==			
ANR	425915	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425916	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425917	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425918	PtrMemberAccess	op -> operands		425413	0					
ANR	425919	Identifier	op		425413	0					
ANR	425920	Identifier	operands		425413	1					
ANR	425921	PrimaryExpression	0		425413	1					
ANR	425922	Identifier	regs		425413	1					
ANR	425923	PrimaryExpression	0		425413	1					
ANR	425924	Identifier	X86R_SI		425413	1					
ANR	425925	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		425413	1		==			
ANR	425926	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425927	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425928	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425929	PtrMemberAccess	op -> operands		425413	0					
ANR	425930	Identifier	op		425413	0					
ANR	425931	Identifier	operands		425413	1					
ANR	425932	PrimaryExpression	0		425413	1					
ANR	425933	Identifier	regs		425413	1					
ANR	425934	PrimaryExpression	1		425413	1					
ANR	425935	UnaryOperationExpression	- 1		425413	1					
ANR	425936	UnaryOperator	-		425413	0					
ANR	425937	PrimaryExpression	1		425413	1					
ANR	425938	CompoundStatement		79:82:1816:1816	425413	1					
ANR	425939	ExpressionStatement	rm = B0100	1453:3:37910:37920	425413	0	True				
ANR	425940	AssignmentExpression	rm = B0100		425413	0		=			
ANR	425941	Identifier	rm		425413	0					
ANR	425942	Identifier	B0100		425413	1					
ANR	425943	ElseStatement	else		425413	0					
ANR	425944	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		425413	0					
ANR	425945	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1454:13:37935:38001	425413	0	True				
ANR	425946	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1		425413	0		&&			
ANR	425947	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI		425413	0		==			
ANR	425948	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425949	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425950	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425951	PtrMemberAccess	op -> operands		425413	0					
ANR	425952	Identifier	op		425413	0					
ANR	425953	Identifier	operands		425413	1					
ANR	425954	PrimaryExpression	0		425413	1					
ANR	425955	Identifier	regs		425413	1					
ANR	425956	PrimaryExpression	0		425413	1					
ANR	425957	Identifier	X86R_DI		425413	1					
ANR	425958	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		425413	1		==			
ANR	425959	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425960	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425961	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425962	PtrMemberAccess	op -> operands		425413	0					
ANR	425963	Identifier	op		425413	0					
ANR	425964	Identifier	operands		425413	1					
ANR	425965	PrimaryExpression	0		425413	1					
ANR	425966	Identifier	regs		425413	1					
ANR	425967	PrimaryExpression	1		425413	1					
ANR	425968	UnaryOperationExpression	- 1		425413	1					
ANR	425969	UnaryOperator	-		425413	0					
ANR	425970	PrimaryExpression	1		425413	1					
ANR	425971	CompoundStatement		81:82:1915:1915	425413	1					
ANR	425972	ExpressionStatement	rm = B0101	1455:3:38009:38019	425413	0	True				
ANR	425973	AssignmentExpression	rm = B0101		425413	0		=			
ANR	425974	Identifier	rm		425413	0					
ANR	425975	Identifier	B0101		425413	1					
ANR	425976	ElseStatement	else		425413	0					
ANR	425977	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		425413	0					
ANR	425978	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1	1456:13:38034:38100	425413	0	True				
ANR	425979	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1		425413	0		&&			
ANR	425980	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		425413	0		==			
ANR	425981	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	425982	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425983	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425984	PtrMemberAccess	op -> operands		425413	0					
ANR	425985	Identifier	op		425413	0					
ANR	425986	Identifier	operands		425413	1					
ANR	425987	PrimaryExpression	0		425413	1					
ANR	425988	Identifier	regs		425413	1					
ANR	425989	PrimaryExpression	0		425413	1					
ANR	425990	Identifier	X86R_BX		425413	1					
ANR	425991	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		425413	1		==			
ANR	425992	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	425993	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	425994	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	425995	PtrMemberAccess	op -> operands		425413	0					
ANR	425996	Identifier	op		425413	0					
ANR	425997	Identifier	operands		425413	1					
ANR	425998	PrimaryExpression	0		425413	1					
ANR	425999	Identifier	regs		425413	1					
ANR	426000	PrimaryExpression	1		425413	1					
ANR	426001	UnaryOperationExpression	- 1		425413	1					
ANR	426002	UnaryOperator	-		425413	0					
ANR	426003	PrimaryExpression	1		425413	1					
ANR	426004	CompoundStatement		83:82:2014:2014	425413	1					
ANR	426005	ExpressionStatement	rm = B0111	1457:3:38108:38118	425413	0	True				
ANR	426006	AssignmentExpression	rm = B0111		425413	0		=			
ANR	426007	Identifier	rm		425413	0					
ANR	426008	Identifier	B0111		425413	1					
ANR	426009	ElseStatement	else		425413	0					
ANR	426010	CompoundStatement		85:9:2040:2040	425413	0					
ANR	426011	ReturnStatement	return - 1 ;	1460:3:38196:38205	425413	0	True				
ANR	426012	UnaryOperationExpression	- 1		425413	0					
ANR	426013	UnaryOperator	-		425413	0					
ANR	426014	PrimaryExpression	1		425413	1					
ANR	426015	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1462:2:38213:38249	425413	1	True				
ANR	426016	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		425413	0		=			
ANR	426017	Identifier	modrm		425413	0					
ANR	426018	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		425413	1		|			
ANR	426019	ShiftExpression	mod << 6		425413	0		<<			
ANR	426020	Identifier	mod		425413	0					
ANR	426021	PrimaryExpression	6		425413	1					
ANR	426022	InclusiveOrExpression	( reg << 3 ) | rm		425413	1		|			
ANR	426023	ShiftExpression	reg << 3		425413	0		<<			
ANR	426024	Identifier	reg		425413	0					
ANR	426025	PrimaryExpression	3		425413	1					
ANR	426026	Identifier	rm		425413	1					
ANR	426027	ElseStatement	else		425413	0					
ANR	426028	CompoundStatement		104:2:2442:2486	425413	0					
ANR	426029	IfStatement	if ( op -> operands [ 0 ] . extended )		425413	0					
ANR	426030	Condition	op -> operands [ 0 ] . extended	1465:6:38274:38297	425413	0	True				
ANR	426031	MemberAccess	op -> operands [ 0 ] . extended		425413	0					
ANR	426032	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	426033	PtrMemberAccess	op -> operands		425413	0					
ANR	426034	Identifier	op		425413	0					
ANR	426035	Identifier	operands		425413	1					
ANR	426036	PrimaryExpression	0		425413	1					
ANR	426037	Identifier	extended		425413	1					
ANR	426038	CompoundStatement		92:32:2211:2211	425413	1					
ANR	426039	ExpressionStatement	rm = op -> operands [ 0 ] . reg	1466:3:38305:38329	425413	0	True				
ANR	426040	AssignmentExpression	rm = op -> operands [ 0 ] . reg		425413	0		=			
ANR	426041	Identifier	rm		425413	0					
ANR	426042	MemberAccess	op -> operands [ 0 ] . reg		425413	1					
ANR	426043	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	426044	PtrMemberAccess	op -> operands		425413	0					
ANR	426045	Identifier	op		425413	0					
ANR	426046	Identifier	operands		425413	1					
ANR	426047	PrimaryExpression	0		425413	1					
ANR	426048	Identifier	reg		425413	1					
ANR	426049	ElseStatement	else		425413	0					
ANR	426050	CompoundStatement		94:9:2251:2251	425413	0					
ANR	426051	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	1468:3:38345:38373	425413	0	True				
ANR	426052	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		425413	0		=			
ANR	426053	Identifier	rm		425413	0					
ANR	426054	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	1					
ANR	426055	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	426056	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	426057	PtrMemberAccess	op -> operands		425413	0					
ANR	426058	Identifier	op		425413	0					
ANR	426059	Identifier	operands		425413	1					
ANR	426060	PrimaryExpression	0		425413	1					
ANR	426061	Identifier	regs		425413	1					
ANR	426062	PrimaryExpression	0		425413	1					
ANR	426063	IfStatement	if ( rm == 5 && mod == 0 )		425413	1					
ANR	426064	Condition	rm == 5 && mod == 0	1471:6:38442:38460	425413	0	True				
ANR	426065	AndExpression	rm == 5 && mod == 0		425413	0		&&			
ANR	426066	EqualityExpression	rm == 5		425413	0		==			
ANR	426067	Identifier	rm		425413	0					
ANR	426068	PrimaryExpression	5		425413	1					
ANR	426069	EqualityExpression	mod == 0		425413	1		==			
ANR	426070	Identifier	mod		425413	0					
ANR	426071	PrimaryExpression	0		425413	1					
ANR	426072	CompoundStatement		98:27:2374:2374	425413	1					
ANR	426073	ExpressionStatement	mod = 1	1472:3:38468:38475	425413	0	True				
ANR	426074	AssignmentExpression	mod = 1		425413	0		=			
ANR	426075	Identifier	mod		425413	0					
ANR	426076	PrimaryExpression	1		425413	1					
ANR	426077	IdentifierDeclStatement	int index = op -> operands [ 0 ] . regs [ 1 ] ;	1476:2:38492:38527	425413	2	True				
ANR	426078	IdentifierDecl	index = op -> operands [ 0 ] . regs [ 1 ]		425413	0					
ANR	426079	IdentifierDeclType	int		425413	0					
ANR	426080	Identifier	index		425413	1					
ANR	426081	AssignmentExpression	index = op -> operands [ 0 ] . regs [ 1 ]		425413	2		=			
ANR	426082	Identifier	index		425413	0					
ANR	426083	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		425413	1					
ANR	426084	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	426085	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	426086	PtrMemberAccess	op -> operands		425413	0					
ANR	426087	Identifier	op		425413	0					
ANR	426088	Identifier	operands		425413	1					
ANR	426089	PrimaryExpression	0		425413	1					
ANR	426090	Identifier	regs		425413	1					
ANR	426091	PrimaryExpression	1		425413	1					
ANR	426092	IdentifierDeclStatement	int scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] ) ;	1477:2:38531:38575	425413	3	True				
ANR	426093	IdentifierDecl	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		425413	0					
ANR	426094	IdentifierDeclType	int		425413	0					
ANR	426095	Identifier	scale		425413	1					
ANR	426096	AssignmentExpression	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		425413	2		=			
ANR	426097	Identifier	scale		425413	0					
ANR	426098	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 1 ] )		425413	1					
ANR	426099	Callee	getsib		425413	0					
ANR	426100	Identifier	getsib		425413	0					
ANR	426101	ArgumentList	op -> operands [ 0 ] . scale [ 1 ]		425413	1					
ANR	426102	Argument	op -> operands [ 0 ] . scale [ 1 ]		425413	0					
ANR	426103	ArrayIndexing	op -> operands [ 0 ] . scale [ 1 ]		425413	0					
ANR	426104	MemberAccess	op -> operands [ 0 ] . scale		425413	0					
ANR	426105	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	426106	PtrMemberAccess	op -> operands		425413	0					
ANR	426107	Identifier	op		425413	0					
ANR	426108	Identifier	operands		425413	1					
ANR	426109	PrimaryExpression	0		425413	1					
ANR	426110	Identifier	scale		425413	1					
ANR	426111	PrimaryExpression	1		425413	1					
ANR	426112	IfStatement	if ( index != - 1 )		425413	4					
ANR	426113	Condition	index != - 1	1478:6:38583:38593	425413	0	True				
ANR	426114	EqualityExpression	index != - 1		425413	0		!=			
ANR	426115	Identifier	index		425413	0					
ANR	426116	UnaryOperationExpression	- 1		425413	1					
ANR	426117	UnaryOperator	-		425413	0					
ANR	426118	PrimaryExpression	1		425413	1					
ANR	426119	CompoundStatement		105:19:2507:2507	425413	1					
ANR	426120	ExpressionStatement	use_sib = true	1479:3:38601:38615	425413	0	True				
ANR	426121	AssignmentExpression	use_sib = true		425413	0		=			
ANR	426122	Identifier	use_sib		425413	0					
ANR	426123	Identifier	true		425413	1					
ANR	426124	ExpressionStatement	sib = ( scale << 6 ) | ( index << 3 ) | rm	1480:3:38620:38658	425413	1	True				
ANR	426125	AssignmentExpression	sib = ( scale << 6 ) | ( index << 3 ) | rm		425413	0		=			
ANR	426126	Identifier	sib		425413	0					
ANR	426127	InclusiveOrExpression	( scale << 6 ) | ( index << 3 ) | rm		425413	1		|			
ANR	426128	ShiftExpression	scale << 6		425413	0		<<			
ANR	426129	Identifier	scale		425413	0					
ANR	426130	PrimaryExpression	6		425413	1					
ANR	426131	InclusiveOrExpression	( index << 3 ) | rm		425413	1		|			
ANR	426132	ShiftExpression	index << 3		425413	0		<<			
ANR	426133	Identifier	index		425413	0					
ANR	426134	PrimaryExpression	3		425413	1					
ANR	426135	Identifier	rm		425413	1					
ANR	426136	ElseStatement	else		425413	0					
ANR	426137	IfStatement	if ( rm == 4 )		425413	0					
ANR	426138	Condition	rm == 4	1481:13:38673:38679	425413	0	True				
ANR	426139	EqualityExpression	rm == 4		425413	0		==			
ANR	426140	Identifier	rm		425413	0					
ANR	426141	PrimaryExpression	4		425413	1					
ANR	426142	CompoundStatement		108:22:2593:2593	425413	1					
ANR	426143	ExpressionStatement	use_sib = true	1482:3:38687:38701	425413	0	True				
ANR	426144	AssignmentExpression	use_sib = true		425413	0		=			
ANR	426145	Identifier	use_sib		425413	0					
ANR	426146	Identifier	true		425413	1					
ANR	426147	ExpressionStatement	sib = 0x24	1483:3:38706:38716	425413	1	True				
ANR	426148	AssignmentExpression	sib = 0x24		425413	0		=			
ANR	426149	Identifier	sib		425413	0					
ANR	426150	PrimaryExpression	0x24		425413	1					
ANR	426151	IfStatement	if ( use_sib )		425413	5					
ANR	426152	Condition	use_sib	1485:6:38728:38734	425413	0	True				
ANR	426153	Identifier	use_sib		425413	0					
ANR	426154	CompoundStatement		112:15:2648:2648	425413	1					
ANR	426155	ExpressionStatement	rm = B0100	1486:3:38742:38752	425413	0	True				
ANR	426156	AssignmentExpression	rm = B0100		425413	0		=			
ANR	426157	Identifier	rm		425413	0					
ANR	426158	Identifier	B0100		425413	1					
ANR	426159	IfStatement	if ( rip_rel )		425413	6					
ANR	426160	Condition	rip_rel	1488:6:38764:38770	425413	0	True				
ANR	426161	Identifier	rip_rel		425413	0					
ANR	426162	CompoundStatement		115:15:2684:2684	425413	1					
ANR	426163	ExpressionStatement	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101	1489:3:38778:38819	425413	0	True				
ANR	426164	AssignmentExpression	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101		425413	0		=			
ANR	426165	Identifier	modrm		425413	0					
ANR	426166	InclusiveOrExpression	( B0000 << 6 ) | ( reg << 3 ) | B0101		425413	1		|			
ANR	426167	ShiftExpression	B0000 << 6		425413	0		<<			
ANR	426168	Identifier	B0000		425413	0					
ANR	426169	PrimaryExpression	6		425413	1					
ANR	426170	InclusiveOrExpression	( reg << 3 ) | B0101		425413	1		|			
ANR	426171	ShiftExpression	reg << 3		425413	0		<<			
ANR	426172	Identifier	reg		425413	0					
ANR	426173	PrimaryExpression	3		425413	1					
ANR	426174	Identifier	B0101		425413	1					
ANR	426175	ExpressionStatement	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101	1490:3:38824:38865	425413	1	True				
ANR	426176	AssignmentExpression	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101		425413	0		=			
ANR	426177	Identifier	sib		425413	0					
ANR	426178	InclusiveOrExpression	( scale << 6 ) | ( B0100 << 3 ) | B0101		425413	1		|			
ANR	426179	ShiftExpression	scale << 6		425413	0		<<			
ANR	426180	Identifier	scale		425413	0					
ANR	426181	PrimaryExpression	6		425413	1					
ANR	426182	InclusiveOrExpression	( B0100 << 3 ) | B0101		425413	1		|			
ANR	426183	ShiftExpression	B0100 << 3		425413	0		<<			
ANR	426184	Identifier	B0100		425413	0					
ANR	426185	PrimaryExpression	3		425413	1					
ANR	426186	Identifier	B0101		425413	1					
ANR	426187	ElseStatement	else		425413	0					
ANR	426188	CompoundStatement		118:9:2787:2787	425413	0					
ANR	426189	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1492:3:38881:38917	425413	0	True				
ANR	426190	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		425413	0		=			
ANR	426191	Identifier	modrm		425413	0					
ANR	426192	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		425413	1		|			
ANR	426193	ShiftExpression	mod << 6		425413	0		<<			
ANR	426194	Identifier	mod		425413	0					
ANR	426195	PrimaryExpression	6		425413	1					
ANR	426196	InclusiveOrExpression	( reg << 3 ) | rm		425413	1		|			
ANR	426197	ShiftExpression	reg << 3		425413	0		<<			
ANR	426198	Identifier	reg		425413	0					
ANR	426199	PrimaryExpression	3		425413	1					
ANR	426200	Identifier	rm		425413	1					
ANR	426201	IfStatement	if ( use_rex )		425413	23					
ANR	426202	Condition	use_rex	1496:5:38932:38938	425413	0	True				
ANR	426203	Identifier	use_rex		425413	0					
ANR	426204	CompoundStatement		123:14:2852:2852	425413	1					
ANR	426205	ExpressionStatement	data [ l ++ ] = rex	1497:2:38945:38960	425413	0	True				
ANR	426206	AssignmentExpression	data [ l ++ ] = rex		425413	0		=			
ANR	426207	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426208	Identifier	data		425413	0					
ANR	426209	PostIncDecOperationExpression	l ++		425413	1					
ANR	426210	Identifier	l		425413	0					
ANR	426211	IncDec	++		425413	1					
ANR	426212	Identifier	rex		425413	1					
ANR	426213	ExpressionStatement	data [ l ++ ] = opcode	1499:1:38966:38984	425413	24	True				
ANR	426214	AssignmentExpression	data [ l ++ ] = opcode		425413	0		=			
ANR	426215	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426216	Identifier	data		425413	0					
ANR	426217	PostIncDecOperationExpression	l ++		425413	1					
ANR	426218	Identifier	l		425413	0					
ANR	426219	IncDec	++		425413	1					
ANR	426220	Identifier	opcode		425413	1					
ANR	426221	ExpressionStatement	data [ l ++ ] = modrm	1500:1:38987:39004	425413	25	True				
ANR	426222	AssignmentExpression	data [ l ++ ] = modrm		425413	0		=			
ANR	426223	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426224	Identifier	data		425413	0					
ANR	426225	PostIncDecOperationExpression	l ++		425413	1					
ANR	426226	Identifier	l		425413	0					
ANR	426227	IncDec	++		425413	1					
ANR	426228	Identifier	modrm		425413	1					
ANR	426229	IfStatement	if ( use_sib )		425413	26					
ANR	426230	Condition	use_sib	1501:5:39011:39017	425413	0	True				
ANR	426231	Identifier	use_sib		425413	0					
ANR	426232	CompoundStatement		128:14:2931:2931	425413	1					
ANR	426233	ExpressionStatement	data [ l ++ ] = sib	1502:2:39024:39039	425413	0	True				
ANR	426234	AssignmentExpression	data [ l ++ ] = sib		425413	0		=			
ANR	426235	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426236	Identifier	data		425413	0					
ANR	426237	PostIncDecOperationExpression	l ++		425413	1					
ANR	426238	Identifier	l		425413	0					
ANR	426239	IncDec	++		425413	1					
ANR	426240	Identifier	sib		425413	1					
ANR	426241	IfStatement	if ( mod == 1 )		425413	27					
ANR	426242	Condition	mod == 1	1505:5:39059:39066	425413	0	True				
ANR	426243	EqualityExpression	mod == 1		425413	0		==			
ANR	426244	Identifier	mod		425413	0					
ANR	426245	PrimaryExpression	1		425413	1					
ANR	426246	CompoundStatement		132:15:2980:2980	425413	1					
ANR	426247	ExpressionStatement	data [ l ++ ] = offset	1506:2:39073:39091	425413	0	True				
ANR	426248	AssignmentExpression	data [ l ++ ] = offset		425413	0		=			
ANR	426249	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426250	Identifier	data		425413	0					
ANR	426251	PostIncDecOperationExpression	l ++		425413	1					
ANR	426252	Identifier	l		425413	0					
ANR	426253	IncDec	++		425413	1					
ANR	426254	Identifier	offset		425413	1					
ANR	426255	ElseStatement	else		425413	0					
ANR	426256	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2 )		425413	0					
ANR	426257	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2	1507:12:39105:39149	425413	0	True				
ANR	426258	AndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2		425413	0		&&			
ANR	426259	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		425413	0		&			
ANR	426260	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		425413	0					
ANR	426261	MemberAccess	op -> operands [ 0 ] . regs		425413	0					
ANR	426262	ArrayIndexing	op -> operands [ 0 ]		425413	0					
ANR	426263	PtrMemberAccess	op -> operands		425413	0					
ANR	426264	Identifier	op		425413	0					
ANR	426265	Identifier	operands		425413	1					
ANR	426266	PrimaryExpression	0		425413	1					
ANR	426267	Identifier	regs		425413	1					
ANR	426268	PrimaryExpression	0		425413	1					
ANR	426269	Identifier	OT_WORD		425413	1					
ANR	426270	EqualityExpression	mod == 2		425413	1		==			
ANR	426271	Identifier	mod		425413	0					
ANR	426272	PrimaryExpression	2		425413	1					
ANR	426273	CompoundStatement		134:59:3063:3063	425413	1					
ANR	426274	ExpressionStatement	data [ l ++ ] = offset	1508:2:39156:39174	425413	0	True				
ANR	426275	AssignmentExpression	data [ l ++ ] = offset		425413	0		=			
ANR	426276	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426277	Identifier	data		425413	0					
ANR	426278	PostIncDecOperationExpression	l ++		425413	1					
ANR	426279	Identifier	l		425413	0					
ANR	426280	IncDec	++		425413	1					
ANR	426281	Identifier	offset		425413	1					
ANR	426282	ExpressionStatement	data [ l ++ ] = offset >> 8	1509:2:39178:39201	425413	1	True				
ANR	426283	AssignmentExpression	data [ l ++ ] = offset >> 8		425413	0		=			
ANR	426284	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426285	Identifier	data		425413	0					
ANR	426286	PostIncDecOperationExpression	l ++		425413	1					
ANR	426287	Identifier	l		425413	0					
ANR	426288	IncDec	++		425413	1					
ANR	426289	ShiftExpression	offset >> 8		425413	1		>>			
ANR	426290	Identifier	offset		425413	0					
ANR	426291	PrimaryExpression	8		425413	1					
ANR	426292	ElseStatement	else		425413	0					
ANR	426293	IfStatement	if ( mod == 2 || rip_rel )		425413	0					
ANR	426294	Condition	mod == 2 || rip_rel	1510:12:39215:39233	425413	0	True				
ANR	426295	OrExpression	mod == 2 || rip_rel		425413	0		||			
ANR	426296	EqualityExpression	mod == 2		425413	0		==			
ANR	426297	Identifier	mod		425413	0					
ANR	426298	PrimaryExpression	2		425413	1					
ANR	426299	Identifier	rip_rel		425413	1					
ANR	426300	CompoundStatement		137:33:3147:3147	425413	1					
ANR	426301	ExpressionStatement	data [ l ++ ] = offset	1511:2:39240:39258	425413	0	True				
ANR	426302	AssignmentExpression	data [ l ++ ] = offset		425413	0		=			
ANR	426303	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426304	Identifier	data		425413	0					
ANR	426305	PostIncDecOperationExpression	l ++		425413	1					
ANR	426306	Identifier	l		425413	0					
ANR	426307	IncDec	++		425413	1					
ANR	426308	Identifier	offset		425413	1					
ANR	426309	ExpressionStatement	data [ l ++ ] = offset >> 8	1512:2:39262:39285	425413	1	True				
ANR	426310	AssignmentExpression	data [ l ++ ] = offset >> 8		425413	0		=			
ANR	426311	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426312	Identifier	data		425413	0					
ANR	426313	PostIncDecOperationExpression	l ++		425413	1					
ANR	426314	Identifier	l		425413	0					
ANR	426315	IncDec	++		425413	1					
ANR	426316	ShiftExpression	offset >> 8		425413	1		>>			
ANR	426317	Identifier	offset		425413	0					
ANR	426318	PrimaryExpression	8		425413	1					
ANR	426319	ExpressionStatement	data [ l ++ ] = offset >> 16	1513:2:39289:39313	425413	2	True				
ANR	426320	AssignmentExpression	data [ l ++ ] = offset >> 16		425413	0		=			
ANR	426321	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426322	Identifier	data		425413	0					
ANR	426323	PostIncDecOperationExpression	l ++		425413	1					
ANR	426324	Identifier	l		425413	0					
ANR	426325	IncDec	++		425413	1					
ANR	426326	ShiftExpression	offset >> 16		425413	1		>>			
ANR	426327	Identifier	offset		425413	0					
ANR	426328	PrimaryExpression	16		425413	1					
ANR	426329	ExpressionStatement	data [ l ++ ] = offset >> 24	1514:2:39317:39341	425413	3	True				
ANR	426330	AssignmentExpression	data [ l ++ ] = offset >> 24		425413	0		=			
ANR	426331	ArrayIndexing	data [ l ++ ]		425413	0					
ANR	426332	Identifier	data		425413	0					
ANR	426333	PostIncDecOperationExpression	l ++		425413	1					
ANR	426334	Identifier	l		425413	0					
ANR	426335	IncDec	++		425413	1					
ANR	426336	ShiftExpression	offset >> 24		425413	1		>>			
ANR	426337	Identifier	offset		425413	0					
ANR	426338	PrimaryExpression	24		425413	1					
ANR	426339	ReturnStatement	return l ;	1517:1:39348:39356	425413	28	True				
ANR	426340	Identifier	l		425413	0					
ANR	426341	ReturnType	static int		425413	1					
ANR	426342	Identifier	opinc		425413	2					
ANR	426343	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		425413	3					
ANR	426344	Parameter	RAsm * a	1374:17:36050:36056	425413	0	True				
ANR	426345	ParameterType	RAsm *		425413	0					
ANR	426346	Identifier	a		425413	1					
ANR	426347	Parameter	ut8 * data	1374:26:36059:36067	425413	1	True				
ANR	426348	ParameterType	ut8 *		425413	0					
ANR	426349	Identifier	data		425413	1					
ANR	426350	Parameter	const Opcode * op	1374:37:36070:36085	425413	2	True				
ANR	426351	ParameterType	const Opcode *		425413	0					
ANR	426352	Identifier	op		425413	1					
ANR	426353	CFGEntryNode	ENTRY		425413		True				
ANR	426354	CFGExitNode	EXIT		425413		True				
ANR	426355	Symbol	op -> operands [ 0 ] . offset_sign		425413						
ANR	426356	Symbol	mod		425413						
ANR	426357	Symbol	data		425413						
ANR	426358	Symbol	* op		425413						
ANR	426359	Symbol	op -> operands [ 0 ] . dest_size		425413						
ANR	426360	Symbol	opcode		425413						
ANR	426361	Symbol	modrm		425413						
ANR	426362	Symbol	op -> operands [ 0 ] . scale		425413						
ANR	426363	Symbol	op -> operands [ 0 ] . extended		425413						
ANR	426364	Symbol	* op -> operands		425413						
ANR	426365	Symbol	reg		425413						
ANR	426366	Symbol	op -> operands [ 0 ] . reg		425413						
ANR	426367	Symbol	op -> operands [ 0 ] . offset		425413						
ANR	426368	Symbol	B0111		425413						
ANR	426369	Symbol	OT_BYTE		425413						
ANR	426370	Symbol	a -> bits		425413						
ANR	426371	Symbol	rex		425413						
ANR	426372	Symbol	offset		425413						
ANR	426373	Symbol	use_sib		425413						
ANR	426374	Symbol	index		425413						
ANR	426375	Symbol	size		425413						
ANR	426376	Symbol	* op -> operands [ 0 ] . scale		425413						
ANR	426377	Symbol	true		425413						
ANR	426378	Symbol	* * * op		425413						
ANR	426379	Symbol	rm		425413						
ANR	426380	Symbol	X86R_DI		425413						
ANR	426381	Symbol	B0100		425413						
ANR	426382	Symbol	B0101		425413						
ANR	426383	Symbol	op -> operands [ 0 ] . regs		425413						
ANR	426384	Symbol	getsib		425413						
ANR	426385	Symbol	OT_QWORD		425413						
ANR	426386	Symbol	scale		425413						
ANR	426387	Symbol	sib		425413						
ANR	426388	Symbol	* * op		425413						
ANR	426389	Symbol	op -> operands [ 0 ] . type		425413						
ANR	426390	Symbol	B0010		425413						
ANR	426391	Symbol	B0011		425413						
ANR	426392	Symbol	OT_MEMORY		425413						
ANR	426393	Symbol	use_rex		425413						
ANR	426394	Symbol	a		425413						
ANR	426395	Symbol	op		425413						
ANR	426396	Symbol	OT_WORD		425413						
ANR	426397	Symbol	X86R_BP		425413						
ANR	426398	Symbol	op -> operands [ 0 ] . explicit_size		425413						
ANR	426399	Symbol	ALL_SIZE		425413						
ANR	426400	Symbol	false		425413						
ANR	426401	Symbol	X86R_BX		425413						
ANR	426402	Symbol	X86R_SI		425413						
ANR	426403	Symbol	* a		425413						
ANR	426404	Symbol	* * op -> operands		425413						
ANR	426405	Symbol	l		425413						
ANR	426406	Symbol	X86R_RIP		425413						
ANR	426407	Symbol	op -> operands [ 1 ] . type		425413						
ANR	426408	Symbol	* op -> operands [ 0 ] . regs		425413						
ANR	426409	Symbol	rip_rel		425413						
ANR	426410	Symbol	B0000		425413						
ANR	426411	Symbol	B0001		425413						
ANR	426412	Symbol	op -> operands		425413						
ANR	426413	Symbol	* data		425413						
ANR	426414	Symbol	OT_DWORD		425413						
ANR	426415	Function	opint	1520:0:39361:39654							
ANR	426416	FunctionDef	"opint (RAsm * a , ut8 * data , const Opcode * op)"		426415	0					
ANR	426417	CompoundStatement		1520:55:39416:39654	426415	0					
ANR	426418	IdentifierDeclStatement	int l = 0 ;	1521:1:39419:39428	426415	0	True				
ANR	426419	IdentifierDecl	l = 0		426415	0					
ANR	426420	IdentifierDeclType	int		426415	0					
ANR	426421	Identifier	l		426415	1					
ANR	426422	AssignmentExpression	l = 0		426415	2		=			
ANR	426423	Identifier	l		426415	0					
ANR	426424	PrimaryExpression	0		426415	1					
ANR	426425	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		426415	1					
ANR	426426	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	1522:5:39435:39468	426415	0	True				
ANR	426427	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		426415	0		&			
ANR	426428	MemberAccess	op -> operands [ 0 ] . type		426415	0					
ANR	426429	ArrayIndexing	op -> operands [ 0 ]		426415	0					
ANR	426430	PtrMemberAccess	op -> operands		426415	0					
ANR	426431	Identifier	op		426415	0					
ANR	426432	Identifier	operands		426415	1					
ANR	426433	PrimaryExpression	0		426415	1					
ANR	426434	Identifier	type		426415	1					
ANR	426435	Identifier	OT_CONSTANT		426415	1					
ANR	426436	CompoundStatement		4:2:58:123	426415	1					
ANR	426437	IdentifierDeclStatement	st32 immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign ;	1523:2:39475:39540	426415	0	True				
ANR	426438	IdentifierDecl	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		426415	0					
ANR	426439	IdentifierDeclType	st32		426415	0					
ANR	426440	Identifier	immediate		426415	1					
ANR	426441	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		426415	2		=			
ANR	426442	Identifier	immediate		426415	0					
ANR	426443	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		426415	1		*			
ANR	426444	MemberAccess	op -> operands [ 0 ] . immediate		426415	0					
ANR	426445	ArrayIndexing	op -> operands [ 0 ]		426415	0					
ANR	426446	PtrMemberAccess	op -> operands		426415	0					
ANR	426447	Identifier	op		426415	0					
ANR	426448	Identifier	operands		426415	1					
ANR	426449	PrimaryExpression	0		426415	1					
ANR	426450	Identifier	immediate		426415	1					
ANR	426451	MemberAccess	op -> operands [ 0 ] . sign		426415	1					
ANR	426452	ArrayIndexing	op -> operands [ 0 ]		426415	0					
ANR	426453	PtrMemberAccess	op -> operands		426415	0					
ANR	426454	Identifier	op		426415	0					
ANR	426455	Identifier	operands		426415	1					
ANR	426456	PrimaryExpression	0		426415	1					
ANR	426457	Identifier	sign		426415	1					
ANR	426458	IfStatement	if ( immediate <= 255 && immediate >= - 128 )		426415	1					
ANR	426459	Condition	immediate <= 255 && immediate >= - 128	1524:6:39548:39584	426415	0	True				
ANR	426460	AndExpression	immediate <= 255 && immediate >= - 128		426415	0		&&			
ANR	426461	RelationalExpression	immediate <= 255		426415	0		<=			
ANR	426462	Identifier	immediate		426415	0					
ANR	426463	PrimaryExpression	255		426415	1					
ANR	426464	RelationalExpression	immediate >= - 128		426415	1		>=			
ANR	426465	Identifier	immediate		426415	0					
ANR	426466	UnaryOperationExpression	- 128		426415	1					
ANR	426467	UnaryOperator	-		426415	0					
ANR	426468	PrimaryExpression	128		426415	1					
ANR	426469	CompoundStatement		5:45:170:170	426415	1					
ANR	426470	ExpressionStatement	data [ l ++ ] = 0xcd	1525:3:39592:39608	426415	0	True				
ANR	426471	AssignmentExpression	data [ l ++ ] = 0xcd		426415	0		=			
ANR	426472	ArrayIndexing	data [ l ++ ]		426415	0					
ANR	426473	Identifier	data		426415	0					
ANR	426474	PostIncDecOperationExpression	l ++		426415	1					
ANR	426475	Identifier	l		426415	0					
ANR	426476	IncDec	++		426415	1					
ANR	426477	PrimaryExpression	0xcd		426415	1					
ANR	426478	ExpressionStatement	data [ l ++ ] = immediate	1526:3:39613:39634	426415	1	True				
ANR	426479	AssignmentExpression	data [ l ++ ] = immediate		426415	0		=			
ANR	426480	ArrayIndexing	data [ l ++ ]		426415	0					
ANR	426481	Identifier	data		426415	0					
ANR	426482	PostIncDecOperationExpression	l ++		426415	1					
ANR	426483	Identifier	l		426415	0					
ANR	426484	IncDec	++		426415	1					
ANR	426485	Identifier	immediate		426415	1					
ANR	426486	ReturnStatement	return l ;	1529:1:39644:39652	426415	2	True				
ANR	426487	Identifier	l		426415	0					
ANR	426488	ReturnType	static int		426415	1					
ANR	426489	Identifier	opint		426415	2					
ANR	426490	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		426415	3					
ANR	426491	Parameter	RAsm * a	1520:17:39378:39384	426415	0	True				
ANR	426492	ParameterType	RAsm *		426415	0					
ANR	426493	Identifier	a		426415	1					
ANR	426494	Parameter	ut8 * data	1520:26:39387:39395	426415	1	True				
ANR	426495	ParameterType	ut8 *		426415	0					
ANR	426496	Identifier	data		426415	1					
ANR	426497	Parameter	const Opcode * op	1520:37:39398:39413	426415	2	True				
ANR	426498	ParameterType	const Opcode *		426415	0					
ANR	426499	Identifier	op		426415	1					
ANR	426500	CFGEntryNode	ENTRY		426415		True				
ANR	426501	CFGExitNode	EXIT		426415		True				
ANR	426502	Symbol	a		426415						
ANR	426503	Symbol	op		426415						
ANR	426504	Symbol	OT_CONSTANT		426415						
ANR	426505	Symbol	data		426415						
ANR	426506	Symbol	* op		426415						
ANR	426507	Symbol	l		426415						
ANR	426508	Symbol	op -> operands [ 0 ] . immediate		426415						
ANR	426509	Symbol	* * op		426415						
ANR	426510	Symbol	* op -> operands		426415						
ANR	426511	Symbol	immediate		426415						
ANR	426512	Symbol	op -> operands [ 0 ] . type		426415						
ANR	426513	Symbol	op -> operands		426415						
ANR	426514	Symbol	* data		426415						
ANR	426515	Symbol	op -> operands [ 0 ] . sign		426415						
ANR	426516	Function	opjc	1532:0:39657:43502							
ANR	426517	FunctionDef	"opjc (RAsm * a , ut8 * data , const Opcode * op)"		426516	0					
ANR	426518	CompoundStatement		1532:54:39711:43502	426516	0					
ANR	426519	ExpressionStatement	is_valid_registers ( op )	1533:1:39714:39737	426516	0	True				
ANR	426520	CallExpression	is_valid_registers ( op )		426516	0					
ANR	426521	Callee	is_valid_registers		426516	0					
ANR	426522	Identifier	is_valid_registers		426516	0					
ANR	426523	ArgumentList	op		426516	1					
ANR	426524	Argument	op		426516	0					
ANR	426525	Identifier	op		426516	0					
ANR	426526	IdentifierDeclStatement	int l = 0 ;	1534:1:39740:39749	426516	1	True				
ANR	426527	IdentifierDecl	l = 0		426516	0					
ANR	426528	IdentifierDeclType	int		426516	0					
ANR	426529	Identifier	l		426516	1					
ANR	426530	AssignmentExpression	l = 0		426516	2		=			
ANR	426531	Identifier	l		426516	0					
ANR	426532	PrimaryExpression	0		426516	1					
ANR	426533	IdentifierDeclStatement	bool is_short = op -> is_short ;	1535:1:39752:39780	426516	2	True				
ANR	426534	IdentifierDecl	is_short = op -> is_short		426516	0					
ANR	426535	IdentifierDeclType	bool		426516	0					
ANR	426536	Identifier	is_short		426516	1					
ANR	426537	AssignmentExpression	is_short = op -> is_short		426516	2		=			
ANR	426538	Identifier	is_short		426516	0					
ANR	426539	PtrMemberAccess	op -> is_short		426516	1					
ANR	426540	Identifier	op		426516	0					
ANR	426541	Identifier	is_short		426516	1					
ANR	426542	IdentifierDeclStatement	st64 immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign ;	1537:1:39851:39916	426516	3	True				
ANR	426543	IdentifierDecl	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		426516	0					
ANR	426544	IdentifierDeclType	st64		426516	0					
ANR	426545	Identifier	immediate		426516	1					
ANR	426546	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		426516	2		=			
ANR	426547	Identifier	immediate		426516	0					
ANR	426548	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		426516	1		*			
ANR	426549	MemberAccess	op -> operands [ 0 ] . immediate		426516	0					
ANR	426550	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426551	PtrMemberAccess	op -> operands		426516	0					
ANR	426552	Identifier	op		426516	0					
ANR	426553	Identifier	operands		426516	1					
ANR	426554	PrimaryExpression	0		426516	1					
ANR	426555	Identifier	immediate		426516	1					
ANR	426556	MemberAccess	op -> operands [ 0 ] . sign		426516	1					
ANR	426557	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426558	PtrMemberAccess	op -> operands		426516	0					
ANR	426559	Identifier	op		426516	0					
ANR	426560	Identifier	operands		426516	1					
ANR	426561	PrimaryExpression	0		426516	1					
ANR	426562	Identifier	sign		426516	1					
ANR	426563	IfStatement	if ( is_short && ( immediate > ST8_MAX || immediate < ST8_MIN ) )		426516	4					
ANR	426564	Condition	is_short && ( immediate > ST8_MAX || immediate < ST8_MIN )	1538:5:39923:39978	426516	0	True				
ANR	426565	AndExpression	is_short && ( immediate > ST8_MAX || immediate < ST8_MIN )		426516	0		&&			
ANR	426566	Identifier	is_short		426516	0					
ANR	426567	OrExpression	immediate > ST8_MAX || immediate < ST8_MIN		426516	1		||			
ANR	426568	RelationalExpression	immediate > ST8_MAX		426516	0		>			
ANR	426569	Identifier	immediate		426516	0					
ANR	426570	Identifier	ST8_MAX		426516	1					
ANR	426571	RelationalExpression	immediate < ST8_MIN		426516	1		<			
ANR	426572	Identifier	immediate		426516	0					
ANR	426573	Identifier	ST8_MIN		426516	1					
ANR	426574	CompoundStatement		7:63:269:269	426516	1					
ANR	426575	ReturnStatement	return l ;	1539:2:39985:39993	426516	0	True				
ANR	426576	Identifier	l		426516	0					
ANR	426577	ExpressionStatement	immediate -= a -> pc	1541:1:39999:40017	426516	5	True				
ANR	426578	AssignmentExpression	immediate -= a -> pc		426516	0		-=			
ANR	426579	Identifier	immediate		426516	0					
ANR	426580	PtrMemberAccess	a -> pc		426516	1					
ANR	426581	Identifier	a		426516	0					
ANR	426582	Identifier	pc		426516	1					
ANR	426583	IfStatement	if ( immediate > ST32_MAX || immediate < - ST32_MAX )		426516	6					
ANR	426584	Condition	immediate > ST32_MAX || immediate < - ST32_MAX	1542:5:40024:40068	426516	0	True				
ANR	426585	OrExpression	immediate > ST32_MAX || immediate < - ST32_MAX		426516	0		||			
ANR	426586	RelationalExpression	immediate > ST32_MAX		426516	0		>			
ANR	426587	Identifier	immediate		426516	0					
ANR	426588	Identifier	ST32_MAX		426516	1					
ANR	426589	RelationalExpression	immediate < - ST32_MAX		426516	1		<			
ANR	426590	Identifier	immediate		426516	0					
ANR	426591	UnaryOperationExpression	- ST32_MAX		426516	1					
ANR	426592	UnaryOperator	-		426516	0					
ANR	426593	Identifier	ST32_MAX		426516	1					
ANR	426594	CompoundStatement		11:52:359:359	426516	1					
ANR	426595	ReturnStatement	return - 1 ;	1543:2:40075:40084	426516	0	True				
ANR	426596	UnaryOperationExpression	- 1		426516	0					
ANR	426597	UnaryOperator	-		426516	0					
ANR	426598	PrimaryExpression	1		426516	1					
ANR	426599	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jmp"" ) )"		426516	7					
ANR	426600	Condition	"! strcmp ( op -> mnemonic , ""jmp"" )"	1545:5:40094:40122	426516	0	True				
ANR	426601	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jmp"" )"		426516	0					
ANR	426602	UnaryOperator	!		426516	0					
ANR	426603	CallExpression	"strcmp ( op -> mnemonic , ""jmp"" )"		426516	1					
ANR	426604	Callee	strcmp		426516	0					
ANR	426605	Identifier	strcmp		426516	0					
ANR	426606	ArgumentList	op -> mnemonic		426516	1					
ANR	426607	Argument	op -> mnemonic		426516	0					
ANR	426608	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	426609	Identifier	op		426516	0					
ANR	426610	Identifier	mnemonic		426516	1					
ANR	426611	Argument	"""jmp"""		426516	1					
ANR	426612	PrimaryExpression	"""jmp"""		426516	0					
ANR	426613	CompoundStatement		14:36:413:413	426516	1					
ANR	426614	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		426516	0					
ANR	426615	Condition	op -> operands [ 0 ] . type & OT_GPREG	1546:6:40133:40163	426516	0	True				
ANR	426616	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		426516	0		&			
ANR	426617	MemberAccess	op -> operands [ 0 ] . type		426516	0					
ANR	426618	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426619	PtrMemberAccess	op -> operands		426516	0					
ANR	426620	Identifier	op		426516	0					
ANR	426621	Identifier	operands		426516	1					
ANR	426622	PrimaryExpression	0		426516	1					
ANR	426623	Identifier	type		426516	1					
ANR	426624	Identifier	OT_GPREG		426516	1					
ANR	426625	CompoundStatement		15:39:454:454	426516	1					
ANR	426626	ExpressionStatement	data [ l ++ ] = 0xff	1547:3:40171:40187	426516	0	True				
ANR	426627	AssignmentExpression	data [ l ++ ] = 0xff		426516	0		=			
ANR	426628	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426629	Identifier	data		426516	0					
ANR	426630	PostIncDecOperationExpression	l ++		426516	1					
ANR	426631	Identifier	l		426516	0					
ANR	426632	IncDec	++		426516	1					
ANR	426633	PrimaryExpression	0xff		426516	1					
ANR	426634	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		426516	1					
ANR	426635	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1548:7:40196:40227	426516	0	True				
ANR	426636	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		426516	0		&			
ANR	426637	MemberAccess	op -> operands [ 0 ] . type		426516	0					
ANR	426638	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426639	PtrMemberAccess	op -> operands		426516	0					
ANR	426640	Identifier	op		426516	0					
ANR	426641	Identifier	operands		426516	1					
ANR	426642	PrimaryExpression	0		426516	1					
ANR	426643	Identifier	type		426516	1					
ANR	426644	Identifier	OT_MEMORY		426516	1					
ANR	426645	CompoundStatement		17:41:518:518	426516	1					
ANR	426646	IfStatement	if ( op -> operands [ 0 ] . offset )		426516	0					
ANR	426647	Condition	op -> operands [ 0 ] . offset	1549:8:40240:40261	426516	0	True				
ANR	426648	MemberAccess	op -> operands [ 0 ] . offset		426516	0					
ANR	426649	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426650	PtrMemberAccess	op -> operands		426516	0					
ANR	426651	Identifier	op		426516	0					
ANR	426652	Identifier	operands		426516	1					
ANR	426653	PrimaryExpression	0		426516	1					
ANR	426654	Identifier	offset		426516	1					
ANR	426655	CompoundStatement		19:5:559:624	426516	1					
ANR	426656	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1550:5:40271:40336	426516	0	True				
ANR	426657	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		426516	0					
ANR	426658	IdentifierDeclType	int		426516	0					
ANR	426659	Identifier	offset		426516	1					
ANR	426660	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		426516	2		=			
ANR	426661	Identifier	offset		426516	0					
ANR	426662	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		426516	1		*			
ANR	426663	MemberAccess	op -> operands [ 0 ] . offset		426516	0					
ANR	426664	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426665	PtrMemberAccess	op -> operands		426516	0					
ANR	426666	Identifier	op		426516	0					
ANR	426667	Identifier	operands		426516	1					
ANR	426668	PrimaryExpression	0		426516	1					
ANR	426669	Identifier	offset		426516	1					
ANR	426670	MemberAccess	op -> operands [ 0 ] . offset_sign		426516	1					
ANR	426671	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426672	PtrMemberAccess	op -> operands		426516	0					
ANR	426673	Identifier	op		426516	0					
ANR	426674	Identifier	operands		426516	1					
ANR	426675	PrimaryExpression	0		426516	1					
ANR	426676	Identifier	offset_sign		426516	1					
ANR	426677	IfStatement	if ( offset >= 128 || offset <= - 129 )		426516	1					
ANR	426678	Condition	offset >= 128 || offset <= - 129	1551:9:40347:40377	426516	0	True				
ANR	426679	OrExpression	offset >= 128 || offset <= - 129		426516	0		||			
ANR	426680	RelationalExpression	offset >= 128		426516	0		>=			
ANR	426681	Identifier	offset		426516	0					
ANR	426682	PrimaryExpression	128		426516	1					
ANR	426683	RelationalExpression	offset <= - 129		426516	1		<=			
ANR	426684	Identifier	offset		426516	0					
ANR	426685	UnaryOperationExpression	- 129		426516	1					
ANR	426686	UnaryOperator	-		426516	0					
ANR	426687	PrimaryExpression	129		426516	1					
ANR	426688	CompoundStatement		20:42:668:668	426516	1					
ANR	426689	ExpressionStatement	data [ l ] = 0xa0	1552:6:40388:40402	426516	0	True				
ANR	426690	AssignmentExpression	data [ l ] = 0xa0		426516	0		=			
ANR	426691	ArrayIndexing	data [ l ]		426516	0					
ANR	426692	Identifier	data		426516	0					
ANR	426693	Identifier	l		426516	1					
ANR	426694	PrimaryExpression	0xa0		426516	1					
ANR	426695	ElseStatement	else		426516	0					
ANR	426696	CompoundStatement		22:12:704:704	426516	0					
ANR	426697	ExpressionStatement	data [ l ] = 0x60	1554:6:40424:40438	426516	0	True				
ANR	426698	AssignmentExpression	data [ l ] = 0x60		426516	0		=			
ANR	426699	ArrayIndexing	data [ l ]		426516	0					
ANR	426700	Identifier	data		426516	0					
ANR	426701	Identifier	l		426516	1					
ANR	426702	PrimaryExpression	0x60		426516	1					
ANR	426703	ExpressionStatement	data [ l ++ ] |= op -> operands [ 0 ] . regs [ 0 ]	1556:5:40452:40488	426516	2	True				
ANR	426704	AssignmentExpression	data [ l ++ ] |= op -> operands [ 0 ] . regs [ 0 ]		426516	0		|=			
ANR	426705	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426706	Identifier	data		426516	0					
ANR	426707	PostIncDecOperationExpression	l ++		426516	1					
ANR	426708	Identifier	l		426516	0					
ANR	426709	IncDec	++		426516	1					
ANR	426710	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		426516	1					
ANR	426711	MemberAccess	op -> operands [ 0 ] . regs		426516	0					
ANR	426712	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426713	PtrMemberAccess	op -> operands		426516	0					
ANR	426714	Identifier	op		426516	0					
ANR	426715	Identifier	operands		426516	1					
ANR	426716	PrimaryExpression	0		426516	1					
ANR	426717	Identifier	regs		426516	1					
ANR	426718	PrimaryExpression	0		426516	1					
ANR	426719	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		426516	3					
ANR	426720	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	1557:9:40499:40533	426516	0	True				
ANR	426721	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		426516	0		==			
ANR	426722	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		426516	0					
ANR	426723	MemberAccess	op -> operands [ 0 ] . regs		426516	0					
ANR	426724	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426725	PtrMemberAccess	op -> operands		426516	0					
ANR	426726	Identifier	op		426516	0					
ANR	426727	Identifier	operands		426516	1					
ANR	426728	PrimaryExpression	0		426516	1					
ANR	426729	Identifier	regs		426516	1					
ANR	426730	PrimaryExpression	0		426516	1					
ANR	426731	Identifier	X86R_ESP		426516	1					
ANR	426732	CompoundStatement		26:46:824:824	426516	1					
ANR	426733	ExpressionStatement	data [ l ++ ] = 0x24	1558:6:40544:40560	426516	0	True				
ANR	426734	AssignmentExpression	data [ l ++ ] = 0x24		426516	0		=			
ANR	426735	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426736	Identifier	data		426516	0					
ANR	426737	PostIncDecOperationExpression	l ++		426516	1					
ANR	426738	Identifier	l		426516	0					
ANR	426739	IncDec	++		426516	1					
ANR	426740	PrimaryExpression	0x24		426516	1					
ANR	426741	ExpressionStatement	data [ l ++ ] = offset	1560:5:40574:40592	426516	4	True				
ANR	426742	AssignmentExpression	data [ l ++ ] = offset		426516	0		=			
ANR	426743	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426744	Identifier	data		426516	0					
ANR	426745	PostIncDecOperationExpression	l ++		426516	1					
ANR	426746	Identifier	l		426516	0					
ANR	426747	IncDec	++		426516	1					
ANR	426748	Identifier	offset		426516	1					
ANR	426749	IfStatement	if ( op -> operands [ 0 ] . offset >= 0x80 )		426516	5					
ANR	426750	Condition	op -> operands [ 0 ] . offset >= 0x80	1561:9:40603:40632	426516	0	True				
ANR	426751	RelationalExpression	op -> operands [ 0 ] . offset >= 0x80		426516	0		>=			
ANR	426752	MemberAccess	op -> operands [ 0 ] . offset		426516	0					
ANR	426753	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426754	PtrMemberAccess	op -> operands		426516	0					
ANR	426755	Identifier	op		426516	0					
ANR	426756	Identifier	operands		426516	1					
ANR	426757	PrimaryExpression	0		426516	1					
ANR	426758	Identifier	offset		426516	1					
ANR	426759	PrimaryExpression	0x80		426516	1					
ANR	426760	CompoundStatement		30:41:923:923	426516	1					
ANR	426761	ExpressionStatement	data [ l ++ ] = offset >> 8	1562:6:40643:40666	426516	0	True				
ANR	426762	AssignmentExpression	data [ l ++ ] = offset >> 8		426516	0		=			
ANR	426763	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426764	Identifier	data		426516	0					
ANR	426765	PostIncDecOperationExpression	l ++		426516	1					
ANR	426766	Identifier	l		426516	0					
ANR	426767	IncDec	++		426516	1					
ANR	426768	ShiftExpression	offset >> 8		426516	1		>>			
ANR	426769	Identifier	offset		426516	0					
ANR	426770	PrimaryExpression	8		426516	1					
ANR	426771	ExpressionStatement	data [ l ++ ] = offset >> 16	1563:6:40674:40698	426516	1	True				
ANR	426772	AssignmentExpression	data [ l ++ ] = offset >> 16		426516	0		=			
ANR	426773	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426774	Identifier	data		426516	0					
ANR	426775	PostIncDecOperationExpression	l ++		426516	1					
ANR	426776	Identifier	l		426516	0					
ANR	426777	IncDec	++		426516	1					
ANR	426778	ShiftExpression	offset >> 16		426516	1		>>			
ANR	426779	Identifier	offset		426516	0					
ANR	426780	PrimaryExpression	16		426516	1					
ANR	426781	ExpressionStatement	data [ l ++ ] = offset >> 24	1564:6:40706:40730	426516	2	True				
ANR	426782	AssignmentExpression	data [ l ++ ] = offset >> 24		426516	0		=			
ANR	426783	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426784	Identifier	data		426516	0					
ANR	426785	PostIncDecOperationExpression	l ++		426516	1					
ANR	426786	Identifier	l		426516	0					
ANR	426787	IncDec	++		426516	1					
ANR	426788	ShiftExpression	offset >> 24		426516	1		>>			
ANR	426789	Identifier	offset		426516	0					
ANR	426790	PrimaryExpression	24		426516	1					
ANR	426791	ElseStatement	else		426516	0					
ANR	426792	CompoundStatement		35:11:1038:1038	426516	0					
ANR	426793	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	1567:5:40757:40799	426516	0	True				
ANR	426794	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		426516	0		=			
ANR	426795	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426796	Identifier	data		426516	0					
ANR	426797	PostIncDecOperationExpression	l ++		426516	1					
ANR	426798	Identifier	l		426516	0					
ANR	426799	IncDec	++		426516	1					
ANR	426800	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		426516	1		|			
ANR	426801	PrimaryExpression	0x20		426516	0					
ANR	426802	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		426516	1					
ANR	426803	MemberAccess	op -> operands [ 0 ] . regs		426516	0					
ANR	426804	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426805	PtrMemberAccess	op -> operands		426516	0					
ANR	426806	Identifier	op		426516	0					
ANR	426807	Identifier	operands		426516	1					
ANR	426808	PrimaryExpression	0		426516	1					
ANR	426809	Identifier	regs		426516	1					
ANR	426810	PrimaryExpression	0		426516	1					
ANR	426811	ElseStatement	else		426516	0					
ANR	426812	CompoundStatement		38:10:1105:1105	426516	0					
ANR	426813	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	1570:4:40823:40861	426516	0	True				
ANR	426814	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		426516	0		=			
ANR	426815	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426816	Identifier	data		426516	0					
ANR	426817	PostIncDecOperationExpression	l ++		426516	1					
ANR	426818	Identifier	l		426516	0					
ANR	426819	IncDec	++		426516	1					
ANR	426820	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		426516	1		|			
ANR	426821	PrimaryExpression	0xe0		426516	0					
ANR	426822	MemberAccess	op -> operands [ 0 ] . reg		426516	1					
ANR	426823	ArrayIndexing	op -> operands [ 0 ]		426516	0					
ANR	426824	PtrMemberAccess	op -> operands		426516	0					
ANR	426825	Identifier	op		426516	0					
ANR	426826	Identifier	operands		426516	1					
ANR	426827	PrimaryExpression	0		426516	1					
ANR	426828	Identifier	reg		426516	1					
ANR	426829	ElseStatement	else		426516	0					
ANR	426830	CompoundStatement		41:9:1165:1165	426516	0					
ANR	426831	IfStatement	if ( - 0x80 <= ( immediate - 2 ) && ( immediate - 2 ) <= 0x7f )		426516	0					
ANR	426832	Condition	- 0x80 <= ( immediate - 2 ) && ( immediate - 2 ) <= 0x7f	1573:7:40886:40936	426516	0	True				
ANR	426833	AndExpression	- 0x80 <= ( immediate - 2 ) && ( immediate - 2 ) <= 0x7f		426516	0		&&			
ANR	426834	RelationalExpression	- 0x80 <= ( immediate - 2 )		426516	0		<=			
ANR	426835	UnaryOperationExpression	- 0x80		426516	0					
ANR	426836	UnaryOperator	-		426516	0					
ANR	426837	PrimaryExpression	0x80		426516	1					
ANR	426838	AdditiveExpression	immediate - 2		426516	1		-			
ANR	426839	Identifier	immediate		426516	0					
ANR	426840	PrimaryExpression	2		426516	1					
ANR	426841	RelationalExpression	( immediate - 2 ) <= 0x7f		426516	1		<=			
ANR	426842	AdditiveExpression	immediate - 2		426516	0		-			
ANR	426843	Identifier	immediate		426516	0					
ANR	426844	PrimaryExpression	2		426516	1					
ANR	426845	PrimaryExpression	0x7f		426516	1					
ANR	426846	CompoundStatement		42:60:1227:1227	426516	1					
ANR	426847	ExpressionStatement	data [ l ++ ] = 0xeb	1575:4:40977:40993	426516	0	True				
ANR	426848	AssignmentExpression	data [ l ++ ] = 0xeb		426516	0		=			
ANR	426849	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426850	Identifier	data		426516	0					
ANR	426851	PostIncDecOperationExpression	l ++		426516	1					
ANR	426852	Identifier	l		426516	0					
ANR	426853	IncDec	++		426516	1					
ANR	426854	PrimaryExpression	0xeb		426516	1					
ANR	426855	ExpressionStatement	data [ l ++ ] = immediate - 2	1576:4:40999:41024	426516	1	True				
ANR	426856	AssignmentExpression	data [ l ++ ] = immediate - 2		426516	0		=			
ANR	426857	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426858	Identifier	data		426516	0					
ANR	426859	PostIncDecOperationExpression	l ++		426516	1					
ANR	426860	Identifier	l		426516	0					
ANR	426861	IncDec	++		426516	1					
ANR	426862	AdditiveExpression	immediate - 2		426516	1		-			
ANR	426863	Identifier	immediate		426516	0					
ANR	426864	PrimaryExpression	2		426516	1					
ANR	426865	ElseStatement	else		426516	0					
ANR	426866	CompoundStatement		46:10:1324:1324	426516	0					
ANR	426867	ExpressionStatement	immediate -= 5	1579:4:41069:41083	426516	0	True				
ANR	426868	AssignmentExpression	immediate -= 5		426516	0		-=			
ANR	426869	Identifier	immediate		426516	0					
ANR	426870	PrimaryExpression	5		426516	1					
ANR	426871	ExpressionStatement	data [ l ++ ] = 0xe9	1580:4:41089:41105	426516	1	True				
ANR	426872	AssignmentExpression	data [ l ++ ] = 0xe9		426516	0		=			
ANR	426873	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426874	Identifier	data		426516	0					
ANR	426875	PostIncDecOperationExpression	l ++		426516	1					
ANR	426876	Identifier	l		426516	0					
ANR	426877	IncDec	++		426516	1					
ANR	426878	PrimaryExpression	0xe9		426516	1					
ANR	426879	ExpressionStatement	data [ l ++ ] = immediate	1581:4:41111:41132	426516	2	True				
ANR	426880	AssignmentExpression	data [ l ++ ] = immediate		426516	0		=			
ANR	426881	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426882	Identifier	data		426516	0					
ANR	426883	PostIncDecOperationExpression	l ++		426516	1					
ANR	426884	Identifier	l		426516	0					
ANR	426885	IncDec	++		426516	1					
ANR	426886	Identifier	immediate		426516	1					
ANR	426887	ExpressionStatement	data [ l ++ ] = immediate >> 8	1582:4:41138:41164	426516	3	True				
ANR	426888	AssignmentExpression	data [ l ++ ] = immediate >> 8		426516	0		=			
ANR	426889	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426890	Identifier	data		426516	0					
ANR	426891	PostIncDecOperationExpression	l ++		426516	1					
ANR	426892	Identifier	l		426516	0					
ANR	426893	IncDec	++		426516	1					
ANR	426894	ShiftExpression	immediate >> 8		426516	1		>>			
ANR	426895	Identifier	immediate		426516	0					
ANR	426896	PrimaryExpression	8		426516	1					
ANR	426897	ExpressionStatement	data [ l ++ ] = immediate >> 16	1583:4:41170:41197	426516	4	True				
ANR	426898	AssignmentExpression	data [ l ++ ] = immediate >> 16		426516	0		=			
ANR	426899	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426900	Identifier	data		426516	0					
ANR	426901	PostIncDecOperationExpression	l ++		426516	1					
ANR	426902	Identifier	l		426516	0					
ANR	426903	IncDec	++		426516	1					
ANR	426904	ShiftExpression	immediate >> 16		426516	1		>>			
ANR	426905	Identifier	immediate		426516	0					
ANR	426906	PrimaryExpression	16		426516	1					
ANR	426907	ExpressionStatement	data [ l ++ ] = immediate >> 24	1584:4:41203:41230	426516	5	True				
ANR	426908	AssignmentExpression	data [ l ++ ] = immediate >> 24		426516	0		=			
ANR	426909	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426910	Identifier	data		426516	0					
ANR	426911	PostIncDecOperationExpression	l ++		426516	1					
ANR	426912	Identifier	l		426516	0					
ANR	426913	IncDec	++		426516	1					
ANR	426914	ShiftExpression	immediate >> 24		426516	1		>>			
ANR	426915	Identifier	immediate		426516	0					
ANR	426916	PrimaryExpression	24		426516	1					
ANR	426917	ReturnStatement	return l ;	1587:2:41243:41251	426516	1	True				
ANR	426918	Identifier	l		426516	0					
ANR	426919	IfStatement	if ( immediate <= 0x81 && immediate > - 0x7f )		426516	8					
ANR	426920	Condition	immediate <= 0x81 && immediate > - 0x7f	1589:5:41261:41298	426516	0	True				
ANR	426921	AndExpression	immediate <= 0x81 && immediate > - 0x7f		426516	0		&&			
ANR	426922	RelationalExpression	immediate <= 0x81		426516	0		<=			
ANR	426923	Identifier	immediate		426516	0					
ANR	426924	PrimaryExpression	0x81		426516	1					
ANR	426925	RelationalExpression	immediate > - 0x7f		426516	1		>			
ANR	426926	Identifier	immediate		426516	0					
ANR	426927	UnaryOperationExpression	- 0x7f		426516	1					
ANR	426928	UnaryOperator	-		426516	0					
ANR	426929	PrimaryExpression	0x7f		426516	1					
ANR	426930	CompoundStatement		58:45:1589:1589	426516	1					
ANR	426931	ExpressionStatement	is_short = true	1590:2:41305:41320	426516	0	True				
ANR	426932	AssignmentExpression	is_short = true		426516	0		=			
ANR	426933	Identifier	is_short		426516	0					
ANR	426934	Identifier	true		426516	1					
ANR	426935	IfStatement	if ( a -> bits == 16 && ( immediate > 0x81 || immediate < - 0x7e ) )		426516	9					
ANR	426936	Condition	a -> bits == 16 && ( immediate > 0x81 || immediate < - 0x7e )	1592:5:41330:41385	426516	0	True				
ANR	426937	AndExpression	a -> bits == 16 && ( immediate > 0x81 || immediate < - 0x7e )		426516	0		&&			
ANR	426938	EqualityExpression	a -> bits == 16		426516	0		==			
ANR	426939	PtrMemberAccess	a -> bits		426516	0					
ANR	426940	Identifier	a		426516	0					
ANR	426941	Identifier	bits		426516	1					
ANR	426942	PrimaryExpression	16		426516	1					
ANR	426943	OrExpression	immediate > 0x81 || immediate < - 0x7e		426516	1		||			
ANR	426944	RelationalExpression	immediate > 0x81		426516	0		>			
ANR	426945	Identifier	immediate		426516	0					
ANR	426946	PrimaryExpression	0x81		426516	1					
ANR	426947	RelationalExpression	immediate < - 0x7e		426516	1		<			
ANR	426948	Identifier	immediate		426516	0					
ANR	426949	UnaryOperationExpression	- 0x7e		426516	1					
ANR	426950	UnaryOperator	-		426516	0					
ANR	426951	PrimaryExpression	0x7e		426516	1					
ANR	426952	CompoundStatement		61:63:1676:1676	426516	1					
ANR	426953	ExpressionStatement	data [ l ++ ] = 0x66	1593:2:41392:41408	426516	0	True				
ANR	426954	AssignmentExpression	data [ l ++ ] = 0x66		426516	0		=			
ANR	426955	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426956	Identifier	data		426516	0					
ANR	426957	PostIncDecOperationExpression	l ++		426516	1					
ANR	426958	Identifier	l		426516	0					
ANR	426959	IncDec	++		426516	1					
ANR	426960	PrimaryExpression	0x66		426516	1					
ANR	426961	ExpressionStatement	is_short = false	1594:2:41412:41428	426516	1	True				
ANR	426962	AssignmentExpression	is_short = false		426516	0		=			
ANR	426963	Identifier	is_short		426516	0					
ANR	426964	Identifier	false		426516	1					
ANR	426965	ExpressionStatement	immediate --	1595:2:41432:41444	426516	2	True				
ANR	426966	PostIncDecOperationExpression	immediate --		426516	0					
ANR	426967	Identifier	immediate		426516	0					
ANR	426968	IncDec	--		426516	1					
ANR	426969	IfStatement	if ( ! is_short )		426516	10					
ANR	426970	Condition	! is_short	1598:5:41455:41463	426516	0	True				
ANR	426971	UnaryOperationExpression	! is_short		426516	0					
ANR	426972	UnaryOperator	!		426516	0					
ANR	426973	Identifier	is_short		426516	1					
ANR	426974	CompoundStatement		67:16:1754:1754	426516	1					
ANR	426975	ExpressionStatement	data [ l ++ ] = 0x0f	1598:17:41467:41483	426516	0	True				
ANR	426976	AssignmentExpression	data [ l ++ ] = 0x0f		426516	0		=			
ANR	426977	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	426978	Identifier	data		426516	0					
ANR	426979	PostIncDecOperationExpression	l ++		426516	1					
ANR	426980	Identifier	l		426516	0					
ANR	426981	IncDec	++		426516	1					
ANR	426982	PrimaryExpression	0x0f		426516	1					
ANR	426983	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""ja"" ) || ! strcmp ( op -> mnemonic , ""jnbe"" ) )"		426516	11					
ANR	426984	Condition	"! strcmp ( op -> mnemonic , ""ja"" ) || ! strcmp ( op -> mnemonic , ""jnbe"" )"	1599:5:41491:41564	426516	0	True				
ANR	426985	OrExpression	"! strcmp ( op -> mnemonic , ""ja"" ) || ! strcmp ( op -> mnemonic , ""jnbe"" )"		426516	0		||			
ANR	426986	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""ja"" )"		426516	0					
ANR	426987	UnaryOperator	!		426516	0					
ANR	426988	CallExpression	"strcmp ( op -> mnemonic , ""ja"" )"		426516	1					
ANR	426989	Callee	strcmp		426516	0					
ANR	426990	Identifier	strcmp		426516	0					
ANR	426991	ArgumentList	op -> mnemonic		426516	1					
ANR	426992	Argument	op -> mnemonic		426516	0					
ANR	426993	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	426994	Identifier	op		426516	0					
ANR	426995	Identifier	mnemonic		426516	1					
ANR	426996	Argument	"""ja"""		426516	1					
ANR	426997	PrimaryExpression	"""ja"""		426516	0					
ANR	426998	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnbe"" )"		426516	1					
ANR	426999	UnaryOperator	!		426516	0					
ANR	427000	CallExpression	"strcmp ( op -> mnemonic , ""jnbe"" )"		426516	1					
ANR	427001	Callee	strcmp		426516	0					
ANR	427002	Identifier	strcmp		426516	0					
ANR	427003	ArgumentList	op -> mnemonic		426516	1					
ANR	427004	Argument	op -> mnemonic		426516	0					
ANR	427005	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427006	Identifier	op		426516	0					
ANR	427007	Identifier	mnemonic		426516	1					
ANR	427008	Argument	"""jnbe"""		426516	1					
ANR	427009	PrimaryExpression	"""jnbe"""		426516	0					
ANR	427010	CompoundStatement		69:44:1855:1855	426516	1					
ANR	427011	ExpressionStatement	data [ l ++ ] = 0x87	1601:2:41571:41587	426516	0	True				
ANR	427012	AssignmentExpression	data [ l ++ ] = 0x87		426516	0		=			
ANR	427013	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427014	Identifier	data		426516	0					
ANR	427015	PostIncDecOperationExpression	l ++		426516	1					
ANR	427016	Identifier	l		426516	0					
ANR	427017	IncDec	++		426516	1					
ANR	427018	PrimaryExpression	0x87		426516	1					
ANR	427019	ElseStatement	else		426516	0					
ANR	427020	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jae"" ) || ! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" ) )"		426516	0					
ANR	427021	Condition	"! strcmp ( op -> mnemonic , ""jae"" ) || ! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" )"	1602:12:41601:41733	426516	0	True				
ANR	427022	OrExpression	"! strcmp ( op -> mnemonic , ""jae"" ) || ! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" )"		426516	0		||			
ANR	427023	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jae"" )"		426516	0					
ANR	427024	UnaryOperator	!		426516	0					
ANR	427025	CallExpression	"strcmp ( op -> mnemonic , ""jae"" )"		426516	1					
ANR	427026	Callee	strcmp		426516	0					
ANR	427027	Identifier	strcmp		426516	0					
ANR	427028	ArgumentList	op -> mnemonic		426516	1					
ANR	427029	Argument	op -> mnemonic		426516	0					
ANR	427030	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427031	Identifier	op		426516	0					
ANR	427032	Identifier	mnemonic		426516	1					
ANR	427033	Argument	"""jae"""		426516	1					
ANR	427034	PrimaryExpression	"""jae"""		426516	0					
ANR	427035	OrExpression	"! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" )"		426516	1		||			
ANR	427036	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnb"" )"		426516	0					
ANR	427037	UnaryOperator	!		426516	0					
ANR	427038	CallExpression	"strcmp ( op -> mnemonic , ""jnb"" )"		426516	1					
ANR	427039	Callee	strcmp		426516	0					
ANR	427040	Identifier	strcmp		426516	0					
ANR	427041	ArgumentList	op -> mnemonic		426516	1					
ANR	427042	Argument	op -> mnemonic		426516	0					
ANR	427043	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427044	Identifier	op		426516	0					
ANR	427045	Identifier	mnemonic		426516	1					
ANR	427046	Argument	"""jnb"""		426516	1					
ANR	427047	PrimaryExpression	"""jnb"""		426516	0					
ANR	427048	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnc"" )"		426516	1					
ANR	427049	UnaryOperator	!		426516	0					
ANR	427050	CallExpression	"strcmp ( op -> mnemonic , ""jnc"" )"		426516	1					
ANR	427051	Callee	strcmp		426516	0					
ANR	427052	Identifier	strcmp		426516	0					
ANR	427053	ArgumentList	op -> mnemonic		426516	1					
ANR	427054	Argument	op -> mnemonic		426516	0					
ANR	427055	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427056	Identifier	op		426516	0					
ANR	427057	Identifier	mnemonic		426516	1					
ANR	427058	Argument	"""jnc"""		426516	1					
ANR	427059	PrimaryExpression	"""jnc"""		426516	0					
ANR	427060	CompoundStatement		73:50:2024:2024	426516	1					
ANR	427061	ExpressionStatement	data [ l ++ ] = 0x83	1605:2:41740:41756	426516	0	True				
ANR	427062	AssignmentExpression	data [ l ++ ] = 0x83		426516	0		=			
ANR	427063	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427064	Identifier	data		426516	0					
ANR	427065	PostIncDecOperationExpression	l ++		426516	1					
ANR	427066	Identifier	l		426516	0					
ANR	427067	IncDec	++		426516	1					
ANR	427068	PrimaryExpression	0x83		426516	1					
ANR	427069	ElseStatement	else		426516	0					
ANR	427070	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jz"" ) || ! strcmp ( op -> mnemonic , ""je"" ) )"		426516	0					
ANR	427071	Condition	"! strcmp ( op -> mnemonic , ""jz"" ) || ! strcmp ( op -> mnemonic , ""je"" )"	1606:12:41770:41848	426516	0	True				
ANR	427072	OrExpression	"! strcmp ( op -> mnemonic , ""jz"" ) || ! strcmp ( op -> mnemonic , ""je"" )"		426516	0		||			
ANR	427073	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jz"" )"		426516	0					
ANR	427074	UnaryOperator	!		426516	0					
ANR	427075	CallExpression	"strcmp ( op -> mnemonic , ""jz"" )"		426516	1					
ANR	427076	Callee	strcmp		426516	0					
ANR	427077	Identifier	strcmp		426516	0					
ANR	427078	ArgumentList	op -> mnemonic		426516	1					
ANR	427079	Argument	op -> mnemonic		426516	0					
ANR	427080	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427081	Identifier	op		426516	0					
ANR	427082	Identifier	mnemonic		426516	1					
ANR	427083	Argument	"""jz"""		426516	1					
ANR	427084	PrimaryExpression	"""jz"""		426516	0					
ANR	427085	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""je"" )"		426516	1					
ANR	427086	UnaryOperator	!		426516	0					
ANR	427087	CallExpression	"strcmp ( op -> mnemonic , ""je"" )"		426516	1					
ANR	427088	Callee	strcmp		426516	0					
ANR	427089	Identifier	strcmp		426516	0					
ANR	427090	ArgumentList	op -> mnemonic		426516	1					
ANR	427091	Argument	op -> mnemonic		426516	0					
ANR	427092	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427093	Identifier	op		426516	0					
ANR	427094	Identifier	mnemonic		426516	1					
ANR	427095	Argument	"""je"""		426516	1					
ANR	427096	PrimaryExpression	"""je"""		426516	0					
ANR	427097	CompoundStatement		76:49:2139:2139	426516	1					
ANR	427098	ExpressionStatement	data [ l ++ ] = 0x84	1608:2:41855:41871	426516	0	True				
ANR	427099	AssignmentExpression	data [ l ++ ] = 0x84		426516	0		=			
ANR	427100	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427101	Identifier	data		426516	0					
ANR	427102	PostIncDecOperationExpression	l ++		426516	1					
ANR	427103	Identifier	l		426516	0					
ANR	427104	IncDec	++		426516	1					
ANR	427105	PrimaryExpression	0x84		426516	1					
ANR	427106	ElseStatement	else		426516	0					
ANR	427107	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jb"" ) || ! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" ) )"		426516	0					
ANR	427108	Condition	"! strcmp ( op -> mnemonic , ""jb"" ) || ! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" )"	1609:12:41885:42016	426516	0	True				
ANR	427109	OrExpression	"! strcmp ( op -> mnemonic , ""jb"" ) || ! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" )"		426516	0		||			
ANR	427110	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jb"" )"		426516	0					
ANR	427111	UnaryOperator	!		426516	0					
ANR	427112	CallExpression	"strcmp ( op -> mnemonic , ""jb"" )"		426516	1					
ANR	427113	Callee	strcmp		426516	0					
ANR	427114	Identifier	strcmp		426516	0					
ANR	427115	ArgumentList	op -> mnemonic		426516	1					
ANR	427116	Argument	op -> mnemonic		426516	0					
ANR	427117	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427118	Identifier	op		426516	0					
ANR	427119	Identifier	mnemonic		426516	1					
ANR	427120	Argument	"""jb"""		426516	1					
ANR	427121	PrimaryExpression	"""jb"""		426516	0					
ANR	427122	OrExpression	"! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" )"		426516	1		||			
ANR	427123	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnae"" )"		426516	0					
ANR	427124	UnaryOperator	!		426516	0					
ANR	427125	CallExpression	"strcmp ( op -> mnemonic , ""jnae"" )"		426516	1					
ANR	427126	Callee	strcmp		426516	0					
ANR	427127	Identifier	strcmp		426516	0					
ANR	427128	ArgumentList	op -> mnemonic		426516	1					
ANR	427129	Argument	op -> mnemonic		426516	0					
ANR	427130	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427131	Identifier	op		426516	0					
ANR	427132	Identifier	mnemonic		426516	1					
ANR	427133	Argument	"""jnae"""		426516	1					
ANR	427134	PrimaryExpression	"""jnae"""		426516	0					
ANR	427135	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jc"" )"		426516	1					
ANR	427136	UnaryOperator	!		426516	0					
ANR	427137	CallExpression	"strcmp ( op -> mnemonic , ""jc"" )"		426516	1					
ANR	427138	Callee	strcmp		426516	0					
ANR	427139	Identifier	strcmp		426516	0					
ANR	427140	ArgumentList	op -> mnemonic		426516	1					
ANR	427141	Argument	op -> mnemonic		426516	0					
ANR	427142	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427143	Identifier	op		426516	0					
ANR	427144	Identifier	mnemonic		426516	1					
ANR	427145	Argument	"""jc"""		426516	1					
ANR	427146	PrimaryExpression	"""jc"""		426516	0					
ANR	427147	CompoundStatement		80:49:2307:2307	426516	1					
ANR	427148	ExpressionStatement	data [ l ++ ] = 0x82	1612:2:42023:42039	426516	0	True				
ANR	427149	AssignmentExpression	data [ l ++ ] = 0x82		426516	0		=			
ANR	427150	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427151	Identifier	data		426516	0					
ANR	427152	PostIncDecOperationExpression	l ++		426516	1					
ANR	427153	Identifier	l		426516	0					
ANR	427154	IncDec	++		426516	1					
ANR	427155	PrimaryExpression	0x82		426516	1					
ANR	427156	ElseStatement	else		426516	0					
ANR	427157	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jbe"" ) || ! strcmp ( op -> mnemonic , ""jna"" ) )"		426516	0					
ANR	427158	Condition	"! strcmp ( op -> mnemonic , ""jbe"" ) || ! strcmp ( op -> mnemonic , ""jna"" )"	1613:12:42053:42133	426516	0	True				
ANR	427159	OrExpression	"! strcmp ( op -> mnemonic , ""jbe"" ) || ! strcmp ( op -> mnemonic , ""jna"" )"		426516	0		||			
ANR	427160	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jbe"" )"		426516	0					
ANR	427161	UnaryOperator	!		426516	0					
ANR	427162	CallExpression	"strcmp ( op -> mnemonic , ""jbe"" )"		426516	1					
ANR	427163	Callee	strcmp		426516	0					
ANR	427164	Identifier	strcmp		426516	0					
ANR	427165	ArgumentList	op -> mnemonic		426516	1					
ANR	427166	Argument	op -> mnemonic		426516	0					
ANR	427167	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427168	Identifier	op		426516	0					
ANR	427169	Identifier	mnemonic		426516	1					
ANR	427170	Argument	"""jbe"""		426516	1					
ANR	427171	PrimaryExpression	"""jbe"""		426516	0					
ANR	427172	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jna"" )"		426516	1					
ANR	427173	UnaryOperator	!		426516	0					
ANR	427174	CallExpression	"strcmp ( op -> mnemonic , ""jna"" )"		426516	1					
ANR	427175	Callee	strcmp		426516	0					
ANR	427176	Identifier	strcmp		426516	0					
ANR	427177	ArgumentList	op -> mnemonic		426516	1					
ANR	427178	Argument	op -> mnemonic		426516	0					
ANR	427179	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427180	Identifier	op		426516	0					
ANR	427181	Identifier	mnemonic		426516	1					
ANR	427182	Argument	"""jna"""		426516	1					
ANR	427183	PrimaryExpression	"""jna"""		426516	0					
ANR	427184	CompoundStatement		83:50:2424:2424	426516	1					
ANR	427185	ExpressionStatement	data [ l ++ ] = 0x86	1615:2:42140:42156	426516	0	True				
ANR	427186	AssignmentExpression	data [ l ++ ] = 0x86		426516	0		=			
ANR	427187	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427188	Identifier	data		426516	0					
ANR	427189	PostIncDecOperationExpression	l ++		426516	1					
ANR	427190	Identifier	l		426516	0					
ANR	427191	IncDec	++		426516	1					
ANR	427192	PrimaryExpression	0x86		426516	1					
ANR	427193	ElseStatement	else		426516	0					
ANR	427194	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jg"" ) || ! strcmp ( op -> mnemonic , ""jnle"" ) )"		426516	0					
ANR	427195	Condition	"! strcmp ( op -> mnemonic , ""jg"" ) || ! strcmp ( op -> mnemonic , ""jnle"" )"	1616:12:42170:42250	426516	0	True				
ANR	427196	OrExpression	"! strcmp ( op -> mnemonic , ""jg"" ) || ! strcmp ( op -> mnemonic , ""jnle"" )"		426516	0		||			
ANR	427197	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jg"" )"		426516	0					
ANR	427198	UnaryOperator	!		426516	0					
ANR	427199	CallExpression	"strcmp ( op -> mnemonic , ""jg"" )"		426516	1					
ANR	427200	Callee	strcmp		426516	0					
ANR	427201	Identifier	strcmp		426516	0					
ANR	427202	ArgumentList	op -> mnemonic		426516	1					
ANR	427203	Argument	op -> mnemonic		426516	0					
ANR	427204	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427205	Identifier	op		426516	0					
ANR	427206	Identifier	mnemonic		426516	1					
ANR	427207	Argument	"""jg"""		426516	1					
ANR	427208	PrimaryExpression	"""jg"""		426516	0					
ANR	427209	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnle"" )"		426516	1					
ANR	427210	UnaryOperator	!		426516	0					
ANR	427211	CallExpression	"strcmp ( op -> mnemonic , ""jnle"" )"		426516	1					
ANR	427212	Callee	strcmp		426516	0					
ANR	427213	Identifier	strcmp		426516	0					
ANR	427214	ArgumentList	op -> mnemonic		426516	1					
ANR	427215	Argument	op -> mnemonic		426516	0					
ANR	427216	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427217	Identifier	op		426516	0					
ANR	427218	Identifier	mnemonic		426516	1					
ANR	427219	Argument	"""jnle"""		426516	1					
ANR	427220	PrimaryExpression	"""jnle"""		426516	0					
ANR	427221	CompoundStatement		86:51:2541:2541	426516	1					
ANR	427222	ExpressionStatement	data [ l ++ ] = 0x8f	1618:2:42257:42273	426516	0	True				
ANR	427223	AssignmentExpression	data [ l ++ ] = 0x8f		426516	0		=			
ANR	427224	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427225	Identifier	data		426516	0					
ANR	427226	PostIncDecOperationExpression	l ++		426516	1					
ANR	427227	Identifier	l		426516	0					
ANR	427228	IncDec	++		426516	1					
ANR	427229	PrimaryExpression	0x8f		426516	1					
ANR	427230	ElseStatement	else		426516	0					
ANR	427231	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jge"" ) || ! strcmp ( op -> mnemonic , ""jnl"" ) )"		426516	0					
ANR	427232	Condition	"! strcmp ( op -> mnemonic , ""jge"" ) || ! strcmp ( op -> mnemonic , ""jnl"" )"	1619:12:42287:42367	426516	0	True				
ANR	427233	OrExpression	"! strcmp ( op -> mnemonic , ""jge"" ) || ! strcmp ( op -> mnemonic , ""jnl"" )"		426516	0		||			
ANR	427234	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jge"" )"		426516	0					
ANR	427235	UnaryOperator	!		426516	0					
ANR	427236	CallExpression	"strcmp ( op -> mnemonic , ""jge"" )"		426516	1					
ANR	427237	Callee	strcmp		426516	0					
ANR	427238	Identifier	strcmp		426516	0					
ANR	427239	ArgumentList	op -> mnemonic		426516	1					
ANR	427240	Argument	op -> mnemonic		426516	0					
ANR	427241	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427242	Identifier	op		426516	0					
ANR	427243	Identifier	mnemonic		426516	1					
ANR	427244	Argument	"""jge"""		426516	1					
ANR	427245	PrimaryExpression	"""jge"""		426516	0					
ANR	427246	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnl"" )"		426516	1					
ANR	427247	UnaryOperator	!		426516	0					
ANR	427248	CallExpression	"strcmp ( op -> mnemonic , ""jnl"" )"		426516	1					
ANR	427249	Callee	strcmp		426516	0					
ANR	427250	Identifier	strcmp		426516	0					
ANR	427251	ArgumentList	op -> mnemonic		426516	1					
ANR	427252	Argument	op -> mnemonic		426516	0					
ANR	427253	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427254	Identifier	op		426516	0					
ANR	427255	Identifier	mnemonic		426516	1					
ANR	427256	Argument	"""jnl"""		426516	1					
ANR	427257	PrimaryExpression	"""jnl"""		426516	0					
ANR	427258	CompoundStatement		89:50:2658:2658	426516	1					
ANR	427259	ExpressionStatement	data [ l ++ ] = 0x8d	1621:2:42374:42390	426516	0	True				
ANR	427260	AssignmentExpression	data [ l ++ ] = 0x8d		426516	0		=			
ANR	427261	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427262	Identifier	data		426516	0					
ANR	427263	PostIncDecOperationExpression	l ++		426516	1					
ANR	427264	Identifier	l		426516	0					
ANR	427265	IncDec	++		426516	1					
ANR	427266	PrimaryExpression	0x8d		426516	1					
ANR	427267	ElseStatement	else		426516	0					
ANR	427268	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jl"" ) || ! strcmp ( op -> mnemonic , ""jnge"" ) )"		426516	0					
ANR	427269	Condition	"! strcmp ( op -> mnemonic , ""jl"" ) || ! strcmp ( op -> mnemonic , ""jnge"" )"	1622:12:42404:42484	426516	0	True				
ANR	427270	OrExpression	"! strcmp ( op -> mnemonic , ""jl"" ) || ! strcmp ( op -> mnemonic , ""jnge"" )"		426516	0		||			
ANR	427271	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jl"" )"		426516	0					
ANR	427272	UnaryOperator	!		426516	0					
ANR	427273	CallExpression	"strcmp ( op -> mnemonic , ""jl"" )"		426516	1					
ANR	427274	Callee	strcmp		426516	0					
ANR	427275	Identifier	strcmp		426516	0					
ANR	427276	ArgumentList	op -> mnemonic		426516	1					
ANR	427277	Argument	op -> mnemonic		426516	0					
ANR	427278	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427279	Identifier	op		426516	0					
ANR	427280	Identifier	mnemonic		426516	1					
ANR	427281	Argument	"""jl"""		426516	1					
ANR	427282	PrimaryExpression	"""jl"""		426516	0					
ANR	427283	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnge"" )"		426516	1					
ANR	427284	UnaryOperator	!		426516	0					
ANR	427285	CallExpression	"strcmp ( op -> mnemonic , ""jnge"" )"		426516	1					
ANR	427286	Callee	strcmp		426516	0					
ANR	427287	Identifier	strcmp		426516	0					
ANR	427288	ArgumentList	op -> mnemonic		426516	1					
ANR	427289	Argument	op -> mnemonic		426516	0					
ANR	427290	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427291	Identifier	op		426516	0					
ANR	427292	Identifier	mnemonic		426516	1					
ANR	427293	Argument	"""jnge"""		426516	1					
ANR	427294	PrimaryExpression	"""jnge"""		426516	0					
ANR	427295	CompoundStatement		92:51:2775:2775	426516	1					
ANR	427296	ExpressionStatement	data [ l ++ ] = 0x8c	1624:2:42491:42507	426516	0	True				
ANR	427297	AssignmentExpression	data [ l ++ ] = 0x8c		426516	0		=			
ANR	427298	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427299	Identifier	data		426516	0					
ANR	427300	PostIncDecOperationExpression	l ++		426516	1					
ANR	427301	Identifier	l		426516	0					
ANR	427302	IncDec	++		426516	1					
ANR	427303	PrimaryExpression	0x8c		426516	1					
ANR	427304	ElseStatement	else		426516	0					
ANR	427305	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jle"" ) || ! strcmp ( op -> mnemonic , ""jng"" ) )"		426516	0					
ANR	427306	Condition	"! strcmp ( op -> mnemonic , ""jle"" ) || ! strcmp ( op -> mnemonic , ""jng"" )"	1625:12:42521:42594	426516	0	True				
ANR	427307	OrExpression	"! strcmp ( op -> mnemonic , ""jle"" ) || ! strcmp ( op -> mnemonic , ""jng"" )"		426516	0		||			
ANR	427308	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jle"" )"		426516	0					
ANR	427309	UnaryOperator	!		426516	0					
ANR	427310	CallExpression	"strcmp ( op -> mnemonic , ""jle"" )"		426516	1					
ANR	427311	Callee	strcmp		426516	0					
ANR	427312	Identifier	strcmp		426516	0					
ANR	427313	ArgumentList	op -> mnemonic		426516	1					
ANR	427314	Argument	op -> mnemonic		426516	0					
ANR	427315	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427316	Identifier	op		426516	0					
ANR	427317	Identifier	mnemonic		426516	1					
ANR	427318	Argument	"""jle"""		426516	1					
ANR	427319	PrimaryExpression	"""jle"""		426516	0					
ANR	427320	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jng"" )"		426516	1					
ANR	427321	UnaryOperator	!		426516	0					
ANR	427322	CallExpression	"strcmp ( op -> mnemonic , ""jng"" )"		426516	1					
ANR	427323	Callee	strcmp		426516	0					
ANR	427324	Identifier	strcmp		426516	0					
ANR	427325	ArgumentList	op -> mnemonic		426516	1					
ANR	427326	Argument	op -> mnemonic		426516	0					
ANR	427327	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427328	Identifier	op		426516	0					
ANR	427329	Identifier	mnemonic		426516	1					
ANR	427330	Argument	"""jng"""		426516	1					
ANR	427331	PrimaryExpression	"""jng"""		426516	0					
ANR	427332	CompoundStatement		95:43:2885:2885	426516	1					
ANR	427333	ExpressionStatement	data [ l ++ ] = 0x8e	1627:2:42601:42617	426516	0	True				
ANR	427334	AssignmentExpression	data [ l ++ ] = 0x8e		426516	0		=			
ANR	427335	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427336	Identifier	data		426516	0					
ANR	427337	PostIncDecOperationExpression	l ++		426516	1					
ANR	427338	Identifier	l		426516	0					
ANR	427339	IncDec	++		426516	1					
ANR	427340	PrimaryExpression	0x8e		426516	1					
ANR	427341	ElseStatement	else		426516	0					
ANR	427342	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jne"" ) || ! strcmp ( op -> mnemonic , ""jnz"" ) )"		426516	0					
ANR	427343	Condition	"! strcmp ( op -> mnemonic , ""jne"" ) || ! strcmp ( op -> mnemonic , ""jnz"" )"	1628:12:42631:42711	426516	0	True				
ANR	427344	OrExpression	"! strcmp ( op -> mnemonic , ""jne"" ) || ! strcmp ( op -> mnemonic , ""jnz"" )"		426516	0		||			
ANR	427345	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jne"" )"		426516	0					
ANR	427346	UnaryOperator	!		426516	0					
ANR	427347	CallExpression	"strcmp ( op -> mnemonic , ""jne"" )"		426516	1					
ANR	427348	Callee	strcmp		426516	0					
ANR	427349	Identifier	strcmp		426516	0					
ANR	427350	ArgumentList	op -> mnemonic		426516	1					
ANR	427351	Argument	op -> mnemonic		426516	0					
ANR	427352	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427353	Identifier	op		426516	0					
ANR	427354	Identifier	mnemonic		426516	1					
ANR	427355	Argument	"""jne"""		426516	1					
ANR	427356	PrimaryExpression	"""jne"""		426516	0					
ANR	427357	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnz"" )"		426516	1					
ANR	427358	UnaryOperator	!		426516	0					
ANR	427359	CallExpression	"strcmp ( op -> mnemonic , ""jnz"" )"		426516	1					
ANR	427360	Callee	strcmp		426516	0					
ANR	427361	Identifier	strcmp		426516	0					
ANR	427362	ArgumentList	op -> mnemonic		426516	1					
ANR	427363	Argument	op -> mnemonic		426516	0					
ANR	427364	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427365	Identifier	op		426516	0					
ANR	427366	Identifier	mnemonic		426516	1					
ANR	427367	Argument	"""jnz"""		426516	1					
ANR	427368	PrimaryExpression	"""jnz"""		426516	0					
ANR	427369	CompoundStatement		98:50:3002:3002	426516	1					
ANR	427370	ExpressionStatement	data [ l ++ ] = 0x85	1630:2:42718:42734	426516	0	True				
ANR	427371	AssignmentExpression	data [ l ++ ] = 0x85		426516	0		=			
ANR	427372	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427373	Identifier	data		426516	0					
ANR	427374	PostIncDecOperationExpression	l ++		426516	1					
ANR	427375	Identifier	l		426516	0					
ANR	427376	IncDec	++		426516	1					
ANR	427377	PrimaryExpression	0x85		426516	1					
ANR	427378	ElseStatement	else		426516	0					
ANR	427379	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jno"" ) )"		426516	0					
ANR	427380	Condition	"! strcmp ( op -> mnemonic , ""jno"" )"	1631:12:42748:42776	426516	0	True				
ANR	427381	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jno"" )"		426516	0					
ANR	427382	UnaryOperator	!		426516	0					
ANR	427383	CallExpression	"strcmp ( op -> mnemonic , ""jno"" )"		426516	1					
ANR	427384	Callee	strcmp		426516	0					
ANR	427385	Identifier	strcmp		426516	0					
ANR	427386	ArgumentList	op -> mnemonic		426516	1					
ANR	427387	Argument	op -> mnemonic		426516	0					
ANR	427388	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427389	Identifier	op		426516	0					
ANR	427390	Identifier	mnemonic		426516	1					
ANR	427391	Argument	"""jno"""		426516	1					
ANR	427392	PrimaryExpression	"""jno"""		426516	0					
ANR	427393	CompoundStatement		100:43:3067:3067	426516	1					
ANR	427394	ExpressionStatement	data [ l ++ ] = 0x81	1632:2:42783:42799	426516	0	True				
ANR	427395	AssignmentExpression	data [ l ++ ] = 0x81		426516	0		=			
ANR	427396	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427397	Identifier	data		426516	0					
ANR	427398	PostIncDecOperationExpression	l ++		426516	1					
ANR	427399	Identifier	l		426516	0					
ANR	427400	IncDec	++		426516	1					
ANR	427401	PrimaryExpression	0x81		426516	1					
ANR	427402	ElseStatement	else		426516	0					
ANR	427403	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jnp"" ) || ! strcmp ( op -> mnemonic , ""jpo"" ) )"		426516	0					
ANR	427404	Condition	"! strcmp ( op -> mnemonic , ""jnp"" ) || ! strcmp ( op -> mnemonic , ""jpo"" )"	1633:12:42813:42893	426516	0	True				
ANR	427405	OrExpression	"! strcmp ( op -> mnemonic , ""jnp"" ) || ! strcmp ( op -> mnemonic , ""jpo"" )"		426516	0		||			
ANR	427406	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnp"" )"		426516	0					
ANR	427407	UnaryOperator	!		426516	0					
ANR	427408	CallExpression	"strcmp ( op -> mnemonic , ""jnp"" )"		426516	1					
ANR	427409	Callee	strcmp		426516	0					
ANR	427410	Identifier	strcmp		426516	0					
ANR	427411	ArgumentList	op -> mnemonic		426516	1					
ANR	427412	Argument	op -> mnemonic		426516	0					
ANR	427413	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427414	Identifier	op		426516	0					
ANR	427415	Identifier	mnemonic		426516	1					
ANR	427416	Argument	"""jnp"""		426516	1					
ANR	427417	PrimaryExpression	"""jnp"""		426516	0					
ANR	427418	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jpo"" )"		426516	1					
ANR	427419	UnaryOperator	!		426516	0					
ANR	427420	CallExpression	"strcmp ( op -> mnemonic , ""jpo"" )"		426516	1					
ANR	427421	Callee	strcmp		426516	0					
ANR	427422	Identifier	strcmp		426516	0					
ANR	427423	ArgumentList	op -> mnemonic		426516	1					
ANR	427424	Argument	op -> mnemonic		426516	0					
ANR	427425	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427426	Identifier	op		426516	0					
ANR	427427	Identifier	mnemonic		426516	1					
ANR	427428	Argument	"""jpo"""		426516	1					
ANR	427429	PrimaryExpression	"""jpo"""		426516	0					
ANR	427430	CompoundStatement		103:50:3184:3184	426516	1					
ANR	427431	ExpressionStatement	data [ l ++ ] = 0x8b	1635:2:42900:42916	426516	0	True				
ANR	427432	AssignmentExpression	data [ l ++ ] = 0x8b		426516	0		=			
ANR	427433	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427434	Identifier	data		426516	0					
ANR	427435	PostIncDecOperationExpression	l ++		426516	1					
ANR	427436	Identifier	l		426516	0					
ANR	427437	IncDec	++		426516	1					
ANR	427438	PrimaryExpression	0x8b		426516	1					
ANR	427439	ElseStatement	else		426516	0					
ANR	427440	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jns"" ) )"		426516	0					
ANR	427441	Condition	"! strcmp ( op -> mnemonic , ""jns"" )"	1636:12:42930:42958	426516	0	True				
ANR	427442	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jns"" )"		426516	0					
ANR	427443	UnaryOperator	!		426516	0					
ANR	427444	CallExpression	"strcmp ( op -> mnemonic , ""jns"" )"		426516	1					
ANR	427445	Callee	strcmp		426516	0					
ANR	427446	Identifier	strcmp		426516	0					
ANR	427447	ArgumentList	op -> mnemonic		426516	1					
ANR	427448	Argument	op -> mnemonic		426516	0					
ANR	427449	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427450	Identifier	op		426516	0					
ANR	427451	Identifier	mnemonic		426516	1					
ANR	427452	Argument	"""jns"""		426516	1					
ANR	427453	PrimaryExpression	"""jns"""		426516	0					
ANR	427454	CompoundStatement		105:43:3249:3249	426516	1					
ANR	427455	ExpressionStatement	data [ l ++ ] = 0x89	1637:2:42965:42981	426516	0	True				
ANR	427456	AssignmentExpression	data [ l ++ ] = 0x89		426516	0		=			
ANR	427457	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427458	Identifier	data		426516	0					
ANR	427459	PostIncDecOperationExpression	l ++		426516	1					
ANR	427460	Identifier	l		426516	0					
ANR	427461	IncDec	++		426516	1					
ANR	427462	PrimaryExpression	0x89		426516	1					
ANR	427463	ElseStatement	else		426516	0					
ANR	427464	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jo"" ) )"		426516	0					
ANR	427465	Condition	"! strcmp ( op -> mnemonic , ""jo"" )"	1638:12:42995:43022	426516	0	True				
ANR	427466	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jo"" )"		426516	0					
ANR	427467	UnaryOperator	!		426516	0					
ANR	427468	CallExpression	"strcmp ( op -> mnemonic , ""jo"" )"		426516	1					
ANR	427469	Callee	strcmp		426516	0					
ANR	427470	Identifier	strcmp		426516	0					
ANR	427471	ArgumentList	op -> mnemonic		426516	1					
ANR	427472	Argument	op -> mnemonic		426516	0					
ANR	427473	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427474	Identifier	op		426516	0					
ANR	427475	Identifier	mnemonic		426516	1					
ANR	427476	Argument	"""jo"""		426516	1					
ANR	427477	PrimaryExpression	"""jo"""		426516	0					
ANR	427478	CompoundStatement		107:42:3313:3313	426516	1					
ANR	427479	ExpressionStatement	data [ l ++ ] = 0x80	1639:2:43029:43045	426516	0	True				
ANR	427480	AssignmentExpression	data [ l ++ ] = 0x80		426516	0		=			
ANR	427481	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427482	Identifier	data		426516	0					
ANR	427483	PostIncDecOperationExpression	l ++		426516	1					
ANR	427484	Identifier	l		426516	0					
ANR	427485	IncDec	++		426516	1					
ANR	427486	PrimaryExpression	0x80		426516	1					
ANR	427487	ElseStatement	else		426516	0					
ANR	427488	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jp"" ) || ! strcmp ( op -> mnemonic , ""jpe"" ) )"		426516	0					
ANR	427489	Condition	"! strcmp ( op -> mnemonic , ""jp"" ) || ! strcmp ( op -> mnemonic , ""jpe"" )"	1640:12:43059:43137	426516	0	True				
ANR	427490	OrExpression	"! strcmp ( op -> mnemonic , ""jp"" ) || ! strcmp ( op -> mnemonic , ""jpe"" )"		426516	0		||			
ANR	427491	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jp"" )"		426516	0					
ANR	427492	UnaryOperator	!		426516	0					
ANR	427493	CallExpression	"strcmp ( op -> mnemonic , ""jp"" )"		426516	1					
ANR	427494	Callee	strcmp		426516	0					
ANR	427495	Identifier	strcmp		426516	0					
ANR	427496	ArgumentList	op -> mnemonic		426516	1					
ANR	427497	Argument	op -> mnemonic		426516	0					
ANR	427498	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427499	Identifier	op		426516	0					
ANR	427500	Identifier	mnemonic		426516	1					
ANR	427501	Argument	"""jp"""		426516	1					
ANR	427502	PrimaryExpression	"""jp"""		426516	0					
ANR	427503	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jpe"" )"		426516	1					
ANR	427504	UnaryOperator	!		426516	0					
ANR	427505	CallExpression	"strcmp ( op -> mnemonic , ""jpe"" )"		426516	1					
ANR	427506	Callee	strcmp		426516	0					
ANR	427507	Identifier	strcmp		426516	0					
ANR	427508	ArgumentList	op -> mnemonic		426516	1					
ANR	427509	Argument	op -> mnemonic		426516	0					
ANR	427510	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427511	Identifier	op		426516	0					
ANR	427512	Identifier	mnemonic		426516	1					
ANR	427513	Argument	"""jpe"""		426516	1					
ANR	427514	PrimaryExpression	"""jpe"""		426516	0					
ANR	427515	CompoundStatement		110:49:3428:3428	426516	1					
ANR	427516	ExpressionStatement	data [ l ++ ] = 0x8a	1642:2:43144:43160	426516	0	True				
ANR	427517	AssignmentExpression	data [ l ++ ] = 0x8a		426516	0		=			
ANR	427518	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427519	Identifier	data		426516	0					
ANR	427520	PostIncDecOperationExpression	l ++		426516	1					
ANR	427521	Identifier	l		426516	0					
ANR	427522	IncDec	++		426516	1					
ANR	427523	PrimaryExpression	0x8a		426516	1					
ANR	427524	ElseStatement	else		426516	0					
ANR	427525	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""js"" ) || ! strcmp ( op -> mnemonic , ""jz"" ) )"		426516	0					
ANR	427526	Condition	"! strcmp ( op -> mnemonic , ""js"" ) || ! strcmp ( op -> mnemonic , ""jz"" )"	1643:12:43174:43252	426516	0	True				
ANR	427527	OrExpression	"! strcmp ( op -> mnemonic , ""js"" ) || ! strcmp ( op -> mnemonic , ""jz"" )"		426516	0		||			
ANR	427528	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""js"" )"		426516	0					
ANR	427529	UnaryOperator	!		426516	0					
ANR	427530	CallExpression	"strcmp ( op -> mnemonic , ""js"" )"		426516	1					
ANR	427531	Callee	strcmp		426516	0					
ANR	427532	Identifier	strcmp		426516	0					
ANR	427533	ArgumentList	op -> mnemonic		426516	1					
ANR	427534	Argument	op -> mnemonic		426516	0					
ANR	427535	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427536	Identifier	op		426516	0					
ANR	427537	Identifier	mnemonic		426516	1					
ANR	427538	Argument	"""js"""		426516	1					
ANR	427539	PrimaryExpression	"""js"""		426516	0					
ANR	427540	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jz"" )"		426516	1					
ANR	427541	UnaryOperator	!		426516	0					
ANR	427542	CallExpression	"strcmp ( op -> mnemonic , ""jz"" )"		426516	1					
ANR	427543	Callee	strcmp		426516	0					
ANR	427544	Identifier	strcmp		426516	0					
ANR	427545	ArgumentList	op -> mnemonic		426516	1					
ANR	427546	Argument	op -> mnemonic		426516	0					
ANR	427547	PtrMemberAccess	op -> mnemonic		426516	0					
ANR	427548	Identifier	op		426516	0					
ANR	427549	Identifier	mnemonic		426516	1					
ANR	427550	Argument	"""jz"""		426516	1					
ANR	427551	PrimaryExpression	"""jz"""		426516	0					
ANR	427552	CompoundStatement		113:49:3543:3543	426516	1					
ANR	427553	ExpressionStatement	data [ l ++ ] = 0x88	1645:2:43259:43275	426516	0	True				
ANR	427554	AssignmentExpression	data [ l ++ ] = 0x88		426516	0		=			
ANR	427555	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427556	Identifier	data		426516	0					
ANR	427557	PostIncDecOperationExpression	l ++		426516	1					
ANR	427558	Identifier	l		426516	0					
ANR	427559	IncDec	++		426516	1					
ANR	427560	PrimaryExpression	0x88		426516	1					
ANR	427561	IfStatement	if ( is_short )		426516	12					
ANR	427562	Condition	is_short	1647:5:43285:43292	426516	0	True				
ANR	427563	Identifier	is_short		426516	0					
ANR	427564	CompoundStatement		116:15:3583:3583	426516	1					
ANR	427565	ExpressionStatement	data [ l - 1 ] -= 0x10	1648:2:43299:43316	426516	0	True				
ANR	427566	AssignmentExpression	data [ l - 1 ] -= 0x10		426516	0		-=			
ANR	427567	ArrayIndexing	data [ l - 1 ]		426516	0					
ANR	427568	Identifier	data		426516	0					
ANR	427569	AdditiveExpression	l - 1		426516	1		-			
ANR	427570	Identifier	l		426516	0					
ANR	427571	PrimaryExpression	1		426516	1					
ANR	427572	PrimaryExpression	0x10		426516	1					
ANR	427573	ExpressionStatement	immediate -= is_short ? 2 : 6	1651:1:43323:43352	426516	13	True				
ANR	427574	AssignmentExpression	immediate -= is_short ? 2 : 6		426516	0		-=			
ANR	427575	Identifier	immediate		426516	0					
ANR	427576	ConditionalExpression	is_short ? 2 : 6		426516	1					
ANR	427577	Condition	is_short		426516	0					
ANR	427578	Identifier	is_short		426516	0					
ANR	427579	PrimaryExpression	2		426516	1					
ANR	427580	PrimaryExpression	6		426516	2					
ANR	427581	ExpressionStatement	data [ l ++ ] = immediate	1652:1:43355:43376	426516	14	True				
ANR	427582	AssignmentExpression	data [ l ++ ] = immediate		426516	0		=			
ANR	427583	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427584	Identifier	data		426516	0					
ANR	427585	PostIncDecOperationExpression	l ++		426516	1					
ANR	427586	Identifier	l		426516	0					
ANR	427587	IncDec	++		426516	1					
ANR	427588	Identifier	immediate		426516	1					
ANR	427589	IfStatement	if ( ! is_short )		426516	15					
ANR	427590	Condition	! is_short	1653:5:43383:43391	426516	0	True				
ANR	427591	UnaryOperationExpression	! is_short		426516	0					
ANR	427592	UnaryOperator	!		426516	0					
ANR	427593	Identifier	is_short		426516	1					
ANR	427594	CompoundStatement		122:16:3682:3682	426516	1					
ANR	427595	ExpressionStatement	data [ l ++ ] = immediate >> 8	1654:2:43398:43424	426516	0	True				
ANR	427596	AssignmentExpression	data [ l ++ ] = immediate >> 8		426516	0		=			
ANR	427597	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427598	Identifier	data		426516	0					
ANR	427599	PostIncDecOperationExpression	l ++		426516	1					
ANR	427600	Identifier	l		426516	0					
ANR	427601	IncDec	++		426516	1					
ANR	427602	ShiftExpression	immediate >> 8		426516	1		>>			
ANR	427603	Identifier	immediate		426516	0					
ANR	427604	PrimaryExpression	8		426516	1					
ANR	427605	ExpressionStatement	data [ l ++ ] = immediate >> 16	1655:2:43428:43455	426516	1	True				
ANR	427606	AssignmentExpression	data [ l ++ ] = immediate >> 16		426516	0		=			
ANR	427607	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427608	Identifier	data		426516	0					
ANR	427609	PostIncDecOperationExpression	l ++		426516	1					
ANR	427610	Identifier	l		426516	0					
ANR	427611	IncDec	++		426516	1					
ANR	427612	ShiftExpression	immediate >> 16		426516	1		>>			
ANR	427613	Identifier	immediate		426516	0					
ANR	427614	PrimaryExpression	16		426516	1					
ANR	427615	ExpressionStatement	data [ l ++ ] = immediate >> 24	1656:2:43459:43486	426516	2	True				
ANR	427616	AssignmentExpression	data [ l ++ ] = immediate >> 24		426516	0		=			
ANR	427617	ArrayIndexing	data [ l ++ ]		426516	0					
ANR	427618	Identifier	data		426516	0					
ANR	427619	PostIncDecOperationExpression	l ++		426516	1					
ANR	427620	Identifier	l		426516	0					
ANR	427621	IncDec	++		426516	1					
ANR	427622	ShiftExpression	immediate >> 24		426516	1		>>			
ANR	427623	Identifier	immediate		426516	0					
ANR	427624	PrimaryExpression	24		426516	1					
ANR	427625	ReturnStatement	return l ;	1658:1:43492:43500	426516	16	True				
ANR	427626	Identifier	l		426516	0					
ANR	427627	ReturnType	static int		426516	1					
ANR	427628	Identifier	opjc		426516	2					
ANR	427629	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		426516	3					
ANR	427630	Parameter	RAsm * a	1532:16:39673:39679	426516	0	True				
ANR	427631	ParameterType	RAsm *		426516	0					
ANR	427632	Identifier	a		426516	1					
ANR	427633	Parameter	ut8 * data	1532:25:39682:39690	426516	1	True				
ANR	427634	ParameterType	ut8 *		426516	0					
ANR	427635	Identifier	data		426516	1					
ANR	427636	Parameter	const Opcode * op	1532:36:39693:39708	426516	2	True				
ANR	427637	ParameterType	const Opcode *		426516	0					
ANR	427638	Identifier	op		426516	1					
ANR	427639	CFGEntryNode	ENTRY		426516		True				
ANR	427640	CFGExitNode	EXIT		426516		True				
ANR	427641	Symbol	op -> operands [ 0 ] . offset_sign		426516						
ANR	427642	Symbol	ST8_MAX		426516						
ANR	427643	Symbol	data		426516						
ANR	427644	Symbol	* op		426516						
ANR	427645	Symbol	ST32_MAX		426516						
ANR	427646	Symbol	op -> mnemonic		426516						
ANR	427647	Symbol	X86R_ESP		426516						
ANR	427648	Symbol	is_short		426516						
ANR	427649	Symbol	* * op		426516						
ANR	427650	Symbol	op -> is_short		426516						
ANR	427651	Symbol	* op -> operands		426516						
ANR	427652	Symbol	ST8_MIN		426516						
ANR	427653	Symbol	op -> operands [ 0 ] . type		426516						
ANR	427654	Symbol	op -> operands [ 0 ] . reg		426516						
ANR	427655	Symbol	op -> operands [ 0 ] . offset		426516						
ANR	427656	Symbol	OT_MEMORY		426516						
ANR	427657	Symbol	op -> operands [ 0 ] . sign		426516						
ANR	427658	Symbol	a -> bits		426516						
ANR	427659	Symbol	strcmp		426516						
ANR	427660	Symbol	a		426516						
ANR	427661	Symbol	op		426516						
ANR	427662	Symbol	OT_GPREG		426516						
ANR	427663	Symbol	offset		426516						
ANR	427664	Symbol	false		426516						
ANR	427665	Symbol	* a		426516						
ANR	427666	Symbol	* * op -> operands		426516						
ANR	427667	Symbol	l		426516						
ANR	427668	Symbol	op -> operands [ 0 ] . immediate		426516						
ANR	427669	Symbol	a -> pc		426516						
ANR	427670	Symbol	immediate		426516						
ANR	427671	Symbol	* l		426516						
ANR	427672	Symbol	* op -> operands [ 0 ] . regs		426516						
ANR	427673	Symbol	true		426516						
ANR	427674	Symbol	* * * op		426516						
ANR	427675	Symbol	op -> operands		426516						
ANR	427676	Symbol	* data		426516						
ANR	427677	Symbol	op -> operands [ 0 ] . regs		426516						
ANR	427678	Function	oplea	1661:0:43505:45167							
ANR	427679	FunctionDef	"oplea (RAsm * a , ut8 * data , const Opcode * op)"		427678	0					
ANR	427680	CompoundStatement		1661:54:43559:45167	427678	0					
ANR	427681	IdentifierDeclStatement	int l = 0 ;	1662:1:43562:43571	427678	0	True				
ANR	427682	IdentifierDecl	l = 0		427678	0					
ANR	427683	IdentifierDeclType	int		427678	0					
ANR	427684	Identifier	l		427678	1					
ANR	427685	AssignmentExpression	l = 0		427678	2		=			
ANR	427686	Identifier	l		427678	0					
ANR	427687	PrimaryExpression	0		427678	1					
ANR	427688	IdentifierDeclStatement	int mod = 0 ;	1663:1:43574:43585	427678	1	True				
ANR	427689	IdentifierDecl	mod = 0		427678	0					
ANR	427690	IdentifierDeclType	int		427678	0					
ANR	427691	Identifier	mod		427678	1					
ANR	427692	AssignmentExpression	mod = 0		427678	2		=			
ANR	427693	Identifier	mod		427678	0					
ANR	427694	PrimaryExpression	0		427678	1					
ANR	427695	IdentifierDeclStatement	st32 offset = 0 ;	1664:1:43588:43603	427678	2	True				
ANR	427696	IdentifierDecl	offset = 0		427678	0					
ANR	427697	IdentifierDeclType	st32		427678	0					
ANR	427698	Identifier	offset		427678	1					
ANR	427699	AssignmentExpression	offset = 0		427678	2		=			
ANR	427700	Identifier	offset		427678	0					
ANR	427701	PrimaryExpression	0		427678	1					
ANR	427702	IdentifierDeclStatement	int reg = 0 ;	1665:1:43606:43617	427678	3	True				
ANR	427703	IdentifierDecl	reg = 0		427678	0					
ANR	427704	IdentifierDeclType	int		427678	0					
ANR	427705	Identifier	reg		427678	1					
ANR	427706	AssignmentExpression	reg = 0		427678	2		=			
ANR	427707	Identifier	reg		427678	0					
ANR	427708	PrimaryExpression	0		427678	1					
ANR	427709	IdentifierDeclStatement	int rm = 0 ;	1666:1:43620:43630	427678	4	True				
ANR	427710	IdentifierDecl	rm = 0		427678	0					
ANR	427711	IdentifierDeclType	int		427678	0					
ANR	427712	Identifier	rm		427678	1					
ANR	427713	AssignmentExpression	rm = 0		427678	2		=			
ANR	427714	Identifier	rm		427678	0					
ANR	427715	PrimaryExpression	0		427678	1					
ANR	427716	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT ) )		427678	5					
ANR	427717	Condition	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT )	1667:5:43637:43725	427678	0	True				
ANR	427718	AndExpression	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT )		427678	0		&&			
ANR	427719	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		427678	0		&			
ANR	427720	MemberAccess	op -> operands [ 0 ] . type		427678	0					
ANR	427721	ArrayIndexing	op -> operands [ 0 ]		427678	0					
ANR	427722	PtrMemberAccess	op -> operands		427678	0					
ANR	427723	Identifier	op		427678	0					
ANR	427724	Identifier	operands		427678	1					
ANR	427725	PrimaryExpression	0		427678	1					
ANR	427726	Identifier	type		427678	1					
ANR	427727	Identifier	OT_REGALL		427678	1					
ANR	427728	BitAndExpression	op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT )		427678	1		&			
ANR	427729	MemberAccess	op -> operands [ 1 ] . type		427678	0					
ANR	427730	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427731	PtrMemberAccess	op -> operands		427678	0					
ANR	427732	Identifier	op		427678	0					
ANR	427733	Identifier	operands		427678	1					
ANR	427734	PrimaryExpression	1		427678	1					
ANR	427735	Identifier	type		427678	1					
ANR	427736	InclusiveOrExpression	OT_MEMORY | OT_CONSTANT		427678	1		|			
ANR	427737	Identifier	OT_MEMORY		427678	0					
ANR	427738	Identifier	OT_CONSTANT		427678	1					
ANR	427739	CompoundStatement		8:55:168:168	427678	1					
ANR	427740	IfStatement	if ( a -> bits == 64 )		427678	0					
ANR	427741	Condition	a -> bits == 64	1669:6:43736:43748	427678	0	True				
ANR	427742	EqualityExpression	a -> bits == 64		427678	0		==			
ANR	427743	PtrMemberAccess	a -> bits		427678	0					
ANR	427744	Identifier	a		427678	0					
ANR	427745	Identifier	bits		427678	1					
ANR	427746	PrimaryExpression	64		427678	1					
ANR	427747	CompoundStatement		9:21:191:191	427678	1					
ANR	427748	ExpressionStatement	data [ l ++ ] = 0x48	1670:3:43756:43772	427678	0	True				
ANR	427749	AssignmentExpression	data [ l ++ ] = 0x48		427678	0		=			
ANR	427750	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427751	Identifier	data		427678	0					
ANR	427752	PostIncDecOperationExpression	l ++		427678	1					
ANR	427753	Identifier	l		427678	0					
ANR	427754	IncDec	++		427678	1					
ANR	427755	PrimaryExpression	0x48		427678	1					
ANR	427756	ExpressionStatement	data [ l ++ ] = 0x8d	1672:2:43780:43796	427678	1	True				
ANR	427757	AssignmentExpression	data [ l ++ ] = 0x8d		427678	0		=			
ANR	427758	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427759	Identifier	data		427678	0					
ANR	427760	PostIncDecOperationExpression	l ++		427678	1					
ANR	427761	Identifier	l		427678	0					
ANR	427762	IncDec	++		427678	1					
ANR	427763	PrimaryExpression	0x8d		427678	1					
ANR	427764	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED )		427678	2					
ANR	427765	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED	1673:6:43804:43844	427678	0	True				
ANR	427766	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		427678	0		==			
ANR	427767	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	0					
ANR	427768	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	427769	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427770	PtrMemberAccess	op -> operands		427678	0					
ANR	427771	Identifier	op		427678	0					
ANR	427772	Identifier	operands		427678	1					
ANR	427773	PrimaryExpression	1		427678	1					
ANR	427774	Identifier	regs		427678	1					
ANR	427775	PrimaryExpression	0		427678	1					
ANR	427776	Identifier	X86R_UNDEFINED		427678	1					
ANR	427777	CompoundStatement		19:3:412:439	427678	1					
ANR	427778	IdentifierDeclStatement	ut64 offset = op -> operands [ 1 ] . offset - a -> pc ;	1675:3:43875:43919	427678	0	True				
ANR	427779	IdentifierDecl	offset = op -> operands [ 1 ] . offset - a -> pc		427678	0					
ANR	427780	IdentifierDeclType	ut64		427678	0					
ANR	427781	Identifier	offset		427678	1					
ANR	427782	AssignmentExpression	offset = op -> operands [ 1 ] . offset - a -> pc		427678	2		=			
ANR	427783	Identifier	offset		427678	0					
ANR	427784	AdditiveExpression	op -> operands [ 1 ] . offset - a -> pc		427678	1		-			
ANR	427785	MemberAccess	op -> operands [ 1 ] . offset		427678	0					
ANR	427786	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427787	PtrMemberAccess	op -> operands		427678	0					
ANR	427788	Identifier	op		427678	0					
ANR	427789	Identifier	operands		427678	1					
ANR	427790	PrimaryExpression	1		427678	1					
ANR	427791	Identifier	offset		427678	1					
ANR	427792	PtrMemberAccess	a -> pc		427678	1					
ANR	427793	Identifier	a		427678	0					
ANR	427794	Identifier	pc		427678	1					
ANR	427795	IfStatement	if ( data [ 0 ] == 0x48 )		427678	1					
ANR	427796	Condition	data [ 0 ] == 0x48	1676:7:43928:43942	427678	0	True				
ANR	427797	EqualityExpression	data [ 0 ] == 0x48		427678	0		==			
ANR	427798	ArrayIndexing	data [ 0 ]		427678	0					
ANR	427799	Identifier	data		427678	0					
ANR	427800	PrimaryExpression	0		427678	1					
ANR	427801	PrimaryExpression	0x48		427678	1					
ANR	427802	CompoundStatement		16:24:385:385	427678	1					
ANR	427803	ExpressionStatement	offset -= 7	1677:4:43951:43962	427678	0	True				
ANR	427804	AssignmentExpression	offset -= 7		427678	0		-=			
ANR	427805	Identifier	offset		427678	0					
ANR	427806	PrimaryExpression	7		427678	1					
ANR	427807	IdentifierDeclStatement	ut32 high = 0xff00 & offset ;	1679:3:43972:43999	427678	2	True				
ANR	427808	IdentifierDecl	high = 0xff00 & offset		427678	0					
ANR	427809	IdentifierDeclType	ut32		427678	0					
ANR	427810	Identifier	high		427678	1					
ANR	427811	AssignmentExpression	high = 0xff00 & offset		427678	2		=			
ANR	427812	Identifier	high		427678	0					
ANR	427813	BitAndExpression	0xff00 & offset		427678	1		&			
ANR	427814	PrimaryExpression	0xff00		427678	0					
ANR	427815	Identifier	offset		427678	1					
ANR	427816	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 5	1680:3:44004:44044	427678	3	True				
ANR	427817	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 5		427678	0		=			
ANR	427818	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427819	Identifier	data		427678	0					
ANR	427820	PostIncDecOperationExpression	l ++		427678	1					
ANR	427821	Identifier	l		427678	0					
ANR	427822	IncDec	++		427678	1					
ANR	427823	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 5		427678	1		|			
ANR	427824	ShiftExpression	op -> operands [ 0 ] . reg << 3		427678	0		<<			
ANR	427825	MemberAccess	op -> operands [ 0 ] . reg		427678	0					
ANR	427826	ArrayIndexing	op -> operands [ 0 ]		427678	0					
ANR	427827	PtrMemberAccess	op -> operands		427678	0					
ANR	427828	Identifier	op		427678	0					
ANR	427829	Identifier	operands		427678	1					
ANR	427830	PrimaryExpression	0		427678	1					
ANR	427831	Identifier	reg		427678	1					
ANR	427832	PrimaryExpression	3		427678	1					
ANR	427833	PrimaryExpression	5		427678	1					
ANR	427834	ExpressionStatement	data [ l ++ ] = offset	1681:3:44049:44067	427678	4	True				
ANR	427835	AssignmentExpression	data [ l ++ ] = offset		427678	0		=			
ANR	427836	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427837	Identifier	data		427678	0					
ANR	427838	PostIncDecOperationExpression	l ++		427678	1					
ANR	427839	Identifier	l		427678	0					
ANR	427840	IncDec	++		427678	1					
ANR	427841	Identifier	offset		427678	1					
ANR	427842	ExpressionStatement	data [ l ++ ] = high >> 8	1682:3:44072:44093	427678	5	True				
ANR	427843	AssignmentExpression	data [ l ++ ] = high >> 8		427678	0		=			
ANR	427844	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427845	Identifier	data		427678	0					
ANR	427846	PostIncDecOperationExpression	l ++		427678	1					
ANR	427847	Identifier	l		427678	0					
ANR	427848	IncDec	++		427678	1					
ANR	427849	ShiftExpression	high >> 8		427678	1		>>			
ANR	427850	Identifier	high		427678	0					
ANR	427851	PrimaryExpression	8		427678	1					
ANR	427852	ExpressionStatement	data [ l ++ ] = offset >> 16	1683:3:44098:44122	427678	6	True				
ANR	427853	AssignmentExpression	data [ l ++ ] = offset >> 16		427678	0		=			
ANR	427854	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427855	Identifier	data		427678	0					
ANR	427856	PostIncDecOperationExpression	l ++		427678	1					
ANR	427857	Identifier	l		427678	0					
ANR	427858	IncDec	++		427678	1					
ANR	427859	ShiftExpression	offset >> 16		427678	1		>>			
ANR	427860	Identifier	offset		427678	0					
ANR	427861	PrimaryExpression	16		427678	1					
ANR	427862	ExpressionStatement	data [ l ++ ] = offset >> 24	1684:3:44127:44151	427678	7	True				
ANR	427863	AssignmentExpression	data [ l ++ ] = offset >> 24		427678	0		=			
ANR	427864	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427865	Identifier	data		427678	0					
ANR	427866	PostIncDecOperationExpression	l ++		427678	1					
ANR	427867	Identifier	l		427678	0					
ANR	427868	IncDec	++		427678	1					
ANR	427869	ShiftExpression	offset >> 24		427678	1		>>			
ANR	427870	Identifier	offset		427678	0					
ANR	427871	PrimaryExpression	24		427678	1					
ANR	427872	ReturnStatement	return l ;	1685:3:44156:44164	427678	8	True				
ANR	427873	Identifier	l		427678	0					
ANR	427874	ElseStatement	else		427678	0					
ANR	427875	CompoundStatement		26:9:615:615	427678	0					
ANR	427876	ExpressionStatement	reg = op -> operands [ 0 ] . reg	1687:3:44180:44205	427678	0	True				
ANR	427877	AssignmentExpression	reg = op -> operands [ 0 ] . reg		427678	0		=			
ANR	427878	Identifier	reg		427678	0					
ANR	427879	MemberAccess	op -> operands [ 0 ] . reg		427678	1					
ANR	427880	ArrayIndexing	op -> operands [ 0 ]		427678	0					
ANR	427881	PtrMemberAccess	op -> operands		427678	0					
ANR	427882	Identifier	op		427678	0					
ANR	427883	Identifier	operands		427678	1					
ANR	427884	PrimaryExpression	0		427678	1					
ANR	427885	Identifier	reg		427678	1					
ANR	427886	ExpressionStatement	rm = op -> operands [ 1 ] . regs [ 0 ]	1688:3:44210:44238	427678	1	True				
ANR	427887	AssignmentExpression	rm = op -> operands [ 1 ] . regs [ 0 ]		427678	0		=			
ANR	427888	Identifier	rm		427678	0					
ANR	427889	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	1					
ANR	427890	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	427891	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427892	PtrMemberAccess	op -> operands		427678	0					
ANR	427893	Identifier	op		427678	0					
ANR	427894	Identifier	operands		427678	1					
ANR	427895	PrimaryExpression	1		427678	1					
ANR	427896	Identifier	regs		427678	1					
ANR	427897	PrimaryExpression	0		427678	1					
ANR	427898	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1690:3:44244:44305	427678	2	True				
ANR	427899	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		427678	0		=			
ANR	427900	Identifier	offset		427678	0					
ANR	427901	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		427678	1		*			
ANR	427902	MemberAccess	op -> operands [ 1 ] . offset		427678	0					
ANR	427903	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427904	PtrMemberAccess	op -> operands		427678	0					
ANR	427905	Identifier	op		427678	0					
ANR	427906	Identifier	operands		427678	1					
ANR	427907	PrimaryExpression	1		427678	1					
ANR	427908	Identifier	offset		427678	1					
ANR	427909	MemberAccess	op -> operands [ 1 ] . offset_sign		427678	1					
ANR	427910	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427911	PtrMemberAccess	op -> operands		427678	0					
ANR	427912	Identifier	op		427678	0					
ANR	427913	Identifier	operands		427678	1					
ANR	427914	PrimaryExpression	1		427678	1					
ANR	427915	Identifier	offset_sign		427678	1					
ANR	427916	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		427678	3					
ANR	427917	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP	1691:7:44314:44348	427678	0	True				
ANR	427918	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		427678	0		==			
ANR	427919	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	0					
ANR	427920	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	427921	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427922	PtrMemberAccess	op -> operands		427678	0					
ANR	427923	Identifier	op		427678	0					
ANR	427924	Identifier	operands		427678	1					
ANR	427925	PrimaryExpression	1		427678	1					
ANR	427926	Identifier	regs		427678	1					
ANR	427927	PrimaryExpression	0		427678	1					
ANR	427928	Identifier	X86R_RIP		427678	1					
ANR	427929	CompoundStatement		31:44:791:791	427678	1					
ANR	427930	ExpressionStatement	data [ l ++ ] = reg << 3 | 5	1693:4:44433:44457	427678	0	True				
ANR	427931	AssignmentExpression	data [ l ++ ] = reg << 3 | 5		427678	0		=			
ANR	427932	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427933	Identifier	data		427678	0					
ANR	427934	PostIncDecOperationExpression	l ++		427678	1					
ANR	427935	Identifier	l		427678	0					
ANR	427936	IncDec	++		427678	1					
ANR	427937	InclusiveOrExpression	reg << 3 | 5		427678	1		|			
ANR	427938	ShiftExpression	reg << 3		427678	0		<<			
ANR	427939	Identifier	reg		427678	0					
ANR	427940	PrimaryExpression	3		427678	1					
ANR	427941	PrimaryExpression	5		427678	1					
ANR	427942	ExpressionStatement	data [ l ++ ] = offset	1694:4:44463:44481	427678	1	True				
ANR	427943	AssignmentExpression	data [ l ++ ] = offset		427678	0		=			
ANR	427944	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427945	Identifier	data		427678	0					
ANR	427946	PostIncDecOperationExpression	l ++		427678	1					
ANR	427947	Identifier	l		427678	0					
ANR	427948	IncDec	++		427678	1					
ANR	427949	Identifier	offset		427678	1					
ANR	427950	ExpressionStatement	data [ l ++ ] = offset >> 8	1695:4:44487:44510	427678	2	True				
ANR	427951	AssignmentExpression	data [ l ++ ] = offset >> 8		427678	0		=			
ANR	427952	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427953	Identifier	data		427678	0					
ANR	427954	PostIncDecOperationExpression	l ++		427678	1					
ANR	427955	Identifier	l		427678	0					
ANR	427956	IncDec	++		427678	1					
ANR	427957	ShiftExpression	offset >> 8		427678	1		>>			
ANR	427958	Identifier	offset		427678	0					
ANR	427959	PrimaryExpression	8		427678	1					
ANR	427960	ExpressionStatement	data [ l ++ ] = offset >> 16	1696:4:44516:44540	427678	3	True				
ANR	427961	AssignmentExpression	data [ l ++ ] = offset >> 16		427678	0		=			
ANR	427962	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427963	Identifier	data		427678	0					
ANR	427964	PostIncDecOperationExpression	l ++		427678	1					
ANR	427965	Identifier	l		427678	0					
ANR	427966	IncDec	++		427678	1					
ANR	427967	ShiftExpression	offset >> 16		427678	1		>>			
ANR	427968	Identifier	offset		427678	0					
ANR	427969	PrimaryExpression	16		427678	1					
ANR	427970	ExpressionStatement	data [ l ++ ] = offset >> 24	1697:4:44546:44570	427678	4	True				
ANR	427971	AssignmentExpression	data [ l ++ ] = offset >> 24		427678	0		=			
ANR	427972	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	427973	Identifier	data		427678	0					
ANR	427974	PostIncDecOperationExpression	l ++		427678	1					
ANR	427975	Identifier	l		427678	0					
ANR	427976	IncDec	++		427678	1					
ANR	427977	ShiftExpression	offset >> 24		427678	1		>>			
ANR	427978	Identifier	offset		427678	0					
ANR	427979	PrimaryExpression	24		427678	1					
ANR	427980	ReturnStatement	return l ;	1698:4:44576:44584	427678	5	True				
ANR	427981	Identifier	l		427678	0					
ANR	427982	IfStatement	if ( offset != 0 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		427678	4					
ANR	427983	Condition	offset != 0 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	1700:7:44598:44647	427678	0	True				
ANR	427984	OrExpression	offset != 0 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		427678	0		||			
ANR	427985	EqualityExpression	offset != 0		427678	0		!=			
ANR	427986	Identifier	offset		427678	0					
ANR	427987	PrimaryExpression	0		427678	1					
ANR	427988	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		427678	1		==			
ANR	427989	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	0					
ANR	427990	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	427991	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	427992	PtrMemberAccess	op -> operands		427678	0					
ANR	427993	Identifier	op		427678	0					
ANR	427994	Identifier	operands		427678	1					
ANR	427995	PrimaryExpression	1		427678	1					
ANR	427996	Identifier	regs		427678	1					
ANR	427997	PrimaryExpression	0		427678	1					
ANR	427998	Identifier	X86R_EBP		427678	1					
ANR	427999	CompoundStatement		40:59:1090:1090	427678	1					
ANR	428000	ExpressionStatement	mod = 1	1701:4:44656:44663	427678	0	True				
ANR	428001	AssignmentExpression	mod = 1		427678	0		=			
ANR	428002	Identifier	mod		427678	0					
ANR	428003	PrimaryExpression	1		427678	1					
ANR	428004	IfStatement	if ( offset >= 128 || offset < - 128 )		427678	1					
ANR	428005	Condition	offset >= 128 || offset < - 128	1702:8:44673:44702	427678	0	True				
ANR	428006	OrExpression	offset >= 128 || offset < - 128		427678	0		||			
ANR	428007	RelationalExpression	offset >= 128		427678	0		>=			
ANR	428008	Identifier	offset		427678	0					
ANR	428009	PrimaryExpression	128		427678	1					
ANR	428010	RelationalExpression	offset < - 128		427678	1		<			
ANR	428011	Identifier	offset		427678	0					
ANR	428012	UnaryOperationExpression	- 128		427678	1					
ANR	428013	UnaryOperator	-		427678	0					
ANR	428014	PrimaryExpression	128		427678	1					
ANR	428015	CompoundStatement		42:40:1145:1145	427678	1					
ANR	428016	ExpressionStatement	mod = 2	1703:5:44712:44719	427678	0	True				
ANR	428017	AssignmentExpression	mod = 2		427678	0		=			
ANR	428018	Identifier	mod		427678	0					
ANR	428019	PrimaryExpression	2		427678	1					
ANR	428020	ExpressionStatement	data [ l ++ ] = mod << 6 | reg << 3 | rm	1705:4:44731:44767	427678	2	True				
ANR	428021	AssignmentExpression	data [ l ++ ] = mod << 6 | reg << 3 | rm		427678	0		=			
ANR	428022	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428023	Identifier	data		427678	0					
ANR	428024	PostIncDecOperationExpression	l ++		427678	1					
ANR	428025	Identifier	l		427678	0					
ANR	428026	IncDec	++		427678	1					
ANR	428027	InclusiveOrExpression	mod << 6 | reg << 3 | rm		427678	1		|			
ANR	428028	ShiftExpression	mod << 6		427678	0		<<			
ANR	428029	Identifier	mod		427678	0					
ANR	428030	PrimaryExpression	6		427678	1					
ANR	428031	InclusiveOrExpression	reg << 3 | rm		427678	1		|			
ANR	428032	ShiftExpression	reg << 3		427678	0		<<			
ANR	428033	Identifier	reg		427678	0					
ANR	428034	PrimaryExpression	3		427678	1					
ANR	428035	Identifier	rm		427678	1					
ANR	428036	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		427678	3					
ANR	428037	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	1706:8:44777:44811	427678	0	True				
ANR	428038	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		427678	0		==			
ANR	428039	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	0					
ANR	428040	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	428041	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	428042	PtrMemberAccess	op -> operands		427678	0					
ANR	428043	Identifier	op		427678	0					
ANR	428044	Identifier	operands		427678	1					
ANR	428045	PrimaryExpression	1		427678	1					
ANR	428046	Identifier	regs		427678	1					
ANR	428047	PrimaryExpression	0		427678	1					
ANR	428048	Identifier	X86R_ESP		427678	1					
ANR	428049	CompoundStatement		46:45:1254:1254	427678	1					
ANR	428050	ExpressionStatement	data [ l ++ ] = 0x24	1707:5:44821:44837	427678	0	True				
ANR	428051	AssignmentExpression	data [ l ++ ] = 0x24		427678	0		=			
ANR	428052	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428053	Identifier	data		427678	0					
ANR	428054	PostIncDecOperationExpression	l ++		427678	1					
ANR	428055	Identifier	l		427678	0					
ANR	428056	IncDec	++		427678	1					
ANR	428057	PrimaryExpression	0x24		427678	1					
ANR	428058	ExpressionStatement	data [ l ++ ] = offset	1709:4:44849:44867	427678	4	True				
ANR	428059	AssignmentExpression	data [ l ++ ] = offset		427678	0		=			
ANR	428060	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428061	Identifier	data		427678	0					
ANR	428062	PostIncDecOperationExpression	l ++		427678	1					
ANR	428063	Identifier	l		427678	0					
ANR	428064	IncDec	++		427678	1					
ANR	428065	Identifier	offset		427678	1					
ANR	428066	IfStatement	if ( mod == 2 )		427678	5					
ANR	428067	Condition	mod == 2	1710:8:44877:44884	427678	0	True				
ANR	428068	EqualityExpression	mod == 2		427678	0		==			
ANR	428069	Identifier	mod		427678	0					
ANR	428070	PrimaryExpression	2		427678	1					
ANR	428071	CompoundStatement		50:18:1327:1327	427678	1					
ANR	428072	ExpressionStatement	data [ l ++ ] = offset >> 8	1711:5:44894:44917	427678	0	True				
ANR	428073	AssignmentExpression	data [ l ++ ] = offset >> 8		427678	0		=			
ANR	428074	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428075	Identifier	data		427678	0					
ANR	428076	PostIncDecOperationExpression	l ++		427678	1					
ANR	428077	Identifier	l		427678	0					
ANR	428078	IncDec	++		427678	1					
ANR	428079	ShiftExpression	offset >> 8		427678	1		>>			
ANR	428080	Identifier	offset		427678	0					
ANR	428081	PrimaryExpression	8		427678	1					
ANR	428082	ExpressionStatement	data [ l ++ ] = offset >> 16	1712:5:44924:44948	427678	1	True				
ANR	428083	AssignmentExpression	data [ l ++ ] = offset >> 16		427678	0		=			
ANR	428084	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428085	Identifier	data		427678	0					
ANR	428086	PostIncDecOperationExpression	l ++		427678	1					
ANR	428087	Identifier	l		427678	0					
ANR	428088	IncDec	++		427678	1					
ANR	428089	ShiftExpression	offset >> 16		427678	1		>>			
ANR	428090	Identifier	offset		427678	0					
ANR	428091	PrimaryExpression	16		427678	1					
ANR	428092	ExpressionStatement	data [ l ++ ] = offset >> 24	1713:5:44955:44979	427678	2	True				
ANR	428093	AssignmentExpression	data [ l ++ ] = offset >> 24		427678	0		=			
ANR	428094	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428095	Identifier	data		427678	0					
ANR	428096	PostIncDecOperationExpression	l ++		427678	1					
ANR	428097	Identifier	l		427678	0					
ANR	428098	IncDec	++		427678	1					
ANR	428099	ShiftExpression	offset >> 24		427678	1		>>			
ANR	428100	Identifier	offset		427678	0					
ANR	428101	PrimaryExpression	24		427678	1					
ANR	428102	ElseStatement	else		427678	0					
ANR	428103	CompoundStatement		55:10:1437:1437	427678	0					
ANR	428104	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1716:4:45003:45065	427678	0	True				
ANR	428105	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		427678	0		=			
ANR	428106	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428107	Identifier	data		427678	0					
ANR	428108	PostIncDecOperationExpression	l ++		427678	1					
ANR	428109	Identifier	l		427678	0					
ANR	428110	IncDec	++		427678	1					
ANR	428111	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		427678	1		|			
ANR	428112	ShiftExpression	op -> operands [ 0 ] . reg << 3		427678	0		<<			
ANR	428113	MemberAccess	op -> operands [ 0 ] . reg		427678	0					
ANR	428114	ArrayIndexing	op -> operands [ 0 ]		427678	0					
ANR	428115	PtrMemberAccess	op -> operands		427678	0					
ANR	428116	Identifier	op		427678	0					
ANR	428117	Identifier	operands		427678	1					
ANR	428118	PrimaryExpression	0		427678	1					
ANR	428119	Identifier	reg		427678	1					
ANR	428120	PrimaryExpression	3		427678	1					
ANR	428121	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	1					
ANR	428122	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	428123	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	428124	PtrMemberAccess	op -> operands		427678	0					
ANR	428125	Identifier	op		427678	0					
ANR	428126	Identifier	operands		427678	1					
ANR	428127	PrimaryExpression	1		427678	1					
ANR	428128	Identifier	regs		427678	1					
ANR	428129	PrimaryExpression	0		427678	1					
ANR	428130	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		427678	1					
ANR	428131	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	1717:8:45075:45109	427678	0	True				
ANR	428132	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		427678	0		==			
ANR	428133	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		427678	0					
ANR	428134	MemberAccess	op -> operands [ 1 ] . regs		427678	0					
ANR	428135	ArrayIndexing	op -> operands [ 1 ]		427678	0					
ANR	428136	PtrMemberAccess	op -> operands		427678	0					
ANR	428137	Identifier	op		427678	0					
ANR	428138	Identifier	operands		427678	1					
ANR	428139	PrimaryExpression	1		427678	1					
ANR	428140	Identifier	regs		427678	1					
ANR	428141	PrimaryExpression	0		427678	1					
ANR	428142	Identifier	X86R_ESP		427678	1					
ANR	428143	CompoundStatement		57:45:1552:1552	427678	1					
ANR	428144	ExpressionStatement	data [ l ++ ] = 0x24	1718:5:45119:45135	427678	0	True				
ANR	428145	AssignmentExpression	data [ l ++ ] = 0x24		427678	0		=			
ANR	428146	ArrayIndexing	data [ l ++ ]		427678	0					
ANR	428147	Identifier	data		427678	0					
ANR	428148	PostIncDecOperationExpression	l ++		427678	1					
ANR	428149	Identifier	l		427678	0					
ANR	428150	IncDec	++		427678	1					
ANR	428151	PrimaryExpression	0x24		427678	1					
ANR	428152	ReturnStatement	return l ;	1724:1:45157:45165	427678	6	True				
ANR	428153	Identifier	l		427678	0					
ANR	428154	ReturnType	static int		427678	1					
ANR	428155	Identifier	oplea		427678	2					
ANR	428156	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		427678	3					
ANR	428157	Parameter	RAsm * a	1661:17:43522:43528	427678	0	True				
ANR	428158	ParameterType	RAsm *		427678	0					
ANR	428159	Identifier	a		427678	1					
ANR	428160	Parameter	ut8 * data	1661:26:43531:43539	427678	1	True				
ANR	428161	ParameterType	ut8 *		427678	0					
ANR	428162	Identifier	data		427678	1					
ANR	428163	Parameter	const Opcode * op	1661:37:43542:43557	427678	2	True				
ANR	428164	ParameterType	const Opcode *		427678	0					
ANR	428165	Identifier	op		427678	1					
ANR	428166	CFGEntryNode	ENTRY		427678		True				
ANR	428167	CFGExitNode	EXIT		427678		True				
ANR	428168	Symbol	mod		427678						
ANR	428169	Symbol	data		427678						
ANR	428170	Symbol	* op		427678						
ANR	428171	Symbol	X86R_ESP		427678						
ANR	428172	Symbol	X86R_EBP		427678						
ANR	428173	Symbol	* * op		427678						
ANR	428174	Symbol	* op -> operands [ 1 ] . regs		427678						
ANR	428175	Symbol	* op -> operands		427678						
ANR	428176	Symbol	high		427678						
ANR	428177	Symbol	reg		427678						
ANR	428178	Symbol	op -> operands [ 1 ] . regs		427678						
ANR	428179	Symbol	op -> operands [ 0 ] . type		427678						
ANR	428180	Symbol	op -> operands [ 0 ] . reg		427678						
ANR	428181	Symbol	op -> operands [ 1 ] . offset_sign		427678						
ANR	428182	Symbol	OT_MEMORY		427678						
ANR	428183	Symbol	a -> bits		427678						
ANR	428184	Symbol	a		427678						
ANR	428185	Symbol	op		427678						
ANR	428186	Symbol	OT_CONSTANT		427678						
ANR	428187	Symbol	offset		427678						
ANR	428188	Symbol	op -> operands [ 1 ] . offset		427678						
ANR	428189	Symbol	* a		427678						
ANR	428190	Symbol	* * op -> operands		427678						
ANR	428191	Symbol	l		427678						
ANR	428192	Symbol	OT_REGALL		427678						
ANR	428193	Symbol	X86R_RIP		427678						
ANR	428194	Symbol	a -> pc		427678						
ANR	428195	Symbol	X86R_UNDEFINED		427678						
ANR	428196	Symbol	op -> operands [ 1 ] . type		427678						
ANR	428197	Symbol	* * * op		427678						
ANR	428198	Symbol	rm		427678						
ANR	428199	Symbol	op -> operands		427678						
ANR	428200	Symbol	* data		427678						
ANR	428201	Function	oples	1727:0:45170:45998							
ANR	428202	FunctionDef	"oples (RAsm * a , ut8 * data , const Opcode * op)"		428201	0					
ANR	428203	CompoundStatement		1727:55:45225:45998	428201	0					
ANR	428204	IdentifierDeclStatement	int l = 0 ;	1728:1:45228:45237	428201	0	True				
ANR	428205	IdentifierDecl	l = 0		428201	0					
ANR	428206	IdentifierDeclType	int		428201	0					
ANR	428207	Identifier	l		428201	1					
ANR	428208	AssignmentExpression	l = 0		428201	2		=			
ANR	428209	Identifier	l		428201	0					
ANR	428210	PrimaryExpression	0		428201	1					
ANR	428211	IdentifierDeclStatement	int offset = 0 ;	1729:1:45240:45254	428201	1	True				
ANR	428212	IdentifierDecl	offset = 0		428201	0					
ANR	428213	IdentifierDeclType	int		428201	0					
ANR	428214	Identifier	offset		428201	1					
ANR	428215	AssignmentExpression	offset = 0		428201	2		=			
ANR	428216	Identifier	offset		428201	0					
ANR	428217	PrimaryExpression	0		428201	1					
ANR	428218	IdentifierDeclStatement	int mod = 0 ;	1730:1:45257:45268	428201	2	True				
ANR	428219	IdentifierDecl	mod = 0		428201	0					
ANR	428220	IdentifierDeclType	int		428201	0					
ANR	428221	Identifier	mod		428201	1					
ANR	428222	AssignmentExpression	mod = 0		428201	2		=			
ANR	428223	Identifier	mod		428201	0					
ANR	428224	PrimaryExpression	0		428201	1					
ANR	428225	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		428201	3					
ANR	428226	Condition	op -> operands [ 1 ] . type & OT_MEMORY	1732:5:45276:45307	428201	0	True				
ANR	428227	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		428201	0		&			
ANR	428228	MemberAccess	op -> operands [ 1 ] . type		428201	0					
ANR	428229	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428230	PtrMemberAccess	op -> operands		428201	0					
ANR	428231	Identifier	op		428201	0					
ANR	428232	Identifier	operands		428201	1					
ANR	428233	PrimaryExpression	1		428201	1					
ANR	428234	Identifier	type		428201	1					
ANR	428235	Identifier	OT_MEMORY		428201	1					
ANR	428236	CompoundStatement		6:39:84:84	428201	1					
ANR	428237	ExpressionStatement	data [ l ++ ] = 0xc4	1733:2:45314:45330	428201	0	True				
ANR	428238	AssignmentExpression	data [ l ++ ] = 0xc4		428201	0		=			
ANR	428239	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428240	Identifier	data		428201	0					
ANR	428241	PostIncDecOperationExpression	l ++		428201	1					
ANR	428242	Identifier	l		428201	0					
ANR	428243	IncDec	++		428201	1					
ANR	428244	PrimaryExpression	0xc4		428201	1					
ANR	428245	IfStatement	if ( op -> operands [ 1 ] . type & OT_GPREG )		428201	1					
ANR	428246	Condition	op -> operands [ 1 ] . type & OT_GPREG	1734:6:45338:45368	428201	0	True				
ANR	428247	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		428201	0		&			
ANR	428248	MemberAccess	op -> operands [ 1 ] . type		428201	0					
ANR	428249	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428250	PtrMemberAccess	op -> operands		428201	0					
ANR	428251	Identifier	op		428201	0					
ANR	428252	Identifier	operands		428201	1					
ANR	428253	PrimaryExpression	1		428201	1					
ANR	428254	Identifier	type		428201	1					
ANR	428255	Identifier	OT_GPREG		428201	1					
ANR	428256	CompoundStatement		8:39:145:145	428201	1					
ANR	428257	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1735:3:45376:45437	428201	0	True				
ANR	428258	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		428201	0		=			
ANR	428259	Identifier	offset		428201	0					
ANR	428260	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		428201	1		*			
ANR	428261	MemberAccess	op -> operands [ 1 ] . offset		428201	0					
ANR	428262	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428263	PtrMemberAccess	op -> operands		428201	0					
ANR	428264	Identifier	op		428201	0					
ANR	428265	Identifier	operands		428201	1					
ANR	428266	PrimaryExpression	1		428201	1					
ANR	428267	Identifier	offset		428201	1					
ANR	428268	MemberAccess	op -> operands [ 1 ] . offset_sign		428201	1					
ANR	428269	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428270	PtrMemberAccess	op -> operands		428201	0					
ANR	428271	Identifier	op		428201	0					
ANR	428272	Identifier	operands		428201	1					
ANR	428273	PrimaryExpression	1		428201	1					
ANR	428274	Identifier	offset_sign		428201	1					
ANR	428275	IfStatement	if ( offset )		428201	1					
ANR	428276	Condition	offset	1736:7:45446:45451	428201	0	True				
ANR	428277	Identifier	offset		428201	0					
ANR	428278	CompoundStatement		10:15:228:228	428201	1					
ANR	428279	ExpressionStatement	mod = 1	1737:4:45460:45467	428201	0	True				
ANR	428280	AssignmentExpression	mod = 1		428201	0		=			
ANR	428281	Identifier	mod		428201	0					
ANR	428282	PrimaryExpression	1		428201	1					
ANR	428283	IfStatement	if ( offset > 128 || offset < - 128 )		428201	1					
ANR	428284	Condition	offset > 128 || offset < - 128	1738:8:45477:45505	428201	0	True				
ANR	428285	OrExpression	offset > 128 || offset < - 128		428201	0		||			
ANR	428286	RelationalExpression	offset > 128		428201	0		>			
ANR	428287	Identifier	offset		428201	0					
ANR	428288	PrimaryExpression	128		428201	1					
ANR	428289	RelationalExpression	offset < - 128		428201	1		<			
ANR	428290	Identifier	offset		428201	0					
ANR	428291	UnaryOperationExpression	- 128		428201	1					
ANR	428292	UnaryOperator	-		428201	0					
ANR	428293	PrimaryExpression	128		428201	1					
ANR	428294	CompoundStatement		12:39:282:282	428201	1					
ANR	428295	ExpressionStatement	mod = 2	1739:5:45515:45522	428201	0	True				
ANR	428296	AssignmentExpression	mod = 2		428201	0		=			
ANR	428297	Identifier	mod		428201	0					
ANR	428298	PrimaryExpression	2		428201	1					
ANR	428299	ExpressionStatement	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1742:3:45538:45611	428201	2	True				
ANR	428300	AssignmentExpression	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428201	0		=			
ANR	428301	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428302	Identifier	data		428201	0					
ANR	428303	PostIncDecOperationExpression	l ++		428201	1					
ANR	428304	Identifier	l		428201	0					
ANR	428305	IncDec	++		428201	1					
ANR	428306	InclusiveOrExpression	mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428201	1		|			
ANR	428307	ShiftExpression	mod << 6		428201	0		<<			
ANR	428308	Identifier	mod		428201	0					
ANR	428309	PrimaryExpression	6		428201	1					
ANR	428310	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428201	1		|			
ANR	428311	ShiftExpression	op -> operands [ 0 ] . reg << 3		428201	0		<<			
ANR	428312	MemberAccess	op -> operands [ 0 ] . reg		428201	0					
ANR	428313	ArrayIndexing	op -> operands [ 0 ]		428201	0					
ANR	428314	PtrMemberAccess	op -> operands		428201	0					
ANR	428315	Identifier	op		428201	0					
ANR	428316	Identifier	operands		428201	1					
ANR	428317	PrimaryExpression	0		428201	1					
ANR	428318	Identifier	reg		428201	1					
ANR	428319	PrimaryExpression	3		428201	1					
ANR	428320	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428201	1					
ANR	428321	MemberAccess	op -> operands [ 1 ] . regs		428201	0					
ANR	428322	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428323	PtrMemberAccess	op -> operands		428201	0					
ANR	428324	Identifier	op		428201	0					
ANR	428325	Identifier	operands		428201	1					
ANR	428326	PrimaryExpression	1		428201	1					
ANR	428327	Identifier	regs		428201	1					
ANR	428328	PrimaryExpression	0		428201	1					
ANR	428329	IfStatement	if ( mod )		428201	3					
ANR	428330	Condition	mod	1743:7:45620:45622	428201	0	True				
ANR	428331	Identifier	mod		428201	0					
ANR	428332	CompoundStatement		17:12:399:399	428201	1					
ANR	428333	ExpressionStatement	data [ l ++ ] = offset	1744:4:45631:45649	428201	0	True				
ANR	428334	AssignmentExpression	data [ l ++ ] = offset		428201	0		=			
ANR	428335	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428336	Identifier	data		428201	0					
ANR	428337	PostIncDecOperationExpression	l ++		428201	1					
ANR	428338	Identifier	l		428201	0					
ANR	428339	IncDec	++		428201	1					
ANR	428340	Identifier	offset		428201	1					
ANR	428341	IfStatement	if ( mod > 1 )		428201	1					
ANR	428342	Condition	mod > 1	1745:8:45659:45665	428201	0	True				
ANR	428343	RelationalExpression	mod > 1		428201	0		>			
ANR	428344	Identifier	mod		428201	0					
ANR	428345	PrimaryExpression	1		428201	1					
ANR	428346	CompoundStatement		19:17:442:442	428201	1					
ANR	428347	ExpressionStatement	data [ l ++ ] = offset >> 8	1746:5:45675:45698	428201	0	True				
ANR	428348	AssignmentExpression	data [ l ++ ] = offset >> 8		428201	0		=			
ANR	428349	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428350	Identifier	data		428201	0					
ANR	428351	PostIncDecOperationExpression	l ++		428201	1					
ANR	428352	Identifier	l		428201	0					
ANR	428353	IncDec	++		428201	1					
ANR	428354	ShiftExpression	offset >> 8		428201	1		>>			
ANR	428355	Identifier	offset		428201	0					
ANR	428356	PrimaryExpression	8		428201	1					
ANR	428357	ExpressionStatement	data [ l ++ ] = offset >> 16	1747:5:45705:45729	428201	1	True				
ANR	428358	AssignmentExpression	data [ l ++ ] = offset >> 16		428201	0		=			
ANR	428359	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428360	Identifier	data		428201	0					
ANR	428361	PostIncDecOperationExpression	l ++		428201	1					
ANR	428362	Identifier	l		428201	0					
ANR	428363	IncDec	++		428201	1					
ANR	428364	ShiftExpression	offset >> 16		428201	1		>>			
ANR	428365	Identifier	offset		428201	0					
ANR	428366	PrimaryExpression	16		428201	1					
ANR	428367	ExpressionStatement	data [ l ++ ] = offset >> 24	1748:5:45736:45760	428201	2	True				
ANR	428368	AssignmentExpression	data [ l ++ ] = offset >> 24		428201	0		=			
ANR	428369	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428370	Identifier	data		428201	0					
ANR	428371	PostIncDecOperationExpression	l ++		428201	1					
ANR	428372	Identifier	l		428201	0					
ANR	428373	IncDec	++		428201	1					
ANR	428374	ShiftExpression	offset >> 24		428201	1		>>			
ANR	428375	Identifier	offset		428201	0					
ANR	428376	PrimaryExpression	24		428201	1					
ANR	428377	ElseStatement	else		428201	0					
ANR	428378	CompoundStatement		25:9:556:556	428201	0					
ANR	428379	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1752:3:45787:45848	428201	0	True				
ANR	428380	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		428201	0		=			
ANR	428381	Identifier	offset		428201	0					
ANR	428382	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		428201	1		*			
ANR	428383	MemberAccess	op -> operands [ 1 ] . offset		428201	0					
ANR	428384	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428385	PtrMemberAccess	op -> operands		428201	0					
ANR	428386	Identifier	op		428201	0					
ANR	428387	Identifier	operands		428201	1					
ANR	428388	PrimaryExpression	1		428201	1					
ANR	428389	Identifier	offset		428201	1					
ANR	428390	MemberAccess	op -> operands [ 1 ] . offset_sign		428201	1					
ANR	428391	ArrayIndexing	op -> operands [ 1 ]		428201	0					
ANR	428392	PtrMemberAccess	op -> operands		428201	0					
ANR	428393	Identifier	op		428201	0					
ANR	428394	Identifier	operands		428201	1					
ANR	428395	PrimaryExpression	1		428201	1					
ANR	428396	Identifier	offset_sign		428201	1					
ANR	428397	ExpressionStatement	data [ l ++ ] = 0x05	1753:3:45853:45869	428201	1	True				
ANR	428398	AssignmentExpression	data [ l ++ ] = 0x05		428201	0		=			
ANR	428399	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428400	Identifier	data		428201	0					
ANR	428401	PostIncDecOperationExpression	l ++		428201	1					
ANR	428402	Identifier	l		428201	0					
ANR	428403	IncDec	++		428201	1					
ANR	428404	PrimaryExpression	0x05		428201	1					
ANR	428405	ExpressionStatement	data [ l ++ ] = offset	1754:3:45874:45892	428201	2	True				
ANR	428406	AssignmentExpression	data [ l ++ ] = offset		428201	0		=			
ANR	428407	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428408	Identifier	data		428201	0					
ANR	428409	PostIncDecOperationExpression	l ++		428201	1					
ANR	428410	Identifier	l		428201	0					
ANR	428411	IncDec	++		428201	1					
ANR	428412	Identifier	offset		428201	1					
ANR	428413	ExpressionStatement	data [ l ++ ] = offset >> 8	1755:3:45897:45920	428201	3	True				
ANR	428414	AssignmentExpression	data [ l ++ ] = offset >> 8		428201	0		=			
ANR	428415	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428416	Identifier	data		428201	0					
ANR	428417	PostIncDecOperationExpression	l ++		428201	1					
ANR	428418	Identifier	l		428201	0					
ANR	428419	IncDec	++		428201	1					
ANR	428420	ShiftExpression	offset >> 8		428201	1		>>			
ANR	428421	Identifier	offset		428201	0					
ANR	428422	PrimaryExpression	8		428201	1					
ANR	428423	ExpressionStatement	data [ l ++ ] = offset >> 16	1756:3:45925:45949	428201	4	True				
ANR	428424	AssignmentExpression	data [ l ++ ] = offset >> 16		428201	0		=			
ANR	428425	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428426	Identifier	data		428201	0					
ANR	428427	PostIncDecOperationExpression	l ++		428201	1					
ANR	428428	Identifier	l		428201	0					
ANR	428429	IncDec	++		428201	1					
ANR	428430	ShiftExpression	offset >> 16		428201	1		>>			
ANR	428431	Identifier	offset		428201	0					
ANR	428432	PrimaryExpression	16		428201	1					
ANR	428433	ExpressionStatement	data [ l ++ ] = offset >> 24	1757:3:45954:45978	428201	5	True				
ANR	428434	AssignmentExpression	data [ l ++ ] = offset >> 24		428201	0		=			
ANR	428435	ArrayIndexing	data [ l ++ ]		428201	0					
ANR	428436	Identifier	data		428201	0					
ANR	428437	PostIncDecOperationExpression	l ++		428201	1					
ANR	428438	Identifier	l		428201	0					
ANR	428439	IncDec	++		428201	1					
ANR	428440	ShiftExpression	offset >> 24		428201	1		>>			
ANR	428441	Identifier	offset		428201	0					
ANR	428442	PrimaryExpression	24		428201	1					
ANR	428443	ReturnStatement	return l ;	1760:1:45988:45996	428201	4	True				
ANR	428444	Identifier	l		428201	0					
ANR	428445	ReturnType	static int		428201	1					
ANR	428446	Identifier	oples		428201	2					
ANR	428447	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		428201	3					
ANR	428448	Parameter	RAsm * a	1727:17:45187:45193	428201	0	True				
ANR	428449	ParameterType	RAsm *		428201	0					
ANR	428450	Identifier	a		428201	1					
ANR	428451	Parameter	ut8 * data	1727:26:45196:45204	428201	1	True				
ANR	428452	ParameterType	ut8 *		428201	0					
ANR	428453	Identifier	data		428201	1					
ANR	428454	Parameter	const Opcode * op	1727:37:45207:45222	428201	2	True				
ANR	428455	ParameterType	const Opcode *		428201	0					
ANR	428456	Identifier	op		428201	1					
ANR	428457	CFGEntryNode	ENTRY		428201		True				
ANR	428458	CFGExitNode	EXIT		428201		True				
ANR	428459	Symbol	a		428201						
ANR	428460	Symbol	op		428201						
ANR	428461	Symbol	mod		428201						
ANR	428462	Symbol	OT_GPREG		428201						
ANR	428463	Symbol	data		428201						
ANR	428464	Symbol	offset		428201						
ANR	428465	Symbol	* op		428201						
ANR	428466	Symbol	op -> operands [ 1 ] . offset		428201						
ANR	428467	Symbol	* * op -> operands		428201						
ANR	428468	Symbol	l		428201						
ANR	428469	Symbol	* * op		428201						
ANR	428470	Symbol	* op -> operands [ 1 ] . regs		428201						
ANR	428471	Symbol	* op -> operands		428201						
ANR	428472	Symbol	op -> operands [ 1 ] . type		428201						
ANR	428473	Symbol	op -> operands [ 1 ] . regs		428201						
ANR	428474	Symbol	op -> operands [ 1 ] . offset_sign		428201						
ANR	428475	Symbol	* * * op		428201						
ANR	428476	Symbol	op -> operands [ 0 ] . reg		428201						
ANR	428477	Symbol	op -> operands		428201						
ANR	428478	Symbol	OT_MEMORY		428201						
ANR	428479	Symbol	* data		428201						
ANR	428480	Function	opmov	1763:0:46001:59694							
ANR	428481	FunctionDef	"opmov (RAsm * a , ut8 * data , const Opcode * op)"		428480	0					
ANR	428482	CompoundStatement		1763:55:46056:59694	428480	0					
ANR	428483	IdentifierDeclStatement	int l = 0 ;	1764:1:46059:46068	428480	0	True				
ANR	428484	IdentifierDecl	l = 0		428480	0					
ANR	428485	IdentifierDeclType	int		428480	0					
ANR	428486	Identifier	l		428480	1					
ANR	428487	AssignmentExpression	l = 0		428480	2		=			
ANR	428488	Identifier	l		428480	0					
ANR	428489	PrimaryExpression	0		428480	1					
ANR	428490	IdentifierDeclStatement	st64 offset = 0 ;	1765:1:46071:46086	428480	1	True				
ANR	428491	IdentifierDecl	offset = 0		428480	0					
ANR	428492	IdentifierDeclType	st64		428480	0					
ANR	428493	Identifier	offset		428480	1					
ANR	428494	AssignmentExpression	offset = 0		428480	2		=			
ANR	428495	Identifier	offset		428480	0					
ANR	428496	PrimaryExpression	0		428480	1					
ANR	428497	IdentifierDeclStatement	int mod = 0 ;	1766:1:46089:46100	428480	2	True				
ANR	428498	IdentifierDecl	mod = 0		428480	0					
ANR	428499	IdentifierDeclType	int		428480	0					
ANR	428500	Identifier	mod		428480	1					
ANR	428501	AssignmentExpression	mod = 0		428480	2		=			
ANR	428502	Identifier	mod		428480	0					
ANR	428503	PrimaryExpression	0		428480	1					
ANR	428504	IdentifierDeclStatement	int base = 0 ;	1767:1:46103:46115	428480	3	True				
ANR	428505	IdentifierDecl	base = 0		428480	0					
ANR	428506	IdentifierDeclType	int		428480	0					
ANR	428507	Identifier	base		428480	1					
ANR	428508	AssignmentExpression	base = 0		428480	2		=			
ANR	428509	Identifier	base		428480	0					
ANR	428510	PrimaryExpression	0		428480	1					
ANR	428511	IdentifierDeclStatement	int rex = 0 ;	1768:1:46118:46129	428480	4	True				
ANR	428512	IdentifierDecl	rex = 0		428480	0					
ANR	428513	IdentifierDeclType	int		428480	0					
ANR	428514	Identifier	rex		428480	1					
ANR	428515	AssignmentExpression	rex = 0		428480	2		=			
ANR	428516	Identifier	rex		428480	0					
ANR	428517	PrimaryExpression	0		428480	1					
ANR	428518	IdentifierDeclStatement	ut64 immediate = 0 ;	1769:1:46132:46150	428480	5	True				
ANR	428519	IdentifierDecl	immediate = 0		428480	0					
ANR	428520	IdentifierDeclType	ut64		428480	0					
ANR	428521	Identifier	immediate		428480	1					
ANR	428522	AssignmentExpression	immediate = 0		428480	2		=			
ANR	428523	Identifier	immediate		428480	0					
ANR	428524	PrimaryExpression	0		428480	1					
ANR	428525	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		428480	6					
ANR	428526	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	1770:5:46157:46190	428480	0	True				
ANR	428527	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		428480	0		&			
ANR	428528	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	428529	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428530	PtrMemberAccess	op -> operands		428480	0					
ANR	428531	Identifier	op		428480	0					
ANR	428532	Identifier	operands		428480	1					
ANR	428533	PrimaryExpression	1		428480	1					
ANR	428534	Identifier	type		428480	1					
ANR	428535	Identifier	OT_CONSTANT		428480	1					
ANR	428536	CompoundStatement		8:41:136:136	428480	1					
ANR	428537	IfStatement	if ( ! op -> operands [ 1 ] . is_good_flag )		428480	0					
ANR	428538	Condition	! op -> operands [ 1 ] . is_good_flag	1771:6:46201:46229	428480	0	True				
ANR	428539	UnaryOperationExpression	! op -> operands [ 1 ] . is_good_flag		428480	0					
ANR	428540	UnaryOperator	!		428480	0					
ANR	428541	MemberAccess	op -> operands [ 1 ] . is_good_flag		428480	1					
ANR	428542	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428543	PtrMemberAccess	op -> operands		428480	0					
ANR	428544	Identifier	op		428480	0					
ANR	428545	Identifier	operands		428480	1					
ANR	428546	PrimaryExpression	1		428480	1					
ANR	428547	Identifier	is_good_flag		428480	1					
ANR	428548	CompoundStatement		9:37:175:175	428480	1					
ANR	428549	ReturnStatement	return - 1 ;	1772:3:46237:46246	428480	0	True				
ANR	428550	UnaryOperationExpression	- 1		428480	0					
ANR	428551	UnaryOperator	-		428480	0					
ANR	428552	PrimaryExpression	1		428480	1					
ANR	428553	IfStatement	if ( op -> operands [ 1 ] . immediate == - 1 )		428480	1					
ANR	428554	Condition	op -> operands [ 1 ] . immediate == - 1	1774:6:46258:46288	428480	0	True				
ANR	428555	EqualityExpression	op -> operands [ 1 ] . immediate == - 1		428480	0		==			
ANR	428556	MemberAccess	op -> operands [ 1 ] . immediate		428480	0					
ANR	428557	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428558	PtrMemberAccess	op -> operands		428480	0					
ANR	428559	Identifier	op		428480	0					
ANR	428560	Identifier	operands		428480	1					
ANR	428561	PrimaryExpression	1		428480	1					
ANR	428562	Identifier	immediate		428480	1					
ANR	428563	UnaryOperationExpression	- 1		428480	1					
ANR	428564	UnaryOperator	-		428480	0					
ANR	428565	PrimaryExpression	1		428480	1					
ANR	428566	CompoundStatement		12:39:234:234	428480	1					
ANR	428567	ReturnStatement	return - 1 ;	1775:3:46296:46305	428480	0	True				
ANR	428568	UnaryOperationExpression	- 1		428480	0					
ANR	428569	UnaryOperator	-		428480	0					
ANR	428570	PrimaryExpression	1		428480	1					
ANR	428571	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1777:2:46313:46373	428480	2	True				
ANR	428572	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		428480	0		=			
ANR	428573	Identifier	immediate		428480	0					
ANR	428574	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		428480	1		*			
ANR	428575	MemberAccess	op -> operands [ 1 ] . immediate		428480	0					
ANR	428576	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428577	PtrMemberAccess	op -> operands		428480	0					
ANR	428578	Identifier	op		428480	0					
ANR	428579	Identifier	operands		428480	1					
ANR	428580	PrimaryExpression	1		428480	1					
ANR	428581	Identifier	immediate		428480	1					
ANR	428582	MemberAccess	op -> operands [ 1 ] . sign		428480	1					
ANR	428583	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428584	PtrMemberAccess	op -> operands		428480	0					
ANR	428585	Identifier	op		428480	0					
ANR	428586	Identifier	operands		428480	1					
ANR	428587	PrimaryExpression	1		428480	1					
ANR	428588	Identifier	sign		428480	1					
ANR	428589	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		428480	3					
ANR	428590	Condition	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )	1778:6:46381:46450	428480	0	True				
ANR	428591	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )		428480	0		&&			
ANR	428592	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		428480	0		&			
ANR	428593	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428594	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428595	PtrMemberAccess	op -> operands		428480	0					
ANR	428596	Identifier	op		428480	0					
ANR	428597	Identifier	operands		428480	1					
ANR	428598	PrimaryExpression	0		428480	1					
ANR	428599	Identifier	type		428480	1					
ANR	428600	Identifier	OT_GPREG		428480	1					
ANR	428601	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		428480	1					
ANR	428602	UnaryOperator	!		428480	0					
ANR	428603	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		428480	1		&			
ANR	428604	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428605	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428606	PtrMemberAccess	op -> operands		428480	0					
ANR	428607	Identifier	op		428480	0					
ANR	428608	Identifier	operands		428480	1					
ANR	428609	PrimaryExpression	0		428480	1					
ANR	428610	Identifier	type		428480	1					
ANR	428611	Identifier	OT_MEMORY		428480	1					
ANR	428612	CompoundStatement		16:78:396:396	428480	1					
ANR	428613	IfStatement	if ( a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) )		428480	0					
ANR	428614	Condition	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )	1779:7:46462:46549	428480	0	True				
ANR	428615	AndExpression	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )		428480	0		&&			
ANR	428616	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	428617	PtrMemberAccess	a -> bits		428480	0					
ANR	428618	Identifier	a		428480	0					
ANR	428619	Identifier	bits		428480	1					
ANR	428620	PrimaryExpression	64		428480	1					
ANR	428621	InclusiveOrExpression	( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD )		428480	1		|			
ANR	428622	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	0		&			
ANR	428623	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428624	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428625	PtrMemberAccess	op -> operands		428480	0					
ANR	428626	Identifier	op		428480	0					
ANR	428627	Identifier	operands		428480	1					
ANR	428628	PrimaryExpression	0		428480	1					
ANR	428629	Identifier	type		428480	1					
ANR	428630	Identifier	OT_QWORD		428480	1					
ANR	428631	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	1		&			
ANR	428632	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	428633	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428634	PtrMemberAccess	op -> operands		428480	0					
ANR	428635	Identifier	op		428480	0					
ANR	428636	Identifier	operands		428480	1					
ANR	428637	PrimaryExpression	1		428480	1					
ANR	428638	Identifier	type		428480	1					
ANR	428639	Identifier	OT_QWORD		428480	1					
ANR	428640	CompoundStatement		17:97:495:495	428480	1					
ANR	428641	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_CONSTANT ) && op -> operands [ 1 ] . extended )		428480	0					
ANR	428642	Condition	! ( op -> operands [ 1 ] . type & OT_CONSTANT ) && op -> operands [ 1 ] . extended	1780:8:46562:46626	428480	0	True				
ANR	428643	AndExpression	! ( op -> operands [ 1 ] . type & OT_CONSTANT ) && op -> operands [ 1 ] . extended		428480	0		&&			
ANR	428644	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_CONSTANT )		428480	0					
ANR	428645	UnaryOperator	!		428480	0					
ANR	428646	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		428480	1		&			
ANR	428647	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	428648	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428649	PtrMemberAccess	op -> operands		428480	0					
ANR	428650	Identifier	op		428480	0					
ANR	428651	Identifier	operands		428480	1					
ANR	428652	PrimaryExpression	1		428480	1					
ANR	428653	Identifier	type		428480	1					
ANR	428654	Identifier	OT_CONSTANT		428480	1					
ANR	428655	MemberAccess	op -> operands [ 1 ] . extended		428480	1					
ANR	428656	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428657	PtrMemberAccess	op -> operands		428480	0					
ANR	428658	Identifier	op		428480	0					
ANR	428659	Identifier	operands		428480	1					
ANR	428660	PrimaryExpression	1		428480	1					
ANR	428661	Identifier	extended		428480	1					
ANR	428662	CompoundStatement		18:75:572:572	428480	1					
ANR	428663	ExpressionStatement	data [ l ++ ] = 0x49	1781:5:46636:46652	428480	0	True				
ANR	428664	AssignmentExpression	data [ l ++ ] = 0x49		428480	0		=			
ANR	428665	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428666	Identifier	data		428480	0					
ANR	428667	PostIncDecOperationExpression	l ++		428480	1					
ANR	428668	Identifier	l		428480	0					
ANR	428669	IncDec	++		428480	1					
ANR	428670	PrimaryExpression	0x49		428480	1					
ANR	428671	ElseStatement	else		428480	0					
ANR	428672	CompoundStatement		20:11:608:608	428480	0					
ANR	428673	ExpressionStatement	data [ l ++ ] = 0x48	1783:5:46672:46688	428480	0	True				
ANR	428674	AssignmentExpression	data [ l ++ ] = 0x48		428480	0		=			
ANR	428675	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428676	Identifier	data		428480	0					
ANR	428677	PostIncDecOperationExpression	l ++		428480	1					
ANR	428678	Identifier	l		428480	0					
ANR	428679	IncDec	++		428480	1					
ANR	428680	PrimaryExpression	0x48		428480	1					
ANR	428681	ElseStatement	else		428480	0					
ANR	428682	IfStatement	if ( op -> operands [ 0 ] . extended )		428480	0					
ANR	428683	Condition	op -> operands [ 0 ] . extended	1785:14:46710:46733	428480	0	True				
ANR	428684	MemberAccess	op -> operands [ 0 ] . extended		428480	0					
ANR	428685	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428686	PtrMemberAccess	op -> operands		428480	0					
ANR	428687	Identifier	op		428480	0					
ANR	428688	Identifier	operands		428480	1					
ANR	428689	PrimaryExpression	0		428480	1					
ANR	428690	Identifier	extended		428480	1					
ANR	428691	CompoundStatement		23:40:679:679	428480	1					
ANR	428692	ExpressionStatement	data [ l ++ ] = 0x41	1786:4:46742:46758	428480	0	True				
ANR	428693	AssignmentExpression	data [ l ++ ] = 0x41		428480	0		=			
ANR	428694	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428695	Identifier	data		428480	0					
ANR	428696	PostIncDecOperationExpression	l ++		428480	1					
ANR	428697	Identifier	l		428480	0					
ANR	428698	IncDec	++		428480	1					
ANR	428699	PrimaryExpression	0x41		428480	1					
ANR	428700	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		428480	1					
ANR	428701	Condition	op -> operands [ 0 ] . type & OT_WORD	1788:7:46772:46801	428480	0	True				
ANR	428702	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		428480	0		&			
ANR	428703	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428704	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428705	PtrMemberAccess	op -> operands		428480	0					
ANR	428706	Identifier	op		428480	0					
ANR	428707	Identifier	operands		428480	1					
ANR	428708	PrimaryExpression	0		428480	1					
ANR	428709	Identifier	type		428480	1					
ANR	428710	Identifier	OT_WORD		428480	1					
ANR	428711	CompoundStatement		26:39:747:747	428480	1					
ANR	428712	IfStatement	if ( a -> bits > 16 )		428480	0					
ANR	428713	Condition	a -> bits > 16	1789:8:46814:46825	428480	0	True				
ANR	428714	RelationalExpression	a -> bits > 16		428480	0		>			
ANR	428715	PtrMemberAccess	a -> bits		428480	0					
ANR	428716	Identifier	a		428480	0					
ANR	428717	Identifier	bits		428480	1					
ANR	428718	PrimaryExpression	16		428480	1					
ANR	428719	CompoundStatement		27:22:771:771	428480	1					
ANR	428720	ExpressionStatement	data [ l ++ ] = 0x66	1790:5:46835:46851	428480	0	True				
ANR	428721	AssignmentExpression	data [ l ++ ] = 0x66		428480	0		=			
ANR	428722	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428723	Identifier	data		428480	0					
ANR	428724	PostIncDecOperationExpression	l ++		428480	1					
ANR	428725	Identifier	l		428480	0					
ANR	428726	IncDec	++		428480	1					
ANR	428727	PrimaryExpression	0x66		428480	1					
ANR	428728	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		428480	2					
ANR	428729	Condition	op -> operands [ 0 ] . type & OT_BYTE	1793:7:46871:46900	428480	0	True				
ANR	428730	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		428480	0		&			
ANR	428731	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428732	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428733	PtrMemberAccess	op -> operands		428480	0					
ANR	428734	Identifier	op		428480	0					
ANR	428735	Identifier	operands		428480	1					
ANR	428736	PrimaryExpression	0		428480	1					
ANR	428737	Identifier	type		428480	1					
ANR	428738	Identifier	OT_BYTE		428480	1					
ANR	428739	CompoundStatement		31:39:846:846	428480	1					
ANR	428740	ExpressionStatement	data [ l ++ ] = 0xb0 | op -> operands [ 0 ] . reg	1794:4:46909:46947	428480	0	True				
ANR	428741	AssignmentExpression	data [ l ++ ] = 0xb0 | op -> operands [ 0 ] . reg		428480	0		=			
ANR	428742	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428743	Identifier	data		428480	0					
ANR	428744	PostIncDecOperationExpression	l ++		428480	1					
ANR	428745	Identifier	l		428480	0					
ANR	428746	IncDec	++		428480	1					
ANR	428747	InclusiveOrExpression	0xb0 | op -> operands [ 0 ] . reg		428480	1		|			
ANR	428748	PrimaryExpression	0xb0		428480	0					
ANR	428749	MemberAccess	op -> operands [ 0 ] . reg		428480	1					
ANR	428750	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428751	PtrMemberAccess	op -> operands		428480	0					
ANR	428752	Identifier	op		428480	0					
ANR	428753	Identifier	operands		428480	1					
ANR	428754	PrimaryExpression	0		428480	1					
ANR	428755	Identifier	reg		428480	1					
ANR	428756	ExpressionStatement	data [ l ++ ] = immediate	1795:4:46953:46974	428480	1	True				
ANR	428757	AssignmentExpression	data [ l ++ ] = immediate		428480	0		=			
ANR	428758	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428759	Identifier	data		428480	0					
ANR	428760	PostIncDecOperationExpression	l ++		428480	1					
ANR	428761	Identifier	l		428480	0					
ANR	428762	IncDec	++		428480	1					
ANR	428763	Identifier	immediate		428480	1					
ANR	428764	ElseStatement	else		428480	0					
ANR	428765	CompoundStatement		34:10:929:929	428480	0					
ANR	428766	IfStatement	if ( a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX )		428480	0					
ANR	428767	Condition	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX	1797:8:46996:47122	428480	0	True				
ANR	428768	AndExpression	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX		428480	0		&&			
ANR	428769	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	428770	PtrMemberAccess	a -> bits		428480	0					
ANR	428771	Identifier	a		428480	0					
ANR	428772	Identifier	bits		428480	1					
ANR	428773	PrimaryExpression	64		428480	1					
ANR	428774	AndExpression	( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX		428480	1		&&			
ANR	428775	InclusiveOrExpression	( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD )		428480	0		|			
ANR	428776	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	0		&			
ANR	428777	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428778	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428779	PtrMemberAccess	op -> operands		428480	0					
ANR	428780	Identifier	op		428480	0					
ANR	428781	Identifier	operands		428480	1					
ANR	428782	PrimaryExpression	0		428480	1					
ANR	428783	Identifier	type		428480	1					
ANR	428784	Identifier	OT_QWORD		428480	1					
ANR	428785	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	1		&			
ANR	428786	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	428787	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	428788	PtrMemberAccess	op -> operands		428480	0					
ANR	428789	Identifier	op		428480	0					
ANR	428790	Identifier	operands		428480	1					
ANR	428791	PrimaryExpression	1		428480	1					
ANR	428792	Identifier	type		428480	1					
ANR	428793	Identifier	OT_QWORD		428480	1					
ANR	428794	RelationalExpression	immediate < UT32_MAX		428480	1		<			
ANR	428795	Identifier	immediate		428480	0					
ANR	428796	Identifier	UT32_MAX		428480	1					
ANR	428797	CompoundStatement		38:27:1068:1068	428480	1					
ANR	428798	ExpressionStatement	data [ l ++ ] = 0xc7	1801:6:47133:47149	428480	0	True				
ANR	428799	AssignmentExpression	data [ l ++ ] = 0xc7		428480	0		=			
ANR	428800	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428801	Identifier	data		428480	0					
ANR	428802	PostIncDecOperationExpression	l ++		428480	1					
ANR	428803	Identifier	l		428480	0					
ANR	428804	IncDec	++		428480	1					
ANR	428805	PrimaryExpression	0xc7		428480	1					
ANR	428806	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	1802:7:47158:47196	428480	1	True				
ANR	428807	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		428480	0		=			
ANR	428808	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428809	Identifier	data		428480	0					
ANR	428810	PostIncDecOperationExpression	l ++		428480	1					
ANR	428811	Identifier	l		428480	0					
ANR	428812	IncDec	++		428480	1					
ANR	428813	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		428480	1		|			
ANR	428814	PrimaryExpression	0xc0		428480	0					
ANR	428815	MemberAccess	op -> operands [ 0 ] . reg		428480	1					
ANR	428816	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428817	PtrMemberAccess	op -> operands		428480	0					
ANR	428818	Identifier	op		428480	0					
ANR	428819	Identifier	operands		428480	1					
ANR	428820	PrimaryExpression	0		428480	1					
ANR	428821	Identifier	reg		428480	1					
ANR	428822	ElseStatement	else		428480	0					
ANR	428823	CompoundStatement		41:11:1152:1152	428480	0					
ANR	428824	ExpressionStatement	data [ l ++ ] = 0xb8 | op -> operands [ 0 ] . reg	1804:5:47216:47254	428480	0	True				
ANR	428825	AssignmentExpression	data [ l ++ ] = 0xb8 | op -> operands [ 0 ] . reg		428480	0		=			
ANR	428826	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428827	Identifier	data		428480	0					
ANR	428828	PostIncDecOperationExpression	l ++		428480	1					
ANR	428829	Identifier	l		428480	0					
ANR	428830	IncDec	++		428480	1					
ANR	428831	InclusiveOrExpression	0xb8 | op -> operands [ 0 ] . reg		428480	1		|			
ANR	428832	PrimaryExpression	0xb8		428480	0					
ANR	428833	MemberAccess	op -> operands [ 0 ] . reg		428480	1					
ANR	428834	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428835	PtrMemberAccess	op -> operands		428480	0					
ANR	428836	Identifier	op		428480	0					
ANR	428837	Identifier	operands		428480	1					
ANR	428838	PrimaryExpression	0		428480	1					
ANR	428839	Identifier	reg		428480	1					
ANR	428840	ExpressionStatement	data [ l ++ ] = immediate	1806:4:47266:47287	428480	1	True				
ANR	428841	AssignmentExpression	data [ l ++ ] = immediate		428480	0		=			
ANR	428842	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428843	Identifier	data		428480	0					
ANR	428844	PostIncDecOperationExpression	l ++		428480	1					
ANR	428845	Identifier	l		428480	0					
ANR	428846	IncDec	++		428480	1					
ANR	428847	Identifier	immediate		428480	1					
ANR	428848	ExpressionStatement	data [ l ++ ] = immediate >> 8	1807:4:47293:47319	428480	2	True				
ANR	428849	AssignmentExpression	data [ l ++ ] = immediate >> 8		428480	0		=			
ANR	428850	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428851	Identifier	data		428480	0					
ANR	428852	PostIncDecOperationExpression	l ++		428480	1					
ANR	428853	Identifier	l		428480	0					
ANR	428854	IncDec	++		428480	1					
ANR	428855	ShiftExpression	immediate >> 8		428480	1		>>			
ANR	428856	Identifier	immediate		428480	0					
ANR	428857	PrimaryExpression	8		428480	1					
ANR	428858	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_WORD ) )		428480	3					
ANR	428859	Condition	! ( op -> operands [ 0 ] . type & OT_WORD )	1808:8:47329:47361	428480	0	True				
ANR	428860	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_WORD )		428480	0					
ANR	428861	UnaryOperator	!		428480	0					
ANR	428862	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		428480	1		&			
ANR	428863	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428864	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428865	PtrMemberAccess	op -> operands		428480	0					
ANR	428866	Identifier	op		428480	0					
ANR	428867	Identifier	operands		428480	1					
ANR	428868	PrimaryExpression	0		428480	1					
ANR	428869	Identifier	type		428480	1					
ANR	428870	Identifier	OT_WORD		428480	1					
ANR	428871	CompoundStatement		46:43:1307:1307	428480	1					
ANR	428872	ExpressionStatement	data [ l ++ ] = immediate >> 16	1809:5:47371:47398	428480	0	True				
ANR	428873	AssignmentExpression	data [ l ++ ] = immediate >> 16		428480	0		=			
ANR	428874	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428875	Identifier	data		428480	0					
ANR	428876	PostIncDecOperationExpression	l ++		428480	1					
ANR	428877	Identifier	l		428480	0					
ANR	428878	IncDec	++		428480	1					
ANR	428879	ShiftExpression	immediate >> 16		428480	1		>>			
ANR	428880	Identifier	immediate		428480	0					
ANR	428881	PrimaryExpression	16		428480	1					
ANR	428882	ExpressionStatement	data [ l ++ ] = immediate >> 24	1810:5:47405:47432	428480	1	True				
ANR	428883	AssignmentExpression	data [ l ++ ] = immediate >> 24		428480	0		=			
ANR	428884	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428885	Identifier	data		428480	0					
ANR	428886	PostIncDecOperationExpression	l ++		428480	1					
ANR	428887	Identifier	l		428480	0					
ANR	428888	IncDec	++		428480	1					
ANR	428889	ShiftExpression	immediate >> 24		428480	1		>>			
ANR	428890	Identifier	immediate		428480	0					
ANR	428891	PrimaryExpression	24		428480	1					
ANR	428892	IfStatement	if ( a -> bits == 64 && immediate > UT32_MAX )		428480	4					
ANR	428893	Condition	a -> bits == 64 && immediate > UT32_MAX	1812:8:47448:47484	428480	0	True				
ANR	428894	AndExpression	a -> bits == 64 && immediate > UT32_MAX		428480	0		&&			
ANR	428895	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	428896	PtrMemberAccess	a -> bits		428480	0					
ANR	428897	Identifier	a		428480	0					
ANR	428898	Identifier	bits		428480	1					
ANR	428899	PrimaryExpression	64		428480	1					
ANR	428900	RelationalExpression	immediate > UT32_MAX		428480	1		>			
ANR	428901	Identifier	immediate		428480	0					
ANR	428902	Identifier	UT32_MAX		428480	1					
ANR	428903	CompoundStatement		50:47:1430:1430	428480	1					
ANR	428904	ExpressionStatement	data [ l ++ ] = immediate >> 32	1813:5:47494:47521	428480	0	True				
ANR	428905	AssignmentExpression	data [ l ++ ] = immediate >> 32		428480	0		=			
ANR	428906	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428907	Identifier	data		428480	0					
ANR	428908	PostIncDecOperationExpression	l ++		428480	1					
ANR	428909	Identifier	l		428480	0					
ANR	428910	IncDec	++		428480	1					
ANR	428911	ShiftExpression	immediate >> 32		428480	1		>>			
ANR	428912	Identifier	immediate		428480	0					
ANR	428913	PrimaryExpression	32		428480	1					
ANR	428914	ExpressionStatement	data [ l ++ ] = immediate >> 40	1814:5:47528:47555	428480	1	True				
ANR	428915	AssignmentExpression	data [ l ++ ] = immediate >> 40		428480	0		=			
ANR	428916	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428917	Identifier	data		428480	0					
ANR	428918	PostIncDecOperationExpression	l ++		428480	1					
ANR	428919	Identifier	l		428480	0					
ANR	428920	IncDec	++		428480	1					
ANR	428921	ShiftExpression	immediate >> 40		428480	1		>>			
ANR	428922	Identifier	immediate		428480	0					
ANR	428923	PrimaryExpression	40		428480	1					
ANR	428924	ExpressionStatement	data [ l ++ ] = immediate >> 48	1815:5:47562:47589	428480	2	True				
ANR	428925	AssignmentExpression	data [ l ++ ] = immediate >> 48		428480	0		=			
ANR	428926	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428927	Identifier	data		428480	0					
ANR	428928	PostIncDecOperationExpression	l ++		428480	1					
ANR	428929	Identifier	l		428480	0					
ANR	428930	IncDec	++		428480	1					
ANR	428931	ShiftExpression	immediate >> 48		428480	1		>>			
ANR	428932	Identifier	immediate		428480	0					
ANR	428933	PrimaryExpression	48		428480	1					
ANR	428934	ExpressionStatement	data [ l ++ ] = immediate >> 56	1816:5:47596:47623	428480	3	True				
ANR	428935	AssignmentExpression	data [ l ++ ] = immediate >> 56		428480	0		=			
ANR	428936	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	428937	Identifier	data		428480	0					
ANR	428938	PostIncDecOperationExpression	l ++		428480	1					
ANR	428939	Identifier	l		428480	0					
ANR	428940	IncDec	++		428480	1					
ANR	428941	ShiftExpression	immediate >> 56		428480	1		>>			
ANR	428942	Identifier	immediate		428480	0					
ANR	428943	PrimaryExpression	56		428480	1					
ANR	428944	ElseStatement	else		428480	0					
ANR	428945	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		428480	0					
ANR	428946	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1819:13:47649:47680	428480	0	True				
ANR	428947	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		428480	0		&			
ANR	428948	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428949	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428950	PtrMemberAccess	op -> operands		428480	0					
ANR	428951	Identifier	op		428480	0					
ANR	428952	Identifier	operands		428480	1					
ANR	428953	PrimaryExpression	0		428480	1					
ANR	428954	Identifier	type		428480	1					
ANR	428955	Identifier	OT_MEMORY		428480	1					
ANR	428956	CompoundStatement		201:3:5148:5156	428480	1					
ANR	428957	IfStatement	if ( ! op -> operands [ 0 ] . explicit_size )		428480	0					
ANR	428958	Condition	! op -> operands [ 0 ] . explicit_size	1820:7:47692:47721	428480	0	True				
ANR	428959	UnaryOperationExpression	! op -> operands [ 0 ] . explicit_size		428480	0					
ANR	428960	UnaryOperator	!		428480	0					
ANR	428961	MemberAccess	op -> operands [ 0 ] . explicit_size		428480	1					
ANR	428962	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428963	PtrMemberAccess	op -> operands		428480	0					
ANR	428964	Identifier	op		428480	0					
ANR	428965	Identifier	operands		428480	1					
ANR	428966	PrimaryExpression	0		428480	1					
ANR	428967	Identifier	explicit_size		428480	1					
ANR	428968	CompoundStatement		58:39:1667:1667	428480	1					
ANR	428969	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		428480	0					
ANR	428970	Condition	op -> operands [ 0 ] . type & OT_GPREG	1821:8:47734:47764	428480	0	True				
ANR	428971	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		428480	0		&			
ANR	428972	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	428973	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428974	PtrMemberAccess	op -> operands		428480	0					
ANR	428975	Identifier	op		428480	0					
ANR	428976	Identifier	operands		428480	1					
ANR	428977	PrimaryExpression	0		428480	1					
ANR	428978	Identifier	type		428480	1					
ANR	428979	Identifier	OT_GPREG		428480	1					
ANR	428980	CompoundStatement		59:41:1710:1710	428480	1					
ANR	428981	ExpressionStatement	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size = op -> operands [ 0 ] . reg_size	1822:5:47774:47838	428480	0	True				
ANR	428982	AssignmentExpression	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size = op -> operands [ 0 ] . reg_size		428480	0		=			
ANR	428983	MemberAccess	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size		428480	0					
ANR	428984	ArrayIndexing	( ( Opcode * ) op ) -> operands [ 0 ]		428480	0					
ANR	428985	PtrMemberAccess	( ( Opcode * ) op ) -> operands		428480	0					
ANR	428986	CastExpression	( Opcode * ) op		428480	0					
ANR	428987	CastTarget	Opcode *		428480	0					
ANR	428988	Identifier	op		428480	1					
ANR	428989	Identifier	operands		428480	1					
ANR	428990	PrimaryExpression	0		428480	1					
ANR	428991	Identifier	dest_size		428480	1					
ANR	428992	MemberAccess	op -> operands [ 0 ] . reg_size		428480	1					
ANR	428993	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	428994	PtrMemberAccess	op -> operands		428480	0					
ANR	428995	Identifier	op		428480	0					
ANR	428996	Identifier	operands		428480	1					
ANR	428997	PrimaryExpression	0		428480	1					
ANR	428998	Identifier	reg_size		428480	1					
ANR	428999	ElseStatement	else		428480	0					
ANR	429000	CompoundStatement		61:11:1794:1794	428480	0					
ANR	429001	ReturnStatement	return - 1 ;	1824:5:47858:47867	428480	0	True				
ANR	429002	UnaryOperationExpression	- 1		428480	0					
ANR	429003	UnaryOperator	-		428480	0					
ANR	429004	PrimaryExpression	1		428480	1					
ANR	429005	IdentifierDeclStatement	int dest_bits = 8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT ) ;	1828:3:47884:47960	428480	1	True				
ANR	429006	IdentifierDecl	dest_bits = 8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT )		428480	0					
ANR	429007	IdentifierDeclType	int		428480	0					
ANR	429008	Identifier	dest_bits		428480	1					
ANR	429009	AssignmentExpression	dest_bits = 8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT )		428480	2		=			
ANR	429010	Identifier	dest_bits		428480	0					
ANR	429011	MultiplicativeExpression	8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT )		428480	1		*			
ANR	429012	PrimaryExpression	8		428480	0					
ANR	429013	ShiftExpression	( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT		428480	1		>>			
ANR	429014	BitAndExpression	op -> operands [ 0 ] . dest_size & ALL_SIZE		428480	0		&			
ANR	429015	MemberAccess	op -> operands [ 0 ] . dest_size		428480	0					
ANR	429016	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429017	PtrMemberAccess	op -> operands		428480	0					
ANR	429018	Identifier	op		428480	0					
ANR	429019	Identifier	operands		428480	1					
ANR	429020	PrimaryExpression	0		428480	1					
ANR	429021	Identifier	dest_size		428480	1					
ANR	429022	Identifier	ALL_SIZE		428480	1					
ANR	429023	Identifier	OPSIZE_SHIFT		428480	1					
ANR	429024	IdentifierDeclStatement	int reg_bits = 8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT ) ;	1829:3:47965:48039	428480	2	True				
ANR	429025	IdentifierDecl	reg_bits = 8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT )		428480	0					
ANR	429026	IdentifierDeclType	int		428480	0					
ANR	429027	Identifier	reg_bits		428480	1					
ANR	429028	AssignmentExpression	reg_bits = 8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT )		428480	2		=			
ANR	429029	Identifier	reg_bits		428480	0					
ANR	429030	MultiplicativeExpression	8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT )		428480	1		*			
ANR	429031	PrimaryExpression	8		428480	0					
ANR	429032	ShiftExpression	( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT		428480	1		>>			
ANR	429033	BitAndExpression	op -> operands [ 0 ] . reg_size & ALL_SIZE		428480	0		&			
ANR	429034	MemberAccess	op -> operands [ 0 ] . reg_size		428480	0					
ANR	429035	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429036	PtrMemberAccess	op -> operands		428480	0					
ANR	429037	Identifier	op		428480	0					
ANR	429038	Identifier	operands		428480	1					
ANR	429039	PrimaryExpression	0		428480	1					
ANR	429040	Identifier	reg_size		428480	1					
ANR	429041	Identifier	ALL_SIZE		428480	1					
ANR	429042	Identifier	OPSIZE_SHIFT		428480	1					
ANR	429043	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1830:3:48044:48109	428480	3	True				
ANR	429044	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		428480	0					
ANR	429045	IdentifierDeclType	int		428480	0					
ANR	429046	Identifier	offset		428480	1					
ANR	429047	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		428480	2		=			
ANR	429048	Identifier	offset		428480	0					
ANR	429049	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		428480	1		*			
ANR	429050	MemberAccess	op -> operands [ 0 ] . offset		428480	0					
ANR	429051	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429052	PtrMemberAccess	op -> operands		428480	0					
ANR	429053	Identifier	op		428480	0					
ANR	429054	Identifier	operands		428480	1					
ANR	429055	PrimaryExpression	0		428480	1					
ANR	429056	Identifier	offset		428480	1					
ANR	429057	MemberAccess	op -> operands [ 0 ] . offset_sign		428480	1					
ANR	429058	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429059	PtrMemberAccess	op -> operands		428480	0					
ANR	429060	Identifier	op		428480	0					
ANR	429061	Identifier	operands		428480	1					
ANR	429062	PrimaryExpression	0		428480	1					
ANR	429063	Identifier	offset_sign		428480	1					
ANR	429064	IdentifierDeclStatement	bool use_aso = false ;	1833:3:48146:48166	428480	4	True				
ANR	429065	IdentifierDecl	use_aso = false		428480	0					
ANR	429066	IdentifierDeclType	bool		428480	0					
ANR	429067	Identifier	use_aso		428480	1					
ANR	429068	AssignmentExpression	use_aso = false		428480	2		=			
ANR	429069	Identifier	false		428480	0					
ANR	429070	Identifier	false		428480	1					
ANR	429071	IfStatement	if ( reg_bits < a -> bits )		428480	5					
ANR	429072	Condition	reg_bits < a -> bits	1834:7:48175:48192	428480	0	True				
ANR	429073	RelationalExpression	reg_bits < a -> bits		428480	0		<			
ANR	429074	Identifier	reg_bits		428480	0					
ANR	429075	PtrMemberAccess	a -> bits		428480	1					
ANR	429076	Identifier	a		428480	0					
ANR	429077	Identifier	bits		428480	1					
ANR	429078	CompoundStatement		72:27:2138:2138	428480	1					
ANR	429079	ExpressionStatement	use_aso = true	1835:4:48201:48215	428480	0	True				
ANR	429080	AssignmentExpression	use_aso = true		428480	0		=			
ANR	429081	Identifier	use_aso		428480	0					
ANR	429082	Identifier	true		428480	1					
ANR	429083	IdentifierDeclStatement	bool use_oso = false ;	1839:3:48255:48275	428480	6	True				
ANR	429084	IdentifierDecl	use_oso = false		428480	0					
ANR	429085	IdentifierDeclType	bool		428480	0					
ANR	429086	Identifier	use_oso		428480	1					
ANR	429087	AssignmentExpression	use_oso = false		428480	2		=			
ANR	429088	Identifier	false		428480	0					
ANR	429089	Identifier	false		428480	1					
ANR	429090	IfStatement	if ( dest_bits == 16 )		428480	7					
ANR	429091	Condition	dest_bits == 16	1840:7:48284:48298	428480	0	True				
ANR	429092	EqualityExpression	dest_bits == 16		428480	0		==			
ANR	429093	Identifier	dest_bits		428480	0					
ANR	429094	PrimaryExpression	16		428480	1					
ANR	429095	CompoundStatement		78:24:2244:2244	428480	1					
ANR	429096	ExpressionStatement	use_oso = true	1841:4:48307:48321	428480	0	True				
ANR	429097	AssignmentExpression	use_oso = true		428480	0		=			
ANR	429098	Identifier	use_oso		428480	0					
ANR	429099	Identifier	true		428480	1					
ANR	429100	IdentifierDeclStatement	bool rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP ;	1844:3:48332:48382	428480	8	True				
ANR	429101	IdentifierDecl	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		428480	0					
ANR	429102	IdentifierDeclType	bool		428480	0					
ANR	429103	Identifier	rip_rel		428480	1					
ANR	429104	AssignmentExpression	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		428480	2		=			
ANR	429105	Identifier	rip_rel		428480	0					
ANR	429106	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		428480	1		==			
ANR	429107	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429108	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429109	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429110	PtrMemberAccess	op -> operands		428480	0					
ANR	429111	Identifier	op		428480	0					
ANR	429112	Identifier	operands		428480	1					
ANR	429113	PrimaryExpression	0		428480	1					
ANR	429114	Identifier	regs		428480	1					
ANR	429115	PrimaryExpression	0		428480	1					
ANR	429116	Identifier	X86R_RIP		428480	1					
ANR	429117	IdentifierDeclStatement	int rex = 1 << 6 ;	1847:3:48404:48420	428480	9	True				
ANR	429118	IdentifierDecl	rex = 1 << 6		428480	0					
ANR	429119	IdentifierDeclType	int		428480	0					
ANR	429120	Identifier	rex		428480	1					
ANR	429121	AssignmentExpression	rex = 1 << 6		428480	2		=			
ANR	429122	Identifier	rex		428480	0					
ANR	429123	ShiftExpression	1 << 6		428480	1		<<			
ANR	429124	PrimaryExpression	1		428480	0					
ANR	429125	PrimaryExpression	6		428480	1					
ANR	429126	IdentifierDeclStatement	bool use_rex = false ;	1848:3:48425:48445	428480	10	True				
ANR	429127	IdentifierDecl	use_rex = false		428480	0					
ANR	429128	IdentifierDeclType	bool		428480	0					
ANR	429129	Identifier	use_rex		428480	1					
ANR	429130	AssignmentExpression	use_rex = false		428480	2		=			
ANR	429131	Identifier	false		428480	0					
ANR	429132	Identifier	false		428480	1					
ANR	429133	IfStatement	if ( dest_bits == 64 )		428480	11					
ANR	429134	Condition	dest_bits == 64	1849:7:48454:48468	428480	0	True				
ANR	429135	EqualityExpression	dest_bits == 64		428480	0		==			
ANR	429136	Identifier	dest_bits		428480	0					
ANR	429137	PrimaryExpression	64		428480	1					
ANR	429138	CompoundStatement		87:24:2414:2414	428480	1					
ANR	429139	ExpressionStatement	use_rex = true	1850:4:48489:48503	428480	0	True				
ANR	429140	AssignmentExpression	use_rex = true		428480	0		=			
ANR	429141	Identifier	use_rex		428480	0					
ANR	429142	Identifier	true		428480	1					
ANR	429143	ExpressionStatement	rex |= 1 << 3	1851:4:48509:48522	428480	1	True				
ANR	429144	AssignmentExpression	rex |= 1 << 3		428480	0		|=			
ANR	429145	Identifier	rex		428480	0					
ANR	429146	ShiftExpression	1 << 3		428480	1		<<			
ANR	429147	PrimaryExpression	1		428480	0					
ANR	429148	PrimaryExpression	3		428480	1					
ANR	429149	IfStatement	if ( op -> operands [ 0 ] . extended )		428480	12					
ANR	429150	Condition	op -> operands [ 0 ] . extended	1853:7:48536:48559	428480	0	True				
ANR	429151	MemberAccess	op -> operands [ 0 ] . extended		428480	0					
ANR	429152	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429153	PtrMemberAccess	op -> operands		428480	0					
ANR	429154	Identifier	op		428480	0					
ANR	429155	Identifier	operands		428480	1					
ANR	429156	PrimaryExpression	0		428480	1					
ANR	429157	Identifier	extended		428480	1					
ANR	429158	CompoundStatement		91:33:2505:2505	428480	1					
ANR	429159	ExpressionStatement	use_rex = true	1854:4:48579:48593	428480	0	True				
ANR	429160	AssignmentExpression	use_rex = true		428480	0		=			
ANR	429161	Identifier	use_rex		428480	0					
ANR	429162	Identifier	true		428480	1					
ANR	429163	ExpressionStatement	rex |= 1	1855:4:48599:48607	428480	1	True				
ANR	429164	AssignmentExpression	rex |= 1		428480	0		|=			
ANR	429165	Identifier	rex		428480	0					
ANR	429166	PrimaryExpression	1		428480	1					
ANR	429167	IdentifierDeclStatement	int opcode ;	1859:3:48640:48650	428480	13	True				
ANR	429168	IdentifierDecl	opcode		428480	0					
ANR	429169	IdentifierDeclType	int		428480	0					
ANR	429170	Identifier	opcode		428480	1					
ANR	429171	IfStatement	if ( dest_bits == 8 )		428480	14					
ANR	429172	Condition	dest_bits == 8	1860:7:48659:48672	428480	0	True				
ANR	429173	EqualityExpression	dest_bits == 8		428480	0		==			
ANR	429174	Identifier	dest_bits		428480	0					
ANR	429175	PrimaryExpression	8		428480	1					
ANR	429176	CompoundStatement		98:23:2618:2618	428480	1					
ANR	429177	ExpressionStatement	opcode = 0xc6	1861:4:48681:48694	428480	0	True				
ANR	429178	AssignmentExpression	opcode = 0xc6		428480	0		=			
ANR	429179	Identifier	opcode		428480	0					
ANR	429180	PrimaryExpression	0xc6		428480	1					
ANR	429181	ElseStatement	else		428480	0					
ANR	429182	CompoundStatement		100:10:2649:2649	428480	0					
ANR	429183	ExpressionStatement	opcode = 0xc7	1863:4:48712:48725	428480	0	True				
ANR	429184	AssignmentExpression	opcode = 0xc7		428480	0		=			
ANR	429185	Identifier	opcode		428480	0					
ANR	429186	PrimaryExpression	0xc7		428480	1					
ANR	429187	IdentifierDeclStatement	int modrm = 0 ;	1867:3:48765:48778	428480	15	True				
ANR	429188	IdentifierDecl	modrm = 0		428480	0					
ANR	429189	IdentifierDeclType	int		428480	0					
ANR	429190	Identifier	modrm		428480	1					
ANR	429191	AssignmentExpression	modrm = 0		428480	2		=			
ANR	429192	Identifier	modrm		428480	0					
ANR	429193	PrimaryExpression	0		428480	1					
ANR	429194	IdentifierDeclStatement	int mod ;	1868:3:48783:48790	428480	16	True				
ANR	429195	IdentifierDecl	mod		428480	0					
ANR	429196	IdentifierDeclType	int		428480	0					
ANR	429197	Identifier	mod		428480	1					
ANR	429198	IdentifierDeclStatement	int reg = 0 ;	1869:3:48795:48806	428480	17	True				
ANR	429199	IdentifierDecl	reg = 0		428480	0					
ANR	429200	IdentifierDeclType	int		428480	0					
ANR	429201	Identifier	reg		428480	1					
ANR	429202	AssignmentExpression	reg = 0		428480	2		=			
ANR	429203	Identifier	reg		428480	0					
ANR	429204	PrimaryExpression	0		428480	1					
ANR	429205	IdentifierDeclStatement	int rm ;	1870:3:48811:48817	428480	18	True				
ANR	429206	IdentifierDecl	rm		428480	0					
ANR	429207	IdentifierDeclType	int		428480	0					
ANR	429208	Identifier	rm		428480	1					
ANR	429209	IdentifierDeclStatement	bool use_sib = false ;	1871:3:48822:48842	428480	19	True				
ANR	429210	IdentifierDecl	use_sib = false		428480	0					
ANR	429211	IdentifierDeclType	bool		428480	0					
ANR	429212	Identifier	use_sib		428480	1					
ANR	429213	AssignmentExpression	use_sib = false		428480	2		=			
ANR	429214	Identifier	false		428480	0					
ANR	429215	Identifier	false		428480	1					
ANR	429216	IdentifierDeclStatement	int sib ;	1872:3:48847:48854	428480	20	True				
ANR	429217	IdentifierDecl	sib		428480	0					
ANR	429218	IdentifierDeclType	int		428480	0					
ANR	429219	Identifier	sib		428480	1					
ANR	429220	IfStatement	if ( offset == 0 )		428480	21					
ANR	429221	Condition	offset == 0	1874:7:48872:48882	428480	0	True				
ANR	429222	EqualityExpression	offset == 0		428480	0		==			
ANR	429223	Identifier	offset		428480	0					
ANR	429224	PrimaryExpression	0		428480	1					
ANR	429225	CompoundStatement		112:20:2828:2828	428480	1					
ANR	429226	ExpressionStatement	mod = 0	1875:4:48891:48898	428480	0	True				
ANR	429227	AssignmentExpression	mod = 0		428480	0		=			
ANR	429228	Identifier	mod		428480	0					
ANR	429229	PrimaryExpression	0		428480	1					
ANR	429230	ElseStatement	else		428480	0					
ANR	429231	IfStatement	if ( offset < 128 && offset > - 129 )		428480	0					
ANR	429232	Condition	offset < 128 && offset > - 129	1876:14:48914:48942	428480	0	True				
ANR	429233	AndExpression	offset < 128 && offset > - 129		428480	0		&&			
ANR	429234	RelationalExpression	offset < 128		428480	0		<			
ANR	429235	Identifier	offset		428480	0					
ANR	429236	PrimaryExpression	128		428480	1					
ANR	429237	RelationalExpression	offset > - 129		428480	1		>			
ANR	429238	Identifier	offset		428480	0					
ANR	429239	UnaryOperationExpression	- 129		428480	1					
ANR	429240	UnaryOperator	-		428480	0					
ANR	429241	PrimaryExpression	129		428480	1					
ANR	429242	CompoundStatement		114:45:2888:2888	428480	1					
ANR	429243	ExpressionStatement	mod = 1	1877:4:48951:48958	428480	0	True				
ANR	429244	AssignmentExpression	mod = 1		428480	0		=			
ANR	429245	Identifier	mod		428480	0					
ANR	429246	PrimaryExpression	1		428480	1					
ANR	429247	ElseStatement	else		428480	0					
ANR	429248	CompoundStatement		116:10:2913:2913	428480	0					
ANR	429249	ExpressionStatement	mod = 2	1879:4:48976:48983	428480	0	True				
ANR	429250	AssignmentExpression	mod = 2		428480	0		=			
ANR	429251	Identifier	mod		428480	0					
ANR	429252	PrimaryExpression	2		428480	1					
ANR	429253	IfStatement	if ( reg_bits == 16 )		428480	22					
ANR	429254	Condition	reg_bits == 16	1882:7:48998:49011	428480	0	True				
ANR	429255	EqualityExpression	reg_bits == 16		428480	0		==			
ANR	429256	Identifier	reg_bits		428480	0					
ANR	429257	PrimaryExpression	16		428480	1					
ANR	429258	CompoundStatement		120:23:2957:2957	428480	1					
ANR	429259	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		428480	0					
ANR	429260	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1883:8:49024:49095	428480	0	True				
ANR	429261	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		428480	0		&&			
ANR	429262	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		428480	0		==			
ANR	429263	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429264	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429265	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429266	PtrMemberAccess	op -> operands		428480	0					
ANR	429267	Identifier	op		428480	0					
ANR	429268	Identifier	operands		428480	1					
ANR	429269	PrimaryExpression	0		428480	1					
ANR	429270	Identifier	regs		428480	1					
ANR	429271	PrimaryExpression	0		428480	1					
ANR	429272	Identifier	X86R_BX		428480	1					
ANR	429273	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		428480	1		==			
ANR	429274	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429275	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429276	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429277	PtrMemberAccess	op -> operands		428480	0					
ANR	429278	Identifier	op		428480	0					
ANR	429279	Identifier	operands		428480	1					
ANR	429280	PrimaryExpression	0		428480	1					
ANR	429281	Identifier	regs		428480	1					
ANR	429282	PrimaryExpression	1		428480	1					
ANR	429283	Identifier	X86R_SI		428480	1					
ANR	429284	CompoundStatement		121:82:3041:3041	428480	1					
ANR	429285	ExpressionStatement	rm = B0000	1884:5:49105:49115	428480	0	True				
ANR	429286	AssignmentExpression	rm = B0000		428480	0		=			
ANR	429287	Identifier	rm		428480	0					
ANR	429288	Identifier	B0000		428480	1					
ANR	429289	ElseStatement	else		428480	0					
ANR	429290	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		428480	0					
ANR	429291	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1885:15:49132:49203	428480	0	True				
ANR	429292	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		428480	0		&&			
ANR	429293	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		428480	0		==			
ANR	429294	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429295	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429296	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429297	PtrMemberAccess	op -> operands		428480	0					
ANR	429298	Identifier	op		428480	0					
ANR	429299	Identifier	operands		428480	1					
ANR	429300	PrimaryExpression	0		428480	1					
ANR	429301	Identifier	regs		428480	1					
ANR	429302	PrimaryExpression	0		428480	1					
ANR	429303	Identifier	X86R_BX		428480	1					
ANR	429304	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		428480	1		==			
ANR	429305	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429306	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429307	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429308	PtrMemberAccess	op -> operands		428480	0					
ANR	429309	Identifier	op		428480	0					
ANR	429310	Identifier	operands		428480	1					
ANR	429311	PrimaryExpression	0		428480	1					
ANR	429312	Identifier	regs		428480	1					
ANR	429313	PrimaryExpression	1		428480	1					
ANR	429314	Identifier	X86R_DI		428480	1					
ANR	429315	CompoundStatement		123:89:3149:3149	428480	1					
ANR	429316	ExpressionStatement	rm = B0001	1886:5:49213:49223	428480	0	True				
ANR	429317	AssignmentExpression	rm = B0001		428480	0		=			
ANR	429318	Identifier	rm		428480	0					
ANR	429319	Identifier	B0001		428480	1					
ANR	429320	ElseStatement	else		428480	0					
ANR	429321	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		428480	0					
ANR	429322	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1887:15:49240:49311	428480	0	True				
ANR	429323	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		428480	0		&&			
ANR	429324	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		428480	0		==			
ANR	429325	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429326	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429327	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429328	PtrMemberAccess	op -> operands		428480	0					
ANR	429329	Identifier	op		428480	0					
ANR	429330	Identifier	operands		428480	1					
ANR	429331	PrimaryExpression	0		428480	1					
ANR	429332	Identifier	regs		428480	1					
ANR	429333	PrimaryExpression	0		428480	1					
ANR	429334	Identifier	X86R_BP		428480	1					
ANR	429335	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		428480	1		==			
ANR	429336	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429337	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429338	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429339	PtrMemberAccess	op -> operands		428480	0					
ANR	429340	Identifier	op		428480	0					
ANR	429341	Identifier	operands		428480	1					
ANR	429342	PrimaryExpression	0		428480	1					
ANR	429343	Identifier	regs		428480	1					
ANR	429344	PrimaryExpression	1		428480	1					
ANR	429345	Identifier	X86R_SI		428480	1					
ANR	429346	CompoundStatement		125:89:3257:3257	428480	1					
ANR	429347	ExpressionStatement	rm = B0010	1888:5:49321:49331	428480	0	True				
ANR	429348	AssignmentExpression	rm = B0010		428480	0		=			
ANR	429349	Identifier	rm		428480	0					
ANR	429350	Identifier	B0010		428480	1					
ANR	429351	ElseStatement	else		428480	0					
ANR	429352	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		428480	0					
ANR	429353	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1889:15:49348:49419	428480	0	True				
ANR	429354	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		428480	0		&&			
ANR	429355	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		428480	0		==			
ANR	429356	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429357	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429358	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429359	PtrMemberAccess	op -> operands		428480	0					
ANR	429360	Identifier	op		428480	0					
ANR	429361	Identifier	operands		428480	1					
ANR	429362	PrimaryExpression	0		428480	1					
ANR	429363	Identifier	regs		428480	1					
ANR	429364	PrimaryExpression	0		428480	1					
ANR	429365	Identifier	X86R_BP		428480	1					
ANR	429366	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		428480	1		==			
ANR	429367	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429368	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429369	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429370	PtrMemberAccess	op -> operands		428480	0					
ANR	429371	Identifier	op		428480	0					
ANR	429372	Identifier	operands		428480	1					
ANR	429373	PrimaryExpression	0		428480	1					
ANR	429374	Identifier	regs		428480	1					
ANR	429375	PrimaryExpression	1		428480	1					
ANR	429376	Identifier	X86R_DI		428480	1					
ANR	429377	CompoundStatement		127:89:3365:3365	428480	1					
ANR	429378	ExpressionStatement	rm = B0011	1890:5:49429:49439	428480	0	True				
ANR	429379	AssignmentExpression	rm = B0011		428480	0		=			
ANR	429380	Identifier	rm		428480	0					
ANR	429381	Identifier	B0011		428480	1					
ANR	429382	ElseStatement	else		428480	0					
ANR	429383	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		428480	0					
ANR	429384	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1891:15:49456:49522	428480	0	True				
ANR	429385	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1		428480	0		&&			
ANR	429386	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI		428480	0		==			
ANR	429387	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429388	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429389	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429390	PtrMemberAccess	op -> operands		428480	0					
ANR	429391	Identifier	op		428480	0					
ANR	429392	Identifier	operands		428480	1					
ANR	429393	PrimaryExpression	0		428480	1					
ANR	429394	Identifier	regs		428480	1					
ANR	429395	PrimaryExpression	0		428480	1					
ANR	429396	Identifier	X86R_SI		428480	1					
ANR	429397	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		428480	1		==			
ANR	429398	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429399	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429400	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429401	PtrMemberAccess	op -> operands		428480	0					
ANR	429402	Identifier	op		428480	0					
ANR	429403	Identifier	operands		428480	1					
ANR	429404	PrimaryExpression	0		428480	1					
ANR	429405	Identifier	regs		428480	1					
ANR	429406	PrimaryExpression	1		428480	1					
ANR	429407	UnaryOperationExpression	- 1		428480	1					
ANR	429408	UnaryOperator	-		428480	0					
ANR	429409	PrimaryExpression	1		428480	1					
ANR	429410	CompoundStatement		129:84:3468:3468	428480	1					
ANR	429411	ExpressionStatement	rm = B0100	1892:5:49532:49542	428480	0	True				
ANR	429412	AssignmentExpression	rm = B0100		428480	0		=			
ANR	429413	Identifier	rm		428480	0					
ANR	429414	Identifier	B0100		428480	1					
ANR	429415	ElseStatement	else		428480	0					
ANR	429416	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		428480	0					
ANR	429417	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1893:15:49559:49625	428480	0	True				
ANR	429418	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1		428480	0		&&			
ANR	429419	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI		428480	0		==			
ANR	429420	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429421	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429422	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429423	PtrMemberAccess	op -> operands		428480	0					
ANR	429424	Identifier	op		428480	0					
ANR	429425	Identifier	operands		428480	1					
ANR	429426	PrimaryExpression	0		428480	1					
ANR	429427	Identifier	regs		428480	1					
ANR	429428	PrimaryExpression	0		428480	1					
ANR	429429	Identifier	X86R_DI		428480	1					
ANR	429430	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		428480	1		==			
ANR	429431	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429432	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429433	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429434	PtrMemberAccess	op -> operands		428480	0					
ANR	429435	Identifier	op		428480	0					
ANR	429436	Identifier	operands		428480	1					
ANR	429437	PrimaryExpression	0		428480	1					
ANR	429438	Identifier	regs		428480	1					
ANR	429439	PrimaryExpression	1		428480	1					
ANR	429440	UnaryOperationExpression	- 1		428480	1					
ANR	429441	UnaryOperator	-		428480	0					
ANR	429442	PrimaryExpression	1		428480	1					
ANR	429443	CompoundStatement		131:84:3571:3571	428480	1					
ANR	429444	ExpressionStatement	rm = B0101	1894:5:49635:49645	428480	0	True				
ANR	429445	AssignmentExpression	rm = B0101		428480	0		=			
ANR	429446	Identifier	rm		428480	0					
ANR	429447	Identifier	B0101		428480	1					
ANR	429448	ElseStatement	else		428480	0					
ANR	429449	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		428480	0					
ANR	429450	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1	1895:15:49662:49728	428480	0	True				
ANR	429451	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1		428480	0		&&			
ANR	429452	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		428480	0		==			
ANR	429453	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	429454	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429455	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429456	PtrMemberAccess	op -> operands		428480	0					
ANR	429457	Identifier	op		428480	0					
ANR	429458	Identifier	operands		428480	1					
ANR	429459	PrimaryExpression	0		428480	1					
ANR	429460	Identifier	regs		428480	1					
ANR	429461	PrimaryExpression	0		428480	1					
ANR	429462	Identifier	X86R_BX		428480	1					
ANR	429463	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		428480	1		==			
ANR	429464	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429465	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429466	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429467	PtrMemberAccess	op -> operands		428480	0					
ANR	429468	Identifier	op		428480	0					
ANR	429469	Identifier	operands		428480	1					
ANR	429470	PrimaryExpression	0		428480	1					
ANR	429471	Identifier	regs		428480	1					
ANR	429472	PrimaryExpression	1		428480	1					
ANR	429473	UnaryOperationExpression	- 1		428480	1					
ANR	429474	UnaryOperator	-		428480	0					
ANR	429475	PrimaryExpression	1		428480	1					
ANR	429476	CompoundStatement		133:84:3674:3674	428480	1					
ANR	429477	ExpressionStatement	rm = B0111	1896:5:49738:49748	428480	0	True				
ANR	429478	AssignmentExpression	rm = B0111		428480	0		=			
ANR	429479	Identifier	rm		428480	0					
ANR	429480	Identifier	B0111		428480	1					
ANR	429481	ElseStatement	else		428480	0					
ANR	429482	CompoundStatement		135:11:3704:3704	428480	0					
ANR	429483	ReturnStatement	return - 1 ;	1899:5:49832:49841	428480	0	True				
ANR	429484	UnaryOperationExpression	- 1		428480	0					
ANR	429485	UnaryOperator	-		428480	0					
ANR	429486	PrimaryExpression	1		428480	1					
ANR	429487	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1901:4:49853:49889	428480	1	True				
ANR	429488	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		428480	0		=			
ANR	429489	Identifier	modrm		428480	0					
ANR	429490	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		428480	1		|			
ANR	429491	ShiftExpression	mod << 6		428480	0		<<			
ANR	429492	Identifier	mod		428480	0					
ANR	429493	PrimaryExpression	6		428480	1					
ANR	429494	InclusiveOrExpression	( reg << 3 ) | rm		428480	1		|			
ANR	429495	ShiftExpression	reg << 3		428480	0		<<			
ANR	429496	Identifier	reg		428480	0					
ANR	429497	PrimaryExpression	3		428480	1					
ANR	429498	Identifier	rm		428480	1					
ANR	429499	ElseStatement	else		428480	0					
ANR	429500	CompoundStatement		154:4:4142:4186	428480	0					
ANR	429501	IfStatement	if ( op -> operands [ 0 ] . extended )		428480	0					
ANR	429502	Condition	op -> operands [ 0 ] . extended	1904:8:49920:49943	428480	0	True				
ANR	429503	MemberAccess	op -> operands [ 0 ] . extended		428480	0					
ANR	429504	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429505	PtrMemberAccess	op -> operands		428480	0					
ANR	429506	Identifier	op		428480	0					
ANR	429507	Identifier	operands		428480	1					
ANR	429508	PrimaryExpression	0		428480	1					
ANR	429509	Identifier	extended		428480	1					
ANR	429510	CompoundStatement		142:34:3889:3889	428480	1					
ANR	429511	ExpressionStatement	rm = op -> operands [ 0 ] . reg	1905:5:49953:49977	428480	0	True				
ANR	429512	AssignmentExpression	rm = op -> operands [ 0 ] . reg		428480	0		=			
ANR	429513	Identifier	rm		428480	0					
ANR	429514	MemberAccess	op -> operands [ 0 ] . reg		428480	1					
ANR	429515	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429516	PtrMemberAccess	op -> operands		428480	0					
ANR	429517	Identifier	op		428480	0					
ANR	429518	Identifier	operands		428480	1					
ANR	429519	PrimaryExpression	0		428480	1					
ANR	429520	Identifier	reg		428480	1					
ANR	429521	ElseStatement	else		428480	0					
ANR	429522	CompoundStatement		144:11:3933:3933	428480	0					
ANR	429523	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	1907:5:49997:50025	428480	0	True				
ANR	429524	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		428480	0		=			
ANR	429525	Identifier	rm		428480	0					
ANR	429526	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	1					
ANR	429527	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429528	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429529	PtrMemberAccess	op -> operands		428480	0					
ANR	429530	Identifier	op		428480	0					
ANR	429531	Identifier	operands		428480	1					
ANR	429532	PrimaryExpression	0		428480	1					
ANR	429533	Identifier	regs		428480	1					
ANR	429534	PrimaryExpression	0		428480	1					
ANR	429535	IfStatement	if ( rm == 5 && mod == 0 )		428480	1					
ANR	429536	Condition	rm == 5 && mod == 0	1910:8:50100:50118	428480	0	True				
ANR	429537	AndExpression	rm == 5 && mod == 0		428480	0		&&			
ANR	429538	EqualityExpression	rm == 5		428480	0		==			
ANR	429539	Identifier	rm		428480	0					
ANR	429540	PrimaryExpression	5		428480	1					
ANR	429541	EqualityExpression	mod == 0		428480	1		==			
ANR	429542	Identifier	mod		428480	0					
ANR	429543	PrimaryExpression	0		428480	1					
ANR	429544	CompoundStatement		148:29:4064:4064	428480	1					
ANR	429545	ExpressionStatement	mod = 1	1911:5:50128:50135	428480	0	True				
ANR	429546	AssignmentExpression	mod = 1		428480	0		=			
ANR	429547	Identifier	mod		428480	0					
ANR	429548	PrimaryExpression	1		428480	1					
ANR	429549	IdentifierDeclStatement	int index = op -> operands [ 0 ] . regs [ 1 ] ;	1915:4:50158:50193	428480	2	True				
ANR	429550	IdentifierDecl	index = op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	429551	IdentifierDeclType	int		428480	0					
ANR	429552	Identifier	index		428480	1					
ANR	429553	AssignmentExpression	index = op -> operands [ 0 ] . regs [ 1 ]		428480	2		=			
ANR	429554	Identifier	index		428480	0					
ANR	429555	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	1					
ANR	429556	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	429557	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429558	PtrMemberAccess	op -> operands		428480	0					
ANR	429559	Identifier	op		428480	0					
ANR	429560	Identifier	operands		428480	1					
ANR	429561	PrimaryExpression	0		428480	1					
ANR	429562	Identifier	regs		428480	1					
ANR	429563	PrimaryExpression	1		428480	1					
ANR	429564	IdentifierDeclStatement	int scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] ) ;	1916:4:50199:50243	428480	3	True				
ANR	429565	IdentifierDecl	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		428480	0					
ANR	429566	IdentifierDeclType	int		428480	0					
ANR	429567	Identifier	scale		428480	1					
ANR	429568	AssignmentExpression	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		428480	2		=			
ANR	429569	Identifier	scale		428480	0					
ANR	429570	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 1 ] )		428480	1					
ANR	429571	Callee	getsib		428480	0					
ANR	429572	Identifier	getsib		428480	0					
ANR	429573	ArgumentList	op -> operands [ 0 ] . scale [ 1 ]		428480	1					
ANR	429574	Argument	op -> operands [ 0 ] . scale [ 1 ]		428480	0					
ANR	429575	ArrayIndexing	op -> operands [ 0 ] . scale [ 1 ]		428480	0					
ANR	429576	MemberAccess	op -> operands [ 0 ] . scale		428480	0					
ANR	429577	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429578	PtrMemberAccess	op -> operands		428480	0					
ANR	429579	Identifier	op		428480	0					
ANR	429580	Identifier	operands		428480	1					
ANR	429581	PrimaryExpression	0		428480	1					
ANR	429582	Identifier	scale		428480	1					
ANR	429583	PrimaryExpression	1		428480	1					
ANR	429584	IfStatement	if ( index != - 1 )		428480	4					
ANR	429585	Condition	index != - 1	1917:8:50253:50263	428480	0	True				
ANR	429586	EqualityExpression	index != - 1		428480	0		!=			
ANR	429587	Identifier	index		428480	0					
ANR	429588	UnaryOperationExpression	- 1		428480	1					
ANR	429589	UnaryOperator	-		428480	0					
ANR	429590	PrimaryExpression	1		428480	1					
ANR	429591	CompoundStatement		155:21:4209:4209	428480	1					
ANR	429592	ExpressionStatement	use_sib = true	1918:5:50273:50287	428480	0	True				
ANR	429593	AssignmentExpression	use_sib = true		428480	0		=			
ANR	429594	Identifier	use_sib		428480	0					
ANR	429595	Identifier	true		428480	1					
ANR	429596	ExpressionStatement	sib = ( scale << 6 ) | ( index << 3 ) | rm	1919:5:50294:50332	428480	1	True				
ANR	429597	AssignmentExpression	sib = ( scale << 6 ) | ( index << 3 ) | rm		428480	0		=			
ANR	429598	Identifier	sib		428480	0					
ANR	429599	InclusiveOrExpression	( scale << 6 ) | ( index << 3 ) | rm		428480	1		|			
ANR	429600	ShiftExpression	scale << 6		428480	0		<<			
ANR	429601	Identifier	scale		428480	0					
ANR	429602	PrimaryExpression	6		428480	1					
ANR	429603	InclusiveOrExpression	( index << 3 ) | rm		428480	1		|			
ANR	429604	ShiftExpression	index << 3		428480	0		<<			
ANR	429605	Identifier	index		428480	0					
ANR	429606	PrimaryExpression	3		428480	1					
ANR	429607	Identifier	rm		428480	1					
ANR	429608	ElseStatement	else		428480	0					
ANR	429609	IfStatement	if ( rm == 4 )		428480	0					
ANR	429610	Condition	rm == 4	1920:15:50349:50355	428480	0	True				
ANR	429611	EqualityExpression	rm == 4		428480	0		==			
ANR	429612	Identifier	rm		428480	0					
ANR	429613	PrimaryExpression	4		428480	1					
ANR	429614	CompoundStatement		158:24:4301:4301	428480	1					
ANR	429615	ExpressionStatement	use_sib = true	1921:5:50365:50379	428480	0	True				
ANR	429616	AssignmentExpression	use_sib = true		428480	0		=			
ANR	429617	Identifier	use_sib		428480	0					
ANR	429618	Identifier	true		428480	1					
ANR	429619	ExpressionStatement	sib = 0x24	1922:5:50386:50396	428480	1	True				
ANR	429620	AssignmentExpression	sib = 0x24		428480	0		=			
ANR	429621	Identifier	sib		428480	0					
ANR	429622	PrimaryExpression	0x24		428480	1					
ANR	429623	IfStatement	if ( use_sib )		428480	5					
ANR	429624	Condition	use_sib	1924:8:50412:50418	428480	0	True				
ANR	429625	Identifier	use_sib		428480	0					
ANR	429626	CompoundStatement		162:17:4364:4364	428480	1					
ANR	429627	ExpressionStatement	rm = B0100	1925:5:50428:50438	428480	0	True				
ANR	429628	AssignmentExpression	rm = B0100		428480	0		=			
ANR	429629	Identifier	rm		428480	0					
ANR	429630	Identifier	B0100		428480	1					
ANR	429631	IfStatement	if ( rip_rel )		428480	6					
ANR	429632	Condition	rip_rel	1927:8:50454:50460	428480	0	True				
ANR	429633	Identifier	rip_rel		428480	0					
ANR	429634	CompoundStatement		165:17:4406:4406	428480	1					
ANR	429635	ExpressionStatement	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101	1928:5:50470:50511	428480	0	True				
ANR	429636	AssignmentExpression	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101		428480	0		=			
ANR	429637	Identifier	modrm		428480	0					
ANR	429638	InclusiveOrExpression	( B0000 << 6 ) | ( reg << 3 ) | B0101		428480	1		|			
ANR	429639	ShiftExpression	B0000 << 6		428480	0		<<			
ANR	429640	Identifier	B0000		428480	0					
ANR	429641	PrimaryExpression	6		428480	1					
ANR	429642	InclusiveOrExpression	( reg << 3 ) | B0101		428480	1		|			
ANR	429643	ShiftExpression	reg << 3		428480	0		<<			
ANR	429644	Identifier	reg		428480	0					
ANR	429645	PrimaryExpression	3		428480	1					
ANR	429646	Identifier	B0101		428480	1					
ANR	429647	ExpressionStatement	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101	1929:5:50518:50559	428480	1	True				
ANR	429648	AssignmentExpression	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101		428480	0		=			
ANR	429649	Identifier	sib		428480	0					
ANR	429650	InclusiveOrExpression	( scale << 6 ) | ( B0100 << 3 ) | B0101		428480	1		|			
ANR	429651	ShiftExpression	scale << 6		428480	0		<<			
ANR	429652	Identifier	scale		428480	0					
ANR	429653	PrimaryExpression	6		428480	1					
ANR	429654	InclusiveOrExpression	( B0100 << 3 ) | B0101		428480	1		|			
ANR	429655	ShiftExpression	B0100 << 3		428480	0		<<			
ANR	429656	Identifier	B0100		428480	0					
ANR	429657	PrimaryExpression	3		428480	1					
ANR	429658	Identifier	B0101		428480	1					
ANR	429659	ElseStatement	else		428480	0					
ANR	429660	CompoundStatement		168:11:4515:4515	428480	0					
ANR	429661	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1931:5:50579:50615	428480	0	True				
ANR	429662	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		428480	0		=			
ANR	429663	Identifier	modrm		428480	0					
ANR	429664	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		428480	1		|			
ANR	429665	ShiftExpression	mod << 6		428480	0		<<			
ANR	429666	Identifier	mod		428480	0					
ANR	429667	PrimaryExpression	6		428480	1					
ANR	429668	InclusiveOrExpression	( reg << 3 ) | rm		428480	1		|			
ANR	429669	ShiftExpression	reg << 3		428480	0		<<			
ANR	429670	Identifier	reg		428480	0					
ANR	429671	PrimaryExpression	3		428480	1					
ANR	429672	Identifier	rm		428480	1					
ANR	429673	IfStatement	if ( use_aso )		428480	23					
ANR	429674	Condition	use_aso	1936:7:50664:50670	428480	0	True				
ANR	429675	Identifier	use_aso		428480	0					
ANR	429676	CompoundStatement		174:16:4616:4616	428480	1					
ANR	429677	ExpressionStatement	data [ l ++ ] = 0x67	1937:4:50679:50695	428480	0	True				
ANR	429678	AssignmentExpression	data [ l ++ ] = 0x67		428480	0		=			
ANR	429679	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429680	Identifier	data		428480	0					
ANR	429681	PostIncDecOperationExpression	l ++		428480	1					
ANR	429682	Identifier	l		428480	0					
ANR	429683	IncDec	++		428480	1					
ANR	429684	PrimaryExpression	0x67		428480	1					
ANR	429685	IfStatement	if ( use_oso )		428480	24					
ANR	429686	Condition	use_oso	1939:7:50709:50715	428480	0	True				
ANR	429687	Identifier	use_oso		428480	0					
ANR	429688	CompoundStatement		177:16:4661:4661	428480	1					
ANR	429689	ExpressionStatement	data [ l ++ ] = 0x66	1940:4:50724:50740	428480	0	True				
ANR	429690	AssignmentExpression	data [ l ++ ] = 0x66		428480	0		=			
ANR	429691	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429692	Identifier	data		428480	0					
ANR	429693	PostIncDecOperationExpression	l ++		428480	1					
ANR	429694	Identifier	l		428480	0					
ANR	429695	IncDec	++		428480	1					
ANR	429696	PrimaryExpression	0x66		428480	1					
ANR	429697	IfStatement	if ( use_rex )		428480	25					
ANR	429698	Condition	use_rex	1942:7:50754:50760	428480	0	True				
ANR	429699	Identifier	use_rex		428480	0					
ANR	429700	CompoundStatement		180:16:4706:4706	428480	1					
ANR	429701	ExpressionStatement	data [ l ++ ] = rex	1943:4:50769:50784	428480	0	True				
ANR	429702	AssignmentExpression	data [ l ++ ] = rex		428480	0		=			
ANR	429703	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429704	Identifier	data		428480	0					
ANR	429705	PostIncDecOperationExpression	l ++		428480	1					
ANR	429706	Identifier	l		428480	0					
ANR	429707	IncDec	++		428480	1					
ANR	429708	Identifier	rex		428480	1					
ANR	429709	ExpressionStatement	data [ l ++ ] = opcode	1945:3:50794:50812	428480	26	True				
ANR	429710	AssignmentExpression	data [ l ++ ] = opcode		428480	0		=			
ANR	429711	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429712	Identifier	data		428480	0					
ANR	429713	PostIncDecOperationExpression	l ++		428480	1					
ANR	429714	Identifier	l		428480	0					
ANR	429715	IncDec	++		428480	1					
ANR	429716	Identifier	opcode		428480	1					
ANR	429717	ExpressionStatement	data [ l ++ ] = modrm	1946:3:50817:50834	428480	27	True				
ANR	429718	AssignmentExpression	data [ l ++ ] = modrm		428480	0		=			
ANR	429719	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429720	Identifier	data		428480	0					
ANR	429721	PostIncDecOperationExpression	l ++		428480	1					
ANR	429722	Identifier	l		428480	0					
ANR	429723	IncDec	++		428480	1					
ANR	429724	Identifier	modrm		428480	1					
ANR	429725	IfStatement	if ( use_sib )		428480	28					
ANR	429726	Condition	use_sib	1947:7:50843:50849	428480	0	True				
ANR	429727	Identifier	use_sib		428480	0					
ANR	429728	CompoundStatement		185:16:4795:4795	428480	1					
ANR	429729	ExpressionStatement	data [ l ++ ] = sib	1948:4:50858:50873	428480	0	True				
ANR	429730	AssignmentExpression	data [ l ++ ] = sib		428480	0		=			
ANR	429731	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429732	Identifier	data		428480	0					
ANR	429733	PostIncDecOperationExpression	l ++		428480	1					
ANR	429734	Identifier	l		428480	0					
ANR	429735	IncDec	++		428480	1					
ANR	429736	Identifier	sib		428480	1					
ANR	429737	IfStatement	if ( mod == 1 )		428480	29					
ANR	429738	Condition	mod == 1	1951:7:50899:50906	428480	0	True				
ANR	429739	EqualityExpression	mod == 1		428480	0		==			
ANR	429740	Identifier	mod		428480	0					
ANR	429741	PrimaryExpression	1		428480	1					
ANR	429742	CompoundStatement		189:17:4852:4852	428480	1					
ANR	429743	ExpressionStatement	data [ l ++ ] = offset	1952:4:50915:50933	428480	0	True				
ANR	429744	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	429745	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429746	Identifier	data		428480	0					
ANR	429747	PostIncDecOperationExpression	l ++		428480	1					
ANR	429748	Identifier	l		428480	0					
ANR	429749	IncDec	++		428480	1					
ANR	429750	Identifier	offset		428480	1					
ANR	429751	ElseStatement	else		428480	0					
ANR	429752	IfStatement	if ( reg_bits == 16 && mod == 2 )		428480	0					
ANR	429753	Condition	reg_bits == 16 && mod == 2	1953:14:50949:50974	428480	0	True				
ANR	429754	AndExpression	reg_bits == 16 && mod == 2		428480	0		&&			
ANR	429755	EqualityExpression	reg_bits == 16		428480	0		==			
ANR	429756	Identifier	reg_bits		428480	0					
ANR	429757	PrimaryExpression	16		428480	1					
ANR	429758	EqualityExpression	mod == 2		428480	1		==			
ANR	429759	Identifier	mod		428480	0					
ANR	429760	PrimaryExpression	2		428480	1					
ANR	429761	CompoundStatement		191:42:4920:4920	428480	1					
ANR	429762	ExpressionStatement	data [ l ++ ] = offset	1954:4:50983:51001	428480	0	True				
ANR	429763	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	429764	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429765	Identifier	data		428480	0					
ANR	429766	PostIncDecOperationExpression	l ++		428480	1					
ANR	429767	Identifier	l		428480	0					
ANR	429768	IncDec	++		428480	1					
ANR	429769	Identifier	offset		428480	1					
ANR	429770	ExpressionStatement	data [ l ++ ] = offset >> 8	1955:4:51007:51030	428480	1	True				
ANR	429771	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	429772	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429773	Identifier	data		428480	0					
ANR	429774	PostIncDecOperationExpression	l ++		428480	1					
ANR	429775	Identifier	l		428480	0					
ANR	429776	IncDec	++		428480	1					
ANR	429777	ShiftExpression	offset >> 8		428480	1		>>			
ANR	429778	Identifier	offset		428480	0					
ANR	429779	PrimaryExpression	8		428480	1					
ANR	429780	ElseStatement	else		428480	0					
ANR	429781	IfStatement	if ( mod == 2 || rip_rel )		428480	0					
ANR	429782	Condition	mod == 2 || rip_rel	1956:14:51046:51064	428480	0	True				
ANR	429783	OrExpression	mod == 2 || rip_rel		428480	0		||			
ANR	429784	EqualityExpression	mod == 2		428480	0		==			
ANR	429785	Identifier	mod		428480	0					
ANR	429786	PrimaryExpression	2		428480	1					
ANR	429787	Identifier	rip_rel		428480	1					
ANR	429788	CompoundStatement		194:35:5010:5010	428480	1					
ANR	429789	ExpressionStatement	data [ l ++ ] = offset	1957:4:51073:51091	428480	0	True				
ANR	429790	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	429791	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429792	Identifier	data		428480	0					
ANR	429793	PostIncDecOperationExpression	l ++		428480	1					
ANR	429794	Identifier	l		428480	0					
ANR	429795	IncDec	++		428480	1					
ANR	429796	Identifier	offset		428480	1					
ANR	429797	ExpressionStatement	data [ l ++ ] = offset >> 8	1958:4:51097:51120	428480	1	True				
ANR	429798	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	429799	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429800	Identifier	data		428480	0					
ANR	429801	PostIncDecOperationExpression	l ++		428480	1					
ANR	429802	Identifier	l		428480	0					
ANR	429803	IncDec	++		428480	1					
ANR	429804	ShiftExpression	offset >> 8		428480	1		>>			
ANR	429805	Identifier	offset		428480	0					
ANR	429806	PrimaryExpression	8		428480	1					
ANR	429807	ExpressionStatement	data [ l ++ ] = offset >> 16	1959:4:51126:51150	428480	2	True				
ANR	429808	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	429809	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429810	Identifier	data		428480	0					
ANR	429811	PostIncDecOperationExpression	l ++		428480	1					
ANR	429812	Identifier	l		428480	0					
ANR	429813	IncDec	++		428480	1					
ANR	429814	ShiftExpression	offset >> 16		428480	1		>>			
ANR	429815	Identifier	offset		428480	0					
ANR	429816	PrimaryExpression	16		428480	1					
ANR	429817	ExpressionStatement	data [ l ++ ] = offset >> 24	1960:4:51156:51180	428480	3	True				
ANR	429818	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	429819	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429820	Identifier	data		428480	0					
ANR	429821	PostIncDecOperationExpression	l ++		428480	1					
ANR	429822	Identifier	l		428480	0					
ANR	429823	IncDec	++		428480	1					
ANR	429824	ShiftExpression	offset >> 24		428480	1		>>			
ANR	429825	Identifier	offset		428480	0					
ANR	429826	PrimaryExpression	24		428480	1					
ANR	429827	IdentifierDeclStatement	int byte ;	1963:3:51205:51213	428480	30	True				
ANR	429828	IdentifierDecl	byte		428480	0					
ANR	429829	IdentifierDeclType	int		428480	0					
ANR	429830	Identifier	byte		428480	1					
ANR	429831	ForStatement	for ( byte = 0 ; byte < dest_bits && byte < 32 ; byte += 8 )		428480	31					
ANR	429832	ForInit	byte = 0 ;	1964:8:51223:51231	428480	0	True				
ANR	429833	AssignmentExpression	byte = 0		428480	0		=			
ANR	429834	Identifier	byte		428480	0					
ANR	429835	PrimaryExpression	0		428480	1					
ANR	429836	Condition	byte < dest_bits && byte < 32	1964:18:51233:51261	428480	1	True				
ANR	429837	AndExpression	byte < dest_bits && byte < 32		428480	0		&&			
ANR	429838	RelationalExpression	byte < dest_bits		428480	0		<			
ANR	429839	Identifier	byte		428480	0					
ANR	429840	Identifier	dest_bits		428480	1					
ANR	429841	RelationalExpression	byte < 32		428480	1		<			
ANR	429842	Identifier	byte		428480	0					
ANR	429843	PrimaryExpression	32		428480	1					
ANR	429844	AssignmentExpression	byte += 8	1964:49:51264:51272	428480	2	True	+=			
ANR	429845	Identifier	byte		428480	0					
ANR	429846	PrimaryExpression	8		428480	1					
ANR	429847	CompoundStatement		202:60:5218:5218	428480	3					
ANR	429848	ExpressionStatement	data [ l ++ ] = ( immediate >> byte )	1965:4:51281:51312	428480	0	True				
ANR	429849	AssignmentExpression	data [ l ++ ] = ( immediate >> byte )		428480	0		=			
ANR	429850	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	429851	Identifier	data		428480	0					
ANR	429852	PostIncDecOperationExpression	l ++		428480	1					
ANR	429853	Identifier	l		428480	0					
ANR	429854	IncDec	++		428480	1					
ANR	429855	ShiftExpression	immediate >> byte		428480	1		>>			
ANR	429856	Identifier	immediate		428480	0					
ANR	429857	Identifier	byte		428480	1					
ANR	429858	ElseStatement	else		428480	0					
ANR	429859	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGALL && ! ( op -> operands [ 1 ] . type & OT_MEMORY ) )		428480	0					
ANR	429860	Condition	op -> operands [ 1 ] . type & OT_REGALL && ! ( op -> operands [ 1 ] . type & OT_MEMORY )	1968:12:51335:51409	428480	0	True				
ANR	429861	AndExpression	op -> operands [ 1 ] . type & OT_REGALL && ! ( op -> operands [ 1 ] . type & OT_MEMORY )		428480	0		&&			
ANR	429862	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		428480	0		&			
ANR	429863	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	429864	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	429865	PtrMemberAccess	op -> operands		428480	0					
ANR	429866	Identifier	op		428480	0					
ANR	429867	Identifier	operands		428480	1					
ANR	429868	PrimaryExpression	1		428480	1					
ANR	429869	Identifier	type		428480	1					
ANR	429870	Identifier	OT_REGALL		428480	1					
ANR	429871	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		428480	1					
ANR	429872	UnaryOperator	!		428480	0					
ANR	429873	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		428480	1		&			
ANR	429874	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	429875	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	429876	PtrMemberAccess	op -> operands		428480	0					
ANR	429877	Identifier	op		428480	0					
ANR	429878	Identifier	operands		428480	1					
ANR	429879	PrimaryExpression	1		428480	1					
ANR	429880	Identifier	type		428480	1					
ANR	429881	Identifier	OT_MEMORY		428480	1					
ANR	429882	CompoundStatement		207:41:5355:5355	428480	1					
ANR	429883	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		428480	0					
ANR	429884	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	1970:6:51420:51453	428480	0	True				
ANR	429885	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		428480	0		&			
ANR	429886	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	429887	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429888	PtrMemberAccess	op -> operands		428480	0					
ANR	429889	Identifier	op		428480	0					
ANR	429890	Identifier	operands		428480	1					
ANR	429891	PrimaryExpression	0		428480	1					
ANR	429892	Identifier	type		428480	1					
ANR	429893	Identifier	OT_CONSTANT		428480	1					
ANR	429894	CompoundStatement		208:42:5399:5399	428480	1					
ANR	429895	ReturnStatement	return - 1 ;	1971:3:51461:51470	428480	0	True				
ANR	429896	UnaryOperationExpression	- 1		428480	0					
ANR	429897	UnaryOperator	-		428480	0					
ANR	429898	PrimaryExpression	1		428480	1					
ANR	429899	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG && op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG )		428480	1					
ANR	429900	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG && op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG	1973:6:51482:51589	428480	0	True				
ANR	429901	AndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG && op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		428480	0		&&			
ANR	429902	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG		428480	0		&			
ANR	429903	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	429904	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429905	PtrMemberAccess	op -> operands		428480	0					
ANR	429906	Identifier	op		428480	0					
ANR	429907	Identifier	operands		428480	1					
ANR	429908	PrimaryExpression	0		428480	1					
ANR	429909	Identifier	type		428480	1					
ANR	429910	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		428480	1		&			
ANR	429911	Identifier	OT_REGTYPE		428480	0					
ANR	429912	Identifier	OT_SEGMENTREG		428480	1					
ANR	429913	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		428480	1		&			
ANR	429914	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	429915	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	429916	PtrMemberAccess	op -> operands		428480	0					
ANR	429917	Identifier	op		428480	0					
ANR	429918	Identifier	operands		428480	1					
ANR	429919	PrimaryExpression	1		428480	1					
ANR	429920	Identifier	type		428480	1					
ANR	429921	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		428480	1		&			
ANR	429922	Identifier	OT_REGTYPE		428480	0					
ANR	429923	Identifier	OT_SEGMENTREG		428480	1					
ANR	429924	CompoundStatement		212:57:5535:5535	428480	1					
ANR	429925	ReturnStatement	return - 1 ;	1975:4:51598:51607	428480	0	True				
ANR	429926	UnaryOperationExpression	- 1		428480	0					
ANR	429927	UnaryOperator	-		428480	0					
ANR	429928	PrimaryExpression	1		428480	1					
ANR	429929	IfStatement	if ( is_debug_or_control ( op -> operands [ 0 ] ) && ! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG ) )		428480	2					
ANR	429930	Condition	is_debug_or_control ( op -> operands [ 0 ] ) && ! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG )	1977:6:51619:51711	428480	0	True				
ANR	429931	AndExpression	is_debug_or_control ( op -> operands [ 0 ] ) && ! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG )		428480	0		&&			
ANR	429932	CallExpression	is_debug_or_control ( op -> operands [ 0 ] )		428480	0					
ANR	429933	Callee	is_debug_or_control		428480	0					
ANR	429934	Identifier	is_debug_or_control		428480	0					
ANR	429935	ArgumentList	op -> operands [ 0 ]		428480	1					
ANR	429936	Argument	op -> operands [ 0 ]		428480	0					
ANR	429937	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429938	PtrMemberAccess	op -> operands		428480	0					
ANR	429939	Identifier	op		428480	0					
ANR	429940	Identifier	operands		428480	1					
ANR	429941	PrimaryExpression	0		428480	1					
ANR	429942	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG )		428480	1					
ANR	429943	UnaryOperator	!		428480	0					
ANR	429944	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG		428480	1		&			
ANR	429945	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	429946	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	429947	PtrMemberAccess	op -> operands		428480	0					
ANR	429948	Identifier	op		428480	0					
ANR	429949	Identifier	operands		428480	1					
ANR	429950	PrimaryExpression	1		428480	1					
ANR	429951	Identifier	type		428480	1					
ANR	429952	BitAndExpression	OT_REGTYPE & OT_GPREG		428480	1		&			
ANR	429953	Identifier	OT_REGTYPE		428480	0					
ANR	429954	Identifier	OT_GPREG		428480	1					
ANR	429955	CompoundStatement		216:54:5657:5657	428480	1					
ANR	429956	ReturnStatement	return - 1 ;	1979:3:51719:51728	428480	0	True				
ANR	429957	UnaryOperationExpression	- 1		428480	0					
ANR	429958	UnaryOperator	-		428480	0					
ANR	429959	PrimaryExpression	1		428480	1					
ANR	429960	IfStatement	if ( is_debug_or_control ( op -> operands [ 1 ] ) && ! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG ) )		428480	3					
ANR	429961	Condition	is_debug_or_control ( op -> operands [ 1 ] ) && ! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG )	1981:6:51740:51830	428480	0	True				
ANR	429962	AndExpression	is_debug_or_control ( op -> operands [ 1 ] ) && ! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG )		428480	0		&&			
ANR	429963	CallExpression	is_debug_or_control ( op -> operands [ 1 ] )		428480	0					
ANR	429964	Callee	is_debug_or_control		428480	0					
ANR	429965	Identifier	is_debug_or_control		428480	0					
ANR	429966	ArgumentList	op -> operands [ 1 ]		428480	1					
ANR	429967	Argument	op -> operands [ 1 ]		428480	0					
ANR	429968	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	429969	PtrMemberAccess	op -> operands		428480	0					
ANR	429970	Identifier	op		428480	0					
ANR	429971	Identifier	operands		428480	1					
ANR	429972	PrimaryExpression	1		428480	1					
ANR	429973	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG )		428480	1					
ANR	429974	UnaryOperator	!		428480	0					
ANR	429975	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG		428480	1		&			
ANR	429976	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	429977	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429978	PtrMemberAccess	op -> operands		428480	0					
ANR	429979	Identifier	op		428480	0					
ANR	429980	Identifier	operands		428480	1					
ANR	429981	PrimaryExpression	0		428480	1					
ANR	429982	Identifier	type		428480	1					
ANR	429983	BitAndExpression	OT_REGTYPE & OT_GPREG		428480	1		&			
ANR	429984	Identifier	OT_REGTYPE		428480	0					
ANR	429985	Identifier	OT_GPREG		428480	1					
ANR	429986	CompoundStatement		220:52:5776:5776	428480	1					
ANR	429987	ReturnStatement	return - 1 ;	1983:3:51838:51847	428480	0	True				
ANR	429988	UnaryOperationExpression	- 1		428480	0					
ANR	429989	UnaryOperator	-		428480	0					
ANR	429990	PrimaryExpression	1		428480	1					
ANR	429991	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_REGTYPE )		428480	4					
ANR	429992	Condition	op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_REGTYPE	1986:6:51886:51955	428480	0	True				
ANR	429993	AndExpression	op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_REGTYPE		428480	0		&&			
ANR	429994	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE		428480	0		&			
ANR	429995	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	429996	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	429997	PtrMemberAccess	op -> operands		428480	0					
ANR	429998	Identifier	op		428480	0					
ANR	429999	Identifier	operands		428480	1					
ANR	430000	PrimaryExpression	0		428480	1					
ANR	430001	Identifier	type		428480	1					
ANR	430002	Identifier	OT_REGTYPE		428480	1					
ANR	430003	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE		428480	1		&			
ANR	430004	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430005	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430006	PtrMemberAccess	op -> operands		428480	0					
ANR	430007	Identifier	op		428480	0					
ANR	430008	Identifier	operands		428480	1					
ANR	430009	PrimaryExpression	1		428480	1					
ANR	430010	Identifier	type		428480	1					
ANR	430011	Identifier	OT_REGTYPE		428480	1					
ANR	430012	CompoundStatement		224:78:5901:5901	428480	1					
ANR	430013	IfStatement	if ( ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE ) ) )		428480	0					
ANR	430014	Condition	! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE ) )	1987:7:51967:52041	428480	0	True				
ANR	430015	UnaryOperationExpression	! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE ) )		428480	0					
ANR	430016	UnaryOperator	!		428480	0					
ANR	430017	BitAndExpression	( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE )		428480	1		&			
ANR	430018	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		428480	0		&			
ANR	430019	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430020	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430021	PtrMemberAccess	op -> operands		428480	0					
ANR	430022	Identifier	op		428480	0					
ANR	430023	Identifier	operands		428480	1					
ANR	430024	PrimaryExpression	0		428480	1					
ANR	430025	Identifier	type		428480	1					
ANR	430026	Identifier	ALL_SIZE		428480	1					
ANR	430027	BitAndExpression	op -> operands [ 1 ] . type & ALL_SIZE		428480	1		&			
ANR	430028	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430029	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430030	PtrMemberAccess	op -> operands		428480	0					
ANR	430031	Identifier	op		428480	0					
ANR	430032	Identifier	operands		428480	1					
ANR	430033	PrimaryExpression	1		428480	1					
ANR	430034	Identifier	type		428480	1					
ANR	430035	Identifier	ALL_SIZE		428480	1					
ANR	430036	CompoundStatement		226:39:5987:5987	428480	1					
ANR	430037	ReturnStatement	return - 1 ;	1989:4:52050:52059	428480	0	True				
ANR	430038	UnaryOperationExpression	- 1		428480	0					
ANR	430039	UnaryOperator	-		428480	0					
ANR	430040	PrimaryExpression	1		428480	1					
ANR	430041	IfStatement	if ( a -> bits == 64 )		428480	5					
ANR	430042	Condition	a -> bits == 64	1993:6:52077:52089	428480	0	True				
ANR	430043	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	430044	PtrMemberAccess	a -> bits		428480	0					
ANR	430045	Identifier	a		428480	0					
ANR	430046	Identifier	bits		428480	1					
ANR	430047	PrimaryExpression	64		428480	1					
ANR	430048	CompoundStatement		231:21:6035:6035	428480	1					
ANR	430049	IfStatement	if ( op -> operands [ 0 ] . extended )		428480	0					
ANR	430050	Condition	op -> operands [ 0 ] . extended	1994:7:52101:52124	428480	0	True				
ANR	430051	MemberAccess	op -> operands [ 0 ] . extended		428480	0					
ANR	430052	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430053	PtrMemberAccess	op -> operands		428480	0					
ANR	430054	Identifier	op		428480	0					
ANR	430055	Identifier	operands		428480	1					
ANR	430056	PrimaryExpression	0		428480	1					
ANR	430057	Identifier	extended		428480	1					
ANR	430058	CompoundStatement		232:33:6070:6070	428480	1					
ANR	430059	ExpressionStatement	rex = 1	1995:4:52133:52140	428480	0	True				
ANR	430060	AssignmentExpression	rex = 1		428480	0		=			
ANR	430061	Identifier	rex		428480	0					
ANR	430062	PrimaryExpression	1		428480	1					
ANR	430063	IfStatement	if ( op -> operands [ 1 ] . extended )		428480	1					
ANR	430064	Condition	op -> operands [ 1 ] . extended	1997:7:52154:52177	428480	0	True				
ANR	430065	MemberAccess	op -> operands [ 1 ] . extended		428480	0					
ANR	430066	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430067	PtrMemberAccess	op -> operands		428480	0					
ANR	430068	Identifier	op		428480	0					
ANR	430069	Identifier	operands		428480	1					
ANR	430070	PrimaryExpression	1		428480	1					
ANR	430071	Identifier	extended		428480	1					
ANR	430072	CompoundStatement		235:33:6123:6123	428480	1					
ANR	430073	ExpressionStatement	rex += 4	1998:4:52186:52194	428480	0	True				
ANR	430074	AssignmentExpression	rex += 4		428480	0		+=			
ANR	430075	Identifier	rex		428480	0					
ANR	430076	PrimaryExpression	4		428480	1					
ANR	430077	IfStatement	if ( op -> operands [ 1 ] . type & OT_QWORD )		428480	2					
ANR	430078	Condition	op -> operands [ 1 ] . type & OT_QWORD	2000:7:52208:52238	428480	0	True				
ANR	430079	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	0		&			
ANR	430080	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430081	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430082	PtrMemberAccess	op -> operands		428480	0					
ANR	430083	Identifier	op		428480	0					
ANR	430084	Identifier	operands		428480	1					
ANR	430085	PrimaryExpression	1		428480	1					
ANR	430086	Identifier	type		428480	1					
ANR	430087	Identifier	OT_QWORD		428480	1					
ANR	430088	CompoundStatement		238:40:6184:6184	428480	1					
ANR	430089	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_QWORD ) )		428480	0					
ANR	430090	Condition	! ( op -> operands [ 0 ] . type & OT_QWORD )	2001:8:52251:52284	428480	0	True				
ANR	430091	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_QWORD )		428480	0					
ANR	430092	UnaryOperator	!		428480	0					
ANR	430093	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	1		&			
ANR	430094	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430095	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430096	PtrMemberAccess	op -> operands		428480	0					
ANR	430097	Identifier	op		428480	0					
ANR	430098	Identifier	operands		428480	1					
ANR	430099	PrimaryExpression	0		428480	1					
ANR	430100	Identifier	type		428480	1					
ANR	430101	Identifier	OT_QWORD		428480	1					
ANR	430102	CompoundStatement		239:44:6230:6230	428480	1					
ANR	430103	ExpressionStatement	data [ l ++ ] = 0x67	2002:5:52294:52310	428480	0	True				
ANR	430104	AssignmentExpression	data [ l ++ ] = 0x67		428480	0		=			
ANR	430105	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430106	Identifier	data		428480	0					
ANR	430107	PostIncDecOperationExpression	l ++		428480	1					
ANR	430108	Identifier	l		428480	0					
ANR	430109	IncDec	++		428480	1					
ANR	430110	PrimaryExpression	0x67		428480	1					
ANR	430111	ExpressionStatement	data [ l ++ ] = 0x48	2003:5:52317:52333	428480	1	True				
ANR	430112	AssignmentExpression	data [ l ++ ] = 0x48		428480	0		=			
ANR	430113	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430114	Identifier	data		428480	0					
ANR	430115	PostIncDecOperationExpression	l ++		428480	1					
ANR	430116	Identifier	l		428480	0					
ANR	430117	IncDec	++		428480	1					
ANR	430118	PrimaryExpression	0x48		428480	1					
ANR	430119	IfStatement	if ( op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD )		428480	3					
ANR	430120	Condition	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD	2006:7:52353:52422	428480	0	True				
ANR	430121	AndExpression	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD		428480	0		&&			
ANR	430122	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	0		&			
ANR	430123	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430124	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430125	PtrMemberAccess	op -> operands		428480	0					
ANR	430126	Identifier	op		428480	0					
ANR	430127	Identifier	operands		428480	1					
ANR	430128	PrimaryExpression	1		428480	1					
ANR	430129	Identifier	type		428480	1					
ANR	430130	Identifier	OT_QWORD		428480	1					
ANR	430131	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	1		&			
ANR	430132	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430133	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430134	PtrMemberAccess	op -> operands		428480	0					
ANR	430135	Identifier	op		428480	0					
ANR	430136	Identifier	operands		428480	1					
ANR	430137	PrimaryExpression	0		428480	1					
ANR	430138	Identifier	type		428480	1					
ANR	430139	Identifier	OT_QWORD		428480	1					
ANR	430140	CompoundStatement		245:37:6368:6368	428480	1					
ANR	430141	ExpressionStatement	data [ l ++ ] = 0x48 | rex	2008:4:52431:52453	428480	0	True				
ANR	430142	AssignmentExpression	data [ l ++ ] = 0x48 | rex		428480	0		=			
ANR	430143	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430144	Identifier	data		428480	0					
ANR	430145	PostIncDecOperationExpression	l ++		428480	1					
ANR	430146	Identifier	l		428480	0					
ANR	430147	IncDec	++		428480	1					
ANR	430148	InclusiveOrExpression	0x48 | rex		428480	1		|			
ANR	430149	PrimaryExpression	0x48		428480	0					
ANR	430150	Identifier	rex		428480	1					
ANR	430151	IfStatement	if ( op -> operands [ 1 ] . type & OT_DWORD && op -> operands [ 0 ] . type & OT_DWORD )		428480	4					
ANR	430152	Condition	op -> operands [ 1 ] . type & OT_DWORD && op -> operands [ 0 ] . type & OT_DWORD	2010:7:52467:52536	428480	0	True				
ANR	430153	AndExpression	op -> operands [ 1 ] . type & OT_DWORD && op -> operands [ 0 ] . type & OT_DWORD		428480	0		&&			
ANR	430154	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		428480	0		&			
ANR	430155	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430156	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430157	PtrMemberAccess	op -> operands		428480	0					
ANR	430158	Identifier	op		428480	0					
ANR	430159	Identifier	operands		428480	1					
ANR	430160	PrimaryExpression	1		428480	1					
ANR	430161	Identifier	type		428480	1					
ANR	430162	Identifier	OT_DWORD		428480	1					
ANR	430163	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		428480	1		&			
ANR	430164	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430165	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430166	PtrMemberAccess	op -> operands		428480	0					
ANR	430167	Identifier	op		428480	0					
ANR	430168	Identifier	operands		428480	1					
ANR	430169	PrimaryExpression	0		428480	1					
ANR	430170	Identifier	type		428480	1					
ANR	430171	Identifier	OT_DWORD		428480	1					
ANR	430172	CompoundStatement		249:37:6482:6482	428480	1					
ANR	430173	ExpressionStatement	data [ l ++ ] = 0x40 | rex	2012:4:52545:52567	428480	0	True				
ANR	430174	AssignmentExpression	data [ l ++ ] = 0x40 | rex		428480	0		=			
ANR	430175	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430176	Identifier	data		428480	0					
ANR	430177	PostIncDecOperationExpression	l ++		428480	1					
ANR	430178	Identifier	l		428480	0					
ANR	430179	IncDec	++		428480	1					
ANR	430180	InclusiveOrExpression	0x40 | rex		428480	1		|			
ANR	430181	PrimaryExpression	0x40		428480	0					
ANR	430182	Identifier	rex		428480	1					
ANR	430183	ElseStatement	else		428480	0					
ANR	430184	IfStatement	if ( op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended )		428480	0					
ANR	430185	Condition	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended	2014:13:52587:52638	428480	0	True				
ANR	430186	AndExpression	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended		428480	0		&&			
ANR	430187	MemberAccess	op -> operands [ 0 ] . extended		428480	0					
ANR	430188	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430189	PtrMemberAccess	op -> operands		428480	0					
ANR	430190	Identifier	op		428480	0					
ANR	430191	Identifier	operands		428480	1					
ANR	430192	PrimaryExpression	0		428480	1					
ANR	430193	Identifier	extended		428480	1					
ANR	430194	MemberAccess	op -> operands [ 1 ] . extended		428480	1					
ANR	430195	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430196	PtrMemberAccess	op -> operands		428480	0					
ANR	430197	Identifier	op		428480	0					
ANR	430198	Identifier	operands		428480	1					
ANR	430199	PrimaryExpression	1		428480	1					
ANR	430200	Identifier	extended		428480	1					
ANR	430201	CompoundStatement		252:67:6584:6584	428480	1					
ANR	430202	ExpressionStatement	data [ l ++ ] = 0x45	2015:3:52646:52662	428480	0	True				
ANR	430203	AssignmentExpression	data [ l ++ ] = 0x45		428480	0		=			
ANR	430204	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430205	Identifier	data		428480	0					
ANR	430206	PostIncDecOperationExpression	l ++		428480	1					
ANR	430207	Identifier	l		428480	0					
ANR	430208	IncDec	++		428480	1					
ANR	430209	PrimaryExpression	0x45		428480	1					
ANR	430210	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2017:2:52670:52731	428480	6	True				
ANR	430211	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		428480	0		=			
ANR	430212	Identifier	offset		428480	0					
ANR	430213	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		428480	1		*			
ANR	430214	MemberAccess	op -> operands [ 0 ] . offset		428480	0					
ANR	430215	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430216	PtrMemberAccess	op -> operands		428480	0					
ANR	430217	Identifier	op		428480	0					
ANR	430218	Identifier	operands		428480	1					
ANR	430219	PrimaryExpression	0		428480	1					
ANR	430220	Identifier	offset		428480	1					
ANR	430221	MemberAccess	op -> operands [ 0 ] . offset_sign		428480	1					
ANR	430222	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430223	PtrMemberAccess	op -> operands		428480	0					
ANR	430224	Identifier	op		428480	0					
ANR	430225	Identifier	operands		428480	1					
ANR	430226	PrimaryExpression	0		428480	1					
ANR	430227	Identifier	offset_sign		428480	1					
ANR	430228	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG )		428480	7					
ANR	430229	Condition	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG	2018:6:52739:52787	428480	0	True				
ANR	430230	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		428480	0		&			
ANR	430231	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430232	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430233	PtrMemberAccess	op -> operands		428480	0					
ANR	430234	Identifier	op		428480	0					
ANR	430235	Identifier	operands		428480	1					
ANR	430236	PrimaryExpression	1		428480	1					
ANR	430237	Identifier	type		428480	1					
ANR	430238	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		428480	1		&			
ANR	430239	Identifier	OT_REGTYPE		428480	0					
ANR	430240	Identifier	OT_SEGMENTREG		428480	1					
ANR	430241	CompoundStatement		256:57:6733:6733	428480	1					
ANR	430242	ExpressionStatement	data [ l ++ ] = 0x8c	2019:3:52795:52811	428480	0	True				
ANR	430243	AssignmentExpression	data [ l ++ ] = 0x8c		428480	0		=			
ANR	430244	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430245	Identifier	data		428480	0					
ANR	430246	PostIncDecOperationExpression	l ++		428480	1					
ANR	430247	Identifier	l		428480	0					
ANR	430248	IncDec	++		428480	1					
ANR	430249	PrimaryExpression	0x8c		428480	1					
ANR	430250	ElseStatement	else		428480	0					
ANR	430251	IfStatement	if ( is_debug_or_control ( op -> operands [ 0 ] ) )		428480	0					
ANR	430252	Condition	is_debug_or_control ( op -> operands [ 0 ] )	2020:13:52826:52862	428480	0	True				
ANR	430253	CallExpression	is_debug_or_control ( op -> operands [ 0 ] )		428480	0					
ANR	430254	Callee	is_debug_or_control		428480	0					
ANR	430255	Identifier	is_debug_or_control		428480	0					
ANR	430256	ArgumentList	op -> operands [ 0 ]		428480	1					
ANR	430257	Argument	op -> operands [ 0 ]		428480	0					
ANR	430258	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430259	PtrMemberAccess	op -> operands		428480	0					
ANR	430260	Identifier	op		428480	0					
ANR	430261	Identifier	operands		428480	1					
ANR	430262	PrimaryExpression	0		428480	1					
ANR	430263	CompoundStatement		258:52:6808:6808	428480	1					
ANR	430264	ExpressionStatement	data [ l ++ ] = 0x0f	2021:3:52870:52886	428480	0	True				
ANR	430265	AssignmentExpression	data [ l ++ ] = 0x0f		428480	0		=			
ANR	430266	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430267	Identifier	data		428480	0					
ANR	430268	PostIncDecOperationExpression	l ++		428480	1					
ANR	430269	Identifier	l		428480	0					
ANR	430270	IncDec	++		428480	1					
ANR	430271	PrimaryExpression	0x0f		428480	1					
ANR	430272	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_DEBUGREG )		428480	1					
ANR	430273	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_DEBUGREG	2022:7:52895:52941	428480	0	True				
ANR	430274	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_DEBUGREG		428480	0		&			
ANR	430275	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430276	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430277	PtrMemberAccess	op -> operands		428480	0					
ANR	430278	Identifier	op		428480	0					
ANR	430279	Identifier	operands		428480	1					
ANR	430280	PrimaryExpression	0		428480	1					
ANR	430281	Identifier	type		428480	1					
ANR	430282	BitAndExpression	OT_REGTYPE & OT_DEBUGREG		428480	1		&			
ANR	430283	Identifier	OT_REGTYPE		428480	0					
ANR	430284	Identifier	OT_DEBUGREG		428480	1					
ANR	430285	CompoundStatement		260:56:6887:6887	428480	1					
ANR	430286	ExpressionStatement	data [ l ++ ] = 0x23	2023:4:52950:52966	428480	0	True				
ANR	430287	AssignmentExpression	data [ l ++ ] = 0x23		428480	0		=			
ANR	430288	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430289	Identifier	data		428480	0					
ANR	430290	PostIncDecOperationExpression	l ++		428480	1					
ANR	430291	Identifier	l		428480	0					
ANR	430292	IncDec	++		428480	1					
ANR	430293	PrimaryExpression	0x23		428480	1					
ANR	430294	ElseStatement	else		428480	0					
ANR	430295	CompoundStatement		262:10:6921:6921	428480	0					
ANR	430296	ExpressionStatement	data [ l ++ ] = 0x22	2025:4:52984:53000	428480	0	True				
ANR	430297	AssignmentExpression	data [ l ++ ] = 0x22		428480	0		=			
ANR	430298	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430299	Identifier	data		428480	0					
ANR	430300	PostIncDecOperationExpression	l ++		428480	1					
ANR	430301	Identifier	l		428480	0					
ANR	430302	IncDec	++		428480	1					
ANR	430303	PrimaryExpression	0x22		428480	1					
ANR	430304	ElseStatement	else		428480	0					
ANR	430305	IfStatement	if ( is_debug_or_control ( op -> operands [ 1 ] ) )		428480	0					
ANR	430306	Condition	is_debug_or_control ( op -> operands [ 1 ] )	2027:13:53020:53055	428480	0	True				
ANR	430307	CallExpression	is_debug_or_control ( op -> operands [ 1 ] )		428480	0					
ANR	430308	Callee	is_debug_or_control		428480	0					
ANR	430309	Identifier	is_debug_or_control		428480	0					
ANR	430310	ArgumentList	op -> operands [ 1 ]		428480	1					
ANR	430311	Argument	op -> operands [ 1 ]		428480	0					
ANR	430312	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430313	PtrMemberAccess	op -> operands		428480	0					
ANR	430314	Identifier	op		428480	0					
ANR	430315	Identifier	operands		428480	1					
ANR	430316	PrimaryExpression	1		428480	1					
ANR	430317	CompoundStatement		265:51:7001:7001	428480	1					
ANR	430318	ExpressionStatement	data [ l ++ ] = 0x0f	2028:3:53063:53079	428480	0	True				
ANR	430319	AssignmentExpression	data [ l ++ ] = 0x0f		428480	0		=			
ANR	430320	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430321	Identifier	data		428480	0					
ANR	430322	PostIncDecOperationExpression	l ++		428480	1					
ANR	430323	Identifier	l		428480	0					
ANR	430324	IncDec	++		428480	1					
ANR	430325	PrimaryExpression	0x0f		428480	1					
ANR	430326	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_DEBUGREG )		428480	1					
ANR	430327	Condition	op -> operands [ 1 ] . type & OT_REGTYPE & OT_DEBUGREG	2029:7:53088:53134	428480	0	True				
ANR	430328	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_DEBUGREG		428480	0		&			
ANR	430329	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430330	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430331	PtrMemberAccess	op -> operands		428480	0					
ANR	430332	Identifier	op		428480	0					
ANR	430333	Identifier	operands		428480	1					
ANR	430334	PrimaryExpression	1		428480	1					
ANR	430335	Identifier	type		428480	1					
ANR	430336	BitAndExpression	OT_REGTYPE & OT_DEBUGREG		428480	1		&			
ANR	430337	Identifier	OT_REGTYPE		428480	0					
ANR	430338	Identifier	OT_DEBUGREG		428480	1					
ANR	430339	CompoundStatement		267:56:7080:7080	428480	1					
ANR	430340	ExpressionStatement	data [ l ++ ] = 0x21	2030:4:53143:53159	428480	0	True				
ANR	430341	AssignmentExpression	data [ l ++ ] = 0x21		428480	0		=			
ANR	430342	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430343	Identifier	data		428480	0					
ANR	430344	PostIncDecOperationExpression	l ++		428480	1					
ANR	430345	Identifier	l		428480	0					
ANR	430346	IncDec	++		428480	1					
ANR	430347	PrimaryExpression	0x21		428480	1					
ANR	430348	ElseStatement	else		428480	0					
ANR	430349	CompoundStatement		269:10:7114:7114	428480	0					
ANR	430350	ExpressionStatement	data [ l ++ ] = 0x20	2032:4:53177:53193	428480	0	True				
ANR	430351	AssignmentExpression	data [ l ++ ] = 0x20		428480	0		=			
ANR	430352	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430353	Identifier	data		428480	0					
ANR	430354	PostIncDecOperationExpression	l ++		428480	1					
ANR	430355	Identifier	l		428480	0					
ANR	430356	IncDec	++		428480	1					
ANR	430357	PrimaryExpression	0x20		428480	1					
ANR	430358	ElseStatement	else		428480	0					
ANR	430359	CompoundStatement		272:9:7152:7152	428480	0					
ANR	430360	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		428480	0					
ANR	430361	Condition	op -> operands [ 0 ] . type & OT_WORD	2035:7:53218:53247	428480	0	True				
ANR	430362	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		428480	0		&			
ANR	430363	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430364	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430365	PtrMemberAccess	op -> operands		428480	0					
ANR	430366	Identifier	op		428480	0					
ANR	430367	Identifier	operands		428480	1					
ANR	430368	PrimaryExpression	0		428480	1					
ANR	430369	Identifier	type		428480	1					
ANR	430370	Identifier	OT_WORD		428480	1					
ANR	430371	CompoundStatement		273:39:7193:7193	428480	1					
ANR	430372	ExpressionStatement	data [ l ++ ] = 0x66	2036:4:53256:53272	428480	0	True				
ANR	430373	AssignmentExpression	data [ l ++ ] = 0x66		428480	0		=			
ANR	430374	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430375	Identifier	data		428480	0					
ANR	430376	PostIncDecOperationExpression	l ++		428480	1					
ANR	430377	Identifier	l		428480	0					
ANR	430378	IncDec	++		428480	1					
ANR	430379	PrimaryExpression	0x66		428480	1					
ANR	430380	ExpressionStatement	data [ l ++ ] = ( op -> operands [ 0 ] . type & OT_BYTE ) ? 0x88 : 0x89	2038:3:53282:53340	428480	1	True				
ANR	430381	AssignmentExpression	data [ l ++ ] = ( op -> operands [ 0 ] . type & OT_BYTE ) ? 0x88 : 0x89		428480	0		=			
ANR	430382	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430383	Identifier	data		428480	0					
ANR	430384	PostIncDecOperationExpression	l ++		428480	1					
ANR	430385	Identifier	l		428480	0					
ANR	430386	IncDec	++		428480	1					
ANR	430387	ConditionalExpression	( op -> operands [ 0 ] . type & OT_BYTE ) ? 0x88 : 0x89		428480	1					
ANR	430388	Condition	op -> operands [ 0 ] . type & OT_BYTE		428480	0					
ANR	430389	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		428480	0		&			
ANR	430390	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430391	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430392	PtrMemberAccess	op -> operands		428480	0					
ANR	430393	Identifier	op		428480	0					
ANR	430394	Identifier	operands		428480	1					
ANR	430395	PrimaryExpression	0		428480	1					
ANR	430396	Identifier	type		428480	1					
ANR	430397	Identifier	OT_BYTE		428480	1					
ANR	430398	PrimaryExpression	0x88		428480	1					
ANR	430399	PrimaryExpression	0x89		428480	2					
ANR	430400	IfStatement	if ( op -> operands [ 0 ] . scale [ 0 ] > 1 )		428480	8					
ANR	430401	Condition	op -> operands [ 0 ] . scale [ 0 ] > 1	2041:6:53353:53380	428480	0	True				
ANR	430402	RelationalExpression	op -> operands [ 0 ] . scale [ 0 ] > 1		428480	0		>			
ANR	430403	ArrayIndexing	op -> operands [ 0 ] . scale [ 0 ]		428480	0					
ANR	430404	MemberAccess	op -> operands [ 0 ] . scale		428480	0					
ANR	430405	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430406	PtrMemberAccess	op -> operands		428480	0					
ANR	430407	Identifier	op		428480	0					
ANR	430408	Identifier	operands		428480	1					
ANR	430409	PrimaryExpression	0		428480	1					
ANR	430410	Identifier	scale		428480	1					
ANR	430411	PrimaryExpression	0		428480	1					
ANR	430412	PrimaryExpression	1		428480	1					
ANR	430413	CompoundStatement		279:36:7326:7326	428480	1					
ANR	430414	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 4	2042:4:53389:53429	428480	0	True				
ANR	430415	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 4		428480	0		=			
ANR	430416	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430417	Identifier	data		428480	0					
ANR	430418	PostIncDecOperationExpression	l ++		428480	1					
ANR	430419	Identifier	l		428480	0					
ANR	430420	IncDec	++		428480	1					
ANR	430421	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | 4		428480	1		|			
ANR	430422	ShiftExpression	op -> operands [ 1 ] . reg << 3		428480	0		<<			
ANR	430423	MemberAccess	op -> operands [ 1 ] . reg		428480	0					
ANR	430424	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430425	PtrMemberAccess	op -> operands		428480	0					
ANR	430426	Identifier	op		428480	0					
ANR	430427	Identifier	operands		428480	1					
ANR	430428	PrimaryExpression	1		428480	1					
ANR	430429	Identifier	reg		428480	1					
ANR	430430	PrimaryExpression	3		428480	1					
ANR	430431	PrimaryExpression	4		428480	1					
ANR	430432	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6 | op -> operands [ 0 ] . regs [ 0 ] << 3 | 5	2043:4:53435:53530	428480	1	True				
ANR	430433	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6 | op -> operands [ 0 ] . regs [ 0 ] << 3 | 5		428480	0		=			
ANR	430434	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430435	Identifier	data		428480	0					
ANR	430436	PostIncDecOperationExpression	l ++		428480	1					
ANR	430437	Identifier	l		428480	0					
ANR	430438	IncDec	++		428480	1					
ANR	430439	InclusiveOrExpression	getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6 | op -> operands [ 0 ] . regs [ 0 ] << 3 | 5		428480	1		|			
ANR	430440	ShiftExpression	getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6		428480	0		<<			
ANR	430441	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 0 ] )		428480	0					
ANR	430442	Callee	getsib		428480	0					
ANR	430443	Identifier	getsib		428480	0					
ANR	430444	ArgumentList	op -> operands [ 0 ] . scale [ 0 ]		428480	1					
ANR	430445	Argument	op -> operands [ 0 ] . scale [ 0 ]		428480	0					
ANR	430446	ArrayIndexing	op -> operands [ 0 ] . scale [ 0 ]		428480	0					
ANR	430447	MemberAccess	op -> operands [ 0 ] . scale		428480	0					
ANR	430448	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430449	PtrMemberAccess	op -> operands		428480	0					
ANR	430450	Identifier	op		428480	0					
ANR	430451	Identifier	operands		428480	1					
ANR	430452	PrimaryExpression	0		428480	1					
ANR	430453	Identifier	scale		428480	1					
ANR	430454	PrimaryExpression	0		428480	1					
ANR	430455	PrimaryExpression	6		428480	1					
ANR	430456	InclusiveOrExpression	op -> operands [ 0 ] . regs [ 0 ] << 3 | 5		428480	1		|			
ANR	430457	ShiftExpression	op -> operands [ 0 ] . regs [ 0 ] << 3		428480	0		<<			
ANR	430458	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	430459	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430460	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430461	PtrMemberAccess	op -> operands		428480	0					
ANR	430462	Identifier	op		428480	0					
ANR	430463	Identifier	operands		428480	1					
ANR	430464	PrimaryExpression	0		428480	1					
ANR	430465	Identifier	regs		428480	1					
ANR	430466	PrimaryExpression	0		428480	1					
ANR	430467	PrimaryExpression	3		428480	1					
ANR	430468	PrimaryExpression	5		428480	1					
ANR	430469	ExpressionStatement	data [ l ++ ] = offset	2046:4:53537:53555	428480	2	True				
ANR	430470	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	430471	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430472	Identifier	data		428480	0					
ANR	430473	PostIncDecOperationExpression	l ++		428480	1					
ANR	430474	Identifier	l		428480	0					
ANR	430475	IncDec	++		428480	1					
ANR	430476	Identifier	offset		428480	1					
ANR	430477	ExpressionStatement	data [ l ++ ] = offset >> 8	2047:4:53561:53584	428480	3	True				
ANR	430478	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	430479	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430480	Identifier	data		428480	0					
ANR	430481	PostIncDecOperationExpression	l ++		428480	1					
ANR	430482	Identifier	l		428480	0					
ANR	430483	IncDec	++		428480	1					
ANR	430484	ShiftExpression	offset >> 8		428480	1		>>			
ANR	430485	Identifier	offset		428480	0					
ANR	430486	PrimaryExpression	8		428480	1					
ANR	430487	ExpressionStatement	data [ l ++ ] = offset >> 16	2048:4:53590:53614	428480	4	True				
ANR	430488	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	430489	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430490	Identifier	data		428480	0					
ANR	430491	PostIncDecOperationExpression	l ++		428480	1					
ANR	430492	Identifier	l		428480	0					
ANR	430493	IncDec	++		428480	1					
ANR	430494	ShiftExpression	offset >> 16		428480	1		>>			
ANR	430495	Identifier	offset		428480	0					
ANR	430496	PrimaryExpression	16		428480	1					
ANR	430497	ExpressionStatement	data [ l ++ ] = offset >> 24	2049:4:53620:53644	428480	5	True				
ANR	430498	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	430499	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430500	Identifier	data		428480	0					
ANR	430501	PostIncDecOperationExpression	l ++		428480	1					
ANR	430502	Identifier	l		428480	0					
ANR	430503	IncDec	++		428480	1					
ANR	430504	ShiftExpression	offset >> 24		428480	1		>>			
ANR	430505	Identifier	offset		428480	0					
ANR	430506	PrimaryExpression	24		428480	1					
ANR	430507	ReturnStatement	return l ;	2051:4:53651:53659	428480	6	True				
ANR	430508	Identifier	l		428480	0					
ANR	430509	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		428480	9					
ANR	430510	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	2054:6:53673:53707	428480	0	True				
ANR	430511	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		428480	0					
ANR	430512	UnaryOperator	!		428480	0					
ANR	430513	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		428480	1		&			
ANR	430514	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430515	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430516	PtrMemberAccess	op -> operands		428480	0					
ANR	430517	Identifier	op		428480	0					
ANR	430518	Identifier	operands		428480	1					
ANR	430519	PrimaryExpression	0		428480	1					
ANR	430520	Identifier	type		428480	1					
ANR	430521	Identifier	OT_MEMORY		428480	1					
ANR	430522	CompoundStatement		292:43:7653:7653	428480	1					
ANR	430523	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED || op -> operands [ 1 ] . reg == X86R_UNDEFINED )		428480	0					
ANR	430524	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED || op -> operands [ 1 ] . reg == X86R_UNDEFINED	2055:7:53719:53800	428480	0	True				
ANR	430525	OrExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED || op -> operands [ 1 ] . reg == X86R_UNDEFINED		428480	0		||			
ANR	430526	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		428480	0		==			
ANR	430527	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	430528	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430529	PtrMemberAccess	op -> operands		428480	0					
ANR	430530	Identifier	op		428480	0					
ANR	430531	Identifier	operands		428480	1					
ANR	430532	PrimaryExpression	0		428480	1					
ANR	430533	Identifier	reg		428480	1					
ANR	430534	Identifier	X86R_UNDEFINED		428480	1					
ANR	430535	EqualityExpression	op -> operands [ 1 ] . reg == X86R_UNDEFINED		428480	1		==			
ANR	430536	MemberAccess	op -> operands [ 1 ] . reg		428480	0					
ANR	430537	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430538	PtrMemberAccess	op -> operands		428480	0					
ANR	430539	Identifier	op		428480	0					
ANR	430540	Identifier	operands		428480	1					
ANR	430541	PrimaryExpression	1		428480	1					
ANR	430542	Identifier	reg		428480	1					
ANR	430543	Identifier	X86R_UNDEFINED		428480	1					
ANR	430544	CompoundStatement		294:43:7746:7746	428480	1					
ANR	430545	ReturnStatement	return - 1 ;	2057:4:53809:53818	428480	0	True				
ANR	430546	UnaryOperationExpression	- 1		428480	0					
ANR	430547	UnaryOperator	-		428480	0					
ANR	430548	PrimaryExpression	1		428480	1					
ANR	430549	ExpressionStatement	mod = 0x3	2059:3:53828:53837	428480	1	True				
ANR	430550	AssignmentExpression	mod = 0x3		428480	0		=			
ANR	430551	Identifier	mod		428480	0					
ANR	430552	PrimaryExpression	0x3		428480	1					
ANR	430553	ExpressionStatement	data [ l ++ ] = ( is_debug_or_control ( op -> operands [ 0 ] ) ) ? mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg : mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg	2060:3:53842:54021	428480	2	True				
ANR	430554	AssignmentExpression	data [ l ++ ] = ( is_debug_or_control ( op -> operands [ 0 ] ) ) ? mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg : mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		428480	0		=			
ANR	430555	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430556	Identifier	data		428480	0					
ANR	430557	PostIncDecOperationExpression	l ++		428480	1					
ANR	430558	Identifier	l		428480	0					
ANR	430559	IncDec	++		428480	1					
ANR	430560	ConditionalExpression	( is_debug_or_control ( op -> operands [ 0 ] ) ) ? mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg : mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		428480	1					
ANR	430561	Condition	is_debug_or_control ( op -> operands [ 0 ] )		428480	0					
ANR	430562	CallExpression	is_debug_or_control ( op -> operands [ 0 ] )		428480	0					
ANR	430563	Callee	is_debug_or_control		428480	0					
ANR	430564	Identifier	is_debug_or_control		428480	0					
ANR	430565	ArgumentList	op -> operands [ 0 ]		428480	1					
ANR	430566	Argument	op -> operands [ 0 ]		428480	0					
ANR	430567	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430568	PtrMemberAccess	op -> operands		428480	0					
ANR	430569	Identifier	op		428480	0					
ANR	430570	Identifier	operands		428480	1					
ANR	430571	PrimaryExpression	0		428480	1					
ANR	430572	InclusiveOrExpression	mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		428480	1		|			
ANR	430573	ShiftExpression	mod << 6		428480	0		<<			
ANR	430574	Identifier	mod		428480	0					
ANR	430575	PrimaryExpression	6		428480	1					
ANR	430576	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		428480	1		|			
ANR	430577	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	430578	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	430579	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430580	PtrMemberAccess	op -> operands		428480	0					
ANR	430581	Identifier	op		428480	0					
ANR	430582	Identifier	operands		428480	1					
ANR	430583	PrimaryExpression	0		428480	1					
ANR	430584	Identifier	reg		428480	1					
ANR	430585	PrimaryExpression	3		428480	1					
ANR	430586	MemberAccess	op -> operands [ 1 ] . reg		428480	1					
ANR	430587	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430588	PtrMemberAccess	op -> operands		428480	0					
ANR	430589	Identifier	op		428480	0					
ANR	430590	Identifier	operands		428480	1					
ANR	430591	PrimaryExpression	1		428480	1					
ANR	430592	Identifier	reg		428480	1					
ANR	430593	InclusiveOrExpression	mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		428480	2		|			
ANR	430594	ShiftExpression	mod << 6		428480	0		<<			
ANR	430595	Identifier	mod		428480	0					
ANR	430596	PrimaryExpression	6		428480	1					
ANR	430597	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		428480	1		|			
ANR	430598	ShiftExpression	op -> operands [ 1 ] . reg << 3		428480	0		<<			
ANR	430599	MemberAccess	op -> operands [ 1 ] . reg		428480	0					
ANR	430600	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430601	PtrMemberAccess	op -> operands		428480	0					
ANR	430602	Identifier	op		428480	0					
ANR	430603	Identifier	operands		428480	1					
ANR	430604	PrimaryExpression	1		428480	1					
ANR	430605	Identifier	reg		428480	1					
ANR	430606	PrimaryExpression	3		428480	1					
ANR	430607	MemberAccess	op -> operands [ 0 ] . reg		428480	1					
ANR	430608	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430609	PtrMemberAccess	op -> operands		428480	0					
ANR	430610	Identifier	op		428480	0					
ANR	430611	Identifier	operands		428480	1					
ANR	430612	PrimaryExpression	0		428480	1					
ANR	430613	Identifier	reg		428480	1					
ANR	430614	ElseStatement	else		428480	0					
ANR	430615	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED )		428480	0					
ANR	430616	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED	2063:13:54036:54076	428480	0	True				
ANR	430617	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED		428480	0		==			
ANR	430618	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	430619	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430620	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430621	PtrMemberAccess	op -> operands		428480	0					
ANR	430622	Identifier	op		428480	0					
ANR	430623	Identifier	operands		428480	1					
ANR	430624	PrimaryExpression	0		428480	1					
ANR	430625	Identifier	regs		428480	1					
ANR	430626	PrimaryExpression	0		428480	1					
ANR	430627	Identifier	X86R_UNDEFINED		428480	1					
ANR	430628	CompoundStatement		301:56:8022:8022	428480	1					
ANR	430629	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x5	2064:3:54084:54126	428480	0	True				
ANR	430630	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x5		428480	0		=			
ANR	430631	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430632	Identifier	data		428480	0					
ANR	430633	PostIncDecOperationExpression	l ++		428480	1					
ANR	430634	Identifier	l		428480	0					
ANR	430635	IncDec	++		428480	1					
ANR	430636	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | 0x5		428480	1		|			
ANR	430637	ShiftExpression	op -> operands [ 1 ] . reg << 3		428480	0		<<			
ANR	430638	MemberAccess	op -> operands [ 1 ] . reg		428480	0					
ANR	430639	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430640	PtrMemberAccess	op -> operands		428480	0					
ANR	430641	Identifier	op		428480	0					
ANR	430642	Identifier	operands		428480	1					
ANR	430643	PrimaryExpression	1		428480	1					
ANR	430644	Identifier	reg		428480	1					
ANR	430645	PrimaryExpression	3		428480	1					
ANR	430646	PrimaryExpression	0x5		428480	1					
ANR	430647	ExpressionStatement	data [ l ++ ] = offset	2065:3:54131:54149	428480	1	True				
ANR	430648	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	430649	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430650	Identifier	data		428480	0					
ANR	430651	PostIncDecOperationExpression	l ++		428480	1					
ANR	430652	Identifier	l		428480	0					
ANR	430653	IncDec	++		428480	1					
ANR	430654	Identifier	offset		428480	1					
ANR	430655	ExpressionStatement	data [ l ++ ] = offset >> 8	2066:3:54154:54177	428480	2	True				
ANR	430656	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	430657	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430658	Identifier	data		428480	0					
ANR	430659	PostIncDecOperationExpression	l ++		428480	1					
ANR	430660	Identifier	l		428480	0					
ANR	430661	IncDec	++		428480	1					
ANR	430662	ShiftExpression	offset >> 8		428480	1		>>			
ANR	430663	Identifier	offset		428480	0					
ANR	430664	PrimaryExpression	8		428480	1					
ANR	430665	ExpressionStatement	data [ l ++ ] = offset >> 16	2067:3:54182:54206	428480	3	True				
ANR	430666	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	430667	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430668	Identifier	data		428480	0					
ANR	430669	PostIncDecOperationExpression	l ++		428480	1					
ANR	430670	Identifier	l		428480	0					
ANR	430671	IncDec	++		428480	1					
ANR	430672	ShiftExpression	offset >> 16		428480	1		>>			
ANR	430673	Identifier	offset		428480	0					
ANR	430674	PrimaryExpression	16		428480	1					
ANR	430675	ExpressionStatement	data [ l ++ ] = offset >> 24	2068:3:54211:54235	428480	4	True				
ANR	430676	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	430677	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430678	Identifier	data		428480	0					
ANR	430679	PostIncDecOperationExpression	l ++		428480	1					
ANR	430680	Identifier	l		428480	0					
ANR	430681	IncDec	++		428480	1					
ANR	430682	ShiftExpression	offset >> 24		428480	1		>>			
ANR	430683	Identifier	offset		428480	0					
ANR	430684	PrimaryExpression	24		428480	1					
ANR	430685	ElseStatement	else		428480	0					
ANR	430686	CompoundStatement		307:9:8189:8189	428480	0					
ANR	430687	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		428480	0					
ANR	430688	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2070:7:54255:54286	428480	0	True				
ANR	430689	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		428480	0		&			
ANR	430690	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430691	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430692	PtrMemberAccess	op -> operands		428480	0					
ANR	430693	Identifier	op		428480	0					
ANR	430694	Identifier	operands		428480	1					
ANR	430695	PrimaryExpression	0		428480	1					
ANR	430696	Identifier	type		428480	1					
ANR	430697	Identifier	OT_MEMORY		428480	1					
ANR	430698	CompoundStatement		308:41:8232:8232	428480	1					
ANR	430699	IfStatement	if ( op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED )		428480	0					
ANR	430700	Condition	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED	2071:8:54299:54339	428480	0	True				
ANR	430701	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED		428480	0		!=			
ANR	430702	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	430703	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430704	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430705	PtrMemberAccess	op -> operands		428480	0					
ANR	430706	Identifier	op		428480	0					
ANR	430707	Identifier	operands		428480	1					
ANR	430708	PrimaryExpression	0		428480	1					
ANR	430709	Identifier	regs		428480	1					
ANR	430710	PrimaryExpression	1		428480	1					
ANR	430711	Identifier	X86R_UNDEFINED		428480	1					
ANR	430712	CompoundStatement		309:51:8285:8285	428480	1					
ANR	430713	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x4	2072:5:54349:54391	428480	0	True				
ANR	430714	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x4		428480	0		=			
ANR	430715	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430716	Identifier	data		428480	0					
ANR	430717	PostIncDecOperationExpression	l ++		428480	1					
ANR	430718	Identifier	l		428480	0					
ANR	430719	IncDec	++		428480	1					
ANR	430720	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | 0x4		428480	1		|			
ANR	430721	ShiftExpression	op -> operands [ 1 ] . reg << 3		428480	0		<<			
ANR	430722	MemberAccess	op -> operands [ 1 ] . reg		428480	0					
ANR	430723	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430724	PtrMemberAccess	op -> operands		428480	0					
ANR	430725	Identifier	op		428480	0					
ANR	430726	Identifier	operands		428480	1					
ANR	430727	PrimaryExpression	1		428480	1					
ANR	430728	Identifier	reg		428480	1					
ANR	430729	PrimaryExpression	3		428480	1					
ANR	430730	PrimaryExpression	0x4		428480	1					
ANR	430731	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . regs [ 1 ] << 3 | op -> operands [ 0 ] . regs [ 0 ]	2073:5:54398:54464	428480	1	True				
ANR	430732	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . regs [ 1 ] << 3 | op -> operands [ 0 ] . regs [ 0 ]		428480	0		=			
ANR	430733	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430734	Identifier	data		428480	0					
ANR	430735	PostIncDecOperationExpression	l ++		428480	1					
ANR	430736	Identifier	l		428480	0					
ANR	430737	IncDec	++		428480	1					
ANR	430738	InclusiveOrExpression	op -> operands [ 0 ] . regs [ 1 ] << 3 | op -> operands [ 0 ] . regs [ 0 ]		428480	1		|			
ANR	430739	ShiftExpression	op -> operands [ 0 ] . regs [ 1 ] << 3		428480	0		<<			
ANR	430740	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		428480	0					
ANR	430741	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430742	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430743	PtrMemberAccess	op -> operands		428480	0					
ANR	430744	Identifier	op		428480	0					
ANR	430745	Identifier	operands		428480	1					
ANR	430746	PrimaryExpression	0		428480	1					
ANR	430747	Identifier	regs		428480	1					
ANR	430748	PrimaryExpression	1		428480	1					
ANR	430749	PrimaryExpression	3		428480	1					
ANR	430750	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	1					
ANR	430751	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430752	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430753	PtrMemberAccess	op -> operands		428480	0					
ANR	430754	Identifier	op		428480	0					
ANR	430755	Identifier	operands		428480	1					
ANR	430756	PrimaryExpression	0		428480	1					
ANR	430757	Identifier	regs		428480	1					
ANR	430758	PrimaryExpression	0		428480	1					
ANR	430759	ReturnStatement	return l ;	2074:5:54471:54479	428480	2	True				
ANR	430760	Identifier	l		428480	0					
ANR	430761	IfStatement	if ( offset )		428480	1					
ANR	430762	Condition	offset	2076:8:54495:54500	428480	0	True				
ANR	430763	Identifier	offset		428480	0					
ANR	430764	CompoundStatement		314:16:8446:8446	428480	1					
ANR	430765	ExpressionStatement	mod = ( offset > 128 || offset < - 129 ) ? 0x2 : 0x1	2077:5:54510:54559	428480	0	True				
ANR	430766	AssignmentExpression	mod = ( offset > 128 || offset < - 129 ) ? 0x2 : 0x1		428480	0		=			
ANR	430767	Identifier	mod		428480	0					
ANR	430768	ConditionalExpression	( offset > 128 || offset < - 129 ) ? 0x2 : 0x1		428480	1					
ANR	430769	Condition	offset > 128 || offset < - 129		428480	0					
ANR	430770	OrExpression	offset > 128 || offset < - 129		428480	0		||			
ANR	430771	RelationalExpression	offset > 128		428480	0		>			
ANR	430772	Identifier	offset		428480	0					
ANR	430773	PrimaryExpression	128		428480	1					
ANR	430774	RelationalExpression	offset < - 129		428480	1		<			
ANR	430775	Identifier	offset		428480	0					
ANR	430776	UnaryOperationExpression	- 129		428480	1					
ANR	430777	UnaryOperator	-		428480	0					
ANR	430778	PrimaryExpression	129		428480	1					
ANR	430779	PrimaryExpression	0x2		428480	1					
ANR	430780	PrimaryExpression	0x1		428480	2					
ANR	430781	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		428480	2					
ANR	430782	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	2079:8:54575:54609	428480	0	True				
ANR	430783	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		428480	0		==			
ANR	430784	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	430785	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430786	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430787	PtrMemberAccess	op -> operands		428480	0					
ANR	430788	Identifier	op		428480	0					
ANR	430789	Identifier	operands		428480	1					
ANR	430790	PrimaryExpression	0		428480	1					
ANR	430791	Identifier	regs		428480	1					
ANR	430792	PrimaryExpression	0		428480	1					
ANR	430793	Identifier	X86R_EBP		428480	1					
ANR	430794	CompoundStatement		317:45:8555:8555	428480	1					
ANR	430795	ExpressionStatement	mod = 0x2	2080:5:54619:54628	428480	0	True				
ANR	430796	AssignmentExpression	mod = 0x2		428480	0		=			
ANR	430797	Identifier	mod		428480	0					
ANR	430798	PrimaryExpression	0x2		428480	1					
ANR	430799	ExpressionStatement	data [ l ++ ] = mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]	2082:4:54640:54713	428480	3	True				
ANR	430800	AssignmentExpression	data [ l ++ ] = mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		428480	0		=			
ANR	430801	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430802	Identifier	data		428480	0					
ANR	430803	PostIncDecOperationExpression	l ++		428480	1					
ANR	430804	Identifier	l		428480	0					
ANR	430805	IncDec	++		428480	1					
ANR	430806	InclusiveOrExpression	mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		428480	1		|			
ANR	430807	ShiftExpression	mod << 6		428480	0		<<			
ANR	430808	Identifier	mod		428480	0					
ANR	430809	PrimaryExpression	6		428480	1					
ANR	430810	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		428480	1		|			
ANR	430811	ShiftExpression	op -> operands [ 1 ] . reg << 3		428480	0		<<			
ANR	430812	MemberAccess	op -> operands [ 1 ] . reg		428480	0					
ANR	430813	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430814	PtrMemberAccess	op -> operands		428480	0					
ANR	430815	Identifier	op		428480	0					
ANR	430816	Identifier	operands		428480	1					
ANR	430817	PrimaryExpression	1		428480	1					
ANR	430818	Identifier	reg		428480	1					
ANR	430819	PrimaryExpression	3		428480	1					
ANR	430820	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	1					
ANR	430821	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430822	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430823	PtrMemberAccess	op -> operands		428480	0					
ANR	430824	Identifier	op		428480	0					
ANR	430825	Identifier	operands		428480	1					
ANR	430826	PrimaryExpression	0		428480	1					
ANR	430827	Identifier	regs		428480	1					
ANR	430828	PrimaryExpression	0		428480	1					
ANR	430829	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		428480	4					
ANR	430830	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2083:8:54723:54757	428480	0	True				
ANR	430831	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		428480	0		==			
ANR	430832	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		428480	0					
ANR	430833	MemberAccess	op -> operands [ 0 ] . regs		428480	0					
ANR	430834	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430835	PtrMemberAccess	op -> operands		428480	0					
ANR	430836	Identifier	op		428480	0					
ANR	430837	Identifier	operands		428480	1					
ANR	430838	PrimaryExpression	0		428480	1					
ANR	430839	Identifier	regs		428480	1					
ANR	430840	PrimaryExpression	0		428480	1					
ANR	430841	Identifier	X86R_ESP		428480	1					
ANR	430842	CompoundStatement		321:45:8703:8703	428480	1					
ANR	430843	ExpressionStatement	data [ l ++ ] = 0x24	2084:5:54767:54783	428480	0	True				
ANR	430844	AssignmentExpression	data [ l ++ ] = 0x24		428480	0		=			
ANR	430845	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430846	Identifier	data		428480	0					
ANR	430847	PostIncDecOperationExpression	l ++		428480	1					
ANR	430848	Identifier	l		428480	0					
ANR	430849	IncDec	++		428480	1					
ANR	430850	PrimaryExpression	0x24		428480	1					
ANR	430851	IfStatement	if ( offset )		428480	5					
ANR	430852	Condition	offset	2086:8:54799:54804	428480	0	True				
ANR	430853	Identifier	offset		428480	0					
ANR	430854	CompoundStatement		324:16:8750:8750	428480	1					
ANR	430855	ExpressionStatement	data [ l ++ ] = offset	2087:5:54814:54832	428480	0	True				
ANR	430856	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	430857	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430858	Identifier	data		428480	0					
ANR	430859	PostIncDecOperationExpression	l ++		428480	1					
ANR	430860	Identifier	l		428480	0					
ANR	430861	IncDec	++		428480	1					
ANR	430862	Identifier	offset		428480	1					
ANR	430863	IfStatement	if ( mod == 2 )		428480	6					
ANR	430864	Condition	mod == 2	2089:8:54848:54855	428480	0	True				
ANR	430865	EqualityExpression	mod == 2		428480	0		==			
ANR	430866	Identifier	mod		428480	0					
ANR	430867	PrimaryExpression	2		428480	1					
ANR	430868	CompoundStatement		327:18:8801:8801	428480	1					
ANR	430869	ExpressionStatement	data [ l ++ ] = offset >> 8	2091:5:54946:54969	428480	0	True				
ANR	430870	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	430871	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430872	Identifier	data		428480	0					
ANR	430873	PostIncDecOperationExpression	l ++		428480	1					
ANR	430874	Identifier	l		428480	0					
ANR	430875	IncDec	++		428480	1					
ANR	430876	ShiftExpression	offset >> 8		428480	1		>>			
ANR	430877	Identifier	offset		428480	0					
ANR	430878	PrimaryExpression	8		428480	1					
ANR	430879	ExpressionStatement	data [ l ++ ] = offset >> 16	2092:5:54976:55000	428480	1	True				
ANR	430880	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	430881	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430882	Identifier	data		428480	0					
ANR	430883	PostIncDecOperationExpression	l ++		428480	1					
ANR	430884	Identifier	l		428480	0					
ANR	430885	IncDec	++		428480	1					
ANR	430886	ShiftExpression	offset >> 16		428480	1		>>			
ANR	430887	Identifier	offset		428480	0					
ANR	430888	PrimaryExpression	16		428480	1					
ANR	430889	ExpressionStatement	data [ l ++ ] = offset >> 24	2093:5:55007:55031	428480	2	True				
ANR	430890	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	430891	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430892	Identifier	data		428480	0					
ANR	430893	PostIncDecOperationExpression	l ++		428480	1					
ANR	430894	Identifier	l		428480	0					
ANR	430895	IncDec	++		428480	1					
ANR	430896	ShiftExpression	offset >> 24		428480	1		>>			
ANR	430897	Identifier	offset		428480	0					
ANR	430898	PrimaryExpression	24		428480	1					
ANR	430899	ElseStatement	else		428480	0					
ANR	430900	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		428480	0					
ANR	430901	Condition	op -> operands [ 1 ] . type & OT_MEMORY	2097:12:55060:55091	428480	0	True				
ANR	430902	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		428480	0		&			
ANR	430903	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	430904	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430905	PtrMemberAccess	op -> operands		428480	0					
ANR	430906	Identifier	op		428480	0					
ANR	430907	Identifier	operands		428480	1					
ANR	430908	PrimaryExpression	1		428480	1					
ANR	430909	Identifier	type		428480	1					
ANR	430910	Identifier	OT_MEMORY		428480	1					
ANR	430911	CompoundStatement		335:46:9037:9037	428480	1					
ANR	430912	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		428480	0					
ANR	430913	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2098:6:55102:55133	428480	0	True				
ANR	430914	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		428480	0		&			
ANR	430915	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430916	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430917	PtrMemberAccess	op -> operands		428480	0					
ANR	430918	Identifier	op		428480	0					
ANR	430919	Identifier	operands		428480	1					
ANR	430920	PrimaryExpression	0		428480	1					
ANR	430921	Identifier	type		428480	1					
ANR	430922	Identifier	OT_MEMORY		428480	1					
ANR	430923	CompoundStatement		336:40:9079:9079	428480	1					
ANR	430924	ReturnStatement	return - 1 ;	2099:3:55141:55150	428480	0	True				
ANR	430925	UnaryOperationExpression	- 1		428480	0					
ANR	430926	UnaryOperator	-		428480	0					
ANR	430927	PrimaryExpression	1		428480	1					
ANR	430928	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	2101:2:55158:55219	428480	1	True				
ANR	430929	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		428480	0		=			
ANR	430930	Identifier	offset		428480	0					
ANR	430931	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		428480	1		*			
ANR	430932	MemberAccess	op -> operands [ 1 ] . offset		428480	0					
ANR	430933	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430934	PtrMemberAccess	op -> operands		428480	0					
ANR	430935	Identifier	op		428480	0					
ANR	430936	Identifier	operands		428480	1					
ANR	430937	PrimaryExpression	1		428480	1					
ANR	430938	Identifier	offset		428480	1					
ANR	430939	MemberAccess	op -> operands [ 1 ] . offset_sign		428480	1					
ANR	430940	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430941	PtrMemberAccess	op -> operands		428480	0					
ANR	430942	Identifier	op		428480	0					
ANR	430943	Identifier	operands		428480	1					
ANR	430944	PrimaryExpression	1		428480	1					
ANR	430945	Identifier	offset_sign		428480	1					
ANR	430946	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED )		428480	2					
ANR	430947	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED	2102:6:55227:55302	428480	0	True				
ANR	430948	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		428480	0		&&			
ANR	430949	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		428480	0		==			
ANR	430950	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	430951	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430952	PtrMemberAccess	op -> operands		428480	0					
ANR	430953	Identifier	op		428480	0					
ANR	430954	Identifier	operands		428480	1					
ANR	430955	PrimaryExpression	0		428480	1					
ANR	430956	Identifier	reg		428480	1					
ANR	430957	Identifier	X86R_EAX		428480	1					
ANR	430958	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		428480	1		==			
ANR	430959	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	430960	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	430961	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	430962	PtrMemberAccess	op -> operands		428480	0					
ANR	430963	Identifier	op		428480	0					
ANR	430964	Identifier	operands		428480	1					
ANR	430965	PrimaryExpression	1		428480	1					
ANR	430966	Identifier	regs		428480	1					
ANR	430967	PrimaryExpression	0		428480	1					
ANR	430968	Identifier	X86R_UNDEFINED		428480	1					
ANR	430969	CompoundStatement		340:84:9248:9248	428480	1					
ANR	430970	IfStatement	if ( a -> bits == 64 )		428480	0					
ANR	430971	Condition	a -> bits == 64	2103:7:55314:55326	428480	0	True				
ANR	430972	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	430973	PtrMemberAccess	a -> bits		428480	0					
ANR	430974	Identifier	a		428480	0					
ANR	430975	Identifier	bits		428480	1					
ANR	430976	PrimaryExpression	64		428480	1					
ANR	430977	CompoundStatement		341:22:9272:9272	428480	1					
ANR	430978	ExpressionStatement	data [ l ++ ] = 0x48	2104:4:55335:55351	428480	0	True				
ANR	430979	AssignmentExpression	data [ l ++ ] = 0x48		428480	0		=			
ANR	430980	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	430981	Identifier	data		428480	0					
ANR	430982	PostIncDecOperationExpression	l ++		428480	1					
ANR	430983	Identifier	l		428480	0					
ANR	430984	IncDec	++		428480	1					
ANR	430985	PrimaryExpression	0x48		428480	1					
ANR	430986	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		428480	1					
ANR	430987	Condition	op -> operands [ 0 ] . type & OT_BYTE	2106:7:55365:55394	428480	0	True				
ANR	430988	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		428480	0		&			
ANR	430989	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	430990	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	430991	PtrMemberAccess	op -> operands		428480	0					
ANR	430992	Identifier	op		428480	0					
ANR	430993	Identifier	operands		428480	1					
ANR	430994	PrimaryExpression	0		428480	1					
ANR	430995	Identifier	type		428480	1					
ANR	430996	Identifier	OT_BYTE		428480	1					
ANR	430997	CompoundStatement		344:39:9340:9340	428480	1					
ANR	430998	ExpressionStatement	data [ l ++ ] = 0xa0	2107:4:55403:55419	428480	0	True				
ANR	430999	AssignmentExpression	data [ l ++ ] = 0xa0		428480	0		=			
ANR	431000	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431001	Identifier	data		428480	0					
ANR	431002	PostIncDecOperationExpression	l ++		428480	1					
ANR	431003	Identifier	l		428480	0					
ANR	431004	IncDec	++		428480	1					
ANR	431005	PrimaryExpression	0xa0		428480	1					
ANR	431006	ElseStatement	else		428480	0					
ANR	431007	CompoundStatement		346:10:9374:9374	428480	0					
ANR	431008	ExpressionStatement	data [ l ++ ] = 0xa1	2109:4:55437:55453	428480	0	True				
ANR	431009	AssignmentExpression	data [ l ++ ] = 0xa1		428480	0		=			
ANR	431010	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431011	Identifier	data		428480	0					
ANR	431012	PostIncDecOperationExpression	l ++		428480	1					
ANR	431013	Identifier	l		428480	0					
ANR	431014	IncDec	++		428480	1					
ANR	431015	PrimaryExpression	0xa1		428480	1					
ANR	431016	ExpressionStatement	data [ l ++ ] = offset	2111:3:55463:55481	428480	2	True				
ANR	431017	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	431018	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431019	Identifier	data		428480	0					
ANR	431020	PostIncDecOperationExpression	l ++		428480	1					
ANR	431021	Identifier	l		428480	0					
ANR	431022	IncDec	++		428480	1					
ANR	431023	Identifier	offset		428480	1					
ANR	431024	ExpressionStatement	data [ l ++ ] = offset >> 8	2112:3:55486:55509	428480	3	True				
ANR	431025	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	431026	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431027	Identifier	data		428480	0					
ANR	431028	PostIncDecOperationExpression	l ++		428480	1					
ANR	431029	Identifier	l		428480	0					
ANR	431030	IncDec	++		428480	1					
ANR	431031	ShiftExpression	offset >> 8		428480	1		>>			
ANR	431032	Identifier	offset		428480	0					
ANR	431033	PrimaryExpression	8		428480	1					
ANR	431034	ExpressionStatement	data [ l ++ ] = offset >> 16	2113:3:55514:55538	428480	4	True				
ANR	431035	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	431036	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431037	Identifier	data		428480	0					
ANR	431038	PostIncDecOperationExpression	l ++		428480	1					
ANR	431039	Identifier	l		428480	0					
ANR	431040	IncDec	++		428480	1					
ANR	431041	ShiftExpression	offset >> 16		428480	1		>>			
ANR	431042	Identifier	offset		428480	0					
ANR	431043	PrimaryExpression	16		428480	1					
ANR	431044	ExpressionStatement	data [ l ++ ] = offset >> 24	2114:3:55543:55567	428480	5	True				
ANR	431045	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	431046	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431047	Identifier	data		428480	0					
ANR	431048	PostIncDecOperationExpression	l ++		428480	1					
ANR	431049	Identifier	l		428480	0					
ANR	431050	IncDec	++		428480	1					
ANR	431051	ShiftExpression	offset >> 24		428480	1		>>			
ANR	431052	Identifier	offset		428480	0					
ANR	431053	PrimaryExpression	24		428480	1					
ANR	431054	IfStatement	if ( a -> bits == 64 )		428480	6					
ANR	431055	Condition	a -> bits == 64	2115:7:55576:55588	428480	0	True				
ANR	431056	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	431057	PtrMemberAccess	a -> bits		428480	0					
ANR	431058	Identifier	a		428480	0					
ANR	431059	Identifier	bits		428480	1					
ANR	431060	PrimaryExpression	64		428480	1					
ANR	431061	CompoundStatement		353:22:9534:9534	428480	1					
ANR	431062	ExpressionStatement	data [ l ++ ] = offset >> 32	2116:4:55597:55621	428480	0	True				
ANR	431063	AssignmentExpression	data [ l ++ ] = offset >> 32		428480	0		=			
ANR	431064	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431065	Identifier	data		428480	0					
ANR	431066	PostIncDecOperationExpression	l ++		428480	1					
ANR	431067	Identifier	l		428480	0					
ANR	431068	IncDec	++		428480	1					
ANR	431069	ShiftExpression	offset >> 32		428480	1		>>			
ANR	431070	Identifier	offset		428480	0					
ANR	431071	PrimaryExpression	32		428480	1					
ANR	431072	ExpressionStatement	data [ l ++ ] = offset >> 40	2117:4:55627:55651	428480	1	True				
ANR	431073	AssignmentExpression	data [ l ++ ] = offset >> 40		428480	0		=			
ANR	431074	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431075	Identifier	data		428480	0					
ANR	431076	PostIncDecOperationExpression	l ++		428480	1					
ANR	431077	Identifier	l		428480	0					
ANR	431078	IncDec	++		428480	1					
ANR	431079	ShiftExpression	offset >> 40		428480	1		>>			
ANR	431080	Identifier	offset		428480	0					
ANR	431081	PrimaryExpression	40		428480	1					
ANR	431082	ExpressionStatement	data [ l ++ ] = offset >> 48	2118:4:55657:55681	428480	2	True				
ANR	431083	AssignmentExpression	data [ l ++ ] = offset >> 48		428480	0		=			
ANR	431084	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431085	Identifier	data		428480	0					
ANR	431086	PostIncDecOperationExpression	l ++		428480	1					
ANR	431087	Identifier	l		428480	0					
ANR	431088	IncDec	++		428480	1					
ANR	431089	ShiftExpression	offset >> 48		428480	1		>>			
ANR	431090	Identifier	offset		428480	0					
ANR	431091	PrimaryExpression	48		428480	1					
ANR	431092	ExpressionStatement	data [ l ++ ] = offset >> 54	2119:4:55687:55711	428480	3	True				
ANR	431093	AssignmentExpression	data [ l ++ ] = offset >> 54		428480	0		=			
ANR	431094	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431095	Identifier	data		428480	0					
ANR	431096	PostIncDecOperationExpression	l ++		428480	1					
ANR	431097	Identifier	l		428480	0					
ANR	431098	IncDec	++		428480	1					
ANR	431099	ShiftExpression	offset >> 54		428480	1		>>			
ANR	431100	Identifier	offset		428480	0					
ANR	431101	PrimaryExpression	54		428480	1					
ANR	431102	ReturnStatement	return l ;	2121:3:55721:55729	428480	7	True				
ANR	431103	Identifier	l		428480	0					
ANR	431104	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ] )		428480	3					
ANR	431105	Condition	op -> operands [ 0 ] . type & OT_BYTE && a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ]	2123:6:55741:55814	428480	0	True				
ANR	431106	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ]		428480	0		&&			
ANR	431107	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		428480	0		&			
ANR	431108	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	431109	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431110	PtrMemberAccess	op -> operands		428480	0					
ANR	431111	Identifier	op		428480	0					
ANR	431112	Identifier	operands		428480	1					
ANR	431113	PrimaryExpression	0		428480	1					
ANR	431114	Identifier	type		428480	1					
ANR	431115	Identifier	OT_BYTE		428480	1					
ANR	431116	AndExpression	a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ]		428480	1		&&			
ANR	431117	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	431118	PtrMemberAccess	a -> bits		428480	0					
ANR	431119	Identifier	a		428480	0					
ANR	431120	Identifier	bits		428480	1					
ANR	431121	PrimaryExpression	64		428480	1					
ANR	431122	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	1					
ANR	431123	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431124	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431125	PtrMemberAccess	op -> operands		428480	0					
ANR	431126	Identifier	op		428480	0					
ANR	431127	Identifier	operands		428480	1					
ANR	431128	PrimaryExpression	1		428480	1					
ANR	431129	Identifier	regs		428480	1					
ANR	431130	PrimaryExpression	0		428480	1					
ANR	431131	CompoundStatement		361:82:9760:9760	428480	1					
ANR	431132	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8 && op -> operands [ 0 ] . reg < 4 )		428480	0					
ANR	431133	Condition	op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8 && op -> operands [ 0 ] . reg < 4	2124:7:55826:55893	428480	0	True				
ANR	431134	AndExpression	op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8 && op -> operands [ 0 ] . reg < 4		428480	0		&&			
ANR	431135	RelationalExpression	op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8		428480	0		>=			
ANR	431136	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431137	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431138	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431139	PtrMemberAccess	op -> operands		428480	0					
ANR	431140	Identifier	op		428480	0					
ANR	431141	Identifier	operands		428480	1					
ANR	431142	PrimaryExpression	1		428480	1					
ANR	431143	Identifier	regs		428480	1					
ANR	431144	PrimaryExpression	0		428480	1					
ANR	431145	Identifier	X86R_R8		428480	1					
ANR	431146	RelationalExpression	op -> operands [ 0 ] . reg < 4		428480	1		<			
ANR	431147	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431148	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431149	PtrMemberAccess	op -> operands		428480	0					
ANR	431150	Identifier	op		428480	0					
ANR	431151	Identifier	operands		428480	1					
ANR	431152	PrimaryExpression	0		428480	1					
ANR	431153	Identifier	reg		428480	1					
ANR	431154	PrimaryExpression	4		428480	1					
ANR	431155	CompoundStatement		363:32:9839:9839	428480	1					
ANR	431156	ExpressionStatement	data [ l ++ ] = 0x41	2126:4:55902:55918	428480	0	True				
ANR	431157	AssignmentExpression	data [ l ++ ] = 0x41		428480	0		=			
ANR	431158	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431159	Identifier	data		428480	0					
ANR	431160	PostIncDecOperationExpression	l ++		428480	1					
ANR	431161	Identifier	l		428480	0					
ANR	431162	IncDec	++		428480	1					
ANR	431163	PrimaryExpression	0x41		428480	1					
ANR	431164	ExpressionStatement	data [ l ++ ] = 0x8a	2127:4:55924:55940	428480	1	True				
ANR	431165	AssignmentExpression	data [ l ++ ] = 0x8a		428480	0		=			
ANR	431166	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431167	Identifier	data		428480	0					
ANR	431168	PostIncDecOperationExpression	l ++		428480	1					
ANR	431169	Identifier	l		428480	0					
ANR	431170	IncDec	++		428480	1					
ANR	431171	PrimaryExpression	0x8a		428480	1					
ANR	431172	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | ( op -> operands [ 1 ] . regs [ 0 ] - 8 )	2128:4:55946:56014	428480	2	True				
ANR	431173	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | ( op -> operands [ 1 ] . regs [ 0 ] - 8 )		428480	0		=			
ANR	431174	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431175	Identifier	data		428480	0					
ANR	431176	PostIncDecOperationExpression	l ++		428480	1					
ANR	431177	Identifier	l		428480	0					
ANR	431178	IncDec	++		428480	1					
ANR	431179	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | ( op -> operands [ 1 ] . regs [ 0 ] - 8 )		428480	1		|			
ANR	431180	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	431181	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431182	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431183	PtrMemberAccess	op -> operands		428480	0					
ANR	431184	Identifier	op		428480	0					
ANR	431185	Identifier	operands		428480	1					
ANR	431186	PrimaryExpression	0		428480	1					
ANR	431187	Identifier	reg		428480	1					
ANR	431188	PrimaryExpression	3		428480	1					
ANR	431189	AdditiveExpression	op -> operands [ 1 ] . regs [ 0 ] - 8		428480	1		-			
ANR	431190	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431191	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431192	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431193	PtrMemberAccess	op -> operands		428480	0					
ANR	431194	Identifier	op		428480	0					
ANR	431195	Identifier	operands		428480	1					
ANR	431196	PrimaryExpression	1		428480	1					
ANR	431197	Identifier	regs		428480	1					
ANR	431198	PrimaryExpression	0		428480	1					
ANR	431199	PrimaryExpression	8		428480	1					
ANR	431200	ReturnStatement	return l ;	2129:4:56020:56028	428480	3	True				
ANR	431201	Identifier	l		428480	0					
ANR	431202	ReturnStatement	return - 1 ;	2131:3:56038:56047	428480	1	True				
ANR	431203	UnaryOperationExpression	- 1		428480	0					
ANR	431204	UnaryOperator	-		428480	0					
ANR	431205	PrimaryExpression	1		428480	1					
ANR	431206	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG )		428480	4					
ANR	431207	Condition	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG	2134:6:56060:56108	428480	0	True				
ANR	431208	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		428480	0		&			
ANR	431209	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431210	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431211	PtrMemberAccess	op -> operands		428480	0					
ANR	431212	Identifier	op		428480	0					
ANR	431213	Identifier	operands		428480	1					
ANR	431214	PrimaryExpression	1		428480	1					
ANR	431215	Identifier	type		428480	1					
ANR	431216	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		428480	1		&			
ANR	431217	Identifier	OT_REGTYPE		428480	0					
ANR	431218	Identifier	OT_SEGMENTREG		428480	1					
ANR	431219	CompoundStatement		372:57:10054:10054	428480	1					
ANR	431220	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] == 0 )		428480	0					
ANR	431221	Condition	op -> operands [ 1 ] . scale [ 0 ] == 0	2135:7:56120:56148	428480	0	True				
ANR	431222	EqualityExpression	op -> operands [ 1 ] . scale [ 0 ] == 0		428480	0		==			
ANR	431223	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431224	MemberAccess	op -> operands [ 1 ] . scale		428480	0					
ANR	431225	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431226	PtrMemberAccess	op -> operands		428480	0					
ANR	431227	Identifier	op		428480	0					
ANR	431228	Identifier	operands		428480	1					
ANR	431229	PrimaryExpression	1		428480	1					
ANR	431230	Identifier	scale		428480	1					
ANR	431231	PrimaryExpression	0		428480	1					
ANR	431232	PrimaryExpression	0		428480	1					
ANR	431233	CompoundStatement		373:38:10094:10094	428480	1					
ANR	431234	ReturnStatement	return - 1 ;	2136:4:56157:56166	428480	0	True				
ANR	431235	UnaryOperationExpression	- 1		428480	0					
ANR	431236	UnaryOperator	-		428480	0					
ANR	431237	PrimaryExpression	1		428480	1					
ANR	431238	ExpressionStatement	data [ l ++ ] = SEG_REG_PREFIXES [ op -> operands [ 1 ] . regs [ 0 ] % 6 ]	2138:3:56176:56233	428480	1	True				
ANR	431239	AssignmentExpression	data [ l ++ ] = SEG_REG_PREFIXES [ op -> operands [ 1 ] . regs [ 0 ] % 6 ]		428480	0		=			
ANR	431240	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431241	Identifier	data		428480	0					
ANR	431242	PostIncDecOperationExpression	l ++		428480	1					
ANR	431243	Identifier	l		428480	0					
ANR	431244	IncDec	++		428480	1					
ANR	431245	ArrayIndexing	SEG_REG_PREFIXES [ op -> operands [ 1 ] . regs [ 0 ] % 6 ]		428480	1					
ANR	431246	Identifier	SEG_REG_PREFIXES		428480	0					
ANR	431247	MultiplicativeExpression	op -> operands [ 1 ] . regs [ 0 ] % 6		428480	1		%			
ANR	431248	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431249	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431250	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431251	PtrMemberAccess	op -> operands		428480	0					
ANR	431252	Identifier	op		428480	0					
ANR	431253	Identifier	operands		428480	1					
ANR	431254	PrimaryExpression	1		428480	1					
ANR	431255	Identifier	regs		428480	1					
ANR	431256	PrimaryExpression	0		428480	1					
ANR	431257	PrimaryExpression	6		428480	1					
ANR	431258	ExpressionStatement	data [ l ++ ] = 0x8b	2139:3:56238:56254	428480	2	True				
ANR	431259	AssignmentExpression	data [ l ++ ] = 0x8b		428480	0		=			
ANR	431260	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431261	Identifier	data		428480	0					
ANR	431262	PostIncDecOperationExpression	l ++		428480	1					
ANR	431263	Identifier	l		428480	0					
ANR	431264	IncDec	++		428480	1					
ANR	431265	PrimaryExpression	0x8b		428480	1					
ANR	431266	ExpressionStatement	data [ l ++ ] = ( ( ( ut32 ) op -> operands [ 0 ] . reg ) << 3 ) | 0x5	2140:3:56259:56311	428480	3	True				
ANR	431267	AssignmentExpression	data [ l ++ ] = ( ( ( ut32 ) op -> operands [ 0 ] . reg ) << 3 ) | 0x5		428480	0		=			
ANR	431268	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431269	Identifier	data		428480	0					
ANR	431270	PostIncDecOperationExpression	l ++		428480	1					
ANR	431271	Identifier	l		428480	0					
ANR	431272	IncDec	++		428480	1					
ANR	431273	InclusiveOrExpression	( ( ( ut32 ) op -> operands [ 0 ] . reg ) << 3 ) | 0x5		428480	1		|			
ANR	431274	ShiftExpression	( ( ut32 ) op -> operands [ 0 ] . reg ) << 3		428480	0		<<			
ANR	431275	CastExpression	( ut32 ) op -> operands [ 0 ] . reg		428480	0					
ANR	431276	CastTarget	ut32		428480	0					
ANR	431277	MemberAccess	op -> operands [ 0 ] . reg		428480	1					
ANR	431278	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431279	PtrMemberAccess	op -> operands		428480	0					
ANR	431280	Identifier	op		428480	0					
ANR	431281	Identifier	operands		428480	1					
ANR	431282	PrimaryExpression	0		428480	1					
ANR	431283	Identifier	reg		428480	1					
ANR	431284	PrimaryExpression	3		428480	1					
ANR	431285	PrimaryExpression	0x5		428480	1					
ANR	431286	ExpressionStatement	data [ l ++ ] = offset	2141:3:56316:56334	428480	4	True				
ANR	431287	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	431288	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431289	Identifier	data		428480	0					
ANR	431290	PostIncDecOperationExpression	l ++		428480	1					
ANR	431291	Identifier	l		428480	0					
ANR	431292	IncDec	++		428480	1					
ANR	431293	Identifier	offset		428480	1					
ANR	431294	ExpressionStatement	data [ l ++ ] = offset >> 8	2142:3:56339:56362	428480	5	True				
ANR	431295	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	431296	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431297	Identifier	data		428480	0					
ANR	431298	PostIncDecOperationExpression	l ++		428480	1					
ANR	431299	Identifier	l		428480	0					
ANR	431300	IncDec	++		428480	1					
ANR	431301	ShiftExpression	offset >> 8		428480	1		>>			
ANR	431302	Identifier	offset		428480	0					
ANR	431303	PrimaryExpression	8		428480	1					
ANR	431304	ExpressionStatement	data [ l ++ ] = offset >> 16	2143:3:56367:56391	428480	6	True				
ANR	431305	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	431306	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431307	Identifier	data		428480	0					
ANR	431308	PostIncDecOperationExpression	l ++		428480	1					
ANR	431309	Identifier	l		428480	0					
ANR	431310	IncDec	++		428480	1					
ANR	431311	ShiftExpression	offset >> 16		428480	1		>>			
ANR	431312	Identifier	offset		428480	0					
ANR	431313	PrimaryExpression	16		428480	1					
ANR	431314	ExpressionStatement	data [ l ++ ] = offset >> 24	2144:3:56396:56420	428480	7	True				
ANR	431315	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	431316	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431317	Identifier	data		428480	0					
ANR	431318	PostIncDecOperationExpression	l ++		428480	1					
ANR	431319	Identifier	l		428480	0					
ANR	431320	IncDec	++		428480	1					
ANR	431321	ShiftExpression	offset >> 24		428480	1		>>			
ANR	431322	Identifier	offset		428480	0					
ANR	431323	PrimaryExpression	24		428480	1					
ANR	431324	ReturnStatement	return l ;	2145:3:56425:56433	428480	8	True				
ANR	431325	Identifier	l		428480	0					
ANR	431326	IfStatement	if ( a -> bits == 64 )		428480	5					
ANR	431327	Condition	a -> bits == 64	2148:6:56446:56458	428480	0	True				
ANR	431328	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	431329	PtrMemberAccess	a -> bits		428480	0					
ANR	431330	Identifier	a		428480	0					
ANR	431331	Identifier	bits		428480	1					
ANR	431332	PrimaryExpression	64		428480	1					
ANR	431333	CompoundStatement		386:21:10404:10404	428480	1					
ANR	431334	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		428480	0					
ANR	431335	Condition	op -> operands [ 0 ] . type & OT_QWORD	2149:7:56470:56500	428480	0	True				
ANR	431336	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	0		&			
ANR	431337	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	431338	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431339	PtrMemberAccess	op -> operands		428480	0					
ANR	431340	Identifier	op		428480	0					
ANR	431341	Identifier	operands		428480	1					
ANR	431342	PrimaryExpression	0		428480	1					
ANR	431343	Identifier	type		428480	1					
ANR	431344	Identifier	OT_QWORD		428480	1					
ANR	431345	CompoundStatement		387:40:10446:10446	428480	1					
ANR	431346	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_QWORD ) )		428480	0					
ANR	431347	Condition	! ( op -> operands [ 1 ] . type & OT_QWORD )	2150:8:56513:56546	428480	0	True				
ANR	431348	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_QWORD )		428480	0					
ANR	431349	UnaryOperator	!		428480	0					
ANR	431350	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	1		&			
ANR	431351	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431352	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431353	PtrMemberAccess	op -> operands		428480	0					
ANR	431354	Identifier	op		428480	0					
ANR	431355	Identifier	operands		428480	1					
ANR	431356	PrimaryExpression	1		428480	1					
ANR	431357	Identifier	type		428480	1					
ANR	431358	Identifier	OT_QWORD		428480	1					
ANR	431359	CompoundStatement		388:44:10492:10492	428480	1					
ANR	431360	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] != - 1 )		428480	0					
ANR	431361	Condition	op -> operands [ 1 ] . regs [ 0 ] != - 1	2151:9:56560:56588	428480	0	True				
ANR	431362	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] != - 1		428480	0		!=			
ANR	431363	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431364	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431365	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431366	PtrMemberAccess	op -> operands		428480	0					
ANR	431367	Identifier	op		428480	0					
ANR	431368	Identifier	operands		428480	1					
ANR	431369	PrimaryExpression	1		428480	1					
ANR	431370	Identifier	regs		428480	1					
ANR	431371	PrimaryExpression	0		428480	1					
ANR	431372	UnaryOperationExpression	- 1		428480	1					
ANR	431373	UnaryOperator	-		428480	0					
ANR	431374	PrimaryExpression	1		428480	1					
ANR	431375	CompoundStatement		389:40:10534:10534	428480	1					
ANR	431376	ExpressionStatement	data [ l ++ ] = 0x67	2152:6:56599:56615	428480	0	True				
ANR	431377	AssignmentExpression	data [ l ++ ] = 0x67		428480	0		=			
ANR	431378	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431379	Identifier	data		428480	0					
ANR	431380	PostIncDecOperationExpression	l ++		428480	1					
ANR	431381	Identifier	l		428480	0					
ANR	431382	IncDec	++		428480	1					
ANR	431383	PrimaryExpression	0x67		428480	1					
ANR	431384	ExpressionStatement	data [ l ++ ] = 0x48	2154:5:56629:56645	428480	1	True				
ANR	431385	AssignmentExpression	data [ l ++ ] = 0x48		428480	0		=			
ANR	431386	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431387	Identifier	data		428480	0					
ANR	431388	PostIncDecOperationExpression	l ++		428480	1					
ANR	431389	Identifier	l		428480	0					
ANR	431390	IncDec	++		428480	1					
ANR	431391	PrimaryExpression	0x48		428480	1					
ANR	431392	ElseStatement	else		428480	0					
ANR	431393	IfStatement	if ( op -> operands [ 1 ] . type & OT_DWORD )		428480	0					
ANR	431394	Condition	op -> operands [ 1 ] . type & OT_DWORD	2156:14:56667:56697	428480	0	True				
ANR	431395	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		428480	0		&			
ANR	431396	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431397	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431398	PtrMemberAccess	op -> operands		428480	0					
ANR	431399	Identifier	op		428480	0					
ANR	431400	Identifier	operands		428480	1					
ANR	431401	PrimaryExpression	1		428480	1					
ANR	431402	Identifier	type		428480	1					
ANR	431403	Identifier	OT_DWORD		428480	1					
ANR	431404	CompoundStatement		394:47:10643:10643	428480	1					
ANR	431405	ExpressionStatement	data [ l ++ ] = 0x44	2157:4:56706:56722	428480	0	True				
ANR	431406	AssignmentExpression	data [ l ++ ] = 0x44		428480	0		=			
ANR	431407	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431408	Identifier	data		428480	0					
ANR	431409	PostIncDecOperationExpression	l ++		428480	1					
ANR	431410	Identifier	l		428480	0					
ANR	431411	IncDec	++		428480	1					
ANR	431412	PrimaryExpression	0x44		428480	1					
ANR	431413	ElseStatement	else		428480	0					
ANR	431414	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_QWORD ) )		428480	0					
ANR	431415	Condition	! ( op -> operands [ 1 ] . type & OT_QWORD )	2158:14:56738:56771	428480	0	True				
ANR	431416	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_QWORD )		428480	0					
ANR	431417	UnaryOperator	!		428480	0					
ANR	431418	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	1		&			
ANR	431419	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431420	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431421	PtrMemberAccess	op -> operands		428480	0					
ANR	431422	Identifier	op		428480	0					
ANR	431423	Identifier	operands		428480	1					
ANR	431424	PrimaryExpression	1		428480	1					
ANR	431425	Identifier	type		428480	1					
ANR	431426	Identifier	OT_QWORD		428480	1					
ANR	431427	CompoundStatement		396:50:10717:10717	428480	1					
ANR	431428	ExpressionStatement	data [ l ++ ] = 0x67	2159:4:56780:56796	428480	0	True				
ANR	431429	AssignmentExpression	data [ l ++ ] = 0x67		428480	0		=			
ANR	431430	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431431	Identifier	data		428480	0					
ANR	431432	PostIncDecOperationExpression	l ++		428480	1					
ANR	431433	Identifier	l		428480	0					
ANR	431434	IncDec	++		428480	1					
ANR	431435	PrimaryExpression	0x67		428480	1					
ANR	431436	IfStatement	if ( op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD )		428480	1					
ANR	431437	Condition	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD	2161:7:56810:56879	428480	0	True				
ANR	431438	AndExpression	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD		428480	0		&&			
ANR	431439	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		428480	0		&			
ANR	431440	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431441	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431442	PtrMemberAccess	op -> operands		428480	0					
ANR	431443	Identifier	op		428480	0					
ANR	431444	Identifier	operands		428480	1					
ANR	431445	PrimaryExpression	1		428480	1					
ANR	431446	Identifier	type		428480	1					
ANR	431447	Identifier	OT_QWORD		428480	1					
ANR	431448	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	1		&			
ANR	431449	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	431450	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431451	PtrMemberAccess	op -> operands		428480	0					
ANR	431452	Identifier	op		428480	0					
ANR	431453	Identifier	operands		428480	1					
ANR	431454	PrimaryExpression	0		428480	1					
ANR	431455	Identifier	type		428480	1					
ANR	431456	Identifier	OT_QWORD		428480	1					
ANR	431457	CompoundStatement		400:37:10825:10825	428480	1					
ANR	431458	ExpressionStatement	data [ l ++ ] = 0x48	2163:4:56888:56904	428480	0	True				
ANR	431459	AssignmentExpression	data [ l ++ ] = 0x48		428480	0		=			
ANR	431460	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431461	Identifier	data		428480	0					
ANR	431462	PostIncDecOperationExpression	l ++		428480	1					
ANR	431463	Identifier	l		428480	0					
ANR	431464	IncDec	++		428480	1					
ANR	431465	PrimaryExpression	0x48		428480	1					
ANR	431466	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		428480	6					
ANR	431467	Condition	op -> operands [ 0 ] . type & OT_WORD	2167:6:56922:56951	428480	0	True				
ANR	431468	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		428480	0		&			
ANR	431469	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	431470	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431471	PtrMemberAccess	op -> operands		428480	0					
ANR	431472	Identifier	op		428480	0					
ANR	431473	Identifier	operands		428480	1					
ANR	431474	PrimaryExpression	0		428480	1					
ANR	431475	Identifier	type		428480	1					
ANR	431476	Identifier	OT_WORD		428480	1					
ANR	431477	CompoundStatement		405:38:10897:10897	428480	1					
ANR	431478	ExpressionStatement	data [ l ++ ] = 0x66	2168:3:56959:56975	428480	0	True				
ANR	431479	AssignmentExpression	data [ l ++ ] = 0x66		428480	0		=			
ANR	431480	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431481	Identifier	data		428480	0					
ANR	431482	PostIncDecOperationExpression	l ++		428480	1					
ANR	431483	Identifier	l		428480	0					
ANR	431484	IncDec	++		428480	1					
ANR	431485	PrimaryExpression	0x66		428480	1					
ANR	431486	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . type & OT_BYTE ? 0x8a : 0x8b	2169:3:56980:57036	428480	1	True				
ANR	431487	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . type & OT_BYTE ? 0x8a : 0x8b		428480	0		=			
ANR	431488	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431489	Identifier	data		428480	0					
ANR	431490	PostIncDecOperationExpression	l ++		428480	1					
ANR	431491	Identifier	l		428480	0					
ANR	431492	IncDec	++		428480	1					
ANR	431493	ConditionalExpression	op -> operands [ 1 ] . type & OT_BYTE ? 0x8a : 0x8b		428480	1					
ANR	431494	Condition	op -> operands [ 1 ] . type & OT_BYTE		428480	0					
ANR	431495	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		428480	0		&			
ANR	431496	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431497	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431498	PtrMemberAccess	op -> operands		428480	0					
ANR	431499	Identifier	op		428480	0					
ANR	431500	Identifier	operands		428480	1					
ANR	431501	PrimaryExpression	1		428480	1					
ANR	431502	Identifier	type		428480	1					
ANR	431503	Identifier	OT_BYTE		428480	1					
ANR	431504	PrimaryExpression	0x8a		428480	1					
ANR	431505	PrimaryExpression	0x8b		428480	2					
ANR	431506	ElseStatement	else		428480	0					
ANR	431507	CompoundStatement		408:9:10990:10990	428480	0					
ANR	431508	ExpressionStatement	data [ l ++ ] = ( op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE ) ? 0x8a : 0x8b	2171:3:57052:57152	428480	0	True				
ANR	431509	AssignmentExpression	data [ l ++ ] = ( op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE ) ? 0x8a : 0x8b		428480	0		=			
ANR	431510	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431511	Identifier	data		428480	0					
ANR	431512	PostIncDecOperationExpression	l ++		428480	1					
ANR	431513	Identifier	l		428480	0					
ANR	431514	IncDec	++		428480	1					
ANR	431515	ConditionalExpression	( op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE ) ? 0x8a : 0x8b		428480	1					
ANR	431516	Condition	op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE		428480	0					
ANR	431517	OrExpression	op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE		428480	0		||			
ANR	431518	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		428480	0		&			
ANR	431519	MemberAccess	op -> operands [ 1 ] . type		428480	0					
ANR	431520	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431521	PtrMemberAccess	op -> operands		428480	0					
ANR	431522	Identifier	op		428480	0					
ANR	431523	Identifier	operands		428480	1					
ANR	431524	PrimaryExpression	1		428480	1					
ANR	431525	Identifier	type		428480	1					
ANR	431526	Identifier	OT_BYTE		428480	1					
ANR	431527	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		428480	1		&			
ANR	431528	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	431529	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431530	PtrMemberAccess	op -> operands		428480	0					
ANR	431531	Identifier	op		428480	0					
ANR	431532	Identifier	operands		428480	1					
ANR	431533	PrimaryExpression	0		428480	1					
ANR	431534	Identifier	type		428480	1					
ANR	431535	Identifier	OT_BYTE		428480	1					
ANR	431536	PrimaryExpression	0x8a		428480	1					
ANR	431537	PrimaryExpression	0x8b		428480	2					
ANR	431538	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED )		428480	7					
ANR	431539	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED	2176:6:57165:57205	428480	0	True				
ANR	431540	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		428480	0		==			
ANR	431541	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431542	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431543	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431544	PtrMemberAccess	op -> operands		428480	0					
ANR	431545	Identifier	op		428480	0					
ANR	431546	Identifier	operands		428480	1					
ANR	431547	PrimaryExpression	1		428480	1					
ANR	431548	Identifier	regs		428480	1					
ANR	431549	PrimaryExpression	0		428480	1					
ANR	431550	Identifier	X86R_UNDEFINED		428480	1					
ANR	431551	CompoundStatement		414:49:11151:11151	428480	1					
ANR	431552	IfStatement	if ( a -> bits == 64 )		428480	0					
ANR	431553	Condition	a -> bits == 64	2177:7:57217:57229	428480	0	True				
ANR	431554	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	431555	PtrMemberAccess	a -> bits		428480	0					
ANR	431556	Identifier	a		428480	0					
ANR	431557	Identifier	bits		428480	1					
ANR	431558	PrimaryExpression	64		428480	1					
ANR	431559	CompoundStatement		415:22:11175:11175	428480	1					
ANR	431560	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4	2178:4:57238:57280	428480	0	True				
ANR	431561	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4		428480	0		=			
ANR	431562	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431563	Identifier	data		428480	0					
ANR	431564	PostIncDecOperationExpression	l ++		428480	1					
ANR	431565	Identifier	l		428480	0					
ANR	431566	IncDec	++		428480	1					
ANR	431567	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x4		428480	1		|			
ANR	431568	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	431569	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431570	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431571	PtrMemberAccess	op -> operands		428480	0					
ANR	431572	Identifier	op		428480	0					
ANR	431573	Identifier	operands		428480	1					
ANR	431574	PrimaryExpression	0		428480	1					
ANR	431575	Identifier	reg		428480	1					
ANR	431576	PrimaryExpression	3		428480	1					
ANR	431577	PrimaryExpression	0x4		428480	1					
ANR	431578	ExpressionStatement	data [ l ++ ] = 0x25	2179:4:57286:57302	428480	1	True				
ANR	431579	AssignmentExpression	data [ l ++ ] = 0x25		428480	0		=			
ANR	431580	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431581	Identifier	data		428480	0					
ANR	431582	PostIncDecOperationExpression	l ++		428480	1					
ANR	431583	Identifier	l		428480	0					
ANR	431584	IncDec	++		428480	1					
ANR	431585	PrimaryExpression	0x25		428480	1					
ANR	431586	ElseStatement	else		428480	0					
ANR	431587	CompoundStatement		418:10:11257:11257	428480	0					
ANR	431588	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5	2181:4:57320:57362	428480	0	True				
ANR	431589	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5		428480	0		=			
ANR	431590	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431591	Identifier	data		428480	0					
ANR	431592	PostIncDecOperationExpression	l ++		428480	1					
ANR	431593	Identifier	l		428480	0					
ANR	431594	IncDec	++		428480	1					
ANR	431595	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x5		428480	1		|			
ANR	431596	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	431597	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431598	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431599	PtrMemberAccess	op -> operands		428480	0					
ANR	431600	Identifier	op		428480	0					
ANR	431601	Identifier	operands		428480	1					
ANR	431602	PrimaryExpression	0		428480	1					
ANR	431603	Identifier	reg		428480	1					
ANR	431604	PrimaryExpression	3		428480	1					
ANR	431605	PrimaryExpression	0x5		428480	1					
ANR	431606	ExpressionStatement	data [ l ++ ] = offset	2183:3:57372:57390	428480	1	True				
ANR	431607	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	431608	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431609	Identifier	data		428480	0					
ANR	431610	PostIncDecOperationExpression	l ++		428480	1					
ANR	431611	Identifier	l		428480	0					
ANR	431612	IncDec	++		428480	1					
ANR	431613	Identifier	offset		428480	1					
ANR	431614	ExpressionStatement	data [ l ++ ] = offset >> 8	2184:3:57395:57418	428480	2	True				
ANR	431615	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	431616	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431617	Identifier	data		428480	0					
ANR	431618	PostIncDecOperationExpression	l ++		428480	1					
ANR	431619	Identifier	l		428480	0					
ANR	431620	IncDec	++		428480	1					
ANR	431621	ShiftExpression	offset >> 8		428480	1		>>			
ANR	431622	Identifier	offset		428480	0					
ANR	431623	PrimaryExpression	8		428480	1					
ANR	431624	ExpressionStatement	data [ l ++ ] = offset >> 16	2185:3:57423:57447	428480	3	True				
ANR	431625	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	431626	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431627	Identifier	data		428480	0					
ANR	431628	PostIncDecOperationExpression	l ++		428480	1					
ANR	431629	Identifier	l		428480	0					
ANR	431630	IncDec	++		428480	1					
ANR	431631	ShiftExpression	offset >> 16		428480	1		>>			
ANR	431632	Identifier	offset		428480	0					
ANR	431633	PrimaryExpression	16		428480	1					
ANR	431634	ExpressionStatement	data [ l ++ ] = offset >> 24	2186:3:57452:57476	428480	4	True				
ANR	431635	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	431636	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431637	Identifier	data		428480	0					
ANR	431638	PostIncDecOperationExpression	l ++		428480	1					
ANR	431639	Identifier	l		428480	0					
ANR	431640	IncDec	++		428480	1					
ANR	431641	ShiftExpression	offset >> 24		428480	1		>>			
ANR	431642	Identifier	offset		428480	0					
ANR	431643	PrimaryExpression	24		428480	1					
ANR	431644	ElseStatement	else		428480	0					
ANR	431645	CompoundStatement		425:9:11430:11430	428480	0					
ANR	431646	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] > 1 )		428480	0					
ANR	431647	Condition	op -> operands [ 1 ] . scale [ 0 ] > 1	2188:7:57496:57523	428480	0	True				
ANR	431648	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] > 1		428480	0		>			
ANR	431649	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431650	MemberAccess	op -> operands [ 1 ] . scale		428480	0					
ANR	431651	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431652	PtrMemberAccess	op -> operands		428480	0					
ANR	431653	Identifier	op		428480	0					
ANR	431654	Identifier	operands		428480	1					
ANR	431655	PrimaryExpression	1		428480	1					
ANR	431656	Identifier	scale		428480	1					
ANR	431657	PrimaryExpression	0		428480	1					
ANR	431658	PrimaryExpression	1		428480	1					
ANR	431659	CompoundStatement		426:37:11469:11469	428480	1					
ANR	431660	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	2189:4:57532:57572	428480	0	True				
ANR	431661	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		428480	0		=			
ANR	431662	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431663	Identifier	data		428480	0					
ANR	431664	PostIncDecOperationExpression	l ++		428480	1					
ANR	431665	Identifier	l		428480	0					
ANR	431666	IncDec	++		428480	1					
ANR	431667	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		428480	1		|			
ANR	431668	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	431669	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431670	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431671	PtrMemberAccess	op -> operands		428480	0					
ANR	431672	Identifier	op		428480	0					
ANR	431673	Identifier	operands		428480	1					
ANR	431674	PrimaryExpression	0		428480	1					
ANR	431675	Identifier	reg		428480	1					
ANR	431676	PrimaryExpression	3		428480	1					
ANR	431677	PrimaryExpression	4		428480	1					
ANR	431678	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] >= 2 )		428480	1					
ANR	431679	Condition	op -> operands [ 1 ] . scale [ 0 ] >= 2	2191:8:57583:57611	428480	0	True				
ANR	431680	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] >= 2		428480	0		>=			
ANR	431681	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431682	MemberAccess	op -> operands [ 1 ] . scale		428480	0					
ANR	431683	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431684	PtrMemberAccess	op -> operands		428480	0					
ANR	431685	Identifier	op		428480	0					
ANR	431686	Identifier	operands		428480	1					
ANR	431687	PrimaryExpression	1		428480	1					
ANR	431688	Identifier	scale		428480	1					
ANR	431689	PrimaryExpression	0		428480	1					
ANR	431690	PrimaryExpression	2		428480	1					
ANR	431691	CompoundStatement		429:39:11557:11557	428480	1					
ANR	431692	ExpressionStatement	base = 5	2192:5:57621:57629	428480	0	True				
ANR	431693	AssignmentExpression	base = 5		428480	0		=			
ANR	431694	Identifier	base		428480	0					
ANR	431695	PrimaryExpression	5		428480	1					
ANR	431696	IfStatement	if ( base )		428480	2					
ANR	431697	Condition	base	2194:8:57645:57648	428480	0	True				
ANR	431698	Identifier	base		428480	0					
ANR	431699	CompoundStatement		432:14:11594:11594	428480	1					
ANR	431700	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | base	2195:5:57658:57746	428480	0	True				
ANR	431701	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | base		428480	0		=			
ANR	431702	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431703	Identifier	data		428480	0					
ANR	431704	PostIncDecOperationExpression	l ++		428480	1					
ANR	431705	Identifier	l		428480	0					
ANR	431706	IncDec	++		428480	1					
ANR	431707	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | base		428480	1		|			
ANR	431708	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		428480	0		<<			
ANR	431709	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		428480	0					
ANR	431710	Callee	getsib		428480	0					
ANR	431711	Identifier	getsib		428480	0					
ANR	431712	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		428480	1					
ANR	431713	Argument	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431714	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431715	MemberAccess	op -> operands [ 1 ] . scale		428480	0					
ANR	431716	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431717	PtrMemberAccess	op -> operands		428480	0					
ANR	431718	Identifier	op		428480	0					
ANR	431719	Identifier	operands		428480	1					
ANR	431720	PrimaryExpression	1		428480	1					
ANR	431721	Identifier	scale		428480	1					
ANR	431722	PrimaryExpression	0		428480	1					
ANR	431723	PrimaryExpression	6		428480	1					
ANR	431724	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | base		428480	1		|			
ANR	431725	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		428480	0		<<			
ANR	431726	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431727	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431728	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431729	PtrMemberAccess	op -> operands		428480	0					
ANR	431730	Identifier	op		428480	0					
ANR	431731	Identifier	operands		428480	1					
ANR	431732	PrimaryExpression	1		428480	1					
ANR	431733	Identifier	regs		428480	1					
ANR	431734	PrimaryExpression	0		428480	1					
ANR	431735	PrimaryExpression	3		428480	1					
ANR	431736	Identifier	base		428480	1					
ANR	431737	ElseStatement	else		428480	0					
ANR	431738	CompoundStatement		434:11:11702:11702	428480	0					
ANR	431739	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3 | op -> operands [ 1 ] . regs [ 0 ]	2197:5:57766:57842	428480	0	True				
ANR	431740	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	0		=			
ANR	431741	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431742	Identifier	data		428480	0					
ANR	431743	PostIncDecOperationExpression	l ++		428480	1					
ANR	431744	Identifier	l		428480	0					
ANR	431745	IncDec	++		428480	1					
ANR	431746	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	431747	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3		428480	0		<<			
ANR	431748	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		428480	0					
ANR	431749	Callee	getsib		428480	0					
ANR	431750	Identifier	getsib		428480	0					
ANR	431751	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		428480	1					
ANR	431752	Argument	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431753	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		428480	0					
ANR	431754	MemberAccess	op -> operands [ 1 ] . scale		428480	0					
ANR	431755	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431756	PtrMemberAccess	op -> operands		428480	0					
ANR	431757	Identifier	op		428480	0					
ANR	431758	Identifier	operands		428480	1					
ANR	431759	PrimaryExpression	1		428480	1					
ANR	431760	Identifier	scale		428480	1					
ANR	431761	PrimaryExpression	0		428480	1					
ANR	431762	PrimaryExpression	3		428480	1					
ANR	431763	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	1					
ANR	431764	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431765	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431766	PtrMemberAccess	op -> operands		428480	0					
ANR	431767	Identifier	op		428480	0					
ANR	431768	Identifier	operands		428480	1					
ANR	431769	PrimaryExpression	1		428480	1					
ANR	431770	Identifier	regs		428480	1					
ANR	431771	PrimaryExpression	0		428480	1					
ANR	431772	IfStatement	if ( offset || base )		428480	3					
ANR	431773	Condition	offset || base	2199:8:57858:57871	428480	0	True				
ANR	431774	OrExpression	offset || base		428480	0		||			
ANR	431775	Identifier	offset		428480	0					
ANR	431776	Identifier	base		428480	1					
ANR	431777	CompoundStatement		437:24:11817:11817	428480	1					
ANR	431778	ExpressionStatement	data [ l ++ ] = offset	2200:5:57881:57899	428480	0	True				
ANR	431779	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	431780	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431781	Identifier	data		428480	0					
ANR	431782	PostIncDecOperationExpression	l ++		428480	1					
ANR	431783	Identifier	l		428480	0					
ANR	431784	IncDec	++		428480	1					
ANR	431785	Identifier	offset		428480	1					
ANR	431786	ExpressionStatement	data [ l ++ ] = offset >> 8	2201:5:57906:57929	428480	1	True				
ANR	431787	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	431788	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431789	Identifier	data		428480	0					
ANR	431790	PostIncDecOperationExpression	l ++		428480	1					
ANR	431791	Identifier	l		428480	0					
ANR	431792	IncDec	++		428480	1					
ANR	431793	ShiftExpression	offset >> 8		428480	1		>>			
ANR	431794	Identifier	offset		428480	0					
ANR	431795	PrimaryExpression	8		428480	1					
ANR	431796	ExpressionStatement	data [ l ++ ] = offset >> 16	2202:5:57936:57960	428480	2	True				
ANR	431797	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	431798	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431799	Identifier	data		428480	0					
ANR	431800	PostIncDecOperationExpression	l ++		428480	1					
ANR	431801	Identifier	l		428480	0					
ANR	431802	IncDec	++		428480	1					
ANR	431803	ShiftExpression	offset >> 16		428480	1		>>			
ANR	431804	Identifier	offset		428480	0					
ANR	431805	PrimaryExpression	16		428480	1					
ANR	431806	ExpressionStatement	data [ l ++ ] = offset >> 24	2203:5:57967:57991	428480	3	True				
ANR	431807	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	431808	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431809	Identifier	data		428480	0					
ANR	431810	PostIncDecOperationExpression	l ++		428480	1					
ANR	431811	Identifier	l		428480	0					
ANR	431812	IncDec	++		428480	1					
ANR	431813	ShiftExpression	offset >> 24		428480	1		>>			
ANR	431814	Identifier	offset		428480	0					
ANR	431815	PrimaryExpression	24		428480	1					
ANR	431816	ReturnStatement	return l ;	2205:4:58003:58011	428480	4	True				
ANR	431817	Identifier	l		428480	0					
ANR	431818	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		428480	1					
ANR	431819	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	2207:7:58025:58065	428480	0	True				
ANR	431820	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		428480	0		!=			
ANR	431821	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		428480	0					
ANR	431822	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431823	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431824	PtrMemberAccess	op -> operands		428480	0					
ANR	431825	Identifier	op		428480	0					
ANR	431826	Identifier	operands		428480	1					
ANR	431827	PrimaryExpression	1		428480	1					
ANR	431828	Identifier	regs		428480	1					
ANR	431829	PrimaryExpression	1		428480	1					
ANR	431830	Identifier	X86R_UNDEFINED		428480	1					
ANR	431831	CompoundStatement		445:50:12011:12011	428480	1					
ANR	431832	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4	2208:4:58074:58116	428480	0	True				
ANR	431833	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4		428480	0		=			
ANR	431834	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431835	Identifier	data		428480	0					
ANR	431836	PostIncDecOperationExpression	l ++		428480	1					
ANR	431837	Identifier	l		428480	0					
ANR	431838	IncDec	++		428480	1					
ANR	431839	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x4		428480	1		|			
ANR	431840	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	431841	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431842	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431843	PtrMemberAccess	op -> operands		428480	0					
ANR	431844	Identifier	op		428480	0					
ANR	431845	Identifier	operands		428480	1					
ANR	431846	PrimaryExpression	0		428480	1					
ANR	431847	Identifier	reg		428480	1					
ANR	431848	PrimaryExpression	3		428480	1					
ANR	431849	PrimaryExpression	0x4		428480	1					
ANR	431850	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	2209:4:58122:58188	428480	1	True				
ANR	431851	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	0		=			
ANR	431852	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431853	Identifier	data		428480	0					
ANR	431854	PostIncDecOperationExpression	l ++		428480	1					
ANR	431855	Identifier	l		428480	0					
ANR	431856	IncDec	++		428480	1					
ANR	431857	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	431858	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		428480	0		<<			
ANR	431859	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		428480	0					
ANR	431860	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431861	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431862	PtrMemberAccess	op -> operands		428480	0					
ANR	431863	Identifier	op		428480	0					
ANR	431864	Identifier	operands		428480	1					
ANR	431865	PrimaryExpression	1		428480	1					
ANR	431866	Identifier	regs		428480	1					
ANR	431867	PrimaryExpression	1		428480	1					
ANR	431868	PrimaryExpression	3		428480	1					
ANR	431869	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	1					
ANR	431870	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431871	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431872	PtrMemberAccess	op -> operands		428480	0					
ANR	431873	Identifier	op		428480	0					
ANR	431874	Identifier	operands		428480	1					
ANR	431875	PrimaryExpression	1		428480	1					
ANR	431876	Identifier	regs		428480	1					
ANR	431877	PrimaryExpression	0		428480	1					
ANR	431878	ReturnStatement	return l ;	2210:4:58194:58202	428480	2	True				
ANR	431879	Identifier	l		428480	0					
ANR	431880	IfStatement	if ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		428480	2					
ANR	431881	Condition	offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	2213:7:58217:58261	428480	0	True				
ANR	431882	OrExpression	offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		428480	0		||			
ANR	431883	Identifier	offset		428480	0					
ANR	431884	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		428480	1		==			
ANR	431885	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431886	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431887	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431888	PtrMemberAccess	op -> operands		428480	0					
ANR	431889	Identifier	op		428480	0					
ANR	431890	Identifier	operands		428480	1					
ANR	431891	PrimaryExpression	1		428480	1					
ANR	431892	Identifier	regs		428480	1					
ANR	431893	PrimaryExpression	0		428480	1					
ANR	431894	Identifier	X86R_EBP		428480	1					
ANR	431895	CompoundStatement		451:54:12207:12207	428480	1					
ANR	431896	ExpressionStatement	mod = 0x2	2214:4:58270:58279	428480	0	True				
ANR	431897	AssignmentExpression	mod = 0x2		428480	0		=			
ANR	431898	Identifier	mod		428480	0					
ANR	431899	PrimaryExpression	0x2		428480	1					
ANR	431900	IfStatement	if ( op -> operands [ 1 ] . offset > 127 )		428480	1					
ANR	431901	Condition	op -> operands [ 1 ] . offset > 127	2215:8:58289:58316	428480	0	True				
ANR	431902	RelationalExpression	op -> operands [ 1 ] . offset > 127		428480	0		>			
ANR	431903	MemberAccess	op -> operands [ 1 ] . offset		428480	0					
ANR	431904	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431905	PtrMemberAccess	op -> operands		428480	0					
ANR	431906	Identifier	op		428480	0					
ANR	431907	Identifier	operands		428480	1					
ANR	431908	PrimaryExpression	1		428480	1					
ANR	431909	Identifier	offset		428480	1					
ANR	431910	PrimaryExpression	127		428480	1					
ANR	431911	CompoundStatement		453:38:12262:12262	428480	1					
ANR	431912	ExpressionStatement	mod = 0x4	2216:5:58326:58335	428480	0	True				
ANR	431913	AssignmentExpression	mod = 0x4		428480	0		=			
ANR	431914	Identifier	mod		428480	0					
ANR	431915	PrimaryExpression	0x4		428480	1					
ANR	431916	IfStatement	if ( a -> bits == 64 && offset && op -> operands [ 0 ] . type & OT_QWORD )		428480	3					
ANR	431917	Condition	a -> bits == 64 && offset && op -> operands [ 0 ] . type & OT_QWORD	2219:7:58355:58412	428480	0	True				
ANR	431918	AndExpression	a -> bits == 64 && offset && op -> operands [ 0 ] . type & OT_QWORD		428480	0		&&			
ANR	431919	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	431920	PtrMemberAccess	a -> bits		428480	0					
ANR	431921	Identifier	a		428480	0					
ANR	431922	Identifier	bits		428480	1					
ANR	431923	PrimaryExpression	64		428480	1					
ANR	431924	AndExpression	offset && op -> operands [ 0 ] . type & OT_QWORD		428480	1		&&			
ANR	431925	Identifier	offset		428480	0					
ANR	431926	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	1		&			
ANR	431927	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	431928	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431929	PtrMemberAccess	op -> operands		428480	0					
ANR	431930	Identifier	op		428480	0					
ANR	431931	Identifier	operands		428480	1					
ANR	431932	PrimaryExpression	0		428480	1					
ANR	431933	Identifier	type		428480	1					
ANR	431934	Identifier	OT_QWORD		428480	1					
ANR	431935	CompoundStatement		457:67:12358:12358	428480	1					
ANR	431936	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		428480	0					
ANR	431937	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP	2220:8:58425:58459	428480	0	True				
ANR	431938	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		428480	0		==			
ANR	431939	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	431940	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431941	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431942	PtrMemberAccess	op -> operands		428480	0					
ANR	431943	Identifier	op		428480	0					
ANR	431944	Identifier	operands		428480	1					
ANR	431945	PrimaryExpression	1		428480	1					
ANR	431946	Identifier	regs		428480	1					
ANR	431947	PrimaryExpression	0		428480	1					
ANR	431948	Identifier	X86R_RIP		428480	1					
ANR	431949	CompoundStatement		458:45:12405:12405	428480	1					
ANR	431950	ExpressionStatement	data [ l ++ ] = 0x5	2221:5:58469:58484	428480	0	True				
ANR	431951	AssignmentExpression	data [ l ++ ] = 0x5		428480	0		=			
ANR	431952	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431953	Identifier	data		428480	0					
ANR	431954	PostIncDecOperationExpression	l ++		428480	1					
ANR	431955	Identifier	l		428480	0					
ANR	431956	IncDec	++		428480	1					
ANR	431957	PrimaryExpression	0x5		428480	1					
ANR	431958	ElseStatement	else		428480	0					
ANR	431959	CompoundStatement		460:11:12440:12440	428480	0					
ANR	431960	IfStatement	if ( op -> operands [ 1 ] . offset > 127 )		428480	0					
ANR	431961	Condition	op -> operands [ 1 ] . offset > 127	2223:9:58508:58535	428480	0	True				
ANR	431962	RelationalExpression	op -> operands [ 1 ] . offset > 127		428480	0		>			
ANR	431963	MemberAccess	op -> operands [ 1 ] . offset		428480	0					
ANR	431964	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431965	PtrMemberAccess	op -> operands		428480	0					
ANR	431966	Identifier	op		428480	0					
ANR	431967	Identifier	operands		428480	1					
ANR	431968	PrimaryExpression	1		428480	1					
ANR	431969	Identifier	offset		428480	1					
ANR	431970	PrimaryExpression	127		428480	1					
ANR	431971	CompoundStatement		461:39:12481:12481	428480	1					
ANR	431972	ExpressionStatement	data [ l ++ ] = 0x80 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	2224:6:58546:58615	428480	0	True				
ANR	431973	AssignmentExpression	data [ l ++ ] = 0x80 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	0		=			
ANR	431974	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	431975	Identifier	data		428480	0					
ANR	431976	PostIncDecOperationExpression	l ++		428480	1					
ANR	431977	Identifier	l		428480	0					
ANR	431978	IncDec	++		428480	1					
ANR	431979	InclusiveOrExpression	0x80 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	431980	PrimaryExpression	0x80		428480	0					
ANR	431981	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	431982	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	431983	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	431984	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	431985	PtrMemberAccess	op -> operands		428480	0					
ANR	431986	Identifier	op		428480	0					
ANR	431987	Identifier	operands		428480	1					
ANR	431988	PrimaryExpression	0		428480	1					
ANR	431989	Identifier	reg		428480	1					
ANR	431990	PrimaryExpression	3		428480	1					
ANR	431991	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	1					
ANR	431992	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	431993	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	431994	PtrMemberAccess	op -> operands		428480	0					
ANR	431995	Identifier	op		428480	0					
ANR	431996	Identifier	operands		428480	1					
ANR	431997	PrimaryExpression	1		428480	1					
ANR	431998	Identifier	regs		428480	1					
ANR	431999	PrimaryExpression	0		428480	1					
ANR	432000	ElseStatement	else		428480	0					
ANR	432001	CompoundStatement		463:12:12572:12572	428480	0					
ANR	432002	ExpressionStatement	data [ l ++ ] = 0x40 | op -> operands [ 1 ] . regs [ 0 ]	2226:6:58637:58679	428480	0	True				
ANR	432003	AssignmentExpression	data [ l ++ ] = 0x40 | op -> operands [ 1 ] . regs [ 0 ]		428480	0		=			
ANR	432004	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432005	Identifier	data		428480	0					
ANR	432006	PostIncDecOperationExpression	l ++		428480	1					
ANR	432007	Identifier	l		428480	0					
ANR	432008	IncDec	++		428480	1					
ANR	432009	InclusiveOrExpression	0x40 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	432010	PrimaryExpression	0x40		428480	0					
ANR	432011	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	1					
ANR	432012	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432013	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432014	PtrMemberAccess	op -> operands		428480	0					
ANR	432015	Identifier	op		428480	0					
ANR	432016	Identifier	operands		428480	1					
ANR	432017	PrimaryExpression	1		428480	1					
ANR	432018	Identifier	regs		428480	1					
ANR	432019	PrimaryExpression	0		428480	1					
ANR	432020	IfStatement	if ( op -> operands [ 1 ] . offset > 127 )		428480	1					
ANR	432021	Condition	op -> operands [ 1 ] . offset > 127	2229:8:58702:58729	428480	0	True				
ANR	432022	RelationalExpression	op -> operands [ 1 ] . offset > 127		428480	0		>			
ANR	432023	MemberAccess	op -> operands [ 1 ] . offset		428480	0					
ANR	432024	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432025	PtrMemberAccess	op -> operands		428480	0					
ANR	432026	Identifier	op		428480	0					
ANR	432027	Identifier	operands		428480	1					
ANR	432028	PrimaryExpression	1		428480	1					
ANR	432029	Identifier	offset		428480	1					
ANR	432030	PrimaryExpression	127		428480	1					
ANR	432031	CompoundStatement		467:38:12675:12675	428480	1					
ANR	432032	ExpressionStatement	mod = 0x1	2230:5:58739:58748	428480	0	True				
ANR	432033	AssignmentExpression	mod = 0x1		428480	0		=			
ANR	432034	Identifier	mod		428480	0					
ANR	432035	PrimaryExpression	0x1		428480	1					
ANR	432036	ElseStatement	else		428480	0					
ANR	432037	CompoundStatement		470:10:12709:12709	428480	0					
ANR	432038	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP && ( op -> operands [ 0 ] . type & OT_DWORD ) )		428480	0					
ANR	432039	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP && ( op -> operands [ 0 ] . type & OT_DWORD )	2233:8:58776:58847	428480	0	True				
ANR	432040	AndExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP && ( op -> operands [ 0 ] . type & OT_DWORD )		428480	0		&&			
ANR	432041	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP		428480	0		==			
ANR	432042	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	432043	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432044	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432045	PtrMemberAccess	op -> operands		428480	0					
ANR	432046	Identifier	op		428480	0					
ANR	432047	Identifier	operands		428480	1					
ANR	432048	PrimaryExpression	1		428480	1					
ANR	432049	Identifier	regs		428480	1					
ANR	432050	PrimaryExpression	0		428480	1					
ANR	432051	Identifier	X86R_EIP		428480	1					
ANR	432052	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		428480	1		&			
ANR	432053	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	432054	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	432055	PtrMemberAccess	op -> operands		428480	0					
ANR	432056	Identifier	op		428480	0					
ANR	432057	Identifier	operands		428480	1					
ANR	432058	PrimaryExpression	0		428480	1					
ANR	432059	Identifier	type		428480	1					
ANR	432060	Identifier	OT_DWORD		428480	1					
ANR	432061	CompoundStatement		471:82:12793:12793	428480	1					
ANR	432062	ExpressionStatement	data [ l ++ ] = 0x0d	2234:5:58857:58873	428480	0	True				
ANR	432063	AssignmentExpression	data [ l ++ ] = 0x0d		428480	0		=			
ANR	432064	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432065	Identifier	data		428480	0					
ANR	432066	PostIncDecOperationExpression	l ++		428480	1					
ANR	432067	Identifier	l		428480	0					
ANR	432068	IncDec	++		428480	1					
ANR	432069	PrimaryExpression	0x0d		428480	1					
ANR	432070	ElseStatement	else		428480	0					
ANR	432071	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP && ( op -> operands [ 0 ] . type & OT_QWORD ) )		428480	0					
ANR	432072	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP && ( op -> operands [ 0 ] . type & OT_QWORD )	2235:15:58890:58961	428480	0	True				
ANR	432073	AndExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP && ( op -> operands [ 0 ] . type & OT_QWORD )		428480	0		&&			
ANR	432074	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		428480	0		==			
ANR	432075	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	432076	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432077	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432078	PtrMemberAccess	op -> operands		428480	0					
ANR	432079	Identifier	op		428480	0					
ANR	432080	Identifier	operands		428480	1					
ANR	432081	PrimaryExpression	1		428480	1					
ANR	432082	Identifier	regs		428480	1					
ANR	432083	PrimaryExpression	0		428480	1					
ANR	432084	Identifier	X86R_RIP		428480	1					
ANR	432085	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		428480	1		&			
ANR	432086	MemberAccess	op -> operands [ 0 ] . type		428480	0					
ANR	432087	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	432088	PtrMemberAccess	op -> operands		428480	0					
ANR	432089	Identifier	op		428480	0					
ANR	432090	Identifier	operands		428480	1					
ANR	432091	PrimaryExpression	0		428480	1					
ANR	432092	Identifier	type		428480	1					
ANR	432093	Identifier	OT_QWORD		428480	1					
ANR	432094	CompoundStatement		473:89:12907:12907	428480	1					
ANR	432095	ExpressionStatement	data [ l ++ ] = 0x05	2236:5:58971:58987	428480	0	True				
ANR	432096	AssignmentExpression	data [ l ++ ] = 0x05		428480	0		=			
ANR	432097	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432098	Identifier	data		428480	0					
ANR	432099	PostIncDecOperationExpression	l ++		428480	1					
ANR	432100	Identifier	l		428480	0					
ANR	432101	IncDec	++		428480	1					
ANR	432102	PrimaryExpression	0x05		428480	1					
ANR	432103	ElseStatement	else		428480	0					
ANR	432104	CompoundStatement		475:11:12943:12943	428480	0					
ANR	432105	ExpressionStatement	data [ l ++ ] = mod << 5 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	2238:5:59007:59080	428480	0	True				
ANR	432106	AssignmentExpression	data [ l ++ ] = mod << 5 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	0		=			
ANR	432107	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432108	Identifier	data		428480	0					
ANR	432109	PostIncDecOperationExpression	l ++		428480	1					
ANR	432110	Identifier	l		428480	0					
ANR	432111	IncDec	++		428480	1					
ANR	432112	InclusiveOrExpression	mod << 5 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	432113	ShiftExpression	mod << 5		428480	0		<<			
ANR	432114	Identifier	mod		428480	0					
ANR	432115	PrimaryExpression	5		428480	1					
ANR	432116	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		428480	1		|			
ANR	432117	ShiftExpression	op -> operands [ 0 ] . reg << 3		428480	0		<<			
ANR	432118	MemberAccess	op -> operands [ 0 ] . reg		428480	0					
ANR	432119	ArrayIndexing	op -> operands [ 0 ]		428480	0					
ANR	432120	PtrMemberAccess	op -> operands		428480	0					
ANR	432121	Identifier	op		428480	0					
ANR	432122	Identifier	operands		428480	1					
ANR	432123	PrimaryExpression	0		428480	1					
ANR	432124	Identifier	reg		428480	1					
ANR	432125	PrimaryExpression	3		428480	1					
ANR	432126	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	1					
ANR	432127	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432128	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432129	PtrMemberAccess	op -> operands		428480	0					
ANR	432130	Identifier	op		428480	0					
ANR	432131	Identifier	operands		428480	1					
ANR	432132	PrimaryExpression	1		428480	1					
ANR	432133	Identifier	regs		428480	1					
ANR	432134	PrimaryExpression	0		428480	1					
ANR	432135	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		428480	4					
ANR	432136	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	2241:7:59100:59134	428480	0	True				
ANR	432137	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		428480	0		==			
ANR	432138	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	432139	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432140	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432141	PtrMemberAccess	op -> operands		428480	0					
ANR	432142	Identifier	op		428480	0					
ANR	432143	Identifier	operands		428480	1					
ANR	432144	PrimaryExpression	1		428480	1					
ANR	432145	Identifier	regs		428480	1					
ANR	432146	PrimaryExpression	0		428480	1					
ANR	432147	Identifier	X86R_ESP		428480	1					
ANR	432148	CompoundStatement		479:44:13080:13080	428480	1					
ANR	432149	ExpressionStatement	data [ l ++ ] = 0x24	2242:4:59143:59159	428480	0	True				
ANR	432150	AssignmentExpression	data [ l ++ ] = 0x24		428480	0		=			
ANR	432151	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432152	Identifier	data		428480	0					
ANR	432153	PostIncDecOperationExpression	l ++		428480	1					
ANR	432154	Identifier	l		428480	0					
ANR	432155	IncDec	++		428480	1					
ANR	432156	PrimaryExpression	0x24		428480	1					
ANR	432157	IfStatement	if ( mod >= 0x2 )		428480	5					
ANR	432158	Condition	mod >= 0x2	2244:7:59173:59182	428480	0	True				
ANR	432159	RelationalExpression	mod >= 0x2		428480	0		>=			
ANR	432160	Identifier	mod		428480	0					
ANR	432161	PrimaryExpression	0x2		428480	1					
ANR	432162	CompoundStatement		482:19:13128:13128	428480	1					
ANR	432163	ExpressionStatement	data [ l ++ ] = offset	2245:4:59191:59209	428480	0	True				
ANR	432164	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	432165	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432166	Identifier	data		428480	0					
ANR	432167	PostIncDecOperationExpression	l ++		428480	1					
ANR	432168	Identifier	l		428480	0					
ANR	432169	IncDec	++		428480	1					
ANR	432170	Identifier	offset		428480	1					
ANR	432171	IfStatement	if ( op -> operands [ 1 ] . offset > 128 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP )		428480	1					
ANR	432172	Condition	op -> operands [ 1 ] . offset > 128 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP	2246:8:59219:59285	428480	0	True				
ANR	432173	OrExpression	op -> operands [ 1 ] . offset > 128 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP		428480	0		||			
ANR	432174	RelationalExpression	op -> operands [ 1 ] . offset > 128		428480	0		>			
ANR	432175	MemberAccess	op -> operands [ 1 ] . offset		428480	0					
ANR	432176	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432177	PtrMemberAccess	op -> operands		428480	0					
ANR	432178	Identifier	op		428480	0					
ANR	432179	Identifier	operands		428480	1					
ANR	432180	PrimaryExpression	1		428480	1					
ANR	432181	Identifier	offset		428480	1					
ANR	432182	PrimaryExpression	128		428480	1					
ANR	432183	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP		428480	1		==			
ANR	432184	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	432185	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432186	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432187	PtrMemberAccess	op -> operands		428480	0					
ANR	432188	Identifier	op		428480	0					
ANR	432189	Identifier	operands		428480	1					
ANR	432190	PrimaryExpression	1		428480	1					
ANR	432191	Identifier	regs		428480	1					
ANR	432192	PrimaryExpression	0		428480	1					
ANR	432193	Identifier	X86R_EIP		428480	1					
ANR	432194	CompoundStatement		484:77:13231:13231	428480	1					
ANR	432195	ExpressionStatement	data [ l ++ ] = offset >> 8	2247:5:59295:59318	428480	0	True				
ANR	432196	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	432197	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432198	Identifier	data		428480	0					
ANR	432199	PostIncDecOperationExpression	l ++		428480	1					
ANR	432200	Identifier	l		428480	0					
ANR	432201	IncDec	++		428480	1					
ANR	432202	ShiftExpression	offset >> 8		428480	1		>>			
ANR	432203	Identifier	offset		428480	0					
ANR	432204	PrimaryExpression	8		428480	1					
ANR	432205	ExpressionStatement	data [ l ++ ] = offset >> 16	2248:5:59325:59349	428480	1	True				
ANR	432206	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	432207	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432208	Identifier	data		428480	0					
ANR	432209	PostIncDecOperationExpression	l ++		428480	1					
ANR	432210	Identifier	l		428480	0					
ANR	432211	IncDec	++		428480	1					
ANR	432212	ShiftExpression	offset >> 16		428480	1		>>			
ANR	432213	Identifier	offset		428480	0					
ANR	432214	PrimaryExpression	16		428480	1					
ANR	432215	ExpressionStatement	data [ l ++ ] = offset >> 24	2249:5:59356:59380	428480	2	True				
ANR	432216	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	432217	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432218	Identifier	data		428480	0					
ANR	432219	PostIncDecOperationExpression	l ++		428480	1					
ANR	432220	Identifier	l		428480	0					
ANR	432221	IncDec	++		428480	1					
ANR	432222	ShiftExpression	offset >> 24		428480	1		>>			
ANR	432223	Identifier	offset		428480	0					
ANR	432224	PrimaryExpression	24		428480	1					
ANR	432225	ElseStatement	else		428480	0					
ANR	432226	IfStatement	if ( a -> bits == 64 && ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP ) )		428480	0					
ANR	432227	Condition	a -> bits == 64 && ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )	2251:14:59402:59465	428480	0	True				
ANR	432228	AndExpression	a -> bits == 64 && ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		428480	0		&&			
ANR	432229	EqualityExpression	a -> bits == 64		428480	0		==			
ANR	432230	PtrMemberAccess	a -> bits		428480	0					
ANR	432231	Identifier	a		428480	0					
ANR	432232	Identifier	bits		428480	1					
ANR	432233	PrimaryExpression	64		428480	1					
ANR	432234	OrExpression	offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		428480	1		||			
ANR	432235	Identifier	offset		428480	0					
ANR	432236	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		428480	1		==			
ANR	432237	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	432238	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432239	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432240	PtrMemberAccess	op -> operands		428480	0					
ANR	432241	Identifier	op		428480	0					
ANR	432242	Identifier	operands		428480	1					
ANR	432243	PrimaryExpression	1		428480	1					
ANR	432244	Identifier	regs		428480	1					
ANR	432245	PrimaryExpression	0		428480	1					
ANR	432246	Identifier	X86R_RIP		428480	1					
ANR	432247	CompoundStatement		489:80:13411:13411	428480	1					
ANR	432248	ExpressionStatement	data [ l ++ ] = offset	2252:4:59474:59492	428480	0	True				
ANR	432249	AssignmentExpression	data [ l ++ ] = offset		428480	0		=			
ANR	432250	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432251	Identifier	data		428480	0					
ANR	432252	PostIncDecOperationExpression	l ++		428480	1					
ANR	432253	Identifier	l		428480	0					
ANR	432254	IncDec	++		428480	1					
ANR	432255	Identifier	offset		428480	1					
ANR	432256	IfStatement	if ( op -> operands [ 1 ] . offset > 127 || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		428480	1					
ANR	432257	Condition	op -> operands [ 1 ] . offset > 127 || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP	2253:8:59502:59568	428480	0	True				
ANR	432258	OrExpression	op -> operands [ 1 ] . offset > 127 || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		428480	0		||			
ANR	432259	RelationalExpression	op -> operands [ 1 ] . offset > 127		428480	0		>			
ANR	432260	MemberAccess	op -> operands [ 1 ] . offset		428480	0					
ANR	432261	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432262	PtrMemberAccess	op -> operands		428480	0					
ANR	432263	Identifier	op		428480	0					
ANR	432264	Identifier	operands		428480	1					
ANR	432265	PrimaryExpression	1		428480	1					
ANR	432266	Identifier	offset		428480	1					
ANR	432267	PrimaryExpression	127		428480	1					
ANR	432268	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		428480	1		==			
ANR	432269	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		428480	0					
ANR	432270	MemberAccess	op -> operands [ 1 ] . regs		428480	0					
ANR	432271	ArrayIndexing	op -> operands [ 1 ]		428480	0					
ANR	432272	PtrMemberAccess	op -> operands		428480	0					
ANR	432273	Identifier	op		428480	0					
ANR	432274	Identifier	operands		428480	1					
ANR	432275	PrimaryExpression	1		428480	1					
ANR	432276	Identifier	regs		428480	1					
ANR	432277	PrimaryExpression	0		428480	1					
ANR	432278	Identifier	X86R_RIP		428480	1					
ANR	432279	CompoundStatement		491:77:13514:13514	428480	1					
ANR	432280	ExpressionStatement	data [ l ++ ] = offset >> 8	2254:5:59578:59601	428480	0	True				
ANR	432281	AssignmentExpression	data [ l ++ ] = offset >> 8		428480	0		=			
ANR	432282	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432283	Identifier	data		428480	0					
ANR	432284	PostIncDecOperationExpression	l ++		428480	1					
ANR	432285	Identifier	l		428480	0					
ANR	432286	IncDec	++		428480	1					
ANR	432287	ShiftExpression	offset >> 8		428480	1		>>			
ANR	432288	Identifier	offset		428480	0					
ANR	432289	PrimaryExpression	8		428480	1					
ANR	432290	ExpressionStatement	data [ l ++ ] = offset >> 16	2255:5:59608:59632	428480	1	True				
ANR	432291	AssignmentExpression	data [ l ++ ] = offset >> 16		428480	0		=			
ANR	432292	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432293	Identifier	data		428480	0					
ANR	432294	PostIncDecOperationExpression	l ++		428480	1					
ANR	432295	Identifier	l		428480	0					
ANR	432296	IncDec	++		428480	1					
ANR	432297	ShiftExpression	offset >> 16		428480	1		>>			
ANR	432298	Identifier	offset		428480	0					
ANR	432299	PrimaryExpression	16		428480	1					
ANR	432300	ExpressionStatement	data [ l ++ ] = offset >> 24	2256:5:59639:59663	428480	2	True				
ANR	432301	AssignmentExpression	data [ l ++ ] = offset >> 24		428480	0		=			
ANR	432302	ArrayIndexing	data [ l ++ ]		428480	0					
ANR	432303	Identifier	data		428480	0					
ANR	432304	PostIncDecOperationExpression	l ++		428480	1					
ANR	432305	Identifier	l		428480	0					
ANR	432306	IncDec	++		428480	1					
ANR	432307	ShiftExpression	offset >> 24		428480	1		>>			
ANR	432308	Identifier	offset		428480	0					
ANR	432309	PrimaryExpression	24		428480	1					
ANR	432310	ReturnStatement	return l ;	2261:1:59684:59692	428480	7	True				
ANR	432311	Identifier	l		428480	0					
ANR	432312	ReturnType	static int		428480	1					
ANR	432313	Identifier	opmov		428480	2					
ANR	432314	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		428480	3					
ANR	432315	Parameter	RAsm * a	1763:17:46018:46024	428480	0	True				
ANR	432316	ParameterType	RAsm *		428480	0					
ANR	432317	Identifier	a		428480	1					
ANR	432318	Parameter	ut8 * data	1763:26:46027:46035	428480	1	True				
ANR	432319	ParameterType	ut8 *		428480	0					
ANR	432320	Identifier	data		428480	1					
ANR	432321	Parameter	const Opcode * op	1763:37:46038:46053	428480	2	True				
ANR	432322	ParameterType	const Opcode *		428480	0					
ANR	432323	Identifier	op		428480	1					
ANR	432324	CFGEntryNode	ENTRY		428480		True				
ANR	432325	CFGExitNode	EXIT		428480		True				
ANR	432326	Symbol	op -> operands [ 0 ] . offset_sign		428480						
ANR	432327	Symbol	mod		428480						
ANR	432328	Symbol	op -> operands [ 0 ] . scale		428480						
ANR	432329	Symbol	* op -> operands [ 1 ] . regs		428480						
ANR	432330	Symbol	op -> operands [ 0 ] . reg		428480						
ANR	432331	Symbol	op -> operands [ 0 ] . offset		428480						
ANR	432332	Symbol	a -> bits		428480						
ANR	432333	Symbol	op -> operands [ 1 ] . scale		428480						
ANR	432334	Symbol	OT_GPREG		428480						
ANR	432335	Symbol	OT_DEBUGREG		428480						
ANR	432336	Symbol	use_sib		428480						
ANR	432337	Symbol	byte		428480						
ANR	432338	Symbol	index		428480						
ANR	432339	Symbol	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size		428480						
ANR	432340	Symbol	* op -> operands [ 0 ] . scale		428480						
ANR	432341	Symbol	rm		428480						
ANR	432342	Symbol	X86R_DI		428480						
ANR	432343	Symbol	* ( ( Opcode * ) op ) -> operands		428480						
ANR	432344	Symbol	getsib		428480						
ANR	432345	Symbol	* * op -> operands [ 1 ] . regs		428480						
ANR	432346	Symbol	SEG_REG_PREFIXES		428480						
ANR	432347	Symbol	op -> operands [ 1 ] . extended		428480						
ANR	432348	Symbol	* * op		428480						
ANR	432349	Symbol	op -> operands [ 1 ] . regs		428480						
ANR	432350	Symbol	op -> operands [ 1 ] . offset_sign		428480						
ANR	432351	Symbol	X86R_R8		428480						
ANR	432352	Symbol	is_debug_or_control		428480						
ANR	432353	Symbol	OT_MEMORY		428480						
ANR	432354	Symbol	op -> operands [ 1 ] . is_good_flag		428480						
ANR	432355	Symbol	a		428480						
ANR	432356	Symbol	OT_CONSTANT		428480						
ANR	432357	Symbol	use_oso		428480						
ANR	432358	Symbol	X86R_BP		428480						
ANR	432359	Symbol	op -> operands [ 0 ] . explicit_size		428480						
ANR	432360	Symbol	ALL_SIZE		428480						
ANR	432361	Symbol	X86R_BX		428480						
ANR	432362	Symbol	X86R_SI		428480						
ANR	432363	Symbol	* * op -> operands		428480						
ANR	432364	Symbol	l		428480						
ANR	432365	Symbol	X86R_RIP		428480						
ANR	432366	Symbol	OT_REGALL		428480						
ANR	432367	Symbol	* * * * op		428480						
ANR	432368	Symbol	OT_REGTYPE		428480						
ANR	432369	Symbol	X86R_UNDEFINED		428480						
ANR	432370	Symbol	op -> operands [ 1 ] . type		428480						
ANR	432371	Symbol	* op -> operands [ 0 ] . regs		428480						
ANR	432372	Symbol	rip_rel		428480						
ANR	432373	Symbol	* data		428480						
ANR	432374	Symbol	OT_DWORD		428480						
ANR	432375	Symbol	UT32_MAX		428480						
ANR	432376	Symbol	data		428480						
ANR	432377	Symbol	* op		428480						
ANR	432378	Symbol	op -> operands [ 0 ] . dest_size		428480						
ANR	432379	Symbol	op -> operands [ 1 ] . immediate		428480						
ANR	432380	Symbol	opcode		428480						
ANR	432381	Symbol	modrm		428480						
ANR	432382	Symbol	op -> operands [ 0 ] . extended		428480						
ANR	432383	Symbol	* op -> operands		428480						
ANR	432384	Symbol	reg		428480						
ANR	432385	Symbol	reg_bits		428480						
ANR	432386	Symbol	B0111		428480						
ANR	432387	Symbol	OT_BYTE		428480						
ANR	432388	Symbol	X86R_EAX		428480						
ANR	432389	Symbol	offset		428480						
ANR	432390	Symbol	rex		428480						
ANR	432391	Symbol	op -> operands [ 1 ] . reg		428480						
ANR	432392	Symbol	( ( Opcode * ) op ) -> operands		428480						
ANR	432393	Symbol	OT_SEGMENTREG		428480						
ANR	432394	Symbol	op -> operands [ 1 ] . offset		428480						
ANR	432395	Symbol	X86R_EIP		428480						
ANR	432396	Symbol	immediate		428480						
ANR	432397	Symbol	true		428480						
ANR	432398	Symbol	* * * op		428480						
ANR	432399	Symbol	B0100		428480						
ANR	432400	Symbol	B0101		428480						
ANR	432401	Symbol	op -> operands [ 0 ] . regs		428480						
ANR	432402	Symbol	op -> operands [ 0 ] . reg_size		428480						
ANR	432403	Symbol	OT_QWORD		428480						
ANR	432404	Symbol	X86R_ESP		428480						
ANR	432405	Symbol	scale		428480						
ANR	432406	Symbol	X86R_EBP		428480						
ANR	432407	Symbol	* SEG_REG_PREFIXES		428480						
ANR	432408	Symbol	sib		428480						
ANR	432409	Symbol	op -> operands [ 0 ] . type		428480						
ANR	432410	Symbol	B0010		428480						
ANR	432411	Symbol	dest_bits		428480						
ANR	432412	Symbol	B0011		428480						
ANR	432413	Symbol	* op -> operands [ 1 ] . scale		428480						
ANR	432414	Symbol	use_rex		428480						
ANR	432415	Symbol	op		428480						
ANR	432416	Symbol	OPSIZE_SHIFT		428480						
ANR	432417	Symbol	OT_WORD		428480						
ANR	432418	Symbol	false		428480						
ANR	432419	Symbol	* a		428480						
ANR	432420	Symbol	op -> operands [ 1 ] . sign		428480						
ANR	432421	Symbol	use_aso		428480						
ANR	432422	Symbol	B0000		428480						
ANR	432423	Symbol	* * * op -> operands		428480						
ANR	432424	Symbol	B0001		428480						
ANR	432425	Symbol	op -> operands		428480						
ANR	432426	Symbol	base		428480						
ANR	432427	Function	opmul	2264:0:59697:60255							
ANR	432428	FunctionDef	"opmul (RAsm * a , ut8 * data , const Opcode * op)"		432427	0					
ANR	432429	CompoundStatement		2264:55:59752:60255	432427	0					
ANR	432430	ExpressionStatement	is_valid_registers ( op )	2265:1:59755:59778	432427	0	True				
ANR	432431	CallExpression	is_valid_registers ( op )		432427	0					
ANR	432432	Callee	is_valid_registers		432427	0					
ANR	432433	Identifier	is_valid_registers		432427	0					
ANR	432434	ArgumentList	op		432427	1					
ANR	432435	Argument	op		432427	0					
ANR	432436	Identifier	op		432427	0					
ANR	432437	IdentifierDeclStatement	int l = 0 ;	2266:1:59781:59790	432427	1	True				
ANR	432438	IdentifierDecl	l = 0		432427	0					
ANR	432439	IdentifierDeclType	int		432427	0					
ANR	432440	Identifier	l		432427	1					
ANR	432441	AssignmentExpression	l = 0		432427	2		=			
ANR	432442	Identifier	l		432427	0					
ANR	432443	PrimaryExpression	0		432427	1					
ANR	432444	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		432427	2					
ANR	432445	Condition	op -> operands [ 0 ] . type & OT_QWORD	2268:6:59799:59829	432427	0	True				
ANR	432446	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		432427	0		&			
ANR	432447	MemberAccess	op -> operands [ 0 ] . type		432427	0					
ANR	432448	ArrayIndexing	op -> operands [ 0 ]		432427	0					
ANR	432449	PtrMemberAccess	op -> operands		432427	0					
ANR	432450	Identifier	op		432427	0					
ANR	432451	Identifier	operands		432427	1					
ANR	432452	PrimaryExpression	0		432427	1					
ANR	432453	Identifier	type		432427	1					
ANR	432454	Identifier	OT_QWORD		432427	1					
ANR	432455	CompoundStatement		5:40:80:80	432427	1					
ANR	432456	ExpressionStatement	data [ l ++ ] = 0x48	2269:2:59837:59853	432427	0	True				
ANR	432457	AssignmentExpression	data [ l ++ ] = 0x48		432427	0		=			
ANR	432458	ArrayIndexing	data [ l ++ ]		432427	0					
ANR	432459	Identifier	data		432427	0					
ANR	432460	PostIncDecOperationExpression	l ++		432427	1					
ANR	432461	Identifier	l		432427	0					
ANR	432462	IncDec	++		432427	1					
ANR	432463	PrimaryExpression	0x48		432427	1					
ANR	432464	SwitchStatement	switch ( op -> operands_count )		432427	3					
ANR	432465	Condition	op -> operands_count	2271:9:59867:59884	432427	0	True				
ANR	432466	PtrMemberAccess	op -> operands_count		432427	0					
ANR	432467	Identifier	op		432427	0					
ANR	432468	Identifier	operands_count		432427	1					
ANR	432469	CompoundStatement		8:29:134:134	432427	1					
ANR	432470	Label	case 1 :	2272:1:59890:59896	432427	0	True				
ANR	432471	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		432427	1					
ANR	432472	Condition	op -> operands [ 0 ] . type & OT_WORD	2273:7:59905:59934	432427	0	True				
ANR	432473	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		432427	0		&			
ANR	432474	MemberAccess	op -> operands [ 0 ] . type		432427	0					
ANR	432475	ArrayIndexing	op -> operands [ 0 ]		432427	0					
ANR	432476	PtrMemberAccess	op -> operands		432427	0					
ANR	432477	Identifier	op		432427	0					
ANR	432478	Identifier	operands		432427	1					
ANR	432479	PrimaryExpression	0		432427	1					
ANR	432480	Identifier	type		432427	1					
ANR	432481	Identifier	OT_WORD		432427	1					
ANR	432482	CompoundStatement		10:40:185:185	432427	1					
ANR	432483	ExpressionStatement	data [ l ++ ] = 0x66	2274:3:59943:59959	432427	0	True				
ANR	432484	AssignmentExpression	data [ l ++ ] = 0x66		432427	0		=			
ANR	432485	ArrayIndexing	data [ l ++ ]		432427	0					
ANR	432486	Identifier	data		432427	0					
ANR	432487	PostIncDecOperationExpression	l ++		432427	1					
ANR	432488	Identifier	l		432427	0					
ANR	432489	IncDec	++		432427	1					
ANR	432490	PrimaryExpression	0x66		432427	1					
ANR	432491	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		432427	2					
ANR	432492	Condition	op -> operands [ 0 ] . type & OT_BYTE	2276:6:59971:60000	432427	0	True				
ANR	432493	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		432427	0		&			
ANR	432494	MemberAccess	op -> operands [ 0 ] . type		432427	0					
ANR	432495	ArrayIndexing	op -> operands [ 0 ]		432427	0					
ANR	432496	PtrMemberAccess	op -> operands		432427	0					
ANR	432497	Identifier	op		432427	0					
ANR	432498	Identifier	operands		432427	1					
ANR	432499	PrimaryExpression	0		432427	1					
ANR	432500	Identifier	type		432427	1					
ANR	432501	Identifier	OT_BYTE		432427	1					
ANR	432502	CompoundStatement		13:38:250:250	432427	1					
ANR	432503	ExpressionStatement	data [ l ++ ] = 0xf6	2277:3:60008:60024	432427	0	True				
ANR	432504	AssignmentExpression	data [ l ++ ] = 0xf6		432427	0		=			
ANR	432505	ArrayIndexing	data [ l ++ ]		432427	0					
ANR	432506	Identifier	data		432427	0					
ANR	432507	PostIncDecOperationExpression	l ++		432427	1					
ANR	432508	Identifier	l		432427	0					
ANR	432509	IncDec	++		432427	1					
ANR	432510	PrimaryExpression	0xf6		432427	1					
ANR	432511	ElseStatement	else		432427	0					
ANR	432512	CompoundStatement		15:9:282:282	432427	0					
ANR	432513	ExpressionStatement	data [ l ++ ] = 0xf7	2279:3:60040:60056	432427	0	True				
ANR	432514	AssignmentExpression	data [ l ++ ] = 0xf7		432427	0		=			
ANR	432515	ArrayIndexing	data [ l ++ ]		432427	0					
ANR	432516	Identifier	data		432427	0					
ANR	432517	PostIncDecOperationExpression	l ++		432427	1					
ANR	432518	Identifier	l		432427	0					
ANR	432519	IncDec	++		432427	1					
ANR	432520	PrimaryExpression	0xf7		432427	1					
ANR	432521	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		432427	3					
ANR	432522	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2281:6:60068:60099	432427	0	True				
ANR	432523	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		432427	0		&			
ANR	432524	MemberAccess	op -> operands [ 0 ] . type		432427	0					
ANR	432525	ArrayIndexing	op -> operands [ 0 ]		432427	0					
ANR	432526	PtrMemberAccess	op -> operands		432427	0					
ANR	432527	Identifier	op		432427	0					
ANR	432528	Identifier	operands		432427	1					
ANR	432529	PrimaryExpression	0		432427	1					
ANR	432530	Identifier	type		432427	1					
ANR	432531	Identifier	OT_MEMORY		432427	1					
ANR	432532	CompoundStatement		18:40:349:349	432427	1					
ANR	432533	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	2282:3:60107:60149	432427	0	True				
ANR	432534	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		432427	0		=			
ANR	432535	ArrayIndexing	data [ l ++ ]		432427	0					
ANR	432536	Identifier	data		432427	0					
ANR	432537	PostIncDecOperationExpression	l ++		432427	1					
ANR	432538	Identifier	l		432427	0					
ANR	432539	IncDec	++		432427	1					
ANR	432540	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		432427	1		|			
ANR	432541	PrimaryExpression	0x20		432427	0					
ANR	432542	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		432427	1					
ANR	432543	MemberAccess	op -> operands [ 0 ] . regs		432427	0					
ANR	432544	ArrayIndexing	op -> operands [ 0 ]		432427	0					
ANR	432545	PtrMemberAccess	op -> operands		432427	0					
ANR	432546	Identifier	op		432427	0					
ANR	432547	Identifier	operands		432427	1					
ANR	432548	PrimaryExpression	0		432427	1					
ANR	432549	Identifier	regs		432427	1					
ANR	432550	PrimaryExpression	0		432427	1					
ANR	432551	ElseStatement	else		432427	0					
ANR	432552	CompoundStatement		20:9:407:407	432427	0					
ANR	432553	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	2284:3:60165:60203	432427	0	True				
ANR	432554	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		432427	0		=			
ANR	432555	ArrayIndexing	data [ l ++ ]		432427	0					
ANR	432556	Identifier	data		432427	0					
ANR	432557	PostIncDecOperationExpression	l ++		432427	1					
ANR	432558	Identifier	l		432427	0					
ANR	432559	IncDec	++		432427	1					
ANR	432560	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		432427	1		|			
ANR	432561	PrimaryExpression	0xe0		432427	0					
ANR	432562	MemberAccess	op -> operands [ 0 ] . reg		432427	1					
ANR	432563	ArrayIndexing	op -> operands [ 0 ]		432427	0					
ANR	432564	PtrMemberAccess	op -> operands		432427	0					
ANR	432565	Identifier	op		432427	0					
ANR	432566	Identifier	operands		432427	1					
ANR	432567	PrimaryExpression	0		432427	1					
ANR	432568	Identifier	reg		432427	1					
ANR	432569	BreakStatement	break ;	2286:2:60211:60216	432427	4	True				
ANR	432570	Label	default :	2287:1:60219:60226	432427	5	True				
ANR	432571	Identifier	default		432427	0					
ANR	432572	ReturnStatement	return - 1 ;	2288:2:60230:60239	432427	6	True				
ANR	432573	UnaryOperationExpression	- 1		432427	0					
ANR	432574	UnaryOperator	-		432427	0					
ANR	432575	PrimaryExpression	1		432427	1					
ANR	432576	ReturnStatement	return l ;	2290:1:60245:60253	432427	4	True				
ANR	432577	Identifier	l		432427	0					
ANR	432578	ReturnType	static int		432427	1					
ANR	432579	Identifier	opmul		432427	2					
ANR	432580	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		432427	3					
ANR	432581	Parameter	RAsm * a	2264:17:59714:59720	432427	0	True				
ANR	432582	ParameterType	RAsm *		432427	0					
ANR	432583	Identifier	a		432427	1					
ANR	432584	Parameter	ut8 * data	2264:26:59723:59731	432427	1	True				
ANR	432585	ParameterType	ut8 *		432427	0					
ANR	432586	Identifier	data		432427	1					
ANR	432587	Parameter	const Opcode * op	2264:37:59734:59749	432427	2	True				
ANR	432588	ParameterType	const Opcode *		432427	0					
ANR	432589	Identifier	op		432427	1					
ANR	432590	CFGEntryNode	ENTRY		432427		True				
ANR	432591	CFGExitNode	EXIT		432427		True				
ANR	432592	Symbol	a		432427						
ANR	432593	Symbol	op		432427						
ANR	432594	Symbol	OT_WORD		432427						
ANR	432595	Symbol	OT_QWORD		432427						
ANR	432596	Symbol	data		432427						
ANR	432597	Symbol	* op		432427						
ANR	432598	Symbol	* * op -> operands		432427						
ANR	432599	Symbol	l		432427						
ANR	432600	Symbol	* * op		432427						
ANR	432601	Symbol	* op -> operands		432427						
ANR	432602	Symbol	op -> operands_count		432427						
ANR	432603	Symbol	* op -> operands [ 0 ] . regs		432427						
ANR	432604	Symbol	op -> operands [ 0 ] . type		432427						
ANR	432605	Symbol	* * * op		432427						
ANR	432606	Symbol	op -> operands [ 0 ] . reg		432427						
ANR	432607	Symbol	op -> operands		432427						
ANR	432608	Symbol	* data		432427						
ANR	432609	Symbol	OT_MEMORY		432427						
ANR	432610	Symbol	op -> operands [ 0 ] . regs		432427						
ANR	432611	Symbol	OT_BYTE		432427						
ANR	432612	Function	oppop	2293:0:60258:61462							
ANR	432613	FunctionDef	"oppop (RAsm * a , ut8 * data , const Opcode * op)"		432612	0					
ANR	432614	CompoundStatement		2293:55:60313:61462	432612	0					
ANR	432615	ExpressionStatement	is_valid_registers ( op )	2294:1:60316:60339	432612	0	True				
ANR	432616	CallExpression	is_valid_registers ( op )		432612	0					
ANR	432617	Callee	is_valid_registers		432612	0					
ANR	432618	Identifier	is_valid_registers		432612	0					
ANR	432619	ArgumentList	op		432612	1					
ANR	432620	Argument	op		432612	0					
ANR	432621	Identifier	op		432612	0					
ANR	432622	IdentifierDeclStatement	int l = 0 ;	2295:1:60342:60351	432612	1	True				
ANR	432623	IdentifierDecl	l = 0		432612	0					
ANR	432624	IdentifierDeclType	int		432612	0					
ANR	432625	Identifier	l		432612	1					
ANR	432626	AssignmentExpression	l = 0		432612	2		=			
ANR	432627	Identifier	l		432612	0					
ANR	432628	PrimaryExpression	0		432612	1					
ANR	432629	IdentifierDeclStatement	int offset = 0 ;	2296:1:60354:60368	432612	2	True				
ANR	432630	IdentifierDecl	offset = 0		432612	0					
ANR	432631	IdentifierDeclType	int		432612	0					
ANR	432632	Identifier	offset		432612	1					
ANR	432633	AssignmentExpression	offset = 0		432612	2		=			
ANR	432634	Identifier	offset		432612	0					
ANR	432635	PrimaryExpression	0		432612	1					
ANR	432636	IdentifierDeclStatement	int mod = 0 ;	2297:1:60371:60382	432612	3	True				
ANR	432637	IdentifierDecl	mod = 0		432612	0					
ANR	432638	IdentifierDeclType	int		432612	0					
ANR	432639	Identifier	mod		432612	1					
ANR	432640	AssignmentExpression	mod = 0		432612	2		=			
ANR	432641	Identifier	mod		432612	0					
ANR	432642	PrimaryExpression	0		432612	1					
ANR	432643	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		432612	4					
ANR	432644	Condition	op -> operands [ 0 ] . type & OT_GPREG	2298:5:60389:60419	432612	0	True				
ANR	432645	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		432612	0		&			
ANR	432646	MemberAccess	op -> operands [ 0 ] . type		432612	0					
ANR	432647	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432648	PtrMemberAccess	op -> operands		432612	0					
ANR	432649	Identifier	op		432612	0					
ANR	432650	Identifier	operands		432612	1					
ANR	432651	PrimaryExpression	0		432612	1					
ANR	432652	Identifier	type		432612	1					
ANR	432653	Identifier	OT_GPREG		432612	1					
ANR	432654	CompoundStatement		6:38:108:108	432612	1					
ANR	432655	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		432612	0					
ANR	432656	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2299:6:60430:60461	432612	0	True				
ANR	432657	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		432612	0		&			
ANR	432658	MemberAccess	op -> operands [ 0 ] . type		432612	0					
ANR	432659	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432660	PtrMemberAccess	op -> operands		432612	0					
ANR	432661	Identifier	op		432612	0					
ANR	432662	Identifier	operands		432612	1					
ANR	432663	PrimaryExpression	0		432612	1					
ANR	432664	Identifier	type		432612	1					
ANR	432665	Identifier	OT_MEMORY		432612	1					
ANR	432666	CompoundStatement		7:40:150:150	432612	1					
ANR	432667	ReturnStatement	return - 1 ;	2300:3:60469:60478	432612	0	True				
ANR	432668	UnaryOperationExpression	- 1		432612	0					
ANR	432669	UnaryOperator	-		432612	0					
ANR	432670	PrimaryExpression	1		432612	1					
ANR	432671	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG )		432612	1					
ANR	432672	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG	2302:6:60490:60538	432612	0	True				
ANR	432673	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG		432612	0		&			
ANR	432674	MemberAccess	op -> operands [ 0 ] . type		432612	0					
ANR	432675	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432676	PtrMemberAccess	op -> operands		432612	0					
ANR	432677	Identifier	op		432612	0					
ANR	432678	Identifier	operands		432612	1					
ANR	432679	PrimaryExpression	0		432612	1					
ANR	432680	Identifier	type		432612	1					
ANR	432681	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		432612	1		&			
ANR	432682	Identifier	OT_REGTYPE		432612	0					
ANR	432683	Identifier	OT_SEGMENTREG		432612	1					
ANR	432684	CompoundStatement		11:3:232:240	432612	1					
ANR	432685	IdentifierDeclStatement	ut8 base ;	2303:3:60546:60554	432612	0	True				
ANR	432686	IdentifierDecl	base		432612	0					
ANR	432687	IdentifierDeclType	ut8		432612	0					
ANR	432688	Identifier	base		432612	1					
ANR	432689	IfStatement	if ( op -> operands [ 0 ] . reg & X86R_FS )		432612	1					
ANR	432690	Condition	op -> operands [ 0 ] . reg & X86R_FS	2304:7:60563:60591	432612	0	True				
ANR	432691	BitAndExpression	op -> operands [ 0 ] . reg & X86R_FS		432612	0		&			
ANR	432692	MemberAccess	op -> operands [ 0 ] . reg		432612	0					
ANR	432693	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432694	PtrMemberAccess	op -> operands		432612	0					
ANR	432695	Identifier	op		432612	0					
ANR	432696	Identifier	operands		432612	1					
ANR	432697	PrimaryExpression	0		432612	1					
ANR	432698	Identifier	reg		432612	1					
ANR	432699	Identifier	X86R_FS		432612	1					
ANR	432700	CompoundStatement		12:38:280:280	432612	1					
ANR	432701	ExpressionStatement	data [ l ++ ] = 0x0f	2305:4:60600:60616	432612	0	True				
ANR	432702	AssignmentExpression	data [ l ++ ] = 0x0f		432612	0		=			
ANR	432703	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432704	Identifier	data		432612	0					
ANR	432705	PostIncDecOperationExpression	l ++		432612	1					
ANR	432706	Identifier	l		432612	0					
ANR	432707	IncDec	++		432612	1					
ANR	432708	PrimaryExpression	0x0f		432612	1					
ANR	432709	ExpressionStatement	base = 0x81	2306:4:60622:60633	432612	1	True				
ANR	432710	AssignmentExpression	base = 0x81		432612	0		=			
ANR	432711	Identifier	base		432612	0					
ANR	432712	PrimaryExpression	0x81		432612	1					
ANR	432713	ElseStatement	else		432612	0					
ANR	432714	CompoundStatement		15:10:331:331	432612	0					
ANR	432715	ExpressionStatement	base = 0x7	2308:4:60651:60661	432612	0	True				
ANR	432716	AssignmentExpression	base = 0x7		432612	0		=			
ANR	432717	Identifier	base		432612	0					
ANR	432718	PrimaryExpression	0x7		432612	1					
ANR	432719	ExpressionStatement	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )	2310:3:60671:60715	432612	2	True				
ANR	432720	AssignmentExpression	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )		432612	0		=			
ANR	432721	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432722	Identifier	data		432612	0					
ANR	432723	PostIncDecOperationExpression	l ++		432612	1					
ANR	432724	Identifier	l		432612	0					
ANR	432725	IncDec	++		432612	1					
ANR	432726	AdditiveExpression	base + ( 8 * op -> operands [ 0 ] . reg )		432612	1		+			
ANR	432727	Identifier	base		432612	0					
ANR	432728	MultiplicativeExpression	8 * op -> operands [ 0 ] . reg		432612	1		*			
ANR	432729	PrimaryExpression	8		432612	0					
ANR	432730	MemberAccess	op -> operands [ 0 ] . reg		432612	1					
ANR	432731	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432732	PtrMemberAccess	op -> operands		432612	0					
ANR	432733	Identifier	op		432612	0					
ANR	432734	Identifier	operands		432612	1					
ANR	432735	PrimaryExpression	0		432612	1					
ANR	432736	Identifier	reg		432612	1					
ANR	432737	ElseStatement	else		432612	0					
ANR	432738	CompoundStatement		20:3:417:432	432612	0					
ANR	432739	IdentifierDeclStatement	ut8 base = 0x58 ;	2312:3:60731:60746	432612	0	True				
ANR	432740	IdentifierDecl	base = 0x58		432612	0					
ANR	432741	IdentifierDeclType	ut8		432612	0					
ANR	432742	Identifier	base		432612	1					
ANR	432743	AssignmentExpression	base = 0x58		432612	2		=			
ANR	432744	Identifier	base		432612	0					
ANR	432745	PrimaryExpression	0x58		432612	1					
ANR	432746	ExpressionStatement	data [ l ++ ] = base + op -> operands [ 0 ] . reg	2313:3:60751:60789	432612	1	True				
ANR	432747	AssignmentExpression	data [ l ++ ] = base + op -> operands [ 0 ] . reg		432612	0		=			
ANR	432748	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432749	Identifier	data		432612	0					
ANR	432750	PostIncDecOperationExpression	l ++		432612	1					
ANR	432751	Identifier	l		432612	0					
ANR	432752	IncDec	++		432612	1					
ANR	432753	AdditiveExpression	base + op -> operands [ 0 ] . reg		432612	1		+			
ANR	432754	Identifier	base		432612	0					
ANR	432755	MemberAccess	op -> operands [ 0 ] . reg		432612	1					
ANR	432756	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432757	PtrMemberAccess	op -> operands		432612	0					
ANR	432758	Identifier	op		432612	0					
ANR	432759	Identifier	operands		432612	1					
ANR	432760	PrimaryExpression	0		432612	1					
ANR	432761	Identifier	reg		432612	1					
ANR	432762	ElseStatement	else		432612	0					
ANR	432763	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		432612	0					
ANR	432764	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2315:12:60807:60838	432612	0	True				
ANR	432765	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		432612	0		&			
ANR	432766	MemberAccess	op -> operands [ 0 ] . type		432612	0					
ANR	432767	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432768	PtrMemberAccess	op -> operands		432612	0					
ANR	432769	Identifier	op		432612	0					
ANR	432770	Identifier	operands		432612	1					
ANR	432771	PrimaryExpression	0		432612	1					
ANR	432772	Identifier	type		432612	1					
ANR	432773	Identifier	OT_MEMORY		432612	1					
ANR	432774	CompoundStatement		23:46:527:527	432612	1					
ANR	432775	ExpressionStatement	data [ l ++ ] = 0x8f	2316:2:60845:60861	432612	0	True				
ANR	432776	AssignmentExpression	data [ l ++ ] = 0x8f		432612	0		=			
ANR	432777	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432778	Identifier	data		432612	0					
ANR	432779	PostIncDecOperationExpression	l ++		432612	1					
ANR	432780	Identifier	l		432612	0					
ANR	432781	IncDec	++		432612	1					
ANR	432782	PrimaryExpression	0x8f		432612	1					
ANR	432783	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2317:2:60865:60926	432612	1	True				
ANR	432784	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		432612	0		=			
ANR	432785	Identifier	offset		432612	0					
ANR	432786	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		432612	1		*			
ANR	432787	MemberAccess	op -> operands [ 0 ] . offset		432612	0					
ANR	432788	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432789	PtrMemberAccess	op -> operands		432612	0					
ANR	432790	Identifier	op		432612	0					
ANR	432791	Identifier	operands		432612	1					
ANR	432792	PrimaryExpression	0		432612	1					
ANR	432793	Identifier	offset		432612	1					
ANR	432794	MemberAccess	op -> operands [ 0 ] . offset_sign		432612	1					
ANR	432795	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432796	PtrMemberAccess	op -> operands		432612	0					
ANR	432797	Identifier	op		432612	0					
ANR	432798	Identifier	operands		432612	1					
ANR	432799	PrimaryExpression	0		432612	1					
ANR	432800	Identifier	offset_sign		432612	1					
ANR	432801	IfStatement	if ( offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		432612	2					
ANR	432802	Condition	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	2318:6:60934:60983	432612	0	True				
ANR	432803	OrExpression	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		432612	0		||			
ANR	432804	EqualityExpression	offset != 0		432612	0		!=			
ANR	432805	Identifier	offset		432612	0					
ANR	432806	PrimaryExpression	0		432612	1					
ANR	432807	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		432612	1		==			
ANR	432808	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		432612	0					
ANR	432809	MemberAccess	op -> operands [ 0 ] . regs		432612	0					
ANR	432810	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432811	PtrMemberAccess	op -> operands		432612	0					
ANR	432812	Identifier	op		432612	0					
ANR	432813	Identifier	operands		432612	1					
ANR	432814	PrimaryExpression	0		432612	1					
ANR	432815	Identifier	regs		432612	1					
ANR	432816	PrimaryExpression	0		432612	1					
ANR	432817	Identifier	X86R_EBP		432612	1					
ANR	432818	CompoundStatement		26:58:672:672	432612	1					
ANR	432819	ExpressionStatement	mod = 1	2319:3:60991:60998	432612	0	True				
ANR	432820	AssignmentExpression	mod = 1		432612	0		=			
ANR	432821	Identifier	mod		432612	0					
ANR	432822	PrimaryExpression	1		432612	1					
ANR	432823	IfStatement	if ( offset >= 128 || offset < - 128 )		432612	1					
ANR	432824	Condition	offset >= 128 || offset < - 128	2320:7:61007:61036	432612	0	True				
ANR	432825	OrExpression	offset >= 128 || offset < - 128		432612	0		||			
ANR	432826	RelationalExpression	offset >= 128		432612	0		>=			
ANR	432827	Identifier	offset		432612	0					
ANR	432828	PrimaryExpression	128		432612	1					
ANR	432829	RelationalExpression	offset < - 128		432612	1		<			
ANR	432830	Identifier	offset		432612	0					
ANR	432831	UnaryOperationExpression	- 128		432612	1					
ANR	432832	UnaryOperator	-		432612	0					
ANR	432833	PrimaryExpression	128		432612	1					
ANR	432834	CompoundStatement		28:39:725:725	432612	1					
ANR	432835	ExpressionStatement	mod = 2	2321:4:61045:61052	432612	0	True				
ANR	432836	AssignmentExpression	mod = 2		432612	0		=			
ANR	432837	Identifier	mod		432612	0					
ANR	432838	PrimaryExpression	2		432612	1					
ANR	432839	ExpressionStatement	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . regs [ 0 ]	2323:3:61062:61108	432612	2	True				
ANR	432840	AssignmentExpression	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . regs [ 0 ]		432612	0		=			
ANR	432841	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432842	Identifier	data		432612	0					
ANR	432843	PostIncDecOperationExpression	l ++		432612	1					
ANR	432844	Identifier	l		432612	0					
ANR	432845	IncDec	++		432612	1					
ANR	432846	InclusiveOrExpression	mod << 6 | op -> operands [ 0 ] . regs [ 0 ]		432612	1		|			
ANR	432847	ShiftExpression	mod << 6		432612	0		<<			
ANR	432848	Identifier	mod		432612	0					
ANR	432849	PrimaryExpression	6		432612	1					
ANR	432850	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		432612	1					
ANR	432851	MemberAccess	op -> operands [ 0 ] . regs		432612	0					
ANR	432852	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432853	PtrMemberAccess	op -> operands		432612	0					
ANR	432854	Identifier	op		432612	0					
ANR	432855	Identifier	operands		432612	1					
ANR	432856	PrimaryExpression	0		432612	1					
ANR	432857	Identifier	regs		432612	1					
ANR	432858	PrimaryExpression	0		432612	1					
ANR	432859	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		432612	3					
ANR	432860	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2324:7:61117:61151	432612	0	True				
ANR	432861	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		432612	0		==			
ANR	432862	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		432612	0					
ANR	432863	MemberAccess	op -> operands [ 0 ] . regs		432612	0					
ANR	432864	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432865	PtrMemberAccess	op -> operands		432612	0					
ANR	432866	Identifier	op		432612	0					
ANR	432867	Identifier	operands		432612	1					
ANR	432868	PrimaryExpression	0		432612	1					
ANR	432869	Identifier	regs		432612	1					
ANR	432870	PrimaryExpression	0		432612	1					
ANR	432871	Identifier	X86R_ESP		432612	1					
ANR	432872	CompoundStatement		32:44:840:840	432612	1					
ANR	432873	ExpressionStatement	data [ l ++ ] = 0x24	2325:4:61160:61176	432612	0	True				
ANR	432874	AssignmentExpression	data [ l ++ ] = 0x24		432612	0		=			
ANR	432875	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432876	Identifier	data		432612	0					
ANR	432877	PostIncDecOperationExpression	l ++		432612	1					
ANR	432878	Identifier	l		432612	0					
ANR	432879	IncDec	++		432612	1					
ANR	432880	PrimaryExpression	0x24		432612	1					
ANR	432881	ExpressionStatement	data [ l ++ ] = offset	2327:3:61186:61204	432612	4	True				
ANR	432882	AssignmentExpression	data [ l ++ ] = offset		432612	0		=			
ANR	432883	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432884	Identifier	data		432612	0					
ANR	432885	PostIncDecOperationExpression	l ++		432612	1					
ANR	432886	Identifier	l		432612	0					
ANR	432887	IncDec	++		432612	1					
ANR	432888	Identifier	offset		432612	1					
ANR	432889	IfStatement	if ( mod == 2 )		432612	5					
ANR	432890	Condition	mod == 2	2328:7:61213:61220	432612	0	True				
ANR	432891	EqualityExpression	mod == 2		432612	0		==			
ANR	432892	Identifier	mod		432612	0					
ANR	432893	PrimaryExpression	2		432612	1					
ANR	432894	CompoundStatement		36:17:909:909	432612	1					
ANR	432895	ExpressionStatement	data [ l ++ ] = offset >> 8	2329:4:61229:61252	432612	0	True				
ANR	432896	AssignmentExpression	data [ l ++ ] = offset >> 8		432612	0		=			
ANR	432897	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432898	Identifier	data		432612	0					
ANR	432899	PostIncDecOperationExpression	l ++		432612	1					
ANR	432900	Identifier	l		432612	0					
ANR	432901	IncDec	++		432612	1					
ANR	432902	ShiftExpression	offset >> 8		432612	1		>>			
ANR	432903	Identifier	offset		432612	0					
ANR	432904	PrimaryExpression	8		432612	1					
ANR	432905	ExpressionStatement	data [ l ++ ] = offset >> 16	2330:4:61258:61282	432612	1	True				
ANR	432906	AssignmentExpression	data [ l ++ ] = offset >> 16		432612	0		=			
ANR	432907	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432908	Identifier	data		432612	0					
ANR	432909	PostIncDecOperationExpression	l ++		432612	1					
ANR	432910	Identifier	l		432612	0					
ANR	432911	IncDec	++		432612	1					
ANR	432912	ShiftExpression	offset >> 16		432612	1		>>			
ANR	432913	Identifier	offset		432612	0					
ANR	432914	PrimaryExpression	16		432612	1					
ANR	432915	ExpressionStatement	data [ l ++ ] = offset >> 24	2331:4:61288:61312	432612	2	True				
ANR	432916	AssignmentExpression	data [ l ++ ] = offset >> 24		432612	0		=			
ANR	432917	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432918	Identifier	data		432612	0					
ANR	432919	PostIncDecOperationExpression	l ++		432612	1					
ANR	432920	Identifier	l		432612	0					
ANR	432921	IncDec	++		432612	1					
ANR	432922	ShiftExpression	offset >> 24		432612	1		>>			
ANR	432923	Identifier	offset		432612	0					
ANR	432924	PrimaryExpression	24		432612	1					
ANR	432925	ElseStatement	else		432612	0					
ANR	432926	CompoundStatement		41:9:1014:1014	432612	0					
ANR	432927	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]	2334:3:61333:61368	432612	0	True				
ANR	432928	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]		432612	0		=			
ANR	432929	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432930	Identifier	data		432612	0					
ANR	432931	PostIncDecOperationExpression	l ++		432612	1					
ANR	432932	Identifier	l		432612	0					
ANR	432933	IncDec	++		432612	1					
ANR	432934	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		432612	1					
ANR	432935	MemberAccess	op -> operands [ 0 ] . regs		432612	0					
ANR	432936	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432937	PtrMemberAccess	op -> operands		432612	0					
ANR	432938	Identifier	op		432612	0					
ANR	432939	Identifier	operands		432612	1					
ANR	432940	PrimaryExpression	0		432612	1					
ANR	432941	Identifier	regs		432612	1					
ANR	432942	PrimaryExpression	0		432612	1					
ANR	432943	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		432612	1					
ANR	432944	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2335:7:61377:61411	432612	0	True				
ANR	432945	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		432612	0		==			
ANR	432946	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		432612	0					
ANR	432947	MemberAccess	op -> operands [ 0 ] . regs		432612	0					
ANR	432948	ArrayIndexing	op -> operands [ 0 ]		432612	0					
ANR	432949	PtrMemberAccess	op -> operands		432612	0					
ANR	432950	Identifier	op		432612	0					
ANR	432951	Identifier	operands		432612	1					
ANR	432952	PrimaryExpression	0		432612	1					
ANR	432953	Identifier	regs		432612	1					
ANR	432954	PrimaryExpression	0		432612	1					
ANR	432955	Identifier	X86R_ESP		432612	1					
ANR	432956	CompoundStatement		43:44:1100:1100	432612	1					
ANR	432957	ExpressionStatement	data [ l ++ ] = 0x24	2336:4:61420:61436	432612	0	True				
ANR	432958	AssignmentExpression	data [ l ++ ] = 0x24		432612	0		=			
ANR	432959	ArrayIndexing	data [ l ++ ]		432612	0					
ANR	432960	Identifier	data		432612	0					
ANR	432961	PostIncDecOperationExpression	l ++		432612	1					
ANR	432962	Identifier	l		432612	0					
ANR	432963	IncDec	++		432612	1					
ANR	432964	PrimaryExpression	0x24		432612	1					
ANR	432965	ReturnStatement	return l ;	2341:1:61452:61460	432612	5	True				
ANR	432966	Identifier	l		432612	0					
ANR	432967	ReturnType	static int		432612	1					
ANR	432968	Identifier	oppop		432612	2					
ANR	432969	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		432612	3					
ANR	432970	Parameter	RAsm * a	2293:17:60275:60281	432612	0	True				
ANR	432971	ParameterType	RAsm *		432612	0					
ANR	432972	Identifier	a		432612	1					
ANR	432973	Parameter	ut8 * data	2293:26:60284:60292	432612	1	True				
ANR	432974	ParameterType	ut8 *		432612	0					
ANR	432975	Identifier	data		432612	1					
ANR	432976	Parameter	const Opcode * op	2293:37:60295:60310	432612	2	True				
ANR	432977	ParameterType	const Opcode *		432612	0					
ANR	432978	Identifier	op		432612	1					
ANR	432979	CFGEntryNode	ENTRY		432612		True				
ANR	432980	CFGExitNode	EXIT		432612		True				
ANR	432981	Symbol	op -> operands [ 0 ] . offset_sign		432612						
ANR	432982	Symbol	mod		432612						
ANR	432983	Symbol	data		432612						
ANR	432984	Symbol	* op		432612						
ANR	432985	Symbol	X86R_ESP		432612						
ANR	432986	Symbol	X86R_EBP		432612						
ANR	432987	Symbol	* * op		432612						
ANR	432988	Symbol	* op -> operands		432612						
ANR	432989	Symbol	op -> operands [ 0 ] . type		432612						
ANR	432990	Symbol	op -> operands [ 0 ] . reg		432612						
ANR	432991	Symbol	op -> operands [ 0 ] . offset		432612						
ANR	432992	Symbol	OT_MEMORY		432612						
ANR	432993	Symbol	a		432612						
ANR	432994	Symbol	op		432612						
ANR	432995	Symbol	OT_GPREG		432612						
ANR	432996	Symbol	X86R_FS		432612						
ANR	432997	Symbol	offset		432612						
ANR	432998	Symbol	OT_SEGMENTREG		432612						
ANR	432999	Symbol	* * op -> operands		432612						
ANR	433000	Symbol	l		432612						
ANR	433001	Symbol	OT_REGTYPE		432612						
ANR	433002	Symbol	* op -> operands [ 0 ] . regs		432612						
ANR	433003	Symbol	* * * op		432612						
ANR	433004	Symbol	op -> operands		432612						
ANR	433005	Symbol	* data		432612						
ANR	433006	Symbol	op -> operands [ 0 ] . regs		432612						
ANR	433007	Symbol	base		432612						
ANR	433008	Function	oppush	2344:0:61465:63111							
ANR	433009	FunctionDef	"oppush (RAsm * a , ut8 * data , const Opcode * op)"		433008	0					
ANR	433010	CompoundStatement		2344:56:61521:63111	433008	0					
ANR	433011	ExpressionStatement	is_valid_registers ( op )	2345:1:61524:61547	433008	0	True				
ANR	433012	CallExpression	is_valid_registers ( op )		433008	0					
ANR	433013	Callee	is_valid_registers		433008	0					
ANR	433014	Identifier	is_valid_registers		433008	0					
ANR	433015	ArgumentList	op		433008	1					
ANR	433016	Argument	op		433008	0					
ANR	433017	Identifier	op		433008	0					
ANR	433018	IdentifierDeclStatement	int l = 0 ;	2346:1:61550:61559	433008	1	True				
ANR	433019	IdentifierDecl	l = 0		433008	0					
ANR	433020	IdentifierDeclType	int		433008	0					
ANR	433021	Identifier	l		433008	1					
ANR	433022	AssignmentExpression	l = 0		433008	2		=			
ANR	433023	Identifier	l		433008	0					
ANR	433024	PrimaryExpression	0		433008	1					
ANR	433025	IdentifierDeclStatement	int mod = 0 ;	2347:1:61562:61573	433008	2	True				
ANR	433026	IdentifierDecl	mod = 0		433008	0					
ANR	433027	IdentifierDeclType	int		433008	0					
ANR	433028	Identifier	mod		433008	1					
ANR	433029	AssignmentExpression	mod = 0		433008	2		=			
ANR	433030	Identifier	mod		433008	0					
ANR	433031	PrimaryExpression	0		433008	1					
ANR	433032	IdentifierDeclStatement	st32 immediate = 0 ;	2348:1:61576:61594	433008	3	True				
ANR	433033	IdentifierDecl	immediate = 0		433008	0					
ANR	433034	IdentifierDeclType	st32		433008	0					
ANR	433035	Identifier	immediate		433008	1					
ANR	433036	AssignmentExpression	immediate = 0		433008	2		=			
ANR	433037	Identifier	immediate		433008	0					
ANR	433038	PrimaryExpression	0		433008	1					
ANR	433039	ExpressionStatement		2348:20:61595:61595	433008	4	True				
ANR	433040	IdentifierDeclStatement	st32 offset = 0 ;	2349:1:61598:61613	433008	5	True				
ANR	433041	IdentifierDecl	offset = 0		433008	0					
ANR	433042	IdentifierDeclType	st32		433008	0					
ANR	433043	Identifier	offset		433008	1					
ANR	433044	AssignmentExpression	offset = 0		433008	2		=			
ANR	433045	Identifier	offset		433008	0					
ANR	433046	PrimaryExpression	0		433008	1					
ANR	433047	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		433008	6					
ANR	433048	Condition	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )	2350:5:61620:61694	433008	0	True				
ANR	433049	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )		433008	0		&&			
ANR	433050	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		433008	0		&			
ANR	433051	MemberAccess	op -> operands [ 0 ] . type		433008	0					
ANR	433052	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433053	PtrMemberAccess	op -> operands		433008	0					
ANR	433054	Identifier	op		433008	0					
ANR	433055	Identifier	operands		433008	1					
ANR	433056	PrimaryExpression	0		433008	1					
ANR	433057	Identifier	type		433008	1					
ANR	433058	Identifier	OT_GPREG		433008	1					
ANR	433059	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		433008	1					
ANR	433060	UnaryOperator	!		433008	0					
ANR	433061	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		433008	1		&			
ANR	433062	MemberAccess	op -> operands [ 0 ] . type		433008	0					
ANR	433063	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433064	PtrMemberAccess	op -> operands		433008	0					
ANR	433065	Identifier	op		433008	0					
ANR	433066	Identifier	operands		433008	1					
ANR	433067	PrimaryExpression	0		433008	1					
ANR	433068	Identifier	type		433008	1					
ANR	433069	Identifier	OT_MEMORY		433008	1					
ANR	433070	CompoundStatement		8:42:175:175	433008	1					
ANR	433071	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG )		433008	0					
ANR	433072	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG	2352:6:61705:61753	433008	0	True				
ANR	433073	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG		433008	0		&			
ANR	433074	MemberAccess	op -> operands [ 0 ] . type		433008	0					
ANR	433075	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433076	PtrMemberAccess	op -> operands		433008	0					
ANR	433077	Identifier	op		433008	0					
ANR	433078	Identifier	operands		433008	1					
ANR	433079	PrimaryExpression	0		433008	1					
ANR	433080	Identifier	type		433008	1					
ANR	433081	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		433008	1		&			
ANR	433082	Identifier	OT_REGTYPE		433008	0					
ANR	433083	Identifier	OT_SEGMENTREG		433008	1					
ANR	433084	CompoundStatement		10:3:239:247	433008	1					
ANR	433085	IdentifierDeclStatement	ut8 base ;	2353:3:61761:61769	433008	0	True				
ANR	433086	IdentifierDecl	base		433008	0					
ANR	433087	IdentifierDeclType	ut8		433008	0					
ANR	433088	Identifier	base		433008	1					
ANR	433089	IfStatement	if ( op -> operands [ 0 ] . reg & X86R_FS )		433008	1					
ANR	433090	Condition	op -> operands [ 0 ] . reg & X86R_FS	2354:7:61778:61806	433008	0	True				
ANR	433091	BitAndExpression	op -> operands [ 0 ] . reg & X86R_FS		433008	0		&			
ANR	433092	MemberAccess	op -> operands [ 0 ] . reg		433008	0					
ANR	433093	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433094	PtrMemberAccess	op -> operands		433008	0					
ANR	433095	Identifier	op		433008	0					
ANR	433096	Identifier	operands		433008	1					
ANR	433097	PrimaryExpression	0		433008	1					
ANR	433098	Identifier	reg		433008	1					
ANR	433099	Identifier	X86R_FS		433008	1					
ANR	433100	CompoundStatement		11:38:287:287	433008	1					
ANR	433101	ExpressionStatement	data [ l ++ ] = 0x0f	2355:4:61815:61831	433008	0	True				
ANR	433102	AssignmentExpression	data [ l ++ ] = 0x0f		433008	0		=			
ANR	433103	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433104	Identifier	data		433008	0					
ANR	433105	PostIncDecOperationExpression	l ++		433008	1					
ANR	433106	Identifier	l		433008	0					
ANR	433107	IncDec	++		433008	1					
ANR	433108	PrimaryExpression	0x0f		433008	1					
ANR	433109	ExpressionStatement	base = 0x80	2356:4:61837:61848	433008	1	True				
ANR	433110	AssignmentExpression	base = 0x80		433008	0		=			
ANR	433111	Identifier	base		433008	0					
ANR	433112	PrimaryExpression	0x80		433008	1					
ANR	433113	ElseStatement	else		433008	0					
ANR	433114	CompoundStatement		14:10:338:338	433008	0					
ANR	433115	ExpressionStatement	base = 0x6	2358:4:61866:61876	433008	0	True				
ANR	433116	AssignmentExpression	base = 0x6		433008	0		=			
ANR	433117	Identifier	base		433008	0					
ANR	433118	PrimaryExpression	0x6		433008	1					
ANR	433119	ExpressionStatement	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )	2360:3:61886:61930	433008	2	True				
ANR	433120	AssignmentExpression	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )		433008	0		=			
ANR	433121	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433122	Identifier	data		433008	0					
ANR	433123	PostIncDecOperationExpression	l ++		433008	1					
ANR	433124	Identifier	l		433008	0					
ANR	433125	IncDec	++		433008	1					
ANR	433126	AdditiveExpression	base + ( 8 * op -> operands [ 0 ] . reg )		433008	1		+			
ANR	433127	Identifier	base		433008	0					
ANR	433128	MultiplicativeExpression	8 * op -> operands [ 0 ] . reg		433008	1		*			
ANR	433129	PrimaryExpression	8		433008	0					
ANR	433130	MemberAccess	op -> operands [ 0 ] . reg		433008	1					
ANR	433131	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433132	PtrMemberAccess	op -> operands		433008	0					
ANR	433133	Identifier	op		433008	0					
ANR	433134	Identifier	operands		433008	1					
ANR	433135	PrimaryExpression	0		433008	1					
ANR	433136	Identifier	reg		433008	1					
ANR	433137	ElseStatement	else		433008	0					
ANR	433138	CompoundStatement		22:3:503:518	433008	0					
ANR	433139	IfStatement	if ( op -> operands [ 0 ] . extended && a -> bits == 64 )		433008	0					
ANR	433140	Condition	op -> operands [ 0 ] . extended && a -> bits == 64	2362:7:61950:61990	433008	0	True				
ANR	433141	AndExpression	op -> operands [ 0 ] . extended && a -> bits == 64		433008	0		&&			
ANR	433142	MemberAccess	op -> operands [ 0 ] . extended		433008	0					
ANR	433143	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433144	PtrMemberAccess	op -> operands		433008	0					
ANR	433145	Identifier	op		433008	0					
ANR	433146	Identifier	operands		433008	1					
ANR	433147	PrimaryExpression	0		433008	1					
ANR	433148	Identifier	extended		433008	1					
ANR	433149	EqualityExpression	a -> bits == 64		433008	1		==			
ANR	433150	PtrMemberAccess	a -> bits		433008	0					
ANR	433151	Identifier	a		433008	0					
ANR	433152	Identifier	bits		433008	1					
ANR	433153	PrimaryExpression	64		433008	1					
ANR	433154	CompoundStatement		19:50:471:471	433008	1					
ANR	433155	ExpressionStatement	data [ l ++ ] = 0x41	2363:4:61999:62015	433008	0	True				
ANR	433156	AssignmentExpression	data [ l ++ ] = 0x41		433008	0		=			
ANR	433157	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433158	Identifier	data		433008	0					
ANR	433159	PostIncDecOperationExpression	l ++		433008	1					
ANR	433160	Identifier	l		433008	0					
ANR	433161	IncDec	++		433008	1					
ANR	433162	PrimaryExpression	0x41		433008	1					
ANR	433163	IdentifierDeclStatement	ut8 base = 0x50 ;	2365:3:62025:62040	433008	1	True				
ANR	433164	IdentifierDecl	base = 0x50		433008	0					
ANR	433165	IdentifierDeclType	ut8		433008	0					
ANR	433166	Identifier	base		433008	1					
ANR	433167	AssignmentExpression	base = 0x50		433008	2		=			
ANR	433168	Identifier	base		433008	0					
ANR	433169	PrimaryExpression	0x50		433008	1					
ANR	433170	ExpressionStatement	data [ l ++ ] = base + op -> operands [ 0 ] . reg	2366:3:62045:62083	433008	2	True				
ANR	433171	AssignmentExpression	data [ l ++ ] = base + op -> operands [ 0 ] . reg		433008	0		=			
ANR	433172	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433173	Identifier	data		433008	0					
ANR	433174	PostIncDecOperationExpression	l ++		433008	1					
ANR	433175	Identifier	l		433008	0					
ANR	433176	IncDec	++		433008	1					
ANR	433177	AdditiveExpression	base + op -> operands [ 0 ] . reg		433008	1		+			
ANR	433178	Identifier	base		433008	0					
ANR	433179	MemberAccess	op -> operands [ 0 ] . reg		433008	1					
ANR	433180	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433181	PtrMemberAccess	op -> operands		433008	0					
ANR	433182	Identifier	op		433008	0					
ANR	433183	Identifier	operands		433008	1					
ANR	433184	PrimaryExpression	0		433008	1					
ANR	433185	Identifier	reg		433008	1					
ANR	433186	ElseStatement	else		433008	0					
ANR	433187	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		433008	0					
ANR	433188	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2368:12:62101:62132	433008	0	True				
ANR	433189	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		433008	0		&			
ANR	433190	MemberAccess	op -> operands [ 0 ] . type		433008	0					
ANR	433191	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433192	PtrMemberAccess	op -> operands		433008	0					
ANR	433193	Identifier	op		433008	0					
ANR	433194	Identifier	operands		433008	1					
ANR	433195	PrimaryExpression	0		433008	1					
ANR	433196	Identifier	type		433008	1					
ANR	433197	Identifier	OT_MEMORY		433008	1					
ANR	433198	CompoundStatement		25:46:613:613	433008	1					
ANR	433199	ExpressionStatement	data [ l ++ ] = 0xff	2369:2:62139:62155	433008	0	True				
ANR	433200	AssignmentExpression	data [ l ++ ] = 0xff		433008	0		=			
ANR	433201	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433202	Identifier	data		433008	0					
ANR	433203	PostIncDecOperationExpression	l ++		433008	1					
ANR	433204	Identifier	l		433008	0					
ANR	433205	IncDec	++		433008	1					
ANR	433206	PrimaryExpression	0xff		433008	1					
ANR	433207	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2370:2:62159:62220	433008	1	True				
ANR	433208	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		433008	0		=			
ANR	433209	Identifier	offset		433008	0					
ANR	433210	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		433008	1		*			
ANR	433211	MemberAccess	op -> operands [ 0 ] . offset		433008	0					
ANR	433212	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433213	PtrMemberAccess	op -> operands		433008	0					
ANR	433214	Identifier	op		433008	0					
ANR	433215	Identifier	operands		433008	1					
ANR	433216	PrimaryExpression	0		433008	1					
ANR	433217	Identifier	offset		433008	1					
ANR	433218	MemberAccess	op -> operands [ 0 ] . offset_sign		433008	1					
ANR	433219	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433220	PtrMemberAccess	op -> operands		433008	0					
ANR	433221	Identifier	op		433008	0					
ANR	433222	Identifier	operands		433008	1					
ANR	433223	PrimaryExpression	0		433008	1					
ANR	433224	Identifier	offset_sign		433008	1					
ANR	433225	IfStatement	if ( offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		433008	2					
ANR	433226	Condition	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	2371:6:62228:62277	433008	0	True				
ANR	433227	OrExpression	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		433008	0		||			
ANR	433228	EqualityExpression	offset != 0		433008	0		!=			
ANR	433229	Identifier	offset		433008	0					
ANR	433230	PrimaryExpression	0		433008	1					
ANR	433231	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		433008	1		==			
ANR	433232	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		433008	0					
ANR	433233	MemberAccess	op -> operands [ 0 ] . regs		433008	0					
ANR	433234	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433235	PtrMemberAccess	op -> operands		433008	0					
ANR	433236	Identifier	op		433008	0					
ANR	433237	Identifier	operands		433008	1					
ANR	433238	PrimaryExpression	0		433008	1					
ANR	433239	Identifier	regs		433008	1					
ANR	433240	PrimaryExpression	0		433008	1					
ANR	433241	Identifier	X86R_EBP		433008	1					
ANR	433242	CompoundStatement		28:58:758:758	433008	1					
ANR	433243	ExpressionStatement	mod = 1	2372:3:62285:62292	433008	0	True				
ANR	433244	AssignmentExpression	mod = 1		433008	0		=			
ANR	433245	Identifier	mod		433008	0					
ANR	433246	PrimaryExpression	1		433008	1					
ANR	433247	IfStatement	if ( offset >= 128 || offset < - 128 )		433008	1					
ANR	433248	Condition	offset >= 128 || offset < - 128	2373:7:62301:62330	433008	0	True				
ANR	433249	OrExpression	offset >= 128 || offset < - 128		433008	0		||			
ANR	433250	RelationalExpression	offset >= 128		433008	0		>=			
ANR	433251	Identifier	offset		433008	0					
ANR	433252	PrimaryExpression	128		433008	1					
ANR	433253	RelationalExpression	offset < - 128		433008	1		<			
ANR	433254	Identifier	offset		433008	0					
ANR	433255	UnaryOperationExpression	- 128		433008	1					
ANR	433256	UnaryOperator	-		433008	0					
ANR	433257	PrimaryExpression	128		433008	1					
ANR	433258	CompoundStatement		30:39:811:811	433008	1					
ANR	433259	ExpressionStatement	mod = 2	2374:4:62339:62346	433008	0	True				
ANR	433260	AssignmentExpression	mod = 2		433008	0		=			
ANR	433261	Identifier	mod		433008	0					
ANR	433262	PrimaryExpression	2		433008	1					
ANR	433263	ExpressionStatement	data [ l ++ ] = mod << 6 | 6 << 3 | op -> operands [ 0 ] . regs [ 0 ]	2376:3:62356:62411	433008	2	True				
ANR	433264	AssignmentExpression	data [ l ++ ] = mod << 6 | 6 << 3 | op -> operands [ 0 ] . regs [ 0 ]		433008	0		=			
ANR	433265	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433266	Identifier	data		433008	0					
ANR	433267	PostIncDecOperationExpression	l ++		433008	1					
ANR	433268	Identifier	l		433008	0					
ANR	433269	IncDec	++		433008	1					
ANR	433270	InclusiveOrExpression	mod << 6 | 6 << 3 | op -> operands [ 0 ] . regs [ 0 ]		433008	1		|			
ANR	433271	ShiftExpression	mod << 6		433008	0		<<			
ANR	433272	Identifier	mod		433008	0					
ANR	433273	PrimaryExpression	6		433008	1					
ANR	433274	InclusiveOrExpression	6 << 3 | op -> operands [ 0 ] . regs [ 0 ]		433008	1		|			
ANR	433275	ShiftExpression	6 << 3		433008	0		<<			
ANR	433276	PrimaryExpression	6		433008	0					
ANR	433277	PrimaryExpression	3		433008	1					
ANR	433278	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		433008	1					
ANR	433279	MemberAccess	op -> operands [ 0 ] . regs		433008	0					
ANR	433280	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433281	PtrMemberAccess	op -> operands		433008	0					
ANR	433282	Identifier	op		433008	0					
ANR	433283	Identifier	operands		433008	1					
ANR	433284	PrimaryExpression	0		433008	1					
ANR	433285	Identifier	regs		433008	1					
ANR	433286	PrimaryExpression	0		433008	1					
ANR	433287	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		433008	3					
ANR	433288	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2377:7:62420:62454	433008	0	True				
ANR	433289	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		433008	0		==			
ANR	433290	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		433008	0					
ANR	433291	MemberAccess	op -> operands [ 0 ] . regs		433008	0					
ANR	433292	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433293	PtrMemberAccess	op -> operands		433008	0					
ANR	433294	Identifier	op		433008	0					
ANR	433295	Identifier	operands		433008	1					
ANR	433296	PrimaryExpression	0		433008	1					
ANR	433297	Identifier	regs		433008	1					
ANR	433298	PrimaryExpression	0		433008	1					
ANR	433299	Identifier	X86R_ESP		433008	1					
ANR	433300	CompoundStatement		34:44:935:935	433008	1					
ANR	433301	ExpressionStatement	data [ l ++ ] = 0x24	2378:4:62463:62479	433008	0	True				
ANR	433302	AssignmentExpression	data [ l ++ ] = 0x24		433008	0		=			
ANR	433303	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433304	Identifier	data		433008	0					
ANR	433305	PostIncDecOperationExpression	l ++		433008	1					
ANR	433306	Identifier	l		433008	0					
ANR	433307	IncDec	++		433008	1					
ANR	433308	PrimaryExpression	0x24		433008	1					
ANR	433309	ExpressionStatement	data [ l ++ ] = offset	2380:3:62489:62507	433008	4	True				
ANR	433310	AssignmentExpression	data [ l ++ ] = offset		433008	0		=			
ANR	433311	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433312	Identifier	data		433008	0					
ANR	433313	PostIncDecOperationExpression	l ++		433008	1					
ANR	433314	Identifier	l		433008	0					
ANR	433315	IncDec	++		433008	1					
ANR	433316	Identifier	offset		433008	1					
ANR	433317	IfStatement	if ( mod == 2 )		433008	5					
ANR	433318	Condition	mod == 2	2381:7:62516:62523	433008	0	True				
ANR	433319	EqualityExpression	mod == 2		433008	0		==			
ANR	433320	Identifier	mod		433008	0					
ANR	433321	PrimaryExpression	2		433008	1					
ANR	433322	CompoundStatement		38:17:1004:1004	433008	1					
ANR	433323	ExpressionStatement	data [ l ++ ] = offset >> 8	2382:4:62532:62555	433008	0	True				
ANR	433324	AssignmentExpression	data [ l ++ ] = offset >> 8		433008	0		=			
ANR	433325	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433326	Identifier	data		433008	0					
ANR	433327	PostIncDecOperationExpression	l ++		433008	1					
ANR	433328	Identifier	l		433008	0					
ANR	433329	IncDec	++		433008	1					
ANR	433330	ShiftExpression	offset >> 8		433008	1		>>			
ANR	433331	Identifier	offset		433008	0					
ANR	433332	PrimaryExpression	8		433008	1					
ANR	433333	ExpressionStatement	data [ l ++ ] = offset >> 16	2383:4:62561:62585	433008	1	True				
ANR	433334	AssignmentExpression	data [ l ++ ] = offset >> 16		433008	0		=			
ANR	433335	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433336	Identifier	data		433008	0					
ANR	433337	PostIncDecOperationExpression	l ++		433008	1					
ANR	433338	Identifier	l		433008	0					
ANR	433339	IncDec	++		433008	1					
ANR	433340	ShiftExpression	offset >> 16		433008	1		>>			
ANR	433341	Identifier	offset		433008	0					
ANR	433342	PrimaryExpression	16		433008	1					
ANR	433343	ExpressionStatement	data [ l ++ ] = offset >> 24	2384:4:62591:62615	433008	2	True				
ANR	433344	AssignmentExpression	data [ l ++ ] = offset >> 24		433008	0		=			
ANR	433345	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433346	Identifier	data		433008	0					
ANR	433347	PostIncDecOperationExpression	l ++		433008	1					
ANR	433348	Identifier	l		433008	0					
ANR	433349	IncDec	++		433008	1					
ANR	433350	ShiftExpression	offset >> 24		433008	1		>>			
ANR	433351	Identifier	offset		433008	0					
ANR	433352	PrimaryExpression	24		433008	1					
ANR	433353	ElseStatement	else		433008	0					
ANR	433354	CompoundStatement		43:9:1109:1109	433008	0					
ANR	433355	ExpressionStatement	mod = 3	2387:3:62636:62643	433008	0	True				
ANR	433356	AssignmentExpression	mod = 3		433008	0		=			
ANR	433357	Identifier	mod		433008	0					
ANR	433358	PrimaryExpression	3		433008	1					
ANR	433359	ExpressionStatement	data [ l ++ ] = mod << 4 | op -> operands [ 0 ] . regs [ 0 ]	2388:3:62648:62694	433008	1	True				
ANR	433360	AssignmentExpression	data [ l ++ ] = mod << 4 | op -> operands [ 0 ] . regs [ 0 ]		433008	0		=			
ANR	433361	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433362	Identifier	data		433008	0					
ANR	433363	PostIncDecOperationExpression	l ++		433008	1					
ANR	433364	Identifier	l		433008	0					
ANR	433365	IncDec	++		433008	1					
ANR	433366	InclusiveOrExpression	mod << 4 | op -> operands [ 0 ] . regs [ 0 ]		433008	1		|			
ANR	433367	ShiftExpression	mod << 4		433008	0		<<			
ANR	433368	Identifier	mod		433008	0					
ANR	433369	PrimaryExpression	4		433008	1					
ANR	433370	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		433008	1					
ANR	433371	MemberAccess	op -> operands [ 0 ] . regs		433008	0					
ANR	433372	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433373	PtrMemberAccess	op -> operands		433008	0					
ANR	433374	Identifier	op		433008	0					
ANR	433375	Identifier	operands		433008	1					
ANR	433376	PrimaryExpression	0		433008	1					
ANR	433377	Identifier	regs		433008	1					
ANR	433378	PrimaryExpression	0		433008	1					
ANR	433379	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		433008	2					
ANR	433380	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2389:7:62703:62737	433008	0	True				
ANR	433381	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		433008	0		==			
ANR	433382	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		433008	0					
ANR	433383	MemberAccess	op -> operands [ 0 ] . regs		433008	0					
ANR	433384	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433385	PtrMemberAccess	op -> operands		433008	0					
ANR	433386	Identifier	op		433008	0					
ANR	433387	Identifier	operands		433008	1					
ANR	433388	PrimaryExpression	0		433008	1					
ANR	433389	Identifier	regs		433008	1					
ANR	433390	PrimaryExpression	0		433008	1					
ANR	433391	Identifier	X86R_ESP		433008	1					
ANR	433392	CompoundStatement		46:44:1218:1218	433008	1					
ANR	433393	ExpressionStatement	data [ l ++ ] = 0x24	2390:4:62746:62762	433008	0	True				
ANR	433394	AssignmentExpression	data [ l ++ ] = 0x24		433008	0		=			
ANR	433395	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433396	Identifier	data		433008	0					
ANR	433397	PostIncDecOperationExpression	l ++		433008	1					
ANR	433398	Identifier	l		433008	0					
ANR	433399	IncDec	++		433008	1					
ANR	433400	PrimaryExpression	0x24		433008	1					
ANR	433401	ElseStatement	else		433008	0					
ANR	433402	CompoundStatement		50:8:1259:1259	433008	0					
ANR	433403	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2394:2:62785:62845	433008	0	True				
ANR	433404	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		433008	0		=			
ANR	433405	Identifier	immediate		433008	0					
ANR	433406	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		433008	1		*			
ANR	433407	MemberAccess	op -> operands [ 0 ] . immediate		433008	0					
ANR	433408	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433409	PtrMemberAccess	op -> operands		433008	0					
ANR	433410	Identifier	op		433008	0					
ANR	433411	Identifier	operands		433008	1					
ANR	433412	PrimaryExpression	0		433008	1					
ANR	433413	Identifier	immediate		433008	1					
ANR	433414	MemberAccess	op -> operands [ 0 ] . sign		433008	1					
ANR	433415	ArrayIndexing	op -> operands [ 0 ]		433008	0					
ANR	433416	PtrMemberAccess	op -> operands		433008	0					
ANR	433417	Identifier	op		433008	0					
ANR	433418	Identifier	operands		433008	1					
ANR	433419	PrimaryExpression	0		433008	1					
ANR	433420	Identifier	sign		433008	1					
ANR	433421	IfStatement	if ( immediate >= 128 || immediate < - 128 )		433008	1					
ANR	433422	Condition	immediate >= 128 || immediate < - 128	2395:6:62853:62888	433008	0	True				
ANR	433423	OrExpression	immediate >= 128 || immediate < - 128		433008	0		||			
ANR	433424	RelationalExpression	immediate >= 128		433008	0		>=			
ANR	433425	Identifier	immediate		433008	0					
ANR	433426	PrimaryExpression	128		433008	1					
ANR	433427	RelationalExpression	immediate < - 128		433008	1		<			
ANR	433428	Identifier	immediate		433008	0					
ANR	433429	UnaryOperationExpression	- 128		433008	1					
ANR	433430	UnaryOperator	-		433008	0					
ANR	433431	PrimaryExpression	128		433008	1					
ANR	433432	CompoundStatement		52:44:1369:1369	433008	1					
ANR	433433	ExpressionStatement	data [ l ++ ] = 0x68	2396:3:62896:62912	433008	0	True				
ANR	433434	AssignmentExpression	data [ l ++ ] = 0x68		433008	0		=			
ANR	433435	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433436	Identifier	data		433008	0					
ANR	433437	PostIncDecOperationExpression	l ++		433008	1					
ANR	433438	Identifier	l		433008	0					
ANR	433439	IncDec	++		433008	1					
ANR	433440	PrimaryExpression	0x68		433008	1					
ANR	433441	ExpressionStatement	data [ l ++ ] = immediate	2397:3:62917:62938	433008	1	True				
ANR	433442	AssignmentExpression	data [ l ++ ] = immediate		433008	0		=			
ANR	433443	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433444	Identifier	data		433008	0					
ANR	433445	PostIncDecOperationExpression	l ++		433008	1					
ANR	433446	Identifier	l		433008	0					
ANR	433447	IncDec	++		433008	1					
ANR	433448	Identifier	immediate		433008	1					
ANR	433449	ExpressionStatement	data [ l ++ ] = immediate >> 8	2398:3:62943:62969	433008	2	True				
ANR	433450	AssignmentExpression	data [ l ++ ] = immediate >> 8		433008	0		=			
ANR	433451	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433452	Identifier	data		433008	0					
ANR	433453	PostIncDecOperationExpression	l ++		433008	1					
ANR	433454	Identifier	l		433008	0					
ANR	433455	IncDec	++		433008	1					
ANR	433456	ShiftExpression	immediate >> 8		433008	1		>>			
ANR	433457	Identifier	immediate		433008	0					
ANR	433458	PrimaryExpression	8		433008	1					
ANR	433459	ExpressionStatement	data [ l ++ ] = immediate >> 16	2399:3:62974:63001	433008	3	True				
ANR	433460	AssignmentExpression	data [ l ++ ] = immediate >> 16		433008	0		=			
ANR	433461	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433462	Identifier	data		433008	0					
ANR	433463	PostIncDecOperationExpression	l ++		433008	1					
ANR	433464	Identifier	l		433008	0					
ANR	433465	IncDec	++		433008	1					
ANR	433466	ShiftExpression	immediate >> 16		433008	1		>>			
ANR	433467	Identifier	immediate		433008	0					
ANR	433468	PrimaryExpression	16		433008	1					
ANR	433469	ExpressionStatement	data [ l ++ ] = immediate >> 24	2400:3:63006:63033	433008	4	True				
ANR	433470	AssignmentExpression	data [ l ++ ] = immediate >> 24		433008	0		=			
ANR	433471	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433472	Identifier	data		433008	0					
ANR	433473	PostIncDecOperationExpression	l ++		433008	1					
ANR	433474	Identifier	l		433008	0					
ANR	433475	IncDec	++		433008	1					
ANR	433476	ShiftExpression	immediate >> 24		433008	1		>>			
ANR	433477	Identifier	immediate		433008	0					
ANR	433478	PrimaryExpression	24		433008	1					
ANR	433479	ElseStatement	else		433008	0					
ANR	433480	CompoundStatement		58:9:1522:1522	433008	0					
ANR	433481	ExpressionStatement	data [ l ++ ] = 0x6a	2402:3:63049:63065	433008	0	True				
ANR	433482	AssignmentExpression	data [ l ++ ] = 0x6a		433008	0		=			
ANR	433483	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433484	Identifier	data		433008	0					
ANR	433485	PostIncDecOperationExpression	l ++		433008	1					
ANR	433486	Identifier	l		433008	0					
ANR	433487	IncDec	++		433008	1					
ANR	433488	PrimaryExpression	0x6a		433008	1					
ANR	433489	ExpressionStatement	data [ l ++ ] = immediate	2403:3:63070:63091	433008	1	True				
ANR	433490	AssignmentExpression	data [ l ++ ] = immediate		433008	0		=			
ANR	433491	ArrayIndexing	data [ l ++ ]		433008	0					
ANR	433492	Identifier	data		433008	0					
ANR	433493	PostIncDecOperationExpression	l ++		433008	1					
ANR	433494	Identifier	l		433008	0					
ANR	433495	IncDec	++		433008	1					
ANR	433496	Identifier	immediate		433008	1					
ANR	433497	ReturnStatement	return l ;	2406:1:63101:63109	433008	7	True				
ANR	433498	Identifier	l		433008	0					
ANR	433499	ReturnType	static int		433008	1					
ANR	433500	Identifier	oppush		433008	2					
ANR	433501	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		433008	3					
ANR	433502	Parameter	RAsm * a	2344:18:61483:61489	433008	0	True				
ANR	433503	ParameterType	RAsm *		433008	0					
ANR	433504	Identifier	a		433008	1					
ANR	433505	Parameter	ut8 * data	2344:27:61492:61500	433008	1	True				
ANR	433506	ParameterType	ut8 *		433008	0					
ANR	433507	Identifier	data		433008	1					
ANR	433508	Parameter	const Opcode * op	2344:38:61503:61518	433008	2	True				
ANR	433509	ParameterType	const Opcode *		433008	0					
ANR	433510	Identifier	op		433008	1					
ANR	433511	CFGEntryNode	ENTRY		433008		True				
ANR	433512	CFGExitNode	EXIT		433008		True				
ANR	433513	Symbol	op -> operands [ 0 ] . offset_sign		433008						
ANR	433514	Symbol	mod		433008						
ANR	433515	Symbol	data		433008						
ANR	433516	Symbol	* op		433008						
ANR	433517	Symbol	X86R_ESP		433008						
ANR	433518	Symbol	X86R_EBP		433008						
ANR	433519	Symbol	* * op		433008						
ANR	433520	Symbol	op -> operands [ 0 ] . extended		433008						
ANR	433521	Symbol	* op -> operands		433008						
ANR	433522	Symbol	op -> operands [ 0 ] . type		433008						
ANR	433523	Symbol	op -> operands [ 0 ] . reg		433008						
ANR	433524	Symbol	op -> operands [ 0 ] . offset		433008						
ANR	433525	Symbol	OT_MEMORY		433008						
ANR	433526	Symbol	a -> bits		433008						
ANR	433527	Symbol	op -> operands [ 0 ] . sign		433008						
ANR	433528	Symbol	a		433008						
ANR	433529	Symbol	op		433008						
ANR	433530	Symbol	OT_GPREG		433008						
ANR	433531	Symbol	X86R_FS		433008						
ANR	433532	Symbol	offset		433008						
ANR	433533	Symbol	OT_SEGMENTREG		433008						
ANR	433534	Symbol	* a		433008						
ANR	433535	Symbol	* * op -> operands		433008						
ANR	433536	Symbol	l		433008						
ANR	433537	Symbol	op -> operands [ 0 ] . immediate		433008						
ANR	433538	Symbol	OT_REGTYPE		433008						
ANR	433539	Symbol	immediate		433008						
ANR	433540	Symbol	* op -> operands [ 0 ] . regs		433008						
ANR	433541	Symbol	* * * op		433008						
ANR	433542	Symbol	op -> operands		433008						
ANR	433543	Symbol	* data		433008						
ANR	433544	Symbol	op -> operands [ 0 ] . regs		433008						
ANR	433545	Symbol	base		433008						
ANR	433546	Function	opout	2409:0:63114:64218							
ANR	433547	FunctionDef	"opout (RAsm * a , ut8 * data , const Opcode * op)"		433546	0					
ANR	433548	CompoundStatement		2409:55:63169:64218	433546	0					
ANR	433549	ExpressionStatement	is_valid_registers ( op )	2410:1:63172:63195	433546	0	True				
ANR	433550	CallExpression	is_valid_registers ( op )		433546	0					
ANR	433551	Callee	is_valid_registers		433546	0					
ANR	433552	Identifier	is_valid_registers		433546	0					
ANR	433553	ArgumentList	op		433546	1					
ANR	433554	Argument	op		433546	0					
ANR	433555	Identifier	op		433546	0					
ANR	433556	IdentifierDeclStatement	int l = 0 ;	2411:1:63198:63207	433546	1	True				
ANR	433557	IdentifierDecl	l = 0		433546	0					
ANR	433558	IdentifierDeclType	int		433546	0					
ANR	433559	Identifier	l		433546	1					
ANR	433560	AssignmentExpression	l = 0		433546	2		=			
ANR	433561	Identifier	l		433546	0					
ANR	433562	PrimaryExpression	0		433546	1					
ANR	433563	IdentifierDeclStatement	st32 immediate = 0 ;	2412:1:63210:63228	433546	2	True				
ANR	433564	IdentifierDecl	immediate = 0		433546	0					
ANR	433565	IdentifierDeclType	st32		433546	0					
ANR	433566	Identifier	immediate		433546	1					
ANR	433567	AssignmentExpression	immediate = 0		433546	2		=			
ANR	433568	Identifier	immediate		433546	0					
ANR	433569	PrimaryExpression	0		433546	1					
ANR	433570	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_DX )		433546	3					
ANR	433571	Condition	op -> operands [ 0 ] . reg == X86R_DX	2413:5:63235:63264	433546	0	True				
ANR	433572	EqualityExpression	op -> operands [ 0 ] . reg == X86R_DX		433546	0		==			
ANR	433573	MemberAccess	op -> operands [ 0 ] . reg		433546	0					
ANR	433574	ArrayIndexing	op -> operands [ 0 ]		433546	0					
ANR	433575	PtrMemberAccess	op -> operands		433546	0					
ANR	433576	Identifier	op		433546	0					
ANR	433577	Identifier	operands		433546	1					
ANR	433578	PrimaryExpression	0		433546	1					
ANR	433579	Identifier	reg		433546	1					
ANR	433580	Identifier	X86R_DX		433546	1					
ANR	433581	CompoundStatement		5:37:97:97	433546	1					
ANR	433582	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE )		433546	0					
ANR	433583	Condition	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE	2414:6:63275:63338	433546	0	True				
ANR	433584	AndExpression	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE		433546	0		&&			
ANR	433585	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AL		433546	0		==			
ANR	433586	MemberAccess	op -> operands [ 1 ] . reg		433546	0					
ANR	433587	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433588	PtrMemberAccess	op -> operands		433546	0					
ANR	433589	Identifier	op		433546	0					
ANR	433590	Identifier	operands		433546	1					
ANR	433591	PrimaryExpression	1		433546	1					
ANR	433592	Identifier	reg		433546	1					
ANR	433593	Identifier	X86R_AL		433546	1					
ANR	433594	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		433546	1		&			
ANR	433595	MemberAccess	op -> operands [ 1 ] . type		433546	0					
ANR	433596	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433597	PtrMemberAccess	op -> operands		433546	0					
ANR	433598	Identifier	op		433546	0					
ANR	433599	Identifier	operands		433546	1					
ANR	433600	PrimaryExpression	1		433546	1					
ANR	433601	Identifier	type		433546	1					
ANR	433602	Identifier	OT_BYTE		433546	1					
ANR	433603	CompoundStatement		6:72:171:171	433546	1					
ANR	433604	ExpressionStatement	data [ l ++ ] = 0xee	2415:3:63346:63362	433546	0	True				
ANR	433605	AssignmentExpression	data [ l ++ ] = 0xee		433546	0		=			
ANR	433606	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433607	Identifier	data		433546	0					
ANR	433608	PostIncDecOperationExpression	l ++		433546	1					
ANR	433609	Identifier	l		433546	0					
ANR	433610	IncDec	++		433546	1					
ANR	433611	PrimaryExpression	0xee		433546	1					
ANR	433612	ReturnStatement	return l ;	2416:3:63367:63375	433546	1	True				
ANR	433613	Identifier	l		433546	0					
ANR	433614	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD )		433546	1					
ANR	433615	Condition	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD	2418:6:63387:63450	433546	0	True				
ANR	433616	AndExpression	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD		433546	0		&&			
ANR	433617	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AX		433546	0		==			
ANR	433618	MemberAccess	op -> operands [ 1 ] . reg		433546	0					
ANR	433619	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433620	PtrMemberAccess	op -> operands		433546	0					
ANR	433621	Identifier	op		433546	0					
ANR	433622	Identifier	operands		433546	1					
ANR	433623	PrimaryExpression	1		433546	1					
ANR	433624	Identifier	reg		433546	1					
ANR	433625	Identifier	X86R_AX		433546	1					
ANR	433626	BitAndExpression	op -> operands [ 1 ] . type & OT_WORD		433546	1		&			
ANR	433627	MemberAccess	op -> operands [ 1 ] . type		433546	0					
ANR	433628	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433629	PtrMemberAccess	op -> operands		433546	0					
ANR	433630	Identifier	op		433546	0					
ANR	433631	Identifier	operands		433546	1					
ANR	433632	PrimaryExpression	1		433546	1					
ANR	433633	Identifier	type		433546	1					
ANR	433634	Identifier	OT_WORD		433546	1					
ANR	433635	CompoundStatement		10:72:283:283	433546	1					
ANR	433636	ExpressionStatement	data [ l ++ ] = 0x66	2419:3:63458:63474	433546	0	True				
ANR	433637	AssignmentExpression	data [ l ++ ] = 0x66		433546	0		=			
ANR	433638	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433639	Identifier	data		433546	0					
ANR	433640	PostIncDecOperationExpression	l ++		433546	1					
ANR	433641	Identifier	l		433546	0					
ANR	433642	IncDec	++		433546	1					
ANR	433643	PrimaryExpression	0x66		433546	1					
ANR	433644	ExpressionStatement	data [ l ++ ] = 0xef	2420:3:63479:63495	433546	1	True				
ANR	433645	AssignmentExpression	data [ l ++ ] = 0xef		433546	0		=			
ANR	433646	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433647	Identifier	data		433546	0					
ANR	433648	PostIncDecOperationExpression	l ++		433546	1					
ANR	433649	Identifier	l		433546	0					
ANR	433650	IncDec	++		433546	1					
ANR	433651	PrimaryExpression	0xef		433546	1					
ANR	433652	ReturnStatement	return l ;	2421:3:63500:63508	433546	2	True				
ANR	433653	Identifier	l		433546	0					
ANR	433654	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD )		433546	2					
ANR	433655	Condition	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD	2423:6:63520:63585	433546	0	True				
ANR	433656	AndExpression	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD		433546	0		&&			
ANR	433657	EqualityExpression	op -> operands [ 1 ] . reg == X86R_EAX		433546	0		==			
ANR	433658	MemberAccess	op -> operands [ 1 ] . reg		433546	0					
ANR	433659	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433660	PtrMemberAccess	op -> operands		433546	0					
ANR	433661	Identifier	op		433546	0					
ANR	433662	Identifier	operands		433546	1					
ANR	433663	PrimaryExpression	1		433546	1					
ANR	433664	Identifier	reg		433546	1					
ANR	433665	Identifier	X86R_EAX		433546	1					
ANR	433666	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		433546	1		&			
ANR	433667	MemberAccess	op -> operands [ 1 ] . type		433546	0					
ANR	433668	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433669	PtrMemberAccess	op -> operands		433546	0					
ANR	433670	Identifier	op		433546	0					
ANR	433671	Identifier	operands		433546	1					
ANR	433672	PrimaryExpression	1		433546	1					
ANR	433673	Identifier	type		433546	1					
ANR	433674	Identifier	OT_DWORD		433546	1					
ANR	433675	CompoundStatement		15:74:418:418	433546	1					
ANR	433676	ExpressionStatement	data [ l ++ ] = 0xef	2424:3:63593:63609	433546	0	True				
ANR	433677	AssignmentExpression	data [ l ++ ] = 0xef		433546	0		=			
ANR	433678	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433679	Identifier	data		433546	0					
ANR	433680	PostIncDecOperationExpression	l ++		433546	1					
ANR	433681	Identifier	l		433546	0					
ANR	433682	IncDec	++		433546	1					
ANR	433683	PrimaryExpression	0xef		433546	1					
ANR	433684	ReturnStatement	return l ;	2425:3:63614:63622	433546	1	True				
ANR	433685	Identifier	l		433546	0					
ANR	433686	ElseStatement	else		433546	0					
ANR	433687	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		433546	0					
ANR	433688	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	2427:12:63640:63673	433546	0	True				
ANR	433689	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		433546	0		&			
ANR	433690	MemberAccess	op -> operands [ 0 ] . type		433546	0					
ANR	433691	ArrayIndexing	op -> operands [ 0 ]		433546	0					
ANR	433692	PtrMemberAccess	op -> operands		433546	0					
ANR	433693	Identifier	op		433546	0					
ANR	433694	Identifier	operands		433546	1					
ANR	433695	PrimaryExpression	0		433546	1					
ANR	433696	Identifier	type		433546	1					
ANR	433697	Identifier	OT_CONSTANT		433546	1					
ANR	433698	CompoundStatement		19:48:506:506	433546	1					
ANR	433699	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2428:2:63680:63740	433546	0	True				
ANR	433700	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		433546	0		=			
ANR	433701	Identifier	immediate		433546	0					
ANR	433702	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		433546	1		*			
ANR	433703	MemberAccess	op -> operands [ 0 ] . immediate		433546	0					
ANR	433704	ArrayIndexing	op -> operands [ 0 ]		433546	0					
ANR	433705	PtrMemberAccess	op -> operands		433546	0					
ANR	433706	Identifier	op		433546	0					
ANR	433707	Identifier	operands		433546	1					
ANR	433708	PrimaryExpression	0		433546	1					
ANR	433709	Identifier	immediate		433546	1					
ANR	433710	MemberAccess	op -> operands [ 0 ] . sign		433546	1					
ANR	433711	ArrayIndexing	op -> operands [ 0 ]		433546	0					
ANR	433712	PtrMemberAccess	op -> operands		433546	0					
ANR	433713	Identifier	op		433546	0					
ANR	433714	Identifier	operands		433546	1					
ANR	433715	PrimaryExpression	0		433546	1					
ANR	433716	Identifier	sign		433546	1					
ANR	433717	IfStatement	if ( immediate > 255 || immediate < - 128 )		433546	1					
ANR	433718	Condition	immediate > 255 || immediate < - 128	2429:6:63748:63782	433546	0	True				
ANR	433719	OrExpression	immediate > 255 || immediate < - 128		433546	0		||			
ANR	433720	RelationalExpression	immediate > 255		433546	0		>			
ANR	433721	Identifier	immediate		433546	0					
ANR	433722	PrimaryExpression	255		433546	1					
ANR	433723	RelationalExpression	immediate < - 128		433546	1		<			
ANR	433724	Identifier	immediate		433546	0					
ANR	433725	UnaryOperationExpression	- 128		433546	1					
ANR	433726	UnaryOperator	-		433546	0					
ANR	433727	PrimaryExpression	128		433546	1					
ANR	433728	CompoundStatement		21:43:615:615	433546	1					
ANR	433729	ReturnStatement	return - 1 ;	2430:3:63790:63799	433546	0	True				
ANR	433730	UnaryOperationExpression	- 1		433546	0					
ANR	433731	UnaryOperator	-		433546	0					
ANR	433732	PrimaryExpression	1		433546	1					
ANR	433733	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE )		433546	2					
ANR	433734	Condition	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE	2432:6:63811:63874	433546	0	True				
ANR	433735	AndExpression	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE		433546	0		&&			
ANR	433736	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AL		433546	0		==			
ANR	433737	MemberAccess	op -> operands [ 1 ] . reg		433546	0					
ANR	433738	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433739	PtrMemberAccess	op -> operands		433546	0					
ANR	433740	Identifier	op		433546	0					
ANR	433741	Identifier	operands		433546	1					
ANR	433742	PrimaryExpression	1		433546	1					
ANR	433743	Identifier	reg		433546	1					
ANR	433744	Identifier	X86R_AL		433546	1					
ANR	433745	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		433546	1		&			
ANR	433746	MemberAccess	op -> operands [ 1 ] . type		433546	0					
ANR	433747	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433748	PtrMemberAccess	op -> operands		433546	0					
ANR	433749	Identifier	op		433546	0					
ANR	433750	Identifier	operands		433546	1					
ANR	433751	PrimaryExpression	1		433546	1					
ANR	433752	Identifier	type		433546	1					
ANR	433753	Identifier	OT_BYTE		433546	1					
ANR	433754	CompoundStatement		24:72:707:707	433546	1					
ANR	433755	ExpressionStatement	data [ l ++ ] = 0xe6	2433:3:63882:63898	433546	0	True				
ANR	433756	AssignmentExpression	data [ l ++ ] = 0xe6		433546	0		=			
ANR	433757	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433758	Identifier	data		433546	0					
ANR	433759	PostIncDecOperationExpression	l ++		433546	1					
ANR	433760	Identifier	l		433546	0					
ANR	433761	IncDec	++		433546	1					
ANR	433762	PrimaryExpression	0xe6		433546	1					
ANR	433763	ElseStatement	else		433546	0					
ANR	433764	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD )		433546	0					
ANR	433765	Condition	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD	2434:13:63913:63976	433546	0	True				
ANR	433766	AndExpression	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD		433546	0		&&			
ANR	433767	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AX		433546	0		==			
ANR	433768	MemberAccess	op -> operands [ 1 ] . reg		433546	0					
ANR	433769	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433770	PtrMemberAccess	op -> operands		433546	0					
ANR	433771	Identifier	op		433546	0					
ANR	433772	Identifier	operands		433546	1					
ANR	433773	PrimaryExpression	1		433546	1					
ANR	433774	Identifier	reg		433546	1					
ANR	433775	Identifier	X86R_AX		433546	1					
ANR	433776	BitAndExpression	op -> operands [ 1 ] . type & OT_WORD		433546	1		&			
ANR	433777	MemberAccess	op -> operands [ 1 ] . type		433546	0					
ANR	433778	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433779	PtrMemberAccess	op -> operands		433546	0					
ANR	433780	Identifier	op		433546	0					
ANR	433781	Identifier	operands		433546	1					
ANR	433782	PrimaryExpression	1		433546	1					
ANR	433783	Identifier	type		433546	1					
ANR	433784	Identifier	OT_WORD		433546	1					
ANR	433785	CompoundStatement		26:79:809:809	433546	1					
ANR	433786	ExpressionStatement	data [ l ++ ] = 0x66	2435:3:63984:64000	433546	0	True				
ANR	433787	AssignmentExpression	data [ l ++ ] = 0x66		433546	0		=			
ANR	433788	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433789	Identifier	data		433546	0					
ANR	433790	PostIncDecOperationExpression	l ++		433546	1					
ANR	433791	Identifier	l		433546	0					
ANR	433792	IncDec	++		433546	1					
ANR	433793	PrimaryExpression	0x66		433546	1					
ANR	433794	ExpressionStatement	data [ l ++ ] = 0xe7	2436:3:64005:64021	433546	1	True				
ANR	433795	AssignmentExpression	data [ l ++ ] = 0xe7		433546	0		=			
ANR	433796	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433797	Identifier	data		433546	0					
ANR	433798	PostIncDecOperationExpression	l ++		433546	1					
ANR	433799	Identifier	l		433546	0					
ANR	433800	IncDec	++		433546	1					
ANR	433801	PrimaryExpression	0xe7		433546	1					
ANR	433802	ElseStatement	else		433546	0					
ANR	433803	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD )		433546	0					
ANR	433804	Condition	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD	2437:13:64036:64101	433546	0	True				
ANR	433805	AndExpression	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD		433546	0		&&			
ANR	433806	EqualityExpression	op -> operands [ 1 ] . reg == X86R_EAX		433546	0		==			
ANR	433807	MemberAccess	op -> operands [ 1 ] . reg		433546	0					
ANR	433808	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433809	PtrMemberAccess	op -> operands		433546	0					
ANR	433810	Identifier	op		433546	0					
ANR	433811	Identifier	operands		433546	1					
ANR	433812	PrimaryExpression	1		433546	1					
ANR	433813	Identifier	reg		433546	1					
ANR	433814	Identifier	X86R_EAX		433546	1					
ANR	433815	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		433546	1		&			
ANR	433816	MemberAccess	op -> operands [ 1 ] . type		433546	0					
ANR	433817	ArrayIndexing	op -> operands [ 1 ]		433546	0					
ANR	433818	PtrMemberAccess	op -> operands		433546	0					
ANR	433819	Identifier	op		433546	0					
ANR	433820	Identifier	operands		433546	1					
ANR	433821	PrimaryExpression	1		433546	1					
ANR	433822	Identifier	type		433546	1					
ANR	433823	Identifier	OT_DWORD		433546	1					
ANR	433824	CompoundStatement		29:81:934:934	433546	1					
ANR	433825	ExpressionStatement	data [ l ++ ] = 0xe7	2438:3:64109:64125	433546	0	True				
ANR	433826	AssignmentExpression	data [ l ++ ] = 0xe7		433546	0		=			
ANR	433827	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433828	Identifier	data		433546	0					
ANR	433829	PostIncDecOperationExpression	l ++		433546	1					
ANR	433830	Identifier	l		433546	0					
ANR	433831	IncDec	++		433546	1					
ANR	433832	PrimaryExpression	0xe7		433546	1					
ANR	433833	ElseStatement	else		433546	0					
ANR	433834	CompoundStatement		31:9:966:966	433546	0					
ANR	433835	ReturnStatement	return - 1 ;	2440:3:64141:64150	433546	0	True				
ANR	433836	UnaryOperationExpression	- 1		433546	0					
ANR	433837	UnaryOperator	-		433546	0					
ANR	433838	PrimaryExpression	1		433546	1					
ANR	433839	ExpressionStatement	data [ l ++ ] = immediate	2442:2:64158:64179	433546	3	True				
ANR	433840	AssignmentExpression	data [ l ++ ] = immediate		433546	0		=			
ANR	433841	ArrayIndexing	data [ l ++ ]		433546	0					
ANR	433842	Identifier	data		433546	0					
ANR	433843	PostIncDecOperationExpression	l ++		433546	1					
ANR	433844	Identifier	l		433546	0					
ANR	433845	IncDec	++		433546	1					
ANR	433846	Identifier	immediate		433546	1					
ANR	433847	ElseStatement	else		433546	0					
ANR	433848	CompoundStatement		35:8:1019:1019	433546	0					
ANR	433849	ReturnStatement	return - 1 ;	2444:2:64193:64202	433546	0	True				
ANR	433850	UnaryOperationExpression	- 1		433546	0					
ANR	433851	UnaryOperator	-		433546	0					
ANR	433852	PrimaryExpression	1		433546	1					
ANR	433853	ReturnStatement	return l ;	2446:1:64208:64216	433546	4	True				
ANR	433854	Identifier	l		433546	0					
ANR	433855	ReturnType	static int		433546	1					
ANR	433856	Identifier	opout		433546	2					
ANR	433857	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		433546	3					
ANR	433858	Parameter	RAsm * a	2409:17:63131:63137	433546	0	True				
ANR	433859	ParameterType	RAsm *		433546	0					
ANR	433860	Identifier	a		433546	1					
ANR	433861	Parameter	ut8 * data	2409:26:63140:63148	433546	1	True				
ANR	433862	ParameterType	ut8 *		433546	0					
ANR	433863	Identifier	data		433546	1					
ANR	433864	Parameter	const Opcode * op	2409:37:63151:63166	433546	2	True				
ANR	433865	ParameterType	const Opcode *		433546	0					
ANR	433866	Identifier	op		433546	1					
ANR	433867	CFGEntryNode	ENTRY		433546		True				
ANR	433868	CFGExitNode	EXIT		433546		True				
ANR	433869	Symbol	X86R_EAX		433546						
ANR	433870	Symbol	a		433546						
ANR	433871	Symbol	op		433546						
ANR	433872	Symbol	OT_CONSTANT		433546						
ANR	433873	Symbol	OT_WORD		433546						
ANR	433874	Symbol	data		433546						
ANR	433875	Symbol	* op		433546						
ANR	433876	Symbol	X86R_DX		433546						
ANR	433877	Symbol	op -> operands [ 1 ] . reg		433546						
ANR	433878	Symbol	X86R_AX		433546						
ANR	433879	Symbol	l		433546						
ANR	433880	Symbol	op -> operands [ 0 ] . immediate		433546						
ANR	433881	Symbol	* * op		433546						
ANR	433882	Symbol	* op -> operands		433546						
ANR	433883	Symbol	immediate		433546						
ANR	433884	Symbol	op -> operands [ 1 ] . type		433546						
ANR	433885	Symbol	op -> operands [ 0 ] . type		433546						
ANR	433886	Symbol	op -> operands [ 0 ] . reg		433546						
ANR	433887	Symbol	op -> operands		433546						
ANR	433888	Symbol	X86R_AL		433546						
ANR	433889	Symbol	* data		433546						
ANR	433890	Symbol	OT_BYTE		433546						
ANR	433891	Symbol	OT_DWORD		433546						
ANR	433892	Symbol	op -> operands [ 0 ] . sign		433546						
ANR	433893	Function	oploop	2449:0:64221:64424							
ANR	433894	FunctionDef	"oploop (RAsm * a , ut8 * data , const Opcode * op)"		433893	0					
ANR	433895	CompoundStatement		2449:56:64277:64424	433893	0					
ANR	433896	ExpressionStatement	is_valid_registers ( op )	2450:1:64280:64303	433893	0	True				
ANR	433897	CallExpression	is_valid_registers ( op )		433893	0					
ANR	433898	Callee	is_valid_registers		433893	0					
ANR	433899	Identifier	is_valid_registers		433893	0					
ANR	433900	ArgumentList	op		433893	1					
ANR	433901	Argument	op		433893	0					
ANR	433902	Identifier	op		433893	0					
ANR	433903	IdentifierDeclStatement	int l = 0 ;	2451:1:64306:64315	433893	1	True				
ANR	433904	IdentifierDecl	l = 0		433893	0					
ANR	433905	IdentifierDeclType	int		433893	0					
ANR	433906	Identifier	l		433893	1					
ANR	433907	AssignmentExpression	l = 0		433893	2		=			
ANR	433908	Identifier	l		433893	0					
ANR	433909	PrimaryExpression	0		433893	1					
ANR	433910	ExpressionStatement	data [ l ++ ] = 0xe2	2452:1:64318:64334	433893	2	True				
ANR	433911	AssignmentExpression	data [ l ++ ] = 0xe2		433893	0		=			
ANR	433912	ArrayIndexing	data [ l ++ ]		433893	0					
ANR	433913	Identifier	data		433893	0					
ANR	433914	PostIncDecOperationExpression	l ++		433893	1					
ANR	433915	Identifier	l		433893	0					
ANR	433916	IncDec	++		433893	1					
ANR	433917	PrimaryExpression	0xe2		433893	1					
ANR	433918	IdentifierDeclStatement	st8 delta = op -> operands [ 0 ] . immediate - a -> pc - 2 ;	2453:1:64337:64386	433893	3	True				
ANR	433919	IdentifierDecl	delta = op -> operands [ 0 ] . immediate - a -> pc - 2		433893	0					
ANR	433920	IdentifierDeclType	st8		433893	0					
ANR	433921	Identifier	delta		433893	1					
ANR	433922	AssignmentExpression	delta = op -> operands [ 0 ] . immediate - a -> pc - 2		433893	2		=			
ANR	433923	Identifier	delta		433893	0					
ANR	433924	AdditiveExpression	op -> operands [ 0 ] . immediate - a -> pc - 2		433893	1		-			
ANR	433925	MemberAccess	op -> operands [ 0 ] . immediate		433893	0					
ANR	433926	ArrayIndexing	op -> operands [ 0 ]		433893	0					
ANR	433927	PtrMemberAccess	op -> operands		433893	0					
ANR	433928	Identifier	op		433893	0					
ANR	433929	Identifier	operands		433893	1					
ANR	433930	PrimaryExpression	0		433893	1					
ANR	433931	Identifier	immediate		433893	1					
ANR	433932	AdditiveExpression	a -> pc - 2		433893	1		-			
ANR	433933	PtrMemberAccess	a -> pc		433893	0					
ANR	433934	Identifier	a		433893	0					
ANR	433935	Identifier	pc		433893	1					
ANR	433936	PrimaryExpression	2		433893	1					
ANR	433937	ExpressionStatement	data [ l ++ ] = ( ut8 ) delta	2454:1:64389:64411	433893	4	True				
ANR	433938	AssignmentExpression	data [ l ++ ] = ( ut8 ) delta		433893	0		=			
ANR	433939	ArrayIndexing	data [ l ++ ]		433893	0					
ANR	433940	Identifier	data		433893	0					
ANR	433941	PostIncDecOperationExpression	l ++		433893	1					
ANR	433942	Identifier	l		433893	0					
ANR	433943	IncDec	++		433893	1					
ANR	433944	CastExpression	( ut8 ) delta		433893	1					
ANR	433945	CastTarget	ut8		433893	0					
ANR	433946	Identifier	delta		433893	1					
ANR	433947	ReturnStatement	return l ;	2455:1:64414:64422	433893	5	True				
ANR	433948	Identifier	l		433893	0					
ANR	433949	ReturnType	static int		433893	1					
ANR	433950	Identifier	oploop		433893	2					
ANR	433951	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		433893	3					
ANR	433952	Parameter	RAsm * a	2449:18:64239:64245	433893	0	True				
ANR	433953	ParameterType	RAsm *		433893	0					
ANR	433954	Identifier	a		433893	1					
ANR	433955	Parameter	ut8 * data	2449:27:64248:64256	433893	1	True				
ANR	433956	ParameterType	ut8 *		433893	0					
ANR	433957	Identifier	data		433893	1					
ANR	433958	Parameter	const Opcode * op	2449:38:64259:64274	433893	2	True				
ANR	433959	ParameterType	const Opcode *		433893	0					
ANR	433960	Identifier	op		433893	1					
ANR	433961	CFGEntryNode	ENTRY		433893		True				
ANR	433962	CFGExitNode	EXIT		433893		True				
ANR	433963	Symbol	a		433893						
ANR	433964	Symbol	op		433893						
ANR	433965	Symbol	data		433893						
ANR	433966	Symbol	* op		433893						
ANR	433967	Symbol	delta		433893						
ANR	433968	Symbol	* a		433893						
ANR	433969	Symbol	l		433893						
ANR	433970	Symbol	op -> operands [ 0 ] . immediate		433893						
ANR	433971	Symbol	a -> pc		433893						
ANR	433972	Symbol	* * op		433893						
ANR	433973	Symbol	* op -> operands		433893						
ANR	433974	Symbol	op -> operands		433893						
ANR	433975	Symbol	* data		433893						
ANR	433976	Function	opret	2458:0:64427:64851							
ANR	433977	FunctionDef	"opret (RAsm * a , ut8 * data , const Opcode * op)"		433976	0					
ANR	433978	CompoundStatement		2458:55:64482:64851	433976	0					
ANR	433979	IdentifierDeclStatement	int l = 0 ;	2459:1:64485:64494	433976	0	True				
ANR	433980	IdentifierDecl	l = 0		433976	0					
ANR	433981	IdentifierDeclType	int		433976	0					
ANR	433982	Identifier	l		433976	1					
ANR	433983	AssignmentExpression	l = 0		433976	2		=			
ANR	433984	Identifier	l		433976	0					
ANR	433985	PrimaryExpression	0		433976	1					
ANR	433986	IdentifierDeclStatement	int immediate = 0 ;	2460:1:64497:64514	433976	1	True				
ANR	433987	IdentifierDecl	immediate = 0		433976	0					
ANR	433988	IdentifierDeclType	int		433976	0					
ANR	433989	Identifier	immediate		433976	1					
ANR	433990	AssignmentExpression	immediate = 0		433976	2		=			
ANR	433991	Identifier	immediate		433976	0					
ANR	433992	PrimaryExpression	0		433976	1					
ANR	433993	IfStatement	if ( a -> bits == 16 )		433976	2					
ANR	433994	Condition	a -> bits == 16	2461:5:64521:64533	433976	0	True				
ANR	433995	EqualityExpression	a -> bits == 16		433976	0		==			
ANR	433996	PtrMemberAccess	a -> bits		433976	0					
ANR	433997	Identifier	a		433976	0					
ANR	433998	Identifier	bits		433976	1					
ANR	433999	PrimaryExpression	16		433976	1					
ANR	434000	CompoundStatement		4:20:53:53	433976	1					
ANR	434001	ExpressionStatement	data [ l ++ ] = 0xc3	2462:2:64540:64556	433976	0	True				
ANR	434002	AssignmentExpression	data [ l ++ ] = 0xc3		433976	0		=			
ANR	434003	ArrayIndexing	data [ l ++ ]		433976	0					
ANR	434004	Identifier	data		433976	0					
ANR	434005	PostIncDecOperationExpression	l ++		433976	1					
ANR	434006	Identifier	l		433976	0					
ANR	434007	IncDec	++		433976	1					
ANR	434008	PrimaryExpression	0xc3		433976	1					
ANR	434009	ReturnStatement	return l ;	2463:2:64560:64568	433976	1	True				
ANR	434010	Identifier	l		433976	0					
ANR	434011	IfStatement	if ( op -> operands [ 0 ] . type == OT_UNKNOWN )		433976	3					
ANR	434012	Condition	op -> operands [ 0 ] . type == OT_UNKNOWN	2465:5:64578:64611	433976	0	True				
ANR	434013	EqualityExpression	op -> operands [ 0 ] . type == OT_UNKNOWN		433976	0		==			
ANR	434014	MemberAccess	op -> operands [ 0 ] . type		433976	0					
ANR	434015	ArrayIndexing	op -> operands [ 0 ]		433976	0					
ANR	434016	PtrMemberAccess	op -> operands		433976	0					
ANR	434017	Identifier	op		433976	0					
ANR	434018	Identifier	operands		433976	1					
ANR	434019	PrimaryExpression	0		433976	1					
ANR	434020	Identifier	type		433976	1					
ANR	434021	Identifier	OT_UNKNOWN		433976	1					
ANR	434022	CompoundStatement		8:41:131:131	433976	1					
ANR	434023	ExpressionStatement	data [ l ++ ] = 0xc3	2466:2:64618:64634	433976	0	True				
ANR	434024	AssignmentExpression	data [ l ++ ] = 0xc3		433976	0		=			
ANR	434025	ArrayIndexing	data [ l ++ ]		433976	0					
ANR	434026	Identifier	data		433976	0					
ANR	434027	PostIncDecOperationExpression	l ++		433976	1					
ANR	434028	Identifier	l		433976	0					
ANR	434029	IncDec	++		433976	1					
ANR	434030	PrimaryExpression	0xc3		433976	1					
ANR	434031	ElseStatement	else		433976	0					
ANR	434032	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_CONSTANT | OT_WORD ) )		433976	0					
ANR	434033	Condition	op -> operands [ 0 ] . type & ( OT_CONSTANT | OT_WORD )	2467:12:64648:64693	433976	0	True				
ANR	434034	BitAndExpression	op -> operands [ 0 ] . type & ( OT_CONSTANT | OT_WORD )		433976	0		&			
ANR	434035	MemberAccess	op -> operands [ 0 ] . type		433976	0					
ANR	434036	ArrayIndexing	op -> operands [ 0 ]		433976	0					
ANR	434037	PtrMemberAccess	op -> operands		433976	0					
ANR	434038	Identifier	op		433976	0					
ANR	434039	Identifier	operands		433976	1					
ANR	434040	PrimaryExpression	0		433976	1					
ANR	434041	Identifier	type		433976	1					
ANR	434042	InclusiveOrExpression	OT_CONSTANT | OT_WORD		433976	1		|			
ANR	434043	Identifier	OT_CONSTANT		433976	0					
ANR	434044	Identifier	OT_WORD		433976	1					
ANR	434045	CompoundStatement		10:60:213:213	433976	1					
ANR	434046	ExpressionStatement	data [ l ++ ] = 0xc2	2468:2:64700:64716	433976	0	True				
ANR	434047	AssignmentExpression	data [ l ++ ] = 0xc2		433976	0		=			
ANR	434048	ArrayIndexing	data [ l ++ ]		433976	0					
ANR	434049	Identifier	data		433976	0					
ANR	434050	PostIncDecOperationExpression	l ++		433976	1					
ANR	434051	Identifier	l		433976	0					
ANR	434052	IncDec	++		433976	1					
ANR	434053	PrimaryExpression	0xc2		433976	1					
ANR	434054	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2469:2:64720:64780	433976	1	True				
ANR	434055	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		433976	0		=			
ANR	434056	Identifier	immediate		433976	0					
ANR	434057	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		433976	1		*			
ANR	434058	MemberAccess	op -> operands [ 0 ] . immediate		433976	0					
ANR	434059	ArrayIndexing	op -> operands [ 0 ]		433976	0					
ANR	434060	PtrMemberAccess	op -> operands		433976	0					
ANR	434061	Identifier	op		433976	0					
ANR	434062	Identifier	operands		433976	1					
ANR	434063	PrimaryExpression	0		433976	1					
ANR	434064	Identifier	immediate		433976	1					
ANR	434065	MemberAccess	op -> operands [ 0 ] . sign		433976	1					
ANR	434066	ArrayIndexing	op -> operands [ 0 ]		433976	0					
ANR	434067	PtrMemberAccess	op -> operands		433976	0					
ANR	434068	Identifier	op		433976	0					
ANR	434069	Identifier	operands		433976	1					
ANR	434070	PrimaryExpression	0		433976	1					
ANR	434071	Identifier	sign		433976	1					
ANR	434072	ExpressionStatement	data [ l ++ ] = immediate	2470:2:64784:64805	433976	2	True				
ANR	434073	AssignmentExpression	data [ l ++ ] = immediate		433976	0		=			
ANR	434074	ArrayIndexing	data [ l ++ ]		433976	0					
ANR	434075	Identifier	data		433976	0					
ANR	434076	PostIncDecOperationExpression	l ++		433976	1					
ANR	434077	Identifier	l		433976	0					
ANR	434078	IncDec	++		433976	1					
ANR	434079	Identifier	immediate		433976	1					
ANR	434080	ExpressionStatement	data [ l ++ ] = immediate << 8	2471:2:64809:64835	433976	3	True				
ANR	434081	AssignmentExpression	data [ l ++ ] = immediate << 8		433976	0		=			
ANR	434082	ArrayIndexing	data [ l ++ ]		433976	0					
ANR	434083	Identifier	data		433976	0					
ANR	434084	PostIncDecOperationExpression	l ++		433976	1					
ANR	434085	Identifier	l		433976	0					
ANR	434086	IncDec	++		433976	1					
ANR	434087	ShiftExpression	immediate << 8		433976	1		<<			
ANR	434088	Identifier	immediate		433976	0					
ANR	434089	PrimaryExpression	8		433976	1					
ANR	434090	ReturnStatement	return l ;	2473:1:64841:64849	433976	4	True				
ANR	434091	Identifier	l		433976	0					
ANR	434092	ReturnType	static int		433976	1					
ANR	434093	Identifier	opret		433976	2					
ANR	434094	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		433976	3					
ANR	434095	Parameter	RAsm * a	2458:17:64444:64450	433976	0	True				
ANR	434096	ParameterType	RAsm *		433976	0					
ANR	434097	Identifier	a		433976	1					
ANR	434098	Parameter	ut8 * data	2458:26:64453:64461	433976	1	True				
ANR	434099	ParameterType	ut8 *		433976	0					
ANR	434100	Identifier	data		433976	1					
ANR	434101	Parameter	const Opcode * op	2458:37:64464:64479	433976	2	True				
ANR	434102	ParameterType	const Opcode *		433976	0					
ANR	434103	Identifier	op		433976	1					
ANR	434104	CFGEntryNode	ENTRY		433976		True				
ANR	434105	CFGExitNode	EXIT		433976		True				
ANR	434106	Symbol	a		433976						
ANR	434107	Symbol	op		433976						
ANR	434108	Symbol	OT_CONSTANT		433976						
ANR	434109	Symbol	OT_WORD		433976						
ANR	434110	Symbol	data		433976						
ANR	434111	Symbol	* op		433976						
ANR	434112	Symbol	* a		433976						
ANR	434113	Symbol	l		433976						
ANR	434114	Symbol	op -> operands [ 0 ] . immediate		433976						
ANR	434115	Symbol	OT_UNKNOWN		433976						
ANR	434116	Symbol	* * op		433976						
ANR	434117	Symbol	* op -> operands		433976						
ANR	434118	Symbol	immediate		433976						
ANR	434119	Symbol	op -> operands [ 0 ] . type		433976						
ANR	434120	Symbol	op -> operands		433976						
ANR	434121	Symbol	* data		433976						
ANR	434122	Symbol	a -> bits		433976						
ANR	434123	Symbol	op -> operands [ 0 ] . sign		433976						
ANR	434124	Function	opretf	2476:0:64854:65211							
ANR	434125	FunctionDef	"opretf (RAsm * a , ut8 * data , const Opcode * op)"		434124	0					
ANR	434126	CompoundStatement		2476:56:64910:65211	434124	0					
ANR	434127	IdentifierDeclStatement	int l = 0 ;	2477:1:64913:64922	434124	0	True				
ANR	434128	IdentifierDecl	l = 0		434124	0					
ANR	434129	IdentifierDeclType	int		434124	0					
ANR	434130	Identifier	l		434124	1					
ANR	434131	AssignmentExpression	l = 0		434124	2		=			
ANR	434132	Identifier	l		434124	0					
ANR	434133	PrimaryExpression	0		434124	1					
ANR	434134	IdentifierDeclStatement	st32 immediate = 0 ;	2478:1:64925:64943	434124	1	True				
ANR	434135	IdentifierDecl	immediate = 0		434124	0					
ANR	434136	IdentifierDeclType	st32		434124	0					
ANR	434137	Identifier	immediate		434124	1					
ANR	434138	AssignmentExpression	immediate = 0		434124	2		=			
ANR	434139	Identifier	immediate		434124	0					
ANR	434140	PrimaryExpression	0		434124	1					
ANR	434141	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		434124	2					
ANR	434142	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	2479:5:64950:64983	434124	0	True				
ANR	434143	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		434124	0		&			
ANR	434144	MemberAccess	op -> operands [ 0 ] . type		434124	0					
ANR	434145	ArrayIndexing	op -> operands [ 0 ]		434124	0					
ANR	434146	PtrMemberAccess	op -> operands		434124	0					
ANR	434147	Identifier	op		434124	0					
ANR	434148	Identifier	operands		434124	1					
ANR	434149	PrimaryExpression	0		434124	1					
ANR	434150	Identifier	type		434124	1					
ANR	434151	Identifier	OT_CONSTANT		434124	1					
ANR	434152	CompoundStatement		4:41:75:75	434124	1					
ANR	434153	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2480:2:64990:65050	434124	0	True				
ANR	434154	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		434124	0		=			
ANR	434155	Identifier	immediate		434124	0					
ANR	434156	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		434124	1		*			
ANR	434157	MemberAccess	op -> operands [ 0 ] . immediate		434124	0					
ANR	434158	ArrayIndexing	op -> operands [ 0 ]		434124	0					
ANR	434159	PtrMemberAccess	op -> operands		434124	0					
ANR	434160	Identifier	op		434124	0					
ANR	434161	Identifier	operands		434124	1					
ANR	434162	PrimaryExpression	0		434124	1					
ANR	434163	Identifier	immediate		434124	1					
ANR	434164	MemberAccess	op -> operands [ 0 ] . sign		434124	1					
ANR	434165	ArrayIndexing	op -> operands [ 0 ]		434124	0					
ANR	434166	PtrMemberAccess	op -> operands		434124	0					
ANR	434167	Identifier	op		434124	0					
ANR	434168	Identifier	operands		434124	1					
ANR	434169	PrimaryExpression	0		434124	1					
ANR	434170	Identifier	sign		434124	1					
ANR	434171	ExpressionStatement	data [ l ++ ] = 0xca	2481:2:65054:65070	434124	1	True				
ANR	434172	AssignmentExpression	data [ l ++ ] = 0xca		434124	0		=			
ANR	434173	ArrayIndexing	data [ l ++ ]		434124	0					
ANR	434174	Identifier	data		434124	0					
ANR	434175	PostIncDecOperationExpression	l ++		434124	1					
ANR	434176	Identifier	l		434124	0					
ANR	434177	IncDec	++		434124	1					
ANR	434178	PrimaryExpression	0xca		434124	1					
ANR	434179	ExpressionStatement	data [ l ++ ] = immediate	2482:2:65074:65095	434124	2	True				
ANR	434180	AssignmentExpression	data [ l ++ ] = immediate		434124	0		=			
ANR	434181	ArrayIndexing	data [ l ++ ]		434124	0					
ANR	434182	Identifier	data		434124	0					
ANR	434183	PostIncDecOperationExpression	l ++		434124	1					
ANR	434184	Identifier	l		434124	0					
ANR	434185	IncDec	++		434124	1					
ANR	434186	Identifier	immediate		434124	1					
ANR	434187	ExpressionStatement	data [ l ++ ] = immediate >> 8	2483:2:65099:65125	434124	3	True				
ANR	434188	AssignmentExpression	data [ l ++ ] = immediate >> 8		434124	0		=			
ANR	434189	ArrayIndexing	data [ l ++ ]		434124	0					
ANR	434190	Identifier	data		434124	0					
ANR	434191	PostIncDecOperationExpression	l ++		434124	1					
ANR	434192	Identifier	l		434124	0					
ANR	434193	IncDec	++		434124	1					
ANR	434194	ShiftExpression	immediate >> 8		434124	1		>>			
ANR	434195	Identifier	immediate		434124	0					
ANR	434196	PrimaryExpression	8		434124	1					
ANR	434197	ElseStatement	else		434124	0					
ANR	434198	IfStatement	if ( op -> operands [ 0 ] . type == OT_UNKNOWN )		434124	0					
ANR	434199	Condition	op -> operands [ 0 ] . type == OT_UNKNOWN	2484:12:65139:65172	434124	0	True				
ANR	434200	EqualityExpression	op -> operands [ 0 ] . type == OT_UNKNOWN		434124	0		==			
ANR	434201	MemberAccess	op -> operands [ 0 ] . type		434124	0					
ANR	434202	ArrayIndexing	op -> operands [ 0 ]		434124	0					
ANR	434203	PtrMemberAccess	op -> operands		434124	0					
ANR	434204	Identifier	op		434124	0					
ANR	434205	Identifier	operands		434124	1					
ANR	434206	PrimaryExpression	0		434124	1					
ANR	434207	Identifier	type		434124	1					
ANR	434208	Identifier	OT_UNKNOWN		434124	1					
ANR	434209	CompoundStatement		9:48:264:264	434124	1					
ANR	434210	ExpressionStatement	data [ l ++ ] = 0xcb	2485:2:65179:65195	434124	0	True				
ANR	434211	AssignmentExpression	data [ l ++ ] = 0xcb		434124	0		=			
ANR	434212	ArrayIndexing	data [ l ++ ]		434124	0					
ANR	434213	Identifier	data		434124	0					
ANR	434214	PostIncDecOperationExpression	l ++		434124	1					
ANR	434215	Identifier	l		434124	0					
ANR	434216	IncDec	++		434124	1					
ANR	434217	PrimaryExpression	0xcb		434124	1					
ANR	434218	ReturnStatement	return l ;	2487:1:65201:65209	434124	3	True				
ANR	434219	Identifier	l		434124	0					
ANR	434220	ReturnType	static int		434124	1					
ANR	434221	Identifier	opretf		434124	2					
ANR	434222	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		434124	3					
ANR	434223	Parameter	RAsm * a	2476:18:64872:64878	434124	0	True				
ANR	434224	ParameterType	RAsm *		434124	0					
ANR	434225	Identifier	a		434124	1					
ANR	434226	Parameter	ut8 * data	2476:27:64881:64889	434124	1	True				
ANR	434227	ParameterType	ut8 *		434124	0					
ANR	434228	Identifier	data		434124	1					
ANR	434229	Parameter	const Opcode * op	2476:38:64892:64907	434124	2	True				
ANR	434230	ParameterType	const Opcode *		434124	0					
ANR	434231	Identifier	op		434124	1					
ANR	434232	CFGEntryNode	ENTRY		434124		True				
ANR	434233	CFGExitNode	EXIT		434124		True				
ANR	434234	Symbol	a		434124						
ANR	434235	Symbol	op		434124						
ANR	434236	Symbol	OT_CONSTANT		434124						
ANR	434237	Symbol	data		434124						
ANR	434238	Symbol	* op		434124						
ANR	434239	Symbol	l		434124						
ANR	434240	Symbol	op -> operands [ 0 ] . immediate		434124						
ANR	434241	Symbol	* * op		434124						
ANR	434242	Symbol	OT_UNKNOWN		434124						
ANR	434243	Symbol	* op -> operands		434124						
ANR	434244	Symbol	immediate		434124						
ANR	434245	Symbol	op -> operands [ 0 ] . type		434124						
ANR	434246	Symbol	op -> operands		434124						
ANR	434247	Symbol	* data		434124						
ANR	434248	Symbol	op -> operands [ 0 ] . sign		434124						
ANR	434249	Function	opstos	2490:0:65214:65577							
ANR	434250	FunctionDef	"opstos (RAsm * a , ut8 * data , const Opcode * op)"		434249	0					
ANR	434251	CompoundStatement		2490:56:65270:65577	434249	0					
ANR	434252	ExpressionStatement	is_valid_registers ( op )	2491:1:65273:65296	434249	0	True				
ANR	434253	CallExpression	is_valid_registers ( op )		434249	0					
ANR	434254	Callee	is_valid_registers		434249	0					
ANR	434255	Identifier	is_valid_registers		434249	0					
ANR	434256	ArgumentList	op		434249	1					
ANR	434257	Argument	op		434249	0					
ANR	434258	Identifier	op		434249	0					
ANR	434259	IdentifierDeclStatement	int l = 0 ;	2492:1:65299:65308	434249	1	True				
ANR	434260	IdentifierDecl	l = 0		434249	0					
ANR	434261	IdentifierDeclType	int		434249	0					
ANR	434262	Identifier	l		434249	1					
ANR	434263	AssignmentExpression	l = 0		434249	2		=			
ANR	434264	Identifier	l		434249	0					
ANR	434265	PrimaryExpression	0		434249	1					
ANR	434266	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosw"" ) )"		434249	2					
ANR	434267	Condition	"! strcmp ( op -> mnemonic , ""stosw"" )"	2493:5:65315:65344	434249	0	True				
ANR	434268	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosw"" )"		434249	0					
ANR	434269	UnaryOperator	!		434249	0					
ANR	434270	CallExpression	"strcmp ( op -> mnemonic , ""stosw"" )"		434249	1					
ANR	434271	Callee	strcmp		434249	0					
ANR	434272	Identifier	strcmp		434249	0					
ANR	434273	ArgumentList	op -> mnemonic		434249	1					
ANR	434274	Argument	op -> mnemonic		434249	0					
ANR	434275	PtrMemberAccess	op -> mnemonic		434249	0					
ANR	434276	Identifier	op		434249	0					
ANR	434277	Identifier	mnemonic		434249	1					
ANR	434278	Argument	"""stosw"""		434249	1					
ANR	434279	PrimaryExpression	"""stosw"""		434249	0					
ANR	434280	CompoundStatement		4:37:76:76	434249	1					
ANR	434281	ExpressionStatement	data [ l ++ ] = 0x66	2494:2:65351:65367	434249	0	True				
ANR	434282	AssignmentExpression	data [ l ++ ] = 0x66		434249	0		=			
ANR	434283	ArrayIndexing	data [ l ++ ]		434249	0					
ANR	434284	Identifier	data		434249	0					
ANR	434285	PostIncDecOperationExpression	l ++		434249	1					
ANR	434286	Identifier	l		434249	0					
ANR	434287	IncDec	++		434249	1					
ANR	434288	PrimaryExpression	0x66		434249	1					
ANR	434289	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosb"" ) )"		434249	3					
ANR	434290	Condition	"! strcmp ( op -> mnemonic , ""stosb"" )"	2496:5:65377:65406	434249	0	True				
ANR	434291	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosb"" )"		434249	0					
ANR	434292	UnaryOperator	!		434249	0					
ANR	434293	CallExpression	"strcmp ( op -> mnemonic , ""stosb"" )"		434249	1					
ANR	434294	Callee	strcmp		434249	0					
ANR	434295	Identifier	strcmp		434249	0					
ANR	434296	ArgumentList	op -> mnemonic		434249	1					
ANR	434297	Argument	op -> mnemonic		434249	0					
ANR	434298	PtrMemberAccess	op -> mnemonic		434249	0					
ANR	434299	Identifier	op		434249	0					
ANR	434300	Identifier	mnemonic		434249	1					
ANR	434301	Argument	"""stosb"""		434249	1					
ANR	434302	PrimaryExpression	"""stosb"""		434249	0					
ANR	434303	CompoundStatement		7:37:138:138	434249	1					
ANR	434304	ExpressionStatement	data [ l ++ ] = 0xaa	2497:2:65413:65429	434249	0	True				
ANR	434305	AssignmentExpression	data [ l ++ ] = 0xaa		434249	0		=			
ANR	434306	ArrayIndexing	data [ l ++ ]		434249	0					
ANR	434307	Identifier	data		434249	0					
ANR	434308	PostIncDecOperationExpression	l ++		434249	1					
ANR	434309	Identifier	l		434249	0					
ANR	434310	IncDec	++		434249	1					
ANR	434311	PrimaryExpression	0xaa		434249	1					
ANR	434312	ElseStatement	else		434249	0					
ANR	434313	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosw"" ) )"		434249	0					
ANR	434314	Condition	"! strcmp ( op -> mnemonic , ""stosw"" )"	2498:12:65443:65472	434249	0	True				
ANR	434315	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosw"" )"		434249	0					
ANR	434316	UnaryOperator	!		434249	0					
ANR	434317	CallExpression	"strcmp ( op -> mnemonic , ""stosw"" )"		434249	1					
ANR	434318	Callee	strcmp		434249	0					
ANR	434319	Identifier	strcmp		434249	0					
ANR	434320	ArgumentList	op -> mnemonic		434249	1					
ANR	434321	Argument	op -> mnemonic		434249	0					
ANR	434322	PtrMemberAccess	op -> mnemonic		434249	0					
ANR	434323	Identifier	op		434249	0					
ANR	434324	Identifier	mnemonic		434249	1					
ANR	434325	Argument	"""stosw"""		434249	1					
ANR	434326	PrimaryExpression	"""stosw"""		434249	0					
ANR	434327	CompoundStatement		9:44:204:204	434249	1					
ANR	434328	ExpressionStatement	data [ l ++ ] = 0xab	2499:2:65479:65495	434249	0	True				
ANR	434329	AssignmentExpression	data [ l ++ ] = 0xab		434249	0		=			
ANR	434330	ArrayIndexing	data [ l ++ ]		434249	0					
ANR	434331	Identifier	data		434249	0					
ANR	434332	PostIncDecOperationExpression	l ++		434249	1					
ANR	434333	Identifier	l		434249	0					
ANR	434334	IncDec	++		434249	1					
ANR	434335	PrimaryExpression	0xab		434249	1					
ANR	434336	ElseStatement	else		434249	0					
ANR	434337	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosd"" ) )"		434249	0					
ANR	434338	Condition	"! strcmp ( op -> mnemonic , ""stosd"" )"	2500:12:65509:65538	434249	0	True				
ANR	434339	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosd"" )"		434249	0					
ANR	434340	UnaryOperator	!		434249	0					
ANR	434341	CallExpression	"strcmp ( op -> mnemonic , ""stosd"" )"		434249	1					
ANR	434342	Callee	strcmp		434249	0					
ANR	434343	Identifier	strcmp		434249	0					
ANR	434344	ArgumentList	op -> mnemonic		434249	1					
ANR	434345	Argument	op -> mnemonic		434249	0					
ANR	434346	PtrMemberAccess	op -> mnemonic		434249	0					
ANR	434347	Identifier	op		434249	0					
ANR	434348	Identifier	mnemonic		434249	1					
ANR	434349	Argument	"""stosd"""		434249	1					
ANR	434350	PrimaryExpression	"""stosd"""		434249	0					
ANR	434351	CompoundStatement		11:44:270:270	434249	1					
ANR	434352	ExpressionStatement	data [ l ++ ] = 0xab	2501:2:65545:65561	434249	0	True				
ANR	434353	AssignmentExpression	data [ l ++ ] = 0xab		434249	0		=			
ANR	434354	ArrayIndexing	data [ l ++ ]		434249	0					
ANR	434355	Identifier	data		434249	0					
ANR	434356	PostIncDecOperationExpression	l ++		434249	1					
ANR	434357	Identifier	l		434249	0					
ANR	434358	IncDec	++		434249	1					
ANR	434359	PrimaryExpression	0xab		434249	1					
ANR	434360	ReturnStatement	return l ;	2503:1:65567:65575	434249	4	True				
ANR	434361	Identifier	l		434249	0					
ANR	434362	ReturnType	static int		434249	1					
ANR	434363	Identifier	opstos		434249	2					
ANR	434364	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		434249	3					
ANR	434365	Parameter	RAsm * a	2490:18:65232:65238	434249	0	True				
ANR	434366	ParameterType	RAsm *		434249	0					
ANR	434367	Identifier	a		434249	1					
ANR	434368	Parameter	ut8 * data	2490:27:65241:65249	434249	1	True				
ANR	434369	ParameterType	ut8 *		434249	0					
ANR	434370	Identifier	data		434249	1					
ANR	434371	Parameter	const Opcode * op	2490:38:65252:65267	434249	2	True				
ANR	434372	ParameterType	const Opcode *		434249	0					
ANR	434373	Identifier	op		434249	1					
ANR	434374	CFGEntryNode	ENTRY		434249		True				
ANR	434375	CFGExitNode	EXIT		434249		True				
ANR	434376	Symbol	strcmp		434249						
ANR	434377	Symbol	a		434249						
ANR	434378	Symbol	op		434249						
ANR	434379	Symbol	data		434249						
ANR	434380	Symbol	* op		434249						
ANR	434381	Symbol	op -> mnemonic		434249						
ANR	434382	Symbol	l		434249						
ANR	434383	Symbol	* data		434249						
ANR	434384	Function	opset	2506:0:65580:67569							
ANR	434385	FunctionDef	"opset (RAsm * a , ut8 * data , const Opcode * op)"		434384	0					
ANR	434386	CompoundStatement		2506:55:65635:67569	434384	0					
ANR	434387	IfStatement	if ( ! ( op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE ) ) )		434384	0					
ANR	434388	Condition	! ( op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE ) )	2507:5:65642:65687	434384	0	True				
ANR	434389	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE ) )		434384	0					
ANR	434390	UnaryOperator	!		434384	0					
ANR	434391	BitAndExpression	op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE )		434384	1		&			
ANR	434392	MemberAccess	op -> operands [ 0 ] . type		434384	0					
ANR	434393	ArrayIndexing	op -> operands [ 0 ]		434384	0					
ANR	434394	PtrMemberAccess	op -> operands		434384	0					
ANR	434395	Identifier	op		434384	0					
ANR	434396	Identifier	operands		434384	1					
ANR	434397	PrimaryExpression	0		434384	1					
ANR	434398	Identifier	type		434384	1					
ANR	434399	InclusiveOrExpression	OT_GPREG | OT_BYTE		434384	1		|			
ANR	434400	Identifier	OT_GPREG		434384	0					
ANR	434401	Identifier	OT_BYTE		434384	1					
ANR	434402	CompoundStatement		2:53:54:54	434384	1					
ANR	434403	ReturnStatement	return - 1 ;	2507:54:65691:65700	434384	0	True				
ANR	434404	UnaryOperationExpression	- 1		434384	0					
ANR	434405	UnaryOperator	-		434384	0					
ANR	434406	PrimaryExpression	1		434384	1					
ANR	434407	IdentifierDeclStatement	int l = 0 ;	2508:1:65704:65713	434384	1	True				
ANR	434408	IdentifierDecl	l = 0		434384	0					
ANR	434409	IdentifierDeclType	int		434384	0					
ANR	434410	Identifier	l		434384	1					
ANR	434411	AssignmentExpression	l = 0		434384	2		=			
ANR	434412	Identifier	l		434384	0					
ANR	434413	PrimaryExpression	0		434384	1					
ANR	434414	IdentifierDeclStatement	int mod = 0 ;	2509:1:65716:65727	434384	2	True				
ANR	434415	IdentifierDecl	mod = 0		434384	0					
ANR	434416	IdentifierDeclType	int		434384	0					
ANR	434417	Identifier	mod		434384	1					
ANR	434418	AssignmentExpression	mod = 0		434384	2		=			
ANR	434419	Identifier	mod		434384	0					
ANR	434420	PrimaryExpression	0		434384	1					
ANR	434421	IdentifierDeclStatement	int reg = op -> operands [ 0 ] . regs [ 0 ] ;	2510:1:65730:65763	434384	3	True				
ANR	434422	IdentifierDecl	reg = op -> operands [ 0 ] . regs [ 0 ]		434384	0					
ANR	434423	IdentifierDeclType	int		434384	0					
ANR	434424	Identifier	reg		434384	1					
ANR	434425	AssignmentExpression	reg = op -> operands [ 0 ] . regs [ 0 ]		434384	2		=			
ANR	434426	Identifier	reg		434384	0					
ANR	434427	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		434384	1					
ANR	434428	MemberAccess	op -> operands [ 0 ] . regs		434384	0					
ANR	434429	ArrayIndexing	op -> operands [ 0 ]		434384	0					
ANR	434430	PtrMemberAccess	op -> operands		434384	0					
ANR	434431	Identifier	op		434384	0					
ANR	434432	Identifier	operands		434384	1					
ANR	434433	PrimaryExpression	0		434384	1					
ANR	434434	Identifier	regs		434384	1					
ANR	434435	PrimaryExpression	0		434384	1					
ANR	434436	ExpressionStatement	data [ l ++ ] = 0x0f	2512:1:65767:65783	434384	4	True				
ANR	434437	AssignmentExpression	data [ l ++ ] = 0x0f		434384	0		=			
ANR	434438	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434439	Identifier	data		434384	0					
ANR	434440	PostIncDecOperationExpression	l ++		434384	1					
ANR	434441	Identifier	l		434384	0					
ANR	434442	IncDec	++		434384	1					
ANR	434443	PrimaryExpression	0x0f		434384	1					
ANR	434444	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""seto"" ) )"		434384	5					
ANR	434445	Condition	"! strcmp ( op -> mnemonic , ""seto"" )"	2513:5:65790:65819	434384	0	True				
ANR	434446	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""seto"" )"		434384	0					
ANR	434447	UnaryOperator	!		434384	0					
ANR	434448	CallExpression	"strcmp ( op -> mnemonic , ""seto"" )"		434384	1					
ANR	434449	Callee	strcmp		434384	0					
ANR	434450	Identifier	strcmp		434384	0					
ANR	434451	ArgumentList	op -> mnemonic		434384	1					
ANR	434452	Argument	op -> mnemonic		434384	0					
ANR	434453	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434454	Identifier	op		434384	0					
ANR	434455	Identifier	mnemonic		434384	1					
ANR	434456	Argument	"""seto"""		434384	1					
ANR	434457	PrimaryExpression	"""seto"""		434384	0					
ANR	434458	CompoundStatement		8:37:186:186	434384	1					
ANR	434459	ExpressionStatement	data [ l ++ ] = 0x90	2514:2:65826:65842	434384	0	True				
ANR	434460	AssignmentExpression	data [ l ++ ] = 0x90		434384	0		=			
ANR	434461	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434462	Identifier	data		434384	0					
ANR	434463	PostIncDecOperationExpression	l ++		434384	1					
ANR	434464	Identifier	l		434384	0					
ANR	434465	IncDec	++		434384	1					
ANR	434466	PrimaryExpression	0x90		434384	1					
ANR	434467	ElseStatement	else		434384	0					
ANR	434468	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setno"" ) )"		434384	0					
ANR	434469	Condition	"! strcmp ( op -> mnemonic , ""setno"" )"	2515:12:65856:65886	434384	0	True				
ANR	434470	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setno"" )"		434384	0					
ANR	434471	UnaryOperator	!		434384	0					
ANR	434472	CallExpression	"strcmp ( op -> mnemonic , ""setno"" )"		434384	1					
ANR	434473	Callee	strcmp		434384	0					
ANR	434474	Identifier	strcmp		434384	0					
ANR	434475	ArgumentList	op -> mnemonic		434384	1					
ANR	434476	Argument	op -> mnemonic		434384	0					
ANR	434477	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434478	Identifier	op		434384	0					
ANR	434479	Identifier	mnemonic		434384	1					
ANR	434480	Argument	"""setno"""		434384	1					
ANR	434481	PrimaryExpression	"""setno"""		434384	0					
ANR	434482	CompoundStatement		10:45:253:253	434384	1					
ANR	434483	ExpressionStatement	data [ l ++ ] = 0x91	2516:2:65893:65909	434384	0	True				
ANR	434484	AssignmentExpression	data [ l ++ ] = 0x91		434384	0		=			
ANR	434485	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434486	Identifier	data		434384	0					
ANR	434487	PostIncDecOperationExpression	l ++		434384	1					
ANR	434488	Identifier	l		434384	0					
ANR	434489	IncDec	++		434384	1					
ANR	434490	PrimaryExpression	0x91		434384	1					
ANR	434491	ElseStatement	else		434384	0					
ANR	434492	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setb"" ) || ! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" ) )"		434384	0					
ANR	434493	Condition	"! strcmp ( op -> mnemonic , ""setb"" ) || ! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" )"	2517:12:65923:66032	434384	0	True				
ANR	434494	OrExpression	"! strcmp ( op -> mnemonic , ""setb"" ) || ! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" )"		434384	0		||			
ANR	434495	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setb"" )"		434384	0					
ANR	434496	UnaryOperator	!		434384	0					
ANR	434497	CallExpression	"strcmp ( op -> mnemonic , ""setb"" )"		434384	1					
ANR	434498	Callee	strcmp		434384	0					
ANR	434499	Identifier	strcmp		434384	0					
ANR	434500	ArgumentList	op -> mnemonic		434384	1					
ANR	434501	Argument	op -> mnemonic		434384	0					
ANR	434502	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434503	Identifier	op		434384	0					
ANR	434504	Identifier	mnemonic		434384	1					
ANR	434505	Argument	"""setb"""		434384	1					
ANR	434506	PrimaryExpression	"""setb"""		434384	0					
ANR	434507	OrExpression	"! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" )"		434384	1		||			
ANR	434508	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnae"" )"		434384	0					
ANR	434509	UnaryOperator	!		434384	0					
ANR	434510	CallExpression	"strcmp ( op -> mnemonic , ""setnae"" )"		434384	1					
ANR	434511	Callee	strcmp		434384	0					
ANR	434512	Identifier	strcmp		434384	0					
ANR	434513	ArgumentList	op -> mnemonic		434384	1					
ANR	434514	Argument	op -> mnemonic		434384	0					
ANR	434515	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434516	Identifier	op		434384	0					
ANR	434517	Identifier	mnemonic		434384	1					
ANR	434518	Argument	"""setnae"""		434384	1					
ANR	434519	PrimaryExpression	"""setnae"""		434384	0					
ANR	434520	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setc"" )"		434384	1					
ANR	434521	UnaryOperator	!		434384	0					
ANR	434522	CallExpression	"strcmp ( op -> mnemonic , ""setc"" )"		434384	1					
ANR	434523	Callee	strcmp		434384	0					
ANR	434524	Identifier	strcmp		434384	0					
ANR	434525	ArgumentList	op -> mnemonic		434384	1					
ANR	434526	Argument	op -> mnemonic		434384	0					
ANR	434527	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434528	Identifier	op		434384	0					
ANR	434529	Identifier	mnemonic		434384	1					
ANR	434530	Argument	"""setc"""		434384	1					
ANR	434531	PrimaryExpression	"""setc"""		434384	0					
ANR	434532	CompoundStatement		14:37:399:399	434384	1					
ANR	434533	ExpressionStatement	data [ l ++ ] = 0x92	2520:2:66039:66055	434384	0	True				
ANR	434534	AssignmentExpression	data [ l ++ ] = 0x92		434384	0		=			
ANR	434535	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434536	Identifier	data		434384	0					
ANR	434537	PostIncDecOperationExpression	l ++		434384	1					
ANR	434538	Identifier	l		434384	0					
ANR	434539	IncDec	++		434384	1					
ANR	434540	PrimaryExpression	0x92		434384	1					
ANR	434541	ElseStatement	else		434384	0					
ANR	434542	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnb"" ) || ! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" ) )"		434384	0					
ANR	434543	Condition	"! strcmp ( op -> mnemonic , ""setnb"" ) || ! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" )"	2521:12:66069:66181	434384	0	True				
ANR	434544	OrExpression	"! strcmp ( op -> mnemonic , ""setnb"" ) || ! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" )"		434384	0		||			
ANR	434545	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnb"" )"		434384	0					
ANR	434546	UnaryOperator	!		434384	0					
ANR	434547	CallExpression	"strcmp ( op -> mnemonic , ""setnb"" )"		434384	1					
ANR	434548	Callee	strcmp		434384	0					
ANR	434549	Identifier	strcmp		434384	0					
ANR	434550	ArgumentList	op -> mnemonic		434384	1					
ANR	434551	Argument	op -> mnemonic		434384	0					
ANR	434552	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434553	Identifier	op		434384	0					
ANR	434554	Identifier	mnemonic		434384	1					
ANR	434555	Argument	"""setnb"""		434384	1					
ANR	434556	PrimaryExpression	"""setnb"""		434384	0					
ANR	434557	OrExpression	"! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" )"		434384	1		||			
ANR	434558	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setae"" )"		434384	0					
ANR	434559	UnaryOperator	!		434384	0					
ANR	434560	CallExpression	"strcmp ( op -> mnemonic , ""setae"" )"		434384	1					
ANR	434561	Callee	strcmp		434384	0					
ANR	434562	Identifier	strcmp		434384	0					
ANR	434563	ArgumentList	op -> mnemonic		434384	1					
ANR	434564	Argument	op -> mnemonic		434384	0					
ANR	434565	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434566	Identifier	op		434384	0					
ANR	434567	Identifier	mnemonic		434384	1					
ANR	434568	Argument	"""setae"""		434384	1					
ANR	434569	PrimaryExpression	"""setae"""		434384	0					
ANR	434570	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnc"" )"		434384	1					
ANR	434571	UnaryOperator	!		434384	0					
ANR	434572	CallExpression	"strcmp ( op -> mnemonic , ""setnc"" )"		434384	1					
ANR	434573	Callee	strcmp		434384	0					
ANR	434574	Identifier	strcmp		434384	0					
ANR	434575	ArgumentList	op -> mnemonic		434384	1					
ANR	434576	Argument	op -> mnemonic		434384	0					
ANR	434577	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434578	Identifier	op		434384	0					
ANR	434579	Identifier	mnemonic		434384	1					
ANR	434580	Argument	"""setnc"""		434384	1					
ANR	434581	PrimaryExpression	"""setnc"""		434384	0					
ANR	434582	CompoundStatement		18:39:548:548	434384	1					
ANR	434583	ExpressionStatement	data [ l ++ ] = 0x93	2524:2:66188:66204	434384	0	True				
ANR	434584	AssignmentExpression	data [ l ++ ] = 0x93		434384	0		=			
ANR	434585	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434586	Identifier	data		434384	0					
ANR	434587	PostIncDecOperationExpression	l ++		434384	1					
ANR	434588	Identifier	l		434384	0					
ANR	434589	IncDec	++		434384	1					
ANR	434590	PrimaryExpression	0x93		434384	1					
ANR	434591	ElseStatement	else		434384	0					
ANR	434592	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setz"" ) || ! strcmp ( op -> mnemonic , ""sete"" ) )"		434384	0					
ANR	434593	Condition	"! strcmp ( op -> mnemonic , ""setz"" ) || ! strcmp ( op -> mnemonic , ""sete"" )"	2525:12:66218:66287	434384	0	True				
ANR	434594	OrExpression	"! strcmp ( op -> mnemonic , ""setz"" ) || ! strcmp ( op -> mnemonic , ""sete"" )"		434384	0		||			
ANR	434595	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setz"" )"		434384	0					
ANR	434596	UnaryOperator	!		434384	0					
ANR	434597	CallExpression	"strcmp ( op -> mnemonic , ""setz"" )"		434384	1					
ANR	434598	Callee	strcmp		434384	0					
ANR	434599	Identifier	strcmp		434384	0					
ANR	434600	ArgumentList	op -> mnemonic		434384	1					
ANR	434601	Argument	op -> mnemonic		434384	0					
ANR	434602	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434603	Identifier	op		434384	0					
ANR	434604	Identifier	mnemonic		434384	1					
ANR	434605	Argument	"""setz"""		434384	1					
ANR	434606	PrimaryExpression	"""setz"""		434384	0					
ANR	434607	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sete"" )"		434384	1					
ANR	434608	UnaryOperator	!		434384	0					
ANR	434609	CallExpression	"strcmp ( op -> mnemonic , ""sete"" )"		434384	1					
ANR	434610	Callee	strcmp		434384	0					
ANR	434611	Identifier	strcmp		434384	0					
ANR	434612	ArgumentList	op -> mnemonic		434384	1					
ANR	434613	Argument	op -> mnemonic		434384	0					
ANR	434614	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434615	Identifier	op		434384	0					
ANR	434616	Identifier	mnemonic		434384	1					
ANR	434617	Argument	"""sete"""		434384	1					
ANR	434618	PrimaryExpression	"""sete"""		434384	0					
ANR	434619	CompoundStatement		21:38:654:654	434384	1					
ANR	434620	ExpressionStatement	data [ l ++ ] = 0x94	2527:2:66294:66310	434384	0	True				
ANR	434621	AssignmentExpression	data [ l ++ ] = 0x94		434384	0		=			
ANR	434622	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434623	Identifier	data		434384	0					
ANR	434624	PostIncDecOperationExpression	l ++		434384	1					
ANR	434625	Identifier	l		434384	0					
ANR	434626	IncDec	++		434384	1					
ANR	434627	PrimaryExpression	0x94		434384	1					
ANR	434628	ElseStatement	else		434384	0					
ANR	434629	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnz"" ) || ! strcmp ( op -> mnemonic , ""setne"" ) )"		434384	0					
ANR	434630	Condition	"! strcmp ( op -> mnemonic , ""setnz"" ) || ! strcmp ( op -> mnemonic , ""setne"" )"	2528:12:66324:66395	434384	0	True				
ANR	434631	OrExpression	"! strcmp ( op -> mnemonic , ""setnz"" ) || ! strcmp ( op -> mnemonic , ""setne"" )"		434384	0		||			
ANR	434632	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnz"" )"		434384	0					
ANR	434633	UnaryOperator	!		434384	0					
ANR	434634	CallExpression	"strcmp ( op -> mnemonic , ""setnz"" )"		434384	1					
ANR	434635	Callee	strcmp		434384	0					
ANR	434636	Identifier	strcmp		434384	0					
ANR	434637	ArgumentList	op -> mnemonic		434384	1					
ANR	434638	Argument	op -> mnemonic		434384	0					
ANR	434639	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434640	Identifier	op		434384	0					
ANR	434641	Identifier	mnemonic		434384	1					
ANR	434642	Argument	"""setnz"""		434384	1					
ANR	434643	PrimaryExpression	"""setnz"""		434384	0					
ANR	434644	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setne"" )"		434384	1					
ANR	434645	UnaryOperator	!		434384	0					
ANR	434646	CallExpression	"strcmp ( op -> mnemonic , ""setne"" )"		434384	1					
ANR	434647	Callee	strcmp		434384	0					
ANR	434648	Identifier	strcmp		434384	0					
ANR	434649	ArgumentList	op -> mnemonic		434384	1					
ANR	434650	Argument	op -> mnemonic		434384	0					
ANR	434651	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434652	Identifier	op		434384	0					
ANR	434653	Identifier	mnemonic		434384	1					
ANR	434654	Argument	"""setne"""		434384	1					
ANR	434655	PrimaryExpression	"""setne"""		434384	0					
ANR	434656	CompoundStatement		24:39:762:762	434384	1					
ANR	434657	ExpressionStatement	data [ l ++ ] = 0x95	2530:2:66402:66418	434384	0	True				
ANR	434658	AssignmentExpression	data [ l ++ ] = 0x95		434384	0		=			
ANR	434659	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434660	Identifier	data		434384	0					
ANR	434661	PostIncDecOperationExpression	l ++		434384	1					
ANR	434662	Identifier	l		434384	0					
ANR	434663	IncDec	++		434384	1					
ANR	434664	PrimaryExpression	0x95		434384	1					
ANR	434665	ElseStatement	else		434384	0					
ANR	434666	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setbe"" ) || ! strcmp ( op -> mnemonic , ""setna"" ) )"		434384	0					
ANR	434667	Condition	"! strcmp ( op -> mnemonic , ""setbe"" ) || ! strcmp ( op -> mnemonic , ""setna"" )"	2531:12:66432:66503	434384	0	True				
ANR	434668	OrExpression	"! strcmp ( op -> mnemonic , ""setbe"" ) || ! strcmp ( op -> mnemonic , ""setna"" )"		434384	0		||			
ANR	434669	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setbe"" )"		434384	0					
ANR	434670	UnaryOperator	!		434384	0					
ANR	434671	CallExpression	"strcmp ( op -> mnemonic , ""setbe"" )"		434384	1					
ANR	434672	Callee	strcmp		434384	0					
ANR	434673	Identifier	strcmp		434384	0					
ANR	434674	ArgumentList	op -> mnemonic		434384	1					
ANR	434675	Argument	op -> mnemonic		434384	0					
ANR	434676	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434677	Identifier	op		434384	0					
ANR	434678	Identifier	mnemonic		434384	1					
ANR	434679	Argument	"""setbe"""		434384	1					
ANR	434680	PrimaryExpression	"""setbe"""		434384	0					
ANR	434681	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setna"" )"		434384	1					
ANR	434682	UnaryOperator	!		434384	0					
ANR	434683	CallExpression	"strcmp ( op -> mnemonic , ""setna"" )"		434384	1					
ANR	434684	Callee	strcmp		434384	0					
ANR	434685	Identifier	strcmp		434384	0					
ANR	434686	ArgumentList	op -> mnemonic		434384	1					
ANR	434687	Argument	op -> mnemonic		434384	0					
ANR	434688	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434689	Identifier	op		434384	0					
ANR	434690	Identifier	mnemonic		434384	1					
ANR	434691	Argument	"""setna"""		434384	1					
ANR	434692	PrimaryExpression	"""setna"""		434384	0					
ANR	434693	CompoundStatement		27:39:870:870	434384	1					
ANR	434694	ExpressionStatement	data [ l ++ ] = 0x96	2533:2:66510:66526	434384	0	True				
ANR	434695	AssignmentExpression	data [ l ++ ] = 0x96		434384	0		=			
ANR	434696	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434697	Identifier	data		434384	0					
ANR	434698	PostIncDecOperationExpression	l ++		434384	1					
ANR	434699	Identifier	l		434384	0					
ANR	434700	IncDec	++		434384	1					
ANR	434701	PrimaryExpression	0x96		434384	1					
ANR	434702	ElseStatement	else		434384	0					
ANR	434703	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnbe"" ) || ! strcmp ( op -> mnemonic , ""seta"" ) )"		434384	0					
ANR	434704	Condition	"! strcmp ( op -> mnemonic , ""setnbe"" ) || ! strcmp ( op -> mnemonic , ""seta"" )"	2534:12:66540:66611	434384	0	True				
ANR	434705	OrExpression	"! strcmp ( op -> mnemonic , ""setnbe"" ) || ! strcmp ( op -> mnemonic , ""seta"" )"		434384	0		||			
ANR	434706	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnbe"" )"		434384	0					
ANR	434707	UnaryOperator	!		434384	0					
ANR	434708	CallExpression	"strcmp ( op -> mnemonic , ""setnbe"" )"		434384	1					
ANR	434709	Callee	strcmp		434384	0					
ANR	434710	Identifier	strcmp		434384	0					
ANR	434711	ArgumentList	op -> mnemonic		434384	1					
ANR	434712	Argument	op -> mnemonic		434384	0					
ANR	434713	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434714	Identifier	op		434384	0					
ANR	434715	Identifier	mnemonic		434384	1					
ANR	434716	Argument	"""setnbe"""		434384	1					
ANR	434717	PrimaryExpression	"""setnbe"""		434384	0					
ANR	434718	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""seta"" )"		434384	1					
ANR	434719	UnaryOperator	!		434384	0					
ANR	434720	CallExpression	"strcmp ( op -> mnemonic , ""seta"" )"		434384	1					
ANR	434721	Callee	strcmp		434384	0					
ANR	434722	Identifier	strcmp		434384	0					
ANR	434723	ArgumentList	op -> mnemonic		434384	1					
ANR	434724	Argument	op -> mnemonic		434384	0					
ANR	434725	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434726	Identifier	op		434384	0					
ANR	434727	Identifier	mnemonic		434384	1					
ANR	434728	Argument	"""seta"""		434384	1					
ANR	434729	PrimaryExpression	"""seta"""		434384	0					
ANR	434730	CompoundStatement		30:38:978:978	434384	1					
ANR	434731	ExpressionStatement	data [ l ++ ] = 0x97	2536:2:66618:66634	434384	0	True				
ANR	434732	AssignmentExpression	data [ l ++ ] = 0x97		434384	0		=			
ANR	434733	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434734	Identifier	data		434384	0					
ANR	434735	PostIncDecOperationExpression	l ++		434384	1					
ANR	434736	Identifier	l		434384	0					
ANR	434737	IncDec	++		434384	1					
ANR	434738	PrimaryExpression	0x97		434384	1					
ANR	434739	ElseStatement	else		434384	0					
ANR	434740	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sets"" ) )"		434384	0					
ANR	434741	Condition	"! strcmp ( op -> mnemonic , ""sets"" )"	2537:12:66648:66677	434384	0	True				
ANR	434742	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sets"" )"		434384	0					
ANR	434743	UnaryOperator	!		434384	0					
ANR	434744	CallExpression	"strcmp ( op -> mnemonic , ""sets"" )"		434384	1					
ANR	434745	Callee	strcmp		434384	0					
ANR	434746	Identifier	strcmp		434384	0					
ANR	434747	ArgumentList	op -> mnemonic		434384	1					
ANR	434748	Argument	op -> mnemonic		434384	0					
ANR	434749	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434750	Identifier	op		434384	0					
ANR	434751	Identifier	mnemonic		434384	1					
ANR	434752	Argument	"""sets"""		434384	1					
ANR	434753	PrimaryExpression	"""sets"""		434384	0					
ANR	434754	CompoundStatement		32:44:1044:1044	434384	1					
ANR	434755	ExpressionStatement	data [ l ++ ] = 0x98	2538:2:66684:66700	434384	0	True				
ANR	434756	AssignmentExpression	data [ l ++ ] = 0x98		434384	0		=			
ANR	434757	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434758	Identifier	data		434384	0					
ANR	434759	PostIncDecOperationExpression	l ++		434384	1					
ANR	434760	Identifier	l		434384	0					
ANR	434761	IncDec	++		434384	1					
ANR	434762	PrimaryExpression	0x98		434384	1					
ANR	434763	ElseStatement	else		434384	0					
ANR	434764	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setns"" ) )"		434384	0					
ANR	434765	Condition	"! strcmp ( op -> mnemonic , ""setns"" )"	2539:12:66714:66744	434384	0	True				
ANR	434766	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setns"" )"		434384	0					
ANR	434767	UnaryOperator	!		434384	0					
ANR	434768	CallExpression	"strcmp ( op -> mnemonic , ""setns"" )"		434384	1					
ANR	434769	Callee	strcmp		434384	0					
ANR	434770	Identifier	strcmp		434384	0					
ANR	434771	ArgumentList	op -> mnemonic		434384	1					
ANR	434772	Argument	op -> mnemonic		434384	0					
ANR	434773	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434774	Identifier	op		434384	0					
ANR	434775	Identifier	mnemonic		434384	1					
ANR	434776	Argument	"""setns"""		434384	1					
ANR	434777	PrimaryExpression	"""setns"""		434384	0					
ANR	434778	CompoundStatement		34:45:1111:1111	434384	1					
ANR	434779	ExpressionStatement	data [ l ++ ] = 0x99	2540:2:66751:66767	434384	0	True				
ANR	434780	AssignmentExpression	data [ l ++ ] = 0x99		434384	0		=			
ANR	434781	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434782	Identifier	data		434384	0					
ANR	434783	PostIncDecOperationExpression	l ++		434384	1					
ANR	434784	Identifier	l		434384	0					
ANR	434785	IncDec	++		434384	1					
ANR	434786	PrimaryExpression	0x99		434384	1					
ANR	434787	ElseStatement	else		434384	0					
ANR	434788	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setp"" ) || ! strcmp ( op -> mnemonic , ""setpe"" ) )"		434384	0					
ANR	434789	Condition	"! strcmp ( op -> mnemonic , ""setp"" ) || ! strcmp ( op -> mnemonic , ""setpe"" )"	2541:12:66781:66851	434384	0	True				
ANR	434790	OrExpression	"! strcmp ( op -> mnemonic , ""setp"" ) || ! strcmp ( op -> mnemonic , ""setpe"" )"		434384	0		||			
ANR	434791	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setp"" )"		434384	0					
ANR	434792	UnaryOperator	!		434384	0					
ANR	434793	CallExpression	"strcmp ( op -> mnemonic , ""setp"" )"		434384	1					
ANR	434794	Callee	strcmp		434384	0					
ANR	434795	Identifier	strcmp		434384	0					
ANR	434796	ArgumentList	op -> mnemonic		434384	1					
ANR	434797	Argument	op -> mnemonic		434384	0					
ANR	434798	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434799	Identifier	op		434384	0					
ANR	434800	Identifier	mnemonic		434384	1					
ANR	434801	Argument	"""setp"""		434384	1					
ANR	434802	PrimaryExpression	"""setp"""		434384	0					
ANR	434803	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setpe"" )"		434384	1					
ANR	434804	UnaryOperator	!		434384	0					
ANR	434805	CallExpression	"strcmp ( op -> mnemonic , ""setpe"" )"		434384	1					
ANR	434806	Callee	strcmp		434384	0					
ANR	434807	Identifier	strcmp		434384	0					
ANR	434808	ArgumentList	op -> mnemonic		434384	1					
ANR	434809	Argument	op -> mnemonic		434384	0					
ANR	434810	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434811	Identifier	op		434384	0					
ANR	434812	Identifier	mnemonic		434384	1					
ANR	434813	Argument	"""setpe"""		434384	1					
ANR	434814	PrimaryExpression	"""setpe"""		434384	0					
ANR	434815	CompoundStatement		37:39:1218:1218	434384	1					
ANR	434816	ExpressionStatement	data [ l ++ ] = 0x9a	2543:2:66858:66874	434384	0	True				
ANR	434817	AssignmentExpression	data [ l ++ ] = 0x9a		434384	0		=			
ANR	434818	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434819	Identifier	data		434384	0					
ANR	434820	PostIncDecOperationExpression	l ++		434384	1					
ANR	434821	Identifier	l		434384	0					
ANR	434822	IncDec	++		434384	1					
ANR	434823	PrimaryExpression	0x9a		434384	1					
ANR	434824	ElseStatement	else		434384	0					
ANR	434825	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnp"" ) || ! strcmp ( op -> mnemonic , ""setpo"" ) )"		434384	0					
ANR	434826	Condition	"! strcmp ( op -> mnemonic , ""setnp"" ) || ! strcmp ( op -> mnemonic , ""setpo"" )"	2544:12:66888:66959	434384	0	True				
ANR	434827	OrExpression	"! strcmp ( op -> mnemonic , ""setnp"" ) || ! strcmp ( op -> mnemonic , ""setpo"" )"		434384	0		||			
ANR	434828	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnp"" )"		434384	0					
ANR	434829	UnaryOperator	!		434384	0					
ANR	434830	CallExpression	"strcmp ( op -> mnemonic , ""setnp"" )"		434384	1					
ANR	434831	Callee	strcmp		434384	0					
ANR	434832	Identifier	strcmp		434384	0					
ANR	434833	ArgumentList	op -> mnemonic		434384	1					
ANR	434834	Argument	op -> mnemonic		434384	0					
ANR	434835	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434836	Identifier	op		434384	0					
ANR	434837	Identifier	mnemonic		434384	1					
ANR	434838	Argument	"""setnp"""		434384	1					
ANR	434839	PrimaryExpression	"""setnp"""		434384	0					
ANR	434840	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setpo"" )"		434384	1					
ANR	434841	UnaryOperator	!		434384	0					
ANR	434842	CallExpression	"strcmp ( op -> mnemonic , ""setpo"" )"		434384	1					
ANR	434843	Callee	strcmp		434384	0					
ANR	434844	Identifier	strcmp		434384	0					
ANR	434845	ArgumentList	op -> mnemonic		434384	1					
ANR	434846	Argument	op -> mnemonic		434384	0					
ANR	434847	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434848	Identifier	op		434384	0					
ANR	434849	Identifier	mnemonic		434384	1					
ANR	434850	Argument	"""setpo"""		434384	1					
ANR	434851	PrimaryExpression	"""setpo"""		434384	0					
ANR	434852	CompoundStatement		40:39:1326:1326	434384	1					
ANR	434853	ExpressionStatement	data [ l ++ ] = 0x9b	2546:2:66966:66982	434384	0	True				
ANR	434854	AssignmentExpression	data [ l ++ ] = 0x9b		434384	0		=			
ANR	434855	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434856	Identifier	data		434384	0					
ANR	434857	PostIncDecOperationExpression	l ++		434384	1					
ANR	434858	Identifier	l		434384	0					
ANR	434859	IncDec	++		434384	1					
ANR	434860	PrimaryExpression	0x9b		434384	1					
ANR	434861	ElseStatement	else		434384	0					
ANR	434862	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setl"" ) || ! strcmp ( op -> mnemonic , ""setnge"" ) )"		434384	0					
ANR	434863	Condition	"! strcmp ( op -> mnemonic , ""setl"" ) || ! strcmp ( op -> mnemonic , ""setnge"" )"	2547:12:66996:67067	434384	0	True				
ANR	434864	OrExpression	"! strcmp ( op -> mnemonic , ""setl"" ) || ! strcmp ( op -> mnemonic , ""setnge"" )"		434384	0		||			
ANR	434865	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setl"" )"		434384	0					
ANR	434866	UnaryOperator	!		434384	0					
ANR	434867	CallExpression	"strcmp ( op -> mnemonic , ""setl"" )"		434384	1					
ANR	434868	Callee	strcmp		434384	0					
ANR	434869	Identifier	strcmp		434384	0					
ANR	434870	ArgumentList	op -> mnemonic		434384	1					
ANR	434871	Argument	op -> mnemonic		434384	0					
ANR	434872	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434873	Identifier	op		434384	0					
ANR	434874	Identifier	mnemonic		434384	1					
ANR	434875	Argument	"""setl"""		434384	1					
ANR	434876	PrimaryExpression	"""setl"""		434384	0					
ANR	434877	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnge"" )"		434384	1					
ANR	434878	UnaryOperator	!		434384	0					
ANR	434879	CallExpression	"strcmp ( op -> mnemonic , ""setnge"" )"		434384	1					
ANR	434880	Callee	strcmp		434384	0					
ANR	434881	Identifier	strcmp		434384	0					
ANR	434882	ArgumentList	op -> mnemonic		434384	1					
ANR	434883	Argument	op -> mnemonic		434384	0					
ANR	434884	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434885	Identifier	op		434384	0					
ANR	434886	Identifier	mnemonic		434384	1					
ANR	434887	Argument	"""setnge"""		434384	1					
ANR	434888	PrimaryExpression	"""setnge"""		434384	0					
ANR	434889	CompoundStatement		43:40:1434:1434	434384	1					
ANR	434890	ExpressionStatement	data [ l ++ ] = 0x9c	2549:2:67074:67090	434384	0	True				
ANR	434891	AssignmentExpression	data [ l ++ ] = 0x9c		434384	0		=			
ANR	434892	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434893	Identifier	data		434384	0					
ANR	434894	PostIncDecOperationExpression	l ++		434384	1					
ANR	434895	Identifier	l		434384	0					
ANR	434896	IncDec	++		434384	1					
ANR	434897	PrimaryExpression	0x9c		434384	1					
ANR	434898	ElseStatement	else		434384	0					
ANR	434899	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnl"" ) || ! strcmp ( op -> mnemonic , ""setge"" ) )"		434384	0					
ANR	434900	Condition	"! strcmp ( op -> mnemonic , ""setnl"" ) || ! strcmp ( op -> mnemonic , ""setge"" )"	2550:12:67104:67175	434384	0	True				
ANR	434901	OrExpression	"! strcmp ( op -> mnemonic , ""setnl"" ) || ! strcmp ( op -> mnemonic , ""setge"" )"		434384	0		||			
ANR	434902	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnl"" )"		434384	0					
ANR	434903	UnaryOperator	!		434384	0					
ANR	434904	CallExpression	"strcmp ( op -> mnemonic , ""setnl"" )"		434384	1					
ANR	434905	Callee	strcmp		434384	0					
ANR	434906	Identifier	strcmp		434384	0					
ANR	434907	ArgumentList	op -> mnemonic		434384	1					
ANR	434908	Argument	op -> mnemonic		434384	0					
ANR	434909	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434910	Identifier	op		434384	0					
ANR	434911	Identifier	mnemonic		434384	1					
ANR	434912	Argument	"""setnl"""		434384	1					
ANR	434913	PrimaryExpression	"""setnl"""		434384	0					
ANR	434914	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setge"" )"		434384	1					
ANR	434915	UnaryOperator	!		434384	0					
ANR	434916	CallExpression	"strcmp ( op -> mnemonic , ""setge"" )"		434384	1					
ANR	434917	Callee	strcmp		434384	0					
ANR	434918	Identifier	strcmp		434384	0					
ANR	434919	ArgumentList	op -> mnemonic		434384	1					
ANR	434920	Argument	op -> mnemonic		434384	0					
ANR	434921	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434922	Identifier	op		434384	0					
ANR	434923	Identifier	mnemonic		434384	1					
ANR	434924	Argument	"""setge"""		434384	1					
ANR	434925	PrimaryExpression	"""setge"""		434384	0					
ANR	434926	CompoundStatement		46:39:1542:1542	434384	1					
ANR	434927	ExpressionStatement	data [ l ++ ] = 0x9d	2552:2:67182:67198	434384	0	True				
ANR	434928	AssignmentExpression	data [ l ++ ] = 0x9d		434384	0		=			
ANR	434929	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434930	Identifier	data		434384	0					
ANR	434931	PostIncDecOperationExpression	l ++		434384	1					
ANR	434932	Identifier	l		434384	0					
ANR	434933	IncDec	++		434384	1					
ANR	434934	PrimaryExpression	0x9d		434384	1					
ANR	434935	ElseStatement	else		434384	0					
ANR	434936	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setle"" ) || ! strcmp ( op -> mnemonic , ""setng"" ) )"		434384	0					
ANR	434937	Condition	"! strcmp ( op -> mnemonic , ""setle"" ) || ! strcmp ( op -> mnemonic , ""setng"" )"	2553:12:67212:67283	434384	0	True				
ANR	434938	OrExpression	"! strcmp ( op -> mnemonic , ""setle"" ) || ! strcmp ( op -> mnemonic , ""setng"" )"		434384	0		||			
ANR	434939	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setle"" )"		434384	0					
ANR	434940	UnaryOperator	!		434384	0					
ANR	434941	CallExpression	"strcmp ( op -> mnemonic , ""setle"" )"		434384	1					
ANR	434942	Callee	strcmp		434384	0					
ANR	434943	Identifier	strcmp		434384	0					
ANR	434944	ArgumentList	op -> mnemonic		434384	1					
ANR	434945	Argument	op -> mnemonic		434384	0					
ANR	434946	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434947	Identifier	op		434384	0					
ANR	434948	Identifier	mnemonic		434384	1					
ANR	434949	Argument	"""setle"""		434384	1					
ANR	434950	PrimaryExpression	"""setle"""		434384	0					
ANR	434951	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setng"" )"		434384	1					
ANR	434952	UnaryOperator	!		434384	0					
ANR	434953	CallExpression	"strcmp ( op -> mnemonic , ""setng"" )"		434384	1					
ANR	434954	Callee	strcmp		434384	0					
ANR	434955	Identifier	strcmp		434384	0					
ANR	434956	ArgumentList	op -> mnemonic		434384	1					
ANR	434957	Argument	op -> mnemonic		434384	0					
ANR	434958	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434959	Identifier	op		434384	0					
ANR	434960	Identifier	mnemonic		434384	1					
ANR	434961	Argument	"""setng"""		434384	1					
ANR	434962	PrimaryExpression	"""setng"""		434384	0					
ANR	434963	CompoundStatement		49:39:1650:1650	434384	1					
ANR	434964	ExpressionStatement	data [ l ++ ] = 0x9e	2555:2:67290:67306	434384	0	True				
ANR	434965	AssignmentExpression	data [ l ++ ] = 0x9e		434384	0		=			
ANR	434966	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	434967	Identifier	data		434384	0					
ANR	434968	PostIncDecOperationExpression	l ++		434384	1					
ANR	434969	Identifier	l		434384	0					
ANR	434970	IncDec	++		434384	1					
ANR	434971	PrimaryExpression	0x9e		434384	1					
ANR	434972	ElseStatement	else		434384	0					
ANR	434973	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnle"" ) || ! strcmp ( op -> mnemonic , ""setg"" ) )"		434384	0					
ANR	434974	Condition	"! strcmp ( op -> mnemonic , ""setnle"" ) || ! strcmp ( op -> mnemonic , ""setg"" )"	2556:12:67320:67391	434384	0	True				
ANR	434975	OrExpression	"! strcmp ( op -> mnemonic , ""setnle"" ) || ! strcmp ( op -> mnemonic , ""setg"" )"		434384	0		||			
ANR	434976	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnle"" )"		434384	0					
ANR	434977	UnaryOperator	!		434384	0					
ANR	434978	CallExpression	"strcmp ( op -> mnemonic , ""setnle"" )"		434384	1					
ANR	434979	Callee	strcmp		434384	0					
ANR	434980	Identifier	strcmp		434384	0					
ANR	434981	ArgumentList	op -> mnemonic		434384	1					
ANR	434982	Argument	op -> mnemonic		434384	0					
ANR	434983	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434984	Identifier	op		434384	0					
ANR	434985	Identifier	mnemonic		434384	1					
ANR	434986	Argument	"""setnle"""		434384	1					
ANR	434987	PrimaryExpression	"""setnle"""		434384	0					
ANR	434988	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setg"" )"		434384	1					
ANR	434989	UnaryOperator	!		434384	0					
ANR	434990	CallExpression	"strcmp ( op -> mnemonic , ""setg"" )"		434384	1					
ANR	434991	Callee	strcmp		434384	0					
ANR	434992	Identifier	strcmp		434384	0					
ANR	434993	ArgumentList	op -> mnemonic		434384	1					
ANR	434994	Argument	op -> mnemonic		434384	0					
ANR	434995	PtrMemberAccess	op -> mnemonic		434384	0					
ANR	434996	Identifier	op		434384	0					
ANR	434997	Identifier	mnemonic		434384	1					
ANR	434998	Argument	"""setg"""		434384	1					
ANR	434999	PrimaryExpression	"""setg"""		434384	0					
ANR	435000	CompoundStatement		52:38:1758:1758	434384	1					
ANR	435001	ExpressionStatement	data [ l ++ ] = 0x9f	2558:2:67398:67414	434384	0	True				
ANR	435002	AssignmentExpression	data [ l ++ ] = 0x9f		434384	0		=			
ANR	435003	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	435004	Identifier	data		434384	0					
ANR	435005	PostIncDecOperationExpression	l ++		434384	1					
ANR	435006	Identifier	l		434384	0					
ANR	435007	IncDec	++		434384	1					
ANR	435008	PrimaryExpression	0x9f		434384	1					
ANR	435009	ElseStatement	else		434384	0					
ANR	435010	CompoundStatement		54:8:1788:1788	434384	0					
ANR	435011	ReturnStatement	return - 1 ;	2560:2:67428:67437	434384	0	True				
ANR	435012	UnaryOperationExpression	- 1		434384	0					
ANR	435013	UnaryOperator	-		434384	0					
ANR	435014	PrimaryExpression	1		434384	1					
ANR	435015	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		434384	6					
ANR	435016	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	2562:5:67447:67481	434384	0	True				
ANR	435017	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		434384	0					
ANR	435018	UnaryOperator	!		434384	0					
ANR	435019	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		434384	1		&			
ANR	435020	MemberAccess	op -> operands [ 0 ] . type		434384	0					
ANR	435021	ArrayIndexing	op -> operands [ 0 ]		434384	0					
ANR	435022	PtrMemberAccess	op -> operands		434384	0					
ANR	435023	Identifier	op		434384	0					
ANR	435024	Identifier	operands		434384	1					
ANR	435025	PrimaryExpression	0		434384	1					
ANR	435026	Identifier	type		434384	1					
ANR	435027	Identifier	OT_MEMORY		434384	1					
ANR	435028	CompoundStatement		57:42:1848:1848	434384	1					
ANR	435029	ExpressionStatement	mod = 3	2563:2:67488:67495	434384	0	True				
ANR	435030	AssignmentExpression	mod = 3		434384	0		=			
ANR	435031	Identifier	mod		434384	0					
ANR	435032	PrimaryExpression	3		434384	1					
ANR	435033	ExpressionStatement	reg = op -> operands [ 0 ] . reg	2564:2:67499:67524	434384	1	True				
ANR	435034	AssignmentExpression	reg = op -> operands [ 0 ] . reg		434384	0		=			
ANR	435035	Identifier	reg		434384	0					
ANR	435036	MemberAccess	op -> operands [ 0 ] . reg		434384	1					
ANR	435037	ArrayIndexing	op -> operands [ 0 ]		434384	0					
ANR	435038	PtrMemberAccess	op -> operands		434384	0					
ANR	435039	Identifier	op		434384	0					
ANR	435040	Identifier	operands		434384	1					
ANR	435041	PrimaryExpression	0		434384	1					
ANR	435042	Identifier	reg		434384	1					
ANR	435043	ExpressionStatement	data [ l ++ ] = mod << 6 | reg	2566:1:67530:67556	434384	7	True				
ANR	435044	AssignmentExpression	data [ l ++ ] = mod << 6 | reg		434384	0		=			
ANR	435045	ArrayIndexing	data [ l ++ ]		434384	0					
ANR	435046	Identifier	data		434384	0					
ANR	435047	PostIncDecOperationExpression	l ++		434384	1					
ANR	435048	Identifier	l		434384	0					
ANR	435049	IncDec	++		434384	1					
ANR	435050	InclusiveOrExpression	mod << 6 | reg		434384	1		|			
ANR	435051	ShiftExpression	mod << 6		434384	0		<<			
ANR	435052	Identifier	mod		434384	0					
ANR	435053	PrimaryExpression	6		434384	1					
ANR	435054	Identifier	reg		434384	1					
ANR	435055	ReturnStatement	return l ;	2567:1:67559:67567	434384	8	True				
ANR	435056	Identifier	l		434384	0					
ANR	435057	ReturnType	static int		434384	1					
ANR	435058	Identifier	opset		434384	2					
ANR	435059	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		434384	3					
ANR	435060	Parameter	RAsm * a	2506:17:65597:65603	434384	0	True				
ANR	435061	ParameterType	RAsm *		434384	0					
ANR	435062	Identifier	a		434384	1					
ANR	435063	Parameter	ut8 * data	2506:26:65606:65614	434384	1	True				
ANR	435064	ParameterType	ut8 *		434384	0					
ANR	435065	Identifier	data		434384	1					
ANR	435066	Parameter	const Opcode * op	2506:37:65617:65632	434384	2	True				
ANR	435067	ParameterType	const Opcode *		434384	0					
ANR	435068	Identifier	op		434384	1					
ANR	435069	CFGEntryNode	ENTRY		434384		True				
ANR	435070	CFGExitNode	EXIT		434384		True				
ANR	435071	Symbol	strcmp		434384						
ANR	435072	Symbol	a		434384						
ANR	435073	Symbol	op		434384						
ANR	435074	Symbol	OT_GPREG		434384						
ANR	435075	Symbol	mod		434384						
ANR	435076	Symbol	data		434384						
ANR	435077	Symbol	* op		434384						
ANR	435078	Symbol	op -> mnemonic		434384						
ANR	435079	Symbol	* * op -> operands		434384						
ANR	435080	Symbol	l		434384						
ANR	435081	Symbol	* * op		434384						
ANR	435082	Symbol	* op -> operands		434384						
ANR	435083	Symbol	reg		434384						
ANR	435084	Symbol	* op -> operands [ 0 ] . regs		434384						
ANR	435085	Symbol	op -> operands [ 0 ] . type		434384						
ANR	435086	Symbol	* * * op		434384						
ANR	435087	Symbol	op -> operands [ 0 ] . reg		434384						
ANR	435088	Symbol	op -> operands		434384						
ANR	435089	Symbol	* data		434384						
ANR	435090	Symbol	OT_MEMORY		434384						
ANR	435091	Symbol	op -> operands [ 0 ] . regs		434384						
ANR	435092	Symbol	OT_BYTE		434384						
ANR	435093	Function	optest	2570:0:67572:69168							
ANR	435094	FunctionDef	"optest (RAsm * a , ut8 * data , const Opcode * op)"		435093	0					
ANR	435095	CompoundStatement		2570:56:67628:69168	435093	0					
ANR	435096	ExpressionStatement	is_valid_registers ( op )	2571:1:67631:67654	435093	0	True				
ANR	435097	CallExpression	is_valid_registers ( op )		435093	0					
ANR	435098	Callee	is_valid_registers		435093	0					
ANR	435099	Identifier	is_valid_registers		435093	0					
ANR	435100	ArgumentList	op		435093	1					
ANR	435101	Argument	op		435093	0					
ANR	435102	Identifier	op		435093	0					
ANR	435103	IdentifierDeclStatement	int l = 0 ;	2572:1:67657:67666	435093	1	True				
ANR	435104	IdentifierDecl	l = 0		435093	0					
ANR	435105	IdentifierDeclType	int		435093	0					
ANR	435106	Identifier	l		435093	1					
ANR	435107	AssignmentExpression	l = 0		435093	2		=			
ANR	435108	Identifier	l		435093	0					
ANR	435109	PrimaryExpression	0		435093	1					
ANR	435110	IfStatement	if ( ! op -> operands [ 0 ] . type || ! op -> operands [ 1 ] . type )		435093	2					
ANR	435111	Condition	! op -> operands [ 0 ] . type || ! op -> operands [ 1 ] . type	2573:5:67673:67718	435093	0	True				
ANR	435112	OrExpression	! op -> operands [ 0 ] . type || ! op -> operands [ 1 ] . type		435093	0		||			
ANR	435113	UnaryOperationExpression	! op -> operands [ 0 ] . type		435093	0					
ANR	435114	UnaryOperator	!		435093	0					
ANR	435115	MemberAccess	op -> operands [ 0 ] . type		435093	1					
ANR	435116	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435117	PtrMemberAccess	op -> operands		435093	0					
ANR	435118	Identifier	op		435093	0					
ANR	435119	Identifier	operands		435093	1					
ANR	435120	PrimaryExpression	0		435093	1					
ANR	435121	Identifier	type		435093	1					
ANR	435122	UnaryOperationExpression	! op -> operands [ 1 ] . type		435093	1					
ANR	435123	UnaryOperator	!		435093	0					
ANR	435124	MemberAccess	op -> operands [ 1 ] . type		435093	1					
ANR	435125	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435126	PtrMemberAccess	op -> operands		435093	0					
ANR	435127	Identifier	op		435093	0					
ANR	435128	Identifier	operands		435093	1					
ANR	435129	PrimaryExpression	1		435093	1					
ANR	435130	Identifier	type		435093	1					
ANR	435131	CompoundStatement		4:53:92:92	435093	1					
ANR	435132	ExpressionStatement	"eprintf ( ""Error: Invalid operands\\n"" )"	2574:2:67725:67762	435093	0	True				
ANR	435133	CallExpression	"eprintf ( ""Error: Invalid operands\\n"" )"		435093	0					
ANR	435134	Callee	eprintf		435093	0					
ANR	435135	Identifier	eprintf		435093	0					
ANR	435136	ArgumentList	"""Error: Invalid operands\\n"""		435093	1					
ANR	435137	Argument	"""Error: Invalid operands\\n"""		435093	0					
ANR	435138	PrimaryExpression	"""Error: Invalid operands\\n"""		435093	0					
ANR	435139	ReturnStatement	return - 1 ;	2575:2:67766:67775	435093	1	True				
ANR	435140	UnaryOperationExpression	- 1		435093	0					
ANR	435141	UnaryOperator	-		435093	0					
ANR	435142	PrimaryExpression	1		435093	1					
ANR	435143	IfStatement	if ( a -> bits == 64 )		435093	3					
ANR	435144	Condition	a -> bits == 64	2577:5:67785:67797	435093	0	True				
ANR	435145	EqualityExpression	a -> bits == 64		435093	0		==			
ANR	435146	PtrMemberAccess	a -> bits		435093	0					
ANR	435147	Identifier	a		435093	0					
ANR	435148	Identifier	bits		435093	1					
ANR	435149	PrimaryExpression	64		435093	1					
ANR	435150	CompoundStatement		8:20:171:171	435093	1					
ANR	435151	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY )		435093	0					
ANR	435152	Condition	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY	2578:6:67808:67878	435093	0	True				
ANR	435153	OrExpression	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY		435093	0		||			
ANR	435154	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		435093	0		&			
ANR	435155	MemberAccess	op -> operands [ 0 ] . type		435093	0					
ANR	435156	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435157	PtrMemberAccess	op -> operands		435093	0					
ANR	435158	Identifier	op		435093	0					
ANR	435159	Identifier	operands		435093	1					
ANR	435160	PrimaryExpression	0		435093	1					
ANR	435161	Identifier	type		435093	1					
ANR	435162	Identifier	OT_MEMORY		435093	1					
ANR	435163	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		435093	1		&			
ANR	435164	MemberAccess	op -> operands [ 1 ] . type		435093	0					
ANR	435165	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435166	PtrMemberAccess	op -> operands		435093	0					
ANR	435167	Identifier	op		435093	0					
ANR	435168	Identifier	operands		435093	1					
ANR	435169	PrimaryExpression	1		435093	1					
ANR	435170	Identifier	type		435093	1					
ANR	435171	Identifier	OT_MEMORY		435093	1					
ANR	435172	CompoundStatement		10:37:252:252	435093	1					
ANR	435173	ExpressionStatement	data [ l ++ ] = 0x67	2580:3:67886:67902	435093	0	True				
ANR	435174	AssignmentExpression	data [ l ++ ] = 0x67		435093	0		=			
ANR	435175	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435176	Identifier	data		435093	0					
ANR	435177	PostIncDecOperationExpression	l ++		435093	1					
ANR	435178	Identifier	l		435093	0					
ANR	435179	IncDec	++		435093	1					
ANR	435180	PrimaryExpression	0x67		435093	1					
ANR	435181	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD )		435093	1					
ANR	435182	Condition	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD	2582:6:67914:67982	435093	0	True				
ANR	435183	AndExpression	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD		435093	0		&&			
ANR	435184	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		435093	0		&			
ANR	435185	MemberAccess	op -> operands [ 0 ] . type		435093	0					
ANR	435186	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435187	PtrMemberAccess	op -> operands		435093	0					
ANR	435188	Identifier	op		435093	0					
ANR	435189	Identifier	operands		435093	1					
ANR	435190	PrimaryExpression	0		435093	1					
ANR	435191	Identifier	type		435093	1					
ANR	435192	Identifier	OT_QWORD		435093	1					
ANR	435193	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		435093	1		&			
ANR	435194	MemberAccess	op -> operands [ 1 ] . type		435093	0					
ANR	435195	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435196	PtrMemberAccess	op -> operands		435093	0					
ANR	435197	Identifier	op		435093	0					
ANR	435198	Identifier	operands		435093	1					
ANR	435199	PrimaryExpression	1		435093	1					
ANR	435200	Identifier	type		435093	1					
ANR	435201	Identifier	OT_QWORD		435093	1					
ANR	435202	CompoundStatement		14:36:356:356	435093	1					
ANR	435203	IfStatement	if ( op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended )		435093	0					
ANR	435204	Condition	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended	2584:7:67994:68052	435093	0	True				
ANR	435205	AndExpression	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended		435093	0		&&			
ANR	435206	MemberAccess	op -> operands [ 0 ] . extended		435093	0					
ANR	435207	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435208	PtrMemberAccess	op -> operands		435093	0					
ANR	435209	Identifier	op		435093	0					
ANR	435210	Identifier	operands		435093	1					
ANR	435211	PrimaryExpression	0		435093	1					
ANR	435212	Identifier	extended		435093	1					
ANR	435213	MemberAccess	op -> operands [ 1 ] . extended		435093	1					
ANR	435214	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435215	PtrMemberAccess	op -> operands		435093	0					
ANR	435216	Identifier	op		435093	0					
ANR	435217	Identifier	operands		435093	1					
ANR	435218	PrimaryExpression	1		435093	1					
ANR	435219	Identifier	extended		435093	1					
ANR	435220	CompoundStatement		16:33:426:426	435093	1					
ANR	435221	ExpressionStatement	data [ l ++ ] = 0x4d	2586:5:68062:68078	435093	0	True				
ANR	435222	AssignmentExpression	data [ l ++ ] = 0x4d		435093	0		=			
ANR	435223	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435224	Identifier	data		435093	0					
ANR	435225	PostIncDecOperationExpression	l ++		435093	1					
ANR	435226	Identifier	l		435093	0					
ANR	435227	IncDec	++		435093	1					
ANR	435228	PrimaryExpression	0x4d		435093	1					
ANR	435229	ElseStatement	else		435093	0					
ANR	435230	CompoundStatement		18:11:462:462	435093	0					
ANR	435231	ExpressionStatement	data [ l ++ ] = 0x48	2588:5:68098:68114	435093	0	True				
ANR	435232	AssignmentExpression	data [ l ++ ] = 0x48		435093	0		=			
ANR	435233	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435234	Identifier	data		435093	0					
ANR	435235	PostIncDecOperationExpression	l ++		435093	1					
ANR	435236	Identifier	l		435093	0					
ANR	435237	IncDec	++		435093	1					
ANR	435238	PrimaryExpression	0x48		435093	1					
ANR	435239	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		435093	4					
ANR	435240	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	2593:5:68135:68168	435093	0	True				
ANR	435241	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		435093	0		&			
ANR	435242	MemberAccess	op -> operands [ 1 ] . type		435093	0					
ANR	435243	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435244	PtrMemberAccess	op -> operands		435093	0					
ANR	435245	Identifier	op		435093	0					
ANR	435246	Identifier	operands		435093	1					
ANR	435247	PrimaryExpression	1		435093	1					
ANR	435248	Identifier	type		435093	1					
ANR	435249	Identifier	OT_CONSTANT		435093	1					
ANR	435250	CompoundStatement		24:41:542:542	435093	1					
ANR	435251	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		435093	0					
ANR	435252	Condition	op -> operands [ 0 ] . type & OT_BYTE	2594:6:68179:68208	435093	0	True				
ANR	435253	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		435093	0		&			
ANR	435254	MemberAccess	op -> operands [ 0 ] . type		435093	0					
ANR	435255	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435256	PtrMemberAccess	op -> operands		435093	0					
ANR	435257	Identifier	op		435093	0					
ANR	435258	Identifier	operands		435093	1					
ANR	435259	PrimaryExpression	0		435093	1					
ANR	435260	Identifier	type		435093	1					
ANR	435261	Identifier	OT_BYTE		435093	1					
ANR	435262	CompoundStatement		25:38:582:582	435093	1					
ANR	435263	ExpressionStatement	data [ l ++ ] = 0xf6	2595:3:68216:68232	435093	0	True				
ANR	435264	AssignmentExpression	data [ l ++ ] = 0xf6		435093	0		=			
ANR	435265	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435266	Identifier	data		435093	0					
ANR	435267	PostIncDecOperationExpression	l ++		435093	1					
ANR	435268	Identifier	l		435093	0					
ANR	435269	IncDec	++		435093	1					
ANR	435270	PrimaryExpression	0xf6		435093	1					
ANR	435271	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]	2596:3:68237:68272	435093	1	True				
ANR	435272	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]		435093	0		=			
ANR	435273	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435274	Identifier	data		435093	0					
ANR	435275	PostIncDecOperationExpression	l ++		435093	1					
ANR	435276	Identifier	l		435093	0					
ANR	435277	IncDec	++		435093	1					
ANR	435278	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		435093	1					
ANR	435279	MemberAccess	op -> operands [ 0 ] . regs		435093	0					
ANR	435280	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435281	PtrMemberAccess	op -> operands		435093	0					
ANR	435282	Identifier	op		435093	0					
ANR	435283	Identifier	operands		435093	1					
ANR	435284	PrimaryExpression	0		435093	1					
ANR	435285	Identifier	regs		435093	1					
ANR	435286	PrimaryExpression	0		435093	1					
ANR	435287	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate	2597:3:68277:68314	435093	2	True				
ANR	435288	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate		435093	0		=			
ANR	435289	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435290	Identifier	data		435093	0					
ANR	435291	PostIncDecOperationExpression	l ++		435093	1					
ANR	435292	Identifier	l		435093	0					
ANR	435293	IncDec	++		435093	1					
ANR	435294	MemberAccess	op -> operands [ 1 ] . immediate		435093	1					
ANR	435295	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435296	PtrMemberAccess	op -> operands		435093	0					
ANR	435297	Identifier	op		435093	0					
ANR	435298	Identifier	operands		435093	1					
ANR	435299	PrimaryExpression	1		435093	1					
ANR	435300	Identifier	immediate		435093	1					
ANR	435301	ReturnStatement	return l ;	2598:3:68319:68327	435093	3	True				
ANR	435302	Identifier	l		435093	0					
ANR	435303	ExpressionStatement	data [ l ++ ] = 0xf7	2600:2:68335:68351	435093	1	True				
ANR	435304	AssignmentExpression	data [ l ++ ] = 0xf7		435093	0		=			
ANR	435305	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435306	Identifier	data		435093	0					
ANR	435307	PostIncDecOperationExpression	l ++		435093	1					
ANR	435308	Identifier	l		435093	0					
ANR	435309	IncDec	++		435093	1					
ANR	435310	PrimaryExpression	0xf7		435093	1					
ANR	435311	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		435093	2					
ANR	435312	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2601:6:68359:68390	435093	0	True				
ANR	435313	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		435093	0		&			
ANR	435314	MemberAccess	op -> operands [ 0 ] . type		435093	0					
ANR	435315	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435316	PtrMemberAccess	op -> operands		435093	0					
ANR	435317	Identifier	op		435093	0					
ANR	435318	Identifier	operands		435093	1					
ANR	435319	PrimaryExpression	0		435093	1					
ANR	435320	Identifier	type		435093	1					
ANR	435321	Identifier	OT_MEMORY		435093	1					
ANR	435322	CompoundStatement		32:40:764:764	435093	1					
ANR	435323	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2602:3:68398:68440	435093	0	True				
ANR	435324	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		435093	0		=			
ANR	435325	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435326	Identifier	data		435093	0					
ANR	435327	PostIncDecOperationExpression	l ++		435093	1					
ANR	435328	Identifier	l		435093	0					
ANR	435329	IncDec	++		435093	1					
ANR	435330	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		435093	1		|			
ANR	435331	PrimaryExpression	0x00		435093	0					
ANR	435332	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		435093	1					
ANR	435333	MemberAccess	op -> operands [ 0 ] . regs		435093	0					
ANR	435334	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435335	PtrMemberAccess	op -> operands		435093	0					
ANR	435336	Identifier	op		435093	0					
ANR	435337	Identifier	operands		435093	1					
ANR	435338	PrimaryExpression	0		435093	1					
ANR	435339	Identifier	regs		435093	1					
ANR	435340	PrimaryExpression	0		435093	1					
ANR	435341	ElseStatement	else		435093	0					
ANR	435342	CompoundStatement		34:9:822:822	435093	0					
ANR	435343	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2604:3:68456:68494	435093	0	True				
ANR	435344	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		435093	0		=			
ANR	435345	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435346	Identifier	data		435093	0					
ANR	435347	PostIncDecOperationExpression	l ++		435093	1					
ANR	435348	Identifier	l		435093	0					
ANR	435349	IncDec	++		435093	1					
ANR	435350	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		435093	1		|			
ANR	435351	PrimaryExpression	0xc0		435093	0					
ANR	435352	MemberAccess	op -> operands [ 0 ] . reg		435093	1					
ANR	435353	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435354	PtrMemberAccess	op -> operands		435093	0					
ANR	435355	Identifier	op		435093	0					
ANR	435356	Identifier	operands		435093	1					
ANR	435357	PrimaryExpression	0		435093	1					
ANR	435358	Identifier	reg		435093	1					
ANR	435359	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 0	2606:2:68502:68544	435093	3	True				
ANR	435360	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 0		435093	0		=			
ANR	435361	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435362	Identifier	data		435093	0					
ANR	435363	PostIncDecOperationExpression	l ++		435093	1					
ANR	435364	Identifier	l		435093	0					
ANR	435365	IncDec	++		435093	1					
ANR	435366	ShiftExpression	op -> operands [ 1 ] . immediate >> 0		435093	1		>>			
ANR	435367	MemberAccess	op -> operands [ 1 ] . immediate		435093	0					
ANR	435368	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435369	PtrMemberAccess	op -> operands		435093	0					
ANR	435370	Identifier	op		435093	0					
ANR	435371	Identifier	operands		435093	1					
ANR	435372	PrimaryExpression	1		435093	1					
ANR	435373	Identifier	immediate		435093	1					
ANR	435374	PrimaryExpression	0		435093	1					
ANR	435375	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 8	2607:2:68548:68590	435093	4	True				
ANR	435376	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 8		435093	0		=			
ANR	435377	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435378	Identifier	data		435093	0					
ANR	435379	PostIncDecOperationExpression	l ++		435093	1					
ANR	435380	Identifier	l		435093	0					
ANR	435381	IncDec	++		435093	1					
ANR	435382	ShiftExpression	op -> operands [ 1 ] . immediate >> 8		435093	1		>>			
ANR	435383	MemberAccess	op -> operands [ 1 ] . immediate		435093	0					
ANR	435384	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435385	PtrMemberAccess	op -> operands		435093	0					
ANR	435386	Identifier	op		435093	0					
ANR	435387	Identifier	operands		435093	1					
ANR	435388	PrimaryExpression	1		435093	1					
ANR	435389	Identifier	immediate		435093	1					
ANR	435390	PrimaryExpression	8		435093	1					
ANR	435391	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 16	2608:2:68594:68637	435093	5	True				
ANR	435392	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 16		435093	0		=			
ANR	435393	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435394	Identifier	data		435093	0					
ANR	435395	PostIncDecOperationExpression	l ++		435093	1					
ANR	435396	Identifier	l		435093	0					
ANR	435397	IncDec	++		435093	1					
ANR	435398	ShiftExpression	op -> operands [ 1 ] . immediate >> 16		435093	1		>>			
ANR	435399	MemberAccess	op -> operands [ 1 ] . immediate		435093	0					
ANR	435400	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435401	PtrMemberAccess	op -> operands		435093	0					
ANR	435402	Identifier	op		435093	0					
ANR	435403	Identifier	operands		435093	1					
ANR	435404	PrimaryExpression	1		435093	1					
ANR	435405	Identifier	immediate		435093	1					
ANR	435406	PrimaryExpression	16		435093	1					
ANR	435407	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 24	2609:2:68641:68684	435093	6	True				
ANR	435408	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 24		435093	0		=			
ANR	435409	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435410	Identifier	data		435093	0					
ANR	435411	PostIncDecOperationExpression	l ++		435093	1					
ANR	435412	Identifier	l		435093	0					
ANR	435413	IncDec	++		435093	1					
ANR	435414	ShiftExpression	op -> operands [ 1 ] . immediate >> 24		435093	1		>>			
ANR	435415	MemberAccess	op -> operands [ 1 ] . immediate		435093	0					
ANR	435416	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435417	PtrMemberAccess	op -> operands		435093	0					
ANR	435418	Identifier	op		435093	0					
ANR	435419	Identifier	operands		435093	1					
ANR	435420	PrimaryExpression	1		435093	1					
ANR	435421	Identifier	immediate		435093	1					
ANR	435422	PrimaryExpression	24		435093	1					
ANR	435423	ReturnStatement	return l ;	2610:2:68688:68696	435093	7	True				
ANR	435424	Identifier	l		435093	0					
ANR	435425	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE || op -> operands [ 1 ] . type & OT_BYTE )		435093	5					
ANR	435426	Condition	op -> operands [ 0 ] . type & OT_BYTE || op -> operands [ 1 ] . type & OT_BYTE	2612:5:68706:68771	435093	0	True				
ANR	435427	OrExpression	op -> operands [ 0 ] . type & OT_BYTE || op -> operands [ 1 ] . type & OT_BYTE		435093	0		||			
ANR	435428	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		435093	0		&			
ANR	435429	MemberAccess	op -> operands [ 0 ] . type		435093	0					
ANR	435430	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435431	PtrMemberAccess	op -> operands		435093	0					
ANR	435432	Identifier	op		435093	0					
ANR	435433	Identifier	operands		435093	1					
ANR	435434	PrimaryExpression	0		435093	1					
ANR	435435	Identifier	type		435093	1					
ANR	435436	Identifier	OT_BYTE		435093	1					
ANR	435437	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		435093	1		&			
ANR	435438	MemberAccess	op -> operands [ 1 ] . type		435093	0					
ANR	435439	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435440	PtrMemberAccess	op -> operands		435093	0					
ANR	435441	Identifier	op		435093	0					
ANR	435442	Identifier	operands		435093	1					
ANR	435443	PrimaryExpression	1		435093	1					
ANR	435444	Identifier	type		435093	1					
ANR	435445	Identifier	OT_BYTE		435093	1					
ANR	435446	CompoundStatement		44:34:1145:1145	435093	1					
ANR	435447	ExpressionStatement	data [ l ++ ] = 0x84	2614:2:68778:68794	435093	0	True				
ANR	435448	AssignmentExpression	data [ l ++ ] = 0x84		435093	0		=			
ANR	435449	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435450	Identifier	data		435093	0					
ANR	435451	PostIncDecOperationExpression	l ++		435093	1					
ANR	435452	Identifier	l		435093	0					
ANR	435453	IncDec	++		435093	1					
ANR	435454	PrimaryExpression	0x84		435093	1					
ANR	435455	ElseStatement	else		435093	0					
ANR	435456	CompoundStatement		46:8:1175:1175	435093	0					
ANR	435457	ExpressionStatement	data [ l ++ ] = 0x85	2616:2:68808:68824	435093	0	True				
ANR	435458	AssignmentExpression	data [ l ++ ] = 0x85		435093	0		=			
ANR	435459	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435460	Identifier	data		435093	0					
ANR	435461	PostIncDecOperationExpression	l ++		435093	1					
ANR	435462	Identifier	l		435093	0					
ANR	435463	IncDec	++		435093	1					
ANR	435464	PrimaryExpression	0x85		435093	1					
ANR	435465	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		435093	6					
ANR	435466	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2618:5:68834:68865	435093	0	True				
ANR	435467	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		435093	0		&			
ANR	435468	MemberAccess	op -> operands [ 0 ] . type		435093	0					
ANR	435469	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435470	PtrMemberAccess	op -> operands		435093	0					
ANR	435471	Identifier	op		435093	0					
ANR	435472	Identifier	operands		435093	1					
ANR	435473	PrimaryExpression	0		435093	1					
ANR	435474	Identifier	type		435093	1					
ANR	435475	Identifier	OT_MEMORY		435093	1					
ANR	435476	CompoundStatement		49:39:1239:1239	435093	1					
ANR	435477	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]	2619:2:68872:68941	435093	0	True				
ANR	435478	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		435093	0		=			
ANR	435479	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435480	Identifier	data		435093	0					
ANR	435481	PostIncDecOperationExpression	l ++		435093	1					
ANR	435482	Identifier	l		435093	0					
ANR	435483	IncDec	++		435093	1					
ANR	435484	InclusiveOrExpression	0x00 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		435093	1		|			
ANR	435485	PrimaryExpression	0x00		435093	0					
ANR	435486	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		435093	1		|			
ANR	435487	ShiftExpression	op -> operands [ 1 ] . reg << 3		435093	0		<<			
ANR	435488	MemberAccess	op -> operands [ 1 ] . reg		435093	0					
ANR	435489	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435490	PtrMemberAccess	op -> operands		435093	0					
ANR	435491	Identifier	op		435093	0					
ANR	435492	Identifier	operands		435093	1					
ANR	435493	PrimaryExpression	1		435093	1					
ANR	435494	Identifier	reg		435093	1					
ANR	435495	PrimaryExpression	3		435093	1					
ANR	435496	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		435093	1					
ANR	435497	MemberAccess	op -> operands [ 0 ] . regs		435093	0					
ANR	435498	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435499	PtrMemberAccess	op -> operands		435093	0					
ANR	435500	Identifier	op		435093	0					
ANR	435501	Identifier	operands		435093	1					
ANR	435502	PrimaryExpression	0		435093	1					
ANR	435503	Identifier	regs		435093	1					
ANR	435504	PrimaryExpression	0		435093	1					
ANR	435505	ElseStatement	else		435093	0					
ANR	435506	CompoundStatement		51:8:1322:1322	435093	0					
ANR	435507	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		435093	0					
ANR	435508	Condition	op -> operands [ 1 ] . type & OT_MEMORY	2621:6:68959:68990	435093	0	True				
ANR	435509	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		435093	0		&			
ANR	435510	MemberAccess	op -> operands [ 1 ] . type		435093	0					
ANR	435511	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435512	PtrMemberAccess	op -> operands		435093	0					
ANR	435513	Identifier	op		435093	0					
ANR	435514	Identifier	operands		435093	1					
ANR	435515	PrimaryExpression	1		435093	1					
ANR	435516	Identifier	type		435093	1					
ANR	435517	Identifier	OT_MEMORY		435093	1					
ANR	435518	CompoundStatement		52:40:1364:1364	435093	1					
ANR	435519	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	2622:3:68998:69067	435093	0	True				
ANR	435520	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		435093	0		=			
ANR	435521	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435522	Identifier	data		435093	0					
ANR	435523	PostIncDecOperationExpression	l ++		435093	1					
ANR	435524	Identifier	l		435093	0					
ANR	435525	IncDec	++		435093	1					
ANR	435526	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		435093	1		|			
ANR	435527	PrimaryExpression	0x00		435093	0					
ANR	435528	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		435093	1		|			
ANR	435529	ShiftExpression	op -> operands [ 0 ] . reg << 3		435093	0		<<			
ANR	435530	MemberAccess	op -> operands [ 0 ] . reg		435093	0					
ANR	435531	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435532	PtrMemberAccess	op -> operands		435093	0					
ANR	435533	Identifier	op		435093	0					
ANR	435534	Identifier	operands		435093	1					
ANR	435535	PrimaryExpression	0		435093	1					
ANR	435536	Identifier	reg		435093	1					
ANR	435537	PrimaryExpression	3		435093	1					
ANR	435538	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		435093	1					
ANR	435539	MemberAccess	op -> operands [ 1 ] . regs		435093	0					
ANR	435540	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435541	PtrMemberAccess	op -> operands		435093	0					
ANR	435542	Identifier	op		435093	0					
ANR	435543	Identifier	operands		435093	1					
ANR	435544	PrimaryExpression	1		435093	1					
ANR	435545	Identifier	regs		435093	1					
ANR	435546	PrimaryExpression	0		435093	1					
ANR	435547	ElseStatement	else		435093	0					
ANR	435548	CompoundStatement		54:9:1449:1449	435093	0					
ANR	435549	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg	2624:3:69083:69148	435093	0	True				
ANR	435550	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		435093	0		=			
ANR	435551	ArrayIndexing	data [ l ++ ]		435093	0					
ANR	435552	Identifier	data		435093	0					
ANR	435553	PostIncDecOperationExpression	l ++		435093	1					
ANR	435554	Identifier	l		435093	0					
ANR	435555	IncDec	++		435093	1					
ANR	435556	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		435093	1		|			
ANR	435557	PrimaryExpression	0xc0		435093	0					
ANR	435558	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		435093	1		|			
ANR	435559	ShiftExpression	op -> operands [ 1 ] . reg << 3		435093	0		<<			
ANR	435560	MemberAccess	op -> operands [ 1 ] . reg		435093	0					
ANR	435561	ArrayIndexing	op -> operands [ 1 ]		435093	0					
ANR	435562	PtrMemberAccess	op -> operands		435093	0					
ANR	435563	Identifier	op		435093	0					
ANR	435564	Identifier	operands		435093	1					
ANR	435565	PrimaryExpression	1		435093	1					
ANR	435566	Identifier	reg		435093	1					
ANR	435567	PrimaryExpression	3		435093	1					
ANR	435568	MemberAccess	op -> operands [ 0 ] . reg		435093	1					
ANR	435569	ArrayIndexing	op -> operands [ 0 ]		435093	0					
ANR	435570	PtrMemberAccess	op -> operands		435093	0					
ANR	435571	Identifier	op		435093	0					
ANR	435572	Identifier	operands		435093	1					
ANR	435573	PrimaryExpression	0		435093	1					
ANR	435574	Identifier	reg		435093	1					
ANR	435575	ReturnStatement	return l ;	2627:1:69158:69166	435093	7	True				
ANR	435576	Identifier	l		435093	0					
ANR	435577	ReturnType	static int		435093	1					
ANR	435578	Identifier	optest		435093	2					
ANR	435579	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		435093	3					
ANR	435580	Parameter	RAsm * a	2570:18:67590:67596	435093	0	True				
ANR	435581	ParameterType	RAsm *		435093	0					
ANR	435582	Identifier	a		435093	1					
ANR	435583	Parameter	ut8 * data	2570:27:67599:67607	435093	1	True				
ANR	435584	ParameterType	ut8 *		435093	0					
ANR	435585	Identifier	data		435093	1					
ANR	435586	Parameter	const Opcode * op	2570:38:67610:67625	435093	2	True				
ANR	435587	ParameterType	const Opcode *		435093	0					
ANR	435588	Identifier	op		435093	1					
ANR	435589	CFGEntryNode	ENTRY		435093		True				
ANR	435590	CFGExitNode	EXIT		435093		True				
ANR	435591	Symbol	OT_QWORD		435093						
ANR	435592	Symbol	data		435093						
ANR	435593	Symbol	* op		435093						
ANR	435594	Symbol	op -> operands [ 1 ] . immediate		435093						
ANR	435595	Symbol	op -> operands [ 1 ] . extended		435093						
ANR	435596	Symbol	* * op		435093						
ANR	435597	Symbol	op -> operands [ 0 ] . extended		435093						
ANR	435598	Symbol	* op -> operands [ 1 ] . regs		435093						
ANR	435599	Symbol	* op -> operands		435093						
ANR	435600	Symbol	op -> operands [ 1 ] . regs		435093						
ANR	435601	Symbol	op -> operands [ 0 ] . type		435093						
ANR	435602	Symbol	op -> operands [ 0 ] . reg		435093						
ANR	435603	Symbol	OT_MEMORY		435093						
ANR	435604	Symbol	a -> bits		435093						
ANR	435605	Symbol	OT_BYTE		435093						
ANR	435606	Symbol	a		435093						
ANR	435607	Symbol	op		435093						
ANR	435608	Symbol	OT_CONSTANT		435093						
ANR	435609	Symbol	op -> operands [ 1 ] . reg		435093						
ANR	435610	Symbol	* a		435093						
ANR	435611	Symbol	* * op -> operands		435093						
ANR	435612	Symbol	l		435093						
ANR	435613	Symbol	op -> operands [ 1 ] . type		435093						
ANR	435614	Symbol	* op -> operands [ 0 ] . regs		435093						
ANR	435615	Symbol	* * * op		435093						
ANR	435616	Symbol	op -> operands		435093						
ANR	435617	Symbol	* data		435093						
ANR	435618	Symbol	op -> operands [ 0 ] . regs		435093						
ANR	435619	Function	opxchg	2630:0:69171:70604							
ANR	435620	FunctionDef	"opxchg (RAsm * a , ut8 * data , const Opcode * op)"		435619	0					
ANR	435621	CompoundStatement		2630:56:69227:70604	435619	0					
ANR	435622	ExpressionStatement	is_valid_registers ( op )	2631:1:69230:69253	435619	0	True				
ANR	435623	CallExpression	is_valid_registers ( op )		435619	0					
ANR	435624	Callee	is_valid_registers		435619	0					
ANR	435625	Identifier	is_valid_registers		435619	0					
ANR	435626	ArgumentList	op		435619	1					
ANR	435627	Argument	op		435619	0					
ANR	435628	Identifier	op		435619	0					
ANR	435629	IdentifierDeclStatement	int l = 0 ;	2632:1:69256:69265	435619	1	True				
ANR	435630	IdentifierDecl	l = 0		435619	0					
ANR	435631	IdentifierDeclType	int		435619	0					
ANR	435632	Identifier	l		435619	1					
ANR	435633	AssignmentExpression	l = 0		435619	2		=			
ANR	435634	Identifier	l		435619	0					
ANR	435635	PrimaryExpression	0		435619	1					
ANR	435636	IdentifierDeclStatement	int mod_byte = 0 ;	2633:1:69268:69284	435619	2	True				
ANR	435637	IdentifierDecl	mod_byte = 0		435619	0					
ANR	435638	IdentifierDeclType	int		435619	0					
ANR	435639	Identifier	mod_byte		435619	1					
ANR	435640	AssignmentExpression	mod_byte = 0		435619	2		=			
ANR	435641	Identifier	mod_byte		435619	0					
ANR	435642	PrimaryExpression	0		435619	1					
ANR	435643	IdentifierDeclStatement	int reg = 0 ;	2634:1:69287:69298	435619	3	True				
ANR	435644	IdentifierDecl	reg = 0		435619	0					
ANR	435645	IdentifierDeclType	int		435619	0					
ANR	435646	Identifier	reg		435619	1					
ANR	435647	AssignmentExpression	reg = 0		435619	2		=			
ANR	435648	Identifier	reg		435619	0					
ANR	435649	PrimaryExpression	0		435619	1					
ANR	435650	IdentifierDeclStatement	int rm = 0 ;	2635:1:69301:69311	435619	4	True				
ANR	435651	IdentifierDecl	rm = 0		435619	0					
ANR	435652	IdentifierDeclType	int		435619	0					
ANR	435653	Identifier	rm		435619	1					
ANR	435654	AssignmentExpression	rm = 0		435619	2		=			
ANR	435655	Identifier	rm		435619	0					
ANR	435656	PrimaryExpression	0		435619	1					
ANR	435657	IdentifierDeclStatement	st32 offset = 0 ;	2636:1:69314:69329	435619	5	True				
ANR	435658	IdentifierDecl	offset = 0		435619	0					
ANR	435659	IdentifierDeclType	st32		435619	0					
ANR	435660	Identifier	offset		435619	1					
ANR	435661	AssignmentExpression	offset = 0		435619	2		=			
ANR	435662	Identifier	offset		435619	0					
ANR	435663	PrimaryExpression	0		435619	1					
ANR	435664	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY )		435619	6					
ANR	435665	Condition	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY	2638:5:69337:69404	435619	0	True				
ANR	435666	OrExpression	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY		435619	0		||			
ANR	435667	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		435619	0		&			
ANR	435668	MemberAccess	op -> operands [ 0 ] . type		435619	0					
ANR	435669	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435670	PtrMemberAccess	op -> operands		435619	0					
ANR	435671	Identifier	op		435619	0					
ANR	435672	Identifier	operands		435619	1					
ANR	435673	PrimaryExpression	0		435619	1					
ANR	435674	Identifier	type		435619	1					
ANR	435675	Identifier	OT_MEMORY		435619	1					
ANR	435676	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		435619	1		&			
ANR	435677	MemberAccess	op -> operands [ 1 ] . type		435619	0					
ANR	435678	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435679	PtrMemberAccess	op -> operands		435619	0					
ANR	435680	Identifier	op		435619	0					
ANR	435681	Identifier	operands		435619	1					
ANR	435682	PrimaryExpression	1		435619	1					
ANR	435683	Identifier	type		435619	1					
ANR	435684	Identifier	OT_MEMORY		435619	1					
ANR	435685	CompoundStatement		9:75:179:179	435619	1					
ANR	435686	ExpressionStatement	data [ l ++ ] = 0x87	2639:2:69411:69427	435619	0	True				
ANR	435687	AssignmentExpression	data [ l ++ ] = 0x87		435619	0		=			
ANR	435688	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	435689	Identifier	data		435619	0					
ANR	435690	PostIncDecOperationExpression	l ++		435619	1					
ANR	435691	Identifier	l		435619	0					
ANR	435692	IncDec	++		435619	1					
ANR	435693	PrimaryExpression	0x87		435619	1					
ANR	435694	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		435619	1					
ANR	435695	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2640:6:69435:69466	435619	0	True				
ANR	435696	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		435619	0		&			
ANR	435697	MemberAccess	op -> operands [ 0 ] . type		435619	0					
ANR	435698	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435699	PtrMemberAccess	op -> operands		435619	0					
ANR	435700	Identifier	op		435619	0					
ANR	435701	Identifier	operands		435619	1					
ANR	435702	PrimaryExpression	0		435619	1					
ANR	435703	Identifier	type		435619	1					
ANR	435704	Identifier	OT_MEMORY		435619	1					
ANR	435705	CompoundStatement		11:40:241:241	435619	1					
ANR	435706	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	2641:3:69474:69502	435619	0	True				
ANR	435707	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		435619	0		=			
ANR	435708	Identifier	rm		435619	0					
ANR	435709	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		435619	1					
ANR	435710	MemberAccess	op -> operands [ 0 ] . regs		435619	0					
ANR	435711	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435712	PtrMemberAccess	op -> operands		435619	0					
ANR	435713	Identifier	op		435619	0					
ANR	435714	Identifier	operands		435619	1					
ANR	435715	PrimaryExpression	0		435619	1					
ANR	435716	Identifier	regs		435619	1					
ANR	435717	PrimaryExpression	0		435619	1					
ANR	435718	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2642:3:69507:69568	435619	1	True				
ANR	435719	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		435619	0		=			
ANR	435720	Identifier	offset		435619	0					
ANR	435721	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		435619	1		*			
ANR	435722	MemberAccess	op -> operands [ 0 ] . offset		435619	0					
ANR	435723	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435724	PtrMemberAccess	op -> operands		435619	0					
ANR	435725	Identifier	op		435619	0					
ANR	435726	Identifier	operands		435619	1					
ANR	435727	PrimaryExpression	0		435619	1					
ANR	435728	Identifier	offset		435619	1					
ANR	435729	MemberAccess	op -> operands [ 0 ] . offset_sign		435619	1					
ANR	435730	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435731	PtrMemberAccess	op -> operands		435619	0					
ANR	435732	Identifier	op		435619	0					
ANR	435733	Identifier	operands		435619	1					
ANR	435734	PrimaryExpression	0		435619	1					
ANR	435735	Identifier	offset_sign		435619	1					
ANR	435736	ExpressionStatement	reg = op -> operands [ 1 ] . reg	2643:3:69573:69598	435619	2	True				
ANR	435737	AssignmentExpression	reg = op -> operands [ 1 ] . reg		435619	0		=			
ANR	435738	Identifier	reg		435619	0					
ANR	435739	MemberAccess	op -> operands [ 1 ] . reg		435619	1					
ANR	435740	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435741	PtrMemberAccess	op -> operands		435619	0					
ANR	435742	Identifier	op		435619	0					
ANR	435743	Identifier	operands		435619	1					
ANR	435744	PrimaryExpression	1		435619	1					
ANR	435745	Identifier	reg		435619	1					
ANR	435746	ElseStatement	else		435619	0					
ANR	435747	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		435619	0					
ANR	435748	Condition	op -> operands [ 1 ] . type & OT_MEMORY	2644:13:69613:69644	435619	0	True				
ANR	435749	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		435619	0		&			
ANR	435750	MemberAccess	op -> operands [ 1 ] . type		435619	0					
ANR	435751	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435752	PtrMemberAccess	op -> operands		435619	0					
ANR	435753	Identifier	op		435619	0					
ANR	435754	Identifier	operands		435619	1					
ANR	435755	PrimaryExpression	1		435619	1					
ANR	435756	Identifier	type		435619	1					
ANR	435757	Identifier	OT_MEMORY		435619	1					
ANR	435758	CompoundStatement		15:47:419:419	435619	1					
ANR	435759	ExpressionStatement	rm = op -> operands [ 1 ] . regs [ 0 ]	2645:3:69652:69680	435619	0	True				
ANR	435760	AssignmentExpression	rm = op -> operands [ 1 ] . regs [ 0 ]		435619	0		=			
ANR	435761	Identifier	rm		435619	0					
ANR	435762	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		435619	1					
ANR	435763	MemberAccess	op -> operands [ 1 ] . regs		435619	0					
ANR	435764	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435765	PtrMemberAccess	op -> operands		435619	0					
ANR	435766	Identifier	op		435619	0					
ANR	435767	Identifier	operands		435619	1					
ANR	435768	PrimaryExpression	1		435619	1					
ANR	435769	Identifier	regs		435619	1					
ANR	435770	PrimaryExpression	0		435619	1					
ANR	435771	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	2646:3:69685:69746	435619	1	True				
ANR	435772	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		435619	0		=			
ANR	435773	Identifier	offset		435619	0					
ANR	435774	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		435619	1		*			
ANR	435775	MemberAccess	op -> operands [ 1 ] . offset		435619	0					
ANR	435776	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435777	PtrMemberAccess	op -> operands		435619	0					
ANR	435778	Identifier	op		435619	0					
ANR	435779	Identifier	operands		435619	1					
ANR	435780	PrimaryExpression	1		435619	1					
ANR	435781	Identifier	offset		435619	1					
ANR	435782	MemberAccess	op -> operands [ 1 ] . offset_sign		435619	1					
ANR	435783	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435784	PtrMemberAccess	op -> operands		435619	0					
ANR	435785	Identifier	op		435619	0					
ANR	435786	Identifier	operands		435619	1					
ANR	435787	PrimaryExpression	1		435619	1					
ANR	435788	Identifier	offset_sign		435619	1					
ANR	435789	ExpressionStatement	reg = op -> operands [ 0 ] . reg	2647:3:69751:69776	435619	2	True				
ANR	435790	AssignmentExpression	reg = op -> operands [ 0 ] . reg		435619	0		=			
ANR	435791	Identifier	reg		435619	0					
ANR	435792	MemberAccess	op -> operands [ 0 ] . reg		435619	1					
ANR	435793	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435794	PtrMemberAccess	op -> operands		435619	0					
ANR	435795	Identifier	op		435619	0					
ANR	435796	Identifier	operands		435619	1					
ANR	435797	PrimaryExpression	0		435619	1					
ANR	435798	Identifier	reg		435619	1					
ANR	435799	IfStatement	if ( offset )		435619	2					
ANR	435800	Condition	offset	2649:6:69788:69793	435619	0	True				
ANR	435801	Identifier	offset		435619	0					
ANR	435802	CompoundStatement		20:14:568:568	435619	1					
ANR	435803	ExpressionStatement	mod_byte = 1	2650:3:69801:69813	435619	0	True				
ANR	435804	AssignmentExpression	mod_byte = 1		435619	0		=			
ANR	435805	Identifier	mod_byte		435619	0					
ANR	435806	PrimaryExpression	1		435619	1					
ANR	435807	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		435619	1					
ANR	435808	Condition	offset < ST8_MIN || offset > ST8_MAX	2651:7:69822:69857	435619	0	True				
ANR	435809	OrExpression	offset < ST8_MIN || offset > ST8_MAX		435619	0		||			
ANR	435810	RelationalExpression	offset < ST8_MIN		435619	0		<			
ANR	435811	Identifier	offset		435619	0					
ANR	435812	Identifier	ST8_MIN		435619	1					
ANR	435813	RelationalExpression	offset > ST8_MAX		435619	1		>			
ANR	435814	Identifier	offset		435619	0					
ANR	435815	Identifier	ST8_MAX		435619	1					
ANR	435816	CompoundStatement		22:45:632:632	435619	1					
ANR	435817	ExpressionStatement	mod_byte = 2	2652:4:69866:69878	435619	0	True				
ANR	435818	AssignmentExpression	mod_byte = 2		435619	0		=			
ANR	435819	Identifier	mod_byte		435619	0					
ANR	435820	PrimaryExpression	2		435619	1					
ANR	435821	ElseStatement	else		435619	0					
ANR	435822	CompoundStatement		26:8:669:669	435619	0					
ANR	435823	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_GPREG )		435619	0					
ANR	435824	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_GPREG	2656:6:69905:69973	435619	0	True				
ANR	435825	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_GPREG		435619	0		&&			
ANR	435826	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		435619	0		==			
ANR	435827	MemberAccess	op -> operands [ 0 ] . reg		435619	0					
ANR	435828	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435829	PtrMemberAccess	op -> operands		435619	0					
ANR	435830	Identifier	op		435619	0					
ANR	435831	Identifier	operands		435619	1					
ANR	435832	PrimaryExpression	0		435619	1					
ANR	435833	Identifier	reg		435619	1					
ANR	435834	Identifier	X86R_EAX		435619	1					
ANR	435835	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		435619	1		&			
ANR	435836	MemberAccess	op -> operands [ 1 ] . type		435619	0					
ANR	435837	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435838	PtrMemberAccess	op -> operands		435619	0					
ANR	435839	Identifier	op		435619	0					
ANR	435840	Identifier	operands		435619	1					
ANR	435841	PrimaryExpression	1		435619	1					
ANR	435842	Identifier	type		435619	1					
ANR	435843	Identifier	OT_GPREG		435619	1					
ANR	435844	CompoundStatement		28:36:748:748	435619	1					
ANR	435845	ExpressionStatement	data [ l ++ ] = 0x90 + op -> operands [ 1 ] . reg	2658:3:69981:70019	435619	0	True				
ANR	435846	AssignmentExpression	data [ l ++ ] = 0x90 + op -> operands [ 1 ] . reg		435619	0		=			
ANR	435847	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	435848	Identifier	data		435619	0					
ANR	435849	PostIncDecOperationExpression	l ++		435619	1					
ANR	435850	Identifier	l		435619	0					
ANR	435851	IncDec	++		435619	1					
ANR	435852	AdditiveExpression	0x90 + op -> operands [ 1 ] . reg		435619	1		+			
ANR	435853	PrimaryExpression	0x90		435619	0					
ANR	435854	MemberAccess	op -> operands [ 1 ] . reg		435619	1					
ANR	435855	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435856	PtrMemberAccess	op -> operands		435619	0					
ANR	435857	Identifier	op		435619	0					
ANR	435858	Identifier	operands		435619	1					
ANR	435859	PrimaryExpression	1		435619	1					
ANR	435860	Identifier	reg		435619	1					
ANR	435861	ReturnStatement	return l ;	2659:3:70024:70032	435619	1	True				
ANR	435862	Identifier	l		435619	0					
ANR	435863	ElseStatement	else		435619	0					
ANR	435864	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_GPREG )		435619	0					
ANR	435865	Condition	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_GPREG	2660:13:70047:70119	435619	0	True				
ANR	435866	AndExpression	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_GPREG		435619	0		&&			
ANR	435867	EqualityExpression	op -> operands [ 1 ] . reg == X86R_EAX		435619	0		==			
ANR	435868	MemberAccess	op -> operands [ 1 ] . reg		435619	0					
ANR	435869	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435870	PtrMemberAccess	op -> operands		435619	0					
ANR	435871	Identifier	op		435619	0					
ANR	435872	Identifier	operands		435619	1					
ANR	435873	PrimaryExpression	1		435619	1					
ANR	435874	Identifier	reg		435619	1					
ANR	435875	Identifier	X86R_EAX		435619	1					
ANR	435876	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		435619	1		&			
ANR	435877	MemberAccess	op -> operands [ 0 ] . type		435619	0					
ANR	435878	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435879	PtrMemberAccess	op -> operands		435619	0					
ANR	435880	Identifier	op		435619	0					
ANR	435881	Identifier	operands		435619	1					
ANR	435882	PrimaryExpression	0		435619	1					
ANR	435883	Identifier	type		435619	1					
ANR	435884	Identifier	OT_GPREG		435619	1					
ANR	435885	CompoundStatement		32:40:894:894	435619	1					
ANR	435886	ExpressionStatement	data [ l ++ ] = 0x90 + op -> operands [ 0 ] . reg	2662:3:70127:70165	435619	0	True				
ANR	435887	AssignmentExpression	data [ l ++ ] = 0x90 + op -> operands [ 0 ] . reg		435619	0		=			
ANR	435888	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	435889	Identifier	data		435619	0					
ANR	435890	PostIncDecOperationExpression	l ++		435619	1					
ANR	435891	Identifier	l		435619	0					
ANR	435892	IncDec	++		435619	1					
ANR	435893	AdditiveExpression	0x90 + op -> operands [ 0 ] . reg		435619	1		+			
ANR	435894	PrimaryExpression	0x90		435619	0					
ANR	435895	MemberAccess	op -> operands [ 0 ] . reg		435619	1					
ANR	435896	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435897	PtrMemberAccess	op -> operands		435619	0					
ANR	435898	Identifier	op		435619	0					
ANR	435899	Identifier	operands		435619	1					
ANR	435900	PrimaryExpression	0		435619	1					
ANR	435901	Identifier	reg		435619	1					
ANR	435902	ReturnStatement	return l ;	2663:3:70170:70178	435619	1	True				
ANR	435903	Identifier	l		435619	0					
ANR	435904	ElseStatement	else		435619	0					
ANR	435905	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 1 ] . type & OT_GPREG )		435619	0					
ANR	435906	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 1 ] . type & OT_GPREG	2664:13:70193:70265	435619	0	True				
ANR	435907	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 1 ] . type & OT_GPREG		435619	0		&&			
ANR	435908	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		435619	0		&			
ANR	435909	MemberAccess	op -> operands [ 0 ] . type		435619	0					
ANR	435910	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435911	PtrMemberAccess	op -> operands		435619	0					
ANR	435912	Identifier	op		435619	0					
ANR	435913	Identifier	operands		435619	1					
ANR	435914	PrimaryExpression	0		435619	1					
ANR	435915	Identifier	type		435619	1					
ANR	435916	Identifier	OT_GPREG		435619	1					
ANR	435917	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		435619	1		&			
ANR	435918	MemberAccess	op -> operands [ 1 ] . type		435619	0					
ANR	435919	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435920	PtrMemberAccess	op -> operands		435619	0					
ANR	435921	Identifier	op		435619	0					
ANR	435922	Identifier	operands		435619	1					
ANR	435923	PrimaryExpression	1		435619	1					
ANR	435924	Identifier	type		435619	1					
ANR	435925	Identifier	OT_GPREG		435619	1					
ANR	435926	CompoundStatement		36:40:1040:1040	435619	1					
ANR	435927	ExpressionStatement	mod_byte = 3	2666:3:70273:70285	435619	0	True				
ANR	435928	AssignmentExpression	mod_byte = 3		435619	0		=			
ANR	435929	Identifier	mod_byte		435619	0					
ANR	435930	PrimaryExpression	3		435619	1					
ANR	435931	ExpressionStatement	data [ l ++ ] = 0x87	2667:3:70290:70306	435619	1	True				
ANR	435932	AssignmentExpression	data [ l ++ ] = 0x87		435619	0		=			
ANR	435933	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	435934	Identifier	data		435619	0					
ANR	435935	PostIncDecOperationExpression	l ++		435619	1					
ANR	435936	Identifier	l		435619	0					
ANR	435937	IncDec	++		435619	1					
ANR	435938	PrimaryExpression	0x87		435619	1					
ANR	435939	ExpressionStatement	reg = op -> operands [ 1 ] . reg	2668:3:70311:70336	435619	2	True				
ANR	435940	AssignmentExpression	reg = op -> operands [ 1 ] . reg		435619	0		=			
ANR	435941	Identifier	reg		435619	0					
ANR	435942	MemberAccess	op -> operands [ 1 ] . reg		435619	1					
ANR	435943	ArrayIndexing	op -> operands [ 1 ]		435619	0					
ANR	435944	PtrMemberAccess	op -> operands		435619	0					
ANR	435945	Identifier	op		435619	0					
ANR	435946	Identifier	operands		435619	1					
ANR	435947	PrimaryExpression	1		435619	1					
ANR	435948	Identifier	reg		435619	1					
ANR	435949	ExpressionStatement	rm = op -> operands [ 0 ] . reg	2669:3:70341:70365	435619	3	True				
ANR	435950	AssignmentExpression	rm = op -> operands [ 0 ] . reg		435619	0		=			
ANR	435951	Identifier	rm		435619	0					
ANR	435952	MemberAccess	op -> operands [ 0 ] . reg		435619	1					
ANR	435953	ArrayIndexing	op -> operands [ 0 ]		435619	0					
ANR	435954	PtrMemberAccess	op -> operands		435619	0					
ANR	435955	Identifier	op		435619	0					
ANR	435956	Identifier	operands		435619	1					
ANR	435957	PrimaryExpression	0		435619	1					
ANR	435958	Identifier	reg		435619	1					
ANR	435959	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm	2672:1:70375:70416	435619	7	True				
ANR	435960	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm		435619	0		=			
ANR	435961	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	435962	Identifier	data		435619	0					
ANR	435963	PostIncDecOperationExpression	l ++		435619	1					
ANR	435964	Identifier	l		435619	0					
ANR	435965	IncDec	++		435619	1					
ANR	435966	InclusiveOrExpression	mod_byte << 6 | reg << 3 | rm		435619	1		|			
ANR	435967	ShiftExpression	mod_byte << 6		435619	0		<<			
ANR	435968	Identifier	mod_byte		435619	0					
ANR	435969	PrimaryExpression	6		435619	1					
ANR	435970	InclusiveOrExpression	reg << 3 | rm		435619	1		|			
ANR	435971	ShiftExpression	reg << 3		435619	0		<<			
ANR	435972	Identifier	reg		435619	0					
ANR	435973	PrimaryExpression	3		435619	1					
ANR	435974	Identifier	rm		435619	1					
ANR	435975	IfStatement	if ( mod_byte > 0 && mod_byte < 3 )		435619	8					
ANR	435976	Condition	mod_byte > 0 && mod_byte < 3	2673:5:70423:70450	435619	0	True				
ANR	435977	AndExpression	mod_byte > 0 && mod_byte < 3		435619	0		&&			
ANR	435978	RelationalExpression	mod_byte > 0		435619	0		>			
ANR	435979	Identifier	mod_byte		435619	0					
ANR	435980	PrimaryExpression	0		435619	1					
ANR	435981	RelationalExpression	mod_byte < 3		435619	1		<			
ANR	435982	Identifier	mod_byte		435619	0					
ANR	435983	PrimaryExpression	3		435619	1					
ANR	435984	CompoundStatement		44:35:1225:1225	435619	1					
ANR	435985	ExpressionStatement	data [ l ++ ] = offset	2674:2:70457:70475	435619	0	True				
ANR	435986	AssignmentExpression	data [ l ++ ] = offset		435619	0		=			
ANR	435987	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	435988	Identifier	data		435619	0					
ANR	435989	PostIncDecOperationExpression	l ++		435619	1					
ANR	435990	Identifier	l		435619	0					
ANR	435991	IncDec	++		435619	1					
ANR	435992	Identifier	offset		435619	1					
ANR	435993	IfStatement	if ( mod_byte == 2 )		435619	1					
ANR	435994	Condition	mod_byte == 2	2675:6:70483:70495	435619	0	True				
ANR	435995	EqualityExpression	mod_byte == 2		435619	0		==			
ANR	435996	Identifier	mod_byte		435619	0					
ANR	435997	PrimaryExpression	2		435619	1					
ANR	435998	CompoundStatement		46:21:1270:1270	435619	1					
ANR	435999	ExpressionStatement	data [ l ++ ] = offset >> 8	2676:3:70503:70526	435619	0	True				
ANR	436000	AssignmentExpression	data [ l ++ ] = offset >> 8		435619	0		=			
ANR	436001	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	436002	Identifier	data		435619	0					
ANR	436003	PostIncDecOperationExpression	l ++		435619	1					
ANR	436004	Identifier	l		435619	0					
ANR	436005	IncDec	++		435619	1					
ANR	436006	ShiftExpression	offset >> 8		435619	1		>>			
ANR	436007	Identifier	offset		435619	0					
ANR	436008	PrimaryExpression	8		435619	1					
ANR	436009	ExpressionStatement	data [ l ++ ] = offset >> 16	2677:3:70531:70555	435619	1	True				
ANR	436010	AssignmentExpression	data [ l ++ ] = offset >> 16		435619	0		=			
ANR	436011	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	436012	Identifier	data		435619	0					
ANR	436013	PostIncDecOperationExpression	l ++		435619	1					
ANR	436014	Identifier	l		435619	0					
ANR	436015	IncDec	++		435619	1					
ANR	436016	ShiftExpression	offset >> 16		435619	1		>>			
ANR	436017	Identifier	offset		435619	0					
ANR	436018	PrimaryExpression	16		435619	1					
ANR	436019	ExpressionStatement	data [ l ++ ] = offset >> 24	2678:3:70560:70584	435619	2	True				
ANR	436020	AssignmentExpression	data [ l ++ ] = offset >> 24		435619	0		=			
ANR	436021	ArrayIndexing	data [ l ++ ]		435619	0					
ANR	436022	Identifier	data		435619	0					
ANR	436023	PostIncDecOperationExpression	l ++		435619	1					
ANR	436024	Identifier	l		435619	0					
ANR	436025	IncDec	++		435619	1					
ANR	436026	ShiftExpression	offset >> 24		435619	1		>>			
ANR	436027	Identifier	offset		435619	0					
ANR	436028	PrimaryExpression	24		435619	1					
ANR	436029	ReturnStatement	return l ;	2681:1:70594:70602	435619	9	True				
ANR	436030	Identifier	l		435619	0					
ANR	436031	ReturnType	static int		435619	1					
ANR	436032	Identifier	opxchg		435619	2					
ANR	436033	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		435619	3					
ANR	436034	Parameter	RAsm * a	2630:18:69189:69195	435619	0	True				
ANR	436035	ParameterType	RAsm *		435619	0					
ANR	436036	Identifier	a		435619	1					
ANR	436037	Parameter	ut8 * data	2630:27:69198:69206	435619	1	True				
ANR	436038	ParameterType	ut8 *		435619	0					
ANR	436039	Identifier	data		435619	1					
ANR	436040	Parameter	const Opcode * op	2630:38:69209:69224	435619	2	True				
ANR	436041	ParameterType	const Opcode *		435619	0					
ANR	436042	Identifier	op		435619	1					
ANR	436043	CFGEntryNode	ENTRY		435619		True				
ANR	436044	CFGExitNode	EXIT		435619		True				
ANR	436045	Symbol	op -> operands [ 0 ] . offset_sign		435619						
ANR	436046	Symbol	ST8_MAX		435619						
ANR	436047	Symbol	data		435619						
ANR	436048	Symbol	* op		435619						
ANR	436049	Symbol	* * op		435619						
ANR	436050	Symbol	* op -> operands [ 1 ] . regs		435619						
ANR	436051	Symbol	* op -> operands		435619						
ANR	436052	Symbol	reg		435619						
ANR	436053	Symbol	op -> operands [ 1 ] . regs		435619						
ANR	436054	Symbol	ST8_MIN		435619						
ANR	436055	Symbol	op -> operands [ 0 ] . type		435619						
ANR	436056	Symbol	op -> operands [ 1 ] . offset_sign		435619						
ANR	436057	Symbol	op -> operands [ 0 ] . reg		435619						
ANR	436058	Symbol	op -> operands [ 0 ] . offset		435619						
ANR	436059	Symbol	OT_MEMORY		435619						
ANR	436060	Symbol	X86R_EAX		435619						
ANR	436061	Symbol	a		435619						
ANR	436062	Symbol	op		435619						
ANR	436063	Symbol	OT_GPREG		435619						
ANR	436064	Symbol	mod_byte		435619						
ANR	436065	Symbol	offset		435619						
ANR	436066	Symbol	op -> operands [ 1 ] . reg		435619						
ANR	436067	Symbol	op -> operands [ 1 ] . offset		435619						
ANR	436068	Symbol	* * op -> operands		435619						
ANR	436069	Symbol	l		435619						
ANR	436070	Symbol	op -> operands [ 1 ] . type		435619						
ANR	436071	Symbol	* op -> operands [ 0 ] . regs		435619						
ANR	436072	Symbol	* * * op		435619						
ANR	436073	Symbol	rm		435619						
ANR	436074	Symbol	op -> operands		435619						
ANR	436075	Symbol	* data		435619						
ANR	436076	Symbol	op -> operands [ 0 ] . regs		435619						
ANR	436077	Function	opcdqe	2684:0:70607:70778							
ANR	436078	FunctionDef	"opcdqe (RAsm * a , ut8 * data , const Opcode * op)"		436077	0					
ANR	436079	CompoundStatement		2684:56:70663:70778	436077	0					
ANR	436080	ExpressionStatement	is_valid_registers ( op )	2685:1:70666:70689	436077	0	True				
ANR	436081	CallExpression	is_valid_registers ( op )		436077	0					
ANR	436082	Callee	is_valid_registers		436077	0					
ANR	436083	Identifier	is_valid_registers		436077	0					
ANR	436084	ArgumentList	op		436077	1					
ANR	436085	Argument	op		436077	0					
ANR	436086	Identifier	op		436077	0					
ANR	436087	IdentifierDeclStatement	int l = 0 ;	2686:1:70692:70701	436077	1	True				
ANR	436088	IdentifierDecl	l = 0		436077	0					
ANR	436089	IdentifierDeclType	int		436077	0					
ANR	436090	Identifier	l		436077	1					
ANR	436091	AssignmentExpression	l = 0		436077	2		=			
ANR	436092	Identifier	l		436077	0					
ANR	436093	PrimaryExpression	0		436077	1					
ANR	436094	IfStatement	if ( a -> bits == 64 )		436077	2					
ANR	436095	Condition	a -> bits == 64	2687:5:70708:70720	436077	0	True				
ANR	436096	EqualityExpression	a -> bits == 64		436077	0		==			
ANR	436097	PtrMemberAccess	a -> bits		436077	0					
ANR	436098	Identifier	a		436077	0					
ANR	436099	Identifier	bits		436077	1					
ANR	436100	PrimaryExpression	64		436077	1					
ANR	436101	CompoundStatement		4:20:59:59	436077	1					
ANR	436102	ExpressionStatement	data [ l ++ ] = 0x48	2688:2:70727:70743	436077	0	True				
ANR	436103	AssignmentExpression	data [ l ++ ] = 0x48		436077	0		=			
ANR	436104	ArrayIndexing	data [ l ++ ]		436077	0					
ANR	436105	Identifier	data		436077	0					
ANR	436106	PostIncDecOperationExpression	l ++		436077	1					
ANR	436107	Identifier	l		436077	0					
ANR	436108	IncDec	++		436077	1					
ANR	436109	PrimaryExpression	0x48		436077	1					
ANR	436110	ExpressionStatement	data [ l ++ ] = 0x98	2690:1:70749:70765	436077	3	True				
ANR	436111	AssignmentExpression	data [ l ++ ] = 0x98		436077	0		=			
ANR	436112	ArrayIndexing	data [ l ++ ]		436077	0					
ANR	436113	Identifier	data		436077	0					
ANR	436114	PostIncDecOperationExpression	l ++		436077	1					
ANR	436115	Identifier	l		436077	0					
ANR	436116	IncDec	++		436077	1					
ANR	436117	PrimaryExpression	0x98		436077	1					
ANR	436118	ReturnStatement	return l ;	2691:1:70768:70776	436077	4	True				
ANR	436119	Identifier	l		436077	0					
ANR	436120	ReturnType	static int		436077	1					
ANR	436121	Identifier	opcdqe		436077	2					
ANR	436122	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436077	3					
ANR	436123	Parameter	RAsm * a	2684:18:70625:70631	436077	0	True				
ANR	436124	ParameterType	RAsm *		436077	0					
ANR	436125	Identifier	a		436077	1					
ANR	436126	Parameter	ut8 * data	2684:27:70634:70642	436077	1	True				
ANR	436127	ParameterType	ut8 *		436077	0					
ANR	436128	Identifier	data		436077	1					
ANR	436129	Parameter	const Opcode * op	2684:38:70645:70660	436077	2	True				
ANR	436130	ParameterType	const Opcode *		436077	0					
ANR	436131	Identifier	op		436077	1					
ANR	436132	CFGEntryNode	ENTRY		436077		True				
ANR	436133	CFGExitNode	EXIT		436077		True				
ANR	436134	Symbol	a		436077						
ANR	436135	Symbol	op		436077						
ANR	436136	Symbol	data		436077						
ANR	436137	Symbol	* a		436077						
ANR	436138	Symbol	l		436077						
ANR	436139	Symbol	* data		436077						
ANR	436140	Symbol	a -> bits		436077						
ANR	436141	Function	opfcmov	2694:0:70781:72042							
ANR	436142	FunctionDef	"opfcmov (RAsm * a , ut8 * data , const Opcode * op)"		436141	0					
ANR	436143	CompoundStatement		2694:57:70838:72042	436141	0					
ANR	436144	IdentifierDeclStatement	int l = 0 ;	2695:1:70841:70850	436141	0	True				
ANR	436145	IdentifierDecl	l = 0		436141	0					
ANR	436146	IdentifierDeclType	int		436141	0					
ANR	436147	Identifier	l		436141	1					
ANR	436148	AssignmentExpression	l = 0		436141	2		=			
ANR	436149	Identifier	l		436141	0					
ANR	436150	PrimaryExpression	0		436141	1					
ANR	436151	IdentifierDeclStatement	"char * fcmov = op -> mnemonic + strlen ( ""fcmov"" ) ;"	2696:1:70853:70897	436141	1	True				
ANR	436152	IdentifierDecl	"* fcmov = op -> mnemonic + strlen ( ""fcmov"" )"		436141	0					
ANR	436153	IdentifierDeclType	char *		436141	0					
ANR	436154	Identifier	fcmov		436141	1					
ANR	436155	AssignmentExpression	"* fcmov = op -> mnemonic + strlen ( ""fcmov"" )"		436141	2		=			
ANR	436156	Identifier	fcmov		436141	0					
ANR	436157	AdditiveExpression	"op -> mnemonic + strlen ( ""fcmov"" )"		436141	1		+			
ANR	436158	PtrMemberAccess	op -> mnemonic		436141	0					
ANR	436159	Identifier	op		436141	0					
ANR	436160	Identifier	mnemonic		436141	1					
ANR	436161	CallExpression	"strlen ( ""fcmov"" )"		436141	1					
ANR	436162	Callee	strlen		436141	0					
ANR	436163	Identifier	strlen		436141	0					
ANR	436164	ArgumentList	"""fcmov"""		436141	1					
ANR	436165	Argument	"""fcmov"""		436141	0					
ANR	436166	PrimaryExpression	"""fcmov"""		436141	0					
ANR	436167	SwitchStatement	switch ( op -> operands_count )		436141	2					
ANR	436168	Condition	op -> operands_count	2697:9:70908:70925	436141	0	True				
ANR	436169	PtrMemberAccess	op -> operands_count		436141	0					
ANR	436170	Identifier	op		436141	0					
ANR	436171	Identifier	operands_count		436141	1					
ANR	436172	CompoundStatement		4:29:89:89	436141	1					
ANR	436173	Label	case 2 :	2698:1:70931:70937	436141	0	True				
ANR	436174	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		436141	1					
ANR	436175	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	2699:7:70946:71074	436141	0	True				
ANR	436176	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		436141	0		&&			
ANR	436177	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		436141	0		&			
ANR	436178	MemberAccess	op -> operands [ 0 ] . type		436141	0					
ANR	436179	ArrayIndexing	op -> operands [ 0 ]		436141	0					
ANR	436180	PtrMemberAccess	op -> operands		436141	0					
ANR	436181	Identifier	op		436141	0					
ANR	436182	Identifier	operands		436141	1					
ANR	436183	PrimaryExpression	0		436141	1					
ANR	436184	Identifier	type		436141	1					
ANR	436185	BitAndExpression	OT_FPUREG & ~OT_REGALL		436141	1		&			
ANR	436186	Identifier	OT_FPUREG		436141	0					
ANR	436187	Identifier	~OT_REGALL		436141	1					
ANR	436188	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		436141	1		&&			
ANR	436189	EqualityExpression	op -> operands [ 0 ] . reg == 0		436141	0		==			
ANR	436190	MemberAccess	op -> operands [ 0 ] . reg		436141	0					
ANR	436191	ArrayIndexing	op -> operands [ 0 ]		436141	0					
ANR	436192	PtrMemberAccess	op -> operands		436141	0					
ANR	436193	Identifier	op		436141	0					
ANR	436194	Identifier	operands		436141	1					
ANR	436195	PrimaryExpression	0		436141	1					
ANR	436196	Identifier	reg		436141	1					
ANR	436197	PrimaryExpression	0		436141	1					
ANR	436198	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		436141	1		&			
ANR	436199	MemberAccess	op -> operands [ 1 ] . type		436141	0					
ANR	436200	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436201	PtrMemberAccess	op -> operands		436141	0					
ANR	436202	Identifier	op		436141	0					
ANR	436203	Identifier	operands		436141	1					
ANR	436204	PrimaryExpression	1		436141	1					
ANR	436205	Identifier	type		436141	1					
ANR	436206	BitAndExpression	OT_FPUREG & ~OT_REGALL		436141	1		&			
ANR	436207	Identifier	OT_FPUREG		436141	0					
ANR	436208	Identifier	~OT_REGALL		436141	1					
ANR	436209	CompoundStatement		7:55:239:239	436141	1					
ANR	436210	IfStatement	"if ( ! strcmp ( fcmov , ""b"" ) )"		436141	0					
ANR	436211	Condition	"! strcmp ( fcmov , ""b"" )"	2701:8:71088:71108	436141	0	True				
ANR	436212	UnaryOperationExpression	"! strcmp ( fcmov , ""b"" )"		436141	0					
ANR	436213	UnaryOperator	!		436141	0					
ANR	436214	CallExpression	"strcmp ( fcmov , ""b"" )"		436141	1					
ANR	436215	Callee	strcmp		436141	0					
ANR	436216	Identifier	strcmp		436141	0					
ANR	436217	ArgumentList	fcmov		436141	1					
ANR	436218	Argument	fcmov		436141	0					
ANR	436219	Identifier	fcmov		436141	0					
ANR	436220	Argument	"""b"""		436141	1					
ANR	436221	PrimaryExpression	"""b"""		436141	0					
ANR	436222	CompoundStatement		8:32:273:273	436141	1					
ANR	436223	ExpressionStatement	data [ l ++ ] = 0xda	2702:4:71118:71134	436141	0	True				
ANR	436224	AssignmentExpression	data [ l ++ ] = 0xda		436141	0		=			
ANR	436225	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436226	Identifier	data		436141	0					
ANR	436227	PostIncDecOperationExpression	l ++		436141	1					
ANR	436228	Identifier	l		436141	0					
ANR	436229	IncDec	++		436141	1					
ANR	436230	PrimaryExpression	0xda		436141	1					
ANR	436231	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg	2703:4:71140:71178	436141	1	True				
ANR	436232	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436233	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436234	Identifier	data		436141	0					
ANR	436235	PostIncDecOperationExpression	l ++		436141	1					
ANR	436236	Identifier	l		436141	0					
ANR	436237	IncDec	++		436141	1					
ANR	436238	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436239	PrimaryExpression	0xc0		436141	0					
ANR	436240	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436241	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436242	PtrMemberAccess	op -> operands		436141	0					
ANR	436243	Identifier	op		436141	0					
ANR	436244	Identifier	operands		436141	1					
ANR	436245	PrimaryExpression	1		436141	1					
ANR	436246	Identifier	reg		436141	1					
ANR	436247	ElseStatement	else		436141	0					
ANR	436248	IfStatement	"if ( ! strcmp ( fcmov , ""e"" ) )"		436141	0					
ANR	436249	Condition	"! strcmp ( fcmov , ""e"" )"	2704:15:71195:71215	436141	0	True				
ANR	436250	UnaryOperationExpression	"! strcmp ( fcmov , ""e"" )"		436141	0					
ANR	436251	UnaryOperator	!		436141	0					
ANR	436252	CallExpression	"strcmp ( fcmov , ""e"" )"		436141	1					
ANR	436253	Callee	strcmp		436141	0					
ANR	436254	Identifier	strcmp		436141	0					
ANR	436255	ArgumentList	fcmov		436141	1					
ANR	436256	Argument	fcmov		436141	0					
ANR	436257	Identifier	fcmov		436141	0					
ANR	436258	Argument	"""e"""		436141	1					
ANR	436259	PrimaryExpression	"""e"""		436141	0					
ANR	436260	CompoundStatement		11:39:380:380	436141	1					
ANR	436261	ExpressionStatement	data [ l ++ ] = 0xda	2705:4:71225:71241	436141	0	True				
ANR	436262	AssignmentExpression	data [ l ++ ] = 0xda		436141	0		=			
ANR	436263	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436264	Identifier	data		436141	0					
ANR	436265	PostIncDecOperationExpression	l ++		436141	1					
ANR	436266	Identifier	l		436141	0					
ANR	436267	IncDec	++		436141	1					
ANR	436268	PrimaryExpression	0xda		436141	1					
ANR	436269	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg	2706:4:71247:71285	436141	1	True				
ANR	436270	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436271	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436272	Identifier	data		436141	0					
ANR	436273	PostIncDecOperationExpression	l ++		436141	1					
ANR	436274	Identifier	l		436141	0					
ANR	436275	IncDec	++		436141	1					
ANR	436276	InclusiveOrExpression	0xc8 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436277	PrimaryExpression	0xc8		436141	0					
ANR	436278	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436279	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436280	PtrMemberAccess	op -> operands		436141	0					
ANR	436281	Identifier	op		436141	0					
ANR	436282	Identifier	operands		436141	1					
ANR	436283	PrimaryExpression	1		436141	1					
ANR	436284	Identifier	reg		436141	1					
ANR	436285	ElseStatement	else		436141	0					
ANR	436286	IfStatement	"if ( ! strcmp ( fcmov , ""be"" ) )"		436141	0					
ANR	436287	Condition	"! strcmp ( fcmov , ""be"" )"	2707:15:71302:71323	436141	0	True				
ANR	436288	UnaryOperationExpression	"! strcmp ( fcmov , ""be"" )"		436141	0					
ANR	436289	UnaryOperator	!		436141	0					
ANR	436290	CallExpression	"strcmp ( fcmov , ""be"" )"		436141	1					
ANR	436291	Callee	strcmp		436141	0					
ANR	436292	Identifier	strcmp		436141	0					
ANR	436293	ArgumentList	fcmov		436141	1					
ANR	436294	Argument	fcmov		436141	0					
ANR	436295	Identifier	fcmov		436141	0					
ANR	436296	Argument	"""be"""		436141	1					
ANR	436297	PrimaryExpression	"""be"""		436141	0					
ANR	436298	CompoundStatement		14:40:488:488	436141	1					
ANR	436299	ExpressionStatement	data [ l ++ ] = 0xda	2708:4:71333:71349	436141	0	True				
ANR	436300	AssignmentExpression	data [ l ++ ] = 0xda		436141	0		=			
ANR	436301	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436302	Identifier	data		436141	0					
ANR	436303	PostIncDecOperationExpression	l ++		436141	1					
ANR	436304	Identifier	l		436141	0					
ANR	436305	IncDec	++		436141	1					
ANR	436306	PrimaryExpression	0xda		436141	1					
ANR	436307	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg	2709:4:71355:71393	436141	1	True				
ANR	436308	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436309	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436310	Identifier	data		436141	0					
ANR	436311	PostIncDecOperationExpression	l ++		436141	1					
ANR	436312	Identifier	l		436141	0					
ANR	436313	IncDec	++		436141	1					
ANR	436314	InclusiveOrExpression	0xd0 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436315	PrimaryExpression	0xd0		436141	0					
ANR	436316	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436317	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436318	PtrMemberAccess	op -> operands		436141	0					
ANR	436319	Identifier	op		436141	0					
ANR	436320	Identifier	operands		436141	1					
ANR	436321	PrimaryExpression	1		436141	1					
ANR	436322	Identifier	reg		436141	1					
ANR	436323	ElseStatement	else		436141	0					
ANR	436324	IfStatement	"if ( ! strcmp ( fcmov , ""u"" ) )"		436141	0					
ANR	436325	Condition	"! strcmp ( fcmov , ""u"" )"	2710:15:71410:71430	436141	0	True				
ANR	436326	UnaryOperationExpression	"! strcmp ( fcmov , ""u"" )"		436141	0					
ANR	436327	UnaryOperator	!		436141	0					
ANR	436328	CallExpression	"strcmp ( fcmov , ""u"" )"		436141	1					
ANR	436329	Callee	strcmp		436141	0					
ANR	436330	Identifier	strcmp		436141	0					
ANR	436331	ArgumentList	fcmov		436141	1					
ANR	436332	Argument	fcmov		436141	0					
ANR	436333	Identifier	fcmov		436141	0					
ANR	436334	Argument	"""u"""		436141	1					
ANR	436335	PrimaryExpression	"""u"""		436141	0					
ANR	436336	CompoundStatement		17:39:595:595	436141	1					
ANR	436337	ExpressionStatement	data [ l ++ ] = 0xda	2711:4:71440:71456	436141	0	True				
ANR	436338	AssignmentExpression	data [ l ++ ] = 0xda		436141	0		=			
ANR	436339	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436340	Identifier	data		436141	0					
ANR	436341	PostIncDecOperationExpression	l ++		436141	1					
ANR	436342	Identifier	l		436141	0					
ANR	436343	IncDec	++		436141	1					
ANR	436344	PrimaryExpression	0xda		436141	1					
ANR	436345	ExpressionStatement	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg	2712:4:71462:71500	436141	1	True				
ANR	436346	AssignmentExpression	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436347	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436348	Identifier	data		436141	0					
ANR	436349	PostIncDecOperationExpression	l ++		436141	1					
ANR	436350	Identifier	l		436141	0					
ANR	436351	IncDec	++		436141	1					
ANR	436352	InclusiveOrExpression	0xd8 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436353	PrimaryExpression	0xd8		436141	0					
ANR	436354	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436355	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436356	PtrMemberAccess	op -> operands		436141	0					
ANR	436357	Identifier	op		436141	0					
ANR	436358	Identifier	operands		436141	1					
ANR	436359	PrimaryExpression	1		436141	1					
ANR	436360	Identifier	reg		436141	1					
ANR	436361	ElseStatement	else		436141	0					
ANR	436362	IfStatement	"if ( ! strcmp ( fcmov , ""nb"" ) )"		436141	0					
ANR	436363	Condition	"! strcmp ( fcmov , ""nb"" )"	2713:15:71517:71538	436141	0	True				
ANR	436364	UnaryOperationExpression	"! strcmp ( fcmov , ""nb"" )"		436141	0					
ANR	436365	UnaryOperator	!		436141	0					
ANR	436366	CallExpression	"strcmp ( fcmov , ""nb"" )"		436141	1					
ANR	436367	Callee	strcmp		436141	0					
ANR	436368	Identifier	strcmp		436141	0					
ANR	436369	ArgumentList	fcmov		436141	1					
ANR	436370	Argument	fcmov		436141	0					
ANR	436371	Identifier	fcmov		436141	0					
ANR	436372	Argument	"""nb"""		436141	1					
ANR	436373	PrimaryExpression	"""nb"""		436141	0					
ANR	436374	CompoundStatement		20:40:703:703	436141	1					
ANR	436375	ExpressionStatement	data [ l ++ ] = 0xdb	2714:4:71548:71564	436141	0	True				
ANR	436376	AssignmentExpression	data [ l ++ ] = 0xdb		436141	0		=			
ANR	436377	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436378	Identifier	data		436141	0					
ANR	436379	PostIncDecOperationExpression	l ++		436141	1					
ANR	436380	Identifier	l		436141	0					
ANR	436381	IncDec	++		436141	1					
ANR	436382	PrimaryExpression	0xdb		436141	1					
ANR	436383	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg	2715:4:71570:71608	436141	1	True				
ANR	436384	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436385	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436386	Identifier	data		436141	0					
ANR	436387	PostIncDecOperationExpression	l ++		436141	1					
ANR	436388	Identifier	l		436141	0					
ANR	436389	IncDec	++		436141	1					
ANR	436390	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436391	PrimaryExpression	0xc0		436141	0					
ANR	436392	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436393	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436394	PtrMemberAccess	op -> operands		436141	0					
ANR	436395	Identifier	op		436141	0					
ANR	436396	Identifier	operands		436141	1					
ANR	436397	PrimaryExpression	1		436141	1					
ANR	436398	Identifier	reg		436141	1					
ANR	436399	ElseStatement	else		436141	0					
ANR	436400	IfStatement	"if ( ! strcmp ( fcmov , ""ne"" ) )"		436141	0					
ANR	436401	Condition	"! strcmp ( fcmov , ""ne"" )"	2716:15:71625:71646	436141	0	True				
ANR	436402	UnaryOperationExpression	"! strcmp ( fcmov , ""ne"" )"		436141	0					
ANR	436403	UnaryOperator	!		436141	0					
ANR	436404	CallExpression	"strcmp ( fcmov , ""ne"" )"		436141	1					
ANR	436405	Callee	strcmp		436141	0					
ANR	436406	Identifier	strcmp		436141	0					
ANR	436407	ArgumentList	fcmov		436141	1					
ANR	436408	Argument	fcmov		436141	0					
ANR	436409	Identifier	fcmov		436141	0					
ANR	436410	Argument	"""ne"""		436141	1					
ANR	436411	PrimaryExpression	"""ne"""		436141	0					
ANR	436412	CompoundStatement		23:40:811:811	436141	1					
ANR	436413	ExpressionStatement	data [ l ++ ] = 0xdb	2717:4:71656:71672	436141	0	True				
ANR	436414	AssignmentExpression	data [ l ++ ] = 0xdb		436141	0		=			
ANR	436415	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436416	Identifier	data		436141	0					
ANR	436417	PostIncDecOperationExpression	l ++		436141	1					
ANR	436418	Identifier	l		436141	0					
ANR	436419	IncDec	++		436141	1					
ANR	436420	PrimaryExpression	0xdb		436141	1					
ANR	436421	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg	2718:4:71678:71716	436141	1	True				
ANR	436422	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436423	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436424	Identifier	data		436141	0					
ANR	436425	PostIncDecOperationExpression	l ++		436141	1					
ANR	436426	Identifier	l		436141	0					
ANR	436427	IncDec	++		436141	1					
ANR	436428	InclusiveOrExpression	0xc8 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436429	PrimaryExpression	0xc8		436141	0					
ANR	436430	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436431	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436432	PtrMemberAccess	op -> operands		436141	0					
ANR	436433	Identifier	op		436141	0					
ANR	436434	Identifier	operands		436141	1					
ANR	436435	PrimaryExpression	1		436141	1					
ANR	436436	Identifier	reg		436141	1					
ANR	436437	ElseStatement	else		436141	0					
ANR	436438	IfStatement	"if ( ! strcmp ( fcmov , ""nbe"" ) )"		436141	0					
ANR	436439	Condition	"! strcmp ( fcmov , ""nbe"" )"	2719:15:71733:71755	436141	0	True				
ANR	436440	UnaryOperationExpression	"! strcmp ( fcmov , ""nbe"" )"		436141	0					
ANR	436441	UnaryOperator	!		436141	0					
ANR	436442	CallExpression	"strcmp ( fcmov , ""nbe"" )"		436141	1					
ANR	436443	Callee	strcmp		436141	0					
ANR	436444	Identifier	strcmp		436141	0					
ANR	436445	ArgumentList	fcmov		436141	1					
ANR	436446	Argument	fcmov		436141	0					
ANR	436447	Identifier	fcmov		436141	0					
ANR	436448	Argument	"""nbe"""		436141	1					
ANR	436449	PrimaryExpression	"""nbe"""		436141	0					
ANR	436450	CompoundStatement		26:41:920:920	436141	1					
ANR	436451	ExpressionStatement	data [ l ++ ] = 0xdb	2720:4:71765:71781	436141	0	True				
ANR	436452	AssignmentExpression	data [ l ++ ] = 0xdb		436141	0		=			
ANR	436453	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436454	Identifier	data		436141	0					
ANR	436455	PostIncDecOperationExpression	l ++		436141	1					
ANR	436456	Identifier	l		436141	0					
ANR	436457	IncDec	++		436141	1					
ANR	436458	PrimaryExpression	0xdb		436141	1					
ANR	436459	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg	2721:4:71787:71825	436141	1	True				
ANR	436460	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436461	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436462	Identifier	data		436141	0					
ANR	436463	PostIncDecOperationExpression	l ++		436141	1					
ANR	436464	Identifier	l		436141	0					
ANR	436465	IncDec	++		436141	1					
ANR	436466	InclusiveOrExpression	0xd0 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436467	PrimaryExpression	0xd0		436141	0					
ANR	436468	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436469	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436470	PtrMemberAccess	op -> operands		436141	0					
ANR	436471	Identifier	op		436141	0					
ANR	436472	Identifier	operands		436141	1					
ANR	436473	PrimaryExpression	1		436141	1					
ANR	436474	Identifier	reg		436141	1					
ANR	436475	ElseStatement	else		436141	0					
ANR	436476	IfStatement	"if ( ! strcmp ( fcmov , ""nu"" ) )"		436141	0					
ANR	436477	Condition	"! strcmp ( fcmov , ""nu"" )"	2722:15:71842:71863	436141	0	True				
ANR	436478	UnaryOperationExpression	"! strcmp ( fcmov , ""nu"" )"		436141	0					
ANR	436479	UnaryOperator	!		436141	0					
ANR	436480	CallExpression	"strcmp ( fcmov , ""nu"" )"		436141	1					
ANR	436481	Callee	strcmp		436141	0					
ANR	436482	Identifier	strcmp		436141	0					
ANR	436483	ArgumentList	fcmov		436141	1					
ANR	436484	Argument	fcmov		436141	0					
ANR	436485	Identifier	fcmov		436141	0					
ANR	436486	Argument	"""nu"""		436141	1					
ANR	436487	PrimaryExpression	"""nu"""		436141	0					
ANR	436488	CompoundStatement		29:40:1028:1028	436141	1					
ANR	436489	ExpressionStatement	data [ l ++ ] = 0xdb	2723:4:71873:71889	436141	0	True				
ANR	436490	AssignmentExpression	data [ l ++ ] = 0xdb		436141	0		=			
ANR	436491	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436492	Identifier	data		436141	0					
ANR	436493	PostIncDecOperationExpression	l ++		436141	1					
ANR	436494	Identifier	l		436141	0					
ANR	436495	IncDec	++		436141	1					
ANR	436496	PrimaryExpression	0xdb		436141	1					
ANR	436497	ExpressionStatement	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg	2724:4:71895:71933	436141	1	True				
ANR	436498	AssignmentExpression	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg		436141	0		=			
ANR	436499	ArrayIndexing	data [ l ++ ]		436141	0					
ANR	436500	Identifier	data		436141	0					
ANR	436501	PostIncDecOperationExpression	l ++		436141	1					
ANR	436502	Identifier	l		436141	0					
ANR	436503	IncDec	++		436141	1					
ANR	436504	InclusiveOrExpression	0xd8 | op -> operands [ 1 ] . reg		436141	1		|			
ANR	436505	PrimaryExpression	0xd8		436141	0					
ANR	436506	MemberAccess	op -> operands [ 1 ] . reg		436141	1					
ANR	436507	ArrayIndexing	op -> operands [ 1 ]		436141	0					
ANR	436508	PtrMemberAccess	op -> operands		436141	0					
ANR	436509	Identifier	op		436141	0					
ANR	436510	Identifier	operands		436141	1					
ANR	436511	PrimaryExpression	1		436141	1					
ANR	436512	Identifier	reg		436141	1					
ANR	436513	ElseStatement	else		436141	0					
ANR	436514	CompoundStatement		32:10:1106:1106	436141	0					
ANR	436515	ReturnStatement	return - 1 ;	2726:4:71951:71960	436141	0	True				
ANR	436516	UnaryOperationExpression	- 1		436141	0					
ANR	436517	UnaryOperator	-		436141	0					
ANR	436518	PrimaryExpression	1		436141	1					
ANR	436519	ElseStatement	else		436141	0					
ANR	436520	CompoundStatement		35:9:1137:1137	436141	0					
ANR	436521	ReturnStatement	return - 1 ;	2729:3:71981:71990	436141	0	True				
ANR	436522	UnaryOperationExpression	- 1		436141	0					
ANR	436523	UnaryOperator	-		436141	0					
ANR	436524	PrimaryExpression	1		436141	1					
ANR	436525	BreakStatement	break ;	2731:2:71998:72003	436141	2	True				
ANR	436526	Label	default :	2732:1:72006:72013	436141	3	True				
ANR	436527	Identifier	default		436141	0					
ANR	436528	ReturnStatement	return - 1 ;	2733:2:72017:72026	436141	4	True				
ANR	436529	UnaryOperationExpression	- 1		436141	0					
ANR	436530	UnaryOperator	-		436141	0					
ANR	436531	PrimaryExpression	1		436141	1					
ANR	436532	ReturnStatement	return l ;	2735:1:72032:72040	436141	3	True				
ANR	436533	Identifier	l		436141	0					
ANR	436534	ReturnType	static int		436141	1					
ANR	436535	Identifier	opfcmov		436141	2					
ANR	436536	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436141	3					
ANR	436537	Parameter	RAsm * a	2694:19:70800:70806	436141	0	True				
ANR	436538	ParameterType	RAsm *		436141	0					
ANR	436539	Identifier	a		436141	1					
ANR	436540	Parameter	ut8 * data	2694:28:70809:70817	436141	1	True				
ANR	436541	ParameterType	ut8 *		436141	0					
ANR	436542	Identifier	data		436141	1					
ANR	436543	Parameter	const Opcode * op	2694:39:70820:70835	436141	2	True				
ANR	436544	ParameterType	const Opcode *		436141	0					
ANR	436545	Identifier	op		436141	1					
ANR	436546	CFGEntryNode	ENTRY		436141		True				
ANR	436547	CFGExitNode	EXIT		436141		True				
ANR	436548	Symbol	strcmp		436141						
ANR	436549	Symbol	a		436141						
ANR	436550	Symbol	op		436141						
ANR	436551	Symbol	data		436141						
ANR	436552	Symbol	* op		436141						
ANR	436553	Symbol	op -> operands [ 1 ] . reg		436141						
ANR	436554	Symbol	op -> mnemonic		436141						
ANR	436555	Symbol	l		436141						
ANR	436556	Symbol	* * op		436141						
ANR	436557	Symbol	OT_FPUREG		436141						
ANR	436558	Symbol	strlen		436141						
ANR	436559	Symbol	* op -> operands		436141						
ANR	436560	Symbol	op -> operands [ 1 ] . type		436141						
ANR	436561	Symbol	op -> operands_count		436141						
ANR	436562	Symbol	~OT_REGALL		436141						
ANR	436563	Symbol	op -> operands [ 0 ] . type		436141						
ANR	436564	Symbol	op -> operands [ 0 ] . reg		436141						
ANR	436565	Symbol	fcmov		436141						
ANR	436566	Symbol	op -> operands		436141						
ANR	436567	Symbol	* data		436141						
ANR	436568	Function	opffree	2738:0:72045:72351							
ANR	436569	FunctionDef	"opffree (RAsm * a , ut8 * data , const Opcode * op)"		436568	0					
ANR	436570	CompoundStatement		2738:57:72102:72351	436568	0					
ANR	436571	IdentifierDeclStatement	int l = 0 ;	2739:1:72105:72114	436568	0	True				
ANR	436572	IdentifierDecl	l = 0		436568	0					
ANR	436573	IdentifierDeclType	int		436568	0					
ANR	436574	Identifier	l		436568	1					
ANR	436575	AssignmentExpression	l = 0		436568	2		=			
ANR	436576	Identifier	l		436568	0					
ANR	436577	PrimaryExpression	0		436568	1					
ANR	436578	SwitchStatement	switch ( op -> operands_count )		436568	1					
ANR	436579	Condition	op -> operands_count	2740:9:72125:72142	436568	0	True				
ANR	436580	PtrMemberAccess	op -> operands_count		436568	0					
ANR	436581	Identifier	op		436568	0					
ANR	436582	Identifier	operands_count		436568	1					
ANR	436583	CompoundStatement		3:29:42:42	436568	1					
ANR	436584	Label	case 1 :	2741:1:72148:72154	436568	0	True				
ANR	436585	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		436568	1					
ANR	436586	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2742:6:72162:72206	436568	0	True				
ANR	436587	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		436568	0		&			
ANR	436588	MemberAccess	op -> operands [ 0 ] . type		436568	0					
ANR	436589	ArrayIndexing	op -> operands [ 0 ]		436568	0					
ANR	436590	PtrMemberAccess	op -> operands		436568	0					
ANR	436591	Identifier	op		436568	0					
ANR	436592	Identifier	operands		436568	1					
ANR	436593	PrimaryExpression	0		436568	1					
ANR	436594	Identifier	type		436568	1					
ANR	436595	BitAndExpression	OT_FPUREG & ~OT_REGALL		436568	1		&			
ANR	436596	Identifier	OT_FPUREG		436568	0					
ANR	436597	Identifier	~OT_REGALL		436568	1					
ANR	436598	CompoundStatement		5:54:107:107	436568	1					
ANR	436599	ExpressionStatement	data [ l ++ ] = 0xdd	2743:3:72215:72231	436568	0	True				
ANR	436600	AssignmentExpression	data [ l ++ ] = 0xdd		436568	0		=			
ANR	436601	ArrayIndexing	data [ l ++ ]		436568	0					
ANR	436602	Identifier	data		436568	0					
ANR	436603	PostIncDecOperationExpression	l ++		436568	1					
ANR	436604	Identifier	l		436568	0					
ANR	436605	IncDec	++		436568	1					
ANR	436606	PrimaryExpression	0xdd		436568	1					
ANR	436607	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2744:3:72236:72274	436568	1	True				
ANR	436608	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		436568	0		=			
ANR	436609	ArrayIndexing	data [ l ++ ]		436568	0					
ANR	436610	Identifier	data		436568	0					
ANR	436611	PostIncDecOperationExpression	l ++		436568	1					
ANR	436612	Identifier	l		436568	0					
ANR	436613	IncDec	++		436568	1					
ANR	436614	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		436568	1		|			
ANR	436615	PrimaryExpression	0xc0		436568	0					
ANR	436616	MemberAccess	op -> operands [ 0 ] . reg		436568	1					
ANR	436617	ArrayIndexing	op -> operands [ 0 ]		436568	0					
ANR	436618	PtrMemberAccess	op -> operands		436568	0					
ANR	436619	Identifier	op		436568	0					
ANR	436620	Identifier	operands		436568	1					
ANR	436621	PrimaryExpression	0		436568	1					
ANR	436622	Identifier	reg		436568	1					
ANR	436623	ElseStatement	else		436568	0					
ANR	436624	CompoundStatement		8:9:182:182	436568	0					
ANR	436625	ReturnStatement	return - 1 ;	2746:3:72290:72299	436568	0	True				
ANR	436626	UnaryOperationExpression	- 1		436568	0					
ANR	436627	UnaryOperator	-		436568	0					
ANR	436628	PrimaryExpression	1		436568	1					
ANR	436629	BreakStatement	break ;	2748:2:72307:72312	436568	2	True				
ANR	436630	Label	default :	2749:1:72315:72322	436568	3	True				
ANR	436631	Identifier	default		436568	0					
ANR	436632	ReturnStatement	return - 1 ;	2750:2:72326:72335	436568	4	True				
ANR	436633	UnaryOperationExpression	- 1		436568	0					
ANR	436634	UnaryOperator	-		436568	0					
ANR	436635	PrimaryExpression	1		436568	1					
ANR	436636	ReturnStatement	return l ;	2752:1:72341:72349	436568	2	True				
ANR	436637	Identifier	l		436568	0					
ANR	436638	ReturnType	static int		436568	1					
ANR	436639	Identifier	opffree		436568	2					
ANR	436640	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436568	3					
ANR	436641	Parameter	RAsm * a	2738:19:72064:72070	436568	0	True				
ANR	436642	ParameterType	RAsm *		436568	0					
ANR	436643	Identifier	a		436568	1					
ANR	436644	Parameter	ut8 * data	2738:28:72073:72081	436568	1	True				
ANR	436645	ParameterType	ut8 *		436568	0					
ANR	436646	Identifier	data		436568	1					
ANR	436647	Parameter	const Opcode * op	2738:39:72084:72099	436568	2	True				
ANR	436648	ParameterType	const Opcode *		436568	0					
ANR	436649	Identifier	op		436568	1					
ANR	436650	CFGEntryNode	ENTRY		436568		True				
ANR	436651	CFGExitNode	EXIT		436568		True				
ANR	436652	Symbol	a		436568						
ANR	436653	Symbol	op		436568						
ANR	436654	Symbol	data		436568						
ANR	436655	Symbol	* op		436568						
ANR	436656	Symbol	l		436568						
ANR	436657	Symbol	* * op		436568						
ANR	436658	Symbol	OT_FPUREG		436568						
ANR	436659	Symbol	* op -> operands		436568						
ANR	436660	Symbol	op -> operands_count		436568						
ANR	436661	Symbol	~OT_REGALL		436568						
ANR	436662	Symbol	op -> operands [ 0 ] . type		436568						
ANR	436663	Symbol	op -> operands [ 0 ] . reg		436568						
ANR	436664	Symbol	op -> operands		436568						
ANR	436665	Symbol	* data		436568						
ANR	436666	Function	opfrstor	2755:0:72354:72651							
ANR	436667	FunctionDef	"opfrstor (RAsm * a , ut8 * data , const Opcode * op)"		436666	0					
ANR	436668	CompoundStatement		2755:58:72412:72651	436666	0					
ANR	436669	IdentifierDeclStatement	int l = 0 ;	2756:1:72415:72424	436666	0	True				
ANR	436670	IdentifierDecl	l = 0		436666	0					
ANR	436671	IdentifierDeclType	int		436666	0					
ANR	436672	Identifier	l		436666	1					
ANR	436673	AssignmentExpression	l = 0		436666	2		=			
ANR	436674	Identifier	l		436666	0					
ANR	436675	PrimaryExpression	0		436666	1					
ANR	436676	SwitchStatement	switch ( op -> operands_count )		436666	1					
ANR	436677	Condition	op -> operands_count	2757:9:72435:72452	436666	0	True				
ANR	436678	PtrMemberAccess	op -> operands_count		436666	0					
ANR	436679	Identifier	op		436666	0					
ANR	436680	Identifier	operands_count		436666	1					
ANR	436681	CompoundStatement		3:29:42:42	436666	1					
ANR	436682	Label	case 1 :	2758:1:72458:72464	436666	0	True				
ANR	436683	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		436666	1					
ANR	436684	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2759:6:72472:72503	436666	0	True				
ANR	436685	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		436666	0		&			
ANR	436686	MemberAccess	op -> operands [ 0 ] . type		436666	0					
ANR	436687	ArrayIndexing	op -> operands [ 0 ]		436666	0					
ANR	436688	PtrMemberAccess	op -> operands		436666	0					
ANR	436689	Identifier	op		436666	0					
ANR	436690	Identifier	operands		436666	1					
ANR	436691	PrimaryExpression	0		436666	1					
ANR	436692	Identifier	type		436666	1					
ANR	436693	Identifier	OT_MEMORY		436666	1					
ANR	436694	CompoundStatement		5:40:93:93	436666	1					
ANR	436695	ExpressionStatement	data [ l ++ ] = 0xdd	2760:3:72511:72527	436666	0	True				
ANR	436696	AssignmentExpression	data [ l ++ ] = 0xdd		436666	0		=			
ANR	436697	ArrayIndexing	data [ l ++ ]		436666	0					
ANR	436698	Identifier	data		436666	0					
ANR	436699	PostIncDecOperationExpression	l ++		436666	1					
ANR	436700	Identifier	l		436666	0					
ANR	436701	IncDec	++		436666	1					
ANR	436702	PrimaryExpression	0xdd		436666	1					
ANR	436703	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	2761:3:72532:72574	436666	1	True				
ANR	436704	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		436666	0		=			
ANR	436705	ArrayIndexing	data [ l ++ ]		436666	0					
ANR	436706	Identifier	data		436666	0					
ANR	436707	PostIncDecOperationExpression	l ++		436666	1					
ANR	436708	Identifier	l		436666	0					
ANR	436709	IncDec	++		436666	1					
ANR	436710	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		436666	1		|			
ANR	436711	PrimaryExpression	0x20		436666	0					
ANR	436712	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		436666	1					
ANR	436713	MemberAccess	op -> operands [ 0 ] . regs		436666	0					
ANR	436714	ArrayIndexing	op -> operands [ 0 ]		436666	0					
ANR	436715	PtrMemberAccess	op -> operands		436666	0					
ANR	436716	Identifier	op		436666	0					
ANR	436717	Identifier	operands		436666	1					
ANR	436718	PrimaryExpression	0		436666	1					
ANR	436719	Identifier	regs		436666	1					
ANR	436720	PrimaryExpression	0		436666	1					
ANR	436721	ElseStatement	else		436666	0					
ANR	436722	CompoundStatement		8:9:172:172	436666	0					
ANR	436723	ReturnStatement	return - 1 ;	2763:3:72590:72599	436666	0	True				
ANR	436724	UnaryOperationExpression	- 1		436666	0					
ANR	436725	UnaryOperator	-		436666	0					
ANR	436726	PrimaryExpression	1		436666	1					
ANR	436727	BreakStatement	break ;	2765:2:72607:72612	436666	2	True				
ANR	436728	Label	default :	2766:1:72615:72622	436666	3	True				
ANR	436729	Identifier	default		436666	0					
ANR	436730	ReturnStatement	return - 1 ;	2767:2:72626:72635	436666	4	True				
ANR	436731	UnaryOperationExpression	- 1		436666	0					
ANR	436732	UnaryOperator	-		436666	0					
ANR	436733	PrimaryExpression	1		436666	1					
ANR	436734	ReturnStatement	return l ;	2769:1:72641:72649	436666	2	True				
ANR	436735	Identifier	l		436666	0					
ANR	436736	ReturnType	static int		436666	1					
ANR	436737	Identifier	opfrstor		436666	2					
ANR	436738	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436666	3					
ANR	436739	Parameter	RAsm * a	2755:20:72374:72380	436666	0	True				
ANR	436740	ParameterType	RAsm *		436666	0					
ANR	436741	Identifier	a		436666	1					
ANR	436742	Parameter	ut8 * data	2755:29:72383:72391	436666	1	True				
ANR	436743	ParameterType	ut8 *		436666	0					
ANR	436744	Identifier	data		436666	1					
ANR	436745	Parameter	const Opcode * op	2755:40:72394:72409	436666	2	True				
ANR	436746	ParameterType	const Opcode *		436666	0					
ANR	436747	Identifier	op		436666	1					
ANR	436748	CFGEntryNode	ENTRY		436666		True				
ANR	436749	CFGExitNode	EXIT		436666		True				
ANR	436750	Symbol	a		436666						
ANR	436751	Symbol	op		436666						
ANR	436752	Symbol	data		436666						
ANR	436753	Symbol	* op		436666						
ANR	436754	Symbol	* * op -> operands		436666						
ANR	436755	Symbol	l		436666						
ANR	436756	Symbol	* * op		436666						
ANR	436757	Symbol	* op -> operands		436666						
ANR	436758	Symbol	op -> operands_count		436666						
ANR	436759	Symbol	* op -> operands [ 0 ] . regs		436666						
ANR	436760	Symbol	op -> operands [ 0 ] . type		436666						
ANR	436761	Symbol	* * * op		436666						
ANR	436762	Symbol	op -> operands		436666						
ANR	436763	Symbol	OT_MEMORY		436666						
ANR	436764	Symbol	* data		436666						
ANR	436765	Symbol	op -> operands [ 0 ] . regs		436666						
ANR	436766	Function	opfxch	2772:0:72654:73016							
ANR	436767	FunctionDef	"opfxch (RAsm * a , ut8 * data , const Opcode * op)"		436766	0					
ANR	436768	CompoundStatement		2772:56:72710:73016	436766	0					
ANR	436769	IdentifierDeclStatement	int l = 0 ;	2773:1:72713:72722	436766	0	True				
ANR	436770	IdentifierDecl	l = 0		436766	0					
ANR	436771	IdentifierDeclType	int		436766	0					
ANR	436772	Identifier	l		436766	1					
ANR	436773	AssignmentExpression	l = 0		436766	2		=			
ANR	436774	Identifier	l		436766	0					
ANR	436775	PrimaryExpression	0		436766	1					
ANR	436776	SwitchStatement	switch ( op -> operands_count )		436766	1					
ANR	436777	Condition	op -> operands_count	2774:9:72733:72750	436766	0	True				
ANR	436778	PtrMemberAccess	op -> operands_count		436766	0					
ANR	436779	Identifier	op		436766	0					
ANR	436780	Identifier	operands_count		436766	1					
ANR	436781	CompoundStatement		3:29:42:42	436766	1					
ANR	436782	Label	case 0 :	2775:1:72756:72762	436766	0	True				
ANR	436783	ExpressionStatement	data [ l ++ ] = 0xd9	2776:2:72766:72782	436766	1	True				
ANR	436784	AssignmentExpression	data [ l ++ ] = 0xd9		436766	0		=			
ANR	436785	ArrayIndexing	data [ l ++ ]		436766	0					
ANR	436786	Identifier	data		436766	0					
ANR	436787	PostIncDecOperationExpression	l ++		436766	1					
ANR	436788	Identifier	l		436766	0					
ANR	436789	IncDec	++		436766	1					
ANR	436790	PrimaryExpression	0xd9		436766	1					
ANR	436791	ExpressionStatement	data [ l ++ ] = 0xc9	2777:2:72786:72802	436766	2	True				
ANR	436792	AssignmentExpression	data [ l ++ ] = 0xc9		436766	0		=			
ANR	436793	ArrayIndexing	data [ l ++ ]		436766	0					
ANR	436794	Identifier	data		436766	0					
ANR	436795	PostIncDecOperationExpression	l ++		436766	1					
ANR	436796	Identifier	l		436766	0					
ANR	436797	IncDec	++		436766	1					
ANR	436798	PrimaryExpression	0xc9		436766	1					
ANR	436799	BreakStatement	break ;	2778:2:72806:72811	436766	3	True				
ANR	436800	Label	case 1 :	2779:1:72814:72820	436766	4	True				
ANR	436801	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		436766	5					
ANR	436802	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2780:6:72828:72872	436766	0	True				
ANR	436803	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		436766	0		&			
ANR	436804	MemberAccess	op -> operands [ 0 ] . type		436766	0					
ANR	436805	ArrayIndexing	op -> operands [ 0 ]		436766	0					
ANR	436806	PtrMemberAccess	op -> operands		436766	0					
ANR	436807	Identifier	op		436766	0					
ANR	436808	Identifier	operands		436766	1					
ANR	436809	PrimaryExpression	0		436766	1					
ANR	436810	Identifier	type		436766	1					
ANR	436811	BitAndExpression	OT_FPUREG & ~OT_REGALL		436766	1		&			
ANR	436812	Identifier	OT_FPUREG		436766	0					
ANR	436813	Identifier	~OT_REGALL		436766	1					
ANR	436814	CompoundStatement		9:53:164:164	436766	1					
ANR	436815	ExpressionStatement	data [ l ++ ] = 0xd9	2781:3:72880:72896	436766	0	True				
ANR	436816	AssignmentExpression	data [ l ++ ] = 0xd9		436766	0		=			
ANR	436817	ArrayIndexing	data [ l ++ ]		436766	0					
ANR	436818	Identifier	data		436766	0					
ANR	436819	PostIncDecOperationExpression	l ++		436766	1					
ANR	436820	Identifier	l		436766	0					
ANR	436821	IncDec	++		436766	1					
ANR	436822	PrimaryExpression	0xd9		436766	1					
ANR	436823	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	2782:3:72901:72939	436766	1	True				
ANR	436824	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		436766	0		=			
ANR	436825	ArrayIndexing	data [ l ++ ]		436766	0					
ANR	436826	Identifier	data		436766	0					
ANR	436827	PostIncDecOperationExpression	l ++		436766	1					
ANR	436828	Identifier	l		436766	0					
ANR	436829	IncDec	++		436766	1					
ANR	436830	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		436766	1		|			
ANR	436831	PrimaryExpression	0xc8		436766	0					
ANR	436832	MemberAccess	op -> operands [ 0 ] . reg		436766	1					
ANR	436833	ArrayIndexing	op -> operands [ 0 ]		436766	0					
ANR	436834	PtrMemberAccess	op -> operands		436766	0					
ANR	436835	Identifier	op		436766	0					
ANR	436836	Identifier	operands		436766	1					
ANR	436837	PrimaryExpression	0		436766	1					
ANR	436838	Identifier	reg		436766	1					
ANR	436839	ElseStatement	else		436766	0					
ANR	436840	CompoundStatement		12:9:239:239	436766	0					
ANR	436841	ReturnStatement	return - 1 ;	2784:3:72955:72964	436766	0	True				
ANR	436842	UnaryOperationExpression	- 1		436766	0					
ANR	436843	UnaryOperator	-		436766	0					
ANR	436844	PrimaryExpression	1		436766	1					
ANR	436845	BreakStatement	break ;	2786:2:72972:72977	436766	6	True				
ANR	436846	Label	default :	2787:1:72980:72987	436766	7	True				
ANR	436847	Identifier	default		436766	0					
ANR	436848	ReturnStatement	return - 1 ;	2788:2:72991:73000	436766	8	True				
ANR	436849	UnaryOperationExpression	- 1		436766	0					
ANR	436850	UnaryOperator	-		436766	0					
ANR	436851	PrimaryExpression	1		436766	1					
ANR	436852	ReturnStatement	return l ;	2790:1:73006:73014	436766	2	True				
ANR	436853	Identifier	l		436766	0					
ANR	436854	ReturnType	static int		436766	1					
ANR	436855	Identifier	opfxch		436766	2					
ANR	436856	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436766	3					
ANR	436857	Parameter	RAsm * a	2772:18:72672:72678	436766	0	True				
ANR	436858	ParameterType	RAsm *		436766	0					
ANR	436859	Identifier	a		436766	1					
ANR	436860	Parameter	ut8 * data	2772:27:72681:72689	436766	1	True				
ANR	436861	ParameterType	ut8 *		436766	0					
ANR	436862	Identifier	data		436766	1					
ANR	436863	Parameter	const Opcode * op	2772:38:72692:72707	436766	2	True				
ANR	436864	ParameterType	const Opcode *		436766	0					
ANR	436865	Identifier	op		436766	1					
ANR	436866	CFGEntryNode	ENTRY		436766		True				
ANR	436867	CFGExitNode	EXIT		436766		True				
ANR	436868	Symbol	a		436766						
ANR	436869	Symbol	op		436766						
ANR	436870	Symbol	data		436766						
ANR	436871	Symbol	* op		436766						
ANR	436872	Symbol	l		436766						
ANR	436873	Symbol	* * op		436766						
ANR	436874	Symbol	OT_FPUREG		436766						
ANR	436875	Symbol	* op -> operands		436766						
ANR	436876	Symbol	op -> operands_count		436766						
ANR	436877	Symbol	~OT_REGALL		436766						
ANR	436878	Symbol	op -> operands [ 0 ] . type		436766						
ANR	436879	Symbol	op -> operands [ 0 ] . reg		436766						
ANR	436880	Symbol	op -> operands		436766						
ANR	436881	Symbol	* data		436766						
ANR	436882	Function	opfucom	2793:0:73019:73384							
ANR	436883	FunctionDef	"opfucom (RAsm * a , ut8 * data , const Opcode * op)"		436882	0					
ANR	436884	CompoundStatement		2793:57:73076:73384	436882	0					
ANR	436885	IdentifierDeclStatement	int l = 0 ;	2794:1:73079:73088	436882	0	True				
ANR	436886	IdentifierDecl	l = 0		436882	0					
ANR	436887	IdentifierDeclType	int		436882	0					
ANR	436888	Identifier	l		436882	1					
ANR	436889	AssignmentExpression	l = 0		436882	2		=			
ANR	436890	Identifier	l		436882	0					
ANR	436891	PrimaryExpression	0		436882	1					
ANR	436892	SwitchStatement	switch ( op -> operands_count )		436882	1					
ANR	436893	Condition	op -> operands_count	2795:9:73099:73116	436882	0	True				
ANR	436894	PtrMemberAccess	op -> operands_count		436882	0					
ANR	436895	Identifier	op		436882	0					
ANR	436896	Identifier	operands_count		436882	1					
ANR	436897	CompoundStatement		3:29:42:42	436882	1					
ANR	436898	Label	case 1 :	2796:1:73122:73128	436882	0	True				
ANR	436899	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		436882	1					
ANR	436900	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2797:7:73137:73181	436882	0	True				
ANR	436901	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		436882	0		&			
ANR	436902	MemberAccess	op -> operands [ 0 ] . type		436882	0					
ANR	436903	ArrayIndexing	op -> operands [ 0 ]		436882	0					
ANR	436904	PtrMemberAccess	op -> operands		436882	0					
ANR	436905	Identifier	op		436882	0					
ANR	436906	Identifier	operands		436882	1					
ANR	436907	PrimaryExpression	0		436882	1					
ANR	436908	Identifier	type		436882	1					
ANR	436909	BitAndExpression	OT_FPUREG & ~OT_REGALL		436882	1		&			
ANR	436910	Identifier	OT_FPUREG		436882	0					
ANR	436911	Identifier	~OT_REGALL		436882	1					
ANR	436912	CompoundStatement		5:55:108:108	436882	1					
ANR	436913	ExpressionStatement	data [ l ++ ] = 0xdd	2798:3:73190:73206	436882	0	True				
ANR	436914	AssignmentExpression	data [ l ++ ] = 0xdd		436882	0		=			
ANR	436915	ArrayIndexing	data [ l ++ ]		436882	0					
ANR	436916	Identifier	data		436882	0					
ANR	436917	PostIncDecOperationExpression	l ++		436882	1					
ANR	436918	Identifier	l		436882	0					
ANR	436919	IncDec	++		436882	1					
ANR	436920	PrimaryExpression	0xdd		436882	1					
ANR	436921	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	2799:3:73211:73249	436882	1	True				
ANR	436922	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		436882	0		=			
ANR	436923	ArrayIndexing	data [ l ++ ]		436882	0					
ANR	436924	Identifier	data		436882	0					
ANR	436925	PostIncDecOperationExpression	l ++		436882	1					
ANR	436926	Identifier	l		436882	0					
ANR	436927	IncDec	++		436882	1					
ANR	436928	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		436882	1		|			
ANR	436929	PrimaryExpression	0xe0		436882	0					
ANR	436930	MemberAccess	op -> operands [ 0 ] . reg		436882	1					
ANR	436931	ArrayIndexing	op -> operands [ 0 ]		436882	0					
ANR	436932	PtrMemberAccess	op -> operands		436882	0					
ANR	436933	Identifier	op		436882	0					
ANR	436934	Identifier	operands		436882	1					
ANR	436935	PrimaryExpression	0		436882	1					
ANR	436936	Identifier	reg		436882	1					
ANR	436937	ElseStatement	else		436882	0					
ANR	436938	CompoundStatement		8:9:183:183	436882	0					
ANR	436939	ReturnStatement	return - 1 ;	2801:3:73265:73274	436882	0	True				
ANR	436940	UnaryOperationExpression	- 1		436882	0					
ANR	436941	UnaryOperator	-		436882	0					
ANR	436942	PrimaryExpression	1		436882	1					
ANR	436943	BreakStatement	break ;	2803:2:73282:73287	436882	2	True				
ANR	436944	Label	case 0 :	2804:1:73290:73296	436882	3	True				
ANR	436945	ExpressionStatement	data [ l ++ ] = 0xdd	2805:2:73300:73316	436882	4	True				
ANR	436946	AssignmentExpression	data [ l ++ ] = 0xdd		436882	0		=			
ANR	436947	ArrayIndexing	data [ l ++ ]		436882	0					
ANR	436948	Identifier	data		436882	0					
ANR	436949	PostIncDecOperationExpression	l ++		436882	1					
ANR	436950	Identifier	l		436882	0					
ANR	436951	IncDec	++		436882	1					
ANR	436952	PrimaryExpression	0xdd		436882	1					
ANR	436953	ExpressionStatement	data [ l ++ ] = 0xe1	2806:2:73320:73336	436882	5	True				
ANR	436954	AssignmentExpression	data [ l ++ ] = 0xe1		436882	0		=			
ANR	436955	ArrayIndexing	data [ l ++ ]		436882	0					
ANR	436956	Identifier	data		436882	0					
ANR	436957	PostIncDecOperationExpression	l ++		436882	1					
ANR	436958	Identifier	l		436882	0					
ANR	436959	IncDec	++		436882	1					
ANR	436960	PrimaryExpression	0xe1		436882	1					
ANR	436961	BreakStatement	break ;	2807:2:73340:73345	436882	6	True				
ANR	436962	Label	default :	2808:1:73348:73355	436882	7	True				
ANR	436963	Identifier	default		436882	0					
ANR	436964	ReturnStatement	return - 1 ;	2809:2:73359:73368	436882	8	True				
ANR	436965	UnaryOperationExpression	- 1		436882	0					
ANR	436966	UnaryOperator	-		436882	0					
ANR	436967	PrimaryExpression	1		436882	1					
ANR	436968	ReturnStatement	return l ;	2811:1:73374:73382	436882	2	True				
ANR	436969	Identifier	l		436882	0					
ANR	436970	ReturnType	static int		436882	1					
ANR	436971	Identifier	opfucom		436882	2					
ANR	436972	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436882	3					
ANR	436973	Parameter	RAsm * a	2793:19:73038:73044	436882	0	True				
ANR	436974	ParameterType	RAsm *		436882	0					
ANR	436975	Identifier	a		436882	1					
ANR	436976	Parameter	ut8 * data	2793:28:73047:73055	436882	1	True				
ANR	436977	ParameterType	ut8 *		436882	0					
ANR	436978	Identifier	data		436882	1					
ANR	436979	Parameter	const Opcode * op	2793:39:73058:73073	436882	2	True				
ANR	436980	ParameterType	const Opcode *		436882	0					
ANR	436981	Identifier	op		436882	1					
ANR	436982	CFGEntryNode	ENTRY		436882		True				
ANR	436983	CFGExitNode	EXIT		436882		True				
ANR	436984	Symbol	a		436882						
ANR	436985	Symbol	op		436882						
ANR	436986	Symbol	data		436882						
ANR	436987	Symbol	* op		436882						
ANR	436988	Symbol	l		436882						
ANR	436989	Symbol	* * op		436882						
ANR	436990	Symbol	OT_FPUREG		436882						
ANR	436991	Symbol	* op -> operands		436882						
ANR	436992	Symbol	op -> operands_count		436882						
ANR	436993	Symbol	op -> operands [ 0 ] . type		436882						
ANR	436994	Symbol	~OT_REGALL		436882						
ANR	436995	Symbol	op -> operands [ 0 ] . reg		436882						
ANR	436996	Symbol	op -> operands		436882						
ANR	436997	Symbol	* data		436882						
ANR	436998	Function	opfucomp	2814:0:73387:73753							
ANR	436999	FunctionDef	"opfucomp (RAsm * a , ut8 * data , const Opcode * op)"		436998	0					
ANR	437000	CompoundStatement		2814:58:73445:73753	436998	0					
ANR	437001	IdentifierDeclStatement	int l = 0 ;	2815:1:73448:73457	436998	0	True				
ANR	437002	IdentifierDecl	l = 0		436998	0					
ANR	437003	IdentifierDeclType	int		436998	0					
ANR	437004	Identifier	l		436998	1					
ANR	437005	AssignmentExpression	l = 0		436998	2		=			
ANR	437006	Identifier	l		436998	0					
ANR	437007	PrimaryExpression	0		436998	1					
ANR	437008	SwitchStatement	switch ( op -> operands_count )		436998	1					
ANR	437009	Condition	op -> operands_count	2816:9:73468:73485	436998	0	True				
ANR	437010	PtrMemberAccess	op -> operands_count		436998	0					
ANR	437011	Identifier	op		436998	0					
ANR	437012	Identifier	operands_count		436998	1					
ANR	437013	CompoundStatement		3:29:42:42	436998	1					
ANR	437014	Label	case 1 :	2817:1:73491:73497	436998	0	True				
ANR	437015	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		436998	1					
ANR	437016	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2818:7:73506:73550	436998	0	True				
ANR	437017	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		436998	0		&			
ANR	437018	MemberAccess	op -> operands [ 0 ] . type		436998	0					
ANR	437019	ArrayIndexing	op -> operands [ 0 ]		436998	0					
ANR	437020	PtrMemberAccess	op -> operands		436998	0					
ANR	437021	Identifier	op		436998	0					
ANR	437022	Identifier	operands		436998	1					
ANR	437023	PrimaryExpression	0		436998	1					
ANR	437024	Identifier	type		436998	1					
ANR	437025	BitAndExpression	OT_FPUREG & ~OT_REGALL		436998	1		&			
ANR	437026	Identifier	OT_FPUREG		436998	0					
ANR	437027	Identifier	~OT_REGALL		436998	1					
ANR	437028	CompoundStatement		5:55:108:108	436998	1					
ANR	437029	ExpressionStatement	data [ l ++ ] = 0xdd	2819:3:73559:73575	436998	0	True				
ANR	437030	AssignmentExpression	data [ l ++ ] = 0xdd		436998	0		=			
ANR	437031	ArrayIndexing	data [ l ++ ]		436998	0					
ANR	437032	Identifier	data		436998	0					
ANR	437033	PostIncDecOperationExpression	l ++		436998	1					
ANR	437034	Identifier	l		436998	0					
ANR	437035	IncDec	++		436998	1					
ANR	437036	PrimaryExpression	0xdd		436998	1					
ANR	437037	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	2820:3:73580:73618	436998	1	True				
ANR	437038	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		436998	0		=			
ANR	437039	ArrayIndexing	data [ l ++ ]		436998	0					
ANR	437040	Identifier	data		436998	0					
ANR	437041	PostIncDecOperationExpression	l ++		436998	1					
ANR	437042	Identifier	l		436998	0					
ANR	437043	IncDec	++		436998	1					
ANR	437044	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		436998	1		|			
ANR	437045	PrimaryExpression	0xe8		436998	0					
ANR	437046	MemberAccess	op -> operands [ 0 ] . reg		436998	1					
ANR	437047	ArrayIndexing	op -> operands [ 0 ]		436998	0					
ANR	437048	PtrMemberAccess	op -> operands		436998	0					
ANR	437049	Identifier	op		436998	0					
ANR	437050	Identifier	operands		436998	1					
ANR	437051	PrimaryExpression	0		436998	1					
ANR	437052	Identifier	reg		436998	1					
ANR	437053	ElseStatement	else		436998	0					
ANR	437054	CompoundStatement		8:9:183:183	436998	0					
ANR	437055	ReturnStatement	return - 1 ;	2822:3:73634:73643	436998	0	True				
ANR	437056	UnaryOperationExpression	- 1		436998	0					
ANR	437057	UnaryOperator	-		436998	0					
ANR	437058	PrimaryExpression	1		436998	1					
ANR	437059	BreakStatement	break ;	2824:2:73651:73656	436998	2	True				
ANR	437060	Label	case 0 :	2825:1:73659:73665	436998	3	True				
ANR	437061	ExpressionStatement	data [ l ++ ] = 0xdd	2826:2:73669:73685	436998	4	True				
ANR	437062	AssignmentExpression	data [ l ++ ] = 0xdd		436998	0		=			
ANR	437063	ArrayIndexing	data [ l ++ ]		436998	0					
ANR	437064	Identifier	data		436998	0					
ANR	437065	PostIncDecOperationExpression	l ++		436998	1					
ANR	437066	Identifier	l		436998	0					
ANR	437067	IncDec	++		436998	1					
ANR	437068	PrimaryExpression	0xdd		436998	1					
ANR	437069	ExpressionStatement	data [ l ++ ] = 0xe9	2827:2:73689:73705	436998	5	True				
ANR	437070	AssignmentExpression	data [ l ++ ] = 0xe9		436998	0		=			
ANR	437071	ArrayIndexing	data [ l ++ ]		436998	0					
ANR	437072	Identifier	data		436998	0					
ANR	437073	PostIncDecOperationExpression	l ++		436998	1					
ANR	437074	Identifier	l		436998	0					
ANR	437075	IncDec	++		436998	1					
ANR	437076	PrimaryExpression	0xe9		436998	1					
ANR	437077	BreakStatement	break ;	2828:2:73709:73714	436998	6	True				
ANR	437078	Label	default :	2829:1:73717:73724	436998	7	True				
ANR	437079	Identifier	default		436998	0					
ANR	437080	ReturnStatement	return - 1 ;	2830:2:73728:73737	436998	8	True				
ANR	437081	UnaryOperationExpression	- 1		436998	0					
ANR	437082	UnaryOperator	-		436998	0					
ANR	437083	PrimaryExpression	1		436998	1					
ANR	437084	ReturnStatement	return l ;	2832:1:73743:73751	436998	2	True				
ANR	437085	Identifier	l		436998	0					
ANR	437086	ReturnType	static int		436998	1					
ANR	437087	Identifier	opfucomp		436998	2					
ANR	437088	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		436998	3					
ANR	437089	Parameter	RAsm * a	2814:20:73407:73413	436998	0	True				
ANR	437090	ParameterType	RAsm *		436998	0					
ANR	437091	Identifier	a		436998	1					
ANR	437092	Parameter	ut8 * data	2814:29:73416:73424	436998	1	True				
ANR	437093	ParameterType	ut8 *		436998	0					
ANR	437094	Identifier	data		436998	1					
ANR	437095	Parameter	const Opcode * op	2814:40:73427:73442	436998	2	True				
ANR	437096	ParameterType	const Opcode *		436998	0					
ANR	437097	Identifier	op		436998	1					
ANR	437098	CFGEntryNode	ENTRY		436998		True				
ANR	437099	CFGExitNode	EXIT		436998		True				
ANR	437100	Symbol	a		436998						
ANR	437101	Symbol	op		436998						
ANR	437102	Symbol	data		436998						
ANR	437103	Symbol	* op		436998						
ANR	437104	Symbol	l		436998						
ANR	437105	Symbol	* * op		436998						
ANR	437106	Symbol	OT_FPUREG		436998						
ANR	437107	Symbol	* op -> operands		436998						
ANR	437108	Symbol	op -> operands_count		436998						
ANR	437109	Symbol	~OT_REGALL		436998						
ANR	437110	Symbol	op -> operands [ 0 ] . type		436998						
ANR	437111	Symbol	op -> operands [ 0 ] . reg		436998						
ANR	437112	Symbol	op -> operands		436998						
ANR	437113	Symbol	* data		436998						
ANR	437114	Function	opfaddp	2835:0:73756:74205							
ANR	437115	FunctionDef	"opfaddp (RAsm * a , ut8 * data , const Opcode * op)"		437114	0					
ANR	437116	CompoundStatement		2835:57:73813:74205	437114	0					
ANR	437117	IdentifierDeclStatement	int l = 0 ;	2836:1:73816:73825	437114	0	True				
ANR	437118	IdentifierDecl	l = 0		437114	0					
ANR	437119	IdentifierDeclType	int		437114	0					
ANR	437120	Identifier	l		437114	1					
ANR	437121	AssignmentExpression	l = 0		437114	2		=			
ANR	437122	Identifier	l		437114	0					
ANR	437123	PrimaryExpression	0		437114	1					
ANR	437124	SwitchStatement	switch ( op -> operands_count )		437114	1					
ANR	437125	Condition	op -> operands_count	2837:9:73836:73853	437114	0	True				
ANR	437126	PtrMemberAccess	op -> operands_count		437114	0					
ANR	437127	Identifier	op		437114	0					
ANR	437128	Identifier	operands_count		437114	1					
ANR	437129	CompoundStatement		3:29:42:42	437114	1					
ANR	437130	Label	case 2 :	2838:1:73859:73865	437114	0	True				
ANR	437131	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		437114	1					
ANR	437132	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	2839:7:73874:74002	437114	0	True				
ANR	437133	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		437114	0		&&			
ANR	437134	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		437114	0		&			
ANR	437135	MemberAccess	op -> operands [ 0 ] . type		437114	0					
ANR	437136	ArrayIndexing	op -> operands [ 0 ]		437114	0					
ANR	437137	PtrMemberAccess	op -> operands		437114	0					
ANR	437138	Identifier	op		437114	0					
ANR	437139	Identifier	operands		437114	1					
ANR	437140	PrimaryExpression	0		437114	1					
ANR	437141	Identifier	type		437114	1					
ANR	437142	BitAndExpression	OT_FPUREG & ~OT_REGALL		437114	1		&			
ANR	437143	Identifier	OT_FPUREG		437114	0					
ANR	437144	Identifier	~OT_REGALL		437114	1					
ANR	437145	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		437114	1		&&			
ANR	437146	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		437114	0		&			
ANR	437147	MemberAccess	op -> operands [ 1 ] . type		437114	0					
ANR	437148	ArrayIndexing	op -> operands [ 1 ]		437114	0					
ANR	437149	PtrMemberAccess	op -> operands		437114	0					
ANR	437150	Identifier	op		437114	0					
ANR	437151	Identifier	operands		437114	1					
ANR	437152	PrimaryExpression	1		437114	1					
ANR	437153	Identifier	type		437114	1					
ANR	437154	BitAndExpression	OT_FPUREG & ~OT_REGALL		437114	1		&			
ANR	437155	Identifier	OT_FPUREG		437114	0					
ANR	437156	Identifier	~OT_REGALL		437114	1					
ANR	437157	EqualityExpression	op -> operands [ 1 ] . reg == 0		437114	1		==			
ANR	437158	MemberAccess	op -> operands [ 1 ] . reg		437114	0					
ANR	437159	ArrayIndexing	op -> operands [ 1 ]		437114	0					
ANR	437160	PtrMemberAccess	op -> operands		437114	0					
ANR	437161	Identifier	op		437114	0					
ANR	437162	Identifier	operands		437114	1					
ANR	437163	PrimaryExpression	1		437114	1					
ANR	437164	Identifier	reg		437114	1					
ANR	437165	PrimaryExpression	0		437114	1					
ANR	437166	CompoundStatement		6:83:192:192	437114	1					
ANR	437167	ExpressionStatement	data [ l ++ ] = 0xde	2841:3:74011:74027	437114	0	True				
ANR	437168	AssignmentExpression	data [ l ++ ] = 0xde		437114	0		=			
ANR	437169	ArrayIndexing	data [ l ++ ]		437114	0					
ANR	437170	Identifier	data		437114	0					
ANR	437171	PostIncDecOperationExpression	l ++		437114	1					
ANR	437172	Identifier	l		437114	0					
ANR	437173	IncDec	++		437114	1					
ANR	437174	PrimaryExpression	0xde		437114	1					
ANR	437175	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2842:3:74032:74070	437114	1	True				
ANR	437176	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		437114	0		=			
ANR	437177	ArrayIndexing	data [ l ++ ]		437114	0					
ANR	437178	Identifier	data		437114	0					
ANR	437179	PostIncDecOperationExpression	l ++		437114	1					
ANR	437180	Identifier	l		437114	0					
ANR	437181	IncDec	++		437114	1					
ANR	437182	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		437114	1		|			
ANR	437183	PrimaryExpression	0xc0		437114	0					
ANR	437184	MemberAccess	op -> operands [ 0 ] . reg		437114	1					
ANR	437185	ArrayIndexing	op -> operands [ 0 ]		437114	0					
ANR	437186	PtrMemberAccess	op -> operands		437114	0					
ANR	437187	Identifier	op		437114	0					
ANR	437188	Identifier	operands		437114	1					
ANR	437189	PrimaryExpression	0		437114	1					
ANR	437190	Identifier	reg		437114	1					
ANR	437191	ElseStatement	else		437114	0					
ANR	437192	CompoundStatement		9:9:267:267	437114	0					
ANR	437193	ReturnStatement	return - 1 ;	2844:3:74086:74095	437114	0	True				
ANR	437194	UnaryOperationExpression	- 1		437114	0					
ANR	437195	UnaryOperator	-		437114	0					
ANR	437196	PrimaryExpression	1		437114	1					
ANR	437197	BreakStatement	break ;	2846:2:74103:74108	437114	2	True				
ANR	437198	Label	case 0 :	2847:1:74111:74117	437114	3	True				
ANR	437199	ExpressionStatement	data [ l ++ ] = 0xde	2848:2:74121:74137	437114	4	True				
ANR	437200	AssignmentExpression	data [ l ++ ] = 0xde		437114	0		=			
ANR	437201	ArrayIndexing	data [ l ++ ]		437114	0					
ANR	437202	Identifier	data		437114	0					
ANR	437203	PostIncDecOperationExpression	l ++		437114	1					
ANR	437204	Identifier	l		437114	0					
ANR	437205	IncDec	++		437114	1					
ANR	437206	PrimaryExpression	0xde		437114	1					
ANR	437207	ExpressionStatement	data [ l ++ ] = 0xc1	2849:2:74141:74157	437114	5	True				
ANR	437208	AssignmentExpression	data [ l ++ ] = 0xc1		437114	0		=			
ANR	437209	ArrayIndexing	data [ l ++ ]		437114	0					
ANR	437210	Identifier	data		437114	0					
ANR	437211	PostIncDecOperationExpression	l ++		437114	1					
ANR	437212	Identifier	l		437114	0					
ANR	437213	IncDec	++		437114	1					
ANR	437214	PrimaryExpression	0xc1		437114	1					
ANR	437215	BreakStatement	break ;	2850:2:74161:74166	437114	6	True				
ANR	437216	Label	default :	2851:1:74169:74176	437114	7	True				
ANR	437217	Identifier	default		437114	0					
ANR	437218	ReturnStatement	return - 1 ;	2852:2:74180:74189	437114	8	True				
ANR	437219	UnaryOperationExpression	- 1		437114	0					
ANR	437220	UnaryOperator	-		437114	0					
ANR	437221	PrimaryExpression	1		437114	1					
ANR	437222	ReturnStatement	return l ;	2854:1:74195:74203	437114	2	True				
ANR	437223	Identifier	l		437114	0					
ANR	437224	ReturnType	static int		437114	1					
ANR	437225	Identifier	opfaddp		437114	2					
ANR	437226	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		437114	3					
ANR	437227	Parameter	RAsm * a	2835:19:73775:73781	437114	0	True				
ANR	437228	ParameterType	RAsm *		437114	0					
ANR	437229	Identifier	a		437114	1					
ANR	437230	Parameter	ut8 * data	2835:28:73784:73792	437114	1	True				
ANR	437231	ParameterType	ut8 *		437114	0					
ANR	437232	Identifier	data		437114	1					
ANR	437233	Parameter	const Opcode * op	2835:39:73795:73810	437114	2	True				
ANR	437234	ParameterType	const Opcode *		437114	0					
ANR	437235	Identifier	op		437114	1					
ANR	437236	CFGEntryNode	ENTRY		437114		True				
ANR	437237	CFGExitNode	EXIT		437114		True				
ANR	437238	Symbol	a		437114						
ANR	437239	Symbol	op		437114						
ANR	437240	Symbol	data		437114						
ANR	437241	Symbol	* op		437114						
ANR	437242	Symbol	op -> operands [ 1 ] . reg		437114						
ANR	437243	Symbol	l		437114						
ANR	437244	Symbol	* * op		437114						
ANR	437245	Symbol	OT_FPUREG		437114						
ANR	437246	Symbol	* op -> operands		437114						
ANR	437247	Symbol	op -> operands [ 1 ] . type		437114						
ANR	437248	Symbol	op -> operands_count		437114						
ANR	437249	Symbol	op -> operands [ 0 ] . type		437114						
ANR	437250	Symbol	~OT_REGALL		437114						
ANR	437251	Symbol	op -> operands [ 0 ] . reg		437114						
ANR	437252	Symbol	op -> operands		437114						
ANR	437253	Symbol	* data		437114						
ANR	437254	Function	opfiadd	2857:0:74208:74704							
ANR	437255	FunctionDef	"opfiadd (RAsm * a , ut8 * data , const Opcode * op)"		437254	0					
ANR	437256	CompoundStatement		2857:57:74265:74704	437254	0					
ANR	437257	IdentifierDeclStatement	int l = 0 ;	2858:1:74268:74277	437254	0	True				
ANR	437258	IdentifierDecl	l = 0		437254	0					
ANR	437259	IdentifierDeclType	int		437254	0					
ANR	437260	Identifier	l		437254	1					
ANR	437261	AssignmentExpression	l = 0		437254	2		=			
ANR	437262	Identifier	l		437254	0					
ANR	437263	PrimaryExpression	0		437254	1					
ANR	437264	SwitchStatement	switch ( op -> operands_count )		437254	1					
ANR	437265	Condition	op -> operands_count	2859:9:74288:74305	437254	0	True				
ANR	437266	PtrMemberAccess	op -> operands_count		437254	0					
ANR	437267	Identifier	op		437254	0					
ANR	437268	Identifier	operands_count		437254	1					
ANR	437269	CompoundStatement		3:29:42:42	437254	1					
ANR	437270	Label	case 1 :	2860:1:74311:74317	437254	0	True				
ANR	437271	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		437254	1					
ANR	437272	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2861:7:74326:74357	437254	0	True				
ANR	437273	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		437254	0		&			
ANR	437274	MemberAccess	op -> operands [ 0 ] . type		437254	0					
ANR	437275	ArrayIndexing	op -> operands [ 0 ]		437254	0					
ANR	437276	PtrMemberAccess	op -> operands		437254	0					
ANR	437277	Identifier	op		437254	0					
ANR	437278	Identifier	operands		437254	1					
ANR	437279	PrimaryExpression	0		437254	1					
ANR	437280	Identifier	type		437254	1					
ANR	437281	Identifier	OT_MEMORY		437254	1					
ANR	437282	CompoundStatement		5:42:95:95	437254	1					
ANR	437283	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		437254	0					
ANR	437284	Condition	op -> operands [ 0 ] . type & OT_WORD	2862:8:74371:74400	437254	0	True				
ANR	437285	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		437254	0		&			
ANR	437286	MemberAccess	op -> operands [ 0 ] . type		437254	0					
ANR	437287	ArrayIndexing	op -> operands [ 0 ]		437254	0					
ANR	437288	PtrMemberAccess	op -> operands		437254	0					
ANR	437289	Identifier	op		437254	0					
ANR	437290	Identifier	operands		437254	1					
ANR	437291	PrimaryExpression	0		437254	1					
ANR	437292	Identifier	type		437254	1					
ANR	437293	Identifier	OT_WORD		437254	1					
ANR	437294	CompoundStatement		6:41:138:138	437254	1					
ANR	437295	ExpressionStatement	data [ l ++ ] = 0xde	2863:4:74410:74426	437254	0	True				
ANR	437296	AssignmentExpression	data [ l ++ ] = 0xde		437254	0		=			
ANR	437297	ArrayIndexing	data [ l ++ ]		437254	0					
ANR	437298	Identifier	data		437254	0					
ANR	437299	PostIncDecOperationExpression	l ++		437254	1					
ANR	437300	Identifier	l		437254	0					
ANR	437301	IncDec	++		437254	1					
ANR	437302	PrimaryExpression	0xde		437254	1					
ANR	437303	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2864:4:74432:74474	437254	1	True				
ANR	437304	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		437254	0		=			
ANR	437305	ArrayIndexing	data [ l ++ ]		437254	0					
ANR	437306	Identifier	data		437254	0					
ANR	437307	PostIncDecOperationExpression	l ++		437254	1					
ANR	437308	Identifier	l		437254	0					
ANR	437309	IncDec	++		437254	1					
ANR	437310	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		437254	1		|			
ANR	437311	PrimaryExpression	0x00		437254	0					
ANR	437312	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437254	1					
ANR	437313	MemberAccess	op -> operands [ 0 ] . regs		437254	0					
ANR	437314	ArrayIndexing	op -> operands [ 0 ]		437254	0					
ANR	437315	PtrMemberAccess	op -> operands		437254	0					
ANR	437316	Identifier	op		437254	0					
ANR	437317	Identifier	operands		437254	1					
ANR	437318	PrimaryExpression	0		437254	1					
ANR	437319	Identifier	regs		437254	1					
ANR	437320	PrimaryExpression	0		437254	1					
ANR	437321	ElseStatement	else		437254	0					
ANR	437322	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		437254	0					
ANR	437323	Condition	op -> operands [ 0 ] . type & OT_DWORD	2865:15:74491:74521	437254	0	True				
ANR	437324	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		437254	0		&			
ANR	437325	MemberAccess	op -> operands [ 0 ] . type		437254	0					
ANR	437326	ArrayIndexing	op -> operands [ 0 ]		437254	0					
ANR	437327	PtrMemberAccess	op -> operands		437254	0					
ANR	437328	Identifier	op		437254	0					
ANR	437329	Identifier	operands		437254	1					
ANR	437330	PrimaryExpression	0		437254	1					
ANR	437331	Identifier	type		437254	1					
ANR	437332	Identifier	OT_DWORD		437254	1					
ANR	437333	CompoundStatement		9:49:259:259	437254	1					
ANR	437334	ExpressionStatement	data [ l ++ ] = 0xda	2866:4:74531:74547	437254	0	True				
ANR	437335	AssignmentExpression	data [ l ++ ] = 0xda		437254	0		=			
ANR	437336	ArrayIndexing	data [ l ++ ]		437254	0					
ANR	437337	Identifier	data		437254	0					
ANR	437338	PostIncDecOperationExpression	l ++		437254	1					
ANR	437339	Identifier	l		437254	0					
ANR	437340	IncDec	++		437254	1					
ANR	437341	PrimaryExpression	0xda		437254	1					
ANR	437342	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2867:4:74553:74595	437254	1	True				
ANR	437343	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		437254	0		=			
ANR	437344	ArrayIndexing	data [ l ++ ]		437254	0					
ANR	437345	Identifier	data		437254	0					
ANR	437346	PostIncDecOperationExpression	l ++		437254	1					
ANR	437347	Identifier	l		437254	0					
ANR	437348	IncDec	++		437254	1					
ANR	437349	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		437254	1		|			
ANR	437350	PrimaryExpression	0x00		437254	0					
ANR	437351	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437254	1					
ANR	437352	MemberAccess	op -> operands [ 0 ] . regs		437254	0					
ANR	437353	ArrayIndexing	op -> operands [ 0 ]		437254	0					
ANR	437354	PtrMemberAccess	op -> operands		437254	0					
ANR	437355	Identifier	op		437254	0					
ANR	437356	Identifier	operands		437254	1					
ANR	437357	PrimaryExpression	0		437254	1					
ANR	437358	Identifier	regs		437254	1					
ANR	437359	PrimaryExpression	0		437254	1					
ANR	437360	ElseStatement	else		437254	0					
ANR	437361	CompoundStatement		12:10:341:341	437254	0					
ANR	437362	ReturnStatement	return - 1 ;	2869:4:74613:74622	437254	0	True				
ANR	437363	UnaryOperationExpression	- 1		437254	0					
ANR	437364	UnaryOperator	-		437254	0					
ANR	437365	PrimaryExpression	1		437254	1					
ANR	437366	ElseStatement	else		437254	0					
ANR	437367	CompoundStatement		15:9:372:372	437254	0					
ANR	437368	ReturnStatement	return - 1 ;	2872:3:74643:74652	437254	0	True				
ANR	437369	UnaryOperationExpression	- 1		437254	0					
ANR	437370	UnaryOperator	-		437254	0					
ANR	437371	PrimaryExpression	1		437254	1					
ANR	437372	BreakStatement	break ;	2874:2:74660:74665	437254	2	True				
ANR	437373	Label	default :	2875:1:74668:74675	437254	3	True				
ANR	437374	Identifier	default		437254	0					
ANR	437375	ReturnStatement	return - 1 ;	2876:2:74679:74688	437254	4	True				
ANR	437376	UnaryOperationExpression	- 1		437254	0					
ANR	437377	UnaryOperator	-		437254	0					
ANR	437378	PrimaryExpression	1		437254	1					
ANR	437379	ReturnStatement	return l ;	2878:1:74694:74702	437254	2	True				
ANR	437380	Identifier	l		437254	0					
ANR	437381	ReturnType	static int		437254	1					
ANR	437382	Identifier	opfiadd		437254	2					
ANR	437383	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		437254	3					
ANR	437384	Parameter	RAsm * a	2857:19:74227:74233	437254	0	True				
ANR	437385	ParameterType	RAsm *		437254	0					
ANR	437386	Identifier	a		437254	1					
ANR	437387	Parameter	ut8 * data	2857:28:74236:74244	437254	1	True				
ANR	437388	ParameterType	ut8 *		437254	0					
ANR	437389	Identifier	data		437254	1					
ANR	437390	Parameter	const Opcode * op	2857:39:74247:74262	437254	2	True				
ANR	437391	ParameterType	const Opcode *		437254	0					
ANR	437392	Identifier	op		437254	1					
ANR	437393	CFGEntryNode	ENTRY		437254		True				
ANR	437394	CFGExitNode	EXIT		437254		True				
ANR	437395	Symbol	a		437254						
ANR	437396	Symbol	op		437254						
ANR	437397	Symbol	OT_WORD		437254						
ANR	437398	Symbol	data		437254						
ANR	437399	Symbol	* op		437254						
ANR	437400	Symbol	* * op -> operands		437254						
ANR	437401	Symbol	l		437254						
ANR	437402	Symbol	* * op		437254						
ANR	437403	Symbol	* op -> operands		437254						
ANR	437404	Symbol	op -> operands_count		437254						
ANR	437405	Symbol	* op -> operands [ 0 ] . regs		437254						
ANR	437406	Symbol	op -> operands [ 0 ] . type		437254						
ANR	437407	Symbol	* * * op		437254						
ANR	437408	Symbol	op -> operands		437254						
ANR	437409	Symbol	OT_MEMORY		437254						
ANR	437410	Symbol	* data		437254						
ANR	437411	Symbol	op -> operands [ 0 ] . regs		437254						
ANR	437412	Symbol	OT_DWORD		437254						
ANR	437413	Function	opfadd	2881:0:74707:75667							
ANR	437414	FunctionDef	"opfadd (RAsm * a , ut8 * data , const Opcode * op)"		437413	0					
ANR	437415	CompoundStatement		2881:56:74763:75667	437413	0					
ANR	437416	IdentifierDeclStatement	int l = 0 ;	2882:1:74766:74775	437413	0	True				
ANR	437417	IdentifierDecl	l = 0		437413	0					
ANR	437418	IdentifierDeclType	int		437413	0					
ANR	437419	Identifier	l		437413	1					
ANR	437420	AssignmentExpression	l = 0		437413	2		=			
ANR	437421	Identifier	l		437413	0					
ANR	437422	PrimaryExpression	0		437413	1					
ANR	437423	SwitchStatement	switch ( op -> operands_count )		437413	1					
ANR	437424	Condition	op -> operands_count	2883:9:74786:74803	437413	0	True				
ANR	437425	PtrMemberAccess	op -> operands_count		437413	0					
ANR	437426	Identifier	op		437413	0					
ANR	437427	Identifier	operands_count		437413	1					
ANR	437428	CompoundStatement		3:29:42:42	437413	1					
ANR	437429	Label	case 1 :	2884:1:74809:74815	437413	0	True				
ANR	437430	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		437413	1					
ANR	437431	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2885:7:74824:74855	437413	0	True				
ANR	437432	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		437413	0		&			
ANR	437433	MemberAccess	op -> operands [ 0 ] . type		437413	0					
ANR	437434	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437435	PtrMemberAccess	op -> operands		437413	0					
ANR	437436	Identifier	op		437413	0					
ANR	437437	Identifier	operands		437413	1					
ANR	437438	PrimaryExpression	0		437413	1					
ANR	437439	Identifier	type		437413	1					
ANR	437440	Identifier	OT_MEMORY		437413	1					
ANR	437441	CompoundStatement		5:42:95:95	437413	1					
ANR	437442	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		437413	0					
ANR	437443	Condition	op -> operands [ 0 ] . type & OT_QWORD	2886:8:74869:74899	437413	0	True				
ANR	437444	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		437413	0		&			
ANR	437445	MemberAccess	op -> operands [ 0 ] . type		437413	0					
ANR	437446	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437447	PtrMemberAccess	op -> operands		437413	0					
ANR	437448	Identifier	op		437413	0					
ANR	437449	Identifier	operands		437413	1					
ANR	437450	PrimaryExpression	0		437413	1					
ANR	437451	Identifier	type		437413	1					
ANR	437452	Identifier	OT_QWORD		437413	1					
ANR	437453	CompoundStatement		6:42:139:139	437413	1					
ANR	437454	ExpressionStatement	data [ l ++ ] = 0xdc	2887:4:74909:74925	437413	0	True				
ANR	437455	AssignmentExpression	data [ l ++ ] = 0xdc		437413	0		=			
ANR	437456	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437457	Identifier	data		437413	0					
ANR	437458	PostIncDecOperationExpression	l ++		437413	1					
ANR	437459	Identifier	l		437413	0					
ANR	437460	IncDec	++		437413	1					
ANR	437461	PrimaryExpression	0xdc		437413	1					
ANR	437462	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2888:4:74931:74973	437413	1	True				
ANR	437463	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		437413	0		=			
ANR	437464	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437465	Identifier	data		437413	0					
ANR	437466	PostIncDecOperationExpression	l ++		437413	1					
ANR	437467	Identifier	l		437413	0					
ANR	437468	IncDec	++		437413	1					
ANR	437469	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		437413	1		|			
ANR	437470	PrimaryExpression	0x00		437413	0					
ANR	437471	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437413	1					
ANR	437472	MemberAccess	op -> operands [ 0 ] . regs		437413	0					
ANR	437473	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437474	PtrMemberAccess	op -> operands		437413	0					
ANR	437475	Identifier	op		437413	0					
ANR	437476	Identifier	operands		437413	1					
ANR	437477	PrimaryExpression	0		437413	1					
ANR	437478	Identifier	regs		437413	1					
ANR	437479	PrimaryExpression	0		437413	1					
ANR	437480	ElseStatement	else		437413	0					
ANR	437481	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		437413	0					
ANR	437482	Condition	op -> operands [ 0 ] . type & OT_DWORD	2889:15:74990:75020	437413	0	True				
ANR	437483	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		437413	0		&			
ANR	437484	MemberAccess	op -> operands [ 0 ] . type		437413	0					
ANR	437485	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437486	PtrMemberAccess	op -> operands		437413	0					
ANR	437487	Identifier	op		437413	0					
ANR	437488	Identifier	operands		437413	1					
ANR	437489	PrimaryExpression	0		437413	1					
ANR	437490	Identifier	type		437413	1					
ANR	437491	Identifier	OT_DWORD		437413	1					
ANR	437492	CompoundStatement		9:49:260:260	437413	1					
ANR	437493	ExpressionStatement	data [ l ++ ] = 0xd8	2890:4:75030:75046	437413	0	True				
ANR	437494	AssignmentExpression	data [ l ++ ] = 0xd8		437413	0		=			
ANR	437495	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437496	Identifier	data		437413	0					
ANR	437497	PostIncDecOperationExpression	l ++		437413	1					
ANR	437498	Identifier	l		437413	0					
ANR	437499	IncDec	++		437413	1					
ANR	437500	PrimaryExpression	0xd8		437413	1					
ANR	437501	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2891:4:75052:75094	437413	1	True				
ANR	437502	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		437413	0		=			
ANR	437503	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437504	Identifier	data		437413	0					
ANR	437505	PostIncDecOperationExpression	l ++		437413	1					
ANR	437506	Identifier	l		437413	0					
ANR	437507	IncDec	++		437413	1					
ANR	437508	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		437413	1		|			
ANR	437509	PrimaryExpression	0x00		437413	0					
ANR	437510	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437413	1					
ANR	437511	MemberAccess	op -> operands [ 0 ] . regs		437413	0					
ANR	437512	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437513	PtrMemberAccess	op -> operands		437413	0					
ANR	437514	Identifier	op		437413	0					
ANR	437515	Identifier	operands		437413	1					
ANR	437516	PrimaryExpression	0		437413	1					
ANR	437517	Identifier	regs		437413	1					
ANR	437518	PrimaryExpression	0		437413	1					
ANR	437519	ElseStatement	else		437413	0					
ANR	437520	CompoundStatement		12:10:342:342	437413	0					
ANR	437521	ReturnStatement	return - 1 ;	2893:4:75112:75121	437413	0	True				
ANR	437522	UnaryOperationExpression	- 1		437413	0					
ANR	437523	UnaryOperator	-		437413	0					
ANR	437524	PrimaryExpression	1		437413	1					
ANR	437525	ElseStatement	else		437413	0					
ANR	437526	CompoundStatement		15:9:373:373	437413	0					
ANR	437527	ReturnStatement	return - 1 ;	2896:3:75142:75151	437413	0	True				
ANR	437528	UnaryOperationExpression	- 1		437413	0					
ANR	437529	UnaryOperator	-		437413	0					
ANR	437530	PrimaryExpression	1		437413	1					
ANR	437531	BreakStatement	break ;	2898:2:75159:75164	437413	2	True				
ANR	437532	Label	case 2 :	2899:1:75167:75173	437413	3	True				
ANR	437533	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		437413	4					
ANR	437534	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	2900:7:75182:75310	437413	0	True				
ANR	437535	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		437413	0		&&			
ANR	437536	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		437413	0		&			
ANR	437537	MemberAccess	op -> operands [ 0 ] . type		437413	0					
ANR	437538	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437539	PtrMemberAccess	op -> operands		437413	0					
ANR	437540	Identifier	op		437413	0					
ANR	437541	Identifier	operands		437413	1					
ANR	437542	PrimaryExpression	0		437413	1					
ANR	437543	Identifier	type		437413	1					
ANR	437544	BitAndExpression	OT_FPUREG & ~OT_REGALL		437413	1		&			
ANR	437545	Identifier	OT_FPUREG		437413	0					
ANR	437546	Identifier	~OT_REGALL		437413	1					
ANR	437547	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		437413	1		&&			
ANR	437548	EqualityExpression	op -> operands [ 0 ] . reg == 0		437413	0		==			
ANR	437549	MemberAccess	op -> operands [ 0 ] . reg		437413	0					
ANR	437550	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437551	PtrMemberAccess	op -> operands		437413	0					
ANR	437552	Identifier	op		437413	0					
ANR	437553	Identifier	operands		437413	1					
ANR	437554	PrimaryExpression	0		437413	1					
ANR	437555	Identifier	reg		437413	1					
ANR	437556	PrimaryExpression	0		437413	1					
ANR	437557	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		437413	1		&			
ANR	437558	MemberAccess	op -> operands [ 1 ] . type		437413	0					
ANR	437559	ArrayIndexing	op -> operands [ 1 ]		437413	0					
ANR	437560	PtrMemberAccess	op -> operands		437413	0					
ANR	437561	Identifier	op		437413	0					
ANR	437562	Identifier	operands		437413	1					
ANR	437563	PrimaryExpression	1		437413	1					
ANR	437564	Identifier	type		437413	1					
ANR	437565	BitAndExpression	OT_FPUREG & ~OT_REGALL		437413	1		&			
ANR	437566	Identifier	OT_FPUREG		437413	0					
ANR	437567	Identifier	~OT_REGALL		437413	1					
ANR	437568	CompoundStatement		21:55:550:550	437413	1					
ANR	437569	ExpressionStatement	data [ l ++ ] = 0xd8	2902:3:75319:75335	437413	0	True				
ANR	437570	AssignmentExpression	data [ l ++ ] = 0xd8		437413	0		=			
ANR	437571	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437572	Identifier	data		437413	0					
ANR	437573	PostIncDecOperationExpression	l ++		437413	1					
ANR	437574	Identifier	l		437413	0					
ANR	437575	IncDec	++		437413	1					
ANR	437576	PrimaryExpression	0xd8		437413	1					
ANR	437577	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg	2903:3:75340:75378	437413	1	True				
ANR	437578	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg		437413	0		=			
ANR	437579	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437580	Identifier	data		437413	0					
ANR	437581	PostIncDecOperationExpression	l ++		437413	1					
ANR	437582	Identifier	l		437413	0					
ANR	437583	IncDec	++		437413	1					
ANR	437584	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg		437413	1		|			
ANR	437585	PrimaryExpression	0xc0		437413	0					
ANR	437586	MemberAccess	op -> operands [ 1 ] . reg		437413	1					
ANR	437587	ArrayIndexing	op -> operands [ 1 ]		437413	0					
ANR	437588	PtrMemberAccess	op -> operands		437413	0					
ANR	437589	Identifier	op		437413	0					
ANR	437590	Identifier	operands		437413	1					
ANR	437591	PrimaryExpression	1		437413	1					
ANR	437592	Identifier	reg		437413	1					
ANR	437593	ElseStatement	else		437413	0					
ANR	437594	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		437413	0					
ANR	437595	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	2904:14:75394:75522	437413	0	True				
ANR	437596	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		437413	0		&&			
ANR	437597	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		437413	0		&			
ANR	437598	MemberAccess	op -> operands [ 0 ] . type		437413	0					
ANR	437599	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437600	PtrMemberAccess	op -> operands		437413	0					
ANR	437601	Identifier	op		437413	0					
ANR	437602	Identifier	operands		437413	1					
ANR	437603	PrimaryExpression	0		437413	1					
ANR	437604	Identifier	type		437413	1					
ANR	437605	BitAndExpression	OT_FPUREG & ~OT_REGALL		437413	1		&			
ANR	437606	Identifier	OT_FPUREG		437413	0					
ANR	437607	Identifier	~OT_REGALL		437413	1					
ANR	437608	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		437413	1		&&			
ANR	437609	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		437413	0		&			
ANR	437610	MemberAccess	op -> operands [ 1 ] . type		437413	0					
ANR	437611	ArrayIndexing	op -> operands [ 1 ]		437413	0					
ANR	437612	PtrMemberAccess	op -> operands		437413	0					
ANR	437613	Identifier	op		437413	0					
ANR	437614	Identifier	operands		437413	1					
ANR	437615	PrimaryExpression	1		437413	1					
ANR	437616	Identifier	type		437413	1					
ANR	437617	BitAndExpression	OT_FPUREG & ~OT_REGALL		437413	1		&			
ANR	437618	Identifier	OT_FPUREG		437413	0					
ANR	437619	Identifier	~OT_REGALL		437413	1					
ANR	437620	EqualityExpression	op -> operands [ 1 ] . reg == 0		437413	1		==			
ANR	437621	MemberAccess	op -> operands [ 1 ] . reg		437413	0					
ANR	437622	ArrayIndexing	op -> operands [ 1 ]		437413	0					
ANR	437623	PtrMemberAccess	op -> operands		437413	0					
ANR	437624	Identifier	op		437413	0					
ANR	437625	Identifier	operands		437413	1					
ANR	437626	PrimaryExpression	1		437413	1					
ANR	437627	Identifier	reg		437413	1					
ANR	437628	PrimaryExpression	0		437413	1					
ANR	437629	CompoundStatement		25:83:762:762	437413	1					
ANR	437630	ExpressionStatement	data [ l ++ ] = 0xdc	2906:3:75531:75547	437413	0	True				
ANR	437631	AssignmentExpression	data [ l ++ ] = 0xdc		437413	0		=			
ANR	437632	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437633	Identifier	data		437413	0					
ANR	437634	PostIncDecOperationExpression	l ++		437413	1					
ANR	437635	Identifier	l		437413	0					
ANR	437636	IncDec	++		437413	1					
ANR	437637	PrimaryExpression	0xdc		437413	1					
ANR	437638	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2907:3:75552:75590	437413	1	True				
ANR	437639	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		437413	0		=			
ANR	437640	ArrayIndexing	data [ l ++ ]		437413	0					
ANR	437641	Identifier	data		437413	0					
ANR	437642	PostIncDecOperationExpression	l ++		437413	1					
ANR	437643	Identifier	l		437413	0					
ANR	437644	IncDec	++		437413	1					
ANR	437645	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		437413	1		|			
ANR	437646	PrimaryExpression	0xc0		437413	0					
ANR	437647	MemberAccess	op -> operands [ 0 ] . reg		437413	1					
ANR	437648	ArrayIndexing	op -> operands [ 0 ]		437413	0					
ANR	437649	PtrMemberAccess	op -> operands		437413	0					
ANR	437650	Identifier	op		437413	0					
ANR	437651	Identifier	operands		437413	1					
ANR	437652	PrimaryExpression	0		437413	1					
ANR	437653	Identifier	reg		437413	1					
ANR	437654	ElseStatement	else		437413	0					
ANR	437655	CompoundStatement		28:9:837:837	437413	0					
ANR	437656	ReturnStatement	return - 1 ;	2909:3:75606:75615	437413	0	True				
ANR	437657	UnaryOperationExpression	- 1		437413	0					
ANR	437658	UnaryOperator	-		437413	0					
ANR	437659	PrimaryExpression	1		437413	1					
ANR	437660	BreakStatement	break ;	2911:2:75623:75628	437413	5	True				
ANR	437661	Label	default :	2912:1:75631:75638	437413	6	True				
ANR	437662	Identifier	default		437413	0					
ANR	437663	ReturnStatement	return - 1 ;	2913:2:75642:75651	437413	7	True				
ANR	437664	UnaryOperationExpression	- 1		437413	0					
ANR	437665	UnaryOperator	-		437413	0					
ANR	437666	PrimaryExpression	1		437413	1					
ANR	437667	ReturnStatement	return l ;	2915:1:75657:75665	437413	2	True				
ANR	437668	Identifier	l		437413	0					
ANR	437669	ReturnType	static int		437413	1					
ANR	437670	Identifier	opfadd		437413	2					
ANR	437671	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		437413	3					
ANR	437672	Parameter	RAsm * a	2881:18:74725:74731	437413	0	True				
ANR	437673	ParameterType	RAsm *		437413	0					
ANR	437674	Identifier	a		437413	1					
ANR	437675	Parameter	ut8 * data	2881:27:74734:74742	437413	1	True				
ANR	437676	ParameterType	ut8 *		437413	0					
ANR	437677	Identifier	data		437413	1					
ANR	437678	Parameter	const Opcode * op	2881:38:74745:74760	437413	2	True				
ANR	437679	ParameterType	const Opcode *		437413	0					
ANR	437680	Identifier	op		437413	1					
ANR	437681	CFGEntryNode	ENTRY		437413		True				
ANR	437682	CFGExitNode	EXIT		437413		True				
ANR	437683	Symbol	a		437413						
ANR	437684	Symbol	op		437413						
ANR	437685	Symbol	OT_QWORD		437413						
ANR	437686	Symbol	data		437413						
ANR	437687	Symbol	* op		437413						
ANR	437688	Symbol	op -> operands [ 1 ] . reg		437413						
ANR	437689	Symbol	* * op -> operands		437413						
ANR	437690	Symbol	l		437413						
ANR	437691	Symbol	* * op		437413						
ANR	437692	Symbol	OT_FPUREG		437413						
ANR	437693	Symbol	* op -> operands		437413						
ANR	437694	Symbol	op -> operands [ 1 ] . type		437413						
ANR	437695	Symbol	op -> operands_count		437413						
ANR	437696	Symbol	* op -> operands [ 0 ] . regs		437413						
ANR	437697	Symbol	op -> operands [ 0 ] . type		437413						
ANR	437698	Symbol	~OT_REGALL		437413						
ANR	437699	Symbol	* * * op		437413						
ANR	437700	Symbol	op -> operands [ 0 ] . reg		437413						
ANR	437701	Symbol	op -> operands		437413						
ANR	437702	Symbol	OT_MEMORY		437413						
ANR	437703	Symbol	* data		437413						
ANR	437704	Symbol	op -> operands [ 0 ] . regs		437413						
ANR	437705	Symbol	OT_DWORD		437413						
ANR	437706	Function	opficom	2918:0:75670:76166							
ANR	437707	FunctionDef	"opficom (RAsm * a , ut8 * data , const Opcode * op)"		437706	0					
ANR	437708	CompoundStatement		2918:57:75727:76166	437706	0					
ANR	437709	IdentifierDeclStatement	int l = 0 ;	2919:1:75730:75739	437706	0	True				
ANR	437710	IdentifierDecl	l = 0		437706	0					
ANR	437711	IdentifierDeclType	int		437706	0					
ANR	437712	Identifier	l		437706	1					
ANR	437713	AssignmentExpression	l = 0		437706	2		=			
ANR	437714	Identifier	l		437706	0					
ANR	437715	PrimaryExpression	0		437706	1					
ANR	437716	SwitchStatement	switch ( op -> operands_count )		437706	1					
ANR	437717	Condition	op -> operands_count	2920:9:75750:75767	437706	0	True				
ANR	437718	PtrMemberAccess	op -> operands_count		437706	0					
ANR	437719	Identifier	op		437706	0					
ANR	437720	Identifier	operands_count		437706	1					
ANR	437721	CompoundStatement		3:29:42:42	437706	1					
ANR	437722	Label	case 1 :	2921:1:75773:75779	437706	0	True				
ANR	437723	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		437706	1					
ANR	437724	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2922:7:75788:75819	437706	0	True				
ANR	437725	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		437706	0		&			
ANR	437726	MemberAccess	op -> operands [ 0 ] . type		437706	0					
ANR	437727	ArrayIndexing	op -> operands [ 0 ]		437706	0					
ANR	437728	PtrMemberAccess	op -> operands		437706	0					
ANR	437729	Identifier	op		437706	0					
ANR	437730	Identifier	operands		437706	1					
ANR	437731	PrimaryExpression	0		437706	1					
ANR	437732	Identifier	type		437706	1					
ANR	437733	Identifier	OT_MEMORY		437706	1					
ANR	437734	CompoundStatement		5:42:95:95	437706	1					
ANR	437735	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		437706	0					
ANR	437736	Condition	op -> operands [ 0 ] . type & OT_WORD	2923:8:75833:75862	437706	0	True				
ANR	437737	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		437706	0		&			
ANR	437738	MemberAccess	op -> operands [ 0 ] . type		437706	0					
ANR	437739	ArrayIndexing	op -> operands [ 0 ]		437706	0					
ANR	437740	PtrMemberAccess	op -> operands		437706	0					
ANR	437741	Identifier	op		437706	0					
ANR	437742	Identifier	operands		437706	1					
ANR	437743	PrimaryExpression	0		437706	1					
ANR	437744	Identifier	type		437706	1					
ANR	437745	Identifier	OT_WORD		437706	1					
ANR	437746	CompoundStatement		6:41:138:138	437706	1					
ANR	437747	ExpressionStatement	data [ l ++ ] = 0xde	2924:4:75872:75888	437706	0	True				
ANR	437748	AssignmentExpression	data [ l ++ ] = 0xde		437706	0		=			
ANR	437749	ArrayIndexing	data [ l ++ ]		437706	0					
ANR	437750	Identifier	data		437706	0					
ANR	437751	PostIncDecOperationExpression	l ++		437706	1					
ANR	437752	Identifier	l		437706	0					
ANR	437753	IncDec	++		437706	1					
ANR	437754	PrimaryExpression	0xde		437706	1					
ANR	437755	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	2925:4:75894:75936	437706	1	True				
ANR	437756	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		437706	0		=			
ANR	437757	ArrayIndexing	data [ l ++ ]		437706	0					
ANR	437758	Identifier	data		437706	0					
ANR	437759	PostIncDecOperationExpression	l ++		437706	1					
ANR	437760	Identifier	l		437706	0					
ANR	437761	IncDec	++		437706	1					
ANR	437762	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		437706	1		|			
ANR	437763	PrimaryExpression	0x10		437706	0					
ANR	437764	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437706	1					
ANR	437765	MemberAccess	op -> operands [ 0 ] . regs		437706	0					
ANR	437766	ArrayIndexing	op -> operands [ 0 ]		437706	0					
ANR	437767	PtrMemberAccess	op -> operands		437706	0					
ANR	437768	Identifier	op		437706	0					
ANR	437769	Identifier	operands		437706	1					
ANR	437770	PrimaryExpression	0		437706	1					
ANR	437771	Identifier	regs		437706	1					
ANR	437772	PrimaryExpression	0		437706	1					
ANR	437773	ElseStatement	else		437706	0					
ANR	437774	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		437706	0					
ANR	437775	Condition	op -> operands [ 0 ] . type & OT_DWORD	2926:15:75953:75983	437706	0	True				
ANR	437776	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		437706	0		&			
ANR	437777	MemberAccess	op -> operands [ 0 ] . type		437706	0					
ANR	437778	ArrayIndexing	op -> operands [ 0 ]		437706	0					
ANR	437779	PtrMemberAccess	op -> operands		437706	0					
ANR	437780	Identifier	op		437706	0					
ANR	437781	Identifier	operands		437706	1					
ANR	437782	PrimaryExpression	0		437706	1					
ANR	437783	Identifier	type		437706	1					
ANR	437784	Identifier	OT_DWORD		437706	1					
ANR	437785	CompoundStatement		9:49:259:259	437706	1					
ANR	437786	ExpressionStatement	data [ l ++ ] = 0xda	2927:4:75993:76009	437706	0	True				
ANR	437787	AssignmentExpression	data [ l ++ ] = 0xda		437706	0		=			
ANR	437788	ArrayIndexing	data [ l ++ ]		437706	0					
ANR	437789	Identifier	data		437706	0					
ANR	437790	PostIncDecOperationExpression	l ++		437706	1					
ANR	437791	Identifier	l		437706	0					
ANR	437792	IncDec	++		437706	1					
ANR	437793	PrimaryExpression	0xda		437706	1					
ANR	437794	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	2928:4:76015:76057	437706	1	True				
ANR	437795	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		437706	0		=			
ANR	437796	ArrayIndexing	data [ l ++ ]		437706	0					
ANR	437797	Identifier	data		437706	0					
ANR	437798	PostIncDecOperationExpression	l ++		437706	1					
ANR	437799	Identifier	l		437706	0					
ANR	437800	IncDec	++		437706	1					
ANR	437801	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		437706	1		|			
ANR	437802	PrimaryExpression	0x10		437706	0					
ANR	437803	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437706	1					
ANR	437804	MemberAccess	op -> operands [ 0 ] . regs		437706	0					
ANR	437805	ArrayIndexing	op -> operands [ 0 ]		437706	0					
ANR	437806	PtrMemberAccess	op -> operands		437706	0					
ANR	437807	Identifier	op		437706	0					
ANR	437808	Identifier	operands		437706	1					
ANR	437809	PrimaryExpression	0		437706	1					
ANR	437810	Identifier	regs		437706	1					
ANR	437811	PrimaryExpression	0		437706	1					
ANR	437812	ElseStatement	else		437706	0					
ANR	437813	CompoundStatement		12:10:341:341	437706	0					
ANR	437814	ReturnStatement	return - 1 ;	2930:4:76075:76084	437706	0	True				
ANR	437815	UnaryOperationExpression	- 1		437706	0					
ANR	437816	UnaryOperator	-		437706	0					
ANR	437817	PrimaryExpression	1		437706	1					
ANR	437818	ElseStatement	else		437706	0					
ANR	437819	CompoundStatement		15:9:372:372	437706	0					
ANR	437820	ReturnStatement	return - 1 ;	2933:3:76105:76114	437706	0	True				
ANR	437821	UnaryOperationExpression	- 1		437706	0					
ANR	437822	UnaryOperator	-		437706	0					
ANR	437823	PrimaryExpression	1		437706	1					
ANR	437824	BreakStatement	break ;	2935:2:76122:76127	437706	2	True				
ANR	437825	Label	default :	2936:1:76130:76137	437706	3	True				
ANR	437826	Identifier	default		437706	0					
ANR	437827	ReturnStatement	return - 1 ;	2937:2:76141:76150	437706	4	True				
ANR	437828	UnaryOperationExpression	- 1		437706	0					
ANR	437829	UnaryOperator	-		437706	0					
ANR	437830	PrimaryExpression	1		437706	1					
ANR	437831	ReturnStatement	return l ;	2939:1:76156:76164	437706	2	True				
ANR	437832	Identifier	l		437706	0					
ANR	437833	ReturnType	static int		437706	1					
ANR	437834	Identifier	opficom		437706	2					
ANR	437835	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		437706	3					
ANR	437836	Parameter	RAsm * a	2918:19:75689:75695	437706	0	True				
ANR	437837	ParameterType	RAsm *		437706	0					
ANR	437838	Identifier	a		437706	1					
ANR	437839	Parameter	ut8 * data	2918:28:75698:75706	437706	1	True				
ANR	437840	ParameterType	ut8 *		437706	0					
ANR	437841	Identifier	data		437706	1					
ANR	437842	Parameter	const Opcode * op	2918:39:75709:75724	437706	2	True				
ANR	437843	ParameterType	const Opcode *		437706	0					
ANR	437844	Identifier	op		437706	1					
ANR	437845	CFGEntryNode	ENTRY		437706		True				
ANR	437846	CFGExitNode	EXIT		437706		True				
ANR	437847	Symbol	a		437706						
ANR	437848	Symbol	op		437706						
ANR	437849	Symbol	OT_WORD		437706						
ANR	437850	Symbol	data		437706						
ANR	437851	Symbol	* op		437706						
ANR	437852	Symbol	* * op -> operands		437706						
ANR	437853	Symbol	l		437706						
ANR	437854	Symbol	* * op		437706						
ANR	437855	Symbol	* op -> operands		437706						
ANR	437856	Symbol	op -> operands_count		437706						
ANR	437857	Symbol	* op -> operands [ 0 ] . regs		437706						
ANR	437858	Symbol	op -> operands [ 0 ] . type		437706						
ANR	437859	Symbol	* * * op		437706						
ANR	437860	Symbol	op -> operands		437706						
ANR	437861	Symbol	OT_MEMORY		437706						
ANR	437862	Symbol	* data		437706						
ANR	437863	Symbol	op -> operands [ 0 ] . regs		437706						
ANR	437864	Symbol	OT_DWORD		437706						
ANR	437865	Function	opficomp	2942:0:76169:76666							
ANR	437866	FunctionDef	"opficomp (RAsm * a , ut8 * data , const Opcode * op)"		437865	0					
ANR	437867	CompoundStatement		2942:58:76227:76666	437865	0					
ANR	437868	IdentifierDeclStatement	int l = 0 ;	2943:1:76230:76239	437865	0	True				
ANR	437869	IdentifierDecl	l = 0		437865	0					
ANR	437870	IdentifierDeclType	int		437865	0					
ANR	437871	Identifier	l		437865	1					
ANR	437872	AssignmentExpression	l = 0		437865	2		=			
ANR	437873	Identifier	l		437865	0					
ANR	437874	PrimaryExpression	0		437865	1					
ANR	437875	SwitchStatement	switch ( op -> operands_count )		437865	1					
ANR	437876	Condition	op -> operands_count	2944:9:76250:76267	437865	0	True				
ANR	437877	PtrMemberAccess	op -> operands_count		437865	0					
ANR	437878	Identifier	op		437865	0					
ANR	437879	Identifier	operands_count		437865	1					
ANR	437880	CompoundStatement		3:29:42:42	437865	1					
ANR	437881	Label	case 1 :	2945:1:76273:76279	437865	0	True				
ANR	437882	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		437865	1					
ANR	437883	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2946:7:76288:76319	437865	0	True				
ANR	437884	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		437865	0		&			
ANR	437885	MemberAccess	op -> operands [ 0 ] . type		437865	0					
ANR	437886	ArrayIndexing	op -> operands [ 0 ]		437865	0					
ANR	437887	PtrMemberAccess	op -> operands		437865	0					
ANR	437888	Identifier	op		437865	0					
ANR	437889	Identifier	operands		437865	1					
ANR	437890	PrimaryExpression	0		437865	1					
ANR	437891	Identifier	type		437865	1					
ANR	437892	Identifier	OT_MEMORY		437865	1					
ANR	437893	CompoundStatement		5:42:95:95	437865	1					
ANR	437894	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		437865	0					
ANR	437895	Condition	op -> operands [ 0 ] . type & OT_WORD	2947:8:76333:76362	437865	0	True				
ANR	437896	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		437865	0		&			
ANR	437897	MemberAccess	op -> operands [ 0 ] . type		437865	0					
ANR	437898	ArrayIndexing	op -> operands [ 0 ]		437865	0					
ANR	437899	PtrMemberAccess	op -> operands		437865	0					
ANR	437900	Identifier	op		437865	0					
ANR	437901	Identifier	operands		437865	1					
ANR	437902	PrimaryExpression	0		437865	1					
ANR	437903	Identifier	type		437865	1					
ANR	437904	Identifier	OT_WORD		437865	1					
ANR	437905	CompoundStatement		6:41:138:138	437865	1					
ANR	437906	ExpressionStatement	data [ l ++ ] = 0xde	2948:4:76372:76388	437865	0	True				
ANR	437907	AssignmentExpression	data [ l ++ ] = 0xde		437865	0		=			
ANR	437908	ArrayIndexing	data [ l ++ ]		437865	0					
ANR	437909	Identifier	data		437865	0					
ANR	437910	PostIncDecOperationExpression	l ++		437865	1					
ANR	437911	Identifier	l		437865	0					
ANR	437912	IncDec	++		437865	1					
ANR	437913	PrimaryExpression	0xde		437865	1					
ANR	437914	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	2949:4:76394:76436	437865	1	True				
ANR	437915	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		437865	0		=			
ANR	437916	ArrayIndexing	data [ l ++ ]		437865	0					
ANR	437917	Identifier	data		437865	0					
ANR	437918	PostIncDecOperationExpression	l ++		437865	1					
ANR	437919	Identifier	l		437865	0					
ANR	437920	IncDec	++		437865	1					
ANR	437921	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		437865	1		|			
ANR	437922	PrimaryExpression	0x18		437865	0					
ANR	437923	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437865	1					
ANR	437924	MemberAccess	op -> operands [ 0 ] . regs		437865	0					
ANR	437925	ArrayIndexing	op -> operands [ 0 ]		437865	0					
ANR	437926	PtrMemberAccess	op -> operands		437865	0					
ANR	437927	Identifier	op		437865	0					
ANR	437928	Identifier	operands		437865	1					
ANR	437929	PrimaryExpression	0		437865	1					
ANR	437930	Identifier	regs		437865	1					
ANR	437931	PrimaryExpression	0		437865	1					
ANR	437932	ElseStatement	else		437865	0					
ANR	437933	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		437865	0					
ANR	437934	Condition	op -> operands [ 0 ] . type & OT_DWORD	2950:15:76453:76483	437865	0	True				
ANR	437935	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		437865	0		&			
ANR	437936	MemberAccess	op -> operands [ 0 ] . type		437865	0					
ANR	437937	ArrayIndexing	op -> operands [ 0 ]		437865	0					
ANR	437938	PtrMemberAccess	op -> operands		437865	0					
ANR	437939	Identifier	op		437865	0					
ANR	437940	Identifier	operands		437865	1					
ANR	437941	PrimaryExpression	0		437865	1					
ANR	437942	Identifier	type		437865	1					
ANR	437943	Identifier	OT_DWORD		437865	1					
ANR	437944	CompoundStatement		9:49:259:259	437865	1					
ANR	437945	ExpressionStatement	data [ l ++ ] = 0xda	2951:4:76493:76509	437865	0	True				
ANR	437946	AssignmentExpression	data [ l ++ ] = 0xda		437865	0		=			
ANR	437947	ArrayIndexing	data [ l ++ ]		437865	0					
ANR	437948	Identifier	data		437865	0					
ANR	437949	PostIncDecOperationExpression	l ++		437865	1					
ANR	437950	Identifier	l		437865	0					
ANR	437951	IncDec	++		437865	1					
ANR	437952	PrimaryExpression	0xda		437865	1					
ANR	437953	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	2952:4:76515:76557	437865	1	True				
ANR	437954	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		437865	0		=			
ANR	437955	ArrayIndexing	data [ l ++ ]		437865	0					
ANR	437956	Identifier	data		437865	0					
ANR	437957	PostIncDecOperationExpression	l ++		437865	1					
ANR	437958	Identifier	l		437865	0					
ANR	437959	IncDec	++		437865	1					
ANR	437960	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		437865	1		|			
ANR	437961	PrimaryExpression	0x18		437865	0					
ANR	437962	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		437865	1					
ANR	437963	MemberAccess	op -> operands [ 0 ] . regs		437865	0					
ANR	437964	ArrayIndexing	op -> operands [ 0 ]		437865	0					
ANR	437965	PtrMemberAccess	op -> operands		437865	0					
ANR	437966	Identifier	op		437865	0					
ANR	437967	Identifier	operands		437865	1					
ANR	437968	PrimaryExpression	0		437865	1					
ANR	437969	Identifier	regs		437865	1					
ANR	437970	PrimaryExpression	0		437865	1					
ANR	437971	ElseStatement	else		437865	0					
ANR	437972	CompoundStatement		12:10:341:341	437865	0					
ANR	437973	ReturnStatement	return - 1 ;	2954:4:76575:76584	437865	0	True				
ANR	437974	UnaryOperationExpression	- 1		437865	0					
ANR	437975	UnaryOperator	-		437865	0					
ANR	437976	PrimaryExpression	1		437865	1					
ANR	437977	ElseStatement	else		437865	0					
ANR	437978	CompoundStatement		15:9:372:372	437865	0					
ANR	437979	ReturnStatement	return - 1 ;	2957:3:76605:76614	437865	0	True				
ANR	437980	UnaryOperationExpression	- 1		437865	0					
ANR	437981	UnaryOperator	-		437865	0					
ANR	437982	PrimaryExpression	1		437865	1					
ANR	437983	BreakStatement	break ;	2959:2:76622:76627	437865	2	True				
ANR	437984	Label	default :	2960:1:76630:76637	437865	3	True				
ANR	437985	Identifier	default		437865	0					
ANR	437986	ReturnStatement	return - 1 ;	2961:2:76641:76650	437865	4	True				
ANR	437987	UnaryOperationExpression	- 1		437865	0					
ANR	437988	UnaryOperator	-		437865	0					
ANR	437989	PrimaryExpression	1		437865	1					
ANR	437990	ReturnStatement	return l ;	2963:1:76656:76664	437865	2	True				
ANR	437991	Identifier	l		437865	0					
ANR	437992	ReturnType	static int		437865	1					
ANR	437993	Identifier	opficomp		437865	2					
ANR	437994	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		437865	3					
ANR	437995	Parameter	RAsm * a	2942:20:76189:76195	437865	0	True				
ANR	437996	ParameterType	RAsm *		437865	0					
ANR	437997	Identifier	a		437865	1					
ANR	437998	Parameter	ut8 * data	2942:29:76198:76206	437865	1	True				
ANR	437999	ParameterType	ut8 *		437865	0					
ANR	438000	Identifier	data		437865	1					
ANR	438001	Parameter	const Opcode * op	2942:40:76209:76224	437865	2	True				
ANR	438002	ParameterType	const Opcode *		437865	0					
ANR	438003	Identifier	op		437865	1					
ANR	438004	CFGEntryNode	ENTRY		437865		True				
ANR	438005	CFGExitNode	EXIT		437865		True				
ANR	438006	Symbol	a		437865						
ANR	438007	Symbol	op		437865						
ANR	438008	Symbol	OT_WORD		437865						
ANR	438009	Symbol	data		437865						
ANR	438010	Symbol	* op		437865						
ANR	438011	Symbol	* * op -> operands		437865						
ANR	438012	Symbol	l		437865						
ANR	438013	Symbol	* * op		437865						
ANR	438014	Symbol	* op -> operands		437865						
ANR	438015	Symbol	op -> operands_count		437865						
ANR	438016	Symbol	* op -> operands [ 0 ] . regs		437865						
ANR	438017	Symbol	op -> operands [ 0 ] . type		437865						
ANR	438018	Symbol	* * * op		437865						
ANR	438019	Symbol	op -> operands		437865						
ANR	438020	Symbol	OT_MEMORY		437865						
ANR	438021	Symbol	* data		437865						
ANR	438022	Symbol	op -> operands [ 0 ] . regs		437865						
ANR	438023	Symbol	OT_DWORD		437865						
ANR	438024	Function	opfild	2966:0:76669:77285							
ANR	438025	FunctionDef	"opfild (RAsm * a , ut8 * data , const Opcode * op)"		438024	0					
ANR	438026	CompoundStatement		2966:56:76725:77285	438024	0					
ANR	438027	IdentifierDeclStatement	int l = 0 ;	2967:1:76728:76737	438024	0	True				
ANR	438028	IdentifierDecl	l = 0		438024	0					
ANR	438029	IdentifierDeclType	int		438024	0					
ANR	438030	Identifier	l		438024	1					
ANR	438031	AssignmentExpression	l = 0		438024	2		=			
ANR	438032	Identifier	l		438024	0					
ANR	438033	PrimaryExpression	0		438024	1					
ANR	438034	SwitchStatement	switch ( op -> operands_count )		438024	1					
ANR	438035	Condition	op -> operands_count	2968:9:76748:76765	438024	0	True				
ANR	438036	PtrMemberAccess	op -> operands_count		438024	0					
ANR	438037	Identifier	op		438024	0					
ANR	438038	Identifier	operands_count		438024	1					
ANR	438039	CompoundStatement		3:29:42:42	438024	1					
ANR	438040	Label	case 1 :	2969:1:76771:76777	438024	0	True				
ANR	438041	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		438024	1					
ANR	438042	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2970:7:76786:76817	438024	0	True				
ANR	438043	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438024	0		&			
ANR	438044	MemberAccess	op -> operands [ 0 ] . type		438024	0					
ANR	438045	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438046	PtrMemberAccess	op -> operands		438024	0					
ANR	438047	Identifier	op		438024	0					
ANR	438048	Identifier	operands		438024	1					
ANR	438049	PrimaryExpression	0		438024	1					
ANR	438050	Identifier	type		438024	1					
ANR	438051	Identifier	OT_MEMORY		438024	1					
ANR	438052	CompoundStatement		5:42:95:95	438024	1					
ANR	438053	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		438024	0					
ANR	438054	Condition	op -> operands [ 0 ] . type & OT_WORD	2971:8:76831:76860	438024	0	True				
ANR	438055	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		438024	0		&			
ANR	438056	MemberAccess	op -> operands [ 0 ] . type		438024	0					
ANR	438057	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438058	PtrMemberAccess	op -> operands		438024	0					
ANR	438059	Identifier	op		438024	0					
ANR	438060	Identifier	operands		438024	1					
ANR	438061	PrimaryExpression	0		438024	1					
ANR	438062	Identifier	type		438024	1					
ANR	438063	Identifier	OT_WORD		438024	1					
ANR	438064	CompoundStatement		6:41:138:138	438024	1					
ANR	438065	ExpressionStatement	data [ l ++ ] = 0xdf	2972:4:76870:76886	438024	0	True				
ANR	438066	AssignmentExpression	data [ l ++ ] = 0xdf		438024	0		=			
ANR	438067	ArrayIndexing	data [ l ++ ]		438024	0					
ANR	438068	Identifier	data		438024	0					
ANR	438069	PostIncDecOperationExpression	l ++		438024	1					
ANR	438070	Identifier	l		438024	0					
ANR	438071	IncDec	++		438024	1					
ANR	438072	PrimaryExpression	0xdf		438024	1					
ANR	438073	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2973:4:76892:76934	438024	1	True				
ANR	438074	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		438024	0		=			
ANR	438075	ArrayIndexing	data [ l ++ ]		438024	0					
ANR	438076	Identifier	data		438024	0					
ANR	438077	PostIncDecOperationExpression	l ++		438024	1					
ANR	438078	Identifier	l		438024	0					
ANR	438079	IncDec	++		438024	1					
ANR	438080	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		438024	1		|			
ANR	438081	PrimaryExpression	0x00		438024	0					
ANR	438082	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438024	1					
ANR	438083	MemberAccess	op -> operands [ 0 ] . regs		438024	0					
ANR	438084	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438085	PtrMemberAccess	op -> operands		438024	0					
ANR	438086	Identifier	op		438024	0					
ANR	438087	Identifier	operands		438024	1					
ANR	438088	PrimaryExpression	0		438024	1					
ANR	438089	Identifier	regs		438024	1					
ANR	438090	PrimaryExpression	0		438024	1					
ANR	438091	ElseStatement	else		438024	0					
ANR	438092	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		438024	0					
ANR	438093	Condition	op -> operands [ 0 ] . type & OT_DWORD	2974:15:76951:76981	438024	0	True				
ANR	438094	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		438024	0		&			
ANR	438095	MemberAccess	op -> operands [ 0 ] . type		438024	0					
ANR	438096	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438097	PtrMemberAccess	op -> operands		438024	0					
ANR	438098	Identifier	op		438024	0					
ANR	438099	Identifier	operands		438024	1					
ANR	438100	PrimaryExpression	0		438024	1					
ANR	438101	Identifier	type		438024	1					
ANR	438102	Identifier	OT_DWORD		438024	1					
ANR	438103	CompoundStatement		9:49:259:259	438024	1					
ANR	438104	ExpressionStatement	data [ l ++ ] = 0xdb	2975:4:76991:77007	438024	0	True				
ANR	438105	AssignmentExpression	data [ l ++ ] = 0xdb		438024	0		=			
ANR	438106	ArrayIndexing	data [ l ++ ]		438024	0					
ANR	438107	Identifier	data		438024	0					
ANR	438108	PostIncDecOperationExpression	l ++		438024	1					
ANR	438109	Identifier	l		438024	0					
ANR	438110	IncDec	++		438024	1					
ANR	438111	PrimaryExpression	0xdb		438024	1					
ANR	438112	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2976:4:77013:77055	438024	1	True				
ANR	438113	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		438024	0		=			
ANR	438114	ArrayIndexing	data [ l ++ ]		438024	0					
ANR	438115	Identifier	data		438024	0					
ANR	438116	PostIncDecOperationExpression	l ++		438024	1					
ANR	438117	Identifier	l		438024	0					
ANR	438118	IncDec	++		438024	1					
ANR	438119	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		438024	1		|			
ANR	438120	PrimaryExpression	0x00		438024	0					
ANR	438121	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438024	1					
ANR	438122	MemberAccess	op -> operands [ 0 ] . regs		438024	0					
ANR	438123	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438124	PtrMemberAccess	op -> operands		438024	0					
ANR	438125	Identifier	op		438024	0					
ANR	438126	Identifier	operands		438024	1					
ANR	438127	PrimaryExpression	0		438024	1					
ANR	438128	Identifier	regs		438024	1					
ANR	438129	PrimaryExpression	0		438024	1					
ANR	438130	ElseStatement	else		438024	0					
ANR	438131	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		438024	0					
ANR	438132	Condition	op -> operands [ 0 ] . type & OT_QWORD	2977:15:77072:77102	438024	0	True				
ANR	438133	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		438024	0		&			
ANR	438134	MemberAccess	op -> operands [ 0 ] . type		438024	0					
ANR	438135	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438136	PtrMemberAccess	op -> operands		438024	0					
ANR	438137	Identifier	op		438024	0					
ANR	438138	Identifier	operands		438024	1					
ANR	438139	PrimaryExpression	0		438024	1					
ANR	438140	Identifier	type		438024	1					
ANR	438141	Identifier	OT_QWORD		438024	1					
ANR	438142	CompoundStatement		12:49:380:380	438024	1					
ANR	438143	ExpressionStatement	data [ l ++ ] = 0xdf	2978:4:77112:77128	438024	0	True				
ANR	438144	AssignmentExpression	data [ l ++ ] = 0xdf		438024	0		=			
ANR	438145	ArrayIndexing	data [ l ++ ]		438024	0					
ANR	438146	Identifier	data		438024	0					
ANR	438147	PostIncDecOperationExpression	l ++		438024	1					
ANR	438148	Identifier	l		438024	0					
ANR	438149	IncDec	++		438024	1					
ANR	438150	PrimaryExpression	0xdf		438024	1					
ANR	438151	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	2979:4:77134:77176	438024	1	True				
ANR	438152	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		438024	0		=			
ANR	438153	ArrayIndexing	data [ l ++ ]		438024	0					
ANR	438154	Identifier	data		438024	0					
ANR	438155	PostIncDecOperationExpression	l ++		438024	1					
ANR	438156	Identifier	l		438024	0					
ANR	438157	IncDec	++		438024	1					
ANR	438158	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		438024	1		|			
ANR	438159	PrimaryExpression	0x28		438024	0					
ANR	438160	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438024	1					
ANR	438161	MemberAccess	op -> operands [ 0 ] . regs		438024	0					
ANR	438162	ArrayIndexing	op -> operands [ 0 ]		438024	0					
ANR	438163	PtrMemberAccess	op -> operands		438024	0					
ANR	438164	Identifier	op		438024	0					
ANR	438165	Identifier	operands		438024	1					
ANR	438166	PrimaryExpression	0		438024	1					
ANR	438167	Identifier	regs		438024	1					
ANR	438168	PrimaryExpression	0		438024	1					
ANR	438169	ElseStatement	else		438024	0					
ANR	438170	CompoundStatement		15:10:462:462	438024	0					
ANR	438171	ReturnStatement	return - 1 ;	2981:4:77194:77203	438024	0	True				
ANR	438172	UnaryOperationExpression	- 1		438024	0					
ANR	438173	UnaryOperator	-		438024	0					
ANR	438174	PrimaryExpression	1		438024	1					
ANR	438175	ElseStatement	else		438024	0					
ANR	438176	CompoundStatement		18:9:493:493	438024	0					
ANR	438177	ReturnStatement	return - 1 ;	2984:3:77224:77233	438024	0	True				
ANR	438178	UnaryOperationExpression	- 1		438024	0					
ANR	438179	UnaryOperator	-		438024	0					
ANR	438180	PrimaryExpression	1		438024	1					
ANR	438181	BreakStatement	break ;	2986:2:77241:77246	438024	2	True				
ANR	438182	Label	default :	2987:1:77249:77256	438024	3	True				
ANR	438183	Identifier	default		438024	0					
ANR	438184	ReturnStatement	return - 1 ;	2988:2:77260:77269	438024	4	True				
ANR	438185	UnaryOperationExpression	- 1		438024	0					
ANR	438186	UnaryOperator	-		438024	0					
ANR	438187	PrimaryExpression	1		438024	1					
ANR	438188	ReturnStatement	return l ;	2990:1:77275:77283	438024	2	True				
ANR	438189	Identifier	l		438024	0					
ANR	438190	ReturnType	static int		438024	1					
ANR	438191	Identifier	opfild		438024	2					
ANR	438192	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438024	3					
ANR	438193	Parameter	RAsm * a	2966:18:76687:76693	438024	0	True				
ANR	438194	ParameterType	RAsm *		438024	0					
ANR	438195	Identifier	a		438024	1					
ANR	438196	Parameter	ut8 * data	2966:27:76696:76704	438024	1	True				
ANR	438197	ParameterType	ut8 *		438024	0					
ANR	438198	Identifier	data		438024	1					
ANR	438199	Parameter	const Opcode * op	2966:38:76707:76722	438024	2	True				
ANR	438200	ParameterType	const Opcode *		438024	0					
ANR	438201	Identifier	op		438024	1					
ANR	438202	CFGEntryNode	ENTRY		438024		True				
ANR	438203	CFGExitNode	EXIT		438024		True				
ANR	438204	Symbol	a		438024						
ANR	438205	Symbol	op		438024						
ANR	438206	Symbol	OT_WORD		438024						
ANR	438207	Symbol	OT_QWORD		438024						
ANR	438208	Symbol	data		438024						
ANR	438209	Symbol	* op		438024						
ANR	438210	Symbol	* * op -> operands		438024						
ANR	438211	Symbol	l		438024						
ANR	438212	Symbol	* * op		438024						
ANR	438213	Symbol	* op -> operands		438024						
ANR	438214	Symbol	op -> operands_count		438024						
ANR	438215	Symbol	* op -> operands [ 0 ] . regs		438024						
ANR	438216	Symbol	op -> operands [ 0 ] . type		438024						
ANR	438217	Symbol	* * * op		438024						
ANR	438218	Symbol	op -> operands		438024						
ANR	438219	Symbol	OT_MEMORY		438024						
ANR	438220	Symbol	* data		438024						
ANR	438221	Symbol	op -> operands [ 0 ] . regs		438024						
ANR	438222	Symbol	OT_DWORD		438024						
ANR	438223	Function	opfldcw	2993:0:77288:77627							
ANR	438224	FunctionDef	"opfldcw (RAsm * a , ut8 * data , const Opcode * op)"		438223	0					
ANR	438225	CompoundStatement		2993:57:77345:77627	438223	0					
ANR	438226	IdentifierDeclStatement	int l = 0 ;	2994:1:77348:77357	438223	0	True				
ANR	438227	IdentifierDecl	l = 0		438223	0					
ANR	438228	IdentifierDeclType	int		438223	0					
ANR	438229	Identifier	l		438223	1					
ANR	438230	AssignmentExpression	l = 0		438223	2		=			
ANR	438231	Identifier	l		438223	0					
ANR	438232	PrimaryExpression	0		438223	1					
ANR	438233	SwitchStatement	switch ( op -> operands_count )		438223	1					
ANR	438234	Condition	op -> operands_count	2995:9:77368:77385	438223	0	True				
ANR	438235	PtrMemberAccess	op -> operands_count		438223	0					
ANR	438236	Identifier	op		438223	0					
ANR	438237	Identifier	operands_count		438223	1					
ANR	438238	CompoundStatement		3:29:42:42	438223	1					
ANR	438239	Label	case 1 :	2996:1:77391:77397	438223	0	True				
ANR	438240	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		438223	1					
ANR	438241	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	2997:7:77406:77478	438223	0	True				
ANR	438242	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		438223	0		&&			
ANR	438243	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438223	0		&			
ANR	438244	MemberAccess	op -> operands [ 0 ] . type		438223	0					
ANR	438245	ArrayIndexing	op -> operands [ 0 ]		438223	0					
ANR	438246	PtrMemberAccess	op -> operands		438223	0					
ANR	438247	Identifier	op		438223	0					
ANR	438248	Identifier	operands		438223	1					
ANR	438249	PrimaryExpression	0		438223	1					
ANR	438250	Identifier	type		438223	1					
ANR	438251	Identifier	OT_MEMORY		438223	1					
ANR	438252	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		438223	1		&			
ANR	438253	MemberAccess	op -> operands [ 0 ] . type		438223	0					
ANR	438254	ArrayIndexing	op -> operands [ 0 ]		438223	0					
ANR	438255	PtrMemberAccess	op -> operands		438223	0					
ANR	438256	Identifier	op		438223	0					
ANR	438257	Identifier	operands		438223	1					
ANR	438258	PrimaryExpression	0		438223	1					
ANR	438259	Identifier	type		438223	1					
ANR	438260	Identifier	OT_WORD		438223	1					
ANR	438261	CompoundStatement		6:40:136:136	438223	1					
ANR	438262	ExpressionStatement	data [ l ++ ] = 0xd9	2999:3:77487:77503	438223	0	True				
ANR	438263	AssignmentExpression	data [ l ++ ] = 0xd9		438223	0		=			
ANR	438264	ArrayIndexing	data [ l ++ ]		438223	0					
ANR	438265	Identifier	data		438223	0					
ANR	438266	PostIncDecOperationExpression	l ++		438223	1					
ANR	438267	Identifier	l		438223	0					
ANR	438268	IncDec	++		438223	1					
ANR	438269	PrimaryExpression	0xd9		438223	1					
ANR	438270	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3000:3:77508:77550	438223	1	True				
ANR	438271	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		438223	0		=			
ANR	438272	ArrayIndexing	data [ l ++ ]		438223	0					
ANR	438273	Identifier	data		438223	0					
ANR	438274	PostIncDecOperationExpression	l ++		438223	1					
ANR	438275	Identifier	l		438223	0					
ANR	438276	IncDec	++		438223	1					
ANR	438277	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		438223	1		|			
ANR	438278	PrimaryExpression	0x28		438223	0					
ANR	438279	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438223	1					
ANR	438280	MemberAccess	op -> operands [ 0 ] . regs		438223	0					
ANR	438281	ArrayIndexing	op -> operands [ 0 ]		438223	0					
ANR	438282	PtrMemberAccess	op -> operands		438223	0					
ANR	438283	Identifier	op		438223	0					
ANR	438284	Identifier	operands		438223	1					
ANR	438285	PrimaryExpression	0		438223	1					
ANR	438286	Identifier	regs		438223	1					
ANR	438287	PrimaryExpression	0		438223	1					
ANR	438288	ElseStatement	else		438223	0					
ANR	438289	CompoundStatement		9:9:215:215	438223	0					
ANR	438290	ReturnStatement	return - 1 ;	3002:3:77566:77575	438223	0	True				
ANR	438291	UnaryOperationExpression	- 1		438223	0					
ANR	438292	UnaryOperator	-		438223	0					
ANR	438293	PrimaryExpression	1		438223	1					
ANR	438294	BreakStatement	break ;	3004:2:77583:77588	438223	2	True				
ANR	438295	Label	default :	3005:1:77591:77598	438223	3	True				
ANR	438296	Identifier	default		438223	0					
ANR	438297	ReturnStatement	return - 1 ;	3006:2:77602:77611	438223	4	True				
ANR	438298	UnaryOperationExpression	- 1		438223	0					
ANR	438299	UnaryOperator	-		438223	0					
ANR	438300	PrimaryExpression	1		438223	1					
ANR	438301	ReturnStatement	return l ;	3008:1:77617:77625	438223	2	True				
ANR	438302	Identifier	l		438223	0					
ANR	438303	ReturnType	static int		438223	1					
ANR	438304	Identifier	opfldcw		438223	2					
ANR	438305	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438223	3					
ANR	438306	Parameter	RAsm * a	2993:19:77307:77313	438223	0	True				
ANR	438307	ParameterType	RAsm *		438223	0					
ANR	438308	Identifier	a		438223	1					
ANR	438309	Parameter	ut8 * data	2993:28:77316:77324	438223	1	True				
ANR	438310	ParameterType	ut8 *		438223	0					
ANR	438311	Identifier	data		438223	1					
ANR	438312	Parameter	const Opcode * op	2993:39:77327:77342	438223	2	True				
ANR	438313	ParameterType	const Opcode *		438223	0					
ANR	438314	Identifier	op		438223	1					
ANR	438315	CFGEntryNode	ENTRY		438223		True				
ANR	438316	CFGExitNode	EXIT		438223		True				
ANR	438317	Symbol	a		438223						
ANR	438318	Symbol	op		438223						
ANR	438319	Symbol	OT_WORD		438223						
ANR	438320	Symbol	data		438223						
ANR	438321	Symbol	* op		438223						
ANR	438322	Symbol	* * op -> operands		438223						
ANR	438323	Symbol	l		438223						
ANR	438324	Symbol	* * op		438223						
ANR	438325	Symbol	* op -> operands		438223						
ANR	438326	Symbol	op -> operands_count		438223						
ANR	438327	Symbol	* op -> operands [ 0 ] . regs		438223						
ANR	438328	Symbol	op -> operands [ 0 ] . type		438223						
ANR	438329	Symbol	* * * op		438223						
ANR	438330	Symbol	op -> operands		438223						
ANR	438331	Symbol	OT_MEMORY		438223						
ANR	438332	Symbol	* data		438223						
ANR	438333	Symbol	op -> operands [ 0 ] . regs		438223						
ANR	438334	Function	opfldenv	3011:0:77630:77929							
ANR	438335	FunctionDef	"opfldenv (RAsm * a , ut8 * data , const Opcode * op)"		438334	0					
ANR	438336	CompoundStatement		3011:58:77688:77929	438334	0					
ANR	438337	IdentifierDeclStatement	int l = 0 ;	3012:1:77691:77700	438334	0	True				
ANR	438338	IdentifierDecl	l = 0		438334	0					
ANR	438339	IdentifierDeclType	int		438334	0					
ANR	438340	Identifier	l		438334	1					
ANR	438341	AssignmentExpression	l = 0		438334	2		=			
ANR	438342	Identifier	l		438334	0					
ANR	438343	PrimaryExpression	0		438334	1					
ANR	438344	SwitchStatement	switch ( op -> operands_count )		438334	1					
ANR	438345	Condition	op -> operands_count	3013:9:77711:77728	438334	0	True				
ANR	438346	PtrMemberAccess	op -> operands_count		438334	0					
ANR	438347	Identifier	op		438334	0					
ANR	438348	Identifier	operands_count		438334	1					
ANR	438349	CompoundStatement		3:29:42:42	438334	1					
ANR	438350	Label	case 1 :	3014:1:77734:77740	438334	0	True				
ANR	438351	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		438334	1					
ANR	438352	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3015:7:77749:77780	438334	0	True				
ANR	438353	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438334	0		&			
ANR	438354	MemberAccess	op -> operands [ 0 ] . type		438334	0					
ANR	438355	ArrayIndexing	op -> operands [ 0 ]		438334	0					
ANR	438356	PtrMemberAccess	op -> operands		438334	0					
ANR	438357	Identifier	op		438334	0					
ANR	438358	Identifier	operands		438334	1					
ANR	438359	PrimaryExpression	0		438334	1					
ANR	438360	Identifier	type		438334	1					
ANR	438361	Identifier	OT_MEMORY		438334	1					
ANR	438362	CompoundStatement		5:42:95:95	438334	1					
ANR	438363	ExpressionStatement	data [ l ++ ] = 0xd9	3016:3:77789:77805	438334	0	True				
ANR	438364	AssignmentExpression	data [ l ++ ] = 0xd9		438334	0		=			
ANR	438365	ArrayIndexing	data [ l ++ ]		438334	0					
ANR	438366	Identifier	data		438334	0					
ANR	438367	PostIncDecOperationExpression	l ++		438334	1					
ANR	438368	Identifier	l		438334	0					
ANR	438369	IncDec	++		438334	1					
ANR	438370	PrimaryExpression	0xd9		438334	1					
ANR	438371	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3017:3:77810:77852	438334	1	True				
ANR	438372	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		438334	0		=			
ANR	438373	ArrayIndexing	data [ l ++ ]		438334	0					
ANR	438374	Identifier	data		438334	0					
ANR	438375	PostIncDecOperationExpression	l ++		438334	1					
ANR	438376	Identifier	l		438334	0					
ANR	438377	IncDec	++		438334	1					
ANR	438378	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		438334	1		|			
ANR	438379	PrimaryExpression	0x20		438334	0					
ANR	438380	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438334	1					
ANR	438381	MemberAccess	op -> operands [ 0 ] . regs		438334	0					
ANR	438382	ArrayIndexing	op -> operands [ 0 ]		438334	0					
ANR	438383	PtrMemberAccess	op -> operands		438334	0					
ANR	438384	Identifier	op		438334	0					
ANR	438385	Identifier	operands		438334	1					
ANR	438386	PrimaryExpression	0		438334	1					
ANR	438387	Identifier	regs		438334	1					
ANR	438388	PrimaryExpression	0		438334	1					
ANR	438389	ElseStatement	else		438334	0					
ANR	438390	CompoundStatement		8:9:174:174	438334	0					
ANR	438391	ReturnStatement	return - 1 ;	3019:3:77868:77877	438334	0	True				
ANR	438392	UnaryOperationExpression	- 1		438334	0					
ANR	438393	UnaryOperator	-		438334	0					
ANR	438394	PrimaryExpression	1		438334	1					
ANR	438395	BreakStatement	break ;	3021:2:77885:77890	438334	2	True				
ANR	438396	Label	default :	3022:1:77893:77900	438334	3	True				
ANR	438397	Identifier	default		438334	0					
ANR	438398	ReturnStatement	return - 1 ;	3023:2:77904:77913	438334	4	True				
ANR	438399	UnaryOperationExpression	- 1		438334	0					
ANR	438400	UnaryOperator	-		438334	0					
ANR	438401	PrimaryExpression	1		438334	1					
ANR	438402	ReturnStatement	return l ;	3025:1:77919:77927	438334	2	True				
ANR	438403	Identifier	l		438334	0					
ANR	438404	ReturnType	static int		438334	1					
ANR	438405	Identifier	opfldenv		438334	2					
ANR	438406	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438334	3					
ANR	438407	Parameter	RAsm * a	3011:20:77650:77656	438334	0	True				
ANR	438408	ParameterType	RAsm *		438334	0					
ANR	438409	Identifier	a		438334	1					
ANR	438410	Parameter	ut8 * data	3011:29:77659:77667	438334	1	True				
ANR	438411	ParameterType	ut8 *		438334	0					
ANR	438412	Identifier	data		438334	1					
ANR	438413	Parameter	const Opcode * op	3011:40:77670:77685	438334	2	True				
ANR	438414	ParameterType	const Opcode *		438334	0					
ANR	438415	Identifier	op		438334	1					
ANR	438416	CFGEntryNode	ENTRY		438334		True				
ANR	438417	CFGExitNode	EXIT		438334		True				
ANR	438418	Symbol	a		438334						
ANR	438419	Symbol	op		438334						
ANR	438420	Symbol	data		438334						
ANR	438421	Symbol	* op		438334						
ANR	438422	Symbol	* * op -> operands		438334						
ANR	438423	Symbol	l		438334						
ANR	438424	Symbol	* * op		438334						
ANR	438425	Symbol	* op -> operands		438334						
ANR	438426	Symbol	op -> operands_count		438334						
ANR	438427	Symbol	* op -> operands [ 0 ] . regs		438334						
ANR	438428	Symbol	op -> operands [ 0 ] . type		438334						
ANR	438429	Symbol	* * * op		438334						
ANR	438430	Symbol	op -> operands		438334						
ANR	438431	Symbol	OT_MEMORY		438334						
ANR	438432	Symbol	* data		438334						
ANR	438433	Symbol	op -> operands [ 0 ] . regs		438334						
ANR	438434	Function	opfbld	3028:0:77932:78271							
ANR	438435	FunctionDef	"opfbld (RAsm * a , ut8 * data , const Opcode * op)"		438434	0					
ANR	438436	CompoundStatement		3028:56:77988:78271	438434	0					
ANR	438437	IdentifierDeclStatement	int l = 0 ;	3029:1:77991:78000	438434	0	True				
ANR	438438	IdentifierDecl	l = 0		438434	0					
ANR	438439	IdentifierDeclType	int		438434	0					
ANR	438440	Identifier	l		438434	1					
ANR	438441	AssignmentExpression	l = 0		438434	2		=			
ANR	438442	Identifier	l		438434	0					
ANR	438443	PrimaryExpression	0		438434	1					
ANR	438444	SwitchStatement	switch ( op -> operands_count )		438434	1					
ANR	438445	Condition	op -> operands_count	3030:9:78011:78028	438434	0	True				
ANR	438446	PtrMemberAccess	op -> operands_count		438434	0					
ANR	438447	Identifier	op		438434	0					
ANR	438448	Identifier	operands_count		438434	1					
ANR	438449	CompoundStatement		3:29:42:42	438434	1					
ANR	438450	Label	case 1 :	3031:1:78034:78040	438434	0	True				
ANR	438451	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE )		438434	1					
ANR	438452	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE	3032:7:78049:78122	438434	0	True				
ANR	438453	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE		438434	0		&&			
ANR	438454	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438434	0		&			
ANR	438455	MemberAccess	op -> operands [ 0 ] . type		438434	0					
ANR	438456	ArrayIndexing	op -> operands [ 0 ]		438434	0					
ANR	438457	PtrMemberAccess	op -> operands		438434	0					
ANR	438458	Identifier	op		438434	0					
ANR	438459	Identifier	operands		438434	1					
ANR	438460	PrimaryExpression	0		438434	1					
ANR	438461	Identifier	type		438434	1					
ANR	438462	Identifier	OT_MEMORY		438434	1					
ANR	438463	BitAndExpression	op -> operands [ 0 ] . type & OT_TBYTE		438434	1		&			
ANR	438464	MemberAccess	op -> operands [ 0 ] . type		438434	0					
ANR	438465	ArrayIndexing	op -> operands [ 0 ]		438434	0					
ANR	438466	PtrMemberAccess	op -> operands		438434	0					
ANR	438467	Identifier	op		438434	0					
ANR	438468	Identifier	operands		438434	1					
ANR	438469	PrimaryExpression	0		438434	1					
ANR	438470	Identifier	type		438434	1					
ANR	438471	Identifier	OT_TBYTE		438434	1					
ANR	438472	CompoundStatement		6:41:137:137	438434	1					
ANR	438473	ExpressionStatement	data [ l ++ ] = 0xdf	3034:3:78131:78147	438434	0	True				
ANR	438474	AssignmentExpression	data [ l ++ ] = 0xdf		438434	0		=			
ANR	438475	ArrayIndexing	data [ l ++ ]		438434	0					
ANR	438476	Identifier	data		438434	0					
ANR	438477	PostIncDecOperationExpression	l ++		438434	1					
ANR	438478	Identifier	l		438434	0					
ANR	438479	IncDec	++		438434	1					
ANR	438480	PrimaryExpression	0xdf		438434	1					
ANR	438481	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3035:3:78152:78194	438434	1	True				
ANR	438482	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		438434	0		=			
ANR	438483	ArrayIndexing	data [ l ++ ]		438434	0					
ANR	438484	Identifier	data		438434	0					
ANR	438485	PostIncDecOperationExpression	l ++		438434	1					
ANR	438486	Identifier	l		438434	0					
ANR	438487	IncDec	++		438434	1					
ANR	438488	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		438434	1		|			
ANR	438489	PrimaryExpression	0x20		438434	0					
ANR	438490	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438434	1					
ANR	438491	MemberAccess	op -> operands [ 0 ] . regs		438434	0					
ANR	438492	ArrayIndexing	op -> operands [ 0 ]		438434	0					
ANR	438493	PtrMemberAccess	op -> operands		438434	0					
ANR	438494	Identifier	op		438434	0					
ANR	438495	Identifier	operands		438434	1					
ANR	438496	PrimaryExpression	0		438434	1					
ANR	438497	Identifier	regs		438434	1					
ANR	438498	PrimaryExpression	0		438434	1					
ANR	438499	ElseStatement	else		438434	0					
ANR	438500	CompoundStatement		9:9:216:216	438434	0					
ANR	438501	ReturnStatement	return - 1 ;	3037:3:78210:78219	438434	0	True				
ANR	438502	UnaryOperationExpression	- 1		438434	0					
ANR	438503	UnaryOperator	-		438434	0					
ANR	438504	PrimaryExpression	1		438434	1					
ANR	438505	BreakStatement	break ;	3039:2:78227:78232	438434	2	True				
ANR	438506	Label	default :	3040:1:78235:78242	438434	3	True				
ANR	438507	Identifier	default		438434	0					
ANR	438508	ReturnStatement	return - 1 ;	3041:2:78246:78255	438434	4	True				
ANR	438509	UnaryOperationExpression	- 1		438434	0					
ANR	438510	UnaryOperator	-		438434	0					
ANR	438511	PrimaryExpression	1		438434	1					
ANR	438512	ReturnStatement	return l ;	3043:1:78261:78269	438434	2	True				
ANR	438513	Identifier	l		438434	0					
ANR	438514	ReturnType	static int		438434	1					
ANR	438515	Identifier	opfbld		438434	2					
ANR	438516	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438434	3					
ANR	438517	Parameter	RAsm * a	3028:18:77950:77956	438434	0	True				
ANR	438518	ParameterType	RAsm *		438434	0					
ANR	438519	Identifier	a		438434	1					
ANR	438520	Parameter	ut8 * data	3028:27:77959:77967	438434	1	True				
ANR	438521	ParameterType	ut8 *		438434	0					
ANR	438522	Identifier	data		438434	1					
ANR	438523	Parameter	const Opcode * op	3028:38:77970:77985	438434	2	True				
ANR	438524	ParameterType	const Opcode *		438434	0					
ANR	438525	Identifier	op		438434	1					
ANR	438526	CFGEntryNode	ENTRY		438434		True				
ANR	438527	CFGExitNode	EXIT		438434		True				
ANR	438528	Symbol	a		438434						
ANR	438529	Symbol	op		438434						
ANR	438530	Symbol	OT_TBYTE		438434						
ANR	438531	Symbol	data		438434						
ANR	438532	Symbol	* op		438434						
ANR	438533	Symbol	* * op -> operands		438434						
ANR	438534	Symbol	l		438434						
ANR	438535	Symbol	* * op		438434						
ANR	438536	Symbol	* op -> operands		438434						
ANR	438537	Symbol	op -> operands_count		438434						
ANR	438538	Symbol	* op -> operands [ 0 ] . regs		438434						
ANR	438539	Symbol	op -> operands [ 0 ] . type		438434						
ANR	438540	Symbol	* * * op		438434						
ANR	438541	Symbol	op -> operands		438434						
ANR	438542	Symbol	OT_MEMORY		438434						
ANR	438543	Symbol	* data		438434						
ANR	438544	Symbol	op -> operands [ 0 ] . regs		438434						
ANR	438545	Function	opfbstp	3046:0:78274:78614							
ANR	438546	FunctionDef	"opfbstp (RAsm * a , ut8 * data , const Opcode * op)"		438545	0					
ANR	438547	CompoundStatement		3046:57:78331:78614	438545	0					
ANR	438548	IdentifierDeclStatement	int l = 0 ;	3047:1:78334:78343	438545	0	True				
ANR	438549	IdentifierDecl	l = 0		438545	0					
ANR	438550	IdentifierDeclType	int		438545	0					
ANR	438551	Identifier	l		438545	1					
ANR	438552	AssignmentExpression	l = 0		438545	2		=			
ANR	438553	Identifier	l		438545	0					
ANR	438554	PrimaryExpression	0		438545	1					
ANR	438555	SwitchStatement	switch ( op -> operands_count )		438545	1					
ANR	438556	Condition	op -> operands_count	3048:9:78354:78371	438545	0	True				
ANR	438557	PtrMemberAccess	op -> operands_count		438545	0					
ANR	438558	Identifier	op		438545	0					
ANR	438559	Identifier	operands_count		438545	1					
ANR	438560	CompoundStatement		3:29:42:42	438545	1					
ANR	438561	Label	case 1 :	3049:1:78377:78383	438545	0	True				
ANR	438562	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE )		438545	1					
ANR	438563	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE	3050:7:78392:78465	438545	0	True				
ANR	438564	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE		438545	0		&&			
ANR	438565	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438545	0		&			
ANR	438566	MemberAccess	op -> operands [ 0 ] . type		438545	0					
ANR	438567	ArrayIndexing	op -> operands [ 0 ]		438545	0					
ANR	438568	PtrMemberAccess	op -> operands		438545	0					
ANR	438569	Identifier	op		438545	0					
ANR	438570	Identifier	operands		438545	1					
ANR	438571	PrimaryExpression	0		438545	1					
ANR	438572	Identifier	type		438545	1					
ANR	438573	Identifier	OT_MEMORY		438545	1					
ANR	438574	BitAndExpression	op -> operands [ 0 ] . type & OT_TBYTE		438545	1		&			
ANR	438575	MemberAccess	op -> operands [ 0 ] . type		438545	0					
ANR	438576	ArrayIndexing	op -> operands [ 0 ]		438545	0					
ANR	438577	PtrMemberAccess	op -> operands		438545	0					
ANR	438578	Identifier	op		438545	0					
ANR	438579	Identifier	operands		438545	1					
ANR	438580	PrimaryExpression	0		438545	1					
ANR	438581	Identifier	type		438545	1					
ANR	438582	Identifier	OT_TBYTE		438545	1					
ANR	438583	CompoundStatement		6:41:137:137	438545	1					
ANR	438584	ExpressionStatement	data [ l ++ ] = 0xdf	3052:3:78474:78490	438545	0	True				
ANR	438585	AssignmentExpression	data [ l ++ ] = 0xdf		438545	0		=			
ANR	438586	ArrayIndexing	data [ l ++ ]		438545	0					
ANR	438587	Identifier	data		438545	0					
ANR	438588	PostIncDecOperationExpression	l ++		438545	1					
ANR	438589	Identifier	l		438545	0					
ANR	438590	IncDec	++		438545	1					
ANR	438591	PrimaryExpression	0xdf		438545	1					
ANR	438592	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3053:3:78495:78537	438545	1	True				
ANR	438593	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		438545	0		=			
ANR	438594	ArrayIndexing	data [ l ++ ]		438545	0					
ANR	438595	Identifier	data		438545	0					
ANR	438596	PostIncDecOperationExpression	l ++		438545	1					
ANR	438597	Identifier	l		438545	0					
ANR	438598	IncDec	++		438545	1					
ANR	438599	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		438545	1		|			
ANR	438600	PrimaryExpression	0x30		438545	0					
ANR	438601	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438545	1					
ANR	438602	MemberAccess	op -> operands [ 0 ] . regs		438545	0					
ANR	438603	ArrayIndexing	op -> operands [ 0 ]		438545	0					
ANR	438604	PtrMemberAccess	op -> operands		438545	0					
ANR	438605	Identifier	op		438545	0					
ANR	438606	Identifier	operands		438545	1					
ANR	438607	PrimaryExpression	0		438545	1					
ANR	438608	Identifier	regs		438545	1					
ANR	438609	PrimaryExpression	0		438545	1					
ANR	438610	ElseStatement	else		438545	0					
ANR	438611	CompoundStatement		9:9:216:216	438545	0					
ANR	438612	ReturnStatement	return - 1 ;	3055:3:78553:78562	438545	0	True				
ANR	438613	UnaryOperationExpression	- 1		438545	0					
ANR	438614	UnaryOperator	-		438545	0					
ANR	438615	PrimaryExpression	1		438545	1					
ANR	438616	BreakStatement	break ;	3057:2:78570:78575	438545	2	True				
ANR	438617	Label	default :	3058:1:78578:78585	438545	3	True				
ANR	438618	Identifier	default		438545	0					
ANR	438619	ReturnStatement	return - 1 ;	3059:2:78589:78598	438545	4	True				
ANR	438620	UnaryOperationExpression	- 1		438545	0					
ANR	438621	UnaryOperator	-		438545	0					
ANR	438622	PrimaryExpression	1		438545	1					
ANR	438623	ReturnStatement	return l ;	3061:1:78604:78612	438545	2	True				
ANR	438624	Identifier	l		438545	0					
ANR	438625	ReturnType	static int		438545	1					
ANR	438626	Identifier	opfbstp		438545	2					
ANR	438627	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438545	3					
ANR	438628	Parameter	RAsm * a	3046:19:78293:78299	438545	0	True				
ANR	438629	ParameterType	RAsm *		438545	0					
ANR	438630	Identifier	a		438545	1					
ANR	438631	Parameter	ut8 * data	3046:28:78302:78310	438545	1	True				
ANR	438632	ParameterType	ut8 *		438545	0					
ANR	438633	Identifier	data		438545	1					
ANR	438634	Parameter	const Opcode * op	3046:39:78313:78328	438545	2	True				
ANR	438635	ParameterType	const Opcode *		438545	0					
ANR	438636	Identifier	op		438545	1					
ANR	438637	CFGEntryNode	ENTRY		438545		True				
ANR	438638	CFGExitNode	EXIT		438545		True				
ANR	438639	Symbol	a		438545						
ANR	438640	Symbol	op		438545						
ANR	438641	Symbol	OT_TBYTE		438545						
ANR	438642	Symbol	data		438545						
ANR	438643	Symbol	* op		438545						
ANR	438644	Symbol	* * op -> operands		438545						
ANR	438645	Symbol	l		438545						
ANR	438646	Symbol	* * op		438545						
ANR	438647	Symbol	* op -> operands		438545						
ANR	438648	Symbol	op -> operands_count		438545						
ANR	438649	Symbol	* op -> operands [ 0 ] . regs		438545						
ANR	438650	Symbol	op -> operands [ 0 ] . type		438545						
ANR	438651	Symbol	* * * op		438545						
ANR	438652	Symbol	op -> operands		438545						
ANR	438653	Symbol	OT_MEMORY		438545						
ANR	438654	Symbol	* data		438545						
ANR	438655	Symbol	op -> operands [ 0 ] . regs		438545						
ANR	438656	Function	opfxrstor	3064:0:78617:78938							
ANR	438657	FunctionDef	"opfxrstor (RAsm * a , ut8 * data , const Opcode * op)"		438656	0					
ANR	438658	CompoundStatement		3064:59:78676:78938	438656	0					
ANR	438659	IdentifierDeclStatement	int l = 0 ;	3065:1:78679:78688	438656	0	True				
ANR	438660	IdentifierDecl	l = 0		438656	0					
ANR	438661	IdentifierDeclType	int		438656	0					
ANR	438662	Identifier	l		438656	1					
ANR	438663	AssignmentExpression	l = 0		438656	2		=			
ANR	438664	Identifier	l		438656	0					
ANR	438665	PrimaryExpression	0		438656	1					
ANR	438666	SwitchStatement	switch ( op -> operands_count )		438656	1					
ANR	438667	Condition	op -> operands_count	3066:9:78699:78716	438656	0	True				
ANR	438668	PtrMemberAccess	op -> operands_count		438656	0					
ANR	438669	Identifier	op		438656	0					
ANR	438670	Identifier	operands_count		438656	1					
ANR	438671	CompoundStatement		3:29:42:42	438656	1					
ANR	438672	Label	case 1 :	3067:1:78722:78728	438656	0	True				
ANR	438673	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		438656	1					
ANR	438674	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3068:7:78737:78768	438656	0	True				
ANR	438675	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438656	0		&			
ANR	438676	MemberAccess	op -> operands [ 0 ] . type		438656	0					
ANR	438677	ArrayIndexing	op -> operands [ 0 ]		438656	0					
ANR	438678	PtrMemberAccess	op -> operands		438656	0					
ANR	438679	Identifier	op		438656	0					
ANR	438680	Identifier	operands		438656	1					
ANR	438681	PrimaryExpression	0		438656	1					
ANR	438682	Identifier	type		438656	1					
ANR	438683	Identifier	OT_MEMORY		438656	1					
ANR	438684	CompoundStatement		5:42:95:95	438656	1					
ANR	438685	ExpressionStatement	data [ l ++ ] = 0x0f	3069:3:78777:78793	438656	0	True				
ANR	438686	AssignmentExpression	data [ l ++ ] = 0x0f		438656	0		=			
ANR	438687	ArrayIndexing	data [ l ++ ]		438656	0					
ANR	438688	Identifier	data		438656	0					
ANR	438689	PostIncDecOperationExpression	l ++		438656	1					
ANR	438690	Identifier	l		438656	0					
ANR	438691	IncDec	++		438656	1					
ANR	438692	PrimaryExpression	0x0f		438656	1					
ANR	438693	ExpressionStatement	data [ l ++ ] = 0xae	3070:3:78798:78814	438656	1	True				
ANR	438694	AssignmentExpression	data [ l ++ ] = 0xae		438656	0		=			
ANR	438695	ArrayIndexing	data [ l ++ ]		438656	0					
ANR	438696	Identifier	data		438656	0					
ANR	438697	PostIncDecOperationExpression	l ++		438656	1					
ANR	438698	Identifier	l		438656	0					
ANR	438699	IncDec	++		438656	1					
ANR	438700	PrimaryExpression	0xae		438656	1					
ANR	438701	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3071:3:78819:78861	438656	2	True				
ANR	438702	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		438656	0		=			
ANR	438703	ArrayIndexing	data [ l ++ ]		438656	0					
ANR	438704	Identifier	data		438656	0					
ANR	438705	PostIncDecOperationExpression	l ++		438656	1					
ANR	438706	Identifier	l		438656	0					
ANR	438707	IncDec	++		438656	1					
ANR	438708	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		438656	1		|			
ANR	438709	PrimaryExpression	0x08		438656	0					
ANR	438710	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438656	1					
ANR	438711	MemberAccess	op -> operands [ 0 ] . regs		438656	0					
ANR	438712	ArrayIndexing	op -> operands [ 0 ]		438656	0					
ANR	438713	PtrMemberAccess	op -> operands		438656	0					
ANR	438714	Identifier	op		438656	0					
ANR	438715	Identifier	operands		438656	1					
ANR	438716	PrimaryExpression	0		438656	1					
ANR	438717	Identifier	regs		438656	1					
ANR	438718	PrimaryExpression	0		438656	1					
ANR	438719	ElseStatement	else		438656	0					
ANR	438720	CompoundStatement		9:9:195:195	438656	0					
ANR	438721	ReturnStatement	return - 1 ;	3073:3:78877:78886	438656	0	True				
ANR	438722	UnaryOperationExpression	- 1		438656	0					
ANR	438723	UnaryOperator	-		438656	0					
ANR	438724	PrimaryExpression	1		438656	1					
ANR	438725	BreakStatement	break ;	3075:2:78894:78899	438656	2	True				
ANR	438726	Label	default :	3076:1:78902:78909	438656	3	True				
ANR	438727	Identifier	default		438656	0					
ANR	438728	ReturnStatement	return - 1 ;	3077:2:78913:78922	438656	4	True				
ANR	438729	UnaryOperationExpression	- 1		438656	0					
ANR	438730	UnaryOperator	-		438656	0					
ANR	438731	PrimaryExpression	1		438656	1					
ANR	438732	ReturnStatement	return l ;	3079:1:78928:78936	438656	2	True				
ANR	438733	Identifier	l		438656	0					
ANR	438734	ReturnType	static int		438656	1					
ANR	438735	Identifier	opfxrstor		438656	2					
ANR	438736	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438656	3					
ANR	438737	Parameter	RAsm * a	3064:21:78638:78644	438656	0	True				
ANR	438738	ParameterType	RAsm *		438656	0					
ANR	438739	Identifier	a		438656	1					
ANR	438740	Parameter	ut8 * data	3064:30:78647:78655	438656	1	True				
ANR	438741	ParameterType	ut8 *		438656	0					
ANR	438742	Identifier	data		438656	1					
ANR	438743	Parameter	const Opcode * op	3064:41:78658:78673	438656	2	True				
ANR	438744	ParameterType	const Opcode *		438656	0					
ANR	438745	Identifier	op		438656	1					
ANR	438746	CFGEntryNode	ENTRY		438656		True				
ANR	438747	CFGExitNode	EXIT		438656		True				
ANR	438748	Symbol	a		438656						
ANR	438749	Symbol	op		438656						
ANR	438750	Symbol	data		438656						
ANR	438751	Symbol	* op		438656						
ANR	438752	Symbol	* * op -> operands		438656						
ANR	438753	Symbol	l		438656						
ANR	438754	Symbol	* * op		438656						
ANR	438755	Symbol	* op -> operands		438656						
ANR	438756	Symbol	op -> operands_count		438656						
ANR	438757	Symbol	* op -> operands [ 0 ] . regs		438656						
ANR	438758	Symbol	op -> operands [ 0 ] . type		438656						
ANR	438759	Symbol	* * * op		438656						
ANR	438760	Symbol	op -> operands		438656						
ANR	438761	Symbol	OT_MEMORY		438656						
ANR	438762	Symbol	* data		438656						
ANR	438763	Symbol	op -> operands [ 0 ] . regs		438656						
ANR	438764	Function	opfxsave	3082:0:78941:79261							
ANR	438765	FunctionDef	"opfxsave (RAsm * a , ut8 * data , const Opcode * op)"		438764	0					
ANR	438766	CompoundStatement		3082:58:78999:79261	438764	0					
ANR	438767	IdentifierDeclStatement	int l = 0 ;	3083:1:79002:79011	438764	0	True				
ANR	438768	IdentifierDecl	l = 0		438764	0					
ANR	438769	IdentifierDeclType	int		438764	0					
ANR	438770	Identifier	l		438764	1					
ANR	438771	AssignmentExpression	l = 0		438764	2		=			
ANR	438772	Identifier	l		438764	0					
ANR	438773	PrimaryExpression	0		438764	1					
ANR	438774	SwitchStatement	switch ( op -> operands_count )		438764	1					
ANR	438775	Condition	op -> operands_count	3084:9:79022:79039	438764	0	True				
ANR	438776	PtrMemberAccess	op -> operands_count		438764	0					
ANR	438777	Identifier	op		438764	0					
ANR	438778	Identifier	operands_count		438764	1					
ANR	438779	CompoundStatement		3:29:42:42	438764	1					
ANR	438780	Label	case 1 :	3085:1:79045:79051	438764	0	True				
ANR	438781	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		438764	1					
ANR	438782	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3086:7:79060:79091	438764	0	True				
ANR	438783	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438764	0		&			
ANR	438784	MemberAccess	op -> operands [ 0 ] . type		438764	0					
ANR	438785	ArrayIndexing	op -> operands [ 0 ]		438764	0					
ANR	438786	PtrMemberAccess	op -> operands		438764	0					
ANR	438787	Identifier	op		438764	0					
ANR	438788	Identifier	operands		438764	1					
ANR	438789	PrimaryExpression	0		438764	1					
ANR	438790	Identifier	type		438764	1					
ANR	438791	Identifier	OT_MEMORY		438764	1					
ANR	438792	CompoundStatement		5:42:95:95	438764	1					
ANR	438793	ExpressionStatement	data [ l ++ ] = 0x0f	3087:3:79100:79116	438764	0	True				
ANR	438794	AssignmentExpression	data [ l ++ ] = 0x0f		438764	0		=			
ANR	438795	ArrayIndexing	data [ l ++ ]		438764	0					
ANR	438796	Identifier	data		438764	0					
ANR	438797	PostIncDecOperationExpression	l ++		438764	1					
ANR	438798	Identifier	l		438764	0					
ANR	438799	IncDec	++		438764	1					
ANR	438800	PrimaryExpression	0x0f		438764	1					
ANR	438801	ExpressionStatement	data [ l ++ ] = 0xae	3088:3:79121:79137	438764	1	True				
ANR	438802	AssignmentExpression	data [ l ++ ] = 0xae		438764	0		=			
ANR	438803	ArrayIndexing	data [ l ++ ]		438764	0					
ANR	438804	Identifier	data		438764	0					
ANR	438805	PostIncDecOperationExpression	l ++		438764	1					
ANR	438806	Identifier	l		438764	0					
ANR	438807	IncDec	++		438764	1					
ANR	438808	PrimaryExpression	0xae		438764	1					
ANR	438809	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	3089:3:79142:79184	438764	2	True				
ANR	438810	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		438764	0		=			
ANR	438811	ArrayIndexing	data [ l ++ ]		438764	0					
ANR	438812	Identifier	data		438764	0					
ANR	438813	PostIncDecOperationExpression	l ++		438764	1					
ANR	438814	Identifier	l		438764	0					
ANR	438815	IncDec	++		438764	1					
ANR	438816	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		438764	1		|			
ANR	438817	PrimaryExpression	0x00		438764	0					
ANR	438818	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438764	1					
ANR	438819	MemberAccess	op -> operands [ 0 ] . regs		438764	0					
ANR	438820	ArrayIndexing	op -> operands [ 0 ]		438764	0					
ANR	438821	PtrMemberAccess	op -> operands		438764	0					
ANR	438822	Identifier	op		438764	0					
ANR	438823	Identifier	operands		438764	1					
ANR	438824	PrimaryExpression	0		438764	1					
ANR	438825	Identifier	regs		438764	1					
ANR	438826	PrimaryExpression	0		438764	1					
ANR	438827	ElseStatement	else		438764	0					
ANR	438828	CompoundStatement		9:9:195:195	438764	0					
ANR	438829	ReturnStatement	return - 1 ;	3091:3:79200:79209	438764	0	True				
ANR	438830	UnaryOperationExpression	- 1		438764	0					
ANR	438831	UnaryOperator	-		438764	0					
ANR	438832	PrimaryExpression	1		438764	1					
ANR	438833	BreakStatement	break ;	3093:2:79217:79222	438764	2	True				
ANR	438834	Label	default :	3094:1:79225:79232	438764	3	True				
ANR	438835	Identifier	default		438764	0					
ANR	438836	ReturnStatement	return - 1 ;	3095:2:79236:79245	438764	4	True				
ANR	438837	UnaryOperationExpression	- 1		438764	0					
ANR	438838	UnaryOperator	-		438764	0					
ANR	438839	PrimaryExpression	1		438764	1					
ANR	438840	ReturnStatement	return l ;	3097:1:79251:79259	438764	2	True				
ANR	438841	Identifier	l		438764	0					
ANR	438842	ReturnType	static int		438764	1					
ANR	438843	Identifier	opfxsave		438764	2					
ANR	438844	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438764	3					
ANR	438845	Parameter	RAsm * a	3082:20:78961:78967	438764	0	True				
ANR	438846	ParameterType	RAsm *		438764	0					
ANR	438847	Identifier	a		438764	1					
ANR	438848	Parameter	ut8 * data	3082:29:78970:78978	438764	1	True				
ANR	438849	ParameterType	ut8 *		438764	0					
ANR	438850	Identifier	data		438764	1					
ANR	438851	Parameter	const Opcode * op	3082:40:78981:78996	438764	2	True				
ANR	438852	ParameterType	const Opcode *		438764	0					
ANR	438853	Identifier	op		438764	1					
ANR	438854	CFGEntryNode	ENTRY		438764		True				
ANR	438855	CFGExitNode	EXIT		438764		True				
ANR	438856	Symbol	a		438764						
ANR	438857	Symbol	op		438764						
ANR	438858	Symbol	data		438764						
ANR	438859	Symbol	* op		438764						
ANR	438860	Symbol	* * op -> operands		438764						
ANR	438861	Symbol	l		438764						
ANR	438862	Symbol	* * op		438764						
ANR	438863	Symbol	* op -> operands		438764						
ANR	438864	Symbol	op -> operands_count		438764						
ANR	438865	Symbol	* op -> operands [ 0 ] . regs		438764						
ANR	438866	Symbol	op -> operands [ 0 ] . type		438764						
ANR	438867	Symbol	* * * op		438764						
ANR	438868	Symbol	op -> operands		438764						
ANR	438869	Symbol	OT_MEMORY		438764						
ANR	438870	Symbol	* data		438764						
ANR	438871	Symbol	op -> operands [ 0 ] . regs		438764						
ANR	438872	Function	opfist	3100:0:79264:79759							
ANR	438873	FunctionDef	"opfist (RAsm * a , ut8 * data , const Opcode * op)"		438872	0					
ANR	438874	CompoundStatement		3100:56:79320:79759	438872	0					
ANR	438875	IdentifierDeclStatement	int l = 0 ;	3101:1:79323:79332	438872	0	True				
ANR	438876	IdentifierDecl	l = 0		438872	0					
ANR	438877	IdentifierDeclType	int		438872	0					
ANR	438878	Identifier	l		438872	1					
ANR	438879	AssignmentExpression	l = 0		438872	2		=			
ANR	438880	Identifier	l		438872	0					
ANR	438881	PrimaryExpression	0		438872	1					
ANR	438882	SwitchStatement	switch ( op -> operands_count )		438872	1					
ANR	438883	Condition	op -> operands_count	3102:9:79343:79360	438872	0	True				
ANR	438884	PtrMemberAccess	op -> operands_count		438872	0					
ANR	438885	Identifier	op		438872	0					
ANR	438886	Identifier	operands_count		438872	1					
ANR	438887	CompoundStatement		3:29:42:42	438872	1					
ANR	438888	Label	case 1 :	3103:1:79366:79372	438872	0	True				
ANR	438889	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		438872	1					
ANR	438890	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3104:7:79381:79412	438872	0	True				
ANR	438891	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		438872	0		&			
ANR	438892	MemberAccess	op -> operands [ 0 ] . type		438872	0					
ANR	438893	ArrayIndexing	op -> operands [ 0 ]		438872	0					
ANR	438894	PtrMemberAccess	op -> operands		438872	0					
ANR	438895	Identifier	op		438872	0					
ANR	438896	Identifier	operands		438872	1					
ANR	438897	PrimaryExpression	0		438872	1					
ANR	438898	Identifier	type		438872	1					
ANR	438899	Identifier	OT_MEMORY		438872	1					
ANR	438900	CompoundStatement		5:42:95:95	438872	1					
ANR	438901	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		438872	0					
ANR	438902	Condition	op -> operands [ 0 ] . type & OT_WORD	3105:8:79426:79455	438872	0	True				
ANR	438903	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		438872	0		&			
ANR	438904	MemberAccess	op -> operands [ 0 ] . type		438872	0					
ANR	438905	ArrayIndexing	op -> operands [ 0 ]		438872	0					
ANR	438906	PtrMemberAccess	op -> operands		438872	0					
ANR	438907	Identifier	op		438872	0					
ANR	438908	Identifier	operands		438872	1					
ANR	438909	PrimaryExpression	0		438872	1					
ANR	438910	Identifier	type		438872	1					
ANR	438911	Identifier	OT_WORD		438872	1					
ANR	438912	CompoundStatement		6:41:138:138	438872	1					
ANR	438913	ExpressionStatement	data [ l ++ ] = 0xdf	3106:4:79465:79481	438872	0	True				
ANR	438914	AssignmentExpression	data [ l ++ ] = 0xdf		438872	0		=			
ANR	438915	ArrayIndexing	data [ l ++ ]		438872	0					
ANR	438916	Identifier	data		438872	0					
ANR	438917	PostIncDecOperationExpression	l ++		438872	1					
ANR	438918	Identifier	l		438872	0					
ANR	438919	IncDec	++		438872	1					
ANR	438920	PrimaryExpression	0xdf		438872	1					
ANR	438921	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3107:4:79487:79529	438872	1	True				
ANR	438922	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		438872	0		=			
ANR	438923	ArrayIndexing	data [ l ++ ]		438872	0					
ANR	438924	Identifier	data		438872	0					
ANR	438925	PostIncDecOperationExpression	l ++		438872	1					
ANR	438926	Identifier	l		438872	0					
ANR	438927	IncDec	++		438872	1					
ANR	438928	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		438872	1		|			
ANR	438929	PrimaryExpression	0x10		438872	0					
ANR	438930	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438872	1					
ANR	438931	MemberAccess	op -> operands [ 0 ] . regs		438872	0					
ANR	438932	ArrayIndexing	op -> operands [ 0 ]		438872	0					
ANR	438933	PtrMemberAccess	op -> operands		438872	0					
ANR	438934	Identifier	op		438872	0					
ANR	438935	Identifier	operands		438872	1					
ANR	438936	PrimaryExpression	0		438872	1					
ANR	438937	Identifier	regs		438872	1					
ANR	438938	PrimaryExpression	0		438872	1					
ANR	438939	ElseStatement	else		438872	0					
ANR	438940	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		438872	0					
ANR	438941	Condition	op -> operands [ 0 ] . type & OT_DWORD	3108:15:79546:79576	438872	0	True				
ANR	438942	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		438872	0		&			
ANR	438943	MemberAccess	op -> operands [ 0 ] . type		438872	0					
ANR	438944	ArrayIndexing	op -> operands [ 0 ]		438872	0					
ANR	438945	PtrMemberAccess	op -> operands		438872	0					
ANR	438946	Identifier	op		438872	0					
ANR	438947	Identifier	operands		438872	1					
ANR	438948	PrimaryExpression	0		438872	1					
ANR	438949	Identifier	type		438872	1					
ANR	438950	Identifier	OT_DWORD		438872	1					
ANR	438951	CompoundStatement		9:49:259:259	438872	1					
ANR	438952	ExpressionStatement	data [ l ++ ] = 0xdb	3109:4:79586:79602	438872	0	True				
ANR	438953	AssignmentExpression	data [ l ++ ] = 0xdb		438872	0		=			
ANR	438954	ArrayIndexing	data [ l ++ ]		438872	0					
ANR	438955	Identifier	data		438872	0					
ANR	438956	PostIncDecOperationExpression	l ++		438872	1					
ANR	438957	Identifier	l		438872	0					
ANR	438958	IncDec	++		438872	1					
ANR	438959	PrimaryExpression	0xdb		438872	1					
ANR	438960	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3110:4:79608:79650	438872	1	True				
ANR	438961	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		438872	0		=			
ANR	438962	ArrayIndexing	data [ l ++ ]		438872	0					
ANR	438963	Identifier	data		438872	0					
ANR	438964	PostIncDecOperationExpression	l ++		438872	1					
ANR	438965	Identifier	l		438872	0					
ANR	438966	IncDec	++		438872	1					
ANR	438967	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		438872	1		|			
ANR	438968	PrimaryExpression	0x10		438872	0					
ANR	438969	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		438872	1					
ANR	438970	MemberAccess	op -> operands [ 0 ] . regs		438872	0					
ANR	438971	ArrayIndexing	op -> operands [ 0 ]		438872	0					
ANR	438972	PtrMemberAccess	op -> operands		438872	0					
ANR	438973	Identifier	op		438872	0					
ANR	438974	Identifier	operands		438872	1					
ANR	438975	PrimaryExpression	0		438872	1					
ANR	438976	Identifier	regs		438872	1					
ANR	438977	PrimaryExpression	0		438872	1					
ANR	438978	ElseStatement	else		438872	0					
ANR	438979	CompoundStatement		12:10:341:341	438872	0					
ANR	438980	ReturnStatement	return - 1 ;	3112:4:79668:79677	438872	0	True				
ANR	438981	UnaryOperationExpression	- 1		438872	0					
ANR	438982	UnaryOperator	-		438872	0					
ANR	438983	PrimaryExpression	1		438872	1					
ANR	438984	ElseStatement	else		438872	0					
ANR	438985	CompoundStatement		15:9:372:372	438872	0					
ANR	438986	ReturnStatement	return - 1 ;	3115:3:79698:79707	438872	0	True				
ANR	438987	UnaryOperationExpression	- 1		438872	0					
ANR	438988	UnaryOperator	-		438872	0					
ANR	438989	PrimaryExpression	1		438872	1					
ANR	438990	BreakStatement	break ;	3117:2:79715:79720	438872	2	True				
ANR	438991	Label	default :	3118:1:79723:79730	438872	3	True				
ANR	438992	Identifier	default		438872	0					
ANR	438993	ReturnStatement	return - 1 ;	3119:2:79734:79743	438872	4	True				
ANR	438994	UnaryOperationExpression	- 1		438872	0					
ANR	438995	UnaryOperator	-		438872	0					
ANR	438996	PrimaryExpression	1		438872	1					
ANR	438997	ReturnStatement	return l ;	3121:1:79749:79757	438872	2	True				
ANR	438998	Identifier	l		438872	0					
ANR	438999	ReturnType	static int		438872	1					
ANR	439000	Identifier	opfist		438872	2					
ANR	439001	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		438872	3					
ANR	439002	Parameter	RAsm * a	3100:18:79282:79288	438872	0	True				
ANR	439003	ParameterType	RAsm *		438872	0					
ANR	439004	Identifier	a		438872	1					
ANR	439005	Parameter	ut8 * data	3100:27:79291:79299	438872	1	True				
ANR	439006	ParameterType	ut8 *		438872	0					
ANR	439007	Identifier	data		438872	1					
ANR	439008	Parameter	const Opcode * op	3100:38:79302:79317	438872	2	True				
ANR	439009	ParameterType	const Opcode *		438872	0					
ANR	439010	Identifier	op		438872	1					
ANR	439011	CFGEntryNode	ENTRY		438872		True				
ANR	439012	CFGExitNode	EXIT		438872		True				
ANR	439013	Symbol	a		438872						
ANR	439014	Symbol	op		438872						
ANR	439015	Symbol	OT_WORD		438872						
ANR	439016	Symbol	data		438872						
ANR	439017	Symbol	* op		438872						
ANR	439018	Symbol	* * op -> operands		438872						
ANR	439019	Symbol	l		438872						
ANR	439020	Symbol	* * op		438872						
ANR	439021	Symbol	* op -> operands		438872						
ANR	439022	Symbol	op -> operands_count		438872						
ANR	439023	Symbol	* op -> operands [ 0 ] . regs		438872						
ANR	439024	Symbol	op -> operands [ 0 ] . type		438872						
ANR	439025	Symbol	* * * op		438872						
ANR	439026	Symbol	op -> operands		438872						
ANR	439027	Symbol	OT_MEMORY		438872						
ANR	439028	Symbol	* data		438872						
ANR	439029	Symbol	op -> operands [ 0 ] . regs		438872						
ANR	439030	Symbol	OT_DWORD		438872						
ANR	439031	Function	opfistp	3124:0:79762:80379							
ANR	439032	FunctionDef	"opfistp (RAsm * a , ut8 * data , const Opcode * op)"		439031	0					
ANR	439033	CompoundStatement		3124:57:79819:80379	439031	0					
ANR	439034	IdentifierDeclStatement	int l = 0 ;	3125:1:79822:79831	439031	0	True				
ANR	439035	IdentifierDecl	l = 0		439031	0					
ANR	439036	IdentifierDeclType	int		439031	0					
ANR	439037	Identifier	l		439031	1					
ANR	439038	AssignmentExpression	l = 0		439031	2		=			
ANR	439039	Identifier	l		439031	0					
ANR	439040	PrimaryExpression	0		439031	1					
ANR	439041	SwitchStatement	switch ( op -> operands_count )		439031	1					
ANR	439042	Condition	op -> operands_count	3126:9:79842:79859	439031	0	True				
ANR	439043	PtrMemberAccess	op -> operands_count		439031	0					
ANR	439044	Identifier	op		439031	0					
ANR	439045	Identifier	operands_count		439031	1					
ANR	439046	CompoundStatement		3:29:42:42	439031	1					
ANR	439047	Label	case 1 :	3127:1:79865:79871	439031	0	True				
ANR	439048	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		439031	1					
ANR	439049	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3128:7:79880:79911	439031	0	True				
ANR	439050	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		439031	0		&			
ANR	439051	MemberAccess	op -> operands [ 0 ] . type		439031	0					
ANR	439052	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439053	PtrMemberAccess	op -> operands		439031	0					
ANR	439054	Identifier	op		439031	0					
ANR	439055	Identifier	operands		439031	1					
ANR	439056	PrimaryExpression	0		439031	1					
ANR	439057	Identifier	type		439031	1					
ANR	439058	Identifier	OT_MEMORY		439031	1					
ANR	439059	CompoundStatement		5:42:95:95	439031	1					
ANR	439060	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		439031	0					
ANR	439061	Condition	op -> operands [ 0 ] . type & OT_WORD	3129:8:79925:79954	439031	0	True				
ANR	439062	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		439031	0		&			
ANR	439063	MemberAccess	op -> operands [ 0 ] . type		439031	0					
ANR	439064	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439065	PtrMemberAccess	op -> operands		439031	0					
ANR	439066	Identifier	op		439031	0					
ANR	439067	Identifier	operands		439031	1					
ANR	439068	PrimaryExpression	0		439031	1					
ANR	439069	Identifier	type		439031	1					
ANR	439070	Identifier	OT_WORD		439031	1					
ANR	439071	CompoundStatement		6:41:138:138	439031	1					
ANR	439072	ExpressionStatement	data [ l ++ ] = 0xdf	3130:4:79964:79980	439031	0	True				
ANR	439073	AssignmentExpression	data [ l ++ ] = 0xdf		439031	0		=			
ANR	439074	ArrayIndexing	data [ l ++ ]		439031	0					
ANR	439075	Identifier	data		439031	0					
ANR	439076	PostIncDecOperationExpression	l ++		439031	1					
ANR	439077	Identifier	l		439031	0					
ANR	439078	IncDec	++		439031	1					
ANR	439079	PrimaryExpression	0xdf		439031	1					
ANR	439080	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3131:4:79986:80028	439031	1	True				
ANR	439081	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		439031	0		=			
ANR	439082	ArrayIndexing	data [ l ++ ]		439031	0					
ANR	439083	Identifier	data		439031	0					
ANR	439084	PostIncDecOperationExpression	l ++		439031	1					
ANR	439085	Identifier	l		439031	0					
ANR	439086	IncDec	++		439031	1					
ANR	439087	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		439031	1		|			
ANR	439088	PrimaryExpression	0x18		439031	0					
ANR	439089	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439031	1					
ANR	439090	MemberAccess	op -> operands [ 0 ] . regs		439031	0					
ANR	439091	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439092	PtrMemberAccess	op -> operands		439031	0					
ANR	439093	Identifier	op		439031	0					
ANR	439094	Identifier	operands		439031	1					
ANR	439095	PrimaryExpression	0		439031	1					
ANR	439096	Identifier	regs		439031	1					
ANR	439097	PrimaryExpression	0		439031	1					
ANR	439098	ElseStatement	else		439031	0					
ANR	439099	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		439031	0					
ANR	439100	Condition	op -> operands [ 0 ] . type & OT_DWORD	3132:15:80045:80075	439031	0	True				
ANR	439101	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		439031	0		&			
ANR	439102	MemberAccess	op -> operands [ 0 ] . type		439031	0					
ANR	439103	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439104	PtrMemberAccess	op -> operands		439031	0					
ANR	439105	Identifier	op		439031	0					
ANR	439106	Identifier	operands		439031	1					
ANR	439107	PrimaryExpression	0		439031	1					
ANR	439108	Identifier	type		439031	1					
ANR	439109	Identifier	OT_DWORD		439031	1					
ANR	439110	CompoundStatement		9:49:259:259	439031	1					
ANR	439111	ExpressionStatement	data [ l ++ ] = 0xdb	3133:4:80085:80101	439031	0	True				
ANR	439112	AssignmentExpression	data [ l ++ ] = 0xdb		439031	0		=			
ANR	439113	ArrayIndexing	data [ l ++ ]		439031	0					
ANR	439114	Identifier	data		439031	0					
ANR	439115	PostIncDecOperationExpression	l ++		439031	1					
ANR	439116	Identifier	l		439031	0					
ANR	439117	IncDec	++		439031	1					
ANR	439118	PrimaryExpression	0xdb		439031	1					
ANR	439119	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3134:4:80107:80149	439031	1	True				
ANR	439120	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		439031	0		=			
ANR	439121	ArrayIndexing	data [ l ++ ]		439031	0					
ANR	439122	Identifier	data		439031	0					
ANR	439123	PostIncDecOperationExpression	l ++		439031	1					
ANR	439124	Identifier	l		439031	0					
ANR	439125	IncDec	++		439031	1					
ANR	439126	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		439031	1		|			
ANR	439127	PrimaryExpression	0x18		439031	0					
ANR	439128	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439031	1					
ANR	439129	MemberAccess	op -> operands [ 0 ] . regs		439031	0					
ANR	439130	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439131	PtrMemberAccess	op -> operands		439031	0					
ANR	439132	Identifier	op		439031	0					
ANR	439133	Identifier	operands		439031	1					
ANR	439134	PrimaryExpression	0		439031	1					
ANR	439135	Identifier	regs		439031	1					
ANR	439136	PrimaryExpression	0		439031	1					
ANR	439137	ElseStatement	else		439031	0					
ANR	439138	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		439031	0					
ANR	439139	Condition	op -> operands [ 0 ] . type & OT_QWORD	3135:15:80166:80196	439031	0	True				
ANR	439140	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		439031	0		&			
ANR	439141	MemberAccess	op -> operands [ 0 ] . type		439031	0					
ANR	439142	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439143	PtrMemberAccess	op -> operands		439031	0					
ANR	439144	Identifier	op		439031	0					
ANR	439145	Identifier	operands		439031	1					
ANR	439146	PrimaryExpression	0		439031	1					
ANR	439147	Identifier	type		439031	1					
ANR	439148	Identifier	OT_QWORD		439031	1					
ANR	439149	CompoundStatement		12:49:380:380	439031	1					
ANR	439150	ExpressionStatement	data [ l ++ ] = 0xdf	3136:4:80206:80222	439031	0	True				
ANR	439151	AssignmentExpression	data [ l ++ ] = 0xdf		439031	0		=			
ANR	439152	ArrayIndexing	data [ l ++ ]		439031	0					
ANR	439153	Identifier	data		439031	0					
ANR	439154	PostIncDecOperationExpression	l ++		439031	1					
ANR	439155	Identifier	l		439031	0					
ANR	439156	IncDec	++		439031	1					
ANR	439157	PrimaryExpression	0xdf		439031	1					
ANR	439158	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3137:4:80228:80270	439031	1	True				
ANR	439159	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		439031	0		=			
ANR	439160	ArrayIndexing	data [ l ++ ]		439031	0					
ANR	439161	Identifier	data		439031	0					
ANR	439162	PostIncDecOperationExpression	l ++		439031	1					
ANR	439163	Identifier	l		439031	0					
ANR	439164	IncDec	++		439031	1					
ANR	439165	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		439031	1		|			
ANR	439166	PrimaryExpression	0x38		439031	0					
ANR	439167	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439031	1					
ANR	439168	MemberAccess	op -> operands [ 0 ] . regs		439031	0					
ANR	439169	ArrayIndexing	op -> operands [ 0 ]		439031	0					
ANR	439170	PtrMemberAccess	op -> operands		439031	0					
ANR	439171	Identifier	op		439031	0					
ANR	439172	Identifier	operands		439031	1					
ANR	439173	PrimaryExpression	0		439031	1					
ANR	439174	Identifier	regs		439031	1					
ANR	439175	PrimaryExpression	0		439031	1					
ANR	439176	ElseStatement	else		439031	0					
ANR	439177	CompoundStatement		15:10:462:462	439031	0					
ANR	439178	ReturnStatement	return - 1 ;	3139:4:80288:80297	439031	0	True				
ANR	439179	UnaryOperationExpression	- 1		439031	0					
ANR	439180	UnaryOperator	-		439031	0					
ANR	439181	PrimaryExpression	1		439031	1					
ANR	439182	ElseStatement	else		439031	0					
ANR	439183	CompoundStatement		18:9:493:493	439031	0					
ANR	439184	ReturnStatement	return - 1 ;	3142:3:80318:80327	439031	0	True				
ANR	439185	UnaryOperationExpression	- 1		439031	0					
ANR	439186	UnaryOperator	-		439031	0					
ANR	439187	PrimaryExpression	1		439031	1					
ANR	439188	BreakStatement	break ;	3144:2:80335:80340	439031	2	True				
ANR	439189	Label	default :	3145:1:80343:80350	439031	3	True				
ANR	439190	Identifier	default		439031	0					
ANR	439191	ReturnStatement	return - 1 ;	3146:2:80354:80363	439031	4	True				
ANR	439192	UnaryOperationExpression	- 1		439031	0					
ANR	439193	UnaryOperator	-		439031	0					
ANR	439194	PrimaryExpression	1		439031	1					
ANR	439195	ReturnStatement	return l ;	3148:1:80369:80377	439031	2	True				
ANR	439196	Identifier	l		439031	0					
ANR	439197	ReturnType	static int		439031	1					
ANR	439198	Identifier	opfistp		439031	2					
ANR	439199	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		439031	3					
ANR	439200	Parameter	RAsm * a	3124:19:79781:79787	439031	0	True				
ANR	439201	ParameterType	RAsm *		439031	0					
ANR	439202	Identifier	a		439031	1					
ANR	439203	Parameter	ut8 * data	3124:28:79790:79798	439031	1	True				
ANR	439204	ParameterType	ut8 *		439031	0					
ANR	439205	Identifier	data		439031	1					
ANR	439206	Parameter	const Opcode * op	3124:39:79801:79816	439031	2	True				
ANR	439207	ParameterType	const Opcode *		439031	0					
ANR	439208	Identifier	op		439031	1					
ANR	439209	CFGEntryNode	ENTRY		439031		True				
ANR	439210	CFGExitNode	EXIT		439031		True				
ANR	439211	Symbol	a		439031						
ANR	439212	Symbol	op		439031						
ANR	439213	Symbol	OT_WORD		439031						
ANR	439214	Symbol	OT_QWORD		439031						
ANR	439215	Symbol	data		439031						
ANR	439216	Symbol	* op		439031						
ANR	439217	Symbol	* * op -> operands		439031						
ANR	439218	Symbol	l		439031						
ANR	439219	Symbol	* * op		439031						
ANR	439220	Symbol	* op -> operands		439031						
ANR	439221	Symbol	op -> operands_count		439031						
ANR	439222	Symbol	* op -> operands [ 0 ] . regs		439031						
ANR	439223	Symbol	op -> operands [ 0 ] . type		439031						
ANR	439224	Symbol	* * * op		439031						
ANR	439225	Symbol	op -> operands		439031						
ANR	439226	Symbol	OT_MEMORY		439031						
ANR	439227	Symbol	* data		439031						
ANR	439228	Symbol	op -> operands [ 0 ] . regs		439031						
ANR	439229	Symbol	OT_DWORD		439031						
ANR	439230	Function	opfisttp	3151:0:80382:81000							
ANR	439231	FunctionDef	"opfisttp (RAsm * a , ut8 * data , const Opcode * op)"		439230	0					
ANR	439232	CompoundStatement		3151:58:80440:81000	439230	0					
ANR	439233	IdentifierDeclStatement	int l = 0 ;	3152:1:80443:80452	439230	0	True				
ANR	439234	IdentifierDecl	l = 0		439230	0					
ANR	439235	IdentifierDeclType	int		439230	0					
ANR	439236	Identifier	l		439230	1					
ANR	439237	AssignmentExpression	l = 0		439230	2		=			
ANR	439238	Identifier	l		439230	0					
ANR	439239	PrimaryExpression	0		439230	1					
ANR	439240	SwitchStatement	switch ( op -> operands_count )		439230	1					
ANR	439241	Condition	op -> operands_count	3153:9:80463:80480	439230	0	True				
ANR	439242	PtrMemberAccess	op -> operands_count		439230	0					
ANR	439243	Identifier	op		439230	0					
ANR	439244	Identifier	operands_count		439230	1					
ANR	439245	CompoundStatement		3:29:42:42	439230	1					
ANR	439246	Label	case 1 :	3154:1:80486:80492	439230	0	True				
ANR	439247	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		439230	1					
ANR	439248	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3155:7:80501:80532	439230	0	True				
ANR	439249	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		439230	0		&			
ANR	439250	MemberAccess	op -> operands [ 0 ] . type		439230	0					
ANR	439251	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439252	PtrMemberAccess	op -> operands		439230	0					
ANR	439253	Identifier	op		439230	0					
ANR	439254	Identifier	operands		439230	1					
ANR	439255	PrimaryExpression	0		439230	1					
ANR	439256	Identifier	type		439230	1					
ANR	439257	Identifier	OT_MEMORY		439230	1					
ANR	439258	CompoundStatement		5:42:95:95	439230	1					
ANR	439259	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		439230	0					
ANR	439260	Condition	op -> operands [ 0 ] . type & OT_WORD	3156:8:80546:80575	439230	0	True				
ANR	439261	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		439230	0		&			
ANR	439262	MemberAccess	op -> operands [ 0 ] . type		439230	0					
ANR	439263	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439264	PtrMemberAccess	op -> operands		439230	0					
ANR	439265	Identifier	op		439230	0					
ANR	439266	Identifier	operands		439230	1					
ANR	439267	PrimaryExpression	0		439230	1					
ANR	439268	Identifier	type		439230	1					
ANR	439269	Identifier	OT_WORD		439230	1					
ANR	439270	CompoundStatement		6:41:138:138	439230	1					
ANR	439271	ExpressionStatement	data [ l ++ ] = 0xdf	3157:4:80585:80601	439230	0	True				
ANR	439272	AssignmentExpression	data [ l ++ ] = 0xdf		439230	0		=			
ANR	439273	ArrayIndexing	data [ l ++ ]		439230	0					
ANR	439274	Identifier	data		439230	0					
ANR	439275	PostIncDecOperationExpression	l ++		439230	1					
ANR	439276	Identifier	l		439230	0					
ANR	439277	IncDec	++		439230	1					
ANR	439278	PrimaryExpression	0xdf		439230	1					
ANR	439279	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3158:4:80607:80649	439230	1	True				
ANR	439280	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		439230	0		=			
ANR	439281	ArrayIndexing	data [ l ++ ]		439230	0					
ANR	439282	Identifier	data		439230	0					
ANR	439283	PostIncDecOperationExpression	l ++		439230	1					
ANR	439284	Identifier	l		439230	0					
ANR	439285	IncDec	++		439230	1					
ANR	439286	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		439230	1		|			
ANR	439287	PrimaryExpression	0x08		439230	0					
ANR	439288	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439230	1					
ANR	439289	MemberAccess	op -> operands [ 0 ] . regs		439230	0					
ANR	439290	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439291	PtrMemberAccess	op -> operands		439230	0					
ANR	439292	Identifier	op		439230	0					
ANR	439293	Identifier	operands		439230	1					
ANR	439294	PrimaryExpression	0		439230	1					
ANR	439295	Identifier	regs		439230	1					
ANR	439296	PrimaryExpression	0		439230	1					
ANR	439297	ElseStatement	else		439230	0					
ANR	439298	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		439230	0					
ANR	439299	Condition	op -> operands [ 0 ] . type & OT_DWORD	3159:15:80666:80696	439230	0	True				
ANR	439300	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		439230	0		&			
ANR	439301	MemberAccess	op -> operands [ 0 ] . type		439230	0					
ANR	439302	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439303	PtrMemberAccess	op -> operands		439230	0					
ANR	439304	Identifier	op		439230	0					
ANR	439305	Identifier	operands		439230	1					
ANR	439306	PrimaryExpression	0		439230	1					
ANR	439307	Identifier	type		439230	1					
ANR	439308	Identifier	OT_DWORD		439230	1					
ANR	439309	CompoundStatement		9:49:259:259	439230	1					
ANR	439310	ExpressionStatement	data [ l ++ ] = 0xdb	3160:4:80706:80722	439230	0	True				
ANR	439311	AssignmentExpression	data [ l ++ ] = 0xdb		439230	0		=			
ANR	439312	ArrayIndexing	data [ l ++ ]		439230	0					
ANR	439313	Identifier	data		439230	0					
ANR	439314	PostIncDecOperationExpression	l ++		439230	1					
ANR	439315	Identifier	l		439230	0					
ANR	439316	IncDec	++		439230	1					
ANR	439317	PrimaryExpression	0xdb		439230	1					
ANR	439318	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3161:4:80728:80770	439230	1	True				
ANR	439319	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		439230	0		=			
ANR	439320	ArrayIndexing	data [ l ++ ]		439230	0					
ANR	439321	Identifier	data		439230	0					
ANR	439322	PostIncDecOperationExpression	l ++		439230	1					
ANR	439323	Identifier	l		439230	0					
ANR	439324	IncDec	++		439230	1					
ANR	439325	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		439230	1		|			
ANR	439326	PrimaryExpression	0x08		439230	0					
ANR	439327	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439230	1					
ANR	439328	MemberAccess	op -> operands [ 0 ] . regs		439230	0					
ANR	439329	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439330	PtrMemberAccess	op -> operands		439230	0					
ANR	439331	Identifier	op		439230	0					
ANR	439332	Identifier	operands		439230	1					
ANR	439333	PrimaryExpression	0		439230	1					
ANR	439334	Identifier	regs		439230	1					
ANR	439335	PrimaryExpression	0		439230	1					
ANR	439336	ElseStatement	else		439230	0					
ANR	439337	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		439230	0					
ANR	439338	Condition	op -> operands [ 0 ] . type & OT_QWORD	3162:15:80787:80817	439230	0	True				
ANR	439339	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		439230	0		&			
ANR	439340	MemberAccess	op -> operands [ 0 ] . type		439230	0					
ANR	439341	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439342	PtrMemberAccess	op -> operands		439230	0					
ANR	439343	Identifier	op		439230	0					
ANR	439344	Identifier	operands		439230	1					
ANR	439345	PrimaryExpression	0		439230	1					
ANR	439346	Identifier	type		439230	1					
ANR	439347	Identifier	OT_QWORD		439230	1					
ANR	439348	CompoundStatement		12:49:380:380	439230	1					
ANR	439349	ExpressionStatement	data [ l ++ ] = 0xdd	3163:4:80827:80843	439230	0	True				
ANR	439350	AssignmentExpression	data [ l ++ ] = 0xdd		439230	0		=			
ANR	439351	ArrayIndexing	data [ l ++ ]		439230	0					
ANR	439352	Identifier	data		439230	0					
ANR	439353	PostIncDecOperationExpression	l ++		439230	1					
ANR	439354	Identifier	l		439230	0					
ANR	439355	IncDec	++		439230	1					
ANR	439356	PrimaryExpression	0xdd		439230	1					
ANR	439357	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3164:4:80849:80891	439230	1	True				
ANR	439358	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		439230	0		=			
ANR	439359	ArrayIndexing	data [ l ++ ]		439230	0					
ANR	439360	Identifier	data		439230	0					
ANR	439361	PostIncDecOperationExpression	l ++		439230	1					
ANR	439362	Identifier	l		439230	0					
ANR	439363	IncDec	++		439230	1					
ANR	439364	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		439230	1		|			
ANR	439365	PrimaryExpression	0x08		439230	0					
ANR	439366	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439230	1					
ANR	439367	MemberAccess	op -> operands [ 0 ] . regs		439230	0					
ANR	439368	ArrayIndexing	op -> operands [ 0 ]		439230	0					
ANR	439369	PtrMemberAccess	op -> operands		439230	0					
ANR	439370	Identifier	op		439230	0					
ANR	439371	Identifier	operands		439230	1					
ANR	439372	PrimaryExpression	0		439230	1					
ANR	439373	Identifier	regs		439230	1					
ANR	439374	PrimaryExpression	0		439230	1					
ANR	439375	ElseStatement	else		439230	0					
ANR	439376	CompoundStatement		15:10:462:462	439230	0					
ANR	439377	ReturnStatement	return - 1 ;	3166:4:80909:80918	439230	0	True				
ANR	439378	UnaryOperationExpression	- 1		439230	0					
ANR	439379	UnaryOperator	-		439230	0					
ANR	439380	PrimaryExpression	1		439230	1					
ANR	439381	ElseStatement	else		439230	0					
ANR	439382	CompoundStatement		18:9:493:493	439230	0					
ANR	439383	ReturnStatement	return - 1 ;	3169:3:80939:80948	439230	0	True				
ANR	439384	UnaryOperationExpression	- 1		439230	0					
ANR	439385	UnaryOperator	-		439230	0					
ANR	439386	PrimaryExpression	1		439230	1					
ANR	439387	BreakStatement	break ;	3171:2:80956:80961	439230	2	True				
ANR	439388	Label	default :	3172:1:80964:80971	439230	3	True				
ANR	439389	Identifier	default		439230	0					
ANR	439390	ReturnStatement	return - 1 ;	3173:2:80975:80984	439230	4	True				
ANR	439391	UnaryOperationExpression	- 1		439230	0					
ANR	439392	UnaryOperator	-		439230	0					
ANR	439393	PrimaryExpression	1		439230	1					
ANR	439394	ReturnStatement	return l ;	3175:1:80990:80998	439230	2	True				
ANR	439395	Identifier	l		439230	0					
ANR	439396	ReturnType	static int		439230	1					
ANR	439397	Identifier	opfisttp		439230	2					
ANR	439398	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		439230	3					
ANR	439399	Parameter	RAsm * a	3151:20:80402:80408	439230	0	True				
ANR	439400	ParameterType	RAsm *		439230	0					
ANR	439401	Identifier	a		439230	1					
ANR	439402	Parameter	ut8 * data	3151:29:80411:80419	439230	1	True				
ANR	439403	ParameterType	ut8 *		439230	0					
ANR	439404	Identifier	data		439230	1					
ANR	439405	Parameter	const Opcode * op	3151:40:80422:80437	439230	2	True				
ANR	439406	ParameterType	const Opcode *		439230	0					
ANR	439407	Identifier	op		439230	1					
ANR	439408	CFGEntryNode	ENTRY		439230		True				
ANR	439409	CFGExitNode	EXIT		439230		True				
ANR	439410	Symbol	a		439230						
ANR	439411	Symbol	op		439230						
ANR	439412	Symbol	OT_WORD		439230						
ANR	439413	Symbol	OT_QWORD		439230						
ANR	439414	Symbol	data		439230						
ANR	439415	Symbol	* op		439230						
ANR	439416	Symbol	* * op -> operands		439230						
ANR	439417	Symbol	l		439230						
ANR	439418	Symbol	* * op		439230						
ANR	439419	Symbol	* op -> operands		439230						
ANR	439420	Symbol	op -> operands_count		439230						
ANR	439421	Symbol	* op -> operands [ 0 ] . regs		439230						
ANR	439422	Symbol	op -> operands [ 0 ] . type		439230						
ANR	439423	Symbol	* * * op		439230						
ANR	439424	Symbol	op -> operands		439230						
ANR	439425	Symbol	OT_MEMORY		439230						
ANR	439426	Symbol	* data		439230						
ANR	439427	Symbol	op -> operands [ 0 ] . regs		439230						
ANR	439428	Symbol	OT_DWORD		439230						
ANR	439429	Function	opfstenv	3178:0:81003:81323							
ANR	439430	FunctionDef	"opfstenv (RAsm * a , ut8 * data , const Opcode * op)"		439429	0					
ANR	439431	CompoundStatement		3178:58:81061:81323	439429	0					
ANR	439432	IdentifierDeclStatement	int l = 0 ;	3179:1:81064:81073	439429	0	True				
ANR	439433	IdentifierDecl	l = 0		439429	0					
ANR	439434	IdentifierDeclType	int		439429	0					
ANR	439435	Identifier	l		439429	1					
ANR	439436	AssignmentExpression	l = 0		439429	2		=			
ANR	439437	Identifier	l		439429	0					
ANR	439438	PrimaryExpression	0		439429	1					
ANR	439439	SwitchStatement	switch ( op -> operands_count )		439429	1					
ANR	439440	Condition	op -> operands_count	3180:9:81084:81101	439429	0	True				
ANR	439441	PtrMemberAccess	op -> operands_count		439429	0					
ANR	439442	Identifier	op		439429	0					
ANR	439443	Identifier	operands_count		439429	1					
ANR	439444	CompoundStatement		3:29:42:42	439429	1					
ANR	439445	Label	case 1 :	3181:1:81107:81113	439429	0	True				
ANR	439446	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		439429	1					
ANR	439447	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3182:7:81122:81153	439429	0	True				
ANR	439448	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		439429	0		&			
ANR	439449	MemberAccess	op -> operands [ 0 ] . type		439429	0					
ANR	439450	ArrayIndexing	op -> operands [ 0 ]		439429	0					
ANR	439451	PtrMemberAccess	op -> operands		439429	0					
ANR	439452	Identifier	op		439429	0					
ANR	439453	Identifier	operands		439429	1					
ANR	439454	PrimaryExpression	0		439429	1					
ANR	439455	Identifier	type		439429	1					
ANR	439456	Identifier	OT_MEMORY		439429	1					
ANR	439457	CompoundStatement		5:42:95:95	439429	1					
ANR	439458	ExpressionStatement	data [ l ++ ] = 0x9b	3183:3:81162:81178	439429	0	True				
ANR	439459	AssignmentExpression	data [ l ++ ] = 0x9b		439429	0		=			
ANR	439460	ArrayIndexing	data [ l ++ ]		439429	0					
ANR	439461	Identifier	data		439429	0					
ANR	439462	PostIncDecOperationExpression	l ++		439429	1					
ANR	439463	Identifier	l		439429	0					
ANR	439464	IncDec	++		439429	1					
ANR	439465	PrimaryExpression	0x9b		439429	1					
ANR	439466	ExpressionStatement	data [ l ++ ] = 0xd9	3184:3:81183:81199	439429	1	True				
ANR	439467	AssignmentExpression	data [ l ++ ] = 0xd9		439429	0		=			
ANR	439468	ArrayIndexing	data [ l ++ ]		439429	0					
ANR	439469	Identifier	data		439429	0					
ANR	439470	PostIncDecOperationExpression	l ++		439429	1					
ANR	439471	Identifier	l		439429	0					
ANR	439472	IncDec	++		439429	1					
ANR	439473	PrimaryExpression	0xd9		439429	1					
ANR	439474	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3185:3:81204:81246	439429	2	True				
ANR	439475	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		439429	0		=			
ANR	439476	ArrayIndexing	data [ l ++ ]		439429	0					
ANR	439477	Identifier	data		439429	0					
ANR	439478	PostIncDecOperationExpression	l ++		439429	1					
ANR	439479	Identifier	l		439429	0					
ANR	439480	IncDec	++		439429	1					
ANR	439481	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		439429	1		|			
ANR	439482	PrimaryExpression	0x30		439429	0					
ANR	439483	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439429	1					
ANR	439484	MemberAccess	op -> operands [ 0 ] . regs		439429	0					
ANR	439485	ArrayIndexing	op -> operands [ 0 ]		439429	0					
ANR	439486	PtrMemberAccess	op -> operands		439429	0					
ANR	439487	Identifier	op		439429	0					
ANR	439488	Identifier	operands		439429	1					
ANR	439489	PrimaryExpression	0		439429	1					
ANR	439490	Identifier	regs		439429	1					
ANR	439491	PrimaryExpression	0		439429	1					
ANR	439492	ElseStatement	else		439429	0					
ANR	439493	CompoundStatement		9:9:195:195	439429	0					
ANR	439494	ReturnStatement	return - 1 ;	3187:3:81262:81271	439429	0	True				
ANR	439495	UnaryOperationExpression	- 1		439429	0					
ANR	439496	UnaryOperator	-		439429	0					
ANR	439497	PrimaryExpression	1		439429	1					
ANR	439498	BreakStatement	break ;	3189:2:81279:81284	439429	2	True				
ANR	439499	Label	default :	3190:1:81287:81294	439429	3	True				
ANR	439500	Identifier	default		439429	0					
ANR	439501	ReturnStatement	return - 1 ;	3191:2:81298:81307	439429	4	True				
ANR	439502	UnaryOperationExpression	- 1		439429	0					
ANR	439503	UnaryOperator	-		439429	0					
ANR	439504	PrimaryExpression	1		439429	1					
ANR	439505	ReturnStatement	return l ;	3193:1:81313:81321	439429	2	True				
ANR	439506	Identifier	l		439429	0					
ANR	439507	ReturnType	static int		439429	1					
ANR	439508	Identifier	opfstenv		439429	2					
ANR	439509	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		439429	3					
ANR	439510	Parameter	RAsm * a	3178:20:81023:81029	439429	0	True				
ANR	439511	ParameterType	RAsm *		439429	0					
ANR	439512	Identifier	a		439429	1					
ANR	439513	Parameter	ut8 * data	3178:29:81032:81040	439429	1	True				
ANR	439514	ParameterType	ut8 *		439429	0					
ANR	439515	Identifier	data		439429	1					
ANR	439516	Parameter	const Opcode * op	3178:40:81043:81058	439429	2	True				
ANR	439517	ParameterType	const Opcode *		439429	0					
ANR	439518	Identifier	op		439429	1					
ANR	439519	CFGEntryNode	ENTRY		439429		True				
ANR	439520	CFGExitNode	EXIT		439429		True				
ANR	439521	Symbol	a		439429						
ANR	439522	Symbol	op		439429						
ANR	439523	Symbol	data		439429						
ANR	439524	Symbol	* op		439429						
ANR	439525	Symbol	* * op -> operands		439429						
ANR	439526	Symbol	l		439429						
ANR	439527	Symbol	* * op		439429						
ANR	439528	Symbol	* op -> operands		439429						
ANR	439529	Symbol	op -> operands_count		439429						
ANR	439530	Symbol	* op -> operands [ 0 ] . regs		439429						
ANR	439531	Symbol	op -> operands [ 0 ] . type		439429						
ANR	439532	Symbol	* * * op		439429						
ANR	439533	Symbol	op -> operands		439429						
ANR	439534	Symbol	OT_MEMORY		439429						
ANR	439535	Symbol	* data		439429						
ANR	439536	Symbol	op -> operands [ 0 ] . regs		439429						
ANR	439537	Function	opfnstenv	3196:0:81326:81626							
ANR	439538	FunctionDef	"opfnstenv (RAsm * a , ut8 * data , const Opcode * op)"		439537	0					
ANR	439539	CompoundStatement		3196:59:81385:81626	439537	0					
ANR	439540	IdentifierDeclStatement	int l = 0 ;	3197:1:81388:81397	439537	0	True				
ANR	439541	IdentifierDecl	l = 0		439537	0					
ANR	439542	IdentifierDeclType	int		439537	0					
ANR	439543	Identifier	l		439537	1					
ANR	439544	AssignmentExpression	l = 0		439537	2		=			
ANR	439545	Identifier	l		439537	0					
ANR	439546	PrimaryExpression	0		439537	1					
ANR	439547	SwitchStatement	switch ( op -> operands_count )		439537	1					
ANR	439548	Condition	op -> operands_count	3198:9:81408:81425	439537	0	True				
ANR	439549	PtrMemberAccess	op -> operands_count		439537	0					
ANR	439550	Identifier	op		439537	0					
ANR	439551	Identifier	operands_count		439537	1					
ANR	439552	CompoundStatement		3:29:42:42	439537	1					
ANR	439553	Label	case 1 :	3199:1:81431:81437	439537	0	True				
ANR	439554	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		439537	1					
ANR	439555	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3200:7:81446:81477	439537	0	True				
ANR	439556	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		439537	0		&			
ANR	439557	MemberAccess	op -> operands [ 0 ] . type		439537	0					
ANR	439558	ArrayIndexing	op -> operands [ 0 ]		439537	0					
ANR	439559	PtrMemberAccess	op -> operands		439537	0					
ANR	439560	Identifier	op		439537	0					
ANR	439561	Identifier	operands		439537	1					
ANR	439562	PrimaryExpression	0		439537	1					
ANR	439563	Identifier	type		439537	1					
ANR	439564	Identifier	OT_MEMORY		439537	1					
ANR	439565	CompoundStatement		5:42:95:95	439537	1					
ANR	439566	ExpressionStatement	data [ l ++ ] = 0xd9	3201:3:81486:81502	439537	0	True				
ANR	439567	AssignmentExpression	data [ l ++ ] = 0xd9		439537	0		=			
ANR	439568	ArrayIndexing	data [ l ++ ]		439537	0					
ANR	439569	Identifier	data		439537	0					
ANR	439570	PostIncDecOperationExpression	l ++		439537	1					
ANR	439571	Identifier	l		439537	0					
ANR	439572	IncDec	++		439537	1					
ANR	439573	PrimaryExpression	0xd9		439537	1					
ANR	439574	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3202:3:81507:81549	439537	1	True				
ANR	439575	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		439537	0		=			
ANR	439576	ArrayIndexing	data [ l ++ ]		439537	0					
ANR	439577	Identifier	data		439537	0					
ANR	439578	PostIncDecOperationExpression	l ++		439537	1					
ANR	439579	Identifier	l		439537	0					
ANR	439580	IncDec	++		439537	1					
ANR	439581	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		439537	1		|			
ANR	439582	PrimaryExpression	0x30		439537	0					
ANR	439583	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439537	1					
ANR	439584	MemberAccess	op -> operands [ 0 ] . regs		439537	0					
ANR	439585	ArrayIndexing	op -> operands [ 0 ]		439537	0					
ANR	439586	PtrMemberAccess	op -> operands		439537	0					
ANR	439587	Identifier	op		439537	0					
ANR	439588	Identifier	operands		439537	1					
ANR	439589	PrimaryExpression	0		439537	1					
ANR	439590	Identifier	regs		439537	1					
ANR	439591	PrimaryExpression	0		439537	1					
ANR	439592	ElseStatement	else		439537	0					
ANR	439593	CompoundStatement		8:9:174:174	439537	0					
ANR	439594	ReturnStatement	return - 1 ;	3204:3:81565:81574	439537	0	True				
ANR	439595	UnaryOperationExpression	- 1		439537	0					
ANR	439596	UnaryOperator	-		439537	0					
ANR	439597	PrimaryExpression	1		439537	1					
ANR	439598	BreakStatement	break ;	3206:2:81582:81587	439537	2	True				
ANR	439599	Label	default :	3207:1:81590:81597	439537	3	True				
ANR	439600	Identifier	default		439537	0					
ANR	439601	ReturnStatement	return - 1 ;	3208:2:81601:81610	439537	4	True				
ANR	439602	UnaryOperationExpression	- 1		439537	0					
ANR	439603	UnaryOperator	-		439537	0					
ANR	439604	PrimaryExpression	1		439537	1					
ANR	439605	ReturnStatement	return l ;	3210:1:81616:81624	439537	2	True				
ANR	439606	Identifier	l		439537	0					
ANR	439607	ReturnType	static int		439537	1					
ANR	439608	Identifier	opfnstenv		439537	2					
ANR	439609	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		439537	3					
ANR	439610	Parameter	RAsm * a	3196:21:81347:81353	439537	0	True				
ANR	439611	ParameterType	RAsm *		439537	0					
ANR	439612	Identifier	a		439537	1					
ANR	439613	Parameter	ut8 * data	3196:30:81356:81364	439537	1	True				
ANR	439614	ParameterType	ut8 *		439537	0					
ANR	439615	Identifier	data		439537	1					
ANR	439616	Parameter	const Opcode * op	3196:41:81367:81382	439537	2	True				
ANR	439617	ParameterType	const Opcode *		439537	0					
ANR	439618	Identifier	op		439537	1					
ANR	439619	CFGEntryNode	ENTRY		439537		True				
ANR	439620	CFGExitNode	EXIT		439537		True				
ANR	439621	Symbol	a		439537						
ANR	439622	Symbol	op		439537						
ANR	439623	Symbol	data		439537						
ANR	439624	Symbol	* op		439537						
ANR	439625	Symbol	* * op -> operands		439537						
ANR	439626	Symbol	l		439537						
ANR	439627	Symbol	* * op		439537						
ANR	439628	Symbol	* op -> operands		439537						
ANR	439629	Symbol	op -> operands_count		439537						
ANR	439630	Symbol	* op -> operands [ 0 ] . regs		439537						
ANR	439631	Symbol	op -> operands [ 0 ] . type		439537						
ANR	439632	Symbol	* * * op		439537						
ANR	439633	Symbol	op -> operands		439537						
ANR	439634	Symbol	OT_MEMORY		439537						
ANR	439635	Symbol	* data		439537						
ANR	439636	Symbol	op -> operands [ 0 ] . regs		439537						
ANR	439637	Function	opfdiv	3213:0:81629:82589							
ANR	439638	FunctionDef	"opfdiv (RAsm * a , ut8 * data , const Opcode * op)"		439637	0					
ANR	439639	CompoundStatement		3213:56:81685:82589	439637	0					
ANR	439640	IdentifierDeclStatement	int l = 0 ;	3214:1:81688:81697	439637	0	True				
ANR	439641	IdentifierDecl	l = 0		439637	0					
ANR	439642	IdentifierDeclType	int		439637	0					
ANR	439643	Identifier	l		439637	1					
ANR	439644	AssignmentExpression	l = 0		439637	2		=			
ANR	439645	Identifier	l		439637	0					
ANR	439646	PrimaryExpression	0		439637	1					
ANR	439647	SwitchStatement	switch ( op -> operands_count )		439637	1					
ANR	439648	Condition	op -> operands_count	3215:9:81708:81725	439637	0	True				
ANR	439649	PtrMemberAccess	op -> operands_count		439637	0					
ANR	439650	Identifier	op		439637	0					
ANR	439651	Identifier	operands_count		439637	1					
ANR	439652	CompoundStatement		3:29:42:42	439637	1					
ANR	439653	Label	case 1 :	3216:1:81731:81737	439637	0	True				
ANR	439654	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		439637	1					
ANR	439655	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3217:7:81746:81777	439637	0	True				
ANR	439656	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		439637	0		&			
ANR	439657	MemberAccess	op -> operands [ 0 ] . type		439637	0					
ANR	439658	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439659	PtrMemberAccess	op -> operands		439637	0					
ANR	439660	Identifier	op		439637	0					
ANR	439661	Identifier	operands		439637	1					
ANR	439662	PrimaryExpression	0		439637	1					
ANR	439663	Identifier	type		439637	1					
ANR	439664	Identifier	OT_MEMORY		439637	1					
ANR	439665	CompoundStatement		5:42:95:95	439637	1					
ANR	439666	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		439637	0					
ANR	439667	Condition	op -> operands [ 0 ] . type & OT_DWORD	3218:8:81791:81821	439637	0	True				
ANR	439668	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		439637	0		&			
ANR	439669	MemberAccess	op -> operands [ 0 ] . type		439637	0					
ANR	439670	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439671	PtrMemberAccess	op -> operands		439637	0					
ANR	439672	Identifier	op		439637	0					
ANR	439673	Identifier	operands		439637	1					
ANR	439674	PrimaryExpression	0		439637	1					
ANR	439675	Identifier	type		439637	1					
ANR	439676	Identifier	OT_DWORD		439637	1					
ANR	439677	CompoundStatement		6:42:139:139	439637	1					
ANR	439678	ExpressionStatement	data [ l ++ ] = 0xd8	3219:4:81831:81847	439637	0	True				
ANR	439679	AssignmentExpression	data [ l ++ ] = 0xd8		439637	0		=			
ANR	439680	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439681	Identifier	data		439637	0					
ANR	439682	PostIncDecOperationExpression	l ++		439637	1					
ANR	439683	Identifier	l		439637	0					
ANR	439684	IncDec	++		439637	1					
ANR	439685	PrimaryExpression	0xd8		439637	1					
ANR	439686	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3220:4:81853:81895	439637	1	True				
ANR	439687	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		439637	0		=			
ANR	439688	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439689	Identifier	data		439637	0					
ANR	439690	PostIncDecOperationExpression	l ++		439637	1					
ANR	439691	Identifier	l		439637	0					
ANR	439692	IncDec	++		439637	1					
ANR	439693	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		439637	1		|			
ANR	439694	PrimaryExpression	0x30		439637	0					
ANR	439695	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439637	1					
ANR	439696	MemberAccess	op -> operands [ 0 ] . regs		439637	0					
ANR	439697	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439698	PtrMemberAccess	op -> operands		439637	0					
ANR	439699	Identifier	op		439637	0					
ANR	439700	Identifier	operands		439637	1					
ANR	439701	PrimaryExpression	0		439637	1					
ANR	439702	Identifier	regs		439637	1					
ANR	439703	PrimaryExpression	0		439637	1					
ANR	439704	ElseStatement	else		439637	0					
ANR	439705	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		439637	0					
ANR	439706	Condition	op -> operands [ 0 ] . type & OT_QWORD	3221:15:81912:81942	439637	0	True				
ANR	439707	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		439637	0		&			
ANR	439708	MemberAccess	op -> operands [ 0 ] . type		439637	0					
ANR	439709	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439710	PtrMemberAccess	op -> operands		439637	0					
ANR	439711	Identifier	op		439637	0					
ANR	439712	Identifier	operands		439637	1					
ANR	439713	PrimaryExpression	0		439637	1					
ANR	439714	Identifier	type		439637	1					
ANR	439715	Identifier	OT_QWORD		439637	1					
ANR	439716	CompoundStatement		9:49:260:260	439637	1					
ANR	439717	ExpressionStatement	data [ l ++ ] = 0xdc	3222:4:81952:81968	439637	0	True				
ANR	439718	AssignmentExpression	data [ l ++ ] = 0xdc		439637	0		=			
ANR	439719	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439720	Identifier	data		439637	0					
ANR	439721	PostIncDecOperationExpression	l ++		439637	1					
ANR	439722	Identifier	l		439637	0					
ANR	439723	IncDec	++		439637	1					
ANR	439724	PrimaryExpression	0xdc		439637	1					
ANR	439725	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3223:4:81974:82016	439637	1	True				
ANR	439726	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		439637	0		=			
ANR	439727	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439728	Identifier	data		439637	0					
ANR	439729	PostIncDecOperationExpression	l ++		439637	1					
ANR	439730	Identifier	l		439637	0					
ANR	439731	IncDec	++		439637	1					
ANR	439732	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		439637	1		|			
ANR	439733	PrimaryExpression	0x30		439637	0					
ANR	439734	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		439637	1					
ANR	439735	MemberAccess	op -> operands [ 0 ] . regs		439637	0					
ANR	439736	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439737	PtrMemberAccess	op -> operands		439637	0					
ANR	439738	Identifier	op		439637	0					
ANR	439739	Identifier	operands		439637	1					
ANR	439740	PrimaryExpression	0		439637	1					
ANR	439741	Identifier	regs		439637	1					
ANR	439742	PrimaryExpression	0		439637	1					
ANR	439743	ElseStatement	else		439637	0					
ANR	439744	CompoundStatement		12:10:342:342	439637	0					
ANR	439745	ReturnStatement	return - 1 ;	3225:4:82034:82043	439637	0	True				
ANR	439746	UnaryOperationExpression	- 1		439637	0					
ANR	439747	UnaryOperator	-		439637	0					
ANR	439748	PrimaryExpression	1		439637	1					
ANR	439749	ElseStatement	else		439637	0					
ANR	439750	CompoundStatement		15:9:373:373	439637	0					
ANR	439751	ReturnStatement	return - 1 ;	3228:3:82064:82073	439637	0	True				
ANR	439752	UnaryOperationExpression	- 1		439637	0					
ANR	439753	UnaryOperator	-		439637	0					
ANR	439754	PrimaryExpression	1		439637	1					
ANR	439755	BreakStatement	break ;	3230:2:82081:82086	439637	2	True				
ANR	439756	Label	case 2 :	3231:1:82089:82095	439637	3	True				
ANR	439757	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		439637	4					
ANR	439758	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3232:7:82104:82232	439637	0	True				
ANR	439759	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		439637	0		&&			
ANR	439760	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		439637	0		&			
ANR	439761	MemberAccess	op -> operands [ 0 ] . type		439637	0					
ANR	439762	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439763	PtrMemberAccess	op -> operands		439637	0					
ANR	439764	Identifier	op		439637	0					
ANR	439765	Identifier	operands		439637	1					
ANR	439766	PrimaryExpression	0		439637	1					
ANR	439767	Identifier	type		439637	1					
ANR	439768	BitAndExpression	OT_FPUREG & ~OT_REGALL		439637	1		&			
ANR	439769	Identifier	OT_FPUREG		439637	0					
ANR	439770	Identifier	~OT_REGALL		439637	1					
ANR	439771	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		439637	1		&&			
ANR	439772	EqualityExpression	op -> operands [ 0 ] . reg == 0		439637	0		==			
ANR	439773	MemberAccess	op -> operands [ 0 ] . reg		439637	0					
ANR	439774	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439775	PtrMemberAccess	op -> operands		439637	0					
ANR	439776	Identifier	op		439637	0					
ANR	439777	Identifier	operands		439637	1					
ANR	439778	PrimaryExpression	0		439637	1					
ANR	439779	Identifier	reg		439637	1					
ANR	439780	PrimaryExpression	0		439637	1					
ANR	439781	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		439637	1		&			
ANR	439782	MemberAccess	op -> operands [ 1 ] . type		439637	0					
ANR	439783	ArrayIndexing	op -> operands [ 1 ]		439637	0					
ANR	439784	PtrMemberAccess	op -> operands		439637	0					
ANR	439785	Identifier	op		439637	0					
ANR	439786	Identifier	operands		439637	1					
ANR	439787	PrimaryExpression	1		439637	1					
ANR	439788	Identifier	type		439637	1					
ANR	439789	BitAndExpression	OT_FPUREG & ~OT_REGALL		439637	1		&			
ANR	439790	Identifier	OT_FPUREG		439637	0					
ANR	439791	Identifier	~OT_REGALL		439637	1					
ANR	439792	CompoundStatement		21:55:550:550	439637	1					
ANR	439793	ExpressionStatement	data [ l ++ ] = 0xd8	3234:3:82241:82257	439637	0	True				
ANR	439794	AssignmentExpression	data [ l ++ ] = 0xd8		439637	0		=			
ANR	439795	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439796	Identifier	data		439637	0					
ANR	439797	PostIncDecOperationExpression	l ++		439637	1					
ANR	439798	Identifier	l		439637	0					
ANR	439799	IncDec	++		439637	1					
ANR	439800	PrimaryExpression	0xd8		439637	1					
ANR	439801	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 1 ] . reg	3235:3:82262:82300	439637	1	True				
ANR	439802	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 1 ] . reg		439637	0		=			
ANR	439803	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439804	Identifier	data		439637	0					
ANR	439805	PostIncDecOperationExpression	l ++		439637	1					
ANR	439806	Identifier	l		439637	0					
ANR	439807	IncDec	++		439637	1					
ANR	439808	InclusiveOrExpression	0xf0 | op -> operands [ 1 ] . reg		439637	1		|			
ANR	439809	PrimaryExpression	0xf0		439637	0					
ANR	439810	MemberAccess	op -> operands [ 1 ] . reg		439637	1					
ANR	439811	ArrayIndexing	op -> operands [ 1 ]		439637	0					
ANR	439812	PtrMemberAccess	op -> operands		439637	0					
ANR	439813	Identifier	op		439637	0					
ANR	439814	Identifier	operands		439637	1					
ANR	439815	PrimaryExpression	1		439637	1					
ANR	439816	Identifier	reg		439637	1					
ANR	439817	ElseStatement	else		439637	0					
ANR	439818	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		439637	0					
ANR	439819	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3236:14:82316:82444	439637	0	True				
ANR	439820	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		439637	0		&&			
ANR	439821	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		439637	0		&			
ANR	439822	MemberAccess	op -> operands [ 0 ] . type		439637	0					
ANR	439823	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439824	PtrMemberAccess	op -> operands		439637	0					
ANR	439825	Identifier	op		439637	0					
ANR	439826	Identifier	operands		439637	1					
ANR	439827	PrimaryExpression	0		439637	1					
ANR	439828	Identifier	type		439637	1					
ANR	439829	BitAndExpression	OT_FPUREG & ~OT_REGALL		439637	1		&			
ANR	439830	Identifier	OT_FPUREG		439637	0					
ANR	439831	Identifier	~OT_REGALL		439637	1					
ANR	439832	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		439637	1		&&			
ANR	439833	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		439637	0		&			
ANR	439834	MemberAccess	op -> operands [ 1 ] . type		439637	0					
ANR	439835	ArrayIndexing	op -> operands [ 1 ]		439637	0					
ANR	439836	PtrMemberAccess	op -> operands		439637	0					
ANR	439837	Identifier	op		439637	0					
ANR	439838	Identifier	operands		439637	1					
ANR	439839	PrimaryExpression	1		439637	1					
ANR	439840	Identifier	type		439637	1					
ANR	439841	BitAndExpression	OT_FPUREG & ~OT_REGALL		439637	1		&			
ANR	439842	Identifier	OT_FPUREG		439637	0					
ANR	439843	Identifier	~OT_REGALL		439637	1					
ANR	439844	EqualityExpression	op -> operands [ 1 ] . reg == 0		439637	1		==			
ANR	439845	MemberAccess	op -> operands [ 1 ] . reg		439637	0					
ANR	439846	ArrayIndexing	op -> operands [ 1 ]		439637	0					
ANR	439847	PtrMemberAccess	op -> operands		439637	0					
ANR	439848	Identifier	op		439637	0					
ANR	439849	Identifier	operands		439637	1					
ANR	439850	PrimaryExpression	1		439637	1					
ANR	439851	Identifier	reg		439637	1					
ANR	439852	PrimaryExpression	0		439637	1					
ANR	439853	CompoundStatement		25:83:762:762	439637	1					
ANR	439854	ExpressionStatement	data [ l ++ ] = 0xdc	3238:3:82453:82469	439637	0	True				
ANR	439855	AssignmentExpression	data [ l ++ ] = 0xdc		439637	0		=			
ANR	439856	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439857	Identifier	data		439637	0					
ANR	439858	PostIncDecOperationExpression	l ++		439637	1					
ANR	439859	Identifier	l		439637	0					
ANR	439860	IncDec	++		439637	1					
ANR	439861	PrimaryExpression	0xdc		439637	1					
ANR	439862	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg	3239:3:82474:82512	439637	1	True				
ANR	439863	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg		439637	0		=			
ANR	439864	ArrayIndexing	data [ l ++ ]		439637	0					
ANR	439865	Identifier	data		439637	0					
ANR	439866	PostIncDecOperationExpression	l ++		439637	1					
ANR	439867	Identifier	l		439637	0					
ANR	439868	IncDec	++		439637	1					
ANR	439869	InclusiveOrExpression	0xf8 | op -> operands [ 0 ] . reg		439637	1		|			
ANR	439870	PrimaryExpression	0xf8		439637	0					
ANR	439871	MemberAccess	op -> operands [ 0 ] . reg		439637	1					
ANR	439872	ArrayIndexing	op -> operands [ 0 ]		439637	0					
ANR	439873	PtrMemberAccess	op -> operands		439637	0					
ANR	439874	Identifier	op		439637	0					
ANR	439875	Identifier	operands		439637	1					
ANR	439876	PrimaryExpression	0		439637	1					
ANR	439877	Identifier	reg		439637	1					
ANR	439878	ElseStatement	else		439637	0					
ANR	439879	CompoundStatement		28:9:837:837	439637	0					
ANR	439880	ReturnStatement	return - 1 ;	3241:3:82528:82537	439637	0	True				
ANR	439881	UnaryOperationExpression	- 1		439637	0					
ANR	439882	UnaryOperator	-		439637	0					
ANR	439883	PrimaryExpression	1		439637	1					
ANR	439884	BreakStatement	break ;	3243:2:82545:82550	439637	5	True				
ANR	439885	Label	default :	3244:1:82553:82560	439637	6	True				
ANR	439886	Identifier	default		439637	0					
ANR	439887	ReturnStatement	return - 1 ;	3245:2:82564:82573	439637	7	True				
ANR	439888	UnaryOperationExpression	- 1		439637	0					
ANR	439889	UnaryOperator	-		439637	0					
ANR	439890	PrimaryExpression	1		439637	1					
ANR	439891	ReturnStatement	return l ;	3247:1:82579:82587	439637	2	True				
ANR	439892	Identifier	l		439637	0					
ANR	439893	ReturnType	static int		439637	1					
ANR	439894	Identifier	opfdiv		439637	2					
ANR	439895	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		439637	3					
ANR	439896	Parameter	RAsm * a	3213:18:81647:81653	439637	0	True				
ANR	439897	ParameterType	RAsm *		439637	0					
ANR	439898	Identifier	a		439637	1					
ANR	439899	Parameter	ut8 * data	3213:27:81656:81664	439637	1	True				
ANR	439900	ParameterType	ut8 *		439637	0					
ANR	439901	Identifier	data		439637	1					
ANR	439902	Parameter	const Opcode * op	3213:38:81667:81682	439637	2	True				
ANR	439903	ParameterType	const Opcode *		439637	0					
ANR	439904	Identifier	op		439637	1					
ANR	439905	CFGEntryNode	ENTRY		439637		True				
ANR	439906	CFGExitNode	EXIT		439637		True				
ANR	439907	Symbol	a		439637						
ANR	439908	Symbol	op		439637						
ANR	439909	Symbol	OT_QWORD		439637						
ANR	439910	Symbol	data		439637						
ANR	439911	Symbol	* op		439637						
ANR	439912	Symbol	op -> operands [ 1 ] . reg		439637						
ANR	439913	Symbol	* * op -> operands		439637						
ANR	439914	Symbol	l		439637						
ANR	439915	Symbol	* * op		439637						
ANR	439916	Symbol	OT_FPUREG		439637						
ANR	439917	Symbol	* op -> operands		439637						
ANR	439918	Symbol	op -> operands [ 1 ] . type		439637						
ANR	439919	Symbol	op -> operands_count		439637						
ANR	439920	Symbol	* op -> operands [ 0 ] . regs		439637						
ANR	439921	Symbol	op -> operands [ 0 ] . type		439637						
ANR	439922	Symbol	~OT_REGALL		439637						
ANR	439923	Symbol	* * * op		439637						
ANR	439924	Symbol	op -> operands [ 0 ] . reg		439637						
ANR	439925	Symbol	op -> operands		439637						
ANR	439926	Symbol	OT_MEMORY		439637						
ANR	439927	Symbol	* data		439637						
ANR	439928	Symbol	op -> operands [ 0 ] . regs		439637						
ANR	439929	Symbol	OT_DWORD		439637						
ANR	439930	Function	opfdivp	3250:0:82592:83041							
ANR	439931	FunctionDef	"opfdivp (RAsm * a , ut8 * data , const Opcode * op)"		439930	0					
ANR	439932	CompoundStatement		3250:57:82649:83041	439930	0					
ANR	439933	IdentifierDeclStatement	int l = 0 ;	3251:1:82652:82661	439930	0	True				
ANR	439934	IdentifierDecl	l = 0		439930	0					
ANR	439935	IdentifierDeclType	int		439930	0					
ANR	439936	Identifier	l		439930	1					
ANR	439937	AssignmentExpression	l = 0		439930	2		=			
ANR	439938	Identifier	l		439930	0					
ANR	439939	PrimaryExpression	0		439930	1					
ANR	439940	SwitchStatement	switch ( op -> operands_count )		439930	1					
ANR	439941	Condition	op -> operands_count	3252:9:82672:82689	439930	0	True				
ANR	439942	PtrMemberAccess	op -> operands_count		439930	0					
ANR	439943	Identifier	op		439930	0					
ANR	439944	Identifier	operands_count		439930	1					
ANR	439945	CompoundStatement		3:29:42:42	439930	1					
ANR	439946	Label	case 0 :	3253:1:82695:82701	439930	0	True				
ANR	439947	ExpressionStatement	data [ l ++ ] = 0xde	3254:2:82705:82721	439930	1	True				
ANR	439948	AssignmentExpression	data [ l ++ ] = 0xde		439930	0		=			
ANR	439949	ArrayIndexing	data [ l ++ ]		439930	0					
ANR	439950	Identifier	data		439930	0					
ANR	439951	PostIncDecOperationExpression	l ++		439930	1					
ANR	439952	Identifier	l		439930	0					
ANR	439953	IncDec	++		439930	1					
ANR	439954	PrimaryExpression	0xde		439930	1					
ANR	439955	ExpressionStatement	data [ l ++ ] = 0xf9	3255:2:82725:82741	439930	2	True				
ANR	439956	AssignmentExpression	data [ l ++ ] = 0xf9		439930	0		=			
ANR	439957	ArrayIndexing	data [ l ++ ]		439930	0					
ANR	439958	Identifier	data		439930	0					
ANR	439959	PostIncDecOperationExpression	l ++		439930	1					
ANR	439960	Identifier	l		439930	0					
ANR	439961	IncDec	++		439930	1					
ANR	439962	PrimaryExpression	0xf9		439930	1					
ANR	439963	BreakStatement	break ;	3256:2:82745:82750	439930	3	True				
ANR	439964	Label	case 2 :	3257:1:82753:82759	439930	4	True				
ANR	439965	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		439930	5					
ANR	439966	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3258:7:82768:82896	439930	0	True				
ANR	439967	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		439930	0		&&			
ANR	439968	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		439930	0		&			
ANR	439969	MemberAccess	op -> operands [ 0 ] . type		439930	0					
ANR	439970	ArrayIndexing	op -> operands [ 0 ]		439930	0					
ANR	439971	PtrMemberAccess	op -> operands		439930	0					
ANR	439972	Identifier	op		439930	0					
ANR	439973	Identifier	operands		439930	1					
ANR	439974	PrimaryExpression	0		439930	1					
ANR	439975	Identifier	type		439930	1					
ANR	439976	BitAndExpression	OT_FPUREG & ~OT_REGALL		439930	1		&			
ANR	439977	Identifier	OT_FPUREG		439930	0					
ANR	439978	Identifier	~OT_REGALL		439930	1					
ANR	439979	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		439930	1		&&			
ANR	439980	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		439930	0		&			
ANR	439981	MemberAccess	op -> operands [ 1 ] . type		439930	0					
ANR	439982	ArrayIndexing	op -> operands [ 1 ]		439930	0					
ANR	439983	PtrMemberAccess	op -> operands		439930	0					
ANR	439984	Identifier	op		439930	0					
ANR	439985	Identifier	operands		439930	1					
ANR	439986	PrimaryExpression	1		439930	1					
ANR	439987	Identifier	type		439930	1					
ANR	439988	BitAndExpression	OT_FPUREG & ~OT_REGALL		439930	1		&			
ANR	439989	Identifier	OT_FPUREG		439930	0					
ANR	439990	Identifier	~OT_REGALL		439930	1					
ANR	439991	EqualityExpression	op -> operands [ 1 ] . reg == 0		439930	1		==			
ANR	439992	MemberAccess	op -> operands [ 1 ] . reg		439930	0					
ANR	439993	ArrayIndexing	op -> operands [ 1 ]		439930	0					
ANR	439994	PtrMemberAccess	op -> operands		439930	0					
ANR	439995	Identifier	op		439930	0					
ANR	439996	Identifier	operands		439930	1					
ANR	439997	PrimaryExpression	1		439930	1					
ANR	439998	Identifier	reg		439930	1					
ANR	439999	PrimaryExpression	0		439930	1					
ANR	440000	CompoundStatement		10:83:250:250	439930	1					
ANR	440001	ExpressionStatement	data [ l ++ ] = 0xde	3260:3:82905:82921	439930	0	True				
ANR	440002	AssignmentExpression	data [ l ++ ] = 0xde		439930	0		=			
ANR	440003	ArrayIndexing	data [ l ++ ]		439930	0					
ANR	440004	Identifier	data		439930	0					
ANR	440005	PostIncDecOperationExpression	l ++		439930	1					
ANR	440006	Identifier	l		439930	0					
ANR	440007	IncDec	++		439930	1					
ANR	440008	PrimaryExpression	0xde		439930	1					
ANR	440009	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg	3261:3:82926:82964	439930	1	True				
ANR	440010	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg		439930	0		=			
ANR	440011	ArrayIndexing	data [ l ++ ]		439930	0					
ANR	440012	Identifier	data		439930	0					
ANR	440013	PostIncDecOperationExpression	l ++		439930	1					
ANR	440014	Identifier	l		439930	0					
ANR	440015	IncDec	++		439930	1					
ANR	440016	InclusiveOrExpression	0xf8 | op -> operands [ 0 ] . reg		439930	1		|			
ANR	440017	PrimaryExpression	0xf8		439930	0					
ANR	440018	MemberAccess	op -> operands [ 0 ] . reg		439930	1					
ANR	440019	ArrayIndexing	op -> operands [ 0 ]		439930	0					
ANR	440020	PtrMemberAccess	op -> operands		439930	0					
ANR	440021	Identifier	op		439930	0					
ANR	440022	Identifier	operands		439930	1					
ANR	440023	PrimaryExpression	0		439930	1					
ANR	440024	Identifier	reg		439930	1					
ANR	440025	ElseStatement	else		439930	0					
ANR	440026	CompoundStatement		13:9:325:325	439930	0					
ANR	440027	ReturnStatement	return - 1 ;	3263:3:82980:82989	439930	0	True				
ANR	440028	UnaryOperationExpression	- 1		439930	0					
ANR	440029	UnaryOperator	-		439930	0					
ANR	440030	PrimaryExpression	1		439930	1					
ANR	440031	BreakStatement	break ;	3265:2:82997:83002	439930	6	True				
ANR	440032	Label	default :	3266:1:83005:83012	439930	7	True				
ANR	440033	Identifier	default		439930	0					
ANR	440034	ReturnStatement	return - 1 ;	3267:2:83016:83025	439930	8	True				
ANR	440035	UnaryOperationExpression	- 1		439930	0					
ANR	440036	UnaryOperator	-		439930	0					
ANR	440037	PrimaryExpression	1		439930	1					
ANR	440038	ReturnStatement	return l ;	3269:1:83031:83039	439930	2	True				
ANR	440039	Identifier	l		439930	0					
ANR	440040	ReturnType	static int		439930	1					
ANR	440041	Identifier	opfdivp		439930	2					
ANR	440042	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		439930	3					
ANR	440043	Parameter	RAsm * a	3250:19:82611:82617	439930	0	True				
ANR	440044	ParameterType	RAsm *		439930	0					
ANR	440045	Identifier	a		439930	1					
ANR	440046	Parameter	ut8 * data	3250:28:82620:82628	439930	1	True				
ANR	440047	ParameterType	ut8 *		439930	0					
ANR	440048	Identifier	data		439930	1					
ANR	440049	Parameter	const Opcode * op	3250:39:82631:82646	439930	2	True				
ANR	440050	ParameterType	const Opcode *		439930	0					
ANR	440051	Identifier	op		439930	1					
ANR	440052	CFGEntryNode	ENTRY		439930		True				
ANR	440053	CFGExitNode	EXIT		439930		True				
ANR	440054	Symbol	a		439930						
ANR	440055	Symbol	op		439930						
ANR	440056	Symbol	data		439930						
ANR	440057	Symbol	* op		439930						
ANR	440058	Symbol	op -> operands [ 1 ] . reg		439930						
ANR	440059	Symbol	l		439930						
ANR	440060	Symbol	* * op		439930						
ANR	440061	Symbol	OT_FPUREG		439930						
ANR	440062	Symbol	* op -> operands		439930						
ANR	440063	Symbol	op -> operands [ 1 ] . type		439930						
ANR	440064	Symbol	op -> operands_count		439930						
ANR	440065	Symbol	~OT_REGALL		439930						
ANR	440066	Symbol	op -> operands [ 0 ] . type		439930						
ANR	440067	Symbol	op -> operands [ 0 ] . reg		439930						
ANR	440068	Symbol	op -> operands		439930						
ANR	440069	Symbol	* data		439930						
ANR	440070	Function	opfidiv	3272:0:83044:83540							
ANR	440071	FunctionDef	"opfidiv (RAsm * a , ut8 * data , const Opcode * op)"		440070	0					
ANR	440072	CompoundStatement		3272:57:83101:83540	440070	0					
ANR	440073	IdentifierDeclStatement	int l = 0 ;	3273:1:83104:83113	440070	0	True				
ANR	440074	IdentifierDecl	l = 0		440070	0					
ANR	440075	IdentifierDeclType	int		440070	0					
ANR	440076	Identifier	l		440070	1					
ANR	440077	AssignmentExpression	l = 0		440070	2		=			
ANR	440078	Identifier	l		440070	0					
ANR	440079	PrimaryExpression	0		440070	1					
ANR	440080	SwitchStatement	switch ( op -> operands_count )		440070	1					
ANR	440081	Condition	op -> operands_count	3274:9:83124:83141	440070	0	True				
ANR	440082	PtrMemberAccess	op -> operands_count		440070	0					
ANR	440083	Identifier	op		440070	0					
ANR	440084	Identifier	operands_count		440070	1					
ANR	440085	CompoundStatement		3:29:42:42	440070	1					
ANR	440086	Label	case 1 :	3275:1:83147:83153	440070	0	True				
ANR	440087	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		440070	1					
ANR	440088	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3276:7:83162:83193	440070	0	True				
ANR	440089	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		440070	0		&			
ANR	440090	MemberAccess	op -> operands [ 0 ] . type		440070	0					
ANR	440091	ArrayIndexing	op -> operands [ 0 ]		440070	0					
ANR	440092	PtrMemberAccess	op -> operands		440070	0					
ANR	440093	Identifier	op		440070	0					
ANR	440094	Identifier	operands		440070	1					
ANR	440095	PrimaryExpression	0		440070	1					
ANR	440096	Identifier	type		440070	1					
ANR	440097	Identifier	OT_MEMORY		440070	1					
ANR	440098	CompoundStatement		5:42:95:95	440070	1					
ANR	440099	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		440070	0					
ANR	440100	Condition	op -> operands [ 0 ] . type & OT_DWORD	3277:8:83207:83237	440070	0	True				
ANR	440101	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		440070	0		&			
ANR	440102	MemberAccess	op -> operands [ 0 ] . type		440070	0					
ANR	440103	ArrayIndexing	op -> operands [ 0 ]		440070	0					
ANR	440104	PtrMemberAccess	op -> operands		440070	0					
ANR	440105	Identifier	op		440070	0					
ANR	440106	Identifier	operands		440070	1					
ANR	440107	PrimaryExpression	0		440070	1					
ANR	440108	Identifier	type		440070	1					
ANR	440109	Identifier	OT_DWORD		440070	1					
ANR	440110	CompoundStatement		6:42:139:139	440070	1					
ANR	440111	ExpressionStatement	data [ l ++ ] = 0xda	3278:4:83247:83263	440070	0	True				
ANR	440112	AssignmentExpression	data [ l ++ ] = 0xda		440070	0		=			
ANR	440113	ArrayIndexing	data [ l ++ ]		440070	0					
ANR	440114	Identifier	data		440070	0					
ANR	440115	PostIncDecOperationExpression	l ++		440070	1					
ANR	440116	Identifier	l		440070	0					
ANR	440117	IncDec	++		440070	1					
ANR	440118	PrimaryExpression	0xda		440070	1					
ANR	440119	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3279:4:83269:83311	440070	1	True				
ANR	440120	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		440070	0		=			
ANR	440121	ArrayIndexing	data [ l ++ ]		440070	0					
ANR	440122	Identifier	data		440070	0					
ANR	440123	PostIncDecOperationExpression	l ++		440070	1					
ANR	440124	Identifier	l		440070	0					
ANR	440125	IncDec	++		440070	1					
ANR	440126	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		440070	1		|			
ANR	440127	PrimaryExpression	0x30		440070	0					
ANR	440128	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440070	1					
ANR	440129	MemberAccess	op -> operands [ 0 ] . regs		440070	0					
ANR	440130	ArrayIndexing	op -> operands [ 0 ]		440070	0					
ANR	440131	PtrMemberAccess	op -> operands		440070	0					
ANR	440132	Identifier	op		440070	0					
ANR	440133	Identifier	operands		440070	1					
ANR	440134	PrimaryExpression	0		440070	1					
ANR	440135	Identifier	regs		440070	1					
ANR	440136	PrimaryExpression	0		440070	1					
ANR	440137	ElseStatement	else		440070	0					
ANR	440138	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		440070	0					
ANR	440139	Condition	op -> operands [ 0 ] . type & OT_WORD	3280:15:83328:83357	440070	0	True				
ANR	440140	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		440070	0		&			
ANR	440141	MemberAccess	op -> operands [ 0 ] . type		440070	0					
ANR	440142	ArrayIndexing	op -> operands [ 0 ]		440070	0					
ANR	440143	PtrMemberAccess	op -> operands		440070	0					
ANR	440144	Identifier	op		440070	0					
ANR	440145	Identifier	operands		440070	1					
ANR	440146	PrimaryExpression	0		440070	1					
ANR	440147	Identifier	type		440070	1					
ANR	440148	Identifier	OT_WORD		440070	1					
ANR	440149	CompoundStatement		9:48:259:259	440070	1					
ANR	440150	ExpressionStatement	data [ l ++ ] = 0xde	3281:4:83367:83383	440070	0	True				
ANR	440151	AssignmentExpression	data [ l ++ ] = 0xde		440070	0		=			
ANR	440152	ArrayIndexing	data [ l ++ ]		440070	0					
ANR	440153	Identifier	data		440070	0					
ANR	440154	PostIncDecOperationExpression	l ++		440070	1					
ANR	440155	Identifier	l		440070	0					
ANR	440156	IncDec	++		440070	1					
ANR	440157	PrimaryExpression	0xde		440070	1					
ANR	440158	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3282:4:83389:83431	440070	1	True				
ANR	440159	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		440070	0		=			
ANR	440160	ArrayIndexing	data [ l ++ ]		440070	0					
ANR	440161	Identifier	data		440070	0					
ANR	440162	PostIncDecOperationExpression	l ++		440070	1					
ANR	440163	Identifier	l		440070	0					
ANR	440164	IncDec	++		440070	1					
ANR	440165	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		440070	1		|			
ANR	440166	PrimaryExpression	0x30		440070	0					
ANR	440167	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440070	1					
ANR	440168	MemberAccess	op -> operands [ 0 ] . regs		440070	0					
ANR	440169	ArrayIndexing	op -> operands [ 0 ]		440070	0					
ANR	440170	PtrMemberAccess	op -> operands		440070	0					
ANR	440171	Identifier	op		440070	0					
ANR	440172	Identifier	operands		440070	1					
ANR	440173	PrimaryExpression	0		440070	1					
ANR	440174	Identifier	regs		440070	1					
ANR	440175	PrimaryExpression	0		440070	1					
ANR	440176	ElseStatement	else		440070	0					
ANR	440177	CompoundStatement		12:10:341:341	440070	0					
ANR	440178	ReturnStatement	return - 1 ;	3284:4:83449:83458	440070	0	True				
ANR	440179	UnaryOperationExpression	- 1		440070	0					
ANR	440180	UnaryOperator	-		440070	0					
ANR	440181	PrimaryExpression	1		440070	1					
ANR	440182	ElseStatement	else		440070	0					
ANR	440183	CompoundStatement		15:9:372:372	440070	0					
ANR	440184	ReturnStatement	return - 1 ;	3287:3:83479:83488	440070	0	True				
ANR	440185	UnaryOperationExpression	- 1		440070	0					
ANR	440186	UnaryOperator	-		440070	0					
ANR	440187	PrimaryExpression	1		440070	1					
ANR	440188	BreakStatement	break ;	3289:2:83496:83501	440070	2	True				
ANR	440189	Label	default :	3290:1:83504:83511	440070	3	True				
ANR	440190	Identifier	default		440070	0					
ANR	440191	ReturnStatement	return - 1 ;	3291:2:83515:83524	440070	4	True				
ANR	440192	UnaryOperationExpression	- 1		440070	0					
ANR	440193	UnaryOperator	-		440070	0					
ANR	440194	PrimaryExpression	1		440070	1					
ANR	440195	ReturnStatement	return l ;	3293:1:83530:83538	440070	2	True				
ANR	440196	Identifier	l		440070	0					
ANR	440197	ReturnType	static int		440070	1					
ANR	440198	Identifier	opfidiv		440070	2					
ANR	440199	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		440070	3					
ANR	440200	Parameter	RAsm * a	3272:19:83063:83069	440070	0	True				
ANR	440201	ParameterType	RAsm *		440070	0					
ANR	440202	Identifier	a		440070	1					
ANR	440203	Parameter	ut8 * data	3272:28:83072:83080	440070	1	True				
ANR	440204	ParameterType	ut8 *		440070	0					
ANR	440205	Identifier	data		440070	1					
ANR	440206	Parameter	const Opcode * op	3272:39:83083:83098	440070	2	True				
ANR	440207	ParameterType	const Opcode *		440070	0					
ANR	440208	Identifier	op		440070	1					
ANR	440209	CFGEntryNode	ENTRY		440070		True				
ANR	440210	CFGExitNode	EXIT		440070		True				
ANR	440211	Symbol	a		440070						
ANR	440212	Symbol	op		440070						
ANR	440213	Symbol	OT_WORD		440070						
ANR	440214	Symbol	data		440070						
ANR	440215	Symbol	* op		440070						
ANR	440216	Symbol	* * op -> operands		440070						
ANR	440217	Symbol	l		440070						
ANR	440218	Symbol	* * op		440070						
ANR	440219	Symbol	* op -> operands		440070						
ANR	440220	Symbol	op -> operands_count		440070						
ANR	440221	Symbol	* op -> operands [ 0 ] . regs		440070						
ANR	440222	Symbol	op -> operands [ 0 ] . type		440070						
ANR	440223	Symbol	* * * op		440070						
ANR	440224	Symbol	op -> operands		440070						
ANR	440225	Symbol	OT_MEMORY		440070						
ANR	440226	Symbol	* data		440070						
ANR	440227	Symbol	op -> operands [ 0 ] . regs		440070						
ANR	440228	Symbol	OT_DWORD		440070						
ANR	440229	Function	opfdivr	3296:0:83543:84504							
ANR	440230	FunctionDef	"opfdivr (RAsm * a , ut8 * data , const Opcode * op)"		440229	0					
ANR	440231	CompoundStatement		3296:57:83600:84504	440229	0					
ANR	440232	IdentifierDeclStatement	int l = 0 ;	3297:1:83603:83612	440229	0	True				
ANR	440233	IdentifierDecl	l = 0		440229	0					
ANR	440234	IdentifierDeclType	int		440229	0					
ANR	440235	Identifier	l		440229	1					
ANR	440236	AssignmentExpression	l = 0		440229	2		=			
ANR	440237	Identifier	l		440229	0					
ANR	440238	PrimaryExpression	0		440229	1					
ANR	440239	SwitchStatement	switch ( op -> operands_count )		440229	1					
ANR	440240	Condition	op -> operands_count	3298:9:83623:83640	440229	0	True				
ANR	440241	PtrMemberAccess	op -> operands_count		440229	0					
ANR	440242	Identifier	op		440229	0					
ANR	440243	Identifier	operands_count		440229	1					
ANR	440244	CompoundStatement		3:29:42:42	440229	1					
ANR	440245	Label	case 1 :	3299:1:83646:83652	440229	0	True				
ANR	440246	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		440229	1					
ANR	440247	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3300:7:83661:83692	440229	0	True				
ANR	440248	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		440229	0		&			
ANR	440249	MemberAccess	op -> operands [ 0 ] . type		440229	0					
ANR	440250	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440251	PtrMemberAccess	op -> operands		440229	0					
ANR	440252	Identifier	op		440229	0					
ANR	440253	Identifier	operands		440229	1					
ANR	440254	PrimaryExpression	0		440229	1					
ANR	440255	Identifier	type		440229	1					
ANR	440256	Identifier	OT_MEMORY		440229	1					
ANR	440257	CompoundStatement		5:42:95:95	440229	1					
ANR	440258	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		440229	0					
ANR	440259	Condition	op -> operands [ 0 ] . type & OT_DWORD	3301:8:83706:83736	440229	0	True				
ANR	440260	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		440229	0		&			
ANR	440261	MemberAccess	op -> operands [ 0 ] . type		440229	0					
ANR	440262	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440263	PtrMemberAccess	op -> operands		440229	0					
ANR	440264	Identifier	op		440229	0					
ANR	440265	Identifier	operands		440229	1					
ANR	440266	PrimaryExpression	0		440229	1					
ANR	440267	Identifier	type		440229	1					
ANR	440268	Identifier	OT_DWORD		440229	1					
ANR	440269	CompoundStatement		6:42:139:139	440229	1					
ANR	440270	ExpressionStatement	data [ l ++ ] = 0xd8	3302:4:83746:83762	440229	0	True				
ANR	440271	AssignmentExpression	data [ l ++ ] = 0xd8		440229	0		=			
ANR	440272	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440273	Identifier	data		440229	0					
ANR	440274	PostIncDecOperationExpression	l ++		440229	1					
ANR	440275	Identifier	l		440229	0					
ANR	440276	IncDec	++		440229	1					
ANR	440277	PrimaryExpression	0xd8		440229	1					
ANR	440278	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3303:4:83768:83810	440229	1	True				
ANR	440279	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		440229	0		=			
ANR	440280	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440281	Identifier	data		440229	0					
ANR	440282	PostIncDecOperationExpression	l ++		440229	1					
ANR	440283	Identifier	l		440229	0					
ANR	440284	IncDec	++		440229	1					
ANR	440285	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		440229	1		|			
ANR	440286	PrimaryExpression	0x38		440229	0					
ANR	440287	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440229	1					
ANR	440288	MemberAccess	op -> operands [ 0 ] . regs		440229	0					
ANR	440289	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440290	PtrMemberAccess	op -> operands		440229	0					
ANR	440291	Identifier	op		440229	0					
ANR	440292	Identifier	operands		440229	1					
ANR	440293	PrimaryExpression	0		440229	1					
ANR	440294	Identifier	regs		440229	1					
ANR	440295	PrimaryExpression	0		440229	1					
ANR	440296	ElseStatement	else		440229	0					
ANR	440297	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		440229	0					
ANR	440298	Condition	op -> operands [ 0 ] . type & OT_QWORD	3304:15:83827:83857	440229	0	True				
ANR	440299	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		440229	0		&			
ANR	440300	MemberAccess	op -> operands [ 0 ] . type		440229	0					
ANR	440301	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440302	PtrMemberAccess	op -> operands		440229	0					
ANR	440303	Identifier	op		440229	0					
ANR	440304	Identifier	operands		440229	1					
ANR	440305	PrimaryExpression	0		440229	1					
ANR	440306	Identifier	type		440229	1					
ANR	440307	Identifier	OT_QWORD		440229	1					
ANR	440308	CompoundStatement		9:49:260:260	440229	1					
ANR	440309	ExpressionStatement	data [ l ++ ] = 0xdc	3305:4:83867:83883	440229	0	True				
ANR	440310	AssignmentExpression	data [ l ++ ] = 0xdc		440229	0		=			
ANR	440311	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440312	Identifier	data		440229	0					
ANR	440313	PostIncDecOperationExpression	l ++		440229	1					
ANR	440314	Identifier	l		440229	0					
ANR	440315	IncDec	++		440229	1					
ANR	440316	PrimaryExpression	0xdc		440229	1					
ANR	440317	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3306:4:83889:83931	440229	1	True				
ANR	440318	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		440229	0		=			
ANR	440319	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440320	Identifier	data		440229	0					
ANR	440321	PostIncDecOperationExpression	l ++		440229	1					
ANR	440322	Identifier	l		440229	0					
ANR	440323	IncDec	++		440229	1					
ANR	440324	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		440229	1		|			
ANR	440325	PrimaryExpression	0x38		440229	0					
ANR	440326	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440229	1					
ANR	440327	MemberAccess	op -> operands [ 0 ] . regs		440229	0					
ANR	440328	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440329	PtrMemberAccess	op -> operands		440229	0					
ANR	440330	Identifier	op		440229	0					
ANR	440331	Identifier	operands		440229	1					
ANR	440332	PrimaryExpression	0		440229	1					
ANR	440333	Identifier	regs		440229	1					
ANR	440334	PrimaryExpression	0		440229	1					
ANR	440335	ElseStatement	else		440229	0					
ANR	440336	CompoundStatement		12:10:342:342	440229	0					
ANR	440337	ReturnStatement	return - 1 ;	3308:4:83949:83958	440229	0	True				
ANR	440338	UnaryOperationExpression	- 1		440229	0					
ANR	440339	UnaryOperator	-		440229	0					
ANR	440340	PrimaryExpression	1		440229	1					
ANR	440341	ElseStatement	else		440229	0					
ANR	440342	CompoundStatement		15:9:373:373	440229	0					
ANR	440343	ReturnStatement	return - 1 ;	3311:3:83979:83988	440229	0	True				
ANR	440344	UnaryOperationExpression	- 1		440229	0					
ANR	440345	UnaryOperator	-		440229	0					
ANR	440346	PrimaryExpression	1		440229	1					
ANR	440347	BreakStatement	break ;	3313:2:83996:84001	440229	2	True				
ANR	440348	Label	case 2 :	3314:1:84004:84010	440229	3	True				
ANR	440349	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		440229	4					
ANR	440350	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3315:7:84019:84147	440229	0	True				
ANR	440351	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440229	0		&&			
ANR	440352	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		440229	0		&			
ANR	440353	MemberAccess	op -> operands [ 0 ] . type		440229	0					
ANR	440354	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440355	PtrMemberAccess	op -> operands		440229	0					
ANR	440356	Identifier	op		440229	0					
ANR	440357	Identifier	operands		440229	1					
ANR	440358	PrimaryExpression	0		440229	1					
ANR	440359	Identifier	type		440229	1					
ANR	440360	BitAndExpression	OT_FPUREG & ~OT_REGALL		440229	1		&			
ANR	440361	Identifier	OT_FPUREG		440229	0					
ANR	440362	Identifier	~OT_REGALL		440229	1					
ANR	440363	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440229	1		&&			
ANR	440364	EqualityExpression	op -> operands [ 0 ] . reg == 0		440229	0		==			
ANR	440365	MemberAccess	op -> operands [ 0 ] . reg		440229	0					
ANR	440366	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440367	PtrMemberAccess	op -> operands		440229	0					
ANR	440368	Identifier	op		440229	0					
ANR	440369	Identifier	operands		440229	1					
ANR	440370	PrimaryExpression	0		440229	1					
ANR	440371	Identifier	reg		440229	1					
ANR	440372	PrimaryExpression	0		440229	1					
ANR	440373	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440229	1		&			
ANR	440374	MemberAccess	op -> operands [ 1 ] . type		440229	0					
ANR	440375	ArrayIndexing	op -> operands [ 1 ]		440229	0					
ANR	440376	PtrMemberAccess	op -> operands		440229	0					
ANR	440377	Identifier	op		440229	0					
ANR	440378	Identifier	operands		440229	1					
ANR	440379	PrimaryExpression	1		440229	1					
ANR	440380	Identifier	type		440229	1					
ANR	440381	BitAndExpression	OT_FPUREG & ~OT_REGALL		440229	1		&			
ANR	440382	Identifier	OT_FPUREG		440229	0					
ANR	440383	Identifier	~OT_REGALL		440229	1					
ANR	440384	CompoundStatement		21:55:550:550	440229	1					
ANR	440385	ExpressionStatement	data [ l ++ ] = 0xd8	3317:3:84156:84172	440229	0	True				
ANR	440386	AssignmentExpression	data [ l ++ ] = 0xd8		440229	0		=			
ANR	440387	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440388	Identifier	data		440229	0					
ANR	440389	PostIncDecOperationExpression	l ++		440229	1					
ANR	440390	Identifier	l		440229	0					
ANR	440391	IncDec	++		440229	1					
ANR	440392	PrimaryExpression	0xd8		440229	1					
ANR	440393	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 1 ] . reg	3318:3:84177:84215	440229	1	True				
ANR	440394	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 1 ] . reg		440229	0		=			
ANR	440395	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440396	Identifier	data		440229	0					
ANR	440397	PostIncDecOperationExpression	l ++		440229	1					
ANR	440398	Identifier	l		440229	0					
ANR	440399	IncDec	++		440229	1					
ANR	440400	InclusiveOrExpression	0xf8 | op -> operands [ 1 ] . reg		440229	1		|			
ANR	440401	PrimaryExpression	0xf8		440229	0					
ANR	440402	MemberAccess	op -> operands [ 1 ] . reg		440229	1					
ANR	440403	ArrayIndexing	op -> operands [ 1 ]		440229	0					
ANR	440404	PtrMemberAccess	op -> operands		440229	0					
ANR	440405	Identifier	op		440229	0					
ANR	440406	Identifier	operands		440229	1					
ANR	440407	PrimaryExpression	1		440229	1					
ANR	440408	Identifier	reg		440229	1					
ANR	440409	ElseStatement	else		440229	0					
ANR	440410	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		440229	0					
ANR	440411	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3319:14:84231:84359	440229	0	True				
ANR	440412	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		440229	0		&&			
ANR	440413	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		440229	0		&			
ANR	440414	MemberAccess	op -> operands [ 0 ] . type		440229	0					
ANR	440415	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440416	PtrMemberAccess	op -> operands		440229	0					
ANR	440417	Identifier	op		440229	0					
ANR	440418	Identifier	operands		440229	1					
ANR	440419	PrimaryExpression	0		440229	1					
ANR	440420	Identifier	type		440229	1					
ANR	440421	BitAndExpression	OT_FPUREG & ~OT_REGALL		440229	1		&			
ANR	440422	Identifier	OT_FPUREG		440229	0					
ANR	440423	Identifier	~OT_REGALL		440229	1					
ANR	440424	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		440229	1		&&			
ANR	440425	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440229	0		&			
ANR	440426	MemberAccess	op -> operands [ 1 ] . type		440229	0					
ANR	440427	ArrayIndexing	op -> operands [ 1 ]		440229	0					
ANR	440428	PtrMemberAccess	op -> operands		440229	0					
ANR	440429	Identifier	op		440229	0					
ANR	440430	Identifier	operands		440229	1					
ANR	440431	PrimaryExpression	1		440229	1					
ANR	440432	Identifier	type		440229	1					
ANR	440433	BitAndExpression	OT_FPUREG & ~OT_REGALL		440229	1		&			
ANR	440434	Identifier	OT_FPUREG		440229	0					
ANR	440435	Identifier	~OT_REGALL		440229	1					
ANR	440436	EqualityExpression	op -> operands [ 1 ] . reg == 0		440229	1		==			
ANR	440437	MemberAccess	op -> operands [ 1 ] . reg		440229	0					
ANR	440438	ArrayIndexing	op -> operands [ 1 ]		440229	0					
ANR	440439	PtrMemberAccess	op -> operands		440229	0					
ANR	440440	Identifier	op		440229	0					
ANR	440441	Identifier	operands		440229	1					
ANR	440442	PrimaryExpression	1		440229	1					
ANR	440443	Identifier	reg		440229	1					
ANR	440444	PrimaryExpression	0		440229	1					
ANR	440445	CompoundStatement		25:83:762:762	440229	1					
ANR	440446	ExpressionStatement	data [ l ++ ] = 0xdc	3321:3:84368:84384	440229	0	True				
ANR	440447	AssignmentExpression	data [ l ++ ] = 0xdc		440229	0		=			
ANR	440448	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440449	Identifier	data		440229	0					
ANR	440450	PostIncDecOperationExpression	l ++		440229	1					
ANR	440451	Identifier	l		440229	0					
ANR	440452	IncDec	++		440229	1					
ANR	440453	PrimaryExpression	0xdc		440229	1					
ANR	440454	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	3322:3:84389:84427	440229	1	True				
ANR	440455	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		440229	0		=			
ANR	440456	ArrayIndexing	data [ l ++ ]		440229	0					
ANR	440457	Identifier	data		440229	0					
ANR	440458	PostIncDecOperationExpression	l ++		440229	1					
ANR	440459	Identifier	l		440229	0					
ANR	440460	IncDec	++		440229	1					
ANR	440461	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		440229	1		|			
ANR	440462	PrimaryExpression	0xf0		440229	0					
ANR	440463	MemberAccess	op -> operands [ 0 ] . reg		440229	1					
ANR	440464	ArrayIndexing	op -> operands [ 0 ]		440229	0					
ANR	440465	PtrMemberAccess	op -> operands		440229	0					
ANR	440466	Identifier	op		440229	0					
ANR	440467	Identifier	operands		440229	1					
ANR	440468	PrimaryExpression	0		440229	1					
ANR	440469	Identifier	reg		440229	1					
ANR	440470	ElseStatement	else		440229	0					
ANR	440471	CompoundStatement		28:9:837:837	440229	0					
ANR	440472	ReturnStatement	return - 1 ;	3324:3:84443:84452	440229	0	True				
ANR	440473	UnaryOperationExpression	- 1		440229	0					
ANR	440474	UnaryOperator	-		440229	0					
ANR	440475	PrimaryExpression	1		440229	1					
ANR	440476	BreakStatement	break ;	3326:2:84460:84465	440229	5	True				
ANR	440477	Label	default :	3327:1:84468:84475	440229	6	True				
ANR	440478	Identifier	default		440229	0					
ANR	440479	ReturnStatement	return - 1 ;	3328:2:84479:84488	440229	7	True				
ANR	440480	UnaryOperationExpression	- 1		440229	0					
ANR	440481	UnaryOperator	-		440229	0					
ANR	440482	PrimaryExpression	1		440229	1					
ANR	440483	ReturnStatement	return l ;	3330:1:84494:84502	440229	2	True				
ANR	440484	Identifier	l		440229	0					
ANR	440485	ReturnType	static int		440229	1					
ANR	440486	Identifier	opfdivr		440229	2					
ANR	440487	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		440229	3					
ANR	440488	Parameter	RAsm * a	3296:19:83562:83568	440229	0	True				
ANR	440489	ParameterType	RAsm *		440229	0					
ANR	440490	Identifier	a		440229	1					
ANR	440491	Parameter	ut8 * data	3296:28:83571:83579	440229	1	True				
ANR	440492	ParameterType	ut8 *		440229	0					
ANR	440493	Identifier	data		440229	1					
ANR	440494	Parameter	const Opcode * op	3296:39:83582:83597	440229	2	True				
ANR	440495	ParameterType	const Opcode *		440229	0					
ANR	440496	Identifier	op		440229	1					
ANR	440497	CFGEntryNode	ENTRY		440229		True				
ANR	440498	CFGExitNode	EXIT		440229		True				
ANR	440499	Symbol	a		440229						
ANR	440500	Symbol	op		440229						
ANR	440501	Symbol	OT_QWORD		440229						
ANR	440502	Symbol	data		440229						
ANR	440503	Symbol	* op		440229						
ANR	440504	Symbol	op -> operands [ 1 ] . reg		440229						
ANR	440505	Symbol	* * op -> operands		440229						
ANR	440506	Symbol	l		440229						
ANR	440507	Symbol	* * op		440229						
ANR	440508	Symbol	OT_FPUREG		440229						
ANR	440509	Symbol	* op -> operands		440229						
ANR	440510	Symbol	op -> operands [ 1 ] . type		440229						
ANR	440511	Symbol	op -> operands_count		440229						
ANR	440512	Symbol	* op -> operands [ 0 ] . regs		440229						
ANR	440513	Symbol	op -> operands [ 0 ] . type		440229						
ANR	440514	Symbol	~OT_REGALL		440229						
ANR	440515	Symbol	* * * op		440229						
ANR	440516	Symbol	op -> operands [ 0 ] . reg		440229						
ANR	440517	Symbol	op -> operands		440229						
ANR	440518	Symbol	OT_MEMORY		440229						
ANR	440519	Symbol	* data		440229						
ANR	440520	Symbol	op -> operands [ 0 ] . regs		440229						
ANR	440521	Symbol	OT_DWORD		440229						
ANR	440522	Function	opfdivrp	3333:0:84507:84957							
ANR	440523	FunctionDef	"opfdivrp (RAsm * a , ut8 * data , const Opcode * op)"		440522	0					
ANR	440524	CompoundStatement		3333:58:84565:84957	440522	0					
ANR	440525	IdentifierDeclStatement	int l = 0 ;	3334:1:84568:84577	440522	0	True				
ANR	440526	IdentifierDecl	l = 0		440522	0					
ANR	440527	IdentifierDeclType	int		440522	0					
ANR	440528	Identifier	l		440522	1					
ANR	440529	AssignmentExpression	l = 0		440522	2		=			
ANR	440530	Identifier	l		440522	0					
ANR	440531	PrimaryExpression	0		440522	1					
ANR	440532	SwitchStatement	switch ( op -> operands_count )		440522	1					
ANR	440533	Condition	op -> operands_count	3335:9:84588:84605	440522	0	True				
ANR	440534	PtrMemberAccess	op -> operands_count		440522	0					
ANR	440535	Identifier	op		440522	0					
ANR	440536	Identifier	operands_count		440522	1					
ANR	440537	CompoundStatement		3:29:42:42	440522	1					
ANR	440538	Label	case 0 :	3336:1:84611:84617	440522	0	True				
ANR	440539	ExpressionStatement	data [ l ++ ] = 0xde	3337:2:84621:84637	440522	1	True				
ANR	440540	AssignmentExpression	data [ l ++ ] = 0xde		440522	0		=			
ANR	440541	ArrayIndexing	data [ l ++ ]		440522	0					
ANR	440542	Identifier	data		440522	0					
ANR	440543	PostIncDecOperationExpression	l ++		440522	1					
ANR	440544	Identifier	l		440522	0					
ANR	440545	IncDec	++		440522	1					
ANR	440546	PrimaryExpression	0xde		440522	1					
ANR	440547	ExpressionStatement	data [ l ++ ] = 0xf1	3338:2:84641:84657	440522	2	True				
ANR	440548	AssignmentExpression	data [ l ++ ] = 0xf1		440522	0		=			
ANR	440549	ArrayIndexing	data [ l ++ ]		440522	0					
ANR	440550	Identifier	data		440522	0					
ANR	440551	PostIncDecOperationExpression	l ++		440522	1					
ANR	440552	Identifier	l		440522	0					
ANR	440553	IncDec	++		440522	1					
ANR	440554	PrimaryExpression	0xf1		440522	1					
ANR	440555	BreakStatement	break ;	3339:2:84661:84666	440522	3	True				
ANR	440556	Label	case 2 :	3340:1:84669:84675	440522	4	True				
ANR	440557	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		440522	5					
ANR	440558	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3341:7:84684:84812	440522	0	True				
ANR	440559	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		440522	0		&&			
ANR	440560	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		440522	0		&			
ANR	440561	MemberAccess	op -> operands [ 0 ] . type		440522	0					
ANR	440562	ArrayIndexing	op -> operands [ 0 ]		440522	0					
ANR	440563	PtrMemberAccess	op -> operands		440522	0					
ANR	440564	Identifier	op		440522	0					
ANR	440565	Identifier	operands		440522	1					
ANR	440566	PrimaryExpression	0		440522	1					
ANR	440567	Identifier	type		440522	1					
ANR	440568	BitAndExpression	OT_FPUREG & ~OT_REGALL		440522	1		&			
ANR	440569	Identifier	OT_FPUREG		440522	0					
ANR	440570	Identifier	~OT_REGALL		440522	1					
ANR	440571	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		440522	1		&&			
ANR	440572	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440522	0		&			
ANR	440573	MemberAccess	op -> operands [ 1 ] . type		440522	0					
ANR	440574	ArrayIndexing	op -> operands [ 1 ]		440522	0					
ANR	440575	PtrMemberAccess	op -> operands		440522	0					
ANR	440576	Identifier	op		440522	0					
ANR	440577	Identifier	operands		440522	1					
ANR	440578	PrimaryExpression	1		440522	1					
ANR	440579	Identifier	type		440522	1					
ANR	440580	BitAndExpression	OT_FPUREG & ~OT_REGALL		440522	1		&			
ANR	440581	Identifier	OT_FPUREG		440522	0					
ANR	440582	Identifier	~OT_REGALL		440522	1					
ANR	440583	EqualityExpression	op -> operands [ 1 ] . reg == 0		440522	1		==			
ANR	440584	MemberAccess	op -> operands [ 1 ] . reg		440522	0					
ANR	440585	ArrayIndexing	op -> operands [ 1 ]		440522	0					
ANR	440586	PtrMemberAccess	op -> operands		440522	0					
ANR	440587	Identifier	op		440522	0					
ANR	440588	Identifier	operands		440522	1					
ANR	440589	PrimaryExpression	1		440522	1					
ANR	440590	Identifier	reg		440522	1					
ANR	440591	PrimaryExpression	0		440522	1					
ANR	440592	CompoundStatement		10:83:250:250	440522	1					
ANR	440593	ExpressionStatement	data [ l ++ ] = 0xde	3343:3:84821:84837	440522	0	True				
ANR	440594	AssignmentExpression	data [ l ++ ] = 0xde		440522	0		=			
ANR	440595	ArrayIndexing	data [ l ++ ]		440522	0					
ANR	440596	Identifier	data		440522	0					
ANR	440597	PostIncDecOperationExpression	l ++		440522	1					
ANR	440598	Identifier	l		440522	0					
ANR	440599	IncDec	++		440522	1					
ANR	440600	PrimaryExpression	0xde		440522	1					
ANR	440601	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	3344:3:84842:84880	440522	1	True				
ANR	440602	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		440522	0		=			
ANR	440603	ArrayIndexing	data [ l ++ ]		440522	0					
ANR	440604	Identifier	data		440522	0					
ANR	440605	PostIncDecOperationExpression	l ++		440522	1					
ANR	440606	Identifier	l		440522	0					
ANR	440607	IncDec	++		440522	1					
ANR	440608	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		440522	1		|			
ANR	440609	PrimaryExpression	0xf0		440522	0					
ANR	440610	MemberAccess	op -> operands [ 0 ] . reg		440522	1					
ANR	440611	ArrayIndexing	op -> operands [ 0 ]		440522	0					
ANR	440612	PtrMemberAccess	op -> operands		440522	0					
ANR	440613	Identifier	op		440522	0					
ANR	440614	Identifier	operands		440522	1					
ANR	440615	PrimaryExpression	0		440522	1					
ANR	440616	Identifier	reg		440522	1					
ANR	440617	ElseStatement	else		440522	0					
ANR	440618	CompoundStatement		13:9:325:325	440522	0					
ANR	440619	ReturnStatement	return - 1 ;	3346:3:84896:84905	440522	0	True				
ANR	440620	UnaryOperationExpression	- 1		440522	0					
ANR	440621	UnaryOperator	-		440522	0					
ANR	440622	PrimaryExpression	1		440522	1					
ANR	440623	BreakStatement	break ;	3348:2:84913:84918	440522	6	True				
ANR	440624	Label	default :	3349:1:84921:84928	440522	7	True				
ANR	440625	Identifier	default		440522	0					
ANR	440626	ReturnStatement	return - 1 ;	3350:2:84932:84941	440522	8	True				
ANR	440627	UnaryOperationExpression	- 1		440522	0					
ANR	440628	UnaryOperator	-		440522	0					
ANR	440629	PrimaryExpression	1		440522	1					
ANR	440630	ReturnStatement	return l ;	3352:1:84947:84955	440522	2	True				
ANR	440631	Identifier	l		440522	0					
ANR	440632	ReturnType	static int		440522	1					
ANR	440633	Identifier	opfdivrp		440522	2					
ANR	440634	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		440522	3					
ANR	440635	Parameter	RAsm * a	3333:20:84527:84533	440522	0	True				
ANR	440636	ParameterType	RAsm *		440522	0					
ANR	440637	Identifier	a		440522	1					
ANR	440638	Parameter	ut8 * data	3333:29:84536:84544	440522	1	True				
ANR	440639	ParameterType	ut8 *		440522	0					
ANR	440640	Identifier	data		440522	1					
ANR	440641	Parameter	const Opcode * op	3333:40:84547:84562	440522	2	True				
ANR	440642	ParameterType	const Opcode *		440522	0					
ANR	440643	Identifier	op		440522	1					
ANR	440644	CFGEntryNode	ENTRY		440522		True				
ANR	440645	CFGExitNode	EXIT		440522		True				
ANR	440646	Symbol	a		440522						
ANR	440647	Symbol	op		440522						
ANR	440648	Symbol	data		440522						
ANR	440649	Symbol	* op		440522						
ANR	440650	Symbol	op -> operands [ 1 ] . reg		440522						
ANR	440651	Symbol	l		440522						
ANR	440652	Symbol	* * op		440522						
ANR	440653	Symbol	OT_FPUREG		440522						
ANR	440654	Symbol	* op -> operands		440522						
ANR	440655	Symbol	op -> operands [ 1 ] . type		440522						
ANR	440656	Symbol	op -> operands_count		440522						
ANR	440657	Symbol	~OT_REGALL		440522						
ANR	440658	Symbol	op -> operands [ 0 ] . type		440522						
ANR	440659	Symbol	op -> operands [ 0 ] . reg		440522						
ANR	440660	Symbol	op -> operands		440522						
ANR	440661	Symbol	* data		440522						
ANR	440662	Function	opfidivr	3355:0:84960:85457							
ANR	440663	FunctionDef	"opfidivr (RAsm * a , ut8 * data , const Opcode * op)"		440662	0					
ANR	440664	CompoundStatement		3355:58:85018:85457	440662	0					
ANR	440665	IdentifierDeclStatement	int l = 0 ;	3356:1:85021:85030	440662	0	True				
ANR	440666	IdentifierDecl	l = 0		440662	0					
ANR	440667	IdentifierDeclType	int		440662	0					
ANR	440668	Identifier	l		440662	1					
ANR	440669	AssignmentExpression	l = 0		440662	2		=			
ANR	440670	Identifier	l		440662	0					
ANR	440671	PrimaryExpression	0		440662	1					
ANR	440672	SwitchStatement	switch ( op -> operands_count )		440662	1					
ANR	440673	Condition	op -> operands_count	3357:9:85041:85058	440662	0	True				
ANR	440674	PtrMemberAccess	op -> operands_count		440662	0					
ANR	440675	Identifier	op		440662	0					
ANR	440676	Identifier	operands_count		440662	1					
ANR	440677	CompoundStatement		3:29:42:42	440662	1					
ANR	440678	Label	case 1 :	3358:1:85064:85070	440662	0	True				
ANR	440679	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		440662	1					
ANR	440680	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3359:7:85079:85110	440662	0	True				
ANR	440681	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		440662	0		&			
ANR	440682	MemberAccess	op -> operands [ 0 ] . type		440662	0					
ANR	440683	ArrayIndexing	op -> operands [ 0 ]		440662	0					
ANR	440684	PtrMemberAccess	op -> operands		440662	0					
ANR	440685	Identifier	op		440662	0					
ANR	440686	Identifier	operands		440662	1					
ANR	440687	PrimaryExpression	0		440662	1					
ANR	440688	Identifier	type		440662	1					
ANR	440689	Identifier	OT_MEMORY		440662	1					
ANR	440690	CompoundStatement		5:42:95:95	440662	1					
ANR	440691	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		440662	0					
ANR	440692	Condition	op -> operands [ 0 ] . type & OT_DWORD	3360:8:85124:85154	440662	0	True				
ANR	440693	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		440662	0		&			
ANR	440694	MemberAccess	op -> operands [ 0 ] . type		440662	0					
ANR	440695	ArrayIndexing	op -> operands [ 0 ]		440662	0					
ANR	440696	PtrMemberAccess	op -> operands		440662	0					
ANR	440697	Identifier	op		440662	0					
ANR	440698	Identifier	operands		440662	1					
ANR	440699	PrimaryExpression	0		440662	1					
ANR	440700	Identifier	type		440662	1					
ANR	440701	Identifier	OT_DWORD		440662	1					
ANR	440702	CompoundStatement		6:42:139:139	440662	1					
ANR	440703	ExpressionStatement	data [ l ++ ] = 0xda	3361:4:85164:85180	440662	0	True				
ANR	440704	AssignmentExpression	data [ l ++ ] = 0xda		440662	0		=			
ANR	440705	ArrayIndexing	data [ l ++ ]		440662	0					
ANR	440706	Identifier	data		440662	0					
ANR	440707	PostIncDecOperationExpression	l ++		440662	1					
ANR	440708	Identifier	l		440662	0					
ANR	440709	IncDec	++		440662	1					
ANR	440710	PrimaryExpression	0xda		440662	1					
ANR	440711	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3362:4:85186:85228	440662	1	True				
ANR	440712	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		440662	0		=			
ANR	440713	ArrayIndexing	data [ l ++ ]		440662	0					
ANR	440714	Identifier	data		440662	0					
ANR	440715	PostIncDecOperationExpression	l ++		440662	1					
ANR	440716	Identifier	l		440662	0					
ANR	440717	IncDec	++		440662	1					
ANR	440718	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		440662	1		|			
ANR	440719	PrimaryExpression	0x38		440662	0					
ANR	440720	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440662	1					
ANR	440721	MemberAccess	op -> operands [ 0 ] . regs		440662	0					
ANR	440722	ArrayIndexing	op -> operands [ 0 ]		440662	0					
ANR	440723	PtrMemberAccess	op -> operands		440662	0					
ANR	440724	Identifier	op		440662	0					
ANR	440725	Identifier	operands		440662	1					
ANR	440726	PrimaryExpression	0		440662	1					
ANR	440727	Identifier	regs		440662	1					
ANR	440728	PrimaryExpression	0		440662	1					
ANR	440729	ElseStatement	else		440662	0					
ANR	440730	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		440662	0					
ANR	440731	Condition	op -> operands [ 0 ] . type & OT_WORD	3363:15:85245:85274	440662	0	True				
ANR	440732	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		440662	0		&			
ANR	440733	MemberAccess	op -> operands [ 0 ] . type		440662	0					
ANR	440734	ArrayIndexing	op -> operands [ 0 ]		440662	0					
ANR	440735	PtrMemberAccess	op -> operands		440662	0					
ANR	440736	Identifier	op		440662	0					
ANR	440737	Identifier	operands		440662	1					
ANR	440738	PrimaryExpression	0		440662	1					
ANR	440739	Identifier	type		440662	1					
ANR	440740	Identifier	OT_WORD		440662	1					
ANR	440741	CompoundStatement		9:48:259:259	440662	1					
ANR	440742	ExpressionStatement	data [ l ++ ] = 0xde	3364:4:85284:85300	440662	0	True				
ANR	440743	AssignmentExpression	data [ l ++ ] = 0xde		440662	0		=			
ANR	440744	ArrayIndexing	data [ l ++ ]		440662	0					
ANR	440745	Identifier	data		440662	0					
ANR	440746	PostIncDecOperationExpression	l ++		440662	1					
ANR	440747	Identifier	l		440662	0					
ANR	440748	IncDec	++		440662	1					
ANR	440749	PrimaryExpression	0xde		440662	1					
ANR	440750	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3365:4:85306:85348	440662	1	True				
ANR	440751	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		440662	0		=			
ANR	440752	ArrayIndexing	data [ l ++ ]		440662	0					
ANR	440753	Identifier	data		440662	0					
ANR	440754	PostIncDecOperationExpression	l ++		440662	1					
ANR	440755	Identifier	l		440662	0					
ANR	440756	IncDec	++		440662	1					
ANR	440757	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		440662	1		|			
ANR	440758	PrimaryExpression	0x38		440662	0					
ANR	440759	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440662	1					
ANR	440760	MemberAccess	op -> operands [ 0 ] . regs		440662	0					
ANR	440761	ArrayIndexing	op -> operands [ 0 ]		440662	0					
ANR	440762	PtrMemberAccess	op -> operands		440662	0					
ANR	440763	Identifier	op		440662	0					
ANR	440764	Identifier	operands		440662	1					
ANR	440765	PrimaryExpression	0		440662	1					
ANR	440766	Identifier	regs		440662	1					
ANR	440767	PrimaryExpression	0		440662	1					
ANR	440768	ElseStatement	else		440662	0					
ANR	440769	CompoundStatement		12:10:341:341	440662	0					
ANR	440770	ReturnStatement	return - 1 ;	3367:4:85366:85375	440662	0	True				
ANR	440771	UnaryOperationExpression	- 1		440662	0					
ANR	440772	UnaryOperator	-		440662	0					
ANR	440773	PrimaryExpression	1		440662	1					
ANR	440774	ElseStatement	else		440662	0					
ANR	440775	CompoundStatement		15:9:372:372	440662	0					
ANR	440776	ReturnStatement	return - 1 ;	3370:3:85396:85405	440662	0	True				
ANR	440777	UnaryOperationExpression	- 1		440662	0					
ANR	440778	UnaryOperator	-		440662	0					
ANR	440779	PrimaryExpression	1		440662	1					
ANR	440780	BreakStatement	break ;	3372:2:85413:85418	440662	2	True				
ANR	440781	Label	default :	3373:1:85421:85428	440662	3	True				
ANR	440782	Identifier	default		440662	0					
ANR	440783	ReturnStatement	return - 1 ;	3374:2:85432:85441	440662	4	True				
ANR	440784	UnaryOperationExpression	- 1		440662	0					
ANR	440785	UnaryOperator	-		440662	0					
ANR	440786	PrimaryExpression	1		440662	1					
ANR	440787	ReturnStatement	return l ;	3376:1:85447:85455	440662	2	True				
ANR	440788	Identifier	l		440662	0					
ANR	440789	ReturnType	static int		440662	1					
ANR	440790	Identifier	opfidivr		440662	2					
ANR	440791	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		440662	3					
ANR	440792	Parameter	RAsm * a	3355:20:84980:84986	440662	0	True				
ANR	440793	ParameterType	RAsm *		440662	0					
ANR	440794	Identifier	a		440662	1					
ANR	440795	Parameter	ut8 * data	3355:29:84989:84997	440662	1	True				
ANR	440796	ParameterType	ut8 *		440662	0					
ANR	440797	Identifier	data		440662	1					
ANR	440798	Parameter	const Opcode * op	3355:40:85000:85015	440662	2	True				
ANR	440799	ParameterType	const Opcode *		440662	0					
ANR	440800	Identifier	op		440662	1					
ANR	440801	CFGEntryNode	ENTRY		440662		True				
ANR	440802	CFGExitNode	EXIT		440662		True				
ANR	440803	Symbol	a		440662						
ANR	440804	Symbol	op		440662						
ANR	440805	Symbol	OT_WORD		440662						
ANR	440806	Symbol	data		440662						
ANR	440807	Symbol	* op		440662						
ANR	440808	Symbol	* * op -> operands		440662						
ANR	440809	Symbol	l		440662						
ANR	440810	Symbol	* * op		440662						
ANR	440811	Symbol	* op -> operands		440662						
ANR	440812	Symbol	op -> operands_count		440662						
ANR	440813	Symbol	* op -> operands [ 0 ] . regs		440662						
ANR	440814	Symbol	op -> operands [ 0 ] . type		440662						
ANR	440815	Symbol	* * * op		440662						
ANR	440816	Symbol	op -> operands		440662						
ANR	440817	Symbol	OT_MEMORY		440662						
ANR	440818	Symbol	* data		440662						
ANR	440819	Symbol	op -> operands [ 0 ] . regs		440662						
ANR	440820	Symbol	OT_DWORD		440662						
ANR	440821	Function	opfmul	3379:0:85460:86420							
ANR	440822	FunctionDef	"opfmul (RAsm * a , ut8 * data , const Opcode * op)"		440821	0					
ANR	440823	CompoundStatement		3379:56:85516:86420	440821	0					
ANR	440824	IdentifierDeclStatement	int l = 0 ;	3380:1:85519:85528	440821	0	True				
ANR	440825	IdentifierDecl	l = 0		440821	0					
ANR	440826	IdentifierDeclType	int		440821	0					
ANR	440827	Identifier	l		440821	1					
ANR	440828	AssignmentExpression	l = 0		440821	2		=			
ANR	440829	Identifier	l		440821	0					
ANR	440830	PrimaryExpression	0		440821	1					
ANR	440831	SwitchStatement	switch ( op -> operands_count )		440821	1					
ANR	440832	Condition	op -> operands_count	3381:9:85539:85556	440821	0	True				
ANR	440833	PtrMemberAccess	op -> operands_count		440821	0					
ANR	440834	Identifier	op		440821	0					
ANR	440835	Identifier	operands_count		440821	1					
ANR	440836	CompoundStatement		3:29:42:42	440821	1					
ANR	440837	Label	case 1 :	3382:1:85562:85568	440821	0	True				
ANR	440838	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		440821	1					
ANR	440839	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3383:7:85577:85608	440821	0	True				
ANR	440840	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		440821	0		&			
ANR	440841	MemberAccess	op -> operands [ 0 ] . type		440821	0					
ANR	440842	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440843	PtrMemberAccess	op -> operands		440821	0					
ANR	440844	Identifier	op		440821	0					
ANR	440845	Identifier	operands		440821	1					
ANR	440846	PrimaryExpression	0		440821	1					
ANR	440847	Identifier	type		440821	1					
ANR	440848	Identifier	OT_MEMORY		440821	1					
ANR	440849	CompoundStatement		5:42:95:95	440821	1					
ANR	440850	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		440821	0					
ANR	440851	Condition	op -> operands [ 0 ] . type & OT_DWORD	3384:8:85622:85652	440821	0	True				
ANR	440852	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		440821	0		&			
ANR	440853	MemberAccess	op -> operands [ 0 ] . type		440821	0					
ANR	440854	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440855	PtrMemberAccess	op -> operands		440821	0					
ANR	440856	Identifier	op		440821	0					
ANR	440857	Identifier	operands		440821	1					
ANR	440858	PrimaryExpression	0		440821	1					
ANR	440859	Identifier	type		440821	1					
ANR	440860	Identifier	OT_DWORD		440821	1					
ANR	440861	CompoundStatement		6:42:139:139	440821	1					
ANR	440862	ExpressionStatement	data [ l ++ ] = 0xd8	3385:4:85662:85678	440821	0	True				
ANR	440863	AssignmentExpression	data [ l ++ ] = 0xd8		440821	0		=			
ANR	440864	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	440865	Identifier	data		440821	0					
ANR	440866	PostIncDecOperationExpression	l ++		440821	1					
ANR	440867	Identifier	l		440821	0					
ANR	440868	IncDec	++		440821	1					
ANR	440869	PrimaryExpression	0xd8		440821	1					
ANR	440870	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3386:4:85684:85726	440821	1	True				
ANR	440871	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		440821	0		=			
ANR	440872	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	440873	Identifier	data		440821	0					
ANR	440874	PostIncDecOperationExpression	l ++		440821	1					
ANR	440875	Identifier	l		440821	0					
ANR	440876	IncDec	++		440821	1					
ANR	440877	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		440821	1		|			
ANR	440878	PrimaryExpression	0x08		440821	0					
ANR	440879	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440821	1					
ANR	440880	MemberAccess	op -> operands [ 0 ] . regs		440821	0					
ANR	440881	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440882	PtrMemberAccess	op -> operands		440821	0					
ANR	440883	Identifier	op		440821	0					
ANR	440884	Identifier	operands		440821	1					
ANR	440885	PrimaryExpression	0		440821	1					
ANR	440886	Identifier	regs		440821	1					
ANR	440887	PrimaryExpression	0		440821	1					
ANR	440888	ElseStatement	else		440821	0					
ANR	440889	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		440821	0					
ANR	440890	Condition	op -> operands [ 0 ] . type & OT_QWORD	3387:15:85743:85773	440821	0	True				
ANR	440891	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		440821	0		&			
ANR	440892	MemberAccess	op -> operands [ 0 ] . type		440821	0					
ANR	440893	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440894	PtrMemberAccess	op -> operands		440821	0					
ANR	440895	Identifier	op		440821	0					
ANR	440896	Identifier	operands		440821	1					
ANR	440897	PrimaryExpression	0		440821	1					
ANR	440898	Identifier	type		440821	1					
ANR	440899	Identifier	OT_QWORD		440821	1					
ANR	440900	CompoundStatement		9:49:260:260	440821	1					
ANR	440901	ExpressionStatement	data [ l ++ ] = 0xdc	3388:4:85783:85799	440821	0	True				
ANR	440902	AssignmentExpression	data [ l ++ ] = 0xdc		440821	0		=			
ANR	440903	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	440904	Identifier	data		440821	0					
ANR	440905	PostIncDecOperationExpression	l ++		440821	1					
ANR	440906	Identifier	l		440821	0					
ANR	440907	IncDec	++		440821	1					
ANR	440908	PrimaryExpression	0xdc		440821	1					
ANR	440909	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3389:4:85805:85847	440821	1	True				
ANR	440910	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		440821	0		=			
ANR	440911	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	440912	Identifier	data		440821	0					
ANR	440913	PostIncDecOperationExpression	l ++		440821	1					
ANR	440914	Identifier	l		440821	0					
ANR	440915	IncDec	++		440821	1					
ANR	440916	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		440821	1		|			
ANR	440917	PrimaryExpression	0x08		440821	0					
ANR	440918	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		440821	1					
ANR	440919	MemberAccess	op -> operands [ 0 ] . regs		440821	0					
ANR	440920	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440921	PtrMemberAccess	op -> operands		440821	0					
ANR	440922	Identifier	op		440821	0					
ANR	440923	Identifier	operands		440821	1					
ANR	440924	PrimaryExpression	0		440821	1					
ANR	440925	Identifier	regs		440821	1					
ANR	440926	PrimaryExpression	0		440821	1					
ANR	440927	ElseStatement	else		440821	0					
ANR	440928	CompoundStatement		12:10:342:342	440821	0					
ANR	440929	ReturnStatement	return - 1 ;	3391:4:85865:85874	440821	0	True				
ANR	440930	UnaryOperationExpression	- 1		440821	0					
ANR	440931	UnaryOperator	-		440821	0					
ANR	440932	PrimaryExpression	1		440821	1					
ANR	440933	ElseStatement	else		440821	0					
ANR	440934	CompoundStatement		15:9:373:373	440821	0					
ANR	440935	ReturnStatement	return - 1 ;	3394:3:85895:85904	440821	0	True				
ANR	440936	UnaryOperationExpression	- 1		440821	0					
ANR	440937	UnaryOperator	-		440821	0					
ANR	440938	PrimaryExpression	1		440821	1					
ANR	440939	BreakStatement	break ;	3396:2:85912:85917	440821	2	True				
ANR	440940	Label	case 2 :	3397:1:85920:85926	440821	3	True				
ANR	440941	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		440821	4					
ANR	440942	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3398:7:85935:86063	440821	0	True				
ANR	440943	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440821	0		&&			
ANR	440944	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		440821	0		&			
ANR	440945	MemberAccess	op -> operands [ 0 ] . type		440821	0					
ANR	440946	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440947	PtrMemberAccess	op -> operands		440821	0					
ANR	440948	Identifier	op		440821	0					
ANR	440949	Identifier	operands		440821	1					
ANR	440950	PrimaryExpression	0		440821	1					
ANR	440951	Identifier	type		440821	1					
ANR	440952	BitAndExpression	OT_FPUREG & ~OT_REGALL		440821	1		&			
ANR	440953	Identifier	OT_FPUREG		440821	0					
ANR	440954	Identifier	~OT_REGALL		440821	1					
ANR	440955	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440821	1		&&			
ANR	440956	EqualityExpression	op -> operands [ 0 ] . reg == 0		440821	0		==			
ANR	440957	MemberAccess	op -> operands [ 0 ] . reg		440821	0					
ANR	440958	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	440959	PtrMemberAccess	op -> operands		440821	0					
ANR	440960	Identifier	op		440821	0					
ANR	440961	Identifier	operands		440821	1					
ANR	440962	PrimaryExpression	0		440821	1					
ANR	440963	Identifier	reg		440821	1					
ANR	440964	PrimaryExpression	0		440821	1					
ANR	440965	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440821	1		&			
ANR	440966	MemberAccess	op -> operands [ 1 ] . type		440821	0					
ANR	440967	ArrayIndexing	op -> operands [ 1 ]		440821	0					
ANR	440968	PtrMemberAccess	op -> operands		440821	0					
ANR	440969	Identifier	op		440821	0					
ANR	440970	Identifier	operands		440821	1					
ANR	440971	PrimaryExpression	1		440821	1					
ANR	440972	Identifier	type		440821	1					
ANR	440973	BitAndExpression	OT_FPUREG & ~OT_REGALL		440821	1		&			
ANR	440974	Identifier	OT_FPUREG		440821	0					
ANR	440975	Identifier	~OT_REGALL		440821	1					
ANR	440976	CompoundStatement		21:55:550:550	440821	1					
ANR	440977	ExpressionStatement	data [ l ++ ] = 0xd8	3400:3:86072:86088	440821	0	True				
ANR	440978	AssignmentExpression	data [ l ++ ] = 0xd8		440821	0		=			
ANR	440979	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	440980	Identifier	data		440821	0					
ANR	440981	PostIncDecOperationExpression	l ++		440821	1					
ANR	440982	Identifier	l		440821	0					
ANR	440983	IncDec	++		440821	1					
ANR	440984	PrimaryExpression	0xd8		440821	1					
ANR	440985	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg	3401:3:86093:86131	440821	1	True				
ANR	440986	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg		440821	0		=			
ANR	440987	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	440988	Identifier	data		440821	0					
ANR	440989	PostIncDecOperationExpression	l ++		440821	1					
ANR	440990	Identifier	l		440821	0					
ANR	440991	IncDec	++		440821	1					
ANR	440992	InclusiveOrExpression	0xc8 | op -> operands [ 1 ] . reg		440821	1		|			
ANR	440993	PrimaryExpression	0xc8		440821	0					
ANR	440994	MemberAccess	op -> operands [ 1 ] . reg		440821	1					
ANR	440995	ArrayIndexing	op -> operands [ 1 ]		440821	0					
ANR	440996	PtrMemberAccess	op -> operands		440821	0					
ANR	440997	Identifier	op		440821	0					
ANR	440998	Identifier	operands		440821	1					
ANR	440999	PrimaryExpression	1		440821	1					
ANR	441000	Identifier	reg		440821	1					
ANR	441001	ElseStatement	else		440821	0					
ANR	441002	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		440821	0					
ANR	441003	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3402:14:86147:86275	440821	0	True				
ANR	441004	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		440821	0		&&			
ANR	441005	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		440821	0		&			
ANR	441006	MemberAccess	op -> operands [ 0 ] . type		440821	0					
ANR	441007	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	441008	PtrMemberAccess	op -> operands		440821	0					
ANR	441009	Identifier	op		440821	0					
ANR	441010	Identifier	operands		440821	1					
ANR	441011	PrimaryExpression	0		440821	1					
ANR	441012	Identifier	type		440821	1					
ANR	441013	BitAndExpression	OT_FPUREG & ~OT_REGALL		440821	1		&			
ANR	441014	Identifier	OT_FPUREG		440821	0					
ANR	441015	Identifier	~OT_REGALL		440821	1					
ANR	441016	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		440821	1		&&			
ANR	441017	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		440821	0		&			
ANR	441018	MemberAccess	op -> operands [ 1 ] . type		440821	0					
ANR	441019	ArrayIndexing	op -> operands [ 1 ]		440821	0					
ANR	441020	PtrMemberAccess	op -> operands		440821	0					
ANR	441021	Identifier	op		440821	0					
ANR	441022	Identifier	operands		440821	1					
ANR	441023	PrimaryExpression	1		440821	1					
ANR	441024	Identifier	type		440821	1					
ANR	441025	BitAndExpression	OT_FPUREG & ~OT_REGALL		440821	1		&			
ANR	441026	Identifier	OT_FPUREG		440821	0					
ANR	441027	Identifier	~OT_REGALL		440821	1					
ANR	441028	EqualityExpression	op -> operands [ 1 ] . reg == 0		440821	1		==			
ANR	441029	MemberAccess	op -> operands [ 1 ] . reg		440821	0					
ANR	441030	ArrayIndexing	op -> operands [ 1 ]		440821	0					
ANR	441031	PtrMemberAccess	op -> operands		440821	0					
ANR	441032	Identifier	op		440821	0					
ANR	441033	Identifier	operands		440821	1					
ANR	441034	PrimaryExpression	1		440821	1					
ANR	441035	Identifier	reg		440821	1					
ANR	441036	PrimaryExpression	0		440821	1					
ANR	441037	CompoundStatement		25:83:762:762	440821	1					
ANR	441038	ExpressionStatement	data [ l ++ ] = 0xdc	3404:3:86284:86300	440821	0	True				
ANR	441039	AssignmentExpression	data [ l ++ ] = 0xdc		440821	0		=			
ANR	441040	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	441041	Identifier	data		440821	0					
ANR	441042	PostIncDecOperationExpression	l ++		440821	1					
ANR	441043	Identifier	l		440821	0					
ANR	441044	IncDec	++		440821	1					
ANR	441045	PrimaryExpression	0xdc		440821	1					
ANR	441046	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	3405:3:86305:86343	440821	1	True				
ANR	441047	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		440821	0		=			
ANR	441048	ArrayIndexing	data [ l ++ ]		440821	0					
ANR	441049	Identifier	data		440821	0					
ANR	441050	PostIncDecOperationExpression	l ++		440821	1					
ANR	441051	Identifier	l		440821	0					
ANR	441052	IncDec	++		440821	1					
ANR	441053	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		440821	1		|			
ANR	441054	PrimaryExpression	0xc8		440821	0					
ANR	441055	MemberAccess	op -> operands [ 0 ] . reg		440821	1					
ANR	441056	ArrayIndexing	op -> operands [ 0 ]		440821	0					
ANR	441057	PtrMemberAccess	op -> operands		440821	0					
ANR	441058	Identifier	op		440821	0					
ANR	441059	Identifier	operands		440821	1					
ANR	441060	PrimaryExpression	0		440821	1					
ANR	441061	Identifier	reg		440821	1					
ANR	441062	ElseStatement	else		440821	0					
ANR	441063	CompoundStatement		28:9:837:837	440821	0					
ANR	441064	ReturnStatement	return - 1 ;	3407:3:86359:86368	440821	0	True				
ANR	441065	UnaryOperationExpression	- 1		440821	0					
ANR	441066	UnaryOperator	-		440821	0					
ANR	441067	PrimaryExpression	1		440821	1					
ANR	441068	BreakStatement	break ;	3409:2:86376:86381	440821	5	True				
ANR	441069	Label	default :	3410:1:86384:86391	440821	6	True				
ANR	441070	Identifier	default		440821	0					
ANR	441071	ReturnStatement	return - 1 ;	3411:2:86395:86404	440821	7	True				
ANR	441072	UnaryOperationExpression	- 1		440821	0					
ANR	441073	UnaryOperator	-		440821	0					
ANR	441074	PrimaryExpression	1		440821	1					
ANR	441075	ReturnStatement	return l ;	3413:1:86410:86418	440821	2	True				
ANR	441076	Identifier	l		440821	0					
ANR	441077	ReturnType	static int		440821	1					
ANR	441078	Identifier	opfmul		440821	2					
ANR	441079	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		440821	3					
ANR	441080	Parameter	RAsm * a	3379:18:85478:85484	440821	0	True				
ANR	441081	ParameterType	RAsm *		440821	0					
ANR	441082	Identifier	a		440821	1					
ANR	441083	Parameter	ut8 * data	3379:27:85487:85495	440821	1	True				
ANR	441084	ParameterType	ut8 *		440821	0					
ANR	441085	Identifier	data		440821	1					
ANR	441086	Parameter	const Opcode * op	3379:38:85498:85513	440821	2	True				
ANR	441087	ParameterType	const Opcode *		440821	0					
ANR	441088	Identifier	op		440821	1					
ANR	441089	CFGEntryNode	ENTRY		440821		True				
ANR	441090	CFGExitNode	EXIT		440821		True				
ANR	441091	Symbol	a		440821						
ANR	441092	Symbol	op		440821						
ANR	441093	Symbol	OT_QWORD		440821						
ANR	441094	Symbol	data		440821						
ANR	441095	Symbol	* op		440821						
ANR	441096	Symbol	op -> operands [ 1 ] . reg		440821						
ANR	441097	Symbol	* * op -> operands		440821						
ANR	441098	Symbol	l		440821						
ANR	441099	Symbol	* * op		440821						
ANR	441100	Symbol	OT_FPUREG		440821						
ANR	441101	Symbol	* op -> operands		440821						
ANR	441102	Symbol	op -> operands [ 1 ] . type		440821						
ANR	441103	Symbol	op -> operands_count		440821						
ANR	441104	Symbol	* op -> operands [ 0 ] . regs		440821						
ANR	441105	Symbol	op -> operands [ 0 ] . type		440821						
ANR	441106	Symbol	~OT_REGALL		440821						
ANR	441107	Symbol	* * * op		440821						
ANR	441108	Symbol	op -> operands [ 0 ] . reg		440821						
ANR	441109	Symbol	op -> operands		440821						
ANR	441110	Symbol	OT_MEMORY		440821						
ANR	441111	Symbol	* data		440821						
ANR	441112	Symbol	op -> operands [ 0 ] . regs		440821						
ANR	441113	Symbol	OT_DWORD		440821						
ANR	441114	Function	opfmulp	3416:0:86423:86872							
ANR	441115	FunctionDef	"opfmulp (RAsm * a , ut8 * data , const Opcode * op)"		441114	0					
ANR	441116	CompoundStatement		3416:57:86480:86872	441114	0					
ANR	441117	IdentifierDeclStatement	int l = 0 ;	3417:1:86483:86492	441114	0	True				
ANR	441118	IdentifierDecl	l = 0		441114	0					
ANR	441119	IdentifierDeclType	int		441114	0					
ANR	441120	Identifier	l		441114	1					
ANR	441121	AssignmentExpression	l = 0		441114	2		=			
ANR	441122	Identifier	l		441114	0					
ANR	441123	PrimaryExpression	0		441114	1					
ANR	441124	SwitchStatement	switch ( op -> operands_count )		441114	1					
ANR	441125	Condition	op -> operands_count	3418:9:86503:86520	441114	0	True				
ANR	441126	PtrMemberAccess	op -> operands_count		441114	0					
ANR	441127	Identifier	op		441114	0					
ANR	441128	Identifier	operands_count		441114	1					
ANR	441129	CompoundStatement		3:29:42:42	441114	1					
ANR	441130	Label	case 0 :	3419:1:86526:86532	441114	0	True				
ANR	441131	ExpressionStatement	data [ l ++ ] = 0xde	3420:2:86536:86552	441114	1	True				
ANR	441132	AssignmentExpression	data [ l ++ ] = 0xde		441114	0		=			
ANR	441133	ArrayIndexing	data [ l ++ ]		441114	0					
ANR	441134	Identifier	data		441114	0					
ANR	441135	PostIncDecOperationExpression	l ++		441114	1					
ANR	441136	Identifier	l		441114	0					
ANR	441137	IncDec	++		441114	1					
ANR	441138	PrimaryExpression	0xde		441114	1					
ANR	441139	ExpressionStatement	data [ l ++ ] = 0xc9	3421:2:86556:86572	441114	2	True				
ANR	441140	AssignmentExpression	data [ l ++ ] = 0xc9		441114	0		=			
ANR	441141	ArrayIndexing	data [ l ++ ]		441114	0					
ANR	441142	Identifier	data		441114	0					
ANR	441143	PostIncDecOperationExpression	l ++		441114	1					
ANR	441144	Identifier	l		441114	0					
ANR	441145	IncDec	++		441114	1					
ANR	441146	PrimaryExpression	0xc9		441114	1					
ANR	441147	BreakStatement	break ;	3422:2:86576:86581	441114	3	True				
ANR	441148	Label	case 2 :	3423:1:86584:86590	441114	4	True				
ANR	441149	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		441114	5					
ANR	441150	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3424:7:86599:86727	441114	0	True				
ANR	441151	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		441114	0		&&			
ANR	441152	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		441114	0		&			
ANR	441153	MemberAccess	op -> operands [ 0 ] . type		441114	0					
ANR	441154	ArrayIndexing	op -> operands [ 0 ]		441114	0					
ANR	441155	PtrMemberAccess	op -> operands		441114	0					
ANR	441156	Identifier	op		441114	0					
ANR	441157	Identifier	operands		441114	1					
ANR	441158	PrimaryExpression	0		441114	1					
ANR	441159	Identifier	type		441114	1					
ANR	441160	BitAndExpression	OT_FPUREG & ~OT_REGALL		441114	1		&			
ANR	441161	Identifier	OT_FPUREG		441114	0					
ANR	441162	Identifier	~OT_REGALL		441114	1					
ANR	441163	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		441114	1		&&			
ANR	441164	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		441114	0		&			
ANR	441165	MemberAccess	op -> operands [ 1 ] . type		441114	0					
ANR	441166	ArrayIndexing	op -> operands [ 1 ]		441114	0					
ANR	441167	PtrMemberAccess	op -> operands		441114	0					
ANR	441168	Identifier	op		441114	0					
ANR	441169	Identifier	operands		441114	1					
ANR	441170	PrimaryExpression	1		441114	1					
ANR	441171	Identifier	type		441114	1					
ANR	441172	BitAndExpression	OT_FPUREG & ~OT_REGALL		441114	1		&			
ANR	441173	Identifier	OT_FPUREG		441114	0					
ANR	441174	Identifier	~OT_REGALL		441114	1					
ANR	441175	EqualityExpression	op -> operands [ 1 ] . reg == 0		441114	1		==			
ANR	441176	MemberAccess	op -> operands [ 1 ] . reg		441114	0					
ANR	441177	ArrayIndexing	op -> operands [ 1 ]		441114	0					
ANR	441178	PtrMemberAccess	op -> operands		441114	0					
ANR	441179	Identifier	op		441114	0					
ANR	441180	Identifier	operands		441114	1					
ANR	441181	PrimaryExpression	1		441114	1					
ANR	441182	Identifier	reg		441114	1					
ANR	441183	PrimaryExpression	0		441114	1					
ANR	441184	CompoundStatement		10:83:250:250	441114	1					
ANR	441185	ExpressionStatement	data [ l ++ ] = 0xde	3426:3:86736:86752	441114	0	True				
ANR	441186	AssignmentExpression	data [ l ++ ] = 0xde		441114	0		=			
ANR	441187	ArrayIndexing	data [ l ++ ]		441114	0					
ANR	441188	Identifier	data		441114	0					
ANR	441189	PostIncDecOperationExpression	l ++		441114	1					
ANR	441190	Identifier	l		441114	0					
ANR	441191	IncDec	++		441114	1					
ANR	441192	PrimaryExpression	0xde		441114	1					
ANR	441193	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	3427:3:86757:86795	441114	1	True				
ANR	441194	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		441114	0		=			
ANR	441195	ArrayIndexing	data [ l ++ ]		441114	0					
ANR	441196	Identifier	data		441114	0					
ANR	441197	PostIncDecOperationExpression	l ++		441114	1					
ANR	441198	Identifier	l		441114	0					
ANR	441199	IncDec	++		441114	1					
ANR	441200	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		441114	1		|			
ANR	441201	PrimaryExpression	0xc8		441114	0					
ANR	441202	MemberAccess	op -> operands [ 0 ] . reg		441114	1					
ANR	441203	ArrayIndexing	op -> operands [ 0 ]		441114	0					
ANR	441204	PtrMemberAccess	op -> operands		441114	0					
ANR	441205	Identifier	op		441114	0					
ANR	441206	Identifier	operands		441114	1					
ANR	441207	PrimaryExpression	0		441114	1					
ANR	441208	Identifier	reg		441114	1					
ANR	441209	ElseStatement	else		441114	0					
ANR	441210	CompoundStatement		13:9:325:325	441114	0					
ANR	441211	ReturnStatement	return - 1 ;	3429:3:86811:86820	441114	0	True				
ANR	441212	UnaryOperationExpression	- 1		441114	0					
ANR	441213	UnaryOperator	-		441114	0					
ANR	441214	PrimaryExpression	1		441114	1					
ANR	441215	BreakStatement	break ;	3431:2:86828:86833	441114	6	True				
ANR	441216	Label	default :	3432:1:86836:86843	441114	7	True				
ANR	441217	Identifier	default		441114	0					
ANR	441218	ReturnStatement	return - 1 ;	3433:2:86847:86856	441114	8	True				
ANR	441219	UnaryOperationExpression	- 1		441114	0					
ANR	441220	UnaryOperator	-		441114	0					
ANR	441221	PrimaryExpression	1		441114	1					
ANR	441222	ReturnStatement	return l ;	3435:1:86862:86870	441114	2	True				
ANR	441223	Identifier	l		441114	0					
ANR	441224	ReturnType	static int		441114	1					
ANR	441225	Identifier	opfmulp		441114	2					
ANR	441226	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		441114	3					
ANR	441227	Parameter	RAsm * a	3416:19:86442:86448	441114	0	True				
ANR	441228	ParameterType	RAsm *		441114	0					
ANR	441229	Identifier	a		441114	1					
ANR	441230	Parameter	ut8 * data	3416:28:86451:86459	441114	1	True				
ANR	441231	ParameterType	ut8 *		441114	0					
ANR	441232	Identifier	data		441114	1					
ANR	441233	Parameter	const Opcode * op	3416:39:86462:86477	441114	2	True				
ANR	441234	ParameterType	const Opcode *		441114	0					
ANR	441235	Identifier	op		441114	1					
ANR	441236	CFGEntryNode	ENTRY		441114		True				
ANR	441237	CFGExitNode	EXIT		441114		True				
ANR	441238	Symbol	a		441114						
ANR	441239	Symbol	op		441114						
ANR	441240	Symbol	data		441114						
ANR	441241	Symbol	* op		441114						
ANR	441242	Symbol	op -> operands [ 1 ] . reg		441114						
ANR	441243	Symbol	l		441114						
ANR	441244	Symbol	* * op		441114						
ANR	441245	Symbol	OT_FPUREG		441114						
ANR	441246	Symbol	* op -> operands		441114						
ANR	441247	Symbol	op -> operands [ 1 ] . type		441114						
ANR	441248	Symbol	op -> operands_count		441114						
ANR	441249	Symbol	op -> operands [ 0 ] . type		441114						
ANR	441250	Symbol	~OT_REGALL		441114						
ANR	441251	Symbol	op -> operands [ 0 ] . reg		441114						
ANR	441252	Symbol	op -> operands		441114						
ANR	441253	Symbol	* data		441114						
ANR	441254	Function	opfimul	3438:0:86875:87371							
ANR	441255	FunctionDef	"opfimul (RAsm * a , ut8 * data , const Opcode * op)"		441254	0					
ANR	441256	CompoundStatement		3438:57:86932:87371	441254	0					
ANR	441257	IdentifierDeclStatement	int l = 0 ;	3439:1:86935:86944	441254	0	True				
ANR	441258	IdentifierDecl	l = 0		441254	0					
ANR	441259	IdentifierDeclType	int		441254	0					
ANR	441260	Identifier	l		441254	1					
ANR	441261	AssignmentExpression	l = 0		441254	2		=			
ANR	441262	Identifier	l		441254	0					
ANR	441263	PrimaryExpression	0		441254	1					
ANR	441264	SwitchStatement	switch ( op -> operands_count )		441254	1					
ANR	441265	Condition	op -> operands_count	3440:9:86955:86972	441254	0	True				
ANR	441266	PtrMemberAccess	op -> operands_count		441254	0					
ANR	441267	Identifier	op		441254	0					
ANR	441268	Identifier	operands_count		441254	1					
ANR	441269	CompoundStatement		3:29:42:42	441254	1					
ANR	441270	Label	case 1 :	3441:1:86978:86984	441254	0	True				
ANR	441271	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		441254	1					
ANR	441272	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3442:7:86993:87024	441254	0	True				
ANR	441273	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		441254	0		&			
ANR	441274	MemberAccess	op -> operands [ 0 ] . type		441254	0					
ANR	441275	ArrayIndexing	op -> operands [ 0 ]		441254	0					
ANR	441276	PtrMemberAccess	op -> operands		441254	0					
ANR	441277	Identifier	op		441254	0					
ANR	441278	Identifier	operands		441254	1					
ANR	441279	PrimaryExpression	0		441254	1					
ANR	441280	Identifier	type		441254	1					
ANR	441281	Identifier	OT_MEMORY		441254	1					
ANR	441282	CompoundStatement		5:42:95:95	441254	1					
ANR	441283	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		441254	0					
ANR	441284	Condition	op -> operands [ 0 ] . type & OT_DWORD	3443:8:87038:87068	441254	0	True				
ANR	441285	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		441254	0		&			
ANR	441286	MemberAccess	op -> operands [ 0 ] . type		441254	0					
ANR	441287	ArrayIndexing	op -> operands [ 0 ]		441254	0					
ANR	441288	PtrMemberAccess	op -> operands		441254	0					
ANR	441289	Identifier	op		441254	0					
ANR	441290	Identifier	operands		441254	1					
ANR	441291	PrimaryExpression	0		441254	1					
ANR	441292	Identifier	type		441254	1					
ANR	441293	Identifier	OT_DWORD		441254	1					
ANR	441294	CompoundStatement		6:42:139:139	441254	1					
ANR	441295	ExpressionStatement	data [ l ++ ] = 0xda	3444:4:87078:87094	441254	0	True				
ANR	441296	AssignmentExpression	data [ l ++ ] = 0xda		441254	0		=			
ANR	441297	ArrayIndexing	data [ l ++ ]		441254	0					
ANR	441298	Identifier	data		441254	0					
ANR	441299	PostIncDecOperationExpression	l ++		441254	1					
ANR	441300	Identifier	l		441254	0					
ANR	441301	IncDec	++		441254	1					
ANR	441302	PrimaryExpression	0xda		441254	1					
ANR	441303	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3445:4:87100:87142	441254	1	True				
ANR	441304	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		441254	0		=			
ANR	441305	ArrayIndexing	data [ l ++ ]		441254	0					
ANR	441306	Identifier	data		441254	0					
ANR	441307	PostIncDecOperationExpression	l ++		441254	1					
ANR	441308	Identifier	l		441254	0					
ANR	441309	IncDec	++		441254	1					
ANR	441310	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		441254	1		|			
ANR	441311	PrimaryExpression	0x08		441254	0					
ANR	441312	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		441254	1					
ANR	441313	MemberAccess	op -> operands [ 0 ] . regs		441254	0					
ANR	441314	ArrayIndexing	op -> operands [ 0 ]		441254	0					
ANR	441315	PtrMemberAccess	op -> operands		441254	0					
ANR	441316	Identifier	op		441254	0					
ANR	441317	Identifier	operands		441254	1					
ANR	441318	PrimaryExpression	0		441254	1					
ANR	441319	Identifier	regs		441254	1					
ANR	441320	PrimaryExpression	0		441254	1					
ANR	441321	ElseStatement	else		441254	0					
ANR	441322	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		441254	0					
ANR	441323	Condition	op -> operands [ 0 ] . type & OT_WORD	3446:15:87159:87188	441254	0	True				
ANR	441324	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		441254	0		&			
ANR	441325	MemberAccess	op -> operands [ 0 ] . type		441254	0					
ANR	441326	ArrayIndexing	op -> operands [ 0 ]		441254	0					
ANR	441327	PtrMemberAccess	op -> operands		441254	0					
ANR	441328	Identifier	op		441254	0					
ANR	441329	Identifier	operands		441254	1					
ANR	441330	PrimaryExpression	0		441254	1					
ANR	441331	Identifier	type		441254	1					
ANR	441332	Identifier	OT_WORD		441254	1					
ANR	441333	CompoundStatement		9:48:259:259	441254	1					
ANR	441334	ExpressionStatement	data [ l ++ ] = 0xde	3447:4:87198:87214	441254	0	True				
ANR	441335	AssignmentExpression	data [ l ++ ] = 0xde		441254	0		=			
ANR	441336	ArrayIndexing	data [ l ++ ]		441254	0					
ANR	441337	Identifier	data		441254	0					
ANR	441338	PostIncDecOperationExpression	l ++		441254	1					
ANR	441339	Identifier	l		441254	0					
ANR	441340	IncDec	++		441254	1					
ANR	441341	PrimaryExpression	0xde		441254	1					
ANR	441342	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3448:4:87220:87262	441254	1	True				
ANR	441343	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		441254	0		=			
ANR	441344	ArrayIndexing	data [ l ++ ]		441254	0					
ANR	441345	Identifier	data		441254	0					
ANR	441346	PostIncDecOperationExpression	l ++		441254	1					
ANR	441347	Identifier	l		441254	0					
ANR	441348	IncDec	++		441254	1					
ANR	441349	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		441254	1		|			
ANR	441350	PrimaryExpression	0x08		441254	0					
ANR	441351	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		441254	1					
ANR	441352	MemberAccess	op -> operands [ 0 ] . regs		441254	0					
ANR	441353	ArrayIndexing	op -> operands [ 0 ]		441254	0					
ANR	441354	PtrMemberAccess	op -> operands		441254	0					
ANR	441355	Identifier	op		441254	0					
ANR	441356	Identifier	operands		441254	1					
ANR	441357	PrimaryExpression	0		441254	1					
ANR	441358	Identifier	regs		441254	1					
ANR	441359	PrimaryExpression	0		441254	1					
ANR	441360	ElseStatement	else		441254	0					
ANR	441361	CompoundStatement		12:10:341:341	441254	0					
ANR	441362	ReturnStatement	return - 1 ;	3450:4:87280:87289	441254	0	True				
ANR	441363	UnaryOperationExpression	- 1		441254	0					
ANR	441364	UnaryOperator	-		441254	0					
ANR	441365	PrimaryExpression	1		441254	1					
ANR	441366	ElseStatement	else		441254	0					
ANR	441367	CompoundStatement		15:9:372:372	441254	0					
ANR	441368	ReturnStatement	return - 1 ;	3453:3:87310:87319	441254	0	True				
ANR	441369	UnaryOperationExpression	- 1		441254	0					
ANR	441370	UnaryOperator	-		441254	0					
ANR	441371	PrimaryExpression	1		441254	1					
ANR	441372	BreakStatement	break ;	3455:2:87327:87332	441254	2	True				
ANR	441373	Label	default :	3456:1:87335:87342	441254	3	True				
ANR	441374	Identifier	default		441254	0					
ANR	441375	ReturnStatement	return - 1 ;	3457:2:87346:87355	441254	4	True				
ANR	441376	UnaryOperationExpression	- 1		441254	0					
ANR	441377	UnaryOperator	-		441254	0					
ANR	441378	PrimaryExpression	1		441254	1					
ANR	441379	ReturnStatement	return l ;	3459:1:87361:87369	441254	2	True				
ANR	441380	Identifier	l		441254	0					
ANR	441381	ReturnType	static int		441254	1					
ANR	441382	Identifier	opfimul		441254	2					
ANR	441383	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		441254	3					
ANR	441384	Parameter	RAsm * a	3438:19:86894:86900	441254	0	True				
ANR	441385	ParameterType	RAsm *		441254	0					
ANR	441386	Identifier	a		441254	1					
ANR	441387	Parameter	ut8 * data	3438:28:86903:86911	441254	1	True				
ANR	441388	ParameterType	ut8 *		441254	0					
ANR	441389	Identifier	data		441254	1					
ANR	441390	Parameter	const Opcode * op	3438:39:86914:86929	441254	2	True				
ANR	441391	ParameterType	const Opcode *		441254	0					
ANR	441392	Identifier	op		441254	1					
ANR	441393	CFGEntryNode	ENTRY		441254		True				
ANR	441394	CFGExitNode	EXIT		441254		True				
ANR	441395	Symbol	a		441254						
ANR	441396	Symbol	op		441254						
ANR	441397	Symbol	OT_WORD		441254						
ANR	441398	Symbol	data		441254						
ANR	441399	Symbol	* op		441254						
ANR	441400	Symbol	* * op -> operands		441254						
ANR	441401	Symbol	l		441254						
ANR	441402	Symbol	* * op		441254						
ANR	441403	Symbol	* op -> operands		441254						
ANR	441404	Symbol	op -> operands_count		441254						
ANR	441405	Symbol	* op -> operands [ 0 ] . regs		441254						
ANR	441406	Symbol	op -> operands [ 0 ] . type		441254						
ANR	441407	Symbol	* * * op		441254						
ANR	441408	Symbol	op -> operands		441254						
ANR	441409	Symbol	OT_MEMORY		441254						
ANR	441410	Symbol	* data		441254						
ANR	441411	Symbol	op -> operands [ 0 ] . regs		441254						
ANR	441412	Symbol	OT_DWORD		441254						
ANR	441413	Function	opfsub	3462:0:87374:88334							
ANR	441414	FunctionDef	"opfsub (RAsm * a , ut8 * data , const Opcode * op)"		441413	0					
ANR	441415	CompoundStatement		3462:56:87430:88334	441413	0					
ANR	441416	IdentifierDeclStatement	int l = 0 ;	3463:1:87433:87442	441413	0	True				
ANR	441417	IdentifierDecl	l = 0		441413	0					
ANR	441418	IdentifierDeclType	int		441413	0					
ANR	441419	Identifier	l		441413	1					
ANR	441420	AssignmentExpression	l = 0		441413	2		=			
ANR	441421	Identifier	l		441413	0					
ANR	441422	PrimaryExpression	0		441413	1					
ANR	441423	SwitchStatement	switch ( op -> operands_count )		441413	1					
ANR	441424	Condition	op -> operands_count	3464:9:87453:87470	441413	0	True				
ANR	441425	PtrMemberAccess	op -> operands_count		441413	0					
ANR	441426	Identifier	op		441413	0					
ANR	441427	Identifier	operands_count		441413	1					
ANR	441428	CompoundStatement		3:29:42:42	441413	1					
ANR	441429	Label	case 1 :	3465:1:87476:87482	441413	0	True				
ANR	441430	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		441413	1					
ANR	441431	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3466:7:87491:87522	441413	0	True				
ANR	441432	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		441413	0		&			
ANR	441433	MemberAccess	op -> operands [ 0 ] . type		441413	0					
ANR	441434	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441435	PtrMemberAccess	op -> operands		441413	0					
ANR	441436	Identifier	op		441413	0					
ANR	441437	Identifier	operands		441413	1					
ANR	441438	PrimaryExpression	0		441413	1					
ANR	441439	Identifier	type		441413	1					
ANR	441440	Identifier	OT_MEMORY		441413	1					
ANR	441441	CompoundStatement		5:42:95:95	441413	1					
ANR	441442	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		441413	0					
ANR	441443	Condition	op -> operands [ 0 ] . type & OT_DWORD	3467:8:87536:87566	441413	0	True				
ANR	441444	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		441413	0		&			
ANR	441445	MemberAccess	op -> operands [ 0 ] . type		441413	0					
ANR	441446	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441447	PtrMemberAccess	op -> operands		441413	0					
ANR	441448	Identifier	op		441413	0					
ANR	441449	Identifier	operands		441413	1					
ANR	441450	PrimaryExpression	0		441413	1					
ANR	441451	Identifier	type		441413	1					
ANR	441452	Identifier	OT_DWORD		441413	1					
ANR	441453	CompoundStatement		6:42:139:139	441413	1					
ANR	441454	ExpressionStatement	data [ l ++ ] = 0xd8	3468:4:87576:87592	441413	0	True				
ANR	441455	AssignmentExpression	data [ l ++ ] = 0xd8		441413	0		=			
ANR	441456	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441457	Identifier	data		441413	0					
ANR	441458	PostIncDecOperationExpression	l ++		441413	1					
ANR	441459	Identifier	l		441413	0					
ANR	441460	IncDec	++		441413	1					
ANR	441461	PrimaryExpression	0xd8		441413	1					
ANR	441462	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3469:4:87598:87640	441413	1	True				
ANR	441463	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		441413	0		=			
ANR	441464	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441465	Identifier	data		441413	0					
ANR	441466	PostIncDecOperationExpression	l ++		441413	1					
ANR	441467	Identifier	l		441413	0					
ANR	441468	IncDec	++		441413	1					
ANR	441469	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		441413	1		|			
ANR	441470	PrimaryExpression	0x20		441413	0					
ANR	441471	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		441413	1					
ANR	441472	MemberAccess	op -> operands [ 0 ] . regs		441413	0					
ANR	441473	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441474	PtrMemberAccess	op -> operands		441413	0					
ANR	441475	Identifier	op		441413	0					
ANR	441476	Identifier	operands		441413	1					
ANR	441477	PrimaryExpression	0		441413	1					
ANR	441478	Identifier	regs		441413	1					
ANR	441479	PrimaryExpression	0		441413	1					
ANR	441480	ElseStatement	else		441413	0					
ANR	441481	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		441413	0					
ANR	441482	Condition	op -> operands [ 0 ] . type & OT_QWORD	3470:15:87657:87687	441413	0	True				
ANR	441483	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		441413	0		&			
ANR	441484	MemberAccess	op -> operands [ 0 ] . type		441413	0					
ANR	441485	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441486	PtrMemberAccess	op -> operands		441413	0					
ANR	441487	Identifier	op		441413	0					
ANR	441488	Identifier	operands		441413	1					
ANR	441489	PrimaryExpression	0		441413	1					
ANR	441490	Identifier	type		441413	1					
ANR	441491	Identifier	OT_QWORD		441413	1					
ANR	441492	CompoundStatement		9:49:260:260	441413	1					
ANR	441493	ExpressionStatement	data [ l ++ ] = 0xdc	3471:4:87697:87713	441413	0	True				
ANR	441494	AssignmentExpression	data [ l ++ ] = 0xdc		441413	0		=			
ANR	441495	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441496	Identifier	data		441413	0					
ANR	441497	PostIncDecOperationExpression	l ++		441413	1					
ANR	441498	Identifier	l		441413	0					
ANR	441499	IncDec	++		441413	1					
ANR	441500	PrimaryExpression	0xdc		441413	1					
ANR	441501	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3472:4:87719:87761	441413	1	True				
ANR	441502	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		441413	0		=			
ANR	441503	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441504	Identifier	data		441413	0					
ANR	441505	PostIncDecOperationExpression	l ++		441413	1					
ANR	441506	Identifier	l		441413	0					
ANR	441507	IncDec	++		441413	1					
ANR	441508	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		441413	1		|			
ANR	441509	PrimaryExpression	0x20		441413	0					
ANR	441510	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		441413	1					
ANR	441511	MemberAccess	op -> operands [ 0 ] . regs		441413	0					
ANR	441512	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441513	PtrMemberAccess	op -> operands		441413	0					
ANR	441514	Identifier	op		441413	0					
ANR	441515	Identifier	operands		441413	1					
ANR	441516	PrimaryExpression	0		441413	1					
ANR	441517	Identifier	regs		441413	1					
ANR	441518	PrimaryExpression	0		441413	1					
ANR	441519	ElseStatement	else		441413	0					
ANR	441520	CompoundStatement		12:10:342:342	441413	0					
ANR	441521	ReturnStatement	return - 1 ;	3474:4:87779:87788	441413	0	True				
ANR	441522	UnaryOperationExpression	- 1		441413	0					
ANR	441523	UnaryOperator	-		441413	0					
ANR	441524	PrimaryExpression	1		441413	1					
ANR	441525	ElseStatement	else		441413	0					
ANR	441526	CompoundStatement		15:9:373:373	441413	0					
ANR	441527	ReturnStatement	return - 1 ;	3477:3:87809:87818	441413	0	True				
ANR	441528	UnaryOperationExpression	- 1		441413	0					
ANR	441529	UnaryOperator	-		441413	0					
ANR	441530	PrimaryExpression	1		441413	1					
ANR	441531	BreakStatement	break ;	3479:2:87826:87831	441413	2	True				
ANR	441532	Label	case 2 :	3480:1:87834:87840	441413	3	True				
ANR	441533	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		441413	4					
ANR	441534	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3481:7:87849:87977	441413	0	True				
ANR	441535	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		441413	0		&&			
ANR	441536	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		441413	0		&			
ANR	441537	MemberAccess	op -> operands [ 0 ] . type		441413	0					
ANR	441538	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441539	PtrMemberAccess	op -> operands		441413	0					
ANR	441540	Identifier	op		441413	0					
ANR	441541	Identifier	operands		441413	1					
ANR	441542	PrimaryExpression	0		441413	1					
ANR	441543	Identifier	type		441413	1					
ANR	441544	BitAndExpression	OT_FPUREG & ~OT_REGALL		441413	1		&			
ANR	441545	Identifier	OT_FPUREG		441413	0					
ANR	441546	Identifier	~OT_REGALL		441413	1					
ANR	441547	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		441413	1		&&			
ANR	441548	EqualityExpression	op -> operands [ 0 ] . reg == 0		441413	0		==			
ANR	441549	MemberAccess	op -> operands [ 0 ] . reg		441413	0					
ANR	441550	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441551	PtrMemberAccess	op -> operands		441413	0					
ANR	441552	Identifier	op		441413	0					
ANR	441553	Identifier	operands		441413	1					
ANR	441554	PrimaryExpression	0		441413	1					
ANR	441555	Identifier	reg		441413	1					
ANR	441556	PrimaryExpression	0		441413	1					
ANR	441557	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		441413	1		&			
ANR	441558	MemberAccess	op -> operands [ 1 ] . type		441413	0					
ANR	441559	ArrayIndexing	op -> operands [ 1 ]		441413	0					
ANR	441560	PtrMemberAccess	op -> operands		441413	0					
ANR	441561	Identifier	op		441413	0					
ANR	441562	Identifier	operands		441413	1					
ANR	441563	PrimaryExpression	1		441413	1					
ANR	441564	Identifier	type		441413	1					
ANR	441565	BitAndExpression	OT_FPUREG & ~OT_REGALL		441413	1		&			
ANR	441566	Identifier	OT_FPUREG		441413	0					
ANR	441567	Identifier	~OT_REGALL		441413	1					
ANR	441568	CompoundStatement		21:55:550:550	441413	1					
ANR	441569	ExpressionStatement	data [ l ++ ] = 0xd8	3483:3:87986:88002	441413	0	True				
ANR	441570	AssignmentExpression	data [ l ++ ] = 0xd8		441413	0		=			
ANR	441571	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441572	Identifier	data		441413	0					
ANR	441573	PostIncDecOperationExpression	l ++		441413	1					
ANR	441574	Identifier	l		441413	0					
ANR	441575	IncDec	++		441413	1					
ANR	441576	PrimaryExpression	0xd8		441413	1					
ANR	441577	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 1 ] . reg	3484:3:88007:88045	441413	1	True				
ANR	441578	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 1 ] . reg		441413	0		=			
ANR	441579	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441580	Identifier	data		441413	0					
ANR	441581	PostIncDecOperationExpression	l ++		441413	1					
ANR	441582	Identifier	l		441413	0					
ANR	441583	IncDec	++		441413	1					
ANR	441584	InclusiveOrExpression	0xe0 | op -> operands [ 1 ] . reg		441413	1		|			
ANR	441585	PrimaryExpression	0xe0		441413	0					
ANR	441586	MemberAccess	op -> operands [ 1 ] . reg		441413	1					
ANR	441587	ArrayIndexing	op -> operands [ 1 ]		441413	0					
ANR	441588	PtrMemberAccess	op -> operands		441413	0					
ANR	441589	Identifier	op		441413	0					
ANR	441590	Identifier	operands		441413	1					
ANR	441591	PrimaryExpression	1		441413	1					
ANR	441592	Identifier	reg		441413	1					
ANR	441593	ElseStatement	else		441413	0					
ANR	441594	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		441413	0					
ANR	441595	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3485:14:88061:88189	441413	0	True				
ANR	441596	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		441413	0		&&			
ANR	441597	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		441413	0		&			
ANR	441598	MemberAccess	op -> operands [ 0 ] . type		441413	0					
ANR	441599	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441600	PtrMemberAccess	op -> operands		441413	0					
ANR	441601	Identifier	op		441413	0					
ANR	441602	Identifier	operands		441413	1					
ANR	441603	PrimaryExpression	0		441413	1					
ANR	441604	Identifier	type		441413	1					
ANR	441605	BitAndExpression	OT_FPUREG & ~OT_REGALL		441413	1		&			
ANR	441606	Identifier	OT_FPUREG		441413	0					
ANR	441607	Identifier	~OT_REGALL		441413	1					
ANR	441608	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		441413	1		&&			
ANR	441609	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		441413	0		&			
ANR	441610	MemberAccess	op -> operands [ 1 ] . type		441413	0					
ANR	441611	ArrayIndexing	op -> operands [ 1 ]		441413	0					
ANR	441612	PtrMemberAccess	op -> operands		441413	0					
ANR	441613	Identifier	op		441413	0					
ANR	441614	Identifier	operands		441413	1					
ANR	441615	PrimaryExpression	1		441413	1					
ANR	441616	Identifier	type		441413	1					
ANR	441617	BitAndExpression	OT_FPUREG & ~OT_REGALL		441413	1		&			
ANR	441618	Identifier	OT_FPUREG		441413	0					
ANR	441619	Identifier	~OT_REGALL		441413	1					
ANR	441620	EqualityExpression	op -> operands [ 1 ] . reg == 0		441413	1		==			
ANR	441621	MemberAccess	op -> operands [ 1 ] . reg		441413	0					
ANR	441622	ArrayIndexing	op -> operands [ 1 ]		441413	0					
ANR	441623	PtrMemberAccess	op -> operands		441413	0					
ANR	441624	Identifier	op		441413	0					
ANR	441625	Identifier	operands		441413	1					
ANR	441626	PrimaryExpression	1		441413	1					
ANR	441627	Identifier	reg		441413	1					
ANR	441628	PrimaryExpression	0		441413	1					
ANR	441629	CompoundStatement		25:83:762:762	441413	1					
ANR	441630	ExpressionStatement	data [ l ++ ] = 0xdc	3487:3:88198:88214	441413	0	True				
ANR	441631	AssignmentExpression	data [ l ++ ] = 0xdc		441413	0		=			
ANR	441632	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441633	Identifier	data		441413	0					
ANR	441634	PostIncDecOperationExpression	l ++		441413	1					
ANR	441635	Identifier	l		441413	0					
ANR	441636	IncDec	++		441413	1					
ANR	441637	PrimaryExpression	0xdc		441413	1					
ANR	441638	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	3488:3:88219:88257	441413	1	True				
ANR	441639	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		441413	0		=			
ANR	441640	ArrayIndexing	data [ l ++ ]		441413	0					
ANR	441641	Identifier	data		441413	0					
ANR	441642	PostIncDecOperationExpression	l ++		441413	1					
ANR	441643	Identifier	l		441413	0					
ANR	441644	IncDec	++		441413	1					
ANR	441645	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		441413	1		|			
ANR	441646	PrimaryExpression	0xe8		441413	0					
ANR	441647	MemberAccess	op -> operands [ 0 ] . reg		441413	1					
ANR	441648	ArrayIndexing	op -> operands [ 0 ]		441413	0					
ANR	441649	PtrMemberAccess	op -> operands		441413	0					
ANR	441650	Identifier	op		441413	0					
ANR	441651	Identifier	operands		441413	1					
ANR	441652	PrimaryExpression	0		441413	1					
ANR	441653	Identifier	reg		441413	1					
ANR	441654	ElseStatement	else		441413	0					
ANR	441655	CompoundStatement		28:9:837:837	441413	0					
ANR	441656	ReturnStatement	return - 1 ;	3490:3:88273:88282	441413	0	True				
ANR	441657	UnaryOperationExpression	- 1		441413	0					
ANR	441658	UnaryOperator	-		441413	0					
ANR	441659	PrimaryExpression	1		441413	1					
ANR	441660	BreakStatement	break ;	3492:2:88290:88295	441413	5	True				
ANR	441661	Label	default :	3493:1:88298:88305	441413	6	True				
ANR	441662	Identifier	default		441413	0					
ANR	441663	ReturnStatement	return - 1 ;	3494:2:88309:88318	441413	7	True				
ANR	441664	UnaryOperationExpression	- 1		441413	0					
ANR	441665	UnaryOperator	-		441413	0					
ANR	441666	PrimaryExpression	1		441413	1					
ANR	441667	ReturnStatement	return l ;	3496:1:88324:88332	441413	2	True				
ANR	441668	Identifier	l		441413	0					
ANR	441669	ReturnType	static int		441413	1					
ANR	441670	Identifier	opfsub		441413	2					
ANR	441671	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		441413	3					
ANR	441672	Parameter	RAsm * a	3462:18:87392:87398	441413	0	True				
ANR	441673	ParameterType	RAsm *		441413	0					
ANR	441674	Identifier	a		441413	1					
ANR	441675	Parameter	ut8 * data	3462:27:87401:87409	441413	1	True				
ANR	441676	ParameterType	ut8 *		441413	0					
ANR	441677	Identifier	data		441413	1					
ANR	441678	Parameter	const Opcode * op	3462:38:87412:87427	441413	2	True				
ANR	441679	ParameterType	const Opcode *		441413	0					
ANR	441680	Identifier	op		441413	1					
ANR	441681	CFGEntryNode	ENTRY		441413		True				
ANR	441682	CFGExitNode	EXIT		441413		True				
ANR	441683	Symbol	a		441413						
ANR	441684	Symbol	op		441413						
ANR	441685	Symbol	OT_QWORD		441413						
ANR	441686	Symbol	data		441413						
ANR	441687	Symbol	* op		441413						
ANR	441688	Symbol	op -> operands [ 1 ] . reg		441413						
ANR	441689	Symbol	* * op -> operands		441413						
ANR	441690	Symbol	l		441413						
ANR	441691	Symbol	* * op		441413						
ANR	441692	Symbol	OT_FPUREG		441413						
ANR	441693	Symbol	* op -> operands		441413						
ANR	441694	Symbol	op -> operands [ 1 ] . type		441413						
ANR	441695	Symbol	op -> operands_count		441413						
ANR	441696	Symbol	* op -> operands [ 0 ] . regs		441413						
ANR	441697	Symbol	op -> operands [ 0 ] . type		441413						
ANR	441698	Symbol	~OT_REGALL		441413						
ANR	441699	Symbol	* * * op		441413						
ANR	441700	Symbol	op -> operands [ 0 ] . reg		441413						
ANR	441701	Symbol	op -> operands		441413						
ANR	441702	Symbol	OT_MEMORY		441413						
ANR	441703	Symbol	* data		441413						
ANR	441704	Symbol	op -> operands [ 0 ] . regs		441413						
ANR	441705	Symbol	OT_DWORD		441413						
ANR	441706	Function	opfsubp	3499:0:88337:88786							
ANR	441707	FunctionDef	"opfsubp (RAsm * a , ut8 * data , const Opcode * op)"		441706	0					
ANR	441708	CompoundStatement		3499:57:88394:88786	441706	0					
ANR	441709	IdentifierDeclStatement	int l = 0 ;	3500:1:88397:88406	441706	0	True				
ANR	441710	IdentifierDecl	l = 0		441706	0					
ANR	441711	IdentifierDeclType	int		441706	0					
ANR	441712	Identifier	l		441706	1					
ANR	441713	AssignmentExpression	l = 0		441706	2		=			
ANR	441714	Identifier	l		441706	0					
ANR	441715	PrimaryExpression	0		441706	1					
ANR	441716	SwitchStatement	switch ( op -> operands_count )		441706	1					
ANR	441717	Condition	op -> operands_count	3501:9:88417:88434	441706	0	True				
ANR	441718	PtrMemberAccess	op -> operands_count		441706	0					
ANR	441719	Identifier	op		441706	0					
ANR	441720	Identifier	operands_count		441706	1					
ANR	441721	CompoundStatement		3:29:42:42	441706	1					
ANR	441722	Label	case 0 :	3502:1:88440:88446	441706	0	True				
ANR	441723	ExpressionStatement	data [ l ++ ] = 0xde	3503:2:88450:88466	441706	1	True				
ANR	441724	AssignmentExpression	data [ l ++ ] = 0xde		441706	0		=			
ANR	441725	ArrayIndexing	data [ l ++ ]		441706	0					
ANR	441726	Identifier	data		441706	0					
ANR	441727	PostIncDecOperationExpression	l ++		441706	1					
ANR	441728	Identifier	l		441706	0					
ANR	441729	IncDec	++		441706	1					
ANR	441730	PrimaryExpression	0xde		441706	1					
ANR	441731	ExpressionStatement	data [ l ++ ] = 0xe9	3504:2:88470:88486	441706	2	True				
ANR	441732	AssignmentExpression	data [ l ++ ] = 0xe9		441706	0		=			
ANR	441733	ArrayIndexing	data [ l ++ ]		441706	0					
ANR	441734	Identifier	data		441706	0					
ANR	441735	PostIncDecOperationExpression	l ++		441706	1					
ANR	441736	Identifier	l		441706	0					
ANR	441737	IncDec	++		441706	1					
ANR	441738	PrimaryExpression	0xe9		441706	1					
ANR	441739	BreakStatement	break ;	3505:2:88490:88495	441706	3	True				
ANR	441740	Label	case 2 :	3506:1:88498:88504	441706	4	True				
ANR	441741	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		441706	5					
ANR	441742	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3507:7:88513:88641	441706	0	True				
ANR	441743	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		441706	0		&&			
ANR	441744	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		441706	0		&			
ANR	441745	MemberAccess	op -> operands [ 0 ] . type		441706	0					
ANR	441746	ArrayIndexing	op -> operands [ 0 ]		441706	0					
ANR	441747	PtrMemberAccess	op -> operands		441706	0					
ANR	441748	Identifier	op		441706	0					
ANR	441749	Identifier	operands		441706	1					
ANR	441750	PrimaryExpression	0		441706	1					
ANR	441751	Identifier	type		441706	1					
ANR	441752	BitAndExpression	OT_FPUREG & ~OT_REGALL		441706	1		&			
ANR	441753	Identifier	OT_FPUREG		441706	0					
ANR	441754	Identifier	~OT_REGALL		441706	1					
ANR	441755	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		441706	1		&&			
ANR	441756	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		441706	0		&			
ANR	441757	MemberAccess	op -> operands [ 1 ] . type		441706	0					
ANR	441758	ArrayIndexing	op -> operands [ 1 ]		441706	0					
ANR	441759	PtrMemberAccess	op -> operands		441706	0					
ANR	441760	Identifier	op		441706	0					
ANR	441761	Identifier	operands		441706	1					
ANR	441762	PrimaryExpression	1		441706	1					
ANR	441763	Identifier	type		441706	1					
ANR	441764	BitAndExpression	OT_FPUREG & ~OT_REGALL		441706	1		&			
ANR	441765	Identifier	OT_FPUREG		441706	0					
ANR	441766	Identifier	~OT_REGALL		441706	1					
ANR	441767	EqualityExpression	op -> operands [ 1 ] . reg == 0		441706	1		==			
ANR	441768	MemberAccess	op -> operands [ 1 ] . reg		441706	0					
ANR	441769	ArrayIndexing	op -> operands [ 1 ]		441706	0					
ANR	441770	PtrMemberAccess	op -> operands		441706	0					
ANR	441771	Identifier	op		441706	0					
ANR	441772	Identifier	operands		441706	1					
ANR	441773	PrimaryExpression	1		441706	1					
ANR	441774	Identifier	reg		441706	1					
ANR	441775	PrimaryExpression	0		441706	1					
ANR	441776	CompoundStatement		10:83:250:250	441706	1					
ANR	441777	ExpressionStatement	data [ l ++ ] = 0xde	3509:3:88650:88666	441706	0	True				
ANR	441778	AssignmentExpression	data [ l ++ ] = 0xde		441706	0		=			
ANR	441779	ArrayIndexing	data [ l ++ ]		441706	0					
ANR	441780	Identifier	data		441706	0					
ANR	441781	PostIncDecOperationExpression	l ++		441706	1					
ANR	441782	Identifier	l		441706	0					
ANR	441783	IncDec	++		441706	1					
ANR	441784	PrimaryExpression	0xde		441706	1					
ANR	441785	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	3510:3:88671:88709	441706	1	True				
ANR	441786	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		441706	0		=			
ANR	441787	ArrayIndexing	data [ l ++ ]		441706	0					
ANR	441788	Identifier	data		441706	0					
ANR	441789	PostIncDecOperationExpression	l ++		441706	1					
ANR	441790	Identifier	l		441706	0					
ANR	441791	IncDec	++		441706	1					
ANR	441792	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		441706	1		|			
ANR	441793	PrimaryExpression	0xe8		441706	0					
ANR	441794	MemberAccess	op -> operands [ 0 ] . reg		441706	1					
ANR	441795	ArrayIndexing	op -> operands [ 0 ]		441706	0					
ANR	441796	PtrMemberAccess	op -> operands		441706	0					
ANR	441797	Identifier	op		441706	0					
ANR	441798	Identifier	operands		441706	1					
ANR	441799	PrimaryExpression	0		441706	1					
ANR	441800	Identifier	reg		441706	1					
ANR	441801	ElseStatement	else		441706	0					
ANR	441802	CompoundStatement		13:9:325:325	441706	0					
ANR	441803	ReturnStatement	return - 1 ;	3512:3:88725:88734	441706	0	True				
ANR	441804	UnaryOperationExpression	- 1		441706	0					
ANR	441805	UnaryOperator	-		441706	0					
ANR	441806	PrimaryExpression	1		441706	1					
ANR	441807	BreakStatement	break ;	3514:2:88742:88747	441706	6	True				
ANR	441808	Label	default :	3515:1:88750:88757	441706	7	True				
ANR	441809	Identifier	default		441706	0					
ANR	441810	ReturnStatement	return - 1 ;	3516:2:88761:88770	441706	8	True				
ANR	441811	UnaryOperationExpression	- 1		441706	0					
ANR	441812	UnaryOperator	-		441706	0					
ANR	441813	PrimaryExpression	1		441706	1					
ANR	441814	ReturnStatement	return l ;	3518:1:88776:88784	441706	2	True				
ANR	441815	Identifier	l		441706	0					
ANR	441816	ReturnType	static int		441706	1					
ANR	441817	Identifier	opfsubp		441706	2					
ANR	441818	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		441706	3					
ANR	441819	Parameter	RAsm * a	3499:19:88356:88362	441706	0	True				
ANR	441820	ParameterType	RAsm *		441706	0					
ANR	441821	Identifier	a		441706	1					
ANR	441822	Parameter	ut8 * data	3499:28:88365:88373	441706	1	True				
ANR	441823	ParameterType	ut8 *		441706	0					
ANR	441824	Identifier	data		441706	1					
ANR	441825	Parameter	const Opcode * op	3499:39:88376:88391	441706	2	True				
ANR	441826	ParameterType	const Opcode *		441706	0					
ANR	441827	Identifier	op		441706	1					
ANR	441828	CFGEntryNode	ENTRY		441706		True				
ANR	441829	CFGExitNode	EXIT		441706		True				
ANR	441830	Symbol	a		441706						
ANR	441831	Symbol	op		441706						
ANR	441832	Symbol	data		441706						
ANR	441833	Symbol	* op		441706						
ANR	441834	Symbol	op -> operands [ 1 ] . reg		441706						
ANR	441835	Symbol	l		441706						
ANR	441836	Symbol	* * op		441706						
ANR	441837	Symbol	OT_FPUREG		441706						
ANR	441838	Symbol	* op -> operands		441706						
ANR	441839	Symbol	op -> operands [ 1 ] . type		441706						
ANR	441840	Symbol	op -> operands_count		441706						
ANR	441841	Symbol	op -> operands [ 0 ] . type		441706						
ANR	441842	Symbol	~OT_REGALL		441706						
ANR	441843	Symbol	op -> operands [ 0 ] . reg		441706						
ANR	441844	Symbol	op -> operands		441706						
ANR	441845	Symbol	* data		441706						
ANR	441846	Function	opfisub	3521:0:88789:89285							
ANR	441847	FunctionDef	"opfisub (RAsm * a , ut8 * data , const Opcode * op)"		441846	0					
ANR	441848	CompoundStatement		3521:57:88846:89285	441846	0					
ANR	441849	IdentifierDeclStatement	int l = 0 ;	3522:1:88849:88858	441846	0	True				
ANR	441850	IdentifierDecl	l = 0		441846	0					
ANR	441851	IdentifierDeclType	int		441846	0					
ANR	441852	Identifier	l		441846	1					
ANR	441853	AssignmentExpression	l = 0		441846	2		=			
ANR	441854	Identifier	l		441846	0					
ANR	441855	PrimaryExpression	0		441846	1					
ANR	441856	SwitchStatement	switch ( op -> operands_count )		441846	1					
ANR	441857	Condition	op -> operands_count	3523:9:88869:88886	441846	0	True				
ANR	441858	PtrMemberAccess	op -> operands_count		441846	0					
ANR	441859	Identifier	op		441846	0					
ANR	441860	Identifier	operands_count		441846	1					
ANR	441861	CompoundStatement		3:29:42:42	441846	1					
ANR	441862	Label	case 1 :	3524:1:88892:88898	441846	0	True				
ANR	441863	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		441846	1					
ANR	441864	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3525:7:88907:88938	441846	0	True				
ANR	441865	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		441846	0		&			
ANR	441866	MemberAccess	op -> operands [ 0 ] . type		441846	0					
ANR	441867	ArrayIndexing	op -> operands [ 0 ]		441846	0					
ANR	441868	PtrMemberAccess	op -> operands		441846	0					
ANR	441869	Identifier	op		441846	0					
ANR	441870	Identifier	operands		441846	1					
ANR	441871	PrimaryExpression	0		441846	1					
ANR	441872	Identifier	type		441846	1					
ANR	441873	Identifier	OT_MEMORY		441846	1					
ANR	441874	CompoundStatement		5:42:95:95	441846	1					
ANR	441875	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		441846	0					
ANR	441876	Condition	op -> operands [ 0 ] . type & OT_DWORD	3526:8:88952:88982	441846	0	True				
ANR	441877	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		441846	0		&			
ANR	441878	MemberAccess	op -> operands [ 0 ] . type		441846	0					
ANR	441879	ArrayIndexing	op -> operands [ 0 ]		441846	0					
ANR	441880	PtrMemberAccess	op -> operands		441846	0					
ANR	441881	Identifier	op		441846	0					
ANR	441882	Identifier	operands		441846	1					
ANR	441883	PrimaryExpression	0		441846	1					
ANR	441884	Identifier	type		441846	1					
ANR	441885	Identifier	OT_DWORD		441846	1					
ANR	441886	CompoundStatement		6:42:139:139	441846	1					
ANR	441887	ExpressionStatement	data [ l ++ ] = 0xda	3527:4:88992:89008	441846	0	True				
ANR	441888	AssignmentExpression	data [ l ++ ] = 0xda		441846	0		=			
ANR	441889	ArrayIndexing	data [ l ++ ]		441846	0					
ANR	441890	Identifier	data		441846	0					
ANR	441891	PostIncDecOperationExpression	l ++		441846	1					
ANR	441892	Identifier	l		441846	0					
ANR	441893	IncDec	++		441846	1					
ANR	441894	PrimaryExpression	0xda		441846	1					
ANR	441895	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3528:4:89014:89056	441846	1	True				
ANR	441896	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		441846	0		=			
ANR	441897	ArrayIndexing	data [ l ++ ]		441846	0					
ANR	441898	Identifier	data		441846	0					
ANR	441899	PostIncDecOperationExpression	l ++		441846	1					
ANR	441900	Identifier	l		441846	0					
ANR	441901	IncDec	++		441846	1					
ANR	441902	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		441846	1		|			
ANR	441903	PrimaryExpression	0x20		441846	0					
ANR	441904	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		441846	1					
ANR	441905	MemberAccess	op -> operands [ 0 ] . regs		441846	0					
ANR	441906	ArrayIndexing	op -> operands [ 0 ]		441846	0					
ANR	441907	PtrMemberAccess	op -> operands		441846	0					
ANR	441908	Identifier	op		441846	0					
ANR	441909	Identifier	operands		441846	1					
ANR	441910	PrimaryExpression	0		441846	1					
ANR	441911	Identifier	regs		441846	1					
ANR	441912	PrimaryExpression	0		441846	1					
ANR	441913	ElseStatement	else		441846	0					
ANR	441914	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		441846	0					
ANR	441915	Condition	op -> operands [ 0 ] . type & OT_WORD	3529:15:89073:89102	441846	0	True				
ANR	441916	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		441846	0		&			
ANR	441917	MemberAccess	op -> operands [ 0 ] . type		441846	0					
ANR	441918	ArrayIndexing	op -> operands [ 0 ]		441846	0					
ANR	441919	PtrMemberAccess	op -> operands		441846	0					
ANR	441920	Identifier	op		441846	0					
ANR	441921	Identifier	operands		441846	1					
ANR	441922	PrimaryExpression	0		441846	1					
ANR	441923	Identifier	type		441846	1					
ANR	441924	Identifier	OT_WORD		441846	1					
ANR	441925	CompoundStatement		9:48:259:259	441846	1					
ANR	441926	ExpressionStatement	data [ l ++ ] = 0xde	3530:4:89112:89128	441846	0	True				
ANR	441927	AssignmentExpression	data [ l ++ ] = 0xde		441846	0		=			
ANR	441928	ArrayIndexing	data [ l ++ ]		441846	0					
ANR	441929	Identifier	data		441846	0					
ANR	441930	PostIncDecOperationExpression	l ++		441846	1					
ANR	441931	Identifier	l		441846	0					
ANR	441932	IncDec	++		441846	1					
ANR	441933	PrimaryExpression	0xde		441846	1					
ANR	441934	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3531:4:89134:89176	441846	1	True				
ANR	441935	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		441846	0		=			
ANR	441936	ArrayIndexing	data [ l ++ ]		441846	0					
ANR	441937	Identifier	data		441846	0					
ANR	441938	PostIncDecOperationExpression	l ++		441846	1					
ANR	441939	Identifier	l		441846	0					
ANR	441940	IncDec	++		441846	1					
ANR	441941	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		441846	1		|			
ANR	441942	PrimaryExpression	0x20		441846	0					
ANR	441943	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		441846	1					
ANR	441944	MemberAccess	op -> operands [ 0 ] . regs		441846	0					
ANR	441945	ArrayIndexing	op -> operands [ 0 ]		441846	0					
ANR	441946	PtrMemberAccess	op -> operands		441846	0					
ANR	441947	Identifier	op		441846	0					
ANR	441948	Identifier	operands		441846	1					
ANR	441949	PrimaryExpression	0		441846	1					
ANR	441950	Identifier	regs		441846	1					
ANR	441951	PrimaryExpression	0		441846	1					
ANR	441952	ElseStatement	else		441846	0					
ANR	441953	CompoundStatement		12:10:341:341	441846	0					
ANR	441954	ReturnStatement	return - 1 ;	3533:4:89194:89203	441846	0	True				
ANR	441955	UnaryOperationExpression	- 1		441846	0					
ANR	441956	UnaryOperator	-		441846	0					
ANR	441957	PrimaryExpression	1		441846	1					
ANR	441958	ElseStatement	else		441846	0					
ANR	441959	CompoundStatement		15:9:372:372	441846	0					
ANR	441960	ReturnStatement	return - 1 ;	3536:3:89224:89233	441846	0	True				
ANR	441961	UnaryOperationExpression	- 1		441846	0					
ANR	441962	UnaryOperator	-		441846	0					
ANR	441963	PrimaryExpression	1		441846	1					
ANR	441964	BreakStatement	break ;	3538:2:89241:89246	441846	2	True				
ANR	441965	Label	default :	3539:1:89249:89256	441846	3	True				
ANR	441966	Identifier	default		441846	0					
ANR	441967	ReturnStatement	return - 1 ;	3540:2:89260:89269	441846	4	True				
ANR	441968	UnaryOperationExpression	- 1		441846	0					
ANR	441969	UnaryOperator	-		441846	0					
ANR	441970	PrimaryExpression	1		441846	1					
ANR	441971	ReturnStatement	return l ;	3542:1:89275:89283	441846	2	True				
ANR	441972	Identifier	l		441846	0					
ANR	441973	ReturnType	static int		441846	1					
ANR	441974	Identifier	opfisub		441846	2					
ANR	441975	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		441846	3					
ANR	441976	Parameter	RAsm * a	3521:19:88808:88814	441846	0	True				
ANR	441977	ParameterType	RAsm *		441846	0					
ANR	441978	Identifier	a		441846	1					
ANR	441979	Parameter	ut8 * data	3521:28:88817:88825	441846	1	True				
ANR	441980	ParameterType	ut8 *		441846	0					
ANR	441981	Identifier	data		441846	1					
ANR	441982	Parameter	const Opcode * op	3521:39:88828:88843	441846	2	True				
ANR	441983	ParameterType	const Opcode *		441846	0					
ANR	441984	Identifier	op		441846	1					
ANR	441985	CFGEntryNode	ENTRY		441846		True				
ANR	441986	CFGExitNode	EXIT		441846		True				
ANR	441987	Symbol	a		441846						
ANR	441988	Symbol	op		441846						
ANR	441989	Symbol	OT_WORD		441846						
ANR	441990	Symbol	data		441846						
ANR	441991	Symbol	* op		441846						
ANR	441992	Symbol	* * op -> operands		441846						
ANR	441993	Symbol	l		441846						
ANR	441994	Symbol	* * op		441846						
ANR	441995	Symbol	* op -> operands		441846						
ANR	441996	Symbol	op -> operands_count		441846						
ANR	441997	Symbol	* op -> operands [ 0 ] . regs		441846						
ANR	441998	Symbol	op -> operands [ 0 ] . type		441846						
ANR	441999	Symbol	* * * op		441846						
ANR	442000	Symbol	op -> operands		441846						
ANR	442001	Symbol	OT_MEMORY		441846						
ANR	442002	Symbol	* data		441846						
ANR	442003	Symbol	op -> operands [ 0 ] . regs		441846						
ANR	442004	Symbol	OT_DWORD		441846						
ANR	442005	Function	opfsubr	3545:0:89288:90249							
ANR	442006	FunctionDef	"opfsubr (RAsm * a , ut8 * data , const Opcode * op)"		442005	0					
ANR	442007	CompoundStatement		3545:57:89345:90249	442005	0					
ANR	442008	IdentifierDeclStatement	int l = 0 ;	3546:1:89348:89357	442005	0	True				
ANR	442009	IdentifierDecl	l = 0		442005	0					
ANR	442010	IdentifierDeclType	int		442005	0					
ANR	442011	Identifier	l		442005	1					
ANR	442012	AssignmentExpression	l = 0		442005	2		=			
ANR	442013	Identifier	l		442005	0					
ANR	442014	PrimaryExpression	0		442005	1					
ANR	442015	SwitchStatement	switch ( op -> operands_count )		442005	1					
ANR	442016	Condition	op -> operands_count	3547:9:89368:89385	442005	0	True				
ANR	442017	PtrMemberAccess	op -> operands_count		442005	0					
ANR	442018	Identifier	op		442005	0					
ANR	442019	Identifier	operands_count		442005	1					
ANR	442020	CompoundStatement		3:29:42:42	442005	1					
ANR	442021	Label	case 1 :	3548:1:89391:89397	442005	0	True				
ANR	442022	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		442005	1					
ANR	442023	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3549:7:89406:89437	442005	0	True				
ANR	442024	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		442005	0		&			
ANR	442025	MemberAccess	op -> operands [ 0 ] . type		442005	0					
ANR	442026	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442027	PtrMemberAccess	op -> operands		442005	0					
ANR	442028	Identifier	op		442005	0					
ANR	442029	Identifier	operands		442005	1					
ANR	442030	PrimaryExpression	0		442005	1					
ANR	442031	Identifier	type		442005	1					
ANR	442032	Identifier	OT_MEMORY		442005	1					
ANR	442033	CompoundStatement		5:42:95:95	442005	1					
ANR	442034	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		442005	0					
ANR	442035	Condition	op -> operands [ 0 ] . type & OT_DWORD	3550:8:89451:89481	442005	0	True				
ANR	442036	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		442005	0		&			
ANR	442037	MemberAccess	op -> operands [ 0 ] . type		442005	0					
ANR	442038	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442039	PtrMemberAccess	op -> operands		442005	0					
ANR	442040	Identifier	op		442005	0					
ANR	442041	Identifier	operands		442005	1					
ANR	442042	PrimaryExpression	0		442005	1					
ANR	442043	Identifier	type		442005	1					
ANR	442044	Identifier	OT_DWORD		442005	1					
ANR	442045	CompoundStatement		6:42:139:139	442005	1					
ANR	442046	ExpressionStatement	data [ l ++ ] = 0xd8	3551:4:89491:89507	442005	0	True				
ANR	442047	AssignmentExpression	data [ l ++ ] = 0xd8		442005	0		=			
ANR	442048	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442049	Identifier	data		442005	0					
ANR	442050	PostIncDecOperationExpression	l ++		442005	1					
ANR	442051	Identifier	l		442005	0					
ANR	442052	IncDec	++		442005	1					
ANR	442053	PrimaryExpression	0xd8		442005	1					
ANR	442054	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3552:4:89513:89555	442005	1	True				
ANR	442055	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		442005	0		=			
ANR	442056	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442057	Identifier	data		442005	0					
ANR	442058	PostIncDecOperationExpression	l ++		442005	1					
ANR	442059	Identifier	l		442005	0					
ANR	442060	IncDec	++		442005	1					
ANR	442061	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		442005	1		|			
ANR	442062	PrimaryExpression	0x28		442005	0					
ANR	442063	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442005	1					
ANR	442064	MemberAccess	op -> operands [ 0 ] . regs		442005	0					
ANR	442065	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442066	PtrMemberAccess	op -> operands		442005	0					
ANR	442067	Identifier	op		442005	0					
ANR	442068	Identifier	operands		442005	1					
ANR	442069	PrimaryExpression	0		442005	1					
ANR	442070	Identifier	regs		442005	1					
ANR	442071	PrimaryExpression	0		442005	1					
ANR	442072	ElseStatement	else		442005	0					
ANR	442073	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		442005	0					
ANR	442074	Condition	op -> operands [ 0 ] . type & OT_QWORD	3553:15:89572:89602	442005	0	True				
ANR	442075	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		442005	0		&			
ANR	442076	MemberAccess	op -> operands [ 0 ] . type		442005	0					
ANR	442077	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442078	PtrMemberAccess	op -> operands		442005	0					
ANR	442079	Identifier	op		442005	0					
ANR	442080	Identifier	operands		442005	1					
ANR	442081	PrimaryExpression	0		442005	1					
ANR	442082	Identifier	type		442005	1					
ANR	442083	Identifier	OT_QWORD		442005	1					
ANR	442084	CompoundStatement		9:49:260:260	442005	1					
ANR	442085	ExpressionStatement	data [ l ++ ] = 0xdc	3554:4:89612:89628	442005	0	True				
ANR	442086	AssignmentExpression	data [ l ++ ] = 0xdc		442005	0		=			
ANR	442087	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442088	Identifier	data		442005	0					
ANR	442089	PostIncDecOperationExpression	l ++		442005	1					
ANR	442090	Identifier	l		442005	0					
ANR	442091	IncDec	++		442005	1					
ANR	442092	PrimaryExpression	0xdc		442005	1					
ANR	442093	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3555:4:89634:89676	442005	1	True				
ANR	442094	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		442005	0		=			
ANR	442095	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442096	Identifier	data		442005	0					
ANR	442097	PostIncDecOperationExpression	l ++		442005	1					
ANR	442098	Identifier	l		442005	0					
ANR	442099	IncDec	++		442005	1					
ANR	442100	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		442005	1		|			
ANR	442101	PrimaryExpression	0x28		442005	0					
ANR	442102	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442005	1					
ANR	442103	MemberAccess	op -> operands [ 0 ] . regs		442005	0					
ANR	442104	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442105	PtrMemberAccess	op -> operands		442005	0					
ANR	442106	Identifier	op		442005	0					
ANR	442107	Identifier	operands		442005	1					
ANR	442108	PrimaryExpression	0		442005	1					
ANR	442109	Identifier	regs		442005	1					
ANR	442110	PrimaryExpression	0		442005	1					
ANR	442111	ElseStatement	else		442005	0					
ANR	442112	CompoundStatement		12:10:342:342	442005	0					
ANR	442113	ReturnStatement	return - 1 ;	3557:4:89694:89703	442005	0	True				
ANR	442114	UnaryOperationExpression	- 1		442005	0					
ANR	442115	UnaryOperator	-		442005	0					
ANR	442116	PrimaryExpression	1		442005	1					
ANR	442117	ElseStatement	else		442005	0					
ANR	442118	CompoundStatement		15:9:373:373	442005	0					
ANR	442119	ReturnStatement	return - 1 ;	3560:3:89724:89733	442005	0	True				
ANR	442120	UnaryOperationExpression	- 1		442005	0					
ANR	442121	UnaryOperator	-		442005	0					
ANR	442122	PrimaryExpression	1		442005	1					
ANR	442123	BreakStatement	break ;	3562:2:89741:89746	442005	2	True				
ANR	442124	Label	case 2 :	3563:1:89749:89755	442005	3	True				
ANR	442125	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		442005	4					
ANR	442126	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3564:7:89764:89892	442005	0	True				
ANR	442127	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		442005	0		&&			
ANR	442128	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		442005	0		&			
ANR	442129	MemberAccess	op -> operands [ 0 ] . type		442005	0					
ANR	442130	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442131	PtrMemberAccess	op -> operands		442005	0					
ANR	442132	Identifier	op		442005	0					
ANR	442133	Identifier	operands		442005	1					
ANR	442134	PrimaryExpression	0		442005	1					
ANR	442135	Identifier	type		442005	1					
ANR	442136	BitAndExpression	OT_FPUREG & ~OT_REGALL		442005	1		&			
ANR	442137	Identifier	OT_FPUREG		442005	0					
ANR	442138	Identifier	~OT_REGALL		442005	1					
ANR	442139	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		442005	1		&&			
ANR	442140	EqualityExpression	op -> operands [ 0 ] . reg == 0		442005	0		==			
ANR	442141	MemberAccess	op -> operands [ 0 ] . reg		442005	0					
ANR	442142	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442143	PtrMemberAccess	op -> operands		442005	0					
ANR	442144	Identifier	op		442005	0					
ANR	442145	Identifier	operands		442005	1					
ANR	442146	PrimaryExpression	0		442005	1					
ANR	442147	Identifier	reg		442005	1					
ANR	442148	PrimaryExpression	0		442005	1					
ANR	442149	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		442005	1		&			
ANR	442150	MemberAccess	op -> operands [ 1 ] . type		442005	0					
ANR	442151	ArrayIndexing	op -> operands [ 1 ]		442005	0					
ANR	442152	PtrMemberAccess	op -> operands		442005	0					
ANR	442153	Identifier	op		442005	0					
ANR	442154	Identifier	operands		442005	1					
ANR	442155	PrimaryExpression	1		442005	1					
ANR	442156	Identifier	type		442005	1					
ANR	442157	BitAndExpression	OT_FPUREG & ~OT_REGALL		442005	1		&			
ANR	442158	Identifier	OT_FPUREG		442005	0					
ANR	442159	Identifier	~OT_REGALL		442005	1					
ANR	442160	CompoundStatement		21:55:550:550	442005	1					
ANR	442161	ExpressionStatement	data [ l ++ ] = 0xd8	3566:3:89901:89917	442005	0	True				
ANR	442162	AssignmentExpression	data [ l ++ ] = 0xd8		442005	0		=			
ANR	442163	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442164	Identifier	data		442005	0					
ANR	442165	PostIncDecOperationExpression	l ++		442005	1					
ANR	442166	Identifier	l		442005	0					
ANR	442167	IncDec	++		442005	1					
ANR	442168	PrimaryExpression	0xd8		442005	1					
ANR	442169	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 1 ] . reg	3567:3:89922:89960	442005	1	True				
ANR	442170	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 1 ] . reg		442005	0		=			
ANR	442171	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442172	Identifier	data		442005	0					
ANR	442173	PostIncDecOperationExpression	l ++		442005	1					
ANR	442174	Identifier	l		442005	0					
ANR	442175	IncDec	++		442005	1					
ANR	442176	InclusiveOrExpression	0xe8 | op -> operands [ 1 ] . reg		442005	1		|			
ANR	442177	PrimaryExpression	0xe8		442005	0					
ANR	442178	MemberAccess	op -> operands [ 1 ] . reg		442005	1					
ANR	442179	ArrayIndexing	op -> operands [ 1 ]		442005	0					
ANR	442180	PtrMemberAccess	op -> operands		442005	0					
ANR	442181	Identifier	op		442005	0					
ANR	442182	Identifier	operands		442005	1					
ANR	442183	PrimaryExpression	1		442005	1					
ANR	442184	Identifier	reg		442005	1					
ANR	442185	ElseStatement	else		442005	0					
ANR	442186	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		442005	0					
ANR	442187	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3568:14:89976:90104	442005	0	True				
ANR	442188	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		442005	0		&&			
ANR	442189	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		442005	0		&			
ANR	442190	MemberAccess	op -> operands [ 0 ] . type		442005	0					
ANR	442191	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442192	PtrMemberAccess	op -> operands		442005	0					
ANR	442193	Identifier	op		442005	0					
ANR	442194	Identifier	operands		442005	1					
ANR	442195	PrimaryExpression	0		442005	1					
ANR	442196	Identifier	type		442005	1					
ANR	442197	BitAndExpression	OT_FPUREG & ~OT_REGALL		442005	1		&			
ANR	442198	Identifier	OT_FPUREG		442005	0					
ANR	442199	Identifier	~OT_REGALL		442005	1					
ANR	442200	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		442005	1		&&			
ANR	442201	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		442005	0		&			
ANR	442202	MemberAccess	op -> operands [ 1 ] . type		442005	0					
ANR	442203	ArrayIndexing	op -> operands [ 1 ]		442005	0					
ANR	442204	PtrMemberAccess	op -> operands		442005	0					
ANR	442205	Identifier	op		442005	0					
ANR	442206	Identifier	operands		442005	1					
ANR	442207	PrimaryExpression	1		442005	1					
ANR	442208	Identifier	type		442005	1					
ANR	442209	BitAndExpression	OT_FPUREG & ~OT_REGALL		442005	1		&			
ANR	442210	Identifier	OT_FPUREG		442005	0					
ANR	442211	Identifier	~OT_REGALL		442005	1					
ANR	442212	EqualityExpression	op -> operands [ 1 ] . reg == 0		442005	1		==			
ANR	442213	MemberAccess	op -> operands [ 1 ] . reg		442005	0					
ANR	442214	ArrayIndexing	op -> operands [ 1 ]		442005	0					
ANR	442215	PtrMemberAccess	op -> operands		442005	0					
ANR	442216	Identifier	op		442005	0					
ANR	442217	Identifier	operands		442005	1					
ANR	442218	PrimaryExpression	1		442005	1					
ANR	442219	Identifier	reg		442005	1					
ANR	442220	PrimaryExpression	0		442005	1					
ANR	442221	CompoundStatement		25:83:762:762	442005	1					
ANR	442222	ExpressionStatement	data [ l ++ ] = 0xdc	3570:3:90113:90129	442005	0	True				
ANR	442223	AssignmentExpression	data [ l ++ ] = 0xdc		442005	0		=			
ANR	442224	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442225	Identifier	data		442005	0					
ANR	442226	PostIncDecOperationExpression	l ++		442005	1					
ANR	442227	Identifier	l		442005	0					
ANR	442228	IncDec	++		442005	1					
ANR	442229	PrimaryExpression	0xdc		442005	1					
ANR	442230	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3571:3:90134:90172	442005	1	True				
ANR	442231	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		442005	0		=			
ANR	442232	ArrayIndexing	data [ l ++ ]		442005	0					
ANR	442233	Identifier	data		442005	0					
ANR	442234	PostIncDecOperationExpression	l ++		442005	1					
ANR	442235	Identifier	l		442005	0					
ANR	442236	IncDec	++		442005	1					
ANR	442237	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		442005	1		|			
ANR	442238	PrimaryExpression	0xe0		442005	0					
ANR	442239	MemberAccess	op -> operands [ 0 ] . reg		442005	1					
ANR	442240	ArrayIndexing	op -> operands [ 0 ]		442005	0					
ANR	442241	PtrMemberAccess	op -> operands		442005	0					
ANR	442242	Identifier	op		442005	0					
ANR	442243	Identifier	operands		442005	1					
ANR	442244	PrimaryExpression	0		442005	1					
ANR	442245	Identifier	reg		442005	1					
ANR	442246	ElseStatement	else		442005	0					
ANR	442247	CompoundStatement		28:9:837:837	442005	0					
ANR	442248	ReturnStatement	return - 1 ;	3573:3:90188:90197	442005	0	True				
ANR	442249	UnaryOperationExpression	- 1		442005	0					
ANR	442250	UnaryOperator	-		442005	0					
ANR	442251	PrimaryExpression	1		442005	1					
ANR	442252	BreakStatement	break ;	3575:2:90205:90210	442005	5	True				
ANR	442253	Label	default :	3576:1:90213:90220	442005	6	True				
ANR	442254	Identifier	default		442005	0					
ANR	442255	ReturnStatement	return - 1 ;	3577:2:90224:90233	442005	7	True				
ANR	442256	UnaryOperationExpression	- 1		442005	0					
ANR	442257	UnaryOperator	-		442005	0					
ANR	442258	PrimaryExpression	1		442005	1					
ANR	442259	ReturnStatement	return l ;	3579:1:90239:90247	442005	2	True				
ANR	442260	Identifier	l		442005	0					
ANR	442261	ReturnType	static int		442005	1					
ANR	442262	Identifier	opfsubr		442005	2					
ANR	442263	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442005	3					
ANR	442264	Parameter	RAsm * a	3545:19:89307:89313	442005	0	True				
ANR	442265	ParameterType	RAsm *		442005	0					
ANR	442266	Identifier	a		442005	1					
ANR	442267	Parameter	ut8 * data	3545:28:89316:89324	442005	1	True				
ANR	442268	ParameterType	ut8 *		442005	0					
ANR	442269	Identifier	data		442005	1					
ANR	442270	Parameter	const Opcode * op	3545:39:89327:89342	442005	2	True				
ANR	442271	ParameterType	const Opcode *		442005	0					
ANR	442272	Identifier	op		442005	1					
ANR	442273	CFGEntryNode	ENTRY		442005		True				
ANR	442274	CFGExitNode	EXIT		442005		True				
ANR	442275	Symbol	a		442005						
ANR	442276	Symbol	op		442005						
ANR	442277	Symbol	OT_QWORD		442005						
ANR	442278	Symbol	data		442005						
ANR	442279	Symbol	* op		442005						
ANR	442280	Symbol	op -> operands [ 1 ] . reg		442005						
ANR	442281	Symbol	* * op -> operands		442005						
ANR	442282	Symbol	l		442005						
ANR	442283	Symbol	* * op		442005						
ANR	442284	Symbol	OT_FPUREG		442005						
ANR	442285	Symbol	* op -> operands		442005						
ANR	442286	Symbol	op -> operands [ 1 ] . type		442005						
ANR	442287	Symbol	op -> operands_count		442005						
ANR	442288	Symbol	* op -> operands [ 0 ] . regs		442005						
ANR	442289	Symbol	op -> operands [ 0 ] . type		442005						
ANR	442290	Symbol	~OT_REGALL		442005						
ANR	442291	Symbol	* * * op		442005						
ANR	442292	Symbol	op -> operands [ 0 ] . reg		442005						
ANR	442293	Symbol	op -> operands		442005						
ANR	442294	Symbol	OT_MEMORY		442005						
ANR	442295	Symbol	* data		442005						
ANR	442296	Symbol	op -> operands [ 0 ] . regs		442005						
ANR	442297	Symbol	OT_DWORD		442005						
ANR	442298	Function	opfsubrp	3582:0:90252:90702							
ANR	442299	FunctionDef	"opfsubrp (RAsm * a , ut8 * data , const Opcode * op)"		442298	0					
ANR	442300	CompoundStatement		3582:58:90310:90702	442298	0					
ANR	442301	IdentifierDeclStatement	int l = 0 ;	3583:1:90313:90322	442298	0	True				
ANR	442302	IdentifierDecl	l = 0		442298	0					
ANR	442303	IdentifierDeclType	int		442298	0					
ANR	442304	Identifier	l		442298	1					
ANR	442305	AssignmentExpression	l = 0		442298	2		=			
ANR	442306	Identifier	l		442298	0					
ANR	442307	PrimaryExpression	0		442298	1					
ANR	442308	SwitchStatement	switch ( op -> operands_count )		442298	1					
ANR	442309	Condition	op -> operands_count	3584:9:90333:90350	442298	0	True				
ANR	442310	PtrMemberAccess	op -> operands_count		442298	0					
ANR	442311	Identifier	op		442298	0					
ANR	442312	Identifier	operands_count		442298	1					
ANR	442313	CompoundStatement		3:29:42:42	442298	1					
ANR	442314	Label	case 0 :	3585:1:90356:90362	442298	0	True				
ANR	442315	ExpressionStatement	data [ l ++ ] = 0xde	3586:2:90366:90382	442298	1	True				
ANR	442316	AssignmentExpression	data [ l ++ ] = 0xde		442298	0		=			
ANR	442317	ArrayIndexing	data [ l ++ ]		442298	0					
ANR	442318	Identifier	data		442298	0					
ANR	442319	PostIncDecOperationExpression	l ++		442298	1					
ANR	442320	Identifier	l		442298	0					
ANR	442321	IncDec	++		442298	1					
ANR	442322	PrimaryExpression	0xde		442298	1					
ANR	442323	ExpressionStatement	data [ l ++ ] = 0xe1	3587:2:90386:90402	442298	2	True				
ANR	442324	AssignmentExpression	data [ l ++ ] = 0xe1		442298	0		=			
ANR	442325	ArrayIndexing	data [ l ++ ]		442298	0					
ANR	442326	Identifier	data		442298	0					
ANR	442327	PostIncDecOperationExpression	l ++		442298	1					
ANR	442328	Identifier	l		442298	0					
ANR	442329	IncDec	++		442298	1					
ANR	442330	PrimaryExpression	0xe1		442298	1					
ANR	442331	BreakStatement	break ;	3588:2:90406:90411	442298	3	True				
ANR	442332	Label	case 2 :	3589:1:90414:90420	442298	4	True				
ANR	442333	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		442298	5					
ANR	442334	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3590:7:90429:90557	442298	0	True				
ANR	442335	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		442298	0		&&			
ANR	442336	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		442298	0		&			
ANR	442337	MemberAccess	op -> operands [ 0 ] . type		442298	0					
ANR	442338	ArrayIndexing	op -> operands [ 0 ]		442298	0					
ANR	442339	PtrMemberAccess	op -> operands		442298	0					
ANR	442340	Identifier	op		442298	0					
ANR	442341	Identifier	operands		442298	1					
ANR	442342	PrimaryExpression	0		442298	1					
ANR	442343	Identifier	type		442298	1					
ANR	442344	BitAndExpression	OT_FPUREG & ~OT_REGALL		442298	1		&			
ANR	442345	Identifier	OT_FPUREG		442298	0					
ANR	442346	Identifier	~OT_REGALL		442298	1					
ANR	442347	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		442298	1		&&			
ANR	442348	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		442298	0		&			
ANR	442349	MemberAccess	op -> operands [ 1 ] . type		442298	0					
ANR	442350	ArrayIndexing	op -> operands [ 1 ]		442298	0					
ANR	442351	PtrMemberAccess	op -> operands		442298	0					
ANR	442352	Identifier	op		442298	0					
ANR	442353	Identifier	operands		442298	1					
ANR	442354	PrimaryExpression	1		442298	1					
ANR	442355	Identifier	type		442298	1					
ANR	442356	BitAndExpression	OT_FPUREG & ~OT_REGALL		442298	1		&			
ANR	442357	Identifier	OT_FPUREG		442298	0					
ANR	442358	Identifier	~OT_REGALL		442298	1					
ANR	442359	EqualityExpression	op -> operands [ 1 ] . reg == 0		442298	1		==			
ANR	442360	MemberAccess	op -> operands [ 1 ] . reg		442298	0					
ANR	442361	ArrayIndexing	op -> operands [ 1 ]		442298	0					
ANR	442362	PtrMemberAccess	op -> operands		442298	0					
ANR	442363	Identifier	op		442298	0					
ANR	442364	Identifier	operands		442298	1					
ANR	442365	PrimaryExpression	1		442298	1					
ANR	442366	Identifier	reg		442298	1					
ANR	442367	PrimaryExpression	0		442298	1					
ANR	442368	CompoundStatement		10:83:250:250	442298	1					
ANR	442369	ExpressionStatement	data [ l ++ ] = 0xde	3592:3:90566:90582	442298	0	True				
ANR	442370	AssignmentExpression	data [ l ++ ] = 0xde		442298	0		=			
ANR	442371	ArrayIndexing	data [ l ++ ]		442298	0					
ANR	442372	Identifier	data		442298	0					
ANR	442373	PostIncDecOperationExpression	l ++		442298	1					
ANR	442374	Identifier	l		442298	0					
ANR	442375	IncDec	++		442298	1					
ANR	442376	PrimaryExpression	0xde		442298	1					
ANR	442377	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3593:3:90587:90625	442298	1	True				
ANR	442378	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		442298	0		=			
ANR	442379	ArrayIndexing	data [ l ++ ]		442298	0					
ANR	442380	Identifier	data		442298	0					
ANR	442381	PostIncDecOperationExpression	l ++		442298	1					
ANR	442382	Identifier	l		442298	0					
ANR	442383	IncDec	++		442298	1					
ANR	442384	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		442298	1		|			
ANR	442385	PrimaryExpression	0xe0		442298	0					
ANR	442386	MemberAccess	op -> operands [ 0 ] . reg		442298	1					
ANR	442387	ArrayIndexing	op -> operands [ 0 ]		442298	0					
ANR	442388	PtrMemberAccess	op -> operands		442298	0					
ANR	442389	Identifier	op		442298	0					
ANR	442390	Identifier	operands		442298	1					
ANR	442391	PrimaryExpression	0		442298	1					
ANR	442392	Identifier	reg		442298	1					
ANR	442393	ElseStatement	else		442298	0					
ANR	442394	CompoundStatement		13:9:325:325	442298	0					
ANR	442395	ReturnStatement	return - 1 ;	3595:3:90641:90650	442298	0	True				
ANR	442396	UnaryOperationExpression	- 1		442298	0					
ANR	442397	UnaryOperator	-		442298	0					
ANR	442398	PrimaryExpression	1		442298	1					
ANR	442399	BreakStatement	break ;	3597:2:90658:90663	442298	6	True				
ANR	442400	Label	default :	3598:1:90666:90673	442298	7	True				
ANR	442401	Identifier	default		442298	0					
ANR	442402	ReturnStatement	return - 1 ;	3599:2:90677:90686	442298	8	True				
ANR	442403	UnaryOperationExpression	- 1		442298	0					
ANR	442404	UnaryOperator	-		442298	0					
ANR	442405	PrimaryExpression	1		442298	1					
ANR	442406	ReturnStatement	return l ;	3601:1:90692:90700	442298	2	True				
ANR	442407	Identifier	l		442298	0					
ANR	442408	ReturnType	static int		442298	1					
ANR	442409	Identifier	opfsubrp		442298	2					
ANR	442410	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442298	3					
ANR	442411	Parameter	RAsm * a	3582:20:90272:90278	442298	0	True				
ANR	442412	ParameterType	RAsm *		442298	0					
ANR	442413	Identifier	a		442298	1					
ANR	442414	Parameter	ut8 * data	3582:29:90281:90289	442298	1	True				
ANR	442415	ParameterType	ut8 *		442298	0					
ANR	442416	Identifier	data		442298	1					
ANR	442417	Parameter	const Opcode * op	3582:40:90292:90307	442298	2	True				
ANR	442418	ParameterType	const Opcode *		442298	0					
ANR	442419	Identifier	op		442298	1					
ANR	442420	CFGEntryNode	ENTRY		442298		True				
ANR	442421	CFGExitNode	EXIT		442298		True				
ANR	442422	Symbol	a		442298						
ANR	442423	Symbol	op		442298						
ANR	442424	Symbol	data		442298						
ANR	442425	Symbol	* op		442298						
ANR	442426	Symbol	op -> operands [ 1 ] . reg		442298						
ANR	442427	Symbol	l		442298						
ANR	442428	Symbol	* * op		442298						
ANR	442429	Symbol	OT_FPUREG		442298						
ANR	442430	Symbol	* op -> operands		442298						
ANR	442431	Symbol	op -> operands [ 1 ] . type		442298						
ANR	442432	Symbol	op -> operands_count		442298						
ANR	442433	Symbol	op -> operands [ 0 ] . type		442298						
ANR	442434	Symbol	~OT_REGALL		442298						
ANR	442435	Symbol	op -> operands [ 0 ] . reg		442298						
ANR	442436	Symbol	op -> operands		442298						
ANR	442437	Symbol	* data		442298						
ANR	442438	Function	opfisubr	3604:0:90705:91202							
ANR	442439	FunctionDef	"opfisubr (RAsm * a , ut8 * data , const Opcode * op)"		442438	0					
ANR	442440	CompoundStatement		3604:58:90763:91202	442438	0					
ANR	442441	IdentifierDeclStatement	int l = 0 ;	3605:1:90766:90775	442438	0	True				
ANR	442442	IdentifierDecl	l = 0		442438	0					
ANR	442443	IdentifierDeclType	int		442438	0					
ANR	442444	Identifier	l		442438	1					
ANR	442445	AssignmentExpression	l = 0		442438	2		=			
ANR	442446	Identifier	l		442438	0					
ANR	442447	PrimaryExpression	0		442438	1					
ANR	442448	SwitchStatement	switch ( op -> operands_count )		442438	1					
ANR	442449	Condition	op -> operands_count	3606:9:90786:90803	442438	0	True				
ANR	442450	PtrMemberAccess	op -> operands_count		442438	0					
ANR	442451	Identifier	op		442438	0					
ANR	442452	Identifier	operands_count		442438	1					
ANR	442453	CompoundStatement		3:29:42:42	442438	1					
ANR	442454	Label	case 1 :	3607:1:90809:90815	442438	0	True				
ANR	442455	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		442438	1					
ANR	442456	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3608:7:90824:90855	442438	0	True				
ANR	442457	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		442438	0		&			
ANR	442458	MemberAccess	op -> operands [ 0 ] . type		442438	0					
ANR	442459	ArrayIndexing	op -> operands [ 0 ]		442438	0					
ANR	442460	PtrMemberAccess	op -> operands		442438	0					
ANR	442461	Identifier	op		442438	0					
ANR	442462	Identifier	operands		442438	1					
ANR	442463	PrimaryExpression	0		442438	1					
ANR	442464	Identifier	type		442438	1					
ANR	442465	Identifier	OT_MEMORY		442438	1					
ANR	442466	CompoundStatement		5:42:95:95	442438	1					
ANR	442467	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		442438	0					
ANR	442468	Condition	op -> operands [ 0 ] . type & OT_DWORD	3609:8:90869:90899	442438	0	True				
ANR	442469	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		442438	0		&			
ANR	442470	MemberAccess	op -> operands [ 0 ] . type		442438	0					
ANR	442471	ArrayIndexing	op -> operands [ 0 ]		442438	0					
ANR	442472	PtrMemberAccess	op -> operands		442438	0					
ANR	442473	Identifier	op		442438	0					
ANR	442474	Identifier	operands		442438	1					
ANR	442475	PrimaryExpression	0		442438	1					
ANR	442476	Identifier	type		442438	1					
ANR	442477	Identifier	OT_DWORD		442438	1					
ANR	442478	CompoundStatement		6:42:139:139	442438	1					
ANR	442479	ExpressionStatement	data [ l ++ ] = 0xda	3610:4:90909:90925	442438	0	True				
ANR	442480	AssignmentExpression	data [ l ++ ] = 0xda		442438	0		=			
ANR	442481	ArrayIndexing	data [ l ++ ]		442438	0					
ANR	442482	Identifier	data		442438	0					
ANR	442483	PostIncDecOperationExpression	l ++		442438	1					
ANR	442484	Identifier	l		442438	0					
ANR	442485	IncDec	++		442438	1					
ANR	442486	PrimaryExpression	0xda		442438	1					
ANR	442487	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3611:4:90931:90973	442438	1	True				
ANR	442488	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		442438	0		=			
ANR	442489	ArrayIndexing	data [ l ++ ]		442438	0					
ANR	442490	Identifier	data		442438	0					
ANR	442491	PostIncDecOperationExpression	l ++		442438	1					
ANR	442492	Identifier	l		442438	0					
ANR	442493	IncDec	++		442438	1					
ANR	442494	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		442438	1		|			
ANR	442495	PrimaryExpression	0x28		442438	0					
ANR	442496	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442438	1					
ANR	442497	MemberAccess	op -> operands [ 0 ] . regs		442438	0					
ANR	442498	ArrayIndexing	op -> operands [ 0 ]		442438	0					
ANR	442499	PtrMemberAccess	op -> operands		442438	0					
ANR	442500	Identifier	op		442438	0					
ANR	442501	Identifier	operands		442438	1					
ANR	442502	PrimaryExpression	0		442438	1					
ANR	442503	Identifier	regs		442438	1					
ANR	442504	PrimaryExpression	0		442438	1					
ANR	442505	ElseStatement	else		442438	0					
ANR	442506	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		442438	0					
ANR	442507	Condition	op -> operands [ 0 ] . type & OT_WORD	3612:15:90990:91019	442438	0	True				
ANR	442508	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442438	0		&			
ANR	442509	MemberAccess	op -> operands [ 0 ] . type		442438	0					
ANR	442510	ArrayIndexing	op -> operands [ 0 ]		442438	0					
ANR	442511	PtrMemberAccess	op -> operands		442438	0					
ANR	442512	Identifier	op		442438	0					
ANR	442513	Identifier	operands		442438	1					
ANR	442514	PrimaryExpression	0		442438	1					
ANR	442515	Identifier	type		442438	1					
ANR	442516	Identifier	OT_WORD		442438	1					
ANR	442517	CompoundStatement		9:48:259:259	442438	1					
ANR	442518	ExpressionStatement	data [ l ++ ] = 0xde	3613:4:91029:91045	442438	0	True				
ANR	442519	AssignmentExpression	data [ l ++ ] = 0xde		442438	0		=			
ANR	442520	ArrayIndexing	data [ l ++ ]		442438	0					
ANR	442521	Identifier	data		442438	0					
ANR	442522	PostIncDecOperationExpression	l ++		442438	1					
ANR	442523	Identifier	l		442438	0					
ANR	442524	IncDec	++		442438	1					
ANR	442525	PrimaryExpression	0xde		442438	1					
ANR	442526	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3614:4:91051:91093	442438	1	True				
ANR	442527	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		442438	0		=			
ANR	442528	ArrayIndexing	data [ l ++ ]		442438	0					
ANR	442529	Identifier	data		442438	0					
ANR	442530	PostIncDecOperationExpression	l ++		442438	1					
ANR	442531	Identifier	l		442438	0					
ANR	442532	IncDec	++		442438	1					
ANR	442533	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		442438	1		|			
ANR	442534	PrimaryExpression	0x28		442438	0					
ANR	442535	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442438	1					
ANR	442536	MemberAccess	op -> operands [ 0 ] . regs		442438	0					
ANR	442537	ArrayIndexing	op -> operands [ 0 ]		442438	0					
ANR	442538	PtrMemberAccess	op -> operands		442438	0					
ANR	442539	Identifier	op		442438	0					
ANR	442540	Identifier	operands		442438	1					
ANR	442541	PrimaryExpression	0		442438	1					
ANR	442542	Identifier	regs		442438	1					
ANR	442543	PrimaryExpression	0		442438	1					
ANR	442544	ElseStatement	else		442438	0					
ANR	442545	CompoundStatement		12:10:341:341	442438	0					
ANR	442546	ReturnStatement	return - 1 ;	3616:4:91111:91120	442438	0	True				
ANR	442547	UnaryOperationExpression	- 1		442438	0					
ANR	442548	UnaryOperator	-		442438	0					
ANR	442549	PrimaryExpression	1		442438	1					
ANR	442550	ElseStatement	else		442438	0					
ANR	442551	CompoundStatement		15:9:372:372	442438	0					
ANR	442552	ReturnStatement	return - 1 ;	3619:3:91141:91150	442438	0	True				
ANR	442553	UnaryOperationExpression	- 1		442438	0					
ANR	442554	UnaryOperator	-		442438	0					
ANR	442555	PrimaryExpression	1		442438	1					
ANR	442556	BreakStatement	break ;	3621:2:91158:91163	442438	2	True				
ANR	442557	Label	default :	3622:1:91166:91173	442438	3	True				
ANR	442558	Identifier	default		442438	0					
ANR	442559	ReturnStatement	return - 1 ;	3623:2:91177:91186	442438	4	True				
ANR	442560	UnaryOperationExpression	- 1		442438	0					
ANR	442561	UnaryOperator	-		442438	0					
ANR	442562	PrimaryExpression	1		442438	1					
ANR	442563	ReturnStatement	return l ;	3625:1:91192:91200	442438	2	True				
ANR	442564	Identifier	l		442438	0					
ANR	442565	ReturnType	static int		442438	1					
ANR	442566	Identifier	opfisubr		442438	2					
ANR	442567	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442438	3					
ANR	442568	Parameter	RAsm * a	3604:20:90725:90731	442438	0	True				
ANR	442569	ParameterType	RAsm *		442438	0					
ANR	442570	Identifier	a		442438	1					
ANR	442571	Parameter	ut8 * data	3604:29:90734:90742	442438	1	True				
ANR	442572	ParameterType	ut8 *		442438	0					
ANR	442573	Identifier	data		442438	1					
ANR	442574	Parameter	const Opcode * op	3604:40:90745:90760	442438	2	True				
ANR	442575	ParameterType	const Opcode *		442438	0					
ANR	442576	Identifier	op		442438	1					
ANR	442577	CFGEntryNode	ENTRY		442438		True				
ANR	442578	CFGExitNode	EXIT		442438		True				
ANR	442579	Symbol	a		442438						
ANR	442580	Symbol	op		442438						
ANR	442581	Symbol	OT_WORD		442438						
ANR	442582	Symbol	data		442438						
ANR	442583	Symbol	* op		442438						
ANR	442584	Symbol	* * op -> operands		442438						
ANR	442585	Symbol	l		442438						
ANR	442586	Symbol	* * op		442438						
ANR	442587	Symbol	* op -> operands		442438						
ANR	442588	Symbol	op -> operands_count		442438						
ANR	442589	Symbol	* op -> operands [ 0 ] . regs		442438						
ANR	442590	Symbol	op -> operands [ 0 ] . type		442438						
ANR	442591	Symbol	* * * op		442438						
ANR	442592	Symbol	op -> operands		442438						
ANR	442593	Symbol	OT_MEMORY		442438						
ANR	442594	Symbol	* data		442438						
ANR	442595	Symbol	op -> operands [ 0 ] . regs		442438						
ANR	442596	Symbol	OT_DWORD		442438						
ANR	442597	Function	opfnstcw	3628:0:91205:91545							
ANR	442598	FunctionDef	"opfnstcw (RAsm * a , ut8 * data , const Opcode * op)"		442597	0					
ANR	442599	CompoundStatement		3628:58:91263:91545	442597	0					
ANR	442600	IdentifierDeclStatement	int l = 0 ;	3629:1:91266:91275	442597	0	True				
ANR	442601	IdentifierDecl	l = 0		442597	0					
ANR	442602	IdentifierDeclType	int		442597	0					
ANR	442603	Identifier	l		442597	1					
ANR	442604	AssignmentExpression	l = 0		442597	2		=			
ANR	442605	Identifier	l		442597	0					
ANR	442606	PrimaryExpression	0		442597	1					
ANR	442607	SwitchStatement	switch ( op -> operands_count )		442597	1					
ANR	442608	Condition	op -> operands_count	3630:9:91286:91303	442597	0	True				
ANR	442609	PtrMemberAccess	op -> operands_count		442597	0					
ANR	442610	Identifier	op		442597	0					
ANR	442611	Identifier	operands_count		442597	1					
ANR	442612	CompoundStatement		3:29:42:42	442597	1					
ANR	442613	Label	case 1 :	3631:1:91309:91315	442597	0	True				
ANR	442614	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		442597	1					
ANR	442615	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3632:7:91324:91396	442597	0	True				
ANR	442616	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		442597	0		&&			
ANR	442617	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		442597	0		&			
ANR	442618	MemberAccess	op -> operands [ 0 ] . type		442597	0					
ANR	442619	ArrayIndexing	op -> operands [ 0 ]		442597	0					
ANR	442620	PtrMemberAccess	op -> operands		442597	0					
ANR	442621	Identifier	op		442597	0					
ANR	442622	Identifier	operands		442597	1					
ANR	442623	PrimaryExpression	0		442597	1					
ANR	442624	Identifier	type		442597	1					
ANR	442625	Identifier	OT_MEMORY		442597	1					
ANR	442626	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442597	1		&			
ANR	442627	MemberAccess	op -> operands [ 0 ] . type		442597	0					
ANR	442628	ArrayIndexing	op -> operands [ 0 ]		442597	0					
ANR	442629	PtrMemberAccess	op -> operands		442597	0					
ANR	442630	Identifier	op		442597	0					
ANR	442631	Identifier	operands		442597	1					
ANR	442632	PrimaryExpression	0		442597	1					
ANR	442633	Identifier	type		442597	1					
ANR	442634	Identifier	OT_WORD		442597	1					
ANR	442635	CompoundStatement		6:40:136:136	442597	1					
ANR	442636	ExpressionStatement	data [ l ++ ] = 0xd9	3634:3:91405:91421	442597	0	True				
ANR	442637	AssignmentExpression	data [ l ++ ] = 0xd9		442597	0		=			
ANR	442638	ArrayIndexing	data [ l ++ ]		442597	0					
ANR	442639	Identifier	data		442597	0					
ANR	442640	PostIncDecOperationExpression	l ++		442597	1					
ANR	442641	Identifier	l		442597	0					
ANR	442642	IncDec	++		442597	1					
ANR	442643	PrimaryExpression	0xd9		442597	1					
ANR	442644	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3635:3:91426:91468	442597	1	True				
ANR	442645	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		442597	0		=			
ANR	442646	ArrayIndexing	data [ l ++ ]		442597	0					
ANR	442647	Identifier	data		442597	0					
ANR	442648	PostIncDecOperationExpression	l ++		442597	1					
ANR	442649	Identifier	l		442597	0					
ANR	442650	IncDec	++		442597	1					
ANR	442651	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		442597	1		|			
ANR	442652	PrimaryExpression	0x38		442597	0					
ANR	442653	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442597	1					
ANR	442654	MemberAccess	op -> operands [ 0 ] . regs		442597	0					
ANR	442655	ArrayIndexing	op -> operands [ 0 ]		442597	0					
ANR	442656	PtrMemberAccess	op -> operands		442597	0					
ANR	442657	Identifier	op		442597	0					
ANR	442658	Identifier	operands		442597	1					
ANR	442659	PrimaryExpression	0		442597	1					
ANR	442660	Identifier	regs		442597	1					
ANR	442661	PrimaryExpression	0		442597	1					
ANR	442662	ElseStatement	else		442597	0					
ANR	442663	CompoundStatement		9:9:215:215	442597	0					
ANR	442664	ReturnStatement	return - 1 ;	3637:3:91484:91493	442597	0	True				
ANR	442665	UnaryOperationExpression	- 1		442597	0					
ANR	442666	UnaryOperator	-		442597	0					
ANR	442667	PrimaryExpression	1		442597	1					
ANR	442668	BreakStatement	break ;	3639:2:91501:91506	442597	2	True				
ANR	442669	Label	default :	3640:1:91509:91516	442597	3	True				
ANR	442670	Identifier	default		442597	0					
ANR	442671	ReturnStatement	return - 1 ;	3641:2:91520:91529	442597	4	True				
ANR	442672	UnaryOperationExpression	- 1		442597	0					
ANR	442673	UnaryOperator	-		442597	0					
ANR	442674	PrimaryExpression	1		442597	1					
ANR	442675	ReturnStatement	return l ;	3643:1:91535:91543	442597	2	True				
ANR	442676	Identifier	l		442597	0					
ANR	442677	ReturnType	static int		442597	1					
ANR	442678	Identifier	opfnstcw		442597	2					
ANR	442679	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442597	3					
ANR	442680	Parameter	RAsm * a	3628:20:91225:91231	442597	0	True				
ANR	442681	ParameterType	RAsm *		442597	0					
ANR	442682	Identifier	a		442597	1					
ANR	442683	Parameter	ut8 * data	3628:29:91234:91242	442597	1	True				
ANR	442684	ParameterType	ut8 *		442597	0					
ANR	442685	Identifier	data		442597	1					
ANR	442686	Parameter	const Opcode * op	3628:40:91245:91260	442597	2	True				
ANR	442687	ParameterType	const Opcode *		442597	0					
ANR	442688	Identifier	op		442597	1					
ANR	442689	CFGEntryNode	ENTRY		442597		True				
ANR	442690	CFGExitNode	EXIT		442597		True				
ANR	442691	Symbol	a		442597						
ANR	442692	Symbol	op		442597						
ANR	442693	Symbol	OT_WORD		442597						
ANR	442694	Symbol	data		442597						
ANR	442695	Symbol	* op		442597						
ANR	442696	Symbol	* * op -> operands		442597						
ANR	442697	Symbol	l		442597						
ANR	442698	Symbol	* * op		442597						
ANR	442699	Symbol	* op -> operands		442597						
ANR	442700	Symbol	op -> operands_count		442597						
ANR	442701	Symbol	* op -> operands [ 0 ] . regs		442597						
ANR	442702	Symbol	op -> operands [ 0 ] . type		442597						
ANR	442703	Symbol	* * * op		442597						
ANR	442704	Symbol	op -> operands		442597						
ANR	442705	Symbol	OT_MEMORY		442597						
ANR	442706	Symbol	* data		442597						
ANR	442707	Symbol	op -> operands [ 0 ] . regs		442597						
ANR	442708	Function	opfstcw	3646:0:91548:91908							
ANR	442709	FunctionDef	"opfstcw (RAsm * a , ut8 * data , const Opcode * op)"		442708	0					
ANR	442710	CompoundStatement		3646:57:91605:91908	442708	0					
ANR	442711	IdentifierDeclStatement	int l = 0 ;	3647:1:91608:91617	442708	0	True				
ANR	442712	IdentifierDecl	l = 0		442708	0					
ANR	442713	IdentifierDeclType	int		442708	0					
ANR	442714	Identifier	l		442708	1					
ANR	442715	AssignmentExpression	l = 0		442708	2		=			
ANR	442716	Identifier	l		442708	0					
ANR	442717	PrimaryExpression	0		442708	1					
ANR	442718	SwitchStatement	switch ( op -> operands_count )		442708	1					
ANR	442719	Condition	op -> operands_count	3648:9:91628:91645	442708	0	True				
ANR	442720	PtrMemberAccess	op -> operands_count		442708	0					
ANR	442721	Identifier	op		442708	0					
ANR	442722	Identifier	operands_count		442708	1					
ANR	442723	CompoundStatement		3:29:42:42	442708	1					
ANR	442724	Label	case 1 :	3649:1:91651:91657	442708	0	True				
ANR	442725	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		442708	1					
ANR	442726	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3650:7:91666:91738	442708	0	True				
ANR	442727	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		442708	0		&&			
ANR	442728	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		442708	0		&			
ANR	442729	MemberAccess	op -> operands [ 0 ] . type		442708	0					
ANR	442730	ArrayIndexing	op -> operands [ 0 ]		442708	0					
ANR	442731	PtrMemberAccess	op -> operands		442708	0					
ANR	442732	Identifier	op		442708	0					
ANR	442733	Identifier	operands		442708	1					
ANR	442734	PrimaryExpression	0		442708	1					
ANR	442735	Identifier	type		442708	1					
ANR	442736	Identifier	OT_MEMORY		442708	1					
ANR	442737	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442708	1		&			
ANR	442738	MemberAccess	op -> operands [ 0 ] . type		442708	0					
ANR	442739	ArrayIndexing	op -> operands [ 0 ]		442708	0					
ANR	442740	PtrMemberAccess	op -> operands		442708	0					
ANR	442741	Identifier	op		442708	0					
ANR	442742	Identifier	operands		442708	1					
ANR	442743	PrimaryExpression	0		442708	1					
ANR	442744	Identifier	type		442708	1					
ANR	442745	Identifier	OT_WORD		442708	1					
ANR	442746	CompoundStatement		6:40:136:136	442708	1					
ANR	442747	ExpressionStatement	data [ l ++ ] = 0x9b	3652:3:91747:91763	442708	0	True				
ANR	442748	AssignmentExpression	data [ l ++ ] = 0x9b		442708	0		=			
ANR	442749	ArrayIndexing	data [ l ++ ]		442708	0					
ANR	442750	Identifier	data		442708	0					
ANR	442751	PostIncDecOperationExpression	l ++		442708	1					
ANR	442752	Identifier	l		442708	0					
ANR	442753	IncDec	++		442708	1					
ANR	442754	PrimaryExpression	0x9b		442708	1					
ANR	442755	ExpressionStatement	data [ l ++ ] = 0xd9	3653:3:91768:91784	442708	1	True				
ANR	442756	AssignmentExpression	data [ l ++ ] = 0xd9		442708	0		=			
ANR	442757	ArrayIndexing	data [ l ++ ]		442708	0					
ANR	442758	Identifier	data		442708	0					
ANR	442759	PostIncDecOperationExpression	l ++		442708	1					
ANR	442760	Identifier	l		442708	0					
ANR	442761	IncDec	++		442708	1					
ANR	442762	PrimaryExpression	0xd9		442708	1					
ANR	442763	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3654:3:91789:91831	442708	2	True				
ANR	442764	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		442708	0		=			
ANR	442765	ArrayIndexing	data [ l ++ ]		442708	0					
ANR	442766	Identifier	data		442708	0					
ANR	442767	PostIncDecOperationExpression	l ++		442708	1					
ANR	442768	Identifier	l		442708	0					
ANR	442769	IncDec	++		442708	1					
ANR	442770	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		442708	1		|			
ANR	442771	PrimaryExpression	0x38		442708	0					
ANR	442772	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442708	1					
ANR	442773	MemberAccess	op -> operands [ 0 ] . regs		442708	0					
ANR	442774	ArrayIndexing	op -> operands [ 0 ]		442708	0					
ANR	442775	PtrMemberAccess	op -> operands		442708	0					
ANR	442776	Identifier	op		442708	0					
ANR	442777	Identifier	operands		442708	1					
ANR	442778	PrimaryExpression	0		442708	1					
ANR	442779	Identifier	regs		442708	1					
ANR	442780	PrimaryExpression	0		442708	1					
ANR	442781	ElseStatement	else		442708	0					
ANR	442782	CompoundStatement		10:9:236:236	442708	0					
ANR	442783	ReturnStatement	return - 1 ;	3656:3:91847:91856	442708	0	True				
ANR	442784	UnaryOperationExpression	- 1		442708	0					
ANR	442785	UnaryOperator	-		442708	0					
ANR	442786	PrimaryExpression	1		442708	1					
ANR	442787	BreakStatement	break ;	3658:2:91864:91869	442708	2	True				
ANR	442788	Label	default :	3659:1:91872:91879	442708	3	True				
ANR	442789	Identifier	default		442708	0					
ANR	442790	ReturnStatement	return - 1 ;	3660:2:91883:91892	442708	4	True				
ANR	442791	UnaryOperationExpression	- 1		442708	0					
ANR	442792	UnaryOperator	-		442708	0					
ANR	442793	PrimaryExpression	1		442708	1					
ANR	442794	ReturnStatement	return l ;	3662:1:91898:91906	442708	2	True				
ANR	442795	Identifier	l		442708	0					
ANR	442796	ReturnType	static int		442708	1					
ANR	442797	Identifier	opfstcw		442708	2					
ANR	442798	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442708	3					
ANR	442799	Parameter	RAsm * a	3646:19:91567:91573	442708	0	True				
ANR	442800	ParameterType	RAsm *		442708	0					
ANR	442801	Identifier	a		442708	1					
ANR	442802	Parameter	ut8 * data	3646:28:91576:91584	442708	1	True				
ANR	442803	ParameterType	ut8 *		442708	0					
ANR	442804	Identifier	data		442708	1					
ANR	442805	Parameter	const Opcode * op	3646:39:91587:91602	442708	2	True				
ANR	442806	ParameterType	const Opcode *		442708	0					
ANR	442807	Identifier	op		442708	1					
ANR	442808	CFGEntryNode	ENTRY		442708		True				
ANR	442809	CFGExitNode	EXIT		442708		True				
ANR	442810	Symbol	a		442708						
ANR	442811	Symbol	op		442708						
ANR	442812	Symbol	OT_WORD		442708						
ANR	442813	Symbol	data		442708						
ANR	442814	Symbol	* op		442708						
ANR	442815	Symbol	* * op -> operands		442708						
ANR	442816	Symbol	l		442708						
ANR	442817	Symbol	* * op		442708						
ANR	442818	Symbol	* op -> operands		442708						
ANR	442819	Symbol	op -> operands_count		442708						
ANR	442820	Symbol	* op -> operands [ 0 ] . regs		442708						
ANR	442821	Symbol	op -> operands [ 0 ] . type		442708						
ANR	442822	Symbol	* * * op		442708						
ANR	442823	Symbol	op -> operands		442708						
ANR	442824	Symbol	OT_MEMORY		442708						
ANR	442825	Symbol	* data		442708						
ANR	442826	Symbol	op -> operands [ 0 ] . regs		442708						
ANR	442827	Function	opfnstsw	3665:0:91911:92426							
ANR	442828	FunctionDef	"opfnstsw (RAsm * a , ut8 * data , const Opcode * op)"		442827	0					
ANR	442829	CompoundStatement		3665:58:91969:92426	442827	0					
ANR	442830	IdentifierDeclStatement	int l = 0 ;	3666:1:91972:91981	442827	0	True				
ANR	442831	IdentifierDecl	l = 0		442827	0					
ANR	442832	IdentifierDeclType	int		442827	0					
ANR	442833	Identifier	l		442827	1					
ANR	442834	AssignmentExpression	l = 0		442827	2		=			
ANR	442835	Identifier	l		442827	0					
ANR	442836	PrimaryExpression	0		442827	1					
ANR	442837	SwitchStatement	switch ( op -> operands_count )		442827	1					
ANR	442838	Condition	op -> operands_count	3667:9:91992:92009	442827	0	True				
ANR	442839	PtrMemberAccess	op -> operands_count		442827	0					
ANR	442840	Identifier	op		442827	0					
ANR	442841	Identifier	operands_count		442827	1					
ANR	442842	CompoundStatement		3:29:42:42	442827	1					
ANR	442843	Label	case 1 :	3668:1:92015:92021	442827	0	True				
ANR	442844	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		442827	1					
ANR	442845	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3669:7:92030:92102	442827	0	True				
ANR	442846	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		442827	0		&&			
ANR	442847	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		442827	0		&			
ANR	442848	MemberAccess	op -> operands [ 0 ] . type		442827	0					
ANR	442849	ArrayIndexing	op -> operands [ 0 ]		442827	0					
ANR	442850	PtrMemberAccess	op -> operands		442827	0					
ANR	442851	Identifier	op		442827	0					
ANR	442852	Identifier	operands		442827	1					
ANR	442853	PrimaryExpression	0		442827	1					
ANR	442854	Identifier	type		442827	1					
ANR	442855	Identifier	OT_MEMORY		442827	1					
ANR	442856	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442827	1		&			
ANR	442857	MemberAccess	op -> operands [ 0 ] . type		442827	0					
ANR	442858	ArrayIndexing	op -> operands [ 0 ]		442827	0					
ANR	442859	PtrMemberAccess	op -> operands		442827	0					
ANR	442860	Identifier	op		442827	0					
ANR	442861	Identifier	operands		442827	1					
ANR	442862	PrimaryExpression	0		442827	1					
ANR	442863	Identifier	type		442827	1					
ANR	442864	Identifier	OT_WORD		442827	1					
ANR	442865	CompoundStatement		6:40:136:136	442827	1					
ANR	442866	ExpressionStatement	data [ l ++ ] = 0xdd	3671:3:92111:92127	442827	0	True				
ANR	442867	AssignmentExpression	data [ l ++ ] = 0xdd		442827	0		=			
ANR	442868	ArrayIndexing	data [ l ++ ]		442827	0					
ANR	442869	Identifier	data		442827	0					
ANR	442870	PostIncDecOperationExpression	l ++		442827	1					
ANR	442871	Identifier	l		442827	0					
ANR	442872	IncDec	++		442827	1					
ANR	442873	PrimaryExpression	0xdd		442827	1					
ANR	442874	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3672:3:92132:92174	442827	1	True				
ANR	442875	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		442827	0		=			
ANR	442876	ArrayIndexing	data [ l ++ ]		442827	0					
ANR	442877	Identifier	data		442827	0					
ANR	442878	PostIncDecOperationExpression	l ++		442827	1					
ANR	442879	Identifier	l		442827	0					
ANR	442880	IncDec	++		442827	1					
ANR	442881	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		442827	1		|			
ANR	442882	PrimaryExpression	0x38		442827	0					
ANR	442883	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442827	1					
ANR	442884	MemberAccess	op -> operands [ 0 ] . regs		442827	0					
ANR	442885	ArrayIndexing	op -> operands [ 0 ]		442827	0					
ANR	442886	PtrMemberAccess	op -> operands		442827	0					
ANR	442887	Identifier	op		442827	0					
ANR	442888	Identifier	operands		442827	1					
ANR	442889	PrimaryExpression	0		442827	1					
ANR	442890	Identifier	regs		442827	1					
ANR	442891	PrimaryExpression	0		442827	1					
ANR	442892	ElseStatement	else		442827	0					
ANR	442893	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX )		442827	0					
ANR	442894	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX	3673:14:92190:92303	442827	0	True				
ANR	442895	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		442827	0		&&			
ANR	442896	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		442827	0		&			
ANR	442897	MemberAccess	op -> operands [ 0 ] . type		442827	0					
ANR	442898	ArrayIndexing	op -> operands [ 0 ]		442827	0					
ANR	442899	PtrMemberAccess	op -> operands		442827	0					
ANR	442900	Identifier	op		442827	0					
ANR	442901	Identifier	operands		442827	1					
ANR	442902	PrimaryExpression	0		442827	1					
ANR	442903	Identifier	type		442827	1					
ANR	442904	Identifier	OT_GPREG		442827	1					
ANR	442905	AndExpression	op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		442827	1		&&			
ANR	442906	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442827	0		&			
ANR	442907	MemberAccess	op -> operands [ 0 ] . type		442827	0					
ANR	442908	ArrayIndexing	op -> operands [ 0 ]		442827	0					
ANR	442909	PtrMemberAccess	op -> operands		442827	0					
ANR	442910	Identifier	op		442827	0					
ANR	442911	Identifier	operands		442827	1					
ANR	442912	PrimaryExpression	0		442827	1					
ANR	442913	Identifier	type		442827	1					
ANR	442914	Identifier	OT_WORD		442827	1					
ANR	442915	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		442827	1		==			
ANR	442916	MemberAccess	op -> operands [ 0 ] . reg		442827	0					
ANR	442917	ArrayIndexing	op -> operands [ 0 ]		442827	0					
ANR	442918	PtrMemberAccess	op -> operands		442827	0					
ANR	442919	Identifier	op		442827	0					
ANR	442920	Identifier	operands		442827	1					
ANR	442921	PrimaryExpression	0		442827	1					
ANR	442922	Identifier	reg		442827	1					
ANR	442923	Identifier	X86R_AX		442827	1					
ANR	442924	CompoundStatement		11:40:337:337	442827	1					
ANR	442925	ExpressionStatement	data [ l ++ ] = 0xdf	3676:3:92312:92328	442827	0	True				
ANR	442926	AssignmentExpression	data [ l ++ ] = 0xdf		442827	0		=			
ANR	442927	ArrayIndexing	data [ l ++ ]		442827	0					
ANR	442928	Identifier	data		442827	0					
ANR	442929	PostIncDecOperationExpression	l ++		442827	1					
ANR	442930	Identifier	l		442827	0					
ANR	442931	IncDec	++		442827	1					
ANR	442932	PrimaryExpression	0xdf		442827	1					
ANR	442933	ExpressionStatement	data [ l ++ ] = 0xe0	3677:3:92333:92349	442827	1	True				
ANR	442934	AssignmentExpression	data [ l ++ ] = 0xe0		442827	0		=			
ANR	442935	ArrayIndexing	data [ l ++ ]		442827	0					
ANR	442936	Identifier	data		442827	0					
ANR	442937	PostIncDecOperationExpression	l ++		442827	1					
ANR	442938	Identifier	l		442827	0					
ANR	442939	IncDec	++		442827	1					
ANR	442940	PrimaryExpression	0xe0		442827	1					
ANR	442941	ElseStatement	else		442827	0					
ANR	442942	CompoundStatement		14:9:390:390	442827	0					
ANR	442943	ReturnStatement	return - 1 ;	3679:3:92365:92374	442827	0	True				
ANR	442944	UnaryOperationExpression	- 1		442827	0					
ANR	442945	UnaryOperator	-		442827	0					
ANR	442946	PrimaryExpression	1		442827	1					
ANR	442947	BreakStatement	break ;	3681:2:92382:92387	442827	2	True				
ANR	442948	Label	default :	3682:1:92390:92397	442827	3	True				
ANR	442949	Identifier	default		442827	0					
ANR	442950	ReturnStatement	return - 1 ;	3683:2:92401:92410	442827	4	True				
ANR	442951	UnaryOperationExpression	- 1		442827	0					
ANR	442952	UnaryOperator	-		442827	0					
ANR	442953	PrimaryExpression	1		442827	1					
ANR	442954	ReturnStatement	return l ;	3685:1:92416:92424	442827	2	True				
ANR	442955	Identifier	l		442827	0					
ANR	442956	ReturnType	static int		442827	1					
ANR	442957	Identifier	opfnstsw		442827	2					
ANR	442958	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442827	3					
ANR	442959	Parameter	RAsm * a	3665:20:91931:91937	442827	0	True				
ANR	442960	ParameterType	RAsm *		442827	0					
ANR	442961	Identifier	a		442827	1					
ANR	442962	Parameter	ut8 * data	3665:29:91940:91948	442827	1	True				
ANR	442963	ParameterType	ut8 *		442827	0					
ANR	442964	Identifier	data		442827	1					
ANR	442965	Parameter	const Opcode * op	3665:40:91951:91966	442827	2	True				
ANR	442966	ParameterType	const Opcode *		442827	0					
ANR	442967	Identifier	op		442827	1					
ANR	442968	CFGEntryNode	ENTRY		442827		True				
ANR	442969	CFGExitNode	EXIT		442827		True				
ANR	442970	Symbol	a		442827						
ANR	442971	Symbol	op		442827						
ANR	442972	Symbol	OT_WORD		442827						
ANR	442973	Symbol	OT_GPREG		442827						
ANR	442974	Symbol	data		442827						
ANR	442975	Symbol	* op		442827						
ANR	442976	Symbol	X86R_AX		442827						
ANR	442977	Symbol	* * op -> operands		442827						
ANR	442978	Symbol	l		442827						
ANR	442979	Symbol	* * op		442827						
ANR	442980	Symbol	* op -> operands		442827						
ANR	442981	Symbol	op -> operands_count		442827						
ANR	442982	Symbol	* op -> operands [ 0 ] . regs		442827						
ANR	442983	Symbol	op -> operands [ 0 ] . type		442827						
ANR	442984	Symbol	* * * op		442827						
ANR	442985	Symbol	op -> operands [ 0 ] . reg		442827						
ANR	442986	Symbol	op -> operands		442827						
ANR	442987	Symbol	OT_MEMORY		442827						
ANR	442988	Symbol	* data		442827						
ANR	442989	Symbol	op -> operands [ 0 ] . regs		442827						
ANR	442990	Function	opfstsw	3688:0:92429:92985							
ANR	442991	FunctionDef	"opfstsw (RAsm * a , ut8 * data , const Opcode * op)"		442990	0					
ANR	442992	CompoundStatement		3688:57:92486:92985	442990	0					
ANR	442993	IdentifierDeclStatement	int l = 0 ;	3689:1:92489:92498	442990	0	True				
ANR	442994	IdentifierDecl	l = 0		442990	0					
ANR	442995	IdentifierDeclType	int		442990	0					
ANR	442996	Identifier	l		442990	1					
ANR	442997	AssignmentExpression	l = 0		442990	2		=			
ANR	442998	Identifier	l		442990	0					
ANR	442999	PrimaryExpression	0		442990	1					
ANR	443000	SwitchStatement	switch ( op -> operands_count )		442990	1					
ANR	443001	Condition	op -> operands_count	3690:9:92509:92526	442990	0	True				
ANR	443002	PtrMemberAccess	op -> operands_count		442990	0					
ANR	443003	Identifier	op		442990	0					
ANR	443004	Identifier	operands_count		442990	1					
ANR	443005	CompoundStatement		3:29:42:42	442990	1					
ANR	443006	Label	case 1 :	3691:1:92532:92538	442990	0	True				
ANR	443007	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		442990	1					
ANR	443008	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3692:7:92547:92619	442990	0	True				
ANR	443009	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		442990	0		&&			
ANR	443010	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		442990	0		&			
ANR	443011	MemberAccess	op -> operands [ 0 ] . type		442990	0					
ANR	443012	ArrayIndexing	op -> operands [ 0 ]		442990	0					
ANR	443013	PtrMemberAccess	op -> operands		442990	0					
ANR	443014	Identifier	op		442990	0					
ANR	443015	Identifier	operands		442990	1					
ANR	443016	PrimaryExpression	0		442990	1					
ANR	443017	Identifier	type		442990	1					
ANR	443018	Identifier	OT_MEMORY		442990	1					
ANR	443019	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442990	1		&			
ANR	443020	MemberAccess	op -> operands [ 0 ] . type		442990	0					
ANR	443021	ArrayIndexing	op -> operands [ 0 ]		442990	0					
ANR	443022	PtrMemberAccess	op -> operands		442990	0					
ANR	443023	Identifier	op		442990	0					
ANR	443024	Identifier	operands		442990	1					
ANR	443025	PrimaryExpression	0		442990	1					
ANR	443026	Identifier	type		442990	1					
ANR	443027	Identifier	OT_WORD		442990	1					
ANR	443028	CompoundStatement		6:40:136:136	442990	1					
ANR	443029	ExpressionStatement	data [ l ++ ] = 0x9b	3694:3:92628:92644	442990	0	True				
ANR	443030	AssignmentExpression	data [ l ++ ] = 0x9b		442990	0		=			
ANR	443031	ArrayIndexing	data [ l ++ ]		442990	0					
ANR	443032	Identifier	data		442990	0					
ANR	443033	PostIncDecOperationExpression	l ++		442990	1					
ANR	443034	Identifier	l		442990	0					
ANR	443035	IncDec	++		442990	1					
ANR	443036	PrimaryExpression	0x9b		442990	1					
ANR	443037	ExpressionStatement	data [ l ++ ] = 0xdd	3695:3:92649:92665	442990	1	True				
ANR	443038	AssignmentExpression	data [ l ++ ] = 0xdd		442990	0		=			
ANR	443039	ArrayIndexing	data [ l ++ ]		442990	0					
ANR	443040	Identifier	data		442990	0					
ANR	443041	PostIncDecOperationExpression	l ++		442990	1					
ANR	443042	Identifier	l		442990	0					
ANR	443043	IncDec	++		442990	1					
ANR	443044	PrimaryExpression	0xdd		442990	1					
ANR	443045	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3696:3:92670:92712	442990	2	True				
ANR	443046	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		442990	0		=			
ANR	443047	ArrayIndexing	data [ l ++ ]		442990	0					
ANR	443048	Identifier	data		442990	0					
ANR	443049	PostIncDecOperationExpression	l ++		442990	1					
ANR	443050	Identifier	l		442990	0					
ANR	443051	IncDec	++		442990	1					
ANR	443052	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		442990	1		|			
ANR	443053	PrimaryExpression	0x38		442990	0					
ANR	443054	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		442990	1					
ANR	443055	MemberAccess	op -> operands [ 0 ] . regs		442990	0					
ANR	443056	ArrayIndexing	op -> operands [ 0 ]		442990	0					
ANR	443057	PtrMemberAccess	op -> operands		442990	0					
ANR	443058	Identifier	op		442990	0					
ANR	443059	Identifier	operands		442990	1					
ANR	443060	PrimaryExpression	0		442990	1					
ANR	443061	Identifier	regs		442990	1					
ANR	443062	PrimaryExpression	0		442990	1					
ANR	443063	ElseStatement	else		442990	0					
ANR	443064	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX )		442990	0					
ANR	443065	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX	3697:14:92728:92841	442990	0	True				
ANR	443066	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		442990	0		&&			
ANR	443067	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		442990	0		&			
ANR	443068	MemberAccess	op -> operands [ 0 ] . type		442990	0					
ANR	443069	ArrayIndexing	op -> operands [ 0 ]		442990	0					
ANR	443070	PtrMemberAccess	op -> operands		442990	0					
ANR	443071	Identifier	op		442990	0					
ANR	443072	Identifier	operands		442990	1					
ANR	443073	PrimaryExpression	0		442990	1					
ANR	443074	Identifier	type		442990	1					
ANR	443075	Identifier	OT_GPREG		442990	1					
ANR	443076	AndExpression	op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		442990	1		&&			
ANR	443077	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		442990	0		&			
ANR	443078	MemberAccess	op -> operands [ 0 ] . type		442990	0					
ANR	443079	ArrayIndexing	op -> operands [ 0 ]		442990	0					
ANR	443080	PtrMemberAccess	op -> operands		442990	0					
ANR	443081	Identifier	op		442990	0					
ANR	443082	Identifier	operands		442990	1					
ANR	443083	PrimaryExpression	0		442990	1					
ANR	443084	Identifier	type		442990	1					
ANR	443085	Identifier	OT_WORD		442990	1					
ANR	443086	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		442990	1		==			
ANR	443087	MemberAccess	op -> operands [ 0 ] . reg		442990	0					
ANR	443088	ArrayIndexing	op -> operands [ 0 ]		442990	0					
ANR	443089	PtrMemberAccess	op -> operands		442990	0					
ANR	443090	Identifier	op		442990	0					
ANR	443091	Identifier	operands		442990	1					
ANR	443092	PrimaryExpression	0		442990	1					
ANR	443093	Identifier	reg		442990	1					
ANR	443094	Identifier	X86R_AX		442990	1					
ANR	443095	CompoundStatement		12:40:358:358	442990	1					
ANR	443096	ExpressionStatement	data [ l ++ ] = 0x9b	3700:3:92850:92866	442990	0	True				
ANR	443097	AssignmentExpression	data [ l ++ ] = 0x9b		442990	0		=			
ANR	443098	ArrayIndexing	data [ l ++ ]		442990	0					
ANR	443099	Identifier	data		442990	0					
ANR	443100	PostIncDecOperationExpression	l ++		442990	1					
ANR	443101	Identifier	l		442990	0					
ANR	443102	IncDec	++		442990	1					
ANR	443103	PrimaryExpression	0x9b		442990	1					
ANR	443104	ExpressionStatement	data [ l ++ ] = 0xdf	3701:3:92871:92887	442990	1	True				
ANR	443105	AssignmentExpression	data [ l ++ ] = 0xdf		442990	0		=			
ANR	443106	ArrayIndexing	data [ l ++ ]		442990	0					
ANR	443107	Identifier	data		442990	0					
ANR	443108	PostIncDecOperationExpression	l ++		442990	1					
ANR	443109	Identifier	l		442990	0					
ANR	443110	IncDec	++		442990	1					
ANR	443111	PrimaryExpression	0xdf		442990	1					
ANR	443112	ExpressionStatement	data [ l ++ ] = 0xe0	3702:3:92892:92908	442990	2	True				
ANR	443113	AssignmentExpression	data [ l ++ ] = 0xe0		442990	0		=			
ANR	443114	ArrayIndexing	data [ l ++ ]		442990	0					
ANR	443115	Identifier	data		442990	0					
ANR	443116	PostIncDecOperationExpression	l ++		442990	1					
ANR	443117	Identifier	l		442990	0					
ANR	443118	IncDec	++		442990	1					
ANR	443119	PrimaryExpression	0xe0		442990	1					
ANR	443120	ElseStatement	else		442990	0					
ANR	443121	CompoundStatement		16:9:432:432	442990	0					
ANR	443122	ReturnStatement	return - 1 ;	3704:3:92924:92933	442990	0	True				
ANR	443123	UnaryOperationExpression	- 1		442990	0					
ANR	443124	UnaryOperator	-		442990	0					
ANR	443125	PrimaryExpression	1		442990	1					
ANR	443126	BreakStatement	break ;	3706:2:92941:92946	442990	2	True				
ANR	443127	Label	default :	3707:1:92949:92956	442990	3	True				
ANR	443128	Identifier	default		442990	0					
ANR	443129	ReturnStatement	return - 1 ;	3708:2:92960:92969	442990	4	True				
ANR	443130	UnaryOperationExpression	- 1		442990	0					
ANR	443131	UnaryOperator	-		442990	0					
ANR	443132	PrimaryExpression	1		442990	1					
ANR	443133	ReturnStatement	return l ;	3710:1:92975:92983	442990	2	True				
ANR	443134	Identifier	l		442990	0					
ANR	443135	ReturnType	static int		442990	1					
ANR	443136	Identifier	opfstsw		442990	2					
ANR	443137	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		442990	3					
ANR	443138	Parameter	RAsm * a	3688:19:92448:92454	442990	0	True				
ANR	443139	ParameterType	RAsm *		442990	0					
ANR	443140	Identifier	a		442990	1					
ANR	443141	Parameter	ut8 * data	3688:28:92457:92465	442990	1	True				
ANR	443142	ParameterType	ut8 *		442990	0					
ANR	443143	Identifier	data		442990	1					
ANR	443144	Parameter	const Opcode * op	3688:39:92468:92483	442990	2	True				
ANR	443145	ParameterType	const Opcode *		442990	0					
ANR	443146	Identifier	op		442990	1					
ANR	443147	CFGEntryNode	ENTRY		442990		True				
ANR	443148	CFGExitNode	EXIT		442990		True				
ANR	443149	Symbol	a		442990						
ANR	443150	Symbol	op		442990						
ANR	443151	Symbol	OT_WORD		442990						
ANR	443152	Symbol	OT_GPREG		442990						
ANR	443153	Symbol	data		442990						
ANR	443154	Symbol	* op		442990						
ANR	443155	Symbol	X86R_AX		442990						
ANR	443156	Symbol	* * op -> operands		442990						
ANR	443157	Symbol	l		442990						
ANR	443158	Symbol	* * op		442990						
ANR	443159	Symbol	* op -> operands		442990						
ANR	443160	Symbol	op -> operands_count		442990						
ANR	443161	Symbol	* op -> operands [ 0 ] . regs		442990						
ANR	443162	Symbol	op -> operands [ 0 ] . type		442990						
ANR	443163	Symbol	* * * op		442990						
ANR	443164	Symbol	op -> operands [ 0 ] . reg		442990						
ANR	443165	Symbol	op -> operands		442990						
ANR	443166	Symbol	OT_MEMORY		442990						
ANR	443167	Symbol	* data		442990						
ANR	443168	Symbol	op -> operands [ 0 ] . regs		442990						
ANR	443169	Function	opfnsave	3713:0:92988:93329							
ANR	443170	FunctionDef	"opfnsave (RAsm * a , ut8 * data , const Opcode * op)"		443169	0					
ANR	443171	CompoundStatement		3713:58:93046:93329	443169	0					
ANR	443172	IdentifierDeclStatement	int l = 0 ;	3714:1:93049:93058	443169	0	True				
ANR	443173	IdentifierDecl	l = 0		443169	0					
ANR	443174	IdentifierDeclType	int		443169	0					
ANR	443175	Identifier	l		443169	1					
ANR	443176	AssignmentExpression	l = 0		443169	2		=			
ANR	443177	Identifier	l		443169	0					
ANR	443178	PrimaryExpression	0		443169	1					
ANR	443179	SwitchStatement	switch ( op -> operands_count )		443169	1					
ANR	443180	Condition	op -> operands_count	3715:9:93069:93086	443169	0	True				
ANR	443181	PtrMemberAccess	op -> operands_count		443169	0					
ANR	443182	Identifier	op		443169	0					
ANR	443183	Identifier	operands_count		443169	1					
ANR	443184	CompoundStatement		3:29:42:42	443169	1					
ANR	443185	Label	case 1 :	3716:1:93092:93098	443169	0	True				
ANR	443186	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD )		443169	1					
ANR	443187	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD	3717:7:93107:93180	443169	0	True				
ANR	443188	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD		443169	0		&&			
ANR	443189	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443169	0		&			
ANR	443190	MemberAccess	op -> operands [ 0 ] . type		443169	0					
ANR	443191	ArrayIndexing	op -> operands [ 0 ]		443169	0					
ANR	443192	PtrMemberAccess	op -> operands		443169	0					
ANR	443193	Identifier	op		443169	0					
ANR	443194	Identifier	operands		443169	1					
ANR	443195	PrimaryExpression	0		443169	1					
ANR	443196	Identifier	type		443169	1					
ANR	443197	Identifier	OT_MEMORY		443169	1					
ANR	443198	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		443169	1		&			
ANR	443199	MemberAccess	op -> operands [ 0 ] . type		443169	0					
ANR	443200	ArrayIndexing	op -> operands [ 0 ]		443169	0					
ANR	443201	PtrMemberAccess	op -> operands		443169	0					
ANR	443202	Identifier	op		443169	0					
ANR	443203	Identifier	operands		443169	1					
ANR	443204	PrimaryExpression	0		443169	1					
ANR	443205	Identifier	type		443169	1					
ANR	443206	Identifier	OT_DWORD		443169	1					
ANR	443207	CompoundStatement		6:41:137:137	443169	1					
ANR	443208	ExpressionStatement	data [ l ++ ] = 0xdd	3719:3:93189:93205	443169	0	True				
ANR	443209	AssignmentExpression	data [ l ++ ] = 0xdd		443169	0		=			
ANR	443210	ArrayIndexing	data [ l ++ ]		443169	0					
ANR	443211	Identifier	data		443169	0					
ANR	443212	PostIncDecOperationExpression	l ++		443169	1					
ANR	443213	Identifier	l		443169	0					
ANR	443214	IncDec	++		443169	1					
ANR	443215	PrimaryExpression	0xdd		443169	1					
ANR	443216	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3720:3:93210:93252	443169	1	True				
ANR	443217	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		443169	0		=			
ANR	443218	ArrayIndexing	data [ l ++ ]		443169	0					
ANR	443219	Identifier	data		443169	0					
ANR	443220	PostIncDecOperationExpression	l ++		443169	1					
ANR	443221	Identifier	l		443169	0					
ANR	443222	IncDec	++		443169	1					
ANR	443223	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		443169	1		|			
ANR	443224	PrimaryExpression	0x30		443169	0					
ANR	443225	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443169	1					
ANR	443226	MemberAccess	op -> operands [ 0 ] . regs		443169	0					
ANR	443227	ArrayIndexing	op -> operands [ 0 ]		443169	0					
ANR	443228	PtrMemberAccess	op -> operands		443169	0					
ANR	443229	Identifier	op		443169	0					
ANR	443230	Identifier	operands		443169	1					
ANR	443231	PrimaryExpression	0		443169	1					
ANR	443232	Identifier	regs		443169	1					
ANR	443233	PrimaryExpression	0		443169	1					
ANR	443234	ElseStatement	else		443169	0					
ANR	443235	CompoundStatement		9:9:216:216	443169	0					
ANR	443236	ReturnStatement	return - 1 ;	3722:3:93268:93277	443169	0	True				
ANR	443237	UnaryOperationExpression	- 1		443169	0					
ANR	443238	UnaryOperator	-		443169	0					
ANR	443239	PrimaryExpression	1		443169	1					
ANR	443240	BreakStatement	break ;	3724:2:93285:93290	443169	2	True				
ANR	443241	Label	default :	3725:1:93293:93300	443169	3	True				
ANR	443242	Identifier	default		443169	0					
ANR	443243	ReturnStatement	return - 1 ;	3726:2:93304:93313	443169	4	True				
ANR	443244	UnaryOperationExpression	- 1		443169	0					
ANR	443245	UnaryOperator	-		443169	0					
ANR	443246	PrimaryExpression	1		443169	1					
ANR	443247	ReturnStatement	return l ;	3728:1:93319:93327	443169	2	True				
ANR	443248	Identifier	l		443169	0					
ANR	443249	ReturnType	static int		443169	1					
ANR	443250	Identifier	opfnsave		443169	2					
ANR	443251	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443169	3					
ANR	443252	Parameter	RAsm * a	3713:20:93008:93014	443169	0	True				
ANR	443253	ParameterType	RAsm *		443169	0					
ANR	443254	Identifier	a		443169	1					
ANR	443255	Parameter	ut8 * data	3713:29:93017:93025	443169	1	True				
ANR	443256	ParameterType	ut8 *		443169	0					
ANR	443257	Identifier	data		443169	1					
ANR	443258	Parameter	const Opcode * op	3713:40:93028:93043	443169	2	True				
ANR	443259	ParameterType	const Opcode *		443169	0					
ANR	443260	Identifier	op		443169	1					
ANR	443261	CFGEntryNode	ENTRY		443169		True				
ANR	443262	CFGExitNode	EXIT		443169		True				
ANR	443263	Symbol	a		443169						
ANR	443264	Symbol	op		443169						
ANR	443265	Symbol	data		443169						
ANR	443266	Symbol	* op		443169						
ANR	443267	Symbol	* * op -> operands		443169						
ANR	443268	Symbol	l		443169						
ANR	443269	Symbol	* * op		443169						
ANR	443270	Symbol	* op -> operands		443169						
ANR	443271	Symbol	op -> operands_count		443169						
ANR	443272	Symbol	* op -> operands [ 0 ] . regs		443169						
ANR	443273	Symbol	op -> operands [ 0 ] . type		443169						
ANR	443274	Symbol	* * * op		443169						
ANR	443275	Symbol	op -> operands		443169						
ANR	443276	Symbol	OT_MEMORY		443169						
ANR	443277	Symbol	* data		443169						
ANR	443278	Symbol	op -> operands [ 0 ] . regs		443169						
ANR	443279	Symbol	OT_DWORD		443169						
ANR	443280	Function	opfsave	3731:0:93332:93693							
ANR	443281	FunctionDef	"opfsave (RAsm * a , ut8 * data , const Opcode * op)"		443280	0					
ANR	443282	CompoundStatement		3731:57:93389:93693	443280	0					
ANR	443283	IdentifierDeclStatement	int l = 0 ;	3732:1:93392:93401	443280	0	True				
ANR	443284	IdentifierDecl	l = 0		443280	0					
ANR	443285	IdentifierDeclType	int		443280	0					
ANR	443286	Identifier	l		443280	1					
ANR	443287	AssignmentExpression	l = 0		443280	2		=			
ANR	443288	Identifier	l		443280	0					
ANR	443289	PrimaryExpression	0		443280	1					
ANR	443290	SwitchStatement	switch ( op -> operands_count )		443280	1					
ANR	443291	Condition	op -> operands_count	3733:9:93412:93429	443280	0	True				
ANR	443292	PtrMemberAccess	op -> operands_count		443280	0					
ANR	443293	Identifier	op		443280	0					
ANR	443294	Identifier	operands_count		443280	1					
ANR	443295	CompoundStatement		3:29:42:42	443280	1					
ANR	443296	Label	case 1 :	3734:1:93435:93441	443280	0	True				
ANR	443297	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD )		443280	1					
ANR	443298	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD	3735:7:93450:93523	443280	0	True				
ANR	443299	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD		443280	0		&&			
ANR	443300	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443280	0		&			
ANR	443301	MemberAccess	op -> operands [ 0 ] . type		443280	0					
ANR	443302	ArrayIndexing	op -> operands [ 0 ]		443280	0					
ANR	443303	PtrMemberAccess	op -> operands		443280	0					
ANR	443304	Identifier	op		443280	0					
ANR	443305	Identifier	operands		443280	1					
ANR	443306	PrimaryExpression	0		443280	1					
ANR	443307	Identifier	type		443280	1					
ANR	443308	Identifier	OT_MEMORY		443280	1					
ANR	443309	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		443280	1		&			
ANR	443310	MemberAccess	op -> operands [ 0 ] . type		443280	0					
ANR	443311	ArrayIndexing	op -> operands [ 0 ]		443280	0					
ANR	443312	PtrMemberAccess	op -> operands		443280	0					
ANR	443313	Identifier	op		443280	0					
ANR	443314	Identifier	operands		443280	1					
ANR	443315	PrimaryExpression	0		443280	1					
ANR	443316	Identifier	type		443280	1					
ANR	443317	Identifier	OT_DWORD		443280	1					
ANR	443318	CompoundStatement		6:41:137:137	443280	1					
ANR	443319	ExpressionStatement	data [ l ++ ] = 0x9b	3737:3:93532:93548	443280	0	True				
ANR	443320	AssignmentExpression	data [ l ++ ] = 0x9b		443280	0		=			
ANR	443321	ArrayIndexing	data [ l ++ ]		443280	0					
ANR	443322	Identifier	data		443280	0					
ANR	443323	PostIncDecOperationExpression	l ++		443280	1					
ANR	443324	Identifier	l		443280	0					
ANR	443325	IncDec	++		443280	1					
ANR	443326	PrimaryExpression	0x9b		443280	1					
ANR	443327	ExpressionStatement	data [ l ++ ] = 0xdd	3738:3:93553:93569	443280	1	True				
ANR	443328	AssignmentExpression	data [ l ++ ] = 0xdd		443280	0		=			
ANR	443329	ArrayIndexing	data [ l ++ ]		443280	0					
ANR	443330	Identifier	data		443280	0					
ANR	443331	PostIncDecOperationExpression	l ++		443280	1					
ANR	443332	Identifier	l		443280	0					
ANR	443333	IncDec	++		443280	1					
ANR	443334	PrimaryExpression	0xdd		443280	1					
ANR	443335	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3739:3:93574:93616	443280	2	True				
ANR	443336	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		443280	0		=			
ANR	443337	ArrayIndexing	data [ l ++ ]		443280	0					
ANR	443338	Identifier	data		443280	0					
ANR	443339	PostIncDecOperationExpression	l ++		443280	1					
ANR	443340	Identifier	l		443280	0					
ANR	443341	IncDec	++		443280	1					
ANR	443342	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		443280	1		|			
ANR	443343	PrimaryExpression	0x30		443280	0					
ANR	443344	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443280	1					
ANR	443345	MemberAccess	op -> operands [ 0 ] . regs		443280	0					
ANR	443346	ArrayIndexing	op -> operands [ 0 ]		443280	0					
ANR	443347	PtrMemberAccess	op -> operands		443280	0					
ANR	443348	Identifier	op		443280	0					
ANR	443349	Identifier	operands		443280	1					
ANR	443350	PrimaryExpression	0		443280	1					
ANR	443351	Identifier	regs		443280	1					
ANR	443352	PrimaryExpression	0		443280	1					
ANR	443353	ElseStatement	else		443280	0					
ANR	443354	CompoundStatement		10:9:237:237	443280	0					
ANR	443355	ReturnStatement	return - 1 ;	3741:3:93632:93641	443280	0	True				
ANR	443356	UnaryOperationExpression	- 1		443280	0					
ANR	443357	UnaryOperator	-		443280	0					
ANR	443358	PrimaryExpression	1		443280	1					
ANR	443359	BreakStatement	break ;	3743:2:93649:93654	443280	2	True				
ANR	443360	Label	default :	3744:1:93657:93664	443280	3	True				
ANR	443361	Identifier	default		443280	0					
ANR	443362	ReturnStatement	return - 1 ;	3745:2:93668:93677	443280	4	True				
ANR	443363	UnaryOperationExpression	- 1		443280	0					
ANR	443364	UnaryOperator	-		443280	0					
ANR	443365	PrimaryExpression	1		443280	1					
ANR	443366	ReturnStatement	return l ;	3747:1:93683:93691	443280	2	True				
ANR	443367	Identifier	l		443280	0					
ANR	443368	ReturnType	static int		443280	1					
ANR	443369	Identifier	opfsave		443280	2					
ANR	443370	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443280	3					
ANR	443371	Parameter	RAsm * a	3731:19:93351:93357	443280	0	True				
ANR	443372	ParameterType	RAsm *		443280	0					
ANR	443373	Identifier	a		443280	1					
ANR	443374	Parameter	ut8 * data	3731:28:93360:93368	443280	1	True				
ANR	443375	ParameterType	ut8 *		443280	0					
ANR	443376	Identifier	data		443280	1					
ANR	443377	Parameter	const Opcode * op	3731:39:93371:93386	443280	2	True				
ANR	443378	ParameterType	const Opcode *		443280	0					
ANR	443379	Identifier	op		443280	1					
ANR	443380	CFGEntryNode	ENTRY		443280		True				
ANR	443381	CFGExitNode	EXIT		443280		True				
ANR	443382	Symbol	a		443280						
ANR	443383	Symbol	op		443280						
ANR	443384	Symbol	data		443280						
ANR	443385	Symbol	* op		443280						
ANR	443386	Symbol	* * op -> operands		443280						
ANR	443387	Symbol	l		443280						
ANR	443388	Symbol	* * op		443280						
ANR	443389	Symbol	* op -> operands		443280						
ANR	443390	Symbol	op -> operands_count		443280						
ANR	443391	Symbol	* op -> operands [ 0 ] . regs		443280						
ANR	443392	Symbol	op -> operands [ 0 ] . type		443280						
ANR	443393	Symbol	* * * op		443280						
ANR	443394	Symbol	op -> operands		443280						
ANR	443395	Symbol	OT_MEMORY		443280						
ANR	443396	Symbol	* data		443280						
ANR	443397	Symbol	op -> operands [ 0 ] . regs		443280						
ANR	443398	Symbol	OT_DWORD		443280						
ANR	443399	Function	oplldt	3750:0:93696:94119							
ANR	443400	FunctionDef	"oplldt (RAsm * a , ut8 * data , const Opcode * op)"		443399	0					
ANR	443401	CompoundStatement		3750:56:93752:94119	443399	0					
ANR	443402	IdentifierDeclStatement	int l = 0 ;	3751:1:93755:93764	443399	0	True				
ANR	443403	IdentifierDecl	l = 0		443399	0					
ANR	443404	IdentifierDeclType	int		443399	0					
ANR	443405	Identifier	l		443399	1					
ANR	443406	AssignmentExpression	l = 0		443399	2		=			
ANR	443407	Identifier	l		443399	0					
ANR	443408	PrimaryExpression	0		443399	1					
ANR	443409	SwitchStatement	switch ( op -> operands_count )		443399	1					
ANR	443410	Condition	op -> operands_count	3752:9:93775:93792	443399	0	True				
ANR	443411	PtrMemberAccess	op -> operands_count		443399	0					
ANR	443412	Identifier	op		443399	0					
ANR	443413	Identifier	operands_count		443399	1					
ANR	443414	CompoundStatement		3:29:42:42	443399	1					
ANR	443415	Label	case 1 :	3753:1:93798:93804	443399	0	True				
ANR	443416	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		443399	1					
ANR	443417	Condition	op -> operands [ 0 ] . type & OT_WORD	3754:7:93813:93842	443399	0	True				
ANR	443418	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		443399	0		&			
ANR	443419	MemberAccess	op -> operands [ 0 ] . type		443399	0					
ANR	443420	ArrayIndexing	op -> operands [ 0 ]		443399	0					
ANR	443421	PtrMemberAccess	op -> operands		443399	0					
ANR	443422	Identifier	op		443399	0					
ANR	443423	Identifier	operands		443399	1					
ANR	443424	PrimaryExpression	0		443399	1					
ANR	443425	Identifier	type		443399	1					
ANR	443426	Identifier	OT_WORD		443399	1					
ANR	443427	CompoundStatement		5:40:93:93	443399	1					
ANR	443428	ExpressionStatement	data [ l ++ ] = 0x0f	3755:3:93851:93867	443399	0	True				
ANR	443429	AssignmentExpression	data [ l ++ ] = 0x0f		443399	0		=			
ANR	443430	ArrayIndexing	data [ l ++ ]		443399	0					
ANR	443431	Identifier	data		443399	0					
ANR	443432	PostIncDecOperationExpression	l ++		443399	1					
ANR	443433	Identifier	l		443399	0					
ANR	443434	IncDec	++		443399	1					
ANR	443435	PrimaryExpression	0x0f		443399	1					
ANR	443436	ExpressionStatement	data [ l ++ ] = 0x00	3756:3:93872:93888	443399	1	True				
ANR	443437	AssignmentExpression	data [ l ++ ] = 0x00		443399	0		=			
ANR	443438	ArrayIndexing	data [ l ++ ]		443399	0					
ANR	443439	Identifier	data		443399	0					
ANR	443440	PostIncDecOperationExpression	l ++		443399	1					
ANR	443441	Identifier	l		443399	0					
ANR	443442	IncDec	++		443399	1					
ANR	443443	PrimaryExpression	0x00		443399	1					
ANR	443444	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		443399	2					
ANR	443445	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3757:8:93898:93929	443399	0	True				
ANR	443446	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443399	0		&			
ANR	443447	MemberAccess	op -> operands [ 0 ] . type		443399	0					
ANR	443448	ArrayIndexing	op -> operands [ 0 ]		443399	0					
ANR	443449	PtrMemberAccess	op -> operands		443399	0					
ANR	443450	Identifier	op		443399	0					
ANR	443451	Identifier	operands		443399	1					
ANR	443452	PrimaryExpression	0		443399	1					
ANR	443453	Identifier	type		443399	1					
ANR	443454	Identifier	OT_MEMORY		443399	1					
ANR	443455	CompoundStatement		8:43:180:180	443399	1					
ANR	443456	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3758:4:93939:93981	443399	0	True				
ANR	443457	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		443399	0		=			
ANR	443458	ArrayIndexing	data [ l ++ ]		443399	0					
ANR	443459	Identifier	data		443399	0					
ANR	443460	PostIncDecOperationExpression	l ++		443399	1					
ANR	443461	Identifier	l		443399	0					
ANR	443462	IncDec	++		443399	1					
ANR	443463	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		443399	1		|			
ANR	443464	PrimaryExpression	0x10		443399	0					
ANR	443465	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443399	1					
ANR	443466	MemberAccess	op -> operands [ 0 ] . regs		443399	0					
ANR	443467	ArrayIndexing	op -> operands [ 0 ]		443399	0					
ANR	443468	PtrMemberAccess	op -> operands		443399	0					
ANR	443469	Identifier	op		443399	0					
ANR	443470	Identifier	operands		443399	1					
ANR	443471	PrimaryExpression	0		443399	1					
ANR	443472	Identifier	regs		443399	1					
ANR	443473	PrimaryExpression	0		443399	1					
ANR	443474	ElseStatement	else		443399	0					
ANR	443475	CompoundStatement		10:10:240:240	443399	0					
ANR	443476	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg	3760:4:93999:94037	443399	0	True				
ANR	443477	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg		443399	0		=			
ANR	443478	ArrayIndexing	data [ l ++ ]		443399	0					
ANR	443479	Identifier	data		443399	0					
ANR	443480	PostIncDecOperationExpression	l ++		443399	1					
ANR	443481	Identifier	l		443399	0					
ANR	443482	IncDec	++		443399	1					
ANR	443483	InclusiveOrExpression	0xd0 | op -> operands [ 0 ] . reg		443399	1		|			
ANR	443484	PrimaryExpression	0xd0		443399	0					
ANR	443485	MemberAccess	op -> operands [ 0 ] . reg		443399	1					
ANR	443486	ArrayIndexing	op -> operands [ 0 ]		443399	0					
ANR	443487	PtrMemberAccess	op -> operands		443399	0					
ANR	443488	Identifier	op		443399	0					
ANR	443489	Identifier	operands		443399	1					
ANR	443490	PrimaryExpression	0		443399	1					
ANR	443491	Identifier	reg		443399	1					
ANR	443492	ElseStatement	else		443399	0					
ANR	443493	CompoundStatement		13:9:300:300	443399	0					
ANR	443494	ReturnStatement	return - 1 ;	3763:3:94058:94067	443399	0	True				
ANR	443495	UnaryOperationExpression	- 1		443399	0					
ANR	443496	UnaryOperator	-		443399	0					
ANR	443497	PrimaryExpression	1		443399	1					
ANR	443498	BreakStatement	break ;	3765:2:94075:94080	443399	2	True				
ANR	443499	Label	default :	3766:1:94083:94090	443399	3	True				
ANR	443500	Identifier	default		443399	0					
ANR	443501	ReturnStatement	return - 1 ;	3767:2:94094:94103	443399	4	True				
ANR	443502	UnaryOperationExpression	- 1		443399	0					
ANR	443503	UnaryOperator	-		443399	0					
ANR	443504	PrimaryExpression	1		443399	1					
ANR	443505	ReturnStatement	return l ;	3769:1:94109:94117	443399	2	True				
ANR	443506	Identifier	l		443399	0					
ANR	443507	ReturnType	static int		443399	1					
ANR	443508	Identifier	oplldt		443399	2					
ANR	443509	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443399	3					
ANR	443510	Parameter	RAsm * a	3750:18:93714:93720	443399	0	True				
ANR	443511	ParameterType	RAsm *		443399	0					
ANR	443512	Identifier	a		443399	1					
ANR	443513	Parameter	ut8 * data	3750:27:93723:93731	443399	1	True				
ANR	443514	ParameterType	ut8 *		443399	0					
ANR	443515	Identifier	data		443399	1					
ANR	443516	Parameter	const Opcode * op	3750:38:93734:93749	443399	2	True				
ANR	443517	ParameterType	const Opcode *		443399	0					
ANR	443518	Identifier	op		443399	1					
ANR	443519	CFGEntryNode	ENTRY		443399		True				
ANR	443520	CFGExitNode	EXIT		443399		True				
ANR	443521	Symbol	a		443399						
ANR	443522	Symbol	op		443399						
ANR	443523	Symbol	OT_WORD		443399						
ANR	443524	Symbol	data		443399						
ANR	443525	Symbol	* op		443399						
ANR	443526	Symbol	* * op -> operands		443399						
ANR	443527	Symbol	l		443399						
ANR	443528	Symbol	* * op		443399						
ANR	443529	Symbol	* op -> operands		443399						
ANR	443530	Symbol	op -> operands_count		443399						
ANR	443531	Symbol	* op -> operands [ 0 ] . regs		443399						
ANR	443532	Symbol	op -> operands [ 0 ] . type		443399						
ANR	443533	Symbol	* * * op		443399						
ANR	443534	Symbol	op -> operands [ 0 ] . reg		443399						
ANR	443535	Symbol	op -> operands		443399						
ANR	443536	Symbol	* data		443399						
ANR	443537	Symbol	OT_MEMORY		443399						
ANR	443538	Symbol	op -> operands [ 0 ] . regs		443399						
ANR	443539	Function	oplmsw	3772:0:94122:94545							
ANR	443540	FunctionDef	"oplmsw (RAsm * a , ut8 * data , const Opcode * op)"		443539	0					
ANR	443541	CompoundStatement		3772:56:94178:94545	443539	0					
ANR	443542	IdentifierDeclStatement	int l = 0 ;	3773:1:94181:94190	443539	0	True				
ANR	443543	IdentifierDecl	l = 0		443539	0					
ANR	443544	IdentifierDeclType	int		443539	0					
ANR	443545	Identifier	l		443539	1					
ANR	443546	AssignmentExpression	l = 0		443539	2		=			
ANR	443547	Identifier	l		443539	0					
ANR	443548	PrimaryExpression	0		443539	1					
ANR	443549	SwitchStatement	switch ( op -> operands_count )		443539	1					
ANR	443550	Condition	op -> operands_count	3774:9:94201:94218	443539	0	True				
ANR	443551	PtrMemberAccess	op -> operands_count		443539	0					
ANR	443552	Identifier	op		443539	0					
ANR	443553	Identifier	operands_count		443539	1					
ANR	443554	CompoundStatement		3:29:42:42	443539	1					
ANR	443555	Label	case 1 :	3775:1:94224:94230	443539	0	True				
ANR	443556	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		443539	1					
ANR	443557	Condition	op -> operands [ 0 ] . type & OT_WORD	3776:7:94239:94268	443539	0	True				
ANR	443558	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		443539	0		&			
ANR	443559	MemberAccess	op -> operands [ 0 ] . type		443539	0					
ANR	443560	ArrayIndexing	op -> operands [ 0 ]		443539	0					
ANR	443561	PtrMemberAccess	op -> operands		443539	0					
ANR	443562	Identifier	op		443539	0					
ANR	443563	Identifier	operands		443539	1					
ANR	443564	PrimaryExpression	0		443539	1					
ANR	443565	Identifier	type		443539	1					
ANR	443566	Identifier	OT_WORD		443539	1					
ANR	443567	CompoundStatement		5:40:93:93	443539	1					
ANR	443568	ExpressionStatement	data [ l ++ ] = 0x0f	3777:3:94277:94293	443539	0	True				
ANR	443569	AssignmentExpression	data [ l ++ ] = 0x0f		443539	0		=			
ANR	443570	ArrayIndexing	data [ l ++ ]		443539	0					
ANR	443571	Identifier	data		443539	0					
ANR	443572	PostIncDecOperationExpression	l ++		443539	1					
ANR	443573	Identifier	l		443539	0					
ANR	443574	IncDec	++		443539	1					
ANR	443575	PrimaryExpression	0x0f		443539	1					
ANR	443576	ExpressionStatement	data [ l ++ ] = 0x01	3778:3:94298:94314	443539	1	True				
ANR	443577	AssignmentExpression	data [ l ++ ] = 0x01		443539	0		=			
ANR	443578	ArrayIndexing	data [ l ++ ]		443539	0					
ANR	443579	Identifier	data		443539	0					
ANR	443580	PostIncDecOperationExpression	l ++		443539	1					
ANR	443581	Identifier	l		443539	0					
ANR	443582	IncDec	++		443539	1					
ANR	443583	PrimaryExpression	0x01		443539	1					
ANR	443584	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		443539	2					
ANR	443585	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3779:8:94324:94355	443539	0	True				
ANR	443586	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443539	0		&			
ANR	443587	MemberAccess	op -> operands [ 0 ] . type		443539	0					
ANR	443588	ArrayIndexing	op -> operands [ 0 ]		443539	0					
ANR	443589	PtrMemberAccess	op -> operands		443539	0					
ANR	443590	Identifier	op		443539	0					
ANR	443591	Identifier	operands		443539	1					
ANR	443592	PrimaryExpression	0		443539	1					
ANR	443593	Identifier	type		443539	1					
ANR	443594	Identifier	OT_MEMORY		443539	1					
ANR	443595	CompoundStatement		8:43:180:180	443539	1					
ANR	443596	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3780:4:94365:94407	443539	0	True				
ANR	443597	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		443539	0		=			
ANR	443598	ArrayIndexing	data [ l ++ ]		443539	0					
ANR	443599	Identifier	data		443539	0					
ANR	443600	PostIncDecOperationExpression	l ++		443539	1					
ANR	443601	Identifier	l		443539	0					
ANR	443602	IncDec	++		443539	1					
ANR	443603	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		443539	1		|			
ANR	443604	PrimaryExpression	0x30		443539	0					
ANR	443605	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443539	1					
ANR	443606	MemberAccess	op -> operands [ 0 ] . regs		443539	0					
ANR	443607	ArrayIndexing	op -> operands [ 0 ]		443539	0					
ANR	443608	PtrMemberAccess	op -> operands		443539	0					
ANR	443609	Identifier	op		443539	0					
ANR	443610	Identifier	operands		443539	1					
ANR	443611	PrimaryExpression	0		443539	1					
ANR	443612	Identifier	regs		443539	1					
ANR	443613	PrimaryExpression	0		443539	1					
ANR	443614	ElseStatement	else		443539	0					
ANR	443615	CompoundStatement		10:10:240:240	443539	0					
ANR	443616	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	3782:4:94425:94463	443539	0	True				
ANR	443617	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		443539	0		=			
ANR	443618	ArrayIndexing	data [ l ++ ]		443539	0					
ANR	443619	Identifier	data		443539	0					
ANR	443620	PostIncDecOperationExpression	l ++		443539	1					
ANR	443621	Identifier	l		443539	0					
ANR	443622	IncDec	++		443539	1					
ANR	443623	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		443539	1		|			
ANR	443624	PrimaryExpression	0xf0		443539	0					
ANR	443625	MemberAccess	op -> operands [ 0 ] . reg		443539	1					
ANR	443626	ArrayIndexing	op -> operands [ 0 ]		443539	0					
ANR	443627	PtrMemberAccess	op -> operands		443539	0					
ANR	443628	Identifier	op		443539	0					
ANR	443629	Identifier	operands		443539	1					
ANR	443630	PrimaryExpression	0		443539	1					
ANR	443631	Identifier	reg		443539	1					
ANR	443632	ElseStatement	else		443539	0					
ANR	443633	CompoundStatement		13:9:300:300	443539	0					
ANR	443634	ReturnStatement	return - 1 ;	3785:3:94484:94493	443539	0	True				
ANR	443635	UnaryOperationExpression	- 1		443539	0					
ANR	443636	UnaryOperator	-		443539	0					
ANR	443637	PrimaryExpression	1		443539	1					
ANR	443638	BreakStatement	break ;	3787:2:94501:94506	443539	2	True				
ANR	443639	Label	default :	3788:1:94509:94516	443539	3	True				
ANR	443640	Identifier	default		443539	0					
ANR	443641	ReturnStatement	return - 1 ;	3789:2:94520:94529	443539	4	True				
ANR	443642	UnaryOperationExpression	- 1		443539	0					
ANR	443643	UnaryOperator	-		443539	0					
ANR	443644	PrimaryExpression	1		443539	1					
ANR	443645	ReturnStatement	return l ;	3791:1:94535:94543	443539	2	True				
ANR	443646	Identifier	l		443539	0					
ANR	443647	ReturnType	static int		443539	1					
ANR	443648	Identifier	oplmsw		443539	2					
ANR	443649	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443539	3					
ANR	443650	Parameter	RAsm * a	3772:18:94140:94146	443539	0	True				
ANR	443651	ParameterType	RAsm *		443539	0					
ANR	443652	Identifier	a		443539	1					
ANR	443653	Parameter	ut8 * data	3772:27:94149:94157	443539	1	True				
ANR	443654	ParameterType	ut8 *		443539	0					
ANR	443655	Identifier	data		443539	1					
ANR	443656	Parameter	const Opcode * op	3772:38:94160:94175	443539	2	True				
ANR	443657	ParameterType	const Opcode *		443539	0					
ANR	443658	Identifier	op		443539	1					
ANR	443659	CFGEntryNode	ENTRY		443539		True				
ANR	443660	CFGExitNode	EXIT		443539		True				
ANR	443661	Symbol	a		443539						
ANR	443662	Symbol	op		443539						
ANR	443663	Symbol	OT_WORD		443539						
ANR	443664	Symbol	data		443539						
ANR	443665	Symbol	* op		443539						
ANR	443666	Symbol	* * op -> operands		443539						
ANR	443667	Symbol	l		443539						
ANR	443668	Symbol	* * op		443539						
ANR	443669	Symbol	* op -> operands		443539						
ANR	443670	Symbol	op -> operands_count		443539						
ANR	443671	Symbol	* op -> operands [ 0 ] . regs		443539						
ANR	443672	Symbol	op -> operands [ 0 ] . type		443539						
ANR	443673	Symbol	* * * op		443539						
ANR	443674	Symbol	op -> operands [ 0 ] . reg		443539						
ANR	443675	Symbol	op -> operands		443539						
ANR	443676	Symbol	* data		443539						
ANR	443677	Symbol	OT_MEMORY		443539						
ANR	443678	Symbol	op -> operands [ 0 ] . regs		443539						
ANR	443679	Function	oplgdt	3794:0:94548:94866							
ANR	443680	FunctionDef	"oplgdt (RAsm * a , ut8 * data , const Opcode * op)"		443679	0					
ANR	443681	CompoundStatement		3794:56:94604:94866	443679	0					
ANR	443682	IdentifierDeclStatement	int l = 0 ;	3795:1:94607:94616	443679	0	True				
ANR	443683	IdentifierDecl	l = 0		443679	0					
ANR	443684	IdentifierDeclType	int		443679	0					
ANR	443685	Identifier	l		443679	1					
ANR	443686	AssignmentExpression	l = 0		443679	2		=			
ANR	443687	Identifier	l		443679	0					
ANR	443688	PrimaryExpression	0		443679	1					
ANR	443689	SwitchStatement	switch ( op -> operands_count )		443679	1					
ANR	443690	Condition	op -> operands_count	3796:9:94627:94644	443679	0	True				
ANR	443691	PtrMemberAccess	op -> operands_count		443679	0					
ANR	443692	Identifier	op		443679	0					
ANR	443693	Identifier	operands_count		443679	1					
ANR	443694	CompoundStatement		3:29:42:42	443679	1					
ANR	443695	Label	case 1 :	3797:1:94650:94656	443679	0	True				
ANR	443696	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		443679	1					
ANR	443697	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3798:7:94665:94696	443679	0	True				
ANR	443698	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443679	0		&			
ANR	443699	MemberAccess	op -> operands [ 0 ] . type		443679	0					
ANR	443700	ArrayIndexing	op -> operands [ 0 ]		443679	0					
ANR	443701	PtrMemberAccess	op -> operands		443679	0					
ANR	443702	Identifier	op		443679	0					
ANR	443703	Identifier	operands		443679	1					
ANR	443704	PrimaryExpression	0		443679	1					
ANR	443705	Identifier	type		443679	1					
ANR	443706	Identifier	OT_MEMORY		443679	1					
ANR	443707	CompoundStatement		5:42:95:95	443679	1					
ANR	443708	ExpressionStatement	data [ l ++ ] = 0x0f	3799:3:94705:94721	443679	0	True				
ANR	443709	AssignmentExpression	data [ l ++ ] = 0x0f		443679	0		=			
ANR	443710	ArrayIndexing	data [ l ++ ]		443679	0					
ANR	443711	Identifier	data		443679	0					
ANR	443712	PostIncDecOperationExpression	l ++		443679	1					
ANR	443713	Identifier	l		443679	0					
ANR	443714	IncDec	++		443679	1					
ANR	443715	PrimaryExpression	0x0f		443679	1					
ANR	443716	ExpressionStatement	data [ l ++ ] = 0x01	3800:3:94726:94742	443679	1	True				
ANR	443717	AssignmentExpression	data [ l ++ ] = 0x01		443679	0		=			
ANR	443718	ArrayIndexing	data [ l ++ ]		443679	0					
ANR	443719	Identifier	data		443679	0					
ANR	443720	PostIncDecOperationExpression	l ++		443679	1					
ANR	443721	Identifier	l		443679	0					
ANR	443722	IncDec	++		443679	1					
ANR	443723	PrimaryExpression	0x01		443679	1					
ANR	443724	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3801:3:94747:94789	443679	2	True				
ANR	443725	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		443679	0		=			
ANR	443726	ArrayIndexing	data [ l ++ ]		443679	0					
ANR	443727	Identifier	data		443679	0					
ANR	443728	PostIncDecOperationExpression	l ++		443679	1					
ANR	443729	Identifier	l		443679	0					
ANR	443730	IncDec	++		443679	1					
ANR	443731	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		443679	1		|			
ANR	443732	PrimaryExpression	0x10		443679	0					
ANR	443733	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443679	1					
ANR	443734	MemberAccess	op -> operands [ 0 ] . regs		443679	0					
ANR	443735	ArrayIndexing	op -> operands [ 0 ]		443679	0					
ANR	443736	PtrMemberAccess	op -> operands		443679	0					
ANR	443737	Identifier	op		443679	0					
ANR	443738	Identifier	operands		443679	1					
ANR	443739	PrimaryExpression	0		443679	1					
ANR	443740	Identifier	regs		443679	1					
ANR	443741	PrimaryExpression	0		443679	1					
ANR	443742	ElseStatement	else		443679	0					
ANR	443743	CompoundStatement		9:9:195:195	443679	0					
ANR	443744	ReturnStatement	return - 1 ;	3803:3:94805:94814	443679	0	True				
ANR	443745	UnaryOperationExpression	- 1		443679	0					
ANR	443746	UnaryOperator	-		443679	0					
ANR	443747	PrimaryExpression	1		443679	1					
ANR	443748	BreakStatement	break ;	3805:2:94822:94827	443679	2	True				
ANR	443749	Label	default :	3806:1:94830:94837	443679	3	True				
ANR	443750	Identifier	default		443679	0					
ANR	443751	ReturnStatement	return - 1 ;	3807:2:94841:94850	443679	4	True				
ANR	443752	UnaryOperationExpression	- 1		443679	0					
ANR	443753	UnaryOperator	-		443679	0					
ANR	443754	PrimaryExpression	1		443679	1					
ANR	443755	ReturnStatement	return l ;	3809:1:94856:94864	443679	2	True				
ANR	443756	Identifier	l		443679	0					
ANR	443757	ReturnType	static int		443679	1					
ANR	443758	Identifier	oplgdt		443679	2					
ANR	443759	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443679	3					
ANR	443760	Parameter	RAsm * a	3794:18:94566:94572	443679	0	True				
ANR	443761	ParameterType	RAsm *		443679	0					
ANR	443762	Identifier	a		443679	1					
ANR	443763	Parameter	ut8 * data	3794:27:94575:94583	443679	1	True				
ANR	443764	ParameterType	ut8 *		443679	0					
ANR	443765	Identifier	data		443679	1					
ANR	443766	Parameter	const Opcode * op	3794:38:94586:94601	443679	2	True				
ANR	443767	ParameterType	const Opcode *		443679	0					
ANR	443768	Identifier	op		443679	1					
ANR	443769	CFGEntryNode	ENTRY		443679		True				
ANR	443770	CFGExitNode	EXIT		443679		True				
ANR	443771	Symbol	a		443679						
ANR	443772	Symbol	op		443679						
ANR	443773	Symbol	data		443679						
ANR	443774	Symbol	* op		443679						
ANR	443775	Symbol	* * op -> operands		443679						
ANR	443776	Symbol	l		443679						
ANR	443777	Symbol	* * op		443679						
ANR	443778	Symbol	* op -> operands		443679						
ANR	443779	Symbol	op -> operands_count		443679						
ANR	443780	Symbol	* op -> operands [ 0 ] . regs		443679						
ANR	443781	Symbol	op -> operands [ 0 ] . type		443679						
ANR	443782	Symbol	* * * op		443679						
ANR	443783	Symbol	op -> operands		443679						
ANR	443784	Symbol	OT_MEMORY		443679						
ANR	443785	Symbol	* data		443679						
ANR	443786	Symbol	op -> operands [ 0 ] . regs		443679						
ANR	443787	Function	oplidt	3812:0:94869:95187							
ANR	443788	FunctionDef	"oplidt (RAsm * a , ut8 * data , const Opcode * op)"		443787	0					
ANR	443789	CompoundStatement		3812:56:94925:95187	443787	0					
ANR	443790	IdentifierDeclStatement	int l = 0 ;	3813:1:94928:94937	443787	0	True				
ANR	443791	IdentifierDecl	l = 0		443787	0					
ANR	443792	IdentifierDeclType	int		443787	0					
ANR	443793	Identifier	l		443787	1					
ANR	443794	AssignmentExpression	l = 0		443787	2		=			
ANR	443795	Identifier	l		443787	0					
ANR	443796	PrimaryExpression	0		443787	1					
ANR	443797	SwitchStatement	switch ( op -> operands_count )		443787	1					
ANR	443798	Condition	op -> operands_count	3814:9:94948:94965	443787	0	True				
ANR	443799	PtrMemberAccess	op -> operands_count		443787	0					
ANR	443800	Identifier	op		443787	0					
ANR	443801	Identifier	operands_count		443787	1					
ANR	443802	CompoundStatement		3:29:42:42	443787	1					
ANR	443803	Label	case 1 :	3815:1:94971:94977	443787	0	True				
ANR	443804	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		443787	1					
ANR	443805	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3816:7:94986:95017	443787	0	True				
ANR	443806	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443787	0		&			
ANR	443807	MemberAccess	op -> operands [ 0 ] . type		443787	0					
ANR	443808	ArrayIndexing	op -> operands [ 0 ]		443787	0					
ANR	443809	PtrMemberAccess	op -> operands		443787	0					
ANR	443810	Identifier	op		443787	0					
ANR	443811	Identifier	operands		443787	1					
ANR	443812	PrimaryExpression	0		443787	1					
ANR	443813	Identifier	type		443787	1					
ANR	443814	Identifier	OT_MEMORY		443787	1					
ANR	443815	CompoundStatement		5:42:95:95	443787	1					
ANR	443816	ExpressionStatement	data [ l ++ ] = 0x0f	3817:3:95026:95042	443787	0	True				
ANR	443817	AssignmentExpression	data [ l ++ ] = 0x0f		443787	0		=			
ANR	443818	ArrayIndexing	data [ l ++ ]		443787	0					
ANR	443819	Identifier	data		443787	0					
ANR	443820	PostIncDecOperationExpression	l ++		443787	1					
ANR	443821	Identifier	l		443787	0					
ANR	443822	IncDec	++		443787	1					
ANR	443823	PrimaryExpression	0x0f		443787	1					
ANR	443824	ExpressionStatement	data [ l ++ ] = 0x01	3818:3:95047:95063	443787	1	True				
ANR	443825	AssignmentExpression	data [ l ++ ] = 0x01		443787	0		=			
ANR	443826	ArrayIndexing	data [ l ++ ]		443787	0					
ANR	443827	Identifier	data		443787	0					
ANR	443828	PostIncDecOperationExpression	l ++		443787	1					
ANR	443829	Identifier	l		443787	0					
ANR	443830	IncDec	++		443787	1					
ANR	443831	PrimaryExpression	0x01		443787	1					
ANR	443832	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3819:3:95068:95110	443787	2	True				
ANR	443833	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		443787	0		=			
ANR	443834	ArrayIndexing	data [ l ++ ]		443787	0					
ANR	443835	Identifier	data		443787	0					
ANR	443836	PostIncDecOperationExpression	l ++		443787	1					
ANR	443837	Identifier	l		443787	0					
ANR	443838	IncDec	++		443787	1					
ANR	443839	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		443787	1		|			
ANR	443840	PrimaryExpression	0x18		443787	0					
ANR	443841	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443787	1					
ANR	443842	MemberAccess	op -> operands [ 0 ] . regs		443787	0					
ANR	443843	ArrayIndexing	op -> operands [ 0 ]		443787	0					
ANR	443844	PtrMemberAccess	op -> operands		443787	0					
ANR	443845	Identifier	op		443787	0					
ANR	443846	Identifier	operands		443787	1					
ANR	443847	PrimaryExpression	0		443787	1					
ANR	443848	Identifier	regs		443787	1					
ANR	443849	PrimaryExpression	0		443787	1					
ANR	443850	ElseStatement	else		443787	0					
ANR	443851	CompoundStatement		9:9:195:195	443787	0					
ANR	443852	ReturnStatement	return - 1 ;	3821:3:95126:95135	443787	0	True				
ANR	443853	UnaryOperationExpression	- 1		443787	0					
ANR	443854	UnaryOperator	-		443787	0					
ANR	443855	PrimaryExpression	1		443787	1					
ANR	443856	BreakStatement	break ;	3823:2:95143:95148	443787	2	True				
ANR	443857	Label	default :	3824:1:95151:95158	443787	3	True				
ANR	443858	Identifier	default		443787	0					
ANR	443859	ReturnStatement	return - 1 ;	3825:2:95162:95171	443787	4	True				
ANR	443860	UnaryOperationExpression	- 1		443787	0					
ANR	443861	UnaryOperator	-		443787	0					
ANR	443862	PrimaryExpression	1		443787	1					
ANR	443863	ReturnStatement	return l ;	3827:1:95177:95185	443787	2	True				
ANR	443864	Identifier	l		443787	0					
ANR	443865	ReturnType	static int		443787	1					
ANR	443866	Identifier	oplidt		443787	2					
ANR	443867	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443787	3					
ANR	443868	Parameter	RAsm * a	3812:18:94887:94893	443787	0	True				
ANR	443869	ParameterType	RAsm *		443787	0					
ANR	443870	Identifier	a		443787	1					
ANR	443871	Parameter	ut8 * data	3812:27:94896:94904	443787	1	True				
ANR	443872	ParameterType	ut8 *		443787	0					
ANR	443873	Identifier	data		443787	1					
ANR	443874	Parameter	const Opcode * op	3812:38:94907:94922	443787	2	True				
ANR	443875	ParameterType	const Opcode *		443787	0					
ANR	443876	Identifier	op		443787	1					
ANR	443877	CFGEntryNode	ENTRY		443787		True				
ANR	443878	CFGExitNode	EXIT		443787		True				
ANR	443879	Symbol	a		443787						
ANR	443880	Symbol	op		443787						
ANR	443881	Symbol	data		443787						
ANR	443882	Symbol	* op		443787						
ANR	443883	Symbol	* * op -> operands		443787						
ANR	443884	Symbol	l		443787						
ANR	443885	Symbol	* * op		443787						
ANR	443886	Symbol	* op -> operands		443787						
ANR	443887	Symbol	op -> operands_count		443787						
ANR	443888	Symbol	* op -> operands [ 0 ] . regs		443787						
ANR	443889	Symbol	op -> operands [ 0 ] . type		443787						
ANR	443890	Symbol	* * * op		443787						
ANR	443891	Symbol	op -> operands		443787						
ANR	443892	Symbol	OT_MEMORY		443787						
ANR	443893	Symbol	* data		443787						
ANR	443894	Symbol	op -> operands [ 0 ] . regs		443787						
ANR	443895	Function	opsgdt	3830:0:95190:95508							
ANR	443896	FunctionDef	"opsgdt (RAsm * a , ut8 * data , const Opcode * op)"		443895	0					
ANR	443897	CompoundStatement		3830:56:95246:95508	443895	0					
ANR	443898	IdentifierDeclStatement	int l = 0 ;	3831:1:95249:95258	443895	0	True				
ANR	443899	IdentifierDecl	l = 0		443895	0					
ANR	443900	IdentifierDeclType	int		443895	0					
ANR	443901	Identifier	l		443895	1					
ANR	443902	AssignmentExpression	l = 0		443895	2		=			
ANR	443903	Identifier	l		443895	0					
ANR	443904	PrimaryExpression	0		443895	1					
ANR	443905	SwitchStatement	switch ( op -> operands_count )		443895	1					
ANR	443906	Condition	op -> operands_count	3832:9:95269:95286	443895	0	True				
ANR	443907	PtrMemberAccess	op -> operands_count		443895	0					
ANR	443908	Identifier	op		443895	0					
ANR	443909	Identifier	operands_count		443895	1					
ANR	443910	CompoundStatement		3:29:42:42	443895	1					
ANR	443911	Label	case 1 :	3833:1:95292:95298	443895	0	True				
ANR	443912	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		443895	1					
ANR	443913	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3834:7:95307:95338	443895	0	True				
ANR	443914	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		443895	0		&			
ANR	443915	MemberAccess	op -> operands [ 0 ] . type		443895	0					
ANR	443916	ArrayIndexing	op -> operands [ 0 ]		443895	0					
ANR	443917	PtrMemberAccess	op -> operands		443895	0					
ANR	443918	Identifier	op		443895	0					
ANR	443919	Identifier	operands		443895	1					
ANR	443920	PrimaryExpression	0		443895	1					
ANR	443921	Identifier	type		443895	1					
ANR	443922	Identifier	OT_MEMORY		443895	1					
ANR	443923	CompoundStatement		5:42:95:95	443895	1					
ANR	443924	ExpressionStatement	data [ l ++ ] = 0x0f	3835:3:95347:95363	443895	0	True				
ANR	443925	AssignmentExpression	data [ l ++ ] = 0x0f		443895	0		=			
ANR	443926	ArrayIndexing	data [ l ++ ]		443895	0					
ANR	443927	Identifier	data		443895	0					
ANR	443928	PostIncDecOperationExpression	l ++		443895	1					
ANR	443929	Identifier	l		443895	0					
ANR	443930	IncDec	++		443895	1					
ANR	443931	PrimaryExpression	0x0f		443895	1					
ANR	443932	ExpressionStatement	data [ l ++ ] = 0x01	3836:3:95368:95384	443895	1	True				
ANR	443933	AssignmentExpression	data [ l ++ ] = 0x01		443895	0		=			
ANR	443934	ArrayIndexing	data [ l ++ ]		443895	0					
ANR	443935	Identifier	data		443895	0					
ANR	443936	PostIncDecOperationExpression	l ++		443895	1					
ANR	443937	Identifier	l		443895	0					
ANR	443938	IncDec	++		443895	1					
ANR	443939	PrimaryExpression	0x01		443895	1					
ANR	443940	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	3837:3:95389:95431	443895	2	True				
ANR	443941	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		443895	0		=			
ANR	443942	ArrayIndexing	data [ l ++ ]		443895	0					
ANR	443943	Identifier	data		443895	0					
ANR	443944	PostIncDecOperationExpression	l ++		443895	1					
ANR	443945	Identifier	l		443895	0					
ANR	443946	IncDec	++		443895	1					
ANR	443947	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		443895	1		|			
ANR	443948	PrimaryExpression	0x00		443895	0					
ANR	443949	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		443895	1					
ANR	443950	MemberAccess	op -> operands [ 0 ] . regs		443895	0					
ANR	443951	ArrayIndexing	op -> operands [ 0 ]		443895	0					
ANR	443952	PtrMemberAccess	op -> operands		443895	0					
ANR	443953	Identifier	op		443895	0					
ANR	443954	Identifier	operands		443895	1					
ANR	443955	PrimaryExpression	0		443895	1					
ANR	443956	Identifier	regs		443895	1					
ANR	443957	PrimaryExpression	0		443895	1					
ANR	443958	ElseStatement	else		443895	0					
ANR	443959	CompoundStatement		9:9:195:195	443895	0					
ANR	443960	ReturnStatement	return - 1 ;	3839:3:95447:95456	443895	0	True				
ANR	443961	UnaryOperationExpression	- 1		443895	0					
ANR	443962	UnaryOperator	-		443895	0					
ANR	443963	PrimaryExpression	1		443895	1					
ANR	443964	BreakStatement	break ;	3841:2:95464:95469	443895	2	True				
ANR	443965	Label	default :	3842:1:95472:95479	443895	3	True				
ANR	443966	Identifier	default		443895	0					
ANR	443967	ReturnStatement	return - 1 ;	3843:2:95483:95492	443895	4	True				
ANR	443968	UnaryOperationExpression	- 1		443895	0					
ANR	443969	UnaryOperator	-		443895	0					
ANR	443970	PrimaryExpression	1		443895	1					
ANR	443971	ReturnStatement	return l ;	3845:1:95498:95506	443895	2	True				
ANR	443972	Identifier	l		443895	0					
ANR	443973	ReturnType	static int		443895	1					
ANR	443974	Identifier	opsgdt		443895	2					
ANR	443975	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		443895	3					
ANR	443976	Parameter	RAsm * a	3830:18:95208:95214	443895	0	True				
ANR	443977	ParameterType	RAsm *		443895	0					
ANR	443978	Identifier	a		443895	1					
ANR	443979	Parameter	ut8 * data	3830:27:95217:95225	443895	1	True				
ANR	443980	ParameterType	ut8 *		443895	0					
ANR	443981	Identifier	data		443895	1					
ANR	443982	Parameter	const Opcode * op	3830:38:95228:95243	443895	2	True				
ANR	443983	ParameterType	const Opcode *		443895	0					
ANR	443984	Identifier	op		443895	1					
ANR	443985	CFGEntryNode	ENTRY		443895		True				
ANR	443986	CFGExitNode	EXIT		443895		True				
ANR	443987	Symbol	a		443895						
ANR	443988	Symbol	op		443895						
ANR	443989	Symbol	data		443895						
ANR	443990	Symbol	* op		443895						
ANR	443991	Symbol	* * op -> operands		443895						
ANR	443992	Symbol	l		443895						
ANR	443993	Symbol	* * op		443895						
ANR	443994	Symbol	* op -> operands		443895						
ANR	443995	Symbol	op -> operands_count		443895						
ANR	443996	Symbol	* op -> operands [ 0 ] . regs		443895						
ANR	443997	Symbol	op -> operands [ 0 ] . type		443895						
ANR	443998	Symbol	* * * op		443895						
ANR	443999	Symbol	op -> operands		443895						
ANR	444000	Symbol	OT_MEMORY		443895						
ANR	444001	Symbol	* data		443895						
ANR	444002	Symbol	op -> operands [ 0 ] . regs		443895						
ANR	444003	Function	opstmxcsr	3848:0:95511:95874							
ANR	444004	FunctionDef	"opstmxcsr (RAsm * a , ut8 * data , const Opcode * op)"		444003	0					
ANR	444005	CompoundStatement		3848:59:95570:95874	444003	0					
ANR	444006	IdentifierDeclStatement	int l = 0 ;	3849:1:95573:95582	444003	0	True				
ANR	444007	IdentifierDecl	l = 0		444003	0					
ANR	444008	IdentifierDeclType	int		444003	0					
ANR	444009	Identifier	l		444003	1					
ANR	444010	AssignmentExpression	l = 0		444003	2		=			
ANR	444011	Identifier	l		444003	0					
ANR	444012	PrimaryExpression	0		444003	1					
ANR	444013	SwitchStatement	switch ( op -> operands_count )		444003	1					
ANR	444014	Condition	op -> operands_count	3850:9:95593:95610	444003	0	True				
ANR	444015	PtrMemberAccess	op -> operands_count		444003	0					
ANR	444016	Identifier	op		444003	0					
ANR	444017	Identifier	operands_count		444003	1					
ANR	444018	CompoundStatement		3:29:42:42	444003	1					
ANR	444019	Label	case 1 :	3851:1:95616:95622	444003	0	True				
ANR	444020	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD )		444003	1					
ANR	444021	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD	3852:7:95631:95704	444003	0	True				
ANR	444022	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD		444003	0		&&			
ANR	444023	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444003	0		&			
ANR	444024	MemberAccess	op -> operands [ 0 ] . type		444003	0					
ANR	444025	ArrayIndexing	op -> operands [ 0 ]		444003	0					
ANR	444026	PtrMemberAccess	op -> operands		444003	0					
ANR	444027	Identifier	op		444003	0					
ANR	444028	Identifier	operands		444003	1					
ANR	444029	PrimaryExpression	0		444003	1					
ANR	444030	Identifier	type		444003	1					
ANR	444031	Identifier	OT_MEMORY		444003	1					
ANR	444032	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		444003	1		&			
ANR	444033	MemberAccess	op -> operands [ 0 ] . type		444003	0					
ANR	444034	ArrayIndexing	op -> operands [ 0 ]		444003	0					
ANR	444035	PtrMemberAccess	op -> operands		444003	0					
ANR	444036	Identifier	op		444003	0					
ANR	444037	Identifier	operands		444003	1					
ANR	444038	PrimaryExpression	0		444003	1					
ANR	444039	Identifier	type		444003	1					
ANR	444040	Identifier	OT_DWORD		444003	1					
ANR	444041	CompoundStatement		6:41:137:137	444003	1					
ANR	444042	ExpressionStatement	data [ l ++ ] = 0x0f	3854:3:95713:95729	444003	0	True				
ANR	444043	AssignmentExpression	data [ l ++ ] = 0x0f		444003	0		=			
ANR	444044	ArrayIndexing	data [ l ++ ]		444003	0					
ANR	444045	Identifier	data		444003	0					
ANR	444046	PostIncDecOperationExpression	l ++		444003	1					
ANR	444047	Identifier	l		444003	0					
ANR	444048	IncDec	++		444003	1					
ANR	444049	PrimaryExpression	0x0f		444003	1					
ANR	444050	ExpressionStatement	data [ l ++ ] = 0xae	3855:3:95734:95750	444003	1	True				
ANR	444051	AssignmentExpression	data [ l ++ ] = 0xae		444003	0		=			
ANR	444052	ArrayIndexing	data [ l ++ ]		444003	0					
ANR	444053	Identifier	data		444003	0					
ANR	444054	PostIncDecOperationExpression	l ++		444003	1					
ANR	444055	Identifier	l		444003	0					
ANR	444056	IncDec	++		444003	1					
ANR	444057	PrimaryExpression	0xae		444003	1					
ANR	444058	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3856:3:95755:95797	444003	2	True				
ANR	444059	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		444003	0		=			
ANR	444060	ArrayIndexing	data [ l ++ ]		444003	0					
ANR	444061	Identifier	data		444003	0					
ANR	444062	PostIncDecOperationExpression	l ++		444003	1					
ANR	444063	Identifier	l		444003	0					
ANR	444064	IncDec	++		444003	1					
ANR	444065	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		444003	1		|			
ANR	444066	PrimaryExpression	0x18		444003	0					
ANR	444067	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444003	1					
ANR	444068	MemberAccess	op -> operands [ 0 ] . regs		444003	0					
ANR	444069	ArrayIndexing	op -> operands [ 0 ]		444003	0					
ANR	444070	PtrMemberAccess	op -> operands		444003	0					
ANR	444071	Identifier	op		444003	0					
ANR	444072	Identifier	operands		444003	1					
ANR	444073	PrimaryExpression	0		444003	1					
ANR	444074	Identifier	regs		444003	1					
ANR	444075	PrimaryExpression	0		444003	1					
ANR	444076	ElseStatement	else		444003	0					
ANR	444077	CompoundStatement		10:9:237:237	444003	0					
ANR	444078	ReturnStatement	return - 1 ;	3858:3:95813:95822	444003	0	True				
ANR	444079	UnaryOperationExpression	- 1		444003	0					
ANR	444080	UnaryOperator	-		444003	0					
ANR	444081	PrimaryExpression	1		444003	1					
ANR	444082	BreakStatement	break ;	3860:2:95830:95835	444003	2	True				
ANR	444083	Label	default :	3861:1:95838:95845	444003	3	True				
ANR	444084	Identifier	default		444003	0					
ANR	444085	ReturnStatement	return - 1 ;	3862:2:95849:95858	444003	4	True				
ANR	444086	UnaryOperationExpression	- 1		444003	0					
ANR	444087	UnaryOperator	-		444003	0					
ANR	444088	PrimaryExpression	1		444003	1					
ANR	444089	ReturnStatement	return l ;	3864:1:95864:95872	444003	2	True				
ANR	444090	Identifier	l		444003	0					
ANR	444091	ReturnType	static int		444003	1					
ANR	444092	Identifier	opstmxcsr		444003	2					
ANR	444093	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444003	3					
ANR	444094	Parameter	RAsm * a	3848:21:95532:95538	444003	0	True				
ANR	444095	ParameterType	RAsm *		444003	0					
ANR	444096	Identifier	a		444003	1					
ANR	444097	Parameter	ut8 * data	3848:30:95541:95549	444003	1	True				
ANR	444098	ParameterType	ut8 *		444003	0					
ANR	444099	Identifier	data		444003	1					
ANR	444100	Parameter	const Opcode * op	3848:41:95552:95567	444003	2	True				
ANR	444101	ParameterType	const Opcode *		444003	0					
ANR	444102	Identifier	op		444003	1					
ANR	444103	CFGEntryNode	ENTRY		444003		True				
ANR	444104	CFGExitNode	EXIT		444003		True				
ANR	444105	Symbol	a		444003						
ANR	444106	Symbol	op		444003						
ANR	444107	Symbol	data		444003						
ANR	444108	Symbol	* op		444003						
ANR	444109	Symbol	* * op -> operands		444003						
ANR	444110	Symbol	l		444003						
ANR	444111	Symbol	* * op		444003						
ANR	444112	Symbol	* op -> operands		444003						
ANR	444113	Symbol	op -> operands_count		444003						
ANR	444114	Symbol	* op -> operands [ 0 ] . regs		444003						
ANR	444115	Symbol	op -> operands [ 0 ] . type		444003						
ANR	444116	Symbol	* * * op		444003						
ANR	444117	Symbol	op -> operands		444003						
ANR	444118	Symbol	OT_MEMORY		444003						
ANR	444119	Symbol	* data		444003						
ANR	444120	Symbol	op -> operands [ 0 ] . regs		444003						
ANR	444121	Symbol	OT_DWORD		444003						
ANR	444122	Function	opstr	3867:0:95877:96412							
ANR	444123	FunctionDef	"opstr (RAsm * a , ut8 * data , const Opcode * op)"		444122	0					
ANR	444124	CompoundStatement		3867:55:95932:96412	444122	0					
ANR	444125	IdentifierDeclStatement	int l = 0 ;	3868:1:95935:95944	444122	0	True				
ANR	444126	IdentifierDecl	l = 0		444122	0					
ANR	444127	IdentifierDeclType	int		444122	0					
ANR	444128	Identifier	l		444122	1					
ANR	444129	AssignmentExpression	l = 0		444122	2		=			
ANR	444130	Identifier	l		444122	0					
ANR	444131	PrimaryExpression	0		444122	1					
ANR	444132	SwitchStatement	switch ( op -> operands_count )		444122	1					
ANR	444133	Condition	op -> operands_count	3869:9:95955:95972	444122	0	True				
ANR	444134	PtrMemberAccess	op -> operands_count		444122	0					
ANR	444135	Identifier	op		444122	0					
ANR	444136	Identifier	operands_count		444122	1					
ANR	444137	CompoundStatement		3:29:42:42	444122	1					
ANR	444138	Label	case 1 :	3870:1:95978:95984	444122	0	True				
ANR	444139	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		444122	1					
ANR	444140	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3871:7:95993:96065	444122	0	True				
ANR	444141	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		444122	0		&&			
ANR	444142	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444122	0		&			
ANR	444143	MemberAccess	op -> operands [ 0 ] . type		444122	0					
ANR	444144	ArrayIndexing	op -> operands [ 0 ]		444122	0					
ANR	444145	PtrMemberAccess	op -> operands		444122	0					
ANR	444146	Identifier	op		444122	0					
ANR	444147	Identifier	operands		444122	1					
ANR	444148	PrimaryExpression	0		444122	1					
ANR	444149	Identifier	type		444122	1					
ANR	444150	Identifier	OT_MEMORY		444122	1					
ANR	444151	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		444122	1		&			
ANR	444152	MemberAccess	op -> operands [ 0 ] . type		444122	0					
ANR	444153	ArrayIndexing	op -> operands [ 0 ]		444122	0					
ANR	444154	PtrMemberAccess	op -> operands		444122	0					
ANR	444155	Identifier	op		444122	0					
ANR	444156	Identifier	operands		444122	1					
ANR	444157	PrimaryExpression	0		444122	1					
ANR	444158	Identifier	type		444122	1					
ANR	444159	Identifier	OT_WORD		444122	1					
ANR	444160	CompoundStatement		6:40:136:136	444122	1					
ANR	444161	ExpressionStatement	data [ l ++ ] = 0x0f	3873:3:96074:96090	444122	0	True				
ANR	444162	AssignmentExpression	data [ l ++ ] = 0x0f		444122	0		=			
ANR	444163	ArrayIndexing	data [ l ++ ]		444122	0					
ANR	444164	Identifier	data		444122	0					
ANR	444165	PostIncDecOperationExpression	l ++		444122	1					
ANR	444166	Identifier	l		444122	0					
ANR	444167	IncDec	++		444122	1					
ANR	444168	PrimaryExpression	0x0f		444122	1					
ANR	444169	ExpressionStatement	data [ l ++ ] = 0x00	3874:3:96095:96111	444122	1	True				
ANR	444170	AssignmentExpression	data [ l ++ ] = 0x00		444122	0		=			
ANR	444171	ArrayIndexing	data [ l ++ ]		444122	0					
ANR	444172	Identifier	data		444122	0					
ANR	444173	PostIncDecOperationExpression	l ++		444122	1					
ANR	444174	Identifier	l		444122	0					
ANR	444175	IncDec	++		444122	1					
ANR	444176	PrimaryExpression	0x00		444122	1					
ANR	444177	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3875:3:96116:96158	444122	2	True				
ANR	444178	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		444122	0		=			
ANR	444179	ArrayIndexing	data [ l ++ ]		444122	0					
ANR	444180	Identifier	data		444122	0					
ANR	444181	PostIncDecOperationExpression	l ++		444122	1					
ANR	444182	Identifier	l		444122	0					
ANR	444183	IncDec	++		444122	1					
ANR	444184	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		444122	1		|			
ANR	444185	PrimaryExpression	0x08		444122	0					
ANR	444186	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444122	1					
ANR	444187	MemberAccess	op -> operands [ 0 ] . regs		444122	0					
ANR	444188	ArrayIndexing	op -> operands [ 0 ]		444122	0					
ANR	444189	PtrMemberAccess	op -> operands		444122	0					
ANR	444190	Identifier	op		444122	0					
ANR	444191	Identifier	operands		444122	1					
ANR	444192	PrimaryExpression	0		444122	1					
ANR	444193	Identifier	regs		444122	1					
ANR	444194	PrimaryExpression	0		444122	1					
ANR	444195	ElseStatement	else		444122	0					
ANR	444196	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_DWORD )		444122	0					
ANR	444197	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_DWORD	3876:14:96174:96246	444122	0	True				
ANR	444198	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_DWORD		444122	0		&&			
ANR	444199	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		444122	0		&			
ANR	444200	MemberAccess	op -> operands [ 0 ] . type		444122	0					
ANR	444201	ArrayIndexing	op -> operands [ 0 ]		444122	0					
ANR	444202	PtrMemberAccess	op -> operands		444122	0					
ANR	444203	Identifier	op		444122	0					
ANR	444204	Identifier	operands		444122	1					
ANR	444205	PrimaryExpression	0		444122	1					
ANR	444206	Identifier	type		444122	1					
ANR	444207	Identifier	OT_GPREG		444122	1					
ANR	444208	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		444122	1		&			
ANR	444209	MemberAccess	op -> operands [ 0 ] . type		444122	0					
ANR	444210	ArrayIndexing	op -> operands [ 0 ]		444122	0					
ANR	444211	PtrMemberAccess	op -> operands		444122	0					
ANR	444212	Identifier	op		444122	0					
ANR	444213	Identifier	operands		444122	1					
ANR	444214	PrimaryExpression	0		444122	1					
ANR	444215	Identifier	type		444122	1					
ANR	444216	Identifier	OT_DWORD		444122	1					
ANR	444217	CompoundStatement		11:41:317:317	444122	1					
ANR	444218	ExpressionStatement	data [ l ++ ] = 0x0f	3878:3:96255:96271	444122	0	True				
ANR	444219	AssignmentExpression	data [ l ++ ] = 0x0f		444122	0		=			
ANR	444220	ArrayIndexing	data [ l ++ ]		444122	0					
ANR	444221	Identifier	data		444122	0					
ANR	444222	PostIncDecOperationExpression	l ++		444122	1					
ANR	444223	Identifier	l		444122	0					
ANR	444224	IncDec	++		444122	1					
ANR	444225	PrimaryExpression	0x0f		444122	1					
ANR	444226	ExpressionStatement	data [ l ++ ] = 0x00	3879:3:96276:96292	444122	1	True				
ANR	444227	AssignmentExpression	data [ l ++ ] = 0x00		444122	0		=			
ANR	444228	ArrayIndexing	data [ l ++ ]		444122	0					
ANR	444229	Identifier	data		444122	0					
ANR	444230	PostIncDecOperationExpression	l ++		444122	1					
ANR	444231	Identifier	l		444122	0					
ANR	444232	IncDec	++		444122	1					
ANR	444233	PrimaryExpression	0x00		444122	1					
ANR	444234	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	3880:3:96297:96335	444122	2	True				
ANR	444235	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		444122	0		=			
ANR	444236	ArrayIndexing	data [ l ++ ]		444122	0					
ANR	444237	Identifier	data		444122	0					
ANR	444238	PostIncDecOperationExpression	l ++		444122	1					
ANR	444239	Identifier	l		444122	0					
ANR	444240	IncDec	++		444122	1					
ANR	444241	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		444122	1		|			
ANR	444242	PrimaryExpression	0xc8		444122	0					
ANR	444243	MemberAccess	op -> operands [ 0 ] . reg		444122	1					
ANR	444244	ArrayIndexing	op -> operands [ 0 ]		444122	0					
ANR	444245	PtrMemberAccess	op -> operands		444122	0					
ANR	444246	Identifier	op		444122	0					
ANR	444247	Identifier	operands		444122	1					
ANR	444248	PrimaryExpression	0		444122	1					
ANR	444249	Identifier	reg		444122	1					
ANR	444250	ElseStatement	else		444122	0					
ANR	444251	CompoundStatement		15:9:413:413	444122	0					
ANR	444252	ReturnStatement	return - 1 ;	3882:3:96351:96360	444122	0	True				
ANR	444253	UnaryOperationExpression	- 1		444122	0					
ANR	444254	UnaryOperator	-		444122	0					
ANR	444255	PrimaryExpression	1		444122	1					
ANR	444256	BreakStatement	break ;	3884:2:96368:96373	444122	2	True				
ANR	444257	Label	default :	3885:1:96376:96383	444122	3	True				
ANR	444258	Identifier	default		444122	0					
ANR	444259	ReturnStatement	return - 1 ;	3886:2:96387:96396	444122	4	True				
ANR	444260	UnaryOperationExpression	- 1		444122	0					
ANR	444261	UnaryOperator	-		444122	0					
ANR	444262	PrimaryExpression	1		444122	1					
ANR	444263	ReturnStatement	return l ;	3888:1:96402:96410	444122	2	True				
ANR	444264	Identifier	l		444122	0					
ANR	444265	ReturnType	static int		444122	1					
ANR	444266	Identifier	opstr		444122	2					
ANR	444267	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444122	3					
ANR	444268	Parameter	RAsm * a	3867:17:95894:95900	444122	0	True				
ANR	444269	ParameterType	RAsm *		444122	0					
ANR	444270	Identifier	a		444122	1					
ANR	444271	Parameter	ut8 * data	3867:26:95903:95911	444122	1	True				
ANR	444272	ParameterType	ut8 *		444122	0					
ANR	444273	Identifier	data		444122	1					
ANR	444274	Parameter	const Opcode * op	3867:37:95914:95929	444122	2	True				
ANR	444275	ParameterType	const Opcode *		444122	0					
ANR	444276	Identifier	op		444122	1					
ANR	444277	CFGEntryNode	ENTRY		444122		True				
ANR	444278	CFGExitNode	EXIT		444122		True				
ANR	444279	Symbol	a		444122						
ANR	444280	Symbol	op		444122						
ANR	444281	Symbol	OT_WORD		444122						
ANR	444282	Symbol	OT_GPREG		444122						
ANR	444283	Symbol	data		444122						
ANR	444284	Symbol	* op		444122						
ANR	444285	Symbol	* * op -> operands		444122						
ANR	444286	Symbol	l		444122						
ANR	444287	Symbol	* * op		444122						
ANR	444288	Symbol	* op -> operands		444122						
ANR	444289	Symbol	op -> operands_count		444122						
ANR	444290	Symbol	* op -> operands [ 0 ] . regs		444122						
ANR	444291	Symbol	op -> operands [ 0 ] . type		444122						
ANR	444292	Symbol	* * * op		444122						
ANR	444293	Symbol	op -> operands [ 0 ] . reg		444122						
ANR	444294	Symbol	op -> operands		444122						
ANR	444295	Symbol	OT_MEMORY		444122						
ANR	444296	Symbol	* data		444122						
ANR	444297	Symbol	op -> operands [ 0 ] . regs		444122						
ANR	444298	Symbol	OT_DWORD		444122						
ANR	444299	Function	opsidt	3891:0:96415:96733							
ANR	444300	FunctionDef	"opsidt (RAsm * a , ut8 * data , const Opcode * op)"		444299	0					
ANR	444301	CompoundStatement		3891:56:96471:96733	444299	0					
ANR	444302	IdentifierDeclStatement	int l = 0 ;	3892:1:96474:96483	444299	0	True				
ANR	444303	IdentifierDecl	l = 0		444299	0					
ANR	444304	IdentifierDeclType	int		444299	0					
ANR	444305	Identifier	l		444299	1					
ANR	444306	AssignmentExpression	l = 0		444299	2		=			
ANR	444307	Identifier	l		444299	0					
ANR	444308	PrimaryExpression	0		444299	1					
ANR	444309	SwitchStatement	switch ( op -> operands_count )		444299	1					
ANR	444310	Condition	op -> operands_count	3893:9:96494:96511	444299	0	True				
ANR	444311	PtrMemberAccess	op -> operands_count		444299	0					
ANR	444312	Identifier	op		444299	0					
ANR	444313	Identifier	operands_count		444299	1					
ANR	444314	CompoundStatement		3:29:42:42	444299	1					
ANR	444315	Label	case 1 :	3894:1:96517:96523	444299	0	True				
ANR	444316	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		444299	1					
ANR	444317	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3895:7:96532:96563	444299	0	True				
ANR	444318	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444299	0		&			
ANR	444319	MemberAccess	op -> operands [ 0 ] . type		444299	0					
ANR	444320	ArrayIndexing	op -> operands [ 0 ]		444299	0					
ANR	444321	PtrMemberAccess	op -> operands		444299	0					
ANR	444322	Identifier	op		444299	0					
ANR	444323	Identifier	operands		444299	1					
ANR	444324	PrimaryExpression	0		444299	1					
ANR	444325	Identifier	type		444299	1					
ANR	444326	Identifier	OT_MEMORY		444299	1					
ANR	444327	CompoundStatement		5:42:95:95	444299	1					
ANR	444328	ExpressionStatement	data [ l ++ ] = 0x0f	3896:3:96572:96588	444299	0	True				
ANR	444329	AssignmentExpression	data [ l ++ ] = 0x0f		444299	0		=			
ANR	444330	ArrayIndexing	data [ l ++ ]		444299	0					
ANR	444331	Identifier	data		444299	0					
ANR	444332	PostIncDecOperationExpression	l ++		444299	1					
ANR	444333	Identifier	l		444299	0					
ANR	444334	IncDec	++		444299	1					
ANR	444335	PrimaryExpression	0x0f		444299	1					
ANR	444336	ExpressionStatement	data [ l ++ ] = 0x01	3897:3:96593:96609	444299	1	True				
ANR	444337	AssignmentExpression	data [ l ++ ] = 0x01		444299	0		=			
ANR	444338	ArrayIndexing	data [ l ++ ]		444299	0					
ANR	444339	Identifier	data		444299	0					
ANR	444340	PostIncDecOperationExpression	l ++		444299	1					
ANR	444341	Identifier	l		444299	0					
ANR	444342	IncDec	++		444299	1					
ANR	444343	PrimaryExpression	0x01		444299	1					
ANR	444344	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3898:3:96614:96656	444299	2	True				
ANR	444345	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		444299	0		=			
ANR	444346	ArrayIndexing	data [ l ++ ]		444299	0					
ANR	444347	Identifier	data		444299	0					
ANR	444348	PostIncDecOperationExpression	l ++		444299	1					
ANR	444349	Identifier	l		444299	0					
ANR	444350	IncDec	++		444299	1					
ANR	444351	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		444299	1		|			
ANR	444352	PrimaryExpression	0x08		444299	0					
ANR	444353	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444299	1					
ANR	444354	MemberAccess	op -> operands [ 0 ] . regs		444299	0					
ANR	444355	ArrayIndexing	op -> operands [ 0 ]		444299	0					
ANR	444356	PtrMemberAccess	op -> operands		444299	0					
ANR	444357	Identifier	op		444299	0					
ANR	444358	Identifier	operands		444299	1					
ANR	444359	PrimaryExpression	0		444299	1					
ANR	444360	Identifier	regs		444299	1					
ANR	444361	PrimaryExpression	0		444299	1					
ANR	444362	ElseStatement	else		444299	0					
ANR	444363	CompoundStatement		9:9:195:195	444299	0					
ANR	444364	ReturnStatement	return - 1 ;	3900:3:96672:96681	444299	0	True				
ANR	444365	UnaryOperationExpression	- 1		444299	0					
ANR	444366	UnaryOperator	-		444299	0					
ANR	444367	PrimaryExpression	1		444299	1					
ANR	444368	BreakStatement	break ;	3902:2:96689:96694	444299	2	True				
ANR	444369	Label	default :	3903:1:96697:96704	444299	3	True				
ANR	444370	Identifier	default		444299	0					
ANR	444371	ReturnStatement	return - 1 ;	3904:2:96708:96717	444299	4	True				
ANR	444372	UnaryOperationExpression	- 1		444299	0					
ANR	444373	UnaryOperator	-		444299	0					
ANR	444374	PrimaryExpression	1		444299	1					
ANR	444375	ReturnStatement	return l ;	3906:1:96723:96731	444299	2	True				
ANR	444376	Identifier	l		444299	0					
ANR	444377	ReturnType	static int		444299	1					
ANR	444378	Identifier	opsidt		444299	2					
ANR	444379	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444299	3					
ANR	444380	Parameter	RAsm * a	3891:18:96433:96439	444299	0	True				
ANR	444381	ParameterType	RAsm *		444299	0					
ANR	444382	Identifier	a		444299	1					
ANR	444383	Parameter	ut8 * data	3891:27:96442:96450	444299	1	True				
ANR	444384	ParameterType	ut8 *		444299	0					
ANR	444385	Identifier	data		444299	1					
ANR	444386	Parameter	const Opcode * op	3891:38:96453:96468	444299	2	True				
ANR	444387	ParameterType	const Opcode *		444299	0					
ANR	444388	Identifier	op		444299	1					
ANR	444389	CFGEntryNode	ENTRY		444299		True				
ANR	444390	CFGExitNode	EXIT		444299		True				
ANR	444391	Symbol	a		444299						
ANR	444392	Symbol	op		444299						
ANR	444393	Symbol	data		444299						
ANR	444394	Symbol	* op		444299						
ANR	444395	Symbol	* * op -> operands		444299						
ANR	444396	Symbol	l		444299						
ANR	444397	Symbol	* * op		444299						
ANR	444398	Symbol	* op -> operands		444299						
ANR	444399	Symbol	op -> operands_count		444299						
ANR	444400	Symbol	* op -> operands [ 0 ] . regs		444299						
ANR	444401	Symbol	op -> operands [ 0 ] . type		444299						
ANR	444402	Symbol	* * * op		444299						
ANR	444403	Symbol	op -> operands		444299						
ANR	444404	Symbol	OT_MEMORY		444299						
ANR	444405	Symbol	* data		444299						
ANR	444406	Symbol	op -> operands [ 0 ] . regs		444299						
ANR	444407	Function	opsldt	3909:0:96736:97131							
ANR	444408	FunctionDef	"opsldt (RAsm * a , ut8 * data , const Opcode * op)"		444407	0					
ANR	444409	CompoundStatement		3909:56:96792:97131	444407	0					
ANR	444410	IdentifierDeclStatement	int l = 0 ;	3910:1:96795:96804	444407	0	True				
ANR	444411	IdentifierDecl	l = 0		444407	0					
ANR	444412	IdentifierDeclType	int		444407	0					
ANR	444413	Identifier	l		444407	1					
ANR	444414	AssignmentExpression	l = 0		444407	2		=			
ANR	444415	Identifier	l		444407	0					
ANR	444416	PrimaryExpression	0		444407	1					
ANR	444417	SwitchStatement	switch ( op -> operands_count )		444407	1					
ANR	444418	Condition	op -> operands_count	3911:9:96815:96832	444407	0	True				
ANR	444419	PtrMemberAccess	op -> operands_count		444407	0					
ANR	444420	Identifier	op		444407	0					
ANR	444421	Identifier	operands_count		444407	1					
ANR	444422	CompoundStatement		3:29:42:42	444407	1					
ANR	444423	Label	case 1 :	3912:1:96838:96844	444407	0	True				
ANR	444424	IfStatement	if ( a -> bits == 64 )		444407	1					
ANR	444425	Condition	a -> bits == 64	3913:7:96853:96865	444407	0	True				
ANR	444426	EqualityExpression	a -> bits == 64		444407	0		==			
ANR	444427	PtrMemberAccess	a -> bits		444407	0					
ANR	444428	Identifier	a		444407	0					
ANR	444429	Identifier	bits		444407	1					
ANR	444430	PrimaryExpression	64		444407	1					
ANR	444431	CompoundStatement		5:23:76:76	444407	1					
ANR	444432	ExpressionStatement	data [ l ++ ] = 0x48	3914:3:96874:96890	444407	0	True				
ANR	444433	AssignmentExpression	data [ l ++ ] = 0x48		444407	0		=			
ANR	444434	ArrayIndexing	data [ l ++ ]		444407	0					
ANR	444435	Identifier	data		444407	0					
ANR	444436	PostIncDecOperationExpression	l ++		444407	1					
ANR	444437	Identifier	l		444407	0					
ANR	444438	IncDec	++		444407	1					
ANR	444439	PrimaryExpression	0x48		444407	1					
ANR	444440	ExpressionStatement	data [ l ++ ] = 0x0f	3916:2:96898:96914	444407	2	True				
ANR	444441	AssignmentExpression	data [ l ++ ] = 0x0f		444407	0		=			
ANR	444442	ArrayIndexing	data [ l ++ ]		444407	0					
ANR	444443	Identifier	data		444407	0					
ANR	444444	PostIncDecOperationExpression	l ++		444407	1					
ANR	444445	Identifier	l		444407	0					
ANR	444446	IncDec	++		444407	1					
ANR	444447	PrimaryExpression	0x0f		444407	1					
ANR	444448	ExpressionStatement	data [ l ++ ] = 0x00	3917:2:96918:96934	444407	3	True				
ANR	444449	AssignmentExpression	data [ l ++ ] = 0x00		444407	0		=			
ANR	444450	ArrayIndexing	data [ l ++ ]		444407	0					
ANR	444451	Identifier	data		444407	0					
ANR	444452	PostIncDecOperationExpression	l ++		444407	1					
ANR	444453	Identifier	l		444407	0					
ANR	444454	IncDec	++		444407	1					
ANR	444455	PrimaryExpression	0x00		444407	1					
ANR	444456	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		444407	4					
ANR	444457	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3918:7:96943:96974	444407	0	True				
ANR	444458	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444407	0		&			
ANR	444459	MemberAccess	op -> operands [ 0 ] . type		444407	0					
ANR	444460	ArrayIndexing	op -> operands [ 0 ]		444407	0					
ANR	444461	PtrMemberAccess	op -> operands		444407	0					
ANR	444462	Identifier	op		444407	0					
ANR	444463	Identifier	operands		444407	1					
ANR	444464	PrimaryExpression	0		444407	1					
ANR	444465	Identifier	type		444407	1					
ANR	444466	Identifier	OT_MEMORY		444407	1					
ANR	444467	CompoundStatement		10:42:185:185	444407	1					
ANR	444468	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	3919:3:96983:97025	444407	0	True				
ANR	444469	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		444407	0		=			
ANR	444470	ArrayIndexing	data [ l ++ ]		444407	0					
ANR	444471	Identifier	data		444407	0					
ANR	444472	PostIncDecOperationExpression	l ++		444407	1					
ANR	444473	Identifier	l		444407	0					
ANR	444474	IncDec	++		444407	1					
ANR	444475	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		444407	1		|			
ANR	444476	PrimaryExpression	0x00		444407	0					
ANR	444477	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444407	1					
ANR	444478	MemberAccess	op -> operands [ 0 ] . regs		444407	0					
ANR	444479	ArrayIndexing	op -> operands [ 0 ]		444407	0					
ANR	444480	PtrMemberAccess	op -> operands		444407	0					
ANR	444481	Identifier	op		444407	0					
ANR	444482	Identifier	operands		444407	1					
ANR	444483	PrimaryExpression	0		444407	1					
ANR	444484	Identifier	regs		444407	1					
ANR	444485	PrimaryExpression	0		444407	1					
ANR	444486	ElseStatement	else		444407	0					
ANR	444487	CompoundStatement		12:9:243:243	444407	0					
ANR	444488	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	3921:3:97041:97079	444407	0	True				
ANR	444489	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		444407	0		=			
ANR	444490	ArrayIndexing	data [ l ++ ]		444407	0					
ANR	444491	Identifier	data		444407	0					
ANR	444492	PostIncDecOperationExpression	l ++		444407	1					
ANR	444493	Identifier	l		444407	0					
ANR	444494	IncDec	++		444407	1					
ANR	444495	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		444407	1		|			
ANR	444496	PrimaryExpression	0xc0		444407	0					
ANR	444497	MemberAccess	op -> operands [ 0 ] . reg		444407	1					
ANR	444498	ArrayIndexing	op -> operands [ 0 ]		444407	0					
ANR	444499	PtrMemberAccess	op -> operands		444407	0					
ANR	444500	Identifier	op		444407	0					
ANR	444501	Identifier	operands		444407	1					
ANR	444502	PrimaryExpression	0		444407	1					
ANR	444503	Identifier	reg		444407	1					
ANR	444504	BreakStatement	break ;	3923:2:97087:97092	444407	5	True				
ANR	444505	Label	default :	3924:1:97095:97102	444407	6	True				
ANR	444506	Identifier	default		444407	0					
ANR	444507	ReturnStatement	return - 1 ;	3925:2:97106:97115	444407	7	True				
ANR	444508	UnaryOperationExpression	- 1		444407	0					
ANR	444509	UnaryOperator	-		444407	0					
ANR	444510	PrimaryExpression	1		444407	1					
ANR	444511	ReturnStatement	return l ;	3927:1:97121:97129	444407	2	True				
ANR	444512	Identifier	l		444407	0					
ANR	444513	ReturnType	static int		444407	1					
ANR	444514	Identifier	opsldt		444407	2					
ANR	444515	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444407	3					
ANR	444516	Parameter	RAsm * a	3909:18:96754:96760	444407	0	True				
ANR	444517	ParameterType	RAsm *		444407	0					
ANR	444518	Identifier	a		444407	1					
ANR	444519	Parameter	ut8 * data	3909:27:96763:96771	444407	1	True				
ANR	444520	ParameterType	ut8 *		444407	0					
ANR	444521	Identifier	data		444407	1					
ANR	444522	Parameter	const Opcode * op	3909:38:96774:96789	444407	2	True				
ANR	444523	ParameterType	const Opcode *		444407	0					
ANR	444524	Identifier	op		444407	1					
ANR	444525	CFGEntryNode	ENTRY		444407		True				
ANR	444526	CFGExitNode	EXIT		444407		True				
ANR	444527	Symbol	a		444407						
ANR	444528	Symbol	op		444407						
ANR	444529	Symbol	data		444407						
ANR	444530	Symbol	* op		444407						
ANR	444531	Symbol	* a		444407						
ANR	444532	Symbol	* * op -> operands		444407						
ANR	444533	Symbol	l		444407						
ANR	444534	Symbol	* * op		444407						
ANR	444535	Symbol	* op -> operands		444407						
ANR	444536	Symbol	op -> operands_count		444407						
ANR	444537	Symbol	* op -> operands [ 0 ] . regs		444407						
ANR	444538	Symbol	op -> operands [ 0 ] . type		444407						
ANR	444539	Symbol	* * * op		444407						
ANR	444540	Symbol	op -> operands [ 0 ] . reg		444407						
ANR	444541	Symbol	op -> operands		444407						
ANR	444542	Symbol	* data		444407						
ANR	444543	Symbol	OT_MEMORY		444407						
ANR	444544	Symbol	op -> operands [ 0 ] . regs		444407						
ANR	444545	Symbol	a -> bits		444407						
ANR	444546	Function	opsmsw	3930:0:97134:97529							
ANR	444547	FunctionDef	"opsmsw (RAsm * a , ut8 * data , const Opcode * op)"		444546	0					
ANR	444548	CompoundStatement		3930:56:97190:97529	444546	0					
ANR	444549	IdentifierDeclStatement	int l = 0 ;	3931:1:97193:97202	444546	0	True				
ANR	444550	IdentifierDecl	l = 0		444546	0					
ANR	444551	IdentifierDeclType	int		444546	0					
ANR	444552	Identifier	l		444546	1					
ANR	444553	AssignmentExpression	l = 0		444546	2		=			
ANR	444554	Identifier	l		444546	0					
ANR	444555	PrimaryExpression	0		444546	1					
ANR	444556	SwitchStatement	switch ( op -> operands_count )		444546	1					
ANR	444557	Condition	op -> operands_count	3932:9:97213:97230	444546	0	True				
ANR	444558	PtrMemberAccess	op -> operands_count		444546	0					
ANR	444559	Identifier	op		444546	0					
ANR	444560	Identifier	operands_count		444546	1					
ANR	444561	CompoundStatement		3:29:42:42	444546	1					
ANR	444562	Label	case 1 :	3933:1:97236:97242	444546	0	True				
ANR	444563	IfStatement	if ( a -> bits == 64 )		444546	1					
ANR	444564	Condition	a -> bits == 64	3934:7:97251:97263	444546	0	True				
ANR	444565	EqualityExpression	a -> bits == 64		444546	0		==			
ANR	444566	PtrMemberAccess	a -> bits		444546	0					
ANR	444567	Identifier	a		444546	0					
ANR	444568	Identifier	bits		444546	1					
ANR	444569	PrimaryExpression	64		444546	1					
ANR	444570	CompoundStatement		5:23:76:76	444546	1					
ANR	444571	ExpressionStatement	data [ l ++ ] = 0x48	3935:3:97272:97288	444546	0	True				
ANR	444572	AssignmentExpression	data [ l ++ ] = 0x48		444546	0		=			
ANR	444573	ArrayIndexing	data [ l ++ ]		444546	0					
ANR	444574	Identifier	data		444546	0					
ANR	444575	PostIncDecOperationExpression	l ++		444546	1					
ANR	444576	Identifier	l		444546	0					
ANR	444577	IncDec	++		444546	1					
ANR	444578	PrimaryExpression	0x48		444546	1					
ANR	444579	ExpressionStatement	data [ l ++ ] = 0x0f	3937:2:97296:97312	444546	2	True				
ANR	444580	AssignmentExpression	data [ l ++ ] = 0x0f		444546	0		=			
ANR	444581	ArrayIndexing	data [ l ++ ]		444546	0					
ANR	444582	Identifier	data		444546	0					
ANR	444583	PostIncDecOperationExpression	l ++		444546	1					
ANR	444584	Identifier	l		444546	0					
ANR	444585	IncDec	++		444546	1					
ANR	444586	PrimaryExpression	0x0f		444546	1					
ANR	444587	ExpressionStatement	data [ l ++ ] = 0x01	3938:2:97316:97332	444546	3	True				
ANR	444588	AssignmentExpression	data [ l ++ ] = 0x01		444546	0		=			
ANR	444589	ArrayIndexing	data [ l ++ ]		444546	0					
ANR	444590	Identifier	data		444546	0					
ANR	444591	PostIncDecOperationExpression	l ++		444546	1					
ANR	444592	Identifier	l		444546	0					
ANR	444593	IncDec	++		444546	1					
ANR	444594	PrimaryExpression	0x01		444546	1					
ANR	444595	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		444546	4					
ANR	444596	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3939:7:97341:97372	444546	0	True				
ANR	444597	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444546	0		&			
ANR	444598	MemberAccess	op -> operands [ 0 ] . type		444546	0					
ANR	444599	ArrayIndexing	op -> operands [ 0 ]		444546	0					
ANR	444600	PtrMemberAccess	op -> operands		444546	0					
ANR	444601	Identifier	op		444546	0					
ANR	444602	Identifier	operands		444546	1					
ANR	444603	PrimaryExpression	0		444546	1					
ANR	444604	Identifier	type		444546	1					
ANR	444605	Identifier	OT_MEMORY		444546	1					
ANR	444606	CompoundStatement		10:42:185:185	444546	1					
ANR	444607	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3940:3:97381:97423	444546	0	True				
ANR	444608	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		444546	0		=			
ANR	444609	ArrayIndexing	data [ l ++ ]		444546	0					
ANR	444610	Identifier	data		444546	0					
ANR	444611	PostIncDecOperationExpression	l ++		444546	1					
ANR	444612	Identifier	l		444546	0					
ANR	444613	IncDec	++		444546	1					
ANR	444614	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		444546	1		|			
ANR	444615	PrimaryExpression	0x20		444546	0					
ANR	444616	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444546	1					
ANR	444617	MemberAccess	op -> operands [ 0 ] . regs		444546	0					
ANR	444618	ArrayIndexing	op -> operands [ 0 ]		444546	0					
ANR	444619	PtrMemberAccess	op -> operands		444546	0					
ANR	444620	Identifier	op		444546	0					
ANR	444621	Identifier	operands		444546	1					
ANR	444622	PrimaryExpression	0		444546	1					
ANR	444623	Identifier	regs		444546	1					
ANR	444624	PrimaryExpression	0		444546	1					
ANR	444625	ElseStatement	else		444546	0					
ANR	444626	CompoundStatement		12:9:243:243	444546	0					
ANR	444627	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3942:3:97439:97477	444546	0	True				
ANR	444628	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		444546	0		=			
ANR	444629	ArrayIndexing	data [ l ++ ]		444546	0					
ANR	444630	Identifier	data		444546	0					
ANR	444631	PostIncDecOperationExpression	l ++		444546	1					
ANR	444632	Identifier	l		444546	0					
ANR	444633	IncDec	++		444546	1					
ANR	444634	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		444546	1		|			
ANR	444635	PrimaryExpression	0xe0		444546	0					
ANR	444636	MemberAccess	op -> operands [ 0 ] . reg		444546	1					
ANR	444637	ArrayIndexing	op -> operands [ 0 ]		444546	0					
ANR	444638	PtrMemberAccess	op -> operands		444546	0					
ANR	444639	Identifier	op		444546	0					
ANR	444640	Identifier	operands		444546	1					
ANR	444641	PrimaryExpression	0		444546	1					
ANR	444642	Identifier	reg		444546	1					
ANR	444643	BreakStatement	break ;	3944:2:97485:97490	444546	5	True				
ANR	444644	Label	default :	3945:1:97493:97500	444546	6	True				
ANR	444645	Identifier	default		444546	0					
ANR	444646	ReturnStatement	return - 1 ;	3946:2:97504:97513	444546	7	True				
ANR	444647	UnaryOperationExpression	- 1		444546	0					
ANR	444648	UnaryOperator	-		444546	0					
ANR	444649	PrimaryExpression	1		444546	1					
ANR	444650	ReturnStatement	return l ;	3948:1:97519:97527	444546	2	True				
ANR	444651	Identifier	l		444546	0					
ANR	444652	ReturnType	static int		444546	1					
ANR	444653	Identifier	opsmsw		444546	2					
ANR	444654	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444546	3					
ANR	444655	Parameter	RAsm * a	3930:18:97152:97158	444546	0	True				
ANR	444656	ParameterType	RAsm *		444546	0					
ANR	444657	Identifier	a		444546	1					
ANR	444658	Parameter	ut8 * data	3930:27:97161:97169	444546	1	True				
ANR	444659	ParameterType	ut8 *		444546	0					
ANR	444660	Identifier	data		444546	1					
ANR	444661	Parameter	const Opcode * op	3930:38:97172:97187	444546	2	True				
ANR	444662	ParameterType	const Opcode *		444546	0					
ANR	444663	Identifier	op		444546	1					
ANR	444664	CFGEntryNode	ENTRY		444546		True				
ANR	444665	CFGExitNode	EXIT		444546		True				
ANR	444666	Symbol	a		444546						
ANR	444667	Symbol	op		444546						
ANR	444668	Symbol	data		444546						
ANR	444669	Symbol	* op		444546						
ANR	444670	Symbol	* a		444546						
ANR	444671	Symbol	* * op -> operands		444546						
ANR	444672	Symbol	l		444546						
ANR	444673	Symbol	* * op		444546						
ANR	444674	Symbol	* op -> operands		444546						
ANR	444675	Symbol	op -> operands_count		444546						
ANR	444676	Symbol	* op -> operands [ 0 ] . regs		444546						
ANR	444677	Symbol	op -> operands [ 0 ] . type		444546						
ANR	444678	Symbol	* * * op		444546						
ANR	444679	Symbol	op -> operands [ 0 ] . reg		444546						
ANR	444680	Symbol	op -> operands		444546						
ANR	444681	Symbol	* data		444546						
ANR	444682	Symbol	OT_MEMORY		444546						
ANR	444683	Symbol	op -> operands [ 0 ] . regs		444546						
ANR	444684	Symbol	a -> bits		444546						
ANR	444685	Function	opverr	3951:0:97532:97955							
ANR	444686	FunctionDef	"opverr (RAsm * a , ut8 * data , const Opcode * op)"		444685	0					
ANR	444687	CompoundStatement		3951:56:97588:97955	444685	0					
ANR	444688	IdentifierDeclStatement	int l = 0 ;	3952:1:97591:97600	444685	0	True				
ANR	444689	IdentifierDecl	l = 0		444685	0					
ANR	444690	IdentifierDeclType	int		444685	0					
ANR	444691	Identifier	l		444685	1					
ANR	444692	AssignmentExpression	l = 0		444685	2		=			
ANR	444693	Identifier	l		444685	0					
ANR	444694	PrimaryExpression	0		444685	1					
ANR	444695	SwitchStatement	switch ( op -> operands_count )		444685	1					
ANR	444696	Condition	op -> operands_count	3953:9:97611:97628	444685	0	True				
ANR	444697	PtrMemberAccess	op -> operands_count		444685	0					
ANR	444698	Identifier	op		444685	0					
ANR	444699	Identifier	operands_count		444685	1					
ANR	444700	CompoundStatement		3:29:42:42	444685	1					
ANR	444701	Label	case 1 :	3954:1:97634:97640	444685	0	True				
ANR	444702	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		444685	1					
ANR	444703	Condition	op -> operands [ 0 ] . type & OT_WORD	3955:7:97649:97678	444685	0	True				
ANR	444704	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		444685	0		&			
ANR	444705	MemberAccess	op -> operands [ 0 ] . type		444685	0					
ANR	444706	ArrayIndexing	op -> operands [ 0 ]		444685	0					
ANR	444707	PtrMemberAccess	op -> operands		444685	0					
ANR	444708	Identifier	op		444685	0					
ANR	444709	Identifier	operands		444685	1					
ANR	444710	PrimaryExpression	0		444685	1					
ANR	444711	Identifier	type		444685	1					
ANR	444712	Identifier	OT_WORD		444685	1					
ANR	444713	CompoundStatement		5:40:93:93	444685	1					
ANR	444714	ExpressionStatement	data [ l ++ ] = 0x0f	3956:3:97687:97703	444685	0	True				
ANR	444715	AssignmentExpression	data [ l ++ ] = 0x0f		444685	0		=			
ANR	444716	ArrayIndexing	data [ l ++ ]		444685	0					
ANR	444717	Identifier	data		444685	0					
ANR	444718	PostIncDecOperationExpression	l ++		444685	1					
ANR	444719	Identifier	l		444685	0					
ANR	444720	IncDec	++		444685	1					
ANR	444721	PrimaryExpression	0x0f		444685	1					
ANR	444722	ExpressionStatement	data [ l ++ ] = 0x00	3957:3:97708:97724	444685	1	True				
ANR	444723	AssignmentExpression	data [ l ++ ] = 0x00		444685	0		=			
ANR	444724	ArrayIndexing	data [ l ++ ]		444685	0					
ANR	444725	Identifier	data		444685	0					
ANR	444726	PostIncDecOperationExpression	l ++		444685	1					
ANR	444727	Identifier	l		444685	0					
ANR	444728	IncDec	++		444685	1					
ANR	444729	PrimaryExpression	0x00		444685	1					
ANR	444730	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		444685	2					
ANR	444731	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3958:8:97734:97765	444685	0	True				
ANR	444732	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444685	0		&			
ANR	444733	MemberAccess	op -> operands [ 0 ] . type		444685	0					
ANR	444734	ArrayIndexing	op -> operands [ 0 ]		444685	0					
ANR	444735	PtrMemberAccess	op -> operands		444685	0					
ANR	444736	Identifier	op		444685	0					
ANR	444737	Identifier	operands		444685	1					
ANR	444738	PrimaryExpression	0		444685	1					
ANR	444739	Identifier	type		444685	1					
ANR	444740	Identifier	OT_MEMORY		444685	1					
ANR	444741	CompoundStatement		8:43:180:180	444685	1					
ANR	444742	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3959:4:97775:97817	444685	0	True				
ANR	444743	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		444685	0		=			
ANR	444744	ArrayIndexing	data [ l ++ ]		444685	0					
ANR	444745	Identifier	data		444685	0					
ANR	444746	PostIncDecOperationExpression	l ++		444685	1					
ANR	444747	Identifier	l		444685	0					
ANR	444748	IncDec	++		444685	1					
ANR	444749	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		444685	1		|			
ANR	444750	PrimaryExpression	0x20		444685	0					
ANR	444751	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444685	1					
ANR	444752	MemberAccess	op -> operands [ 0 ] . regs		444685	0					
ANR	444753	ArrayIndexing	op -> operands [ 0 ]		444685	0					
ANR	444754	PtrMemberAccess	op -> operands		444685	0					
ANR	444755	Identifier	op		444685	0					
ANR	444756	Identifier	operands		444685	1					
ANR	444757	PrimaryExpression	0		444685	1					
ANR	444758	Identifier	regs		444685	1					
ANR	444759	PrimaryExpression	0		444685	1					
ANR	444760	ElseStatement	else		444685	0					
ANR	444761	CompoundStatement		10:10:240:240	444685	0					
ANR	444762	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3961:4:97835:97873	444685	0	True				
ANR	444763	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		444685	0		=			
ANR	444764	ArrayIndexing	data [ l ++ ]		444685	0					
ANR	444765	Identifier	data		444685	0					
ANR	444766	PostIncDecOperationExpression	l ++		444685	1					
ANR	444767	Identifier	l		444685	0					
ANR	444768	IncDec	++		444685	1					
ANR	444769	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		444685	1		|			
ANR	444770	PrimaryExpression	0xe0		444685	0					
ANR	444771	MemberAccess	op -> operands [ 0 ] . reg		444685	1					
ANR	444772	ArrayIndexing	op -> operands [ 0 ]		444685	0					
ANR	444773	PtrMemberAccess	op -> operands		444685	0					
ANR	444774	Identifier	op		444685	0					
ANR	444775	Identifier	operands		444685	1					
ANR	444776	PrimaryExpression	0		444685	1					
ANR	444777	Identifier	reg		444685	1					
ANR	444778	ElseStatement	else		444685	0					
ANR	444779	CompoundStatement		13:9:300:300	444685	0					
ANR	444780	ReturnStatement	return - 1 ;	3964:3:97894:97903	444685	0	True				
ANR	444781	UnaryOperationExpression	- 1		444685	0					
ANR	444782	UnaryOperator	-		444685	0					
ANR	444783	PrimaryExpression	1		444685	1					
ANR	444784	BreakStatement	break ;	3966:2:97911:97916	444685	2	True				
ANR	444785	Label	default :	3967:1:97919:97926	444685	3	True				
ANR	444786	Identifier	default		444685	0					
ANR	444787	ReturnStatement	return - 1 ;	3968:2:97930:97939	444685	4	True				
ANR	444788	UnaryOperationExpression	- 1		444685	0					
ANR	444789	UnaryOperator	-		444685	0					
ANR	444790	PrimaryExpression	1		444685	1					
ANR	444791	ReturnStatement	return l ;	3970:1:97945:97953	444685	2	True				
ANR	444792	Identifier	l		444685	0					
ANR	444793	ReturnType	static int		444685	1					
ANR	444794	Identifier	opverr		444685	2					
ANR	444795	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444685	3					
ANR	444796	Parameter	RAsm * a	3951:18:97550:97556	444685	0	True				
ANR	444797	ParameterType	RAsm *		444685	0					
ANR	444798	Identifier	a		444685	1					
ANR	444799	Parameter	ut8 * data	3951:27:97559:97567	444685	1	True				
ANR	444800	ParameterType	ut8 *		444685	0					
ANR	444801	Identifier	data		444685	1					
ANR	444802	Parameter	const Opcode * op	3951:38:97570:97585	444685	2	True				
ANR	444803	ParameterType	const Opcode *		444685	0					
ANR	444804	Identifier	op		444685	1					
ANR	444805	CFGEntryNode	ENTRY		444685		True				
ANR	444806	CFGExitNode	EXIT		444685		True				
ANR	444807	Symbol	a		444685						
ANR	444808	Symbol	op		444685						
ANR	444809	Symbol	OT_WORD		444685						
ANR	444810	Symbol	data		444685						
ANR	444811	Symbol	* op		444685						
ANR	444812	Symbol	* * op -> operands		444685						
ANR	444813	Symbol	l		444685						
ANR	444814	Symbol	* * op		444685						
ANR	444815	Symbol	* op -> operands		444685						
ANR	444816	Symbol	op -> operands_count		444685						
ANR	444817	Symbol	* op -> operands [ 0 ] . regs		444685						
ANR	444818	Symbol	op -> operands [ 0 ] . type		444685						
ANR	444819	Symbol	* * * op		444685						
ANR	444820	Symbol	op -> operands [ 0 ] . reg		444685						
ANR	444821	Symbol	op -> operands		444685						
ANR	444822	Symbol	* data		444685						
ANR	444823	Symbol	OT_MEMORY		444685						
ANR	444824	Symbol	op -> operands [ 0 ] . regs		444685						
ANR	444825	Function	opverw	3973:0:97958:98381							
ANR	444826	FunctionDef	"opverw (RAsm * a , ut8 * data , const Opcode * op)"		444825	0					
ANR	444827	CompoundStatement		3973:56:98014:98381	444825	0					
ANR	444828	IdentifierDeclStatement	int l = 0 ;	3974:1:98017:98026	444825	0	True				
ANR	444829	IdentifierDecl	l = 0		444825	0					
ANR	444830	IdentifierDeclType	int		444825	0					
ANR	444831	Identifier	l		444825	1					
ANR	444832	AssignmentExpression	l = 0		444825	2		=			
ANR	444833	Identifier	l		444825	0					
ANR	444834	PrimaryExpression	0		444825	1					
ANR	444835	SwitchStatement	switch ( op -> operands_count )		444825	1					
ANR	444836	Condition	op -> operands_count	3975:9:98037:98054	444825	0	True				
ANR	444837	PtrMemberAccess	op -> operands_count		444825	0					
ANR	444838	Identifier	op		444825	0					
ANR	444839	Identifier	operands_count		444825	1					
ANR	444840	CompoundStatement		3:29:42:42	444825	1					
ANR	444841	Label	case 1 :	3976:1:98060:98066	444825	0	True				
ANR	444842	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		444825	1					
ANR	444843	Condition	op -> operands [ 0 ] . type & OT_WORD	3977:7:98075:98104	444825	0	True				
ANR	444844	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		444825	0		&			
ANR	444845	MemberAccess	op -> operands [ 0 ] . type		444825	0					
ANR	444846	ArrayIndexing	op -> operands [ 0 ]		444825	0					
ANR	444847	PtrMemberAccess	op -> operands		444825	0					
ANR	444848	Identifier	op		444825	0					
ANR	444849	Identifier	operands		444825	1					
ANR	444850	PrimaryExpression	0		444825	1					
ANR	444851	Identifier	type		444825	1					
ANR	444852	Identifier	OT_WORD		444825	1					
ANR	444853	CompoundStatement		5:40:93:93	444825	1					
ANR	444854	ExpressionStatement	data [ l ++ ] = 0x0f	3978:3:98113:98129	444825	0	True				
ANR	444855	AssignmentExpression	data [ l ++ ] = 0x0f		444825	0		=			
ANR	444856	ArrayIndexing	data [ l ++ ]		444825	0					
ANR	444857	Identifier	data		444825	0					
ANR	444858	PostIncDecOperationExpression	l ++		444825	1					
ANR	444859	Identifier	l		444825	0					
ANR	444860	IncDec	++		444825	1					
ANR	444861	PrimaryExpression	0x0f		444825	1					
ANR	444862	ExpressionStatement	data [ l ++ ] = 0x00	3979:3:98134:98150	444825	1	True				
ANR	444863	AssignmentExpression	data [ l ++ ] = 0x00		444825	0		=			
ANR	444864	ArrayIndexing	data [ l ++ ]		444825	0					
ANR	444865	Identifier	data		444825	0					
ANR	444866	PostIncDecOperationExpression	l ++		444825	1					
ANR	444867	Identifier	l		444825	0					
ANR	444868	IncDec	++		444825	1					
ANR	444869	PrimaryExpression	0x00		444825	1					
ANR	444870	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		444825	2					
ANR	444871	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3980:8:98160:98191	444825	0	True				
ANR	444872	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444825	0		&			
ANR	444873	MemberAccess	op -> operands [ 0 ] . type		444825	0					
ANR	444874	ArrayIndexing	op -> operands [ 0 ]		444825	0					
ANR	444875	PtrMemberAccess	op -> operands		444825	0					
ANR	444876	Identifier	op		444825	0					
ANR	444877	Identifier	operands		444825	1					
ANR	444878	PrimaryExpression	0		444825	1					
ANR	444879	Identifier	type		444825	1					
ANR	444880	Identifier	OT_MEMORY		444825	1					
ANR	444881	CompoundStatement		8:43:180:180	444825	1					
ANR	444882	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3981:4:98201:98243	444825	0	True				
ANR	444883	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		444825	0		=			
ANR	444884	ArrayIndexing	data [ l ++ ]		444825	0					
ANR	444885	Identifier	data		444825	0					
ANR	444886	PostIncDecOperationExpression	l ++		444825	1					
ANR	444887	Identifier	l		444825	0					
ANR	444888	IncDec	++		444825	1					
ANR	444889	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		444825	1		|			
ANR	444890	PrimaryExpression	0x28		444825	0					
ANR	444891	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444825	1					
ANR	444892	MemberAccess	op -> operands [ 0 ] . regs		444825	0					
ANR	444893	ArrayIndexing	op -> operands [ 0 ]		444825	0					
ANR	444894	PtrMemberAccess	op -> operands		444825	0					
ANR	444895	Identifier	op		444825	0					
ANR	444896	Identifier	operands		444825	1					
ANR	444897	PrimaryExpression	0		444825	1					
ANR	444898	Identifier	regs		444825	1					
ANR	444899	PrimaryExpression	0		444825	1					
ANR	444900	ElseStatement	else		444825	0					
ANR	444901	CompoundStatement		10:10:240:240	444825	0					
ANR	444902	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	3983:4:98261:98299	444825	0	True				
ANR	444903	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		444825	0		=			
ANR	444904	ArrayIndexing	data [ l ++ ]		444825	0					
ANR	444905	Identifier	data		444825	0					
ANR	444906	PostIncDecOperationExpression	l ++		444825	1					
ANR	444907	Identifier	l		444825	0					
ANR	444908	IncDec	++		444825	1					
ANR	444909	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		444825	1		|			
ANR	444910	PrimaryExpression	0xe8		444825	0					
ANR	444911	MemberAccess	op -> operands [ 0 ] . reg		444825	1					
ANR	444912	ArrayIndexing	op -> operands [ 0 ]		444825	0					
ANR	444913	PtrMemberAccess	op -> operands		444825	0					
ANR	444914	Identifier	op		444825	0					
ANR	444915	Identifier	operands		444825	1					
ANR	444916	PrimaryExpression	0		444825	1					
ANR	444917	Identifier	reg		444825	1					
ANR	444918	ElseStatement	else		444825	0					
ANR	444919	CompoundStatement		13:9:300:300	444825	0					
ANR	444920	ReturnStatement	return - 1 ;	3986:3:98320:98329	444825	0	True				
ANR	444921	UnaryOperationExpression	- 1		444825	0					
ANR	444922	UnaryOperator	-		444825	0					
ANR	444923	PrimaryExpression	1		444825	1					
ANR	444924	BreakStatement	break ;	3988:2:98337:98342	444825	2	True				
ANR	444925	Label	default :	3989:1:98345:98352	444825	3	True				
ANR	444926	Identifier	default		444825	0					
ANR	444927	ReturnStatement	return - 1 ;	3990:2:98356:98365	444825	4	True				
ANR	444928	UnaryOperationExpression	- 1		444825	0					
ANR	444929	UnaryOperator	-		444825	0					
ANR	444930	PrimaryExpression	1		444825	1					
ANR	444931	ReturnStatement	return l ;	3992:1:98371:98379	444825	2	True				
ANR	444932	Identifier	l		444825	0					
ANR	444933	ReturnType	static int		444825	1					
ANR	444934	Identifier	opverw		444825	2					
ANR	444935	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444825	3					
ANR	444936	Parameter	RAsm * a	3973:18:97976:97982	444825	0	True				
ANR	444937	ParameterType	RAsm *		444825	0					
ANR	444938	Identifier	a		444825	1					
ANR	444939	Parameter	ut8 * data	3973:27:97985:97993	444825	1	True				
ANR	444940	ParameterType	ut8 *		444825	0					
ANR	444941	Identifier	data		444825	1					
ANR	444942	Parameter	const Opcode * op	3973:38:97996:98011	444825	2	True				
ANR	444943	ParameterType	const Opcode *		444825	0					
ANR	444944	Identifier	op		444825	1					
ANR	444945	CFGEntryNode	ENTRY		444825		True				
ANR	444946	CFGExitNode	EXIT		444825		True				
ANR	444947	Symbol	a		444825						
ANR	444948	Symbol	op		444825						
ANR	444949	Symbol	OT_WORD		444825						
ANR	444950	Symbol	data		444825						
ANR	444951	Symbol	* op		444825						
ANR	444952	Symbol	* * op -> operands		444825						
ANR	444953	Symbol	l		444825						
ANR	444954	Symbol	* * op		444825						
ANR	444955	Symbol	* op -> operands		444825						
ANR	444956	Symbol	op -> operands_count		444825						
ANR	444957	Symbol	* op -> operands [ 0 ] . regs		444825						
ANR	444958	Symbol	op -> operands [ 0 ] . type		444825						
ANR	444959	Symbol	* * * op		444825						
ANR	444960	Symbol	op -> operands [ 0 ] . reg		444825						
ANR	444961	Symbol	op -> operands		444825						
ANR	444962	Symbol	* data		444825						
ANR	444963	Symbol	OT_MEMORY		444825						
ANR	444964	Symbol	op -> operands [ 0 ] . regs		444825						
ANR	444965	Function	opvmclear	3995:0:98384:98775							
ANR	444966	FunctionDef	"opvmclear (RAsm * a , ut8 * data , const Opcode * op)"		444965	0					
ANR	444967	CompoundStatement		3995:59:98443:98775	444965	0					
ANR	444968	IdentifierDeclStatement	int l = 0 ;	3996:1:98446:98455	444965	0	True				
ANR	444969	IdentifierDecl	l = 0		444965	0					
ANR	444970	IdentifierDeclType	int		444965	0					
ANR	444971	Identifier	l		444965	1					
ANR	444972	AssignmentExpression	l = 0		444965	2		=			
ANR	444973	Identifier	l		444965	0					
ANR	444974	PrimaryExpression	0		444965	1					
ANR	444975	SwitchStatement	switch ( op -> operands_count )		444965	1					
ANR	444976	Condition	op -> operands_count	3997:9:98466:98483	444965	0	True				
ANR	444977	PtrMemberAccess	op -> operands_count		444965	0					
ANR	444978	Identifier	op		444965	0					
ANR	444979	Identifier	operands_count		444965	1					
ANR	444980	CompoundStatement		3:29:42:42	444965	1					
ANR	444981	Label	case 1 :	3998:1:98489:98495	444965	0	True				
ANR	444982	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		444965	1					
ANR	444983	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	3999:7:98504:98577	444965	0	True				
ANR	444984	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		444965	0		&&			
ANR	444985	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		444965	0		&			
ANR	444986	MemberAccess	op -> operands [ 0 ] . type		444965	0					
ANR	444987	ArrayIndexing	op -> operands [ 0 ]		444965	0					
ANR	444988	PtrMemberAccess	op -> operands		444965	0					
ANR	444989	Identifier	op		444965	0					
ANR	444990	Identifier	operands		444965	1					
ANR	444991	PrimaryExpression	0		444965	1					
ANR	444992	Identifier	type		444965	1					
ANR	444993	Identifier	OT_MEMORY		444965	1					
ANR	444994	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		444965	1		&			
ANR	444995	MemberAccess	op -> operands [ 0 ] . type		444965	0					
ANR	444996	ArrayIndexing	op -> operands [ 0 ]		444965	0					
ANR	444997	PtrMemberAccess	op -> operands		444965	0					
ANR	444998	Identifier	op		444965	0					
ANR	444999	Identifier	operands		444965	1					
ANR	445000	PrimaryExpression	0		444965	1					
ANR	445001	Identifier	type		444965	1					
ANR	445002	Identifier	OT_QWORD		444965	1					
ANR	445003	CompoundStatement		7:9:144:144	444965	1					
ANR	445004	ExpressionStatement	data [ l ++ ] = 0x66	4002:3:98593:98609	444965	0	True				
ANR	445005	AssignmentExpression	data [ l ++ ] = 0x66		444965	0		=			
ANR	445006	ArrayIndexing	data [ l ++ ]		444965	0					
ANR	445007	Identifier	data		444965	0					
ANR	445008	PostIncDecOperationExpression	l ++		444965	1					
ANR	445009	Identifier	l		444965	0					
ANR	445010	IncDec	++		444965	1					
ANR	445011	PrimaryExpression	0x66		444965	1					
ANR	445012	ExpressionStatement	data [ l ++ ] = 0x0f	4003:3:98614:98630	444965	1	True				
ANR	445013	AssignmentExpression	data [ l ++ ] = 0x0f		444965	0		=			
ANR	445014	ArrayIndexing	data [ l ++ ]		444965	0					
ANR	445015	Identifier	data		444965	0					
ANR	445016	PostIncDecOperationExpression	l ++		444965	1					
ANR	445017	Identifier	l		444965	0					
ANR	445018	IncDec	++		444965	1					
ANR	445019	PrimaryExpression	0x0f		444965	1					
ANR	445020	ExpressionStatement	data [ l ++ ] = 0xc7	4004:3:98635:98651	444965	2	True				
ANR	445021	AssignmentExpression	data [ l ++ ] = 0xc7		444965	0		=			
ANR	445022	ArrayIndexing	data [ l ++ ]		444965	0					
ANR	445023	Identifier	data		444965	0					
ANR	445024	PostIncDecOperationExpression	l ++		444965	1					
ANR	445025	Identifier	l		444965	0					
ANR	445026	IncDec	++		444965	1					
ANR	445027	PrimaryExpression	0xc7		444965	1					
ANR	445028	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	4005:3:98656:98698	444965	3	True				
ANR	445029	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		444965	0		=			
ANR	445030	ArrayIndexing	data [ l ++ ]		444965	0					
ANR	445031	Identifier	data		444965	0					
ANR	445032	PostIncDecOperationExpression	l ++		444965	1					
ANR	445033	Identifier	l		444965	0					
ANR	445034	IncDec	++		444965	1					
ANR	445035	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		444965	1		|			
ANR	445036	PrimaryExpression	0x30		444965	0					
ANR	445037	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		444965	1					
ANR	445038	MemberAccess	op -> operands [ 0 ] . regs		444965	0					
ANR	445039	ArrayIndexing	op -> operands [ 0 ]		444965	0					
ANR	445040	PtrMemberAccess	op -> operands		444965	0					
ANR	445041	Identifier	op		444965	0					
ANR	445042	Identifier	operands		444965	1					
ANR	445043	PrimaryExpression	0		444965	1					
ANR	445044	Identifier	regs		444965	1					
ANR	445045	PrimaryExpression	0		444965	1					
ANR	445046	ElseStatement	else		444965	0					
ANR	445047	CompoundStatement		12:9:265:265	444965	0					
ANR	445048	ReturnStatement	return - 1 ;	4007:3:98714:98723	444965	0	True				
ANR	445049	UnaryOperationExpression	- 1		444965	0					
ANR	445050	UnaryOperator	-		444965	0					
ANR	445051	PrimaryExpression	1		444965	1					
ANR	445052	BreakStatement	break ;	4009:2:98731:98736	444965	2	True				
ANR	445053	Label	default :	4010:1:98739:98746	444965	3	True				
ANR	445054	Identifier	default		444965	0					
ANR	445055	ReturnStatement	return - 1 ;	4011:2:98750:98759	444965	4	True				
ANR	445056	UnaryOperationExpression	- 1		444965	0					
ANR	445057	UnaryOperator	-		444965	0					
ANR	445058	PrimaryExpression	1		444965	1					
ANR	445059	ReturnStatement	return l ;	4013:1:98765:98773	444965	2	True				
ANR	445060	Identifier	l		444965	0					
ANR	445061	ReturnType	static int		444965	1					
ANR	445062	Identifier	opvmclear		444965	2					
ANR	445063	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		444965	3					
ANR	445064	Parameter	RAsm * a	3995:21:98405:98411	444965	0	True				
ANR	445065	ParameterType	RAsm *		444965	0					
ANR	445066	Identifier	a		444965	1					
ANR	445067	Parameter	ut8 * data	3995:30:98414:98422	444965	1	True				
ANR	445068	ParameterType	ut8 *		444965	0					
ANR	445069	Identifier	data		444965	1					
ANR	445070	Parameter	const Opcode * op	3995:41:98425:98440	444965	2	True				
ANR	445071	ParameterType	const Opcode *		444965	0					
ANR	445072	Identifier	op		444965	1					
ANR	445073	CFGEntryNode	ENTRY		444965		True				
ANR	445074	CFGExitNode	EXIT		444965		True				
ANR	445075	Symbol	a		444965						
ANR	445076	Symbol	op		444965						
ANR	445077	Symbol	OT_QWORD		444965						
ANR	445078	Symbol	data		444965						
ANR	445079	Symbol	* op		444965						
ANR	445080	Symbol	* * op -> operands		444965						
ANR	445081	Symbol	l		444965						
ANR	445082	Symbol	* * op		444965						
ANR	445083	Symbol	* op -> operands		444965						
ANR	445084	Symbol	op -> operands_count		444965						
ANR	445085	Symbol	* op -> operands [ 0 ] . regs		444965						
ANR	445086	Symbol	op -> operands [ 0 ] . type		444965						
ANR	445087	Symbol	* * * op		444965						
ANR	445088	Symbol	op -> operands		444965						
ANR	445089	Symbol	OT_MEMORY		444965						
ANR	445090	Symbol	* data		444965						
ANR	445091	Symbol	op -> operands [ 0 ] . regs		444965						
ANR	445092	Function	opvmon	4016:0:98778:99166							
ANR	445093	FunctionDef	"opvmon (RAsm * a , ut8 * data , const Opcode * op)"		445092	0					
ANR	445094	CompoundStatement		4016:56:98834:99166	445092	0					
ANR	445095	IdentifierDeclStatement	int l = 0 ;	4017:1:98837:98846	445092	0	True				
ANR	445096	IdentifierDecl	l = 0		445092	0					
ANR	445097	IdentifierDeclType	int		445092	0					
ANR	445098	Identifier	l		445092	1					
ANR	445099	AssignmentExpression	l = 0		445092	2		=			
ANR	445100	Identifier	l		445092	0					
ANR	445101	PrimaryExpression	0		445092	1					
ANR	445102	SwitchStatement	switch ( op -> operands_count )		445092	1					
ANR	445103	Condition	op -> operands_count	4018:9:98857:98874	445092	0	True				
ANR	445104	PtrMemberAccess	op -> operands_count		445092	0					
ANR	445105	Identifier	op		445092	0					
ANR	445106	Identifier	operands_count		445092	1					
ANR	445107	CompoundStatement		3:29:42:42	445092	1					
ANR	445108	Label	case 1 :	4019:1:98880:98886	445092	0	True				
ANR	445109	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		445092	1					
ANR	445110	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	4020:7:98895:98968	445092	0	True				
ANR	445111	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		445092	0		&&			
ANR	445112	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		445092	0		&			
ANR	445113	MemberAccess	op -> operands [ 0 ] . type		445092	0					
ANR	445114	ArrayIndexing	op -> operands [ 0 ]		445092	0					
ANR	445115	PtrMemberAccess	op -> operands		445092	0					
ANR	445116	Identifier	op		445092	0					
ANR	445117	Identifier	operands		445092	1					
ANR	445118	PrimaryExpression	0		445092	1					
ANR	445119	Identifier	type		445092	1					
ANR	445120	Identifier	OT_MEMORY		445092	1					
ANR	445121	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		445092	1		&			
ANR	445122	MemberAccess	op -> operands [ 0 ] . type		445092	0					
ANR	445123	ArrayIndexing	op -> operands [ 0 ]		445092	0					
ANR	445124	PtrMemberAccess	op -> operands		445092	0					
ANR	445125	Identifier	op		445092	0					
ANR	445126	Identifier	operands		445092	1					
ANR	445127	PrimaryExpression	0		445092	1					
ANR	445128	Identifier	type		445092	1					
ANR	445129	Identifier	OT_QWORD		445092	1					
ANR	445130	CompoundStatement		7:9:144:144	445092	1					
ANR	445131	ExpressionStatement	data [ l ++ ] = 0xf3	4023:3:98984:99000	445092	0	True				
ANR	445132	AssignmentExpression	data [ l ++ ] = 0xf3		445092	0		=			
ANR	445133	ArrayIndexing	data [ l ++ ]		445092	0					
ANR	445134	Identifier	data		445092	0					
ANR	445135	PostIncDecOperationExpression	l ++		445092	1					
ANR	445136	Identifier	l		445092	0					
ANR	445137	IncDec	++		445092	1					
ANR	445138	PrimaryExpression	0xf3		445092	1					
ANR	445139	ExpressionStatement	data [ l ++ ] = 0x0f	4024:3:99005:99021	445092	1	True				
ANR	445140	AssignmentExpression	data [ l ++ ] = 0x0f		445092	0		=			
ANR	445141	ArrayIndexing	data [ l ++ ]		445092	0					
ANR	445142	Identifier	data		445092	0					
ANR	445143	PostIncDecOperationExpression	l ++		445092	1					
ANR	445144	Identifier	l		445092	0					
ANR	445145	IncDec	++		445092	1					
ANR	445146	PrimaryExpression	0x0f		445092	1					
ANR	445147	ExpressionStatement	data [ l ++ ] = 0xc7	4025:3:99026:99042	445092	2	True				
ANR	445148	AssignmentExpression	data [ l ++ ] = 0xc7		445092	0		=			
ANR	445149	ArrayIndexing	data [ l ++ ]		445092	0					
ANR	445150	Identifier	data		445092	0					
ANR	445151	PostIncDecOperationExpression	l ++		445092	1					
ANR	445152	Identifier	l		445092	0					
ANR	445153	IncDec	++		445092	1					
ANR	445154	PrimaryExpression	0xc7		445092	1					
ANR	445155	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	4026:3:99047:99089	445092	3	True				
ANR	445156	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		445092	0		=			
ANR	445157	ArrayIndexing	data [ l ++ ]		445092	0					
ANR	445158	Identifier	data		445092	0					
ANR	445159	PostIncDecOperationExpression	l ++		445092	1					
ANR	445160	Identifier	l		445092	0					
ANR	445161	IncDec	++		445092	1					
ANR	445162	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		445092	1		|			
ANR	445163	PrimaryExpression	0x30		445092	0					
ANR	445164	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		445092	1					
ANR	445165	MemberAccess	op -> operands [ 0 ] . regs		445092	0					
ANR	445166	ArrayIndexing	op -> operands [ 0 ]		445092	0					
ANR	445167	PtrMemberAccess	op -> operands		445092	0					
ANR	445168	Identifier	op		445092	0					
ANR	445169	Identifier	operands		445092	1					
ANR	445170	PrimaryExpression	0		445092	1					
ANR	445171	Identifier	regs		445092	1					
ANR	445172	PrimaryExpression	0		445092	1					
ANR	445173	ElseStatement	else		445092	0					
ANR	445174	CompoundStatement		12:9:265:265	445092	0					
ANR	445175	ReturnStatement	return - 1 ;	4028:3:99105:99114	445092	0	True				
ANR	445176	UnaryOperationExpression	- 1		445092	0					
ANR	445177	UnaryOperator	-		445092	0					
ANR	445178	PrimaryExpression	1		445092	1					
ANR	445179	BreakStatement	break ;	4030:2:99122:99127	445092	2	True				
ANR	445180	Label	default :	4031:1:99130:99137	445092	3	True				
ANR	445181	Identifier	default		445092	0					
ANR	445182	ReturnStatement	return - 1 ;	4032:2:99141:99150	445092	4	True				
ANR	445183	UnaryOperationExpression	- 1		445092	0					
ANR	445184	UnaryOperator	-		445092	0					
ANR	445185	PrimaryExpression	1		445092	1					
ANR	445186	ReturnStatement	return l ;	4034:1:99156:99164	445092	2	True				
ANR	445187	Identifier	l		445092	0					
ANR	445188	ReturnType	static int		445092	1					
ANR	445189	Identifier	opvmon		445092	2					
ANR	445190	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		445092	3					
ANR	445191	Parameter	RAsm * a	4016:18:98796:98802	445092	0	True				
ANR	445192	ParameterType	RAsm *		445092	0					
ANR	445193	Identifier	a		445092	1					
ANR	445194	Parameter	ut8 * data	4016:27:98805:98813	445092	1	True				
ANR	445195	ParameterType	ut8 *		445092	0					
ANR	445196	Identifier	data		445092	1					
ANR	445197	Parameter	const Opcode * op	4016:38:98816:98831	445092	2	True				
ANR	445198	ParameterType	const Opcode *		445092	0					
ANR	445199	Identifier	op		445092	1					
ANR	445200	CFGEntryNode	ENTRY		445092		True				
ANR	445201	CFGExitNode	EXIT		445092		True				
ANR	445202	Symbol	a		445092						
ANR	445203	Symbol	op		445092						
ANR	445204	Symbol	OT_QWORD		445092						
ANR	445205	Symbol	data		445092						
ANR	445206	Symbol	* op		445092						
ANR	445207	Symbol	* * op -> operands		445092						
ANR	445208	Symbol	l		445092						
ANR	445209	Symbol	* * op		445092						
ANR	445210	Symbol	* op -> operands		445092						
ANR	445211	Symbol	op -> operands_count		445092						
ANR	445212	Symbol	* op -> operands [ 0 ] . regs		445092						
ANR	445213	Symbol	op -> operands [ 0 ] . type		445092						
ANR	445214	Symbol	* * * op		445092						
ANR	445215	Symbol	op -> operands		445092						
ANR	445216	Symbol	OT_MEMORY		445092						
ANR	445217	Symbol	* data		445092						
ANR	445218	Symbol	op -> operands [ 0 ] . regs		445092						
ANR	445219	Function	opvmptrld	4037:0:99169:99539							
ANR	445220	FunctionDef	"opvmptrld (RAsm * a , ut8 * data , const Opcode * op)"		445219	0					
ANR	445221	CompoundStatement		4037:59:99228:99539	445219	0					
ANR	445222	IdentifierDeclStatement	int l = 0 ;	4038:1:99231:99240	445219	0	True				
ANR	445223	IdentifierDecl	l = 0		445219	0					
ANR	445224	IdentifierDeclType	int		445219	0					
ANR	445225	Identifier	l		445219	1					
ANR	445226	AssignmentExpression	l = 0		445219	2		=			
ANR	445227	Identifier	l		445219	0					
ANR	445228	PrimaryExpression	0		445219	1					
ANR	445229	SwitchStatement	switch ( op -> operands_count )		445219	1					
ANR	445230	Condition	op -> operands_count	4039:9:99251:99268	445219	0	True				
ANR	445231	PtrMemberAccess	op -> operands_count		445219	0					
ANR	445232	Identifier	op		445219	0					
ANR	445233	Identifier	operands_count		445219	1					
ANR	445234	CompoundStatement		3:29:42:42	445219	1					
ANR	445235	Label	case 1 :	4040:1:99274:99280	445219	0	True				
ANR	445236	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		445219	1					
ANR	445237	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	4041:7:99289:99362	445219	0	True				
ANR	445238	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		445219	0		&&			
ANR	445239	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		445219	0		&			
ANR	445240	MemberAccess	op -> operands [ 0 ] . type		445219	0					
ANR	445241	ArrayIndexing	op -> operands [ 0 ]		445219	0					
ANR	445242	PtrMemberAccess	op -> operands		445219	0					
ANR	445243	Identifier	op		445219	0					
ANR	445244	Identifier	operands		445219	1					
ANR	445245	PrimaryExpression	0		445219	1					
ANR	445246	Identifier	type		445219	1					
ANR	445247	Identifier	OT_MEMORY		445219	1					
ANR	445248	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		445219	1		&			
ANR	445249	MemberAccess	op -> operands [ 0 ] . type		445219	0					
ANR	445250	ArrayIndexing	op -> operands [ 0 ]		445219	0					
ANR	445251	PtrMemberAccess	op -> operands		445219	0					
ANR	445252	Identifier	op		445219	0					
ANR	445253	Identifier	operands		445219	1					
ANR	445254	PrimaryExpression	0		445219	1					
ANR	445255	Identifier	type		445219	1					
ANR	445256	Identifier	OT_QWORD		445219	1					
ANR	445257	CompoundStatement		7:9:144:144	445219	1					
ANR	445258	ExpressionStatement	data [ l ++ ] = 0x0f	4044:3:99378:99394	445219	0	True				
ANR	445259	AssignmentExpression	data [ l ++ ] = 0x0f		445219	0		=			
ANR	445260	ArrayIndexing	data [ l ++ ]		445219	0					
ANR	445261	Identifier	data		445219	0					
ANR	445262	PostIncDecOperationExpression	l ++		445219	1					
ANR	445263	Identifier	l		445219	0					
ANR	445264	IncDec	++		445219	1					
ANR	445265	PrimaryExpression	0x0f		445219	1					
ANR	445266	ExpressionStatement	data [ l ++ ] = 0xc7	4045:3:99399:99415	445219	1	True				
ANR	445267	AssignmentExpression	data [ l ++ ] = 0xc7		445219	0		=			
ANR	445268	ArrayIndexing	data [ l ++ ]		445219	0					
ANR	445269	Identifier	data		445219	0					
ANR	445270	PostIncDecOperationExpression	l ++		445219	1					
ANR	445271	Identifier	l		445219	0					
ANR	445272	IncDec	++		445219	1					
ANR	445273	PrimaryExpression	0xc7		445219	1					
ANR	445274	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	4046:3:99420:99462	445219	2	True				
ANR	445275	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		445219	0		=			
ANR	445276	ArrayIndexing	data [ l ++ ]		445219	0					
ANR	445277	Identifier	data		445219	0					
ANR	445278	PostIncDecOperationExpression	l ++		445219	1					
ANR	445279	Identifier	l		445219	0					
ANR	445280	IncDec	++		445219	1					
ANR	445281	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		445219	1		|			
ANR	445282	PrimaryExpression	0x30		445219	0					
ANR	445283	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		445219	1					
ANR	445284	MemberAccess	op -> operands [ 0 ] . regs		445219	0					
ANR	445285	ArrayIndexing	op -> operands [ 0 ]		445219	0					
ANR	445286	PtrMemberAccess	op -> operands		445219	0					
ANR	445287	Identifier	op		445219	0					
ANR	445288	Identifier	operands		445219	1					
ANR	445289	PrimaryExpression	0		445219	1					
ANR	445290	Identifier	regs		445219	1					
ANR	445291	PrimaryExpression	0		445219	1					
ANR	445292	ElseStatement	else		445219	0					
ANR	445293	CompoundStatement		11:9:244:244	445219	0					
ANR	445294	ReturnStatement	return - 1 ;	4048:3:99478:99487	445219	0	True				
ANR	445295	UnaryOperationExpression	- 1		445219	0					
ANR	445296	UnaryOperator	-		445219	0					
ANR	445297	PrimaryExpression	1		445219	1					
ANR	445298	BreakStatement	break ;	4050:2:99495:99500	445219	2	True				
ANR	445299	Label	default :	4051:1:99503:99510	445219	3	True				
ANR	445300	Identifier	default		445219	0					
ANR	445301	ReturnStatement	return - 1 ;	4052:2:99514:99523	445219	4	True				
ANR	445302	UnaryOperationExpression	- 1		445219	0					
ANR	445303	UnaryOperator	-		445219	0					
ANR	445304	PrimaryExpression	1		445219	1					
ANR	445305	ReturnStatement	return l ;	4054:1:99529:99537	445219	2	True				
ANR	445306	Identifier	l		445219	0					
ANR	445307	ReturnType	static int		445219	1					
ANR	445308	Identifier	opvmptrld		445219	2					
ANR	445309	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		445219	3					
ANR	445310	Parameter	RAsm * a	4037:21:99190:99196	445219	0	True				
ANR	445311	ParameterType	RAsm *		445219	0					
ANR	445312	Identifier	a		445219	1					
ANR	445313	Parameter	ut8 * data	4037:30:99199:99207	445219	1	True				
ANR	445314	ParameterType	ut8 *		445219	0					
ANR	445315	Identifier	data		445219	1					
ANR	445316	Parameter	const Opcode * op	4037:41:99210:99225	445219	2	True				
ANR	445317	ParameterType	const Opcode *		445219	0					
ANR	445318	Identifier	op		445219	1					
ANR	445319	CFGEntryNode	ENTRY		445219		True				
ANR	445320	CFGExitNode	EXIT		445219		True				
ANR	445321	Symbol	a		445219						
ANR	445322	Symbol	op		445219						
ANR	445323	Symbol	OT_QWORD		445219						
ANR	445324	Symbol	data		445219						
ANR	445325	Symbol	* op		445219						
ANR	445326	Symbol	* * op -> operands		445219						
ANR	445327	Symbol	l		445219						
ANR	445328	Symbol	* * op		445219						
ANR	445329	Symbol	* op -> operands		445219						
ANR	445330	Symbol	op -> operands_count		445219						
ANR	445331	Symbol	* op -> operands [ 0 ] . regs		445219						
ANR	445332	Symbol	op -> operands [ 0 ] . type		445219						
ANR	445333	Symbol	* * * op		445219						
ANR	445334	Symbol	op -> operands		445219						
ANR	445335	Symbol	OT_MEMORY		445219						
ANR	445336	Symbol	* data		445219						
ANR	445337	Symbol	op -> operands [ 0 ] . regs		445219						
ANR	445338	Function	opvmptrst	4057:0:99542:99912							
ANR	445339	FunctionDef	"opvmptrst (RAsm * a , ut8 * data , const Opcode * op)"		445338	0					
ANR	445340	CompoundStatement		4057:59:99601:99912	445338	0					
ANR	445341	IdentifierDeclStatement	int l = 0 ;	4058:1:99604:99613	445338	0	True				
ANR	445342	IdentifierDecl	l = 0		445338	0					
ANR	445343	IdentifierDeclType	int		445338	0					
ANR	445344	Identifier	l		445338	1					
ANR	445345	AssignmentExpression	l = 0		445338	2		=			
ANR	445346	Identifier	l		445338	0					
ANR	445347	PrimaryExpression	0		445338	1					
ANR	445348	SwitchStatement	switch ( op -> operands_count )		445338	1					
ANR	445349	Condition	op -> operands_count	4059:9:99624:99641	445338	0	True				
ANR	445350	PtrMemberAccess	op -> operands_count		445338	0					
ANR	445351	Identifier	op		445338	0					
ANR	445352	Identifier	operands_count		445338	1					
ANR	445353	CompoundStatement		3:29:42:42	445338	1					
ANR	445354	Label	case 1 :	4060:1:99647:99653	445338	0	True				
ANR	445355	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		445338	1					
ANR	445356	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	4061:7:99662:99735	445338	0	True				
ANR	445357	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		445338	0		&&			
ANR	445358	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		445338	0		&			
ANR	445359	MemberAccess	op -> operands [ 0 ] . type		445338	0					
ANR	445360	ArrayIndexing	op -> operands [ 0 ]		445338	0					
ANR	445361	PtrMemberAccess	op -> operands		445338	0					
ANR	445362	Identifier	op		445338	0					
ANR	445363	Identifier	operands		445338	1					
ANR	445364	PrimaryExpression	0		445338	1					
ANR	445365	Identifier	type		445338	1					
ANR	445366	Identifier	OT_MEMORY		445338	1					
ANR	445367	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		445338	1		&			
ANR	445368	MemberAccess	op -> operands [ 0 ] . type		445338	0					
ANR	445369	ArrayIndexing	op -> operands [ 0 ]		445338	0					
ANR	445370	PtrMemberAccess	op -> operands		445338	0					
ANR	445371	Identifier	op		445338	0					
ANR	445372	Identifier	operands		445338	1					
ANR	445373	PrimaryExpression	0		445338	1					
ANR	445374	Identifier	type		445338	1					
ANR	445375	Identifier	OT_QWORD		445338	1					
ANR	445376	CompoundStatement		7:9:144:144	445338	1					
ANR	445377	ExpressionStatement	data [ l ++ ] = 0x0f	4064:3:99751:99767	445338	0	True				
ANR	445378	AssignmentExpression	data [ l ++ ] = 0x0f		445338	0		=			
ANR	445379	ArrayIndexing	data [ l ++ ]		445338	0					
ANR	445380	Identifier	data		445338	0					
ANR	445381	PostIncDecOperationExpression	l ++		445338	1					
ANR	445382	Identifier	l		445338	0					
ANR	445383	IncDec	++		445338	1					
ANR	445384	PrimaryExpression	0x0f		445338	1					
ANR	445385	ExpressionStatement	data [ l ++ ] = 0xc7	4065:3:99772:99788	445338	1	True				
ANR	445386	AssignmentExpression	data [ l ++ ] = 0xc7		445338	0		=			
ANR	445387	ArrayIndexing	data [ l ++ ]		445338	0					
ANR	445388	Identifier	data		445338	0					
ANR	445389	PostIncDecOperationExpression	l ++		445338	1					
ANR	445390	Identifier	l		445338	0					
ANR	445391	IncDec	++		445338	1					
ANR	445392	PrimaryExpression	0xc7		445338	1					
ANR	445393	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	4066:3:99793:99835	445338	2	True				
ANR	445394	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		445338	0		=			
ANR	445395	ArrayIndexing	data [ l ++ ]		445338	0					
ANR	445396	Identifier	data		445338	0					
ANR	445397	PostIncDecOperationExpression	l ++		445338	1					
ANR	445398	Identifier	l		445338	0					
ANR	445399	IncDec	++		445338	1					
ANR	445400	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		445338	1		|			
ANR	445401	PrimaryExpression	0x38		445338	0					
ANR	445402	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		445338	1					
ANR	445403	MemberAccess	op -> operands [ 0 ] . regs		445338	0					
ANR	445404	ArrayIndexing	op -> operands [ 0 ]		445338	0					
ANR	445405	PtrMemberAccess	op -> operands		445338	0					
ANR	445406	Identifier	op		445338	0					
ANR	445407	Identifier	operands		445338	1					
ANR	445408	PrimaryExpression	0		445338	1					
ANR	445409	Identifier	regs		445338	1					
ANR	445410	PrimaryExpression	0		445338	1					
ANR	445411	ElseStatement	else		445338	0					
ANR	445412	CompoundStatement		11:9:244:244	445338	0					
ANR	445413	ReturnStatement	return - 1 ;	4068:3:99851:99860	445338	0	True				
ANR	445414	UnaryOperationExpression	- 1		445338	0					
ANR	445415	UnaryOperator	-		445338	0					
ANR	445416	PrimaryExpression	1		445338	1					
ANR	445417	BreakStatement	break ;	4070:2:99868:99873	445338	2	True				
ANR	445418	Label	default :	4071:1:99876:99883	445338	3	True				
ANR	445419	Identifier	default		445338	0					
ANR	445420	ReturnStatement	return - 1 ;	4072:2:99887:99896	445338	4	True				
ANR	445421	UnaryOperationExpression	- 1		445338	0					
ANR	445422	UnaryOperator	-		445338	0					
ANR	445423	PrimaryExpression	1		445338	1					
ANR	445424	ReturnStatement	return l ;	4074:1:99902:99910	445338	2	True				
ANR	445425	Identifier	l		445338	0					
ANR	445426	ReturnType	static int		445338	1					
ANR	445427	Identifier	opvmptrst		445338	2					
ANR	445428	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		445338	3					
ANR	445429	Parameter	RAsm * a	4057:21:99563:99569	445338	0	True				
ANR	445430	ParameterType	RAsm *		445338	0					
ANR	445431	Identifier	a		445338	1					
ANR	445432	Parameter	ut8 * data	4057:30:99572:99580	445338	1	True				
ANR	445433	ParameterType	ut8 *		445338	0					
ANR	445434	Identifier	data		445338	1					
ANR	445435	Parameter	const Opcode * op	4057:41:99583:99598	445338	2	True				
ANR	445436	ParameterType	const Opcode *		445338	0					
ANR	445437	Identifier	op		445338	1					
ANR	445438	CFGEntryNode	ENTRY		445338		True				
ANR	445439	CFGExitNode	EXIT		445338		True				
ANR	445440	Symbol	a		445338						
ANR	445441	Symbol	op		445338						
ANR	445442	Symbol	OT_QWORD		445338						
ANR	445443	Symbol	data		445338						
ANR	445444	Symbol	* op		445338						
ANR	445445	Symbol	* * op -> operands		445338						
ANR	445446	Symbol	l		445338						
ANR	445447	Symbol	* * op		445338						
ANR	445448	Symbol	* op -> operands		445338						
ANR	445449	Symbol	op -> operands_count		445338						
ANR	445450	Symbol	* op -> operands [ 0 ] . regs		445338						
ANR	445451	Symbol	op -> operands [ 0 ] . type		445338						
ANR	445452	Symbol	* * * op		445338						
ANR	445453	Symbol	op -> operands		445338						
ANR	445454	Symbol	OT_MEMORY		445338						
ANR	445455	Symbol	* data		445338						
ANR	445456	Symbol	op -> operands [ 0 ] . regs		445338						
ANR	445457	ClassDef	lookup_t	4077:8:99923:100056							
ANR	445458	DeclStmt									
ANR	445459	Decl							char	char [ 12 ]	mnemonic
ANR	445460	DeclStmt									
ANR	445461	Decl							int	int	only_x32
ANR	445462	DeclStmt									
ANR	445463	Decl							"int ( * ) ( RAsm * , ut8 * , const Opcode * )"	"int ( * ) ( RAsm * , ut8 * , const Opcode * )"	opdo
ANR	445464	DeclStmt									
ANR	445465	Decl							ut64	ut64	opcode
ANR	445466	DeclStmt									
ANR	445467	Decl							int	int	size
ANR	445468	DeclStmt									
ANR	445469	Decl							lookup_t	lookup_t	LookupTable
ANR	445470	DeclStmt									
ANR	445471	Decl							LookupTable	LookupTable [ ]	oplookup
ANR	445472	Function	getToken	4438:0:110124:110926							
ANR	445473	FunctionDef	"getToken (const char * str , size_t * begin , size_t * end)"		445472	0					
ANR	445474	CompoundStatement		4438:77:110201:110926	445472	0					
ANR	445475	IfStatement	if ( * begin > strlen ( str ) )		445472	0					
ANR	445476	Condition	* begin > strlen ( str )	4439:5:110208:110228	445472	0	True				
ANR	445477	RelationalExpression	* begin > strlen ( str )		445472	0		>			
ANR	445478	UnaryOperationExpression	* begin		445472	0					
ANR	445479	UnaryOperator	*		445472	0					
ANR	445480	Identifier	begin		445472	1					
ANR	445481	CallExpression	strlen ( str )		445472	1					
ANR	445482	Callee	strlen		445472	0					
ANR	445483	Identifier	strlen		445472	0					
ANR	445484	ArgumentList	str		445472	1					
ANR	445485	Argument	str		445472	0					
ANR	445486	Identifier	str		445472	0					
ANR	445487	CompoundStatement		2:28:29:29	445472	1					
ANR	445488	ReturnStatement	return TT_EOF ;	4440:2:110235:110248	445472	0	True				
ANR	445489	Identifier	TT_EOF		445472	0					
ANR	445490	WhileStatement	while ( begin && str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] ) )		445472	1					
ANR	445491	Condition	begin && str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] )	4443:8:110281:110330	445472	0	True				
ANR	445492	AndExpression	begin && str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] )		445472	0		&&			
ANR	445493	Identifier	begin		445472	0					
ANR	445494	AndExpression	str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] )		445472	1		&&			
ANR	445495	ArrayIndexing	str [ * begin ]		445472	0					
ANR	445496	Identifier	str		445472	0					
ANR	445497	UnaryOperationExpression	* begin		445472	1					
ANR	445498	UnaryOperator	*		445472	0					
ANR	445499	Identifier	begin		445472	1					
ANR	445500	CallExpression	isspace ( ( ut8 ) str [ * begin ] )		445472	1					
ANR	445501	Callee	isspace		445472	0					
ANR	445502	Identifier	isspace		445472	0					
ANR	445503	ArgumentList	( ut8 ) str [ * begin ]		445472	1					
ANR	445504	Argument	( ut8 ) str [ * begin ]		445472	0					
ANR	445505	CastExpression	( ut8 ) str [ * begin ]		445472	0					
ANR	445506	CastTarget	ut8		445472	0					
ANR	445507	ArrayIndexing	str [ * begin ]		445472	1					
ANR	445508	Identifier	str		445472	0					
ANR	445509	UnaryOperationExpression	* begin		445472	1					
ANR	445510	UnaryOperator	*		445472	0					
ANR	445511	Identifier	begin		445472	1					
ANR	445512	CompoundStatement		6:60:131:131	445472	1					
ANR	445513	ExpressionStatement	++ ( * begin )	4444:2:110337:110347	445472	0	True				
ANR	445514	UnaryExpression	++ ( * begin )		445472	0					
ANR	445515	IncDec	++		445472	0					
ANR	445516	UnaryOperationExpression	* begin		445472	1					
ANR	445517	UnaryOperator	*		445472	0					
ANR	445518	Identifier	begin		445472	1					
ANR	445519	IfStatement	if ( ! str [ * begin ] )		445472	2					
ANR	445520	Condition	! str [ * begin ]	4447:5:110358:110369	445472	0	True				
ANR	445521	UnaryOperationExpression	! str [ * begin ]		445472	0					
ANR	445522	UnaryOperator	!		445472	0					
ANR	445523	ArrayIndexing	str [ * begin ]		445472	1					
ANR	445524	Identifier	str		445472	0					
ANR	445525	UnaryOperationExpression	* begin		445472	1					
ANR	445526	UnaryOperator	*		445472	0					
ANR	445527	Identifier	begin		445472	1					
ANR	445528	CompoundStatement		10:19:170:170	445472	1					
ANR	445529	ExpressionStatement	* end = * begin	4448:2:110404:110417	445472	0	True				
ANR	445530	AssignmentExpression	* end = * begin		445472	0		=			
ANR	445531	UnaryOperationExpression	* end		445472	0					
ANR	445532	UnaryOperator	*		445472	0					
ANR	445533	Identifier	end		445472	1					
ANR	445534	UnaryOperationExpression	* begin		445472	1					
ANR	445535	UnaryOperator	*		445472	0					
ANR	445536	Identifier	begin		445472	1					
ANR	445537	ReturnStatement	return TT_EOF ;	4449:2:110421:110434	445472	1	True				
ANR	445538	Identifier	TT_EOF		445472	0					
ANR	445539	IfStatement	if ( isalpha ( ( ut8 ) str [ * begin ] ) )		445472	3					
ANR	445540	Condition	isalpha ( ( ut8 ) str [ * begin ] )	4451:5:110444:110469	445472	0	True				
ANR	445541	CallExpression	isalpha ( ( ut8 ) str [ * begin ] )		445472	0					
ANR	445542	Callee	isalpha		445472	0					
ANR	445543	Identifier	isalpha		445472	0					
ANR	445544	ArgumentList	( ut8 ) str [ * begin ]		445472	1					
ANR	445545	Argument	( ut8 ) str [ * begin ]		445472	0					
ANR	445546	CastExpression	( ut8 ) str [ * begin ]		445472	0					
ANR	445547	CastTarget	ut8		445472	0					
ANR	445548	ArrayIndexing	str [ * begin ]		445472	1					
ANR	445549	Identifier	str		445472	0					
ANR	445550	UnaryOperationExpression	* begin		445472	1					
ANR	445551	UnaryOperator	*		445472	0					
ANR	445552	Identifier	begin		445472	1					
ANR	445553	CompoundStatement		14:33:270:270	445472	1					
ANR	445554	ExpressionStatement	* end = * begin	4452:2:110492:110505	445472	0	True				
ANR	445555	AssignmentExpression	* end = * begin		445472	0		=			
ANR	445556	UnaryOperationExpression	* end		445472	0					
ANR	445557	UnaryOperator	*		445472	0					
ANR	445558	Identifier	end		445472	1					
ANR	445559	UnaryOperationExpression	* begin		445472	1					
ANR	445560	UnaryOperator	*		445472	0					
ANR	445561	Identifier	begin		445472	1					
ANR	445562	WhileStatement	while ( end && str [ * end ] && isalnum ( ( ut8 ) str [ * end ] ) )		445472	1					
ANR	445563	Condition	end && str [ * end ] && isalnum ( ( ut8 ) str [ * end ] )	4453:9:110516:110559	445472	0	True				
ANR	445564	AndExpression	end && str [ * end ] && isalnum ( ( ut8 ) str [ * end ] )		445472	0		&&			
ANR	445565	Identifier	end		445472	0					
ANR	445566	AndExpression	str [ * end ] && isalnum ( ( ut8 ) str [ * end ] )		445472	1		&&			
ANR	445567	ArrayIndexing	str [ * end ]		445472	0					
ANR	445568	Identifier	str		445472	0					
ANR	445569	UnaryOperationExpression	* end		445472	1					
ANR	445570	UnaryOperator	*		445472	0					
ANR	445571	Identifier	end		445472	1					
ANR	445572	CallExpression	isalnum ( ( ut8 ) str [ * end ] )		445472	1					
ANR	445573	Callee	isalnum		445472	0					
ANR	445574	Identifier	isalnum		445472	0					
ANR	445575	ArgumentList	( ut8 ) str [ * end ]		445472	1					
ANR	445576	Argument	( ut8 ) str [ * end ]		445472	0					
ANR	445577	CastExpression	( ut8 ) str [ * end ]		445472	0					
ANR	445578	CastTarget	ut8		445472	0					
ANR	445579	ArrayIndexing	str [ * end ]		445472	1					
ANR	445580	Identifier	str		445472	0					
ANR	445581	UnaryOperationExpression	* end		445472	1					
ANR	445582	UnaryOperator	*		445472	0					
ANR	445583	Identifier	end		445472	1					
ANR	445584	CompoundStatement		16:55:360:360	445472	1					
ANR	445585	ExpressionStatement	++ ( * end )	4454:3:110567:110575	445472	0	True				
ANR	445586	UnaryExpression	++ ( * end )		445472	0					
ANR	445587	IncDec	++		445472	0					
ANR	445588	UnaryOperationExpression	* end		445472	1					
ANR	445589	UnaryOperator	*		445472	0					
ANR	445590	Identifier	end		445472	1					
ANR	445591	ReturnStatement	return TT_WORD ;	4456:2:110583:110597	445472	2	True				
ANR	445592	Identifier	TT_WORD		445472	0					
ANR	445593	IfStatement	if ( isdigit ( ( ut8 ) str [ * begin ] ) )		445472	4					
ANR	445594	Condition	isdigit ( ( ut8 ) str [ * begin ] )	4458:5:110607:110632	445472	0	True				
ANR	445595	CallExpression	isdigit ( ( ut8 ) str [ * begin ] )		445472	0					
ANR	445596	Callee	isdigit		445472	0					
ANR	445597	Identifier	isdigit		445472	0					
ANR	445598	ArgumentList	( ut8 ) str [ * begin ]		445472	1					
ANR	445599	Argument	( ut8 ) str [ * begin ]		445472	0					
ANR	445600	CastExpression	( ut8 ) str [ * begin ]		445472	0					
ANR	445601	CastTarget	ut8		445472	0					
ANR	445602	ArrayIndexing	str [ * begin ]		445472	1					
ANR	445603	Identifier	str		445472	0					
ANR	445604	UnaryOperationExpression	* begin		445472	1					
ANR	445605	UnaryOperator	*		445472	0					
ANR	445606	Identifier	begin		445472	1					
ANR	445607	CompoundStatement		21:33:433:433	445472	1					
ANR	445608	ExpressionStatement	* end = * begin	4459:2:110657:110670	445472	0	True				
ANR	445609	AssignmentExpression	* end = * begin		445472	0		=			
ANR	445610	UnaryOperationExpression	* end		445472	0					
ANR	445611	UnaryOperator	*		445472	0					
ANR	445612	Identifier	end		445472	1					
ANR	445613	UnaryOperationExpression	* begin		445472	1					
ANR	445614	UnaryOperator	*		445472	0					
ANR	445615	Identifier	begin		445472	1					
ANR	445616	WhileStatement	while ( end && isalnum ( ( ut8 ) str [ * end ] ) )		445472	1					
ANR	445617	Condition	end && isalnum ( ( ut8 ) str [ * end ] )	4460:9:110681:110711	445472	0	True				
ANR	445618	AndExpression	end && isalnum ( ( ut8 ) str [ * end ] )		445472	0		&&			
ANR	445619	Identifier	end		445472	0					
ANR	445620	CallExpression	isalnum ( ( ut8 ) str [ * end ] )		445472	1					
ANR	445621	Callee	isalnum		445472	0					
ANR	445622	Identifier	isalnum		445472	0					
ANR	445623	ArgumentList	( ut8 ) str [ * end ]		445472	1					
ANR	445624	Argument	( ut8 ) str [ * end ]		445472	0					
ANR	445625	CastExpression	( ut8 ) str [ * end ]		445472	0					
ANR	445626	CastTarget	ut8		445472	0					
ANR	445627	ArrayIndexing	str [ * end ]		445472	1					
ANR	445628	Identifier	str		445472	0					
ANR	445629	UnaryOperationExpression	* end		445472	1					
ANR	445630	UnaryOperator	*		445472	0					
ANR	445631	Identifier	end		445472	1					
ANR	445632	CompoundStatement		23:42:512:512	445472	1					
ANR	445633	ExpressionStatement	++ ( * end )	4461:3:110771:110779	445472	0	True				
ANR	445634	UnaryExpression	++ ( * end )		445472	0					
ANR	445635	IncDec	++		445472	0					
ANR	445636	UnaryOperationExpression	* end		445472	1					
ANR	445637	UnaryOperator	*		445472	0					
ANR	445638	Identifier	end		445472	1					
ANR	445639	ReturnStatement	return TT_NUMBER ;	4463:2:110787:110803	445472	2	True				
ANR	445640	Identifier	TT_NUMBER		445472	0					
ANR	445641	ElseStatement	else		445472	0					
ANR	445642	CompoundStatement		27:8:611:611	445472	0					
ANR	445643	ExpressionStatement	* end = * begin + 1	4465:2:110883:110900	445472	0	True				
ANR	445644	AssignmentExpression	* end = * begin + 1		445472	0		=			
ANR	445645	UnaryOperationExpression	* end		445472	0					
ANR	445646	UnaryOperator	*		445472	0					
ANR	445647	Identifier	end		445472	1					
ANR	445648	AdditiveExpression	* begin + 1		445472	1		+			
ANR	445649	UnaryOperationExpression	* begin		445472	0					
ANR	445650	UnaryOperator	*		445472	0					
ANR	445651	Identifier	begin		445472	1					
ANR	445652	PrimaryExpression	1		445472	1					
ANR	445653	ReturnStatement	return TT_SPECIAL ;	4466:2:110904:110921	445472	1	True				
ANR	445654	Identifier	TT_SPECIAL		445472	0					
ANR	445655	ReturnType	static x86newTokenType		445472	1					
ANR	445656	Identifier	getToken		445472	2					
ANR	445657	ParameterList	"const char * str , size_t * begin , size_t * end"		445472	3					
ANR	445658	Parameter	const char * str	4438:32:110156:110170	445472	0	True				
ANR	445659	ParameterType	const char *		445472	0					
ANR	445660	Identifier	str		445472	1					
ANR	445661	Parameter	size_t * begin	4438:49:110173:110185	445472	1	True				
ANR	445662	ParameterType	size_t *		445472	0					
ANR	445663	Identifier	begin		445472	1					
ANR	445664	Parameter	size_t * end	4438:64:110188:110198	445472	2	True				
ANR	445665	ParameterType	size_t *		445472	0					
ANR	445666	Identifier	end		445472	1					
ANR	445667	CFGEntryNode	ENTRY		445472		True				
ANR	445668	CFGExitNode	EXIT		445472		True				
ANR	445669	Symbol	isalpha		445472						
ANR	445670	Symbol	isalnum		445472						
ANR	445671	Symbol	* begin		445472						
ANR	445672	Symbol	* * begin		445472						
ANR	445673	Symbol	isspace		445472						
ANR	445674	Symbol	TT_SPECIAL		445472						
ANR	445675	Symbol	TT_WORD		445472						
ANR	445676	Symbol	* * end		445472						
ANR	445677	Symbol	str		445472						
ANR	445678	Symbol	strlen		445472						
ANR	445679	Symbol	end		445472						
ANR	445680	Symbol	* end		445472						
ANR	445681	Symbol	TT_NUMBER		445472						
ANR	445682	Symbol	* str		445472						
ANR	445683	Symbol	begin		445472						
ANR	445684	Symbol	isdigit		445472						
ANR	445685	Symbol	TT_EOF		445472						
ANR	445686	Function	parseReg	4473:0:111006:115221							
ANR	445687	FunctionDef	"parseReg (RAsm * a , const char * str , size_t * pos , ut32 * type)"		445686	0					
ANR	445688	CompoundStatement		4473:76:111082:115221	445686	0					
ANR	445689	IdentifierDeclStatement	int i ;	4474:1:111085:111090	445686	0	True				
ANR	445690	IdentifierDecl	i		445686	0					
ANR	445691	IdentifierDeclType	int		445686	0					
ANR	445692	Identifier	i		445686	1					
ANR	445693	IdentifierDeclStatement	"const char * regs [ ] = { ""eax"" , ""ecx"" , ""edx"" , ""ebx"" , ""esp"" , ""ebp"" , ""esi"" , ""edi"" , ""eip"" , NULL } ;"	4476:1:111142:111234	445686	1	True				
ANR	445694	IdentifierDecl	"* regs [ ] = { ""eax"" , ""ecx"" , ""edx"" , ""ebx"" , ""esp"" , ""ebp"" , ""esi"" , ""edi"" , ""eip"" , NULL }"		445686	0					
ANR	445695	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445696	Identifier	regs		445686	1					
ANR	445697	AssignmentExpression	"* regs [ ] = { ""eax"" , ""ecx"" , ""edx"" , ""ebx"" , ""esp"" , ""ebp"" , ""esi"" , ""edi"" , ""eip"" , NULL }"		445686	2		=			
ANR	445698	Identifier	regs		445686	0					
ANR	445699	InitializerList	"""eax"""		445686	1					
ANR	445700	PrimaryExpression	"""eax"""		445686	0					
ANR	445701	PrimaryExpression	"""ecx"""		445686	1					
ANR	445702	PrimaryExpression	"""edx"""		445686	2					
ANR	445703	PrimaryExpression	"""ebx"""		445686	3					
ANR	445704	PrimaryExpression	"""esp"""		445686	4					
ANR	445705	PrimaryExpression	"""ebp"""		445686	5					
ANR	445706	PrimaryExpression	"""esi"""		445686	6					
ANR	445707	PrimaryExpression	"""edi"""		445686	7					
ANR	445708	PrimaryExpression	"""eip"""		445686	8					
ANR	445709	Identifier	NULL		445686	9					
ANR	445710	IdentifierDeclStatement	"const char * regsext [ ] = { ""r8d"" , ""r9d"" , ""r10d"" , ""r11d"" , ""r12d"" , ""r13d"" , ""r14d"" , ""r15d"" , NULL } ;"	4477:1:111237:111331	445686	2	True				
ANR	445711	IdentifierDecl	"* regsext [ ] = { ""r8d"" , ""r9d"" , ""r10d"" , ""r11d"" , ""r12d"" , ""r13d"" , ""r14d"" , ""r15d"" , NULL }"		445686	0					
ANR	445712	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445713	Identifier	regsext		445686	1					
ANR	445714	AssignmentExpression	"* regsext [ ] = { ""r8d"" , ""r9d"" , ""r10d"" , ""r11d"" , ""r12d"" , ""r13d"" , ""r14d"" , ""r15d"" , NULL }"		445686	2		=			
ANR	445715	Identifier	regsext		445686	0					
ANR	445716	InitializerList	"""r8d"""		445686	1					
ANR	445717	PrimaryExpression	"""r8d"""		445686	0					
ANR	445718	PrimaryExpression	"""r9d"""		445686	1					
ANR	445719	PrimaryExpression	"""r10d"""		445686	2					
ANR	445720	PrimaryExpression	"""r11d"""		445686	3					
ANR	445721	PrimaryExpression	"""r12d"""		445686	4					
ANR	445722	PrimaryExpression	"""r13d"""		445686	5					
ANR	445723	PrimaryExpression	"""r14d"""		445686	6					
ANR	445724	PrimaryExpression	"""r15d"""		445686	7					
ANR	445725	Identifier	NULL		445686	8					
ANR	445726	IdentifierDeclStatement	"const char * regs8 [ ] = { ""al"" , ""cl"" , ""dl"" , ""bl"" , ""ah"" , ""ch"" , ""dh"" , ""bh"" , NULL } ;"	4478:1:111334:111412	445686	3	True				
ANR	445727	IdentifierDecl	"* regs8 [ ] = { ""al"" , ""cl"" , ""dl"" , ""bl"" , ""ah"" , ""ch"" , ""dh"" , ""bh"" , NULL }"		445686	0					
ANR	445728	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445729	Identifier	regs8		445686	1					
ANR	445730	AssignmentExpression	"* regs8 [ ] = { ""al"" , ""cl"" , ""dl"" , ""bl"" , ""ah"" , ""ch"" , ""dh"" , ""bh"" , NULL }"		445686	2		=			
ANR	445731	Identifier	regs8		445686	0					
ANR	445732	InitializerList	"""al"""		445686	1					
ANR	445733	PrimaryExpression	"""al"""		445686	0					
ANR	445734	PrimaryExpression	"""cl"""		445686	1					
ANR	445735	PrimaryExpression	"""dl"""		445686	2					
ANR	445736	PrimaryExpression	"""bl"""		445686	3					
ANR	445737	PrimaryExpression	"""ah"""		445686	4					
ANR	445738	PrimaryExpression	"""ch"""		445686	5					
ANR	445739	PrimaryExpression	"""dh"""		445686	6					
ANR	445740	PrimaryExpression	"""bh"""		445686	7					
ANR	445741	Identifier	NULL		445686	8					
ANR	445742	IdentifierDeclStatement	"const char * regs16 [ ] = { ""ax"" , ""cx"" , ""dx"" , ""bx"" , ""sp"" , ""bp"" , ""si"" , ""di"" , NULL } ;"	4479:1:111415:111494	445686	4	True				
ANR	445743	IdentifierDecl	"* regs16 [ ] = { ""ax"" , ""cx"" , ""dx"" , ""bx"" , ""sp"" , ""bp"" , ""si"" , ""di"" , NULL }"		445686	0					
ANR	445744	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445745	Identifier	regs16		445686	1					
ANR	445746	AssignmentExpression	"* regs16 [ ] = { ""ax"" , ""cx"" , ""dx"" , ""bx"" , ""sp"" , ""bp"" , ""si"" , ""di"" , NULL }"		445686	2		=			
ANR	445747	Identifier	regs16		445686	0					
ANR	445748	InitializerList	"""ax"""		445686	1					
ANR	445749	PrimaryExpression	"""ax"""		445686	0					
ANR	445750	PrimaryExpression	"""cx"""		445686	1					
ANR	445751	PrimaryExpression	"""dx"""		445686	2					
ANR	445752	PrimaryExpression	"""bx"""		445686	3					
ANR	445753	PrimaryExpression	"""sp"""		445686	4					
ANR	445754	PrimaryExpression	"""bp"""		445686	5					
ANR	445755	PrimaryExpression	"""si"""		445686	6					
ANR	445756	PrimaryExpression	"""di"""		445686	7					
ANR	445757	Identifier	NULL		445686	8					
ANR	445758	IdentifierDeclStatement	"const char * regs64 [ ] = { ""rax"" , ""rcx"" , ""rdx"" , ""rbx"" , ""rsp"" , ""rbp"" , ""rsi"" , ""rdi"" , ""rip"" , NULL } ;"	4480:1:111497:111591	445686	5	True				
ANR	445759	IdentifierDecl	"* regs64 [ ] = { ""rax"" , ""rcx"" , ""rdx"" , ""rbx"" , ""rsp"" , ""rbp"" , ""rsi"" , ""rdi"" , ""rip"" , NULL }"		445686	0					
ANR	445760	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445761	Identifier	regs64		445686	1					
ANR	445762	AssignmentExpression	"* regs64 [ ] = { ""rax"" , ""rcx"" , ""rdx"" , ""rbx"" , ""rsp"" , ""rbp"" , ""rsi"" , ""rdi"" , ""rip"" , NULL }"		445686	2		=			
ANR	445763	Identifier	regs64		445686	0					
ANR	445764	InitializerList	"""rax"""		445686	1					
ANR	445765	PrimaryExpression	"""rax"""		445686	0					
ANR	445766	PrimaryExpression	"""rcx"""		445686	1					
ANR	445767	PrimaryExpression	"""rdx"""		445686	2					
ANR	445768	PrimaryExpression	"""rbx"""		445686	3					
ANR	445769	PrimaryExpression	"""rsp"""		445686	4					
ANR	445770	PrimaryExpression	"""rbp"""		445686	5					
ANR	445771	PrimaryExpression	"""rsi"""		445686	6					
ANR	445772	PrimaryExpression	"""rdi"""		445686	7					
ANR	445773	PrimaryExpression	"""rip"""		445686	8					
ANR	445774	Identifier	NULL		445686	9					
ANR	445775	IdentifierDeclStatement	"const char * regs64ext [ ] = { ""r8"" , ""r9"" , ""r10"" , ""r11"" , ""r12"" , ""r13"" , ""r14"" , ""r15"" , NULL } ;"	4481:1:111594:111682	445686	6	True				
ANR	445776	IdentifierDecl	"* regs64ext [ ] = { ""r8"" , ""r9"" , ""r10"" , ""r11"" , ""r12"" , ""r13"" , ""r14"" , ""r15"" , NULL }"		445686	0					
ANR	445777	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445778	Identifier	regs64ext		445686	1					
ANR	445779	AssignmentExpression	"* regs64ext [ ] = { ""r8"" , ""r9"" , ""r10"" , ""r11"" , ""r12"" , ""r13"" , ""r14"" , ""r15"" , NULL }"		445686	2		=			
ANR	445780	Identifier	regs64ext		445686	0					
ANR	445781	InitializerList	"""r8"""		445686	1					
ANR	445782	PrimaryExpression	"""r8"""		445686	0					
ANR	445783	PrimaryExpression	"""r9"""		445686	1					
ANR	445784	PrimaryExpression	"""r10"""		445686	2					
ANR	445785	PrimaryExpression	"""r11"""		445686	3					
ANR	445786	PrimaryExpression	"""r12"""		445686	4					
ANR	445787	PrimaryExpression	"""r13"""		445686	5					
ANR	445788	PrimaryExpression	"""r14"""		445686	6					
ANR	445789	PrimaryExpression	"""r15"""		445686	7					
ANR	445790	Identifier	NULL		445686	8					
ANR	445791	IdentifierDeclStatement	"const char * sregs [ ] = { ""es"" , ""cs"" , ""ss"" , ""ds"" , ""fs"" , ""gs"" , NULL } ;"	4482:1:111685:111751	445686	7	True				
ANR	445792	IdentifierDecl	"* sregs [ ] = { ""es"" , ""cs"" , ""ss"" , ""ds"" , ""fs"" , ""gs"" , NULL }"		445686	0					
ANR	445793	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445794	Identifier	sregs		445686	1					
ANR	445795	AssignmentExpression	"* sregs [ ] = { ""es"" , ""cs"" , ""ss"" , ""ds"" , ""fs"" , ""gs"" , NULL }"		445686	2		=			
ANR	445796	Identifier	sregs		445686	0					
ANR	445797	InitializerList	"""es"""		445686	1					
ANR	445798	PrimaryExpression	"""es"""		445686	0					
ANR	445799	PrimaryExpression	"""cs"""		445686	1					
ANR	445800	PrimaryExpression	"""ss"""		445686	2					
ANR	445801	PrimaryExpression	"""ds"""		445686	3					
ANR	445802	PrimaryExpression	"""fs"""		445686	4					
ANR	445803	PrimaryExpression	"""gs"""		445686	5					
ANR	445804	Identifier	NULL		445686	6					
ANR	445805	IdentifierDeclStatement	"const char * cregs [ ] = { ""cr0"" , ""cr1"" , ""cr2"" , ""cr3"" , ""cr4"" , ""cr5"" , ""cr6"" , ""cr7"" , NULL } ;"	4483:1:111754:111839	445686	8	True				
ANR	445806	IdentifierDecl	"* cregs [ ] = { ""cr0"" , ""cr1"" , ""cr2"" , ""cr3"" , ""cr4"" , ""cr5"" , ""cr6"" , ""cr7"" , NULL }"		445686	0					
ANR	445807	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445808	Identifier	cregs		445686	1					
ANR	445809	AssignmentExpression	"* cregs [ ] = { ""cr0"" , ""cr1"" , ""cr2"" , ""cr3"" , ""cr4"" , ""cr5"" , ""cr6"" , ""cr7"" , NULL }"		445686	2		=			
ANR	445810	Identifier	cregs		445686	0					
ANR	445811	InitializerList	"""cr0"""		445686	1					
ANR	445812	PrimaryExpression	"""cr0"""		445686	0					
ANR	445813	PrimaryExpression	"""cr1"""		445686	1					
ANR	445814	PrimaryExpression	"""cr2"""		445686	2					
ANR	445815	PrimaryExpression	"""cr3"""		445686	3					
ANR	445816	PrimaryExpression	"""cr4"""		445686	4					
ANR	445817	PrimaryExpression	"""cr5"""		445686	5					
ANR	445818	PrimaryExpression	"""cr6"""		445686	6					
ANR	445819	PrimaryExpression	"""cr7"""		445686	7					
ANR	445820	Identifier	NULL		445686	8					
ANR	445821	IdentifierDeclStatement	"const char * dregs [ ] = { ""dr0"" , ""dr1"" , ""dr2"" , ""dr3"" , ""dr4"" , ""dr5"" , ""dr6"" , ""dr7"" , NULL } ;"	4484:1:111842:111927	445686	9	True				
ANR	445822	IdentifierDecl	"* dregs [ ] = { ""dr0"" , ""dr1"" , ""dr2"" , ""dr3"" , ""dr4"" , ""dr5"" , ""dr6"" , ""dr7"" , NULL }"		445686	0					
ANR	445823	IdentifierDeclType	const char * [ ]		445686	0					
ANR	445824	Identifier	dregs		445686	1					
ANR	445825	AssignmentExpression	"* dregs [ ] = { ""dr0"" , ""dr1"" , ""dr2"" , ""dr3"" , ""dr4"" , ""dr5"" , ""dr6"" , ""dr7"" , NULL }"		445686	2		=			
ANR	445826	Identifier	dregs		445686	0					
ANR	445827	InitializerList	"""dr0"""		445686	1					
ANR	445828	PrimaryExpression	"""dr0"""		445686	0					
ANR	445829	PrimaryExpression	"""dr1"""		445686	1					
ANR	445830	PrimaryExpression	"""dr2"""		445686	2					
ANR	445831	PrimaryExpression	"""dr3"""		445686	3					
ANR	445832	PrimaryExpression	"""dr4"""		445686	4					
ANR	445833	PrimaryExpression	"""dr5"""		445686	5					
ANR	445834	PrimaryExpression	"""dr6"""		445686	6					
ANR	445835	PrimaryExpression	"""dr7"""		445686	7					
ANR	445836	Identifier	NULL		445686	8					
ANR	445837	IdentifierDeclStatement	"size_t nextpos , length ;"	4487:1:111969:111991	445686	10	True				
ANR	445838	IdentifierDecl	nextpos		445686	0					
ANR	445839	IdentifierDeclType	size_t		445686	0					
ANR	445840	Identifier	nextpos		445686	1					
ANR	445841	IdentifierDecl	length		445686	1					
ANR	445842	IdentifierDeclType	size_t		445686	0					
ANR	445843	Identifier	length		445686	1					
ANR	445844	IdentifierDeclStatement	const char * token ;	4488:1:111994:112011	445686	11	True				
ANR	445845	IdentifierDecl	* token		445686	0					
ANR	445846	IdentifierDeclType	const char *		445686	0					
ANR	445847	Identifier	token		445686	1					
ANR	445848	ExpressionStatement	"getToken ( str , pos , & nextpos )"	4489:1:112014:112043	445686	12	True				
ANR	445849	CallExpression	"getToken ( str , pos , & nextpos )"		445686	0					
ANR	445850	Callee	getToken		445686	0					
ANR	445851	Identifier	getToken		445686	0					
ANR	445852	ArgumentList	str		445686	1					
ANR	445853	Argument	str		445686	0					
ANR	445854	Identifier	str		445686	0					
ANR	445855	Argument	pos		445686	1					
ANR	445856	Identifier	pos		445686	0					
ANR	445857	Argument	& nextpos		445686	2					
ANR	445858	UnaryOperationExpression	& nextpos		445686	0					
ANR	445859	UnaryOperator	&		445686	0					
ANR	445860	Identifier	nextpos		445686	1					
ANR	445861	ExpressionStatement	token = str + * pos	4490:1:112046:112064	445686	13	True				
ANR	445862	AssignmentExpression	token = str + * pos		445686	0		=			
ANR	445863	Identifier	token		445686	0					
ANR	445864	AdditiveExpression	str + * pos		445686	1		+			
ANR	445865	Identifier	str		445686	0					
ANR	445866	UnaryOperationExpression	* pos		445686	1					
ANR	445867	UnaryOperator	*		445686	0					
ANR	445868	Identifier	pos		445686	1					
ANR	445869	ExpressionStatement	length = nextpos - * pos	4491:1:112067:112090	445686	14	True				
ANR	445870	AssignmentExpression	length = nextpos - * pos		445686	0		=			
ANR	445871	Identifier	length		445686	0					
ANR	445872	AdditiveExpression	nextpos - * pos		445686	1		-			
ANR	445873	Identifier	nextpos		445686	0					
ANR	445874	UnaryOperationExpression	* pos		445686	1					
ANR	445875	UnaryOperator	*		445686	0					
ANR	445876	Identifier	pos		445686	1					
ANR	445877	ExpressionStatement	* pos = nextpos	4492:1:112093:112107	445686	15	True				
ANR	445878	AssignmentExpression	* pos = nextpos		445686	0		=			
ANR	445879	UnaryOperationExpression	* pos		445686	0					
ANR	445880	UnaryOperator	*		445686	0					
ANR	445881	Identifier	pos		445686	1					
ANR	445882	Identifier	nextpos		445686	1					
ANR	445883	IfStatement	if ( length == 3 && token [ 0 ] == 'e' )		445686	16					
ANR	445884	Condition	length == 3 && token [ 0 ] == 'e'	4495:5:112145:112174	445686	0	True				
ANR	445885	AndExpression	length == 3 && token [ 0 ] == 'e'		445686	0		&&			
ANR	445886	EqualityExpression	length == 3		445686	0		==			
ANR	445887	Identifier	length		445686	0					
ANR	445888	PrimaryExpression	3		445686	1					
ANR	445889	EqualityExpression	token [ 0 ] == 'e'		445686	1		==			
ANR	445890	ArrayIndexing	token [ 0 ]		445686	0					
ANR	445891	Identifier	token		445686	0					
ANR	445892	PrimaryExpression	0		445686	1					
ANR	445893	PrimaryExpression	'e'		445686	1					
ANR	445894	CompoundStatement		23:37:1094:1094	445686	1					
ANR	445895	ForStatement	for ( i = 0 ; regs [ i ] ; i ++ )		445686	0					
ANR	445896	ForInit	i = 0 ;	4496:7:112186:112191	445686	0	True				
ANR	445897	AssignmentExpression	i = 0		445686	0		=			
ANR	445898	Identifier	i		445686	0					
ANR	445899	PrimaryExpression	0		445686	1					
ANR	445900	Condition	regs [ i ]	4496:14:112193:112199	445686	1	True				
ANR	445901	ArrayIndexing	regs [ i ]		445686	0					
ANR	445902	Identifier	regs		445686	0					
ANR	445903	Identifier	i		445686	1					
ANR	445904	PostIncDecOperationExpression	i ++	4496:23:112202:112204	445686	2	True				
ANR	445905	Identifier	i		445686	0					
ANR	445906	IncDec	++		445686	1					
ANR	445907	CompoundStatement		24:28:1124:1124	445686	3					
ANR	445908	IfStatement	"if ( ! r_str_ncasecmp ( regs [ i ] , token , length ) )"		445686	0					
ANR	445909	Condition	"! r_str_ncasecmp ( regs [ i ] , token , length )"	4497:7:112216:112255	445686	0	True				
ANR	445910	UnaryOperationExpression	"! r_str_ncasecmp ( regs [ i ] , token , length )"		445686	0					
ANR	445911	UnaryOperator	!		445686	0					
ANR	445912	CallExpression	"r_str_ncasecmp ( regs [ i ] , token , length )"		445686	1					
ANR	445913	Callee	r_str_ncasecmp		445686	0					
ANR	445914	Identifier	r_str_ncasecmp		445686	0					
ANR	445915	ArgumentList	regs [ i ]		445686	1					
ANR	445916	Argument	regs [ i ]		445686	0					
ANR	445917	ArrayIndexing	regs [ i ]		445686	0					
ANR	445918	Identifier	regs		445686	0					
ANR	445919	Identifier	i		445686	1					
ANR	445920	Argument	token		445686	1					
ANR	445921	Identifier	token		445686	0					
ANR	445922	Argument	length		445686	2					
ANR	445923	Identifier	length		445686	0					
ANR	445924	CompoundStatement		25:49:1175:1175	445686	1					
ANR	445925	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD	4498:4:112264:112306	445686	0	True				
ANR	445926	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		445686	0		=			
ANR	445927	UnaryOperationExpression	* type		445686	0					
ANR	445928	UnaryOperator	*		445686	0					
ANR	445929	Identifier	type		445686	1					
ANR	445930	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		445686	1		|			
ANR	445931	BitAndExpression	OT_GPREG & OT_REG ( i )		445686	0		&			
ANR	445932	Identifier	OT_GPREG		445686	0					
ANR	445933	CallExpression	OT_REG ( i )		445686	1					
ANR	445934	Callee	OT_REG		445686	0					
ANR	445935	Identifier	OT_REG		445686	0					
ANR	445936	ArgumentList	i		445686	1					
ANR	445937	Argument	i		445686	0					
ANR	445938	Identifier	i		445686	0					
ANR	445939	Identifier	OT_DWORD		445686	1					
ANR	445940	ReturnStatement	return i ;	4499:4:112312:112320	445686	1	True				
ANR	445941	Identifier	i		445686	0					
ANR	445942	IfStatement	if ( length == 3 && token [ 0 ] == 'c' )		445686	17					
ANR	445943	Condition	length == 3 && token [ 0 ] == 'c'	4504:5:112361:112390	445686	0	True				
ANR	445944	AndExpression	length == 3 && token [ 0 ] == 'c'		445686	0		&&			
ANR	445945	EqualityExpression	length == 3		445686	0		==			
ANR	445946	Identifier	length		445686	0					
ANR	445947	PrimaryExpression	3		445686	1					
ANR	445948	EqualityExpression	token [ 0 ] == 'c'		445686	1		==			
ANR	445949	ArrayIndexing	token [ 0 ]		445686	0					
ANR	445950	Identifier	token		445686	0					
ANR	445951	PrimaryExpression	0		445686	1					
ANR	445952	PrimaryExpression	'c'		445686	1					
ANR	445953	CompoundStatement		32:37:1310:1310	445686	1					
ANR	445954	ForStatement	for ( i = 0 ; cregs [ i ] ; i ++ )		445686	0					
ANR	445955	ForInit	i = 0 ;	4505:7:112402:112407	445686	0	True				
ANR	445956	AssignmentExpression	i = 0		445686	0		=			
ANR	445957	Identifier	i		445686	0					
ANR	445958	PrimaryExpression	0		445686	1					
ANR	445959	Condition	cregs [ i ]	4505:14:112409:112416	445686	1	True				
ANR	445960	ArrayIndexing	cregs [ i ]		445686	0					
ANR	445961	Identifier	cregs		445686	0					
ANR	445962	Identifier	i		445686	1					
ANR	445963	PostIncDecOperationExpression	i ++	4505:24:112419:112421	445686	2	True				
ANR	445964	Identifier	i		445686	0					
ANR	445965	IncDec	++		445686	1					
ANR	445966	CompoundStatement		33:29:1341:1341	445686	3					
ANR	445967	IfStatement	"if ( ! r_str_ncasecmp ( cregs [ i ] , token , length ) )"		445686	0					
ANR	445968	Condition	"! r_str_ncasecmp ( cregs [ i ] , token , length )"	4506:7:112433:112473	445686	0	True				
ANR	445969	UnaryOperationExpression	"! r_str_ncasecmp ( cregs [ i ] , token , length )"		445686	0					
ANR	445970	UnaryOperator	!		445686	0					
ANR	445971	CallExpression	"r_str_ncasecmp ( cregs [ i ] , token , length )"		445686	1					
ANR	445972	Callee	r_str_ncasecmp		445686	0					
ANR	445973	Identifier	r_str_ncasecmp		445686	0					
ANR	445974	ArgumentList	cregs [ i ]		445686	1					
ANR	445975	Argument	cregs [ i ]		445686	0					
ANR	445976	ArrayIndexing	cregs [ i ]		445686	0					
ANR	445977	Identifier	cregs		445686	0					
ANR	445978	Identifier	i		445686	1					
ANR	445979	Argument	token		445686	1					
ANR	445980	Identifier	token		445686	0					
ANR	445981	Argument	length		445686	2					
ANR	445982	Identifier	length		445686	0					
ANR	445983	CompoundStatement		34:50:1393:1393	445686	1					
ANR	445984	ExpressionStatement	* type = ( OT_CONTROLREG & OT_REG ( i ) ) | OT_DWORD	4507:4:112482:112529	445686	0	True				
ANR	445985	AssignmentExpression	* type = ( OT_CONTROLREG & OT_REG ( i ) ) | OT_DWORD		445686	0		=			
ANR	445986	UnaryOperationExpression	* type		445686	0					
ANR	445987	UnaryOperator	*		445686	0					
ANR	445988	Identifier	type		445686	1					
ANR	445989	InclusiveOrExpression	( OT_CONTROLREG & OT_REG ( i ) ) | OT_DWORD		445686	1		|			
ANR	445990	BitAndExpression	OT_CONTROLREG & OT_REG ( i )		445686	0		&			
ANR	445991	Identifier	OT_CONTROLREG		445686	0					
ANR	445992	CallExpression	OT_REG ( i )		445686	1					
ANR	445993	Callee	OT_REG		445686	0					
ANR	445994	Identifier	OT_REG		445686	0					
ANR	445995	ArgumentList	i		445686	1					
ANR	445996	Argument	i		445686	0					
ANR	445997	Identifier	i		445686	0					
ANR	445998	Identifier	OT_DWORD		445686	1					
ANR	445999	ReturnStatement	return i ;	4508:4:112535:112543	445686	1	True				
ANR	446000	Identifier	i		445686	0					
ANR	446001	IfStatement	if ( length == 3 && token [ 0 ] == 'd' )		445686	18					
ANR	446002	Condition	length == 3 && token [ 0 ] == 'd'	4513:5:112582:112611	445686	0	True				
ANR	446003	AndExpression	length == 3 && token [ 0 ] == 'd'		445686	0		&&			
ANR	446004	EqualityExpression	length == 3		445686	0		==			
ANR	446005	Identifier	length		445686	0					
ANR	446006	PrimaryExpression	3		445686	1					
ANR	446007	EqualityExpression	token [ 0 ] == 'd'		445686	1		==			
ANR	446008	ArrayIndexing	token [ 0 ]		445686	0					
ANR	446009	Identifier	token		445686	0					
ANR	446010	PrimaryExpression	0		445686	1					
ANR	446011	PrimaryExpression	'd'		445686	1					
ANR	446012	CompoundStatement		41:37:1531:1531	445686	1					
ANR	446013	ForStatement	for ( i = 0 ; cregs [ i ] ; i ++ )		445686	0					
ANR	446014	ForInit	i = 0 ;	4514:7:112623:112628	445686	0	True				
ANR	446015	AssignmentExpression	i = 0		445686	0		=			
ANR	446016	Identifier	i		445686	0					
ANR	446017	PrimaryExpression	0		445686	1					
ANR	446018	Condition	cregs [ i ]	4514:14:112630:112637	445686	1	True				
ANR	446019	ArrayIndexing	cregs [ i ]		445686	0					
ANR	446020	Identifier	cregs		445686	0					
ANR	446021	Identifier	i		445686	1					
ANR	446022	PostIncDecOperationExpression	i ++	4514:24:112640:112642	445686	2	True				
ANR	446023	Identifier	i		445686	0					
ANR	446024	IncDec	++		445686	1					
ANR	446025	CompoundStatement		42:29:1562:1562	445686	3					
ANR	446026	IfStatement	"if ( ! r_str_ncasecmp ( dregs [ i ] , token , length ) )"		445686	0					
ANR	446027	Condition	"! r_str_ncasecmp ( dregs [ i ] , token , length )"	4515:7:112654:112694	445686	0	True				
ANR	446028	UnaryOperationExpression	"! r_str_ncasecmp ( dregs [ i ] , token , length )"		445686	0					
ANR	446029	UnaryOperator	!		445686	0					
ANR	446030	CallExpression	"r_str_ncasecmp ( dregs [ i ] , token , length )"		445686	1					
ANR	446031	Callee	r_str_ncasecmp		445686	0					
ANR	446032	Identifier	r_str_ncasecmp		445686	0					
ANR	446033	ArgumentList	dregs [ i ]		445686	1					
ANR	446034	Argument	dregs [ i ]		445686	0					
ANR	446035	ArrayIndexing	dregs [ i ]		445686	0					
ANR	446036	Identifier	dregs		445686	0					
ANR	446037	Identifier	i		445686	1					
ANR	446038	Argument	token		445686	1					
ANR	446039	Identifier	token		445686	0					
ANR	446040	Argument	length		445686	2					
ANR	446041	Identifier	length		445686	0					
ANR	446042	CompoundStatement		43:50:1614:1614	445686	1					
ANR	446043	ExpressionStatement	* type = ( OT_DEBUGREG & OT_REG ( i ) ) | OT_DWORD	4516:4:112703:112748	445686	0	True				
ANR	446044	AssignmentExpression	* type = ( OT_DEBUGREG & OT_REG ( i ) ) | OT_DWORD		445686	0		=			
ANR	446045	UnaryOperationExpression	* type		445686	0					
ANR	446046	UnaryOperator	*		445686	0					
ANR	446047	Identifier	type		445686	1					
ANR	446048	InclusiveOrExpression	( OT_DEBUGREG & OT_REG ( i ) ) | OT_DWORD		445686	1		|			
ANR	446049	BitAndExpression	OT_DEBUGREG & OT_REG ( i )		445686	0		&			
ANR	446050	Identifier	OT_DEBUGREG		445686	0					
ANR	446051	CallExpression	OT_REG ( i )		445686	1					
ANR	446052	Callee	OT_REG		445686	0					
ANR	446053	Identifier	OT_REG		445686	0					
ANR	446054	ArgumentList	i		445686	1					
ANR	446055	Argument	i		445686	0					
ANR	446056	Identifier	i		445686	0					
ANR	446057	Identifier	OT_DWORD		445686	1					
ANR	446058	ReturnStatement	return i ;	4517:4:112754:112762	445686	1	True				
ANR	446059	Identifier	i		445686	0					
ANR	446060	IfStatement	if ( length == 2 && ( token [ 1 ] == 'l' || token [ 1 ] == 'h' ) )		445686	19					
ANR	446061	Condition	length == 2 && ( token [ 1 ] == 'l' || token [ 1 ] == 'h' )	4521:5:112781:112831	445686	0	True				
ANR	446062	AndExpression	length == 2 && ( token [ 1 ] == 'l' || token [ 1 ] == 'h' )		445686	0		&&			
ANR	446063	EqualityExpression	length == 2		445686	0		==			
ANR	446064	Identifier	length		445686	0					
ANR	446065	PrimaryExpression	2		445686	1					
ANR	446066	OrExpression	token [ 1 ] == 'l' || token [ 1 ] == 'h'		445686	1		||			
ANR	446067	EqualityExpression	token [ 1 ] == 'l'		445686	0		==			
ANR	446068	ArrayIndexing	token [ 1 ]		445686	0					
ANR	446069	Identifier	token		445686	0					
ANR	446070	PrimaryExpression	1		445686	1					
ANR	446071	PrimaryExpression	'l'		445686	1					
ANR	446072	EqualityExpression	token [ 1 ] == 'h'		445686	1		==			
ANR	446073	ArrayIndexing	token [ 1 ]		445686	0					
ANR	446074	Identifier	token		445686	0					
ANR	446075	PrimaryExpression	1		445686	1					
ANR	446076	PrimaryExpression	'h'		445686	1					
ANR	446077	CompoundStatement		49:58:1751:1751	445686	1					
ANR	446078	ForStatement	for ( i = 0 ; regs8 [ i ] ; i ++ )		445686	0					
ANR	446079	ForInit	i = 0 ;	4522:7:112843:112848	445686	0	True				
ANR	446080	AssignmentExpression	i = 0		445686	0		=			
ANR	446081	Identifier	i		445686	0					
ANR	446082	PrimaryExpression	0		445686	1					
ANR	446083	Condition	regs8 [ i ]	4522:14:112850:112857	445686	1	True				
ANR	446084	ArrayIndexing	regs8 [ i ]		445686	0					
ANR	446085	Identifier	regs8		445686	0					
ANR	446086	Identifier	i		445686	1					
ANR	446087	PostIncDecOperationExpression	i ++	4522:24:112860:112862	445686	2	True				
ANR	446088	Identifier	i		445686	0					
ANR	446089	IncDec	++		445686	1					
ANR	446090	CompoundStatement		50:29:1782:1782	445686	3					
ANR	446091	IfStatement	"if ( ! r_str_ncasecmp ( regs8 [ i ] , token , length ) )"		445686	0					
ANR	446092	Condition	"! r_str_ncasecmp ( regs8 [ i ] , token , length )"	4523:7:112874:112914	445686	0	True				
ANR	446093	UnaryOperationExpression	"! r_str_ncasecmp ( regs8 [ i ] , token , length )"		445686	0					
ANR	446094	UnaryOperator	!		445686	0					
ANR	446095	CallExpression	"r_str_ncasecmp ( regs8 [ i ] , token , length )"		445686	1					
ANR	446096	Callee	r_str_ncasecmp		445686	0					
ANR	446097	Identifier	r_str_ncasecmp		445686	0					
ANR	446098	ArgumentList	regs8 [ i ]		445686	1					
ANR	446099	Argument	regs8 [ i ]		445686	0					
ANR	446100	ArrayIndexing	regs8 [ i ]		445686	0					
ANR	446101	Identifier	regs8		445686	0					
ANR	446102	Identifier	i		445686	1					
ANR	446103	Argument	token		445686	1					
ANR	446104	Identifier	token		445686	0					
ANR	446105	Argument	length		445686	2					
ANR	446106	Identifier	length		445686	0					
ANR	446107	CompoundStatement		51:50:1834:1834	445686	1					
ANR	446108	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_BYTE	4524:4:112923:112964	445686	0	True				
ANR	446109	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_BYTE		445686	0		=			
ANR	446110	UnaryOperationExpression	* type		445686	0					
ANR	446111	UnaryOperator	*		445686	0					
ANR	446112	Identifier	type		445686	1					
ANR	446113	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_BYTE		445686	1		|			
ANR	446114	BitAndExpression	OT_GPREG & OT_REG ( i )		445686	0		&			
ANR	446115	Identifier	OT_GPREG		445686	0					
ANR	446116	CallExpression	OT_REG ( i )		445686	1					
ANR	446117	Callee	OT_REG		445686	0					
ANR	446118	Identifier	OT_REG		445686	0					
ANR	446119	ArgumentList	i		445686	1					
ANR	446120	Argument	i		445686	0					
ANR	446121	Identifier	i		445686	0					
ANR	446122	Identifier	OT_BYTE		445686	1					
ANR	446123	ReturnStatement	return i ;	4525:4:112970:112978	445686	1	True				
ANR	446124	Identifier	i		445686	0					
ANR	446125	IfStatement	if ( length == 2 )		445686	20					
ANR	446126	Condition	length == 2	4529:5:112997:113007	445686	0	True				
ANR	446127	EqualityExpression	length == 2		445686	0		==			
ANR	446128	Identifier	length		445686	0					
ANR	446129	PrimaryExpression	2		445686	1					
ANR	446130	CompoundStatement		57:18:1927:1927	445686	1					
ANR	446131	ForStatement	for ( i = 0 ; regs16 [ i ] ; i ++ )		445686	0					
ANR	446132	ForInit	i = 0 ;	4530:7:113019:113024	445686	0	True				
ANR	446133	AssignmentExpression	i = 0		445686	0		=			
ANR	446134	Identifier	i		445686	0					
ANR	446135	PrimaryExpression	0		445686	1					
ANR	446136	Condition	regs16 [ i ]	4530:14:113026:113034	445686	1	True				
ANR	446137	ArrayIndexing	regs16 [ i ]		445686	0					
ANR	446138	Identifier	regs16		445686	0					
ANR	446139	Identifier	i		445686	1					
ANR	446140	PostIncDecOperationExpression	i ++	4530:25:113037:113039	445686	2	True				
ANR	446141	Identifier	i		445686	0					
ANR	446142	IncDec	++		445686	1					
ANR	446143	CompoundStatement		58:30:1959:1959	445686	3					
ANR	446144	IfStatement	"if ( ! r_str_ncasecmp ( regs16 [ i ] , token , length ) )"		445686	0					
ANR	446145	Condition	"! r_str_ncasecmp ( regs16 [ i ] , token , length )"	4531:7:113051:113092	445686	0	True				
ANR	446146	UnaryOperationExpression	"! r_str_ncasecmp ( regs16 [ i ] , token , length )"		445686	0					
ANR	446147	UnaryOperator	!		445686	0					
ANR	446148	CallExpression	"r_str_ncasecmp ( regs16 [ i ] , token , length )"		445686	1					
ANR	446149	Callee	r_str_ncasecmp		445686	0					
ANR	446150	Identifier	r_str_ncasecmp		445686	0					
ANR	446151	ArgumentList	regs16 [ i ]		445686	1					
ANR	446152	Argument	regs16 [ i ]		445686	0					
ANR	446153	ArrayIndexing	regs16 [ i ]		445686	0					
ANR	446154	Identifier	regs16		445686	0					
ANR	446155	Identifier	i		445686	1					
ANR	446156	Argument	token		445686	1					
ANR	446157	Identifier	token		445686	0					
ANR	446158	Argument	length		445686	2					
ANR	446159	Identifier	length		445686	0					
ANR	446160	CompoundStatement		59:51:2012:2012	445686	1					
ANR	446161	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_WORD	4532:4:113101:113142	445686	0	True				
ANR	446162	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_WORD		445686	0		=			
ANR	446163	UnaryOperationExpression	* type		445686	0					
ANR	446164	UnaryOperator	*		445686	0					
ANR	446165	Identifier	type		445686	1					
ANR	446166	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_WORD		445686	1		|			
ANR	446167	BitAndExpression	OT_GPREG & OT_REG ( i )		445686	0		&			
ANR	446168	Identifier	OT_GPREG		445686	0					
ANR	446169	CallExpression	OT_REG ( i )		445686	1					
ANR	446170	Callee	OT_REG		445686	0					
ANR	446171	Identifier	OT_REG		445686	0					
ANR	446172	ArgumentList	i		445686	1					
ANR	446173	Argument	i		445686	0					
ANR	446174	Identifier	i		445686	0					
ANR	446175	Identifier	OT_WORD		445686	1					
ANR	446176	ReturnStatement	return i ;	4533:4:113148:113156	445686	1	True				
ANR	446177	Identifier	i		445686	0					
ANR	446178	ForStatement	for ( i = 0 ; sregs [ i ] ; i ++ )		445686	1					
ANR	446179	ForInit	i = 0 ;	4537:7:113211:113216	445686	0	True				
ANR	446180	AssignmentExpression	i = 0		445686	0		=			
ANR	446181	Identifier	i		445686	0					
ANR	446182	PrimaryExpression	0		445686	1					
ANR	446183	Condition	sregs [ i ]	4537:14:113218:113225	445686	1	True				
ANR	446184	ArrayIndexing	sregs [ i ]		445686	0					
ANR	446185	Identifier	sregs		445686	0					
ANR	446186	Identifier	i		445686	1					
ANR	446187	PostIncDecOperationExpression	i ++	4537:24:113228:113230	445686	2	True				
ANR	446188	Identifier	i		445686	0					
ANR	446189	IncDec	++		445686	1					
ANR	446190	CompoundStatement		65:29:2150:2150	445686	3					
ANR	446191	IfStatement	"if ( ! r_str_ncasecmp ( sregs [ i ] , token , length ) )"		445686	0					
ANR	446192	Condition	"! r_str_ncasecmp ( sregs [ i ] , token , length )"	4538:7:113242:113282	445686	0	True				
ANR	446193	UnaryOperationExpression	"! r_str_ncasecmp ( sregs [ i ] , token , length )"		445686	0					
ANR	446194	UnaryOperator	!		445686	0					
ANR	446195	CallExpression	"r_str_ncasecmp ( sregs [ i ] , token , length )"		445686	1					
ANR	446196	Callee	r_str_ncasecmp		445686	0					
ANR	446197	Identifier	r_str_ncasecmp		445686	0					
ANR	446198	ArgumentList	sregs [ i ]		445686	1					
ANR	446199	Argument	sregs [ i ]		445686	0					
ANR	446200	ArrayIndexing	sregs [ i ]		445686	0					
ANR	446201	Identifier	sregs		445686	0					
ANR	446202	Identifier	i		445686	1					
ANR	446203	Argument	token		445686	1					
ANR	446204	Identifier	token		445686	0					
ANR	446205	Argument	length		445686	2					
ANR	446206	Identifier	length		445686	0					
ANR	446207	CompoundStatement		66:50:2202:2202	445686	1					
ANR	446208	ExpressionStatement	* type = ( OT_SEGMENTREG & OT_REG ( i ) ) | OT_WORD	4539:4:113291:113337	445686	0	True				
ANR	446209	AssignmentExpression	* type = ( OT_SEGMENTREG & OT_REG ( i ) ) | OT_WORD		445686	0		=			
ANR	446210	UnaryOperationExpression	* type		445686	0					
ANR	446211	UnaryOperator	*		445686	0					
ANR	446212	Identifier	type		445686	1					
ANR	446213	InclusiveOrExpression	( OT_SEGMENTREG & OT_REG ( i ) ) | OT_WORD		445686	1		|			
ANR	446214	BitAndExpression	OT_SEGMENTREG & OT_REG ( i )		445686	0		&			
ANR	446215	Identifier	OT_SEGMENTREG		445686	0					
ANR	446216	CallExpression	OT_REG ( i )		445686	1					
ANR	446217	Callee	OT_REG		445686	0					
ANR	446218	Identifier	OT_REG		445686	0					
ANR	446219	ArgumentList	i		445686	1					
ANR	446220	Argument	i		445686	0					
ANR	446221	Identifier	i		445686	0					
ANR	446222	Identifier	OT_WORD		445686	1					
ANR	446223	ReturnStatement	return i ;	4540:4:113343:113351	445686	1	True				
ANR	446224	Identifier	i		445686	0					
ANR	446225	IfStatement	if ( token [ 0 ] == 'r' )		445686	21					
ANR	446226	Condition	token [ 0 ] == 'r'	4544:5:113370:113384	445686	0	True				
ANR	446227	EqualityExpression	token [ 0 ] == 'r'		445686	0		==			
ANR	446228	ArrayIndexing	token [ 0 ]		445686	0					
ANR	446229	Identifier	token		445686	0					
ANR	446230	PrimaryExpression	0		445686	1					
ANR	446231	PrimaryExpression	'r'		445686	1					
ANR	446232	CompoundStatement		72:22:2304:2304	445686	1					
ANR	446233	ForStatement	for ( i = 0 ; regs64 [ i ] ; i ++ )		445686	0					
ANR	446234	ForInit	i = 0 ;	4545:7:113396:113401	445686	0	True				
ANR	446235	AssignmentExpression	i = 0		445686	0		=			
ANR	446236	Identifier	i		445686	0					
ANR	446237	PrimaryExpression	0		445686	1					
ANR	446238	Condition	regs64 [ i ]	4545:14:113403:113411	445686	1	True				
ANR	446239	ArrayIndexing	regs64 [ i ]		445686	0					
ANR	446240	Identifier	regs64		445686	0					
ANR	446241	Identifier	i		445686	1					
ANR	446242	PostIncDecOperationExpression	i ++	4545:25:113414:113416	445686	2	True				
ANR	446243	Identifier	i		445686	0					
ANR	446244	IncDec	++		445686	1					
ANR	446245	CompoundStatement		73:30:2336:2336	445686	3					
ANR	446246	IfStatement	"if ( ! r_str_ncasecmp ( regs64 [ i ] , token , length ) )"		445686	0					
ANR	446247	Condition	"! r_str_ncasecmp ( regs64 [ i ] , token , length )"	4546:7:113428:113469	445686	0	True				
ANR	446248	UnaryOperationExpression	"! r_str_ncasecmp ( regs64 [ i ] , token , length )"		445686	0					
ANR	446249	UnaryOperator	!		445686	0					
ANR	446250	CallExpression	"r_str_ncasecmp ( regs64 [ i ] , token , length )"		445686	1					
ANR	446251	Callee	r_str_ncasecmp		445686	0					
ANR	446252	Identifier	r_str_ncasecmp		445686	0					
ANR	446253	ArgumentList	regs64 [ i ]		445686	1					
ANR	446254	Argument	regs64 [ i ]		445686	0					
ANR	446255	ArrayIndexing	regs64 [ i ]		445686	0					
ANR	446256	Identifier	regs64		445686	0					
ANR	446257	Identifier	i		445686	1					
ANR	446258	Argument	token		445686	1					
ANR	446259	Identifier	token		445686	0					
ANR	446260	Argument	length		445686	2					
ANR	446261	Identifier	length		445686	0					
ANR	446262	CompoundStatement		74:51:2389:2389	445686	1					
ANR	446263	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD	4547:4:113478:113520	445686	0	True				
ANR	446264	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		445686	0		=			
ANR	446265	UnaryOperationExpression	* type		445686	0					
ANR	446266	UnaryOperator	*		445686	0					
ANR	446267	Identifier	type		445686	1					
ANR	446268	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		445686	1		|			
ANR	446269	BitAndExpression	OT_GPREG & OT_REG ( i )		445686	0		&			
ANR	446270	Identifier	OT_GPREG		445686	0					
ANR	446271	CallExpression	OT_REG ( i )		445686	1					
ANR	446272	Callee	OT_REG		445686	0					
ANR	446273	Identifier	OT_REG		445686	0					
ANR	446274	ArgumentList	i		445686	1					
ANR	446275	Argument	i		445686	0					
ANR	446276	Identifier	i		445686	0					
ANR	446277	Identifier	OT_QWORD		445686	1					
ANR	446278	ExpressionStatement	a -> bits = 64	4548:4:113526:113538	445686	1	True				
ANR	446279	AssignmentExpression	a -> bits = 64		445686	0		=			
ANR	446280	PtrMemberAccess	a -> bits		445686	0					
ANR	446281	Identifier	a		445686	0					
ANR	446282	Identifier	bits		445686	1					
ANR	446283	PrimaryExpression	64		445686	1					
ANR	446284	ReturnStatement	return i ;	4549:4:113544:113552	445686	2	True				
ANR	446285	Identifier	i		445686	0					
ANR	446286	ForStatement	for ( i = 0 ; regs64ext [ i ] ; i ++ )		445686	1					
ANR	446287	ForInit	i = 0 ;	4552:7:113570:113575	445686	0	True				
ANR	446288	AssignmentExpression	i = 0		445686	0		=			
ANR	446289	Identifier	i		445686	0					
ANR	446290	PrimaryExpression	0		445686	1					
ANR	446291	Condition	regs64ext [ i ]	4552:14:113577:113588	445686	1	True				
ANR	446292	ArrayIndexing	regs64ext [ i ]		445686	0					
ANR	446293	Identifier	regs64ext		445686	0					
ANR	446294	Identifier	i		445686	1					
ANR	446295	PostIncDecOperationExpression	i ++	4552:28:113591:113593	445686	2	True				
ANR	446296	Identifier	i		445686	0					
ANR	446297	IncDec	++		445686	1					
ANR	446298	CompoundStatement		80:33:2513:2513	445686	3					
ANR	446299	IfStatement	"if ( ! r_str_ncasecmp ( regs64ext [ i ] , token , length ) )"		445686	0					
ANR	446300	Condition	"! r_str_ncasecmp ( regs64ext [ i ] , token , length )"	4553:7:113605:113649	445686	0	True				
ANR	446301	UnaryOperationExpression	"! r_str_ncasecmp ( regs64ext [ i ] , token , length )"		445686	0					
ANR	446302	UnaryOperator	!		445686	0					
ANR	446303	CallExpression	"r_str_ncasecmp ( regs64ext [ i ] , token , length )"		445686	1					
ANR	446304	Callee	r_str_ncasecmp		445686	0					
ANR	446305	Identifier	r_str_ncasecmp		445686	0					
ANR	446306	ArgumentList	regs64ext [ i ]		445686	1					
ANR	446307	Argument	regs64ext [ i ]		445686	0					
ANR	446308	ArrayIndexing	regs64ext [ i ]		445686	0					
ANR	446309	Identifier	regs64ext		445686	0					
ANR	446310	Identifier	i		445686	1					
ANR	446311	Argument	token		445686	1					
ANR	446312	Identifier	token		445686	0					
ANR	446313	Argument	length		445686	2					
ANR	446314	Identifier	length		445686	0					
ANR	446315	CompoundStatement		81:54:2569:2569	445686	1					
ANR	446316	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD	4554:4:113658:113700	445686	0	True				
ANR	446317	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		445686	0		=			
ANR	446318	UnaryOperationExpression	* type		445686	0					
ANR	446319	UnaryOperator	*		445686	0					
ANR	446320	Identifier	type		445686	1					
ANR	446321	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		445686	1		|			
ANR	446322	BitAndExpression	OT_GPREG & OT_REG ( i )		445686	0		&			
ANR	446323	Identifier	OT_GPREG		445686	0					
ANR	446324	CallExpression	OT_REG ( i )		445686	1					
ANR	446325	Callee	OT_REG		445686	0					
ANR	446326	Identifier	OT_REG		445686	0					
ANR	446327	ArgumentList	i		445686	1					
ANR	446328	Argument	i		445686	0					
ANR	446329	Identifier	i		445686	0					
ANR	446330	Identifier	OT_QWORD		445686	1					
ANR	446331	ExpressionStatement	a -> bits = 64	4555:4:113706:113718	445686	1	True				
ANR	446332	AssignmentExpression	a -> bits = 64		445686	0		=			
ANR	446333	PtrMemberAccess	a -> bits		445686	0					
ANR	446334	Identifier	a		445686	0					
ANR	446335	Identifier	bits		445686	1					
ANR	446336	PrimaryExpression	64		445686	1					
ANR	446337	ReturnStatement	return i + 9 ;	4556:4:113724:113736	445686	2	True				
ANR	446338	AdditiveExpression	i + 9		445686	0		+			
ANR	446339	Identifier	i		445686	0					
ANR	446340	PrimaryExpression	9		445686	1					
ANR	446341	ForStatement	for ( i = 0 ; regsext [ i ] ; i ++ )		445686	2					
ANR	446342	ForInit	i = 0 ;	4559:7:113754:113759	445686	0	True				
ANR	446343	AssignmentExpression	i = 0		445686	0		=			
ANR	446344	Identifier	i		445686	0					
ANR	446345	PrimaryExpression	0		445686	1					
ANR	446346	Condition	regsext [ i ]	4559:14:113761:113770	445686	1	True				
ANR	446347	ArrayIndexing	regsext [ i ]		445686	0					
ANR	446348	Identifier	regsext		445686	0					
ANR	446349	Identifier	i		445686	1					
ANR	446350	PostIncDecOperationExpression	i ++	4559:26:113773:113775	445686	2	True				
ANR	446351	Identifier	i		445686	0					
ANR	446352	IncDec	++		445686	1					
ANR	446353	CompoundStatement		87:31:2695:2695	445686	3					
ANR	446354	IfStatement	"if ( ! r_str_ncasecmp ( regsext [ i ] , token , length ) )"		445686	0					
ANR	446355	Condition	"! r_str_ncasecmp ( regsext [ i ] , token , length )"	4560:7:113787:113829	445686	0	True				
ANR	446356	UnaryOperationExpression	"! r_str_ncasecmp ( regsext [ i ] , token , length )"		445686	0					
ANR	446357	UnaryOperator	!		445686	0					
ANR	446358	CallExpression	"r_str_ncasecmp ( regsext [ i ] , token , length )"		445686	1					
ANR	446359	Callee	r_str_ncasecmp		445686	0					
ANR	446360	Identifier	r_str_ncasecmp		445686	0					
ANR	446361	ArgumentList	regsext [ i ]		445686	1					
ANR	446362	Argument	regsext [ i ]		445686	0					
ANR	446363	ArrayIndexing	regsext [ i ]		445686	0					
ANR	446364	Identifier	regsext		445686	0					
ANR	446365	Identifier	i		445686	1					
ANR	446366	Argument	token		445686	1					
ANR	446367	Identifier	token		445686	0					
ANR	446368	Argument	length		445686	2					
ANR	446369	Identifier	length		445686	0					
ANR	446370	CompoundStatement		88:52:2749:2749	445686	1					
ANR	446371	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD	4561:4:113838:113880	445686	0	True				
ANR	446372	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		445686	0		=			
ANR	446373	UnaryOperationExpression	* type		445686	0					
ANR	446374	UnaryOperator	*		445686	0					
ANR	446375	Identifier	type		445686	1					
ANR	446376	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		445686	1		|			
ANR	446377	BitAndExpression	OT_GPREG & OT_REG ( i )		445686	0		&			
ANR	446378	Identifier	OT_GPREG		445686	0					
ANR	446379	CallExpression	OT_REG ( i )		445686	1					
ANR	446380	Callee	OT_REG		445686	0					
ANR	446381	Identifier	OT_REG		445686	0					
ANR	446382	ArgumentList	i		445686	1					
ANR	446383	Argument	i		445686	0					
ANR	446384	Identifier	i		445686	0					
ANR	446385	Identifier	OT_DWORD		445686	1					
ANR	446386	IfStatement	if ( a -> bits < 32 )		445686	1					
ANR	446387	Condition	a -> bits < 32	4562:8:113890:113901	445686	0	True				
ANR	446388	RelationalExpression	a -> bits < 32		445686	0		<			
ANR	446389	PtrMemberAccess	a -> bits		445686	0					
ANR	446390	Identifier	a		445686	0					
ANR	446391	Identifier	bits		445686	1					
ANR	446392	PrimaryExpression	32		445686	1					
ANR	446393	CompoundStatement		90:22:2821:2821	445686	1					
ANR	446394	ExpressionStatement	a -> bits = 32	4563:5:113911:113923	445686	0	True				
ANR	446395	AssignmentExpression	a -> bits = 32		445686	0		=			
ANR	446396	PtrMemberAccess	a -> bits		445686	0					
ANR	446397	Identifier	a		445686	0					
ANR	446398	Identifier	bits		445686	1					
ANR	446399	PrimaryExpression	32		445686	1					
ANR	446400	ReturnStatement	return i + 9 ;	4565:4:113935:113947	445686	2	True				
ANR	446401	AdditiveExpression	i + 9		445686	0		+			
ANR	446402	Identifier	i		445686	0					
ANR	446403	PrimaryExpression	9		445686	1					
ANR	446404	IfStatement	"if ( ! r_str_ncasecmp ( ""st"" , token , 2 ) )"		445686	22					
ANR	446405	Condition	"! r_str_ncasecmp ( ""st"" , token , 2 )"	4571:5:113990:114021	445686	0	True				
ANR	446406	UnaryOperationExpression	"! r_str_ncasecmp ( ""st"" , token , 2 )"		445686	0					
ANR	446407	UnaryOperator	!		445686	0					
ANR	446408	CallExpression	"r_str_ncasecmp ( ""st"" , token , 2 )"		445686	1					
ANR	446409	Callee	r_str_ncasecmp		445686	0					
ANR	446410	Identifier	r_str_ncasecmp		445686	0					
ANR	446411	ArgumentList	"""st"""		445686	1					
ANR	446412	Argument	"""st"""		445686	0					
ANR	446413	PrimaryExpression	"""st"""		445686	0					
ANR	446414	Argument	token		445686	1					
ANR	446415	Identifier	token		445686	0					
ANR	446416	Argument	2		445686	2					
ANR	446417	PrimaryExpression	2		445686	0					
ANR	446418	CompoundStatement		99:39:2941:2941	445686	1					
ANR	446419	ExpressionStatement	* type = ( OT_FPUREG & ~OT_REGALL )	4572:2:114028:114060	445686	0	True				
ANR	446420	AssignmentExpression	* type = ( OT_FPUREG & ~OT_REGALL )		445686	0		=			
ANR	446421	UnaryOperationExpression	* type		445686	0					
ANR	446422	UnaryOperator	*		445686	0					
ANR	446423	Identifier	type		445686	1					
ANR	446424	BitAndExpression	OT_FPUREG & ~OT_REGALL		445686	1		&			
ANR	446425	Identifier	OT_FPUREG		445686	0					
ANR	446426	Identifier	~OT_REGALL		445686	1					
ANR	446427	ExpressionStatement	* pos = 3	4573:2:114064:114072	445686	1	True				
ANR	446428	AssignmentExpression	* pos = 3		445686	0		=			
ANR	446429	UnaryOperationExpression	* pos		445686	0					
ANR	446430	UnaryOperator	*		445686	0					
ANR	446431	Identifier	pos		445686	1					
ANR	446432	PrimaryExpression	3		445686	1					
ANR	446433	IfStatement	"if ( ! r_str_ncasecmp ( ""mm"" , token , 2 ) )"		445686	23					
ANR	446434	Condition	"! r_str_ncasecmp ( ""mm"" , token , 2 )"	4575:5:114082:114113	445686	0	True				
ANR	446435	UnaryOperationExpression	"! r_str_ncasecmp ( ""mm"" , token , 2 )"		445686	0					
ANR	446436	UnaryOperator	!		445686	0					
ANR	446437	CallExpression	"r_str_ncasecmp ( ""mm"" , token , 2 )"		445686	1					
ANR	446438	Callee	r_str_ncasecmp		445686	0					
ANR	446439	Identifier	r_str_ncasecmp		445686	0					
ANR	446440	ArgumentList	"""mm"""		445686	1					
ANR	446441	Argument	"""mm"""		445686	0					
ANR	446442	PrimaryExpression	"""mm"""		445686	0					
ANR	446443	Argument	token		445686	1					
ANR	446444	Identifier	token		445686	0					
ANR	446445	Argument	2		445686	2					
ANR	446446	PrimaryExpression	2		445686	0					
ANR	446447	CompoundStatement		103:39:3033:3033	445686	1					
ANR	446448	ExpressionStatement	* type = ( OT_MMXREG & ~OT_REGALL )	4576:2:114120:114152	445686	0	True				
ANR	446449	AssignmentExpression	* type = ( OT_MMXREG & ~OT_REGALL )		445686	0		=			
ANR	446450	UnaryOperationExpression	* type		445686	0					
ANR	446451	UnaryOperator	*		445686	0					
ANR	446452	Identifier	type		445686	1					
ANR	446453	BitAndExpression	OT_MMXREG & ~OT_REGALL		445686	1		&			
ANR	446454	Identifier	OT_MMXREG		445686	0					
ANR	446455	Identifier	~OT_REGALL		445686	1					
ANR	446456	ExpressionStatement	* pos = 3	4577:2:114156:114164	445686	1	True				
ANR	446457	AssignmentExpression	* pos = 3		445686	0		=			
ANR	446458	UnaryOperationExpression	* pos		445686	0					
ANR	446459	UnaryOperator	*		445686	0					
ANR	446460	Identifier	pos		445686	1					
ANR	446461	PrimaryExpression	3		445686	1					
ANR	446462	IfStatement	"if ( ! r_str_ncasecmp ( ""xmm"" , token , 3 ) )"		445686	24					
ANR	446463	Condition	"! r_str_ncasecmp ( ""xmm"" , token , 3 )"	4579:5:114174:114206	445686	0	True				
ANR	446464	UnaryOperationExpression	"! r_str_ncasecmp ( ""xmm"" , token , 3 )"		445686	0					
ANR	446465	UnaryOperator	!		445686	0					
ANR	446466	CallExpression	"r_str_ncasecmp ( ""xmm"" , token , 3 )"		445686	1					
ANR	446467	Callee	r_str_ncasecmp		445686	0					
ANR	446468	Identifier	r_str_ncasecmp		445686	0					
ANR	446469	ArgumentList	"""xmm"""		445686	1					
ANR	446470	Argument	"""xmm"""		445686	0					
ANR	446471	PrimaryExpression	"""xmm"""		445686	0					
ANR	446472	Argument	token		445686	1					
ANR	446473	Identifier	token		445686	0					
ANR	446474	Argument	3		445686	2					
ANR	446475	PrimaryExpression	3		445686	0					
ANR	446476	CompoundStatement		107:40:3126:3126	445686	1					
ANR	446477	ExpressionStatement	* type = ( OT_XMMREG & ~OT_REGALL )	4580:2:114213:114245	445686	0	True				
ANR	446478	AssignmentExpression	* type = ( OT_XMMREG & ~OT_REGALL )		445686	0		=			
ANR	446479	UnaryOperationExpression	* type		445686	0					
ANR	446480	UnaryOperator	*		445686	0					
ANR	446481	Identifier	type		445686	1					
ANR	446482	BitAndExpression	OT_XMMREG & ~OT_REGALL		445686	1		&			
ANR	446483	Identifier	OT_XMMREG		445686	0					
ANR	446484	Identifier	~OT_REGALL		445686	1					
ANR	446485	ExpressionStatement	* pos = 4	4581:2:114249:114257	445686	1	True				
ANR	446486	AssignmentExpression	* pos = 4		445686	0		=			
ANR	446487	UnaryOperationExpression	* pos		445686	0					
ANR	446488	UnaryOperator	*		445686	0					
ANR	446489	Identifier	pos		445686	1					
ANR	446490	PrimaryExpression	4		445686	1					
ANR	446491	IfStatement	if ( * type & ( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL )		445686	25					
ANR	446492	Condition	* type & ( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL	4585:5:114315:114370	445686	0	True				
ANR	446493	BitAndExpression	* type & ( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL		445686	0		&			
ANR	446494	UnaryOperationExpression	* type		445686	0					
ANR	446495	UnaryOperator	*		445686	0					
ANR	446496	Identifier	type		445686	1					
ANR	446497	BitAndExpression	( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL		445686	1		&			
ANR	446498	InclusiveOrExpression	OT_FPUREG | OT_MMXREG | OT_XMMREG		445686	0		|			
ANR	446499	Identifier	OT_FPUREG		445686	0					
ANR	446500	InclusiveOrExpression	OT_MMXREG | OT_XMMREG		445686	1		|			
ANR	446501	Identifier	OT_MMXREG		445686	0					
ANR	446502	Identifier	OT_XMMREG		445686	1					
ANR	446503	Identifier	~OT_REGALL		445686	1					
ANR	446504	CompoundStatement		114:2:3294:3323	445686	1					
ANR	446505	IdentifierDeclStatement	Register reg = X86R_UNDEFINED ;	4586:2:114377:114406	445686	0	True				
ANR	446506	IdentifierDecl	reg = X86R_UNDEFINED		445686	0					
ANR	446507	IdentifierDeclType	Register		445686	0					
ANR	446508	Identifier	reg		445686	1					
ANR	446509	AssignmentExpression	reg = X86R_UNDEFINED		445686	2		=			
ANR	446510	Identifier	X86R_UNDEFINED		445686	0					
ANR	446511	Identifier	X86R_UNDEFINED		445686	1					
ANR	446512	IfStatement	"if ( getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == '(' )"		445686	1					
ANR	446513	Condition	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == '('"	4589:6:114448:114510	445686	0	True				
ANR	446514	AndExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == '('"		445686	0		&&			
ANR	446515	EqualityExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL"		445686	0		==			
ANR	446516	CallExpression	"getToken ( str , pos , & nextpos )"		445686	0					
ANR	446517	Callee	getToken		445686	0					
ANR	446518	Identifier	getToken		445686	0					
ANR	446519	ArgumentList	str		445686	1					
ANR	446520	Argument	str		445686	0					
ANR	446521	Identifier	str		445686	0					
ANR	446522	Argument	pos		445686	1					
ANR	446523	Identifier	pos		445686	0					
ANR	446524	Argument	& nextpos		445686	2					
ANR	446525	UnaryOperationExpression	& nextpos		445686	0					
ANR	446526	UnaryOperator	&		445686	0					
ANR	446527	Identifier	nextpos		445686	1					
ANR	446528	Identifier	TT_SPECIAL		445686	1					
ANR	446529	EqualityExpression	str [ * pos ] == '('		445686	1		==			
ANR	446530	ArrayIndexing	str [ * pos ]		445686	0					
ANR	446531	Identifier	str		445686	0					
ANR	446532	UnaryOperationExpression	* pos		445686	1					
ANR	446533	UnaryOperator	*		445686	0					
ANR	446534	Identifier	pos		445686	1					
ANR	446535	PrimaryExpression	'('		445686	1					
ANR	446536	CompoundStatement		117:71:3430:3430	445686	1					
ANR	446537	ExpressionStatement	* pos = nextpos	4590:3:114518:114532	445686	0	True				
ANR	446538	AssignmentExpression	* pos = nextpos		445686	0		=			
ANR	446539	UnaryOperationExpression	* pos		445686	0					
ANR	446540	UnaryOperator	*		445686	0					
ANR	446541	Identifier	pos		445686	1					
ANR	446542	Identifier	nextpos		445686	1					
ANR	446543	IfStatement	"if ( getToken ( str , pos , & nextpos ) != TT_NUMBER || ( reg = getnum ( a , str + * pos ) ) > 7 )"		445686	2					
ANR	446544	Condition	"getToken ( str , pos , & nextpos ) != TT_NUMBER || ( reg = getnum ( a , str + * pos ) ) > 7"	4595:6:114612:114695	445686	0	True				
ANR	446545	OrExpression	"getToken ( str , pos , & nextpos ) != TT_NUMBER || ( reg = getnum ( a , str + * pos ) ) > 7"		445686	0		||			
ANR	446546	EqualityExpression	"getToken ( str , pos , & nextpos ) != TT_NUMBER"		445686	0		!=			
ANR	446547	CallExpression	"getToken ( str , pos , & nextpos )"		445686	0					
ANR	446548	Callee	getToken		445686	0					
ANR	446549	Identifier	getToken		445686	0					
ANR	446550	ArgumentList	str		445686	1					
ANR	446551	Argument	str		445686	0					
ANR	446552	Identifier	str		445686	0					
ANR	446553	Argument	pos		445686	1					
ANR	446554	Identifier	pos		445686	0					
ANR	446555	Argument	& nextpos		445686	2					
ANR	446556	UnaryOperationExpression	& nextpos		445686	0					
ANR	446557	UnaryOperator	&		445686	0					
ANR	446558	Identifier	nextpos		445686	1					
ANR	446559	Identifier	TT_NUMBER		445686	1					
ANR	446560	RelationalExpression	"( reg = getnum ( a , str + * pos ) ) > 7"		445686	1		>			
ANR	446561	AssignmentExpression	"reg = getnum ( a , str + * pos )"		445686	0		=			
ANR	446562	Identifier	reg		445686	0					
ANR	446563	CallExpression	"getnum ( a , str + * pos )"		445686	1					
ANR	446564	Callee	getnum		445686	0					
ANR	446565	Identifier	getnum		445686	0					
ANR	446566	ArgumentList	a		445686	1					
ANR	446567	Argument	a		445686	0					
ANR	446568	Identifier	a		445686	0					
ANR	446569	Argument	str + * pos		445686	1					
ANR	446570	AdditiveExpression	str + * pos		445686	0		+			
ANR	446571	Identifier	str		445686	0					
ANR	446572	UnaryOperationExpression	* pos		445686	1					
ANR	446573	UnaryOperator	*		445686	0					
ANR	446574	Identifier	pos		445686	1					
ANR	446575	PrimaryExpression	7		445686	1					
ANR	446576	CompoundStatement		124:40:3615:3615	445686	1					
ANR	446577	IfStatement	if ( ( int ) reg > 15 )		445686	0					
ANR	446578	Condition	( int ) reg > 15	4597:7:114707:114719	445686	0	True				
ANR	446579	RelationalExpression	( int ) reg > 15		445686	0		>			
ANR	446580	CastExpression	( int ) reg		445686	0					
ANR	446581	CastTarget	int		445686	0					
ANR	446582	Identifier	reg		445686	1					
ANR	446583	PrimaryExpression	15		445686	1					
ANR	446584	CompoundStatement		125:22:3639:3639	445686	1					
ANR	446585	ExpressionStatement	"eprintf ( ""Too large register index!\\n"" )"	4598:4:114728:114767	445686	0	True				
ANR	446586	CallExpression	"eprintf ( ""Too large register index!\\n"" )"		445686	0					
ANR	446587	Callee	eprintf		445686	0					
ANR	446588	Identifier	eprintf		445686	0					
ANR	446589	ArgumentList	"""Too large register index!\\n"""		445686	1					
ANR	446590	Argument	"""Too large register index!\\n"""		445686	0					
ANR	446591	PrimaryExpression	"""Too large register index!\\n"""		445686	0					
ANR	446592	ReturnStatement	return X86R_UNDEFINED ;	4599:4:114773:114794	445686	1	True				
ANR	446593	Identifier	X86R_UNDEFINED		445686	0					
ANR	446594	ElseStatement	else		445686	0					
ANR	446595	CompoundStatement		128:10:3723:3723	445686	0					
ANR	446596	ExpressionStatement	reg -= 8	4601:4:114812:114820	445686	0	True				
ANR	446597	AssignmentExpression	reg -= 8		445686	0		-=			
ANR	446598	Identifier	reg		445686	0					
ANR	446599	PrimaryExpression	8		445686	1					
ANR	446600	ExpressionStatement	* pos = nextpos	4605:2:114834:114848	445686	3	True				
ANR	446601	AssignmentExpression	* pos = nextpos		445686	0		=			
ANR	446602	UnaryOperationExpression	* pos		445686	0					
ANR	446603	UnaryOperator	*		445686	0					
ANR	446604	Identifier	pos		445686	1					
ANR	446605	Identifier	nextpos		445686	1					
ANR	446606	IfStatement	"if ( getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == ')' )"		445686	4					
ANR	446607	Condition	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == ')'"	4608:6:114874:114936	445686	0	True				
ANR	446608	AndExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == ')'"		445686	0		&&			
ANR	446609	EqualityExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL"		445686	0		==			
ANR	446610	CallExpression	"getToken ( str , pos , & nextpos )"		445686	0					
ANR	446611	Callee	getToken		445686	0					
ANR	446612	Identifier	getToken		445686	0					
ANR	446613	ArgumentList	str		445686	1					
ANR	446614	Argument	str		445686	0					
ANR	446615	Identifier	str		445686	0					
ANR	446616	Argument	pos		445686	1					
ANR	446617	Identifier	pos		445686	0					
ANR	446618	Argument	& nextpos		445686	2					
ANR	446619	UnaryOperationExpression	& nextpos		445686	0					
ANR	446620	UnaryOperator	&		445686	0					
ANR	446621	Identifier	nextpos		445686	1					
ANR	446622	Identifier	TT_SPECIAL		445686	1					
ANR	446623	EqualityExpression	str [ * pos ] == ')'		445686	1		==			
ANR	446624	ArrayIndexing	str [ * pos ]		445686	0					
ANR	446625	Identifier	str		445686	0					
ANR	446626	UnaryOperationExpression	* pos		445686	1					
ANR	446627	UnaryOperator	*		445686	0					
ANR	446628	Identifier	pos		445686	1					
ANR	446629	PrimaryExpression	')'		445686	1					
ANR	446630	CompoundStatement		136:71:3856:3856	445686	1					
ANR	446631	ExpressionStatement	* pos = nextpos	4609:3:114944:114958	445686	0	True				
ANR	446632	AssignmentExpression	* pos = nextpos		445686	0		=			
ANR	446633	UnaryOperationExpression	* pos		445686	0					
ANR	446634	UnaryOperator	*		445686	0					
ANR	446635	Identifier	pos		445686	1					
ANR	446636	Identifier	nextpos		445686	1					
ANR	446637	IfStatement	if ( reg > 7 )		445686	5					
ANR	446638	Condition	reg > 7	4613:6:115053:115059	445686	0	True				
ANR	446639	RelationalExpression	reg > 7		445686	0		>			
ANR	446640	Identifier	reg		445686	0					
ANR	446641	PrimaryExpression	7		445686	1					
ANR	446642	CompoundStatement		141:15:3979:3979	445686	1					
ANR	446643	ExpressionStatement	"eprintf ( ""Too large register index!\\n"" )"	4614:3:115067:115106	445686	0	True				
ANR	446644	CallExpression	"eprintf ( ""Too large register index!\\n"" )"		445686	0					
ANR	446645	Callee	eprintf		445686	0					
ANR	446646	Identifier	eprintf		445686	0					
ANR	446647	ArgumentList	"""Too large register index!\\n"""		445686	1					
ANR	446648	Argument	"""Too large register index!\\n"""		445686	0					
ANR	446649	PrimaryExpression	"""Too large register index!\\n"""		445686	0					
ANR	446650	ReturnStatement	return X86R_UNDEFINED ;	4615:3:115111:115132	445686	1	True				
ANR	446651	Identifier	X86R_UNDEFINED		445686	0					
ANR	446652	ExpressionStatement	* type |= ( OT_REG ( reg ) & ~OT_REGTYPE )	4617:2:115140:115177	445686	6	True				
ANR	446653	AssignmentExpression	* type |= ( OT_REG ( reg ) & ~OT_REGTYPE )		445686	0		|=			
ANR	446654	UnaryOperationExpression	* type		445686	0					
ANR	446655	UnaryOperator	*		445686	0					
ANR	446656	Identifier	type		445686	1					
ANR	446657	BitAndExpression	OT_REG ( reg ) & ~OT_REGTYPE		445686	1		&			
ANR	446658	CallExpression	OT_REG ( reg )		445686	0					
ANR	446659	Callee	OT_REG		445686	0					
ANR	446660	Identifier	OT_REG		445686	0					
ANR	446661	ArgumentList	reg		445686	1					
ANR	446662	Argument	reg		445686	0					
ANR	446663	Identifier	reg		445686	0					
ANR	446664	Identifier	~OT_REGTYPE		445686	1					
ANR	446665	ReturnStatement	return reg ;	4618:2:115181:115191	445686	7	True				
ANR	446666	Identifier	reg		445686	0					
ANR	446667	ReturnStatement	return X86R_UNDEFINED ;	4621:1:115198:115219	445686	26	True				
ANR	446668	Identifier	X86R_UNDEFINED		445686	0					
ANR	446669	ReturnType	static Register		445686	1					
ANR	446670	Identifier	parseReg		445686	2					
ANR	446671	ParameterList	"RAsm * a , const char * str , size_t * pos , ut32 * type"		445686	3					
ANR	446672	Parameter	RAsm * a	4473:25:111031:111037	445686	0	True				
ANR	446673	ParameterType	RAsm *		445686	0					
ANR	446674	Identifier	a		445686	1					
ANR	446675	Parameter	const char * str	4473:34:111040:111054	445686	1	True				
ANR	446676	ParameterType	const char *		445686	0					
ANR	446677	Identifier	str		445686	1					
ANR	446678	Parameter	size_t * pos	4473:51:111057:111067	445686	2	True				
ANR	446679	ParameterType	size_t *		445686	0					
ANR	446680	Identifier	pos		445686	1					
ANR	446681	Parameter	ut32 * type	4473:64:111070:111079	445686	3	True				
ANR	446682	ParameterType	ut32 *		445686	0					
ANR	446683	Identifier	type		445686	1					
ANR	446684	CFGEntryNode	ENTRY		445686		True				
ANR	446685	CFGExitNode	EXIT		445686		True				
ANR	446686	Symbol	OT_REG		445686						
ANR	446687	Symbol	type		445686						
ANR	446688	Symbol	regs16		445686						
ANR	446689	Symbol	OT_FPUREG		445686						
ANR	446690	Symbol	* regs64		445686						
ANR	446691	Symbol	regs64		445686						
ANR	446692	Symbol	* regs8		445686						
ANR	446693	Symbol	reg		445686						
ANR	446694	Symbol	~OT_REGALL		445686						
ANR	446695	Symbol	nextpos		445686						
ANR	446696	Symbol	~OT_REGTYPE		445686						
ANR	446697	Symbol	OT_BYTE		445686						
ANR	446698	Symbol	a -> bits		445686						
ANR	446699	Symbol	NULL		445686						
ANR	446700	Symbol	regsext		445686						
ANR	446701	Symbol	OT_GPREG		445686						
ANR	446702	Symbol	OT_DEBUGREG		445686						
ANR	446703	Symbol	OT_SEGMENTREG		445686						
ANR	446704	Symbol	* * pos		445686						
ANR	446705	Symbol	str		445686						
ANR	446706	Symbol	OT_CONTROLREG		445686						
ANR	446707	Symbol	* regs		445686						
ANR	446708	Symbol	* sregs		445686						
ANR	446709	Symbol	* pos		445686						
ANR	446710	Symbol	OT_QWORD		445686						
ANR	446711	Symbol	* cregs		445686						
ANR	446712	Symbol	regs8		445686						
ANR	446713	Symbol	* regsext		445686						
ANR	446714	Symbol	pos		445686						
ANR	446715	Symbol	* type		445686						
ANR	446716	Symbol	* dregs		445686						
ANR	446717	Symbol	* regs64ext		445686						
ANR	446718	Symbol	TT_NUMBER		445686						
ANR	446719	Symbol	sregs		445686						
ANR	446720	Symbol	* str		445686						
ANR	446721	Symbol	r_str_ncasecmp		445686						
ANR	446722	Symbol	a		445686						
ANR	446723	Symbol	& nextpos		445686						
ANR	446724	Symbol	OT_WORD		445686						
ANR	446725	Symbol	regs64ext		445686						
ANR	446726	Symbol	length		445686						
ANR	446727	Symbol	i		445686						
ANR	446728	Symbol	regs		445686						
ANR	446729	Symbol	cregs		445686						
ANR	446730	Symbol	OT_MMXREG		445686						
ANR	446731	Symbol	OT_XMMREG		445686						
ANR	446732	Symbol	* a		445686						
ANR	446733	Symbol	TT_SPECIAL		445686						
ANR	446734	Symbol	token		445686						
ANR	446735	Symbol	* i		445686						
ANR	446736	Symbol	* token		445686						
ANR	446737	Symbol	X86R_UNDEFINED		445686						
ANR	446738	Symbol	dregs		445686						
ANR	446739	Symbol	getToken		445686						
ANR	446740	Symbol	getnum		445686						
ANR	446741	Symbol	* regs16		445686						
ANR	446742	Symbol	OT_DWORD		445686						
ANR	446743	Function	parse_segment_offset	4624:0:115224:115832							
ANR	446744	FunctionDef	"parse_segment_offset (RAsm * a , const char * str , size_t * pos , Operand * op , int reg_index)"		446743	0					
ANR	446745	CompoundStatement		4625:30:115326:115832	446743	0					
ANR	446746	IdentifierDeclStatement	int nextpos = * pos ;	4626:1:115329:115347	446743	0	True				
ANR	446747	IdentifierDecl	nextpos = * pos		446743	0					
ANR	446748	IdentifierDeclType	int		446743	0					
ANR	446749	Identifier	nextpos		446743	1					
ANR	446750	AssignmentExpression	nextpos = * pos		446743	2		=			
ANR	446751	Identifier	nextpos		446743	0					
ANR	446752	UnaryOperationExpression	* pos		446743	1					
ANR	446753	UnaryOperator	*		446743	0					
ANR	446754	Identifier	pos		446743	1					
ANR	446755	IdentifierDeclStatement	"char * c = strchr ( str + nextpos , ':' ) ;"	4627:1:115350:115387	446743	1	True				
ANR	446756	IdentifierDecl	"* c = strchr ( str + nextpos , ':' )"		446743	0					
ANR	446757	IdentifierDeclType	char *		446743	0					
ANR	446758	Identifier	c		446743	1					
ANR	446759	AssignmentExpression	"* c = strchr ( str + nextpos , ':' )"		446743	2		=			
ANR	446760	Identifier	c		446743	0					
ANR	446761	CallExpression	"strchr ( str + nextpos , ':' )"		446743	1					
ANR	446762	Callee	strchr		446743	0					
ANR	446763	Identifier	strchr		446743	0					
ANR	446764	ArgumentList	str + nextpos		446743	1					
ANR	446765	Argument	str + nextpos		446743	0					
ANR	446766	AdditiveExpression	str + nextpos		446743	0		+			
ANR	446767	Identifier	str		446743	0					
ANR	446768	Identifier	nextpos		446743	1					
ANR	446769	Argument	':'		446743	1					
ANR	446770	PrimaryExpression	':'		446743	0					
ANR	446771	IfStatement	if ( c )		446743	2					
ANR	446772	Condition	c	4628:5:115394:115394	446743	0	True				
ANR	446773	Identifier	c		446743	0					
ANR	446774	CompoundStatement		13:2:319:356	446743	1					
ANR	446775	ExpressionStatement	nextpos ++	4629:2:115401:115411	446743	0	True				
ANR	446776	PostIncDecOperationExpression	nextpos ++		446743	0					
ANR	446777	Identifier	nextpos		446743	0					
ANR	446778	IncDec	++		446743	1					
ANR	446779	ExpressionStatement	"c = strchr ( str + nextpos , '[' )"	4630:2:115431:115462	446743	1	True				
ANR	446780	AssignmentExpression	"c = strchr ( str + nextpos , '[' )"		446743	0		=			
ANR	446781	Identifier	c		446743	0					
ANR	446782	CallExpression	"strchr ( str + nextpos , '[' )"		446743	1					
ANR	446783	Callee	strchr		446743	0					
ANR	446784	Identifier	strchr		446743	0					
ANR	446785	ArgumentList	str + nextpos		446743	1					
ANR	446786	Argument	str + nextpos		446743	0					
ANR	446787	AdditiveExpression	str + nextpos		446743	0		+			
ANR	446788	Identifier	str		446743	0					
ANR	446789	Identifier	nextpos		446743	1					
ANR	446790	Argument	'['		446743	1					
ANR	446791	PrimaryExpression	'['		446743	0					
ANR	446792	IfStatement	if ( c )		446743	2					
ANR	446793	Condition	c	4631:6:115470:115470	446743	0	True				
ANR	446794	Identifier	c		446743	0					
ANR	446795	CompoundStatement		7:9:146:146	446743	1					
ANR	446796	ExpressionStatement	nextpos ++	4631:10:115474:115484	446743	0	True				
ANR	446797	PostIncDecOperationExpression	nextpos ++		446743	0					
ANR	446798	Identifier	nextpos		446743	0					
ANR	446799	IncDec	++		446743	1					
ANR	446800	ExpressionStatement	op -> regs [ reg_index ] = op -> reg	4634:2:115565:115594	446743	3	True				
ANR	446801	AssignmentExpression	op -> regs [ reg_index ] = op -> reg		446743	0		=			
ANR	446802	ArrayIndexing	op -> regs [ reg_index ]		446743	0					
ANR	446803	PtrMemberAccess	op -> regs		446743	0					
ANR	446804	Identifier	op		446743	0					
ANR	446805	Identifier	regs		446743	1					
ANR	446806	Identifier	reg_index		446743	1					
ANR	446807	PtrMemberAccess	op -> reg		446743	1					
ANR	446808	Identifier	op		446743	0					
ANR	446809	Identifier	reg		446743	1					
ANR	446810	ExpressionStatement	op -> type |= OT_MEMORY	4635:2:115598:115619	446743	4	True				
ANR	446811	AssignmentExpression	op -> type |= OT_MEMORY		446743	0		|=			
ANR	446812	PtrMemberAccess	op -> type		446743	0					
ANR	446813	Identifier	op		446743	0					
ANR	446814	Identifier	type		446743	1					
ANR	446815	Identifier	OT_MEMORY		446743	1					
ANR	446816	ExpressionStatement	op -> offset_sign = 1	4636:2:115623:115642	446743	5	True				
ANR	446817	AssignmentExpression	op -> offset_sign = 1		446743	0		=			
ANR	446818	PtrMemberAccess	op -> offset_sign		446743	0					
ANR	446819	Identifier	op		446743	0					
ANR	446820	Identifier	offset_sign		446743	1					
ANR	446821	PrimaryExpression	1		446743	1					
ANR	446822	IdentifierDeclStatement	"char * p = strchr ( str + nextpos , '-' ) ;"	4637:2:115646:115683	446743	6	True				
ANR	446823	IdentifierDecl	"* p = strchr ( str + nextpos , '-' )"		446743	0					
ANR	446824	IdentifierDeclType	char *		446743	0					
ANR	446825	Identifier	p		446743	1					
ANR	446826	AssignmentExpression	"* p = strchr ( str + nextpos , '-' )"		446743	2		=			
ANR	446827	Identifier	p		446743	0					
ANR	446828	CallExpression	"strchr ( str + nextpos , '-' )"		446743	1					
ANR	446829	Callee	strchr		446743	0					
ANR	446830	Identifier	strchr		446743	0					
ANR	446831	ArgumentList	str + nextpos		446743	1					
ANR	446832	Argument	str + nextpos		446743	0					
ANR	446833	AdditiveExpression	str + nextpos		446743	0		+			
ANR	446834	Identifier	str		446743	0					
ANR	446835	Identifier	nextpos		446743	1					
ANR	446836	Argument	'-'		446743	1					
ANR	446837	PrimaryExpression	'-'		446743	0					
ANR	446838	IfStatement	if ( p )		446743	7					
ANR	446839	Condition	p	4638:6:115691:115691	446743	0	True				
ANR	446840	Identifier	p		446743	0					
ANR	446841	CompoundStatement		14:9:367:367	446743	1					
ANR	446842	ExpressionStatement	op -> offset_sign = - 1	4639:3:115699:115719	446743	0	True				
ANR	446843	AssignmentExpression	op -> offset_sign = - 1		446743	0		=			
ANR	446844	PtrMemberAccess	op -> offset_sign		446743	0					
ANR	446845	Identifier	op		446743	0					
ANR	446846	Identifier	offset_sign		446743	1					
ANR	446847	UnaryOperationExpression	- 1		446743	1					
ANR	446848	UnaryOperator	-		446743	0					
ANR	446849	PrimaryExpression	1		446743	1					
ANR	446850	ExpressionStatement	nextpos ++	4640:3:115724:115734	446743	1	True				
ANR	446851	PostIncDecOperationExpression	nextpos ++		446743	0					
ANR	446852	Identifier	nextpos		446743	0					
ANR	446853	IncDec	++		446743	1					
ANR	446854	ExpressionStatement	"op -> scale [ reg_index ] = getnum ( a , str + nextpos )"	4642:2:115742:115790	446743	8	True				
ANR	446855	AssignmentExpression	"op -> scale [ reg_index ] = getnum ( a , str + nextpos )"		446743	0		=			
ANR	446856	ArrayIndexing	op -> scale [ reg_index ]		446743	0					
ANR	446857	PtrMemberAccess	op -> scale		446743	0					
ANR	446858	Identifier	op		446743	0					
ANR	446859	Identifier	scale		446743	1					
ANR	446860	Identifier	reg_index		446743	1					
ANR	446861	CallExpression	"getnum ( a , str + nextpos )"		446743	1					
ANR	446862	Callee	getnum		446743	0					
ANR	446863	Identifier	getnum		446743	0					
ANR	446864	ArgumentList	a		446743	1					
ANR	446865	Argument	a		446743	0					
ANR	446866	Identifier	a		446743	0					
ANR	446867	Argument	str + nextpos		446743	1					
ANR	446868	AdditiveExpression	str + nextpos		446743	0		+			
ANR	446869	Identifier	str		446743	0					
ANR	446870	Identifier	nextpos		446743	1					
ANR	446871	ExpressionStatement	op -> offset = op -> scale [ reg_index ]	4643:2:115794:115827	446743	9	True				
ANR	446872	AssignmentExpression	op -> offset = op -> scale [ reg_index ]		446743	0		=			
ANR	446873	PtrMemberAccess	op -> offset		446743	0					
ANR	446874	Identifier	op		446743	0					
ANR	446875	Identifier	offset		446743	1					
ANR	446876	ArrayIndexing	op -> scale [ reg_index ]		446743	1					
ANR	446877	PtrMemberAccess	op -> scale		446743	0					
ANR	446878	Identifier	op		446743	0					
ANR	446879	Identifier	scale		446743	1					
ANR	446880	Identifier	reg_index		446743	1					
ANR	446881	ReturnType	static void		446743	1					
ANR	446882	Identifier	parse_segment_offset		446743	2					
ANR	446883	ParameterList	"RAsm * a , const char * str , size_t * pos , Operand * op , int reg_index"		446743	3					
ANR	446884	Parameter	RAsm * a	4624:33:115257:115263	446743	0	True				
ANR	446885	ParameterType	RAsm *		446743	0					
ANR	446886	Identifier	a		446743	1					
ANR	446887	Parameter	const char * str	4624:42:115266:115280	446743	1	True				
ANR	446888	ParameterType	const char *		446743	0					
ANR	446889	Identifier	str		446743	1					
ANR	446890	Parameter	size_t * pos	4624:59:115283:115293	446743	2	True				
ANR	446891	ParameterType	size_t *		446743	0					
ANR	446892	Identifier	pos		446743	1					
ANR	446893	Parameter	Operand * op	4625:2:115298:115308	446743	3	True				
ANR	446894	ParameterType	Operand *		446743	0					
ANR	446895	Identifier	op		446743	1					
ANR	446896	Parameter	int reg_index	4625:15:115311:115323	446743	4	True				
ANR	446897	ParameterType	int		446743	0					
ANR	446898	Identifier	reg_index		446743	1					
ANR	446899	CFGEntryNode	ENTRY		446743		True				
ANR	446900	CFGExitNode	EXIT		446743		True				
ANR	446901	Symbol	a		446743						
ANR	446902	Symbol	op		446743						
ANR	446903	Symbol	c		446743						
ANR	446904	Symbol	* op -> regs		446743						
ANR	446905	Symbol	op -> regs		446743						
ANR	446906	Symbol	* op		446743						
ANR	446907	Symbol	* op -> scale		446743						
ANR	446908	Symbol	op -> type		446743						
ANR	446909	Symbol	strchr		446743						
ANR	446910	Symbol	* reg_index		446743						
ANR	446911	Symbol	reg_index		446743						
ANR	446912	Symbol	* * op		446743						
ANR	446913	Symbol	str		446743						
ANR	446914	Symbol	p		446743						
ANR	446915	Symbol	op -> offset		446743						
ANR	446916	Symbol	op -> scale		446743						
ANR	446917	Symbol	pos		446743						
ANR	446918	Symbol	getnum		446743						
ANR	446919	Symbol	nextpos		446743						
ANR	446920	Symbol	op -> offset_sign		446743						
ANR	446921	Symbol	OT_MEMORY		446743						
ANR	446922	Symbol	* pos		446743						
ANR	446923	Symbol	op -> reg		446743						
ANR	446924	Function	parseOperand	4647:0:115851:121772							
ANR	446925	FunctionDef	"parseOperand (RAsm * a , const char * str , Operand * op , bool isrepop)"		446924	0					
ANR	446926	CompoundStatement		4647:77:115928:121772	446924	0					
ANR	446927	IdentifierDeclStatement	"size_t pos , nextpos = 0 ;"	4648:1:115931:115954	446924	0	True				
ANR	446928	IdentifierDecl	pos		446924	0					
ANR	446929	IdentifierDeclType	size_t		446924	0					
ANR	446930	Identifier	pos		446924	1					
ANR	446931	IdentifierDecl	nextpos = 0		446924	1					
ANR	446932	IdentifierDeclType	size_t		446924	0					
ANR	446933	Identifier	nextpos		446924	1					
ANR	446934	AssignmentExpression	nextpos = 0		446924	2		=			
ANR	446935	Identifier	nextpos		446924	0					
ANR	446936	PrimaryExpression	0		446924	1					
ANR	446937	IdentifierDeclStatement	x86newTokenType last_type ;	4649:1:115957:115982	446924	1	True				
ANR	446938	IdentifierDecl	last_type		446924	0					
ANR	446939	IdentifierDeclType	x86newTokenType		446924	0					
ANR	446940	Identifier	last_type		446924	1					
ANR	446941	IdentifierDeclStatement	int size_token = 1 ;	4650:1:115985:116003	446924	2	True				
ANR	446942	IdentifierDecl	size_token = 1		446924	0					
ANR	446943	IdentifierDeclType	int		446924	0					
ANR	446944	Identifier	size_token		446924	1					
ANR	446945	AssignmentExpression	size_token = 1		446924	2		=			
ANR	446946	Identifier	size_token		446924	0					
ANR	446947	PrimaryExpression	1		446924	1					
ANR	446948	IdentifierDeclStatement	bool explicit_size = false ;	4651:1:116006:116032	446924	3	True				
ANR	446949	IdentifierDecl	explicit_size = false		446924	0					
ANR	446950	IdentifierDeclType	bool		446924	0					
ANR	446951	Identifier	explicit_size		446924	1					
ANR	446952	AssignmentExpression	explicit_size = false		446924	2		=			
ANR	446953	Identifier	false		446924	0					
ANR	446954	Identifier	false		446924	1					
ANR	446955	IdentifierDeclStatement	int reg_index = 0 ;	4652:1:116035:116052	446924	4	True				
ANR	446956	IdentifierDecl	reg_index = 0		446924	0					
ANR	446957	IdentifierDeclType	int		446924	0					
ANR	446958	Identifier	reg_index		446924	1					
ANR	446959	AssignmentExpression	reg_index = 0		446924	2		=			
ANR	446960	Identifier	reg_index		446924	0					
ANR	446961	PrimaryExpression	0		446924	1					
ANR	446962	ExpressionStatement	op -> type = 0	4654:1:116070:116082	446924	5	True				
ANR	446963	AssignmentExpression	op -> type = 0		446924	0		=			
ANR	446964	PtrMemberAccess	op -> type		446924	0					
ANR	446965	Identifier	op		446924	0					
ANR	446966	Identifier	type		446924	1					
ANR	446967	PrimaryExpression	0		446924	1					
ANR	446968	WhileStatement	while ( size_token )		446924	6					
ANR	446969	Condition	size_token	4656:8:116137:116146	446924	0	True				
ANR	446970	Identifier	size_token		446924	0					
ANR	446971	CompoundStatement		10:20:220:220	446924	1					
ANR	446972	ExpressionStatement	pos = nextpos	4657:2:116153:116166	446924	0	True				
ANR	446973	AssignmentExpression	pos = nextpos		446924	0		=			
ANR	446974	Identifier	pos		446924	0					
ANR	446975	Identifier	nextpos		446924	1					
ANR	446976	ExpressionStatement	"last_type = getToken ( str , & pos , & nextpos )"	4658:2:116170:116212	446924	1	True				
ANR	446977	AssignmentExpression	"last_type = getToken ( str , & pos , & nextpos )"		446924	0		=			
ANR	446978	Identifier	last_type		446924	0					
ANR	446979	CallExpression	"getToken ( str , & pos , & nextpos )"		446924	1					
ANR	446980	Callee	getToken		446924	0					
ANR	446981	Identifier	getToken		446924	0					
ANR	446982	ArgumentList	str		446924	1					
ANR	446983	Argument	str		446924	0					
ANR	446984	Identifier	str		446924	0					
ANR	446985	Argument	& pos		446924	1					
ANR	446986	UnaryOperationExpression	& pos		446924	0					
ANR	446987	UnaryOperator	&		446924	0					
ANR	446988	Identifier	pos		446924	1					
ANR	446989	Argument	& nextpos		446924	2					
ANR	446990	UnaryOperationExpression	& nextpos		446924	0					
ANR	446991	UnaryOperator	&		446924	0					
ANR	446992	Identifier	nextpos		446924	1					
ANR	446993	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""ptr"" , 3 ) )"		446924	2					
ANR	446994	Condition	"! r_str_ncasecmp ( str + pos , ""ptr"" , 3 )"	4661:6:116261:116297	446924	0	True				
ANR	446995	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""ptr"" , 3 )"		446924	0					
ANR	446996	UnaryOperator	!		446924	0					
ANR	446997	CallExpression	"r_str_ncasecmp ( str + pos , ""ptr"" , 3 )"		446924	1					
ANR	446998	Callee	r_str_ncasecmp		446924	0					
ANR	446999	Identifier	r_str_ncasecmp		446924	0					
ANR	447000	ArgumentList	str + pos		446924	1					
ANR	447001	Argument	str + pos		446924	0					
ANR	447002	AdditiveExpression	str + pos		446924	0		+			
ANR	447003	Identifier	str		446924	0					
ANR	447004	Identifier	pos		446924	1					
ANR	447005	Argument	"""ptr"""		446924	1					
ANR	447006	PrimaryExpression	"""ptr"""		446924	0					
ANR	447007	Argument	3		446924	2					
ANR	447008	PrimaryExpression	3		446924	0					
ANR	447009	CompoundStatement		15:45:371:371	446924	1					
ANR	447010	ContinueStatement	continue ;	4662:3:116305:116313	446924	0	True				
ANR	447011	ElseStatement	else		446924	0					
ANR	447012	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""byte"" , 4 ) )"		446924	0					
ANR	447013	Condition	"! r_str_ncasecmp ( str + pos , ""byte"" , 4 )"	4663:13:116328:116365	446924	0	True				
ANR	447014	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""byte"" , 4 )"		446924	0					
ANR	447015	UnaryOperator	!		446924	0					
ANR	447016	CallExpression	"r_str_ncasecmp ( str + pos , ""byte"" , 4 )"		446924	1					
ANR	447017	Callee	r_str_ncasecmp		446924	0					
ANR	447018	Identifier	r_str_ncasecmp		446924	0					
ANR	447019	ArgumentList	str + pos		446924	1					
ANR	447020	Argument	str + pos		446924	0					
ANR	447021	AdditiveExpression	str + pos		446924	0		+			
ANR	447022	Identifier	str		446924	0					
ANR	447023	Identifier	pos		446924	1					
ANR	447024	Argument	"""byte"""		446924	1					
ANR	447025	PrimaryExpression	"""byte"""		446924	0					
ANR	447026	Argument	4		446924	2					
ANR	447027	PrimaryExpression	4		446924	0					
ANR	447028	CompoundStatement		17:53:439:439	446924	1					
ANR	447029	ExpressionStatement	op -> type |= OT_MEMORY | OT_BYTE	4664:3:116373:116404	446924	0	True				
ANR	447030	AssignmentExpression	op -> type |= OT_MEMORY | OT_BYTE		446924	0		|=			
ANR	447031	PtrMemberAccess	op -> type		446924	0					
ANR	447032	Identifier	op		446924	0					
ANR	447033	Identifier	type		446924	1					
ANR	447034	InclusiveOrExpression	OT_MEMORY | OT_BYTE		446924	1		|			
ANR	447035	Identifier	OT_MEMORY		446924	0					
ANR	447036	Identifier	OT_BYTE		446924	1					
ANR	447037	ExpressionStatement	op -> dest_size = OT_BYTE	4665:3:116409:116432	446924	1	True				
ANR	447038	AssignmentExpression	op -> dest_size = OT_BYTE		446924	0		=			
ANR	447039	PtrMemberAccess	op -> dest_size		446924	0					
ANR	447040	Identifier	op		446924	0					
ANR	447041	Identifier	dest_size		446924	1					
ANR	447042	Identifier	OT_BYTE		446924	1					
ANR	447043	ExpressionStatement	explicit_size = true	4666:3:116437:116457	446924	2	True				
ANR	447044	AssignmentExpression	explicit_size = true		446924	0		=			
ANR	447045	Identifier	explicit_size		446924	0					
ANR	447046	Identifier	true		446924	1					
ANR	447047	ElseStatement	else		446924	0					
ANR	447048	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""word"" , 4 ) )"		446924	0					
ANR	447049	Condition	"! r_str_ncasecmp ( str + pos , ""word"" , 4 )"	4667:13:116472:116509	446924	0	True				
ANR	447050	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""word"" , 4 )"		446924	0					
ANR	447051	UnaryOperator	!		446924	0					
ANR	447052	CallExpression	"r_str_ncasecmp ( str + pos , ""word"" , 4 )"		446924	1					
ANR	447053	Callee	r_str_ncasecmp		446924	0					
ANR	447054	Identifier	r_str_ncasecmp		446924	0					
ANR	447055	ArgumentList	str + pos		446924	1					
ANR	447056	Argument	str + pos		446924	0					
ANR	447057	AdditiveExpression	str + pos		446924	0		+			
ANR	447058	Identifier	str		446924	0					
ANR	447059	Identifier	pos		446924	1					
ANR	447060	Argument	"""word"""		446924	1					
ANR	447061	PrimaryExpression	"""word"""		446924	0					
ANR	447062	Argument	4		446924	2					
ANR	447063	PrimaryExpression	4		446924	0					
ANR	447064	CompoundStatement		21:53:583:583	446924	1					
ANR	447065	ExpressionStatement	op -> type |= OT_MEMORY | OT_WORD	4668:3:116517:116548	446924	0	True				
ANR	447066	AssignmentExpression	op -> type |= OT_MEMORY | OT_WORD		446924	0		|=			
ANR	447067	PtrMemberAccess	op -> type		446924	0					
ANR	447068	Identifier	op		446924	0					
ANR	447069	Identifier	type		446924	1					
ANR	447070	InclusiveOrExpression	OT_MEMORY | OT_WORD		446924	1		|			
ANR	447071	Identifier	OT_MEMORY		446924	0					
ANR	447072	Identifier	OT_WORD		446924	1					
ANR	447073	ExpressionStatement	op -> dest_size = OT_WORD	4669:3:116553:116576	446924	1	True				
ANR	447074	AssignmentExpression	op -> dest_size = OT_WORD		446924	0		=			
ANR	447075	PtrMemberAccess	op -> dest_size		446924	0					
ANR	447076	Identifier	op		446924	0					
ANR	447077	Identifier	dest_size		446924	1					
ANR	447078	Identifier	OT_WORD		446924	1					
ANR	447079	ExpressionStatement	explicit_size = true	4670:3:116581:116601	446924	2	True				
ANR	447080	AssignmentExpression	explicit_size = true		446924	0		=			
ANR	447081	Identifier	explicit_size		446924	0					
ANR	447082	Identifier	true		446924	1					
ANR	447083	ElseStatement	else		446924	0					
ANR	447084	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""dword"" , 5 ) )"		446924	0					
ANR	447085	Condition	"! r_str_ncasecmp ( str + pos , ""dword"" , 5 )"	4671:13:116616:116654	446924	0	True				
ANR	447086	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""dword"" , 5 )"		446924	0					
ANR	447087	UnaryOperator	!		446924	0					
ANR	447088	CallExpression	"r_str_ncasecmp ( str + pos , ""dword"" , 5 )"		446924	1					
ANR	447089	Callee	r_str_ncasecmp		446924	0					
ANR	447090	Identifier	r_str_ncasecmp		446924	0					
ANR	447091	ArgumentList	str + pos		446924	1					
ANR	447092	Argument	str + pos		446924	0					
ANR	447093	AdditiveExpression	str + pos		446924	0		+			
ANR	447094	Identifier	str		446924	0					
ANR	447095	Identifier	pos		446924	1					
ANR	447096	Argument	"""dword"""		446924	1					
ANR	447097	PrimaryExpression	"""dword"""		446924	0					
ANR	447098	Argument	5		446924	2					
ANR	447099	PrimaryExpression	5		446924	0					
ANR	447100	CompoundStatement		25:54:728:728	446924	1					
ANR	447101	ExpressionStatement	op -> type |= OT_MEMORY | OT_DWORD	4672:3:116662:116694	446924	0	True				
ANR	447102	AssignmentExpression	op -> type |= OT_MEMORY | OT_DWORD		446924	0		|=			
ANR	447103	PtrMemberAccess	op -> type		446924	0					
ANR	447104	Identifier	op		446924	0					
ANR	447105	Identifier	type		446924	1					
ANR	447106	InclusiveOrExpression	OT_MEMORY | OT_DWORD		446924	1		|			
ANR	447107	Identifier	OT_MEMORY		446924	0					
ANR	447108	Identifier	OT_DWORD		446924	1					
ANR	447109	ExpressionStatement	op -> dest_size = OT_DWORD	4673:3:116699:116723	446924	1	True				
ANR	447110	AssignmentExpression	op -> dest_size = OT_DWORD		446924	0		=			
ANR	447111	PtrMemberAccess	op -> dest_size		446924	0					
ANR	447112	Identifier	op		446924	0					
ANR	447113	Identifier	dest_size		446924	1					
ANR	447114	Identifier	OT_DWORD		446924	1					
ANR	447115	ExpressionStatement	explicit_size = true	4674:3:116728:116748	446924	2	True				
ANR	447116	AssignmentExpression	explicit_size = true		446924	0		=			
ANR	447117	Identifier	explicit_size		446924	0					
ANR	447118	Identifier	true		446924	1					
ANR	447119	ElseStatement	else		446924	0					
ANR	447120	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""qword"" , 5 ) )"		446924	0					
ANR	447121	Condition	"! r_str_ncasecmp ( str + pos , ""qword"" , 5 )"	4675:13:116763:116801	446924	0	True				
ANR	447122	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""qword"" , 5 )"		446924	0					
ANR	447123	UnaryOperator	!		446924	0					
ANR	447124	CallExpression	"r_str_ncasecmp ( str + pos , ""qword"" , 5 )"		446924	1					
ANR	447125	Callee	r_str_ncasecmp		446924	0					
ANR	447126	Identifier	r_str_ncasecmp		446924	0					
ANR	447127	ArgumentList	str + pos		446924	1					
ANR	447128	Argument	str + pos		446924	0					
ANR	447129	AdditiveExpression	str + pos		446924	0		+			
ANR	447130	Identifier	str		446924	0					
ANR	447131	Identifier	pos		446924	1					
ANR	447132	Argument	"""qword"""		446924	1					
ANR	447133	PrimaryExpression	"""qword"""		446924	0					
ANR	447134	Argument	5		446924	2					
ANR	447135	PrimaryExpression	5		446924	0					
ANR	447136	CompoundStatement		29:54:875:875	446924	1					
ANR	447137	ExpressionStatement	op -> type |= OT_MEMORY | OT_QWORD	4676:3:116809:116841	446924	0	True				
ANR	447138	AssignmentExpression	op -> type |= OT_MEMORY | OT_QWORD		446924	0		|=			
ANR	447139	PtrMemberAccess	op -> type		446924	0					
ANR	447140	Identifier	op		446924	0					
ANR	447141	Identifier	type		446924	1					
ANR	447142	InclusiveOrExpression	OT_MEMORY | OT_QWORD		446924	1		|			
ANR	447143	Identifier	OT_MEMORY		446924	0					
ANR	447144	Identifier	OT_QWORD		446924	1					
ANR	447145	ExpressionStatement	op -> dest_size = OT_QWORD	4677:3:116846:116870	446924	1	True				
ANR	447146	AssignmentExpression	op -> dest_size = OT_QWORD		446924	0		=			
ANR	447147	PtrMemberAccess	op -> dest_size		446924	0					
ANR	447148	Identifier	op		446924	0					
ANR	447149	Identifier	dest_size		446924	1					
ANR	447150	Identifier	OT_QWORD		446924	1					
ANR	447151	ExpressionStatement	explicit_size = true	4678:3:116875:116895	446924	2	True				
ANR	447152	AssignmentExpression	explicit_size = true		446924	0		=			
ANR	447153	Identifier	explicit_size		446924	0					
ANR	447154	Identifier	true		446924	1					
ANR	447155	ElseStatement	else		446924	0					
ANR	447156	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""oword"" , 5 ) )"		446924	0					
ANR	447157	Condition	"! r_str_ncasecmp ( str + pos , ""oword"" , 5 )"	4679:13:116910:116948	446924	0	True				
ANR	447158	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""oword"" , 5 )"		446924	0					
ANR	447159	UnaryOperator	!		446924	0					
ANR	447160	CallExpression	"r_str_ncasecmp ( str + pos , ""oword"" , 5 )"		446924	1					
ANR	447161	Callee	r_str_ncasecmp		446924	0					
ANR	447162	Identifier	r_str_ncasecmp		446924	0					
ANR	447163	ArgumentList	str + pos		446924	1					
ANR	447164	Argument	str + pos		446924	0					
ANR	447165	AdditiveExpression	str + pos		446924	0		+			
ANR	447166	Identifier	str		446924	0					
ANR	447167	Identifier	pos		446924	1					
ANR	447168	Argument	"""oword"""		446924	1					
ANR	447169	PrimaryExpression	"""oword"""		446924	0					
ANR	447170	Argument	5		446924	2					
ANR	447171	PrimaryExpression	5		446924	0					
ANR	447172	CompoundStatement		33:54:1022:1022	446924	1					
ANR	447173	ExpressionStatement	op -> type |= OT_MEMORY | OT_OWORD	4680:3:116956:116988	446924	0	True				
ANR	447174	AssignmentExpression	op -> type |= OT_MEMORY | OT_OWORD		446924	0		|=			
ANR	447175	PtrMemberAccess	op -> type		446924	0					
ANR	447176	Identifier	op		446924	0					
ANR	447177	Identifier	type		446924	1					
ANR	447178	InclusiveOrExpression	OT_MEMORY | OT_OWORD		446924	1		|			
ANR	447179	Identifier	OT_MEMORY		446924	0					
ANR	447180	Identifier	OT_OWORD		446924	1					
ANR	447181	ExpressionStatement	op -> dest_size = OT_OWORD	4681:3:116993:117017	446924	1	True				
ANR	447182	AssignmentExpression	op -> dest_size = OT_OWORD		446924	0		=			
ANR	447183	PtrMemberAccess	op -> dest_size		446924	0					
ANR	447184	Identifier	op		446924	0					
ANR	447185	Identifier	dest_size		446924	1					
ANR	447186	Identifier	OT_OWORD		446924	1					
ANR	447187	ExpressionStatement	explicit_size = true	4682:3:117022:117042	446924	2	True				
ANR	447188	AssignmentExpression	explicit_size = true		446924	0		=			
ANR	447189	Identifier	explicit_size		446924	0					
ANR	447190	Identifier	true		446924	1					
ANR	447191	ElseStatement	else		446924	0					
ANR	447192	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""tbyte"" , 5 ) )"		446924	0					
ANR	447193	Condition	"! r_str_ncasecmp ( str + pos , ""tbyte"" , 5 )"	4683:13:117057:117095	446924	0	True				
ANR	447194	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""tbyte"" , 5 )"		446924	0					
ANR	447195	UnaryOperator	!		446924	0					
ANR	447196	CallExpression	"r_str_ncasecmp ( str + pos , ""tbyte"" , 5 )"		446924	1					
ANR	447197	Callee	r_str_ncasecmp		446924	0					
ANR	447198	Identifier	r_str_ncasecmp		446924	0					
ANR	447199	ArgumentList	str + pos		446924	1					
ANR	447200	Argument	str + pos		446924	0					
ANR	447201	AdditiveExpression	str + pos		446924	0		+			
ANR	447202	Identifier	str		446924	0					
ANR	447203	Identifier	pos		446924	1					
ANR	447204	Argument	"""tbyte"""		446924	1					
ANR	447205	PrimaryExpression	"""tbyte"""		446924	0					
ANR	447206	Argument	5		446924	2					
ANR	447207	PrimaryExpression	5		446924	0					
ANR	447208	CompoundStatement		37:54:1169:1169	446924	1					
ANR	447209	ExpressionStatement	op -> type |= OT_MEMORY | OT_TBYTE	4684:3:117103:117135	446924	0	True				
ANR	447210	AssignmentExpression	op -> type |= OT_MEMORY | OT_TBYTE		446924	0		|=			
ANR	447211	PtrMemberAccess	op -> type		446924	0					
ANR	447212	Identifier	op		446924	0					
ANR	447213	Identifier	type		446924	1					
ANR	447214	InclusiveOrExpression	OT_MEMORY | OT_TBYTE		446924	1		|			
ANR	447215	Identifier	OT_MEMORY		446924	0					
ANR	447216	Identifier	OT_TBYTE		446924	1					
ANR	447217	ExpressionStatement	op -> dest_size = OT_TBYTE	4685:3:117140:117164	446924	1	True				
ANR	447218	AssignmentExpression	op -> dest_size = OT_TBYTE		446924	0		=			
ANR	447219	PtrMemberAccess	op -> dest_size		446924	0					
ANR	447220	Identifier	op		446924	0					
ANR	447221	Identifier	dest_size		446924	1					
ANR	447222	Identifier	OT_TBYTE		446924	1					
ANR	447223	ExpressionStatement	explicit_size = true	4686:3:117169:117189	446924	2	True				
ANR	447224	AssignmentExpression	explicit_size = true		446924	0		=			
ANR	447225	Identifier	explicit_size		446924	0					
ANR	447226	Identifier	true		446924	1					
ANR	447227	ElseStatement	else		446924	0					
ANR	447228	CompoundStatement		41:9:1271:1271	446924	0					
ANR	447229	ExpressionStatement	size_token = 0	4688:3:117248:117262	446924	0	True				
ANR	447230	AssignmentExpression	size_token = 0		446924	0		=			
ANR	447231	Identifier	size_token		446924	0					
ANR	447232	PrimaryExpression	0		446924	1					
ANR	447233	IfStatement	if ( str [ pos ] == '[' )		446924	7					
ANR	447234	Condition	str [ pos ] == '['	4693:5:117321:117335	446924	0	True				
ANR	447235	EqualityExpression	str [ pos ] == '['		446924	0		==			
ANR	447236	ArrayIndexing	str [ pos ]		446924	0					
ANR	447237	Identifier	str		446924	0					
ANR	447238	Identifier	pos		446924	1					
ANR	447239	PrimaryExpression	'['		446924	1					
ANR	447240	CompoundStatement		59:2:1742:1763	446924	1					
ANR	447241	IfStatement	if ( ! op -> type )		446924	0					
ANR	447242	Condition	! op -> type	4695:6:117392:117400	446924	0	True				
ANR	447243	UnaryOperationExpression	! op -> type		446924	0					
ANR	447244	UnaryOperator	!		446924	0					
ANR	447245	PtrMemberAccess	op -> type		446924	1					
ANR	447246	Identifier	op		446924	0					
ANR	447247	Identifier	type		446924	1					
ANR	447248	CompoundStatement		49:17:1474:1474	446924	1					
ANR	447249	ExpressionStatement	op -> type = OT_MEMORY	4696:3:117408:117428	446924	0	True				
ANR	447250	AssignmentExpression	op -> type = OT_MEMORY		446924	0		=			
ANR	447251	PtrMemberAccess	op -> type		446924	0					
ANR	447252	Identifier	op		446924	0					
ANR	447253	Identifier	type		446924	1					
ANR	447254	Identifier	OT_MEMORY		446924	1					
ANR	447255	ExpressionStatement	op -> offset = op -> scale [ 0 ] = op -> scale [ 1 ] = 0	4701:2:117572:117616	446924	1	True				
ANR	447256	AssignmentExpression	op -> offset = op -> scale [ 0 ] = op -> scale [ 1 ] = 0		446924	0		=			
ANR	447257	PtrMemberAccess	op -> offset		446924	0					
ANR	447258	Identifier	op		446924	0					
ANR	447259	Identifier	offset		446924	1					
ANR	447260	AssignmentExpression	op -> scale [ 0 ] = op -> scale [ 1 ] = 0		446924	1		=			
ANR	447261	ArrayIndexing	op -> scale [ 0 ]		446924	0					
ANR	447262	PtrMemberAccess	op -> scale		446924	0					
ANR	447263	Identifier	op		446924	0					
ANR	447264	Identifier	scale		446924	1					
ANR	447265	PrimaryExpression	0		446924	1					
ANR	447266	AssignmentExpression	op -> scale [ 1 ] = 0		446924	1		=			
ANR	447267	ArrayIndexing	op -> scale [ 1 ]		446924	0					
ANR	447268	PtrMemberAccess	op -> scale		446924	0					
ANR	447269	Identifier	op		446924	0					
ANR	447270	Identifier	scale		446924	1					
ANR	447271	PrimaryExpression	1		446924	1					
ANR	447272	PrimaryExpression	0		446924	1					
ANR	447273	IdentifierDeclStatement	ut64 temp = 1 ;	4703:2:117621:117634	446924	2	True				
ANR	447274	IdentifierDecl	temp = 1		446924	0					
ANR	447275	IdentifierDeclType	ut64		446924	0					
ANR	447276	Identifier	temp		446924	1					
ANR	447277	AssignmentExpression	temp = 1		446924	2		=			
ANR	447278	Identifier	temp		446924	0					
ANR	447279	PrimaryExpression	1		446924	1					
ANR	447280	IdentifierDeclStatement	Register reg = X86R_UNDEFINED ;	4704:2:117638:117667	446924	3	True				
ANR	447281	IdentifierDecl	reg = X86R_UNDEFINED		446924	0					
ANR	447282	IdentifierDeclType	Register		446924	0					
ANR	447283	Identifier	reg		446924	1					
ANR	447284	AssignmentExpression	reg = X86R_UNDEFINED		446924	2		=			
ANR	447285	Identifier	X86R_UNDEFINED		446924	0					
ANR	447286	Identifier	X86R_UNDEFINED		446924	1					
ANR	447287	IdentifierDeclStatement	bool first_reg = true ;	4705:2:117671:117692	446924	4	True				
ANR	447288	IdentifierDecl	first_reg = true		446924	0					
ANR	447289	IdentifierDeclType	bool		446924	0					
ANR	447290	Identifier	first_reg		446924	1					
ANR	447291	AssignmentExpression	first_reg = true		446924	2		=			
ANR	447292	Identifier	true		446924	0					
ANR	447293	Identifier	true		446924	1					
ANR	447294	WhileStatement	while ( str [ pos ] != ']' )		446924	5					
ANR	447295	Condition	str [ pos ] != ']'	4706:9:117703:117717	446924	0	True				
ANR	447296	EqualityExpression	str [ pos ] != ']'		446924	0		!=			
ANR	447297	ArrayIndexing	str [ pos ]		446924	0					
ANR	447298	Identifier	str		446924	0					
ANR	447299	Identifier	pos		446924	1					
ANR	447300	PrimaryExpression	']'		446924	1					
ANR	447301	CompoundStatement		60:26:1791:1791	446924	1					
ANR	447302	IfStatement	if ( pos > nextpos )		446924	0					
ANR	447303	Condition	pos > nextpos	4707:7:117729:117741	446924	0	True				
ANR	447304	RelationalExpression	pos > nextpos		446924	0		>			
ANR	447305	Identifier	pos		446924	0					
ANR	447306	Identifier	nextpos		446924	1					
ANR	447307	CompoundStatement		61:22:1815:1815	446924	1					
ANR	447308	BreakStatement	break ;	4709:4:117797:117802	446924	0	True				
ANR	447309	ExpressionStatement	pos = nextpos	4711:3:117812:117825	446924	1	True				
ANR	447310	AssignmentExpression	pos = nextpos		446924	0		=			
ANR	447311	Identifier	pos		446924	0					
ANR	447312	Identifier	nextpos		446924	1					
ANR	447313	IfStatement	if ( ! str [ pos ] )		446924	2					
ANR	447314	Condition	! str [ pos ]	4712:7:117834:117842	446924	0	True				
ANR	447315	UnaryOperationExpression	! str [ pos ]		446924	0					
ANR	447316	UnaryOperator	!		446924	0					
ANR	447317	ArrayIndexing	str [ pos ]		446924	1					
ANR	447318	Identifier	str		446924	0					
ANR	447319	Identifier	pos		446924	1					
ANR	447320	CompoundStatement		66:18:1916:1916	446924	1					
ANR	447321	BreakStatement	break ;	4713:4:117851:117856	446924	0	True				
ANR	447322	ExpressionStatement	"last_type = getToken ( str , & pos , & nextpos )"	4715:3:117866:117908	446924	3	True				
ANR	447323	AssignmentExpression	"last_type = getToken ( str , & pos , & nextpos )"		446924	0		=			
ANR	447324	Identifier	last_type		446924	0					
ANR	447325	CallExpression	"getToken ( str , & pos , & nextpos )"		446924	1					
ANR	447326	Callee	getToken		446924	0					
ANR	447327	Identifier	getToken		446924	0					
ANR	447328	ArgumentList	str		446924	1					
ANR	447329	Argument	str		446924	0					
ANR	447330	Identifier	str		446924	0					
ANR	447331	Argument	& pos		446924	1					
ANR	447332	UnaryOperationExpression	& pos		446924	0					
ANR	447333	UnaryOperator	&		446924	0					
ANR	447334	Identifier	pos		446924	1					
ANR	447335	Argument	& nextpos		446924	2					
ANR	447336	UnaryOperationExpression	& nextpos		446924	0					
ANR	447337	UnaryOperator	&		446924	0					
ANR	447338	Identifier	nextpos		446924	1					
ANR	447339	IfStatement	if ( last_type == TT_SPECIAL )		446924	4					
ANR	447340	Condition	last_type == TT_SPECIAL	4717:7:117918:117940	446924	0	True				
ANR	447341	EqualityExpression	last_type == TT_SPECIAL		446924	0		==			
ANR	447342	Identifier	last_type		446924	0					
ANR	447343	Identifier	TT_SPECIAL		446924	1					
ANR	447344	CompoundStatement		71:32:2014:2014	446924	1					
ANR	447345	IfStatement	if ( str [ pos ] == '+' || str [ pos ] == '-' || str [ pos ] == ']' )		446924	0					
ANR	447346	Condition	str [ pos ] == '+' || str [ pos ] == '-' || str [ pos ] == ']'	4718:8:117953:118005	446924	0	True				
ANR	447347	OrExpression	str [ pos ] == '+' || str [ pos ] == '-' || str [ pos ] == ']'		446924	0		||			
ANR	447348	EqualityExpression	str [ pos ] == '+'		446924	0		==			
ANR	447349	ArrayIndexing	str [ pos ]		446924	0					
ANR	447350	Identifier	str		446924	0					
ANR	447351	Identifier	pos		446924	1					
ANR	447352	PrimaryExpression	'+'		446924	1					
ANR	447353	OrExpression	str [ pos ] == '-' || str [ pos ] == ']'		446924	1		||			
ANR	447354	EqualityExpression	str [ pos ] == '-'		446924	0		==			
ANR	447355	ArrayIndexing	str [ pos ]		446924	0					
ANR	447356	Identifier	str		446924	0					
ANR	447357	Identifier	pos		446924	1					
ANR	447358	PrimaryExpression	'-'		446924	1					
ANR	447359	EqualityExpression	str [ pos ] == ']'		446924	1		==			
ANR	447360	ArrayIndexing	str [ pos ]		446924	0					
ANR	447361	Identifier	str		446924	0					
ANR	447362	Identifier	pos		446924	1					
ANR	447363	PrimaryExpression	']'		446924	1					
ANR	447364	CompoundStatement		72:63:2079:2079	446924	1					
ANR	447365	IfStatement	if ( reg != X86R_UNDEFINED )		446924	0					
ANR	447366	Condition	reg != X86R_UNDEFINED	4719:9:118019:118039	446924	0	True				
ANR	447367	EqualityExpression	reg != X86R_UNDEFINED		446924	0		!=			
ANR	447368	Identifier	reg		446924	0					
ANR	447369	Identifier	X86R_UNDEFINED		446924	1					
ANR	447370	CompoundStatement		73:32:2113:2113	446924	1					
ANR	447371	IfStatement	if ( reg_index < 2 )		446924	0					
ANR	447372	Condition	reg_index < 2	4720:10:118054:118066	446924	0	True				
ANR	447373	RelationalExpression	reg_index < 2		446924	0		<			
ANR	447374	Identifier	reg_index		446924	0					
ANR	447375	PrimaryExpression	2		446924	1					
ANR	447376	CompoundStatement		74:25:2140:2140	446924	1					
ANR	447377	ExpressionStatement	op -> regs [ reg_index ] = reg	4721:7:118078:118103	446924	0	True				
ANR	447378	AssignmentExpression	op -> regs [ reg_index ] = reg		446924	0		=			
ANR	447379	ArrayIndexing	op -> regs [ reg_index ]		446924	0					
ANR	447380	PtrMemberAccess	op -> regs		446924	0					
ANR	447381	Identifier	op		446924	0					
ANR	447382	Identifier	regs		446924	1					
ANR	447383	Identifier	reg_index		446924	1					
ANR	447384	Identifier	reg		446924	1					
ANR	447385	ExpressionStatement	op -> scale [ reg_index ] = temp	4722:7:118112:118139	446924	1	True				
ANR	447386	AssignmentExpression	op -> scale [ reg_index ] = temp		446924	0		=			
ANR	447387	ArrayIndexing	op -> scale [ reg_index ]		446924	0					
ANR	447388	PtrMemberAccess	op -> scale		446924	0					
ANR	447389	Identifier	op		446924	0					
ANR	447390	Identifier	scale		446924	1					
ANR	447391	Identifier	reg_index		446924	1					
ANR	447392	Identifier	temp		446924	1					
ANR	447393	ExpressionStatement	++ reg_index	4724:6:118155:118166	446924	1	True				
ANR	447394	UnaryExpression	++ reg_index		446924	0					
ANR	447395	IncDec	++		446924	0					
ANR	447396	Identifier	reg_index		446924	1					
ANR	447397	ElseStatement	else		446924	0					
ANR	447398	CompoundStatement		79:12:2251:2251	446924	0					
ANR	447399	ExpressionStatement	op -> offset += temp	4726:6:118188:118206	446924	0	True				
ANR	447400	AssignmentExpression	op -> offset += temp		446924	0		+=			
ANR	447401	PtrMemberAccess	op -> offset		446924	0					
ANR	447402	Identifier	op		446924	0					
ANR	447403	Identifier	offset		446924	1					
ANR	447404	Identifier	temp		446924	1					
ANR	447405	IfStatement	if ( reg_index < 2 )		446924	1					
ANR	447406	Condition	reg_index < 2	4727:10:118218:118230	446924	0	True				
ANR	447407	RelationalExpression	reg_index < 2		446924	0		<			
ANR	447408	Identifier	reg_index		446924	0					
ANR	447409	PrimaryExpression	2		446924	1					
ANR	447410	CompoundStatement		81:25:2304:2304	446924	1					
ANR	447411	ExpressionStatement	op -> regs [ reg_index ] = X86R_UNDEFINED	4728:7:118242:118278	446924	0	True				
ANR	447412	AssignmentExpression	op -> regs [ reg_index ] = X86R_UNDEFINED		446924	0		=			
ANR	447413	ArrayIndexing	op -> regs [ reg_index ]		446924	0					
ANR	447414	PtrMemberAccess	op -> regs		446924	0					
ANR	447415	Identifier	op		446924	0					
ANR	447416	Identifier	regs		446924	1					
ANR	447417	Identifier	reg_index		446924	1					
ANR	447418	Identifier	X86R_UNDEFINED		446924	1					
ANR	447419	ExpressionStatement	temp = 1	4731:5:118300:118308	446924	1	True				
ANR	447420	AssignmentExpression	temp = 1		446924	0		=			
ANR	447421	Identifier	temp		446924	0					
ANR	447422	PrimaryExpression	1		446924	1					
ANR	447423	ExpressionStatement	reg = X86R_UNDEFINED	4732:5:118315:118335	446924	2	True				
ANR	447424	AssignmentExpression	reg = X86R_UNDEFINED		446924	0		=			
ANR	447425	Identifier	reg		446924	0					
ANR	447426	Identifier	X86R_UNDEFINED		446924	1					
ANR	447427	ElseStatement	else		446924	0					
ANR	447428	IfStatement	if ( str [ pos ] == '*' )		446924	0					
ANR	447429	Condition	str [ pos ] == '*'	4733:15:118352:118366	446924	0	True				
ANR	447430	EqualityExpression	str [ pos ] == '*'		446924	0		==			
ANR	447431	ArrayIndexing	str [ pos ]		446924	0					
ANR	447432	Identifier	str		446924	0					
ANR	447433	Identifier	pos		446924	1					
ANR	447434	PrimaryExpression	'*'		446924	1					
ANR	447435	CompoundStatement		87:32:2440:2440	446924	1					
ANR	447436	ElseStatement	else		446924	0					
ANR	447437	IfStatement	if ( last_type == TT_WORD )		446924	0					
ANR	447438	Condition	last_type == TT_WORD	4740:12:118528:118547	446924	0	True				
ANR	447439	EqualityExpression	last_type == TT_WORD		446924	0		==			
ANR	447440	Identifier	last_type		446924	0					
ANR	447441	Identifier	TT_WORD		446924	1					
ANR	447442	CompoundStatement		95:4:2627:2644	446924	1					
ANR	447443	IdentifierDeclStatement	ut32 reg_type = 0 ;	4741:4:118556:118573	446924	0	True				
ANR	447444	IdentifierDecl	reg_type = 0		446924	0					
ANR	447445	IdentifierDeclType	ut32		446924	0					
ANR	447446	Identifier	reg_type		446924	1					
ANR	447447	AssignmentExpression	reg_type = 0		446924	2		=			
ANR	447448	Identifier	reg_type		446924	0					
ANR	447449	PrimaryExpression	0		446924	1					
ANR	447450	IfStatement	if ( reg != X86R_UNDEFINED )		446924	1					
ANR	447451	Condition	reg != X86R_UNDEFINED	4744:8:118619:118639	446924	0	True				
ANR	447452	EqualityExpression	reg != X86R_UNDEFINED		446924	0		!=			
ANR	447453	Identifier	reg		446924	0					
ANR	447454	Identifier	X86R_UNDEFINED		446924	1					
ANR	447455	CompoundStatement		98:31:2713:2713	446924	1					
ANR	447456	ExpressionStatement	op -> type = 0	4745:5:118649:118661	446924	0	True				
ANR	447457	AssignmentExpression	op -> type = 0		446924	0		=			
ANR	447458	PtrMemberAccess	op -> type		446924	0					
ANR	447459	Identifier	op		446924	0					
ANR	447460	Identifier	type		446924	1					
ANR	447461	PrimaryExpression	0		446924	1					
ANR	447462	ExpressionStatement	nextpos = pos	4749:4:118766:118779	446924	2	True				
ANR	447463	AssignmentExpression	nextpos = pos		446924	0		=			
ANR	447464	Identifier	nextpos		446924	0					
ANR	447465	Identifier	pos		446924	1					
ANR	447466	ExpressionStatement	"reg = parseReg ( a , str , & nextpos , & reg_type )"	4750:4:118785:118829	446924	3	True				
ANR	447467	AssignmentExpression	"reg = parseReg ( a , str , & nextpos , & reg_type )"		446924	0		=			
ANR	447468	Identifier	reg		446924	0					
ANR	447469	CallExpression	"parseReg ( a , str , & nextpos , & reg_type )"		446924	1					
ANR	447470	Callee	parseReg		446924	0					
ANR	447471	Identifier	parseReg		446924	0					
ANR	447472	ArgumentList	a		446924	1					
ANR	447473	Argument	a		446924	0					
ANR	447474	Identifier	a		446924	0					
ANR	447475	Argument	str		446924	1					
ANR	447476	Identifier	str		446924	0					
ANR	447477	Argument	& nextpos		446924	2					
ANR	447478	UnaryOperationExpression	& nextpos		446924	0					
ANR	447479	UnaryOperator	&		446924	0					
ANR	447480	Identifier	nextpos		446924	1					
ANR	447481	Argument	& reg_type		446924	3					
ANR	447482	UnaryOperationExpression	& reg_type		446924	0					
ANR	447483	UnaryOperator	&		446924	0					
ANR	447484	Identifier	reg_type		446924	1					
ANR	447485	IfStatement	if ( first_reg )		446924	4					
ANR	447486	Condition	first_reg	4752:8:118840:118848	446924	0	True				
ANR	447487	Identifier	first_reg		446924	0					
ANR	447488	CompoundStatement		106:19:2922:2922	446924	1					
ANR	447489	ExpressionStatement	op -> extended = false	4753:5:118858:118878	446924	0	True				
ANR	447490	AssignmentExpression	op -> extended = false		446924	0		=			
ANR	447491	PtrMemberAccess	op -> extended		446924	0					
ANR	447492	Identifier	op		446924	0					
ANR	447493	Identifier	extended		446924	1					
ANR	447494	Identifier	false		446924	1					
ANR	447495	IfStatement	if ( reg > 8 )		446924	1					
ANR	447496	Condition	reg > 8	4754:9:118889:118895	446924	0	True				
ANR	447497	RelationalExpression	reg > 8		446924	0		>			
ANR	447498	Identifier	reg		446924	0					
ANR	447499	PrimaryExpression	8		446924	1					
ANR	447500	CompoundStatement		108:18:2969:2969	446924	1					
ANR	447501	ExpressionStatement	op -> extended = true	4755:6:118906:118925	446924	0	True				
ANR	447502	AssignmentExpression	op -> extended = true		446924	0		=			
ANR	447503	PtrMemberAccess	op -> extended		446924	0					
ANR	447504	Identifier	op		446924	0					
ANR	447505	Identifier	extended		446924	1					
ANR	447506	Identifier	true		446924	1					
ANR	447507	ExpressionStatement	op -> reg = reg - 9	4756:6:118933:118950	446924	1	True				
ANR	447508	AssignmentExpression	op -> reg = reg - 9		446924	0		=			
ANR	447509	PtrMemberAccess	op -> reg		446924	0					
ANR	447510	Identifier	op		446924	0					
ANR	447511	Identifier	reg		446924	1					
ANR	447512	AdditiveExpression	reg - 9		446924	1		-			
ANR	447513	Identifier	reg		446924	0					
ANR	447514	PrimaryExpression	9		446924	1					
ANR	447515	ElseStatement	else		446924	0					
ANR	447516	CompoundStatement		111:12:3035:3035	446924	0					
ANR	447517	ExpressionStatement	op -> reg = reg	4758:6:118972:118985	446924	0	True				
ANR	447518	AssignmentExpression	op -> reg = reg		446924	0		=			
ANR	447519	PtrMemberAccess	op -> reg		446924	0					
ANR	447520	Identifier	op		446924	0					
ANR	447521	Identifier	reg		446924	1					
ANR	447522	Identifier	reg		446924	1					
ANR	447523	ExpressionStatement	first_reg = false	4760:5:118999:119016	446924	2	True				
ANR	447524	AssignmentExpression	first_reg = false		446924	0		=			
ANR	447525	Identifier	first_reg		446924	0					
ANR	447526	Identifier	false		446924	1					
ANR	447527	ElseStatement	else		446924	0					
ANR	447528	IfStatement	if ( reg > 8 )		446924	0					
ANR	447529	Condition	reg > 8	4761:15:119033:119039	446924	0	True				
ANR	447530	RelationalExpression	reg > 8		446924	0		>			
ANR	447531	Identifier	reg		446924	0					
ANR	447532	PrimaryExpression	8		446924	1					
ANR	447533	CompoundStatement		115:24:3113:3113	446924	1					
ANR	447534	ExpressionStatement	op -> reg = reg - 9	4762:5:119049:119066	446924	0	True				
ANR	447535	AssignmentExpression	op -> reg = reg - 9		446924	0		=			
ANR	447536	PtrMemberAccess	op -> reg		446924	0					
ANR	447537	Identifier	op		446924	0					
ANR	447538	Identifier	reg		446924	1					
ANR	447539	AdditiveExpression	reg - 9		446924	1		-			
ANR	447540	Identifier	reg		446924	0					
ANR	447541	PrimaryExpression	9		446924	1					
ANR	447542	IfStatement	if ( reg_type & OT_REGTYPE & OT_SEGMENTREG )		446924	5					
ANR	447543	Condition	reg_type & OT_REGTYPE & OT_SEGMENTREG	4764:8:119082:119118	446924	0	True				
ANR	447544	BitAndExpression	reg_type & OT_REGTYPE & OT_SEGMENTREG		446924	0		&			
ANR	447545	Identifier	reg_type		446924	0					
ANR	447546	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		446924	1		&			
ANR	447547	Identifier	OT_REGTYPE		446924	0					
ANR	447548	Identifier	OT_SEGMENTREG		446924	1					
ANR	447549	CompoundStatement		118:47:3192:3192	446924	1					
ANR	447550	ExpressionStatement	op -> reg = reg	4765:5:119128:119141	446924	0	True				
ANR	447551	AssignmentExpression	op -> reg = reg		446924	0		=			
ANR	447552	PtrMemberAccess	op -> reg		446924	0					
ANR	447553	Identifier	op		446924	0					
ANR	447554	Identifier	reg		446924	1					
ANR	447555	Identifier	reg		446924	1					
ANR	447556	ExpressionStatement	op -> type = reg_type	4766:5:119148:119167	446924	1	True				
ANR	447557	AssignmentExpression	op -> type = reg_type		446924	0		=			
ANR	447558	PtrMemberAccess	op -> type		446924	0					
ANR	447559	Identifier	op		446924	0					
ANR	447560	Identifier	type		446924	1					
ANR	447561	Identifier	reg_type		446924	1					
ANR	447562	ExpressionStatement	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"	4767:5:119174:119228	446924	2	True				
ANR	447563	CallExpression	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"		446924	0					
ANR	447564	Callee	parse_segment_offset		446924	0					
ANR	447565	Identifier	parse_segment_offset		446924	0					
ANR	447566	ArgumentList	a		446924	1					
ANR	447567	Argument	a		446924	0					
ANR	447568	Identifier	a		446924	0					
ANR	447569	Argument	str		446924	1					
ANR	447570	Identifier	str		446924	0					
ANR	447571	Argument	& nextpos		446924	2					
ANR	447572	UnaryOperationExpression	& nextpos		446924	0					
ANR	447573	UnaryOperator	&		446924	0					
ANR	447574	Identifier	nextpos		446924	1					
ANR	447575	Argument	op		446924	3					
ANR	447576	Identifier	op		446924	0					
ANR	447577	Argument	reg_index		446924	4					
ANR	447578	Identifier	reg_index		446924	0					
ANR	447579	ReturnStatement	return nextpos ;	4768:5:119235:119249	446924	3	True				
ANR	447580	Identifier	nextpos		446924	0					
ANR	447581	IfStatement	if ( ! explicit_size )		446924	6					
ANR	447582	Condition	! explicit_size	4772:8:119327:119340	446924	0	True				
ANR	447583	UnaryOperationExpression	! explicit_size		446924	0					
ANR	447584	UnaryOperator	!		446924	0					
ANR	447585	Identifier	explicit_size		446924	1					
ANR	447586	CompoundStatement		126:24:3414:3414	446924	1					
ANR	447587	ExpressionStatement	op -> type |= reg_type	4773:5:119350:119370	446924	0	True				
ANR	447588	AssignmentExpression	op -> type |= reg_type		446924	0		|=			
ANR	447589	PtrMemberAccess	op -> type		446924	0					
ANR	447590	Identifier	op		446924	0					
ANR	447591	Identifier	type		446924	1					
ANR	447592	Identifier	reg_type		446924	1					
ANR	447593	ExpressionStatement	op -> reg_size = reg_type	4775:4:119382:119405	446924	7	True				
ANR	447594	AssignmentExpression	op -> reg_size = reg_type		446924	0		=			
ANR	447595	PtrMemberAccess	op -> reg_size		446924	0					
ANR	447596	Identifier	op		446924	0					
ANR	447597	Identifier	reg_size		446924	1					
ANR	447598	Identifier	reg_type		446924	1					
ANR	447599	ExpressionStatement	op -> explicit_size = explicit_size	4776:4:119411:119444	446924	8	True				
ANR	447600	AssignmentExpression	op -> explicit_size = explicit_size		446924	0		=			
ANR	447601	PtrMemberAccess	op -> explicit_size		446924	0					
ANR	447602	Identifier	op		446924	0					
ANR	447603	Identifier	explicit_size		446924	1					
ANR	447604	Identifier	explicit_size		446924	1					
ANR	447605	IfStatement	if ( ! ( reg_type & OT_GPREG ) )		446924	9					
ANR	447606	Condition	! ( reg_type & OT_GPREG )	4779:8:119508:119529	446924	0	True				
ANR	447607	UnaryOperationExpression	! ( reg_type & OT_GPREG )		446924	0					
ANR	447608	UnaryOperator	!		446924	0					
ANR	447609	BitAndExpression	reg_type & OT_GPREG		446924	1		&			
ANR	447610	Identifier	reg_type		446924	0					
ANR	447611	Identifier	OT_GPREG		446924	1					
ANR	447612	CompoundStatement		133:32:3603:3603	446924	1					
ANR	447613	ExpressionStatement	op -> type = 0	4780:5:119539:119551	446924	0	True				
ANR	447614	AssignmentExpression	op -> type = 0		446924	0		=			
ANR	447615	PtrMemberAccess	op -> type		446924	0					
ANR	447616	Identifier	op		446924	0					
ANR	447617	Identifier	type		446924	1					
ANR	447618	PrimaryExpression	0		446924	1					
ANR	447619	ElseStatement	else		446924	0					
ANR	447620	CompoundStatement		160:4:4392:4419	446924	0					
ANR	447621	IdentifierDeclStatement	"char * p = strchr ( str , '+' ) ;"	4784:4:119605:119632	446924	0	True				
ANR	447622	IdentifierDecl	"* p = strchr ( str , '+' )"		446924	0					
ANR	447623	IdentifierDeclType	char *		446924	0					
ANR	447624	Identifier	p		446924	1					
ANR	447625	AssignmentExpression	"* p = strchr ( str , '+' )"		446924	2		=			
ANR	447626	Identifier	p		446924	0					
ANR	447627	CallExpression	"strchr ( str , '+' )"		446924	1					
ANR	447628	Callee	strchr		446924	0					
ANR	447629	Identifier	strchr		446924	0					
ANR	447630	ArgumentList	str		446924	1					
ANR	447631	Argument	str		446924	0					
ANR	447632	Identifier	str		446924	0					
ANR	447633	Argument	'+'		446924	1					
ANR	447634	PrimaryExpression	'+'		446924	0					
ANR	447635	ExpressionStatement	op -> offset_sign = 1	4785:4:119638:119657	446924	1	True				
ANR	447636	AssignmentExpression	op -> offset_sign = 1		446924	0		=			
ANR	447637	PtrMemberAccess	op -> offset_sign		446924	0					
ANR	447638	Identifier	op		446924	0					
ANR	447639	Identifier	offset_sign		446924	1					
ANR	447640	PrimaryExpression	1		446924	1					
ANR	447641	IfStatement	if ( ! p )		446924	2					
ANR	447642	Condition	! p	4786:8:119667:119668	446924	0	True				
ANR	447643	UnaryOperationExpression	! p		446924	0					
ANR	447644	UnaryOperator	!		446924	0					
ANR	447645	Identifier	p		446924	1					
ANR	447646	CompoundStatement		140:12:3742:3742	446924	1					
ANR	447647	ExpressionStatement	"p = strchr ( str , '-' )"	4787:5:119678:119699	446924	0	True				
ANR	447648	AssignmentExpression	"p = strchr ( str , '-' )"		446924	0		=			
ANR	447649	Identifier	p		446924	0					
ANR	447650	CallExpression	"strchr ( str , '-' )"		446924	1					
ANR	447651	Callee	strchr		446924	0					
ANR	447652	Identifier	strchr		446924	0					
ANR	447653	ArgumentList	str		446924	1					
ANR	447654	Argument	str		446924	0					
ANR	447655	Identifier	str		446924	0					
ANR	447656	Argument	'-'		446924	1					
ANR	447657	PrimaryExpression	'-'		446924	0					
ANR	447658	IfStatement	if ( p )		446924	1					
ANR	447659	Condition	p	4788:9:119710:119710	446924	0	True				
ANR	447660	Identifier	p		446924	0					
ANR	447661	CompoundStatement		142:12:3784:3784	446924	1					
ANR	447662	ExpressionStatement	op -> offset_sign = - 1	4789:6:119721:119741	446924	0	True				
ANR	447663	AssignmentExpression	op -> offset_sign = - 1		446924	0		=			
ANR	447664	PtrMemberAccess	op -> offset_sign		446924	0					
ANR	447665	Identifier	op		446924	0					
ANR	447666	Identifier	offset_sign		446924	1					
ANR	447667	UnaryOperationExpression	- 1		446924	1					
ANR	447668	UnaryOperator	-		446924	0					
ANR	447669	PrimaryExpression	1		446924	1					
ANR	447670	IdentifierDeclStatement	"char * plus = strchr ( str , '+' ) ;"	4793:4:119820:119851	446924	3	True				
ANR	447671	IdentifierDecl	"* plus = strchr ( str , '+' )"		446924	0					
ANR	447672	IdentifierDeclType	char *		446924	0					
ANR	447673	Identifier	plus		446924	1					
ANR	447674	AssignmentExpression	"* plus = strchr ( str , '+' )"		446924	2		=			
ANR	447675	Identifier	plus		446924	0					
ANR	447676	CallExpression	"strchr ( str , '+' )"		446924	1					
ANR	447677	Callee	strchr		446924	0					
ANR	447678	Identifier	strchr		446924	0					
ANR	447679	ArgumentList	str		446924	1					
ANR	447680	Argument	str		446924	0					
ANR	447681	Identifier	str		446924	0					
ANR	447682	Argument	'+'		446924	1					
ANR	447683	PrimaryExpression	'+'		446924	0					
ANR	447684	IdentifierDeclStatement	"char * minus = strchr ( str , '-' ) ;"	4794:4:119857:119889	446924	4	True				
ANR	447685	IdentifierDecl	"* minus = strchr ( str , '-' )"		446924	0					
ANR	447686	IdentifierDeclType	char *		446924	0					
ANR	447687	Identifier	minus		446924	1					
ANR	447688	AssignmentExpression	"* minus = strchr ( str , '-' )"		446924	2		=			
ANR	447689	Identifier	minus		446924	0					
ANR	447690	CallExpression	"strchr ( str , '-' )"		446924	1					
ANR	447691	Callee	strchr		446924	0					
ANR	447692	Identifier	strchr		446924	0					
ANR	447693	ArgumentList	str		446924	1					
ANR	447694	Argument	str		446924	0					
ANR	447695	Identifier	str		446924	0					
ANR	447696	Argument	'-'		446924	1					
ANR	447697	PrimaryExpression	'-'		446924	0					
ANR	447698	IdentifierDeclStatement	"char * closeB = strchr ( str , ']' ) ;"	4795:4:119895:119928	446924	5	True				
ANR	447699	IdentifierDecl	"* closeB = strchr ( str , ']' )"		446924	0					
ANR	447700	IdentifierDeclType	char *		446924	0					
ANR	447701	Identifier	closeB		446924	1					
ANR	447702	AssignmentExpression	"* closeB = strchr ( str , ']' )"		446924	2		=			
ANR	447703	Identifier	closeB		446924	0					
ANR	447704	CallExpression	"strchr ( str , ']' )"		446924	1					
ANR	447705	Callee	strchr		446924	0					
ANR	447706	Identifier	strchr		446924	0					
ANR	447707	ArgumentList	str		446924	1					
ANR	447708	Argument	str		446924	0					
ANR	447709	Identifier	str		446924	0					
ANR	447710	Argument	']'		446924	1					
ANR	447711	PrimaryExpression	']'		446924	0					
ANR	447712	IfStatement	if ( plus && minus && plus < closeB && minus < closeB )		446924	6					
ANR	447713	Condition	plus && minus && plus < closeB && minus < closeB	4796:8:119938:119985	446924	0	True				
ANR	447714	AndExpression	plus && minus && plus < closeB && minus < closeB		446924	0		&&			
ANR	447715	Identifier	plus		446924	0					
ANR	447716	AndExpression	minus && plus < closeB && minus < closeB		446924	1		&&			
ANR	447717	Identifier	minus		446924	0					
ANR	447718	AndExpression	plus < closeB && minus < closeB		446924	1		&&			
ANR	447719	RelationalExpression	plus < closeB		446924	0		<			
ANR	447720	Identifier	plus		446924	0					
ANR	447721	Identifier	closeB		446924	1					
ANR	447722	RelationalExpression	minus < closeB		446924	1		<			
ANR	447723	Identifier	minus		446924	0					
ANR	447724	Identifier	closeB		446924	1					
ANR	447725	CompoundStatement		150:58:4059:4059	446924	1					
ANR	447726	ExpressionStatement	op -> offset_sign = - 1	4797:5:119995:120015	446924	0	True				
ANR	447727	AssignmentExpression	op -> offset_sign = - 1		446924	0		=			
ANR	447728	PtrMemberAccess	op -> offset_sign		446924	0					
ANR	447729	Identifier	op		446924	0					
ANR	447730	Identifier	offset_sign		446924	1					
ANR	447731	UnaryOperationExpression	- 1		446924	1					
ANR	447732	UnaryOperator	-		446924	0					
ANR	447733	PrimaryExpression	1		446924	1					
ANR	447734	IdentifierDeclStatement	char * tmp ;	4802:4:120210:120219	446924	7	True				
ANR	447735	IdentifierDecl	* tmp		446924	0					
ANR	447736	IdentifierDeclType	char *		446924	0					
ANR	447737	Identifier	tmp		446924	1					
ANR	447738	ExpressionStatement	tmp = malloc ( strlen ( str + pos ) + 1 )	4803:4:120225:120262	446924	8	True				
ANR	447739	AssignmentExpression	tmp = malloc ( strlen ( str + pos ) + 1 )		446924	0		=			
ANR	447740	Identifier	tmp		446924	0					
ANR	447741	CallExpression	malloc ( strlen ( str + pos ) + 1 )		446924	1					
ANR	447742	Callee	malloc		446924	0					
ANR	447743	Identifier	malloc		446924	0					
ANR	447744	ArgumentList	strlen ( str + pos ) + 1		446924	1					
ANR	447745	Argument	strlen ( str + pos ) + 1		446924	0					
ANR	447746	AdditiveExpression	strlen ( str + pos ) + 1		446924	0		+			
ANR	447747	CallExpression	strlen ( str + pos )		446924	0					
ANR	447748	Callee	strlen		446924	0					
ANR	447749	Identifier	strlen		446924	0					
ANR	447750	ArgumentList	str + pos		446924	1					
ANR	447751	Argument	str + pos		446924	0					
ANR	447752	AdditiveExpression	str + pos		446924	0		+			
ANR	447753	Identifier	str		446924	0					
ANR	447754	Identifier	pos		446924	1					
ANR	447755	PrimaryExpression	1		446924	1					
ANR	447756	ExpressionStatement	"strcpy ( tmp , str + pos )"	4804:4:120268:120291	446924	9	True				
ANR	447757	CallExpression	"strcpy ( tmp , str + pos )"		446924	0					
ANR	447758	Callee	strcpy		446924	0					
ANR	447759	Identifier	strcpy		446924	0					
ANR	447760	ArgumentList	tmp		446924	1					
ANR	447761	Argument	tmp		446924	0					
ANR	447762	Identifier	tmp		446924	0					
ANR	447763	Argument	str + pos		446924	1					
ANR	447764	AdditiveExpression	str + pos		446924	0		+			
ANR	447765	Identifier	str		446924	0					
ANR	447766	Identifier	pos		446924	1					
ANR	447767	ExpressionStatement	"strtok ( tmp , ""+-"" )"	4805:4:120297:120315	446924	10	True				
ANR	447768	CallExpression	"strtok ( tmp , ""+-"" )"		446924	0					
ANR	447769	Callee	strtok		446924	0					
ANR	447770	Identifier	strtok		446924	0					
ANR	447771	ArgumentList	tmp		446924	1					
ANR	447772	Argument	tmp		446924	0					
ANR	447773	Identifier	tmp		446924	0					
ANR	447774	Argument	"""+-"""		446924	1					
ANR	447775	PrimaryExpression	"""+-"""		446924	0					
ANR	447776	IdentifierDeclStatement	"st64 read = getnum ( a , tmp ) ;"	4806:4:120321:120348	446924	11	True				
ANR	447777	IdentifierDecl	"read = getnum ( a , tmp )"		446924	0					
ANR	447778	IdentifierDeclType	st64		446924	0					
ANR	447779	Identifier	read		446924	1					
ANR	447780	AssignmentExpression	"read = getnum ( a , tmp )"		446924	2		=			
ANR	447781	Identifier	read		446924	0					
ANR	447782	CallExpression	"getnum ( a , tmp )"		446924	1					
ANR	447783	Callee	getnum		446924	0					
ANR	447784	Identifier	getnum		446924	0					
ANR	447785	ArgumentList	a		446924	1					
ANR	447786	Argument	a		446924	0					
ANR	447787	Identifier	a		446924	0					
ANR	447788	Argument	tmp		446924	1					
ANR	447789	Identifier	tmp		446924	0					
ANR	447790	ExpressionStatement	free ( tmp )	4807:4:120354:120364	446924	12	True				
ANR	447791	CallExpression	free ( tmp )		446924	0					
ANR	447792	Callee	free		446924	0					
ANR	447793	Identifier	free		446924	0					
ANR	447794	ArgumentList	tmp		446924	1					
ANR	447795	Argument	tmp		446924	0					
ANR	447796	Identifier	tmp		446924	0					
ANR	447797	ExpressionStatement	temp *= read	4808:4:120370:120382	446924	13	True				
ANR	447798	AssignmentExpression	temp *= read		446924	0		*=			
ANR	447799	Identifier	temp		446924	0					
ANR	447800	Identifier	read		446924	1					
ANR	447801	ElseStatement	else		446924	0					
ANR	447802	IfStatement	if ( last_type == TT_WORD )		446924	0					
ANR	447803	Condition	last_type == TT_WORD	4811:12:120405:120424	446924	0	True				
ANR	447804	EqualityExpression	last_type == TT_WORD		446924	0		==			
ANR	447805	Identifier	last_type		446924	0					
ANR	447806	Identifier	TT_WORD		446924	1					
ANR	447807	CompoundStatement		167:2:4533:4548	446924	1					
ANR	447808	ExpressionStatement	nextpos = pos	4812:2:120445:120458	446924	0	True				
ANR	447809	AssignmentExpression	nextpos = pos		446924	0		=			
ANR	447810	Identifier	nextpos		446924	0					
ANR	447811	Identifier	pos		446924	1					
ANR	447812	IdentifierDeclStatement	RFlagItem * flag ;	4813:2:120462:120477	446924	1	True				
ANR	447813	IdentifierDecl	* flag		446924	0					
ANR	447814	IdentifierDeclType	RFlagItem *		446924	0					
ANR	447815	Identifier	flag		446924	1					
ANR	447816	IfStatement	if ( isrepop )		446924	2					
ANR	447817	Condition	isrepop	4815:6:120486:120492	446924	0	True				
ANR	447818	Identifier	isrepop		446924	0					
ANR	447819	CompoundStatement		169:15:4566:4566	446924	1					
ANR	447820	ExpressionStatement	op -> is_good_flag = false	4816:3:120500:120524	446924	0	True				
ANR	447821	AssignmentExpression	op -> is_good_flag = false		446924	0		=			
ANR	447822	PtrMemberAccess	op -> is_good_flag		446924	0					
ANR	447823	Identifier	op		446924	0					
ANR	447824	Identifier	is_good_flag		446924	1					
ANR	447825	Identifier	false		446924	1					
ANR	447826	ExpressionStatement	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"	4817:3:120529:120576	446924	1	True				
ANR	447827	CallExpression	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"		446924	0					
ANR	447828	Callee	strncpy		446924	0					
ANR	447829	Identifier	strncpy		446924	0					
ANR	447830	ArgumentList	op -> rep_op		446924	1					
ANR	447831	Argument	op -> rep_op		446924	0					
ANR	447832	PtrMemberAccess	op -> rep_op		446924	0					
ANR	447833	Identifier	op		446924	0					
ANR	447834	Identifier	rep_op		446924	1					
ANR	447835	Argument	str		446924	1					
ANR	447836	Identifier	str		446924	0					
ANR	447837	Argument	MAX_REPOP_LENGTH - 1		446924	2					
ANR	447838	AdditiveExpression	MAX_REPOP_LENGTH - 1		446924	0		-			
ANR	447839	Identifier	MAX_REPOP_LENGTH		446924	0					
ANR	447840	PrimaryExpression	1		446924	1					
ANR	447841	ExpressionStatement	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'	4818:3:120581:120620	446924	2	True				
ANR	447842	AssignmentExpression	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'		446924	0		=			
ANR	447843	ArrayIndexing	op -> rep_op [ MAX_REPOP_LENGTH - 1 ]		446924	0					
ANR	447844	PtrMemberAccess	op -> rep_op		446924	0					
ANR	447845	Identifier	op		446924	0					
ANR	447846	Identifier	rep_op		446924	1					
ANR	447847	AdditiveExpression	MAX_REPOP_LENGTH - 1		446924	1		-			
ANR	447848	Identifier	MAX_REPOP_LENGTH		446924	0					
ANR	447849	PrimaryExpression	1		446924	1					
ANR	447850	PrimaryExpression	'\\0'		446924	1					
ANR	447851	ReturnStatement	return nextpos ;	4819:3:120625:120639	446924	3	True				
ANR	447852	Identifier	nextpos		446924	0					
ANR	447853	ExpressionStatement	"op -> reg = parseReg ( a , str , & nextpos , & op -> type )"	4822:2:120648:120696	446924	3	True				
ANR	447854	AssignmentExpression	"op -> reg = parseReg ( a , str , & nextpos , & op -> type )"		446924	0		=			
ANR	447855	PtrMemberAccess	op -> reg		446924	0					
ANR	447856	Identifier	op		446924	0					
ANR	447857	Identifier	reg		446924	1					
ANR	447858	CallExpression	"parseReg ( a , str , & nextpos , & op -> type )"		446924	1					
ANR	447859	Callee	parseReg		446924	0					
ANR	447860	Identifier	parseReg		446924	0					
ANR	447861	ArgumentList	a		446924	1					
ANR	447862	Argument	a		446924	0					
ANR	447863	Identifier	a		446924	0					
ANR	447864	Argument	str		446924	1					
ANR	447865	Identifier	str		446924	0					
ANR	447866	Argument	& nextpos		446924	2					
ANR	447867	UnaryOperationExpression	& nextpos		446924	0					
ANR	447868	UnaryOperator	&		446924	0					
ANR	447869	Identifier	nextpos		446924	1					
ANR	447870	Argument	& op -> type		446924	3					
ANR	447871	UnaryOperationExpression	& op -> type		446924	0					
ANR	447872	UnaryOperator	&		446924	0					
ANR	447873	PtrMemberAccess	op -> type		446924	1					
ANR	447874	Identifier	op		446924	0					
ANR	447875	Identifier	type		446924	1					
ANR	447876	ExpressionStatement	op -> extended = false	4824:2:120701:120721	446924	4	True				
ANR	447877	AssignmentExpression	op -> extended = false		446924	0		=			
ANR	447878	PtrMemberAccess	op -> extended		446924	0					
ANR	447879	Identifier	op		446924	0					
ANR	447880	Identifier	extended		446924	1					
ANR	447881	Identifier	false		446924	1					
ANR	447882	IfStatement	if ( op -> reg > 8 )		446924	5					
ANR	447883	Condition	op -> reg > 8	4825:6:120729:120739	446924	0	True				
ANR	447884	RelationalExpression	op -> reg > 8		446924	0		>			
ANR	447885	PtrMemberAccess	op -> reg		446924	0					
ANR	447886	Identifier	op		446924	0					
ANR	447887	Identifier	reg		446924	1					
ANR	447888	PrimaryExpression	8		446924	1					
ANR	447889	CompoundStatement		179:19:4813:4813	446924	1					
ANR	447890	ExpressionStatement	op -> extended = true	4826:3:120747:120766	446924	0	True				
ANR	447891	AssignmentExpression	op -> extended = true		446924	0		=			
ANR	447892	PtrMemberAccess	op -> extended		446924	0					
ANR	447893	Identifier	op		446924	0					
ANR	447894	Identifier	extended		446924	1					
ANR	447895	Identifier	true		446924	1					
ANR	447896	ExpressionStatement	op -> reg -= 9	4827:3:120771:120783	446924	1	True				
ANR	447897	AssignmentExpression	op -> reg -= 9		446924	0		-=			
ANR	447898	PtrMemberAccess	op -> reg		446924	0					
ANR	447899	Identifier	op		446924	0					
ANR	447900	Identifier	reg		446924	1					
ANR	447901	PrimaryExpression	9		446924	1					
ANR	447902	IfStatement	if ( op -> type & OT_REGTYPE & OT_SEGMENTREG )		446924	6					
ANR	447903	Condition	op -> type & OT_REGTYPE & OT_SEGMENTREG	4829:6:120795:120831	446924	0	True				
ANR	447904	BitAndExpression	op -> type & OT_REGTYPE & OT_SEGMENTREG		446924	0		&			
ANR	447905	PtrMemberAccess	op -> type		446924	0					
ANR	447906	Identifier	op		446924	0					
ANR	447907	Identifier	type		446924	1					
ANR	447908	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		446924	1		&			
ANR	447909	Identifier	OT_REGTYPE		446924	0					
ANR	447910	Identifier	OT_SEGMENTREG		446924	1					
ANR	447911	CompoundStatement		183:45:4905:4905	446924	1					
ANR	447912	ExpressionStatement	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"	4830:3:120839:120893	446924	0	True				
ANR	447913	CallExpression	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"		446924	0					
ANR	447914	Callee	parse_segment_offset		446924	0					
ANR	447915	Identifier	parse_segment_offset		446924	0					
ANR	447916	ArgumentList	a		446924	1					
ANR	447917	Argument	a		446924	0					
ANR	447918	Identifier	a		446924	0					
ANR	447919	Argument	str		446924	1					
ANR	447920	Identifier	str		446924	0					
ANR	447921	Argument	& nextpos		446924	2					
ANR	447922	UnaryOperationExpression	& nextpos		446924	0					
ANR	447923	UnaryOperator	&		446924	0					
ANR	447924	Identifier	nextpos		446924	1					
ANR	447925	Argument	op		446924	3					
ANR	447926	Identifier	op		446924	0					
ANR	447927	Argument	reg_index		446924	4					
ANR	447928	Identifier	reg_index		446924	0					
ANR	447929	ReturnStatement	return nextpos ;	4831:3:120898:120912	446924	1	True				
ANR	447930	Identifier	nextpos		446924	0					
ANR	447931	IfStatement	if ( op -> reg == X86R_UNDEFINED )		446924	7					
ANR	447932	Condition	op -> reg == X86R_UNDEFINED	4833:6:120924:120948	446924	0	True				
ANR	447933	EqualityExpression	op -> reg == X86R_UNDEFINED		446924	0		==			
ANR	447934	PtrMemberAccess	op -> reg		446924	0					
ANR	447935	Identifier	op		446924	0					
ANR	447936	Identifier	reg		446924	1					
ANR	447937	Identifier	X86R_UNDEFINED		446924	1					
ANR	447938	CompoundStatement		198:3:5298:5325	446924	1					
ANR	447939	ExpressionStatement	op -> is_good_flag = false	4834:3:120956:120980	446924	0	True				
ANR	447940	AssignmentExpression	op -> is_good_flag = false		446924	0		=			
ANR	447941	PtrMemberAccess	op -> is_good_flag		446924	0					
ANR	447942	Identifier	op		446924	0					
ANR	447943	Identifier	is_good_flag		446924	1					
ANR	447944	Identifier	false		446924	1					
ANR	447945	IfStatement	if ( a -> num && a -> num -> value == 0 )		446924	1					
ANR	447946	Condition	a -> num && a -> num -> value == 0	4835:7:120989:121016	446924	0	True				
ANR	447947	AndExpression	a -> num && a -> num -> value == 0		446924	0		&&			
ANR	447948	PtrMemberAccess	a -> num		446924	0					
ANR	447949	Identifier	a		446924	0					
ANR	447950	Identifier	num		446924	1					
ANR	447951	EqualityExpression	a -> num -> value == 0		446924	1		==			
ANR	447952	PtrMemberAccess	a -> num -> value		446924	0					
ANR	447953	PtrMemberAccess	a -> num		446924	0					
ANR	447954	Identifier	a		446924	0					
ANR	447955	Identifier	num		446924	1					
ANR	447956	Identifier	value		446924	1					
ANR	447957	PrimaryExpression	0		446924	1					
ANR	447958	CompoundStatement		189:37:5090:5090	446924	1					
ANR	447959	ReturnStatement	return nextpos ;	4836:4:121025:121039	446924	0	True				
ANR	447960	Identifier	nextpos		446924	0					
ANR	447961	ExpressionStatement	op -> type = OT_CONSTANT	4838:3:121049:121071	446924	2	True				
ANR	447962	AssignmentExpression	op -> type = OT_CONSTANT		446924	0		=			
ANR	447963	PtrMemberAccess	op -> type		446924	0					
ANR	447964	Identifier	op		446924	0					
ANR	447965	Identifier	type		446924	1					
ANR	447966	Identifier	OT_CONSTANT		446924	1					
ANR	447967	IdentifierDeclStatement	RCore * core = a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL ;	4839:3:121076:121130	446924	3	True				
ANR	447968	IdentifierDecl	* core = a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL		446924	0					
ANR	447969	IdentifierDeclType	RCore *		446924	0					
ANR	447970	Identifier	core		446924	1					
ANR	447971	AssignmentExpression	* core = a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL		446924	2		=			
ANR	447972	Identifier	core		446924	0					
ANR	447973	ConditionalExpression	a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL		446924	1					
ANR	447974	Condition	a -> num		446924	0					
ANR	447975	PtrMemberAccess	a -> num		446924	0					
ANR	447976	Identifier	a		446924	0					
ANR	447977	Identifier	num		446924	1					
ANR	447978	CastExpression	( RCore * ) ( a -> num -> userptr )		446924	1					
ANR	447979	CastTarget	RCore *		446924	0					
ANR	447980	PtrMemberAccess	a -> num -> userptr		446924	1					
ANR	447981	PtrMemberAccess	a -> num		446924	0					
ANR	447982	Identifier	a		446924	0					
ANR	447983	Identifier	num		446924	1					
ANR	447984	Identifier	userptr		446924	1					
ANR	447985	Identifier	NULL		446924	2					
ANR	447986	IfStatement	"if ( core && ( flag = r_flag_get ( core -> flags , str ) ) )"		446924	4					
ANR	447987	Condition	"core && ( flag = r_flag_get ( core -> flags , str ) )"	4840:7:121139:121184	446924	0	True				
ANR	447988	AndExpression	"core && ( flag = r_flag_get ( core -> flags , str ) )"		446924	0		&&			
ANR	447989	Identifier	core		446924	0					
ANR	447990	AssignmentExpression	"flag = r_flag_get ( core -> flags , str )"		446924	1		=			
ANR	447991	Identifier	flag		446924	0					
ANR	447992	CallExpression	"r_flag_get ( core -> flags , str )"		446924	1					
ANR	447993	Callee	r_flag_get		446924	0					
ANR	447994	Identifier	r_flag_get		446924	0					
ANR	447995	ArgumentList	core -> flags		446924	1					
ANR	447996	Argument	core -> flags		446924	0					
ANR	447997	PtrMemberAccess	core -> flags		446924	0					
ANR	447998	Identifier	core		446924	0					
ANR	447999	Identifier	flags		446924	1					
ANR	448000	Argument	str		446924	1					
ANR	448001	Identifier	str		446924	0					
ANR	448002	CompoundStatement		194:55:5258:5258	446924	1					
ANR	448003	ExpressionStatement	op -> is_good_flag = true	4841:4:121193:121216	446924	0	True				
ANR	448004	AssignmentExpression	op -> is_good_flag = true		446924	0		=			
ANR	448005	PtrMemberAccess	op -> is_good_flag		446924	0					
ANR	448006	Identifier	op		446924	0					
ANR	448007	Identifier	is_good_flag		446924	1					
ANR	448008	Identifier	true		446924	1					
ANR	448009	IdentifierDeclStatement	"char * p = strchr ( str , '-' ) ;"	4844:3:121227:121254	446924	5	True				
ANR	448010	IdentifierDecl	"* p = strchr ( str , '-' )"		446924	0					
ANR	448011	IdentifierDeclType	char *		446924	0					
ANR	448012	Identifier	p		446924	1					
ANR	448013	AssignmentExpression	"* p = strchr ( str , '-' )"		446924	2		=			
ANR	448014	Identifier	p		446924	0					
ANR	448015	CallExpression	"strchr ( str , '-' )"		446924	1					
ANR	448016	Callee	strchr		446924	0					
ANR	448017	Identifier	strchr		446924	0					
ANR	448018	ArgumentList	str		446924	1					
ANR	448019	Argument	str		446924	0					
ANR	448020	Identifier	str		446924	0					
ANR	448021	Argument	'-'		446924	1					
ANR	448022	PrimaryExpression	'-'		446924	0					
ANR	448023	IfStatement	if ( p )		446924	6					
ANR	448024	Condition	p	4845:7:121263:121263	446924	0	True				
ANR	448025	Identifier	p		446924	0					
ANR	448026	CompoundStatement		199:10:5337:5337	446924	1					
ANR	448027	ExpressionStatement	op -> sign = - 1	4846:4:121272:121285	446924	0	True				
ANR	448028	AssignmentExpression	op -> sign = - 1		446924	0		=			
ANR	448029	PtrMemberAccess	op -> sign		446924	0					
ANR	448030	Identifier	op		446924	0					
ANR	448031	Identifier	sign		446924	1					
ANR	448032	UnaryOperationExpression	- 1		446924	1					
ANR	448033	UnaryOperator	-		446924	0					
ANR	448034	PrimaryExpression	1		446924	1					
ANR	448035	ExpressionStatement	str = ++ p	4847:4:121291:121300	446924	1	True				
ANR	448036	AssignmentExpression	str = ++ p		446924	0		=			
ANR	448037	Identifier	str		446924	0					
ANR	448038	UnaryExpression	++ p		446924	1					
ANR	448039	IncDec	++		446924	0					
ANR	448040	Identifier	p		446924	1					
ANR	448041	ExpressionStatement	"op -> immediate = getnum ( a , str )"	4849:3:121310:121341	446924	7	True				
ANR	448042	AssignmentExpression	"op -> immediate = getnum ( a , str )"		446924	0		=			
ANR	448043	PtrMemberAccess	op -> immediate		446924	0					
ANR	448044	Identifier	op		446924	0					
ANR	448045	Identifier	immediate		446924	1					
ANR	448046	CallExpression	"getnum ( a , str )"		446924	1					
ANR	448047	Callee	getnum		446924	0					
ANR	448048	Identifier	getnum		446924	0					
ANR	448049	ArgumentList	a		446924	1					
ANR	448050	Argument	a		446924	0					
ANR	448051	Identifier	a		446924	0					
ANR	448052	Argument	str		446924	1					
ANR	448053	Identifier	str		446924	0					
ANR	448054	ElseStatement	else		446924	0					
ANR	448055	IfStatement	if ( op -> reg < X86R_UNDEFINED )		446924	0					
ANR	448056	Condition	op -> reg < X86R_UNDEFINED	4850:13:121356:121379	446924	0	True				
ANR	448057	RelationalExpression	op -> reg < X86R_UNDEFINED		446924	0		<			
ANR	448058	PtrMemberAccess	op -> reg		446924	0					
ANR	448059	Identifier	op		446924	0					
ANR	448060	Identifier	reg		446924	1					
ANR	448061	Identifier	X86R_UNDEFINED		446924	1					
ANR	448062	CompoundStatement		204:39:5453:5453	446924	1					
ANR	448063	ExpressionStatement	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"	4851:3:121387:121434	446924	0	True				
ANR	448064	CallExpression	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"		446924	0					
ANR	448065	Callee	strncpy		446924	0					
ANR	448066	Identifier	strncpy		446924	0					
ANR	448067	ArgumentList	op -> rep_op		446924	1					
ANR	448068	Argument	op -> rep_op		446924	0					
ANR	448069	PtrMemberAccess	op -> rep_op		446924	0					
ANR	448070	Identifier	op		446924	0					
ANR	448071	Identifier	rep_op		446924	1					
ANR	448072	Argument	str		446924	1					
ANR	448073	Identifier	str		446924	0					
ANR	448074	Argument	MAX_REPOP_LENGTH - 1		446924	2					
ANR	448075	AdditiveExpression	MAX_REPOP_LENGTH - 1		446924	0		-			
ANR	448076	Identifier	MAX_REPOP_LENGTH		446924	0					
ANR	448077	PrimaryExpression	1		446924	1					
ANR	448078	ExpressionStatement	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'	4852:3:121439:121478	446924	1	True				
ANR	448079	AssignmentExpression	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'		446924	0		=			
ANR	448080	ArrayIndexing	op -> rep_op [ MAX_REPOP_LENGTH - 1 ]		446924	0					
ANR	448081	PtrMemberAccess	op -> rep_op		446924	0					
ANR	448082	Identifier	op		446924	0					
ANR	448083	Identifier	rep_op		446924	1					
ANR	448084	AdditiveExpression	MAX_REPOP_LENGTH - 1		446924	1		-			
ANR	448085	Identifier	MAX_REPOP_LENGTH		446924	0					
ANR	448086	PrimaryExpression	1		446924	1					
ANR	448087	PrimaryExpression	'\\0'		446924	1					
ANR	448088	ElseStatement	else		446924	0					
ANR	448089	CompoundStatement		212:2:5711:5738	446924	0					
ANR	448090	ExpressionStatement	op -> type = OT_CONSTANT	4856:2:121598:121620	446924	0	True				
ANR	448091	AssignmentExpression	op -> type = OT_CONSTANT		446924	0		=			
ANR	448092	PtrMemberAccess	op -> type		446924	0					
ANR	448093	Identifier	op		446924	0					
ANR	448094	Identifier	type		446924	1					
ANR	448095	Identifier	OT_CONSTANT		446924	1					
ANR	448096	ExpressionStatement	op -> sign = 1	4857:2:121624:121636	446924	1	True				
ANR	448097	AssignmentExpression	op -> sign = 1		446924	0		=			
ANR	448098	PtrMemberAccess	op -> sign		446924	0					
ANR	448099	Identifier	op		446924	0					
ANR	448100	Identifier	sign		446924	1					
ANR	448101	PrimaryExpression	1		446924	1					
ANR	448102	IdentifierDeclStatement	"char * p = strchr ( str , '-' ) ;"	4858:2:121640:121667	446924	2	True				
ANR	448103	IdentifierDecl	"* p = strchr ( str , '-' )"		446924	0					
ANR	448104	IdentifierDeclType	char *		446924	0					
ANR	448105	Identifier	p		446924	1					
ANR	448106	AssignmentExpression	"* p = strchr ( str , '-' )"		446924	2		=			
ANR	448107	Identifier	p		446924	0					
ANR	448108	CallExpression	"strchr ( str , '-' )"		446924	1					
ANR	448109	Callee	strchr		446924	0					
ANR	448110	Identifier	strchr		446924	0					
ANR	448111	ArgumentList	str		446924	1					
ANR	448112	Argument	str		446924	0					
ANR	448113	Identifier	str		446924	0					
ANR	448114	Argument	'-'		446924	1					
ANR	448115	PrimaryExpression	'-'		446924	0					
ANR	448116	IfStatement	if ( p )		446924	3					
ANR	448117	Condition	p	4859:6:121675:121675	446924	0	True				
ANR	448118	Identifier	p		446924	0					
ANR	448119	CompoundStatement		213:9:5749:5749	446924	1					
ANR	448120	ExpressionStatement	op -> sign = - 1	4860:3:121683:121696	446924	0	True				
ANR	448121	AssignmentExpression	op -> sign = - 1		446924	0		=			
ANR	448122	PtrMemberAccess	op -> sign		446924	0					
ANR	448123	Identifier	op		446924	0					
ANR	448124	Identifier	sign		446924	1					
ANR	448125	UnaryOperationExpression	- 1		446924	1					
ANR	448126	UnaryOperator	-		446924	0					
ANR	448127	PrimaryExpression	1		446924	1					
ANR	448128	ExpressionStatement	str = ++ p	4861:3:121701:121710	446924	1	True				
ANR	448129	AssignmentExpression	str = ++ p		446924	0		=			
ANR	448130	Identifier	str		446924	0					
ANR	448131	UnaryExpression	++ p		446924	1					
ANR	448132	IncDec	++		446924	0					
ANR	448133	Identifier	p		446924	1					
ANR	448134	ExpressionStatement	"op -> immediate = getnum ( a , str )"	4863:2:121718:121749	446924	4	True				
ANR	448135	AssignmentExpression	"op -> immediate = getnum ( a , str )"		446924	0		=			
ANR	448136	PtrMemberAccess	op -> immediate		446924	0					
ANR	448137	Identifier	op		446924	0					
ANR	448138	Identifier	immediate		446924	1					
ANR	448139	CallExpression	"getnum ( a , str )"		446924	1					
ANR	448140	Callee	getnum		446924	0					
ANR	448141	Identifier	getnum		446924	0					
ANR	448142	ArgumentList	a		446924	1					
ANR	448143	Argument	a		446924	0					
ANR	448144	Identifier	a		446924	0					
ANR	448145	Argument	str		446924	1					
ANR	448146	Identifier	str		446924	0					
ANR	448147	ReturnStatement	return nextpos ;	4866:1:121756:121770	446924	8	True				
ANR	448148	Identifier	nextpos		446924	0					
ANR	448149	ReturnType	static int		446924	1					
ANR	448150	Identifier	parseOperand		446924	2					
ANR	448151	ParameterList	"RAsm * a , const char * str , Operand * op , bool isrepop"		446924	3					
ANR	448152	Parameter	RAsm * a	4647:24:115875:115881	446924	0	True				
ANR	448153	ParameterType	RAsm *		446924	0					
ANR	448154	Identifier	a		446924	1					
ANR	448155	Parameter	const char * str	4647:33:115884:115898	446924	1	True				
ANR	448156	ParameterType	const char *		446924	0					
ANR	448157	Identifier	str		446924	1					
ANR	448158	Parameter	Operand * op	4647:50:115901:115911	446924	2	True				
ANR	448159	ParameterType	Operand *		446924	0					
ANR	448160	Identifier	op		446924	1					
ANR	448161	Parameter	bool isrepop	4647:63:115914:115925	446924	3	True				
ANR	448162	ParameterType	bool		446924	0					
ANR	448163	Identifier	isrepop		446924	1					
ANR	448164	CFGEntryNode	ENTRY		446924		True				
ANR	448165	CFGExitNode	EXIT		446924		True				
ANR	448166	Symbol	* op -> regs		446924						
ANR	448167	Symbol	* op		446924						
ANR	448168	Symbol	op -> regs		446924						
ANR	448169	Symbol	* op -> scale		446924						
ANR	448170	Symbol	strchr		446924						
ANR	448171	Symbol	strlen		446924						
ANR	448172	Symbol	reg		446924						
ANR	448173	Symbol	tmp		446924						
ANR	448174	Symbol	op -> dest_size		446924						
ANR	448175	Symbol	op -> reg_size		446924						
ANR	448176	Symbol	nextpos		446924						
ANR	448177	Symbol	* a -> num		446924						
ANR	448178	Symbol	OT_BYTE		446924						
ANR	448179	Symbol	OT_GPREG		446924						
ANR	448180	Symbol	read		446924						
ANR	448181	Symbol	NULL		446924						
ANR	448182	Symbol	op -> type		446924						
ANR	448183	Symbol	OT_SEGMENTREG		446924						
ANR	448184	Symbol	op -> sign		446924						
ANR	448185	Symbol	* * a		446924						
ANR	448186	Symbol	TT_WORD		446924						
ANR	448187	Symbol	parseReg		446924						
ANR	448188	Symbol	plus		446924						
ANR	448189	Symbol	str		446924						
ANR	448190	Symbol	op -> offset		446924						
ANR	448191	Symbol	core		446924						
ANR	448192	Symbol	op -> scale		446924						
ANR	448193	Symbol	true		446924						
ANR	448194	Symbol	op -> explicit_size		446924						
ANR	448195	Symbol	MAX_REPOP_LENGTH		446924						
ANR	448196	Symbol	op -> extended		446924						
ANR	448197	Symbol	op -> immediate		446924						
ANR	448198	Symbol	* pos		446924						
ANR	448199	Symbol	minus		446924						
ANR	448200	Symbol	last_type		446924						
ANR	448201	Symbol	OT_QWORD		446924						
ANR	448202	Symbol	flag		446924						
ANR	448203	Symbol	* core		446924						
ANR	448204	Symbol	reg_type		446924						
ANR	448205	Symbol	* reg_index		446924						
ANR	448206	Symbol	* * op		446924						
ANR	448207	Symbol	* MAX_REPOP_LENGTH		446924						
ANR	448208	Symbol	a -> num -> userptr		446924						
ANR	448209	Symbol	pos		446924						
ANR	448210	Symbol	OT_OWORD		446924						
ANR	448211	Symbol	explicit_size		446924						
ANR	448212	Symbol	* str		446924						
ANR	448213	Symbol	size_token		446924						
ANR	448214	Symbol	r_str_ncasecmp		446924						
ANR	448215	Symbol	OT_MEMORY		446924						
ANR	448216	Symbol	closeB		446924						
ANR	448217	Symbol	r_flag_get		446924						
ANR	448218	Symbol	a		446924						
ANR	448219	Symbol	op		446924						
ANR	448220	Symbol	& nextpos		446924						
ANR	448221	Symbol	OT_TBYTE		446924						
ANR	448222	Symbol	malloc		446924						
ANR	448223	Symbol	OT_CONSTANT		446924						
ANR	448224	Symbol	OT_WORD		446924						
ANR	448225	Symbol	temp		446924						
ANR	448226	Symbol	a -> num -> value		446924						
ANR	448227	Symbol	* op -> rep_op		446924						
ANR	448228	Symbol	& op -> type		446924						
ANR	448229	Symbol	false		446924						
ANR	448230	Symbol	core -> flags		446924						
ANR	448231	Symbol	TT_SPECIAL		446924						
ANR	448232	Symbol	a -> num		446924						
ANR	448233	Symbol	* a		446924						
ANR	448234	Symbol	reg_index		446924						
ANR	448235	Symbol	OT_REGTYPE		446924						
ANR	448236	Symbol	p		446924						
ANR	448237	Symbol	X86R_UNDEFINED		446924						
ANR	448238	Symbol	isrepop		446924						
ANR	448239	Symbol	op -> rep_op		446924						
ANR	448240	Symbol	op -> is_good_flag		446924						
ANR	448241	Symbol	getToken		446924						
ANR	448242	Symbol	first_reg		446924						
ANR	448243	Symbol	getnum		446924						
ANR	448244	Symbol	& reg_type		446924						
ANR	448245	Symbol	op -> offset_sign		446924						
ANR	448246	Symbol	& pos		446924						
ANR	448247	Symbol	OT_DWORD		446924						
ANR	448248	Symbol	op -> reg		446924						
ANR	448249	Function	parseOpcode	4869:0:121775:123094							
ANR	448250	FunctionDef	"parseOpcode (RAsm * a , const char * op , Opcode * out)"		448249	0					
ANR	448251	CompoundStatement		4869:61:121836:123094	448249	0					
ANR	448252	ExpressionStatement	out -> has_bnd = false	4870:1:121839:121859	448249	0	True				
ANR	448253	AssignmentExpression	out -> has_bnd = false		448249	0		=			
ANR	448254	PtrMemberAccess	out -> has_bnd		448249	0					
ANR	448255	Identifier	out		448249	0					
ANR	448256	Identifier	has_bnd		448249	1					
ANR	448257	Identifier	false		448249	1					
ANR	448258	IdentifierDeclStatement	bool isrepop = false ;	4871:1:121862:121882	448249	1	True				
ANR	448259	IdentifierDecl	isrepop = false		448249	0					
ANR	448260	IdentifierDeclType	bool		448249	0					
ANR	448261	Identifier	isrepop		448249	1					
ANR	448262	AssignmentExpression	isrepop = false		448249	2		=			
ANR	448263	Identifier	false		448249	0					
ANR	448264	Identifier	false		448249	1					
ANR	448265	IfStatement	"if ( ! strncmp ( op , ""bnd "" , 4 ) )"		448249	2					
ANR	448266	Condition	"! strncmp ( op , ""bnd "" , 4 )"	4872:5:121889:121912	448249	0	True				
ANR	448267	UnaryOperationExpression	"! strncmp ( op , ""bnd "" , 4 )"		448249	0					
ANR	448268	UnaryOperator	!		448249	0					
ANR	448269	CallExpression	"strncmp ( op , ""bnd "" , 4 )"		448249	1					
ANR	448270	Callee	strncmp		448249	0					
ANR	448271	Identifier	strncmp		448249	0					
ANR	448272	ArgumentList	op		448249	1					
ANR	448273	Argument	op		448249	0					
ANR	448274	Identifier	op		448249	0					
ANR	448275	Argument	"""bnd """		448249	1					
ANR	448276	PrimaryExpression	"""bnd """		448249	0					
ANR	448277	Argument	4		448249	2					
ANR	448278	PrimaryExpression	4		448249	0					
ANR	448279	CompoundStatement		4:31:78:78	448249	1					
ANR	448280	ExpressionStatement	out -> has_bnd = true	4873:2:121919:121938	448249	0	True				
ANR	448281	AssignmentExpression	out -> has_bnd = true		448249	0		=			
ANR	448282	PtrMemberAccess	out -> has_bnd		448249	0					
ANR	448283	Identifier	out		448249	0					
ANR	448284	Identifier	has_bnd		448249	1					
ANR	448285	Identifier	true		448249	1					
ANR	448286	ExpressionStatement	op += 4	4874:2:121942:121949	448249	1	True				
ANR	448287	AssignmentExpression	op += 4		448249	0		+=			
ANR	448288	Identifier	op		448249	0					
ANR	448289	PrimaryExpression	4		448249	1					
ANR	448290	IdentifierDeclStatement	"char * args = strchr ( op , ' ' ) ;"	4876:1:121955:121984	448249	3	True				
ANR	448291	IdentifierDecl	"* args = strchr ( op , ' ' )"		448249	0					
ANR	448292	IdentifierDeclType	char *		448249	0					
ANR	448293	Identifier	args		448249	1					
ANR	448294	AssignmentExpression	"* args = strchr ( op , ' ' )"		448249	2		=			
ANR	448295	Identifier	args		448249	0					
ANR	448296	CallExpression	"strchr ( op , ' ' )"		448249	1					
ANR	448297	Callee	strchr		448249	0					
ANR	448298	Identifier	strchr		448249	0					
ANR	448299	ArgumentList	op		448249	1					
ANR	448300	Argument	op		448249	0					
ANR	448301	Identifier	op		448249	0					
ANR	448302	Argument	' '		448249	1					
ANR	448303	PrimaryExpression	' '		448249	0					
ANR	448304	ExpressionStatement	"out -> mnemonic = args ? r_str_ndup ( op , args - op ) : strdup ( op )"	4877:1:121987:122050	448249	4	True				
ANR	448305	AssignmentExpression	"out -> mnemonic = args ? r_str_ndup ( op , args - op ) : strdup ( op )"		448249	0		=			
ANR	448306	PtrMemberAccess	out -> mnemonic		448249	0					
ANR	448307	Identifier	out		448249	0					
ANR	448308	Identifier	mnemonic		448249	1					
ANR	448309	ConditionalExpression	"args ? r_str_ndup ( op , args - op ) : strdup ( op )"		448249	1					
ANR	448310	Condition	args		448249	0					
ANR	448311	Identifier	args		448249	0					
ANR	448312	CallExpression	"r_str_ndup ( op , args - op )"		448249	1					
ANR	448313	Callee	r_str_ndup		448249	0					
ANR	448314	Identifier	r_str_ndup		448249	0					
ANR	448315	ArgumentList	op		448249	1					
ANR	448316	Argument	op		448249	0					
ANR	448317	Identifier	op		448249	0					
ANR	448318	Argument	args - op		448249	1					
ANR	448319	AdditiveExpression	args - op		448249	0		-			
ANR	448320	Identifier	args		448249	0					
ANR	448321	Identifier	op		448249	1					
ANR	448322	CallExpression	strdup ( op )		448249	2					
ANR	448323	Callee	strdup		448249	0					
ANR	448324	Identifier	strdup		448249	0					
ANR	448325	ArgumentList	op		448249	1					
ANR	448326	Argument	op		448249	0					
ANR	448327	Identifier	op		448249	0					
ANR	448328	ExpressionStatement	out -> operands [ 0 ] . type = out -> operands [ 1 ] . type = 0	4878:1:122053:122102	448249	5	True				
ANR	448329	AssignmentExpression	out -> operands [ 0 ] . type = out -> operands [ 1 ] . type = 0		448249	0		=			
ANR	448330	MemberAccess	out -> operands [ 0 ] . type		448249	0					
ANR	448331	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448332	PtrMemberAccess	out -> operands		448249	0					
ANR	448333	Identifier	out		448249	0					
ANR	448334	Identifier	operands		448249	1					
ANR	448335	PrimaryExpression	0		448249	1					
ANR	448336	Identifier	type		448249	1					
ANR	448337	AssignmentExpression	out -> operands [ 1 ] . type = 0		448249	1		=			
ANR	448338	MemberAccess	out -> operands [ 1 ] . type		448249	0					
ANR	448339	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448340	PtrMemberAccess	out -> operands		448249	0					
ANR	448341	Identifier	out		448249	0					
ANR	448342	Identifier	operands		448249	1					
ANR	448343	PrimaryExpression	1		448249	1					
ANR	448344	Identifier	type		448249	1					
ANR	448345	PrimaryExpression	0		448249	1					
ANR	448346	ExpressionStatement	out -> operands [ 0 ] . extended = out -> operands [ 1 ] . extended = false	4879:1:122105:122166	448249	6	True				
ANR	448347	AssignmentExpression	out -> operands [ 0 ] . extended = out -> operands [ 1 ] . extended = false		448249	0		=			
ANR	448348	MemberAccess	out -> operands [ 0 ] . extended		448249	0					
ANR	448349	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448350	PtrMemberAccess	out -> operands		448249	0					
ANR	448351	Identifier	out		448249	0					
ANR	448352	Identifier	operands		448249	1					
ANR	448353	PrimaryExpression	0		448249	1					
ANR	448354	Identifier	extended		448249	1					
ANR	448355	AssignmentExpression	out -> operands [ 1 ] . extended = false		448249	1		=			
ANR	448356	MemberAccess	out -> operands [ 1 ] . extended		448249	0					
ANR	448357	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448358	PtrMemberAccess	out -> operands		448249	0					
ANR	448359	Identifier	out		448249	0					
ANR	448360	Identifier	operands		448249	1					
ANR	448361	PrimaryExpression	1		448249	1					
ANR	448362	Identifier	extended		448249	1					
ANR	448363	Identifier	false		448249	1					
ANR	448364	ExpressionStatement	out -> operands [ 0 ] . reg = out -> operands [ 0 ] . regs [ 0 ] = out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED	4880:1:122169:122260	448249	7	True				
ANR	448365	AssignmentExpression	out -> operands [ 0 ] . reg = out -> operands [ 0 ] . regs [ 0 ] = out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED		448249	0		=			
ANR	448366	MemberAccess	out -> operands [ 0 ] . reg		448249	0					
ANR	448367	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448368	PtrMemberAccess	out -> operands		448249	0					
ANR	448369	Identifier	out		448249	0					
ANR	448370	Identifier	operands		448249	1					
ANR	448371	PrimaryExpression	0		448249	1					
ANR	448372	Identifier	reg		448249	1					
ANR	448373	AssignmentExpression	out -> operands [ 0 ] . regs [ 0 ] = out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED		448249	1		=			
ANR	448374	ArrayIndexing	out -> operands [ 0 ] . regs [ 0 ]		448249	0					
ANR	448375	MemberAccess	out -> operands [ 0 ] . regs		448249	0					
ANR	448376	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448377	PtrMemberAccess	out -> operands		448249	0					
ANR	448378	Identifier	out		448249	0					
ANR	448379	Identifier	operands		448249	1					
ANR	448380	PrimaryExpression	0		448249	1					
ANR	448381	Identifier	regs		448249	1					
ANR	448382	PrimaryExpression	0		448249	1					
ANR	448383	AssignmentExpression	out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED		448249	1		=			
ANR	448384	ArrayIndexing	out -> operands [ 0 ] . regs [ 1 ]		448249	0					
ANR	448385	MemberAccess	out -> operands [ 0 ] . regs		448249	0					
ANR	448386	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448387	PtrMemberAccess	out -> operands		448249	0					
ANR	448388	Identifier	out		448249	0					
ANR	448389	Identifier	operands		448249	1					
ANR	448390	PrimaryExpression	0		448249	1					
ANR	448391	Identifier	regs		448249	1					
ANR	448392	PrimaryExpression	1		448249	1					
ANR	448393	Identifier	X86R_UNDEFINED		448249	1					
ANR	448394	ExpressionStatement	out -> operands [ 1 ] . reg = out -> operands [ 1 ] . regs [ 0 ] = out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED	4881:1:122263:122354	448249	8	True				
ANR	448395	AssignmentExpression	out -> operands [ 1 ] . reg = out -> operands [ 1 ] . regs [ 0 ] = out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED		448249	0		=			
ANR	448396	MemberAccess	out -> operands [ 1 ] . reg		448249	0					
ANR	448397	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448398	PtrMemberAccess	out -> operands		448249	0					
ANR	448399	Identifier	out		448249	0					
ANR	448400	Identifier	operands		448249	1					
ANR	448401	PrimaryExpression	1		448249	1					
ANR	448402	Identifier	reg		448249	1					
ANR	448403	AssignmentExpression	out -> operands [ 1 ] . regs [ 0 ] = out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED		448249	1		=			
ANR	448404	ArrayIndexing	out -> operands [ 1 ] . regs [ 0 ]		448249	0					
ANR	448405	MemberAccess	out -> operands [ 1 ] . regs		448249	0					
ANR	448406	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448407	PtrMemberAccess	out -> operands		448249	0					
ANR	448408	Identifier	out		448249	0					
ANR	448409	Identifier	operands		448249	1					
ANR	448410	PrimaryExpression	1		448249	1					
ANR	448411	Identifier	regs		448249	1					
ANR	448412	PrimaryExpression	0		448249	1					
ANR	448413	AssignmentExpression	out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED		448249	1		=			
ANR	448414	ArrayIndexing	out -> operands [ 1 ] . regs [ 1 ]		448249	0					
ANR	448415	MemberAccess	out -> operands [ 1 ] . regs		448249	0					
ANR	448416	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448417	PtrMemberAccess	out -> operands		448249	0					
ANR	448418	Identifier	out		448249	0					
ANR	448419	Identifier	operands		448249	1					
ANR	448420	PrimaryExpression	1		448249	1					
ANR	448421	Identifier	regs		448249	1					
ANR	448422	PrimaryExpression	1		448249	1					
ANR	448423	Identifier	X86R_UNDEFINED		448249	1					
ANR	448424	ExpressionStatement	out -> operands [ 0 ] . immediate = out -> operands [ 1 ] . immediate = 0	4882:1:122357:122416	448249	9	True				
ANR	448425	AssignmentExpression	out -> operands [ 0 ] . immediate = out -> operands [ 1 ] . immediate = 0		448249	0		=			
ANR	448426	MemberAccess	out -> operands [ 0 ] . immediate		448249	0					
ANR	448427	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448428	PtrMemberAccess	out -> operands		448249	0					
ANR	448429	Identifier	out		448249	0					
ANR	448430	Identifier	operands		448249	1					
ANR	448431	PrimaryExpression	0		448249	1					
ANR	448432	Identifier	immediate		448249	1					
ANR	448433	AssignmentExpression	out -> operands [ 1 ] . immediate = 0		448249	1		=			
ANR	448434	MemberAccess	out -> operands [ 1 ] . immediate		448249	0					
ANR	448435	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448436	PtrMemberAccess	out -> operands		448249	0					
ANR	448437	Identifier	out		448249	0					
ANR	448438	Identifier	operands		448249	1					
ANR	448439	PrimaryExpression	1		448249	1					
ANR	448440	Identifier	immediate		448249	1					
ANR	448441	PrimaryExpression	0		448249	1					
ANR	448442	ExpressionStatement	out -> operands [ 0 ] . sign = out -> operands [ 1 ] . sign = 1	4883:1:122419:122468	448249	10	True				
ANR	448443	AssignmentExpression	out -> operands [ 0 ] . sign = out -> operands [ 1 ] . sign = 1		448249	0		=			
ANR	448444	MemberAccess	out -> operands [ 0 ] . sign		448249	0					
ANR	448445	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448446	PtrMemberAccess	out -> operands		448249	0					
ANR	448447	Identifier	out		448249	0					
ANR	448448	Identifier	operands		448249	1					
ANR	448449	PrimaryExpression	0		448249	1					
ANR	448450	Identifier	sign		448249	1					
ANR	448451	AssignmentExpression	out -> operands [ 1 ] . sign = 1		448249	1		=			
ANR	448452	MemberAccess	out -> operands [ 1 ] . sign		448249	0					
ANR	448453	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448454	PtrMemberAccess	out -> operands		448249	0					
ANR	448455	Identifier	out		448249	0					
ANR	448456	Identifier	operands		448249	1					
ANR	448457	PrimaryExpression	1		448249	1					
ANR	448458	Identifier	sign		448249	1					
ANR	448459	PrimaryExpression	1		448249	1					
ANR	448460	ExpressionStatement	out -> operands [ 0 ] . is_good_flag = out -> operands [ 1 ] . is_good_flag = true	4884:1:122471:122539	448249	11	True				
ANR	448461	AssignmentExpression	out -> operands [ 0 ] . is_good_flag = out -> operands [ 1 ] . is_good_flag = true		448249	0		=			
ANR	448462	MemberAccess	out -> operands [ 0 ] . is_good_flag		448249	0					
ANR	448463	ArrayIndexing	out -> operands [ 0 ]		448249	0					
ANR	448464	PtrMemberAccess	out -> operands		448249	0					
ANR	448465	Identifier	out		448249	0					
ANR	448466	Identifier	operands		448249	1					
ANR	448467	PrimaryExpression	0		448249	1					
ANR	448468	Identifier	is_good_flag		448249	1					
ANR	448469	AssignmentExpression	out -> operands [ 1 ] . is_good_flag = true		448249	1		=			
ANR	448470	MemberAccess	out -> operands [ 1 ] . is_good_flag		448249	0					
ANR	448471	ArrayIndexing	out -> operands [ 1 ]		448249	0					
ANR	448472	PtrMemberAccess	out -> operands		448249	0					
ANR	448473	Identifier	out		448249	0					
ANR	448474	Identifier	operands		448249	1					
ANR	448475	PrimaryExpression	1		448249	1					
ANR	448476	Identifier	is_good_flag		448249	1					
ANR	448477	Identifier	true		448249	1					
ANR	448478	ExpressionStatement	out -> is_short = false	4885:1:122542:122563	448249	12	True				
ANR	448479	AssignmentExpression	out -> is_short = false		448249	0		=			
ANR	448480	PtrMemberAccess	out -> is_short		448249	0					
ANR	448481	Identifier	out		448249	0					
ANR	448482	Identifier	is_short		448249	1					
ANR	448483	Identifier	false		448249	1					
ANR	448484	ExpressionStatement	out -> operands_count = 0	4886:1:122566:122589	448249	13	True				
ANR	448485	AssignmentExpression	out -> operands_count = 0		448249	0		=			
ANR	448486	PtrMemberAccess	out -> operands_count		448249	0					
ANR	448487	Identifier	out		448249	0					
ANR	448488	Identifier	operands_count		448249	1					
ANR	448489	PrimaryExpression	0		448249	1					
ANR	448490	IfStatement	if ( args )		448249	14					
ANR	448491	Condition	args	4887:5:122596:122599	448249	0	True				
ANR	448492	Identifier	args		448249	0					
ANR	448493	CompoundStatement		19:11:765:765	448249	1					
ANR	448494	ExpressionStatement	args ++	4888:2:122606:122612	448249	0	True				
ANR	448495	PostIncDecOperationExpression	args ++		448249	0					
ANR	448496	Identifier	args		448249	0					
ANR	448497	IncDec	++		448249	1					
ANR	448498	ElseStatement	else		448249	0					
ANR	448499	CompoundStatement		21:8:785:785	448249	0					
ANR	448500	ReturnStatement	return 1 ;	4890:2:122626:122634	448249	0	True				
ANR	448501	PrimaryExpression	1		448249	0					
ANR	448502	IfStatement	"if ( ! r_str_ncasecmp ( args , ""short"" , 5 ) )"		448249	15					
ANR	448503	Condition	"! r_str_ncasecmp ( args , ""short"" , 5 )"	4892:5:122644:122677	448249	0	True				
ANR	448504	UnaryOperationExpression	"! r_str_ncasecmp ( args , ""short"" , 5 )"		448249	0					
ANR	448505	UnaryOperator	!		448249	0					
ANR	448506	CallExpression	"r_str_ncasecmp ( args , ""short"" , 5 )"		448249	1					
ANR	448507	Callee	r_str_ncasecmp		448249	0					
ANR	448508	Identifier	r_str_ncasecmp		448249	0					
ANR	448509	ArgumentList	args		448249	1					
ANR	448510	Argument	args		448249	0					
ANR	448511	Identifier	args		448249	0					
ANR	448512	Argument	"""short"""		448249	1					
ANR	448513	PrimaryExpression	"""short"""		448249	0					
ANR	448514	Argument	5		448249	2					
ANR	448515	PrimaryExpression	5		448249	0					
ANR	448516	CompoundStatement		24:41:843:843	448249	1					
ANR	448517	ExpressionStatement	out -> is_short = true	4893:2:122684:122704	448249	0	True				
ANR	448518	AssignmentExpression	out -> is_short = true		448249	0		=			
ANR	448519	PtrMemberAccess	out -> is_short		448249	0					
ANR	448520	Identifier	out		448249	0					
ANR	448521	Identifier	is_short		448249	1					
ANR	448522	Identifier	true		448249	1					
ANR	448523	ExpressionStatement	args += 5	4894:2:122708:122717	448249	1	True				
ANR	448524	AssignmentExpression	args += 5		448249	0		+=			
ANR	448525	Identifier	args		448249	0					
ANR	448526	PrimaryExpression	5		448249	1					
ANR	448527	IfStatement	"if ( ! strncmp ( out -> mnemonic , ""rep"" , 3 ) )"		448249	16					
ANR	448528	Condition	"! strncmp ( out -> mnemonic , ""rep"" , 3 )"	4896:5:122727:122760	448249	0	True				
ANR	448529	UnaryOperationExpression	"! strncmp ( out -> mnemonic , ""rep"" , 3 )"		448249	0					
ANR	448530	UnaryOperator	!		448249	0					
ANR	448531	CallExpression	"strncmp ( out -> mnemonic , ""rep"" , 3 )"		448249	1					
ANR	448532	Callee	strncmp		448249	0					
ANR	448533	Identifier	strncmp		448249	0					
ANR	448534	ArgumentList	out -> mnemonic		448249	1					
ANR	448535	Argument	out -> mnemonic		448249	0					
ANR	448536	PtrMemberAccess	out -> mnemonic		448249	0					
ANR	448537	Identifier	out		448249	0					
ANR	448538	Identifier	mnemonic		448249	1					
ANR	448539	Argument	"""rep"""		448249	1					
ANR	448540	PrimaryExpression	"""rep"""		448249	0					
ANR	448541	Argument	3		448249	2					
ANR	448542	PrimaryExpression	3		448249	0					
ANR	448543	CompoundStatement		28:41:926:926	448249	1					
ANR	448544	ExpressionStatement	isrepop = true	4897:2:122767:122781	448249	0	True				
ANR	448545	AssignmentExpression	isrepop = true		448249	0		=			
ANR	448546	Identifier	isrepop		448249	0					
ANR	448547	Identifier	true		448249	1					
ANR	448548	ExpressionStatement	"parseOperand ( a , args , & ( out -> operands [ 0 ] ) , isrepop )"	4899:1:122787:122839	448249	17	True				
ANR	448549	CallExpression	"parseOperand ( a , args , & ( out -> operands [ 0 ] ) , isrepop )"		448249	0					
ANR	448550	Callee	parseOperand		448249	0					
ANR	448551	Identifier	parseOperand		448249	0					
ANR	448552	ArgumentList	a		448249	1					
ANR	448553	Argument	a		448249	0					
ANR	448554	Identifier	a		448249	0					
ANR	448555	Argument	args		448249	1					
ANR	448556	Identifier	args		448249	0					
ANR	448557	Argument	& ( out -> operands [ 0 ] )		448249	2					
ANR	448558	UnaryOperationExpression	& ( out -> operands [ 0 ] )		448249	0					
ANR	448559	UnaryOperator	&		448249	0					
ANR	448560	ArrayIndexing	out -> operands [ 0 ]		448249	1					
ANR	448561	PtrMemberAccess	out -> operands		448249	0					
ANR	448562	Identifier	out		448249	0					
ANR	448563	Identifier	operands		448249	1					
ANR	448564	PrimaryExpression	0		448249	1					
ANR	448565	Argument	isrepop		448249	3					
ANR	448566	Identifier	isrepop		448249	0					
ANR	448567	ExpressionStatement	out -> operands_count = 1	4900:1:122842:122865	448249	18	True				
ANR	448568	AssignmentExpression	out -> operands_count = 1		448249	0		=			
ANR	448569	PtrMemberAccess	out -> operands_count		448249	0					
ANR	448570	Identifier	out		448249	0					
ANR	448571	Identifier	operands_count		448249	1					
ANR	448572	PrimaryExpression	1		448249	1					
ANR	448573	WhileStatement	while ( out -> operands_count < MAX_OPERANDS )		448249	19					
ANR	448574	Condition	out -> operands_count < MAX_OPERANDS	4901:8:122875:122908	448249	0	True				
ANR	448575	RelationalExpression	out -> operands_count < MAX_OPERANDS		448249	0		<			
ANR	448576	PtrMemberAccess	out -> operands_count		448249	0					
ANR	448577	Identifier	out		448249	0					
ANR	448578	Identifier	operands_count		448249	1					
ANR	448579	Identifier	MAX_OPERANDS		448249	1					
ANR	448580	CompoundStatement		33:44:1074:1074	448249	1					
ANR	448581	ExpressionStatement	"args = strchr ( args , ',' )"	4902:2:122915:122940	448249	0	True				
ANR	448582	AssignmentExpression	"args = strchr ( args , ',' )"		448249	0		=			
ANR	448583	Identifier	args		448249	0					
ANR	448584	CallExpression	"strchr ( args , ',' )"		448249	1					
ANR	448585	Callee	strchr		448249	0					
ANR	448586	Identifier	strchr		448249	0					
ANR	448587	ArgumentList	args		448249	1					
ANR	448588	Argument	args		448249	0					
ANR	448589	Identifier	args		448249	0					
ANR	448590	Argument	"','"		448249	1					
ANR	448591	PrimaryExpression	"','"		448249	0					
ANR	448592	IfStatement	if ( ! args )		448249	1					
ANR	448593	Condition	! args	4903:6:122948:122952	448249	0	True				
ANR	448594	UnaryOperationExpression	! args		448249	0					
ANR	448595	UnaryOperator	!		448249	0					
ANR	448596	Identifier	args		448249	1					
ANR	448597	CompoundStatement		35:13:1118:1118	448249	1					
ANR	448598	BreakStatement	break ;	4904:3:122960:122965	448249	0	True				
ANR	448599	ExpressionStatement	args ++	4906:2:122973:122979	448249	2	True				
ANR	448600	PostIncDecOperationExpression	args ++		448249	0					
ANR	448601	Identifier	args		448249	0					
ANR	448602	IncDec	++		448249	1					
ANR	448603	ExpressionStatement	"parseOperand ( a , args , & ( out -> operands [ out -> operands_count ] ) , isrepop )"	4907:2:122983:123053	448249	3	True				
ANR	448604	CallExpression	"parseOperand ( a , args , & ( out -> operands [ out -> operands_count ] ) , isrepop )"		448249	0					
ANR	448605	Callee	parseOperand		448249	0					
ANR	448606	Identifier	parseOperand		448249	0					
ANR	448607	ArgumentList	a		448249	1					
ANR	448608	Argument	a		448249	0					
ANR	448609	Identifier	a		448249	0					
ANR	448610	Argument	args		448249	1					
ANR	448611	Identifier	args		448249	0					
ANR	448612	Argument	& ( out -> operands [ out -> operands_count ] )		448249	2					
ANR	448613	UnaryOperationExpression	& ( out -> operands [ out -> operands_count ] )		448249	0					
ANR	448614	UnaryOperator	&		448249	0					
ANR	448615	ArrayIndexing	out -> operands [ out -> operands_count ]		448249	1					
ANR	448616	PtrMemberAccess	out -> operands		448249	0					
ANR	448617	Identifier	out		448249	0					
ANR	448618	Identifier	operands		448249	1					
ANR	448619	PtrMemberAccess	out -> operands_count		448249	1					
ANR	448620	Identifier	out		448249	0					
ANR	448621	Identifier	operands_count		448249	1					
ANR	448622	Argument	isrepop		448249	3					
ANR	448623	Identifier	isrepop		448249	0					
ANR	448624	ExpressionStatement	out -> operands_count ++	4908:2:123057:123078	448249	4	True				
ANR	448625	PostIncDecOperationExpression	out -> operands_count ++		448249	0					
ANR	448626	PtrMemberAccess	out -> operands_count		448249	0					
ANR	448627	Identifier	out		448249	0					
ANR	448628	Identifier	operands_count		448249	1					
ANR	448629	IncDec	++		448249	1					
ANR	448630	ReturnStatement	return 0 ;	4910:1:123084:123092	448249	20	True				
ANR	448631	PrimaryExpression	0		448249	0					
ANR	448632	ReturnType	static int		448249	1					
ANR	448633	Identifier	parseOpcode		448249	2					
ANR	448634	ParameterList	"RAsm * a , const char * op , Opcode * out"		448249	3					
ANR	448635	Parameter	RAsm * a	4869:23:121798:121804	448249	0	True				
ANR	448636	ParameterType	RAsm *		448249	0					
ANR	448637	Identifier	a		448249	1					
ANR	448638	Parameter	const char * op	4869:32:121807:121820	448249	1	True				
ANR	448639	ParameterType	const char *		448249	0					
ANR	448640	Identifier	op		448249	1					
ANR	448641	Parameter	Opcode * out	4869:48:121823:121833	448249	2	True				
ANR	448642	ParameterType	Opcode *		448249	0					
ANR	448643	Identifier	out		448249	1					
ANR	448644	CFGEntryNode	ENTRY		448249		True				
ANR	448645	CFGExitNode	EXIT		448249		True				
ANR	448646	Symbol	out -> operands [ 0 ] . sign		448249						
ANR	448647	Symbol	out -> has_bnd		448249						
ANR	448648	Symbol	out -> mnemonic		448249						
ANR	448649	Symbol	r_str_ndup		448249						
ANR	448650	Symbol	* * out -> operands		448249						
ANR	448651	Symbol	* out -> operands [ 0 ] . regs		448249						
ANR	448652	Symbol	out -> operands [ 1 ] . regs		448249						
ANR	448653	Symbol	strchr		448249						
ANR	448654	Symbol	* * * out		448249						
ANR	448655	Symbol	out		448249						
ANR	448656	Symbol	out -> operands		448249						
ANR	448657	Symbol	strncmp		448249						
ANR	448658	Symbol	MAX_OPERANDS		448249						
ANR	448659	Symbol	out -> operands [ 0 ] . immediate		448249						
ANR	448660	Symbol	out -> operands [ 1 ] . reg		448249						
ANR	448661	Symbol	out -> operands [ 1 ] . type		448249						
ANR	448662	Symbol	out -> operands [ 1 ] . sign		448249						
ANR	448663	Symbol	r_str_ncasecmp		448249						
ANR	448664	Symbol	out -> operands [ 0 ] . regs		448249						
ANR	448665	Symbol	out -> operands [ 0 ] . is_good_flag		448249						
ANR	448666	Symbol	a		448249						
ANR	448667	Symbol	op		448249						
ANR	448668	Symbol	* * out		448249						
ANR	448669	Symbol	out -> operands [ 0 ] . extended		448249						
ANR	448670	Symbol	false		448249						
ANR	448671	Symbol	out -> operands [ 1 ] . extended		448249						
ANR	448672	Symbol	out -> is_short		448249						
ANR	448673	Symbol	out -> operands [ 0 ] . reg		448249						
ANR	448674	Symbol	* out -> operands [ 1 ] . regs		448249						
ANR	448675	Symbol	out -> operands [ 1 ] . is_good_flag		448249						
ANR	448676	Symbol	args		448249						
ANR	448677	Symbol	* out -> operands		448249						
ANR	448678	Symbol	X86R_UNDEFINED		448249						
ANR	448679	Symbol	out -> operands_count		448249						
ANR	448680	Symbol	isrepop		448249						
ANR	448681	Symbol	* out		448249						
ANR	448682	Symbol	true		448249						
ANR	448683	Symbol	out -> operands [ 1 ] . immediate		448249						
ANR	448684	Symbol	strdup		448249						
ANR	448685	Symbol	out -> operands [ 0 ] . type		448249						
ANR	448686	Function	getnum	4913:0:123097:123228							
ANR	448687	FunctionDef	"getnum (RAsm * a , const char * s)"		448686	0					
ANR	448688	CompoundStatement		4913:43:123140:123228	448686	0					
ANR	448689	IfStatement	if ( ! s )		448686	0					
ANR	448690	Condition	! s	4914:5:123147:123148	448686	0	True				
ANR	448691	UnaryOperationExpression	! s		448686	0					
ANR	448692	UnaryOperator	!		448686	0					
ANR	448693	Identifier	s		448686	1					
ANR	448694	CompoundStatement		2:9:10:10	448686	1					
ANR	448695	ReturnStatement	return 0 ;	4915:2:123155:123163	448686	0	True				
ANR	448696	PrimaryExpression	0		448686	0					
ANR	448697	IfStatement	if ( * s == '$' )		448686	1					
ANR	448698	Condition	* s == '$'	4917:5:123173:123181	448686	0	True				
ANR	448699	EqualityExpression	* s == '$'		448686	0		==			
ANR	448700	UnaryOperationExpression	* s		448686	0					
ANR	448701	UnaryOperator	*		448686	0					
ANR	448702	Identifier	s		448686	1					
ANR	448703	PrimaryExpression	'$'		448686	1					
ANR	448704	CompoundStatement		5:16:43:43	448686	1					
ANR	448705	ExpressionStatement	s ++	4918:2:123188:123191	448686	0	True				
ANR	448706	PostIncDecOperationExpression	s ++		448686	0					
ANR	448707	Identifier	s		448686	0					
ANR	448708	IncDec	++		448686	1					
ANR	448709	ReturnStatement	"return r_num_math ( a -> num , s ) ;"	4920:1:123197:123226	448686	2	True				
ANR	448710	CallExpression	"r_num_math ( a -> num , s )"		448686	0					
ANR	448711	Callee	r_num_math		448686	0					
ANR	448712	Identifier	r_num_math		448686	0					
ANR	448713	ArgumentList	a -> num		448686	1					
ANR	448714	Argument	a -> num		448686	0					
ANR	448715	PtrMemberAccess	a -> num		448686	0					
ANR	448716	Identifier	a		448686	0					
ANR	448717	Identifier	num		448686	1					
ANR	448718	Argument	s		448686	1					
ANR	448719	Identifier	s		448686	0					
ANR	448720	ReturnType	static ut64		448686	1					
ANR	448721	Identifier	getnum		448686	2					
ANR	448722	ParameterList	"RAsm * a , const char * s"		448686	3					
ANR	448723	Parameter	RAsm * a	4913:19:123116:123122	448686	0	True				
ANR	448724	ParameterType	RAsm *		448686	0					
ANR	448725	Identifier	a		448686	1					
ANR	448726	Parameter	const char * s	4913:28:123125:123137	448686	1	True				
ANR	448727	ParameterType	const char *		448686	0					
ANR	448728	Identifier	s		448686	1					
ANR	448729	CFGEntryNode	ENTRY		448686		True				
ANR	448730	CFGExitNode	EXIT		448686		True				
ANR	448731	Symbol	a		448686						
ANR	448732	Symbol	s		448686						
ANR	448733	Symbol	a -> num		448686						
ANR	448734	Symbol	* a		448686						
ANR	448735	Symbol	* s		448686						
ANR	448736	Symbol	r_num_math		448686						
ANR	448737	Function	oprep	4923:0:123231:124489							
ANR	448738	FunctionDef	"oprep (RAsm * a , ut8 * data , const Opcode * op)"		448737	0					
ANR	448739	CompoundStatement		4923:55:123286:124489	448737	0					
ANR	448740	IdentifierDeclStatement	int l = 0 ;	4924:1:123289:123298	448737	0	True				
ANR	448741	IdentifierDecl	l = 0		448737	0					
ANR	448742	IdentifierDeclType	int		448737	0					
ANR	448743	Identifier	l		448737	1					
ANR	448744	AssignmentExpression	l = 0		448737	2		=			
ANR	448745	Identifier	l		448737	0					
ANR	448746	PrimaryExpression	0		448737	1					
ANR	448747	IdentifierDeclStatement	LookupTable * lt_ptr ;	4925:1:123301:123320	448737	1	True				
ANR	448748	IdentifierDecl	* lt_ptr		448737	0					
ANR	448749	IdentifierDeclType	LookupTable *		448737	0					
ANR	448750	Identifier	lt_ptr		448737	1					
ANR	448751	IdentifierDeclStatement	int retval ;	4926:1:123323:123333	448737	2	True				
ANR	448752	IdentifierDecl	retval		448737	0					
ANR	448753	IdentifierDeclType	int		448737	0					
ANR	448754	Identifier	retval		448737	1					
ANR	448755	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rep"" ) || ! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" ) )"		448737	3					
ANR	448756	Condition	"! strcmp ( op -> mnemonic , ""rep"" ) || ! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" )"	4927:5:123340:123446	448737	0	True				
ANR	448757	OrExpression	"! strcmp ( op -> mnemonic , ""rep"" ) || ! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" )"		448737	0		||			
ANR	448758	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rep"" )"		448737	0					
ANR	448759	UnaryOperator	!		448737	0					
ANR	448760	CallExpression	"strcmp ( op -> mnemonic , ""rep"" )"		448737	1					
ANR	448761	Callee	strcmp		448737	0					
ANR	448762	Identifier	strcmp		448737	0					
ANR	448763	ArgumentList	op -> mnemonic		448737	1					
ANR	448764	Argument	op -> mnemonic		448737	0					
ANR	448765	PtrMemberAccess	op -> mnemonic		448737	0					
ANR	448766	Identifier	op		448737	0					
ANR	448767	Identifier	mnemonic		448737	1					
ANR	448768	Argument	"""rep"""		448737	1					
ANR	448769	PrimaryExpression	"""rep"""		448737	0					
ANR	448770	OrExpression	"! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" )"		448737	1		||			
ANR	448771	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repe"" )"		448737	0					
ANR	448772	UnaryOperator	!		448737	0					
ANR	448773	CallExpression	"strcmp ( op -> mnemonic , ""repe"" )"		448737	1					
ANR	448774	Callee	strcmp		448737	0					
ANR	448775	Identifier	strcmp		448737	0					
ANR	448776	ArgumentList	op -> mnemonic		448737	1					
ANR	448777	Argument	op -> mnemonic		448737	0					
ANR	448778	PtrMemberAccess	op -> mnemonic		448737	0					
ANR	448779	Identifier	op		448737	0					
ANR	448780	Identifier	mnemonic		448737	1					
ANR	448781	Argument	"""repe"""		448737	1					
ANR	448782	PrimaryExpression	"""repe"""		448737	0					
ANR	448783	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repz"" )"		448737	1					
ANR	448784	UnaryOperator	!		448737	0					
ANR	448785	CallExpression	"strcmp ( op -> mnemonic , ""repz"" )"		448737	1					
ANR	448786	Callee	strcmp		448737	0					
ANR	448787	Identifier	strcmp		448737	0					
ANR	448788	ArgumentList	op -> mnemonic		448737	1					
ANR	448789	Argument	op -> mnemonic		448737	0					
ANR	448790	PtrMemberAccess	op -> mnemonic		448737	0					
ANR	448791	Identifier	op		448737	0					
ANR	448792	Identifier	mnemonic		448737	1					
ANR	448793	Argument	"""repz"""		448737	1					
ANR	448794	PrimaryExpression	"""repz"""		448737	0					
ANR	448795	CompoundStatement		7:37:162:162	448737	1					
ANR	448796	ExpressionStatement	data [ l ++ ] = 0xf3	4930:2:123453:123469	448737	0	True				
ANR	448797	AssignmentExpression	data [ l ++ ] = 0xf3		448737	0		=			
ANR	448798	ArrayIndexing	data [ l ++ ]		448737	0					
ANR	448799	Identifier	data		448737	0					
ANR	448800	PostIncDecOperationExpression	l ++		448737	1					
ANR	448801	Identifier	l		448737	0					
ANR	448802	IncDec	++		448737	1					
ANR	448803	PrimaryExpression	0xf3		448737	1					
ANR	448804	ElseStatement	else		448737	0					
ANR	448805	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""repne"" ) || ! strcmp ( op -> mnemonic , ""repnz"" ) )"		448737	0					
ANR	448806	Condition	"! strcmp ( op -> mnemonic , ""repne"" ) || ! strcmp ( op -> mnemonic , ""repnz"" )"	4931:12:123483:123560	448737	0	True				
ANR	448807	OrExpression	"! strcmp ( op -> mnemonic , ""repne"" ) || ! strcmp ( op -> mnemonic , ""repnz"" )"		448737	0		||			
ANR	448808	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repne"" )"		448737	0					
ANR	448809	UnaryOperator	!		448737	0					
ANR	448810	CallExpression	"strcmp ( op -> mnemonic , ""repne"" )"		448737	1					
ANR	448811	Callee	strcmp		448737	0					
ANR	448812	Identifier	strcmp		448737	0					
ANR	448813	ArgumentList	op -> mnemonic		448737	1					
ANR	448814	Argument	op -> mnemonic		448737	0					
ANR	448815	PtrMemberAccess	op -> mnemonic		448737	0					
ANR	448816	Identifier	op		448737	0					
ANR	448817	Identifier	mnemonic		448737	1					
ANR	448818	Argument	"""repne"""		448737	1					
ANR	448819	PrimaryExpression	"""repne"""		448737	0					
ANR	448820	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repnz"" )"		448737	1					
ANR	448821	UnaryOperator	!		448737	0					
ANR	448822	CallExpression	"strcmp ( op -> mnemonic , ""repnz"" )"		448737	1					
ANR	448823	Callee	strcmp		448737	0					
ANR	448824	Identifier	strcmp		448737	0					
ANR	448825	ArgumentList	op -> mnemonic		448737	1					
ANR	448826	Argument	op -> mnemonic		448737	0					
ANR	448827	PtrMemberAccess	op -> mnemonic		448737	0					
ANR	448828	Identifier	op		448737	0					
ANR	448829	Identifier	mnemonic		448737	1					
ANR	448830	Argument	"""repnz"""		448737	1					
ANR	448831	PrimaryExpression	"""repnz"""		448737	0					
ANR	448832	CompoundStatement		10:45:276:276	448737	1					
ANR	448833	ExpressionStatement	data [ l ++ ] = 0xf2	4933:2:123567:123583	448737	0	True				
ANR	448834	AssignmentExpression	data [ l ++ ] = 0xf2		448737	0		=			
ANR	448835	ArrayIndexing	data [ l ++ ]		448737	0					
ANR	448836	Identifier	data		448737	0					
ANR	448837	PostIncDecOperationExpression	l ++		448737	1					
ANR	448838	Identifier	l		448737	0					
ANR	448839	IncDec	++		448737	1					
ANR	448840	PrimaryExpression	0xf2		448737	1					
ANR	448841	IdentifierDeclStatement	Opcode instr = { 0 } ;	4935:1:123589:123607	448737	4	True				
ANR	448842	IdentifierDecl	instr = { 0 }		448737	0					
ANR	448843	IdentifierDeclType	Opcode		448737	0					
ANR	448844	Identifier	instr		448737	1					
ANR	448845	AssignmentExpression	instr = { 0 }		448737	2		=			
ANR	448846	Identifier	instr		448737	0					
ANR	448847	InitializerList	0		448737	1					
ANR	448848	PrimaryExpression	0		448737	0					
ANR	448849	ExpressionStatement	"parseOpcode ( a , op -> operands [ 0 ] . rep_op , & instr )"	4936:1:123610:123657	448737	5	True				
ANR	448850	CallExpression	"parseOpcode ( a , op -> operands [ 0 ] . rep_op , & instr )"		448737	0					
ANR	448851	Callee	parseOpcode		448737	0					
ANR	448852	Identifier	parseOpcode		448737	0					
ANR	448853	ArgumentList	a		448737	1					
ANR	448854	Argument	a		448737	0					
ANR	448855	Identifier	a		448737	0					
ANR	448856	Argument	op -> operands [ 0 ] . rep_op		448737	1					
ANR	448857	MemberAccess	op -> operands [ 0 ] . rep_op		448737	0					
ANR	448858	ArrayIndexing	op -> operands [ 0 ]		448737	0					
ANR	448859	PtrMemberAccess	op -> operands		448737	0					
ANR	448860	Identifier	op		448737	0					
ANR	448861	Identifier	operands		448737	1					
ANR	448862	PrimaryExpression	0		448737	1					
ANR	448863	Identifier	rep_op		448737	1					
ANR	448864	Argument	& instr		448737	2					
ANR	448865	UnaryOperationExpression	& instr		448737	0					
ANR	448866	UnaryOperator	&		448737	0					
ANR	448867	Identifier	instr		448737	1					
ANR	448868	ForStatement	"for ( lt_ptr = oplookup ; strcmp ( lt_ptr -> mnemonic , ""null"" ) ; lt_ptr ++ )"		448737	6					
ANR	448869	ForInit	lt_ptr = oplookup ;	4938:6:123666:123683	448737	0	True				
ANR	448870	AssignmentExpression	lt_ptr = oplookup		448737	0		=			
ANR	448871	Identifier	lt_ptr		448737	0					
ANR	448872	Identifier	oplookup		448737	1					
ANR	448873	Condition	"strcmp ( lt_ptr -> mnemonic , ""null"" )"	4938:25:123685:123717	448737	1	True				
ANR	448874	CallExpression	"strcmp ( lt_ptr -> mnemonic , ""null"" )"		448737	0					
ANR	448875	Callee	strcmp		448737	0					
ANR	448876	Identifier	strcmp		448737	0					
ANR	448877	ArgumentList	lt_ptr -> mnemonic		448737	1					
ANR	448878	Argument	lt_ptr -> mnemonic		448737	0					
ANR	448879	PtrMemberAccess	lt_ptr -> mnemonic		448737	0					
ANR	448880	Identifier	lt_ptr		448737	0					
ANR	448881	Identifier	mnemonic		448737	1					
ANR	448882	Argument	"""null"""		448737	1					
ANR	448883	PrimaryExpression	"""null"""		448737	0					
ANR	448884	PostIncDecOperationExpression	lt_ptr ++	4938:60:123720:123727	448737	2	True				
ANR	448885	Identifier	lt_ptr		448737	0					
ANR	448886	IncDec	++		448737	1					
ANR	448887	CompoundStatement		16:70:443:443	448737	3					
ANR	448888	IfStatement	"if ( ! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic ) )"		448737	0					
ANR	448889	Condition	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"	4939:6:123738:123786	448737	0	True				
ANR	448890	UnaryOperationExpression	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		448737	0					
ANR	448891	UnaryOperator	!		448737	0					
ANR	448892	CallExpression	"r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		448737	1					
ANR	448893	Callee	r_str_casecmp		448737	0					
ANR	448894	Identifier	r_str_casecmp		448737	0					
ANR	448895	ArgumentList	instr . mnemonic		448737	1					
ANR	448896	Argument	instr . mnemonic		448737	0					
ANR	448897	MemberAccess	instr . mnemonic		448737	0					
ANR	448898	Identifier	instr		448737	0					
ANR	448899	Identifier	mnemonic		448737	1					
ANR	448900	Argument	lt_ptr -> mnemonic		448737	1					
ANR	448901	PtrMemberAccess	lt_ptr -> mnemonic		448737	0					
ANR	448902	Identifier	lt_ptr		448737	0					
ANR	448903	Identifier	mnemonic		448737	1					
ANR	448904	CompoundStatement		17:57:502:502	448737	1					
ANR	448905	IfStatement	if ( lt_ptr -> opcode > 0 )		448737	0					
ANR	448906	Condition	lt_ptr -> opcode > 0	4940:7:123798:123815	448737	0	True				
ANR	448907	RelationalExpression	lt_ptr -> opcode > 0		448737	0		>			
ANR	448908	PtrMemberAccess	lt_ptr -> opcode		448737	0					
ANR	448909	Identifier	lt_ptr		448737	0					
ANR	448910	Identifier	opcode		448737	1					
ANR	448911	PrimaryExpression	0		448737	1					
ANR	448912	CompoundStatement		24:4:671:680	448737	1					
ANR	448913	IfStatement	if ( lt_ptr -> only_x32 && a -> bits == 64 )		448737	0					
ANR	448914	Condition	lt_ptr -> only_x32 && a -> bits == 64	4941:8:123828:123860	448737	0	True				
ANR	448915	AndExpression	lt_ptr -> only_x32 && a -> bits == 64		448737	0		&&			
ANR	448916	PtrMemberAccess	lt_ptr -> only_x32		448737	0					
ANR	448917	Identifier	lt_ptr		448737	0					
ANR	448918	Identifier	only_x32		448737	1					
ANR	448919	EqualityExpression	a -> bits == 64		448737	1		==			
ANR	448920	PtrMemberAccess	a -> bits		448737	0					
ANR	448921	Identifier	a		448737	0					
ANR	448922	Identifier	bits		448737	1					
ANR	448923	PrimaryExpression	64		448737	1					
ANR	448924	CompoundStatement		19:43:576:576	448737	1					
ANR	448925	ExpressionStatement	free ( instr . mnemonic )	4942:5:123870:123891	448737	0	True				
ANR	448926	CallExpression	free ( instr . mnemonic )		448737	0					
ANR	448927	Callee	free		448737	0					
ANR	448928	Identifier	free		448737	0					
ANR	448929	ArgumentList	instr . mnemonic		448737	1					
ANR	448930	Argument	instr . mnemonic		448737	0					
ANR	448931	MemberAccess	instr . mnemonic		448737	0					
ANR	448932	Identifier	instr		448737	0					
ANR	448933	Identifier	mnemonic		448737	1					
ANR	448934	ReturnStatement	return - 1 ;	4943:5:123898:123907	448737	1	True				
ANR	448935	UnaryOperationExpression	- 1		448737	0					
ANR	448936	UnaryOperator	-		448737	0					
ANR	448937	PrimaryExpression	1		448737	1					
ANR	448938	IdentifierDeclStatement	ut8 * ptr = ( ut8 * ) & lt_ptr -> opcode ;	4945:4:123919:123952	448737	1	True				
ANR	448939	IdentifierDecl	* ptr = ( ut8 * ) & lt_ptr -> opcode		448737	0					
ANR	448940	IdentifierDeclType	ut8 *		448737	0					
ANR	448941	Identifier	ptr		448737	1					
ANR	448942	AssignmentExpression	* ptr = ( ut8 * ) & lt_ptr -> opcode		448737	2		=			
ANR	448943	Identifier	ptr		448737	0					
ANR	448944	CastExpression	( ut8 * ) & lt_ptr -> opcode		448737	1					
ANR	448945	CastTarget	ut8 *		448737	0					
ANR	448946	UnaryOperationExpression	& lt_ptr -> opcode		448737	1					
ANR	448947	UnaryOperator	&		448737	0					
ANR	448948	PtrMemberAccess	lt_ptr -> opcode		448737	1					
ANR	448949	Identifier	lt_ptr		448737	0					
ANR	448950	Identifier	opcode		448737	1					
ANR	448951	IdentifierDeclStatement	int i = 0 ;	4946:4:123958:123967	448737	2	True				
ANR	448952	IdentifierDecl	i = 0		448737	0					
ANR	448953	IdentifierDeclType	int		448737	0					
ANR	448954	Identifier	i		448737	1					
ANR	448955	AssignmentExpression	i = 0		448737	2		=			
ANR	448956	Identifier	i		448737	0					
ANR	448957	PrimaryExpression	0		448737	1					
ANR	448958	ForStatement	for ( ; i < lt_ptr -> size ; i ++ )		448737	3					
ANR	448959	Condition	i < lt_ptr -> size	4947:11:123980:123995	448737	0	True				
ANR	448960	RelationalExpression	i < lt_ptr -> size		448737	0		<			
ANR	448961	Identifier	i		448737	0					
ANR	448962	PtrMemberAccess	lt_ptr -> size		448737	1					
ANR	448963	Identifier	lt_ptr		448737	0					
ANR	448964	Identifier	size		448737	1					
ANR	448965	PostIncDecOperationExpression	i ++	4947:29:123998:124000	448737	1	True				
ANR	448966	Identifier	i		448737	0					
ANR	448967	IncDec	++		448737	1					
ANR	448968	CompoundStatement		25:34:716:716	448737	2					
ANR	448969	ExpressionStatement	data [ i + l ] = ptr [ lt_ptr -> size - ( i + 1 ) ]	4948:5:124010:124051	448737	0	True				
ANR	448970	AssignmentExpression	data [ i + l ] = ptr [ lt_ptr -> size - ( i + 1 ) ]		448737	0		=			
ANR	448971	ArrayIndexing	data [ i + l ]		448737	0					
ANR	448972	Identifier	data		448737	0					
ANR	448973	AdditiveExpression	i + l		448737	1		+			
ANR	448974	Identifier	i		448737	0					
ANR	448975	Identifier	l		448737	1					
ANR	448976	ArrayIndexing	ptr [ lt_ptr -> size - ( i + 1 ) ]		448737	1					
ANR	448977	Identifier	ptr		448737	0					
ANR	448978	AdditiveExpression	lt_ptr -> size - ( i + 1 )		448737	1		-			
ANR	448979	PtrMemberAccess	lt_ptr -> size		448737	0					
ANR	448980	Identifier	lt_ptr		448737	0					
ANR	448981	Identifier	size		448737	1					
ANR	448982	AdditiveExpression	i + 1		448737	1		+			
ANR	448983	Identifier	i		448737	0					
ANR	448984	PrimaryExpression	1		448737	1					
ANR	448985	ExpressionStatement	free ( instr . mnemonic )	4950:4:124063:124084	448737	4	True				
ANR	448986	CallExpression	free ( instr . mnemonic )		448737	0					
ANR	448987	Callee	free		448737	0					
ANR	448988	Identifier	free		448737	0					
ANR	448989	ArgumentList	instr . mnemonic		448737	1					
ANR	448990	Argument	instr . mnemonic		448737	0					
ANR	448991	MemberAccess	instr . mnemonic		448737	0					
ANR	448992	Identifier	instr		448737	0					
ANR	448993	Identifier	mnemonic		448737	1					
ANR	448994	ReturnStatement	return l + lt_ptr -> size ;	4951:4:124090:124113	448737	5	True				
ANR	448995	AdditiveExpression	l + lt_ptr -> size		448737	0		+			
ANR	448996	Identifier	l		448737	0					
ANR	448997	PtrMemberAccess	lt_ptr -> size		448737	1					
ANR	448998	Identifier	lt_ptr		448737	0					
ANR	448999	Identifier	size		448737	1					
ANR	449000	ElseStatement	else		448737	0					
ANR	449001	CompoundStatement		30:10:838:838	448737	0					
ANR	449002	IfStatement	if ( lt_ptr -> opdo )		448737	0					
ANR	449003	Condition	lt_ptr -> opdo	4953:8:124135:124146	448737	0	True				
ANR	449004	PtrMemberAccess	lt_ptr -> opdo		448737	0					
ANR	449005	Identifier	lt_ptr		448737	0					
ANR	449006	Identifier	opdo		448737	1					
ANR	449007	CompoundStatement		31:22:862:862	448737	1					
ANR	449008	ExpressionStatement	data += l	4954:5:124156:124165	448737	0	True				
ANR	449009	AssignmentExpression	data += l		448737	0		+=			
ANR	449010	Identifier	data		448737	0					
ANR	449011	Identifier	l		448737	1					
ANR	449012	IfStatement	if ( instr . has_bnd )		448737	1					
ANR	449013	Condition	instr . has_bnd	4955:9:124176:124188	448737	0	True				
ANR	449014	MemberAccess	instr . has_bnd		448737	0					
ANR	449015	Identifier	instr		448737	0					
ANR	449016	Identifier	has_bnd		448737	1					
ANR	449017	CompoundStatement		33:24:904:904	448737	1					
ANR	449018	ExpressionStatement	data [ l ] = 0xf2	4956:6:124199:124213	448737	0	True				
ANR	449019	AssignmentExpression	data [ l ] = 0xf2		448737	0		=			
ANR	449020	ArrayIndexing	data [ l ]		448737	0					
ANR	449021	Identifier	data		448737	0					
ANR	449022	Identifier	l		448737	1					
ANR	449023	PrimaryExpression	0xf2		448737	1					
ANR	449024	ExpressionStatement	data ++	4957:6:124221:124227	448737	1	True				
ANR	449025	PostIncDecOperationExpression	data ++		448737	0					
ANR	449026	Identifier	data		448737	0					
ANR	449027	IncDec	++		448737	1					
ANR	449028	ExpressionStatement	"retval = lt_ptr -> opdo ( a , data , & instr )"	4959:5:124241:124280	448737	2	True				
ANR	449029	AssignmentExpression	"retval = lt_ptr -> opdo ( a , data , & instr )"		448737	0		=			
ANR	449030	Identifier	retval		448737	0					
ANR	449031	CallExpression	"lt_ptr -> opdo ( a , data , & instr )"		448737	1					
ANR	449032	Callee	lt_ptr -> opdo		448737	0					
ANR	449033	PtrMemberAccess	lt_ptr -> opdo		448737	0					
ANR	449034	Identifier	lt_ptr		448737	0					
ANR	449035	Identifier	opdo		448737	1					
ANR	449036	ArgumentList	a		448737	1					
ANR	449037	Argument	a		448737	0					
ANR	449038	Identifier	a		448737	0					
ANR	449039	Argument	data		448737	1					
ANR	449040	Identifier	data		448737	0					
ANR	449041	Argument	& instr		448737	2					
ANR	449042	UnaryOperationExpression	& instr		448737	0					
ANR	449043	UnaryOperator	&		448737	0					
ANR	449044	Identifier	instr		448737	1					
ANR	449045	IfStatement	if ( instr . has_bnd )		448737	3					
ANR	449046	Condition	instr . has_bnd	4962:9:124360:124372	448737	0	True				
ANR	449047	MemberAccess	instr . has_bnd		448737	0					
ANR	449048	Identifier	instr		448737	0					
ANR	449049	Identifier	has_bnd		448737	1					
ANR	449050	CompoundStatement		40:24:1088:1088	448737	1					
ANR	449051	ExpressionStatement	retval ++	4963:6:124383:124391	448737	0	True				
ANR	449052	PostIncDecOperationExpression	retval ++		448737	0					
ANR	449053	Identifier	retval		448737	0					
ANR	449054	IncDec	++		448737	1					
ANR	449055	ReturnStatement	return l + retval ;	4965:5:124405:124422	448737	4	True				
ANR	449056	AdditiveExpression	l + retval		448737	0		+			
ANR	449057	Identifier	l		448737	0					
ANR	449058	Identifier	retval		448737	1					
ANR	449059	BreakStatement	break ;	4967:4:124434:124439	448737	1	True				
ANR	449060	ExpressionStatement	free ( instr . mnemonic )	4971:1:124454:124475	448737	7	True				
ANR	449061	CallExpression	free ( instr . mnemonic )		448737	0					
ANR	449062	Callee	free		448737	0					
ANR	449063	Identifier	free		448737	0					
ANR	449064	ArgumentList	instr . mnemonic		448737	1					
ANR	449065	Argument	instr . mnemonic		448737	0					
ANR	449066	MemberAccess	instr . mnemonic		448737	0					
ANR	449067	Identifier	instr		448737	0					
ANR	449068	Identifier	mnemonic		448737	1					
ANR	449069	ReturnStatement	return - 1 ;	4972:1:124478:124487	448737	8	True				
ANR	449070	UnaryOperationExpression	- 1		448737	0					
ANR	449071	UnaryOperator	-		448737	0					
ANR	449072	PrimaryExpression	1		448737	1					
ANR	449073	ReturnType	static int		448737	1					
ANR	449074	Identifier	oprep		448737	2					
ANR	449075	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		448737	3					
ANR	449076	Parameter	RAsm * a	4923:17:123248:123254	448737	0	True				
ANR	449077	ParameterType	RAsm *		448737	0					
ANR	449078	Identifier	a		448737	1					
ANR	449079	Parameter	ut8 * data	4923:26:123257:123265	448737	1	True				
ANR	449080	ParameterType	ut8 *		448737	0					
ANR	449081	Identifier	data		448737	1					
ANR	449082	Parameter	const Opcode * op	4923:37:123268:123283	448737	2	True				
ANR	449083	ParameterType	const Opcode *		448737	0					
ANR	449084	Identifier	op		448737	1					
ANR	449085	CFGEntryNode	ENTRY		448737		True				
ANR	449086	CFGExitNode	EXIT		448737		True				
ANR	449087	Symbol	instr . mnemonic		448737						
ANR	449088	Symbol	lt_ptr -> opcode		448737						
ANR	449089	Symbol	data		448737						
ANR	449090	Symbol	* op		448737						
ANR	449091	Symbol	op -> mnemonic		448737						
ANR	449092	Symbol	lt_ptr -> only_x32		448737						
ANR	449093	Symbol	* * lt_ptr		448737						
ANR	449094	Symbol	* * op		448737						
ANR	449095	Symbol	* op -> operands		448737						
ANR	449096	Symbol	instr		448737						
ANR	449097	Symbol	* ptr		448737						
ANR	449098	Symbol	op -> operands [ 0 ] . rep_op		448737						
ANR	449099	Symbol	lt_ptr -> opdo		448737						
ANR	449100	Symbol	r_str_casecmp		448737						
ANR	449101	Symbol	a -> bits		448737						
ANR	449102	Symbol	strcmp		448737						
ANR	449103	Symbol	a		448737						
ANR	449104	Symbol	op		448737						
ANR	449105	Symbol	instr . has_bnd		448737						
ANR	449106	Symbol	oplookup		448737						
ANR	449107	Symbol	i		448737						
ANR	449108	Symbol	lt_ptr -> size		448737						
ANR	449109	Symbol	* a		448737						
ANR	449110	Symbol	l		448737						
ANR	449111	Symbol	lt_ptr		448737						
ANR	449112	Symbol	retval		448737						
ANR	449113	Symbol	ptr		448737						
ANR	449114	Symbol	& instr		448737						
ANR	449115	Symbol	* i		448737						
ANR	449116	Symbol	* l		448737						
ANR	449117	Symbol	& lt_ptr -> opcode		448737						
ANR	449118	Symbol	* lt_ptr -> size		448737						
ANR	449119	Symbol	op -> operands		448737						
ANR	449120	Symbol	* data		448737						
ANR	449121	Symbol	lt_ptr -> mnemonic		448737						
ANR	449122	Symbol	* lt_ptr		448737						
ANR	449123	Function	assemble	4975:0:124492:125555							
ANR	449124	FunctionDef	"assemble (RAsm * a , RAsmOp * ao , const char * str)"		449123	0					
ANR	449125	CompoundStatement		4975:58:124550:125555	449123	0					
ANR	449126	IdentifierDeclStatement	ut8 __data [ 32 ] = { 0 } ;	4976:1:124553:124573	449123	0	True				
ANR	449127	IdentifierDecl	__data [ 32 ] = { 0 }		449123	0					
ANR	449128	IdentifierDeclType	ut8 [ 32 ]		449123	0					
ANR	449129	Identifier	__data		449123	1					
ANR	449130	PrimaryExpression	32		449123	2					
ANR	449131	AssignmentExpression	__data [ 32 ] = { 0 }		449123	3		=			
ANR	449132	Identifier	__data		449123	0					
ANR	449133	InitializerList	0		449123	1					
ANR	449134	PrimaryExpression	0		449123	0					
ANR	449135	IdentifierDeclStatement	ut8 * data = __data ;	4977:1:124576:124594	449123	1	True				
ANR	449136	IdentifierDecl	* data = __data		449123	0					
ANR	449137	IdentifierDeclType	ut8 *		449123	0					
ANR	449138	Identifier	data		449123	1					
ANR	449139	AssignmentExpression	* data = __data		449123	2		=			
ANR	449140	Identifier	__data		449123	0					
ANR	449141	Identifier	__data		449123	1					
ANR	449142	IdentifierDeclStatement	char op [ 128 ] ;	4978:1:124597:124609	449123	2	True				
ANR	449143	IdentifierDecl	op [ 128 ]		449123	0					
ANR	449144	IdentifierDeclType	char [ 128 ]		449123	0					
ANR	449145	Identifier	op		449123	1					
ANR	449146	PrimaryExpression	128		449123	2					
ANR	449147	IdentifierDeclStatement	LookupTable * lt_ptr ;	4979:1:124612:124631	449123	3	True				
ANR	449148	IdentifierDecl	* lt_ptr		449123	0					
ANR	449149	IdentifierDeclType	LookupTable *		449123	0					
ANR	449150	Identifier	lt_ptr		449123	1					
ANR	449151	IdentifierDeclStatement	int retval = - 1 ;	4980:1:124634:124649	449123	4	True				
ANR	449152	IdentifierDecl	retval = - 1		449123	0					
ANR	449153	IdentifierDeclType	int		449123	0					
ANR	449154	Identifier	retval		449123	1					
ANR	449155	AssignmentExpression	retval = - 1		449123	2		=			
ANR	449156	Identifier	retval		449123	0					
ANR	449157	UnaryOperationExpression	- 1		449123	1					
ANR	449158	UnaryOperator	-		449123	0					
ANR	449159	PrimaryExpression	1		449123	1					
ANR	449160	IdentifierDeclStatement	Opcode instr = { 0 } ;	4981:1:124652:124670	449123	5	True				
ANR	449161	IdentifierDecl	instr = { 0 }		449123	0					
ANR	449162	IdentifierDeclType	Opcode		449123	0					
ANR	449163	Identifier	instr		449123	1					
ANR	449164	AssignmentExpression	instr = { 0 }		449123	2		=			
ANR	449165	Identifier	instr		449123	0					
ANR	449166	InitializerList	0		449123	1					
ANR	449167	PrimaryExpression	0		449123	0					
ANR	449168	ExpressionStatement	"strncpy ( op , str , sizeof ( op ) - 1 )"	4983:1:124674:124708	449123	6	True				
ANR	449169	CallExpression	"strncpy ( op , str , sizeof ( op ) - 1 )"		449123	0					
ANR	449170	Callee	strncpy		449123	0					
ANR	449171	Identifier	strncpy		449123	0					
ANR	449172	ArgumentList	op		449123	1					
ANR	449173	Argument	op		449123	0					
ANR	449174	Identifier	op		449123	0					
ANR	449175	Argument	str		449123	1					
ANR	449176	Identifier	str		449123	0					
ANR	449177	Argument	sizeof ( op ) - 1		449123	2					
ANR	449178	AdditiveExpression	sizeof ( op ) - 1		449123	0		-			
ANR	449179	SizeofExpression	sizeof ( op )		449123	0					
ANR	449180	Sizeof	sizeof		449123	0					
ANR	449181	SizeofOperand	op		449123	1					
ANR	449182	PrimaryExpression	1		449123	1					
ANR	449183	ExpressionStatement	op [ sizeof ( op ) - 1 ] = '\\0'	4984:1:124711:124737	449123	7	True				
ANR	449184	AssignmentExpression	op [ sizeof ( op ) - 1 ] = '\\0'		449123	0		=			
ANR	449185	ArrayIndexing	op [ sizeof ( op ) - 1 ]		449123	0					
ANR	449186	Identifier	op		449123	0					
ANR	449187	AdditiveExpression	sizeof ( op ) - 1		449123	1		-			
ANR	449188	SizeofExpression	sizeof ( op )		449123	0					
ANR	449189	Sizeof	sizeof		449123	0					
ANR	449190	SizeofOperand	op		449123	1					
ANR	449191	PrimaryExpression	1		449123	1					
ANR	449192	PrimaryExpression	'\\0'		449123	1					
ANR	449193	ExpressionStatement	"parseOpcode ( a , op , & instr )"	4985:1:124740:124767	449123	8	True				
ANR	449194	CallExpression	"parseOpcode ( a , op , & instr )"		449123	0					
ANR	449195	Callee	parseOpcode		449123	0					
ANR	449196	Identifier	parseOpcode		449123	0					
ANR	449197	ArgumentList	a		449123	1					
ANR	449198	Argument	a		449123	0					
ANR	449199	Identifier	a		449123	0					
ANR	449200	Argument	op		449123	1					
ANR	449201	Identifier	op		449123	0					
ANR	449202	Argument	& instr		449123	2					
ANR	449203	UnaryOperationExpression	& instr		449123	0					
ANR	449204	UnaryOperator	&		449123	0					
ANR	449205	Identifier	instr		449123	1					
ANR	449206	ForStatement	"for ( lt_ptr = oplookup ; strcmp ( lt_ptr -> mnemonic , ""null"" ) ; lt_ptr ++ )"		449123	9					
ANR	449207	ForInit	lt_ptr = oplookup ;	4986:6:124775:124792	449123	0	True				
ANR	449208	AssignmentExpression	lt_ptr = oplookup		449123	0		=			
ANR	449209	Identifier	lt_ptr		449123	0					
ANR	449210	Identifier	oplookup		449123	1					
ANR	449211	Condition	"strcmp ( lt_ptr -> mnemonic , ""null"" )"	4986:25:124794:124826	449123	1	True				
ANR	449212	CallExpression	"strcmp ( lt_ptr -> mnemonic , ""null"" )"		449123	0					
ANR	449213	Callee	strcmp		449123	0					
ANR	449214	Identifier	strcmp		449123	0					
ANR	449215	ArgumentList	lt_ptr -> mnemonic		449123	1					
ANR	449216	Argument	lt_ptr -> mnemonic		449123	0					
ANR	449217	PtrMemberAccess	lt_ptr -> mnemonic		449123	0					
ANR	449218	Identifier	lt_ptr		449123	0					
ANR	449219	Identifier	mnemonic		449123	1					
ANR	449220	Argument	"""null"""		449123	1					
ANR	449221	PrimaryExpression	"""null"""		449123	0					
ANR	449222	PostIncDecOperationExpression	lt_ptr ++	4986:60:124829:124836	449123	2	True				
ANR	449223	Identifier	lt_ptr		449123	0					
ANR	449224	IncDec	++		449123	1					
ANR	449225	CompoundStatement		12:70:288:288	449123	3					
ANR	449226	IfStatement	"if ( ! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic ) )"		449123	0					
ANR	449227	Condition	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"	4987:6:124847:124895	449123	0	True				
ANR	449228	UnaryOperationExpression	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		449123	0					
ANR	449229	UnaryOperator	!		449123	0					
ANR	449230	CallExpression	"r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		449123	1					
ANR	449231	Callee	r_str_casecmp		449123	0					
ANR	449232	Identifier	r_str_casecmp		449123	0					
ANR	449233	ArgumentList	instr . mnemonic		449123	1					
ANR	449234	Argument	instr . mnemonic		449123	0					
ANR	449235	MemberAccess	instr . mnemonic		449123	0					
ANR	449236	Identifier	instr		449123	0					
ANR	449237	Identifier	mnemonic		449123	1					
ANR	449238	Argument	lt_ptr -> mnemonic		449123	1					
ANR	449239	PtrMemberAccess	lt_ptr -> mnemonic		449123	0					
ANR	449240	Identifier	lt_ptr		449123	0					
ANR	449241	Identifier	mnemonic		449123	1					
ANR	449242	CompoundStatement		13:57:347:347	449123	1					
ANR	449243	IfStatement	if ( lt_ptr -> opcode > 0 )		449123	0					
ANR	449244	Condition	lt_ptr -> opcode > 0	4988:7:124907:124924	449123	0	True				
ANR	449245	RelationalExpression	lt_ptr -> opcode > 0		449123	0		>			
ANR	449246	PtrMemberAccess	lt_ptr -> opcode		449123	0					
ANR	449247	Identifier	lt_ptr		449123	0					
ANR	449248	Identifier	opcode		449123	1					
ANR	449249	PrimaryExpression	0		449123	1					
ANR	449250	CompoundStatement		14:27:376:376	449123	1					
ANR	449251	IfStatement	if ( ! lt_ptr -> only_x32 || a -> bits != 64 )		449123	0					
ANR	449252	Condition	! lt_ptr -> only_x32 || a -> bits != 64	4989:8:124937:124970	449123	0	True				
ANR	449253	OrExpression	! lt_ptr -> only_x32 || a -> bits != 64		449123	0		||			
ANR	449254	UnaryOperationExpression	! lt_ptr -> only_x32		449123	0					
ANR	449255	UnaryOperator	!		449123	0					
ANR	449256	PtrMemberAccess	lt_ptr -> only_x32		449123	1					
ANR	449257	Identifier	lt_ptr		449123	0					
ANR	449258	Identifier	only_x32		449123	1					
ANR	449259	EqualityExpression	a -> bits != 64		449123	1		!=			
ANR	449260	PtrMemberAccess	a -> bits		449123	0					
ANR	449261	Identifier	a		449123	0					
ANR	449262	Identifier	bits		449123	1					
ANR	449263	PrimaryExpression	64		449123	1					
ANR	449264	CompoundStatement		17:5:469:478	449123	1					
ANR	449265	IdentifierDeclStatement	ut8 * ptr = ( ut8 * ) & lt_ptr -> opcode ;	4990:5:124980:125013	449123	0	True				
ANR	449266	IdentifierDecl	* ptr = ( ut8 * ) & lt_ptr -> opcode		449123	0					
ANR	449267	IdentifierDeclType	ut8 *		449123	0					
ANR	449268	Identifier	ptr		449123	1					
ANR	449269	AssignmentExpression	* ptr = ( ut8 * ) & lt_ptr -> opcode		449123	2		=			
ANR	449270	Identifier	ptr		449123	0					
ANR	449271	CastExpression	( ut8 * ) & lt_ptr -> opcode		449123	1					
ANR	449272	CastTarget	ut8 *		449123	0					
ANR	449273	UnaryOperationExpression	& lt_ptr -> opcode		449123	1					
ANR	449274	UnaryOperator	&		449123	0					
ANR	449275	PtrMemberAccess	lt_ptr -> opcode		449123	1					
ANR	449276	Identifier	lt_ptr		449123	0					
ANR	449277	Identifier	opcode		449123	1					
ANR	449278	IdentifierDeclStatement	int i = 0 ;	4991:5:125020:125029	449123	1	True				
ANR	449279	IdentifierDecl	i = 0		449123	0					
ANR	449280	IdentifierDeclType	int		449123	0					
ANR	449281	Identifier	i		449123	1					
ANR	449282	AssignmentExpression	i = 0		449123	2		=			
ANR	449283	Identifier	i		449123	0					
ANR	449284	PrimaryExpression	0		449123	1					
ANR	449285	ForStatement	for ( ; i < lt_ptr -> size ; i ++ )		449123	2					
ANR	449286	Condition	i < lt_ptr -> size	4992:12:125043:125058	449123	0	True				
ANR	449287	RelationalExpression	i < lt_ptr -> size		449123	0		<			
ANR	449288	Identifier	i		449123	0					
ANR	449289	PtrMemberAccess	lt_ptr -> size		449123	1					
ANR	449290	Identifier	lt_ptr		449123	0					
ANR	449291	Identifier	size		449123	1					
ANR	449292	PostIncDecOperationExpression	i ++	4992:30:125061:125063	449123	1	True				
ANR	449293	Identifier	i		449123	0					
ANR	449294	IncDec	++		449123	1					
ANR	449295	CompoundStatement		18:35:515:515	449123	2					
ANR	449296	ExpressionStatement	data [ i ] = ptr [ lt_ptr -> size - ( i + 1 ) ]	4993:6:125074:125111	449123	0	True				
ANR	449297	AssignmentExpression	data [ i ] = ptr [ lt_ptr -> size - ( i + 1 ) ]		449123	0		=			
ANR	449298	ArrayIndexing	data [ i ]		449123	0					
ANR	449299	Identifier	data		449123	0					
ANR	449300	Identifier	i		449123	1					
ANR	449301	ArrayIndexing	ptr [ lt_ptr -> size - ( i + 1 ) ]		449123	1					
ANR	449302	Identifier	ptr		449123	0					
ANR	449303	AdditiveExpression	lt_ptr -> size - ( i + 1 )		449123	1		-			
ANR	449304	PtrMemberAccess	lt_ptr -> size		449123	0					
ANR	449305	Identifier	lt_ptr		449123	0					
ANR	449306	Identifier	size		449123	1					
ANR	449307	AdditiveExpression	i + 1		449123	1		+			
ANR	449308	Identifier	i		449123	0					
ANR	449309	PrimaryExpression	1		449123	1					
ANR	449310	ExpressionStatement	retval = lt_ptr -> size	4995:5:125125:125146	449123	3	True				
ANR	449311	AssignmentExpression	retval = lt_ptr -> size		449123	0		=			
ANR	449312	Identifier	retval		449123	0					
ANR	449313	PtrMemberAccess	lt_ptr -> size		449123	1					
ANR	449314	Identifier	lt_ptr		449123	0					
ANR	449315	Identifier	size		449123	1					
ANR	449316	ElseStatement	else		449123	0					
ANR	449317	CompoundStatement		23:10:613:613	449123	0					
ANR	449318	IfStatement	if ( lt_ptr -> opdo )		449123	0					
ANR	449319	Condition	lt_ptr -> opdo	4998:8:125174:125185	449123	0	True				
ANR	449320	PtrMemberAccess	lt_ptr -> opdo		449123	0					
ANR	449321	Identifier	lt_ptr		449123	0					
ANR	449322	Identifier	opdo		449123	1					
ANR	449323	CompoundStatement		24:22:637:637	449123	1					
ANR	449324	IfStatement	if ( instr . has_bnd )		449123	0					
ANR	449325	Condition	instr . has_bnd	4999:9:125199:125211	449123	0	True				
ANR	449326	MemberAccess	instr . has_bnd		449123	0					
ANR	449327	Identifier	instr		449123	0					
ANR	449328	Identifier	has_bnd		449123	1					
ANR	449329	CompoundStatement		25:24:663:663	449123	1					
ANR	449330	ExpressionStatement	data [ 0 ] = 0xf2	5000:6:125222:125236	449123	0	True				
ANR	449331	AssignmentExpression	data [ 0 ] = 0xf2		449123	0		=			
ANR	449332	ArrayIndexing	data [ 0 ]		449123	0					
ANR	449333	Identifier	data		449123	0					
ANR	449334	PrimaryExpression	0		449123	1					
ANR	449335	PrimaryExpression	0xf2		449123	1					
ANR	449336	ExpressionStatement	data ++	5001:6:125244:125251	449123	1	True				
ANR	449337	PostIncDecOperationExpression	data ++		449123	0					
ANR	449338	Identifier	data		449123	0					
ANR	449339	IncDec	++		449123	1					
ANR	449340	ExpressionStatement	"retval = lt_ptr -> opdo ( a , data , & instr )"	5003:5:125265:125304	449123	1	True				
ANR	449341	AssignmentExpression	"retval = lt_ptr -> opdo ( a , data , & instr )"		449123	0		=			
ANR	449342	Identifier	retval		449123	0					
ANR	449343	CallExpression	"lt_ptr -> opdo ( a , data , & instr )"		449123	1					
ANR	449344	Callee	lt_ptr -> opdo		449123	0					
ANR	449345	PtrMemberAccess	lt_ptr -> opdo		449123	0					
ANR	449346	Identifier	lt_ptr		449123	0					
ANR	449347	Identifier	opdo		449123	1					
ANR	449348	ArgumentList	a		449123	1					
ANR	449349	Argument	a		449123	0					
ANR	449350	Identifier	a		449123	0					
ANR	449351	Argument	data		449123	1					
ANR	449352	Identifier	data		449123	0					
ANR	449353	Argument	& instr		449123	2					
ANR	449354	UnaryOperationExpression	& instr		449123	0					
ANR	449355	UnaryOperator	&		449123	0					
ANR	449356	Identifier	instr		449123	1					
ANR	449357	IfStatement	if ( instr . has_bnd )		449123	2					
ANR	449358	Condition	instr . has_bnd	5006:9:125384:125396	449123	0	True				
ANR	449359	MemberAccess	instr . has_bnd		449123	0					
ANR	449360	Identifier	instr		449123	0					
ANR	449361	Identifier	has_bnd		449123	1					
ANR	449362	CompoundStatement		32:24:848:848	449123	1					
ANR	449363	ExpressionStatement	retval ++	5007:6:125407:125415	449123	0	True				
ANR	449364	PostIncDecOperationExpression	retval ++		449123	0					
ANR	449365	Identifier	retval		449123	0					
ANR	449366	IncDec	++		449123	1					
ANR	449367	BreakStatement	break ;	5011:3:125438:125443	449123	1	True				
ANR	449368	IfStatement	if ( retval > 0 )		449123	10					
ANR	449369	Condition	retval > 0	5014:5:125457:125466	449123	0	True				
ANR	449370	RelationalExpression	retval > 0		449123	0		>			
ANR	449371	Identifier	retval		449123	0					
ANR	449372	PrimaryExpression	0		449123	1					
ANR	449373	CompoundStatement		40:17:918:918	449123	1					
ANR	449374	ExpressionStatement	"r_asm_op_set_buf ( ao , __data , retval )"	5015:2:125473:125510	449123	0	True				
ANR	449375	CallExpression	"r_asm_op_set_buf ( ao , __data , retval )"		449123	0					
ANR	449376	Callee	r_asm_op_set_buf		449123	0					
ANR	449377	Identifier	r_asm_op_set_buf		449123	0					
ANR	449378	ArgumentList	ao		449123	1					
ANR	449379	Argument	ao		449123	0					
ANR	449380	Identifier	ao		449123	0					
ANR	449381	Argument	__data		449123	1					
ANR	449382	Identifier	__data		449123	0					
ANR	449383	Argument	retval		449123	2					
ANR	449384	Identifier	retval		449123	0					
ANR	449385	ExpressionStatement	free ( instr . mnemonic )	5017:1:125516:125537	449123	11	True				
ANR	449386	CallExpression	free ( instr . mnemonic )		449123	0					
ANR	449387	Callee	free		449123	0					
ANR	449388	Identifier	free		449123	0					
ANR	449389	ArgumentList	instr . mnemonic		449123	1					
ANR	449390	Argument	instr . mnemonic		449123	0					
ANR	449391	MemberAccess	instr . mnemonic		449123	0					
ANR	449392	Identifier	instr		449123	0					
ANR	449393	Identifier	mnemonic		449123	1					
ANR	449394	ReturnStatement	return retval ;	5018:1:125540:125553	449123	12	True				
ANR	449395	Identifier	retval		449123	0					
ANR	449396	ReturnType	static int		449123	1					
ANR	449397	Identifier	assemble		449123	2					
ANR	449398	ParameterList	"RAsm * a , RAsmOp * ao , const char * str"		449123	3					
ANR	449399	Parameter	RAsm * a	4975:20:124512:124518	449123	0	True				
ANR	449400	ParameterType	RAsm *		449123	0					
ANR	449401	Identifier	a		449123	1					
ANR	449402	Parameter	RAsmOp * ao	4975:29:124521:124530	449123	1	True				
ANR	449403	ParameterType	RAsmOp *		449123	0					
ANR	449404	Identifier	ao		449123	1					
ANR	449405	Parameter	const char * str	4975:41:124533:124547	449123	2	True				
ANR	449406	ParameterType	const char *		449123	0					
ANR	449407	Identifier	str		449123	1					
ANR	449408	CFGEntryNode	ENTRY		449123		True				
ANR	449409	CFGExitNode	EXIT		449123		True				
ANR	449410	Symbol	instr . mnemonic		449123						
ANR	449411	Symbol	lt_ptr -> opcode		449123						
ANR	449412	Symbol	data		449123						
ANR	449413	Symbol	* op		449123						
ANR	449414	Symbol	lt_ptr -> only_x32		449123						
ANR	449415	Symbol	__data		449123						
ANR	449416	Symbol	* * lt_ptr		449123						
ANR	449417	Symbol	instr		449123						
ANR	449418	Symbol	* ptr		449123						
ANR	449419	Symbol	lt_ptr -> opdo		449123						
ANR	449420	Symbol	r_str_casecmp		449123						
ANR	449421	Symbol	a -> bits		449123						
ANR	449422	Symbol	strcmp		449123						
ANR	449423	Symbol	a		449123						
ANR	449424	Symbol	op		449123						
ANR	449425	Symbol	instr . has_bnd		449123						
ANR	449426	Symbol	oplookup		449123						
ANR	449427	Symbol	i		449123						
ANR	449428	Symbol	lt_ptr -> size		449123						
ANR	449429	Symbol	* a		449123						
ANR	449430	Symbol	lt_ptr		449123						
ANR	449431	Symbol	ao		449123						
ANR	449432	Symbol	retval		449123						
ANR	449433	Symbol	ptr		449123						
ANR	449434	Symbol	str		449123						
ANR	449435	Symbol	& instr		449123						
ANR	449436	Symbol	* i		449123						
ANR	449437	Symbol	& lt_ptr -> opcode		449123						
ANR	449438	Symbol	* lt_ptr -> size		449123						
ANR	449439	Symbol	* data		449123						
ANR	449440	Symbol	* lt_ptr		449123						
ANR	449441	Symbol	lt_ptr -> mnemonic		449123						
ANR	449442	DeclStmt									
ANR	449443	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_x86_nz
ANR	449444	DeclStmt									
ANR	449445	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
