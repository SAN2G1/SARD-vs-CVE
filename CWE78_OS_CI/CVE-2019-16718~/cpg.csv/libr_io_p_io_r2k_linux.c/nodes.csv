command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4902077	File	data/converged/CVE-2019-16718~_radare2/libr_io_p_io_r2k_linux.c								
ANR	4902078	Function	x86_ctrl_reg_pretty_print	8:0:148:2721							
ANR	4902079	FunctionDef	"x86_ctrl_reg_pretty_print (RIO * io , struct r2k_control_reg ctrl)"		4902078	0					
ANR	4902080	CompoundStatement		8:77:225:2721	4902078	0					
ANR	4902081	Statement	io	9:1:228:229	4902078	0	True				
ANR	4902082	Statement	->	9:3:230:231	4902078	1	True				
ANR	4902083	Statement	cb_printf	9:5:232:240	4902078	2	True				
ANR	4902084	Statement	(	9:15:242:242	4902078	3	True				
ANR	4902085	Statement	"""CR0: 0x%"""	9:16:243:252	4902078	4	True				
ANR	4902086	Statement	PFMT64x	9:26:253:259	4902078	5	True				
ANR	4902087	Statement	"""\\n"""	9:33:260:263	4902078	6	True				
ANR	4902088	Statement	","	9:37:264:264	4902078	7	True				
ANR	4902089	Statement	(	9:39:266:266	4902078	8	True				
ANR	4902090	Statement	ut64	9:40:267:270	4902078	9	True				
ANR	4902091	Statement	)	9:44:271:271	4902078	10	True				
ANR	4902092	Statement	ctrl	9:46:273:276	4902078	11	True				
ANR	4902093	Statement	.	9:50:277:277	4902078	12	True				
ANR	4902094	Statement	cr0	9:51:278:280	4902078	13	True				
ANR	4902095	Statement	)	9:54:281:281	4902078	14	True				
ANR	4902096	ExpressionStatement		9:55:282:282	4902078	15	True				
ANR	4902097	Statement	io	10:1:285:286	4902078	16	True				
ANR	4902098	Statement	->	10:3:287:288	4902078	17	True				
ANR	4902099	Statement	cb_printf	10:5:289:297	4902078	18	True				
ANR	4902100	Statement	(	10:15:299:299	4902078	19	True				
ANR	4902101	Statement	""" [*] PG:    %d\\n"""	10:16:300:317	4902078	20	True				
ANR	4902102	Statement	""" [*] CD:    %d\\n"""	11:9:328:345	4902078	21	True				
ANR	4902103	Statement	""" [*] NW:    %d\\n"""	12:9:356:373	4902078	22	True				
ANR	4902104	Statement	""" [*] AM:    %d\\n"""	13:9:384:401	4902078	23	True				
ANR	4902105	Statement	""" [*] WP:    %d\\n"""	14:9:412:429	4902078	24	True				
ANR	4902106	Statement	""" [*] NE:    %d\\n"""	15:9:440:457	4902078	25	True				
ANR	4902107	Statement	""" [*] ET:    %d\\n"""	16:9:468:485	4902078	26	True				
ANR	4902108	Statement	""" [*] TS:    %d\\n"""	17:9:496:513	4902078	27	True				
ANR	4902109	Statement	""" [*] EM:    %d\\n"""	18:9:524:541	4902078	28	True				
ANR	4902110	Statement	""" [*] MP:    %d\\n"""	19:9:552:569	4902078	29	True				
ANR	4902111	Statement	""" [*] PE:    %d\\n"""	20:9:580:597	4902078	30	True				
ANR	4902112	Statement	","	20:27:598:598	4902078	31	True				
ANR	4902113	Statement	fset	21:9:609:612	4902078	32	True				
ANR	4902114	Statement	(	21:14:614:614	4902078	33	True				
ANR	4902115	Statement	ctrl	21:15:615:618	4902078	34	True				
ANR	4902116	Statement	.	21:19:619:619	4902078	35	True				
ANR	4902117	Statement	cr0	21:20:620:622	4902078	36	True				
ANR	4902118	Statement	","	21:23:623:623	4902078	37	True				
ANR	4902119	Statement	31	21:25:625:626	4902078	38	True				
ANR	4902120	Statement	)	21:27:627:627	4902078	39	True				
ANR	4902121	Statement	","	21:28:628:628	4902078	40	True				
ANR	4902122	Statement	fset	21:30:630:633	4902078	41	True				
ANR	4902123	Statement	(	21:35:635:635	4902078	42	True				
ANR	4902124	Statement	ctrl	21:36:636:639	4902078	43	True				
ANR	4902125	Statement	.	21:40:640:640	4902078	44	True				
ANR	4902126	Statement	cr0	21:41:641:643	4902078	45	True				
ANR	4902127	Statement	","	21:44:644:644	4902078	46	True				
ANR	4902128	Statement	30	21:46:646:647	4902078	47	True				
ANR	4902129	Statement	)	21:48:648:648	4902078	48	True				
ANR	4902130	Statement	","	21:49:649:649	4902078	49	True				
ANR	4902131	Statement	fset	21:51:651:654	4902078	50	True				
ANR	4902132	Statement	(	21:56:656:656	4902078	51	True				
ANR	4902133	Statement	ctrl	21:57:657:660	4902078	52	True				
ANR	4902134	Statement	.	21:61:661:661	4902078	53	True				
ANR	4902135	Statement	cr0	21:62:662:664	4902078	54	True				
ANR	4902136	Statement	","	21:65:665:665	4902078	55	True				
ANR	4902137	Statement	29	21:67:667:668	4902078	56	True				
ANR	4902138	Statement	)	21:69:669:669	4902078	57	True				
ANR	4902139	Statement	","	21:70:670:670	4902078	58	True				
ANR	4902140	Statement	fset	21:72:672:675	4902078	59	True				
ANR	4902141	Statement	(	21:77:677:677	4902078	60	True				
ANR	4902142	Statement	ctrl	21:78:678:681	4902078	61	True				
ANR	4902143	Statement	.	21:82:682:682	4902078	62	True				
ANR	4902144	Statement	cr0	21:83:683:685	4902078	63	True				
ANR	4902145	Statement	","	21:86:686:686	4902078	64	True				
ANR	4902146	Statement	18	21:88:688:689	4902078	65	True				
ANR	4902147	Statement	)	21:90:690:690	4902078	66	True				
ANR	4902148	Statement	","	21:91:691:691	4902078	67	True				
ANR	4902149	Statement	fset	22:9:702:705	4902078	68	True				
ANR	4902150	Statement	(	22:14:707:707	4902078	69	True				
ANR	4902151	Statement	ctrl	22:15:708:711	4902078	70	True				
ANR	4902152	Statement	.	22:19:712:712	4902078	71	True				
ANR	4902153	Statement	cr0	22:20:713:715	4902078	72	True				
ANR	4902154	Statement	","	22:23:716:716	4902078	73	True				
ANR	4902155	Statement	16	22:25:718:719	4902078	74	True				
ANR	4902156	Statement	)	22:27:720:720	4902078	75	True				
ANR	4902157	Statement	","	22:28:721:721	4902078	76	True				
ANR	4902158	Statement	fset	22:30:723:726	4902078	77	True				
ANR	4902159	Statement	(	22:35:728:728	4902078	78	True				
ANR	4902160	Statement	ctrl	22:36:729:732	4902078	79	True				
ANR	4902161	Statement	.	22:40:733:733	4902078	80	True				
ANR	4902162	Statement	cr0	22:41:734:736	4902078	81	True				
ANR	4902163	Statement	","	22:44:737:737	4902078	82	True				
ANR	4902164	Statement	5	22:46:739:739	4902078	83	True				
ANR	4902165	Statement	)	22:47:740:740	4902078	84	True				
ANR	4902166	Statement	","	22:48:741:741	4902078	85	True				
ANR	4902167	Statement	fset	22:50:743:746	4902078	86	True				
ANR	4902168	Statement	(	22:55:748:748	4902078	87	True				
ANR	4902169	Statement	ctrl	22:56:749:752	4902078	88	True				
ANR	4902170	Statement	.	22:60:753:753	4902078	89	True				
ANR	4902171	Statement	cr0	22:61:754:756	4902078	90	True				
ANR	4902172	Statement	","	22:64:757:757	4902078	91	True				
ANR	4902173	Statement	4	22:66:759:759	4902078	92	True				
ANR	4902174	Statement	)	22:67:760:760	4902078	93	True				
ANR	4902175	Statement	","	22:68:761:761	4902078	94	True				
ANR	4902176	Statement	fset	22:70:763:766	4902078	95	True				
ANR	4902177	Statement	(	22:75:768:768	4902078	96	True				
ANR	4902178	Statement	ctrl	22:76:769:772	4902078	97	True				
ANR	4902179	Statement	.	22:80:773:773	4902078	98	True				
ANR	4902180	Statement	cr0	22:81:774:776	4902078	99	True				
ANR	4902181	Statement	","	22:84:777:777	4902078	100	True				
ANR	4902182	Statement	3	22:86:779:779	4902078	101	True				
ANR	4902183	Statement	)	22:87:780:780	4902078	102	True				
ANR	4902184	Statement	","	22:88:781:781	4902078	103	True				
ANR	4902185	Statement	fset	23:9:792:795	4902078	104	True				
ANR	4902186	Statement	(	23:14:797:797	4902078	105	True				
ANR	4902187	Statement	ctrl	23:15:798:801	4902078	106	True				
ANR	4902188	Statement	.	23:19:802:802	4902078	107	True				
ANR	4902189	Statement	cr0	23:20:803:805	4902078	108	True				
ANR	4902190	Statement	","	23:23:806:806	4902078	109	True				
ANR	4902191	Statement	2	23:25:808:808	4902078	110	True				
ANR	4902192	Statement	)	23:26:809:809	4902078	111	True				
ANR	4902193	Statement	","	23:27:810:810	4902078	112	True				
ANR	4902194	Statement	fset	23:29:812:815	4902078	113	True				
ANR	4902195	Statement	(	23:34:817:817	4902078	114	True				
ANR	4902196	Statement	ctrl	23:35:818:821	4902078	115	True				
ANR	4902197	Statement	.	23:39:822:822	4902078	116	True				
ANR	4902198	Statement	cr0	23:40:823:825	4902078	117	True				
ANR	4902199	Statement	","	23:43:826:826	4902078	118	True				
ANR	4902200	Statement	1	23:45:828:828	4902078	119	True				
ANR	4902201	Statement	)	23:46:829:829	4902078	120	True				
ANR	4902202	Statement	","	23:47:830:830	4902078	121	True				
ANR	4902203	Statement	fset	23:49:832:835	4902078	122	True				
ANR	4902204	Statement	(	23:54:837:837	4902078	123	True				
ANR	4902205	Statement	ctrl	23:55:838:841	4902078	124	True				
ANR	4902206	Statement	.	23:59:842:842	4902078	125	True				
ANR	4902207	Statement	cr0	23:60:843:845	4902078	126	True				
ANR	4902208	Statement	","	23:63:846:846	4902078	127	True				
ANR	4902209	Statement	1	23:65:848:848	4902078	128	True				
ANR	4902210	Statement	)	23:66:849:849	4902078	129	True				
ANR	4902211	Statement	)	23:67:850:850	4902078	130	True				
ANR	4902212	ExpressionStatement		23:68:851:851	4902078	131	True				
ANR	4902213	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	24:1:854:874	4902078	132	True				
ANR	4902214	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902078	0					
ANR	4902215	Callee	io -> cb_printf		4902078	0					
ANR	4902216	PtrMemberAccess	io -> cb_printf		4902078	0					
ANR	4902217	Identifier	io		4902078	0					
ANR	4902218	Identifier	cb_printf		4902078	1					
ANR	4902219	ArgumentList	"""\\n"""		4902078	1					
ANR	4902220	Argument	"""\\n"""		4902078	0					
ANR	4902221	PrimaryExpression	"""\\n"""		4902078	0					
ANR	4902222	Statement	io	26:1:878:879	4902078	133	True				
ANR	4902223	Statement	->	26:3:880:881	4902078	134	True				
ANR	4902224	Statement	cb_printf	26:5:882:890	4902078	135	True				
ANR	4902225	Statement	(	26:15:892:892	4902078	136	True				
ANR	4902226	Statement	"""CR2: 0x%"""	26:16:893:902	4902078	137	True				
ANR	4902227	Statement	PFMT64x	26:26:903:909	4902078	138	True				
ANR	4902228	Statement	"""\\n"""	26:33:910:913	4902078	139	True				
ANR	4902229	Statement	","	26:37:914:914	4902078	140	True				
ANR	4902230	Statement	(	26:39:916:916	4902078	141	True				
ANR	4902231	Statement	ut64	26:40:917:920	4902078	142	True				
ANR	4902232	Statement	)	26:44:921:921	4902078	143	True				
ANR	4902233	Statement	ctrl	26:46:923:926	4902078	144	True				
ANR	4902234	Statement	.	26:50:927:927	4902078	145	True				
ANR	4902235	Statement	cr2	26:51:928:930	4902078	146	True				
ANR	4902236	Statement	)	26:54:931:931	4902078	147	True				
ANR	4902237	ExpressionStatement		26:55:932:932	4902078	148	True				
ANR	4902238	Statement	io	27:1:935:936	4902078	149	True				
ANR	4902239	Statement	->	27:3:937:938	4902078	150	True				
ANR	4902240	Statement	cb_printf	27:5:939:947	4902078	151	True				
ANR	4902241	Statement	(	27:15:949:949	4902078	152	True				
ANR	4902242	Statement	"""Page-Fault Linear Address: 0x%"""	27:16:950:981	4902078	153	True				
ANR	4902243	Statement	PFMT64x	27:48:982:988	4902078	154	True				
ANR	4902244	Statement	"""\\n"""	27:55:989:992	4902078	155	True				
ANR	4902245	Statement	","	27:59:993:993	4902078	156	True				
ANR	4902246	Statement	(	27:61:995:995	4902078	157	True				
ANR	4902247	Statement	ut64	27:62:996:999	4902078	158	True				
ANR	4902248	Statement	)	27:66:1000:1000	4902078	159	True				
ANR	4902249	Statement	ctrl	27:68:1002:1005	4902078	160	True				
ANR	4902250	Statement	.	27:72:1006:1006	4902078	161	True				
ANR	4902251	Statement	cr2	27:73:1007:1009	4902078	162	True				
ANR	4902252	Statement	)	27:76:1010:1010	4902078	163	True				
ANR	4902253	ExpressionStatement		27:77:1011:1011	4902078	164	True				
ANR	4902254	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	28:1:1014:1034	4902078	165	True				
ANR	4902255	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902078	0					
ANR	4902256	Callee	io -> cb_printf		4902078	0					
ANR	4902257	PtrMemberAccess	io -> cb_printf		4902078	0					
ANR	4902258	Identifier	io		4902078	0					
ANR	4902259	Identifier	cb_printf		4902078	1					
ANR	4902260	ArgumentList	"""\\n"""		4902078	1					
ANR	4902261	Argument	"""\\n"""		4902078	0					
ANR	4902262	PrimaryExpression	"""\\n"""		4902078	0					
ANR	4902263	Statement	io	30:1:1038:1039	4902078	166	True				
ANR	4902264	Statement	->	30:3:1040:1041	4902078	167	True				
ANR	4902265	Statement	cb_printf	30:5:1042:1050	4902078	168	True				
ANR	4902266	Statement	(	30:15:1052:1052	4902078	169	True				
ANR	4902267	Statement	"""CR3: 0x%"""	30:16:1053:1062	4902078	170	True				
ANR	4902268	Statement	PFMT64x	30:26:1063:1069	4902078	171	True				
ANR	4902269	Statement	"""\\n"""	30:33:1070:1073	4902078	172	True				
ANR	4902270	Statement	","	30:37:1074:1074	4902078	173	True				
ANR	4902271	Statement	(	30:39:1076:1076	4902078	174	True				
ANR	4902272	Statement	ut64	30:40:1077:1080	4902078	175	True				
ANR	4902273	Statement	)	30:44:1081:1081	4902078	176	True				
ANR	4902274	Statement	ctrl	30:46:1083:1086	4902078	177	True				
ANR	4902275	Statement	.	30:50:1087:1087	4902078	178	True				
ANR	4902276	Statement	cr3	30:51:1088:1090	4902078	179	True				
ANR	4902277	Statement	)	30:54:1091:1091	4902078	180	True				
ANR	4902278	ExpressionStatement		30:55:1092:1092	4902078	181	True				
ANR	4902279	Statement	io	31:1:1095:1096	4902078	182	True				
ANR	4902280	Statement	->	31:3:1097:1098	4902078	183	True				
ANR	4902281	Statement	cb_printf	31:5:1099:1107	4902078	184	True				
ANR	4902282	Statement	(	31:15:1109:1109	4902078	185	True				
ANR	4902283	Statement	""" [*] Page-Directory Base:    0x%"""	31:16:1110:1143	4902078	186	True				
ANR	4902284	Statement	PFMT64x	31:50:1144:1150	4902078	187	True				
ANR	4902285	Statement	"""\\n"""	31:57:1151:1154	4902078	188	True				
ANR	4902286	Statement	""" [*] PCD:                    %d\\n"""	32:9:1165:1199	4902078	189	True				
ANR	4902287	Statement	""" [*] PWT:                    %d\\n"""	33:9:1210:1244	4902078	190	True				
ANR	4902288	Statement	","	33:44:1245:1245	4902078	191	True				
ANR	4902289	Statement	(	34:9:1256:1256	4902078	192	True				
ANR	4902290	Statement	(	34:10:1257:1257	4902078	193	True				
ANR	4902291	Statement	(	34:11:1258:1258	4902078	194	True				
ANR	4902292	Statement	ut64	34:12:1259:1262	4902078	195	True				
ANR	4902293	Statement	)	34:16:1263:1263	4902078	196	True				
ANR	4902294	Statement	ctrl	34:18:1265:1268	4902078	197	True				
ANR	4902295	Statement	.	34:22:1269:1269	4902078	198	True				
ANR	4902296	Statement	cr3	34:23:1270:1272	4902078	199	True				
ANR	4902297	Statement	)	34:26:1273:1273	4902078	200	True				
ANR	4902298	Statement	&	34:28:1275:1275	4902078	201	True				
ANR	4902299	Statement	0xfffffffffffff000	34:30:1277:1294	4902078	202	True				
ANR	4902300	Statement	)	34:48:1295:1295	4902078	203	True				
ANR	4902301	Statement	","	34:49:1296:1296	4902078	204	True				
ANR	4902302	Statement	fset	34:51:1298:1301	4902078	205	True				
ANR	4902303	Statement	(	34:56:1303:1303	4902078	206	True				
ANR	4902304	Statement	ctrl	34:57:1304:1307	4902078	207	True				
ANR	4902305	Statement	.	34:61:1308:1308	4902078	208	True				
ANR	4902306	Statement	cr3	34:62:1309:1311	4902078	209	True				
ANR	4902307	Statement	","	34:65:1312:1312	4902078	210	True				
ANR	4902308	Statement	4	34:67:1314:1314	4902078	211	True				
ANR	4902309	Statement	)	34:68:1315:1315	4902078	212	True				
ANR	4902310	Statement	","	34:69:1316:1316	4902078	213	True				
ANR	4902311	Statement	fset	34:71:1318:1321	4902078	214	True				
ANR	4902312	Statement	(	34:76:1323:1323	4902078	215	True				
ANR	4902313	Statement	ctrl	34:77:1324:1327	4902078	216	True				
ANR	4902314	Statement	.	34:81:1328:1328	4902078	217	True				
ANR	4902315	Statement	cr3	34:82:1329:1331	4902078	218	True				
ANR	4902316	Statement	","	34:85:1332:1332	4902078	219	True				
ANR	4902317	Statement	3	34:87:1334:1334	4902078	220	True				
ANR	4902318	Statement	)	34:88:1335:1335	4902078	221	True				
ANR	4902319	Statement	)	34:89:1336:1336	4902078	222	True				
ANR	4902320	ExpressionStatement		34:90:1337:1337	4902078	223	True				
ANR	4902321	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	35:1:1340:1360	4902078	224	True				
ANR	4902322	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902078	0					
ANR	4902323	Callee	io -> cb_printf		4902078	0					
ANR	4902324	PtrMemberAccess	io -> cb_printf		4902078	0					
ANR	4902325	Identifier	io		4902078	0					
ANR	4902326	Identifier	cb_printf		4902078	1					
ANR	4902327	ArgumentList	"""\\n"""		4902078	1					
ANR	4902328	Argument	"""\\n"""		4902078	0					
ANR	4902329	PrimaryExpression	"""\\n"""		4902078	0					
ANR	4902330	Statement	io	37:1:1364:1365	4902078	225	True				
ANR	4902331	Statement	->	37:3:1366:1367	4902078	226	True				
ANR	4902332	Statement	cb_printf	37:5:1368:1376	4902078	227	True				
ANR	4902333	Statement	(	37:15:1378:1378	4902078	228	True				
ANR	4902334	Statement	"""CR4: 0x%"""	37:16:1379:1388	4902078	229	True				
ANR	4902335	Statement	PFMT64x	37:26:1389:1395	4902078	230	True				
ANR	4902336	Statement	"""\\n"""	37:33:1396:1399	4902078	231	True				
ANR	4902337	Statement	","	37:37:1400:1400	4902078	232	True				
ANR	4902338	Statement	(	37:39:1402:1402	4902078	233	True				
ANR	4902339	Statement	ut64	37:40:1403:1406	4902078	234	True				
ANR	4902340	Statement	)	37:44:1407:1407	4902078	235	True				
ANR	4902341	Statement	ctrl	37:46:1409:1412	4902078	236	True				
ANR	4902342	Statement	.	37:50:1413:1413	4902078	237	True				
ANR	4902343	Statement	cr4	37:51:1414:1416	4902078	238	True				
ANR	4902344	Statement	)	37:54:1417:1417	4902078	239	True				
ANR	4902345	ExpressionStatement		37:55:1418:1418	4902078	240	True				
ANR	4902346	Statement	io	38:1:1421:1422	4902078	241	True				
ANR	4902347	Statement	->	38:3:1423:1424	4902078	242	True				
ANR	4902348	Statement	cb_printf	38:5:1425:1433	4902078	243	True				
ANR	4902349	Statement	(	38:15:1435:1435	4902078	244	True				
ANR	4902350	Statement	""" [*] PKE:         %d\\n"""	38:16:1436:1459	4902078	245	True				
ANR	4902351	Statement	""" [*] SMAP:        %d\\n"""	39:9:1470:1493	4902078	246	True				
ANR	4902352	Statement	""" [*] SMEP:        %d\\n"""	40:9:1504:1527	4902078	247	True				
ANR	4902353	Statement	""" [*] OSXSAVE:     %d\\n"""	41:9:1538:1561	4902078	248	True				
ANR	4902354	Statement	""" [*] PCIDE:       %d\\n"""	42:9:1572:1595	4902078	249	True				
ANR	4902355	Statement	""" [*] FSGSBASE:    %d\\n"""	43:9:1606:1629	4902078	250	True				
ANR	4902356	Statement	""" [*] SMXE:        %d\\n"""	44:9:1640:1663	4902078	251	True				
ANR	4902357	Statement	""" [*] VMXE:        %d\\n"""	45:9:1674:1697	4902078	252	True				
ANR	4902358	Statement	""" [*] UMIP:        %d\\n"""	46:9:1708:1731	4902078	253	True				
ANR	4902359	Statement	""" [*] OSXMMEXCPT:  %d\\n"""	47:9:1742:1765	4902078	254	True				
ANR	4902360	Statement	""" [*] OSFXSR:      %d\\n"""	48:9:1776:1799	4902078	255	True				
ANR	4902361	Statement	""" [*] PCE:         %d\\n"""	49:9:1810:1833	4902078	256	True				
ANR	4902362	Statement	""" [*] PGE:         %d\\n"""	50:9:1844:1867	4902078	257	True				
ANR	4902363	Statement	""" [*] MCE:         %d\\n"""	51:9:1878:1901	4902078	258	True				
ANR	4902364	Statement	""" [*] PAE:         %d\\n"""	52:9:1912:1935	4902078	259	True				
ANR	4902365	Statement	""" [*] PSE:         %d\\n"""	53:9:1946:1969	4902078	260	True				
ANR	4902366	Statement	""" [*] DE:          %d\\n"""	54:9:1980:2003	4902078	261	True				
ANR	4902367	Statement	""" [*] TSD:         %d\\n"""	55:9:2014:2037	4902078	262	True				
ANR	4902368	Statement	""" [*] PVI:         %d\\n"""	56:9:2048:2071	4902078	263	True				
ANR	4902369	Statement	""" [*] VME:         %d\\n"""	57:9:2082:2105	4902078	264	True				
ANR	4902370	Statement	","	57:33:2106:2106	4902078	265	True				
ANR	4902371	Statement	fset	58:9:2117:2120	4902078	266	True				
ANR	4902372	Statement	(	58:14:2122:2122	4902078	267	True				
ANR	4902373	Statement	ctrl	58:15:2123:2126	4902078	268	True				
ANR	4902374	Statement	.	58:19:2127:2127	4902078	269	True				
ANR	4902375	Statement	cr4	58:20:2128:2130	4902078	270	True				
ANR	4902376	Statement	","	58:23:2131:2131	4902078	271	True				
ANR	4902377	Statement	22	58:25:2133:2134	4902078	272	True				
ANR	4902378	Statement	)	58:27:2135:2135	4902078	273	True				
ANR	4902379	Statement	","	58:28:2136:2136	4902078	274	True				
ANR	4902380	Statement	fset	58:30:2138:2141	4902078	275	True				
ANR	4902381	Statement	(	58:35:2143:2143	4902078	276	True				
ANR	4902382	Statement	ctrl	58:36:2144:2147	4902078	277	True				
ANR	4902383	Statement	.	58:40:2148:2148	4902078	278	True				
ANR	4902384	Statement	cr4	58:41:2149:2151	4902078	279	True				
ANR	4902385	Statement	","	58:44:2152:2152	4902078	280	True				
ANR	4902386	Statement	21	58:46:2154:2155	4902078	281	True				
ANR	4902387	Statement	)	58:48:2156:2156	4902078	282	True				
ANR	4902388	Statement	","	58:49:2157:2157	4902078	283	True				
ANR	4902389	Statement	fset	58:51:2159:2162	4902078	284	True				
ANR	4902390	Statement	(	58:56:2164:2164	4902078	285	True				
ANR	4902391	Statement	ctrl	58:57:2165:2168	4902078	286	True				
ANR	4902392	Statement	.	58:61:2169:2169	4902078	287	True				
ANR	4902393	Statement	cr4	58:62:2170:2172	4902078	288	True				
ANR	4902394	Statement	","	58:65:2173:2173	4902078	289	True				
ANR	4902395	Statement	20	58:67:2175:2176	4902078	290	True				
ANR	4902396	Statement	)	58:69:2177:2177	4902078	291	True				
ANR	4902397	Statement	","	58:70:2178:2178	4902078	292	True				
ANR	4902398	Statement	fset	58:72:2180:2183	4902078	293	True				
ANR	4902399	Statement	(	58:77:2185:2185	4902078	294	True				
ANR	4902400	Statement	ctrl	58:78:2186:2189	4902078	295	True				
ANR	4902401	Statement	.	58:82:2190:2190	4902078	296	True				
ANR	4902402	Statement	cr4	58:83:2191:2193	4902078	297	True				
ANR	4902403	Statement	","	58:86:2194:2194	4902078	298	True				
ANR	4902404	Statement	18	58:88:2196:2197	4902078	299	True				
ANR	4902405	Statement	)	58:90:2198:2198	4902078	300	True				
ANR	4902406	Statement	","	58:91:2199:2199	4902078	301	True				
ANR	4902407	Statement	fset	59:9:2210:2213	4902078	302	True				
ANR	4902408	Statement	(	59:14:2215:2215	4902078	303	True				
ANR	4902409	Statement	ctrl	59:15:2216:2219	4902078	304	True				
ANR	4902410	Statement	.	59:19:2220:2220	4902078	305	True				
ANR	4902411	Statement	cr4	59:20:2221:2223	4902078	306	True				
ANR	4902412	Statement	","	59:23:2224:2224	4902078	307	True				
ANR	4902413	Statement	17	59:25:2226:2227	4902078	308	True				
ANR	4902414	Statement	)	59:27:2228:2228	4902078	309	True				
ANR	4902415	Statement	","	59:28:2229:2229	4902078	310	True				
ANR	4902416	Statement	fset	59:30:2231:2234	4902078	311	True				
ANR	4902417	Statement	(	59:35:2236:2236	4902078	312	True				
ANR	4902418	Statement	ctrl	59:36:2237:2240	4902078	313	True				
ANR	4902419	Statement	.	59:40:2241:2241	4902078	314	True				
ANR	4902420	Statement	cr4	59:41:2242:2244	4902078	315	True				
ANR	4902421	Statement	","	59:44:2245:2245	4902078	316	True				
ANR	4902422	Statement	16	59:46:2247:2248	4902078	317	True				
ANR	4902423	Statement	)	59:48:2249:2249	4902078	318	True				
ANR	4902424	Statement	","	59:49:2250:2250	4902078	319	True				
ANR	4902425	Statement	fset	59:51:2252:2255	4902078	320	True				
ANR	4902426	Statement	(	59:56:2257:2257	4902078	321	True				
ANR	4902427	Statement	ctrl	59:57:2258:2261	4902078	322	True				
ANR	4902428	Statement	.	59:61:2262:2262	4902078	323	True				
ANR	4902429	Statement	cr4	59:62:2263:2265	4902078	324	True				
ANR	4902430	Statement	","	59:65:2266:2266	4902078	325	True				
ANR	4902431	Statement	14	59:67:2268:2269	4902078	326	True				
ANR	4902432	Statement	)	59:69:2270:2270	4902078	327	True				
ANR	4902433	Statement	","	59:70:2271:2271	4902078	328	True				
ANR	4902434	Statement	fset	59:72:2273:2276	4902078	329	True				
ANR	4902435	Statement	(	59:77:2278:2278	4902078	330	True				
ANR	4902436	Statement	ctrl	59:78:2279:2282	4902078	331	True				
ANR	4902437	Statement	.	59:82:2283:2283	4902078	332	True				
ANR	4902438	Statement	cr4	59:83:2284:2286	4902078	333	True				
ANR	4902439	Statement	","	59:86:2287:2287	4902078	334	True				
ANR	4902440	Statement	13	59:88:2289:2290	4902078	335	True				
ANR	4902441	Statement	)	59:90:2291:2291	4902078	336	True				
ANR	4902442	Statement	","	59:91:2292:2292	4902078	337	True				
ANR	4902443	Statement	fset	60:9:2303:2306	4902078	338	True				
ANR	4902444	Statement	(	60:14:2308:2308	4902078	339	True				
ANR	4902445	Statement	ctrl	60:15:2309:2312	4902078	340	True				
ANR	4902446	Statement	.	60:19:2313:2313	4902078	341	True				
ANR	4902447	Statement	cr4	60:20:2314:2316	4902078	342	True				
ANR	4902448	Statement	","	60:23:2317:2317	4902078	343	True				
ANR	4902449	Statement	11	60:25:2319:2320	4902078	344	True				
ANR	4902450	Statement	)	60:27:2321:2321	4902078	345	True				
ANR	4902451	Statement	","	60:28:2322:2322	4902078	346	True				
ANR	4902452	Statement	fset	60:30:2324:2327	4902078	347	True				
ANR	4902453	Statement	(	60:35:2329:2329	4902078	348	True				
ANR	4902454	Statement	ctrl	60:36:2330:2333	4902078	349	True				
ANR	4902455	Statement	.	60:40:2334:2334	4902078	350	True				
ANR	4902456	Statement	cr4	60:41:2335:2337	4902078	351	True				
ANR	4902457	Statement	","	60:44:2338:2338	4902078	352	True				
ANR	4902458	Statement	10	60:46:2340:2341	4902078	353	True				
ANR	4902459	Statement	)	60:48:2342:2342	4902078	354	True				
ANR	4902460	Statement	","	60:49:2343:2343	4902078	355	True				
ANR	4902461	Statement	fset	60:51:2345:2348	4902078	356	True				
ANR	4902462	Statement	(	60:56:2350:2350	4902078	357	True				
ANR	4902463	Statement	ctrl	60:57:2351:2354	4902078	358	True				
ANR	4902464	Statement	.	60:61:2355:2355	4902078	359	True				
ANR	4902465	Statement	cr4	60:62:2356:2358	4902078	360	True				
ANR	4902466	Statement	","	60:65:2359:2359	4902078	361	True				
ANR	4902467	Statement	9	60:67:2361:2361	4902078	362	True				
ANR	4902468	Statement	)	60:68:2362:2362	4902078	363	True				
ANR	4902469	Statement	","	60:69:2363:2363	4902078	364	True				
ANR	4902470	Statement	fset	60:71:2365:2368	4902078	365	True				
ANR	4902471	Statement	(	60:76:2370:2370	4902078	366	True				
ANR	4902472	Statement	ctrl	60:77:2371:2374	4902078	367	True				
ANR	4902473	Statement	.	60:81:2375:2375	4902078	368	True				
ANR	4902474	Statement	cr4	60:82:2376:2378	4902078	369	True				
ANR	4902475	Statement	","	60:85:2379:2379	4902078	370	True				
ANR	4902476	Statement	8	60:87:2381:2381	4902078	371	True				
ANR	4902477	Statement	)	60:88:2382:2382	4902078	372	True				
ANR	4902478	Statement	","	60:89:2383:2383	4902078	373	True				
ANR	4902479	Statement	fset	61:9:2394:2397	4902078	374	True				
ANR	4902480	Statement	(	61:14:2399:2399	4902078	375	True				
ANR	4902481	Statement	ctrl	61:15:2400:2403	4902078	376	True				
ANR	4902482	Statement	.	61:19:2404:2404	4902078	377	True				
ANR	4902483	Statement	cr4	61:20:2405:2407	4902078	378	True				
ANR	4902484	Statement	","	61:23:2408:2408	4902078	379	True				
ANR	4902485	Statement	7	61:25:2410:2410	4902078	380	True				
ANR	4902486	Statement	)	61:26:2411:2411	4902078	381	True				
ANR	4902487	Statement	","	61:27:2412:2412	4902078	382	True				
ANR	4902488	Statement	fset	61:29:2414:2417	4902078	383	True				
ANR	4902489	Statement	(	61:34:2419:2419	4902078	384	True				
ANR	4902490	Statement	ctrl	61:35:2420:2423	4902078	385	True				
ANR	4902491	Statement	.	61:39:2424:2424	4902078	386	True				
ANR	4902492	Statement	cr4	61:40:2425:2427	4902078	387	True				
ANR	4902493	Statement	","	61:43:2428:2428	4902078	388	True				
ANR	4902494	Statement	6	61:45:2430:2430	4902078	389	True				
ANR	4902495	Statement	)	61:46:2431:2431	4902078	390	True				
ANR	4902496	Statement	","	61:47:2432:2432	4902078	391	True				
ANR	4902497	Statement	fset	61:49:2434:2437	4902078	392	True				
ANR	4902498	Statement	(	61:54:2439:2439	4902078	393	True				
ANR	4902499	Statement	ctrl	61:55:2440:2443	4902078	394	True				
ANR	4902500	Statement	.	61:59:2444:2444	4902078	395	True				
ANR	4902501	Statement	cr4	61:60:2445:2447	4902078	396	True				
ANR	4902502	Statement	","	61:63:2448:2448	4902078	397	True				
ANR	4902503	Statement	5	61:65:2450:2450	4902078	398	True				
ANR	4902504	Statement	)	61:66:2451:2451	4902078	399	True				
ANR	4902505	Statement	","	61:67:2452:2452	4902078	400	True				
ANR	4902506	Statement	fset	61:69:2454:2457	4902078	401	True				
ANR	4902507	Statement	(	61:74:2459:2459	4902078	402	True				
ANR	4902508	Statement	ctrl	61:75:2460:2463	4902078	403	True				
ANR	4902509	Statement	.	61:79:2464:2464	4902078	404	True				
ANR	4902510	Statement	cr4	61:80:2465:2467	4902078	405	True				
ANR	4902511	Statement	","	61:83:2468:2468	4902078	406	True				
ANR	4902512	Statement	4	61:85:2470:2470	4902078	407	True				
ANR	4902513	Statement	)	61:86:2471:2471	4902078	408	True				
ANR	4902514	Statement	","	61:87:2472:2472	4902078	409	True				
ANR	4902515	Statement	fset	62:9:2483:2486	4902078	410	True				
ANR	4902516	Statement	(	62:14:2488:2488	4902078	411	True				
ANR	4902517	Statement	ctrl	62:15:2489:2492	4902078	412	True				
ANR	4902518	Statement	.	62:19:2493:2493	4902078	413	True				
ANR	4902519	Statement	cr4	62:20:2494:2496	4902078	414	True				
ANR	4902520	Statement	","	62:23:2497:2497	4902078	415	True				
ANR	4902521	Statement	3	62:25:2499:2499	4902078	416	True				
ANR	4902522	Statement	)	62:26:2500:2500	4902078	417	True				
ANR	4902523	Statement	","	62:27:2501:2501	4902078	418	True				
ANR	4902524	Statement	fset	62:29:2503:2506	4902078	419	True				
ANR	4902525	Statement	(	62:34:2508:2508	4902078	420	True				
ANR	4902526	Statement	ctrl	62:35:2509:2512	4902078	421	True				
ANR	4902527	Statement	.	62:39:2513:2513	4902078	422	True				
ANR	4902528	Statement	cr4	62:40:2514:2516	4902078	423	True				
ANR	4902529	Statement	","	62:43:2517:2517	4902078	424	True				
ANR	4902530	Statement	2	62:45:2519:2519	4902078	425	True				
ANR	4902531	Statement	)	62:46:2520:2520	4902078	426	True				
ANR	4902532	Statement	","	62:47:2521:2521	4902078	427	True				
ANR	4902533	Statement	fset	62:49:2523:2526	4902078	428	True				
ANR	4902534	Statement	(	62:54:2528:2528	4902078	429	True				
ANR	4902535	Statement	ctrl	62:55:2529:2532	4902078	430	True				
ANR	4902536	Statement	.	62:59:2533:2533	4902078	431	True				
ANR	4902537	Statement	cr4	62:60:2534:2536	4902078	432	True				
ANR	4902538	Statement	","	62:63:2537:2537	4902078	433	True				
ANR	4902539	Statement	1	62:65:2539:2539	4902078	434	True				
ANR	4902540	Statement	)	62:66:2540:2540	4902078	435	True				
ANR	4902541	Statement	","	62:67:2541:2541	4902078	436	True				
ANR	4902542	Statement	fset	62:69:2543:2546	4902078	437	True				
ANR	4902543	Statement	(	62:74:2548:2548	4902078	438	True				
ANR	4902544	Statement	ctrl	62:75:2549:2552	4902078	439	True				
ANR	4902545	Statement	.	62:79:2553:2553	4902078	440	True				
ANR	4902546	Statement	cr4	62:80:2554:2556	4902078	441	True				
ANR	4902547	Statement	","	62:83:2557:2557	4902078	442	True				
ANR	4902548	Statement	0	62:85:2559:2559	4902078	443	True				
ANR	4902549	Statement	)	62:86:2560:2560	4902078	444	True				
ANR	4902550	Statement	)	62:87:2561:2561	4902078	445	True				
ANR	4902551	ExpressionStatement		62:88:2562:2562	4902078	446	True				
ANR	4902552	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	63:1:2565:2585	4902078	447	True				
ANR	4902553	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902078	0					
ANR	4902554	Callee	io -> cb_printf		4902078	0					
ANR	4902555	PtrMemberAccess	io -> cb_printf		4902078	0					
ANR	4902556	Identifier	io		4902078	0					
ANR	4902557	Identifier	cb_printf		4902078	1					
ANR	4902558	ArgumentList	"""\\n"""		4902078	1					
ANR	4902559	Argument	"""\\n"""		4902078	0					
ANR	4902560	PrimaryExpression	"""\\n"""		4902078	0					
ANR	4902561	Statement	io	66:1:2604:2605	4902078	448	True				
ANR	4902562	Statement	->	66:3:2606:2607	4902078	449	True				
ANR	4902563	Statement	cb_printf	66:5:2608:2616	4902078	450	True				
ANR	4902564	Statement	(	66:15:2618:2618	4902078	451	True				
ANR	4902565	Statement	"""CR8: 0x%"""	66:16:2619:2628	4902078	452	True				
ANR	4902566	Statement	PFMT64x	66:26:2629:2635	4902078	453	True				
ANR	4902567	Statement	"""\\n"""	66:33:2636:2639	4902078	454	True				
ANR	4902568	Statement	","	66:37:2640:2640	4902078	455	True				
ANR	4902569	Statement	(	66:39:2642:2642	4902078	456	True				
ANR	4902570	Statement	ut64	66:40:2643:2646	4902078	457	True				
ANR	4902571	Statement	)	66:44:2647:2647	4902078	458	True				
ANR	4902572	Statement	ctrl	66:46:2649:2652	4902078	459	True				
ANR	4902573	Statement	.	66:50:2653:2653	4902078	460	True				
ANR	4902574	Statement	cr8	66:51:2654:2656	4902078	461	True				
ANR	4902575	Statement	)	66:54:2657:2657	4902078	462	True				
ANR	4902576	ExpressionStatement		66:55:2658:2658	4902078	463	True				
ANR	4902577	ExpressionStatement	"io -> cb_printf ( "" [*] TPL:    %d\\n"" , ctrl . cr8 & 0xf )"	67:1:2661:2712	4902078	464	True				
ANR	4902578	CallExpression	"io -> cb_printf ( "" [*] TPL:    %d\\n"" , ctrl . cr8 & 0xf )"		4902078	0					
ANR	4902579	Callee	io -> cb_printf		4902078	0					
ANR	4902580	PtrMemberAccess	io -> cb_printf		4902078	0					
ANR	4902581	Identifier	io		4902078	0					
ANR	4902582	Identifier	cb_printf		4902078	1					
ANR	4902583	ArgumentList	""" [*] TPL:    %d\\n"""		4902078	1					
ANR	4902584	Argument	""" [*] TPL:    %d\\n"""		4902078	0					
ANR	4902585	PrimaryExpression	""" [*] TPL:    %d\\n"""		4902078	0					
ANR	4902586	Argument	ctrl . cr8 & 0xf		4902078	1					
ANR	4902587	BitAndExpression	ctrl . cr8 & 0xf		4902078	0		&			
ANR	4902588	MemberAccess	ctrl . cr8		4902078	0					
ANR	4902589	Identifier	ctrl		4902078	0					
ANR	4902590	Identifier	cr8		4902078	1					
ANR	4902591	PrimaryExpression	0xf		4902078	1					
ANR	4902592	ReturnType	static void		4902078	1					
ANR	4902593	Identifier	x86_ctrl_reg_pretty_print		4902078	2					
ANR	4902594	ParameterList	"RIO * io , struct r2k_control_reg ctrl"		4902078	3					
ANR	4902595	Parameter	RIO * io	8:39:187:193	4902078	0	True				
ANR	4902596	ParameterType	RIO *		4902078	0					
ANR	4902597	Identifier	io		4902078	1					
ANR	4902598	Parameter	struct r2k_control_reg ctrl	8:48:196:222	4902078	1	True				
ANR	4902599	ParameterType	struct r2k_control_reg		4902078	0					
ANR	4902600	Identifier	ctrl		4902078	1					
ANR	4902601	CFGEntryNode	ENTRY		4902078		True				
ANR	4902602	CFGExitNode	EXIT		4902078		True				
ANR	4902603	Symbol	ctrl . cr8		4902078						
ANR	4902604	Symbol	ctrl		4902078						
ANR	4902605	Symbol	io		4902078						
ANR	4902606	Function	arm_ctrl_reg_pretty_print	72:0:2738:5572							
ANR	4902607	FunctionDef	"arm_ctrl_reg_pretty_print (RIO * io , struct r2k_control_reg ctrl)"		4902606	0					
ANR	4902608	CompoundStatement		72:77:2815:5572	4902606	0					
ANR	4902609	Statement	io	73:1:2818:2819	4902606	0	True				
ANR	4902610	Statement	->	73:3:2820:2821	4902606	1	True				
ANR	4902611	Statement	cb_printf	73:5:2822:2830	4902606	2	True				
ANR	4902612	Statement	(	73:15:2832:2832	4902606	3	True				
ANR	4902613	Statement	"""TTBR0: 0x%"""	73:16:2833:2844	4902606	4	True				
ANR	4902614	Statement	PFMT64x	73:28:2845:2851	4902606	5	True				
ANR	4902615	Statement	"""\\n"""	73:35:2852:2855	4902606	6	True				
ANR	4902616	Statement	","	73:39:2856:2856	4902606	7	True				
ANR	4902617	Statement	(	73:41:2858:2858	4902606	8	True				
ANR	4902618	Statement	ut64	73:42:2859:2862	4902606	9	True				
ANR	4902619	Statement	)	73:46:2863:2863	4902606	10	True				
ANR	4902620	Statement	ctrl	73:48:2865:2868	4902606	11	True				
ANR	4902621	Statement	.	73:52:2869:2869	4902606	12	True				
ANR	4902622	Statement	ttbr0	73:53:2870:2874	4902606	13	True				
ANR	4902623	Statement	)	73:58:2875:2875	4902606	14	True				
ANR	4902624	ExpressionStatement		73:59:2876:2876	4902606	15	True				
ANR	4902625	Statement	io	74:1:2879:2880	4902606	16	True				
ANR	4902626	Statement	->	74:3:2881:2882	4902606	17	True				
ANR	4902627	Statement	cb_printf	74:5:2883:2891	4902606	18	True				
ANR	4902628	Statement	(	74:15:2893:2893	4902606	19	True				
ANR	4902629	Statement	""" [*] Translation table base 0:  0x%"""	74:16:2894:2930	4902606	20	True				
ANR	4902630	Statement	PFMT64x	74:53:2931:2937	4902606	21	True				
ANR	4902631	Statement	"""\\n"""	74:60:2938:2941	4902606	22	True				
ANR	4902632	Statement	""" [*] UNP/SBZ:                   0x%"""	75:9:2952:2988	4902606	23	True				
ANR	4902633	Statement	PFMT64x	75:46:2989:2995	4902606	24	True				
ANR	4902634	Statement	"""\\n"""	75:53:2996:2999	4902606	25	True				
ANR	4902635	Statement	""" [*] RGN:                       0x%"""	76:9:3010:3046	4902606	26	True				
ANR	4902636	Statement	PFMT64x	76:46:3047:3053	4902606	27	True				
ANR	4902637	Statement	"""\\n"""	76:53:3054:3057	4902606	28	True				
ANR	4902638	Statement	""" [*] P:                         %d\\n"""	77:9:3068:3105	4902606	29	True				
ANR	4902639	Statement	""" [*] S:                         %d\\n"""	78:9:3116:3153	4902606	30	True				
ANR	4902640	Statement	""" [*] C:                         %d\\n"""	79:9:3164:3201	4902606	31	True				
ANR	4902641	Statement	","	79:47:3202:3202	4902606	32	True				
ANR	4902642	Statement	(	80:9:3213:3213	4902606	33	True				
ANR	4902643	Statement	ut64	80:10:3214:3217	4902606	34	True				
ANR	4902644	Statement	)	80:14:3218:3218	4902606	35	True				
ANR	4902645	Statement	(	80:16:3220:3220	4902606	36	True				
ANR	4902646	Statement	(	80:17:3221:3221	4902606	37	True				
ANR	4902647	Statement	ctrl	80:18:3222:3225	4902606	38	True				
ANR	4902648	Statement	.	80:22:3226:3226	4902606	39	True				
ANR	4902649	Statement	ttbr0	80:23:3227:3231	4902606	40	True				
ANR	4902650	Statement	&	80:29:3233:3233	4902606	41	True				
ANR	4902651	Statement	(	80:31:3235:3235	4902606	42	True				
ANR	4902652	Statement	0xffffffff	80:32:3236:3245	4902606	43	True				
ANR	4902653	Statement	<<	80:43:3247:3248	4902606	44	True				
ANR	4902654	Statement	(	80:46:3250:3250	4902606	45	True				
ANR	4902655	Statement	14	80:47:3251:3252	4902606	46	True				
ANR	4902656	Statement	-	80:50:3254:3254	4902606	47	True				
ANR	4902657	Statement	(	80:52:3256:3256	4902606	48	True				
ANR	4902658	Statement	ctrl	80:53:3257:3260	4902606	49	True				
ANR	4902659	Statement	.	80:57:3261:3261	4902606	50	True				
ANR	4902660	Statement	ttbcr	80:58:3262:3266	4902606	51	True				
ANR	4902661	Statement	&	80:64:3268:3268	4902606	52	True				
ANR	4902662	Statement	7	80:66:3270:3270	4902606	53	True				
ANR	4902663	Statement	)	80:67:3271:3271	4902606	54	True				
ANR	4902664	Statement	)	80:68:3272:3272	4902606	55	True				
ANR	4902665	Statement	)	80:69:3273:3273	4902606	56	True				
ANR	4902666	Statement	)	80:70:3274:3274	4902606	57	True				
ANR	4902667	Statement	>>	80:72:3276:3277	4902606	58	True				
ANR	4902668	Statement	(	80:75:3279:3279	4902606	59	True				
ANR	4902669	Statement	14	80:76:3280:3281	4902606	60	True				
ANR	4902670	Statement	-	80:79:3283:3283	4902606	61	True				
ANR	4902671	Statement	(	80:81:3285:3285	4902606	62	True				
ANR	4902672	Statement	ctrl	80:82:3286:3289	4902606	63	True				
ANR	4902673	Statement	.	80:86:3290:3290	4902606	64	True				
ANR	4902674	Statement	ttbcr	80:87:3291:3295	4902606	65	True				
ANR	4902675	Statement	&	80:93:3297:3297	4902606	66	True				
ANR	4902676	Statement	7	80:95:3299:3299	4902606	67	True				
ANR	4902677	Statement	)	80:96:3300:3300	4902606	68	True				
ANR	4902678	Statement	)	80:97:3301:3301	4902606	69	True				
ANR	4902679	Statement	)	80:98:3302:3302	4902606	70	True				
ANR	4902680	Statement	","	80:99:3303:3303	4902606	71	True				
ANR	4902681	Statement	(	81:9:3314:3314	4902606	72	True				
ANR	4902682	Statement	ut64	81:10:3315:3318	4902606	73	True				
ANR	4902683	Statement	)	81:14:3319:3319	4902606	74	True				
ANR	4902684	Statement	(	81:16:3321:3321	4902606	75	True				
ANR	4902685	Statement	(	81:17:3322:3322	4902606	76	True				
ANR	4902686	Statement	ctrl	81:18:3323:3326	4902606	77	True				
ANR	4902687	Statement	.	81:22:3327:3327	4902606	78	True				
ANR	4902688	Statement	ttbr0	81:23:3328:3332	4902606	79	True				
ANR	4902689	Statement	&	81:29:3334:3334	4902606	80	True				
ANR	4902690	Statement	(	81:31:3336:3336	4902606	81	True				
ANR	4902691	Statement	(	81:32:3337:3337	4902606	82	True				
ANR	4902692	Statement	1	81:33:3338:3338	4902606	83	True				
ANR	4902693	Statement	<<	81:35:3340:3341	4902606	84	True				
ANR	4902694	Statement	(	81:38:3343:3343	4902606	85	True				
ANR	4902695	Statement	13	81:39:3344:3345	4902606	86	True				
ANR	4902696	Statement	-	81:42:3347:3347	4902606	87	True				
ANR	4902697	Statement	(	81:44:3349:3349	4902606	88	True				
ANR	4902698	Statement	ctrl	81:45:3350:3353	4902606	89	True				
ANR	4902699	Statement	.	81:49:3354:3354	4902606	90	True				
ANR	4902700	Statement	ttbcr	81:50:3355:3359	4902606	91	True				
ANR	4902701	Statement	&	81:56:3361:3361	4902606	92	True				
ANR	4902702	Statement	7	81:58:3363:3363	4902606	93	True				
ANR	4902703	Statement	)	81:59:3364:3364	4902606	94	True				
ANR	4902704	Statement	+	81:61:3366:3366	4902606	95	True				
ANR	4902705	Statement	1	81:63:3368:3368	4902606	96	True				
ANR	4902706	Statement	)	81:64:3369:3369	4902606	97	True				
ANR	4902707	Statement	)	81:65:3370:3370	4902606	98	True				
ANR	4902708	Statement	-	81:67:3372:3372	4902606	99	True				
ANR	4902709	Statement	(	81:69:3374:3374	4902606	100	True				
ANR	4902710	Statement	1	81:70:3375:3375	4902606	101	True				
ANR	4902711	Statement	<<	81:72:3377:3378	4902606	102	True				
ANR	4902712	Statement	5	81:75:3380:3380	4902606	103	True				
ANR	4902713	Statement	)	81:76:3381:3381	4902606	104	True				
ANR	4902714	Statement	)	81:77:3382:3382	4902606	105	True				
ANR	4902715	Statement	)	81:78:3383:3383	4902606	106	True				
ANR	4902716	Statement	>>	81:80:3385:3386	4902606	107	True				
ANR	4902717	Statement	6	81:83:3388:3388	4902606	108	True				
ANR	4902718	Statement	)	81:84:3389:3389	4902606	109	True				
ANR	4902719	Statement	","	81:85:3390:3390	4902606	110	True				
ANR	4902720	Statement	(	82:9:3401:3401	4902606	111	True				
ANR	4902721	Statement	ut64	82:10:3402:3405	4902606	112	True				
ANR	4902722	Statement	)	82:14:3406:3406	4902606	113	True				
ANR	4902723	Statement	(	82:16:3408:3408	4902606	114	True				
ANR	4902724	Statement	(	82:17:3409:3409	4902606	115	True				
ANR	4902725	Statement	ctrl	82:18:3410:3413	4902606	116	True				
ANR	4902726	Statement	.	82:22:3414:3414	4902606	117	True				
ANR	4902727	Statement	ttbr0	82:23:3415:3419	4902606	118	True				
ANR	4902728	Statement	&	82:29:3421:3421	4902606	119	True				
ANR	4902729	Statement	0x18	82:31:3423:3426	4902606	120	True				
ANR	4902730	Statement	)	82:35:3427:3427	4902606	121	True				
ANR	4902731	Statement	>>	82:37:3429:3430	4902606	122	True				
ANR	4902732	Statement	3	82:40:3432:3432	4902606	123	True				
ANR	4902733	Statement	)	82:41:3433:3433	4902606	124	True				
ANR	4902734	Statement	","	82:42:3434:3434	4902606	125	True				
ANR	4902735	Statement	fset	82:44:3436:3439	4902606	126	True				
ANR	4902736	Statement	(	82:49:3441:3441	4902606	127	True				
ANR	4902737	Statement	ctrl	82:50:3442:3445	4902606	128	True				
ANR	4902738	Statement	.	82:54:3446:3446	4902606	129	True				
ANR	4902739	Statement	ttbr0	82:55:3447:3451	4902606	130	True				
ANR	4902740	Statement	","	82:60:3452:3452	4902606	131	True				
ANR	4902741	Statement	2	82:62:3454:3454	4902606	132	True				
ANR	4902742	Statement	)	82:63:3455:3455	4902606	133	True				
ANR	4902743	Statement	","	82:64:3456:3456	4902606	134	True				
ANR	4902744	Statement	fset	82:66:3458:3461	4902606	135	True				
ANR	4902745	Statement	(	82:71:3463:3463	4902606	136	True				
ANR	4902746	Statement	ctrl	82:72:3464:3467	4902606	137	True				
ANR	4902747	Statement	.	82:76:3468:3468	4902606	138	True				
ANR	4902748	Statement	ttbr0	82:77:3469:3473	4902606	139	True				
ANR	4902749	Statement	","	82:82:3474:3474	4902606	140	True				
ANR	4902750	Statement	1	82:84:3476:3476	4902606	141	True				
ANR	4902751	Statement	)	82:85:3477:3477	4902606	142	True				
ANR	4902752	Statement	","	82:86:3478:3478	4902606	143	True				
ANR	4902753	Statement	fset	82:88:3480:3483	4902606	144	True				
ANR	4902754	Statement	(	82:93:3485:3485	4902606	145	True				
ANR	4902755	Statement	ctrl	82:94:3486:3489	4902606	146	True				
ANR	4902756	Statement	.	82:98:3490:3490	4902606	147	True				
ANR	4902757	Statement	ttbr0	82:99:3491:3495	4902606	148	True				
ANR	4902758	Statement	","	82:104:3496:3496	4902606	149	True				
ANR	4902759	Statement	0	82:106:3498:3498	4902606	150	True				
ANR	4902760	Statement	)	82:107:3499:3499	4902606	151	True				
ANR	4902761	Statement	)	82:108:3500:3500	4902606	152	True				
ANR	4902762	ExpressionStatement		82:109:3501:3501	4902606	153	True				
ANR	4902763	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	83:1:3504:3524	4902606	154	True				
ANR	4902764	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902606	0					
ANR	4902765	Callee	io -> cb_printf		4902606	0					
ANR	4902766	PtrMemberAccess	io -> cb_printf		4902606	0					
ANR	4902767	Identifier	io		4902606	0					
ANR	4902768	Identifier	cb_printf		4902606	1					
ANR	4902769	ArgumentList	"""\\n"""		4902606	1					
ANR	4902770	Argument	"""\\n"""		4902606	0					
ANR	4902771	PrimaryExpression	"""\\n"""		4902606	0					
ANR	4902772	Statement	io	85:1:3528:3529	4902606	155	True				
ANR	4902773	Statement	->	85:3:3530:3531	4902606	156	True				
ANR	4902774	Statement	cb_printf	85:5:3532:3540	4902606	157	True				
ANR	4902775	Statement	(	85:15:3542:3542	4902606	158	True				
ANR	4902776	Statement	"""TTBR1: 0x%"""	85:16:3543:3554	4902606	159	True				
ANR	4902777	Statement	PFMT64x	85:28:3555:3561	4902606	160	True				
ANR	4902778	Statement	"""\\n"""	85:35:3562:3565	4902606	161	True				
ANR	4902779	Statement	","	85:39:3566:3566	4902606	162	True				
ANR	4902780	Statement	(	85:41:3568:3568	4902606	163	True				
ANR	4902781	Statement	ut64	85:42:3569:3572	4902606	164	True				
ANR	4902782	Statement	)	85:46:3573:3573	4902606	165	True				
ANR	4902783	Statement	ctrl	85:48:3575:3578	4902606	166	True				
ANR	4902784	Statement	.	85:52:3579:3579	4902606	167	True				
ANR	4902785	Statement	ttbr1	85:53:3580:3584	4902606	168	True				
ANR	4902786	Statement	)	85:58:3585:3585	4902606	169	True				
ANR	4902787	ExpressionStatement		85:59:3586:3586	4902606	170	True				
ANR	4902788	Statement	io	86:1:3589:3590	4902606	171	True				
ANR	4902789	Statement	->	86:3:3591:3592	4902606	172	True				
ANR	4902790	Statement	cb_printf	86:5:3593:3601	4902606	173	True				
ANR	4902791	Statement	(	86:15:3603:3603	4902606	174	True				
ANR	4902792	Statement	""" [*] Translation table base 1:  0x%"""	86:16:3604:3640	4902606	175	True				
ANR	4902793	Statement	PFMT64x	86:53:3641:3647	4902606	176	True				
ANR	4902794	Statement	"""\\n"""	86:60:3648:3651	4902606	177	True				
ANR	4902795	Statement	""" [*] UNP/SBZ:                   0x%"""	87:9:3662:3698	4902606	178	True				
ANR	4902796	Statement	PFMT64x	87:46:3699:3705	4902606	179	True				
ANR	4902797	Statement	"""\\n"""	87:53:3706:3709	4902606	180	True				
ANR	4902798	Statement	""" [*] RGN:                       0x%"""	88:9:3720:3756	4902606	181	True				
ANR	4902799	Statement	PFMT64x	88:46:3757:3763	4902606	182	True				
ANR	4902800	Statement	"""\\n"""	88:53:3764:3767	4902606	183	True				
ANR	4902801	Statement	""" [*] P:                         %d\\n"""	89:9:3778:3815	4902606	184	True				
ANR	4902802	Statement	""" [*] S:                         %d\\n"""	90:9:3826:3863	4902606	185	True				
ANR	4902803	Statement	""" [*] C:                         %d\\n"""	91:9:3874:3911	4902606	186	True				
ANR	4902804	Statement	","	91:47:3912:3912	4902606	187	True				
ANR	4902805	Statement	(	92:9:3923:3923	4902606	188	True				
ANR	4902806	Statement	ut64	92:10:3924:3927	4902606	189	True				
ANR	4902807	Statement	)	92:14:3928:3928	4902606	190	True				
ANR	4902808	Statement	(	92:16:3930:3930	4902606	191	True				
ANR	4902809	Statement	(	92:17:3931:3931	4902606	192	True				
ANR	4902810	Statement	ctrl	92:18:3932:3935	4902606	193	True				
ANR	4902811	Statement	.	92:22:3936:3936	4902606	194	True				
ANR	4902812	Statement	ttbr1	92:23:3937:3941	4902606	195	True				
ANR	4902813	Statement	&	92:29:3943:3943	4902606	196	True				
ANR	4902814	Statement	(	92:31:3945:3945	4902606	197	True				
ANR	4902815	Statement	0xffffffff	92:32:3946:3955	4902606	198	True				
ANR	4902816	Statement	<<	92:43:3957:3958	4902606	199	True				
ANR	4902817	Statement	14	92:46:3960:3961	4902606	200	True				
ANR	4902818	Statement	)	92:48:3962:3962	4902606	201	True				
ANR	4902819	Statement	)	92:49:3963:3963	4902606	202	True				
ANR	4902820	Statement	>>	92:51:3965:3966	4902606	203	True				
ANR	4902821	Statement	14	92:54:3968:3969	4902606	204	True				
ANR	4902822	Statement	)	92:56:3970:3970	4902606	205	True				
ANR	4902823	Statement	","	92:57:3971:3971	4902606	206	True				
ANR	4902824	Statement	(	92:59:3973:3973	4902606	207	True				
ANR	4902825	Statement	ut64	92:60:3974:3977	4902606	208	True				
ANR	4902826	Statement	)	92:64:3978:3978	4902606	209	True				
ANR	4902827	Statement	(	92:66:3980:3980	4902606	210	True				
ANR	4902828	Statement	(	92:67:3981:3981	4902606	211	True				
ANR	4902829	Statement	ctrl	92:68:3982:3985	4902606	212	True				
ANR	4902830	Statement	.	92:72:3986:3986	4902606	213	True				
ANR	4902831	Statement	ttbr1	92:73:3987:3991	4902606	214	True				
ANR	4902832	Statement	&	92:79:3993:3993	4902606	215	True				
ANR	4902833	Statement	(	92:81:3995:3995	4902606	216	True				
ANR	4902834	Statement	(	92:82:3996:3996	4902606	217	True				
ANR	4902835	Statement	1	92:83:3997:3997	4902606	218	True				
ANR	4902836	Statement	<<	92:85:3999:4000	4902606	219	True				
ANR	4902837	Statement	(	92:88:4002:4002	4902606	220	True				
ANR	4902838	Statement	13	92:89:4003:4004	4902606	221	True				
ANR	4902839	Statement	+	92:92:4006:4006	4902606	222	True				
ANR	4902840	Statement	1	92:94:4008:4008	4902606	223	True				
ANR	4902841	Statement	)	92:95:4009:4009	4902606	224	True				
ANR	4902842	Statement	)	92:96:4010:4010	4902606	225	True				
ANR	4902843	Statement	-	92:98:4012:4012	4902606	226	True				
ANR	4902844	Statement	(	92:100:4014:4014	4902606	227	True				
ANR	4902845	Statement	1	92:101:4015:4015	4902606	228	True				
ANR	4902846	Statement	<<	92:103:4017:4018	4902606	229	True				
ANR	4902847	Statement	5	92:106:4020:4020	4902606	230	True				
ANR	4902848	Statement	)	92:107:4021:4021	4902606	231	True				
ANR	4902849	Statement	)	92:108:4022:4022	4902606	232	True				
ANR	4902850	Statement	)	92:109:4023:4023	4902606	233	True				
ANR	4902851	Statement	>>	92:111:4025:4026	4902606	234	True				
ANR	4902852	Statement	6	92:114:4028:4028	4902606	235	True				
ANR	4902853	Statement	)	92:115:4029:4029	4902606	236	True				
ANR	4902854	Statement	","	92:116:4030:4030	4902606	237	True				
ANR	4902855	Statement	(	93:9:4041:4041	4902606	238	True				
ANR	4902856	Statement	ut64	93:10:4042:4045	4902606	239	True				
ANR	4902857	Statement	)	93:14:4046:4046	4902606	240	True				
ANR	4902858	Statement	(	93:16:4048:4048	4902606	241	True				
ANR	4902859	Statement	(	93:17:4049:4049	4902606	242	True				
ANR	4902860	Statement	ctrl	93:18:4050:4053	4902606	243	True				
ANR	4902861	Statement	.	93:22:4054:4054	4902606	244	True				
ANR	4902862	Statement	ttbr1	93:23:4055:4059	4902606	245	True				
ANR	4902863	Statement	&	93:29:4061:4061	4902606	246	True				
ANR	4902864	Statement	0x18	93:31:4063:4066	4902606	247	True				
ANR	4902865	Statement	)	93:35:4067:4067	4902606	248	True				
ANR	4902866	Statement	>>	93:37:4069:4070	4902606	249	True				
ANR	4902867	Statement	3	93:40:4072:4072	4902606	250	True				
ANR	4902868	Statement	)	93:41:4073:4073	4902606	251	True				
ANR	4902869	Statement	","	93:42:4074:4074	4902606	252	True				
ANR	4902870	Statement	fset	93:44:4076:4079	4902606	253	True				
ANR	4902871	Statement	(	93:49:4081:4081	4902606	254	True				
ANR	4902872	Statement	ctrl	93:50:4082:4085	4902606	255	True				
ANR	4902873	Statement	.	93:54:4086:4086	4902606	256	True				
ANR	4902874	Statement	ttbr1	93:55:4087:4091	4902606	257	True				
ANR	4902875	Statement	","	93:60:4092:4092	4902606	258	True				
ANR	4902876	Statement	2	93:62:4094:4094	4902606	259	True				
ANR	4902877	Statement	)	93:63:4095:4095	4902606	260	True				
ANR	4902878	Statement	","	93:64:4096:4096	4902606	261	True				
ANR	4902879	Statement	fset	93:66:4098:4101	4902606	262	True				
ANR	4902880	Statement	(	93:71:4103:4103	4902606	263	True				
ANR	4902881	Statement	ctrl	93:72:4104:4107	4902606	264	True				
ANR	4902882	Statement	.	93:76:4108:4108	4902606	265	True				
ANR	4902883	Statement	ttbr1	93:77:4109:4113	4902606	266	True				
ANR	4902884	Statement	","	93:82:4114:4114	4902606	267	True				
ANR	4902885	Statement	1	93:84:4116:4116	4902606	268	True				
ANR	4902886	Statement	)	93:85:4117:4117	4902606	269	True				
ANR	4902887	Statement	","	93:86:4118:4118	4902606	270	True				
ANR	4902888	Statement	fset	93:88:4120:4123	4902606	271	True				
ANR	4902889	Statement	(	93:93:4125:4125	4902606	272	True				
ANR	4902890	Statement	ctrl	93:94:4126:4129	4902606	273	True				
ANR	4902891	Statement	.	93:98:4130:4130	4902606	274	True				
ANR	4902892	Statement	ttbr1	93:99:4131:4135	4902606	275	True				
ANR	4902893	Statement	","	93:104:4136:4136	4902606	276	True				
ANR	4902894	Statement	0	93:106:4138:4138	4902606	277	True				
ANR	4902895	Statement	)	93:107:4139:4139	4902606	278	True				
ANR	4902896	Statement	)	93:108:4140:4140	4902606	279	True				
ANR	4902897	ExpressionStatement		93:109:4141:4141	4902606	280	True				
ANR	4902898	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	94:1:4144:4164	4902606	281	True				
ANR	4902899	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902606	0					
ANR	4902900	Callee	io -> cb_printf		4902606	0					
ANR	4902901	PtrMemberAccess	io -> cb_printf		4902606	0					
ANR	4902902	Identifier	io		4902606	0					
ANR	4902903	Identifier	cb_printf		4902606	1					
ANR	4902904	ArgumentList	"""\\n"""		4902606	1					
ANR	4902905	Argument	"""\\n"""		4902606	0					
ANR	4902906	PrimaryExpression	"""\\n"""		4902606	0					
ANR	4902907	Statement	io	96:1:4168:4169	4902606	282	True				
ANR	4902908	Statement	->	96:3:4170:4171	4902606	283	True				
ANR	4902909	Statement	cb_printf	96:5:4172:4180	4902606	284	True				
ANR	4902910	Statement	(	96:15:4182:4182	4902606	285	True				
ANR	4902911	Statement	"""TTBCR: 0x%"""	96:16:4183:4194	4902606	286	True				
ANR	4902912	Statement	PFMT64x	96:28:4195:4201	4902606	287	True				
ANR	4902913	Statement	"""\\n"""	96:35:4202:4205	4902606	288	True				
ANR	4902914	Statement	","	96:39:4206:4206	4902606	289	True				
ANR	4902915	Statement	(	96:41:4208:4208	4902606	290	True				
ANR	4902916	Statement	ut64	96:42:4209:4212	4902606	291	True				
ANR	4902917	Statement	)	96:46:4213:4213	4902606	292	True				
ANR	4902918	Statement	ctrl	96:48:4215:4218	4902606	293	True				
ANR	4902919	Statement	.	96:52:4219:4219	4902606	294	True				
ANR	4902920	Statement	ttbcr	96:53:4220:4224	4902606	295	True				
ANR	4902921	Statement	)	96:58:4225:4225	4902606	296	True				
ANR	4902922	ExpressionStatement		96:59:4226:4226	4902606	297	True				
ANR	4902923	ExpressionStatement	"io -> cb_printf ( "" [*] N:    %d\\n"" , ctrl . ttbcr & 7 )"	97:1:4229:4278	4902606	298	True				
ANR	4902924	CallExpression	"io -> cb_printf ( "" [*] N:    %d\\n"" , ctrl . ttbcr & 7 )"		4902606	0					
ANR	4902925	Callee	io -> cb_printf		4902606	0					
ANR	4902926	PtrMemberAccess	io -> cb_printf		4902606	0					
ANR	4902927	Identifier	io		4902606	0					
ANR	4902928	Identifier	cb_printf		4902606	1					
ANR	4902929	ArgumentList	""" [*] N:    %d\\n"""		4902606	1					
ANR	4902930	Argument	""" [*] N:    %d\\n"""		4902606	0					
ANR	4902931	PrimaryExpression	""" [*] N:    %d\\n"""		4902606	0					
ANR	4902932	Argument	ctrl . ttbcr & 7		4902606	1					
ANR	4902933	BitAndExpression	ctrl . ttbcr & 7		4902606	0		&			
ANR	4902934	MemberAccess	ctrl . ttbcr		4902606	0					
ANR	4902935	Identifier	ctrl		4902606	0					
ANR	4902936	Identifier	ttbcr		4902606	1					
ANR	4902937	PrimaryExpression	7		4902606	1					
ANR	4902938	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	98:1:4281:4301	4902606	299	True				
ANR	4902939	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902606	0					
ANR	4902940	Callee	io -> cb_printf		4902606	0					
ANR	4902941	PtrMemberAccess	io -> cb_printf		4902606	0					
ANR	4902942	Identifier	io		4902606	0					
ANR	4902943	Identifier	cb_printf		4902606	1					
ANR	4902944	ArgumentList	"""\\n"""		4902606	1					
ANR	4902945	Argument	"""\\n"""		4902606	0					
ANR	4902946	PrimaryExpression	"""\\n"""		4902606	0					
ANR	4902947	Statement	io	100:1:4305:4306	4902606	300	True				
ANR	4902948	Statement	->	100:3:4307:4308	4902606	301	True				
ANR	4902949	Statement	cb_printf	100:5:4309:4317	4902606	302	True				
ANR	4902950	Statement	(	100:15:4319:4319	4902606	303	True				
ANR	4902951	Statement	"""C1: 0x%"""	100:16:4320:4328	4902606	304	True				
ANR	4902952	Statement	PFMT64x	100:25:4329:4335	4902606	305	True				
ANR	4902953	Statement	"""\\n"""	100:32:4336:4339	4902606	306	True				
ANR	4902954	Statement	","	100:36:4340:4340	4902606	307	True				
ANR	4902955	Statement	(	100:38:4342:4342	4902606	308	True				
ANR	4902956	Statement	ut64	100:39:4343:4346	4902606	309	True				
ANR	4902957	Statement	)	100:43:4347:4347	4902606	310	True				
ANR	4902958	Statement	ctrl	100:45:4349:4352	4902606	311	True				
ANR	4902959	Statement	.	100:49:4353:4353	4902606	312	True				
ANR	4902960	Statement	c1	100:50:4354:4355	4902606	313	True				
ANR	4902961	Statement	)	100:52:4356:4356	4902606	314	True				
ANR	4902962	ExpressionStatement		100:53:4357:4357	4902606	315	True				
ANR	4902963	Statement	io	101:1:4360:4361	4902606	316	True				
ANR	4902964	Statement	->	101:3:4362:4363	4902606	317	True				
ANR	4902965	Statement	cb_printf	101:5:4364:4372	4902606	318	True				
ANR	4902966	Statement	(	101:15:4374:4374	4902606	319	True				
ANR	4902967	Statement	""" [*] AFE:    %d\\n"""	101:16:4375:4393	4902606	320	True				
ANR	4902968	Statement	""" [*] TRE:    %d\\n"""	102:9:4404:4422	4902606	321	True				
ANR	4902969	Statement	""" [*] EE:     %d\\n"""	103:9:4433:4451	4902606	322	True				
ANR	4902970	Statement	""" [*] VE:     %d\\n"""	104:9:4462:4480	4902606	323	True				
ANR	4902971	Statement	""" [*] XP:     %d\\n"""	105:9:4491:4509	4902606	324	True				
ANR	4902972	Statement	""" [*] U:      %d\\n"""	106:9:4520:4538	4902606	325	True				
ANR	4902973	Statement	""" [*] FI:     %d\\n"""	107:9:4549:4567	4902606	326	True				
ANR	4902974	Statement	""" [*] IT:     %d\\n"""	108:9:4578:4596	4902606	327	True				
ANR	4902975	Statement	""" [*] DT:     %d\\n"""	109:9:4607:4625	4902606	328	True				
ANR	4902976	Statement	""" [*] L4:     %d\\n"""	110:9:4636:4654	4902606	329	True				
ANR	4902977	Statement	""" [*] RR:     %d\\n"""	111:9:4665:4683	4902606	330	True				
ANR	4902978	Statement	""" [*] V:      %d\\n"""	112:9:4694:4712	4902606	331	True				
ANR	4902979	Statement	""" [*] I:      %d\\n"""	113:9:4723:4741	4902606	332	True				
ANR	4902980	Statement	""" [*] Z:      %d\\n"""	114:9:4752:4770	4902606	333	True				
ANR	4902981	Statement	""" [*] F:      %d\\n"""	115:9:4781:4799	4902606	334	True				
ANR	4902982	Statement	""" [*] R:      %d\\n"""	116:9:4810:4828	4902606	335	True				
ANR	4902983	Statement	""" [*] S:      %d\\n"""	117:9:4839:4857	4902606	336	True				
ANR	4902984	Statement	""" [*] B:      %d\\n"""	118:9:4868:4886	4902606	337	True				
ANR	4902985	Statement	""" [*] W:      %d\\n"""	119:9:4897:4915	4902606	338	True				
ANR	4902986	Statement	""" [*] C:      %d\\n"""	120:9:4926:4944	4902606	339	True				
ANR	4902987	Statement	""" [*] A:      %d\\n"""	121:9:4955:4973	4902606	340	True				
ANR	4902988	Statement	""" [*] M:      %d\\n"""	122:9:4984:5002	4902606	341	True				
ANR	4902989	Statement	","	122:28:5003:5003	4902606	342	True				
ANR	4902990	Statement	fset	123:9:5014:5017	4902606	343	True				
ANR	4902991	Statement	(	123:14:5019:5019	4902606	344	True				
ANR	4902992	Statement	ctrl	123:15:5020:5023	4902606	345	True				
ANR	4902993	Statement	.	123:19:5024:5024	4902606	346	True				
ANR	4902994	Statement	c1	123:20:5025:5026	4902606	347	True				
ANR	4902995	Statement	","	123:22:5027:5027	4902606	348	True				
ANR	4902996	Statement	29	123:24:5029:5030	4902606	349	True				
ANR	4902997	Statement	)	123:26:5031:5031	4902606	350	True				
ANR	4902998	Statement	","	123:27:5032:5032	4902606	351	True				
ANR	4902999	Statement	fset	123:29:5034:5037	4902606	352	True				
ANR	4903000	Statement	(	123:34:5039:5039	4902606	353	True				
ANR	4903001	Statement	ctrl	123:35:5040:5043	4902606	354	True				
ANR	4903002	Statement	.	123:39:5044:5044	4902606	355	True				
ANR	4903003	Statement	c1	123:40:5045:5046	4902606	356	True				
ANR	4903004	Statement	","	123:42:5047:5047	4902606	357	True				
ANR	4903005	Statement	28	123:44:5049:5050	4902606	358	True				
ANR	4903006	Statement	)	123:46:5051:5051	4902606	359	True				
ANR	4903007	Statement	","	123:47:5052:5052	4902606	360	True				
ANR	4903008	Statement	fset	123:49:5054:5057	4902606	361	True				
ANR	4903009	Statement	(	123:54:5059:5059	4902606	362	True				
ANR	4903010	Statement	ctrl	123:55:5060:5063	4902606	363	True				
ANR	4903011	Statement	.	123:59:5064:5064	4902606	364	True				
ANR	4903012	Statement	c1	123:60:5065:5066	4902606	365	True				
ANR	4903013	Statement	","	123:62:5067:5067	4902606	366	True				
ANR	4903014	Statement	25	123:64:5069:5070	4902606	367	True				
ANR	4903015	Statement	)	123:66:5071:5071	4902606	368	True				
ANR	4903016	Statement	","	123:67:5072:5072	4902606	369	True				
ANR	4903017	Statement	fset	123:69:5074:5077	4902606	370	True				
ANR	4903018	Statement	(	123:74:5079:5079	4902606	371	True				
ANR	4903019	Statement	ctrl	123:75:5080:5083	4902606	372	True				
ANR	4903020	Statement	.	123:79:5084:5084	4902606	373	True				
ANR	4903021	Statement	c1	123:80:5085:5086	4902606	374	True				
ANR	4903022	Statement	","	123:82:5087:5087	4902606	375	True				
ANR	4903023	Statement	24	123:84:5089:5090	4902606	376	True				
ANR	4903024	Statement	)	123:86:5091:5091	4902606	377	True				
ANR	4903025	Statement	","	123:87:5092:5092	4902606	378	True				
ANR	4903026	Statement	fset	124:9:5103:5106	4902606	379	True				
ANR	4903027	Statement	(	124:14:5108:5108	4902606	380	True				
ANR	4903028	Statement	ctrl	124:15:5109:5112	4902606	381	True				
ANR	4903029	Statement	.	124:19:5113:5113	4902606	382	True				
ANR	4903030	Statement	c1	124:20:5114:5115	4902606	383	True				
ANR	4903031	Statement	","	124:22:5116:5116	4902606	384	True				
ANR	4903032	Statement	23	124:24:5118:5119	4902606	385	True				
ANR	4903033	Statement	)	124:26:5120:5120	4902606	386	True				
ANR	4903034	Statement	","	124:27:5121:5121	4902606	387	True				
ANR	4903035	Statement	fset	124:29:5123:5126	4902606	388	True				
ANR	4903036	Statement	(	124:34:5128:5128	4902606	389	True				
ANR	4903037	Statement	ctrl	124:35:5129:5132	4902606	390	True				
ANR	4903038	Statement	.	124:39:5133:5133	4902606	391	True				
ANR	4903039	Statement	c1	124:40:5134:5135	4902606	392	True				
ANR	4903040	Statement	","	124:42:5136:5136	4902606	393	True				
ANR	4903041	Statement	22	124:44:5138:5139	4902606	394	True				
ANR	4903042	Statement	)	124:46:5140:5140	4902606	395	True				
ANR	4903043	Statement	","	124:47:5141:5141	4902606	396	True				
ANR	4903044	Statement	fset	124:49:5143:5146	4902606	397	True				
ANR	4903045	Statement	(	124:54:5148:5148	4902606	398	True				
ANR	4903046	Statement	ctrl	124:55:5149:5152	4902606	399	True				
ANR	4903047	Statement	.	124:59:5153:5153	4902606	400	True				
ANR	4903048	Statement	c1	124:60:5154:5155	4902606	401	True				
ANR	4903049	Statement	","	124:62:5156:5156	4902606	402	True				
ANR	4903050	Statement	21	124:64:5158:5159	4902606	403	True				
ANR	4903051	Statement	)	124:66:5160:5160	4902606	404	True				
ANR	4903052	Statement	","	124:67:5161:5161	4902606	405	True				
ANR	4903053	Statement	fset	124:69:5163:5166	4902606	406	True				
ANR	4903054	Statement	(	124:74:5168:5168	4902606	407	True				
ANR	4903055	Statement	ctrl	124:75:5169:5172	4902606	408	True				
ANR	4903056	Statement	.	124:79:5173:5173	4902606	409	True				
ANR	4903057	Statement	c1	124:80:5174:5175	4902606	410	True				
ANR	4903058	Statement	","	124:82:5176:5176	4902606	411	True				
ANR	4903059	Statement	18	124:84:5178:5179	4902606	412	True				
ANR	4903060	Statement	)	124:86:5180:5180	4902606	413	True				
ANR	4903061	Statement	","	124:87:5181:5181	4902606	414	True				
ANR	4903062	Statement	fset	125:9:5192:5195	4902606	415	True				
ANR	4903063	Statement	(	125:14:5197:5197	4902606	416	True				
ANR	4903064	Statement	ctrl	125:15:5198:5201	4902606	417	True				
ANR	4903065	Statement	.	125:19:5202:5202	4902606	418	True				
ANR	4903066	Statement	c1	125:20:5203:5204	4902606	419	True				
ANR	4903067	Statement	","	125:22:5205:5205	4902606	420	True				
ANR	4903068	Statement	16	125:24:5207:5208	4902606	421	True				
ANR	4903069	Statement	)	125:26:5209:5209	4902606	422	True				
ANR	4903070	Statement	","	125:27:5210:5210	4902606	423	True				
ANR	4903071	Statement	fset	125:29:5212:5215	4902606	424	True				
ANR	4903072	Statement	(	125:34:5217:5217	4902606	425	True				
ANR	4903073	Statement	ctrl	125:35:5218:5221	4902606	426	True				
ANR	4903074	Statement	.	125:39:5222:5222	4902606	427	True				
ANR	4903075	Statement	c1	125:40:5223:5224	4902606	428	True				
ANR	4903076	Statement	","	125:42:5225:5225	4902606	429	True				
ANR	4903077	Statement	15	125:44:5227:5228	4902606	430	True				
ANR	4903078	Statement	)	125:46:5229:5229	4902606	431	True				
ANR	4903079	Statement	","	125:47:5230:5230	4902606	432	True				
ANR	4903080	Statement	fset	125:49:5232:5235	4902606	433	True				
ANR	4903081	Statement	(	125:54:5237:5237	4902606	434	True				
ANR	4903082	Statement	ctrl	125:55:5238:5241	4902606	435	True				
ANR	4903083	Statement	.	125:59:5242:5242	4902606	436	True				
ANR	4903084	Statement	c1	125:60:5243:5244	4902606	437	True				
ANR	4903085	Statement	","	125:62:5245:5245	4902606	438	True				
ANR	4903086	Statement	14	125:64:5247:5248	4902606	439	True				
ANR	4903087	Statement	)	125:66:5249:5249	4902606	440	True				
ANR	4903088	Statement	","	125:67:5250:5250	4902606	441	True				
ANR	4903089	Statement	fset	125:69:5252:5255	4902606	442	True				
ANR	4903090	Statement	(	125:74:5257:5257	4902606	443	True				
ANR	4903091	Statement	ctrl	125:75:5258:5261	4902606	444	True				
ANR	4903092	Statement	.	125:79:5262:5262	4902606	445	True				
ANR	4903093	Statement	c1	125:80:5263:5264	4902606	446	True				
ANR	4903094	Statement	","	125:82:5265:5265	4902606	447	True				
ANR	4903095	Statement	13	125:84:5267:5268	4902606	448	True				
ANR	4903096	Statement	)	125:86:5269:5269	4902606	449	True				
ANR	4903097	Statement	","	125:87:5270:5270	4902606	450	True				
ANR	4903098	Statement	fset	126:9:5281:5284	4902606	451	True				
ANR	4903099	Statement	(	126:14:5286:5286	4902606	452	True				
ANR	4903100	Statement	ctrl	126:15:5287:5290	4902606	453	True				
ANR	4903101	Statement	.	126:19:5291:5291	4902606	454	True				
ANR	4903102	Statement	c1	126:20:5292:5293	4902606	455	True				
ANR	4903103	Statement	","	126:22:5294:5294	4902606	456	True				
ANR	4903104	Statement	12	126:24:5296:5297	4902606	457	True				
ANR	4903105	Statement	)	126:26:5298:5298	4902606	458	True				
ANR	4903106	Statement	","	126:27:5299:5299	4902606	459	True				
ANR	4903107	Statement	fset	126:29:5301:5304	4902606	460	True				
ANR	4903108	Statement	(	126:34:5306:5306	4902606	461	True				
ANR	4903109	Statement	ctrl	126:35:5307:5310	4902606	462	True				
ANR	4903110	Statement	.	126:39:5311:5311	4902606	463	True				
ANR	4903111	Statement	c1	126:40:5312:5313	4902606	464	True				
ANR	4903112	Statement	","	126:42:5314:5314	4902606	465	True				
ANR	4903113	Statement	11	126:44:5316:5317	4902606	466	True				
ANR	4903114	Statement	)	126:46:5318:5318	4902606	467	True				
ANR	4903115	Statement	","	126:47:5319:5319	4902606	468	True				
ANR	4903116	Statement	fset	126:49:5321:5324	4902606	469	True				
ANR	4903117	Statement	(	126:54:5326:5326	4902606	470	True				
ANR	4903118	Statement	ctrl	126:55:5327:5330	4902606	471	True				
ANR	4903119	Statement	.	126:59:5331:5331	4902606	472	True				
ANR	4903120	Statement	c1	126:60:5332:5333	4902606	473	True				
ANR	4903121	Statement	","	126:62:5334:5334	4902606	474	True				
ANR	4903122	Statement	10	126:64:5336:5337	4902606	475	True				
ANR	4903123	Statement	)	126:66:5338:5338	4902606	476	True				
ANR	4903124	Statement	","	126:67:5339:5339	4902606	477	True				
ANR	4903125	Statement	fset	126:69:5341:5344	4902606	478	True				
ANR	4903126	Statement	(	126:74:5346:5346	4902606	479	True				
ANR	4903127	Statement	ctrl	126:75:5347:5350	4902606	480	True				
ANR	4903128	Statement	.	126:79:5351:5351	4902606	481	True				
ANR	4903129	Statement	c1	126:80:5352:5353	4902606	482	True				
ANR	4903130	Statement	","	126:82:5354:5354	4902606	483	True				
ANR	4903131	Statement	9	126:84:5356:5356	4902606	484	True				
ANR	4903132	Statement	)	126:85:5357:5357	4902606	485	True				
ANR	4903133	Statement	","	126:86:5358:5358	4902606	486	True				
ANR	4903134	Statement	fset	127:9:5369:5372	4902606	487	True				
ANR	4903135	Statement	(	127:14:5374:5374	4902606	488	True				
ANR	4903136	Statement	ctrl	127:15:5375:5378	4902606	489	True				
ANR	4903137	Statement	.	127:19:5379:5379	4902606	490	True				
ANR	4903138	Statement	c1	127:20:5380:5381	4902606	491	True				
ANR	4903139	Statement	","	127:22:5382:5382	4902606	492	True				
ANR	4903140	Statement	8	127:24:5384:5384	4902606	493	True				
ANR	4903141	Statement	)	127:25:5385:5385	4902606	494	True				
ANR	4903142	Statement	","	127:26:5386:5386	4902606	495	True				
ANR	4903143	Statement	fset	127:28:5388:5391	4902606	496	True				
ANR	4903144	Statement	(	127:33:5393:5393	4902606	497	True				
ANR	4903145	Statement	ctrl	127:34:5394:5397	4902606	498	True				
ANR	4903146	Statement	.	127:38:5398:5398	4902606	499	True				
ANR	4903147	Statement	c1	127:39:5399:5400	4902606	500	True				
ANR	4903148	Statement	","	127:41:5401:5401	4902606	501	True				
ANR	4903149	Statement	7	127:43:5403:5403	4902606	502	True				
ANR	4903150	Statement	)	127:44:5404:5404	4902606	503	True				
ANR	4903151	Statement	","	127:45:5405:5405	4902606	504	True				
ANR	4903152	Statement	fset	127:47:5407:5410	4902606	505	True				
ANR	4903153	Statement	(	127:52:5412:5412	4902606	506	True				
ANR	4903154	Statement	ctrl	127:53:5413:5416	4902606	507	True				
ANR	4903155	Statement	.	127:57:5417:5417	4902606	508	True				
ANR	4903156	Statement	c1	127:58:5418:5419	4902606	509	True				
ANR	4903157	Statement	","	127:60:5420:5420	4902606	510	True				
ANR	4903158	Statement	3	127:62:5422:5422	4902606	511	True				
ANR	4903159	Statement	)	127:63:5423:5423	4902606	512	True				
ANR	4903160	Statement	","	127:64:5424:5424	4902606	513	True				
ANR	4903161	Statement	fset	127:66:5426:5429	4902606	514	True				
ANR	4903162	Statement	(	127:71:5431:5431	4902606	515	True				
ANR	4903163	Statement	ctrl	127:72:5432:5435	4902606	516	True				
ANR	4903164	Statement	.	127:76:5436:5436	4902606	517	True				
ANR	4903165	Statement	c1	127:77:5437:5438	4902606	518	True				
ANR	4903166	Statement	","	127:79:5439:5439	4902606	519	True				
ANR	4903167	Statement	2	127:81:5441:5441	4902606	520	True				
ANR	4903168	Statement	)	127:82:5442:5442	4902606	521	True				
ANR	4903169	Statement	","	127:83:5443:5443	4902606	522	True				
ANR	4903170	Statement	fset	128:9:5454:5457	4902606	523	True				
ANR	4903171	Statement	(	128:14:5459:5459	4902606	524	True				
ANR	4903172	Statement	ctrl	128:15:5460:5463	4902606	525	True				
ANR	4903173	Statement	.	128:19:5464:5464	4902606	526	True				
ANR	4903174	Statement	c1	128:20:5465:5466	4902606	527	True				
ANR	4903175	Statement	","	128:22:5467:5467	4902606	528	True				
ANR	4903176	Statement	1	128:24:5469:5469	4902606	529	True				
ANR	4903177	Statement	)	128:25:5470:5470	4902606	530	True				
ANR	4903178	Statement	","	128:26:5471:5471	4902606	531	True				
ANR	4903179	Statement	fset	128:28:5473:5476	4902606	532	True				
ANR	4903180	Statement	(	128:33:5478:5478	4902606	533	True				
ANR	4903181	Statement	ctrl	128:34:5479:5482	4902606	534	True				
ANR	4903182	Statement	.	128:38:5483:5483	4902606	535	True				
ANR	4903183	Statement	c1	128:39:5484:5485	4902606	536	True				
ANR	4903184	Statement	","	128:41:5486:5486	4902606	537	True				
ANR	4903185	Statement	0	128:43:5488:5488	4902606	538	True				
ANR	4903186	Statement	)	128:44:5489:5489	4902606	539	True				
ANR	4903187	Statement	)	128:45:5490:5490	4902606	540	True				
ANR	4903188	ExpressionStatement		128:46:5491:5491	4902606	541	True				
ANR	4903189	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	129:1:5494:5514	4902606	542	True				
ANR	4903190	CallExpression	"io -> cb_printf ( ""\\n"" )"		4902606	0					
ANR	4903191	Callee	io -> cb_printf		4902606	0					
ANR	4903192	PtrMemberAccess	io -> cb_printf		4902606	0					
ANR	4903193	Identifier	io		4902606	0					
ANR	4903194	Identifier	cb_printf		4902606	1					
ANR	4903195	ArgumentList	"""\\n"""		4902606	1					
ANR	4903196	Argument	"""\\n"""		4902606	0					
ANR	4903197	PrimaryExpression	"""\\n"""		4902606	0					
ANR	4903198	Statement	io	131:1:5518:5519	4902606	543	True				
ANR	4903199	Statement	->	131:3:5520:5521	4902606	544	True				
ANR	4903200	Statement	cb_printf	131:5:5522:5530	4902606	545	True				
ANR	4903201	Statement	(	131:15:5532:5532	4902606	546	True				
ANR	4903202	Statement	"""C3: 0x%"""	131:16:5533:5541	4902606	547	True				
ANR	4903203	Statement	PFMT64x	131:25:5542:5548	4902606	548	True				
ANR	4903204	Statement	"""\\n"""	131:32:5549:5552	4902606	549	True				
ANR	4903205	Statement	","	131:36:5553:5553	4902606	550	True				
ANR	4903206	Statement	(	131:38:5555:5555	4902606	551	True				
ANR	4903207	Statement	ut64	131:39:5556:5559	4902606	552	True				
ANR	4903208	Statement	)	131:43:5560:5560	4902606	553	True				
ANR	4903209	Statement	ctrl	131:45:5562:5565	4902606	554	True				
ANR	4903210	Statement	.	131:49:5566:5566	4902606	555	True				
ANR	4903211	Statement	c3	131:50:5567:5568	4902606	556	True				
ANR	4903212	Statement	)	131:52:5569:5569	4902606	557	True				
ANR	4903213	ExpressionStatement		131:53:5570:5570	4902606	558	True				
ANR	4903214	ReturnType	static void		4902606	1					
ANR	4903215	Identifier	arm_ctrl_reg_pretty_print		4902606	2					
ANR	4903216	ParameterList	"RIO * io , struct r2k_control_reg ctrl"		4902606	3					
ANR	4903217	Parameter	RIO * io	72:39:2777:2783	4902606	0	True				
ANR	4903218	ParameterType	RIO *		4902606	0					
ANR	4903219	Identifier	io		4902606	1					
ANR	4903220	Parameter	struct r2k_control_reg ctrl	72:48:2786:2812	4902606	1	True				
ANR	4903221	ParameterType	struct r2k_control_reg		4902606	0					
ANR	4903222	Identifier	ctrl		4902606	1					
ANR	4903223	CFGEntryNode	ENTRY		4902606		True				
ANR	4903224	CFGExitNode	EXIT		4902606		True				
ANR	4903225	Symbol	ctrl		4902606						
ANR	4903226	Symbol	ctrl . ttbcr		4902606						
ANR	4903227	Symbol	io		4902606						
ANR	4903228	Function	arm64_ctrl_reg_pretty_print	136:0:5700:8729							
ANR	4903229	FunctionDef	"arm64_ctrl_reg_pretty_print (RIO * io , struct r2k_control_reg ctrl)"		4903228	0					
ANR	4903230	CompoundStatement		136:79:5779:8729	4903228	0					
ANR	4903231	Statement	io	137:1:5782:5783	4903228	0	True				
ANR	4903232	Statement	->	137:3:5784:5785	4903228	1	True				
ANR	4903233	Statement	cb_printf	137:5:5786:5794	4903228	2	True				
ANR	4903234	Statement	(	137:15:5796:5796	4903228	3	True				
ANR	4903235	Statement	"""SCTLR_EL1: 0x%"""	137:16:5797:5812	4903228	4	True				
ANR	4903236	Statement	PFMT64x	137:32:5813:5819	4903228	5	True				
ANR	4903237	Statement	"""\\n"""	137:39:5820:5823	4903228	6	True				
ANR	4903238	Statement	","	137:43:5824:5824	4903228	7	True				
ANR	4903239	Statement	ctrl	137:45:5826:5829	4903228	8	True				
ANR	4903240	Statement	.	137:49:5830:5830	4903228	9	True				
ANR	4903241	Statement	sctlr_el1	137:50:5831:5839	4903228	10	True				
ANR	4903242	Statement	)	137:59:5840:5840	4903228	11	True				
ANR	4903243	ExpressionStatement		137:60:5841:5841	4903228	12	True				
ANR	4903244	Statement	io	138:1:5844:5845	4903228	13	True				
ANR	4903245	Statement	->	138:3:5846:5847	4903228	14	True				
ANR	4903246	Statement	cb_printf	138:5:5848:5856	4903228	15	True				
ANR	4903247	Statement	(	138:15:5858:5858	4903228	16	True				
ANR	4903248	Statement	""" [*] UCI:     %d\\n"""	138:16:5859:5878	4903228	17	True				
ANR	4903249	Statement	""" [*] EE:      %d\\n"""	139:9:5889:5908	4903228	18	True				
ANR	4903250	Statement	""" [*] E0E:     %d\\n"""	140:9:5919:5938	4903228	19	True				
ANR	4903251	Statement	""" [*] WXN:     %d\\n"""	141:9:5949:5968	4903228	20	True				
ANR	4903252	Statement	""" [*] nTWE:    %d\\n"""	142:9:5979:5998	4903228	21	True				
ANR	4903253	Statement	""" [*] nTWI:    %d\\n"""	143:9:6009:6028	4903228	22	True				
ANR	4903254	Statement	""" [*] UCT:     %d\\n"""	144:9:6039:6058	4903228	23	True				
ANR	4903255	Statement	""" [*] DZE:     %d\\n"""	145:9:6069:6088	4903228	24	True				
ANR	4903256	Statement	""" [*] I:       %d\\n"""	146:9:6099:6118	4903228	25	True				
ANR	4903257	Statement	""" [*] UMA:     %d\\n"""	147:9:6129:6148	4903228	26	True				
ANR	4903258	Statement	""" [*] SED:     %d\\n"""	148:9:6159:6178	4903228	27	True				
ANR	4903259	Statement	""" [*] ITD:     %d\\n"""	149:9:6189:6208	4903228	28	True				
ANR	4903260	Statement	""" [*] THEE:    %d\\n"""	150:9:6219:6238	4903228	29	True				
ANR	4903261	Statement	""" [*] CP15BEN: %d\\n"""	151:9:6249:6268	4903228	30	True				
ANR	4903262	Statement	""" [*] SAO:     %d\\n"""	152:9:6279:6298	4903228	31	True				
ANR	4903263	Statement	""" [*] SA:      %d\\n"""	153:9:6309:6328	4903228	32	True				
ANR	4903264	Statement	""" [*] C:       %d\\n"""	154:9:6339:6358	4903228	33	True				
ANR	4903265	Statement	""" [*] A:       %d\\n"""	155:9:6369:6388	4903228	34	True				
ANR	4903266	Statement	""" [*] M:       %d\\n"""	156:9:6399:6418	4903228	35	True				
ANR	4903267	Statement	","	156:29:6419:6419	4903228	36	True				
ANR	4903268	Statement	fset	157:9:6430:6433	4903228	37	True				
ANR	4903269	Statement	(	157:14:6435:6435	4903228	38	True				
ANR	4903270	Statement	ctrl	157:15:6436:6439	4903228	39	True				
ANR	4903271	Statement	.	157:19:6440:6440	4903228	40	True				
ANR	4903272	Statement	sctlr_el1	157:20:6441:6449	4903228	41	True				
ANR	4903273	Statement	","	157:29:6450:6450	4903228	42	True				
ANR	4903274	Statement	26	157:31:6452:6453	4903228	43	True				
ANR	4903275	Statement	)	157:33:6454:6454	4903228	44	True				
ANR	4903276	Statement	","	157:34:6455:6455	4903228	45	True				
ANR	4903277	Statement	fset	157:36:6457:6460	4903228	46	True				
ANR	4903278	Statement	(	157:41:6462:6462	4903228	47	True				
ANR	4903279	Statement	ctrl	157:42:6463:6466	4903228	48	True				
ANR	4903280	Statement	.	157:46:6467:6467	4903228	49	True				
ANR	4903281	Statement	sctlr_el1	157:47:6468:6476	4903228	50	True				
ANR	4903282	Statement	","	157:56:6477:6477	4903228	51	True				
ANR	4903283	Statement	25	157:58:6479:6480	4903228	52	True				
ANR	4903284	Statement	)	157:60:6481:6481	4903228	53	True				
ANR	4903285	Statement	","	157:61:6482:6482	4903228	54	True				
ANR	4903286	Statement	fset	157:63:6484:6487	4903228	55	True				
ANR	4903287	Statement	(	157:68:6489:6489	4903228	56	True				
ANR	4903288	Statement	ctrl	157:69:6490:6493	4903228	57	True				
ANR	4903289	Statement	.	157:73:6494:6494	4903228	58	True				
ANR	4903290	Statement	sctlr_el1	157:74:6495:6503	4903228	59	True				
ANR	4903291	Statement	","	157:83:6504:6504	4903228	60	True				
ANR	4903292	Statement	24	157:85:6506:6507	4903228	61	True				
ANR	4903293	Statement	)	157:87:6508:6508	4903228	62	True				
ANR	4903294	Statement	","	157:88:6509:6509	4903228	63	True				
ANR	4903295	Statement	fset	157:90:6511:6514	4903228	64	True				
ANR	4903296	Statement	(	157:95:6516:6516	4903228	65	True				
ANR	4903297	Statement	ctrl	157:96:6517:6520	4903228	66	True				
ANR	4903298	Statement	.	157:100:6521:6521	4903228	67	True				
ANR	4903299	Statement	sctlr_el1	157:101:6522:6530	4903228	68	True				
ANR	4903300	Statement	","	157:110:6531:6531	4903228	69	True				
ANR	4903301	Statement	19	157:112:6533:6534	4903228	70	True				
ANR	4903302	Statement	)	157:114:6535:6535	4903228	71	True				
ANR	4903303	Statement	","	157:115:6536:6536	4903228	72	True				
ANR	4903304	Statement	fset	158:9:6547:6550	4903228	73	True				
ANR	4903305	Statement	(	158:14:6552:6552	4903228	74	True				
ANR	4903306	Statement	ctrl	158:15:6553:6556	4903228	75	True				
ANR	4903307	Statement	.	158:19:6557:6557	4903228	76	True				
ANR	4903308	Statement	sctlr_el1	158:20:6558:6566	4903228	77	True				
ANR	4903309	Statement	","	158:29:6567:6567	4903228	78	True				
ANR	4903310	Statement	18	158:31:6569:6570	4903228	79	True				
ANR	4903311	Statement	)	158:33:6571:6571	4903228	80	True				
ANR	4903312	Statement	","	158:34:6572:6572	4903228	81	True				
ANR	4903313	Statement	fset	158:36:6574:6577	4903228	82	True				
ANR	4903314	Statement	(	158:41:6579:6579	4903228	83	True				
ANR	4903315	Statement	ctrl	158:42:6580:6583	4903228	84	True				
ANR	4903316	Statement	.	158:46:6584:6584	4903228	85	True				
ANR	4903317	Statement	sctlr_el1	158:47:6585:6593	4903228	86	True				
ANR	4903318	Statement	","	158:56:6594:6594	4903228	87	True				
ANR	4903319	Statement	16	158:58:6596:6597	4903228	88	True				
ANR	4903320	Statement	)	158:60:6598:6598	4903228	89	True				
ANR	4903321	Statement	","	158:61:6599:6599	4903228	90	True				
ANR	4903322	Statement	fset	158:63:6601:6604	4903228	91	True				
ANR	4903323	Statement	(	158:68:6606:6606	4903228	92	True				
ANR	4903324	Statement	ctrl	158:69:6607:6610	4903228	93	True				
ANR	4903325	Statement	.	158:73:6611:6611	4903228	94	True				
ANR	4903326	Statement	sctlr_el1	158:74:6612:6620	4903228	95	True				
ANR	4903327	Statement	","	158:83:6621:6621	4903228	96	True				
ANR	4903328	Statement	15	158:85:6623:6624	4903228	97	True				
ANR	4903329	Statement	)	158:87:6625:6625	4903228	98	True				
ANR	4903330	Statement	","	158:88:6626:6626	4903228	99	True				
ANR	4903331	Statement	fset	158:90:6628:6631	4903228	100	True				
ANR	4903332	Statement	(	158:95:6633:6633	4903228	101	True				
ANR	4903333	Statement	ctrl	158:96:6634:6637	4903228	102	True				
ANR	4903334	Statement	.	158:100:6638:6638	4903228	103	True				
ANR	4903335	Statement	sctlr_el1	158:101:6639:6647	4903228	104	True				
ANR	4903336	Statement	","	158:110:6648:6648	4903228	105	True				
ANR	4903337	Statement	14	158:112:6650:6651	4903228	106	True				
ANR	4903338	Statement	)	158:114:6652:6652	4903228	107	True				
ANR	4903339	Statement	","	158:115:6653:6653	4903228	108	True				
ANR	4903340	Statement	fset	159:9:6664:6667	4903228	109	True				
ANR	4903341	Statement	(	159:14:6669:6669	4903228	110	True				
ANR	4903342	Statement	ctrl	159:15:6670:6673	4903228	111	True				
ANR	4903343	Statement	.	159:19:6674:6674	4903228	112	True				
ANR	4903344	Statement	sctlr_el1	159:20:6675:6683	4903228	113	True				
ANR	4903345	Statement	","	159:29:6684:6684	4903228	114	True				
ANR	4903346	Statement	12	159:31:6686:6687	4903228	115	True				
ANR	4903347	Statement	)	159:33:6688:6688	4903228	116	True				
ANR	4903348	Statement	","	159:34:6689:6689	4903228	117	True				
ANR	4903349	Statement	fset	159:36:6691:6694	4903228	118	True				
ANR	4903350	Statement	(	159:41:6696:6696	4903228	119	True				
ANR	4903351	Statement	ctrl	159:42:6697:6700	4903228	120	True				
ANR	4903352	Statement	.	159:46:6701:6701	4903228	121	True				
ANR	4903353	Statement	sctlr_el1	159:47:6702:6710	4903228	122	True				
ANR	4903354	Statement	","	159:56:6711:6711	4903228	123	True				
ANR	4903355	Statement	9	159:58:6713:6713	4903228	124	True				
ANR	4903356	Statement	)	159:59:6714:6714	4903228	125	True				
ANR	4903357	Statement	","	159:60:6715:6715	4903228	126	True				
ANR	4903358	Statement	fset	159:62:6717:6720	4903228	127	True				
ANR	4903359	Statement	(	159:67:6722:6722	4903228	128	True				
ANR	4903360	Statement	ctrl	159:68:6723:6726	4903228	129	True				
ANR	4903361	Statement	.	159:72:6727:6727	4903228	130	True				
ANR	4903362	Statement	sctlr_el1	159:73:6728:6736	4903228	131	True				
ANR	4903363	Statement	","	159:82:6737:6737	4903228	132	True				
ANR	4903364	Statement	8	159:84:6739:6739	4903228	133	True				
ANR	4903365	Statement	)	159:85:6740:6740	4903228	134	True				
ANR	4903366	Statement	","	159:86:6741:6741	4903228	135	True				
ANR	4903367	Statement	fset	159:88:6743:6746	4903228	136	True				
ANR	4903368	Statement	(	159:93:6748:6748	4903228	137	True				
ANR	4903369	Statement	ctrl	159:94:6749:6752	4903228	138	True				
ANR	4903370	Statement	.	159:98:6753:6753	4903228	139	True				
ANR	4903371	Statement	sctlr_el1	159:99:6754:6762	4903228	140	True				
ANR	4903372	Statement	","	159:108:6763:6763	4903228	141	True				
ANR	4903373	Statement	7	159:110:6765:6765	4903228	142	True				
ANR	4903374	Statement	)	159:111:6766:6766	4903228	143	True				
ANR	4903375	Statement	","	159:112:6767:6767	4903228	144	True				
ANR	4903376	Statement	fset	160:9:6778:6781	4903228	145	True				
ANR	4903377	Statement	(	160:14:6783:6783	4903228	146	True				
ANR	4903378	Statement	ctrl	160:15:6784:6787	4903228	147	True				
ANR	4903379	Statement	.	160:19:6788:6788	4903228	148	True				
ANR	4903380	Statement	sctlr_el1	160:20:6789:6797	4903228	149	True				
ANR	4903381	Statement	","	160:29:6798:6798	4903228	150	True				
ANR	4903382	Statement	6	160:31:6800:6800	4903228	151	True				
ANR	4903383	Statement	)	160:32:6801:6801	4903228	152	True				
ANR	4903384	Statement	","	160:33:6802:6802	4903228	153	True				
ANR	4903385	Statement	fset	160:35:6804:6807	4903228	154	True				
ANR	4903386	Statement	(	160:40:6809:6809	4903228	155	True				
ANR	4903387	Statement	ctrl	160:41:6810:6813	4903228	156	True				
ANR	4903388	Statement	.	160:45:6814:6814	4903228	157	True				
ANR	4903389	Statement	sctlr_el1	160:46:6815:6823	4903228	158	True				
ANR	4903390	Statement	","	160:55:6824:6824	4903228	159	True				
ANR	4903391	Statement	5	160:57:6826:6826	4903228	160	True				
ANR	4903392	Statement	)	160:58:6827:6827	4903228	161	True				
ANR	4903393	Statement	","	160:59:6828:6828	4903228	162	True				
ANR	4903394	Statement	fset	160:61:6830:6833	4903228	163	True				
ANR	4903395	Statement	(	160:66:6835:6835	4903228	164	True				
ANR	4903396	Statement	ctrl	160:67:6836:6839	4903228	165	True				
ANR	4903397	Statement	.	160:71:6840:6840	4903228	166	True				
ANR	4903398	Statement	sctlr_el1	160:72:6841:6849	4903228	167	True				
ANR	4903399	Statement	","	160:81:6850:6850	4903228	168	True				
ANR	4903400	Statement	4	160:83:6852:6852	4903228	169	True				
ANR	4903401	Statement	)	160:84:6853:6853	4903228	170	True				
ANR	4903402	Statement	","	160:85:6854:6854	4903228	171	True				
ANR	4903403	Statement	fset	160:87:6856:6859	4903228	172	True				
ANR	4903404	Statement	(	160:92:6861:6861	4903228	173	True				
ANR	4903405	Statement	ctrl	160:93:6862:6865	4903228	174	True				
ANR	4903406	Statement	.	160:97:6866:6866	4903228	175	True				
ANR	4903407	Statement	sctlr_el1	160:98:6867:6875	4903228	176	True				
ANR	4903408	Statement	","	160:107:6876:6876	4903228	177	True				
ANR	4903409	Statement	3	160:109:6878:6878	4903228	178	True				
ANR	4903410	Statement	)	160:110:6879:6879	4903228	179	True				
ANR	4903411	Statement	","	160:111:6880:6880	4903228	180	True				
ANR	4903412	Statement	fset	161:9:6891:6894	4903228	181	True				
ANR	4903413	Statement	(	161:14:6896:6896	4903228	182	True				
ANR	4903414	Statement	ctrl	161:15:6897:6900	4903228	183	True				
ANR	4903415	Statement	.	161:19:6901:6901	4903228	184	True				
ANR	4903416	Statement	sctlr_el1	161:20:6902:6910	4903228	185	True				
ANR	4903417	Statement	","	161:29:6911:6911	4903228	186	True				
ANR	4903418	Statement	2	161:31:6913:6913	4903228	187	True				
ANR	4903419	Statement	)	161:32:6914:6914	4903228	188	True				
ANR	4903420	Statement	","	161:33:6915:6915	4903228	189	True				
ANR	4903421	Statement	fset	161:35:6917:6920	4903228	190	True				
ANR	4903422	Statement	(	161:40:6922:6922	4903228	191	True				
ANR	4903423	Statement	ctrl	161:41:6923:6926	4903228	192	True				
ANR	4903424	Statement	.	161:45:6927:6927	4903228	193	True				
ANR	4903425	Statement	sctlr_el1	161:46:6928:6936	4903228	194	True				
ANR	4903426	Statement	","	161:55:6937:6937	4903228	195	True				
ANR	4903427	Statement	1	161:57:6939:6939	4903228	196	True				
ANR	4903428	Statement	)	161:58:6940:6940	4903228	197	True				
ANR	4903429	Statement	","	161:59:6941:6941	4903228	198	True				
ANR	4903430	Statement	fset	161:61:6943:6946	4903228	199	True				
ANR	4903431	Statement	(	161:66:6948:6948	4903228	200	True				
ANR	4903432	Statement	ctrl	161:67:6949:6952	4903228	201	True				
ANR	4903433	Statement	.	161:71:6953:6953	4903228	202	True				
ANR	4903434	Statement	sctlr_el1	161:72:6954:6962	4903228	203	True				
ANR	4903435	Statement	","	161:81:6963:6963	4903228	204	True				
ANR	4903436	Statement	0	161:83:6965:6965	4903228	205	True				
ANR	4903437	Statement	)	161:84:6966:6966	4903228	206	True				
ANR	4903438	Statement	)	161:85:6967:6967	4903228	207	True				
ANR	4903439	ExpressionStatement		161:86:6968:6968	4903228	208	True				
ANR	4903440	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	162:1:6971:6991	4903228	209	True				
ANR	4903441	CallExpression	"io -> cb_printf ( ""\\n"" )"		4903228	0					
ANR	4903442	Callee	io -> cb_printf		4903228	0					
ANR	4903443	PtrMemberAccess	io -> cb_printf		4903228	0					
ANR	4903444	Identifier	io		4903228	0					
ANR	4903445	Identifier	cb_printf		4903228	1					
ANR	4903446	ArgumentList	"""\\n"""		4903228	1					
ANR	4903447	Argument	"""\\n"""		4903228	0					
ANR	4903448	PrimaryExpression	"""\\n"""		4903228	0					
ANR	4903449	Statement	io	164:1:6995:6996	4903228	210	True				
ANR	4903450	Statement	->	164:3:6997:6998	4903228	211	True				
ANR	4903451	Statement	cb_printf	164:5:6999:7007	4903228	212	True				
ANR	4903452	Statement	(	164:15:7009:7009	4903228	213	True				
ANR	4903453	Statement	"""TTBR0_EL1: 0x%"""	164:16:7010:7025	4903228	214	True				
ANR	4903454	Statement	PFMT64x	164:32:7026:7032	4903228	215	True				
ANR	4903455	Statement	"""\\n"""	164:39:7033:7036	4903228	216	True				
ANR	4903456	Statement	","	164:43:7037:7037	4903228	217	True				
ANR	4903457	Statement	ctrl	164:45:7039:7042	4903228	218	True				
ANR	4903458	Statement	.	164:49:7043:7043	4903228	219	True				
ANR	4903459	Statement	ttbr0_el1	164:50:7044:7052	4903228	220	True				
ANR	4903460	Statement	)	164:59:7053:7053	4903228	221	True				
ANR	4903461	ExpressionStatement		164:60:7054:7054	4903228	222	True				
ANR	4903462	Statement	io	165:1:7057:7058	4903228	223	True				
ANR	4903463	Statement	->	165:3:7059:7060	4903228	224	True				
ANR	4903464	Statement	cb_printf	165:5:7061:7069	4903228	225	True				
ANR	4903465	Statement	(	165:15:7071:7071	4903228	226	True				
ANR	4903466	Statement	""" [*] ASID [63:48]:    0x%"""	165:16:7072:7098	4903228	227	True				
ANR	4903467	Statement	PFMT64x	165:43:7099:7105	4903228	228	True				
ANR	4903468	Statement	"""\\n"""	165:50:7106:7109	4903228	229	True				
ANR	4903469	Statement	""" [*] BADDR [47:10]:   0x%"""	166:9:7120:7146	4903228	230	True				
ANR	4903470	Statement	PFMT64x	166:36:7147:7153	4903228	231	True				
ANR	4903471	Statement	"""\\n"""	166:43:7154:7157	4903228	232	True				
ANR	4903472	Statement	","	166:47:7158:7158	4903228	233	True				
ANR	4903473	Statement	(	167:9:7169:7169	4903228	234	True				
ANR	4903474	Statement	ctrl	167:10:7170:7173	4903228	235	True				
ANR	4903475	Statement	.	167:14:7174:7174	4903228	236	True				
ANR	4903476	Statement	ttbr0_el1	167:15:7175:7183	4903228	237	True				
ANR	4903477	Statement	&	167:25:7185:7185	4903228	238	True				
ANR	4903478	Statement	0xffff000000000000	167:27:7187:7204	4903228	239	True				
ANR	4903479	Statement	)	167:45:7205:7205	4903228	240	True				
ANR	4903480	Statement	>>	167:47:7207:7208	4903228	241	True				
ANR	4903481	Statement	48	167:50:7210:7211	4903228	242	True				
ANR	4903482	Statement	","	167:52:7212:7212	4903228	243	True				
ANR	4903483	Statement	(	167:54:7214:7214	4903228	244	True				
ANR	4903484	Statement	ctrl	167:55:7215:7218	4903228	245	True				
ANR	4903485	Statement	.	167:59:7219:7219	4903228	246	True				
ANR	4903486	Statement	ttbr0_el1	167:60:7220:7228	4903228	247	True				
ANR	4903487	Statement	&	167:70:7230:7230	4903228	248	True				
ANR	4903488	Statement	(	167:72:7232:7232	4903228	249	True				
ANR	4903489	Statement	(	167:73:7233:7233	4903228	250	True				
ANR	4903490	Statement	(	167:74:7234:7234	4903228	251	True				
ANR	4903491	Statement	(	167:75:7235:7235	4903228	252	True				
ANR	4903492	Statement	ut64	167:76:7236:7239	4903228	253	True				
ANR	4903493	Statement	)	167:80:7240:7240	4903228	254	True				
ANR	4903494	Statement	1	167:82:7242:7242	4903228	255	True				
ANR	4903495	Statement	)	167:83:7243:7243	4903228	256	True				
ANR	4903496	Statement	<<	167:85:7245:7246	4903228	257	True				
ANR	4903497	Statement	(	167:88:7248:7248	4903228	258	True				
ANR	4903498	Statement	47	167:89:7249:7250	4903228	259	True				
ANR	4903499	Statement	+	167:92:7252:7252	4903228	260	True				
ANR	4903500	Statement	1	167:94:7254:7254	4903228	261	True				
ANR	4903501	Statement	)	167:95:7255:7255	4903228	262	True				
ANR	4903502	Statement	)	167:96:7256:7256	4903228	263	True				
ANR	4903503	Statement	-	167:98:7258:7258	4903228	264	True				
ANR	4903504	Statement	(	167:100:7260:7260	4903228	265	True				
ANR	4903505	Statement	1	167:101:7261:7261	4903228	266	True				
ANR	4903506	Statement	<<	167:103:7263:7264	4903228	267	True				
ANR	4903507	Statement	10	167:106:7266:7267	4903228	268	True				
ANR	4903508	Statement	)	167:108:7268:7268	4903228	269	True				
ANR	4903509	Statement	)	167:109:7269:7269	4903228	270	True				
ANR	4903510	Statement	)	167:110:7270:7270	4903228	271	True				
ANR	4903511	Statement	>>	167:112:7272:7273	4903228	272	True				
ANR	4903512	Statement	10	167:115:7275:7276	4903228	273	True				
ANR	4903513	Statement	)	167:117:7277:7277	4903228	274	True				
ANR	4903514	ExpressionStatement		167:118:7278:7278	4903228	275	True				
ANR	4903515	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	168:1:7281:7301	4903228	276	True				
ANR	4903516	CallExpression	"io -> cb_printf ( ""\\n"" )"		4903228	0					
ANR	4903517	Callee	io -> cb_printf		4903228	0					
ANR	4903518	PtrMemberAccess	io -> cb_printf		4903228	0					
ANR	4903519	Identifier	io		4903228	0					
ANR	4903520	Identifier	cb_printf		4903228	1					
ANR	4903521	ArgumentList	"""\\n"""		4903228	1					
ANR	4903522	Argument	"""\\n"""		4903228	0					
ANR	4903523	PrimaryExpression	"""\\n"""		4903228	0					
ANR	4903524	Statement	io	170:1:7305:7306	4903228	277	True				
ANR	4903525	Statement	->	170:3:7307:7308	4903228	278	True				
ANR	4903526	Statement	cb_printf	170:5:7309:7317	4903228	279	True				
ANR	4903527	Statement	(	170:15:7319:7319	4903228	280	True				
ANR	4903528	Statement	"""TTBR1_EL1: 0x%"""	170:16:7320:7335	4903228	281	True				
ANR	4903529	Statement	PFMT64x	170:32:7336:7342	4903228	282	True				
ANR	4903530	Statement	"""\\n"""	170:39:7343:7346	4903228	283	True				
ANR	4903531	Statement	","	170:43:7347:7347	4903228	284	True				
ANR	4903532	Statement	ctrl	170:45:7349:7352	4903228	285	True				
ANR	4903533	Statement	.	170:49:7353:7353	4903228	286	True				
ANR	4903534	Statement	ttbr1_el1	170:50:7354:7362	4903228	287	True				
ANR	4903535	Statement	)	170:59:7363:7363	4903228	288	True				
ANR	4903536	ExpressionStatement		170:60:7364:7364	4903228	289	True				
ANR	4903537	Statement	io	171:1:7367:7368	4903228	290	True				
ANR	4903538	Statement	->	171:3:7369:7370	4903228	291	True				
ANR	4903539	Statement	cb_printf	171:5:7371:7379	4903228	292	True				
ANR	4903540	Statement	(	171:15:7381:7381	4903228	293	True				
ANR	4903541	Statement	""" [*] ASID [63:48]:    0x%"""	171:16:7382:7408	4903228	294	True				
ANR	4903542	Statement	PFMT64x	171:43:7409:7415	4903228	295	True				
ANR	4903543	Statement	"""\\n"""	171:50:7416:7419	4903228	296	True				
ANR	4903544	Statement	""" [*] BADDR [47:10]:   0x%"""	172:9:7430:7456	4903228	297	True				
ANR	4903545	Statement	PFMT64x	172:36:7457:7463	4903228	298	True				
ANR	4903546	Statement	"""\\n"""	172:43:7464:7467	4903228	299	True				
ANR	4903547	Statement	","	172:47:7468:7468	4903228	300	True				
ANR	4903548	Statement	(	173:9:7479:7479	4903228	301	True				
ANR	4903549	Statement	ctrl	173:10:7480:7483	4903228	302	True				
ANR	4903550	Statement	.	173:14:7484:7484	4903228	303	True				
ANR	4903551	Statement	ttbr1_el1	173:15:7485:7493	4903228	304	True				
ANR	4903552	Statement	&	173:25:7495:7495	4903228	305	True				
ANR	4903553	Statement	0xffff000000000000	173:27:7497:7514	4903228	306	True				
ANR	4903554	Statement	)	173:45:7515:7515	4903228	307	True				
ANR	4903555	Statement	>>	173:47:7517:7518	4903228	308	True				
ANR	4903556	Statement	48	173:50:7520:7521	4903228	309	True				
ANR	4903557	Statement	","	173:52:7522:7522	4903228	310	True				
ANR	4903558	Statement	(	173:54:7524:7524	4903228	311	True				
ANR	4903559	Statement	ctrl	173:55:7525:7528	4903228	312	True				
ANR	4903560	Statement	.	173:59:7529:7529	4903228	313	True				
ANR	4903561	Statement	ttbr1_el1	173:60:7530:7538	4903228	314	True				
ANR	4903562	Statement	&	173:70:7540:7540	4903228	315	True				
ANR	4903563	Statement	(	173:72:7542:7542	4903228	316	True				
ANR	4903564	Statement	(	173:73:7543:7543	4903228	317	True				
ANR	4903565	Statement	(	173:74:7544:7544	4903228	318	True				
ANR	4903566	Statement	(	173:75:7545:7545	4903228	319	True				
ANR	4903567	Statement	ut64	173:76:7546:7549	4903228	320	True				
ANR	4903568	Statement	)	173:80:7550:7550	4903228	321	True				
ANR	4903569	Statement	1	173:82:7552:7552	4903228	322	True				
ANR	4903570	Statement	)	173:83:7553:7553	4903228	323	True				
ANR	4903571	Statement	<<	173:85:7555:7556	4903228	324	True				
ANR	4903572	Statement	(	173:88:7558:7558	4903228	325	True				
ANR	4903573	Statement	47	173:89:7559:7560	4903228	326	True				
ANR	4903574	Statement	+	173:92:7562:7562	4903228	327	True				
ANR	4903575	Statement	1	173:94:7564:7564	4903228	328	True				
ANR	4903576	Statement	)	173:95:7565:7565	4903228	329	True				
ANR	4903577	Statement	)	173:96:7566:7566	4903228	330	True				
ANR	4903578	Statement	-	173:98:7568:7568	4903228	331	True				
ANR	4903579	Statement	(	173:100:7570:7570	4903228	332	True				
ANR	4903580	Statement	1	173:101:7571:7571	4903228	333	True				
ANR	4903581	Statement	<<	173:103:7573:7574	4903228	334	True				
ANR	4903582	Statement	10	173:106:7576:7577	4903228	335	True				
ANR	4903583	Statement	)	173:108:7578:7578	4903228	336	True				
ANR	4903584	Statement	)	173:109:7579:7579	4903228	337	True				
ANR	4903585	Statement	)	173:110:7580:7580	4903228	338	True				
ANR	4903586	Statement	>>	173:112:7582:7583	4903228	339	True				
ANR	4903587	Statement	10	173:115:7585:7586	4903228	340	True				
ANR	4903588	Statement	)	173:117:7587:7587	4903228	341	True				
ANR	4903589	ExpressionStatement		173:118:7588:7588	4903228	342	True				
ANR	4903590	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	174:1:7591:7611	4903228	343	True				
ANR	4903591	CallExpression	"io -> cb_printf ( ""\\n"" )"		4903228	0					
ANR	4903592	Callee	io -> cb_printf		4903228	0					
ANR	4903593	PtrMemberAccess	io -> cb_printf		4903228	0					
ANR	4903594	Identifier	io		4903228	0					
ANR	4903595	Identifier	cb_printf		4903228	1					
ANR	4903596	ArgumentList	"""\\n"""		4903228	1					
ANR	4903597	Argument	"""\\n"""		4903228	0					
ANR	4903598	PrimaryExpression	"""\\n"""		4903228	0					
ANR	4903599	Statement	io	176:1:7615:7616	4903228	344	True				
ANR	4903600	Statement	->	176:3:7617:7618	4903228	345	True				
ANR	4903601	Statement	cb_printf	176:5:7619:7627	4903228	346	True				
ANR	4903602	Statement	(	176:15:7629:7629	4903228	347	True				
ANR	4903603	Statement	"""TCR_EL1: 0x%"""	176:16:7630:7643	4903228	348	True				
ANR	4903604	Statement	PFMT64x	176:30:7644:7650	4903228	349	True				
ANR	4903605	Statement	"""\\n"""	176:37:7651:7654	4903228	350	True				
ANR	4903606	Statement	","	176:41:7655:7655	4903228	351	True				
ANR	4903607	Statement	ctrl	176:43:7657:7660	4903228	352	True				
ANR	4903608	Statement	.	176:47:7661:7661	4903228	353	True				
ANR	4903609	Statement	tcr_el1	176:48:7662:7668	4903228	354	True				
ANR	4903610	Statement	)	176:55:7669:7669	4903228	355	True				
ANR	4903611	ExpressionStatement		176:56:7670:7670	4903228	356	True				
ANR	4903612	Statement	io	177:1:7673:7674	4903228	357	True				
ANR	4903613	Statement	->	177:3:7675:7676	4903228	358	True				
ANR	4903614	Statement	cb_printf	177:5:7677:7685	4903228	359	True				
ANR	4903615	Statement	(	177:15:7687:7687	4903228	360	True				
ANR	4903616	Statement	""" [*] TBI1:    %d\\n"""	177:16:7688:7707	4903228	361	True				
ANR	4903617	Statement	""" [*] TBI0:    %d\\n"""	178:9:7718:7737	4903228	362	True				
ANR	4903618	Statement	""" [*] AS:      %d\\n"""	179:9:7748:7767	4903228	363	True				
ANR	4903619	Statement	""" [*] IPS:     %d\\n"""	180:9:7778:7797	4903228	364	True				
ANR	4903620	Statement	""" [*] TG1:     %d\\n"""	181:9:7808:7827	4903228	365	True				
ANR	4903621	Statement	""" [*] SH1:     %d\\n"""	182:9:7838:7857	4903228	366	True				
ANR	4903622	Statement	""" [*] ORGN1:   %d\\n"""	183:9:7868:7887	4903228	367	True				
ANR	4903623	Statement	""" [*] IRGN1:   %d\\n"""	184:9:7898:7917	4903228	368	True				
ANR	4903624	Statement	""" [*] EPD1:    %d\\n"""	185:9:7928:7947	4903228	369	True				
ANR	4903625	Statement	""" [*] A1:      %d\\n"""	186:9:7958:7977	4903228	370	True				
ANR	4903626	Statement	""" [*] T1SZ:    %d\\n"""	187:9:7988:8007	4903228	371	True				
ANR	4903627	Statement	""" [*] TG0:     %d\\n"""	188:9:8018:8037	4903228	372	True				
ANR	4903628	Statement	""" [*] SH0:     %d\\n"""	189:9:8048:8067	4903228	373	True				
ANR	4903629	Statement	""" [*] ORGN0:   %d\\n"""	190:9:8078:8097	4903228	374	True				
ANR	4903630	Statement	""" [*] IRGN0:   %d\\n"""	191:9:8108:8127	4903228	375	True				
ANR	4903631	Statement	""" [*] EPD0:    %d\\n"""	192:9:8138:8157	4903228	376	True				
ANR	4903632	Statement	""" [*] T0SZ:    %d\\n"""	193:9:8168:8187	4903228	377	True				
ANR	4903633	Statement	","	193:29:8188:8188	4903228	378	True				
ANR	4903634	Statement	fset	194:9:8199:8202	4903228	379	True				
ANR	4903635	Statement	(	194:14:8204:8204	4903228	380	True				
ANR	4903636	Statement	ctrl	194:15:8205:8208	4903228	381	True				
ANR	4903637	Statement	.	194:19:8209:8209	4903228	382	True				
ANR	4903638	Statement	tcr_el1	194:20:8210:8216	4903228	383	True				
ANR	4903639	Statement	","	194:27:8217:8217	4903228	384	True				
ANR	4903640	Statement	38	194:29:8219:8220	4903228	385	True				
ANR	4903641	Statement	)	194:31:8221:8221	4903228	386	True				
ANR	4903642	Statement	","	194:32:8222:8222	4903228	387	True				
ANR	4903643	Statement	fset	194:34:8224:8227	4903228	388	True				
ANR	4903644	Statement	(	194:39:8229:8229	4903228	389	True				
ANR	4903645	Statement	ctrl	194:40:8230:8233	4903228	390	True				
ANR	4903646	Statement	.	194:44:8234:8234	4903228	391	True				
ANR	4903647	Statement	tcr_el1	194:45:8235:8241	4903228	392	True				
ANR	4903648	Statement	","	194:52:8242:8242	4903228	393	True				
ANR	4903649	Statement	37	194:54:8244:8245	4903228	394	True				
ANR	4903650	Statement	)	194:56:8246:8246	4903228	395	True				
ANR	4903651	Statement	","	194:57:8247:8247	4903228	396	True				
ANR	4903652	Statement	fset	194:59:8249:8252	4903228	397	True				
ANR	4903653	Statement	(	194:64:8254:8254	4903228	398	True				
ANR	4903654	Statement	ctrl	194:65:8255:8258	4903228	399	True				
ANR	4903655	Statement	.	194:69:8259:8259	4903228	400	True				
ANR	4903656	Statement	tcr_el1	194:70:8260:8266	4903228	401	True				
ANR	4903657	Statement	","	194:77:8267:8267	4903228	402	True				
ANR	4903658	Statement	36	194:79:8269:8270	4903228	403	True				
ANR	4903659	Statement	)	194:81:8271:8271	4903228	404	True				
ANR	4903660	Statement	","	194:82:8272:8272	4903228	405	True				
ANR	4903661	Statement	(	195:9:8283:8283	4903228	406	True				
ANR	4903662	Statement	ctrl	195:10:8284:8287	4903228	407	True				
ANR	4903663	Statement	.	195:14:8288:8288	4903228	408	True				
ANR	4903664	Statement	tcr_el1	195:15:8289:8295	4903228	409	True				
ANR	4903665	Statement	&	195:23:8297:8297	4903228	410	True				
ANR	4903666	Statement	0x700000000	195:25:8299:8309	4903228	411	True				
ANR	4903667	Statement	)	195:36:8310:8310	4903228	412	True				
ANR	4903668	Statement	>>	195:38:8312:8313	4903228	413	True				
ANR	4903669	Statement	32	195:41:8315:8316	4903228	414	True				
ANR	4903670	Statement	","	195:43:8317:8317	4903228	415	True				
ANR	4903671	Statement	fset	195:45:8319:8322	4903228	416	True				
ANR	4903672	Statement	(	195:50:8324:8324	4903228	417	True				
ANR	4903673	Statement	ctrl	195:51:8325:8328	4903228	418	True				
ANR	4903674	Statement	.	195:55:8329:8329	4903228	419	True				
ANR	4903675	Statement	tcr_el1	195:56:8330:8336	4903228	420	True				
ANR	4903676	Statement	","	195:63:8337:8337	4903228	421	True				
ANR	4903677	Statement	30	195:65:8339:8340	4903228	422	True				
ANR	4903678	Statement	)	195:67:8341:8341	4903228	423	True				
ANR	4903679	Statement	","	195:68:8342:8342	4903228	424	True				
ANR	4903680	Statement	(	195:70:8344:8344	4903228	425	True				
ANR	4903681	Statement	ctrl	195:71:8345:8348	4903228	426	True				
ANR	4903682	Statement	.	195:75:8349:8349	4903228	427	True				
ANR	4903683	Statement	tcr_el1	195:76:8350:8356	4903228	428	True				
ANR	4903684	Statement	&	195:84:8358:8358	4903228	429	True				
ANR	4903685	Statement	0x30000000	195:86:8360:8369	4903228	430	True				
ANR	4903686	Statement	)	195:96:8370:8370	4903228	431	True				
ANR	4903687	Statement	>>	195:98:8372:8373	4903228	432	True				
ANR	4903688	Statement	28	195:101:8375:8376	4903228	433	True				
ANR	4903689	Statement	","	195:103:8377:8377	4903228	434	True				
ANR	4903690	Statement	(	196:9:8388:8388	4903228	435	True				
ANR	4903691	Statement	ctrl	196:10:8389:8392	4903228	436	True				
ANR	4903692	Statement	.	196:14:8393:8393	4903228	437	True				
ANR	4903693	Statement	tcr_el1	196:15:8394:8400	4903228	438	True				
ANR	4903694	Statement	&	196:23:8402:8402	4903228	439	True				
ANR	4903695	Statement	0xc000000	196:25:8404:8412	4903228	440	True				
ANR	4903696	Statement	)	196:34:8413:8413	4903228	441	True				
ANR	4903697	Statement	>>	196:36:8415:8416	4903228	442	True				
ANR	4903698	Statement	26	196:39:8418:8419	4903228	443	True				
ANR	4903699	Statement	","	196:41:8420:8420	4903228	444	True				
ANR	4903700	Statement	(	196:43:8422:8422	4903228	445	True				
ANR	4903701	Statement	ctrl	196:44:8423:8426	4903228	446	True				
ANR	4903702	Statement	.	196:48:8427:8427	4903228	447	True				
ANR	4903703	Statement	tcr_el1	196:49:8428:8434	4903228	448	True				
ANR	4903704	Statement	&	196:57:8436:8436	4903228	449	True				
ANR	4903705	Statement	0x3000000	196:59:8438:8446	4903228	450	True				
ANR	4903706	Statement	)	196:68:8447:8447	4903228	451	True				
ANR	4903707	Statement	>>	196:70:8449:8450	4903228	452	True				
ANR	4903708	Statement	24	196:73:8452:8453	4903228	453	True				
ANR	4903709	Statement	","	196:75:8454:8454	4903228	454	True				
ANR	4903710	Statement	fset	196:77:8456:8459	4903228	455	True				
ANR	4903711	Statement	(	196:82:8461:8461	4903228	456	True				
ANR	4903712	Statement	ctrl	196:83:8462:8465	4903228	457	True				
ANR	4903713	Statement	.	196:87:8466:8466	4903228	458	True				
ANR	4903714	Statement	tcr_el1	196:88:8467:8473	4903228	459	True				
ANR	4903715	Statement	","	196:95:8474:8474	4903228	460	True				
ANR	4903716	Statement	23	196:97:8476:8477	4903228	461	True				
ANR	4903717	Statement	)	196:99:8478:8478	4903228	462	True				
ANR	4903718	Statement	","	196:100:8479:8479	4903228	463	True				
ANR	4903719	Statement	fset	197:9:8490:8493	4903228	464	True				
ANR	4903720	Statement	(	197:14:8495:8495	4903228	465	True				
ANR	4903721	Statement	ctrl	197:15:8496:8499	4903228	466	True				
ANR	4903722	Statement	.	197:19:8500:8500	4903228	467	True				
ANR	4903723	Statement	tcr_el1	197:20:8501:8507	4903228	468	True				
ANR	4903724	Statement	","	197:27:8508:8508	4903228	469	True				
ANR	4903725	Statement	22	197:29:8510:8511	4903228	470	True				
ANR	4903726	Statement	)	197:31:8512:8512	4903228	471	True				
ANR	4903727	Statement	","	197:32:8513:8513	4903228	472	True				
ANR	4903728	Statement	(	197:34:8515:8515	4903228	473	True				
ANR	4903729	Statement	ctrl	197:35:8516:8519	4903228	474	True				
ANR	4903730	Statement	.	197:39:8520:8520	4903228	475	True				
ANR	4903731	Statement	tcr_el1	197:40:8521:8527	4903228	476	True				
ANR	4903732	Statement	&	197:48:8529:8529	4903228	477	True				
ANR	4903733	Statement	0x3f0000	197:50:8531:8538	4903228	478	True				
ANR	4903734	Statement	)	197:58:8539:8539	4903228	479	True				
ANR	4903735	Statement	>>	197:60:8541:8542	4903228	480	True				
ANR	4903736	Statement	16	197:63:8544:8545	4903228	481	True				
ANR	4903737	Statement	","	197:65:8546:8546	4903228	482	True				
ANR	4903738	Statement	fset	197:67:8548:8551	4903228	483	True				
ANR	4903739	Statement	(	197:72:8553:8553	4903228	484	True				
ANR	4903740	Statement	ctrl	197:73:8554:8557	4903228	485	True				
ANR	4903741	Statement	.	197:77:8558:8558	4903228	486	True				
ANR	4903742	Statement	tcr_el1	197:78:8559:8565	4903228	487	True				
ANR	4903743	Statement	","	197:85:8566:8566	4903228	488	True				
ANR	4903744	Statement	14	197:87:8568:8569	4903228	489	True				
ANR	4903745	Statement	)	197:89:8570:8570	4903228	490	True				
ANR	4903746	Statement	","	197:90:8571:8571	4903228	491	True				
ANR	4903747	Statement	(	198:9:8582:8582	4903228	492	True				
ANR	4903748	Statement	ctrl	198:10:8583:8586	4903228	493	True				
ANR	4903749	Statement	.	198:14:8587:8587	4903228	494	True				
ANR	4903750	Statement	tcr_el1	198:15:8588:8594	4903228	495	True				
ANR	4903751	Statement	&	198:23:8596:8596	4903228	496	True				
ANR	4903752	Statement	0x3000	198:25:8598:8603	4903228	497	True				
ANR	4903753	Statement	)	198:31:8604:8604	4903228	498	True				
ANR	4903754	Statement	>>	198:33:8606:8607	4903228	499	True				
ANR	4903755	Statement	12	198:36:8609:8610	4903228	500	True				
ANR	4903756	Statement	","	198:38:8611:8611	4903228	501	True				
ANR	4903757	Statement	(	198:40:8613:8613	4903228	502	True				
ANR	4903758	Statement	ctrl	198:41:8614:8617	4903228	503	True				
ANR	4903759	Statement	.	198:45:8618:8618	4903228	504	True				
ANR	4903760	Statement	tcr_el1	198:46:8619:8625	4903228	505	True				
ANR	4903761	Statement	&	198:54:8627:8627	4903228	506	True				
ANR	4903762	Statement	0xc00	198:56:8629:8633	4903228	507	True				
ANR	4903763	Statement	)	198:61:8634:8634	4903228	508	True				
ANR	4903764	Statement	>>	198:63:8636:8637	4903228	509	True				
ANR	4903765	Statement	10	198:66:8639:8640	4903228	510	True				
ANR	4903766	Statement	","	198:68:8641:8641	4903228	511	True				
ANR	4903767	Statement	(	198:70:8643:8643	4903228	512	True				
ANR	4903768	Statement	ctrl	198:71:8644:8647	4903228	513	True				
ANR	4903769	Statement	.	198:75:8648:8648	4903228	514	True				
ANR	4903770	Statement	tcr_el1	198:76:8649:8655	4903228	515	True				
ANR	4903771	Statement	&	198:84:8657:8657	4903228	516	True				
ANR	4903772	Statement	0x300	198:86:8659:8663	4903228	517	True				
ANR	4903773	Statement	)	198:91:8664:8664	4903228	518	True				
ANR	4903774	Statement	>>	198:93:8666:8667	4903228	519	True				
ANR	4903775	Statement	8	198:96:8669:8669	4903228	520	True				
ANR	4903776	Statement	","	198:97:8670:8670	4903228	521	True				
ANR	4903777	Statement	fset	199:9:8681:8684	4903228	522	True				
ANR	4903778	Statement	(	199:14:8686:8686	4903228	523	True				
ANR	4903779	Statement	ctrl	199:15:8687:8690	4903228	524	True				
ANR	4903780	Statement	.	199:19:8691:8691	4903228	525	True				
ANR	4903781	Statement	tcr_el1	199:20:8692:8698	4903228	526	True				
ANR	4903782	Statement	","	199:27:8699:8699	4903228	527	True				
ANR	4903783	Statement	7	199:29:8701:8701	4903228	528	True				
ANR	4903784	Statement	)	199:30:8702:8702	4903228	529	True				
ANR	4903785	Statement	","	199:31:8703:8703	4903228	530	True				
ANR	4903786	Statement	(	199:33:8705:8705	4903228	531	True				
ANR	4903787	Statement	ctrl	199:34:8706:8709	4903228	532	True				
ANR	4903788	Statement	.	199:38:8710:8710	4903228	533	True				
ANR	4903789	Statement	tcr_el1	199:39:8711:8717	4903228	534	True				
ANR	4903790	Statement	&	199:47:8719:8719	4903228	535	True				
ANR	4903791	Statement	0x3f	199:49:8721:8724	4903228	536	True				
ANR	4903792	Statement	)	199:53:8725:8725	4903228	537	True				
ANR	4903793	Statement	)	199:54:8726:8726	4903228	538	True				
ANR	4903794	ExpressionStatement		199:55:8727:8727	4903228	539	True				
ANR	4903795	ReturnType	static void		4903228	1					
ANR	4903796	Identifier	arm64_ctrl_reg_pretty_print		4903228	2					
ANR	4903797	ParameterList	"RIO * io , struct r2k_control_reg ctrl"		4903228	3					
ANR	4903798	Parameter	RIO * io	136:41:5741:5747	4903228	0	True				
ANR	4903799	ParameterType	RIO *		4903228	0					
ANR	4903800	Identifier	io		4903228	1					
ANR	4903801	Parameter	struct r2k_control_reg ctrl	136:50:5750:5776	4903228	1	True				
ANR	4903802	ParameterType	struct r2k_control_reg		4903228	0					
ANR	4903803	Identifier	ctrl		4903228	1					
ANR	4903804	CFGEntryNode	ENTRY		4903228		True				
ANR	4903805	CFGExitNode	EXIT		4903228		True				
ANR	4903806	Symbol	ctrl		4903228						
ANR	4903807	Symbol	io		4903228						
ANR	4903808	Function	getargpos	203:0:8739:8952							
ANR	4903809	FunctionDef	"getargpos (const char * buf , int pos)"		4903808	0					
ANR	4903810	CompoundStatement		203:56:8795:8952	4903808	0					
ANR	4903811	IdentifierDeclStatement	int i ;	204:1:8798:8803	4903808	0	True				
ANR	4903812	IdentifierDecl	i		4903808	0					
ANR	4903813	IdentifierDeclType	int		4903808	0					
ANR	4903814	Identifier	i		4903808	1					
ANR	4903815	ForStatement	for ( i = 0 ; buf && i < pos ; i ++ )		4903808	1					
ANR	4903816	ForInit	i = 0 ;	205:6:8811:8816	4903808	0	True				
ANR	4903817	AssignmentExpression	i = 0		4903808	0		=			
ANR	4903818	Identifier	i		4903808	0					
ANR	4903819	PrimaryExpression	0		4903808	1					
ANR	4903820	Condition	buf && i < pos	205:13:8818:8831	4903808	1	True				
ANR	4903821	AndExpression	buf && i < pos		4903808	0		&&			
ANR	4903822	Identifier	buf		4903808	0					
ANR	4903823	RelationalExpression	i < pos		4903808	1		<			
ANR	4903824	Identifier	i		4903808	0					
ANR	4903825	Identifier	pos		4903808	1					
ANR	4903826	PostIncDecOperationExpression	i ++	205:29:8834:8836	4903808	2	True				
ANR	4903827	Identifier	i		4903808	0					
ANR	4903828	IncDec	++		4903808	1					
ANR	4903829	CompoundStatement		3:34:43:43	4903808	3					
ANR	4903830	ExpressionStatement	"buf = strchr ( buf , ' ' )"	206:2:8843:8866	4903808	0	True				
ANR	4903831	AssignmentExpression	"buf = strchr ( buf , ' ' )"		4903808	0		=			
ANR	4903832	Identifier	buf		4903808	0					
ANR	4903833	CallExpression	"strchr ( buf , ' ' )"		4903808	1					
ANR	4903834	Callee	strchr		4903808	0					
ANR	4903835	Identifier	strchr		4903808	0					
ANR	4903836	ArgumentList	buf		4903808	1					
ANR	4903837	Argument	buf		4903808	0					
ANR	4903838	Identifier	buf		4903808	0					
ANR	4903839	Argument	' '		4903808	1					
ANR	4903840	PrimaryExpression	' '		4903808	0					
ANR	4903841	IfStatement	if ( ! buf )		4903808	1					
ANR	4903842	Condition	! buf	207:6:8874:8877	4903808	0	True				
ANR	4903843	UnaryOperationExpression	! buf		4903808	0					
ANR	4903844	UnaryOperator	!		4903808	0					
ANR	4903845	Identifier	buf		4903808	1					
ANR	4903846	CompoundStatement		5:12:84:84	4903808	1					
ANR	4903847	BreakStatement	break ;	208:3:8885:8890	4903808	0	True				
ANR	4903848	ExpressionStatement	"buf = r_str_ichr ( ( char * ) buf , ' ' )"	210:2:8898:8934	4903808	2	True				
ANR	4903849	AssignmentExpression	"buf = r_str_ichr ( ( char * ) buf , ' ' )"		4903808	0		=			
ANR	4903850	Identifier	buf		4903808	0					
ANR	4903851	CallExpression	"r_str_ichr ( ( char * ) buf , ' ' )"		4903808	1					
ANR	4903852	Callee	r_str_ichr		4903808	0					
ANR	4903853	Identifier	r_str_ichr		4903808	0					
ANR	4903854	ArgumentList	( char * ) buf		4903808	1					
ANR	4903855	Argument	( char * ) buf		4903808	0					
ANR	4903856	CastExpression	( char * ) buf		4903808	0					
ANR	4903857	CastTarget	char *		4903808	0					
ANR	4903858	Identifier	buf		4903808	1					
ANR	4903859	Argument	' '		4903808	1					
ANR	4903860	PrimaryExpression	' '		4903808	0					
ANR	4903861	ReturnStatement	return buf ;	212:1:8940:8950	4903808	2	True				
ANR	4903862	Identifier	buf		4903808	0					
ANR	4903863	ReturnType	static const char *		4903808	1					
ANR	4903864	Identifier	getargpos		4903808	2					
ANR	4903865	ParameterList	"const char * buf , int pos"		4903808	3					
ANR	4903866	Parameter	const char * buf	203:30:8769:8783	4903808	0	True				
ANR	4903867	ParameterType	const char *		4903808	0					
ANR	4903868	Identifier	buf		4903808	1					
ANR	4903869	Parameter	int pos	203:47:8786:8792	4903808	1	True				
ANR	4903870	ParameterType	int		4903808	0					
ANR	4903871	Identifier	pos		4903808	1					
ANR	4903872	CFGEntryNode	ENTRY		4903808		True				
ANR	4903873	CFGExitNode	EXIT		4903808		True				
ANR	4903874	Symbol	buf		4903808						
ANR	4903875	Symbol	pos		4903808						
ANR	4903876	Symbol	r_str_ichr		4903808						
ANR	4903877	Symbol	i		4903808						
ANR	4903878	Symbol	strchr		4903808						
ANR	4903879	Function	getvalue	215:0:8955:9128							
ANR	4903880	FunctionDef	"getvalue (const char * buf , int pos)"		4903879	0					
ANR	4903881	CompoundStatement		215:50:9005:9128	4903879	0					
ANR	4903882	IdentifierDeclStatement	size_t ret ;	216:1:9008:9018	4903879	0	True				
ANR	4903883	IdentifierDecl	ret		4903879	0					
ANR	4903884	IdentifierDeclType	size_t		4903879	0					
ANR	4903885	Identifier	ret		4903879	1					
ANR	4903886	ExpressionStatement	"buf = getargpos ( buf , pos )"	217:1:9021:9047	4903879	1	True				
ANR	4903887	AssignmentExpression	"buf = getargpos ( buf , pos )"		4903879	0		=			
ANR	4903888	Identifier	buf		4903879	0					
ANR	4903889	CallExpression	"getargpos ( buf , pos )"		4903879	1					
ANR	4903890	Callee	getargpos		4903879	0					
ANR	4903891	Identifier	getargpos		4903879	0					
ANR	4903892	ArgumentList	buf		4903879	1					
ANR	4903893	Argument	buf		4903879	0					
ANR	4903894	Identifier	buf		4903879	0					
ANR	4903895	Argument	pos		4903879	1					
ANR	4903896	Identifier	pos		4903879	0					
ANR	4903897	IfStatement	if ( buf )		4903879	2					
ANR	4903898	Condition	buf	218:5:9054:9056	4903879	0	True				
ANR	4903899	Identifier	buf		4903879	0					
ANR	4903900	CompoundStatement		4:10:53:53	4903879	1					
ANR	4903901	ExpressionStatement	"ret = strtoul ( buf , 0 , 0 )"	219:2:9063:9088	4903879	0	True				
ANR	4903902	AssignmentExpression	"ret = strtoul ( buf , 0 , 0 )"		4903879	0		=			
ANR	4903903	Identifier	ret		4903879	0					
ANR	4903904	CallExpression	"strtoul ( buf , 0 , 0 )"		4903879	1					
ANR	4903905	Callee	strtoul		4903879	0					
ANR	4903906	Identifier	strtoul		4903879	0					
ANR	4903907	ArgumentList	buf		4903879	1					
ANR	4903908	Argument	buf		4903879	0					
ANR	4903909	Identifier	buf		4903879	0					
ANR	4903910	Argument	0		4903879	1					
ANR	4903911	PrimaryExpression	0		4903879	0					
ANR	4903912	Argument	0		4903879	2					
ANR	4903913	PrimaryExpression	0		4903879	0					
ANR	4903914	ElseStatement	else		4903879	0					
ANR	4903915	CompoundStatement		6:8:92:92	4903879	0					
ANR	4903916	ExpressionStatement	ret = - 1	221:2:9102:9110	4903879	0	True				
ANR	4903917	AssignmentExpression	ret = - 1		4903879	0		=			
ANR	4903918	Identifier	ret		4903879	0					
ANR	4903919	UnaryOperationExpression	- 1		4903879	1					
ANR	4903920	UnaryOperator	-		4903879	0					
ANR	4903921	PrimaryExpression	1		4903879	1					
ANR	4903922	ReturnStatement	return ret ;	223:1:9116:9126	4903879	3	True				
ANR	4903923	Identifier	ret		4903879	0					
ANR	4903924	ReturnType	static size_t		4903879	1					
ANR	4903925	Identifier	getvalue		4903879	2					
ANR	4903926	ParameterList	"const char * buf , int pos"		4903879	3					
ANR	4903927	Parameter	const char * buf	215:24:8979:8993	4903879	0	True				
ANR	4903928	ParameterType	const char *		4903879	0					
ANR	4903929	Identifier	buf		4903879	1					
ANR	4903930	Parameter	int pos	215:41:8996:9002	4903879	1	True				
ANR	4903931	ParameterType	int		4903879	0					
ANR	4903932	Identifier	pos		4903879	1					
ANR	4903933	CFGEntryNode	ENTRY		4903879		True				
ANR	4903934	CFGExitNode	EXIT		4903879		True				
ANR	4903935	Symbol	ret		4903879						
ANR	4903936	Symbol	buf		4903879						
ANR	4903937	Symbol	pos		4903879						
ANR	4903938	Symbol	strtoul		4903879						
ANR	4903939	Symbol	getargpos		4903879						
ANR	4903940	Function	print_help	226:0:9131:11006							
ANR	4903941	FunctionDef	"print_help (RIO * io , char * cmd , int p_usage)"		4903940	0					
ANR	4903942	CompoundStatement		226:57:9188:11006	4903940	0					
ANR	4903943	IdentifierDeclStatement	int i = 0 ;	227:1:9191:9200	4903940	0	True				
ANR	4903944	IdentifierDecl	i = 0		4903940	0					
ANR	4903945	IdentifierDeclType	int		4903940	0					
ANR	4903946	Identifier	i		4903940	1					
ANR	4903947	AssignmentExpression	i = 0		4903940	2		=			
ANR	4903948	Identifier	i		4903940	0					
ANR	4903949	PrimaryExpression	0		4903940	1					
ANR	4903950	IdentifierDeclStatement	int cmd_len = cmd ? strlen ( cmd ) : 0 ;	228:1:9203:9239	4903940	1	True				
ANR	4903951	IdentifierDecl	cmd_len = cmd ? strlen ( cmd ) : 0		4903940	0					
ANR	4903952	IdentifierDeclType	int		4903940	0					
ANR	4903953	Identifier	cmd_len		4903940	1					
ANR	4903954	AssignmentExpression	cmd_len = cmd ? strlen ( cmd ) : 0		4903940	2		=			
ANR	4903955	Identifier	cmd_len		4903940	0					
ANR	4903956	ConditionalExpression	cmd ? strlen ( cmd ) : 0		4903940	1					
ANR	4903957	Condition	cmd		4903940	0					
ANR	4903958	Identifier	cmd		4903940	0					
ANR	4903959	CallExpression	strlen ( cmd )		4903940	1					
ANR	4903960	Callee	strlen		4903940	0					
ANR	4903961	Identifier	strlen		4903940	0					
ANR	4903962	ArgumentList	cmd		4903940	1					
ANR	4903963	Argument	cmd		4903940	0					
ANR	4903964	Identifier	cmd		4903940	0					
ANR	4903965	PrimaryExpression	0		4903940	2					
ANR	4903966	IdentifierDeclStatement	"const char * usage = ""Usage:   \\\\[MprRw][lpP] [args...]"" ;"	229:1:9242:9297	4903940	2	True				
ANR	4903967	IdentifierDecl	"* usage = ""Usage:   \\\\[MprRw][lpP] [args...]"""		4903940	0					
ANR	4903968	IdentifierDeclType	const char *		4903940	0					
ANR	4903969	Identifier	usage		4903940	1					
ANR	4903970	AssignmentExpression	"* usage = ""Usage:   \\\\[MprRw][lpP] [args...]"""		4903940	2		=			
ANR	4903971	Identifier	usage		4903940	0					
ANR	4903972	PrimaryExpression	"""Usage:   \\\\[MprRw][lpP] [args...]"""		4903940	1					
ANR	4903973	IdentifierDeclStatement	"const char * help_msg [ ] = { ""\\\\dm              Print kernel memory map (or process if r2k.io==1)"" , ""\\\\dr              Print control registers"" , ""\\\\dR              Print control registers in detailed mode"" , ""\\\\dp [pid]        Print current selected pid or change it"" , ""\\\\e r2k.io=[012]  Read/Write from 0: Linear, 1: Process, 2: Physical addresses"" } ;"	230:1:9300:9659	4903940	3	True				
ANR	4903974	IdentifierDecl	"* help_msg [ ] = { ""\\\\dm              Print kernel memory map (or process if r2k.io==1)"" , ""\\\\dr              Print control registers"" , ""\\\\dR              Print control registers in detailed mode"" , ""\\\\dp [pid]        Print current selected pid or change it"" , ""\\\\e r2k.io=[012]  Read/Write from 0: Linear, 1: Process, 2: Physical addresses"" }"		4903940	0					
ANR	4903975	IdentifierDeclType	const char * [ ]		4903940	0					
ANR	4903976	Identifier	help_msg		4903940	1					
ANR	4903977	AssignmentExpression	"* help_msg [ ] = { ""\\\\dm              Print kernel memory map (or process if r2k.io==1)"" , ""\\\\dr              Print control registers"" , ""\\\\dR              Print control registers in detailed mode"" , ""\\\\dp [pid]        Print current selected pid or change it"" , ""\\\\e r2k.io=[012]  Read/Write from 0: Linear, 1: Process, 2: Physical addresses"" }"		4903940	2		=			
ANR	4903978	Identifier	help_msg		4903940	0					
ANR	4903979	InitializerList	"""\\\\dm              Print kernel memory map (or process if r2k.io==1)"""		4903940	1					
ANR	4903980	PrimaryExpression	"""\\\\dm              Print kernel memory map (or process if r2k.io==1)"""		4903940	0					
ANR	4903981	PrimaryExpression	"""\\\\dr              Print control registers"""		4903940	1					
ANR	4903982	PrimaryExpression	"""\\\\dR              Print control registers in detailed mode"""		4903940	2					
ANR	4903983	PrimaryExpression	"""\\\\dp [pid]        Print current selected pid or change it"""		4903940	3					
ANR	4903984	PrimaryExpression	"""\\\\e r2k.io=[012]  Read/Write from 0: Linear, 1: Process, 2: Physical addresses"""		4903940	4					
ANR	4903985	IdentifierDeclStatement	"const char * help_msg_old [ ] = { ""\\\\M                      Print kernel memory map"" , ""\\\\b      beid [pid]      Change r2k backend. pid is required when beid is 1."" , ""                         0: linear address; 1: process address; 2: physical address"" , ""\\\\p      pid             Print process information"" , ""\\\\rl     addr len        Read from linear address"" , ""\\\\rp     pid addr len    Read from process address"" , ""\\\\rP     addr len        Read physical address"" , ""\\\\R[p]                   Print control registers. Use =!Rp for detailed description"" , ""\\\\wl[x]  addr input      Write at linear address. Use =!wlx for input in hex"" , ""\\\\wp[x]  pid addr input  Write at process address. Use =!wpx for input in hex"" , ""\\\\wP[x]  addr input      Write at physical address. Use =!wPx for input in hex"" , ""\\\\W      1|0             Honor arch write protect (1 enable WP, 0 disable WP)"" } ;"	237:1:9662:10559	4903940	4	True				
ANR	4903986	IdentifierDecl	"* help_msg_old [ ] = { ""\\\\M                      Print kernel memory map"" , ""\\\\b      beid [pid]      Change r2k backend. pid is required when beid is 1."" , ""                         0: linear address; 1: process address; 2: physical address"" , ""\\\\p      pid             Print process information"" , ""\\\\rl     addr len        Read from linear address"" , ""\\\\rp     pid addr len    Read from process address"" , ""\\\\rP     addr len        Read physical address"" , ""\\\\R[p]                   Print control registers. Use =!Rp for detailed description"" , ""\\\\wl[x]  addr input      Write at linear address. Use =!wlx for input in hex"" , ""\\\\wp[x]  pid addr input  Write at process address. Use =!wpx for input in hex"" , ""\\\\wP[x]  addr input      Write at physical address. Use =!wPx for input in hex"" , ""\\\\W      1|0             Honor arch write protect (1 enable WP, 0 disable WP)"" }"		4903940	0					
ANR	4903987	IdentifierDeclType	const char * [ ]		4903940	0					
ANR	4903988	Identifier	help_msg_old		4903940	1					
ANR	4903989	AssignmentExpression	"* help_msg_old [ ] = { ""\\\\M                      Print kernel memory map"" , ""\\\\b      beid [pid]      Change r2k backend. pid is required when beid is 1."" , ""                         0: linear address; 1: process address; 2: physical address"" , ""\\\\p      pid             Print process information"" , ""\\\\rl     addr len        Read from linear address"" , ""\\\\rp     pid addr len    Read from process address"" , ""\\\\rP     addr len        Read physical address"" , ""\\\\R[p]                   Print control registers. Use =!Rp for detailed description"" , ""\\\\wl[x]  addr input      Write at linear address. Use =!wlx for input in hex"" , ""\\\\wp[x]  pid addr input  Write at process address. Use =!wpx for input in hex"" , ""\\\\wP[x]  addr input      Write at physical address. Use =!wPx for input in hex"" , ""\\\\W      1|0             Honor arch write protect (1 enable WP, 0 disable WP)"" }"		4903940	2		=			
ANR	4903990	Identifier	help_msg_old		4903940	0					
ANR	4903991	InitializerList	"""\\\\M                      Print kernel memory map"""		4903940	1					
ANR	4903992	PrimaryExpression	"""\\\\M                      Print kernel memory map"""		4903940	0					
ANR	4903993	PrimaryExpression	"""\\\\b      beid [pid]      Change r2k backend. pid is required when beid is 1."""		4903940	1					
ANR	4903994	PrimaryExpression	"""                         0: linear address; 1: process address; 2: physical address"""		4903940	2					
ANR	4903995	PrimaryExpression	"""\\\\p      pid             Print process information"""		4903940	3					
ANR	4903996	PrimaryExpression	"""\\\\rl     addr len        Read from linear address"""		4903940	4					
ANR	4903997	PrimaryExpression	"""\\\\rp     pid addr len    Read from process address"""		4903940	5					
ANR	4903998	PrimaryExpression	"""\\\\rP     addr len        Read physical address"""		4903940	6					
ANR	4903999	PrimaryExpression	"""\\\\R[p]                   Print control registers. Use =!Rp for detailed description"""		4903940	7					
ANR	4904000	PrimaryExpression	"""\\\\wl[x]  addr input      Write at linear address. Use =!wlx for input in hex"""		4903940	8					
ANR	4904001	PrimaryExpression	"""\\\\wp[x]  pid addr input  Write at process address. Use =!wpx for input in hex"""		4903940	9					
ANR	4904002	PrimaryExpression	"""\\\\wP[x]  addr input      Write at physical address. Use =!wPx for input in hex"""		4903940	10					
ANR	4904003	PrimaryExpression	"""\\\\W      1|0             Honor arch write protect (1 enable WP, 0 disable WP)"""		4903940	11					
ANR	4904004	IfStatement	if ( p_usage )		4903940	5					
ANR	4904005	Condition	p_usage	251:5:10566:10572	4903940	0	True				
ANR	4904006	Identifier	p_usage		4903940	0					
ANR	4904007	CompoundStatement		26:14:1386:1386	4903940	1					
ANR	4904008	ExpressionStatement	"io -> cb_printf ( ""%s\\n"" , usage )"	252:2:10579:10608	4903940	0	True				
ANR	4904009	CallExpression	"io -> cb_printf ( ""%s\\n"" , usage )"		4903940	0					
ANR	4904010	Callee	io -> cb_printf		4903940	0					
ANR	4904011	PtrMemberAccess	io -> cb_printf		4903940	0					
ANR	4904012	Identifier	io		4903940	0					
ANR	4904013	Identifier	cb_printf		4903940	1					
ANR	4904014	ArgumentList	"""%s\\n"""		4903940	1					
ANR	4904015	Argument	"""%s\\n"""		4903940	0					
ANR	4904016	PrimaryExpression	"""%s\\n"""		4903940	0					
ANR	4904017	Argument	usage		4903940	1					
ANR	4904018	Identifier	usage		4903940	0					
ANR	4904019	ForStatement	for ( i = 0 ; i < ( sizeof ( help_msg ) / sizeof ( char * ) ) ; i ++ )		4903940	6					
ANR	4904020	ForInit	i = 0 ;	254:6:10619:10624	4903940	0	True				
ANR	4904021	AssignmentExpression	i = 0		4903940	0		=			
ANR	4904022	Identifier	i		4903940	0					
ANR	4904023	PrimaryExpression	0		4903940	1					
ANR	4904024	Condition	i < ( sizeof ( help_msg ) / sizeof ( char * ) )	254:13:10626:10665	4903940	1	True				
ANR	4904025	RelationalExpression	i < ( sizeof ( help_msg ) / sizeof ( char * ) )		4903940	0		<			
ANR	4904026	Identifier	i		4903940	0					
ANR	4904027	MultiplicativeExpression	sizeof ( help_msg ) / sizeof ( char * )		4903940	1		/			
ANR	4904028	SizeofExpression	sizeof ( help_msg )		4903940	0					
ANR	4904029	Sizeof	sizeof		4903940	0					
ANR	4904030	SizeofOperand	help_msg		4903940	1					
ANR	4904031	SizeofExpression	sizeof ( char * )		4903940	1					
ANR	4904032	Sizeof	sizeof		4903940	0					
ANR	4904033	SizeofOperand	char *		4903940	1					
ANR	4904034	PostIncDecOperationExpression	i ++	254:55:10668:10670	4903940	2	True				
ANR	4904035	Identifier	i		4903940	0					
ANR	4904036	IncDec	++		4903940	1					
ANR	4904037	CompoundStatement		29:60:1484:1484	4903940	3					
ANR	4904038	IfStatement	"if ( ! cmd || ! strncmp ( cmd , help_msg [ i ] + 1 , cmd_len ) )"		4903940	0					
ANR	4904039	Condition	"! cmd || ! strncmp ( cmd , help_msg [ i ] + 1 , cmd_len )"	255:6:10681:10726	4903940	0	True				
ANR	4904040	OrExpression	"! cmd || ! strncmp ( cmd , help_msg [ i ] + 1 , cmd_len )"		4903940	0		||			
ANR	4904041	UnaryOperationExpression	! cmd		4903940	0					
ANR	4904042	UnaryOperator	!		4903940	0					
ANR	4904043	Identifier	cmd		4903940	1					
ANR	4904044	UnaryOperationExpression	"! strncmp ( cmd , help_msg [ i ] + 1 , cmd_len )"		4903940	1					
ANR	4904045	UnaryOperator	!		4903940	0					
ANR	4904046	CallExpression	"strncmp ( cmd , help_msg [ i ] + 1 , cmd_len )"		4903940	1					
ANR	4904047	Callee	strncmp		4903940	0					
ANR	4904048	Identifier	strncmp		4903940	0					
ANR	4904049	ArgumentList	cmd		4903940	1					
ANR	4904050	Argument	cmd		4903940	0					
ANR	4904051	Identifier	cmd		4903940	0					
ANR	4904052	Argument	help_msg [ i ] + 1		4903940	1					
ANR	4904053	AdditiveExpression	help_msg [ i ] + 1		4903940	0		+			
ANR	4904054	ArrayIndexing	help_msg [ i ]		4903940	0					
ANR	4904055	Identifier	help_msg		4903940	0					
ANR	4904056	Identifier	i		4903940	1					
ANR	4904057	PrimaryExpression	1		4903940	1					
ANR	4904058	Argument	cmd_len		4903940	2					
ANR	4904059	Identifier	cmd_len		4903940	0					
ANR	4904060	CompoundStatement		30:54:1540:1540	4903940	1					
ANR	4904061	ExpressionStatement	"io -> cb_printf ( ""%s\\n"" , help_msg [ i ] )"	256:3:10734:10769	4903940	0	True				
ANR	4904062	CallExpression	"io -> cb_printf ( ""%s\\n"" , help_msg [ i ] )"		4903940	0					
ANR	4904063	Callee	io -> cb_printf		4903940	0					
ANR	4904064	PtrMemberAccess	io -> cb_printf		4903940	0					
ANR	4904065	Identifier	io		4903940	0					
ANR	4904066	Identifier	cb_printf		4903940	1					
ANR	4904067	ArgumentList	"""%s\\n"""		4903940	1					
ANR	4904068	Argument	"""%s\\n"""		4903940	0					
ANR	4904069	PrimaryExpression	"""%s\\n"""		4903940	0					
ANR	4904070	Argument	help_msg [ i ]		4903940	1					
ANR	4904071	ArrayIndexing	help_msg [ i ]		4903940	0					
ANR	4904072	Identifier	help_msg		4903940	0					
ANR	4904073	Identifier	i		4903940	1					
ANR	4904074	ExpressionStatement	"io -> cb_printf ( ""\\nOld Commands: (deprecated)\\n"" )"	259:1:10779:10827	4903940	7	True				
ANR	4904075	CallExpression	"io -> cb_printf ( ""\\nOld Commands: (deprecated)\\n"" )"		4903940	0					
ANR	4904076	Callee	io -> cb_printf		4903940	0					
ANR	4904077	PtrMemberAccess	io -> cb_printf		4903940	0					
ANR	4904078	Identifier	io		4903940	0					
ANR	4904079	Identifier	cb_printf		4903940	1					
ANR	4904080	ArgumentList	"""\\nOld Commands: (deprecated)\\n"""		4903940	1					
ANR	4904081	Argument	"""\\nOld Commands: (deprecated)\\n"""		4903940	0					
ANR	4904082	PrimaryExpression	"""\\nOld Commands: (deprecated)\\n"""		4903940	0					
ANR	4904083	ForStatement	for ( i = 0 ; i < ( sizeof ( help_msg_old ) / sizeof ( char * ) ) ; i ++ )		4903940	8					
ANR	4904084	ForInit	i = 0 ;	260:6:10835:10840	4903940	0	True				
ANR	4904085	AssignmentExpression	i = 0		4903940	0		=			
ANR	4904086	Identifier	i		4903940	0					
ANR	4904087	PrimaryExpression	0		4903940	1					
ANR	4904088	Condition	i < ( sizeof ( help_msg_old ) / sizeof ( char * ) )	260:13:10842:10885	4903940	1	True				
ANR	4904089	RelationalExpression	i < ( sizeof ( help_msg_old ) / sizeof ( char * ) )		4903940	0		<			
ANR	4904090	Identifier	i		4903940	0					
ANR	4904091	MultiplicativeExpression	sizeof ( help_msg_old ) / sizeof ( char * )		4903940	1		/			
ANR	4904092	SizeofExpression	sizeof ( help_msg_old )		4903940	0					
ANR	4904093	Sizeof	sizeof		4903940	0					
ANR	4904094	SizeofOperand	help_msg_old		4903940	1					
ANR	4904095	SizeofExpression	sizeof ( char * )		4903940	1					
ANR	4904096	Sizeof	sizeof		4903940	0					
ANR	4904097	SizeofOperand	char *		4903940	1					
ANR	4904098	PostIncDecOperationExpression	i ++	260:59:10888:10890	4903940	2	True				
ANR	4904099	Identifier	i		4903940	0					
ANR	4904100	IncDec	++		4903940	1					
ANR	4904101	CompoundStatement		35:64:1704:1704	4903940	3					
ANR	4904102	IfStatement	"if ( ! cmd || ! strncmp ( cmd , help_msg_old [ i ] + 1 , cmd_len ) )"		4903940	0					
ANR	4904103	Condition	"! cmd || ! strncmp ( cmd , help_msg_old [ i ] + 1 , cmd_len )"	261:6:10901:10950	4903940	0	True				
ANR	4904104	OrExpression	"! cmd || ! strncmp ( cmd , help_msg_old [ i ] + 1 , cmd_len )"		4903940	0		||			
ANR	4904105	UnaryOperationExpression	! cmd		4903940	0					
ANR	4904106	UnaryOperator	!		4903940	0					
ANR	4904107	Identifier	cmd		4903940	1					
ANR	4904108	UnaryOperationExpression	"! strncmp ( cmd , help_msg_old [ i ] + 1 , cmd_len )"		4903940	1					
ANR	4904109	UnaryOperator	!		4903940	0					
ANR	4904110	CallExpression	"strncmp ( cmd , help_msg_old [ i ] + 1 , cmd_len )"		4903940	1					
ANR	4904111	Callee	strncmp		4903940	0					
ANR	4904112	Identifier	strncmp		4903940	0					
ANR	4904113	ArgumentList	cmd		4903940	1					
ANR	4904114	Argument	cmd		4903940	0					
ANR	4904115	Identifier	cmd		4903940	0					
ANR	4904116	Argument	help_msg_old [ i ] + 1		4903940	1					
ANR	4904117	AdditiveExpression	help_msg_old [ i ] + 1		4903940	0		+			
ANR	4904118	ArrayIndexing	help_msg_old [ i ]		4903940	0					
ANR	4904119	Identifier	help_msg_old		4903940	0					
ANR	4904120	Identifier	i		4903940	1					
ANR	4904121	PrimaryExpression	1		4903940	1					
ANR	4904122	Argument	cmd_len		4903940	2					
ANR	4904123	Identifier	cmd_len		4903940	0					
ANR	4904124	CompoundStatement		36:58:1764:1764	4903940	1					
ANR	4904125	ExpressionStatement	"io -> cb_printf ( ""%s\\n"" , help_msg_old [ i ] )"	262:3:10958:10997	4903940	0	True				
ANR	4904126	CallExpression	"io -> cb_printf ( ""%s\\n"" , help_msg_old [ i ] )"		4903940	0					
ANR	4904127	Callee	io -> cb_printf		4903940	0					
ANR	4904128	PtrMemberAccess	io -> cb_printf		4903940	0					
ANR	4904129	Identifier	io		4903940	0					
ANR	4904130	Identifier	cb_printf		4903940	1					
ANR	4904131	ArgumentList	"""%s\\n"""		4903940	1					
ANR	4904132	Argument	"""%s\\n"""		4903940	0					
ANR	4904133	PrimaryExpression	"""%s\\n"""		4903940	0					
ANR	4904134	Argument	help_msg_old [ i ]		4903940	1					
ANR	4904135	ArrayIndexing	help_msg_old [ i ]		4903940	0					
ANR	4904136	Identifier	help_msg_old		4903940	0					
ANR	4904137	Identifier	i		4903940	1					
ANR	4904138	ReturnType	static void		4903940	1					
ANR	4904139	Identifier	print_help		4903940	2					
ANR	4904140	ParameterList	"RIO * io , char * cmd , int p_usage"		4903940	3					
ANR	4904141	Parameter	RIO * io	226:24:9155:9161	4903940	0	True				
ANR	4904142	ParameterType	RIO *		4903940	0					
ANR	4904143	Identifier	io		4903940	1					
ANR	4904144	Parameter	char * cmd	226:33:9164:9172	4903940	1	True				
ANR	4904145	ParameterType	char *		4903940	0					
ANR	4904146	Identifier	cmd		4903940	1					
ANR	4904147	Parameter	int p_usage	226:44:9175:9185	4903940	2	True				
ANR	4904148	ParameterType	int		4903940	0					
ANR	4904149	Identifier	p_usage		4903940	1					
ANR	4904150	CFGEntryNode	ENTRY		4903940		True				
ANR	4904151	CFGExitNode	EXIT		4903940		True				
ANR	4904152	Symbol	* help_msg_old		4903940						
ANR	4904153	Symbol	io		4903940						
ANR	4904154	Symbol	cmd_len		4903940						
ANR	4904155	Symbol	usage		4903940						
ANR	4904156	Symbol	i		4903940						
ANR	4904157	Symbol	p_usage		4903940						
ANR	4904158	Symbol	strlen		4903940						
ANR	4904159	Symbol	help_msg		4903940						
ANR	4904160	Symbol	strncmp		4903940						
ANR	4904161	Symbol	* i		4903940						
ANR	4904162	Symbol	help_msg_old		4903940						
ANR	4904163	Symbol	* help_msg		4903940						
ANR	4904164	Symbol	cmd		4903940						
ANR	4904165	Function	ReadMemory	267:0:11009:12901							
ANR	4904166	FunctionDef	"ReadMemory (RIO * io , RIODesc * iodesc , int ioctl_n , size_t pid , size_t address , ut8 * buf , int len)"		4904165	0					
ANR	4904167	CompoundStatement		267:102:11111:12901	4904165	0					
ANR	4904168	IdentifierDeclStatement	int ret = - 1 ;	268:1:11114:11126	4904165	0	True				
ANR	4904169	IdentifierDecl	ret = - 1		4904165	0					
ANR	4904170	IdentifierDeclType	int		4904165	0					
ANR	4904171	Identifier	ret		4904165	1					
ANR	4904172	AssignmentExpression	ret = - 1		4904165	2		=			
ANR	4904173	Identifier	ret		4904165	0					
ANR	4904174	UnaryOperationExpression	- 1		4904165	1					
ANR	4904175	UnaryOperator	-		4904165	0					
ANR	4904176	PrimaryExpression	1		4904165	1					
ANR	4904177	IdentifierDeclStatement	"int pagesize , newlen ;"	269:1:11129:11149	4904165	1	True				
ANR	4904178	IdentifierDecl	pagesize		4904165	0					
ANR	4904179	IdentifierDeclType	int		4904165	0					
ANR	4904180	Identifier	pagesize		4904165	1					
ANR	4904181	IdentifierDecl	newlen		4904165	1					
ANR	4904182	IdentifierDeclType	int		4904165	0					
ANR	4904183	Identifier	newlen		4904165	1					
ANR	4904184	IdentifierDeclStatement	"ut64 pageaddr , offset ;"	270:1:11152:11173	4904165	2	True				
ANR	4904185	IdentifierDecl	pageaddr		4904165	0					
ANR	4904186	IdentifierDeclType	ut64		4904165	0					
ANR	4904187	Identifier	pageaddr		4904165	1					
ANR	4904188	IdentifierDecl	offset		4904165	1					
ANR	4904189	IdentifierDeclType	ut64		4904165	0					
ANR	4904190	Identifier	offset		4904165	1					
ANR	4904191	IdentifierDeclStatement	bool flag = 0 ;	271:1:11176:11189	4904165	3	True				
ANR	4904192	IdentifierDecl	flag = 0		4904165	0					
ANR	4904193	IdentifierDeclType	bool		4904165	0					
ANR	4904194	Identifier	flag		4904165	1					
ANR	4904195	AssignmentExpression	flag = 0		4904165	2		=			
ANR	4904196	Identifier	flag		4904165	0					
ANR	4904197	PrimaryExpression	0		4904165	1					
ANR	4904198	IdentifierDeclStatement	ut8 garbage ;	272:1:11192:11203	4904165	4	True				
ANR	4904199	IdentifierDecl	garbage		4904165	0					
ANR	4904200	IdentifierDeclType	ut8		4904165	0					
ANR	4904201	Identifier	garbage		4904165	1					
ANR	4904202	IfStatement	if ( iodesc && iodesc -> data > 0 && buf )		4904165	5					
ANR	4904203	Condition	iodesc && iodesc -> data > 0 && buf	274:5:11211:11243	4904165	0	True				
ANR	4904204	AndExpression	iodesc && iodesc -> data > 0 && buf		4904165	0		&&			
ANR	4904205	Identifier	iodesc		4904165	0					
ANR	4904206	AndExpression	iodesc -> data > 0 && buf		4904165	1		&&			
ANR	4904207	RelationalExpression	iodesc -> data > 0		4904165	0		>			
ANR	4904208	PtrMemberAccess	iodesc -> data		4904165	0					
ANR	4904209	Identifier	iodesc		4904165	0					
ANR	4904210	Identifier	data		4904165	1					
ANR	4904211	PrimaryExpression	0		4904165	1					
ANR	4904212	Identifier	buf		4904165	1					
ANR	4904213	CompoundStatement		9:2:138:158	4904165	1					
ANR	4904214	IdentifierDeclStatement	struct r2k_data data ;	275:2:11250:11270	4904165	0	True				
ANR	4904215	IdentifierDecl	data		4904165	0					
ANR	4904216	IdentifierDeclType	struct r2k_data		4904165	0					
ANR	4904217	Identifier	data		4904165	1					
ANR	4904218	ExpressionStatement	data . pid = pid	277:2:11275:11289	4904165	1	True				
ANR	4904219	AssignmentExpression	data . pid = pid		4904165	0		=			
ANR	4904220	MemberAccess	data . pid		4904165	0					
ANR	4904221	Identifier	data		4904165	0					
ANR	4904222	Identifier	pid		4904165	1					
ANR	4904223	Identifier	pid		4904165	1					
ANR	4904224	ExpressionStatement	data . addr = address	278:2:11293:11312	4904165	2	True				
ANR	4904225	AssignmentExpression	data . addr = address		4904165	0		=			
ANR	4904226	MemberAccess	data . addr		4904165	0					
ANR	4904227	Identifier	data		4904165	0					
ANR	4904228	Identifier	addr		4904165	1					
ANR	4904229	Identifier	address		4904165	1					
ANR	4904230	ExpressionStatement	data . len = len	279:2:11316:11330	4904165	3	True				
ANR	4904231	AssignmentExpression	data . len = len		4904165	0		=			
ANR	4904232	MemberAccess	data . len		4904165	0					
ANR	4904233	Identifier	data		4904165	0					
ANR	4904234	Identifier	len		4904165	1					
ANR	4904235	Identifier	len		4904165	1					
ANR	4904236	ExpressionStatement	"data . buff = ( ut8 * ) calloc ( len + 1 , 1 )"	280:2:11334:11373	4904165	4	True				
ANR	4904237	AssignmentExpression	"data . buff = ( ut8 * ) calloc ( len + 1 , 1 )"		4904165	0		=			
ANR	4904238	MemberAccess	data . buff		4904165	0					
ANR	4904239	Identifier	data		4904165	0					
ANR	4904240	Identifier	buff		4904165	1					
ANR	4904241	CastExpression	"( ut8 * ) calloc ( len + 1 , 1 )"		4904165	1					
ANR	4904242	CastTarget	ut8 *		4904165	0					
ANR	4904243	CallExpression	"calloc ( len + 1 , 1 )"		4904165	1					
ANR	4904244	Callee	calloc		4904165	0					
ANR	4904245	Identifier	calloc		4904165	0					
ANR	4904246	ArgumentList	len + 1		4904165	1					
ANR	4904247	Argument	len + 1		4904165	0					
ANR	4904248	AdditiveExpression	len + 1		4904165	0		+			
ANR	4904249	Identifier	len		4904165	0					
ANR	4904250	PrimaryExpression	1		4904165	1					
ANR	4904251	Argument	1		4904165	1					
ANR	4904252	PrimaryExpression	1		4904165	0					
ANR	4904253	IfStatement	if ( ! data . buff )		4904165	5					
ANR	4904254	Condition	! data . buff	281:6:11381:11390	4904165	0	True				
ANR	4904255	UnaryOperationExpression	! data . buff		4904165	0					
ANR	4904256	UnaryOperator	!		4904165	0					
ANR	4904257	MemberAccess	data . buff		4904165	1					
ANR	4904258	Identifier	data		4904165	0					
ANR	4904259	Identifier	buff		4904165	1					
ANR	4904260	CompoundStatement		15:18:281:281	4904165	1					
ANR	4904261	ReturnStatement	return - 1 ;	282:3:11398:11407	4904165	0	True				
ANR	4904262	UnaryOperationExpression	- 1		4904165	0					
ANR	4904263	UnaryOperator	-		4904165	0					
ANR	4904264	PrimaryExpression	1		4904165	1					
ANR	4904265	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"	285:2:11416:11471	4904165	6	True				
ANR	4904266	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	0		=			
ANR	4904267	Identifier	ret		4904165	0					
ANR	4904268	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	1					
ANR	4904269	Callee	ioctl		4904165	0					
ANR	4904270	Identifier	ioctl		4904165	0					
ANR	4904271	ArgumentList	( int ) ( size_t ) iodesc -> data		4904165	1					
ANR	4904272	Argument	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904273	CastExpression	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904274	CastTarget	int		4904165	0					
ANR	4904275	CastExpression	( size_t ) iodesc -> data		4904165	1					
ANR	4904276	CastTarget	size_t		4904165	0					
ANR	4904277	PtrMemberAccess	iodesc -> data		4904165	1					
ANR	4904278	Identifier	iodesc		4904165	0					
ANR	4904279	Identifier	data		4904165	1					
ANR	4904280	Argument	ioctl_n		4904165	1					
ANR	4904281	Identifier	ioctl_n		4904165	0					
ANR	4904282	Argument	& data		4904165	2					
ANR	4904283	UnaryOperationExpression	& data		4904165	0					
ANR	4904284	UnaryOperator	&		4904165	0					
ANR	4904285	Identifier	data		4904165	1					
ANR	4904286	IfStatement	if ( ! ret )		4904165	7					
ANR	4904287	Condition	! ret	286:6:11479:11482	4904165	0	True				
ANR	4904288	UnaryOperationExpression	! ret		4904165	0					
ANR	4904289	UnaryOperator	!		4904165	0					
ANR	4904290	Identifier	ret		4904165	1					
ANR	4904291	CompoundStatement		20:12:373:373	4904165	1					
ANR	4904292	ExpressionStatement	"memcpy ( buf , data . buff , len )"	287:3:11490:11518	4904165	0	True				
ANR	4904293	CallExpression	"memcpy ( buf , data . buff , len )"		4904165	0					
ANR	4904294	Callee	memcpy		4904165	0					
ANR	4904295	Identifier	memcpy		4904165	0					
ANR	4904296	ArgumentList	buf		4904165	1					
ANR	4904297	Argument	buf		4904165	0					
ANR	4904298	Identifier	buf		4904165	0					
ANR	4904299	Argument	data . buff		4904165	1					
ANR	4904300	MemberAccess	data . buff		4904165	0					
ANR	4904301	Identifier	data		4904165	0					
ANR	4904302	Identifier	buff		4904165	1					
ANR	4904303	Argument	len		4904165	2					
ANR	4904304	Identifier	len		4904165	0					
ANR	4904305	ExpressionStatement	ret = len	288:3:11523:11532	4904165	1	True				
ANR	4904306	AssignmentExpression	ret = len		4904165	0		=			
ANR	4904307	Identifier	ret		4904165	0					
ANR	4904308	Identifier	len		4904165	1					
ANR	4904309	ElseStatement	else		4904165	0					
ANR	4904310	CompoundStatement		23:9:431:431	4904165	0					
ANR	4904311	ExpressionStatement	garbage = 0xff	290:3:11548:11562	4904165	0	True				
ANR	4904312	AssignmentExpression	garbage = 0xff		4904165	0		=			
ANR	4904313	Identifier	garbage		4904165	0					
ANR	4904314	PrimaryExpression	0xff		4904165	1					
ANR	4904315	ExpressionStatement	flag = 0	291:3:11567:11575	4904165	1	True				
ANR	4904316	AssignmentExpression	flag = 0		4904165	0		=			
ANR	4904317	Identifier	flag		4904165	0					
ANR	4904318	PrimaryExpression	0		4904165	1					
ANR	4904319	ExpressionStatement	offset = 0	292:3:11580:11590	4904165	2	True				
ANR	4904320	AssignmentExpression	offset = 0		4904165	0		=			
ANR	4904321	Identifier	offset		4904165	0					
ANR	4904322	PrimaryExpression	0		4904165	1					
ANR	4904323	ExpressionStatement	pagesize = getpagesize ( )	293:3:11595:11619	4904165	3	True				
ANR	4904324	AssignmentExpression	pagesize = getpagesize ( )		4904165	0		=			
ANR	4904325	Identifier	pagesize		4904165	0					
ANR	4904326	CallExpression	getpagesize ( )		4904165	1					
ANR	4904327	Callee	getpagesize		4904165	0					
ANR	4904328	Identifier	getpagesize		4904165	0					
ANR	4904329	ArgumentList			4904165	1					
ANR	4904330	ExpressionStatement	pageaddr = address + pagesize	294:3:11624:11653	4904165	4	True				
ANR	4904331	AssignmentExpression	pageaddr = address + pagesize		4904165	0		=			
ANR	4904332	Identifier	pageaddr		4904165	0					
ANR	4904333	AdditiveExpression	address + pagesize		4904165	1		+			
ANR	4904334	Identifier	address		4904165	0					
ANR	4904335	Identifier	pagesize		4904165	1					
ANR	4904336	ExpressionStatement	pageaddr -= ( pageaddr % pagesize )	295:3:11658:11691	4904165	5	True				
ANR	4904337	AssignmentExpression	pageaddr -= ( pageaddr % pagesize )		4904165	0		-=			
ANR	4904338	Identifier	pageaddr		4904165	0					
ANR	4904339	MultiplicativeExpression	pageaddr % pagesize		4904165	1		%			
ANR	4904340	Identifier	pageaddr		4904165	0					
ANR	4904341	Identifier	pagesize		4904165	1					
ANR	4904342	IfStatement	if ( ( len - ( int ) ( pageaddr - address ) ) > 0 )		4904165	6					
ANR	4904343	Condition	( len - ( int ) ( pageaddr - address ) ) > 0	296:7:11700:11736	4904165	0	True				
ANR	4904344	RelationalExpression	( len - ( int ) ( pageaddr - address ) ) > 0		4904165	0		>			
ANR	4904345	AdditiveExpression	len - ( int ) ( pageaddr - address )		4904165	0		-			
ANR	4904346	Identifier	len		4904165	0					
ANR	4904347	CastExpression	( int ) ( pageaddr - address )		4904165	1					
ANR	4904348	CastTarget	int		4904165	0					
ANR	4904349	AdditiveExpression	pageaddr - address		4904165	1		-			
ANR	4904350	Identifier	pageaddr		4904165	0					
ANR	4904351	Identifier	address		4904165	1					
ANR	4904352	PrimaryExpression	0		4904165	1					
ANR	4904353	CompoundStatement		30:46:627:627	4904165	1					
ANR	4904354	ExpressionStatement	data . len = pageaddr - address	297:4:11745:11774	4904165	0	True				
ANR	4904355	AssignmentExpression	data . len = pageaddr - address		4904165	0		=			
ANR	4904356	MemberAccess	data . len		4904165	0					
ANR	4904357	Identifier	data		4904165	0					
ANR	4904358	Identifier	len		4904165	1					
ANR	4904359	AdditiveExpression	pageaddr - address		4904165	1		-			
ANR	4904360	Identifier	pageaddr		4904165	0					
ANR	4904361	Identifier	address		4904165	1					
ANR	4904362	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"	298:4:11780:11835	4904165	1	True				
ANR	4904363	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	0		=			
ANR	4904364	Identifier	ret		4904165	0					
ANR	4904365	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	1					
ANR	4904366	Callee	ioctl		4904165	0					
ANR	4904367	Identifier	ioctl		4904165	0					
ANR	4904368	ArgumentList	( int ) ( size_t ) iodesc -> data		4904165	1					
ANR	4904369	Argument	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904370	CastExpression	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904371	CastTarget	int		4904165	0					
ANR	4904372	CastExpression	( size_t ) iodesc -> data		4904165	1					
ANR	4904373	CastTarget	size_t		4904165	0					
ANR	4904374	PtrMemberAccess	iodesc -> data		4904165	1					
ANR	4904375	Identifier	iodesc		4904165	0					
ANR	4904376	Identifier	data		4904165	1					
ANR	4904377	Argument	ioctl_n		4904165	1					
ANR	4904378	Identifier	ioctl_n		4904165	0					
ANR	4904379	Argument	& data		4904165	2					
ANR	4904380	UnaryOperationExpression	& data		4904165	0					
ANR	4904381	UnaryOperator	&		4904165	0					
ANR	4904382	Identifier	data		4904165	1					
ANR	4904383	IfStatement	if ( ! ret )		4904165	2					
ANR	4904384	Condition	! ret	299:8:11845:11848	4904165	0	True				
ANR	4904385	UnaryOperationExpression	! ret		4904165	0					
ANR	4904386	UnaryOperator	!		4904165	0					
ANR	4904387	Identifier	ret		4904165	1					
ANR	4904388	CompoundStatement		33:14:739:739	4904165	1					
ANR	4904389	ExpressionStatement	"memcpy ( buf + offset , data . buff , pageaddr - address )"	300:5:11858:11910	4904165	0	True				
ANR	4904390	CallExpression	"memcpy ( buf + offset , data . buff , pageaddr - address )"		4904165	0					
ANR	4904391	Callee	memcpy		4904165	0					
ANR	4904392	Identifier	memcpy		4904165	0					
ANR	4904393	ArgumentList	buf + offset		4904165	1					
ANR	4904394	Argument	buf + offset		4904165	0					
ANR	4904395	AdditiveExpression	buf + offset		4904165	0		+			
ANR	4904396	Identifier	buf		4904165	0					
ANR	4904397	Identifier	offset		4904165	1					
ANR	4904398	Argument	data . buff		4904165	1					
ANR	4904399	MemberAccess	data . buff		4904165	0					
ANR	4904400	Identifier	data		4904165	0					
ANR	4904401	Identifier	buff		4904165	1					
ANR	4904402	Argument	pageaddr - address		4904165	2					
ANR	4904403	AdditiveExpression	pageaddr - address		4904165	0		-			
ANR	4904404	Identifier	pageaddr		4904165	0					
ANR	4904405	Identifier	address		4904165	1					
ANR	4904406	ExpressionStatement	flag = 1	301:5:11917:11925	4904165	1	True				
ANR	4904407	AssignmentExpression	flag = 1		4904165	0		=			
ANR	4904408	Identifier	flag		4904165	0					
ANR	4904409	PrimaryExpression	1		4904165	1					
ANR	4904410	ElseStatement	else		4904165	0					
ANR	4904411	CompoundStatement		36:11:826:826	4904165	0					
ANR	4904412	ExpressionStatement	"memset ( buf + offset , garbage , pageaddr - address )"	303:5:11945:11995	4904165	0	True				
ANR	4904413	CallExpression	"memset ( buf + offset , garbage , pageaddr - address )"		4904165	0					
ANR	4904414	Callee	memset		4904165	0					
ANR	4904415	Identifier	memset		4904165	0					
ANR	4904416	ArgumentList	buf + offset		4904165	1					
ANR	4904417	Argument	buf + offset		4904165	0					
ANR	4904418	AdditiveExpression	buf + offset		4904165	0		+			
ANR	4904419	Identifier	buf		4904165	0					
ANR	4904420	Identifier	offset		4904165	1					
ANR	4904421	Argument	garbage		4904165	1					
ANR	4904422	Identifier	garbage		4904165	0					
ANR	4904423	Argument	pageaddr - address		4904165	2					
ANR	4904424	AdditiveExpression	pageaddr - address		4904165	0		-			
ANR	4904425	Identifier	pageaddr		4904165	0					
ANR	4904426	Identifier	address		4904165	1					
ANR	4904427	ExpressionStatement	offset = pageaddr - address	306:4:12008:12035	4904165	3	True				
ANR	4904428	AssignmentExpression	offset = pageaddr - address		4904165	0		=			
ANR	4904429	Identifier	offset		4904165	0					
ANR	4904430	AdditiveExpression	pageaddr - address		4904165	1		-			
ANR	4904431	Identifier	pageaddr		4904165	0					
ANR	4904432	Identifier	address		4904165	1					
ANR	4904433	ExpressionStatement	newlen = len - offset	307:4:12041:12062	4904165	4	True				
ANR	4904434	AssignmentExpression	newlen = len - offset		4904165	0		=			
ANR	4904435	Identifier	newlen		4904165	0					
ANR	4904436	AdditiveExpression	len - offset		4904165	1		-			
ANR	4904437	Identifier	len		4904165	0					
ANR	4904438	Identifier	offset		4904165	1					
ANR	4904439	WhileStatement	while ( newlen >= pagesize )		4904165	5					
ANR	4904440	Condition	newlen >= pagesize	308:11:12075:12092	4904165	0	True				
ANR	4904441	RelationalExpression	newlen >= pagesize		4904165	0		>=			
ANR	4904442	Identifier	newlen		4904165	0					
ANR	4904443	Identifier	pagesize		4904165	1					
ANR	4904444	CompoundStatement		42:31:983:983	4904165	1					
ANR	4904445	ExpressionStatement	data . addr = pageaddr	309:5:12102:12122	4904165	0	True				
ANR	4904446	AssignmentExpression	data . addr = pageaddr		4904165	0		=			
ANR	4904447	MemberAccess	data . addr		4904165	0					
ANR	4904448	Identifier	data		4904165	0					
ANR	4904449	Identifier	addr		4904165	1					
ANR	4904450	Identifier	pageaddr		4904165	1					
ANR	4904451	ExpressionStatement	data . len = pagesize	310:5:12129:12148	4904165	1	True				
ANR	4904452	AssignmentExpression	data . len = pagesize		4904165	0		=			
ANR	4904453	MemberAccess	data . len		4904165	0					
ANR	4904454	Identifier	data		4904165	0					
ANR	4904455	Identifier	len		4904165	1					
ANR	4904456	Identifier	pagesize		4904165	1					
ANR	4904457	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"	312:5:12156:12211	4904165	2	True				
ANR	4904458	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	0		=			
ANR	4904459	Identifier	ret		4904165	0					
ANR	4904460	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	1					
ANR	4904461	Callee	ioctl		4904165	0					
ANR	4904462	Identifier	ioctl		4904165	0					
ANR	4904463	ArgumentList	( int ) ( size_t ) iodesc -> data		4904165	1					
ANR	4904464	Argument	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904465	CastExpression	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904466	CastTarget	int		4904165	0					
ANR	4904467	CastExpression	( size_t ) iodesc -> data		4904165	1					
ANR	4904468	CastTarget	size_t		4904165	0					
ANR	4904469	PtrMemberAccess	iodesc -> data		4904165	1					
ANR	4904470	Identifier	iodesc		4904165	0					
ANR	4904471	Identifier	data		4904165	1					
ANR	4904472	Argument	ioctl_n		4904165	1					
ANR	4904473	Identifier	ioctl_n		4904165	0					
ANR	4904474	Argument	& data		4904165	2					
ANR	4904475	UnaryOperationExpression	& data		4904165	0					
ANR	4904476	UnaryOperator	&		4904165	0					
ANR	4904477	Identifier	data		4904165	1					
ANR	4904478	IfStatement	if ( ! ret )		4904165	3					
ANR	4904479	Condition	! ret	313:9:12222:12225	4904165	0	True				
ANR	4904480	UnaryOperationExpression	! ret		4904165	0					
ANR	4904481	UnaryOperator	!		4904165	0					
ANR	4904482	Identifier	ret		4904165	1					
ANR	4904483	CompoundStatement		47:15:1116:1116	4904165	1					
ANR	4904484	ExpressionStatement	"memcpy ( buf + offset , data . buff , pagesize )"	314:6:12236:12278	4904165	0	True				
ANR	4904485	CallExpression	"memcpy ( buf + offset , data . buff , pagesize )"		4904165	0					
ANR	4904486	Callee	memcpy		4904165	0					
ANR	4904487	Identifier	memcpy		4904165	0					
ANR	4904488	ArgumentList	buf + offset		4904165	1					
ANR	4904489	Argument	buf + offset		4904165	0					
ANR	4904490	AdditiveExpression	buf + offset		4904165	0		+			
ANR	4904491	Identifier	buf		4904165	0					
ANR	4904492	Identifier	offset		4904165	1					
ANR	4904493	Argument	data . buff		4904165	1					
ANR	4904494	MemberAccess	data . buff		4904165	0					
ANR	4904495	Identifier	data		4904165	0					
ANR	4904496	Identifier	buff		4904165	1					
ANR	4904497	Argument	pagesize		4904165	2					
ANR	4904498	Identifier	pagesize		4904165	0					
ANR	4904499	ExpressionStatement	flag = 1	315:6:12286:12294	4904165	1	True				
ANR	4904500	AssignmentExpression	flag = 1		4904165	0		=			
ANR	4904501	Identifier	flag		4904165	0					
ANR	4904502	PrimaryExpression	1		4904165	1					
ANR	4904503	ElseStatement	else		4904165	0					
ANR	4904504	CompoundStatement		50:12:1196:1196	4904165	0					
ANR	4904505	ExpressionStatement	"memset ( buf + offset , garbage , pagesize )"	317:6:12316:12356	4904165	0	True				
ANR	4904506	CallExpression	"memset ( buf + offset , garbage , pagesize )"		4904165	0					
ANR	4904507	Callee	memset		4904165	0					
ANR	4904508	Identifier	memset		4904165	0					
ANR	4904509	ArgumentList	buf + offset		4904165	1					
ANR	4904510	Argument	buf + offset		4904165	0					
ANR	4904511	AdditiveExpression	buf + offset		4904165	0		+			
ANR	4904512	Identifier	buf		4904165	0					
ANR	4904513	Identifier	offset		4904165	1					
ANR	4904514	Argument	garbage		4904165	1					
ANR	4904515	Identifier	garbage		4904165	0					
ANR	4904516	Argument	pagesize		4904165	2					
ANR	4904517	Identifier	pagesize		4904165	0					
ANR	4904518	ExpressionStatement	pageaddr += pagesize	319:5:12370:12390	4904165	4	True				
ANR	4904519	AssignmentExpression	pageaddr += pagesize		4904165	0		+=			
ANR	4904520	Identifier	pageaddr		4904165	0					
ANR	4904521	Identifier	pagesize		4904165	1					
ANR	4904522	ExpressionStatement	offset += pagesize	320:5:12397:12415	4904165	5	True				
ANR	4904523	AssignmentExpression	offset += pagesize		4904165	0		+=			
ANR	4904524	Identifier	offset		4904165	0					
ANR	4904525	Identifier	pagesize		4904165	1					
ANR	4904526	ExpressionStatement	newlen -= pagesize	321:5:12422:12440	4904165	6	True				
ANR	4904527	AssignmentExpression	newlen -= pagesize		4904165	0		-=			
ANR	4904528	Identifier	newlen		4904165	0					
ANR	4904529	Identifier	pagesize		4904165	1					
ANR	4904530	ExpressionStatement	data . addr = pageaddr	324:4:12453:12473	4904165	6	True				
ANR	4904531	AssignmentExpression	data . addr = pageaddr		4904165	0		=			
ANR	4904532	MemberAccess	data . addr		4904165	0					
ANR	4904533	Identifier	data		4904165	0					
ANR	4904534	Identifier	addr		4904165	1					
ANR	4904535	Identifier	pageaddr		4904165	1					
ANR	4904536	ExpressionStatement	data . len = newlen	325:4:12479:12496	4904165	7	True				
ANR	4904537	AssignmentExpression	data . len = newlen		4904165	0		=			
ANR	4904538	MemberAccess	data . len		4904165	0					
ANR	4904539	Identifier	data		4904165	0					
ANR	4904540	Identifier	len		4904165	1					
ANR	4904541	Identifier	newlen		4904165	1					
ANR	4904542	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"	326:4:12502:12557	4904165	8	True				
ANR	4904543	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	0		=			
ANR	4904544	Identifier	ret		4904165	0					
ANR	4904545	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904165	1					
ANR	4904546	Callee	ioctl		4904165	0					
ANR	4904547	Identifier	ioctl		4904165	0					
ANR	4904548	ArgumentList	( int ) ( size_t ) iodesc -> data		4904165	1					
ANR	4904549	Argument	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904550	CastExpression	( int ) ( size_t ) iodesc -> data		4904165	0					
ANR	4904551	CastTarget	int		4904165	0					
ANR	4904552	CastExpression	( size_t ) iodesc -> data		4904165	1					
ANR	4904553	CastTarget	size_t		4904165	0					
ANR	4904554	PtrMemberAccess	iodesc -> data		4904165	1					
ANR	4904555	Identifier	iodesc		4904165	0					
ANR	4904556	Identifier	data		4904165	1					
ANR	4904557	Argument	ioctl_n		4904165	1					
ANR	4904558	Identifier	ioctl_n		4904165	0					
ANR	4904559	Argument	& data		4904165	2					
ANR	4904560	UnaryOperationExpression	& data		4904165	0					
ANR	4904561	UnaryOperator	&		4904165	0					
ANR	4904562	Identifier	data		4904165	1					
ANR	4904563	IfStatement	if ( ! ret )		4904165	9					
ANR	4904564	Condition	! ret	327:8:12567:12570	4904165	0	True				
ANR	4904565	UnaryOperationExpression	! ret		4904165	0					
ANR	4904566	UnaryOperator	!		4904165	0					
ANR	4904567	Identifier	ret		4904165	1					
ANR	4904568	CompoundStatement		61:14:1461:1461	4904165	1					
ANR	4904569	ExpressionStatement	"memcpy ( buf + offset , data . buff , newlen )"	328:5:12580:12620	4904165	0	True				
ANR	4904570	CallExpression	"memcpy ( buf + offset , data . buff , newlen )"		4904165	0					
ANR	4904571	Callee	memcpy		4904165	0					
ANR	4904572	Identifier	memcpy		4904165	0					
ANR	4904573	ArgumentList	buf + offset		4904165	1					
ANR	4904574	Argument	buf + offset		4904165	0					
ANR	4904575	AdditiveExpression	buf + offset		4904165	0		+			
ANR	4904576	Identifier	buf		4904165	0					
ANR	4904577	Identifier	offset		4904165	1					
ANR	4904578	Argument	data . buff		4904165	1					
ANR	4904579	MemberAccess	data . buff		4904165	0					
ANR	4904580	Identifier	data		4904165	0					
ANR	4904581	Identifier	buff		4904165	1					
ANR	4904582	Argument	newlen		4904165	2					
ANR	4904583	Identifier	newlen		4904165	0					
ANR	4904584	ExpressionStatement	flag = 1	329:5:12627:12635	4904165	1	True				
ANR	4904585	AssignmentExpression	flag = 1		4904165	0		=			
ANR	4904586	Identifier	flag		4904165	0					
ANR	4904587	PrimaryExpression	1		4904165	1					
ANR	4904588	ElseStatement	else		4904165	0					
ANR	4904589	CompoundStatement		64:11:1536:1536	4904165	0					
ANR	4904590	ExpressionStatement	"memset ( buf + offset , garbage , newlen )"	331:5:12655:12693	4904165	0	True				
ANR	4904591	CallExpression	"memset ( buf + offset , garbage , newlen )"		4904165	0					
ANR	4904592	Callee	memset		4904165	0					
ANR	4904593	Identifier	memset		4904165	0					
ANR	4904594	ArgumentList	buf + offset		4904165	1					
ANR	4904595	Argument	buf + offset		4904165	0					
ANR	4904596	AdditiveExpression	buf + offset		4904165	0		+			
ANR	4904597	Identifier	buf		4904165	0					
ANR	4904598	Identifier	offset		4904165	1					
ANR	4904599	Argument	garbage		4904165	1					
ANR	4904600	Identifier	garbage		4904165	0					
ANR	4904601	Argument	newlen		4904165	2					
ANR	4904602	Identifier	newlen		4904165	0					
ANR	4904603	ExpressionStatement	ret = flag ? len : - 1	334:3:12709:12730	4904165	7	True				
ANR	4904604	AssignmentExpression	ret = flag ? len : - 1		4904165	0		=			
ANR	4904605	Identifier	ret		4904165	0					
ANR	4904606	ConditionalExpression	flag ? len : - 1		4904165	1					
ANR	4904607	Condition	flag		4904165	0					
ANR	4904608	Identifier	flag		4904165	0					
ANR	4904609	Identifier	len		4904165	1					
ANR	4904610	UnaryOperationExpression	- 1		4904165	2					
ANR	4904611	UnaryOperator	-		4904165	0					
ANR	4904612	PrimaryExpression	1		4904165	1					
ANR	4904613	ExpressionStatement	free ( data . buff )	337:2:12739:12755	4904165	8	True				
ANR	4904614	CallExpression	free ( data . buff )		4904165	0					
ANR	4904615	Callee	free		4904165	0					
ANR	4904616	Identifier	free		4904165	0					
ANR	4904617	ArgumentList	data . buff		4904165	1					
ANR	4904618	Argument	data . buff		4904165	0					
ANR	4904619	MemberAccess	data . buff		4904165	0					
ANR	4904620	Identifier	data		4904165	0					
ANR	4904621	Identifier	buff		4904165	1					
ANR	4904622	ElseStatement	else		4904165	0					
ANR	4904623	IfStatement	if ( ! buf )		4904165	0					
ANR	4904624	Condition	! buf	338:12:12769:12772	4904165	0	True				
ANR	4904625	UnaryOperationExpression	! buf		4904165	0					
ANR	4904626	UnaryOperator	!		4904165	0					
ANR	4904627	Identifier	buf		4904165	1					
ANR	4904628	CompoundStatement		72:18:1663:1663	4904165	1					
ANR	4904629	ExpressionStatement	"io -> cb_printf ( ""Invalid input buffer.\\n"" )"	339:2:12779:12820	4904165	0	True				
ANR	4904630	CallExpression	"io -> cb_printf ( ""Invalid input buffer.\\n"" )"		4904165	0					
ANR	4904631	Callee	io -> cb_printf		4904165	0					
ANR	4904632	PtrMemberAccess	io -> cb_printf		4904165	0					
ANR	4904633	Identifier	io		4904165	0					
ANR	4904634	Identifier	cb_printf		4904165	1					
ANR	4904635	ArgumentList	"""Invalid input buffer.\\n"""		4904165	1					
ANR	4904636	Argument	"""Invalid input buffer.\\n"""		4904165	0					
ANR	4904637	PrimaryExpression	"""Invalid input buffer.\\n"""		4904165	0					
ANR	4904638	ElseStatement	else		4904165	0					
ANR	4904639	CompoundStatement		74:8:1718:1718	4904165	0					
ANR	4904640	ExpressionStatement	"io -> cb_printf ( ""IOCTL device not initialized.\\n"" )"	341:2:12834:12883	4904165	0	True				
ANR	4904641	CallExpression	"io -> cb_printf ( ""IOCTL device not initialized.\\n"" )"		4904165	0					
ANR	4904642	Callee	io -> cb_printf		4904165	0					
ANR	4904643	PtrMemberAccess	io -> cb_printf		4904165	0					
ANR	4904644	Identifier	io		4904165	0					
ANR	4904645	Identifier	cb_printf		4904165	1					
ANR	4904646	ArgumentList	"""IOCTL device not initialized.\\n"""		4904165	1					
ANR	4904647	Argument	"""IOCTL device not initialized.\\n"""		4904165	0					
ANR	4904648	PrimaryExpression	"""IOCTL device not initialized.\\n"""		4904165	0					
ANR	4904649	ReturnStatement	return ret ;	343:1:12889:12899	4904165	6	True				
ANR	4904650	Identifier	ret		4904165	0					
ANR	4904651	ReturnType	int		4904165	1					
ANR	4904652	Identifier	ReadMemory		4904165	2					
ANR	4904653	ParameterList	"RIO * io , RIODesc * iodesc , int ioctl_n , size_t pid , size_t address , ut8 * buf , int len"		4904165	3					
ANR	4904654	Parameter	RIO * io	267:16:11025:11031	4904165	0	True				
ANR	4904655	ParameterType	RIO *		4904165	0					
ANR	4904656	Identifier	io		4904165	1					
ANR	4904657	Parameter	RIODesc * iodesc	267:25:11034:11048	4904165	1	True				
ANR	4904658	ParameterType	RIODesc *		4904165	0					
ANR	4904659	Identifier	iodesc		4904165	1					
ANR	4904660	Parameter	int ioctl_n	267:42:11051:11061	4904165	2	True				
ANR	4904661	ParameterType	int		4904165	0					
ANR	4904662	Identifier	ioctl_n		4904165	1					
ANR	4904663	Parameter	size_t pid	267:55:11064:11073	4904165	3	True				
ANR	4904664	ParameterType	size_t		4904165	0					
ANR	4904665	Identifier	pid		4904165	1					
ANR	4904666	Parameter	size_t address	267:67:11076:11089	4904165	4	True				
ANR	4904667	ParameterType	size_t		4904165	0					
ANR	4904668	Identifier	address		4904165	1					
ANR	4904669	Parameter	ut8 * buf	267:83:11092:11099	4904165	5	True				
ANR	4904670	ParameterType	ut8 *		4904165	0					
ANR	4904671	Identifier	buf		4904165	1					
ANR	4904672	Parameter	int len	267:93:11102:11108	4904165	6	True				
ANR	4904673	ParameterType	int		4904165	0					
ANR	4904674	Identifier	len		4904165	1					
ANR	4904675	CFGEntryNode	ENTRY		4904165		True				
ANR	4904676	CFGExitNode	EXIT		4904165		True				
ANR	4904677	Symbol	pageaddr		4904165						
ANR	4904678	Symbol	flag		4904165						
ANR	4904679	Symbol	data		4904165						
ANR	4904680	Symbol	newlen		4904165						
ANR	4904681	Symbol	pid		4904165						
ANR	4904682	Symbol	calloc		4904165						
ANR	4904683	Symbol	data . buff		4904165						
ANR	4904684	Symbol	ioctl		4904165						
ANR	4904685	Symbol	iodesc		4904165						
ANR	4904686	Symbol	len		4904165						
ANR	4904687	Symbol	pagesize		4904165						
ANR	4904688	Symbol	* iodesc		4904165						
ANR	4904689	Symbol	ret		4904165						
ANR	4904690	Symbol	address		4904165						
ANR	4904691	Symbol	offset		4904165						
ANR	4904692	Symbol	ioctl_n		4904165						
ANR	4904693	Symbol	io		4904165						
ANR	4904694	Symbol	iodesc -> data		4904165						
ANR	4904695	Symbol	garbage		4904165						
ANR	4904696	Symbol	data . addr		4904165						
ANR	4904697	Symbol	& data		4904165						
ANR	4904698	Symbol	getpagesize		4904165						
ANR	4904699	Symbol	buf		4904165						
ANR	4904700	Symbol	data . pid		4904165						
ANR	4904701	Symbol	data . len		4904165						
ANR	4904702	Function	WriteMemory	346:0:12904:13647							
ANR	4904703	FunctionDef	"WriteMemory (RIO * io , RIODesc * iodesc , int ioctl_n , size_t pid , ut64 address , const ut8 * buf , int len)"		4904702	0					
ANR	4904704	CompoundStatement		346:107:13011:13647	4904702	0					
ANR	4904705	IdentifierDeclStatement	int ret = - 1 ;	347:1:13014:13026	4904702	0	True				
ANR	4904706	IdentifierDecl	ret = - 1		4904702	0					
ANR	4904707	IdentifierDeclType	int		4904702	0					
ANR	4904708	Identifier	ret		4904702	1					
ANR	4904709	AssignmentExpression	ret = - 1		4904702	2		=			
ANR	4904710	Identifier	ret		4904702	0					
ANR	4904711	UnaryOperationExpression	- 1		4904702	1					
ANR	4904712	UnaryOperator	-		4904702	0					
ANR	4904713	PrimaryExpression	1		4904702	1					
ANR	4904714	IfStatement	if ( iodesc && iodesc -> data > 0 && buf )		4904702	1					
ANR	4904715	Condition	iodesc && iodesc -> data > 0 && buf	349:5:13034:13066	4904702	0	True				
ANR	4904716	AndExpression	iodesc && iodesc -> data > 0 && buf		4904702	0		&&			
ANR	4904717	Identifier	iodesc		4904702	0					
ANR	4904718	AndExpression	iodesc -> data > 0 && buf		4904702	1		&&			
ANR	4904719	RelationalExpression	iodesc -> data > 0		4904702	0		>			
ANR	4904720	PtrMemberAccess	iodesc -> data		4904702	0					
ANR	4904721	Identifier	iodesc		4904702	0					
ANR	4904722	Identifier	data		4904702	1					
ANR	4904723	PrimaryExpression	0		4904702	1					
ANR	4904724	Identifier	buf		4904702	1					
ANR	4904725	CompoundStatement		5:2:61:81	4904702	1					
ANR	4904726	IdentifierDeclStatement	struct r2k_data data ;	350:2:13073:13093	4904702	0	True				
ANR	4904727	IdentifierDecl	data		4904702	0					
ANR	4904728	IdentifierDeclType	struct r2k_data		4904702	0					
ANR	4904729	Identifier	data		4904702	1					
ANR	4904730	ExpressionStatement	data . pid = pid	352:2:13098:13112	4904702	1	True				
ANR	4904731	AssignmentExpression	data . pid = pid		4904702	0		=			
ANR	4904732	MemberAccess	data . pid		4904702	0					
ANR	4904733	Identifier	data		4904702	0					
ANR	4904734	Identifier	pid		4904702	1					
ANR	4904735	Identifier	pid		4904702	1					
ANR	4904736	ExpressionStatement	data . addr = address	353:2:13116:13135	4904702	2	True				
ANR	4904737	AssignmentExpression	data . addr = address		4904702	0		=			
ANR	4904738	MemberAccess	data . addr		4904702	0					
ANR	4904739	Identifier	data		4904702	0					
ANR	4904740	Identifier	addr		4904702	1					
ANR	4904741	Identifier	address		4904702	1					
ANR	4904742	ExpressionStatement	data . len = len	354:2:13139:13153	4904702	3	True				
ANR	4904743	AssignmentExpression	data . len = len		4904702	0		=			
ANR	4904744	MemberAccess	data . len		4904702	0					
ANR	4904745	Identifier	data		4904702	0					
ANR	4904746	Identifier	len		4904702	1					
ANR	4904747	Identifier	len		4904702	1					
ANR	4904748	ExpressionStatement	"data . buff = ( ut8 * ) calloc ( len + 1 , 1 )"	355:2:13157:13196	4904702	4	True				
ANR	4904749	AssignmentExpression	"data . buff = ( ut8 * ) calloc ( len + 1 , 1 )"		4904702	0		=			
ANR	4904750	MemberAccess	data . buff		4904702	0					
ANR	4904751	Identifier	data		4904702	0					
ANR	4904752	Identifier	buff		4904702	1					
ANR	4904753	CastExpression	"( ut8 * ) calloc ( len + 1 , 1 )"		4904702	1					
ANR	4904754	CastTarget	ut8 *		4904702	0					
ANR	4904755	CallExpression	"calloc ( len + 1 , 1 )"		4904702	1					
ANR	4904756	Callee	calloc		4904702	0					
ANR	4904757	Identifier	calloc		4904702	0					
ANR	4904758	ArgumentList	len + 1		4904702	1					
ANR	4904759	Argument	len + 1		4904702	0					
ANR	4904760	AdditiveExpression	len + 1		4904702	0		+			
ANR	4904761	Identifier	len		4904702	0					
ANR	4904762	PrimaryExpression	1		4904702	1					
ANR	4904763	Argument	1		4904702	1					
ANR	4904764	PrimaryExpression	1		4904702	0					
ANR	4904765	ExpressionStatement	data . wp = r2k_struct . wp	356:2:13200:13223	4904702	5	True				
ANR	4904766	AssignmentExpression	data . wp = r2k_struct . wp		4904702	0		=			
ANR	4904767	MemberAccess	data . wp		4904702	0					
ANR	4904768	Identifier	data		4904702	0					
ANR	4904769	Identifier	wp		4904702	1					
ANR	4904770	MemberAccess	r2k_struct . wp		4904702	1					
ANR	4904771	Identifier	r2k_struct		4904702	0					
ANR	4904772	Identifier	wp		4904702	1					
ANR	4904773	IfStatement	if ( ! data . buff )		4904702	6					
ANR	4904774	Condition	! data . buff	358:6:13232:13241	4904702	0	True				
ANR	4904775	UnaryOperationExpression	! data . buff		4904702	0					
ANR	4904776	UnaryOperator	!		4904702	0					
ANR	4904777	MemberAccess	data . buff		4904702	1					
ANR	4904778	Identifier	data		4904702	0					
ANR	4904779	Identifier	buff		4904702	1					
ANR	4904780	CompoundStatement		13:18:232:232	4904702	1					
ANR	4904781	ReturnStatement	return - 1 ;	359:3:13249:13258	4904702	0	True				
ANR	4904782	UnaryOperationExpression	- 1		4904702	0					
ANR	4904783	UnaryOperator	-		4904702	0					
ANR	4904784	PrimaryExpression	1		4904702	1					
ANR	4904785	ExpressionStatement	"memcpy ( data . buff , buf , len )"	362:2:13267:13295	4904702	7	True				
ANR	4904786	CallExpression	"memcpy ( data . buff , buf , len )"		4904702	0					
ANR	4904787	Callee	memcpy		4904702	0					
ANR	4904788	Identifier	memcpy		4904702	0					
ANR	4904789	ArgumentList	data . buff		4904702	1					
ANR	4904790	Argument	data . buff		4904702	0					
ANR	4904791	MemberAccess	data . buff		4904702	0					
ANR	4904792	Identifier	data		4904702	0					
ANR	4904793	Identifier	buff		4904702	1					
ANR	4904794	Argument	buf		4904702	1					
ANR	4904795	Identifier	buf		4904702	0					
ANR	4904796	Argument	len		4904702	2					
ANR	4904797	Identifier	len		4904702	0					
ANR	4904798	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"	363:2:13299:13354	4904702	8	True				
ANR	4904799	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904702	0		=			
ANR	4904800	Identifier	ret		4904702	0					
ANR	4904801	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & data )"		4904702	1					
ANR	4904802	Callee	ioctl		4904702	0					
ANR	4904803	Identifier	ioctl		4904702	0					
ANR	4904804	ArgumentList	( int ) ( size_t ) iodesc -> data		4904702	1					
ANR	4904805	Argument	( int ) ( size_t ) iodesc -> data		4904702	0					
ANR	4904806	CastExpression	( int ) ( size_t ) iodesc -> data		4904702	0					
ANR	4904807	CastTarget	int		4904702	0					
ANR	4904808	CastExpression	( size_t ) iodesc -> data		4904702	1					
ANR	4904809	CastTarget	size_t		4904702	0					
ANR	4904810	PtrMemberAccess	iodesc -> data		4904702	1					
ANR	4904811	Identifier	iodesc		4904702	0					
ANR	4904812	Identifier	data		4904702	1					
ANR	4904813	Argument	ioctl_n		4904702	1					
ANR	4904814	Identifier	ioctl_n		4904702	0					
ANR	4904815	Argument	& data		4904702	2					
ANR	4904816	UnaryOperationExpression	& data		4904702	0					
ANR	4904817	UnaryOperator	&		4904702	0					
ANR	4904818	Identifier	data		4904702	1					
ANR	4904819	IfStatement	if ( ! ret )		4904702	9					
ANR	4904820	Condition	! ret	364:6:13362:13365	4904702	0	True				
ANR	4904821	UnaryOperationExpression	! ret		4904702	0					
ANR	4904822	UnaryOperator	!		4904702	0					
ANR	4904823	Identifier	ret		4904702	1					
ANR	4904824	CompoundStatement		19:12:356:356	4904702	1					
ANR	4904825	ExpressionStatement	ret = len	365:3:13373:13382	4904702	0	True				
ANR	4904826	AssignmentExpression	ret = len		4904702	0		=			
ANR	4904827	Identifier	ret		4904702	0					
ANR	4904828	Identifier	len		4904702	1					
ANR	4904829	ElseStatement	else		4904702	0					
ANR	4904830	CompoundStatement		21:9:381:381	4904702	0					
ANR	4904831	ExpressionStatement	"io -> cb_printf ( ""Write failed. ioctl err: %s\\n"" , strerror ( errno ) )"	367:3:13398:13463	4904702	0	True				
ANR	4904832	CallExpression	"io -> cb_printf ( ""Write failed. ioctl err: %s\\n"" , strerror ( errno ) )"		4904702	0					
ANR	4904833	Callee	io -> cb_printf		4904702	0					
ANR	4904834	PtrMemberAccess	io -> cb_printf		4904702	0					
ANR	4904835	Identifier	io		4904702	0					
ANR	4904836	Identifier	cb_printf		4904702	1					
ANR	4904837	ArgumentList	"""Write failed. ioctl err: %s\\n"""		4904702	1					
ANR	4904838	Argument	"""Write failed. ioctl err: %s\\n"""		4904702	0					
ANR	4904839	PrimaryExpression	"""Write failed. ioctl err: %s\\n"""		4904702	0					
ANR	4904840	Argument	strerror ( errno )		4904702	1					
ANR	4904841	CallExpression	strerror ( errno )		4904702	0					
ANR	4904842	Callee	strerror		4904702	0					
ANR	4904843	Identifier	strerror		4904702	0					
ANR	4904844	ArgumentList	errno		4904702	1					
ANR	4904845	Argument	errno		4904702	0					
ANR	4904846	Identifier	errno		4904702	0					
ANR	4904847	ExpressionStatement	ret = - 1	368:3:13468:13476	4904702	1	True				
ANR	4904848	AssignmentExpression	ret = - 1		4904702	0		=			
ANR	4904849	Identifier	ret		4904702	0					
ANR	4904850	UnaryOperationExpression	- 1		4904702	1					
ANR	4904851	UnaryOperator	-		4904702	0					
ANR	4904852	PrimaryExpression	1		4904702	1					
ANR	4904853	ExpressionStatement	free ( data . buff )	371:2:13485:13501	4904702	10	True				
ANR	4904854	CallExpression	free ( data . buff )		4904702	0					
ANR	4904855	Callee	free		4904702	0					
ANR	4904856	Identifier	free		4904702	0					
ANR	4904857	ArgumentList	data . buff		4904702	1					
ANR	4904858	Argument	data . buff		4904702	0					
ANR	4904859	MemberAccess	data . buff		4904702	0					
ANR	4904860	Identifier	data		4904702	0					
ANR	4904861	Identifier	buff		4904702	1					
ANR	4904862	ElseStatement	else		4904702	0					
ANR	4904863	IfStatement	if ( ! buf )		4904702	0					
ANR	4904864	Condition	! buf	372:12:13515:13518	4904702	0	True				
ANR	4904865	UnaryOperationExpression	! buf		4904702	0					
ANR	4904866	UnaryOperator	!		4904702	0					
ANR	4904867	Identifier	buf		4904702	1					
ANR	4904868	CompoundStatement		27:18:509:509	4904702	1					
ANR	4904869	ExpressionStatement	"io -> cb_printf ( ""Invalid input buffer.\\n"" )"	373:2:13525:13566	4904702	0	True				
ANR	4904870	CallExpression	"io -> cb_printf ( ""Invalid input buffer.\\n"" )"		4904702	0					
ANR	4904871	Callee	io -> cb_printf		4904702	0					
ANR	4904872	PtrMemberAccess	io -> cb_printf		4904702	0					
ANR	4904873	Identifier	io		4904702	0					
ANR	4904874	Identifier	cb_printf		4904702	1					
ANR	4904875	ArgumentList	"""Invalid input buffer.\\n"""		4904702	1					
ANR	4904876	Argument	"""Invalid input buffer.\\n"""		4904702	0					
ANR	4904877	PrimaryExpression	"""Invalid input buffer.\\n"""		4904702	0					
ANR	4904878	ElseStatement	else		4904702	0					
ANR	4904879	CompoundStatement		29:8:564:564	4904702	0					
ANR	4904880	ExpressionStatement	"io -> cb_printf ( ""IOCTL device not initialized.\\n"" )"	375:2:13580:13629	4904702	0	True				
ANR	4904881	CallExpression	"io -> cb_printf ( ""IOCTL device not initialized.\\n"" )"		4904702	0					
ANR	4904882	Callee	io -> cb_printf		4904702	0					
ANR	4904883	PtrMemberAccess	io -> cb_printf		4904702	0					
ANR	4904884	Identifier	io		4904702	0					
ANR	4904885	Identifier	cb_printf		4904702	1					
ANR	4904886	ArgumentList	"""IOCTL device not initialized.\\n"""		4904702	1					
ANR	4904887	Argument	"""IOCTL device not initialized.\\n"""		4904702	0					
ANR	4904888	PrimaryExpression	"""IOCTL device not initialized.\\n"""		4904702	0					
ANR	4904889	ReturnStatement	return ret ;	377:1:13635:13645	4904702	2	True				
ANR	4904890	Identifier	ret		4904702	0					
ANR	4904891	ReturnType	int		4904702	1					
ANR	4904892	Identifier	WriteMemory		4904702	2					
ANR	4904893	ParameterList	"RIO * io , RIODesc * iodesc , int ioctl_n , size_t pid , ut64 address , const ut8 * buf , int len"		4904702	3					
ANR	4904894	Parameter	RIO * io	346:17:12921:12927	4904702	0	True				
ANR	4904895	ParameterType	RIO *		4904702	0					
ANR	4904896	Identifier	io		4904702	1					
ANR	4904897	Parameter	RIODesc * iodesc	346:26:12930:12944	4904702	1	True				
ANR	4904898	ParameterType	RIODesc *		4904702	0					
ANR	4904899	Identifier	iodesc		4904702	1					
ANR	4904900	Parameter	int ioctl_n	346:43:12947:12957	4904702	2	True				
ANR	4904901	ParameterType	int		4904702	0					
ANR	4904902	Identifier	ioctl_n		4904702	1					
ANR	4904903	Parameter	size_t pid	346:56:12960:12969	4904702	3	True				
ANR	4904904	ParameterType	size_t		4904702	0					
ANR	4904905	Identifier	pid		4904702	1					
ANR	4904906	Parameter	ut64 address	346:68:12972:12983	4904702	4	True				
ANR	4904907	ParameterType	ut64		4904702	0					
ANR	4904908	Identifier	address		4904702	1					
ANR	4904909	Parameter	const ut8 * buf	346:82:12986:12999	4904702	5	True				
ANR	4904910	ParameterType	const ut8 *		4904702	0					
ANR	4904911	Identifier	buf		4904702	1					
ANR	4904912	Parameter	int len	346:98:13002:13008	4904702	6	True				
ANR	4904913	ParameterType	int		4904702	0					
ANR	4904914	Identifier	len		4904702	1					
ANR	4904915	CFGEntryNode	ENTRY		4904702		True				
ANR	4904916	CFGExitNode	EXIT		4904702		True				
ANR	4904917	Symbol	ret		4904702						
ANR	4904918	Symbol	errno		4904702						
ANR	4904919	Symbol	address		4904702						
ANR	4904920	Symbol	data		4904702						
ANR	4904921	Symbol	ioctl_n		4904702						
ANR	4904922	Symbol	io		4904702						
ANR	4904923	Symbol	iodesc -> data		4904702						
ANR	4904924	Symbol	pid		4904702						
ANR	4904925	Symbol	calloc		4904702						
ANR	4904926	Symbol	data . addr		4904702						
ANR	4904927	Symbol	data . buff		4904702						
ANR	4904928	Symbol	& data		4904702						
ANR	4904929	Symbol	ioctl		4904702						
ANR	4904930	Symbol	iodesc		4904702						
ANR	4904931	Symbol	strerror		4904702						
ANR	4904932	Symbol	buf		4904702						
ANR	4904933	Symbol	r2k_struct . wp		4904702						
ANR	4904934	Symbol	len		4904702						
ANR	4904935	Symbol	data . pid		4904702						
ANR	4904936	Symbol	data . len		4904702						
ANR	4904937	Symbol	r2k_struct		4904702						
ANR	4904938	Symbol	* iodesc		4904702						
ANR	4904939	Symbol	data . wp		4904702						
ANR	4904940	Function	run_old_command	380:0:13650:25004							
ANR	4904941	FunctionDef	"run_old_command (RIO * io , RIODesc * iodesc , const char * buf)"		4904940	0					
ANR	4904942	CompoundStatement		380:63:13713:25004	4904940	0					
ANR	4904943	IdentifierDeclStatement	"int ret , inphex , ioctl_n ;"	381:1:13716:13740	4904940	0	True				
ANR	4904944	IdentifierDecl	ret		4904940	0					
ANR	4904945	IdentifierDeclType	int		4904940	0					
ANR	4904946	Identifier	ret		4904940	1					
ANR	4904947	IdentifierDecl	inphex		4904940	1					
ANR	4904948	IdentifierDeclType	int		4904940	0					
ANR	4904949	Identifier	inphex		4904940	1					
ANR	4904950	IdentifierDecl	ioctl_n		4904940	2					
ANR	4904951	IdentifierDeclType	int		4904940	0					
ANR	4904952	Identifier	ioctl_n		4904940	1					
ANR	4904953	IdentifierDeclStatement	"size_t pid , addr , len ;"	382:1:13743:13764	4904940	1	True				
ANR	4904954	IdentifierDecl	pid		4904940	0					
ANR	4904955	IdentifierDeclType	size_t		4904940	0					
ANR	4904956	Identifier	pid		4904940	1					
ANR	4904957	IdentifierDecl	addr		4904940	1					
ANR	4904958	IdentifierDeclType	size_t		4904940	0					
ANR	4904959	Identifier	addr		4904940	1					
ANR	4904960	IdentifierDecl	len		4904940	2					
ANR	4904961	IdentifierDeclType	size_t		4904940	0					
ANR	4904962	Identifier	len		4904940	1					
ANR	4904963	IdentifierDeclStatement	ut8 * databuf = NULL ;	383:1:13767:13786	4904940	2	True				
ANR	4904964	IdentifierDecl	* databuf = NULL		4904940	0					
ANR	4904965	IdentifierDeclType	ut8 *		4904940	0					
ANR	4904966	Identifier	databuf		4904940	1					
ANR	4904967	AssignmentExpression	* databuf = NULL		4904940	2		=			
ANR	4904968	Identifier	NULL		4904940	0					
ANR	4904969	Identifier	NULL		4904940	1					
ANR	4904970	SwitchStatement	switch ( * buf )		4904940	3					
ANR	4904971	Condition	* buf	384:9:13797:13800	4904940	0	True				
ANR	4904972	UnaryOperationExpression	* buf		4904940	0					
ANR	4904973	UnaryOperator	*		4904940	0					
ANR	4904974	Identifier	buf		4904940	1					
ANR	4904975	CompoundStatement		5:15:89:89	4904940	1					
ANR	4904976	Label	case 'W' :	385:1:13806:13814	4904940	0	True				
ANR	4904977	CompoundStatement		15:3:269:295	4904940	1					
ANR	4904978	IfStatement	if ( buf [ 1 ] != ' ' )		4904940	0					
ANR	4904979	Condition	buf [ 1 ] != ' '	387:7:13827:13839	4904940	0	True				
ANR	4904980	EqualityExpression	buf [ 1 ] != ' '		4904940	0		!=			
ANR	4904981	ArrayIndexing	buf [ 1 ]		4904940	0					
ANR	4904982	Identifier	buf		4904940	0					
ANR	4904983	PrimaryExpression	1		4904940	1					
ANR	4904984	PrimaryExpression	' '		4904940	1					
ANR	4904985	CompoundStatement		8:22:128:128	4904940	1					
ANR	4904986	ExpressionStatement	"io -> cb_printf ( ""Write Protect: %d\\n"" , r2k_struct . wp )"	388:4:13848:13900	4904940	0	True				
ANR	4904987	CallExpression	"io -> cb_printf ( ""Write Protect: %d\\n"" , r2k_struct . wp )"		4904940	0					
ANR	4904988	Callee	io -> cb_printf		4904940	0					
ANR	4904989	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4904990	Identifier	io		4904940	0					
ANR	4904991	Identifier	cb_printf		4904940	1					
ANR	4904992	ArgumentList	"""Write Protect: %d\\n"""		4904940	1					
ANR	4904993	Argument	"""Write Protect: %d\\n"""		4904940	0					
ANR	4904994	PrimaryExpression	"""Write Protect: %d\\n"""		4904940	0					
ANR	4904995	Argument	r2k_struct . wp		4904940	1					
ANR	4904996	MemberAccess	r2k_struct . wp		4904940	0					
ANR	4904997	Identifier	r2k_struct		4904940	0					
ANR	4904998	Identifier	wp		4904940	1					
ANR	4904999	ExpressionStatement	"io -> cb_printf ( ""Usage:\\n"" )"	389:4:13906:13932	4904940	1	True				
ANR	4905000	CallExpression	"io -> cb_printf ( ""Usage:\\n"" )"		4904940	0					
ANR	4905001	Callee	io -> cb_printf		4904940	0					
ANR	4905002	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905003	Identifier	io		4904940	0					
ANR	4905004	Identifier	cb_printf		4904940	1					
ANR	4905005	ArgumentList	"""Usage:\\n"""		4904940	1					
ANR	4905006	Argument	"""Usage:\\n"""		4904940	0					
ANR	4905007	PrimaryExpression	"""Usage:\\n"""		4904940	0					
ANR	4905008	ExpressionStatement	"print_help ( io , ""W"" , 0 )"	390:4:13938:13961	4904940	2	True				
ANR	4905009	CallExpression	"print_help ( io , ""W"" , 0 )"		4904940	0					
ANR	4905010	Callee	print_help		4904940	0					
ANR	4905011	Identifier	print_help		4904940	0					
ANR	4905012	ArgumentList	io		4904940	1					
ANR	4905013	Argument	io		4904940	0					
ANR	4905014	Identifier	io		4904940	0					
ANR	4905015	Argument	"""W"""		4904940	1					
ANR	4905016	PrimaryExpression	"""W"""		4904940	0					
ANR	4905017	Argument	0		4904940	2					
ANR	4905018	PrimaryExpression	0		4904940	0					
ANR	4905019	BreakStatement	break ;	391:4:13967:13972	4904940	3	True				
ANR	4905020	IdentifierDeclStatement	"int wp = getvalue ( buf , 1 ) ;"	394:3:13983:14009	4904940	1	True				
ANR	4905021	IdentifierDecl	"wp = getvalue ( buf , 1 )"		4904940	0					
ANR	4905022	IdentifierDeclType	int		4904940	0					
ANR	4905023	Identifier	wp		4904940	1					
ANR	4905024	AssignmentExpression	"wp = getvalue ( buf , 1 )"		4904940	2		=			
ANR	4905025	Identifier	wp		4904940	0					
ANR	4905026	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905027	Callee	getvalue		4904940	0					
ANR	4905028	Identifier	getvalue		4904940	0					
ANR	4905029	ArgumentList	buf		4904940	1					
ANR	4905030	Argument	buf		4904940	0					
ANR	4905031	Identifier	buf		4904940	0					
ANR	4905032	Argument	1		4904940	1					
ANR	4905033	PrimaryExpression	1		4904940	0					
ANR	4905034	IfStatement	if ( wp < 0 || wp > 1 )		4904940	2					
ANR	4905035	Condition	wp < 0 || wp > 1	395:7:14018:14033	4904940	0	True				
ANR	4905036	OrExpression	wp < 0 || wp > 1		4904940	0		||			
ANR	4905037	RelationalExpression	wp < 0		4904940	0		<			
ANR	4905038	Identifier	wp		4904940	0					
ANR	4905039	PrimaryExpression	0		4904940	1					
ANR	4905040	RelationalExpression	wp > 1		4904940	1		>			
ANR	4905041	Identifier	wp		4904940	0					
ANR	4905042	PrimaryExpression	1		4904940	1					
ANR	4905043	CompoundStatement		16:25:322:322	4904940	1					
ANR	4905044	ExpressionStatement	"io -> cb_printf ( ""Invalid usage of W\\n"" )"	396:4:14042:14080	4904940	0	True				
ANR	4905045	CallExpression	"io -> cb_printf ( ""Invalid usage of W\\n"" )"		4904940	0					
ANR	4905046	Callee	io -> cb_printf		4904940	0					
ANR	4905047	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905048	Identifier	io		4904940	0					
ANR	4905049	Identifier	cb_printf		4904940	1					
ANR	4905050	ArgumentList	"""Invalid usage of W\\n"""		4904940	1					
ANR	4905051	Argument	"""Invalid usage of W\\n"""		4904940	0					
ANR	4905052	PrimaryExpression	"""Invalid usage of W\\n"""		4904940	0					
ANR	4905053	ExpressionStatement	"print_help ( io , ""W"" , 0 )"	397:4:14086:14109	4904940	1	True				
ANR	4905054	CallExpression	"print_help ( io , ""W"" , 0 )"		4904940	0					
ANR	4905055	Callee	print_help		4904940	0					
ANR	4905056	Identifier	print_help		4904940	0					
ANR	4905057	ArgumentList	io		4904940	1					
ANR	4905058	Argument	io		4904940	0					
ANR	4905059	Identifier	io		4904940	0					
ANR	4905060	Argument	"""W"""		4904940	1					
ANR	4905061	PrimaryExpression	"""W"""		4904940	0					
ANR	4905062	Argument	0		4904940	2					
ANR	4905063	PrimaryExpression	0		4904940	0					
ANR	4905064	BreakStatement	break ;	398:4:14115:14120	4904940	2	True				
ANR	4905065	ExpressionStatement	r2k_struct . wp = ( ut8 ) wp	400:3:14130:14153	4904940	3	True				
ANR	4905066	AssignmentExpression	r2k_struct . wp = ( ut8 ) wp		4904940	0		=			
ANR	4905067	MemberAccess	r2k_struct . wp		4904940	0					
ANR	4905068	Identifier	r2k_struct		4904940	0					
ANR	4905069	Identifier	wp		4904940	1					
ANR	4905070	CastExpression	( ut8 ) wp		4904940	1					
ANR	4905071	CastTarget	ut8		4904940	0					
ANR	4905072	Identifier	wp		4904940	1					
ANR	4905073	BreakStatement	break ;	402:2:14161:14166	4904940	2	True				
ANR	4905074	Label	case 'b' :	403:1:14169:14177	4904940	3	True				
ANR	4905075	CompoundStatement		35:3:731:758	4904940	4					
ANR	4905076	IdentifierDeclStatement	char * cmd = NULL ;	405:3:14186:14202	4904940	0	True				
ANR	4905077	IdentifierDecl	* cmd = NULL		4904940	0					
ANR	4905078	IdentifierDeclType	char *		4904940	0					
ANR	4905079	Identifier	cmd		4904940	1					
ANR	4905080	AssignmentExpression	* cmd = NULL		4904940	2		=			
ANR	4905081	Identifier	NULL		4904940	0					
ANR	4905082	Identifier	NULL		4904940	1					
ANR	4905083	IfStatement	if ( buf [ 1 ] != ' ' )		4904940	1					
ANR	4905084	Condition	buf [ 1 ] != ' '	406:7:14211:14223	4904940	0	True				
ANR	4905085	EqualityExpression	buf [ 1 ] != ' '		4904940	0		!=			
ANR	4905086	ArrayIndexing	buf [ 1 ]		4904940	0					
ANR	4905087	Identifier	buf		4904940	0					
ANR	4905088	PrimaryExpression	1		4904940	1					
ANR	4905089	PrimaryExpression	' '		4904940	1					
ANR	4905090	CompoundStatement		27:22:512:512	4904940	1					
ANR	4905091	ExpressionStatement	"io -> cb_printf ( ""beid: %d\\n"" , r2k_struct . beid )"	407:4:14232:14277	4904940	0	True				
ANR	4905092	CallExpression	"io -> cb_printf ( ""beid: %d\\n"" , r2k_struct . beid )"		4904940	0					
ANR	4905093	Callee	io -> cb_printf		4904940	0					
ANR	4905094	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905095	Identifier	io		4904940	0					
ANR	4905096	Identifier	cb_printf		4904940	1					
ANR	4905097	ArgumentList	"""beid: %d\\n"""		4904940	1					
ANR	4905098	Argument	"""beid: %d\\n"""		4904940	0					
ANR	4905099	PrimaryExpression	"""beid: %d\\n"""		4904940	0					
ANR	4905100	Argument	r2k_struct . beid		4904940	1					
ANR	4905101	MemberAccess	r2k_struct . beid		4904940	0					
ANR	4905102	Identifier	r2k_struct		4904940	0					
ANR	4905103	Identifier	beid		4904940	1					
ANR	4905104	ExpressionStatement	"io -> cb_printf ( ""pid:  %d\\n"" , r2k_struct . pid )"	408:4:14283:14327	4904940	1	True				
ANR	4905105	CallExpression	"io -> cb_printf ( ""pid:  %d\\n"" , r2k_struct . pid )"		4904940	0					
ANR	4905106	Callee	io -> cb_printf		4904940	0					
ANR	4905107	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905108	Identifier	io		4904940	0					
ANR	4905109	Identifier	cb_printf		4904940	1					
ANR	4905110	ArgumentList	"""pid:  %d\\n"""		4904940	1					
ANR	4905111	Argument	"""pid:  %d\\n"""		4904940	0					
ANR	4905112	PrimaryExpression	"""pid:  %d\\n"""		4904940	0					
ANR	4905113	Argument	r2k_struct . pid		4904940	1					
ANR	4905114	MemberAccess	r2k_struct . pid		4904940	0					
ANR	4905115	Identifier	r2k_struct		4904940	0					
ANR	4905116	Identifier	pid		4904940	1					
ANR	4905117	ExpressionStatement	"io -> cb_printf ( ""Usage:\\n"" )"	409:4:14333:14359	4904940	2	True				
ANR	4905118	CallExpression	"io -> cb_printf ( ""Usage:\\n"" )"		4904940	0					
ANR	4905119	Callee	io -> cb_printf		4904940	0					
ANR	4905120	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905121	Identifier	io		4904940	0					
ANR	4905122	Identifier	cb_printf		4904940	1					
ANR	4905123	ArgumentList	"""Usage:\\n"""		4904940	1					
ANR	4905124	Argument	"""Usage:\\n"""		4904940	0					
ANR	4905125	PrimaryExpression	"""Usage:\\n"""		4904940	0					
ANR	4905126	ExpressionStatement	"print_help ( io , ""b"" , 0 )"	410:4:14365:14388	4904940	3	True				
ANR	4905127	CallExpression	"print_help ( io , ""b"" , 0 )"		4904940	0					
ANR	4905128	Callee	print_help		4904940	0					
ANR	4905129	Identifier	print_help		4904940	0					
ANR	4905130	ArgumentList	io		4904940	1					
ANR	4905131	Argument	io		4904940	0					
ANR	4905132	Identifier	io		4904940	0					
ANR	4905133	Argument	"""b"""		4904940	1					
ANR	4905134	PrimaryExpression	"""b"""		4904940	0					
ANR	4905135	Argument	0		4904940	2					
ANR	4905136	PrimaryExpression	0		4904940	0					
ANR	4905137	GotoStatement	goto end ;	411:4:14394:14402	4904940	4	True				
ANR	4905138	Identifier	end		4904940	0					
ANR	4905139	IdentifierDeclStatement	"int beid = getvalue ( buf , 1 ) ;"	413:3:14412:14440	4904940	2	True				
ANR	4905140	IdentifierDecl	"beid = getvalue ( buf , 1 )"		4904940	0					
ANR	4905141	IdentifierDeclType	int		4904940	0					
ANR	4905142	Identifier	beid		4904940	1					
ANR	4905143	AssignmentExpression	"beid = getvalue ( buf , 1 )"		4904940	2		=			
ANR	4905144	Identifier	beid		4904940	0					
ANR	4905145	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905146	Callee	getvalue		4904940	0					
ANR	4905147	Identifier	getvalue		4904940	0					
ANR	4905148	ArgumentList	buf		4904940	1					
ANR	4905149	Argument	buf		4904940	0					
ANR	4905150	Identifier	buf		4904940	0					
ANR	4905151	Argument	1		4904940	1					
ANR	4905152	PrimaryExpression	1		4904940	0					
ANR	4905153	IdentifierDeclStatement	"int pid = getvalue ( buf , 2 ) ;"	414:3:14445:14472	4904940	3	True				
ANR	4905154	IdentifierDecl	"pid = getvalue ( buf , 2 )"		4904940	0					
ANR	4905155	IdentifierDeclType	int		4904940	0					
ANR	4905156	Identifier	pid		4904940	1					
ANR	4905157	AssignmentExpression	"pid = getvalue ( buf , 2 )"		4904940	2		=			
ANR	4905158	Identifier	pid		4904940	0					
ANR	4905159	CallExpression	"getvalue ( buf , 2 )"		4904940	1					
ANR	4905160	Callee	getvalue		4904940	0					
ANR	4905161	Identifier	getvalue		4904940	0					
ANR	4905162	ArgumentList	buf		4904940	1					
ANR	4905163	Argument	buf		4904940	0					
ANR	4905164	Identifier	buf		4904940	0					
ANR	4905165	Argument	2		4904940	1					
ANR	4905166	PrimaryExpression	2		4904940	0					
ANR	4905167	IfStatement	if ( beid < 0 || beid > 2 )		4904940	4					
ANR	4905168	Condition	beid < 0 || beid > 2	415:7:14481:14500	4904940	0	True				
ANR	4905169	OrExpression	beid < 0 || beid > 2		4904940	0		||			
ANR	4905170	RelationalExpression	beid < 0		4904940	0		<			
ANR	4905171	Identifier	beid		4904940	0					
ANR	4905172	PrimaryExpression	0		4904940	1					
ANR	4905173	RelationalExpression	beid > 2		4904940	1		>			
ANR	4905174	Identifier	beid		4904940	0					
ANR	4905175	PrimaryExpression	2		4904940	1					
ANR	4905176	CompoundStatement		36:29:789:789	4904940	1					
ANR	4905177	ExpressionStatement	"io -> cb_printf ( ""Invalid usage of b\\n"" )"	416:4:14509:14547	4904940	0	True				
ANR	4905178	CallExpression	"io -> cb_printf ( ""Invalid usage of b\\n"" )"		4904940	0					
ANR	4905179	Callee	io -> cb_printf		4904940	0					
ANR	4905180	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905181	Identifier	io		4904940	0					
ANR	4905182	Identifier	cb_printf		4904940	1					
ANR	4905183	ArgumentList	"""Invalid usage of b\\n"""		4904940	1					
ANR	4905184	Argument	"""Invalid usage of b\\n"""		4904940	0					
ANR	4905185	PrimaryExpression	"""Invalid usage of b\\n"""		4904940	0					
ANR	4905186	ExpressionStatement	"print_help ( io , ""b"" , 0 )"	417:4:14553:14576	4904940	1	True				
ANR	4905187	CallExpression	"print_help ( io , ""b"" , 0 )"		4904940	0					
ANR	4905188	Callee	print_help		4904940	0					
ANR	4905189	Identifier	print_help		4904940	0					
ANR	4905190	ArgumentList	io		4904940	1					
ANR	4905191	Argument	io		4904940	0					
ANR	4905192	Identifier	io		4904940	0					
ANR	4905193	Argument	"""b"""		4904940	1					
ANR	4905194	PrimaryExpression	"""b"""		4904940	0					
ANR	4905195	Argument	0		4904940	2					
ANR	4905196	PrimaryExpression	0		4904940	0					
ANR	4905197	BreakStatement	break ;	418:4:14582:14587	4904940	2	True				
ANR	4905198	IfStatement	if ( beid == 1 && pid < 0 )		4904940	5					
ANR	4905199	Condition	beid == 1 && pid < 0	420:7:14601:14620	4904940	0	True				
ANR	4905200	AndExpression	beid == 1 && pid < 0		4904940	0		&&			
ANR	4905201	EqualityExpression	beid == 1		4904940	0		==			
ANR	4905202	Identifier	beid		4904940	0					
ANR	4905203	PrimaryExpression	1		4904940	1					
ANR	4905204	RelationalExpression	pid < 0		4904940	1		<			
ANR	4905205	Identifier	pid		4904940	0					
ANR	4905206	PrimaryExpression	0		4904940	1					
ANR	4905207	CompoundStatement		41:29:909:909	4904940	1					
ANR	4905208	ExpressionStatement	"io -> cb_printf ( ""Invalid pid read.\\n"" )"	421:4:14629:14666	4904940	0	True				
ANR	4905209	CallExpression	"io -> cb_printf ( ""Invalid pid read.\\n"" )"		4904940	0					
ANR	4905210	Callee	io -> cb_printf		4904940	0					
ANR	4905211	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905212	Identifier	io		4904940	0					
ANR	4905213	Identifier	cb_printf		4904940	1					
ANR	4905214	ArgumentList	"""Invalid pid read.\\n"""		4904940	1					
ANR	4905215	Argument	"""Invalid pid read.\\n"""		4904940	0					
ANR	4905216	PrimaryExpression	"""Invalid pid read.\\n"""		4904940	0					
ANR	4905217	ExpressionStatement	"print_help ( io , ""b"" , 0 )"	422:4:14672:14695	4904940	1	True				
ANR	4905218	CallExpression	"print_help ( io , ""b"" , 0 )"		4904940	0					
ANR	4905219	Callee	print_help		4904940	0					
ANR	4905220	Identifier	print_help		4904940	0					
ANR	4905221	ArgumentList	io		4904940	1					
ANR	4905222	Argument	io		4904940	0					
ANR	4905223	Identifier	io		4904940	0					
ANR	4905224	Argument	"""b"""		4904940	1					
ANR	4905225	PrimaryExpression	"""b"""		4904940	0					
ANR	4905226	Argument	0		4904940	2					
ANR	4905227	PrimaryExpression	0		4904940	0					
ANR	4905228	BreakStatement	break ;	423:4:14701:14706	4904940	2	True				
ANR	4905229	ExpressionStatement	r2k_struct . beid = beid	425:3:14716:14738	4904940	6	True				
ANR	4905230	AssignmentExpression	r2k_struct . beid = beid		4904940	0		=			
ANR	4905231	MemberAccess	r2k_struct . beid		4904940	0					
ANR	4905232	Identifier	r2k_struct		4904940	0					
ANR	4905233	Identifier	beid		4904940	1					
ANR	4905234	Identifier	beid		4904940	1					
ANR	4905235	ExpressionStatement	r2k_struct . pid = ( beid == 1 ) ? pid : 0	426:3:14743:14781	4904940	7	True				
ANR	4905236	AssignmentExpression	r2k_struct . pid = ( beid == 1 ) ? pid : 0		4904940	0		=			
ANR	4905237	MemberAccess	r2k_struct . pid		4904940	0					
ANR	4905238	Identifier	r2k_struct		4904940	0					
ANR	4905239	Identifier	pid		4904940	1					
ANR	4905240	ConditionalExpression	( beid == 1 ) ? pid : 0		4904940	1					
ANR	4905241	Condition	beid == 1		4904940	0					
ANR	4905242	EqualityExpression	beid == 1		4904940	0		==			
ANR	4905243	Identifier	beid		4904940	0					
ANR	4905244	PrimaryExpression	1		4904940	1					
ANR	4905245	Identifier	pid		4904940	1					
ANR	4905246	PrimaryExpression	0		4904940	2					
ANR	4905247	ExpressionStatement	cmd = ( char * ) malloc ( 27 )	428:3:14787:14813	4904940	8	True				
ANR	4905248	AssignmentExpression	cmd = ( char * ) malloc ( 27 )		4904940	0		=			
ANR	4905249	Identifier	cmd		4904940	0					
ANR	4905250	CastExpression	( char * ) malloc ( 27 )		4904940	1					
ANR	4905251	CastTarget	char *		4904940	0					
ANR	4905252	CallExpression	malloc ( 27 )		4904940	1					
ANR	4905253	Callee	malloc		4904940	0					
ANR	4905254	Identifier	malloc		4904940	0					
ANR	4905255	ArgumentList	27		4904940	1					
ANR	4905256	Argument	27		4904940	0					
ANR	4905257	PrimaryExpression	27		4904940	0					
ANR	4905258	IfStatement	if ( ! cmd )		4904940	9					
ANR	4905259	Condition	! cmd	429:7:14822:14825	4904940	0	True				
ANR	4905260	UnaryOperationExpression	! cmd		4904940	0					
ANR	4905261	UnaryOperator	!		4904940	0					
ANR	4905262	Identifier	cmd		4904940	1					
ANR	4905263	CompoundStatement		50:13:1114:1114	4904940	1					
ANR	4905264	ExpressionStatement	"io -> cb_printf ( ""io_r2k_linux : Malloc failed. Seeking to 0x0\\n"" )"	430:4:14834:14898	4904940	0	True				
ANR	4905265	CallExpression	"io -> cb_printf ( ""io_r2k_linux : Malloc failed. Seeking to 0x0\\n"" )"		4904940	0					
ANR	4905266	Callee	io -> cb_printf		4904940	0					
ANR	4905267	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905268	Identifier	io		4904940	0					
ANR	4905269	Identifier	cb_printf		4904940	1					
ANR	4905270	ArgumentList	"""io_r2k_linux : Malloc failed. Seeking to 0x0\\n"""		4904940	1					
ANR	4905271	Argument	"""io_r2k_linux : Malloc failed. Seeking to 0x0\\n"""		4904940	0					
ANR	4905272	PrimaryExpression	"""io_r2k_linux : Malloc failed. Seeking to 0x0\\n"""		4904940	0					
ANR	4905273	ExpressionStatement	"io -> cb_core_cmd ( io -> user , ""s 0"" )"	431:4:14904:14937	4904940	1	True				
ANR	4905274	CallExpression	"io -> cb_core_cmd ( io -> user , ""s 0"" )"		4904940	0					
ANR	4905275	Callee	io -> cb_core_cmd		4904940	0					
ANR	4905276	PtrMemberAccess	io -> cb_core_cmd		4904940	0					
ANR	4905277	Identifier	io		4904940	0					
ANR	4905278	Identifier	cb_core_cmd		4904940	1					
ANR	4905279	ArgumentList	io -> user		4904940	1					
ANR	4905280	Argument	io -> user		4904940	0					
ANR	4905281	PtrMemberAccess	io -> user		4904940	0					
ANR	4905282	Identifier	io		4904940	0					
ANR	4905283	Identifier	user		4904940	1					
ANR	4905284	Argument	"""s 0"""		4904940	1					
ANR	4905285	PrimaryExpression	"""s 0"""		4904940	0					
ANR	4905286	ElseStatement	else		4904940	0					
ANR	4905287	CompoundStatement		53:10:1235:1235	4904940	0					
ANR	4905288	Statement	sprintf	433:4:14955:14961	4904940	0	True				
ANR	4905289	Statement	(	433:12:14963:14963	4904940	1	True				
ANR	4905290	Statement	cmd	433:13:14964:14966	4904940	2	True				
ANR	4905291	Statement	","	433:16:14967:14967	4904940	3	True				
ANR	4905292	Statement	"""s 0x%"""	433:18:14969:14975	4904940	4	True				
ANR	4905293	Statement	PFMT64x	433:25:14976:14982	4904940	5	True				
ANR	4905294	Statement	","	433:32:14983:14983	4904940	6	True				
ANR	4905295	Statement	io	433:34:14985:14986	4904940	7	True				
ANR	4905296	Statement	->	433:36:14987:14988	4904940	8	True				
ANR	4905297	Statement	off	433:38:14989:14991	4904940	9	True				
ANR	4905298	Statement	)	433:41:14992:14992	4904940	10	True				
ANR	4905299	ExpressionStatement		433:42:14993:14993	4904940	11	True				
ANR	4905300	ExpressionStatement	"io -> cb_core_cmd ( io -> user , cmd )"	434:4:14999:15030	4904940	12	True				
ANR	4905301	CallExpression	"io -> cb_core_cmd ( io -> user , cmd )"		4904940	0					
ANR	4905302	Callee	io -> cb_core_cmd		4904940	0					
ANR	4905303	PtrMemberAccess	io -> cb_core_cmd		4904940	0					
ANR	4905304	Identifier	io		4904940	0					
ANR	4905305	Identifier	cb_core_cmd		4904940	1					
ANR	4905306	ArgumentList	io -> user		4904940	1					
ANR	4905307	Argument	io -> user		4904940	0					
ANR	4905308	PtrMemberAccess	io -> user		4904940	0					
ANR	4905309	Identifier	io		4904940	0					
ANR	4905310	Identifier	user		4904940	1					
ANR	4905311	Argument	cmd		4904940	1					
ANR	4905312	Identifier	cmd		4904940	0					
ANR	4905313	ExpressionStatement	free ( cmd )	435:4:15036:15046	4904940	13	True				
ANR	4905314	CallExpression	free ( cmd )		4904940	0					
ANR	4905315	Callee	free		4904940	0					
ANR	4905316	Identifier	free		4904940	0					
ANR	4905317	ArgumentList	cmd		4904940	1					
ANR	4905318	Argument	cmd		4904940	0					
ANR	4905319	Identifier	cmd		4904940	0					
ANR	4905320	BreakStatement	break ;	438:2:15059:15064	4904940	5	True				
ANR	4905321	Label	case 'r' :	439:1:15067:15075	4904940	6	True				
ANR	4905322	CompoundStatement		62:3:1370:1400	4904940	7					
ANR	4905323	IdentifierDeclStatement	RPrint * print = r_print_new ( ) ;	441:3:15084:15114	4904940	0	True				
ANR	4905324	IdentifierDecl	* print = r_print_new ( )		4904940	0					
ANR	4905325	IdentifierDeclType	RPrint *		4904940	0					
ANR	4905326	Identifier	print		4904940	1					
ANR	4905327	AssignmentExpression	* print = r_print_new ( )		4904940	2		=			
ANR	4905328	Identifier	print		4904940	0					
ANR	4905329	CallExpression	r_print_new ( )		4904940	1					
ANR	4905330	Callee	r_print_new		4904940	0					
ANR	4905331	Identifier	r_print_new		4904940	0					
ANR	4905332	ArgumentList			4904940	1					
ANR	4905333	SwitchStatement	switch ( buf [ 1 ] )		4904940	1					
ANR	4905334	Condition	buf [ 1 ]	442:11:15127:15132	4904940	0	True				
ANR	4905335	ArrayIndexing	buf [ 1 ]		4904940	0					
ANR	4905336	Identifier	buf		4904940	0					
ANR	4905337	PrimaryExpression	1		4904940	1					
ANR	4905338	CompoundStatement		63:19:1421:1421	4904940	1					
ANR	4905339	Label	case 'l' :	443:3:15140:15148	4904940	0	True				
ANR	4905340	IfStatement	if ( buf [ 2 ] != ' ' )		4904940	1					
ANR	4905341	Condition	buf [ 2 ] != ' '	446:8:15205:15217	4904940	0	True				
ANR	4905342	EqualityExpression	buf [ 2 ] != ' '		4904940	0		!=			
ANR	4905343	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905344	Identifier	buf		4904940	0					
ANR	4905345	PrimaryExpression	2		4904940	1					
ANR	4905346	PrimaryExpression	' '		4904940	1					
ANR	4905347	CompoundStatement		67:23:1506:1506	4904940	1					
ANR	4905348	ExpressionStatement	"print_help ( io , ""rl"" , 0 )"	447:5:15227:15251	4904940	0	True				
ANR	4905349	CallExpression	"print_help ( io , ""rl"" , 0 )"		4904940	0					
ANR	4905350	Callee	print_help		4904940	0					
ANR	4905351	Identifier	print_help		4904940	0					
ANR	4905352	ArgumentList	io		4904940	1					
ANR	4905353	Argument	io		4904940	0					
ANR	4905354	Identifier	io		4904940	0					
ANR	4905355	Argument	"""rl"""		4904940	1					
ANR	4905356	PrimaryExpression	"""rl"""		4904940	0					
ANR	4905357	Argument	0		4904940	2					
ANR	4905358	PrimaryExpression	0		4904940	0					
ANR	4905359	GotoStatement	goto end ;	448:5:15258:15266	4904940	1	True				
ANR	4905360	Identifier	end		4904940	0					
ANR	4905361	ExpressionStatement	pid = 0	450:4:15278:15285	4904940	2	True				
ANR	4905362	AssignmentExpression	pid = 0		4904940	0		=			
ANR	4905363	Identifier	pid		4904940	0					
ANR	4905364	PrimaryExpression	0		4904940	1					
ANR	4905365	ExpressionStatement	"addr = getvalue ( buf , 1 )"	451:4:15291:15315	4904940	3	True				
ANR	4905366	AssignmentExpression	"addr = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4905367	Identifier	addr		4904940	0					
ANR	4905368	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905369	Callee	getvalue		4904940	0					
ANR	4905370	Identifier	getvalue		4904940	0					
ANR	4905371	ArgumentList	buf		4904940	1					
ANR	4905372	Argument	buf		4904940	0					
ANR	4905373	Identifier	buf		4904940	0					
ANR	4905374	Argument	1		4904940	1					
ANR	4905375	PrimaryExpression	1		4904940	0					
ANR	4905376	ExpressionStatement	"len = getvalue ( buf , 2 )"	452:4:15321:15344	4904940	4	True				
ANR	4905377	AssignmentExpression	"len = getvalue ( buf , 2 )"		4904940	0		=			
ANR	4905378	Identifier	len		4904940	0					
ANR	4905379	CallExpression	"getvalue ( buf , 2 )"		4904940	1					
ANR	4905380	Callee	getvalue		4904940	0					
ANR	4905381	Identifier	getvalue		4904940	0					
ANR	4905382	ArgumentList	buf		4904940	1					
ANR	4905383	Argument	buf		4904940	0					
ANR	4905384	Identifier	buf		4904940	0					
ANR	4905385	Argument	2		4904940	1					
ANR	4905386	PrimaryExpression	2		4904940	0					
ANR	4905387	IfStatement	if ( addr == - 1 || len == - 1 )		4904940	5					
ANR	4905388	Condition	addr == - 1 || len == - 1	453:8:15354:15376	4904940	0	True				
ANR	4905389	OrExpression	addr == - 1 || len == - 1		4904940	0		||			
ANR	4905390	EqualityExpression	addr == - 1		4904940	0		==			
ANR	4905391	Identifier	addr		4904940	0					
ANR	4905392	UnaryOperationExpression	- 1		4904940	1					
ANR	4905393	UnaryOperator	-		4904940	0					
ANR	4905394	PrimaryExpression	1		4904940	1					
ANR	4905395	EqualityExpression	len == - 1		4904940	1		==			
ANR	4905396	Identifier	len		4904940	0					
ANR	4905397	UnaryOperationExpression	- 1		4904940	1					
ANR	4905398	UnaryOperator	-		4904940	0					
ANR	4905399	PrimaryExpression	1		4904940	1					
ANR	4905400	CompoundStatement		74:33:1665:1665	4904940	1					
ANR	4905401	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	454:5:15386:15434	4904940	0	True				
ANR	4905402	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4905403	Callee	io -> cb_printf		4904940	0					
ANR	4905404	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905405	Identifier	io		4904940	0					
ANR	4905406	Identifier	cb_printf		4904940	1					
ANR	4905407	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4905408	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905409	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905410	ExpressionStatement	"print_help ( io , ""rl"" , 0 )"	455:5:15441:15465	4904940	1	True				
ANR	4905411	CallExpression	"print_help ( io , ""rl"" , 0 )"		4904940	0					
ANR	4905412	Callee	print_help		4904940	0					
ANR	4905413	Identifier	print_help		4904940	0					
ANR	4905414	ArgumentList	io		4904940	1					
ANR	4905415	Argument	io		4904940	0					
ANR	4905416	Identifier	io		4904940	0					
ANR	4905417	Argument	"""rl"""		4904940	1					
ANR	4905418	PrimaryExpression	"""rl"""		4904940	0					
ANR	4905419	Argument	0		4904940	2					
ANR	4905420	PrimaryExpression	0		4904940	0					
ANR	4905421	GotoStatement	goto end ;	456:5:15472:15480	4904940	2	True				
ANR	4905422	Identifier	end		4904940	0					
ANR	4905423	ExpressionStatement	ioctl_n = IOCTL_READ_KERNEL_MEMORY	458:4:15492:15526	4904940	6	True				
ANR	4905424	AssignmentExpression	ioctl_n = IOCTL_READ_KERNEL_MEMORY		4904940	0		=			
ANR	4905425	Identifier	ioctl_n		4904940	0					
ANR	4905426	Identifier	IOCTL_READ_KERNEL_MEMORY		4904940	1					
ANR	4905427	BreakStatement	break ;	459:4:15532:15537	4904940	7	True				
ANR	4905428	Label	case 'p' :	460:3:15542:15550	4904940	8	True				
ANR	4905429	IfStatement	if ( buf [ 2 ] != ' ' )		4904940	9					
ANR	4905430	Condition	buf [ 2 ] != ' '	463:8:15615:15627	4904940	0	True				
ANR	4905431	EqualityExpression	buf [ 2 ] != ' '		4904940	0		!=			
ANR	4905432	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905433	Identifier	buf		4904940	0					
ANR	4905434	PrimaryExpression	2		4904940	1					
ANR	4905435	PrimaryExpression	' '		4904940	1					
ANR	4905436	CompoundStatement		84:23:1916:1916	4904940	1					
ANR	4905437	ExpressionStatement	"print_help ( io , ""rp"" , 0 )"	464:5:15637:15661	4904940	0	True				
ANR	4905438	CallExpression	"print_help ( io , ""rp"" , 0 )"		4904940	0					
ANR	4905439	Callee	print_help		4904940	0					
ANR	4905440	Identifier	print_help		4904940	0					
ANR	4905441	ArgumentList	io		4904940	1					
ANR	4905442	Argument	io		4904940	0					
ANR	4905443	Identifier	io		4904940	0					
ANR	4905444	Argument	"""rp"""		4904940	1					
ANR	4905445	PrimaryExpression	"""rp"""		4904940	0					
ANR	4905446	Argument	0		4904940	2					
ANR	4905447	PrimaryExpression	0		4904940	0					
ANR	4905448	GotoStatement	goto end ;	465:5:15668:15676	4904940	1	True				
ANR	4905449	Identifier	end		4904940	0					
ANR	4905450	ExpressionStatement	"pid = getvalue ( buf , 1 )"	467:4:15688:15711	4904940	10	True				
ANR	4905451	AssignmentExpression	"pid = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4905452	Identifier	pid		4904940	0					
ANR	4905453	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905454	Callee	getvalue		4904940	0					
ANR	4905455	Identifier	getvalue		4904940	0					
ANR	4905456	ArgumentList	buf		4904940	1					
ANR	4905457	Argument	buf		4904940	0					
ANR	4905458	Identifier	buf		4904940	0					
ANR	4905459	Argument	1		4904940	1					
ANR	4905460	PrimaryExpression	1		4904940	0					
ANR	4905461	ExpressionStatement	"addr = getvalue ( buf , 2 )"	468:4:15717:15741	4904940	11	True				
ANR	4905462	AssignmentExpression	"addr = getvalue ( buf , 2 )"		4904940	0		=			
ANR	4905463	Identifier	addr		4904940	0					
ANR	4905464	CallExpression	"getvalue ( buf , 2 )"		4904940	1					
ANR	4905465	Callee	getvalue		4904940	0					
ANR	4905466	Identifier	getvalue		4904940	0					
ANR	4905467	ArgumentList	buf		4904940	1					
ANR	4905468	Argument	buf		4904940	0					
ANR	4905469	Identifier	buf		4904940	0					
ANR	4905470	Argument	2		4904940	1					
ANR	4905471	PrimaryExpression	2		4904940	0					
ANR	4905472	ExpressionStatement	"len = getvalue ( buf , 3 )"	469:4:15747:15770	4904940	12	True				
ANR	4905473	AssignmentExpression	"len = getvalue ( buf , 3 )"		4904940	0		=			
ANR	4905474	Identifier	len		4904940	0					
ANR	4905475	CallExpression	"getvalue ( buf , 3 )"		4904940	1					
ANR	4905476	Callee	getvalue		4904940	0					
ANR	4905477	Identifier	getvalue		4904940	0					
ANR	4905478	ArgumentList	buf		4904940	1					
ANR	4905479	Argument	buf		4904940	0					
ANR	4905480	Identifier	buf		4904940	0					
ANR	4905481	Argument	3		4904940	1					
ANR	4905482	PrimaryExpression	3		4904940	0					
ANR	4905483	IfStatement	if ( pid == - 1 || addr == - 1 || len == - 1 )		4904940	13					
ANR	4905484	Condition	pid == - 1 || addr == - 1 || len == - 1	470:8:15780:15815	4904940	0	True				
ANR	4905485	OrExpression	pid == - 1 || addr == - 1 || len == - 1		4904940	0		||			
ANR	4905486	EqualityExpression	pid == - 1		4904940	0		==			
ANR	4905487	Identifier	pid		4904940	0					
ANR	4905488	UnaryOperationExpression	- 1		4904940	1					
ANR	4905489	UnaryOperator	-		4904940	0					
ANR	4905490	PrimaryExpression	1		4904940	1					
ANR	4905491	OrExpression	addr == - 1 || len == - 1		4904940	1		||			
ANR	4905492	EqualityExpression	addr == - 1		4904940	0		==			
ANR	4905493	Identifier	addr		4904940	0					
ANR	4905494	UnaryOperationExpression	- 1		4904940	1					
ANR	4905495	UnaryOperator	-		4904940	0					
ANR	4905496	PrimaryExpression	1		4904940	1					
ANR	4905497	EqualityExpression	len == - 1		4904940	1		==			
ANR	4905498	Identifier	len		4904940	0					
ANR	4905499	UnaryOperationExpression	- 1		4904940	1					
ANR	4905500	UnaryOperator	-		4904940	0					
ANR	4905501	PrimaryExpression	1		4904940	1					
ANR	4905502	CompoundStatement		91:46:2104:2104	4904940	1					
ANR	4905503	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	471:5:15825:15873	4904940	0	True				
ANR	4905504	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4905505	Callee	io -> cb_printf		4904940	0					
ANR	4905506	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905507	Identifier	io		4904940	0					
ANR	4905508	Identifier	cb_printf		4904940	1					
ANR	4905509	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4905510	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905511	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905512	ExpressionStatement	"print_help ( io , ""rp"" , 0 )"	472:5:15880:15904	4904940	1	True				
ANR	4905513	CallExpression	"print_help ( io , ""rp"" , 0 )"		4904940	0					
ANR	4905514	Callee	print_help		4904940	0					
ANR	4905515	Identifier	print_help		4904940	0					
ANR	4905516	ArgumentList	io		4904940	1					
ANR	4905517	Argument	io		4904940	0					
ANR	4905518	Identifier	io		4904940	0					
ANR	4905519	Argument	"""rp"""		4904940	1					
ANR	4905520	PrimaryExpression	"""rp"""		4904940	0					
ANR	4905521	Argument	0		4904940	2					
ANR	4905522	PrimaryExpression	0		4904940	0					
ANR	4905523	GotoStatement	goto end ;	473:5:15911:15919	4904940	2	True				
ANR	4905524	Identifier	end		4904940	0					
ANR	4905525	ExpressionStatement		473:14:15920:15920	4904940	3	True				
ANR	4905526	ExpressionStatement	ioctl_n = IOCTL_READ_PROCESS_ADDR	475:4:15932:15965	4904940	14	True				
ANR	4905527	AssignmentExpression	ioctl_n = IOCTL_READ_PROCESS_ADDR		4904940	0		=			
ANR	4905528	Identifier	ioctl_n		4904940	0					
ANR	4905529	Identifier	IOCTL_READ_PROCESS_ADDR		4904940	1					
ANR	4905530	BreakStatement	break ;	476:4:15971:15976	4904940	15	True				
ANR	4905531	Label	case 'P' :	477:3:15981:15989	4904940	16	True				
ANR	4905532	IfStatement	if ( buf [ 2 ] != ' ' )		4904940	17					
ANR	4905533	Condition	buf [ 2 ] != ' '	480:8:16051:16063	4904940	0	True				
ANR	4905534	EqualityExpression	buf [ 2 ] != ' '		4904940	0		!=			
ANR	4905535	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905536	Identifier	buf		4904940	0					
ANR	4905537	PrimaryExpression	2		4904940	1					
ANR	4905538	PrimaryExpression	' '		4904940	1					
ANR	4905539	CompoundStatement		101:23:2352:2352	4904940	1					
ANR	4905540	ExpressionStatement	"print_help ( io , ""rP"" , 0 )"	481:5:16073:16097	4904940	0	True				
ANR	4905541	CallExpression	"print_help ( io , ""rP"" , 0 )"		4904940	0					
ANR	4905542	Callee	print_help		4904940	0					
ANR	4905543	Identifier	print_help		4904940	0					
ANR	4905544	ArgumentList	io		4904940	1					
ANR	4905545	Argument	io		4904940	0					
ANR	4905546	Identifier	io		4904940	0					
ANR	4905547	Argument	"""rP"""		4904940	1					
ANR	4905548	PrimaryExpression	"""rP"""		4904940	0					
ANR	4905549	Argument	0		4904940	2					
ANR	4905550	PrimaryExpression	0		4904940	0					
ANR	4905551	GotoStatement	goto end ;	482:5:16104:16112	4904940	1	True				
ANR	4905552	Identifier	end		4904940	0					
ANR	4905553	ExpressionStatement	pid = 0	484:4:16124:16131	4904940	18	True				
ANR	4905554	AssignmentExpression	pid = 0		4904940	0		=			
ANR	4905555	Identifier	pid		4904940	0					
ANR	4905556	PrimaryExpression	0		4904940	1					
ANR	4905557	ExpressionStatement	"addr = getvalue ( buf , 1 )"	485:4:16137:16161	4904940	19	True				
ANR	4905558	AssignmentExpression	"addr = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4905559	Identifier	addr		4904940	0					
ANR	4905560	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905561	Callee	getvalue		4904940	0					
ANR	4905562	Identifier	getvalue		4904940	0					
ANR	4905563	ArgumentList	buf		4904940	1					
ANR	4905564	Argument	buf		4904940	0					
ANR	4905565	Identifier	buf		4904940	0					
ANR	4905566	Argument	1		4904940	1					
ANR	4905567	PrimaryExpression	1		4904940	0					
ANR	4905568	ExpressionStatement	"len = getvalue ( buf , 2 )"	486:4:16167:16190	4904940	20	True				
ANR	4905569	AssignmentExpression	"len = getvalue ( buf , 2 )"		4904940	0		=			
ANR	4905570	Identifier	len		4904940	0					
ANR	4905571	CallExpression	"getvalue ( buf , 2 )"		4904940	1					
ANR	4905572	Callee	getvalue		4904940	0					
ANR	4905573	Identifier	getvalue		4904940	0					
ANR	4905574	ArgumentList	buf		4904940	1					
ANR	4905575	Argument	buf		4904940	0					
ANR	4905576	Identifier	buf		4904940	0					
ANR	4905577	Argument	2		4904940	1					
ANR	4905578	PrimaryExpression	2		4904940	0					
ANR	4905579	IfStatement	if ( addr == - 1 || len == - 1 )		4904940	21					
ANR	4905580	Condition	addr == - 1 || len == - 1	487:8:16200:16222	4904940	0	True				
ANR	4905581	OrExpression	addr == - 1 || len == - 1		4904940	0		||			
ANR	4905582	EqualityExpression	addr == - 1		4904940	0		==			
ANR	4905583	Identifier	addr		4904940	0					
ANR	4905584	UnaryOperationExpression	- 1		4904940	1					
ANR	4905585	UnaryOperator	-		4904940	0					
ANR	4905586	PrimaryExpression	1		4904940	1					
ANR	4905587	EqualityExpression	len == - 1		4904940	1		==			
ANR	4905588	Identifier	len		4904940	0					
ANR	4905589	UnaryOperationExpression	- 1		4904940	1					
ANR	4905590	UnaryOperator	-		4904940	0					
ANR	4905591	PrimaryExpression	1		4904940	1					
ANR	4905592	CompoundStatement		108:33:2511:2511	4904940	1					
ANR	4905593	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	488:5:16232:16280	4904940	0	True				
ANR	4905594	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4905595	Callee	io -> cb_printf		4904940	0					
ANR	4905596	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905597	Identifier	io		4904940	0					
ANR	4905598	Identifier	cb_printf		4904940	1					
ANR	4905599	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4905600	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905601	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905602	ExpressionStatement	"print_help ( io , ""rP"" , 0 )"	489:5:16287:16311	4904940	1	True				
ANR	4905603	CallExpression	"print_help ( io , ""rP"" , 0 )"		4904940	0					
ANR	4905604	Callee	print_help		4904940	0					
ANR	4905605	Identifier	print_help		4904940	0					
ANR	4905606	ArgumentList	io		4904940	1					
ANR	4905607	Argument	io		4904940	0					
ANR	4905608	Identifier	io		4904940	0					
ANR	4905609	Argument	"""rP"""		4904940	1					
ANR	4905610	PrimaryExpression	"""rP"""		4904940	0					
ANR	4905611	Argument	0		4904940	2					
ANR	4905612	PrimaryExpression	0		4904940	0					
ANR	4905613	GotoStatement	goto end ;	490:5:16318:16326	4904940	2	True				
ANR	4905614	Identifier	end		4904940	0					
ANR	4905615	ExpressionStatement	ioctl_n = IOCTL_READ_PHYSICAL_ADDR	492:4:16338:16372	4904940	22	True				
ANR	4905616	AssignmentExpression	ioctl_n = IOCTL_READ_PHYSICAL_ADDR		4904940	0		=			
ANR	4905617	Identifier	ioctl_n		4904940	0					
ANR	4905618	Identifier	IOCTL_READ_PHYSICAL_ADDR		4904940	1					
ANR	4905619	BreakStatement	break ;	493:4:16378:16383	4904940	23	True				
ANR	4905620	Label	default :	494:3:16388:16395	4904940	24	True				
ANR	4905621	Identifier	default		4904940	0					
ANR	4905622	ExpressionStatement	"print_help ( io , ""r"" , 0 )"	495:4:16401:16423	4904940	25	True				
ANR	4905623	CallExpression	"print_help ( io , ""r"" , 0 )"		4904940	0					
ANR	4905624	Callee	print_help		4904940	0					
ANR	4905625	Identifier	print_help		4904940	0					
ANR	4905626	ArgumentList	io		4904940	1					
ANR	4905627	Argument	io		4904940	0					
ANR	4905628	Identifier	io		4904940	0					
ANR	4905629	Argument	"""r"""		4904940	1					
ANR	4905630	PrimaryExpression	"""r"""		4904940	0					
ANR	4905631	Argument	0		4904940	2					
ANR	4905632	PrimaryExpression	0		4904940	0					
ANR	4905633	ExpressionStatement	r_print_free ( print )	496:4:16429:16449	4904940	26	True				
ANR	4905634	CallExpression	r_print_free ( print )		4904940	0					
ANR	4905635	Callee	r_print_free		4904940	0					
ANR	4905636	Identifier	r_print_free		4904940	0					
ANR	4905637	ArgumentList	print		4904940	1					
ANR	4905638	Argument	print		4904940	0					
ANR	4905639	Identifier	print		4904940	0					
ANR	4905640	GotoStatement	goto end ;	497:4:16455:16463	4904940	27	True				
ANR	4905641	Identifier	end		4904940	0					
ANR	4905642	ExpressionStatement	"databuf = ( ut8 * ) calloc ( len + 1 , 1 )"	499:3:16473:16510	4904940	2	True				
ANR	4905643	AssignmentExpression	"databuf = ( ut8 * ) calloc ( len + 1 , 1 )"		4904940	0		=			
ANR	4905644	Identifier	databuf		4904940	0					
ANR	4905645	CastExpression	"( ut8 * ) calloc ( len + 1 , 1 )"		4904940	1					
ANR	4905646	CastTarget	ut8 *		4904940	0					
ANR	4905647	CallExpression	"calloc ( len + 1 , 1 )"		4904940	1					
ANR	4905648	Callee	calloc		4904940	0					
ANR	4905649	Identifier	calloc		4904940	0					
ANR	4905650	ArgumentList	len + 1		4904940	1					
ANR	4905651	Argument	len + 1		4904940	0					
ANR	4905652	AdditiveExpression	len + 1		4904940	0		+			
ANR	4905653	Identifier	len		4904940	0					
ANR	4905654	PrimaryExpression	1		4904940	1					
ANR	4905655	Argument	1		4904940	1					
ANR	4905656	PrimaryExpression	1		4904940	0					
ANR	4905657	IfStatement	if ( databuf )		4904940	3					
ANR	4905658	Condition	databuf	500:7:16519:16525	4904940	0	True				
ANR	4905659	Identifier	databuf		4904940	0					
ANR	4905660	CompoundStatement		121:16:2814:2814	4904940	1					
ANR	4905661	ExpressionStatement	"ret = ReadMemory ( io , iodesc , ioctl_n , pid , addr , databuf , len )"	501:4:16534:16597	4904940	0	True				
ANR	4905662	AssignmentExpression	"ret = ReadMemory ( io , iodesc , ioctl_n , pid , addr , databuf , len )"		4904940	0		=			
ANR	4905663	Identifier	ret		4904940	0					
ANR	4905664	CallExpression	"ReadMemory ( io , iodesc , ioctl_n , pid , addr , databuf , len )"		4904940	1					
ANR	4905665	Callee	ReadMemory		4904940	0					
ANR	4905666	Identifier	ReadMemory		4904940	0					
ANR	4905667	ArgumentList	io		4904940	1					
ANR	4905668	Argument	io		4904940	0					
ANR	4905669	Identifier	io		4904940	0					
ANR	4905670	Argument	iodesc		4904940	1					
ANR	4905671	Identifier	iodesc		4904940	0					
ANR	4905672	Argument	ioctl_n		4904940	2					
ANR	4905673	Identifier	ioctl_n		4904940	0					
ANR	4905674	Argument	pid		4904940	3					
ANR	4905675	Identifier	pid		4904940	0					
ANR	4905676	Argument	addr		4904940	4					
ANR	4905677	Identifier	addr		4904940	0					
ANR	4905678	Argument	databuf		4904940	5					
ANR	4905679	Identifier	databuf		4904940	0					
ANR	4905680	Argument	len		4904940	6					
ANR	4905681	Identifier	len		4904940	0					
ANR	4905682	IfStatement	if ( ret > 0 )		4904940	1					
ANR	4905683	Condition	ret > 0	502:8:16607:16613	4904940	0	True				
ANR	4905684	RelationalExpression	ret > 0		4904940	0		>			
ANR	4905685	Identifier	ret		4904940	0					
ANR	4905686	PrimaryExpression	0		4904940	1					
ANR	4905687	CompoundStatement		123:17:2902:2902	4904940	1					
ANR	4905688	ExpressionStatement	"r_print_hexdump ( print , addr , ( const ut8 * ) databuf , ret , 16 , 1 , 1 )"	503:5:16623:16690	4904940	0	True				
ANR	4905689	CallExpression	"r_print_hexdump ( print , addr , ( const ut8 * ) databuf , ret , 16 , 1 , 1 )"		4904940	0					
ANR	4905690	Callee	r_print_hexdump		4904940	0					
ANR	4905691	Identifier	r_print_hexdump		4904940	0					
ANR	4905692	ArgumentList	print		4904940	1					
ANR	4905693	Argument	print		4904940	0					
ANR	4905694	Identifier	print		4904940	0					
ANR	4905695	Argument	addr		4904940	1					
ANR	4905696	Identifier	addr		4904940	0					
ANR	4905697	Argument	( const ut8 * ) databuf		4904940	2					
ANR	4905698	CastExpression	( const ut8 * ) databuf		4904940	0					
ANR	4905699	CastTarget	const ut8 *		4904940	0					
ANR	4905700	Identifier	databuf		4904940	1					
ANR	4905701	Argument	ret		4904940	3					
ANR	4905702	Identifier	ret		4904940	0					
ANR	4905703	Argument	16		4904940	4					
ANR	4905704	PrimaryExpression	16		4904940	0					
ANR	4905705	Argument	1		4904940	5					
ANR	4905706	PrimaryExpression	1		4904940	0					
ANR	4905707	Argument	1		4904940	6					
ANR	4905708	PrimaryExpression	1		4904940	0					
ANR	4905709	ElseStatement	else		4904940	0					
ANR	4905710	CompoundStatement		126:10:2994:2994	4904940	0					
ANR	4905711	ExpressionStatement	"io -> cb_printf ( ""Failed to allocate buffer\\n"" )"	506:4:16714:16759	4904940	0	True				
ANR	4905712	CallExpression	"io -> cb_printf ( ""Failed to allocate buffer\\n"" )"		4904940	0					
ANR	4905713	Callee	io -> cb_printf		4904940	0					
ANR	4905714	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905715	Identifier	io		4904940	0					
ANR	4905716	Identifier	cb_printf		4904940	1					
ANR	4905717	ArgumentList	"""Failed to allocate buffer\\n"""		4904940	1					
ANR	4905718	Argument	"""Failed to allocate buffer\\n"""		4904940	0					
ANR	4905719	PrimaryExpression	"""Failed to allocate buffer\\n"""		4904940	0					
ANR	4905720	ExpressionStatement	r_print_free ( print )	508:3:16769:16789	4904940	4	True				
ANR	4905721	CallExpression	r_print_free ( print )		4904940	0					
ANR	4905722	Callee	r_print_free		4904940	0					
ANR	4905723	Identifier	r_print_free		4904940	0					
ANR	4905724	ArgumentList	print		4904940	1					
ANR	4905725	Argument	print		4904940	0					
ANR	4905726	Identifier	print		4904940	0					
ANR	4905727	BreakStatement	break ;	510:2:16797:16802	4904940	8	True				
ANR	4905728	Label	case 'w' :	511:1:16805:16813	4904940	9	True				
ANR	4905729	ExpressionStatement	inphex = ( buf [ 2 ] == 'x' ) ? 1 : 0	512:2:16817:16849	4904940	10	True				
ANR	4905730	AssignmentExpression	inphex = ( buf [ 2 ] == 'x' ) ? 1 : 0		4904940	0		=			
ANR	4905731	Identifier	inphex		4904940	0					
ANR	4905732	ConditionalExpression	( buf [ 2 ] == 'x' ) ? 1 : 0		4904940	1					
ANR	4905733	Condition	buf [ 2 ] == 'x'		4904940	0					
ANR	4905734	EqualityExpression	buf [ 2 ] == 'x'		4904940	0		==			
ANR	4905735	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905736	Identifier	buf		4904940	0					
ANR	4905737	PrimaryExpression	2		4904940	1					
ANR	4905738	PrimaryExpression	'x'		4904940	1					
ANR	4905739	PrimaryExpression	1		4904940	1					
ANR	4905740	PrimaryExpression	0		4904940	2					
ANR	4905741	SwitchStatement	switch ( buf [ 1 ] )		4904940	11					
ANR	4905742	Condition	buf [ 1 ]	513:10:16861:16866	4904940	0	True				
ANR	4905743	ArrayIndexing	buf [ 1 ]		4904940	0					
ANR	4905744	Identifier	buf		4904940	0					
ANR	4905745	PrimaryExpression	1		4904940	1					
ANR	4905746	CompoundStatement		134:18:3155:3155	4904940	1					
ANR	4905747	Label	case 'l' :	514:2:16873:16881	4904940	0	True				
ANR	4905748	IfStatement	if ( ( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' ) )		4904940	1					
ANR	4905749	Condition	( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' )	517:7:16936:16990	4904940	0	True				
ANR	4905750	OrExpression	( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' )		4904940	0		||			
ANR	4905751	AndExpression	inphex && buf [ 3 ] != ' '		4904940	0		&&			
ANR	4905752	Identifier	inphex		4904940	0					
ANR	4905753	EqualityExpression	buf [ 3 ] != ' '		4904940	1		!=			
ANR	4905754	ArrayIndexing	buf [ 3 ]		4904940	0					
ANR	4905755	Identifier	buf		4904940	0					
ANR	4905756	PrimaryExpression	3		4904940	1					
ANR	4905757	PrimaryExpression	' '		4904940	1					
ANR	4905758	AndExpression	! inphex && buf [ 2 ] != ' '		4904940	1		&&			
ANR	4905759	UnaryOperationExpression	! inphex		4904940	0					
ANR	4905760	UnaryOperator	!		4904940	0					
ANR	4905761	Identifier	inphex		4904940	1					
ANR	4905762	EqualityExpression	buf [ 2 ] != ' '		4904940	1		!=			
ANR	4905763	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905764	Identifier	buf		4904940	0					
ANR	4905765	PrimaryExpression	2		4904940	1					
ANR	4905766	PrimaryExpression	' '		4904940	1					
ANR	4905767	CompoundStatement		138:64:3279:3279	4904940	1					
ANR	4905768	ExpressionStatement	"print_help ( io , ""wl"" , 0 )"	518:4:16999:17023	4904940	0	True				
ANR	4905769	CallExpression	"print_help ( io , ""wl"" , 0 )"		4904940	0					
ANR	4905770	Callee	print_help		4904940	0					
ANR	4905771	Identifier	print_help		4904940	0					
ANR	4905772	ArgumentList	io		4904940	1					
ANR	4905773	Argument	io		4904940	0					
ANR	4905774	Identifier	io		4904940	0					
ANR	4905775	Argument	"""wl"""		4904940	1					
ANR	4905776	PrimaryExpression	"""wl"""		4904940	0					
ANR	4905777	Argument	0		4904940	2					
ANR	4905778	PrimaryExpression	0		4904940	0					
ANR	4905779	GotoStatement	goto end ;	519:4:17029:17037	4904940	1	True				
ANR	4905780	Identifier	end		4904940	0					
ANR	4905781	ExpressionStatement	pid = 0	521:3:17047:17054	4904940	2	True				
ANR	4905782	AssignmentExpression	pid = 0		4904940	0		=			
ANR	4905783	Identifier	pid		4904940	0					
ANR	4905784	PrimaryExpression	0		4904940	1					
ANR	4905785	ExpressionStatement	"addr = getvalue ( buf , 1 )"	522:3:17059:17083	4904940	3	True				
ANR	4905786	AssignmentExpression	"addr = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4905787	Identifier	addr		4904940	0					
ANR	4905788	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905789	Callee	getvalue		4904940	0					
ANR	4905790	Identifier	getvalue		4904940	0					
ANR	4905791	ArgumentList	buf		4904940	1					
ANR	4905792	Argument	buf		4904940	0					
ANR	4905793	Identifier	buf		4904940	0					
ANR	4905794	Argument	1		4904940	1					
ANR	4905795	PrimaryExpression	1		4904940	0					
ANR	4905796	ExpressionStatement	"buf = getargpos ( buf , 2 )"	523:3:17088:17112	4904940	4	True				
ANR	4905797	AssignmentExpression	"buf = getargpos ( buf , 2 )"		4904940	0		=			
ANR	4905798	Identifier	buf		4904940	0					
ANR	4905799	CallExpression	"getargpos ( buf , 2 )"		4904940	1					
ANR	4905800	Callee	getargpos		4904940	0					
ANR	4905801	Identifier	getargpos		4904940	0					
ANR	4905802	ArgumentList	buf		4904940	1					
ANR	4905803	Argument	buf		4904940	0					
ANR	4905804	Identifier	buf		4904940	0					
ANR	4905805	Argument	2		4904940	1					
ANR	4905806	PrimaryExpression	2		4904940	0					
ANR	4905807	IfStatement	if ( addr == - 1 || ! buf )		4904940	5					
ANR	4905808	Condition	addr == - 1 || ! buf	524:7:17121:17138	4904940	0	True				
ANR	4905809	OrExpression	addr == - 1 || ! buf		4904940	0		||			
ANR	4905810	EqualityExpression	addr == - 1		4904940	0		==			
ANR	4905811	Identifier	addr		4904940	0					
ANR	4905812	UnaryOperationExpression	- 1		4904940	1					
ANR	4905813	UnaryOperator	-		4904940	0					
ANR	4905814	PrimaryExpression	1		4904940	1					
ANR	4905815	UnaryOperationExpression	! buf		4904940	1					
ANR	4905816	UnaryOperator	!		4904940	0					
ANR	4905817	Identifier	buf		4904940	1					
ANR	4905818	CompoundStatement		145:27:3427:3427	4904940	1					
ANR	4905819	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	525:4:17147:17195	4904940	0	True				
ANR	4905820	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4905821	Callee	io -> cb_printf		4904940	0					
ANR	4905822	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905823	Identifier	io		4904940	0					
ANR	4905824	Identifier	cb_printf		4904940	1					
ANR	4905825	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4905826	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905827	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905828	ExpressionStatement	"print_help ( io , ""wl"" , 0 )"	526:4:17201:17225	4904940	1	True				
ANR	4905829	CallExpression	"print_help ( io , ""wl"" , 0 )"		4904940	0					
ANR	4905830	Callee	print_help		4904940	0					
ANR	4905831	Identifier	print_help		4904940	0					
ANR	4905832	ArgumentList	io		4904940	1					
ANR	4905833	Argument	io		4904940	0					
ANR	4905834	Identifier	io		4904940	0					
ANR	4905835	Argument	"""wl"""		4904940	1					
ANR	4905836	PrimaryExpression	"""wl"""		4904940	0					
ANR	4905837	Argument	0		4904940	2					
ANR	4905838	PrimaryExpression	0		4904940	0					
ANR	4905839	GotoStatement	goto end ;	527:4:17231:17239	4904940	2	True				
ANR	4905840	Identifier	end		4904940	0					
ANR	4905841	ExpressionStatement	ioctl_n = IOCTL_WRITE_KERNEL_MEMORY	529:3:17249:17284	4904940	6	True				
ANR	4905842	AssignmentExpression	ioctl_n = IOCTL_WRITE_KERNEL_MEMORY		4904940	0		=			
ANR	4905843	Identifier	ioctl_n		4904940	0					
ANR	4905844	Identifier	IOCTL_WRITE_KERNEL_MEMORY		4904940	1					
ANR	4905845	BreakStatement	break ;	530:3:17289:17294	4904940	7	True				
ANR	4905846	Label	case 'p' :	531:2:17298:17306	4904940	8	True				
ANR	4905847	IfStatement	if ( ( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' ) )		4904940	9					
ANR	4905848	Condition	( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' )	534:7:17369:17423	4904940	0	True				
ANR	4905849	OrExpression	( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' )		4904940	0		||			
ANR	4905850	AndExpression	inphex && buf [ 3 ] != ' '		4904940	0		&&			
ANR	4905851	Identifier	inphex		4904940	0					
ANR	4905852	EqualityExpression	buf [ 3 ] != ' '		4904940	1		!=			
ANR	4905853	ArrayIndexing	buf [ 3 ]		4904940	0					
ANR	4905854	Identifier	buf		4904940	0					
ANR	4905855	PrimaryExpression	3		4904940	1					
ANR	4905856	PrimaryExpression	' '		4904940	1					
ANR	4905857	AndExpression	! inphex && buf [ 2 ] != ' '		4904940	1		&&			
ANR	4905858	UnaryOperationExpression	! inphex		4904940	0					
ANR	4905859	UnaryOperator	!		4904940	0					
ANR	4905860	Identifier	inphex		4904940	1					
ANR	4905861	EqualityExpression	buf [ 2 ] != ' '		4904940	1		!=			
ANR	4905862	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905863	Identifier	buf		4904940	0					
ANR	4905864	PrimaryExpression	2		4904940	1					
ANR	4905865	PrimaryExpression	' '		4904940	1					
ANR	4905866	CompoundStatement		155:64:3712:3712	4904940	1					
ANR	4905867	ExpressionStatement	"print_help ( io , ""wp"" , 0 )"	535:4:17432:17456	4904940	0	True				
ANR	4905868	CallExpression	"print_help ( io , ""wp"" , 0 )"		4904940	0					
ANR	4905869	Callee	print_help		4904940	0					
ANR	4905870	Identifier	print_help		4904940	0					
ANR	4905871	ArgumentList	io		4904940	1					
ANR	4905872	Argument	io		4904940	0					
ANR	4905873	Identifier	io		4904940	0					
ANR	4905874	Argument	"""wp"""		4904940	1					
ANR	4905875	PrimaryExpression	"""wp"""		4904940	0					
ANR	4905876	Argument	0		4904940	2					
ANR	4905877	PrimaryExpression	0		4904940	0					
ANR	4905878	GotoStatement	goto end ;	536:4:17462:17470	4904940	1	True				
ANR	4905879	Identifier	end		4904940	0					
ANR	4905880	ExpressionStatement	"pid = getvalue ( buf , 1 )"	538:3:17480:17503	4904940	10	True				
ANR	4905881	AssignmentExpression	"pid = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4905882	Identifier	pid		4904940	0					
ANR	4905883	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4905884	Callee	getvalue		4904940	0					
ANR	4905885	Identifier	getvalue		4904940	0					
ANR	4905886	ArgumentList	buf		4904940	1					
ANR	4905887	Argument	buf		4904940	0					
ANR	4905888	Identifier	buf		4904940	0					
ANR	4905889	Argument	1		4904940	1					
ANR	4905890	PrimaryExpression	1		4904940	0					
ANR	4905891	ExpressionStatement	"addr = getvalue ( buf , 2 )"	539:3:17508:17532	4904940	11	True				
ANR	4905892	AssignmentExpression	"addr = getvalue ( buf , 2 )"		4904940	0		=			
ANR	4905893	Identifier	addr		4904940	0					
ANR	4905894	CallExpression	"getvalue ( buf , 2 )"		4904940	1					
ANR	4905895	Callee	getvalue		4904940	0					
ANR	4905896	Identifier	getvalue		4904940	0					
ANR	4905897	ArgumentList	buf		4904940	1					
ANR	4905898	Argument	buf		4904940	0					
ANR	4905899	Identifier	buf		4904940	0					
ANR	4905900	Argument	2		4904940	1					
ANR	4905901	PrimaryExpression	2		4904940	0					
ANR	4905902	ExpressionStatement	"buf = getargpos ( buf , 3 )"	540:3:17537:17561	4904940	12	True				
ANR	4905903	AssignmentExpression	"buf = getargpos ( buf , 3 )"		4904940	0		=			
ANR	4905904	Identifier	buf		4904940	0					
ANR	4905905	CallExpression	"getargpos ( buf , 3 )"		4904940	1					
ANR	4905906	Callee	getargpos		4904940	0					
ANR	4905907	Identifier	getargpos		4904940	0					
ANR	4905908	ArgumentList	buf		4904940	1					
ANR	4905909	Argument	buf		4904940	0					
ANR	4905910	Identifier	buf		4904940	0					
ANR	4905911	Argument	3		4904940	1					
ANR	4905912	PrimaryExpression	3		4904940	0					
ANR	4905913	IfStatement	if ( pid == - 1 || addr == - 1 || ! buf )		4904940	13					
ANR	4905914	Condition	pid == - 1 || addr == - 1 || ! buf	541:7:17570:17600	4904940	0	True				
ANR	4905915	OrExpression	pid == - 1 || addr == - 1 || ! buf		4904940	0		||			
ANR	4905916	EqualityExpression	pid == - 1		4904940	0		==			
ANR	4905917	Identifier	pid		4904940	0					
ANR	4905918	UnaryOperationExpression	- 1		4904940	1					
ANR	4905919	UnaryOperator	-		4904940	0					
ANR	4905920	PrimaryExpression	1		4904940	1					
ANR	4905921	OrExpression	addr == - 1 || ! buf		4904940	1		||			
ANR	4905922	EqualityExpression	addr == - 1		4904940	0		==			
ANR	4905923	Identifier	addr		4904940	0					
ANR	4905924	UnaryOperationExpression	- 1		4904940	1					
ANR	4905925	UnaryOperator	-		4904940	0					
ANR	4905926	PrimaryExpression	1		4904940	1					
ANR	4905927	UnaryOperationExpression	! buf		4904940	1					
ANR	4905928	UnaryOperator	!		4904940	0					
ANR	4905929	Identifier	buf		4904940	1					
ANR	4905930	CompoundStatement		162:40:3889:3889	4904940	1					
ANR	4905931	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	542:4:17609:17657	4904940	0	True				
ANR	4905932	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4905933	Callee	io -> cb_printf		4904940	0					
ANR	4905934	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4905935	Identifier	io		4904940	0					
ANR	4905936	Identifier	cb_printf		4904940	1					
ANR	4905937	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4905938	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905939	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4905940	ExpressionStatement	"print_help ( io , ""wp"" , 0 )"	543:4:17663:17687	4904940	1	True				
ANR	4905941	CallExpression	"print_help ( io , ""wp"" , 0 )"		4904940	0					
ANR	4905942	Callee	print_help		4904940	0					
ANR	4905943	Identifier	print_help		4904940	0					
ANR	4905944	ArgumentList	io		4904940	1					
ANR	4905945	Argument	io		4904940	0					
ANR	4905946	Identifier	io		4904940	0					
ANR	4905947	Argument	"""wp"""		4904940	1					
ANR	4905948	PrimaryExpression	"""wp"""		4904940	0					
ANR	4905949	Argument	0		4904940	2					
ANR	4905950	PrimaryExpression	0		4904940	0					
ANR	4905951	GotoStatement	goto end ;	544:4:17693:17701	4904940	2	True				
ANR	4905952	Identifier	end		4904940	0					
ANR	4905953	ExpressionStatement	ioctl_n = IOCTL_WRITE_PROCESS_ADDR	546:3:17711:17745	4904940	14	True				
ANR	4905954	AssignmentExpression	ioctl_n = IOCTL_WRITE_PROCESS_ADDR		4904940	0		=			
ANR	4905955	Identifier	ioctl_n		4904940	0					
ANR	4905956	Identifier	IOCTL_WRITE_PROCESS_ADDR		4904940	1					
ANR	4905957	BreakStatement	break ;	547:3:17750:17755	4904940	15	True				
ANR	4905958	Label	case 'P' :	548:2:17759:17767	4904940	16	True				
ANR	4905959	IfStatement	if ( ( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' ) )		4904940	17					
ANR	4905960	Condition	( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' )	551:7:17827:17881	4904940	0	True				
ANR	4905961	OrExpression	( inphex && buf [ 3 ] != ' ' ) || ( ! inphex && buf [ 2 ] != ' ' )		4904940	0		||			
ANR	4905962	AndExpression	inphex && buf [ 3 ] != ' '		4904940	0		&&			
ANR	4905963	Identifier	inphex		4904940	0					
ANR	4905964	EqualityExpression	buf [ 3 ] != ' '		4904940	1		!=			
ANR	4905965	ArrayIndexing	buf [ 3 ]		4904940	0					
ANR	4905966	Identifier	buf		4904940	0					
ANR	4905967	PrimaryExpression	3		4904940	1					
ANR	4905968	PrimaryExpression	' '		4904940	1					
ANR	4905969	AndExpression	! inphex && buf [ 2 ] != ' '		4904940	1		&&			
ANR	4905970	UnaryOperationExpression	! inphex		4904940	0					
ANR	4905971	UnaryOperator	!		4904940	0					
ANR	4905972	Identifier	inphex		4904940	1					
ANR	4905973	EqualityExpression	buf [ 2 ] != ' '		4904940	1		!=			
ANR	4905974	ArrayIndexing	buf [ 2 ]		4904940	0					
ANR	4905975	Identifier	buf		4904940	0					
ANR	4905976	PrimaryExpression	2		4904940	1					
ANR	4905977	PrimaryExpression	' '		4904940	1					
ANR	4905978	CompoundStatement		172:64:4170:4170	4904940	1					
ANR	4905979	ExpressionStatement	"print_help ( io , ""wP"" , 0 )"	552:4:17890:17914	4904940	0	True				
ANR	4905980	CallExpression	"print_help ( io , ""wP"" , 0 )"		4904940	0					
ANR	4905981	Callee	print_help		4904940	0					
ANR	4905982	Identifier	print_help		4904940	0					
ANR	4905983	ArgumentList	io		4904940	1					
ANR	4905984	Argument	io		4904940	0					
ANR	4905985	Identifier	io		4904940	0					
ANR	4905986	Argument	"""wP"""		4904940	1					
ANR	4905987	PrimaryExpression	"""wP"""		4904940	0					
ANR	4905988	Argument	0		4904940	2					
ANR	4905989	PrimaryExpression	0		4904940	0					
ANR	4905990	GotoStatement	goto end ;	553:4:17920:17928	4904940	1	True				
ANR	4905991	Identifier	end		4904940	0					
ANR	4905992	ExpressionStatement	pid = 0	555:3:17938:17945	4904940	18	True				
ANR	4905993	AssignmentExpression	pid = 0		4904940	0		=			
ANR	4905994	Identifier	pid		4904940	0					
ANR	4905995	PrimaryExpression	0		4904940	1					
ANR	4905996	ExpressionStatement	"addr = getvalue ( buf , 1 )"	556:3:17950:17974	4904940	19	True				
ANR	4905997	AssignmentExpression	"addr = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4905998	Identifier	addr		4904940	0					
ANR	4905999	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4906000	Callee	getvalue		4904940	0					
ANR	4906001	Identifier	getvalue		4904940	0					
ANR	4906002	ArgumentList	buf		4904940	1					
ANR	4906003	Argument	buf		4904940	0					
ANR	4906004	Identifier	buf		4904940	0					
ANR	4906005	Argument	1		4904940	1					
ANR	4906006	PrimaryExpression	1		4904940	0					
ANR	4906007	ExpressionStatement	"buf = getargpos ( buf , 2 )"	557:3:17979:18003	4904940	20	True				
ANR	4906008	AssignmentExpression	"buf = getargpos ( buf , 2 )"		4904940	0		=			
ANR	4906009	Identifier	buf		4904940	0					
ANR	4906010	CallExpression	"getargpos ( buf , 2 )"		4904940	1					
ANR	4906011	Callee	getargpos		4904940	0					
ANR	4906012	Identifier	getargpos		4904940	0					
ANR	4906013	ArgumentList	buf		4904940	1					
ANR	4906014	Argument	buf		4904940	0					
ANR	4906015	Identifier	buf		4904940	0					
ANR	4906016	Argument	2		4904940	1					
ANR	4906017	PrimaryExpression	2		4904940	0					
ANR	4906018	IfStatement	if ( addr == - 1 || ! buf )		4904940	21					
ANR	4906019	Condition	addr == - 1 || ! buf	558:7:18012:18029	4904940	0	True				
ANR	4906020	OrExpression	addr == - 1 || ! buf		4904940	0		||			
ANR	4906021	EqualityExpression	addr == - 1		4904940	0		==			
ANR	4906022	Identifier	addr		4904940	0					
ANR	4906023	UnaryOperationExpression	- 1		4904940	1					
ANR	4906024	UnaryOperator	-		4904940	0					
ANR	4906025	PrimaryExpression	1		4904940	1					
ANR	4906026	UnaryOperationExpression	! buf		4904940	1					
ANR	4906027	UnaryOperator	!		4904940	0					
ANR	4906028	Identifier	buf		4904940	1					
ANR	4906029	CompoundStatement		179:27:4318:4318	4904940	1					
ANR	4906030	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	559:4:18038:18086	4904940	0	True				
ANR	4906031	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4906032	Callee	io -> cb_printf		4904940	0					
ANR	4906033	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906034	Identifier	io		4904940	0					
ANR	4906035	Identifier	cb_printf		4904940	1					
ANR	4906036	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4906037	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4906038	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4906039	ExpressionStatement	"print_help ( io , ""wP"" , 0 )"	560:4:18092:18116	4904940	1	True				
ANR	4906040	CallExpression	"print_help ( io , ""wP"" , 0 )"		4904940	0					
ANR	4906041	Callee	print_help		4904940	0					
ANR	4906042	Identifier	print_help		4904940	0					
ANR	4906043	ArgumentList	io		4904940	1					
ANR	4906044	Argument	io		4904940	0					
ANR	4906045	Identifier	io		4904940	0					
ANR	4906046	Argument	"""wP"""		4904940	1					
ANR	4906047	PrimaryExpression	"""wP"""		4904940	0					
ANR	4906048	Argument	0		4904940	2					
ANR	4906049	PrimaryExpression	0		4904940	0					
ANR	4906050	GotoStatement	goto end ;	561:4:18122:18130	4904940	2	True				
ANR	4906051	Identifier	end		4904940	0					
ANR	4906052	ExpressionStatement	ioctl_n = IOCTL_WRITE_PHYSICAL_ADDR	563:3:18140:18175	4904940	22	True				
ANR	4906053	AssignmentExpression	ioctl_n = IOCTL_WRITE_PHYSICAL_ADDR		4904940	0		=			
ANR	4906054	Identifier	ioctl_n		4904940	0					
ANR	4906055	Identifier	IOCTL_WRITE_PHYSICAL_ADDR		4904940	1					
ANR	4906056	BreakStatement	break ;	564:3:18180:18185	4904940	23	True				
ANR	4906057	Label	default :	565:2:18189:18196	4904940	24	True				
ANR	4906058	Identifier	default		4904940	0					
ANR	4906059	ExpressionStatement	"print_help ( io , ""w"" , 0 )"	566:3:18201:18224	4904940	25	True				
ANR	4906060	CallExpression	"print_help ( io , ""w"" , 0 )"		4904940	0					
ANR	4906061	Callee	print_help		4904940	0					
ANR	4906062	Identifier	print_help		4904940	0					
ANR	4906063	ArgumentList	io		4904940	1					
ANR	4906064	Argument	io		4904940	0					
ANR	4906065	Identifier	io		4904940	0					
ANR	4906066	Argument	"""w"""		4904940	1					
ANR	4906067	PrimaryExpression	"""w"""		4904940	0					
ANR	4906068	Argument	0		4904940	2					
ANR	4906069	PrimaryExpression	0		4904940	0					
ANR	4906070	GotoStatement	goto end ;	567:3:18229:18237	4904940	26	True				
ANR	4906071	Identifier	end		4904940	0					
ANR	4906072	IfStatement	if ( ! buf )		4904940	12					
ANR	4906073	Condition	! buf	570:6:18321:18324	4904940	0	True				
ANR	4906074	UnaryOperationExpression	! buf		4904940	0					
ANR	4906075	UnaryOperator	!		4904940	0					
ANR	4906076	Identifier	buf		4904940	1					
ANR	4906077	CompoundStatement		191:12:4613:4613	4904940	1					
ANR	4906078	BreakStatement	break ;	571:3:18332:18337	4904940	0	True				
ANR	4906079	ExpressionStatement	len = strlen ( buf )	573:2:18345:18363	4904940	13	True				
ANR	4906080	AssignmentExpression	len = strlen ( buf )		4904940	0		=			
ANR	4906081	Identifier	len		4904940	0					
ANR	4906082	CallExpression	strlen ( buf )		4904940	1					
ANR	4906083	Callee	strlen		4904940	0					
ANR	4906084	Identifier	strlen		4904940	0					
ANR	4906085	ArgumentList	buf		4904940	1					
ANR	4906086	Argument	buf		4904940	0					
ANR	4906087	Identifier	buf		4904940	0					
ANR	4906088	ExpressionStatement	"databuf = ( ut8 * ) calloc ( len + 1 , 1 )"	574:2:18367:18404	4904940	14	True				
ANR	4906089	AssignmentExpression	"databuf = ( ut8 * ) calloc ( len + 1 , 1 )"		4904940	0		=			
ANR	4906090	Identifier	databuf		4904940	0					
ANR	4906091	CastExpression	"( ut8 * ) calloc ( len + 1 , 1 )"		4904940	1					
ANR	4906092	CastTarget	ut8 *		4904940	0					
ANR	4906093	CallExpression	"calloc ( len + 1 , 1 )"		4904940	1					
ANR	4906094	Callee	calloc		4904940	0					
ANR	4906095	Identifier	calloc		4904940	0					
ANR	4906096	ArgumentList	len + 1		4904940	1					
ANR	4906097	Argument	len + 1		4904940	0					
ANR	4906098	AdditiveExpression	len + 1		4904940	0		+			
ANR	4906099	Identifier	len		4904940	0					
ANR	4906100	PrimaryExpression	1		4904940	1					
ANR	4906101	Argument	1		4904940	1					
ANR	4906102	PrimaryExpression	1		4904940	0					
ANR	4906103	IfStatement	if ( databuf )		4904940	15					
ANR	4906104	Condition	databuf	575:6:18412:18418	4904940	0	True				
ANR	4906105	Identifier	databuf		4904940	0					
ANR	4906106	CompoundStatement		196:15:4707:4707	4904940	1					
ANR	4906107	IfStatement	if ( inphex )		4904940	0					
ANR	4906108	Condition	inphex	576:7:18430:18435	4904940	0	True				
ANR	4906109	Identifier	inphex		4904940	0					
ANR	4906110	CompoundStatement		197:15:4724:4724	4904940	1					
ANR	4906111	ExpressionStatement	"len = r_hex_str2bin ( buf , databuf )"	577:4:18444:18478	4904940	0	True				
ANR	4906112	AssignmentExpression	"len = r_hex_str2bin ( buf , databuf )"		4904940	0		=			
ANR	4906113	Identifier	len		4904940	0					
ANR	4906114	CallExpression	"r_hex_str2bin ( buf , databuf )"		4904940	1					
ANR	4906115	Callee	r_hex_str2bin		4904940	0					
ANR	4906116	Identifier	r_hex_str2bin		4904940	0					
ANR	4906117	ArgumentList	buf		4904940	1					
ANR	4906118	Argument	buf		4904940	0					
ANR	4906119	Identifier	buf		4904940	0					
ANR	4906120	Argument	databuf		4904940	1					
ANR	4906121	Identifier	databuf		4904940	0					
ANR	4906122	ElseStatement	else		4904940	0					
ANR	4906123	CompoundStatement		199:10:4776:4776	4904940	0					
ANR	4906124	ExpressionStatement	"memcpy ( databuf , buf , strlen ( buf ) + 1 )"	579:4:18496:18535	4904940	0	True				
ANR	4906125	CallExpression	"memcpy ( databuf , buf , strlen ( buf ) + 1 )"		4904940	0					
ANR	4906126	Callee	memcpy		4904940	0					
ANR	4906127	Identifier	memcpy		4904940	0					
ANR	4906128	ArgumentList	databuf		4904940	1					
ANR	4906129	Argument	databuf		4904940	0					
ANR	4906130	Identifier	databuf		4904940	0					
ANR	4906131	Argument	buf		4904940	1					
ANR	4906132	Identifier	buf		4904940	0					
ANR	4906133	Argument	strlen ( buf ) + 1		4904940	2					
ANR	4906134	AdditiveExpression	strlen ( buf ) + 1		4904940	0		+			
ANR	4906135	CallExpression	strlen ( buf )		4904940	0					
ANR	4906136	Callee	strlen		4904940	0					
ANR	4906137	Identifier	strlen		4904940	0					
ANR	4906138	ArgumentList	buf		4904940	1					
ANR	4906139	Argument	buf		4904940	0					
ANR	4906140	Identifier	buf		4904940	0					
ANR	4906141	PrimaryExpression	1		4904940	1					
ANR	4906142	ExpressionStatement	len = r_str_unescape ( ( char * ) databuf )	580:4:18541:18580	4904940	1	True				
ANR	4906143	AssignmentExpression	len = r_str_unescape ( ( char * ) databuf )		4904940	0		=			
ANR	4906144	Identifier	len		4904940	0					
ANR	4906145	CallExpression	r_str_unescape ( ( char * ) databuf )		4904940	1					
ANR	4906146	Callee	r_str_unescape		4904940	0					
ANR	4906147	Identifier	r_str_unescape		4904940	0					
ANR	4906148	ArgumentList	( char * ) databuf		4904940	1					
ANR	4906149	Argument	( char * ) databuf		4904940	0					
ANR	4906150	CastExpression	( char * ) databuf		4904940	0					
ANR	4906151	CastTarget	char *		4904940	0					
ANR	4906152	Identifier	databuf		4904940	1					
ANR	4906153	ExpressionStatement	"ret = WriteMemory ( io , iodesc , ioctl_n , pid , addr , ( const ut8 * ) databuf , len )"	582:3:18590:18668	4904940	1	True				
ANR	4906154	AssignmentExpression	"ret = WriteMemory ( io , iodesc , ioctl_n , pid , addr , ( const ut8 * ) databuf , len )"		4904940	0		=			
ANR	4906155	Identifier	ret		4904940	0					
ANR	4906156	CallExpression	"WriteMemory ( io , iodesc , ioctl_n , pid , addr , ( const ut8 * ) databuf , len )"		4904940	1					
ANR	4906157	Callee	WriteMemory		4904940	0					
ANR	4906158	Identifier	WriteMemory		4904940	0					
ANR	4906159	ArgumentList	io		4904940	1					
ANR	4906160	Argument	io		4904940	0					
ANR	4906161	Identifier	io		4904940	0					
ANR	4906162	Argument	iodesc		4904940	1					
ANR	4906163	Identifier	iodesc		4904940	0					
ANR	4906164	Argument	ioctl_n		4904940	2					
ANR	4906165	Identifier	ioctl_n		4904940	0					
ANR	4906166	Argument	pid		4904940	3					
ANR	4906167	Identifier	pid		4904940	0					
ANR	4906168	Argument	addr		4904940	4					
ANR	4906169	Identifier	addr		4904940	0					
ANR	4906170	Argument	( const ut8 * ) databuf		4904940	5					
ANR	4906171	CastExpression	( const ut8 * ) databuf		4904940	0					
ANR	4906172	CastTarget	const ut8 *		4904940	0					
ANR	4906173	Identifier	databuf		4904940	1					
ANR	4906174	Argument	len		4904940	6					
ANR	4906175	Identifier	len		4904940	0					
ANR	4906176	ElseStatement	else		4904940	0					
ANR	4906177	CompoundStatement		204:9:4965:4965	4904940	0					
ANR	4906178	ExpressionStatement	"eprintf ( ""Failed to allocate buffer.\\n"" )"	584:3:18684:18724	4904940	0	True				
ANR	4906179	CallExpression	"eprintf ( ""Failed to allocate buffer.\\n"" )"		4904940	0					
ANR	4906180	Callee	eprintf		4904940	0					
ANR	4906181	Identifier	eprintf		4904940	0					
ANR	4906182	ArgumentList	"""Failed to allocate buffer.\\n"""		4904940	1					
ANR	4906183	Argument	"""Failed to allocate buffer.\\n"""		4904940	0					
ANR	4906184	PrimaryExpression	"""Failed to allocate buffer.\\n"""		4904940	0					
ANR	4906185	BreakStatement	break ;	586:2:18732:18737	4904940	16	True				
ANR	4906186	Label	case 'M' :	587:1:18740:18748	4904940	17	True				
ANR	4906187	CompoundStatement		215:3:5169:5208	4904940	18					
ANR	4906188	IdentifierDeclStatement	"int i , j ;"	591:3:18797:18805	4904940	0	True				
ANR	4906189	IdentifierDecl	i		4904940	0					
ANR	4906190	IdentifierDeclType	int		4904940	0					
ANR	4906191	Identifier	i		4904940	1					
ANR	4906192	IdentifierDecl	j		4904940	1					
ANR	4906193	IdentifierDeclType	int		4904940	0					
ANR	4906194	Identifier	j		4904940	1					
ANR	4906195	IdentifierDeclStatement	struct r2k_kernel_maps map_data ;	592:3:18810:18841	4904940	1	True				
ANR	4906196	IdentifierDecl	map_data		4904940	0					
ANR	4906197	IdentifierDeclType	struct r2k_kernel_maps		4904940	0					
ANR	4906198	Identifier	map_data		4904940	1					
ANR	4906199	IdentifierDeclStatement	struct r2k_kernel_map_info * info ;	593:3:18846:18878	4904940	2	True				
ANR	4906200	IdentifierDecl	* info		4904940	0					
ANR	4906201	IdentifierDeclType	struct r2k_kernel_map_info *		4904940	0					
ANR	4906202	Identifier	info		4904940	1					
ANR	4906203	IdentifierDeclStatement	long page_size = sysconf ( _SC_PAGESIZE ) ;	594:3:18883:18922	4904940	3	True				
ANR	4906204	IdentifierDecl	page_size = sysconf ( _SC_PAGESIZE )		4904940	0					
ANR	4906205	IdentifierDeclType	long		4904940	0					
ANR	4906206	Identifier	page_size		4904940	1					
ANR	4906207	AssignmentExpression	page_size = sysconf ( _SC_PAGESIZE )		4904940	2		=			
ANR	4906208	Identifier	page_size		4904940	0					
ANR	4906209	CallExpression	sysconf ( _SC_PAGESIZE )		4904940	1					
ANR	4906210	Callee	sysconf		4904940	0					
ANR	4906211	Identifier	sysconf		4904940	0					
ANR	4906212	ArgumentList	_SC_PAGESIZE		4904940	1					
ANR	4906213	Argument	_SC_PAGESIZE		4904940	0					
ANR	4906214	Identifier	_SC_PAGESIZE		4904940	0					
ANR	4906215	ExpressionStatement	ioctl_n = IOCTL_GET_KERNEL_MAP	596:3:18928:18958	4904940	4	True				
ANR	4906216	AssignmentExpression	ioctl_n = IOCTL_GET_KERNEL_MAP		4904940	0		=			
ANR	4906217	Identifier	ioctl_n		4904940	0					
ANR	4906218	Identifier	IOCTL_GET_KERNEL_MAP		4904940	1					
ANR	4906219	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & map_data )"	597:3:18963:19022	4904940	5	True				
ANR	4906220	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & map_data )"		4904940	0		=			
ANR	4906221	Identifier	ret		4904940	0					
ANR	4906222	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & map_data )"		4904940	1					
ANR	4906223	Callee	ioctl		4904940	0					
ANR	4906224	Identifier	ioctl		4904940	0					
ANR	4906225	ArgumentList	( int ) ( size_t ) iodesc -> data		4904940	1					
ANR	4906226	Argument	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906227	CastExpression	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906228	CastTarget	int		4904940	0					
ANR	4906229	CastExpression	( size_t ) iodesc -> data		4904940	1					
ANR	4906230	CastTarget	size_t		4904940	0					
ANR	4906231	PtrMemberAccess	iodesc -> data		4904940	1					
ANR	4906232	Identifier	iodesc		4904940	0					
ANR	4906233	Identifier	data		4904940	1					
ANR	4906234	Argument	ioctl_n		4904940	1					
ANR	4906235	Identifier	ioctl_n		4904940	0					
ANR	4906236	Argument	& map_data		4904940	2					
ANR	4906237	UnaryOperationExpression	& map_data		4904940	0					
ANR	4906238	UnaryOperator	&		4904940	0					
ANR	4906239	Identifier	map_data		4904940	1					
ANR	4906240	IfStatement	if ( ret < 0 )		4904940	6					
ANR	4906241	Condition	ret < 0	599:7:19032:19038	4904940	0	True				
ANR	4906242	RelationalExpression	ret < 0		4904940	0		<			
ANR	4906243	Identifier	ret		4904940	0					
ANR	4906244	PrimaryExpression	0		4904940	1					
ANR	4906245	CompoundStatement		220:16:5327:5327	4904940	1					
ANR	4906246	ExpressionStatement	"io -> cb_printf ( ""ioctl err: %s\\n"" , strerror ( errno ) )"	600:4:19047:19098	4904940	0	True				
ANR	4906247	CallExpression	"io -> cb_printf ( ""ioctl err: %s\\n"" , strerror ( errno ) )"		4904940	0					
ANR	4906248	Callee	io -> cb_printf		4904940	0					
ANR	4906249	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906250	Identifier	io		4904940	0					
ANR	4906251	Identifier	cb_printf		4904940	1					
ANR	4906252	ArgumentList	"""ioctl err: %s\\n"""		4904940	1					
ANR	4906253	Argument	"""ioctl err: %s\\n"""		4904940	0					
ANR	4906254	PrimaryExpression	"""ioctl err: %s\\n"""		4904940	0					
ANR	4906255	Argument	strerror ( errno )		4904940	1					
ANR	4906256	CallExpression	strerror ( errno )		4904940	0					
ANR	4906257	Callee	strerror		4904940	0					
ANR	4906258	Identifier	strerror		4904940	0					
ANR	4906259	ArgumentList	errno		4904940	1					
ANR	4906260	Argument	errno		4904940	0					
ANR	4906261	Identifier	errno		4904940	0					
ANR	4906262	BreakStatement	break ;	601:4:19104:19109	4904940	1	True				
ANR	4906263	ExpressionStatement	"io -> cb_printf ( ""map_data.size: %d, map_data.n_entries: %d\\n"" , map_data . size , map_data . n_entries )"	604:3:19120:19216	4904940	7	True				
ANR	4906264	CallExpression	"io -> cb_printf ( ""map_data.size: %d, map_data.n_entries: %d\\n"" , map_data . size , map_data . n_entries )"		4904940	0					
ANR	4906265	Callee	io -> cb_printf		4904940	0					
ANR	4906266	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906267	Identifier	io		4904940	0					
ANR	4906268	Identifier	cb_printf		4904940	1					
ANR	4906269	ArgumentList	"""map_data.size: %d, map_data.n_entries: %d\\n"""		4904940	1					
ANR	4906270	Argument	"""map_data.size: %d, map_data.n_entries: %d\\n"""		4904940	0					
ANR	4906271	PrimaryExpression	"""map_data.size: %d, map_data.n_entries: %d\\n"""		4904940	0					
ANR	4906272	Argument	map_data . size		4904940	1					
ANR	4906273	MemberAccess	map_data . size		4904940	0					
ANR	4906274	Identifier	map_data		4904940	0					
ANR	4906275	Identifier	size		4904940	1					
ANR	4906276	Argument	map_data . n_entries		4904940	2					
ANR	4906277	MemberAccess	map_data . n_entries		4904940	0					
ANR	4906278	Identifier	map_data		4904940	0					
ANR	4906279	Identifier	n_entries		4904940	1					
ANR	4906280	ExpressionStatement	"info = mmap ( 0 , map_data . size , PROT_READ , MAP_SHARED , ( int ) ( size_t ) iodesc -> data , 0 )"	605:3:19221:19304	4904940	8	True				
ANR	4906281	AssignmentExpression	"info = mmap ( 0 , map_data . size , PROT_READ , MAP_SHARED , ( int ) ( size_t ) iodesc -> data , 0 )"		4904940	0		=			
ANR	4906282	Identifier	info		4904940	0					
ANR	4906283	CallExpression	"mmap ( 0 , map_data . size , PROT_READ , MAP_SHARED , ( int ) ( size_t ) iodesc -> data , 0 )"		4904940	1					
ANR	4906284	Callee	mmap		4904940	0					
ANR	4906285	Identifier	mmap		4904940	0					
ANR	4906286	ArgumentList	0		4904940	1					
ANR	4906287	Argument	0		4904940	0					
ANR	4906288	PrimaryExpression	0		4904940	0					
ANR	4906289	Argument	map_data . size		4904940	1					
ANR	4906290	MemberAccess	map_data . size		4904940	0					
ANR	4906291	Identifier	map_data		4904940	0					
ANR	4906292	Identifier	size		4904940	1					
ANR	4906293	Argument	PROT_READ		4904940	2					
ANR	4906294	Identifier	PROT_READ		4904940	0					
ANR	4906295	Argument	MAP_SHARED		4904940	3					
ANR	4906296	Identifier	MAP_SHARED		4904940	0					
ANR	4906297	Argument	( int ) ( size_t ) iodesc -> data		4904940	4					
ANR	4906298	CastExpression	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906299	CastTarget	int		4904940	0					
ANR	4906300	CastExpression	( size_t ) iodesc -> data		4904940	1					
ANR	4906301	CastTarget	size_t		4904940	0					
ANR	4906302	PtrMemberAccess	iodesc -> data		4904940	1					
ANR	4906303	Identifier	iodesc		4904940	0					
ANR	4906304	Identifier	data		4904940	1					
ANR	4906305	Argument	0		4904940	5					
ANR	4906306	PrimaryExpression	0		4904940	0					
ANR	4906307	IfStatement	if ( info == MAP_FAILED )		4904940	9					
ANR	4906308	Condition	info == MAP_FAILED	606:7:19313:19330	4904940	0	True				
ANR	4906309	EqualityExpression	info == MAP_FAILED		4904940	0		==			
ANR	4906310	Identifier	info		4904940	0					
ANR	4906311	Identifier	MAP_FAILED		4904940	1					
ANR	4906312	CompoundStatement		227:27:5619:5619	4904940	1					
ANR	4906313	ExpressionStatement	"io -> cb_printf ( ""mmap err: %s\\n"" , strerror ( errno ) )"	607:4:19339:19389	4904940	0	True				
ANR	4906314	CallExpression	"io -> cb_printf ( ""mmap err: %s\\n"" , strerror ( errno ) )"		4904940	0					
ANR	4906315	Callee	io -> cb_printf		4904940	0					
ANR	4906316	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906317	Identifier	io		4904940	0					
ANR	4906318	Identifier	cb_printf		4904940	1					
ANR	4906319	ArgumentList	"""mmap err: %s\\n"""		4904940	1					
ANR	4906320	Argument	"""mmap err: %s\\n"""		4904940	0					
ANR	4906321	PrimaryExpression	"""mmap err: %s\\n"""		4904940	0					
ANR	4906322	Argument	strerror ( errno )		4904940	1					
ANR	4906323	CallExpression	strerror ( errno )		4904940	0					
ANR	4906324	Callee	strerror		4904940	0					
ANR	4906325	Identifier	strerror		4904940	0					
ANR	4906326	ArgumentList	errno		4904940	1					
ANR	4906327	Argument	errno		4904940	0					
ANR	4906328	Identifier	errno		4904940	0					
ANR	4906329	BreakStatement	break ;	608:4:19395:19400	4904940	1	True				
ANR	4906330	ForStatement	for ( i = 0 ; i < map_data . n_entries ; i ++ )		4904940	10					
ANR	4906331	ForInit	i = 0 ;	611:8:19416:19421	4904940	0	True				
ANR	4906332	AssignmentExpression	i = 0		4904940	0		=			
ANR	4906333	Identifier	i		4904940	0					
ANR	4906334	PrimaryExpression	0		4904940	1					
ANR	4906335	Condition	i < map_data . n_entries	611:15:19423:19444	4904940	1	True				
ANR	4906336	RelationalExpression	i < map_data . n_entries		4904940	0		<			
ANR	4906337	Identifier	i		4904940	0					
ANR	4906338	MemberAccess	map_data . n_entries		4904940	1					
ANR	4906339	Identifier	map_data		4904940	0					
ANR	4906340	Identifier	n_entries		4904940	1					
ANR	4906341	PostIncDecOperationExpression	i ++	611:39:19447:19449	4904940	2	True				
ANR	4906342	Identifier	i		4904940	0					
ANR	4906343	IncDec	++		4904940	1					
ANR	4906344	CompoundStatement		233:4:5744:5785	4904940	3					
ANR	4906345	IdentifierDeclStatement	struct r2k_kernel_map_info * in = & info [ i ] ;	612:4:19458:19499	4904940	0	True				
ANR	4906346	IdentifierDecl	* in = & info [ i ]		4904940	0					
ANR	4906347	IdentifierDeclType	struct r2k_kernel_map_info *		4904940	0					
ANR	4906348	Identifier	in		4904940	1					
ANR	4906349	AssignmentExpression	* in = & info [ i ]		4904940	2		=			
ANR	4906350	Identifier	in		4904940	0					
ANR	4906351	UnaryOperationExpression	& info [ i ]		4904940	1					
ANR	4906352	UnaryOperator	&		4904940	0					
ANR	4906353	ArrayIndexing	info [ i ]		4904940	1					
ANR	4906354	Identifier	info		4904940	0					
ANR	4906355	Identifier	i		4904940	1					
ANR	4906356	Statement	io	613:4:19505:19506	4904940	1	True				
ANR	4906357	Statement	->	613:6:19507:19508	4904940	2	True				
ANR	4906358	Statement	cb_printf	613:8:19509:19517	4904940	3	True				
ANR	4906359	Statement	(	613:18:19519:19519	4904940	4	True				
ANR	4906360	Statement	"""start_addr: 0x%"""	613:19:19520:19536	4904940	5	True				
ANR	4906361	Statement	PFMT64x	613:36:19537:19543	4904940	6	True				
ANR	4906362	Statement	"""\\n"""	613:43:19544:19547	4904940	7	True				
ANR	4906363	Statement	","	613:47:19548:19548	4904940	8	True				
ANR	4906364	Statement	(	613:49:19550:19550	4904940	9	True				
ANR	4906365	Statement	ut64	613:50:19551:19554	4904940	10	True				
ANR	4906366	Statement	)	613:54:19555:19555	4904940	11	True				
ANR	4906367	Statement	in	613:56:19557:19558	4904940	12	True				
ANR	4906368	Statement	->	613:58:19559:19560	4904940	13	True				
ANR	4906369	Statement	start_addr	613:60:19561:19570	4904940	14	True				
ANR	4906370	Statement	)	613:70:19571:19571	4904940	15	True				
ANR	4906371	ExpressionStatement		613:71:19572:19572	4904940	16	True				
ANR	4906372	Statement	io	614:4:19578:19579	4904940	17	True				
ANR	4906373	Statement	->	614:6:19580:19581	4904940	18	True				
ANR	4906374	Statement	cb_printf	614:8:19582:19590	4904940	19	True				
ANR	4906375	Statement	(	614:18:19592:19592	4904940	20	True				
ANR	4906376	Statement	"""end_addr: 0x%"""	614:19:19593:19607	4904940	21	True				
ANR	4906377	Statement	PFMT64x	614:34:19608:19614	4904940	22	True				
ANR	4906378	Statement	"""\\n"""	614:41:19615:19618	4904940	23	True				
ANR	4906379	Statement	","	614:45:19619:19619	4904940	24	True				
ANR	4906380	Statement	(	614:47:19621:19621	4904940	25	True				
ANR	4906381	Statement	ut64	614:48:19622:19625	4904940	26	True				
ANR	4906382	Statement	)	614:52:19626:19626	4904940	27	True				
ANR	4906383	Statement	in	614:54:19628:19629	4904940	28	True				
ANR	4906384	Statement	->	614:56:19630:19631	4904940	29	True				
ANR	4906385	Statement	end_addr	614:58:19632:19639	4904940	30	True				
ANR	4906386	Statement	)	614:66:19640:19640	4904940	31	True				
ANR	4906387	ExpressionStatement		614:67:19641:19641	4904940	32	True				
ANR	4906388	ExpressionStatement	"io -> cb_printf ( ""n_pages: %d (%ld Kbytes)\\n"" , in -> n_pages , ( in -> n_pages * page_size ) / 1024 )"	615:4:19647:19738	4904940	33	True				
ANR	4906389	CallExpression	"io -> cb_printf ( ""n_pages: %d (%ld Kbytes)\\n"" , in -> n_pages , ( in -> n_pages * page_size ) / 1024 )"		4904940	0					
ANR	4906390	Callee	io -> cb_printf		4904940	0					
ANR	4906391	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906392	Identifier	io		4904940	0					
ANR	4906393	Identifier	cb_printf		4904940	1					
ANR	4906394	ArgumentList	"""n_pages: %d (%ld Kbytes)\\n"""		4904940	1					
ANR	4906395	Argument	"""n_pages: %d (%ld Kbytes)\\n"""		4904940	0					
ANR	4906396	PrimaryExpression	"""n_pages: %d (%ld Kbytes)\\n"""		4904940	0					
ANR	4906397	Argument	in -> n_pages		4904940	1					
ANR	4906398	PtrMemberAccess	in -> n_pages		4904940	0					
ANR	4906399	Identifier	in		4904940	0					
ANR	4906400	Identifier	n_pages		4904940	1					
ANR	4906401	Argument	( in -> n_pages * page_size ) / 1024		4904940	2					
ANR	4906402	MultiplicativeExpression	( in -> n_pages * page_size ) / 1024		4904940	0		/			
ANR	4906403	MultiplicativeExpression	in -> n_pages * page_size		4904940	0		*			
ANR	4906404	PtrMemberAccess	in -> n_pages		4904940	0					
ANR	4906405	Identifier	in		4904940	0					
ANR	4906406	Identifier	n_pages		4904940	1					
ANR	4906407	Identifier	page_size		4904940	1					
ANR	4906408	PrimaryExpression	1024		4904940	1					
ANR	4906409	ExpressionStatement	"io -> cb_printf ( ""n_phys_addr: %d\\n"" , in -> n_phys_addr )"	616:4:19744:19796	4904940	34	True				
ANR	4906410	CallExpression	"io -> cb_printf ( ""n_phys_addr: %d\\n"" , in -> n_phys_addr )"		4904940	0					
ANR	4906411	Callee	io -> cb_printf		4904940	0					
ANR	4906412	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906413	Identifier	io		4904940	0					
ANR	4906414	Identifier	cb_printf		4904940	1					
ANR	4906415	ArgumentList	"""n_phys_addr: %d\\n"""		4904940	1					
ANR	4906416	Argument	"""n_phys_addr: %d\\n"""		4904940	0					
ANR	4906417	PrimaryExpression	"""n_phys_addr: %d\\n"""		4904940	0					
ANR	4906418	Argument	in -> n_phys_addr		4904940	1					
ANR	4906419	PtrMemberAccess	in -> n_phys_addr		4904940	0					
ANR	4906420	Identifier	in		4904940	0					
ANR	4906421	Identifier	n_phys_addr		4904940	1					
ANR	4906422	ForStatement	for ( j = 0 ; j < in -> n_phys_addr ; j ++ )		4904940	35					
ANR	4906423	ForInit	j = 0 ;	617:9:19807:19812	4904940	0	True				
ANR	4906424	AssignmentExpression	j = 0		4904940	0		=			
ANR	4906425	Identifier	j		4904940	0					
ANR	4906426	PrimaryExpression	0		4904940	1					
ANR	4906427	Condition	j < in -> n_phys_addr	617:16:19814:19832	4904940	1	True				
ANR	4906428	RelationalExpression	j < in -> n_phys_addr		4904940	0		<			
ANR	4906429	Identifier	j		4904940	0					
ANR	4906430	PtrMemberAccess	in -> n_phys_addr		4904940	1					
ANR	4906431	Identifier	in		4904940	0					
ANR	4906432	Identifier	n_phys_addr		4904940	1					
ANR	4906433	PostIncDecOperationExpression	j ++	617:37:19835:19837	4904940	2	True				
ANR	4906434	Identifier	j		4904940	0					
ANR	4906435	IncDec	++		4904940	1					
ANR	4906436	CompoundStatement		238:42:6126:6126	4904940	3					
ANR	4906437	Statement	io	618:5:19847:19848	4904940	0	True				
ANR	4906438	Statement	->	618:7:19849:19850	4904940	1	True				
ANR	4906439	Statement	cb_printf	618:9:19851:19859	4904940	2	True				
ANR	4906440	Statement	(	618:19:19861:19861	4904940	3	True				
ANR	4906441	Statement	"""\\tphys_addr: 0x%"""	618:20:19862:19879	4904940	4	True				
ANR	4906442	Statement	PFMT64x	618:38:19880:19886	4904940	5	True				
ANR	4906443	Statement	"""\\n"""	618:45:19887:19890	4904940	6	True				
ANR	4906444	Statement	","	618:49:19891:19891	4904940	7	True				
ANR	4906445	Statement	(	618:51:19893:19893	4904940	8	True				
ANR	4906446	Statement	ut64	618:52:19894:19897	4904940	9	True				
ANR	4906447	Statement	)	618:56:19898:19898	4904940	10	True				
ANR	4906448	Statement	in	618:58:19900:19901	4904940	11	True				
ANR	4906449	Statement	->	618:60:19902:19903	4904940	12	True				
ANR	4906450	Statement	phys_addr	618:62:19904:19912	4904940	13	True				
ANR	4906451	Statement	[	618:71:19913:19913	4904940	14	True				
ANR	4906452	Statement	j	618:72:19914:19914	4904940	15	True				
ANR	4906453	Statement	]	618:73:19915:19915	4904940	16	True				
ANR	4906454	Statement	)	618:74:19916:19916	4904940	17	True				
ANR	4906455	ExpressionStatement		618:75:19917:19917	4904940	18	True				
ANR	4906456	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	620:4:19929:19949	4904940	36	True				
ANR	4906457	CallExpression	"io -> cb_printf ( ""\\n"" )"		4904940	0					
ANR	4906458	Callee	io -> cb_printf		4904940	0					
ANR	4906459	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906460	Identifier	io		4904940	0					
ANR	4906461	Identifier	cb_printf		4904940	1					
ANR	4906462	ArgumentList	"""\\n"""		4904940	1					
ANR	4906463	Argument	"""\\n"""		4904940	0					
ANR	4906464	PrimaryExpression	"""\\n"""		4904940	0					
ANR	4906465	IfStatement	"if ( munmap ( info , map_data . size ) == - 1 )"		4904940	11					
ANR	4906466	Condition	"munmap ( info , map_data . size ) == - 1"	623:7:19964:19997	4904940	0	True				
ANR	4906467	EqualityExpression	"munmap ( info , map_data . size ) == - 1"		4904940	0		==			
ANR	4906468	CallExpression	"munmap ( info , map_data . size )"		4904940	0					
ANR	4906469	Callee	munmap		4904940	0					
ANR	4906470	Identifier	munmap		4904940	0					
ANR	4906471	ArgumentList	info		4904940	1					
ANR	4906472	Argument	info		4904940	0					
ANR	4906473	Identifier	info		4904940	0					
ANR	4906474	Argument	map_data . size		4904940	1					
ANR	4906475	MemberAccess	map_data . size		4904940	0					
ANR	4906476	Identifier	map_data		4904940	0					
ANR	4906477	Identifier	size		4904940	1					
ANR	4906478	UnaryOperationExpression	- 1		4904940	1					
ANR	4906479	UnaryOperator	-		4904940	0					
ANR	4906480	PrimaryExpression	1		4904940	1					
ANR	4906481	CompoundStatement		244:43:6286:6286	4904940	1					
ANR	4906482	ExpressionStatement	"io -> cb_printf ( ""munmap failed.\\n"" )"	624:4:20006:20040	4904940	0	True				
ANR	4906483	CallExpression	"io -> cb_printf ( ""munmap failed.\\n"" )"		4904940	0					
ANR	4906484	Callee	io -> cb_printf		4904940	0					
ANR	4906485	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906486	Identifier	io		4904940	0					
ANR	4906487	Identifier	cb_printf		4904940	1					
ANR	4906488	ArgumentList	"""munmap failed.\\n"""		4904940	1					
ANR	4906489	Argument	"""munmap failed.\\n"""		4904940	0					
ANR	4906490	PrimaryExpression	"""munmap failed.\\n"""		4904940	0					
ANR	4906491	BreakStatement	break ;	627:2:20053:20058	4904940	19	True				
ANR	4906492	Label	case 'R' :	628:1:20061:20069	4904940	20	True				
ANR	4906493	CompoundStatement		253:3:6405:6436	4904940	21					
ANR	4906494	IdentifierDeclStatement	struct r2k_control_reg reg_data ;	632:3:20119:20150	4904940	0	True				
ANR	4906495	IdentifierDecl	reg_data		4904940	0					
ANR	4906496	IdentifierDeclType	struct r2k_control_reg		4904940	0					
ANR	4906497	Identifier	reg_data		4904940	1					
ANR	4906498	ExpressionStatement	ioctl_n = IOCTL_READ_CONTROL_REG	633:3:20155:20187	4904940	1	True				
ANR	4906499	AssignmentExpression	ioctl_n = IOCTL_READ_CONTROL_REG		4904940	0		=			
ANR	4906500	Identifier	ioctl_n		4904940	0					
ANR	4906501	Identifier	IOCTL_READ_CONTROL_REG		4904940	1					
ANR	4906502	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & reg_data )"	634:3:20192:20251	4904940	2	True				
ANR	4906503	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & reg_data )"		4904940	0		=			
ANR	4906504	Identifier	ret		4904940	0					
ANR	4906505	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & reg_data )"		4904940	1					
ANR	4906506	Callee	ioctl		4904940	0					
ANR	4906507	Identifier	ioctl		4904940	0					
ANR	4906508	ArgumentList	( int ) ( size_t ) iodesc -> data		4904940	1					
ANR	4906509	Argument	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906510	CastExpression	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906511	CastTarget	int		4904940	0					
ANR	4906512	CastExpression	( size_t ) iodesc -> data		4904940	1					
ANR	4906513	CastTarget	size_t		4904940	0					
ANR	4906514	PtrMemberAccess	iodesc -> data		4904940	1					
ANR	4906515	Identifier	iodesc		4904940	0					
ANR	4906516	Identifier	data		4904940	1					
ANR	4906517	Argument	ioctl_n		4904940	1					
ANR	4906518	Identifier	ioctl_n		4904940	0					
ANR	4906519	Argument	& reg_data		4904940	2					
ANR	4906520	UnaryOperationExpression	& reg_data		4904940	0					
ANR	4906521	UnaryOperator	&		4904940	0					
ANR	4906522	Identifier	reg_data		4904940	1					
ANR	4906523	IfStatement	if ( ret )		4904940	3					
ANR	4906524	Condition	ret	636:7:20261:20263	4904940	0	True				
ANR	4906525	Identifier	ret		4904940	0					
ANR	4906526	CompoundStatement		257:12:6552:6552	4904940	1					
ANR	4906527	ExpressionStatement	"io -> cb_printf ( ""ioctl err: %s\\n"" , strerror ( errno ) )"	637:4:20272:20323	4904940	0	True				
ANR	4906528	CallExpression	"io -> cb_printf ( ""ioctl err: %s\\n"" , strerror ( errno ) )"		4904940	0					
ANR	4906529	Callee	io -> cb_printf		4904940	0					
ANR	4906530	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906531	Identifier	io		4904940	0					
ANR	4906532	Identifier	cb_printf		4904940	1					
ANR	4906533	ArgumentList	"""ioctl err: %s\\n"""		4904940	1					
ANR	4906534	Argument	"""ioctl err: %s\\n"""		4904940	0					
ANR	4906535	PrimaryExpression	"""ioctl err: %s\\n"""		4904940	0					
ANR	4906536	Argument	strerror ( errno )		4904940	1					
ANR	4906537	CallExpression	strerror ( errno )		4904940	0					
ANR	4906538	Callee	strerror		4904940	0					
ANR	4906539	Identifier	strerror		4904940	0					
ANR	4906540	ArgumentList	errno		4904940	1					
ANR	4906541	Argument	errno		4904940	0					
ANR	4906542	Identifier	errno		4904940	0					
ANR	4906543	BreakStatement	break ;	638:4:20329:20334	4904940	1	True				
ANR	4906544	ExpressionStatement	reg_data . cr1 = 0	643:3:20437:20453	4904940	4	True				
ANR	4906545	AssignmentExpression	reg_data . cr1 = 0		4904940	0		=			
ANR	4906546	MemberAccess	reg_data . cr1		4904940	0					
ANR	4906547	Identifier	reg_data		4904940	0					
ANR	4906548	Identifier	cr1		4904940	1					
ANR	4906549	PrimaryExpression	0		4904940	1					
ANR	4906550	IfStatement	if ( buf [ 1 ] != 0 && buf [ 1 ] == 'p' )		4904940	5					
ANR	4906551	Condition	buf [ 1 ] != 0 && buf [ 1 ] == 'p'	644:7:20462:20489	4904940	0	True				
ANR	4906552	AndExpression	buf [ 1 ] != 0 && buf [ 1 ] == 'p'		4904940	0		&&			
ANR	4906553	EqualityExpression	buf [ 1 ] != 0		4904940	0		!=			
ANR	4906554	ArrayIndexing	buf [ 1 ]		4904940	0					
ANR	4906555	Identifier	buf		4904940	0					
ANR	4906556	PrimaryExpression	1		4904940	1					
ANR	4906557	PrimaryExpression	0		4904940	1					
ANR	4906558	EqualityExpression	buf [ 1 ] == 'p'		4904940	1		==			
ANR	4906559	ArrayIndexing	buf [ 1 ]		4904940	0					
ANR	4906560	Identifier	buf		4904940	0					
ANR	4906561	PrimaryExpression	1		4904940	1					
ANR	4906562	PrimaryExpression	'p'		4904940	1					
ANR	4906563	CompoundStatement		265:37:6778:6778	4904940	1					
ANR	4906564	ExpressionStatement	"x86_ctrl_reg_pretty_print ( io , reg_data )"	645:4:20498:20538	4904940	0	True				
ANR	4906565	CallExpression	"x86_ctrl_reg_pretty_print ( io , reg_data )"		4904940	0					
ANR	4906566	Callee	x86_ctrl_reg_pretty_print		4904940	0					
ANR	4906567	Identifier	x86_ctrl_reg_pretty_print		4904940	0					
ANR	4906568	ArgumentList	io		4904940	1					
ANR	4906569	Argument	io		4904940	0					
ANR	4906570	Identifier	io		4904940	0					
ANR	4906571	Argument	reg_data		4904940	1					
ANR	4906572	Identifier	reg_data		4904940	0					
ANR	4906573	ElseStatement	else		4904940	0					
ANR	4906574	CompoundStatement		267:10:6836:6836	4904940	0					
ANR	4906575	Statement	io	647:4:20556:20557	4904940	0	True				
ANR	4906576	Statement	->	647:6:20558:20559	4904940	1	True				
ANR	4906577	Statement	cb_printf	647:8:20560:20568	4904940	2	True				
ANR	4906578	Statement	(	647:18:20570:20570	4904940	3	True				
ANR	4906579	Statement	"""cr0 = 0x%"""	647:19:20571:20581	4904940	4	True				
ANR	4906580	Statement	PFMT64x	647:30:20582:20588	4904940	5	True				
ANR	4906581	Statement	"""\\n"""	647:37:20589:20592	4904940	6	True				
ANR	4906582	Statement	","	647:41:20593:20593	4904940	7	True				
ANR	4906583	Statement	(	647:43:20595:20595	4904940	8	True				
ANR	4906584	Statement	ut64	647:44:20596:20599	4904940	9	True				
ANR	4906585	Statement	)	647:48:20600:20600	4904940	10	True				
ANR	4906586	Statement	reg_data	647:50:20602:20609	4904940	11	True				
ANR	4906587	Statement	.	647:58:20610:20610	4904940	12	True				
ANR	4906588	Statement	cr0	647:59:20611:20613	4904940	13	True				
ANR	4906589	Statement	)	647:62:20614:20614	4904940	14	True				
ANR	4906590	ExpressionStatement		647:63:20615:20615	4904940	15	True				
ANR	4906591	Statement	io	648:4:20621:20622	4904940	16	True				
ANR	4906592	Statement	->	648:6:20623:20624	4904940	17	True				
ANR	4906593	Statement	cb_printf	648:8:20625:20633	4904940	18	True				
ANR	4906594	Statement	(	648:18:20635:20635	4904940	19	True				
ANR	4906595	Statement	"""cr1 = 0x%"""	648:19:20636:20646	4904940	20	True				
ANR	4906596	Statement	PFMT64x	648:30:20647:20653	4904940	21	True				
ANR	4906597	Statement	"""\\n"""	648:37:20654:20657	4904940	22	True				
ANR	4906598	Statement	","	648:41:20658:20658	4904940	23	True				
ANR	4906599	Statement	(	648:43:20660:20660	4904940	24	True				
ANR	4906600	Statement	ut64	648:44:20661:20664	4904940	25	True				
ANR	4906601	Statement	)	648:48:20665:20665	4904940	26	True				
ANR	4906602	Statement	reg_data	648:50:20667:20674	4904940	27	True				
ANR	4906603	Statement	.	648:58:20675:20675	4904940	28	True				
ANR	4906604	Statement	cr1	648:59:20676:20678	4904940	29	True				
ANR	4906605	Statement	)	648:62:20679:20679	4904940	30	True				
ANR	4906606	ExpressionStatement		648:63:20680:20680	4904940	31	True				
ANR	4906607	Statement	io	649:4:20686:20687	4904940	32	True				
ANR	4906608	Statement	->	649:6:20688:20689	4904940	33	True				
ANR	4906609	Statement	cb_printf	649:8:20690:20698	4904940	34	True				
ANR	4906610	Statement	(	649:18:20700:20700	4904940	35	True				
ANR	4906611	Statement	"""cr2 = 0x%"""	649:19:20701:20711	4904940	36	True				
ANR	4906612	Statement	PFMT64x	649:30:20712:20718	4904940	37	True				
ANR	4906613	Statement	"""\\n"""	649:37:20719:20722	4904940	38	True				
ANR	4906614	Statement	","	649:41:20723:20723	4904940	39	True				
ANR	4906615	Statement	(	649:43:20725:20725	4904940	40	True				
ANR	4906616	Statement	ut64	649:44:20726:20729	4904940	41	True				
ANR	4906617	Statement	)	649:48:20730:20730	4904940	42	True				
ANR	4906618	Statement	reg_data	649:50:20732:20739	4904940	43	True				
ANR	4906619	Statement	.	649:58:20740:20740	4904940	44	True				
ANR	4906620	Statement	cr2	649:59:20741:20743	4904940	45	True				
ANR	4906621	Statement	)	649:62:20744:20744	4904940	46	True				
ANR	4906622	ExpressionStatement		649:63:20745:20745	4904940	47	True				
ANR	4906623	Statement	io	650:4:20751:20752	4904940	48	True				
ANR	4906624	Statement	->	650:6:20753:20754	4904940	49	True				
ANR	4906625	Statement	cb_printf	650:8:20755:20763	4904940	50	True				
ANR	4906626	Statement	(	650:18:20765:20765	4904940	51	True				
ANR	4906627	Statement	"""cr3 = 0x%"""	650:19:20766:20776	4904940	52	True				
ANR	4906628	Statement	PFMT64x	650:30:20777:20783	4904940	53	True				
ANR	4906629	Statement	"""\\n"""	650:37:20784:20787	4904940	54	True				
ANR	4906630	Statement	","	650:41:20788:20788	4904940	55	True				
ANR	4906631	Statement	(	650:43:20790:20790	4904940	56	True				
ANR	4906632	Statement	ut64	650:44:20791:20794	4904940	57	True				
ANR	4906633	Statement	)	650:48:20795:20795	4904940	58	True				
ANR	4906634	Statement	reg_data	650:50:20797:20804	4904940	59	True				
ANR	4906635	Statement	.	650:58:20805:20805	4904940	60	True				
ANR	4906636	Statement	cr3	650:59:20806:20808	4904940	61	True				
ANR	4906637	Statement	)	650:62:20809:20809	4904940	62	True				
ANR	4906638	ExpressionStatement		650:63:20810:20810	4904940	63	True				
ANR	4906639	Statement	io	651:4:20816:20817	4904940	64	True				
ANR	4906640	Statement	->	651:6:20818:20819	4904940	65	True				
ANR	4906641	Statement	cb_printf	651:8:20820:20828	4904940	66	True				
ANR	4906642	Statement	(	651:18:20830:20830	4904940	67	True				
ANR	4906643	Statement	"""cr4 = 0x%"""	651:19:20831:20841	4904940	68	True				
ANR	4906644	Statement	PFMT64x	651:30:20842:20848	4904940	69	True				
ANR	4906645	Statement	"""\\n"""	651:37:20849:20852	4904940	70	True				
ANR	4906646	Statement	","	651:41:20853:20853	4904940	71	True				
ANR	4906647	Statement	(	651:43:20855:20855	4904940	72	True				
ANR	4906648	Statement	ut64	651:44:20856:20859	4904940	73	True				
ANR	4906649	Statement	)	651:48:20860:20860	4904940	74	True				
ANR	4906650	Statement	reg_data	651:50:20862:20869	4904940	75	True				
ANR	4906651	Statement	.	651:58:20870:20870	4904940	76	True				
ANR	4906652	Statement	cr4	651:59:20871:20873	4904940	77	True				
ANR	4906653	Statement	)	651:62:20874:20874	4904940	78	True				
ANR	4906654	ExpressionStatement		651:63:20875:20875	4904940	79	True				
ANR	4906655	Statement	io	653:4:20896:20897	4904940	80	True				
ANR	4906656	Statement	->	653:6:20898:20899	4904940	81	True				
ANR	4906657	Statement	cb_printf	653:8:20900:20908	4904940	82	True				
ANR	4906658	Statement	(	653:18:20910:20910	4904940	83	True				
ANR	4906659	Statement	"""cr8 = 0x%"""	653:19:20911:20921	4904940	84	True				
ANR	4906660	Statement	PFMT64x	653:30:20922:20928	4904940	85	True				
ANR	4906661	Statement	"""\\n"""	653:37:20929:20932	4904940	86	True				
ANR	4906662	Statement	","	653:41:20933:20933	4904940	87	True				
ANR	4906663	Statement	(	653:43:20935:20935	4904940	88	True				
ANR	4906664	Statement	ut64	653:44:20936:20939	4904940	89	True				
ANR	4906665	Statement	)	653:48:20940:20940	4904940	90	True				
ANR	4906666	Statement	reg_data	653:50:20942:20949	4904940	91	True				
ANR	4906667	Statement	.	653:58:20950:20950	4904940	92	True				
ANR	4906668	Statement	cr8	653:59:20951:20953	4904940	93	True				
ANR	4906669	Statement	)	653:62:20954:20954	4904940	94	True				
ANR	4906670	ExpressionStatement		653:63:20955:20955	4904940	95	True				
ANR	4906671	BreakStatement	break ;	677:2:21876:21881	4904940	22	True				
ANR	4906672	Label	case 'p' :	678:1:21884:21892	4904940	23	True				
ANR	4906673	CompoundStatement		307:3:8292:8322	4904940	24					
ANR	4906674	IdentifierDeclStatement	ut64 i ;	682:3:21939:21945	4904940	0	True				
ANR	4906675	IdentifierDecl	i		4904940	0					
ANR	4906676	IdentifierDeclType	ut64		4904940	0					
ANR	4906677	Identifier	i		4904940	1					
ANR	4906678	IdentifierDeclStatement	ut64 nextstart ;	683:3:21950:21964	4904940	1	True				
ANR	4906679	IdentifierDecl	nextstart		4904940	0					
ANR	4906680	IdentifierDeclType	ut64		4904940	0					
ANR	4906681	Identifier	nextstart		4904940	1					
ANR	4906682	IdentifierDeclStatement	ut64 buffsize ;	684:3:21969:21982	4904940	2	True				
ANR	4906683	IdentifierDecl	buffsize		4904940	0					
ANR	4906684	IdentifierDeclType	ut64		4904940	0					
ANR	4906685	Identifier	buffsize		4904940	1					
ANR	4906686	IdentifierDeclStatement	bool fflag = 0 ;	685:3:21987:22001	4904940	3	True				
ANR	4906687	IdentifierDecl	fflag = 0		4904940	0					
ANR	4906688	IdentifierDeclType	bool		4904940	0					
ANR	4906689	Identifier	fflag		4904940	1					
ANR	4906690	AssignmentExpression	fflag = 0		4904940	2		=			
ANR	4906691	Identifier	fflag		4904940	0					
ANR	4906692	PrimaryExpression	0		4904940	1					
ANR	4906693	IdentifierDeclStatement	struct r2k_proc_info proc_data ;	686:3:22006:22036	4904940	4	True				
ANR	4906694	IdentifierDecl	proc_data		4904940	0					
ANR	4906695	IdentifierDeclType	struct r2k_proc_info		4904940	0					
ANR	4906696	Identifier	proc_data		4904940	1					
ANR	4906697	IfStatement	if ( * ( buf + 1 ) == '*' )		4904940	5					
ANR	4906698	Condition	* ( buf + 1 ) == '*'	688:7:22046:22062	4904940	0	True				
ANR	4906699	EqualityExpression	* ( buf + 1 ) == '*'		4904940	0		==			
ANR	4906700	UnaryOperationExpression	* ( buf + 1 )		4904940	0					
ANR	4906701	UnaryOperator	*		4904940	0					
ANR	4906702	AdditiveExpression	buf + 1		4904940	1		+			
ANR	4906703	Identifier	buf		4904940	0					
ANR	4906704	PrimaryExpression	1		4904940	1					
ANR	4906705	PrimaryExpression	'*'		4904940	1					
ANR	4906706	CompoundStatement		309:26:8351:8351	4904940	1					
ANR	4906707	ExpressionStatement	fflag = 1	689:4:22071:22080	4904940	0	True				
ANR	4906708	AssignmentExpression	fflag = 1		4904940	0		=			
ANR	4906709	Identifier	fflag		4904940	0					
ANR	4906710	PrimaryExpression	1		4904940	1					
ANR	4906711	SwitchStatement	switch ( * ( buf + 1 ) )		4904940	6					
ANR	4906712	Condition	* ( buf + 1 )	691:11:22098:22107	4904940	0	True				
ANR	4906713	UnaryOperationExpression	* ( buf + 1 )		4904940	0					
ANR	4906714	UnaryOperator	*		4904940	0					
ANR	4906715	AdditiveExpression	buf + 1		4904940	1		+			
ANR	4906716	Identifier	buf		4904940	0					
ANR	4906717	PrimaryExpression	1		4904940	1					
ANR	4906718	CompoundStatement		312:23:8396:8396	4904940	1					
ANR	4906719	Label	case '*' :	692:3:22115:22123	4904940	0	True				
ANR	4906720	ExpressionStatement	fflag = 1	693:4:22129:22138	4904940	1	True				
ANR	4906721	AssignmentExpression	fflag = 1		4904940	0		=			
ANR	4906722	Identifier	fflag		4904940	0					
ANR	4906723	PrimaryExpression	1		4904940	1					
ANR	4906724	IfStatement	if ( * ( buf + 2 ) != ' ' )		4904940	2					
ANR	4906725	Condition	* ( buf + 2 ) != ' '	694:8:22148:22164	4904940	0	True				
ANR	4906726	EqualityExpression	* ( buf + 2 ) != ' '		4904940	0		!=			
ANR	4906727	UnaryOperationExpression	* ( buf + 2 )		4904940	0					
ANR	4906728	UnaryOperator	*		4904940	0					
ANR	4906729	AdditiveExpression	buf + 2		4904940	1		+			
ANR	4906730	Identifier	buf		4904940	0					
ANR	4906731	PrimaryExpression	2		4904940	1					
ANR	4906732	PrimaryExpression	' '		4904940	1					
ANR	4906733	CompoundStatement		315:27:8453:8453	4904940	1					
ANR	4906734	ExpressionStatement	"print_help ( io , ""p*"" , 0 )"	695:5:22174:22198	4904940	0	True				
ANR	4906735	CallExpression	"print_help ( io , ""p*"" , 0 )"		4904940	0					
ANR	4906736	Callee	print_help		4904940	0					
ANR	4906737	Identifier	print_help		4904940	0					
ANR	4906738	ArgumentList	io		4904940	1					
ANR	4906739	Argument	io		4904940	0					
ANR	4906740	Identifier	io		4904940	0					
ANR	4906741	Argument	"""p*"""		4904940	1					
ANR	4906742	PrimaryExpression	"""p*"""		4904940	0					
ANR	4906743	Argument	0		4904940	2					
ANR	4906744	PrimaryExpression	0		4904940	0					
ANR	4906745	GotoStatement	goto end ;	696:5:22205:22213	4904940	1	True				
ANR	4906746	Identifier	end		4904940	0					
ANR	4906747	BreakStatement	break ;	698:4:22225:22230	4904940	3	True				
ANR	4906748	Label	case ' ' :	699:3:22235:22243	4904940	4	True				
ANR	4906749	BreakStatement	break ;	700:4:22249:22254	4904940	5	True				
ANR	4906750	Label	default :	701:3:22259:22266	4904940	6	True				
ANR	4906751	Identifier	default		4904940	0					
ANR	4906752	ExpressionStatement	"print_help ( io , ""p"" , 0 )"	702:4:22272:22295	4904940	7	True				
ANR	4906753	CallExpression	"print_help ( io , ""p"" , 0 )"		4904940	0					
ANR	4906754	Callee	print_help		4904940	0					
ANR	4906755	Identifier	print_help		4904940	0					
ANR	4906756	ArgumentList	io		4904940	1					
ANR	4906757	Argument	io		4904940	0					
ANR	4906758	Identifier	io		4904940	0					
ANR	4906759	Argument	"""p"""		4904940	1					
ANR	4906760	PrimaryExpression	"""p"""		4904940	0					
ANR	4906761	Argument	0		4904940	2					
ANR	4906762	PrimaryExpression	0		4904940	0					
ANR	4906763	GotoStatement	goto end ;	703:4:22301:22309	4904940	8	True				
ANR	4906764	Identifier	end		4904940	0					
ANR	4906765	ExpressionStatement	"pid = getvalue ( buf , 1 )"	706:3:22320:22343	4904940	7	True				
ANR	4906766	AssignmentExpression	"pid = getvalue ( buf , 1 )"		4904940	0		=			
ANR	4906767	Identifier	pid		4904940	0					
ANR	4906768	CallExpression	"getvalue ( buf , 1 )"		4904940	1					
ANR	4906769	Callee	getvalue		4904940	0					
ANR	4906770	Identifier	getvalue		4904940	0					
ANR	4906771	ArgumentList	buf		4904940	1					
ANR	4906772	Argument	buf		4904940	0					
ANR	4906773	Identifier	buf		4904940	0					
ANR	4906774	Argument	1		4904940	1					
ANR	4906775	PrimaryExpression	1		4904940	0					
ANR	4906776	IfStatement	if ( pid == - 1 )		4904940	8					
ANR	4906777	Condition	pid == - 1	707:7:22352:22360	4904940	0	True				
ANR	4906778	EqualityExpression	pid == - 1		4904940	0		==			
ANR	4906779	Identifier	pid		4904940	0					
ANR	4906780	UnaryOperationExpression	- 1		4904940	1					
ANR	4906781	UnaryOperator	-		4904940	0					
ANR	4906782	PrimaryExpression	1		4904940	1					
ANR	4906783	CompoundStatement		328:18:8649:8649	4904940	1					
ANR	4906784	ExpressionStatement	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"	708:4:22369:22417	4904940	0	True				
ANR	4906785	CallExpression	"io -> cb_printf ( ""Invalid number of arguments.\\n"" )"		4904940	0					
ANR	4906786	Callee	io -> cb_printf		4904940	0					
ANR	4906787	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906788	Identifier	io		4904940	0					
ANR	4906789	Identifier	cb_printf		4904940	1					
ANR	4906790	ArgumentList	"""Invalid number of arguments.\\n"""		4904940	1					
ANR	4906791	Argument	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4906792	PrimaryExpression	"""Invalid number of arguments.\\n"""		4904940	0					
ANR	4906793	ExpressionStatement	"print_help ( io , ""p"" , 0 )"	709:4:22423:22446	4904940	1	True				
ANR	4906794	CallExpression	"print_help ( io , ""p"" , 0 )"		4904940	0					
ANR	4906795	Callee	print_help		4904940	0					
ANR	4906796	Identifier	print_help		4904940	0					
ANR	4906797	ArgumentList	io		4904940	1					
ANR	4906798	Argument	io		4904940	0					
ANR	4906799	Identifier	io		4904940	0					
ANR	4906800	Argument	"""p"""		4904940	1					
ANR	4906801	PrimaryExpression	"""p"""		4904940	0					
ANR	4906802	Argument	0		4904940	2					
ANR	4906803	PrimaryExpression	0		4904940	0					
ANR	4906804	BreakStatement	break ;	710:4:22452:22457	4904940	2	True				
ANR	4906805	ExpressionStatement	proc_data . pid = pid	712:3:22467:22486	4904940	9	True				
ANR	4906806	AssignmentExpression	proc_data . pid = pid		4904940	0		=			
ANR	4906807	MemberAccess	proc_data . pid		4904940	0					
ANR	4906808	Identifier	proc_data		4904940	0					
ANR	4906809	Identifier	pid		4904940	1					
ANR	4906810	Identifier	pid		4904940	1					
ANR	4906811	ExpressionStatement	ioctl_n = IOCTL_PRINT_PROC_INFO	713:3:22491:22522	4904940	10	True				
ANR	4906812	AssignmentExpression	ioctl_n = IOCTL_PRINT_PROC_INFO		4904940	0		=			
ANR	4906813	Identifier	ioctl_n		4904940	0					
ANR	4906814	Identifier	IOCTL_PRINT_PROC_INFO		4904940	1					
ANR	4906815	ExpressionStatement	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & proc_data )"	715:3:22528:22588	4904940	11	True				
ANR	4906816	AssignmentExpression	"ret = ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & proc_data )"		4904940	0		=			
ANR	4906817	Identifier	ret		4904940	0					
ANR	4906818	CallExpression	"ioctl ( ( int ) ( size_t ) iodesc -> data , ioctl_n , & proc_data )"		4904940	1					
ANR	4906819	Callee	ioctl		4904940	0					
ANR	4906820	Identifier	ioctl		4904940	0					
ANR	4906821	ArgumentList	( int ) ( size_t ) iodesc -> data		4904940	1					
ANR	4906822	Argument	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906823	CastExpression	( int ) ( size_t ) iodesc -> data		4904940	0					
ANR	4906824	CastTarget	int		4904940	0					
ANR	4906825	CastExpression	( size_t ) iodesc -> data		4904940	1					
ANR	4906826	CastTarget	size_t		4904940	0					
ANR	4906827	PtrMemberAccess	iodesc -> data		4904940	1					
ANR	4906828	Identifier	iodesc		4904940	0					
ANR	4906829	Identifier	data		4904940	1					
ANR	4906830	Argument	ioctl_n		4904940	1					
ANR	4906831	Identifier	ioctl_n		4904940	0					
ANR	4906832	Argument	& proc_data		4904940	2					
ANR	4906833	UnaryOperationExpression	& proc_data		4904940	0					
ANR	4906834	UnaryOperator	&		4904940	0					
ANR	4906835	Identifier	proc_data		4904940	1					
ANR	4906836	IfStatement	if ( ret )		4904940	12					
ANR	4906837	Condition	ret	716:7:22597:22599	4904940	0	True				
ANR	4906838	Identifier	ret		4904940	0					
ANR	4906839	CompoundStatement		337:12:8888:8888	4904940	1					
ANR	4906840	ExpressionStatement	"io -> cb_printf ( ""ioctl err: %s\\n"" , strerror ( errno ) )"	717:4:22608:22659	4904940	0	True				
ANR	4906841	CallExpression	"io -> cb_printf ( ""ioctl err: %s\\n"" , strerror ( errno ) )"		4904940	0					
ANR	4906842	Callee	io -> cb_printf		4904940	0					
ANR	4906843	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4906844	Identifier	io		4904940	0					
ANR	4906845	Identifier	cb_printf		4904940	1					
ANR	4906846	ArgumentList	"""ioctl err: %s\\n"""		4904940	1					
ANR	4906847	Argument	"""ioctl err: %s\\n"""		4904940	0					
ANR	4906848	PrimaryExpression	"""ioctl err: %s\\n"""		4904940	0					
ANR	4906849	Argument	strerror ( errno )		4904940	1					
ANR	4906850	CallExpression	strerror ( errno )		4904940	0					
ANR	4906851	Callee	strerror		4904940	0					
ANR	4906852	Identifier	strerror		4904940	0					
ANR	4906853	ArgumentList	errno		4904940	1					
ANR	4906854	Argument	errno		4904940	0					
ANR	4906855	Identifier	errno		4904940	0					
ANR	4906856	BreakStatement	break ;	718:4:22665:22670	4904940	1	True				
ANR	4906857	ExpressionStatement	buffsize = ( ut64 ) ( sizeof ( proc_data . vmareastruct ) / sizeof ( proc_data . vmareastruct [ 0 ] ) )	721:3:22681:22769	4904940	13	True				
ANR	4906858	AssignmentExpression	buffsize = ( ut64 ) ( sizeof ( proc_data . vmareastruct ) / sizeof ( proc_data . vmareastruct [ 0 ] ) )		4904940	0		=			
ANR	4906859	Identifier	buffsize		4904940	0					
ANR	4906860	CastExpression	( ut64 ) ( sizeof ( proc_data . vmareastruct ) / sizeof ( proc_data . vmareastruct [ 0 ] ) )		4904940	1					
ANR	4906861	CastTarget	ut64		4904940	0					
ANR	4906862	MultiplicativeExpression	sizeof ( proc_data . vmareastruct ) / sizeof ( proc_data . vmareastruct [ 0 ] )		4904940	1		/			
ANR	4906863	SizeofExpression	sizeof ( proc_data . vmareastruct )		4904940	0					
ANR	4906864	Sizeof	sizeof		4904940	0					
ANR	4906865	MemberAccess	proc_data . vmareastruct		4904940	1					
ANR	4906866	Identifier	proc_data		4904940	0					
ANR	4906867	Identifier	vmareastruct		4904940	1					
ANR	4906868	SizeofExpression	sizeof ( proc_data . vmareastruct [ 0 ] )		4904940	1					
ANR	4906869	Sizeof	sizeof		4904940	0					
ANR	4906870	ArrayIndexing	proc_data . vmareastruct [ 0 ]		4904940	1					
ANR	4906871	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4906872	Identifier	proc_data		4904940	0					
ANR	4906873	Identifier	vmareastruct		4904940	1					
ANR	4906874	PrimaryExpression	0		4904940	1					
ANR	4906875	IfStatement	if ( fflag )		4904940	14					
ANR	4906876	Condition	fflag	722:7:22778:22782	4904940	0	True				
ANR	4906877	Identifier	fflag		4904940	0					
ANR	4906878	CompoundStatement		344:4:9077:9086	4904940	1					
ANR	4906879	IdentifierDeclStatement	int j = 0 ;	723:4:22791:22800	4904940	0	True				
ANR	4906880	IdentifierDecl	j = 0		4904940	0					
ANR	4906881	IdentifierDeclType	int		4904940	0					
ANR	4906882	Identifier	j		4904940	1					
ANR	4906883	AssignmentExpression	j = 0		4904940	2		=			
ANR	4906884	Identifier	j		4904940	0					
ANR	4906885	PrimaryExpression	0		4904940	1					
ANR	4906886	ForStatement	for ( i = 0 ; i + 1 < buffsize ; )		4904940	1					
ANR	4906887	ForInit	i = 0 ;	724:9:22811:22816	4904940	0	True				
ANR	4906888	AssignmentExpression	i = 0		4904940	0		=			
ANR	4906889	Identifier	i		4904940	0					
ANR	4906890	PrimaryExpression	0		4904940	1					
ANR	4906891	Condition	i + 1 < buffsize	724:16:22818:22833	4904940	1	True				
ANR	4906892	RelationalExpression	i + 1 < buffsize		4904940	0		<			
ANR	4906893	AdditiveExpression	i + 1		4904940	0		+			
ANR	4906894	Identifier	i		4904940	0					
ANR	4906895	PrimaryExpression	1		4904940	1					
ANR	4906896	Identifier	buffsize		4904940	1					
ANR	4906897	CompoundStatement		345:35:9123:9123	4904940	2					
ANR	4906898	ExpressionStatement	nextstart = 0	725:5:22844:22857	4904940	0	True				
ANR	4906899	AssignmentExpression	nextstart = 0		4904940	0		=			
ANR	4906900	Identifier	nextstart		4904940	0					
ANR	4906901	PrimaryExpression	0		4904940	1					
ANR	4906902	IfStatement	if ( i + 7 < buffsize )		4904940	1					
ANR	4906903	Condition	i + 7 < buffsize	726:9:22868:22883	4904940	0	True				
ANR	4906904	RelationalExpression	i + 7 < buffsize		4904940	0		<			
ANR	4906905	AdditiveExpression	i + 7		4904940	0		+			
ANR	4906906	Identifier	i		4904940	0					
ANR	4906907	PrimaryExpression	7		4904940	1					
ANR	4906908	Identifier	buffsize		4904940	1					
ANR	4906909	CompoundStatement		347:27:9172:9172	4904940	1					
ANR	4906910	ExpressionStatement	nextstart = i + 7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )	727:6:22894:23011	4904940	0	True				
ANR	4906911	AssignmentExpression	nextstart = i + 7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	0		=			
ANR	4906912	Identifier	nextstart		4904940	0					
ANR	4906913	AdditiveExpression	i + 7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	1		+			
ANR	4906914	Identifier	i		4904940	0					
ANR	4906915	AdditiveExpression	7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	1		+			
ANR	4906916	PrimaryExpression	7		4904940	0					
ANR	4906917	MultiplicativeExpression	( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	1		/			
ANR	4906918	AdditiveExpression	strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t )		4904940	0		-			
ANR	4906919	CallExpression	strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) )		4904940	0					
ANR	4906920	Callee	strlen		4904940	0					
ANR	4906921	Identifier	strlen		4904940	0					
ANR	4906922	ArgumentList	( const char * ) & ( proc_data . vmareastruct [ i + 7 ] )		4904940	1					
ANR	4906923	Argument	( const char * ) & ( proc_data . vmareastruct [ i + 7 ] )		4904940	0					
ANR	4906924	CastExpression	( const char * ) & ( proc_data . vmareastruct [ i + 7 ] )		4904940	0					
ANR	4906925	CastTarget	const char *		4904940	0					
ANR	4906926	UnaryOperationExpression	& ( proc_data . vmareastruct [ i + 7 ] )		4904940	1					
ANR	4906927	UnaryOperator	&		4904940	0					
ANR	4906928	ArrayIndexing	proc_data . vmareastruct [ i + 7 ]		4904940	1					
ANR	4906929	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4906930	Identifier	proc_data		4904940	0					
ANR	4906931	Identifier	vmareastruct		4904940	1					
ANR	4906932	AdditiveExpression	i + 7		4904940	1		+			
ANR	4906933	Identifier	i		4904940	0					
ANR	4906934	PrimaryExpression	7		4904940	1					
ANR	4906935	AdditiveExpression	1 + sizeof ( size_t )		4904940	1		+			
ANR	4906936	PrimaryExpression	1		4904940	0					
ANR	4906937	SizeofExpression	sizeof ( size_t )		4904940	1					
ANR	4906938	Sizeof	sizeof		4904940	0					
ANR	4906939	SizeofOperand	size_t		4904940	1					
ANR	4906940	SizeofExpression	sizeof ( size_t )		4904940	1					
ANR	4906941	Sizeof	sizeof		4904940	0					
ANR	4906942	SizeofOperand	size_t		4904940	1					
ANR	4906943	IfStatement	if ( ! proc_data . vmareastruct [ i ] && ( i + 1 < buffsize ) && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize )		4904940	2					
ANR	4906944	Condition	! proc_data . vmareastruct [ i ] && ( i + 1 < buffsize ) && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize	729:9:23029:23170	4904940	0	True				
ANR	4906945	AndExpression	! proc_data . vmareastruct [ i ] && ( i + 1 < buffsize ) && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize		4904940	0		&&			
ANR	4906946	UnaryOperationExpression	! proc_data . vmareastruct [ i ]		4904940	0					
ANR	4906947	UnaryOperator	!		4904940	0					
ANR	4906948	ArrayIndexing	proc_data . vmareastruct [ i ]		4904940	1					
ANR	4906949	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4906950	Identifier	proc_data		4904940	0					
ANR	4906951	Identifier	vmareastruct		4904940	1					
ANR	4906952	Identifier	i		4904940	1					
ANR	4906953	AndExpression	( i + 1 < buffsize ) && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize		4904940	1		&&			
ANR	4906954	RelationalExpression	i + 1 < buffsize		4904940	0		<			
ANR	4906955	AdditiveExpression	i + 1		4904940	0		+			
ANR	4906956	Identifier	i		4904940	0					
ANR	4906957	PrimaryExpression	1		4904940	1					
ANR	4906958	Identifier	buffsize		4904940	1					
ANR	4906959	AndExpression	! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize		4904940	1		&&			
ANR	4906960	UnaryOperationExpression	! proc_data . vmareastruct [ i + 1 ]		4904940	0					
ANR	4906961	UnaryOperator	!		4904940	0					
ANR	4906962	ArrayIndexing	proc_data . vmareastruct [ i + 1 ]		4904940	1					
ANR	4906963	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4906964	Identifier	proc_data		4904940	0					
ANR	4906965	Identifier	vmareastruct		4904940	1					
ANR	4906966	AdditiveExpression	i + 1		4904940	1		+			
ANR	4906967	Identifier	i		4904940	0					
ANR	4906968	PrimaryExpression	1		4904940	1					
ANR	4906969	AndExpression	nextstart > 0 && nextstart - 1 < buffsize		4904940	1		&&			
ANR	4906970	RelationalExpression	nextstart > 0		4904940	0		>			
ANR	4906971	Identifier	nextstart		4904940	0					
ANR	4906972	PrimaryExpression	0		4904940	1					
ANR	4906973	RelationalExpression	nextstart - 1 < buffsize		4904940	1		<			
ANR	4906974	AdditiveExpression	nextstart - 1		4904940	0		-			
ANR	4906975	Identifier	nextstart		4904940	0					
ANR	4906976	PrimaryExpression	1		4904940	1					
ANR	4906977	Identifier	buffsize		4904940	1					
ANR	4906978	CompoundStatement		352:52:9459:9459	4904940	1					
ANR	4906979	BreakStatement	break ;	732:6:23181:23186	4904940	0	True				
ANR	4906980	Statement	io	734:5:23200:23201	4904940	3	True				
ANR	4906981	Statement	->	734:7:23202:23203	4904940	4	True				
ANR	4906982	Statement	cb_printf	734:9:23204:23212	4904940	5	True				
ANR	4906983	Statement	(	734:19:23214:23214	4904940	6	True				
ANR	4906984	Statement	"""f pid.%d.%s.%d.start=0x%"""	734:20:23215:23240	4904940	7	True				
ANR	4906985	Statement	PFMT64x	734:46:23241:23247	4904940	8	True				
ANR	4906986	Statement	"""\\n"""	734:53:23248:23251	4904940	9	True				
ANR	4906987	Statement	","	734:57:23252:23252	4904940	10	True				
ANR	4906988	Statement	proc_data	734:59:23254:23262	4904940	11	True				
ANR	4906989	Statement	.	734:68:23263:23263	4904940	12	True				
ANR	4906990	Statement	pid	734:69:23264:23266	4904940	13	True				
ANR	4906991	Statement	","	734:72:23267:23267	4904940	14	True				
ANR	4906992	Statement	&	734:74:23269:23269	4904940	15	True				
ANR	4906993	Statement	(	734:75:23270:23270	4904940	16	True				
ANR	4906994	Statement	proc_data	734:76:23271:23279	4904940	17	True				
ANR	4906995	Statement	.	734:85:23280:23280	4904940	18	True				
ANR	4906996	Statement	vmareastruct	734:86:23281:23292	4904940	19	True				
ANR	4906997	Statement	[	734:98:23293:23293	4904940	20	True				
ANR	4906998	Statement	i	734:99:23294:23294	4904940	21	True				
ANR	4906999	Statement	+	734:101:23296:23296	4904940	22	True				
ANR	4907000	Statement	7	734:103:23298:23298	4904940	23	True				
ANR	4907001	Statement	]	734:104:23299:23299	4904940	24	True				
ANR	4907002	Statement	)	734:105:23300:23300	4904940	25	True				
ANR	4907003	Statement	","	734:106:23301:23301	4904940	26	True				
ANR	4907004	Statement	j	734:108:23303:23303	4904940	27	True				
ANR	4907005	Statement	","	734:109:23304:23304	4904940	28	True				
ANR	4907006	Statement	(	734:111:23306:23306	4904940	29	True				
ANR	4907007	Statement	ut64	734:112:23307:23310	4904940	30	True				
ANR	4907008	Statement	)	734:116:23311:23311	4904940	31	True				
ANR	4907009	Statement	proc_data	734:118:23313:23321	4904940	32	True				
ANR	4907010	Statement	.	734:127:23322:23322	4904940	33	True				
ANR	4907011	Statement	vmareastruct	734:128:23323:23334	4904940	34	True				
ANR	4907012	Statement	[	734:140:23335:23335	4904940	35	True				
ANR	4907013	Statement	i	734:141:23336:23336	4904940	36	True				
ANR	4907014	Statement	]	734:142:23337:23337	4904940	37	True				
ANR	4907015	Statement	)	734:143:23338:23338	4904940	38	True				
ANR	4907016	ExpressionStatement		734:144:23339:23339	4904940	39	True				
ANR	4907017	Statement	io	735:5:23346:23347	4904940	40	True				
ANR	4907018	Statement	->	735:7:23348:23349	4904940	41	True				
ANR	4907019	Statement	cb_printf	735:9:23350:23358	4904940	42	True				
ANR	4907020	Statement	(	735:19:23360:23360	4904940	43	True				
ANR	4907021	Statement	"""f pid.%d.%s.%d.end=0x%"""	735:20:23361:23384	4904940	44	True				
ANR	4907022	Statement	PFMT64x	735:44:23385:23391	4904940	45	True				
ANR	4907023	Statement	"""\\n"""	735:51:23392:23395	4904940	46	True				
ANR	4907024	Statement	","	735:55:23396:23396	4904940	47	True				
ANR	4907025	Statement	proc_data	735:57:23398:23406	4904940	48	True				
ANR	4907026	Statement	.	735:66:23407:23407	4904940	49	True				
ANR	4907027	Statement	pid	735:67:23408:23410	4904940	50	True				
ANR	4907028	Statement	","	735:70:23411:23411	4904940	51	True				
ANR	4907029	Statement	&	735:72:23413:23413	4904940	52	True				
ANR	4907030	Statement	(	735:73:23414:23414	4904940	53	True				
ANR	4907031	Statement	proc_data	735:74:23415:23423	4904940	54	True				
ANR	4907032	Statement	.	735:83:23424:23424	4904940	55	True				
ANR	4907033	Statement	vmareastruct	735:84:23425:23436	4904940	56	True				
ANR	4907034	Statement	[	735:96:23437:23437	4904940	57	True				
ANR	4907035	Statement	i	735:97:23438:23438	4904940	58	True				
ANR	4907036	Statement	+	735:99:23440:23440	4904940	59	True				
ANR	4907037	Statement	7	735:101:23442:23442	4904940	60	True				
ANR	4907038	Statement	]	735:102:23443:23443	4904940	61	True				
ANR	4907039	Statement	)	735:103:23444:23444	4904940	62	True				
ANR	4907040	Statement	","	735:104:23445:23445	4904940	63	True				
ANR	4907041	Statement	j	735:106:23447:23447	4904940	64	True				
ANR	4907042	Statement	","	735:107:23448:23448	4904940	65	True				
ANR	4907043	Statement	(	735:109:23450:23450	4904940	66	True				
ANR	4907044	Statement	ut64	735:110:23451:23454	4904940	67	True				
ANR	4907045	Statement	)	735:114:23455:23455	4904940	68	True				
ANR	4907046	Statement	proc_data	735:116:23457:23465	4904940	69	True				
ANR	4907047	Statement	.	735:125:23466:23466	4904940	70	True				
ANR	4907048	Statement	vmareastruct	735:126:23467:23478	4904940	71	True				
ANR	4907049	Statement	[	735:138:23479:23479	4904940	72	True				
ANR	4907050	Statement	i	735:139:23480:23480	4904940	73	True				
ANR	4907051	Statement	+	735:141:23482:23482	4904940	74	True				
ANR	4907052	Statement	1	735:143:23484:23484	4904940	75	True				
ANR	4907053	Statement	]	735:144:23485:23485	4904940	76	True				
ANR	4907054	Statement	)	735:145:23486:23486	4904940	77	True				
ANR	4907055	ExpressionStatement		735:146:23487:23487	4904940	78	True				
ANR	4907056	ExpressionStatement	j += 1	736:5:23494:23500	4904940	79	True				
ANR	4907057	AssignmentExpression	j += 1		4904940	0		+=			
ANR	4907058	Identifier	j		4904940	0					
ANR	4907059	PrimaryExpression	1		4904940	1					
ANR	4907060	ExpressionStatement	i = nextstart	737:5:23507:23520	4904940	80	True				
ANR	4907061	AssignmentExpression	i = nextstart		4904940	0		=			
ANR	4907062	Identifier	i		4904940	0					
ANR	4907063	Identifier	nextstart		4904940	1					
ANR	4907064	Statement	io	739:4:23532:23533	4904940	2	True				
ANR	4907065	Statement	->	739:6:23534:23535	4904940	3	True				
ANR	4907066	Statement	cb_printf	739:8:23536:23544	4904940	4	True				
ANR	4907067	Statement	(	739:18:23546:23546	4904940	5	True				
ANR	4907068	Statement	"""f pid.%d.task_struct = 0x%08"""	739:19:23547:23576	4904940	6	True				
ANR	4907069	Statement	PFMT64x	739:49:23577:23583	4904940	7	True				
ANR	4907070	Statement	"""\\n"""	739:56:23584:23587	4904940	8	True				
ANR	4907071	Statement	","	739:60:23588:23588	4904940	9	True				
ANR	4907072	Statement	proc_data	739:62:23590:23598	4904940	10	True				
ANR	4907073	Statement	.	739:71:23599:23599	4904940	11	True				
ANR	4907074	Statement	pid	739:72:23600:23602	4904940	12	True				
ANR	4907075	Statement	","	739:75:23603:23603	4904940	13	True				
ANR	4907076	Statement	proc_data	739:77:23605:23613	4904940	14	True				
ANR	4907077	Statement	.	739:86:23614:23614	4904940	15	True				
ANR	4907078	Statement	task	739:87:23615:23618	4904940	16	True				
ANR	4907079	Statement	)	739:91:23619:23619	4904940	17	True				
ANR	4907080	ExpressionStatement		739:92:23620:23620	4904940	18	True				
ANR	4907081	ElseStatement	else		4904940	0					
ANR	4907082	CompoundStatement		361:10:9918:9918	4904940	0					
ANR	4907083	ExpressionStatement	"io -> cb_printf ( ""pid = %d\\nprocess name = %s\\n"" , proc_data . pid , proc_data . comm )"	741:4:23638:23716	4904940	0	True				
ANR	4907084	CallExpression	"io -> cb_printf ( ""pid = %d\\nprocess name = %s\\n"" , proc_data . pid , proc_data . comm )"		4904940	0					
ANR	4907085	Callee	io -> cb_printf		4904940	0					
ANR	4907086	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4907087	Identifier	io		4904940	0					
ANR	4907088	Identifier	cb_printf		4904940	1					
ANR	4907089	ArgumentList	"""pid = %d\\nprocess name = %s\\n"""		4904940	1					
ANR	4907090	Argument	"""pid = %d\\nprocess name = %s\\n"""		4904940	0					
ANR	4907091	PrimaryExpression	"""pid = %d\\nprocess name = %s\\n"""		4904940	0					
ANR	4907092	Argument	proc_data . pid		4904940	1					
ANR	4907093	MemberAccess	proc_data . pid		4904940	0					
ANR	4907094	Identifier	proc_data		4904940	0					
ANR	4907095	Identifier	pid		4904940	1					
ANR	4907096	Argument	proc_data . comm		4904940	2					
ANR	4907097	MemberAccess	proc_data . comm		4904940	0					
ANR	4907098	Identifier	proc_data		4904940	0					
ANR	4907099	Identifier	comm		4904940	1					
ANR	4907100	Statement	io	742:4:23722:23723	4904940	1	True				
ANR	4907101	Statement	->	742:6:23724:23725	4904940	2	True				
ANR	4907102	Statement	cb_printf	742:8:23726:23734	4904940	3	True				
ANR	4907103	Statement	(	742:18:23736:23736	4904940	4	True				
ANR	4907104	Statement	"""task_struct = 0x%08"""	742:19:23737:23757	4904940	5	True				
ANR	4907105	Statement	PFMT64x	742:40:23758:23764	4904940	6	True				
ANR	4907106	Statement	"""\\n"""	742:47:23765:23768	4904940	7	True				
ANR	4907107	Statement	","	742:51:23769:23769	4904940	8	True				
ANR	4907108	Statement	proc_data	742:53:23771:23779	4904940	9	True				
ANR	4907109	Statement	.	742:62:23780:23780	4904940	10	True				
ANR	4907110	Statement	task	742:63:23781:23784	4904940	11	True				
ANR	4907111	Statement	)	742:67:23785:23785	4904940	12	True				
ANR	4907112	ExpressionStatement		742:68:23786:23786	4904940	13	True				
ANR	4907113	ForStatement	for ( i = 0 ; i < buffsize ; )		4904940	14					
ANR	4907114	ForInit	i = 0 ;	743:9:23797:23802	4904940	0	True				
ANR	4907115	AssignmentExpression	i = 0		4904940	0		=			
ANR	4907116	Identifier	i		4904940	0					
ANR	4907117	PrimaryExpression	0		4904940	1					
ANR	4907118	Condition	i < buffsize	743:16:23804:23815	4904940	1	True				
ANR	4907119	RelationalExpression	i < buffsize		4904940	0		<			
ANR	4907120	Identifier	i		4904940	0					
ANR	4907121	Identifier	buffsize		4904940	1					
ANR	4907122	CompoundStatement		364:31:10105:10105	4904940	2					
ANR	4907123	ExpressionStatement	nextstart = 0	744:5:23826:23839	4904940	0	True				
ANR	4907124	AssignmentExpression	nextstart = 0		4904940	0		=			
ANR	4907125	Identifier	nextstart		4904940	0					
ANR	4907126	PrimaryExpression	0		4904940	1					
ANR	4907127	IfStatement	if ( i + 7 < buffsize )		4904940	1					
ANR	4907128	Condition	i + 7 < buffsize	745:9:23850:23865	4904940	0	True				
ANR	4907129	RelationalExpression	i + 7 < buffsize		4904940	0		<			
ANR	4907130	AdditiveExpression	i + 7		4904940	0		+			
ANR	4907131	Identifier	i		4904940	0					
ANR	4907132	PrimaryExpression	7		4904940	1					
ANR	4907133	Identifier	buffsize		4904940	1					
ANR	4907134	CompoundStatement		366:27:10154:10154	4904940	1					
ANR	4907135	ExpressionStatement	nextstart = i + 7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )	746:6:23876:23993	4904940	0	True				
ANR	4907136	AssignmentExpression	nextstart = i + 7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	0		=			
ANR	4907137	Identifier	nextstart		4904940	0					
ANR	4907138	AdditiveExpression	i + 7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	1		+			
ANR	4907139	Identifier	i		4904940	0					
ANR	4907140	AdditiveExpression	7 + ( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	1		+			
ANR	4907141	PrimaryExpression	7		4904940	0					
ANR	4907142	MultiplicativeExpression	( strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t ) ) / sizeof ( size_t )		4904940	1		/			
ANR	4907143	AdditiveExpression	strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) ) - 1 + sizeof ( size_t )		4904940	0		-			
ANR	4907144	CallExpression	strlen ( ( const char * ) & ( proc_data . vmareastruct [ i + 7 ] ) )		4904940	0					
ANR	4907145	Callee	strlen		4904940	0					
ANR	4907146	Identifier	strlen		4904940	0					
ANR	4907147	ArgumentList	( const char * ) & ( proc_data . vmareastruct [ i + 7 ] )		4904940	1					
ANR	4907148	Argument	( const char * ) & ( proc_data . vmareastruct [ i + 7 ] )		4904940	0					
ANR	4907149	CastExpression	( const char * ) & ( proc_data . vmareastruct [ i + 7 ] )		4904940	0					
ANR	4907150	CastTarget	const char *		4904940	0					
ANR	4907151	UnaryOperationExpression	& ( proc_data . vmareastruct [ i + 7 ] )		4904940	1					
ANR	4907152	UnaryOperator	&		4904940	0					
ANR	4907153	ArrayIndexing	proc_data . vmareastruct [ i + 7 ]		4904940	1					
ANR	4907154	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4907155	Identifier	proc_data		4904940	0					
ANR	4907156	Identifier	vmareastruct		4904940	1					
ANR	4907157	AdditiveExpression	i + 7		4904940	1		+			
ANR	4907158	Identifier	i		4904940	0					
ANR	4907159	PrimaryExpression	7		4904940	1					
ANR	4907160	AdditiveExpression	1 + sizeof ( size_t )		4904940	1		+			
ANR	4907161	PrimaryExpression	1		4904940	0					
ANR	4907162	SizeofExpression	sizeof ( size_t )		4904940	1					
ANR	4907163	Sizeof	sizeof		4904940	0					
ANR	4907164	SizeofOperand	size_t		4904940	1					
ANR	4907165	SizeofExpression	sizeof ( size_t )		4904940	1					
ANR	4907166	Sizeof	sizeof		4904940	0					
ANR	4907167	SizeofOperand	size_t		4904940	1					
ANR	4907168	IfStatement	if ( ! proc_data . vmareastruct [ i ] && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize )		4904940	2					
ANR	4907169	Condition	! proc_data . vmareastruct [ i ] && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize	748:9:24011:24124	4904940	0	True				
ANR	4907170	AndExpression	! proc_data . vmareastruct [ i ] && ! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize		4904940	0		&&			
ANR	4907171	UnaryOperationExpression	! proc_data . vmareastruct [ i ]		4904940	0					
ANR	4907172	UnaryOperator	!		4904940	0					
ANR	4907173	ArrayIndexing	proc_data . vmareastruct [ i ]		4904940	1					
ANR	4907174	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4907175	Identifier	proc_data		4904940	0					
ANR	4907176	Identifier	vmareastruct		4904940	1					
ANR	4907177	Identifier	i		4904940	1					
ANR	4907178	AndExpression	! proc_data . vmareastruct [ i + 1 ] && nextstart > 0 && nextstart - 1 < buffsize		4904940	1		&&			
ANR	4907179	UnaryOperationExpression	! proc_data . vmareastruct [ i + 1 ]		4904940	0					
ANR	4907180	UnaryOperator	!		4904940	0					
ANR	4907181	ArrayIndexing	proc_data . vmareastruct [ i + 1 ]		4904940	1					
ANR	4907182	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4907183	Identifier	proc_data		4904940	0					
ANR	4907184	Identifier	vmareastruct		4904940	1					
ANR	4907185	AdditiveExpression	i + 1		4904940	1		+			
ANR	4907186	Identifier	i		4904940	0					
ANR	4907187	PrimaryExpression	1		4904940	1					
ANR	4907188	AndExpression	nextstart > 0 && nextstart - 1 < buffsize		4904940	1		&&			
ANR	4907189	RelationalExpression	nextstart > 0		4904940	0		>			
ANR	4907190	Identifier	nextstart		4904940	0					
ANR	4907191	PrimaryExpression	0		4904940	1					
ANR	4907192	RelationalExpression	nextstart - 1 < buffsize		4904940	1		<			
ANR	4907193	AdditiveExpression	nextstart - 1		4904940	0		-			
ANR	4907194	Identifier	nextstart		4904940	0					
ANR	4907195	PrimaryExpression	1		4904940	1					
ANR	4907196	Identifier	buffsize		4904940	1					
ANR	4907197	CompoundStatement		370:52:10413:10413	4904940	1					
ANR	4907198	BreakStatement	break ;	750:6:24135:24140	4904940	0	True				
ANR	4907199	Statement	io	752:5:24154:24155	4904940	3	True				
ANR	4907200	Statement	->	752:7:24156:24157	4904940	4	True				
ANR	4907201	Statement	cb_printf	752:9:24158:24166	4904940	5	True				
ANR	4907202	Statement	(	752:19:24168:24168	4904940	6	True				
ANR	4907203	Statement	"""0x%08"""	752:20:24169:24175	4904940	7	True				
ANR	4907204	Statement	PFMT64x	752:27:24176:24182	4904940	8	True				
ANR	4907205	Statement	""" - 0x%08"""	752:34:24183:24192	4904940	9	True				
ANR	4907206	Statement	PFMT64x	752:44:24193:24199	4904940	10	True				
ANR	4907207	Statement	""" %c%c%c%c 0x%08"""	752:51:24200:24216	4904940	11	True				
ANR	4907208	Statement	PFMT64x	752:68:24217:24223	4904940	12	True				
ANR	4907209	Statement	""" %02x:%02x %-8"""	752:75:24224:24239	4904940	13	True				
ANR	4907210	Statement	PFMT64u	752:91:24240:24246	4904940	14	True				
ANR	4907211	Statement	""""""	752:98:24247:24248	4904940	15	True				
ANR	4907212	Statement	","	752:100:24249:24249	4904940	16	True				
ANR	4907213	Statement	(	753:7:24258:24258	4904940	17	True				
ANR	4907214	Statement	ut64	753:8:24259:24262	4904940	18	True				
ANR	4907215	Statement	)	753:12:24263:24263	4904940	19	True				
ANR	4907216	Statement	proc_data	753:14:24265:24273	4904940	20	True				
ANR	4907217	Statement	.	753:23:24274:24274	4904940	21	True				
ANR	4907218	Statement	vmareastruct	753:24:24275:24286	4904940	22	True				
ANR	4907219	Statement	[	753:36:24287:24287	4904940	23	True				
ANR	4907220	Statement	i	753:37:24288:24288	4904940	24	True				
ANR	4907221	Statement	]	753:38:24289:24289	4904940	25	True				
ANR	4907222	Statement	","	753:39:24290:24290	4904940	26	True				
ANR	4907223	Statement	(	753:41:24292:24292	4904940	27	True				
ANR	4907224	Statement	ut64	753:42:24293:24296	4904940	28	True				
ANR	4907225	Statement	)	753:46:24297:24297	4904940	29	True				
ANR	4907226	Statement	proc_data	753:48:24299:24307	4904940	30	True				
ANR	4907227	Statement	.	753:57:24308:24308	4904940	31	True				
ANR	4907228	Statement	vmareastruct	753:58:24309:24320	4904940	32	True				
ANR	4907229	Statement	[	753:70:24321:24321	4904940	33	True				
ANR	4907230	Statement	i	753:71:24322:24322	4904940	34	True				
ANR	4907231	Statement	+	753:72:24323:24323	4904940	35	True				
ANR	4907232	Statement	1	753:73:24324:24324	4904940	36	True				
ANR	4907233	Statement	]	753:74:24325:24325	4904940	37	True				
ANR	4907234	Statement	","	753:75:24326:24326	4904940	38	True				
ANR	4907235	Statement	proc_data	754:7:24335:24343	4904940	39	True				
ANR	4907236	Statement	.	754:16:24344:24344	4904940	40	True				
ANR	4907237	Statement	vmareastruct	754:17:24345:24356	4904940	41	True				
ANR	4907238	Statement	[	754:29:24357:24357	4904940	42	True				
ANR	4907239	Statement	i	754:30:24358:24358	4904940	43	True				
ANR	4907240	Statement	+	754:32:24360:24360	4904940	44	True				
ANR	4907241	Statement	2	754:34:24362:24362	4904940	45	True				
ANR	4907242	Statement	]	754:35:24363:24363	4904940	46	True				
ANR	4907243	Statement	&	754:37:24365:24365	4904940	47	True				
ANR	4907244	Statement	VM_READ	754:39:24367:24373	4904940	48	True				
ANR	4907245	Statement	?	754:47:24375:24375	4904940	49	True				
ANR	4907246	Label	'r' :	754:49:24377:24381	4904940	50	True				
ANR	4907247	Statement	'-'	754:55:24383:24385	4904940	51	True				
ANR	4907248	Statement	","	754:58:24386:24386	4904940	52	True				
ANR	4907249	Statement	proc_data	755:7:24395:24403	4904940	53	True				
ANR	4907250	Statement	.	755:16:24404:24404	4904940	54	True				
ANR	4907251	Statement	vmareastruct	755:17:24405:24416	4904940	55	True				
ANR	4907252	Statement	[	755:29:24417:24417	4904940	56	True				
ANR	4907253	Statement	i	755:30:24418:24418	4904940	57	True				
ANR	4907254	Statement	+	755:32:24420:24420	4904940	58	True				
ANR	4907255	Statement	2	755:34:24422:24422	4904940	59	True				
ANR	4907256	Statement	]	755:35:24423:24423	4904940	60	True				
ANR	4907257	Statement	&	755:37:24425:24425	4904940	61	True				
ANR	4907258	Statement	VM_WRITE	755:39:24427:24434	4904940	62	True				
ANR	4907259	Statement	?	755:48:24436:24436	4904940	63	True				
ANR	4907260	Label	'w' :	755:50:24438:24442	4904940	64	True				
ANR	4907261	Statement	'-'	755:56:24444:24446	4904940	65	True				
ANR	4907262	Statement	","	755:59:24447:24447	4904940	66	True				
ANR	4907263	Statement	proc_data	756:7:24456:24464	4904940	67	True				
ANR	4907264	Statement	.	756:16:24465:24465	4904940	68	True				
ANR	4907265	Statement	vmareastruct	756:17:24466:24477	4904940	69	True				
ANR	4907266	Statement	[	756:29:24478:24478	4904940	70	True				
ANR	4907267	Statement	i	756:30:24479:24479	4904940	71	True				
ANR	4907268	Statement	+	756:32:24481:24481	4904940	72	True				
ANR	4907269	Statement	2	756:34:24483:24483	4904940	73	True				
ANR	4907270	Statement	]	756:35:24484:24484	4904940	74	True				
ANR	4907271	Statement	&	756:37:24486:24486	4904940	75	True				
ANR	4907272	Statement	VM_EXEC	756:39:24488:24494	4904940	76	True				
ANR	4907273	Statement	?	756:47:24496:24496	4904940	77	True				
ANR	4907274	Label	'x' :	756:49:24498:24502	4904940	78	True				
ANR	4907275	Statement	'-'	756:55:24504:24506	4904940	79	True				
ANR	4907276	Statement	","	756:58:24507:24507	4904940	80	True				
ANR	4907277	Statement	proc_data	757:7:24516:24524	4904940	81	True				
ANR	4907278	Statement	.	757:16:24525:24525	4904940	82	True				
ANR	4907279	Statement	vmareastruct	757:17:24526:24537	4904940	83	True				
ANR	4907280	Statement	[	757:29:24538:24538	4904940	84	True				
ANR	4907281	Statement	i	757:30:24539:24539	4904940	85	True				
ANR	4907282	Statement	+	757:32:24541:24541	4904940	86	True				
ANR	4907283	Statement	2	757:34:24543:24543	4904940	87	True				
ANR	4907284	Statement	]	757:35:24544:24544	4904940	88	True				
ANR	4907285	Statement	&	757:37:24546:24546	4904940	89	True				
ANR	4907286	Statement	VM_MAYSHARE	757:39:24548:24558	4904940	90	True				
ANR	4907287	Statement	?	757:51:24560:24560	4904940	91	True				
ANR	4907288	Label	's' :	757:53:24562:24566	4904940	92	True				
ANR	4907289	Statement	'p'	757:59:24568:24570	4904940	93	True				
ANR	4907290	Statement	","	757:62:24571:24571	4904940	94	True				
ANR	4907291	Statement	(	758:7:24580:24580	4904940	95	True				
ANR	4907292	Statement	ut64	758:8:24581:24584	4904940	96	True				
ANR	4907293	Statement	)	758:12:24585:24585	4904940	97	True				
ANR	4907294	Statement	proc_data	758:14:24587:24595	4904940	98	True				
ANR	4907295	Statement	.	758:23:24596:24596	4904940	99	True				
ANR	4907296	Statement	vmareastruct	758:24:24597:24608	4904940	100	True				
ANR	4907297	Statement	[	758:36:24609:24609	4904940	101	True				
ANR	4907298	Statement	i	758:37:24610:24610	4904940	102	True				
ANR	4907299	Statement	+	758:39:24612:24612	4904940	103	True				
ANR	4907300	Statement	3	758:41:24614:24614	4904940	104	True				
ANR	4907301	Statement	]	758:42:24615:24615	4904940	105	True				
ANR	4907302	Statement	","	758:43:24616:24616	4904940	106	True				
ANR	4907303	Statement	proc_data	758:45:24618:24626	4904940	107	True				
ANR	4907304	Statement	.	758:54:24627:24627	4904940	108	True				
ANR	4907305	Statement	vmareastruct	758:55:24628:24639	4904940	109	True				
ANR	4907306	Statement	[	758:67:24640:24640	4904940	110	True				
ANR	4907307	Statement	i	758:68:24641:24641	4904940	111	True				
ANR	4907308	Statement	+	758:70:24643:24643	4904940	112	True				
ANR	4907309	Statement	4	758:72:24645:24645	4904940	113	True				
ANR	4907310	Statement	]	758:73:24646:24646	4904940	114	True				
ANR	4907311	Statement	","	758:74:24647:24647	4904940	115	True				
ANR	4907312	Statement	proc_data	759:7:24656:24664	4904940	116	True				
ANR	4907313	Statement	.	759:16:24665:24665	4904940	117	True				
ANR	4907314	Statement	vmareastruct	759:17:24666:24677	4904940	118	True				
ANR	4907315	Statement	[	759:29:24678:24678	4904940	119	True				
ANR	4907316	Statement	i	759:30:24679:24679	4904940	120	True				
ANR	4907317	Statement	+	759:32:24681:24681	4904940	121	True				
ANR	4907318	Statement	5	759:34:24683:24683	4904940	122	True				
ANR	4907319	Statement	]	759:35:24684:24684	4904940	123	True				
ANR	4907320	Statement	","	759:36:24685:24685	4904940	124	True				
ANR	4907321	Statement	(	759:38:24687:24687	4904940	125	True				
ANR	4907322	Statement	ut64	759:39:24688:24691	4904940	126	True				
ANR	4907323	Statement	)	759:43:24692:24692	4904940	127	True				
ANR	4907324	Statement	proc_data	759:45:24694:24702	4904940	128	True				
ANR	4907325	Statement	.	759:54:24703:24703	4904940	129	True				
ANR	4907326	Statement	vmareastruct	759:55:24704:24715	4904940	130	True				
ANR	4907327	Statement	[	759:67:24716:24716	4904940	131	True				
ANR	4907328	Statement	i	759:68:24717:24717	4904940	132	True				
ANR	4907329	Statement	+	759:70:24719:24719	4904940	133	True				
ANR	4907330	Statement	6	759:72:24721:24721	4904940	134	True				
ANR	4907331	Statement	]	759:73:24722:24722	4904940	135	True				
ANR	4907332	Statement	)	759:74:24723:24723	4904940	136	True				
ANR	4907333	ExpressionStatement		759:75:24724:24724	4904940	137	True				
ANR	4907334	ExpressionStatement	"io -> cb_printf ( ""\\t%s\\n"" , & ( proc_data . vmareastruct [ i + 7 ] ) )"	760:5:24731:24789	4904940	138	True				
ANR	4907335	CallExpression	"io -> cb_printf ( ""\\t%s\\n"" , & ( proc_data . vmareastruct [ i + 7 ] ) )"		4904940	0					
ANR	4907336	Callee	io -> cb_printf		4904940	0					
ANR	4907337	PtrMemberAccess	io -> cb_printf		4904940	0					
ANR	4907338	Identifier	io		4904940	0					
ANR	4907339	Identifier	cb_printf		4904940	1					
ANR	4907340	ArgumentList	"""\\t%s\\n"""		4904940	1					
ANR	4907341	Argument	"""\\t%s\\n"""		4904940	0					
ANR	4907342	PrimaryExpression	"""\\t%s\\n"""		4904940	0					
ANR	4907343	Argument	& ( proc_data . vmareastruct [ i + 7 ] )		4904940	1					
ANR	4907344	UnaryOperationExpression	& ( proc_data . vmareastruct [ i + 7 ] )		4904940	0					
ANR	4907345	UnaryOperator	&		4904940	0					
ANR	4907346	ArrayIndexing	proc_data . vmareastruct [ i + 7 ]		4904940	1					
ANR	4907347	MemberAccess	proc_data . vmareastruct		4904940	0					
ANR	4907348	Identifier	proc_data		4904940	0					
ANR	4907349	Identifier	vmareastruct		4904940	1					
ANR	4907350	AdditiveExpression	i + 7		4904940	1		+			
ANR	4907351	Identifier	i		4904940	0					
ANR	4907352	PrimaryExpression	7		4904940	1					
ANR	4907353	ExpressionStatement	i = nextstart	761:5:24796:24809	4904940	139	True				
ANR	4907354	AssignmentExpression	i = nextstart		4904940	0		=			
ANR	4907355	Identifier	i		4904940	0					
ANR	4907356	Identifier	nextstart		4904940	1					
ANR	4907357	Statement	io	763:4:24821:24822	4904940	15	True				
ANR	4907358	Statement	->	763:6:24823:24824	4904940	16	True				
ANR	4907359	Statement	cb_printf	763:8:24825:24833	4904940	17	True				
ANR	4907360	Statement	(	763:18:24835:24835	4904940	18	True				
ANR	4907361	Statement	"""STACK BASE ADDRESS = 0x%"""	763:19:24836:24861	4904940	19	True				
ANR	4907362	Statement	PFMT64x	763:45:24862:24868	4904940	20	True				
ANR	4907363	Statement	"""\\n"""	763:52:24869:24872	4904940	21	True				
ANR	4907364	Statement	","	763:56:24873:24873	4904940	22	True				
ANR	4907365	Statement	(	763:58:24875:24875	4904940	23	True				
ANR	4907366	Statement	void	763:59:24876:24879	4904940	24	True				
ANR	4907367	Statement	*	763:64:24881:24881	4904940	25	True				
ANR	4907368	Statement	)	763:65:24882:24882	4904940	26	True				
ANR	4907369	Statement	proc_data	763:67:24884:24892	4904940	27	True				
ANR	4907370	Statement	.	763:76:24893:24893	4904940	28	True				
ANR	4907371	Statement	stack	763:77:24894:24898	4904940	29	True				
ANR	4907372	Statement	)	763:82:24899:24899	4904940	30	True				
ANR	4907373	ExpressionStatement		763:83:24900:24900	4904940	31	True				
ANR	4907374	BreakStatement	break ;	766:2:24913:24918	4904940	25	True				
ANR	4907375	Label	default :	767:1:24921:24928	4904940	26	True				
ANR	4907376	Identifier	default		4904940	0					
ANR	4907377	CompoundStatement		389:2:11218:11218	4904940	27					
ANR	4907378	ExpressionStatement	"print_help ( io , NULL , 1 )"	769:3:24937:24961	4904940	0	True				
ANR	4907379	CallExpression	"print_help ( io , NULL , 1 )"		4904940	0					
ANR	4907380	Callee	print_help		4904940	0					
ANR	4907381	Identifier	print_help		4904940	0					
ANR	4907382	ArgumentList	io		4904940	1					
ANR	4907383	Argument	io		4904940	0					
ANR	4907384	Identifier	io		4904940	0					
ANR	4907385	Argument	NULL		4904940	1					
ANR	4907386	Identifier	NULL		4904940	0					
ANR	4907387	Argument	1		4904940	2					
ANR	4907388	PrimaryExpression	1		4904940	0					
ANR	4907389	Label	end :	772:1:24971:24974	4904940	4	True				
ANR	4907390	Identifier	end		4904940	0					
ANR	4907391	ExpressionStatement	free ( databuf )	773:1:24977:24991	4904940	5	True				
ANR	4907392	CallExpression	free ( databuf )		4904940	0					
ANR	4907393	Callee	free		4904940	0					
ANR	4907394	Identifier	free		4904940	0					
ANR	4907395	ArgumentList	databuf		4904940	1					
ANR	4907396	Argument	databuf		4904940	0					
ANR	4907397	Identifier	databuf		4904940	0					
ANR	4907398	ReturnStatement	return 0 ;	774:1:24994:25002	4904940	6	True				
ANR	4907399	PrimaryExpression	0		4904940	0					
ANR	4907400	ReturnType	int		4904940	1					
ANR	4907401	Identifier	run_old_command		4904940	2					
ANR	4907402	ParameterList	"RIO * io , RIODesc * iodesc , const char * buf"		4904940	3					
ANR	4907403	Parameter	RIO * io	380:20:13670:13676	4904940	0	True				
ANR	4907404	ParameterType	RIO *		4904940	0					
ANR	4907405	Identifier	io		4904940	1					
ANR	4907406	Parameter	RIODesc * iodesc	380:29:13679:13693	4904940	1	True				
ANR	4907407	ParameterType	RIODesc *		4904940	0					
ANR	4907408	Identifier	iodesc		4904940	1					
ANR	4907409	Parameter	const char * buf	380:46:13696:13710	4904940	2	True				
ANR	4907410	ParameterType	const char *		4904940	0					
ANR	4907411	Identifier	buf		4904940	1					
ANR	4907412	CFGEntryNode	ENTRY		4904940		True				
ANR	4907413	CFGExitNode	EXIT		4904940		True				
ANR	4907414	Symbol	r_print_new		4904940						
ANR	4907415	Symbol	map_data		4904940						
ANR	4907416	Symbol	pid		4904940						
ANR	4907417	Symbol	databuf		4904940						
ANR	4907418	Symbol	IOCTL_WRITE_PHYSICAL_ADDR		4904940						
ANR	4907419	Symbol	proc_data		4904940						
ANR	4907420	Symbol	IOCTL_WRITE_PROCESS_ADDR		4904940						
ANR	4907421	Symbol	strlen		4904940						
ANR	4907422	Symbol	& reg_data		4904940						
ANR	4907423	Symbol	len		4904940						
ANR	4907424	Symbol	IOCTL_READ_KERNEL_MEMORY		4904940						
ANR	4907425	Symbol	* proc_data . vmareastruct		4904940						
ANR	4907426	Symbol	proc_data . pid		4904940						
ANR	4907427	Symbol	* ( buf + 2 )		4904940						
ANR	4907428	Symbol	buffsize		4904940						
ANR	4907429	Symbol	sysconf		4904940						
ANR	4907430	Symbol	info		4904940						
ANR	4907431	Symbol	page_size		4904940						
ANR	4907432	Symbol	fflag		4904940						
ANR	4907433	Symbol	ret		4904940						
ANR	4907434	Symbol	* buf		4904940						
ANR	4907435	Symbol	errno		4904940						
ANR	4907436	Symbol	IOCTL_PRINT_PROC_INFO		4904940						
ANR	4907437	Symbol	NULL		4904940						
ANR	4907438	Symbol	WriteMemory		4904940						
ANR	4907439	Symbol	in		4904940						
ANR	4907440	Symbol	io		4904940						
ANR	4907441	Symbol	IOCTL_READ_PROCESS_ADDR		4904940						
ANR	4907442	Symbol	reg_data . cr1		4904940						
ANR	4907443	Symbol	PROT_READ		4904940						
ANR	4907444	Symbol	beid		4904940						
ANR	4907445	Symbol	strerror		4904940						
ANR	4907446	Symbol	IOCTL_READ_CONTROL_REG		4904940						
ANR	4907447	Symbol	proc_data . vmareastruct		4904940						
ANR	4907448	Symbol	in -> n_pages		4904940						
ANR	4907449	Symbol	MAP_SHARED		4904940						
ANR	4907450	Symbol	r2k_struct . beid		4904940						
ANR	4907451	Symbol	ReadMemory		4904940						
ANR	4907452	Symbol	cmd		4904940						
ANR	4907453	Symbol	getargpos		4904940						
ANR	4907454	Symbol	reg_data		4904940						
ANR	4907455	Symbol	inphex		4904940						
ANR	4907456	Symbol	in -> n_phys_addr		4904940						
ANR	4907457	Symbol	r2k_struct . pid		4904940						
ANR	4907458	Symbol	* in		4904940						
ANR	4907459	Symbol	calloc		4904940						
ANR	4907460	Symbol	r_str_unescape		4904940						
ANR	4907461	Symbol	ioctl		4904940						
ANR	4907462	Symbol	MAP_FAILED		4904940						
ANR	4907463	Symbol	iodesc		4904940						
ANR	4907464	Symbol	io -> user		4904940						
ANR	4907465	Symbol	* io		4904940						
ANR	4907466	Symbol	r2k_struct . wp		4904940						
ANR	4907467	Symbol	getvalue		4904940						
ANR	4907468	Symbol	* ( buf + 1 )		4904940						
ANR	4907469	Symbol	wp		4904940						
ANR	4907470	Symbol	addr		4904940						
ANR	4907471	Symbol	r2k_struct		4904940						
ANR	4907472	Symbol	r_hex_str2bin		4904940						
ANR	4907473	Symbol	* iodesc		4904940						
ANR	4907474	Symbol	IOCTL_READ_PHYSICAL_ADDR		4904940						
ANR	4907475	Symbol	malloc		4904940						
ANR	4907476	Symbol	ioctl_n		4904940						
ANR	4907477	Symbol	iodesc -> data		4904940						
ANR	4907478	Symbol	nextstart		4904940						
ANR	4907479	Symbol	i		4904940						
ANR	4907480	Symbol	j		4904940						
ANR	4907481	Symbol	* proc_data		4904940						
ANR	4907482	Symbol	map_data . n_entries		4904940						
ANR	4907483	Symbol	buf		4904940						
ANR	4907484	Symbol	print		4904940						
ANR	4907485	Symbol	munmap		4904940						
ANR	4907486	Symbol	* i		4904940						
ANR	4907487	Symbol	IOCTL_WRITE_KERNEL_MEMORY		4904940						
ANR	4907488	Symbol	proc_data . comm		4904940						
ANR	4907489	Symbol	map_data . size		4904940						
ANR	4907490	Symbol	mmap		4904940						
ANR	4907491	Symbol	& proc_data		4904940						
ANR	4907492	Symbol	_SC_PAGESIZE		4904940						
ANR	4907493	Symbol	& map_data		4904940						
ANR	4907494	Symbol	IOCTL_GET_KERNEL_MAP		4904940						
ANR	4907495	Function	run_new_command	777:0:25007:26686							
ANR	4907496	FunctionDef	"run_new_command (RIO * io , RIODesc * iodesc , const char * buf)"		4907495	0					
ANR	4907497	CompoundStatement		777:63:25070:26686	4907495	0					
ANR	4907498	IfStatement	"if ( r_str_startswith ( buf , ""dm"" ) )"		4907495	0					
ANR	4907499	Condition	"r_str_startswith ( buf , ""dm"" )"	778:5:25077:25104	4907495	0	True				
ANR	4907500	CallExpression	"r_str_startswith ( buf , ""dm"" )"		4907495	0					
ANR	4907501	Callee	r_str_startswith		4907495	0					
ANR	4907502	Identifier	r_str_startswith		4907495	0					
ANR	4907503	ArgumentList	buf		4907495	1					
ANR	4907504	Argument	buf		4907495	0					
ANR	4907505	Identifier	buf		4907495	0					
ANR	4907506	Argument	"""dm"""		4907495	1					
ANR	4907507	PrimaryExpression	"""dm"""		4907495	0					
ANR	4907508	CompoundStatement		2:35:36:36	4907495	1					
ANR	4907509	IfStatement	if ( buf [ 2 ] == ' ' )		4907495	0					
ANR	4907510	Condition	buf [ 2 ] == ' '	779:6:25115:25127	4907495	0	True				
ANR	4907511	EqualityExpression	buf [ 2 ] == ' '		4907495	0		==			
ANR	4907512	ArrayIndexing	buf [ 2 ]		4907495	0					
ANR	4907513	Identifier	buf		4907495	0					
ANR	4907514	PrimaryExpression	2		4907495	1					
ANR	4907515	PrimaryExpression	' '		4907495	1					
ANR	4907516	CompoundStatement		5:3:81:128	4907495	1					
ANR	4907517	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""p %d"" , atoi ( buf + 2 ) ) ;"	781:3:25152:25199	4907495	0	True				
ANR	4907518	IdentifierDecl	"* cmd = r_str_newf ( ""p %d"" , atoi ( buf + 2 ) )"		4907495	0					
ANR	4907519	IdentifierDeclType	char *		4907495	0					
ANR	4907520	Identifier	cmd		4907495	1					
ANR	4907521	AssignmentExpression	"* cmd = r_str_newf ( ""p %d"" , atoi ( buf + 2 ) )"		4907495	2		=			
ANR	4907522	Identifier	cmd		4907495	0					
ANR	4907523	CallExpression	"r_str_newf ( ""p %d"" , atoi ( buf + 2 ) )"		4907495	1					
ANR	4907524	Callee	r_str_newf		4907495	0					
ANR	4907525	Identifier	r_str_newf		4907495	0					
ANR	4907526	ArgumentList	"""p %d"""		4907495	1					
ANR	4907527	Argument	"""p %d"""		4907495	0					
ANR	4907528	PrimaryExpression	"""p %d"""		4907495	0					
ANR	4907529	Argument	atoi ( buf + 2 )		4907495	1					
ANR	4907530	CallExpression	atoi ( buf + 2 )		4907495	0					
ANR	4907531	Callee	atoi		4907495	0					
ANR	4907532	Identifier	atoi		4907495	0					
ANR	4907533	ArgumentList	buf + 2		4907495	1					
ANR	4907534	Argument	buf + 2		4907495	0					
ANR	4907535	AdditiveExpression	buf + 2		4907495	0		+			
ANR	4907536	Identifier	buf		4907495	0					
ANR	4907537	PrimaryExpression	2		4907495	1					
ANR	4907538	ExpressionStatement	"run_old_command ( io , iodesc , cmd )"	782:3:25204:25237	4907495	1	True				
ANR	4907539	CallExpression	"run_old_command ( io , iodesc , cmd )"		4907495	0					
ANR	4907540	Callee	run_old_command		4907495	0					
ANR	4907541	Identifier	run_old_command		4907495	0					
ANR	4907542	ArgumentList	io		4907495	1					
ANR	4907543	Argument	io		4907495	0					
ANR	4907544	Identifier	io		4907495	0					
ANR	4907545	Argument	iodesc		4907495	1					
ANR	4907546	Identifier	iodesc		4907495	0					
ANR	4907547	Argument	cmd		4907495	2					
ANR	4907548	Identifier	cmd		4907495	0					
ANR	4907549	ExpressionStatement	free ( cmd )	783:3:25242:25252	4907495	2	True				
ANR	4907550	CallExpression	free ( cmd )		4907495	0					
ANR	4907551	Callee	free		4907495	0					
ANR	4907552	Identifier	free		4907495	0					
ANR	4907553	ArgumentList	cmd		4907495	1					
ANR	4907554	Argument	cmd		4907495	0					
ANR	4907555	Identifier	cmd		4907495	0					
ANR	4907556	ElseStatement	else		4907495	0					
ANR	4907557	IfStatement	if ( r2k_struct . beid == 1 )		4907495	0					
ANR	4907558	Condition	r2k_struct . beid == 1	784:13:25267:25286	4907495	0	True				
ANR	4907559	EqualityExpression	r2k_struct . beid == 1		4907495	0		==			
ANR	4907560	MemberAccess	r2k_struct . beid		4907495	0					
ANR	4907561	Identifier	r2k_struct		4907495	0					
ANR	4907562	Identifier	beid		4907495	1					
ANR	4907563	PrimaryExpression	1		4907495	1					
ANR	4907564	CompoundStatement		10:3:240:287	4907495	1					
ANR	4907565	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""p %d"" , r2k_struct . pid ) ;"	786:3:25311:25358	4907495	0	True				
ANR	4907566	IdentifierDecl	"* cmd = r_str_newf ( ""p %d"" , r2k_struct . pid )"		4907495	0					
ANR	4907567	IdentifierDeclType	char *		4907495	0					
ANR	4907568	Identifier	cmd		4907495	1					
ANR	4907569	AssignmentExpression	"* cmd = r_str_newf ( ""p %d"" , r2k_struct . pid )"		4907495	2		=			
ANR	4907570	Identifier	cmd		4907495	0					
ANR	4907571	CallExpression	"r_str_newf ( ""p %d"" , r2k_struct . pid )"		4907495	1					
ANR	4907572	Callee	r_str_newf		4907495	0					
ANR	4907573	Identifier	r_str_newf		4907495	0					
ANR	4907574	ArgumentList	"""p %d"""		4907495	1					
ANR	4907575	Argument	"""p %d"""		4907495	0					
ANR	4907576	PrimaryExpression	"""p %d"""		4907495	0					
ANR	4907577	Argument	r2k_struct . pid		4907495	1					
ANR	4907578	MemberAccess	r2k_struct . pid		4907495	0					
ANR	4907579	Identifier	r2k_struct		4907495	0					
ANR	4907580	Identifier	pid		4907495	1					
ANR	4907581	ExpressionStatement	"run_old_command ( io , iodesc , cmd )"	787:3:25363:25396	4907495	1	True				
ANR	4907582	CallExpression	"run_old_command ( io , iodesc , cmd )"		4907495	0					
ANR	4907583	Callee	run_old_command		4907495	0					
ANR	4907584	Identifier	run_old_command		4907495	0					
ANR	4907585	ArgumentList	io		4907495	1					
ANR	4907586	Argument	io		4907495	0					
ANR	4907587	Identifier	io		4907495	0					
ANR	4907588	Argument	iodesc		4907495	1					
ANR	4907589	Identifier	iodesc		4907495	0					
ANR	4907590	Argument	cmd		4907495	2					
ANR	4907591	Identifier	cmd		4907495	0					
ANR	4907592	ExpressionStatement	free ( cmd )	788:3:25401:25411	4907495	2	True				
ANR	4907593	CallExpression	free ( cmd )		4907495	0					
ANR	4907594	Callee	free		4907495	0					
ANR	4907595	Identifier	free		4907495	0					
ANR	4907596	ArgumentList	cmd		4907495	1					
ANR	4907597	Argument	cmd		4907495	0					
ANR	4907598	Identifier	cmd		4907495	0					
ANR	4907599	ElseStatement	else		4907495	0					
ANR	4907600	CompoundStatement		13:9:351:351	4907495	0					
ANR	4907601	ExpressionStatement	"run_old_command ( io , iodesc , ""M"" )"	791:3:25440:25473	4907495	0	True				
ANR	4907602	CallExpression	"run_old_command ( io , iodesc , ""M"" )"		4907495	0					
ANR	4907603	Callee	run_old_command		4907495	0					
ANR	4907604	Identifier	run_old_command		4907495	0					
ANR	4907605	ArgumentList	io		4907495	1					
ANR	4907606	Argument	io		4907495	0					
ANR	4907607	Identifier	io		4907495	0					
ANR	4907608	Argument	iodesc		4907495	1					
ANR	4907609	Identifier	iodesc		4907495	0					
ANR	4907610	Argument	"""M"""		4907495	2					
ANR	4907611	PrimaryExpression	"""M"""		4907495	0					
ANR	4907612	ReturnStatement	return 1 ;	793:2:25481:25489	4907495	1	True				
ANR	4907613	PrimaryExpression	1		4907495	0					
ANR	4907614	IfStatement	"if ( r_str_startswith ( buf , ""dr"" ) )"		4907495	1					
ANR	4907615	Condition	"r_str_startswith ( buf , ""dr"" )"	795:5:25499:25526	4907495	0	True				
ANR	4907616	CallExpression	"r_str_startswith ( buf , ""dr"" )"		4907495	0					
ANR	4907617	Callee	r_str_startswith		4907495	0					
ANR	4907618	Identifier	r_str_startswith		4907495	0					
ANR	4907619	ArgumentList	buf		4907495	1					
ANR	4907620	Argument	buf		4907495	0					
ANR	4907621	Identifier	buf		4907495	0					
ANR	4907622	Argument	"""dr"""		4907495	1					
ANR	4907623	PrimaryExpression	"""dr"""		4907495	0					
ANR	4907624	CompoundStatement		19:35:458:458	4907495	1					
ANR	4907625	ExpressionStatement	"run_old_command ( io , iodesc , ""R"" )"	796:2:25533:25566	4907495	0	True				
ANR	4907626	CallExpression	"run_old_command ( io , iodesc , ""R"" )"		4907495	0					
ANR	4907627	Callee	run_old_command		4907495	0					
ANR	4907628	Identifier	run_old_command		4907495	0					
ANR	4907629	ArgumentList	io		4907495	1					
ANR	4907630	Argument	io		4907495	0					
ANR	4907631	Identifier	io		4907495	0					
ANR	4907632	Argument	iodesc		4907495	1					
ANR	4907633	Identifier	iodesc		4907495	0					
ANR	4907634	Argument	"""R"""		4907495	2					
ANR	4907635	PrimaryExpression	"""R"""		4907495	0					
ANR	4907636	ReturnStatement	return 1 ;	797:2:25570:25578	4907495	1	True				
ANR	4907637	PrimaryExpression	1		4907495	0					
ANR	4907638	IfStatement	"if ( r_str_startswith ( buf , ""dR"" ) )"		4907495	2					
ANR	4907639	Condition	"r_str_startswith ( buf , ""dR"" )"	799:5:25588:25615	4907495	0	True				
ANR	4907640	CallExpression	"r_str_startswith ( buf , ""dR"" )"		4907495	0					
ANR	4907641	Callee	r_str_startswith		4907495	0					
ANR	4907642	Identifier	r_str_startswith		4907495	0					
ANR	4907643	ArgumentList	buf		4907495	1					
ANR	4907644	Argument	buf		4907495	0					
ANR	4907645	Identifier	buf		4907495	0					
ANR	4907646	Argument	"""dR"""		4907495	1					
ANR	4907647	PrimaryExpression	"""dR"""		4907495	0					
ANR	4907648	CompoundStatement		23:35:547:547	4907495	1					
ANR	4907649	ExpressionStatement	"run_old_command ( io , iodesc , ""Rp"" )"	800:2:25622:25656	4907495	0	True				
ANR	4907650	CallExpression	"run_old_command ( io , iodesc , ""Rp"" )"		4907495	0					
ANR	4907651	Callee	run_old_command		4907495	0					
ANR	4907652	Identifier	run_old_command		4907495	0					
ANR	4907653	ArgumentList	io		4907495	1					
ANR	4907654	Argument	io		4907495	0					
ANR	4907655	Identifier	io		4907495	0					
ANR	4907656	Argument	iodesc		4907495	1					
ANR	4907657	Identifier	iodesc		4907495	0					
ANR	4907658	Argument	"""Rp"""		4907495	2					
ANR	4907659	PrimaryExpression	"""Rp"""		4907495	0					
ANR	4907660	ReturnStatement	return 1 ;	801:2:25660:25668	4907495	1	True				
ANR	4907661	PrimaryExpression	1		4907495	0					
ANR	4907662	IfStatement	"if ( r_str_startswith ( buf , ""dp"" ) )"		4907495	3					
ANR	4907663	Condition	"r_str_startswith ( buf , ""dp"" )"	803:5:25678:25705	4907495	0	True				
ANR	4907664	CallExpression	"r_str_startswith ( buf , ""dp"" )"		4907495	0					
ANR	4907665	Callee	r_str_startswith		4907495	0					
ANR	4907666	Identifier	r_str_startswith		4907495	0					
ANR	4907667	ArgumentList	buf		4907495	1					
ANR	4907668	Argument	buf		4907495	0					
ANR	4907669	Identifier	buf		4907495	0					
ANR	4907670	Argument	"""dp"""		4907495	1					
ANR	4907671	PrimaryExpression	"""dp"""		4907495	0					
ANR	4907672	CompoundStatement		27:35:637:637	4907495	1					
ANR	4907673	IfStatement	if ( buf [ 2 ] == ' ' )		4907495	0					
ANR	4907674	Condition	buf [ 2 ] == ' '	804:6:25716:25728	4907495	0	True				
ANR	4907675	EqualityExpression	buf [ 2 ] == ' '		4907495	0		==			
ANR	4907676	ArrayIndexing	buf [ 2 ]		4907495	0					
ANR	4907677	Identifier	buf		4907495	0					
ANR	4907678	PrimaryExpression	2		4907495	1					
ANR	4907679	PrimaryExpression	' '		4907495	1					
ANR	4907680	CompoundStatement		28:21:660:660	4907495	1					
ANR	4907681	ExpressionStatement	r2k_struct . pid = atoi ( buf + 3 )	805:3:25736:25767	4907495	0	True				
ANR	4907682	AssignmentExpression	r2k_struct . pid = atoi ( buf + 3 )		4907495	0		=			
ANR	4907683	MemberAccess	r2k_struct . pid		4907495	0					
ANR	4907684	Identifier	r2k_struct		4907495	0					
ANR	4907685	Identifier	pid		4907495	1					
ANR	4907686	CallExpression	atoi ( buf + 3 )		4907495	1					
ANR	4907687	Callee	atoi		4907495	0					
ANR	4907688	Identifier	atoi		4907495	0					
ANR	4907689	ArgumentList	buf + 3		4907495	1					
ANR	4907690	Argument	buf + 3		4907495	0					
ANR	4907691	AdditiveExpression	buf + 3		4907495	0		+			
ANR	4907692	Identifier	buf		4907495	0					
ANR	4907693	PrimaryExpression	3		4907495	1					
ANR	4907694	ElseStatement	else		4907495	0					
ANR	4907695	CompoundStatement		30:9:707:707	4907495	0					
ANR	4907696	ExpressionStatement	"io -> cb_printf ( ""%d\\n"" , r2k_struct . pid )"	807:3:25783:25821	4907495	0	True				
ANR	4907697	CallExpression	"io -> cb_printf ( ""%d\\n"" , r2k_struct . pid )"		4907495	0					
ANR	4907698	Callee	io -> cb_printf		4907495	0					
ANR	4907699	PtrMemberAccess	io -> cb_printf		4907495	0					
ANR	4907700	Identifier	io		4907495	0					
ANR	4907701	Identifier	cb_printf		4907495	1					
ANR	4907702	ArgumentList	"""%d\\n"""		4907495	1					
ANR	4907703	Argument	"""%d\\n"""		4907495	0					
ANR	4907704	PrimaryExpression	"""%d\\n"""		4907495	0					
ANR	4907705	Argument	r2k_struct . pid		4907495	1					
ANR	4907706	MemberAccess	r2k_struct . pid		4907495	0					
ANR	4907707	Identifier	r2k_struct		4907495	0					
ANR	4907708	Identifier	pid		4907495	1					
ANR	4907709	ReturnStatement	return 1 ;	809:2:25829:25837	4907495	1	True				
ANR	4907710	PrimaryExpression	1		4907495	0					
ANR	4907711	IfStatement	"if ( r_str_startswith ( buf , ""e r2k.io"" ) )"		4907495	4					
ANR	4907712	Condition	"r_str_startswith ( buf , ""e r2k.io"" )"	811:5:25847:25880	4907495	0	True				
ANR	4907713	CallExpression	"r_str_startswith ( buf , ""e r2k.io"" )"		4907495	0					
ANR	4907714	Callee	r_str_startswith		4907495	0					
ANR	4907715	Identifier	r_str_startswith		4907495	0					
ANR	4907716	ArgumentList	buf		4907495	1					
ANR	4907717	Argument	buf		4907495	0					
ANR	4907718	Identifier	buf		4907495	0					
ANR	4907719	Argument	"""e r2k.io"""		4907495	1					
ANR	4907720	PrimaryExpression	"""e r2k.io"""		4907495	0					
ANR	4907721	CompoundStatement		42:2:986:1020	4907495	1					
ANR	4907722	IfStatement	"if ( strchr ( buf , '?' ) )"		4907495	0					
ANR	4907723	Condition	"strchr ( buf , '?' )"	812:6:25891:25907	4907495	0	True				
ANR	4907724	CallExpression	"strchr ( buf , '?' )"		4907495	0					
ANR	4907725	Callee	strchr		4907495	0					
ANR	4907726	Identifier	strchr		4907495	0					
ANR	4907727	ArgumentList	buf		4907495	1					
ANR	4907728	Argument	buf		4907495	0					
ANR	4907729	Identifier	buf		4907495	0					
ANR	4907730	Argument	'?'		4907495	1					
ANR	4907731	PrimaryExpression	'?'		4907495	0					
ANR	4907732	CompoundStatement		36:25:839:839	4907495	1					
ANR	4907733	ExpressionStatement	"io -> cb_printf ( ""0: Linear memory\\n"" )"	813:3:25915:25951	4907495	0	True				
ANR	4907734	CallExpression	"io -> cb_printf ( ""0: Linear memory\\n"" )"		4907495	0					
ANR	4907735	Callee	io -> cb_printf		4907495	0					
ANR	4907736	PtrMemberAccess	io -> cb_printf		4907495	0					
ANR	4907737	Identifier	io		4907495	0					
ANR	4907738	Identifier	cb_printf		4907495	1					
ANR	4907739	ArgumentList	"""0: Linear memory\\n"""		4907495	1					
ANR	4907740	Argument	"""0: Linear memory\\n"""		4907495	0					
ANR	4907741	PrimaryExpression	"""0: Linear memory\\n"""		4907495	0					
ANR	4907742	ExpressionStatement	"io -> cb_printf ( ""1: Process memory\\n"" )"	814:3:25956:25993	4907495	1	True				
ANR	4907743	CallExpression	"io -> cb_printf ( ""1: Process memory\\n"" )"		4907495	0					
ANR	4907744	Callee	io -> cb_printf		4907495	0					
ANR	4907745	PtrMemberAccess	io -> cb_printf		4907495	0					
ANR	4907746	Identifier	io		4907495	0					
ANR	4907747	Identifier	cb_printf		4907495	1					
ANR	4907748	ArgumentList	"""1: Process memory\\n"""		4907495	1					
ANR	4907749	Argument	"""1: Process memory\\n"""		4907495	0					
ANR	4907750	PrimaryExpression	"""1: Process memory\\n"""		4907495	0					
ANR	4907751	ExpressionStatement	"io -> cb_printf ( ""2: Physical memory\\n"" )"	815:3:25998:26036	4907495	2	True				
ANR	4907752	CallExpression	"io -> cb_printf ( ""2: Physical memory\\n"" )"		4907495	0					
ANR	4907753	Callee	io -> cb_printf		4907495	0					
ANR	4907754	PtrMemberAccess	io -> cb_printf		4907495	0					
ANR	4907755	Identifier	io		4907495	0					
ANR	4907756	Identifier	cb_printf		4907495	1					
ANR	4907757	ArgumentList	"""2: Physical memory\\n"""		4907495	1					
ANR	4907758	Argument	"""2: Physical memory\\n"""		4907495	0					
ANR	4907759	PrimaryExpression	"""2: Physical memory\\n"""		4907495	0					
ANR	4907760	ReturnStatement	return 1 ;	816:3:26041:26049	4907495	3	True				
ANR	4907761	PrimaryExpression	1		4907495	0					
ANR	4907762	IdentifierDeclStatement	"const char * eq = strchr ( buf , '=' ) ;"	818:2:26057:26091	4907495	1	True				
ANR	4907763	IdentifierDecl	"* eq = strchr ( buf , '=' )"		4907495	0					
ANR	4907764	IdentifierDeclType	const char *		4907495	0					
ANR	4907765	Identifier	eq		4907495	1					
ANR	4907766	AssignmentExpression	"* eq = strchr ( buf , '=' )"		4907495	2		=			
ANR	4907767	Identifier	eq		4907495	0					
ANR	4907768	CallExpression	"strchr ( buf , '=' )"		4907495	1					
ANR	4907769	Callee	strchr		4907495	0					
ANR	4907770	Identifier	strchr		4907495	0					
ANR	4907771	ArgumentList	buf		4907495	1					
ANR	4907772	Argument	buf		4907495	0					
ANR	4907773	Identifier	buf		4907495	0					
ANR	4907774	Argument	'='		4907495	1					
ANR	4907775	PrimaryExpression	'='		4907495	0					
ANR	4907776	IfStatement	if ( eq )		4907495	2					
ANR	4907777	Condition	eq	819:6:26099:26100	4907495	0	True				
ANR	4907778	Identifier	eq		4907495	0					
ANR	4907779	CompoundStatement		46:3:1090:1130	4907495	1					
ANR	4907780	IdentifierDeclStatement	int v = atoi ( eq + 1 ) ;	820:3:26108:26129	4907495	0	True				
ANR	4907781	IdentifierDecl	v = atoi ( eq + 1 )		4907495	0					
ANR	4907782	IdentifierDeclType	int		4907495	0					
ANR	4907783	Identifier	v		4907495	1					
ANR	4907784	AssignmentExpression	v = atoi ( eq + 1 )		4907495	2		=			
ANR	4907785	Identifier	v		4907495	0					
ANR	4907786	CallExpression	atoi ( eq + 1 )		4907495	1					
ANR	4907787	Callee	atoi		4907495	0					
ANR	4907788	Identifier	atoi		4907495	0					
ANR	4907789	ArgumentList	eq + 1		4907495	1					
ANR	4907790	Argument	eq + 1		4907495	0					
ANR	4907791	AdditiveExpression	eq + 1		4907495	0		+			
ANR	4907792	Identifier	eq		4907495	0					
ANR	4907793	PrimaryExpression	1		4907495	1					
ANR	4907794	IdentifierDeclStatement	int p = r2k_struct . pid ;	821:3:26134:26156	4907495	1	True				
ANR	4907795	IdentifierDecl	p = r2k_struct . pid		4907495	0					
ANR	4907796	IdentifierDeclType	int		4907495	0					
ANR	4907797	Identifier	p		4907495	1					
ANR	4907798	AssignmentExpression	p = r2k_struct . pid		4907495	2		=			
ANR	4907799	Identifier	p		4907495	0					
ANR	4907800	MemberAccess	r2k_struct . pid		4907495	1					
ANR	4907801	Identifier	r2k_struct		4907495	0					
ANR	4907802	Identifier	pid		4907495	1					
ANR	4907803	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""b %d %d"" , v , p ) ;"	822:3:26161:26201	4907495	2	True				
ANR	4907804	IdentifierDecl	"* cmd = r_str_newf ( ""b %d %d"" , v , p )"		4907495	0					
ANR	4907805	IdentifierDeclType	char *		4907495	0					
ANR	4907806	Identifier	cmd		4907495	1					
ANR	4907807	AssignmentExpression	"* cmd = r_str_newf ( ""b %d %d"" , v , p )"		4907495	2		=			
ANR	4907808	Identifier	cmd		4907495	0					
ANR	4907809	CallExpression	"r_str_newf ( ""b %d %d"" , v , p )"		4907495	1					
ANR	4907810	Callee	r_str_newf		4907495	0					
ANR	4907811	Identifier	r_str_newf		4907495	0					
ANR	4907812	ArgumentList	"""b %d %d"""		4907495	1					
ANR	4907813	Argument	"""b %d %d"""		4907495	0					
ANR	4907814	PrimaryExpression	"""b %d %d"""		4907495	0					
ANR	4907815	Argument	v		4907495	1					
ANR	4907816	Identifier	v		4907495	0					
ANR	4907817	Argument	p		4907495	2					
ANR	4907818	Identifier	p		4907495	0					
ANR	4907819	ExpressionStatement	"run_old_command ( io , iodesc , cmd )"	823:3:26206:26239	4907495	3	True				
ANR	4907820	CallExpression	"run_old_command ( io , iodesc , cmd )"		4907495	0					
ANR	4907821	Callee	run_old_command		4907495	0					
ANR	4907822	Identifier	run_old_command		4907495	0					
ANR	4907823	ArgumentList	io		4907495	1					
ANR	4907824	Argument	io		4907495	0					
ANR	4907825	Identifier	io		4907495	0					
ANR	4907826	Argument	iodesc		4907495	1					
ANR	4907827	Identifier	iodesc		4907495	0					
ANR	4907828	Argument	cmd		4907495	2					
ANR	4907829	Identifier	cmd		4907495	0					
ANR	4907830	ExpressionStatement	free ( cmd )	824:3:26244:26254	4907495	4	True				
ANR	4907831	CallExpression	free ( cmd )		4907495	0					
ANR	4907832	Callee	free		4907495	0					
ANR	4907833	Identifier	free		4907495	0					
ANR	4907834	ArgumentList	cmd		4907495	1					
ANR	4907835	Argument	cmd		4907495	0					
ANR	4907836	Identifier	cmd		4907495	0					
ANR	4907837	ElseStatement	else		4907495	0					
ANR	4907838	CompoundStatement		49:9:1194:1194	4907495	0					
ANR	4907839	ExpressionStatement	"run_new_command ( io , iodesc , ""dp"" )"	826:3:26270:26304	4907495	0	True				
ANR	4907840	CallExpression	"run_new_command ( io , iodesc , ""dp"" )"		4907495	0					
ANR	4907841	Callee	run_new_command		4907495	0					
ANR	4907842	Identifier	run_new_command		4907495	0					
ANR	4907843	ArgumentList	io		4907495	1					
ANR	4907844	Argument	io		4907495	0					
ANR	4907845	Identifier	io		4907495	0					
ANR	4907846	Argument	iodesc		4907495	1					
ANR	4907847	Identifier	iodesc		4907495	0					
ANR	4907848	Argument	"""dp"""		4907495	2					
ANR	4907849	PrimaryExpression	"""dp"""		4907495	0					
ANR	4907850	ReturnStatement	return 1 ;	828:2:26312:26320	4907495	3	True				
ANR	4907851	PrimaryExpression	1		4907495	0					
ANR	4907852	IfStatement	"if ( r_str_startswith ( buf , ""e r2k.wp"" ) )"		4907495	5					
ANR	4907853	Condition	"r_str_startswith ( buf , ""e r2k.wp"" )"	830:5:26330:26363	4907495	0	True				
ANR	4907854	CallExpression	"r_str_startswith ( buf , ""e r2k.wp"" )"		4907495	0					
ANR	4907855	Callee	r_str_startswith		4907495	0					
ANR	4907856	Identifier	r_str_startswith		4907495	0					
ANR	4907857	ArgumentList	buf		4907495	1					
ANR	4907858	Argument	buf		4907495	0					
ANR	4907859	Identifier	buf		4907495	0					
ANR	4907860	Argument	"""e r2k.wp"""		4907495	1					
ANR	4907861	PrimaryExpression	"""e r2k.wp"""		4907495	0					
ANR	4907862	CompoundStatement		59:2:1420:1454	4907495	1					
ANR	4907863	IfStatement	"if ( strchr ( buf , '?' ) )"		4907495	0					
ANR	4907864	Condition	"strchr ( buf , '?' )"	831:6:26374:26390	4907495	0	True				
ANR	4907865	CallExpression	"strchr ( buf , '?' )"		4907495	0					
ANR	4907866	Callee	strchr		4907495	0					
ANR	4907867	Identifier	strchr		4907495	0					
ANR	4907868	ArgumentList	buf		4907495	1					
ANR	4907869	Argument	buf		4907495	0					
ANR	4907870	Identifier	buf		4907495	0					
ANR	4907871	Argument	'?'		4907495	1					
ANR	4907872	PrimaryExpression	'?'		4907495	0					
ANR	4907873	CompoundStatement		55:25:1322:1322	4907495	1					
ANR	4907874	ExpressionStatement	"io -> cb_printf ( ""<bool> enable write protection (disabled by default)\\n"" )"	832:3:26398:26470	4907495	0	True				
ANR	4907875	CallExpression	"io -> cb_printf ( ""<bool> enable write protection (disabled by default)\\n"" )"		4907495	0					
ANR	4907876	Callee	io -> cb_printf		4907495	0					
ANR	4907877	PtrMemberAccess	io -> cb_printf		4907495	0					
ANR	4907878	Identifier	io		4907495	0					
ANR	4907879	Identifier	cb_printf		4907495	1					
ANR	4907880	ArgumentList	"""<bool> enable write protection (disabled by default)\\n"""		4907495	1					
ANR	4907881	Argument	"""<bool> enable write protection (disabled by default)\\n"""		4907495	0					
ANR	4907882	PrimaryExpression	"""<bool> enable write protection (disabled by default)\\n"""		4907495	0					
ANR	4907883	ReturnStatement	return 1 ;	833:3:26475:26483	4907495	1	True				
ANR	4907884	PrimaryExpression	1		4907495	0					
ANR	4907885	IdentifierDeclStatement	"const char * eq = strchr ( buf , '=' ) ;"	835:2:26491:26525	4907495	1	True				
ANR	4907886	IdentifierDecl	"* eq = strchr ( buf , '=' )"		4907495	0					
ANR	4907887	IdentifierDeclType	const char *		4907495	0					
ANR	4907888	Identifier	eq		4907495	1					
ANR	4907889	AssignmentExpression	"* eq = strchr ( buf , '=' )"		4907495	2		=			
ANR	4907890	Identifier	eq		4907495	0					
ANR	4907891	CallExpression	"strchr ( buf , '=' )"		4907495	1					
ANR	4907892	Callee	strchr		4907495	0					
ANR	4907893	Identifier	strchr		4907495	0					
ANR	4907894	ArgumentList	buf		4907495	1					
ANR	4907895	Argument	buf		4907495	0					
ANR	4907896	Identifier	buf		4907495	0					
ANR	4907897	Argument	'='		4907495	1					
ANR	4907898	PrimaryExpression	'='		4907495	0					
ANR	4907899	IfStatement	if ( eq )		4907495	2					
ANR	4907900	Condition	eq	836:6:26533:26534	4907495	0	True				
ANR	4907901	Identifier	eq		4907495	0					
ANR	4907902	CompoundStatement		61:3:1471:1492	4907495	1					
ANR	4907903	IdentifierDeclStatement	int v = atoi ( eq + 1 ) ;	837:3:26542:26563	4907495	0	True				
ANR	4907904	IdentifierDecl	v = atoi ( eq + 1 )		4907495	0					
ANR	4907905	IdentifierDeclType	int		4907495	0					
ANR	4907906	Identifier	v		4907495	1					
ANR	4907907	AssignmentExpression	v = atoi ( eq + 1 )		4907495	2		=			
ANR	4907908	Identifier	v		4907495	0					
ANR	4907909	CallExpression	atoi ( eq + 1 )		4907495	1					
ANR	4907910	Callee	atoi		4907495	0					
ANR	4907911	Identifier	atoi		4907495	0					
ANR	4907912	ArgumentList	eq + 1		4907495	1					
ANR	4907913	Argument	eq + 1		4907495	0					
ANR	4907914	AdditiveExpression	eq + 1		4907495	0		+			
ANR	4907915	Identifier	eq		4907495	0					
ANR	4907916	PrimaryExpression	1		4907495	1					
ANR	4907917	ExpressionStatement	r2k_struct . wp = ( ut8 ) v	838:3:26568:26590	4907495	1	True				
ANR	4907918	AssignmentExpression	r2k_struct . wp = ( ut8 ) v		4907495	0		=			
ANR	4907919	MemberAccess	r2k_struct . wp		4907495	0					
ANR	4907920	Identifier	r2k_struct		4907495	0					
ANR	4907921	Identifier	wp		4907495	1					
ANR	4907922	CastExpression	( ut8 ) v		4907495	1					
ANR	4907923	CastTarget	ut8		4907495	0					
ANR	4907924	Identifier	v		4907495	1					
ANR	4907925	ElseStatement	else		4907495	0					
ANR	4907926	CompoundStatement		63:9:1530:1530	4907495	0					
ANR	4907927	ExpressionStatement	"io -> cb_printf ( ""%s"" , r_str_bool ( r2k_struct . wp ) )"	840:3:26606:26654	4907495	0	True				
ANR	4907928	CallExpression	"io -> cb_printf ( ""%s"" , r_str_bool ( r2k_struct . wp ) )"		4907495	0					
ANR	4907929	Callee	io -> cb_printf		4907495	0					
ANR	4907930	PtrMemberAccess	io -> cb_printf		4907495	0					
ANR	4907931	Identifier	io		4907495	0					
ANR	4907932	Identifier	cb_printf		4907495	1					
ANR	4907933	ArgumentList	"""%s"""		4907495	1					
ANR	4907934	Argument	"""%s"""		4907495	0					
ANR	4907935	PrimaryExpression	"""%s"""		4907495	0					
ANR	4907936	Argument	r_str_bool ( r2k_struct . wp )		4907495	1					
ANR	4907937	CallExpression	r_str_bool ( r2k_struct . wp )		4907495	0					
ANR	4907938	Callee	r_str_bool		4907495	0					
ANR	4907939	Identifier	r_str_bool		4907495	0					
ANR	4907940	ArgumentList	r2k_struct . wp		4907495	1					
ANR	4907941	Argument	r2k_struct . wp		4907495	0					
ANR	4907942	MemberAccess	r2k_struct . wp		4907495	0					
ANR	4907943	Identifier	r2k_struct		4907495	0					
ANR	4907944	Identifier	wp		4907495	1					
ANR	4907945	ReturnStatement	return 1 ;	842:2:26662:26670	4907495	3	True				
ANR	4907946	PrimaryExpression	1		4907495	0					
ANR	4907947	ReturnStatement	return 0 ;	844:1:26676:26684	4907495	6	True				
ANR	4907948	PrimaryExpression	0		4907495	0					
ANR	4907949	ReturnType	int		4907495	1					
ANR	4907950	Identifier	run_new_command		4907495	2					
ANR	4907951	ParameterList	"RIO * io , RIODesc * iodesc , const char * buf"		4907495	3					
ANR	4907952	Parameter	RIO * io	777:20:25027:25033	4907495	0	True				
ANR	4907953	ParameterType	RIO *		4907495	0					
ANR	4907954	Identifier	io		4907495	1					
ANR	4907955	Parameter	RIODesc * iodesc	777:29:25036:25050	4907495	1	True				
ANR	4907956	ParameterType	RIODesc *		4907495	0					
ANR	4907957	Identifier	iodesc		4907495	1					
ANR	4907958	Parameter	const char * buf	777:46:25053:25067	4907495	2	True				
ANR	4907959	ParameterType	const char *		4907495	0					
ANR	4907960	Identifier	buf		4907495	1					
ANR	4907961	CFGEntryNode	ENTRY		4907495		True				
ANR	4907962	CFGExitNode	EXIT		4907495		True				
ANR	4907963	Symbol	r_str_startswith		4907495						
ANR	4907964	Symbol	atoi		4907495						
ANR	4907965	Symbol	r_str_bool		4907495						
ANR	4907966	Symbol	* buf		4907495						
ANR	4907967	Symbol	r2k_struct . pid		4907495						
ANR	4907968	Symbol	io		4907495						
ANR	4907969	Symbol	strchr		4907495						
ANR	4907970	Symbol	r_str_newf		4907495						
ANR	4907971	Symbol	eq		4907495						
ANR	4907972	Symbol	iodesc		4907495						
ANR	4907973	Symbol	p		4907495						
ANR	4907974	Symbol	buf		4907495						
ANR	4907975	Symbol	r2k_struct . wp		4907495						
ANR	4907976	Symbol	v		4907495						
ANR	4907977	Symbol	r2k_struct . beid		4907495						
ANR	4907978	Symbol	cmd		4907495						
ANR	4907979	Symbol	r2k_struct		4907495						
ANR	4907980	Function	run_ioctl_command	847:0:26689:26897							
ANR	4907981	FunctionDef	"run_ioctl_command (RIO * io , RIODesc * iodesc , const char * buf)"		4907980	0					
ANR	4907982	CompoundStatement		847:65:26754:26897	4907980	0					
ANR	4907983	ExpressionStatement	"buf = r_str_ichr ( ( char * ) buf , ' ' )"	848:1:26757:26793	4907980	0	True				
ANR	4907984	AssignmentExpression	"buf = r_str_ichr ( ( char * ) buf , ' ' )"		4907980	0		=			
ANR	4907985	Identifier	buf		4907980	0					
ANR	4907986	CallExpression	"r_str_ichr ( ( char * ) buf , ' ' )"		4907980	1					
ANR	4907987	Callee	r_str_ichr		4907980	0					
ANR	4907988	Identifier	r_str_ichr		4907980	0					
ANR	4907989	ArgumentList	( char * ) buf		4907980	1					
ANR	4907990	Argument	( char * ) buf		4907980	0					
ANR	4907991	CastExpression	( char * ) buf		4907980	0					
ANR	4907992	CastTarget	char *		4907980	0					
ANR	4907993	Identifier	buf		4907980	1					
ANR	4907994	Argument	' '		4907980	1					
ANR	4907995	PrimaryExpression	' '		4907980	0					
ANR	4907996	IfStatement	"if ( ! run_new_command ( io , iodesc , buf ) )"		4907980	1					
ANR	4907997	Condition	"! run_new_command ( io , iodesc , buf )"	850:5:26801:26834	4907980	0	True				
ANR	4907998	UnaryOperationExpression	"! run_new_command ( io , iodesc , buf )"		4907980	0					
ANR	4907999	UnaryOperator	!		4907980	0					
ANR	4908000	CallExpression	"run_new_command ( io , iodesc , buf )"		4907980	1					
ANR	4908001	Callee	run_new_command		4907980	0					
ANR	4908002	Identifier	run_new_command		4907980	0					
ANR	4908003	ArgumentList	io		4907980	1					
ANR	4908004	Argument	io		4907980	0					
ANR	4908005	Identifier	io		4907980	0					
ANR	4908006	Argument	iodesc		4907980	1					
ANR	4908007	Identifier	iodesc		4907980	0					
ANR	4908008	Argument	buf		4907980	2					
ANR	4908009	Identifier	buf		4907980	0					
ANR	4908010	CompoundStatement		4:41:82:82	4907980	1					
ANR	4908011	ReturnStatement	"return run_old_command ( io , iodesc , buf ) ;"	851:2:26841:26881	4907980	0	True				
ANR	4908012	CallExpression	"run_old_command ( io , iodesc , buf )"		4907980	0					
ANR	4908013	Callee	run_old_command		4907980	0					
ANR	4908014	Identifier	run_old_command		4907980	0					
ANR	4908015	ArgumentList	io		4907980	1					
ANR	4908016	Argument	io		4907980	0					
ANR	4908017	Identifier	io		4907980	0					
ANR	4908018	Argument	iodesc		4907980	1					
ANR	4908019	Identifier	iodesc		4907980	0					
ANR	4908020	Argument	buf		4907980	2					
ANR	4908021	Identifier	buf		4907980	0					
ANR	4908022	ReturnStatement	return 0 ;	853:1:26887:26895	4907980	2	True				
ANR	4908023	PrimaryExpression	0		4907980	0					
ANR	4908024	ReturnType	int		4907980	1					
ANR	4908025	Identifier	run_ioctl_command		4907980	2					
ANR	4908026	ParameterList	"RIO * io , RIODesc * iodesc , const char * buf"		4907980	3					
ANR	4908027	Parameter	RIO * io	847:22:26711:26717	4907980	0	True				
ANR	4908028	ParameterType	RIO *		4907980	0					
ANR	4908029	Identifier	io		4907980	1					
ANR	4908030	Parameter	RIODesc * iodesc	847:31:26720:26734	4907980	1	True				
ANR	4908031	ParameterType	RIODesc *		4907980	0					
ANR	4908032	Identifier	iodesc		4907980	1					
ANR	4908033	Parameter	const char * buf	847:48:26737:26751	4907980	2	True				
ANR	4908034	ParameterType	const char *		4907980	0					
ANR	4908035	Identifier	buf		4907980	1					
ANR	4908036	CFGEntryNode	ENTRY		4907980		True				
ANR	4908037	CFGExitNode	EXIT		4907980		True				
ANR	4908038	Symbol	buf		4907980						
ANR	4908039	Symbol	io		4907980						
ANR	4908040	Symbol	run_new_command		4907980						
ANR	4908041	Symbol	r_str_ichr		4907980						
ANR	4908042	Symbol	run_old_command		4907980						
ANR	4908043	Symbol	iodesc		4907980						
