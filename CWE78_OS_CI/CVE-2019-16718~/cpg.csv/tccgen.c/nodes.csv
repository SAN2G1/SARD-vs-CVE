command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6294117	File	data/converged/CVE-2019-16718~_radare2/tccgen.c								
ANR	6294118	DeclStmt									
ANR	6294119	Decl							ST_DATA char	ST_DATA char * *	tcc_cb_ptr
ANR	6294120	DeclStmt									
ANR	6294121	Decl							ST_DATA int	ST_DATA int	rsym
ANR	6294122	Decl							ST_DATA int	ST_DATA int	anon_sym
ANR	6294123	Decl							ST_DATA int	ST_DATA int	ind
ANR	6294124	Decl							ST_DATA int	ST_DATA int	loc
ANR	6294125	DeclStmt									
ANR	6294126	Decl							ST_DATA Sym	ST_DATA Sym *	sym_free_first
ANR	6294127	DeclStmt									
ANR	6294128	Decl							ST_DATA void	ST_DATA void * *	sym_pools
ANR	6294129	DeclStmt									
ANR	6294130	Decl							ST_DATA int	ST_DATA int	nb_sym_pools
ANR	6294131	DeclStmt									
ANR	6294132	Decl							int	int	arraysize
ANR	6294133	DeclStmt									
ANR	6294134	Decl							const char	const char *	global_symname
ANR	6294135	DeclStmt									
ANR	6294136	Decl							const char	const char *	global_type
ANR	6294137	DeclStmt									
ANR	6294138	Decl							ST_DATA Sym	ST_DATA Sym *	global_stack
ANR	6294139	DeclStmt									
ANR	6294140	Decl							ST_DATA Sym	ST_DATA Sym *	local_stack
ANR	6294141	DeclStmt									
ANR	6294142	Decl							ST_DATA Sym	ST_DATA Sym *	scope_stack_bottom
ANR	6294143	DeclStmt									
ANR	6294144	Decl							ST_DATA Sym	ST_DATA Sym *	define_stack
ANR	6294145	DeclStmt									
ANR	6294146	Decl							ST_DATA Sym	ST_DATA Sym *	global_label_stack
ANR	6294147	DeclStmt									
ANR	6294148	Decl							ST_DATA Sym	ST_DATA Sym *	local_label_stack
ANR	6294149	DeclStmt									
ANR	6294150	Decl							ST_DATA int	ST_DATA int	vla_sp_loc_tmp
ANR	6294151	DeclStmt									
ANR	6294152	Decl							ST_DATA int	ST_DATA int	vla_sp_root_loc
ANR	6294153	DeclStmt									
ANR	6294154	Decl							ST_DATA int	ST_DATA int *	vla_sp_loc
ANR	6294155	DeclStmt									
ANR	6294156	Decl							ST_DATA int	ST_DATA int	vla_flags
ANR	6294157	DeclStmt									
ANR	6294158	Decl							ST_DATA SValue	ST_DATA SValue [ 1 + VSTACK_SIZE ]	__vstack
ANR	6294159	Decl							ST_DATA SValue	ST_DATA SValue *	vtop
ANR	6294160	DeclStmt									
ANR	6294161	Decl							ST_DATA int	ST_DATA int	const_wanted
ANR	6294162	DeclStmt									
ANR	6294163	Decl							ST_DATA int	ST_DATA int	nocode_wanted
ANR	6294164	DeclStmt									
ANR	6294165	Decl							ST_DATA int	ST_DATA int	global_expr
ANR	6294166	DeclStmt									
ANR	6294167	Decl							ST_DATA CType	ST_DATA CType	func_vt
ANR	6294168	DeclStmt									
ANR	6294169	Decl							ST_DATA int	ST_DATA int	func_vc
ANR	6294170	DeclStmt									
ANR	6294171	Decl							ST_DATA int	ST_DATA int	last_line_num
ANR	6294172	Decl							ST_DATA int	ST_DATA int	last_ind
ANR	6294173	Decl							ST_DATA int	ST_DATA int	func_ind
ANR	6294174	DeclStmt									
ANR	6294175	Decl							ST_DATA char	ST_DATA char *	funcname
ANR	6294176	DeclStmt									
ANR	6294177	Decl							ST_DATA char	ST_DATA char *	dirname
ANR	6294178	DeclStmt									
ANR	6294179	Decl							ST_DATA CType	ST_DATA CType	char_pointer_type
ANR	6294180	Decl							ST_DATA CType	ST_DATA CType	func_old_type
ANR	6294181	DeclStmt									
ANR	6294182	Decl							ST_DATA CType	ST_DATA CType	int8_type
ANR	6294183	Decl							ST_DATA CType	ST_DATA CType	int16_type
ANR	6294184	Decl							ST_DATA CType	ST_DATA CType	int32_type
ANR	6294185	Decl							ST_DATA CType	ST_DATA CType	int64_type
ANR	6294186	Decl							ST_DATA CType	ST_DATA CType	size_type
ANR	6294187	DeclStmt									
ANR	6294188	Decl							CType	CType * ( CType * type )	pointed_type
ANR	6294189	DeclStmt									
ANR	6294190	Decl							int	"int ( CType * type1 , CType * type2 )"	is_compatible_types
ANR	6294191	DeclStmt									
ANR	6294192	Decl							int	"int ( CType * type , AttributeDef * ad )"	parse_btype
ANR	6294193	DeclStmt									
ANR	6294194	Decl							void	"void ( CType * type , AttributeDef * ad , int * v , int td )"	type_decl
ANR	6294195	DeclStmt									
ANR	6294196	Decl							void	void ( CType * type )	parse_expr_type
ANR	6294197	DeclStmt									
ANR	6294198	Decl							void	"void ( CType * type , unsigned long c , int first , int size_only )"	decl_initializer
ANR	6294199	DeclStmt									
ANR	6294200	Decl							void	"void ( CType * type , AttributeDef * ad , int r , int has_init , int v , char * asm_label , int scope )"	decl_initializer_alloc
ANR	6294201	DeclStmt									
ANR	6294202	Decl							int	"int ( int l , int is_for_loop_init )"	decl0
ANR	6294203	DeclStmt									
ANR	6294204	Decl							void	void ( void )	expr_eq
ANR	6294205	DeclStmt									
ANR	6294206	Decl							void	void ( CType * type )	unary_type
ANR	6294207	DeclStmt									
ANR	6294208	Decl							int	"int ( CType * type1 , CType * type2 )"	is_compatible_parameter_types
ANR	6294209	DeclStmt									
ANR	6294210	Decl							void	void ( CType * type )	expr_type
ANR	6294211	Function	is_structured	88:0:3487:3599							
ANR	6294212	FunctionDef	is_structured (CType * t)		6294211	0					
ANR	6294213	CompoundStatement		88:37:3524:3599	6294211	0					
ANR	6294214	ReturnStatement	return ( t -> t & VT_BTYPE ) == VT_STRUCT || ( t -> t & VT_BTYPE ) == VT_UNION ;	89:1:3527:3597	6294211	0	True				
ANR	6294215	OrExpression	( t -> t & VT_BTYPE ) == VT_STRUCT || ( t -> t & VT_BTYPE ) == VT_UNION		6294211	0		||			
ANR	6294216	EqualityExpression	( t -> t & VT_BTYPE ) == VT_STRUCT		6294211	0		==			
ANR	6294217	BitAndExpression	t -> t & VT_BTYPE		6294211	0		&			
ANR	6294218	PtrMemberAccess	t -> t		6294211	0					
ANR	6294219	Identifier	t		6294211	0					
ANR	6294220	Identifier	t		6294211	1					
ANR	6294221	Identifier	VT_BTYPE		6294211	1					
ANR	6294222	Identifier	VT_STRUCT		6294211	1					
ANR	6294223	EqualityExpression	( t -> t & VT_BTYPE ) == VT_UNION		6294211	1		==			
ANR	6294224	BitAndExpression	t -> t & VT_BTYPE		6294211	0		&			
ANR	6294225	PtrMemberAccess	t -> t		6294211	0					
ANR	6294226	Identifier	t		6294211	0					
ANR	6294227	Identifier	t		6294211	1					
ANR	6294228	Identifier	VT_BTYPE		6294211	1					
ANR	6294229	Identifier	VT_UNION		6294211	1					
ANR	6294230	ReturnType	ST_INLN bool		6294211	1					
ANR	6294231	Identifier	is_structured		6294211	2					
ANR	6294232	ParameterList	CType * t		6294211	3					
ANR	6294233	Parameter	CType * t	88:27:3514:3521	6294211	0	True				
ANR	6294234	ParameterType	CType *		6294211	0					
ANR	6294235	Identifier	t		6294211	1					
ANR	6294236	CFGEntryNode	ENTRY		6294211		True				
ANR	6294237	CFGExitNode	EXIT		6294211		True				
ANR	6294238	Symbol	VT_UNION		6294211						
ANR	6294239	Symbol	t		6294211						
ANR	6294240	Symbol	t -> t		6294211						
ANR	6294241	Symbol	VT_BTYPE		6294211						
ANR	6294242	Symbol	* t		6294211						
ANR	6294243	Symbol	VT_STRUCT		6294211						
ANR	6294244	Function	is_struct	92:0:3602:3677							
ANR	6294245	FunctionDef	is_struct (CType * t)		6294244	0					
ANR	6294246	CompoundStatement		92:33:3635:3677	6294244	0					
ANR	6294247	ReturnStatement	return ( t -> t & VT_BTYPE ) == VT_STRUCT ;	93:1:3638:3675	6294244	0	True				
ANR	6294248	EqualityExpression	( t -> t & VT_BTYPE ) == VT_STRUCT		6294244	0		==			
ANR	6294249	BitAndExpression	t -> t & VT_BTYPE		6294244	0		&			
ANR	6294250	PtrMemberAccess	t -> t		6294244	0					
ANR	6294251	Identifier	t		6294244	0					
ANR	6294252	Identifier	t		6294244	1					
ANR	6294253	Identifier	VT_BTYPE		6294244	1					
ANR	6294254	Identifier	VT_STRUCT		6294244	1					
ANR	6294255	ReturnType	ST_INLN bool		6294244	1					
ANR	6294256	Identifier	is_struct		6294244	2					
ANR	6294257	ParameterList	CType * t		6294244	3					
ANR	6294258	Parameter	CType * t	92:23:3625:3632	6294244	0	True				
ANR	6294259	ParameterType	CType *		6294244	0					
ANR	6294260	Identifier	t		6294244	1					
ANR	6294261	CFGEntryNode	ENTRY		6294244		True				
ANR	6294262	CFGExitNode	EXIT		6294244		True				
ANR	6294263	Symbol	t		6294244						
ANR	6294264	Symbol	t -> t		6294244						
ANR	6294265	Symbol	VT_BTYPE		6294244						
ANR	6294266	Symbol	VT_STRUCT		6294244						
ANR	6294267	Symbol	* t		6294244						
ANR	6294268	Function	is_union	96:0:3680:3753							
ANR	6294269	FunctionDef	is_union (CType * t)		6294268	0					
ANR	6294270	CompoundStatement		96:32:3712:3753	6294268	0					
ANR	6294271	ReturnStatement	return ( t -> t & VT_BTYPE ) == VT_UNION ;	97:1:3715:3751	6294268	0	True				
ANR	6294272	EqualityExpression	( t -> t & VT_BTYPE ) == VT_UNION		6294268	0		==			
ANR	6294273	BitAndExpression	t -> t & VT_BTYPE		6294268	0		&			
ANR	6294274	PtrMemberAccess	t -> t		6294268	0					
ANR	6294275	Identifier	t		6294268	0					
ANR	6294276	Identifier	t		6294268	1					
ANR	6294277	Identifier	VT_BTYPE		6294268	1					
ANR	6294278	Identifier	VT_UNION		6294268	1					
ANR	6294279	ReturnType	ST_INLN bool		6294268	1					
ANR	6294280	Identifier	is_union		6294268	2					
ANR	6294281	ParameterList	CType * t		6294268	3					
ANR	6294282	Parameter	CType * t	96:22:3702:3709	6294268	0	True				
ANR	6294283	ParameterType	CType *		6294268	0					
ANR	6294284	Identifier	t		6294268	1					
ANR	6294285	CFGEntryNode	ENTRY		6294268		True				
ANR	6294286	CFGExitNode	EXIT		6294268		True				
ANR	6294287	Symbol	VT_UNION		6294268						
ANR	6294288	Symbol	t		6294268						
ANR	6294289	Symbol	t -> t		6294268						
ANR	6294290	Symbol	VT_BTYPE		6294268						
ANR	6294291	Symbol	* t		6294268						
ANR	6294292	Function	is_enum	100:0:3756:3827							
ANR	6294293	FunctionDef	is_enum (CType * t)		6294292	0					
ANR	6294294	CompoundStatement		100:31:3787:3827	6294292	0					
ANR	6294295	ReturnStatement	return ( t -> t & VT_BTYPE ) == VT_ENUM ;	101:1:3790:3825	6294292	0	True				
ANR	6294296	EqualityExpression	( t -> t & VT_BTYPE ) == VT_ENUM		6294292	0		==			
ANR	6294297	BitAndExpression	t -> t & VT_BTYPE		6294292	0		&			
ANR	6294298	PtrMemberAccess	t -> t		6294292	0					
ANR	6294299	Identifier	t		6294292	0					
ANR	6294300	Identifier	t		6294292	1					
ANR	6294301	Identifier	VT_BTYPE		6294292	1					
ANR	6294302	Identifier	VT_ENUM		6294292	1					
ANR	6294303	ReturnType	ST_INLN bool		6294292	1					
ANR	6294304	Identifier	is_enum		6294292	2					
ANR	6294305	ParameterList	CType * t		6294292	3					
ANR	6294306	Parameter	CType * t	100:21:3777:3784	6294292	0	True				
ANR	6294307	ParameterType	CType *		6294292	0					
ANR	6294308	Identifier	t		6294292	1					
ANR	6294309	CFGEntryNode	ENTRY		6294292		True				
ANR	6294310	CFGExitNode	EXIT		6294292		True				
ANR	6294311	Symbol	t		6294292						
ANR	6294312	Symbol	VT_ENUM		6294292						
ANR	6294313	Symbol	t -> t		6294292						
ANR	6294314	Symbol	VT_BTYPE		6294292						
ANR	6294315	Symbol	* t		6294292						
ANR	6294316	Function	is_float	104:0:3830:3972							
ANR	6294317	FunctionDef	is_float (int t)		6294316	0					
ANR	6294318	CompoundStatement		104:29:3859:3972	6294316	0					
ANR	6294319	IdentifierDeclStatement	int bt ;	105:1:3862:3868	6294316	0	True				
ANR	6294320	IdentifierDecl	bt		6294316	0					
ANR	6294321	IdentifierDeclType	int		6294316	0					
ANR	6294322	Identifier	bt		6294316	1					
ANR	6294323	ExpressionStatement	bt = t & VT_BTYPE	106:1:3871:3888	6294316	1	True				
ANR	6294324	AssignmentExpression	bt = t & VT_BTYPE		6294316	0		=			
ANR	6294325	Identifier	bt		6294316	0					
ANR	6294326	BitAndExpression	t & VT_BTYPE		6294316	1		&			
ANR	6294327	Identifier	t		6294316	0					
ANR	6294328	Identifier	VT_BTYPE		6294316	1					
ANR	6294329	ReturnStatement	return bt == VT_LDOUBLE || bt == VT_DOUBLE || bt == VT_FLOAT || bt == VT_QFLOAT ;	107:1:3891:3970	6294316	2	True				
ANR	6294330	OrExpression	bt == VT_LDOUBLE || bt == VT_DOUBLE || bt == VT_FLOAT || bt == VT_QFLOAT		6294316	0		||			
ANR	6294331	EqualityExpression	bt == VT_LDOUBLE		6294316	0		==			
ANR	6294332	Identifier	bt		6294316	0					
ANR	6294333	Identifier	VT_LDOUBLE		6294316	1					
ANR	6294334	OrExpression	bt == VT_DOUBLE || bt == VT_FLOAT || bt == VT_QFLOAT		6294316	1		||			
ANR	6294335	EqualityExpression	bt == VT_DOUBLE		6294316	0		==			
ANR	6294336	Identifier	bt		6294316	0					
ANR	6294337	Identifier	VT_DOUBLE		6294316	1					
ANR	6294338	OrExpression	bt == VT_FLOAT || bt == VT_QFLOAT		6294316	1		||			
ANR	6294339	EqualityExpression	bt == VT_FLOAT		6294316	0		==			
ANR	6294340	Identifier	bt		6294316	0					
ANR	6294341	Identifier	VT_FLOAT		6294316	1					
ANR	6294342	EqualityExpression	bt == VT_QFLOAT		6294316	1		==			
ANR	6294343	Identifier	bt		6294316	0					
ANR	6294344	Identifier	VT_QFLOAT		6294316	1					
ANR	6294345	ReturnType	ST_INLN bool		6294316	1					
ANR	6294346	Identifier	is_float		6294316	2					
ANR	6294347	ParameterList	int t		6294316	3					
ANR	6294348	Parameter	int t	104:22:3852:3856	6294316	0	True				
ANR	6294349	ParameterType	int		6294316	0					
ANR	6294350	Identifier	t		6294316	1					
ANR	6294351	CFGEntryNode	ENTRY		6294316		True				
ANR	6294352	CFGExitNode	EXIT		6294316		True				
ANR	6294353	Symbol	VT_FLOAT		6294316						
ANR	6294354	Symbol	bt		6294316						
ANR	6294355	Symbol	t		6294316						
ANR	6294356	Symbol	VT_DOUBLE		6294316						
ANR	6294357	Symbol	VT_LDOUBLE		6294316						
ANR	6294358	Symbol	VT_QFLOAT		6294316						
ANR	6294359	Symbol	VT_BTYPE		6294316						
ANR	6294360	Function	not_structured	110:0:3975:4088							
ANR	6294361	FunctionDef	not_structured (CType * t)		6294360	0					
ANR	6294362	CompoundStatement		110:38:4013:4088	6294360	0					
ANR	6294363	ReturnStatement	return ( t -> t & VT_BTYPE ) != VT_STRUCT && ( t -> t & VT_BTYPE ) != VT_UNION ;	111:1:4016:4086	6294360	0	True				
ANR	6294364	AndExpression	( t -> t & VT_BTYPE ) != VT_STRUCT && ( t -> t & VT_BTYPE ) != VT_UNION		6294360	0		&&			
ANR	6294365	EqualityExpression	( t -> t & VT_BTYPE ) != VT_STRUCT		6294360	0		!=			
ANR	6294366	BitAndExpression	t -> t & VT_BTYPE		6294360	0		&			
ANR	6294367	PtrMemberAccess	t -> t		6294360	0					
ANR	6294368	Identifier	t		6294360	0					
ANR	6294369	Identifier	t		6294360	1					
ANR	6294370	Identifier	VT_BTYPE		6294360	1					
ANR	6294371	Identifier	VT_STRUCT		6294360	1					
ANR	6294372	EqualityExpression	( t -> t & VT_BTYPE ) != VT_UNION		6294360	1		!=			
ANR	6294373	BitAndExpression	t -> t & VT_BTYPE		6294360	0		&			
ANR	6294374	PtrMemberAccess	t -> t		6294360	0					
ANR	6294375	Identifier	t		6294360	0					
ANR	6294376	Identifier	t		6294360	1					
ANR	6294377	Identifier	VT_BTYPE		6294360	1					
ANR	6294378	Identifier	VT_UNION		6294360	1					
ANR	6294379	ReturnType	ST_INLN bool		6294360	1					
ANR	6294380	Identifier	not_structured		6294360	2					
ANR	6294381	ParameterList	CType * t		6294360	3					
ANR	6294382	Parameter	CType * t	110:28:4003:4010	6294360	0	True				
ANR	6294383	ParameterType	CType *		6294360	0					
ANR	6294384	Identifier	t		6294360	1					
ANR	6294385	CFGEntryNode	ENTRY		6294360		True				
ANR	6294386	CFGExitNode	EXIT		6294360		True				
ANR	6294387	Symbol	VT_UNION		6294360						
ANR	6294388	Symbol	t		6294360						
ANR	6294389	Symbol	t -> t		6294360						
ANR	6294390	Symbol	VT_BTYPE		6294360						
ANR	6294391	Symbol	VT_STRUCT		6294360						
ANR	6294392	Symbol	* t		6294360						
ANR	6294393	Function	ieee_finite	118:0:4301:4413							
ANR	6294394	FunctionDef	ieee_finite (double d)		6294393	0					
ANR	6294395	CompoundStatement		118:34:4335:4413	6294393	0					
ANR	6294396	IdentifierDeclStatement	int * p = ( int * ) & d ;	119:1:4338:4357	6294393	0	True				
ANR	6294397	IdentifierDecl	* p = ( int * ) & d		6294393	0					
ANR	6294398	IdentifierDeclType	int *		6294393	0					
ANR	6294399	Identifier	p		6294393	1					
ANR	6294400	AssignmentExpression	* p = ( int * ) & d		6294393	2		=			
ANR	6294401	Identifier	p		6294393	0					
ANR	6294402	CastExpression	( int * ) & d		6294393	1					
ANR	6294403	CastTarget	int *		6294393	0					
ANR	6294404	UnaryOperationExpression	& d		6294393	1					
ANR	6294405	UnaryOperator	&		6294393	0					
ANR	6294406	Identifier	d		6294393	1					
ANR	6294407	ReturnStatement	return ( ( unsigned ) ( ( p [ 1 ] | 0x800fffff ) + 1 ) ) >> 31 ;	120:1:4360:4411	6294393	1	True				
ANR	6294408	ShiftExpression	( ( unsigned ) ( ( p [ 1 ] | 0x800fffff ) + 1 ) ) >> 31		6294393	0		>>			
ANR	6294409	CastExpression	( unsigned ) ( ( p [ 1 ] | 0x800fffff ) + 1 )		6294393	0					
ANR	6294410	CastTarget	unsigned		6294393	0					
ANR	6294411	AdditiveExpression	( p [ 1 ] | 0x800fffff ) + 1		6294393	1		+			
ANR	6294412	InclusiveOrExpression	p [ 1 ] | 0x800fffff		6294393	0		|			
ANR	6294413	ArrayIndexing	p [ 1 ]		6294393	0					
ANR	6294414	Identifier	p		6294393	0					
ANR	6294415	PrimaryExpression	1		6294393	1					
ANR	6294416	PrimaryExpression	0x800fffff		6294393	1					
ANR	6294417	PrimaryExpression	1		6294393	1					
ANR	6294418	PrimaryExpression	31		6294393	1					
ANR	6294419	ReturnType	ST_FUNC int		6294393	1					
ANR	6294420	Identifier	ieee_finite		6294393	2					
ANR	6294421	ParameterList	double d		6294393	3					
ANR	6294422	Parameter	double d	118:24:4325:4332	6294393	0	True				
ANR	6294423	ParameterType	double		6294393	0					
ANR	6294424	Identifier	d		6294393	1					
ANR	6294425	CFGEntryNode	ENTRY		6294393		True				
ANR	6294426	CFGExitNode	EXIT		6294393		True				
ANR	6294427	Symbol	p		6294393						
ANR	6294428	Symbol	d		6294393						
ANR	6294429	Symbol	& d		6294393						
ANR	6294430	Symbol	* p		6294393						
ANR	6294431	Function	test_lvalue	123:0:4416:4502							
ANR	6294432	FunctionDef	test_lvalue ()		6294431	0					
ANR	6294433	CompoundStatement		123:31:4447:4502	6294431	0					
ANR	6294434	IfStatement	if ( ! ( vtop -> r & VT_LVAL ) )		6294431	0					
ANR	6294435	Condition	! ( vtop -> r & VT_LVAL )	124:5:4454:4473	6294431	0	True				
ANR	6294436	UnaryOperationExpression	! ( vtop -> r & VT_LVAL )		6294431	0					
ANR	6294437	UnaryOperator	!		6294431	0					
ANR	6294438	BitAndExpression	vtop -> r & VT_LVAL		6294431	1		&			
ANR	6294439	PtrMemberAccess	vtop -> r		6294431	0					
ANR	6294440	Identifier	vtop		6294431	0					
ANR	6294441	Identifier	r		6294431	1					
ANR	6294442	Identifier	VT_LVAL		6294431	1					
ANR	6294443	CompoundStatement		2:27:28:28	6294431	1					
ANR	6294444	ExpressionStatement	"expect ( ""lvalue"" )"	125:2:4480:4497	6294431	0	True				
ANR	6294445	CallExpression	"expect ( ""lvalue"" )"		6294431	0					
ANR	6294446	Callee	expect		6294431	0					
ANR	6294447	Identifier	expect		6294431	0					
ANR	6294448	ArgumentList	"""lvalue"""		6294431	1					
ANR	6294449	Argument	"""lvalue"""		6294431	0					
ANR	6294450	PrimaryExpression	"""lvalue"""		6294431	0					
ANR	6294451	ReturnType	ST_FUNC void		6294431	1					
ANR	6294452	Identifier	test_lvalue		6294431	2					
ANR	6294453	ParameterList			6294431	3					
ANR	6294454	CFGEntryNode	ENTRY		6294431		True				
ANR	6294455	CFGExitNode	EXIT		6294431		True				
ANR	6294456	Symbol	* vtop		6294431						
ANR	6294457	Symbol	vtop		6294431						
ANR	6294458	Symbol	vtop -> r		6294431						
ANR	6294459	Symbol	VT_LVAL		6294431						
ANR	6294460	Function	__sym_malloc	131:0:4608:5040							
ANR	6294461	FunctionDef	__sym_malloc ()		6294460	0					
ANR	6294462	CompoundStatement		131:31:4639:5040	6294460	0					
ANR	6294463	IdentifierDeclStatement	"Sym * sym_pool , * sym , * last_sym ;"	132:1:4642:4672	6294460	0	True				
ANR	6294464	IdentifierDecl	* sym_pool		6294460	0					
ANR	6294465	IdentifierDeclType	Sym *		6294460	0					
ANR	6294466	Identifier	sym_pool		6294460	1					
ANR	6294467	IdentifierDecl	* sym		6294460	1					
ANR	6294468	IdentifierDeclType	Sym *		6294460	0					
ANR	6294469	Identifier	sym		6294460	1					
ANR	6294470	IdentifierDecl	* last_sym		6294460	2					
ANR	6294471	IdentifierDeclType	Sym *		6294460	0					
ANR	6294472	Identifier	last_sym		6294460	1					
ANR	6294473	IdentifierDeclStatement	int i ;	133:1:4675:4680	6294460	1	True				
ANR	6294474	IdentifierDecl	i		6294460	0					
ANR	6294475	IdentifierDeclType	int		6294460	0					
ANR	6294476	Identifier	i		6294460	1					
ANR	6294477	IdentifierDeclStatement	int sym_pool_size = SYM_POOL_NB * sizeof ( Sym ) ;	134:1:4683:4728	6294460	2	True				
ANR	6294478	IdentifierDecl	sym_pool_size = SYM_POOL_NB * sizeof ( Sym )		6294460	0					
ANR	6294479	IdentifierDeclType	int		6294460	0					
ANR	6294480	Identifier	sym_pool_size		6294460	1					
ANR	6294481	AssignmentExpression	sym_pool_size = SYM_POOL_NB * sizeof ( Sym )		6294460	2		=			
ANR	6294482	Identifier	sym_pool_size		6294460	0					
ANR	6294483	MultiplicativeExpression	SYM_POOL_NB * sizeof ( Sym )		6294460	1		*			
ANR	6294484	Identifier	SYM_POOL_NB		6294460	0					
ANR	6294485	SizeofExpression	sizeof ( Sym )		6294460	1					
ANR	6294486	Sizeof	sizeof		6294460	0					
ANR	6294487	SizeofOperand	Sym		6294460	1					
ANR	6294488	ExpressionStatement	sym_pool = malloc ( sym_pool_size )	135:1:4731:4764	6294460	3	True				
ANR	6294489	AssignmentExpression	sym_pool = malloc ( sym_pool_size )		6294460	0		=			
ANR	6294490	Identifier	sym_pool		6294460	0					
ANR	6294491	CallExpression	malloc ( sym_pool_size )		6294460	1					
ANR	6294492	Callee	malloc		6294460	0					
ANR	6294493	Identifier	malloc		6294460	0					
ANR	6294494	ArgumentList	sym_pool_size		6294460	1					
ANR	6294495	Argument	sym_pool_size		6294460	0					
ANR	6294496	Identifier	sym_pool_size		6294460	0					
ANR	6294497	ExpressionStatement	"memset ( sym_pool , 0 , sym_pool_size )"	136:1:4767:4802	6294460	4	True				
ANR	6294498	CallExpression	"memset ( sym_pool , 0 , sym_pool_size )"		6294460	0					
ANR	6294499	Callee	memset		6294460	0					
ANR	6294500	Identifier	memset		6294460	0					
ANR	6294501	ArgumentList	sym_pool		6294460	1					
ANR	6294502	Argument	sym_pool		6294460	0					
ANR	6294503	Identifier	sym_pool		6294460	0					
ANR	6294504	Argument	0		6294460	1					
ANR	6294505	PrimaryExpression	0		6294460	0					
ANR	6294506	Argument	sym_pool_size		6294460	2					
ANR	6294507	Identifier	sym_pool_size		6294460	0					
ANR	6294508	ExpressionStatement	"dynarray_add ( & sym_pools , & nb_sym_pools , sym_pool )"	137:1:4805:4855	6294460	5	True				
ANR	6294509	CallExpression	"dynarray_add ( & sym_pools , & nb_sym_pools , sym_pool )"		6294460	0					
ANR	6294510	Callee	dynarray_add		6294460	0					
ANR	6294511	Identifier	dynarray_add		6294460	0					
ANR	6294512	ArgumentList	& sym_pools		6294460	1					
ANR	6294513	Argument	& sym_pools		6294460	0					
ANR	6294514	UnaryOperationExpression	& sym_pools		6294460	0					
ANR	6294515	UnaryOperator	&		6294460	0					
ANR	6294516	Identifier	sym_pools		6294460	1					
ANR	6294517	Argument	& nb_sym_pools		6294460	1					
ANR	6294518	UnaryOperationExpression	& nb_sym_pools		6294460	0					
ANR	6294519	UnaryOperator	&		6294460	0					
ANR	6294520	Identifier	nb_sym_pools		6294460	1					
ANR	6294521	Argument	sym_pool		6294460	2					
ANR	6294522	Identifier	sym_pool		6294460	0					
ANR	6294523	ExpressionStatement	last_sym = sym_free_first	139:1:4859:4884	6294460	6	True				
ANR	6294524	AssignmentExpression	last_sym = sym_free_first		6294460	0		=			
ANR	6294525	Identifier	last_sym		6294460	0					
ANR	6294526	Identifier	sym_free_first		6294460	1					
ANR	6294527	ExpressionStatement	sym = sym_pool	140:1:4887:4901	6294460	7	True				
ANR	6294528	AssignmentExpression	sym = sym_pool		6294460	0		=			
ANR	6294529	Identifier	sym		6294460	0					
ANR	6294530	Identifier	sym_pool		6294460	1					
ANR	6294531	ForStatement	for ( i = 0 ; i < SYM_POOL_NB ; i ++ )		6294460	8					
ANR	6294532	ForInit	i = 0 ;	141:6:4909:4914	6294460	0	True				
ANR	6294533	AssignmentExpression	i = 0		6294460	0		=			
ANR	6294534	Identifier	i		6294460	0					
ANR	6294535	PrimaryExpression	0		6294460	1					
ANR	6294536	Condition	i < SYM_POOL_NB	141:13:4916:4930	6294460	1	True				
ANR	6294537	RelationalExpression	i < SYM_POOL_NB		6294460	0		<			
ANR	6294538	Identifier	i		6294460	0					
ANR	6294539	Identifier	SYM_POOL_NB		6294460	1					
ANR	6294540	PostIncDecOperationExpression	i ++	141:30:4933:4935	6294460	2	True				
ANR	6294541	Identifier	i		6294460	0					
ANR	6294542	IncDec	++		6294460	1					
ANR	6294543	CompoundStatement		11:35:298:298	6294460	3					
ANR	6294544	ExpressionStatement	sym -> next = last_sym	142:2:4942:4962	6294460	0	True				
ANR	6294545	AssignmentExpression	sym -> next = last_sym		6294460	0		=			
ANR	6294546	PtrMemberAccess	sym -> next		6294460	0					
ANR	6294547	Identifier	sym		6294460	0					
ANR	6294548	Identifier	next		6294460	1					
ANR	6294549	Identifier	last_sym		6294460	1					
ANR	6294550	ExpressionStatement	last_sym = sym	143:2:4966:4980	6294460	1	True				
ANR	6294551	AssignmentExpression	last_sym = sym		6294460	0		=			
ANR	6294552	Identifier	last_sym		6294460	0					
ANR	6294553	Identifier	sym		6294460	1					
ANR	6294554	ExpressionStatement	sym ++	144:2:4984:4989	6294460	2	True				
ANR	6294555	PostIncDecOperationExpression	sym ++		6294460	0					
ANR	6294556	Identifier	sym		6294460	0					
ANR	6294557	IncDec	++		6294460	1					
ANR	6294558	ExpressionStatement	sym_free_first = last_sym	146:1:4995:5020	6294460	9	True				
ANR	6294559	AssignmentExpression	sym_free_first = last_sym		6294460	0		=			
ANR	6294560	Identifier	sym_free_first		6294460	0					
ANR	6294561	Identifier	last_sym		6294460	1					
ANR	6294562	ReturnStatement	return last_sym ;	147:1:5023:5038	6294460	10	True				
ANR	6294563	Identifier	last_sym		6294460	0					
ANR	6294564	ReturnType	static Sym *		6294460	1					
ANR	6294565	Identifier	__sym_malloc		6294460	2					
ANR	6294566	ParameterList			6294460	3					
ANR	6294567	CFGEntryNode	ENTRY		6294460		True				
ANR	6294568	CFGExitNode	EXIT		6294460		True				
ANR	6294569	Symbol	sym_free_first		6294460						
ANR	6294570	Symbol	malloc		6294460						
ANR	6294571	Symbol	* sym		6294460						
ANR	6294572	Symbol	& nb_sym_pools		6294460						
ANR	6294573	Symbol	sym		6294460						
ANR	6294574	Symbol	last_sym		6294460						
ANR	6294575	Symbol	i		6294460						
ANR	6294576	Symbol	sym_pool_size		6294460						
ANR	6294577	Symbol	& sym_pools		6294460						
ANR	6294578	Symbol	sym_pool		6294460						
ANR	6294579	Symbol	SYM_POOL_NB		6294460						
ANR	6294580	Symbol	sym -> next		6294460						
ANR	6294581	Function	sym_malloc	150:0:5043:5198							
ANR	6294582	FunctionDef	sym_malloc ()		6294581	0					
ANR	6294583	CompoundStatement		150:36:5079:5198	6294581	0					
ANR	6294584	IdentifierDeclStatement	Sym * sym ;	151:1:5082:5090	6294581	0	True				
ANR	6294585	IdentifierDecl	* sym		6294581	0					
ANR	6294586	IdentifierDeclType	Sym *		6294581	0					
ANR	6294587	Identifier	sym		6294581	1					
ANR	6294588	ExpressionStatement	sym = sym_free_first	152:1:5093:5113	6294581	1	True				
ANR	6294589	AssignmentExpression	sym = sym_free_first		6294581	0		=			
ANR	6294590	Identifier	sym		6294581	0					
ANR	6294591	Identifier	sym_free_first		6294581	1					
ANR	6294592	IfStatement	if ( ! sym )		6294581	2					
ANR	6294593	Condition	! sym	153:5:5120:5123	6294581	0	True				
ANR	6294594	UnaryOperationExpression	! sym		6294581	0					
ANR	6294595	UnaryOperator	!		6294581	0					
ANR	6294596	Identifier	sym		6294581	1					
ANR	6294597	CompoundStatement		4:11:46:46	6294581	1					
ANR	6294598	ExpressionStatement	sym = __sym_malloc ( )	154:2:5130:5151	6294581	0	True				
ANR	6294599	AssignmentExpression	sym = __sym_malloc ( )		6294581	0		=			
ANR	6294600	Identifier	sym		6294581	0					
ANR	6294601	CallExpression	__sym_malloc ( )		6294581	1					
ANR	6294602	Callee	__sym_malloc		6294581	0					
ANR	6294603	Identifier	__sym_malloc		6294581	0					
ANR	6294604	ArgumentList			6294581	1					
ANR	6294605	ExpressionStatement	sym_free_first = sym -> next	156:1:5157:5183	6294581	3	True				
ANR	6294606	AssignmentExpression	sym_free_first = sym -> next		6294581	0		=			
ANR	6294607	Identifier	sym_free_first		6294581	0					
ANR	6294608	PtrMemberAccess	sym -> next		6294581	1					
ANR	6294609	Identifier	sym		6294581	0					
ANR	6294610	Identifier	next		6294581	1					
ANR	6294611	ReturnStatement	return sym ;	157:1:5186:5196	6294581	4	True				
ANR	6294612	Identifier	sym		6294581	0					
ANR	6294613	ReturnType	static inline Sym *		6294581	1					
ANR	6294614	Identifier	sym_malloc		6294581	2					
ANR	6294615	ParameterList			6294581	3					
ANR	6294616	CFGEntryNode	ENTRY		6294581		True				
ANR	6294617	CFGExitNode	EXIT		6294581		True				
ANR	6294618	Symbol	sym_free_first		6294581						
ANR	6294619	Symbol	* sym		6294581						
ANR	6294620	Symbol	sym		6294581						
ANR	6294621	Symbol	__sym_malloc		6294581						
ANR	6294622	Symbol	sym -> next		6294581						
ANR	6294623	Function	sym_free	160:0:5201:5311							
ANR	6294624	FunctionDef	sym_free (Sym * sym)		6294623	0					
ANR	6294625	CompoundStatement		160:32:5233:5311	6294623	0					
ANR	6294626	ExpressionStatement	sym -> next = sym_free_first	161:1:5236:5262	6294623	0	True				
ANR	6294627	AssignmentExpression	sym -> next = sym_free_first		6294623	0		=			
ANR	6294628	PtrMemberAccess	sym -> next		6294623	0					
ANR	6294629	Identifier	sym		6294623	0					
ANR	6294630	Identifier	next		6294623	1					
ANR	6294631	Identifier	sym_free_first		6294623	1					
ANR	6294632	ExpressionStatement	free ( sym -> asm_label )	162:1:5265:5286	6294623	1	True				
ANR	6294633	CallExpression	free ( sym -> asm_label )		6294623	0					
ANR	6294634	Callee	free		6294623	0					
ANR	6294635	Identifier	free		6294623	0					
ANR	6294636	ArgumentList	sym -> asm_label		6294623	1					
ANR	6294637	Argument	sym -> asm_label		6294623	0					
ANR	6294638	PtrMemberAccess	sym -> asm_label		6294623	0					
ANR	6294639	Identifier	sym		6294623	0					
ANR	6294640	Identifier	asm_label		6294623	1					
ANR	6294641	ExpressionStatement	sym_free_first = sym	163:1:5289:5309	6294623	2	True				
ANR	6294642	AssignmentExpression	sym_free_first = sym		6294623	0		=			
ANR	6294643	Identifier	sym_free_first		6294623	0					
ANR	6294644	Identifier	sym		6294623	1					
ANR	6294645	ReturnType	ST_INLN void		6294623	1					
ANR	6294646	Identifier	sym_free		6294623	2					
ANR	6294647	ParameterList	Sym * sym		6294623	3					
ANR	6294648	Parameter	Sym * sym	160:22:5223:5230	6294623	0	True				
ANR	6294649	ParameterType	Sym *		6294623	0					
ANR	6294650	Identifier	sym		6294623	1					
ANR	6294651	CFGEntryNode	ENTRY		6294623		True				
ANR	6294652	CFGExitNode	EXIT		6294623		True				
ANR	6294653	Symbol	sym_free_first		6294623						
ANR	6294654	Symbol	* sym		6294623						
ANR	6294655	Symbol	sym -> asm_label		6294623						
ANR	6294656	Symbol	sym		6294623						
ANR	6294657	Symbol	sym -> next		6294623						
ANR	6294658	Function	sym_push2	167:0:5342:5992							
ANR	6294659	FunctionDef	"sym_push2 (Sym * * ps , int v , int t , long long c)"		6294658	0					
ANR	6294660	CompoundStatement		167:60:5402:5992	6294658	0					
ANR	6294661	IdentifierDeclStatement	Sym * s ;	168:1:5405:5411	6294658	0	True				
ANR	6294662	IdentifierDecl	* s		6294658	0					
ANR	6294663	IdentifierDeclType	Sym *		6294658	0					
ANR	6294664	Identifier	s		6294658	1					
ANR	6294665	IfStatement	if ( ps == & local_stack )		6294658	1					
ANR	6294666	Condition	ps == & local_stack	169:5:5418:5435	6294658	0	True				
ANR	6294667	EqualityExpression	ps == & local_stack		6294658	0		==			
ANR	6294668	Identifier	ps		6294658	0					
ANR	6294669	UnaryOperationExpression	& local_stack		6294658	1					
ANR	6294670	UnaryOperator	&		6294658	0					
ANR	6294671	Identifier	local_stack		6294658	1					
ANR	6294672	CompoundStatement		3:25:35:35	6294658	1					
ANR	6294673	ForStatement	for ( s = * ps ; s && s != scope_stack_bottom ; s = s -> prev )		6294658	0					
ANR	6294674	ForInit	s = * ps ;	170:7:5447:5454	6294658	0	True				
ANR	6294675	AssignmentExpression	s = * ps		6294658	0		=			
ANR	6294676	Identifier	s		6294658	0					
ANR	6294677	UnaryOperationExpression	* ps		6294658	1					
ANR	6294678	UnaryOperator	*		6294658	0					
ANR	6294679	Identifier	ps		6294658	1					
ANR	6294680	Condition	s && s != scope_stack_bottom	170:16:5456:5483	6294658	1	True				
ANR	6294681	AndExpression	s && s != scope_stack_bottom		6294658	0		&&			
ANR	6294682	Identifier	s		6294658	0					
ANR	6294683	EqualityExpression	s != scope_stack_bottom		6294658	1		!=			
ANR	6294684	Identifier	s		6294658	0					
ANR	6294685	Identifier	scope_stack_bottom		6294658	1					
ANR	6294686	AssignmentExpression	s = s -> prev	170:46:5486:5496	6294658	2	True	=			
ANR	6294687	Identifier	s		6294658	0					
ANR	6294688	PtrMemberAccess	s -> prev		6294658	1					
ANR	6294689	Identifier	s		6294658	0					
ANR	6294690	Identifier	prev		6294658	1					
ANR	6294691	CompoundStatement		4:59:96:96	6294658	3					
ANR	6294692	IfStatement	if ( ! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM && s -> v == v )		6294658	0					
ANR	6294693	Condition	! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM && s -> v == v	171:7:5508:5574	6294658	0	True				
ANR	6294694	AndExpression	! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM && s -> v == v		6294658	0		&&			
ANR	6294695	UnaryOperationExpression	! ( v & SYM_FIELD )		6294658	0					
ANR	6294696	UnaryOperator	!		6294658	0					
ANR	6294697	BitAndExpression	v & SYM_FIELD		6294658	1		&			
ANR	6294698	Identifier	v		6294658	0					
ANR	6294699	Identifier	SYM_FIELD		6294658	1					
ANR	6294700	AndExpression	( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM && s -> v == v		6294658	1		&&			
ANR	6294701	RelationalExpression	( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM		6294658	0		<			
ANR	6294702	BitAndExpression	v & ~SYM_STRUCT		6294658	0		&			
ANR	6294703	Identifier	v		6294658	0					
ANR	6294704	Identifier	~SYM_STRUCT		6294658	1					
ANR	6294705	Identifier	SYM_FIRST_ANOM		6294658	1					
ANR	6294706	EqualityExpression	s -> v == v		6294658	1		==			
ANR	6294707	PtrMemberAccess	s -> v		6294658	0					
ANR	6294708	Identifier	s		6294658	0					
ANR	6294709	Identifier	v		6294658	1					
ANR	6294710	Identifier	v		6294658	1					
ANR	6294711	CompoundStatement		5:76:174:174	6294658	1					
ANR	6294712	ExpressionStatement	"tcc_error ( ""incompatible types for redefinition of '%s'"" , get_tok_str ( v , NULL ) )"	172:4:5583:5668	6294658	0	True				
ANR	6294713	CallExpression	"tcc_error ( ""incompatible types for redefinition of '%s'"" , get_tok_str ( v , NULL ) )"		6294658	0					
ANR	6294714	Callee	tcc_error		6294658	0					
ANR	6294715	Identifier	tcc_error		6294658	0					
ANR	6294716	ArgumentList	"""incompatible types for redefinition of '%s'"""		6294658	1					
ANR	6294717	Argument	"""incompatible types for redefinition of '%s'"""		6294658	0					
ANR	6294718	PrimaryExpression	"""incompatible types for redefinition of '%s'"""		6294658	0					
ANR	6294719	Argument	"get_tok_str ( v , NULL )"		6294658	1					
ANR	6294720	CallExpression	"get_tok_str ( v , NULL )"		6294658	0					
ANR	6294721	Callee	get_tok_str		6294658	0					
ANR	6294722	Identifier	get_tok_str		6294658	0					
ANR	6294723	ArgumentList	v		6294658	1					
ANR	6294724	Argument	v		6294658	0					
ANR	6294725	Identifier	v		6294658	0					
ANR	6294726	Argument	NULL		6294658	1					
ANR	6294727	Identifier	NULL		6294658	0					
ANR	6294728	ReturnStatement	return NULL ;	174:4:5674:5685	6294658	1	True				
ANR	6294729	Identifier	NULL		6294658	0					
ANR	6294730	ExpressionStatement	s = sym_malloc ( )	180:1:5783:5800	6294658	2	True				
ANR	6294731	AssignmentExpression	s = sym_malloc ( )		6294658	0		=			
ANR	6294732	Identifier	s		6294658	0					
ANR	6294733	CallExpression	sym_malloc ( )		6294658	1					
ANR	6294734	Callee	sym_malloc		6294658	0					
ANR	6294735	Identifier	sym_malloc		6294658	0					
ANR	6294736	ArgumentList			6294658	1					
ANR	6294737	ExpressionStatement	s -> asm_label = NULL	181:1:5803:5822	6294658	3	True				
ANR	6294738	AssignmentExpression	s -> asm_label = NULL		6294658	0		=			
ANR	6294739	PtrMemberAccess	s -> asm_label		6294658	0					
ANR	6294740	Identifier	s		6294658	0					
ANR	6294741	Identifier	asm_label		6294658	1					
ANR	6294742	Identifier	NULL		6294658	1					
ANR	6294743	ExpressionStatement	s -> v = v	182:1:5825:5833	6294658	4	True				
ANR	6294744	AssignmentExpression	s -> v = v		6294658	0		=			
ANR	6294745	PtrMemberAccess	s -> v		6294658	0					
ANR	6294746	Identifier	s		6294658	0					
ANR	6294747	Identifier	v		6294658	1					
ANR	6294748	Identifier	v		6294658	1					
ANR	6294749	ExpressionStatement	s -> type . t = t	183:1:5836:5849	6294658	5	True				
ANR	6294750	AssignmentExpression	s -> type . t = t		6294658	0		=			
ANR	6294751	MemberAccess	s -> type . t		6294658	0					
ANR	6294752	PtrMemberAccess	s -> type		6294658	0					
ANR	6294753	Identifier	s		6294658	0					
ANR	6294754	Identifier	type		6294658	1					
ANR	6294755	Identifier	t		6294658	1					
ANR	6294756	Identifier	t		6294658	1					
ANR	6294757	ExpressionStatement	s -> type . ref = NULL	184:1:5852:5870	6294658	6	True				
ANR	6294758	AssignmentExpression	s -> type . ref = NULL		6294658	0		=			
ANR	6294759	MemberAccess	s -> type . ref		6294658	0					
ANR	6294760	PtrMemberAccess	s -> type		6294658	0					
ANR	6294761	Identifier	s		6294658	0					
ANR	6294762	Identifier	type		6294658	1					
ANR	6294763	Identifier	ref		6294658	1					
ANR	6294764	Identifier	NULL		6294658	1					
ANR	6294765	ExpressionStatement	s -> d = NULL	186:1:5887:5898	6294658	7	True				
ANR	6294766	AssignmentExpression	s -> d = NULL		6294658	0		=			
ANR	6294767	PtrMemberAccess	s -> d		6294658	0					
ANR	6294768	Identifier	s		6294658	0					
ANR	6294769	Identifier	d		6294658	1					
ANR	6294770	Identifier	NULL		6294658	1					
ANR	6294771	ExpressionStatement	s -> c = c	188:1:5908:5916	6294658	8	True				
ANR	6294772	AssignmentExpression	s -> c = c		6294658	0		=			
ANR	6294773	PtrMemberAccess	s -> c		6294658	0					
ANR	6294774	Identifier	s		6294658	0					
ANR	6294775	Identifier	c		6294658	1					
ANR	6294776	Identifier	c		6294658	1					
ANR	6294777	ExpressionStatement	s -> next = NULL	189:1:5919:5933	6294658	9	True				
ANR	6294778	AssignmentExpression	s -> next = NULL		6294658	0		=			
ANR	6294779	PtrMemberAccess	s -> next		6294658	0					
ANR	6294780	Identifier	s		6294658	0					
ANR	6294781	Identifier	next		6294658	1					
ANR	6294782	Identifier	NULL		6294658	1					
ANR	6294783	ExpressionStatement	s -> prev = * ps	191:1:5956:5969	6294658	10	True				
ANR	6294784	AssignmentExpression	s -> prev = * ps		6294658	0		=			
ANR	6294785	PtrMemberAccess	s -> prev		6294658	0					
ANR	6294786	Identifier	s		6294658	0					
ANR	6294787	Identifier	prev		6294658	1					
ANR	6294788	UnaryOperationExpression	* ps		6294658	1					
ANR	6294789	UnaryOperator	*		6294658	0					
ANR	6294790	Identifier	ps		6294658	1					
ANR	6294791	ExpressionStatement	* ps = s	192:1:5972:5979	6294658	11	True				
ANR	6294792	AssignmentExpression	* ps = s		6294658	0		=			
ANR	6294793	UnaryOperationExpression	* ps		6294658	0					
ANR	6294794	UnaryOperator	*		6294658	0					
ANR	6294795	Identifier	ps		6294658	1					
ANR	6294796	Identifier	s		6294658	1					
ANR	6294797	ReturnStatement	return s ;	193:1:5982:5990	6294658	12	True				
ANR	6294798	Identifier	s		6294658	0					
ANR	6294799	ReturnType	ST_FUNC Sym *		6294658	1					
ANR	6294800	Identifier	sym_push2		6294658	2					
ANR	6294801	ParameterList	"Sym * * ps , int v , int t , long long c"		6294658	3					
ANR	6294802	Parameter	Sym * * ps	167:23:5365:5372	6294658	0	True				
ANR	6294803	ParameterType	Sym * *		6294658	0					
ANR	6294804	Identifier	ps		6294658	1					
ANR	6294805	Parameter	int v	167:33:5375:5379	6294658	1	True				
ANR	6294806	ParameterType	int		6294658	0					
ANR	6294807	Identifier	v		6294658	1					
ANR	6294808	Parameter	int t	167:40:5382:5386	6294658	2	True				
ANR	6294809	ParameterType	int		6294658	0					
ANR	6294810	Identifier	t		6294658	1					
ANR	6294811	Parameter	long long c	167:47:5389:5399	6294658	3	True				
ANR	6294812	ParameterType	long long		6294658	0					
ANR	6294813	Identifier	c		6294658	1					
ANR	6294814	CFGEntryNode	ENTRY		6294658		True				
ANR	6294815	CFGExitNode	EXIT		6294658		True				
ANR	6294816	Symbol	s -> v		6294658						
ANR	6294817	Symbol	ps		6294658						
ANR	6294818	Symbol	c		6294658						
ANR	6294819	Symbol	SYM_FIRST_ANOM		6294658						
ANR	6294820	Symbol	NULL		6294658						
ANR	6294821	Symbol	get_tok_str		6294658						
ANR	6294822	Symbol	scope_stack_bottom		6294658						
ANR	6294823	Symbol	s -> type . ref		6294658						
ANR	6294824	Symbol	s -> asm_label		6294658						
ANR	6294825	Symbol	* ps		6294658						
ANR	6294826	Symbol	s -> prev		6294658						
ANR	6294827	Symbol	s -> next		6294658						
ANR	6294828	Symbol	s -> type . t		6294658						
ANR	6294829	Symbol	sym_malloc		6294658						
ANR	6294830	Symbol	s		6294658						
ANR	6294831	Symbol	SYM_FIELD		6294658						
ANR	6294832	Symbol	t		6294658						
ANR	6294833	Symbol	s -> c		6294658						
ANR	6294834	Symbol	v		6294658						
ANR	6294835	Symbol	& local_stack		6294658						
ANR	6294836	Symbol	~SYM_STRUCT		6294658						
ANR	6294837	Symbol	s -> d		6294658						
ANR	6294838	Symbol	* s		6294658						
ANR	6294839	Symbol	s -> type		6294658						
ANR	6294840	Function	sym_find2	198:0:6090:6211							
ANR	6294841	FunctionDef	"sym_find2 (Sym * s , int v)"		6294840	0					
ANR	6294842	CompoundStatement		198:38:6128:6211	6294840	0					
ANR	6294843	WhileStatement	while ( s )		6294840	0					
ANR	6294844	Condition	s	199:8:6138:6138	6294840	0	True				
ANR	6294845	Identifier	s		6294840	0					
ANR	6294846	CompoundStatement		2:11:12:12	6294840	1					
ANR	6294847	IfStatement	if ( s -> v == v )		6294840	0					
ANR	6294848	Condition	s -> v == v	200:6:6149:6157	6294840	0	True				
ANR	6294849	EqualityExpression	s -> v == v		6294840	0		==			
ANR	6294850	PtrMemberAccess	s -> v		6294840	0					
ANR	6294851	Identifier	s		6294840	0					
ANR	6294852	Identifier	v		6294840	1					
ANR	6294853	Identifier	v		6294840	1					
ANR	6294854	CompoundStatement		3:17:31:31	6294840	1					
ANR	6294855	ReturnStatement	return s ;	201:3:6165:6173	6294840	0	True				
ANR	6294856	Identifier	s		6294840	0					
ANR	6294857	ExpressionStatement	s = s -> prev	203:2:6181:6192	6294840	1	True				
ANR	6294858	AssignmentExpression	s = s -> prev		6294840	0		=			
ANR	6294859	Identifier	s		6294840	0					
ANR	6294860	PtrMemberAccess	s -> prev		6294840	1					
ANR	6294861	Identifier	s		6294840	0					
ANR	6294862	Identifier	prev		6294840	1					
ANR	6294863	ReturnStatement	return NULL ;	205:1:6198:6209	6294840	1	True				
ANR	6294864	Identifier	NULL		6294840	0					
ANR	6294865	ReturnType	ST_FUNC Sym *		6294840	1					
ANR	6294866	Identifier	sym_find2		6294840	2					
ANR	6294867	ParameterList	"Sym * s , int v"		6294840	3					
ANR	6294868	Parameter	Sym * s	198:23:6113:6118	6294840	0	True				
ANR	6294869	ParameterType	Sym *		6294840	0					
ANR	6294870	Identifier	s		6294840	1					
ANR	6294871	Parameter	int v	198:31:6121:6125	6294840	1	True				
ANR	6294872	ParameterType	int		6294840	0					
ANR	6294873	Identifier	v		6294840	1					
ANR	6294874	CFGEntryNode	ENTRY		6294840		True				
ANR	6294875	CFGExitNode	EXIT		6294840		True				
ANR	6294876	Symbol	s -> v		6294840						
ANR	6294877	Symbol	s		6294840						
ANR	6294878	Symbol	NULL		6294840						
ANR	6294879	Symbol	v		6294840						
ANR	6294880	Symbol	s -> prev		6294840						
ANR	6294881	Symbol	* s		6294840						
ANR	6294882	Function	struct_find	209:0:6237:6401							
ANR	6294883	FunctionDef	struct_find (int v)		6294882	0					
ANR	6294884	CompoundStatement		209:32:6269:6401	6294882	0					
ANR	6294885	ExpressionStatement	v -= TOK_IDENT	210:1:6272:6286	6294882	0	True				
ANR	6294886	AssignmentExpression	v -= TOK_IDENT		6294882	0		-=			
ANR	6294887	Identifier	v		6294882	0					
ANR	6294888	Identifier	TOK_IDENT		6294882	1					
ANR	6294889	IfStatement	if ( ( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT ) )		6294882	1					
ANR	6294890	Condition	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )	211:5:6293:6342	6294882	0	True				
ANR	6294891	RelationalExpression	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )		6294882	0		>=			
ANR	6294892	CastExpression	( unsigned ) v		6294882	0					
ANR	6294893	CastTarget	unsigned		6294882	0					
ANR	6294894	Identifier	v		6294882	1					
ANR	6294895	CastExpression	( unsigned ) ( tok_ident - TOK_IDENT )		6294882	1					
ANR	6294896	CastTarget	unsigned		6294882	0					
ANR	6294897	AdditiveExpression	tok_ident - TOK_IDENT		6294882	1		-			
ANR	6294898	Identifier	tok_ident		6294882	0					
ANR	6294899	Identifier	TOK_IDENT		6294882	1					
ANR	6294900	CompoundStatement		3:57:75:75	6294882	1					
ANR	6294901	ReturnStatement	return NULL ;	212:2:6349:6360	6294882	0	True				
ANR	6294902	Identifier	NULL		6294882	0					
ANR	6294903	ReturnStatement	return table_ident [ v ] -> sym_struct ;	214:1:6366:6399	6294882	2	True				
ANR	6294904	PtrMemberAccess	table_ident [ v ] -> sym_struct		6294882	0					
ANR	6294905	ArrayIndexing	table_ident [ v ]		6294882	0					
ANR	6294906	Identifier	table_ident		6294882	0					
ANR	6294907	Identifier	v		6294882	1					
ANR	6294908	Identifier	sym_struct		6294882	1					
ANR	6294909	ReturnType	ST_INLN Sym *		6294882	1					
ANR	6294910	Identifier	struct_find		6294882	2					
ANR	6294911	ParameterList	int v		6294882	3					
ANR	6294912	Parameter	int v	209:25:6262:6266	6294882	0	True				
ANR	6294913	ParameterType	int		6294882	0					
ANR	6294914	Identifier	v		6294882	1					
ANR	6294915	CFGEntryNode	ENTRY		6294882		True				
ANR	6294916	CFGExitNode	EXIT		6294882		True				
ANR	6294917	Symbol	* v		6294882						
ANR	6294918	Symbol	table_ident		6294882						
ANR	6294919	Symbol	tok_ident		6294882						
ANR	6294920	Symbol	NULL		6294882						
ANR	6294921	Symbol	TOK_IDENT		6294882						
ANR	6294922	Symbol	* * v		6294882						
ANR	6294923	Symbol	v		6294882						
ANR	6294924	Symbol	table_ident [ v ] -> sym_struct		6294882						
ANR	6294925	Symbol	* * table_ident		6294882						
ANR	6294926	Symbol	* table_ident		6294882						
ANR	6294927	Function	sym_find	218:0:6429:6594							
ANR	6294928	FunctionDef	sym_find (int v)		6294927	0					
ANR	6294929	CompoundStatement		218:29:6458:6594	6294927	0					
ANR	6294930	ExpressionStatement	v -= TOK_IDENT	219:1:6461:6475	6294927	0	True				
ANR	6294931	AssignmentExpression	v -= TOK_IDENT		6294927	0		-=			
ANR	6294932	Identifier	v		6294927	0					
ANR	6294933	Identifier	TOK_IDENT		6294927	1					
ANR	6294934	IfStatement	if ( ( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT ) )		6294927	1					
ANR	6294935	Condition	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )	220:5:6482:6531	6294927	0	True				
ANR	6294936	RelationalExpression	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )		6294927	0		>=			
ANR	6294937	CastExpression	( unsigned ) v		6294927	0					
ANR	6294938	CastTarget	unsigned		6294927	0					
ANR	6294939	Identifier	v		6294927	1					
ANR	6294940	CastExpression	( unsigned ) ( tok_ident - TOK_IDENT )		6294927	1					
ANR	6294941	CastTarget	unsigned		6294927	0					
ANR	6294942	AdditiveExpression	tok_ident - TOK_IDENT		6294927	1		-			
ANR	6294943	Identifier	tok_ident		6294927	0					
ANR	6294944	Identifier	TOK_IDENT		6294927	1					
ANR	6294945	CompoundStatement		3:57:75:75	6294927	1					
ANR	6294946	ReturnStatement	return NULL ;	221:2:6538:6549	6294927	0	True				
ANR	6294947	Identifier	NULL		6294927	0					
ANR	6294948	ReturnStatement	return table_ident [ v ] -> sym_identifier ;	223:1:6555:6592	6294927	2	True				
ANR	6294949	PtrMemberAccess	table_ident [ v ] -> sym_identifier		6294927	0					
ANR	6294950	ArrayIndexing	table_ident [ v ]		6294927	0					
ANR	6294951	Identifier	table_ident		6294927	0					
ANR	6294952	Identifier	v		6294927	1					
ANR	6294953	Identifier	sym_identifier		6294927	1					
ANR	6294954	ReturnType	ST_INLN Sym *		6294927	1					
ANR	6294955	Identifier	sym_find		6294927	2					
ANR	6294956	ParameterList	int v		6294927	3					
ANR	6294957	Parameter	int v	218:22:6451:6455	6294927	0	True				
ANR	6294958	ParameterType	int		6294927	0					
ANR	6294959	Identifier	v		6294927	1					
ANR	6294960	CFGEntryNode	ENTRY		6294927		True				
ANR	6294961	CFGExitNode	EXIT		6294927		True				
ANR	6294962	Symbol	* v		6294927						
ANR	6294963	Symbol	table_ident		6294927						
ANR	6294964	Symbol	tok_ident		6294927						
ANR	6294965	Symbol	NULL		6294927						
ANR	6294966	Symbol	TOK_IDENT		6294927						
ANR	6294967	Symbol	* * v		6294927						
ANR	6294968	Symbol	v		6294927						
ANR	6294969	Symbol	* * table_ident		6294927						
ANR	6294970	Symbol	table_ident [ v ] -> sym_identifier		6294927						
ANR	6294971	Symbol	* table_ident		6294927						
ANR	6294972	Function	tcc_sym_push	228:0:6676:6958							
ANR	6294973	FunctionDef	"tcc_sym_push (char * typename , int typesize , int meta)"		6294972	0					
ANR	6294974	CompoundStatement		228:57:6733:6958	6294972	0					
ANR	6294975	IdentifierDeclStatement	CType * new_type = ( CType * ) malloc ( sizeof ( CType ) ) ;	229:1:6736:6786	6294972	0	True				
ANR	6294976	IdentifierDecl	* new_type = ( CType * ) malloc ( sizeof ( CType ) )		6294972	0					
ANR	6294977	IdentifierDeclType	CType *		6294972	0					
ANR	6294978	Identifier	new_type		6294972	1					
ANR	6294979	AssignmentExpression	* new_type = ( CType * ) malloc ( sizeof ( CType ) )		6294972	2		=			
ANR	6294980	Identifier	new_type		6294972	0					
ANR	6294981	CastExpression	( CType * ) malloc ( sizeof ( CType ) )		6294972	1					
ANR	6294982	CastTarget	CType *		6294972	0					
ANR	6294983	CallExpression	malloc ( sizeof ( CType ) )		6294972	1					
ANR	6294984	Callee	malloc		6294972	0					
ANR	6294985	Identifier	malloc		6294972	0					
ANR	6294986	ArgumentList	sizeof ( CType )		6294972	1					
ANR	6294987	Argument	sizeof ( CType )		6294972	0					
ANR	6294988	SizeofExpression	sizeof ( CType )		6294972	0					
ANR	6294989	Sizeof	sizeof		6294972	0					
ANR	6294990	SizeofOperand	CType		6294972	1					
ANR	6294991	IfStatement	if ( ! new_type )		6294972	1					
ANR	6294992	Condition	! new_type	230:5:6793:6801	6294972	0	True				
ANR	6294993	UnaryOperationExpression	! new_type		6294972	0					
ANR	6294994	UnaryOperator	!		6294972	0					
ANR	6294995	Identifier	new_type		6294972	1					
ANR	6294996	CompoundStatement		3:16:70:70	6294972	1					
ANR	6294997	ReturnStatement	return 0 ;	231:2:6808:6816	6294972	0	True				
ANR	6294998	PrimaryExpression	0		6294972	0					
ANR	6294999	ExpressionStatement	new_type -> ref = sym_malloc ( )	233:1:6822:6851	6294972	2	True				
ANR	6295000	AssignmentExpression	new_type -> ref = sym_malloc ( )		6294972	0		=			
ANR	6295001	PtrMemberAccess	new_type -> ref		6294972	0					
ANR	6295002	Identifier	new_type		6294972	0					
ANR	6295003	Identifier	ref		6294972	1					
ANR	6295004	CallExpression	sym_malloc ( )		6294972	1					
ANR	6295005	Callee	sym_malloc		6294972	0					
ANR	6295006	Identifier	sym_malloc		6294972	0					
ANR	6295007	ArgumentList			6294972	1					
ANR	6295008	ExpressionStatement	new_type -> t = meta	234:1:6854:6872	6294972	3	True				
ANR	6295009	AssignmentExpression	new_type -> t = meta		6294972	0		=			
ANR	6295010	PtrMemberAccess	new_type -> t		6294972	0					
ANR	6295011	Identifier	new_type		6294972	0					
ANR	6295012	Identifier	t		6294972	1					
ANR	6295013	Identifier	meta		6294972	1					
ANR	6295014	IfStatement	"if ( ! sym_push ( 0 , new_type , 0 , 0 ) )"		6294972	4					
ANR	6295015	Condition	"! sym_push ( 0 , new_type , 0 , 0 )"	236:5:6880:6908	6294972	0	True				
ANR	6295016	UnaryOperationExpression	"! sym_push ( 0 , new_type , 0 , 0 )"		6294972	0					
ANR	6295017	UnaryOperator	!		6294972	0					
ANR	6295018	CallExpression	"sym_push ( 0 , new_type , 0 , 0 )"		6294972	1					
ANR	6295019	Callee	sym_push		6294972	0					
ANR	6295020	Identifier	sym_push		6294972	0					
ANR	6295021	ArgumentList	0		6294972	1					
ANR	6295022	Argument	0		6294972	0					
ANR	6295023	PrimaryExpression	0		6294972	0					
ANR	6295024	Argument	new_type		6294972	1					
ANR	6295025	Identifier	new_type		6294972	0					
ANR	6295026	Argument	0		6294972	2					
ANR	6295027	PrimaryExpression	0		6294972	0					
ANR	6295028	Argument	0		6294972	3					
ANR	6295029	PrimaryExpression	0		6294972	0					
ANR	6295030	CompoundStatement		9:36:177:177	6294972	1					
ANR	6295031	ReturnStatement	return 0 ;	237:2:6915:6923	6294972	0	True				
ANR	6295032	PrimaryExpression	0		6294972	0					
ANR	6295033	ExpressionStatement	free ( new_type )	240:1:6930:6945	6294972	5	True				
ANR	6295034	CallExpression	free ( new_type )		6294972	0					
ANR	6295035	Callee	free		6294972	0					
ANR	6295036	Identifier	free		6294972	0					
ANR	6295037	ArgumentList	new_type		6294972	1					
ANR	6295038	Argument	new_type		6294972	0					
ANR	6295039	Identifier	new_type		6294972	0					
ANR	6295040	ReturnStatement	return 1 ;	241:1:6948:6956	6294972	6	True				
ANR	6295041	PrimaryExpression	1		6294972	0					
ANR	6295042	ReturnType	int		6294972	1					
ANR	6295043	Identifier	tcc_sym_push		6294972	2					
ANR	6295044	ParameterList	"char * typename , int typesize , int meta"		6294972	3					
ANR	6295045	Parameter	char * typename	228:17:6693:6706	6294972	0	True				
ANR	6295046	ParameterType	char *		6294972	0					
ANR	6295047	Identifier	typename		6294972	1					
ANR	6295048	Parameter	int typesize	228:33:6709:6720	6294972	1	True				
ANR	6295049	ParameterType	int		6294972	0					
ANR	6295050	Identifier	typesize		6294972	1					
ANR	6295051	Parameter	int meta	228:47:6723:6730	6294972	2	True				
ANR	6295052	ParameterType	int		6294972	0					
ANR	6295053	Identifier	meta		6294972	1					
ANR	6295054	CFGEntryNode	ENTRY		6294972		True				
ANR	6295055	CFGExitNode	EXIT		6294972		True				
ANR	6295056	Symbol	sym_malloc		6294972						
ANR	6295057	Symbol	malloc		6294972						
ANR	6295058	Symbol	new_type		6294972						
ANR	6295059	Symbol	new_type -> t		6294972						
ANR	6295060	Symbol	typesize		6294972						
ANR	6295061	Symbol	meta		6294972						
ANR	6295062	Symbol	sym_push		6294972						
ANR	6295063	Symbol	* new_type		6294972						
ANR	6295064	Symbol	new_type -> ref		6294972						
ANR	6295065	Symbol	typename		6294972						
ANR	6295066	Function	dump_type	244:0:6961:7964							
ANR	6295067	FunctionDef	"dump_type (CType * type , int depth)"		6295066	0					
ANR	6295068	CompoundStatement		244:39:7000:7964	6295066	0					
ANR	6295069	IfStatement	if ( depth <= 0 )		6295066	0					
ANR	6295070	Condition	depth <= 0	245:5:7007:7016	6295066	0	True				
ANR	6295071	RelationalExpression	depth <= 0		6295066	0		<=			
ANR	6295072	Identifier	depth		6295066	0					
ANR	6295073	PrimaryExpression	0		6295066	1					
ANR	6295074	CompoundStatement		2:17:18:18	6295066	1					
ANR	6295075	ReturnStatement	return ;	246:2:7023:7029	6295066	0	True				
ANR	6295076	ExpressionStatement	"eprintf ( ""------------------------\\n"" )"	248:1:7035:7073	6295066	1	True				
ANR	6295077	CallExpression	"eprintf ( ""------------------------\\n"" )"		6295066	0					
ANR	6295078	Callee	eprintf		6295066	0					
ANR	6295079	Identifier	eprintf		6295066	0					
ANR	6295080	ArgumentList	"""------------------------\\n"""		6295066	1					
ANR	6295081	Argument	"""------------------------\\n"""		6295066	0					
ANR	6295082	PrimaryExpression	"""------------------------\\n"""		6295066	0					
ANR	6295083	IdentifierDeclStatement	int bt = type -> t & VT_BTYPE ;	249:1:7076:7103	6295066	2	True				
ANR	6295084	IdentifierDecl	bt = type -> t & VT_BTYPE		6295066	0					
ANR	6295085	IdentifierDeclType	int		6295066	0					
ANR	6295086	Identifier	bt		6295066	1					
ANR	6295087	AssignmentExpression	bt = type -> t & VT_BTYPE		6295066	2		=			
ANR	6295088	Identifier	bt		6295066	0					
ANR	6295089	BitAndExpression	type -> t & VT_BTYPE		6295066	1		&			
ANR	6295090	PtrMemberAccess	type -> t		6295066	0					
ANR	6295091	Identifier	type		6295066	0					
ANR	6295092	Identifier	t		6295066	1					
ANR	6295093	Identifier	VT_BTYPE		6295066	1					
ANR	6295094	ExpressionStatement	"eprintf ( ""BTYPE = %d "" , bt )"	250:1:7106:7133	6295066	3	True				
ANR	6295095	CallExpression	"eprintf ( ""BTYPE = %d "" , bt )"		6295066	0					
ANR	6295096	Callee	eprintf		6295066	0					
ANR	6295097	Identifier	eprintf		6295066	0					
ANR	6295098	ArgumentList	"""BTYPE = %d """		6295066	1					
ANR	6295099	Argument	"""BTYPE = %d """		6295066	0					
ANR	6295100	PrimaryExpression	"""BTYPE = %d """		6295066	0					
ANR	6295101	Argument	bt		6295066	1					
ANR	6295102	Identifier	bt		6295066	0					
ANR	6295103	SwitchStatement	switch ( bt )		6295066	4					
ANR	6295104	Condition	bt	251:9:7144:7145	6295066	0	True				
ANR	6295105	Identifier	bt		6295066	0					
ANR	6295106	CompoundStatement		8:13:147:147	6295066	1					
ANR	6295107	Label	case VT_UNION :	252:1:7151:7164	6295066	0	True				
ANR	6295108	Identifier	VT_UNION		6295066	0					
ANR	6295109	ExpressionStatement	"eprintf ( ""[UNION]\\n"" )"	252:16:7166:7187	6295066	1	True				
ANR	6295110	CallExpression	"eprintf ( ""[UNION]\\n"" )"		6295066	0					
ANR	6295111	Callee	eprintf		6295066	0					
ANR	6295112	Identifier	eprintf		6295066	0					
ANR	6295113	ArgumentList	"""[UNION]\\n"""		6295066	1					
ANR	6295114	Argument	"""[UNION]\\n"""		6295066	0					
ANR	6295115	PrimaryExpression	"""[UNION]\\n"""		6295066	0					
ANR	6295116	BreakStatement	break ;	253:2:7191:7196	6295066	2	True				
ANR	6295117	Label	case VT_STRUCT :	254:1:7199:7213	6295066	3	True				
ANR	6295118	Identifier	VT_STRUCT		6295066	0					
ANR	6295119	ExpressionStatement	"eprintf ( ""[STRUCT]\\n"" )"	254:17:7215:7237	6295066	4	True				
ANR	6295120	CallExpression	"eprintf ( ""[STRUCT]\\n"" )"		6295066	0					
ANR	6295121	Callee	eprintf		6295066	0					
ANR	6295122	Identifier	eprintf		6295066	0					
ANR	6295123	ArgumentList	"""[STRUCT]\\n"""		6295066	1					
ANR	6295124	Argument	"""[STRUCT]\\n"""		6295066	0					
ANR	6295125	PrimaryExpression	"""[STRUCT]\\n"""		6295066	0					
ANR	6295126	BreakStatement	break ;	255:2:7241:7246	6295066	5	True				
ANR	6295127	Label	case VT_PTR :	256:1:7249:7260	6295066	6	True				
ANR	6295128	Identifier	VT_PTR		6295066	0					
ANR	6295129	ExpressionStatement	"eprintf ( ""[PTR]\\n"" )"	256:14:7262:7281	6295066	7	True				
ANR	6295130	CallExpression	"eprintf ( ""[PTR]\\n"" )"		6295066	0					
ANR	6295131	Callee	eprintf		6295066	0					
ANR	6295132	Identifier	eprintf		6295066	0					
ANR	6295133	ArgumentList	"""[PTR]\\n"""		6295066	1					
ANR	6295134	Argument	"""[PTR]\\n"""		6295066	0					
ANR	6295135	PrimaryExpression	"""[PTR]\\n"""		6295066	0					
ANR	6295136	BreakStatement	break ;	257:2:7285:7290	6295066	8	True				
ANR	6295137	Label	case VT_ENUM :	258:1:7293:7305	6295066	9	True				
ANR	6295138	Identifier	VT_ENUM		6295066	0					
ANR	6295139	ExpressionStatement	"eprintf ( ""[ENUM]\\n"" )"	258:15:7307:7327	6295066	10	True				
ANR	6295140	CallExpression	"eprintf ( ""[ENUM]\\n"" )"		6295066	0					
ANR	6295141	Callee	eprintf		6295066	0					
ANR	6295142	Identifier	eprintf		6295066	0					
ANR	6295143	ArgumentList	"""[ENUM]\\n"""		6295066	1					
ANR	6295144	Argument	"""[ENUM]\\n"""		6295066	0					
ANR	6295145	PrimaryExpression	"""[ENUM]\\n"""		6295066	0					
ANR	6295146	BreakStatement	break ;	259:2:7331:7336	6295066	11	True				
ANR	6295147	Label	case VT_INT64 :	260:1:7339:7352	6295066	12	True				
ANR	6295148	Identifier	VT_INT64		6295066	0					
ANR	6295149	ExpressionStatement	"eprintf ( ""[INT64_T]\\n"" )"	260:16:7354:7377	6295066	13	True				
ANR	6295150	CallExpression	"eprintf ( ""[INT64_T]\\n"" )"		6295066	0					
ANR	6295151	Callee	eprintf		6295066	0					
ANR	6295152	Identifier	eprintf		6295066	0					
ANR	6295153	ArgumentList	"""[INT64_T]\\n"""		6295066	1					
ANR	6295154	Argument	"""[INT64_T]\\n"""		6295066	0					
ANR	6295155	PrimaryExpression	"""[INT64_T]\\n"""		6295066	0					
ANR	6295156	BreakStatement	break ;	261:2:7381:7386	6295066	14	True				
ANR	6295157	Label	case VT_INT32 :	262:1:7389:7402	6295066	15	True				
ANR	6295158	Identifier	VT_INT32		6295066	0					
ANR	6295159	ExpressionStatement	"eprintf ( ""[INT32_T]\\n"" )"	262:16:7404:7427	6295066	16	True				
ANR	6295160	CallExpression	"eprintf ( ""[INT32_T]\\n"" )"		6295066	0					
ANR	6295161	Callee	eprintf		6295066	0					
ANR	6295162	Identifier	eprintf		6295066	0					
ANR	6295163	ArgumentList	"""[INT32_T]\\n"""		6295066	1					
ANR	6295164	Argument	"""[INT32_T]\\n"""		6295066	0					
ANR	6295165	PrimaryExpression	"""[INT32_T]\\n"""		6295066	0					
ANR	6295166	BreakStatement	break ;	263:2:7431:7436	6295066	17	True				
ANR	6295167	Label	case VT_INT16 :	264:1:7439:7452	6295066	18	True				
ANR	6295168	Identifier	VT_INT16		6295066	0					
ANR	6295169	ExpressionStatement	"eprintf ( ""[INT16_T]\\n"" )"	264:16:7454:7477	6295066	19	True				
ANR	6295170	CallExpression	"eprintf ( ""[INT16_T]\\n"" )"		6295066	0					
ANR	6295171	Callee	eprintf		6295066	0					
ANR	6295172	Identifier	eprintf		6295066	0					
ANR	6295173	ArgumentList	"""[INT16_T]\\n"""		6295066	1					
ANR	6295174	Argument	"""[INT16_T]\\n"""		6295066	0					
ANR	6295175	PrimaryExpression	"""[INT16_T]\\n"""		6295066	0					
ANR	6295176	BreakStatement	break ;	265:2:7481:7486	6295066	20	True				
ANR	6295177	Label	case VT_INT8 :	266:1:7489:7501	6295066	21	True				
ANR	6295178	Identifier	VT_INT8		6295066	0					
ANR	6295179	ExpressionStatement	"eprintf ( ""[INT8_T]\\n"" )"	266:15:7503:7525	6295066	22	True				
ANR	6295180	CallExpression	"eprintf ( ""[INT8_T]\\n"" )"		6295066	0					
ANR	6295181	Callee	eprintf		6295066	0					
ANR	6295182	Identifier	eprintf		6295066	0					
ANR	6295183	ArgumentList	"""[INT8_T]\\n"""		6295066	1					
ANR	6295184	Argument	"""[INT8_T]\\n"""		6295066	0					
ANR	6295185	PrimaryExpression	"""[INT8_T]\\n"""		6295066	0					
ANR	6295186	BreakStatement	break ;	267:2:7529:7534	6295066	23	True				
ANR	6295187	Label	default :	268:1:7537:7544	6295066	24	True				
ANR	6295188	Identifier	default		6295066	0					
ANR	6295189	ExpressionStatement	"eprintf ( ""\\n"" )"	269:2:7548:7562	6295066	25	True				
ANR	6295190	CallExpression	"eprintf ( ""\\n"" )"		6295066	0					
ANR	6295191	Callee	eprintf		6295066	0					
ANR	6295192	Identifier	eprintf		6295066	0					
ANR	6295193	ArgumentList	"""\\n"""		6295066	1					
ANR	6295194	Argument	"""\\n"""		6295066	0					
ANR	6295195	PrimaryExpression	"""\\n"""		6295066	0					
ANR	6295196	BreakStatement	break ;	270:2:7566:7571	6295066	26	True				
ANR	6295197	IfStatement	if ( type -> ref )		6295066	5					
ANR	6295198	Condition	type -> ref	272:5:7581:7589	6295066	0	True				
ANR	6295199	PtrMemberAccess	type -> ref		6295066	0					
ANR	6295200	Identifier	type		6295066	0					
ANR	6295201	Identifier	ref		6295066	1					
ANR	6295202	CompoundStatement		31:2:633:652	6295066	1					
ANR	6295203	ExpressionStatement	"eprintf ( ""v = %d\\n"" , type -> ref -> v )"	273:2:7596:7630	6295066	0	True				
ANR	6295204	CallExpression	"eprintf ( ""v = %d\\n"" , type -> ref -> v )"		6295066	0					
ANR	6295205	Callee	eprintf		6295066	0					
ANR	6295206	Identifier	eprintf		6295066	0					
ANR	6295207	ArgumentList	"""v = %d\\n"""		6295066	1					
ANR	6295208	Argument	"""v = %d\\n"""		6295066	0					
ANR	6295209	PrimaryExpression	"""v = %d\\n"""		6295066	0					
ANR	6295210	Argument	type -> ref -> v		6295066	1					
ANR	6295211	PtrMemberAccess	type -> ref -> v		6295066	0					
ANR	6295212	PtrMemberAccess	type -> ref		6295066	0					
ANR	6295213	Identifier	type		6295066	0					
ANR	6295214	Identifier	ref		6295066	1					
ANR	6295215	Identifier	v		6295066	1					
ANR	6295216	IdentifierDeclStatement	char * varstr = NULL ;	274:2:7634:7653	6295066	1	True				
ANR	6295217	IdentifierDecl	* varstr = NULL		6295066	0					
ANR	6295218	IdentifierDeclType	char *		6295066	0					
ANR	6295219	Identifier	varstr		6295066	1					
ANR	6295220	AssignmentExpression	* varstr = NULL		6295066	2		=			
ANR	6295221	Identifier	NULL		6295066	0					
ANR	6295222	Identifier	NULL		6295066	1					
ANR	6295223	ExpressionStatement	"varstr = get_tok_str ( type -> ref -> v , NULL )"	275:2:7657:7698	6295066	2	True				
ANR	6295224	AssignmentExpression	"varstr = get_tok_str ( type -> ref -> v , NULL )"		6295066	0		=			
ANR	6295225	Identifier	varstr		6295066	0					
ANR	6295226	CallExpression	"get_tok_str ( type -> ref -> v , NULL )"		6295066	1					
ANR	6295227	Callee	get_tok_str		6295066	0					
ANR	6295228	Identifier	get_tok_str		6295066	0					
ANR	6295229	ArgumentList	type -> ref -> v		6295066	1					
ANR	6295230	Argument	type -> ref -> v		6295066	0					
ANR	6295231	PtrMemberAccess	type -> ref -> v		6295066	0					
ANR	6295232	PtrMemberAccess	type -> ref		6295066	0					
ANR	6295233	Identifier	type		6295066	0					
ANR	6295234	Identifier	ref		6295066	1					
ANR	6295235	Identifier	v		6295066	1					
ANR	6295236	Argument	NULL		6295066	1					
ANR	6295237	Identifier	NULL		6295066	0					
ANR	6295238	IfStatement	if ( varstr )		6295066	3					
ANR	6295239	Condition	varstr	276:6:7706:7711	6295066	0	True				
ANR	6295240	Identifier	varstr		6295066	0					
ANR	6295241	CompoundStatement		33:14:713:713	6295066	1					
ANR	6295242	ExpressionStatement	"eprintf ( ""var = %s\\n"" , varstr )"	277:3:7719:7749	6295066	0	True				
ANR	6295243	CallExpression	"eprintf ( ""var = %s\\n"" , varstr )"		6295066	0					
ANR	6295244	Callee	eprintf		6295066	0					
ANR	6295245	Identifier	eprintf		6295066	0					
ANR	6295246	ArgumentList	"""var = %s\\n"""		6295066	1					
ANR	6295247	Argument	"""var = %s\\n"""		6295066	0					
ANR	6295248	PrimaryExpression	"""var = %s\\n"""		6295066	0					
ANR	6295249	Argument	varstr		6295066	1					
ANR	6295250	Identifier	varstr		6295066	0					
ANR	6295251	IfStatement	if ( type -> ref -> asm_label )		6295066	4					
ANR	6295252	Condition	type -> ref -> asm_label	279:6:7761:7780	6295066	0	True				
ANR	6295253	PtrMemberAccess	type -> ref -> asm_label		6295066	0					
ANR	6295254	PtrMemberAccess	type -> ref		6295066	0					
ANR	6295255	Identifier	type		6295066	0					
ANR	6295256	Identifier	ref		6295066	1					
ANR	6295257	Identifier	asm_label		6295066	1					
ANR	6295258	CompoundStatement		36:28:782:782	6295066	1					
ANR	6295259	ExpressionStatement	"eprintf ( ""asm_label = %s\\n"" , type -> ref -> asm_label )"	280:3:7788:7838	6295066	0	True				
ANR	6295260	CallExpression	"eprintf ( ""asm_label = %s\\n"" , type -> ref -> asm_label )"		6295066	0					
ANR	6295261	Callee	eprintf		6295066	0					
ANR	6295262	Identifier	eprintf		6295066	0					
ANR	6295263	ArgumentList	"""asm_label = %s\\n"""		6295066	1					
ANR	6295264	Argument	"""asm_label = %s\\n"""		6295066	0					
ANR	6295265	PrimaryExpression	"""asm_label = %s\\n"""		6295066	0					
ANR	6295266	Argument	type -> ref -> asm_label		6295066	1					
ANR	6295267	PtrMemberAccess	type -> ref -> asm_label		6295066	0					
ANR	6295268	PtrMemberAccess	type -> ref		6295066	0					
ANR	6295269	Identifier	type		6295066	0					
ANR	6295270	Identifier	ref		6295066	1					
ANR	6295271	Identifier	asm_label		6295066	1					
ANR	6295272	ExpressionStatement	"eprintf ( ""r = %d\\n"" , type -> ref -> r )"	282:2:7846:7880	6295066	5	True				
ANR	6295273	CallExpression	"eprintf ( ""r = %d\\n"" , type -> ref -> r )"		6295066	0					
ANR	6295274	Callee	eprintf		6295066	0					
ANR	6295275	Identifier	eprintf		6295066	0					
ANR	6295276	ArgumentList	"""r = %d\\n"""		6295066	1					
ANR	6295277	Argument	"""r = %d\\n"""		6295066	0					
ANR	6295278	PrimaryExpression	"""r = %d\\n"""		6295066	0					
ANR	6295279	Argument	type -> ref -> r		6295066	1					
ANR	6295280	PtrMemberAccess	type -> ref -> r		6295066	0					
ANR	6295281	PtrMemberAccess	type -> ref		6295066	0					
ANR	6295282	Identifier	type		6295066	0					
ANR	6295283	Identifier	ref		6295066	1					
ANR	6295284	Identifier	r		6295066	1					
ANR	6295285	ExpressionStatement	"eprintf ( ""associated type:\\n"" )"	283:2:7884:7914	6295066	6	True				
ANR	6295286	CallExpression	"eprintf ( ""associated type:\\n"" )"		6295066	0					
ANR	6295287	Callee	eprintf		6295066	0					
ANR	6295288	Identifier	eprintf		6295066	0					
ANR	6295289	ArgumentList	"""associated type:\\n"""		6295066	1					
ANR	6295290	Argument	"""associated type:\\n"""		6295066	0					
ANR	6295291	PrimaryExpression	"""associated type:\\n"""		6295066	0					
ANR	6295292	ReturnType	void		6295066	1					
ANR	6295293	Identifier	dump_type		6295066	2					
ANR	6295294	ParameterList	"CType * type , int depth"		6295066	3					
ANR	6295295	Parameter	CType * type	244:15:6976:6986	6295066	0	True				
ANR	6295296	ParameterType	CType *		6295066	0					
ANR	6295297	Identifier	type		6295066	1					
ANR	6295298	Parameter	int depth	244:28:6989:6997	6295066	1	True				
ANR	6295299	ParameterType	int		6295066	0					
ANR	6295300	Identifier	depth		6295066	1					
ANR	6295301	CFGEntryNode	ENTRY		6295066		True				
ANR	6295302	CFGExitNode	EXIT		6295066		True				
ANR	6295303	Symbol	type -> ref		6295066						
ANR	6295304	Symbol	varstr		6295066						
ANR	6295305	Symbol	NULL		6295066						
ANR	6295306	Symbol	get_tok_str		6295066						
ANR	6295307	Symbol	* type -> ref		6295066						
ANR	6295308	Symbol	type		6295066						
ANR	6295309	Symbol	VT_BTYPE		6295066						
ANR	6295310	Symbol	type -> ref -> asm_label		6295066						
ANR	6295311	Symbol	type -> ref -> r		6295066						
ANR	6295312	Symbol	bt		6295066						
ANR	6295313	Symbol	depth		6295066						
ANR	6295314	Symbol	* type		6295066						
ANR	6295315	Symbol	type -> ref -> v		6295066						
ANR	6295316	Symbol	type -> t		6295066						
ANR	6295317	Symbol	* * type		6295066						
ANR	6295318	Function	sym_push	289:0:8013:8807							
ANR	6295319	FunctionDef	"sym_push (int v , CType * type , int r , long long c)"		6295318	0					
ANR	6295320	CompoundStatement		289:62:8075:8807	6295318	0					
ANR	6295321	IdentifierDeclStatement	"Sym * s , * * ps ;"	290:1:8078:8090	6295318	0	True				
ANR	6295322	IdentifierDecl	* s		6295318	0					
ANR	6295323	IdentifierDeclType	Sym *		6295318	0					
ANR	6295324	Identifier	s		6295318	1					
ANR	6295325	IdentifierDecl	* * ps		6295318	1					
ANR	6295326	IdentifierDeclType	Sym * *		6295318	0					
ANR	6295327	Identifier	ps		6295318	1					
ANR	6295328	IdentifierDeclStatement	TokenSym * ts ;	291:1:8093:8105	6295318	1	True				
ANR	6295329	IdentifierDecl	* ts		6295318	0					
ANR	6295330	IdentifierDeclType	TokenSym *		6295318	0					
ANR	6295331	Identifier	ts		6295318	1					
ANR	6295332	IfStatement	if ( local_stack )		6295318	2					
ANR	6295333	Condition	local_stack	293:5:8113:8123	6295318	0	True				
ANR	6295334	Identifier	local_stack		6295318	0					
ANR	6295335	CompoundStatement		5:18:50:50	6295318	1					
ANR	6295336	ExpressionStatement	ps = & local_stack	294:2:8130:8147	6295318	0	True				
ANR	6295337	AssignmentExpression	ps = & local_stack		6295318	0		=			
ANR	6295338	Identifier	ps		6295318	0					
ANR	6295339	UnaryOperationExpression	& local_stack		6295318	1					
ANR	6295340	UnaryOperator	&		6295318	0					
ANR	6295341	Identifier	local_stack		6295318	1					
ANR	6295342	ElseStatement	else		6295318	0					
ANR	6295343	CompoundStatement		7:8:81:81	6295318	0					
ANR	6295344	ExpressionStatement	ps = & global_stack	296:2:8161:8179	6295318	0	True				
ANR	6295345	AssignmentExpression	ps = & global_stack		6295318	0		=			
ANR	6295346	Identifier	ps		6295318	0					
ANR	6295347	UnaryOperationExpression	& global_stack		6295318	1					
ANR	6295348	UnaryOperator	&		6295318	0					
ANR	6295349	Identifier	global_stack		6295318	1					
ANR	6295350	ExpressionStatement	"s = sym_push2 ( ps , v , type -> t , c )"	299:1:8209:8242	6295318	3	True				
ANR	6295351	AssignmentExpression	"s = sym_push2 ( ps , v , type -> t , c )"		6295318	0		=			
ANR	6295352	Identifier	s		6295318	0					
ANR	6295353	CallExpression	"sym_push2 ( ps , v , type -> t , c )"		6295318	1					
ANR	6295354	Callee	sym_push2		6295318	0					
ANR	6295355	Identifier	sym_push2		6295318	0					
ANR	6295356	ArgumentList	ps		6295318	1					
ANR	6295357	Argument	ps		6295318	0					
ANR	6295358	Identifier	ps		6295318	0					
ANR	6295359	Argument	v		6295318	1					
ANR	6295360	Identifier	v		6295318	0					
ANR	6295361	Argument	type -> t		6295318	2					
ANR	6295362	PtrMemberAccess	type -> t		6295318	0					
ANR	6295363	Identifier	type		6295318	0					
ANR	6295364	Identifier	t		6295318	1					
ANR	6295365	Argument	c		6295318	3					
ANR	6295366	Identifier	c		6295318	0					
ANR	6295367	IfStatement	if ( ! s )		6295318	4					
ANR	6295368	Condition	! s	300:5:8249:8250	6295318	0	True				
ANR	6295369	UnaryOperationExpression	! s		6295318	0					
ANR	6295370	UnaryOperator	!		6295318	0					
ANR	6295371	Identifier	s		6295318	1					
ANR	6295372	CompoundStatement		12:9:177:177	6295318	1					
ANR	6295373	ReturnStatement	return NULL ;	301:2:8257:8268	6295318	0	True				
ANR	6295374	Identifier	NULL		6295318	0					
ANR	6295375	ExpressionStatement	s -> type . ref = type -> ref	303:1:8274:8297	6295318	5	True				
ANR	6295376	AssignmentExpression	s -> type . ref = type -> ref		6295318	0		=			
ANR	6295377	MemberAccess	s -> type . ref		6295318	0					
ANR	6295378	PtrMemberAccess	s -> type		6295318	0					
ANR	6295379	Identifier	s		6295318	0					
ANR	6295380	Identifier	type		6295318	1					
ANR	6295381	Identifier	ref		6295318	1					
ANR	6295382	PtrMemberAccess	type -> ref		6295318	1					
ANR	6295383	Identifier	type		6295318	0					
ANR	6295384	Identifier	ref		6295318	1					
ANR	6295385	ExpressionStatement	s -> r = r	304:1:8300:8308	6295318	6	True				
ANR	6295386	AssignmentExpression	s -> r = r		6295318	0		=			
ANR	6295387	PtrMemberAccess	s -> r		6295318	0					
ANR	6295388	Identifier	s		6295318	0					
ANR	6295389	Identifier	r		6295318	1					
ANR	6295390	Identifier	r		6295318	1					
ANR	6295391	IfStatement	if ( ! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM )		6295318	7					
ANR	6295392	Condition	! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM	307:5:8384:8437	6295318	0	True				
ANR	6295393	AndExpression	! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM		6295318	0		&&			
ANR	6295394	UnaryOperationExpression	! ( v & SYM_FIELD )		6295318	0					
ANR	6295395	UnaryOperator	!		6295318	0					
ANR	6295396	BitAndExpression	v & SYM_FIELD		6295318	1		&			
ANR	6295397	Identifier	v		6295318	0					
ANR	6295398	Identifier	SYM_FIELD		6295318	1					
ANR	6295399	RelationalExpression	( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM		6295318	1		<			
ANR	6295400	BitAndExpression	v & ~SYM_STRUCT		6295318	0		&			
ANR	6295401	Identifier	v		6295318	0					
ANR	6295402	Identifier	~SYM_STRUCT		6295318	1					
ANR	6295403	Identifier	SYM_FIRST_ANOM		6295318	1					
ANR	6295404	CompoundStatement		20:2:368:393	6295318	1					
ANR	6295405	IdentifierDeclStatement	int i = ( v & ~SYM_STRUCT ) ;	308:2:8444:8469	6295318	0	True				
ANR	6295406	IdentifierDecl	i = ( v & ~SYM_STRUCT )		6295318	0					
ANR	6295407	IdentifierDeclType	int		6295318	0					
ANR	6295408	Identifier	i		6295318	1					
ANR	6295409	AssignmentExpression	i = ( v & ~SYM_STRUCT )		6295318	2		=			
ANR	6295410	Identifier	i		6295318	0					
ANR	6295411	BitAndExpression	v & ~SYM_STRUCT		6295318	1		&			
ANR	6295412	Identifier	v		6295318	0					
ANR	6295413	Identifier	~SYM_STRUCT		6295318	1					
ANR	6295414	IfStatement	if ( i < TOK_IDENT )		6295318	1					
ANR	6295415	Condition	i < TOK_IDENT	309:6:8477:8489	6295318	0	True				
ANR	6295416	RelationalExpression	i < TOK_IDENT		6295318	0		<			
ANR	6295417	Identifier	i		6295318	0					
ANR	6295418	Identifier	TOK_IDENT		6295318	1					
ANR	6295419	CompoundStatement		21:21:416:416	6295318	1					
ANR	6295420	ExpressionStatement	"eprintf ( ""Not found\\n"" )"	310:3:8497:8520	6295318	0	True				
ANR	6295421	CallExpression	"eprintf ( ""Not found\\n"" )"		6295318	0					
ANR	6295422	Callee	eprintf		6295318	0					
ANR	6295423	Identifier	eprintf		6295318	0					
ANR	6295424	ArgumentList	"""Not found\\n"""		6295318	1					
ANR	6295425	Argument	"""Not found\\n"""		6295318	0					
ANR	6295426	PrimaryExpression	"""Not found\\n"""		6295318	0					
ANR	6295427	ReturnStatement	return NULL ;	311:3:8525:8536	6295318	1	True				
ANR	6295428	Identifier	NULL		6295318	0					
ANR	6295429	ExpressionStatement	ts = table_ident [ ( v & ~SYM_STRUCT ) - TOK_IDENT ]	315:2:8619:8666	6295318	2	True				
ANR	6295430	AssignmentExpression	ts = table_ident [ ( v & ~SYM_STRUCT ) - TOK_IDENT ]		6295318	0		=			
ANR	6295431	Identifier	ts		6295318	0					
ANR	6295432	ArrayIndexing	table_ident [ ( v & ~SYM_STRUCT ) - TOK_IDENT ]		6295318	1					
ANR	6295433	Identifier	table_ident		6295318	0					
ANR	6295434	AdditiveExpression	( v & ~SYM_STRUCT ) - TOK_IDENT		6295318	1		-			
ANR	6295435	BitAndExpression	v & ~SYM_STRUCT		6295318	0		&			
ANR	6295436	Identifier	v		6295318	0					
ANR	6295437	Identifier	~SYM_STRUCT		6295318	1					
ANR	6295438	Identifier	TOK_IDENT		6295318	1					
ANR	6295439	IfStatement	if ( v & SYM_STRUCT )		6295318	3					
ANR	6295440	Condition	v & SYM_STRUCT	316:6:8674:8687	6295318	0	True				
ANR	6295441	BitAndExpression	v & SYM_STRUCT		6295318	0		&			
ANR	6295442	Identifier	v		6295318	0					
ANR	6295443	Identifier	SYM_STRUCT		6295318	1					
ANR	6295444	CompoundStatement		28:22:614:614	6295318	1					
ANR	6295445	ExpressionStatement	ps = & ts -> sym_struct	317:3:8695:8715	6295318	0	True				
ANR	6295446	AssignmentExpression	ps = & ts -> sym_struct		6295318	0		=			
ANR	6295447	Identifier	ps		6295318	0					
ANR	6295448	UnaryOperationExpression	& ts -> sym_struct		6295318	1					
ANR	6295449	UnaryOperator	&		6295318	0					
ANR	6295450	PtrMemberAccess	ts -> sym_struct		6295318	1					
ANR	6295451	Identifier	ts		6295318	0					
ANR	6295452	Identifier	sym_struct		6295318	1					
ANR	6295453	ElseStatement	else		6295318	0					
ANR	6295454	CompoundStatement		30:9:650:650	6295318	0					
ANR	6295455	ExpressionStatement	ps = & ts -> sym_identifier	319:3:8731:8755	6295318	0	True				
ANR	6295456	AssignmentExpression	ps = & ts -> sym_identifier		6295318	0		=			
ANR	6295457	Identifier	ps		6295318	0					
ANR	6295458	UnaryOperationExpression	& ts -> sym_identifier		6295318	1					
ANR	6295459	UnaryOperator	&		6295318	0					
ANR	6295460	PtrMemberAccess	ts -> sym_identifier		6295318	1					
ANR	6295461	Identifier	ts		6295318	0					
ANR	6295462	Identifier	sym_identifier		6295318	1					
ANR	6295463	ExpressionStatement	s -> prev_tok = * ps	321:2:8763:8780	6295318	4	True				
ANR	6295464	AssignmentExpression	s -> prev_tok = * ps		6295318	0		=			
ANR	6295465	PtrMemberAccess	s -> prev_tok		6295318	0					
ANR	6295466	Identifier	s		6295318	0					
ANR	6295467	Identifier	prev_tok		6295318	1					
ANR	6295468	UnaryOperationExpression	* ps		6295318	1					
ANR	6295469	UnaryOperator	*		6295318	0					
ANR	6295470	Identifier	ps		6295318	1					
ANR	6295471	ExpressionStatement	* ps = s	322:2:8784:8791	6295318	5	True				
ANR	6295472	AssignmentExpression	* ps = s		6295318	0		=			
ANR	6295473	UnaryOperationExpression	* ps		6295318	0					
ANR	6295474	UnaryOperator	*		6295318	0					
ANR	6295475	Identifier	ps		6295318	1					
ANR	6295476	Identifier	s		6295318	1					
ANR	6295477	ReturnStatement	return s ;	324:1:8797:8805	6295318	8	True				
ANR	6295478	Identifier	s		6295318	0					
ANR	6295479	ReturnType	ST_FUNC Sym *		6295318	1					
ANR	6295480	Identifier	sym_push		6295318	2					
ANR	6295481	ParameterList	"int v , CType * type , int r , long long c"		6295318	3					
ANR	6295482	Parameter	int v	289:22:8035:8039	6295318	0	True				
ANR	6295483	ParameterType	int		6295318	0					
ANR	6295484	Identifier	v		6295318	1					
ANR	6295485	Parameter	CType * type	289:29:8042:8052	6295318	1	True				
ANR	6295486	ParameterType	CType *		6295318	0					
ANR	6295487	Identifier	type		6295318	1					
ANR	6295488	Parameter	int r	289:42:8055:8059	6295318	2	True				
ANR	6295489	ParameterType	int		6295318	0					
ANR	6295490	Identifier	r		6295318	1					
ANR	6295491	Parameter	long long c	289:49:8062:8072	6295318	3	True				
ANR	6295492	ParameterType	long long		6295318	0					
ANR	6295493	Identifier	c		6295318	1					
ANR	6295494	CFGEntryNode	ENTRY		6295318		True				
ANR	6295495	CFGExitNode	EXIT		6295318		True				
ANR	6295496	Symbol	& global_stack		6295318						
ANR	6295497	Symbol	* v		6295318						
ANR	6295498	Symbol	SYM_STRUCT		6295318						
ANR	6295499	Symbol	ps		6295318						
ANR	6295500	Symbol	& ts -> sym_identifier		6295318						
ANR	6295501	Symbol	s -> r		6295318						
ANR	6295502	Symbol	* ~SYM_STRUCT		6295318						
ANR	6295503	Symbol	s -> type . ref		6295318						
ANR	6295504	Symbol	* table_ident		6295318						
ANR	6295505	Symbol	type		6295318						
ANR	6295506	Symbol	s -> prev_tok		6295318						
ANR	6295507	Symbol	local_stack		6295318						
ANR	6295508	Symbol	sym_push2		6295318						
ANR	6295509	Symbol	* TOK_IDENT		6295318						
ANR	6295510	Symbol	SYM_FIELD		6295318						
ANR	6295511	Symbol	& ts -> sym_struct		6295318						
ANR	6295512	Symbol	* type		6295318						
ANR	6295513	Symbol	~SYM_STRUCT		6295318						
ANR	6295514	Symbol	type -> ref		6295318						
ANR	6295515	Symbol	c		6295318						
ANR	6295516	Symbol	NULL		6295318						
ANR	6295517	Symbol	SYM_FIRST_ANOM		6295318						
ANR	6295518	Symbol	TOK_IDENT		6295318						
ANR	6295519	Symbol	i		6295318						
ANR	6295520	Symbol	* ps		6295318						
ANR	6295521	Symbol	table_ident		6295318						
ANR	6295522	Symbol	r		6295318						
ANR	6295523	Symbol	s		6295318						
ANR	6295524	Symbol	v		6295318						
ANR	6295525	Symbol	& local_stack		6295318						
ANR	6295526	Symbol	type -> t		6295318						
ANR	6295527	Symbol	* s		6295318						
ANR	6295528	Symbol	s -> type		6295318						
ANR	6295529	Symbol	ts		6295318						
ANR	6295530	Function	global_identifier_push	328:0:8841:9380							
ANR	6295531	FunctionDef	"global_identifier_push (int v , int t , long long c)"		6295530	0					
ANR	6295532	CompoundStatement		328:63:8904:9380	6295530	0					
ANR	6295533	IdentifierDeclStatement	"Sym * s , * * ps ;"	329:1:8907:8919	6295530	0	True				
ANR	6295534	IdentifierDecl	* s		6295530	0					
ANR	6295535	IdentifierDeclType	Sym *		6295530	0					
ANR	6295536	Identifier	s		6295530	1					
ANR	6295537	IdentifierDecl	* * ps		6295530	1					
ANR	6295538	IdentifierDeclType	Sym * *		6295530	0					
ANR	6295539	Identifier	ps		6295530	1					
ANR	6295540	ExpressionStatement	"s = sym_push2 ( & global_stack , v , t , c )"	330:1:8922:8960	6295530	1	True				
ANR	6295541	AssignmentExpression	"s = sym_push2 ( & global_stack , v , t , c )"		6295530	0		=			
ANR	6295542	Identifier	s		6295530	0					
ANR	6295543	CallExpression	"sym_push2 ( & global_stack , v , t , c )"		6295530	1					
ANR	6295544	Callee	sym_push2		6295530	0					
ANR	6295545	Identifier	sym_push2		6295530	0					
ANR	6295546	ArgumentList	& global_stack		6295530	1					
ANR	6295547	Argument	& global_stack		6295530	0					
ANR	6295548	UnaryOperationExpression	& global_stack		6295530	0					
ANR	6295549	UnaryOperator	&		6295530	0					
ANR	6295550	Identifier	global_stack		6295530	1					
ANR	6295551	Argument	v		6295530	1					
ANR	6295552	Identifier	v		6295530	0					
ANR	6295553	Argument	t		6295530	2					
ANR	6295554	Identifier	t		6295530	0					
ANR	6295555	Argument	c		6295530	3					
ANR	6295556	Identifier	c		6295530	0					
ANR	6295557	IfStatement	if ( s && v < SYM_FIRST_ANOM )		6295530	2					
ANR	6295558	Condition	s && v < SYM_FIRST_ANOM	332:5:9004:9026	6295530	0	True				
ANR	6295559	AndExpression	s && v < SYM_FIRST_ANOM		6295530	0		&&			
ANR	6295560	Identifier	s		6295530	0					
ANR	6295561	RelationalExpression	v < SYM_FIRST_ANOM		6295530	1		<			
ANR	6295562	Identifier	v		6295530	0					
ANR	6295563	Identifier	SYM_FIRST_ANOM		6295530	1					
ANR	6295564	CompoundStatement		6:2:128:153	6295530	1					
ANR	6295565	IdentifierDeclStatement	int i = ( v & ~SYM_STRUCT ) ;	333:2:9033:9058	6295530	0	True				
ANR	6295566	IdentifierDecl	i = ( v & ~SYM_STRUCT )		6295530	0					
ANR	6295567	IdentifierDeclType	int		6295530	0					
ANR	6295568	Identifier	i		6295530	1					
ANR	6295569	AssignmentExpression	i = ( v & ~SYM_STRUCT )		6295530	2		=			
ANR	6295570	Identifier	i		6295530	0					
ANR	6295571	BitAndExpression	v & ~SYM_STRUCT		6295530	1		&			
ANR	6295572	Identifier	v		6295530	0					
ANR	6295573	Identifier	~SYM_STRUCT		6295530	1					
ANR	6295574	IfStatement	if ( i < TOK_IDENT )		6295530	1					
ANR	6295575	Condition	i < TOK_IDENT	334:6:9066:9078	6295530	0	True				
ANR	6295576	RelationalExpression	i < TOK_IDENT		6295530	0		<			
ANR	6295577	Identifier	i		6295530	0					
ANR	6295578	Identifier	TOK_IDENT		6295530	1					
ANR	6295579	CompoundStatement		7:21:176:176	6295530	1					
ANR	6295580	ExpressionStatement	"eprintf ( ""Not found\\n"" )"	335:3:9086:9109	6295530	0	True				
ANR	6295581	CallExpression	"eprintf ( ""Not found\\n"" )"		6295530	0					
ANR	6295582	Callee	eprintf		6295530	0					
ANR	6295583	Identifier	eprintf		6295530	0					
ANR	6295584	ArgumentList	"""Not found\\n"""		6295530	1					
ANR	6295585	Argument	"""Not found\\n"""		6295530	0					
ANR	6295586	PrimaryExpression	"""Not found\\n"""		6295530	0					
ANR	6295587	ReturnStatement	return NULL ;	336:3:9114:9125	6295530	1	True				
ANR	6295588	Identifier	NULL		6295530	0					
ANR	6295589	ExpressionStatement	ps = & table_ident [ i - TOK_IDENT ] -> sym_identifier	338:2:9133:9181	6295530	2	True				
ANR	6295590	AssignmentExpression	ps = & table_ident [ i - TOK_IDENT ] -> sym_identifier		6295530	0		=			
ANR	6295591	Identifier	ps		6295530	0					
ANR	6295592	UnaryOperationExpression	& table_ident [ i - TOK_IDENT ] -> sym_identifier		6295530	1					
ANR	6295593	UnaryOperator	&		6295530	0					
ANR	6295594	PtrMemberAccess	table_ident [ i - TOK_IDENT ] -> sym_identifier		6295530	1					
ANR	6295595	ArrayIndexing	table_ident [ i - TOK_IDENT ]		6295530	0					
ANR	6295596	Identifier	table_ident		6295530	0					
ANR	6295597	AdditiveExpression	i - TOK_IDENT		6295530	1		-			
ANR	6295598	Identifier	i		6295530	0					
ANR	6295599	Identifier	TOK_IDENT		6295530	1					
ANR	6295600	Identifier	sym_identifier		6295530	1					
ANR	6295601	WhileStatement	while ( * ps )		6295530	3					
ANR	6295602	Condition	* ps	341:9:9296:9298	6295530	0	True				
ANR	6295603	UnaryOperationExpression	* ps		6295530	0					
ANR	6295604	UnaryOperator	*		6295530	0					
ANR	6295605	Identifier	ps		6295530	1					
ANR	6295606	CompoundStatement		14:14:396:396	6295530	1					
ANR	6295607	ExpressionStatement	ps = & ( * ps ) -> prev_tok	342:3:9306:9327	6295530	0	True				
ANR	6295608	AssignmentExpression	ps = & ( * ps ) -> prev_tok		6295530	0		=			
ANR	6295609	Identifier	ps		6295530	0					
ANR	6295610	UnaryOperationExpression	& ( * ps ) -> prev_tok		6295530	1					
ANR	6295611	UnaryOperator	&		6295530	0					
ANR	6295612	PtrMemberAccess	( * ps ) -> prev_tok		6295530	1					
ANR	6295613	UnaryOperationExpression	* ps		6295530	0					
ANR	6295614	UnaryOperator	*		6295530	0					
ANR	6295615	Identifier	ps		6295530	1					
ANR	6295616	Identifier	prev_tok		6295530	1					
ANR	6295617	ExpressionStatement	s -> prev_tok = NULL	344:2:9335:9353	6295530	4	True				
ANR	6295618	AssignmentExpression	s -> prev_tok = NULL		6295530	0		=			
ANR	6295619	PtrMemberAccess	s -> prev_tok		6295530	0					
ANR	6295620	Identifier	s		6295530	0					
ANR	6295621	Identifier	prev_tok		6295530	1					
ANR	6295622	Identifier	NULL		6295530	1					
ANR	6295623	ExpressionStatement	* ps = s	345:2:9357:9364	6295530	5	True				
ANR	6295624	AssignmentExpression	* ps = s		6295530	0		=			
ANR	6295625	UnaryOperationExpression	* ps		6295530	0					
ANR	6295626	UnaryOperator	*		6295530	0					
ANR	6295627	Identifier	ps		6295530	1					
ANR	6295628	Identifier	s		6295530	1					
ANR	6295629	ReturnStatement	return s ;	347:1:9370:9378	6295530	3	True				
ANR	6295630	Identifier	s		6295530	0					
ANR	6295631	ReturnType	ST_FUNC Sym *		6295530	1					
ANR	6295632	Identifier	global_identifier_push		6295530	2					
ANR	6295633	ParameterList	"int v , int t , long long c"		6295530	3					
ANR	6295634	Parameter	int v	328:36:8877:8881	6295530	0	True				
ANR	6295635	ParameterType	int		6295530	0					
ANR	6295636	Identifier	v		6295530	1					
ANR	6295637	Parameter	int t	328:43:8884:8888	6295530	1	True				
ANR	6295638	ParameterType	int		6295530	0					
ANR	6295639	Identifier	t		6295530	1					
ANR	6295640	Parameter	long long c	328:50:8891:8901	6295530	2	True				
ANR	6295641	ParameterType	long long		6295530	0					
ANR	6295642	Identifier	c		6295530	1					
ANR	6295643	CFGEntryNode	ENTRY		6295530		True				
ANR	6295644	CFGExitNode	EXIT		6295530		True				
ANR	6295645	Symbol	& global_stack		6295530						
ANR	6295646	Symbol	c		6295530						
ANR	6295647	Symbol	ps		6295530						
ANR	6295648	Symbol	SYM_FIRST_ANOM		6295530						
ANR	6295649	Symbol	NULL		6295530						
ANR	6295650	Symbol	TOK_IDENT		6295530						
ANR	6295651	Symbol	i		6295530						
ANR	6295652	Symbol	* ps		6295530						
ANR	6295653	Symbol	* table_ident		6295530						
ANR	6295654	Symbol	s -> prev_tok		6295530						
ANR	6295655	Symbol	sym_push2		6295530						
ANR	6295656	Symbol	table_ident		6295530						
ANR	6295657	Symbol	* TOK_IDENT		6295530						
ANR	6295658	Symbol	s		6295530						
ANR	6295659	Symbol	* i		6295530						
ANR	6295660	Symbol	t		6295530						
ANR	6295661	Symbol	v		6295530						
ANR	6295662	Symbol	~SYM_STRUCT		6295530						
ANR	6295663	Symbol	& table_ident [ i - TOK_IDENT ] -> sym_identifier		6295530						
ANR	6295664	Symbol	& ( * ps ) -> prev_tok		6295530						
ANR	6295665	Symbol	* s		6295530						
ANR	6295666	Function	sym_pop	351:0:9423:10050							
ANR	6295667	FunctionDef	"sym_pop (Sym * * ptop , Sym * b)"		6295666	0					
ANR	6295668	CompoundStatement		351:41:9464:10050	6295666	0					
ANR	6295669	IdentifierDeclStatement	"Sym * s , * ss , * * ps ;"	352:1:9467:9484	6295666	0	True				
ANR	6295670	IdentifierDecl	* s		6295666	0					
ANR	6295671	IdentifierDeclType	Sym *		6295666	0					
ANR	6295672	Identifier	s		6295666	1					
ANR	6295673	IdentifierDecl	* ss		6295666	1					
ANR	6295674	IdentifierDeclType	Sym *		6295666	0					
ANR	6295675	Identifier	ss		6295666	1					
ANR	6295676	IdentifierDecl	* * ps		6295666	2					
ANR	6295677	IdentifierDeclType	Sym * *		6295666	0					
ANR	6295678	Identifier	ps		6295666	1					
ANR	6295679	IdentifierDeclStatement	TokenSym * ts ;	353:1:9487:9499	6295666	1	True				
ANR	6295680	IdentifierDecl	* ts		6295666	0					
ANR	6295681	IdentifierDeclType	TokenSym *		6295666	0					
ANR	6295682	Identifier	ts		6295666	1					
ANR	6295683	IdentifierDeclStatement	int v ;	354:1:9502:9507	6295666	2	True				
ANR	6295684	IdentifierDecl	v		6295666	0					
ANR	6295685	IdentifierDeclType	int		6295666	0					
ANR	6295686	Identifier	v		6295666	1					
ANR	6295687	IfStatement	if ( ! b )		6295666	3					
ANR	6295688	Condition	! b	355:5:9514:9515	6295666	0	True				
ANR	6295689	UnaryOperationExpression	! b		6295666	0					
ANR	6295690	UnaryOperator	!		6295666	0					
ANR	6295691	Identifier	b		6295666	1					
ANR	6295692	CompoundStatement		5:9:53:53	6295666	1					
ANR	6295693	ReturnStatement	return ;	356:2:9522:9528	6295666	0	True				
ANR	6295694	ExpressionStatement	s = * ptop	359:1:9535:9544	6295666	4	True				
ANR	6295695	AssignmentExpression	s = * ptop		6295666	0		=			
ANR	6295696	Identifier	s		6295666	0					
ANR	6295697	UnaryOperationExpression	* ptop		6295666	1					
ANR	6295698	UnaryOperator	*		6295666	0					
ANR	6295699	Identifier	ptop		6295666	1					
ANR	6295700	WhileStatement	while ( s != b )		6295666	5					
ANR	6295701	Condition	s != b	360:8:9554:9559	6295666	0	True				
ANR	6295702	EqualityExpression	s != b		6295666	0		!=			
ANR	6295703	Identifier	s		6295666	0					
ANR	6295704	Identifier	b		6295666	1					
ANR	6295705	CompoundStatement		10:16:97:97	6295666	1					
ANR	6295706	ExpressionStatement	ss = s -> prev	361:2:9566:9578	6295666	0	True				
ANR	6295707	AssignmentExpression	ss = s -> prev		6295666	0		=			
ANR	6295708	Identifier	ss		6295666	0					
ANR	6295709	PtrMemberAccess	s -> prev		6295666	1					
ANR	6295710	Identifier	s		6295666	0					
ANR	6295711	Identifier	prev		6295666	1					
ANR	6295712	ExpressionStatement	v = s -> v	362:2:9582:9590	6295666	1	True				
ANR	6295713	AssignmentExpression	v = s -> v		6295666	0		=			
ANR	6295714	Identifier	v		6295666	0					
ANR	6295715	PtrMemberAccess	s -> v		6295666	1					
ANR	6295716	Identifier	s		6295666	0					
ANR	6295717	Identifier	v		6295666	1					
ANR	6295718	IfStatement	if ( ! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM )		6295666	2					
ANR	6295719	Condition	! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM	365:6:9657:9710	6295666	0	True				
ANR	6295720	AndExpression	! ( v & SYM_FIELD ) && ( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM		6295666	0		&&			
ANR	6295721	UnaryOperationExpression	! ( v & SYM_FIELD )		6295666	0					
ANR	6295722	UnaryOperator	!		6295666	0					
ANR	6295723	BitAndExpression	v & SYM_FIELD		6295666	1		&			
ANR	6295724	Identifier	v		6295666	0					
ANR	6295725	Identifier	SYM_FIELD		6295666	1					
ANR	6295726	RelationalExpression	( v & ~SYM_STRUCT ) < SYM_FIRST_ANOM		6295666	1		<			
ANR	6295727	BitAndExpression	v & ~SYM_STRUCT		6295666	0		&			
ANR	6295728	Identifier	v		6295666	0					
ANR	6295729	Identifier	~SYM_STRUCT		6295666	1					
ANR	6295730	Identifier	SYM_FIRST_ANOM		6295666	1					
ANR	6295731	CompoundStatement		16:3:253:278	6295666	1					
ANR	6295732	IdentifierDeclStatement	int i = ( v & ~SYM_STRUCT ) ;	366:3:9718:9743	6295666	0	True				
ANR	6295733	IdentifierDecl	i = ( v & ~SYM_STRUCT )		6295666	0					
ANR	6295734	IdentifierDeclType	int		6295666	0					
ANR	6295735	Identifier	i		6295666	1					
ANR	6295736	AssignmentExpression	i = ( v & ~SYM_STRUCT )		6295666	2		=			
ANR	6295737	Identifier	i		6295666	0					
ANR	6295738	BitAndExpression	v & ~SYM_STRUCT		6295666	1		&			
ANR	6295739	Identifier	v		6295666	0					
ANR	6295740	Identifier	~SYM_STRUCT		6295666	1					
ANR	6295741	IfStatement	if ( i < TOK_IDENT )		6295666	1					
ANR	6295742	Condition	i < TOK_IDENT	367:7:9752:9764	6295666	0	True				
ANR	6295743	RelationalExpression	i < TOK_IDENT		6295666	0		<			
ANR	6295744	Identifier	i		6295666	0					
ANR	6295745	Identifier	TOK_IDENT		6295666	1					
ANR	6295746	CompoundStatement		17:22:302:302	6295666	1					
ANR	6295747	ExpressionStatement	"eprintf ( ""Not found\\n"" )"	368:4:9773:9796	6295666	0	True				
ANR	6295748	CallExpression	"eprintf ( ""Not found\\n"" )"		6295666	0					
ANR	6295749	Callee	eprintf		6295666	0					
ANR	6295750	Identifier	eprintf		6295666	0					
ANR	6295751	ArgumentList	"""Not found\\n"""		6295666	1					
ANR	6295752	Argument	"""Not found\\n"""		6295666	0					
ANR	6295753	PrimaryExpression	"""Not found\\n"""		6295666	0					
ANR	6295754	ReturnStatement	return ;	369:4:9802:9808	6295666	1	True				
ANR	6295755	ExpressionStatement	ts = table_ident [ i - TOK_IDENT ]	371:3:9818:9849	6295666	2	True				
ANR	6295756	AssignmentExpression	ts = table_ident [ i - TOK_IDENT ]		6295666	0		=			
ANR	6295757	Identifier	ts		6295666	0					
ANR	6295758	ArrayIndexing	table_ident [ i - TOK_IDENT ]		6295666	1					
ANR	6295759	Identifier	table_ident		6295666	0					
ANR	6295760	AdditiveExpression	i - TOK_IDENT		6295666	1		-			
ANR	6295761	Identifier	i		6295666	0					
ANR	6295762	Identifier	TOK_IDENT		6295666	1					
ANR	6295763	IfStatement	if ( v & SYM_STRUCT )		6295666	3					
ANR	6295764	Condition	v & SYM_STRUCT	372:7:9892:9905	6295666	0	True				
ANR	6295765	BitAndExpression	v & SYM_STRUCT		6295666	0		&			
ANR	6295766	Identifier	v		6295666	0					
ANR	6295767	Identifier	SYM_STRUCT		6295666	1					
ANR	6295768	CompoundStatement		22:23:443:443	6295666	1					
ANR	6295769	ExpressionStatement	ps = & ts -> sym_struct	373:4:9914:9934	6295666	0	True				
ANR	6295770	AssignmentExpression	ps = & ts -> sym_struct		6295666	0		=			
ANR	6295771	Identifier	ps		6295666	0					
ANR	6295772	UnaryOperationExpression	& ts -> sym_struct		6295666	1					
ANR	6295773	UnaryOperator	&		6295666	0					
ANR	6295774	PtrMemberAccess	ts -> sym_struct		6295666	1					
ANR	6295775	Identifier	ts		6295666	0					
ANR	6295776	Identifier	sym_struct		6295666	1					
ANR	6295777	ElseStatement	else		6295666	0					
ANR	6295778	CompoundStatement		24:10:481:481	6295666	0					
ANR	6295779	ExpressionStatement	ps = & ts -> sym_identifier	375:4:9952:9976	6295666	0	True				
ANR	6295780	AssignmentExpression	ps = & ts -> sym_identifier		6295666	0		=			
ANR	6295781	Identifier	ps		6295666	0					
ANR	6295782	UnaryOperationExpression	& ts -> sym_identifier		6295666	1					
ANR	6295783	UnaryOperator	&		6295666	0					
ANR	6295784	PtrMemberAccess	ts -> sym_identifier		6295666	1					
ANR	6295785	Identifier	ts		6295666	0					
ANR	6295786	Identifier	sym_identifier		6295666	1					
ANR	6295787	ExpressionStatement	* ps = s -> prev_tok	377:3:9986:10003	6295666	4	True				
ANR	6295788	AssignmentExpression	* ps = s -> prev_tok		6295666	0		=			
ANR	6295789	UnaryOperationExpression	* ps		6295666	0					
ANR	6295790	UnaryOperator	*		6295666	0					
ANR	6295791	Identifier	ps		6295666	1					
ANR	6295792	PtrMemberAccess	s -> prev_tok		6295666	1					
ANR	6295793	Identifier	s		6295666	0					
ANR	6295794	Identifier	prev_tok		6295666	1					
ANR	6295795	ExpressionStatement	sym_free ( s )	379:2:10011:10023	6295666	3	True				
ANR	6295796	CallExpression	sym_free ( s )		6295666	0					
ANR	6295797	Callee	sym_free		6295666	0					
ANR	6295798	Identifier	sym_free		6295666	0					
ANR	6295799	ArgumentList	s		6295666	1					
ANR	6295800	Argument	s		6295666	0					
ANR	6295801	Identifier	s		6295666	0					
ANR	6295802	ExpressionStatement	s = ss	380:2:10027:10033	6295666	4	True				
ANR	6295803	AssignmentExpression	s = ss		6295666	0		=			
ANR	6295804	Identifier	s		6295666	0					
ANR	6295805	Identifier	ss		6295666	1					
ANR	6295806	ExpressionStatement	* ptop = b	382:1:10039:10048	6295666	6	True				
ANR	6295807	AssignmentExpression	* ptop = b		6295666	0		=			
ANR	6295808	UnaryOperationExpression	* ptop		6295666	0					
ANR	6295809	UnaryOperator	*		6295666	0					
ANR	6295810	Identifier	ptop		6295666	1					
ANR	6295811	Identifier	b		6295666	1					
ANR	6295812	ReturnType	ST_FUNC void		6295666	1					
ANR	6295813	Identifier	sym_pop		6295666	2					
ANR	6295814	ParameterList	"Sym * * ptop , Sym * b"		6295666	3					
ANR	6295815	Parameter	Sym * * ptop	351:21:9444:9453	6295666	0	True				
ANR	6295816	ParameterType	Sym * *		6295666	0					
ANR	6295817	Identifier	ptop		6295666	1					
ANR	6295818	Parameter	Sym * b	351:33:9456:9461	6295666	1	True				
ANR	6295819	ParameterType	Sym *		6295666	0					
ANR	6295820	Identifier	b		6295666	1					
ANR	6295821	CFGEntryNode	ENTRY		6295666		True				
ANR	6295822	CFGExitNode	EXIT		6295666		True				
ANR	6295823	Symbol	SYM_STRUCT		6295666						
ANR	6295824	Symbol	s -> v		6295666						
ANR	6295825	Symbol	ps		6295666						
ANR	6295826	Symbol	& ts -> sym_identifier		6295666						
ANR	6295827	Symbol	s -> prev		6295666						
ANR	6295828	Symbol	* table_ident		6295666						
ANR	6295829	Symbol	s -> prev_tok		6295666						
ANR	6295830	Symbol	ptop		6295666						
ANR	6295831	Symbol	* TOK_IDENT		6295666						
ANR	6295832	Symbol	SYM_FIELD		6295666						
ANR	6295833	Symbol	& ts -> sym_struct		6295666						
ANR	6295834	Symbol	~SYM_STRUCT		6295666						
ANR	6295835	Symbol	ss		6295666						
ANR	6295836	Symbol	b		6295666						
ANR	6295837	Symbol	SYM_FIRST_ANOM		6295666						
ANR	6295838	Symbol	TOK_IDENT		6295666						
ANR	6295839	Symbol	i		6295666						
ANR	6295840	Symbol	* ps		6295666						
ANR	6295841	Symbol	table_ident		6295666						
ANR	6295842	Symbol	s		6295666						
ANR	6295843	Symbol	* i		6295666						
ANR	6295844	Symbol	v		6295666						
ANR	6295845	Symbol	* ptop		6295666						
ANR	6295846	Symbol	* s		6295666						
ANR	6295847	Symbol	ts		6295666						
ANR	6295848	Function	weaken_symbol	385:0:10053:10116							
ANR	6295849	FunctionDef	weaken_symbol (Sym * sym)		6295848	0					
ANR	6295850	CompoundStatement		385:36:10089:10116	6295848	0					
ANR	6295851	ExpressionStatement	sym -> type . t |= VT_WEAK	386:1:10092:10114	6295848	0	True				
ANR	6295852	AssignmentExpression	sym -> type . t |= VT_WEAK		6295848	0		|=			
ANR	6295853	MemberAccess	sym -> type . t		6295848	0					
ANR	6295854	PtrMemberAccess	sym -> type		6295848	0					
ANR	6295855	Identifier	sym		6295848	0					
ANR	6295856	Identifier	type		6295848	1					
ANR	6295857	Identifier	t		6295848	1					
ANR	6295858	Identifier	VT_WEAK		6295848	1					
ANR	6295859	ReturnType	static void		6295848	1					
ANR	6295860	Identifier	weaken_symbol		6295848	2					
ANR	6295861	ParameterList	Sym * sym		6295848	3					
ANR	6295862	Parameter	Sym * sym	385:26:10079:10086	6295848	0	True				
ANR	6295863	ParameterType	Sym *		6295848	0					
ANR	6295864	Identifier	sym		6295848	1					
ANR	6295865	CFGEntryNode	ENTRY		6295848		True				
ANR	6295866	CFGExitNode	EXIT		6295848		True				
ANR	6295867	Symbol	* sym		6295848						
ANR	6295868	Symbol	sym		6295848						
ANR	6295869	Symbol	sym -> type . t		6295848						
ANR	6295870	Symbol	sym -> type		6295848						
ANR	6295871	Symbol	VT_WEAK		6295848						
ANR	6295872	Function	swap	391:0:10200:10272							
ANR	6295873	FunctionDef	"swap (int * p , int * q)"		6295872	0					
ANR	6295874	CompoundStatement		391:34:10234:10272	6295872	0					
ANR	6295875	IdentifierDeclStatement	int t ;	392:1:10237:10242	6295872	0	True				
ANR	6295876	IdentifierDecl	t		6295872	0					
ANR	6295877	IdentifierDeclType	int		6295872	0					
ANR	6295878	Identifier	t		6295872	1					
ANR	6295879	ExpressionStatement	t = * p	393:1:10245:10251	6295872	1	True				
ANR	6295880	AssignmentExpression	t = * p		6295872	0		=			
ANR	6295881	Identifier	t		6295872	0					
ANR	6295882	UnaryOperationExpression	* p		6295872	1					
ANR	6295883	UnaryOperator	*		6295872	0					
ANR	6295884	Identifier	p		6295872	1					
ANR	6295885	ExpressionStatement	* p = * q	394:1:10254:10261	6295872	2	True				
ANR	6295886	AssignmentExpression	* p = * q		6295872	0		=			
ANR	6295887	UnaryOperationExpression	* p		6295872	0					
ANR	6295888	UnaryOperator	*		6295872	0					
ANR	6295889	Identifier	p		6295872	1					
ANR	6295890	UnaryOperationExpression	* q		6295872	1					
ANR	6295891	UnaryOperator	*		6295872	0					
ANR	6295892	Identifier	q		6295872	1					
ANR	6295893	ExpressionStatement	* q = t	395:1:10264:10270	6295872	3	True				
ANR	6295894	AssignmentExpression	* q = t		6295872	0		=			
ANR	6295895	UnaryOperationExpression	* q		6295872	0					
ANR	6295896	UnaryOperator	*		6295872	0					
ANR	6295897	Identifier	q		6295872	1					
ANR	6295898	Identifier	t		6295872	1					
ANR	6295899	ReturnType	ST_FUNC void		6295872	1					
ANR	6295900	Identifier	swap		6295872	2					
ANR	6295901	ParameterList	"int * p , int * q"		6295872	3					
ANR	6295902	Parameter	int * p	391:18:10218:10223	6295872	0	True				
ANR	6295903	ParameterType	int *		6295872	0					
ANR	6295904	Identifier	p		6295872	1					
ANR	6295905	Parameter	int * q	391:26:10226:10231	6295872	1	True				
ANR	6295906	ParameterType	int *		6295872	0					
ANR	6295907	Identifier	q		6295872	1					
ANR	6295908	CFGEntryNode	ENTRY		6295872		True				
ANR	6295909	CFGExitNode	EXIT		6295872		True				
ANR	6295910	Symbol	p		6295872						
ANR	6295911	Symbol	q		6295872						
ANR	6295912	Symbol	t		6295872						
ANR	6295913	Symbol	* p		6295872						
ANR	6295914	Symbol	* q		6295872						
ANR	6295915	Function	vsetc	398:0:10275:10482							
ANR	6295916	FunctionDef	"vsetc (CType * type , int r , CValue * vc)"		6295915	0					
ANR	6295917	CompoundStatement		398:50:10325:10482	6295915	0					
ANR	6295918	IfStatement	if ( vtop >= vstack + ( VSTACK_SIZE - 1 ) )		6295915	0					
ANR	6295919	Condition	vtop >= vstack + ( VSTACK_SIZE - 1 )	399:5:10332:10365	6295915	0	True				
ANR	6295920	RelationalExpression	vtop >= vstack + ( VSTACK_SIZE - 1 )		6295915	0		>=			
ANR	6295921	Identifier	vtop		6295915	0					
ANR	6295922	AdditiveExpression	vstack + ( VSTACK_SIZE - 1 )		6295915	1		+			
ANR	6295923	Identifier	vstack		6295915	0					
ANR	6295924	AdditiveExpression	VSTACK_SIZE - 1		6295915	1		-			
ANR	6295925	Identifier	VSTACK_SIZE		6295915	0					
ANR	6295926	PrimaryExpression	1		6295915	1					
ANR	6295927	CompoundStatement		2:41:42:42	6295915	1					
ANR	6295928	ExpressionStatement	"TCC_ERR ( ""memory full"" )"	400:2:10372:10395	6295915	0	True				
ANR	6295929	CallExpression	"TCC_ERR ( ""memory full"" )"		6295915	0					
ANR	6295930	Callee	TCC_ERR		6295915	0					
ANR	6295931	Identifier	TCC_ERR		6295915	0					
ANR	6295932	ArgumentList	"""memory full"""		6295915	1					
ANR	6295933	Argument	"""memory full"""		6295915	0					
ANR	6295934	PrimaryExpression	"""memory full"""		6295915	0					
ANR	6295935	ExpressionStatement	vtop ++	402:1:10401:10407	6295915	1	True				
ANR	6295936	PostIncDecOperationExpression	vtop ++		6295915	0					
ANR	6295937	Identifier	vtop		6295915	0					
ANR	6295938	IncDec	++		6295915	1					
ANR	6295939	ExpressionStatement	vtop -> type = * type	403:1:10410:10428	6295915	2	True				
ANR	6295940	AssignmentExpression	vtop -> type = * type		6295915	0		=			
ANR	6295941	PtrMemberAccess	vtop -> type		6295915	0					
ANR	6295942	Identifier	vtop		6295915	0					
ANR	6295943	Identifier	type		6295915	1					
ANR	6295944	UnaryOperationExpression	* type		6295915	1					
ANR	6295945	UnaryOperator	*		6295915	0					
ANR	6295946	Identifier	type		6295915	1					
ANR	6295947	ExpressionStatement	vtop -> r = r	404:1:10431:10442	6295915	3	True				
ANR	6295948	AssignmentExpression	vtop -> r = r		6295915	0		=			
ANR	6295949	PtrMemberAccess	vtop -> r		6295915	0					
ANR	6295950	Identifier	vtop		6295915	0					
ANR	6295951	Identifier	r		6295915	1					
ANR	6295952	Identifier	r		6295915	1					
ANR	6295953	ExpressionStatement	vtop -> r2 = VT_CONST	405:1:10445:10464	6295915	4	True				
ANR	6295954	AssignmentExpression	vtop -> r2 = VT_CONST		6295915	0		=			
ANR	6295955	PtrMemberAccess	vtop -> r2		6295915	0					
ANR	6295956	Identifier	vtop		6295915	0					
ANR	6295957	Identifier	r2		6295915	1					
ANR	6295958	Identifier	VT_CONST		6295915	1					
ANR	6295959	ExpressionStatement	vtop -> c = * vc	406:1:10467:10480	6295915	5	True				
ANR	6295960	AssignmentExpression	vtop -> c = * vc		6295915	0		=			
ANR	6295961	PtrMemberAccess	vtop -> c		6295915	0					
ANR	6295962	Identifier	vtop		6295915	0					
ANR	6295963	Identifier	c		6295915	1					
ANR	6295964	UnaryOperationExpression	* vc		6295915	1					
ANR	6295965	UnaryOperator	*		6295915	0					
ANR	6295966	Identifier	vc		6295915	1					
ANR	6295967	ReturnType	static void		6295915	1					
ANR	6295968	Identifier	vsetc		6295915	2					
ANR	6295969	ParameterList	"CType * type , int r , CValue * vc"		6295915	3					
ANR	6295970	Parameter	CType * type	398:18:10293:10303	6295915	0	True				
ANR	6295971	ParameterType	CType *		6295915	0					
ANR	6295972	Identifier	type		6295915	1					
ANR	6295973	Parameter	int r	398:31:10306:10310	6295915	1	True				
ANR	6295974	ParameterType	int		6295915	0					
ANR	6295975	Identifier	r		6295915	1					
ANR	6295976	Parameter	CValue * vc	398:38:10313:10322	6295915	2	True				
ANR	6295977	ParameterType	CValue *		6295915	0					
ANR	6295978	Identifier	vc		6295915	1					
ANR	6295979	CFGEntryNode	ENTRY		6295915		True				
ANR	6295980	CFGExitNode	EXIT		6295915		True				
ANR	6295981	Symbol	VT_CONST		6295915						
ANR	6295982	Symbol	vtop -> r2		6295915						
ANR	6295983	Symbol	vtop -> type		6295915						
ANR	6295984	Symbol	vtop		6295915						
ANR	6295985	Symbol	vtop -> c		6295915						
ANR	6295986	Symbol	type		6295915						
ANR	6295987	Symbol	vc		6295915						
ANR	6295988	Symbol	VSTACK_SIZE		6295915						
ANR	6295989	Symbol	* vtop		6295915						
ANR	6295990	Symbol	* vc		6295915						
ANR	6295991	Symbol	r		6295915						
ANR	6295992	Symbol	vstack		6295915						
ANR	6295993	Symbol	* type		6295915						
ANR	6295994	Symbol	vtop -> r		6295915						
ANR	6295995	Function	vpush	410:0:10539:10619							
ANR	6295996	FunctionDef	vpush (CType * type)		6295995	0					
ANR	6295997	CompoundStatement		410:24:10563:10619	6295995	0					
ANR	6295998	IdentifierDeclStatement	CValue cval = { 0 } ;	411:1:10566:10585	6295995	0	True				
ANR	6295999	IdentifierDecl	cval = { 0 }		6295995	0					
ANR	6296000	IdentifierDeclType	CValue		6295995	0					
ANR	6296001	Identifier	cval		6295995	1					
ANR	6296002	AssignmentExpression	cval = { 0 }		6295995	2		=			
ANR	6296003	Identifier	cval		6295995	0					
ANR	6296004	InitializerList	0		6295995	1					
ANR	6296005	PrimaryExpression	0		6295995	0					
ANR	6296006	ExpressionStatement	"vsetc ( type , VT_CONST , & cval )"	412:1:10588:10617	6295995	1	True				
ANR	6296007	CallExpression	"vsetc ( type , VT_CONST , & cval )"		6295995	0					
ANR	6296008	Callee	vsetc		6295995	0					
ANR	6296009	Identifier	vsetc		6295995	0					
ANR	6296010	ArgumentList	type		6295995	1					
ANR	6296011	Argument	type		6295995	0					
ANR	6296012	Identifier	type		6295995	0					
ANR	6296013	Argument	VT_CONST		6295995	1					
ANR	6296014	Identifier	VT_CONST		6295995	0					
ANR	6296015	Argument	& cval		6295995	2					
ANR	6296016	UnaryOperationExpression	& cval		6295995	0					
ANR	6296017	UnaryOperator	&		6295995	0					
ANR	6296018	Identifier	cval		6295995	1					
ANR	6296019	ReturnType	void		6295995	1					
ANR	6296020	Identifier	vpush		6295995	2					
ANR	6296021	ParameterList	CType * type		6295995	3					
ANR	6296022	Parameter	CType * type	410:11:10550:10560	6295995	0	True				
ANR	6296023	ParameterType	CType *		6295995	0					
ANR	6296024	Identifier	type		6295995	1					
ANR	6296025	CFGEntryNode	ENTRY		6295995		True				
ANR	6296026	CFGExitNode	EXIT		6295995		True				
ANR	6296027	Symbol	cval		6295995						
ANR	6296028	Symbol	VT_CONST		6295995						
ANR	6296029	Symbol	& cval		6295995						
ANR	6296030	Symbol	type		6295995						
ANR	6296031	Function	vpushi	416:0:10650:10753							
ANR	6296032	FunctionDef	vpushi (int v)		6296031	0					
ANR	6296033	CompoundStatement		416:27:10677:10753	6296031	0					
ANR	6296034	IdentifierDeclStatement	CValue cval = { 0 } ;	417:1:10680:10699	6296031	0	True				
ANR	6296035	IdentifierDecl	cval = { 0 }		6296031	0					
ANR	6296036	IdentifierDeclType	CValue		6296031	0					
ANR	6296037	Identifier	cval		6296031	1					
ANR	6296038	AssignmentExpression	cval = { 0 }		6296031	2		=			
ANR	6296039	Identifier	cval		6296031	0					
ANR	6296040	InitializerList	0		6296031	1					
ANR	6296041	PrimaryExpression	0		6296031	0					
ANR	6296042	ExpressionStatement	cval . i = v	418:1:10702:10712	6296031	1	True				
ANR	6296043	AssignmentExpression	cval . i = v		6296031	0		=			
ANR	6296044	MemberAccess	cval . i		6296031	0					
ANR	6296045	Identifier	cval		6296031	0					
ANR	6296046	Identifier	i		6296031	1					
ANR	6296047	Identifier	v		6296031	1					
ANR	6296048	ExpressionStatement	"vsetc ( & int32_type , VT_CONST , & cval )"	419:1:10715:10751	6296031	2	True				
ANR	6296049	CallExpression	"vsetc ( & int32_type , VT_CONST , & cval )"		6296031	0					
ANR	6296050	Callee	vsetc		6296031	0					
ANR	6296051	Identifier	vsetc		6296031	0					
ANR	6296052	ArgumentList	& int32_type		6296031	1					
ANR	6296053	Argument	& int32_type		6296031	0					
ANR	6296054	UnaryOperationExpression	& int32_type		6296031	0					
ANR	6296055	UnaryOperator	&		6296031	0					
ANR	6296056	Identifier	int32_type		6296031	1					
ANR	6296057	Argument	VT_CONST		6296031	1					
ANR	6296058	Identifier	VT_CONST		6296031	0					
ANR	6296059	Argument	& cval		6296031	2					
ANR	6296060	UnaryOperationExpression	& cval		6296031	0					
ANR	6296061	UnaryOperator	&		6296031	0					
ANR	6296062	Identifier	cval		6296031	1					
ANR	6296063	ReturnType	ST_FUNC void		6296031	1					
ANR	6296064	Identifier	vpushi		6296031	2					
ANR	6296065	ParameterList	int v		6296031	3					
ANR	6296066	Parameter	int v	416:20:10670:10674	6296031	0	True				
ANR	6296067	ParameterType	int		6296031	0					
ANR	6296068	Identifier	v		6296031	1					
ANR	6296069	CFGEntryNode	ENTRY		6296031		True				
ANR	6296070	CFGExitNode	EXIT		6296031		True				
ANR	6296071	Symbol	cval		6296031						
ANR	6296072	Symbol	VT_CONST		6296031						
ANR	6296073	Symbol	& int32_type		6296031						
ANR	6296074	Symbol	& cval		6296031						
ANR	6296075	Symbol	v		6296031						
ANR	6296076	Symbol	cval . i		6296031						
ANR	6296077	Function	vpushs	423:0:10792:10949							
ANR	6296078	FunctionDef	vpushs (long long v)		6296077	0					
ANR	6296079	CompoundStatement		423:32:10824:10949	6296077	0					
ANR	6296080	IdentifierDeclStatement	CValue cval ;	424:1:10827:10838	6296077	0	True				
ANR	6296081	IdentifierDecl	cval		6296077	0					
ANR	6296082	IdentifierDeclType	CValue		6296077	0					
ANR	6296083	Identifier	cval		6296077	1					
ANR	6296084	IfStatement	if ( PTR_SIZE == 4 )		6296077	1					
ANR	6296085	Condition	PTR_SIZE == 4	425:5:10845:10857	6296077	0	True				
ANR	6296086	EqualityExpression	PTR_SIZE == 4		6296077	0		==			
ANR	6296087	Identifier	PTR_SIZE		6296077	0					
ANR	6296088	PrimaryExpression	4		6296077	1					
ANR	6296089	CompoundStatement		3:20:35:35	6296077	1					
ANR	6296090	ExpressionStatement	cval . i = ( int ) v	426:2:10864:10880	6296077	0	True				
ANR	6296091	AssignmentExpression	cval . i = ( int ) v		6296077	0		=			
ANR	6296092	MemberAccess	cval . i		6296077	0					
ANR	6296093	Identifier	cval		6296077	0					
ANR	6296094	Identifier	i		6296077	1					
ANR	6296095	CastExpression	( int ) v		6296077	1					
ANR	6296096	CastTarget	int		6296077	0					
ANR	6296097	Identifier	v		6296077	1					
ANR	6296098	ElseStatement	else		6296077	0					
ANR	6296099	CompoundStatement		5:8:65:65	6296077	0					
ANR	6296100	ExpressionStatement	cval . ull = v	428:2:10894:10906	6296077	0	True				
ANR	6296101	AssignmentExpression	cval . ull = v		6296077	0		=			
ANR	6296102	MemberAccess	cval . ull		6296077	0					
ANR	6296103	Identifier	cval		6296077	0					
ANR	6296104	Identifier	ull		6296077	1					
ANR	6296105	Identifier	v		6296077	1					
ANR	6296106	ExpressionStatement	"vsetc ( & size_type , VT_CONST , & cval )"	430:1:10912:10947	6296077	2	True				
ANR	6296107	CallExpression	"vsetc ( & size_type , VT_CONST , & cval )"		6296077	0					
ANR	6296108	Callee	vsetc		6296077	0					
ANR	6296109	Identifier	vsetc		6296077	0					
ANR	6296110	ArgumentList	& size_type		6296077	1					
ANR	6296111	Argument	& size_type		6296077	0					
ANR	6296112	UnaryOperationExpression	& size_type		6296077	0					
ANR	6296113	UnaryOperator	&		6296077	0					
ANR	6296114	Identifier	size_type		6296077	1					
ANR	6296115	Argument	VT_CONST		6296077	1					
ANR	6296116	Identifier	VT_CONST		6296077	0					
ANR	6296117	Argument	& cval		6296077	2					
ANR	6296118	UnaryOperationExpression	& cval		6296077	0					
ANR	6296119	UnaryOperator	&		6296077	0					
ANR	6296120	Identifier	cval		6296077	1					
ANR	6296121	ReturnType	static void		6296077	1					
ANR	6296122	Identifier	vpushs		6296077	2					
ANR	6296123	ParameterList	long long v		6296077	3					
ANR	6296124	Parameter	long long v	423:19:10811:10821	6296077	0	True				
ANR	6296125	ParameterType	long long		6296077	0					
ANR	6296126	Identifier	v		6296077	1					
ANR	6296127	CFGEntryNode	ENTRY		6296077		True				
ANR	6296128	CFGExitNode	EXIT		6296077		True				
ANR	6296129	Symbol	cval		6296077						
ANR	6296130	Symbol	VT_CONST		6296077						
ANR	6296131	Symbol	& cval		6296077						
ANR	6296132	Symbol	& size_type		6296077						
ANR	6296133	Symbol	v		6296077						
ANR	6296134	Symbol	cval . ull		6296077						
ANR	6296135	Symbol	PTR_SIZE		6296077						
ANR	6296136	Symbol	cval . i		6296077						
ANR	6296137	Function	vpush64	434:0:10989:11145							
ANR	6296138	FunctionDef	"vpush64 (int ty , unsigned long long v)"		6296137	0					
ANR	6296139	CompoundStatement		434:43:11032:11145	6296137	0					
ANR	6296140	IdentifierDeclStatement	CValue cval ;	435:1:11035:11046	6296137	0	True				
ANR	6296141	IdentifierDecl	cval		6296137	0					
ANR	6296142	IdentifierDeclType	CValue		6296137	0					
ANR	6296143	Identifier	cval		6296137	1					
ANR	6296144	IdentifierDeclStatement	CType ctype ;	436:1:11049:11060	6296137	1	True				
ANR	6296145	IdentifierDecl	ctype		6296137	0					
ANR	6296146	IdentifierDeclType	CType		6296137	0					
ANR	6296147	Identifier	ctype		6296137	1					
ANR	6296148	ExpressionStatement	ctype . t = ty	437:1:11063:11075	6296137	2	True				
ANR	6296149	AssignmentExpression	ctype . t = ty		6296137	0		=			
ANR	6296150	MemberAccess	ctype . t		6296137	0					
ANR	6296151	Identifier	ctype		6296137	0					
ANR	6296152	Identifier	t		6296137	1					
ANR	6296153	Identifier	ty		6296137	1					
ANR	6296154	ExpressionStatement	ctype . ref = NULL	438:1:11078:11094	6296137	3	True				
ANR	6296155	AssignmentExpression	ctype . ref = NULL		6296137	0		=			
ANR	6296156	MemberAccess	ctype . ref		6296137	0					
ANR	6296157	Identifier	ctype		6296137	0					
ANR	6296158	Identifier	ref		6296137	1					
ANR	6296159	Identifier	NULL		6296137	1					
ANR	6296160	ExpressionStatement	cval . ull = v	439:1:11097:11109	6296137	4	True				
ANR	6296161	AssignmentExpression	cval . ull = v		6296137	0		=			
ANR	6296162	MemberAccess	cval . ull		6296137	0					
ANR	6296163	Identifier	cval		6296137	0					
ANR	6296164	Identifier	ull		6296137	1					
ANR	6296165	Identifier	v		6296137	1					
ANR	6296166	ExpressionStatement	"vsetc ( & ctype , VT_CONST , & cval )"	440:1:11112:11143	6296137	5	True				
ANR	6296167	CallExpression	"vsetc ( & ctype , VT_CONST , & cval )"		6296137	0					
ANR	6296168	Callee	vsetc		6296137	0					
ANR	6296169	Identifier	vsetc		6296137	0					
ANR	6296170	ArgumentList	& ctype		6296137	1					
ANR	6296171	Argument	& ctype		6296137	0					
ANR	6296172	UnaryOperationExpression	& ctype		6296137	0					
ANR	6296173	UnaryOperator	&		6296137	0					
ANR	6296174	Identifier	ctype		6296137	1					
ANR	6296175	Argument	VT_CONST		6296137	1					
ANR	6296176	Identifier	VT_CONST		6296137	0					
ANR	6296177	Argument	& cval		6296137	2					
ANR	6296178	UnaryOperationExpression	& cval		6296137	0					
ANR	6296179	UnaryOperator	&		6296137	0					
ANR	6296180	Identifier	cval		6296137	1					
ANR	6296181	ReturnType	void		6296137	1					
ANR	6296182	Identifier	vpush64		6296137	2					
ANR	6296183	ParameterList	"int ty , unsigned long long v"		6296137	3					
ANR	6296184	Parameter	int ty	434:13:11002:11007	6296137	0	True				
ANR	6296185	ParameterType	int		6296137	0					
ANR	6296186	Identifier	ty		6296137	1					
ANR	6296187	Parameter	unsigned long long v	434:21:11010:11029	6296137	1	True				
ANR	6296188	ParameterType	unsigned long long		6296137	0					
ANR	6296189	Identifier	v		6296137	1					
ANR	6296190	CFGEntryNode	ENTRY		6296137		True				
ANR	6296191	CFGExitNode	EXIT		6296137		True				
ANR	6296192	Symbol	cval		6296137						
ANR	6296193	Symbol	VT_CONST		6296137						
ANR	6296194	Symbol	ctype . t		6296137						
ANR	6296195	Symbol	& cval		6296137						
ANR	6296196	Symbol	& ctype		6296137						
ANR	6296197	Symbol	NULL		6296137						
ANR	6296198	Symbol	ctype . ref		6296137						
ANR	6296199	Symbol	ctype		6296137						
ANR	6296200	Symbol	ty		6296137						
ANR	6296201	Symbol	v		6296137						
ANR	6296202	Symbol	cval . ull		6296137						
ANR	6296203	Function	vpushll	444:0:11178:11281							
ANR	6296204	FunctionDef	vpushll (long long v)		6296203	0					
ANR	6296205	CompoundStatement		444:34:11212:11281	6296203	0					
ANR	6296206	IdentifierDeclStatement	CValue cval ;	445:1:11215:11226	6296203	0	True				
ANR	6296207	IdentifierDecl	cval		6296203	0					
ANR	6296208	IdentifierDeclType	CValue		6296203	0					
ANR	6296209	Identifier	cval		6296203	1					
ANR	6296210	ExpressionStatement	cval . ll = v	446:1:11229:11240	6296203	1	True				
ANR	6296211	AssignmentExpression	cval . ll = v		6296203	0		=			
ANR	6296212	MemberAccess	cval . ll		6296203	0					
ANR	6296213	Identifier	cval		6296203	0					
ANR	6296214	Identifier	ll		6296203	1					
ANR	6296215	Identifier	v		6296203	1					
ANR	6296216	ExpressionStatement	"vsetc ( & int64_type , VT_CONST , & cval )"	447:1:11243:11279	6296203	2	True				
ANR	6296217	CallExpression	"vsetc ( & int64_type , VT_CONST , & cval )"		6296203	0					
ANR	6296218	Callee	vsetc		6296203	0					
ANR	6296219	Identifier	vsetc		6296203	0					
ANR	6296220	ArgumentList	& int64_type		6296203	1					
ANR	6296221	Argument	& int64_type		6296203	0					
ANR	6296222	UnaryOperationExpression	& int64_type		6296203	0					
ANR	6296223	UnaryOperator	&		6296203	0					
ANR	6296224	Identifier	int64_type		6296203	1					
ANR	6296225	Argument	VT_CONST		6296203	1					
ANR	6296226	Identifier	VT_CONST		6296203	0					
ANR	6296227	Argument	& cval		6296203	2					
ANR	6296228	UnaryOperationExpression	& cval		6296203	0					
ANR	6296229	UnaryOperator	&		6296203	0					
ANR	6296230	Identifier	cval		6296203	1					
ANR	6296231	ReturnType	ST_FUNC void		6296203	1					
ANR	6296232	Identifier	vpushll		6296203	2					
ANR	6296233	ParameterList	long long v		6296203	3					
ANR	6296234	Parameter	long long v	444:21:11199:11209	6296203	0	True				
ANR	6296235	ParameterType	long long		6296203	0					
ANR	6296236	Identifier	v		6296203	1					
ANR	6296237	CFGEntryNode	ENTRY		6296203		True				
ANR	6296238	CFGExitNode	EXIT		6296203		True				
ANR	6296239	Symbol	cval		6296203						
ANR	6296240	Symbol	VT_CONST		6296203						
ANR	6296241	Symbol	& cval		6296203						
ANR	6296242	Symbol	& int64_type		6296203						
ANR	6296243	Symbol	cval . ll		6296203						
ANR	6296244	Symbol	v		6296203						
ANR	6296245	Function	vset	450:0:11284:11384							
ANR	6296246	FunctionDef	"vset (CType * type , int r , int v)"		6296245	0					
ANR	6296247	CompoundStatement		450:45:11329:11384	6296245	0					
ANR	6296248	IdentifierDeclStatement	CValue cval ;	451:1:11332:11343	6296245	0	True				
ANR	6296249	IdentifierDecl	cval		6296245	0					
ANR	6296250	IdentifierDeclType	CValue		6296245	0					
ANR	6296251	Identifier	cval		6296245	1					
ANR	6296252	ExpressionStatement	cval . i = v	453:1:11347:11357	6296245	1	True				
ANR	6296253	AssignmentExpression	cval . i = v		6296245	0		=			
ANR	6296254	MemberAccess	cval . i		6296245	0					
ANR	6296255	Identifier	cval		6296245	0					
ANR	6296256	Identifier	i		6296245	1					
ANR	6296257	Identifier	v		6296245	1					
ANR	6296258	ExpressionStatement	"vsetc ( type , r , & cval )"	454:1:11360:11382	6296245	2	True				
ANR	6296259	CallExpression	"vsetc ( type , r , & cval )"		6296245	0					
ANR	6296260	Callee	vsetc		6296245	0					
ANR	6296261	Identifier	vsetc		6296245	0					
ANR	6296262	ArgumentList	type		6296245	1					
ANR	6296263	Argument	type		6296245	0					
ANR	6296264	Identifier	type		6296245	0					
ANR	6296265	Argument	r		6296245	1					
ANR	6296266	Identifier	r		6296245	0					
ANR	6296267	Argument	& cval		6296245	2					
ANR	6296268	UnaryOperationExpression	& cval		6296245	0					
ANR	6296269	UnaryOperator	&		6296245	0					
ANR	6296270	Identifier	cval		6296245	1					
ANR	6296271	ReturnType	ST_FUNC void		6296245	1					
ANR	6296272	Identifier	vset		6296245	2					
ANR	6296273	ParameterList	"CType * type , int r , int v"		6296245	3					
ANR	6296274	Parameter	CType * type	450:18:11302:11312	6296245	0	True				
ANR	6296275	ParameterType	CType *		6296245	0					
ANR	6296276	Identifier	type		6296245	1					
ANR	6296277	Parameter	int r	450:31:11315:11319	6296245	1	True				
ANR	6296278	ParameterType	int		6296245	0					
ANR	6296279	Identifier	r		6296245	1					
ANR	6296280	Parameter	int v	450:38:11322:11326	6296245	2	True				
ANR	6296281	ParameterType	int		6296245	0					
ANR	6296282	Identifier	v		6296245	1					
ANR	6296283	CFGEntryNode	ENTRY		6296245		True				
ANR	6296284	CFGExitNode	EXIT		6296245		True				
ANR	6296285	Symbol	cval		6296245						
ANR	6296286	Symbol	& cval		6296245						
ANR	6296287	Symbol	r		6296245						
ANR	6296288	Symbol	v		6296245						
ANR	6296289	Symbol	type		6296245						
ANR	6296290	Symbol	cval . i		6296245						
ANR	6296291	Function	vseti	457:0:11387:11501							
ANR	6296292	FunctionDef	"vseti (int r , int v)"		6296291	0					
ANR	6296293	CompoundStatement		457:32:11419:11501	6296291	0					
ANR	6296294	IdentifierDeclStatement	CType type = { 0 } ;	458:1:11422:11440	6296291	0	True				
ANR	6296295	IdentifierDecl	type = { 0 }		6296291	0					
ANR	6296296	IdentifierDeclType	CType		6296291	0					
ANR	6296297	Identifier	type		6296291	1					
ANR	6296298	AssignmentExpression	type = { 0 }		6296291	2		=			
ANR	6296299	Identifier	type		6296291	0					
ANR	6296300	InitializerList	0		6296291	1					
ANR	6296301	PrimaryExpression	0		6296291	0					
ANR	6296302	ExpressionStatement	type . t = VT_INT32	459:1:11443:11460	6296291	1	True				
ANR	6296303	AssignmentExpression	type . t = VT_INT32		6296291	0		=			
ANR	6296304	MemberAccess	type . t		6296291	0					
ANR	6296305	Identifier	type		6296291	0					
ANR	6296306	Identifier	t		6296291	1					
ANR	6296307	Identifier	VT_INT32		6296291	1					
ANR	6296308	ExpressionStatement	type . ref = NULL	460:1:11463:11478	6296291	2	True				
ANR	6296309	AssignmentExpression	type . ref = NULL		6296291	0		=			
ANR	6296310	MemberAccess	type . ref		6296291	0					
ANR	6296311	Identifier	type		6296291	0					
ANR	6296312	Identifier	ref		6296291	1					
ANR	6296313	Identifier	NULL		6296291	1					
ANR	6296314	ExpressionStatement	"vset ( & type , r , v )"	461:1:11481:11499	6296291	3	True				
ANR	6296315	CallExpression	"vset ( & type , r , v )"		6296291	0					
ANR	6296316	Callee	vset		6296291	0					
ANR	6296317	Identifier	vset		6296291	0					
ANR	6296318	ArgumentList	& type		6296291	1					
ANR	6296319	Argument	& type		6296291	0					
ANR	6296320	UnaryOperationExpression	& type		6296291	0					
ANR	6296321	UnaryOperator	&		6296291	0					
ANR	6296322	Identifier	type		6296291	1					
ANR	6296323	Argument	r		6296291	1					
ANR	6296324	Identifier	r		6296291	0					
ANR	6296325	Argument	v		6296291	2					
ANR	6296326	Identifier	v		6296291	0					
ANR	6296327	ReturnType	static void		6296291	1					
ANR	6296328	Identifier	vseti		6296291	2					
ANR	6296329	ParameterList	"int r , int v"		6296291	3					
ANR	6296330	Parameter	int r	457:18:11405:11409	6296291	0	True				
ANR	6296331	ParameterType	int		6296291	0					
ANR	6296332	Identifier	r		6296291	1					
ANR	6296333	Parameter	int v	457:25:11412:11416	6296291	1	True				
ANR	6296334	ParameterType	int		6296291	0					
ANR	6296335	Identifier	v		6296291	1					
ANR	6296336	CFGEntryNode	ENTRY		6296291		True				
ANR	6296337	CFGExitNode	EXIT		6296291		True				
ANR	6296338	Symbol	r		6296291						
ANR	6296339	Symbol	NULL		6296291						
ANR	6296340	Symbol	& type		6296291						
ANR	6296341	Symbol	v		6296291						
ANR	6296342	Symbol	type . ref		6296291						
ANR	6296343	Symbol	type . t		6296291						
ANR	6296344	Symbol	VT_INT32		6296291						
ANR	6296345	Symbol	type		6296291						
ANR	6296346	Function	vswap	464:0:11504:11897							
ANR	6296347	FunctionDef	vswap ()		6296346	0					
ANR	6296348	CompoundStatement		464:25:11529:11897	6296346	0					
ANR	6296349	IdentifierDeclStatement	SValue tmp ;	465:1:11532:11542	6296346	0	True				
ANR	6296350	IdentifierDecl	tmp		6296346	0					
ANR	6296351	IdentifierDeclType	SValue		6296346	0					
ANR	6296352	Identifier	tmp		6296346	1					
ANR	6296353	ExpressionStatement	tmp = vtop [ 0 ]	469:1:11731:11744	6296346	1	True				
ANR	6296354	AssignmentExpression	tmp = vtop [ 0 ]		6296346	0		=			
ANR	6296355	Identifier	tmp		6296346	0					
ANR	6296356	ArrayIndexing	vtop [ 0 ]		6296346	1					
ANR	6296357	Identifier	vtop		6296346	0					
ANR	6296358	PrimaryExpression	0		6296346	1					
ANR	6296359	ExpressionStatement	vtop [ 0 ] = vtop [ - 1 ]	470:1:11747:11765	6296346	2	True				
ANR	6296360	AssignmentExpression	vtop [ 0 ] = vtop [ - 1 ]		6296346	0		=			
ANR	6296361	ArrayIndexing	vtop [ 0 ]		6296346	0					
ANR	6296362	Identifier	vtop		6296346	0					
ANR	6296363	PrimaryExpression	0		6296346	1					
ANR	6296364	ArrayIndexing	vtop [ - 1 ]		6296346	1					
ANR	6296365	Identifier	vtop		6296346	0					
ANR	6296366	UnaryOperationExpression	- 1		6296346	1					
ANR	6296367	UnaryOperator	-		6296346	0					
ANR	6296368	PrimaryExpression	1		6296346	1					
ANR	6296369	ExpressionStatement	vtop [ - 1 ] = tmp	471:1:11768:11782	6296346	3	True				
ANR	6296370	AssignmentExpression	vtop [ - 1 ] = tmp		6296346	0		=			
ANR	6296371	ArrayIndexing	vtop [ - 1 ]		6296346	0					
ANR	6296372	Identifier	vtop		6296346	0					
ANR	6296373	UnaryOperationExpression	- 1		6296346	1					
ANR	6296374	UnaryOperator	-		6296346	0					
ANR	6296375	PrimaryExpression	1		6296346	1					
ANR	6296376	Identifier	tmp		6296346	1					
ANR	6296377	ReturnType	ST_FUNC void		6296346	1					
ANR	6296378	Identifier	vswap		6296346	2					
ANR	6296379	ParameterList			6296346	3					
ANR	6296380	CFGEntryNode	ENTRY		6296346		True				
ANR	6296381	CFGExitNode	EXIT		6296346		True				
ANR	6296382	Symbol	* vtop		6296346						
ANR	6296383	Symbol	tmp		6296346						
ANR	6296384	Symbol	vtop		6296346						
ANR	6296385	Function	vpushv	479:0:11900:12028							
ANR	6296386	FunctionDef	vpushv (SValue * v)		6296385	0					
ANR	6296387	CompoundStatement		479:31:11931:12028	6296385	0					
ANR	6296388	IfStatement	if ( vtop >= vstack + ( VSTACK_SIZE - 1 ) )		6296385	0					
ANR	6296389	Condition	vtop >= vstack + ( VSTACK_SIZE - 1 )	480:5:11938:11971	6296385	0	True				
ANR	6296390	RelationalExpression	vtop >= vstack + ( VSTACK_SIZE - 1 )		6296385	0		>=			
ANR	6296391	Identifier	vtop		6296385	0					
ANR	6296392	AdditiveExpression	vstack + ( VSTACK_SIZE - 1 )		6296385	1		+			
ANR	6296393	Identifier	vstack		6296385	0					
ANR	6296394	AdditiveExpression	VSTACK_SIZE - 1		6296385	1		-			
ANR	6296395	Identifier	VSTACK_SIZE		6296385	0					
ANR	6296396	PrimaryExpression	1		6296385	1					
ANR	6296397	CompoundStatement		2:41:42:42	6296385	1					
ANR	6296398	ExpressionStatement	"TCC_ERR ( ""memory full"" )"	481:2:11978:12001	6296385	0	True				
ANR	6296399	CallExpression	"TCC_ERR ( ""memory full"" )"		6296385	0					
ANR	6296400	Callee	TCC_ERR		6296385	0					
ANR	6296401	Identifier	TCC_ERR		6296385	0					
ANR	6296402	ArgumentList	"""memory full"""		6296385	1					
ANR	6296403	Argument	"""memory full"""		6296385	0					
ANR	6296404	PrimaryExpression	"""memory full"""		6296385	0					
ANR	6296405	ExpressionStatement	vtop ++	483:1:12007:12013	6296385	1	True				
ANR	6296406	PostIncDecOperationExpression	vtop ++		6296385	0					
ANR	6296407	Identifier	vtop		6296385	0					
ANR	6296408	IncDec	++		6296385	1					
ANR	6296409	ExpressionStatement	* vtop = * v	484:1:12016:12026	6296385	2	True				
ANR	6296410	AssignmentExpression	* vtop = * v		6296385	0		=			
ANR	6296411	UnaryOperationExpression	* vtop		6296385	0					
ANR	6296412	UnaryOperator	*		6296385	0					
ANR	6296413	Identifier	vtop		6296385	1					
ANR	6296414	UnaryOperationExpression	* v		6296385	1					
ANR	6296415	UnaryOperator	*		6296385	0					
ANR	6296416	Identifier	v		6296385	1					
ANR	6296417	ReturnType	ST_FUNC void		6296385	1					
ANR	6296418	Identifier	vpushv		6296385	2					
ANR	6296419	ParameterList	SValue * v		6296385	3					
ANR	6296420	Parameter	SValue * v	479:20:11920:11928	6296385	0	True				
ANR	6296421	ParameterType	SValue *		6296385	0					
ANR	6296422	Identifier	v		6296385	1					
ANR	6296423	CFGEntryNode	ENTRY		6296385		True				
ANR	6296424	CFGExitNode	EXIT		6296385		True				
ANR	6296425	Symbol	* vtop		6296385						
ANR	6296426	Symbol	* v		6296385						
ANR	6296427	Symbol	vstack		6296385						
ANR	6296428	Symbol	v		6296385						
ANR	6296429	Symbol	vtop		6296385						
ANR	6296430	Symbol	VSTACK_SIZE		6296385						
ANR	6296431	Function	vdup	487:0:12031:12072							
ANR	6296432	FunctionDef	vdup ()		6296431	0					
ANR	6296433	CompoundStatement		487:23:12054:12072	6296431	0					
ANR	6296434	ExpressionStatement	vpushv ( vtop )	488:1:12057:12070	6296431	0	True				
ANR	6296435	CallExpression	vpushv ( vtop )		6296431	0					
ANR	6296436	Callee	vpushv		6296431	0					
ANR	6296437	Identifier	vpushv		6296431	0					
ANR	6296438	ArgumentList	vtop		6296431	1					
ANR	6296439	Argument	vtop		6296431	0					
ANR	6296440	Identifier	vtop		6296431	0					
ANR	6296441	ReturnType	static void		6296431	1					
ANR	6296442	Identifier	vdup		6296431	2					
ANR	6296443	ParameterList			6296431	3					
ANR	6296444	CFGEntryNode	ENTRY		6296431		True				
ANR	6296445	CFGExitNode	EXIT		6296431		True				
ANR	6296446	Symbol	vtop		6296431						
ANR	6296447	Function	gaddrof	492:0:12126:12360							
ANR	6296448	FunctionDef	gaddrof ()		6296447	0					
ANR	6296449	CompoundStatement		492:26:12152:12360	6296447	0					
ANR	6296450	ExpressionStatement	vtop -> r &= ~VT_LVAL	493:1:12155:12174	6296447	0	True				
ANR	6296451	AssignmentExpression	vtop -> r &= ~VT_LVAL		6296447	0		&=			
ANR	6296452	PtrMemberAccess	vtop -> r		6296447	0					
ANR	6296453	Identifier	vtop		6296447	0					
ANR	6296454	Identifier	r		6296447	1					
ANR	6296455	Identifier	~VT_LVAL		6296447	1					
ANR	6296456	IfStatement	if ( ( vtop -> r & VT_VALMASK ) == VT_LLOCAL )		6296447	1					
ANR	6296457	Condition	( vtop -> r & VT_VALMASK ) == VT_LLOCAL	495:5:12243:12277	6296447	0	True				
ANR	6296458	EqualityExpression	( vtop -> r & VT_VALMASK ) == VT_LLOCAL		6296447	0		==			
ANR	6296459	BitAndExpression	vtop -> r & VT_VALMASK		6296447	0		&			
ANR	6296460	PtrMemberAccess	vtop -> r		6296447	0					
ANR	6296461	Identifier	vtop		6296447	0					
ANR	6296462	Identifier	r		6296447	1					
ANR	6296463	Identifier	VT_VALMASK		6296447	1					
ANR	6296464	Identifier	VT_LLOCAL		6296447	1					
ANR	6296465	CompoundStatement		4:42:127:127	6296447	1					
ANR	6296466	ExpressionStatement	vtop -> r = ( vtop -> r & ~ ( VT_VALMASK | VT_LVAL_TYPE ) ) | VT_LOCAL | VT_LVAL	496:2:12284:12355	6296447	0	True				
ANR	6296467	AssignmentExpression	vtop -> r = ( vtop -> r & ~ ( VT_VALMASK | VT_LVAL_TYPE ) ) | VT_LOCAL | VT_LVAL		6296447	0		=			
ANR	6296468	PtrMemberAccess	vtop -> r		6296447	0					
ANR	6296469	Identifier	vtop		6296447	0					
ANR	6296470	Identifier	r		6296447	1					
ANR	6296471	InclusiveOrExpression	( vtop -> r & ~ ( VT_VALMASK | VT_LVAL_TYPE ) ) | VT_LOCAL | VT_LVAL		6296447	1		|			
ANR	6296472	BitAndExpression	vtop -> r & ~ ( VT_VALMASK | VT_LVAL_TYPE )		6296447	0		&			
ANR	6296473	PtrMemberAccess	vtop -> r		6296447	0					
ANR	6296474	Identifier	vtop		6296447	0					
ANR	6296475	Identifier	r		6296447	1					
ANR	6296476	UnaryOperationExpression	~ ( VT_VALMASK | VT_LVAL_TYPE )		6296447	1					
ANR	6296477	UnaryOperator	~		6296447	0					
ANR	6296478	InclusiveOrExpression	VT_VALMASK | VT_LVAL_TYPE		6296447	1		|			
ANR	6296479	Identifier	VT_VALMASK		6296447	0					
ANR	6296480	Identifier	VT_LVAL_TYPE		6296447	1					
ANR	6296481	InclusiveOrExpression	VT_LOCAL | VT_LVAL		6296447	1		|			
ANR	6296482	Identifier	VT_LOCAL		6296447	0					
ANR	6296483	Identifier	VT_LVAL		6296447	1					
ANR	6296484	ReturnType	static void		6296447	1					
ANR	6296485	Identifier	gaddrof		6296447	2					
ANR	6296486	ParameterList			6296447	3					
ANR	6296487	CFGEntryNode	ENTRY		6296447		True				
ANR	6296488	CFGExitNode	EXIT		6296447		True				
ANR	6296489	Symbol	* vtop		6296447						
ANR	6296490	Symbol	VT_LLOCAL		6296447						
ANR	6296491	Symbol	VT_LVAL_TYPE		6296447						
ANR	6296492	Symbol	vtop		6296447						
ANR	6296493	Symbol	~VT_LVAL		6296447						
ANR	6296494	Symbol	VT_VALMASK		6296447						
ANR	6296495	Symbol	vtop -> r		6296447						
ANR	6296496	Symbol	VT_LOCAL		6296447						
ANR	6296497	Symbol	VT_LVAL		6296447						
ANR	6296498	Function	pointed_size	500:0:12363:12463							
ANR	6296499	FunctionDef	pointed_size (CType * type)		6296498	0					
ANR	6296500	CompoundStatement		500:37:12400:12463	6296498	0					
ANR	6296501	IdentifierDeclStatement	int align ;	501:1:12403:12412	6296498	0	True				
ANR	6296502	IdentifierDecl	align		6296498	0					
ANR	6296503	IdentifierDeclType	int		6296498	0					
ANR	6296504	Identifier	align		6296498	1					
ANR	6296505	ReturnStatement	"return type_size ( pointed_type ( type ) , & align ) ;"	502:1:12415:12461	6296498	1	True				
ANR	6296506	CallExpression	"type_size ( pointed_type ( type ) , & align )"		6296498	0					
ANR	6296507	Callee	type_size		6296498	0					
ANR	6296508	Identifier	type_size		6296498	0					
ANR	6296509	ArgumentList	pointed_type ( type )		6296498	1					
ANR	6296510	Argument	pointed_type ( type )		6296498	0					
ANR	6296511	CallExpression	pointed_type ( type )		6296498	0					
ANR	6296512	Callee	pointed_type		6296498	0					
ANR	6296513	Identifier	pointed_type		6296498	0					
ANR	6296514	ArgumentList	type		6296498	1					
ANR	6296515	Argument	type		6296498	0					
ANR	6296516	Identifier	type		6296498	0					
ANR	6296517	Argument	& align		6296498	1					
ANR	6296518	UnaryOperationExpression	& align		6296498	0					
ANR	6296519	UnaryOperator	&		6296498	0					
ANR	6296520	Identifier	align		6296498	1					
ANR	6296521	ReturnType	static int		6296498	1					
ANR	6296522	Identifier	pointed_size		6296498	2					
ANR	6296523	ParameterList	CType * type		6296498	3					
ANR	6296524	Parameter	CType * type	500:24:12387:12397	6296498	0	True				
ANR	6296525	ParameterType	CType *		6296498	0					
ANR	6296526	Identifier	type		6296498	1					
ANR	6296527	CFGEntryNode	ENTRY		6296498		True				
ANR	6296528	CFGExitNode	EXIT		6296498		True				
ANR	6296529	Symbol	type_size		6296498						
ANR	6296530	Symbol	pointed_type		6296498						
ANR	6296531	Symbol	& align		6296498						
ANR	6296532	Symbol	type		6296498						
ANR	6296533	Symbol	align		6296498						
ANR	6296534	Function	is_integer_btype	505:0:12466:12588							
ANR	6296535	FunctionDef	is_integer_btype (int bt)		6296534	0					
ANR	6296536	CompoundStatement		505:43:12509:12588	6296534	0					
ANR	6296537	ReturnStatement	return bt == VT_INT8 || bt == VT_INT16 || bt == VT_INT32 || bt == VT_INT64 ;	506:1:12512:12586	6296534	0	True				
ANR	6296538	OrExpression	bt == VT_INT8 || bt == VT_INT16 || bt == VT_INT32 || bt == VT_INT64		6296534	0		||			
ANR	6296539	EqualityExpression	bt == VT_INT8		6296534	0		==			
ANR	6296540	Identifier	bt		6296534	0					
ANR	6296541	Identifier	VT_INT8		6296534	1					
ANR	6296542	OrExpression	bt == VT_INT16 || bt == VT_INT32 || bt == VT_INT64		6296534	1		||			
ANR	6296543	EqualityExpression	bt == VT_INT16		6296534	0		==			
ANR	6296544	Identifier	bt		6296534	0					
ANR	6296545	Identifier	VT_INT16		6296534	1					
ANR	6296546	OrExpression	bt == VT_INT32 || bt == VT_INT64		6296534	1		||			
ANR	6296547	EqualityExpression	bt == VT_INT32		6296534	0		==			
ANR	6296548	Identifier	bt		6296534	0					
ANR	6296549	Identifier	VT_INT32		6296534	1					
ANR	6296550	EqualityExpression	bt == VT_INT64		6296534	1		==			
ANR	6296551	Identifier	bt		6296534	0					
ANR	6296552	Identifier	VT_INT64		6296534	1					
ANR	6296553	ReturnType	static inline int		6296534	1					
ANR	6296554	Identifier	is_integer_btype		6296534	2					
ANR	6296555	ParameterList	int bt		6296534	3					
ANR	6296556	Parameter	int bt	505:35:12501:12506	6296534	0	True				
ANR	6296557	ParameterType	int		6296534	0					
ANR	6296558	Identifier	bt		6296534	1					
ANR	6296559	CFGEntryNode	ENTRY		6296534		True				
ANR	6296560	CFGExitNode	EXIT		6296534		True				
ANR	6296561	Symbol	bt		6296534						
ANR	6296562	Symbol	VT_INT16		6296534						
ANR	6296563	Symbol	VT_INT8		6296534						
ANR	6296564	Symbol	VT_INT64		6296534						
ANR	6296565	Symbol	VT_INT32		6296534						
ANR	6296566	Function	type_size	510:0:12661:14061							
ANR	6296567	FunctionDef	"type_size (CType * type , int * a)"		6296566	0					
ANR	6296568	CompoundStatement		510:43:12704:14061	6296566	0					
ANR	6296569	IdentifierDeclStatement	Sym * s ;	511:1:12707:12713	6296566	0	True				
ANR	6296570	IdentifierDecl	* s		6296566	0					
ANR	6296571	IdentifierDeclType	Sym *		6296566	0					
ANR	6296572	Identifier	s		6296566	1					
ANR	6296573	IdentifierDeclStatement	int bt ;	512:1:12716:12722	6296566	1	True				
ANR	6296574	IdentifierDecl	bt		6296566	0					
ANR	6296575	IdentifierDeclType	int		6296566	0					
ANR	6296576	Identifier	bt		6296566	1					
ANR	6296577	ExpressionStatement	bt = type -> t & VT_BTYPE	514:1:12726:12749	6296566	2	True				
ANR	6296578	AssignmentExpression	bt = type -> t & VT_BTYPE		6296566	0		=			
ANR	6296579	Identifier	bt		6296566	0					
ANR	6296580	BitAndExpression	type -> t & VT_BTYPE		6296566	1		&			
ANR	6296581	PtrMemberAccess	type -> t		6296566	0					
ANR	6296582	Identifier	type		6296566	0					
ANR	6296583	Identifier	t		6296566	1					
ANR	6296584	Identifier	VT_BTYPE		6296566	1					
ANR	6296585	IfStatement	if ( is_structured ( type ) )		6296566	3					
ANR	6296586	Condition	is_structured ( type )	515:5:12756:12774	6296566	0	True				
ANR	6296587	CallExpression	is_structured ( type )		6296566	0					
ANR	6296588	Callee	is_structured		6296566	0					
ANR	6296589	Identifier	is_structured		6296566	0					
ANR	6296590	ArgumentList	type		6296566	1					
ANR	6296591	Argument	type		6296566	0					
ANR	6296592	Identifier	type		6296566	0					
ANR	6296593	CompoundStatement		6:26:72:72	6296566	1					
ANR	6296594	ExpressionStatement	s = type -> ref	517:2:12802:12815	6296566	0	True				
ANR	6296595	AssignmentExpression	s = type -> ref		6296566	0		=			
ANR	6296596	Identifier	s		6296566	0					
ANR	6296597	PtrMemberAccess	type -> ref		6296566	1					
ANR	6296598	Identifier	type		6296566	0					
ANR	6296599	Identifier	ref		6296566	1					
ANR	6296600	ExpressionStatement	* a = s -> r	518:2:12819:12828	6296566	1	True				
ANR	6296601	AssignmentExpression	* a = s -> r		6296566	0		=			
ANR	6296602	UnaryOperationExpression	* a		6296566	0					
ANR	6296603	UnaryOperator	*		6296566	0					
ANR	6296604	Identifier	a		6296566	1					
ANR	6296605	PtrMemberAccess	s -> r		6296566	1					
ANR	6296606	Identifier	s		6296566	0					
ANR	6296607	Identifier	r		6296566	1					
ANR	6296608	ReturnStatement	return s -> c ;	519:2:12832:12843	6296566	2	True				
ANR	6296609	PtrMemberAccess	s -> c		6296566	0					
ANR	6296610	Identifier	s		6296566	0					
ANR	6296611	Identifier	c		6296566	1					
ANR	6296612	ElseStatement	else		6296566	0					
ANR	6296613	IfStatement	if ( bt == VT_PTR )		6296566	0					
ANR	6296614	Condition	bt == VT_PTR	520:12:12857:12868	6296566	0	True				
ANR	6296615	EqualityExpression	bt == VT_PTR		6296566	0		==			
ANR	6296616	Identifier	bt		6296566	0					
ANR	6296617	Identifier	VT_PTR		6296566	1					
ANR	6296618	CompoundStatement		11:26:166:166	6296566	1					
ANR	6296619	IfStatement	if ( type -> t & VT_ARRAY )		6296566	0					
ANR	6296620	Condition	type -> t & VT_ARRAY	521:6:12879:12896	6296566	0	True				
ANR	6296621	BitAndExpression	type -> t & VT_ARRAY		6296566	0		&			
ANR	6296622	PtrMemberAccess	type -> t		6296566	0					
ANR	6296623	Identifier	type		6296566	0					
ANR	6296624	Identifier	t		6296566	1					
ANR	6296625	Identifier	VT_ARRAY		6296566	1					
ANR	6296626	CompoundStatement		13:3:199:205	6296566	1					
ANR	6296627	IdentifierDeclStatement	int ts ;	522:3:12904:12910	6296566	0	True				
ANR	6296628	IdentifierDecl	ts		6296566	0					
ANR	6296629	IdentifierDeclType	int		6296566	0					
ANR	6296630	Identifier	ts		6296566	1					
ANR	6296631	ExpressionStatement	s = type -> ref	524:3:12916:12929	6296566	1	True				
ANR	6296632	AssignmentExpression	s = type -> ref		6296566	0		=			
ANR	6296633	Identifier	s		6296566	0					
ANR	6296634	PtrMemberAccess	type -> ref		6296566	1					
ANR	6296635	Identifier	type		6296566	0					
ANR	6296636	Identifier	ref		6296566	1					
ANR	6296637	ExpressionStatement	"ts = type_size ( & s -> type , a )"	525:3:12934:12962	6296566	2	True				
ANR	6296638	AssignmentExpression	"ts = type_size ( & s -> type , a )"		6296566	0		=			
ANR	6296639	Identifier	ts		6296566	0					
ANR	6296640	CallExpression	"type_size ( & s -> type , a )"		6296566	1					
ANR	6296641	Callee	type_size		6296566	0					
ANR	6296642	Identifier	type_size		6296566	0					
ANR	6296643	ArgumentList	& s -> type		6296566	1					
ANR	6296644	Argument	& s -> type		6296566	0					
ANR	6296645	UnaryOperationExpression	& s -> type		6296566	0					
ANR	6296646	UnaryOperator	&		6296566	0					
ANR	6296647	PtrMemberAccess	s -> type		6296566	1					
ANR	6296648	Identifier	s		6296566	0					
ANR	6296649	Identifier	type		6296566	1					
ANR	6296650	Argument	a		6296566	1					
ANR	6296651	Identifier	a		6296566	0					
ANR	6296652	IfStatement	if ( ts < 0 && s -> c < 0 )		6296566	3					
ANR	6296653	Condition	ts < 0 && s -> c < 0	527:7:12972:12989	6296566	0	True				
ANR	6296654	AndExpression	ts < 0 && s -> c < 0		6296566	0		&&			
ANR	6296655	RelationalExpression	ts < 0		6296566	0		<			
ANR	6296656	Identifier	ts		6296566	0					
ANR	6296657	PrimaryExpression	0		6296566	1					
ANR	6296658	RelationalExpression	s -> c < 0		6296566	1		<			
ANR	6296659	PtrMemberAccess	s -> c		6296566	0					
ANR	6296660	Identifier	s		6296566	0					
ANR	6296661	Identifier	c		6296566	1					
ANR	6296662	PrimaryExpression	0		6296566	1					
ANR	6296663	CompoundStatement		18:27:287:287	6296566	1					
ANR	6296664	ExpressionStatement	ts = - ts	528:4:12998:13006	6296566	0	True				
ANR	6296665	AssignmentExpression	ts = - ts		6296566	0		=			
ANR	6296666	Identifier	ts		6296566	0					
ANR	6296667	UnaryOperationExpression	- ts		6296566	1					
ANR	6296668	UnaryOperator	-		6296566	0					
ANR	6296669	Identifier	ts		6296566	1					
ANR	6296670	ReturnStatement	return ts * s -> c ;	531:3:13017:13033	6296566	4	True				
ANR	6296671	MultiplicativeExpression	ts * s -> c		6296566	0		*			
ANR	6296672	Identifier	ts		6296566	0					
ANR	6296673	PtrMemberAccess	s -> c		6296566	1					
ANR	6296674	Identifier	s		6296566	0					
ANR	6296675	Identifier	c		6296566	1					
ANR	6296676	ElseStatement	else		6296566	0					
ANR	6296677	CompoundStatement		23:9:339:339	6296566	0					
ANR	6296678	ExpressionStatement	* a = PTR_SIZE	533:3:13049:13062	6296566	0	True				
ANR	6296679	AssignmentExpression	* a = PTR_SIZE		6296566	0		=			
ANR	6296680	UnaryOperationExpression	* a		6296566	0					
ANR	6296681	UnaryOperator	*		6296566	0					
ANR	6296682	Identifier	a		6296566	1					
ANR	6296683	Identifier	PTR_SIZE		6296566	1					
ANR	6296684	ReturnStatement	return PTR_SIZE ;	534:3:13067:13082	6296566	1	True				
ANR	6296685	Identifier	PTR_SIZE		6296566	0					
ANR	6296686	ElseStatement	else		6296566	0					
ANR	6296687	IfStatement	if ( bt == VT_LDOUBLE )		6296566	0					
ANR	6296688	Condition	bt == VT_LDOUBLE	536:12:13100:13115	6296566	0	True				
ANR	6296689	EqualityExpression	bt == VT_LDOUBLE		6296566	0		==			
ANR	6296690	Identifier	bt		6296566	0					
ANR	6296691	Identifier	VT_LDOUBLE		6296566	1					
ANR	6296692	CompoundStatement		27:30:413:413	6296566	1					
ANR	6296693	ExpressionStatement	* a = LDOUBLE_ALIGN	537:2:13122:13140	6296566	0	True				
ANR	6296694	AssignmentExpression	* a = LDOUBLE_ALIGN		6296566	0		=			
ANR	6296695	UnaryOperationExpression	* a		6296566	0					
ANR	6296696	UnaryOperator	*		6296566	0					
ANR	6296697	Identifier	a		6296566	1					
ANR	6296698	Identifier	LDOUBLE_ALIGN		6296566	1					
ANR	6296699	ReturnStatement	return LDOUBLE_SIZE ;	538:2:13144:13163	6296566	1	True				
ANR	6296700	Identifier	LDOUBLE_SIZE		6296566	0					
ANR	6296701	ElseStatement	else		6296566	0					
ANR	6296702	IfStatement	if ( bt == VT_DOUBLE || bt == VT_INT64 )		6296566	0					
ANR	6296703	Condition	bt == VT_DOUBLE || bt == VT_INT64	539:12:13177:13209	6296566	0	True				
ANR	6296704	OrExpression	bt == VT_DOUBLE || bt == VT_INT64		6296566	0		||			
ANR	6296705	EqualityExpression	bt == VT_DOUBLE		6296566	0		==			
ANR	6296706	Identifier	bt		6296566	0					
ANR	6296707	Identifier	VT_DOUBLE		6296566	1					
ANR	6296708	EqualityExpression	bt == VT_INT64		6296566	1		==			
ANR	6296709	Identifier	bt		6296566	0					
ANR	6296710	Identifier	VT_INT64		6296566	1					
ANR	6296711	CompoundStatement		30:47:507:507	6296566	1					
ANR	6296712	IfStatement	"if ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32 )"		6296566	0					
ANR	6296713	Condition	"! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32"	540:6:13220:13280	6296566	0	True				
ANR	6296714	AndExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32"		6296566	0		&&			
ANR	6296715	UnaryOperationExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6296566	0					
ANR	6296716	UnaryOperator	!		6296566	0					
ANR	6296717	CallExpression	"strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6296566	1					
ANR	6296718	Callee	strncmp		6296566	0					
ANR	6296719	Identifier	strncmp		6296566	0					
ANR	6296720	ArgumentList	tcc_state -> arch		6296566	1					
ANR	6296721	Argument	tcc_state -> arch		6296566	0					
ANR	6296722	PtrMemberAccess	tcc_state -> arch		6296566	0					
ANR	6296723	Identifier	tcc_state		6296566	0					
ANR	6296724	Identifier	arch		6296566	1					
ANR	6296725	Argument	"""x86"""		6296566	1					
ANR	6296726	PrimaryExpression	"""x86"""		6296566	0					
ANR	6296727	Argument	3		6296566	2					
ANR	6296728	PrimaryExpression	3		6296566	0					
ANR	6296729	EqualityExpression	tcc_state -> bits == 32		6296566	1		==			
ANR	6296730	PtrMemberAccess	tcc_state -> bits		6296566	0					
ANR	6296731	Identifier	tcc_state		6296566	0					
ANR	6296732	Identifier	bits		6296566	1					
ANR	6296733	PrimaryExpression	32		6296566	1					
ANR	6296734	CompoundStatement		31:69:578:578	6296566	1					
ANR	6296735	IfStatement	"if ( ! strncmp ( tcc_state -> os , ""windows"" , 7 ) )"		6296566	0					
ANR	6296736	Condition	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"	541:7:13292:13329	6296566	0	True				
ANR	6296737	UnaryOperationExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6296566	0					
ANR	6296738	UnaryOperator	!		6296566	0					
ANR	6296739	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6296566	1					
ANR	6296740	Callee	strncmp		6296566	0					
ANR	6296741	Identifier	strncmp		6296566	0					
ANR	6296742	ArgumentList	tcc_state -> os		6296566	1					
ANR	6296743	Argument	tcc_state -> os		6296566	0					
ANR	6296744	PtrMemberAccess	tcc_state -> os		6296566	0					
ANR	6296745	Identifier	tcc_state		6296566	0					
ANR	6296746	Identifier	os		6296566	1					
ANR	6296747	Argument	"""windows"""		6296566	1					
ANR	6296748	PrimaryExpression	"""windows"""		6296566	0					
ANR	6296749	Argument	7		6296566	2					
ANR	6296750	PrimaryExpression	7		6296566	0					
ANR	6296751	CompoundStatement		32:47:627:627	6296566	1					
ANR	6296752	ExpressionStatement	* a = 8	542:4:13338:13344	6296566	0	True				
ANR	6296753	AssignmentExpression	* a = 8		6296566	0		=			
ANR	6296754	UnaryOperationExpression	* a		6296566	0					
ANR	6296755	UnaryOperator	*		6296566	0					
ANR	6296756	Identifier	a		6296566	1					
ANR	6296757	PrimaryExpression	8		6296566	1					
ANR	6296758	ElseStatement	else		6296566	0					
ANR	6296759	CompoundStatement		34:10:651:651	6296566	0					
ANR	6296760	ExpressionStatement	* a = 4	544:4:13362:13368	6296566	0	True				
ANR	6296761	AssignmentExpression	* a = 4		6296566	0		=			
ANR	6296762	UnaryOperationExpression	* a		6296566	0					
ANR	6296763	UnaryOperator	*		6296566	0					
ANR	6296764	Identifier	a		6296566	1					
ANR	6296765	PrimaryExpression	4		6296566	1					
ANR	6296766	ElseStatement	else		6296566	0					
ANR	6296767	IfStatement	"if ( ! strncmp ( tcc_state -> arch , ""arm"" , 3 ) )"		6296566	0					
ANR	6296768	Condition	"! strncmp ( tcc_state -> arch , ""arm"" , 3 )"	546:13:13388:13423	6296566	0	True				
ANR	6296769	UnaryOperationExpression	"! strncmp ( tcc_state -> arch , ""arm"" , 3 )"		6296566	0					
ANR	6296770	UnaryOperator	!		6296566	0					
ANR	6296771	CallExpression	"strncmp ( tcc_state -> arch , ""arm"" , 3 )"		6296566	1					
ANR	6296772	Callee	strncmp		6296566	0					
ANR	6296773	Identifier	strncmp		6296566	0					
ANR	6296774	ArgumentList	tcc_state -> arch		6296566	1					
ANR	6296775	Argument	tcc_state -> arch		6296566	0					
ANR	6296776	PtrMemberAccess	tcc_state -> arch		6296566	0					
ANR	6296777	Identifier	tcc_state		6296566	0					
ANR	6296778	Identifier	arch		6296566	1					
ANR	6296779	Argument	"""arm"""		6296566	1					
ANR	6296780	PrimaryExpression	"""arm"""		6296566	0					
ANR	6296781	Argument	3		6296566	2					
ANR	6296782	PrimaryExpression	3		6296566	0					
ANR	6296783	CompoundStatement		37:51:721:721	6296566	1					
ANR	6296784	ExpressionStatement	* a = 8	555:3:13621:13627	6296566	0	True				
ANR	6296785	AssignmentExpression	* a = 8		6296566	0		=			
ANR	6296786	UnaryOperationExpression	* a		6296566	0					
ANR	6296787	UnaryOperator	*		6296566	0					
ANR	6296788	Identifier	a		6296566	1					
ANR	6296789	PrimaryExpression	8		6296566	1					
ANR	6296790	ElseStatement	else		6296566	0					
ANR	6296791	CompoundStatement		47:9:933:933	6296566	0					
ANR	6296792	ExpressionStatement	* a = 8	557:3:13643:13649	6296566	0	True				
ANR	6296793	AssignmentExpression	* a = 8		6296566	0		=			
ANR	6296794	UnaryOperationExpression	* a		6296566	0					
ANR	6296795	UnaryOperator	*		6296566	0					
ANR	6296796	Identifier	a		6296566	1					
ANR	6296797	PrimaryExpression	8		6296566	1					
ANR	6296798	ReturnStatement	return 8 ;	559:2:13657:13665	6296566	1	True				
ANR	6296799	PrimaryExpression	8		6296566	0					
ANR	6296800	ElseStatement	else		6296566	0					
ANR	6296801	IfStatement	if ( bt == VT_ENUM )		6296566	0					
ANR	6296802	Condition	bt == VT_ENUM	560:12:13679:13691	6296566	0	True				
ANR	6296803	EqualityExpression	bt == VT_ENUM		6296566	0		==			
ANR	6296804	Identifier	bt		6296566	0					
ANR	6296805	Identifier	VT_ENUM		6296566	1					
ANR	6296806	CompoundStatement		51:27:989:989	6296566	1					
ANR	6296807	ExpressionStatement	* a = 8	563:2:13776:13782	6296566	0	True				
ANR	6296808	AssignmentExpression	* a = 8		6296566	0		=			
ANR	6296809	UnaryOperationExpression	* a		6296566	0					
ANR	6296810	UnaryOperator	*		6296566	0					
ANR	6296811	Identifier	a		6296566	1					
ANR	6296812	PrimaryExpression	8		6296566	1					
ANR	6296813	ReturnStatement	return 8 ;	564:2:13786:13794	6296566	1	True				
ANR	6296814	PrimaryExpression	8		6296566	0					
ANR	6296815	ElseStatement	else		6296566	0					
ANR	6296816	IfStatement	if ( bt == VT_INT32 || bt == VT_FLOAT )		6296566	0					
ANR	6296817	Condition	bt == VT_INT32 || bt == VT_FLOAT	565:12:13808:13839	6296566	0	True				
ANR	6296818	OrExpression	bt == VT_INT32 || bt == VT_FLOAT		6296566	0		||			
ANR	6296819	EqualityExpression	bt == VT_INT32		6296566	0		==			
ANR	6296820	Identifier	bt		6296566	0					
ANR	6296821	Identifier	VT_INT32		6296566	1					
ANR	6296822	EqualityExpression	bt == VT_FLOAT		6296566	1		==			
ANR	6296823	Identifier	bt		6296566	0					
ANR	6296824	Identifier	VT_FLOAT		6296566	1					
ANR	6296825	CompoundStatement		56:46:1137:1137	6296566	1					
ANR	6296826	ExpressionStatement	* a = 4	566:2:13846:13852	6296566	0	True				
ANR	6296827	AssignmentExpression	* a = 4		6296566	0		=			
ANR	6296828	UnaryOperationExpression	* a		6296566	0					
ANR	6296829	UnaryOperator	*		6296566	0					
ANR	6296830	Identifier	a		6296566	1					
ANR	6296831	PrimaryExpression	4		6296566	1					
ANR	6296832	ReturnStatement	return 4 ;	567:2:13856:13864	6296566	1	True				
ANR	6296833	PrimaryExpression	4		6296566	0					
ANR	6296834	ElseStatement	else		6296566	0					
ANR	6296835	IfStatement	if ( bt == VT_INT16 )		6296566	0					
ANR	6296836	Condition	bt == VT_INT16	568:12:13878:13891	6296566	0	True				
ANR	6296837	EqualityExpression	bt == VT_INT16		6296566	0		==			
ANR	6296838	Identifier	bt		6296566	0					
ANR	6296839	Identifier	VT_INT16		6296566	1					
ANR	6296840	CompoundStatement		59:28:1189:1189	6296566	1					
ANR	6296841	ExpressionStatement	* a = 2	569:2:13898:13904	6296566	0	True				
ANR	6296842	AssignmentExpression	* a = 2		6296566	0		=			
ANR	6296843	UnaryOperationExpression	* a		6296566	0					
ANR	6296844	UnaryOperator	*		6296566	0					
ANR	6296845	Identifier	a		6296566	1					
ANR	6296846	PrimaryExpression	2		6296566	1					
ANR	6296847	ReturnStatement	return 2 ;	570:2:13908:13916	6296566	1	True				
ANR	6296848	PrimaryExpression	2		6296566	0					
ANR	6296849	ElseStatement	else		6296566	0					
ANR	6296850	IfStatement	if ( bt == VT_QLONG || bt == VT_QFLOAT )		6296566	0					
ANR	6296851	Condition	bt == VT_QLONG || bt == VT_QFLOAT	571:12:13930:13962	6296566	0	True				
ANR	6296852	OrExpression	bt == VT_QLONG || bt == VT_QFLOAT		6296566	0		||			
ANR	6296853	EqualityExpression	bt == VT_QLONG		6296566	0		==			
ANR	6296854	Identifier	bt		6296566	0					
ANR	6296855	Identifier	VT_QLONG		6296566	1					
ANR	6296856	EqualityExpression	bt == VT_QFLOAT		6296566	1		==			
ANR	6296857	Identifier	bt		6296566	0					
ANR	6296858	Identifier	VT_QFLOAT		6296566	1					
ANR	6296859	CompoundStatement		62:47:1260:1260	6296566	1					
ANR	6296860	ExpressionStatement	* a = 8	572:2:13969:13975	6296566	0	True				
ANR	6296861	AssignmentExpression	* a = 8		6296566	0		=			
ANR	6296862	UnaryOperationExpression	* a		6296566	0					
ANR	6296863	UnaryOperator	*		6296566	0					
ANR	6296864	Identifier	a		6296566	1					
ANR	6296865	PrimaryExpression	8		6296566	1					
ANR	6296866	ReturnStatement	return 16 ;	573:2:13979:13988	6296566	1	True				
ANR	6296867	PrimaryExpression	16		6296566	0					
ANR	6296868	ElseStatement	else		6296566	0					
ANR	6296869	CompoundStatement		65:8:1293:1293	6296566	0					
ANR	6296870	ExpressionStatement	* a = 1	576:2:14038:14044	6296566	0	True				
ANR	6296871	AssignmentExpression	* a = 1		6296566	0		=			
ANR	6296872	UnaryOperationExpression	* a		6296566	0					
ANR	6296873	UnaryOperator	*		6296566	0					
ANR	6296874	Identifier	a		6296566	1					
ANR	6296875	PrimaryExpression	1		6296566	1					
ANR	6296876	ReturnStatement	return 1 ;	577:2:14048:14056	6296566	1	True				
ANR	6296877	PrimaryExpression	1		6296566	0					
ANR	6296878	ReturnType	ST_FUNC int		6296566	1					
ANR	6296879	Identifier	type_size		6296566	2					
ANR	6296880	ParameterList	"CType * type , int * a"		6296566	3					
ANR	6296881	Parameter	CType * type	510:22:12683:12693	6296566	0	True				
ANR	6296882	ParameterType	CType *		6296566	0					
ANR	6296883	Identifier	type		6296566	1					
ANR	6296884	Parameter	int * a	510:35:12696:12701	6296566	1	True				
ANR	6296885	ParameterType	int *		6296566	0					
ANR	6296886	Identifier	a		6296566	1					
ANR	6296887	CFGEntryNode	ENTRY		6296566		True				
ANR	6296888	CFGExitNode	EXIT		6296566		True				
ANR	6296889	Symbol	VT_PTR		6296566						
ANR	6296890	Symbol	s -> r		6296566						
ANR	6296891	Symbol	LDOUBLE_SIZE		6296566						
ANR	6296892	Symbol	tcc_state -> arch		6296566						
ANR	6296893	Symbol	VT_INT16		6296566						
ANR	6296894	Symbol	VT_LDOUBLE		6296566						
ANR	6296895	Symbol	* tcc_state		6296566						
ANR	6296896	Symbol	type		6296566						
ANR	6296897	Symbol	strncmp		6296566						
ANR	6296898	Symbol	bt		6296566						
ANR	6296899	Symbol	type_size		6296566						
ANR	6296900	Symbol	s -> c		6296566						
ANR	6296901	Symbol	* type		6296566						
ANR	6296902	Symbol	VT_INT32		6296566						
ANR	6296903	Symbol	type -> ref		6296566						
ANR	6296904	Symbol	& s -> type		6296566						
ANR	6296905	Symbol	tcc_state		6296566						
ANR	6296906	Symbol	a		6296566						
ANR	6296907	Symbol	LDOUBLE_ALIGN		6296566						
ANR	6296908	Symbol	VT_DOUBLE		6296566						
ANR	6296909	Symbol	VT_ENUM		6296566						
ANR	6296910	Symbol	PTR_SIZE		6296566						
ANR	6296911	Symbol	VT_QFLOAT		6296566						
ANR	6296912	Symbol	VT_QLONG		6296566						
ANR	6296913	Symbol	* a		6296566						
ANR	6296914	Symbol	VT_BTYPE		6296566						
ANR	6296915	Symbol	VT_FLOAT		6296566						
ANR	6296916	Symbol	s		6296566						
ANR	6296917	Symbol	tcc_state -> os		6296566						
ANR	6296918	Symbol	tcc_state -> bits		6296566						
ANR	6296919	Symbol	type -> t		6296566						
ANR	6296920	Symbol	is_structured		6296566						
ANR	6296921	Symbol	VT_INT64		6296566						
ANR	6296922	Symbol	* s		6296566						
ANR	6296923	Symbol	VT_ARRAY		6296566						
ANR	6296924	Symbol	ts		6296566						
ANR	6296925	Function	pointed_type	582:0:14099:14174							
ANR	6296926	FunctionDef	pointed_type (CType * type)		6296925	0					
ANR	6296927	CompoundStatement		582:47:14146:14174	6296925	0					
ANR	6296928	ReturnStatement	return & type -> ref -> type ;	583:1:14149:14172	6296925	0	True				
ANR	6296929	UnaryOperationExpression	& type -> ref -> type		6296925	0					
ANR	6296930	UnaryOperator	&		6296925	0					
ANR	6296931	PtrMemberAccess	type -> ref -> type		6296925	1					
ANR	6296932	PtrMemberAccess	type -> ref		6296925	0					
ANR	6296933	Identifier	type		6296925	0					
ANR	6296934	Identifier	ref		6296925	1					
ANR	6296935	Identifier	type		6296925	1					
ANR	6296936	ReturnType	static inline CType *		6296925	1					
ANR	6296937	Identifier	pointed_type		6296925	2					
ANR	6296938	ParameterList	CType * type		6296925	3					
ANR	6296939	Parameter	CType * type	582:34:14133:14143	6296925	0	True				
ANR	6296940	ParameterType	CType *		6296925	0					
ANR	6296941	Identifier	type		6296925	1					
ANR	6296942	CFGEntryNode	ENTRY		6296925		True				
ANR	6296943	CFGExitNode	EXIT		6296925		True				
ANR	6296944	Symbol	type -> ref		6296925						
ANR	6296945	Symbol	& type -> ref -> type		6296925						
ANR	6296946	Symbol	* type		6296925						
ANR	6296947	Symbol	type		6296925						
ANR	6296948	Function	mk_pointer	587:0:14232:14402							
ANR	6296949	FunctionDef	mk_pointer (CType * type)		6296948	0					
ANR	6296950	CompoundStatement		587:37:14269:14402	6296948	0					
ANR	6296951	IdentifierDeclStatement	Sym * s ;	588:1:14272:14278	6296948	0	True				
ANR	6296952	IdentifierDecl	* s		6296948	0					
ANR	6296953	IdentifierDeclType	Sym *		6296948	0					
ANR	6296954	Identifier	s		6296948	1					
ANR	6296955	ExpressionStatement	"s = sym_push ( SYM_FIELD , type , 0 , - 1 )"	589:1:14281:14318	6296948	1	True				
ANR	6296956	AssignmentExpression	"s = sym_push ( SYM_FIELD , type , 0 , - 1 )"		6296948	0		=			
ANR	6296957	Identifier	s		6296948	0					
ANR	6296958	CallExpression	"sym_push ( SYM_FIELD , type , 0 , - 1 )"		6296948	1					
ANR	6296959	Callee	sym_push		6296948	0					
ANR	6296960	Identifier	sym_push		6296948	0					
ANR	6296961	ArgumentList	SYM_FIELD		6296948	1					
ANR	6296962	Argument	SYM_FIELD		6296948	0					
ANR	6296963	Identifier	SYM_FIELD		6296948	0					
ANR	6296964	Argument	type		6296948	1					
ANR	6296965	Identifier	type		6296948	0					
ANR	6296966	Argument	0		6296948	2					
ANR	6296967	PrimaryExpression	0		6296948	0					
ANR	6296968	Argument	- 1		6296948	3					
ANR	6296969	UnaryOperationExpression	- 1		6296948	0					
ANR	6296970	UnaryOperator	-		6296948	0					
ANR	6296971	PrimaryExpression	1		6296948	1					
ANR	6296972	IfStatement	if ( ! s )		6296948	2					
ANR	6296973	Condition	! s	590:5:14325:14326	6296948	0	True				
ANR	6296974	UnaryOperationExpression	! s		6296948	0					
ANR	6296975	UnaryOperator	!		6296948	0					
ANR	6296976	Identifier	s		6296948	1					
ANR	6296977	CompoundStatement		4:9:59:59	6296948	1					
ANR	6296978	ReturnStatement	return ;	591:2:14333:14339	6296948	0	True				
ANR	6296979	ExpressionStatement	type -> t = VT_PTR | ( type -> t & ~VT_TYPE )	593:1:14345:14384	6296948	3	True				
ANR	6296980	AssignmentExpression	type -> t = VT_PTR | ( type -> t & ~VT_TYPE )		6296948	0		=			
ANR	6296981	PtrMemberAccess	type -> t		6296948	0					
ANR	6296982	Identifier	type		6296948	0					
ANR	6296983	Identifier	t		6296948	1					
ANR	6296984	InclusiveOrExpression	VT_PTR | ( type -> t & ~VT_TYPE )		6296948	1		|			
ANR	6296985	Identifier	VT_PTR		6296948	0					
ANR	6296986	BitAndExpression	type -> t & ~VT_TYPE		6296948	1		&			
ANR	6296987	PtrMemberAccess	type -> t		6296948	0					
ANR	6296988	Identifier	type		6296948	0					
ANR	6296989	Identifier	t		6296948	1					
ANR	6296990	Identifier	~VT_TYPE		6296948	1					
ANR	6296991	ExpressionStatement	type -> ref = s	594:1:14387:14400	6296948	4	True				
ANR	6296992	AssignmentExpression	type -> ref = s		6296948	0		=			
ANR	6296993	PtrMemberAccess	type -> ref		6296948	0					
ANR	6296994	Identifier	type		6296948	0					
ANR	6296995	Identifier	ref		6296948	1					
ANR	6296996	Identifier	s		6296948	1					
ANR	6296997	ReturnType	ST_FUNC void		6296948	1					
ANR	6296998	Identifier	mk_pointer		6296948	2					
ANR	6296999	ParameterList	CType * type		6296948	3					
ANR	6297000	Parameter	CType * type	587:24:14256:14266	6296948	0	True				
ANR	6297001	ParameterType	CType *		6296948	0					
ANR	6297002	Identifier	type		6296948	1					
ANR	6297003	CFGEntryNode	ENTRY		6296948		True				
ANR	6297004	CFGExitNode	EXIT		6296948		True				
ANR	6297005	Symbol	type -> ref		6296948						
ANR	6297006	Symbol	VT_PTR		6296948						
ANR	6297007	Symbol	s		6296948						
ANR	6297008	Symbol	SYM_FIELD		6296948						
ANR	6297009	Symbol	* type		6296948						
ANR	6297010	Symbol	type -> t		6296948						
ANR	6297011	Symbol	~VT_TYPE		6296948						
ANR	6297012	Symbol	sym_push		6296948						
ANR	6297013	Symbol	type		6296948						
ANR	6297014	Function	is_compatible_func	598:0:14473:15075							
ANR	6297015	FunctionDef	"is_compatible_func (CType * type1 , CType * type2)"		6297014	0					
ANR	6297016	CompoundStatement		598:58:14531:15075	6297014	0					
ANR	6297017	IdentifierDeclStatement	"Sym * s1 , * s2 ;"	599:1:14534:14546	6297014	0	True				
ANR	6297018	IdentifierDecl	* s1		6297014	0					
ANR	6297019	IdentifierDeclType	Sym *		6297014	0					
ANR	6297020	Identifier	s1		6297014	1					
ANR	6297021	IdentifierDecl	* s2		6297014	1					
ANR	6297022	IdentifierDeclType	Sym *		6297014	0					
ANR	6297023	Identifier	s2		6297014	1					
ANR	6297024	ExpressionStatement	s1 = type1 -> ref	601:1:14550:14565	6297014	1	True				
ANR	6297025	AssignmentExpression	s1 = type1 -> ref		6297014	0		=			
ANR	6297026	Identifier	s1		6297014	0					
ANR	6297027	PtrMemberAccess	type1 -> ref		6297014	1					
ANR	6297028	Identifier	type1		6297014	0					
ANR	6297029	Identifier	ref		6297014	1					
ANR	6297030	ExpressionStatement	s2 = type2 -> ref	602:1:14568:14583	6297014	2	True				
ANR	6297031	AssignmentExpression	s2 = type2 -> ref		6297014	0		=			
ANR	6297032	Identifier	s2		6297014	0					
ANR	6297033	PtrMemberAccess	type2 -> ref		6297014	1					
ANR	6297034	Identifier	type2		6297014	0					
ANR	6297035	Identifier	ref		6297014	1					
ANR	6297036	IfStatement	"if ( ! is_compatible_types ( & s1 -> type , & s2 -> type ) )"		6297014	3					
ANR	6297037	Condition	"! is_compatible_types ( & s1 -> type , & s2 -> type )"	603:5:14590:14632	6297014	0	True				
ANR	6297038	UnaryOperationExpression	"! is_compatible_types ( & s1 -> type , & s2 -> type )"		6297014	0					
ANR	6297039	UnaryOperator	!		6297014	0					
ANR	6297040	CallExpression	"is_compatible_types ( & s1 -> type , & s2 -> type )"		6297014	1					
ANR	6297041	Callee	is_compatible_types		6297014	0					
ANR	6297042	Identifier	is_compatible_types		6297014	0					
ANR	6297043	ArgumentList	& s1 -> type		6297014	1					
ANR	6297044	Argument	& s1 -> type		6297014	0					
ANR	6297045	UnaryOperationExpression	& s1 -> type		6297014	0					
ANR	6297046	UnaryOperator	&		6297014	0					
ANR	6297047	PtrMemberAccess	s1 -> type		6297014	1					
ANR	6297048	Identifier	s1		6297014	0					
ANR	6297049	Identifier	type		6297014	1					
ANR	6297050	Argument	& s2 -> type		6297014	1					
ANR	6297051	UnaryOperationExpression	& s2 -> type		6297014	0					
ANR	6297052	UnaryOperator	&		6297014	0					
ANR	6297053	PtrMemberAccess	s2 -> type		6297014	1					
ANR	6297054	Identifier	s2		6297014	0					
ANR	6297055	Identifier	type		6297014	1					
ANR	6297056	CompoundStatement		6:50:103:103	6297014	1					
ANR	6297057	ReturnStatement	return 0 ;	604:2:14639:14647	6297014	0	True				
ANR	6297058	PrimaryExpression	0		6297014	0					
ANR	6297059	IfStatement	if ( FUNC_CALL ( s1 -> r ) != FUNC_CALL ( s2 -> r ) )		6297014	4					
ANR	6297060	Condition	FUNC_CALL ( s1 -> r ) != FUNC_CALL ( s2 -> r )	607:5:14680:14717	6297014	0	True				
ANR	6297061	EqualityExpression	FUNC_CALL ( s1 -> r ) != FUNC_CALL ( s2 -> r )		6297014	0		!=			
ANR	6297062	CallExpression	FUNC_CALL ( s1 -> r )		6297014	0					
ANR	6297063	Callee	FUNC_CALL		6297014	0					
ANR	6297064	Identifier	FUNC_CALL		6297014	0					
ANR	6297065	ArgumentList	s1 -> r		6297014	1					
ANR	6297066	Argument	s1 -> r		6297014	0					
ANR	6297067	PtrMemberAccess	s1 -> r		6297014	0					
ANR	6297068	Identifier	s1		6297014	0					
ANR	6297069	Identifier	r		6297014	1					
ANR	6297070	CallExpression	FUNC_CALL ( s2 -> r )		6297014	1					
ANR	6297071	Callee	FUNC_CALL		6297014	0					
ANR	6297072	Identifier	FUNC_CALL		6297014	0					
ANR	6297073	ArgumentList	s2 -> r		6297014	1					
ANR	6297074	Argument	s2 -> r		6297014	0					
ANR	6297075	PtrMemberAccess	s2 -> r		6297014	0					
ANR	6297076	Identifier	s2		6297014	0					
ANR	6297077	Identifier	r		6297014	1					
ANR	6297078	CompoundStatement		10:45:188:188	6297014	1					
ANR	6297079	ReturnStatement	return 0 ;	608:2:14724:14732	6297014	0	True				
ANR	6297080	PrimaryExpression	0		6297014	0					
ANR	6297081	IfStatement	if ( s1 -> c == FUNC_OLD || s2 -> c == FUNC_OLD )		6297014	5					
ANR	6297082	Condition	s1 -> c == FUNC_OLD || s2 -> c == FUNC_OLD	611:5:14767:14804	6297014	0	True				
ANR	6297083	OrExpression	s1 -> c == FUNC_OLD || s2 -> c == FUNC_OLD		6297014	0		||			
ANR	6297084	EqualityExpression	s1 -> c == FUNC_OLD		6297014	0		==			
ANR	6297085	PtrMemberAccess	s1 -> c		6297014	0					
ANR	6297086	Identifier	s1		6297014	0					
ANR	6297087	Identifier	c		6297014	1					
ANR	6297088	Identifier	FUNC_OLD		6297014	1					
ANR	6297089	EqualityExpression	s2 -> c == FUNC_OLD		6297014	1		==			
ANR	6297090	PtrMemberAccess	s2 -> c		6297014	0					
ANR	6297091	Identifier	s2		6297014	0					
ANR	6297092	Identifier	c		6297014	1					
ANR	6297093	Identifier	FUNC_OLD		6297014	1					
ANR	6297094	CompoundStatement		14:45:275:275	6297014	1					
ANR	6297095	ReturnStatement	return 1 ;	612:2:14811:14819	6297014	0	True				
ANR	6297096	PrimaryExpression	1		6297014	0					
ANR	6297097	IfStatement	if ( s1 -> c != s2 -> c )		6297014	6					
ANR	6297098	Condition	s1 -> c != s2 -> c	614:5:14829:14842	6297014	0	True				
ANR	6297099	EqualityExpression	s1 -> c != s2 -> c		6297014	0		!=			
ANR	6297100	PtrMemberAccess	s1 -> c		6297014	0					
ANR	6297101	Identifier	s1		6297014	0					
ANR	6297102	Identifier	c		6297014	1					
ANR	6297103	PtrMemberAccess	s2 -> c		6297014	1					
ANR	6297104	Identifier	s2		6297014	0					
ANR	6297105	Identifier	c		6297014	1					
ANR	6297106	CompoundStatement		17:21:313:313	6297014	1					
ANR	6297107	ReturnStatement	return 0 ;	615:2:14849:14857	6297014	0	True				
ANR	6297108	PrimaryExpression	0		6297014	0					
ANR	6297109	WhileStatement	while ( s1 != NULL )		6297014	7					
ANR	6297110	Condition	s1 != NULL	617:8:14870:14879	6297014	0	True				
ANR	6297111	EqualityExpression	s1 != NULL		6297014	0		!=			
ANR	6297112	Identifier	s1		6297014	0					
ANR	6297113	Identifier	NULL		6297014	1					
ANR	6297114	CompoundStatement		20:20:350:350	6297014	1					
ANR	6297115	IfStatement	if ( s2 == NULL )		6297014	0					
ANR	6297116	Condition	s2 == NULL	618:6:14890:14899	6297014	0	True				
ANR	6297117	EqualityExpression	s2 == NULL		6297014	0		==			
ANR	6297118	Identifier	s2		6297014	0					
ANR	6297119	Identifier	NULL		6297014	1					
ANR	6297120	CompoundStatement		21:18:370:370	6297014	1					
ANR	6297121	ReturnStatement	return 0 ;	619:3:14907:14915	6297014	0	True				
ANR	6297122	PrimaryExpression	0		6297014	0					
ANR	6297123	IfStatement	"if ( ! is_compatible_parameter_types ( & s1 -> type , & s2 -> type ) )"		6297014	1					
ANR	6297124	Condition	"! is_compatible_parameter_types ( & s1 -> type , & s2 -> type )"	621:6:14927:14979	6297014	0	True				
ANR	6297125	UnaryOperationExpression	"! is_compatible_parameter_types ( & s1 -> type , & s2 -> type )"		6297014	0					
ANR	6297126	UnaryOperator	!		6297014	0					
ANR	6297127	CallExpression	"is_compatible_parameter_types ( & s1 -> type , & s2 -> type )"		6297014	1					
ANR	6297128	Callee	is_compatible_parameter_types		6297014	0					
ANR	6297129	Identifier	is_compatible_parameter_types		6297014	0					
ANR	6297130	ArgumentList	& s1 -> type		6297014	1					
ANR	6297131	Argument	& s1 -> type		6297014	0					
ANR	6297132	UnaryOperationExpression	& s1 -> type		6297014	0					
ANR	6297133	UnaryOperator	&		6297014	0					
ANR	6297134	PtrMemberAccess	s1 -> type		6297014	1					
ANR	6297135	Identifier	s1		6297014	0					
ANR	6297136	Identifier	type		6297014	1					
ANR	6297137	Argument	& s2 -> type		6297014	1					
ANR	6297138	UnaryOperationExpression	& s2 -> type		6297014	0					
ANR	6297139	UnaryOperator	&		6297014	0					
ANR	6297140	PtrMemberAccess	s2 -> type		6297014	1					
ANR	6297141	Identifier	s2		6297014	0					
ANR	6297142	Identifier	type		6297014	1					
ANR	6297143	CompoundStatement		24:61:450:450	6297014	1					
ANR	6297144	ReturnStatement	return 0 ;	622:3:14987:14995	6297014	0	True				
ANR	6297145	PrimaryExpression	0		6297014	0					
ANR	6297146	ExpressionStatement	s1 = s1 -> next	624:2:15003:15016	6297014	2	True				
ANR	6297147	AssignmentExpression	s1 = s1 -> next		6297014	0		=			
ANR	6297148	Identifier	s1		6297014	0					
ANR	6297149	PtrMemberAccess	s1 -> next		6297014	1					
ANR	6297150	Identifier	s1		6297014	0					
ANR	6297151	Identifier	next		6297014	1					
ANR	6297152	ExpressionStatement	s2 = s2 -> next	625:2:15020:15033	6297014	3	True				
ANR	6297153	AssignmentExpression	s2 = s2 -> next		6297014	0		=			
ANR	6297154	Identifier	s2		6297014	0					
ANR	6297155	PtrMemberAccess	s2 -> next		6297014	1					
ANR	6297156	Identifier	s2		6297014	0					
ANR	6297157	Identifier	next		6297014	1					
ANR	6297158	IfStatement	if ( s2 )		6297014	8					
ANR	6297159	Condition	s2	627:5:15043:15044	6297014	0	True				
ANR	6297160	Identifier	s2		6297014	0					
ANR	6297161	CompoundStatement		30:9:515:515	6297014	1					
ANR	6297162	ReturnStatement	return 0 ;	628:2:15051:15059	6297014	0	True				
ANR	6297163	PrimaryExpression	0		6297014	0					
ANR	6297164	ReturnStatement	return 1 ;	630:1:15065:15073	6297014	9	True				
ANR	6297165	PrimaryExpression	1		6297014	0					
ANR	6297166	ReturnType	static int		6297014	1					
ANR	6297167	Identifier	is_compatible_func		6297014	2					
ANR	6297168	ParameterList	"CType * type1 , CType * type2"		6297014	3					
ANR	6297169	Parameter	CType * type1	598:30:14503:14514	6297014	0	True				
ANR	6297170	ParameterType	CType *		6297014	0					
ANR	6297171	Identifier	type1		6297014	1					
ANR	6297172	Parameter	CType * type2	598:44:14517:14528	6297014	1	True				
ANR	6297173	ParameterType	CType *		6297014	0					
ANR	6297174	Identifier	type2		6297014	1					
ANR	6297175	CFGEntryNode	ENTRY		6297014		True				
ANR	6297176	CFGExitNode	EXIT		6297014		True				
ANR	6297177	Symbol	s2 -> c		6297014						
ANR	6297178	Symbol	type2		6297014						
ANR	6297179	Symbol	NULL		6297014						
ANR	6297180	Symbol	* s2		6297014						
ANR	6297181	Symbol	* s1		6297014						
ANR	6297182	Symbol	s1 -> r		6297014						
ANR	6297183	Symbol	type1		6297014						
ANR	6297184	Symbol	is_compatible_parameter_types		6297014						
ANR	6297185	Symbol	& s1 -> type		6297014						
ANR	6297186	Symbol	type1 -> ref		6297014						
ANR	6297187	Symbol	type2 -> ref		6297014						
ANR	6297188	Symbol	is_compatible_types		6297014						
ANR	6297189	Symbol	s2 -> r		6297014						
ANR	6297190	Symbol	s1 -> c		6297014						
ANR	6297191	Symbol	& s2 -> type		6297014						
ANR	6297192	Symbol	FUNC_CALL		6297014						
ANR	6297193	Symbol	FUNC_OLD		6297014						
ANR	6297194	Symbol	s1 -> next		6297014						
ANR	6297195	Symbol	* type1		6297014						
ANR	6297196	Symbol	s2 -> next		6297014						
ANR	6297197	Symbol	s1		6297014						
ANR	6297198	Symbol	* type2		6297014						
ANR	6297199	Symbol	s2		6297014						
ANR	6297200	Function	compare_types	638:0:15262:15968							
ANR	6297201	FunctionDef	"compare_types (CType * type1 , CType * type2 , int unqualified)"		6297200	0					
ANR	6297202	CompoundStatement		638:70:15332:15968	6297200	0					
ANR	6297203	IdentifierDeclStatement	int t1 = type1 -> t & VT_TYPE ;	639:1:15335:15362	6297200	0	True				
ANR	6297204	IdentifierDecl	t1 = type1 -> t & VT_TYPE		6297200	0					
ANR	6297205	IdentifierDeclType	int		6297200	0					
ANR	6297206	Identifier	t1		6297200	1					
ANR	6297207	AssignmentExpression	t1 = type1 -> t & VT_TYPE		6297200	2		=			
ANR	6297208	Identifier	t1		6297200	0					
ANR	6297209	BitAndExpression	type1 -> t & VT_TYPE		6297200	1		&			
ANR	6297210	PtrMemberAccess	type1 -> t		6297200	0					
ANR	6297211	Identifier	type1		6297200	0					
ANR	6297212	Identifier	t		6297200	1					
ANR	6297213	Identifier	VT_TYPE		6297200	1					
ANR	6297214	IdentifierDeclStatement	int t2 = type2 -> t & VT_TYPE ;	640:1:15365:15392	6297200	1	True				
ANR	6297215	IdentifierDecl	t2 = type2 -> t & VT_TYPE		6297200	0					
ANR	6297216	IdentifierDeclType	int		6297200	0					
ANR	6297217	Identifier	t2		6297200	1					
ANR	6297218	AssignmentExpression	t2 = type2 -> t & VT_TYPE		6297200	2		=			
ANR	6297219	Identifier	t2		6297200	0					
ANR	6297220	BitAndExpression	type2 -> t & VT_TYPE		6297200	1		&			
ANR	6297221	PtrMemberAccess	type2 -> t		6297200	0					
ANR	6297222	Identifier	type2		6297200	0					
ANR	6297223	Identifier	t		6297200	1					
ANR	6297224	Identifier	VT_TYPE		6297200	1					
ANR	6297225	IfStatement	if ( unqualified )		6297200	2					
ANR	6297226	Condition	unqualified	641:5:15399:15409	6297200	0	True				
ANR	6297227	Identifier	unqualified		6297200	0					
ANR	6297228	CompoundStatement		4:18:79:79	6297200	1					
ANR	6297229	ExpressionStatement	t1 &= ~ ( VT_CONSTANT | VT_VOLATILE )	643:2:15458:15492	6297200	0	True				
ANR	6297230	AssignmentExpression	t1 &= ~ ( VT_CONSTANT | VT_VOLATILE )		6297200	0		&=			
ANR	6297231	Identifier	t1		6297200	0					
ANR	6297232	UnaryOperationExpression	~ ( VT_CONSTANT | VT_VOLATILE )		6297200	1					
ANR	6297233	UnaryOperator	~		6297200	0					
ANR	6297234	InclusiveOrExpression	VT_CONSTANT | VT_VOLATILE		6297200	1		|			
ANR	6297235	Identifier	VT_CONSTANT		6297200	0					
ANR	6297236	Identifier	VT_VOLATILE		6297200	1					
ANR	6297237	ExpressionStatement	t2 &= ~ ( VT_CONSTANT | VT_VOLATILE )	644:2:15496:15530	6297200	1	True				
ANR	6297238	AssignmentExpression	t2 &= ~ ( VT_CONSTANT | VT_VOLATILE )		6297200	0		&=			
ANR	6297239	Identifier	t2		6297200	0					
ANR	6297240	UnaryOperationExpression	~ ( VT_CONSTANT | VT_VOLATILE )		6297200	1					
ANR	6297241	UnaryOperator	~		6297200	0					
ANR	6297242	InclusiveOrExpression	VT_CONSTANT | VT_VOLATILE		6297200	1		|			
ANR	6297243	Identifier	VT_CONSTANT		6297200	0					
ANR	6297244	Identifier	VT_VOLATILE		6297200	1					
ANR	6297245	IfStatement	if ( t1 != t2 )		6297200	3					
ANR	6297246	Condition	t1 != t2	647:5:15564:15571	6297200	0	True				
ANR	6297247	EqualityExpression	t1 != t2		6297200	0		!=			
ANR	6297248	Identifier	t1		6297200	0					
ANR	6297249	Identifier	t2		6297200	1					
ANR	6297250	CompoundStatement		10:15:241:241	6297200	1					
ANR	6297251	ReturnStatement	return 0 ;	648:2:15578:15586	6297200	0	True				
ANR	6297252	PrimaryExpression	0		6297200	0					
ANR	6297253	IdentifierDeclStatement	int bt1 = t1 & VT_BTYPE ;	651:1:15627:15650	6297200	4	True				
ANR	6297254	IdentifierDecl	bt1 = t1 & VT_BTYPE		6297200	0					
ANR	6297255	IdentifierDeclType	int		6297200	0					
ANR	6297256	Identifier	bt1		6297200	1					
ANR	6297257	AssignmentExpression	bt1 = t1 & VT_BTYPE		6297200	2		=			
ANR	6297258	Identifier	bt1		6297200	0					
ANR	6297259	BitAndExpression	t1 & VT_BTYPE		6297200	1		&			
ANR	6297260	Identifier	t1		6297200	0					
ANR	6297261	Identifier	VT_BTYPE		6297200	1					
ANR	6297262	IfStatement	if ( bt1 == VT_PTR )		6297200	5					
ANR	6297263	Condition	bt1 == VT_PTR	652:5:15657:15669	6297200	0	True				
ANR	6297264	EqualityExpression	bt1 == VT_PTR		6297200	0		==			
ANR	6297265	Identifier	bt1		6297200	0					
ANR	6297266	Identifier	VT_PTR		6297200	1					
ANR	6297267	CompoundStatement		15:20:339:339	6297200	1					
ANR	6297268	ExpressionStatement	type1 = pointed_type ( type1 )	653:2:15676:15704	6297200	0	True				
ANR	6297269	AssignmentExpression	type1 = pointed_type ( type1 )		6297200	0		=			
ANR	6297270	Identifier	type1		6297200	0					
ANR	6297271	CallExpression	pointed_type ( type1 )		6297200	1					
ANR	6297272	Callee	pointed_type		6297200	0					
ANR	6297273	Identifier	pointed_type		6297200	0					
ANR	6297274	ArgumentList	type1		6297200	1					
ANR	6297275	Argument	type1		6297200	0					
ANR	6297276	Identifier	type1		6297200	0					
ANR	6297277	ExpressionStatement	type2 = pointed_type ( type2 )	654:2:15708:15736	6297200	1	True				
ANR	6297278	AssignmentExpression	type2 = pointed_type ( type2 )		6297200	0		=			
ANR	6297279	Identifier	type2		6297200	0					
ANR	6297280	CallExpression	pointed_type ( type2 )		6297200	1					
ANR	6297281	Callee	pointed_type		6297200	0					
ANR	6297282	Identifier	pointed_type		6297200	0					
ANR	6297283	ArgumentList	type2		6297200	1					
ANR	6297284	Argument	type2		6297200	0					
ANR	6297285	Identifier	type2		6297200	0					
ANR	6297286	ReturnStatement	"return is_compatible_types ( type1 , type2 ) ;"	655:2:15740:15781	6297200	2	True				
ANR	6297287	CallExpression	"is_compatible_types ( type1 , type2 )"		6297200	0					
ANR	6297288	Callee	is_compatible_types		6297200	0					
ANR	6297289	Identifier	is_compatible_types		6297200	0					
ANR	6297290	ArgumentList	type1		6297200	1					
ANR	6297291	Argument	type1		6297200	0					
ANR	6297292	Identifier	type1		6297200	0					
ANR	6297293	Argument	type2		6297200	1					
ANR	6297294	Identifier	type2		6297200	0					
ANR	6297295	ElseStatement	else		6297200	0					
ANR	6297296	IfStatement	if ( bt1 == VT_STRUCT || bt1 == VT_UNION )		6297200	0					
ANR	6297297	Condition	bt1 == VT_STRUCT || bt1 == VT_UNION	656:12:15795:15829	6297200	0	True				
ANR	6297298	OrExpression	bt1 == VT_STRUCT || bt1 == VT_UNION		6297200	0		||			
ANR	6297299	EqualityExpression	bt1 == VT_STRUCT		6297200	0		==			
ANR	6297300	Identifier	bt1		6297200	0					
ANR	6297301	Identifier	VT_STRUCT		6297200	1					
ANR	6297302	EqualityExpression	bt1 == VT_UNION		6297200	1		==			
ANR	6297303	Identifier	bt1		6297200	0					
ANR	6297304	Identifier	VT_UNION		6297200	1					
ANR	6297305	CompoundStatement		19:49:499:499	6297200	1					
ANR	6297306	ReturnStatement	return type1 -> ref == type2 -> ref ;	657:2:15836:15867	6297200	0	True				
ANR	6297307	EqualityExpression	type1 -> ref == type2 -> ref		6297200	0		==			
ANR	6297308	PtrMemberAccess	type1 -> ref		6297200	0					
ANR	6297309	Identifier	type1		6297200	0					
ANR	6297310	Identifier	ref		6297200	1					
ANR	6297311	PtrMemberAccess	type2 -> ref		6297200	1					
ANR	6297312	Identifier	type2		6297200	0					
ANR	6297313	Identifier	ref		6297200	1					
ANR	6297314	ElseStatement	else		6297200	0					
ANR	6297315	IfStatement	if ( bt1 == VT_FUNC )		6297200	0					
ANR	6297316	Condition	bt1 == VT_FUNC	658:12:15881:15894	6297200	0	True				
ANR	6297317	EqualityExpression	bt1 == VT_FUNC		6297200	0		==			
ANR	6297318	Identifier	bt1		6297200	0					
ANR	6297319	Identifier	VT_FUNC		6297200	1					
ANR	6297320	CompoundStatement		21:28:564:564	6297200	1					
ANR	6297321	ReturnStatement	"return is_compatible_func ( type1 , type2 ) ;"	659:2:15901:15941	6297200	0	True				
ANR	6297322	CallExpression	"is_compatible_func ( type1 , type2 )"		6297200	0					
ANR	6297323	Callee	is_compatible_func		6297200	0					
ANR	6297324	Identifier	is_compatible_func		6297200	0					
ANR	6297325	ArgumentList	type1		6297200	1					
ANR	6297326	Argument	type1		6297200	0					
ANR	6297327	Identifier	type1		6297200	0					
ANR	6297328	Argument	type2		6297200	1					
ANR	6297329	Identifier	type2		6297200	0					
ANR	6297330	ElseStatement	else		6297200	0					
ANR	6297331	CompoundStatement		23:8:618:618	6297200	0					
ANR	6297332	ReturnStatement	return 1 ;	661:2:15955:15963	6297200	0	True				
ANR	6297333	PrimaryExpression	1		6297200	0					
ANR	6297334	ReturnType	static int		6297200	1					
ANR	6297335	Identifier	compare_types		6297200	2					
ANR	6297336	ParameterList	"CType * type1 , CType * type2 , int unqualified"		6297200	3					
ANR	6297337	Parameter	CType * type1	638:25:15287:15298	6297200	0	True				
ANR	6297338	ParameterType	CType *		6297200	0					
ANR	6297339	Identifier	type1		6297200	1					
ANR	6297340	Parameter	CType * type2	638:39:15301:15312	6297200	1	True				
ANR	6297341	ParameterType	CType *		6297200	0					
ANR	6297342	Identifier	type2		6297200	1					
ANR	6297343	Parameter	int unqualified	638:53:15315:15329	6297200	2	True				
ANR	6297344	ParameterType	int		6297200	0					
ANR	6297345	Identifier	unqualified		6297200	1					
ANR	6297346	CFGEntryNode	ENTRY		6297200		True				
ANR	6297347	CFGExitNode	EXIT		6297200		True				
ANR	6297348	Symbol	type1 -> t		6297200						
ANR	6297349	Symbol	VT_PTR		6297200						
ANR	6297350	Symbol	type2		6297200						
ANR	6297351	Symbol	VT_CONSTANT		6297200						
ANR	6297352	Symbol	VT_TYPE		6297200						
ANR	6297353	Symbol	type1		6297200						
ANR	6297354	Symbol	VT_BTYPE		6297200						
ANR	6297355	Symbol	type2 -> t		6297200						
ANR	6297356	Symbol	VT_STRUCT		6297200						
ANR	6297357	Symbol	VT_FUNC		6297200						
ANR	6297358	Symbol	type1 -> ref		6297200						
ANR	6297359	Symbol	unqualified		6297200						
ANR	6297360	Symbol	VT_UNION		6297200						
ANR	6297361	Symbol	VT_VOLATILE		6297200						
ANR	6297362	Symbol	type2 -> ref		6297200						
ANR	6297363	Symbol	is_compatible_types		6297200						
ANR	6297364	Symbol	pointed_type		6297200						
ANR	6297365	Symbol	t1		6297200						
ANR	6297366	Symbol	* type1		6297200						
ANR	6297367	Symbol	t2		6297200						
ANR	6297368	Symbol	* type2		6297200						
ANR	6297369	Symbol	bt1		6297200						
ANR	6297370	Symbol	is_compatible_func		6297200						
ANR	6297371	Function	is_compatible_types	668:0:16056:16158							
ANR	6297372	FunctionDef	"is_compatible_types (CType * type1 , CType * type2)"		6297371	0					
ANR	6297373	CompoundStatement		668:59:16115:16158	6297371	0					
ANR	6297374	ReturnStatement	"return compare_types ( type1 , type2 , 0 ) ;"	669:1:16118:16156	6297371	0	True				
ANR	6297375	CallExpression	"compare_types ( type1 , type2 , 0 )"		6297371	0					
ANR	6297376	Callee	compare_types		6297371	0					
ANR	6297377	Identifier	compare_types		6297371	0					
ANR	6297378	ArgumentList	type1		6297371	1					
ANR	6297379	Argument	type1		6297371	0					
ANR	6297380	Identifier	type1		6297371	0					
ANR	6297381	Argument	type2		6297371	1					
ANR	6297382	Identifier	type2		6297371	0					
ANR	6297383	Argument	0		6297371	2					
ANR	6297384	PrimaryExpression	0		6297371	0					
ANR	6297385	ReturnType	static int		6297371	1					
ANR	6297386	Identifier	is_compatible_types		6297371	2					
ANR	6297387	ParameterList	"CType * type1 , CType * type2"		6297371	3					
ANR	6297388	Parameter	CType * type1	668:31:16087:16098	6297371	0	True				
ANR	6297389	ParameterType	CType *		6297371	0					
ANR	6297390	Identifier	type1		6297371	1					
ANR	6297391	Parameter	CType * type2	668:45:16101:16112	6297371	1	True				
ANR	6297392	ParameterType	CType *		6297371	0					
ANR	6297393	Identifier	type2		6297371	1					
ANR	6297394	CFGEntryNode	ENTRY		6297371		True				
ANR	6297395	CFGExitNode	EXIT		6297371		True				
ANR	6297396	Symbol	type2		6297371						
ANR	6297397	Symbol	compare_types		6297371						
ANR	6297398	Symbol	type1		6297371						
ANR	6297399	Function	is_compatible_parameter_types	674:0:16234:16346							
ANR	6297400	FunctionDef	"is_compatible_parameter_types (CType * type1 , CType * type2)"		6297399	0					
ANR	6297401	CompoundStatement		674:69:16303:16346	6297399	0					
ANR	6297402	ReturnStatement	"return compare_types ( type1 , type2 , 1 ) ;"	675:1:16306:16344	6297399	0	True				
ANR	6297403	CallExpression	"compare_types ( type1 , type2 , 1 )"		6297399	0					
ANR	6297404	Callee	compare_types		6297399	0					
ANR	6297405	Identifier	compare_types		6297399	0					
ANR	6297406	ArgumentList	type1		6297399	1					
ANR	6297407	Argument	type1		6297399	0					
ANR	6297408	Identifier	type1		6297399	0					
ANR	6297409	Argument	type2		6297399	1					
ANR	6297410	Identifier	type2		6297399	0					
ANR	6297411	Argument	1		6297399	2					
ANR	6297412	PrimaryExpression	1		6297399	0					
ANR	6297413	ReturnType	static int		6297399	1					
ANR	6297414	Identifier	is_compatible_parameter_types		6297399	2					
ANR	6297415	ParameterList	"CType * type1 , CType * type2"		6297399	3					
ANR	6297416	Parameter	CType * type1	674:41:16275:16286	6297399	0	True				
ANR	6297417	ParameterType	CType *		6297399	0					
ANR	6297418	Identifier	type1		6297399	1					
ANR	6297419	Parameter	CType * type2	674:55:16289:16300	6297399	1	True				
ANR	6297420	ParameterType	CType *		6297399	0					
ANR	6297421	Identifier	type2		6297399	1					
ANR	6297422	CFGEntryNode	ENTRY		6297399		True				
ANR	6297423	CFGExitNode	EXIT		6297399		True				
ANR	6297424	Symbol	type2		6297399						
ANR	6297425	Symbol	compare_types		6297399						
ANR	6297426	Symbol	type1		6297399						
ANR	6297427	Function	type_to_str	682:0:16503:19038							
ANR	6297428	FunctionDef	"type_to_str (char * buf , int buf_size , CType * type , const char * varstr)"		6297427	0					
ANR	6297429	CompoundStatement		682:82:16585:19038	6297427	0					
ANR	6297430	IdentifierDeclStatement	"int bt , v , t ;"	683:1:16588:16600	6297427	0	True				
ANR	6297431	IdentifierDecl	bt		6297427	0					
ANR	6297432	IdentifierDeclType	int		6297427	0					
ANR	6297433	Identifier	bt		6297427	1					
ANR	6297434	IdentifierDecl	v		6297427	1					
ANR	6297435	IdentifierDeclType	int		6297427	0					
ANR	6297436	Identifier	v		6297427	1					
ANR	6297437	IdentifierDecl	t		6297427	2					
ANR	6297438	IdentifierDeclType	int		6297427	0					
ANR	6297439	Identifier	t		6297427	1					
ANR	6297440	IdentifierDeclStatement	"Sym * s , * sa ;"	684:1:16603:16614	6297427	1	True				
ANR	6297441	IdentifierDecl	* s		6297427	0					
ANR	6297442	IdentifierDeclType	Sym *		6297427	0					
ANR	6297443	Identifier	s		6297427	1					
ANR	6297444	IdentifierDecl	* sa		6297427	1					
ANR	6297445	IdentifierDeclType	Sym *		6297427	0					
ANR	6297446	Identifier	sa		6297427	1					
ANR	6297447	IdentifierDeclStatement	char buf1 [ 256 ] ;	685:1:16617:16631	6297427	2	True				
ANR	6297448	IdentifierDecl	buf1 [ 256 ]		6297427	0					
ANR	6297449	IdentifierDeclType	char [ 256 ]		6297427	0					
ANR	6297450	Identifier	buf1		6297427	1					
ANR	6297451	PrimaryExpression	256		6297427	2					
ANR	6297452	IdentifierDeclStatement	const char * tstr ;	686:1:16634:16650	6297427	3	True				
ANR	6297453	IdentifierDecl	* tstr		6297427	0					
ANR	6297454	IdentifierDeclType	const char *		6297427	0					
ANR	6297455	Identifier	tstr		6297427	1					
ANR	6297456	ExpressionStatement	t = type -> t & VT_TYPE	687:1:16653:16674	6297427	4	True				
ANR	6297457	AssignmentExpression	t = type -> t & VT_TYPE		6297427	0		=			
ANR	6297458	Identifier	t		6297427	0					
ANR	6297459	BitAndExpression	type -> t & VT_TYPE		6297427	1		&			
ANR	6297460	PtrMemberAccess	type -> t		6297427	0					
ANR	6297461	Identifier	type		6297427	0					
ANR	6297462	Identifier	t		6297427	1					
ANR	6297463	Identifier	VT_TYPE		6297427	1					
ANR	6297464	ExpressionStatement	bt = t & VT_BTYPE	688:1:16677:16694	6297427	5	True				
ANR	6297465	AssignmentExpression	bt = t & VT_BTYPE		6297427	0		=			
ANR	6297466	Identifier	bt		6297427	0					
ANR	6297467	BitAndExpression	t & VT_BTYPE		6297427	1		&			
ANR	6297468	Identifier	t		6297427	0					
ANR	6297469	Identifier	VT_BTYPE		6297427	1					
ANR	6297470	ExpressionStatement	buf [ 0 ] = '\\0'	689:1:16697:16710	6297427	6	True				
ANR	6297471	AssignmentExpression	buf [ 0 ] = '\\0'		6297427	0		=			
ANR	6297472	ArrayIndexing	buf [ 0 ]		6297427	0					
ANR	6297473	Identifier	buf		6297427	0					
ANR	6297474	PrimaryExpression	0		6297427	1					
ANR	6297475	PrimaryExpression	'\\0'		6297427	1					
ANR	6297476	IfStatement	if ( t & VT_CONSTANT )		6297427	7					
ANR	6297477	Condition	t & VT_CONSTANT	690:5:16717:16731	6297427	0	True				
ANR	6297478	BitAndExpression	t & VT_CONSTANT		6297427	0		&			
ANR	6297479	Identifier	t		6297427	0					
ANR	6297480	Identifier	VT_CONSTANT		6297427	1					
ANR	6297481	CompoundStatement		9:22:148:148	6297427	1					
ANR	6297482	ExpressionStatement	"pstrcat ( buf , buf_size , ""const "" )"	691:2:16738:16771	6297427	0	True				
ANR	6297483	CallExpression	"pstrcat ( buf , buf_size , ""const "" )"		6297427	0					
ANR	6297484	Callee	pstrcat		6297427	0					
ANR	6297485	Identifier	pstrcat		6297427	0					
ANR	6297486	ArgumentList	buf		6297427	1					
ANR	6297487	Argument	buf		6297427	0					
ANR	6297488	Identifier	buf		6297427	0					
ANR	6297489	Argument	buf_size		6297427	1					
ANR	6297490	Identifier	buf_size		6297427	0					
ANR	6297491	Argument	"""const """		6297427	2					
ANR	6297492	PrimaryExpression	"""const """		6297427	0					
ANR	6297493	IfStatement	if ( t & VT_VOLATILE )		6297427	8					
ANR	6297494	Condition	t & VT_VOLATILE	693:5:16781:16795	6297427	0	True				
ANR	6297495	BitAndExpression	t & VT_VOLATILE		6297427	0		&			
ANR	6297496	Identifier	t		6297427	0					
ANR	6297497	Identifier	VT_VOLATILE		6297427	1					
ANR	6297498	CompoundStatement		12:22:212:212	6297427	1					
ANR	6297499	ExpressionStatement	"pstrcat ( buf , buf_size , ""volatile "" )"	694:2:16802:16838	6297427	0	True				
ANR	6297500	CallExpression	"pstrcat ( buf , buf_size , ""volatile "" )"		6297427	0					
ANR	6297501	Callee	pstrcat		6297427	0					
ANR	6297502	Identifier	pstrcat		6297427	0					
ANR	6297503	ArgumentList	buf		6297427	1					
ANR	6297504	Argument	buf		6297427	0					
ANR	6297505	Identifier	buf		6297427	0					
ANR	6297506	Argument	buf_size		6297427	1					
ANR	6297507	Identifier	buf_size		6297427	0					
ANR	6297508	Argument	"""volatile """		6297427	2					
ANR	6297509	PrimaryExpression	"""volatile """		6297427	0					
ANR	6297510	SwitchStatement	switch ( bt )		6297427	9					
ANR	6297511	Condition	bt	696:9:16852:16853	6297427	0	True				
ANR	6297512	Identifier	bt		6297427	0					
ANR	6297513	CompoundStatement		15:13:270:270	6297427	1					
ANR	6297514	Label	case VT_VOID :	697:1:16859:16871	6297427	0	True				
ANR	6297515	Identifier	VT_VOID		6297427	0					
ANR	6297516	ExpressionStatement	"tstr = ""void"""	698:2:16875:16888	6297427	1	True				
ANR	6297517	AssignmentExpression	"tstr = ""void"""		6297427	0		=			
ANR	6297518	Identifier	tstr		6297427	0					
ANR	6297519	PrimaryExpression	"""void"""		6297427	1					
ANR	6297520	GotoStatement	goto add_tstr ;	699:2:16892:16905	6297427	2	True				
ANR	6297521	Identifier	add_tstr		6297427	0					
ANR	6297522	Label	case VT_BOOL :	700:1:16908:16920	6297427	3	True				
ANR	6297523	Identifier	VT_BOOL		6297427	0					
ANR	6297524	ExpressionStatement	"tstr = ""bool"""	701:2:16924:16937	6297427	4	True				
ANR	6297525	AssignmentExpression	"tstr = ""bool"""		6297427	0		=			
ANR	6297526	Identifier	tstr		6297427	0					
ANR	6297527	PrimaryExpression	"""bool"""		6297427	1					
ANR	6297528	GotoStatement	goto add_tstr ;	702:2:16941:16954	6297427	5	True				
ANR	6297529	Identifier	add_tstr		6297427	0					
ANR	6297530	Label	case VT_INT8 :	703:1:16957:16969	6297427	6	True				
ANR	6297531	Identifier	VT_INT8		6297427	0					
ANR	6297532	IfStatement	if ( t & VT_UNSIGNED )		6297427	7					
ANR	6297533	Condition	t & VT_UNSIGNED	704:6:16977:16991	6297427	0	True				
ANR	6297534	BitAndExpression	t & VT_UNSIGNED		6297427	0		&			
ANR	6297535	Identifier	t		6297427	0					
ANR	6297536	Identifier	VT_UNSIGNED		6297427	1					
ANR	6297537	CompoundStatement		23:23:408:408	6297427	1					
ANR	6297538	ExpressionStatement	"tstr = ""uint8_t"""	705:3:16999:17015	6297427	0	True				
ANR	6297539	AssignmentExpression	"tstr = ""uint8_t"""		6297427	0		=			
ANR	6297540	Identifier	tstr		6297427	0					
ANR	6297541	PrimaryExpression	"""uint8_t"""		6297427	1					
ANR	6297542	ElseStatement	else		6297427	0					
ANR	6297543	CompoundStatement		25:9:440:440	6297427	0					
ANR	6297544	IfStatement	if ( t & VT_CHAR )		6297427	0					
ANR	6297545	Condition	t & VT_CHAR	707:7:17035:17045	6297427	0	True				
ANR	6297546	BitAndExpression	t & VT_CHAR		6297427	0		&			
ANR	6297547	Identifier	t		6297427	0					
ANR	6297548	Identifier	VT_CHAR		6297427	1					
ANR	6297549	CompoundStatement		26:20:462:462	6297427	1					
ANR	6297550	ExpressionStatement	"tstr = ""char"""	708:4:17054:17067	6297427	0	True				
ANR	6297551	AssignmentExpression	"tstr = ""char"""		6297427	0		=			
ANR	6297552	Identifier	tstr		6297427	0					
ANR	6297553	PrimaryExpression	"""char"""		6297427	1					
ANR	6297554	ElseStatement	else		6297427	0					
ANR	6297555	CompoundStatement		28:10:493:493	6297427	0					
ANR	6297556	ExpressionStatement	"tstr = ""int8_t"""	710:4:17085:17100	6297427	0	True				
ANR	6297557	AssignmentExpression	"tstr = ""int8_t"""		6297427	0		=			
ANR	6297558	Identifier	tstr		6297427	0					
ANR	6297559	PrimaryExpression	"""int8_t"""		6297427	1					
ANR	6297560	GotoStatement	goto add_tstr ;	713:2:17113:17126	6297427	8	True				
ANR	6297561	Identifier	add_tstr		6297427	0					
ANR	6297562	Label	case VT_INT16 :	714:1:17129:17142	6297427	9	True				
ANR	6297563	Identifier	VT_INT16		6297427	0					
ANR	6297564	IfStatement	if ( t & VT_UNSIGNED )		6297427	10					
ANR	6297565	Condition	t & VT_UNSIGNED	715:6:17150:17164	6297427	0	True				
ANR	6297566	BitAndExpression	t & VT_UNSIGNED		6297427	0		&			
ANR	6297567	Identifier	t		6297427	0					
ANR	6297568	Identifier	VT_UNSIGNED		6297427	1					
ANR	6297569	CompoundStatement		34:23:581:581	6297427	1					
ANR	6297570	ExpressionStatement	"tstr = ""uint16_t"""	716:3:17172:17189	6297427	0	True				
ANR	6297571	AssignmentExpression	"tstr = ""uint16_t"""		6297427	0		=			
ANR	6297572	Identifier	tstr		6297427	0					
ANR	6297573	PrimaryExpression	"""uint16_t"""		6297427	1					
ANR	6297574	ElseStatement	else		6297427	0					
ANR	6297575	CompoundStatement		36:9:614:614	6297427	0					
ANR	6297576	ExpressionStatement	"tstr = ""int16_t"""	718:3:17205:17221	6297427	0	True				
ANR	6297577	AssignmentExpression	"tstr = ""int16_t"""		6297427	0		=			
ANR	6297578	Identifier	tstr		6297427	0					
ANR	6297579	PrimaryExpression	"""int16_t"""		6297427	1					
ANR	6297580	GotoStatement	goto add_tstr ;	720:2:17229:17242	6297427	11	True				
ANR	6297581	Identifier	add_tstr		6297427	0					
ANR	6297582	Label	case VT_INT32 :	721:1:17245:17258	6297427	12	True				
ANR	6297583	Identifier	VT_INT32		6297427	0					
ANR	6297584	IfStatement	if ( t & VT_UNSIGNED )		6297427	13					
ANR	6297585	Condition	t & VT_UNSIGNED	722:6:17266:17280	6297427	0	True				
ANR	6297586	BitAndExpression	t & VT_UNSIGNED		6297427	0		&			
ANR	6297587	Identifier	t		6297427	0					
ANR	6297588	Identifier	VT_UNSIGNED		6297427	1					
ANR	6297589	CompoundStatement		41:23:697:697	6297427	1					
ANR	6297590	ExpressionStatement	"tstr = ""uint32_t"""	723:3:17288:17305	6297427	0	True				
ANR	6297591	AssignmentExpression	"tstr = ""uint32_t"""		6297427	0		=			
ANR	6297592	Identifier	tstr		6297427	0					
ANR	6297593	PrimaryExpression	"""uint32_t"""		6297427	1					
ANR	6297594	ElseStatement	else		6297427	0					
ANR	6297595	CompoundStatement		43:9:730:730	6297427	0					
ANR	6297596	ExpressionStatement	"tstr = ""int32_t"""	725:3:17321:17337	6297427	0	True				
ANR	6297597	AssignmentExpression	"tstr = ""int32_t"""		6297427	0		=			
ANR	6297598	Identifier	tstr		6297427	0					
ANR	6297599	PrimaryExpression	"""int32_t"""		6297427	1					
ANR	6297600	GotoStatement	goto add_tstr ;	727:2:17345:17358	6297427	14	True				
ANR	6297601	Identifier	add_tstr		6297427	0					
ANR	6297602	Label	case VT_LONG :	728:1:17361:17373	6297427	15	True				
ANR	6297603	Identifier	VT_LONG		6297427	0					
ANR	6297604	ExpressionStatement	"tstr = ""long"""	729:2:17377:17390	6297427	16	True				
ANR	6297605	AssignmentExpression	"tstr = ""long"""		6297427	0		=			
ANR	6297606	Identifier	tstr		6297427	0					
ANR	6297607	PrimaryExpression	"""long"""		6297427	1					
ANR	6297608	GotoStatement	goto add_tstr ;	730:2:17394:17407	6297427	17	True				
ANR	6297609	Identifier	add_tstr		6297427	0					
ANR	6297610	Label	case VT_INT64 :	731:1:17410:17423	6297427	18	True				
ANR	6297611	Identifier	VT_INT64		6297427	0					
ANR	6297612	IfStatement	if ( t & VT_UNSIGNED )		6297427	19					
ANR	6297613	Condition	t & VT_UNSIGNED	732:6:17431:17445	6297427	0	True				
ANR	6297614	BitAndExpression	t & VT_UNSIGNED		6297427	0		&			
ANR	6297615	Identifier	t		6297427	0					
ANR	6297616	Identifier	VT_UNSIGNED		6297427	1					
ANR	6297617	CompoundStatement		51:23:862:862	6297427	1					
ANR	6297618	ExpressionStatement	"tstr = ""uint64_t"""	733:3:17453:17470	6297427	0	True				
ANR	6297619	AssignmentExpression	"tstr = ""uint64_t"""		6297427	0		=			
ANR	6297620	Identifier	tstr		6297427	0					
ANR	6297621	PrimaryExpression	"""uint64_t"""		6297427	1					
ANR	6297622	ElseStatement	else		6297427	0					
ANR	6297623	CompoundStatement		53:9:895:895	6297427	0					
ANR	6297624	ExpressionStatement	"tstr = ""int64_t"""	735:3:17486:17502	6297427	0	True				
ANR	6297625	AssignmentExpression	"tstr = ""int64_t"""		6297427	0		=			
ANR	6297626	Identifier	tstr		6297427	0					
ANR	6297627	PrimaryExpression	"""int64_t"""		6297427	1					
ANR	6297628	GotoStatement	goto add_tstr ;	737:2:17510:17523	6297427	20	True				
ANR	6297629	Identifier	add_tstr		6297427	0					
ANR	6297630	Label	case VT_FLOAT :	738:1:17526:17539	6297427	21	True				
ANR	6297631	Identifier	VT_FLOAT		6297427	0					
ANR	6297632	ExpressionStatement	"tstr = ""float"""	739:2:17543:17557	6297427	22	True				
ANR	6297633	AssignmentExpression	"tstr = ""float"""		6297427	0		=			
ANR	6297634	Identifier	tstr		6297427	0					
ANR	6297635	PrimaryExpression	"""float"""		6297427	1					
ANR	6297636	GotoStatement	goto add_tstr ;	740:2:17561:17574	6297427	23	True				
ANR	6297637	Identifier	add_tstr		6297427	0					
ANR	6297638	Label	case VT_DOUBLE :	741:1:17577:17591	6297427	24	True				
ANR	6297639	Identifier	VT_DOUBLE		6297427	0					
ANR	6297640	ExpressionStatement	"tstr = ""double"""	742:2:17595:17610	6297427	25	True				
ANR	6297641	AssignmentExpression	"tstr = ""double"""		6297427	0		=			
ANR	6297642	Identifier	tstr		6297427	0					
ANR	6297643	PrimaryExpression	"""double"""		6297427	1					
ANR	6297644	GotoStatement	goto add_tstr ;	743:2:17614:17627	6297427	26	True				
ANR	6297645	Identifier	add_tstr		6297427	0					
ANR	6297646	Label	case VT_LDOUBLE :	744:1:17630:17645	6297427	27	True				
ANR	6297647	Identifier	VT_LDOUBLE		6297427	0					
ANR	6297648	ExpressionStatement	"tstr = ""long double"""	745:2:17649:17669	6297427	28	True				
ANR	6297649	AssignmentExpression	"tstr = ""long double"""		6297427	0		=			
ANR	6297650	Identifier	tstr		6297427	0					
ANR	6297651	PrimaryExpression	"""long double"""		6297427	1					
ANR	6297652	Label	add_tstr :	746:0:17671:17679	6297427	29	True				
ANR	6297653	Identifier	add_tstr		6297427	0					
ANR	6297654	ExpressionStatement	"pstrcat ( buf , buf_size , tstr )"	747:2:17683:17712	6297427	30	True				
ANR	6297655	CallExpression	"pstrcat ( buf , buf_size , tstr )"		6297427	0					
ANR	6297656	Callee	pstrcat		6297427	0					
ANR	6297657	Identifier	pstrcat		6297427	0					
ANR	6297658	ArgumentList	buf		6297427	1					
ANR	6297659	Argument	buf		6297427	0					
ANR	6297660	Identifier	buf		6297427	0					
ANR	6297661	Argument	buf_size		6297427	1					
ANR	6297662	Identifier	buf_size		6297427	0					
ANR	6297663	Argument	tstr		6297427	2					
ANR	6297664	Identifier	tstr		6297427	0					
ANR	6297665	IfStatement	if ( ( t & VT_UNSIGNED ) && ( bt != VT_INT8 ) && ( bt != VT_INT16 ) && ( bt != VT_INT32 ) && ( bt != VT_INT64 ) )		6297427	31					
ANR	6297666	Condition	( t & VT_UNSIGNED ) && ( bt != VT_INT8 ) && ( bt != VT_INT16 ) && ( bt != VT_INT32 ) && ( bt != VT_INT64 )	748:6:17720:17827	6297427	0	True				
ANR	6297667	AndExpression	( t & VT_UNSIGNED ) && ( bt != VT_INT8 ) && ( bt != VT_INT16 ) && ( bt != VT_INT32 ) && ( bt != VT_INT64 )		6297427	0		&&			
ANR	6297668	BitAndExpression	t & VT_UNSIGNED		6297427	0		&			
ANR	6297669	Identifier	t		6297427	0					
ANR	6297670	Identifier	VT_UNSIGNED		6297427	1					
ANR	6297671	AndExpression	( bt != VT_INT8 ) && ( bt != VT_INT16 ) && ( bt != VT_INT32 ) && ( bt != VT_INT64 )		6297427	1		&&			
ANR	6297672	EqualityExpression	bt != VT_INT8		6297427	0		!=			
ANR	6297673	Identifier	bt		6297427	0					
ANR	6297674	Identifier	VT_INT8		6297427	1					
ANR	6297675	AndExpression	( bt != VT_INT16 ) && ( bt != VT_INT32 ) && ( bt != VT_INT64 )		6297427	1		&&			
ANR	6297676	EqualityExpression	bt != VT_INT16		6297427	0		!=			
ANR	6297677	Identifier	bt		6297427	0					
ANR	6297678	Identifier	VT_INT16		6297427	1					
ANR	6297679	AndExpression	( bt != VT_INT32 ) && ( bt != VT_INT64 )		6297427	1		&&			
ANR	6297680	EqualityExpression	bt != VT_INT32		6297427	0		!=			
ANR	6297681	Identifier	bt		6297427	0					
ANR	6297682	Identifier	VT_INT32		6297427	1					
ANR	6297683	EqualityExpression	bt != VT_INT64		6297427	1		!=			
ANR	6297684	Identifier	bt		6297427	0					
ANR	6297685	Identifier	VT_INT64		6297427	1					
ANR	6297686	CompoundStatement		69:24:1244:1244	6297427	1					
ANR	6297687	ExpressionStatement	"pstrcat ( buf , buf_size , ""unsigned "" )"	751:3:17835:17871	6297427	0	True				
ANR	6297688	CallExpression	"pstrcat ( buf , buf_size , ""unsigned "" )"		6297427	0					
ANR	6297689	Callee	pstrcat		6297427	0					
ANR	6297690	Identifier	pstrcat		6297427	0					
ANR	6297691	ArgumentList	buf		6297427	1					
ANR	6297692	Argument	buf		6297427	0					
ANR	6297693	Identifier	buf		6297427	0					
ANR	6297694	Argument	buf_size		6297427	1					
ANR	6297695	Identifier	buf_size		6297427	0					
ANR	6297696	Argument	"""unsigned """		6297427	2					
ANR	6297697	PrimaryExpression	"""unsigned """		6297427	0					
ANR	6297698	BreakStatement	break ;	753:2:17879:17884	6297427	32	True				
ANR	6297699	Label	case VT_ENUM :	754:1:17887:17899	6297427	33	True				
ANR	6297700	Identifier	VT_ENUM		6297427	0					
ANR	6297701	Label	case VT_STRUCT :	755:1:17902:17916	6297427	34	True				
ANR	6297702	Identifier	VT_STRUCT		6297427	0					
ANR	6297703	Label	case VT_UNION :	756:1:17919:17932	6297427	35	True				
ANR	6297704	Identifier	VT_UNION		6297427	0					
ANR	6297705	IfStatement	if ( bt == VT_STRUCT )		6297427	36					
ANR	6297706	Condition	bt == VT_STRUCT	757:6:17940:17954	6297427	0	True				
ANR	6297707	EqualityExpression	bt == VT_STRUCT		6297427	0		==			
ANR	6297708	Identifier	bt		6297427	0					
ANR	6297709	Identifier	VT_STRUCT		6297427	1					
ANR	6297710	CompoundStatement		76:23:1371:1371	6297427	1					
ANR	6297711	ExpressionStatement	"tstr = ""struct """	758:3:17962:17978	6297427	0	True				
ANR	6297712	AssignmentExpression	"tstr = ""struct """		6297427	0		=			
ANR	6297713	Identifier	tstr		6297427	0					
ANR	6297714	PrimaryExpression	"""struct """		6297427	1					
ANR	6297715	ElseStatement	else		6297427	0					
ANR	6297716	IfStatement	if ( bt == VT_UNION )		6297427	0					
ANR	6297717	Condition	bt == VT_UNION	759:13:17993:18006	6297427	0	True				
ANR	6297718	EqualityExpression	bt == VT_UNION		6297427	0		==			
ANR	6297719	Identifier	bt		6297427	0					
ANR	6297720	Identifier	VT_UNION		6297427	1					
ANR	6297721	CompoundStatement		78:29:1423:1423	6297427	1					
ANR	6297722	ExpressionStatement	"tstr = ""union """	760:3:18014:18029	6297427	0	True				
ANR	6297723	AssignmentExpression	"tstr = ""union """		6297427	0		=			
ANR	6297724	Identifier	tstr		6297427	0					
ANR	6297725	PrimaryExpression	"""union """		6297427	1					
ANR	6297726	ElseStatement	else		6297427	0					
ANR	6297727	CompoundStatement		80:9:1454:1454	6297427	0					
ANR	6297728	ExpressionStatement	"tstr = ""enum """	762:3:18045:18059	6297427	0	True				
ANR	6297729	AssignmentExpression	"tstr = ""enum """		6297427	0		=			
ANR	6297730	Identifier	tstr		6297427	0					
ANR	6297731	PrimaryExpression	"""enum """		6297427	1					
ANR	6297732	ExpressionStatement	"pstrcat ( buf , buf_size , tstr )"	764:2:18067:18096	6297427	37	True				
ANR	6297733	CallExpression	"pstrcat ( buf , buf_size , tstr )"		6297427	0					
ANR	6297734	Callee	pstrcat		6297427	0					
ANR	6297735	Identifier	pstrcat		6297427	0					
ANR	6297736	ArgumentList	buf		6297427	1					
ANR	6297737	Argument	buf		6297427	0					
ANR	6297738	Identifier	buf		6297427	0					
ANR	6297739	Argument	buf_size		6297427	1					
ANR	6297740	Identifier	buf_size		6297427	0					
ANR	6297741	Argument	tstr		6297427	2					
ANR	6297742	Identifier	tstr		6297427	0					
ANR	6297743	ExpressionStatement	v = type -> ref -> v & ~SYM_STRUCT	765:2:18100:18130	6297427	38	True				
ANR	6297744	AssignmentExpression	v = type -> ref -> v & ~SYM_STRUCT		6297427	0		=			
ANR	6297745	Identifier	v		6297427	0					
ANR	6297746	BitAndExpression	type -> ref -> v & ~SYM_STRUCT		6297427	1		&			
ANR	6297747	PtrMemberAccess	type -> ref -> v		6297427	0					
ANR	6297748	PtrMemberAccess	type -> ref		6297427	0					
ANR	6297749	Identifier	type		6297427	0					
ANR	6297750	Identifier	ref		6297427	1					
ANR	6297751	Identifier	v		6297427	1					
ANR	6297752	Identifier	~SYM_STRUCT		6297427	1					
ANR	6297753	IfStatement	if ( v >= SYM_FIRST_ANOM )		6297427	39					
ANR	6297754	Condition	v >= SYM_FIRST_ANOM	766:6:18138:18156	6297427	0	True				
ANR	6297755	RelationalExpression	v >= SYM_FIRST_ANOM		6297427	0		>=			
ANR	6297756	Identifier	v		6297427	0					
ANR	6297757	Identifier	SYM_FIRST_ANOM		6297427	1					
ANR	6297758	CompoundStatement		85:27:1573:1573	6297427	1					
ANR	6297759	ExpressionStatement	"strcat_printf ( buf , buf_size , ""%u"" , v - SYM_FIRST_ANOM )"	767:3:18164:18219	6297427	0	True				
ANR	6297760	CallExpression	"strcat_printf ( buf , buf_size , ""%u"" , v - SYM_FIRST_ANOM )"		6297427	0					
ANR	6297761	Callee	strcat_printf		6297427	0					
ANR	6297762	Identifier	strcat_printf		6297427	0					
ANR	6297763	ArgumentList	buf		6297427	1					
ANR	6297764	Argument	buf		6297427	0					
ANR	6297765	Identifier	buf		6297427	0					
ANR	6297766	Argument	buf_size		6297427	1					
ANR	6297767	Identifier	buf_size		6297427	0					
ANR	6297768	Argument	"""%u"""		6297427	2					
ANR	6297769	PrimaryExpression	"""%u"""		6297427	0					
ANR	6297770	Argument	v - SYM_FIRST_ANOM		6297427	3					
ANR	6297771	AdditiveExpression	v - SYM_FIRST_ANOM		6297427	0		-			
ANR	6297772	Identifier	v		6297427	0					
ANR	6297773	Identifier	SYM_FIRST_ANOM		6297427	1					
ANR	6297774	ElseStatement	else		6297427	0					
ANR	6297775	CompoundStatement		87:9:1644:1644	6297427	0					
ANR	6297776	ExpressionStatement	"pstrcat ( buf , buf_size , get_tok_str ( v , NULL ) )"	769:3:18235:18281	6297427	0	True				
ANR	6297777	CallExpression	"pstrcat ( buf , buf_size , get_tok_str ( v , NULL ) )"		6297427	0					
ANR	6297778	Callee	pstrcat		6297427	0					
ANR	6297779	Identifier	pstrcat		6297427	0					
ANR	6297780	ArgumentList	buf		6297427	1					
ANR	6297781	Argument	buf		6297427	0					
ANR	6297782	Identifier	buf		6297427	0					
ANR	6297783	Argument	buf_size		6297427	1					
ANR	6297784	Identifier	buf_size		6297427	0					
ANR	6297785	Argument	"get_tok_str ( v , NULL )"		6297427	2					
ANR	6297786	CallExpression	"get_tok_str ( v , NULL )"		6297427	0					
ANR	6297787	Callee	get_tok_str		6297427	0					
ANR	6297788	Identifier	get_tok_str		6297427	0					
ANR	6297789	ArgumentList	v		6297427	1					
ANR	6297790	Argument	v		6297427	0					
ANR	6297791	Identifier	v		6297427	0					
ANR	6297792	Argument	NULL		6297427	1					
ANR	6297793	Identifier	NULL		6297427	0					
ANR	6297794	BreakStatement	break ;	771:2:18289:18294	6297427	40	True				
ANR	6297795	Label	case VT_FUNC :	772:1:18297:18309	6297427	41	True				
ANR	6297796	Identifier	VT_FUNC		6297427	0					
ANR	6297797	ExpressionStatement	s = type -> ref	773:2:18313:18326	6297427	42	True				
ANR	6297798	AssignmentExpression	s = type -> ref		6297427	0		=			
ANR	6297799	Identifier	s		6297427	0					
ANR	6297800	PtrMemberAccess	type -> ref		6297427	1					
ANR	6297801	Identifier	type		6297427	0					
ANR	6297802	Identifier	ref		6297427	1					
ANR	6297803	ExpressionStatement	"type_to_str ( buf , buf_size , & s -> type , varstr )"	774:2:18330:18375	6297427	43	True				
ANR	6297804	CallExpression	"type_to_str ( buf , buf_size , & s -> type , varstr )"		6297427	0					
ANR	6297805	Callee	type_to_str		6297427	0					
ANR	6297806	Identifier	type_to_str		6297427	0					
ANR	6297807	ArgumentList	buf		6297427	1					
ANR	6297808	Argument	buf		6297427	0					
ANR	6297809	Identifier	buf		6297427	0					
ANR	6297810	Argument	buf_size		6297427	1					
ANR	6297811	Identifier	buf_size		6297427	0					
ANR	6297812	Argument	& s -> type		6297427	2					
ANR	6297813	UnaryOperationExpression	& s -> type		6297427	0					
ANR	6297814	UnaryOperator	&		6297427	0					
ANR	6297815	PtrMemberAccess	s -> type		6297427	1					
ANR	6297816	Identifier	s		6297427	0					
ANR	6297817	Identifier	type		6297427	1					
ANR	6297818	Argument	varstr		6297427	3					
ANR	6297819	Identifier	varstr		6297427	0					
ANR	6297820	ExpressionStatement	"pstrcat ( buf , buf_size , ""("" )"	775:2:18379:18407	6297427	44	True				
ANR	6297821	CallExpression	"pstrcat ( buf , buf_size , ""("" )"		6297427	0					
ANR	6297822	Callee	pstrcat		6297427	0					
ANR	6297823	Identifier	pstrcat		6297427	0					
ANR	6297824	ArgumentList	buf		6297427	1					
ANR	6297825	Argument	buf		6297427	0					
ANR	6297826	Identifier	buf		6297427	0					
ANR	6297827	Argument	buf_size		6297427	1					
ANR	6297828	Identifier	buf_size		6297427	0					
ANR	6297829	Argument	"""("""		6297427	2					
ANR	6297830	PrimaryExpression	"""("""		6297427	0					
ANR	6297831	ExpressionStatement	sa = s -> next	776:2:18411:18423	6297427	45	True				
ANR	6297832	AssignmentExpression	sa = s -> next		6297427	0		=			
ANR	6297833	Identifier	sa		6297427	0					
ANR	6297834	PtrMemberAccess	s -> next		6297427	1					
ANR	6297835	Identifier	s		6297427	0					
ANR	6297836	Identifier	next		6297427	1					
ANR	6297837	WhileStatement	while ( sa != NULL )		6297427	46					
ANR	6297838	Condition	sa != NULL	777:9:18434:18443	6297427	0	True				
ANR	6297839	EqualityExpression	sa != NULL		6297427	0		!=			
ANR	6297840	Identifier	sa		6297427	0					
ANR	6297841	Identifier	NULL		6297427	1					
ANR	6297842	CompoundStatement		96:21:1860:1860	6297427	1					
ANR	6297843	ExpressionStatement	"type_to_str ( buf1 , sizeof ( buf1 ) , & sa -> type , NULL )"	778:3:18451:18500	6297427	0	True				
ANR	6297844	CallExpression	"type_to_str ( buf1 , sizeof ( buf1 ) , & sa -> type , NULL )"		6297427	0					
ANR	6297845	Callee	type_to_str		6297427	0					
ANR	6297846	Identifier	type_to_str		6297427	0					
ANR	6297847	ArgumentList	buf1		6297427	1					
ANR	6297848	Argument	buf1		6297427	0					
ANR	6297849	Identifier	buf1		6297427	0					
ANR	6297850	Argument	sizeof ( buf1 )		6297427	1					
ANR	6297851	SizeofExpression	sizeof ( buf1 )		6297427	0					
ANR	6297852	Sizeof	sizeof		6297427	0					
ANR	6297853	SizeofOperand	buf1		6297427	1					
ANR	6297854	Argument	& sa -> type		6297427	2					
ANR	6297855	UnaryOperationExpression	& sa -> type		6297427	0					
ANR	6297856	UnaryOperator	&		6297427	0					
ANR	6297857	PtrMemberAccess	sa -> type		6297427	1					
ANR	6297858	Identifier	sa		6297427	0					
ANR	6297859	Identifier	type		6297427	1					
ANR	6297860	Argument	NULL		6297427	3					
ANR	6297861	Identifier	NULL		6297427	0					
ANR	6297862	ExpressionStatement	"pstrcat ( buf , buf_size , buf1 )"	779:3:18505:18534	6297427	1	True				
ANR	6297863	CallExpression	"pstrcat ( buf , buf_size , buf1 )"		6297427	0					
ANR	6297864	Callee	pstrcat		6297427	0					
ANR	6297865	Identifier	pstrcat		6297427	0					
ANR	6297866	ArgumentList	buf		6297427	1					
ANR	6297867	Argument	buf		6297427	0					
ANR	6297868	Identifier	buf		6297427	0					
ANR	6297869	Argument	buf_size		6297427	1					
ANR	6297870	Identifier	buf_size		6297427	0					
ANR	6297871	Argument	buf1		6297427	2					
ANR	6297872	Identifier	buf1		6297427	0					
ANR	6297873	ExpressionStatement	sa = sa -> next	780:3:18539:18552	6297427	2	True				
ANR	6297874	AssignmentExpression	sa = sa -> next		6297427	0		=			
ANR	6297875	Identifier	sa		6297427	0					
ANR	6297876	PtrMemberAccess	sa -> next		6297427	1					
ANR	6297877	Identifier	sa		6297427	0					
ANR	6297878	Identifier	next		6297427	1					
ANR	6297879	IfStatement	if ( sa )		6297427	3					
ANR	6297880	Condition	sa	781:7:18561:18562	6297427	0	True				
ANR	6297881	Identifier	sa		6297427	0					
ANR	6297882	CompoundStatement		100:11:1979:1979	6297427	1					
ANR	6297883	ExpressionStatement	"pstrcat ( buf , buf_size , "", "" )"	782:4:18571:18600	6297427	0	True				
ANR	6297884	CallExpression	"pstrcat ( buf , buf_size , "", "" )"		6297427	0					
ANR	6297885	Callee	pstrcat		6297427	0					
ANR	6297886	Identifier	pstrcat		6297427	0					
ANR	6297887	ArgumentList	buf		6297427	1					
ANR	6297888	Argument	buf		6297427	0					
ANR	6297889	Identifier	buf		6297427	0					
ANR	6297890	Argument	buf_size		6297427	1					
ANR	6297891	Identifier	buf_size		6297427	0					
ANR	6297892	Argument	""", """		6297427	2					
ANR	6297893	PrimaryExpression	""", """		6297427	0					
ANR	6297894	ExpressionStatement	"pstrcat ( buf , buf_size , "")"" )"	785:2:18613:18641	6297427	47	True				
ANR	6297895	CallExpression	"pstrcat ( buf , buf_size , "")"" )"		6297427	0					
ANR	6297896	Callee	pstrcat		6297427	0					
ANR	6297897	Identifier	pstrcat		6297427	0					
ANR	6297898	ArgumentList	buf		6297427	1					
ANR	6297899	Argument	buf		6297427	0					
ANR	6297900	Identifier	buf		6297427	0					
ANR	6297901	Argument	buf_size		6297427	1					
ANR	6297902	Identifier	buf_size		6297427	0					
ANR	6297903	Argument	""")"""		6297427	2					
ANR	6297904	PrimaryExpression	""")"""		6297427	0					
ANR	6297905	GotoStatement	goto no_var ;	786:2:18645:18656	6297427	48	True				
ANR	6297906	Identifier	no_var		6297427	0					
ANR	6297907	Label	case VT_PTR :	787:1:18659:18670	6297427	49	True				
ANR	6297908	Identifier	VT_PTR		6297427	0					
ANR	6297909	ExpressionStatement	s = type -> ref	788:2:18674:18687	6297427	50	True				
ANR	6297910	AssignmentExpression	s = type -> ref		6297427	0		=			
ANR	6297911	Identifier	s		6297427	0					
ANR	6297912	PtrMemberAccess	type -> ref		6297427	1					
ANR	6297913	Identifier	type		6297427	0					
ANR	6297914	Identifier	ref		6297427	1					
ANR	6297915	IfStatement	if ( t & VT_ARRAY )		6297427	51					
ANR	6297916	Condition	t & VT_ARRAY	789:6:18695:18706	6297427	0	True				
ANR	6297917	BitAndExpression	t & VT_ARRAY		6297427	0		&			
ANR	6297918	Identifier	t		6297427	0					
ANR	6297919	Identifier	VT_ARRAY		6297427	1					
ANR	6297920	CompoundStatement		108:20:2123:2123	6297427	1					
ANR	6297921	ExpressionStatement	"type_to_str ( buf , buf_size , & s -> type , NULL )"	790:3:18714:18757	6297427	0	True				
ANR	6297922	CallExpression	"type_to_str ( buf , buf_size , & s -> type , NULL )"		6297427	0					
ANR	6297923	Callee	type_to_str		6297427	0					
ANR	6297924	Identifier	type_to_str		6297427	0					
ANR	6297925	ArgumentList	buf		6297427	1					
ANR	6297926	Argument	buf		6297427	0					
ANR	6297927	Identifier	buf		6297427	0					
ANR	6297928	Argument	buf_size		6297427	1					
ANR	6297929	Identifier	buf_size		6297427	0					
ANR	6297930	Argument	& s -> type		6297427	2					
ANR	6297931	UnaryOperationExpression	& s -> type		6297427	0					
ANR	6297932	UnaryOperator	&		6297427	0					
ANR	6297933	PtrMemberAccess	s -> type		6297427	1					
ANR	6297934	Identifier	s		6297427	0					
ANR	6297935	Identifier	type		6297427	1					
ANR	6297936	Argument	NULL		6297427	3					
ANR	6297937	Identifier	NULL		6297427	0					
ANR	6297938	ElseStatement	else		6297427	0					
ANR	6297939	CompoundStatement		110:9:2182:2182	6297427	0					
ANR	6297940	ExpressionStatement	"pstrcpy ( buf1 , sizeof ( buf1 ) , ""*"" )"	792:3:18773:18806	6297427	0	True				
ANR	6297941	CallExpression	"pstrcpy ( buf1 , sizeof ( buf1 ) , ""*"" )"		6297427	0					
ANR	6297942	Callee	pstrcpy		6297427	0					
ANR	6297943	Identifier	pstrcpy		6297427	0					
ANR	6297944	ArgumentList	buf1		6297427	1					
ANR	6297945	Argument	buf1		6297427	0					
ANR	6297946	Identifier	buf1		6297427	0					
ANR	6297947	Argument	sizeof ( buf1 )		6297427	1					
ANR	6297948	SizeofExpression	sizeof ( buf1 )		6297427	0					
ANR	6297949	Sizeof	sizeof		6297427	0					
ANR	6297950	SizeofOperand	buf1		6297427	1					
ANR	6297951	Argument	"""*"""		6297427	2					
ANR	6297952	PrimaryExpression	"""*"""		6297427	0					
ANR	6297953	IfStatement	if ( varstr )		6297427	1					
ANR	6297954	Condition	varstr	793:7:18815:18820	6297427	0	True				
ANR	6297955	Identifier	varstr		6297427	0					
ANR	6297956	CompoundStatement		112:15:2237:2237	6297427	1					
ANR	6297957	ExpressionStatement	"pstrcat ( buf1 , sizeof ( buf1 ) , varstr )"	794:4:18829:18865	6297427	0	True				
ANR	6297958	CallExpression	"pstrcat ( buf1 , sizeof ( buf1 ) , varstr )"		6297427	0					
ANR	6297959	Callee	pstrcat		6297427	0					
ANR	6297960	Identifier	pstrcat		6297427	0					
ANR	6297961	ArgumentList	buf1		6297427	1					
ANR	6297962	Argument	buf1		6297427	0					
ANR	6297963	Identifier	buf1		6297427	0					
ANR	6297964	Argument	sizeof ( buf1 )		6297427	1					
ANR	6297965	SizeofExpression	sizeof ( buf1 )		6297427	0					
ANR	6297966	Sizeof	sizeof		6297427	0					
ANR	6297967	SizeofOperand	buf1		6297427	1					
ANR	6297968	Argument	varstr		6297427	2					
ANR	6297969	Identifier	varstr		6297427	0					
ANR	6297970	ExpressionStatement	"type_to_str ( buf , buf_size , & s -> type , buf1 )"	796:3:18875:18918	6297427	2	True				
ANR	6297971	CallExpression	"type_to_str ( buf , buf_size , & s -> type , buf1 )"		6297427	0					
ANR	6297972	Callee	type_to_str		6297427	0					
ANR	6297973	Identifier	type_to_str		6297427	0					
ANR	6297974	ArgumentList	buf		6297427	1					
ANR	6297975	Argument	buf		6297427	0					
ANR	6297976	Identifier	buf		6297427	0					
ANR	6297977	Argument	buf_size		6297427	1					
ANR	6297978	Identifier	buf_size		6297427	0					
ANR	6297979	Argument	& s -> type		6297427	2					
ANR	6297980	UnaryOperationExpression	& s -> type		6297427	0					
ANR	6297981	UnaryOperator	&		6297427	0					
ANR	6297982	PtrMemberAccess	s -> type		6297427	1					
ANR	6297983	Identifier	s		6297427	0					
ANR	6297984	Identifier	type		6297427	1					
ANR	6297985	Argument	buf1		6297427	3					
ANR	6297986	Identifier	buf1		6297427	0					
ANR	6297987	GotoStatement	goto no_var ;	798:2:18926:18937	6297427	52	True				
ANR	6297988	Identifier	no_var		6297427	0					
ANR	6297989	IfStatement	if ( varstr )		6297427	10					
ANR	6297990	Condition	varstr	800:5:18947:18952	6297427	0	True				
ANR	6297991	Identifier	varstr		6297427	0					
ANR	6297992	CompoundStatement		119:13:2369:2369	6297427	1					
ANR	6297993	ExpressionStatement	"pstrcat ( buf , buf_size , "" "" )"	801:2:18959:18987	6297427	0	True				
ANR	6297994	CallExpression	"pstrcat ( buf , buf_size , "" "" )"		6297427	0					
ANR	6297995	Callee	pstrcat		6297427	0					
ANR	6297996	Identifier	pstrcat		6297427	0					
ANR	6297997	ArgumentList	buf		6297427	1					
ANR	6297998	Argument	buf		6297427	0					
ANR	6297999	Identifier	buf		6297427	0					
ANR	6298000	Argument	buf_size		6297427	1					
ANR	6298001	Identifier	buf_size		6297427	0					
ANR	6298002	Argument	""" """		6297427	2					
ANR	6298003	PrimaryExpression	""" """		6297427	0					
ANR	6298004	ExpressionStatement	"pstrcat ( buf , buf_size , varstr )"	802:2:18991:19022	6297427	1	True				
ANR	6298005	CallExpression	"pstrcat ( buf , buf_size , varstr )"		6297427	0					
ANR	6298006	Callee	pstrcat		6297427	0					
ANR	6298007	Identifier	pstrcat		6297427	0					
ANR	6298008	ArgumentList	buf		6297427	1					
ANR	6298009	Argument	buf		6297427	0					
ANR	6298010	Identifier	buf		6297427	0					
ANR	6298011	Argument	buf_size		6297427	1					
ANR	6298012	Identifier	buf_size		6297427	0					
ANR	6298013	Argument	varstr		6297427	2					
ANR	6298014	Identifier	varstr		6297427	0					
ANR	6298015	Label	no_var :	804:0:19027:19033	6297427	11	True				
ANR	6298016	Identifier	no_var		6297427	0					
ANR	6298017	ExpressionStatement		805:1:19036:19036	6297427	12	True				
ANR	6298018	ReturnType	static void		6297427	1					
ANR	6298019	Identifier	type_to_str		6297427	2					
ANR	6298020	ParameterList	"char * buf , int buf_size , CType * type , const char * varstr"		6297427	3					
ANR	6298021	Parameter	char * buf	682:24:16527:16535	6297427	0	True				
ANR	6298022	ParameterType	char *		6297427	0					
ANR	6298023	Identifier	buf		6297427	1					
ANR	6298024	Parameter	int buf_size	682:35:16538:16549	6297427	1	True				
ANR	6298025	ParameterType	int		6297427	0					
ANR	6298026	Identifier	buf_size		6297427	1					
ANR	6298027	Parameter	CType * type	682:49:16552:16562	6297427	2	True				
ANR	6298028	ParameterType	CType *		6297427	0					
ANR	6298029	Identifier	type		6297427	1					
ANR	6298030	Parameter	const char * varstr	682:62:16565:16582	6297427	3	True				
ANR	6298031	ParameterType	const char *		6297427	0					
ANR	6298032	Identifier	varstr		6297427	1					
ANR	6298033	CFGEntryNode	ENTRY		6297427		True				
ANR	6298034	CFGExitNode	EXIT		6297427		True				
ANR	6298035	Symbol	varstr		6297427						
ANR	6298036	Symbol	get_tok_str		6297427						
ANR	6298037	Symbol	VT_INT16		6297427						
ANR	6298038	Symbol	* type -> ref		6297427						
ANR	6298039	Symbol	VT_TYPE		6297427						
ANR	6298040	Symbol	tstr		6297427						
ANR	6298041	Symbol	s -> next		6297427						
ANR	6298042	Symbol	type		6297427						
ANR	6298043	Symbol	sa		6297427						
ANR	6298044	Symbol	VT_STRUCT		6297427						
ANR	6298045	Symbol	bt		6297427						
ANR	6298046	Symbol	VT_VOLATILE		6297427						
ANR	6298047	Symbol	VT_UNSIGNED		6297427						
ANR	6298048	Symbol	* type		6297427						
ANR	6298049	Symbol	type -> ref -> v		6297427						
ANR	6298050	Symbol	~SYM_STRUCT		6297427						
ANR	6298051	Symbol	* sa		6297427						
ANR	6298052	Symbol	VT_INT32		6297427						
ANR	6298053	Symbol	type -> ref		6297427						
ANR	6298054	Symbol	& s -> type		6297427						
ANR	6298055	Symbol	* buf		6297427						
ANR	6298056	Symbol	SYM_FIRST_ANOM		6297427						
ANR	6298057	Symbol	NULL		6297427						
ANR	6298058	Symbol	VT_CONSTANT		6297427						
ANR	6298059	Symbol	buf_size		6297427						
ANR	6298060	Symbol	VT_INT8		6297427						
ANR	6298061	Symbol	VT_BTYPE		6297427						
ANR	6298062	Symbol	buf1		6297427						
ANR	6298063	Symbol	VT_UNION		6297427						
ANR	6298064	Symbol	buf		6297427						
ANR	6298065	Symbol	s		6297427						
ANR	6298066	Symbol	t		6297427						
ANR	6298067	Symbol	& sa -> type		6297427						
ANR	6298068	Symbol	v		6297427						
ANR	6298069	Symbol	type -> t		6297427						
ANR	6298070	Symbol	VT_INT64		6297427						
ANR	6298071	Symbol	* * type		6297427						
ANR	6298072	Symbol	sa -> next		6297427						
ANR	6298073	Symbol	* s		6297427						
ANR	6298074	Symbol	VT_CHAR		6297427						
ANR	6298075	Symbol	VT_ARRAY		6297427						
ANR	6298076	Function	parse_attribute	815:0:19352:22272							
ANR	6298077	FunctionDef	parse_attribute (AttributeDef * ad)		6298076	0					
ANR	6298078	CompoundStatement		815:46:19398:22272	6298076	0					
ANR	6298079	IdentifierDeclStatement	int t ;	816:1:19401:19406	6298076	0	True				
ANR	6298080	IdentifierDecl	t		6298076	0					
ANR	6298081	IdentifierDeclType	int		6298076	0					
ANR	6298082	Identifier	t		6298076	1					
ANR	6298083	IdentifierDeclStatement	long long n ;	817:1:19409:19420	6298076	1	True				
ANR	6298084	IdentifierDecl	n		6298076	0					
ANR	6298085	IdentifierDeclType	long long		6298076	0					
ANR	6298086	Identifier	n		6298076	1					
ANR	6298087	WhileStatement	while ( tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2 )		6298076	2					
ANR	6298088	Condition	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2	819:8:19431:19476	6298076	0	True				
ANR	6298089	OrExpression	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2		6298076	0		||			
ANR	6298090	EqualityExpression	tok == TOK_ATTRIBUTE1		6298076	0		==			
ANR	6298091	Identifier	tok		6298076	0					
ANR	6298092	Identifier	TOK_ATTRIBUTE1		6298076	1					
ANR	6298093	EqualityExpression	tok == TOK_ATTRIBUTE2		6298076	1		==			
ANR	6298094	Identifier	tok		6298076	0					
ANR	6298095	Identifier	TOK_ATTRIBUTE2		6298076	1					
ANR	6298096	CompoundStatement		5:56:80:80	6298076	1					
ANR	6298097	ExpressionStatement	next ( )	820:2:19483:19490	6298076	0	True				
ANR	6298098	CallExpression	next ( )		6298076	0					
ANR	6298099	Callee	next		6298076	0					
ANR	6298100	Identifier	next		6298076	0					
ANR	6298101	ArgumentList			6298076	1					
ANR	6298102	ExpressionStatement	skip ( '(' )	821:2:19494:19504	6298076	1	True				
ANR	6298103	CallExpression	skip ( '(' )		6298076	0					
ANR	6298104	Callee	skip		6298076	0					
ANR	6298105	Identifier	skip		6298076	0					
ANR	6298106	ArgumentList	'('		6298076	1					
ANR	6298107	Argument	'('		6298076	0					
ANR	6298108	PrimaryExpression	'('		6298076	0					
ANR	6298109	ExpressionStatement	skip ( '(' )	822:2:19508:19518	6298076	2	True				
ANR	6298110	CallExpression	skip ( '(' )		6298076	0					
ANR	6298111	Callee	skip		6298076	0					
ANR	6298112	Identifier	skip		6298076	0					
ANR	6298113	ArgumentList	'('		6298076	1					
ANR	6298114	Argument	'('		6298076	0					
ANR	6298115	PrimaryExpression	'('		6298076	0					
ANR	6298116	WhileStatement	while ( tok != ')' )		6298076	3					
ANR	6298117	Condition	tok != ')'	823:9:19529:19538	6298076	0	True				
ANR	6298118	EqualityExpression	tok != ')'		6298076	0		!=			
ANR	6298119	Identifier	tok		6298076	0					
ANR	6298120	PrimaryExpression	')'		6298076	1					
ANR	6298121	CompoundStatement		9:21:142:142	6298076	1					
ANR	6298122	IfStatement	if ( tok < TOK_IDENT )		6298076	0					
ANR	6298123	Condition	tok < TOK_IDENT	824:7:19550:19564	6298076	0	True				
ANR	6298124	RelationalExpression	tok < TOK_IDENT		6298076	0		<			
ANR	6298125	Identifier	tok		6298076	0					
ANR	6298126	Identifier	TOK_IDENT		6298076	1					
ANR	6298127	CompoundStatement		10:24:168:168	6298076	1					
ANR	6298128	ExpressionStatement	"expect ( ""attribute name"" )"	825:4:19573:19598	6298076	0	True				
ANR	6298129	CallExpression	"expect ( ""attribute name"" )"		6298076	0					
ANR	6298130	Callee	expect		6298076	0					
ANR	6298131	Identifier	expect		6298076	0					
ANR	6298132	ArgumentList	"""attribute name"""		6298076	1					
ANR	6298133	Argument	"""attribute name"""		6298076	0					
ANR	6298134	PrimaryExpression	"""attribute name"""		6298076	0					
ANR	6298135	ExpressionStatement	t = tok	827:3:19608:19615	6298076	1	True				
ANR	6298136	AssignmentExpression	t = tok		6298076	0		=			
ANR	6298137	Identifier	t		6298076	0					
ANR	6298138	Identifier	tok		6298076	1					
ANR	6298139	ExpressionStatement	next ( )	828:3:19620:19627	6298076	2	True				
ANR	6298140	CallExpression	next ( )		6298076	0					
ANR	6298141	Callee	next		6298076	0					
ANR	6298142	Identifier	next		6298076	0					
ANR	6298143	ArgumentList			6298076	1					
ANR	6298144	SwitchStatement	switch ( t )		6298076	3					
ANR	6298145	Condition	t	829:11:19640:19640	6298076	0	True				
ANR	6298146	Identifier	t		6298076	0					
ANR	6298147	CompoundStatement		15:14:244:244	6298076	1					
ANR	6298148	Label	case TOK_ALIAS1 :	830:3:19648:19663	6298076	0	True				
ANR	6298149	Identifier	TOK_ALIAS1		6298076	0					
ANR	6298150	Label	case TOK_ALIAS2 :	831:3:19668:19683	6298076	1	True				
ANR	6298151	Identifier	TOK_ALIAS2		6298076	0					
ANR	6298152	ExpressionStatement	skip ( '(' )	832:4:19689:19699	6298076	2	True				
ANR	6298153	CallExpression	skip ( '(' )		6298076	0					
ANR	6298154	Callee	skip		6298076	0					
ANR	6298155	Identifier	skip		6298076	0					
ANR	6298156	ArgumentList	'('		6298076	1					
ANR	6298157	Argument	'('		6298076	0					
ANR	6298158	PrimaryExpression	'('		6298076	0					
ANR	6298159	IfStatement	if ( tok != TOK_STR )		6298076	3					
ANR	6298160	Condition	tok != TOK_STR	833:8:19709:19722	6298076	0	True				
ANR	6298161	EqualityExpression	tok != TOK_STR		6298076	0		!=			
ANR	6298162	Identifier	tok		6298076	0					
ANR	6298163	Identifier	TOK_STR		6298076	1					
ANR	6298164	CompoundStatement		19:24:326:326	6298076	1					
ANR	6298165	ExpressionStatement	"expect ( ""alias(\\""target\\"")"" )"	834:5:19732:19760	6298076	0	True				
ANR	6298166	CallExpression	"expect ( ""alias(\\""target\\"")"" )"		6298076	0					
ANR	6298167	Callee	expect		6298076	0					
ANR	6298168	Identifier	expect		6298076	0					
ANR	6298169	ArgumentList	"""alias(\\""target\\"")"""		6298076	1					
ANR	6298170	Argument	"""alias(\\""target\\"")"""		6298076	0					
ANR	6298171	PrimaryExpression	"""alias(\\""target\\"")"""		6298076	0					
ANR	6298172	ExpressionStatement	"ad -> alias_target = tok_alloc ( ( char * ) tokc . cstr -> data , tokc . cstr -> size - 1 ) -> tok"	836:4:19772:19900	6298076	4	True				
ANR	6298173	AssignmentExpression	"ad -> alias_target = tok_alloc ( ( char * ) tokc . cstr -> data , tokc . cstr -> size - 1 ) -> tok"		6298076	0		=			
ANR	6298174	PtrMemberAccess	ad -> alias_target		6298076	0					
ANR	6298175	Identifier	ad		6298076	0					
ANR	6298176	Identifier	alias_target		6298076	1					
ANR	6298177	PtrMemberAccess	"tok_alloc ( ( char * ) tokc . cstr -> data , tokc . cstr -> size - 1 ) -> tok"		6298076	1					
ANR	6298178	CallExpression	"tok_alloc ( ( char * ) tokc . cstr -> data , tokc . cstr -> size - 1 )"		6298076	0					
ANR	6298179	Callee	tok_alloc		6298076	0					
ANR	6298180	Identifier	tok_alloc		6298076	0					
ANR	6298181	ArgumentList	( char * ) tokc . cstr -> data		6298076	1					
ANR	6298182	Argument	( char * ) tokc . cstr -> data		6298076	0					
ANR	6298183	CastExpression	( char * ) tokc . cstr -> data		6298076	0					
ANR	6298184	CastTarget	char *		6298076	0					
ANR	6298185	PtrMemberAccess	tokc . cstr -> data		6298076	1					
ANR	6298186	MemberAccess	tokc . cstr		6298076	0					
ANR	6298187	Identifier	tokc		6298076	0					
ANR	6298188	Identifier	cstr		6298076	1					
ANR	6298189	Identifier	data		6298076	1					
ANR	6298190	Argument	tokc . cstr -> size - 1		6298076	1					
ANR	6298191	AdditiveExpression	tokc . cstr -> size - 1		6298076	0		-			
ANR	6298192	PtrMemberAccess	tokc . cstr -> size		6298076	0					
ANR	6298193	MemberAccess	tokc . cstr		6298076	0					
ANR	6298194	Identifier	tokc		6298076	0					
ANR	6298195	Identifier	cstr		6298076	1					
ANR	6298196	Identifier	size		6298076	1					
ANR	6298197	PrimaryExpression	1		6298076	1					
ANR	6298198	Identifier	tok		6298076	1					
ANR	6298199	ExpressionStatement	next ( )	838:4:19906:19913	6298076	5	True				
ANR	6298200	CallExpression	next ( )		6298076	0					
ANR	6298201	Callee	next		6298076	0					
ANR	6298202	Identifier	next		6298076	0					
ANR	6298203	ArgumentList			6298076	1					
ANR	6298204	ExpressionStatement	skip ( ')' )	839:4:19919:19929	6298076	6	True				
ANR	6298205	CallExpression	skip ( ')' )		6298076	0					
ANR	6298206	Callee	skip		6298076	0					
ANR	6298207	Identifier	skip		6298076	0					
ANR	6298208	ArgumentList	')'		6298076	1					
ANR	6298209	Argument	')'		6298076	0					
ANR	6298210	PrimaryExpression	')'		6298076	0					
ANR	6298211	BreakStatement	break ;	840:4:19935:19940	6298076	7	True				
ANR	6298212	Label	case TOK_ALIGNED1 :	841:3:19945:19962	6298076	8	True				
ANR	6298213	Identifier	TOK_ALIGNED1		6298076	0					
ANR	6298214	Label	case TOK_ALIGNED2 :	842:3:19967:19984	6298076	9	True				
ANR	6298215	Identifier	TOK_ALIGNED2		6298076	0					
ANR	6298216	IfStatement	if ( tok == '(' )		6298076	10					
ANR	6298217	Condition	tok == '('	843:8:19994:20003	6298076	0	True				
ANR	6298218	EqualityExpression	tok == '('		6298076	0		==			
ANR	6298219	Identifier	tok		6298076	0					
ANR	6298220	PrimaryExpression	'('		6298076	1					
ANR	6298221	CompoundStatement		29:20:607:607	6298076	1					
ANR	6298222	ExpressionStatement	next ( )	844:5:20013:20020	6298076	0	True				
ANR	6298223	CallExpression	next ( )		6298076	0					
ANR	6298224	Callee	next		6298076	0					
ANR	6298225	Identifier	next		6298076	0					
ANR	6298226	ArgumentList			6298076	1					
ANR	6298227	ExpressionStatement	n = expr_const ( )	845:5:20027:20044	6298076	1	True				
ANR	6298228	AssignmentExpression	n = expr_const ( )		6298076	0		=			
ANR	6298229	Identifier	n		6298076	0					
ANR	6298230	CallExpression	expr_const ( )		6298076	1					
ANR	6298231	Callee	expr_const		6298076	0					
ANR	6298232	Identifier	expr_const		6298076	0					
ANR	6298233	ArgumentList			6298076	1					
ANR	6298234	IfStatement	if ( n <= 0 || ( n & ( n - 1 ) ) != 0 )		6298076	2					
ANR	6298235	Condition	n <= 0 || ( n & ( n - 1 ) ) != 0	846:9:20055:20082	6298076	0	True				
ANR	6298236	OrExpression	n <= 0 || ( n & ( n - 1 ) ) != 0		6298076	0		||			
ANR	6298237	RelationalExpression	n <= 0		6298076	0		<=			
ANR	6298238	Identifier	n		6298076	0					
ANR	6298239	PrimaryExpression	0		6298076	1					
ANR	6298240	EqualityExpression	( n & ( n - 1 ) ) != 0		6298076	1		!=			
ANR	6298241	BitAndExpression	n & ( n - 1 )		6298076	0		&			
ANR	6298242	Identifier	n		6298076	0					
ANR	6298243	AdditiveExpression	n - 1		6298076	1		-			
ANR	6298244	Identifier	n		6298076	0					
ANR	6298245	PrimaryExpression	1		6298076	1					
ANR	6298246	PrimaryExpression	0		6298076	1					
ANR	6298247	CompoundStatement		32:39:686:686	6298076	1					
ANR	6298248	ExpressionStatement	"TCC_ERR ( ""alignment must be a positive power of two"" )"	847:6:20093:20146	6298076	0	True				
ANR	6298249	CallExpression	"TCC_ERR ( ""alignment must be a positive power of two"" )"		6298076	0					
ANR	6298250	Callee	TCC_ERR		6298076	0					
ANR	6298251	Identifier	TCC_ERR		6298076	0					
ANR	6298252	ArgumentList	"""alignment must be a positive power of two"""		6298076	1					
ANR	6298253	Argument	"""alignment must be a positive power of two"""		6298076	0					
ANR	6298254	PrimaryExpression	"""alignment must be a positive power of two"""		6298076	0					
ANR	6298255	ExpressionStatement	skip ( ')' )	849:5:20160:20170	6298076	3	True				
ANR	6298256	CallExpression	skip ( ')' )		6298076	0					
ANR	6298257	Callee	skip		6298076	0					
ANR	6298258	Identifier	skip		6298076	0					
ANR	6298259	ArgumentList	')'		6298076	1					
ANR	6298260	Argument	')'		6298076	0					
ANR	6298261	PrimaryExpression	')'		6298076	0					
ANR	6298262	ElseStatement	else		6298076	0					
ANR	6298263	CompoundStatement		36:11:784:784	6298076	0					
ANR	6298264	ExpressionStatement	n = MAX_ALIGN	851:5:20190:20203	6298076	0	True				
ANR	6298265	AssignmentExpression	n = MAX_ALIGN		6298076	0		=			
ANR	6298266	Identifier	n		6298076	0					
ANR	6298267	Identifier	MAX_ALIGN		6298076	1					
ANR	6298268	ExpressionStatement	ad -> aligned = n	853:4:20215:20230	6298076	11	True				
ANR	6298269	AssignmentExpression	ad -> aligned = n		6298076	0		=			
ANR	6298270	PtrMemberAccess	ad -> aligned		6298076	0					
ANR	6298271	Identifier	ad		6298076	0					
ANR	6298272	Identifier	aligned		6298076	1					
ANR	6298273	Identifier	n		6298076	1					
ANR	6298274	BreakStatement	break ;	854:4:20236:20241	6298076	12	True				
ANR	6298275	Label	case TOK_PACKED1 :	855:3:20246:20262	6298076	13	True				
ANR	6298276	Identifier	TOK_PACKED1		6298076	0					
ANR	6298277	Label	case TOK_PACKED2 :	856:3:20267:20283	6298076	14	True				
ANR	6298278	Identifier	TOK_PACKED2		6298076	0					
ANR	6298279	ExpressionStatement	ad -> packed = 1	857:4:20289:20303	6298076	15	True				
ANR	6298280	AssignmentExpression	ad -> packed = 1		6298076	0		=			
ANR	6298281	PtrMemberAccess	ad -> packed		6298076	0					
ANR	6298282	Identifier	ad		6298076	0					
ANR	6298283	Identifier	packed		6298076	1					
ANR	6298284	PrimaryExpression	1		6298076	1					
ANR	6298285	BreakStatement	break ;	858:4:20309:20314	6298076	16	True				
ANR	6298286	Label	case TOK_WEAK1 :	859:3:20319:20333	6298076	17	True				
ANR	6298287	Identifier	TOK_WEAK1		6298076	0					
ANR	6298288	Label	case TOK_WEAK2 :	860:3:20338:20352	6298076	18	True				
ANR	6298289	Identifier	TOK_WEAK2		6298076	0					
ANR	6298290	ExpressionStatement	ad -> weak = 1	861:4:20358:20370	6298076	19	True				
ANR	6298291	AssignmentExpression	ad -> weak = 1		6298076	0		=			
ANR	6298292	PtrMemberAccess	ad -> weak		6298076	0					
ANR	6298293	Identifier	ad		6298076	0					
ANR	6298294	Identifier	weak		6298076	1					
ANR	6298295	PrimaryExpression	1		6298076	1					
ANR	6298296	BreakStatement	break ;	862:4:20376:20381	6298076	20	True				
ANR	6298297	Label	case TOK_UNUSED1 :	863:3:20386:20402	6298076	21	True				
ANR	6298298	Identifier	TOK_UNUSED1		6298076	0					
ANR	6298299	Label	case TOK_UNUSED2 :	864:3:20407:20423	6298076	22	True				
ANR	6298300	Identifier	TOK_UNUSED2		6298076	0					
ANR	6298301	BreakStatement	break ;	867:4:20520:20525	6298076	23	True				
ANR	6298302	Label	case TOK_NORETURN1 :	868:3:20530:20548	6298076	24	True				
ANR	6298303	Identifier	TOK_NORETURN1		6298076	0					
ANR	6298304	Label	case TOK_NORETURN2 :	869:3:20553:20571	6298076	25	True				
ANR	6298305	Identifier	TOK_NORETURN2		6298076	0					
ANR	6298306	BreakStatement	break ;	872:4:20668:20673	6298076	26	True				
ANR	6298307	Label	case TOK_CDECL1 :	873:3:20678:20693	6298076	27	True				
ANR	6298308	Identifier	TOK_CDECL1		6298076	0					
ANR	6298309	Label	case TOK_CDECL2 :	874:3:20698:20713	6298076	28	True				
ANR	6298310	Identifier	TOK_CDECL2		6298076	0					
ANR	6298311	Label	case TOK_CDECL3 :	875:3:20718:20733	6298076	29	True				
ANR	6298312	Identifier	TOK_CDECL3		6298076	0					
ANR	6298313	ExpressionStatement	ad -> func_call = FUNC_CDECL	876:4:20739:20765	6298076	30	True				
ANR	6298314	AssignmentExpression	ad -> func_call = FUNC_CDECL		6298076	0		=			
ANR	6298315	PtrMemberAccess	ad -> func_call		6298076	0					
ANR	6298316	Identifier	ad		6298076	0					
ANR	6298317	Identifier	func_call		6298076	1					
ANR	6298318	Identifier	FUNC_CDECL		6298076	1					
ANR	6298319	BreakStatement	break ;	877:4:20771:20776	6298076	31	True				
ANR	6298320	Label	case TOK_STDCALL1 :	878:3:20781:20798	6298076	32	True				
ANR	6298321	Identifier	TOK_STDCALL1		6298076	0					
ANR	6298322	Label	case TOK_STDCALL2 :	879:3:20803:20820	6298076	33	True				
ANR	6298323	Identifier	TOK_STDCALL2		6298076	0					
ANR	6298324	Label	case TOK_STDCALL3 :	880:3:20825:20842	6298076	34	True				
ANR	6298325	Identifier	TOK_STDCALL3		6298076	0					
ANR	6298326	ExpressionStatement	ad -> func_call = FUNC_STDCALL	881:4:20848:20876	6298076	35	True				
ANR	6298327	AssignmentExpression	ad -> func_call = FUNC_STDCALL		6298076	0		=			
ANR	6298328	PtrMemberAccess	ad -> func_call		6298076	0					
ANR	6298329	Identifier	ad		6298076	0					
ANR	6298330	Identifier	func_call		6298076	1					
ANR	6298331	Identifier	FUNC_STDCALL		6298076	1					
ANR	6298332	BreakStatement	break ;	882:4:20882:20887	6298076	36	True				
ANR	6298333	Label	case TOK_REGPARM1 :	884:3:20915:20932	6298076	37	True				
ANR	6298334	Identifier	TOK_REGPARM1		6298076	0					
ANR	6298335	Label	case TOK_REGPARM2 :	885:3:20937:20954	6298076	38	True				
ANR	6298336	Identifier	TOK_REGPARM2		6298076	0					
ANR	6298337	ExpressionStatement	skip ( '(' )	886:4:20960:20970	6298076	39	True				
ANR	6298338	CallExpression	skip ( '(' )		6298076	0					
ANR	6298339	Callee	skip		6298076	0					
ANR	6298340	Identifier	skip		6298076	0					
ANR	6298341	ArgumentList	'('		6298076	1					
ANR	6298342	Argument	'('		6298076	0					
ANR	6298343	PrimaryExpression	'('		6298076	0					
ANR	6298344	ExpressionStatement	n = expr_const ( )	887:4:20976:20993	6298076	40	True				
ANR	6298345	AssignmentExpression	n = expr_const ( )		6298076	0		=			
ANR	6298346	Identifier	n		6298076	0					
ANR	6298347	CallExpression	expr_const ( )		6298076	1					
ANR	6298348	Callee	expr_const		6298076	0					
ANR	6298349	Identifier	expr_const		6298076	0					
ANR	6298350	ArgumentList			6298076	1					
ANR	6298351	IfStatement	if ( n > 3 )		6298076	41					
ANR	6298352	Condition	n > 3	888:8:21003:21007	6298076	0	True				
ANR	6298353	RelationalExpression	n > 3		6298076	0		>			
ANR	6298354	Identifier	n		6298076	0					
ANR	6298355	PrimaryExpression	3		6298076	1					
ANR	6298356	CompoundStatement		74:15:1611:1611	6298076	1					
ANR	6298357	ExpressionStatement	n = 3	889:5:21017:21022	6298076	0	True				
ANR	6298358	AssignmentExpression	n = 3		6298076	0		=			
ANR	6298359	Identifier	n		6298076	0					
ANR	6298360	PrimaryExpression	3		6298076	1					
ANR	6298361	ElseStatement	else		6298076	0					
ANR	6298362	IfStatement	if ( n < 0 )		6298076	0					
ANR	6298363	Condition	n < 0	890:15:21039:21043	6298076	0	True				
ANR	6298364	RelationalExpression	n < 0		6298076	0		<			
ANR	6298365	Identifier	n		6298076	0					
ANR	6298366	PrimaryExpression	0		6298076	1					
ANR	6298367	CompoundStatement		76:22:1647:1647	6298076	1					
ANR	6298368	ExpressionStatement	n = 0	891:5:21053:21058	6298076	0	True				
ANR	6298369	AssignmentExpression	n = 0		6298076	0		=			
ANR	6298370	Identifier	n		6298076	0					
ANR	6298371	PrimaryExpression	0		6298076	1					
ANR	6298372	IfStatement	if ( n > 0 )		6298076	42					
ANR	6298373	Condition	n > 0	893:8:21074:21078	6298076	0	True				
ANR	6298374	RelationalExpression	n > 0		6298076	0		>			
ANR	6298375	Identifier	n		6298076	0					
ANR	6298376	PrimaryExpression	0		6298076	1					
ANR	6298377	CompoundStatement		79:15:1682:1682	6298076	1					
ANR	6298378	ExpressionStatement	ad -> func_call = FUNC_FASTCALL1 + n - 1	894:5:21088:21126	6298076	0	True				
ANR	6298379	AssignmentExpression	ad -> func_call = FUNC_FASTCALL1 + n - 1		6298076	0		=			
ANR	6298380	PtrMemberAccess	ad -> func_call		6298076	0					
ANR	6298381	Identifier	ad		6298076	0					
ANR	6298382	Identifier	func_call		6298076	1					
ANR	6298383	AdditiveExpression	FUNC_FASTCALL1 + n - 1		6298076	1		+			
ANR	6298384	Identifier	FUNC_FASTCALL1		6298076	0					
ANR	6298385	AdditiveExpression	n - 1		6298076	1		-			
ANR	6298386	Identifier	n		6298076	0					
ANR	6298387	PrimaryExpression	1		6298076	1					
ANR	6298388	ExpressionStatement	skip ( ')' )	896:4:21138:21148	6298076	43	True				
ANR	6298389	CallExpression	skip ( ')' )		6298076	0					
ANR	6298390	Callee	skip		6298076	0					
ANR	6298391	Identifier	skip		6298076	0					
ANR	6298392	ArgumentList	')'		6298076	1					
ANR	6298393	Argument	')'		6298076	0					
ANR	6298394	PrimaryExpression	')'		6298076	0					
ANR	6298395	BreakStatement	break ;	897:4:21154:21159	6298076	44	True				
ANR	6298396	Label	case TOK_FASTCALL1 :	898:3:21164:21182	6298076	45	True				
ANR	6298397	Identifier	TOK_FASTCALL1		6298076	0					
ANR	6298398	Label	case TOK_FASTCALL2 :	899:3:21187:21205	6298076	46	True				
ANR	6298399	Identifier	TOK_FASTCALL2		6298076	0					
ANR	6298400	Label	case TOK_FASTCALL3 :	900:3:21210:21228	6298076	47	True				
ANR	6298401	Identifier	TOK_FASTCALL3		6298076	0					
ANR	6298402	ExpressionStatement	ad -> func_call = FUNC_FASTCALLW	901:4:21234:21264	6298076	48	True				
ANR	6298403	AssignmentExpression	ad -> func_call = FUNC_FASTCALLW		6298076	0		=			
ANR	6298404	PtrMemberAccess	ad -> func_call		6298076	0					
ANR	6298405	Identifier	ad		6298076	0					
ANR	6298406	Identifier	func_call		6298076	1					
ANR	6298407	Identifier	FUNC_FASTCALLW		6298076	1					
ANR	6298408	BreakStatement	break ;	902:4:21270:21275	6298076	49	True				
ANR	6298409	Label	case TOK_MODE :	904:3:21287:21300	6298076	50	True				
ANR	6298410	Identifier	TOK_MODE		6298076	0					
ANR	6298411	ExpressionStatement	skip ( '(' )	905:4:21306:21316	6298076	51	True				
ANR	6298412	CallExpression	skip ( '(' )		6298076	0					
ANR	6298413	Callee	skip		6298076	0					
ANR	6298414	Identifier	skip		6298076	0					
ANR	6298415	ArgumentList	'('		6298076	1					
ANR	6298416	Argument	'('		6298076	0					
ANR	6298417	PrimaryExpression	'('		6298076	0					
ANR	6298418	SwitchStatement	switch ( tok )		6298076	52					
ANR	6298419	Condition	tok	906:12:21330:21332	6298076	0	True				
ANR	6298420	Identifier	tok		6298076	0					
ANR	6298421	CompoundStatement		92:17:1936:1936	6298076	1					
ANR	6298422	Label	case TOK_MODE_DI :	907:4:21341:21357	6298076	0	True				
ANR	6298423	Identifier	TOK_MODE_DI		6298076	0					
ANR	6298424	ExpressionStatement	ad -> mode = VT_INT64 + 1	908:5:21364:21387	6298076	1	True				
ANR	6298425	AssignmentExpression	ad -> mode = VT_INT64 + 1		6298076	0		=			
ANR	6298426	PtrMemberAccess	ad -> mode		6298076	0					
ANR	6298427	Identifier	ad		6298076	0					
ANR	6298428	Identifier	mode		6298076	1					
ANR	6298429	AdditiveExpression	VT_INT64 + 1		6298076	1		+			
ANR	6298430	Identifier	VT_INT64		6298076	0					
ANR	6298431	PrimaryExpression	1		6298076	1					
ANR	6298432	BreakStatement	break ;	909:5:21394:21399	6298076	2	True				
ANR	6298433	Label	case TOK_MODE_HI :	910:4:21405:21421	6298076	3	True				
ANR	6298434	Identifier	TOK_MODE_HI		6298076	0					
ANR	6298435	ExpressionStatement	ad -> mode = VT_INT16 + 1	911:5:21428:21451	6298076	4	True				
ANR	6298436	AssignmentExpression	ad -> mode = VT_INT16 + 1		6298076	0		=			
ANR	6298437	PtrMemberAccess	ad -> mode		6298076	0					
ANR	6298438	Identifier	ad		6298076	0					
ANR	6298439	Identifier	mode		6298076	1					
ANR	6298440	AdditiveExpression	VT_INT16 + 1		6298076	1		+			
ANR	6298441	Identifier	VT_INT16		6298076	0					
ANR	6298442	PrimaryExpression	1		6298076	1					
ANR	6298443	BreakStatement	break ;	912:5:21458:21463	6298076	5	True				
ANR	6298444	Label	case TOK_MODE_SI :	913:4:21469:21485	6298076	6	True				
ANR	6298445	Identifier	TOK_MODE_SI		6298076	0					
ANR	6298446	ExpressionStatement	ad -> mode = VT_INT32 + 1	914:5:21492:21515	6298076	7	True				
ANR	6298447	AssignmentExpression	ad -> mode = VT_INT32 + 1		6298076	0		=			
ANR	6298448	PtrMemberAccess	ad -> mode		6298076	0					
ANR	6298449	Identifier	ad		6298076	0					
ANR	6298450	Identifier	mode		6298076	1					
ANR	6298451	AdditiveExpression	VT_INT32 + 1		6298076	1		+			
ANR	6298452	Identifier	VT_INT32		6298076	0					
ANR	6298453	PrimaryExpression	1		6298076	1					
ANR	6298454	BreakStatement	break ;	915:5:21522:21527	6298076	8	True				
ANR	6298455	Label	default :	916:4:21533:21540	6298076	9	True				
ANR	6298456	Identifier	default		6298076	0					
ANR	6298457	ExpressionStatement	"tcc_warning ( ""__mode__(%s) not supported\\n"" , get_tok_str ( tok , NULL ) )"	917:5:21547:21616	6298076	10	True				
ANR	6298458	CallExpression	"tcc_warning ( ""__mode__(%s) not supported\\n"" , get_tok_str ( tok , NULL ) )"		6298076	0					
ANR	6298459	Callee	tcc_warning		6298076	0					
ANR	6298460	Identifier	tcc_warning		6298076	0					
ANR	6298461	ArgumentList	"""__mode__(%s) not supported\\n"""		6298076	1					
ANR	6298462	Argument	"""__mode__(%s) not supported\\n"""		6298076	0					
ANR	6298463	PrimaryExpression	"""__mode__(%s) not supported\\n"""		6298076	0					
ANR	6298464	Argument	"get_tok_str ( tok , NULL )"		6298076	1					
ANR	6298465	CallExpression	"get_tok_str ( tok , NULL )"		6298076	0					
ANR	6298466	Callee	get_tok_str		6298076	0					
ANR	6298467	Identifier	get_tok_str		6298076	0					
ANR	6298468	ArgumentList	tok		6298076	1					
ANR	6298469	Argument	tok		6298076	0					
ANR	6298470	Identifier	tok		6298076	0					
ANR	6298471	Argument	NULL		6298076	1					
ANR	6298472	Identifier	NULL		6298076	0					
ANR	6298473	BreakStatement	break ;	918:5:21623:21628	6298076	11	True				
ANR	6298474	ExpressionStatement	next ( )	920:4:21640:21647	6298076	53	True				
ANR	6298475	CallExpression	next ( )		6298076	0					
ANR	6298476	Callee	next		6298076	0					
ANR	6298477	Identifier	next		6298076	0					
ANR	6298478	ArgumentList			6298076	1					
ANR	6298479	ExpressionStatement	skip ( ')' )	921:4:21653:21663	6298076	54	True				
ANR	6298480	CallExpression	skip ( ')' )		6298076	0					
ANR	6298481	Callee	skip		6298076	0					
ANR	6298482	Identifier	skip		6298076	0					
ANR	6298483	ArgumentList	')'		6298076	1					
ANR	6298484	Argument	')'		6298076	0					
ANR	6298485	PrimaryExpression	')'		6298076	0					
ANR	6298486	BreakStatement	break ;	922:4:21669:21674	6298076	55	True				
ANR	6298487	Label	case TOK_DLLEXPORT :	923:3:21679:21697	6298076	56	True				
ANR	6298488	Identifier	TOK_DLLEXPORT		6298076	0					
ANR	6298489	ExpressionStatement	ad -> func_export = 1	924:4:21703:21722	6298076	57	True				
ANR	6298490	AssignmentExpression	ad -> func_export = 1		6298076	0		=			
ANR	6298491	PtrMemberAccess	ad -> func_export		6298076	0					
ANR	6298492	Identifier	ad		6298076	0					
ANR	6298493	Identifier	func_export		6298076	1					
ANR	6298494	PrimaryExpression	1		6298076	1					
ANR	6298495	BreakStatement	break ;	925:4:21728:21733	6298076	58	True				
ANR	6298496	Label	case TOK_DLLIMPORT :	926:3:21738:21756	6298076	59	True				
ANR	6298497	Identifier	TOK_DLLIMPORT		6298076	0					
ANR	6298498	ExpressionStatement	ad -> func_import = 1	927:4:21762:21781	6298076	60	True				
ANR	6298499	AssignmentExpression	ad -> func_import = 1		6298076	0		=			
ANR	6298500	PtrMemberAccess	ad -> func_import		6298076	0					
ANR	6298501	Identifier	ad		6298076	0					
ANR	6298502	Identifier	func_import		6298076	1					
ANR	6298503	PrimaryExpression	1		6298076	1					
ANR	6298504	BreakStatement	break ;	928:4:21787:21792	6298076	61	True				
ANR	6298505	Label	default :	929:3:21797:21804	6298076	62	True				
ANR	6298506	Identifier	default		6298076	0					
ANR	6298507	IfStatement	if ( tcc_state -> warn_unsupported )		6298076	63					
ANR	6298508	Condition	tcc_state -> warn_unsupported	930:8:21814:21840	6298076	0	True				
ANR	6298509	PtrMemberAccess	tcc_state -> warn_unsupported		6298076	0					
ANR	6298510	Identifier	tcc_state		6298076	0					
ANR	6298511	Identifier	warn_unsupported		6298076	1					
ANR	6298512	CompoundStatement		116:37:2444:2444	6298076	1					
ANR	6298513	ExpressionStatement	"tcc_warning ( ""'%s' attribute ignored"" , get_tok_str ( t , NULL ) )"	931:5:21850:21911	6298076	0	True				
ANR	6298514	CallExpression	"tcc_warning ( ""'%s' attribute ignored"" , get_tok_str ( t , NULL ) )"		6298076	0					
ANR	6298515	Callee	tcc_warning		6298076	0					
ANR	6298516	Identifier	tcc_warning		6298076	0					
ANR	6298517	ArgumentList	"""'%s' attribute ignored"""		6298076	1					
ANR	6298518	Argument	"""'%s' attribute ignored"""		6298076	0					
ANR	6298519	PrimaryExpression	"""'%s' attribute ignored"""		6298076	0					
ANR	6298520	Argument	"get_tok_str ( t , NULL )"		6298076	1					
ANR	6298521	CallExpression	"get_tok_str ( t , NULL )"		6298076	0					
ANR	6298522	Callee	get_tok_str		6298076	0					
ANR	6298523	Identifier	get_tok_str		6298076	0					
ANR	6298524	ArgumentList	t		6298076	1					
ANR	6298525	Argument	t		6298076	0					
ANR	6298526	Identifier	t		6298076	0					
ANR	6298527	Argument	NULL		6298076	1					
ANR	6298528	Identifier	NULL		6298076	0					
ANR	6298529	IfStatement	if ( tok == '(' )		6298076	64					
ANR	6298530	Condition	tok == '('	934:8:21953:21962	6298076	0	True				
ANR	6298531	EqualityExpression	tok == '('		6298076	0		==			
ANR	6298532	Identifier	tok		6298076	0					
ANR	6298533	PrimaryExpression	'('		6298076	1					
ANR	6298534	CompoundStatement		121:5:2573:2592	6298076	1					
ANR	6298535	IdentifierDeclStatement	int parenthesis = 0 ;	935:5:21972:21991	6298076	0	True				
ANR	6298536	IdentifierDecl	parenthesis = 0		6298076	0					
ANR	6298537	IdentifierDeclType	int		6298076	0					
ANR	6298538	Identifier	parenthesis		6298076	1					
ANR	6298539	AssignmentExpression	parenthesis = 0		6298076	2		=			
ANR	6298540	Identifier	parenthesis		6298076	0					
ANR	6298541	PrimaryExpression	0		6298076	1					
ANR	6298542	DoStatement	do		6298076	1					
ANR	6298543	CompoundStatement		122:8:2602:2602	6298076	0					
ANR	6298544	IfStatement	if ( tok == '(' )		6298076	0					
ANR	6298545	Condition	tok == '('	937:10:22013:22022	6298076	0	True				
ANR	6298546	EqualityExpression	tok == '('		6298076	0		==			
ANR	6298547	Identifier	tok		6298076	0					
ANR	6298548	PrimaryExpression	'('		6298076	1					
ANR	6298549	CompoundStatement		123:22:2626:2626	6298076	1					
ANR	6298550	ExpressionStatement	parenthesis ++	938:7:22034:22047	6298076	0	True				
ANR	6298551	PostIncDecOperationExpression	parenthesis ++		6298076	0					
ANR	6298552	Identifier	parenthesis		6298076	0					
ANR	6298553	IncDec	++		6298076	1					
ANR	6298554	ElseStatement	else		6298076	0					
ANR	6298555	IfStatement	if ( tok == ')' )		6298076	0					
ANR	6298556	Condition	tok == ')'	939:17:22066:22075	6298076	0	True				
ANR	6298557	EqualityExpression	tok == ')'		6298076	0		==			
ANR	6298558	Identifier	tok		6298076	0					
ANR	6298559	PrimaryExpression	')'		6298076	1					
ANR	6298560	CompoundStatement		125:29:2679:2679	6298076	1					
ANR	6298561	ExpressionStatement	parenthesis --	940:7:22087:22100	6298076	0	True				
ANR	6298562	PostIncDecOperationExpression	parenthesis --		6298076	0					
ANR	6298563	Identifier	parenthesis		6298076	0					
ANR	6298564	IncDec	--		6298076	1					
ANR	6298565	ExpressionStatement	next ( )	942:6:22116:22123	6298076	1	True				
ANR	6298566	CallExpression	next ( )		6298076	0					
ANR	6298567	Callee	next		6298076	0					
ANR	6298568	Identifier	next		6298076	0					
ANR	6298569	ArgumentList			6298076	1					
ANR	6298570	Condition	parenthesis && tok != - 1	943:14:22139:22162	6298076	1	True				
ANR	6298571	AndExpression	parenthesis && tok != - 1		6298076	0		&&			
ANR	6298572	Identifier	parenthesis		6298076	0					
ANR	6298573	EqualityExpression	tok != - 1		6298076	1		!=			
ANR	6298574	Identifier	tok		6298076	0					
ANR	6298575	UnaryOperationExpression	- 1		6298076	1					
ANR	6298576	UnaryOperator	-		6298076	0					
ANR	6298577	PrimaryExpression	1		6298076	1					
ANR	6298578	BreakStatement	break ;	945:4:22176:22181	6298076	65	True				
ANR	6298579	IfStatement	"if ( tok != ',' )"		6298076	4					
ANR	6298580	Condition	"tok != ','"	947:7:22195:22204	6298076	0	True				
ANR	6298581	EqualityExpression	"tok != ','"		6298076	0		!=			
ANR	6298582	Identifier	tok		6298076	0					
ANR	6298583	PrimaryExpression	"','"		6298076	1					
ANR	6298584	CompoundStatement		133:19:2808:2808	6298076	1					
ANR	6298585	BreakStatement	break ;	948:4:22213:22218	6298076	0	True				
ANR	6298586	ExpressionStatement	next ( )	950:3:22228:22235	6298076	5	True				
ANR	6298587	CallExpression	next ( )		6298076	0					
ANR	6298588	Callee	next		6298076	0					
ANR	6298589	Identifier	next		6298076	0					
ANR	6298590	ArgumentList			6298076	1					
ANR	6298591	ExpressionStatement	skip ( ')' )	952:2:22243:22253	6298076	4	True				
ANR	6298592	CallExpression	skip ( ')' )		6298076	0					
ANR	6298593	Callee	skip		6298076	0					
ANR	6298594	Identifier	skip		6298076	0					
ANR	6298595	ArgumentList	')'		6298076	1					
ANR	6298596	Argument	')'		6298076	0					
ANR	6298597	PrimaryExpression	')'		6298076	0					
ANR	6298598	ExpressionStatement	skip ( ')' )	953:2:22257:22267	6298076	5	True				
ANR	6298599	CallExpression	skip ( ')' )		6298076	0					
ANR	6298600	Callee	skip		6298076	0					
ANR	6298601	Identifier	skip		6298076	0					
ANR	6298602	ArgumentList	')'		6298076	1					
ANR	6298603	Argument	')'		6298076	0					
ANR	6298604	PrimaryExpression	')'		6298076	0					
ANR	6298605	ReturnType	static void		6298076	1					
ANR	6298606	Identifier	parse_attribute		6298076	2					
ANR	6298607	ParameterList	AttributeDef * ad		6298076	3					
ANR	6298608	Parameter	AttributeDef * ad	815:28:19380:19395	6298076	0	True				
ANR	6298609	ParameterType	AttributeDef *		6298076	0					
ANR	6298610	Identifier	ad		6298076	1					
ANR	6298611	CFGEntryNode	ENTRY		6298076		True				
ANR	6298612	CFGExitNode	EXIT		6298076		True				
ANR	6298613	Symbol	ad -> func_call		6298076						
ANR	6298614	Symbol	ad -> func_import		6298076						
ANR	6298615	Symbol	expr_const		6298076						
ANR	6298616	Symbol	tok_alloc		6298076						
ANR	6298617	Symbol	* tokc . cstr		6298076						
ANR	6298618	Symbol	get_tok_str		6298076						
ANR	6298619	Symbol	ad -> packed		6298076						
ANR	6298620	Symbol	VT_INT16		6298076						
ANR	6298621	Symbol	ad -> alias_target		6298076						
ANR	6298622	Symbol	* ad		6298076						
ANR	6298623	Symbol	* tcc_state		6298076						
ANR	6298624	Symbol	ad -> func_export		6298076						
ANR	6298625	Symbol	MAX_ALIGN		6298076						
ANR	6298626	Symbol	tok		6298076						
ANR	6298627	Symbol	TOK_ATTRIBUTE1		6298076						
ANR	6298628	Symbol	tokc . cstr		6298076						
ANR	6298629	Symbol	TOK_ATTRIBUTE2		6298076						
ANR	6298630	Symbol	ad -> aligned		6298076						
ANR	6298631	Symbol	FUNC_STDCALL		6298076						
ANR	6298632	Symbol	ad -> mode		6298076						
ANR	6298633	Symbol	VT_INT32		6298076						
ANR	6298634	Symbol	tcc_state		6298076						
ANR	6298635	Symbol	ad		6298076						
ANR	6298636	Symbol	NULL		6298076						
ANR	6298637	Symbol	TOK_IDENT		6298076						
ANR	6298638	Symbol	tokc . cstr -> size		6298076						
ANR	6298639	Symbol	TOK_STR		6298076						
ANR	6298640	Symbol	tokc		6298076						
ANR	6298641	Symbol	FUNC_CDECL		6298076						
ANR	6298642	Symbol	* tok_alloc		6298076						
ANR	6298643	Symbol	FUNC_FASTCALL1		6298076						
ANR	6298644	Symbol	* tokc		6298076						
ANR	6298645	Symbol	parenthesis		6298076						
ANR	6298646	Symbol	n		6298076						
ANR	6298647	Symbol	tcc_state -> warn_unsupported		6298076						
ANR	6298648	Symbol	"tok_alloc ( ( char * ) tokc . cstr -> data , tokc . cstr -> size - 1 ) -> tok"		6298076						
ANR	6298649	Symbol	FUNC_FASTCALLW		6298076						
ANR	6298650	Symbol	t		6298076						
ANR	6298651	Symbol	tokc . cstr -> data		6298076						
ANR	6298652	Symbol	VT_INT64		6298076						
ANR	6298653	Symbol	ad -> weak		6298076						
ANR	6298654	Function	struct_decl	958:0:22355:29919							
ANR	6298655	FunctionDef	"struct_decl (CType * type , int u)"		6298654	0					
ANR	6298656	CompoundStatement		958:44:22399:29919	6298654	0					
ANR	6298657	IdentifierDeclStatement	"int a , v , size , align , maxalign , offset ;"	959:1:22402:22441	6298654	0	True				
ANR	6298658	IdentifierDecl	a		6298654	0					
ANR	6298659	IdentifierDeclType	int		6298654	0					
ANR	6298660	Identifier	a		6298654	1					
ANR	6298661	IdentifierDecl	v		6298654	1					
ANR	6298662	IdentifierDeclType	int		6298654	0					
ANR	6298663	Identifier	v		6298654	1					
ANR	6298664	IdentifierDecl	size		6298654	2					
ANR	6298665	IdentifierDeclType	int		6298654	0					
ANR	6298666	Identifier	size		6298654	1					
ANR	6298667	IdentifierDecl	align		6298654	3					
ANR	6298668	IdentifierDeclType	int		6298654	0					
ANR	6298669	Identifier	align		6298654	1					
ANR	6298670	IdentifierDecl	maxalign		6298654	4					
ANR	6298671	IdentifierDeclType	int		6298654	0					
ANR	6298672	Identifier	maxalign		6298654	1					
ANR	6298673	IdentifierDecl	offset		6298654	5					
ANR	6298674	IdentifierDeclType	int		6298654	0					
ANR	6298675	Identifier	offset		6298654	1					
ANR	6298676	IdentifierDeclStatement	long long c = 0 ;	960:1:22444:22459	6298654	1	True				
ANR	6298677	IdentifierDecl	c = 0		6298654	0					
ANR	6298678	IdentifierDeclType	long long		6298654	0					
ANR	6298679	Identifier	c		6298654	1					
ANR	6298680	AssignmentExpression	c = 0		6298654	2		=			
ANR	6298681	Identifier	c		6298654	0					
ANR	6298682	PrimaryExpression	0		6298654	1					
ANR	6298683	IdentifierDeclStatement	"int bit_size , bit_pos , bsize , bt , lbit_pos , prevbt ;"	961:1:22462:22512	6298654	2	True				
ANR	6298684	IdentifierDecl	bit_size		6298654	0					
ANR	6298685	IdentifierDeclType	int		6298654	0					
ANR	6298686	Identifier	bit_size		6298654	1					
ANR	6298687	IdentifierDecl	bit_pos		6298654	1					
ANR	6298688	IdentifierDeclType	int		6298654	0					
ANR	6298689	Identifier	bit_pos		6298654	1					
ANR	6298690	IdentifierDecl	bsize		6298654	2					
ANR	6298691	IdentifierDeclType	int		6298654	0					
ANR	6298692	Identifier	bsize		6298654	1					
ANR	6298693	IdentifierDecl	bt		6298654	3					
ANR	6298694	IdentifierDeclType	int		6298654	0					
ANR	6298695	Identifier	bt		6298654	1					
ANR	6298696	IdentifierDecl	lbit_pos		6298654	4					
ANR	6298697	IdentifierDeclType	int		6298654	0					
ANR	6298698	Identifier	lbit_pos		6298654	1					
ANR	6298699	IdentifierDecl	prevbt		6298654	5					
ANR	6298700	IdentifierDeclType	int		6298654	0					
ANR	6298701	Identifier	prevbt		6298654	1					
ANR	6298702	IdentifierDeclStatement	char buf [ STRING_MAX_SIZE + 1 ] ;	962:1:22515:22544	6298654	3	True				
ANR	6298703	IdentifierDecl	buf [ STRING_MAX_SIZE + 1 ]		6298654	0					
ANR	6298704	IdentifierDeclType	char [ STRING_MAX_SIZE + 1 ]		6298654	0					
ANR	6298705	Identifier	buf		6298654	1					
ANR	6298706	AdditiveExpression	STRING_MAX_SIZE + 1		6298654	2		+			
ANR	6298707	Identifier	STRING_MAX_SIZE		6298654	0					
ANR	6298708	PrimaryExpression	1		6298654	1					
ANR	6298709	IdentifierDeclStatement	"Sym * s , * ss , * ass , * * ps ;"	963:1:22547:22570	6298654	4	True				
ANR	6298710	IdentifierDecl	* s		6298654	0					
ANR	6298711	IdentifierDeclType	Sym *		6298654	0					
ANR	6298712	Identifier	s		6298654	1					
ANR	6298713	IdentifierDecl	* ss		6298654	1					
ANR	6298714	IdentifierDeclType	Sym *		6298654	0					
ANR	6298715	Identifier	ss		6298654	1					
ANR	6298716	IdentifierDecl	* ass		6298654	2					
ANR	6298717	IdentifierDeclType	Sym *		6298654	0					
ANR	6298718	Identifier	ass		6298654	1					
ANR	6298719	IdentifierDecl	* * ps		6298654	3					
ANR	6298720	IdentifierDeclType	Sym * *		6298654	0					
ANR	6298721	Identifier	ps		6298654	1					
ANR	6298722	IdentifierDeclStatement	AttributeDef ad ;	964:1:22573:22588	6298654	5	True				
ANR	6298723	IdentifierDecl	ad		6298654	0					
ANR	6298724	IdentifierDeclType	AttributeDef		6298654	0					
ANR	6298725	Identifier	ad		6298654	1					
ANR	6298726	IdentifierDeclStatement	const char * name = NULL ;	965:1:22591:22614	6298654	6	True				
ANR	6298727	IdentifierDecl	* name = NULL		6298654	0					
ANR	6298728	IdentifierDeclType	const char *		6298654	0					
ANR	6298729	Identifier	name		6298654	1					
ANR	6298730	AssignmentExpression	* name = NULL		6298654	2		=			
ANR	6298731	Identifier	NULL		6298654	0					
ANR	6298732	Identifier	NULL		6298654	1					
ANR	6298733	ExpressionStatement	"STACK_NEW0 ( CType , type1 )"	966:1:22617:22642	6298654	7	True				
ANR	6298734	CallExpression	"STACK_NEW0 ( CType , type1 )"		6298654	0					
ANR	6298735	Callee	STACK_NEW0		6298654	0					
ANR	6298736	Identifier	STACK_NEW0		6298654	0					
ANR	6298737	ArgumentList	CType		6298654	1					
ANR	6298738	Argument	CType		6298654	0					
ANR	6298739	Identifier	CType		6298654	0					
ANR	6298740	Argument	type1		6298654	1					
ANR	6298741	Identifier	type1		6298654	0					
ANR	6298742	ExpressionStatement	"STACK_NEW0 ( CType , btype )"	967:1:22645:22670	6298654	8	True				
ANR	6298743	CallExpression	"STACK_NEW0 ( CType , btype )"		6298654	0					
ANR	6298744	Callee	STACK_NEW0		6298654	0					
ANR	6298745	Identifier	STACK_NEW0		6298654	0					
ANR	6298746	ArgumentList	CType		6298654	1					
ANR	6298747	Argument	CType		6298654	0					
ANR	6298748	Identifier	CType		6298654	0					
ANR	6298749	Argument	btype		6298654	1					
ANR	6298750	Identifier	btype		6298654	0					
ANR	6298751	ExpressionStatement	a = tok	969:1:22674:22681	6298654	9	True				
ANR	6298752	AssignmentExpression	a = tok		6298654	0		=			
ANR	6298753	Identifier	a		6298654	0					
ANR	6298754	Identifier	tok		6298654	1					
ANR	6298755	ExpressionStatement	next ( )	970:1:22704:22711	6298654	10	True				
ANR	6298756	CallExpression	next ( )		6298654	0					
ANR	6298757	Callee	next		6298654	0					
ANR	6298758	Identifier	next		6298654	0					
ANR	6298759	ArgumentList			6298654	1					
ANR	6298760	ExpressionStatement	"name = get_tok_str ( tok , NULL )"	971:1:22714:22744	6298654	11	True				
ANR	6298761	AssignmentExpression	"name = get_tok_str ( tok , NULL )"		6298654	0		=			
ANR	6298762	Identifier	name		6298654	0					
ANR	6298763	CallExpression	"get_tok_str ( tok , NULL )"		6298654	1					
ANR	6298764	Callee	get_tok_str		6298654	0					
ANR	6298765	Identifier	get_tok_str		6298654	0					
ANR	6298766	ArgumentList	tok		6298654	1					
ANR	6298767	Argument	tok		6298654	0					
ANR	6298768	Identifier	tok		6298654	0					
ANR	6298769	Argument	NULL		6298654	1					
ANR	6298770	Identifier	NULL		6298654	0					
ANR	6298771	IfStatement	if ( tok != '{' )		6298654	12					
ANR	6298772	Condition	tok != '{'	972:5:22751:22760	6298654	0	True				
ANR	6298773	EqualityExpression	tok != '{'		6298654	0		!=			
ANR	6298774	Identifier	tok		6298654	0					
ANR	6298775	PrimaryExpression	'{'		6298654	1					
ANR	6298776	CompoundStatement		15:17:363:363	6298654	1					
ANR	6298777	ExpressionStatement	v = tok	973:2:22767:22774	6298654	0	True				
ANR	6298778	AssignmentExpression	v = tok		6298654	0		=			
ANR	6298779	Identifier	v		6298654	0					
ANR	6298780	Identifier	tok		6298654	1					
ANR	6298781	ExpressionStatement	next ( )	974:2:22778:22785	6298654	1	True				
ANR	6298782	CallExpression	next ( )		6298654	0					
ANR	6298783	Callee	next		6298654	0					
ANR	6298784	Identifier	next		6298654	0					
ANR	6298785	ArgumentList			6298654	1					
ANR	6298786	IfStatement	if ( v < TOK_IDENT )		6298654	2					
ANR	6298787	Condition	v < TOK_IDENT	976:6:22836:22848	6298654	0	True				
ANR	6298788	RelationalExpression	v < TOK_IDENT		6298654	0		<			
ANR	6298789	Identifier	v		6298654	0					
ANR	6298790	Identifier	TOK_IDENT		6298654	1					
ANR	6298791	CompoundStatement		19:21:451:451	6298654	1					
ANR	6298792	ExpressionStatement	"expect ( ""struct/union/enum name"" )"	977:3:22856:22889	6298654	0	True				
ANR	6298793	CallExpression	"expect ( ""struct/union/enum name"" )"		6298654	0					
ANR	6298794	Callee	expect		6298654	0					
ANR	6298795	Identifier	expect		6298654	0					
ANR	6298796	ArgumentList	"""struct/union/enum name"""		6298654	1					
ANR	6298797	Argument	"""struct/union/enum name"""		6298654	0					
ANR	6298798	PrimaryExpression	"""struct/union/enum name"""		6298654	0					
ANR	6298799	ExpressionStatement	s = struct_find ( v )	979:2:22897:22916	6298654	3	True				
ANR	6298800	AssignmentExpression	s = struct_find ( v )		6298654	0		=			
ANR	6298801	Identifier	s		6298654	0					
ANR	6298802	CallExpression	struct_find ( v )		6298654	1					
ANR	6298803	Callee	struct_find		6298654	0					
ANR	6298804	Identifier	struct_find		6298654	0					
ANR	6298805	ArgumentList	v		6298654	1					
ANR	6298806	Argument	v		6298654	0					
ANR	6298807	Identifier	v		6298654	0					
ANR	6298808	IfStatement	if ( s )		6298654	4					
ANR	6298809	Condition	s	980:6:22924:22924	6298654	0	True				
ANR	6298810	Identifier	s		6298654	0					
ANR	6298811	CompoundStatement		23:9:527:527	6298654	1					
ANR	6298812	IfStatement	if ( s -> type . t != a )		6298654	0					
ANR	6298813	Condition	s -> type . t != a	981:7:22936:22949	6298654	0	True				
ANR	6298814	EqualityExpression	s -> type . t != a		6298654	0		!=			
ANR	6298815	MemberAccess	s -> type . t		6298654	0					
ANR	6298816	PtrMemberAccess	s -> type		6298654	0					
ANR	6298817	Identifier	s		6298654	0					
ANR	6298818	Identifier	type		6298654	1					
ANR	6298819	Identifier	t		6298654	1					
ANR	6298820	Identifier	a		6298654	1					
ANR	6298821	CompoundStatement		24:23:552:552	6298654	1					
ANR	6298822	ExpressionStatement	"TCC_ERR ( ""invalid type"" )"	982:4:22958:22982	6298654	0	True				
ANR	6298823	CallExpression	"TCC_ERR ( ""invalid type"" )"		6298654	0					
ANR	6298824	Callee	TCC_ERR		6298654	0					
ANR	6298825	Identifier	TCC_ERR		6298654	0					
ANR	6298826	ArgumentList	"""invalid type"""		6298654	1					
ANR	6298827	Argument	"""invalid type"""		6298654	0					
ANR	6298828	PrimaryExpression	"""invalid type"""		6298654	0					
ANR	6298829	GotoStatement	goto do_decl ;	984:3:22992:23004	6298654	1	True				
ANR	6298830	Identifier	do_decl		6298654	0					
ANR	6298831	ElseStatement	else		6298654	0					
ANR	6298832	CompoundStatement		29:8:618:618	6298654	0					
ANR	6298833	ExpressionStatement	v = anon_sym ++	987:2:23022:23036	6298654	0	True				
ANR	6298834	AssignmentExpression	v = anon_sym ++		6298654	0		=			
ANR	6298835	Identifier	v		6298654	0					
ANR	6298836	PostIncDecOperationExpression	anon_sym ++		6298654	1					
ANR	6298837	Identifier	anon_sym		6298654	0					
ANR	6298838	IncDec	++		6298654	1					
ANR	6298839	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%u"" , v - SYM_FIRST_ANOM )"	988:2:23040:23093	6298654	1	True				
ANR	6298840	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%u"" , v - SYM_FIRST_ANOM )"		6298654	0					
ANR	6298841	Callee	snprintf		6298654	0					
ANR	6298842	Identifier	snprintf		6298654	0					
ANR	6298843	ArgumentList	buf		6298654	1					
ANR	6298844	Argument	buf		6298654	0					
ANR	6298845	Identifier	buf		6298654	0					
ANR	6298846	Argument	sizeof ( buf )		6298654	1					
ANR	6298847	SizeofExpression	sizeof ( buf )		6298654	0					
ANR	6298848	Sizeof	sizeof		6298654	0					
ANR	6298849	SizeofOperand	buf		6298654	1					
ANR	6298850	Argument	"""%u"""		6298654	2					
ANR	6298851	PrimaryExpression	"""%u"""		6298654	0					
ANR	6298852	Argument	v - SYM_FIRST_ANOM		6298654	3					
ANR	6298853	AdditiveExpression	v - SYM_FIRST_ANOM		6298654	0		-			
ANR	6298854	Identifier	v		6298654	0					
ANR	6298855	Identifier	SYM_FIRST_ANOM		6298654	1					
ANR	6298856	ExpressionStatement	name = buf	989:2:23097:23107	6298654	2	True				
ANR	6298857	AssignmentExpression	name = buf		6298654	0		=			
ANR	6298858	Identifier	name		6298654	0					
ANR	6298859	Identifier	buf		6298654	1					
ANR	6298860	ExpressionStatement	type1 . t = a	991:1:23113:23124	6298654	13	True				
ANR	6298861	AssignmentExpression	type1 . t = a		6298654	0		=			
ANR	6298862	MemberAccess	type1 . t		6298654	0					
ANR	6298863	Identifier	type1		6298654	0					
ANR	6298864	Identifier	t		6298654	1					
ANR	6298865	Identifier	a		6298654	1					
ANR	6298866	ExpressionStatement	"s = sym_push ( v | SYM_STRUCT , & type1 , 0 , - 1 )"	993:1:23181:23225	6298654	14	True				
ANR	6298867	AssignmentExpression	"s = sym_push ( v | SYM_STRUCT , & type1 , 0 , - 1 )"		6298654	0		=			
ANR	6298868	Identifier	s		6298654	0					
ANR	6298869	CallExpression	"sym_push ( v | SYM_STRUCT , & type1 , 0 , - 1 )"		6298654	1					
ANR	6298870	Callee	sym_push		6298654	0					
ANR	6298871	Identifier	sym_push		6298654	0					
ANR	6298872	ArgumentList	v | SYM_STRUCT		6298654	1					
ANR	6298873	Argument	v | SYM_STRUCT		6298654	0					
ANR	6298874	InclusiveOrExpression	v | SYM_STRUCT		6298654	0		|			
ANR	6298875	Identifier	v		6298654	0					
ANR	6298876	Identifier	SYM_STRUCT		6298654	1					
ANR	6298877	Argument	& type1		6298654	1					
ANR	6298878	UnaryOperationExpression	& type1		6298654	0					
ANR	6298879	UnaryOperator	&		6298654	0					
ANR	6298880	Identifier	type1		6298654	1					
ANR	6298881	Argument	0		6298654	2					
ANR	6298882	PrimaryExpression	0		6298654	0					
ANR	6298883	Argument	- 1		6298654	3					
ANR	6298884	UnaryOperationExpression	- 1		6298654	0					
ANR	6298885	UnaryOperator	-		6298654	0					
ANR	6298886	PrimaryExpression	1		6298654	1					
ANR	6298887	IfStatement	if ( ! s )		6298654	15					
ANR	6298888	Condition	! s	994:5:23232:23233	6298654	0	True				
ANR	6298889	UnaryOperationExpression	! s		6298654	0					
ANR	6298890	UnaryOperator	!		6298654	0					
ANR	6298891	Identifier	s		6298654	1					
ANR	6298892	CompoundStatement		37:9:836:836	6298654	1					
ANR	6298893	ReturnStatement	return ;	995:2:23240:23246	6298654	0	True				
ANR	6298894	ExpressionStatement	s -> r = 0	997:1:23252:23260	6298654	16	True				
ANR	6298895	AssignmentExpression	s -> r = 0		6298654	0		=			
ANR	6298896	PtrMemberAccess	s -> r		6298654	0					
ANR	6298897	Identifier	s		6298654	0					
ANR	6298898	Identifier	r		6298654	1					
ANR	6298899	PrimaryExpression	0		6298654	1					
ANR	6298900	Label	do_decl :	1000:0:23411:23418	6298654	17	True				
ANR	6298901	Identifier	do_decl		6298654	0					
ANR	6298902	ExpressionStatement	type -> t = u	1001:1:23421:23432	6298654	18	True				
ANR	6298903	AssignmentExpression	type -> t = u		6298654	0		=			
ANR	6298904	PtrMemberAccess	type -> t		6298654	0					
ANR	6298905	Identifier	type		6298654	0					
ANR	6298906	Identifier	t		6298654	1					
ANR	6298907	Identifier	u		6298654	1					
ANR	6298908	ExpressionStatement	type -> ref = s	1002:1:23435:23448	6298654	19	True				
ANR	6298909	AssignmentExpression	type -> ref = s		6298654	0		=			
ANR	6298910	PtrMemberAccess	type -> ref		6298654	0					
ANR	6298911	Identifier	type		6298654	0					
ANR	6298912	Identifier	ref		6298654	1					
ANR	6298913	Identifier	s		6298654	1					
ANR	6298914	IfStatement	if ( tok == '{' )		6298654	20					
ANR	6298915	Condition	tok == '{'	1004:5:23456:23465	6298654	0	True				
ANR	6298916	EqualityExpression	tok == '{'		6298654	0		==			
ANR	6298917	Identifier	tok		6298654	0					
ANR	6298918	PrimaryExpression	'{'		6298654	1					
ANR	6298919	CompoundStatement		47:17:1068:1068	6298654	1					
ANR	6298920	ExpressionStatement	next ( )	1005:2:23472:23479	6298654	0	True				
ANR	6298921	CallExpression	next ( )		6298654	0					
ANR	6298922	Callee	next		6298654	0					
ANR	6298923	Identifier	next		6298654	0					
ANR	6298924	ArgumentList			6298654	1					
ANR	6298925	IfStatement	if ( s -> c != - 1 )		6298654	1					
ANR	6298926	Condition	s -> c != - 1	1006:6:23487:23496	6298654	0	True				
ANR	6298927	EqualityExpression	s -> c != - 1		6298654	0		!=			
ANR	6298928	PtrMemberAccess	s -> c		6298654	0					
ANR	6298929	Identifier	s		6298654	0					
ANR	6298930	Identifier	c		6298654	1					
ANR	6298931	UnaryOperationExpression	- 1		6298654	1					
ANR	6298932	UnaryOperator	-		6298654	0					
ANR	6298933	PrimaryExpression	1		6298654	1					
ANR	6298934	CompoundStatement		49:18:1099:1099	6298654	1					
ANR	6298935	ExpressionStatement	"TCC_ERR ( ""struct/union/enum already defined"" )"	1007:3:23504:23549	6298654	0	True				
ANR	6298936	CallExpression	"TCC_ERR ( ""struct/union/enum already defined"" )"		6298654	0					
ANR	6298937	Callee	TCC_ERR		6298654	0					
ANR	6298938	Identifier	TCC_ERR		6298654	0					
ANR	6298939	ArgumentList	"""struct/union/enum already defined"""		6298654	1					
ANR	6298940	Argument	"""struct/union/enum already defined"""		6298654	0					
ANR	6298941	PrimaryExpression	"""struct/union/enum already defined"""		6298654	0					
ANR	6298942	Statement	c	1010:2:23581:23581	6298654	2	True				
ANR	6298943	Statement	=	1010:4:23583:23583	6298654	3	True				
ANR	6298944	Statement	0L	1010:6:23585:23586	6298654	4	True				
ANR	6298945	ExpressionStatement	L	1010:8:23587:23588	6298654	5	True				
ANR	6298946	Identifier	L		6298654	0					
ANR	6298947	IfStatement	if ( a == TOK_ENUM )		6298654	6					
ANR	6298948	Condition	a == TOK_ENUM	1012:6:23636:23648	6298654	0	True				
ANR	6298949	EqualityExpression	a == TOK_ENUM		6298654	0		==			
ANR	6298950	Identifier	a		6298654	0					
ANR	6298951	Identifier	TOK_ENUM		6298654	1					
ANR	6298952	CompoundStatement		55:21:1251:1251	6298654	1					
ANR	6298953	IfStatement	"if ( ! strcmp ( name , ""{"" ) )"		6298654	0					
ANR	6298954	Condition	"! strcmp ( name , ""{"" )"	1013:7:23660:23678	6298654	0	True				
ANR	6298955	UnaryOperationExpression	"! strcmp ( name , ""{"" )"		6298654	0					
ANR	6298956	UnaryOperator	!		6298654	0					
ANR	6298957	CallExpression	"strcmp ( name , ""{"" )"		6298654	1					
ANR	6298958	Callee	strcmp		6298654	0					
ANR	6298959	Identifier	strcmp		6298654	0					
ANR	6298960	ArgumentList	name		6298654	1					
ANR	6298961	Argument	name		6298654	0					
ANR	6298962	Identifier	name		6298654	0					
ANR	6298963	Argument	"""{"""		6298654	1					
ANR	6298964	PrimaryExpression	"""{"""		6298654	0					
ANR	6298965	CompoundStatement		56:28:1281:1281	6298654	1					
ANR	6298966	ExpressionStatement	"fprintf ( stderr , ""anonymous enums are ignored\\n"" )"	1015:4:23702:23751	6298654	0	True				
ANR	6298967	CallExpression	"fprintf ( stderr , ""anonymous enums are ignored\\n"" )"		6298654	0					
ANR	6298968	Callee	fprintf		6298654	0					
ANR	6298969	Identifier	fprintf		6298654	0					
ANR	6298970	ArgumentList	stderr		6298654	1					
ANR	6298971	Argument	stderr		6298654	0					
ANR	6298972	Identifier	stderr		6298654	0					
ANR	6298973	Argument	"""anonymous enums are ignored\\n"""		6298654	1					
ANR	6298974	PrimaryExpression	"""anonymous enums are ignored\\n"""		6298654	0					
ANR	6298975	WhileStatement	while ( tcc_nerr ( ) == 0 )		6298654	1					
ANR	6298976	Condition	tcc_nerr ( ) == 0	1017:10:23768:23783	6298654	0	True				
ANR	6298977	EqualityExpression	tcc_nerr ( ) == 0		6298654	0		==			
ANR	6298978	CallExpression	tcc_nerr ( )		6298654	0					
ANR	6298979	Callee	tcc_nerr		6298654	0					
ANR	6298980	Identifier	tcc_nerr		6298654	0					
ANR	6298981	ArgumentList			6298654	1					
ANR	6298982	PrimaryExpression	0		6298654	1					
ANR	6298983	CompoundStatement		60:28:1386:1386	6298654	1					
ANR	6298984	ExpressionStatement	v = tok	1018:4:23792:23799	6298654	0	True				
ANR	6298985	AssignmentExpression	v = tok		6298654	0		=			
ANR	6298986	Identifier	v		6298654	0					
ANR	6298987	Identifier	tok		6298654	1					
ANR	6298988	IfStatement	if ( v < TOK_UIDENT )		6298654	1					
ANR	6298989	Condition	v < TOK_UIDENT	1019:8:23809:23822	6298654	0	True				
ANR	6298990	RelationalExpression	v < TOK_UIDENT		6298654	0		<			
ANR	6298991	Identifier	v		6298654	0					
ANR	6298992	Identifier	TOK_UIDENT		6298654	1					
ANR	6298993	CompoundStatement		62:24:1425:1425	6298654	1					
ANR	6298994	ExpressionStatement	"expect ( ""identifier"" )"	1020:5:23832:23853	6298654	0	True				
ANR	6298995	CallExpression	"expect ( ""identifier"" )"		6298654	0					
ANR	6298996	Callee	expect		6298654	0					
ANR	6298997	Identifier	expect		6298654	0					
ANR	6298998	ArgumentList	"""identifier"""		6298654	1					
ANR	6298999	Argument	"""identifier"""		6298654	0					
ANR	6299000	PrimaryExpression	"""identifier"""		6298654	0					
ANR	6299001	ExpressionStatement	next ( )	1022:4:23865:23872	6298654	2	True				
ANR	6299002	CallExpression	next ( )		6298654	0					
ANR	6299003	Callee	next		6298654	0					
ANR	6299004	Identifier	next		6298654	0					
ANR	6299005	ArgumentList			6298654	1					
ANR	6299006	IfStatement	if ( tok == '=' )		6298654	3					
ANR	6299007	Condition	tok == '='	1023:8:23882:23891	6298654	0	True				
ANR	6299008	EqualityExpression	tok == '='		6298654	0		==			
ANR	6299009	Identifier	tok		6298654	0					
ANR	6299010	PrimaryExpression	'='		6298654	1					
ANR	6299011	CompoundStatement		66:20:1494:1494	6298654	1					
ANR	6299012	ExpressionStatement	next ( )	1024:5:23901:23908	6298654	0	True				
ANR	6299013	CallExpression	next ( )		6298654	0					
ANR	6299014	Callee	next		6298654	0					
ANR	6299015	Identifier	next		6298654	0					
ANR	6299016	ArgumentList			6298654	1					
ANR	6299017	ExpressionStatement	c = expr_const ( )	1025:5:23915:23932	6298654	1	True				
ANR	6299018	AssignmentExpression	c = expr_const ( )		6298654	0		=			
ANR	6299019	Identifier	c		6298654	0					
ANR	6299020	CallExpression	expr_const ( )		6298654	1					
ANR	6299021	Callee	expr_const		6298654	0					
ANR	6299022	Identifier	expr_const		6298654	0					
ANR	6299023	ArgumentList			6298654	1					
ANR	6299024	IfStatement	"if ( strcmp ( name , ""{"" ) )"		6298654	4					
ANR	6299025	Condition	"strcmp ( name , ""{"" )"	1027:8:23948:23965	6298654	0	True				
ANR	6299026	CallExpression	"strcmp ( name , ""{"" )"		6298654	0					
ANR	6299027	Callee	strcmp		6298654	0					
ANR	6299028	Identifier	strcmp		6298654	0					
ANR	6299029	ArgumentList	name		6298654	1					
ANR	6299030	Argument	name		6298654	0					
ANR	6299031	Identifier	name		6298654	0					
ANR	6299032	Argument	"""{"""		6298654	1					
ANR	6299033	PrimaryExpression	"""{"""		6298654	0					
ANR	6299034	CompoundStatement		71:5:1575:1611	6298654	1					
ANR	6299035	IdentifierDeclStatement	"char * varstr = get_tok_str ( v , NULL ) ;"	1028:5:23975:24011	6298654	0	True				
ANR	6299036	IdentifierDecl	"* varstr = get_tok_str ( v , NULL )"		6298654	0					
ANR	6299037	IdentifierDeclType	char *		6298654	0					
ANR	6299038	Identifier	varstr		6298654	1					
ANR	6299039	AssignmentExpression	"* varstr = get_tok_str ( v , NULL )"		6298654	2		=			
ANR	6299040	Identifier	varstr		6298654	0					
ANR	6299041	CallExpression	"get_tok_str ( v , NULL )"		6298654	1					
ANR	6299042	Callee	get_tok_str		6298654	0					
ANR	6299043	Identifier	get_tok_str		6298654	0					
ANR	6299044	ArgumentList	v		6298654	1					
ANR	6299045	Argument	v		6298654	0					
ANR	6299046	Identifier	v		6298654	0					
ANR	6299047	Argument	NULL		6298654	1					
ANR	6299048	Identifier	NULL		6298654	0					
ANR	6299049	ExpressionStatement	"tcc_appendf ( ""%s=enum\\n"" , name )"	1029:5:24018:24049	6298654	1	True				
ANR	6299050	CallExpression	"tcc_appendf ( ""%s=enum\\n"" , name )"		6298654	0					
ANR	6299051	Callee	tcc_appendf		6298654	0					
ANR	6299052	Identifier	tcc_appendf		6298654	0					
ANR	6299053	ArgumentList	"""%s=enum\\n"""		6298654	1					
ANR	6299054	Argument	"""%s=enum\\n"""		6298654	0					
ANR	6299055	PrimaryExpression	"""%s=enum\\n"""		6298654	0					
ANR	6299056	Argument	name		6298654	1					
ANR	6299057	Identifier	name		6298654	0					
ANR	6299058	ExpressionStatement	"tcc_appendf ( ""[+]enum.%s=%s\\n"" , name , varstr )"	1030:5:24056:24100	6298654	2	True				
ANR	6299059	CallExpression	"tcc_appendf ( ""[+]enum.%s=%s\\n"" , name , varstr )"		6298654	0					
ANR	6299060	Callee	tcc_appendf		6298654	0					
ANR	6299061	Identifier	tcc_appendf		6298654	0					
ANR	6299062	ArgumentList	"""[+]enum.%s=%s\\n"""		6298654	1					
ANR	6299063	Argument	"""[+]enum.%s=%s\\n"""		6298654	0					
ANR	6299064	PrimaryExpression	"""[+]enum.%s=%s\\n"""		6298654	0					
ANR	6299065	Argument	name		6298654	1					
ANR	6299066	Identifier	name		6298654	0					
ANR	6299067	Argument	varstr		6298654	2					
ANR	6299068	Identifier	varstr		6298654	0					
ANR	6299069	Statement	tcc_appendf	1031:5:24107:24117	6298654	3	True				
ANR	6299070	Statement	(	1031:17:24119:24119	6298654	4	True				
ANR	6299071	Statement	"""enum.%s.%s=0x%"""	1031:18:24120:24135	6298654	5	True				
ANR	6299072	Statement	PFMT64x	1031:34:24136:24142	6298654	6	True				
ANR	6299073	Statement	"""\\n"""	1031:42:24144:24147	6298654	7	True				
ANR	6299074	Statement	","	1031:46:24148:24148	6298654	8	True				
ANR	6299075	Statement	name	1031:48:24150:24153	6298654	9	True				
ANR	6299076	Statement	","	1031:52:24154:24154	6298654	10	True				
ANR	6299077	Statement	varstr	1031:54:24156:24161	6298654	11	True				
ANR	6299078	Statement	","	1031:60:24162:24162	6298654	12	True				
ANR	6299079	Statement	c	1031:62:24164:24164	6298654	13	True				
ANR	6299080	Statement	)	1031:63:24165:24165	6298654	14	True				
ANR	6299081	ExpressionStatement		1031:64:24166:24166	6298654	15	True				
ANR	6299082	Statement	tcc_appendf	1032:5:24173:24183	6298654	16	True				
ANR	6299083	Statement	(	1032:17:24185:24185	6298654	17	True				
ANR	6299084	Statement	"""enum.%s.0x%"""	1032:18:24186:24198	6298654	18	True				
ANR	6299085	Statement	PFMT64x	1032:31:24199:24205	6298654	19	True				
ANR	6299086	Statement	"""=%s\\n"""	1032:39:24207:24213	6298654	20	True				
ANR	6299087	Statement	","	1032:46:24214:24214	6298654	21	True				
ANR	6299088	Statement	name	1032:48:24216:24219	6298654	22	True				
ANR	6299089	Statement	","	1032:52:24220:24220	6298654	23	True				
ANR	6299090	Statement	c	1032:54:24222:24222	6298654	24	True				
ANR	6299091	Statement	","	1032:55:24223:24223	6298654	25	True				
ANR	6299092	Statement	varstr	1032:57:24225:24230	6298654	26	True				
ANR	6299093	Statement	)	1032:63:24231:24231	6298654	27	True				
ANR	6299094	ExpressionStatement		1032:64:24232:24232	6298654	28	True				
ANR	6299095	ExpressionStatement	"ss = sym_push ( v , & int64_type , VT_CONST , c )"	1037:4:24427:24470	6298654	5	True				
ANR	6299096	AssignmentExpression	"ss = sym_push ( v , & int64_type , VT_CONST , c )"		6298654	0		=			
ANR	6299097	Identifier	ss		6298654	0					
ANR	6299098	CallExpression	"sym_push ( v , & int64_type , VT_CONST , c )"		6298654	1					
ANR	6299099	Callee	sym_push		6298654	0					
ANR	6299100	Identifier	sym_push		6298654	0					
ANR	6299101	ArgumentList	v		6298654	1					
ANR	6299102	Argument	v		6298654	0					
ANR	6299103	Identifier	v		6298654	0					
ANR	6299104	Argument	& int64_type		6298654	1					
ANR	6299105	UnaryOperationExpression	& int64_type		6298654	0					
ANR	6299106	UnaryOperator	&		6298654	0					
ANR	6299107	Identifier	int64_type		6298654	1					
ANR	6299108	Argument	VT_CONST		6298654	2					
ANR	6299109	Identifier	VT_CONST		6298654	0					
ANR	6299110	Argument	c		6298654	3					
ANR	6299111	Identifier	c		6298654	0					
ANR	6299112	IfStatement	if ( ! ss )		6298654	6					
ANR	6299113	Condition	! ss	1038:8:24480:24482	6298654	0	True				
ANR	6299114	UnaryOperationExpression	! ss		6298654	0					
ANR	6299115	UnaryOperator	!		6298654	0					
ANR	6299116	Identifier	ss		6298654	1					
ANR	6299117	CompoundStatement		81:13:2085:2085	6298654	1					
ANR	6299118	ReturnStatement	return ;	1039:5:24492:24498	6298654	0	True				
ANR	6299119	ExpressionStatement	ss -> type . t |= VT_STATIC	1041:4:24510:24533	6298654	7	True				
ANR	6299120	AssignmentExpression	ss -> type . t |= VT_STATIC		6298654	0		|=			
ANR	6299121	MemberAccess	ss -> type . t		6298654	0					
ANR	6299122	PtrMemberAccess	ss -> type		6298654	0					
ANR	6299123	Identifier	ss		6298654	0					
ANR	6299124	Identifier	type		6298654	1					
ANR	6299125	Identifier	t		6298654	1					
ANR	6299126	Identifier	VT_STATIC		6298654	1					
ANR	6299127	IfStatement	"if ( tok != ',' )"		6298654	8					
ANR	6299128	Condition	"tok != ','"	1042:8:24543:24552	6298654	0	True				
ANR	6299129	EqualityExpression	"tok != ','"		6298654	0		!=			
ANR	6299130	Identifier	tok		6298654	0					
ANR	6299131	PrimaryExpression	"','"		6298654	1					
ANR	6299132	CompoundStatement		85:20:2155:2155	6298654	1					
ANR	6299133	BreakStatement	break ;	1043:5:24562:24567	6298654	0	True				
ANR	6299134	ExpressionStatement	next ( )	1045:4:24579:24586	6298654	9	True				
ANR	6299135	CallExpression	next ( )		6298654	0					
ANR	6299136	Callee	next		6298654	0					
ANR	6299137	Identifier	next		6298654	0					
ANR	6299138	ArgumentList			6298654	1					
ANR	6299139	ExpressionStatement	c ++	1046:4:24592:24595	6298654	10	True				
ANR	6299140	PostIncDecOperationExpression	c ++		6298654	0					
ANR	6299141	Identifier	c		6298654	0					
ANR	6299142	IncDec	++		6298654	1					
ANR	6299143	IfStatement	if ( tok == '}' )		6298654	11					
ANR	6299144	Condition	tok == '}'	1048:8:24648:24657	6298654	0	True				
ANR	6299145	EqualityExpression	tok == '}'		6298654	0		==			
ANR	6299146	Identifier	tok		6298654	0					
ANR	6299147	PrimaryExpression	'}'		6298654	1					
ANR	6299148	CompoundStatement		91:20:2260:2260	6298654	1					
ANR	6299149	BreakStatement	break ;	1049:5:24667:24672	6298654	0	True				
ANR	6299150	ExpressionStatement	skip ( '}' )	1052:3:24688:24698	6298654	2	True				
ANR	6299151	CallExpression	skip ( '}' )		6298654	0					
ANR	6299152	Callee	skip		6298654	0					
ANR	6299153	Identifier	skip		6298654	0					
ANR	6299154	ArgumentList	'}'		6298654	1					
ANR	6299155	Argument	'}'		6298654	0					
ANR	6299156	PrimaryExpression	'}'		6298654	0					
ANR	6299157	ElseStatement	else		6298654	0					
ANR	6299158	CompoundStatement		96:9:2309:2309	6298654	0					
ANR	6299159	ExpressionStatement	maxalign = 1	1054:3:24714:24726	6298654	0	True				
ANR	6299160	AssignmentExpression	maxalign = 1		6298654	0		=			
ANR	6299161	Identifier	maxalign		6298654	0					
ANR	6299162	PrimaryExpression	1		6298654	1					
ANR	6299163	ExpressionStatement	ps = & s -> next	1055:3:24731:24744	6298654	1	True				
ANR	6299164	AssignmentExpression	ps = & s -> next		6298654	0		=			
ANR	6299165	Identifier	ps		6298654	0					
ANR	6299166	UnaryOperationExpression	& s -> next		6298654	1					
ANR	6299167	UnaryOperator	&		6298654	0					
ANR	6299168	PtrMemberAccess	s -> next		6298654	1					
ANR	6299169	Identifier	s		6298654	0					
ANR	6299170	Identifier	next		6298654	1					
ANR	6299171	ExpressionStatement	prevbt = VT_INT32	1056:3:24749:24766	6298654	2	True				
ANR	6299172	AssignmentExpression	prevbt = VT_INT32		6298654	0		=			
ANR	6299173	Identifier	prevbt		6298654	0					
ANR	6299174	Identifier	VT_INT32		6298654	1					
ANR	6299175	ExpressionStatement	bit_pos = 0	1057:3:24771:24782	6298654	3	True				
ANR	6299176	AssignmentExpression	bit_pos = 0		6298654	0		=			
ANR	6299177	Identifier	bit_pos		6298654	0					
ANR	6299178	PrimaryExpression	0		6298654	1					
ANR	6299179	ExpressionStatement	offset = 0	1058:3:24787:24797	6298654	4	True				
ANR	6299180	AssignmentExpression	offset = 0		6298654	0		=			
ANR	6299181	Identifier	offset		6298654	0					
ANR	6299182	PrimaryExpression	0		6298654	1					
ANR	6299183	WhileStatement	while ( tok != '}' )		6298654	5					
ANR	6299184	Condition	tok != '}'	1059:10:24809:24818	6298654	0	True				
ANR	6299185	EqualityExpression	tok != '}'		6298654	0		!=			
ANR	6299186	Identifier	tok		6298654	0					
ANR	6299187	PrimaryExpression	'}'		6298654	1					
ANR	6299188	CompoundStatement		102:22:2421:2421	6298654	1					
ANR	6299189	IfStatement	"if ( ! parse_btype ( & btype , & ad ) )"		6298654	0					
ANR	6299190	Condition	"! parse_btype ( & btype , & ad )"	1060:8:24831:24856	6298654	0	True				
ANR	6299191	UnaryOperationExpression	"! parse_btype ( & btype , & ad )"		6298654	0					
ANR	6299192	UnaryOperator	!		6298654	0					
ANR	6299193	CallExpression	"parse_btype ( & btype , & ad )"		6298654	1					
ANR	6299194	Callee	parse_btype		6298654	0					
ANR	6299195	Identifier	parse_btype		6298654	0					
ANR	6299196	ArgumentList	& btype		6298654	1					
ANR	6299197	Argument	& btype		6298654	0					
ANR	6299198	UnaryOperationExpression	& btype		6298654	0					
ANR	6299199	UnaryOperator	&		6298654	0					
ANR	6299200	Identifier	btype		6298654	1					
ANR	6299201	Argument	& ad		6298654	1					
ANR	6299202	UnaryOperationExpression	& ad		6298654	0					
ANR	6299203	UnaryOperator	&		6298654	0					
ANR	6299204	Identifier	ad		6298654	1					
ANR	6299205	CompoundStatement		103:36:2459:2459	6298654	1					
ANR	6299206	ExpressionStatement	"expect ( ""bracket"" )"	1061:5:24866:24884	6298654	0	True				
ANR	6299207	CallExpression	"expect ( ""bracket"" )"		6298654	0					
ANR	6299208	Callee	expect		6298654	0					
ANR	6299209	Identifier	expect		6298654	0					
ANR	6299210	ArgumentList	"""bracket"""		6298654	1					
ANR	6299211	Argument	"""bracket"""		6298654	0					
ANR	6299212	PrimaryExpression	"""bracket"""		6298654	0					
ANR	6299213	BreakStatement	break ;	1062:5:24891:24896	6298654	1	True				
ANR	6299214	WhileStatement	while ( tcc_nerr ( ) == 0 )		6298654	1					
ANR	6299215	Condition	tcc_nerr ( ) == 0	1064:11:24915:24930	6298654	0	True				
ANR	6299216	EqualityExpression	tcc_nerr ( ) == 0		6298654	0		==			
ANR	6299217	CallExpression	tcc_nerr ( )		6298654	0					
ANR	6299218	Callee	tcc_nerr		6298654	0					
ANR	6299219	Identifier	tcc_nerr		6298654	0					
ANR	6299220	ArgumentList			6298654	1					
ANR	6299221	PrimaryExpression	0		6298654	1					
ANR	6299222	CompoundStatement		107:29:2533:2533	6298654	1					
ANR	6299223	ExpressionStatement	bit_size = - 1	1065:5:24940:24953	6298654	0	True				
ANR	6299224	AssignmentExpression	bit_size = - 1		6298654	0		=			
ANR	6299225	Identifier	bit_size		6298654	0					
ANR	6299226	UnaryOperationExpression	- 1		6298654	1					
ANR	6299227	UnaryOperator	-		6298654	0					
ANR	6299228	PrimaryExpression	1		6298654	1					
ANR	6299229	ExpressionStatement	v = 0	1066:5:24960:24965	6298654	1	True				
ANR	6299230	AssignmentExpression	v = 0		6298654	0		=			
ANR	6299231	Identifier	v		6298654	0					
ANR	6299232	PrimaryExpression	0		6298654	1					
ANR	6299233	ExpressionStatement	"memcpy ( & type1 , & btype , sizeof ( type1 ) )"	1067:5:24972:25010	6298654	2	True				
ANR	6299234	CallExpression	"memcpy ( & type1 , & btype , sizeof ( type1 ) )"		6298654	0					
ANR	6299235	Callee	memcpy		6298654	0					
ANR	6299236	Identifier	memcpy		6298654	0					
ANR	6299237	ArgumentList	& type1		6298654	1					
ANR	6299238	Argument	& type1		6298654	0					
ANR	6299239	UnaryOperationExpression	& type1		6298654	0					
ANR	6299240	UnaryOperator	&		6298654	0					
ANR	6299241	Identifier	type1		6298654	1					
ANR	6299242	Argument	& btype		6298654	1					
ANR	6299243	UnaryOperationExpression	& btype		6298654	0					
ANR	6299244	UnaryOperator	&		6298654	0					
ANR	6299245	Identifier	btype		6298654	1					
ANR	6299246	Argument	sizeof ( type1 )		6298654	2					
ANR	6299247	SizeofExpression	sizeof ( type1 )		6298654	0					
ANR	6299248	Sizeof	sizeof		6298654	0					
ANR	6299249	SizeofOperand	type1		6298654	1					
ANR	6299250	IfStatement	if ( tok != ':' )		6298654	3					
ANR	6299251	Condition	tok != ':'	1068:9:25021:25030	6298654	0	True				
ANR	6299252	EqualityExpression	tok != ':'		6298654	0		!=			
ANR	6299253	Identifier	tok		6298654	0					
ANR	6299254	PrimaryExpression	':'		6298654	1					
ANR	6299255	CompoundStatement		111:21:2633:2633	6298654	1					
ANR	6299256	ExpressionStatement	"type_decl ( & type1 , & ad , & v , TYPE_DIRECT | TYPE_ABSTRACT )"	1069:6:25041:25097	6298654	0	True				
ANR	6299257	CallExpression	"type_decl ( & type1 , & ad , & v , TYPE_DIRECT | TYPE_ABSTRACT )"		6298654	0					
ANR	6299258	Callee	type_decl		6298654	0					
ANR	6299259	Identifier	type_decl		6298654	0					
ANR	6299260	ArgumentList	& type1		6298654	1					
ANR	6299261	Argument	& type1		6298654	0					
ANR	6299262	UnaryOperationExpression	& type1		6298654	0					
ANR	6299263	UnaryOperator	&		6298654	0					
ANR	6299264	Identifier	type1		6298654	1					
ANR	6299265	Argument	& ad		6298654	1					
ANR	6299266	UnaryOperationExpression	& ad		6298654	0					
ANR	6299267	UnaryOperator	&		6298654	0					
ANR	6299268	Identifier	ad		6298654	1					
ANR	6299269	Argument	& v		6298654	2					
ANR	6299270	UnaryOperationExpression	& v		6298654	0					
ANR	6299271	UnaryOperator	&		6298654	0					
ANR	6299272	Identifier	v		6298654	1					
ANR	6299273	Argument	TYPE_DIRECT | TYPE_ABSTRACT		6298654	3					
ANR	6299274	InclusiveOrExpression	TYPE_DIRECT | TYPE_ABSTRACT		6298654	0		|			
ANR	6299275	Identifier	TYPE_DIRECT		6298654	0					
ANR	6299276	Identifier	TYPE_ABSTRACT		6298654	1					
ANR	6299277	IfStatement	if ( v == 0 && not_structured ( & type1 ) )		6298654	1					
ANR	6299278	Condition	v == 0 && not_structured ( & type1 )	1070:10:25109:25140	6298654	0	True				
ANR	6299279	AndExpression	v == 0 && not_structured ( & type1 )		6298654	0		&&			
ANR	6299280	EqualityExpression	v == 0		6298654	0		==			
ANR	6299281	Identifier	v		6298654	0					
ANR	6299282	PrimaryExpression	0		6298654	1					
ANR	6299283	CallExpression	not_structured ( & type1 )		6298654	1					
ANR	6299284	Callee	not_structured		6298654	0					
ANR	6299285	Identifier	not_structured		6298654	0					
ANR	6299286	ArgumentList	& type1		6298654	1					
ANR	6299287	Argument	& type1		6298654	0					
ANR	6299288	UnaryOperationExpression	& type1		6298654	0					
ANR	6299289	UnaryOperator	&		6298654	0					
ANR	6299290	Identifier	type1		6298654	1					
ANR	6299291	CompoundStatement		113:44:2743:2743	6298654	1					
ANR	6299292	ExpressionStatement	"expect ( ""identifier"" )"	1071:7:25152:25173	6298654	0	True				
ANR	6299293	CallExpression	"expect ( ""identifier"" )"		6298654	0					
ANR	6299294	Callee	expect		6298654	0					
ANR	6299295	Identifier	expect		6298654	0					
ANR	6299296	ArgumentList	"""identifier"""		6298654	1					
ANR	6299297	Argument	"""identifier"""		6298654	0					
ANR	6299298	PrimaryExpression	"""identifier"""		6298654	0					
ANR	6299299	IfStatement	if ( ( type1 . t & VT_BTYPE ) == VT_FUNC || ( type1 . t & ( VT_TYPEDEF | VT_STATIC | VT_EXTERN | VT_INLINE ) ) )		6298654	2					
ANR	6299300	Condition	( type1 . t & VT_BTYPE ) == VT_FUNC || ( type1 . t & ( VT_TYPEDEF | VT_STATIC | VT_EXTERN | VT_INLINE ) )	1073:10:25193:25297	6298654	0	True				
ANR	6299301	OrExpression	( type1 . t & VT_BTYPE ) == VT_FUNC || ( type1 . t & ( VT_TYPEDEF | VT_STATIC | VT_EXTERN | VT_INLINE ) )		6298654	0		||			
ANR	6299302	EqualityExpression	( type1 . t & VT_BTYPE ) == VT_FUNC		6298654	0		==			
ANR	6299303	BitAndExpression	type1 . t & VT_BTYPE		6298654	0		&			
ANR	6299304	MemberAccess	type1 . t		6298654	0					
ANR	6299305	Identifier	type1		6298654	0					
ANR	6299306	Identifier	t		6298654	1					
ANR	6299307	Identifier	VT_BTYPE		6298654	1					
ANR	6299308	Identifier	VT_FUNC		6298654	1					
ANR	6299309	BitAndExpression	type1 . t & ( VT_TYPEDEF | VT_STATIC | VT_EXTERN | VT_INLINE )		6298654	1		&			
ANR	6299310	MemberAccess	type1 . t		6298654	0					
ANR	6299311	Identifier	type1		6298654	0					
ANR	6299312	Identifier	t		6298654	1					
ANR	6299313	InclusiveOrExpression	VT_TYPEDEF | VT_STATIC | VT_EXTERN | VT_INLINE		6298654	1		|			
ANR	6299314	Identifier	VT_TYPEDEF		6298654	0					
ANR	6299315	InclusiveOrExpression	VT_STATIC | VT_EXTERN | VT_INLINE		6298654	1		|			
ANR	6299316	Identifier	VT_STATIC		6298654	0					
ANR	6299317	InclusiveOrExpression	VT_EXTERN | VT_INLINE		6298654	1		|			
ANR	6299318	Identifier	VT_EXTERN		6298654	0					
ANR	6299319	Identifier	VT_INLINE		6298654	1					
ANR	6299320	CompoundStatement		117:72:2900:2900	6298654	1					
ANR	6299321	ExpressionStatement	"TCC_ERR ( ""invalid type for '%s'"" , get_tok_str ( v , NULL ) )"	1075:7:25309:25373	6298654	0	True				
ANR	6299322	CallExpression	"TCC_ERR ( ""invalid type for '%s'"" , get_tok_str ( v , NULL ) )"		6298654	0					
ANR	6299323	Callee	TCC_ERR		6298654	0					
ANR	6299324	Identifier	TCC_ERR		6298654	0					
ANR	6299325	ArgumentList	"""invalid type for '%s'"""		6298654	1					
ANR	6299326	Argument	"""invalid type for '%s'"""		6298654	0					
ANR	6299327	PrimaryExpression	"""invalid type for '%s'"""		6298654	0					
ANR	6299328	Argument	"get_tok_str ( v , NULL )"		6298654	1					
ANR	6299329	CallExpression	"get_tok_str ( v , NULL )"		6298654	0					
ANR	6299330	Callee	get_tok_str		6298654	0					
ANR	6299331	Identifier	get_tok_str		6298654	0					
ANR	6299332	ArgumentList	v		6298654	1					
ANR	6299333	Argument	v		6298654	0					
ANR	6299334	Identifier	v		6298654	0					
ANR	6299335	Argument	NULL		6298654	1					
ANR	6299336	Identifier	NULL		6298654	0					
ANR	6299337	IfStatement	if ( tok == ':' )		6298654	4					
ANR	6299338	Condition	tok == ':'	1079:9:25399:25408	6298654	0	True				
ANR	6299339	EqualityExpression	tok == ':'		6298654	0		==			
ANR	6299340	Identifier	tok		6298654	0					
ANR	6299341	PrimaryExpression	':'		6298654	1					
ANR	6299342	CompoundStatement		122:21:3011:3011	6298654	1					
ANR	6299343	ExpressionStatement	next ( )	1080:6:25419:25426	6298654	0	True				
ANR	6299344	CallExpression	next ( )		6298654	0					
ANR	6299345	Callee	next		6298654	0					
ANR	6299346	Identifier	next		6298654	0					
ANR	6299347	ArgumentList			6298654	1					
ANR	6299348	ExpressionStatement	bit_size = ( int ) expr_const ( )	1081:6:25434:25464	6298654	1	True				
ANR	6299349	AssignmentExpression	bit_size = ( int ) expr_const ( )		6298654	0		=			
ANR	6299350	Identifier	bit_size		6298654	0					
ANR	6299351	CastExpression	( int ) expr_const ( )		6298654	1					
ANR	6299352	CastTarget	int		6298654	0					
ANR	6299353	CallExpression	expr_const ( )		6298654	1					
ANR	6299354	Callee	expr_const		6298654	0					
ANR	6299355	Identifier	expr_const		6298654	0					
ANR	6299356	ArgumentList			6298654	1					
ANR	6299357	IfStatement	if ( bit_size < 0 )		6298654	2					
ANR	6299358	Condition	bit_size < 0	1083:10:25524:25535	6298654	0	True				
ANR	6299359	RelationalExpression	bit_size < 0		6298654	0		<			
ANR	6299360	Identifier	bit_size		6298654	0					
ANR	6299361	PrimaryExpression	0		6298654	1					
ANR	6299362	CompoundStatement		126:24:3138:3138	6298654	1					
ANR	6299363	ExpressionStatement	"TCC_ERR ( ""negative width in bit-field '%s'"" , get_tok_str ( v , NULL ) )"	1084:7:25547:25622	6298654	0	True				
ANR	6299364	CallExpression	"TCC_ERR ( ""negative width in bit-field '%s'"" , get_tok_str ( v , NULL ) )"		6298654	0					
ANR	6299365	Callee	TCC_ERR		6298654	0					
ANR	6299366	Identifier	TCC_ERR		6298654	0					
ANR	6299367	ArgumentList	"""negative width in bit-field '%s'"""		6298654	1					
ANR	6299368	Argument	"""negative width in bit-field '%s'"""		6298654	0					
ANR	6299369	PrimaryExpression	"""negative width in bit-field '%s'"""		6298654	0					
ANR	6299370	Argument	"get_tok_str ( v , NULL )"		6298654	1					
ANR	6299371	CallExpression	"get_tok_str ( v , NULL )"		6298654	0					
ANR	6299372	Callee	get_tok_str		6298654	0					
ANR	6299373	Identifier	get_tok_str		6298654	0					
ANR	6299374	ArgumentList	v		6298654	1					
ANR	6299375	Argument	v		6298654	0					
ANR	6299376	Identifier	v		6298654	0					
ANR	6299377	Argument	NULL		6298654	1					
ANR	6299378	Identifier	NULL		6298654	0					
ANR	6299379	IfStatement	if ( v && bit_size == 0 )		6298654	3					
ANR	6299380	Condition	v && bit_size == 0	1087:10:25642:25659	6298654	0	True				
ANR	6299381	AndExpression	v && bit_size == 0		6298654	0		&&			
ANR	6299382	Identifier	v		6298654	0					
ANR	6299383	EqualityExpression	bit_size == 0		6298654	1		==			
ANR	6299384	Identifier	bit_size		6298654	0					
ANR	6299385	PrimaryExpression	0		6298654	1					
ANR	6299386	CompoundStatement		130:30:3262:3262	6298654	1					
ANR	6299387	ExpressionStatement	"TCC_ERR ( ""zero width for bit-field '%s'"" , get_tok_str ( v , NULL ) )"	1088:7:25671:25743	6298654	0	True				
ANR	6299388	CallExpression	"TCC_ERR ( ""zero width for bit-field '%s'"" , get_tok_str ( v , NULL ) )"		6298654	0					
ANR	6299389	Callee	TCC_ERR		6298654	0					
ANR	6299390	Identifier	TCC_ERR		6298654	0					
ANR	6299391	ArgumentList	"""zero width for bit-field '%s'"""		6298654	1					
ANR	6299392	Argument	"""zero width for bit-field '%s'"""		6298654	0					
ANR	6299393	PrimaryExpression	"""zero width for bit-field '%s'"""		6298654	0					
ANR	6299394	Argument	"get_tok_str ( v , NULL )"		6298654	1					
ANR	6299395	CallExpression	"get_tok_str ( v , NULL )"		6298654	0					
ANR	6299396	Callee	get_tok_str		6298654	0					
ANR	6299397	Identifier	get_tok_str		6298654	0					
ANR	6299398	ArgumentList	v		6298654	1					
ANR	6299399	Argument	v		6298654	0					
ANR	6299400	Identifier	v		6298654	0					
ANR	6299401	Argument	NULL		6298654	1					
ANR	6299402	Identifier	NULL		6298654	0					
ANR	6299403	ExpressionStatement	"size = type_size ( & type1 , & align )"	1092:5:25765:25798	6298654	5	True				
ANR	6299404	AssignmentExpression	"size = type_size ( & type1 , & align )"		6298654	0		=			
ANR	6299405	Identifier	size		6298654	0					
ANR	6299406	CallExpression	"type_size ( & type1 , & align )"		6298654	1					
ANR	6299407	Callee	type_size		6298654	0					
ANR	6299408	Identifier	type_size		6298654	0					
ANR	6299409	ArgumentList	& type1		6298654	1					
ANR	6299410	Argument	& type1		6298654	0					
ANR	6299411	UnaryOperationExpression	& type1		6298654	0					
ANR	6299412	UnaryOperator	&		6298654	0					
ANR	6299413	Identifier	type1		6298654	1					
ANR	6299414	Argument	& align		6298654	1					
ANR	6299415	UnaryOperationExpression	& align		6298654	0					
ANR	6299416	UnaryOperator	&		6298654	0					
ANR	6299417	Identifier	align		6298654	1					
ANR	6299418	IfStatement	if ( ad . aligned )		6298654	6					
ANR	6299419	Condition	ad . aligned	1093:9:25809:25818	6298654	0	True				
ANR	6299420	MemberAccess	ad . aligned		6298654	0					
ANR	6299421	Identifier	ad		6298654	0					
ANR	6299422	Identifier	aligned		6298654	1					
ANR	6299423	CompoundStatement		136:21:3421:3421	6298654	1					
ANR	6299424	IfStatement	if ( align < ad . aligned )		6298654	0					
ANR	6299425	Condition	align < ad . aligned	1094:10:25833:25850	6298654	0	True				
ANR	6299426	RelationalExpression	align < ad . aligned		6298654	0		<			
ANR	6299427	Identifier	align		6298654	0					
ANR	6299428	MemberAccess	ad . aligned		6298654	1					
ANR	6299429	Identifier	ad		6298654	0					
ANR	6299430	Identifier	aligned		6298654	1					
ANR	6299431	CompoundStatement		137:30:3453:3453	6298654	1					
ANR	6299432	ExpressionStatement	align = ad . aligned	1095:7:25862:25880	6298654	0	True				
ANR	6299433	AssignmentExpression	align = ad . aligned		6298654	0		=			
ANR	6299434	Identifier	align		6298654	0					
ANR	6299435	MemberAccess	ad . aligned		6298654	1					
ANR	6299436	Identifier	ad		6298654	0					
ANR	6299437	Identifier	aligned		6298654	1					
ANR	6299438	ElseStatement	else		6298654	0					
ANR	6299439	IfStatement	if ( ad . packed )		6298654	0					
ANR	6299440	Condition	ad . packed	1097:16:25906:25914	6298654	0	True				
ANR	6299441	MemberAccess	ad . packed		6298654	0					
ANR	6299442	Identifier	ad		6298654	0					
ANR	6299443	Identifier	packed		6298654	1					
ANR	6299444	CompoundStatement		140:27:3517:3517	6298654	1					
ANR	6299445	ExpressionStatement	align = 1	1098:6:25925:25934	6298654	0	True				
ANR	6299446	AssignmentExpression	align = 1		6298654	0		=			
ANR	6299447	Identifier	align		6298654	0					
ANR	6299448	PrimaryExpression	1		6298654	1					
ANR	6299449	ElseStatement	else		6298654	0					
ANR	6299450	IfStatement	if ( * tcc_state -> pack_stack_ptr )		6298654	0					
ANR	6299451	Condition	* tcc_state -> pack_stack_ptr	1099:16:25952:25977	6298654	0	True				
ANR	6299452	UnaryOperationExpression	* tcc_state -> pack_stack_ptr		6298654	0					
ANR	6299453	UnaryOperator	*		6298654	0					
ANR	6299454	PtrMemberAccess	tcc_state -> pack_stack_ptr		6298654	1					
ANR	6299455	Identifier	tcc_state		6298654	0					
ANR	6299456	Identifier	pack_stack_ptr		6298654	1					
ANR	6299457	CompoundStatement		142:44:3580:3580	6298654	1					
ANR	6299458	IfStatement	if ( align > * tcc_state -> pack_stack_ptr )		6298654	0					
ANR	6299459	Condition	align > * tcc_state -> pack_stack_ptr	1100:10:25992:26025	6298654	0	True				
ANR	6299460	RelationalExpression	align > * tcc_state -> pack_stack_ptr		6298654	0		>			
ANR	6299461	Identifier	align		6298654	0					
ANR	6299462	UnaryOperationExpression	* tcc_state -> pack_stack_ptr		6298654	1					
ANR	6299463	UnaryOperator	*		6298654	0					
ANR	6299464	PtrMemberAccess	tcc_state -> pack_stack_ptr		6298654	1					
ANR	6299465	Identifier	tcc_state		6298654	0					
ANR	6299466	Identifier	pack_stack_ptr		6298654	1					
ANR	6299467	CompoundStatement		143:46:3628:3628	6298654	1					
ANR	6299468	ExpressionStatement	align = * tcc_state -> pack_stack_ptr	1101:7:26037:26071	6298654	0	True				
ANR	6299469	AssignmentExpression	align = * tcc_state -> pack_stack_ptr		6298654	0		=			
ANR	6299470	Identifier	align		6298654	0					
ANR	6299471	UnaryOperationExpression	* tcc_state -> pack_stack_ptr		6298654	1					
ANR	6299472	UnaryOperator	*		6298654	0					
ANR	6299473	PtrMemberAccess	tcc_state -> pack_stack_ptr		6298654	1					
ANR	6299474	Identifier	tcc_state		6298654	0					
ANR	6299475	Identifier	pack_stack_ptr		6298654	1					
ANR	6299476	ExpressionStatement	lbit_pos = 0	1104:5:26093:26105	6298654	7	True				
ANR	6299477	AssignmentExpression	lbit_pos = 0		6298654	0		=			
ANR	6299478	Identifier	lbit_pos		6298654	0					
ANR	6299479	PrimaryExpression	0		6298654	1					
ANR	6299480	IfStatement	if ( bit_size >= 0 )		6298654	8					
ANR	6299481	Condition	bit_size >= 0	1108:9:26318:26330	6298654	0	True				
ANR	6299482	RelationalExpression	bit_size >= 0		6298654	0		>=			
ANR	6299483	Identifier	bit_size		6298654	0					
ANR	6299484	PrimaryExpression	0		6298654	1					
ANR	6299485	CompoundStatement		151:24:3933:3933	6298654	1					
ANR	6299486	ExpressionStatement	bt = type1 . t & VT_BTYPE	1109:6:26341:26364	6298654	0	True				
ANR	6299487	AssignmentExpression	bt = type1 . t & VT_BTYPE		6298654	0		=			
ANR	6299488	Identifier	bt		6298654	0					
ANR	6299489	BitAndExpression	type1 . t & VT_BTYPE		6298654	1		&			
ANR	6299490	MemberAccess	type1 . t		6298654	0					
ANR	6299491	Identifier	type1		6298654	0					
ANR	6299492	Identifier	t		6298654	1					
ANR	6299493	Identifier	VT_BTYPE		6298654	1					
ANR	6299494	IfStatement	if ( bt != VT_INT8 && bt != VT_INT16 && bt != VT_INT32 && bt != VT_INT64 && bt != VT_ENUM && bt != VT_BOOL )		6298654	1					
ANR	6299495	Condition	bt != VT_INT8 && bt != VT_INT16 && bt != VT_INT32 && bt != VT_INT64 && bt != VT_ENUM && bt != VT_BOOL	1110:10:26376:26526	6298654	0	True				
ANR	6299496	AndExpression	bt != VT_INT8 && bt != VT_INT16 && bt != VT_INT32 && bt != VT_INT64 && bt != VT_ENUM && bt != VT_BOOL		6298654	0		&&			
ANR	6299497	EqualityExpression	bt != VT_INT8		6298654	0		!=			
ANR	6299498	Identifier	bt		6298654	0					
ANR	6299499	Identifier	VT_INT8		6298654	1					
ANR	6299500	AndExpression	bt != VT_INT16 && bt != VT_INT32 && bt != VT_INT64 && bt != VT_ENUM && bt != VT_BOOL		6298654	1		&&			
ANR	6299501	EqualityExpression	bt != VT_INT16		6298654	0		!=			
ANR	6299502	Identifier	bt		6298654	0					
ANR	6299503	Identifier	VT_INT16		6298654	1					
ANR	6299504	AndExpression	bt != VT_INT32 && bt != VT_INT64 && bt != VT_ENUM && bt != VT_BOOL		6298654	1		&&			
ANR	6299505	EqualityExpression	bt != VT_INT32		6298654	0		!=			
ANR	6299506	Identifier	bt		6298654	0					
ANR	6299507	Identifier	VT_INT32		6298654	1					
ANR	6299508	AndExpression	bt != VT_INT64 && bt != VT_ENUM && bt != VT_BOOL		6298654	1		&&			
ANR	6299509	EqualityExpression	bt != VT_INT64		6298654	0		!=			
ANR	6299510	Identifier	bt		6298654	0					
ANR	6299511	Identifier	VT_INT64		6298654	1					
ANR	6299512	AndExpression	bt != VT_ENUM && bt != VT_BOOL		6298654	1		&&			
ANR	6299513	EqualityExpression	bt != VT_ENUM		6298654	0		!=			
ANR	6299514	Identifier	bt		6298654	0					
ANR	6299515	Identifier	VT_ENUM		6298654	1					
ANR	6299516	EqualityExpression	bt != VT_BOOL		6298654	1		!=			
ANR	6299517	Identifier	bt		6298654	0					
ANR	6299518	Identifier	VT_BOOL		6298654	1					
ANR	6299519	CompoundStatement		158:25:4129:4129	6298654	1					
ANR	6299520	ExpressionStatement	"TCC_ERR ( ""bitfields must have scalar type"" )"	1116:7:26538:26581	6298654	0	True				
ANR	6299521	CallExpression	"TCC_ERR ( ""bitfields must have scalar type"" )"		6298654	0					
ANR	6299522	Callee	TCC_ERR		6298654	0					
ANR	6299523	Identifier	TCC_ERR		6298654	0					
ANR	6299524	ArgumentList	"""bitfields must have scalar type"""		6298654	1					
ANR	6299525	Argument	"""bitfields must have scalar type"""		6298654	0					
ANR	6299526	PrimaryExpression	"""bitfields must have scalar type"""		6298654	0					
ANR	6299527	ExpressionStatement	bsize = size * 8	1118:6:26597:26613	6298654	2	True				
ANR	6299528	AssignmentExpression	bsize = size * 8		6298654	0		=			
ANR	6299529	Identifier	bsize		6298654	0					
ANR	6299530	MultiplicativeExpression	size * 8		6298654	1		*			
ANR	6299531	Identifier	size		6298654	0					
ANR	6299532	PrimaryExpression	8		6298654	1					
ANR	6299533	IfStatement	if ( bit_size > bsize )		6298654	3					
ANR	6299534	Condition	bit_size > bsize	1119:10:26625:26640	6298654	0	True				
ANR	6299535	RelationalExpression	bit_size > bsize		6298654	0		>			
ANR	6299536	Identifier	bit_size		6298654	0					
ANR	6299537	Identifier	bsize		6298654	1					
ANR	6299538	CompoundStatement		162:28:4243:4243	6298654	1					
ANR	6299539	ExpressionStatement	"TCC_ERR ( ""width of '%s' exceeds its type"" , get_tok_str ( v , NULL ) )"	1120:7:26652:26725	6298654	0	True				
ANR	6299540	CallExpression	"TCC_ERR ( ""width of '%s' exceeds its type"" , get_tok_str ( v , NULL ) )"		6298654	0					
ANR	6299541	Callee	TCC_ERR		6298654	0					
ANR	6299542	Identifier	TCC_ERR		6298654	0					
ANR	6299543	ArgumentList	"""width of '%s' exceeds its type"""		6298654	1					
ANR	6299544	Argument	"""width of '%s' exceeds its type"""		6298654	0					
ANR	6299545	PrimaryExpression	"""width of '%s' exceeds its type"""		6298654	0					
ANR	6299546	Argument	"get_tok_str ( v , NULL )"		6298654	1					
ANR	6299547	CallExpression	"get_tok_str ( v , NULL )"		6298654	0					
ANR	6299548	Callee	get_tok_str		6298654	0					
ANR	6299549	Identifier	get_tok_str		6298654	0					
ANR	6299550	ArgumentList	v		6298654	1					
ANR	6299551	Argument	v		6298654	0					
ANR	6299552	Identifier	v		6298654	0					
ANR	6299553	Argument	NULL		6298654	1					
ANR	6299554	Identifier	NULL		6298654	0					
ANR	6299555	ElseStatement	else		6298654	0					
ANR	6299556	IfStatement	if ( bit_size == bsize )		6298654	0					
ANR	6299557	Condition	bit_size == bsize	1122:17:26744:26760	6298654	0	True				
ANR	6299558	EqualityExpression	bit_size == bsize		6298654	0		==			
ANR	6299559	Identifier	bit_size		6298654	0					
ANR	6299560	Identifier	bsize		6298654	1					
ANR	6299561	CompoundStatement		165:36:4363:4363	6298654	1					
ANR	6299562	ExpressionStatement	bit_pos = 0	1124:7:26808:26819	6298654	0	True				
ANR	6299563	AssignmentExpression	bit_pos = 0		6298654	0		=			
ANR	6299564	Identifier	bit_pos		6298654	0					
ANR	6299565	PrimaryExpression	0		6298654	1					
ANR	6299566	ElseStatement	else		6298654	0					
ANR	6299567	IfStatement	if ( bit_size == 0 )		6298654	0					
ANR	6299568	Condition	bit_size == 0	1125:17:26838:26850	6298654	0	True				
ANR	6299569	EqualityExpression	bit_size == 0		6298654	0		==			
ANR	6299570	Identifier	bit_size		6298654	0					
ANR	6299571	PrimaryExpression	0		6298654	1					
ANR	6299572	CompoundStatement		168:32:4453:4453	6298654	1					
ANR	6299573	ExpressionStatement	bit_pos = 0	1129:7:26971:26982	6298654	0	True				
ANR	6299574	AssignmentExpression	bit_pos = 0		6298654	0		=			
ANR	6299575	Identifier	bit_pos		6298654	0					
ANR	6299576	PrimaryExpression	0		6298654	1					
ANR	6299577	ElseStatement	else		6298654	0					
ANR	6299578	CompoundStatement		173:13:4597:4597	6298654	0					
ANR	6299579	IfStatement	if ( ( bit_pos + bit_size ) > bsize || bt != prevbt || a == TOK_UNION )		6298654	0					
ANR	6299580	Condition	( bit_pos + bit_size ) > bsize || bt != prevbt || a == TOK_UNION	1134:11:27108:27180	6298654	0	True				
ANR	6299581	OrExpression	( bit_pos + bit_size ) > bsize || bt != prevbt || a == TOK_UNION		6298654	0		||			
ANR	6299582	RelationalExpression	( bit_pos + bit_size ) > bsize		6298654	0		>			
ANR	6299583	AdditiveExpression	bit_pos + bit_size		6298654	0		+			
ANR	6299584	Identifier	bit_pos		6298654	0					
ANR	6299585	Identifier	bit_size		6298654	1					
ANR	6299586	Identifier	bsize		6298654	1					
ANR	6299587	OrExpression	bt != prevbt || a == TOK_UNION		6298654	1		||			
ANR	6299588	EqualityExpression	bt != prevbt		6298654	0		!=			
ANR	6299589	Identifier	bt		6298654	0					
ANR	6299590	Identifier	prevbt		6298654	1					
ANR	6299591	EqualityExpression	a == TOK_UNION		6298654	1		==			
ANR	6299592	Identifier	a		6298654	0					
ANR	6299593	Identifier	TOK_UNION		6298654	1					
ANR	6299594	CompoundStatement		178:43:4783:4783	6298654	1					
ANR	6299595	ExpressionStatement	bit_pos = 0	1136:8:27193:27204	6298654	0	True				
ANR	6299596	AssignmentExpression	bit_pos = 0		6298654	0		=			
ANR	6299597	Identifier	bit_pos		6298654	0					
ANR	6299598	PrimaryExpression	0		6298654	1					
ANR	6299599	ExpressionStatement	lbit_pos = bit_pos	1138:7:27222:27240	6298654	1	True				
ANR	6299600	AssignmentExpression	lbit_pos = bit_pos		6298654	0		=			
ANR	6299601	Identifier	lbit_pos		6298654	0					
ANR	6299602	Identifier	bit_pos		6298654	1					
ANR	6299603	ExpressionStatement	type1 . t |= VT_BITFIELD | ( bit_pos << VT_STRUCT_SHIFT ) | ( bit_size << ( VT_STRUCT_SHIFT + 6 ) )	1140:7:27284:27397	6298654	2	True				
ANR	6299604	AssignmentExpression	type1 . t |= VT_BITFIELD | ( bit_pos << VT_STRUCT_SHIFT ) | ( bit_size << ( VT_STRUCT_SHIFT + 6 ) )		6298654	0		|=			
ANR	6299605	MemberAccess	type1 . t		6298654	0					
ANR	6299606	Identifier	type1		6298654	0					
ANR	6299607	Identifier	t		6298654	1					
ANR	6299608	InclusiveOrExpression	VT_BITFIELD | ( bit_pos << VT_STRUCT_SHIFT ) | ( bit_size << ( VT_STRUCT_SHIFT + 6 ) )		6298654	1		|			
ANR	6299609	Identifier	VT_BITFIELD		6298654	0					
ANR	6299610	InclusiveOrExpression	( bit_pos << VT_STRUCT_SHIFT ) | ( bit_size << ( VT_STRUCT_SHIFT + 6 ) )		6298654	1		|			
ANR	6299611	ShiftExpression	bit_pos << VT_STRUCT_SHIFT		6298654	0		<<			
ANR	6299612	Identifier	bit_pos		6298654	0					
ANR	6299613	Identifier	VT_STRUCT_SHIFT		6298654	1					
ANR	6299614	ShiftExpression	bit_size << ( VT_STRUCT_SHIFT + 6 )		6298654	1		<<			
ANR	6299615	Identifier	bit_size		6298654	0					
ANR	6299616	AdditiveExpression	VT_STRUCT_SHIFT + 6		6298654	1		+			
ANR	6299617	Identifier	VT_STRUCT_SHIFT		6298654	0					
ANR	6299618	PrimaryExpression	6		6298654	1					
ANR	6299619	ExpressionStatement	bit_pos += bit_size	1143:7:27406:27425	6298654	3	True				
ANR	6299620	AssignmentExpression	bit_pos += bit_size		6298654	0		+=			
ANR	6299621	Identifier	bit_pos		6298654	0					
ANR	6299622	Identifier	bit_size		6298654	1					
ANR	6299623	ExpressionStatement	prevbt = bt	1145:6:27441:27452	6298654	4	True				
ANR	6299624	AssignmentExpression	prevbt = bt		6298654	0		=			
ANR	6299625	Identifier	prevbt		6298654	0					
ANR	6299626	Identifier	bt		6298654	1					
ANR	6299627	ElseStatement	else		6298654	0					
ANR	6299628	CompoundStatement		189:12:5066:5066	6298654	0					
ANR	6299629	ExpressionStatement	bit_pos = 0	1147:6:27474:27485	6298654	0	True				
ANR	6299630	AssignmentExpression	bit_pos = 0		6298654	0		=			
ANR	6299631	Identifier	bit_pos		6298654	0					
ANR	6299632	PrimaryExpression	0		6298654	1					
ANR	6299633	IfStatement	if ( v != 0 || is_structured ( & type1 ) )		6298654	9					
ANR	6299634	Condition	v != 0 || is_structured ( & type1 )	1149:9:27503:27533	6298654	0	True				
ANR	6299635	OrExpression	v != 0 || is_structured ( & type1 )		6298654	0		||			
ANR	6299636	EqualityExpression	v != 0		6298654	0		!=			
ANR	6299637	Identifier	v		6298654	0					
ANR	6299638	PrimaryExpression	0		6298654	1					
ANR	6299639	CallExpression	is_structured ( & type1 )		6298654	1					
ANR	6299640	Callee	is_structured		6298654	0					
ANR	6299641	Identifier	is_structured		6298654	0					
ANR	6299642	ArgumentList	& type1		6298654	1					
ANR	6299643	Argument	& type1		6298654	0					
ANR	6299644	UnaryOperationExpression	& type1		6298654	0					
ANR	6299645	UnaryOperator	&		6298654	0					
ANR	6299646	Identifier	type1		6298654	1					
ANR	6299647	CompoundStatement		215:6:5625:5661	6298654	1					
ANR	6299648	IfStatement	if ( lbit_pos == 0 )		6298654	0					
ANR	6299649	Condition	lbit_pos == 0	1152:10:27616:27628	6298654	0	True				
ANR	6299650	EqualityExpression	lbit_pos == 0		6298654	0		==			
ANR	6299651	Identifier	lbit_pos		6298654	0					
ANR	6299652	PrimaryExpression	0		6298654	1					
ANR	6299653	CompoundStatement		195:25:5231:5231	6298654	1					
ANR	6299654	IfStatement	if ( a == TOK_STRUCT )		6298654	0					
ANR	6299655	Condition	a == TOK_STRUCT	1153:11:27644:27658	6298654	0	True				
ANR	6299656	EqualityExpression	a == TOK_STRUCT		6298654	0		==			
ANR	6299657	Identifier	a		6298654	0					
ANR	6299658	Identifier	TOK_STRUCT		6298654	1					
ANR	6299659	CompoundStatement		196:28:5261:5261	6298654	1					
ANR	6299660	ExpressionStatement	c = ( c + align - 1 ) & - align	1154:8:27671:27700	6298654	0	True				
ANR	6299661	AssignmentExpression	c = ( c + align - 1 ) & - align		6298654	0		=			
ANR	6299662	Identifier	c		6298654	0					
ANR	6299663	BitAndExpression	( c + align - 1 ) & - align		6298654	1		&			
ANR	6299664	AdditiveExpression	c + align - 1		6298654	0		+			
ANR	6299665	Identifier	c		6298654	0					
ANR	6299666	AdditiveExpression	align - 1		6298654	1		-			
ANR	6299667	Identifier	align		6298654	0					
ANR	6299668	PrimaryExpression	1		6298654	1					
ANR	6299669	UnaryOperationExpression	- align		6298654	1					
ANR	6299670	UnaryOperator	-		6298654	0					
ANR	6299671	Identifier	align		6298654	1					
ANR	6299672	ExpressionStatement	offset = c	1155:8:27710:27720	6298654	1	True				
ANR	6299673	AssignmentExpression	offset = c		6298654	0		=			
ANR	6299674	Identifier	offset		6298654	0					
ANR	6299675	Identifier	c		6298654	1					
ANR	6299676	IfStatement	if ( size > 0 )		6298654	2					
ANR	6299677	Condition	size > 0	1156:12:27734:27741	6298654	0	True				
ANR	6299678	RelationalExpression	size > 0		6298654	0		>			
ANR	6299679	Identifier	size		6298654	0					
ANR	6299680	PrimaryExpression	0		6298654	1					
ANR	6299681	CompoundStatement		199:22:5344:5344	6298654	1					
ANR	6299682	ExpressionStatement	c += size	1157:9:27755:27764	6298654	0	True				
ANR	6299683	AssignmentExpression	c += size		6298654	0		+=			
ANR	6299684	Identifier	c		6298654	0					
ANR	6299685	Identifier	size		6298654	1					
ANR	6299686	ElseStatement	else		6298654	0					
ANR	6299687	CompoundStatement		202:14:5390:5390	6298654	0					
ANR	6299688	ExpressionStatement	offset = 0	1160:8:27800:27810	6298654	0	True				
ANR	6299689	AssignmentExpression	offset = 0		6298654	0		=			
ANR	6299690	Identifier	offset		6298654	0					
ANR	6299691	PrimaryExpression	0		6298654	1					
ANR	6299692	IfStatement	if ( size > c )		6298654	1					
ANR	6299693	Condition	size > c	1161:12:27824:27831	6298654	0	True				
ANR	6299694	RelationalExpression	size > c		6298654	0		>			
ANR	6299695	Identifier	size		6298654	0					
ANR	6299696	Identifier	c		6298654	1					
ANR	6299697	CompoundStatement		204:22:5434:5434	6298654	1					
ANR	6299698	ExpressionStatement	c = size	1162:9:27845:27853	6298654	0	True				
ANR	6299699	AssignmentExpression	c = size		6298654	0		=			
ANR	6299700	Identifier	c		6298654	0					
ANR	6299701	Identifier	size		6298654	1					
ANR	6299702	IfStatement	if ( align > maxalign )		6298654	1					
ANR	6299703	Condition	align > maxalign	1165:11:27885:27900	6298654	0	True				
ANR	6299704	RelationalExpression	align > maxalign		6298654	0		>			
ANR	6299705	Identifier	align		6298654	0					
ANR	6299706	Identifier	maxalign		6298654	1					
ANR	6299707	CompoundStatement		208:29:5503:5503	6298654	1					
ANR	6299708	ExpressionStatement	maxalign = align	1166:8:27913:27929	6298654	0	True				
ANR	6299709	AssignmentExpression	maxalign = align		6298654	0		=			
ANR	6299710	Identifier	maxalign		6298654	0					
ANR	6299711	Identifier	align		6298654	1					
ANR	6299712	IdentifierDeclStatement	char b [ 1024 ] ;	1171:6:28005:28017	6298654	1	True				
ANR	6299713	IdentifierDecl	b [ 1024 ]		6298654	0					
ANR	6299714	IdentifierDeclType	char [ 1024 ]		6298654	0					
ANR	6299715	Identifier	b		6298654	1					
ANR	6299716	PrimaryExpression	1024		6298654	2					
ANR	6299717	IdentifierDeclStatement	"char * varstr = get_tok_str ( v , NULL ) ;"	1172:6:28025:28061	6298654	2	True				
ANR	6299718	IdentifierDecl	"* varstr = get_tok_str ( v , NULL )"		6298654	0					
ANR	6299719	IdentifierDeclType	char *		6298654	0					
ANR	6299720	Identifier	varstr		6298654	1					
ANR	6299721	AssignmentExpression	"* varstr = get_tok_str ( v , NULL )"		6298654	2		=			
ANR	6299722	Identifier	varstr		6298654	0					
ANR	6299723	CallExpression	"get_tok_str ( v , NULL )"		6298654	1					
ANR	6299724	Callee	get_tok_str		6298654	0					
ANR	6299725	Identifier	get_tok_str		6298654	0					
ANR	6299726	ArgumentList	v		6298654	1					
ANR	6299727	Argument	v		6298654	0					
ANR	6299728	Identifier	v		6298654	0					
ANR	6299729	Argument	NULL		6298654	1					
ANR	6299730	Identifier	NULL		6298654	0					
ANR	6299731	ExpressionStatement	"type_to_str ( b , sizeof ( b ) , & type1 , NULL )"	1173:6:28069:28109	6298654	3	True				
ANR	6299732	CallExpression	"type_to_str ( b , sizeof ( b ) , & type1 , NULL )"		6298654	0					
ANR	6299733	Callee	type_to_str		6298654	0					
ANR	6299734	Identifier	type_to_str		6298654	0					
ANR	6299735	ArgumentList	b		6298654	1					
ANR	6299736	Argument	b		6298654	0					
ANR	6299737	Identifier	b		6298654	0					
ANR	6299738	Argument	sizeof ( b )		6298654	1					
ANR	6299739	SizeofExpression	sizeof ( b )		6298654	0					
ANR	6299740	Sizeof	sizeof		6298654	0					
ANR	6299741	SizeofOperand	b		6298654	1					
ANR	6299742	Argument	& type1		6298654	2					
ANR	6299743	UnaryOperationExpression	& type1		6298654	0					
ANR	6299744	UnaryOperator	&		6298654	0					
ANR	6299745	Identifier	type1		6298654	1					
ANR	6299746	Argument	NULL		6298654	3					
ANR	6299747	Identifier	NULL		6298654	0					
ANR	6299748	CompoundStatement		219:7:5790:5822	6298654	4					
ANR	6299749	IdentifierDeclStatement	"const char * ctype = ( a == TOK_UNION ) ? ""union"" : ""struct"" ;"	1175:7:28126:28181	6298654	0	True				
ANR	6299750	IdentifierDecl	"* ctype = ( a == TOK_UNION ) ? ""union"" : ""struct"""		6298654	0					
ANR	6299751	IdentifierDeclType	const char *		6298654	0					
ANR	6299752	Identifier	ctype		6298654	1					
ANR	6299753	AssignmentExpression	"* ctype = ( a == TOK_UNION ) ? ""union"" : ""struct"""		6298654	2		=			
ANR	6299754	Identifier	ctype		6298654	0					
ANR	6299755	ConditionalExpression	"( a == TOK_UNION ) ? ""union"" : ""struct"""		6298654	1					
ANR	6299756	Condition	a == TOK_UNION		6298654	0					
ANR	6299757	EqualityExpression	a == TOK_UNION		6298654	0		==			
ANR	6299758	Identifier	a		6298654	0					
ANR	6299759	Identifier	TOK_UNION		6298654	1					
ANR	6299760	PrimaryExpression	"""union"""		6298654	1					
ANR	6299761	PrimaryExpression	"""struct"""		6298654	2					
ANR	6299762	IdentifierDeclStatement	int type_bt = type1 . t & VT_BTYPE ;	1176:7:28190:28222	6298654	1	True				
ANR	6299763	IdentifierDecl	type_bt = type1 . t & VT_BTYPE		6298654	0					
ANR	6299764	IdentifierDeclType	int		6298654	0					
ANR	6299765	Identifier	type_bt		6298654	1					
ANR	6299766	AssignmentExpression	type_bt = type1 . t & VT_BTYPE		6298654	2		=			
ANR	6299767	Identifier	type_bt		6298654	0					
ANR	6299768	BitAndExpression	type1 . t & VT_BTYPE		6298654	1		&			
ANR	6299769	MemberAccess	type1 . t		6298654	0					
ANR	6299770	Identifier	type1		6298654	0					
ANR	6299771	Identifier	t		6298654	1					
ANR	6299772	Identifier	VT_BTYPE		6298654	1					
ANR	6299773	ExpressionStatement	"tcc_appendf ( ""%s=%s\\n"" , name , ctype )"	1178:7:28289:28325	6298654	2	True				
ANR	6299774	CallExpression	"tcc_appendf ( ""%s=%s\\n"" , name , ctype )"		6298654	0					
ANR	6299775	Callee	tcc_appendf		6298654	0					
ANR	6299776	Identifier	tcc_appendf		6298654	0					
ANR	6299777	ArgumentList	"""%s=%s\\n"""		6298654	1					
ANR	6299778	Argument	"""%s=%s\\n"""		6298654	0					
ANR	6299779	PrimaryExpression	"""%s=%s\\n"""		6298654	0					
ANR	6299780	Argument	name		6298654	1					
ANR	6299781	Identifier	name		6298654	0					
ANR	6299782	Argument	ctype		6298654	2					
ANR	6299783	Identifier	ctype		6298654	0					
ANR	6299784	ExpressionStatement	"tcc_appendf ( ""[+]%s.%s=%s\\n"" , ctype , name , varstr )"	1179:7:28334:28392	6298654	3	True				
ANR	6299785	CallExpression	"tcc_appendf ( ""[+]%s.%s=%s\\n"" , ctype , name , varstr )"		6298654	0					
ANR	6299786	Callee	tcc_appendf		6298654	0					
ANR	6299787	Identifier	tcc_appendf		6298654	0					
ANR	6299788	ArgumentList	"""[+]%s.%s=%s\\n"""		6298654	1					
ANR	6299789	Argument	"""[+]%s.%s=%s\\n"""		6298654	0					
ANR	6299790	PrimaryExpression	"""[+]%s.%s=%s\\n"""		6298654	0					
ANR	6299791	Argument	ctype		6298654	1					
ANR	6299792	Identifier	ctype		6298654	0					
ANR	6299793	Argument	name		6298654	2					
ANR	6299794	Identifier	name		6298654	0					
ANR	6299795	Argument	varstr		6298654	3					
ANR	6299796	Identifier	varstr		6298654	0					
ANR	6299797	ExpressionStatement	"tcc_appendf ( ""%s.%s.%s.meta=%d\\n"" , ctype , name , varstr , type_bt )"	1181:7:28401:28473	6298654	4	True				
ANR	6299798	CallExpression	"tcc_appendf ( ""%s.%s.%s.meta=%d\\n"" , ctype , name , varstr , type_bt )"		6298654	0					
ANR	6299799	Callee	tcc_appendf		6298654	0					
ANR	6299800	Identifier	tcc_appendf		6298654	0					
ANR	6299801	ArgumentList	"""%s.%s.%s.meta=%d\\n"""		6298654	1					
ANR	6299802	Argument	"""%s.%s.%s.meta=%d\\n"""		6298654	0					
ANR	6299803	PrimaryExpression	"""%s.%s.%s.meta=%d\\n"""		6298654	0					
ANR	6299804	Argument	ctype		6298654	1					
ANR	6299805	Identifier	ctype		6298654	0					
ANR	6299806	Argument	name		6298654	2					
ANR	6299807	Identifier	name		6298654	0					
ANR	6299808	Argument	varstr		6298654	3					
ANR	6299809	Identifier	varstr		6298654	0					
ANR	6299810	Argument	type_bt		6298654	4					
ANR	6299811	Identifier	type_bt		6298654	0					
ANR	6299812	ExpressionStatement	"tcc_appendf ( ""%s.%s.%s=%s,%d,%d\\n"" , ctype , name , varstr , b , offset , arraysize )"	1184:7:28508:28594	6298654	5	True				
ANR	6299813	CallExpression	"tcc_appendf ( ""%s.%s.%s=%s,%d,%d\\n"" , ctype , name , varstr , b , offset , arraysize )"		6298654	0					
ANR	6299814	Callee	tcc_appendf		6298654	0					
ANR	6299815	Identifier	tcc_appendf		6298654	0					
ANR	6299816	ArgumentList	"""%s.%s.%s=%s,%d,%d\\n"""		6298654	1					
ANR	6299817	Argument	"""%s.%s.%s=%s,%d,%d\\n"""		6298654	0					
ANR	6299818	PrimaryExpression	"""%s.%s.%s=%s,%d,%d\\n"""		6298654	0					
ANR	6299819	Argument	ctype		6298654	1					
ANR	6299820	Identifier	ctype		6298654	0					
ANR	6299821	Argument	name		6298654	2					
ANR	6299822	Identifier	name		6298654	0					
ANR	6299823	Argument	varstr		6298654	3					
ANR	6299824	Identifier	varstr		6298654	0					
ANR	6299825	Argument	b		6298654	4					
ANR	6299826	Identifier	b		6298654	0					
ANR	6299827	Argument	offset		6298654	5					
ANR	6299828	Identifier	offset		6298654	0					
ANR	6299829	Argument	arraysize		6298654	6					
ANR	6299830	Identifier	arraysize		6298654	0					
ANR	6299831	ExpressionStatement	"eprintf ( ""%s.%s.%s.type=%s\\n"" , ctype , name , varstr , b )"	1187:7:28609:28663	6298654	6	True				
ANR	6299832	CallExpression	"eprintf ( ""%s.%s.%s.type=%s\\n"" , ctype , name , varstr , b )"		6298654	0					
ANR	6299833	Callee	eprintf		6298654	0					
ANR	6299834	Identifier	eprintf		6298654	0					
ANR	6299835	ArgumentList	"""%s.%s.%s.type=%s\\n"""		6298654	1					
ANR	6299836	Argument	"""%s.%s.%s.type=%s\\n"""		6298654	0					
ANR	6299837	PrimaryExpression	"""%s.%s.%s.type=%s\\n"""		6298654	0					
ANR	6299838	Argument	ctype		6298654	1					
ANR	6299839	Identifier	ctype		6298654	0					
ANR	6299840	Argument	name		6298654	2					
ANR	6299841	Identifier	name		6298654	0					
ANR	6299842	Argument	varstr		6298654	3					
ANR	6299843	Identifier	varstr		6298654	0					
ANR	6299844	Argument	b		6298654	4					
ANR	6299845	Identifier	b		6298654	0					
ANR	6299846	ExpressionStatement	"eprintf ( ""%s.%s.%s.offset=%d\\n"" , ctype , name , varstr , offset )"	1188:7:28672:28733	6298654	7	True				
ANR	6299847	CallExpression	"eprintf ( ""%s.%s.%s.offset=%d\\n"" , ctype , name , varstr , offset )"		6298654	0					
ANR	6299848	Callee	eprintf		6298654	0					
ANR	6299849	Identifier	eprintf		6298654	0					
ANR	6299850	ArgumentList	"""%s.%s.%s.offset=%d\\n"""		6298654	1					
ANR	6299851	Argument	"""%s.%s.%s.offset=%d\\n"""		6298654	0					
ANR	6299852	PrimaryExpression	"""%s.%s.%s.offset=%d\\n"""		6298654	0					
ANR	6299853	Argument	ctype		6298654	1					
ANR	6299854	Identifier	ctype		6298654	0					
ANR	6299855	Argument	name		6298654	2					
ANR	6299856	Identifier	name		6298654	0					
ANR	6299857	Argument	varstr		6298654	3					
ANR	6299858	Identifier	varstr		6298654	0					
ANR	6299859	Argument	offset		6298654	4					
ANR	6299860	Identifier	offset		6298654	0					
ANR	6299861	ExpressionStatement	"eprintf ( ""%s.%s.%s.array=%d\\n"" , ctype , name , varstr , arraysize )"	1189:7:28742:28805	6298654	8	True				
ANR	6299862	CallExpression	"eprintf ( ""%s.%s.%s.array=%d\\n"" , ctype , name , varstr , arraysize )"		6298654	0					
ANR	6299863	Callee	eprintf		6298654	0					
ANR	6299864	Identifier	eprintf		6298654	0					
ANR	6299865	ArgumentList	"""%s.%s.%s.array=%d\\n"""		6298654	1					
ANR	6299866	Argument	"""%s.%s.%s.array=%d\\n"""		6298654	0					
ANR	6299867	PrimaryExpression	"""%s.%s.%s.array=%d\\n"""		6298654	0					
ANR	6299868	Argument	ctype		6298654	1					
ANR	6299869	Identifier	ctype		6298654	0					
ANR	6299870	Argument	name		6298654	2					
ANR	6299871	Identifier	name		6298654	0					
ANR	6299872	Argument	varstr		6298654	3					
ANR	6299873	Identifier	varstr		6298654	0					
ANR	6299874	Argument	arraysize		6298654	4					
ANR	6299875	Identifier	arraysize		6298654	0					
ANR	6299876	ExpressionStatement	arraysize = 0	1192:7:28919:28932	6298654	9	True				
ANR	6299877	AssignmentExpression	arraysize = 0		6298654	0		=			
ANR	6299878	Identifier	arraysize		6298654	0					
ANR	6299879	PrimaryExpression	0		6298654	1					
ANR	6299880	IfStatement	if ( type1 . t & VT_BITFIELD )		6298654	10					
ANR	6299881	Condition	type1 . t & VT_BITFIELD	1193:11:28945:28965	6298654	0	True				
ANR	6299882	BitAndExpression	type1 . t & VT_BITFIELD		6298654	0		&			
ANR	6299883	MemberAccess	type1 . t		6298654	0					
ANR	6299884	Identifier	type1		6298654	0					
ANR	6299885	Identifier	t		6298654	1					
ANR	6299886	Identifier	VT_BITFIELD		6298654	1					
ANR	6299887	CompoundStatement		236:34:6568:6568	6298654	1					
ANR	6299888	ExpressionStatement	"tcc_appendf ( ""%s.%s.%s.bitfield.pos=%d\\n"" , ctype , name , varstr , ( type1 . t >> VT_STRUCT_SHIFT ) & 0x3f )"	1194:8:28978:29087	6298654	0	True				
ANR	6299889	CallExpression	"tcc_appendf ( ""%s.%s.%s.bitfield.pos=%d\\n"" , ctype , name , varstr , ( type1 . t >> VT_STRUCT_SHIFT ) & 0x3f )"		6298654	0					
ANR	6299890	Callee	tcc_appendf		6298654	0					
ANR	6299891	Identifier	tcc_appendf		6298654	0					
ANR	6299892	ArgumentList	"""%s.%s.%s.bitfield.pos=%d\\n"""		6298654	1					
ANR	6299893	Argument	"""%s.%s.%s.bitfield.pos=%d\\n"""		6298654	0					
ANR	6299894	PrimaryExpression	"""%s.%s.%s.bitfield.pos=%d\\n"""		6298654	0					
ANR	6299895	Argument	ctype		6298654	1					
ANR	6299896	Identifier	ctype		6298654	0					
ANR	6299897	Argument	name		6298654	2					
ANR	6299898	Identifier	name		6298654	0					
ANR	6299899	Argument	varstr		6298654	3					
ANR	6299900	Identifier	varstr		6298654	0					
ANR	6299901	Argument	( type1 . t >> VT_STRUCT_SHIFT ) & 0x3f		6298654	4					
ANR	6299902	BitAndExpression	( type1 . t >> VT_STRUCT_SHIFT ) & 0x3f		6298654	0		&			
ANR	6299903	ShiftExpression	type1 . t >> VT_STRUCT_SHIFT		6298654	0		>>			
ANR	6299904	MemberAccess	type1 . t		6298654	0					
ANR	6299905	Identifier	type1		6298654	0					
ANR	6299906	Identifier	t		6298654	1					
ANR	6299907	Identifier	VT_STRUCT_SHIFT		6298654	1					
ANR	6299908	PrimaryExpression	0x3f		6298654	1					
ANR	6299909	ExpressionStatement	"tcc_appendf ( ""%s.%s.%s.bitfield.size=%d\\n"" , ctype , name , varstr , ( type1 . t >> ( VT_STRUCT_SHIFT + 6 ) ) & 0x3f )"	1196:8:29097:29213	6298654	1	True				
ANR	6299910	CallExpression	"tcc_appendf ( ""%s.%s.%s.bitfield.size=%d\\n"" , ctype , name , varstr , ( type1 . t >> ( VT_STRUCT_SHIFT + 6 ) ) & 0x3f )"		6298654	0					
ANR	6299911	Callee	tcc_appendf		6298654	0					
ANR	6299912	Identifier	tcc_appendf		6298654	0					
ANR	6299913	ArgumentList	"""%s.%s.%s.bitfield.size=%d\\n"""		6298654	1					
ANR	6299914	Argument	"""%s.%s.%s.bitfield.size=%d\\n"""		6298654	0					
ANR	6299915	PrimaryExpression	"""%s.%s.%s.bitfield.size=%d\\n"""		6298654	0					
ANR	6299916	Argument	ctype		6298654	1					
ANR	6299917	Identifier	ctype		6298654	0					
ANR	6299918	Argument	name		6298654	2					
ANR	6299919	Identifier	name		6298654	0					
ANR	6299920	Argument	varstr		6298654	3					
ANR	6299921	Identifier	varstr		6298654	0					
ANR	6299922	Argument	( type1 . t >> ( VT_STRUCT_SHIFT + 6 ) ) & 0x3f		6298654	4					
ANR	6299923	BitAndExpression	( type1 . t >> ( VT_STRUCT_SHIFT + 6 ) ) & 0x3f		6298654	0		&			
ANR	6299924	ShiftExpression	type1 . t >> ( VT_STRUCT_SHIFT + 6 )		6298654	0		>>			
ANR	6299925	MemberAccess	type1 . t		6298654	0					
ANR	6299926	Identifier	type1		6298654	0					
ANR	6299927	Identifier	t		6298654	1					
ANR	6299928	AdditiveExpression	VT_STRUCT_SHIFT + 6		6298654	1		+			
ANR	6299929	Identifier	VT_STRUCT_SHIFT		6298654	0					
ANR	6299930	PrimaryExpression	6		6298654	1					
ANR	6299931	PrimaryExpression	0x3f		6298654	1					
ANR	6299932	IfStatement	if ( v == 0 && is_structured ( & type1 ) )		6298654	10					
ANR	6299933	Condition	v == 0 && is_structured ( & type1 )	1203:9:29279:29309	6298654	0	True				
ANR	6299934	AndExpression	v == 0 && is_structured ( & type1 )		6298654	0		&&			
ANR	6299935	EqualityExpression	v == 0		6298654	0		==			
ANR	6299936	Identifier	v		6298654	0					
ANR	6299937	PrimaryExpression	0		6298654	1					
ANR	6299938	CallExpression	is_structured ( & type1 )		6298654	1					
ANR	6299939	Callee	is_structured		6298654	0					
ANR	6299940	Identifier	is_structured		6298654	0					
ANR	6299941	ArgumentList	& type1		6298654	1					
ANR	6299942	Argument	& type1		6298654	0					
ANR	6299943	UnaryOperationExpression	& type1		6298654	0					
ANR	6299944	UnaryOperator	&		6298654	0					
ANR	6299945	Identifier	type1		6298654	1					
ANR	6299946	CompoundStatement		246:42:6912:6912	6298654	1					
ANR	6299947	ExpressionStatement	ass = type1 . ref	1204:6:29320:29335	6298654	0	True				
ANR	6299948	AssignmentExpression	ass = type1 . ref		6298654	0		=			
ANR	6299949	Identifier	ass		6298654	0					
ANR	6299950	MemberAccess	type1 . ref		6298654	1					
ANR	6299951	Identifier	type1		6298654	0					
ANR	6299952	Identifier	ref		6298654	1					
ANR	6299953	WhileStatement	while ( ( ass = ass -> next ) != NULL )		6298654	1					
ANR	6299954	Condition	( ass = ass -> next ) != NULL	1205:13:29350:29374	6298654	0	True				
ANR	6299955	EqualityExpression	( ass = ass -> next ) != NULL		6298654	0		!=			
ANR	6299956	AssignmentExpression	ass = ass -> next		6298654	0		=			
ANR	6299957	Identifier	ass		6298654	0					
ANR	6299958	PtrMemberAccess	ass -> next		6298654	1					
ANR	6299959	Identifier	ass		6298654	0					
ANR	6299960	Identifier	next		6298654	1					
ANR	6299961	Identifier	NULL		6298654	1					
ANR	6299962	CompoundStatement		248:40:6977:6977	6298654	1					
ANR	6299963	ExpressionStatement	"ss = sym_push ( ass -> v , & ass -> type , 0 , offset + ass -> c )"	1206:7:29386:29440	6298654	0	True				
ANR	6299964	AssignmentExpression	"ss = sym_push ( ass -> v , & ass -> type , 0 , offset + ass -> c )"		6298654	0		=			
ANR	6299965	Identifier	ss		6298654	0					
ANR	6299966	CallExpression	"sym_push ( ass -> v , & ass -> type , 0 , offset + ass -> c )"		6298654	1					
ANR	6299967	Callee	sym_push		6298654	0					
ANR	6299968	Identifier	sym_push		6298654	0					
ANR	6299969	ArgumentList	ass -> v		6298654	1					
ANR	6299970	Argument	ass -> v		6298654	0					
ANR	6299971	PtrMemberAccess	ass -> v		6298654	0					
ANR	6299972	Identifier	ass		6298654	0					
ANR	6299973	Identifier	v		6298654	1					
ANR	6299974	Argument	& ass -> type		6298654	1					
ANR	6299975	UnaryOperationExpression	& ass -> type		6298654	0					
ANR	6299976	UnaryOperator	&		6298654	0					
ANR	6299977	PtrMemberAccess	ass -> type		6298654	1					
ANR	6299978	Identifier	ass		6298654	0					
ANR	6299979	Identifier	type		6298654	1					
ANR	6299980	Argument	0		6298654	2					
ANR	6299981	PrimaryExpression	0		6298654	0					
ANR	6299982	Argument	offset + ass -> c		6298654	3					
ANR	6299983	AdditiveExpression	offset + ass -> c		6298654	0		+			
ANR	6299984	Identifier	offset		6298654	0					
ANR	6299985	PtrMemberAccess	ass -> c		6298654	1					
ANR	6299986	Identifier	ass		6298654	0					
ANR	6299987	Identifier	c		6298654	1					
ANR	6299988	IfStatement	if ( ! ss )		6298654	1					
ANR	6299989	Condition	! ss	1207:11:29453:29455	6298654	0	True				
ANR	6299990	UnaryOperationExpression	! ss		6298654	0					
ANR	6299991	UnaryOperator	!		6298654	0					
ANR	6299992	Identifier	ss		6298654	1					
ANR	6299993	CompoundStatement		250:16:7058:7058	6298654	1					
ANR	6299994	ReturnStatement	return ;	1208:8:29468:29474	6298654	0	True				
ANR	6299995	ExpressionStatement	* ps = ss	1210:7:29492:29500	6298654	2	True				
ANR	6299996	AssignmentExpression	* ps = ss		6298654	0		=			
ANR	6299997	UnaryOperationExpression	* ps		6298654	0					
ANR	6299998	UnaryOperator	*		6298654	0					
ANR	6299999	Identifier	ps		6298654	1					
ANR	6300000	Identifier	ss		6298654	1					
ANR	6300001	ExpressionStatement	ps = & ss -> next	1211:7:29509:29523	6298654	3	True				
ANR	6300002	AssignmentExpression	ps = & ss -> next		6298654	0		=			
ANR	6300003	Identifier	ps		6298654	0					
ANR	6300004	UnaryOperationExpression	& ss -> next		6298654	1					
ANR	6300005	UnaryOperator	&		6298654	0					
ANR	6300006	PtrMemberAccess	ss -> next		6298654	1					
ANR	6300007	Identifier	ss		6298654	0					
ANR	6300008	Identifier	next		6298654	1					
ANR	6300009	ElseStatement	else		6298654	0					
ANR	6300010	IfStatement	if ( v )		6298654	0					
ANR	6300011	Condition	v	1213:16:29549:29549	6298654	0	True				
ANR	6300012	Identifier	v		6298654	0					
ANR	6300013	CompoundStatement		256:19:7152:7152	6298654	1					
ANR	6300014	ExpressionStatement	"ss = sym_push ( v | SYM_FIELD , & type1 , 0 , offset )"	1214:6:29560:29608	6298654	0	True				
ANR	6300015	AssignmentExpression	"ss = sym_push ( v | SYM_FIELD , & type1 , 0 , offset )"		6298654	0		=			
ANR	6300016	Identifier	ss		6298654	0					
ANR	6300017	CallExpression	"sym_push ( v | SYM_FIELD , & type1 , 0 , offset )"		6298654	1					
ANR	6300018	Callee	sym_push		6298654	0					
ANR	6300019	Identifier	sym_push		6298654	0					
ANR	6300020	ArgumentList	v | SYM_FIELD		6298654	1					
ANR	6300021	Argument	v | SYM_FIELD		6298654	0					
ANR	6300022	InclusiveOrExpression	v | SYM_FIELD		6298654	0		|			
ANR	6300023	Identifier	v		6298654	0					
ANR	6300024	Identifier	SYM_FIELD		6298654	1					
ANR	6300025	Argument	& type1		6298654	1					
ANR	6300026	UnaryOperationExpression	& type1		6298654	0					
ANR	6300027	UnaryOperator	&		6298654	0					
ANR	6300028	Identifier	type1		6298654	1					
ANR	6300029	Argument	0		6298654	2					
ANR	6300030	PrimaryExpression	0		6298654	0					
ANR	6300031	Argument	offset		6298654	3					
ANR	6300032	Identifier	offset		6298654	0					
ANR	6300033	IfStatement	if ( ! ss )		6298654	1					
ANR	6300034	Condition	! ss	1215:10:29620:29622	6298654	0	True				
ANR	6300035	UnaryOperationExpression	! ss		6298654	0					
ANR	6300036	UnaryOperator	!		6298654	0					
ANR	6300037	Identifier	ss		6298654	1					
ANR	6300038	CompoundStatement		258:15:7225:7225	6298654	1					
ANR	6300039	ReturnStatement	return ;	1216:7:29634:29640	6298654	0	True				
ANR	6300040	ExpressionStatement	* ps = ss	1218:6:29656:29664	6298654	2	True				
ANR	6300041	AssignmentExpression	* ps = ss		6298654	0		=			
ANR	6300042	UnaryOperationExpression	* ps		6298654	0					
ANR	6300043	UnaryOperator	*		6298654	0					
ANR	6300044	Identifier	ps		6298654	1					
ANR	6300045	Identifier	ss		6298654	1					
ANR	6300046	ExpressionStatement	ps = & ss -> next	1219:6:29672:29686	6298654	3	True				
ANR	6300047	AssignmentExpression	ps = & ss -> next		6298654	0		=			
ANR	6300048	Identifier	ps		6298654	0					
ANR	6300049	UnaryOperationExpression	& ss -> next		6298654	1					
ANR	6300050	UnaryOperator	&		6298654	0					
ANR	6300051	PtrMemberAccess	ss -> next		6298654	1					
ANR	6300052	Identifier	ss		6298654	0					
ANR	6300053	Identifier	next		6298654	1					
ANR	6300054	IfStatement	if ( tok == ';' || tok == TOK_EOF )		6298654	11					
ANR	6300055	Condition	tok == ';' || tok == TOK_EOF	1221:9:29704:29731	6298654	0	True				
ANR	6300056	OrExpression	tok == ';' || tok == TOK_EOF		6298654	0		||			
ANR	6300057	EqualityExpression	tok == ';'		6298654	0		==			
ANR	6300058	Identifier	tok		6298654	0					
ANR	6300059	PrimaryExpression	';'		6298654	1					
ANR	6300060	EqualityExpression	tok == TOK_EOF		6298654	1		==			
ANR	6300061	Identifier	tok		6298654	0					
ANR	6300062	Identifier	TOK_EOF		6298654	1					
ANR	6300063	CompoundStatement		264:39:7334:7334	6298654	1					
ANR	6300064	BreakStatement	break ;	1222:6:29742:29747	6298654	0	True				
ANR	6300065	ExpressionStatement	"skip ( ',' )"	1224:5:29761:29771	6298654	12	True				
ANR	6300066	CallExpression	"skip ( ',' )"		6298654	0					
ANR	6300067	Callee	skip		6298654	0					
ANR	6300068	Identifier	skip		6298654	0					
ANR	6300069	ArgumentList	"','"		6298654	1					
ANR	6300070	Argument	"','"		6298654	0					
ANR	6300071	PrimaryExpression	"','"		6298654	0					
ANR	6300072	ExpressionStatement	skip ( ';' )	1226:4:29783:29793	6298654	2	True				
ANR	6300073	CallExpression	skip ( ';' )		6298654	0					
ANR	6300074	Callee	skip		6298654	0					
ANR	6300075	Identifier	skip		6298654	0					
ANR	6300076	ArgumentList	';'		6298654	1					
ANR	6300077	Argument	';'		6298654	0					
ANR	6300078	PrimaryExpression	';'		6298654	0					
ANR	6300079	ExpressionStatement	skip ( '}' )	1228:3:29803:29813	6298654	6	True				
ANR	6300080	CallExpression	skip ( '}' )		6298654	0					
ANR	6300081	Callee	skip		6298654	0					
ANR	6300082	Identifier	skip		6298654	0					
ANR	6300083	ArgumentList	'}'		6298654	1					
ANR	6300084	Argument	'}'		6298654	0					
ANR	6300085	PrimaryExpression	'}'		6298654	0					
ANR	6300086	ExpressionStatement	s -> c = ( c + maxalign - 1 ) & - maxalign	1230:3:29852:29890	6298654	7	True				
ANR	6300087	AssignmentExpression	s -> c = ( c + maxalign - 1 ) & - maxalign		6298654	0		=			
ANR	6300088	PtrMemberAccess	s -> c		6298654	0					
ANR	6300089	Identifier	s		6298654	0					
ANR	6300090	Identifier	c		6298654	1					
ANR	6300091	BitAndExpression	( c + maxalign - 1 ) & - maxalign		6298654	1		&			
ANR	6300092	AdditiveExpression	c + maxalign - 1		6298654	0		+			
ANR	6300093	Identifier	c		6298654	0					
ANR	6300094	AdditiveExpression	maxalign - 1		6298654	1		-			
ANR	6300095	Identifier	maxalign		6298654	0					
ANR	6300096	PrimaryExpression	1		6298654	1					
ANR	6300097	UnaryOperationExpression	- maxalign		6298654	1					
ANR	6300098	UnaryOperator	-		6298654	0					
ANR	6300099	Identifier	maxalign		6298654	1					
ANR	6300100	ExpressionStatement	s -> r = maxalign	1231:3:29895:29910	6298654	8	True				
ANR	6300101	AssignmentExpression	s -> r = maxalign		6298654	0		=			
ANR	6300102	PtrMemberAccess	s -> r		6298654	0					
ANR	6300103	Identifier	s		6298654	0					
ANR	6300104	Identifier	r		6298654	1					
ANR	6300105	Identifier	maxalign		6298654	1					
ANR	6300106	ReturnType	static void		6298654	1					
ANR	6300107	Identifier	struct_decl		6298654	2					
ANR	6300108	ParameterList	"CType * type , int u"		6298654	3					
ANR	6300109	Parameter	CType * type	958:24:22379:22389	6298654	0	True				
ANR	6300110	ParameterType	CType *		6298654	0					
ANR	6300111	Identifier	type		6298654	1					
ANR	6300112	Parameter	int u	958:37:22392:22396	6298654	1	True				
ANR	6300113	ParameterType	int		6298654	0					
ANR	6300114	Identifier	u		6298654	1					
ANR	6300115	CFGEntryNode	ENTRY		6298654		True				
ANR	6300116	CFGExitNode	EXIT		6298654		True				
ANR	6300117	Symbol	ps		6298654						
ANR	6300118	Symbol	* ss		6298654						
ANR	6300119	Symbol	VT_INT16		6298654						
ANR	6300120	Symbol	btype		6298654						
ANR	6300121	Symbol	type		6298654						
ANR	6300122	Symbol	type_size		6298654						
ANR	6300123	Symbol	type1 . ref		6298654						
ANR	6300124	Symbol	VT_STRUCT_SHIFT		6298654						
ANR	6300125	Symbol	parse_btype		6298654						
ANR	6300126	Symbol	ad		6298654						
ANR	6300127	Symbol	VT_INT8		6298654						
ANR	6300128	Symbol	ass -> c		6298654						
ANR	6300129	Symbol	struct_find		6298654						
ANR	6300130	Symbol	anon_sym		6298654						
ANR	6300131	Symbol	size		6298654						
ANR	6300132	Symbol	VT_BITFIELD		6298654						
ANR	6300133	Symbol	ss -> type . t		6298654						
ANR	6300134	Symbol	SYM_STRUCT		6298654						
ANR	6300135	Symbol	& btype		6298654						
ANR	6300136	Symbol	expr_const		6298654						
ANR	6300137	Symbol	varstr		6298654						
ANR	6300138	Symbol	s -> r		6298654						
ANR	6300139	Symbol	VT_TYPEDEF		6298654						
ANR	6300140	Symbol	maxalign		6298654						
ANR	6300141	Symbol	s -> type . t		6298654						
ANR	6300142	Symbol	& ad		6298654						
ANR	6300143	Symbol	VT_EXTERN		6298654						
ANR	6300144	Symbol	prevbt		6298654						
ANR	6300145	Symbol	tok		6298654						
ANR	6300146	Symbol	type_bt		6298654						
ANR	6300147	Symbol	bt		6298654						
ANR	6300148	Symbol	s -> c		6298654						
ANR	6300149	Symbol	TOK_UIDENT		6298654						
ANR	6300150	Symbol	ss		6298654						
ANR	6300151	Symbol	type -> ref		6298654						
ANR	6300152	Symbol	a		6298654						
ANR	6300153	Symbol	b		6298654						
ANR	6300154	Symbol	c		6298654						
ANR	6300155	Symbol	SYM_FIRST_ANOM		6298654						
ANR	6300156	Symbol	VT_INLINE		6298654						
ANR	6300157	Symbol	& ss -> next		6298654						
ANR	6300158	Symbol	ad . aligned		6298654						
ANR	6300159	Symbol	buf		6298654						
ANR	6300160	Symbol	s		6298654						
ANR	6300161	Symbol	u		6298654						
ANR	6300162	Symbol	v		6298654						
ANR	6300163	Symbol	VT_INT64		6298654						
ANR	6300164	Symbol	ass		6298654						
ANR	6300165	Symbol	get_tok_str		6298654						
ANR	6300166	Symbol	* tcc_state		6298654						
ANR	6300167	Symbol	align		6298654						
ANR	6300168	Symbol	* tcc_state -> pack_stack_ptr		6298654						
ANR	6300169	Symbol	SYM_FIELD		6298654						
ANR	6300170	Symbol	ss -> type		6298654						
ANR	6300171	Symbol	strcmp		6298654						
ANR	6300172	Symbol	VT_CONST		6298654						
ANR	6300173	Symbol	tcc_state		6298654						
ANR	6300174	Symbol	NULL		6298654						
ANR	6300175	Symbol	offset		6298654						
ANR	6300176	Symbol	TOK_IDENT		6298654						
ANR	6300177	Symbol	tcc_state -> pack_stack_ptr		6298654						
ANR	6300178	Symbol	ass -> next		6298654						
ANR	6300179	Symbol	* ps		6298654						
ANR	6300180	Symbol	type1		6298654						
ANR	6300181	Symbol	stderr		6298654						
ANR	6300182	Symbol	tcc_nerr		6298654						
ANR	6300183	Symbol	VT_BTYPE		6298654						
ANR	6300184	Symbol	VT_FUNC		6298654						
ANR	6300185	Symbol	TOK_UNION		6298654						
ANR	6300186	Symbol	ctype		6298654						
ANR	6300187	Symbol	type -> t		6298654						
ANR	6300188	Symbol	name		6298654						
ANR	6300189	Symbol	s -> type		6298654						
ANR	6300190	Symbol	VT_STATIC		6298654						
ANR	6300191	Symbol	not_structured		6298654						
ANR	6300192	Symbol	ad . packed		6298654						
ANR	6300193	Symbol	VT_BOOL		6298654						
ANR	6300194	Symbol	& int64_type		6298654						
ANR	6300195	Symbol	CType		6298654						
ANR	6300196	Symbol	TYPE_DIRECT		6298654						
ANR	6300197	Symbol	arraysize		6298654						
ANR	6300198	Symbol	TOK_STRUCT		6298654						
ANR	6300199	Symbol	ass -> v		6298654						
ANR	6300200	Symbol	* ass		6298654						
ANR	6300201	Symbol	* type		6298654						
ANR	6300202	Symbol	* * tcc_state		6298654						
ANR	6300203	Symbol	& align		6298654						
ANR	6300204	Symbol	VT_INT32		6298654						
ANR	6300205	Symbol	type1 . t		6298654						
ANR	6300206	Symbol	& type1		6298654						
ANR	6300207	Symbol	TYPE_ABSTRACT		6298654						
ANR	6300208	Symbol	& ass -> type		6298654						
ANR	6300209	Symbol	& s -> next		6298654						
ANR	6300210	Symbol	VT_ENUM		6298654						
ANR	6300211	Symbol	TOK_EOF		6298654						
ANR	6300212	Symbol	lbit_pos		6298654						
ANR	6300213	Symbol	TOK_ENUM		6298654						
ANR	6300214	Symbol	bit_size		6298654						
ANR	6300215	Symbol	is_structured		6298654						
ANR	6300216	Symbol	bsize		6298654						
ANR	6300217	Symbol	sym_push		6298654						
ANR	6300218	Symbol	& v		6298654						
ANR	6300219	Symbol	bit_pos		6298654						
ANR	6300220	Symbol	* s		6298654						
ANR	6300221	Function	parse_btype	1239:0:30011:35073							
ANR	6300222	FunctionDef	"parse_btype (CType * type , AttributeDef * ad)"		6300221	0					
ANR	6300223	CompoundStatement		1239:54:30065:35073	6300221	0					
ANR	6300224	IdentifierDeclStatement	"int t , u , type_found , typespec_found , typedef_found ;"	1240:1:30068:30119	6300221	0	True				
ANR	6300225	IdentifierDecl	t		6300221	0					
ANR	6300226	IdentifierDeclType	int		6300221	0					
ANR	6300227	Identifier	t		6300221	1					
ANR	6300228	IdentifierDecl	u		6300221	1					
ANR	6300229	IdentifierDeclType	int		6300221	0					
ANR	6300230	Identifier	u		6300221	1					
ANR	6300231	IdentifierDecl	type_found		6300221	2					
ANR	6300232	IdentifierDeclType	int		6300221	0					
ANR	6300233	Identifier	type_found		6300221	1					
ANR	6300234	IdentifierDecl	typespec_found		6300221	3					
ANR	6300235	IdentifierDeclType	int		6300221	0					
ANR	6300236	Identifier	typespec_found		6300221	1					
ANR	6300237	IdentifierDecl	typedef_found		6300221	4					
ANR	6300238	IdentifierDeclType	int		6300221	0					
ANR	6300239	Identifier	typedef_found		6300221	1					
ANR	6300240	IdentifierDeclStatement	Sym * s ;	1241:1:30122:30128	6300221	1	True				
ANR	6300241	IdentifierDecl	* s		6300221	0					
ANR	6300242	IdentifierDeclType	Sym *		6300221	0					
ANR	6300243	Identifier	s		6300221	1					
ANR	6300244	ExpressionStatement	"STACK_NEW0 ( CType , type1 )"	1242:1:30131:30156	6300221	2	True				
ANR	6300245	CallExpression	"STACK_NEW0 ( CType , type1 )"		6300221	0					
ANR	6300246	Callee	STACK_NEW0		6300221	0					
ANR	6300247	Identifier	STACK_NEW0		6300221	0					
ANR	6300248	ArgumentList	CType		6300221	1					
ANR	6300249	Argument	CType		6300221	0					
ANR	6300250	Identifier	CType		6300221	0					
ANR	6300251	Argument	type1		6300221	1					
ANR	6300252	Identifier	type1		6300221	0					
ANR	6300253	ExpressionStatement	"memset ( ad , 0 , sizeof ( AttributeDef ) )"	1244:1:30160:30196	6300221	3	True				
ANR	6300254	CallExpression	"memset ( ad , 0 , sizeof ( AttributeDef ) )"		6300221	0					
ANR	6300255	Callee	memset		6300221	0					
ANR	6300256	Identifier	memset		6300221	0					
ANR	6300257	ArgumentList	ad		6300221	1					
ANR	6300258	Argument	ad		6300221	0					
ANR	6300259	Identifier	ad		6300221	0					
ANR	6300260	Argument	0		6300221	1					
ANR	6300261	PrimaryExpression	0		6300221	0					
ANR	6300262	Argument	sizeof ( AttributeDef )		6300221	2					
ANR	6300263	SizeofExpression	sizeof ( AttributeDef )		6300221	0					
ANR	6300264	Sizeof	sizeof		6300221	0					
ANR	6300265	SizeofOperand	AttributeDef		6300221	1					
ANR	6300266	ExpressionStatement	type_found = 0	1245:1:30199:30213	6300221	4	True				
ANR	6300267	AssignmentExpression	type_found = 0		6300221	0		=			
ANR	6300268	Identifier	type_found		6300221	0					
ANR	6300269	PrimaryExpression	0		6300221	1					
ANR	6300270	ExpressionStatement	typespec_found = 0	1246:1:30216:30234	6300221	5	True				
ANR	6300271	AssignmentExpression	typespec_found = 0		6300221	0		=			
ANR	6300272	Identifier	typespec_found		6300221	0					
ANR	6300273	PrimaryExpression	0		6300221	1					
ANR	6300274	ExpressionStatement	typedef_found = 0	1247:1:30237:30254	6300221	6	True				
ANR	6300275	AssignmentExpression	typedef_found = 0		6300221	0		=			
ANR	6300276	Identifier	typedef_found		6300221	0					
ANR	6300277	PrimaryExpression	0		6300221	1					
ANR	6300278	ExpressionStatement	t = 0	1249:1:30305:30310	6300221	7	True				
ANR	6300279	AssignmentExpression	t = 0		6300221	0		=			
ANR	6300280	Identifier	t		6300221	0					
ANR	6300281	PrimaryExpression	0		6300221	1					
ANR	6300282	WhileStatement	while ( tcc_nerr ( ) == 0 )		6300221	8					
ANR	6300283	Condition	tcc_nerr ( ) == 0	1250:8:30344:30359	6300221	0	True				
ANR	6300284	EqualityExpression	tcc_nerr ( ) == 0		6300221	0		==			
ANR	6300285	CallExpression	tcc_nerr ( )		6300221	0					
ANR	6300286	Callee	tcc_nerr		6300221	0					
ANR	6300287	Identifier	tcc_nerr		6300221	0					
ANR	6300288	ArgumentList			6300221	1					
ANR	6300289	PrimaryExpression	0		6300221	1					
ANR	6300290	CompoundStatement		12:26:296:296	6300221	1					
ANR	6300291	SwitchStatement	switch ( tok )		6300221	0					
ANR	6300292	Condition	tok	1251:10:30374:30376	6300221	0	True				
ANR	6300293	Identifier	tok		6300221	0					
ANR	6300294	CompoundStatement		13:15:313:313	6300221	1					
ANR	6300295	Label	case TOK_EXTENSION :	1252:2:30383:30401	6300221	0	True				
ANR	6300296	Identifier	TOK_EXTENSION		6300221	0					
ANR	6300297	ExpressionStatement	next ( )	1254:3:30453:30460	6300221	1	True				
ANR	6300298	CallExpression	next ( )		6300221	0					
ANR	6300299	Callee	next		6300221	0					
ANR	6300300	Identifier	next		6300221	0					
ANR	6300301	ArgumentList			6300221	1					
ANR	6300302	ContinueStatement	continue ;	1255:3:30465:30473	6300221	2	True				
ANR	6300303	Label	case TOK_UINT8 :	1262:2:30683:30697	6300221	3	True				
ANR	6300304	Identifier	TOK_UINT8		6300221	0					
ANR	6300305	ExpressionStatement	t |= VT_UNSIGNED	1263:3:30702:30718	6300221	4	True				
ANR	6300306	AssignmentExpression	t |= VT_UNSIGNED		6300221	0		|=			
ANR	6300307	Identifier	t		6300221	0					
ANR	6300308	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300309	Label	case TOK_INT8 :	1264:2:30722:30735	6300221	5	True				
ANR	6300310	Identifier	TOK_INT8		6300221	0					
ANR	6300311	ExpressionStatement	u = VT_INT8	1265:3:30740:30751	6300221	6	True				
ANR	6300312	AssignmentExpression	u = VT_INT8		6300221	0		=			
ANR	6300313	Identifier	u		6300221	0					
ANR	6300314	Identifier	VT_INT8		6300221	1					
ANR	6300315	GotoStatement	goto basic_type ;	1266:3:30756:30771	6300221	7	True				
ANR	6300316	Identifier	basic_type		6300221	0					
ANR	6300317	Label	case TOK_CHAR :	1267:2:30775:30788	6300221	8	True				
ANR	6300318	Identifier	TOK_CHAR		6300221	0					
ANR	6300319	ExpressionStatement	u = VT_INT8	1268:3:30793:30804	6300221	9	True				
ANR	6300320	AssignmentExpression	u = VT_INT8		6300221	0		=			
ANR	6300321	Identifier	u		6300221	0					
ANR	6300322	Identifier	VT_INT8		6300221	1					
ANR	6300323	ExpressionStatement	t |= VT_CHAR	1270:3:30854:30866	6300221	10	True				
ANR	6300324	AssignmentExpression	t |= VT_CHAR		6300221	0		|=			
ANR	6300325	Identifier	t		6300221	0					
ANR	6300326	Identifier	VT_CHAR		6300221	1					
ANR	6300327	Label	basic_type :	1271:0:30868:30878	6300221	11	True				
ANR	6300328	Identifier	basic_type		6300221	0					
ANR	6300329	ExpressionStatement	next ( )	1272:3:30883:30890	6300221	12	True				
ANR	6300330	CallExpression	next ( )		6300221	0					
ANR	6300331	Callee	next		6300221	0					
ANR	6300332	Identifier	next		6300221	0					
ANR	6300333	ArgumentList			6300221	1					
ANR	6300334	Label	basic_type1 :	1273:0:30892:30903	6300221	13	True				
ANR	6300335	Identifier	basic_type1		6300221	0					
ANR	6300336	IfStatement	if ( ( t & VT_BTYPE ) != 0 )		6300221	14					
ANR	6300337	Condition	( t & VT_BTYPE ) != 0	1274:7:30912:30930	6300221	0	True				
ANR	6300338	EqualityExpression	( t & VT_BTYPE ) != 0		6300221	0		!=			
ANR	6300339	BitAndExpression	t & VT_BTYPE		6300221	0		&			
ANR	6300340	Identifier	t		6300221	0					
ANR	6300341	Identifier	VT_BTYPE		6300221	1					
ANR	6300342	PrimaryExpression	0		6300221	1					
ANR	6300343	CompoundStatement		36:28:867:867	6300221	1					
ANR	6300344	ExpressionStatement	"tcc_error ( ""too many basic types"" )"	1275:4:30939:30973	6300221	0	True				
ANR	6300345	CallExpression	"tcc_error ( ""too many basic types"" )"		6300221	0					
ANR	6300346	Callee	tcc_error		6300221	0					
ANR	6300347	Identifier	tcc_error		6300221	0					
ANR	6300348	ArgumentList	"""too many basic types"""		6300221	1					
ANR	6300349	Argument	"""too many basic types"""		6300221	0					
ANR	6300350	PrimaryExpression	"""too many basic types"""		6300221	0					
ANR	6300351	ReturnStatement	return 0 ;	1276:4:30979:30987	6300221	1	True				
ANR	6300352	PrimaryExpression	0		6300221	0					
ANR	6300353	ExpressionStatement	t |= u	1278:3:30997:31003	6300221	15	True				
ANR	6300354	AssignmentExpression	t |= u		6300221	0		|=			
ANR	6300355	Identifier	t		6300221	0					
ANR	6300356	Identifier	u		6300221	1					
ANR	6300357	ExpressionStatement	typespec_found = 1	1279:3:31008:31026	6300221	16	True				
ANR	6300358	AssignmentExpression	typespec_found = 1		6300221	0		=			
ANR	6300359	Identifier	typespec_found		6300221	0					
ANR	6300360	PrimaryExpression	1		6300221	1					
ANR	6300361	BreakStatement	break ;	1280:3:31031:31036	6300221	17	True				
ANR	6300362	Label	case TOK_VOID :	1283:2:31055:31068	6300221	18	True				
ANR	6300363	Identifier	TOK_VOID		6300221	0					
ANR	6300364	ExpressionStatement	u = VT_VOID	1284:3:31073:31084	6300221	19	True				
ANR	6300365	AssignmentExpression	u = VT_VOID		6300221	0		=			
ANR	6300366	Identifier	u		6300221	0					
ANR	6300367	Identifier	VT_VOID		6300221	1					
ANR	6300368	GotoStatement	goto basic_type ;	1285:3:31089:31104	6300221	20	True				
ANR	6300369	Identifier	basic_type		6300221	0					
ANR	6300370	Label	case TOK_UINT16 :	1288:2:31142:31157	6300221	21	True				
ANR	6300371	Identifier	TOK_UINT16		6300221	0					
ANR	6300372	ExpressionStatement	t |= VT_UNSIGNED	1289:3:31162:31178	6300221	22	True				
ANR	6300373	AssignmentExpression	t |= VT_UNSIGNED		6300221	0		|=			
ANR	6300374	Identifier	t		6300221	0					
ANR	6300375	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300376	Label	case TOK_INT16 :	1290:2:31182:31196	6300221	23	True				
ANR	6300377	Identifier	TOK_INT16		6300221	0					
ANR	6300378	Label	case TOK_SHORT :	1291:2:31200:31214	6300221	24	True				
ANR	6300379	Identifier	TOK_SHORT		6300221	0					
ANR	6300380	ExpressionStatement	u = VT_INT16	1292:3:31219:31231	6300221	25	True				
ANR	6300381	AssignmentExpression	u = VT_INT16		6300221	0		=			
ANR	6300382	Identifier	u		6300221	0					
ANR	6300383	Identifier	VT_INT16		6300221	1					
ANR	6300384	GotoStatement	goto basic_type ;	1293:3:31236:31251	6300221	26	True				
ANR	6300385	Identifier	basic_type		6300221	0					
ANR	6300386	Label	case TOK_UINT32 :	1296:2:31287:31302	6300221	27	True				
ANR	6300387	Identifier	TOK_UINT32		6300221	0					
ANR	6300388	ExpressionStatement	t |= VT_UNSIGNED	1297:3:31307:31323	6300221	28	True				
ANR	6300389	AssignmentExpression	t |= VT_UNSIGNED		6300221	0		|=			
ANR	6300390	Identifier	t		6300221	0					
ANR	6300391	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300392	Label	case TOK_INT32 :	1298:2:31327:31341	6300221	29	True				
ANR	6300393	Identifier	TOK_INT32		6300221	0					
ANR	6300394	ExpressionStatement	u = VT_INT32	1299:3:31346:31358	6300221	30	True				
ANR	6300395	AssignmentExpression	u = VT_INT32		6300221	0		=			
ANR	6300396	Identifier	u		6300221	0					
ANR	6300397	Identifier	VT_INT32		6300221	1					
ANR	6300398	GotoStatement	goto basic_type ;	1300:3:31363:31378	6300221	31	True				
ANR	6300399	Identifier	basic_type		6300221	0					
ANR	6300400	Label	case TOK_INT :	1301:2:31382:31394	6300221	32	True				
ANR	6300401	Identifier	TOK_INT		6300221	0					
ANR	6300402	ExpressionStatement	next ( )	1302:3:31399:31406	6300221	33	True				
ANR	6300403	CallExpression	next ( )		6300221	0					
ANR	6300404	Callee	next		6300221	0					
ANR	6300405	Identifier	next		6300221	0					
ANR	6300406	ArgumentList			6300221	1					
ANR	6300407	ExpressionStatement	typespec_found = 1	1303:3:31411:31429	6300221	34	True				
ANR	6300408	AssignmentExpression	typespec_found = 1		6300221	0		=			
ANR	6300409	Identifier	typespec_found		6300221	0					
ANR	6300410	PrimaryExpression	1		6300221	1					
ANR	6300411	BreakStatement	break ;	1304:3:31434:31439	6300221	35	True				
ANR	6300412	Label	case TOK_UINT64 :	1307:2:31487:31502	6300221	36	True				
ANR	6300413	Identifier	TOK_UINT64		6300221	0					
ANR	6300414	ExpressionStatement	t |= VT_UNSIGNED	1308:3:31507:31523	6300221	37	True				
ANR	6300415	AssignmentExpression	t |= VT_UNSIGNED		6300221	0		|=			
ANR	6300416	Identifier	t		6300221	0					
ANR	6300417	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300418	Label	case TOK_INT64 :	1309:2:31527:31541	6300221	38	True				
ANR	6300419	Identifier	TOK_INT64		6300221	0					
ANR	6300420	ExpressionStatement	u = VT_INT64	1310:3:31546:31558	6300221	39	True				
ANR	6300421	AssignmentExpression	u = VT_INT64		6300221	0		=			
ANR	6300422	Identifier	u		6300221	0					
ANR	6300423	Identifier	VT_INT64		6300221	1					
ANR	6300424	GotoStatement	goto basic_type ;	1311:3:31563:31578	6300221	40	True				
ANR	6300425	Identifier	basic_type		6300221	0					
ANR	6300426	Label	case TOK_LONG :	1312:2:31582:31595	6300221	41	True				
ANR	6300427	Identifier	TOK_LONG		6300221	0					
ANR	6300428	ExpressionStatement	next ( )	1313:3:31600:31607	6300221	42	True				
ANR	6300429	CallExpression	next ( )		6300221	0					
ANR	6300430	Callee	next		6300221	0					
ANR	6300431	Identifier	next		6300221	0					
ANR	6300432	ArgumentList			6300221	1					
ANR	6300433	IfStatement	if ( ( t & VT_BTYPE ) == VT_DOUBLE )		6300221	43					
ANR	6300434	Condition	( t & VT_BTYPE ) == VT_DOUBLE	1315:7:31670:31696	6300221	0	True				
ANR	6300435	EqualityExpression	( t & VT_BTYPE ) == VT_DOUBLE		6300221	0		==			
ANR	6300436	BitAndExpression	t & VT_BTYPE		6300221	0		&			
ANR	6300437	Identifier	t		6300221	0					
ANR	6300438	Identifier	VT_BTYPE		6300221	1					
ANR	6300439	Identifier	VT_DOUBLE		6300221	1					
ANR	6300440	CompoundStatement		77:36:1633:1633	6300221	1					
ANR	6300441	IfStatement	"if ( strncmp ( tcc_state -> os , ""windows"" , 7 ) )"		6300221	0					
ANR	6300442	Condition	"strncmp ( tcc_state -> os , ""windows"" , 7 )"	1316:8:31709:31745	6300221	0	True				
ANR	6300443	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6300221	0					
ANR	6300444	Callee	strncmp		6300221	0					
ANR	6300445	Identifier	strncmp		6300221	0					
ANR	6300446	ArgumentList	tcc_state -> os		6300221	1					
ANR	6300447	Argument	tcc_state -> os		6300221	0					
ANR	6300448	PtrMemberAccess	tcc_state -> os		6300221	0					
ANR	6300449	Identifier	tcc_state		6300221	0					
ANR	6300450	Identifier	os		6300221	1					
ANR	6300451	Argument	"""windows"""		6300221	1					
ANR	6300452	PrimaryExpression	"""windows"""		6300221	0					
ANR	6300453	Argument	7		6300221	2					
ANR	6300454	PrimaryExpression	7		6300221	0					
ANR	6300455	CompoundStatement		78:47:1682:1682	6300221	1					
ANR	6300456	ExpressionStatement	t = ( t & ~VT_BTYPE ) | VT_LDOUBLE	1317:5:31755:31787	6300221	0	True				
ANR	6300457	AssignmentExpression	t = ( t & ~VT_BTYPE ) | VT_LDOUBLE		6300221	0		=			
ANR	6300458	Identifier	t		6300221	0					
ANR	6300459	InclusiveOrExpression	( t & ~VT_BTYPE ) | VT_LDOUBLE		6300221	1		|			
ANR	6300460	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6300461	Identifier	t		6300221	0					
ANR	6300462	Identifier	~VT_BTYPE		6300221	1					
ANR	6300463	Identifier	VT_LDOUBLE		6300221	1					
ANR	6300464	ElseStatement	else		6300221	0					
ANR	6300465	IfStatement	if ( ( t & VT_BTYPE ) == VT_LONG )		6300221	0					
ANR	6300466	Condition	( t & VT_BTYPE ) == VT_LONG	1319:14:31809:31833	6300221	0	True				
ANR	6300467	EqualityExpression	( t & VT_BTYPE ) == VT_LONG		6300221	0		==			
ANR	6300468	BitAndExpression	t & VT_BTYPE		6300221	0		&			
ANR	6300469	Identifier	t		6300221	0					
ANR	6300470	Identifier	VT_BTYPE		6300221	1					
ANR	6300471	Identifier	VT_LONG		6300221	1					
ANR	6300472	CompoundStatement		81:41:1770:1770	6300221	1					
ANR	6300473	ExpressionStatement	t = ( t & ~VT_BTYPE ) | VT_INT64	1320:4:31842:31872	6300221	0	True				
ANR	6300474	AssignmentExpression	t = ( t & ~VT_BTYPE ) | VT_INT64		6300221	0		=			
ANR	6300475	Identifier	t		6300221	0					
ANR	6300476	InclusiveOrExpression	( t & ~VT_BTYPE ) | VT_INT64		6300221	1		|			
ANR	6300477	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6300478	Identifier	t		6300221	0					
ANR	6300479	Identifier	~VT_BTYPE		6300221	1					
ANR	6300480	Identifier	VT_INT64		6300221	1					
ANR	6300481	ElseStatement	else		6300221	0					
ANR	6300482	CompoundStatement		83:10:1818:1818	6300221	0					
ANR	6300483	ExpressionStatement	u = VT_LONG	1322:4:31890:31901	6300221	0	True				
ANR	6300484	AssignmentExpression	u = VT_LONG		6300221	0		=			
ANR	6300485	Identifier	u		6300221	0					
ANR	6300486	Identifier	VT_LONG		6300221	1					
ANR	6300487	GotoStatement	goto basic_type1 ;	1323:4:31907:31923	6300221	1	True				
ANR	6300488	Identifier	basic_type1		6300221	0					
ANR	6300489	BreakStatement	break ;	1325:3:31933:31938	6300221	44	True				
ANR	6300490	Label	case TOK_BOOL :	1326:2:31942:31955	6300221	45	True				
ANR	6300491	Identifier	TOK_BOOL		6300221	0					
ANR	6300492	Label	case TOK_STDBOOL :	1327:2:31959:31975	6300221	46	True				
ANR	6300493	Identifier	TOK_STDBOOL		6300221	0					
ANR	6300494	ExpressionStatement	u = VT_BOOL	1328:3:31980:31991	6300221	47	True				
ANR	6300495	AssignmentExpression	u = VT_BOOL		6300221	0		=			
ANR	6300496	Identifier	u		6300221	0					
ANR	6300497	Identifier	VT_BOOL		6300221	1					
ANR	6300498	GotoStatement	goto basic_type ;	1329:3:31996:32011	6300221	48	True				
ANR	6300499	Identifier	basic_type		6300221	0					
ANR	6300500	Label	case TOK_FLOAT :	1330:2:32015:32029	6300221	49	True				
ANR	6300501	Identifier	TOK_FLOAT		6300221	0					
ANR	6300502	ExpressionStatement	u = VT_FLOAT	1331:3:32034:32046	6300221	50	True				
ANR	6300503	AssignmentExpression	u = VT_FLOAT		6300221	0		=			
ANR	6300504	Identifier	u		6300221	0					
ANR	6300505	Identifier	VT_FLOAT		6300221	1					
ANR	6300506	GotoStatement	goto basic_type ;	1332:3:32051:32066	6300221	51	True				
ANR	6300507	Identifier	basic_type		6300221	0					
ANR	6300508	Label	case TOK_DOUBLE :	1333:2:32070:32085	6300221	52	True				
ANR	6300509	Identifier	TOK_DOUBLE		6300221	0					
ANR	6300510	ExpressionStatement	next ( )	1334:3:32090:32097	6300221	53	True				
ANR	6300511	CallExpression	next ( )		6300221	0					
ANR	6300512	Callee	next		6300221	0					
ANR	6300513	Identifier	next		6300221	0					
ANR	6300514	ArgumentList			6300221	1					
ANR	6300515	IfStatement	if ( ( t & VT_BTYPE ) == VT_LONG )		6300221	54					
ANR	6300516	Condition	( t & VT_BTYPE ) == VT_LONG	1335:7:32106:32130	6300221	0	True				
ANR	6300517	EqualityExpression	( t & VT_BTYPE ) == VT_LONG		6300221	0		==			
ANR	6300518	BitAndExpression	t & VT_BTYPE		6300221	0		&			
ANR	6300519	Identifier	t		6300221	0					
ANR	6300520	Identifier	VT_BTYPE		6300221	1					
ANR	6300521	Identifier	VT_LONG		6300221	1					
ANR	6300522	CompoundStatement		97:34:2067:2067	6300221	1					
ANR	6300523	IfStatement	"if ( ! strncmp ( tcc_state -> os , ""windows"" , 7 ) )"		6300221	0					
ANR	6300524	Condition	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"	1336:8:32143:32180	6300221	0	True				
ANR	6300525	UnaryOperationExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6300221	0					
ANR	6300526	UnaryOperator	!		6300221	0					
ANR	6300527	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6300221	1					
ANR	6300528	Callee	strncmp		6300221	0					
ANR	6300529	Identifier	strncmp		6300221	0					
ANR	6300530	ArgumentList	tcc_state -> os		6300221	1					
ANR	6300531	Argument	tcc_state -> os		6300221	0					
ANR	6300532	PtrMemberAccess	tcc_state -> os		6300221	0					
ANR	6300533	Identifier	tcc_state		6300221	0					
ANR	6300534	Identifier	os		6300221	1					
ANR	6300535	Argument	"""windows"""		6300221	1					
ANR	6300536	PrimaryExpression	"""windows"""		6300221	0					
ANR	6300537	Argument	7		6300221	2					
ANR	6300538	PrimaryExpression	7		6300221	0					
ANR	6300539	CompoundStatement		98:48:2117:2117	6300221	1					
ANR	6300540	ExpressionStatement	t = ( t & ~VT_BTYPE ) | VT_DOUBLE	1337:5:32190:32221	6300221	0	True				
ANR	6300541	AssignmentExpression	t = ( t & ~VT_BTYPE ) | VT_DOUBLE		6300221	0		=			
ANR	6300542	Identifier	t		6300221	0					
ANR	6300543	InclusiveOrExpression	( t & ~VT_BTYPE ) | VT_DOUBLE		6300221	1		|			
ANR	6300544	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6300545	Identifier	t		6300221	0					
ANR	6300546	Identifier	~VT_BTYPE		6300221	1					
ANR	6300547	Identifier	VT_DOUBLE		6300221	1					
ANR	6300548	ElseStatement	else		6300221	0					
ANR	6300549	CompoundStatement		100:11:2168:2168	6300221	0					
ANR	6300550	ExpressionStatement	t = ( t & ~VT_BTYPE ) | VT_LDOUBLE	1339:5:32241:32273	6300221	0	True				
ANR	6300551	AssignmentExpression	t = ( t & ~VT_BTYPE ) | VT_LDOUBLE		6300221	0		=			
ANR	6300552	Identifier	t		6300221	0					
ANR	6300553	InclusiveOrExpression	( t & ~VT_BTYPE ) | VT_LDOUBLE		6300221	1		|			
ANR	6300554	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6300555	Identifier	t		6300221	0					
ANR	6300556	Identifier	~VT_BTYPE		6300221	1					
ANR	6300557	Identifier	VT_LDOUBLE		6300221	1					
ANR	6300558	ElseStatement	else		6300221	0					
ANR	6300559	CompoundStatement		103:10:2225:2225	6300221	0					
ANR	6300560	ExpressionStatement	u = VT_DOUBLE	1342:4:32297:32310	6300221	0	True				
ANR	6300561	AssignmentExpression	u = VT_DOUBLE		6300221	0		=			
ANR	6300562	Identifier	u		6300221	0					
ANR	6300563	Identifier	VT_DOUBLE		6300221	1					
ANR	6300564	GotoStatement	goto basic_type1 ;	1343:4:32316:32332	6300221	1	True				
ANR	6300565	Identifier	basic_type1		6300221	0					
ANR	6300566	BreakStatement	break ;	1345:3:32342:32347	6300221	55	True				
ANR	6300567	Label	case TOK_ENUM :	1346:2:32351:32364	6300221	56	True				
ANR	6300568	Identifier	TOK_ENUM		6300221	0					
ANR	6300569	ExpressionStatement	"struct_decl ( & type1 , VT_ENUM )"	1347:3:32369:32398	6300221	57	True				
ANR	6300570	CallExpression	"struct_decl ( & type1 , VT_ENUM )"		6300221	0					
ANR	6300571	Callee	struct_decl		6300221	0					
ANR	6300572	Identifier	struct_decl		6300221	0					
ANR	6300573	ArgumentList	& type1		6300221	1					
ANR	6300574	Argument	& type1		6300221	0					
ANR	6300575	UnaryOperationExpression	& type1		6300221	0					
ANR	6300576	UnaryOperator	&		6300221	0					
ANR	6300577	Identifier	type1		6300221	1					
ANR	6300578	Argument	VT_ENUM		6300221	1					
ANR	6300579	Identifier	VT_ENUM		6300221	0					
ANR	6300580	Label	basic_type2 :	1348:0:32400:32411	6300221	58	True				
ANR	6300581	Identifier	basic_type2		6300221	0					
ANR	6300582	ExpressionStatement	u = type1 . t	1349:3:32416:32427	6300221	59	True				
ANR	6300583	AssignmentExpression	u = type1 . t		6300221	0		=			
ANR	6300584	Identifier	u		6300221	0					
ANR	6300585	MemberAccess	type1 . t		6300221	1					
ANR	6300586	Identifier	type1		6300221	0					
ANR	6300587	Identifier	t		6300221	1					
ANR	6300588	ExpressionStatement	type -> ref = type1 . ref	1350:3:32432:32453	6300221	60	True				
ANR	6300589	AssignmentExpression	type -> ref = type1 . ref		6300221	0		=			
ANR	6300590	PtrMemberAccess	type -> ref		6300221	0					
ANR	6300591	Identifier	type		6300221	0					
ANR	6300592	Identifier	ref		6300221	1					
ANR	6300593	MemberAccess	type1 . ref		6300221	1					
ANR	6300594	Identifier	type1		6300221	0					
ANR	6300595	Identifier	ref		6300221	1					
ANR	6300596	GotoStatement	goto basic_type1 ;	1351:3:32458:32474	6300221	61	True				
ANR	6300597	Identifier	basic_type1		6300221	0					
ANR	6300598	Label	case TOK_STRUCT :	1352:2:32478:32493	6300221	62	True				
ANR	6300599	Identifier	TOK_STRUCT		6300221	0					
ANR	6300600	ExpressionStatement	"struct_decl ( & type1 , VT_STRUCT )"	1353:3:32498:32529	6300221	63	True				
ANR	6300601	CallExpression	"struct_decl ( & type1 , VT_STRUCT )"		6300221	0					
ANR	6300602	Callee	struct_decl		6300221	0					
ANR	6300603	Identifier	struct_decl		6300221	0					
ANR	6300604	ArgumentList	& type1		6300221	1					
ANR	6300605	Argument	& type1		6300221	0					
ANR	6300606	UnaryOperationExpression	& type1		6300221	0					
ANR	6300607	UnaryOperator	&		6300221	0					
ANR	6300608	Identifier	type1		6300221	1					
ANR	6300609	Argument	VT_STRUCT		6300221	1					
ANR	6300610	Identifier	VT_STRUCT		6300221	0					
ANR	6300611	GotoStatement	goto basic_type2 ;	1354:3:32534:32550	6300221	64	True				
ANR	6300612	Identifier	basic_type2		6300221	0					
ANR	6300613	Label	case TOK_UNION :	1355:2:32554:32568	6300221	65	True				
ANR	6300614	Identifier	TOK_UNION		6300221	0					
ANR	6300615	ExpressionStatement	"struct_decl ( & type1 , VT_UNION )"	1356:3:32573:32603	6300221	66	True				
ANR	6300616	CallExpression	"struct_decl ( & type1 , VT_UNION )"		6300221	0					
ANR	6300617	Callee	struct_decl		6300221	0					
ANR	6300618	Identifier	struct_decl		6300221	0					
ANR	6300619	ArgumentList	& type1		6300221	1					
ANR	6300620	Argument	& type1		6300221	0					
ANR	6300621	UnaryOperationExpression	& type1		6300221	0					
ANR	6300622	UnaryOperator	&		6300221	0					
ANR	6300623	Identifier	type1		6300221	1					
ANR	6300624	Argument	VT_UNION		6300221	1					
ANR	6300625	Identifier	VT_UNION		6300221	0					
ANR	6300626	GotoStatement	goto basic_type2 ;	1357:3:32608:32624	6300221	67	True				
ANR	6300627	Identifier	basic_type2		6300221	0					
ANR	6300628	Label	case TOK_CONST1 :	1360:2:32652:32667	6300221	68	True				
ANR	6300629	Identifier	TOK_CONST1		6300221	0					
ANR	6300630	Label	case TOK_CONST2 :	1361:2:32671:32686	6300221	69	True				
ANR	6300631	Identifier	TOK_CONST2		6300221	0					
ANR	6300632	Label	case TOK_CONST3 :	1362:2:32690:32705	6300221	70	True				
ANR	6300633	Identifier	TOK_CONST3		6300221	0					
ANR	6300634	ExpressionStatement	t |= VT_CONSTANT	1363:3:32710:32726	6300221	71	True				
ANR	6300635	AssignmentExpression	t |= VT_CONSTANT		6300221	0		|=			
ANR	6300636	Identifier	t		6300221	0					
ANR	6300637	Identifier	VT_CONSTANT		6300221	1					
ANR	6300638	ExpressionStatement	next ( )	1364:3:32731:32738	6300221	72	True				
ANR	6300639	CallExpression	next ( )		6300221	0					
ANR	6300640	Callee	next		6300221	0					
ANR	6300641	Identifier	next		6300221	0					
ANR	6300642	ArgumentList			6300221	1					
ANR	6300643	BreakStatement	break ;	1365:3:32743:32748	6300221	73	True				
ANR	6300644	Label	case TOK_VOLATILE1 :	1366:2:32752:32770	6300221	74	True				
ANR	6300645	Identifier	TOK_VOLATILE1		6300221	0					
ANR	6300646	Label	case TOK_VOLATILE2 :	1367:2:32774:32792	6300221	75	True				
ANR	6300647	Identifier	TOK_VOLATILE2		6300221	0					
ANR	6300648	Label	case TOK_VOLATILE3 :	1368:2:32796:32814	6300221	76	True				
ANR	6300649	Identifier	TOK_VOLATILE3		6300221	0					
ANR	6300650	ExpressionStatement	t |= VT_VOLATILE	1369:3:32819:32835	6300221	77	True				
ANR	6300651	AssignmentExpression	t |= VT_VOLATILE		6300221	0		|=			
ANR	6300652	Identifier	t		6300221	0					
ANR	6300653	Identifier	VT_VOLATILE		6300221	1					
ANR	6300654	ExpressionStatement	next ( )	1370:3:32840:32847	6300221	78	True				
ANR	6300655	CallExpression	next ( )		6300221	0					
ANR	6300656	Callee	next		6300221	0					
ANR	6300657	Identifier	next		6300221	0					
ANR	6300658	ArgumentList			6300221	1					
ANR	6300659	BreakStatement	break ;	1371:3:32852:32857	6300221	79	True				
ANR	6300660	Label	case TOK_SIGNED1 :	1372:2:32861:32877	6300221	80	True				
ANR	6300661	Identifier	TOK_SIGNED1		6300221	0					
ANR	6300662	Label	case TOK_SIGNED2 :	1373:2:32881:32897	6300221	81	True				
ANR	6300663	Identifier	TOK_SIGNED2		6300221	0					
ANR	6300664	Label	case TOK_SIGNED3 :	1374:2:32901:32917	6300221	82	True				
ANR	6300665	Identifier	TOK_SIGNED3		6300221	0					
ANR	6300666	ExpressionStatement	typespec_found = 1	1375:3:32922:32940	6300221	83	True				
ANR	6300667	AssignmentExpression	typespec_found = 1		6300221	0		=			
ANR	6300668	Identifier	typespec_found		6300221	0					
ANR	6300669	PrimaryExpression	1		6300221	1					
ANR	6300670	ExpressionStatement	t |= VT_SIGNED	1376:3:32945:32959	6300221	84	True				
ANR	6300671	AssignmentExpression	t |= VT_SIGNED		6300221	0		|=			
ANR	6300672	Identifier	t		6300221	0					
ANR	6300673	Identifier	VT_SIGNED		6300221	1					
ANR	6300674	ExpressionStatement	next ( )	1377:3:32964:32971	6300221	85	True				
ANR	6300675	CallExpression	next ( )		6300221	0					
ANR	6300676	Callee	next		6300221	0					
ANR	6300677	Identifier	next		6300221	0					
ANR	6300678	ArgumentList			6300221	1					
ANR	6300679	BreakStatement	break ;	1378:3:32976:32981	6300221	86	True				
ANR	6300680	Label	case TOK_REGISTER :	1379:2:32985:33002	6300221	87	True				
ANR	6300681	Identifier	TOK_REGISTER		6300221	0					
ANR	6300682	Label	case TOK_AUTO :	1380:2:33006:33019	6300221	88	True				
ANR	6300683	Identifier	TOK_AUTO		6300221	0					
ANR	6300684	Label	case TOK_RESTRICT1 :	1381:2:33023:33041	6300221	89	True				
ANR	6300685	Identifier	TOK_RESTRICT1		6300221	0					
ANR	6300686	Label	case TOK_RESTRICT2 :	1382:2:33045:33063	6300221	90	True				
ANR	6300687	Identifier	TOK_RESTRICT2		6300221	0					
ANR	6300688	Label	case TOK_RESTRICT3 :	1383:2:33067:33085	6300221	91	True				
ANR	6300689	Identifier	TOK_RESTRICT3		6300221	0					
ANR	6300690	ExpressionStatement	next ( )	1384:3:33090:33097	6300221	92	True				
ANR	6300691	CallExpression	next ( )		6300221	0					
ANR	6300692	Callee	next		6300221	0					
ANR	6300693	Identifier	next		6300221	0					
ANR	6300694	ArgumentList			6300221	1					
ANR	6300695	BreakStatement	break ;	1385:3:33102:33107	6300221	93	True				
ANR	6300696	Label	case TOK_UNSIGNED :	1386:2:33111:33128	6300221	94	True				
ANR	6300697	Identifier	TOK_UNSIGNED		6300221	0					
ANR	6300698	ExpressionStatement	t |= VT_UNSIGNED	1387:3:33133:33149	6300221	95	True				
ANR	6300699	AssignmentExpression	t |= VT_UNSIGNED		6300221	0		|=			
ANR	6300700	Identifier	t		6300221	0					
ANR	6300701	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300702	ExpressionStatement	next ( )	1388:3:33154:33161	6300221	96	True				
ANR	6300703	CallExpression	next ( )		6300221	0					
ANR	6300704	Callee	next		6300221	0					
ANR	6300705	Identifier	next		6300221	0					
ANR	6300706	ArgumentList			6300221	1					
ANR	6300707	ExpressionStatement	typespec_found = 1	1389:3:33166:33184	6300221	97	True				
ANR	6300708	AssignmentExpression	typespec_found = 1		6300221	0		=			
ANR	6300709	Identifier	typespec_found		6300221	0					
ANR	6300710	PrimaryExpression	1		6300221	1					
ANR	6300711	BreakStatement	break ;	1390:3:33189:33194	6300221	98	True				
ANR	6300712	Label	case TOK_EXTERN :	1393:2:33215:33230	6300221	99	True				
ANR	6300713	Identifier	TOK_EXTERN		6300221	0					
ANR	6300714	ExpressionStatement	t |= VT_EXTERN	1394:3:33235:33249	6300221	100	True				
ANR	6300715	AssignmentExpression	t |= VT_EXTERN		6300221	0		|=			
ANR	6300716	Identifier	t		6300221	0					
ANR	6300717	Identifier	VT_EXTERN		6300221	1					
ANR	6300718	ExpressionStatement	next ( )	1395:3:33254:33261	6300221	101	True				
ANR	6300719	CallExpression	next ( )		6300221	0					
ANR	6300720	Callee	next		6300221	0					
ANR	6300721	Identifier	next		6300221	0					
ANR	6300722	ArgumentList			6300221	1					
ANR	6300723	BreakStatement	break ;	1396:3:33266:33271	6300221	102	True				
ANR	6300724	Label	case TOK_STATIC :	1397:2:33275:33290	6300221	103	True				
ANR	6300725	Identifier	TOK_STATIC		6300221	0					
ANR	6300726	ExpressionStatement	t |= VT_STATIC	1398:3:33295:33309	6300221	104	True				
ANR	6300727	AssignmentExpression	t |= VT_STATIC		6300221	0		|=			
ANR	6300728	Identifier	t		6300221	0					
ANR	6300729	Identifier	VT_STATIC		6300221	1					
ANR	6300730	ExpressionStatement	next ( )	1399:3:33314:33321	6300221	105	True				
ANR	6300731	CallExpression	next ( )		6300221	0					
ANR	6300732	Callee	next		6300221	0					
ANR	6300733	Identifier	next		6300221	0					
ANR	6300734	ArgumentList			6300221	1					
ANR	6300735	BreakStatement	break ;	1400:3:33326:33331	6300221	106	True				
ANR	6300736	Label	case TOK_TYPEDEF :	1401:2:33335:33351	6300221	107	True				
ANR	6300737	Identifier	TOK_TYPEDEF		6300221	0					
ANR	6300738	ExpressionStatement	t |= VT_TYPEDEF	1402:3:33356:33371	6300221	108	True				
ANR	6300739	AssignmentExpression	t |= VT_TYPEDEF		6300221	0		|=			
ANR	6300740	Identifier	t		6300221	0					
ANR	6300741	Identifier	VT_TYPEDEF		6300221	1					
ANR	6300742	ExpressionStatement	next ( )	1403:3:33376:33383	6300221	109	True				
ANR	6300743	CallExpression	next ( )		6300221	0					
ANR	6300744	Callee	next		6300221	0					
ANR	6300745	Identifier	next		6300221	0					
ANR	6300746	ArgumentList			6300221	1					
ANR	6300747	BreakStatement	break ;	1404:3:33388:33393	6300221	110	True				
ANR	6300748	Label	case TOK_INLINE1 :	1405:2:33397:33413	6300221	111	True				
ANR	6300749	Identifier	TOK_INLINE1		6300221	0					
ANR	6300750	Label	case TOK_INLINE2 :	1406:2:33417:33433	6300221	112	True				
ANR	6300751	Identifier	TOK_INLINE2		6300221	0					
ANR	6300752	Label	case TOK_INLINE3 :	1407:2:33437:33453	6300221	113	True				
ANR	6300753	Identifier	TOK_INLINE3		6300221	0					
ANR	6300754	ExpressionStatement	t |= VT_INLINE	1408:3:33458:33472	6300221	114	True				
ANR	6300755	AssignmentExpression	t |= VT_INLINE		6300221	0		|=			
ANR	6300756	Identifier	t		6300221	0					
ANR	6300757	Identifier	VT_INLINE		6300221	1					
ANR	6300758	ExpressionStatement	next ( )	1409:3:33477:33484	6300221	115	True				
ANR	6300759	CallExpression	next ( )		6300221	0					
ANR	6300760	Callee	next		6300221	0					
ANR	6300761	Identifier	next		6300221	0					
ANR	6300762	ArgumentList			6300221	1					
ANR	6300763	BreakStatement	break ;	1410:3:33489:33494	6300221	116	True				
ANR	6300764	Label	case TOK_ATTRIBUTE1 :	1413:2:33522:33541	6300221	117	True				
ANR	6300765	Identifier	TOK_ATTRIBUTE1		6300221	0					
ANR	6300766	Label	case TOK_ATTRIBUTE2 :	1414:2:33545:33564	6300221	118	True				
ANR	6300767	Identifier	TOK_ATTRIBUTE2		6300221	0					
ANR	6300768	ExpressionStatement	parse_attribute ( ad )	1415:3:33569:33589	6300221	119	True				
ANR	6300769	CallExpression	parse_attribute ( ad )		6300221	0					
ANR	6300770	Callee	parse_attribute		6300221	0					
ANR	6300771	Identifier	parse_attribute		6300221	0					
ANR	6300772	ArgumentList	ad		6300221	1					
ANR	6300773	Argument	ad		6300221	0					
ANR	6300774	Identifier	ad		6300221	0					
ANR	6300775	IfStatement	if ( ad -> mode )		6300221	120					
ANR	6300776	Condition	ad -> mode	1416:7:33598:33605	6300221	0	True				
ANR	6300777	PtrMemberAccess	ad -> mode		6300221	0					
ANR	6300778	Identifier	ad		6300221	0					
ANR	6300779	Identifier	mode		6300221	1					
ANR	6300780	CompoundStatement		178:17:3542:3542	6300221	1					
ANR	6300781	ExpressionStatement	u = ad -> mode - 1	1417:4:33614:33630	6300221	0	True				
ANR	6300782	AssignmentExpression	u = ad -> mode - 1		6300221	0		=			
ANR	6300783	Identifier	u		6300221	0					
ANR	6300784	AdditiveExpression	ad -> mode - 1		6300221	1		-			
ANR	6300785	PtrMemberAccess	ad -> mode		6300221	0					
ANR	6300786	Identifier	ad		6300221	0					
ANR	6300787	Identifier	mode		6300221	1					
ANR	6300788	PrimaryExpression	1		6300221	1					
ANR	6300789	ExpressionStatement	t = ( t & ~VT_BTYPE ) | u	1418:4:33636:33659	6300221	1	True				
ANR	6300790	AssignmentExpression	t = ( t & ~VT_BTYPE ) | u		6300221	0		=			
ANR	6300791	Identifier	t		6300221	0					
ANR	6300792	InclusiveOrExpression	( t & ~VT_BTYPE ) | u		6300221	1		|			
ANR	6300793	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6300794	Identifier	t		6300221	0					
ANR	6300795	Identifier	~VT_BTYPE		6300221	1					
ANR	6300796	Identifier	u		6300221	1					
ANR	6300797	BreakStatement	break ;	1420:3:33669:33674	6300221	121	True				
ANR	6300798	Label	case TOK_TYPEOF1 :	1422:2:33698:33714	6300221	122	True				
ANR	6300799	Identifier	TOK_TYPEOF1		6300221	0					
ANR	6300800	Label	case TOK_TYPEOF2 :	1423:2:33718:33734	6300221	123	True				
ANR	6300801	Identifier	TOK_TYPEOF2		6300221	0					
ANR	6300802	Label	case TOK_TYPEOF3 :	1424:2:33738:33754	6300221	124	True				
ANR	6300803	Identifier	TOK_TYPEOF3		6300221	0					
ANR	6300804	ExpressionStatement	next ( )	1425:3:33759:33766	6300221	125	True				
ANR	6300805	CallExpression	next ( )		6300221	0					
ANR	6300806	Callee	next		6300221	0					
ANR	6300807	Identifier	next		6300221	0					
ANR	6300808	ArgumentList			6300221	1					
ANR	6300809	ExpressionStatement	parse_expr_type ( & type1 )	1426:3:33771:33795	6300221	126	True				
ANR	6300810	CallExpression	parse_expr_type ( & type1 )		6300221	0					
ANR	6300811	Callee	parse_expr_type		6300221	0					
ANR	6300812	Identifier	parse_expr_type		6300221	0					
ANR	6300813	ArgumentList	& type1		6300221	1					
ANR	6300814	Argument	& type1		6300221	0					
ANR	6300815	UnaryOperationExpression	& type1		6300221	0					
ANR	6300816	UnaryOperator	&		6300221	0					
ANR	6300817	Identifier	type1		6300221	1					
ANR	6300818	ExpressionStatement	type1 . t &= ~ ( VT_STORAGE & ~VT_TYPEDEF )	1428:3:33853:33891	6300221	127	True				
ANR	6300819	AssignmentExpression	type1 . t &= ~ ( VT_STORAGE & ~VT_TYPEDEF )		6300221	0		&=			
ANR	6300820	MemberAccess	type1 . t		6300221	0					
ANR	6300821	Identifier	type1		6300221	0					
ANR	6300822	Identifier	t		6300221	1					
ANR	6300823	UnaryOperationExpression	~ ( VT_STORAGE & ~VT_TYPEDEF )		6300221	1					
ANR	6300824	UnaryOperator	~		6300221	0					
ANR	6300825	BitAndExpression	VT_STORAGE & ~VT_TYPEDEF		6300221	1		&			
ANR	6300826	Identifier	VT_STORAGE		6300221	0					
ANR	6300827	Identifier	~VT_TYPEDEF		6300221	1					
ANR	6300828	GotoStatement	goto basic_type2 ;	1429:3:33896:33912	6300221	128	True				
ANR	6300829	Identifier	basic_type2		6300221	0					
ANR	6300830	Label	default :	1430:2:33916:33923	6300221	129	True				
ANR	6300831	Identifier	default		6300221	0					
ANR	6300832	IfStatement	if ( typespec_found || typedef_found )		6300221	130					
ANR	6300833	Condition	typespec_found || typedef_found	1431:7:33932:33962	6300221	0	True				
ANR	6300834	OrExpression	typespec_found || typedef_found		6300221	0		||			
ANR	6300835	Identifier	typespec_found		6300221	0					
ANR	6300836	Identifier	typedef_found		6300221	1					
ANR	6300837	CompoundStatement		193:40:3899:3899	6300221	1					
ANR	6300838	GotoStatement	goto the_end ;	1432:4:33971:33983	6300221	0	True				
ANR	6300839	Identifier	the_end		6300221	0					
ANR	6300840	ExpressionStatement	s = sym_find ( tok )	1434:3:33993:34011	6300221	131	True				
ANR	6300841	AssignmentExpression	s = sym_find ( tok )		6300221	0		=			
ANR	6300842	Identifier	s		6300221	0					
ANR	6300843	CallExpression	sym_find ( tok )		6300221	1					
ANR	6300844	Callee	sym_find		6300221	0					
ANR	6300845	Identifier	sym_find		6300221	0					
ANR	6300846	ArgumentList	tok		6300221	1					
ANR	6300847	Argument	tok		6300221	0					
ANR	6300848	Identifier	tok		6300221	0					
ANR	6300849	IfStatement	if ( ! s || ! ( s -> type . t & VT_TYPEDEF ) )		6300221	132					
ANR	6300850	Condition	! s || ! ( s -> type . t & VT_TYPEDEF )	1435:7:34020:34050	6300221	0	True				
ANR	6300851	OrExpression	! s || ! ( s -> type . t & VT_TYPEDEF )		6300221	0		||			
ANR	6300852	UnaryOperationExpression	! s		6300221	0					
ANR	6300853	UnaryOperator	!		6300221	0					
ANR	6300854	Identifier	s		6300221	1					
ANR	6300855	UnaryOperationExpression	! ( s -> type . t & VT_TYPEDEF )		6300221	1					
ANR	6300856	UnaryOperator	!		6300221	0					
ANR	6300857	BitAndExpression	s -> type . t & VT_TYPEDEF		6300221	1		&			
ANR	6300858	MemberAccess	s -> type . t		6300221	0					
ANR	6300859	PtrMemberAccess	s -> type		6300221	0					
ANR	6300860	Identifier	s		6300221	0					
ANR	6300861	Identifier	type		6300221	1					
ANR	6300862	Identifier	t		6300221	1					
ANR	6300863	Identifier	VT_TYPEDEF		6300221	1					
ANR	6300864	CompoundStatement		197:40:3987:3987	6300221	1					
ANR	6300865	GotoStatement	goto the_end ;	1436:4:34059:34071	6300221	0	True				
ANR	6300866	Identifier	the_end		6300221	0					
ANR	6300867	ExpressionStatement	typedef_found = 1	1438:3:34081:34098	6300221	133	True				
ANR	6300868	AssignmentExpression	typedef_found = 1		6300221	0		=			
ANR	6300869	Identifier	typedef_found		6300221	0					
ANR	6300870	PrimaryExpression	1		6300221	1					
ANR	6300871	ExpressionStatement	t |= ( s -> type . t & ~VT_TYPEDEF )	1439:3:34103:34133	6300221	134	True				
ANR	6300872	AssignmentExpression	t |= ( s -> type . t & ~VT_TYPEDEF )		6300221	0		|=			
ANR	6300873	Identifier	t		6300221	0					
ANR	6300874	BitAndExpression	s -> type . t & ~VT_TYPEDEF		6300221	1		&			
ANR	6300875	MemberAccess	s -> type . t		6300221	0					
ANR	6300876	PtrMemberAccess	s -> type		6300221	0					
ANR	6300877	Identifier	s		6300221	0					
ANR	6300878	Identifier	type		6300221	1					
ANR	6300879	Identifier	t		6300221	1					
ANR	6300880	Identifier	~VT_TYPEDEF		6300221	1					
ANR	6300881	ExpressionStatement	type -> ref = s -> type . ref	1440:3:34138:34161	6300221	135	True				
ANR	6300882	AssignmentExpression	type -> ref = s -> type . ref		6300221	0		=			
ANR	6300883	PtrMemberAccess	type -> ref		6300221	0					
ANR	6300884	Identifier	type		6300221	0					
ANR	6300885	Identifier	ref		6300221	1					
ANR	6300886	MemberAccess	s -> type . ref		6300221	1					
ANR	6300887	PtrMemberAccess	s -> type		6300221	0					
ANR	6300888	Identifier	s		6300221	0					
ANR	6300889	Identifier	type		6300221	1					
ANR	6300890	Identifier	ref		6300221	1					
ANR	6300891	IfStatement	if ( s -> r )		6300221	136					
ANR	6300892	Condition	s -> r	1441:7:34170:34173	6300221	0	True				
ANR	6300893	PtrMemberAccess	s -> r		6300221	0					
ANR	6300894	Identifier	s		6300221	0					
ANR	6300895	Identifier	r		6300221	1					
ANR	6300896	CompoundStatement		203:13:4110:4110	6300221	1					
ANR	6300897	IfStatement	if ( 0 == ad -> aligned )		6300221	0					
ANR	6300898	Condition	0 == ad -> aligned	1443:8:34224:34239	6300221	0	True				
ANR	6300899	EqualityExpression	0 == ad -> aligned		6300221	0		==			
ANR	6300900	PrimaryExpression	0		6300221	0					
ANR	6300901	PtrMemberAccess	ad -> aligned		6300221	1					
ANR	6300902	Identifier	ad		6300221	0					
ANR	6300903	Identifier	aligned		6300221	1					
ANR	6300904	CompoundStatement		205:26:4176:4176	6300221	1					
ANR	6300905	ExpressionStatement	ad -> aligned = FUNC_ALIGN ( s -> r )	1444:5:34249:34280	6300221	0	True				
ANR	6300906	AssignmentExpression	ad -> aligned = FUNC_ALIGN ( s -> r )		6300221	0		=			
ANR	6300907	PtrMemberAccess	ad -> aligned		6300221	0					
ANR	6300908	Identifier	ad		6300221	0					
ANR	6300909	Identifier	aligned		6300221	1					
ANR	6300910	CallExpression	FUNC_ALIGN ( s -> r )		6300221	1					
ANR	6300911	Callee	FUNC_ALIGN		6300221	0					
ANR	6300912	Identifier	FUNC_ALIGN		6300221	0					
ANR	6300913	ArgumentList	s -> r		6300221	1					
ANR	6300914	Argument	s -> r		6300221	0					
ANR	6300915	PtrMemberAccess	s -> r		6300221	0					
ANR	6300916	Identifier	s		6300221	0					
ANR	6300917	Identifier	r		6300221	1					
ANR	6300918	IfStatement	if ( 0 == ad -> func_call )		6300221	1					
ANR	6300919	Condition	0 == ad -> func_call	1446:8:34296:34313	6300221	0	True				
ANR	6300920	EqualityExpression	0 == ad -> func_call		6300221	0		==			
ANR	6300921	PrimaryExpression	0		6300221	0					
ANR	6300922	PtrMemberAccess	ad -> func_call		6300221	1					
ANR	6300923	Identifier	ad		6300221	0					
ANR	6300924	Identifier	func_call		6300221	1					
ANR	6300925	CompoundStatement		208:28:4250:4250	6300221	1					
ANR	6300926	ExpressionStatement	ad -> func_call = FUNC_CALL ( s -> r )	1447:5:34323:34355	6300221	0	True				
ANR	6300927	AssignmentExpression	ad -> func_call = FUNC_CALL ( s -> r )		6300221	0		=			
ANR	6300928	PtrMemberAccess	ad -> func_call		6300221	0					
ANR	6300929	Identifier	ad		6300221	0					
ANR	6300930	Identifier	func_call		6300221	1					
ANR	6300931	CallExpression	FUNC_CALL ( s -> r )		6300221	1					
ANR	6300932	Callee	FUNC_CALL		6300221	0					
ANR	6300933	Identifier	FUNC_CALL		6300221	0					
ANR	6300934	ArgumentList	s -> r		6300221	1					
ANR	6300935	Argument	s -> r		6300221	0					
ANR	6300936	PtrMemberAccess	s -> r		6300221	0					
ANR	6300937	Identifier	s		6300221	0					
ANR	6300938	Identifier	r		6300221	1					
ANR	6300939	ExpressionStatement	ad -> packed |= FUNC_PACKED ( s -> r )	1449:4:34367:34399	6300221	2	True				
ANR	6300940	AssignmentExpression	ad -> packed |= FUNC_PACKED ( s -> r )		6300221	0		|=			
ANR	6300941	PtrMemberAccess	ad -> packed		6300221	0					
ANR	6300942	Identifier	ad		6300221	0					
ANR	6300943	Identifier	packed		6300221	1					
ANR	6300944	CallExpression	FUNC_PACKED ( s -> r )		6300221	1					
ANR	6300945	Callee	FUNC_PACKED		6300221	0					
ANR	6300946	Identifier	FUNC_PACKED		6300221	0					
ANR	6300947	ArgumentList	s -> r		6300221	1					
ANR	6300948	Argument	s -> r		6300221	0					
ANR	6300949	PtrMemberAccess	s -> r		6300221	0					
ANR	6300950	Identifier	s		6300221	0					
ANR	6300951	Identifier	r		6300221	1					
ANR	6300952	ExpressionStatement	next ( )	1451:3:34409:34416	6300221	137	True				
ANR	6300953	CallExpression	next ( )		6300221	0					
ANR	6300954	Callee	next		6300221	0					
ANR	6300955	Identifier	next		6300221	0					
ANR	6300956	ArgumentList			6300221	1					
ANR	6300957	ExpressionStatement	typespec_found = 1	1452:3:34421:34439	6300221	138	True				
ANR	6300958	AssignmentExpression	typespec_found = 1		6300221	0		=			
ANR	6300959	Identifier	typespec_found		6300221	0					
ANR	6300960	PrimaryExpression	1		6300221	1					
ANR	6300961	BreakStatement	break ;	1453:3:34444:34449	6300221	139	True				
ANR	6300962	ExpressionStatement	type_found = 1	1455:2:34457:34471	6300221	1	True				
ANR	6300963	AssignmentExpression	type_found = 1		6300221	0		=			
ANR	6300964	Identifier	type_found		6300221	0					
ANR	6300965	PrimaryExpression	1		6300221	1					
ANR	6300966	Label	the_end :	1457:0:34476:34483	6300221	9	True				
ANR	6300967	Identifier	the_end		6300221	0					
ANR	6300968	IfStatement	if ( ( t & ( VT_SIGNED | VT_UNSIGNED ) ) == ( VT_SIGNED | VT_UNSIGNED ) )		6300221	10					
ANR	6300969	Condition	( t & ( VT_SIGNED | VT_UNSIGNED ) ) == ( VT_SIGNED | VT_UNSIGNED )	1458:5:34490:34549	6300221	0	True				
ANR	6300970	EqualityExpression	( t & ( VT_SIGNED | VT_UNSIGNED ) ) == ( VT_SIGNED | VT_UNSIGNED )		6300221	0		==			
ANR	6300971	BitAndExpression	t & ( VT_SIGNED | VT_UNSIGNED )		6300221	0		&			
ANR	6300972	Identifier	t		6300221	0					
ANR	6300973	InclusiveOrExpression	VT_SIGNED | VT_UNSIGNED		6300221	1		|			
ANR	6300974	Identifier	VT_SIGNED		6300221	0					
ANR	6300975	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300976	InclusiveOrExpression	VT_SIGNED | VT_UNSIGNED		6300221	1		|			
ANR	6300977	Identifier	VT_SIGNED		6300221	0					
ANR	6300978	Identifier	VT_UNSIGNED		6300221	1					
ANR	6300979	CompoundStatement		220:67:4486:4486	6300221	1					
ANR	6300980	ExpressionStatement	"tcc_error ( ""signed and unsigned modifier"" )"	1459:2:34556:34598	6300221	0	True				
ANR	6300981	CallExpression	"tcc_error ( ""signed and unsigned modifier"" )"		6300221	0					
ANR	6300982	Callee	tcc_error		6300221	0					
ANR	6300983	Identifier	tcc_error		6300221	0					
ANR	6300984	ArgumentList	"""signed and unsigned modifier"""		6300221	1					
ANR	6300985	Argument	"""signed and unsigned modifier"""		6300221	0					
ANR	6300986	PrimaryExpression	"""signed and unsigned modifier"""		6300221	0					
ANR	6300987	ReturnStatement	return 0 ;	1460:2:34602:34610	6300221	1	True				
ANR	6300988	PrimaryExpression	0		6300221	0					
ANR	6300989	IfStatement	if ( tcc_state -> char_is_unsigned )		6300221	11					
ANR	6300990	Condition	tcc_state -> char_is_unsigned	1462:5:34620:34646	6300221	0	True				
ANR	6300991	PtrMemberAccess	tcc_state -> char_is_unsigned		6300221	0					
ANR	6300992	Identifier	tcc_state		6300221	0					
ANR	6300993	Identifier	char_is_unsigned		6300221	1					
ANR	6300994	CompoundStatement		224:34:4583:4583	6300221	1					
ANR	6300995	IfStatement	if ( ( t & ( VT_SIGNED | VT_UNSIGNED | VT_BTYPE ) ) == VT_INT8 )		6300221	0					
ANR	6300996	Condition	( t & ( VT_SIGNED | VT_UNSIGNED | VT_BTYPE ) ) == VT_INT8	1463:6:34657:34709	6300221	0	True				
ANR	6300997	EqualityExpression	( t & ( VT_SIGNED | VT_UNSIGNED | VT_BTYPE ) ) == VT_INT8		6300221	0		==			
ANR	6300998	BitAndExpression	t & ( VT_SIGNED | VT_UNSIGNED | VT_BTYPE )		6300221	0		&			
ANR	6300999	Identifier	t		6300221	0					
ANR	6301000	InclusiveOrExpression	VT_SIGNED | VT_UNSIGNED | VT_BTYPE		6300221	1		|			
ANR	6301001	Identifier	VT_SIGNED		6300221	0					
ANR	6301002	InclusiveOrExpression	VT_UNSIGNED | VT_BTYPE		6300221	1		|			
ANR	6301003	Identifier	VT_UNSIGNED		6300221	0					
ANR	6301004	Identifier	VT_BTYPE		6300221	1					
ANR	6301005	Identifier	VT_INT8		6300221	1					
ANR	6301006	CompoundStatement		225:61:4646:4646	6300221	1					
ANR	6301007	ExpressionStatement	t |= VT_UNSIGNED	1464:3:34717:34733	6300221	0	True				
ANR	6301008	AssignmentExpression	t |= VT_UNSIGNED		6300221	0		|=			
ANR	6301009	Identifier	t		6300221	0					
ANR	6301010	Identifier	VT_UNSIGNED		6300221	1					
ANR	6301011	ExpressionStatement	t &= ~VT_SIGNED	1467:1:34743:34758	6300221	12	True				
ANR	6301012	AssignmentExpression	t &= ~VT_SIGNED		6300221	0		&=			
ANR	6301013	Identifier	t		6300221	0					
ANR	6301014	Identifier	~VT_SIGNED		6300221	1					
ANR	6301015	IfStatement	if ( ( t & VT_BTYPE ) == VT_LONG )		6300221	13					
ANR	6301016	Condition	( t & VT_BTYPE ) == VT_LONG	1470:5:34800:34824	6300221	0	True				
ANR	6301017	EqualityExpression	( t & VT_BTYPE ) == VT_LONG		6300221	0		==			
ANR	6301018	BitAndExpression	t & VT_BTYPE		6300221	0		&			
ANR	6301019	Identifier	t		6300221	0					
ANR	6301020	Identifier	VT_BTYPE		6300221	1					
ANR	6301021	Identifier	VT_LONG		6300221	1					
ANR	6301022	CompoundStatement		232:32:4761:4761	6300221	1					
ANR	6301023	IfStatement	"if ( ! strncmp ( tcc_state -> os , ""windows"" , 7 ) || ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32 ) )"		6300221	0					
ANR	6301024	Condition	"! strncmp ( tcc_state -> os , ""windows"" , 7 ) || ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32 )"	1471:6:34835:34945	6300221	0	True				
ANR	6301025	OrExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 ) || ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32 )"		6300221	0		||			
ANR	6301026	UnaryOperationExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6300221	0					
ANR	6301027	UnaryOperator	!		6300221	0					
ANR	6301028	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6300221	1					
ANR	6301029	Callee	strncmp		6300221	0					
ANR	6301030	Identifier	strncmp		6300221	0					
ANR	6301031	ArgumentList	tcc_state -> os		6300221	1					
ANR	6301032	Argument	tcc_state -> os		6300221	0					
ANR	6301033	PtrMemberAccess	tcc_state -> os		6300221	0					
ANR	6301034	Identifier	tcc_state		6300221	0					
ANR	6301035	Identifier	os		6300221	1					
ANR	6301036	Argument	"""windows"""		6300221	1					
ANR	6301037	PrimaryExpression	"""windows"""		6300221	0					
ANR	6301038	Argument	7		6300221	2					
ANR	6301039	PrimaryExpression	7		6300221	0					
ANR	6301040	AndExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 32"		6300221	1		&&			
ANR	6301041	UnaryOperationExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6300221	0					
ANR	6301042	UnaryOperator	!		6300221	0					
ANR	6301043	CallExpression	"strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6300221	1					
ANR	6301044	Callee	strncmp		6300221	0					
ANR	6301045	Identifier	strncmp		6300221	0					
ANR	6301046	ArgumentList	tcc_state -> arch		6300221	1					
ANR	6301047	Argument	tcc_state -> arch		6300221	0					
ANR	6301048	PtrMemberAccess	tcc_state -> arch		6300221	0					
ANR	6301049	Identifier	tcc_state		6300221	0					
ANR	6301050	Identifier	arch		6300221	1					
ANR	6301051	Argument	"""x86"""		6300221	1					
ANR	6301052	PrimaryExpression	"""x86"""		6300221	0					
ANR	6301053	Argument	3		6300221	2					
ANR	6301054	PrimaryExpression	3		6300221	0					
ANR	6301055	EqualityExpression	tcc_state -> bits == 32		6300221	1		==			
ANR	6301056	PtrMemberAccess	tcc_state -> bits		6300221	0					
ANR	6301057	Identifier	tcc_state		6300221	0					
ANR	6301058	Identifier	bits		6300221	1					
ANR	6301059	PrimaryExpression	32		6300221	1					
ANR	6301060	CompoundStatement		234:71:4882:4882	6300221	1					
ANR	6301061	ExpressionStatement	t = ( t & ~VT_BTYPE ) | VT_INT32	1473:3:34953:34983	6300221	0	True				
ANR	6301062	AssignmentExpression	t = ( t & ~VT_BTYPE ) | VT_INT32		6300221	0		=			
ANR	6301063	Identifier	t		6300221	0					
ANR	6301064	InclusiveOrExpression	( t & ~VT_BTYPE ) | VT_INT32		6300221	1		|			
ANR	6301065	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6301066	Identifier	t		6300221	0					
ANR	6301067	Identifier	~VT_BTYPE		6300221	1					
ANR	6301068	Identifier	VT_INT32		6300221	1					
ANR	6301069	ElseStatement	else		6300221	0					
ANR	6301070	CompoundStatement		236:9:4928:4928	6300221	0					
ANR	6301071	ExpressionStatement	t = ( t & ~VT_BTYPE ) | VT_INT64	1475:3:34999:35029	6300221	0	True				
ANR	6301072	AssignmentExpression	t = ( t & ~VT_BTYPE ) | VT_INT64		6300221	0		=			
ANR	6301073	Identifier	t		6300221	0					
ANR	6301074	InclusiveOrExpression	( t & ~VT_BTYPE ) | VT_INT64		6300221	1		|			
ANR	6301075	BitAndExpression	t & ~VT_BTYPE		6300221	0		&			
ANR	6301076	Identifier	t		6300221	0					
ANR	6301077	Identifier	~VT_BTYPE		6300221	1					
ANR	6301078	Identifier	VT_INT64		6300221	1					
ANR	6301079	ExpressionStatement	type -> t = t	1478:1:35039:35050	6300221	14	True				
ANR	6301080	AssignmentExpression	type -> t = t		6300221	0		=			
ANR	6301081	PtrMemberAccess	type -> t		6300221	0					
ANR	6301082	Identifier	type		6300221	0					
ANR	6301083	Identifier	t		6300221	1					
ANR	6301084	Identifier	t		6300221	1					
ANR	6301085	ReturnStatement	return type_found ;	1480:1:35054:35071	6300221	15	True				
ANR	6301086	Identifier	type_found		6300221	0					
ANR	6301087	ReturnType	static int		6300221	1					
ANR	6301088	Identifier	parse_btype		6300221	2					
ANR	6301089	ParameterList	"CType * type , AttributeDef * ad"		6300221	3					
ANR	6301090	Parameter	CType * type	1239:23:30034:30044	6300221	0	True				
ANR	6301091	ParameterType	CType *		6300221	0					
ANR	6301092	Identifier	type		6300221	1					
ANR	6301093	Parameter	AttributeDef * ad	1239:36:30047:30062	6300221	1	True				
ANR	6301094	ParameterType	AttributeDef *		6300221	0					
ANR	6301095	Identifier	ad		6300221	1					
ANR	6301096	CFGEntryNode	ENTRY		6300221		True				
ANR	6301097	CFGExitNode	EXIT		6300221		True				
ANR	6301098	Symbol	VT_INT16		6300221						
ANR	6301099	Symbol	tcc_state -> arch		6300221						
ANR	6301100	Symbol	s -> type . ref		6300221						
ANR	6301101	Symbol	VT_LDOUBLE		6300221						
ANR	6301102	Symbol	FUNC_PACKED		6300221						
ANR	6301103	Symbol	* tcc_state		6300221						
ANR	6301104	Symbol	type		6300221						
ANR	6301105	Symbol	strncmp		6300221						
ANR	6301106	Symbol	VT_VOLATILE		6300221						
ANR	6301107	Symbol	type1 . ref		6300221						
ANR	6301108	Symbol	tcc_state		6300221						
ANR	6301109	Symbol	ad		6300221						
ANR	6301110	Symbol	typespec_found		6300221						
ANR	6301111	Symbol	VT_CONSTANT		6300221						
ANR	6301112	Symbol	VT_SIGNED		6300221						
ANR	6301113	Symbol	VT_INT8		6300221						
ANR	6301114	Symbol	VT_DOUBLE		6300221						
ANR	6301115	Symbol	type1		6300221						
ANR	6301116	Symbol	tcc_nerr		6300221						
ANR	6301117	Symbol	VT_BTYPE		6300221						
ANR	6301118	Symbol	VT_FLOAT		6300221						
ANR	6301119	Symbol	tcc_state -> os		6300221						
ANR	6301120	Symbol	FUNC_CALL		6300221						
ANR	6301121	Symbol	type -> t		6300221						
ANR	6301122	Symbol	s -> type		6300221						
ANR	6301123	Symbol	VT_CHAR		6300221						
ANR	6301124	Symbol	VT_STATIC		6300221						
ANR	6301125	Symbol	ad -> func_call		6300221						
ANR	6301126	Symbol	~VT_SIGNED		6300221						
ANR	6301127	Symbol	VT_BOOL		6300221						
ANR	6301128	Symbol	CType		6300221						
ANR	6301129	Symbol	s -> r		6300221						
ANR	6301130	Symbol	ad -> packed		6300221						
ANR	6301131	Symbol	VT_TYPEDEF		6300221						
ANR	6301132	Symbol	* ad		6300221						
ANR	6301133	Symbol	VT_EXTERN		6300221						
ANR	6301134	Symbol	s -> type . t		6300221						
ANR	6301135	Symbol	VT_STRUCT		6300221						
ANR	6301136	Symbol	VT_LONG		6300221						
ANR	6301137	Symbol	tok		6300221						
ANR	6301138	Symbol	VT_UNSIGNED		6300221						
ANR	6301139	Symbol	ad -> aligned		6300221						
ANR	6301140	Symbol	FUNC_ALIGN		6300221						
ANR	6301141	Symbol	tcc_state -> char_is_unsigned		6300221						
ANR	6301142	Symbol	* type		6300221						
ANR	6301143	Symbol	sym_find		6300221						
ANR	6301144	Symbol	typedef_found		6300221						
ANR	6301145	Symbol	ad -> mode		6300221						
ANR	6301146	Symbol	~VT_TYPEDEF		6300221						
ANR	6301147	Symbol	type_found		6300221						
ANR	6301148	Symbol	VT_INT32		6300221						
ANR	6301149	Symbol	type1 . t		6300221						
ANR	6301150	Symbol	& type1		6300221						
ANR	6301151	Symbol	type -> ref		6300221						
ANR	6301152	Symbol	VT_VOID		6300221						
ANR	6301153	Symbol	VT_ENUM		6300221						
ANR	6301154	Symbol	VT_INLINE		6300221						
ANR	6301155	Symbol	VT_UNION		6300221						
ANR	6301156	Symbol	VT_STORAGE		6300221						
ANR	6301157	Symbol	s		6300221						
ANR	6301158	Symbol	t		6300221						
ANR	6301159	Symbol	u		6300221						
ANR	6301160	Symbol	tcc_state -> bits		6300221						
ANR	6301161	Symbol	VT_INT64		6300221						
ANR	6301162	Symbol	~VT_BTYPE		6300221						
ANR	6301163	Symbol	* s		6300221						
ANR	6301164	Function	convert_parameter_type	1485:0:35171:35524							
ANR	6301165	FunctionDef	convert_parameter_type (CType * pt)		6301164	0					
ANR	6301166	CompoundStatement		1485:53:35224:35524	6301164	0					
ANR	6301167	ExpressionStatement	pt -> t &= ~ ( VT_CONSTANT | VT_VOLATILE )	1488:1:35340:35377	6301164	0	True				
ANR	6301168	AssignmentExpression	pt -> t &= ~ ( VT_CONSTANT | VT_VOLATILE )		6301164	0		&=			
ANR	6301169	PtrMemberAccess	pt -> t		6301164	0					
ANR	6301170	Identifier	pt		6301164	0					
ANR	6301171	Identifier	t		6301164	1					
ANR	6301172	UnaryOperationExpression	~ ( VT_CONSTANT | VT_VOLATILE )		6301164	1					
ANR	6301173	UnaryOperator	~		6301164	0					
ANR	6301174	InclusiveOrExpression	VT_CONSTANT | VT_VOLATILE		6301164	1		|			
ANR	6301175	Identifier	VT_CONSTANT		6301164	0					
ANR	6301176	Identifier	VT_VOLATILE		6301164	1					
ANR	6301177	ExpressionStatement	pt -> t &= ~VT_ARRAY	1490:1:35444:35462	6301164	1	True				
ANR	6301178	AssignmentExpression	pt -> t &= ~VT_ARRAY		6301164	0		&=			
ANR	6301179	PtrMemberAccess	pt -> t		6301164	0					
ANR	6301180	Identifier	pt		6301164	0					
ANR	6301181	Identifier	t		6301164	1					
ANR	6301182	Identifier	~VT_ARRAY		6301164	1					
ANR	6301183	IfStatement	if ( ( pt -> t & VT_BTYPE ) == VT_FUNC )		6301164	2					
ANR	6301184	Condition	( pt -> t & VT_BTYPE ) == VT_FUNC	1491:5:35469:35497	6301164	0	True				
ANR	6301185	EqualityExpression	( pt -> t & VT_BTYPE ) == VT_FUNC		6301164	0		==			
ANR	6301186	BitAndExpression	pt -> t & VT_BTYPE		6301164	0		&			
ANR	6301187	PtrMemberAccess	pt -> t		6301164	0					
ANR	6301188	Identifier	pt		6301164	0					
ANR	6301189	Identifier	t		6301164	1					
ANR	6301190	Identifier	VT_BTYPE		6301164	1					
ANR	6301191	Identifier	VT_FUNC		6301164	1					
ANR	6301192	CompoundStatement		7:36:275:275	6301164	1					
ANR	6301193	ExpressionStatement	mk_pointer ( pt )	1492:2:35504:35519	6301164	0	True				
ANR	6301194	CallExpression	mk_pointer ( pt )		6301164	0					
ANR	6301195	Callee	mk_pointer		6301164	0					
ANR	6301196	Identifier	mk_pointer		6301164	0					
ANR	6301197	ArgumentList	pt		6301164	1					
ANR	6301198	Argument	pt		6301164	0					
ANR	6301199	Identifier	pt		6301164	0					
ANR	6301200	ReturnType	static inline void		6301164	1					
ANR	6301201	Identifier	convert_parameter_type		6301164	2					
ANR	6301202	ParameterList	CType * pt		6301164	3					
ANR	6301203	Parameter	CType * pt	1485:42:35213:35221	6301164	0	True				
ANR	6301204	ParameterType	CType *		6301164	0					
ANR	6301205	Identifier	pt		6301164	1					
ANR	6301206	CFGEntryNode	ENTRY		6301164		True				
ANR	6301207	CFGExitNode	EXIT		6301164		True				
ANR	6301208	Symbol	~VT_ARRAY		6301164						
ANR	6301209	Symbol	VT_VOLATILE		6301164						
ANR	6301210	Symbol	pt		6301164						
ANR	6301211	Symbol	pt -> t		6301164						
ANR	6301212	Symbol	VT_CONSTANT		6301164						
ANR	6301213	Symbol	* pt		6301164						
ANR	6301214	Symbol	VT_BTYPE		6301164						
ANR	6301215	Symbol	VT_FUNC		6301164						
ANR	6301216	Function	post_type	1496:0:35527:39132							
ANR	6301217	FunctionDef	"post_type (CType * type , AttributeDef * ad)"		6301216	0					
ANR	6301218	CompoundStatement		1496:53:35580:39132	6301216	0					
ANR	6301219	IdentifierDeclStatement	"int n , l , t1 , arg_size , align ;"	1497:1:35583:35612	6301216	0	True				
ANR	6301220	IdentifierDecl	n		6301216	0					
ANR	6301221	IdentifierDeclType	int		6301216	0					
ANR	6301222	Identifier	n		6301216	1					
ANR	6301223	IdentifierDecl	l		6301216	1					
ANR	6301224	IdentifierDeclType	int		6301216	0					
ANR	6301225	Identifier	l		6301216	1					
ANR	6301226	IdentifierDecl	t1		6301216	2					
ANR	6301227	IdentifierDeclType	int		6301216	0					
ANR	6301228	Identifier	t1		6301216	1					
ANR	6301229	IdentifierDecl	arg_size		6301216	3					
ANR	6301230	IdentifierDeclType	int		6301216	0					
ANR	6301231	Identifier	arg_size		6301216	1					
ANR	6301232	IdentifierDecl	align		6301216	4					
ANR	6301233	IdentifierDeclType	int		6301216	0					
ANR	6301234	Identifier	align		6301216	1					
ANR	6301235	IdentifierDeclStatement	"Sym * * plast , * s , * first ;"	1498:1:35615:35638	6301216	1	True				
ANR	6301236	IdentifierDecl	* * plast		6301216	0					
ANR	6301237	IdentifierDeclType	Sym * *		6301216	0					
ANR	6301238	Identifier	plast		6301216	1					
ANR	6301239	IdentifierDecl	* s		6301216	1					
ANR	6301240	IdentifierDeclType	Sym *		6301216	0					
ANR	6301241	Identifier	s		6301216	1					
ANR	6301242	IdentifierDecl	* first		6301216	2					
ANR	6301243	IdentifierDeclType	Sym *		6301216	0					
ANR	6301244	Identifier	first		6301216	1					
ANR	6301245	IdentifierDeclStatement	AttributeDef ad1 ;	1499:1:35641:35657	6301216	2	True				
ANR	6301246	IdentifierDecl	ad1		6301216	0					
ANR	6301247	IdentifierDeclType	AttributeDef		6301216	0					
ANR	6301248	Identifier	ad1		6301216	1					
ANR	6301249	IdentifierDeclStatement	CType pt ;	1500:1:35660:35668	6301216	3	True				
ANR	6301250	IdentifierDecl	pt		6301216	0					
ANR	6301251	IdentifierDeclType	CType		6301216	0					
ANR	6301252	Identifier	pt		6301216	1					
ANR	6301253	IdentifierDeclStatement	char * symname = NULL ;	1501:1:35671:35691	6301216	4	True				
ANR	6301254	IdentifierDecl	* symname = NULL		6301216	0					
ANR	6301255	IdentifierDeclType	char *		6301216	0					
ANR	6301256	Identifier	symname		6301216	1					
ANR	6301257	AssignmentExpression	* symname = NULL		6301216	2		=			
ANR	6301258	Identifier	NULL		6301216	0					
ANR	6301259	Identifier	NULL		6301216	1					
ANR	6301260	IdentifierDeclStatement	int narg = 0 ;	1502:1:35694:35706	6301216	5	True				
ANR	6301261	IdentifierDecl	narg = 0		6301216	0					
ANR	6301262	IdentifierDeclType	int		6301216	0					
ANR	6301263	Identifier	narg		6301216	1					
ANR	6301264	AssignmentExpression	narg = 0		6301216	2		=			
ANR	6301265	Identifier	narg		6301216	0					
ANR	6301266	PrimaryExpression	0		6301216	1					
ANR	6301267	IfStatement	if ( tok == '(' )		6301216	6					
ANR	6301268	Condition	tok == '('	1504:5:35714:35723	6301216	0	True				
ANR	6301269	EqualityExpression	tok == '('		6301216	0		==			
ANR	6301270	Identifier	tok		6301216	0					
ANR	6301271	PrimaryExpression	'('		6301216	1					
ANR	6301272	CompoundStatement		9:17:145:145	6301216	1					
ANR	6301273	ExpressionStatement	next ( )	1506:2:35759:35766	6301216	0	True				
ANR	6301274	CallExpression	next ( )		6301216	0					
ANR	6301275	Callee	next		6301216	0					
ANR	6301276	Identifier	next		6301216	0					
ANR	6301277	ArgumentList			6301216	1					
ANR	6301278	ExpressionStatement	l = 0	1507:2:35770:35775	6301216	1	True				
ANR	6301279	AssignmentExpression	l = 0		6301216	0		=			
ANR	6301280	Identifier	l		6301216	0					
ANR	6301281	PrimaryExpression	0		6301216	1					
ANR	6301282	ExpressionStatement	first = NULL	1508:2:35779:35791	6301216	2	True				
ANR	6301283	AssignmentExpression	first = NULL		6301216	0		=			
ANR	6301284	Identifier	first		6301216	0					
ANR	6301285	Identifier	NULL		6301216	1					
ANR	6301286	ExpressionStatement	plast = & first	1509:2:35795:35809	6301216	3	True				
ANR	6301287	AssignmentExpression	plast = & first		6301216	0		=			
ANR	6301288	Identifier	plast		6301216	0					
ANR	6301289	UnaryOperationExpression	& first		6301216	1					
ANR	6301290	UnaryOperator	&		6301216	0					
ANR	6301291	Identifier	first		6301216	1					
ANR	6301292	CompoundStatement		16:3:237:271	6301216	4					
ANR	6301293	IdentifierDeclStatement	const char * ret_type = global_type ;	1511:3:35818:35852	6301216	0	True				
ANR	6301294	IdentifierDecl	* ret_type = global_type		6301216	0					
ANR	6301295	IdentifierDeclType	const char *		6301216	0					
ANR	6301296	Identifier	ret_type		6301216	1					
ANR	6301297	AssignmentExpression	* ret_type = global_type		6301216	2		=			
ANR	6301298	Identifier	global_type		6301216	0					
ANR	6301299	Identifier	global_type		6301216	1					
ANR	6301300	ExpressionStatement	free ( symname )	1512:3:35857:35871	6301216	1	True				
ANR	6301301	CallExpression	free ( symname )		6301216	0					
ANR	6301302	Callee	free		6301216	0					
ANR	6301303	Identifier	free		6301216	0					
ANR	6301304	ArgumentList	symname		6301216	1					
ANR	6301305	Argument	symname		6301216	0					
ANR	6301306	Identifier	symname		6301216	0					
ANR	6301307	ExpressionStatement	symname = strdup ( global_symname )	1513:3:35876:35909	6301216	2	True				
ANR	6301308	AssignmentExpression	symname = strdup ( global_symname )		6301216	0		=			
ANR	6301309	Identifier	symname		6301216	0					
ANR	6301310	CallExpression	strdup ( global_symname )		6301216	1					
ANR	6301311	Callee	strdup		6301216	0					
ANR	6301312	Identifier	strdup		6301216	0					
ANR	6301313	ArgumentList	global_symname		6301216	1					
ANR	6301314	Argument	global_symname		6301216	0					
ANR	6301315	Identifier	global_symname		6301216	0					
ANR	6301316	ExpressionStatement	"tcc_appendf ( ""func.%s.ret=%s\\n"" , symname , ret_type )"	1514:3:35914:35965	6301216	3	True				
ANR	6301317	CallExpression	"tcc_appendf ( ""func.%s.ret=%s\\n"" , symname , ret_type )"		6301216	0					
ANR	6301318	Callee	tcc_appendf		6301216	0					
ANR	6301319	Identifier	tcc_appendf		6301216	0					
ANR	6301320	ArgumentList	"""func.%s.ret=%s\\n"""		6301216	1					
ANR	6301321	Argument	"""func.%s.ret=%s\\n"""		6301216	0					
ANR	6301322	PrimaryExpression	"""func.%s.ret=%s\\n"""		6301216	0					
ANR	6301323	Argument	symname		6301216	1					
ANR	6301324	Identifier	symname		6301216	0					
ANR	6301325	Argument	ret_type		6301216	2					
ANR	6301326	Identifier	ret_type		6301216	0					
ANR	6301327	ExpressionStatement	"tcc_appendf ( ""func.%s.cc=%s\\n"" , symname , ""cdecl"" )"	1515:3:35970:36019	6301216	4	True				
ANR	6301328	CallExpression	"tcc_appendf ( ""func.%s.cc=%s\\n"" , symname , ""cdecl"" )"		6301216	0					
ANR	6301329	Callee	tcc_appendf		6301216	0					
ANR	6301330	Identifier	tcc_appendf		6301216	0					
ANR	6301331	ArgumentList	"""func.%s.cc=%s\\n"""		6301216	1					
ANR	6301332	Argument	"""func.%s.cc=%s\\n"""		6301216	0					
ANR	6301333	PrimaryExpression	"""func.%s.cc=%s\\n"""		6301216	0					
ANR	6301334	Argument	symname		6301216	1					
ANR	6301335	Identifier	symname		6301216	0					
ANR	6301336	Argument	"""cdecl"""		6301216	2					
ANR	6301337	PrimaryExpression	"""cdecl"""		6301216	0					
ANR	6301338	ExpressionStatement	"tcc_appendf ( ""%s=func\\n"" , symname )"	1516:3:36032:36066	6301216	5	True				
ANR	6301339	CallExpression	"tcc_appendf ( ""%s=func\\n"" , symname )"		6301216	0					
ANR	6301340	Callee	tcc_appendf		6301216	0					
ANR	6301341	Identifier	tcc_appendf		6301216	0					
ANR	6301342	ArgumentList	"""%s=func\\n"""		6301216	1					
ANR	6301343	Argument	"""%s=func\\n"""		6301216	0					
ANR	6301344	PrimaryExpression	"""%s=func\\n"""		6301216	0					
ANR	6301345	Argument	symname		6301216	1					
ANR	6301346	Identifier	symname		6301216	0					
ANR	6301347	ExpressionStatement	arg_size = 0	1518:2:36074:36086	6301216	5	True				
ANR	6301348	AssignmentExpression	arg_size = 0		6301216	0		=			
ANR	6301349	Identifier	arg_size		6301216	0					
ANR	6301350	PrimaryExpression	0		6301216	1					
ANR	6301351	IfStatement	if ( tok != ')' )		6301216	6					
ANR	6301352	Condition	tok != ')'	1519:6:36094:36103	6301216	0	True				
ANR	6301353	EqualityExpression	tok != ')'		6301216	0		!=			
ANR	6301354	Identifier	tok		6301216	0					
ANR	6301355	PrimaryExpression	')'		6301216	1					
ANR	6301356	CompoundStatement		24:18:525:525	6301216	1					
ANR	6301357	WhileStatement	while ( tcc_nerr ( ) == 0 )		6301216	0					
ANR	6301358	Condition	tcc_nerr ( ) == 0	1520:10:36118:36133	6301216	0	True				
ANR	6301359	EqualityExpression	tcc_nerr ( ) == 0		6301216	0		==			
ANR	6301360	CallExpression	tcc_nerr ( )		6301216	0					
ANR	6301361	Callee	tcc_nerr		6301216	0					
ANR	6301362	Identifier	tcc_nerr		6301216	0					
ANR	6301363	ArgumentList			6301216	1					
ANR	6301364	PrimaryExpression	0		6301216	1					
ANR	6301365	CompoundStatement		25:28:555:555	6301216	1					
ANR	6301366	IfStatement	if ( l != FUNC_OLD )		6301216	0					
ANR	6301367	Condition	l != FUNC_OLD	1522:8:36191:36203	6301216	0	True				
ANR	6301368	EqualityExpression	l != FUNC_OLD		6301216	0		!=			
ANR	6301369	Identifier	l		6301216	0					
ANR	6301370	Identifier	FUNC_OLD		6301216	1					
ANR	6301371	CompoundStatement		27:23:625:625	6301216	1					
ANR	6301372	IfStatement	"if ( ! parse_btype ( & pt , & ad1 ) )"		6301216	0					
ANR	6301373	Condition	"! parse_btype ( & pt , & ad1 )"	1523:9:36217:36240	6301216	0	True				
ANR	6301374	UnaryOperationExpression	"! parse_btype ( & pt , & ad1 )"		6301216	0					
ANR	6301375	UnaryOperator	!		6301216	0					
ANR	6301376	CallExpression	"parse_btype ( & pt , & ad1 )"		6301216	1					
ANR	6301377	Callee	parse_btype		6301216	0					
ANR	6301378	Identifier	parse_btype		6301216	0					
ANR	6301379	ArgumentList	& pt		6301216	1					
ANR	6301380	Argument	& pt		6301216	0					
ANR	6301381	UnaryOperationExpression	& pt		6301216	0					
ANR	6301382	UnaryOperator	&		6301216	0					
ANR	6301383	Identifier	pt		6301216	1					
ANR	6301384	Argument	& ad1		6301216	1					
ANR	6301385	UnaryOperationExpression	& ad1		6301216	0					
ANR	6301386	UnaryOperator	&		6301216	0					
ANR	6301387	Identifier	ad1		6301216	1					
ANR	6301388	CompoundStatement		28:35:662:662	6301216	1					
ANR	6301389	IfStatement	if ( l )		6301216	0					
ANR	6301390	Condition	l	1524:10:36255:36255	6301216	0	True				
ANR	6301391	Identifier	l		6301216	0					
ANR	6301392	CompoundStatement		29:13:677:677	6301216	1					
ANR	6301393	ExpressionStatement	"TCC_ERR ( ""invalid type"" )"	1525:7:36267:36291	6301216	0	True				
ANR	6301394	CallExpression	"TCC_ERR ( ""invalid type"" )"		6301216	0					
ANR	6301395	Callee	TCC_ERR		6301216	0					
ANR	6301396	Identifier	TCC_ERR		6301216	0					
ANR	6301397	ArgumentList	"""invalid type"""		6301216	1					
ANR	6301398	Argument	"""invalid type"""		6301216	0					
ANR	6301399	PrimaryExpression	"""invalid type"""		6301216	0					
ANR	6301400	ElseStatement	else		6301216	0					
ANR	6301401	CompoundStatement		31:13:725:725	6301216	0					
ANR	6301402	ExpressionStatement	l = FUNC_OLD	1527:7:36315:36327	6301216	0	True				
ANR	6301403	AssignmentExpression	l = FUNC_OLD		6301216	0		=			
ANR	6301404	Identifier	l		6301216	0					
ANR	6301405	Identifier	FUNC_OLD		6301216	1					
ANR	6301406	GotoStatement	goto old_proto ;	1528:7:36336:36350	6301216	1	True				
ANR	6301407	Identifier	old_proto		6301216	0					
ANR	6301408	ExpressionStatement	l = FUNC_NEW	1531:5:36372:36384	6301216	1	True				
ANR	6301409	AssignmentExpression	l = FUNC_NEW		6301216	0		=			
ANR	6301410	Identifier	l		6301216	0					
ANR	6301411	Identifier	FUNC_NEW		6301216	1					
ANR	6301412	IfStatement	if ( ( pt . t & VT_BTYPE ) == VT_VOID && tok == ')' )		6301216	2					
ANR	6301413	Condition	( pt . t & VT_BTYPE ) == VT_VOID && tok == ')'	1532:9:36395:36436	6301216	0	True				
ANR	6301414	AndExpression	( pt . t & VT_BTYPE ) == VT_VOID && tok == ')'		6301216	0		&&			
ANR	6301415	EqualityExpression	( pt . t & VT_BTYPE ) == VT_VOID		6301216	0		==			
ANR	6301416	BitAndExpression	pt . t & VT_BTYPE		6301216	0		&			
ANR	6301417	MemberAccess	pt . t		6301216	0					
ANR	6301418	Identifier	pt		6301216	0					
ANR	6301419	Identifier	t		6301216	1					
ANR	6301420	Identifier	VT_BTYPE		6301216	1					
ANR	6301421	Identifier	VT_VOID		6301216	1					
ANR	6301422	EqualityExpression	tok == ')'		6301216	1		==			
ANR	6301423	Identifier	tok		6301216	0					
ANR	6301424	PrimaryExpression	')'		6301216	1					
ANR	6301425	CompoundStatement		37:53:858:858	6301216	1					
ANR	6301426	BreakStatement	break ;	1533:6:36447:36452	6301216	0	True				
ANR	6301427	ExpressionStatement	"type_decl ( & pt , & ad1 , & n , TYPE_DIRECT | TYPE_ABSTRACT )"	1535:5:36466:36520	6301216	3	True				
ANR	6301428	CallExpression	"type_decl ( & pt , & ad1 , & n , TYPE_DIRECT | TYPE_ABSTRACT )"		6301216	0					
ANR	6301429	Callee	type_decl		6301216	0					
ANR	6301430	Identifier	type_decl		6301216	0					
ANR	6301431	ArgumentList	& pt		6301216	1					
ANR	6301432	Argument	& pt		6301216	0					
ANR	6301433	UnaryOperationExpression	& pt		6301216	0					
ANR	6301434	UnaryOperator	&		6301216	0					
ANR	6301435	Identifier	pt		6301216	1					
ANR	6301436	Argument	& ad1		6301216	1					
ANR	6301437	UnaryOperationExpression	& ad1		6301216	0					
ANR	6301438	UnaryOperator	&		6301216	0					
ANR	6301439	Identifier	ad1		6301216	1					
ANR	6301440	Argument	& n		6301216	2					
ANR	6301441	UnaryOperationExpression	& n		6301216	0					
ANR	6301442	UnaryOperator	&		6301216	0					
ANR	6301443	Identifier	n		6301216	1					
ANR	6301444	Argument	TYPE_DIRECT | TYPE_ABSTRACT		6301216	3					
ANR	6301445	InclusiveOrExpression	TYPE_DIRECT | TYPE_ABSTRACT		6301216	0		|			
ANR	6301446	Identifier	TYPE_DIRECT		6301216	0					
ANR	6301447	Identifier	TYPE_ABSTRACT		6301216	1					
ANR	6301448	IfStatement	if ( ( pt . t & VT_BTYPE ) == VT_VOID )		6301216	4					
ANR	6301449	Condition	( pt . t & VT_BTYPE ) == VT_VOID	1536:9:36531:36558	6301216	0	True				
ANR	6301450	EqualityExpression	( pt . t & VT_BTYPE ) == VT_VOID		6301216	0		==			
ANR	6301451	BitAndExpression	pt . t & VT_BTYPE		6301216	0		&			
ANR	6301452	MemberAccess	pt . t		6301216	0					
ANR	6301453	Identifier	pt		6301216	0					
ANR	6301454	Identifier	t		6301216	1					
ANR	6301455	Identifier	VT_BTYPE		6301216	1					
ANR	6301456	Identifier	VT_VOID		6301216	1					
ANR	6301457	CompoundStatement		41:39:980:980	6301216	1					
ANR	6301458	ExpressionStatement	"TCC_ERR ( ""parameter declared as void"" )"	1537:6:36569:36607	6301216	0	True				
ANR	6301459	CallExpression	"TCC_ERR ( ""parameter declared as void"" )"		6301216	0					
ANR	6301460	Callee	TCC_ERR		6301216	0					
ANR	6301461	Identifier	TCC_ERR		6301216	0					
ANR	6301462	ArgumentList	"""parameter declared as void"""		6301216	1					
ANR	6301463	Argument	"""parameter declared as void"""		6301216	0					
ANR	6301464	PrimaryExpression	"""parameter declared as void"""		6301216	0					
ANR	6301465	ExpressionStatement	"arg_size += ( type_size ( & pt , & align ) + PTR_SIZE - 1 ) / PTR_SIZE"	1539:5:36621:36684	6301216	5	True				
ANR	6301466	AssignmentExpression	"arg_size += ( type_size ( & pt , & align ) + PTR_SIZE - 1 ) / PTR_SIZE"		6301216	0		+=			
ANR	6301467	Identifier	arg_size		6301216	0					
ANR	6301468	MultiplicativeExpression	"( type_size ( & pt , & align ) + PTR_SIZE - 1 ) / PTR_SIZE"		6301216	1		/			
ANR	6301469	AdditiveExpression	"type_size ( & pt , & align ) + PTR_SIZE - 1"		6301216	0		+			
ANR	6301470	CallExpression	"type_size ( & pt , & align )"		6301216	0					
ANR	6301471	Callee	type_size		6301216	0					
ANR	6301472	Identifier	type_size		6301216	0					
ANR	6301473	ArgumentList	& pt		6301216	1					
ANR	6301474	Argument	& pt		6301216	0					
ANR	6301475	UnaryOperationExpression	& pt		6301216	0					
ANR	6301476	UnaryOperator	&		6301216	0					
ANR	6301477	Identifier	pt		6301216	1					
ANR	6301478	Argument	& align		6301216	1					
ANR	6301479	UnaryOperationExpression	& align		6301216	0					
ANR	6301480	UnaryOperator	&		6301216	0					
ANR	6301481	Identifier	align		6301216	1					
ANR	6301482	AdditiveExpression	PTR_SIZE - 1		6301216	1		-			
ANR	6301483	Identifier	PTR_SIZE		6301216	0					
ANR	6301484	PrimaryExpression	1		6301216	1					
ANR	6301485	Identifier	PTR_SIZE		6301216	1					
ANR	6301486	ElseStatement	else		6301216	0					
ANR	6301487	CompoundStatement		45:11:1116:1116	6301216	0					
ANR	6301488	Label	old_proto :	1541:0:36699:36708	6301216	0	True				
ANR	6301489	Identifier	old_proto		6301216	0					
ANR	6301490	ExpressionStatement	n = tok	1542:5:36715:36722	6301216	1	True				
ANR	6301491	AssignmentExpression	n = tok		6301216	0		=			
ANR	6301492	Identifier	n		6301216	0					
ANR	6301493	Identifier	tok		6301216	1					
ANR	6301494	IfStatement	if ( n < TOK_UIDENT )		6301216	2					
ANR	6301495	Condition	n < TOK_UIDENT	1543:9:36733:36746	6301216	0	True				
ANR	6301496	RelationalExpression	n < TOK_UIDENT		6301216	0		<			
ANR	6301497	Identifier	n		6301216	0					
ANR	6301498	Identifier	TOK_UIDENT		6301216	1					
ANR	6301499	CompoundStatement		48:25:1168:1168	6301216	1					
ANR	6301500	ExpressionStatement	"expect ( ""identifier"" )"	1544:6:36757:36778	6301216	0	True				
ANR	6301501	CallExpression	"expect ( ""identifier"" )"		6301216	0					
ANR	6301502	Callee	expect		6301216	0					
ANR	6301503	Identifier	expect		6301216	0					
ANR	6301504	ArgumentList	"""identifier"""		6301216	1					
ANR	6301505	Argument	"""identifier"""		6301216	0					
ANR	6301506	PrimaryExpression	"""identifier"""		6301216	0					
ANR	6301507	ExpressionStatement	pt . t = VT_INT32	1546:5:36792:36807	6301216	3	True				
ANR	6301508	AssignmentExpression	pt . t = VT_INT32		6301216	0		=			
ANR	6301509	MemberAccess	pt . t		6301216	0					
ANR	6301510	Identifier	pt		6301216	0					
ANR	6301511	Identifier	t		6301216	1					
ANR	6301512	Identifier	VT_INT32		6301216	1					
ANR	6301513	ExpressionStatement	next ( )	1547:5:36814:36821	6301216	4	True				
ANR	6301514	CallExpression	next ( )		6301216	0					
ANR	6301515	Callee	next		6301216	0					
ANR	6301516	Identifier	next		6301216	0					
ANR	6301517	ArgumentList			6301216	1					
ANR	6301518	ExpressionStatement	convert_parameter_type ( & pt )	1549:4:36833:36861	6301216	1	True				
ANR	6301519	CallExpression	convert_parameter_type ( & pt )		6301216	0					
ANR	6301520	Callee	convert_parameter_type		6301216	0					
ANR	6301521	Identifier	convert_parameter_type		6301216	0					
ANR	6301522	ArgumentList	& pt		6301216	1					
ANR	6301523	Argument	& pt		6301216	0					
ANR	6301524	UnaryOperationExpression	& pt		6301216	0					
ANR	6301525	UnaryOperator	&		6301216	0					
ANR	6301526	Identifier	pt		6301216	1					
ANR	6301527	ExpressionStatement	"s = sym_push ( n | SYM_FIELD , & pt , 0 , 0 )"	1550:4:36867:36906	6301216	2	True				
ANR	6301528	AssignmentExpression	"s = sym_push ( n | SYM_FIELD , & pt , 0 , 0 )"		6301216	0		=			
ANR	6301529	Identifier	s		6301216	0					
ANR	6301530	CallExpression	"sym_push ( n | SYM_FIELD , & pt , 0 , 0 )"		6301216	1					
ANR	6301531	Callee	sym_push		6301216	0					
ANR	6301532	Identifier	sym_push		6301216	0					
ANR	6301533	ArgumentList	n | SYM_FIELD		6301216	1					
ANR	6301534	Argument	n | SYM_FIELD		6301216	0					
ANR	6301535	InclusiveOrExpression	n | SYM_FIELD		6301216	0		|			
ANR	6301536	Identifier	n		6301216	0					
ANR	6301537	Identifier	SYM_FIELD		6301216	1					
ANR	6301538	Argument	& pt		6301216	1					
ANR	6301539	UnaryOperationExpression	& pt		6301216	0					
ANR	6301540	UnaryOperator	&		6301216	0					
ANR	6301541	Identifier	pt		6301216	1					
ANR	6301542	Argument	0		6301216	2					
ANR	6301543	PrimaryExpression	0		6301216	0					
ANR	6301544	Argument	0		6301216	3					
ANR	6301545	PrimaryExpression	0		6301216	0					
ANR	6301546	IfStatement	if ( ! s )		6301216	3					
ANR	6301547	Condition	! s	1551:8:36916:36917	6301216	0	True				
ANR	6301548	UnaryOperationExpression	! s		6301216	0					
ANR	6301549	UnaryOperator	!		6301216	0					
ANR	6301550	Identifier	s		6301216	1					
ANR	6301551	CompoundStatement		56:12:1339:1339	6301216	1					
ANR	6301552	ReturnStatement	return ;	1552:5:36927:36933	6301216	0	True				
ANR	6301553	ElseStatement	else		6301216	0					
ANR	6301554	CompoundStatement		59:5:1372:1387	6301216	0					
ANR	6301555	IdentifierDeclStatement	char kind [ 1024 ] ;	1554:5:36953:36968	6301216	0	True				
ANR	6301556	IdentifierDecl	kind [ 1024 ]		6301216	0					
ANR	6301557	IdentifierDeclType	char [ 1024 ]		6301216	0					
ANR	6301558	Identifier	kind		6301216	1					
ANR	6301559	PrimaryExpression	1024		6301216	2					
ANR	6301560	ExpressionStatement	"type_to_str ( kind , sizeof ( kind ) , & pt , NULL )"	1555:5:36975:37019	6301216	1	True				
ANR	6301561	CallExpression	"type_to_str ( kind , sizeof ( kind ) , & pt , NULL )"		6301216	0					
ANR	6301562	Callee	type_to_str		6301216	0					
ANR	6301563	Identifier	type_to_str		6301216	0					
ANR	6301564	ArgumentList	kind		6301216	1					
ANR	6301565	Argument	kind		6301216	0					
ANR	6301566	Identifier	kind		6301216	0					
ANR	6301567	Argument	sizeof ( kind )		6301216	1					
ANR	6301568	SizeofExpression	sizeof ( kind )		6301216	0					
ANR	6301569	Sizeof	sizeof		6301216	0					
ANR	6301570	SizeofOperand	kind		6301216	1					
ANR	6301571	Argument	& pt		6301216	2					
ANR	6301572	UnaryOperationExpression	& pt		6301216	0					
ANR	6301573	UnaryOperator	&		6301216	0					
ANR	6301574	Identifier	pt		6301216	1					
ANR	6301575	Argument	NULL		6301216	3					
ANR	6301576	Identifier	NULL		6301216	0					
ANR	6301577	ExpressionStatement	"tcc_appendf ( ""func.%s.arg.%d=%s,%s\\n"" , symname , narg , kind , global_symname )"	1556:5:37026:37107	6301216	2	True				
ANR	6301578	CallExpression	"tcc_appendf ( ""func.%s.arg.%d=%s,%s\\n"" , symname , narg , kind , global_symname )"		6301216	0					
ANR	6301579	Callee	tcc_appendf		6301216	0					
ANR	6301580	Identifier	tcc_appendf		6301216	0					
ANR	6301581	ArgumentList	"""func.%s.arg.%d=%s,%s\\n"""		6301216	1					
ANR	6301582	Argument	"""func.%s.arg.%d=%s,%s\\n"""		6301216	0					
ANR	6301583	PrimaryExpression	"""func.%s.arg.%d=%s,%s\\n"""		6301216	0					
ANR	6301584	Argument	symname		6301216	1					
ANR	6301585	Identifier	symname		6301216	0					
ANR	6301586	Argument	narg		6301216	2					
ANR	6301587	Identifier	narg		6301216	0					
ANR	6301588	Argument	kind		6301216	3					
ANR	6301589	Identifier	kind		6301216	0					
ANR	6301590	Argument	global_symname		6301216	4					
ANR	6301591	Identifier	global_symname		6301216	0					
ANR	6301592	ExpressionStatement	narg ++	1558:5:37114:37120	6301216	3	True				
ANR	6301593	PostIncDecOperationExpression	narg ++		6301216	0					
ANR	6301594	Identifier	narg		6301216	0					
ANR	6301595	IncDec	++		6301216	1					
ANR	6301596	ExpressionStatement	* plast = s	1560:4:37132:37142	6301216	4	True				
ANR	6301597	AssignmentExpression	* plast = s		6301216	0		=			
ANR	6301598	UnaryOperationExpression	* plast		6301216	0					
ANR	6301599	UnaryOperator	*		6301216	0					
ANR	6301600	Identifier	plast		6301216	1					
ANR	6301601	Identifier	s		6301216	1					
ANR	6301602	ExpressionStatement	plast = & s -> next	1561:4:37148:37164	6301216	5	True				
ANR	6301603	AssignmentExpression	plast = & s -> next		6301216	0		=			
ANR	6301604	Identifier	plast		6301216	0					
ANR	6301605	UnaryOperationExpression	& s -> next		6301216	1					
ANR	6301606	UnaryOperator	&		6301216	0					
ANR	6301607	PtrMemberAccess	s -> next		6301216	1					
ANR	6301608	Identifier	s		6301216	0					
ANR	6301609	Identifier	next		6301216	1					
ANR	6301610	IfStatement	if ( tok == ')' )		6301216	6					
ANR	6301611	Condition	tok == ')'	1562:8:37174:37183	6301216	0	True				
ANR	6301612	EqualityExpression	tok == ')'		6301216	0		==			
ANR	6301613	Identifier	tok		6301216	0					
ANR	6301614	PrimaryExpression	')'		6301216	1					
ANR	6301615	CompoundStatement		67:20:1605:1605	6301216	1					
ANR	6301616	BreakStatement	break ;	1563:5:37193:37198	6301216	0	True				
ANR	6301617	ExpressionStatement	"skip ( ',' )"	1565:4:37210:37220	6301216	7	True				
ANR	6301618	CallExpression	"skip ( ',' )"		6301216	0					
ANR	6301619	Callee	skip		6301216	0					
ANR	6301620	Identifier	skip		6301216	0					
ANR	6301621	ArgumentList	"','"		6301216	1					
ANR	6301622	Argument	"','"		6301216	0					
ANR	6301623	PrimaryExpression	"','"		6301216	0					
ANR	6301624	IfStatement	if ( l == FUNC_NEW && tok == TOK_DOTS )		6301216	8					
ANR	6301625	Condition	l == FUNC_NEW && tok == TOK_DOTS	1566:8:37230:37261	6301216	0	True				
ANR	6301626	AndExpression	l == FUNC_NEW && tok == TOK_DOTS		6301216	0		&&			
ANR	6301627	EqualityExpression	l == FUNC_NEW		6301216	0		==			
ANR	6301628	Identifier	l		6301216	0					
ANR	6301629	Identifier	FUNC_NEW		6301216	1					
ANR	6301630	EqualityExpression	tok == TOK_DOTS		6301216	1		==			
ANR	6301631	Identifier	tok		6301216	0					
ANR	6301632	Identifier	TOK_DOTS		6301216	1					
ANR	6301633	CompoundStatement		71:42:1683:1683	6301216	1					
ANR	6301634	ExpressionStatement	l = FUNC_ELLIPSIS	1567:5:37271:37288	6301216	0	True				
ANR	6301635	AssignmentExpression	l = FUNC_ELLIPSIS		6301216	0		=			
ANR	6301636	Identifier	l		6301216	0					
ANR	6301637	Identifier	FUNC_ELLIPSIS		6301216	1					
ANR	6301638	ExpressionStatement	next ( )	1568:5:37295:37302	6301216	1	True				
ANR	6301639	CallExpression	next ( )		6301216	0					
ANR	6301640	Callee	next		6301216	0					
ANR	6301641	Identifier	next		6301216	0					
ANR	6301642	ArgumentList			6301216	1					
ANR	6301643	BreakStatement	break ;	1569:5:37309:37314	6301216	2	True				
ANR	6301644	ExpressionStatement	"tcc_appendf ( ""func.%s.args=%d\\n"" , symname , narg )"	1573:2:37333:37381	6301216	7	True				
ANR	6301645	CallExpression	"tcc_appendf ( ""func.%s.args=%d\\n"" , symname , narg )"		6301216	0					
ANR	6301646	Callee	tcc_appendf		6301216	0					
ANR	6301647	Identifier	tcc_appendf		6301216	0					
ANR	6301648	ArgumentList	"""func.%s.args=%d\\n"""		6301216	1					
ANR	6301649	Argument	"""func.%s.args=%d\\n"""		6301216	0					
ANR	6301650	PrimaryExpression	"""func.%s.args=%d\\n"""		6301216	0					
ANR	6301651	Argument	symname		6301216	1					
ANR	6301652	Identifier	symname		6301216	0					
ANR	6301653	Argument	narg		6301216	2					
ANR	6301654	Identifier	narg		6301216	0					
ANR	6301655	IfStatement	if ( l == 0 )		6301216	8					
ANR	6301656	Condition	l == 0	1575:6:37439:37444	6301216	0	True				
ANR	6301657	EqualityExpression	l == 0		6301216	0		==			
ANR	6301658	Identifier	l		6301216	0					
ANR	6301659	PrimaryExpression	0		6301216	1					
ANR	6301660	CompoundStatement		80:14:1866:1866	6301216	1					
ANR	6301661	ExpressionStatement	l = FUNC_OLD	1576:3:37452:37464	6301216	0	True				
ANR	6301662	AssignmentExpression	l = FUNC_OLD		6301216	0		=			
ANR	6301663	Identifier	l		6301216	0					
ANR	6301664	Identifier	FUNC_OLD		6301216	1					
ANR	6301665	ExpressionStatement	skip ( ')' )	1578:2:37472:37482	6301216	9	True				
ANR	6301666	CallExpression	skip ( ')' )		6301216	0					
ANR	6301667	Callee	skip		6301216	0					
ANR	6301668	Identifier	skip		6301216	0					
ANR	6301669	ArgumentList	')'		6301216	1					
ANR	6301670	Argument	')'		6301216	0					
ANR	6301671	PrimaryExpression	')'		6301216	0					
ANR	6301672	ExpressionStatement	type -> t &= ~VT_CONSTANT	1581:2:37580:37603	6301216	10	True				
ANR	6301673	AssignmentExpression	type -> t &= ~VT_CONSTANT		6301216	0		&=			
ANR	6301674	PtrMemberAccess	type -> t		6301216	0					
ANR	6301675	Identifier	type		6301216	0					
ANR	6301676	Identifier	t		6301216	1					
ANR	6301677	Identifier	~VT_CONSTANT		6301216	1					
ANR	6301678	IfStatement	if ( tok == '[' )		6301216	11					
ANR	6301679	Condition	tok == '['	1585:6:37798:37807	6301216	0	True				
ANR	6301680	EqualityExpression	tok == '['		6301216	0		==			
ANR	6301681	Identifier	tok		6301216	0					
ANR	6301682	PrimaryExpression	'['		6301216	1					
ANR	6301683	CompoundStatement		90:18:2229:2229	6301216	1					
ANR	6301684	ExpressionStatement	next ( )	1586:3:37815:37822	6301216	0	True				
ANR	6301685	CallExpression	next ( )		6301216	0					
ANR	6301686	Callee	next		6301216	0					
ANR	6301687	Identifier	next		6301216	0					
ANR	6301688	ArgumentList			6301216	1					
ANR	6301689	ExpressionStatement	skip ( ']' )	1587:3:37827:37837	6301216	1	True				
ANR	6301690	CallExpression	skip ( ']' )		6301216	0					
ANR	6301691	Callee	skip		6301216	0					
ANR	6301692	Identifier	skip		6301216	0					
ANR	6301693	ArgumentList	']'		6301216	1					
ANR	6301694	Argument	']'		6301216	0					
ANR	6301695	PrimaryExpression	']'		6301216	0					
ANR	6301696	ExpressionStatement	type -> t |= VT_PTR	1588:3:37872:37889	6301216	2	True				
ANR	6301697	AssignmentExpression	type -> t |= VT_PTR		6301216	0		|=			
ANR	6301698	PtrMemberAccess	type -> t		6301216	0					
ANR	6301699	Identifier	type		6301216	0					
ANR	6301700	Identifier	t		6301216	1					
ANR	6301701	Identifier	VT_PTR		6301216	1					
ANR	6301702	ExpressionStatement	ad -> func_args = arg_size	1591:2:37974:37998	6301216	12	True				
ANR	6301703	AssignmentExpression	ad -> func_args = arg_size		6301216	0		=			
ANR	6301704	PtrMemberAccess	ad -> func_args		6301216	0					
ANR	6301705	Identifier	ad		6301216	0					
ANR	6301706	Identifier	func_args		6301216	1					
ANR	6301707	Identifier	arg_size		6301216	1					
ANR	6301708	ExpressionStatement	"s = sym_push ( SYM_FIELD , type , INT_ATTR ( ad ) , l )"	1592:2:38002:38050	6301216	13	True				
ANR	6301709	AssignmentExpression	"s = sym_push ( SYM_FIELD , type , INT_ATTR ( ad ) , l )"		6301216	0		=			
ANR	6301710	Identifier	s		6301216	0					
ANR	6301711	CallExpression	"sym_push ( SYM_FIELD , type , INT_ATTR ( ad ) , l )"		6301216	1					
ANR	6301712	Callee	sym_push		6301216	0					
ANR	6301713	Identifier	sym_push		6301216	0					
ANR	6301714	ArgumentList	SYM_FIELD		6301216	1					
ANR	6301715	Argument	SYM_FIELD		6301216	0					
ANR	6301716	Identifier	SYM_FIELD		6301216	0					
ANR	6301717	Argument	type		6301216	1					
ANR	6301718	Identifier	type		6301216	0					
ANR	6301719	Argument	INT_ATTR ( ad )		6301216	2					
ANR	6301720	CallExpression	INT_ATTR ( ad )		6301216	0					
ANR	6301721	Callee	INT_ATTR		6301216	0					
ANR	6301722	Identifier	INT_ATTR		6301216	0					
ANR	6301723	ArgumentList	ad		6301216	1					
ANR	6301724	Argument	ad		6301216	0					
ANR	6301725	Identifier	ad		6301216	0					
ANR	6301726	Argument	l		6301216	3					
ANR	6301727	Identifier	l		6301216	0					
ANR	6301728	IfStatement	if ( ! s )		6301216	14					
ANR	6301729	Condition	! s	1593:6:38058:38059	6301216	0	True				
ANR	6301730	UnaryOperationExpression	! s		6301216	0					
ANR	6301731	UnaryOperator	!		6301216	0					
ANR	6301732	Identifier	s		6301216	1					
ANR	6301733	CompoundStatement		98:10:2481:2481	6301216	1					
ANR	6301734	ReturnStatement	return ;	1594:3:38067:38073	6301216	0	True				
ANR	6301735	ExpressionStatement	s -> next = first	1596:2:38081:38096	6301216	15	True				
ANR	6301736	AssignmentExpression	s -> next = first		6301216	0		=			
ANR	6301737	PtrMemberAccess	s -> next		6301216	0					
ANR	6301738	Identifier	s		6301216	0					
ANR	6301739	Identifier	next		6301216	1					
ANR	6301740	Identifier	first		6301216	1					
ANR	6301741	ExpressionStatement	type -> t = VT_FUNC	1597:2:38100:38117	6301216	16	True				
ANR	6301742	AssignmentExpression	type -> t = VT_FUNC		6301216	0		=			
ANR	6301743	PtrMemberAccess	type -> t		6301216	0					
ANR	6301744	Identifier	type		6301216	0					
ANR	6301745	Identifier	t		6301216	1					
ANR	6301746	Identifier	VT_FUNC		6301216	1					
ANR	6301747	ExpressionStatement	type -> ref = s	1598:2:38121:38134	6301216	17	True				
ANR	6301748	AssignmentExpression	type -> ref = s		6301216	0		=			
ANR	6301749	PtrMemberAccess	type -> ref		6301216	0					
ANR	6301750	Identifier	type		6301216	0					
ANR	6301751	Identifier	ref		6301216	1					
ANR	6301752	Identifier	s		6301216	1					
ANR	6301753	ExpressionStatement	R_FREE ( symname )	1599:2:38138:38154	6301216	18	True				
ANR	6301754	CallExpression	R_FREE ( symname )		6301216	0					
ANR	6301755	Callee	R_FREE		6301216	0					
ANR	6301756	Identifier	R_FREE		6301216	0					
ANR	6301757	ArgumentList	symname		6301216	1					
ANR	6301758	Argument	symname		6301216	0					
ANR	6301759	Identifier	symname		6301216	0					
ANR	6301760	ElseStatement	else		6301216	0					
ANR	6301761	IfStatement	if ( tok == '[' )		6301216	0					
ANR	6301762	Condition	tok == '['	1600:12:38168:38177	6301216	0	True				
ANR	6301763	EqualityExpression	tok == '['		6301216	0		==			
ANR	6301764	Identifier	tok		6301216	0					
ANR	6301765	PrimaryExpression	'['		6301216	1					
ANR	6301766	CompoundStatement		105:24:2599:2599	6301216	1					
ANR	6301767	ExpressionStatement	next ( )	1602:2:38209:38216	6301216	0	True				
ANR	6301768	CallExpression	next ( )		6301216	0					
ANR	6301769	Callee	next		6301216	0					
ANR	6301770	Identifier	next		6301216	0					
ANR	6301771	ArgumentList			6301216	1					
ANR	6301772	IfStatement	if ( tok == TOK_RESTRICT1 )		6301216	1					
ANR	6301773	Condition	tok == TOK_RESTRICT1	1603:6:38224:38243	6301216	0	True				
ANR	6301774	EqualityExpression	tok == TOK_RESTRICT1		6301216	0		==			
ANR	6301775	Identifier	tok		6301216	0					
ANR	6301776	Identifier	TOK_RESTRICT1		6301216	1					
ANR	6301777	CompoundStatement		108:28:2665:2665	6301216	1					
ANR	6301778	ExpressionStatement	next ( )	1604:3:38251:38258	6301216	0	True				
ANR	6301779	CallExpression	next ( )		6301216	0					
ANR	6301780	Callee	next		6301216	0					
ANR	6301781	Identifier	next		6301216	0					
ANR	6301782	ArgumentList			6301216	1					
ANR	6301783	ExpressionStatement	n = - 1	1606:2:38266:38272	6301216	2	True				
ANR	6301784	AssignmentExpression	n = - 1		6301216	0		=			
ANR	6301785	Identifier	n		6301216	0					
ANR	6301786	UnaryOperationExpression	- 1		6301216	1					
ANR	6301787	UnaryOperator	-		6301216	0					
ANR	6301788	PrimaryExpression	1		6301216	1					
ANR	6301789	ExpressionStatement	t1 = 0	1607:2:38276:38282	6301216	3	True				
ANR	6301790	AssignmentExpression	t1 = 0		6301216	0		=			
ANR	6301791	Identifier	t1		6301216	0					
ANR	6301792	PrimaryExpression	0		6301216	1					
ANR	6301793	IfStatement	if ( tok != ']' )		6301216	4					
ANR	6301794	Condition	tok != ']'	1608:6:38290:38299	6301216	0	True				
ANR	6301795	EqualityExpression	tok != ']'		6301216	0		!=			
ANR	6301796	Identifier	tok		6301216	0					
ANR	6301797	PrimaryExpression	']'		6301216	1					
ANR	6301798	CompoundStatement		113:18:2721:2721	6301216	1					
ANR	6301799	IfStatement	if ( ! local_stack || nocode_wanted )		6301216	0					
ANR	6301800	Condition	! local_stack || nocode_wanted	1609:7:38311:38339	6301216	0	True				
ANR	6301801	OrExpression	! local_stack || nocode_wanted		6301216	0		||			
ANR	6301802	UnaryOperationExpression	! local_stack		6301216	0					
ANR	6301803	UnaryOperator	!		6301216	0					
ANR	6301804	Identifier	local_stack		6301216	1					
ANR	6301805	Identifier	nocode_wanted		6301216	1					
ANR	6301806	CompoundStatement		114:38:2761:2761	6301216	1					
ANR	6301807	ExpressionStatement	vpushll ( expr_const ( ) )	1610:4:38348:38371	6301216	0	True				
ANR	6301808	CallExpression	vpushll ( expr_const ( ) )		6301216	0					
ANR	6301809	Callee	vpushll		6301216	0					
ANR	6301810	Identifier	vpushll		6301216	0					
ANR	6301811	ArgumentList	expr_const ( )		6301216	1					
ANR	6301812	Argument	expr_const ( )		6301216	0					
ANR	6301813	CallExpression	expr_const ( )		6301216	0					
ANR	6301814	Callee	expr_const		6301216	0					
ANR	6301815	Identifier	expr_const		6301216	0					
ANR	6301816	ArgumentList			6301216	1					
ANR	6301817	ElseStatement	else		6301216	0					
ANR	6301818	CompoundStatement		116:10:2802:2802	6301216	0					
ANR	6301819	ExpressionStatement	gexpr ( )	1612:4:38389:38397	6301216	0	True				
ANR	6301820	CallExpression	gexpr ( )		6301216	0					
ANR	6301821	Callee	gexpr		6301216	0					
ANR	6301822	Identifier	gexpr		6301216	0					
ANR	6301823	ArgumentList			6301216	1					
ANR	6301824	IfStatement	if ( ( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) == VT_CONST )		6301216	1					
ANR	6301825	Condition	( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) == VT_CONST	1614:7:38411:38465	6301216	0	True				
ANR	6301826	EqualityExpression	( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) == VT_CONST		6301216	0		==			
ANR	6301827	BitAndExpression	vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM )		6301216	0		&			
ANR	6301828	PtrMemberAccess	vtop -> r		6301216	0					
ANR	6301829	Identifier	vtop		6301216	0					
ANR	6301830	Identifier	r		6301216	1					
ANR	6301831	InclusiveOrExpression	VT_VALMASK | VT_LVAL | VT_SYM		6301216	1		|			
ANR	6301832	Identifier	VT_VALMASK		6301216	0					
ANR	6301833	InclusiveOrExpression	VT_LVAL | VT_SYM		6301216	1		|			
ANR	6301834	Identifier	VT_LVAL		6301216	0					
ANR	6301835	Identifier	VT_SYM		6301216	1					
ANR	6301836	Identifier	VT_CONST		6301216	1					
ANR	6301837	CompoundStatement		119:64:2887:2887	6301216	1					
ANR	6301838	ExpressionStatement	n = vtop -> c . i	1615:4:38474:38487	6301216	0	True				
ANR	6301839	AssignmentExpression	n = vtop -> c . i		6301216	0		=			
ANR	6301840	Identifier	n		6301216	0					
ANR	6301841	MemberAccess	vtop -> c . i		6301216	1					
ANR	6301842	PtrMemberAccess	vtop -> c		6301216	0					
ANR	6301843	Identifier	vtop		6301216	0					
ANR	6301844	Identifier	c		6301216	1					
ANR	6301845	Identifier	i		6301216	1					
ANR	6301846	IfStatement	if ( n < 0 )		6301216	1					
ANR	6301847	Condition	n < 0	1616:8:38497:38501	6301216	0	True				
ANR	6301848	RelationalExpression	n < 0		6301216	0		<			
ANR	6301849	Identifier	n		6301216	0					
ANR	6301850	PrimaryExpression	0		6301216	1					
ANR	6301851	CompoundStatement		121:15:2923:2923	6301216	1					
ANR	6301852	ExpressionStatement	"TCC_ERR ( ""invalid array size"" )"	1617:5:38511:38541	6301216	0	True				
ANR	6301853	CallExpression	"TCC_ERR ( ""invalid array size"" )"		6301216	0					
ANR	6301854	Callee	TCC_ERR		6301216	0					
ANR	6301855	Identifier	TCC_ERR		6301216	0					
ANR	6301856	ArgumentList	"""invalid array size"""		6301216	1					
ANR	6301857	Argument	"""invalid array size"""		6301216	0					
ANR	6301858	PrimaryExpression	"""invalid array size"""		6301216	0					
ANR	6301859	ElseStatement	else		6301216	0					
ANR	6301860	CompoundStatement		124:10:2978:2978	6301216	0					
ANR	6301861	IfStatement	if ( ! is_integer_btype ( vtop -> type . t & VT_BTYPE ) )		6301216	0					
ANR	6301862	Condition	! is_integer_btype ( vtop -> type . t & VT_BTYPE )	1620:8:38569:38611	6301216	0	True				
ANR	6301863	UnaryOperationExpression	! is_integer_btype ( vtop -> type . t & VT_BTYPE )		6301216	0					
ANR	6301864	UnaryOperator	!		6301216	0					
ANR	6301865	CallExpression	is_integer_btype ( vtop -> type . t & VT_BTYPE )		6301216	1					
ANR	6301866	Callee	is_integer_btype		6301216	0					
ANR	6301867	Identifier	is_integer_btype		6301216	0					
ANR	6301868	ArgumentList	vtop -> type . t & VT_BTYPE		6301216	1					
ANR	6301869	Argument	vtop -> type . t & VT_BTYPE		6301216	0					
ANR	6301870	BitAndExpression	vtop -> type . t & VT_BTYPE		6301216	0		&			
ANR	6301871	MemberAccess	vtop -> type . t		6301216	0					
ANR	6301872	PtrMemberAccess	vtop -> type		6301216	0					
ANR	6301873	Identifier	vtop		6301216	0					
ANR	6301874	Identifier	type		6301216	1					
ANR	6301875	Identifier	t		6301216	1					
ANR	6301876	Identifier	VT_BTYPE		6301216	1					
ANR	6301877	CompoundStatement		125:53:3033:3033	6301216	1					
ANR	6301878	ExpressionStatement	"TCC_ERR ( ""size of variable length array should be an integer"" )"	1621:5:38621:38683	6301216	0	True				
ANR	6301879	CallExpression	"TCC_ERR ( ""size of variable length array should be an integer"" )"		6301216	0					
ANR	6301880	Callee	TCC_ERR		6301216	0					
ANR	6301881	Identifier	TCC_ERR		6301216	0					
ANR	6301882	ArgumentList	"""size of variable length array should be an integer"""		6301216	1					
ANR	6301883	Argument	"""size of variable length array should be an integer"""		6301216	0					
ANR	6301884	PrimaryExpression	"""size of variable length array should be an integer"""		6301216	0					
ANR	6301885	ExpressionStatement	t1 = VT_VLA	1623:4:38695:38706	6301216	1	True				
ANR	6301886	AssignmentExpression	t1 = VT_VLA		6301216	0		=			
ANR	6301887	Identifier	t1		6301216	0					
ANR	6301888	Identifier	VT_VLA		6301216	1					
ANR	6301889	ExpressionStatement	skip ( ']' )	1626:2:38719:38729	6301216	5	True				
ANR	6301890	CallExpression	skip ( ']' )		6301216	0					
ANR	6301891	Callee	skip		6301216	0					
ANR	6301892	Identifier	skip		6301216	0					
ANR	6301893	ArgumentList	']'		6301216	1					
ANR	6301894	Argument	']'		6301216	0					
ANR	6301895	PrimaryExpression	']'		6301216	0					
ANR	6301896	ExpressionStatement	"post_type ( type , ad )"	1628:2:38762:38782	6301216	6	True				
ANR	6301897	CallExpression	"post_type ( type , ad )"		6301216	0					
ANR	6301898	Callee	post_type		6301216	0					
ANR	6301899	Identifier	post_type		6301216	0					
ANR	6301900	ArgumentList	type		6301216	1					
ANR	6301901	Argument	type		6301216	0					
ANR	6301902	Identifier	type		6301216	0					
ANR	6301903	Argument	ad		6301216	1					
ANR	6301904	Identifier	ad		6301216	0					
ANR	6301905	ExpressionStatement	arraysize = n	1632:2:38870:38883	6301216	7	True				
ANR	6301906	AssignmentExpression	arraysize = n		6301216	0		=			
ANR	6301907	Identifier	arraysize		6301216	0					
ANR	6301908	Identifier	n		6301216	1					
ANR	6301909	IfStatement	if ( n < 0 )		6301216	8					
ANR	6301910	Condition	n < 0	1634:6:38897:38901	6301216	0	True				
ANR	6301911	RelationalExpression	n < 0		6301216	0		<			
ANR	6301912	Identifier	n		6301216	0					
ANR	6301913	PrimaryExpression	0		6301216	1					
ANR	6301914	CompoundStatement		139:13:3323:3323	6301216	1					
ANR	6301915	ExpressionStatement	"printf ( ""array with no size []\\n"" )"	1635:3:38909:38943	6301216	0	True				
ANR	6301916	CallExpression	"printf ( ""array with no size []\\n"" )"		6301216	0					
ANR	6301917	Callee	printf		6301216	0					
ANR	6301918	Identifier	printf		6301216	0					
ANR	6301919	ArgumentList	"""array with no size []\\n"""		6301216	1					
ANR	6301920	Argument	"""array with no size []\\n"""		6301216	0					
ANR	6301921	PrimaryExpression	"""array with no size []\\n"""		6301216	0					
ANR	6301922	ElseStatement	else		6301216	0					
ANR	6301923	CompoundStatement		141:9:3373:3373	6301216	0					
ANR	6301924	ExpressionStatement	"printf ( ""PUSH SIZE %d\\n"" , n )"	1637:3:38959:38987	6301216	0	True				
ANR	6301925	CallExpression	"printf ( ""PUSH SIZE %d\\n"" , n )"		6301216	0					
ANR	6301926	Callee	printf		6301216	0					
ANR	6301927	Identifier	printf		6301216	0					
ANR	6301928	ArgumentList	"""PUSH SIZE %d\\n"""		6301216	1					
ANR	6301929	Argument	"""PUSH SIZE %d\\n"""		6301216	0					
ANR	6301930	PrimaryExpression	"""PUSH SIZE %d\\n"""		6301216	0					
ANR	6301931	Argument	n		6301216	1					
ANR	6301932	Identifier	n		6301216	0					
ANR	6301933	ExpressionStatement	"s = sym_push ( SYM_FIELD , type , 0 , n )"	1640:2:39002:39038	6301216	9	True				
ANR	6301934	AssignmentExpression	"s = sym_push ( SYM_FIELD , type , 0 , n )"		6301216	0		=			
ANR	6301935	Identifier	s		6301216	0					
ANR	6301936	CallExpression	"sym_push ( SYM_FIELD , type , 0 , n )"		6301216	1					
ANR	6301937	Callee	sym_push		6301216	0					
ANR	6301938	Identifier	sym_push		6301216	0					
ANR	6301939	ArgumentList	SYM_FIELD		6301216	1					
ANR	6301940	Argument	SYM_FIELD		6301216	0					
ANR	6301941	Identifier	SYM_FIELD		6301216	0					
ANR	6301942	Argument	type		6301216	1					
ANR	6301943	Identifier	type		6301216	0					
ANR	6301944	Argument	0		6301216	2					
ANR	6301945	PrimaryExpression	0		6301216	0					
ANR	6301946	Argument	n		6301216	3					
ANR	6301947	Identifier	n		6301216	0					
ANR	6301948	IfStatement	if ( ! s )		6301216	10					
ANR	6301949	Condition	! s	1641:6:39046:39047	6301216	0	True				
ANR	6301950	UnaryOperationExpression	! s		6301216	0					
ANR	6301951	UnaryOperator	!		6301216	0					
ANR	6301952	Identifier	s		6301216	1					
ANR	6301953	CompoundStatement		146:10:3469:3469	6301216	1					
ANR	6301954	ReturnStatement	return ;	1642:3:39055:39061	6301216	0	True				
ANR	6301955	ExpressionStatement	type -> t = ( t1 ? VT_VLA : VT_ARRAY ) | VT_PTR	1644:2:39069:39110	6301216	11	True				
ANR	6301956	AssignmentExpression	type -> t = ( t1 ? VT_VLA : VT_ARRAY ) | VT_PTR		6301216	0		=			
ANR	6301957	PtrMemberAccess	type -> t		6301216	0					
ANR	6301958	Identifier	type		6301216	0					
ANR	6301959	Identifier	t		6301216	1					
ANR	6301960	InclusiveOrExpression	( t1 ? VT_VLA : VT_ARRAY ) | VT_PTR		6301216	1		|			
ANR	6301961	ConditionalExpression	t1 ? VT_VLA : VT_ARRAY		6301216	0					
ANR	6301962	Condition	t1		6301216	0					
ANR	6301963	Identifier	t1		6301216	0					
ANR	6301964	Identifier	VT_VLA		6301216	1					
ANR	6301965	Identifier	VT_ARRAY		6301216	2					
ANR	6301966	Identifier	VT_PTR		6301216	1					
ANR	6301967	ExpressionStatement	type -> ref = s	1645:2:39114:39127	6301216	12	True				
ANR	6301968	AssignmentExpression	type -> ref = s		6301216	0		=			
ANR	6301969	PtrMemberAccess	type -> ref		6301216	0					
ANR	6301970	Identifier	type		6301216	0					
ANR	6301971	Identifier	ref		6301216	1					
ANR	6301972	Identifier	s		6301216	1					
ANR	6301973	ReturnType	static void		6301216	1					
ANR	6301974	Identifier	post_type		6301216	2					
ANR	6301975	ParameterList	"CType * type , AttributeDef * ad"		6301216	3					
ANR	6301976	Parameter	CType * type	1496:22:35549:35559	6301216	0	True				
ANR	6301977	ParameterType	CType *		6301216	0					
ANR	6301978	Identifier	type		6301216	1					
ANR	6301979	Parameter	AttributeDef * ad	1496:35:35562:35577	6301216	1	True				
ANR	6301980	ParameterType	AttributeDef *		6301216	0					
ANR	6301981	Identifier	ad		6301216	1					
ANR	6301982	CFGEntryNode	ENTRY		6301216		True				
ANR	6301983	CFGExitNode	EXIT		6301216		True				
ANR	6301984	Symbol	pt		6301216						
ANR	6301985	Symbol	type		6301216						
ANR	6301986	Symbol	align		6301216						
ANR	6301987	Symbol	global_type		6301216						
ANR	6301988	Symbol	type_size		6301216						
ANR	6301989	Symbol	SYM_FIELD		6301216						
ANR	6301990	Symbol	narg		6301216						
ANR	6301991	Symbol	VT_LVAL		6301216						
ANR	6301992	Symbol	parse_btype		6301216						
ANR	6301993	Symbol	& first		6301216						
ANR	6301994	Symbol	VT_CONST		6301216						
ANR	6301995	Symbol	ad		6301216						
ANR	6301996	Symbol	NULL		6301216						
ANR	6301997	Symbol	kind		6301216						
ANR	6301998	Symbol	vtop		6301216						
ANR	6301999	Symbol	VT_VALMASK		6301216						
ANR	6302000	Symbol	VT_SYM		6301216						
ANR	6302001	Symbol	tcc_nerr		6301216						
ANR	6302002	Symbol	VT_BTYPE		6301216						
ANR	6302003	Symbol	* plast		6301216						
ANR	6302004	Symbol	& pt		6301216						
ANR	6302005	Symbol	VT_FUNC		6301216						
ANR	6302006	Symbol	type -> t		6301216						
ANR	6302007	Symbol	TOK_DOTS		6301216						
ANR	6302008	Symbol	t1		6301216						
ANR	6302009	Symbol	VT_PTR		6301216						
ANR	6302010	Symbol	expr_const		6301216						
ANR	6302011	Symbol	ad -> func_args		6301216						
ANR	6302012	Symbol	global_symname		6301216						
ANR	6302013	Symbol	TYPE_DIRECT		6301216						
ANR	6302014	Symbol	arraysize		6301216						
ANR	6302015	Symbol	arg_size		6301216						
ANR	6302016	Symbol	VT_VLA		6301216						
ANR	6302017	Symbol	symname		6301216						
ANR	6302018	Symbol	~VT_CONSTANT		6301216						
ANR	6302019	Symbol	* ad		6301216						
ANR	6302020	Symbol	s -> next		6301216						
ANR	6302021	Symbol	vtop -> c		6301216						
ANR	6302022	Symbol	local_stack		6301216						
ANR	6302023	Symbol	tok		6301216						
ANR	6302024	Symbol	& ad1		6301216						
ANR	6302025	Symbol	* type		6301216						
ANR	6302026	Symbol	vtop -> type . t		6301216						
ANR	6302027	Symbol	plast		6301216						
ANR	6302028	Symbol	& align		6301216						
ANR	6302029	Symbol	TOK_UIDENT		6301216						
ANR	6302030	Symbol	nocode_wanted		6301216						
ANR	6302031	Symbol	VT_INT32		6301216						
ANR	6302032	Symbol	vtop -> c . i		6301216						
ANR	6302033	Symbol	TYPE_ABSTRACT		6301216						
ANR	6302034	Symbol	type -> ref		6301216						
ANR	6302035	Symbol	VT_VOID		6301216						
ANR	6302036	Symbol	& s -> next		6301216						
ANR	6302037	Symbol	ret_type		6301216						
ANR	6302038	Symbol	vtop -> type		6301216						
ANR	6302039	Symbol	PTR_SIZE		6301216						
ANR	6302040	Symbol	l		6301216						
ANR	6302041	Symbol	FUNC_ELLIPSIS		6301216						
ANR	6302042	Symbol	INT_ATTR		6301216						
ANR	6302043	Symbol	n		6301216						
ANR	6302044	Symbol	ad1		6301216						
ANR	6302045	Symbol	* vtop		6301216						
ANR	6302046	Symbol	s		6301216						
ANR	6302047	Symbol	& n		6301216						
ANR	6302048	Symbol	FUNC_OLD		6301216						
ANR	6302049	Symbol	pt . t		6301216						
ANR	6302050	Symbol	TOK_RESTRICT1		6301216						
ANR	6302051	Symbol	sym_push		6301216						
ANR	6302052	Symbol	vtop -> r		6301216						
ANR	6302053	Symbol	strdup		6301216						
ANR	6302054	Symbol	is_integer_btype		6301216						
ANR	6302055	Symbol	* s		6301216						
ANR	6302056	Symbol	first		6301216						
ANR	6302057	Symbol	FUNC_NEW		6301216						
ANR	6302058	Symbol	VT_ARRAY		6301216						
ANR	6302059	Function	type_decl	1655:0:39422:41671							
ANR	6302060	FunctionDef	"type_decl (CType * type , AttributeDef * ad , int * v , int td)"		6302059	0					
ANR	6302061	CompoundStatement		1655:69:39491:41671	6302059	0					
ANR	6302062	IdentifierDeclStatement	Sym * s ;	1656:1:39494:39500	6302059	0	True				
ANR	6302063	IdentifierDecl	* s		6302059	0					
ANR	6302064	IdentifierDeclType	Sym *		6302059	0					
ANR	6302065	Identifier	s		6302059	1					
ANR	6302066	IdentifierDeclStatement	"int qualifiers , storage ;"	1657:1:39503:39526	6302059	1	True				
ANR	6302067	IdentifierDecl	qualifiers		6302059	0					
ANR	6302068	IdentifierDeclType	int		6302059	0					
ANR	6302069	Identifier	qualifiers		6302059	1					
ANR	6302070	IdentifierDecl	storage		6302059	1					
ANR	6302071	IdentifierDeclType	int		6302059	0					
ANR	6302072	Identifier	storage		6302059	1					
ANR	6302073	IdentifierDeclStatement	CType * type1 = R_NEW0 ( CType ) ;	1658:1:39529:39558	6302059	2	True				
ANR	6302074	IdentifierDecl	* type1 = R_NEW0 ( CType )		6302059	0					
ANR	6302075	IdentifierDeclType	CType *		6302059	0					
ANR	6302076	Identifier	type1		6302059	1					
ANR	6302077	AssignmentExpression	* type1 = R_NEW0 ( CType )		6302059	2		=			
ANR	6302078	Identifier	type1		6302059	0					
ANR	6302079	CallExpression	R_NEW0 ( CType )		6302059	1					
ANR	6302080	Callee	R_NEW0		6302059	0					
ANR	6302081	Identifier	R_NEW0		6302059	0					
ANR	6302082	ArgumentList	CType		6302059	1					
ANR	6302083	Argument	CType		6302059	0					
ANR	6302084	Identifier	CType		6302059	0					
ANR	6302085	IdentifierDeclStatement	CType * type2 = R_NEW0 ( CType ) ;	1659:1:39561:39590	6302059	3	True				
ANR	6302086	IdentifierDecl	* type2 = R_NEW0 ( CType )		6302059	0					
ANR	6302087	IdentifierDeclType	CType *		6302059	0					
ANR	6302088	Identifier	type2		6302059	1					
ANR	6302089	AssignmentExpression	* type2 = R_NEW0 ( CType )		6302059	2		=			
ANR	6302090	Identifier	type2		6302059	0					
ANR	6302091	CallExpression	R_NEW0 ( CType )		6302059	1					
ANR	6302092	Callee	R_NEW0		6302059	0					
ANR	6302093	Identifier	R_NEW0		6302059	0					
ANR	6302094	ArgumentList	CType		6302059	1					
ANR	6302095	Argument	CType		6302059	0					
ANR	6302096	Identifier	CType		6302059	0					
ANR	6302097	IfStatement	if ( ! type1 || ! type2 )		6302059	4					
ANR	6302098	Condition	! type1 || ! type2	1660:5:39597:39612	6302059	0	True				
ANR	6302099	OrExpression	! type1 || ! type2		6302059	0		||			
ANR	6302100	UnaryOperationExpression	! type1		6302059	0					
ANR	6302101	UnaryOperator	!		6302059	0					
ANR	6302102	Identifier	type1		6302059	1					
ANR	6302103	UnaryOperationExpression	! type2		6302059	1					
ANR	6302104	UnaryOperator	!		6302059	0					
ANR	6302105	Identifier	type2		6302059	1					
ANR	6302106	CompoundStatement		6:23:123:123	6302059	1					
ANR	6302107	ExpressionStatement	free ( type1 )	1661:2:39619:39631	6302059	0	True				
ANR	6302108	CallExpression	free ( type1 )		6302059	0					
ANR	6302109	Callee	free		6302059	0					
ANR	6302110	Identifier	free		6302059	0					
ANR	6302111	ArgumentList	type1		6302059	1					
ANR	6302112	Argument	type1		6302059	0					
ANR	6302113	Identifier	type1		6302059	0					
ANR	6302114	ExpressionStatement	free ( type2 )	1662:2:39635:39647	6302059	1	True				
ANR	6302115	CallExpression	free ( type2 )		6302059	0					
ANR	6302116	Callee	free		6302059	0					
ANR	6302117	Identifier	free		6302059	0					
ANR	6302118	ArgumentList	type2		6302059	1					
ANR	6302119	Argument	type2		6302059	0					
ANR	6302120	Identifier	type2		6302059	0					
ANR	6302121	ReturnStatement	return ;	1663:2:39651:39657	6302059	2	True				
ANR	6302122	WhileStatement	while ( tok == '*' )		6302059	5					
ANR	6302123	Condition	tok == '*'	1666:8:39671:39680	6302059	0	True				
ANR	6302124	EqualityExpression	tok == '*'		6302059	0		==			
ANR	6302125	Identifier	tok		6302059	0					
ANR	6302126	PrimaryExpression	'*'		6302059	1					
ANR	6302127	CompoundStatement		12:20:191:191	6302059	1					
ANR	6302128	ExpressionStatement	qualifiers = 0	1667:2:39687:39701	6302059	0	True				
ANR	6302129	AssignmentExpression	qualifiers = 0		6302059	0		=			
ANR	6302130	Identifier	qualifiers		6302059	0					
ANR	6302131	PrimaryExpression	0		6302059	1					
ANR	6302132	Label	redo :	1668:0:39703:39707	6302059	1	True				
ANR	6302133	Identifier	redo		6302059	0					
ANR	6302134	ExpressionStatement	next ( )	1669:2:39711:39718	6302059	2	True				
ANR	6302135	CallExpression	next ( )		6302059	0					
ANR	6302136	Callee	next		6302059	0					
ANR	6302137	Identifier	next		6302059	0					
ANR	6302138	ArgumentList			6302059	1					
ANR	6302139	SwitchStatement	switch ( tok )		6302059	3					
ANR	6302140	Condition	tok	1670:10:39730:39732	6302059	0	True				
ANR	6302141	Identifier	tok		6302059	0					
ANR	6302142	CompoundStatement		16:15:243:243	6302059	1					
ANR	6302143	Label	case TOK_CONST1 :	1671:2:39739:39754	6302059	0	True				
ANR	6302144	Identifier	TOK_CONST1		6302059	0					
ANR	6302145	Label	case TOK_CONST2 :	1672:2:39758:39773	6302059	1	True				
ANR	6302146	Identifier	TOK_CONST2		6302059	0					
ANR	6302147	Label	case TOK_CONST3 :	1673:2:39777:39792	6302059	2	True				
ANR	6302148	Identifier	TOK_CONST3		6302059	0					
ANR	6302149	ExpressionStatement	qualifiers |= VT_CONSTANT	1674:3:39797:39822	6302059	3	True				
ANR	6302150	AssignmentExpression	qualifiers |= VT_CONSTANT		6302059	0		|=			
ANR	6302151	Identifier	qualifiers		6302059	0					
ANR	6302152	Identifier	VT_CONSTANT		6302059	1					
ANR	6302153	GotoStatement	goto redo ;	1675:3:39827:39836	6302059	4	True				
ANR	6302154	Identifier	redo		6302059	0					
ANR	6302155	Label	case TOK_VOLATILE1 :	1676:2:39840:39858	6302059	5	True				
ANR	6302156	Identifier	TOK_VOLATILE1		6302059	0					
ANR	6302157	Label	case TOK_VOLATILE2 :	1677:2:39862:39880	6302059	6	True				
ANR	6302158	Identifier	TOK_VOLATILE2		6302059	0					
ANR	6302159	Label	case TOK_VOLATILE3 :	1678:2:39884:39902	6302059	7	True				
ANR	6302160	Identifier	TOK_VOLATILE3		6302059	0					
ANR	6302161	ExpressionStatement	qualifiers |= VT_VOLATILE	1679:3:39907:39932	6302059	8	True				
ANR	6302162	AssignmentExpression	qualifiers |= VT_VOLATILE		6302059	0		|=			
ANR	6302163	Identifier	qualifiers		6302059	0					
ANR	6302164	Identifier	VT_VOLATILE		6302059	1					
ANR	6302165	GotoStatement	goto redo ;	1680:3:39937:39946	6302059	9	True				
ANR	6302166	Identifier	redo		6302059	0					
ANR	6302167	Label	case TOK_RESTRICT1 :	1681:2:39950:39968	6302059	10	True				
ANR	6302168	Identifier	TOK_RESTRICT1		6302059	0					
ANR	6302169	Label	case TOK_RESTRICT2 :	1682:2:39972:39990	6302059	11	True				
ANR	6302170	Identifier	TOK_RESTRICT2		6302059	0					
ANR	6302171	Label	case TOK_RESTRICT3 :	1683:2:39994:40012	6302059	12	True				
ANR	6302172	Identifier	TOK_RESTRICT3		6302059	0					
ANR	6302173	GotoStatement	goto redo ;	1684:3:40017:40026	6302059	13	True				
ANR	6302174	Identifier	redo		6302059	0					
ANR	6302175	ExpressionStatement	mk_pointer ( type )	1686:2:40034:40051	6302059	4	True				
ANR	6302176	CallExpression	mk_pointer ( type )		6302059	0					
ANR	6302177	Callee	mk_pointer		6302059	0					
ANR	6302178	Identifier	mk_pointer		6302059	0					
ANR	6302179	ArgumentList	type		6302059	1					
ANR	6302180	Argument	type		6302059	0					
ANR	6302181	Identifier	type		6302059	0					
ANR	6302182	ExpressionStatement	type -> t |= qualifiers	1687:2:40055:40076	6302059	5	True				
ANR	6302183	AssignmentExpression	type -> t |= qualifiers		6302059	0		|=			
ANR	6302184	PtrMemberAccess	type -> t		6302059	0					
ANR	6302185	Identifier	type		6302059	0					
ANR	6302186	Identifier	t		6302059	1					
ANR	6302187	Identifier	qualifiers		6302059	1					
ANR	6302188	IfStatement	if ( tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2 )		6302059	6					
ANR	6302189	Condition	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2	1691:5:40126:40171	6302059	0	True				
ANR	6302190	OrExpression	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2		6302059	0		||			
ANR	6302191	EqualityExpression	tok == TOK_ATTRIBUTE1		6302059	0		==			
ANR	6302192	Identifier	tok		6302059	0					
ANR	6302193	Identifier	TOK_ATTRIBUTE1		6302059	1					
ANR	6302194	EqualityExpression	tok == TOK_ATTRIBUTE2		6302059	1		==			
ANR	6302195	Identifier	tok		6302059	0					
ANR	6302196	Identifier	TOK_ATTRIBUTE2		6302059	1					
ANR	6302197	CompoundStatement		37:53:682:682	6302059	1					
ANR	6302198	ExpressionStatement	parse_attribute ( ad )	1692:2:40178:40198	6302059	0	True				
ANR	6302199	CallExpression	parse_attribute ( ad )		6302059	0					
ANR	6302200	Callee	parse_attribute		6302059	0					
ANR	6302201	Identifier	parse_attribute		6302059	0					
ANR	6302202	ArgumentList	ad		6302059	1					
ANR	6302203	Argument	ad		6302059	0					
ANR	6302204	Identifier	ad		6302059	0					
ANR	6302205	ExpressionStatement	type1 -> t = 0	1697:1:40296:40308	6302059	7	True				
ANR	6302206	AssignmentExpression	type1 -> t = 0		6302059	0		=			
ANR	6302207	PtrMemberAccess	type1 -> t		6302059	0					
ANR	6302208	Identifier	type1		6302059	0					
ANR	6302209	Identifier	t		6302059	1					
ANR	6302210	PrimaryExpression	0		6302059	1					
ANR	6302211	IfStatement	if ( tok == '(' )		6302059	8					
ANR	6302212	Condition	tok == '('	1698:5:40338:40347	6302059	0	True				
ANR	6302213	EqualityExpression	tok == '('		6302059	0		==			
ANR	6302214	Identifier	tok		6302059	0					
ANR	6302215	PrimaryExpression	'('		6302059	1					
ANR	6302216	CompoundStatement		44:17:858:858	6302059	1					
ANR	6302217	ExpressionStatement	next ( )	1699:2:40354:40361	6302059	0	True				
ANR	6302218	CallExpression	next ( )		6302059	0					
ANR	6302219	Callee	next		6302059	0					
ANR	6302220	Identifier	next		6302059	0					
ANR	6302221	ArgumentList			6302059	1					
ANR	6302222	IfStatement	if ( tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2 )		6302059	1					
ANR	6302223	Condition	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2	1702:6:40465:40510	6302059	0	True				
ANR	6302224	OrExpression	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2		6302059	0		||			
ANR	6302225	EqualityExpression	tok == TOK_ATTRIBUTE1		6302059	0		==			
ANR	6302226	Identifier	tok		6302059	0					
ANR	6302227	Identifier	TOK_ATTRIBUTE1		6302059	1					
ANR	6302228	EqualityExpression	tok == TOK_ATTRIBUTE2		6302059	1		==			
ANR	6302229	Identifier	tok		6302059	0					
ANR	6302230	Identifier	TOK_ATTRIBUTE2		6302059	1					
ANR	6302231	CompoundStatement		48:54:1021:1021	6302059	1					
ANR	6302232	ExpressionStatement	parse_attribute ( ad )	1703:3:40518:40538	6302059	0	True				
ANR	6302233	CallExpression	parse_attribute ( ad )		6302059	0					
ANR	6302234	Callee	parse_attribute		6302059	0					
ANR	6302235	Identifier	parse_attribute		6302059	0					
ANR	6302236	ArgumentList	ad		6302059	1					
ANR	6302237	Argument	ad		6302059	0					
ANR	6302238	Identifier	ad		6302059	0					
ANR	6302239	ExpressionStatement	"type_decl ( type1 , ad , v , td )"	1705:2:40546:40574	6302059	2	True				
ANR	6302240	CallExpression	"type_decl ( type1 , ad , v , td )"		6302059	0					
ANR	6302241	Callee	type_decl		6302059	0					
ANR	6302242	Identifier	type_decl		6302059	0					
ANR	6302243	ArgumentList	type1		6302059	1					
ANR	6302244	Argument	type1		6302059	0					
ANR	6302245	Identifier	type1		6302059	0					
ANR	6302246	Argument	ad		6302059	1					
ANR	6302247	Identifier	ad		6302059	0					
ANR	6302248	Argument	v		6302059	2					
ANR	6302249	Identifier	v		6302059	0					
ANR	6302250	Argument	td		6302059	3					
ANR	6302251	Identifier	td		6302059	0					
ANR	6302252	ExpressionStatement	skip ( ')' )	1706:2:40578:40588	6302059	3	True				
ANR	6302253	CallExpression	skip ( ')' )		6302059	0					
ANR	6302254	Callee	skip		6302059	0					
ANR	6302255	Identifier	skip		6302059	0					
ANR	6302256	ArgumentList	')'		6302059	1					
ANR	6302257	Argument	')'		6302059	0					
ANR	6302258	PrimaryExpression	')'		6302059	0					
ANR	6302259	ElseStatement	else		6302059	0					
ANR	6302260	CompoundStatement		53:8:1106:1106	6302059	0					
ANR	6302261	IfStatement	if ( tok >= TOK_IDENT && ( td & TYPE_DIRECT ) )		6302059	0					
ANR	6302262	Condition	tok >= TOK_IDENT && ( td & TYPE_DIRECT )	1709:6:40630:40667	6302059	0	True				
ANR	6302263	AndExpression	tok >= TOK_IDENT && ( td & TYPE_DIRECT )		6302059	0		&&			
ANR	6302264	RelationalExpression	tok >= TOK_IDENT		6302059	0		>=			
ANR	6302265	Identifier	tok		6302059	0					
ANR	6302266	Identifier	TOK_IDENT		6302059	1					
ANR	6302267	BitAndExpression	td & TYPE_DIRECT		6302059	1		&			
ANR	6302268	Identifier	td		6302059	0					
ANR	6302269	Identifier	TYPE_DIRECT		6302059	1					
ANR	6302270	CompoundStatement		55:46:1178:1178	6302059	1					
ANR	6302271	ExpressionStatement	* v = tok	1710:3:40675:40683	6302059	0	True				
ANR	6302272	AssignmentExpression	* v = tok		6302059	0		=			
ANR	6302273	UnaryOperationExpression	* v		6302059	0					
ANR	6302274	UnaryOperator	*		6302059	0					
ANR	6302275	Identifier	v		6302059	1					
ANR	6302276	Identifier	tok		6302059	1					
ANR	6302277	ExpressionStatement	next ( )	1711:3:40688:40695	6302059	1	True				
ANR	6302278	CallExpression	next ( )		6302059	0					
ANR	6302279	Callee	next		6302059	0					
ANR	6302280	Identifier	next		6302059	0					
ANR	6302281	ArgumentList			6302059	1					
ANR	6302282	ElseStatement	else		6302059	0					
ANR	6302283	CompoundStatement		58:9:1214:1214	6302059	0					
ANR	6302284	IfStatement	if ( ! ( td & TYPE_ABSTRACT ) )		6302059	0					
ANR	6302285	Condition	! ( td & TYPE_ABSTRACT )	1713:7:40715:40735	6302059	0	True				
ANR	6302286	UnaryOperationExpression	! ( td & TYPE_ABSTRACT )		6302059	0					
ANR	6302287	UnaryOperator	!		6302059	0					
ANR	6302288	BitAndExpression	td & TYPE_ABSTRACT		6302059	1		&			
ANR	6302289	Identifier	td		6302059	0					
ANR	6302290	Identifier	TYPE_ABSTRACT		6302059	1					
ANR	6302291	CompoundStatement		59:30:1246:1246	6302059	1					
ANR	6302292	ExpressionStatement	"expect ( ""identifier"" )"	1714:4:40744:40765	6302059	0	True				
ANR	6302293	CallExpression	"expect ( ""identifier"" )"		6302059	0					
ANR	6302294	Callee	expect		6302059	0					
ANR	6302295	Identifier	expect		6302059	0					
ANR	6302296	ArgumentList	"""identifier"""		6302059	1					
ANR	6302297	Argument	"""identifier"""		6302059	0					
ANR	6302298	PrimaryExpression	"""identifier"""		6302059	0					
ANR	6302299	ExpressionStatement	* v = 0	1716:3:40775:40781	6302059	1	True				
ANR	6302300	AssignmentExpression	* v = 0		6302059	0		=			
ANR	6302301	UnaryOperationExpression	* v		6302059	0					
ANR	6302302	UnaryOperator	*		6302059	0					
ANR	6302303	Identifier	v		6302059	1					
ANR	6302304	PrimaryExpression	0		6302059	1					
ANR	6302305	ExpressionStatement	storage = type -> t & VT_STORAGE	1719:1:40791:40821	6302059	9	True				
ANR	6302306	AssignmentExpression	storage = type -> t & VT_STORAGE		6302059	0		=			
ANR	6302307	Identifier	storage		6302059	0					
ANR	6302308	BitAndExpression	type -> t & VT_STORAGE		6302059	1		&			
ANR	6302309	PtrMemberAccess	type -> t		6302059	0					
ANR	6302310	Identifier	type		6302059	0					
ANR	6302311	Identifier	t		6302059	1					
ANR	6302312	Identifier	VT_STORAGE		6302059	1					
ANR	6302313	ExpressionStatement	type -> t &= ~VT_STORAGE	1720:1:40824:40846	6302059	10	True				
ANR	6302314	AssignmentExpression	type -> t &= ~VT_STORAGE		6302059	0		&=			
ANR	6302315	PtrMemberAccess	type -> t		6302059	0					
ANR	6302316	Identifier	type		6302059	0					
ANR	6302317	Identifier	t		6302059	1					
ANR	6302318	Identifier	~VT_STORAGE		6302059	1					
ANR	6302319	IfStatement	if ( storage & VT_STATIC )		6302059	11					
ANR	6302320	Condition	storage & VT_STATIC	1721:5:40853:40871	6302059	0	True				
ANR	6302321	BitAndExpression	storage & VT_STATIC		6302059	0		&			
ANR	6302322	Identifier	storage		6302059	0					
ANR	6302323	Identifier	VT_STATIC		6302059	1					
ANR	6302324	CompoundStatement		68:2:1386:1425	6302059	1					
ANR	6302325	IdentifierDeclStatement	int saved_nocode_wanted = nocode_wanted ;	1722:2:40878:40917	6302059	0	True				
ANR	6302326	IdentifierDecl	saved_nocode_wanted = nocode_wanted		6302059	0					
ANR	6302327	IdentifierDeclType	int		6302059	0					
ANR	6302328	Identifier	saved_nocode_wanted		6302059	1					
ANR	6302329	AssignmentExpression	saved_nocode_wanted = nocode_wanted		6302059	2		=			
ANR	6302330	Identifier	nocode_wanted		6302059	0					
ANR	6302331	Identifier	nocode_wanted		6302059	1					
ANR	6302332	ExpressionStatement	nocode_wanted = 1	1723:2:40921:40938	6302059	1	True				
ANR	6302333	AssignmentExpression	nocode_wanted = 1		6302059	0		=			
ANR	6302334	Identifier	nocode_wanted		6302059	0					
ANR	6302335	PrimaryExpression	1		6302059	1					
ANR	6302336	ExpressionStatement	"post_type ( type , ad )"	1725:2:40993:41013	6302059	2	True				
ANR	6302337	CallExpression	"post_type ( type , ad )"		6302059	0					
ANR	6302338	Callee	post_type		6302059	0					
ANR	6302339	Identifier	post_type		6302059	0					
ANR	6302340	ArgumentList	type		6302059	1					
ANR	6302341	Argument	type		6302059	0					
ANR	6302342	Identifier	type		6302059	0					
ANR	6302343	Argument	ad		6302059	1					
ANR	6302344	Identifier	ad		6302059	0					
ANR	6302345	ExpressionStatement	nocode_wanted = saved_nocode_wanted	1726:2:41017:41052	6302059	3	True				
ANR	6302346	AssignmentExpression	nocode_wanted = saved_nocode_wanted		6302059	0		=			
ANR	6302347	Identifier	nocode_wanted		6302059	0					
ANR	6302348	Identifier	saved_nocode_wanted		6302059	1					
ANR	6302349	ElseStatement	else		6302059	0					
ANR	6302350	CompoundStatement		75:2:1600:1635	6302059	0					
ANR	6302351	Statement	static	1728:2:41066:41071	6302059	0	True				
ANR	6302352	IdentifierDeclStatement	char kind [ 1024 ] ;	1728:9:41073:41088	6302059	1	True				
ANR	6302353	IdentifierDecl	kind [ 1024 ]		6302059	0					
ANR	6302354	IdentifierDeclType	char [ 1024 ]		6302059	0					
ANR	6302355	Identifier	kind		6302059	1					
ANR	6302356	PrimaryExpression	1024		6302059	2					
ANR	6302357	IdentifierDeclStatement	"char * name = get_tok_str ( * v , NULL ) ;"	1729:2:41092:41127	6302059	2	True				
ANR	6302358	IdentifierDecl	"* name = get_tok_str ( * v , NULL )"		6302059	0					
ANR	6302359	IdentifierDeclType	char *		6302059	0					
ANR	6302360	Identifier	name		6302059	1					
ANR	6302361	AssignmentExpression	"* name = get_tok_str ( * v , NULL )"		6302059	2		=			
ANR	6302362	Identifier	name		6302059	0					
ANR	6302363	CallExpression	"get_tok_str ( * v , NULL )"		6302059	1					
ANR	6302364	Callee	get_tok_str		6302059	0					
ANR	6302365	Identifier	get_tok_str		6302059	0					
ANR	6302366	ArgumentList	* v		6302059	1					
ANR	6302367	Argument	* v		6302059	0					
ANR	6302368	UnaryOperationExpression	* v		6302059	0					
ANR	6302369	UnaryOperator	*		6302059	0					
ANR	6302370	Identifier	v		6302059	1					
ANR	6302371	Argument	NULL		6302059	1					
ANR	6302372	Identifier	NULL		6302059	0					
ANR	6302373	ExpressionStatement	"type_to_str ( kind , sizeof ( kind ) , type , NULL )"	1730:2:41131:41175	6302059	3	True				
ANR	6302374	CallExpression	"type_to_str ( kind , sizeof ( kind ) , type , NULL )"		6302059	0					
ANR	6302375	Callee	type_to_str		6302059	0					
ANR	6302376	Identifier	type_to_str		6302059	0					
ANR	6302377	ArgumentList	kind		6302059	1					
ANR	6302378	Argument	kind		6302059	0					
ANR	6302379	Identifier	kind		6302059	0					
ANR	6302380	Argument	sizeof ( kind )		6302059	1					
ANR	6302381	SizeofExpression	sizeof ( kind )		6302059	0					
ANR	6302382	Sizeof	sizeof		6302059	0					
ANR	6302383	SizeofOperand	kind		6302059	1					
ANR	6302384	Argument	type		6302059	2					
ANR	6302385	Identifier	type		6302059	0					
ANR	6302386	Argument	NULL		6302059	3					
ANR	6302387	Identifier	NULL		6302059	0					
ANR	6302388	ExpressionStatement	global_symname = name	1732:2:41234:41255	6302059	4	True				
ANR	6302389	AssignmentExpression	global_symname = name		6302059	0		=			
ANR	6302390	Identifier	global_symname		6302059	0					
ANR	6302391	Identifier	name		6302059	1					
ANR	6302392	ExpressionStatement	global_type = kind	1733:2:41259:41277	6302059	5	True				
ANR	6302393	AssignmentExpression	global_type = kind		6302059	0		=			
ANR	6302394	Identifier	global_type		6302059	0					
ANR	6302395	Identifier	kind		6302059	1					
ANR	6302396	ExpressionStatement	"post_type ( type , ad )"	1734:2:41281:41301	6302059	6	True				
ANR	6302397	CallExpression	"post_type ( type , ad )"		6302059	0					
ANR	6302398	Callee	post_type		6302059	0					
ANR	6302399	Identifier	post_type		6302059	0					
ANR	6302400	ArgumentList	type		6302059	1					
ANR	6302401	Argument	type		6302059	0					
ANR	6302402	Identifier	type		6302059	0					
ANR	6302403	Argument	ad		6302059	1					
ANR	6302404	Identifier	ad		6302059	0					
ANR	6302405	ExpressionStatement	type -> t |= storage	1736:1:41307:41325	6302059	12	True				
ANR	6302406	AssignmentExpression	type -> t |= storage		6302059	0		|=			
ANR	6302407	PtrMemberAccess	type -> t		6302059	0					
ANR	6302408	Identifier	type		6302059	0					
ANR	6302409	Identifier	t		6302059	1					
ANR	6302410	Identifier	storage		6302059	1					
ANR	6302411	IfStatement	if ( tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2 )		6302059	13					
ANR	6302412	Condition	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2	1737:5:41332:41377	6302059	0	True				
ANR	6302413	OrExpression	tok == TOK_ATTRIBUTE1 || tok == TOK_ATTRIBUTE2		6302059	0		||			
ANR	6302414	EqualityExpression	tok == TOK_ATTRIBUTE1		6302059	0		==			
ANR	6302415	Identifier	tok		6302059	0					
ANR	6302416	Identifier	TOK_ATTRIBUTE1		6302059	1					
ANR	6302417	EqualityExpression	tok == TOK_ATTRIBUTE2		6302059	1		==			
ANR	6302418	Identifier	tok		6302059	0					
ANR	6302419	Identifier	TOK_ATTRIBUTE2		6302059	1					
ANR	6302420	CompoundStatement		83:53:1888:1888	6302059	1					
ANR	6302421	ExpressionStatement	parse_attribute ( ad )	1738:2:41384:41404	6302059	0	True				
ANR	6302422	CallExpression	parse_attribute ( ad )		6302059	0					
ANR	6302423	Callee	parse_attribute		6302059	0					
ANR	6302424	Identifier	parse_attribute		6302059	0					
ANR	6302425	ArgumentList	ad		6302059	1					
ANR	6302426	Argument	ad		6302059	0					
ANR	6302427	Identifier	ad		6302059	0					
ANR	6302428	IfStatement	if ( ! type1 -> t )		6302059	14					
ANR	6302429	Condition	! type1 -> t	1741:5:41415:41423	6302059	0	True				
ANR	6302430	UnaryOperationExpression	! type1 -> t		6302059	0					
ANR	6302431	UnaryOperator	!		6302059	0					
ANR	6302432	PtrMemberAccess	type1 -> t		6302059	1					
ANR	6302433	Identifier	type1		6302059	0					
ANR	6302434	Identifier	t		6302059	1					
ANR	6302435	CompoundStatement		87:16:1934:1934	6302059	1					
ANR	6302436	ExpressionStatement	free ( type1 )	1742:2:41430:41442	6302059	0	True				
ANR	6302437	CallExpression	free ( type1 )		6302059	0					
ANR	6302438	Callee	free		6302059	0					
ANR	6302439	Identifier	free		6302059	0					
ANR	6302440	ArgumentList	type1		6302059	1					
ANR	6302441	Argument	type1		6302059	0					
ANR	6302442	Identifier	type1		6302059	0					
ANR	6302443	ExpressionStatement	free ( type2 )	1743:2:41446:41458	6302059	1	True				
ANR	6302444	CallExpression	free ( type2 )		6302059	0					
ANR	6302445	Callee	free		6302059	0					
ANR	6302446	Identifier	free		6302059	0					
ANR	6302447	ArgumentList	type2		6302059	1					
ANR	6302448	Argument	type2		6302059	0					
ANR	6302449	Identifier	type2		6302059	0					
ANR	6302450	ReturnStatement	return ;	1744:2:41462:41468	6302059	2	True				
ANR	6302451	ExpressionStatement	type2 = type1	1747:1:41513:41526	6302059	15	True				
ANR	6302452	AssignmentExpression	type2 = type1		6302059	0		=			
ANR	6302453	Identifier	type2		6302059	0					
ANR	6302454	Identifier	type1		6302059	1					
ANR	6302455	ForStatement	for ( ; ; )		6302059	16					
ANR	6302456	CompoundStatement		94:10:2046:2046	6302059	0					
ANR	6302457	ExpressionStatement	s = type2 -> ref	1749:2:41542:41556	6302059	0	True				
ANR	6302458	AssignmentExpression	s = type2 -> ref		6302059	0		=			
ANR	6302459	Identifier	s		6302059	0					
ANR	6302460	PtrMemberAccess	type2 -> ref		6302059	1					
ANR	6302461	Identifier	type2		6302059	0					
ANR	6302462	Identifier	ref		6302059	1					
ANR	6302463	ExpressionStatement	type2 = & s -> type	1750:2:41560:41576	6302059	1	True				
ANR	6302464	AssignmentExpression	type2 = & s -> type		6302059	0		=			
ANR	6302465	Identifier	type2		6302059	0					
ANR	6302466	UnaryOperationExpression	& s -> type		6302059	1					
ANR	6302467	UnaryOperator	&		6302059	0					
ANR	6302468	PtrMemberAccess	s -> type		6302059	1					
ANR	6302469	Identifier	s		6302059	0					
ANR	6302470	Identifier	type		6302059	1					
ANR	6302471	IfStatement	if ( ! type2 -> t )		6302059	2					
ANR	6302472	Condition	! type2 -> t	1751:6:41584:41592	6302059	0	True				
ANR	6302473	UnaryOperationExpression	! type2 -> t		6302059	0					
ANR	6302474	UnaryOperator	!		6302059	0					
ANR	6302475	PtrMemberAccess	type2 -> t		6302059	1					
ANR	6302476	Identifier	type2		6302059	0					
ANR	6302477	Identifier	t		6302059	1					
ANR	6302478	CompoundStatement		97:17:2103:2103	6302059	1					
ANR	6302479	ExpressionStatement	* type2 = * type	1752:3:41600:41614	6302059	0	True				
ANR	6302480	AssignmentExpression	* type2 = * type		6302059	0		=			
ANR	6302481	UnaryOperationExpression	* type2		6302059	0					
ANR	6302482	UnaryOperator	*		6302059	0					
ANR	6302483	Identifier	type2		6302059	1					
ANR	6302484	UnaryOperationExpression	* type		6302059	1					
ANR	6302485	UnaryOperator	*		6302059	0					
ANR	6302486	Identifier	type		6302059	1					
ANR	6302487	BreakStatement	break ;	1753:3:41619:41624	6302059	1	True				
ANR	6302488	ExpressionStatement	"memcpy ( type , type1 , sizeof ( * type ) )"	1756:1:41634:41669	6302059	17	True				
ANR	6302489	CallExpression	"memcpy ( type , type1 , sizeof ( * type ) )"		6302059	0					
ANR	6302490	Callee	memcpy		6302059	0					
ANR	6302491	Identifier	memcpy		6302059	0					
ANR	6302492	ArgumentList	type		6302059	1					
ANR	6302493	Argument	type		6302059	0					
ANR	6302494	Identifier	type		6302059	0					
ANR	6302495	Argument	type1		6302059	1					
ANR	6302496	Identifier	type1		6302059	0					
ANR	6302497	Argument	sizeof ( * type )		6302059	2					
ANR	6302498	SizeofExpression	sizeof ( * type )		6302059	0					
ANR	6302499	Sizeof	sizeof		6302059	0					
ANR	6302500	UnaryOperationExpression	* type		6302059	1					
ANR	6302501	UnaryOperator	*		6302059	0					
ANR	6302502	Identifier	type		6302059	1					
ANR	6302503	ReturnType	static void		6302059	1					
ANR	6302504	Identifier	type_decl		6302059	2					
ANR	6302505	ParameterList	"CType * type , AttributeDef * ad , int * v , int td"		6302059	3					
ANR	6302506	Parameter	CType * type	1655:22:39444:39454	6302059	0	True				
ANR	6302507	ParameterType	CType *		6302059	0					
ANR	6302508	Identifier	type		6302059	1					
ANR	6302509	Parameter	AttributeDef * ad	1655:35:39457:39472	6302059	1	True				
ANR	6302510	ParameterType	AttributeDef *		6302059	0					
ANR	6302511	Identifier	ad		6302059	1					
ANR	6302512	Parameter	int * v	1655:53:39475:39480	6302059	2	True				
ANR	6302513	ParameterType	int *		6302059	0					
ANR	6302514	Identifier	v		6302059	1					
ANR	6302515	Parameter	int td	1655:61:39483:39488	6302059	3	True				
ANR	6302516	ParameterType	int		6302059	0					
ANR	6302517	Identifier	td		6302059	1					
ANR	6302518	CFGEntryNode	ENTRY		6302059		True				
ANR	6302519	CFGExitNode	EXIT		6302059		True				
ANR	6302520	InfiniteForNode	true		6302059		True				
ANR	6302521	Symbol	* v		6302059						
ANR	6302522	Symbol	get_tok_str		6302059						
ANR	6302523	Symbol	global_symname		6302059						
ANR	6302524	Symbol	CType		6302059						
ANR	6302525	Symbol	TYPE_DIRECT		6302059						
ANR	6302526	Symbol	storage		6302059						
ANR	6302527	Symbol	type		6302059						
ANR	6302528	Symbol	saved_nocode_wanted		6302059						
ANR	6302529	Symbol	global_type		6302059						
ANR	6302530	Symbol	type2 -> t		6302059						
ANR	6302531	Symbol	tok		6302059						
ANR	6302532	Symbol	VT_VOLATILE		6302059						
ANR	6302533	Symbol	TOK_ATTRIBUTE1		6302059						
ANR	6302534	Symbol	TOK_ATTRIBUTE2		6302059						
ANR	6302535	Symbol	* type		6302059						
ANR	6302536	Symbol	nocode_wanted		6302059						
ANR	6302537	Symbol	TYPE_ABSTRACT		6302059						
ANR	6302538	Symbol	type1 -> t		6302059						
ANR	6302539	Symbol	& s -> type		6302059						
ANR	6302540	Symbol	ad		6302059						
ANR	6302541	Symbol	type2		6302059						
ANR	6302542	Symbol	~VT_STORAGE		6302059						
ANR	6302543	Symbol	NULL		6302059						
ANR	6302544	Symbol	TOK_IDENT		6302059						
ANR	6302545	Symbol	VT_CONSTANT		6302059						
ANR	6302546	Symbol	kind		6302059						
ANR	6302547	Symbol	qualifiers		6302059						
ANR	6302548	Symbol	type1		6302059						
ANR	6302549	Symbol	td		6302059						
ANR	6302550	Symbol	R_NEW0		6302059						
ANR	6302551	Symbol	VT_STORAGE		6302059						
ANR	6302552	Symbol	type2 -> ref		6302059						
ANR	6302553	Symbol	s		6302059						
ANR	6302554	Symbol	v		6302059						
ANR	6302555	Symbol	type -> t		6302059						
ANR	6302556	Symbol	name		6302059						
ANR	6302557	Symbol	* type1		6302059						
ANR	6302558	Symbol	* type2		6302059						
ANR	6302559	Symbol	VT_STATIC		6302059						
ANR	6302560	Function	lvalue_type	1760:0:41735:42014							
ANR	6302561	FunctionDef	lvalue_type (int t)		6302560	0					
ANR	6302562	CompoundStatement		1760:31:41766:42014	6302560	0					
ANR	6302563	IdentifierDeclStatement	"int bt , r ;"	1761:1:41769:41778	6302560	0	True				
ANR	6302564	IdentifierDecl	bt		6302560	0					
ANR	6302565	IdentifierDeclType	int		6302560	0					
ANR	6302566	Identifier	bt		6302560	1					
ANR	6302567	IdentifierDecl	r		6302560	1					
ANR	6302568	IdentifierDeclType	int		6302560	0					
ANR	6302569	Identifier	r		6302560	1					
ANR	6302570	ExpressionStatement	r = VT_LVAL	1762:1:41781:41792	6302560	1	True				
ANR	6302571	AssignmentExpression	r = VT_LVAL		6302560	0		=			
ANR	6302572	Identifier	r		6302560	0					
ANR	6302573	Identifier	VT_LVAL		6302560	1					
ANR	6302574	ExpressionStatement	bt = t & VT_BTYPE	1763:1:41795:41812	6302560	2	True				
ANR	6302575	AssignmentExpression	bt = t & VT_BTYPE		6302560	0		=			
ANR	6302576	Identifier	bt		6302560	0					
ANR	6302577	BitAndExpression	t & VT_BTYPE		6302560	1		&			
ANR	6302578	Identifier	t		6302560	0					
ANR	6302579	Identifier	VT_BTYPE		6302560	1					
ANR	6302580	IfStatement	if ( bt == VT_INT8 || bt == VT_BOOL )		6302560	3					
ANR	6302581	Condition	bt == VT_INT8 || bt == VT_BOOL	1764:5:41819:41848	6302560	0	True				
ANR	6302582	OrExpression	bt == VT_INT8 || bt == VT_BOOL		6302560	0		||			
ANR	6302583	EqualityExpression	bt == VT_INT8		6302560	0		==			
ANR	6302584	Identifier	bt		6302560	0					
ANR	6302585	Identifier	VT_INT8		6302560	1					
ANR	6302586	EqualityExpression	bt == VT_BOOL		6302560	1		==			
ANR	6302587	Identifier	bt		6302560	0					
ANR	6302588	Identifier	VT_BOOL		6302560	1					
ANR	6302589	CompoundStatement		5:37:84:84	6302560	1					
ANR	6302590	ExpressionStatement	r |= VT_LVAL_BYTE	1765:2:41855:41872	6302560	0	True				
ANR	6302591	AssignmentExpression	r |= VT_LVAL_BYTE		6302560	0		|=			
ANR	6302592	Identifier	r		6302560	0					
ANR	6302593	Identifier	VT_LVAL_BYTE		6302560	1					
ANR	6302594	ElseStatement	else		6302560	0					
ANR	6302595	IfStatement	if ( bt == VT_INT16 )		6302560	0					
ANR	6302596	Condition	bt == VT_INT16	1766:12:41886:41899	6302560	0	True				
ANR	6302597	EqualityExpression	bt == VT_INT16		6302560	0		==			
ANR	6302598	Identifier	bt		6302560	0					
ANR	6302599	Identifier	VT_INT16		6302560	1					
ANR	6302600	CompoundStatement		7:28:135:135	6302560	1					
ANR	6302601	ExpressionStatement	r |= VT_LVAL_SHORT	1767:2:41906:41924	6302560	0	True				
ANR	6302602	AssignmentExpression	r |= VT_LVAL_SHORT		6302560	0		|=			
ANR	6302603	Identifier	r		6302560	0					
ANR	6302604	Identifier	VT_LVAL_SHORT		6302560	1					
ANR	6302605	ElseStatement	else		6302560	0					
ANR	6302606	CompoundStatement		9:8:167:167	6302560	0					
ANR	6302607	ReturnStatement	return r ;	1769:2:41938:41946	6302560	0	True				
ANR	6302608	Identifier	r		6302560	0					
ANR	6302609	IfStatement	if ( t & VT_UNSIGNED )		6302560	4					
ANR	6302610	Condition	t & VT_UNSIGNED	1771:5:41956:41970	6302560	0	True				
ANR	6302611	BitAndExpression	t & VT_UNSIGNED		6302560	0		&			
ANR	6302612	Identifier	t		6302560	0					
ANR	6302613	Identifier	VT_UNSIGNED		6302560	1					
ANR	6302614	CompoundStatement		12:22:206:206	6302560	1					
ANR	6302615	ExpressionStatement	r |= VT_LVAL_UNSIGNED	1772:2:41977:41998	6302560	0	True				
ANR	6302616	AssignmentExpression	r |= VT_LVAL_UNSIGNED		6302560	0		|=			
ANR	6302617	Identifier	r		6302560	0					
ANR	6302618	Identifier	VT_LVAL_UNSIGNED		6302560	1					
ANR	6302619	ReturnStatement	return r ;	1774:1:42004:42012	6302560	5	True				
ANR	6302620	Identifier	r		6302560	0					
ANR	6302621	ReturnType	ST_FUNC int		6302560	1					
ANR	6302622	Identifier	lvalue_type		6302560	2					
ANR	6302623	ParameterList	int t		6302560	3					
ANR	6302624	Parameter	int t	1760:24:41759:41763	6302560	0	True				
ANR	6302625	ParameterType	int		6302560	0					
ANR	6302626	Identifier	t		6302560	1					
ANR	6302627	CFGEntryNode	ENTRY		6302560		True				
ANR	6302628	CFGExitNode	EXIT		6302560		True				
ANR	6302629	Symbol	r		6302560						
ANR	6302630	Symbol	bt		6302560						
ANR	6302631	Symbol	VT_UNSIGNED		6302560						
ANR	6302632	Symbol	VT_BOOL		6302560						
ANR	6302633	Symbol	t		6302560						
ANR	6302634	Symbol	VT_INT16		6302560						
ANR	6302635	Symbol	VT_INT8		6302560						
ANR	6302636	Symbol	VT_LVAL_UNSIGNED		6302560						
ANR	6302637	Symbol	VT_LVAL		6302560						
ANR	6302638	Symbol	VT_BTYPE		6302560						
ANR	6302639	Symbol	VT_LVAL_SHORT		6302560						
ANR	6302640	Symbol	VT_LVAL_BYTE		6302560						
ANR	6302641	Function	indir	1778:0:42076:42640							
ANR	6302642	FunctionDef	indir ()		6302641	0					
ANR	6302643	CompoundStatement		1778:25:42101:42640	6302641	0					
ANR	6302644	IfStatement	if ( ( vtop -> type . t & VT_BTYPE ) != VT_PTR )		6302641	0					
ANR	6302645	Condition	( vtop -> type . t & VT_BTYPE ) != VT_PTR	1779:5:42108:42142	6302641	0	True				
ANR	6302646	EqualityExpression	( vtop -> type . t & VT_BTYPE ) != VT_PTR		6302641	0		!=			
ANR	6302647	BitAndExpression	vtop -> type . t & VT_BTYPE		6302641	0		&			
ANR	6302648	MemberAccess	vtop -> type . t		6302641	0					
ANR	6302649	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302650	Identifier	vtop		6302641	0					
ANR	6302651	Identifier	type		6302641	1					
ANR	6302652	Identifier	t		6302641	1					
ANR	6302653	Identifier	VT_BTYPE		6302641	1					
ANR	6302654	Identifier	VT_PTR		6302641	1					
ANR	6302655	CompoundStatement		2:42:43:43	6302641	1					
ANR	6302656	IfStatement	if ( ( vtop -> type . t & VT_BTYPE ) == VT_FUNC )		6302641	0					
ANR	6302657	Condition	( vtop -> type . t & VT_BTYPE ) == VT_FUNC	1780:6:42153:42188	6302641	0	True				
ANR	6302658	EqualityExpression	( vtop -> type . t & VT_BTYPE ) == VT_FUNC		6302641	0		==			
ANR	6302659	BitAndExpression	vtop -> type . t & VT_BTYPE		6302641	0		&			
ANR	6302660	MemberAccess	vtop -> type . t		6302641	0					
ANR	6302661	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302662	Identifier	vtop		6302641	0					
ANR	6302663	Identifier	type		6302641	1					
ANR	6302664	Identifier	t		6302641	1					
ANR	6302665	Identifier	VT_BTYPE		6302641	1					
ANR	6302666	Identifier	VT_FUNC		6302641	1					
ANR	6302667	CompoundStatement		3:44:89:89	6302641	1					
ANR	6302668	ReturnStatement	return ;	1781:3:42196:42202	6302641	0	True				
ANR	6302669	ExpressionStatement	"expect ( ""pointer"" )"	1783:2:42210:42228	6302641	1	True				
ANR	6302670	CallExpression	"expect ( ""pointer"" )"		6302641	0					
ANR	6302671	Callee	expect		6302641	0					
ANR	6302672	Identifier	expect		6302641	0					
ANR	6302673	ArgumentList	"""pointer"""		6302641	1					
ANR	6302674	Argument	"""pointer"""		6302641	0					
ANR	6302675	PrimaryExpression	"""pointer"""		6302641	0					
ANR	6302676	ExpressionStatement	vtop -> type = * pointed_type ( & vtop -> type )	1785:1:42234:42274	6302641	1	True				
ANR	6302677	AssignmentExpression	vtop -> type = * pointed_type ( & vtop -> type )		6302641	0		=			
ANR	6302678	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302679	Identifier	vtop		6302641	0					
ANR	6302680	Identifier	type		6302641	1					
ANR	6302681	UnaryOperationExpression	* pointed_type ( & vtop -> type )		6302641	1					
ANR	6302682	UnaryOperator	*		6302641	0					
ANR	6302683	CallExpression	pointed_type ( & vtop -> type )		6302641	1					
ANR	6302684	Callee	pointed_type		6302641	0					
ANR	6302685	Identifier	pointed_type		6302641	0					
ANR	6302686	ArgumentList	& vtop -> type		6302641	1					
ANR	6302687	Argument	& vtop -> type		6302641	0					
ANR	6302688	UnaryOperationExpression	& vtop -> type		6302641	0					
ANR	6302689	UnaryOperator	&		6302641	0					
ANR	6302690	PtrMemberAccess	vtop -> type		6302641	1					
ANR	6302691	Identifier	vtop		6302641	0					
ANR	6302692	Identifier	type		6302641	1					
ANR	6302693	IfStatement	if ( ! ( vtop -> type . t & VT_ARRAY ) && ! ( vtop -> type . t & VT_VLA ) && ( vtop -> type . t & VT_BTYPE ) != VT_FUNC )		6302641	2					
ANR	6302694	Condition	! ( vtop -> type . t & VT_ARRAY ) && ! ( vtop -> type . t & VT_VLA ) && ( vtop -> type . t & VT_BTYPE ) != VT_FUNC	1787:5:42327:42425	6302641	0	True				
ANR	6302695	AndExpression	! ( vtop -> type . t & VT_ARRAY ) && ! ( vtop -> type . t & VT_VLA ) && ( vtop -> type . t & VT_BTYPE ) != VT_FUNC		6302641	0		&&			
ANR	6302696	UnaryOperationExpression	! ( vtop -> type . t & VT_ARRAY )		6302641	0					
ANR	6302697	UnaryOperator	!		6302641	0					
ANR	6302698	BitAndExpression	vtop -> type . t & VT_ARRAY		6302641	1		&			
ANR	6302699	MemberAccess	vtop -> type . t		6302641	0					
ANR	6302700	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302701	Identifier	vtop		6302641	0					
ANR	6302702	Identifier	type		6302641	1					
ANR	6302703	Identifier	t		6302641	1					
ANR	6302704	Identifier	VT_ARRAY		6302641	1					
ANR	6302705	AndExpression	! ( vtop -> type . t & VT_VLA ) && ( vtop -> type . t & VT_BTYPE ) != VT_FUNC		6302641	1		&&			
ANR	6302706	UnaryOperationExpression	! ( vtop -> type . t & VT_VLA )		6302641	0					
ANR	6302707	UnaryOperator	!		6302641	0					
ANR	6302708	BitAndExpression	vtop -> type . t & VT_VLA		6302641	1		&			
ANR	6302709	MemberAccess	vtop -> type . t		6302641	0					
ANR	6302710	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302711	Identifier	vtop		6302641	0					
ANR	6302712	Identifier	type		6302641	1					
ANR	6302713	Identifier	t		6302641	1					
ANR	6302714	Identifier	VT_VLA		6302641	1					
ANR	6302715	EqualityExpression	( vtop -> type . t & VT_BTYPE ) != VT_FUNC		6302641	1		!=			
ANR	6302716	BitAndExpression	vtop -> type . t & VT_BTYPE		6302641	0		&			
ANR	6302717	MemberAccess	vtop -> type . t		6302641	0					
ANR	6302718	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302719	Identifier	vtop		6302641	0					
ANR	6302720	Identifier	type		6302641	1					
ANR	6302721	Identifier	t		6302641	1					
ANR	6302722	Identifier	VT_BTYPE		6302641	1					
ANR	6302723	Identifier	VT_FUNC		6302641	1					
ANR	6302724	CompoundStatement		11:46:326:326	6302641	1					
ANR	6302725	ExpressionStatement	vtop -> r |= lvalue_type ( vtop -> type . t )	1789:2:42432:42469	6302641	0	True				
ANR	6302726	AssignmentExpression	vtop -> r |= lvalue_type ( vtop -> type . t )		6302641	0		|=			
ANR	6302727	PtrMemberAccess	vtop -> r		6302641	0					
ANR	6302728	Identifier	vtop		6302641	0					
ANR	6302729	Identifier	r		6302641	1					
ANR	6302730	CallExpression	lvalue_type ( vtop -> type . t )		6302641	1					
ANR	6302731	Callee	lvalue_type		6302641	0					
ANR	6302732	Identifier	lvalue_type		6302641	0					
ANR	6302733	ArgumentList	vtop -> type . t		6302641	1					
ANR	6302734	Argument	vtop -> type . t		6302641	0					
ANR	6302735	MemberAccess	vtop -> type . t		6302641	0					
ANR	6302736	PtrMemberAccess	vtop -> type		6302641	0					
ANR	6302737	Identifier	vtop		6302641	0					
ANR	6302738	Identifier	type		6302641	1					
ANR	6302739	Identifier	t		6302641	1					
ANR	6302740	IfStatement	if ( tcc_state -> do_bounds_check )		6302641	1					
ANR	6302741	Condition	tcc_state -> do_bounds_check	1792:6:42568:42593	6302641	0	True				
ANR	6302742	PtrMemberAccess	tcc_state -> do_bounds_check		6302641	0					
ANR	6302743	Identifier	tcc_state		6302641	0					
ANR	6302744	Identifier	do_bounds_check		6302641	1					
ANR	6302745	CompoundStatement		15:34:494:494	6302641	1					
ANR	6302746	ExpressionStatement	vtop -> r |= VT_MUSTBOUND	1793:3:42601:42624	6302641	0	True				
ANR	6302747	AssignmentExpression	vtop -> r |= VT_MUSTBOUND		6302641	0		|=			
ANR	6302748	PtrMemberAccess	vtop -> r		6302641	0					
ANR	6302749	Identifier	vtop		6302641	0					
ANR	6302750	Identifier	r		6302641	1					
ANR	6302751	Identifier	VT_MUSTBOUND		6302641	1					
ANR	6302752	ReturnType	ST_FUNC void		6302641	1					
ANR	6302753	Identifier	indir		6302641	2					
ANR	6302754	ParameterList			6302641	3					
ANR	6302755	CFGEntryNode	ENTRY		6302641		True				
ANR	6302756	CFGExitNode	EXIT		6302641		True				
ANR	6302757	Symbol	* pointed_type ( & vtop -> type )		6302641						
ANR	6302758	Symbol	* pointed_type		6302641						
ANR	6302759	Symbol	tcc_state		6302641						
ANR	6302760	Symbol	VT_PTR		6302641						
ANR	6302761	Symbol	tcc_state -> do_bounds_check		6302641						
ANR	6302762	Symbol	VT_MUSTBOUND		6302641						
ANR	6302763	Symbol	VT_VLA		6302641						
ANR	6302764	Symbol	vtop -> type		6302641						
ANR	6302765	Symbol	vtop		6302641						
ANR	6302766	Symbol	* tcc_state		6302641						
ANR	6302767	Symbol	VT_BTYPE		6302641						
ANR	6302768	Symbol	VT_FUNC		6302641						
ANR	6302769	Symbol	* vtop		6302641						
ANR	6302770	Symbol	lvalue_type		6302641						
ANR	6302771	Symbol	vtop -> type . t		6302641						
ANR	6302772	Symbol	pointed_type		6302641						
ANR	6302773	Symbol	vtop -> r		6302641						
ANR	6302774	Symbol	& vtop -> type		6302641						
ANR	6302775	Symbol	VT_ARRAY		6302641						
ANR	6302776	Function	parse_expr_type	1801:0:42725:42930							
ANR	6302777	FunctionDef	parse_expr_type (CType * type)		6302776	0					
ANR	6302778	CompoundStatement		1801:41:42766:42930	6302776	0					
ANR	6302779	IdentifierDeclStatement	int n ;	1802:1:42769:42774	6302776	0	True				
ANR	6302780	IdentifierDecl	n		6302776	0					
ANR	6302781	IdentifierDeclType	int		6302776	0					
ANR	6302782	Identifier	n		6302776	1					
ANR	6302783	IdentifierDeclStatement	AttributeDef ad ;	1803:1:42777:42792	6302776	1	True				
ANR	6302784	IdentifierDecl	ad		6302776	0					
ANR	6302785	IdentifierDeclType	AttributeDef		6302776	0					
ANR	6302786	Identifier	ad		6302776	1					
ANR	6302787	ExpressionStatement	skip ( '(' )	1805:1:42796:42806	6302776	2	True				
ANR	6302788	CallExpression	skip ( '(' )		6302776	0					
ANR	6302789	Callee	skip		6302776	0					
ANR	6302790	Identifier	skip		6302776	0					
ANR	6302791	ArgumentList	'('		6302776	1					
ANR	6302792	Argument	'('		6302776	0					
ANR	6302793	PrimaryExpression	'('		6302776	0					
ANR	6302794	IfStatement	"if ( parse_btype ( type , & ad ) )"		6302776	3					
ANR	6302795	Condition	"parse_btype ( type , & ad )"	1806:5:42813:42835	6302776	0	True				
ANR	6302796	CallExpression	"parse_btype ( type , & ad )"		6302776	0					
ANR	6302797	Callee	parse_btype		6302776	0					
ANR	6302798	Identifier	parse_btype		6302776	0					
ANR	6302799	ArgumentList	type		6302776	1					
ANR	6302800	Argument	type		6302776	0					
ANR	6302801	Identifier	type		6302776	0					
ANR	6302802	Argument	& ad		6302776	1					
ANR	6302803	UnaryOperationExpression	& ad		6302776	0					
ANR	6302804	UnaryOperator	&		6302776	0					
ANR	6302805	Identifier	ad		6302776	1					
ANR	6302806	CompoundStatement		6:30:71:71	6302776	1					
ANR	6302807	ExpressionStatement	"type_decl ( type , & ad , & n , TYPE_ABSTRACT )"	1807:2:42842:42882	6302776	0	True				
ANR	6302808	CallExpression	"type_decl ( type , & ad , & n , TYPE_ABSTRACT )"		6302776	0					
ANR	6302809	Callee	type_decl		6302776	0					
ANR	6302810	Identifier	type_decl		6302776	0					
ANR	6302811	ArgumentList	type		6302776	1					
ANR	6302812	Argument	type		6302776	0					
ANR	6302813	Identifier	type		6302776	0					
ANR	6302814	Argument	& ad		6302776	1					
ANR	6302815	UnaryOperationExpression	& ad		6302776	0					
ANR	6302816	UnaryOperator	&		6302776	0					
ANR	6302817	Identifier	ad		6302776	1					
ANR	6302818	Argument	& n		6302776	2					
ANR	6302819	UnaryOperationExpression	& n		6302776	0					
ANR	6302820	UnaryOperator	&		6302776	0					
ANR	6302821	Identifier	n		6302776	1					
ANR	6302822	Argument	TYPE_ABSTRACT		6302776	3					
ANR	6302823	Identifier	TYPE_ABSTRACT		6302776	0					
ANR	6302824	ElseStatement	else		6302776	0					
ANR	6302825	CompoundStatement		8:8:125:125	6302776	0					
ANR	6302826	ExpressionStatement	expr_type ( type )	1809:2:42896:42912	6302776	0	True				
ANR	6302827	CallExpression	expr_type ( type )		6302776	0					
ANR	6302828	Callee	expr_type		6302776	0					
ANR	6302829	Identifier	expr_type		6302776	0					
ANR	6302830	ArgumentList	type		6302776	1					
ANR	6302831	Argument	type		6302776	0					
ANR	6302832	Identifier	type		6302776	0					
ANR	6302833	ExpressionStatement	skip ( ')' )	1811:1:42918:42928	6302776	4	True				
ANR	6302834	CallExpression	skip ( ')' )		6302776	0					
ANR	6302835	Callee	skip		6302776	0					
ANR	6302836	Identifier	skip		6302776	0					
ANR	6302837	ArgumentList	')'		6302776	1					
ANR	6302838	Argument	')'		6302776	0					
ANR	6302839	PrimaryExpression	')'		6302776	0					
ANR	6302840	ReturnType	static void		6302776	1					
ANR	6302841	Identifier	parse_expr_type		6302776	2					
ANR	6302842	ParameterList	CType * type		6302776	3					
ANR	6302843	Parameter	CType * type	1801:28:42753:42763	6302776	0	True				
ANR	6302844	ParameterType	CType *		6302776	0					
ANR	6302845	Identifier	type		6302776	1					
ANR	6302846	CFGEntryNode	ENTRY		6302776		True				
ANR	6302847	CFGExitNode	EXIT		6302776		True				
ANR	6302848	Symbol	ad		6302776						
ANR	6302849	Symbol	& n		6302776						
ANR	6302850	Symbol	type		6302776						
ANR	6302851	Symbol	& ad		6302776						
ANR	6302852	Symbol	n		6302776						
ANR	6302853	Symbol	TYPE_ABSTRACT		6302776						
ANR	6302854	Symbol	parse_btype		6302776						
ANR	6302855	Function	parse_type	1814:0:42933:43096							
ANR	6302856	FunctionDef	parse_type (CType * type)		6302855	0					
ANR	6302857	CompoundStatement		1814:36:42969:43096	6302855	0					
ANR	6302858	IdentifierDeclStatement	AttributeDef ad ;	1815:1:42972:42987	6302855	0	True				
ANR	6302859	IdentifierDecl	ad		6302855	0					
ANR	6302860	IdentifierDeclType	AttributeDef		6302855	0					
ANR	6302861	Identifier	ad		6302855	1					
ANR	6302862	IdentifierDeclStatement	int n ;	1816:1:42990:42995	6302855	1	True				
ANR	6302863	IdentifierDecl	n		6302855	0					
ANR	6302864	IdentifierDeclType	int		6302855	0					
ANR	6302865	Identifier	n		6302855	1					
ANR	6302866	IfStatement	"if ( ! parse_btype ( type , & ad ) )"		6302855	2					
ANR	6302867	Condition	"! parse_btype ( type , & ad )"	1818:5:43003:43026	6302855	0	True				
ANR	6302868	UnaryOperationExpression	"! parse_btype ( type , & ad )"		6302855	0					
ANR	6302869	UnaryOperator	!		6302855	0					
ANR	6302870	CallExpression	"parse_btype ( type , & ad )"		6302855	1					
ANR	6302871	Callee	parse_btype		6302855	0					
ANR	6302872	Identifier	parse_btype		6302855	0					
ANR	6302873	ArgumentList	type		6302855	1					
ANR	6302874	Argument	type		6302855	0					
ANR	6302875	Identifier	type		6302855	0					
ANR	6302876	Argument	& ad		6302855	1					
ANR	6302877	UnaryOperationExpression	& ad		6302855	0					
ANR	6302878	UnaryOperator	&		6302855	0					
ANR	6302879	Identifier	ad		6302855	1					
ANR	6302880	CompoundStatement		5:31:59:59	6302855	1					
ANR	6302881	ExpressionStatement	"expect ( ""type"" )"	1819:2:43033:43048	6302855	0	True				
ANR	6302882	CallExpression	"expect ( ""type"" )"		6302855	0					
ANR	6302883	Callee	expect		6302855	0					
ANR	6302884	Identifier	expect		6302855	0					
ANR	6302885	ArgumentList	"""type"""		6302855	1					
ANR	6302886	Argument	"""type"""		6302855	0					
ANR	6302887	PrimaryExpression	"""type"""		6302855	0					
ANR	6302888	ExpressionStatement	"type_decl ( type , & ad , & n , TYPE_ABSTRACT )"	1821:1:43054:43094	6302855	3	True				
ANR	6302889	CallExpression	"type_decl ( type , & ad , & n , TYPE_ABSTRACT )"		6302855	0					
ANR	6302890	Callee	type_decl		6302855	0					
ANR	6302891	Identifier	type_decl		6302855	0					
ANR	6302892	ArgumentList	type		6302855	1					
ANR	6302893	Argument	type		6302855	0					
ANR	6302894	Identifier	type		6302855	0					
ANR	6302895	Argument	& ad		6302855	1					
ANR	6302896	UnaryOperationExpression	& ad		6302855	0					
ANR	6302897	UnaryOperator	&		6302855	0					
ANR	6302898	Identifier	ad		6302855	1					
ANR	6302899	Argument	& n		6302855	2					
ANR	6302900	UnaryOperationExpression	& n		6302855	0					
ANR	6302901	UnaryOperator	&		6302855	0					
ANR	6302902	Identifier	n		6302855	1					
ANR	6302903	Argument	TYPE_ABSTRACT		6302855	3					
ANR	6302904	Identifier	TYPE_ABSTRACT		6302855	0					
ANR	6302905	ReturnType	static void		6302855	1					
ANR	6302906	Identifier	parse_type		6302855	2					
ANR	6302907	ParameterList	CType * type		6302855	3					
ANR	6302908	Parameter	CType * type	1814:23:42956:42966	6302855	0	True				
ANR	6302909	ParameterType	CType *		6302855	0					
ANR	6302910	Identifier	type		6302855	1					
ANR	6302911	CFGEntryNode	ENTRY		6302855		True				
ANR	6302912	CFGExitNode	EXIT		6302855		True				
ANR	6302913	Symbol	ad		6302855						
ANR	6302914	Symbol	& n		6302855						
ANR	6302915	Symbol	type		6302855						
ANR	6302916	Symbol	& ad		6302855						
ANR	6302917	Symbol	n		6302855						
ANR	6302918	Symbol	TYPE_ABSTRACT		6302855						
ANR	6302919	Symbol	parse_btype		6302855						
ANR	6302920	Function	vpush_tokc	1824:0:43099:43216							
ANR	6302921	FunctionDef	vpush_tokc (int t)		6302920	0					
ANR	6302922	CompoundStatement		1824:30:43129:43216	6302920	0					
ANR	6302923	IdentifierDeclStatement	CType type = { 0 } ;	1825:1:43132:43150	6302920	0	True				
ANR	6302924	IdentifierDecl	type = { 0 }		6302920	0					
ANR	6302925	IdentifierDeclType	CType		6302920	0					
ANR	6302926	Identifier	type		6302920	1					
ANR	6302927	AssignmentExpression	type = { 0 }		6302920	2		=			
ANR	6302928	Identifier	type		6302920	0					
ANR	6302929	InitializerList	0		6302920	1					
ANR	6302930	PrimaryExpression	0		6302920	0					
ANR	6302931	ExpressionStatement	type . t = t	1826:1:43153:43163	6302920	1	True				
ANR	6302932	AssignmentExpression	type . t = t		6302920	0		=			
ANR	6302933	MemberAccess	type . t		6302920	0					
ANR	6302934	Identifier	type		6302920	0					
ANR	6302935	Identifier	t		6302920	1					
ANR	6302936	Identifier	t		6302920	1					
ANR	6302937	ExpressionStatement	type . ref = NULL	1827:1:43166:43181	6302920	2	True				
ANR	6302938	AssignmentExpression	type . ref = NULL		6302920	0		=			
ANR	6302939	MemberAccess	type . ref		6302920	0					
ANR	6302940	Identifier	type		6302920	0					
ANR	6302941	Identifier	ref		6302920	1					
ANR	6302942	Identifier	NULL		6302920	1					
ANR	6302943	ExpressionStatement	"vsetc ( & type , VT_CONST , & tokc )"	1828:1:43184:43214	6302920	3	True				
ANR	6302944	CallExpression	"vsetc ( & type , VT_CONST , & tokc )"		6302920	0					
ANR	6302945	Callee	vsetc		6302920	0					
ANR	6302946	Identifier	vsetc		6302920	0					
ANR	6302947	ArgumentList	& type		6302920	1					
ANR	6302948	Argument	& type		6302920	0					
ANR	6302949	UnaryOperationExpression	& type		6302920	0					
ANR	6302950	UnaryOperator	&		6302920	0					
ANR	6302951	Identifier	type		6302920	1					
ANR	6302952	Argument	VT_CONST		6302920	1					
ANR	6302953	Identifier	VT_CONST		6302920	0					
ANR	6302954	Argument	& tokc		6302920	2					
ANR	6302955	UnaryOperationExpression	& tokc		6302920	0					
ANR	6302956	UnaryOperator	&		6302920	0					
ANR	6302957	Identifier	tokc		6302920	1					
ANR	6302958	ReturnType	static void		6302920	1					
ANR	6302959	Identifier	vpush_tokc		6302920	2					
ANR	6302960	ParameterList	int t		6302920	3					
ANR	6302961	Parameter	int t	1824:23:43122:43126	6302920	0	True				
ANR	6302962	ParameterType	int		6302920	0					
ANR	6302963	Identifier	t		6302920	1					
ANR	6302964	CFGEntryNode	ENTRY		6302920		True				
ANR	6302965	CFGExitNode	EXIT		6302920		True				
ANR	6302966	Symbol	VT_CONST		6302920						
ANR	6302967	Symbol	NULL		6302920						
ANR	6302968	Symbol	t		6302920						
ANR	6302969	Symbol	& type		6302920						
ANR	6302970	Symbol	type . ref		6302920						
ANR	6302971	Symbol	type . t		6302920						
ANR	6302972	Symbol	type		6302920						
ANR	6302973	Symbol	& tokc		6302920						
ANR	6302974	Function	unary	1831:0:43219:50683							
ANR	6302975	FunctionDef	unary ()		6302974	0					
ANR	6302976	CompoundStatement		1831:25:43244:50683	6302974	0					
ANR	6302977	IdentifierDeclStatement	"int n , t , align , size , r , sizeof_caller ;"	1832:1:43247:43286	6302974	0	True				
ANR	6302978	IdentifierDecl	n		6302974	0					
ANR	6302979	IdentifierDeclType	int		6302974	0					
ANR	6302980	Identifier	n		6302974	1					
ANR	6302981	IdentifierDecl	t		6302974	1					
ANR	6302982	IdentifierDeclType	int		6302974	0					
ANR	6302983	Identifier	t		6302974	1					
ANR	6302984	IdentifierDecl	align		6302974	2					
ANR	6302985	IdentifierDeclType	int		6302974	0					
ANR	6302986	Identifier	align		6302974	1					
ANR	6302987	IdentifierDecl	size		6302974	3					
ANR	6302988	IdentifierDeclType	int		6302974	0					
ANR	6302989	Identifier	size		6302974	1					
ANR	6302990	IdentifierDecl	r		6302974	4					
ANR	6302991	IdentifierDeclType	int		6302974	0					
ANR	6302992	Identifier	r		6302974	1					
ANR	6302993	IdentifierDecl	sizeof_caller		6302974	5					
ANR	6302994	IdentifierDeclType	int		6302974	0					
ANR	6302995	Identifier	sizeof_caller		6302974	1					
ANR	6302996	IdentifierDeclStatement	CType type = { 0 } ;	1833:1:43289:43307	6302974	1	True				
ANR	6302997	IdentifierDecl	type = { 0 }		6302974	0					
ANR	6302998	IdentifierDeclType	CType		6302974	0					
ANR	6302999	Identifier	type		6302974	1					
ANR	6303000	AssignmentExpression	type = { 0 }		6302974	2		=			
ANR	6303001	Identifier	type		6302974	0					
ANR	6303002	InitializerList	0		6302974	1					
ANR	6303003	PrimaryExpression	0		6302974	0					
ANR	6303004	IdentifierDeclStatement	Sym * s ;	1834:1:43310:43316	6302974	2	True				
ANR	6303005	IdentifierDecl	* s		6302974	0					
ANR	6303006	IdentifierDeclType	Sym *		6302974	0					
ANR	6303007	Identifier	s		6302974	1					
ANR	6303008	IdentifierDeclStatement	AttributeDef ad ;	1835:1:43319:43334	6302974	3	True				
ANR	6303009	IdentifierDecl	ad		6302974	0					
ANR	6303010	IdentifierDeclType	AttributeDef		6302974	0					
ANR	6303011	Identifier	ad		6302974	1					
ANR	6303012	Statement	static	1836:1:43337:43342	6302974	4	True				
ANR	6303013	IdentifierDeclStatement	int in_sizeof = 0 ;	1836:8:43344:43361	6302974	5	True				
ANR	6303014	IdentifierDecl	in_sizeof = 0		6302974	0					
ANR	6303015	IdentifierDeclType	int		6302974	0					
ANR	6303016	Identifier	in_sizeof		6302974	1					
ANR	6303017	AssignmentExpression	in_sizeof = 0		6302974	2		=			
ANR	6303018	Identifier	in_sizeof		6302974	0					
ANR	6303019	PrimaryExpression	0		6302974	1					
ANR	6303020	ExpressionStatement	sizeof_caller = in_sizeof	1838:1:43365:43390	6302974	6	True				
ANR	6303021	AssignmentExpression	sizeof_caller = in_sizeof		6302974	0		=			
ANR	6303022	Identifier	sizeof_caller		6302974	0					
ANR	6303023	Identifier	in_sizeof		6302974	1					
ANR	6303024	ExpressionStatement	in_sizeof = 0	1839:1:43393:43406	6302974	7	True				
ANR	6303025	AssignmentExpression	in_sizeof = 0		6302974	0		=			
ANR	6303026	Identifier	in_sizeof		6302974	0					
ANR	6303027	PrimaryExpression	0		6302974	1					
ANR	6303028	Label	tok_next :	1842:0:43495:43503	6302974	8	True				
ANR	6303029	Identifier	tok_next		6302974	0					
ANR	6303030	SwitchStatement	switch ( tok )		6302974	9					
ANR	6303031	Condition	tok	1843:9:43514:43516	6302974	0	True				
ANR	6303032	Identifier	tok		6302974	0					
ANR	6303033	CompoundStatement		13:14:274:274	6302974	1					
ANR	6303034	Label	case TOK_EXTENSION :	1844:1:43522:43540	6302974	0	True				
ANR	6303035	Identifier	TOK_EXTENSION		6302974	0					
ANR	6303036	ExpressionStatement	next ( )	1845:2:43544:43551	6302974	1	True				
ANR	6303037	CallExpression	next ( )		6302974	0					
ANR	6303038	Callee	next		6302974	0					
ANR	6303039	Identifier	next		6302974	0					
ANR	6303040	ArgumentList			6302974	1					
ANR	6303041	GotoStatement	goto tok_next ;	1846:2:43555:43568	6302974	2	True				
ANR	6303042	Identifier	tok_next		6302974	0					
ANR	6303043	Label	case TOK_CINT :	1847:1:43571:43584	6302974	3	True				
ANR	6303044	Identifier	TOK_CINT		6302974	0					
ANR	6303045	Label	case TOK_CCHAR :	1848:1:43587:43601	6302974	4	True				
ANR	6303046	Identifier	TOK_CCHAR		6302974	0					
ANR	6303047	Label	case TOK_LCHAR :	1849:1:43604:43618	6302974	5	True				
ANR	6303048	Identifier	TOK_LCHAR		6302974	0					
ANR	6303049	ExpressionStatement	vpushi ( tokc . i )	1850:2:43622:43637	6302974	6	True				
ANR	6303050	CallExpression	vpushi ( tokc . i )		6302974	0					
ANR	6303051	Callee	vpushi		6302974	0					
ANR	6303052	Identifier	vpushi		6302974	0					
ANR	6303053	ArgumentList	tokc . i		6302974	1					
ANR	6303054	Argument	tokc . i		6302974	0					
ANR	6303055	MemberAccess	tokc . i		6302974	0					
ANR	6303056	Identifier	tokc		6302974	0					
ANR	6303057	Identifier	i		6302974	1					
ANR	6303058	ExpressionStatement	next ( )	1851:2:43641:43648	6302974	7	True				
ANR	6303059	CallExpression	next ( )		6302974	0					
ANR	6303060	Callee	next		6302974	0					
ANR	6303061	Identifier	next		6302974	0					
ANR	6303062	ArgumentList			6302974	1					
ANR	6303063	BreakStatement	break ;	1852:2:43652:43657	6302974	8	True				
ANR	6303064	Label	case TOK_CUINT :	1853:1:43660:43674	6302974	9	True				
ANR	6303065	Identifier	TOK_CUINT		6302974	0					
ANR	6303066	ExpressionStatement	vpush_tokc ( VT_INT32 | VT_UNSIGNED )	1854:2:43678:43713	6302974	10	True				
ANR	6303067	CallExpression	vpush_tokc ( VT_INT32 | VT_UNSIGNED )		6302974	0					
ANR	6303068	Callee	vpush_tokc		6302974	0					
ANR	6303069	Identifier	vpush_tokc		6302974	0					
ANR	6303070	ArgumentList	VT_INT32 | VT_UNSIGNED		6302974	1					
ANR	6303071	Argument	VT_INT32 | VT_UNSIGNED		6302974	0					
ANR	6303072	InclusiveOrExpression	VT_INT32 | VT_UNSIGNED		6302974	0		|			
ANR	6303073	Identifier	VT_INT32		6302974	0					
ANR	6303074	Identifier	VT_UNSIGNED		6302974	1					
ANR	6303075	ExpressionStatement	next ( )	1855:2:43717:43724	6302974	11	True				
ANR	6303076	CallExpression	next ( )		6302974	0					
ANR	6303077	Callee	next		6302974	0					
ANR	6303078	Identifier	next		6302974	0					
ANR	6303079	ArgumentList			6302974	1					
ANR	6303080	BreakStatement	break ;	1856:2:43728:43733	6302974	12	True				
ANR	6303081	Label	case TOK_CLLONG :	1857:1:43736:43751	6302974	13	True				
ANR	6303082	Identifier	TOK_CLLONG		6302974	0					
ANR	6303083	ExpressionStatement	vpush_tokc ( VT_INT64 )	1858:2:43755:43776	6302974	14	True				
ANR	6303084	CallExpression	vpush_tokc ( VT_INT64 )		6302974	0					
ANR	6303085	Callee	vpush_tokc		6302974	0					
ANR	6303086	Identifier	vpush_tokc		6302974	0					
ANR	6303087	ArgumentList	VT_INT64		6302974	1					
ANR	6303088	Argument	VT_INT64		6302974	0					
ANR	6303089	Identifier	VT_INT64		6302974	0					
ANR	6303090	ExpressionStatement	next ( )	1859:2:43780:43787	6302974	15	True				
ANR	6303091	CallExpression	next ( )		6302974	0					
ANR	6303092	Callee	next		6302974	0					
ANR	6303093	Identifier	next		6302974	0					
ANR	6303094	ArgumentList			6302974	1					
ANR	6303095	BreakStatement	break ;	1860:2:43791:43796	6302974	16	True				
ANR	6303096	Label	case TOK_CULLONG :	1861:1:43799:43815	6302974	17	True				
ANR	6303097	Identifier	TOK_CULLONG		6302974	0					
ANR	6303098	ExpressionStatement	vpush_tokc ( VT_INT64 | VT_UNSIGNED )	1862:2:43819:43854	6302974	18	True				
ANR	6303099	CallExpression	vpush_tokc ( VT_INT64 | VT_UNSIGNED )		6302974	0					
ANR	6303100	Callee	vpush_tokc		6302974	0					
ANR	6303101	Identifier	vpush_tokc		6302974	0					
ANR	6303102	ArgumentList	VT_INT64 | VT_UNSIGNED		6302974	1					
ANR	6303103	Argument	VT_INT64 | VT_UNSIGNED		6302974	0					
ANR	6303104	InclusiveOrExpression	VT_INT64 | VT_UNSIGNED		6302974	0		|			
ANR	6303105	Identifier	VT_INT64		6302974	0					
ANR	6303106	Identifier	VT_UNSIGNED		6302974	1					
ANR	6303107	ExpressionStatement	next ( )	1863:2:43858:43865	6302974	19	True				
ANR	6303108	CallExpression	next ( )		6302974	0					
ANR	6303109	Callee	next		6302974	0					
ANR	6303110	Identifier	next		6302974	0					
ANR	6303111	ArgumentList			6302974	1					
ANR	6303112	BreakStatement	break ;	1864:2:43869:43874	6302974	20	True				
ANR	6303113	Label	case TOK_CFLOAT :	1865:1:43877:43892	6302974	21	True				
ANR	6303114	Identifier	TOK_CFLOAT		6302974	0					
ANR	6303115	ExpressionStatement	vpush_tokc ( VT_FLOAT )	1866:2:43896:43917	6302974	22	True				
ANR	6303116	CallExpression	vpush_tokc ( VT_FLOAT )		6302974	0					
ANR	6303117	Callee	vpush_tokc		6302974	0					
ANR	6303118	Identifier	vpush_tokc		6302974	0					
ANR	6303119	ArgumentList	VT_FLOAT		6302974	1					
ANR	6303120	Argument	VT_FLOAT		6302974	0					
ANR	6303121	Identifier	VT_FLOAT		6302974	0					
ANR	6303122	ExpressionStatement	next ( )	1867:2:43921:43928	6302974	23	True				
ANR	6303123	CallExpression	next ( )		6302974	0					
ANR	6303124	Callee	next		6302974	0					
ANR	6303125	Identifier	next		6302974	0					
ANR	6303126	ArgumentList			6302974	1					
ANR	6303127	BreakStatement	break ;	1868:2:43932:43937	6302974	24	True				
ANR	6303128	Label	case TOK_CDOUBLE :	1869:1:43940:43956	6302974	25	True				
ANR	6303129	Identifier	TOK_CDOUBLE		6302974	0					
ANR	6303130	ExpressionStatement	vpush_tokc ( VT_DOUBLE )	1870:2:43960:43982	6302974	26	True				
ANR	6303131	CallExpression	vpush_tokc ( VT_DOUBLE )		6302974	0					
ANR	6303132	Callee	vpush_tokc		6302974	0					
ANR	6303133	Identifier	vpush_tokc		6302974	0					
ANR	6303134	ArgumentList	VT_DOUBLE		6302974	1					
ANR	6303135	Argument	VT_DOUBLE		6302974	0					
ANR	6303136	Identifier	VT_DOUBLE		6302974	0					
ANR	6303137	ExpressionStatement	next ( )	1871:2:43986:43993	6302974	27	True				
ANR	6303138	CallExpression	next ( )		6302974	0					
ANR	6303139	Callee	next		6302974	0					
ANR	6303140	Identifier	next		6302974	0					
ANR	6303141	ArgumentList			6302974	1					
ANR	6303142	BreakStatement	break ;	1872:2:43997:44002	6302974	28	True				
ANR	6303143	Label	case TOK_CLDOUBLE :	1873:1:44005:44022	6302974	29	True				
ANR	6303144	Identifier	TOK_CLDOUBLE		6302974	0					
ANR	6303145	ExpressionStatement	vpush_tokc ( VT_LDOUBLE )	1874:2:44026:44049	6302974	30	True				
ANR	6303146	CallExpression	vpush_tokc ( VT_LDOUBLE )		6302974	0					
ANR	6303147	Callee	vpush_tokc		6302974	0					
ANR	6303148	Identifier	vpush_tokc		6302974	0					
ANR	6303149	ArgumentList	VT_LDOUBLE		6302974	1					
ANR	6303150	Argument	VT_LDOUBLE		6302974	0					
ANR	6303151	Identifier	VT_LDOUBLE		6302974	0					
ANR	6303152	ExpressionStatement	next ( )	1875:2:44053:44060	6302974	31	True				
ANR	6303153	CallExpression	next ( )		6302974	0					
ANR	6303154	Callee	next		6302974	0					
ANR	6303155	Identifier	next		6302974	0					
ANR	6303156	ArgumentList			6302974	1					
ANR	6303157	BreakStatement	break ;	1876:2:44064:44069	6302974	32	True				
ANR	6303158	Label	case TOK___FUNCTION__ :	1877:1:44072:44093	6302974	33	True				
ANR	6303159	Identifier	TOK___FUNCTION__		6302974	0					
ANR	6303160	IfStatement	if ( ! gnu_ext )		6302974	34					
ANR	6303161	Condition	! gnu_ext	1878:6:44101:44108	6302974	0	True				
ANR	6303162	UnaryOperationExpression	! gnu_ext		6302974	0					
ANR	6303163	UnaryOperator	!		6302974	0					
ANR	6303164	Identifier	gnu_ext		6302974	1					
ANR	6303165	CompoundStatement		48:16:866:866	6302974	1					
ANR	6303166	GotoStatement	goto tok_identifier ;	1879:3:44116:44135	6302974	0	True				
ANR	6303167	Identifier	tok_identifier		6302974	0					
ANR	6303168	Label	case TOK___FUNC__ :	1882:1:44159:44176	6302974	35	True				
ANR	6303169	Identifier	TOK___FUNC__		6302974	0					
ANR	6303170	CompoundStatement		55:2:961:968	6302974	36					
ANR	6303171	IdentifierDeclStatement	int len ;	1885:2:44206:44213	6302974	0	True				
ANR	6303172	IdentifierDecl	len		6302974	0					
ANR	6303173	IdentifierDeclType	int		6302974	0					
ANR	6303174	Identifier	len		6302974	1					
ANR	6303175	ExpressionStatement	len = strlen ( funcname ) + 1	1887:2:44258:44285	6302974	1	True				
ANR	6303176	AssignmentExpression	len = strlen ( funcname ) + 1		6302974	0		=			
ANR	6303177	Identifier	len		6302974	0					
ANR	6303178	AdditiveExpression	strlen ( funcname ) + 1		6302974	1		+			
ANR	6303179	CallExpression	strlen ( funcname )		6302974	0					
ANR	6303180	Callee	strlen		6302974	0					
ANR	6303181	Identifier	strlen		6302974	0					
ANR	6303182	ArgumentList	funcname		6302974	1					
ANR	6303183	Argument	funcname		6302974	0					
ANR	6303184	Identifier	funcname		6302974	0					
ANR	6303185	PrimaryExpression	1		6302974	1					
ANR	6303186	ExpressionStatement	type . t = VT_INT8	1889:2:44321:44337	6302974	2	True				
ANR	6303187	AssignmentExpression	type . t = VT_INT8		6302974	0		=			
ANR	6303188	MemberAccess	type . t		6302974	0					
ANR	6303189	Identifier	type		6302974	0					
ANR	6303190	Identifier	t		6302974	1					
ANR	6303191	Identifier	VT_INT8		6302974	1					
ANR	6303192	ExpressionStatement	mk_pointer ( & type )	1890:2:44341:44359	6302974	3	True				
ANR	6303193	CallExpression	mk_pointer ( & type )		6302974	0					
ANR	6303194	Callee	mk_pointer		6302974	0					
ANR	6303195	Identifier	mk_pointer		6302974	0					
ANR	6303196	ArgumentList	& type		6302974	1					
ANR	6303197	Argument	& type		6302974	0					
ANR	6303198	UnaryOperationExpression	& type		6302974	0					
ANR	6303199	UnaryOperator	&		6302974	0					
ANR	6303200	Identifier	type		6302974	1					
ANR	6303201	ExpressionStatement	type . t |= VT_ARRAY	1891:2:44363:44381	6302974	4	True				
ANR	6303202	AssignmentExpression	type . t |= VT_ARRAY		6302974	0		|=			
ANR	6303203	MemberAccess	type . t		6302974	0					
ANR	6303204	Identifier	type		6302974	0					
ANR	6303205	Identifier	t		6302974	1					
ANR	6303206	Identifier	VT_ARRAY		6302974	1					
ANR	6303207	ExpressionStatement	type . ref -> c = len	1892:2:44385:44402	6302974	5	True				
ANR	6303208	AssignmentExpression	type . ref -> c = len		6302974	0		=			
ANR	6303209	PtrMemberAccess	type . ref -> c		6302974	0					
ANR	6303210	MemberAccess	type . ref		6302974	0					
ANR	6303211	Identifier	type		6302974	0					
ANR	6303212	Identifier	ref		6302974	1					
ANR	6303213	Identifier	c		6302974	1					
ANR	6303214	Identifier	len		6302974	1					
ANR	6303215	ExpressionStatement	next ( )	1895:2:44469:44476	6302974	6	True				
ANR	6303216	CallExpression	next ( )		6302974	0					
ANR	6303217	Callee	next		6302974	0					
ANR	6303218	Identifier	next		6302974	0					
ANR	6303219	ArgumentList			6302974	1					
ANR	6303220	BreakStatement	break ;	1897:1:44482:44487	6302974	37	True				
ANR	6303221	Label	case TOK_LSTR :	1898:1:44490:44503	6302974	38	True				
ANR	6303222	Identifier	TOK_LSTR		6302974	0					
ANR	6303223	IfStatement	"if ( ! strncmp ( tcc_state -> os , ""windows"" , 7 ) )"		6302974	39					
ANR	6303224	Condition	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"	1899:6:44511:44548	6302974	0	True				
ANR	6303225	UnaryOperationExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	0					
ANR	6303226	UnaryOperator	!		6302974	0					
ANR	6303227	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1					
ANR	6303228	Callee	strncmp		6302974	0					
ANR	6303229	Identifier	strncmp		6302974	0					
ANR	6303230	ArgumentList	tcc_state -> os		6302974	1					
ANR	6303231	Argument	tcc_state -> os		6302974	0					
ANR	6303232	PtrMemberAccess	tcc_state -> os		6302974	0					
ANR	6303233	Identifier	tcc_state		6302974	0					
ANR	6303234	Identifier	os		6302974	1					
ANR	6303235	Argument	"""windows"""		6302974	1					
ANR	6303236	PrimaryExpression	"""windows"""		6302974	0					
ANR	6303237	Argument	7		6302974	2					
ANR	6303238	PrimaryExpression	7		6302974	0					
ANR	6303239	CompoundStatement		69:46:1306:1306	6302974	1					
ANR	6303240	ExpressionStatement	t = VT_INT16 | VT_UNSIGNED	1900:3:44556:44582	6302974	0	True				
ANR	6303241	AssignmentExpression	t = VT_INT16 | VT_UNSIGNED		6302974	0		=			
ANR	6303242	Identifier	t		6302974	0					
ANR	6303243	InclusiveOrExpression	VT_INT16 | VT_UNSIGNED		6302974	1		|			
ANR	6303244	Identifier	VT_INT16		6302974	0					
ANR	6303245	Identifier	VT_UNSIGNED		6302974	1					
ANR	6303246	ElseStatement	else		6302974	0					
ANR	6303247	CompoundStatement		71:9:1348:1348	6302974	0					
ANR	6303248	ExpressionStatement	t = VT_INT32	1902:3:44598:44610	6302974	0	True				
ANR	6303249	AssignmentExpression	t = VT_INT32		6302974	0		=			
ANR	6303250	Identifier	t		6302974	0					
ANR	6303251	Identifier	VT_INT32		6302974	1					
ANR	6303252	GotoStatement	goto str_init ;	1904:2:44618:44631	6302974	40	True				
ANR	6303253	Identifier	str_init		6302974	0					
ANR	6303254	Label	case TOK_STR :	1905:1:44634:44646	6302974	41	True				
ANR	6303255	Identifier	TOK_STR		6302974	0					
ANR	6303256	ExpressionStatement	t = VT_INT8	1907:2:44673:44684	6302974	42	True				
ANR	6303257	AssignmentExpression	t = VT_INT8		6302974	0		=			
ANR	6303258	Identifier	t		6302974	0					
ANR	6303259	Identifier	VT_INT8		6302974	1					
ANR	6303260	Label	str_init :	1908:0:44686:44694	6302974	43	True				
ANR	6303261	Identifier	str_init		6302974	0					
ANR	6303262	IfStatement	if ( tcc_state -> warn_write_strings )		6302974	44					
ANR	6303263	Condition	tcc_state -> warn_write_strings	1909:6:44702:44730	6302974	0	True				
ANR	6303264	PtrMemberAccess	tcc_state -> warn_write_strings		6302974	0					
ANR	6303265	Identifier	tcc_state		6302974	0					
ANR	6303266	Identifier	warn_write_strings		6302974	1					
ANR	6303267	CompoundStatement		79:37:1488:1488	6302974	1					
ANR	6303268	ExpressionStatement	t |= VT_CONSTANT	1910:3:44738:44754	6302974	0	True				
ANR	6303269	AssignmentExpression	t |= VT_CONSTANT		6302974	0		|=			
ANR	6303270	Identifier	t		6302974	0					
ANR	6303271	Identifier	VT_CONSTANT		6302974	1					
ANR	6303272	ExpressionStatement	type . t = t	1912:2:44762:44772	6302974	45	True				
ANR	6303273	AssignmentExpression	type . t = t		6302974	0		=			
ANR	6303274	MemberAccess	type . t		6302974	0					
ANR	6303275	Identifier	type		6302974	0					
ANR	6303276	Identifier	t		6302974	1					
ANR	6303277	Identifier	t		6302974	1					
ANR	6303278	ExpressionStatement	mk_pointer ( & type )	1913:2:44776:44794	6302974	46	True				
ANR	6303279	CallExpression	mk_pointer ( & type )		6302974	0					
ANR	6303280	Callee	mk_pointer		6302974	0					
ANR	6303281	Identifier	mk_pointer		6302974	0					
ANR	6303282	ArgumentList	& type		6302974	1					
ANR	6303283	Argument	& type		6302974	0					
ANR	6303284	UnaryOperationExpression	& type		6302974	0					
ANR	6303285	UnaryOperator	&		6302974	0					
ANR	6303286	Identifier	type		6302974	1					
ANR	6303287	ExpressionStatement	type . t |= VT_ARRAY	1914:2:44798:44816	6302974	47	True				
ANR	6303288	AssignmentExpression	type . t |= VT_ARRAY		6302974	0		|=			
ANR	6303289	MemberAccess	type . t		6302974	0					
ANR	6303290	Identifier	type		6302974	0					
ANR	6303291	Identifier	t		6302974	1					
ANR	6303292	Identifier	VT_ARRAY		6302974	1					
ANR	6303293	ExpressionStatement	"memset ( & ad , 0 , sizeof ( AttributeDef ) )"	1915:2:44820:44857	6302974	48	True				
ANR	6303294	CallExpression	"memset ( & ad , 0 , sizeof ( AttributeDef ) )"		6302974	0					
ANR	6303295	Callee	memset		6302974	0					
ANR	6303296	Identifier	memset		6302974	0					
ANR	6303297	ArgumentList	& ad		6302974	1					
ANR	6303298	Argument	& ad		6302974	0					
ANR	6303299	UnaryOperationExpression	& ad		6302974	0					
ANR	6303300	UnaryOperator	&		6302974	0					
ANR	6303301	Identifier	ad		6302974	1					
ANR	6303302	Argument	0		6302974	1					
ANR	6303303	PrimaryExpression	0		6302974	0					
ANR	6303304	Argument	sizeof ( AttributeDef )		6302974	2					
ANR	6303305	SizeofExpression	sizeof ( AttributeDef )		6302974	0					
ANR	6303306	Sizeof	sizeof		6302974	0					
ANR	6303307	SizeofOperand	AttributeDef		6302974	1					
ANR	6303308	ExpressionStatement	"decl_initializer_alloc ( & type , & ad , VT_CONST , 2 , 0 , NULL , 0 )"	1916:2:44861:44921	6302974	49	True				
ANR	6303309	CallExpression	"decl_initializer_alloc ( & type , & ad , VT_CONST , 2 , 0 , NULL , 0 )"		6302974	0					
ANR	6303310	Callee	decl_initializer_alloc		6302974	0					
ANR	6303311	Identifier	decl_initializer_alloc		6302974	0					
ANR	6303312	ArgumentList	& type		6302974	1					
ANR	6303313	Argument	& type		6302974	0					
ANR	6303314	UnaryOperationExpression	& type		6302974	0					
ANR	6303315	UnaryOperator	&		6302974	0					
ANR	6303316	Identifier	type		6302974	1					
ANR	6303317	Argument	& ad		6302974	1					
ANR	6303318	UnaryOperationExpression	& ad		6302974	0					
ANR	6303319	UnaryOperator	&		6302974	0					
ANR	6303320	Identifier	ad		6302974	1					
ANR	6303321	Argument	VT_CONST		6302974	2					
ANR	6303322	Identifier	VT_CONST		6302974	0					
ANR	6303323	Argument	2		6302974	3					
ANR	6303324	PrimaryExpression	2		6302974	0					
ANR	6303325	Argument	0		6302974	4					
ANR	6303326	PrimaryExpression	0		6302974	0					
ANR	6303327	Argument	NULL		6302974	5					
ANR	6303328	Identifier	NULL		6302974	0					
ANR	6303329	Argument	0		6302974	6					
ANR	6303330	PrimaryExpression	0		6302974	0					
ANR	6303331	BreakStatement	break ;	1917:2:44925:44930	6302974	50	True				
ANR	6303332	Label	case '(' :	1918:1:44933:44941	6302974	51	True				
ANR	6303333	ExpressionStatement	next ( )	1919:2:44945:44952	6302974	52	True				
ANR	6303334	CallExpression	next ( )		6302974	0					
ANR	6303335	Callee	next		6302974	0					
ANR	6303336	Identifier	next		6302974	0					
ANR	6303337	ArgumentList			6302974	1					
ANR	6303338	IfStatement	"if ( parse_btype ( & type , & ad ) )"		6302974	53					
ANR	6303339	Condition	"parse_btype ( & type , & ad )"	1921:6:44975:44998	6302974	0	True				
ANR	6303340	CallExpression	"parse_btype ( & type , & ad )"		6302974	0					
ANR	6303341	Callee	parse_btype		6302974	0					
ANR	6303342	Identifier	parse_btype		6302974	0					
ANR	6303343	ArgumentList	& type		6302974	1					
ANR	6303344	Argument	& type		6302974	0					
ANR	6303345	UnaryOperationExpression	& type		6302974	0					
ANR	6303346	UnaryOperator	&		6302974	0					
ANR	6303347	Identifier	type		6302974	1					
ANR	6303348	Argument	& ad		6302974	1					
ANR	6303349	UnaryOperationExpression	& ad		6302974	0					
ANR	6303350	UnaryOperator	&		6302974	0					
ANR	6303351	Identifier	ad		6302974	1					
ANR	6303352	CompoundStatement		91:32:1756:1756	6302974	1					
ANR	6303353	ExpressionStatement	"type_decl ( & type , & ad , & n , TYPE_ABSTRACT )"	1922:3:45006:45047	6302974	0	True				
ANR	6303354	CallExpression	"type_decl ( & type , & ad , & n , TYPE_ABSTRACT )"		6302974	0					
ANR	6303355	Callee	type_decl		6302974	0					
ANR	6303356	Identifier	type_decl		6302974	0					
ANR	6303357	ArgumentList	& type		6302974	1					
ANR	6303358	Argument	& type		6302974	0					
ANR	6303359	UnaryOperationExpression	& type		6302974	0					
ANR	6303360	UnaryOperator	&		6302974	0					
ANR	6303361	Identifier	type		6302974	1					
ANR	6303362	Argument	& ad		6302974	1					
ANR	6303363	UnaryOperationExpression	& ad		6302974	0					
ANR	6303364	UnaryOperator	&		6302974	0					
ANR	6303365	Identifier	ad		6302974	1					
ANR	6303366	Argument	& n		6302974	2					
ANR	6303367	UnaryOperationExpression	& n		6302974	0					
ANR	6303368	UnaryOperator	&		6302974	0					
ANR	6303369	Identifier	n		6302974	1					
ANR	6303370	Argument	TYPE_ABSTRACT		6302974	3					
ANR	6303371	Identifier	TYPE_ABSTRACT		6302974	0					
ANR	6303372	ExpressionStatement	skip ( ')' )	1923:3:45052:45062	6302974	1	True				
ANR	6303373	CallExpression	skip ( ')' )		6302974	0					
ANR	6303374	Callee	skip		6302974	0					
ANR	6303375	Identifier	skip		6302974	0					
ANR	6303376	ArgumentList	')'		6302974	1					
ANR	6303377	Argument	')'		6302974	0					
ANR	6303378	PrimaryExpression	')'		6302974	0					
ANR	6303379	IfStatement	if ( tok == '{' )		6302974	2					
ANR	6303380	Condition	tok == '{'	1925:7:45110:45119	6302974	0	True				
ANR	6303381	EqualityExpression	tok == '{'		6302974	0		==			
ANR	6303382	Identifier	tok		6302974	0					
ANR	6303383	PrimaryExpression	'{'		6302974	1					
ANR	6303384	CompoundStatement		95:19:1877:1877	6302974	1					
ANR	6303385	IfStatement	if ( global_expr )		6302974	0					
ANR	6303386	Condition	global_expr	1927:8:45179:45189	6302974	0	True				
ANR	6303387	Identifier	global_expr		6302974	0					
ANR	6303388	CompoundStatement		97:21:1947:1947	6302974	1					
ANR	6303389	ExpressionStatement	r = VT_CONST	1928:5:45199:45211	6302974	0	True				
ANR	6303390	AssignmentExpression	r = VT_CONST		6302974	0		=			
ANR	6303391	Identifier	r		6302974	0					
ANR	6303392	Identifier	VT_CONST		6302974	1					
ANR	6303393	ElseStatement	else		6302974	0					
ANR	6303394	CompoundStatement		99:11:1979:1979	6302974	0					
ANR	6303395	ExpressionStatement	r = VT_LOCAL	1930:5:45231:45243	6302974	0	True				
ANR	6303396	AssignmentExpression	r = VT_LOCAL		6302974	0		=			
ANR	6303397	Identifier	r		6302974	0					
ANR	6303398	Identifier	VT_LOCAL		6302974	1					
ANR	6303399	IfStatement	if ( ! ( type . t & VT_ARRAY ) )		6302974	1					
ANR	6303400	Condition	! ( type . t & VT_ARRAY )	1933:8:45299:45318	6302974	0	True				
ANR	6303401	UnaryOperationExpression	! ( type . t & VT_ARRAY )		6302974	0					
ANR	6303402	UnaryOperator	!		6302974	0					
ANR	6303403	BitAndExpression	type . t & VT_ARRAY		6302974	1		&			
ANR	6303404	MemberAccess	type . t		6302974	0					
ANR	6303405	Identifier	type		6302974	0					
ANR	6303406	Identifier	t		6302974	1					
ANR	6303407	Identifier	VT_ARRAY		6302974	1					
ANR	6303408	CompoundStatement		103:30:2076:2076	6302974	1					
ANR	6303409	ExpressionStatement	r |= lvalue_type ( type . t )	1934:5:45328:45353	6302974	0	True				
ANR	6303410	AssignmentExpression	r |= lvalue_type ( type . t )		6302974	0		|=			
ANR	6303411	Identifier	r		6302974	0					
ANR	6303412	CallExpression	lvalue_type ( type . t )		6302974	1					
ANR	6303413	Callee	lvalue_type		6302974	0					
ANR	6303414	Identifier	lvalue_type		6302974	0					
ANR	6303415	ArgumentList	type . t		6302974	1					
ANR	6303416	Argument	type . t		6302974	0					
ANR	6303417	MemberAccess	type . t		6302974	0					
ANR	6303418	Identifier	type		6302974	0					
ANR	6303419	Identifier	t		6302974	1					
ANR	6303420	ExpressionStatement	"memset ( & ad , 0 , sizeof ( AttributeDef ) )"	1936:4:45365:45402	6302974	2	True				
ANR	6303421	CallExpression	"memset ( & ad , 0 , sizeof ( AttributeDef ) )"		6302974	0					
ANR	6303422	Callee	memset		6302974	0					
ANR	6303423	Identifier	memset		6302974	0					
ANR	6303424	ArgumentList	& ad		6302974	1					
ANR	6303425	Argument	& ad		6302974	0					
ANR	6303426	UnaryOperationExpression	& ad		6302974	0					
ANR	6303427	UnaryOperator	&		6302974	0					
ANR	6303428	Identifier	ad		6302974	1					
ANR	6303429	Argument	0		6302974	1					
ANR	6303430	PrimaryExpression	0		6302974	0					
ANR	6303431	Argument	sizeof ( AttributeDef )		6302974	2					
ANR	6303432	SizeofExpression	sizeof ( AttributeDef )		6302974	0					
ANR	6303433	Sizeof	sizeof		6302974	0					
ANR	6303434	SizeofOperand	AttributeDef		6302974	1					
ANR	6303435	ExpressionStatement	"decl_initializer_alloc ( & type , & ad , r , 1 , 0 , NULL , 0 )"	1937:4:45408:45461	6302974	3	True				
ANR	6303436	CallExpression	"decl_initializer_alloc ( & type , & ad , r , 1 , 0 , NULL , 0 )"		6302974	0					
ANR	6303437	Callee	decl_initializer_alloc		6302974	0					
ANR	6303438	Identifier	decl_initializer_alloc		6302974	0					
ANR	6303439	ArgumentList	& type		6302974	1					
ANR	6303440	Argument	& type		6302974	0					
ANR	6303441	UnaryOperationExpression	& type		6302974	0					
ANR	6303442	UnaryOperator	&		6302974	0					
ANR	6303443	Identifier	type		6302974	1					
ANR	6303444	Argument	& ad		6302974	1					
ANR	6303445	UnaryOperationExpression	& ad		6302974	0					
ANR	6303446	UnaryOperator	&		6302974	0					
ANR	6303447	Identifier	ad		6302974	1					
ANR	6303448	Argument	r		6302974	2					
ANR	6303449	Identifier	r		6302974	0					
ANR	6303450	Argument	1		6302974	3					
ANR	6303451	PrimaryExpression	1		6302974	0					
ANR	6303452	Argument	0		6302974	4					
ANR	6303453	PrimaryExpression	0		6302974	0					
ANR	6303454	Argument	NULL		6302974	5					
ANR	6303455	Identifier	NULL		6302974	0					
ANR	6303456	Argument	0		6302974	6					
ANR	6303457	PrimaryExpression	0		6302974	0					
ANR	6303458	ElseStatement	else		6302974	0					
ANR	6303459	CompoundStatement		108:10:2228:2228	6302974	0					
ANR	6303460	IfStatement	if ( sizeof_caller )		6302974	0					
ANR	6303461	Condition	sizeof_caller	1939:8:45483:45495	6302974	0	True				
ANR	6303462	Identifier	sizeof_caller		6302974	0					
ANR	6303463	CompoundStatement		109:23:2253:2253	6302974	1					
ANR	6303464	ExpressionStatement	vpush ( & type )	1940:5:45505:45518	6302974	0	True				
ANR	6303465	CallExpression	vpush ( & type )		6302974	0					
ANR	6303466	Callee	vpush		6302974	0					
ANR	6303467	Identifier	vpush		6302974	0					
ANR	6303468	ArgumentList	& type		6302974	1					
ANR	6303469	Argument	& type		6302974	0					
ANR	6303470	UnaryOperationExpression	& type		6302974	0					
ANR	6303471	UnaryOperator	&		6302974	0					
ANR	6303472	Identifier	type		6302974	1					
ANR	6303473	ReturnStatement	return ;	1941:5:45525:45531	6302974	1	True				
ANR	6303474	ExpressionStatement	unary ( )	1943:4:45543:45551	6302974	1	True				
ANR	6303475	CallExpression	unary ( )		6302974	0					
ANR	6303476	Callee	unary		6302974	0					
ANR	6303477	Identifier	unary		6302974	0					
ANR	6303478	ArgumentList			6302974	1					
ANR	6303479	ElseStatement	else		6302974	0					
ANR	6303480	IfStatement	if ( tok == '{' )		6302974	0					
ANR	6303481	Condition	tok == '{'	1945:13:45571:45580	6302974	0	True				
ANR	6303482	EqualityExpression	tok == '{'		6302974	0		==			
ANR	6303483	Identifier	tok		6302974	0					
ANR	6303484	PrimaryExpression	'{'		6302974	1					
ANR	6303485	CompoundStatement		115:25:2338:2338	6302974	1					
ANR	6303486	ExpressionStatement	skip ( ')' )	1948:3:45677:45687	6302974	0	True				
ANR	6303487	CallExpression	skip ( ')' )		6302974	0					
ANR	6303488	Callee	skip		6302974	0					
ANR	6303489	Identifier	skip		6302974	0					
ANR	6303490	ArgumentList	')'		6302974	1					
ANR	6303491	Argument	')'		6302974	0					
ANR	6303492	PrimaryExpression	')'		6302974	0					
ANR	6303493	ElseStatement	else		6302974	0					
ANR	6303494	CompoundStatement		119:9:2453:2453	6302974	0					
ANR	6303495	ExpressionStatement	gexpr ( )	1950:3:45703:45711	6302974	0	True				
ANR	6303496	CallExpression	gexpr ( )		6302974	0					
ANR	6303497	Callee	gexpr		6302974	0					
ANR	6303498	Identifier	gexpr		6302974	0					
ANR	6303499	ArgumentList			6302974	1					
ANR	6303500	ExpressionStatement	skip ( ')' )	1951:3:45716:45726	6302974	1	True				
ANR	6303501	CallExpression	skip ( ')' )		6302974	0					
ANR	6303502	Callee	skip		6302974	0					
ANR	6303503	Identifier	skip		6302974	0					
ANR	6303504	ArgumentList	')'		6302974	1					
ANR	6303505	Argument	')'		6302974	0					
ANR	6303506	PrimaryExpression	')'		6302974	0					
ANR	6303507	BreakStatement	break ;	1953:2:45734:45739	6302974	54	True				
ANR	6303508	Label	case '*' :	1954:1:45742:45750	6302974	55	True				
ANR	6303509	ExpressionStatement	next ( )	1955:2:45754:45761	6302974	56	True				
ANR	6303510	CallExpression	next ( )		6302974	0					
ANR	6303511	Callee	next		6302974	0					
ANR	6303512	Identifier	next		6302974	0					
ANR	6303513	ArgumentList			6302974	1					
ANR	6303514	ExpressionStatement	unary ( )	1956:2:45765:45773	6302974	57	True				
ANR	6303515	CallExpression	unary ( )		6302974	0					
ANR	6303516	Callee	unary		6302974	0					
ANR	6303517	Identifier	unary		6302974	0					
ANR	6303518	ArgumentList			6302974	1					
ANR	6303519	ExpressionStatement	indir ( )	1957:2:45777:45785	6302974	58	True				
ANR	6303520	CallExpression	indir ( )		6302974	0					
ANR	6303521	Callee	indir		6302974	0					
ANR	6303522	Identifier	indir		6302974	0					
ANR	6303523	ArgumentList			6302974	1					
ANR	6303524	BreakStatement	break ;	1958:2:45789:45794	6302974	59	True				
ANR	6303525	Label	case '!' :	1959:1:45797:45805	6302974	60	True				
ANR	6303526	ExpressionStatement	next ( )	1960:2:45809:45816	6302974	61	True				
ANR	6303527	CallExpression	next ( )		6302974	0					
ANR	6303528	Callee	next		6302974	0					
ANR	6303529	Identifier	next		6302974	0					
ANR	6303530	ArgumentList			6302974	1					
ANR	6303531	ExpressionStatement	unary ( )	1961:2:45820:45828	6302974	62	True				
ANR	6303532	CallExpression	unary ( )		6302974	0					
ANR	6303533	Callee	unary		6302974	0					
ANR	6303534	Identifier	unary		6302974	0					
ANR	6303535	ArgumentList			6302974	1					
ANR	6303536	IfStatement	if ( ( vtop -> r & VT_VALMASK ) == VT_CMP )		6302974	63					
ANR	6303537	Condition	( vtop -> r & VT_VALMASK ) == VT_CMP	1962:6:45836:45867	6302974	0	True				
ANR	6303538	EqualityExpression	( vtop -> r & VT_VALMASK ) == VT_CMP		6302974	0		==			
ANR	6303539	BitAndExpression	vtop -> r & VT_VALMASK		6302974	0		&			
ANR	6303540	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6303541	Identifier	vtop		6302974	0					
ANR	6303542	Identifier	r		6302974	1					
ANR	6303543	Identifier	VT_VALMASK		6302974	1					
ANR	6303544	Identifier	VT_CMP		6302974	1					
ANR	6303545	CompoundStatement		132:40:2625:2625	6302974	1					
ANR	6303546	ExpressionStatement	vtop -> c . i = vtop -> c . i ^ 1	1963:3:45875:45900	6302974	0	True				
ANR	6303547	AssignmentExpression	vtop -> c . i = vtop -> c . i ^ 1		6302974	0		=			
ANR	6303548	MemberAccess	vtop -> c . i		6302974	0					
ANR	6303549	PtrMemberAccess	vtop -> c		6302974	0					
ANR	6303550	Identifier	vtop		6302974	0					
ANR	6303551	Identifier	c		6302974	1					
ANR	6303552	Identifier	i		6302974	1					
ANR	6303553	ExclusiveOrExpression	vtop -> c . i ^ 1		6302974	1		^			
ANR	6303554	MemberAccess	vtop -> c . i		6302974	0					
ANR	6303555	PtrMemberAccess	vtop -> c		6302974	0					
ANR	6303556	Identifier	vtop		6302974	0					
ANR	6303557	Identifier	c		6302974	1					
ANR	6303558	Identifier	i		6302974	1					
ANR	6303559	PrimaryExpression	1		6302974	1					
ANR	6303560	BreakStatement	break ;	1965:2:45908:45913	6302974	64	True				
ANR	6303561	Label	case TOK_SIZEOF :	1966:1:45916:45931	6302974	65	True				
ANR	6303562	Identifier	TOK_SIZEOF		6302974	0					
ANR	6303563	Label	case TOK_ALIGNOF1 :	1967:1:45934:45951	6302974	66	True				
ANR	6303564	Identifier	TOK_ALIGNOF1		6302974	0					
ANR	6303565	Label	case TOK_ALIGNOF2 :	1968:1:45954:45971	6302974	67	True				
ANR	6303566	Identifier	TOK_ALIGNOF2		6302974	0					
ANR	6303567	ExpressionStatement	t = tok	1969:2:45975:45982	6302974	68	True				
ANR	6303568	AssignmentExpression	t = tok		6302974	0		=			
ANR	6303569	Identifier	t		6302974	0					
ANR	6303570	Identifier	tok		6302974	1					
ANR	6303571	ExpressionStatement	next ( )	1970:2:45986:45993	6302974	69	True				
ANR	6303572	CallExpression	next ( )		6302974	0					
ANR	6303573	Callee	next		6302974	0					
ANR	6303574	Identifier	next		6302974	0					
ANR	6303575	ArgumentList			6302974	1					
ANR	6303576	ExpressionStatement	in_sizeof ++	1971:2:45997:46008	6302974	70	True				
ANR	6303577	PostIncDecOperationExpression	in_sizeof ++		6302974	0					
ANR	6303578	Identifier	in_sizeof		6302974	0					
ANR	6303579	IncDec	++		6302974	1					
ANR	6303580	ExpressionStatement	unary_type ( & type )	1972:2:46012:46030	6302974	71	True				
ANR	6303581	CallExpression	unary_type ( & type )		6302974	0					
ANR	6303582	Callee	unary_type		6302974	0					
ANR	6303583	Identifier	unary_type		6302974	0					
ANR	6303584	ArgumentList	& type		6302974	1					
ANR	6303585	Argument	& type		6302974	0					
ANR	6303586	UnaryOperationExpression	& type		6302974	0					
ANR	6303587	UnaryOperator	&		6302974	0					
ANR	6303588	Identifier	type		6302974	1					
ANR	6303589	ExpressionStatement	"size = type_size ( & type , & align )"	1973:2:46062:46094	6302974	72	True				
ANR	6303590	AssignmentExpression	"size = type_size ( & type , & align )"		6302974	0		=			
ANR	6303591	Identifier	size		6302974	0					
ANR	6303592	CallExpression	"type_size ( & type , & align )"		6302974	1					
ANR	6303593	Callee	type_size		6302974	0					
ANR	6303594	Identifier	type_size		6302974	0					
ANR	6303595	ArgumentList	& type		6302974	1					
ANR	6303596	Argument	& type		6302974	0					
ANR	6303597	UnaryOperationExpression	& type		6302974	0					
ANR	6303598	UnaryOperator	&		6302974	0					
ANR	6303599	Identifier	type		6302974	1					
ANR	6303600	Argument	& align		6302974	1					
ANR	6303601	UnaryOperationExpression	& align		6302974	0					
ANR	6303602	UnaryOperator	&		6302974	0					
ANR	6303603	Identifier	align		6302974	1					
ANR	6303604	IfStatement	if ( t == TOK_SIZEOF )		6302974	73					
ANR	6303605	Condition	t == TOK_SIZEOF	1974:6:46102:46116	6302974	0	True				
ANR	6303606	EqualityExpression	t == TOK_SIZEOF		6302974	0		==			
ANR	6303607	Identifier	t		6302974	0					
ANR	6303608	Identifier	TOK_SIZEOF		6302974	1					
ANR	6303609	CompoundStatement		144:23:2874:2874	6302974	1					
ANR	6303610	IfStatement	if ( ! ( type . t & VT_VLA ) )		6302974	0					
ANR	6303611	Condition	! ( type . t & VT_VLA )	1975:7:46128:46145	6302974	0	True				
ANR	6303612	UnaryOperationExpression	! ( type . t & VT_VLA )		6302974	0					
ANR	6303613	UnaryOperator	!		6302974	0					
ANR	6303614	BitAndExpression	type . t & VT_VLA		6302974	1		&			
ANR	6303615	MemberAccess	type . t		6302974	0					
ANR	6303616	Identifier	type		6302974	0					
ANR	6303617	Identifier	t		6302974	1					
ANR	6303618	Identifier	VT_VLA		6302974	1					
ANR	6303619	CompoundStatement		145:27:2903:2903	6302974	1					
ANR	6303620	IfStatement	if ( size < 0 )		6302974	0					
ANR	6303621	Condition	size < 0	1976:8:46158:46165	6302974	0	True				
ANR	6303622	RelationalExpression	size < 0		6302974	0		<			
ANR	6303623	Identifier	size		6302974	0					
ANR	6303624	PrimaryExpression	0		6302974	1					
ANR	6303625	CompoundStatement		146:18:2923:2923	6302974	1					
ANR	6303626	ExpressionStatement	"TCC_ERR ( ""sizeof applied to an incomplete type"" )"	1977:5:46175:46223	6302974	0	True				
ANR	6303627	CallExpression	"TCC_ERR ( ""sizeof applied to an incomplete type"" )"		6302974	0					
ANR	6303628	Callee	TCC_ERR		6302974	0					
ANR	6303629	Identifier	TCC_ERR		6302974	0					
ANR	6303630	ArgumentList	"""sizeof applied to an incomplete type"""		6302974	1					
ANR	6303631	Argument	"""sizeof applied to an incomplete type"""		6302974	0					
ANR	6303632	PrimaryExpression	"""sizeof applied to an incomplete type"""		6302974	0					
ANR	6303633	ExpressionStatement	vpushs ( size )	1979:4:46235:46248	6302974	1	True				
ANR	6303634	CallExpression	vpushs ( size )		6302974	0					
ANR	6303635	Callee	vpushs		6302974	0					
ANR	6303636	Identifier	vpushs		6302974	0					
ANR	6303637	ArgumentList	size		6302974	1					
ANR	6303638	Argument	size		6302974	0					
ANR	6303639	Identifier	size		6302974	0					
ANR	6303640	ElseStatement	else		6302974	0					
ANR	6303641	CompoundStatement		151:9:3019:3019	6302974	0					
ANR	6303642	ExpressionStatement	vpushs ( align )	1982:3:46269:46283	6302974	0	True				
ANR	6303643	CallExpression	vpushs ( align )		6302974	0					
ANR	6303644	Callee	vpushs		6302974	0					
ANR	6303645	Identifier	vpushs		6302974	0					
ANR	6303646	ArgumentList	align		6302974	1					
ANR	6303647	Argument	align		6302974	0					
ANR	6303648	Identifier	align		6302974	0					
ANR	6303649	ExpressionStatement	vtop -> type . t |= VT_UNSIGNED	1984:2:46291:46318	6302974	74	True				
ANR	6303650	AssignmentExpression	vtop -> type . t |= VT_UNSIGNED		6302974	0		|=			
ANR	6303651	MemberAccess	vtop -> type . t		6302974	0					
ANR	6303652	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6303653	Identifier	vtop		6302974	0					
ANR	6303654	Identifier	type		6302974	1					
ANR	6303655	Identifier	t		6302974	1					
ANR	6303656	Identifier	VT_UNSIGNED		6302974	1					
ANR	6303657	BreakStatement	break ;	1985:2:46322:46327	6302974	75	True				
ANR	6303658	Label	case TOK_builtin_types_compatible_p :	1987:1:46331:46366	6302974	76	True				
ANR	6303659	Identifier	TOK_builtin_types_compatible_p		6302974	0					
ANR	6303660	CompoundStatement		158:1:3124:3124	6302974	77					
ANR	6303661	ExpressionStatement	"STACK_NEW0 ( CType , type1 )"	1989:2:46373:46398	6302974	0	True				
ANR	6303662	CallExpression	"STACK_NEW0 ( CType , type1 )"		6302974	0					
ANR	6303663	Callee	STACK_NEW0		6302974	0					
ANR	6303664	Identifier	STACK_NEW0		6302974	0					
ANR	6303665	ArgumentList	CType		6302974	1					
ANR	6303666	Argument	CType		6302974	0					
ANR	6303667	Identifier	CType		6302974	0					
ANR	6303668	Argument	type1		6302974	1					
ANR	6303669	Identifier	type1		6302974	0					
ANR	6303670	ExpressionStatement	"STACK_NEW0 ( CType , type2 )"	1990:2:46402:46427	6302974	1	True				
ANR	6303671	CallExpression	"STACK_NEW0 ( CType , type2 )"		6302974	0					
ANR	6303672	Callee	STACK_NEW0		6302974	0					
ANR	6303673	Identifier	STACK_NEW0		6302974	0					
ANR	6303674	ArgumentList	CType		6302974	1					
ANR	6303675	Argument	CType		6302974	0					
ANR	6303676	Identifier	CType		6302974	0					
ANR	6303677	Argument	type2		6302974	1					
ANR	6303678	Identifier	type2		6302974	0					
ANR	6303679	ExpressionStatement	next ( )	1991:2:46431:46438	6302974	2	True				
ANR	6303680	CallExpression	next ( )		6302974	0					
ANR	6303681	Callee	next		6302974	0					
ANR	6303682	Identifier	next		6302974	0					
ANR	6303683	ArgumentList			6302974	1					
ANR	6303684	ExpressionStatement	skip ( '(' )	1992:2:46442:46452	6302974	3	True				
ANR	6303685	CallExpression	skip ( '(' )		6302974	0					
ANR	6303686	Callee	skip		6302974	0					
ANR	6303687	Identifier	skip		6302974	0					
ANR	6303688	ArgumentList	'('		6302974	1					
ANR	6303689	Argument	'('		6302974	0					
ANR	6303690	PrimaryExpression	'('		6302974	0					
ANR	6303691	ExpressionStatement	parse_type ( & type1 )	1993:2:46456:46475	6302974	4	True				
ANR	6303692	CallExpression	parse_type ( & type1 )		6302974	0					
ANR	6303693	Callee	parse_type		6302974	0					
ANR	6303694	Identifier	parse_type		6302974	0					
ANR	6303695	ArgumentList	& type1		6302974	1					
ANR	6303696	Argument	& type1		6302974	0					
ANR	6303697	UnaryOperationExpression	& type1		6302974	0					
ANR	6303698	UnaryOperator	&		6302974	0					
ANR	6303699	Identifier	type1		6302974	1					
ANR	6303700	ExpressionStatement	"skip ( ',' )"	1994:2:46479:46489	6302974	5	True				
ANR	6303701	CallExpression	"skip ( ',' )"		6302974	0					
ANR	6303702	Callee	skip		6302974	0					
ANR	6303703	Identifier	skip		6302974	0					
ANR	6303704	ArgumentList	"','"		6302974	1					
ANR	6303705	Argument	"','"		6302974	0					
ANR	6303706	PrimaryExpression	"','"		6302974	0					
ANR	6303707	ExpressionStatement	parse_type ( & type2 )	1995:2:46493:46512	6302974	6	True				
ANR	6303708	CallExpression	parse_type ( & type2 )		6302974	0					
ANR	6303709	Callee	parse_type		6302974	0					
ANR	6303710	Identifier	parse_type		6302974	0					
ANR	6303711	ArgumentList	& type2		6302974	1					
ANR	6303712	Argument	& type2		6302974	0					
ANR	6303713	UnaryOperationExpression	& type2		6302974	0					
ANR	6303714	UnaryOperator	&		6302974	0					
ANR	6303715	Identifier	type2		6302974	1					
ANR	6303716	ExpressionStatement	skip ( ')' )	1996:2:46516:46526	6302974	7	True				
ANR	6303717	CallExpression	skip ( ')' )		6302974	0					
ANR	6303718	Callee	skip		6302974	0					
ANR	6303719	Identifier	skip		6302974	0					
ANR	6303720	ArgumentList	')'		6302974	1					
ANR	6303721	Argument	')'		6302974	0					
ANR	6303722	PrimaryExpression	')'		6302974	0					
ANR	6303723	ExpressionStatement	type1 . t &= ~ ( VT_CONSTANT | VT_VOLATILE )	1997:2:46530:46569	6302974	8	True				
ANR	6303724	AssignmentExpression	type1 . t &= ~ ( VT_CONSTANT | VT_VOLATILE )		6302974	0		&=			
ANR	6303725	MemberAccess	type1 . t		6302974	0					
ANR	6303726	Identifier	type1		6302974	0					
ANR	6303727	Identifier	t		6302974	1					
ANR	6303728	UnaryOperationExpression	~ ( VT_CONSTANT | VT_VOLATILE )		6302974	1					
ANR	6303729	UnaryOperator	~		6302974	0					
ANR	6303730	InclusiveOrExpression	VT_CONSTANT | VT_VOLATILE		6302974	1		|			
ANR	6303731	Identifier	VT_CONSTANT		6302974	0					
ANR	6303732	Identifier	VT_VOLATILE		6302974	1					
ANR	6303733	ExpressionStatement	type2 . t &= ~ ( VT_CONSTANT | VT_VOLATILE )	1998:2:46573:46612	6302974	9	True				
ANR	6303734	AssignmentExpression	type2 . t &= ~ ( VT_CONSTANT | VT_VOLATILE )		6302974	0		&=			
ANR	6303735	MemberAccess	type2 . t		6302974	0					
ANR	6303736	Identifier	type2		6302974	0					
ANR	6303737	Identifier	t		6302974	1					
ANR	6303738	UnaryOperationExpression	~ ( VT_CONSTANT | VT_VOLATILE )		6302974	1					
ANR	6303739	UnaryOperator	~		6302974	0					
ANR	6303740	InclusiveOrExpression	VT_CONSTANT | VT_VOLATILE		6302974	1		|			
ANR	6303741	Identifier	VT_CONSTANT		6302974	0					
ANR	6303742	Identifier	VT_VOLATILE		6302974	1					
ANR	6303743	ExpressionStatement	"vpushi ( is_compatible_types ( & type1 , & type2 ) )"	1999:2:46616:46661	6302974	10	True				
ANR	6303744	CallExpression	"vpushi ( is_compatible_types ( & type1 , & type2 ) )"		6302974	0					
ANR	6303745	Callee	vpushi		6302974	0					
ANR	6303746	Identifier	vpushi		6302974	0					
ANR	6303747	ArgumentList	"is_compatible_types ( & type1 , & type2 )"		6302974	1					
ANR	6303748	Argument	"is_compatible_types ( & type1 , & type2 )"		6302974	0					
ANR	6303749	CallExpression	"is_compatible_types ( & type1 , & type2 )"		6302974	0					
ANR	6303750	Callee	is_compatible_types		6302974	0					
ANR	6303751	Identifier	is_compatible_types		6302974	0					
ANR	6303752	ArgumentList	& type1		6302974	1					
ANR	6303753	Argument	& type1		6302974	0					
ANR	6303754	UnaryOperationExpression	& type1		6302974	0					
ANR	6303755	UnaryOperator	&		6302974	0					
ANR	6303756	Identifier	type1		6302974	1					
ANR	6303757	Argument	& type2		6302974	1					
ANR	6303758	UnaryOperationExpression	& type2		6302974	0					
ANR	6303759	UnaryOperator	&		6302974	0					
ANR	6303760	Identifier	type2		6302974	1					
ANR	6303761	BreakStatement	break ;	2001:1:46667:46672	6302974	78	True				
ANR	6303762	Label	case TOK_builtin_constant_p :	2002:1:46675:46702	6302974	79	True				
ANR	6303763	Identifier	TOK_builtin_constant_p		6302974	0					
ANR	6303764	CompoundStatement		175:2:3491:3504	6302974	80					
ANR	6303765	IdentifierDeclStatement	int saved_nocode_wanted ;	2004:2:46709:46732	6302974	0	True				
ANR	6303766	IdentifierDecl	saved_nocode_wanted		6302974	0					
ANR	6303767	IdentifierDeclType	int		6302974	0					
ANR	6303768	Identifier	saved_nocode_wanted		6302974	1					
ANR	6303769	IdentifierDeclStatement	long long res ;	2005:2:46736:46749	6302974	1	True				
ANR	6303770	IdentifierDecl	res		6302974	0					
ANR	6303771	IdentifierDeclType	long long		6302974	0					
ANR	6303772	Identifier	res		6302974	1					
ANR	6303773	ExpressionStatement	next ( )	2006:2:46753:46760	6302974	2	True				
ANR	6303774	CallExpression	next ( )		6302974	0					
ANR	6303775	Callee	next		6302974	0					
ANR	6303776	Identifier	next		6302974	0					
ANR	6303777	ArgumentList			6302974	1					
ANR	6303778	ExpressionStatement	skip ( '(' )	2007:2:46764:46774	6302974	3	True				
ANR	6303779	CallExpression	skip ( '(' )		6302974	0					
ANR	6303780	Callee	skip		6302974	0					
ANR	6303781	Identifier	skip		6302974	0					
ANR	6303782	ArgumentList	'('		6302974	1					
ANR	6303783	Argument	'('		6302974	0					
ANR	6303784	PrimaryExpression	'('		6302974	0					
ANR	6303785	ExpressionStatement	saved_nocode_wanted = nocode_wanted	2008:2:46778:46813	6302974	4	True				
ANR	6303786	AssignmentExpression	saved_nocode_wanted = nocode_wanted		6302974	0		=			
ANR	6303787	Identifier	saved_nocode_wanted		6302974	0					
ANR	6303788	Identifier	nocode_wanted		6302974	1					
ANR	6303789	ExpressionStatement	nocode_wanted = 1	2009:2:46817:46834	6302974	5	True				
ANR	6303790	AssignmentExpression	nocode_wanted = 1		6302974	0		=			
ANR	6303791	Identifier	nocode_wanted		6302974	0					
ANR	6303792	PrimaryExpression	1		6302974	1					
ANR	6303793	ExpressionStatement	gexpr ( )	2010:2:46838:46846	6302974	6	True				
ANR	6303794	CallExpression	gexpr ( )		6302974	0					
ANR	6303795	Callee	gexpr		6302974	0					
ANR	6303796	Identifier	gexpr		6302974	0					
ANR	6303797	ArgumentList			6302974	1					
ANR	6303798	ExpressionStatement	res = ( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) == VT_CONST	2011:2:46850:46911	6302974	7	True				
ANR	6303799	AssignmentExpression	res = ( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) == VT_CONST		6302974	0		=			
ANR	6303800	Identifier	res		6302974	0					
ANR	6303801	EqualityExpression	( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) == VT_CONST		6302974	1		==			
ANR	6303802	BitAndExpression	vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM )		6302974	0		&			
ANR	6303803	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6303804	Identifier	vtop		6302974	0					
ANR	6303805	Identifier	r		6302974	1					
ANR	6303806	InclusiveOrExpression	VT_VALMASK | VT_LVAL | VT_SYM		6302974	1		|			
ANR	6303807	Identifier	VT_VALMASK		6302974	0					
ANR	6303808	InclusiveOrExpression	VT_LVAL | VT_SYM		6302974	1		|			
ANR	6303809	Identifier	VT_LVAL		6302974	0					
ANR	6303810	Identifier	VT_SYM		6302974	1					
ANR	6303811	Identifier	VT_CONST		6302974	1					
ANR	6303812	ExpressionStatement	nocode_wanted = saved_nocode_wanted	2012:2:46915:46950	6302974	8	True				
ANR	6303813	AssignmentExpression	nocode_wanted = saved_nocode_wanted		6302974	0		=			
ANR	6303814	Identifier	nocode_wanted		6302974	0					
ANR	6303815	Identifier	saved_nocode_wanted		6302974	1					
ANR	6303816	ExpressionStatement	skip ( ')' )	2013:2:46954:46964	6302974	9	True				
ANR	6303817	CallExpression	skip ( ')' )		6302974	0					
ANR	6303818	Callee	skip		6302974	0					
ANR	6303819	Identifier	skip		6302974	0					
ANR	6303820	ArgumentList	')'		6302974	1					
ANR	6303821	Argument	')'		6302974	0					
ANR	6303822	PrimaryExpression	')'		6302974	0					
ANR	6303823	ExpressionStatement	vpushll ( res )	2014:2:46968:46981	6302974	10	True				
ANR	6303824	CallExpression	vpushll ( res )		6302974	0					
ANR	6303825	Callee	vpushll		6302974	0					
ANR	6303826	Identifier	vpushll		6302974	0					
ANR	6303827	ArgumentList	res		6302974	1					
ANR	6303828	Argument	res		6302974	0					
ANR	6303829	Identifier	res		6302974	0					
ANR	6303830	BreakStatement	break ;	2016:1:46987:46992	6302974	81	True				
ANR	6303831	Label	case TOK_builtin_frame_address :	2017:1:46995:47025	6302974	82	True				
ANR	6303832	Identifier	TOK_builtin_frame_address		6302974	0					
ANR	6303833	CompoundStatement		190:2:3800:3819	6302974	83					
ANR	6303834	IdentifierDeclStatement	int level ;	2019:2:47032:47041	6302974	0	True				
ANR	6303835	IdentifierDecl	level		6302974	0					
ANR	6303836	IdentifierDeclType	int		6302974	0					
ANR	6303837	Identifier	level		6302974	1					
ANR	6303838	IdentifierDeclStatement	CType type = { 0 } ;	2020:2:47045:47064	6302974	1	True				
ANR	6303839	IdentifierDecl	type = { 0 }		6302974	0					
ANR	6303840	IdentifierDeclType	CType		6302974	0					
ANR	6303841	Identifier	type		6302974	1					
ANR	6303842	AssignmentExpression	type = { 0 }		6302974	2		=			
ANR	6303843	Identifier	type		6302974	0					
ANR	6303844	InitializerList	0		6302974	1					
ANR	6303845	PrimaryExpression	0		6302974	0					
ANR	6303846	ExpressionStatement	next ( )	2021:2:47068:47075	6302974	2	True				
ANR	6303847	CallExpression	next ( )		6302974	0					
ANR	6303848	Callee	next		6302974	0					
ANR	6303849	Identifier	next		6302974	0					
ANR	6303850	ArgumentList			6302974	1					
ANR	6303851	ExpressionStatement	skip ( '(' )	2022:2:47079:47089	6302974	3	True				
ANR	6303852	CallExpression	skip ( '(' )		6302974	0					
ANR	6303853	Callee	skip		6302974	0					
ANR	6303854	Identifier	skip		6302974	0					
ANR	6303855	ArgumentList	'('		6302974	1					
ANR	6303856	Argument	'('		6302974	0					
ANR	6303857	PrimaryExpression	'('		6302974	0					
ANR	6303858	IfStatement	if ( tok != TOK_CINT || tokc . i < 0 )		6302974	4					
ANR	6303859	Condition	tok != TOK_CINT || tokc . i < 0	2023:6:47097:47125	6302974	0	True				
ANR	6303860	OrExpression	tok != TOK_CINT || tokc . i < 0		6302974	0		||			
ANR	6303861	EqualityExpression	tok != TOK_CINT		6302974	0		!=			
ANR	6303862	Identifier	tok		6302974	0					
ANR	6303863	Identifier	TOK_CINT		6302974	1					
ANR	6303864	RelationalExpression	tokc . i < 0		6302974	1		<			
ANR	6303865	MemberAccess	tokc . i		6302974	0					
ANR	6303866	Identifier	tokc		6302974	0					
ANR	6303867	Identifier	i		6302974	1					
ANR	6303868	PrimaryExpression	0		6302974	1					
ANR	6303869	CompoundStatement		193:37:3883:3883	6302974	1					
ANR	6303870	ExpressionStatement	"TCC_ERR ( ""__builtin_frame_address only takes positive integers"" )"	2024:3:47133:47197	6302974	0	True				
ANR	6303871	CallExpression	"TCC_ERR ( ""__builtin_frame_address only takes positive integers"" )"		6302974	0					
ANR	6303872	Callee	TCC_ERR		6302974	0					
ANR	6303873	Identifier	TCC_ERR		6302974	0					
ANR	6303874	ArgumentList	"""__builtin_frame_address only takes positive integers"""		6302974	1					
ANR	6303875	Argument	"""__builtin_frame_address only takes positive integers"""		6302974	0					
ANR	6303876	PrimaryExpression	"""__builtin_frame_address only takes positive integers"""		6302974	0					
ANR	6303877	ExpressionStatement	level = tokc . i	2026:2:47205:47219	6302974	5	True				
ANR	6303878	AssignmentExpression	level = tokc . i		6302974	0		=			
ANR	6303879	Identifier	level		6302974	0					
ANR	6303880	MemberAccess	tokc . i		6302974	1					
ANR	6303881	Identifier	tokc		6302974	0					
ANR	6303882	Identifier	i		6302974	1					
ANR	6303883	ExpressionStatement	next ( )	2027:2:47223:47230	6302974	6	True				
ANR	6303884	CallExpression	next ( )		6302974	0					
ANR	6303885	Callee	next		6302974	0					
ANR	6303886	Identifier	next		6302974	0					
ANR	6303887	ArgumentList			6302974	1					
ANR	6303888	ExpressionStatement	skip ( ')' )	2028:2:47234:47244	6302974	7	True				
ANR	6303889	CallExpression	skip ( ')' )		6302974	0					
ANR	6303890	Callee	skip		6302974	0					
ANR	6303891	Identifier	skip		6302974	0					
ANR	6303892	ArgumentList	')'		6302974	1					
ANR	6303893	Argument	')'		6302974	0					
ANR	6303894	PrimaryExpression	')'		6302974	0					
ANR	6303895	ExpressionStatement	type . t = VT_VOID	2029:2:47248:47264	6302974	8	True				
ANR	6303896	AssignmentExpression	type . t = VT_VOID		6302974	0		=			
ANR	6303897	MemberAccess	type . t		6302974	0					
ANR	6303898	Identifier	type		6302974	0					
ANR	6303899	Identifier	t		6302974	1					
ANR	6303900	Identifier	VT_VOID		6302974	1					
ANR	6303901	ExpressionStatement	mk_pointer ( & type )	2030:2:47268:47286	6302974	9	True				
ANR	6303902	CallExpression	mk_pointer ( & type )		6302974	0					
ANR	6303903	Callee	mk_pointer		6302974	0					
ANR	6303904	Identifier	mk_pointer		6302974	0					
ANR	6303905	ArgumentList	& type		6302974	1					
ANR	6303906	Argument	& type		6302974	0					
ANR	6303907	UnaryOperationExpression	& type		6302974	0					
ANR	6303908	UnaryOperator	&		6302974	0					
ANR	6303909	Identifier	type		6302974	1					
ANR	6303910	ExpressionStatement	"vset ( & type , VT_LOCAL , 0 )"	2031:2:47290:47315	6302974	10	True				
ANR	6303911	CallExpression	"vset ( & type , VT_LOCAL , 0 )"		6302974	0					
ANR	6303912	Callee	vset		6302974	0					
ANR	6303913	Identifier	vset		6302974	0					
ANR	6303914	ArgumentList	& type		6302974	1					
ANR	6303915	Argument	& type		6302974	0					
ANR	6303916	UnaryOperationExpression	& type		6302974	0					
ANR	6303917	UnaryOperator	&		6302974	0					
ANR	6303918	Identifier	type		6302974	1					
ANR	6303919	Argument	VT_LOCAL		6302974	1					
ANR	6303920	Identifier	VT_LOCAL		6302974	0					
ANR	6303921	Argument	0		6302974	2					
ANR	6303922	PrimaryExpression	0		6302974	0					
ANR	6303923	WhileStatement	while ( level -- )		6302974	11					
ANR	6303924	Condition	level --	2032:9:47344:47350	6302974	0	True				
ANR	6303925	PostIncDecOperationExpression	level --		6302974	0					
ANR	6303926	Identifier	level		6302974	0					
ANR	6303927	IncDec	--		6302974	1					
ANR	6303928	CompoundStatement		202:18:4108:4108	6302974	1					
ANR	6303929	ExpressionStatement	mk_pointer ( & vtop -> type )	2033:3:47358:47382	6302974	0	True				
ANR	6303930	CallExpression	mk_pointer ( & vtop -> type )		6302974	0					
ANR	6303931	Callee	mk_pointer		6302974	0					
ANR	6303932	Identifier	mk_pointer		6302974	0					
ANR	6303933	ArgumentList	& vtop -> type		6302974	1					
ANR	6303934	Argument	& vtop -> type		6302974	0					
ANR	6303935	UnaryOperationExpression	& vtop -> type		6302974	0					
ANR	6303936	UnaryOperator	&		6302974	0					
ANR	6303937	PtrMemberAccess	vtop -> type		6302974	1					
ANR	6303938	Identifier	vtop		6302974	0					
ANR	6303939	Identifier	type		6302974	1					
ANR	6303940	ExpressionStatement	indir ( )	2034:3:47387:47395	6302974	1	True				
ANR	6303941	CallExpression	indir ( )		6302974	0					
ANR	6303942	Callee	indir		6302974	0					
ANR	6303943	Identifier	indir		6302974	0					
ANR	6303944	ArgumentList			6302974	1					
ANR	6303945	BreakStatement	break ;	2037:1:47428:47433	6302974	84	True				
ANR	6303946	Label	case TOK_builtin_va_start :	2038:1:47436:47461	6302974	85	True				
ANR	6303947	Identifier	TOK_builtin_va_start		6302974	0					
ANR	6303948	IfStatement	"if ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 ) )"		6302974	86					
ANR	6303949	Condition	"! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 )"	2039:6:47469:47577	6302974	0	True				
ANR	6303950	AndExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	0		&&			
ANR	6303951	UnaryOperationExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6302974	0					
ANR	6303952	UnaryOperator	!		6302974	0					
ANR	6303953	CallExpression	"strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6302974	1					
ANR	6303954	Callee	strncmp		6302974	0					
ANR	6303955	Identifier	strncmp		6302974	0					
ANR	6303956	ArgumentList	tcc_state -> arch		6302974	1					
ANR	6303957	Argument	tcc_state -> arch		6302974	0					
ANR	6303958	PtrMemberAccess	tcc_state -> arch		6302974	0					
ANR	6303959	Identifier	tcc_state		6302974	0					
ANR	6303960	Identifier	arch		6302974	1					
ANR	6303961	Argument	"""x86"""		6302974	1					
ANR	6303962	PrimaryExpression	"""x86"""		6302974	0					
ANR	6303963	Argument	3		6302974	2					
ANR	6303964	PrimaryExpression	3		6302974	0					
ANR	6303965	AndExpression	"tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1		&&			
ANR	6303966	EqualityExpression	tcc_state -> bits == 64		6302974	0		==			
ANR	6303967	PtrMemberAccess	tcc_state -> bits		6302974	0					
ANR	6303968	Identifier	tcc_state		6302974	0					
ANR	6303969	Identifier	bits		6302974	1					
ANR	6303970	PrimaryExpression	64		6302974	1					
ANR	6303971	UnaryOperationExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1					
ANR	6303972	UnaryOperator	!		6302974	0					
ANR	6303973	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1					
ANR	6303974	Callee	strncmp		6302974	0					
ANR	6303975	Identifier	strncmp		6302974	0					
ANR	6303976	ArgumentList	tcc_state -> os		6302974	1					
ANR	6303977	Argument	tcc_state -> os		6302974	0					
ANR	6303978	PtrMemberAccess	tcc_state -> os		6302974	0					
ANR	6303979	Identifier	tcc_state		6302974	0					
ANR	6303980	Identifier	os		6302974	1					
ANR	6303981	Argument	"""windows"""		6302974	1					
ANR	6303982	PrimaryExpression	"""windows"""		6302974	0					
ANR	6303983	Argument	7		6302974	2					
ANR	6303984	PrimaryExpression	7		6302974	0					
ANR	6303985	CompoundStatement		210:46:4335:4335	6302974	1					
ANR	6303986	ExpressionStatement	next ( )	2041:3:47585:47592	6302974	0	True				
ANR	6303987	CallExpression	next ( )		6302974	0					
ANR	6303988	Callee	next		6302974	0					
ANR	6303989	Identifier	next		6302974	0					
ANR	6303990	ArgumentList			6302974	1					
ANR	6303991	ExpressionStatement	skip ( '(' )	2042:3:47597:47607	6302974	1	True				
ANR	6303992	CallExpression	skip ( '(' )		6302974	0					
ANR	6303993	Callee	skip		6302974	0					
ANR	6303994	Identifier	skip		6302974	0					
ANR	6303995	ArgumentList	'('		6302974	1					
ANR	6303996	Argument	'('		6302974	0					
ANR	6303997	PrimaryExpression	'('		6302974	0					
ANR	6303998	ExpressionStatement	expr_eq ( )	2043:3:47612:47622	6302974	2	True				
ANR	6303999	CallExpression	expr_eq ( )		6302974	0					
ANR	6304000	Callee	expr_eq		6302974	0					
ANR	6304001	Identifier	expr_eq		6302974	0					
ANR	6304002	ArgumentList			6302974	1					
ANR	6304003	ExpressionStatement	"skip ( ',' )"	2044:3:47627:47637	6302974	3	True				
ANR	6304004	CallExpression	"skip ( ',' )"		6302974	0					
ANR	6304005	Callee	skip		6302974	0					
ANR	6304006	Identifier	skip		6302974	0					
ANR	6304007	ArgumentList	"','"		6302974	1					
ANR	6304008	Argument	"','"		6302974	0					
ANR	6304009	PrimaryExpression	"','"		6302974	0					
ANR	6304010	ExpressionStatement	expr_eq ( )	2045:3:47642:47652	6302974	4	True				
ANR	6304011	CallExpression	expr_eq ( )		6302974	0					
ANR	6304012	Callee	expr_eq		6302974	0					
ANR	6304013	Identifier	expr_eq		6302974	0					
ANR	6304014	ArgumentList			6302974	1					
ANR	6304015	ExpressionStatement	skip ( ')' )	2046:3:47657:47667	6302974	5	True				
ANR	6304016	CallExpression	skip ( ')' )		6302974	0					
ANR	6304017	Callee	skip		6302974	0					
ANR	6304018	Identifier	skip		6302974	0					
ANR	6304019	ArgumentList	')'		6302974	1					
ANR	6304020	Argument	')'		6302974	0					
ANR	6304021	PrimaryExpression	')'		6302974	0					
ANR	6304022	IfStatement	if ( ( vtop -> r & VT_VALMASK ) != VT_LOCAL )		6302974	6					
ANR	6304023	Condition	( vtop -> r & VT_VALMASK ) != VT_LOCAL	2047:7:47676:47709	6302974	0	True				
ANR	6304024	EqualityExpression	( vtop -> r & VT_VALMASK ) != VT_LOCAL		6302974	0		!=			
ANR	6304025	BitAndExpression	vtop -> r & VT_VALMASK		6302974	0		&			
ANR	6304026	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6304027	Identifier	vtop		6302974	0					
ANR	6304028	Identifier	r		6302974	1					
ANR	6304029	Identifier	VT_VALMASK		6302974	1					
ANR	6304030	Identifier	VT_LOCAL		6302974	1					
ANR	6304031	CompoundStatement		217:43:4467:4467	6302974	1					
ANR	6304032	ExpressionStatement	"TCC_ERR ( ""__builtin_va_start expects a local variable"" )"	2048:4:47718:47773	6302974	0	True				
ANR	6304033	CallExpression	"TCC_ERR ( ""__builtin_va_start expects a local variable"" )"		6302974	0					
ANR	6304034	Callee	TCC_ERR		6302974	0					
ANR	6304035	Identifier	TCC_ERR		6302974	0					
ANR	6304036	ArgumentList	"""__builtin_va_start expects a local variable"""		6302974	1					
ANR	6304037	Argument	"""__builtin_va_start expects a local variable"""		6302974	0					
ANR	6304038	PrimaryExpression	"""__builtin_va_start expects a local variable"""		6302974	0					
ANR	6304039	ExpressionStatement	vtop -> r &= ~ ( VT_LVAL | VT_REF )	2050:3:47783:47813	6302974	7	True				
ANR	6304040	AssignmentExpression	vtop -> r &= ~ ( VT_LVAL | VT_REF )		6302974	0		&=			
ANR	6304041	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6304042	Identifier	vtop		6302974	0					
ANR	6304043	Identifier	r		6302974	1					
ANR	6304044	UnaryOperationExpression	~ ( VT_LVAL | VT_REF )		6302974	1					
ANR	6304045	UnaryOperator	~		6302974	0					
ANR	6304046	InclusiveOrExpression	VT_LVAL | VT_REF		6302974	1		|			
ANR	6304047	Identifier	VT_LVAL		6302974	0					
ANR	6304048	Identifier	VT_REF		6302974	1					
ANR	6304049	ExpressionStatement	vtop -> type = char_pointer_type	2051:3:47818:47848	6302974	8	True				
ANR	6304050	AssignmentExpression	vtop -> type = char_pointer_type		6302974	0		=			
ANR	6304051	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304052	Identifier	vtop		6302974	0					
ANR	6304053	Identifier	type		6302974	1					
ANR	6304054	Identifier	char_pointer_type		6302974	1					
ANR	6304055	BreakStatement	break ;	2053:2:47856:47861	6302974	87	True				
ANR	6304056	Label	case TOK_builtin_va_arg_types :	2054:1:47864:47893	6302974	88	True				
ANR	6304057	Identifier	TOK_builtin_va_arg_types		6302974	0					
ANR	6304058	IfStatement	"if ( ! ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 ) ) )"		6302974	89					
ANR	6304059	Condition	"! ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 ) )"	2055:6:47901:48014	6302974	0	True				
ANR	6304060	UnaryOperationExpression	"! ( ! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 ) )"		6302974	0					
ANR	6304061	UnaryOperator	!		6302974	0					
ANR	6304062	AndExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 ) && tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1		&&			
ANR	6304063	UnaryOperationExpression	"! strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6302974	0					
ANR	6304064	UnaryOperator	!		6302974	0					
ANR	6304065	CallExpression	"strncmp ( tcc_state -> arch , ""x86"" , 3 )"		6302974	1					
ANR	6304066	Callee	strncmp		6302974	0					
ANR	6304067	Identifier	strncmp		6302974	0					
ANR	6304068	ArgumentList	tcc_state -> arch		6302974	1					
ANR	6304069	Argument	tcc_state -> arch		6302974	0					
ANR	6304070	PtrMemberAccess	tcc_state -> arch		6302974	0					
ANR	6304071	Identifier	tcc_state		6302974	0					
ANR	6304072	Identifier	arch		6302974	1					
ANR	6304073	Argument	"""x86"""		6302974	1					
ANR	6304074	PrimaryExpression	"""x86"""		6302974	0					
ANR	6304075	Argument	3		6302974	2					
ANR	6304076	PrimaryExpression	3		6302974	0					
ANR	6304077	AndExpression	"tcc_state -> bits == 64 && ! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1		&&			
ANR	6304078	EqualityExpression	tcc_state -> bits == 64		6302974	0		==			
ANR	6304079	PtrMemberAccess	tcc_state -> bits		6302974	0					
ANR	6304080	Identifier	tcc_state		6302974	0					
ANR	6304081	Identifier	bits		6302974	1					
ANR	6304082	PrimaryExpression	64		6302974	1					
ANR	6304083	UnaryOperationExpression	"! strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1					
ANR	6304084	UnaryOperator	!		6302974	0					
ANR	6304085	CallExpression	"strncmp ( tcc_state -> os , ""windows"" , 7 )"		6302974	1					
ANR	6304086	Callee	strncmp		6302974	0					
ANR	6304087	Identifier	strncmp		6302974	0					
ANR	6304088	ArgumentList	tcc_state -> os		6302974	1					
ANR	6304089	Argument	tcc_state -> os		6302974	0					
ANR	6304090	PtrMemberAccess	tcc_state -> os		6302974	0					
ANR	6304091	Identifier	tcc_state		6302974	0					
ANR	6304092	Identifier	os		6302974	1					
ANR	6304093	Argument	"""windows"""		6302974	1					
ANR	6304094	PrimaryExpression	"""windows"""		6302974	0					
ANR	6304095	Argument	7		6302974	2					
ANR	6304096	PrimaryExpression	7		6302974	0					
ANR	6304097	CompoundStatement		227:3:4777:4796	6302974	1					
ANR	6304098	IdentifierDeclStatement	CType type = { 0 } ;	2057:3:48022:48041	6302974	0	True				
ANR	6304099	IdentifierDecl	type = { 0 }		6302974	0					
ANR	6304100	IdentifierDeclType	CType		6302974	0					
ANR	6304101	Identifier	type		6302974	1					
ANR	6304102	AssignmentExpression	type = { 0 }		6302974	2		=			
ANR	6304103	Identifier	type		6302974	0					
ANR	6304104	InitializerList	0		6302974	1					
ANR	6304105	PrimaryExpression	0		6302974	0					
ANR	6304106	ExpressionStatement	next ( )	2058:3:48046:48053	6302974	1	True				
ANR	6304107	CallExpression	next ( )		6302974	0					
ANR	6304108	Callee	next		6302974	0					
ANR	6304109	Identifier	next		6302974	0					
ANR	6304110	ArgumentList			6302974	1					
ANR	6304111	ExpressionStatement	skip ( '(' )	2059:3:48058:48068	6302974	2	True				
ANR	6304112	CallExpression	skip ( '(' )		6302974	0					
ANR	6304113	Callee	skip		6302974	0					
ANR	6304114	Identifier	skip		6302974	0					
ANR	6304115	ArgumentList	'('		6302974	1					
ANR	6304116	Argument	'('		6302974	0					
ANR	6304117	PrimaryExpression	'('		6302974	0					
ANR	6304118	ExpressionStatement	parse_type ( & type )	2060:3:48073:48091	6302974	3	True				
ANR	6304119	CallExpression	parse_type ( & type )		6302974	0					
ANR	6304120	Callee	parse_type		6302974	0					
ANR	6304121	Identifier	parse_type		6302974	0					
ANR	6304122	ArgumentList	& type		6302974	1					
ANR	6304123	Argument	& type		6302974	0					
ANR	6304124	UnaryOperationExpression	& type		6302974	0					
ANR	6304125	UnaryOperator	&		6302974	0					
ANR	6304126	Identifier	type		6302974	1					
ANR	6304127	ExpressionStatement	skip ( ')' )	2061:3:48096:48106	6302974	4	True				
ANR	6304128	CallExpression	skip ( ')' )		6302974	0					
ANR	6304129	Callee	skip		6302974	0					
ANR	6304130	Identifier	skip		6302974	0					
ANR	6304131	ArgumentList	')'		6302974	1					
ANR	6304132	Argument	')'		6302974	0					
ANR	6304133	PrimaryExpression	')'		6302974	0					
ANR	6304134	BreakStatement	break ;	2065:2:48189:48194	6302974	90	True				
ANR	6304135	Label	case TOK___NAN__ :	2068:1:48242:48258	6302974	91	True				
ANR	6304136	Identifier	TOK___NAN__		6302974	0					
ANR	6304137	Statement	vpush64	2069:2:48262:48268	6302974	92	True				
ANR	6304138	Statement	(	2069:10:48270:48270	6302974	93	True				
ANR	6304139	Statement	VT_DOUBLE	2069:11:48271:48279	6302974	94	True				
ANR	6304140	Statement	","	2069:20:48280:48280	6302974	95	True				
ANR	6304141	Statement	0x7ff8000000000000UL	2069:22:48282:48301	6302974	96	True				
ANR	6304142	Statement	L	2069:42:48302:48302	6302974	97	True				
ANR	6304143	Statement	)	2069:43:48303:48303	6302974	98	True				
ANR	6304144	ExpressionStatement		2069:44:48304:48304	6302974	99	True				
ANR	6304145	ExpressionStatement	next ( )	2070:2:48308:48315	6302974	100	True				
ANR	6304146	CallExpression	next ( )		6302974	0					
ANR	6304147	Callee	next		6302974	0					
ANR	6304148	Identifier	next		6302974	0					
ANR	6304149	ArgumentList			6302974	1					
ANR	6304150	BreakStatement	break ;	2071:2:48319:48324	6302974	101	True				
ANR	6304151	Label	case TOK___SNAN__ :	2072:1:48327:48344	6302974	102	True				
ANR	6304152	Identifier	TOK___SNAN__		6302974	0					
ANR	6304153	Statement	vpush64	2073:2:48348:48354	6302974	103	True				
ANR	6304154	Statement	(	2073:10:48356:48356	6302974	104	True				
ANR	6304155	Statement	VT_DOUBLE	2073:11:48357:48365	6302974	105	True				
ANR	6304156	Statement	","	2073:20:48366:48366	6302974	106	True				
ANR	6304157	Statement	0x7ff0000000000001UL	2073:22:48368:48387	6302974	107	True				
ANR	6304158	Statement	L	2073:42:48388:48388	6302974	108	True				
ANR	6304159	Statement	)	2073:43:48389:48389	6302974	109	True				
ANR	6304160	ExpressionStatement		2073:44:48390:48390	6302974	110	True				
ANR	6304161	ExpressionStatement	next ( )	2074:2:48394:48401	6302974	111	True				
ANR	6304162	CallExpression	next ( )		6302974	0					
ANR	6304163	Callee	next		6302974	0					
ANR	6304164	Identifier	next		6302974	0					
ANR	6304165	ArgumentList			6302974	1					
ANR	6304166	BreakStatement	break ;	2075:2:48405:48410	6302974	112	True				
ANR	6304167	Label	case TOK___INF__ :	2076:1:48413:48429	6302974	113	True				
ANR	6304168	Identifier	TOK___INF__		6302974	0					
ANR	6304169	Statement	vpush64	2077:2:48433:48439	6302974	114	True				
ANR	6304170	Statement	(	2077:10:48441:48441	6302974	115	True				
ANR	6304171	Statement	VT_DOUBLE	2077:11:48442:48450	6302974	116	True				
ANR	6304172	Statement	","	2077:20:48451:48451	6302974	117	True				
ANR	6304173	Statement	0x7ff0000000000000UL	2077:22:48453:48472	6302974	118	True				
ANR	6304174	Statement	L	2077:42:48473:48473	6302974	119	True				
ANR	6304175	Statement	)	2077:43:48474:48474	6302974	120	True				
ANR	6304176	ExpressionStatement		2077:44:48475:48475	6302974	121	True				
ANR	6304177	ExpressionStatement	next ( )	2078:2:48479:48486	6302974	122	True				
ANR	6304178	CallExpression	next ( )		6302974	0					
ANR	6304179	Callee	next		6302974	0					
ANR	6304180	Identifier	next		6302974	0					
ANR	6304181	ArgumentList			6302974	1					
ANR	6304182	BreakStatement	break ;	2079:2:48490:48495	6302974	123	True				
ANR	6304183	Label	default :	2081:1:48499:48506	6302974	124	True				
ANR	6304184	Identifier	default		6302974	0					
ANR	6304185	Label	tok_identifier :	2082:0:48508:48522	6302974	125	True				
ANR	6304186	Identifier	tok_identifier		6302974	0					
ANR	6304187	ExpressionStatement	t = tok	2083:2:48526:48533	6302974	126	True				
ANR	6304188	AssignmentExpression	t = tok		6302974	0		=			
ANR	6304189	Identifier	t		6302974	0					
ANR	6304190	Identifier	tok		6302974	1					
ANR	6304191	ExpressionStatement	next ( )	2084:2:48537:48544	6302974	127	True				
ANR	6304192	CallExpression	next ( )		6302974	0					
ANR	6304193	Callee	next		6302974	0					
ANR	6304194	Identifier	next		6302974	0					
ANR	6304195	ArgumentList			6302974	1					
ANR	6304196	IfStatement	if ( t < TOK_UIDENT )		6302974	128					
ANR	6304197	Condition	t < TOK_UIDENT	2085:6:48552:48565	6302974	0	True				
ANR	6304198	RelationalExpression	t < TOK_UIDENT		6302974	0		<			
ANR	6304199	Identifier	t		6302974	0					
ANR	6304200	Identifier	TOK_UIDENT		6302974	1					
ANR	6304201	CompoundStatement		255:22:5323:5323	6302974	1					
ANR	6304202	ExpressionStatement	"expect ( ""identifier"" )"	2086:3:48573:48594	6302974	0	True				
ANR	6304203	CallExpression	"expect ( ""identifier"" )"		6302974	0					
ANR	6304204	Callee	expect		6302974	0					
ANR	6304205	Identifier	expect		6302974	0					
ANR	6304206	ArgumentList	"""identifier"""		6302974	1					
ANR	6304207	Argument	"""identifier"""		6302974	0					
ANR	6304208	PrimaryExpression	"""identifier"""		6302974	0					
ANR	6304209	ExpressionStatement	s = sym_find ( t )	2088:2:48602:48618	6302974	129	True				
ANR	6304210	AssignmentExpression	s = sym_find ( t )		6302974	0		=			
ANR	6304211	Identifier	s		6302974	0					
ANR	6304212	CallExpression	sym_find ( t )		6302974	1					
ANR	6304213	Callee	sym_find		6302974	0					
ANR	6304214	Identifier	sym_find		6302974	0					
ANR	6304215	ArgumentList	t		6302974	1					
ANR	6304216	Argument	t		6302974	0					
ANR	6304217	Identifier	t		6302974	0					
ANR	6304218	IfStatement	if ( ! s )		6302974	130					
ANR	6304219	Condition	! s	2089:6:48626:48627	6302974	0	True				
ANR	6304220	UnaryOperationExpression	! s		6302974	0					
ANR	6304221	UnaryOperator	!		6302974	0					
ANR	6304222	Identifier	s		6302974	1					
ANR	6304223	CompoundStatement		259:10:5385:5385	6302974	1					
ANR	6304224	IfStatement	if ( tok != '(' )		6302974	0					
ANR	6304225	Condition	tok != '('	2090:7:48639:48648	6302974	0	True				
ANR	6304226	EqualityExpression	tok != '('		6302974	0		!=			
ANR	6304227	Identifier	tok		6302974	0					
ANR	6304228	PrimaryExpression	'('		6302974	1					
ANR	6304229	CompoundStatement		260:19:5406:5406	6302974	1					
ANR	6304230	ExpressionStatement	"TCC_ERR ( ""'%s' undeclared"" , get_tok_str ( t , NULL ) )"	2091:4:48657:48707	6302974	0	True				
ANR	6304231	CallExpression	"TCC_ERR ( ""'%s' undeclared"" , get_tok_str ( t , NULL ) )"		6302974	0					
ANR	6304232	Callee	TCC_ERR		6302974	0					
ANR	6304233	Identifier	TCC_ERR		6302974	0					
ANR	6304234	ArgumentList	"""'%s' undeclared"""		6302974	1					
ANR	6304235	Argument	"""'%s' undeclared"""		6302974	0					
ANR	6304236	PrimaryExpression	"""'%s' undeclared"""		6302974	0					
ANR	6304237	Argument	"get_tok_str ( t , NULL )"		6302974	1					
ANR	6304238	CallExpression	"get_tok_str ( t , NULL )"		6302974	0					
ANR	6304239	Callee	get_tok_str		6302974	0					
ANR	6304240	Identifier	get_tok_str		6302974	0					
ANR	6304241	ArgumentList	t		6302974	1					
ANR	6304242	Argument	t		6302974	0					
ANR	6304243	Identifier	t		6302974	0					
ANR	6304244	Argument	NULL		6302974	1					
ANR	6304245	Identifier	NULL		6302974	0					
ANR	6304246	IfStatement	if ( ! s )		6302974	131					
ANR	6304247	Condition	! s	2094:6:48724:48725	6302974	0	True				
ANR	6304248	UnaryOperationExpression	! s		6302974	0					
ANR	6304249	UnaryOperator	!		6302974	0					
ANR	6304250	Identifier	s		6302974	1					
ANR	6304251	CompoundStatement		264:10:5483:5483	6302974	1					
ANR	6304252	ExpressionStatement	"TCC_ERR ( ""invalid declaration '%s'"" , get_tok_str ( t , NULL ) )"	2095:3:48733:48792	6302974	0	True				
ANR	6304253	CallExpression	"TCC_ERR ( ""invalid declaration '%s'"" , get_tok_str ( t , NULL ) )"		6302974	0					
ANR	6304254	Callee	TCC_ERR		6302974	0					
ANR	6304255	Identifier	TCC_ERR		6302974	0					
ANR	6304256	ArgumentList	"""invalid declaration '%s'"""		6302974	1					
ANR	6304257	Argument	"""invalid declaration '%s'"""		6302974	0					
ANR	6304258	PrimaryExpression	"""invalid declaration '%s'"""		6302974	0					
ANR	6304259	Argument	"get_tok_str ( t , NULL )"		6302974	1					
ANR	6304260	CallExpression	"get_tok_str ( t , NULL )"		6302974	0					
ANR	6304261	Callee	get_tok_str		6302974	0					
ANR	6304262	Identifier	get_tok_str		6302974	0					
ANR	6304263	ArgumentList	t		6302974	1					
ANR	6304264	Argument	t		6302974	0					
ANR	6304265	Identifier	t		6302974	0					
ANR	6304266	Argument	NULL		6302974	1					
ANR	6304267	Identifier	NULL		6302974	0					
ANR	6304268	ElseStatement	else		6302974	0					
ANR	6304269	CompoundStatement		266:9:5558:5558	6302974	0					
ANR	6304270	IfStatement	if ( ( s -> type . t & ( VT_STATIC | VT_INLINE | VT_BTYPE ) ) == ( VT_STATIC | VT_INLINE | VT_FUNC ) )		6302974	0					
ANR	6304271	Condition	( s -> type . t & ( VT_STATIC | VT_INLINE | VT_BTYPE ) ) == ( VT_STATIC | VT_INLINE | VT_FUNC )	2097:7:48812:48903	6302974	0	True				
ANR	6304272	EqualityExpression	( s -> type . t & ( VT_STATIC | VT_INLINE | VT_BTYPE ) ) == ( VT_STATIC | VT_INLINE | VT_FUNC )		6302974	0		==			
ANR	6304273	BitAndExpression	s -> type . t & ( VT_STATIC | VT_INLINE | VT_BTYPE )		6302974	0		&			
ANR	6304274	MemberAccess	s -> type . t		6302974	0					
ANR	6304275	PtrMemberAccess	s -> type		6302974	0					
ANR	6304276	Identifier	s		6302974	0					
ANR	6304277	Identifier	type		6302974	1					
ANR	6304278	Identifier	t		6302974	1					
ANR	6304279	InclusiveOrExpression	VT_STATIC | VT_INLINE | VT_BTYPE		6302974	1		|			
ANR	6304280	Identifier	VT_STATIC		6302974	0					
ANR	6304281	InclusiveOrExpression	VT_INLINE | VT_BTYPE		6302974	1		|			
ANR	6304282	Identifier	VT_INLINE		6302974	0					
ANR	6304283	Identifier	VT_BTYPE		6302974	1					
ANR	6304284	InclusiveOrExpression	VT_STATIC | VT_INLINE | VT_FUNC		6302974	1		|			
ANR	6304285	Identifier	VT_STATIC		6302974	0					
ANR	6304286	InclusiveOrExpression	VT_INLINE | VT_FUNC		6302974	1		|			
ANR	6304287	Identifier	VT_INLINE		6302974	0					
ANR	6304288	Identifier	VT_FUNC		6302974	1					
ANR	6304289	CompoundStatement		268:42:5661:5661	6302974	1					
ANR	6304290	ExpressionStatement	r = VT_SYM | VT_CONST	2103:4:49115:49136	6302974	0	True				
ANR	6304291	AssignmentExpression	r = VT_SYM | VT_CONST		6302974	0		=			
ANR	6304292	Identifier	r		6302974	0					
ANR	6304293	InclusiveOrExpression	VT_SYM | VT_CONST		6302974	1		|			
ANR	6304294	Identifier	VT_SYM		6302974	0					
ANR	6304295	Identifier	VT_CONST		6302974	1					
ANR	6304296	ElseStatement	else		6302974	0					
ANR	6304297	CompoundStatement		274:10:5903:5903	6302974	0					
ANR	6304298	ExpressionStatement	r = s -> r	2105:4:49154:49162	6302974	0	True				
ANR	6304299	AssignmentExpression	r = s -> r		6302974	0		=			
ANR	6304300	Identifier	r		6302974	0					
ANR	6304301	PtrMemberAccess	s -> r		6302974	1					
ANR	6304302	Identifier	s		6302974	0					
ANR	6304303	Identifier	r		6302974	1					
ANR	6304304	ExpressionStatement	"vset ( & s -> type , r , s -> c )"	2107:3:49172:49196	6302974	1	True				
ANR	6304305	CallExpression	"vset ( & s -> type , r , s -> c )"		6302974	0					
ANR	6304306	Callee	vset		6302974	0					
ANR	6304307	Identifier	vset		6302974	0					
ANR	6304308	ArgumentList	& s -> type		6302974	1					
ANR	6304309	Argument	& s -> type		6302974	0					
ANR	6304310	UnaryOperationExpression	& s -> type		6302974	0					
ANR	6304311	UnaryOperator	&		6302974	0					
ANR	6304312	PtrMemberAccess	s -> type		6302974	1					
ANR	6304313	Identifier	s		6302974	0					
ANR	6304314	Identifier	type		6302974	1					
ANR	6304315	Argument	r		6302974	1					
ANR	6304316	Identifier	r		6302974	0					
ANR	6304317	Argument	s -> c		6302974	2					
ANR	6304318	PtrMemberAccess	s -> c		6302974	0					
ANR	6304319	Identifier	s		6302974	0					
ANR	6304320	Identifier	c		6302974	1					
ANR	6304321	IfStatement	if ( vtop -> r & VT_SYM )		6302974	2					
ANR	6304322	Condition	vtop -> r & VT_SYM	2109:7:49255:49270	6302974	0	True				
ANR	6304323	BitAndExpression	vtop -> r & VT_SYM		6302974	0		&			
ANR	6304324	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6304325	Identifier	vtop		6302974	0					
ANR	6304326	Identifier	r		6302974	1					
ANR	6304327	Identifier	VT_SYM		6302974	1					
ANR	6304328	CompoundStatement		279:25:6028:6028	6302974	1					
ANR	6304329	ExpressionStatement	vtop -> sym = s	2110:4:49279:49292	6302974	0	True				
ANR	6304330	AssignmentExpression	vtop -> sym = s		6302974	0		=			
ANR	6304331	PtrMemberAccess	vtop -> sym		6302974	0					
ANR	6304332	Identifier	vtop		6302974	0					
ANR	6304333	Identifier	sym		6302974	1					
ANR	6304334	Identifier	s		6302974	1					
ANR	6304335	ExpressionStatement	vtop -> c . ul = 0	2111:4:49298:49312	6302974	1	True				
ANR	6304336	AssignmentExpression	vtop -> c . ul = 0		6302974	0		=			
ANR	6304337	MemberAccess	vtop -> c . ul		6302974	0					
ANR	6304338	PtrMemberAccess	vtop -> c		6302974	0					
ANR	6304339	Identifier	vtop		6302974	0					
ANR	6304340	Identifier	c		6302974	1					
ANR	6304341	Identifier	ul		6302974	1					
ANR	6304342	PrimaryExpression	0		6302974	1					
ANR	6304343	BreakStatement	break ;	2114:2:49325:49330	6302974	132	True				
ANR	6304344	WhileStatement	while ( 1 )		6302974	10					
ANR	6304345	Condition	1	2118:8:49367:49367	6302974	0	True				
ANR	6304346	PrimaryExpression	1		6302974	0					
ANR	6304347	CompoundStatement		288:11:6125:6125	6302974	1					
ANR	6304348	IfStatement	if ( tok == '.' || tok == TOK_ARROW )		6302974	0					
ANR	6304349	Condition	tok == '.' || tok == TOK_ARROW	2119:6:49378:49407	6302974	0	True				
ANR	6304350	OrExpression	tok == '.' || tok == TOK_ARROW		6302974	0		||			
ANR	6304351	EqualityExpression	tok == '.'		6302974	0		==			
ANR	6304352	Identifier	tok		6302974	0					
ANR	6304353	PrimaryExpression	'.'		6302974	1					
ANR	6304354	EqualityExpression	tok == TOK_ARROW		6302974	1		==			
ANR	6304355	Identifier	tok		6302974	0					
ANR	6304356	Identifier	TOK_ARROW		6302974	1					
ANR	6304357	CompoundStatement		290:3:6170:6184	6302974	1					
ANR	6304358	IdentifierDeclStatement	int qualifiers ;	2120:3:49415:49429	6302974	0	True				
ANR	6304359	IdentifierDecl	qualifiers		6302974	0					
ANR	6304360	IdentifierDeclType	int		6302974	0					
ANR	6304361	Identifier	qualifiers		6302974	1					
ANR	6304362	IfStatement	if ( tok == TOK_ARROW )		6302974	1					
ANR	6304363	Condition	tok == TOK_ARROW	2122:7:49453:49468	6302974	0	True				
ANR	6304364	EqualityExpression	tok == TOK_ARROW		6302974	0		==			
ANR	6304365	Identifier	tok		6302974	0					
ANR	6304366	Identifier	TOK_ARROW		6302974	1					
ANR	6304367	CompoundStatement		292:25:6226:6226	6302974	1					
ANR	6304368	ExpressionStatement	indir ( )	2123:4:49477:49485	6302974	0	True				
ANR	6304369	CallExpression	indir ( )		6302974	0					
ANR	6304370	Callee	indir		6302974	0					
ANR	6304371	Identifier	indir		6302974	0					
ANR	6304372	ArgumentList			6302974	1					
ANR	6304373	ExpressionStatement	qualifiers = vtop -> type . t & ( VT_CONSTANT | VT_VOLATILE )	2125:3:49495:49550	6302974	2	True				
ANR	6304374	AssignmentExpression	qualifiers = vtop -> type . t & ( VT_CONSTANT | VT_VOLATILE )		6302974	0		=			
ANR	6304375	Identifier	qualifiers		6302974	0					
ANR	6304376	BitAndExpression	vtop -> type . t & ( VT_CONSTANT | VT_VOLATILE )		6302974	1		&			
ANR	6304377	MemberAccess	vtop -> type . t		6302974	0					
ANR	6304378	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304379	Identifier	vtop		6302974	0					
ANR	6304380	Identifier	type		6302974	1					
ANR	6304381	Identifier	t		6302974	1					
ANR	6304382	InclusiveOrExpression	VT_CONSTANT | VT_VOLATILE		6302974	1		|			
ANR	6304383	Identifier	VT_CONSTANT		6302974	0					
ANR	6304384	Identifier	VT_VOLATILE		6302974	1					
ANR	6304385	ExpressionStatement	test_lvalue ( )	2126:3:49555:49569	6302974	3	True				
ANR	6304386	CallExpression	test_lvalue ( )		6302974	0					
ANR	6304387	Callee	test_lvalue		6302974	0					
ANR	6304388	Identifier	test_lvalue		6302974	0					
ANR	6304389	ArgumentList			6302974	1					
ANR	6304390	ExpressionStatement	gaddrof ( )	2127:3:49574:49584	6302974	4	True				
ANR	6304391	CallExpression	gaddrof ( )		6302974	0					
ANR	6304392	Callee	gaddrof		6302974	0					
ANR	6304393	Identifier	gaddrof		6302974	0					
ANR	6304394	ArgumentList			6302974	1					
ANR	6304395	ExpressionStatement	next ( )	2128:3:49589:49596	6302974	5	True				
ANR	6304396	CallExpression	next ( )		6302974	0					
ANR	6304397	Callee	next		6302974	0					
ANR	6304398	Identifier	next		6302974	0					
ANR	6304399	ArgumentList			6302974	1					
ANR	6304400	IfStatement	if ( not_structured ( & vtop -> type ) )		6302974	6					
ANR	6304401	Condition	not_structured ( & vtop -> type )	2130:7:49642:49668	6302974	0	True				
ANR	6304402	CallExpression	not_structured ( & vtop -> type )		6302974	0					
ANR	6304403	Callee	not_structured		6302974	0					
ANR	6304404	Identifier	not_structured		6302974	0					
ANR	6304405	ArgumentList	& vtop -> type		6302974	1					
ANR	6304406	Argument	& vtop -> type		6302974	0					
ANR	6304407	UnaryOperationExpression	& vtop -> type		6302974	0					
ANR	6304408	UnaryOperator	&		6302974	0					
ANR	6304409	PtrMemberAccess	vtop -> type		6302974	1					
ANR	6304410	Identifier	vtop		6302974	0					
ANR	6304411	Identifier	type		6302974	1					
ANR	6304412	CompoundStatement		300:36:6426:6426	6302974	1					
ANR	6304413	ExpressionStatement	"expect ( ""struct or union"" )"	2131:4:49677:49703	6302974	0	True				
ANR	6304414	CallExpression	"expect ( ""struct or union"" )"		6302974	0					
ANR	6304415	Callee	expect		6302974	0					
ANR	6304416	Identifier	expect		6302974	0					
ANR	6304417	ArgumentList	"""struct or union"""		6302974	1					
ANR	6304418	Argument	"""struct or union"""		6302974	0					
ANR	6304419	PrimaryExpression	"""struct or union"""		6302974	0					
ANR	6304420	ExpressionStatement	s = vtop -> type . ref	2133:3:49713:49731	6302974	7	True				
ANR	6304421	AssignmentExpression	s = vtop -> type . ref		6302974	0		=			
ANR	6304422	Identifier	s		6302974	0					
ANR	6304423	MemberAccess	vtop -> type . ref		6302974	1					
ANR	6304424	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304425	Identifier	vtop		6302974	0					
ANR	6304426	Identifier	type		6302974	1					
ANR	6304427	Identifier	ref		6302974	1					
ANR	6304428	ExpressionStatement	tok |= SYM_FIELD	2135:3:49756:49772	6302974	8	True				
ANR	6304429	AssignmentExpression	tok |= SYM_FIELD		6302974	0		|=			
ANR	6304430	Identifier	tok		6302974	0					
ANR	6304431	Identifier	SYM_FIELD		6302974	1					
ANR	6304432	WhileStatement	while ( ( s = s -> next ) != NULL )		6302974	9					
ANR	6304433	Condition	( s = s -> next ) != NULL	2136:10:49784:49804	6302974	0	True				
ANR	6304434	EqualityExpression	( s = s -> next ) != NULL		6302974	0		!=			
ANR	6304435	AssignmentExpression	s = s -> next		6302974	0		=			
ANR	6304436	Identifier	s		6302974	0					
ANR	6304437	PtrMemberAccess	s -> next		6302974	1					
ANR	6304438	Identifier	s		6302974	0					
ANR	6304439	Identifier	next		6302974	1					
ANR	6304440	Identifier	NULL		6302974	1					
ANR	6304441	CompoundStatement		306:33:6562:6562	6302974	1					
ANR	6304442	IfStatement	if ( s -> v == tok )		6302974	0					
ANR	6304443	Condition	s -> v == tok	2137:8:49817:49827	6302974	0	True				
ANR	6304444	EqualityExpression	s -> v == tok		6302974	0		==			
ANR	6304445	PtrMemberAccess	s -> v		6302974	0					
ANR	6304446	Identifier	s		6302974	0					
ANR	6304447	Identifier	v		6302974	1					
ANR	6304448	Identifier	tok		6302974	1					
ANR	6304449	CompoundStatement		307:21:6585:6585	6302974	1					
ANR	6304450	BreakStatement	break ;	2138:5:49837:49842	6302974	0	True				
ANR	6304451	IfStatement	if ( ! s )		6302974	10					
ANR	6304452	Condition	! s	2141:7:49862:49863	6302974	0	True				
ANR	6304453	UnaryOperationExpression	! s		6302974	0					
ANR	6304454	UnaryOperator	!		6302974	0					
ANR	6304455	Identifier	s		6302974	1					
ANR	6304456	CompoundStatement		311:11:6621:6621	6302974	1					
ANR	6304457	ExpressionStatement	"TCC_ERR ( ""field not found: %s"" , get_tok_str ( tok & ~SYM_FIELD , NULL ) )"	2142:4:49872:49941	6302974	0	True				
ANR	6304458	CallExpression	"TCC_ERR ( ""field not found: %s"" , get_tok_str ( tok & ~SYM_FIELD , NULL ) )"		6302974	0					
ANR	6304459	Callee	TCC_ERR		6302974	0					
ANR	6304460	Identifier	TCC_ERR		6302974	0					
ANR	6304461	ArgumentList	"""field not found: %s"""		6302974	1					
ANR	6304462	Argument	"""field not found: %s"""		6302974	0					
ANR	6304463	PrimaryExpression	"""field not found: %s"""		6302974	0					
ANR	6304464	Argument	"get_tok_str ( tok & ~SYM_FIELD , NULL )"		6302974	1					
ANR	6304465	CallExpression	"get_tok_str ( tok & ~SYM_FIELD , NULL )"		6302974	0					
ANR	6304466	Callee	get_tok_str		6302974	0					
ANR	6304467	Identifier	get_tok_str		6302974	0					
ANR	6304468	ArgumentList	tok & ~SYM_FIELD		6302974	1					
ANR	6304469	Argument	tok & ~SYM_FIELD		6302974	0					
ANR	6304470	BitAndExpression	tok & ~SYM_FIELD		6302974	0		&			
ANR	6304471	Identifier	tok		6302974	0					
ANR	6304472	Identifier	~SYM_FIELD		6302974	1					
ANR	6304473	Argument	NULL		6302974	1					
ANR	6304474	Identifier	NULL		6302974	0					
ANR	6304475	ExpressionStatement	vtop -> type = char_pointer_type	2145:3:49988:50018	6302974	11	True				
ANR	6304476	AssignmentExpression	vtop -> type = char_pointer_type		6302974	0		=			
ANR	6304477	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304478	Identifier	vtop		6302974	0					
ANR	6304479	Identifier	type		6302974	1					
ANR	6304480	Identifier	char_pointer_type		6302974	1					
ANR	6304481	ExpressionStatement	vpushi ( s -> c )	2146:3:50053:50066	6302974	12	True				
ANR	6304482	CallExpression	vpushi ( s -> c )		6302974	0					
ANR	6304483	Callee	vpushi		6302974	0					
ANR	6304484	Identifier	vpushi		6302974	0					
ANR	6304485	ArgumentList	s -> c		6302974	1					
ANR	6304486	Argument	s -> c		6302974	0					
ANR	6304487	PtrMemberAccess	s -> c		6302974	0					
ANR	6304488	Identifier	s		6302974	0					
ANR	6304489	Identifier	c		6302974	1					
ANR	6304490	ExpressionStatement	vtop -> type = s -> type	2148:3:50125:50145	6302974	13	True				
ANR	6304491	AssignmentExpression	vtop -> type = s -> type		6302974	0		=			
ANR	6304492	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304493	Identifier	vtop		6302974	0					
ANR	6304494	Identifier	type		6302974	1					
ANR	6304495	PtrMemberAccess	s -> type		6302974	1					
ANR	6304496	Identifier	s		6302974	0					
ANR	6304497	Identifier	type		6302974	1					
ANR	6304498	ExpressionStatement	vtop -> type . t |= qualifiers	2149:3:50150:50176	6302974	14	True				
ANR	6304499	AssignmentExpression	vtop -> type . t |= qualifiers		6302974	0		|=			
ANR	6304500	MemberAccess	vtop -> type . t		6302974	0					
ANR	6304501	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304502	Identifier	vtop		6302974	0					
ANR	6304503	Identifier	type		6302974	1					
ANR	6304504	Identifier	t		6302974	1					
ANR	6304505	Identifier	qualifiers		6302974	1					
ANR	6304506	IfStatement	if ( ! ( vtop -> type . t & VT_ARRAY ) )		6302974	15					
ANR	6304507	Condition	! ( vtop -> type . t & VT_ARRAY )	2151:7:50222:50247	6302974	0	True				
ANR	6304508	UnaryOperationExpression	! ( vtop -> type . t & VT_ARRAY )		6302974	0					
ANR	6304509	UnaryOperator	!		6302974	0					
ANR	6304510	BitAndExpression	vtop -> type . t & VT_ARRAY		6302974	1		&			
ANR	6304511	MemberAccess	vtop -> type . t		6302974	0					
ANR	6304512	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304513	Identifier	vtop		6302974	0					
ANR	6304514	Identifier	type		6302974	1					
ANR	6304515	Identifier	t		6302974	1					
ANR	6304516	Identifier	VT_ARRAY		6302974	1					
ANR	6304517	CompoundStatement		321:35:7005:7005	6302974	1					
ANR	6304518	ExpressionStatement	vtop -> r |= lvalue_type ( vtop -> type . t )	2152:4:50256:50293	6302974	0	True				
ANR	6304519	AssignmentExpression	vtop -> r |= lvalue_type ( vtop -> type . t )		6302974	0		|=			
ANR	6304520	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6304521	Identifier	vtop		6302974	0					
ANR	6304522	Identifier	r		6302974	1					
ANR	6304523	CallExpression	lvalue_type ( vtop -> type . t )		6302974	1					
ANR	6304524	Callee	lvalue_type		6302974	0					
ANR	6304525	Identifier	lvalue_type		6302974	0					
ANR	6304526	ArgumentList	vtop -> type . t		6302974	1					
ANR	6304527	Argument	vtop -> type . t		6302974	0					
ANR	6304528	MemberAccess	vtop -> type . t		6302974	0					
ANR	6304529	PtrMemberAccess	vtop -> type		6302974	0					
ANR	6304530	Identifier	vtop		6302974	0					
ANR	6304531	Identifier	type		6302974	1					
ANR	6304532	Identifier	t		6302974	1					
ANR	6304533	IfStatement	if ( tcc_state -> do_bounds_check )		6302974	1					
ANR	6304534	Condition	tcc_state -> do_bounds_check	2155:8:50396:50421	6302974	0	True				
ANR	6304535	PtrMemberAccess	tcc_state -> do_bounds_check		6302974	0					
ANR	6304536	Identifier	tcc_state		6302974	0					
ANR	6304537	Identifier	do_bounds_check		6302974	1					
ANR	6304538	CompoundStatement		325:36:7179:7179	6302974	1					
ANR	6304539	ExpressionStatement	vtop -> r |= VT_MUSTBOUND	2156:5:50431:50454	6302974	0	True				
ANR	6304540	AssignmentExpression	vtop -> r |= VT_MUSTBOUND		6302974	0		|=			
ANR	6304541	PtrMemberAccess	vtop -> r		6302974	0					
ANR	6304542	Identifier	vtop		6302974	0					
ANR	6304543	Identifier	r		6302974	1					
ANR	6304544	Identifier	VT_MUSTBOUND		6302974	1					
ANR	6304545	ExpressionStatement	next ( )	2160:3:50477:50484	6302974	16	True				
ANR	6304546	CallExpression	next ( )		6302974	0					
ANR	6304547	Callee	next		6302974	0					
ANR	6304548	Identifier	next		6302974	0					
ANR	6304549	ArgumentList			6302974	1					
ANR	6304550	ElseStatement	else		6302974	0					
ANR	6304551	IfStatement	if ( tok == '[' )		6302974	0					
ANR	6304552	Condition	tok == '['	2161:13:50499:50508	6302974	0	True				
ANR	6304553	EqualityExpression	tok == '['		6302974	0		==			
ANR	6304554	Identifier	tok		6302974	0					
ANR	6304555	PrimaryExpression	'['		6302974	1					
ANR	6304556	CompoundStatement		331:25:7266:7266	6302974	1					
ANR	6304557	ExpressionStatement	next ( )	2162:3:50516:50523	6302974	0	True				
ANR	6304558	CallExpression	next ( )		6302974	0					
ANR	6304559	Callee	next		6302974	0					
ANR	6304560	Identifier	next		6302974	0					
ANR	6304561	ArgumentList			6302974	1					
ANR	6304562	ExpressionStatement	gexpr ( )	2163:3:50528:50536	6302974	1	True				
ANR	6304563	CallExpression	gexpr ( )		6302974	0					
ANR	6304564	Callee	gexpr		6302974	0					
ANR	6304565	Identifier	gexpr		6302974	0					
ANR	6304566	ArgumentList			6302974	1					
ANR	6304567	ExpressionStatement	indir ( )	2164:3:50541:50549	6302974	2	True				
ANR	6304568	CallExpression	indir ( )		6302974	0					
ANR	6304569	Callee	indir		6302974	0					
ANR	6304570	Identifier	indir		6302974	0					
ANR	6304571	ArgumentList			6302974	1					
ANR	6304572	ExpressionStatement	skip ( ']' )	2165:3:50554:50564	6302974	3	True				
ANR	6304573	CallExpression	skip ( ']' )		6302974	0					
ANR	6304574	Callee	skip		6302974	0					
ANR	6304575	Identifier	skip		6302974	0					
ANR	6304576	ArgumentList	']'		6302974	1					
ANR	6304577	Argument	']'		6302974	0					
ANR	6304578	PrimaryExpression	']'		6302974	0					
ANR	6304579	ElseStatement	else		6302974	0					
ANR	6304580	CompoundStatement		342:9:7419:7419	6302974	0					
ANR	6304581	BreakStatement	break ;	2173:3:50669:50674	6302974	0	True				
ANR	6304582	ReturnType	ST_FUNC void		6302974	1					
ANR	6304583	Identifier	unary		6302974	2					
ANR	6304584	ParameterList			6302974	3					
ANR	6304585	CFGEntryNode	ENTRY		6302974		True				
ANR	6304586	CFGExitNode	EXIT		6302974		True				
ANR	6304587	Symbol	funcname		6302974						
ANR	6304588	Symbol	VT_INT16		6302974						
ANR	6304589	Symbol	VT_LDOUBLE		6302974						
ANR	6304590	Symbol	vtop -> c . ul		6302974						
ANR	6304591	Symbol	type		6302974						
ANR	6304592	Symbol	strncmp		6302974						
ANR	6304593	Symbol	type_size		6302974						
ANR	6304594	Symbol	len		6302974						
ANR	6304595	Symbol	vtop -> sym		6302974						
ANR	6304596	Symbol	* type . ref		6302974						
ANR	6304597	Symbol	type . ref		6302974						
ANR	6304598	Symbol	VT_LVAL		6302974						
ANR	6304599	Symbol	parse_btype		6302974						
ANR	6304600	Symbol	TOK_CINT		6302974						
ANR	6304601	Symbol	TOK_ARROW		6302974						
ANR	6304602	Symbol	ad		6302974						
ANR	6304603	Symbol	gnu_ext		6302974						
ANR	6304604	Symbol	tokc		6302974						
ANR	6304605	Symbol	& type		6302974						
ANR	6304606	Symbol	VT_CONSTANT		6302974						
ANR	6304607	Symbol	VT_INT8		6302974						
ANR	6304608	Symbol	vtop		6302974						
ANR	6304609	Symbol	qualifiers		6302974						
ANR	6304610	Symbol	VT_LOCAL		6302974						
ANR	6304611	Symbol	VT_SYM		6302974						
ANR	6304612	Symbol	VT_FLOAT		6302974						
ANR	6304613	Symbol	size		6302974						
ANR	6304614	Symbol	vtop -> type . ref		6302974						
ANR	6304615	Symbol	s -> v		6302974						
ANR	6304616	Symbol	s -> r		6302974						
ANR	6304617	Symbol	type2 . t		6302974						
ANR	6304618	Symbol	vtop -> c		6302974						
ANR	6304619	Symbol	s -> next		6302974						
ANR	6304620	Symbol	& ad		6302974						
ANR	6304621	Symbol	s -> type . t		6302974						
ANR	6304622	Symbol	tok		6302974						
ANR	6304623	Symbol	VT_UNSIGNED		6302974						
ANR	6304624	Symbol	is_compatible_types		6302974						
ANR	6304625	Symbol	s -> c		6302974						
ANR	6304626	Symbol	sym_find		6302974						
ANR	6304627	Symbol	vtop -> type . t		6302974						
ANR	6304628	Symbol	TOK_UIDENT		6302974						
ANR	6304629	Symbol	vtop -> c . i		6302974						
ANR	6304630	Symbol	& s -> type		6302974						
ANR	6304631	Symbol	VT_VOID		6302974						
ANR	6304632	Symbol	VT_INLINE		6302974						
ANR	6304633	Symbol	n		6302974						
ANR	6304634	Symbol	r		6302974						
ANR	6304635	Symbol	in_sizeof		6302974						
ANR	6304636	Symbol	s		6302974						
ANR	6304637	Symbol	~SYM_FIELD		6302974						
ANR	6304638	Symbol	t		6302974						
ANR	6304639	Symbol	tcc_state -> bits		6302974						
ANR	6304640	Symbol	VT_INT64		6302974						
ANR	6304641	Symbol	vtop -> r		6302974						
ANR	6304642	Symbol	type . ref -> c		6302974						
ANR	6304643	Symbol	VT_ARRAY		6302974						
ANR	6304644	Symbol	get_tok_str		6302974						
ANR	6304645	Symbol	tcc_state -> arch		6302974						
ANR	6304646	Symbol	* tcc_state		6302974						
ANR	6304647	Symbol	type . t		6302974						
ANR	6304648	Symbol	align		6302974						
ANR	6304649	Symbol	strlen		6302974						
ANR	6304650	Symbol	VT_VOLATILE		6302974						
ANR	6304651	Symbol	SYM_FIELD		6302974						
ANR	6304652	Symbol	tokc . i		6302974						
ANR	6304653	Symbol	tcc_state		6302974						
ANR	6304654	Symbol	VT_CONST		6302974						
ANR	6304655	Symbol	res		6302974						
ANR	6304656	Symbol	tcc_state -> do_bounds_check		6302974						
ANR	6304657	Symbol	VT_MUSTBOUND		6302974						
ANR	6304658	Symbol	NULL		6302974						
ANR	6304659	Symbol	type2		6302974						
ANR	6304660	Symbol	level		6302974						
ANR	6304661	Symbol	VT_DOUBLE		6302974						
ANR	6304662	Symbol	VT_CMP		6302974						
ANR	6304663	Symbol	VT_VALMASK		6302974						
ANR	6304664	Symbol	type1		6302974						
ANR	6304665	Symbol	VT_BTYPE		6302974						
ANR	6304666	Symbol	VT_FUNC		6302974						
ANR	6304667	Symbol	tcc_state -> os		6302974						
ANR	6304668	Symbol	s -> type		6302974						
ANR	6304669	Symbol	VT_STATIC		6302974						
ANR	6304670	Symbol	not_structured		6302974						
ANR	6304671	Symbol	tcc_state -> warn_write_strings		6302974						
ANR	6304672	Symbol	global_expr		6302974						
ANR	6304673	Symbol	CType		6302974						
ANR	6304674	Symbol	VT_VLA		6302974						
ANR	6304675	Symbol	saved_nocode_wanted		6302974						
ANR	6304676	Symbol	* type		6302974						
ANR	6304677	Symbol	& align		6302974						
ANR	6304678	Symbol	nocode_wanted		6302974						
ANR	6304679	Symbol	VT_INT32		6302974						
ANR	6304680	Symbol	type1 . t		6302974						
ANR	6304681	Symbol	& type2		6302974						
ANR	6304682	Symbol	TYPE_ABSTRACT		6302974						
ANR	6304683	Symbol	& type1		6302974						
ANR	6304684	Symbol	vtop -> type		6302974						
ANR	6304685	Symbol	sizeof_caller		6302974						
ANR	6304686	Symbol	* vtop		6302974						
ANR	6304687	Symbol	lvalue_type		6302974						
ANR	6304688	Symbol	& n		6302974						
ANR	6304689	Symbol	TOK_SIZEOF		6302974						
ANR	6304690	Symbol	char_pointer_type		6302974						
ANR	6304691	Symbol	* s		6302974						
ANR	6304692	Symbol	& vtop -> type		6302974						
ANR	6304693	Symbol	VT_REF		6302974						
ANR	6304694	Function	expr_prod	2178:0:50686:50804							
ANR	6304695	FunctionDef	expr_prod ()		6304694	0					
ANR	6304696	CompoundStatement		2178:29:50715:50804	6304694	0					
ANR	6304697	ExpressionStatement	unary ( )	2179:1:50718:50726	6304694	0	True				
ANR	6304698	CallExpression	unary ( )		6304694	0					
ANR	6304699	Callee	unary		6304694	0					
ANR	6304700	Identifier	unary		6304694	0					
ANR	6304701	ArgumentList			6304694	1					
ANR	6304702	WhileStatement	while ( tok == '*' || tok == '/' || tok == '%' )		6304694	1					
ANR	6304703	Condition	tok == '*' || tok == '/' || tok == '%'	2180:8:50736:50773	6304694	0	True				
ANR	6304704	OrExpression	tok == '*' || tok == '/' || tok == '%'		6304694	0		||			
ANR	6304705	EqualityExpression	tok == '*'		6304694	0		==			
ANR	6304706	Identifier	tok		6304694	0					
ANR	6304707	PrimaryExpression	'*'		6304694	1					
ANR	6304708	OrExpression	tok == '/' || tok == '%'		6304694	1		||			
ANR	6304709	EqualityExpression	tok == '/'		6304694	0		==			
ANR	6304710	Identifier	tok		6304694	0					
ANR	6304711	PrimaryExpression	'/'		6304694	1					
ANR	6304712	EqualityExpression	tok == '%'		6304694	1		==			
ANR	6304713	Identifier	tok		6304694	0					
ANR	6304714	PrimaryExpression	'%'		6304694	1					
ANR	6304715	CompoundStatement		3:48:60:60	6304694	1					
ANR	6304716	ExpressionStatement	next ( )	2181:2:50780:50787	6304694	0	True				
ANR	6304717	CallExpression	next ( )		6304694	0					
ANR	6304718	Callee	next		6304694	0					
ANR	6304719	Identifier	next		6304694	0					
ANR	6304720	ArgumentList			6304694	1					
ANR	6304721	ExpressionStatement	unary ( )	2182:2:50791:50799	6304694	1	True				
ANR	6304722	CallExpression	unary ( )		6304694	0					
ANR	6304723	Callee	unary		6304694	0					
ANR	6304724	Identifier	unary		6304694	0					
ANR	6304725	ArgumentList			6304694	1					
ANR	6304726	ReturnType	ST_FUNC void		6304694	1					
ANR	6304727	Identifier	expr_prod		6304694	2					
ANR	6304728	ParameterList			6304694	3					
ANR	6304729	CFGEntryNode	ENTRY		6304694		True				
ANR	6304730	CFGExitNode	EXIT		6304694		True				
ANR	6304731	Symbol	tok		6304694						
ANR	6304732	Function	expr_sum	2186:0:50807:50918							
ANR	6304733	FunctionDef	expr_sum ()		6304732	0					
ANR	6304734	CompoundStatement		2186:28:50835:50918	6304732	0					
ANR	6304735	ExpressionStatement	expr_prod ( )	2187:1:50838:50850	6304732	0	True				
ANR	6304736	CallExpression	expr_prod ( )		6304732	0					
ANR	6304737	Callee	expr_prod		6304732	0					
ANR	6304738	Identifier	expr_prod		6304732	0					
ANR	6304739	ArgumentList			6304732	1					
ANR	6304740	WhileStatement	while ( tok == '+' || tok == '-' )		6304732	1					
ANR	6304741	Condition	tok == '+' || tok == '-'	2188:8:50860:50883	6304732	0	True				
ANR	6304742	OrExpression	tok == '+' || tok == '-'		6304732	0		||			
ANR	6304743	EqualityExpression	tok == '+'		6304732	0		==			
ANR	6304744	Identifier	tok		6304732	0					
ANR	6304745	PrimaryExpression	'+'		6304732	1					
ANR	6304746	EqualityExpression	tok == '-'		6304732	1		==			
ANR	6304747	Identifier	tok		6304732	0					
ANR	6304748	PrimaryExpression	'-'		6304732	1					
ANR	6304749	CompoundStatement		3:34:50:50	6304732	1					
ANR	6304750	ExpressionStatement	next ( )	2189:2:50890:50897	6304732	0	True				
ANR	6304751	CallExpression	next ( )		6304732	0					
ANR	6304752	Callee	next		6304732	0					
ANR	6304753	Identifier	next		6304732	0					
ANR	6304754	ArgumentList			6304732	1					
ANR	6304755	ExpressionStatement	expr_prod ( )	2190:2:50901:50913	6304732	1	True				
ANR	6304756	CallExpression	expr_prod ( )		6304732	0					
ANR	6304757	Callee	expr_prod		6304732	0					
ANR	6304758	Identifier	expr_prod		6304732	0					
ANR	6304759	ArgumentList			6304732	1					
ANR	6304760	ReturnType	ST_FUNC void		6304732	1					
ANR	6304761	Identifier	expr_sum		6304732	2					
ANR	6304762	ParameterList			6304732	3					
ANR	6304763	CFGEntryNode	ENTRY		6304732		True				
ANR	6304764	CFGExitNode	EXIT		6304732		True				
ANR	6304765	Symbol	tok		6304732						
ANR	6304766	Function	expr_shift	2194:0:50921:51039							
ANR	6304767	FunctionDef	expr_shift ()		6304766	0					
ANR	6304768	CompoundStatement		2194:29:50950:51039	6304766	0					
ANR	6304769	ExpressionStatement	expr_sum ( )	2195:1:50953:50964	6304766	0	True				
ANR	6304770	CallExpression	expr_sum ( )		6304766	0					
ANR	6304771	Callee	expr_sum		6304766	0					
ANR	6304772	Identifier	expr_sum		6304766	0					
ANR	6304773	ArgumentList			6304766	1					
ANR	6304774	WhileStatement	while ( tok == TOK_SHL || tok == TOK_SAR )		6304766	1					
ANR	6304775	Condition	tok == TOK_SHL || tok == TOK_SAR	2196:8:50974:51005	6304766	0	True				
ANR	6304776	OrExpression	tok == TOK_SHL || tok == TOK_SAR		6304766	0		||			
ANR	6304777	EqualityExpression	tok == TOK_SHL		6304766	0		==			
ANR	6304778	Identifier	tok		6304766	0					
ANR	6304779	Identifier	TOK_SHL		6304766	1					
ANR	6304780	EqualityExpression	tok == TOK_SAR		6304766	1		==			
ANR	6304781	Identifier	tok		6304766	0					
ANR	6304782	Identifier	TOK_SAR		6304766	1					
ANR	6304783	CompoundStatement		3:42:57:57	6304766	1					
ANR	6304784	ExpressionStatement	next ( )	2197:2:51012:51019	6304766	0	True				
ANR	6304785	CallExpression	next ( )		6304766	0					
ANR	6304786	Callee	next		6304766	0					
ANR	6304787	Identifier	next		6304766	0					
ANR	6304788	ArgumentList			6304766	1					
ANR	6304789	ExpressionStatement	expr_sum ( )	2198:2:51023:51034	6304766	1	True				
ANR	6304790	CallExpression	expr_sum ( )		6304766	0					
ANR	6304791	Callee	expr_sum		6304766	0					
ANR	6304792	Identifier	expr_sum		6304766	0					
ANR	6304793	ArgumentList			6304766	1					
ANR	6304794	ReturnType	static void		6304766	1					
ANR	6304795	Identifier	expr_shift		6304766	2					
ANR	6304796	ParameterList			6304766	3					
ANR	6304797	CFGEntryNode	ENTRY		6304766		True				
ANR	6304798	CFGExitNode	EXIT		6304766		True				
ANR	6304799	Symbol	tok		6304766						
ANR	6304800	Symbol	TOK_SAR		6304766						
ANR	6304801	Symbol	TOK_SHL		6304766						
ANR	6304802	Function	expr_cmp	2202:0:51042:51207							
ANR	6304803	FunctionDef	expr_cmp ()		6304802	0					
ANR	6304804	CompoundStatement		2202:27:51069:51207	6304802	0					
ANR	6304805	ExpressionStatement	expr_shift ( )	2203:1:51072:51085	6304802	0	True				
ANR	6304806	CallExpression	expr_shift ( )		6304802	0					
ANR	6304807	Callee	expr_shift		6304802	0					
ANR	6304808	Identifier	expr_shift		6304802	0					
ANR	6304809	ArgumentList			6304802	1					
ANR	6304810	WhileStatement	while ( ( tok >= TOK_ULE && tok <= TOK_GT ) || tok == TOK_ULT || tok == TOK_UGE )		6304802	1					
ANR	6304811	Condition	( tok >= TOK_ULE && tok <= TOK_GT ) || tok == TOK_ULT || tok == TOK_UGE	2204:8:51095:51171	6304802	0	True				
ANR	6304812	OrExpression	( tok >= TOK_ULE && tok <= TOK_GT ) || tok == TOK_ULT || tok == TOK_UGE		6304802	0		||			
ANR	6304813	AndExpression	tok >= TOK_ULE && tok <= TOK_GT		6304802	0		&&			
ANR	6304814	RelationalExpression	tok >= TOK_ULE		6304802	0		>=			
ANR	6304815	Identifier	tok		6304802	0					
ANR	6304816	Identifier	TOK_ULE		6304802	1					
ANR	6304817	RelationalExpression	tok <= TOK_GT		6304802	1		<=			
ANR	6304818	Identifier	tok		6304802	0					
ANR	6304819	Identifier	TOK_GT		6304802	1					
ANR	6304820	OrExpression	tok == TOK_ULT || tok == TOK_UGE		6304802	1		||			
ANR	6304821	EqualityExpression	tok == TOK_ULT		6304802	0		==			
ANR	6304822	Identifier	tok		6304802	0					
ANR	6304823	Identifier	TOK_ULT		6304802	1					
ANR	6304824	EqualityExpression	tok == TOK_UGE		6304802	1		==			
ANR	6304825	Identifier	tok		6304802	0					
ANR	6304826	Identifier	TOK_UGE		6304802	1					
ANR	6304827	CompoundStatement		4:42:104:104	6304802	1					
ANR	6304828	ExpressionStatement	next ( )	2206:2:51178:51185	6304802	0	True				
ANR	6304829	CallExpression	next ( )		6304802	0					
ANR	6304830	Callee	next		6304802	0					
ANR	6304831	Identifier	next		6304802	0					
ANR	6304832	ArgumentList			6304802	1					
ANR	6304833	ExpressionStatement	expr_shift ( )	2207:2:51189:51202	6304802	1	True				
ANR	6304834	CallExpression	expr_shift ( )		6304802	0					
ANR	6304835	Callee	expr_shift		6304802	0					
ANR	6304836	Identifier	expr_shift		6304802	0					
ANR	6304837	ArgumentList			6304802	1					
ANR	6304838	ReturnType	static void		6304802	1					
ANR	6304839	Identifier	expr_cmp		6304802	2					
ANR	6304840	ParameterList			6304802	3					
ANR	6304841	CFGEntryNode	ENTRY		6304802		True				
ANR	6304842	CFGExitNode	EXIT		6304802		True				
ANR	6304843	Symbol	tok		6304802						
ANR	6304844	Symbol	TOK_UGE		6304802						
ANR	6304845	Symbol	TOK_ULE		6304802						
ANR	6304846	Symbol	TOK_ULT		6304802						
ANR	6304847	Symbol	TOK_GT		6304802						
ANR	6304848	Function	expr_cmpeq	2211:0:51210:51326							
ANR	6304849	FunctionDef	expr_cmpeq ()		6304848	0					
ANR	6304850	CompoundStatement		2211:29:51239:51326	6304848	0					
ANR	6304851	ExpressionStatement	expr_cmp ( )	2212:1:51242:51253	6304848	0	True				
ANR	6304852	CallExpression	expr_cmp ( )		6304848	0					
ANR	6304853	Callee	expr_cmp		6304848	0					
ANR	6304854	Identifier	expr_cmp		6304848	0					
ANR	6304855	ArgumentList			6304848	1					
ANR	6304856	WhileStatement	while ( tok == TOK_EQ || tok == TOK_NE )		6304848	1					
ANR	6304857	Condition	tok == TOK_EQ || tok == TOK_NE	2213:8:51263:51292	6304848	0	True				
ANR	6304858	OrExpression	tok == TOK_EQ || tok == TOK_NE		6304848	0		||			
ANR	6304859	EqualityExpression	tok == TOK_EQ		6304848	0		==			
ANR	6304860	Identifier	tok		6304848	0					
ANR	6304861	Identifier	TOK_EQ		6304848	1					
ANR	6304862	EqualityExpression	tok == TOK_NE		6304848	1		==			
ANR	6304863	Identifier	tok		6304848	0					
ANR	6304864	Identifier	TOK_NE		6304848	1					
ANR	6304865	CompoundStatement		3:40:55:55	6304848	1					
ANR	6304866	ExpressionStatement	next ( )	2214:2:51299:51306	6304848	0	True				
ANR	6304867	CallExpression	next ( )		6304848	0					
ANR	6304868	Callee	next		6304848	0					
ANR	6304869	Identifier	next		6304848	0					
ANR	6304870	ArgumentList			6304848	1					
ANR	6304871	ExpressionStatement	expr_cmp ( )	2215:2:51310:51321	6304848	1	True				
ANR	6304872	CallExpression	expr_cmp ( )		6304848	0					
ANR	6304873	Callee	expr_cmp		6304848	0					
ANR	6304874	Identifier	expr_cmp		6304848	0					
ANR	6304875	ArgumentList			6304848	1					
ANR	6304876	ReturnType	static void		6304848	1					
ANR	6304877	Identifier	expr_cmpeq		6304848	2					
ANR	6304878	ParameterList			6304848	3					
ANR	6304879	CFGEntryNode	ENTRY		6304848		True				
ANR	6304880	CFGExitNode	EXIT		6304848		True				
ANR	6304881	Symbol	tok		6304848						
ANR	6304882	Symbol	TOK_NE		6304848						
ANR	6304883	Symbol	TOK_EQ		6304848						
ANR	6304884	Function	expr_and	2219:0:51329:51427							
ANR	6304885	FunctionDef	expr_and ()		6304884	0					
ANR	6304886	CompoundStatement		2219:27:51356:51427	6304884	0					
ANR	6304887	ExpressionStatement	expr_cmpeq ( )	2220:1:51359:51372	6304884	0	True				
ANR	6304888	CallExpression	expr_cmpeq ( )		6304884	0					
ANR	6304889	Callee	expr_cmpeq		6304884	0					
ANR	6304890	Identifier	expr_cmpeq		6304884	0					
ANR	6304891	ArgumentList			6304884	1					
ANR	6304892	WhileStatement	while ( tok == '&' )		6304884	1					
ANR	6304893	Condition	tok == '&'	2221:8:51382:51391	6304884	0	True				
ANR	6304894	EqualityExpression	tok == '&'		6304884	0		==			
ANR	6304895	Identifier	tok		6304884	0					
ANR	6304896	PrimaryExpression	'&'		6304884	1					
ANR	6304897	CompoundStatement		3:20:37:37	6304884	1					
ANR	6304898	ExpressionStatement	next ( )	2222:2:51398:51405	6304884	0	True				
ANR	6304899	CallExpression	next ( )		6304884	0					
ANR	6304900	Callee	next		6304884	0					
ANR	6304901	Identifier	next		6304884	0					
ANR	6304902	ArgumentList			6304884	1					
ANR	6304903	ExpressionStatement	expr_cmpeq ( )	2223:2:51409:51422	6304884	1	True				
ANR	6304904	CallExpression	expr_cmpeq ( )		6304884	0					
ANR	6304905	Callee	expr_cmpeq		6304884	0					
ANR	6304906	Identifier	expr_cmpeq		6304884	0					
ANR	6304907	ArgumentList			6304884	1					
ANR	6304908	ReturnType	static void		6304884	1					
ANR	6304909	Identifier	expr_and		6304884	2					
ANR	6304910	ParameterList			6304884	3					
ANR	6304911	CFGEntryNode	ENTRY		6304884		True				
ANR	6304912	CFGExitNode	EXIT		6304884		True				
ANR	6304913	Symbol	tok		6304884						
ANR	6304914	Function	expr_xor	2227:0:51430:51524							
ANR	6304915	FunctionDef	expr_xor ()		6304914	0					
ANR	6304916	CompoundStatement		2227:27:51457:51524	6304914	0					
ANR	6304917	ExpressionStatement	expr_and ( )	2228:1:51460:51471	6304914	0	True				
ANR	6304918	CallExpression	expr_and ( )		6304914	0					
ANR	6304919	Callee	expr_and		6304914	0					
ANR	6304920	Identifier	expr_and		6304914	0					
ANR	6304921	ArgumentList			6304914	1					
ANR	6304922	WhileStatement	while ( tok == '^' )		6304914	1					
ANR	6304923	Condition	tok == '^'	2229:8:51481:51490	6304914	0	True				
ANR	6304924	EqualityExpression	tok == '^'		6304914	0		==			
ANR	6304925	Identifier	tok		6304914	0					
ANR	6304926	PrimaryExpression	'^'		6304914	1					
ANR	6304927	CompoundStatement		3:20:35:35	6304914	1					
ANR	6304928	ExpressionStatement	next ( )	2230:2:51497:51504	6304914	0	True				
ANR	6304929	CallExpression	next ( )		6304914	0					
ANR	6304930	Callee	next		6304914	0					
ANR	6304931	Identifier	next		6304914	0					
ANR	6304932	ArgumentList			6304914	1					
ANR	6304933	ExpressionStatement	expr_and ( )	2231:2:51508:51519	6304914	1	True				
ANR	6304934	CallExpression	expr_and ( )		6304914	0					
ANR	6304935	Callee	expr_and		6304914	0					
ANR	6304936	Identifier	expr_and		6304914	0					
ANR	6304937	ArgumentList			6304914	1					
ANR	6304938	ReturnType	static void		6304914	1					
ANR	6304939	Identifier	expr_xor		6304914	2					
ANR	6304940	ParameterList			6304914	3					
ANR	6304941	CFGEntryNode	ENTRY		6304914		True				
ANR	6304942	CFGExitNode	EXIT		6304914		True				
ANR	6304943	Symbol	tok		6304914						
ANR	6304944	Function	expr_or	2235:0:51527:51620							
ANR	6304945	FunctionDef	expr_or ()		6304944	0					
ANR	6304946	CompoundStatement		2235:26:51553:51620	6304944	0					
ANR	6304947	ExpressionStatement	expr_xor ( )	2236:1:51556:51567	6304944	0	True				
ANR	6304948	CallExpression	expr_xor ( )		6304944	0					
ANR	6304949	Callee	expr_xor		6304944	0					
ANR	6304950	Identifier	expr_xor		6304944	0					
ANR	6304951	ArgumentList			6304944	1					
ANR	6304952	WhileStatement	while ( tok == '|' )		6304944	1					
ANR	6304953	Condition	tok == '|'	2237:8:51577:51586	6304944	0	True				
ANR	6304954	EqualityExpression	tok == '|'		6304944	0		==			
ANR	6304955	Identifier	tok		6304944	0					
ANR	6304956	PrimaryExpression	'|'		6304944	1					
ANR	6304957	CompoundStatement		3:20:35:35	6304944	1					
ANR	6304958	ExpressionStatement	next ( )	2238:2:51593:51600	6304944	0	True				
ANR	6304959	CallExpression	next ( )		6304944	0					
ANR	6304960	Callee	next		6304944	0					
ANR	6304961	Identifier	next		6304944	0					
ANR	6304962	ArgumentList			6304944	1					
ANR	6304963	ExpressionStatement	expr_xor ( )	2239:2:51604:51615	6304944	1	True				
ANR	6304964	CallExpression	expr_xor ( )		6304944	0					
ANR	6304965	Callee	expr_xor		6304944	0					
ANR	6304966	Identifier	expr_xor		6304944	0					
ANR	6304967	ArgumentList			6304944	1					
ANR	6304968	ReturnType	static void		6304944	1					
ANR	6304969	Identifier	expr_or		6304944	2					
ANR	6304970	ParameterList			6304944	3					
ANR	6304971	CFGEntryNode	ENTRY		6304944		True				
ANR	6304972	CFGExitNode	EXIT		6304944		True				
ANR	6304973	Symbol	tok		6304944						
ANR	6304974	Function	expr_land_const	2244:0:51648:51752							
ANR	6304975	FunctionDef	expr_land_const ()		6304974	0					
ANR	6304976	CompoundStatement		2244:34:51682:51752	6304974	0					
ANR	6304977	ExpressionStatement	expr_or ( )	2245:1:51685:51695	6304974	0	True				
ANR	6304978	CallExpression	expr_or ( )		6304974	0					
ANR	6304979	Callee	expr_or		6304974	0					
ANR	6304980	Identifier	expr_or		6304974	0					
ANR	6304981	ArgumentList			6304974	1					
ANR	6304982	WhileStatement	while ( tok == TOK_LAND )		6304974	1					
ANR	6304983	Condition	tok == TOK_LAND	2246:8:51705:51719	6304974	0	True				
ANR	6304984	EqualityExpression	tok == TOK_LAND		6304974	0		==			
ANR	6304985	Identifier	tok		6304974	0					
ANR	6304986	Identifier	TOK_LAND		6304974	1					
ANR	6304987	CompoundStatement		3:25:39:39	6304974	1					
ANR	6304988	ExpressionStatement	next ( )	2247:2:51726:51733	6304974	0	True				
ANR	6304989	CallExpression	next ( )		6304974	0					
ANR	6304990	Callee	next		6304974	0					
ANR	6304991	Identifier	next		6304974	0					
ANR	6304992	ArgumentList			6304974	1					
ANR	6304993	ExpressionStatement	expr_or ( )	2248:2:51737:51747	6304974	1	True				
ANR	6304994	CallExpression	expr_or ( )		6304974	0					
ANR	6304995	Callee	expr_or		6304974	0					
ANR	6304996	Identifier	expr_or		6304974	0					
ANR	6304997	ArgumentList			6304974	1					
ANR	6304998	ReturnType	static void		6304974	1					
ANR	6304999	Identifier	expr_land_const		6304974	2					
ANR	6305000	ParameterList			6304974	3					
ANR	6305001	CFGEntryNode	ENTRY		6304974		True				
ANR	6305002	CFGExitNode	EXIT		6304974		True				
ANR	6305003	Symbol	tok		6304974						
ANR	6305004	Symbol	TOK_LAND		6304974						
ANR	6305005	Function	expr_lor_const	2253:0:51780:51898							
ANR	6305006	FunctionDef	expr_lor_const ()		6305005	0					
ANR	6305007	CompoundStatement		2253:33:51813:51898	6305005	0					
ANR	6305008	ExpressionStatement	expr_land_const ( )	2254:1:51816:51834	6305005	0	True				
ANR	6305009	CallExpression	expr_land_const ( )		6305005	0					
ANR	6305010	Callee	expr_land_const		6305005	0					
ANR	6305011	Identifier	expr_land_const		6305005	0					
ANR	6305012	ArgumentList			6305005	1					
ANR	6305013	WhileStatement	while ( tok == TOK_LOR )		6305005	1					
ANR	6305014	Condition	tok == TOK_LOR	2255:8:51844:51857	6305005	0	True				
ANR	6305015	EqualityExpression	tok == TOK_LOR		6305005	0		==			
ANR	6305016	Identifier	tok		6305005	0					
ANR	6305017	Identifier	TOK_LOR		6305005	1					
ANR	6305018	CompoundStatement		3:24:46:46	6305005	1					
ANR	6305019	ExpressionStatement	next ( )	2256:2:51864:51871	6305005	0	True				
ANR	6305020	CallExpression	next ( )		6305005	0					
ANR	6305021	Callee	next		6305005	0					
ANR	6305022	Identifier	next		6305005	0					
ANR	6305023	ArgumentList			6305005	1					
ANR	6305024	ExpressionStatement	expr_land_const ( )	2257:2:51875:51893	6305005	1	True				
ANR	6305025	CallExpression	expr_land_const ( )		6305005	0					
ANR	6305026	Callee	expr_land_const		6305005	0					
ANR	6305027	Identifier	expr_land_const		6305005	0					
ANR	6305028	ArgumentList			6305005	1					
ANR	6305029	ReturnType	static void		6305005	1					
ANR	6305030	Identifier	expr_lor_const		6305005	2					
ANR	6305031	ParameterList			6305005	3					
ANR	6305032	CFGEntryNode	ENTRY		6305005		True				
ANR	6305033	CFGExitNode	EXIT		6305005		True				
ANR	6305034	Symbol	tok		6305005						
ANR	6305035	Symbol	TOK_LOR		6305005						
ANR	6305036	Function	expr_land	2262:0:51933:52105							
ANR	6305037	FunctionDef	expr_land ()		6305036	0					
ANR	6305038	CompoundStatement		2262:28:51961:52105	6305036	0					
ANR	6305039	ExpressionStatement	expr_or ( )	2263:1:51964:51974	6305036	0	True				
ANR	6305040	CallExpression	expr_or ( )		6305036	0					
ANR	6305041	Callee	expr_or		6305036	0					
ANR	6305042	Identifier	expr_or		6305036	0					
ANR	6305043	ArgumentList			6305036	1					
ANR	6305044	IfStatement	if ( tok == TOK_LAND )		6305036	1					
ANR	6305045	Condition	tok == TOK_LAND	2264:5:51981:51995	6305036	0	True				
ANR	6305046	EqualityExpression	tok == TOK_LAND		6305036	0		==			
ANR	6305047	Identifier	tok		6305036	0					
ANR	6305048	Identifier	TOK_LAND		6305036	1					
ANR	6305049	CompoundStatement		3:22:36:36	6305036	1					
ANR	6305050	WhileStatement	while ( tcc_nerr ( ) == 0 )		6305036	0					
ANR	6305051	Condition	tcc_nerr ( ) == 0	2265:9:52009:52024	6305036	0	True				
ANR	6305052	EqualityExpression	tcc_nerr ( ) == 0		6305036	0		==			
ANR	6305053	CallExpression	tcc_nerr ( )		6305036	0					
ANR	6305054	Callee	tcc_nerr		6305036	0					
ANR	6305055	Identifier	tcc_nerr		6305036	0					
ANR	6305056	ArgumentList			6305036	1					
ANR	6305057	PrimaryExpression	0		6305036	1					
ANR	6305058	CompoundStatement		4:27:65:65	6305036	1					
ANR	6305059	IfStatement	if ( tok != TOK_LAND )		6305036	0					
ANR	6305060	Condition	tok != TOK_LAND	2266:7:52036:52050	6305036	0	True				
ANR	6305061	EqualityExpression	tok != TOK_LAND		6305036	0		!=			
ANR	6305062	Identifier	tok		6305036	0					
ANR	6305063	Identifier	TOK_LAND		6305036	1					
ANR	6305064	CompoundStatement		5:24:91:91	6305036	1					
ANR	6305065	BreakStatement	break ;	2267:4:52059:52064	6305036	0	True				
ANR	6305066	ExpressionStatement	next ( )	2269:3:52074:52081	6305036	1	True				
ANR	6305067	CallExpression	next ( )		6305036	0					
ANR	6305068	Callee	next		6305036	0					
ANR	6305069	Identifier	next		6305036	0					
ANR	6305070	ArgumentList			6305036	1					
ANR	6305071	ExpressionStatement	expr_or ( )	2270:3:52086:52096	6305036	2	True				
ANR	6305072	CallExpression	expr_or ( )		6305036	0					
ANR	6305073	Callee	expr_or		6305036	0					
ANR	6305074	Identifier	expr_or		6305036	0					
ANR	6305075	ArgumentList			6305036	1					
ANR	6305076	ReturnType	static void		6305036	1					
ANR	6305077	Identifier	expr_land		6305036	2					
ANR	6305078	ParameterList			6305036	3					
ANR	6305079	CFGEntryNode	ENTRY		6305036		True				
ANR	6305080	CFGExitNode	EXIT		6305036		True				
ANR	6305081	Symbol	tok		6305036						
ANR	6305082	Symbol	TOK_LAND		6305036						
ANR	6305083	Symbol	tcc_nerr		6305036						
ANR	6305084	Function	expr_lor	2275:0:52108:52281							
ANR	6305085	FunctionDef	expr_lor ()		6305084	0					
ANR	6305086	CompoundStatement		2275:27:52135:52281	6305084	0					
ANR	6305087	ExpressionStatement	expr_land ( )	2276:1:52138:52150	6305084	0	True				
ANR	6305088	CallExpression	expr_land ( )		6305084	0					
ANR	6305089	Callee	expr_land		6305084	0					
ANR	6305090	Identifier	expr_land		6305084	0					
ANR	6305091	ArgumentList			6305084	1					
ANR	6305092	IfStatement	if ( tok == TOK_LOR )		6305084	1					
ANR	6305093	Condition	tok == TOK_LOR	2277:5:52157:52170	6305084	0	True				
ANR	6305094	EqualityExpression	tok == TOK_LOR		6305084	0		==			
ANR	6305095	Identifier	tok		6305084	0					
ANR	6305096	Identifier	TOK_LOR		6305084	1					
ANR	6305097	CompoundStatement		3:21:37:37	6305084	1					
ANR	6305098	WhileStatement	while ( tcc_nerr ( ) == 0 )		6305084	0					
ANR	6305099	Condition	tcc_nerr ( ) == 0	2278:9:52184:52199	6305084	0	True				
ANR	6305100	EqualityExpression	tcc_nerr ( ) == 0		6305084	0		==			
ANR	6305101	CallExpression	tcc_nerr ( )		6305084	0					
ANR	6305102	Callee	tcc_nerr		6305084	0					
ANR	6305103	Identifier	tcc_nerr		6305084	0					
ANR	6305104	ArgumentList			6305084	1					
ANR	6305105	PrimaryExpression	0		6305084	1					
ANR	6305106	CompoundStatement		4:27:66:66	6305084	1					
ANR	6305107	IfStatement	if ( tok != TOK_LOR )		6305084	0					
ANR	6305108	Condition	tok != TOK_LOR	2279:7:52211:52224	6305084	0	True				
ANR	6305109	EqualityExpression	tok != TOK_LOR		6305084	0		!=			
ANR	6305110	Identifier	tok		6305084	0					
ANR	6305111	Identifier	TOK_LOR		6305084	1					
ANR	6305112	CompoundStatement		5:23:91:91	6305084	1					
ANR	6305113	BreakStatement	break ;	2280:4:52233:52238	6305084	0	True				
ANR	6305114	ExpressionStatement	next ( )	2282:3:52248:52255	6305084	1	True				
ANR	6305115	CallExpression	next ( )		6305084	0					
ANR	6305116	Callee	next		6305084	0					
ANR	6305117	Identifier	next		6305084	0					
ANR	6305118	ArgumentList			6305084	1					
ANR	6305119	ExpressionStatement	expr_land ( )	2283:3:52260:52272	6305084	2	True				
ANR	6305120	CallExpression	expr_land ( )		6305084	0					
ANR	6305121	Callee	expr_land		6305084	0					
ANR	6305122	Identifier	expr_land		6305084	0					
ANR	6305123	ArgumentList			6305084	1					
ANR	6305124	ReturnType	static void		6305084	1					
ANR	6305125	Identifier	expr_lor		6305084	2					
ANR	6305126	ParameterList			6305084	3					
ANR	6305127	CFGEntryNode	ENTRY		6305084		True				
ANR	6305128	CFGExitNode	EXIT		6305084		True				
ANR	6305129	Symbol	tok		6305084						
ANR	6305130	Symbol	TOK_LOR		6305084						
ANR	6305131	Symbol	tcc_nerr		6305084						
ANR	6305132	Function	expr_cond	2289:0:52320:52552							
ANR	6305133	FunctionDef	expr_cond ()		6305132	0					
ANR	6305134	CompoundStatement		2289:28:52348:52552	6305132	0					
ANR	6305135	IfStatement	if ( const_wanted )		6305132	0					
ANR	6305136	Condition	const_wanted	2290:5:52355:52366	6305132	0	True				
ANR	6305137	Identifier	const_wanted		6305132	0					
ANR	6305138	CompoundStatement		2:19:20:20	6305132	1					
ANR	6305139	ExpressionStatement	expr_lor_const ( )	2291:2:52373:52390	6305132	0	True				
ANR	6305140	CallExpression	expr_lor_const ( )		6305132	0					
ANR	6305141	Callee	expr_lor_const		6305132	0					
ANR	6305142	Identifier	expr_lor_const		6305132	0					
ANR	6305143	ArgumentList			6305132	1					
ANR	6305144	IfStatement	if ( tok == '?' )		6305132	1					
ANR	6305145	Condition	tok == '?'	2292:6:52398:52407	6305132	0	True				
ANR	6305146	EqualityExpression	tok == '?'		6305132	0		==			
ANR	6305147	Identifier	tok		6305132	0					
ANR	6305148	PrimaryExpression	'?'		6305132	1					
ANR	6305149	CompoundStatement		4:18:61:61	6305132	1					
ANR	6305150	ExpressionStatement	vdup ( )	2293:3:52415:52422	6305132	0	True				
ANR	6305151	CallExpression	vdup ( )		6305132	0					
ANR	6305152	Callee	vdup		6305132	0					
ANR	6305153	Identifier	vdup		6305132	0					
ANR	6305154	ArgumentList			6305132	1					
ANR	6305155	ExpressionStatement	next ( )	2294:3:52427:52434	6305132	1	True				
ANR	6305156	CallExpression	next ( )		6305132	0					
ANR	6305157	Callee	next		6305132	0					
ANR	6305158	Identifier	next		6305132	0					
ANR	6305159	ArgumentList			6305132	1					
ANR	6305160	IfStatement	if ( tok != ':' || ! gnu_ext )		6305132	2					
ANR	6305161	Condition	tok != ':' || ! gnu_ext	2295:7:52443:52464	6305132	0	True				
ANR	6305162	OrExpression	tok != ':' || ! gnu_ext		6305132	0		||			
ANR	6305163	EqualityExpression	tok != ':'		6305132	0		!=			
ANR	6305164	Identifier	tok		6305132	0					
ANR	6305165	PrimaryExpression	':'		6305132	1					
ANR	6305166	UnaryOperationExpression	! gnu_ext		6305132	1					
ANR	6305167	UnaryOperator	!		6305132	0					
ANR	6305168	Identifier	gnu_ext		6305132	1					
ANR	6305169	CompoundStatement		7:31:118:118	6305132	1					
ANR	6305170	ExpressionStatement	gexpr ( )	2296:4:52473:52481	6305132	0	True				
ANR	6305171	CallExpression	gexpr ( )		6305132	0					
ANR	6305172	Callee	gexpr		6305132	0					
ANR	6305173	Identifier	gexpr		6305132	0					
ANR	6305174	ArgumentList			6305132	1					
ANR	6305175	ExpressionStatement	skip ( ':' )	2298:3:52491:52501	6305132	3	True				
ANR	6305176	CallExpression	skip ( ':' )		6305132	0					
ANR	6305177	Callee	skip		6305132	0					
ANR	6305178	Identifier	skip		6305132	0					
ANR	6305179	ArgumentList	':'		6305132	1					
ANR	6305180	Argument	':'		6305132	0					
ANR	6305181	PrimaryExpression	':'		6305132	0					
ANR	6305182	ExpressionStatement	expr_cond ( )	2299:3:52506:52518	6305132	4	True				
ANR	6305183	CallExpression	expr_cond ( )		6305132	0					
ANR	6305184	Callee	expr_cond		6305132	0					
ANR	6305185	Identifier	expr_cond		6305132	0					
ANR	6305186	ArgumentList			6305132	1					
ANR	6305187	ElseStatement	else		6305132	0					
ANR	6305188	CompoundStatement		13:8:183:183	6305132	0					
ANR	6305189	ExpressionStatement	expr_lor ( )	2302:2:52536:52547	6305132	0	True				
ANR	6305190	CallExpression	expr_lor ( )		6305132	0					
ANR	6305191	Callee	expr_lor		6305132	0					
ANR	6305192	Identifier	expr_lor		6305132	0					
ANR	6305193	ArgumentList			6305132	1					
ANR	6305194	ReturnType	static void		6305132	1					
ANR	6305195	Identifier	expr_cond		6305132	2					
ANR	6305196	ParameterList			6305132	3					
ANR	6305197	CFGEntryNode	ENTRY		6305132		True				
ANR	6305198	CFGExitNode	EXIT		6305132		True				
ANR	6305199	Symbol	tok		6305132						
ANR	6305200	Symbol	gnu_ext		6305132						
ANR	6305201	Symbol	const_wanted		6305132						
ANR	6305202	Function	expr_eq	2306:0:52555:52880							
ANR	6305203	FunctionDef	expr_eq ()		6305202	0					
ANR	6305204	CompoundStatement		2306:26:52581:52880	6305202	0					
ANR	6305205	IdentifierDeclStatement	int t ;	2307:1:52584:52589	6305202	0	True				
ANR	6305206	IdentifierDecl	t		6305202	0					
ANR	6305207	IdentifierDeclType	int		6305202	0					
ANR	6305208	Identifier	t		6305202	1					
ANR	6305209	ExpressionStatement	expr_cond ( )	2309:1:52593:52605	6305202	1	True				
ANR	6305210	CallExpression	expr_cond ( )		6305202	0					
ANR	6305211	Callee	expr_cond		6305202	0					
ANR	6305212	Identifier	expr_cond		6305202	0					
ANR	6305213	ArgumentList			6305202	1					
ANR	6305214	IfStatement	if ( tok == '=' || ( tok >= TOK_A_MOD && tok <= TOK_A_DIV ) || tok == TOK_A_XOR || tok == TOK_A_OR || tok == TOK_A_SHL || tok == TOK_A_SAR )		6305202	2					
ANR	6305215	Condition	tok == '=' || ( tok >= TOK_A_MOD && tok <= TOK_A_DIV ) || tok == TOK_A_XOR || tok == TOK_A_OR || tok == TOK_A_SHL || tok == TOK_A_SAR	2310:5:52612:52757	6305202	0	True				
ANR	6305216	OrExpression	tok == '=' || ( tok >= TOK_A_MOD && tok <= TOK_A_DIV ) || tok == TOK_A_XOR || tok == TOK_A_OR || tok == TOK_A_SHL || tok == TOK_A_SAR		6305202	0		||			
ANR	6305217	EqualityExpression	tok == '='		6305202	0		==			
ANR	6305218	Identifier	tok		6305202	0					
ANR	6305219	PrimaryExpression	'='		6305202	1					
ANR	6305220	OrExpression	( tok >= TOK_A_MOD && tok <= TOK_A_DIV ) || tok == TOK_A_XOR || tok == TOK_A_OR || tok == TOK_A_SHL || tok == TOK_A_SAR		6305202	1		||			
ANR	6305221	AndExpression	tok >= TOK_A_MOD && tok <= TOK_A_DIV		6305202	0		&&			
ANR	6305222	RelationalExpression	tok >= TOK_A_MOD		6305202	0		>=			
ANR	6305223	Identifier	tok		6305202	0					
ANR	6305224	Identifier	TOK_A_MOD		6305202	1					
ANR	6305225	RelationalExpression	tok <= TOK_A_DIV		6305202	1		<=			
ANR	6305226	Identifier	tok		6305202	0					
ANR	6305227	Identifier	TOK_A_DIV		6305202	1					
ANR	6305228	OrExpression	tok == TOK_A_XOR || tok == TOK_A_OR || tok == TOK_A_SHL || tok == TOK_A_SAR		6305202	1		||			
ANR	6305229	EqualityExpression	tok == TOK_A_XOR		6305202	0		==			
ANR	6305230	Identifier	tok		6305202	0					
ANR	6305231	Identifier	TOK_A_XOR		6305202	1					
ANR	6305232	OrExpression	tok == TOK_A_OR || tok == TOK_A_SHL || tok == TOK_A_SAR		6305202	1		||			
ANR	6305233	EqualityExpression	tok == TOK_A_OR		6305202	0		==			
ANR	6305234	Identifier	tok		6305202	0					
ANR	6305235	Identifier	TOK_A_OR		6305202	1					
ANR	6305236	OrExpression	tok == TOK_A_SHL || tok == TOK_A_SAR		6305202	1		||			
ANR	6305237	EqualityExpression	tok == TOK_A_SHL		6305202	0		==			
ANR	6305238	Identifier	tok		6305202	0					
ANR	6305239	Identifier	TOK_A_SHL		6305202	1					
ANR	6305240	EqualityExpression	tok == TOK_A_SAR		6305202	1		==			
ANR	6305241	Identifier	tok		6305202	0					
ANR	6305242	Identifier	TOK_A_SAR		6305202	1					
ANR	6305243	CompoundStatement		8:43:178:178	6305202	1					
ANR	6305244	ExpressionStatement	test_lvalue ( )	2314:2:52764:52778	6305202	0	True				
ANR	6305245	CallExpression	test_lvalue ( )		6305202	0					
ANR	6305246	Callee	test_lvalue		6305202	0					
ANR	6305247	Identifier	test_lvalue		6305202	0					
ANR	6305248	ArgumentList			6305202	1					
ANR	6305249	ExpressionStatement	t = tok	2315:2:52782:52789	6305202	1	True				
ANR	6305250	AssignmentExpression	t = tok		6305202	0		=			
ANR	6305251	Identifier	t		6305202	0					
ANR	6305252	Identifier	tok		6305202	1					
ANR	6305253	ExpressionStatement	next ( )	2316:2:52793:52800	6305202	2	True				
ANR	6305254	CallExpression	next ( )		6305202	0					
ANR	6305255	Callee	next		6305202	0					
ANR	6305256	Identifier	next		6305202	0					
ANR	6305257	ArgumentList			6305202	1					
ANR	6305258	IfStatement	if ( t == '=' )		6305202	3					
ANR	6305259	Condition	t == '='	2317:6:52808:52815	6305202	0	True				
ANR	6305260	EqualityExpression	t == '='		6305202	0		==			
ANR	6305261	Identifier	t		6305202	0					
ANR	6305262	PrimaryExpression	'='		6305202	1					
ANR	6305263	CompoundStatement		12:16:236:236	6305202	1					
ANR	6305264	ExpressionStatement	expr_eq ( )	2318:3:52823:52833	6305202	0	True				
ANR	6305265	CallExpression	expr_eq ( )		6305202	0					
ANR	6305266	Callee	expr_eq		6305202	0					
ANR	6305267	Identifier	expr_eq		6305202	0					
ANR	6305268	ArgumentList			6305202	1					
ANR	6305269	ElseStatement	else		6305202	0					
ANR	6305270	CompoundStatement		14:9:262:262	6305202	0					
ANR	6305271	ExpressionStatement	vdup ( )	2320:3:52849:52856	6305202	0	True				
ANR	6305272	CallExpression	vdup ( )		6305202	0					
ANR	6305273	Callee	vdup		6305202	0					
ANR	6305274	Identifier	vdup		6305202	0					
ANR	6305275	ArgumentList			6305202	1					
ANR	6305276	ExpressionStatement	expr_eq ( )	2321:3:52861:52871	6305202	1	True				
ANR	6305277	CallExpression	expr_eq ( )		6305202	0					
ANR	6305278	Callee	expr_eq		6305202	0					
ANR	6305279	Identifier	expr_eq		6305202	0					
ANR	6305280	ArgumentList			6305202	1					
ANR	6305281	ReturnType	static void		6305202	1					
ANR	6305282	Identifier	expr_eq		6305202	2					
ANR	6305283	ParameterList			6305202	3					
ANR	6305284	CFGEntryNode	ENTRY		6305202		True				
ANR	6305285	CFGExitNode	EXIT		6305202		True				
ANR	6305286	Symbol	tok		6305202						
ANR	6305287	Symbol	t		6305202						
ANR	6305288	Symbol	TOK_A_OR		6305202						
ANR	6305289	Symbol	TOK_A_MOD		6305202						
ANR	6305290	Symbol	TOK_A_DIV		6305202						
ANR	6305291	Symbol	TOK_A_SAR		6305202						
ANR	6305292	Symbol	TOK_A_SHL		6305202						
ANR	6305293	Symbol	TOK_A_XOR		6305202						
ANR	6305294	Function	gexpr	2326:0:52883:53000							
ANR	6305295	FunctionDef	gexpr ()		6305294	0					
ANR	6305296	CompoundStatement		2326:25:52908:53000	6305294	0					
ANR	6305297	WhileStatement	while ( tcc_nerr ( ) == 0 )		6305294	0					
ANR	6305298	Condition	tcc_nerr ( ) == 0	2327:8:52918:52933	6305294	0	True				
ANR	6305299	EqualityExpression	tcc_nerr ( ) == 0		6305294	0		==			
ANR	6305300	CallExpression	tcc_nerr ( )		6305294	0					
ANR	6305301	Callee	tcc_nerr		6305294	0					
ANR	6305302	Identifier	tcc_nerr		6305294	0					
ANR	6305303	ArgumentList			6305294	1					
ANR	6305304	PrimaryExpression	0		6305294	1					
ANR	6305305	CompoundStatement		2:26:27:27	6305294	1					
ANR	6305306	ExpressionStatement	expr_eq ( )	2328:2:52940:52950	6305294	0	True				
ANR	6305307	CallExpression	expr_eq ( )		6305294	0					
ANR	6305308	Callee	expr_eq		6305294	0					
ANR	6305309	Identifier	expr_eq		6305294	0					
ANR	6305310	ArgumentList			6305294	1					
ANR	6305311	IfStatement	"if ( tok != ',' )"		6305294	1					
ANR	6305312	Condition	"tok != ','"	2329:6:52958:52967	6305294	0	True				
ANR	6305313	EqualityExpression	"tok != ','"		6305294	0		!=			
ANR	6305314	Identifier	tok		6305294	0					
ANR	6305315	PrimaryExpression	"','"		6305294	1					
ANR	6305316	CompoundStatement		4:18:61:61	6305294	1					
ANR	6305317	BreakStatement	break ;	2330:3:52975:52980	6305294	0	True				
ANR	6305318	ExpressionStatement	next ( )	2332:2:52988:52995	6305294	2	True				
ANR	6305319	CallExpression	next ( )		6305294	0					
ANR	6305320	Callee	next		6305294	0					
ANR	6305321	Identifier	next		6305294	0					
ANR	6305322	ArgumentList			6305294	1					
ANR	6305323	ReturnType	ST_FUNC void		6305294	1					
ANR	6305324	Identifier	gexpr		6305294	2					
ANR	6305325	ParameterList			6305294	3					
ANR	6305326	CFGEntryNode	ENTRY		6305294		True				
ANR	6305327	CFGExitNode	EXIT		6305294		True				
ANR	6305328	Symbol	tok		6305294						
ANR	6305329	Symbol	tcc_nerr		6305294						
ANR	6305330	Function	expr_type	2337:0:53074:53266							
ANR	6305331	FunctionDef	expr_type (CType * type)		6305330	0					
ANR	6305332	CompoundStatement		2337:35:53109:53266	6305330	0					
ANR	6305333	IdentifierDeclStatement	int saved_nocode_wanted ;	2338:1:53112:53135	6305330	0	True				
ANR	6305334	IdentifierDecl	saved_nocode_wanted		6305330	0					
ANR	6305335	IdentifierDeclType	int		6305330	0					
ANR	6305336	Identifier	saved_nocode_wanted		6305330	1					
ANR	6305337	ExpressionStatement	saved_nocode_wanted = nocode_wanted	2340:1:53139:53174	6305330	1	True				
ANR	6305338	AssignmentExpression	saved_nocode_wanted = nocode_wanted		6305330	0		=			
ANR	6305339	Identifier	saved_nocode_wanted		6305330	0					
ANR	6305340	Identifier	nocode_wanted		6305330	1					
ANR	6305341	ExpressionStatement	nocode_wanted = 1	2341:1:53177:53194	6305330	2	True				
ANR	6305342	AssignmentExpression	nocode_wanted = 1		6305330	0		=			
ANR	6305343	Identifier	nocode_wanted		6305330	0					
ANR	6305344	PrimaryExpression	1		6305330	1					
ANR	6305345	ExpressionStatement	gexpr ( )	2342:1:53197:53205	6305330	3	True				
ANR	6305346	CallExpression	gexpr ( )		6305330	0					
ANR	6305347	Callee	gexpr		6305330	0					
ANR	6305348	Identifier	gexpr		6305330	0					
ANR	6305349	ArgumentList			6305330	1					
ANR	6305350	ExpressionStatement	* type = vtop -> type	2343:1:53208:53226	6305330	4	True				
ANR	6305351	AssignmentExpression	* type = vtop -> type		6305330	0		=			
ANR	6305352	UnaryOperationExpression	* type		6305330	0					
ANR	6305353	UnaryOperator	*		6305330	0					
ANR	6305354	Identifier	type		6305330	1					
ANR	6305355	PtrMemberAccess	vtop -> type		6305330	1					
ANR	6305356	Identifier	vtop		6305330	0					
ANR	6305357	Identifier	type		6305330	1					
ANR	6305358	ExpressionStatement	nocode_wanted = saved_nocode_wanted	2344:1:53229:53264	6305330	5	True				
ANR	6305359	AssignmentExpression	nocode_wanted = saved_nocode_wanted		6305330	0		=			
ANR	6305360	Identifier	nocode_wanted		6305330	0					
ANR	6305361	Identifier	saved_nocode_wanted		6305330	1					
ANR	6305362	ReturnType	static void		6305330	1					
ANR	6305363	Identifier	expr_type		6305330	2					
ANR	6305364	ParameterList	CType * type		6305330	3					
ANR	6305365	Parameter	CType * type	2337:22:53096:53106	6305330	0	True				
ANR	6305366	ParameterType	CType *		6305330	0					
ANR	6305367	Identifier	type		6305330	1					
ANR	6305368	CFGEntryNode	ENTRY		6305330		True				
ANR	6305369	CFGExitNode	EXIT		6305330		True				
ANR	6305370	Symbol	* vtop		6305330						
ANR	6305371	Symbol	* type		6305330						
ANR	6305372	Symbol	vtop -> type		6305330						
ANR	6305373	Symbol	vtop		6305330						
ANR	6305374	Symbol	nocode_wanted		6305330						
ANR	6305375	Symbol	type		6305330						
ANR	6305376	Symbol	saved_nocode_wanted		6305330						
ANR	6305377	Function	unary_type	2349:0:53348:53482							
ANR	6305378	FunctionDef	unary_type (CType * type)		6305377	0					
ANR	6305379	CompoundStatement		2349:36:53384:53482	6305377	0					
ANR	6305380	IdentifierDeclStatement	int a = nocode_wanted ;	2350:1:53387:53408	6305377	0	True				
ANR	6305381	IdentifierDecl	a = nocode_wanted		6305377	0					
ANR	6305382	IdentifierDeclType	int		6305377	0					
ANR	6305383	Identifier	a		6305377	1					
ANR	6305384	AssignmentExpression	a = nocode_wanted		6305377	2		=			
ANR	6305385	Identifier	nocode_wanted		6305377	0					
ANR	6305386	Identifier	nocode_wanted		6305377	1					
ANR	6305387	ExpressionStatement	nocode_wanted = 1	2351:1:53411:53428	6305377	1	True				
ANR	6305388	AssignmentExpression	nocode_wanted = 1		6305377	0		=			
ANR	6305389	Identifier	nocode_wanted		6305377	0					
ANR	6305390	PrimaryExpression	1		6305377	1					
ANR	6305391	ExpressionStatement	unary ( )	2352:1:53431:53439	6305377	2	True				
ANR	6305392	CallExpression	unary ( )		6305377	0					
ANR	6305393	Callee	unary		6305377	0					
ANR	6305394	Identifier	unary		6305377	0					
ANR	6305395	ArgumentList			6305377	1					
ANR	6305396	ExpressionStatement	* type = vtop -> type	2353:1:53442:53460	6305377	3	True				
ANR	6305397	AssignmentExpression	* type = vtop -> type		6305377	0		=			
ANR	6305398	UnaryOperationExpression	* type		6305377	0					
ANR	6305399	UnaryOperator	*		6305377	0					
ANR	6305400	Identifier	type		6305377	1					
ANR	6305401	PtrMemberAccess	vtop -> type		6305377	1					
ANR	6305402	Identifier	vtop		6305377	0					
ANR	6305403	Identifier	type		6305377	1					
ANR	6305404	ExpressionStatement	nocode_wanted = a	2354:1:53463:53480	6305377	4	True				
ANR	6305405	AssignmentExpression	nocode_wanted = a		6305377	0		=			
ANR	6305406	Identifier	nocode_wanted		6305377	0					
ANR	6305407	Identifier	a		6305377	1					
ANR	6305408	ReturnType	static void		6305377	1					
ANR	6305409	Identifier	unary_type		6305377	2					
ANR	6305410	ParameterList	CType * type		6305377	3					
ANR	6305411	Parameter	CType * type	2349:23:53371:53381	6305377	0	True				
ANR	6305412	ParameterType	CType *		6305377	0					
ANR	6305413	Identifier	type		6305377	1					
ANR	6305414	CFGEntryNode	ENTRY		6305377		True				
ANR	6305415	CFGExitNode	EXIT		6305377		True				
ANR	6305416	Symbol	* vtop		6305377						
ANR	6305417	Symbol	a		6305377						
ANR	6305418	Symbol	* type		6305377						
ANR	6305419	Symbol	vtop -> type		6305377						
ANR	6305420	Symbol	vtop		6305377						
ANR	6305421	Symbol	nocode_wanted		6305377						
ANR	6305422	Symbol	type		6305377						
ANR	6305423	Function	expr_const1	2358:0:53546:53658							
ANR	6305424	FunctionDef	expr_const1 ()		6305423	0					
ANR	6305425	CompoundStatement		2358:30:53576:53658	6305423	0					
ANR	6305426	IdentifierDeclStatement	int a ;	2359:1:53579:53584	6305423	0	True				
ANR	6305427	IdentifierDecl	a		6305423	0					
ANR	6305428	IdentifierDeclType	int		6305423	0					
ANR	6305429	Identifier	a		6305423	1					
ANR	6305430	ExpressionStatement	a = const_wanted	2360:1:53587:53603	6305423	1	True				
ANR	6305431	AssignmentExpression	a = const_wanted		6305423	0		=			
ANR	6305432	Identifier	a		6305423	0					
ANR	6305433	Identifier	const_wanted		6305423	1					
ANR	6305434	ExpressionStatement	const_wanted = 1	2361:1:53606:53622	6305423	2	True				
ANR	6305435	AssignmentExpression	const_wanted = 1		6305423	0		=			
ANR	6305436	Identifier	const_wanted		6305423	0					
ANR	6305437	PrimaryExpression	1		6305423	1					
ANR	6305438	ExpressionStatement	expr_cond ( )	2362:1:53625:53637	6305423	3	True				
ANR	6305439	CallExpression	expr_cond ( )		6305423	0					
ANR	6305440	Callee	expr_cond		6305423	0					
ANR	6305441	Identifier	expr_cond		6305423	0					
ANR	6305442	ArgumentList			6305423	1					
ANR	6305443	ExpressionStatement	const_wanted = a	2363:1:53640:53656	6305423	4	True				
ANR	6305444	AssignmentExpression	const_wanted = a		6305423	0		=			
ANR	6305445	Identifier	const_wanted		6305423	0					
ANR	6305446	Identifier	a		6305423	1					
ANR	6305447	ReturnType	static void		6305423	1					
ANR	6305448	Identifier	expr_const1		6305423	2					
ANR	6305449	ParameterList			6305423	3					
ANR	6305450	CFGEntryNode	ENTRY		6305423		True				
ANR	6305451	CFGExitNode	EXIT		6305423		True				
ANR	6305452	Symbol	a		6305423						
ANR	6305453	Symbol	const_wanted		6305423						
ANR	6305454	Function	expr_const	2367:0:53715:53918							
ANR	6305455	FunctionDef	expr_const ()		6305454	0					
ANR	6305456	CompoundStatement		2367:35:53750:53918	6305454	0					
ANR	6305457	Statement	long	2368:1:53753:53756	6305454	0	True				
ANR	6305458	Statement	long	2368:6:53758:53761	6305454	1	True				
ANR	6305459	Statement	c	2368:11:53763:53763	6305454	2	True				
ANR	6305460	Statement	=	2368:13:53765:53765	6305454	3	True				
ANR	6305461	Statement	0L	2368:15:53767:53768	6305454	4	True				
ANR	6305462	ExpressionStatement	L	2368:17:53769:53770	6305454	5	True				
ANR	6305463	Identifier	L		6305454	0					
ANR	6305464	ExpressionStatement	expr_const1 ( )	2369:1:53773:53787	6305454	6	True				
ANR	6305465	CallExpression	expr_const1 ( )		6305454	0					
ANR	6305466	Callee	expr_const1		6305454	0					
ANR	6305467	Identifier	expr_const1		6305454	0					
ANR	6305468	ArgumentList			6305454	1					
ANR	6305469	IfStatement	if ( ( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) != VT_CONST )		6305454	7					
ANR	6305470	Condition	( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) != VT_CONST	2370:5:53794:53848	6305454	0	True				
ANR	6305471	EqualityExpression	( vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM ) ) != VT_CONST		6305454	0		!=			
ANR	6305472	BitAndExpression	vtop -> r & ( VT_VALMASK | VT_LVAL | VT_SYM )		6305454	0		&			
ANR	6305473	PtrMemberAccess	vtop -> r		6305454	0					
ANR	6305474	Identifier	vtop		6305454	0					
ANR	6305475	Identifier	r		6305454	1					
ANR	6305476	InclusiveOrExpression	VT_VALMASK | VT_LVAL | VT_SYM		6305454	1		|			
ANR	6305477	Identifier	VT_VALMASK		6305454	0					
ANR	6305478	InclusiveOrExpression	VT_LVAL | VT_SYM		6305454	1		|			
ANR	6305479	Identifier	VT_LVAL		6305454	0					
ANR	6305480	Identifier	VT_SYM		6305454	1					
ANR	6305481	Identifier	VT_CONST		6305454	1					
ANR	6305482	CompoundStatement		4:62:100:100	6305454	1					
ANR	6305483	ExpressionStatement	"expect ( ""constant expression"" )"	2371:2:53855:53885	6305454	0	True				
ANR	6305484	CallExpression	"expect ( ""constant expression"" )"		6305454	0					
ANR	6305485	Callee	expect		6305454	0					
ANR	6305486	Identifier	expect		6305454	0					
ANR	6305487	ArgumentList	"""constant expression"""		6305454	1					
ANR	6305488	Argument	"""constant expression"""		6305454	0					
ANR	6305489	PrimaryExpression	"""constant expression"""		6305454	0					
ANR	6305490	ExpressionStatement	c = vtop -> c . ll	2373:1:53891:53905	6305454	8	True				
ANR	6305491	AssignmentExpression	c = vtop -> c . ll		6305454	0		=			
ANR	6305492	Identifier	c		6305454	0					
ANR	6305493	MemberAccess	vtop -> c . ll		6305454	1					
ANR	6305494	PtrMemberAccess	vtop -> c		6305454	0					
ANR	6305495	Identifier	vtop		6305454	0					
ANR	6305496	Identifier	c		6305454	1					
ANR	6305497	Identifier	ll		6305454	1					
ANR	6305498	ReturnStatement	return c ;	2374:1:53908:53916	6305454	9	True				
ANR	6305499	Identifier	c		6305454	0					
ANR	6305500	ReturnType	ST_FUNC long long		6305454	1					
ANR	6305501	Identifier	expr_const		6305454	2					
ANR	6305502	ParameterList			6305454	3					
ANR	6305503	CFGEntryNode	ENTRY		6305454		True				
ANR	6305504	CFGExitNode	EXIT		6305454		True				
ANR	6305505	Symbol	VT_CONST		6305454						
ANR	6305506	Symbol	* vtop		6305454						
ANR	6305507	Symbol	vtop -> c . ll		6305454						
ANR	6305508	Symbol	c		6305454						
ANR	6305509	Symbol	vtop		6305454						
ANR	6305510	Symbol	VT_VALMASK		6305454						
ANR	6305511	Symbol	VT_SYM		6305454						
ANR	6305512	Symbol	vtop -> r		6305454						
ANR	6305513	Symbol	VT_LVAL		6305454						
ANR	6305514	Symbol	vtop -> c		6305454						
ANR	6305515	Function	is_label	2379:0:54004:54293							
ANR	6305516	FunctionDef	is_label ()		6305515	0					
ANR	6305517	CompoundStatement		2379:26:54030:54293	6305515	0					
ANR	6305518	IdentifierDeclStatement	int last_tok ;	2380:1:54033:54045	6305515	0	True				
ANR	6305519	IdentifierDecl	last_tok		6305515	0					
ANR	6305520	IdentifierDeclType	int		6305515	0					
ANR	6305521	Identifier	last_tok		6305515	1					
ANR	6305522	IfStatement	if ( tok < TOK_UIDENT )		6305515	1					
ANR	6305523	Condition	tok < TOK_UIDENT	2383:5:54076:54091	6305515	0	True				
ANR	6305524	RelationalExpression	tok < TOK_UIDENT		6305515	0		<			
ANR	6305525	Identifier	tok		6305515	0					
ANR	6305526	Identifier	TOK_UIDENT		6305515	1					
ANR	6305527	CompoundStatement		5:23:63:63	6305515	1					
ANR	6305528	ReturnStatement	return 0 ;	2384:2:54098:54106	6305515	0	True				
ANR	6305529	PrimaryExpression	0		6305515	0					
ANR	6305530	ExpressionStatement	last_tok = tok	2387:1:54169:54183	6305515	2	True				
ANR	6305531	AssignmentExpression	last_tok = tok		6305515	0		=			
ANR	6305532	Identifier	last_tok		6305515	0					
ANR	6305533	Identifier	tok		6305515	1					
ANR	6305534	ExpressionStatement	next ( )	2388:1:54186:54193	6305515	3	True				
ANR	6305535	CallExpression	next ( )		6305515	0					
ANR	6305536	Callee	next		6305515	0					
ANR	6305537	Identifier	next		6305515	0					
ANR	6305538	ArgumentList			6305515	1					
ANR	6305539	IfStatement	if ( tok == ':' )		6305515	4					
ANR	6305540	Condition	tok == ':'	2389:5:54200:54209	6305515	0	True				
ANR	6305541	EqualityExpression	tok == ':'		6305515	0		==			
ANR	6305542	Identifier	tok		6305515	0					
ANR	6305543	PrimaryExpression	':'		6305515	1					
ANR	6305544	CompoundStatement		11:17:181:181	6305515	1					
ANR	6305545	ExpressionStatement	next ( )	2390:2:54216:54223	6305515	0	True				
ANR	6305546	CallExpression	next ( )		6305515	0					
ANR	6305547	Callee	next		6305515	0					
ANR	6305548	Identifier	next		6305515	0					
ANR	6305549	ArgumentList			6305515	1					
ANR	6305550	ReturnStatement	return last_tok ;	2391:2:54227:54242	6305515	1	True				
ANR	6305551	Identifier	last_tok		6305515	0					
ANR	6305552	ElseStatement	else		6305515	0					
ANR	6305553	CompoundStatement		14:8:221:221	6305515	0					
ANR	6305554	ExpressionStatement	unget_tok ( last_tok )	2393:2:54256:54276	6305515	0	True				
ANR	6305555	CallExpression	unget_tok ( last_tok )		6305515	0					
ANR	6305556	Callee	unget_tok		6305515	0					
ANR	6305557	Identifier	unget_tok		6305515	0					
ANR	6305558	ArgumentList	last_tok		6305515	1					
ANR	6305559	Argument	last_tok		6305515	0					
ANR	6305560	Identifier	last_tok		6305515	0					
ANR	6305561	ReturnStatement	return 0 ;	2394:2:54280:54288	6305515	1	True				
ANR	6305562	PrimaryExpression	0		6305515	0					
ANR	6305563	ReturnType	static int		6305515	1					
ANR	6305564	Identifier	is_label		6305515	2					
ANR	6305565	ParameterList			6305515	3					
ANR	6305566	CFGEntryNode	ENTRY		6305515		True				
ANR	6305567	CFGExitNode	EXIT		6305515		True				
ANR	6305568	Symbol	tok		6305515						
ANR	6305569	Symbol	TOK_UIDENT		6305515						
ANR	6305570	Symbol	last_tok		6305515						
ANR	6305571	Function	decl_designator	2402:0:54503:56825							
ANR	6305572	FunctionDef	"decl_designator (CType * type , unsigned long c , long long * cur_index , Sym * * cur_field , int size_only)"		6305571	0					
ANR	6305573	CompoundStatement		2405:0:54629:56825	6305571	0					
ANR	6305574	IdentifierDeclStatement	"Sym * s , * f = NULL ;"	2406:1:54632:54649	6305571	0	True				
ANR	6305575	IdentifierDecl	* s		6305571	0					
ANR	6305576	IdentifierDeclType	Sym *		6305571	0					
ANR	6305577	Identifier	s		6305571	1					
ANR	6305578	IdentifierDecl	* f = NULL		6305571	1					
ANR	6305579	IdentifierDeclType	Sym *		6305571	0					
ANR	6305580	Identifier	f		6305571	1					
ANR	6305581	AssignmentExpression	* f = NULL		6305571	2		=			
ANR	6305582	Identifier	NULL		6305571	0					
ANR	6305583	Identifier	NULL		6305571	1					
ANR	6305584	IdentifierDeclStatement	"long long index , index_last ;"	2407:1:54652:54679	6305571	1	True				
ANR	6305585	IdentifierDecl	index		6305571	0					
ANR	6305586	IdentifierDeclType	long long		6305571	0					
ANR	6305587	Identifier	index		6305571	1					
ANR	6305588	IdentifierDecl	index_last		6305571	1					
ANR	6305589	IdentifierDeclType	long long		6305571	0					
ANR	6305590	Identifier	index_last		6305571	1					
ANR	6305591	IdentifierDeclStatement	"int notfirst , align , l , nb_elems , elem_size ;"	2408:1:54682:54725	6305571	2	True				
ANR	6305592	IdentifierDecl	notfirst		6305571	0					
ANR	6305593	IdentifierDeclType	int		6305571	0					
ANR	6305594	Identifier	notfirst		6305571	1					
ANR	6305595	IdentifierDecl	align		6305571	1					
ANR	6305596	IdentifierDeclType	int		6305571	0					
ANR	6305597	Identifier	align		6305571	1					
ANR	6305598	IdentifierDecl	l		6305571	2					
ANR	6305599	IdentifierDeclType	int		6305571	0					
ANR	6305600	Identifier	l		6305571	1					
ANR	6305601	IdentifierDecl	nb_elems		6305571	3					
ANR	6305602	IdentifierDeclType	int		6305571	0					
ANR	6305603	Identifier	nb_elems		6305571	1					
ANR	6305604	IdentifierDecl	elem_size		6305571	4					
ANR	6305605	IdentifierDeclType	int		6305571	0					
ANR	6305606	Identifier	elem_size		6305571	1					
ANR	6305607	ExpressionStatement	"STACK_NEW0 ( CType , type1 )"	2409:1:54728:54753	6305571	3	True				
ANR	6305608	CallExpression	"STACK_NEW0 ( CType , type1 )"		6305571	0					
ANR	6305609	Callee	STACK_NEW0		6305571	0					
ANR	6305610	Identifier	STACK_NEW0		6305571	0					
ANR	6305611	ArgumentList	CType		6305571	1					
ANR	6305612	Argument	CType		6305571	0					
ANR	6305613	Identifier	CType		6305571	0					
ANR	6305614	Argument	type1		6305571	1					
ANR	6305615	Identifier	type1		6305571	0					
ANR	6305616	ExpressionStatement	notfirst = 0	2411:1:54757:54769	6305571	4	True				
ANR	6305617	AssignmentExpression	notfirst = 0		6305571	0		=			
ANR	6305618	Identifier	notfirst		6305571	0					
ANR	6305619	PrimaryExpression	0		6305571	1					
ANR	6305620	IfStatement	if ( gnu_ext && ( l = is_label ( ) ) != 0 )		6305571	5					
ANR	6305621	Condition	gnu_ext && ( l = is_label ( ) ) != 0	2412:5:54776:54808	6305571	0	True				
ANR	6305622	AndExpression	gnu_ext && ( l = is_label ( ) ) != 0		6305571	0		&&			
ANR	6305623	Identifier	gnu_ext		6305571	0					
ANR	6305624	EqualityExpression	( l = is_label ( ) ) != 0		6305571	1		!=			
ANR	6305625	AssignmentExpression	l = is_label ( )		6305571	0		=			
ANR	6305626	Identifier	l		6305571	0					
ANR	6305627	CallExpression	is_label ( )		6305571	1					
ANR	6305628	Callee	is_label		6305571	0					
ANR	6305629	Identifier	is_label		6305571	0					
ANR	6305630	ArgumentList			6305571	1					
ANR	6305631	PrimaryExpression	0		6305571	1					
ANR	6305632	CompoundStatement		8:40:181:181	6305571	1					
ANR	6305633	GotoStatement	goto struct_field ;	2413:2:54815:54832	6305571	0	True				
ANR	6305634	Identifier	struct_field		6305571	0					
ANR	6305635	WhileStatement	while ( tok == '[' || tok == '.' )		6305571	6					
ANR	6305636	Condition	tok == '[' || tok == '.'	2415:8:54845:54868	6305571	0	True				
ANR	6305637	OrExpression	tok == '[' || tok == '.'		6305571	0		||			
ANR	6305638	EqualityExpression	tok == '['		6305571	0		==			
ANR	6305639	Identifier	tok		6305571	0					
ANR	6305640	PrimaryExpression	'['		6305571	1					
ANR	6305641	EqualityExpression	tok == '.'		6305571	1		==			
ANR	6305642	Identifier	tok		6305571	0					
ANR	6305643	PrimaryExpression	'.'		6305571	1					
ANR	6305644	CompoundStatement		11:34:241:241	6305571	1					
ANR	6305645	IfStatement	if ( tok == '[' )		6305571	0					
ANR	6305646	Condition	tok == '['	2416:6:54879:54888	6305571	0	True				
ANR	6305647	EqualityExpression	tok == '['		6305571	0		==			
ANR	6305648	Identifier	tok		6305571	0					
ANR	6305649	PrimaryExpression	'['		6305571	1					
ANR	6305650	CompoundStatement		12:18:261:261	6305571	1					
ANR	6305651	IfStatement	if ( ! ( type -> t & VT_ARRAY ) )		6305571	0					
ANR	6305652	Condition	! ( type -> t & VT_ARRAY )	2417:7:54900:54920	6305571	0	True				
ANR	6305653	UnaryOperationExpression	! ( type -> t & VT_ARRAY )		6305571	0					
ANR	6305654	UnaryOperator	!		6305571	0					
ANR	6305655	BitAndExpression	type -> t & VT_ARRAY		6305571	1		&			
ANR	6305656	PtrMemberAccess	type -> t		6305571	0					
ANR	6305657	Identifier	type		6305571	0					
ANR	6305658	Identifier	t		6305571	1					
ANR	6305659	Identifier	VT_ARRAY		6305571	1					
ANR	6305660	CompoundStatement		13:30:293:293	6305571	1					
ANR	6305661	ExpressionStatement	"expect ( ""array type"" )"	2418:4:54929:54950	6305571	0	True				
ANR	6305662	CallExpression	"expect ( ""array type"" )"		6305571	0					
ANR	6305663	Callee	expect		6305571	0					
ANR	6305664	Identifier	expect		6305571	0					
ANR	6305665	ArgumentList	"""array type"""		6305571	1					
ANR	6305666	Argument	"""array type"""		6305571	0					
ANR	6305667	PrimaryExpression	"""array type"""		6305571	0					
ANR	6305668	ExpressionStatement	s = type -> ref	2420:3:54960:54973	6305571	1	True				
ANR	6305669	AssignmentExpression	s = type -> ref		6305571	0		=			
ANR	6305670	Identifier	s		6305571	0					
ANR	6305671	PtrMemberAccess	type -> ref		6305571	1					
ANR	6305672	Identifier	type		6305571	0					
ANR	6305673	Identifier	ref		6305571	1					
ANR	6305674	ExpressionStatement	next ( )	2421:3:54978:54985	6305571	2	True				
ANR	6305675	CallExpression	next ( )		6305571	0					
ANR	6305676	Callee	next		6305571	0					
ANR	6305677	Identifier	next		6305571	0					
ANR	6305678	ArgumentList			6305571	1					
ANR	6305679	ExpressionStatement	index = expr_const ( )	2422:3:54990:55011	6305571	3	True				
ANR	6305680	AssignmentExpression	index = expr_const ( )		6305571	0		=			
ANR	6305681	Identifier	index		6305571	0					
ANR	6305682	CallExpression	expr_const ( )		6305571	1					
ANR	6305683	Callee	expr_const		6305571	0					
ANR	6305684	Identifier	expr_const		6305571	0					
ANR	6305685	ArgumentList			6305571	1					
ANR	6305686	IfStatement	if ( index < 0 || ( s -> c >= 0 && index >= s -> c ) )		6305571	4					
ANR	6305687	Condition	index < 0 || ( s -> c >= 0 && index >= s -> c )	2423:7:55020:55060	6305571	0	True				
ANR	6305688	OrExpression	index < 0 || ( s -> c >= 0 && index >= s -> c )		6305571	0		||			
ANR	6305689	RelationalExpression	index < 0		6305571	0		<			
ANR	6305690	Identifier	index		6305571	0					
ANR	6305691	PrimaryExpression	0		6305571	1					
ANR	6305692	AndExpression	s -> c >= 0 && index >= s -> c		6305571	1		&&			
ANR	6305693	RelationalExpression	s -> c >= 0		6305571	0		>=			
ANR	6305694	PtrMemberAccess	s -> c		6305571	0					
ANR	6305695	Identifier	s		6305571	0					
ANR	6305696	Identifier	c		6305571	1					
ANR	6305697	PrimaryExpression	0		6305571	1					
ANR	6305698	RelationalExpression	index >= s -> c		6305571	1		>=			
ANR	6305699	Identifier	index		6305571	0					
ANR	6305700	PtrMemberAccess	s -> c		6305571	1					
ANR	6305701	Identifier	s		6305571	0					
ANR	6305702	Identifier	c		6305571	1					
ANR	6305703	CompoundStatement		19:50:433:433	6305571	1					
ANR	6305704	ExpressionStatement	"expect ( ""invalid index"" )"	2424:4:55069:55093	6305571	0	True				
ANR	6305705	CallExpression	"expect ( ""invalid index"" )"		6305571	0					
ANR	6305706	Callee	expect		6305571	0					
ANR	6305707	Identifier	expect		6305571	0					
ANR	6305708	ArgumentList	"""invalid index"""		6305571	1					
ANR	6305709	Argument	"""invalid index"""		6305571	0					
ANR	6305710	PrimaryExpression	"""invalid index"""		6305571	0					
ANR	6305711	IfStatement	if ( tok == TOK_DOTS && gnu_ext )		6305571	5					
ANR	6305712	Condition	tok == TOK_DOTS && gnu_ext	2426:7:55107:55132	6305571	0	True				
ANR	6305713	AndExpression	tok == TOK_DOTS && gnu_ext		6305571	0		&&			
ANR	6305714	EqualityExpression	tok == TOK_DOTS		6305571	0		==			
ANR	6305715	Identifier	tok		6305571	0					
ANR	6305716	Identifier	TOK_DOTS		6305571	1					
ANR	6305717	Identifier	gnu_ext		6305571	1					
ANR	6305718	CompoundStatement		22:35:505:505	6305571	1					
ANR	6305719	ExpressionStatement	next ( )	2427:4:55141:55148	6305571	0	True				
ANR	6305720	CallExpression	next ( )		6305571	0					
ANR	6305721	Callee	next		6305571	0					
ANR	6305722	Identifier	next		6305571	0					
ANR	6305723	ArgumentList			6305571	1					
ANR	6305724	ExpressionStatement	index_last = expr_const ( )	2428:4:55154:55180	6305571	1	True				
ANR	6305725	AssignmentExpression	index_last = expr_const ( )		6305571	0		=			
ANR	6305726	Identifier	index_last		6305571	0					
ANR	6305727	CallExpression	expr_const ( )		6305571	1					
ANR	6305728	Callee	expr_const		6305571	0					
ANR	6305729	Identifier	expr_const		6305571	0					
ANR	6305730	ArgumentList			6305571	1					
ANR	6305731	IfStatement	if ( index_last < 0 || ( s -> c >= 0 && index_last >= s -> c ) || index_last < index )		6305571	2					
ANR	6305732	Condition	index_last < 0 || ( s -> c >= 0 && index_last >= s -> c ) || index_last < index	2429:8:55190:55278	6305571	0	True				
ANR	6305733	OrExpression	index_last < 0 || ( s -> c >= 0 && index_last >= s -> c ) || index_last < index		6305571	0		||			
ANR	6305734	RelationalExpression	index_last < 0		6305571	0		<			
ANR	6305735	Identifier	index_last		6305571	0					
ANR	6305736	PrimaryExpression	0		6305571	1					
ANR	6305737	OrExpression	( s -> c >= 0 && index_last >= s -> c ) || index_last < index		6305571	1		||			
ANR	6305738	AndExpression	s -> c >= 0 && index_last >= s -> c		6305571	0		&&			
ANR	6305739	RelationalExpression	s -> c >= 0		6305571	0		>=			
ANR	6305740	PtrMemberAccess	s -> c		6305571	0					
ANR	6305741	Identifier	s		6305571	0					
ANR	6305742	Identifier	c		6305571	1					
ANR	6305743	PrimaryExpression	0		6305571	1					
ANR	6305744	RelationalExpression	index_last >= s -> c		6305571	1		>=			
ANR	6305745	Identifier	index_last		6305571	0					
ANR	6305746	PtrMemberAccess	s -> c		6305571	1					
ANR	6305747	Identifier	s		6305571	0					
ANR	6305748	Identifier	c		6305571	1					
ANR	6305749	RelationalExpression	index_last < index		6305571	1		<			
ANR	6305750	Identifier	index_last		6305571	0					
ANR	6305751	Identifier	index		6305571	1					
ANR	6305752	CompoundStatement		27:28:651:651	6305571	1					
ANR	6305753	ExpressionStatement	"expect ( ""invalid index"" )"	2432:5:55288:55312	6305571	0	True				
ANR	6305754	CallExpression	"expect ( ""invalid index"" )"		6305571	0					
ANR	6305755	Callee	expect		6305571	0					
ANR	6305756	Identifier	expect		6305571	0					
ANR	6305757	ArgumentList	"""invalid index"""		6305571	1					
ANR	6305758	Argument	"""invalid index"""		6305571	0					
ANR	6305759	PrimaryExpression	"""invalid index"""		6305571	0					
ANR	6305760	ElseStatement	else		6305571	0					
ANR	6305761	CompoundStatement		30:10:700:700	6305571	0					
ANR	6305762	ExpressionStatement	index_last = index	2435:4:55336:55354	6305571	0	True				
ANR	6305763	AssignmentExpression	index_last = index		6305571	0		=			
ANR	6305764	Identifier	index_last		6305571	0					
ANR	6305765	Identifier	index		6305571	1					
ANR	6305766	ExpressionStatement	skip ( ']' )	2437:3:55364:55374	6305571	6	True				
ANR	6305767	CallExpression	skip ( ']' )		6305571	0					
ANR	6305768	Callee	skip		6305571	0					
ANR	6305769	Identifier	skip		6305571	0					
ANR	6305770	ArgumentList	']'		6305571	1					
ANR	6305771	Argument	']'		6305571	0					
ANR	6305772	PrimaryExpression	']'		6305571	0					
ANR	6305773	IfStatement	if ( ! notfirst && cur_index )		6305571	7					
ANR	6305774	Condition	! notfirst && cur_index	2438:7:55383:55404	6305571	0	True				
ANR	6305775	AndExpression	! notfirst && cur_index		6305571	0		&&			
ANR	6305776	UnaryOperationExpression	! notfirst		6305571	0					
ANR	6305777	UnaryOperator	!		6305571	0					
ANR	6305778	Identifier	notfirst		6305571	1					
ANR	6305779	Identifier	cur_index		6305571	1					
ANR	6305780	CompoundStatement		34:31:777:777	6305571	1					
ANR	6305781	ExpressionStatement	* cur_index = index_last	2439:4:55413:55436	6305571	0	True				
ANR	6305782	AssignmentExpression	* cur_index = index_last		6305571	0		=			
ANR	6305783	UnaryOperationExpression	* cur_index		6305571	0					
ANR	6305784	UnaryOperator	*		6305571	0					
ANR	6305785	Identifier	cur_index		6305571	1					
ANR	6305786	Identifier	index_last		6305571	1					
ANR	6305787	ExpressionStatement	type = pointed_type ( type )	2441:3:55446:55472	6305571	8	True				
ANR	6305788	AssignmentExpression	type = pointed_type ( type )		6305571	0		=			
ANR	6305789	Identifier	type		6305571	0					
ANR	6305790	CallExpression	pointed_type ( type )		6305571	1					
ANR	6305791	Callee	pointed_type		6305571	0					
ANR	6305792	Identifier	pointed_type		6305571	0					
ANR	6305793	ArgumentList	type		6305571	1					
ANR	6305794	Argument	type		6305571	0					
ANR	6305795	Identifier	type		6305571	0					
ANR	6305796	ExpressionStatement	"elem_size = type_size ( type , & align )"	2442:3:55477:55513	6305571	9	True				
ANR	6305797	AssignmentExpression	"elem_size = type_size ( type , & align )"		6305571	0		=			
ANR	6305798	Identifier	elem_size		6305571	0					
ANR	6305799	CallExpression	"type_size ( type , & align )"		6305571	1					
ANR	6305800	Callee	type_size		6305571	0					
ANR	6305801	Identifier	type_size		6305571	0					
ANR	6305802	ArgumentList	type		6305571	1					
ANR	6305803	Argument	type		6305571	0					
ANR	6305804	Identifier	type		6305571	0					
ANR	6305805	Argument	& align		6305571	1					
ANR	6305806	UnaryOperationExpression	& align		6305571	0					
ANR	6305807	UnaryOperator	&		6305571	0					
ANR	6305808	Identifier	align		6305571	1					
ANR	6305809	ExpressionStatement	c += index * elem_size	2443:3:55518:55540	6305571	10	True				
ANR	6305810	AssignmentExpression	c += index * elem_size		6305571	0		+=			
ANR	6305811	Identifier	c		6305571	0					
ANR	6305812	MultiplicativeExpression	index * elem_size		6305571	1		*			
ANR	6305813	Identifier	index		6305571	0					
ANR	6305814	Identifier	elem_size		6305571	1					
ANR	6305815	ExpressionStatement	nb_elems = index_last - index + 1	2445:3:55603:55636	6305571	11	True				
ANR	6305816	AssignmentExpression	nb_elems = index_last - index + 1		6305571	0		=			
ANR	6305817	Identifier	nb_elems		6305571	0					
ANR	6305818	AdditiveExpression	index_last - index + 1		6305571	1		-			
ANR	6305819	Identifier	index_last		6305571	0					
ANR	6305820	AdditiveExpression	index + 1		6305571	1		+			
ANR	6305821	Identifier	index		6305571	0					
ANR	6305822	PrimaryExpression	1		6305571	1					
ANR	6305823	IfStatement	if ( nb_elems != 1 )		6305571	12					
ANR	6305824	Condition	nb_elems != 1	2446:7:55645:55657	6305571	0	True				
ANR	6305825	EqualityExpression	nb_elems != 1		6305571	0		!=			
ANR	6305826	Identifier	nb_elems		6305571	0					
ANR	6305827	PrimaryExpression	1		6305571	1					
ANR	6305828	CompoundStatement		42:22:1030:1030	6305571	1					
ANR	6305829	ExpressionStatement	notfirst = 1	2447:4:55666:55678	6305571	0	True				
ANR	6305830	AssignmentExpression	notfirst = 1		6305571	0		=			
ANR	6305831	Identifier	notfirst		6305571	0					
ANR	6305832	PrimaryExpression	1		6305571	1					
ANR	6305833	BreakStatement	break ;	2448:4:55684:55689	6305571	1	True				
ANR	6305834	ElseStatement	else		6305571	0					
ANR	6305835	CompoundStatement		46:9:1075:1075	6305571	0					
ANR	6305836	ExpressionStatement	next ( )	2451:3:55710:55717	6305571	0	True				
ANR	6305837	CallExpression	next ( )		6305571	0					
ANR	6305838	Callee	next		6305571	0					
ANR	6305839	Identifier	next		6305571	0					
ANR	6305840	ArgumentList			6305571	1					
ANR	6305841	ExpressionStatement	l = tok	2452:3:55722:55729	6305571	1	True				
ANR	6305842	AssignmentExpression	l = tok		6305571	0		=			
ANR	6305843	Identifier	l		6305571	0					
ANR	6305844	Identifier	tok		6305571	1					
ANR	6305845	ExpressionStatement	next ( )	2453:3:55734:55741	6305571	2	True				
ANR	6305846	CallExpression	next ( )		6305571	0					
ANR	6305847	Callee	next		6305571	0					
ANR	6305848	Identifier	next		6305571	0					
ANR	6305849	ArgumentList			6305571	1					
ANR	6305850	Label	struct_field :	2454:0:55743:55755	6305571	3	True				
ANR	6305851	Identifier	struct_field		6305571	0					
ANR	6305852	IfStatement	if ( not_structured ( type ) )		6305571	4					
ANR	6305853	Condition	not_structured ( type )	2455:7:55764:55783	6305571	0	True				
ANR	6305854	CallExpression	not_structured ( type )		6305571	0					
ANR	6305855	Callee	not_structured		6305571	0					
ANR	6305856	Identifier	not_structured		6305571	0					
ANR	6305857	ArgumentList	type		6305571	1					
ANR	6305858	Argument	type		6305571	0					
ANR	6305859	Identifier	type		6305571	0					
ANR	6305860	CompoundStatement		51:29:1156:1156	6305571	1					
ANR	6305861	ExpressionStatement	"expect ( ""struct/union type"" )"	2456:4:55792:55820	6305571	0	True				
ANR	6305862	CallExpression	"expect ( ""struct/union type"" )"		6305571	0					
ANR	6305863	Callee	expect		6305571	0					
ANR	6305864	Identifier	expect		6305571	0					
ANR	6305865	ArgumentList	"""struct/union type"""		6305571	1					
ANR	6305866	Argument	"""struct/union type"""		6305571	0					
ANR	6305867	PrimaryExpression	"""struct/union type"""		6305571	0					
ANR	6305868	ExpressionStatement	s = type -> ref	2458:3:55830:55843	6305571	5	True				
ANR	6305869	AssignmentExpression	s = type -> ref		6305571	0		=			
ANR	6305870	Identifier	s		6305571	0					
ANR	6305871	PtrMemberAccess	type -> ref		6305571	1					
ANR	6305872	Identifier	type		6305571	0					
ANR	6305873	Identifier	ref		6305571	1					
ANR	6305874	ExpressionStatement	l |= SYM_FIELD	2459:3:55848:55862	6305571	6	True				
ANR	6305875	AssignmentExpression	l |= SYM_FIELD		6305571	0		|=			
ANR	6305876	Identifier	l		6305571	0					
ANR	6305877	Identifier	SYM_FIELD		6305571	1					
ANR	6305878	ExpressionStatement	f = s -> next	2460:3:55867:55878	6305571	7	True				
ANR	6305879	AssignmentExpression	f = s -> next		6305571	0		=			
ANR	6305880	Identifier	f		6305571	0					
ANR	6305881	PtrMemberAccess	s -> next		6305571	1					
ANR	6305882	Identifier	s		6305571	0					
ANR	6305883	Identifier	next		6305571	1					
ANR	6305884	WhileStatement	while ( f )		6305571	8					
ANR	6305885	Condition	f	2461:10:55890:55890	6305571	0	True				
ANR	6305886	Identifier	f		6305571	0					
ANR	6305887	CompoundStatement		57:13:1263:1263	6305571	1					
ANR	6305888	IfStatement	if ( f -> v == l )		6305571	0					
ANR	6305889	Condition	f -> v == l	2462:8:55903:55911	6305571	0	True				
ANR	6305890	EqualityExpression	f -> v == l		6305571	0		==			
ANR	6305891	PtrMemberAccess	f -> v		6305571	0					
ANR	6305892	Identifier	f		6305571	0					
ANR	6305893	Identifier	v		6305571	1					
ANR	6305894	Identifier	l		6305571	1					
ANR	6305895	CompoundStatement		58:19:1284:1284	6305571	1					
ANR	6305896	BreakStatement	break ;	2463:5:55921:55926	6305571	0	True				
ANR	6305897	ExpressionStatement	f = f -> next	2465:4:55938:55949	6305571	1	True				
ANR	6305898	AssignmentExpression	f = f -> next		6305571	0		=			
ANR	6305899	Identifier	f		6305571	0					
ANR	6305900	PtrMemberAccess	f -> next		6305571	1					
ANR	6305901	Identifier	f		6305571	0					
ANR	6305902	Identifier	next		6305571	1					
ANR	6305903	IfStatement	if ( ! f )		6305571	9					
ANR	6305904	Condition	! f	2467:7:55963:55964	6305571	0	True				
ANR	6305905	UnaryOperationExpression	! f		6305571	0					
ANR	6305906	UnaryOperator	!		6305571	0					
ANR	6305907	Identifier	f		6305571	1					
ANR	6305908	CompoundStatement		63:11:1337:1337	6305571	1					
ANR	6305909	ExpressionStatement	"expect ( ""field"" )"	2468:4:55973:55989	6305571	0	True				
ANR	6305910	CallExpression	"expect ( ""field"" )"		6305571	0					
ANR	6305911	Callee	expect		6305571	0					
ANR	6305912	Identifier	expect		6305571	0					
ANR	6305913	ArgumentList	"""field"""		6305571	1					
ANR	6305914	Argument	"""field"""		6305571	0					
ANR	6305915	PrimaryExpression	"""field"""		6305571	0					
ANR	6305916	IfStatement	if ( ! notfirst && cur_field )		6305571	10					
ANR	6305917	Condition	! notfirst && cur_field	2470:7:56003:56024	6305571	0	True				
ANR	6305918	AndExpression	! notfirst && cur_field		6305571	0		&&			
ANR	6305919	UnaryOperationExpression	! notfirst		6305571	0					
ANR	6305920	UnaryOperator	!		6305571	0					
ANR	6305921	Identifier	notfirst		6305571	1					
ANR	6305922	Identifier	cur_field		6305571	1					
ANR	6305923	CompoundStatement		66:31:1397:1397	6305571	1					
ANR	6305924	ExpressionStatement	* cur_field = f	2471:4:56033:56047	6305571	0	True				
ANR	6305925	AssignmentExpression	* cur_field = f		6305571	0		=			
ANR	6305926	UnaryOperationExpression	* cur_field		6305571	0					
ANR	6305927	UnaryOperator	*		6305571	0					
ANR	6305928	Identifier	cur_field		6305571	1					
ANR	6305929	Identifier	f		6305571	1					
ANR	6305930	IfStatement	if ( f )		6305571	11					
ANR	6305931	Condition	f	2474:7:56121:56121	6305571	0	True				
ANR	6305932	Identifier	f		6305571	0					
ANR	6305933	CompoundStatement		70:10:1494:1494	6305571	1					
ANR	6305934	ExpressionStatement	type1 = f -> type	2475:4:56130:56145	6305571	0	True				
ANR	6305935	AssignmentExpression	type1 = f -> type		6305571	0		=			
ANR	6305936	Identifier	type1		6305571	0					
ANR	6305937	PtrMemberAccess	f -> type		6305571	1					
ANR	6305938	Identifier	f		6305571	0					
ANR	6305939	Identifier	type		6305571	1					
ANR	6305940	ExpressionStatement	type1 . t |= ( type -> t & ~VT_TYPE )	2476:4:56151:56182	6305571	1	True				
ANR	6305941	AssignmentExpression	type1 . t |= ( type -> t & ~VT_TYPE )		6305571	0		|=			
ANR	6305942	MemberAccess	type1 . t		6305571	0					
ANR	6305943	Identifier	type1		6305571	0					
ANR	6305944	Identifier	t		6305571	1					
ANR	6305945	BitAndExpression	type -> t & ~VT_TYPE		6305571	1		&			
ANR	6305946	PtrMemberAccess	type -> t		6305571	0					
ANR	6305947	Identifier	type		6305571	0					
ANR	6305948	Identifier	t		6305571	1					
ANR	6305949	Identifier	~VT_TYPE		6305571	1					
ANR	6305950	ExpressionStatement	type = & type1	2477:4:56188:56201	6305571	2	True				
ANR	6305951	AssignmentExpression	type = & type1		6305571	0		=			
ANR	6305952	Identifier	type		6305571	0					
ANR	6305953	UnaryOperationExpression	& type1		6305571	1					
ANR	6305954	UnaryOperator	&		6305571	0					
ANR	6305955	Identifier	type1		6305571	1					
ANR	6305956	ExpressionStatement	c += f -> c	2478:4:56207:56216	6305571	3	True				
ANR	6305957	AssignmentExpression	c += f -> c		6305571	0		+=			
ANR	6305958	Identifier	c		6305571	0					
ANR	6305959	PtrMemberAccess	f -> c		6305571	1					
ANR	6305960	Identifier	f		6305571	0					
ANR	6305961	Identifier	c		6305571	1					
ANR	6305962	ExpressionStatement	notfirst = 1	2481:2:56229:56241	6305571	1	True				
ANR	6305963	AssignmentExpression	notfirst = 1		6305571	0		=			
ANR	6305964	Identifier	notfirst		6305571	0					
ANR	6305965	PrimaryExpression	1		6305571	1					
ANR	6305966	IfStatement	if ( notfirst )		6305571	7					
ANR	6305967	Condition	notfirst	2483:5:56251:56258	6305571	0	True				
ANR	6305968	Identifier	notfirst		6305571	0					
ANR	6305969	CompoundStatement		79:15:1631:1631	6305571	1					
ANR	6305970	IfStatement	if ( tok == '=' )		6305571	0					
ANR	6305971	Condition	tok == '='	2484:6:56269:56278	6305571	0	True				
ANR	6305972	EqualityExpression	tok == '='		6305571	0		==			
ANR	6305973	Identifier	tok		6305571	0					
ANR	6305974	PrimaryExpression	'='		6305571	1					
ANR	6305975	CompoundStatement		80:18:1651:1651	6305571	1					
ANR	6305976	ExpressionStatement	next ( )	2485:3:56286:56293	6305571	0	True				
ANR	6305977	CallExpression	next ( )		6305571	0					
ANR	6305978	Callee	next		6305571	0					
ANR	6305979	Identifier	next		6305571	0					
ANR	6305980	ArgumentList			6305571	1					
ANR	6305981	ElseStatement	else		6305571	0					
ANR	6305982	CompoundStatement		82:9:1674:1674	6305571	0					
ANR	6305983	IfStatement	if ( ! gnu_ext )		6305571	0					
ANR	6305984	Condition	! gnu_ext	2487:7:56313:56320	6305571	0	True				
ANR	6305985	UnaryOperationExpression	! gnu_ext		6305571	0					
ANR	6305986	UnaryOperator	!		6305571	0					
ANR	6305987	Identifier	gnu_ext		6305571	1					
ANR	6305988	CompoundStatement		83:17:1693:1693	6305571	1					
ANR	6305989	ExpressionStatement	"expect ( ""="" )"	2488:4:56329:56341	6305571	0	True				
ANR	6305990	CallExpression	"expect ( ""="" )"		6305571	0					
ANR	6305991	Callee	expect		6305571	0					
ANR	6305992	Identifier	expect		6305571	0					
ANR	6305993	ArgumentList	"""="""		6305571	1					
ANR	6305994	Argument	"""="""		6305571	0					
ANR	6305995	PrimaryExpression	"""="""		6305571	0					
ANR	6305996	ElseStatement	else		6305571	0					
ANR	6305997	CompoundStatement		87:8:1730:1730	6305571	0					
ANR	6305998	IfStatement	if ( type -> t & VT_ARRAY )		6305571	0					
ANR	6305999	Condition	type -> t & VT_ARRAY	2492:6:56368:56385	6305571	0	True				
ANR	6306000	BitAndExpression	type -> t & VT_ARRAY		6305571	0		&			
ANR	6306001	PtrMemberAccess	type -> t		6305571	0					
ANR	6306002	Identifier	type		6305571	0					
ANR	6306003	Identifier	t		6305571	1					
ANR	6306004	Identifier	VT_ARRAY		6305571	1					
ANR	6306005	CompoundStatement		88:26:1758:1758	6305571	1					
ANR	6306006	ExpressionStatement	index = cur_index ? * cur_index : 0	2493:3:56393:56427	6305571	0	True				
ANR	6306007	AssignmentExpression	index = cur_index ? * cur_index : 0		6305571	0		=			
ANR	6306008	Identifier	index		6305571	0					
ANR	6306009	ConditionalExpression	cur_index ? * cur_index : 0		6305571	1					
ANR	6306010	Condition	cur_index		6305571	0					
ANR	6306011	Identifier	cur_index		6305571	0					
ANR	6306012	UnaryOperationExpression	* cur_index		6305571	1					
ANR	6306013	UnaryOperator	*		6305571	0					
ANR	6306014	Identifier	cur_index		6305571	1					
ANR	6306015	PrimaryExpression	0		6305571	2					
ANR	6306016	ExpressionStatement	type = pointed_type ( type )	2494:3:56432:56458	6305571	1	True				
ANR	6306017	AssignmentExpression	type = pointed_type ( type )		6305571	0		=			
ANR	6306018	Identifier	type		6305571	0					
ANR	6306019	CallExpression	pointed_type ( type )		6305571	1					
ANR	6306020	Callee	pointed_type		6305571	0					
ANR	6306021	Identifier	pointed_type		6305571	0					
ANR	6306022	ArgumentList	type		6305571	1					
ANR	6306023	Argument	type		6305571	0					
ANR	6306024	Identifier	type		6305571	0					
ANR	6306025	ExpressionStatement	"c += index * type_size ( type , & align )"	2495:3:56463:56500	6305571	2	True				
ANR	6306026	AssignmentExpression	"c += index * type_size ( type , & align )"		6305571	0		+=			
ANR	6306027	Identifier	c		6305571	0					
ANR	6306028	MultiplicativeExpression	"index * type_size ( type , & align )"		6305571	1		*			
ANR	6306029	Identifier	index		6305571	0					
ANR	6306030	CallExpression	"type_size ( type , & align )"		6305571	1					
ANR	6306031	Callee	type_size		6305571	0					
ANR	6306032	Identifier	type_size		6305571	0					
ANR	6306033	ArgumentList	type		6305571	1					
ANR	6306034	Argument	type		6305571	0					
ANR	6306035	Identifier	type		6305571	0					
ANR	6306036	Argument	& align		6305571	1					
ANR	6306037	UnaryOperationExpression	& align		6305571	0					
ANR	6306038	UnaryOperator	&		6305571	0					
ANR	6306039	Identifier	align		6305571	1					
ANR	6306040	ElseStatement	else		6305571	0					
ANR	6306041	CompoundStatement		92:9:1881:1881	6305571	0					
ANR	6306042	ExpressionStatement	f = cur_field ? * cur_field : NULL	2497:3:56516:56549	6305571	0	True				
ANR	6306043	AssignmentExpression	f = cur_field ? * cur_field : NULL		6305571	0		=			
ANR	6306044	Identifier	f		6305571	0					
ANR	6306045	ConditionalExpression	cur_field ? * cur_field : NULL		6305571	1					
ANR	6306046	Condition	cur_field		6305571	0					
ANR	6306047	Identifier	cur_field		6305571	0					
ANR	6306048	UnaryOperationExpression	* cur_field		6305571	1					
ANR	6306049	UnaryOperator	*		6305571	0					
ANR	6306050	Identifier	cur_field		6305571	1					
ANR	6306051	Identifier	NULL		6305571	2					
ANR	6306052	IfStatement	if ( ! f )		6305571	1					
ANR	6306053	Condition	! f	2498:7:56558:56559	6305571	0	True				
ANR	6306054	UnaryOperationExpression	! f		6305571	0					
ANR	6306055	UnaryOperator	!		6305571	0					
ANR	6306056	Identifier	f		6305571	1					
ANR	6306057	CompoundStatement		94:11:1932:1932	6305571	1					
ANR	6306058	ExpressionStatement	"TCC_ERR ( ""too many field init"" )"	2499:4:56568:56599	6305571	0	True				
ANR	6306059	CallExpression	"TCC_ERR ( ""too many field init"" )"		6305571	0					
ANR	6306060	Callee	TCC_ERR		6305571	0					
ANR	6306061	Identifier	TCC_ERR		6305571	0					
ANR	6306062	ArgumentList	"""too many field init"""		6305571	1					
ANR	6306063	Argument	"""too many field init"""		6305571	0					
ANR	6306064	PrimaryExpression	"""too many field init"""		6305571	0					
ANR	6306065	IfStatement	if ( f )		6305571	2					
ANR	6306066	Condition	f	2502:7:56673:56673	6305571	0	True				
ANR	6306067	Identifier	f		6305571	0					
ANR	6306068	CompoundStatement		98:10:2046:2046	6305571	1					
ANR	6306069	ExpressionStatement	type1 = f -> type	2503:4:56682:56697	6305571	0	True				
ANR	6306070	AssignmentExpression	type1 = f -> type		6305571	0		=			
ANR	6306071	Identifier	type1		6305571	0					
ANR	6306072	PtrMemberAccess	f -> type		6305571	1					
ANR	6306073	Identifier	f		6305571	0					
ANR	6306074	Identifier	type		6305571	1					
ANR	6306075	ExpressionStatement	type1 . t |= ( type -> t & ~VT_TYPE )	2504:4:56703:56734	6305571	1	True				
ANR	6306076	AssignmentExpression	type1 . t |= ( type -> t & ~VT_TYPE )		6305571	0		|=			
ANR	6306077	MemberAccess	type1 . t		6305571	0					
ANR	6306078	Identifier	type1		6305571	0					
ANR	6306079	Identifier	t		6305571	1					
ANR	6306080	BitAndExpression	type -> t & ~VT_TYPE		6305571	1		&			
ANR	6306081	PtrMemberAccess	type -> t		6305571	0					
ANR	6306082	Identifier	type		6305571	0					
ANR	6306083	Identifier	t		6305571	1					
ANR	6306084	Identifier	~VT_TYPE		6305571	1					
ANR	6306085	ExpressionStatement	type = & type1	2505:4:56740:56753	6305571	2	True				
ANR	6306086	AssignmentExpression	type = & type1		6305571	0		=			
ANR	6306087	Identifier	type		6305571	0					
ANR	6306088	UnaryOperationExpression	& type1		6305571	1					
ANR	6306089	UnaryOperator	&		6305571	0					
ANR	6306090	Identifier	type1		6305571	1					
ANR	6306091	ExpressionStatement	c += f -> c	2506:4:56759:56768	6305571	3	True				
ANR	6306092	AssignmentExpression	c += f -> c		6305571	0		+=			
ANR	6306093	Identifier	c		6305571	0					
ANR	6306094	PtrMemberAccess	f -> c		6305571	1					
ANR	6306095	Identifier	f		6305571	0					
ANR	6306096	Identifier	c		6305571	1					
ANR	6306097	ExpressionStatement	"decl_initializer ( type , c , 0 , size_only )"	2510:1:56783:56823	6305571	8	True				
ANR	6306098	CallExpression	"decl_initializer ( type , c , 0 , size_only )"		6305571	0					
ANR	6306099	Callee	decl_initializer		6305571	0					
ANR	6306100	Identifier	decl_initializer		6305571	0					
ANR	6306101	ArgumentList	type		6305571	1					
ANR	6306102	Argument	type		6305571	0					
ANR	6306103	Identifier	type		6305571	0					
ANR	6306104	Argument	c		6305571	1					
ANR	6306105	Identifier	c		6305571	0					
ANR	6306106	Argument	0		6305571	2					
ANR	6306107	PrimaryExpression	0		6305571	0					
ANR	6306108	Argument	size_only		6305571	3					
ANR	6306109	Identifier	size_only		6305571	0					
ANR	6306110	ReturnType	static void		6305571	1					
ANR	6306111	Identifier	decl_designator		6305571	2					
ANR	6306112	ParameterList	"CType * type , unsigned long c , long long * cur_index , Sym * * cur_field , int size_only"		6305571	3					
ANR	6306113	Parameter	CType * type	2402:28:54531:54541	6305571	0	True				
ANR	6306114	ParameterType	CType *		6305571	0					
ANR	6306115	Identifier	type		6305571	1					
ANR	6306116	Parameter	unsigned long c	2402:41:54544:54558	6305571	1	True				
ANR	6306117	ParameterType	unsigned long		6305571	0					
ANR	6306118	Identifier	c		6305571	1					
ANR	6306119	Parameter	long long * cur_index	2403:7:54568:54587	6305571	2	True				
ANR	6306120	ParameterType	long long *		6305571	0					
ANR	6306121	Identifier	cur_index		6305571	1					
ANR	6306122	Parameter	Sym * * cur_field	2403:29:54590:54604	6305571	3	True				
ANR	6306123	ParameterType	Sym * *		6305571	0					
ANR	6306124	Identifier	cur_field		6305571	1					
ANR	6306125	Parameter	int size_only	2404:7:54614:54626	6305571	4	True				
ANR	6306126	ParameterType	int		6305571	0					
ANR	6306127	Identifier	size_only		6305571	1					
ANR	6306128	CFGEntryNode	ENTRY		6305571		True				
ANR	6306129	CFGExitNode	EXIT		6305571		True				
ANR	6306130	Symbol	* cur_field		6305571						
ANR	6306131	Symbol	expr_const		6305571						
ANR	6306132	Symbol	CType		6305571						
ANR	6306133	Symbol	f -> c		6305571						
ANR	6306134	Symbol	s -> next		6305571						
ANR	6306135	Symbol	type		6305571						
ANR	6306136	Symbol	align		6305571						
ANR	6306137	Symbol	tok		6305571						
ANR	6306138	Symbol	type_size		6305571						
ANR	6306139	Symbol	SYM_FIELD		6305571						
ANR	6306140	Symbol	s -> c		6305571						
ANR	6306141	Symbol	* type		6305571						
ANR	6306142	Symbol	pointed_type		6305571						
ANR	6306143	Symbol	& align		6305571						
ANR	6306144	Symbol	is_label		6305571						
ANR	6306145	Symbol	type1 . t		6305571						
ANR	6306146	Symbol	& type1		6305571						
ANR	6306147	Symbol	type -> ref		6305571						
ANR	6306148	Symbol	c		6305571						
ANR	6306149	Symbol	NULL		6305571						
ANR	6306150	Symbol	gnu_ext		6305571						
ANR	6306151	Symbol	f		6305571						
ANR	6306152	Symbol	index_last		6305571						
ANR	6306153	Symbol	f -> v		6305571						
ANR	6306154	Symbol	f -> type		6305571						
ANR	6306155	Symbol	notfirst		6305571						
ANR	6306156	Symbol	index		6305571						
ANR	6306157	Symbol	cur_field		6305571						
ANR	6306158	Symbol	l		6305571						
ANR	6306159	Symbol	type1		6305571						
ANR	6306160	Symbol	* cur_index		6305571						
ANR	6306161	Symbol	cur_index		6305571						
ANR	6306162	Symbol	f -> next		6305571						
ANR	6306163	Symbol	* f		6305571						
ANR	6306164	Symbol	size_only		6305571						
ANR	6306165	Symbol	s		6305571						
ANR	6306166	Symbol	elem_size		6305571						
ANR	6306167	Symbol	type -> t		6305571						
ANR	6306168	Symbol	~VT_TYPE		6305571						
ANR	6306169	Symbol	nb_elems		6305571						
ANR	6306170	Symbol	TOK_DOTS		6305571						
ANR	6306171	Symbol	* s		6305571						
ANR	6306172	Symbol	VT_ARRAY		6305571						
ANR	6306173	Symbol	not_structured		6305571						
ANR	6306174	Function	init_putv	2518:0:56971:57681							
ANR	6306175	FunctionDef	"init_putv (CType * type , unsigned long c , long long v , int expr_type)"		6306174	0					
ANR	6306176	CompoundStatement		2518:80:57051:57681	6306174	0					
ANR	6306177	IdentifierDeclStatement	int saved_global_expr ;	2519:1:57054:57075	6306174	0	True				
ANR	6306178	IdentifierDecl	saved_global_expr		6306174	0					
ANR	6306179	IdentifierDeclType	int		6306174	0					
ANR	6306180	Identifier	saved_global_expr		6306174	1					
ANR	6306181	IdentifierDeclStatement	CType dtype ;	2520:1:57078:57089	6306174	1	True				
ANR	6306182	IdentifierDecl	dtype		6306174	0					
ANR	6306183	IdentifierDeclType	CType		6306174	0					
ANR	6306184	Identifier	dtype		6306174	1					
ANR	6306185	SwitchStatement	switch ( expr_type )		6306174	2					
ANR	6306186	Condition	expr_type	2522:9:57101:57109	6306174	0	True				
ANR	6306187	Identifier	expr_type		6306174	0					
ANR	6306188	CompoundStatement		5:20:60:60	6306174	1					
ANR	6306189	Label	case EXPR_VAL :	2523:1:57115:57128	6306174	0	True				
ANR	6306190	Identifier	EXPR_VAL		6306174	0					
ANR	6306191	ExpressionStatement	vpushll ( v )	2524:2:57132:57143	6306174	1	True				
ANR	6306192	CallExpression	vpushll ( v )		6306174	0					
ANR	6306193	Callee	vpushll		6306174	0					
ANR	6306194	Identifier	vpushll		6306174	0					
ANR	6306195	ArgumentList	v		6306174	1					
ANR	6306196	Argument	v		6306174	0					
ANR	6306197	Identifier	v		6306174	0					
ANR	6306198	BreakStatement	break ;	2525:2:57147:57152	6306174	2	True				
ANR	6306199	Label	case EXPR_CONST :	2526:1:57155:57170	6306174	3	True				
ANR	6306200	Identifier	EXPR_CONST		6306174	0					
ANR	6306201	ExpressionStatement	saved_global_expr = global_expr	2528:2:57240:57271	6306174	4	True				
ANR	6306202	AssignmentExpression	saved_global_expr = global_expr		6306174	0		=			
ANR	6306203	Identifier	saved_global_expr		6306174	0					
ANR	6306204	Identifier	global_expr		6306174	1					
ANR	6306205	ExpressionStatement	global_expr = 1	2529:2:57275:57290	6306174	5	True				
ANR	6306206	AssignmentExpression	global_expr = 1		6306174	0		=			
ANR	6306207	Identifier	global_expr		6306174	0					
ANR	6306208	PrimaryExpression	1		6306174	1					
ANR	6306209	ExpressionStatement	expr_const1 ( )	2530:2:57294:57308	6306174	6	True				
ANR	6306210	CallExpression	expr_const1 ( )		6306174	0					
ANR	6306211	Callee	expr_const1		6306174	0					
ANR	6306212	Identifier	expr_const1		6306174	0					
ANR	6306213	ArgumentList			6306174	1					
ANR	6306214	ExpressionStatement	global_expr = saved_global_expr	2531:2:57312:57343	6306174	7	True				
ANR	6306215	AssignmentExpression	global_expr = saved_global_expr		6306174	0		=			
ANR	6306216	Identifier	global_expr		6306174	0					
ANR	6306217	Identifier	saved_global_expr		6306174	1					
ANR	6306218	IfStatement	if ( ( vtop -> r & ( VT_VALMASK | VT_LVAL ) ) != VT_CONST )		6306174	8					
ANR	6306219	Condition	( vtop -> r & ( VT_VALMASK | VT_LVAL ) ) != VT_CONST	2533:6:57386:57431	6306174	0	True				
ANR	6306220	EqualityExpression	( vtop -> r & ( VT_VALMASK | VT_LVAL ) ) != VT_CONST		6306174	0		!=			
ANR	6306221	BitAndExpression	vtop -> r & ( VT_VALMASK | VT_LVAL )		6306174	0		&			
ANR	6306222	PtrMemberAccess	vtop -> r		6306174	0					
ANR	6306223	Identifier	vtop		6306174	0					
ANR	6306224	Identifier	r		6306174	1					
ANR	6306225	InclusiveOrExpression	VT_VALMASK | VT_LVAL		6306174	1		|			
ANR	6306226	Identifier	VT_VALMASK		6306174	0					
ANR	6306227	Identifier	VT_LVAL		6306174	1					
ANR	6306228	Identifier	VT_CONST		6306174	1					
ANR	6306229	CompoundStatement		16:54:382:382	6306174	1					
ANR	6306230	ExpressionStatement	"TCC_ERR ( ""initializer element is not constant"" )"	2534:3:57439:57486	6306174	0	True				
ANR	6306231	CallExpression	"TCC_ERR ( ""initializer element is not constant"" )"		6306174	0					
ANR	6306232	Callee	TCC_ERR		6306174	0					
ANR	6306233	Identifier	TCC_ERR		6306174	0					
ANR	6306234	ArgumentList	"""initializer element is not constant"""		6306174	1					
ANR	6306235	Argument	"""initializer element is not constant"""		6306174	0					
ANR	6306236	PrimaryExpression	"""initializer element is not constant"""		6306174	0					
ANR	6306237	BreakStatement	break ;	2536:2:57494:57499	6306174	9	True				
ANR	6306238	Label	case EXPR_ANY :	2537:1:57502:57515	6306174	10	True				
ANR	6306239	Identifier	EXPR_ANY		6306174	0					
ANR	6306240	ExpressionStatement	expr_eq ( )	2538:2:57519:57529	6306174	11	True				
ANR	6306241	CallExpression	expr_eq ( )		6306174	0					
ANR	6306242	Callee	expr_eq		6306174	0					
ANR	6306243	Identifier	expr_eq		6306174	0					
ANR	6306244	ArgumentList			6306174	1					
ANR	6306245	BreakStatement	break ;	2539:2:57533:57538	6306174	12	True				
ANR	6306246	ExpressionStatement	dtype = * type	2542:1:57545:57558	6306174	3	True				
ANR	6306247	AssignmentExpression	dtype = * type		6306174	0		=			
ANR	6306248	Identifier	dtype		6306174	0					
ANR	6306249	UnaryOperationExpression	* type		6306174	1					
ANR	6306250	UnaryOperator	*		6306174	0					
ANR	6306251	Identifier	type		6306174	1					
ANR	6306252	ExpressionStatement	dtype . t &= ~VT_CONSTANT	2543:1:57561:57584	6306174	4	True				
ANR	6306253	AssignmentExpression	dtype . t &= ~VT_CONSTANT		6306174	0		&=			
ANR	6306254	MemberAccess	dtype . t		6306174	0					
ANR	6306255	Identifier	dtype		6306174	0					
ANR	6306256	Identifier	t		6306174	1					
ANR	6306257	Identifier	~VT_CONSTANT		6306174	1					
ANR	6306258	ExpressionStatement	"vset ( & dtype , VT_LOCAL | VT_LVAL , c )"	2545:1:57632:57668	6306174	5	True				
ANR	6306259	CallExpression	"vset ( & dtype , VT_LOCAL | VT_LVAL , c )"		6306174	0					
ANR	6306260	Callee	vset		6306174	0					
ANR	6306261	Identifier	vset		6306174	0					
ANR	6306262	ArgumentList	& dtype		6306174	1					
ANR	6306263	Argument	& dtype		6306174	0					
ANR	6306264	UnaryOperationExpression	& dtype		6306174	0					
ANR	6306265	UnaryOperator	&		6306174	0					
ANR	6306266	Identifier	dtype		6306174	1					
ANR	6306267	Argument	VT_LOCAL | VT_LVAL		6306174	1					
ANR	6306268	InclusiveOrExpression	VT_LOCAL | VT_LVAL		6306174	0		|			
ANR	6306269	Identifier	VT_LOCAL		6306174	0					
ANR	6306270	Identifier	VT_LVAL		6306174	1					
ANR	6306271	Argument	c		6306174	2					
ANR	6306272	Identifier	c		6306174	0					
ANR	6306273	ExpressionStatement	vswap ( )	2546:1:57671:57679	6306174	6	True				
ANR	6306274	CallExpression	vswap ( )		6306174	0					
ANR	6306275	Callee	vswap		6306174	0					
ANR	6306276	Identifier	vswap		6306174	0					
ANR	6306277	ArgumentList			6306174	1					
ANR	6306278	ReturnType	static void		6306174	1					
ANR	6306279	Identifier	init_putv		6306174	2					
ANR	6306280	ParameterList	"CType * type , unsigned long c , long long v , int expr_type"		6306174	3					
ANR	6306281	Parameter	CType * type	2518:22:56993:57003	6306174	0	True				
ANR	6306282	ParameterType	CType *		6306174	0					
ANR	6306283	Identifier	type		6306174	1					
ANR	6306284	Parameter	unsigned long c	2518:35:57006:57020	6306174	1	True				
ANR	6306285	ParameterType	unsigned long		6306174	0					
ANR	6306286	Identifier	c		6306174	1					
ANR	6306287	Parameter	long long v	2518:52:57023:57033	6306174	2	True				
ANR	6306288	ParameterType	long long		6306174	0					
ANR	6306289	Identifier	v		6306174	1					
ANR	6306290	Parameter	int expr_type	2518:65:57036:57048	6306174	3	True				
ANR	6306291	ParameterType	int		6306174	0					
ANR	6306292	Identifier	expr_type		6306174	1					
ANR	6306293	CFGEntryNode	ENTRY		6306174		True				
ANR	6306294	CFGExitNode	EXIT		6306174		True				
ANR	6306295	Symbol	global_expr		6306174						
ANR	6306296	Symbol	VT_CONST		6306174						
ANR	6306297	Symbol	c		6306174						
ANR	6306298	Symbol	expr_type		6306174						
ANR	6306299	Symbol	vtop		6306174						
ANR	6306300	Symbol	~VT_CONSTANT		6306174						
ANR	6306301	Symbol	dtype		6306174						
ANR	6306302	Symbol	VT_VALMASK		6306174						
ANR	6306303	Symbol	VT_LOCAL		6306174						
ANR	6306304	Symbol	type		6306174						
ANR	6306305	Symbol	* vtop		6306174						
ANR	6306306	Symbol	dtype . t		6306174						
ANR	6306307	Symbol	* type		6306174						
ANR	6306308	Symbol	v		6306174						
ANR	6306309	Symbol	saved_global_expr		6306174						
ANR	6306310	Symbol	vtop -> r		6306174						
ANR	6306311	Symbol	VT_LVAL		6306174						
ANR	6306312	Symbol	& dtype		6306174						
ANR	6306313	Function	init_putz	2550:0:57724:57836							
ANR	6306314	FunctionDef	"init_putz (CType * t , unsigned long c , int size)"		6306313	0					
ANR	6306315	CompoundStatement		2550:59:57783:57836	6306313	0					
ANR	6306316	ExpressionStatement	"vseti ( VT_LOCAL , c )"	2551:1:57786:57805	6306313	0	True				
ANR	6306317	CallExpression	"vseti ( VT_LOCAL , c )"		6306313	0					
ANR	6306318	Callee	vseti		6306313	0					
ANR	6306319	Identifier	vseti		6306313	0					
ANR	6306320	ArgumentList	VT_LOCAL		6306313	1					
ANR	6306321	Argument	VT_LOCAL		6306313	0					
ANR	6306322	Identifier	VT_LOCAL		6306313	0					
ANR	6306323	Argument	c		6306313	1					
ANR	6306324	Identifier	c		6306313	0					
ANR	6306325	ExpressionStatement	vpushi ( 0 )	2552:1:57808:57818	6306313	1	True				
ANR	6306326	CallExpression	vpushi ( 0 )		6306313	0					
ANR	6306327	Callee	vpushi		6306313	0					
ANR	6306328	Identifier	vpushi		6306313	0					
ANR	6306329	ArgumentList	0		6306313	1					
ANR	6306330	Argument	0		6306313	0					
ANR	6306331	PrimaryExpression	0		6306313	0					
ANR	6306332	ExpressionStatement	vpushs ( size )	2553:1:57821:57834	6306313	2	True				
ANR	6306333	CallExpression	vpushs ( size )		6306313	0					
ANR	6306334	Callee	vpushs		6306313	0					
ANR	6306335	Identifier	vpushs		6306313	0					
ANR	6306336	ArgumentList	size		6306313	1					
ANR	6306337	Argument	size		6306313	0					
ANR	6306338	Identifier	size		6306313	0					
ANR	6306339	ReturnType	static void		6306313	1					
ANR	6306340	Identifier	init_putz		6306313	2					
ANR	6306341	ParameterList	"CType * t , unsigned long c , int size"		6306313	3					
ANR	6306342	Parameter	CType * t	2550:22:57746:57753	6306313	0	True				
ANR	6306343	ParameterType	CType *		6306313	0					
ANR	6306344	Identifier	t		6306313	1					
ANR	6306345	Parameter	unsigned long c	2550:32:57756:57770	6306313	1	True				
ANR	6306346	ParameterType	unsigned long		6306313	0					
ANR	6306347	Identifier	c		6306313	1					
ANR	6306348	Parameter	int size	2550:49:57773:57780	6306313	2	True				
ANR	6306349	ParameterType	int		6306313	0					
ANR	6306350	Identifier	size		6306313	1					
ANR	6306351	CFGEntryNode	ENTRY		6306313		True				
ANR	6306352	CFGExitNode	EXIT		6306313		True				
ANR	6306353	Symbol	c		6306313						
ANR	6306354	Symbol	t		6306313						
ANR	6306355	Symbol	size		6306313						
ANR	6306356	Symbol	VT_LOCAL		6306313						
ANR	6306357	Function	decl_initializer	2561:0:58161:64311							
ANR	6306358	FunctionDef	"decl_initializer (CType * type , unsigned long c , int first , int size_only)"		6306357	0					
ANR	6306359	CompoundStatement		2561:85:58246:64311	6306357	0					
ANR	6306360	IdentifierDeclStatement	long long index ;	2562:1:58249:58264	6306357	0	True				
ANR	6306361	IdentifierDecl	index		6306357	0					
ANR	6306362	IdentifierDeclType	long long		6306357	0					
ANR	6306363	Identifier	index		6306357	1					
ANR	6306364	IdentifierDeclStatement	"int array_length , n , no_oblock , nb , parlevel , parlevel1 , i ;"	2563:1:58267:58325	6306357	1	True				
ANR	6306365	IdentifierDecl	array_length		6306357	0					
ANR	6306366	IdentifierDeclType	int		6306357	0					
ANR	6306367	Identifier	array_length		6306357	1					
ANR	6306368	IdentifierDecl	n		6306357	1					
ANR	6306369	IdentifierDeclType	int		6306357	0					
ANR	6306370	Identifier	n		6306357	1					
ANR	6306371	IdentifierDecl	no_oblock		6306357	2					
ANR	6306372	IdentifierDeclType	int		6306357	0					
ANR	6306373	Identifier	no_oblock		6306357	1					
ANR	6306374	IdentifierDecl	nb		6306357	3					
ANR	6306375	IdentifierDeclType	int		6306357	0					
ANR	6306376	Identifier	nb		6306357	1					
ANR	6306377	IdentifierDecl	parlevel		6306357	4					
ANR	6306378	IdentifierDeclType	int		6306357	0					
ANR	6306379	Identifier	parlevel		6306357	1					
ANR	6306380	IdentifierDecl	parlevel1		6306357	5					
ANR	6306381	IdentifierDeclType	int		6306357	0					
ANR	6306382	Identifier	parlevel1		6306357	1					
ANR	6306383	IdentifierDecl	i		6306357	6					
ANR	6306384	IdentifierDeclType	int		6306357	0					
ANR	6306385	Identifier	i		6306357	1					
ANR	6306386	IdentifierDeclStatement	"int size1 , align1 , expr_type ;"	2564:1:58328:58356	6306357	2	True				
ANR	6306387	IdentifierDecl	size1		6306357	0					
ANR	6306388	IdentifierDeclType	int		6306357	0					
ANR	6306389	Identifier	size1		6306357	1					
ANR	6306390	IdentifierDecl	align1		6306357	1					
ANR	6306391	IdentifierDeclType	int		6306357	0					
ANR	6306392	Identifier	align1		6306357	1					
ANR	6306393	IdentifierDecl	expr_type		6306357	2					
ANR	6306394	IdentifierDeclType	int		6306357	0					
ANR	6306395	Identifier	expr_type		6306357	1					
ANR	6306396	IdentifierDeclStatement	"Sym * s , * f ;"	2565:1:58359:58369	6306357	3	True				
ANR	6306397	IdentifierDecl	* s		6306357	0					
ANR	6306398	IdentifierDeclType	Sym *		6306357	0					
ANR	6306399	Identifier	s		6306357	1					
ANR	6306400	IdentifierDecl	* f		6306357	1					
ANR	6306401	IdentifierDeclType	Sym *		6306357	0					
ANR	6306402	Identifier	f		6306357	1					
ANR	6306403	IdentifierDeclStatement	CType * t1 ;	2566:1:58372:58381	6306357	4	True				
ANR	6306404	IdentifierDecl	* t1		6306357	0					
ANR	6306405	IdentifierDeclType	CType *		6306357	0					
ANR	6306406	Identifier	t1		6306357	1					
ANR	6306407	IfStatement	if ( type -> t & VT_ARRAY )		6306357	5					
ANR	6306408	Condition	type -> t & VT_ARRAY	2568:5:58389:58406	6306357	0	True				
ANR	6306409	BitAndExpression	type -> t & VT_ARRAY		6306357	0		&			
ANR	6306410	PtrMemberAccess	type -> t		6306357	0					
ANR	6306411	Identifier	type		6306357	0					
ANR	6306412	Identifier	t		6306357	1					
ANR	6306413	Identifier	VT_ARRAY		6306357	1					
ANR	6306414	CompoundStatement		8:25:162:162	6306357	1					
ANR	6306415	ExpressionStatement	s = type -> ref	2569:2:58413:58426	6306357	0	True				
ANR	6306416	AssignmentExpression	s = type -> ref		6306357	0		=			
ANR	6306417	Identifier	s		6306357	0					
ANR	6306418	PtrMemberAccess	type -> ref		6306357	1					
ANR	6306419	Identifier	type		6306357	0					
ANR	6306420	Identifier	ref		6306357	1					
ANR	6306421	ExpressionStatement	n = s -> c	2570:2:58430:58438	6306357	1	True				
ANR	6306422	AssignmentExpression	n = s -> c		6306357	0		=			
ANR	6306423	Identifier	n		6306357	0					
ANR	6306424	PtrMemberAccess	s -> c		6306357	1					
ANR	6306425	Identifier	s		6306357	0					
ANR	6306426	Identifier	c		6306357	1					
ANR	6306427	ExpressionStatement	array_length = 0	2571:2:58442:58458	6306357	2	True				
ANR	6306428	AssignmentExpression	array_length = 0		6306357	0		=			
ANR	6306429	Identifier	array_length		6306357	0					
ANR	6306430	PrimaryExpression	0		6306357	1					
ANR	6306431	ExpressionStatement	t1 = pointed_type ( type )	2572:2:58462:58486	6306357	3	True				
ANR	6306432	AssignmentExpression	t1 = pointed_type ( type )		6306357	0		=			
ANR	6306433	Identifier	t1		6306357	0					
ANR	6306434	CallExpression	pointed_type ( type )		6306357	1					
ANR	6306435	Callee	pointed_type		6306357	0					
ANR	6306436	Identifier	pointed_type		6306357	0					
ANR	6306437	ArgumentList	type		6306357	1					
ANR	6306438	Argument	type		6306357	0					
ANR	6306439	Identifier	type		6306357	0					
ANR	6306440	ExpressionStatement	"size1 = type_size ( t1 , & align1 )"	2573:2:58490:58521	6306357	4	True				
ANR	6306441	AssignmentExpression	"size1 = type_size ( t1 , & align1 )"		6306357	0		=			
ANR	6306442	Identifier	size1		6306357	0					
ANR	6306443	CallExpression	"type_size ( t1 , & align1 )"		6306357	1					
ANR	6306444	Callee	type_size		6306357	0					
ANR	6306445	Identifier	type_size		6306357	0					
ANR	6306446	ArgumentList	t1		6306357	1					
ANR	6306447	Argument	t1		6306357	0					
ANR	6306448	Identifier	t1		6306357	0					
ANR	6306449	Argument	& align1		6306357	1					
ANR	6306450	UnaryOperationExpression	& align1		6306357	0					
ANR	6306451	UnaryOperator	&		6306357	0					
ANR	6306452	Identifier	align1		6306357	1					
ANR	6306453	ExpressionStatement	no_oblock = 1	2575:2:58526:58539	6306357	5	True				
ANR	6306454	AssignmentExpression	no_oblock = 1		6306357	0		=			
ANR	6306455	Identifier	no_oblock		6306357	0					
ANR	6306456	PrimaryExpression	1		6306357	1					
ANR	6306457	IfStatement	if ( ( first && tok != TOK_LSTR && tok != TOK_STR ) || tok == '{' )		6306357	6					
ANR	6306458	Condition	( first && tok != TOK_LSTR && tok != TOK_STR ) || tok == '{'	2576:6:58547:58610	6306357	0	True				
ANR	6306459	OrExpression	( first && tok != TOK_LSTR && tok != TOK_STR ) || tok == '{'		6306357	0		||			
ANR	6306460	AndExpression	first && tok != TOK_LSTR && tok != TOK_STR		6306357	0		&&			
ANR	6306461	Identifier	first		6306357	0					
ANR	6306462	AndExpression	tok != TOK_LSTR && tok != TOK_STR		6306357	1		&&			
ANR	6306463	EqualityExpression	tok != TOK_LSTR		6306357	0		!=			
ANR	6306464	Identifier	tok		6306357	0					
ANR	6306465	Identifier	TOK_LSTR		6306357	1					
ANR	6306466	EqualityExpression	tok != TOK_STR		6306357	1		!=			
ANR	6306467	Identifier	tok		6306357	0					
ANR	6306468	Identifier	TOK_STR		6306357	1					
ANR	6306469	EqualityExpression	tok == '{'		6306357	1		==			
ANR	6306470	Identifier	tok		6306357	0					
ANR	6306471	PrimaryExpression	'{'		6306357	1					
ANR	6306472	CompoundStatement		17:18:366:366	6306357	1					
ANR	6306473	IfStatement	if ( tok != '{' )		6306357	0					
ANR	6306474	Condition	tok != '{'	2578:7:58622:58631	6306357	0	True				
ANR	6306475	EqualityExpression	tok != '{'		6306357	0		!=			
ANR	6306476	Identifier	tok		6306357	0					
ANR	6306477	PrimaryExpression	'{'		6306357	1					
ANR	6306478	CompoundStatement		18:19:387:387	6306357	1					
ANR	6306479	Statement	TCC_ERR	2579:4:58640:58646	6306357	0	True				
ANR	6306480	Statement	(	2579:12:58648:58648	6306357	1	True				
ANR	6306481	Statement	"""character array initializer must be a literal,"""	2579:13:58649:58696	6306357	2	True				
ANR	6306482	Statement	""" optionally enclosed in braces"""	2580:5:58703:58734	6306357	3	True				
ANR	6306483	Statement	)	2580:37:58735:58735	6306357	4	True				
ANR	6306484	ExpressionStatement		2580:38:58736:58736	6306357	5	True				
ANR	6306485	ExpressionStatement	skip ( '{' )	2582:3:58746:58756	6306357	1	True				
ANR	6306486	CallExpression	skip ( '{' )		6306357	0					
ANR	6306487	Callee	skip		6306357	0					
ANR	6306488	Identifier	skip		6306357	0					
ANR	6306489	ArgumentList	'{'		6306357	1					
ANR	6306490	Argument	'{'		6306357	0					
ANR	6306491	PrimaryExpression	'{'		6306357	0					
ANR	6306492	ExpressionStatement	no_oblock = 0	2583:3:58761:58774	6306357	2	True				
ANR	6306493	AssignmentExpression	no_oblock = 0		6306357	0		=			
ANR	6306494	Identifier	no_oblock		6306357	0					
ANR	6306495	PrimaryExpression	0		6306357	1					
ANR	6306496	ElseStatement	else		6306357	0					
ANR	6306497	CompoundStatement		80:9:2122:2122	6306357	0					
ANR	6306498	ExpressionStatement	index = 0	2641:3:60374:60383	6306357	0	True				
ANR	6306499	AssignmentExpression	index = 0		6306357	0		=			
ANR	6306500	Identifier	index		6306357	0					
ANR	6306501	PrimaryExpression	0		6306357	1					
ANR	6306502	WhileStatement	while ( tok != '}' )		6306357	1					
ANR	6306503	Condition	tok != '}'	2642:10:60395:60404	6306357	0	True				
ANR	6306504	EqualityExpression	tok != '}'		6306357	0		!=			
ANR	6306505	Identifier	tok		6306357	0					
ANR	6306506	PrimaryExpression	'}'		6306357	1					
ANR	6306507	CompoundStatement		82:22:2160:2160	6306357	1					
ANR	6306508	ExpressionStatement	"decl_designator ( type , c , & index , NULL , size_only )"	2643:4:60413:60463	6306357	0	True				
ANR	6306509	CallExpression	"decl_designator ( type , c , & index , NULL , size_only )"		6306357	0					
ANR	6306510	Callee	decl_designator		6306357	0					
ANR	6306511	Identifier	decl_designator		6306357	0					
ANR	6306512	ArgumentList	type		6306357	1					
ANR	6306513	Argument	type		6306357	0					
ANR	6306514	Identifier	type		6306357	0					
ANR	6306515	Argument	c		6306357	1					
ANR	6306516	Identifier	c		6306357	0					
ANR	6306517	Argument	& index		6306357	2					
ANR	6306518	UnaryOperationExpression	& index		6306357	0					
ANR	6306519	UnaryOperator	&		6306357	0					
ANR	6306520	Identifier	index		6306357	1					
ANR	6306521	Argument	NULL		6306357	3					
ANR	6306522	Identifier	NULL		6306357	0					
ANR	6306523	Argument	size_only		6306357	4					
ANR	6306524	Identifier	size_only		6306357	0					
ANR	6306525	IfStatement	if ( n >= 0 && index >= n )		6306357	1					
ANR	6306526	Condition	n >= 0 && index >= n	2644:8:60473:60492	6306357	0	True				
ANR	6306527	AndExpression	n >= 0 && index >= n		6306357	0		&&			
ANR	6306528	RelationalExpression	n >= 0		6306357	0		>=			
ANR	6306529	Identifier	n		6306357	0					
ANR	6306530	PrimaryExpression	0		6306357	1					
ANR	6306531	RelationalExpression	index >= n		6306357	1		>=			
ANR	6306532	Identifier	index		6306357	0					
ANR	6306533	Identifier	n		6306357	1					
ANR	6306534	CompoundStatement		84:30:2248:2248	6306357	1					
ANR	6306535	ExpressionStatement	"TCC_ERR ( ""index too large"" )"	2645:5:60502:60529	6306357	0	True				
ANR	6306536	CallExpression	"TCC_ERR ( ""index too large"" )"		6306357	0					
ANR	6306537	Callee	TCC_ERR		6306357	0					
ANR	6306538	Identifier	TCC_ERR		6306357	0					
ANR	6306539	ArgumentList	"""index too large"""		6306357	1					
ANR	6306540	Argument	"""index too large"""		6306357	0					
ANR	6306541	PrimaryExpression	"""index too large"""		6306357	0					
ANR	6306542	IfStatement	if ( ! size_only && array_length < index )		6306357	2					
ANR	6306543	Condition	! size_only && array_length < index	2649:8:60659:60692	6306357	0	True				
ANR	6306544	AndExpression	! size_only && array_length < index		6306357	0		&&			
ANR	6306545	UnaryOperationExpression	! size_only		6306357	0					
ANR	6306546	UnaryOperator	!		6306357	0					
ANR	6306547	Identifier	size_only		6306357	1					
ANR	6306548	RelationalExpression	array_length < index		6306357	1		<			
ANR	6306549	Identifier	array_length		6306357	0					
ANR	6306550	Identifier	index		6306357	1					
ANR	6306551	CompoundStatement		89:44:2448:2448	6306357	1					
ANR	6306552	ExpressionStatement	"init_putz ( t1 , c + array_length * size1 , ( index - array_length ) * size1 )"	2650:5:60702:60780	6306357	0	True				
ANR	6306553	CallExpression	"init_putz ( t1 , c + array_length * size1 , ( index - array_length ) * size1 )"		6306357	0					
ANR	6306554	Callee	init_putz		6306357	0					
ANR	6306555	Identifier	init_putz		6306357	0					
ANR	6306556	ArgumentList	t1		6306357	1					
ANR	6306557	Argument	t1		6306357	0					
ANR	6306558	Identifier	t1		6306357	0					
ANR	6306559	Argument	c + array_length * size1		6306357	1					
ANR	6306560	AdditiveExpression	c + array_length * size1		6306357	0		+			
ANR	6306561	Identifier	c		6306357	0					
ANR	6306562	MultiplicativeExpression	array_length * size1		6306357	1		*			
ANR	6306563	Identifier	array_length		6306357	0					
ANR	6306564	Identifier	size1		6306357	1					
ANR	6306565	Argument	( index - array_length ) * size1		6306357	2					
ANR	6306566	MultiplicativeExpression	( index - array_length ) * size1		6306357	0		*			
ANR	6306567	AdditiveExpression	index - array_length		6306357	0		-			
ANR	6306568	Identifier	index		6306357	0					
ANR	6306569	Identifier	array_length		6306357	1					
ANR	6306570	Identifier	size1		6306357	1					
ANR	6306571	ExpressionStatement	index ++	2653:4:60792:60799	6306357	3	True				
ANR	6306572	PostIncDecOperationExpression	index ++		6306357	0					
ANR	6306573	Identifier	index		6306357	0					
ANR	6306574	IncDec	++		6306357	1					
ANR	6306575	IfStatement	if ( index > array_length )		6306357	4					
ANR	6306576	Condition	index > array_length	2654:8:60809:60828	6306357	0	True				
ANR	6306577	RelationalExpression	index > array_length		6306357	0		>			
ANR	6306578	Identifier	index		6306357	0					
ANR	6306579	Identifier	array_length		6306357	1					
ANR	6306580	CompoundStatement		94:30:2584:2584	6306357	1					
ANR	6306581	ExpressionStatement	array_length = index	2655:5:60838:60858	6306357	0	True				
ANR	6306582	AssignmentExpression	array_length = index		6306357	0		=			
ANR	6306583	Identifier	array_length		6306357	0					
ANR	6306584	Identifier	index		6306357	1					
ANR	6306585	IfStatement	if ( index >= n && no_oblock )		6306357	5					
ANR	6306586	Condition	index >= n && no_oblock	2660:8:61011:61033	6306357	0	True				
ANR	6306587	AndExpression	index >= n && no_oblock		6306357	0		&&			
ANR	6306588	RelationalExpression	index >= n		6306357	0		>=			
ANR	6306589	Identifier	index		6306357	0					
ANR	6306590	Identifier	n		6306357	1					
ANR	6306591	Identifier	no_oblock		6306357	1					
ANR	6306592	CompoundStatement		100:33:2789:2789	6306357	1					
ANR	6306593	BreakStatement	break ;	2661:5:61043:61048	6306357	0	True				
ANR	6306594	IfStatement	if ( tok == '}' )		6306357	6					
ANR	6306595	Condition	tok == '}'	2663:8:61064:61073	6306357	0	True				
ANR	6306596	EqualityExpression	tok == '}'		6306357	0		==			
ANR	6306597	Identifier	tok		6306357	0					
ANR	6306598	PrimaryExpression	'}'		6306357	1					
ANR	6306599	CompoundStatement		103:20:2829:2829	6306357	1					
ANR	6306600	BreakStatement	break ;	2664:5:61083:61088	6306357	0	True				
ANR	6306601	ExpressionStatement	"skip ( ',' )"	2666:4:61100:61110	6306357	7	True				
ANR	6306602	CallExpression	"skip ( ',' )"		6306357	0					
ANR	6306603	Callee	skip		6306357	0					
ANR	6306604	Identifier	skip		6306357	0					
ANR	6306605	ArgumentList	"','"		6306357	1					
ANR	6306606	Argument	"','"		6306357	0					
ANR	6306607	PrimaryExpression	"','"		6306357	0					
ANR	6306608	Statement	if	2588:2:58887:58888	6306357	7	True				
ANR	6306609	Statement	(	2588:5:58890:58890	6306357	8	True				
ANR	6306610	Statement	(	2588:6:58891:58891	6306357	9	True				
ANR	6306611	Statement	tok	2588:7:58892:58894	6306357	10	True				
ANR	6306612	Statement	==	2588:11:58896:58897	6306357	11	True				
ANR	6306613	Statement	TOK_LSTR	2588:14:58899:58906	6306357	12	True				
ANR	6306614	Statement	&&	2588:23:58908:58909	6306357	13	True				
ANR	6306615	Statement	(	2591:7:58975:58975	6306357	14	True				
ANR	6306616	Statement	t1	2591:8:58976:58977	6306357	15	True				
ANR	6306617	Statement	->	2591:10:58978:58979	6306357	16	True				
ANR	6306618	Statement	t	2591:12:58980:58980	6306357	17	True				
ANR	6306619	Statement	&	2591:14:58982:58982	6306357	18	True				
ANR	6306620	Statement	VT_BTYPE	2591:16:58984:58991	6306357	19	True				
ANR	6306621	Statement	)	2591:24:58992:58992	6306357	20	True				
ANR	6306622	Statement	==	2591:26:58994:58995	6306357	21	True				
ANR	6306623	Statement	VT_INT16	2591:29:58997:59004	6306357	22	True				
ANR	6306624	Statement	&&	2591:38:59006:59007	6306357	23	True				
ANR	6306625	Statement	(	2591:41:59009:59009	6306357	24	True				
ANR	6306626	Statement	t1	2591:42:59010:59011	6306357	25	True				
ANR	6306627	Statement	->	2591:44:59012:59013	6306357	26	True				
ANR	6306628	Statement	t	2591:46:59014:59014	6306357	27	True				
ANR	6306629	Statement	&	2591:48:59016:59016	6306357	28	True				
ANR	6306630	Statement	VT_UNSIGNED	2591:50:59018:59028	6306357	29	True				
ANR	6306631	Statement	)	2591:61:59029:59029	6306357	30	True				
ANR	6306632	Statement	)	2595:6:59088:59088	6306357	31	True				
ANR	6306633	Statement	||	2595:8:59090:59091	6306357	32	True				
ANR	6306634	Statement	(	2595:11:59093:59093	6306357	33	True				
ANR	6306635	Statement	tok	2595:12:59094:59096	6306357	34	True				
ANR	6306636	Statement	==	2595:16:59098:59099	6306357	35	True				
ANR	6306637	Statement	TOK_STR	2595:19:59101:59107	6306357	36	True				
ANR	6306638	Statement	&&	2595:27:59109:59110	6306357	37	True				
ANR	6306639	Statement	(	2595:30:59112:59112	6306357	38	True				
ANR	6306640	Statement	t1	2595:31:59113:59114	6306357	39	True				
ANR	6306641	Statement	->	2595:33:59115:59116	6306357	40	True				
ANR	6306642	Statement	t	2595:35:59117:59117	6306357	41	True				
ANR	6306643	Statement	&	2595:37:59119:59119	6306357	42	True				
ANR	6306644	Statement	VT_BTYPE	2595:39:59121:59128	6306357	43	True				
ANR	6306645	Statement	)	2595:47:59129:59129	6306357	44	True				
ANR	6306646	Statement	==	2595:49:59131:59132	6306357	45	True				
ANR	6306647	Statement	VT_INT8	2595:52:59134:59140	6306357	46	True				
ANR	6306648	Statement	)	2595:59:59141:59141	6306357	47	True				
ANR	6306649	Statement	)	2595:60:59142:59142	6306357	48	True				
ANR	6306650	CompoundStatement		35:62:897:897	6306357	49					
ANR	6306651	WhileStatement	while ( tcc_nerr ( ) == 0 && ( tok == TOK_STR || tok == TOK_LSTR ) )		6306357	0					
ANR	6306652	Condition	tcc_nerr ( ) == 0 && ( tok == TOK_STR || tok == TOK_LSTR )	2596:10:59156:59209	6306357	0	True				
ANR	6306653	AndExpression	tcc_nerr ( ) == 0 && ( tok == TOK_STR || tok == TOK_LSTR )		6306357	0		&&			
ANR	6306654	EqualityExpression	tcc_nerr ( ) == 0		6306357	0		==			
ANR	6306655	CallExpression	tcc_nerr ( )		6306357	0					
ANR	6306656	Callee	tcc_nerr		6306357	0					
ANR	6306657	Identifier	tcc_nerr		6306357	0					
ANR	6306658	ArgumentList			6306357	1					
ANR	6306659	PrimaryExpression	0		6306357	1					
ANR	6306660	OrExpression	tok == TOK_STR || tok == TOK_LSTR		6306357	1		||			
ANR	6306661	EqualityExpression	tok == TOK_STR		6306357	0		==			
ANR	6306662	Identifier	tok		6306357	0					
ANR	6306663	Identifier	TOK_STR		6306357	1					
ANR	6306664	EqualityExpression	tok == TOK_LSTR		6306357	1		==			
ANR	6306665	Identifier	tok		6306357	0					
ANR	6306666	Identifier	TOK_LSTR		6306357	1					
ANR	6306667	CompoundStatement		38:4:993:1006	6306357	1					
ANR	6306668	IdentifierDeclStatement	"int cstr_len , ch ;"	2597:4:59218:59234	6306357	0	True				
ANR	6306669	IdentifierDecl	cstr_len		6306357	0					
ANR	6306670	IdentifierDeclType	int		6306357	0					
ANR	6306671	Identifier	cstr_len		6306357	1					
ANR	6306672	IdentifierDecl	ch		6306357	1					
ANR	6306673	IdentifierDeclType	int		6306357	0					
ANR	6306674	Identifier	ch		6306357	1					
ANR	6306675	IdentifierDeclStatement	CString * cstr ;	2598:4:59240:59253	6306357	1	True				
ANR	6306676	IdentifierDecl	* cstr		6306357	0					
ANR	6306677	IdentifierDeclType	CString *		6306357	0					
ANR	6306678	Identifier	cstr		6306357	1					
ANR	6306679	ExpressionStatement	cstr = tokc . cstr	2600:4:59260:59276	6306357	2	True				
ANR	6306680	AssignmentExpression	cstr = tokc . cstr		6306357	0		=			
ANR	6306681	Identifier	cstr		6306357	0					
ANR	6306682	MemberAccess	tokc . cstr		6306357	1					
ANR	6306683	Identifier	tokc		6306357	0					
ANR	6306684	Identifier	cstr		6306357	1					
ANR	6306685	IfStatement	if ( tok == TOK_STR )		6306357	3					
ANR	6306686	Condition	tok == TOK_STR	2602:8:59335:59348	6306357	0	True				
ANR	6306687	EqualityExpression	tok == TOK_STR		6306357	0		==			
ANR	6306688	Identifier	tok		6306357	0					
ANR	6306689	Identifier	TOK_STR		6306357	1					
ANR	6306690	CompoundStatement		42:24:1104:1104	6306357	1					
ANR	6306691	ExpressionStatement	cstr_len = cstr -> size	2603:5:59358:59379	6306357	0	True				
ANR	6306692	AssignmentExpression	cstr_len = cstr -> size		6306357	0		=			
ANR	6306693	Identifier	cstr_len		6306357	0					
ANR	6306694	PtrMemberAccess	cstr -> size		6306357	1					
ANR	6306695	Identifier	cstr		6306357	0					
ANR	6306696	Identifier	size		6306357	1					
ANR	6306697	ElseStatement	else		6306357	0					
ANR	6306698	CompoundStatement		44:11:1145:1145	6306357	0					
ANR	6306699	ExpressionStatement	cstr_len = cstr -> size / sizeof ( nwchar_t )	2605:5:59399:59439	6306357	0	True				
ANR	6306700	AssignmentExpression	cstr_len = cstr -> size / sizeof ( nwchar_t )		6306357	0		=			
ANR	6306701	Identifier	cstr_len		6306357	0					
ANR	6306702	MultiplicativeExpression	cstr -> size / sizeof ( nwchar_t )		6306357	1		/			
ANR	6306703	PtrMemberAccess	cstr -> size		6306357	0					
ANR	6306704	Identifier	cstr		6306357	0					
ANR	6306705	Identifier	size		6306357	1					
ANR	6306706	SizeofExpression	sizeof ( nwchar_t )		6306357	1					
ANR	6306707	Sizeof	sizeof		6306357	0					
ANR	6306708	SizeofOperand	nwchar_t		6306357	1					
ANR	6306709	ExpressionStatement	cstr_len --	2607:4:59451:59461	6306357	4	True				
ANR	6306710	PostIncDecOperationExpression	cstr_len --		6306357	0					
ANR	6306711	Identifier	cstr_len		6306357	0					
ANR	6306712	IncDec	--		6306357	1					
ANR	6306713	ExpressionStatement	nb = cstr_len	2608:4:59467:59480	6306357	5	True				
ANR	6306714	AssignmentExpression	nb = cstr_len		6306357	0		=			
ANR	6306715	Identifier	nb		6306357	0					
ANR	6306716	Identifier	cstr_len		6306357	1					
ANR	6306717	IfStatement	if ( n >= 0 && nb > ( n - array_length ) )		6306357	6					
ANR	6306718	Condition	n >= 0 && nb > ( n - array_length )	2609:8:59490:59522	6306357	0	True				
ANR	6306719	AndExpression	n >= 0 && nb > ( n - array_length )		6306357	0		&&			
ANR	6306720	RelationalExpression	n >= 0		6306357	0		>=			
ANR	6306721	Identifier	n		6306357	0					
ANR	6306722	PrimaryExpression	0		6306357	1					
ANR	6306723	RelationalExpression	nb > ( n - array_length )		6306357	1		>			
ANR	6306724	Identifier	nb		6306357	0					
ANR	6306725	AdditiveExpression	n - array_length		6306357	1		-			
ANR	6306726	Identifier	n		6306357	0					
ANR	6306727	Identifier	array_length		6306357	1					
ANR	6306728	CompoundStatement		49:43:1278:1278	6306357	1					
ANR	6306729	ExpressionStatement	nb = n - array_length	2610:5:59532:59553	6306357	0	True				
ANR	6306730	AssignmentExpression	nb = n - array_length		6306357	0		=			
ANR	6306731	Identifier	nb		6306357	0					
ANR	6306732	AdditiveExpression	n - array_length		6306357	1		-			
ANR	6306733	Identifier	n		6306357	0					
ANR	6306734	Identifier	array_length		6306357	1					
ANR	6306735	IfStatement	if ( ! size_only )		6306357	7					
ANR	6306736	Condition	! size_only	2612:8:59569:59578	6306357	0	True				
ANR	6306737	UnaryOperationExpression	! size_only		6306357	0					
ANR	6306738	UnaryOperator	!		6306357	0					
ANR	6306739	Identifier	size_only		6306357	1					
ANR	6306740	CompoundStatement		52:20:1334:1334	6306357	1					
ANR	6306741	IfStatement	if ( cstr_len > nb )		6306357	0					
ANR	6306742	Condition	cstr_len > nb	2613:9:59592:59604	6306357	0	True				
ANR	6306743	RelationalExpression	cstr_len > nb		6306357	0		>			
ANR	6306744	Identifier	cstr_len		6306357	0					
ANR	6306745	Identifier	nb		6306357	1					
ANR	6306746	CompoundStatement		53:24:1360:1360	6306357	1					
ANR	6306747	ExpressionStatement	"tcc_warning ( ""initializer-string for array is too long"" )"	2614:6:59615:59671	6306357	0	True				
ANR	6306748	CallExpression	"tcc_warning ( ""initializer-string for array is too long"" )"		6306357	0					
ANR	6306749	Callee	tcc_warning		6306357	0					
ANR	6306750	Identifier	tcc_warning		6306357	0					
ANR	6306751	ArgumentList	"""initializer-string for array is too long"""		6306357	1					
ANR	6306752	Argument	"""initializer-string for array is too long"""		6306357	0					
ANR	6306753	PrimaryExpression	"""initializer-string for array is too long"""		6306357	0					
ANR	6306754	ForStatement	for ( i = 0 ; i < nb ; i ++ )		6306357	1					
ANR	6306755	ForInit	i = 0 ;	2619:10:59814:59819	6306357	0	True				
ANR	6306756	AssignmentExpression	i = 0		6306357	0		=			
ANR	6306757	Identifier	i		6306357	0					
ANR	6306758	PrimaryExpression	0		6306357	1					
ANR	6306759	Condition	i < nb	2619:17:59821:59826	6306357	1	True				
ANR	6306760	RelationalExpression	i < nb		6306357	0		<			
ANR	6306761	Identifier	i		6306357	0					
ANR	6306762	Identifier	nb		6306357	1					
ANR	6306763	PostIncDecOperationExpression	i ++	2619:25:59829:59831	6306357	2	True				
ANR	6306764	Identifier	i		6306357	0					
ANR	6306765	IncDec	++		6306357	1					
ANR	6306766	CompoundStatement		59:30:1587:1587	6306357	3					
ANR	6306767	IfStatement	if ( tok == TOK_STR )		6306357	0					
ANR	6306768	Condition	tok == TOK_STR	2620:10:59846:59859	6306357	0	True				
ANR	6306769	EqualityExpression	tok == TOK_STR		6306357	0		==			
ANR	6306770	Identifier	tok		6306357	0					
ANR	6306771	Identifier	TOK_STR		6306357	1					
ANR	6306772	CompoundStatement		60:26:1615:1615	6306357	1					
ANR	6306773	ExpressionStatement	ch = ( ( unsigned char * ) cstr -> data ) [ i ]	2621:7:59871:59909	6306357	0	True				
ANR	6306774	AssignmentExpression	ch = ( ( unsigned char * ) cstr -> data ) [ i ]		6306357	0		=			
ANR	6306775	Identifier	ch		6306357	0					
ANR	6306776	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ i ]		6306357	1					
ANR	6306777	CastExpression	( unsigned char * ) cstr -> data		6306357	0					
ANR	6306778	CastTarget	unsigned char *		6306357	0					
ANR	6306779	PtrMemberAccess	cstr -> data		6306357	1					
ANR	6306780	Identifier	cstr		6306357	0					
ANR	6306781	Identifier	data		6306357	1					
ANR	6306782	Identifier	i		6306357	1					
ANR	6306783	ElseStatement	else		6306357	0					
ANR	6306784	CompoundStatement		62:13:1677:1677	6306357	0					
ANR	6306785	ExpressionStatement	ch = ( ( nwchar_t * ) cstr -> data ) [ i ]	2623:7:59933:59966	6306357	0	True				
ANR	6306786	AssignmentExpression	ch = ( ( nwchar_t * ) cstr -> data ) [ i ]		6306357	0		=			
ANR	6306787	Identifier	ch		6306357	0					
ANR	6306788	ArrayIndexing	( ( nwchar_t * ) cstr -> data ) [ i ]		6306357	1					
ANR	6306789	CastExpression	( nwchar_t * ) cstr -> data		6306357	0					
ANR	6306790	CastTarget	nwchar_t *		6306357	0					
ANR	6306791	PtrMemberAccess	cstr -> data		6306357	1					
ANR	6306792	Identifier	cstr		6306357	0					
ANR	6306793	Identifier	data		6306357	1					
ANR	6306794	Identifier	i		6306357	1					
ANR	6306795	ExpressionStatement	"init_putv ( t1 , c + ( array_length + i ) * size1 , ch , EXPR_VAL )"	2625:6:59982:60049	6306357	1	True				
ANR	6306796	CallExpression	"init_putv ( t1 , c + ( array_length + i ) * size1 , ch , EXPR_VAL )"		6306357	0					
ANR	6306797	Callee	init_putv		6306357	0					
ANR	6306798	Identifier	init_putv		6306357	0					
ANR	6306799	ArgumentList	t1		6306357	1					
ANR	6306800	Argument	t1		6306357	0					
ANR	6306801	Identifier	t1		6306357	0					
ANR	6306802	Argument	c + ( array_length + i ) * size1		6306357	1					
ANR	6306803	AdditiveExpression	c + ( array_length + i ) * size1		6306357	0		+			
ANR	6306804	Identifier	c		6306357	0					
ANR	6306805	MultiplicativeExpression	( array_length + i ) * size1		6306357	1		*			
ANR	6306806	AdditiveExpression	array_length + i		6306357	0		+			
ANR	6306807	Identifier	array_length		6306357	0					
ANR	6306808	Identifier	i		6306357	1					
ANR	6306809	Identifier	size1		6306357	1					
ANR	6306810	Argument	ch		6306357	2					
ANR	6306811	Identifier	ch		6306357	0					
ANR	6306812	Argument	EXPR_VAL		6306357	3					
ANR	6306813	Identifier	EXPR_VAL		6306357	0					
ANR	6306814	ExpressionStatement	array_length += nb	2629:4:60068:60086	6306357	8	True				
ANR	6306815	AssignmentExpression	array_length += nb		6306357	0		+=			
ANR	6306816	Identifier	array_length		6306357	0					
ANR	6306817	Identifier	nb		6306357	1					
ANR	6306818	ExpressionStatement	next ( )	2630:4:60092:60099	6306357	9	True				
ANR	6306819	CallExpression	next ( )		6306357	0					
ANR	6306820	Callee	next		6306357	0					
ANR	6306821	Identifier	next		6306357	0					
ANR	6306822	ArgumentList			6306357	1					
ANR	6306823	IfStatement	if ( n < 0 || array_length < n )		6306357	1					
ANR	6306824	Condition	n < 0 || array_length < n	2634:7:60216:60240	6306357	0	True				
ANR	6306825	OrExpression	n < 0 || array_length < n		6306357	0		||			
ANR	6306826	RelationalExpression	n < 0		6306357	0		<			
ANR	6306827	Identifier	n		6306357	0					
ANR	6306828	PrimaryExpression	0		6306357	1					
ANR	6306829	RelationalExpression	array_length < n		6306357	1		<			
ANR	6306830	Identifier	array_length		6306357	0					
ANR	6306831	Identifier	n		6306357	1					
ANR	6306832	CompoundStatement		74:34:1996:1996	6306357	1					
ANR	6306833	IfStatement	if ( ! size_only )		6306357	0					
ANR	6306834	Condition	! size_only	2635:8:60253:60262	6306357	0	True				
ANR	6306835	UnaryOperationExpression	! size_only		6306357	0					
ANR	6306836	UnaryOperator	!		6306357	0					
ANR	6306837	Identifier	size_only		6306357	1					
ANR	6306838	CompoundStatement		75:20:2018:2018	6306357	1					
ANR	6306839	ExpressionStatement	"init_putv ( t1 , c + ( array_length * size1 ) , 0 , EXPR_VAL )"	2636:5:60272:60327	6306357	0	True				
ANR	6306840	CallExpression	"init_putv ( t1 , c + ( array_length * size1 ) , 0 , EXPR_VAL )"		6306357	0					
ANR	6306841	Callee	init_putv		6306357	0					
ANR	6306842	Identifier	init_putv		6306357	0					
ANR	6306843	ArgumentList	t1		6306357	1					
ANR	6306844	Argument	t1		6306357	0					
ANR	6306845	Identifier	t1		6306357	0					
ANR	6306846	Argument	c + ( array_length * size1 )		6306357	1					
ANR	6306847	AdditiveExpression	c + ( array_length * size1 )		6306357	0		+			
ANR	6306848	Identifier	c		6306357	0					
ANR	6306849	MultiplicativeExpression	array_length * size1		6306357	1		*			
ANR	6306850	Identifier	array_length		6306357	0					
ANR	6306851	Identifier	size1		6306357	1					
ANR	6306852	Argument	0		6306357	2					
ANR	6306853	PrimaryExpression	0		6306357	0					
ANR	6306854	Argument	EXPR_VAL		6306357	3					
ANR	6306855	Identifier	EXPR_VAL		6306357	0					
ANR	6306856	ExpressionStatement	array_length ++	2638:4:60339:60353	6306357	1	True				
ANR	6306857	PostIncDecOperationExpression	array_length ++		6306357	0					
ANR	6306858	Identifier	array_length		6306357	0					
ANR	6306859	IncDec	++		6306357	1					
ANR	6306860	IfStatement	if ( ! no_oblock )		6306357	50					
ANR	6306861	Condition	! no_oblock	2669:6:61127:61136	6306357	0	True				
ANR	6306862	UnaryOperationExpression	! no_oblock		6306357	0					
ANR	6306863	UnaryOperator	!		6306357	0					
ANR	6306864	Identifier	no_oblock		6306357	1					
ANR	6306865	CompoundStatement		109:18:2892:2892	6306357	1					
ANR	6306866	ExpressionStatement	skip ( '}' )	2670:3:61144:61154	6306357	0	True				
ANR	6306867	CallExpression	skip ( '}' )		6306357	0					
ANR	6306868	Callee	skip		6306357	0					
ANR	6306869	Identifier	skip		6306357	0					
ANR	6306870	ArgumentList	'}'		6306357	1					
ANR	6306871	Argument	'}'		6306357	0					
ANR	6306872	PrimaryExpression	'}'		6306357	0					
ANR	6306873	IfStatement	if ( ! size_only && n >= 0 && array_length < n )		6306357	51					
ANR	6306874	Condition	! size_only && n >= 0 && array_length < n	2673:6:61195:61234	6306357	0	True				
ANR	6306875	AndExpression	! size_only && n >= 0 && array_length < n		6306357	0		&&			
ANR	6306876	UnaryOperationExpression	! size_only		6306357	0					
ANR	6306877	UnaryOperator	!		6306357	0					
ANR	6306878	Identifier	size_only		6306357	1					
ANR	6306879	AndExpression	n >= 0 && array_length < n		6306357	1		&&			
ANR	6306880	RelationalExpression	n >= 0		6306357	0		>=			
ANR	6306881	Identifier	n		6306357	0					
ANR	6306882	PrimaryExpression	0		6306357	1					
ANR	6306883	RelationalExpression	array_length < n		6306357	1		<			
ANR	6306884	Identifier	array_length		6306357	0					
ANR	6306885	Identifier	n		6306357	1					
ANR	6306886	CompoundStatement		113:48:2990:2990	6306357	1					
ANR	6306887	ExpressionStatement	"init_putz ( t1 , c + array_length * size1 , ( n - array_length ) * size1 )"	2674:3:61242:61314	6306357	0	True				
ANR	6306888	CallExpression	"init_putz ( t1 , c + array_length * size1 , ( n - array_length ) * size1 )"		6306357	0					
ANR	6306889	Callee	init_putz		6306357	0					
ANR	6306890	Identifier	init_putz		6306357	0					
ANR	6306891	ArgumentList	t1		6306357	1					
ANR	6306892	Argument	t1		6306357	0					
ANR	6306893	Identifier	t1		6306357	0					
ANR	6306894	Argument	c + array_length * size1		6306357	1					
ANR	6306895	AdditiveExpression	c + array_length * size1		6306357	0		+			
ANR	6306896	Identifier	c		6306357	0					
ANR	6306897	MultiplicativeExpression	array_length * size1		6306357	1		*			
ANR	6306898	Identifier	array_length		6306357	0					
ANR	6306899	Identifier	size1		6306357	1					
ANR	6306900	Argument	( n - array_length ) * size1		6306357	2					
ANR	6306901	MultiplicativeExpression	( n - array_length ) * size1		6306357	0		*			
ANR	6306902	AdditiveExpression	n - array_length		6306357	0		-			
ANR	6306903	Identifier	n		6306357	0					
ANR	6306904	Identifier	array_length		6306357	1					
ANR	6306905	Identifier	size1		6306357	1					
ANR	6306906	IfStatement	if ( n < 0 )		6306357	52					
ANR	6306907	Condition	n < 0	2678:6:61360:61364	6306357	0	True				
ANR	6306908	RelationalExpression	n < 0		6306357	0		<			
ANR	6306909	Identifier	n		6306357	0					
ANR	6306910	PrimaryExpression	0		6306357	1					
ANR	6306911	CompoundStatement		118:13:3120:3120	6306357	1					
ANR	6306912	ExpressionStatement	s -> c = array_length	2679:3:61372:61391	6306357	0	True				
ANR	6306913	AssignmentExpression	s -> c = array_length		6306357	0		=			
ANR	6306914	PtrMemberAccess	s -> c		6306357	0					
ANR	6306915	Identifier	s		6306357	0					
ANR	6306916	Identifier	c		6306357	1					
ANR	6306917	Identifier	array_length		6306357	1					
ANR	6306918	ElseStatement	else		6306357	0					
ANR	6306919	IfStatement	if ( is_structured ( type ) && ( ! first || tok == '{' ) )		6306357	0					
ANR	6306920	Condition	is_structured ( type ) && ( ! first || tok == '{' )	2681:12:61409:61453	6306357	0	True				
ANR	6306921	AndExpression	is_structured ( type ) && ( ! first || tok == '{' )		6306357	0		&&			
ANR	6306922	CallExpression	is_structured ( type )		6306357	0					
ANR	6306923	Callee	is_structured		6306357	0					
ANR	6306924	Identifier	is_structured		6306357	0					
ANR	6306925	ArgumentList	type		6306357	1					
ANR	6306926	Argument	type		6306357	0					
ANR	6306927	Identifier	type		6306357	0					
ANR	6306928	OrExpression	! first || tok == '{'		6306357	1		||			
ANR	6306929	UnaryOperationExpression	! first		6306357	0					
ANR	6306930	UnaryOperator	!		6306357	0					
ANR	6306931	Identifier	first		6306357	1					
ANR	6306932	EqualityExpression	tok == '{'		6306357	1		==			
ANR	6306933	Identifier	tok		6306357	0					
ANR	6306934	PrimaryExpression	'{'		6306357	1					
ANR	6306935	CompoundStatement		122:2:3213:3226	6306357	1					
ANR	6306936	IdentifierDeclStatement	int par_count ;	2682:2:61460:61473	6306357	0	True				
ANR	6306937	IdentifierDecl	par_count		6306357	0					
ANR	6306938	IdentifierDeclType	int		6306357	0					
ANR	6306939	Identifier	par_count		6306357	1					
ANR	6306940	ExpressionStatement	par_count = 0	2692:2:61820:61833	6306357	1	True				
ANR	6306941	AssignmentExpression	par_count = 0		6306357	0		=			
ANR	6306942	Identifier	par_count		6306357	0					
ANR	6306943	PrimaryExpression	0		6306357	1					
ANR	6306944	IfStatement	if ( tok == '(' )		6306357	2					
ANR	6306945	Condition	tok == '('	2693:6:61841:61850	6306357	0	True				
ANR	6306946	EqualityExpression	tok == '('		6306357	0		==			
ANR	6306947	Identifier	tok		6306357	0					
ANR	6306948	PrimaryExpression	'('		6306357	1					
ANR	6306949	CompoundStatement		134:3:3611:3627	6306357	1					
ANR	6306950	IdentifierDeclStatement	AttributeDef ad1 ;	2694:3:61858:61874	6306357	0	True				
ANR	6306951	IdentifierDecl	ad1		6306357	0					
ANR	6306952	IdentifierDeclType	AttributeDef		6306357	0					
ANR	6306953	Identifier	ad1		6306357	1					
ANR	6306954	ExpressionStatement	"STACK_NEW0 ( CType , type1 )"	2695:3:61879:61904	6306357	1	True				
ANR	6306955	CallExpression	"STACK_NEW0 ( CType , type1 )"		6306357	0					
ANR	6306956	Callee	STACK_NEW0		6306357	0					
ANR	6306957	Identifier	STACK_NEW0		6306357	0					
ANR	6306958	ArgumentList	CType		6306357	1					
ANR	6306959	Argument	CType		6306357	0					
ANR	6306960	Identifier	CType		6306357	0					
ANR	6306961	Argument	type1		6306357	1					
ANR	6306962	Identifier	type1		6306357	0					
ANR	6306963	ExpressionStatement	next ( )	2696:3:61909:61916	6306357	2	True				
ANR	6306964	CallExpression	next ( )		6306357	0					
ANR	6306965	Callee	next		6306357	0					
ANR	6306966	Identifier	next		6306357	0					
ANR	6306967	ArgumentList			6306357	1					
ANR	6306968	WhileStatement	while ( tok == '(' )		6306357	3					
ANR	6306969	Condition	tok == '('	2697:10:61928:61937	6306357	0	True				
ANR	6306970	EqualityExpression	tok == '('		6306357	0		==			
ANR	6306971	Identifier	tok		6306357	0					
ANR	6306972	PrimaryExpression	'('		6306357	1					
ANR	6306973	CompoundStatement		137:22:3693:3693	6306357	1					
ANR	6306974	ExpressionStatement	par_count ++	2698:4:61946:61957	6306357	0	True				
ANR	6306975	PostIncDecOperationExpression	par_count ++		6306357	0					
ANR	6306976	Identifier	par_count		6306357	0					
ANR	6306977	IncDec	++		6306357	1					
ANR	6306978	ExpressionStatement	next ( )	2699:4:61963:61970	6306357	1	True				
ANR	6306979	CallExpression	next ( )		6306357	0					
ANR	6306980	Callee	next		6306357	0					
ANR	6306981	Identifier	next		6306357	0					
ANR	6306982	ArgumentList			6306357	1					
ANR	6306983	IfStatement	"if ( ! parse_btype ( & type1 , & ad1 ) )"		6306357	4					
ANR	6306984	Condition	"! parse_btype ( & type1 , & ad1 )"	2701:7:61984:62010	6306357	0	True				
ANR	6306985	UnaryOperationExpression	"! parse_btype ( & type1 , & ad1 )"		6306357	0					
ANR	6306986	UnaryOperator	!		6306357	0					
ANR	6306987	CallExpression	"parse_btype ( & type1 , & ad1 )"		6306357	1					
ANR	6306988	Callee	parse_btype		6306357	0					
ANR	6306989	Identifier	parse_btype		6306357	0					
ANR	6306990	ArgumentList	& type1		6306357	1					
ANR	6306991	Argument	& type1		6306357	0					
ANR	6306992	UnaryOperationExpression	& type1		6306357	0					
ANR	6306993	UnaryOperator	&		6306357	0					
ANR	6306994	Identifier	type1		6306357	1					
ANR	6306995	Argument	& ad1		6306357	1					
ANR	6306996	UnaryOperationExpression	& ad1		6306357	0					
ANR	6306997	UnaryOperator	&		6306357	0					
ANR	6306998	Identifier	ad1		6306357	1					
ANR	6306999	CompoundStatement		141:36:3766:3766	6306357	1					
ANR	6307000	ExpressionStatement	"expect ( ""cast"" )"	2702:4:62019:62034	6306357	0	True				
ANR	6307001	CallExpression	"expect ( ""cast"" )"		6306357	0					
ANR	6307002	Callee	expect		6306357	0					
ANR	6307003	Identifier	expect		6306357	0					
ANR	6307004	ArgumentList	"""cast"""		6306357	1					
ANR	6307005	Argument	"""cast"""		6306357	0					
ANR	6307006	PrimaryExpression	"""cast"""		6306357	0					
ANR	6307007	ExpressionStatement	"type_decl ( & type1 , & ad1 , & n , TYPE_ABSTRACT )"	2704:3:62044:62087	6306357	5	True				
ANR	6307008	CallExpression	"type_decl ( & type1 , & ad1 , & n , TYPE_ABSTRACT )"		6306357	0					
ANR	6307009	Callee	type_decl		6306357	0					
ANR	6307010	Identifier	type_decl		6306357	0					
ANR	6307011	ArgumentList	& type1		6306357	1					
ANR	6307012	Argument	& type1		6306357	0					
ANR	6307013	UnaryOperationExpression	& type1		6306357	0					
ANR	6307014	UnaryOperator	&		6306357	0					
ANR	6307015	Identifier	type1		6306357	1					
ANR	6307016	Argument	& ad1		6306357	1					
ANR	6307017	UnaryOperationExpression	& ad1		6306357	0					
ANR	6307018	UnaryOperator	&		6306357	0					
ANR	6307019	Identifier	ad1		6306357	1					
ANR	6307020	Argument	& n		6306357	2					
ANR	6307021	UnaryOperationExpression	& n		6306357	0					
ANR	6307022	UnaryOperator	&		6306357	0					
ANR	6307023	Identifier	n		6306357	1					
ANR	6307024	Argument	TYPE_ABSTRACT		6306357	3					
ANR	6307025	Identifier	TYPE_ABSTRACT		6306357	0					
ANR	6307026	IfStatement	"if ( ! is_assignable_types ( type , & type1 ) )"		6306357	6					
ANR	6307027	Condition	"! is_assignable_types ( type , & type1 )"	2706:7:62102:62136	6306357	0	True				
ANR	6307028	UnaryOperationExpression	"! is_assignable_types ( type , & type1 )"		6306357	0					
ANR	6307029	UnaryOperator	!		6306357	0					
ANR	6307030	CallExpression	"is_assignable_types ( type , & type1 )"		6306357	1					
ANR	6307031	Callee	is_assignable_types		6306357	0					
ANR	6307032	Identifier	is_assignable_types		6306357	0					
ANR	6307033	ArgumentList	type		6306357	1					
ANR	6307034	Argument	type		6306357	0					
ANR	6307035	Identifier	type		6306357	0					
ANR	6307036	Argument	& type1		6306357	1					
ANR	6307037	UnaryOperationExpression	& type1		6306357	0					
ANR	6307038	UnaryOperator	&		6306357	0					
ANR	6307039	Identifier	type1		6306357	1					
ANR	6307040	CompoundStatement		146:44:3892:3892	6306357	1					
ANR	6307041	ExpressionStatement	"tcc_error ( ""invalid type for cast"" )"	2707:4:62145:62180	6306357	0	True				
ANR	6307042	CallExpression	"tcc_error ( ""invalid type for cast"" )"		6306357	0					
ANR	6307043	Callee	tcc_error		6306357	0					
ANR	6307044	Identifier	tcc_error		6306357	0					
ANR	6307045	ArgumentList	"""invalid type for cast"""		6306357	1					
ANR	6307046	Argument	"""invalid type for cast"""		6306357	0					
ANR	6307047	PrimaryExpression	"""invalid type for cast"""		6306357	0					
ANR	6307048	ExpressionStatement	skip ( ')' )	2710:3:62197:62207	6306357	7	True				
ANR	6307049	CallExpression	skip ( ')' )		6306357	0					
ANR	6307050	Callee	skip		6306357	0					
ANR	6307051	Identifier	skip		6306357	0					
ANR	6307052	ArgumentList	')'		6306357	1					
ANR	6307053	Argument	')'		6306357	0					
ANR	6307054	PrimaryExpression	')'		6306357	0					
ANR	6307055	ExpressionStatement	no_oblock = 1	2712:2:62215:62228	6306357	3	True				
ANR	6307056	AssignmentExpression	no_oblock = 1		6306357	0		=			
ANR	6307057	Identifier	no_oblock		6306357	0					
ANR	6307058	PrimaryExpression	1		6306357	1					
ANR	6307059	IfStatement	if ( first || tok == '{' )		6306357	4					
ANR	6307060	Condition	first || tok == '{'	2713:6:62236:62254	6306357	0	True				
ANR	6307061	OrExpression	first || tok == '{'		6306357	0		||			
ANR	6307062	Identifier	first		6306357	0					
ANR	6307063	EqualityExpression	tok == '{'		6306357	1		==			
ANR	6307064	Identifier	tok		6306357	0					
ANR	6307065	PrimaryExpression	'{'		6306357	1					
ANR	6307066	CompoundStatement		153:27:4010:4010	6306357	1					
ANR	6307067	ExpressionStatement	skip ( '{' )	2714:3:62262:62272	6306357	0	True				
ANR	6307068	CallExpression	skip ( '{' )		6306357	0					
ANR	6307069	Callee	skip		6306357	0					
ANR	6307070	Identifier	skip		6306357	0					
ANR	6307071	ArgumentList	'{'		6306357	1					
ANR	6307072	Argument	'{'		6306357	0					
ANR	6307073	PrimaryExpression	'{'		6306357	0					
ANR	6307074	ExpressionStatement	no_oblock = 0	2715:3:62277:62290	6306357	1	True				
ANR	6307075	AssignmentExpression	no_oblock = 0		6306357	0		=			
ANR	6307076	Identifier	no_oblock		6306357	0					
ANR	6307077	PrimaryExpression	0		6306357	1					
ANR	6307078	ExpressionStatement	s = type -> ref	2717:2:62298:62311	6306357	5	True				
ANR	6307079	AssignmentExpression	s = type -> ref		6306357	0		=			
ANR	6307080	Identifier	s		6306357	0					
ANR	6307081	PtrMemberAccess	type -> ref		6306357	1					
ANR	6307082	Identifier	type		6306357	0					
ANR	6307083	Identifier	ref		6306357	1					
ANR	6307084	ExpressionStatement	f = s -> next	2718:2:62315:62326	6306357	6	True				
ANR	6307085	AssignmentExpression	f = s -> next		6306357	0		=			
ANR	6307086	Identifier	f		6306357	0					
ANR	6307087	PtrMemberAccess	s -> next		6306357	1					
ANR	6307088	Identifier	s		6306357	0					
ANR	6307089	Identifier	next		6306357	1					
ANR	6307090	ExpressionStatement	array_length = 0	2719:2:62330:62346	6306357	7	True				
ANR	6307091	AssignmentExpression	array_length = 0		6306357	0		=			
ANR	6307092	Identifier	array_length		6306357	0					
ANR	6307093	PrimaryExpression	0		6306357	1					
ANR	6307094	ExpressionStatement	index = 0	2720:2:62350:62359	6306357	8	True				
ANR	6307095	AssignmentExpression	index = 0		6306357	0		=			
ANR	6307096	Identifier	index		6306357	0					
ANR	6307097	PrimaryExpression	0		6306357	1					
ANR	6307098	ExpressionStatement	n = s -> c	2721:2:62363:62371	6306357	9	True				
ANR	6307099	AssignmentExpression	n = s -> c		6306357	0		=			
ANR	6307100	Identifier	n		6306357	0					
ANR	6307101	PtrMemberAccess	s -> c		6306357	1					
ANR	6307102	Identifier	s		6306357	0					
ANR	6307103	Identifier	c		6306357	1					
ANR	6307104	WhileStatement	while ( tok != '}' )		6306357	10					
ANR	6307105	Condition	tok != '}'	2722:9:62382:62391	6306357	0	True				
ANR	6307106	EqualityExpression	tok != '}'		6306357	0		!=			
ANR	6307107	Identifier	tok		6306357	0					
ANR	6307108	PrimaryExpression	'}'		6306357	1					
ANR	6307109	CompoundStatement		162:21:4147:4147	6306357	1					
ANR	6307110	ExpressionStatement	"decl_designator ( type , c , NULL , & f , size_only )"	2723:3:62399:62445	6306357	0	True				
ANR	6307111	CallExpression	"decl_designator ( type , c , NULL , & f , size_only )"		6306357	0					
ANR	6307112	Callee	decl_designator		6306357	0					
ANR	6307113	Identifier	decl_designator		6306357	0					
ANR	6307114	ArgumentList	type		6306357	1					
ANR	6307115	Argument	type		6306357	0					
ANR	6307116	Identifier	type		6306357	0					
ANR	6307117	Argument	c		6306357	1					
ANR	6307118	Identifier	c		6306357	0					
ANR	6307119	Argument	NULL		6306357	2					
ANR	6307120	Identifier	NULL		6306357	0					
ANR	6307121	Argument	& f		6306357	3					
ANR	6307122	UnaryOperationExpression	& f		6306357	0					
ANR	6307123	UnaryOperator	&		6306357	0					
ANR	6307124	Identifier	f		6306357	1					
ANR	6307125	Argument	size_only		6306357	4					
ANR	6307126	Identifier	size_only		6306357	0					
ANR	6307127	ExpressionStatement	index = f -> c	2724:3:62450:62462	6306357	1	True				
ANR	6307128	AssignmentExpression	index = f -> c		6306357	0		=			
ANR	6307129	Identifier	index		6306357	0					
ANR	6307130	PtrMemberAccess	f -> c		6306357	1					
ANR	6307131	Identifier	f		6306357	0					
ANR	6307132	Identifier	c		6306357	1					
ANR	6307133	IfStatement	if ( ! size_only && array_length < index )		6306357	2					
ANR	6307134	Condition	! size_only && array_length < index	2725:7:62471:62504	6306357	0	True				
ANR	6307135	AndExpression	! size_only && array_length < index		6306357	0		&&			
ANR	6307136	UnaryOperationExpression	! size_only		6306357	0					
ANR	6307137	UnaryOperator	!		6306357	0					
ANR	6307138	Identifier	size_only		6306357	1					
ANR	6307139	RelationalExpression	array_length < index		6306357	1		<			
ANR	6307140	Identifier	array_length		6306357	0					
ANR	6307141	Identifier	index		6306357	1					
ANR	6307142	CompoundStatement		165:43:4260:4260	6306357	1					
ANR	6307143	ExpressionStatement	"init_putz ( type , c + array_length , index - array_length )"	2726:4:62513:62574	6306357	0	True				
ANR	6307144	CallExpression	"init_putz ( type , c + array_length , index - array_length )"		6306357	0					
ANR	6307145	Callee	init_putz		6306357	0					
ANR	6307146	Identifier	init_putz		6306357	0					
ANR	6307147	ArgumentList	type		6306357	1					
ANR	6307148	Argument	type		6306357	0					
ANR	6307149	Identifier	type		6306357	0					
ANR	6307150	Argument	c + array_length		6306357	1					
ANR	6307151	AdditiveExpression	c + array_length		6306357	0		+			
ANR	6307152	Identifier	c		6306357	0					
ANR	6307153	Identifier	array_length		6306357	1					
ANR	6307154	Argument	index - array_length		6306357	2					
ANR	6307155	AdditiveExpression	index - array_length		6306357	0		-			
ANR	6307156	Identifier	index		6306357	0					
ANR	6307157	Identifier	array_length		6306357	1					
ANR	6307158	ExpressionStatement	"index = index + type_size ( & f -> type , & align1 )"	2729:3:62584:62629	6306357	3	True				
ANR	6307159	AssignmentExpression	"index = index + type_size ( & f -> type , & align1 )"		6306357	0		=			
ANR	6307160	Identifier	index		6306357	0					
ANR	6307161	AdditiveExpression	"index + type_size ( & f -> type , & align1 )"		6306357	1		+			
ANR	6307162	Identifier	index		6306357	0					
ANR	6307163	CallExpression	"type_size ( & f -> type , & align1 )"		6306357	1					
ANR	6307164	Callee	type_size		6306357	0					
ANR	6307165	Identifier	type_size		6306357	0					
ANR	6307166	ArgumentList	& f -> type		6306357	1					
ANR	6307167	Argument	& f -> type		6306357	0					
ANR	6307168	UnaryOperationExpression	& f -> type		6306357	0					
ANR	6307169	UnaryOperator	&		6306357	0					
ANR	6307170	PtrMemberAccess	f -> type		6306357	1					
ANR	6307171	Identifier	f		6306357	0					
ANR	6307172	Identifier	type		6306357	1					
ANR	6307173	Argument	& align1		6306357	1					
ANR	6307174	UnaryOperationExpression	& align1		6306357	0					
ANR	6307175	UnaryOperator	&		6306357	0					
ANR	6307176	Identifier	align1		6306357	1					
ANR	6307177	IfStatement	if ( index > array_length )		6306357	4					
ANR	6307178	Condition	index > array_length	2730:7:62638:62657	6306357	0	True				
ANR	6307179	RelationalExpression	index > array_length		6306357	0		>			
ANR	6307180	Identifier	index		6306357	0					
ANR	6307181	Identifier	array_length		6306357	1					
ANR	6307182	CompoundStatement		170:29:4413:4413	6306357	1					
ANR	6307183	ExpressionStatement	array_length = index	2731:4:62666:62686	6306357	0	True				
ANR	6307184	AssignmentExpression	array_length = index		6306357	0		=			
ANR	6307185	Identifier	array_length		6306357	0					
ANR	6307186	Identifier	index		6306357	1					
ANR	6307187	WhileStatement	while ( f -> next )		6306357	5					
ANR	6307188	Condition	f -> next	2735:10:62753:62759	6306357	0	True				
ANR	6307189	PtrMemberAccess	f -> next		6306357	0					
ANR	6307190	Identifier	f		6306357	0					
ANR	6307191	Identifier	next		6306357	1					
ANR	6307192	CompoundStatement		175:19:4515:4515	6306357	1					
ANR	6307193	IfStatement	if ( f -> next -> c != f -> c )		6306357	0					
ANR	6307194	Condition	f -> next -> c != f -> c	2738:8:62897:62914	6306357	0	True				
ANR	6307195	EqualityExpression	f -> next -> c != f -> c		6306357	0		!=			
ANR	6307196	PtrMemberAccess	f -> next -> c		6306357	0					
ANR	6307197	PtrMemberAccess	f -> next		6306357	0					
ANR	6307198	Identifier	f		6306357	0					
ANR	6307199	Identifier	next		6306357	1					
ANR	6307200	Identifier	c		6306357	1					
ANR	6307201	PtrMemberAccess	f -> c		6306357	1					
ANR	6307202	Identifier	f		6306357	0					
ANR	6307203	Identifier	c		6306357	1					
ANR	6307204	CompoundStatement		178:28:4670:4670	6306357	1					
ANR	6307205	BreakStatement	break ;	2739:5:62924:62929	6306357	0	True				
ANR	6307206	IfStatement	if ( ( f -> type . t & VT_BITFIELD ) && ( f -> next -> type . t & VT_BITFIELD ) )		6306357	1					
ANR	6307207	Condition	( f -> type . t & VT_BITFIELD ) && ( f -> next -> type . t & VT_BITFIELD )	2742:8:62987:63046	6306357	0	True				
ANR	6307208	AndExpression	( f -> type . t & VT_BITFIELD ) && ( f -> next -> type . t & VT_BITFIELD )		6306357	0		&&			
ANR	6307209	BitAndExpression	f -> type . t & VT_BITFIELD		6306357	0		&			
ANR	6307210	MemberAccess	f -> type . t		6306357	0					
ANR	6307211	PtrMemberAccess	f -> type		6306357	0					
ANR	6307212	Identifier	f		6306357	0					
ANR	6307213	Identifier	type		6306357	1					
ANR	6307214	Identifier	t		6306357	1					
ANR	6307215	Identifier	VT_BITFIELD		6306357	1					
ANR	6307216	BitAndExpression	f -> next -> type . t & VT_BITFIELD		6306357	1		&			
ANR	6307217	MemberAccess	f -> next -> type . t		6306357	0					
ANR	6307218	PtrMemberAccess	f -> next -> type		6306357	0					
ANR	6307219	PtrMemberAccess	f -> next		6306357	0					
ANR	6307220	Identifier	f		6306357	0					
ANR	6307221	Identifier	next		6306357	1					
ANR	6307222	Identifier	type		6306357	1					
ANR	6307223	Identifier	t		6306357	1					
ANR	6307224	Identifier	VT_BITFIELD		6306357	1					
ANR	6307225	CompoundStatement		184:5:4869:4928	6306357	1					
ANR	6307226	IdentifierDeclStatement	int bit_pos_1 = ( f -> type . t >> VT_STRUCT_SHIFT ) & 0x3f ;	2743:5:63056:63109	6306357	0	True				
ANR	6307227	IdentifierDecl	bit_pos_1 = ( f -> type . t >> VT_STRUCT_SHIFT ) & 0x3f		6306357	0					
ANR	6307228	IdentifierDeclType	int		6306357	0					
ANR	6307229	Identifier	bit_pos_1		6306357	1					
ANR	6307230	AssignmentExpression	bit_pos_1 = ( f -> type . t >> VT_STRUCT_SHIFT ) & 0x3f		6306357	2		=			
ANR	6307231	Identifier	bit_pos_1		6306357	0					
ANR	6307232	BitAndExpression	( f -> type . t >> VT_STRUCT_SHIFT ) & 0x3f		6306357	1		&			
ANR	6307233	ShiftExpression	f -> type . t >> VT_STRUCT_SHIFT		6306357	0		>>			
ANR	6307234	MemberAccess	f -> type . t		6306357	0					
ANR	6307235	PtrMemberAccess	f -> type		6306357	0					
ANR	6307236	Identifier	f		6306357	0					
ANR	6307237	Identifier	type		6306357	1					
ANR	6307238	Identifier	t		6306357	1					
ANR	6307239	Identifier	VT_STRUCT_SHIFT		6306357	1					
ANR	6307240	PrimaryExpression	0x3f		6306357	1					
ANR	6307241	IdentifierDeclStatement	int bit_pos_2 = ( f -> next -> type . t >> VT_STRUCT_SHIFT ) & 0x3f ;	2744:5:63116:63175	6306357	1	True				
ANR	6307242	IdentifierDecl	bit_pos_2 = ( f -> next -> type . t >> VT_STRUCT_SHIFT ) & 0x3f		6306357	0					
ANR	6307243	IdentifierDeclType	int		6306357	0					
ANR	6307244	Identifier	bit_pos_2		6306357	1					
ANR	6307245	AssignmentExpression	bit_pos_2 = ( f -> next -> type . t >> VT_STRUCT_SHIFT ) & 0x3f		6306357	2		=			
ANR	6307246	Identifier	bit_pos_2		6306357	0					
ANR	6307247	BitAndExpression	( f -> next -> type . t >> VT_STRUCT_SHIFT ) & 0x3f		6306357	1		&			
ANR	6307248	ShiftExpression	f -> next -> type . t >> VT_STRUCT_SHIFT		6306357	0		>>			
ANR	6307249	MemberAccess	f -> next -> type . t		6306357	0					
ANR	6307250	PtrMemberAccess	f -> next -> type		6306357	0					
ANR	6307251	PtrMemberAccess	f -> next		6306357	0					
ANR	6307252	Identifier	f		6306357	0					
ANR	6307253	Identifier	next		6306357	1					
ANR	6307254	Identifier	type		6306357	1					
ANR	6307255	Identifier	t		6306357	1					
ANR	6307256	Identifier	VT_STRUCT_SHIFT		6306357	1					
ANR	6307257	PrimaryExpression	0x3f		6306357	1					
ANR	6307258	IfStatement	if ( bit_pos_1 != bit_pos_2 )		6306357	2					
ANR	6307259	Condition	bit_pos_1 != bit_pos_2	2746:9:63244:63265	6306357	0	True				
ANR	6307260	EqualityExpression	bit_pos_1 != bit_pos_2		6306357	0		!=			
ANR	6307261	Identifier	bit_pos_1		6306357	0					
ANR	6307262	Identifier	bit_pos_2		6306357	1					
ANR	6307263	CompoundStatement		186:33:5021:5021	6306357	1					
ANR	6307264	BreakStatement	break ;	2747:6:63276:63281	6306357	0	True				
ANR	6307265	ExpressionStatement	f = f -> next	2750:4:63300:63311	6306357	2	True				
ANR	6307266	AssignmentExpression	f = f -> next		6306357	0		=			
ANR	6307267	Identifier	f		6306357	0					
ANR	6307268	PtrMemberAccess	f -> next		6306357	1					
ANR	6307269	Identifier	f		6306357	0					
ANR	6307270	Identifier	next		6306357	1					
ANR	6307271	ExpressionStatement	f = f -> next	2753:3:63322:63333	6306357	6	True				
ANR	6307272	AssignmentExpression	f = f -> next		6306357	0		=			
ANR	6307273	Identifier	f		6306357	0					
ANR	6307274	PtrMemberAccess	f -> next		6306357	1					
ANR	6307275	Identifier	f		6306357	0					
ANR	6307276	Identifier	next		6306357	1					
ANR	6307277	IfStatement	if ( no_oblock && f == NULL )		6306357	7					
ANR	6307278	Condition	no_oblock && f == NULL	2754:7:63342:63363	6306357	0	True				
ANR	6307279	AndExpression	no_oblock && f == NULL		6306357	0		&&			
ANR	6307280	Identifier	no_oblock		6306357	0					
ANR	6307281	EqualityExpression	f == NULL		6306357	1		==			
ANR	6307282	Identifier	f		6306357	0					
ANR	6307283	Identifier	NULL		6306357	1					
ANR	6307284	CompoundStatement		194:31:5119:5119	6306357	1					
ANR	6307285	BreakStatement	break ;	2755:4:63372:63377	6306357	0	True				
ANR	6307286	IfStatement	if ( tok == '}' )		6306357	8					
ANR	6307287	Condition	tok == '}'	2757:7:63391:63400	6306357	0	True				
ANR	6307288	EqualityExpression	tok == '}'		6306357	0		==			
ANR	6307289	Identifier	tok		6306357	0					
ANR	6307290	PrimaryExpression	'}'		6306357	1					
ANR	6307291	CompoundStatement		197:19:5156:5156	6306357	1					
ANR	6307292	BreakStatement	break ;	2758:4:63409:63414	6306357	0	True				
ANR	6307293	ExpressionStatement	"skip ( ',' )"	2760:3:63424:63434	6306357	9	True				
ANR	6307294	CallExpression	"skip ( ',' )"		6306357	0					
ANR	6307295	Callee	skip		6306357	0					
ANR	6307296	Identifier	skip		6306357	0					
ANR	6307297	ArgumentList	"','"		6306357	1					
ANR	6307298	Argument	"','"		6306357	0					
ANR	6307299	PrimaryExpression	"','"		6306357	0					
ANR	6307300	IfStatement	if ( ! size_only && array_length < n )		6306357	11					
ANR	6307301	Condition	! size_only && array_length < n	2763:6:63475:63504	6306357	0	True				
ANR	6307302	AndExpression	! size_only && array_length < n		6306357	0		&&			
ANR	6307303	UnaryOperationExpression	! size_only		6306357	0					
ANR	6307304	UnaryOperator	!		6306357	0					
ANR	6307305	Identifier	size_only		6306357	1					
ANR	6307306	RelationalExpression	array_length < n		6306357	1		<			
ANR	6307307	Identifier	array_length		6306357	0					
ANR	6307308	Identifier	n		6306357	1					
ANR	6307309	CompoundStatement		203:38:5260:5260	6306357	1					
ANR	6307310	ExpressionStatement	"init_putz ( type , c + array_length , n - array_length )"	2764:3:63512:63568	6306357	0	True				
ANR	6307311	CallExpression	"init_putz ( type , c + array_length , n - array_length )"		6306357	0					
ANR	6307312	Callee	init_putz		6306357	0					
ANR	6307313	Identifier	init_putz		6306357	0					
ANR	6307314	ArgumentList	type		6306357	1					
ANR	6307315	Argument	type		6306357	0					
ANR	6307316	Identifier	type		6306357	0					
ANR	6307317	Argument	c + array_length		6306357	1					
ANR	6307318	AdditiveExpression	c + array_length		6306357	0		+			
ANR	6307319	Identifier	c		6306357	0					
ANR	6307320	Identifier	array_length		6306357	1					
ANR	6307321	Argument	n - array_length		6306357	2					
ANR	6307322	AdditiveExpression	n - array_length		6306357	0		-			
ANR	6307323	Identifier	n		6306357	0					
ANR	6307324	Identifier	array_length		6306357	1					
ANR	6307325	IfStatement	if ( ! no_oblock )		6306357	12					
ANR	6307326	Condition	! no_oblock	2767:6:63580:63589	6306357	0	True				
ANR	6307327	UnaryOperationExpression	! no_oblock		6306357	0					
ANR	6307328	UnaryOperator	!		6306357	0					
ANR	6307329	Identifier	no_oblock		6306357	1					
ANR	6307330	CompoundStatement		207:18:5345:5345	6306357	1					
ANR	6307331	ExpressionStatement	skip ( '}' )	2768:3:63597:63607	6306357	0	True				
ANR	6307332	CallExpression	skip ( '}' )		6306357	0					
ANR	6307333	Callee	skip		6306357	0					
ANR	6307334	Identifier	skip		6306357	0					
ANR	6307335	ArgumentList	'}'		6306357	1					
ANR	6307336	Argument	'}'		6306357	0					
ANR	6307337	PrimaryExpression	'}'		6306357	0					
ANR	6307338	WhileStatement	while ( par_count )		6306357	13					
ANR	6307339	Condition	par_count	2770:9:63622:63630	6306357	0	True				
ANR	6307340	Identifier	par_count		6306357	0					
ANR	6307341	CompoundStatement		210:20:5386:5386	6306357	1					
ANR	6307342	ExpressionStatement	skip ( ')' )	2771:3:63638:63648	6306357	0	True				
ANR	6307343	CallExpression	skip ( ')' )		6306357	0					
ANR	6307344	Callee	skip		6306357	0					
ANR	6307345	Identifier	skip		6306357	0					
ANR	6307346	ArgumentList	')'		6306357	1					
ANR	6307347	Argument	')'		6306357	0					
ANR	6307348	PrimaryExpression	')'		6306357	0					
ANR	6307349	ExpressionStatement	par_count --	2772:3:63653:63664	6306357	1	True				
ANR	6307350	PostIncDecOperationExpression	par_count --		6306357	0					
ANR	6307351	Identifier	par_count		6306357	0					
ANR	6307352	IncDec	--		6306357	1					
ANR	6307353	ElseStatement	else		6306357	0					
ANR	6307354	IfStatement	if ( tok == '{' )		6306357	0					
ANR	6307355	Condition	tok == '{'	2774:12:63682:63691	6306357	0	True				
ANR	6307356	EqualityExpression	tok == '{'		6306357	0		==			
ANR	6307357	Identifier	tok		6306357	0					
ANR	6307358	PrimaryExpression	'{'		6306357	1					
ANR	6307359	CompoundStatement		214:24:5447:5447	6306357	1					
ANR	6307360	ExpressionStatement	next ( )	2775:2:63698:63705	6306357	0	True				
ANR	6307361	CallExpression	next ( )		6306357	0					
ANR	6307362	Callee	next		6306357	0					
ANR	6307363	Identifier	next		6306357	0					
ANR	6307364	ArgumentList			6306357	1					
ANR	6307365	ExpressionStatement	"decl_initializer ( type , c , first , size_only )"	2776:2:63709:63753	6306357	1	True				
ANR	6307366	CallExpression	"decl_initializer ( type , c , first , size_only )"		6306357	0					
ANR	6307367	Callee	decl_initializer		6306357	0					
ANR	6307368	Identifier	decl_initializer		6306357	0					
ANR	6307369	ArgumentList	type		6306357	1					
ANR	6307370	Argument	type		6306357	0					
ANR	6307371	Identifier	type		6306357	0					
ANR	6307372	Argument	c		6306357	1					
ANR	6307373	Identifier	c		6306357	0					
ANR	6307374	Argument	first		6306357	2					
ANR	6307375	Identifier	first		6306357	0					
ANR	6307376	Argument	size_only		6306357	3					
ANR	6307377	Identifier	size_only		6306357	0					
ANR	6307378	ExpressionStatement	skip ( '}' )	2777:2:63757:63767	6306357	2	True				
ANR	6307379	CallExpression	skip ( '}' )		6306357	0					
ANR	6307380	Callee	skip		6306357	0					
ANR	6307381	Identifier	skip		6306357	0					
ANR	6307382	ArgumentList	'}'		6306357	1					
ANR	6307383	Argument	'}'		6306357	0					
ANR	6307384	PrimaryExpression	'}'		6306357	0					
ANR	6307385	ElseStatement	else		6306357	0					
ANR	6307386	IfStatement	if ( size_only )		6306357	0					
ANR	6307387	Condition	size_only	2778:12:63781:63789	6306357	0	True				
ANR	6307388	Identifier	size_only		6306357	0					
ANR	6307389	CompoundStatement		218:23:5545:5545	6306357	1					
ANR	6307390	ExpressionStatement	parlevel = parlevel1 = 0	2780:2:63825:63849	6306357	0	True				
ANR	6307391	AssignmentExpression	parlevel = parlevel1 = 0		6306357	0		=			
ANR	6307392	Identifier	parlevel		6306357	0					
ANR	6307393	AssignmentExpression	parlevel1 = 0		6306357	1		=			
ANR	6307394	Identifier	parlevel1		6306357	0					
ANR	6307395	PrimaryExpression	0		6306357	1					
ANR	6307396	WhileStatement	"while ( ( parlevel > 0 || parlevel1 > 0 || ( tok != '}' && tok != ',' ) ) && tok != - 1 )"		6306357	1					
ANR	6307397	Condition	"( parlevel > 0 || parlevel1 > 0 || ( tok != '}' && tok != ',' ) ) && tok != - 1"	2781:9:63860:63936	6306357	0	True				
ANR	6307398	AndExpression	"( parlevel > 0 || parlevel1 > 0 || ( tok != '}' && tok != ',' ) ) && tok != - 1"		6306357	0		&&			
ANR	6307399	OrExpression	"parlevel > 0 || parlevel1 > 0 || ( tok != '}' && tok != ',' )"		6306357	0		||			
ANR	6307400	RelationalExpression	parlevel > 0		6306357	0		>			
ANR	6307401	Identifier	parlevel		6306357	0					
ANR	6307402	PrimaryExpression	0		6306357	1					
ANR	6307403	OrExpression	"parlevel1 > 0 || ( tok != '}' && tok != ',' )"		6306357	1		||			
ANR	6307404	RelationalExpression	parlevel1 > 0		6306357	0		>			
ANR	6307405	Identifier	parlevel1		6306357	0					
ANR	6307406	PrimaryExpression	0		6306357	1					
ANR	6307407	AndExpression	"tok != '}' && tok != ','"		6306357	1		&&			
ANR	6307408	EqualityExpression	tok != '}'		6306357	0		!=			
ANR	6307409	Identifier	tok		6306357	0					
ANR	6307410	PrimaryExpression	'}'		6306357	1					
ANR	6307411	EqualityExpression	"tok != ','"		6306357	1		!=			
ANR	6307412	Identifier	tok		6306357	0					
ANR	6307413	PrimaryExpression	"','"		6306357	1					
ANR	6307414	EqualityExpression	tok != - 1		6306357	1		!=			
ANR	6307415	Identifier	tok		6306357	0					
ANR	6307416	UnaryOperationExpression	- 1		6306357	1					
ANR	6307417	UnaryOperator	-		6306357	0					
ANR	6307418	PrimaryExpression	1		6306357	1					
ANR	6307419	CompoundStatement		222:45:5692:5692	6306357	1					
ANR	6307420	IfStatement	if ( tok == '(' )		6306357	0					
ANR	6307421	Condition	tok == '('	2783:7:63948:63957	6306357	0	True				
ANR	6307422	EqualityExpression	tok == '('		6306357	0		==			
ANR	6307423	Identifier	tok		6306357	0					
ANR	6307424	PrimaryExpression	'('		6306357	1					
ANR	6307425	CompoundStatement		223:19:5713:5713	6306357	1					
ANR	6307426	ExpressionStatement	parlevel ++	2784:4:63966:63976	6306357	0	True				
ANR	6307427	PostIncDecOperationExpression	parlevel ++		6306357	0					
ANR	6307428	Identifier	parlevel		6306357	0					
ANR	6307429	IncDec	++		6306357	1					
ANR	6307430	ElseStatement	else		6306357	0					
ANR	6307431	IfStatement	if ( tok == ')' )		6306357	0					
ANR	6307432	Condition	tok == ')'	2785:14:63992:64001	6306357	0	True				
ANR	6307433	EqualityExpression	tok == ')'		6306357	0		==			
ANR	6307434	Identifier	tok		6306357	0					
ANR	6307435	PrimaryExpression	')'		6306357	1					
ANR	6307436	CompoundStatement		225:26:5757:5757	6306357	1					
ANR	6307437	ExpressionStatement	parlevel --	2786:4:64010:64020	6306357	0	True				
ANR	6307438	PostIncDecOperationExpression	parlevel --		6306357	0					
ANR	6307439	Identifier	parlevel		6306357	0					
ANR	6307440	IncDec	--		6306357	1					
ANR	6307441	ElseStatement	else		6306357	0					
ANR	6307442	IfStatement	if ( tok == '{' )		6306357	0					
ANR	6307443	Condition	tok == '{'	2787:14:64036:64045	6306357	0	True				
ANR	6307444	EqualityExpression	tok == '{'		6306357	0		==			
ANR	6307445	Identifier	tok		6306357	0					
ANR	6307446	PrimaryExpression	'{'		6306357	1					
ANR	6307447	CompoundStatement		227:26:5801:5801	6306357	1					
ANR	6307448	ExpressionStatement	parlevel1 ++	2788:4:64054:64065	6306357	0	True				
ANR	6307449	PostIncDecOperationExpression	parlevel1 ++		6306357	0					
ANR	6307450	Identifier	parlevel1		6306357	0					
ANR	6307451	IncDec	++		6306357	1					
ANR	6307452	ElseStatement	else		6306357	0					
ANR	6307453	IfStatement	if ( tok == '}' )		6306357	0					
ANR	6307454	Condition	tok == '}'	2789:14:64081:64090	6306357	0	True				
ANR	6307455	EqualityExpression	tok == '}'		6306357	0		==			
ANR	6307456	Identifier	tok		6306357	0					
ANR	6307457	PrimaryExpression	'}'		6306357	1					
ANR	6307458	CompoundStatement		229:26:5846:5846	6306357	1					
ANR	6307459	ExpressionStatement	parlevel1 --	2790:4:64099:64110	6306357	0	True				
ANR	6307460	PostIncDecOperationExpression	parlevel1 --		6306357	0					
ANR	6307461	Identifier	parlevel1		6306357	0					
ANR	6307462	IncDec	--		6306357	1					
ANR	6307463	ExpressionStatement	next ( )	2792:3:64120:64127	6306357	1	True				
ANR	6307464	CallExpression	next ( )		6306357	0					
ANR	6307465	Callee	next		6306357	0					
ANR	6307466	Identifier	next		6306357	0					
ANR	6307467	ArgumentList			6306357	1					
ANR	6307468	ElseStatement	else		6306357	0					
ANR	6307469	CompoundStatement		234:8:5894:5894	6306357	0					
ANR	6307470	ExpressionStatement	expr_type = EXPR_CONST	2797:2:64247:64269	6306357	0	True				
ANR	6307471	AssignmentExpression	expr_type = EXPR_CONST		6306357	0		=			
ANR	6307472	Identifier	expr_type		6306357	0					
ANR	6307473	Identifier	EXPR_CONST		6306357	1					
ANR	6307474	ExpressionStatement	"init_putv ( type , c , 0 , expr_type )"	2798:2:64273:64306	6306357	1	True				
ANR	6307475	CallExpression	"init_putv ( type , c , 0 , expr_type )"		6306357	0					
ANR	6307476	Callee	init_putv		6306357	0					
ANR	6307477	Identifier	init_putv		6306357	0					
ANR	6307478	ArgumentList	type		6306357	1					
ANR	6307479	Argument	type		6306357	0					
ANR	6307480	Identifier	type		6306357	0					
ANR	6307481	Argument	c		6306357	1					
ANR	6307482	Identifier	c		6306357	0					
ANR	6307483	Argument	0		6306357	2					
ANR	6307484	PrimaryExpression	0		6306357	0					
ANR	6307485	Argument	expr_type		6306357	3					
ANR	6307486	Identifier	expr_type		6306357	0					
ANR	6307487	ReturnType	static void		6306357	1					
ANR	6307488	Identifier	decl_initializer		6306357	2					
ANR	6307489	ParameterList	"CType * type , unsigned long c , int first , int size_only"		6306357	3					
ANR	6307490	Parameter	CType * type	2561:29:58190:58200	6306357	0	True				
ANR	6307491	ParameterType	CType *		6306357	0					
ANR	6307492	Identifier	type		6306357	1					
ANR	6307493	Parameter	unsigned long c	2561:42:58203:58217	6306357	1	True				
ANR	6307494	ParameterType	unsigned long		6306357	0					
ANR	6307495	Identifier	c		6306357	1					
ANR	6307496	Parameter	int first	2561:59:58220:58228	6306357	2	True				
ANR	6307497	ParameterType	int		6306357	0					
ANR	6307498	Identifier	first		6306357	1					
ANR	6307499	Parameter	int size_only	2561:70:58231:58243	6306357	3	True				
ANR	6307500	ParameterType	int		6306357	0					
ANR	6307501	Identifier	size_only		6306357	1					
ANR	6307502	CFGEntryNode	ENTRY		6306357		True				
ANR	6307503	CFGExitNode	EXIT		6306357		True				
ANR	6307504	Symbol	is_assignable_types		6306357						
ANR	6307505	Symbol	expr_type		6306357						
ANR	6307506	Symbol	f -> next -> type		6306357						
ANR	6307507	Symbol	* f -> next		6306357						
ANR	6307508	Symbol	cstr -> data		6306357						
ANR	6307509	Symbol	type		6306357						
ANR	6307510	Symbol	bit_pos_2		6306357						
ANR	6307511	Symbol	* * cstr		6306357						
ANR	6307512	Symbol	bit_pos_1		6306357						
ANR	6307513	Symbol	type_size		6306357						
ANR	6307514	Symbol	tokc . cstr		6306357						
ANR	6307515	Symbol	pointed_type		6306357						
ANR	6307516	Symbol	EXPR_CONST		6306357						
ANR	6307517	Symbol	& index		6306357						
ANR	6307518	Symbol	VT_STRUCT_SHIFT		6306357						
ANR	6307519	Symbol	parse_btype		6306357						
ANR	6307520	Symbol	cstr_len		6306357						
ANR	6307521	Symbol	NULL		6306357						
ANR	6307522	Symbol	TOK_STR		6306357						
ANR	6307523	Symbol	tokc		6306357						
ANR	6307524	Symbol	* * f		6306357						
ANR	6307525	Symbol	f -> type		6306357						
ANR	6307526	Symbol	index		6306357						
ANR	6307527	Symbol	type1		6306357						
ANR	6307528	Symbol	tcc_nerr		6306357						
ANR	6307529	Symbol	size_only		6306357						
ANR	6307530	Symbol	nb		6306357						
ANR	6307531	Symbol	VT_BITFIELD		6306357						
ANR	6307532	Symbol	type -> t		6306357						
ANR	6307533	Symbol	* cstr		6306357						
ANR	6307534	Symbol	array_length		6306357						
ANR	6307535	Symbol	TOK_LSTR		6306357						
ANR	6307536	Symbol	t1		6306357						
ANR	6307537	Symbol	EXPR_VAL		6306357						
ANR	6307538	Symbol	cstr		6306357						
ANR	6307539	Symbol	CType		6306357						
ANR	6307540	Symbol	no_oblock		6306357						
ANR	6307541	Symbol	f -> c		6306357						
ANR	6307542	Symbol	f -> next -> type . t		6306357						
ANR	6307543	Symbol	s -> next		6306357						
ANR	6307544	Symbol	cstr -> size		6306357						
ANR	6307545	Symbol	tok		6306357						
ANR	6307546	Symbol	& ad1		6306357						
ANR	6307547	Symbol	parlevel1		6306357						
ANR	6307548	Symbol	s -> c		6306357						
ANR	6307549	Symbol	* type		6306357						
ANR	6307550	Symbol	size1		6306357						
ANR	6307551	Symbol	& align1		6306357						
ANR	6307552	Symbol	& f -> type		6306357						
ANR	6307553	Symbol	& type1		6306357						
ANR	6307554	Symbol	TYPE_ABSTRACT		6306357						
ANR	6307555	Symbol	type -> ref		6306357						
ANR	6307556	Symbol	c		6306357						
ANR	6307557	Symbol	align1		6306357						
ANR	6307558	Symbol	ch		6306357						
ANR	6307559	Symbol	f		6306357						
ANR	6307560	Symbol	parlevel		6306357						
ANR	6307561	Symbol	i		6306357						
ANR	6307562	Symbol	& f		6306357						
ANR	6307563	Symbol	* cstr -> data		6306357						
ANR	6307564	Symbol	f -> next		6306357						
ANR	6307565	Symbol	n		6306357						
ANR	6307566	Symbol	ad1		6306357						
ANR	6307567	Symbol	* f		6306357						
ANR	6307568	Symbol	s		6306357						
ANR	6307569	Symbol	* i		6306357						
ANR	6307570	Symbol	f -> next -> c		6306357						
ANR	6307571	Symbol	& n		6306357						
ANR	6307572	Symbol	is_structured		6306357						
ANR	6307573	Symbol	f -> type . t		6306357						
ANR	6307574	Symbol	* s		6306357						
ANR	6307575	Symbol	par_count		6306357						
ANR	6307576	Symbol	first		6306357						
ANR	6307577	Symbol	VT_ARRAY		6306357						
ANR	6307578	Function	decl_initializer_alloc	2810:0:64805:68586							
ANR	6307579	FunctionDef	"decl_initializer_alloc (CType * type , AttributeDef * ad , int r , int has_init , int v , char * asm_label , int scope)"		6307578	0					
ANR	6307580	CompoundStatement		2810:122:64927:68586	6307578	0					
ANR	6307581	IdentifierDeclStatement	"int size , align , addr ;"	2811:1:64930:64951	6307578	0	True				
ANR	6307582	IdentifierDecl	size		6307578	0					
ANR	6307583	IdentifierDeclType	int		6307578	0					
ANR	6307584	Identifier	size		6307578	1					
ANR	6307585	IdentifierDecl	align		6307578	1					
ANR	6307586	IdentifierDeclType	int		6307578	0					
ANR	6307587	Identifier	align		6307578	1					
ANR	6307588	IdentifierDecl	addr		6307578	2					
ANR	6307589	IdentifierDeclType	int		6307578	0					
ANR	6307590	Identifier	addr		6307578	1					
ANR	6307591	IdentifierDeclStatement	int level ;	2812:1:64954:64963	6307578	1	True				
ANR	6307592	IdentifierDecl	level		6307578	0					
ANR	6307593	IdentifierDeclType	int		6307578	0					
ANR	6307594	Identifier	level		6307578	1					
ANR	6307595	IdentifierDeclStatement	ParseState saved_parse_state = { 0 } ;	2813:1:64966:65005	6307578	2	True				
ANR	6307596	IdentifierDecl	saved_parse_state = { 0 }		6307578	0					
ANR	6307597	IdentifierDeclType	ParseState		6307578	0					
ANR	6307598	Identifier	saved_parse_state		6307578	1					
ANR	6307599	AssignmentExpression	saved_parse_state = { 0 }		6307578	2		=			
ANR	6307600	Identifier	saved_parse_state		6307578	0					
ANR	6307601	InitializerList	0		6307578	1					
ANR	6307602	PrimaryExpression	0		6307578	0					
ANR	6307603	IdentifierDeclStatement	TokenString init_str ;	2816:1:65008:65028	6307578	3	True				
ANR	6307604	IdentifierDecl	init_str		6307578	0					
ANR	6307605	IdentifierDeclType	TokenString		6307578	0					
ANR	6307606	Identifier	init_str		6307578	1					
ANR	6307607	IdentifierDeclStatement	Sym * flexible_array ;	2817:1:65031:65050	6307578	4	True				
ANR	6307608	IdentifierDecl	* flexible_array		6307578	0					
ANR	6307609	IdentifierDeclType	Sym *		6307578	0					
ANR	6307610	Identifier	flexible_array		6307578	1					
ANR	6307611	ExpressionStatement	flexible_array = NULL	2819:1:65054:65075	6307578	5	True				
ANR	6307612	AssignmentExpression	flexible_array = NULL		6307578	0		=			
ANR	6307613	Identifier	flexible_array		6307578	0					
ANR	6307614	Identifier	NULL		6307578	1					
ANR	6307615	IfStatement	if ( is_struct ( type ) )		6307578	6					
ANR	6307616	Condition	is_struct ( type )	2820:5:65082:65096	6307578	0	True				
ANR	6307617	CallExpression	is_struct ( type )		6307578	0					
ANR	6307618	Callee	is_struct		6307578	0					
ANR	6307619	Identifier	is_struct		6307578	0					
ANR	6307620	ArgumentList	type		6307578	1					
ANR	6307621	Argument	type		6307578	0					
ANR	6307622	Identifier	type		6307578	0					
ANR	6307623	CompoundStatement		12:2:175:185	6307578	1					
ANR	6307624	IdentifierDeclStatement	Sym * field ;	2821:2:65103:65113	6307578	0	True				
ANR	6307625	IdentifierDecl	* field		6307578	0					
ANR	6307626	IdentifierDeclType	Sym *		6307578	0					
ANR	6307627	Identifier	field		6307578	1					
ANR	6307628	ExpressionStatement	field = type -> ref	2822:2:65117:65134	6307578	1	True				
ANR	6307629	AssignmentExpression	field = type -> ref		6307578	0		=			
ANR	6307630	Identifier	field		6307578	0					
ANR	6307631	PtrMemberAccess	type -> ref		6307578	1					
ANR	6307632	Identifier	type		6307578	0					
ANR	6307633	Identifier	ref		6307578	1					
ANR	6307634	WhileStatement	while ( field && field -> next )		6307578	2					
ANR	6307635	Condition	field && field -> next	2823:9:65145:65164	6307578	0	True				
ANR	6307636	AndExpression	field && field -> next		6307578	0		&&			
ANR	6307637	Identifier	field		6307578	0					
ANR	6307638	PtrMemberAccess	field -> next		6307578	1					
ANR	6307639	Identifier	field		6307578	0					
ANR	6307640	Identifier	next		6307578	1					
ANR	6307641	ExpressionStatement	field = field -> next	2824:3:65170:65189	6307578	1	True				
ANR	6307642	AssignmentExpression	field = field -> next		6307578	0		=			
ANR	6307643	Identifier	field		6307578	0					
ANR	6307644	PtrMemberAccess	field -> next		6307578	1					
ANR	6307645	Identifier	field		6307578	0					
ANR	6307646	Identifier	next		6307578	1					
ANR	6307647	IfStatement	if ( field && ( field -> type . t & VT_ARRAY ) && ( field -> type . ref -> c < 0 ) )		6307578	3					
ANR	6307648	Condition	field && ( field -> type . t & VT_ARRAY ) && ( field -> type . ref -> c < 0 )	2825:6:65197:65259	6307578	0	True				
ANR	6307649	AndExpression	field && ( field -> type . t & VT_ARRAY ) && ( field -> type . ref -> c < 0 )		6307578	0		&&			
ANR	6307650	Identifier	field		6307578	0					
ANR	6307651	AndExpression	( field -> type . t & VT_ARRAY ) && ( field -> type . ref -> c < 0 )		6307578	1		&&			
ANR	6307652	BitAndExpression	field -> type . t & VT_ARRAY		6307578	0		&			
ANR	6307653	MemberAccess	field -> type . t		6307578	0					
ANR	6307654	PtrMemberAccess	field -> type		6307578	0					
ANR	6307655	Identifier	field		6307578	0					
ANR	6307656	Identifier	type		6307578	1					
ANR	6307657	Identifier	t		6307578	1					
ANR	6307658	Identifier	VT_ARRAY		6307578	1					
ANR	6307659	RelationalExpression	field -> type . ref -> c < 0		6307578	1		<			
ANR	6307660	PtrMemberAccess	field -> type . ref -> c		6307578	0					
ANR	6307661	MemberAccess	field -> type . ref		6307578	0					
ANR	6307662	PtrMemberAccess	field -> type		6307578	0					
ANR	6307663	Identifier	field		6307578	0					
ANR	6307664	Identifier	type		6307578	1					
ANR	6307665	Identifier	ref		6307578	1					
ANR	6307666	Identifier	c		6307578	1					
ANR	6307667	PrimaryExpression	0		6307578	1					
ANR	6307668	CompoundStatement		16:71:334:334	6307578	1					
ANR	6307669	ExpressionStatement	flexible_array = field	2826:3:65267:65289	6307578	0	True				
ANR	6307670	AssignmentExpression	flexible_array = field		6307578	0		=			
ANR	6307671	Identifier	flexible_array		6307578	0					
ANR	6307672	Identifier	field		6307578	1					
ANR	6307673	ExpressionStatement	"size = type_size ( type , & align )"	2830:1:65300:65331	6307578	7	True				
ANR	6307674	AssignmentExpression	"size = type_size ( type , & align )"		6307578	0		=			
ANR	6307675	Identifier	size		6307578	0					
ANR	6307676	CallExpression	"type_size ( type , & align )"		6307578	1					
ANR	6307677	Callee	type_size		6307578	0					
ANR	6307678	Identifier	type_size		6307578	0					
ANR	6307679	ArgumentList	type		6307578	1					
ANR	6307680	Argument	type		6307578	0					
ANR	6307681	Identifier	type		6307578	0					
ANR	6307682	Argument	& align		6307578	1					
ANR	6307683	UnaryOperationExpression	& align		6307578	0					
ANR	6307684	UnaryOperator	&		6307578	0					
ANR	6307685	Identifier	align		6307578	1					
ANR	6307686	ExpressionStatement	tok_str_new ( & init_str )	2837:1:65578:65601	6307578	8	True				
ANR	6307687	CallExpression	tok_str_new ( & init_str )		6307578	0					
ANR	6307688	Callee	tok_str_new		6307578	0					
ANR	6307689	Identifier	tok_str_new		6307578	0					
ANR	6307690	ArgumentList	& init_str		6307578	1					
ANR	6307691	Argument	& init_str		6307578	0					
ANR	6307692	UnaryOperationExpression	& init_str		6307578	0					
ANR	6307693	UnaryOperator	&		6307578	0					
ANR	6307694	Identifier	init_str		6307578	1					
ANR	6307695	IfStatement	if ( size < 0 || ( flexible_array && has_init ) )		6307578	9					
ANR	6307696	Condition	size < 0 || ( flexible_array && has_init )	2838:5:65608:65647	6307578	0	True				
ANR	6307697	OrExpression	size < 0 || ( flexible_array && has_init )		6307578	0		||			
ANR	6307698	RelationalExpression	size < 0		6307578	0		<			
ANR	6307699	Identifier	size		6307578	0					
ANR	6307700	PrimaryExpression	0		6307578	1					
ANR	6307701	AndExpression	flexible_array && has_init		6307578	1		&&			
ANR	6307702	Identifier	flexible_array		6307578	0					
ANR	6307703	Identifier	has_init		6307578	1					
ANR	6307704	CompoundStatement		29:47:722:722	6307578	1					
ANR	6307705	IfStatement	if ( ! has_init )		6307578	0					
ANR	6307706	Condition	! has_init	2839:6:65658:65666	6307578	0	True				
ANR	6307707	UnaryOperationExpression	! has_init		6307578	0					
ANR	6307708	UnaryOperator	!		6307578	0					
ANR	6307709	Identifier	has_init		6307578	1					
ANR	6307710	CompoundStatement		30:17:741:741	6307578	1					
ANR	6307711	ExpressionStatement	"TCC_ERR ( ""unknown type size"" )"	2840:3:65674:65703	6307578	0	True				
ANR	6307712	CallExpression	"TCC_ERR ( ""unknown type size"" )"		6307578	0					
ANR	6307713	Callee	TCC_ERR		6307578	0					
ANR	6307714	Identifier	TCC_ERR		6307578	0					
ANR	6307715	ArgumentList	"""unknown type size"""		6307578	1					
ANR	6307716	Argument	"""unknown type size"""		6307578	0					
ANR	6307717	PrimaryExpression	"""unknown type size"""		6307578	0					
ANR	6307718	IfStatement	if ( has_init == 2 )		6307578	1					
ANR	6307719	Condition	has_init == 2	2843:6:65743:65755	6307578	0	True				
ANR	6307720	EqualityExpression	has_init == 2		6307578	0		==			
ANR	6307721	Identifier	has_init		6307578	0					
ANR	6307722	PrimaryExpression	2		6307578	1					
ANR	6307723	CompoundStatement		34:21:830:830	6307578	1					
ANR	6307724	WhileStatement	while ( tok == TOK_STR || tok == TOK_LSTR )		6307578	0					
ANR	6307725	Condition	tok == TOK_STR || tok == TOK_LSTR	2845:10:65796:65828	6307578	0	True				
ANR	6307726	OrExpression	tok == TOK_STR || tok == TOK_LSTR		6307578	0		||			
ANR	6307727	EqualityExpression	tok == TOK_STR		6307578	0		==			
ANR	6307728	Identifier	tok		6307578	0					
ANR	6307729	Identifier	TOK_STR		6307578	1					
ANR	6307730	EqualityExpression	tok == TOK_LSTR		6307578	1		==			
ANR	6307731	Identifier	tok		6307578	0					
ANR	6307732	Identifier	TOK_LSTR		6307578	1					
ANR	6307733	CompoundStatement		36:45:903:903	6307578	1					
ANR	6307734	ExpressionStatement	tok_str_add_tok ( & init_str )	2846:4:65837:65864	6307578	0	True				
ANR	6307735	CallExpression	tok_str_add_tok ( & init_str )		6307578	0					
ANR	6307736	Callee	tok_str_add_tok		6307578	0					
ANR	6307737	Identifier	tok_str_add_tok		6307578	0					
ANR	6307738	ArgumentList	& init_str		6307578	1					
ANR	6307739	Argument	& init_str		6307578	0					
ANR	6307740	UnaryOperationExpression	& init_str		6307578	0					
ANR	6307741	UnaryOperator	&		6307578	0					
ANR	6307742	Identifier	init_str		6307578	1					
ANR	6307743	ExpressionStatement	next ( )	2847:4:65870:65877	6307578	1	True				
ANR	6307744	CallExpression	next ( )		6307578	0					
ANR	6307745	Callee	next		6307578	0					
ANR	6307746	Identifier	next		6307578	0					
ANR	6307747	ArgumentList			6307578	1					
ANR	6307748	ElseStatement	else		6307578	0					
ANR	6307749	CompoundStatement		40:9:965:965	6307578	0					
ANR	6307750	ExpressionStatement	level = 0	2850:3:65898:65907	6307578	0	True				
ANR	6307751	AssignmentExpression	level = 0		6307578	0		=			
ANR	6307752	Identifier	level		6307578	0					
ANR	6307753	PrimaryExpression	0		6307578	1					
ANR	6307754	WhileStatement	"while ( tcc_nerr ( ) == 0 && ( level > 0 || ( tok != ',' && tok != ';' ) ) )"		6307578	1					
ANR	6307755	Condition	"tcc_nerr ( ) == 0 && ( level > 0 || ( tok != ',' && tok != ';' ) )"	2851:10:65919:65978	6307578	0	True				
ANR	6307756	AndExpression	"tcc_nerr ( ) == 0 && ( level > 0 || ( tok != ',' && tok != ';' ) )"		6307578	0		&&			
ANR	6307757	EqualityExpression	tcc_nerr ( ) == 0		6307578	0		==			
ANR	6307758	CallExpression	tcc_nerr ( )		6307578	0					
ANR	6307759	Callee	tcc_nerr		6307578	0					
ANR	6307760	Identifier	tcc_nerr		6307578	0					
ANR	6307761	ArgumentList			6307578	1					
ANR	6307762	PrimaryExpression	0		6307578	1					
ANR	6307763	OrExpression	"level > 0 || ( tok != ',' && tok != ';' )"		6307578	1		||			
ANR	6307764	RelationalExpression	level > 0		6307578	0		>			
ANR	6307765	Identifier	level		6307578	0					
ANR	6307766	PrimaryExpression	0		6307578	1					
ANR	6307767	AndExpression	"tok != ',' && tok != ';'"		6307578	1		&&			
ANR	6307768	EqualityExpression	"tok != ','"		6307578	0		!=			
ANR	6307769	Identifier	tok		6307578	0					
ANR	6307770	PrimaryExpression	"','"		6307578	1					
ANR	6307771	EqualityExpression	tok != ';'		6307578	1		!=			
ANR	6307772	Identifier	tok		6307578	0					
ANR	6307773	PrimaryExpression	';'		6307578	1					
ANR	6307774	CompoundStatement		42:72:1053:1053	6307578	1					
ANR	6307775	IfStatement	if ( tok < 0 )		6307578	0					
ANR	6307776	Condition	tok < 0	2852:8:65991:65997	6307578	0	True				
ANR	6307777	RelationalExpression	tok < 0		6307578	0		<			
ANR	6307778	Identifier	tok		6307578	0					
ANR	6307779	PrimaryExpression	0		6307578	1					
ANR	6307780	CompoundStatement		43:17:1072:1072	6307578	1					
ANR	6307781	ExpressionStatement	"TCC_ERR ( ""unexpected end of file in initializer"" )"	2853:5:66007:66056	6307578	0	True				
ANR	6307782	CallExpression	"TCC_ERR ( ""unexpected end of file in initializer"" )"		6307578	0					
ANR	6307783	Callee	TCC_ERR		6307578	0					
ANR	6307784	Identifier	TCC_ERR		6307578	0					
ANR	6307785	ArgumentList	"""unexpected end of file in initializer"""		6307578	1					
ANR	6307786	Argument	"""unexpected end of file in initializer"""		6307578	0					
ANR	6307787	PrimaryExpression	"""unexpected end of file in initializer"""		6307578	0					
ANR	6307788	ExpressionStatement	tok_str_add_tok ( & init_str )	2855:4:66068:66095	6307578	1	True				
ANR	6307789	CallExpression	tok_str_add_tok ( & init_str )		6307578	0					
ANR	6307790	Callee	tok_str_add_tok		6307578	0					
ANR	6307791	Identifier	tok_str_add_tok		6307578	0					
ANR	6307792	ArgumentList	& init_str		6307578	1					
ANR	6307793	Argument	& init_str		6307578	0					
ANR	6307794	UnaryOperationExpression	& init_str		6307578	0					
ANR	6307795	UnaryOperator	&		6307578	0					
ANR	6307796	Identifier	init_str		6307578	1					
ANR	6307797	IfStatement	if ( tok == '{' )		6307578	2					
ANR	6307798	Condition	tok == '{'	2856:8:66105:66114	6307578	0	True				
ANR	6307799	EqualityExpression	tok == '{'		6307578	0		==			
ANR	6307800	Identifier	tok		6307578	0					
ANR	6307801	PrimaryExpression	'{'		6307578	1					
ANR	6307802	CompoundStatement		47:20:1189:1189	6307578	1					
ANR	6307803	ExpressionStatement	level ++	2857:5:66124:66131	6307578	0	True				
ANR	6307804	PostIncDecOperationExpression	level ++		6307578	0					
ANR	6307805	Identifier	level		6307578	0					
ANR	6307806	IncDec	++		6307578	1					
ANR	6307807	ElseStatement	else		6307578	0					
ANR	6307808	IfStatement	if ( tok == '}' )		6307578	0					
ANR	6307809	Condition	tok == '}'	2858:15:66148:66157	6307578	0	True				
ANR	6307810	EqualityExpression	tok == '}'		6307578	0		==			
ANR	6307811	Identifier	tok		6307578	0					
ANR	6307812	PrimaryExpression	'}'		6307578	1					
ANR	6307813	CompoundStatement		49:27:1232:1232	6307578	1					
ANR	6307814	ExpressionStatement	level --	2859:5:66167:66174	6307578	0	True				
ANR	6307815	PostIncDecOperationExpression	level --		6307578	0					
ANR	6307816	Identifier	level		6307578	0					
ANR	6307817	IncDec	--		6307578	1					
ANR	6307818	IfStatement	if ( level <= 0 )		6307578	1					
ANR	6307819	Condition	level <= 0	2860:9:66185:66194	6307578	0	True				
ANR	6307820	RelationalExpression	level <= 0		6307578	0		<=			
ANR	6307821	Identifier	level		6307578	0					
ANR	6307822	PrimaryExpression	0		6307578	1					
ANR	6307823	CompoundStatement		51:21:1269:1269	6307578	1					
ANR	6307824	ExpressionStatement	next ( )	2861:6:66205:66212	6307578	0	True				
ANR	6307825	CallExpression	next ( )		6307578	0					
ANR	6307826	Callee	next		6307578	0					
ANR	6307827	Identifier	next		6307578	0					
ANR	6307828	ArgumentList			6307578	1					
ANR	6307829	BreakStatement	break ;	2862:6:66220:66225	6307578	1	True				
ANR	6307830	ExpressionStatement	next ( )	2865:4:66244:66251	6307578	3	True				
ANR	6307831	CallExpression	next ( )		6307578	0					
ANR	6307832	Callee	next		6307578	0					
ANR	6307833	Identifier	next		6307578	0					
ANR	6307834	ArgumentList			6307578	1					
ANR	6307835	ExpressionStatement	"tok_str_add ( & init_str , - 1 )"	2868:2:66264:66291	6307578	2	True				
ANR	6307836	CallExpression	"tok_str_add ( & init_str , - 1 )"		6307578	0					
ANR	6307837	Callee	tok_str_add		6307578	0					
ANR	6307838	Identifier	tok_str_add		6307578	0					
ANR	6307839	ArgumentList	& init_str		6307578	1					
ANR	6307840	Argument	& init_str		6307578	0					
ANR	6307841	UnaryOperationExpression	& init_str		6307578	0					
ANR	6307842	UnaryOperator	&		6307578	0					
ANR	6307843	Identifier	init_str		6307578	1					
ANR	6307844	Argument	- 1		6307578	1					
ANR	6307845	UnaryOperationExpression	- 1		6307578	0					
ANR	6307846	UnaryOperator	-		6307578	0					
ANR	6307847	PrimaryExpression	1		6307578	1					
ANR	6307848	ExpressionStatement	"tok_str_add ( & init_str , 0 )"	2869:2:66295:66321	6307578	3	True				
ANR	6307849	CallExpression	"tok_str_add ( & init_str , 0 )"		6307578	0					
ANR	6307850	Callee	tok_str_add		6307578	0					
ANR	6307851	Identifier	tok_str_add		6307578	0					
ANR	6307852	ArgumentList	& init_str		6307578	1					
ANR	6307853	Argument	& init_str		6307578	0					
ANR	6307854	UnaryOperationExpression	& init_str		6307578	0					
ANR	6307855	UnaryOperator	&		6307578	0					
ANR	6307856	Identifier	init_str		6307578	1					
ANR	6307857	Argument	0		6307578	1					
ANR	6307858	PrimaryExpression	0		6307578	0					
ANR	6307859	ExpressionStatement	save_parse_state ( & saved_parse_state )	2872:2:66347:66384	6307578	4	True				
ANR	6307860	CallExpression	save_parse_state ( & saved_parse_state )		6307578	0					
ANR	6307861	Callee	save_parse_state		6307578	0					
ANR	6307862	Identifier	save_parse_state		6307578	0					
ANR	6307863	ArgumentList	& saved_parse_state		6307578	1					
ANR	6307864	Argument	& saved_parse_state		6307578	0					
ANR	6307865	UnaryOperationExpression	& saved_parse_state		6307578	0					
ANR	6307866	UnaryOperator	&		6307578	0					
ANR	6307867	Identifier	saved_parse_state		6307578	1					
ANR	6307868	ExpressionStatement	macro_ptr = init_str . str	2874:2:66389:66413	6307578	5	True				
ANR	6307869	AssignmentExpression	macro_ptr = init_str . str		6307578	0		=			
ANR	6307870	Identifier	macro_ptr		6307578	0					
ANR	6307871	MemberAccess	init_str . str		6307578	1					
ANR	6307872	Identifier	init_str		6307578	0					
ANR	6307873	Identifier	str		6307578	1					
ANR	6307874	ExpressionStatement	next ( )	2875:2:66417:66424	6307578	6	True				
ANR	6307875	CallExpression	next ( )		6307578	0					
ANR	6307876	Callee	next		6307578	0					
ANR	6307877	Identifier	next		6307578	0					
ANR	6307878	ArgumentList			6307578	1					
ANR	6307879	ExpressionStatement	"decl_initializer ( type , 0 , 1 , 1 )"	2876:2:66428:66460	6307578	7	True				
ANR	6307880	CallExpression	"decl_initializer ( type , 0 , 1 , 1 )"		6307578	0					
ANR	6307881	Callee	decl_initializer		6307578	0					
ANR	6307882	Identifier	decl_initializer		6307578	0					
ANR	6307883	ArgumentList	type		6307578	1					
ANR	6307884	Argument	type		6307578	0					
ANR	6307885	Identifier	type		6307578	0					
ANR	6307886	Argument	0		6307578	1					
ANR	6307887	PrimaryExpression	0		6307578	0					
ANR	6307888	Argument	1		6307578	2					
ANR	6307889	PrimaryExpression	1		6307578	0					
ANR	6307890	Argument	1		6307578	3					
ANR	6307891	PrimaryExpression	1		6307578	0					
ANR	6307892	ExpressionStatement	macro_ptr = init_str . str	2878:2:66507:66531	6307578	8	True				
ANR	6307893	AssignmentExpression	macro_ptr = init_str . str		6307578	0		=			
ANR	6307894	Identifier	macro_ptr		6307578	0					
ANR	6307895	MemberAccess	init_str . str		6307578	1					
ANR	6307896	Identifier	init_str		6307578	0					
ANR	6307897	Identifier	str		6307578	1					
ANR	6307898	ExpressionStatement	next ( )	2879:2:66535:66542	6307578	9	True				
ANR	6307899	CallExpression	next ( )		6307578	0					
ANR	6307900	Callee	next		6307578	0					
ANR	6307901	Identifier	next		6307578	0					
ANR	6307902	ArgumentList			6307578	1					
ANR	6307903	ExpressionStatement	"size = type_size ( type , & align )"	2882:2:66584:66615	6307578	10	True				
ANR	6307904	AssignmentExpression	"size = type_size ( type , & align )"		6307578	0		=			
ANR	6307905	Identifier	size		6307578	0					
ANR	6307906	CallExpression	"type_size ( type , & align )"		6307578	1					
ANR	6307907	Callee	type_size		6307578	0					
ANR	6307908	Identifier	type_size		6307578	0					
ANR	6307909	ArgumentList	type		6307578	1					
ANR	6307910	Argument	type		6307578	0					
ANR	6307911	Identifier	type		6307578	0					
ANR	6307912	Argument	& align		6307578	1					
ANR	6307913	UnaryOperationExpression	& align		6307578	0					
ANR	6307914	UnaryOperator	&		6307578	0					
ANR	6307915	Identifier	align		6307578	1					
ANR	6307916	IfStatement	if ( size < 0 )		6307578	11					
ANR	6307917	Condition	size < 0	2883:6:66623:66630	6307578	0	True				
ANR	6307918	RelationalExpression	size < 0		6307578	0		<			
ANR	6307919	Identifier	size		6307578	0					
ANR	6307920	PrimaryExpression	0		6307578	1					
ANR	6307921	CompoundStatement		74:16:1705:1705	6307578	1					
ANR	6307922	ExpressionStatement	"TCC_ERR ( ""unknown type size"" )"	2884:3:66638:66667	6307578	0	True				
ANR	6307923	CallExpression	"TCC_ERR ( ""unknown type size"" )"		6307578	0					
ANR	6307924	Callee	TCC_ERR		6307578	0					
ANR	6307925	Identifier	TCC_ERR		6307578	0					
ANR	6307926	ArgumentList	"""unknown type size"""		6307578	1					
ANR	6307927	Argument	"""unknown type size"""		6307578	0					
ANR	6307928	PrimaryExpression	"""unknown type size"""		6307578	0					
ANR	6307929	IfStatement	if ( flexible_array )		6307578	10					
ANR	6307930	Condition	flexible_array	2887:5:66681:66694	6307578	0	True				
ANR	6307931	Identifier	flexible_array		6307578	0					
ANR	6307932	CompoundStatement		78:21:1769:1769	6307578	1					
ANR	6307933	ExpressionStatement	size += flexible_array -> type . ref -> c * pointed_size ( & flexible_array -> type )	2888:2:66701:66775	6307578	0	True				
ANR	6307934	AssignmentExpression	size += flexible_array -> type . ref -> c * pointed_size ( & flexible_array -> type )		6307578	0		+=			
ANR	6307935	Identifier	size		6307578	0					
ANR	6307936	MultiplicativeExpression	flexible_array -> type . ref -> c * pointed_size ( & flexible_array -> type )		6307578	1		*			
ANR	6307937	PtrMemberAccess	flexible_array -> type . ref -> c		6307578	0					
ANR	6307938	MemberAccess	flexible_array -> type . ref		6307578	0					
ANR	6307939	PtrMemberAccess	flexible_array -> type		6307578	0					
ANR	6307940	Identifier	flexible_array		6307578	0					
ANR	6307941	Identifier	type		6307578	1					
ANR	6307942	Identifier	ref		6307578	1					
ANR	6307943	Identifier	c		6307578	1					
ANR	6307944	CallExpression	pointed_size ( & flexible_array -> type )		6307578	1					
ANR	6307945	Callee	pointed_size		6307578	0					
ANR	6307946	Identifier	pointed_size		6307578	0					
ANR	6307947	ArgumentList	& flexible_array -> type		6307578	1					
ANR	6307948	Argument	& flexible_array -> type		6307578	0					
ANR	6307949	UnaryOperationExpression	& flexible_array -> type		6307578	0					
ANR	6307950	UnaryOperator	&		6307578	0					
ANR	6307951	PtrMemberAccess	flexible_array -> type		6307578	1					
ANR	6307952	Identifier	flexible_array		6307578	0					
ANR	6307953	Identifier	type		6307578	1					
ANR	6307954	IfStatement	if ( ad -> aligned )		6307578	11					
ANR	6307955	Condition	ad -> aligned	2891:5:66840:66850	6307578	0	True				
ANR	6307956	PtrMemberAccess	ad -> aligned		6307578	0					
ANR	6307957	Identifier	ad		6307578	0					
ANR	6307958	Identifier	aligned		6307578	1					
ANR	6307959	CompoundStatement		82:18:1925:1925	6307578	1					
ANR	6307960	IfStatement	if ( ad -> aligned > align )		6307578	0					
ANR	6307961	Condition	ad -> aligned > align	2892:6:66861:66879	6307578	0	True				
ANR	6307962	RelationalExpression	ad -> aligned > align		6307578	0		>			
ANR	6307963	PtrMemberAccess	ad -> aligned		6307578	0					
ANR	6307964	Identifier	ad		6307578	0					
ANR	6307965	Identifier	aligned		6307578	1					
ANR	6307966	Identifier	align		6307578	1					
ANR	6307967	CompoundStatement		83:27:1954:1954	6307578	1					
ANR	6307968	ExpressionStatement	align = ad -> aligned	2893:3:66887:66906	6307578	0	True				
ANR	6307969	AssignmentExpression	align = ad -> aligned		6307578	0		=			
ANR	6307970	Identifier	align		6307578	0					
ANR	6307971	PtrMemberAccess	ad -> aligned		6307578	1					
ANR	6307972	Identifier	ad		6307578	0					
ANR	6307973	Identifier	aligned		6307578	1					
ANR	6307974	ElseStatement	else		6307578	0					
ANR	6307975	IfStatement	if ( ad -> packed )		6307578	0					
ANR	6307976	Condition	ad -> packed	2895:12:66924:66933	6307578	0	True				
ANR	6307977	PtrMemberAccess	ad -> packed		6307578	0					
ANR	6307978	Identifier	ad		6307578	0					
ANR	6307979	Identifier	packed		6307578	1					
ANR	6307980	CompoundStatement		86:24:2008:2008	6307578	1					
ANR	6307981	ExpressionStatement	align = 1	2896:2:66940:66949	6307578	0	True				
ANR	6307982	AssignmentExpression	align = 1		6307578	0		=			
ANR	6307983	Identifier	align		6307578	0					
ANR	6307984	PrimaryExpression	1		6307578	1					
ANR	6307985	IfStatement	if ( ( r & VT_VALMASK ) == VT_LOCAL )		6307578	12					
ANR	6307986	Condition	( r & VT_VALMASK ) == VT_LOCAL	2898:5:66959:66986	6307578	0	True				
ANR	6307987	EqualityExpression	( r & VT_VALMASK ) == VT_LOCAL		6307578	0		==			
ANR	6307988	BitAndExpression	r & VT_VALMASK		6307578	0		&			
ANR	6307989	Identifier	r		6307578	0					
ANR	6307990	Identifier	VT_VALMASK		6307578	1					
ANR	6307991	Identifier	VT_LOCAL		6307578	1					
ANR	6307992	CompoundStatement		89:35:2061:2061	6307578	1					
ANR	6307993	ExpressionStatement	loc = ( loc - size ) & - align	2899:2:66993:67021	6307578	0	True				
ANR	6307994	AssignmentExpression	loc = ( loc - size ) & - align		6307578	0		=			
ANR	6307995	Identifier	loc		6307578	0					
ANR	6307996	BitAndExpression	( loc - size ) & - align		6307578	1		&			
ANR	6307997	AdditiveExpression	loc - size		6307578	0		-			
ANR	6307998	Identifier	loc		6307578	0					
ANR	6307999	Identifier	size		6307578	1					
ANR	6308000	UnaryOperationExpression	- align		6307578	1					
ANR	6308001	UnaryOperator	-		6307578	0					
ANR	6308002	Identifier	align		6307578	1					
ANR	6308003	ExpressionStatement	addr = loc	2900:2:67025:67035	6307578	1	True				
ANR	6308004	AssignmentExpression	addr = loc		6307578	0		=			
ANR	6308005	Identifier	addr		6307578	0					
ANR	6308006	Identifier	loc		6307578	1					
ANR	6308007	IfStatement	if ( v )		6307578	2					
ANR	6308008	Condition	v	2901:6:67043:67043	6307578	0	True				
ANR	6308009	Identifier	v		6307578	0					
ANR	6308010	CompoundStatement		92:9:2118:2118	6307578	1					
ANR	6308011	ExpressionStatement	"sym_push ( v , type , r , addr )"	2903:3:67075:67102	6307578	0	True				
ANR	6308012	CallExpression	"sym_push ( v , type , r , addr )"		6307578	0					
ANR	6308013	Callee	sym_push		6307578	0					
ANR	6308014	Identifier	sym_push		6307578	0					
ANR	6308015	ArgumentList	v		6307578	1					
ANR	6308016	Argument	v		6307578	0					
ANR	6308017	Identifier	v		6307578	0					
ANR	6308018	Argument	type		6307578	1					
ANR	6308019	Identifier	type		6307578	0					
ANR	6308020	Argument	r		6307578	2					
ANR	6308021	Identifier	r		6307578	0					
ANR	6308022	Argument	addr		6307578	3					
ANR	6308023	Identifier	addr		6307578	0					
ANR	6308024	ElseStatement	else		6307578	0					
ANR	6308025	CompoundStatement		95:9:2185:2185	6307578	0					
ANR	6308026	ExpressionStatement	"vset ( type , r , addr )"	2906:3:67148:67168	6307578	0	True				
ANR	6308027	CallExpression	"vset ( type , r , addr )"		6307578	0					
ANR	6308028	Callee	vset		6307578	0					
ANR	6308029	Identifier	vset		6307578	0					
ANR	6308030	ArgumentList	type		6307578	1					
ANR	6308031	Argument	type		6307578	0					
ANR	6308032	Identifier	type		6307578	0					
ANR	6308033	Argument	r		6307578	1					
ANR	6308034	Identifier	r		6307578	0					
ANR	6308035	Argument	addr		6307578	2					
ANR	6308036	Identifier	addr		6307578	0					
ANR	6308037	ElseStatement	else		6307578	0					
ANR	6308038	CompoundStatement		100:2:2258:2266	6307578	0					
ANR	6308039	IdentifierDeclStatement	Sym * sym ;	2909:2:67186:67194	6307578	0	True				
ANR	6308040	IdentifierDecl	* sym		6307578	0					
ANR	6308041	IdentifierDeclType	Sym *		6307578	0					
ANR	6308042	Identifier	sym		6307578	1					
ANR	6308043	ExpressionStatement	sym = NULL	2911:2:67199:67209	6307578	1	True				
ANR	6308044	AssignmentExpression	sym = NULL		6307578	0		=			
ANR	6308045	Identifier	sym		6307578	0					
ANR	6308046	Identifier	NULL		6307578	1					
ANR	6308047	IfStatement	if ( v && scope == VT_CONST )		6307578	2					
ANR	6308048	Condition	v && scope == VT_CONST	2912:6:67217:67238	6307578	0	True				
ANR	6308049	AndExpression	v && scope == VT_CONST		6307578	0		&&			
ANR	6308050	Identifier	v		6307578	0					
ANR	6308051	EqualityExpression	scope == VT_CONST		6307578	1		==			
ANR	6308052	Identifier	scope		6307578	0					
ANR	6308053	Identifier	VT_CONST		6307578	1					
ANR	6308054	CompoundStatement		103:30:2313:2313	6307578	1					
ANR	6308055	ExpressionStatement	sym = sym_find ( v )	2914:3:67293:67311	6307578	0	True				
ANR	6308056	AssignmentExpression	sym = sym_find ( v )		6307578	0		=			
ANR	6308057	Identifier	sym		6307578	0					
ANR	6308058	CallExpression	sym_find ( v )		6307578	1					
ANR	6308059	Callee	sym_find		6307578	0					
ANR	6308060	Identifier	sym_find		6307578	0					
ANR	6308061	ArgumentList	v		6307578	1					
ANR	6308062	Argument	v		6307578	0					
ANR	6308063	Identifier	v		6307578	0					
ANR	6308064	IfStatement	if ( sym )		6307578	1					
ANR	6308065	Condition	sym	2915:7:67320:67322	6307578	0	True				
ANR	6308066	Identifier	sym		6307578	0					
ANR	6308067	CompoundStatement		106:12:2397:2397	6307578	1					
ANR	6308068	IfStatement	"if ( ! is_compatible_types ( & sym -> type , type ) )"		6307578	0					
ANR	6308069	Condition	"! is_compatible_types ( & sym -> type , type )"	2916:8:67335:67373	6307578	0	True				
ANR	6308070	UnaryOperationExpression	"! is_compatible_types ( & sym -> type , type )"		6307578	0					
ANR	6308071	UnaryOperator	!		6307578	0					
ANR	6308072	CallExpression	"is_compatible_types ( & sym -> type , type )"		6307578	1					
ANR	6308073	Callee	is_compatible_types		6307578	0					
ANR	6308074	Identifier	is_compatible_types		6307578	0					
ANR	6308075	ArgumentList	& sym -> type		6307578	1					
ANR	6308076	Argument	& sym -> type		6307578	0					
ANR	6308077	UnaryOperationExpression	& sym -> type		6307578	0					
ANR	6308078	UnaryOperator	&		6307578	0					
ANR	6308079	PtrMemberAccess	sym -> type		6307578	1					
ANR	6308080	Identifier	sym		6307578	0					
ANR	6308081	Identifier	type		6307578	1					
ANR	6308082	Argument	type		6307578	1					
ANR	6308083	Identifier	type		6307578	0					
ANR	6308084	CompoundStatement		107:49:2448:2448	6307578	1					
ANR	6308085	ExpressionStatement	"TCC_ERR ( ""incompatible types for redefinition of '%s'"" , get_tok_str ( v , NULL ) )"	2917:5:67383:67467	6307578	0	True				
ANR	6308086	CallExpression	"TCC_ERR ( ""incompatible types for redefinition of '%s'"" , get_tok_str ( v , NULL ) )"		6307578	0					
ANR	6308087	Callee	TCC_ERR		6307578	0					
ANR	6308088	Identifier	TCC_ERR		6307578	0					
ANR	6308089	ArgumentList	"""incompatible types for redefinition of '%s'"""		6307578	1					
ANR	6308090	Argument	"""incompatible types for redefinition of '%s'"""		6307578	0					
ANR	6308091	PrimaryExpression	"""incompatible types for redefinition of '%s'"""		6307578	0					
ANR	6308092	Argument	"get_tok_str ( v , NULL )"		6307578	1					
ANR	6308093	CallExpression	"get_tok_str ( v , NULL )"		6307578	0					
ANR	6308094	Callee	get_tok_str		6307578	0					
ANR	6308095	Identifier	get_tok_str		6307578	0					
ANR	6308096	ArgumentList	v		6307578	1					
ANR	6308097	Argument	v		6307578	0					
ANR	6308098	Identifier	v		6307578	0					
ANR	6308099	Argument	NULL		6307578	1					
ANR	6308100	Identifier	NULL		6307578	0					
ANR	6308101	IfStatement	if ( sym -> type . t & VT_EXTERN )		6307578	1					
ANR	6308102	Condition	sym -> type . t & VT_EXTERN	2920:8:67483:67505	6307578	0	True				
ANR	6308103	BitAndExpression	sym -> type . t & VT_EXTERN		6307578	0		&			
ANR	6308104	MemberAccess	sym -> type . t		6307578	0					
ANR	6308105	PtrMemberAccess	sym -> type		6307578	0					
ANR	6308106	Identifier	sym		6307578	0					
ANR	6308107	Identifier	type		6307578	1					
ANR	6308108	Identifier	t		6307578	1					
ANR	6308109	Identifier	VT_EXTERN		6307578	1					
ANR	6308110	CompoundStatement		111:33:2580:2580	6307578	1					
ANR	6308111	ExpressionStatement	sym -> type . t &= ~VT_EXTERN	2922:5:67574:67599	6307578	0	True				
ANR	6308112	AssignmentExpression	sym -> type . t &= ~VT_EXTERN		6307578	0		&=			
ANR	6308113	MemberAccess	sym -> type . t		6307578	0					
ANR	6308114	PtrMemberAccess	sym -> type		6307578	0					
ANR	6308115	Identifier	sym		6307578	0					
ANR	6308116	Identifier	type		6307578	1					
ANR	6308117	Identifier	t		6307578	1					
ANR	6308118	Identifier	~VT_EXTERN		6307578	1					
ANR	6308119	IfStatement	if ( ( sym -> type . t & VT_ARRAY ) && sym -> type . ref -> c < 0 && type -> ref -> c >= 0 )		6307578	1					
ANR	6308120	Condition	( sym -> type . t & VT_ARRAY ) && sym -> type . ref -> c < 0 && type -> ref -> c >= 0	2925:9:67684:67770	6307578	0	True				
ANR	6308121	AndExpression	( sym -> type . t & VT_ARRAY ) && sym -> type . ref -> c < 0 && type -> ref -> c >= 0		6307578	0		&&			
ANR	6308122	BitAndExpression	sym -> type . t & VT_ARRAY		6307578	0		&			
ANR	6308123	MemberAccess	sym -> type . t		6307578	0					
ANR	6308124	PtrMemberAccess	sym -> type		6307578	0					
ANR	6308125	Identifier	sym		6307578	0					
ANR	6308126	Identifier	type		6307578	1					
ANR	6308127	Identifier	t		6307578	1					
ANR	6308128	Identifier	VT_ARRAY		6307578	1					
ANR	6308129	AndExpression	sym -> type . ref -> c < 0 && type -> ref -> c >= 0		6307578	1		&&			
ANR	6308130	RelationalExpression	sym -> type . ref -> c < 0		6307578	0		<			
ANR	6308131	PtrMemberAccess	sym -> type . ref -> c		6307578	0					
ANR	6308132	MemberAccess	sym -> type . ref		6307578	0					
ANR	6308133	PtrMemberAccess	sym -> type		6307578	0					
ANR	6308134	Identifier	sym		6307578	0					
ANR	6308135	Identifier	type		6307578	1					
ANR	6308136	Identifier	ref		6307578	1					
ANR	6308137	Identifier	c		6307578	1					
ANR	6308138	PrimaryExpression	0		6307578	1					
ANR	6308139	RelationalExpression	type -> ref -> c >= 0		6307578	1		>=			
ANR	6308140	PtrMemberAccess	type -> ref -> c		6307578	0					
ANR	6308141	PtrMemberAccess	type -> ref		6307578	0					
ANR	6308142	Identifier	type		6307578	0					
ANR	6308143	Identifier	ref		6307578	1					
ANR	6308144	Identifier	c		6307578	1					
ANR	6308145	PrimaryExpression	0		6307578	1					
ANR	6308146	CompoundStatement		118:28:2845:2845	6307578	1					
ANR	6308147	ExpressionStatement	sym -> type . ref -> c = type -> ref -> c	2928:6:67781:67812	6307578	0	True				
ANR	6308148	AssignmentExpression	sym -> type . ref -> c = type -> ref -> c		6307578	0		=			
ANR	6308149	PtrMemberAccess	sym -> type . ref -> c		6307578	0					
ANR	6308150	MemberAccess	sym -> type . ref		6307578	0					
ANR	6308151	PtrMemberAccess	sym -> type		6307578	0					
ANR	6308152	Identifier	sym		6307578	0					
ANR	6308153	Identifier	type		6307578	1					
ANR	6308154	Identifier	ref		6307578	1					
ANR	6308155	Identifier	c		6307578	1					
ANR	6308156	PtrMemberAccess	type -> ref -> c		6307578	1					
ANR	6308157	PtrMemberAccess	type -> ref		6307578	0					
ANR	6308158	Identifier	type		6307578	0					
ANR	6308159	Identifier	ref		6307578	1					
ANR	6308160	Identifier	c		6307578	1					
ANR	6308161	ElseStatement	else		6307578	0					
ANR	6308162	CompoundStatement		121:11:2904:2904	6307578	0					
ANR	6308163	IfStatement	if ( ! has_init )		6307578	0					
ANR	6308164	Condition	! has_init	2938:9:68188:68196	6307578	0	True				
ANR	6308165	UnaryOperationExpression	! has_init		6307578	0					
ANR	6308166	UnaryOperator	!		6307578	0					
ANR	6308167	Identifier	has_init		6307578	1					
ANR	6308168	CompoundStatement		129:20:3271:3271	6307578	1					
ANR	6308169	GotoStatement	goto no_alloc ;	2939:6:68207:68220	6307578	0	True				
ANR	6308170	Identifier	no_alloc		6307578	0					
ANR	6308171	IfStatement	if ( v )		6307578	3					
ANR	6308172	Condition	v	2945:6:68251:68251	6307578	0	True				
ANR	6308173	Identifier	v		6307578	0					
ANR	6308174	CompoundStatement		136:9:3326:3326	6307578	1					
ANR	6308175	IfStatement	if ( scope != VT_CONST || ! sym )		6307578	0					
ANR	6308176	Condition	scope != VT_CONST || ! sym	2946:7:68263:68287	6307578	0	True				
ANR	6308177	OrExpression	scope != VT_CONST || ! sym		6307578	0		||			
ANR	6308178	EqualityExpression	scope != VT_CONST		6307578	0		!=			
ANR	6308179	Identifier	scope		6307578	0					
ANR	6308180	Identifier	VT_CONST		6307578	1					
ANR	6308181	UnaryOperationExpression	! sym		6307578	1					
ANR	6308182	UnaryOperator	!		6307578	0					
ANR	6308183	Identifier	sym		6307578	1					
ANR	6308184	CompoundStatement		137:34:3362:3362	6307578	1					
ANR	6308185	ExpressionStatement	"sym = sym_push ( v , type , r | VT_SYM , 0 )"	2947:4:68296:68335	6307578	0	True				
ANR	6308186	AssignmentExpression	"sym = sym_push ( v , type , r | VT_SYM , 0 )"		6307578	0		=			
ANR	6308187	Identifier	sym		6307578	0					
ANR	6308188	CallExpression	"sym_push ( v , type , r | VT_SYM , 0 )"		6307578	1					
ANR	6308189	Callee	sym_push		6307578	0					
ANR	6308190	Identifier	sym_push		6307578	0					
ANR	6308191	ArgumentList	v		6307578	1					
ANR	6308192	Argument	v		6307578	0					
ANR	6308193	Identifier	v		6307578	0					
ANR	6308194	Argument	type		6307578	1					
ANR	6308195	Identifier	type		6307578	0					
ANR	6308196	Argument	r | VT_SYM		6307578	2					
ANR	6308197	InclusiveOrExpression	r | VT_SYM		6307578	0		|			
ANR	6308198	Identifier	r		6307578	0					
ANR	6308199	Identifier	VT_SYM		6307578	1					
ANR	6308200	Argument	0		6307578	3					
ANR	6308201	PrimaryExpression	0		6307578	0					
ANR	6308202	ExpressionStatement	sym -> asm_label = asm_label	2948:4:68341:68367	6307578	1	True				
ANR	6308203	AssignmentExpression	sym -> asm_label = asm_label		6307578	0		=			
ANR	6308204	PtrMemberAccess	sym -> asm_label		6307578	0					
ANR	6308205	Identifier	sym		6307578	0					
ANR	6308206	Identifier	asm_label		6307578	1					
ANR	6308207	Identifier	asm_label		6307578	1					
ANR	6308208	ElseStatement	else		6307578	0					
ANR	6308209	CompoundStatement		142:3:3460:3479	6307578	0					
ANR	6308210	IdentifierDeclStatement	CValue cval = { 0 } ;	2951:3:68388:68407	6307578	0	True				
ANR	6308211	IdentifierDecl	cval = { 0 }		6307578	0					
ANR	6308212	IdentifierDeclType	CValue		6307578	0					
ANR	6308213	Identifier	cval		6307578	1					
ANR	6308214	AssignmentExpression	cval = { 0 }		6307578	2		=			
ANR	6308215	Identifier	cval		6307578	0					
ANR	6308216	InitializerList	0		6307578	1					
ANR	6308217	PrimaryExpression	0		6307578	0					
ANR	6308218	ExpressionStatement	"vsetc ( type , VT_CONST | VT_SYM , & cval )"	2952:3:68412:68450	6307578	1	True				
ANR	6308219	CallExpression	"vsetc ( type , VT_CONST | VT_SYM , & cval )"		6307578	0					
ANR	6308220	Callee	vsetc		6307578	0					
ANR	6308221	Identifier	vsetc		6307578	0					
ANR	6308222	ArgumentList	type		6307578	1					
ANR	6308223	Argument	type		6307578	0					
ANR	6308224	Identifier	type		6307578	0					
ANR	6308225	Argument	VT_CONST | VT_SYM		6307578	1					
ANR	6308226	InclusiveOrExpression	VT_CONST | VT_SYM		6307578	0		|			
ANR	6308227	Identifier	VT_CONST		6307578	0					
ANR	6308228	Identifier	VT_SYM		6307578	1					
ANR	6308229	Argument	& cval		6307578	2					
ANR	6308230	UnaryOperationExpression	& cval		6307578	0					
ANR	6308231	UnaryOperator	&		6307578	0					
ANR	6308232	Identifier	cval		6307578	1					
ANR	6308233	ExpressionStatement	vtop -> sym = sym	2953:3:68455:68470	6307578	2	True				
ANR	6308234	AssignmentExpression	vtop -> sym = sym		6307578	0		=			
ANR	6308235	PtrMemberAccess	vtop -> sym		6307578	0					
ANR	6308236	Identifier	vtop		6307578	0					
ANR	6308237	Identifier	sym		6307578	1					
ANR	6308238	Identifier	sym		6307578	1					
ANR	6308239	IfStatement	if ( ( type -> t & VT_WEAK ) && sym )		6307578	4					
ANR	6308240	Condition	( type -> t & VT_WEAK ) && sym	2956:6:68512:68537	6307578	0	True				
ANR	6308241	AndExpression	( type -> t & VT_WEAK ) && sym		6307578	0		&&			
ANR	6308242	BitAndExpression	type -> t & VT_WEAK		6307578	0		&			
ANR	6308243	PtrMemberAccess	type -> t		6307578	0					
ANR	6308244	Identifier	type		6307578	0					
ANR	6308245	Identifier	t		6307578	1					
ANR	6308246	Identifier	VT_WEAK		6307578	1					
ANR	6308247	Identifier	sym		6307578	1					
ANR	6308248	CompoundStatement		147:34:3612:3612	6307578	1					
ANR	6308249	ExpressionStatement	weaken_symbol ( sym )	2957:3:68545:68564	6307578	0	True				
ANR	6308250	CallExpression	weaken_symbol ( sym )		6307578	0					
ANR	6308251	Callee	weaken_symbol		6307578	0					
ANR	6308252	Identifier	weaken_symbol		6307578	0					
ANR	6308253	ArgumentList	sym		6307578	1					
ANR	6308254	Argument	sym		6307578	0					
ANR	6308255	Identifier	sym		6307578	0					
ANR	6308256	Label	no_alloc :	2960:0:68573:68581	6307578	13	True				
ANR	6308257	Identifier	no_alloc		6307578	0					
ANR	6308258	ExpressionStatement		2961:1:68584:68584	6307578	14	True				
ANR	6308259	ReturnType	static void		6307578	1					
ANR	6308260	Identifier	decl_initializer_alloc		6307578	2					
ANR	6308261	ParameterList	"CType * type , AttributeDef * ad , int r , int has_init , int v , char * asm_label , int scope"		6307578	3					
ANR	6308262	Parameter	CType * type	2810:35:64840:64850	6307578	0	True				
ANR	6308263	ParameterType	CType *		6307578	0					
ANR	6308264	Identifier	type		6307578	1					
ANR	6308265	Parameter	AttributeDef * ad	2810:48:64853:64868	6307578	1	True				
ANR	6308266	ParameterType	AttributeDef *		6307578	0					
ANR	6308267	Identifier	ad		6307578	1					
ANR	6308268	Parameter	int r	2810:66:64871:64875	6307578	2	True				
ANR	6308269	ParameterType	int		6307578	0					
ANR	6308270	Identifier	r		6307578	1					
ANR	6308271	Parameter	int has_init	2810:73:64878:64889	6307578	3	True				
ANR	6308272	ParameterType	int		6307578	0					
ANR	6308273	Identifier	has_init		6307578	1					
ANR	6308274	Parameter	int v	2810:87:64892:64896	6307578	4	True				
ANR	6308275	ParameterType	int		6307578	0					
ANR	6308276	Identifier	v		6307578	1					
ANR	6308277	Parameter	char * asm_label	2810:94:64899:64913	6307578	5	True				
ANR	6308278	ParameterType	char *		6307578	0					
ANR	6308279	Identifier	asm_label		6307578	1					
ANR	6308280	Parameter	int scope	2810:111:64916:64924	6307578	6	True				
ANR	6308281	ParameterType	int		6307578	0					
ANR	6308282	Identifier	scope		6307578	1					
ANR	6308283	CFGEntryNode	ENTRY		6307578		True				
ANR	6308284	CFGExitNode	EXIT		6307578		True				
ANR	6308285	Symbol	* * field		6307578						
ANR	6308286	Symbol	* flexible_array		6307578						
ANR	6308287	Symbol	type -> ref -> c		6307578						
ANR	6308288	Symbol	get_tok_str		6307578						
ANR	6308289	Symbol	init_str		6307578						
ANR	6308290	Symbol	* type -> ref		6307578						
ANR	6308291	Symbol	* flexible_array -> type . ref		6307578						
ANR	6308292	Symbol	sym -> type		6307578						
ANR	6308293	Symbol	& saved_parse_state		6307578						
ANR	6308294	Symbol	type		6307578						
ANR	6308295	Symbol	align		6307578						
ANR	6308296	Symbol	type_size		6307578						
ANR	6308297	Symbol	* * flexible_array		6307578						
ANR	6308298	Symbol	sym -> asm_label		6307578						
ANR	6308299	Symbol	vtop -> sym		6307578						
ANR	6308300	Symbol	sym -> type . ref -> c		6307578						
ANR	6308301	Symbol	flexible_array -> type . ref -> c		6307578						
ANR	6308302	Symbol	* * sym		6307578						
ANR	6308303	Symbol	saved_parse_state		6307578						
ANR	6308304	Symbol	* sym -> type . ref		6307578						
ANR	6308305	Symbol	VT_CONST		6307578						
ANR	6308306	Symbol	init_str . str		6307578						
ANR	6308307	Symbol	ad		6307578						
ANR	6308308	Symbol	NULL		6307578						
ANR	6308309	Symbol	level		6307578						
ANR	6308310	Symbol	TOK_STR		6307578						
ANR	6308311	Symbol	vtop		6307578						
ANR	6308312	Symbol	VT_VALMASK		6307578						
ANR	6308313	Symbol	VT_LOCAL		6307578						
ANR	6308314	Symbol	VT_SYM		6307578						
ANR	6308315	Symbol	* field		6307578						
ANR	6308316	Symbol	& flexible_array -> type		6307578						
ANR	6308317	Symbol	field -> type . t		6307578						
ANR	6308318	Symbol	tcc_nerr		6307578						
ANR	6308319	Symbol	* flexible_array -> type		6307578						
ANR	6308320	Symbol	~VT_EXTERN		6307578						
ANR	6308321	Symbol	* sym		6307578						
ANR	6308322	Symbol	* field -> type		6307578						
ANR	6308323	Symbol	size		6307578						
ANR	6308324	Symbol	field		6307578						
ANR	6308325	Symbol	macro_ptr		6307578						
ANR	6308326	Symbol	* field -> type . ref		6307578						
ANR	6308327	Symbol	type -> t		6307578						
ANR	6308328	Symbol	field -> type . ref -> c		6307578						
ANR	6308329	Symbol	TOK_LSTR		6307578						
ANR	6308330	Symbol	field -> next		6307578						
ANR	6308331	Symbol	loc		6307578						
ANR	6308332	Symbol	field -> type		6307578						
ANR	6308333	Symbol	& init_str		6307578						
ANR	6308334	Symbol	ad -> packed		6307578						
ANR	6308335	Symbol	sym		6307578						
ANR	6308336	Symbol	sym -> type . ref		6307578						
ANR	6308337	Symbol	pointed_size		6307578						
ANR	6308338	Symbol	* ad		6307578						
ANR	6308339	Symbol	VT_WEAK		6307578						
ANR	6308340	Symbol	VT_EXTERN		6307578						
ANR	6308341	Symbol	tok		6307578						
ANR	6308342	Symbol	& cval		6307578						
ANR	6308343	Symbol	ad -> aligned		6307578						
ANR	6308344	Symbol	is_compatible_types		6307578						
ANR	6308345	Symbol	* type		6307578						
ANR	6308346	Symbol	sym_find		6307578						
ANR	6308347	Symbol	scope		6307578						
ANR	6308348	Symbol	& sym -> type		6307578						
ANR	6308349	Symbol	sym -> type . t		6307578						
ANR	6308350	Symbol	* sym -> type		6307578						
ANR	6308351	Symbol	& align		6307578						
ANR	6308352	Symbol	flexible_array		6307578						
ANR	6308353	Symbol	addr		6307578						
ANR	6308354	Symbol	type -> ref		6307578						
ANR	6308355	Symbol	field -> type . ref		6307578						
ANR	6308356	Symbol	asm_label		6307578						
ANR	6308357	Symbol	flexible_array -> type . ref		6307578						
ANR	6308358	Symbol	cval		6307578						
ANR	6308359	Symbol	* vtop		6307578						
ANR	6308360	Symbol	r		6307578						
ANR	6308361	Symbol	is_struct		6307578						
ANR	6308362	Symbol	has_init		6307578						
ANR	6308363	Symbol	v		6307578						
ANR	6308364	Symbol	sym_push		6307578						
ANR	6308365	Symbol	flexible_array -> type		6307578						
ANR	6308366	Symbol	* * type		6307578						
ANR	6308367	Symbol	VT_ARRAY		6307578						
ANR	6308368	Function	func_decl_list	2966:0:68676:70045							
ANR	6308369	FunctionDef	func_decl_list (Sym * func_sym)		6308368	0					
ANR	6308370	CompoundStatement		2966:42:68718:70045	6308368	0					
ANR	6308371	IdentifierDeclStatement	AttributeDef ad ;	2967:1:68721:68736	6308368	0	True				
ANR	6308372	IdentifierDecl	ad		6308368	0					
ANR	6308373	IdentifierDeclType	AttributeDef		6308368	0					
ANR	6308374	Identifier	ad		6308368	1					
ANR	6308375	IdentifierDeclStatement	int v ;	2968:1:68739:68744	6308368	1	True				
ANR	6308376	IdentifierDecl	v		6308368	0					
ANR	6308377	IdentifierDeclType	int		6308368	0					
ANR	6308378	Identifier	v		6308368	1					
ANR	6308379	IdentifierDeclStatement	Sym * s = NULL ;	2969:1:68747:68760	6308368	2	True				
ANR	6308380	IdentifierDecl	* s = NULL		6308368	0					
ANR	6308381	IdentifierDeclType	Sym *		6308368	0					
ANR	6308382	Identifier	s		6308368	1					
ANR	6308383	AssignmentExpression	* s = NULL		6308368	2		=			
ANR	6308384	Identifier	NULL		6308368	0					
ANR	6308385	Identifier	NULL		6308368	1					
ANR	6308386	IdentifierDeclStatement	"CType btype , type ;"	2970:1:68763:68780	6308368	3	True				
ANR	6308387	IdentifierDecl	btype		6308368	0					
ANR	6308388	IdentifierDeclType	CType		6308368	0					
ANR	6308389	Identifier	btype		6308368	1					
ANR	6308390	IdentifierDecl	type		6308368	1					
ANR	6308391	IdentifierDeclType	CType		6308368	0					
ANR	6308392	Identifier	type		6308368	1					
ANR	6308393	WhileStatement	"while ( tcc_nerr ( ) == 0 && tok != '{' && tok != ';' && tok != ',' && tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3 )"		6308368	4					
ANR	6308394	Condition	"tcc_nerr ( ) == 0 && tok != '{' && tok != ';' && tok != ',' && tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3"	2973:8:68821:68961	6308368	0	True				
ANR	6308395	AndExpression	"tcc_nerr ( ) == 0 && tok != '{' && tok != ';' && tok != ',' && tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3"		6308368	0		&&			
ANR	6308396	EqualityExpression	tcc_nerr ( ) == 0		6308368	0		==			
ANR	6308397	CallExpression	tcc_nerr ( )		6308368	0					
ANR	6308398	Callee	tcc_nerr		6308368	0					
ANR	6308399	Identifier	tcc_nerr		6308368	0					
ANR	6308400	ArgumentList			6308368	1					
ANR	6308401	PrimaryExpression	0		6308368	1					
ANR	6308402	AndExpression	"tok != '{' && tok != ';' && tok != ',' && tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3"		6308368	1		&&			
ANR	6308403	EqualityExpression	tok != '{'		6308368	0		!=			
ANR	6308404	Identifier	tok		6308368	0					
ANR	6308405	PrimaryExpression	'{'		6308368	1					
ANR	6308406	AndExpression	"tok != ';' && tok != ',' && tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3"		6308368	1		&&			
ANR	6308407	EqualityExpression	tok != ';'		6308368	0		!=			
ANR	6308408	Identifier	tok		6308368	0					
ANR	6308409	PrimaryExpression	';'		6308368	1					
ANR	6308410	AndExpression	"tok != ',' && tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3"		6308368	1		&&			
ANR	6308411	EqualityExpression	"tok != ','"		6308368	0		!=			
ANR	6308412	Identifier	tok		6308368	0					
ANR	6308413	PrimaryExpression	"','"		6308368	1					
ANR	6308414	AndExpression	tok != TOK_EOF && tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3		6308368	1		&&			
ANR	6308415	EqualityExpression	tok != TOK_EOF		6308368	0		!=			
ANR	6308416	Identifier	tok		6308368	0					
ANR	6308417	Identifier	TOK_EOF		6308368	1					
ANR	6308418	AndExpression	tok != TOK_ASM1 && tok != TOK_ASM2 && tok != TOK_ASM3		6308368	1		&&			
ANR	6308419	EqualityExpression	tok != TOK_ASM1		6308368	0		!=			
ANR	6308420	Identifier	tok		6308368	0					
ANR	6308421	Identifier	TOK_ASM1		6308368	1					
ANR	6308422	AndExpression	tok != TOK_ASM2 && tok != TOK_ASM3		6308368	1		&&			
ANR	6308423	EqualityExpression	tok != TOK_ASM2		6308368	0		!=			
ANR	6308424	Identifier	tok		6308368	0					
ANR	6308425	Identifier	TOK_ASM2		6308368	1					
ANR	6308426	EqualityExpression	tok != TOK_ASM3		6308368	1		!=			
ANR	6308427	Identifier	tok		6308368	0					
ANR	6308428	Identifier	TOK_ASM3		6308368	1					
ANR	6308429	CompoundStatement		9:63:245:245	6308368	1					
ANR	6308430	IfStatement	"if ( ! parse_btype ( & btype , & ad ) )"		6308368	0					
ANR	6308431	Condition	"! parse_btype ( & btype , & ad )"	2975:6:68972:68997	6308368	0	True				
ANR	6308432	UnaryOperationExpression	"! parse_btype ( & btype , & ad )"		6308368	0					
ANR	6308433	UnaryOperator	!		6308368	0					
ANR	6308434	CallExpression	"parse_btype ( & btype , & ad )"		6308368	1					
ANR	6308435	Callee	parse_btype		6308368	0					
ANR	6308436	Identifier	parse_btype		6308368	0					
ANR	6308437	ArgumentList	& btype		6308368	1					
ANR	6308438	Argument	& btype		6308368	0					
ANR	6308439	UnaryOperationExpression	& btype		6308368	0					
ANR	6308440	UnaryOperator	&		6308368	0					
ANR	6308441	Identifier	btype		6308368	1					
ANR	6308442	Argument	& ad		6308368	1					
ANR	6308443	UnaryOperationExpression	& ad		6308368	0					
ANR	6308444	UnaryOperator	&		6308368	0					
ANR	6308445	Identifier	ad		6308368	1					
ANR	6308446	CompoundStatement		10:34:281:281	6308368	1					
ANR	6308447	ExpressionStatement	"expect ( ""declaration list"" )"	2976:3:69005:69032	6308368	0	True				
ANR	6308448	CallExpression	"expect ( ""declaration list"" )"		6308368	0					
ANR	6308449	Callee	expect		6308368	0					
ANR	6308450	Identifier	expect		6308368	0					
ANR	6308451	ArgumentList	"""declaration list"""		6308368	1					
ANR	6308452	Argument	"""declaration list"""		6308368	0					
ANR	6308453	PrimaryExpression	"""declaration list"""		6308368	0					
ANR	6308454	IfStatement	if ( ( is_enum ( & btype ) || is_structured ( & btype ) ) && tok == ';' )		6308368	1					
ANR	6308455	Condition	( is_enum ( & btype ) || is_structured ( & btype ) ) && tok == ';'	2978:6:69044:69099	6308368	0	True				
ANR	6308456	AndExpression	( is_enum ( & btype ) || is_structured ( & btype ) ) && tok == ';'		6308368	0		&&			
ANR	6308457	OrExpression	is_enum ( & btype ) || is_structured ( & btype )		6308368	0		||			
ANR	6308458	CallExpression	is_enum ( & btype )		6308368	0					
ANR	6308459	Callee	is_enum		6308368	0					
ANR	6308460	Identifier	is_enum		6308368	0					
ANR	6308461	ArgumentList	& btype		6308368	1					
ANR	6308462	Argument	& btype		6308368	0					
ANR	6308463	UnaryOperationExpression	& btype		6308368	0					
ANR	6308464	UnaryOperator	&		6308368	0					
ANR	6308465	Identifier	btype		6308368	1					
ANR	6308466	CallExpression	is_structured ( & btype )		6308368	1					
ANR	6308467	Callee	is_structured		6308368	0					
ANR	6308468	Identifier	is_structured		6308368	0					
ANR	6308469	ArgumentList	& btype		6308368	1					
ANR	6308470	Argument	& btype		6308368	0					
ANR	6308471	UnaryOperationExpression	& btype		6308368	0					
ANR	6308472	UnaryOperator	&		6308368	0					
ANR	6308473	Identifier	btype		6308368	1					
ANR	6308474	EqualityExpression	tok == ';'		6308368	1		==			
ANR	6308475	Identifier	tok		6308368	0					
ANR	6308476	PrimaryExpression	';'		6308368	1					
ANR	6308477	CompoundStatement		13:64:383:383	6308368	1					
ANR	6308478	ElseStatement	else		6308368	0					
ANR	6308479	CompoundStatement		15:9:431:431	6308368	0					
ANR	6308480	WhileStatement	while ( tcc_nerr ( ) == 0 )		6308368	0					
ANR	6308481	Condition	tcc_nerr ( ) == 0	2981:10:69162:69177	6308368	0	True				
ANR	6308482	EqualityExpression	tcc_nerr ( ) == 0		6308368	0		==			
ANR	6308483	CallExpression	tcc_nerr ( )		6308368	0					
ANR	6308484	Callee	tcc_nerr		6308368	0					
ANR	6308485	Identifier	tcc_nerr		6308368	0					
ANR	6308486	ArgumentList			6308368	1					
ANR	6308487	PrimaryExpression	0		6308368	1					
ANR	6308488	CompoundStatement		17:4:467:476	6308368	1					
ANR	6308489	IdentifierDeclStatement	int found ;	2982:4:69186:69195	6308368	0	True				
ANR	6308490	IdentifierDecl	found		6308368	0					
ANR	6308491	IdentifierDeclType	int		6308368	0					
ANR	6308492	Identifier	found		6308368	1					
ANR	6308493	ExpressionStatement	type = btype	2983:4:69201:69213	6308368	1	True				
ANR	6308494	AssignmentExpression	type = btype		6308368	0		=			
ANR	6308495	Identifier	type		6308368	0					
ANR	6308496	Identifier	btype		6308368	1					
ANR	6308497	ExpressionStatement	"type_decl ( & type , & ad , & v , TYPE_DIRECT )"	2984:4:69219:69258	6308368	2	True				
ANR	6308498	CallExpression	"type_decl ( & type , & ad , & v , TYPE_DIRECT )"		6308368	0					
ANR	6308499	Callee	type_decl		6308368	0					
ANR	6308500	Identifier	type_decl		6308368	0					
ANR	6308501	ArgumentList	& type		6308368	1					
ANR	6308502	Argument	& type		6308368	0					
ANR	6308503	UnaryOperationExpression	& type		6308368	0					
ANR	6308504	UnaryOperator	&		6308368	0					
ANR	6308505	Identifier	type		6308368	1					
ANR	6308506	Argument	& ad		6308368	1					
ANR	6308507	UnaryOperationExpression	& ad		6308368	0					
ANR	6308508	UnaryOperator	&		6308368	0					
ANR	6308509	Identifier	ad		6308368	1					
ANR	6308510	Argument	& v		6308368	2					
ANR	6308511	UnaryOperationExpression	& v		6308368	0					
ANR	6308512	UnaryOperator	&		6308368	0					
ANR	6308513	Identifier	v		6308368	1					
ANR	6308514	Argument	TYPE_DIRECT		6308368	3					
ANR	6308515	Identifier	TYPE_DIRECT		6308368	0					
ANR	6308516	ExpressionStatement	s = func_sym	2986:4:69316:69328	6308368	3	True				
ANR	6308517	AssignmentExpression	s = func_sym		6308368	0		=			
ANR	6308518	Identifier	s		6308368	0					
ANR	6308519	Identifier	func_sym		6308368	1					
ANR	6308520	ExpressionStatement	found = 0	2987:4:69334:69343	6308368	4	True				
ANR	6308521	AssignmentExpression	found = 0		6308368	0		=			
ANR	6308522	Identifier	found		6308368	0					
ANR	6308523	PrimaryExpression	0		6308368	1					
ANR	6308524	WhileStatement	while ( ( s = s -> next ) != NULL )		6308368	5					
ANR	6308525	Condition	( s = s -> next ) != NULL	2988:11:69356:69376	6308368	0	True				
ANR	6308526	EqualityExpression	( s = s -> next ) != NULL		6308368	0		!=			
ANR	6308527	AssignmentExpression	s = s -> next		6308368	0		=			
ANR	6308528	Identifier	s		6308368	0					
ANR	6308529	PtrMemberAccess	s -> next		6308368	1					
ANR	6308530	Identifier	s		6308368	0					
ANR	6308531	Identifier	next		6308368	1					
ANR	6308532	Identifier	NULL		6308368	1					
ANR	6308533	CompoundStatement		23:34:660:660	6308368	1					
ANR	6308534	IfStatement	if ( ( s -> v & ~SYM_FIELD ) == v )		6308368	0					
ANR	6308535	Condition	( s -> v & ~SYM_FIELD ) == v	2989:9:69390:69413	6308368	0	True				
ANR	6308536	EqualityExpression	( s -> v & ~SYM_FIELD ) == v		6308368	0		==			
ANR	6308537	BitAndExpression	s -> v & ~SYM_FIELD		6308368	0		&			
ANR	6308538	PtrMemberAccess	s -> v		6308368	0					
ANR	6308539	Identifier	s		6308368	0					
ANR	6308540	Identifier	v		6308368	1					
ANR	6308541	Identifier	~SYM_FIELD		6308368	1					
ANR	6308542	Identifier	v		6308368	1					
ANR	6308543	CompoundStatement		24:35:697:697	6308368	1					
ANR	6308544	ExpressionStatement	found = 1	2990:6:69424:69433	6308368	0	True				
ANR	6308545	AssignmentExpression	found = 1		6308368	0		=			
ANR	6308546	Identifier	found		6308368	0					
ANR	6308547	PrimaryExpression	1		6308368	1					
ANR	6308548	BreakStatement	break ;	2991:6:69441:69446	6308368	1	True				
ANR	6308549	IfStatement	if ( found == 0 )		6308368	6					
ANR	6308550	Condition	found == 0	2994:8:69469:69478	6308368	0	True				
ANR	6308551	EqualityExpression	found == 0		6308368	0		==			
ANR	6308552	Identifier	found		6308368	0					
ANR	6308553	PrimaryExpression	0		6308368	1					
ANR	6308554	CompoundStatement		29:20:762:762	6308368	1					
ANR	6308555	ExpressionStatement	"TCC_ERR ( ""declaration for parameter '%s' but no such parameter"" , get_tok_str ( v , NULL ) )"	2995:5:69488:69581	6308368	0	True				
ANR	6308556	CallExpression	"TCC_ERR ( ""declaration for parameter '%s' but no such parameter"" , get_tok_str ( v , NULL ) )"		6308368	0					
ANR	6308557	Callee	TCC_ERR		6308368	0					
ANR	6308558	Identifier	TCC_ERR		6308368	0					
ANR	6308559	ArgumentList	"""declaration for parameter '%s' but no such parameter"""		6308368	1					
ANR	6308560	Argument	"""declaration for parameter '%s' but no such parameter"""		6308368	0					
ANR	6308561	PrimaryExpression	"""declaration for parameter '%s' but no such parameter"""		6308368	0					
ANR	6308562	Argument	"get_tok_str ( v , NULL )"		6308368	1					
ANR	6308563	CallExpression	"get_tok_str ( v , NULL )"		6308368	0					
ANR	6308564	Callee	get_tok_str		6308368	0					
ANR	6308565	Identifier	get_tok_str		6308368	0					
ANR	6308566	ArgumentList	v		6308368	1					
ANR	6308567	Argument	v		6308368	0					
ANR	6308568	Identifier	v		6308368	0					
ANR	6308569	Argument	NULL		6308368	1					
ANR	6308570	Identifier	NULL		6308368	0					
ANR	6308571	IfStatement	if ( type . t & VT_STORAGE )		6308368	7					
ANR	6308572	Condition	type . t & VT_STORAGE	2999:8:69667:69685	6308368	0	True				
ANR	6308573	BitAndExpression	type . t & VT_STORAGE		6308368	0		&			
ANR	6308574	MemberAccess	type . t		6308368	0					
ANR	6308575	Identifier	type		6308368	0					
ANR	6308576	Identifier	t		6308368	1					
ANR	6308577	Identifier	VT_STORAGE		6308368	1					
ANR	6308578	CompoundStatement		34:29:969:969	6308368	1					
ANR	6308579	ExpressionStatement	"TCC_ERR ( ""storage class specified for '%s'"" , get_tok_str ( v , NULL ) )"	3000:5:69695:69762	6308368	0	True				
ANR	6308580	CallExpression	"TCC_ERR ( ""storage class specified for '%s'"" , get_tok_str ( v , NULL ) )"		6308368	0					
ANR	6308581	Callee	TCC_ERR		6308368	0					
ANR	6308582	Identifier	TCC_ERR		6308368	0					
ANR	6308583	ArgumentList	"""storage class specified for '%s'"""		6308368	1					
ANR	6308584	Argument	"""storage class specified for '%s'"""		6308368	0					
ANR	6308585	PrimaryExpression	"""storage class specified for '%s'"""		6308368	0					
ANR	6308586	Argument	"get_tok_str ( v , NULL )"		6308368	1					
ANR	6308587	CallExpression	"get_tok_str ( v , NULL )"		6308368	0					
ANR	6308588	Callee	get_tok_str		6308368	0					
ANR	6308589	Identifier	get_tok_str		6308368	0					
ANR	6308590	ArgumentList	v		6308368	1					
ANR	6308591	Argument	v		6308368	0					
ANR	6308592	Identifier	v		6308368	0					
ANR	6308593	Argument	NULL		6308368	1					
ANR	6308594	Identifier	NULL		6308368	0					
ANR	6308595	ExpressionStatement	convert_parameter_type ( & type )	3002:4:69774:69804	6308368	8	True				
ANR	6308596	CallExpression	convert_parameter_type ( & type )		6308368	0					
ANR	6308597	Callee	convert_parameter_type		6308368	0					
ANR	6308598	Identifier	convert_parameter_type		6308368	0					
ANR	6308599	ArgumentList	& type		6308368	1					
ANR	6308600	Argument	& type		6308368	0					
ANR	6308601	UnaryOperationExpression	& type		6308368	0					
ANR	6308602	UnaryOperator	&		6308368	0					
ANR	6308603	Identifier	type		6308368	1					
ANR	6308604	IfStatement	if ( s )		6308368	9					
ANR	6308605	Condition	s	3004:8:69886:69886	6308368	0	True				
ANR	6308606	Identifier	s		6308368	0					
ANR	6308607	CompoundStatement		39:11:1170:1170	6308368	1					
ANR	6308608	ExpressionStatement	s -> type = type	3005:5:69896:69910	6308368	0	True				
ANR	6308609	AssignmentExpression	s -> type = type		6308368	0		=			
ANR	6308610	PtrMemberAccess	s -> type		6308368	0					
ANR	6308611	Identifier	s		6308368	0					
ANR	6308612	Identifier	type		6308368	1					
ANR	6308613	Identifier	type		6308368	1					
ANR	6308614	IfStatement	"if ( tok == ',' )"		6308368	10					
ANR	6308615	Condition	"tok == ','"	3008:8:69960:69969	6308368	0	True				
ANR	6308616	EqualityExpression	"tok == ','"		6308368	0		==			
ANR	6308617	Identifier	tok		6308368	0					
ANR	6308618	PrimaryExpression	"','"		6308368	1					
ANR	6308619	CompoundStatement		43:20:1253:1253	6308368	1					
ANR	6308620	ExpressionStatement	next ( )	3009:5:69979:69986	6308368	0	True				
ANR	6308621	CallExpression	next ( )		6308368	0					
ANR	6308622	Callee	next		6308368	0					
ANR	6308623	Identifier	next		6308368	0					
ANR	6308624	ArgumentList			6308368	1					
ANR	6308625	ElseStatement	else		6308368	0					
ANR	6308626	CompoundStatement		45:11:1280:1280	6308368	0					
ANR	6308627	BreakStatement	break ;	3011:5:70006:70011	6308368	0	True				
ANR	6308628	ExpressionStatement	skip ( ';' )	3015:2:70030:70040	6308368	2	True				
ANR	6308629	CallExpression	skip ( ';' )		6308368	0					
ANR	6308630	Callee	skip		6308368	0					
ANR	6308631	Identifier	skip		6308368	0					
ANR	6308632	ArgumentList	';'		6308368	1					
ANR	6308633	Argument	';'		6308368	0					
ANR	6308634	PrimaryExpression	';'		6308368	0					
ANR	6308635	ReturnType	static void		6308368	1					
ANR	6308636	Identifier	func_decl_list		6308368	2					
ANR	6308637	ParameterList	Sym * func_sym		6308368	3					
ANR	6308638	Parameter	Sym * func_sym	2966:27:68703:68715	6308368	0	True				
ANR	6308639	ParameterType	Sym *		6308368	0					
ANR	6308640	Identifier	func_sym		6308368	1					
ANR	6308641	CFGEntryNode	ENTRY		6308368		True				
ANR	6308642	CFGExitNode	EXIT		6308368		True				
ANR	6308643	Symbol	& btype		6308368						
ANR	6308644	Symbol	s -> v		6308368						
ANR	6308645	Symbol	get_tok_str		6308368						
ANR	6308646	Symbol	TYPE_DIRECT		6308368						
ANR	6308647	Symbol	btype		6308368						
ANR	6308648	Symbol	func_sym		6308368						
ANR	6308649	Symbol	s -> next		6308368						
ANR	6308650	Symbol	type . t		6308368						
ANR	6308651	Symbol	type		6308368						
ANR	6308652	Symbol	& ad		6308368						
ANR	6308653	Symbol	tok		6308368						
ANR	6308654	Symbol	found		6308368						
ANR	6308655	Symbol	parse_btype		6308368						
ANR	6308656	Symbol	ad		6308368						
ANR	6308657	Symbol	NULL		6308368						
ANR	6308658	Symbol	is_enum		6308368						
ANR	6308659	Symbol	TOK_ASM3		6308368						
ANR	6308660	Symbol	TOK_ASM2		6308368						
ANR	6308661	Symbol	& type		6308368						
ANR	6308662	Symbol	TOK_ASM1		6308368						
ANR	6308663	Symbol	TOK_EOF		6308368						
ANR	6308664	Symbol	tcc_nerr		6308368						
ANR	6308665	Symbol	VT_STORAGE		6308368						
ANR	6308666	Symbol	s		6308368						
ANR	6308667	Symbol	~SYM_FIELD		6308368						
ANR	6308668	Symbol	v		6308368						
ANR	6308669	Symbol	is_structured		6308368						
ANR	6308670	Symbol	& v		6308368						
ANR	6308671	Symbol	* s		6308368						
ANR	6308672	Symbol	s -> type		6308368						
ANR	6308673	Function	decl0	3020:0:70113:74815							
ANR	6308674	FunctionDef	"decl0 (int l , int is_for_loop_init)"		6308673	0					
ANR	6308675	CompoundStatement		3020:46:70159:74815	6308673	0					
ANR	6308676	IdentifierDeclStatement	"int v , has_init , r ;"	3021:1:70162:70180	6308673	0	True				
ANR	6308677	IdentifierDecl	v		6308673	0					
ANR	6308678	IdentifierDeclType	int		6308673	0					
ANR	6308679	Identifier	v		6308673	1					
ANR	6308680	IdentifierDecl	has_init		6308673	1					
ANR	6308681	IdentifierDeclType	int		6308673	0					
ANR	6308682	Identifier	has_init		6308673	1					
ANR	6308683	IdentifierDecl	r		6308673	2					
ANR	6308684	IdentifierDeclType	int		6308673	0					
ANR	6308685	Identifier	r		6308673	1					
ANR	6308686	Statement	CType	3022:1:70183:70187	6308673	1	True				
ANR	6308687	Statement	type	3022:7:70189:70192	6308673	2	True				
ANR	6308688	Statement	=	3022:12:70194:70194	6308673	3	True				
ANR	6308689	CompoundStatement		3:14:36:36	6308673	4					
ANR	6308690	Statement	.	3022:15:70197:70197	6308673	0	True				
ANR	6308691	Statement	t	3022:16:70198:70198	6308673	1	True				
ANR	6308692	Statement	=	3022:18:70200:70200	6308673	2	True				
ANR	6308693	Statement	0	3022:20:70202:70202	6308673	3	True				
ANR	6308694	Statement	","	3022:21:70203:70203	6308673	4	True				
ANR	6308695	Statement	.	3022:23:70205:70205	6308673	5	True				
ANR	6308696	Statement	ref	3022:24:70206:70208	6308673	6	True				
ANR	6308697	Statement	=	3022:28:70210:70210	6308673	7	True				
ANR	6308698	Statement	NULL	3022:30:70212:70215	6308673	8	True				
ANR	6308699	Statement	","	3022:35:70217:70217	6308673	5	True				
ANR	6308700	Statement	btype	3022:37:70219:70223	6308673	6	True				
ANR	6308701	Statement	=	3022:43:70225:70225	6308673	7	True				
ANR	6308702	CompoundStatement		3:45:67:67	6308673	8					
ANR	6308703	Statement	.	3022:46:70228:70228	6308673	0	True				
ANR	6308704	Statement	t	3022:47:70229:70229	6308673	1	True				
ANR	6308705	Statement	=	3022:49:70231:70231	6308673	2	True				
ANR	6308706	Statement	0	3022:51:70233:70233	6308673	3	True				
ANR	6308707	Statement	","	3022:52:70234:70234	6308673	4	True				
ANR	6308708	Statement	.	3022:54:70236:70236	6308673	5	True				
ANR	6308709	Statement	ref	3022:55:70237:70239	6308673	6	True				
ANR	6308710	Statement	=	3022:59:70241:70241	6308673	7	True				
ANR	6308711	Statement	NULL	3022:61:70243:70246	6308673	8	True				
ANR	6308712	ExpressionStatement		3022:66:70248:70248	6308673	9	True				
ANR	6308713	IdentifierDeclStatement	Sym * sym = NULL ;	3023:1:70251:70266	6308673	10	True				
ANR	6308714	IdentifierDecl	* sym = NULL		6308673	0					
ANR	6308715	IdentifierDeclType	Sym *		6308673	0					
ANR	6308716	Identifier	sym		6308673	1					
ANR	6308717	AssignmentExpression	* sym = NULL		6308673	2		=			
ANR	6308718	Identifier	NULL		6308673	0					
ANR	6308719	Identifier	NULL		6308673	1					
ANR	6308720	IdentifierDeclStatement	AttributeDef ad ;	3024:1:70269:70284	6308673	11	True				
ANR	6308721	IdentifierDecl	ad		6308673	0					
ANR	6308722	IdentifierDeclType	AttributeDef		6308673	0					
ANR	6308723	Identifier	ad		6308673	1					
ANR	6308724	WhileStatement	while ( tcc_nerr ( ) == 0 )		6308673	12					
ANR	6308725	Condition	tcc_nerr ( ) == 0	3026:8:70295:70310	6308673	0	True				
ANR	6308726	EqualityExpression	tcc_nerr ( ) == 0		6308673	0		==			
ANR	6308727	CallExpression	tcc_nerr ( )		6308673	0					
ANR	6308728	Callee	tcc_nerr		6308673	0					
ANR	6308729	Identifier	tcc_nerr		6308673	0					
ANR	6308730	ArgumentList			6308673	1					
ANR	6308731	PrimaryExpression	0		6308673	1					
ANR	6308732	CompoundStatement		7:26:153:153	6308673	1					
ANR	6308733	IfStatement	"if ( ! parse_btype ( & btype , & ad ) )"		6308673	0					
ANR	6308734	Condition	"! parse_btype ( & btype , & ad )"	3027:6:70321:70346	6308673	0	True				
ANR	6308735	UnaryOperationExpression	"! parse_btype ( & btype , & ad )"		6308673	0					
ANR	6308736	UnaryOperator	!		6308673	0					
ANR	6308737	CallExpression	"parse_btype ( & btype , & ad )"		6308673	1					
ANR	6308738	Callee	parse_btype		6308673	0					
ANR	6308739	Identifier	parse_btype		6308673	0					
ANR	6308740	ArgumentList	& btype		6308673	1					
ANR	6308741	Argument	& btype		6308673	0					
ANR	6308742	UnaryOperationExpression	& btype		6308673	0					
ANR	6308743	UnaryOperator	&		6308673	0					
ANR	6308744	Identifier	btype		6308673	1					
ANR	6308745	Argument	& ad		6308673	1					
ANR	6308746	UnaryOperationExpression	& ad		6308673	0					
ANR	6308747	UnaryOperator	&		6308673	0					
ANR	6308748	Identifier	ad		6308673	1					
ANR	6308749	CompoundStatement		8:34:189:189	6308673	1					
ANR	6308750	IfStatement	if ( is_for_loop_init )		6308673	0					
ANR	6308751	Condition	is_for_loop_init	3028:7:70358:70373	6308673	0	True				
ANR	6308752	Identifier	is_for_loop_init		6308673	0					
ANR	6308753	CompoundStatement		9:25:216:216	6308673	1					
ANR	6308754	ReturnStatement	return 0 ;	3029:4:70382:70390	6308673	0	True				
ANR	6308755	PrimaryExpression	0		6308673	0					
ANR	6308756	IfStatement	if ( tok == ';' )		6308673	1					
ANR	6308757	Condition	tok == ';'	3033:7:70473:70482	6308673	0	True				
ANR	6308758	EqualityExpression	tok == ';'		6308673	0		==			
ANR	6308759	Identifier	tok		6308673	0					
ANR	6308760	PrimaryExpression	';'		6308673	1					
ANR	6308761	CompoundStatement		14:19:325:325	6308673	1					
ANR	6308762	ExpressionStatement	next ( )	3034:4:70491:70498	6308673	0	True				
ANR	6308763	CallExpression	next ( )		6308673	0					
ANR	6308764	Callee	next		6308673	0					
ANR	6308765	Identifier	next		6308673	0					
ANR	6308766	ArgumentList			6308673	1					
ANR	6308767	ContinueStatement	continue ;	3035:4:70504:70512	6308673	1	True				
ANR	6308768	IfStatement	if ( l == VT_CONST && ( tok == TOK_ASM1 || tok == TOK_ASM2 || tok == TOK_ASM3 ) )		6308673	2					
ANR	6308769	Condition	l == VT_CONST && ( tok == TOK_ASM1 || tok == TOK_ASM2 || tok == TOK_ASM3 )	3037:7:70526:70604	6308673	0	True				
ANR	6308770	AndExpression	l == VT_CONST && ( tok == TOK_ASM1 || tok == TOK_ASM2 || tok == TOK_ASM3 )		6308673	0		&&			
ANR	6308771	EqualityExpression	l == VT_CONST		6308673	0		==			
ANR	6308772	Identifier	l		6308673	0					
ANR	6308773	Identifier	VT_CONST		6308673	1					
ANR	6308774	OrExpression	tok == TOK_ASM1 || tok == TOK_ASM2 || tok == TOK_ASM3		6308673	1		||			
ANR	6308775	EqualityExpression	tok == TOK_ASM1		6308673	0		==			
ANR	6308776	Identifier	tok		6308673	0					
ANR	6308777	Identifier	TOK_ASM1		6308673	1					
ANR	6308778	OrExpression	tok == TOK_ASM2 || tok == TOK_ASM3		6308673	1		||			
ANR	6308779	EqualityExpression	tok == TOK_ASM2		6308673	0		==			
ANR	6308780	Identifier	tok		6308673	0					
ANR	6308781	Identifier	TOK_ASM2		6308673	1					
ANR	6308782	EqualityExpression	tok == TOK_ASM3		6308673	1		==			
ANR	6308783	Identifier	tok		6308673	0					
ANR	6308784	Identifier	TOK_ASM3		6308673	1					
ANR	6308785	CompoundStatement		19:64:447:447	6308673	1					
ANR	6308786	ExpressionStatement	"eprintf ( ""global asm not supported\\n"" )"	3041:4:70646:70684	6308673	0	True				
ANR	6308787	CallExpression	"eprintf ( ""global asm not supported\\n"" )"		6308673	0					
ANR	6308788	Callee	eprintf		6308673	0					
ANR	6308789	Identifier	eprintf		6308673	0					
ANR	6308790	ArgumentList	"""global asm not supported\\n"""		6308673	1					
ANR	6308791	Argument	"""global asm not supported\\n"""		6308673	0					
ANR	6308792	PrimaryExpression	"""global asm not supported\\n"""		6308673	0					
ANR	6308793	ReturnStatement	return 1 ;	3042:4:70690:70698	6308673	1	True				
ANR	6308794	PrimaryExpression	1		6308673	0					
ANR	6308795	ContinueStatement	continue ;	3045:4:70738:70746	6308673	2	True				
ANR	6308796	IfStatement	if ( l == VT_LOCAL || tok < TOK_DEFINE )		6308673	3					
ANR	6308797	Condition	l == VT_LOCAL || tok < TOK_DEFINE	3049:7:70874:70906	6308673	0	True				
ANR	6308798	OrExpression	l == VT_LOCAL || tok < TOK_DEFINE		6308673	0		||			
ANR	6308799	EqualityExpression	l == VT_LOCAL		6308673	0		==			
ANR	6308800	Identifier	l		6308673	0					
ANR	6308801	Identifier	VT_LOCAL		6308673	1					
ANR	6308802	RelationalExpression	tok < TOK_DEFINE		6308673	1		<			
ANR	6308803	Identifier	tok		6308673	0					
ANR	6308804	Identifier	TOK_DEFINE		6308673	1					
ANR	6308805	CompoundStatement		30:42:749:749	6308673	1					
ANR	6308806	BreakStatement	break ;	3050:4:70915:70920	6308673	0	True				
ANR	6308807	ExpressionStatement	btype . t = VT_INT32	3052:3:70930:70948	6308673	4	True				
ANR	6308808	AssignmentExpression	btype . t = VT_INT32		6308673	0		=			
ANR	6308809	MemberAccess	btype . t		6308673	0					
ANR	6308810	Identifier	btype		6308673	0					
ANR	6308811	Identifier	t		6308673	1					
ANR	6308812	Identifier	VT_INT32		6308673	1					
ANR	6308813	IfStatement	if ( ( is_enum ( & btype ) || is_structured ( & btype ) ) && tok == ';' )		6308673	1					
ANR	6308814	Condition	( is_enum ( & btype ) || is_structured ( & btype ) ) && tok == ';'	3054:6:70960:71015	6308673	0	True				
ANR	6308815	AndExpression	( is_enum ( & btype ) || is_structured ( & btype ) ) && tok == ';'		6308673	0		&&			
ANR	6308816	OrExpression	is_enum ( & btype ) || is_structured ( & btype )		6308673	0		||			
ANR	6308817	CallExpression	is_enum ( & btype )		6308673	0					
ANR	6308818	Callee	is_enum		6308673	0					
ANR	6308819	Identifier	is_enum		6308673	0					
ANR	6308820	ArgumentList	& btype		6308673	1					
ANR	6308821	Argument	& btype		6308673	0					
ANR	6308822	UnaryOperationExpression	& btype		6308673	0					
ANR	6308823	UnaryOperator	&		6308673	0					
ANR	6308824	Identifier	btype		6308673	1					
ANR	6308825	CallExpression	is_structured ( & btype )		6308673	1					
ANR	6308826	Callee	is_structured		6308673	0					
ANR	6308827	Identifier	is_structured		6308673	0					
ANR	6308828	ArgumentList	& btype		6308673	1					
ANR	6308829	Argument	& btype		6308673	0					
ANR	6308830	UnaryOperationExpression	& btype		6308673	0					
ANR	6308831	UnaryOperator	&		6308673	0					
ANR	6308832	Identifier	btype		6308673	1					
ANR	6308833	EqualityExpression	tok == ';'		6308673	1		==			
ANR	6308834	Identifier	tok		6308673	0					
ANR	6308835	PrimaryExpression	';'		6308673	1					
ANR	6308836	CompoundStatement		35:64:858:858	6308673	1					
ANR	6308837	ExpressionStatement	next ( )	3056:3:71060:71067	6308673	0	True				
ANR	6308838	CallExpression	next ( )		6308673	0					
ANR	6308839	Callee	next		6308673	0					
ANR	6308840	Identifier	next		6308673	0					
ANR	6308841	ArgumentList			6308673	1					
ANR	6308842	ContinueStatement	continue ;	3057:3:71072:71080	6308673	1	True				
ANR	6308843	WhileStatement	while ( tcc_nerr ( ) == 0 )		6308673	2					
ANR	6308844	Condition	tcc_nerr ( ) == 0	3060:9:71133:71148	6308673	0	True				
ANR	6308845	EqualityExpression	tcc_nerr ( ) == 0		6308673	0		==			
ANR	6308846	CallExpression	tcc_nerr ( )		6308673	0					
ANR	6308847	Callee	tcc_nerr		6308673	0					
ANR	6308848	Identifier	tcc_nerr		6308673	0					
ANR	6308849	ArgumentList			6308673	1					
ANR	6308850	PrimaryExpression	0		6308673	1					
ANR	6308851	CompoundStatement		41:27:991:991	6308673	1					
ANR	6308852	ExpressionStatement	type = btype	3061:3:71156:71168	6308673	0	True				
ANR	6308853	AssignmentExpression	type = btype		6308673	0		=			
ANR	6308854	Identifier	type		6308673	0					
ANR	6308855	Identifier	btype		6308673	1					
ANR	6308856	ExpressionStatement	"type_decl ( & type , & ad , & v , TYPE_DIRECT )"	3062:3:71173:71212	6308673	1	True				
ANR	6308857	CallExpression	"type_decl ( & type , & ad , & v , TYPE_DIRECT )"		6308673	0					
ANR	6308858	Callee	type_decl		6308673	0					
ANR	6308859	Identifier	type_decl		6308673	0					
ANR	6308860	ArgumentList	& type		6308673	1					
ANR	6308861	Argument	& type		6308673	0					
ANR	6308862	UnaryOperationExpression	& type		6308673	0					
ANR	6308863	UnaryOperator	&		6308673	0					
ANR	6308864	Identifier	type		6308673	1					
ANR	6308865	Argument	& ad		6308673	1					
ANR	6308866	UnaryOperationExpression	& ad		6308673	0					
ANR	6308867	UnaryOperator	&		6308673	0					
ANR	6308868	Identifier	ad		6308673	1					
ANR	6308869	Argument	& v		6308673	2					
ANR	6308870	UnaryOperationExpression	& v		6308673	0					
ANR	6308871	UnaryOperator	&		6308673	0					
ANR	6308872	Identifier	v		6308673	1					
ANR	6308873	Argument	TYPE_DIRECT		6308673	3					
ANR	6308874	Identifier	TYPE_DIRECT		6308673	0					
ANR	6308875	CompoundStatement		46:4:1069:1082	6308673	2					
ANR	6308876	IdentifierDeclStatement	char buf [ 500 ] ;	3065:4:71229:71242	6308673	0	True				
ANR	6308877	IdentifierDecl	buf [ 500 ]		6308673	0					
ANR	6308878	IdentifierDeclType	char [ 500 ]		6308673	0					
ANR	6308879	Identifier	buf		6308673	1					
ANR	6308880	PrimaryExpression	500		6308673	2					
ANR	6308881	ExpressionStatement	"type_to_str ( buf , sizeof ( buf ) , t , get_tok_str ( v , NULL ) )"	3066:4:71248:71304	6308673	1	True				
ANR	6308882	CallExpression	"type_to_str ( buf , sizeof ( buf ) , t , get_tok_str ( v , NULL ) )"		6308673	0					
ANR	6308883	Callee	type_to_str		6308673	0					
ANR	6308884	Identifier	type_to_str		6308673	0					
ANR	6308885	ArgumentList	buf		6308673	1					
ANR	6308886	Argument	buf		6308673	0					
ANR	6308887	Identifier	buf		6308673	0					
ANR	6308888	Argument	sizeof ( buf )		6308673	1					
ANR	6308889	SizeofExpression	sizeof ( buf )		6308673	0					
ANR	6308890	Sizeof	sizeof		6308673	0					
ANR	6308891	SizeofOperand	buf		6308673	1					
ANR	6308892	Argument	t		6308673	2					
ANR	6308893	Identifier	t		6308673	0					
ANR	6308894	Argument	"get_tok_str ( v , NULL )"		6308673	3					
ANR	6308895	CallExpression	"get_tok_str ( v , NULL )"		6308673	0					
ANR	6308896	Callee	get_tok_str		6308673	0					
ANR	6308897	Identifier	get_tok_str		6308673	0					
ANR	6308898	ArgumentList	v		6308673	1					
ANR	6308899	Argument	v		6308673	0					
ANR	6308900	Identifier	v		6308673	0					
ANR	6308901	Argument	NULL		6308673	1					
ANR	6308902	Identifier	NULL		6308673	0					
ANR	6308903	ExpressionStatement	"printf ( ""type = '%s'\\n"" , buf )"	3067:4:71310:71339	6308673	2	True				
ANR	6308904	CallExpression	"printf ( ""type = '%s'\\n"" , buf )"		6308673	0					
ANR	6308905	Callee	printf		6308673	0					
ANR	6308906	Identifier	printf		6308673	0					
ANR	6308907	ArgumentList	"""type = '%s'\\n"""		6308673	1					
ANR	6308908	Argument	"""type = '%s'\\n"""		6308673	0					
ANR	6308909	PrimaryExpression	"""type = '%s'\\n"""		6308673	0					
ANR	6308910	Argument	buf		6308673	1					
ANR	6308911	Identifier	buf		6308673	0					
ANR	6308912	IfStatement	if ( ( type . t & VT_BTYPE ) == VT_FUNC )		6308673	3					
ANR	6308913	Condition	( type . t & VT_BTYPE ) == VT_FUNC	3070:7:71360:71389	6308673	0	True				
ANR	6308914	EqualityExpression	( type . t & VT_BTYPE ) == VT_FUNC		6308673	0		==			
ANR	6308915	BitAndExpression	type . t & VT_BTYPE		6308673	0		&			
ANR	6308916	MemberAccess	type . t		6308673	0					
ANR	6308917	Identifier	type		6308673	0					
ANR	6308918	Identifier	t		6308673	1					
ANR	6308919	Identifier	VT_BTYPE		6308673	1					
ANR	6308920	Identifier	VT_FUNC		6308673	1					
ANR	6308921	CompoundStatement		51:39:1232:1232	6308673	1					
ANR	6308922	IfStatement	if ( ( type . t & VT_STATIC ) && ( l == VT_LOCAL ) )		6308673	0					
ANR	6308923	Condition	( type . t & VT_STATIC ) && ( l == VT_LOCAL )	3071:8:71402:71440	6308673	0	True				
ANR	6308924	AndExpression	( type . t & VT_STATIC ) && ( l == VT_LOCAL )		6308673	0		&&			
ANR	6308925	BitAndExpression	type . t & VT_STATIC		6308673	0		&			
ANR	6308926	MemberAccess	type . t		6308673	0					
ANR	6308927	Identifier	type		6308673	0					
ANR	6308928	Identifier	t		6308673	1					
ANR	6308929	Identifier	VT_STATIC		6308673	1					
ANR	6308930	EqualityExpression	l == VT_LOCAL		6308673	1		==			
ANR	6308931	Identifier	l		6308673	0					
ANR	6308932	Identifier	VT_LOCAL		6308673	1					
ANR	6308933	CompoundStatement		52:49:1283:1283	6308673	1					
ANR	6308934	ExpressionStatement	"tcc_error ( ""function without file scope cannot be static"" )"	3072:5:71450:71508	6308673	0	True				
ANR	6308935	CallExpression	"tcc_error ( ""function without file scope cannot be static"" )"		6308673	0					
ANR	6308936	Callee	tcc_error		6308673	0					
ANR	6308937	Identifier	tcc_error		6308673	0					
ANR	6308938	ArgumentList	"""function without file scope cannot be static"""		6308673	1					
ANR	6308939	Argument	"""function without file scope cannot be static"""		6308673	0					
ANR	6308940	PrimaryExpression	"""function without file scope cannot be static"""		6308673	0					
ANR	6308941	ReturnStatement	return 1 ;	3073:5:71515:71523	6308673	1	True				
ANR	6308942	PrimaryExpression	1		6308673	0					
ANR	6308943	ExpressionStatement	sym = type . ref	3077:4:71614:71628	6308673	1	True				
ANR	6308944	AssignmentExpression	sym = type . ref		6308673	0		=			
ANR	6308945	Identifier	sym		6308673	0					
ANR	6308946	MemberAccess	type . ref		6308673	1					
ANR	6308947	Identifier	type		6308673	0					
ANR	6308948	Identifier	ref		6308673	1					
ANR	6308949	IfStatement	if ( sym -> c == FUNC_OLD )		6308673	2					
ANR	6308950	Condition	sym -> c == FUNC_OLD	3078:8:71638:71655	6308673	0	True				
ANR	6308951	EqualityExpression	sym -> c == FUNC_OLD		6308673	0		==			
ANR	6308952	PtrMemberAccess	sym -> c		6308673	0					
ANR	6308953	Identifier	sym		6308673	0					
ANR	6308954	Identifier	c		6308673	1					
ANR	6308955	Identifier	FUNC_OLD		6308673	1					
ANR	6308956	CompoundStatement		59:28:1498:1498	6308673	1					
ANR	6308957	ExpressionStatement	func_decl_list ( sym )	3079:5:71665:71685	6308673	0	True				
ANR	6308958	CallExpression	func_decl_list ( sym )		6308673	0					
ANR	6308959	Callee	func_decl_list		6308673	0					
ANR	6308960	Identifier	func_decl_list		6308673	0					
ANR	6308961	ArgumentList	sym		6308673	1					
ANR	6308962	Argument	sym		6308673	0					
ANR	6308963	Identifier	sym		6308673	0					
ANR	6308964	IfStatement	if ( ad . weak )		6308673	4					
ANR	6308965	Condition	ad . weak	3083:7:71706:71712	6308673	0	True				
ANR	6308966	MemberAccess	ad . weak		6308673	0					
ANR	6308967	Identifier	ad		6308673	0					
ANR	6308968	Identifier	weak		6308673	1					
ANR	6308969	CompoundStatement		64:16:1555:1555	6308673	1					
ANR	6308970	ExpressionStatement	type . t |= VT_WEAK	3084:4:71721:71738	6308673	0	True				
ANR	6308971	AssignmentExpression	type . t |= VT_WEAK		6308673	0		|=			
ANR	6308972	MemberAccess	type . t		6308673	0					
ANR	6308973	Identifier	type		6308673	0					
ANR	6308974	Identifier	t		6308673	1					
ANR	6308975	Identifier	VT_WEAK		6308673	1					
ANR	6308976	IfStatement	if ( ad . func_import )		6308673	5					
ANR	6308977	Condition	ad . func_import	3087:7:71773:71786	6308673	0	True				
ANR	6308978	MemberAccess	ad . func_import		6308673	0					
ANR	6308979	Identifier	ad		6308673	0					
ANR	6308980	Identifier	func_import		6308673	1					
ANR	6308981	CompoundStatement		68:23:1629:1629	6308673	1					
ANR	6308982	ExpressionStatement	type . t |= VT_IMPORT	3088:4:71795:71814	6308673	0	True				
ANR	6308983	AssignmentExpression	type . t |= VT_IMPORT		6308673	0		|=			
ANR	6308984	MemberAccess	type . t		6308673	0					
ANR	6308985	Identifier	type		6308673	0					
ANR	6308986	Identifier	t		6308673	1					
ANR	6308987	Identifier	VT_IMPORT		6308673	1					
ANR	6308988	IfStatement	if ( ad . func_export )		6308673	6					
ANR	6308989	Condition	ad . func_export	3090:7:71828:71841	6308673	0	True				
ANR	6308990	MemberAccess	ad . func_export		6308673	0					
ANR	6308991	Identifier	ad		6308673	0					
ANR	6308992	Identifier	func_export		6308673	1					
ANR	6308993	CompoundStatement		71:23:1684:1684	6308673	1					
ANR	6308994	ExpressionStatement	type . t |= VT_EXPORT	3091:4:71850:71869	6308673	0	True				
ANR	6308995	AssignmentExpression	type . t |= VT_EXPORT		6308673	0		|=			
ANR	6308996	MemberAccess	type . t		6308673	0					
ANR	6308997	Identifier	type		6308673	0					
ANR	6308998	Identifier	t		6308673	1					
ANR	6308999	Identifier	VT_EXPORT		6308673	1					
ANR	6309000	IfStatement	if ( tok == '{' )		6308673	7					
ANR	6309001	Condition	tok == '{'	3094:7:71890:71899	6308673	0	True				
ANR	6309002	EqualityExpression	tok == '{'		6308673	0		==			
ANR	6309003	Identifier	tok		6308673	0					
ANR	6309004	PrimaryExpression	'{'		6308673	1					
ANR	6309005	CompoundStatement		75:19:1742:1742	6308673	1					
ANR	6309006	IfStatement	if ( l == VT_LOCAL )		6308673	0					
ANR	6309007	Condition	l == VT_LOCAL	3095:8:71912:71924	6308673	0	True				
ANR	6309008	EqualityExpression	l == VT_LOCAL		6308673	0		==			
ANR	6309009	Identifier	l		6308673	0					
ANR	6309010	Identifier	VT_LOCAL		6308673	1					
ANR	6309011	CompoundStatement		76:23:1767:1767	6308673	1					
ANR	6309012	ExpressionStatement	"tcc_error ( ""cannot use local functions"" )"	3096:5:71934:71974	6308673	0	True				
ANR	6309013	CallExpression	"tcc_error ( ""cannot use local functions"" )"		6308673	0					
ANR	6309014	Callee	tcc_error		6308673	0					
ANR	6309015	Identifier	tcc_error		6308673	0					
ANR	6309016	ArgumentList	"""cannot use local functions"""		6308673	1					
ANR	6309017	Argument	"""cannot use local functions"""		6308673	0					
ANR	6309018	PrimaryExpression	"""cannot use local functions"""		6308673	0					
ANR	6309019	ReturnStatement	return 1 ;	3097:5:71981:71989	6308673	1	True				
ANR	6309020	PrimaryExpression	1		6308673	0					
ANR	6309021	IfStatement	if ( ( type . t & VT_BTYPE ) != VT_FUNC )		6308673	1					
ANR	6309022	Condition	( type . t & VT_BTYPE ) != VT_FUNC	3099:8:72005:72034	6308673	0	True				
ANR	6309023	EqualityExpression	( type . t & VT_BTYPE ) != VT_FUNC		6308673	0		!=			
ANR	6309024	BitAndExpression	type . t & VT_BTYPE		6308673	0		&			
ANR	6309025	MemberAccess	type . t		6308673	0					
ANR	6309026	Identifier	type		6308673	0					
ANR	6309027	Identifier	t		6308673	1					
ANR	6309028	Identifier	VT_BTYPE		6308673	1					
ANR	6309029	Identifier	VT_FUNC		6308673	1					
ANR	6309030	CompoundStatement		80:40:1877:1877	6308673	1					
ANR	6309031	ExpressionStatement	"expect ( ""function definition"" )"	3100:5:72044:72074	6308673	0	True				
ANR	6309032	CallExpression	"expect ( ""function definition"" )"		6308673	0					
ANR	6309033	Callee	expect		6308673	0					
ANR	6309034	Identifier	expect		6308673	0					
ANR	6309035	ArgumentList	"""function definition"""		6308673	1					
ANR	6309036	Argument	"""function definition"""		6308673	0					
ANR	6309037	PrimaryExpression	"""function definition"""		6308673	0					
ANR	6309038	ExpressionStatement	sym = type . ref	3104:4:72148:72162	6308673	2	True				
ANR	6309039	AssignmentExpression	sym = type . ref		6308673	0		=			
ANR	6309040	Identifier	sym		6308673	0					
ANR	6309041	MemberAccess	type . ref		6308673	1					
ANR	6309042	Identifier	type		6308673	0					
ANR	6309043	Identifier	ref		6308673	1					
ANR	6309044	IfStatement	if ( sym )		6308673	3					
ANR	6309045	Condition	sym	3105:8:72172:72174	6308673	0	True				
ANR	6309046	Identifier	sym		6308673	0					
ANR	6309047	CompoundStatement		86:13:2017:2017	6308673	1					
ANR	6309048	WhileStatement	while ( ( sym = sym -> next ) != NULL )		6308673	0					
ANR	6309049	Condition	( sym = sym -> next ) != NULL	3106:12:72191:72215	6308673	0	True				
ANR	6309050	EqualityExpression	( sym = sym -> next ) != NULL		6308673	0		!=			
ANR	6309051	AssignmentExpression	sym = sym -> next		6308673	0		=			
ANR	6309052	Identifier	sym		6308673	0					
ANR	6309053	PtrMemberAccess	sym -> next		6308673	1					
ANR	6309054	Identifier	sym		6308673	0					
ANR	6309055	Identifier	next		6308673	1					
ANR	6309056	Identifier	NULL		6308673	1					
ANR	6309057	IfStatement	if ( ! ( sym -> v & ~SYM_FIELD ) )		6308673	1					
ANR	6309058	Condition	! ( sym -> v & ~SYM_FIELD )	3107:10:72228:72249	6308673	0	True				
ANR	6309059	UnaryOperationExpression	! ( sym -> v & ~SYM_FIELD )		6308673	0					
ANR	6309060	UnaryOperator	!		6308673	0					
ANR	6309061	BitAndExpression	sym -> v & ~SYM_FIELD		6308673	1		&			
ANR	6309062	PtrMemberAccess	sym -> v		6308673	0					
ANR	6309063	Identifier	sym		6308673	0					
ANR	6309064	Identifier	v		6308673	1					
ANR	6309065	Identifier	~SYM_FIELD		6308673	1					
ANR	6309066	CompoundStatement		88:34:2092:2092	6308673	1					
ANR	6309067	ExpressionStatement	"expect ( ""identifier"" )"	3108:7:72261:72282	6308673	0	True				
ANR	6309068	CallExpression	"expect ( ""identifier"" )"		6308673	0					
ANR	6309069	Callee	expect		6308673	0					
ANR	6309070	Identifier	expect		6308673	0					
ANR	6309071	ArgumentList	"""identifier"""		6308673	1					
ANR	6309072	Argument	"""identifier"""		6308673	0					
ANR	6309073	PrimaryExpression	"""identifier"""		6308673	0					
ANR	6309074	ElseStatement	else		6308673	0					
ANR	6309075	CompoundStatement		91:11:2143:2143	6308673	0					
ANR	6309076	ReturnStatement	return 0 ;	3111:5:72310:72318	6308673	0	True				
ANR	6309077	PrimaryExpression	0		6308673	0					
ANR	6309078	IfStatement	if ( ( type . t & ( VT_EXTERN | VT_INLINE ) ) == ( VT_EXTERN | VT_INLINE ) )		6308673	4					
ANR	6309079	Condition	( type . t & ( VT_EXTERN | VT_INLINE ) ) == ( VT_EXTERN | VT_INLINE )	3115:8:72446:72506	6308673	0	True				
ANR	6309080	EqualityExpression	( type . t & ( VT_EXTERN | VT_INLINE ) ) == ( VT_EXTERN | VT_INLINE )		6308673	0		==			
ANR	6309081	BitAndExpression	type . t & ( VT_EXTERN | VT_INLINE )		6308673	0		&			
ANR	6309082	MemberAccess	type . t		6308673	0					
ANR	6309083	Identifier	type		6308673	0					
ANR	6309084	Identifier	t		6308673	1					
ANR	6309085	InclusiveOrExpression	VT_EXTERN | VT_INLINE		6308673	1		|			
ANR	6309086	Identifier	VT_EXTERN		6308673	0					
ANR	6309087	Identifier	VT_INLINE		6308673	1					
ANR	6309088	InclusiveOrExpression	VT_EXTERN | VT_INLINE		6308673	1		|			
ANR	6309089	Identifier	VT_EXTERN		6308673	0					
ANR	6309090	Identifier	VT_INLINE		6308673	1					
ANR	6309091	CompoundStatement		96:71:2349:2349	6308673	1					
ANR	6309092	ExpressionStatement	type . t = ( type . t & ~VT_EXTERN ) | VT_STATIC	3116:5:72516:72558	6308673	0	True				
ANR	6309093	AssignmentExpression	type . t = ( type . t & ~VT_EXTERN ) | VT_STATIC		6308673	0		=			
ANR	6309094	MemberAccess	type . t		6308673	0					
ANR	6309095	Identifier	type		6308673	0					
ANR	6309096	Identifier	t		6308673	1					
ANR	6309097	InclusiveOrExpression	( type . t & ~VT_EXTERN ) | VT_STATIC		6308673	1		|			
ANR	6309098	BitAndExpression	type . t & ~VT_EXTERN		6308673	0		&			
ANR	6309099	MemberAccess	type . t		6308673	0					
ANR	6309100	Identifier	type		6308673	0					
ANR	6309101	Identifier	t		6308673	1					
ANR	6309102	Identifier	~VT_EXTERN		6308673	1					
ANR	6309103	Identifier	VT_STATIC		6308673	1					
ANR	6309104	ExpressionStatement	sym = sym_find ( v )	3119:4:72571:72589	6308673	5	True				
ANR	6309105	AssignmentExpression	sym = sym_find ( v )		6308673	0		=			
ANR	6309106	Identifier	sym		6308673	0					
ANR	6309107	CallExpression	sym_find ( v )		6308673	1					
ANR	6309108	Callee	sym_find		6308673	0					
ANR	6309109	Identifier	sym_find		6308673	0					
ANR	6309110	ArgumentList	v		6308673	1					
ANR	6309111	Argument	v		6308673	0					
ANR	6309112	Identifier	v		6308673	0					
ANR	6309113	IfStatement	if ( sym )		6308673	6					
ANR	6309114	Condition	sym	3120:8:72599:72601	6308673	0	True				
ANR	6309115	Identifier	sym		6308673	0					
ANR	6309116	CompoundStatement		101:13:2444:2444	6308673	1					
ANR	6309117	IfStatement	if ( ( sym -> type . t & VT_BTYPE ) != VT_FUNC )		6308673	0					
ANR	6309118	Condition	( sym -> type . t & VT_BTYPE ) != VT_FUNC	3121:9:72615:72649	6308673	0	True				
ANR	6309119	EqualityExpression	( sym -> type . t & VT_BTYPE ) != VT_FUNC		6308673	0		!=			
ANR	6309120	BitAndExpression	sym -> type . t & VT_BTYPE		6308673	0		&			
ANR	6309121	MemberAccess	sym -> type . t		6308673	0					
ANR	6309122	PtrMemberAccess	sym -> type		6308673	0					
ANR	6309123	Identifier	sym		6308673	0					
ANR	6309124	Identifier	type		6308673	1					
ANR	6309125	Identifier	t		6308673	1					
ANR	6309126	Identifier	VT_BTYPE		6308673	1					
ANR	6309127	Identifier	VT_FUNC		6308673	1					
ANR	6309128	CompoundStatement		102:46:2492:2492	6308673	1					
ANR	6309129	GotoStatement	goto func_error1 ;	3122:6:72660:72676	6308673	0	True				
ANR	6309130	Identifier	func_error1		6308673	0					
ANR	6309131	ExpressionStatement	r = sym -> type . ref -> r	3125:5:72691:72711	6308673	1	True				
ANR	6309132	AssignmentExpression	r = sym -> type . ref -> r		6308673	0		=			
ANR	6309133	Identifier	r		6308673	0					
ANR	6309134	PtrMemberAccess	sym -> type . ref -> r		6308673	1					
ANR	6309135	MemberAccess	sym -> type . ref		6308673	0					
ANR	6309136	PtrMemberAccess	sym -> type		6308673	0					
ANR	6309137	Identifier	sym		6308673	0					
ANR	6309138	Identifier	type		6308673	1					
ANR	6309139	Identifier	ref		6308673	1					
ANR	6309140	Identifier	r		6308673	1					
ANR	6309141	IfStatement	if ( FUNC_CALL ( r ) != FUNC_CDECL && FUNC_CALL ( type . ref -> r ) == FUNC_CDECL )		6308673	2					
ANR	6309142	Condition	FUNC_CALL ( r ) != FUNC_CDECL && FUNC_CALL ( type . ref -> r ) == FUNC_CDECL	3127:9:72777:72853	6308673	0	True				
ANR	6309143	AndExpression	FUNC_CALL ( r ) != FUNC_CDECL && FUNC_CALL ( type . ref -> r ) == FUNC_CDECL		6308673	0		&&			
ANR	6309144	EqualityExpression	FUNC_CALL ( r ) != FUNC_CDECL		6308673	0		!=			
ANR	6309145	CallExpression	FUNC_CALL ( r )		6308673	0					
ANR	6309146	Callee	FUNC_CALL		6308673	0					
ANR	6309147	Identifier	FUNC_CALL		6308673	0					
ANR	6309148	ArgumentList	r		6308673	1					
ANR	6309149	Argument	r		6308673	0					
ANR	6309150	Identifier	r		6308673	0					
ANR	6309151	Identifier	FUNC_CDECL		6308673	1					
ANR	6309152	EqualityExpression	FUNC_CALL ( type . ref -> r ) == FUNC_CDECL		6308673	1		==			
ANR	6309153	CallExpression	FUNC_CALL ( type . ref -> r )		6308673	0					
ANR	6309154	Callee	FUNC_CALL		6308673	0					
ANR	6309155	Identifier	FUNC_CALL		6308673	0					
ANR	6309156	ArgumentList	type . ref -> r		6308673	1					
ANR	6309157	Argument	type . ref -> r		6308673	0					
ANR	6309158	PtrMemberAccess	type . ref -> r		6308673	0					
ANR	6309159	MemberAccess	type . ref		6308673	0					
ANR	6309160	Identifier	type		6308673	0					
ANR	6309161	Identifier	ref		6308673	1					
ANR	6309162	Identifier	r		6308673	1					
ANR	6309163	Identifier	FUNC_CDECL		6308673	1					
ANR	6309164	CompoundStatement		109:51:2696:2696	6308673	1					
ANR	6309165	ExpressionStatement	FUNC_CALL ( type . ref -> r ) = FUNC_CALL ( r )	3129:6:72864:72903	6308673	0	True				
ANR	6309166	AssignmentExpression	FUNC_CALL ( type . ref -> r ) = FUNC_CALL ( r )		6308673	0		=			
ANR	6309167	CallExpression	FUNC_CALL ( type . ref -> r )		6308673	0					
ANR	6309168	Callee	FUNC_CALL		6308673	0					
ANR	6309169	Identifier	FUNC_CALL		6308673	0					
ANR	6309170	ArgumentList	type . ref -> r		6308673	1					
ANR	6309171	Argument	type . ref -> r		6308673	0					
ANR	6309172	PtrMemberAccess	type . ref -> r		6308673	0					
ANR	6309173	MemberAccess	type . ref		6308673	0					
ANR	6309174	Identifier	type		6308673	0					
ANR	6309175	Identifier	ref		6308673	1					
ANR	6309176	Identifier	r		6308673	1					
ANR	6309177	CallExpression	FUNC_CALL ( r )		6308673	1					
ANR	6309178	Callee	FUNC_CALL		6308673	0					
ANR	6309179	Identifier	FUNC_CALL		6308673	0					
ANR	6309180	ArgumentList	r		6308673	1					
ANR	6309181	Argument	r		6308673	0					
ANR	6309182	Identifier	r		6308673	0					
ANR	6309183	IfStatement	if ( FUNC_EXPORT ( r ) )		6308673	3					
ANR	6309184	Condition	FUNC_EXPORT ( r )	3133:9:72959:72973	6308673	0	True				
ANR	6309185	CallExpression	FUNC_EXPORT ( r )		6308673	0					
ANR	6309186	Callee	FUNC_EXPORT		6308673	0					
ANR	6309187	Identifier	FUNC_EXPORT		6308673	0					
ANR	6309188	ArgumentList	r		6308673	1					
ANR	6309189	Argument	r		6308673	0					
ANR	6309190	Identifier	r		6308673	0					
ANR	6309191	CompoundStatement		114:26:2816:2816	6308673	1					
ANR	6309192	ExpressionStatement	FUNC_EXPORT ( type . ref -> r ) = 1	3134:6:72984:73013	6308673	0	True				
ANR	6309193	AssignmentExpression	FUNC_EXPORT ( type . ref -> r ) = 1		6308673	0		=			
ANR	6309194	CallExpression	FUNC_EXPORT ( type . ref -> r )		6308673	0					
ANR	6309195	Callee	FUNC_EXPORT		6308673	0					
ANR	6309196	Identifier	FUNC_EXPORT		6308673	0					
ANR	6309197	ArgumentList	type . ref -> r		6308673	1					
ANR	6309198	Argument	type . ref -> r		6308673	0					
ANR	6309199	PtrMemberAccess	type . ref -> r		6308673	0					
ANR	6309200	MemberAccess	type . ref		6308673	0					
ANR	6309201	Identifier	type		6308673	0					
ANR	6309202	Identifier	ref		6308673	1					
ANR	6309203	Identifier	r		6308673	1					
ANR	6309204	PrimaryExpression	1		6308673	1					
ANR	6309205	IfStatement	if ( sym -> type . t & VT_STATIC )		6308673	4					
ANR	6309206	Condition	sym -> type . t & VT_STATIC	3138:9:73069:73091	6308673	0	True				
ANR	6309207	BitAndExpression	sym -> type . t & VT_STATIC		6308673	0		&			
ANR	6309208	MemberAccess	sym -> type . t		6308673	0					
ANR	6309209	PtrMemberAccess	sym -> type		6308673	0					
ANR	6309210	Identifier	sym		6308673	0					
ANR	6309211	Identifier	type		6308673	1					
ANR	6309212	Identifier	t		6308673	1					
ANR	6309213	Identifier	VT_STATIC		6308673	1					
ANR	6309214	CompoundStatement		119:34:2934:2934	6308673	1					
ANR	6309215	ExpressionStatement	type . t = ( type . t & ~VT_EXTERN ) | VT_STATIC	3139:6:73102:73144	6308673	0	True				
ANR	6309216	AssignmentExpression	type . t = ( type . t & ~VT_EXTERN ) | VT_STATIC		6308673	0		=			
ANR	6309217	MemberAccess	type . t		6308673	0					
ANR	6309218	Identifier	type		6308673	0					
ANR	6309219	Identifier	t		6308673	1					
ANR	6309220	InclusiveOrExpression	( type . t & ~VT_EXTERN ) | VT_STATIC		6308673	1		|			
ANR	6309221	BitAndExpression	type . t & ~VT_EXTERN		6308673	0		&			
ANR	6309222	MemberAccess	type . t		6308673	0					
ANR	6309223	Identifier	type		6308673	0					
ANR	6309224	Identifier	t		6308673	1					
ANR	6309225	Identifier	~VT_EXTERN		6308673	1					
ANR	6309226	Identifier	VT_STATIC		6308673	1					
ANR	6309227	IfStatement	"if ( ! is_compatible_types ( & sym -> type , & type ) )"		6308673	5					
ANR	6309228	Condition	"! is_compatible_types ( & sym -> type , & type )"	3142:9:73163:73202	6308673	0	True				
ANR	6309229	UnaryOperationExpression	"! is_compatible_types ( & sym -> type , & type )"		6308673	0					
ANR	6309230	UnaryOperator	!		6308673	0					
ANR	6309231	CallExpression	"is_compatible_types ( & sym -> type , & type )"		6308673	1					
ANR	6309232	Callee	is_compatible_types		6308673	0					
ANR	6309233	Identifier	is_compatible_types		6308673	0					
ANR	6309234	ArgumentList	& sym -> type		6308673	1					
ANR	6309235	Argument	& sym -> type		6308673	0					
ANR	6309236	UnaryOperationExpression	& sym -> type		6308673	0					
ANR	6309237	UnaryOperator	&		6308673	0					
ANR	6309238	PtrMemberAccess	sym -> type		6308673	1					
ANR	6309239	Identifier	sym		6308673	0					
ANR	6309240	Identifier	type		6308673	1					
ANR	6309241	Argument	& type		6308673	1					
ANR	6309242	UnaryOperationExpression	& type		6308673	0					
ANR	6309243	UnaryOperator	&		6308673	0					
ANR	6309244	Identifier	type		6308673	1					
ANR	6309245	CompoundStatement		123:51:3045:3045	6308673	1					
ANR	6309246	Label	func_error1 :	3143:0:73207:73218	6308673	0	True				
ANR	6309247	Identifier	func_error1		6308673	0					
ANR	6309248	ExpressionStatement	"tcc_error ( ""incompatible types for redefinition of '%s'"" , get_tok_str ( v , NULL ) )"	3144:6:73226:73313	6308673	1	True				
ANR	6309249	CallExpression	"tcc_error ( ""incompatible types for redefinition of '%s'"" , get_tok_str ( v , NULL ) )"		6308673	0					
ANR	6309250	Callee	tcc_error		6308673	0					
ANR	6309251	Identifier	tcc_error		6308673	0					
ANR	6309252	ArgumentList	"""incompatible types for redefinition of '%s'"""		6308673	1					
ANR	6309253	Argument	"""incompatible types for redefinition of '%s'"""		6308673	0					
ANR	6309254	PrimaryExpression	"""incompatible types for redefinition of '%s'"""		6308673	0					
ANR	6309255	Argument	"get_tok_str ( v , NULL )"		6308673	1					
ANR	6309256	CallExpression	"get_tok_str ( v , NULL )"		6308673	0					
ANR	6309257	Callee	get_tok_str		6308673	0					
ANR	6309258	Identifier	get_tok_str		6308673	0					
ANR	6309259	ArgumentList	v		6308673	1					
ANR	6309260	Argument	v		6308673	0					
ANR	6309261	Identifier	v		6308673	0					
ANR	6309262	Argument	NULL		6308673	1					
ANR	6309263	Identifier	NULL		6308673	0					
ANR	6309264	ReturnStatement	return 1 ;	3146:6:73321:73329	6308673	2	True				
ANR	6309265	PrimaryExpression	1		6308673	0					
ANR	6309266	ExpressionStatement	sym -> type = type	3149:5:73407:73423	6308673	6	True				
ANR	6309267	AssignmentExpression	sym -> type = type		6308673	0		=			
ANR	6309268	PtrMemberAccess	sym -> type		6308673	0					
ANR	6309269	Identifier	sym		6308673	0					
ANR	6309270	Identifier	type		6308673	1					
ANR	6309271	Identifier	type		6308673	1					
ANR	6309272	ElseStatement	else		6308673	0					
ANR	6309273	CompoundStatement		131:11:3276:3276	6308673	0					
ANR	6309274	ExpressionStatement	"sym = global_identifier_push ( v , type . t , 0 )"	3152:5:73474:73517	6308673	0	True				
ANR	6309275	AssignmentExpression	"sym = global_identifier_push ( v , type . t , 0 )"		6308673	0		=			
ANR	6309276	Identifier	sym		6308673	0					
ANR	6309277	CallExpression	"global_identifier_push ( v , type . t , 0 )"		6308673	1					
ANR	6309278	Callee	global_identifier_push		6308673	0					
ANR	6309279	Identifier	global_identifier_push		6308673	0					
ANR	6309280	ArgumentList	v		6308673	1					
ANR	6309281	Argument	v		6308673	0					
ANR	6309282	Identifier	v		6308673	0					
ANR	6309283	Argument	type . t		6308673	1					
ANR	6309284	MemberAccess	type . t		6308673	0					
ANR	6309285	Identifier	type		6308673	0					
ANR	6309286	Identifier	t		6308673	1					
ANR	6309287	Argument	0		6308673	2					
ANR	6309288	PrimaryExpression	0		6308673	0					
ANR	6309289	IfStatement	if ( ! sym )		6308673	1					
ANR	6309290	Condition	! sym	3153:9:73528:73531	6308673	0	True				
ANR	6309291	UnaryOperationExpression	! sym		6308673	0					
ANR	6309292	UnaryOperator	!		6308673	0					
ANR	6309293	Identifier	sym		6308673	1					
ANR	6309294	CompoundStatement		134:15:3374:3374	6308673	1					
ANR	6309295	ReturnStatement	return 1 ;	3154:6:73542:73550	6308673	0	True				
ANR	6309296	PrimaryExpression	1		6308673	0					
ANR	6309297	ExpressionStatement	sym -> type . ref = type . ref	3156:5:73564:73588	6308673	2	True				
ANR	6309298	AssignmentExpression	sym -> type . ref = type . ref		6308673	0		=			
ANR	6309299	MemberAccess	sym -> type . ref		6308673	0					
ANR	6309300	PtrMemberAccess	sym -> type		6308673	0					
ANR	6309301	Identifier	sym		6308673	0					
ANR	6309302	Identifier	type		6308673	1					
ANR	6309303	Identifier	ref		6308673	1					
ANR	6309304	MemberAccess	type . ref		6308673	1					
ANR	6309305	Identifier	type		6308673	0					
ANR	6309306	Identifier	ref		6308673	1					
ANR	6309307	BreakStatement	break ;	3158:4:73600:73605	6308673	7	True				
ANR	6309308	ElseStatement	else		6308673	0					
ANR	6309309	CompoundStatement		140:10:3457:3457	6308673	0					
ANR	6309310	IfStatement	if ( btype . t & VT_TYPEDEF )		6308673	0					
ANR	6309311	Condition	btype . t & VT_TYPEDEF	3160:8:73627:73646	6308673	0	True				
ANR	6309312	BitAndExpression	btype . t & VT_TYPEDEF		6308673	0		&			
ANR	6309313	MemberAccess	btype . t		6308673	0					
ANR	6309314	Identifier	btype		6308673	0					
ANR	6309315	Identifier	t		6308673	1					
ANR	6309316	Identifier	VT_TYPEDEF		6308673	1					
ANR	6309317	CompoundStatement		155:5:3826:3839	6308673	1					
ANR	6309318	IfStatement	if ( tok != ';' )		6308673	0					
ANR	6309319	Condition	tok != ';'	3163:9:73734:73743	6308673	0	True				
ANR	6309320	EqualityExpression	tok != ';'		6308673	0		!=			
ANR	6309321	Identifier	tok		6308673	0					
ANR	6309322	PrimaryExpression	';'		6308673	1					
ANR	6309323	CompoundStatement		144:21:3586:3586	6308673	1					
ANR	6309324	ExpressionStatement	v = tok	3164:6:73754:73761	6308673	0	True				
ANR	6309325	AssignmentExpression	v = tok		6308673	0		=			
ANR	6309326	Identifier	v		6308673	0					
ANR	6309327	Identifier	tok		6308673	1					
ANR	6309328	ExpressionStatement	next ( )	3165:6:73769:73775	6308673	1	True				
ANR	6309329	CallExpression	next ( )		6308673	0					
ANR	6309330	Callee	next		6308673	0					
ANR	6309331	Identifier	next		6308673	0					
ANR	6309332	ArgumentList			6308673	1					
ANR	6309333	ExpressionStatement	"sym = sym_push ( v , & type , INT_ATTR ( & ad ) , 0 )"	3167:5:73789:73833	6308673	1	True				
ANR	6309334	AssignmentExpression	"sym = sym_push ( v , & type , INT_ATTR ( & ad ) , 0 )"		6308673	0		=			
ANR	6309335	Identifier	sym		6308673	0					
ANR	6309336	CallExpression	"sym_push ( v , & type , INT_ATTR ( & ad ) , 0 )"		6308673	1					
ANR	6309337	Callee	sym_push		6308673	0					
ANR	6309338	Identifier	sym_push		6308673	0					
ANR	6309339	ArgumentList	v		6308673	1					
ANR	6309340	Argument	v		6308673	0					
ANR	6309341	Identifier	v		6308673	0					
ANR	6309342	Argument	& type		6308673	1					
ANR	6309343	UnaryOperationExpression	& type		6308673	0					
ANR	6309344	UnaryOperator	&		6308673	0					
ANR	6309345	Identifier	type		6308673	1					
ANR	6309346	Argument	INT_ATTR ( & ad )		6308673	2					
ANR	6309347	CallExpression	INT_ATTR ( & ad )		6308673	0					
ANR	6309348	Callee	INT_ATTR		6308673	0					
ANR	6309349	Identifier	INT_ATTR		6308673	0					
ANR	6309350	ArgumentList	& ad		6308673	1					
ANR	6309351	Argument	& ad		6308673	0					
ANR	6309352	UnaryOperationExpression	& ad		6308673	0					
ANR	6309353	UnaryOperator	&		6308673	0					
ANR	6309354	Identifier	ad		6308673	1					
ANR	6309355	Argument	0		6308673	3					
ANR	6309356	PrimaryExpression	0		6308673	0					
ANR	6309357	IfStatement	if ( ! sym )		6308673	2					
ANR	6309358	Condition	! sym	3168:9:73844:73847	6308673	0	True				
ANR	6309359	UnaryOperationExpression	! sym		6308673	0					
ANR	6309360	UnaryOperator	!		6308673	0					
ANR	6309361	Identifier	sym		6308673	1					
ANR	6309362	CompoundStatement		149:15:3690:3690	6308673	1					
ANR	6309363	ReturnStatement	return 1 ;	3169:6:73858:73866	6308673	0	True				
ANR	6309364	PrimaryExpression	1		6308673	0					
ANR	6309365	ExpressionStatement	sym -> type . t |= VT_TYPEDEF	3171:5:73880:73905	6308673	3	True				
ANR	6309366	AssignmentExpression	sym -> type . t |= VT_TYPEDEF		6308673	0		|=			
ANR	6309367	MemberAccess	sym -> type . t		6308673	0					
ANR	6309368	PtrMemberAccess	sym -> type		6308673	0					
ANR	6309369	Identifier	sym		6308673	0					
ANR	6309370	Identifier	type		6308673	1					
ANR	6309371	Identifier	t		6308673	1					
ANR	6309372	Identifier	VT_TYPEDEF		6308673	1					
ANR	6309373	IdentifierDeclStatement	const char * alias = NULL ;	3173:5:73955:73979	6308673	4	True				
ANR	6309374	IdentifierDecl	* alias = NULL		6308673	0					
ANR	6309375	IdentifierDeclType	const char *		6308673	0					
ANR	6309376	Identifier	alias		6308673	1					
ANR	6309377	AssignmentExpression	* alias = NULL		6308673	2		=			
ANR	6309378	Identifier	NULL		6308673	0					
ANR	6309379	Identifier	NULL		6308673	1					
ANR	6309380	IdentifierDeclStatement	char buf [ 500 ] ;	3174:5:73986:73999	6308673	5	True				
ANR	6309381	IdentifierDecl	buf [ 500 ]		6308673	0					
ANR	6309382	IdentifierDeclType	char [ 500 ]		6308673	0					
ANR	6309383	Identifier	buf		6308673	1					
ANR	6309384	PrimaryExpression	500		6308673	2					
ANR	6309385	ExpressionStatement	"alias = get_tok_str ( v , NULL )"	3175:5:74006:74034	6308673	6	True				
ANR	6309386	AssignmentExpression	"alias = get_tok_str ( v , NULL )"		6308673	0		=			
ANR	6309387	Identifier	alias		6308673	0					
ANR	6309388	CallExpression	"get_tok_str ( v , NULL )"		6308673	1					
ANR	6309389	Callee	get_tok_str		6308673	0					
ANR	6309390	Identifier	get_tok_str		6308673	0					
ANR	6309391	ArgumentList	v		6308673	1					
ANR	6309392	Argument	v		6308673	0					
ANR	6309393	Identifier	v		6308673	0					
ANR	6309394	Argument	NULL		6308673	1					
ANR	6309395	Identifier	NULL		6308673	0					
ANR	6309396	ExpressionStatement	"type_to_str ( buf , sizeof ( buf ) , & sym -> type , NULL )"	3176:5:74041:74088	6308673	7	True				
ANR	6309397	CallExpression	"type_to_str ( buf , sizeof ( buf ) , & sym -> type , NULL )"		6308673	0					
ANR	6309398	Callee	type_to_str		6308673	0					
ANR	6309399	Identifier	type_to_str		6308673	0					
ANR	6309400	ArgumentList	buf		6308673	1					
ANR	6309401	Argument	buf		6308673	0					
ANR	6309402	Identifier	buf		6308673	0					
ANR	6309403	Argument	sizeof ( buf )		6308673	1					
ANR	6309404	SizeofExpression	sizeof ( buf )		6308673	0					
ANR	6309405	Sizeof	sizeof		6308673	0					
ANR	6309406	SizeofOperand	buf		6308673	1					
ANR	6309407	Argument	& sym -> type		6308673	2					
ANR	6309408	UnaryOperationExpression	& sym -> type		6308673	0					
ANR	6309409	UnaryOperator	&		6308673	0					
ANR	6309410	PtrMemberAccess	sym -> type		6308673	1					
ANR	6309411	Identifier	sym		6308673	0					
ANR	6309412	Identifier	type		6308673	1					
ANR	6309413	Argument	NULL		6308673	3					
ANR	6309414	Identifier	NULL		6308673	0					
ANR	6309415	ExpressionStatement	"tcc_appendf ( ""%s=typedef\\n"" , alias )"	3177:5:74095:74128	6308673	8	True				
ANR	6309416	CallExpression	"tcc_appendf ( ""%s=typedef\\n"" , alias )"		6308673	0					
ANR	6309417	Callee	tcc_appendf		6308673	0					
ANR	6309418	Identifier	tcc_appendf		6308673	0					
ANR	6309419	ArgumentList	"""%s=typedef\\n"""		6308673	1					
ANR	6309420	Argument	"""%s=typedef\\n"""		6308673	0					
ANR	6309421	PrimaryExpression	"""%s=typedef\\n"""		6308673	0					
ANR	6309422	Argument	alias		6308673	1					
ANR	6309423	Identifier	alias		6308673	0					
ANR	6309424	ExpressionStatement	"tcc_appendf ( ""typedef.%s=%s\\n"" , alias , buf )"	3178:5:74135:74176	6308673	9	True				
ANR	6309425	CallExpression	"tcc_appendf ( ""typedef.%s=%s\\n"" , alias , buf )"		6308673	0					
ANR	6309426	Callee	tcc_appendf		6308673	0					
ANR	6309427	Identifier	tcc_appendf		6308673	0					
ANR	6309428	ArgumentList	"""typedef.%s=%s\\n"""		6308673	1					
ANR	6309429	Argument	"""typedef.%s=%s\\n"""		6308673	0					
ANR	6309430	PrimaryExpression	"""typedef.%s=%s\\n"""		6308673	0					
ANR	6309431	Argument	alias		6308673	1					
ANR	6309432	Identifier	alias		6308673	0					
ANR	6309433	Argument	buf		6308673	2					
ANR	6309434	Identifier	buf		6308673	0					
ANR	6309435	ElseStatement	else		6308673	0					
ANR	6309436	CompoundStatement		160:11:4029:4029	6308673	0					
ANR	6309437	ExpressionStatement	r = 0	3180:5:74196:74201	6308673	0	True				
ANR	6309438	AssignmentExpression	r = 0		6308673	0		=			
ANR	6309439	Identifier	r		6308673	0					
ANR	6309440	PrimaryExpression	0		6308673	1					
ANR	6309441	IfStatement	if ( ( type . t & VT_BTYPE ) == VT_FUNC )		6308673	1					
ANR	6309442	Condition	( type . t & VT_BTYPE ) == VT_FUNC	3181:9:74212:74241	6308673	0	True				
ANR	6309443	EqualityExpression	( type . t & VT_BTYPE ) == VT_FUNC		6308673	0		==			
ANR	6309444	BitAndExpression	type . t & VT_BTYPE		6308673	0		&			
ANR	6309445	MemberAccess	type . t		6308673	0					
ANR	6309446	Identifier	type		6308673	0					
ANR	6309447	Identifier	t		6308673	1					
ANR	6309448	Identifier	VT_BTYPE		6308673	1					
ANR	6309449	Identifier	VT_FUNC		6308673	1					
ANR	6309450	CompoundStatement		162:41:4084:4084	6308673	1					
ANR	6309451	ExpressionStatement	type . ref -> r = INT_ATTR ( & ad )	3184:6:74343:74371	6308673	0	True				
ANR	6309452	AssignmentExpression	type . ref -> r = INT_ATTR ( & ad )		6308673	0		=			
ANR	6309453	PtrMemberAccess	type . ref -> r		6308673	0					
ANR	6309454	MemberAccess	type . ref		6308673	0					
ANR	6309455	Identifier	type		6308673	0					
ANR	6309456	Identifier	ref		6308673	1					
ANR	6309457	Identifier	r		6308673	1					
ANR	6309458	CallExpression	INT_ATTR ( & ad )		6308673	1					
ANR	6309459	Callee	INT_ATTR		6308673	0					
ANR	6309460	Identifier	INT_ATTR		6308673	0					
ANR	6309461	ArgumentList	& ad		6308673	1					
ANR	6309462	Argument	& ad		6308673	0					
ANR	6309463	UnaryOperationExpression	& ad		6308673	0					
ANR	6309464	UnaryOperator	&		6308673	0					
ANR	6309465	Identifier	ad		6308673	1					
ANR	6309466	ElseStatement	else		6308673	0					
ANR	6309467	IfStatement	if ( ! ( type . t & VT_ARRAY ) )		6308673	0					
ANR	6309468	Condition	! ( type . t & VT_ARRAY )	3185:16:74389:74408	6308673	0	True				
ANR	6309469	UnaryOperationExpression	! ( type . t & VT_ARRAY )		6308673	0					
ANR	6309470	UnaryOperator	!		6308673	0					
ANR	6309471	BitAndExpression	type . t & VT_ARRAY		6308673	1		&			
ANR	6309472	MemberAccess	type . t		6308673	0					
ANR	6309473	Identifier	type		6308673	0					
ANR	6309474	Identifier	t		6308673	1					
ANR	6309475	Identifier	VT_ARRAY		6308673	1					
ANR	6309476	CompoundStatement		166:38:4251:4251	6308673	1					
ANR	6309477	ExpressionStatement	r |= lvalue_type ( type . t )	3187:6:74451:74476	6308673	0	True				
ANR	6309478	AssignmentExpression	r |= lvalue_type ( type . t )		6308673	0		|=			
ANR	6309479	Identifier	r		6308673	0					
ANR	6309480	CallExpression	lvalue_type ( type . t )		6308673	1					
ANR	6309481	Callee	lvalue_type		6308673	0					
ANR	6309482	Identifier	lvalue_type		6308673	0					
ANR	6309483	ArgumentList	type . t		6308673	1					
ANR	6309484	Argument	type . t		6308673	0					
ANR	6309485	MemberAccess	type . t		6308673	0					
ANR	6309486	Identifier	type		6308673	0					
ANR	6309487	Identifier	t		6308673	1					
ANR	6309488	ExpressionStatement	has_init = ( tok == '=' )	3189:5:74490:74513	6308673	2	True				
ANR	6309489	AssignmentExpression	has_init = ( tok == '=' )		6308673	0		=			
ANR	6309490	Identifier	has_init		6308673	0					
ANR	6309491	EqualityExpression	tok == '='		6308673	1		==			
ANR	6309492	Identifier	tok		6308673	0					
ANR	6309493	PrimaryExpression	'='		6308673	1					
ANR	6309494	IfStatement	if ( has_init && ( type . t & VT_VLA ) )		6308673	3					
ANR	6309495	Condition	has_init && ( type . t & VT_VLA )	3190:9:74524:74552	6308673	0	True				
ANR	6309496	AndExpression	has_init && ( type . t & VT_VLA )		6308673	0		&&			
ANR	6309497	Identifier	has_init		6308673	0					
ANR	6309498	BitAndExpression	type . t & VT_VLA		6308673	1		&			
ANR	6309499	MemberAccess	type . t		6308673	0					
ANR	6309500	Identifier	type		6308673	0					
ANR	6309501	Identifier	t		6308673	1					
ANR	6309502	Identifier	VT_VLA		6308673	1					
ANR	6309503	CompoundStatement		171:40:4395:4395	6308673	1					
ANR	6309504	ExpressionStatement	"tcc_error ( ""Variable length array cannot be initialized"" )"	3191:6:74563:74620	6308673	0	True				
ANR	6309505	CallExpression	"tcc_error ( ""Variable length array cannot be initialized"" )"		6308673	0					
ANR	6309506	Callee	tcc_error		6308673	0					
ANR	6309507	Identifier	tcc_error		6308673	0					
ANR	6309508	ArgumentList	"""Variable length array cannot be initialized"""		6308673	1					
ANR	6309509	Argument	"""Variable length array cannot be initialized"""		6308673	0					
ANR	6309510	PrimaryExpression	"""Variable length array cannot be initialized"""		6308673	0					
ANR	6309511	ReturnStatement	return 1 ;	3192:6:74628:74636	6308673	1	True				
ANR	6309512	PrimaryExpression	1		6308673	0					
ANR	6309513	IfStatement	"if ( tok != ',' )"		6308673	1					
ANR	6309514	Condition	"tok != ','"	3195:8:74659:74668	6308673	0	True				
ANR	6309515	EqualityExpression	"tok != ','"		6308673	0		!=			
ANR	6309516	Identifier	tok		6308673	0					
ANR	6309517	PrimaryExpression	"','"		6308673	1					
ANR	6309518	CompoundStatement		176:20:4511:4511	6308673	1					
ANR	6309519	IfStatement	if ( is_for_loop_init )		6308673	0					
ANR	6309520	Condition	is_for_loop_init	3196:9:74682:74697	6308673	0	True				
ANR	6309521	Identifier	is_for_loop_init		6308673	0					
ANR	6309522	CompoundStatement		177:27:4540:4540	6308673	1					
ANR	6309523	ReturnStatement	return 1 ;	3197:6:74708:74716	6308673	0	True				
ANR	6309524	PrimaryExpression	1		6308673	0					
ANR	6309525	ExpressionStatement	skip ( ';' )	3199:5:74730:74740	6308673	1	True				
ANR	6309526	CallExpression	skip ( ';' )		6308673	0					
ANR	6309527	Callee	skip		6308673	0					
ANR	6309528	Identifier	skip		6308673	0					
ANR	6309529	ArgumentList	';'		6308673	1					
ANR	6309530	Argument	';'		6308673	0					
ANR	6309531	PrimaryExpression	';'		6308673	0					
ANR	6309532	BreakStatement	break ;	3200:5:74747:74752	6308673	2	True				
ANR	6309533	ExpressionStatement	next ( )	3202:4:74764:74771	6308673	2	True				
ANR	6309534	CallExpression	next ( )		6308673	0					
ANR	6309535	Callee	next		6308673	0					
ANR	6309536	Identifier	next		6308673	0					
ANR	6309537	ArgumentList			6308673	1					
ANR	6309538	ExpressionStatement	ad . aligned = 0	3204:3:74781:74795	6308673	8	True				
ANR	6309539	AssignmentExpression	ad . aligned = 0		6308673	0		=			
ANR	6309540	MemberAccess	ad . aligned		6308673	0					
ANR	6309541	Identifier	ad		6308673	0					
ANR	6309542	Identifier	aligned		6308673	1					
ANR	6309543	PrimaryExpression	0		6308673	1					
ANR	6309544	ReturnStatement	return 0 ;	3207:1:74805:74813	6308673	13	True				
ANR	6309545	PrimaryExpression	0		6308673	0					
ANR	6309546	ReturnType	static int		6308673	1					
ANR	6309547	Identifier	decl0		6308673	2					
ANR	6309548	ParameterList	"int l , int is_for_loop_init"		6308673	3					
ANR	6309549	Parameter	int l	3020:17:70130:70134	6308673	0	True				
ANR	6309550	ParameterType	int		6308673	0					
ANR	6309551	Identifier	l		6308673	1					
ANR	6309552	Parameter	int is_for_loop_init	3020:24:70137:70156	6308673	1	True				
ANR	6309553	ParameterType	int		6308673	0					
ANR	6309554	Identifier	is_for_loop_init		6308673	1					
ANR	6309555	CFGEntryNode	ENTRY		6308673		True				
ANR	6309556	CFGExitNode	EXIT		6308673		True				
ANR	6309557	Symbol	VT_IMPORT		6308673						
ANR	6309558	Symbol	get_tok_str		6308673						
ANR	6309559	Symbol	btype		6308673						
ANR	6309560	Symbol	sym -> type		6308673						
ANR	6309561	Symbol	type . ref -> r		6308673						
ANR	6309562	Symbol	type . t		6308673						
ANR	6309563	Symbol	sym -> type . ref -> r		6308673						
ANR	6309564	Symbol	type		6308673						
ANR	6309565	Symbol	* type . ref		6308673						
ANR	6309566	Symbol	type . ref		6308673						
ANR	6309567	Symbol	* * sym		6308673						
ANR	6309568	Symbol	* sym -> type . ref		6308673						
ANR	6309569	Symbol	parse_btype		6308673						
ANR	6309570	Symbol	VT_CONST		6308673						
ANR	6309571	Symbol	ad . func_import		6308673						
ANR	6309572	Symbol	NULL		6308673						
ANR	6309573	Symbol	ad		6308673						
ANR	6309574	Symbol	TOK_ASM3		6308673						
ANR	6309575	Symbol	TOK_ASM2		6308673						
ANR	6309576	Symbol	& type		6308673						
ANR	6309577	Symbol	FUNC_CDECL		6308673						
ANR	6309578	Symbol	TOK_ASM1		6308673						
ANR	6309579	Symbol	VT_LOCAL		6308673						
ANR	6309580	Symbol	tcc_nerr		6308673						
ANR	6309581	Symbol	VT_BTYPE		6308673						
ANR	6309582	Symbol	VT_FUNC		6308673						
ANR	6309583	Symbol	~VT_EXTERN		6308673						
ANR	6309584	Symbol	* sym		6308673						
ANR	6309585	Symbol	btype . t		6308673						
ANR	6309586	Symbol	FUNC_CALL		6308673						
ANR	6309587	Symbol	TOK_DEFINE		6308673						
ANR	6309588	Symbol	sym -> c		6308673						
ANR	6309589	Symbol	VT_STATIC		6308673						
ANR	6309590	Symbol	& btype		6308673						
ANR	6309591	Symbol	TYPE_DIRECT		6308673						
ANR	6309592	Symbol	sym		6308673						
ANR	6309593	Symbol	VT_VLA		6308673						
ANR	6309594	Symbol	sym -> type . ref		6308673						
ANR	6309595	Symbol	VT_TYPEDEF		6308673						
ANR	6309596	Symbol	VT_WEAK		6308673						
ANR	6309597	Symbol	& ad		6308673						
ANR	6309598	Symbol	VT_EXTERN		6308673						
ANR	6309599	Symbol	tok		6308673						
ANR	6309600	Symbol	sym -> v		6308673						
ANR	6309601	Symbol	is_compatible_types		6308673						
ANR	6309602	Symbol	sym_find		6308673						
ANR	6309603	Symbol	* type		6308673						
ANR	6309604	Symbol	sym -> type . t		6308673						
ANR	6309605	Symbol	* sym -> type		6308673						
ANR	6309606	Symbol	& sym -> type		6308673						
ANR	6309607	Symbol	ad . func_export		6308673						
ANR	6309608	Symbol	VT_EXPORT		6308673						
ANR	6309609	Symbol	alias		6308673						
ANR	6309610	Symbol	VT_INT32		6308673						
ANR	6309611	Symbol	sym -> next		6308673						
ANR	6309612	Symbol	is_enum		6308673						
ANR	6309613	Symbol	ad . weak		6308673						
ANR	6309614	Symbol	is_for_loop_init		6308673						
ANR	6309615	Symbol	VT_INLINE		6308673						
ANR	6309616	Symbol	l		6308673						
ANR	6309617	Symbol	INT_ATTR		6308673						
ANR	6309618	Symbol	FUNC_EXPORT		6308673						
ANR	6309619	Symbol	ad . aligned		6308673						
ANR	6309620	Symbol	r		6308673						
ANR	6309621	Symbol	buf		6308673						
ANR	6309622	Symbol	lvalue_type		6308673						
ANR	6309623	Symbol	~SYM_FIELD		6308673						
ANR	6309624	Symbol	t		6308673						
ANR	6309625	Symbol	has_init		6308673						
ANR	6309626	Symbol	global_identifier_push		6308673						
ANR	6309627	Symbol	v		6308673						
ANR	6309628	Symbol	FUNC_OLD		6308673						
ANR	6309629	Symbol	is_structured		6308673						
ANR	6309630	Symbol	sym_push		6308673						
ANR	6309631	Symbol	& v		6308673						
ANR	6309632	Symbol	VT_ARRAY		6308673						
ANR	6309633	Function	decl	3210:0:74818:74860							
ANR	6309634	FunctionDef	decl (int l)		6309633	0					
ANR	6309635	CompoundStatement		3210:25:74843:74860	6309633	0					
ANR	6309636	ExpressionStatement	"decl0 ( l , 0 )"	3211:1:74846:74858	6309633	0	True				
ANR	6309637	CallExpression	"decl0 ( l , 0 )"		6309633	0					
ANR	6309638	Callee	decl0		6309633	0					
ANR	6309639	Identifier	decl0		6309633	0					
ANR	6309640	ArgumentList	l		6309633	1					
ANR	6309641	Argument	l		6309633	0					
ANR	6309642	Identifier	l		6309633	0					
ANR	6309643	Argument	0		6309633	1					
ANR	6309644	PrimaryExpression	0		6309633	0					
ANR	6309645	ReturnType	ST_FUNC void		6309633	1					
ANR	6309646	Identifier	decl		6309633	2					
ANR	6309647	ParameterList	int l		6309633	3					
ANR	6309648	Parameter	int l	3210:18:74836:74840	6309633	0	True				
ANR	6309649	ParameterType	int		6309633	0					
ANR	6309650	Identifier	l		6309633	1					
ANR	6309651	CFGEntryNode	ENTRY		6309633		True				
ANR	6309652	CFGExitNode	EXIT		6309633		True				
ANR	6309653	Symbol	l		6309633						
