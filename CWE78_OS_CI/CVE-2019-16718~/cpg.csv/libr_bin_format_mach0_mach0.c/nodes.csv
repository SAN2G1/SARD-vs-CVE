command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3622597	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_mach0_mach0.c								
ANR	3622598	ClassDef	_ulebr	13:8:308:340							
ANR	3622599	DeclStmt									
ANR	3622600	Decl							ut8	ut8 *	p
ANR	3622601	DeclStmt									
ANR	3622602	Decl							_ulebr	_ulebr	ulebr
ANR	3622603	ClassDef	<unnamed>	17:8:351:437							
ANR	3622604	DeclStmt									
ANR	3622605	Decl							struct symbol_t	struct symbol_t *	symbols
ANR	3622606	DeclStmt									
ANR	3622607	Decl							int	int	j
ANR	3622608	DeclStmt									
ANR	3622609	Decl							int	int	symbols_count
ANR	3622610	DeclStmt									
ANR	3622611	Decl							HtPP	HtPP *	hash
ANR	3622612	DeclStmt									
ANR	3622613	Decl									RSymCtx
ANR	3622614	ClassDef	<unnamed>	26:8:564:637							
ANR	3622615	DeclStmt									
ANR	3622616	Decl							ut8	ut8 *	node
ANR	3622617	DeclStmt									
ANR	3622618	Decl							char	char *	label
ANR	3622619	DeclStmt									
ANR	3622620	Decl							int	int	i
ANR	3622621	DeclStmt									
ANR	3622622	Decl							ut8	ut8 *	next_child
ANR	3622623	DeclStmt									
ANR	3622624	Decl									RTrieState
ANR	3622625	Function	read_uleb128	37:0:816:1236							
ANR	3622626	FunctionDef	"read_uleb128 (ulebr * r , ut8 * end)"		3622625	0					
ANR	3622627	CompoundStatement		37:45:861:1236	3622625	0					
ANR	3622628	IdentifierDeclStatement	ut64 result = 0 ;	38:1:864:879	3622625	0	True				
ANR	3622629	IdentifierDecl	result = 0		3622625	0					
ANR	3622630	IdentifierDeclType	ut64		3622625	0					
ANR	3622631	Identifier	result		3622625	1					
ANR	3622632	AssignmentExpression	result = 0		3622625	2		=			
ANR	3622633	Identifier	result		3622625	0					
ANR	3622634	PrimaryExpression	0		3622625	1					
ANR	3622635	IdentifierDeclStatement	int bit = 0 ;	39:1:882:893	3622625	1	True				
ANR	3622636	IdentifierDecl	bit = 0		3622625	0					
ANR	3622637	IdentifierDeclType	int		3622625	0					
ANR	3622638	Identifier	bit		3622625	1					
ANR	3622639	AssignmentExpression	bit = 0		3622625	2		=			
ANR	3622640	Identifier	bit		3622625	0					
ANR	3622641	PrimaryExpression	0		3622625	1					
ANR	3622642	IdentifierDeclStatement	ut64 slice = 0 ;	40:1:896:910	3622625	2	True				
ANR	3622643	IdentifierDecl	slice = 0		3622625	0					
ANR	3622644	IdentifierDeclType	ut64		3622625	0					
ANR	3622645	Identifier	slice		3622625	1					
ANR	3622646	AssignmentExpression	slice = 0		3622625	2		=			
ANR	3622647	Identifier	slice		3622625	0					
ANR	3622648	PrimaryExpression	0		3622625	1					
ANR	3622649	IdentifierDeclStatement	ut8 * p = r -> p ;	41:1:913:926	3622625	3	True				
ANR	3622650	IdentifierDecl	* p = r -> p		3622625	0					
ANR	3622651	IdentifierDeclType	ut8 *		3622625	0					
ANR	3622652	Identifier	p		3622625	1					
ANR	3622653	AssignmentExpression	* p = r -> p		3622625	2		=			
ANR	3622654	Identifier	p		3622625	0					
ANR	3622655	PtrMemberAccess	r -> p		3622625	1					
ANR	3622656	Identifier	r		3622625	0					
ANR	3622657	Identifier	p		3622625	1					
ANR	3622658	DoStatement	do		3622625	4					
ANR	3622659	CompoundStatement		6:4:70:70	3622625	0					
ANR	3622660	IfStatement	if ( p == end )		3622625	0					
ANR	3622661	Condition	p == end	43:6:940:947	3622625	0	True				
ANR	3622662	EqualityExpression	p == end		3622625	0		==			
ANR	3622663	Identifier	p		3622625	0					
ANR	3622664	Identifier	end		3622625	1					
ANR	3622665	CompoundStatement		7:16:88:88	3622625	1					
ANR	3622666	ExpressionStatement	"eprintf ( ""malformed uleb128\\n"" )"	44:3:955:986	3622625	0	True				
ANR	3622667	CallExpression	"eprintf ( ""malformed uleb128\\n"" )"		3622625	0					
ANR	3622668	Callee	eprintf		3622625	0					
ANR	3622669	Identifier	eprintf		3622625	0					
ANR	3622670	ArgumentList	"""malformed uleb128\\n"""		3622625	1					
ANR	3622671	Argument	"""malformed uleb128\\n"""		3622625	0					
ANR	3622672	PrimaryExpression	"""malformed uleb128\\n"""		3622625	0					
ANR	3622673	BreakStatement	break ;	45:3:991:996	3622625	1	True				
ANR	3622674	ExpressionStatement	slice = * p & 0x7f	47:2:1004:1021	3622625	1	True				
ANR	3622675	AssignmentExpression	slice = * p & 0x7f		3622625	0		=			
ANR	3622676	Identifier	slice		3622625	0					
ANR	3622677	BitAndExpression	* p & 0x7f		3622625	1		&			
ANR	3622678	UnaryOperationExpression	* p		3622625	0					
ANR	3622679	UnaryOperator	*		3622625	0					
ANR	3622680	Identifier	p		3622625	1					
ANR	3622681	PrimaryExpression	0x7f		3622625	1					
ANR	3622682	IfStatement	if ( bit > 63 )		3622625	2					
ANR	3622683	Condition	bit > 63	48:6:1029:1036	3622625	0	True				
ANR	3622684	RelationalExpression	bit > 63		3622625	0		>			
ANR	3622685	Identifier	bit		3622625	0					
ANR	3622686	PrimaryExpression	63		3622625	1					
ANR	3622687	CompoundStatement		12:16:177:177	3622625	1					
ANR	3622688	Statement	eprintf	49:3:1044:1050	3622625	0	True				
ANR	3622689	Statement	(	49:11:1052:1052	3622625	1	True				
ANR	3622690	Statement	"""uleb128 too big for uint64, bit=%d, result=0x%"""	49:12:1053:1100	3622625	2	True				
ANR	3622691	Statement	PFMT64x	49:60:1101:1107	3622625	3	True				
ANR	3622692	Statement	"""\\n"""	49:67:1108:1111	3622625	4	True				
ANR	3622693	Statement	","	49:71:1112:1112	3622625	5	True				
ANR	3622694	Statement	bit	49:73:1114:1116	3622625	6	True				
ANR	3622695	Statement	","	49:76:1117:1117	3622625	7	True				
ANR	3622696	Statement	result	49:78:1119:1124	3622625	8	True				
ANR	3622697	Statement	)	49:84:1125:1125	3622625	9	True				
ANR	3622698	ExpressionStatement		49:85:1126:1126	3622625	10	True				
ANR	3622699	ElseStatement	else		3622625	0					
ANR	3622700	CompoundStatement		14:9:275:275	3622625	0					
ANR	3622701	ExpressionStatement	result |= ( slice << bit )	51:3:1142:1166	3622625	0	True				
ANR	3622702	AssignmentExpression	result |= ( slice << bit )		3622625	0		|=			
ANR	3622703	Identifier	result		3622625	0					
ANR	3622704	ShiftExpression	slice << bit		3622625	1		<<			
ANR	3622705	Identifier	slice		3622625	0					
ANR	3622706	Identifier	bit		3622625	1					
ANR	3622707	ExpressionStatement	bit += 7	52:3:1171:1179	3622625	1	True				
ANR	3622708	AssignmentExpression	bit += 7		3622625	0		+=			
ANR	3622709	Identifier	bit		3622625	0					
ANR	3622710	PrimaryExpression	7		3622625	1					
ANR	3622711	Condition	* p ++ & 0x80	54:10:1195:1205	3622625	1	True				
ANR	3622712	BitAndExpression	* p ++ & 0x80		3622625	0		&			
ANR	3622713	UnaryOperationExpression	* p ++		3622625	0					
ANR	3622714	UnaryOperator	*		3622625	0					
ANR	3622715	PostIncDecOperationExpression	p ++		3622625	1					
ANR	3622716	Identifier	p		3622625	0					
ANR	3622717	IncDec	++		3622625	1					
ANR	3622718	PrimaryExpression	0x80		3622625	1					
ANR	3622719	ExpressionStatement	r -> p = p	55:1:1210:1218	3622625	5	True				
ANR	3622720	AssignmentExpression	r -> p = p		3622625	0		=			
ANR	3622721	PtrMemberAccess	r -> p		3622625	0					
ANR	3622722	Identifier	r		3622625	0					
ANR	3622723	Identifier	p		3622625	1					
ANR	3622724	Identifier	p		3622625	1					
ANR	3622725	ReturnStatement	return result ;	56:1:1221:1234	3622625	6	True				
ANR	3622726	Identifier	result		3622625	0					
ANR	3622727	ReturnType	static ut64		3622625	1					
ANR	3622728	Identifier	read_uleb128		3622625	2					
ANR	3622729	ParameterList	"ulebr * r , ut8 * end"		3622625	3					
ANR	3622730	Parameter	ulebr * r	37:25:841:848	3622625	0	True				
ANR	3622731	ParameterType	ulebr *		3622625	0					
ANR	3622732	Identifier	r		3622625	1					
ANR	3622733	Parameter	ut8 * end	37:35:851:858	3622625	1	True				
ANR	3622734	ParameterType	ut8 *		3622625	0					
ANR	3622735	Identifier	end		3622625	1					
ANR	3622736	CFGEntryNode	ENTRY		3622625		True				
ANR	3622737	CFGExitNode	EXIT		3622625		True				
ANR	3622738	Symbol	result		3622625						
ANR	3622739	Symbol	p		3622625						
ANR	3622740	Symbol	r		3622625						
ANR	3622741	Symbol	slice		3622625						
ANR	3622742	Symbol	* p ++		3622625						
ANR	3622743	Symbol	end		3622625						
ANR	3622744	Symbol	* p		3622625						
ANR	3622745	Symbol	bit		3622625						
ANR	3622746	Symbol	* r		3622625						
ANR	3622747	Symbol	r -> p		3622625						
ANR	3622748	Function	read_sleb128	59:0:1239:1712							
ANR	3622749	FunctionDef	"read_sleb128 (ulebr * r , ut8 * end)"		3622748	0					
ANR	3622750	CompoundStatement		59:45:1284:1712	3622748	0					
ANR	3622751	IdentifierDeclStatement	st64 result = 0 ;	60:1:1287:1302	3622748	0	True				
ANR	3622752	IdentifierDecl	result = 0		3622748	0					
ANR	3622753	IdentifierDeclType	st64		3622748	0					
ANR	3622754	Identifier	result		3622748	1					
ANR	3622755	AssignmentExpression	result = 0		3622748	2		=			
ANR	3622756	Identifier	result		3622748	0					
ANR	3622757	PrimaryExpression	0		3622748	1					
ANR	3622758	IdentifierDeclStatement	int bit = 0 ;	61:1:1305:1316	3622748	1	True				
ANR	3622759	IdentifierDecl	bit = 0		3622748	0					
ANR	3622760	IdentifierDeclType	int		3622748	0					
ANR	3622761	Identifier	bit		3622748	1					
ANR	3622762	AssignmentExpression	bit = 0		3622748	2		=			
ANR	3622763	Identifier	bit		3622748	0					
ANR	3622764	PrimaryExpression	0		3622748	1					
ANR	3622765	IdentifierDeclStatement	ut8 byte = 0 ;	62:1:1319:1331	3622748	2	True				
ANR	3622766	IdentifierDecl	byte = 0		3622748	0					
ANR	3622767	IdentifierDeclType	ut8		3622748	0					
ANR	3622768	Identifier	byte		3622748	1					
ANR	3622769	AssignmentExpression	byte = 0		3622748	2		=			
ANR	3622770	Identifier	byte		3622748	0					
ANR	3622771	PrimaryExpression	0		3622748	1					
ANR	3622772	IdentifierDeclStatement	ut8 * p = r -> p ;	63:1:1334:1347	3622748	3	True				
ANR	3622773	IdentifierDecl	* p = r -> p		3622748	0					
ANR	3622774	IdentifierDeclType	ut8 *		3622748	0					
ANR	3622775	Identifier	p		3622748	1					
ANR	3622776	AssignmentExpression	* p = r -> p		3622748	2		=			
ANR	3622777	Identifier	p		3622748	0					
ANR	3622778	PtrMemberAccess	r -> p		3622748	1					
ANR	3622779	Identifier	r		3622748	0					
ANR	3622780	Identifier	p		3622748	1					
ANR	3622781	DoStatement	do		3622748	4					
ANR	3622782	CompoundStatement		6:4:68:68	3622748	0					
ANR	3622783	IfStatement	if ( p == end )		3622748	0					
ANR	3622784	Condition	p == end	65:6:1361:1368	3622748	0	True				
ANR	3622785	EqualityExpression	p == end		3622748	0		==			
ANR	3622786	Identifier	p		3622748	0					
ANR	3622787	Identifier	end		3622748	1					
ANR	3622788	CompoundStatement		7:16:86:86	3622748	1					
ANR	3622789	ExpressionStatement	"eprintf ( ""malformed sleb128\\n"" )"	66:3:1376:1407	3622748	0	True				
ANR	3622790	CallExpression	"eprintf ( ""malformed sleb128\\n"" )"		3622748	0					
ANR	3622791	Callee	eprintf		3622748	0					
ANR	3622792	Identifier	eprintf		3622748	0					
ANR	3622793	ArgumentList	"""malformed sleb128\\n"""		3622748	1					
ANR	3622794	Argument	"""malformed sleb128\\n"""		3622748	0					
ANR	3622795	PrimaryExpression	"""malformed sleb128\\n"""		3622748	0					
ANR	3622796	BreakStatement	break ;	67:3:1412:1417	3622748	1	True				
ANR	3622797	ExpressionStatement	byte = * p ++	69:2:1425:1436	3622748	1	True				
ANR	3622798	AssignmentExpression	byte = * p ++		3622748	0		=			
ANR	3622799	Identifier	byte		3622748	0					
ANR	3622800	UnaryOperationExpression	* p ++		3622748	1					
ANR	3622801	UnaryOperator	*		3622748	0					
ANR	3622802	PostIncDecOperationExpression	p ++		3622748	1					
ANR	3622803	Identifier	p		3622748	0					
ANR	3622804	IncDec	++		3622748	1					
ANR	3622805	ExpressionStatement	result |= ( ( ( st64 ) ( byte & 0x7f ) ) << bit )	70:2:1440:1480	3622748	2	True				
ANR	3622806	AssignmentExpression	result |= ( ( ( st64 ) ( byte & 0x7f ) ) << bit )		3622748	0		|=			
ANR	3622807	Identifier	result		3622748	0					
ANR	3622808	ShiftExpression	( ( st64 ) ( byte & 0x7f ) ) << bit		3622748	1		<<			
ANR	3622809	CastExpression	( st64 ) ( byte & 0x7f )		3622748	0					
ANR	3622810	CastTarget	st64		3622748	0					
ANR	3622811	BitAndExpression	byte & 0x7f		3622748	1		&			
ANR	3622812	Identifier	byte		3622748	0					
ANR	3622813	PrimaryExpression	0x7f		3622748	1					
ANR	3622814	Identifier	bit		3622748	1					
ANR	3622815	ExpressionStatement	bit += 7	71:2:1484:1492	3622748	3	True				
ANR	3622816	AssignmentExpression	bit += 7		3622748	0		+=			
ANR	3622817	Identifier	bit		3622748	0					
ANR	3622818	PrimaryExpression	7		3622748	1					
ANR	3622819	IfStatement	if ( bit > 63 )		3622748	4					
ANR	3622820	Condition	bit > 63	72:6:1500:1507	3622748	0	True				
ANR	3622821	RelationalExpression	bit > 63		3622748	0		>			
ANR	3622822	Identifier	bit		3622748	0					
ANR	3622823	PrimaryExpression	63		3622748	1					
ANR	3622824	CompoundStatement		14:16:225:225	3622748	1					
ANR	3622825	ExpressionStatement	"eprintf ( ""too large sleb128 shift\\n"" )"	73:3:1515:1552	3622748	0	True				
ANR	3622826	CallExpression	"eprintf ( ""too large sleb128 shift\\n"" )"		3622748	0					
ANR	3622827	Callee	eprintf		3622748	0					
ANR	3622828	Identifier	eprintf		3622748	0					
ANR	3622829	ArgumentList	"""too large sleb128 shift\\n"""		3622748	1					
ANR	3622830	Argument	"""too large sleb128 shift\\n"""		3622748	0					
ANR	3622831	PrimaryExpression	"""too large sleb128 shift\\n"""		3622748	0					
ANR	3622832	ReturnStatement	return result ;	74:3:1557:1570	3622748	1	True				
ANR	3622833	Identifier	result		3622748	0					
ANR	3622834	Condition	byte & 0x80	76:10:1586:1596	3622748	1	True				
ANR	3622835	BitAndExpression	byte & 0x80		3622748	0		&			
ANR	3622836	Identifier	byte		3622748	0					
ANR	3622837	PrimaryExpression	0x80		3622748	1					
ANR	3622838	IfStatement	if ( ( byte & 0x40 ) )		3622748	5					
ANR	3622839	Condition	byte & 0x40	78:5:1638:1650	3622748	0	True				
ANR	3622840	BitAndExpression	byte & 0x40		3622748	0		&			
ANR	3622841	Identifier	byte		3622748	0					
ANR	3622842	PrimaryExpression	0x40		3622748	1					
ANR	3622843	CompoundStatement		20:20:368:368	3622748	1					
ANR	3622844	Statement	result	79:2:1657:1662	3622748	0	True				
ANR	3622845	Statement	|=	79:9:1664:1665	3622748	1	True				
ANR	3622846	Statement	(	79:12:1667:1667	3622748	2	True				
ANR	3622847	Statement	-	79:13:1668:1668	3622748	3	True				
ANR	3622848	Statement	1L	79:14:1669:1670	3622748	4	True				
ANR	3622849	Statement	L	79:16:1671:1671	3622748	5	True				
ANR	3622850	Statement	)	79:17:1672:1672	3622748	6	True				
ANR	3622851	Statement	<<	79:19:1674:1675	3622748	7	True				
ANR	3622852	ExpressionStatement	bit	79:22:1677:1680	3622748	8	True				
ANR	3622853	Identifier	bit		3622748	0					
ANR	3622854	ExpressionStatement	r -> p = p	81:1:1686:1694	3622748	6	True				
ANR	3622855	AssignmentExpression	r -> p = p		3622748	0		=			
ANR	3622856	PtrMemberAccess	r -> p		3622748	0					
ANR	3622857	Identifier	r		3622748	0					
ANR	3622858	Identifier	p		3622748	1					
ANR	3622859	Identifier	p		3622748	1					
ANR	3622860	ReturnStatement	return result ;	82:1:1697:1710	3622748	7	True				
ANR	3622861	Identifier	result		3622748	0					
ANR	3622862	ReturnType	static st64		3622748	1					
ANR	3622863	Identifier	read_sleb128		3622748	2					
ANR	3622864	ParameterList	"ulebr * r , ut8 * end"		3622748	3					
ANR	3622865	Parameter	ulebr * r	59:25:1264:1271	3622748	0	True				
ANR	3622866	ParameterType	ulebr *		3622748	0					
ANR	3622867	Identifier	r		3622748	1					
ANR	3622868	Parameter	ut8 * end	59:35:1274:1281	3622748	1	True				
ANR	3622869	ParameterType	ut8 *		3622748	0					
ANR	3622870	Identifier	end		3622748	1					
ANR	3622871	CFGEntryNode	ENTRY		3622748		True				
ANR	3622872	CFGExitNode	EXIT		3622748		True				
ANR	3622873	Symbol	result		3622748						
ANR	3622874	Symbol	p		3622748						
ANR	3622875	Symbol	r		3622748						
ANR	3622876	Symbol	byte		3622748						
ANR	3622877	Symbol	* p ++		3622748						
ANR	3622878	Symbol	end		3622748						
ANR	3622879	Symbol	bit		3622748						
ANR	3622880	Symbol	* r		3622748						
ANR	3622881	Symbol	r -> p		3622748						
ANR	3622882	DeclStmt									
ANR	3622883	Decl							ut64	ut64	segment_base
ANR	3622884	Decl							ut64	ut64	segment_size
ANR	3622885	DeclStmt									
ANR	3622886	Decl							int	int	i
ANR	3622887	DeclStmt									
ANR	3622888	Decl							ut64	ut64	segment_base
ANR	3622889	Decl							ut64	ut64	segment_size
ANR	3622890	DeclStmt									
ANR	3622891	Decl							int	int	i
ANR	3622892	Function	pa2va	131:0:2774:3048							
ANR	3622893	FunctionDef	"pa2va (RBinFile * bf , ut64 offset)"		3622892	0					
ANR	3622894	CompoundStatement		131:45:2819:3048	3622892	0					
ANR	3622895	IfStatement	if ( ! bf || ! bf -> rbin )		3622892	0					
ANR	3622896	Condition	! bf || ! bf -> rbin	132:5:2826:2841	3622892	0	True				
ANR	3622897	OrExpression	! bf || ! bf -> rbin		3622892	0		||			
ANR	3622898	UnaryOperationExpression	! bf		3622892	0					
ANR	3622899	UnaryOperator	!		3622892	0					
ANR	3622900	Identifier	bf		3622892	1					
ANR	3622901	UnaryOperationExpression	! bf -> rbin		3622892	1					
ANR	3622902	UnaryOperator	!		3622892	0					
ANR	3622903	PtrMemberAccess	bf -> rbin		3622892	1					
ANR	3622904	Identifier	bf		3622892	0					
ANR	3622905	Identifier	rbin		3622892	1					
ANR	3622906	CompoundStatement		2:23:24:24	3622892	1					
ANR	3622907	ReturnStatement	return offset ;	133:2:2848:2861	3622892	0	True				
ANR	3622908	Identifier	offset		3622892	0					
ANR	3622909	IdentifierDeclStatement	RIO * io = bf -> rbin -> iob . io ;	135:1:2867:2893	3622892	1	True				
ANR	3622910	IdentifierDecl	* io = bf -> rbin -> iob . io		3622892	0					
ANR	3622911	IdentifierDeclType	RIO *		3622892	0					
ANR	3622912	Identifier	io		3622892	1					
ANR	3622913	AssignmentExpression	* io = bf -> rbin -> iob . io		3622892	2		=			
ANR	3622914	Identifier	io		3622892	0					
ANR	3622915	MemberAccess	bf -> rbin -> iob . io		3622892	1					
ANR	3622916	PtrMemberAccess	bf -> rbin -> iob		3622892	0					
ANR	3622917	PtrMemberAccess	bf -> rbin		3622892	0					
ANR	3622918	Identifier	bf		3622892	0					
ANR	3622919	Identifier	rbin		3622892	1					
ANR	3622920	Identifier	iob		3622892	1					
ANR	3622921	Identifier	io		3622892	1					
ANR	3622922	IfStatement	if ( ! io -> va )		3622892	2					
ANR	3622923	Condition	! io -> va	136:5:2900:2906	3622892	0	True				
ANR	3622924	UnaryOperationExpression	! io -> va		3622892	0					
ANR	3622925	UnaryOperator	!		3622892	0					
ANR	3622926	PtrMemberAccess	io -> va		3622892	1					
ANR	3622927	Identifier	io		3622892	0					
ANR	3622928	Identifier	va		3622892	1					
ANR	3622929	CompoundStatement		6:14:89:89	3622892	1					
ANR	3622930	ReturnStatement	return offset ;	137:2:2913:2926	3622892	0	True				
ANR	3622931	Identifier	offset		3622892	0					
ANR	3622932	Statement	struct	139:1:2932:2937	3622892	3	True				
ANR	3622933	ExpressionStatement	MACH0_ ( obj_t ) * bin = bf -> o -> bin_obj	139:8:2939:2974	3622892	4	True				
ANR	3622934	AssignmentExpression	MACH0_ ( obj_t ) * bin = bf -> o -> bin_obj		3622892	0		=			
ANR	3622935	MultiplicativeExpression	MACH0_ ( obj_t ) * bin		3622892	0		*			
ANR	3622936	CallExpression	MACH0_ ( obj_t )		3622892	0					
ANR	3622937	Callee	MACH0_		3622892	0					
ANR	3622938	Identifier	MACH0_		3622892	0					
ANR	3622939	ArgumentList	obj_t		3622892	1					
ANR	3622940	Argument	obj_t		3622892	0					
ANR	3622941	Identifier	obj_t		3622892	0					
ANR	3622942	Identifier	bin		3622892	1					
ANR	3622943	PtrMemberAccess	bf -> o -> bin_obj		3622892	1					
ANR	3622944	PtrMemberAccess	bf -> o		3622892	0					
ANR	3622945	Identifier	bf		3622892	0					
ANR	3622946	Identifier	o		3622892	1					
ANR	3622947	Identifier	bin_obj		3622892	1					
ANR	3622948	IfStatement	if ( ! bin )		3622892	5					
ANR	3622949	Condition	! bin	140:5:2981:2984	3622892	0	True				
ANR	3622950	UnaryOperationExpression	! bin		3622892	0					
ANR	3622951	UnaryOperator	!		3622892	0					
ANR	3622952	Identifier	bin		3622892	1					
ANR	3622953	CompoundStatement		10:11:167:167	3622892	1					
ANR	3622954	ReturnStatement	return offset ;	141:2:2991:3004	3622892	0	True				
ANR	3622955	Identifier	offset		3622892	0					
ANR	3622956	ReturnStatement	"return offset_to_vaddr ( bin , offset ) ;"	143:1:3010:3046	3622892	6	True				
ANR	3622957	CallExpression	"offset_to_vaddr ( bin , offset )"		3622892	0					
ANR	3622958	Callee	offset_to_vaddr		3622892	0					
ANR	3622959	Identifier	offset_to_vaddr		3622892	0					
ANR	3622960	ArgumentList	bin		3622892	1					
ANR	3622961	Argument	bin		3622892	0					
ANR	3622962	Identifier	bin		3622892	0					
ANR	3622963	Argument	offset		3622892	1					
ANR	3622964	Identifier	offset		3622892	0					
ANR	3622965	ReturnType	static ut64		3622892	1					
ANR	3622966	Identifier	pa2va		3622892	2					
ANR	3622967	ParameterList	"RBinFile * bf , ut64 offset"		3622892	3					
ANR	3622968	Parameter	RBinFile * bf	131:18:2792:2803	3622892	0	True				
ANR	3622969	ParameterType	RBinFile *		3622892	0					
ANR	3622970	Identifier	bf		3622892	1					
ANR	3622971	Parameter	ut64 offset	131:32:2806:2816	3622892	1	True				
ANR	3622972	ParameterType	ut64		3622892	0					
ANR	3622973	Identifier	offset		3622892	1					
ANR	3622974	CFGEntryNode	ENTRY		3622892		True				
ANR	3622975	CFGExitNode	EXIT		3622892		True				
ANR	3622976	Symbol	bf -> o -> bin_obj		3622892						
ANR	3622977	Symbol	offset_to_vaddr		3622892						
ANR	3622978	Symbol	* bf -> rbin		3622892						
ANR	3622979	Symbol	io -> va		3622892						
ANR	3622980	Symbol	bf		3622892						
ANR	3622981	Symbol	offset		3622892						
ANR	3622982	Symbol	io		3622892						
ANR	3622983	Symbol	bin		3622892						
ANR	3622984	Symbol	obj_t		3622892						
ANR	3622985	Symbol	bf -> rbin -> iob . io		3622892						
ANR	3622986	Symbol	* bf		3622892						
ANR	3622987	Symbol	bf -> rbin		3622892						
ANR	3622988	Symbol	* io		3622892						
ANR	3622989	Symbol	* bf -> o		3622892						
ANR	3622990	Symbol	MACH0_		3622892						
ANR	3622991	Symbol	* * bf		3622892						
ANR	3622992	Symbol	bf -> o		3622892						
ANR	3622993	Symbol	bf -> rbin -> iob		3622892						
ANR	3622994	DeclStmt									
ANR	3622995	Decl							ut8	ut8 [ 4 ]	magicbytes
ANR	3622996	DeclStmt									
ANR	3622997	Decl							ut8	ut8 [ sizeof ( struct MACH0_ ( mach_header ) ) ]	machohdrbytes
ANR	3622998	DeclStmt									
ANR	3622999	Decl							int	int	len
ANR	3623000	DeclStmt									
ANR	3623001	Decl							int	int	i
ANR	3623002	Decl							int	int	j
ANR	3623003	Decl							int	int	k
ANR	3623004	Decl							int	int	sect
ANR	3623005	Decl							int	int	len
ANR	3623006	DeclStmt									
ANR	3623007	Decl							ut32	ut32	size_sects
ANR	3623008	DeclStmt									
ANR	3623009	Decl							ut8	ut8 [ sizeof ( struct MACH0_ ( segment_command ) ) ]	segcom
ANR	3623010	DeclStmt									
ANR	3623011	Decl							ut8	ut8 [ sizeof ( struct MACH0_ ( section ) ) ]	sec
ANR	3623012	DeclStmt									
ANR	3623013	Decl							int	int	new_nsects
ANR	3623014	DeclStmt									
ANR	3623015	Decl							ut64	ut64	offset
ANR	3623016	DeclStmt									
ANR	3623017	Decl							struct symtab_command	struct symtab_command	st
ANR	3623018	DeclStmt									
ANR	3623019	Decl							ut32	ut32	size_sym
ANR	3623020	DeclStmt									
ANR	3623021	Decl							int	int	i
ANR	3623022	DeclStmt									
ANR	3623023	Decl							const char	const char *	errorMessage
ANR	3623024	DeclStmt									
ANR	3623025	Decl							ut8	ut8 [ sizeof ( struct symtab_command ) ]	symt
ANR	3623026	DeclStmt									
ANR	3623027	Decl							ut8	ut8 [ sizeof ( struct MACH0_ ( nlist ) ) ]	nlst
ANR	3623028	DeclStmt									
ANR	3623029	Decl							const bool	const bool	be
ANR	3623030	DeclStmt									
ANR	3623031	Decl							int	int	len
ANR	3623032	DeclStmt									
ANR	3623033	Decl							ut64	ut64	at
ANR	3623034	DeclStmt									
ANR	3623035	Decl							int	int	len
ANR	3623036	Decl							int	int	i
ANR	3623037	DeclStmt									
ANR	3623038	Decl							ut32	ut32	size_tab
ANR	3623039	DeclStmt									
ANR	3623040	Decl							ut8	ut8 [ sizeof ( struct dysymtab_command ) ]	dysym
ANR	3623041	DeclStmt									
ANR	3623042	Decl							ut8	ut8 [ sizeof ( struct dylib_table_of_contents ) ]	dytoc
ANR	3623043	DeclStmt									
ANR	3623044	Decl							ut8	ut8 [ sizeof ( struct MACH0_ ( dylib_module ) ) ]	dymod
ANR	3623045	DeclStmt									
ANR	3623046	Decl							ut8	ut8 [ sizeof ( ut32 ) ]	idsyms
ANR	3623047	Function	readString	717:0:27241:27397							
ANR	3623048	FunctionDef	"readString (ut8 * p , int off , int len)"		3623047	0					
ANR	3623049	CompoundStatement		717:51:27292:27397	3623047	0					
ANR	3623050	IfStatement	if ( off < 0 || off >= len )		3623047	0					
ANR	3623051	Condition	off < 0 || off >= len	718:5:27299:27319	3623047	0	True				
ANR	3623052	OrExpression	off < 0 || off >= len		3623047	0		||			
ANR	3623053	RelationalExpression	off < 0		3623047	0		<			
ANR	3623054	Identifier	off		3623047	0					
ANR	3623055	PrimaryExpression	0		3623047	1					
ANR	3623056	RelationalExpression	off >= len		3623047	1		>=			
ANR	3623057	Identifier	off		3623047	0					
ANR	3623058	Identifier	len		3623047	1					
ANR	3623059	CompoundStatement		2:28:29:29	3623047	1					
ANR	3623060	ReturnStatement	return NULL ;	719:2:27326:27337	3623047	0	True				
ANR	3623061	Identifier	NULL		3623047	0					
ANR	3623062	ReturnStatement	"return r_str_ndup ( ( const char * ) p + off , len - off ) ;"	721:1:27343:27395	3623047	1	True				
ANR	3623063	CallExpression	"r_str_ndup ( ( const char * ) p + off , len - off )"		3623047	0					
ANR	3623064	Callee	r_str_ndup		3623047	0					
ANR	3623065	Identifier	r_str_ndup		3623047	0					
ANR	3623066	ArgumentList	( const char * ) p + off		3623047	1					
ANR	3623067	Argument	( const char * ) p + off		3623047	0					
ANR	3623068	AdditiveExpression	( const char * ) p + off		3623047	0		+			
ANR	3623069	CastExpression	( const char * ) p		3623047	0					
ANR	3623070	CastTarget	const char *		3623047	0					
ANR	3623071	Identifier	p		3623047	1					
ANR	3623072	Identifier	off		3623047	1					
ANR	3623073	Argument	len - off		3623047	1					
ANR	3623074	AdditiveExpression	len - off		3623047	0		-			
ANR	3623075	Identifier	len		3623047	0					
ANR	3623076	Identifier	off		3623047	1					
ANR	3623077	ReturnType	static char *		3623047	1					
ANR	3623078	Identifier	readString		3623047	2					
ANR	3623079	ParameterList	"ut8 * p , int off , int len"		3623047	3					
ANR	3623080	Parameter	ut8 * p	717:25:27266:27271	3623047	0	True				
ANR	3623081	ParameterType	ut8 *		3623047	0					
ANR	3623082	Identifier	p		3623047	1					
ANR	3623083	Parameter	int off	717:33:27274:27280	3623047	1	True				
ANR	3623084	ParameterType	int		3623047	0					
ANR	3623085	Identifier	off		3623047	1					
ANR	3623086	Parameter	int len	717:42:27283:27289	3623047	2	True				
ANR	3623087	ParameterType	int		3623047	0					
ANR	3623088	Identifier	len		3623047	1					
ANR	3623089	CFGEntryNode	ENTRY		3623047		True				
ANR	3623090	CFGExitNode	EXIT		3623047		True				
ANR	3623091	Symbol	p		3623047						
ANR	3623092	Symbol	NULL		3623047						
ANR	3623093	Symbol	len		3623047						
ANR	3623094	Symbol	r_str_ndup		3623047						
ANR	3623095	Symbol	off		3623047						
ANR	3623096	Function	parseCodeDirectory	724:0:27400:31861							
ANR	3623097	FunctionDef	"parseCodeDirectory (RBuffer * b , int offset , int datasize)"		3623096	0					
ANR	3623098	CompoundStatement		724:70:27470:31861	3623096	0					
ANR	3623099	ClassDefStatement	struct __CodeDirectory { uint32_t magic ; uint32_t length ; uint32_t version ; uint32_t flags ; uint32_t hashOffset ; uint32_t identOffset ; uint32_t nSpecialSlots ; uint32_t nCodeSlots ; uint32_t codeLimit ; uint8_t hashSize ; uint8_t hashType ; uint8_t platform ; uint8_t pageSize ; uint32_t spare2 ; uint32_t scatterOffset ; uint32_t teamIDOffset ; uint32_t spare3 ; ut64 codeLimit64 ; ut64 execSegBase ; ut64 execSegLimit ; ut64 execSegFlags ; } CS_CodeDirectory ;	725:9:27481:28560	3623096	0	True				
ANR	3623100	Identifier	__CodeDirectory		3623096	0					
ANR	3623101	IdentifierDecl	CS_CodeDirectory		3623096	1					
ANR	3623102	IdentifierDeclType	__CodeDirectory		3623096	0					
ANR	3623103	Identifier	CS_CodeDirectory		3623096	1					
ANR	3623104	IdentifierDeclStatement	ut64 off = offset ;	749:1:28563:28580	3623096	1	True				
ANR	3623105	IdentifierDecl	off = offset		3623096	0					
ANR	3623106	IdentifierDeclType	ut64		3623096	0					
ANR	3623107	Identifier	off		3623096	1					
ANR	3623108	AssignmentExpression	off = offset		3623096	2		=			
ANR	3623109	Identifier	offset		3623096	0					
ANR	3623110	Identifier	offset		3623096	1					
ANR	3623111	IdentifierDeclStatement	int psize = datasize ;	750:1:28583:28603	3623096	2	True				
ANR	3623112	IdentifierDecl	psize = datasize		3623096	0					
ANR	3623113	IdentifierDeclType	int		3623096	0					
ANR	3623114	Identifier	psize		3623096	1					
ANR	3623115	AssignmentExpression	psize = datasize		3623096	2		=			
ANR	3623116	Identifier	datasize		3623096	0					
ANR	3623117	Identifier	datasize		3623096	1					
ANR	3623118	IdentifierDeclStatement	"ut8 * p = calloc ( 1 , psize ) ;"	751:1:28606:28632	3623096	3	True				
ANR	3623119	IdentifierDecl	"* p = calloc ( 1 , psize )"		3623096	0					
ANR	3623120	IdentifierDeclType	ut8 *		3623096	0					
ANR	3623121	Identifier	p		3623096	1					
ANR	3623122	AssignmentExpression	"* p = calloc ( 1 , psize )"		3623096	2		=			
ANR	3623123	Identifier	p		3623096	0					
ANR	3623124	CallExpression	"calloc ( 1 , psize )"		3623096	1					
ANR	3623125	Callee	calloc		3623096	0					
ANR	3623126	Identifier	calloc		3623096	0					
ANR	3623127	ArgumentList	1		3623096	1					
ANR	3623128	Argument	1		3623096	0					
ANR	3623129	PrimaryExpression	1		3623096	0					
ANR	3623130	Argument	psize		3623096	1					
ANR	3623131	Identifier	psize		3623096	0					
ANR	3623132	IfStatement	if ( ! p )		3623096	4					
ANR	3623133	Condition	! p	752:5:28639:28640	3623096	0	True				
ANR	3623134	UnaryOperationExpression	! p		3623096	0					
ANR	3623135	UnaryOperator	!		3623096	0					
ANR	3623136	Identifier	p		3623096	1					
ANR	3623137	CompoundStatement		29:9:1172:1172	3623096	1					
ANR	3623138	ReturnStatement	return ;	753:2:28647:28653	3623096	0	True				
ANR	3623139	Statement	eprintf	755:1:28659:28665	3623096	5	True				
ANR	3623140	Statement	(	755:9:28667:28667	3623096	6	True				
ANR	3623141	Statement	"""Offset: 0x%08"""	755:10:28668:28682	3623096	7	True				
ANR	3623142	Statement	PFMT64x	755:25:28683:28689	3623096	8	True				
ANR	3623143	Statement	"""\\n"""	755:32:28690:28693	3623096	9	True				
ANR	3623144	Statement	","	755:36:28694:28694	3623096	10	True				
ANR	3623145	Statement	off	755:38:28696:28698	3623096	11	True				
ANR	3623146	Statement	)	755:41:28699:28699	3623096	12	True				
ANR	3623147	ExpressionStatement		755:42:28700:28700	3623096	13	True				
ANR	3623148	ExpressionStatement	"r_buf_read_at ( b , off , p , datasize )"	756:1:28703:28738	3623096	14	True				
ANR	3623149	CallExpression	"r_buf_read_at ( b , off , p , datasize )"		3623096	0					
ANR	3623150	Callee	r_buf_read_at		3623096	0					
ANR	3623151	Identifier	r_buf_read_at		3623096	0					
ANR	3623152	ArgumentList	b		3623096	1					
ANR	3623153	Argument	b		3623096	0					
ANR	3623154	Identifier	b		3623096	0					
ANR	3623155	Argument	off		3623096	1					
ANR	3623156	Identifier	off		3623096	0					
ANR	3623157	Argument	p		3623096	2					
ANR	3623158	Identifier	p		3623096	0					
ANR	3623159	Argument	datasize		3623096	3					
ANR	3623160	Identifier	datasize		3623096	0					
ANR	3623161	IdentifierDeclStatement	CS_CodeDirectory cscd = { 0 } ;	757:1:28741:28768	3623096	15	True				
ANR	3623162	IdentifierDecl	cscd = { 0 }		3623096	0					
ANR	3623163	IdentifierDeclType	CS_CodeDirectory		3623096	0					
ANR	3623164	Identifier	cscd		3623096	1					
ANR	3623165	AssignmentExpression	cscd = { 0 }		3623096	2		=			
ANR	3623166	Identifier	cscd		3623096	0					
ANR	3623167	InitializerList	0		3623096	1					
ANR	3623168	PrimaryExpression	0		3623096	0					
ANR	3623169	Statement	define	758:2:28772:28777	3623096	16	True				
ANR	3623170	Statement	READFIELD	758:9:28779:28787	3623096	17	True				
ANR	3623171	Statement	(	758:18:28788:28788	3623096	18	True				
ANR	3623172	Statement	x	758:19:28789:28789	3623096	19	True				
ANR	3623173	Statement	)	758:20:28790:28790	3623096	20	True				
ANR	3623174	Statement	cscd	758:22:28792:28795	3623096	21	True				
ANR	3623175	Statement	.	758:26:28796:28796	3623096	22	True				
ANR	3623176	Statement	x	758:27:28797:28797	3623096	23	True				
ANR	3623177	Statement	=	758:29:28799:28799	3623096	24	True				
ANR	3623178	Statement	r_read_ble32	758:31:28801:28812	3623096	25	True				
ANR	3623179	Statement	(	758:44:28814:28814	3623096	26	True				
ANR	3623180	Statement	p	758:45:28815:28815	3623096	27	True				
ANR	3623181	Statement	+	758:47:28817:28817	3623096	28	True				
ANR	3623182	Statement	r_offsetof	758:49:28819:28828	3623096	29	True				
ANR	3623183	Statement	(	758:60:28830:28830	3623096	30	True				
ANR	3623184	Statement	CS_CodeDirectory	758:61:28831:28846	3623096	31	True				
ANR	3623185	Statement	","	758:77:28847:28847	3623096	32	True				
ANR	3623186	Statement	x	758:79:28849:28849	3623096	33	True				
ANR	3623187	Statement	)	758:80:28850:28850	3623096	34	True				
ANR	3623188	Statement	","	758:81:28851:28851	3623096	35	True				
ANR	3623189	Statement	1	758:83:28853:28853	3623096	36	True				
ANR	3623190	Statement	)	758:84:28854:28854	3623096	37	True				
ANR	3623191	Statement	define	759:2:28858:28863	3623096	38	True				
ANR	3623192	Statement	READFIELD8	759:9:28865:28874	3623096	39	True				
ANR	3623193	Statement	(	759:19:28875:28875	3623096	40	True				
ANR	3623194	Statement	x	759:20:28876:28876	3623096	41	True				
ANR	3623195	Statement	)	759:21:28877:28877	3623096	42	True				
ANR	3623196	Statement	cscd	759:23:28879:28882	3623096	43	True				
ANR	3623197	Statement	.	759:27:28883:28883	3623096	44	True				
ANR	3623198	Statement	x	759:28:28884:28884	3623096	45	True				
ANR	3623199	Statement	=	759:30:28886:28886	3623096	46	True				
ANR	3623200	Statement	p	759:32:28888:28888	3623096	47	True				
ANR	3623201	Statement	[	759:33:28889:28889	3623096	48	True				
ANR	3623202	Statement	r_offsetof	759:34:28890:28899	3623096	49	True				
ANR	3623203	Statement	(	759:45:28901:28901	3623096	50	True				
ANR	3623204	Statement	CS_CodeDirectory	759:46:28902:28917	3623096	51	True				
ANR	3623205	Statement	","	759:62:28918:28918	3623096	52	True				
ANR	3623206	Statement	x	759:64:28920:28920	3623096	53	True				
ANR	3623207	Statement	)	759:65:28921:28921	3623096	54	True				
ANR	3623208	Statement	]	759:66:28922:28922	3623096	55	True				
ANR	3623209	ExpressionStatement	READFIELD ( length )	760:1:28925:28943	3623096	56	True				
ANR	3623210	CallExpression	READFIELD ( length )		3623096	0					
ANR	3623211	Callee	READFIELD		3623096	0					
ANR	3623212	Identifier	READFIELD		3623096	0					
ANR	3623213	ArgumentList	length		3623096	1					
ANR	3623214	Argument	length		3623096	0					
ANR	3623215	Identifier	length		3623096	0					
ANR	3623216	ExpressionStatement	READFIELD ( version )	761:1:28946:28965	3623096	57	True				
ANR	3623217	CallExpression	READFIELD ( version )		3623096	0					
ANR	3623218	Callee	READFIELD		3623096	0					
ANR	3623219	Identifier	READFIELD		3623096	0					
ANR	3623220	ArgumentList	version		3623096	1					
ANR	3623221	Argument	version		3623096	0					
ANR	3623222	Identifier	version		3623096	0					
ANR	3623223	ExpressionStatement	READFIELD ( flags )	762:1:28968:28985	3623096	58	True				
ANR	3623224	CallExpression	READFIELD ( flags )		3623096	0					
ANR	3623225	Callee	READFIELD		3623096	0					
ANR	3623226	Identifier	READFIELD		3623096	0					
ANR	3623227	ArgumentList	flags		3623096	1					
ANR	3623228	Argument	flags		3623096	0					
ANR	3623229	Identifier	flags		3623096	0					
ANR	3623230	ExpressionStatement	READFIELD ( hashOffset )	763:1:28988:29010	3623096	59	True				
ANR	3623231	CallExpression	READFIELD ( hashOffset )		3623096	0					
ANR	3623232	Callee	READFIELD		3623096	0					
ANR	3623233	Identifier	READFIELD		3623096	0					
ANR	3623234	ArgumentList	hashOffset		3623096	1					
ANR	3623235	Argument	hashOffset		3623096	0					
ANR	3623236	Identifier	hashOffset		3623096	0					
ANR	3623237	ExpressionStatement	READFIELD ( identOffset )	764:1:29013:29036	3623096	60	True				
ANR	3623238	CallExpression	READFIELD ( identOffset )		3623096	0					
ANR	3623239	Callee	READFIELD		3623096	0					
ANR	3623240	Identifier	READFIELD		3623096	0					
ANR	3623241	ArgumentList	identOffset		3623096	1					
ANR	3623242	Argument	identOffset		3623096	0					
ANR	3623243	Identifier	identOffset		3623096	0					
ANR	3623244	ExpressionStatement	READFIELD ( nSpecialSlots )	765:1:29039:29064	3623096	61	True				
ANR	3623245	CallExpression	READFIELD ( nSpecialSlots )		3623096	0					
ANR	3623246	Callee	READFIELD		3623096	0					
ANR	3623247	Identifier	READFIELD		3623096	0					
ANR	3623248	ArgumentList	nSpecialSlots		3623096	1					
ANR	3623249	Argument	nSpecialSlots		3623096	0					
ANR	3623250	Identifier	nSpecialSlots		3623096	0					
ANR	3623251	ExpressionStatement	READFIELD ( nCodeSlots )	766:1:29067:29089	3623096	62	True				
ANR	3623252	CallExpression	READFIELD ( nCodeSlots )		3623096	0					
ANR	3623253	Callee	READFIELD		3623096	0					
ANR	3623254	Identifier	READFIELD		3623096	0					
ANR	3623255	ArgumentList	nCodeSlots		3623096	1					
ANR	3623256	Argument	nCodeSlots		3623096	0					
ANR	3623257	Identifier	nCodeSlots		3623096	0					
ANR	3623258	ExpressionStatement	READFIELD ( hashSize )	767:1:29092:29112	3623096	63	True				
ANR	3623259	CallExpression	READFIELD ( hashSize )		3623096	0					
ANR	3623260	Callee	READFIELD		3623096	0					
ANR	3623261	Identifier	READFIELD		3623096	0					
ANR	3623262	ArgumentList	hashSize		3623096	1					
ANR	3623263	Argument	hashSize		3623096	0					
ANR	3623264	Identifier	hashSize		3623096	0					
ANR	3623265	ExpressionStatement	READFIELD ( teamIDOffset )	768:1:29115:29139	3623096	64	True				
ANR	3623266	CallExpression	READFIELD ( teamIDOffset )		3623096	0					
ANR	3623267	Callee	READFIELD		3623096	0					
ANR	3623268	Identifier	READFIELD		3623096	0					
ANR	3623269	ArgumentList	teamIDOffset		3623096	1					
ANR	3623270	Argument	teamIDOffset		3623096	0					
ANR	3623271	Identifier	teamIDOffset		3623096	0					
ANR	3623272	ExpressionStatement	READFIELD8 ( hashType )	769:1:29142:29163	3623096	65	True				
ANR	3623273	CallExpression	READFIELD8 ( hashType )		3623096	0					
ANR	3623274	Callee	READFIELD8		3623096	0					
ANR	3623275	Identifier	READFIELD8		3623096	0					
ANR	3623276	ArgumentList	hashType		3623096	1					
ANR	3623277	Argument	hashType		3623096	0					
ANR	3623278	Identifier	hashType		3623096	0					
ANR	3623279	ExpressionStatement	READFIELD ( pageSize )	770:1:29166:29186	3623096	66	True				
ANR	3623280	CallExpression	READFIELD ( pageSize )		3623096	0					
ANR	3623281	Callee	READFIELD		3623096	0					
ANR	3623282	Identifier	READFIELD		3623096	0					
ANR	3623283	ArgumentList	pageSize		3623096	1					
ANR	3623284	Argument	pageSize		3623096	0					
ANR	3623285	Identifier	pageSize		3623096	0					
ANR	3623286	ExpressionStatement	READFIELD ( codeLimit )	771:1:29189:29210	3623096	67	True				
ANR	3623287	CallExpression	READFIELD ( codeLimit )		3623096	0					
ANR	3623288	Callee	READFIELD		3623096	0					
ANR	3623289	Identifier	READFIELD		3623096	0					
ANR	3623290	ArgumentList	codeLimit		3623096	1					
ANR	3623291	Argument	codeLimit		3623096	0					
ANR	3623292	Identifier	codeLimit		3623096	0					
ANR	3623293	ExpressionStatement	"eprintf ( ""Version: %x\\n"" , cscd . version )"	772:1:29213:29252	3623096	68	True				
ANR	3623294	CallExpression	"eprintf ( ""Version: %x\\n"" , cscd . version )"		3623096	0					
ANR	3623295	Callee	eprintf		3623096	0					
ANR	3623296	Identifier	eprintf		3623096	0					
ANR	3623297	ArgumentList	"""Version: %x\\n"""		3623096	1					
ANR	3623298	Argument	"""Version: %x\\n"""		3623096	0					
ANR	3623299	PrimaryExpression	"""Version: %x\\n"""		3623096	0					
ANR	3623300	Argument	cscd . version		3623096	1					
ANR	3623301	MemberAccess	cscd . version		3623096	0					
ANR	3623302	Identifier	cscd		3623096	0					
ANR	3623303	Identifier	version		3623096	1					
ANR	3623304	ExpressionStatement	"eprintf ( ""Flags: %x\\n"" , cscd . flags )"	773:1:29255:29290	3623096	69	True				
ANR	3623305	CallExpression	"eprintf ( ""Flags: %x\\n"" , cscd . flags )"		3623096	0					
ANR	3623306	Callee	eprintf		3623096	0					
ANR	3623307	Identifier	eprintf		3623096	0					
ANR	3623308	ArgumentList	"""Flags: %x\\n"""		3623096	1					
ANR	3623309	Argument	"""Flags: %x\\n"""		3623096	0					
ANR	3623310	PrimaryExpression	"""Flags: %x\\n"""		3623096	0					
ANR	3623311	Argument	cscd . flags		3623096	1					
ANR	3623312	MemberAccess	cscd . flags		3623096	0					
ANR	3623313	Identifier	cscd		3623096	0					
ANR	3623314	Identifier	flags		3623096	1					
ANR	3623315	ExpressionStatement	"eprintf ( ""Length: %d\\n"" , cscd . length )"	774:1:29293:29330	3623096	70	True				
ANR	3623316	CallExpression	"eprintf ( ""Length: %d\\n"" , cscd . length )"		3623096	0					
ANR	3623317	Callee	eprintf		3623096	0					
ANR	3623318	Identifier	eprintf		3623096	0					
ANR	3623319	ArgumentList	"""Length: %d\\n"""		3623096	1					
ANR	3623320	Argument	"""Length: %d\\n"""		3623096	0					
ANR	3623321	PrimaryExpression	"""Length: %d\\n"""		3623096	0					
ANR	3623322	Argument	cscd . length		3623096	1					
ANR	3623323	MemberAccess	cscd . length		3623096	0					
ANR	3623324	Identifier	cscd		3623096	0					
ANR	3623325	Identifier	length		3623096	1					
ANR	3623326	ExpressionStatement	"eprintf ( ""PageSize: %d\\n"" , cscd . pageSize )"	775:1:29333:29374	3623096	71	True				
ANR	3623327	CallExpression	"eprintf ( ""PageSize: %d\\n"" , cscd . pageSize )"		3623096	0					
ANR	3623328	Callee	eprintf		3623096	0					
ANR	3623329	Identifier	eprintf		3623096	0					
ANR	3623330	ArgumentList	"""PageSize: %d\\n"""		3623096	1					
ANR	3623331	Argument	"""PageSize: %d\\n"""		3623096	0					
ANR	3623332	PrimaryExpression	"""PageSize: %d\\n"""		3623096	0					
ANR	3623333	Argument	cscd . pageSize		3623096	1					
ANR	3623334	MemberAccess	cscd . pageSize		3623096	0					
ANR	3623335	Identifier	cscd		3623096	0					
ANR	3623336	Identifier	pageSize		3623096	1					
ANR	3623337	ExpressionStatement	"eprintf ( ""hashOffset: %d\\n"" , cscd . hashOffset )"	776:1:29377:29422	3623096	72	True				
ANR	3623338	CallExpression	"eprintf ( ""hashOffset: %d\\n"" , cscd . hashOffset )"		3623096	0					
ANR	3623339	Callee	eprintf		3623096	0					
ANR	3623340	Identifier	eprintf		3623096	0					
ANR	3623341	ArgumentList	"""hashOffset: %d\\n"""		3623096	1					
ANR	3623342	Argument	"""hashOffset: %d\\n"""		3623096	0					
ANR	3623343	PrimaryExpression	"""hashOffset: %d\\n"""		3623096	0					
ANR	3623344	Argument	cscd . hashOffset		3623096	1					
ANR	3623345	MemberAccess	cscd . hashOffset		3623096	0					
ANR	3623346	Identifier	cscd		3623096	0					
ANR	3623347	Identifier	hashOffset		3623096	1					
ANR	3623348	ExpressionStatement	"eprintf ( ""codeLimit: %d\\n"" , cscd . codeLimit )"	777:1:29425:29468	3623096	73	True				
ANR	3623349	CallExpression	"eprintf ( ""codeLimit: %d\\n"" , cscd . codeLimit )"		3623096	0					
ANR	3623350	Callee	eprintf		3623096	0					
ANR	3623351	Identifier	eprintf		3623096	0					
ANR	3623352	ArgumentList	"""codeLimit: %d\\n"""		3623096	1					
ANR	3623353	Argument	"""codeLimit: %d\\n"""		3623096	0					
ANR	3623354	PrimaryExpression	"""codeLimit: %d\\n"""		3623096	0					
ANR	3623355	Argument	cscd . codeLimit		3623096	1					
ANR	3623356	MemberAccess	cscd . codeLimit		3623096	0					
ANR	3623357	Identifier	cscd		3623096	0					
ANR	3623358	Identifier	codeLimit		3623096	1					
ANR	3623359	ExpressionStatement	"eprintf ( ""hashSize: %d\\n"" , cscd . hashSize )"	778:1:29471:29512	3623096	74	True				
ANR	3623360	CallExpression	"eprintf ( ""hashSize: %d\\n"" , cscd . hashSize )"		3623096	0					
ANR	3623361	Callee	eprintf		3623096	0					
ANR	3623362	Identifier	eprintf		3623096	0					
ANR	3623363	ArgumentList	"""hashSize: %d\\n"""		3623096	1					
ANR	3623364	Argument	"""hashSize: %d\\n"""		3623096	0					
ANR	3623365	PrimaryExpression	"""hashSize: %d\\n"""		3623096	0					
ANR	3623366	Argument	cscd . hashSize		3623096	1					
ANR	3623367	MemberAccess	cscd . hashSize		3623096	0					
ANR	3623368	Identifier	cscd		3623096	0					
ANR	3623369	Identifier	hashSize		3623096	1					
ANR	3623370	ExpressionStatement	"eprintf ( ""hashType: %d\\n"" , cscd . hashType )"	779:1:29515:29556	3623096	75	True				
ANR	3623371	CallExpression	"eprintf ( ""hashType: %d\\n"" , cscd . hashType )"		3623096	0					
ANR	3623372	Callee	eprintf		3623096	0					
ANR	3623373	Identifier	eprintf		3623096	0					
ANR	3623374	ArgumentList	"""hashType: %d\\n"""		3623096	1					
ANR	3623375	Argument	"""hashType: %d\\n"""		3623096	0					
ANR	3623376	PrimaryExpression	"""hashType: %d\\n"""		3623096	0					
ANR	3623377	Argument	cscd . hashType		3623096	1					
ANR	3623378	MemberAccess	cscd . hashType		3623096	0					
ANR	3623379	Identifier	cscd		3623096	0					
ANR	3623380	Identifier	hashType		3623096	1					
ANR	3623381	IdentifierDeclStatement	"char * identity = readString ( p , cscd . identOffset , psize ) ;"	780:1:29559:29615	3623096	76	True				
ANR	3623382	IdentifierDecl	"* identity = readString ( p , cscd . identOffset , psize )"		3623096	0					
ANR	3623383	IdentifierDeclType	char *		3623096	0					
ANR	3623384	Identifier	identity		3623096	1					
ANR	3623385	AssignmentExpression	"* identity = readString ( p , cscd . identOffset , psize )"		3623096	2		=			
ANR	3623386	Identifier	identity		3623096	0					
ANR	3623387	CallExpression	"readString ( p , cscd . identOffset , psize )"		3623096	1					
ANR	3623388	Callee	readString		3623096	0					
ANR	3623389	Identifier	readString		3623096	0					
ANR	3623390	ArgumentList	p		3623096	1					
ANR	3623391	Argument	p		3623096	0					
ANR	3623392	Identifier	p		3623096	0					
ANR	3623393	Argument	cscd . identOffset		3623096	1					
ANR	3623394	MemberAccess	cscd . identOffset		3623096	0					
ANR	3623395	Identifier	cscd		3623096	0					
ANR	3623396	Identifier	identOffset		3623096	1					
ANR	3623397	Argument	psize		3623096	2					
ANR	3623398	Identifier	psize		3623096	0					
ANR	3623399	ExpressionStatement	"eprintf ( ""Identity: %s\\n"" , identity )"	781:1:29618:29654	3623096	77	True				
ANR	3623400	CallExpression	"eprintf ( ""Identity: %s\\n"" , identity )"		3623096	0					
ANR	3623401	Callee	eprintf		3623096	0					
ANR	3623402	Identifier	eprintf		3623096	0					
ANR	3623403	ArgumentList	"""Identity: %s\\n"""		3623096	1					
ANR	3623404	Argument	"""Identity: %s\\n"""		3623096	0					
ANR	3623405	PrimaryExpression	"""Identity: %s\\n"""		3623096	0					
ANR	3623406	Argument	identity		3623096	1					
ANR	3623407	Identifier	identity		3623096	0					
ANR	3623408	IdentifierDeclStatement	"char * teamId = readString ( p , cscd . teamIDOffset , psize ) ;"	782:1:29657:29712	3623096	78	True				
ANR	3623409	IdentifierDecl	"* teamId = readString ( p , cscd . teamIDOffset , psize )"		3623096	0					
ANR	3623410	IdentifierDeclType	char *		3623096	0					
ANR	3623411	Identifier	teamId		3623096	1					
ANR	3623412	AssignmentExpression	"* teamId = readString ( p , cscd . teamIDOffset , psize )"		3623096	2		=			
ANR	3623413	Identifier	teamId		3623096	0					
ANR	3623414	CallExpression	"readString ( p , cscd . teamIDOffset , psize )"		3623096	1					
ANR	3623415	Callee	readString		3623096	0					
ANR	3623416	Identifier	readString		3623096	0					
ANR	3623417	ArgumentList	p		3623096	1					
ANR	3623418	Argument	p		3623096	0					
ANR	3623419	Identifier	p		3623096	0					
ANR	3623420	Argument	cscd . teamIDOffset		3623096	1					
ANR	3623421	MemberAccess	cscd . teamIDOffset		3623096	0					
ANR	3623422	Identifier	cscd		3623096	0					
ANR	3623423	Identifier	teamIDOffset		3623096	1					
ANR	3623424	Argument	psize		3623096	2					
ANR	3623425	Identifier	psize		3623096	0					
ANR	3623426	ExpressionStatement	"eprintf ( ""TeamID: %s\\n"" , teamId )"	783:1:29715:29747	3623096	79	True				
ANR	3623427	CallExpression	"eprintf ( ""TeamID: %s\\n"" , teamId )"		3623096	0					
ANR	3623428	Callee	eprintf		3623096	0					
ANR	3623429	Identifier	eprintf		3623096	0					
ANR	3623430	ArgumentList	"""TeamID: %s\\n"""		3623096	1					
ANR	3623431	Argument	"""TeamID: %s\\n"""		3623096	0					
ANR	3623432	PrimaryExpression	"""TeamID: %s\\n"""		3623096	0					
ANR	3623433	Argument	teamId		3623096	1					
ANR	3623434	Identifier	teamId		3623096	0					
ANR	3623435	ExpressionStatement	"eprintf ( ""CodeSlots: %d\\n"" , cscd . nCodeSlots )"	784:1:29750:29794	3623096	80	True				
ANR	3623436	CallExpression	"eprintf ( ""CodeSlots: %d\\n"" , cscd . nCodeSlots )"		3623096	0					
ANR	3623437	Callee	eprintf		3623096	0					
ANR	3623438	Identifier	eprintf		3623096	0					
ANR	3623439	ArgumentList	"""CodeSlots: %d\\n"""		3623096	1					
ANR	3623440	Argument	"""CodeSlots: %d\\n"""		3623096	0					
ANR	3623441	PrimaryExpression	"""CodeSlots: %d\\n"""		3623096	0					
ANR	3623442	Argument	cscd . nCodeSlots		3623096	1					
ANR	3623443	MemberAccess	cscd . nCodeSlots		3623096	0					
ANR	3623444	Identifier	cscd		3623096	0					
ANR	3623445	Identifier	nCodeSlots		3623096	1					
ANR	3623446	ExpressionStatement	free ( identity )	785:1:29797:29812	3623096	81	True				
ANR	3623447	CallExpression	free ( identity )		3623096	0					
ANR	3623448	Callee	free		3623096	0					
ANR	3623449	Identifier	free		3623096	0					
ANR	3623450	ArgumentList	identity		3623096	1					
ANR	3623451	Argument	identity		3623096	0					
ANR	3623452	Identifier	identity		3623096	0					
ANR	3623453	ExpressionStatement	free ( teamId )	786:1:29815:29828	3623096	82	True				
ANR	3623454	CallExpression	free ( teamId )		3623096	0					
ANR	3623455	Callee	free		3623096	0					
ANR	3623456	Identifier	free		3623096	0					
ANR	3623457	ArgumentList	teamId		3623096	1					
ANR	3623458	Argument	teamId		3623096	0					
ANR	3623459	Identifier	teamId		3623096	0					
ANR	3623460	IdentifierDeclStatement	int hashSize = 20 ;	788:1:29832:29849	3623096	83	True				
ANR	3623461	IdentifierDecl	hashSize = 20		3623096	0					
ANR	3623462	IdentifierDeclType	int		3623096	0					
ANR	3623463	Identifier	hashSize		3623096	1					
ANR	3623464	AssignmentExpression	hashSize = 20		3623096	2		=			
ANR	3623465	Identifier	hashSize		3623096	0					
ANR	3623466	PrimaryExpression	20		3623096	1					
ANR	3623467	IdentifierDeclStatement	int algoType = R_HASH_SHA1 ;	789:1:29871:29897	3623096	84	True				
ANR	3623468	IdentifierDecl	algoType = R_HASH_SHA1		3623096	0					
ANR	3623469	IdentifierDeclType	int		3623096	0					
ANR	3623470	Identifier	algoType		3623096	1					
ANR	3623471	AssignmentExpression	algoType = R_HASH_SHA1		3623096	2		=			
ANR	3623472	Identifier	R_HASH_SHA1		3623096	0					
ANR	3623473	Identifier	R_HASH_SHA1		3623096	1					
ANR	3623474	IdentifierDeclStatement	"const char * hashName = ""sha1"" ;"	790:1:29900:29929	3623096	85	True				
ANR	3623475	IdentifierDecl	"* hashName = ""sha1"""		3623096	0					
ANR	3623476	IdentifierDeclType	const char *		3623096	0					
ANR	3623477	Identifier	hashName		3623096	1					
ANR	3623478	AssignmentExpression	"* hashName = ""sha1"""		3623096	2		=			
ANR	3623479	Identifier	hashName		3623096	0					
ANR	3623480	PrimaryExpression	"""sha1"""		3623096	1					
ANR	3623481	SwitchStatement	switch ( cscd . hashType )		3623096	86					
ANR	3623482	Condition	cscd . hashType	791:9:29940:29952	3623096	0	True				
ANR	3623483	MemberAccess	cscd . hashType		3623096	0					
ANR	3623484	Identifier	cscd		3623096	0					
ANR	3623485	Identifier	hashType		3623096	1					
ANR	3623486	CompoundStatement		68:24:2484:2484	3623096	1					
ANR	3623487	Label	case 0 :	792:1:29958:29964	3623096	0	True				
ANR	3623488	Label	case 1 :	793:1:29987:29993	3623096	1	True				
ANR	3623489	ExpressionStatement	hashSize = 20	794:2:30017:30030	3623096	2	True				
ANR	3623490	AssignmentExpression	hashSize = 20		3623096	0		=			
ANR	3623491	Identifier	hashSize		3623096	0					
ANR	3623492	PrimaryExpression	20		3623096	1					
ANR	3623493	ExpressionStatement	"hashName = ""sha1"""	795:2:30034:30051	3623096	3	True				
ANR	3623494	AssignmentExpression	"hashName = ""sha1"""		3623096	0		=			
ANR	3623495	Identifier	hashName		3623096	0					
ANR	3623496	PrimaryExpression	"""sha1"""		3623096	1					
ANR	3623497	ExpressionStatement	algoType = R_HASH_SHA1	796:2:30055:30077	3623096	4	True				
ANR	3623498	AssignmentExpression	algoType = R_HASH_SHA1		3623096	0		=			
ANR	3623499	Identifier	algoType		3623096	0					
ANR	3623500	Identifier	R_HASH_SHA1		3623096	1					
ANR	3623501	BreakStatement	break ;	797:2:30081:30086	3623096	5	True				
ANR	3623502	Label	case 2 :	798:1:30089:30095	3623096	6	True				
ANR	3623503	ExpressionStatement	hashSize = 32	799:2:30121:30134	3623096	7	True				
ANR	3623504	AssignmentExpression	hashSize = 32		3623096	0		=			
ANR	3623505	Identifier	hashSize		3623096	0					
ANR	3623506	PrimaryExpression	32		3623096	1					
ANR	3623507	ExpressionStatement	algoType = R_HASH_SHA256	800:2:30138:30162	3623096	8	True				
ANR	3623508	AssignmentExpression	algoType = R_HASH_SHA256		3623096	0		=			
ANR	3623509	Identifier	algoType		3623096	0					
ANR	3623510	Identifier	R_HASH_SHA256		3623096	1					
ANR	3623511	ExpressionStatement	"hashName = ""sha256"""	801:2:30166:30185	3623096	9	True				
ANR	3623512	AssignmentExpression	"hashName = ""sha256"""		3623096	0		=			
ANR	3623513	Identifier	hashName		3623096	0					
ANR	3623514	PrimaryExpression	"""sha256"""		3623096	1					
ANR	3623515	BreakStatement	break ;	802:2:30189:30194	3623096	10	True				
ANR	3623516	IdentifierDeclStatement	"RHash * ctx = r_hash_new ( true , algoType ) ;"	805:1:30220:30260	3623096	87	True				
ANR	3623517	IdentifierDecl	"* ctx = r_hash_new ( true , algoType )"		3623096	0					
ANR	3623518	IdentifierDeclType	RHash *		3623096	0					
ANR	3623519	Identifier	ctx		3623096	1					
ANR	3623520	AssignmentExpression	"* ctx = r_hash_new ( true , algoType )"		3623096	2		=			
ANR	3623521	Identifier	ctx		3623096	0					
ANR	3623522	CallExpression	"r_hash_new ( true , algoType )"		3623096	1					
ANR	3623523	Callee	r_hash_new		3623096	0					
ANR	3623524	Identifier	r_hash_new		3623096	0					
ANR	3623525	ArgumentList	true		3623096	1					
ANR	3623526	Argument	true		3623096	0					
ANR	3623527	Identifier	true		3623096	0					
ANR	3623528	Argument	algoType		3623096	1					
ANR	3623529	Identifier	algoType		3623096	0					
ANR	3623530	IdentifierDeclStatement	int fofsz = cscd . length ;	806:1:30263:30286	3623096	88	True				
ANR	3623531	IdentifierDecl	fofsz = cscd . length		3623096	0					
ANR	3623532	IdentifierDeclType	int		3623096	0					
ANR	3623533	Identifier	fofsz		3623096	1					
ANR	3623534	AssignmentExpression	fofsz = cscd . length		3623096	2		=			
ANR	3623535	Identifier	fofsz		3623096	0					
ANR	3623536	MemberAccess	cscd . length		3623096	1					
ANR	3623537	Identifier	cscd		3623096	0					
ANR	3623538	Identifier	length		3623096	1					
ANR	3623539	IdentifierDeclStatement	"ut8 * fofbuf = calloc ( fofsz , 1 ) ;"	807:1:30289:30320	3623096	89	True				
ANR	3623540	IdentifierDecl	"* fofbuf = calloc ( fofsz , 1 )"		3623096	0					
ANR	3623541	IdentifierDeclType	ut8 *		3623096	0					
ANR	3623542	Identifier	fofbuf		3623096	1					
ANR	3623543	AssignmentExpression	"* fofbuf = calloc ( fofsz , 1 )"		3623096	2		=			
ANR	3623544	Identifier	fofbuf		3623096	0					
ANR	3623545	CallExpression	"calloc ( fofsz , 1 )"		3623096	1					
ANR	3623546	Callee	calloc		3623096	0					
ANR	3623547	Identifier	calloc		3623096	0					
ANR	3623548	ArgumentList	fofsz		3623096	1					
ANR	3623549	Argument	fofsz		3623096	0					
ANR	3623550	Identifier	fofsz		3623096	0					
ANR	3623551	Argument	1		3623096	1					
ANR	3623552	PrimaryExpression	1		3623096	0					
ANR	3623553	IfStatement	if ( fofbuf )		3623096	90					
ANR	3623554	Condition	fofbuf	808:5:30327:30332	3623096	0	True				
ANR	3623555	Identifier	fofbuf		3623096	0					
ANR	3623556	CompoundStatement		86:2:2868:2873	3623096	1					
ANR	3623557	IdentifierDeclStatement	int i ;	809:2:30339:30344	3623096	0	True				
ANR	3623558	IdentifierDecl	i		3623096	0					
ANR	3623559	IdentifierDeclType	int		3623096	0					
ANR	3623560	Identifier	i		3623096	1					
ANR	3623561	IfStatement	"if ( r_buf_read_at ( b , off , fofbuf , fofsz ) != fofsz )"		3623096	1					
ANR	3623562	Condition	"r_buf_read_at ( b , off , fofbuf , fofsz ) != fofsz"	810:6:30352:30397	3623096	0	True				
ANR	3623563	EqualityExpression	"r_buf_read_at ( b , off , fofbuf , fofsz ) != fofsz"		3623096	0		!=			
ANR	3623564	CallExpression	"r_buf_read_at ( b , off , fofbuf , fofsz )"		3623096	0					
ANR	3623565	Callee	r_buf_read_at		3623096	0					
ANR	3623566	Identifier	r_buf_read_at		3623096	0					
ANR	3623567	ArgumentList	b		3623096	1					
ANR	3623568	Argument	b		3623096	0					
ANR	3623569	Identifier	b		3623096	0					
ANR	3623570	Argument	off		3623096	1					
ANR	3623571	Identifier	off		3623096	0					
ANR	3623572	Argument	fofbuf		3623096	2					
ANR	3623573	Identifier	fofbuf		3623096	0					
ANR	3623574	Argument	fofsz		3623096	3					
ANR	3623575	Identifier	fofsz		3623096	0					
ANR	3623576	Identifier	fofsz		3623096	1					
ANR	3623577	CompoundStatement		87:54:2929:2929	3623096	1					
ANR	3623578	ExpressionStatement	"eprintf ( ""Invalid cdhash offset/length values\\n"" )"	811:3:30405:30454	3623096	0	True				
ANR	3623579	CallExpression	"eprintf ( ""Invalid cdhash offset/length values\\n"" )"		3623096	0					
ANR	3623580	Callee	eprintf		3623096	0					
ANR	3623581	Identifier	eprintf		3623096	0					
ANR	3623582	ArgumentList	"""Invalid cdhash offset/length values\\n"""		3623096	1					
ANR	3623583	Argument	"""Invalid cdhash offset/length values\\n"""		3623096	0					
ANR	3623584	PrimaryExpression	"""Invalid cdhash offset/length values\\n"""		3623096	0					
ANR	3623585	ExpressionStatement	"r_hash_do_begin ( ctx , algoType )"	813:2:30462:30493	3623096	2	True				
ANR	3623586	CallExpression	"r_hash_do_begin ( ctx , algoType )"		3623096	0					
ANR	3623587	Callee	r_hash_do_begin		3623096	0					
ANR	3623588	Identifier	r_hash_do_begin		3623096	0					
ANR	3623589	ArgumentList	ctx		3623096	1					
ANR	3623590	Argument	ctx		3623096	0					
ANR	3623591	Identifier	ctx		3623096	0					
ANR	3623592	Argument	algoType		3623096	1					
ANR	3623593	Identifier	algoType		3623096	0					
ANR	3623594	IfStatement	if ( algoType == R_HASH_SHA1 )		3623096	3					
ANR	3623595	Condition	algoType == R_HASH_SHA1	814:6:30501:30523	3623096	0	True				
ANR	3623596	EqualityExpression	algoType == R_HASH_SHA1		3623096	0		==			
ANR	3623597	Identifier	algoType		3623096	0					
ANR	3623598	Identifier	R_HASH_SHA1		3623096	1					
ANR	3623599	CompoundStatement		91:31:3055:3055	3623096	1					
ANR	3623600	ExpressionStatement	"r_hash_do_sha1 ( ctx , fofbuf , fofsz )"	815:3:30531:30566	3623096	0	True				
ANR	3623601	CallExpression	"r_hash_do_sha1 ( ctx , fofbuf , fofsz )"		3623096	0					
ANR	3623602	Callee	r_hash_do_sha1		3623096	0					
ANR	3623603	Identifier	r_hash_do_sha1		3623096	0					
ANR	3623604	ArgumentList	ctx		3623096	1					
ANR	3623605	Argument	ctx		3623096	0					
ANR	3623606	Identifier	ctx		3623096	0					
ANR	3623607	Argument	fofbuf		3623096	1					
ANR	3623608	Identifier	fofbuf		3623096	0					
ANR	3623609	Argument	fofsz		3623096	2					
ANR	3623610	Identifier	fofsz		3623096	0					
ANR	3623611	ElseStatement	else		3623096	0					
ANR	3623612	CompoundStatement		93:9:3106:3106	3623096	0					
ANR	3623613	ExpressionStatement	"r_hash_do_sha256 ( ctx , fofbuf , fofsz )"	817:3:30582:30619	3623096	0	True				
ANR	3623614	CallExpression	"r_hash_do_sha256 ( ctx , fofbuf , fofsz )"		3623096	0					
ANR	3623615	Callee	r_hash_do_sha256		3623096	0					
ANR	3623616	Identifier	r_hash_do_sha256		3623096	0					
ANR	3623617	ArgumentList	ctx		3623096	1					
ANR	3623618	Argument	ctx		3623096	0					
ANR	3623619	Identifier	ctx		3623096	0					
ANR	3623620	Argument	fofbuf		3623096	1					
ANR	3623621	Identifier	fofbuf		3623096	0					
ANR	3623622	Argument	fofsz		3623096	2					
ANR	3623623	Identifier	fofsz		3623096	0					
ANR	3623624	ExpressionStatement	"r_hash_do_end ( ctx , algoType )"	819:2:30627:30656	3623096	4	True				
ANR	3623625	CallExpression	"r_hash_do_end ( ctx , algoType )"		3623096	0					
ANR	3623626	Callee	r_hash_do_end		3623096	0					
ANR	3623627	Identifier	r_hash_do_end		3623096	0					
ANR	3623628	ArgumentList	ctx		3623096	1					
ANR	3623629	Argument	ctx		3623096	0					
ANR	3623630	Identifier	ctx		3623096	0					
ANR	3623631	Argument	algoType		3623096	1					
ANR	3623632	Identifier	algoType		3623096	0					
ANR	3623633	Statement	eprintf	820:2:30660:30666	3623096	5	True				
ANR	3623634	Statement	(	820:10:30668:30668	3623096	6	True				
ANR	3623635	Statement	"""ph %s @ 0x%"""	820:11:30669:30681	3623096	7	True				
ANR	3623636	Statement	PFMT64x	820:24:30682:30688	3623096	8	True				
ANR	3623637	Statement	"""!%d\\n"""	820:31:30689:30695	3623096	9	True				
ANR	3623638	Statement	","	820:38:30696:30696	3623096	10	True				
ANR	3623639	Statement	hashName	820:40:30698:30705	3623096	11	True				
ANR	3623640	Statement	","	820:48:30706:30706	3623096	12	True				
ANR	3623641	Statement	off	820:50:30708:30710	3623096	13	True				
ANR	3623642	Statement	","	820:53:30711:30711	3623096	14	True				
ANR	3623643	Statement	fofsz	820:55:30713:30717	3623096	15	True				
ANR	3623644	Statement	)	820:60:30718:30718	3623096	16	True				
ANR	3623645	ExpressionStatement		820:61:30719:30719	3623096	17	True				
ANR	3623646	ExpressionStatement	"eprintf ( ""ComputedCDHash: "" )"	821:2:30723:30751	3623096	18	True				
ANR	3623647	CallExpression	"eprintf ( ""ComputedCDHash: "" )"		3623096	0					
ANR	3623648	Callee	eprintf		3623096	0					
ANR	3623649	Identifier	eprintf		3623096	0					
ANR	3623650	ArgumentList	"""ComputedCDHash: """		3623096	1					
ANR	3623651	Argument	"""ComputedCDHash: """		3623096	0					
ANR	3623652	PrimaryExpression	"""ComputedCDHash: """		3623096	0					
ANR	3623653	ForStatement	for ( i = 0 ; i < hashSize ; i ++ )		3623096	19					
ANR	3623654	ForInit	i = 0 ;	822:7:30760:30765	3623096	0	True				
ANR	3623655	AssignmentExpression	i = 0		3623096	0		=			
ANR	3623656	Identifier	i		3623096	0					
ANR	3623657	PrimaryExpression	0		3623096	1					
ANR	3623658	Condition	i < hashSize	822:14:30767:30778	3623096	1	True				
ANR	3623659	RelationalExpression	i < hashSize		3623096	0		<			
ANR	3623660	Identifier	i		3623096	0					
ANR	3623661	Identifier	hashSize		3623096	1					
ANR	3623662	PostIncDecOperationExpression	i ++	822:27:30780:30782	3623096	2	True				
ANR	3623663	Identifier	i		3623096	0					
ANR	3623664	IncDec	++		3623096	1					
ANR	3623665	CompoundStatement		99:32:3314:3314	3623096	3					
ANR	3623666	ExpressionStatement	"eprintf ( ""%02x"" , ctx -> digest [ i ] )"	823:3:30790:30822	3623096	0	True				
ANR	3623667	CallExpression	"eprintf ( ""%02x"" , ctx -> digest [ i ] )"		3623096	0					
ANR	3623668	Callee	eprintf		3623096	0					
ANR	3623669	Identifier	eprintf		3623096	0					
ANR	3623670	ArgumentList	"""%02x"""		3623096	1					
ANR	3623671	Argument	"""%02x"""		3623096	0					
ANR	3623672	PrimaryExpression	"""%02x"""		3623096	0					
ANR	3623673	Argument	ctx -> digest [ i ]		3623096	1					
ANR	3623674	ArrayIndexing	ctx -> digest [ i ]		3623096	0					
ANR	3623675	PtrMemberAccess	ctx -> digest		3623096	0					
ANR	3623676	Identifier	ctx		3623096	0					
ANR	3623677	Identifier	digest		3623096	1					
ANR	3623678	Identifier	i		3623096	1					
ANR	3623679	ExpressionStatement	"eprintf ( ""\\n"" )"	825:2:30830:30844	3623096	20	True				
ANR	3623680	CallExpression	"eprintf ( ""\\n"" )"		3623096	0					
ANR	3623681	Callee	eprintf		3623096	0					
ANR	3623682	Identifier	eprintf		3623096	0					
ANR	3623683	ArgumentList	"""\\n"""		3623096	1					
ANR	3623684	Argument	"""\\n"""		3623096	0					
ANR	3623685	PrimaryExpression	"""\\n"""		3623096	0					
ANR	3623686	ExpressionStatement	free ( fofbuf )	826:2:30848:30861	3623096	21	True				
ANR	3623687	CallExpression	free ( fofbuf )		3623096	0					
ANR	3623688	Callee	free		3623096	0					
ANR	3623689	Identifier	free		3623096	0					
ANR	3623690	ArgumentList	fofbuf		3623096	1					
ANR	3623691	Argument	fofbuf		3623096	0					
ANR	3623692	Identifier	fofbuf		3623096	0					
ANR	3623693	IdentifierDeclStatement	ut8 * hash = p + cscd . hashOffset ;	829:1:30905:30936	3623096	91	True				
ANR	3623694	IdentifierDecl	* hash = p + cscd . hashOffset		3623096	0					
ANR	3623695	IdentifierDeclType	ut8 *		3623096	0					
ANR	3623696	Identifier	hash		3623096	1					
ANR	3623697	AssignmentExpression	* hash = p + cscd . hashOffset		3623096	2		=			
ANR	3623698	Identifier	hash		3623096	0					
ANR	3623699	AdditiveExpression	p + cscd . hashOffset		3623096	1		+			
ANR	3623700	Identifier	p		3623096	0					
ANR	3623701	MemberAccess	cscd . hashOffset		3623096	1					
ANR	3623702	Identifier	cscd		3623096	0					
ANR	3623703	Identifier	hashOffset		3623096	1					
ANR	3623704	IdentifierDeclStatement	int j = 0 ;	830:1:30939:30948	3623096	92	True				
ANR	3623705	IdentifierDecl	j = 0		3623096	0					
ANR	3623706	IdentifierDeclType	int		3623096	0					
ANR	3623707	Identifier	j		3623096	1					
ANR	3623708	AssignmentExpression	j = 0		3623096	2		=			
ANR	3623709	Identifier	j		3623096	0					
ANR	3623710	PrimaryExpression	0		3623096	1					
ANR	3623711	IdentifierDeclStatement	int k = 0 ;	831:1:30951:30960	3623096	93	True				
ANR	3623712	IdentifierDecl	k = 0		3623096	0					
ANR	3623713	IdentifierDeclType	int		3623096	0					
ANR	3623714	Identifier	k		3623096	1					
ANR	3623715	AssignmentExpression	k = 0		3623096	2		=			
ANR	3623716	Identifier	k		3623096	0					
ANR	3623717	PrimaryExpression	0		3623096	1					
ANR	3623718	Statement	eprintf	832:1:30963:30969	3623096	94	True				
ANR	3623719	Statement	(	832:9:30971:30971	3623096	95	True				
ANR	3623720	Statement	"""Hashed region: 0x%08"""	832:10:30972:30993	3623096	96	True				
ANR	3623721	Statement	PFMT64x	832:32:30994:31000	3623096	97	True				
ANR	3623722	Statement	""" - 0x%08"""	832:39:31001:31010	3623096	98	True				
ANR	3623723	Statement	PFMT64x	832:49:31011:31017	3623096	99	True				
ANR	3623724	Statement	"""\\n"""	832:56:31018:31021	3623096	100	True				
ANR	3623725	Statement	","	832:60:31022:31022	3623096	101	True				
ANR	3623726	Statement	(	832:62:31024:31024	3623096	102	True				
ANR	3623727	Statement	ut64	832:63:31025:31028	3623096	103	True				
ANR	3623728	Statement	)	832:67:31029:31029	3623096	104	True				
ANR	3623729	Statement	0	832:68:31030:31030	3623096	105	True				
ANR	3623730	Statement	","	832:69:31031:31031	3623096	106	True				
ANR	3623731	Statement	(	832:71:31033:31033	3623096	107	True				
ANR	3623732	Statement	ut64	832:72:31034:31037	3623096	108	True				
ANR	3623733	Statement	)	832:76:31038:31038	3623096	109	True				
ANR	3623734	Statement	cscd	832:77:31039:31042	3623096	110	True				
ANR	3623735	Statement	.	832:81:31043:31043	3623096	111	True				
ANR	3623736	Statement	codeLimit	832:82:31044:31052	3623096	112	True				
ANR	3623737	Statement	)	832:91:31053:31053	3623096	113	True				
ANR	3623738	ExpressionStatement		832:92:31054:31054	3623096	114	True				
ANR	3623739	ForStatement	for ( j = 0 ; j < cscd . nCodeSlots ; j ++ )		3623096	115					
ANR	3623740	ForInit	j = 0 ;	833:6:31062:31067	3623096	0	True				
ANR	3623741	AssignmentExpression	j = 0		3623096	0		=			
ANR	3623742	Identifier	j		3623096	0					
ANR	3623743	PrimaryExpression	0		3623096	1					
ANR	3623744	Condition	j < cscd . nCodeSlots	833:13:31069:31087	3623096	1	True				
ANR	3623745	RelationalExpression	j < cscd . nCodeSlots		3623096	0		<			
ANR	3623746	Identifier	j		3623096	0					
ANR	3623747	MemberAccess	cscd . nCodeSlots		3623096	1					
ANR	3623748	Identifier	cscd		3623096	0					
ANR	3623749	Identifier	nCodeSlots		3623096	1					
ANR	3623750	PostIncDecOperationExpression	j ++	833:34:31090:31092	3623096	2	True				
ANR	3623751	Identifier	j		3623096	0					
ANR	3623752	IncDec	++		3623096	1					
ANR	3623753	CompoundStatement		118:2:3832:3889	3623096	3					
ANR	3623754	IdentifierDeclStatement	int fof = 4096 * j ;	834:2:31099:31117	3623096	0	True				
ANR	3623755	IdentifierDecl	fof = 4096 * j		3623096	0					
ANR	3623756	IdentifierDeclType	int		3623096	0					
ANR	3623757	Identifier	fof		3623096	1					
ANR	3623758	AssignmentExpression	fof = 4096 * j		3623096	2		=			
ANR	3623759	Identifier	fof		3623096	0					
ANR	3623760	MultiplicativeExpression	4096 * j		3623096	1		*			
ANR	3623761	PrimaryExpression	4096		3623096	0					
ANR	3623762	Identifier	j		3623096	1					
ANR	3623763	IdentifierDeclStatement	int idx = j * hashSize ;	835:2:31121:31143	3623096	1	True				
ANR	3623764	IdentifierDecl	idx = j * hashSize		3623096	0					
ANR	3623765	IdentifierDeclType	int		3623096	0					
ANR	3623766	Identifier	idx		3623096	1					
ANR	3623767	AssignmentExpression	idx = j * hashSize		3623096	2		=			
ANR	3623768	Identifier	idx		3623096	0					
ANR	3623769	MultiplicativeExpression	j * hashSize		3623096	1		*			
ANR	3623770	Identifier	j		3623096	0					
ANR	3623771	Identifier	hashSize		3623096	1					
ANR	3623772	Statement	eprintf	836:2:31147:31153	3623096	2	True				
ANR	3623773	Statement	(	836:10:31155:31155	3623096	3	True				
ANR	3623774	Statement	"""0x%08"""	836:11:31156:31162	3623096	4	True				
ANR	3623775	Statement	PFMT64x	836:18:31163:31169	3623096	5	True				
ANR	3623776	Statement	"""  """	836:25:31170:31173	3623096	6	True				
ANR	3623777	Statement	","	836:29:31174:31174	3623096	7	True				
ANR	3623778	Statement	off	836:31:31176:31178	3623096	8	True				
ANR	3623779	Statement	+	836:35:31180:31180	3623096	9	True				
ANR	3623780	Statement	cscd	836:37:31182:31185	3623096	10	True				
ANR	3623781	Statement	.	836:41:31186:31186	3623096	11	True				
ANR	3623782	Statement	hashOffset	836:42:31187:31196	3623096	12	True				
ANR	3623783	Statement	+	836:53:31198:31198	3623096	13	True				
ANR	3623784	Statement	idx	836:55:31200:31202	3623096	14	True				
ANR	3623785	Statement	)	836:58:31203:31203	3623096	15	True				
ANR	3623786	ExpressionStatement		836:59:31204:31204	3623096	16	True				
ANR	3623787	ForStatement	for ( k = 0 ; k < hashSize ; k ++ )		3623096	17					
ANR	3623788	ForInit	k = 0 ;	837:7:31213:31218	3623096	0	True				
ANR	3623789	AssignmentExpression	k = 0		3623096	0		=			
ANR	3623790	Identifier	k		3623096	0					
ANR	3623791	PrimaryExpression	0		3623096	1					
ANR	3623792	Condition	k < hashSize	837:14:31220:31231	3623096	1	True				
ANR	3623793	RelationalExpression	k < hashSize		3623096	0		<			
ANR	3623794	Identifier	k		3623096	0					
ANR	3623795	Identifier	hashSize		3623096	1					
ANR	3623796	PostIncDecOperationExpression	k ++	837:28:31234:31236	3623096	2	True				
ANR	3623797	Identifier	k		3623096	0					
ANR	3623798	IncDec	++		3623096	1					
ANR	3623799	CompoundStatement		114:33:3768:3768	3623096	3					
ANR	3623800	ExpressionStatement	"eprintf ( ""%02x"" , hash [ idx + k ] )"	838:3:31244:31275	3623096	0	True				
ANR	3623801	CallExpression	"eprintf ( ""%02x"" , hash [ idx + k ] )"		3623096	0					
ANR	3623802	Callee	eprintf		3623096	0					
ANR	3623803	Identifier	eprintf		3623096	0					
ANR	3623804	ArgumentList	"""%02x"""		3623096	1					
ANR	3623805	Argument	"""%02x"""		3623096	0					
ANR	3623806	PrimaryExpression	"""%02x"""		3623096	0					
ANR	3623807	Argument	hash [ idx + k ]		3623096	1					
ANR	3623808	ArrayIndexing	hash [ idx + k ]		3623096	0					
ANR	3623809	Identifier	hash		3623096	0					
ANR	3623810	AdditiveExpression	idx + k		3623096	1		+			
ANR	3623811	Identifier	idx		3623096	0					
ANR	3623812	Identifier	k		3623096	1					
ANR	3623813	IdentifierDeclStatement	ut8 fofbuf [ 4096 ] ;	840:2:31283:31299	3623096	18	True				
ANR	3623814	IdentifierDecl	fofbuf [ 4096 ]		3623096	0					
ANR	3623815	IdentifierDeclType	ut8 [ 4096 ]		3623096	0					
ANR	3623816	Identifier	fofbuf		3623096	1					
ANR	3623817	PrimaryExpression	4096		3623096	2					
ANR	3623818	IdentifierDeclStatement	"int fofsz = R_MIN ( sizeof ( fofbuf ) , cscd . codeLimit - fof ) ;"	841:2:31303:31360	3623096	19	True				
ANR	3623819	IdentifierDecl	"fofsz = R_MIN ( sizeof ( fofbuf ) , cscd . codeLimit - fof )"		3623096	0					
ANR	3623820	IdentifierDeclType	int		3623096	0					
ANR	3623821	Identifier	fofsz		3623096	1					
ANR	3623822	AssignmentExpression	"fofsz = R_MIN ( sizeof ( fofbuf ) , cscd . codeLimit - fof )"		3623096	2		=			
ANR	3623823	Identifier	fofsz		3623096	0					
ANR	3623824	CallExpression	"R_MIN ( sizeof ( fofbuf ) , cscd . codeLimit - fof )"		3623096	1					
ANR	3623825	Callee	R_MIN		3623096	0					
ANR	3623826	Identifier	R_MIN		3623096	0					
ANR	3623827	ArgumentList	sizeof ( fofbuf )		3623096	1					
ANR	3623828	Argument	sizeof ( fofbuf )		3623096	0					
ANR	3623829	SizeofExpression	sizeof ( fofbuf )		3623096	0					
ANR	3623830	Sizeof	sizeof		3623096	0					
ANR	3623831	SizeofOperand	fofbuf		3623096	1					
ANR	3623832	Argument	cscd . codeLimit - fof		3623096	1					
ANR	3623833	AdditiveExpression	cscd . codeLimit - fof		3623096	0		-			
ANR	3623834	MemberAccess	cscd . codeLimit		3623096	0					
ANR	3623835	Identifier	cscd		3623096	0					
ANR	3623836	Identifier	codeLimit		3623096	1					
ANR	3623837	Identifier	fof		3623096	1					
ANR	3623838	ExpressionStatement	"r_buf_read_at ( b , fof , fofbuf , sizeof ( fofbuf ) )"	842:2:31364:31411	3623096	20	True				
ANR	3623839	CallExpression	"r_buf_read_at ( b , fof , fofbuf , sizeof ( fofbuf ) )"		3623096	0					
ANR	3623840	Callee	r_buf_read_at		3623096	0					
ANR	3623841	Identifier	r_buf_read_at		3623096	0					
ANR	3623842	ArgumentList	b		3623096	1					
ANR	3623843	Argument	b		3623096	0					
ANR	3623844	Identifier	b		3623096	0					
ANR	3623845	Argument	fof		3623096	1					
ANR	3623846	Identifier	fof		3623096	0					
ANR	3623847	Argument	fofbuf		3623096	2					
ANR	3623848	Identifier	fofbuf		3623096	0					
ANR	3623849	Argument	sizeof ( fofbuf )		3623096	3					
ANR	3623850	SizeofExpression	sizeof ( fofbuf )		3623096	0					
ANR	3623851	Sizeof	sizeof		3623096	0					
ANR	3623852	SizeofOperand	fofbuf		3623096	1					
ANR	3623853	ExpressionStatement	"r_hash_do_begin ( ctx , algoType )"	843:2:31415:31446	3623096	21	True				
ANR	3623854	CallExpression	"r_hash_do_begin ( ctx , algoType )"		3623096	0					
ANR	3623855	Callee	r_hash_do_begin		3623096	0					
ANR	3623856	Identifier	r_hash_do_begin		3623096	0					
ANR	3623857	ArgumentList	ctx		3623096	1					
ANR	3623858	Argument	ctx		3623096	0					
ANR	3623859	Identifier	ctx		3623096	0					
ANR	3623860	Argument	algoType		3623096	1					
ANR	3623861	Identifier	algoType		3623096	0					
ANR	3623862	IfStatement	if ( algoType == R_HASH_SHA1 )		3623096	22					
ANR	3623863	Condition	algoType == R_HASH_SHA1	844:6:31454:31476	3623096	0	True				
ANR	3623864	EqualityExpression	algoType == R_HASH_SHA1		3623096	0		==			
ANR	3623865	Identifier	algoType		3623096	0					
ANR	3623866	Identifier	R_HASH_SHA1		3623096	1					
ANR	3623867	CompoundStatement		121:31:4008:4008	3623096	1					
ANR	3623868	ExpressionStatement	"r_hash_do_sha1 ( ctx , fofbuf , fofsz )"	845:3:31484:31519	3623096	0	True				
ANR	3623869	CallExpression	"r_hash_do_sha1 ( ctx , fofbuf , fofsz )"		3623096	0					
ANR	3623870	Callee	r_hash_do_sha1		3623096	0					
ANR	3623871	Identifier	r_hash_do_sha1		3623096	0					
ANR	3623872	ArgumentList	ctx		3623096	1					
ANR	3623873	Argument	ctx		3623096	0					
ANR	3623874	Identifier	ctx		3623096	0					
ANR	3623875	Argument	fofbuf		3623096	1					
ANR	3623876	Identifier	fofbuf		3623096	0					
ANR	3623877	Argument	fofsz		3623096	2					
ANR	3623878	Identifier	fofsz		3623096	0					
ANR	3623879	ElseStatement	else		3623096	0					
ANR	3623880	CompoundStatement		123:9:4059:4059	3623096	0					
ANR	3623881	ExpressionStatement	"r_hash_do_sha256 ( ctx , fofbuf , fofsz )"	847:3:31535:31572	3623096	0	True				
ANR	3623882	CallExpression	"r_hash_do_sha256 ( ctx , fofbuf , fofsz )"		3623096	0					
ANR	3623883	Callee	r_hash_do_sha256		3623096	0					
ANR	3623884	Identifier	r_hash_do_sha256		3623096	0					
ANR	3623885	ArgumentList	ctx		3623096	1					
ANR	3623886	Argument	ctx		3623096	0					
ANR	3623887	Identifier	ctx		3623096	0					
ANR	3623888	Argument	fofbuf		3623096	1					
ANR	3623889	Identifier	fofbuf		3623096	0					
ANR	3623890	Argument	fofsz		3623096	2					
ANR	3623891	Identifier	fofsz		3623096	0					
ANR	3623892	ExpressionStatement	"r_hash_do_end ( ctx , algoType )"	849:2:31580:31609	3623096	23	True				
ANR	3623893	CallExpression	"r_hash_do_end ( ctx , algoType )"		3623096	0					
ANR	3623894	Callee	r_hash_do_end		3623096	0					
ANR	3623895	Identifier	r_hash_do_end		3623096	0					
ANR	3623896	ArgumentList	ctx		3623096	1					
ANR	3623897	Argument	ctx		3623096	0					
ANR	3623898	Identifier	ctx		3623096	0					
ANR	3623899	Argument	algoType		3623096	1					
ANR	3623900	Identifier	algoType		3623096	0					
ANR	3623901	IfStatement	"if ( memcmp ( hash + idx , ctx -> digest , hashSize ) )"		3623096	24					
ANR	3623902	Condition	"memcmp ( hash + idx , ctx -> digest , hashSize )"	850:6:31617:31658	3623096	0	True				
ANR	3623903	CallExpression	"memcmp ( hash + idx , ctx -> digest , hashSize )"		3623096	0					
ANR	3623904	Callee	memcmp		3623096	0					
ANR	3623905	Identifier	memcmp		3623096	0					
ANR	3623906	ArgumentList	hash + idx		3623096	1					
ANR	3623907	Argument	hash + idx		3623096	0					
ANR	3623908	AdditiveExpression	hash + idx		3623096	0		+			
ANR	3623909	Identifier	hash		3623096	0					
ANR	3623910	Identifier	idx		3623096	1					
ANR	3623911	Argument	ctx -> digest		3623096	1					
ANR	3623912	PtrMemberAccess	ctx -> digest		3623096	0					
ANR	3623913	Identifier	ctx		3623096	0					
ANR	3623914	Identifier	digest		3623096	1					
ANR	3623915	Argument	hashSize		3623096	2					
ANR	3623916	Identifier	hashSize		3623096	0					
ANR	3623917	CompoundStatement		129:3:4217:4222	3623096	1					
ANR	3623918	ExpressionStatement	"eprintf ( ""  wx "" )"	851:3:31666:31683	3623096	0	True				
ANR	3623919	CallExpression	"eprintf ( ""  wx "" )"		3623096	0					
ANR	3623920	Callee	eprintf		3623096	0					
ANR	3623921	Identifier	eprintf		3623096	0					
ANR	3623922	ArgumentList	"""  wx """		3623096	1					
ANR	3623923	Argument	"""  wx """		3623096	0					
ANR	3623924	PrimaryExpression	"""  wx """		3623096	0					
ANR	3623925	IdentifierDeclStatement	int i ;	852:3:31688:31693	3623096	1	True				
ANR	3623926	IdentifierDecl	i		3623096	0					
ANR	3623927	IdentifierDeclType	int		3623096	0					
ANR	3623928	Identifier	i		3623096	1					
ANR	3623929	ForStatement	for ( i = 0 ; i < hashSize ; i ++ )		3623096	2					
ANR	3623930	ForInit	i = 0 ;	853:8:31703:31708	3623096	0	True				
ANR	3623931	AssignmentExpression	i = 0		3623096	0		=			
ANR	3623932	Identifier	i		3623096	0					
ANR	3623933	PrimaryExpression	0		3623096	1					
ANR	3623934	Condition	i < hashSize	853:15:31710:31721	3623096	1	True				
ANR	3623935	RelationalExpression	i < hashSize		3623096	0		<			
ANR	3623936	Identifier	i		3623096	0					
ANR	3623937	Identifier	hashSize		3623096	1					
ANR	3623938	PostIncDecOperationExpression	i ++	853:28:31723:31725	3623096	2	True				
ANR	3623939	Identifier	i		3623096	0					
ANR	3623940	IncDec	++		3623096	1					
ANR	3623941	CompoundStatement		130:33:4257:4257	3623096	3					
ANR	3623942	ExpressionStatement	"eprintf ( ""%02x"" , ctx -> digest [ i ] )"	854:4:31734:31766	3623096	0	True				
ANR	3623943	CallExpression	"eprintf ( ""%02x"" , ctx -> digest [ i ] )"		3623096	0					
ANR	3623944	Callee	eprintf		3623096	0					
ANR	3623945	Identifier	eprintf		3623096	0					
ANR	3623946	ArgumentList	"""%02x"""		3623096	1					
ANR	3623947	Argument	"""%02x"""		3623096	0					
ANR	3623948	PrimaryExpression	"""%02x"""		3623096	0					
ANR	3623949	Argument	ctx -> digest [ i ]		3623096	1					
ANR	3623950	ArrayIndexing	ctx -> digest [ i ]		3623096	0					
ANR	3623951	PtrMemberAccess	ctx -> digest		3623096	0					
ANR	3623952	Identifier	ctx		3623096	0					
ANR	3623953	Identifier	digest		3623096	1					
ANR	3623954	Identifier	i		3623096	1					
ANR	3623955	ElseStatement	else		3623096	0					
ANR	3623956	CompoundStatement		133:9:4311:4311	3623096	0					
ANR	3623957	ExpressionStatement	"eprintf ( ""  OK"" )"	857:3:31787:31803	3623096	0	True				
ANR	3623958	CallExpression	"eprintf ( ""  OK"" )"		3623096	0					
ANR	3623959	Callee	eprintf		3623096	0					
ANR	3623960	Identifier	eprintf		3623096	0					
ANR	3623961	ArgumentList	"""  OK"""		3623096	1					
ANR	3623962	Argument	"""  OK"""		3623096	0					
ANR	3623963	PrimaryExpression	"""  OK"""		3623096	0					
ANR	3623964	ExpressionStatement	"eprintf ( ""\\n"" )"	859:2:31811:31825	3623096	25	True				
ANR	3623965	CallExpression	"eprintf ( ""\\n"" )"		3623096	0					
ANR	3623966	Callee	eprintf		3623096	0					
ANR	3623967	Identifier	eprintf		3623096	0					
ANR	3623968	ArgumentList	"""\\n"""		3623096	1					
ANR	3623969	Argument	"""\\n"""		3623096	0					
ANR	3623970	PrimaryExpression	"""\\n"""		3623096	0					
ANR	3623971	ExpressionStatement	r_hash_free ( ctx )	861:1:31831:31848	3623096	116	True				
ANR	3623972	CallExpression	r_hash_free ( ctx )		3623096	0					
ANR	3623973	Callee	r_hash_free		3623096	0					
ANR	3623974	Identifier	r_hash_free		3623096	0					
ANR	3623975	ArgumentList	ctx		3623096	1					
ANR	3623976	Argument	ctx		3623096	0					
ANR	3623977	Identifier	ctx		3623096	0					
ANR	3623978	ExpressionStatement	free ( p )	862:1:31851:31859	3623096	117	True				
ANR	3623979	CallExpression	free ( p )		3623096	0					
ANR	3623980	Callee	free		3623096	0					
ANR	3623981	Identifier	free		3623096	0					
ANR	3623982	ArgumentList	p		3623096	1					
ANR	3623983	Argument	p		3623096	0					
ANR	3623984	Identifier	p		3623096	0					
ANR	3623985	ReturnType	static void		3623096	1					
ANR	3623986	Identifier	parseCodeDirectory		3623096	2					
ANR	3623987	ParameterList	"RBuffer * b , int offset , int datasize"		3623096	3					
ANR	3623988	Parameter	RBuffer * b	724:32:27432:27441	3623096	0	True				
ANR	3623989	ParameterType	RBuffer *		3623096	0					
ANR	3623990	Identifier	b		3623096	1					
ANR	3623991	Parameter	int offset	724:44:27444:27453	3623096	1	True				
ANR	3623992	ParameterType	int		3623096	0					
ANR	3623993	Identifier	offset		3623096	1					
ANR	3623994	Parameter	int datasize	724:56:27456:27467	3623096	2	True				
ANR	3623995	ParameterType	int		3623096	0					
ANR	3623996	Identifier	datasize		3623096	1					
ANR	3623997	CFGEntryNode	ENTRY		3623096		True				
ANR	3623998	CFGExitNode	EXIT		3623096		True				
ANR	3623999	Symbol	CS_CodeDirectory		3623096						
ANR	3624000	Symbol	nSpecialSlots		3623096						
ANR	3624001	Symbol	pageSize		3623096						
ANR	3624002	Symbol	codeLimit		3623096						
ANR	3624003	Symbol	cscd . pageSize		3623096						
ANR	3624004	Symbol	identOffset		3623096						
ANR	3624005	Symbol	psize		3623096						
ANR	3624006	Symbol	memcmp		3623096						
ANR	3624007	Symbol	* idx		3623096						
ANR	3624008	Symbol	datasize		3623096						
ANR	3624009	Symbol	R_HASH_SHA256		3623096						
ANR	3624010	Symbol	offset		3623096						
ANR	3624011	Symbol	cscd . nCodeSlots		3623096						
ANR	3624012	Symbol	cscd . teamIDOffset		3623096						
ANR	3624013	Symbol	ctx		3623096						
ANR	3624014	Symbol	cscd . codeLimit		3623096						
ANR	3624015	Symbol	cscd . hashSize		3623096						
ANR	3624016	Symbol	version		3623096						
ANR	3624017	Symbol	fofsz		3623096						
ANR	3624018	Symbol	true		3623096						
ANR	3624019	Symbol	fof		3623096						
ANR	3624020	Symbol	idx		3623096						
ANR	3624021	Symbol	hashType		3623096						
ANR	3624022	Symbol	hash		3623096						
ANR	3624023	Symbol	teamIDOffset		3623096						
ANR	3624024	Symbol	cscd . hashOffset		3623096						
ANR	3624025	Symbol	cscd . flags		3623096						
ANR	3624026	Symbol	flags		3623096						
ANR	3624027	Symbol	calloc		3623096						
ANR	3624028	Symbol	fofbuf		3623096						
ANR	3624029	Symbol	hashOffset		3623096						
ANR	3624030	Symbol	identity		3623096						
ANR	3624031	Symbol	algoType		3623096						
ANR	3624032	Symbol	R_HASH_SHA1		3623096						
ANR	3624033	Symbol	ctx -> digest		3623096						
ANR	3624034	Symbol	* hash		3623096						
ANR	3624035	Symbol	cscd . identOffset		3623096						
ANR	3624036	Symbol	nCodeSlots		3623096						
ANR	3624037	Symbol	* ctx -> digest		3623096						
ANR	3624038	Symbol	b		3623096						
ANR	3624039	Symbol	length		3623096						
ANR	3624040	Symbol	readString		3623096						
ANR	3624041	Symbol	cscd . version		3623096						
ANR	3624042	Symbol	i		3623096						
ANR	3624043	Symbol	j		3623096						
ANR	3624044	Symbol	R_MIN		3623096						
ANR	3624045	Symbol	hashName		3623096						
ANR	3624046	Symbol	k		3623096						
ANR	3624047	Symbol	off		3623096						
ANR	3624048	Symbol	* ctx		3623096						
ANR	3624049	Symbol	r_hash_new		3623096						
ANR	3624050	Symbol	p		3623096						
ANR	3624051	Symbol	* i		3623096						
ANR	3624052	Symbol	cscd . length		3623096						
ANR	3624053	Symbol	* k		3623096						
ANR	3624054	Symbol	teamId		3623096						
ANR	3624055	Symbol	r_buf_read_at		3623096						
ANR	3624056	Symbol	hashSize		3623096						
ANR	3624057	Symbol	* * ctx		3623096						
ANR	3624058	Symbol	cscd . hashType		3623096						
ANR	3624059	Symbol	cscd		3623096						
ANR	3624060	DeclStmt									
ANR	3624061	Decl							int	int	i
ANR	3624062	Decl							int	int	len
ANR	3624063	DeclStmt									
ANR	3624064	Decl							ut32	ut32	data
ANR	3624065	DeclStmt									
ANR	3624066	Decl							struct linkedit_data_command	struct linkedit_data_command	link
ANR	3624067	DeclStmt									
ANR	3624068	Decl							ut8	ut8 [ sizeof ( struct linkedit_data_command ) ]	lit
ANR	3624069	DeclStmt									
ANR	3624070	Decl							struct blob_index_t	struct blob_index_t	idx
ANR	3624071	DeclStmt									
ANR	3624072	Decl							struct super_blob_t	struct super_blob_t	super
ANR	3624073	DeclStmt									
ANR	3624074	Decl							char	char *	verbose
ANR	3624075	DeclStmt									
ANR	3624076	Decl							bool	bool	isVerbose
ANR	3624077	DeclStmt									
ANR	3624078	Decl							struct blob_index_t	struct blob_index_t	bi
ANR	3624079	DeclStmt									
ANR	3624080	Decl							ut64	ut64	off
ANR	3624081	DeclStmt									
ANR	3624082	Decl							struct blob_t	struct blob_t	entitlements
ANR	3624083	DeclStmt									
ANR	3624084	Decl							ut8	ut8 [ 8 ]	header
ANR	3624085	DeclStmt									
ANR	3624086	Decl							ut32	ut32	length
ANR	3624087	DeclStmt									
ANR	3624088	Decl							ut8	ut8 *	p
ANR	3624089	DeclStmt									
ANR	3624090	Decl							ut32	ut32 *	words
ANR	3624091	DeclStmt									
ANR	3624092	Decl							ut8	ut8 [ 256 ]	p
ANR	3624093	DeclStmt									
ANR	3624094	Decl							ut32	ut32	slot_size
ANR	3624095	DeclStmt									
ANR	3624096	Decl							ut32	ut32	ident_size
ANR	3624097	DeclStmt									
ANR	3624098	Decl							char	char *	ident
ANR	3624099	DeclStmt									
ANR	3624100	Decl							ut64	ut64	ptr_thread
ANR	3624101	Decl							ut64	ut64	pc
ANR	3624102	Decl							ut64	ut64	pc_offset
ANR	3624103	DeclStmt									
ANR	3624104	Decl							ut32	ut32	flavor
ANR	3624105	Decl							ut32	ut32	count
ANR	3624106	DeclStmt									
ANR	3624107	Decl							ut8	ut8 *	arw_ptr
ANR	3624108	DeclStmt									
ANR	3624109	Decl							int	int	arw_sz
ANR	3624110	Decl							int	int	len
ANR	3624111	DeclStmt									
ANR	3624112	Decl							ut8	ut8 [ sizeof ( struct thread_command ) ]	thc
ANR	3624113	DeclStmt									
ANR	3624114	Decl							ut8	ut8 [ 4 ]	tmp
ANR	3624115	DeclStmt									
ANR	3624116	Decl							int	int	i
ANR	3624117	DeclStmt									
ANR	3624118	Decl							ut8	ut8 *	p
ANR	3624119	DeclStmt									
ANR	3624120	Decl							struct linkedit_data_command	struct linkedit_data_command	fc
ANR	3624121	DeclStmt									
ANR	3624122	Decl							ut8	ut8 [ sizeof ( struct linkedit_data_command ) ]	sfc
ANR	3624123	DeclStmt									
ANR	3624124	Decl							int	int	len
ANR	3624125	DeclStmt									
ANR	3624126	Decl							ut8	ut8 *	buf
ANR	3624127	DeclStmt									
ANR	3624128	Decl							struct dylib_command	struct dylib_command	dl
ANR	3624129	DeclStmt									
ANR	3624130	Decl							int	int	lib
ANR	3624131	Decl							int	int	len
ANR	3624132	DeclStmt									
ANR	3624133	Decl							ut8	ut8 [ sizeof ( struct dylib_command ) ]	sdl
ANR	3624134	DeclStmt									
ANR	3624135	Decl							void	void *	relibs
ANR	3624136	Function	cmd_to_string	1279:0:45091:47689							
ANR	3624137	FunctionDef	cmd_to_string (ut32 cmd)		3624136	0					
ANR	3624138	CompoundStatement		1279:43:45134:47689	3624136	0					
ANR	3624139	SwitchStatement	switch ( cmd )		3624136	0					
ANR	3624140	Condition	cmd	1280:9:45145:45147	3624136	0	True				
ANR	3624141	Identifier	cmd		3624136	0					
ANR	3624142	CompoundStatement		2:14:15:15	3624136	1					
ANR	3624143	Label	case LC_DATA_IN_CODE :	1281:1:45153:45173	3624136	0	True				
ANR	3624144	Identifier	LC_DATA_IN_CODE		3624136	0					
ANR	3624145	ReturnStatement	"return ""LC_DATA_IN_CODE"" ;"	1282:2:45177:45201	3624136	1	True				
ANR	3624146	PrimaryExpression	"""LC_DATA_IN_CODE"""		3624136	0					
ANR	3624147	Label	case LC_CODE_SIGNATURE :	1283:1:45204:45226	3624136	2	True				
ANR	3624148	Identifier	LC_CODE_SIGNATURE		3624136	0					
ANR	3624149	ReturnStatement	"return ""LC_CODE_SIGNATURE"" ;"	1284:2:45230:45256	3624136	3	True				
ANR	3624150	PrimaryExpression	"""LC_CODE_SIGNATURE"""		3624136	0					
ANR	3624151	Label	case LC_RPATH :	1285:1:45259:45272	3624136	4	True				
ANR	3624152	Identifier	LC_RPATH		3624136	0					
ANR	3624153	ReturnStatement	"return ""LC_RPATH"" ;"	1286:2:45276:45293	3624136	5	True				
ANR	3624154	PrimaryExpression	"""LC_RPATH"""		3624136	0					
ANR	3624155	Label	case LC_TWOLEVEL_HINTS :	1287:1:45296:45318	3624136	6	True				
ANR	3624156	Identifier	LC_TWOLEVEL_HINTS		3624136	0					
ANR	3624157	ReturnStatement	"return ""LC_TWOLEVEL_HINTS"" ;"	1288:2:45322:45348	3624136	7	True				
ANR	3624158	PrimaryExpression	"""LC_TWOLEVEL_HINTS"""		3624136	0					
ANR	3624159	Label	case LC_PREBIND_CKSUM :	1289:1:45351:45372	3624136	8	True				
ANR	3624160	Identifier	LC_PREBIND_CKSUM		3624136	0					
ANR	3624161	ReturnStatement	"return ""LC_PREBIND_CKSUM"" ;"	1290:2:45376:45401	3624136	9	True				
ANR	3624162	PrimaryExpression	"""LC_PREBIND_CKSUM"""		3624136	0					
ANR	3624163	Label	case LC_SEGMENT :	1291:1:45404:45419	3624136	10	True				
ANR	3624164	Identifier	LC_SEGMENT		3624136	0					
ANR	3624165	ReturnStatement	"return ""LC_SEGMENT"" ;"	1292:2:45423:45442	3624136	11	True				
ANR	3624166	PrimaryExpression	"""LC_SEGMENT"""		3624136	0					
ANR	3624167	Label	case LC_SEGMENT_64 :	1293:1:45445:45463	3624136	12	True				
ANR	3624168	Identifier	LC_SEGMENT_64		3624136	0					
ANR	3624169	ReturnStatement	"return ""LC_SEGMENT_64"" ;"	1294:2:45467:45489	3624136	13	True				
ANR	3624170	PrimaryExpression	"""LC_SEGMENT_64"""		3624136	0					
ANR	3624171	Label	case LC_SYMTAB :	1295:1:45492:45506	3624136	14	True				
ANR	3624172	Identifier	LC_SYMTAB		3624136	0					
ANR	3624173	ReturnStatement	"return ""LC_SYMTAB"" ;"	1296:2:45510:45528	3624136	15	True				
ANR	3624174	PrimaryExpression	"""LC_SYMTAB"""		3624136	0					
ANR	3624175	Label	case LC_SYMSEG :	1297:1:45531:45545	3624136	16	True				
ANR	3624176	Identifier	LC_SYMSEG		3624136	0					
ANR	3624177	ReturnStatement	"return ""LC_SYMSEG"" ;"	1298:2:45549:45567	3624136	17	True				
ANR	3624178	PrimaryExpression	"""LC_SYMSEG"""		3624136	0					
ANR	3624179	Label	case LC_DYSYMTAB :	1299:1:45570:45586	3624136	18	True				
ANR	3624180	Identifier	LC_DYSYMTAB		3624136	0					
ANR	3624181	ReturnStatement	"return ""LC_DYSYMTAB"" ;"	1300:2:45590:45610	3624136	19	True				
ANR	3624182	PrimaryExpression	"""LC_DYSYMTAB"""		3624136	0					
ANR	3624183	Label	case LC_PREBOUND_DYLIB :	1301:1:45613:45635	3624136	20	True				
ANR	3624184	Identifier	LC_PREBOUND_DYLIB		3624136	0					
ANR	3624185	ReturnStatement	"return ""LC_PREBOUND_DYLIB"" ;"	1302:2:45639:45665	3624136	21	True				
ANR	3624186	PrimaryExpression	"""LC_PREBOUND_DYLIB"""		3624136	0					
ANR	3624187	Label	case LC_ROUTINES :	1303:1:45668:45684	3624136	22	True				
ANR	3624188	Identifier	LC_ROUTINES		3624136	0					
ANR	3624189	ReturnStatement	"return ""LC_ROUTINES"" ;"	1304:2:45688:45708	3624136	23	True				
ANR	3624190	PrimaryExpression	"""LC_ROUTINES"""		3624136	0					
ANR	3624191	Label	case LC_ROUTINES_64 :	1305:1:45711:45730	3624136	24	True				
ANR	3624192	Identifier	LC_ROUTINES_64		3624136	0					
ANR	3624193	ReturnStatement	"return ""LC_ROUTINES_64"" ;"	1306:2:45734:45757	3624136	25	True				
ANR	3624194	PrimaryExpression	"""LC_ROUTINES_64"""		3624136	0					
ANR	3624195	Label	case LC_SUB_FRAMEWORK :	1307:1:45760:45781	3624136	26	True				
ANR	3624196	Identifier	LC_SUB_FRAMEWORK		3624136	0					
ANR	3624197	ReturnStatement	"return ""LC_SUB_FRAMEWORK"" ;"	1308:2:45785:45810	3624136	27	True				
ANR	3624198	PrimaryExpression	"""LC_SUB_FRAMEWORK"""		3624136	0					
ANR	3624199	Label	case LC_SUB_UMBRELLA :	1309:1:45813:45833	3624136	28	True				
ANR	3624200	Identifier	LC_SUB_UMBRELLA		3624136	0					
ANR	3624201	ReturnStatement	"return ""LC_SUB_UMBRELLA"" ;"	1310:2:45837:45861	3624136	29	True				
ANR	3624202	PrimaryExpression	"""LC_SUB_UMBRELLA"""		3624136	0					
ANR	3624203	Label	case LC_SUB_CLIENT :	1311:1:45864:45882	3624136	30	True				
ANR	3624204	Identifier	LC_SUB_CLIENT		3624136	0					
ANR	3624205	ReturnStatement	"return ""LC_SUB_CLIENT"" ;"	1312:2:45886:45908	3624136	31	True				
ANR	3624206	PrimaryExpression	"""LC_SUB_CLIENT"""		3624136	0					
ANR	3624207	Label	case LC_SUB_LIBRARY :	1313:1:45911:45930	3624136	32	True				
ANR	3624208	Identifier	LC_SUB_LIBRARY		3624136	0					
ANR	3624209	ReturnStatement	"return ""LC_SUB_LIBRARY"" ;"	1314:2:45934:45957	3624136	33	True				
ANR	3624210	PrimaryExpression	"""LC_SUB_LIBRARY"""		3624136	0					
ANR	3624211	Label	case LC_FUNCTION_STARTS :	1315:1:45960:45983	3624136	34	True				
ANR	3624212	Identifier	LC_FUNCTION_STARTS		3624136	0					
ANR	3624213	ReturnStatement	"return ""LC_FUNCTION_STARTS"" ;"	1316:2:45987:46014	3624136	35	True				
ANR	3624214	PrimaryExpression	"""LC_FUNCTION_STARTS"""		3624136	0					
ANR	3624215	Label	case LC_DYLIB_CODE_SIGN_DRS :	1317:1:46017:46044	3624136	36	True				
ANR	3624216	Identifier	LC_DYLIB_CODE_SIGN_DRS		3624136	0					
ANR	3624217	ReturnStatement	"return ""LC_DYLIB_CODE_SIGN_DRS"" ;"	1318:2:46048:46079	3624136	37	True				
ANR	3624218	PrimaryExpression	"""LC_DYLIB_CODE_SIGN_DRS"""		3624136	0					
ANR	3624219	Label	case LC_NOTE :	1319:1:46082:46094	3624136	38	True				
ANR	3624220	Identifier	LC_NOTE		3624136	0					
ANR	3624221	ReturnStatement	"return ""LC_NOTE"" ;"	1320:2:46098:46114	3624136	39	True				
ANR	3624222	PrimaryExpression	"""LC_NOTE"""		3624136	0					
ANR	3624223	Label	case LC_BUILD_VERSION :	1321:1:46117:46138	3624136	40	True				
ANR	3624224	Identifier	LC_BUILD_VERSION		3624136	0					
ANR	3624225	ReturnStatement	"return ""LC_BUILD_VERSION"" ;"	1322:2:46142:46167	3624136	41	True				
ANR	3624226	PrimaryExpression	"""LC_BUILD_VERSION"""		3624136	0					
ANR	3624227	Label	case LC_VERSION_MIN_MACOSX :	1323:1:46170:46196	3624136	42	True				
ANR	3624228	Identifier	LC_VERSION_MIN_MACOSX		3624136	0					
ANR	3624229	ReturnStatement	"return ""LC_VERSION_MIN_MACOSX"" ;"	1324:2:46200:46230	3624136	43	True				
ANR	3624230	PrimaryExpression	"""LC_VERSION_MIN_MACOSX"""		3624136	0					
ANR	3624231	Label	case LC_VERSION_MIN_IPHONEOS :	1325:1:46233:46261	3624136	44	True				
ANR	3624232	Identifier	LC_VERSION_MIN_IPHONEOS		3624136	0					
ANR	3624233	ReturnStatement	"return ""LC_VERSION_MIN_IPHONEOS"" ;"	1326:2:46265:46297	3624136	45	True				
ANR	3624234	PrimaryExpression	"""LC_VERSION_MIN_IPHONEOS"""		3624136	0					
ANR	3624235	Label	case LC_VERSION_MIN_TVOS :	1327:1:46300:46324	3624136	46	True				
ANR	3624236	Identifier	LC_VERSION_MIN_TVOS		3624136	0					
ANR	3624237	ReturnStatement	"return ""LC_VERSION_MIN_TVOS"" ;"	1328:2:46328:46356	3624136	47	True				
ANR	3624238	PrimaryExpression	"""LC_VERSION_MIN_TVOS"""		3624136	0					
ANR	3624239	Label	case LC_VERSION_MIN_WATCHOS :	1329:1:46359:46386	3624136	48	True				
ANR	3624240	Identifier	LC_VERSION_MIN_WATCHOS		3624136	0					
ANR	3624241	ReturnStatement	"return ""LC_VERSION_MIN_WATCHOS"" ;"	1330:2:46390:46421	3624136	49	True				
ANR	3624242	PrimaryExpression	"""LC_VERSION_MIN_WATCHOS"""		3624136	0					
ANR	3624243	Label	case LC_DYLD_INFO :	1331:1:46424:46441	3624136	50	True				
ANR	3624244	Identifier	LC_DYLD_INFO		3624136	0					
ANR	3624245	ReturnStatement	"return ""LC_DYLD_INFO"" ;"	1332:2:46445:46466	3624136	51	True				
ANR	3624246	PrimaryExpression	"""LC_DYLD_INFO"""		3624136	0					
ANR	3624247	Label	case LC_DYLD_INFO_ONLY :	1333:1:46469:46491	3624136	52	True				
ANR	3624248	Identifier	LC_DYLD_INFO_ONLY		3624136	0					
ANR	3624249	ReturnStatement	"return ""LC_DYLD_INFO_ONLY"" ;"	1334:2:46495:46521	3624136	53	True				
ANR	3624250	PrimaryExpression	"""LC_DYLD_INFO_ONLY"""		3624136	0					
ANR	3624251	Label	case LC_DYLD_ENVIRONMENT :	1335:1:46524:46548	3624136	54	True				
ANR	3624252	Identifier	LC_DYLD_ENVIRONMENT		3624136	0					
ANR	3624253	ReturnStatement	"return ""LC_DYLD_ENVIRONMENT"" ;"	1336:2:46552:46580	3624136	55	True				
ANR	3624254	PrimaryExpression	"""LC_DYLD_ENVIRONMENT"""		3624136	0					
ANR	3624255	Label	case LC_SOURCE_VERSION :	1337:1:46583:46605	3624136	56	True				
ANR	3624256	Identifier	LC_SOURCE_VERSION		3624136	0					
ANR	3624257	ReturnStatement	"return ""LC_SOURCE_VERSION"" ;"	1338:2:46609:46635	3624136	57	True				
ANR	3624258	PrimaryExpression	"""LC_SOURCE_VERSION"""		3624136	0					
ANR	3624259	Label	case LC_MAIN :	1339:1:46638:46650	3624136	58	True				
ANR	3624260	Identifier	LC_MAIN		3624136	0					
ANR	3624261	ReturnStatement	"return ""LC_MAIN"" ;"	1340:2:46654:46670	3624136	59	True				
ANR	3624262	PrimaryExpression	"""LC_MAIN"""		3624136	0					
ANR	3624263	Label	case LC_UUID :	1341:1:46673:46685	3624136	60	True				
ANR	3624264	Identifier	LC_UUID		3624136	0					
ANR	3624265	ReturnStatement	"return ""LC_UUID"" ;"	1342:2:46689:46705	3624136	61	True				
ANR	3624266	PrimaryExpression	"""LC_UUID"""		3624136	0					
ANR	3624267	Label	case LC_ID_DYLIB :	1343:1:46708:46724	3624136	62	True				
ANR	3624268	Identifier	LC_ID_DYLIB		3624136	0					
ANR	3624269	ReturnStatement	"return ""LC_ID_DYLIB"" ;"	1344:2:46728:46748	3624136	63	True				
ANR	3624270	PrimaryExpression	"""LC_ID_DYLIB"""		3624136	0					
ANR	3624271	Label	case LC_ID_DYLINKER :	1345:1:46751:46770	3624136	64	True				
ANR	3624272	Identifier	LC_ID_DYLINKER		3624136	0					
ANR	3624273	ReturnStatement	"return ""LC_ID_DYLINKER"" ;"	1346:2:46774:46797	3624136	65	True				
ANR	3624274	PrimaryExpression	"""LC_ID_DYLINKER"""		3624136	0					
ANR	3624275	Label	case LC_LAZY_LOAD_DYLIB :	1347:1:46800:46823	3624136	66	True				
ANR	3624276	Identifier	LC_LAZY_LOAD_DYLIB		3624136	0					
ANR	3624277	ReturnStatement	"return ""LC_LAZY_LOAD_DYLIB"" ;"	1348:2:46827:46854	3624136	67	True				
ANR	3624278	PrimaryExpression	"""LC_LAZY_LOAD_DYLIB"""		3624136	0					
ANR	3624279	Label	case LC_ENCRYPTION_INFO :	1349:1:46857:46880	3624136	68	True				
ANR	3624280	Identifier	LC_ENCRYPTION_INFO		3624136	0					
ANR	3624281	ReturnStatement	"return ""LC_ENCRYPTION_INFO"" ;"	1350:2:46884:46911	3624136	69	True				
ANR	3624282	PrimaryExpression	"""LC_ENCRYPTION_INFO"""		3624136	0					
ANR	3624283	Label	case LC_ENCRYPTION_INFO_64 :	1351:1:46914:46940	3624136	70	True				
ANR	3624284	Identifier	LC_ENCRYPTION_INFO_64		3624136	0					
ANR	3624285	ReturnStatement	"return ""LC_ENCRYPTION_INFO_64"" ;"	1352:2:46944:46974	3624136	71	True				
ANR	3624286	PrimaryExpression	"""LC_ENCRYPTION_INFO_64"""		3624136	0					
ANR	3624287	Label	case LC_SEGMENT_SPLIT_INFO :	1353:1:46977:47003	3624136	72	True				
ANR	3624288	Identifier	LC_SEGMENT_SPLIT_INFO		3624136	0					
ANR	3624289	ReturnStatement	"return ""LC_SEGMENT_SPLIT_INFO"" ;"	1354:2:47007:47037	3624136	73	True				
ANR	3624290	PrimaryExpression	"""LC_SEGMENT_SPLIT_INFO"""		3624136	0					
ANR	3624291	Label	case LC_REEXPORT_DYLIB :	1355:1:47040:47062	3624136	74	True				
ANR	3624292	Identifier	LC_REEXPORT_DYLIB		3624136	0					
ANR	3624293	ReturnStatement	"return ""LC_REEXPORT_DYLIB"" ;"	1356:2:47066:47092	3624136	75	True				
ANR	3624294	PrimaryExpression	"""LC_REEXPORT_DYLIB"""		3624136	0					
ANR	3624295	Label	case LC_LINKER_OPTION :	1357:1:47095:47116	3624136	76	True				
ANR	3624296	Identifier	LC_LINKER_OPTION		3624136	0					
ANR	3624297	ReturnStatement	"return ""LC_LINKER_OPTION"" ;"	1358:2:47120:47145	3624136	77	True				
ANR	3624298	PrimaryExpression	"""LC_LINKER_OPTION"""		3624136	0					
ANR	3624299	Label	case LC_LINKER_OPTIMIZATION_HINT :	1359:1:47148:47180	3624136	78	True				
ANR	3624300	Identifier	LC_LINKER_OPTIMIZATION_HINT		3624136	0					
ANR	3624301	ReturnStatement	"return ""LC_LINKER_OPTIMIZATION_HINT"" ;"	1360:2:47184:47220	3624136	79	True				
ANR	3624302	PrimaryExpression	"""LC_LINKER_OPTIMIZATION_HINT"""		3624136	0					
ANR	3624303	Label	case LC_LOAD_DYLINKER :	1361:1:47223:47244	3624136	80	True				
ANR	3624304	Identifier	LC_LOAD_DYLINKER		3624136	0					
ANR	3624305	ReturnStatement	"return ""LC_LOAD_DYLINKER"" ;"	1362:2:47248:47273	3624136	81	True				
ANR	3624306	PrimaryExpression	"""LC_LOAD_DYLINKER"""		3624136	0					
ANR	3624307	Label	case LC_LOAD_DYLIB :	1363:1:47276:47294	3624136	82	True				
ANR	3624308	Identifier	LC_LOAD_DYLIB		3624136	0					
ANR	3624309	ReturnStatement	"return ""LC_LOAD_DYLIB"" ;"	1364:2:47298:47320	3624136	83	True				
ANR	3624310	PrimaryExpression	"""LC_LOAD_DYLIB"""		3624136	0					
ANR	3624311	Label	case LC_LOAD_WEAK_DYLIB :	1365:1:47323:47346	3624136	84	True				
ANR	3624312	Identifier	LC_LOAD_WEAK_DYLIB		3624136	0					
ANR	3624313	ReturnStatement	"return ""LC_LOAD_WEAK_DYLIB"" ;"	1366:2:47350:47377	3624136	85	True				
ANR	3624314	PrimaryExpression	"""LC_LOAD_WEAK_DYLIB"""		3624136	0					
ANR	3624315	Label	case LC_THREAD :	1367:1:47380:47394	3624136	86	True				
ANR	3624316	Identifier	LC_THREAD		3624136	0					
ANR	3624317	ReturnStatement	"return ""LC_THREAD"" ;"	1368:2:47398:47416	3624136	87	True				
ANR	3624318	PrimaryExpression	"""LC_THREAD"""		3624136	0					
ANR	3624319	Label	case LC_UNIXTHREAD :	1369:1:47419:47437	3624136	88	True				
ANR	3624320	Identifier	LC_UNIXTHREAD		3624136	0					
ANR	3624321	ReturnStatement	"return ""LC_UNIXTHREAD"" ;"	1370:2:47441:47463	3624136	89	True				
ANR	3624322	PrimaryExpression	"""LC_UNIXTHREAD"""		3624136	0					
ANR	3624323	Label	case LC_LOADFVMLIB :	1371:1:47466:47484	3624136	90	True				
ANR	3624324	Identifier	LC_LOADFVMLIB		3624136	0					
ANR	3624325	ReturnStatement	"return ""LC_LOADFVMLIB"" ;"	1372:2:47488:47510	3624136	91	True				
ANR	3624326	PrimaryExpression	"""LC_LOADFVMLIB"""		3624136	0					
ANR	3624327	Label	case LC_IDFVMLIB :	1373:1:47513:47529	3624136	92	True				
ANR	3624328	Identifier	LC_IDFVMLIB		3624136	0					
ANR	3624329	ReturnStatement	"return ""LC_IDFVMLIB"" ;"	1374:2:47533:47553	3624136	93	True				
ANR	3624330	PrimaryExpression	"""LC_IDFVMLIB"""		3624136	0					
ANR	3624331	Label	case LC_IDENT :	1375:1:47556:47569	3624136	94	True				
ANR	3624332	Identifier	LC_IDENT		3624136	0					
ANR	3624333	ReturnStatement	"return ""LC_IDENT"" ;"	1376:2:47573:47590	3624136	95	True				
ANR	3624334	PrimaryExpression	"""LC_IDENT"""		3624136	0					
ANR	3624335	Label	case LC_FVMFILE :	1377:1:47593:47608	3624136	96	True				
ANR	3624336	Identifier	LC_FVMFILE		3624136	0					
ANR	3624337	ReturnStatement	"return ""LC_FVMFILE"" ;"	1378:2:47612:47631	3624136	97	True				
ANR	3624338	PrimaryExpression	"""LC_FVMFILE"""		3624136	0					
ANR	3624339	Label	case LC_PREPAGE :	1379:1:47634:47649	3624136	98	True				
ANR	3624340	Identifier	LC_PREPAGE		3624136	0					
ANR	3624341	ReturnStatement	"return ""LC_PREPAGE"" ;"	1380:2:47653:47672	3624136	99	True				
ANR	3624342	PrimaryExpression	"""LC_PREPAGE"""		3624136	0					
ANR	3624343	ReturnStatement	"return """" ;"	1382:1:47678:47687	3624136	1	True				
ANR	3624344	PrimaryExpression	""""""		3624136	0					
ANR	3624345	ReturnType	static const char *		3624136	1					
ANR	3624346	Identifier	cmd_to_string		3624136	2					
ANR	3624347	ParameterList	ut32 cmd		3624136	3					
ANR	3624348	Parameter	ut32 cmd	1279:33:45124:45131	3624136	0	True				
ANR	3624349	ParameterType	ut32		3624136	0					
ANR	3624350	Identifier	cmd		3624136	1					
ANR	3624351	CFGEntryNode	ENTRY		3624136		True				
ANR	3624352	CFGExitNode	EXIT		3624136		True				
ANR	3624353	Symbol	cmd		3624136						
ANR	3624354	Function	cmd_to_pf_definition	1385:0:47692:50061							
ANR	3624355	FunctionDef	cmd_to_pf_definition (ut32 cmd)		3624354	0					
ANR	3624356	CompoundStatement		1385:50:47742:50061	3624354	0					
ANR	3624357	SwitchStatement	switch ( cmd )		3624354	0					
ANR	3624358	Condition	cmd	1386:9:47753:47755	3624354	0	True				
ANR	3624359	Identifier	cmd		3624354	0					
ANR	3624360	CompoundStatement		2:14:15:15	3624354	1					
ANR	3624361	Label	case LC_BUILD_VERSION :	1387:1:47761:47782	3624354	0	True				
ANR	3624362	Identifier	LC_BUILD_VERSION		3624354	0					
ANR	3624363	ReturnStatement	"return ""mach0_build_version_command"" ;"	1388:2:47786:47822	3624354	1	True				
ANR	3624364	PrimaryExpression	"""mach0_build_version_command"""		3624354	0					
ANR	3624365	Label	case LC_CODE_SIGNATURE :	1389:1:47825:47847	3624354	2	True				
ANR	3624366	Identifier	LC_CODE_SIGNATURE		3624354	0					
ANR	3624367	ReturnStatement	"return ""mach0_code_signature_command"" ;"	1390:2:47851:47888	3624354	3	True				
ANR	3624368	PrimaryExpression	"""mach0_code_signature_command"""		3624354	0					
ANR	3624369	Label	case LC_DATA_IN_CODE :	1391:1:47891:47911	3624354	4	True				
ANR	3624370	Identifier	LC_DATA_IN_CODE		3624354	0					
ANR	3624371	ReturnStatement	"return ""mach0_data_in_code_command"" ;"	1392:2:47915:47950	3624354	5	True				
ANR	3624372	PrimaryExpression	"""mach0_data_in_code_command"""		3624354	0					
ANR	3624373	Label	case LC_DYLD_INFO :	1393:1:47953:47970	3624354	6	True				
ANR	3624374	Identifier	LC_DYLD_INFO		3624354	0					
ANR	3624375	Label	case LC_DYLD_INFO_ONLY :	1394:1:47973:47995	3624354	7	True				
ANR	3624376	Identifier	LC_DYLD_INFO_ONLY		3624354	0					
ANR	3624377	ReturnStatement	"return ""mach0_dyld_info_only_command"" ;"	1395:2:47999:48036	3624354	8	True				
ANR	3624378	PrimaryExpression	"""mach0_dyld_info_only_command"""		3624354	0					
ANR	3624379	Label	case LC_DYLD_ENVIRONMENT :	1396:1:48039:48063	3624354	9	True				
ANR	3624380	Identifier	LC_DYLD_ENVIRONMENT		3624354	0					
ANR	3624381	ReturnStatement	return NULL ;	1397:2:48067:48078	3624354	10	True				
ANR	3624382	Identifier	NULL		3624354	0					
ANR	3624383	Label	case LC_DYLIB_CODE_SIGN_DRS :	1398:1:48081:48108	3624354	11	True				
ANR	3624384	Identifier	LC_DYLIB_CODE_SIGN_DRS		3624354	0					
ANR	3624385	ReturnStatement	return NULL ;	1399:2:48112:48123	3624354	12	True				
ANR	3624386	Identifier	NULL		3624354	0					
ANR	3624387	Label	case LC_DYSYMTAB :	1400:1:48126:48142	3624354	13	True				
ANR	3624388	Identifier	LC_DYSYMTAB		3624354	0					
ANR	3624389	ReturnStatement	"return ""mach0_dysymtab_command"" ;"	1401:2:48146:48177	3624354	14	True				
ANR	3624390	PrimaryExpression	"""mach0_dysymtab_command"""		3624354	0					
ANR	3624391	Label	case LC_ENCRYPTION_INFO :	1402:1:48180:48203	3624354	15	True				
ANR	3624392	Identifier	LC_ENCRYPTION_INFO		3624354	0					
ANR	3624393	ReturnStatement	"return ""mach0_encryption_info_command"" ;"	1403:2:48207:48245	3624354	16	True				
ANR	3624394	PrimaryExpression	"""mach0_encryption_info_command"""		3624354	0					
ANR	3624395	Label	case LC_ENCRYPTION_INFO_64 :	1404:1:48248:48274	3624354	17	True				
ANR	3624396	Identifier	LC_ENCRYPTION_INFO_64		3624354	0					
ANR	3624397	ReturnStatement	"return ""mach0_encryption_info64_command"" ;"	1405:2:48278:48318	3624354	18	True				
ANR	3624398	PrimaryExpression	"""mach0_encryption_info64_command"""		3624354	0					
ANR	3624399	Label	case LC_FUNCTION_STARTS :	1406:1:48321:48344	3624354	19	True				
ANR	3624400	Identifier	LC_FUNCTION_STARTS		3624354	0					
ANR	3624401	ReturnStatement	"return ""mach0_function_starts_command"" ;"	1407:2:48348:48386	3624354	20	True				
ANR	3624402	PrimaryExpression	"""mach0_function_starts_command"""		3624354	0					
ANR	3624403	Label	case LC_FVMFILE :	1408:1:48389:48404	3624354	21	True				
ANR	3624404	Identifier	LC_FVMFILE		3624354	0					
ANR	3624405	ReturnStatement	return NULL ;	1409:2:48408:48419	3624354	22	True				
ANR	3624406	Identifier	NULL		3624354	0					
ANR	3624407	Label	case LC_ID_DYLIB :	1410:1:48422:48438	3624354	23	True				
ANR	3624408	Identifier	LC_ID_DYLIB		3624354	0					
ANR	3624409	ReturnStatement	"return ""mach0_id_dylib_command"" ;"	1411:2:48442:48473	3624354	24	True				
ANR	3624410	PrimaryExpression	"""mach0_id_dylib_command"""		3624354	0					
ANR	3624411	Label	case LC_ID_DYLINKER :	1412:1:48476:48495	3624354	25	True				
ANR	3624412	Identifier	LC_ID_DYLINKER		3624354	0					
ANR	3624413	ReturnStatement	"return ""mach0_id_dylinker_command"" ;"	1413:2:48499:48533	3624354	26	True				
ANR	3624414	PrimaryExpression	"""mach0_id_dylinker_command"""		3624354	0					
ANR	3624415	Label	case LC_IDENT :	1414:1:48536:48549	3624354	27	True				
ANR	3624416	Identifier	LC_IDENT		3624354	0					
ANR	3624417	ReturnStatement	return NULL ;	1415:2:48553:48564	3624354	28	True				
ANR	3624418	Identifier	NULL		3624354	0					
ANR	3624419	Label	case LC_IDFVMLIB :	1416:1:48567:48583	3624354	29	True				
ANR	3624420	Identifier	LC_IDFVMLIB		3624354	0					
ANR	3624421	ReturnStatement	return NULL ;	1417:2:48587:48598	3624354	30	True				
ANR	3624422	Identifier	NULL		3624354	0					
ANR	3624423	Label	case LC_LINKER_OPTION :	1418:1:48601:48622	3624354	31	True				
ANR	3624424	Identifier	LC_LINKER_OPTION		3624354	0					
ANR	3624425	ReturnStatement	return NULL ;	1419:2:48626:48637	3624354	32	True				
ANR	3624426	Identifier	NULL		3624354	0					
ANR	3624427	Label	case LC_LINKER_OPTIMIZATION_HINT :	1420:1:48640:48672	3624354	33	True				
ANR	3624428	Identifier	LC_LINKER_OPTIMIZATION_HINT		3624354	0					
ANR	3624429	ReturnStatement	return NULL ;	1421:2:48676:48687	3624354	34	True				
ANR	3624430	Identifier	NULL		3624354	0					
ANR	3624431	Label	case LC_LOAD_DYLINKER :	1422:1:48690:48711	3624354	35	True				
ANR	3624432	Identifier	LC_LOAD_DYLINKER		3624354	0					
ANR	3624433	ReturnStatement	"return ""mach0_load_dylinker_command"" ;"	1423:2:48715:48751	3624354	36	True				
ANR	3624434	PrimaryExpression	"""mach0_load_dylinker_command"""		3624354	0					
ANR	3624435	Label	case LC_LAZY_LOAD_DYLIB :	1424:1:48754:48777	3624354	37	True				
ANR	3624436	Identifier	LC_LAZY_LOAD_DYLIB		3624354	0					
ANR	3624437	Label	case LC_LOAD_WEAK_DYLIB :	1425:1:48780:48803	3624354	38	True				
ANR	3624438	Identifier	LC_LOAD_WEAK_DYLIB		3624354	0					
ANR	3624439	Label	case LC_LOAD_DYLIB :	1426:1:48806:48824	3624354	39	True				
ANR	3624440	Identifier	LC_LOAD_DYLIB		3624354	0					
ANR	3624441	ReturnStatement	"return ""mach0_dylib_command"" ;"	1427:2:48828:48856	3624354	40	True				
ANR	3624442	PrimaryExpression	"""mach0_dylib_command"""		3624354	0					
ANR	3624443	Label	case LC_LOADFVMLIB :	1428:1:48859:48877	3624354	41	True				
ANR	3624444	Identifier	LC_LOADFVMLIB		3624354	0					
ANR	3624445	ReturnStatement	return NULL ;	1429:2:48881:48892	3624354	42	True				
ANR	3624446	Identifier	NULL		3624354	0					
ANR	3624447	Label	case LC_MAIN :	1430:1:48895:48907	3624354	43	True				
ANR	3624448	Identifier	LC_MAIN		3624354	0					
ANR	3624449	ReturnStatement	"return ""mach0_entry_point_command"" ;"	1431:2:48911:48945	3624354	44	True				
ANR	3624450	PrimaryExpression	"""mach0_entry_point_command"""		3624354	0					
ANR	3624451	Label	case LC_NOTE :	1432:1:48948:48960	3624354	45	True				
ANR	3624452	Identifier	LC_NOTE		3624354	0					
ANR	3624453	ReturnStatement	return NULL ;	1433:2:48964:48975	3624354	46	True				
ANR	3624454	Identifier	NULL		3624354	0					
ANR	3624455	Label	case LC_PREBIND_CKSUM :	1434:1:48978:48999	3624354	47	True				
ANR	3624456	Identifier	LC_PREBIND_CKSUM		3624354	0					
ANR	3624457	ReturnStatement	return NULL ;	1435:2:49003:49014	3624354	48	True				
ANR	3624458	Identifier	NULL		3624354	0					
ANR	3624459	Label	case LC_PREBOUND_DYLIB :	1436:1:49017:49039	3624354	49	True				
ANR	3624460	Identifier	LC_PREBOUND_DYLIB		3624354	0					
ANR	3624461	ReturnStatement	return NULL ;	1437:2:49043:49054	3624354	50	True				
ANR	3624462	Identifier	NULL		3624354	0					
ANR	3624463	Label	case LC_PREPAGE :	1438:1:49057:49072	3624354	51	True				
ANR	3624464	Identifier	LC_PREPAGE		3624354	0					
ANR	3624465	ReturnStatement	return NULL ;	1439:2:49076:49087	3624354	52	True				
ANR	3624466	Identifier	NULL		3624354	0					
ANR	3624467	Label	case LC_REEXPORT_DYLIB :	1440:1:49090:49112	3624354	53	True				
ANR	3624468	Identifier	LC_REEXPORT_DYLIB		3624354	0					
ANR	3624469	ReturnStatement	return NULL ;	1441:2:49116:49127	3624354	54	True				
ANR	3624470	Identifier	NULL		3624354	0					
ANR	3624471	Label	case LC_ROUTINES :	1442:1:49130:49146	3624354	55	True				
ANR	3624472	Identifier	LC_ROUTINES		3624354	0					
ANR	3624473	ReturnStatement	return NULL ;	1443:2:49150:49161	3624354	56	True				
ANR	3624474	Identifier	NULL		3624354	0					
ANR	3624475	Label	case LC_ROUTINES_64 :	1444:1:49164:49183	3624354	57	True				
ANR	3624476	Identifier	LC_ROUTINES_64		3624354	0					
ANR	3624477	ReturnStatement	return NULL ;	1445:2:49187:49198	3624354	58	True				
ANR	3624478	Identifier	NULL		3624354	0					
ANR	3624479	Label	case LC_RPATH :	1446:1:49201:49214	3624354	59	True				
ANR	3624480	Identifier	LC_RPATH		3624354	0					
ANR	3624481	ReturnStatement	"return ""mach0_rpath_command"" ;"	1447:2:49218:49246	3624354	60	True				
ANR	3624482	PrimaryExpression	"""mach0_rpath_command"""		3624354	0					
ANR	3624483	Label	case LC_SEGMENT :	1448:1:49249:49264	3624354	61	True				
ANR	3624484	Identifier	LC_SEGMENT		3624354	0					
ANR	3624485	ReturnStatement	"return ""mach0_segment"" ;"	1449:2:49268:49290	3624354	62	True				
ANR	3624486	PrimaryExpression	"""mach0_segment"""		3624354	0					
ANR	3624487	Label	case LC_SEGMENT_64 :	1450:1:49293:49311	3624354	63	True				
ANR	3624488	Identifier	LC_SEGMENT_64		3624354	0					
ANR	3624489	ReturnStatement	"return ""mach0_segment64"" ;"	1451:2:49315:49339	3624354	64	True				
ANR	3624490	PrimaryExpression	"""mach0_segment64"""		3624354	0					
ANR	3624491	Label	case LC_SEGMENT_SPLIT_INFO :	1452:1:49342:49368	3624354	65	True				
ANR	3624492	Identifier	LC_SEGMENT_SPLIT_INFO		3624354	0					
ANR	3624493	ReturnStatement	"return ""mach0_segment_split_info_command"" ;"	1453:2:49372:49413	3624354	66	True				
ANR	3624494	PrimaryExpression	"""mach0_segment_split_info_command"""		3624354	0					
ANR	3624495	Label	case LC_SOURCE_VERSION :	1454:1:49416:49438	3624354	67	True				
ANR	3624496	Identifier	LC_SOURCE_VERSION		3624354	0					
ANR	3624497	ReturnStatement	"return ""mach0_source_version_command"" ;"	1455:2:49442:49479	3624354	68	True				
ANR	3624498	PrimaryExpression	"""mach0_source_version_command"""		3624354	0					
ANR	3624499	Label	case LC_SUB_FRAMEWORK :	1456:1:49482:49503	3624354	69	True				
ANR	3624500	Identifier	LC_SUB_FRAMEWORK		3624354	0					
ANR	3624501	ReturnStatement	return NULL ;	1457:2:49507:49518	3624354	70	True				
ANR	3624502	Identifier	NULL		3624354	0					
ANR	3624503	Label	case LC_SUB_UMBRELLA :	1458:1:49521:49541	3624354	71	True				
ANR	3624504	Identifier	LC_SUB_UMBRELLA		3624354	0					
ANR	3624505	ReturnStatement	return NULL ;	1459:2:49545:49556	3624354	72	True				
ANR	3624506	Identifier	NULL		3624354	0					
ANR	3624507	Label	case LC_SUB_CLIENT :	1460:1:49559:49577	3624354	73	True				
ANR	3624508	Identifier	LC_SUB_CLIENT		3624354	0					
ANR	3624509	ReturnStatement	return NULL ;	1461:2:49581:49592	3624354	74	True				
ANR	3624510	Identifier	NULL		3624354	0					
ANR	3624511	Label	case LC_SUB_LIBRARY :	1462:1:49595:49614	3624354	75	True				
ANR	3624512	Identifier	LC_SUB_LIBRARY		3624354	0					
ANR	3624513	ReturnStatement	return NULL ;	1463:2:49618:49629	3624354	76	True				
ANR	3624514	Identifier	NULL		3624354	0					
ANR	3624515	Label	case LC_SYMTAB :	1464:1:49632:49646	3624354	77	True				
ANR	3624516	Identifier	LC_SYMTAB		3624354	0					
ANR	3624517	ReturnStatement	"return ""mach0_symtab_command"" ;"	1465:2:49650:49679	3624354	78	True				
ANR	3624518	PrimaryExpression	"""mach0_symtab_command"""		3624354	0					
ANR	3624519	Label	case LC_SYMSEG :	1466:1:49682:49696	3624354	79	True				
ANR	3624520	Identifier	LC_SYMSEG		3624354	0					
ANR	3624521	ReturnStatement	return NULL ;	1467:2:49700:49711	3624354	80	True				
ANR	3624522	Identifier	NULL		3624354	0					
ANR	3624523	Label	case LC_TWOLEVEL_HINTS :	1468:1:49714:49736	3624354	81	True				
ANR	3624524	Identifier	LC_TWOLEVEL_HINTS		3624354	0					
ANR	3624525	ReturnStatement	return NULL ;	1469:2:49740:49751	3624354	82	True				
ANR	3624526	Identifier	NULL		3624354	0					
ANR	3624527	Label	case LC_UUID :	1470:1:49754:49766	3624354	83	True				
ANR	3624528	Identifier	LC_UUID		3624354	0					
ANR	3624529	ReturnStatement	"return ""mach0_uuid_command"" ;"	1471:2:49770:49797	3624354	84	True				
ANR	3624530	PrimaryExpression	"""mach0_uuid_command"""		3624354	0					
ANR	3624531	Label	case LC_VERSION_MIN_MACOSX :	1472:1:49800:49826	3624354	85	True				
ANR	3624532	Identifier	LC_VERSION_MIN_MACOSX		3624354	0					
ANR	3624533	Label	case LC_VERSION_MIN_IPHONEOS :	1473:1:49829:49857	3624354	86	True				
ANR	3624534	Identifier	LC_VERSION_MIN_IPHONEOS		3624354	0					
ANR	3624535	Label	case LC_VERSION_MIN_TVOS :	1474:1:49860:49884	3624354	87	True				
ANR	3624536	Identifier	LC_VERSION_MIN_TVOS		3624354	0					
ANR	3624537	Label	case LC_VERSION_MIN_WATCHOS :	1475:1:49887:49914	3624354	88	True				
ANR	3624538	Identifier	LC_VERSION_MIN_WATCHOS		3624354	0					
ANR	3624539	ReturnStatement	"return ""mach0_version_min_command"" ;"	1476:2:49918:49952	3624354	89	True				
ANR	3624540	PrimaryExpression	"""mach0_version_min_command"""		3624354	0					
ANR	3624541	Label	case LC_THREAD :	1477:1:49955:49969	3624354	90	True				
ANR	3624542	Identifier	LC_THREAD		3624354	0					
ANR	3624543	ReturnStatement	return NULL ;	1478:2:49973:49984	3624354	91	True				
ANR	3624544	Identifier	NULL		3624354	0					
ANR	3624545	Label	case LC_UNIXTHREAD :	1479:1:49987:50005	3624354	92	True				
ANR	3624546	Identifier	LC_UNIXTHREAD		3624354	0					
ANR	3624547	ReturnStatement	"return ""mach0_unixthread_command"" ;"	1480:2:50009:50042	3624354	93	True				
ANR	3624548	PrimaryExpression	"""mach0_unixthread_command"""		3624354	0					
ANR	3624549	ReturnStatement	return NULL ;	1482:1:50048:50059	3624354	1	True				
ANR	3624550	Identifier	NULL		3624354	0					
ANR	3624551	ReturnType	static const char *		3624354	1					
ANR	3624552	Identifier	cmd_to_pf_definition		3624354	2					
ANR	3624553	ParameterList	ut32 cmd		3624354	3					
ANR	3624554	Parameter	ut32 cmd	1385:40:47732:47739	3624354	0	True				
ANR	3624555	ParameterType	ut32		3624354	0					
ANR	3624556	Identifier	cmd		3624354	1					
ANR	3624557	CFGEntryNode	ENTRY		3624354		True				
ANR	3624558	CFGExitNode	EXIT		3624354		True				
ANR	3624559	Symbol	NULL		3624354						
ANR	3624560	Symbol	cmd		3624354						
ANR	3624561	Function	build_version_platform_to_string	1485:0:50064:50462							
ANR	3624562	FunctionDef	build_version_platform_to_string (ut32 platform)		3624561	0					
ANR	3624563	CompoundStatement		1485:67:50131:50462	3624561	0					
ANR	3624564	SwitchStatement	switch ( platform )		3624561	0					
ANR	3624565	Condition	platform	1486:9:50142:50149	3624561	0	True				
ANR	3624566	Identifier	platform		3624561	0					
ANR	3624567	CompoundStatement		2:19:20:20	3624561	1					
ANR	3624568	Label	case 1 :	1487:1:50155:50161	3624561	0	True				
ANR	3624569	ReturnStatement	"return ""macOS"" ;"	1488:2:50165:50179	3624561	1	True				
ANR	3624570	PrimaryExpression	"""macOS"""		3624561	0					
ANR	3624571	Label	case 2 :	1489:1:50182:50188	3624561	2	True				
ANR	3624572	ReturnStatement	"return ""iOS"" ;"	1490:2:50192:50204	3624561	3	True				
ANR	3624573	PrimaryExpression	"""iOS"""		3624561	0					
ANR	3624574	Label	case 3 :	1491:1:50207:50213	3624561	4	True				
ANR	3624575	ReturnStatement	"return ""tvOS"" ;"	1492:2:50217:50230	3624561	5	True				
ANR	3624576	PrimaryExpression	"""tvOS"""		3624561	0					
ANR	3624577	Label	case 4 :	1493:1:50233:50239	3624561	6	True				
ANR	3624578	ReturnStatement	"return ""watchOS"" ;"	1494:2:50243:50259	3624561	7	True				
ANR	3624579	PrimaryExpression	"""watchOS"""		3624561	0					
ANR	3624580	Label	case 5 :	1495:1:50262:50268	3624561	8	True				
ANR	3624581	ReturnStatement	"return ""bridgeOS"" ;"	1496:2:50272:50289	3624561	9	True				
ANR	3624582	PrimaryExpression	"""bridgeOS"""		3624561	0					
ANR	3624583	Label	case 6 :	1497:1:50292:50298	3624561	10	True				
ANR	3624584	ReturnStatement	"return ""iOSmac"" ;"	1498:2:50302:50317	3624561	11	True				
ANR	3624585	PrimaryExpression	"""iOSmac"""		3624561	0					
ANR	3624586	Label	case 7 :	1499:1:50320:50326	3624561	12	True				
ANR	3624587	ReturnStatement	"return ""iOS Simulator"" ;"	1500:2:50330:50352	3624561	13	True				
ANR	3624588	PrimaryExpression	"""iOS Simulator"""		3624561	0					
ANR	3624589	Label	case 8 :	1501:1:50355:50361	3624561	14	True				
ANR	3624590	ReturnStatement	"return ""tvOS Simulator"" ;"	1502:2:50365:50388	3624561	15	True				
ANR	3624591	PrimaryExpression	"""tvOS Simulator"""		3624561	0					
ANR	3624592	Label	case 9 :	1503:1:50391:50397	3624561	16	True				
ANR	3624593	ReturnStatement	"return ""watchOS Simulator"" ;"	1504:2:50401:50427	3624561	17	True				
ANR	3624594	PrimaryExpression	"""watchOS Simulator"""		3624561	0					
ANR	3624595	Label	default :	1505:1:50430:50437	3624561	18	True				
ANR	3624596	Identifier	default		3624561	0					
ANR	3624597	ReturnStatement	"return ""unknown"" ;"	1506:2:50441:50457	3624561	19	True				
ANR	3624598	PrimaryExpression	"""unknown"""		3624561	0					
ANR	3624599	ReturnType	static const char *		3624561	1					
ANR	3624600	Identifier	build_version_platform_to_string		3624561	2					
ANR	3624601	ParameterList	ut32 platform		3624561	3					
ANR	3624602	Parameter	ut32 platform	1485:52:50116:50128	3624561	0	True				
ANR	3624603	ParameterType	ut32		3624561	0					
ANR	3624604	Identifier	platform		3624561	1					
ANR	3624605	CFGEntryNode	ENTRY		3624561		True				
ANR	3624606	CFGExitNode	EXIT		3624561		True				
ANR	3624607	Symbol	platform		3624561						
ANR	3624608	Function	build_version_tool_to_string	1510:0:50465:50654							
ANR	3624609	FunctionDef	build_version_tool_to_string (ut32 tool)		3624608	0					
ANR	3624610	CompoundStatement		1510:59:50524:50654	3624608	0					
ANR	3624611	SwitchStatement	switch ( tool )		3624608	0					
ANR	3624612	Condition	tool	1511:9:50535:50538	3624608	0	True				
ANR	3624613	Identifier	tool		3624608	0					
ANR	3624614	CompoundStatement		2:15:16:16	3624608	1					
ANR	3624615	Label	case 1 :	1512:1:50544:50550	3624608	0	True				
ANR	3624616	ReturnStatement	"return ""clang"" ;"	1513:2:50554:50568	3624608	1	True				
ANR	3624617	PrimaryExpression	"""clang"""		3624608	0					
ANR	3624618	Label	case 2 :	1514:1:50571:50577	3624608	2	True				
ANR	3624619	ReturnStatement	"return ""swift"" ;"	1515:2:50581:50595	3624608	3	True				
ANR	3624620	PrimaryExpression	"""swift"""		3624608	0					
ANR	3624621	Label	case 3 :	1516:1:50598:50604	3624608	4	True				
ANR	3624622	ReturnStatement	"return ""ld"" ;"	1517:2:50608:50619	3624608	5	True				
ANR	3624623	PrimaryExpression	"""ld"""		3624608	0					
ANR	3624624	Label	default :	1518:1:50622:50629	3624608	6	True				
ANR	3624625	Identifier	default		3624608	0					
ANR	3624626	ReturnStatement	"return ""unknown"" ;"	1519:2:50633:50649	3624608	7	True				
ANR	3624627	PrimaryExpression	"""unknown"""		3624608	0					
ANR	3624628	ReturnType	static const char *		3624608	1					
ANR	3624629	Identifier	build_version_tool_to_string		3624608	2					
ANR	3624630	ParameterList	ut32 tool		3624608	3					
ANR	3624631	Parameter	ut32 tool	1510:48:50513:50521	3624608	0	True				
ANR	3624632	ParameterType	ut32		3624608	0					
ANR	3624633	Identifier	tool		3624608	1					
ANR	3624634	CFGEntryNode	ENTRY		3624608		True				
ANR	3624635	CFGExitNode	EXIT		3624608		True				
ANR	3624636	Symbol	tool		3624608						
ANR	3624637	DeclStmt									
ANR	3624638	Decl							struct load_command	struct load_command	lc
ANR	3624639	DeclStmt									
ANR	3624640	Decl							ut8	ut8 [ sizeof ( struct load_command ) ]	loadc
ANR	3624641	DeclStmt									
ANR	3624642	Decl							bool	bool	is_first_thread
ANR	3624643	DeclStmt									
ANR	3624644	Decl							ut64	ut64	off
ANR	3624645	DeclStmt									
ANR	3624646	Decl							int	int	i
ANR	3624647	Decl							int	int	len
ANR	3624648	DeclStmt									
ANR	3624649	Decl							const char	const char *	format_name
ANR	3624650	DeclStmt									
ANR	3624651	Decl							struct uuid_command	struct uuid_command	uc
ANR	3624652	DeclStmt									
ANR	3624653	Decl							char	char [ 128 ]	key
ANR	3624654	DeclStmt									
ANR	3624655	Decl							char	char [ 128 ]	val
ANR	3624656	DeclStmt									
ANR	3624657	Decl							ut8	ut8 [ sizeof ( struct MACH0_ ( encryption_info_command ) ) ]	seic
ANR	3624658	DeclStmt									
ANR	3624659	Decl							struct dylinker_command	struct dylinker_command	dy
ANR	3624660	DeclStmt									
ANR	3624661	Decl							ut8	ut8 [ sizeof ( struct dylinker_command ) ]	sdy
ANR	3624662	DeclStmt									
ANR	3624663	Decl							int	int	len
ANR	3624664	DeclStmt									
ANR	3624665	Decl							char	char *	buf
ANR	3624666	ClassDef	<unnamed>	1699:3:56721:56769							
ANR	3624667	DeclStmt									
ANR	3624668	Decl							ut64	ut64	eo
ANR	3624669	DeclStmt									
ANR	3624670	Decl							ut64	ut64	ss
ANR	3624671	DeclStmt									
ANR	3624672	Decl									ep
ANR	3624673	DeclStmt									
ANR	3624674	Decl							ut8	ut8 [ 2 * sizeof ( ut64 ) ]	sep
ANR	3624675	DeclStmt									
ANR	3624676	Decl							ut8	ut8 [ sizeof ( struct dyld_info_command ) ]	dyldi
ANR	3624677	DeclStmt									
ANR	3624678	Decl							const char	const char *	format_name
ANR	3624679	DeclStmt									
ANR	3624680	Decl							ut8	ut8 [ 8 ]	buf
ANR	3624681	DeclStmt									
ANR	3624682	Decl							ut32	ut32	dataoff
ANR	3624683	DeclStmt									
ANR	3624684	Decl							ut32	ut32	datasize
ANR	3624685	DeclStmt									
ANR	3624686	Decl							ut8	ut8 *	db
ANR	3624687	DeclStmt									
ANR	3624688	Decl							ut32	ut32	dw
ANR	3624689	DeclStmt									
ANR	3624690	Decl							int	int	len
ANR	3624691	DeclStmt									
ANR	3624692	Decl							ut64	ut64	va
ANR	3624693	Function	duplicate_ptr	1920:0:63743:63792							
ANR	3624694	FunctionDef	duplicate_ptr (void * p)		3624693	0					
ANR	3624695	CompoundStatement		1920:36:63779:63792	3624693	0					
ANR	3624696	ReturnStatement	return p ;	1921:1:63782:63790	3624693	0	True				
ANR	3624697	Identifier	p		3624693	0					
ANR	3624698	ReturnType	static void *		3624693	1					
ANR	3624699	Identifier	duplicate_ptr		3624693	2					
ANR	3624700	ParameterList	void * p		3624693	3					
ANR	3624701	Parameter	void * p	1920:27:63770:63776	3624693	0	True				
ANR	3624702	ParameterType	void *		3624693	0					
ANR	3624703	Identifier	p		3624693	1					
ANR	3624704	CFGEntryNode	ENTRY		3624693		True				
ANR	3624705	CFGExitNode	EXIT		3624693		True				
ANR	3624706	Symbol	p		3624693						
ANR	3624707	Function	free_only_key	1924:0:63795:63852							
ANR	3624708	FunctionDef	free_only_key (HtPPKv * kv)		3624707	0					
ANR	3624709	CompoundStatement		1924:38:63833:63852	3624707	0					
ANR	3624710	ExpressionStatement	free ( kv -> key )	1925:1:63836:63850	3624707	0	True				
ANR	3624711	CallExpression	free ( kv -> key )		3624707	0					
ANR	3624712	Callee	free		3624707	0					
ANR	3624713	Identifier	free		3624707	0					
ANR	3624714	ArgumentList	kv -> key		3624707	1					
ANR	3624715	Argument	kv -> key		3624707	0					
ANR	3624716	PtrMemberAccess	kv -> key		3624707	0					
ANR	3624717	Identifier	kv		3624707	0					
ANR	3624718	Identifier	key		3624707	1					
ANR	3624719	ReturnType	static void		3624707	1					
ANR	3624720	Identifier	free_only_key		3624707	2					
ANR	3624721	ParameterList	HtPPKv * kv		3624707	3					
ANR	3624722	Parameter	HtPPKv * kv	1924:26:63821:63830	3624707	0	True				
ANR	3624723	ParameterType	HtPPKv *		3624707	0					
ANR	3624724	Identifier	kv		3624707	1					
ANR	3624725	CFGEntryNode	ENTRY		3624707		True				
ANR	3624726	CFGExitNode	EXIT		3624707		True				
ANR	3624727	Symbol	* kv		3624707						
ANR	3624728	Symbol	kv -> key		3624707						
ANR	3624729	Symbol	kv		3624707						
ANR	3624730	Function	ptr_size	1928:0:63855:63900							
ANR	3624731	FunctionDef	ptr_size (void * c)		3624730	0					
ANR	3624732	CompoundStatement		1928:32:63887:63900	3624730	0					
ANR	3624733	ReturnStatement	return 8 ;	1929:1:63890:63898	3624730	0	True				
ANR	3624734	PrimaryExpression	8		3624730	0					
ANR	3624735	ReturnType	static size_t		3624730	1					
ANR	3624736	Identifier	ptr_size		3624730	2					
ANR	3624737	ParameterList	void * c		3624730	3					
ANR	3624738	Parameter	void * c	1928:23:63878:63884	3624730	0	True				
ANR	3624739	ParameterType	void *		3624730	0					
ANR	3624740	Identifier	c		3624730	1					
ANR	3624741	CFGEntryNode	ENTRY		3624730		True				
ANR	3624742	CFGExitNode	EXIT		3624730		True				
ANR	3624743	Symbol	c		3624730						
ANR	3624744	DeclStmt									
ANR	3624745	Decl							ut8	ut8 *	buf
ANR	3624746	Function	prot2perm	1984:0:65308:65442							
ANR	3624747	FunctionDef	prot2perm (int x)		3624746	0					
ANR	3624748	CompoundStatement		1984:28:65336:65442	3624746	0					
ANR	3624749	IdentifierDeclStatement	int r = 0 ;	1985:1:65339:65348	3624746	0	True				
ANR	3624750	IdentifierDecl	r = 0		3624746	0					
ANR	3624751	IdentifierDeclType	int		3624746	0					
ANR	3624752	Identifier	r		3624746	1					
ANR	3624753	AssignmentExpression	r = 0		3624746	2		=			
ANR	3624754	Identifier	r		3624746	0					
ANR	3624755	PrimaryExpression	0		3624746	1					
ANR	3624756	IfStatement	if ( x & 1 )		3624746	1					
ANR	3624757	Condition	x & 1	1986:5:65355:65359	3624746	0	True				
ANR	3624758	BitAndExpression	x & 1		3624746	0		&			
ANR	3624759	Identifier	x		3624746	0					
ANR	3624760	PrimaryExpression	1		3624746	1					
ANR	3624761	CompoundStatement		3:12:25:25	3624746	1					
ANR	3624762	ExpressionStatement	r |= 4	1987:2:65366:65372	3624746	0	True				
ANR	3624763	AssignmentExpression	r |= 4		3624746	0		|=			
ANR	3624764	Identifier	r		3624746	0					
ANR	3624765	PrimaryExpression	4		3624746	1					
ANR	3624766	IfStatement	if ( x & 2 )		3624746	2					
ANR	3624767	Condition	x & 2	1989:5:65382:65386	3624746	0	True				
ANR	3624768	BitAndExpression	x & 2		3624746	0		&			
ANR	3624769	Identifier	x		3624746	0					
ANR	3624770	PrimaryExpression	2		3624746	1					
ANR	3624771	CompoundStatement		6:12:52:52	3624746	1					
ANR	3624772	ExpressionStatement	r |= 2	1990:2:65393:65399	3624746	0	True				
ANR	3624773	AssignmentExpression	r |= 2		3624746	0		|=			
ANR	3624774	Identifier	r		3624746	0					
ANR	3624775	PrimaryExpression	2		3624746	1					
ANR	3624776	IfStatement	if ( x & 4 )		3624746	3					
ANR	3624777	Condition	x & 4	1992:5:65409:65413	3624746	0	True				
ANR	3624778	BitAndExpression	x & 4		3624746	0		&			
ANR	3624779	Identifier	x		3624746	0					
ANR	3624780	PrimaryExpression	4		3624746	1					
ANR	3624781	CompoundStatement		9:12:79:79	3624746	1					
ANR	3624782	ExpressionStatement	r |= 1	1993:2:65420:65426	3624746	0	True				
ANR	3624783	AssignmentExpression	r |= 1		3624746	0		|=			
ANR	3624784	Identifier	r		3624746	0					
ANR	3624785	PrimaryExpression	1		3624746	1					
ANR	3624786	ReturnStatement	return r ;	1995:1:65432:65440	3624746	4	True				
ANR	3624787	Identifier	r		3624746	0					
ANR	3624788	ReturnType	static int		3624746	1					
ANR	3624789	Identifier	prot2perm		3624746	2					
ANR	3624790	ParameterList	int x		3624746	3					
ANR	3624791	Parameter	int x	1984:21:65329:65333	3624746	0	True				
ANR	3624792	ParameterType	int		3624746	0					
ANR	3624793	Identifier	x		3624746	1					
ANR	3624794	CFGEntryNode	ENTRY		3624746		True				
ANR	3624795	CFGExitNode	EXIT		3624746		True				
ANR	3624796	Symbol	r		3624746						
ANR	3624797	Symbol	x		3624746						
ANR	3624798	Function	__isDataSection	1998:0:65445:65760							
ANR	3624799	FunctionDef	__isDataSection (RBinSection * sect)		3624798	0					
ANR	3624800	CompoundStatement		1998:47:65492:65760	3624798	0					
ANR	3624801	IfStatement	"if ( strstr ( sect -> name , ""_cstring"" ) )"		3624798	0					
ANR	3624802	Condition	"strstr ( sect -> name , ""_cstring"" )"	1999:5:65499:65529	3624798	0	True				
ANR	3624803	CallExpression	"strstr ( sect -> name , ""_cstring"" )"		3624798	0					
ANR	3624804	Callee	strstr		3624798	0					
ANR	3624805	Identifier	strstr		3624798	0					
ANR	3624806	ArgumentList	sect -> name		3624798	1					
ANR	3624807	Argument	sect -> name		3624798	0					
ANR	3624808	PtrMemberAccess	sect -> name		3624798	0					
ANR	3624809	Identifier	sect		3624798	0					
ANR	3624810	Identifier	name		3624798	1					
ANR	3624811	Argument	"""_cstring"""		3624798	1					
ANR	3624812	PrimaryExpression	"""_cstring"""		3624798	0					
ANR	3624813	CompoundStatement		2:38:39:39	3624798	1					
ANR	3624814	ReturnStatement	return true ;	2000:2:65536:65547	3624798	0	True				
ANR	3624815	Identifier	true		3624798	0					
ANR	3624816	IfStatement	"if ( strstr ( sect -> name , ""_objc_methname"" ) )"		3624798	1					
ANR	3624817	Condition	"strstr ( sect -> name , ""_objc_methname"" )"	2002:5:65557:65593	3624798	0	True				
ANR	3624818	CallExpression	"strstr ( sect -> name , ""_objc_methname"" )"		3624798	0					
ANR	3624819	Callee	strstr		3624798	0					
ANR	3624820	Identifier	strstr		3624798	0					
ANR	3624821	ArgumentList	sect -> name		3624798	1					
ANR	3624822	Argument	sect -> name		3624798	0					
ANR	3624823	PtrMemberAccess	sect -> name		3624798	0					
ANR	3624824	Identifier	sect		3624798	0					
ANR	3624825	Identifier	name		3624798	1					
ANR	3624826	Argument	"""_objc_methname"""		3624798	1					
ANR	3624827	PrimaryExpression	"""_objc_methname"""		3624798	0					
ANR	3624828	CompoundStatement		5:44:103:103	3624798	1					
ANR	3624829	ReturnStatement	return true ;	2003:2:65600:65611	3624798	0	True				
ANR	3624830	Identifier	true		3624798	0					
ANR	3624831	IfStatement	"if ( strstr ( sect -> name , ""_objc_classname"" ) )"		3624798	2					
ANR	3624832	Condition	"strstr ( sect -> name , ""_objc_classname"" )"	2005:5:65621:65658	3624798	0	True				
ANR	3624833	CallExpression	"strstr ( sect -> name , ""_objc_classname"" )"		3624798	0					
ANR	3624834	Callee	strstr		3624798	0					
ANR	3624835	Identifier	strstr		3624798	0					
ANR	3624836	ArgumentList	sect -> name		3624798	1					
ANR	3624837	Argument	sect -> name		3624798	0					
ANR	3624838	PtrMemberAccess	sect -> name		3624798	0					
ANR	3624839	Identifier	sect		3624798	0					
ANR	3624840	Identifier	name		3624798	1					
ANR	3624841	Argument	"""_objc_classname"""		3624798	1					
ANR	3624842	PrimaryExpression	"""_objc_classname"""		3624798	0					
ANR	3624843	CompoundStatement		8:45:168:168	3624798	1					
ANR	3624844	ReturnStatement	return true ;	2006:2:65665:65676	3624798	0	True				
ANR	3624845	Identifier	true		3624798	0					
ANR	3624846	IfStatement	"if ( strstr ( sect -> name , ""_objc_methtype"" ) )"		3624798	3					
ANR	3624847	Condition	"strstr ( sect -> name , ""_objc_methtype"" )"	2008:5:65686:65722	3624798	0	True				
ANR	3624848	CallExpression	"strstr ( sect -> name , ""_objc_methtype"" )"		3624798	0					
ANR	3624849	Callee	strstr		3624798	0					
ANR	3624850	Identifier	strstr		3624798	0					
ANR	3624851	ArgumentList	sect -> name		3624798	1					
ANR	3624852	Argument	sect -> name		3624798	0					
ANR	3624853	PtrMemberAccess	sect -> name		3624798	0					
ANR	3624854	Identifier	sect		3624798	0					
ANR	3624855	Identifier	name		3624798	1					
ANR	3624856	Argument	"""_objc_methtype"""		3624798	1					
ANR	3624857	PrimaryExpression	"""_objc_methtype"""		3624798	0					
ANR	3624858	CompoundStatement		11:44:232:232	3624798	1					
ANR	3624859	ReturnStatement	return true ;	2009:2:65729:65740	3624798	0	True				
ANR	3624860	Identifier	true		3624798	0					
ANR	3624861	ReturnStatement	return false ;	2011:1:65746:65758	3624798	4	True				
ANR	3624862	Identifier	false		3624798	0					
ANR	3624863	ReturnType	static bool		3624798	1					
ANR	3624864	Identifier	__isDataSection		3624798	2					
ANR	3624865	ParameterList	RBinSection * sect		3624798	3					
ANR	3624866	Parameter	RBinSection * sect	1998:28:65473:65489	3624798	0	True				
ANR	3624867	ParameterType	RBinSection *		3624798	0					
ANR	3624868	Identifier	sect		3624798	1					
ANR	3624869	CFGEntryNode	ENTRY		3624798		True				
ANR	3624870	CFGExitNode	EXIT		3624798		True				
ANR	3624871	Symbol	strstr		3624798						
ANR	3624872	Symbol	sect		3624798						
ANR	3624873	Symbol	true		3624798						
ANR	3624874	Symbol	false		3624798						
ANR	3624875	Symbol	sect -> name		3624798						
ANR	3624876	Symbol	* sect		3624798						
ANR	3624877	Function	get_segments	2014:7:65770:67841							
ANR	3624878	FunctionDef	get_segments (RBinFile * bf)		3624877	0					
ANR	3624879	CompoundStatement		2014:42:65805:67841	3624877	0					
ANR	3624880	Statement	struct	2015:1:65808:65813	3624877	0	True				
ANR	3624881	ExpressionStatement	MACH0_ ( obj_t ) * bin = bf -> o -> bin_obj	2015:8:65815:65850	3624877	1	True				
ANR	3624882	AssignmentExpression	MACH0_ ( obj_t ) * bin = bf -> o -> bin_obj		3624877	0		=			
ANR	3624883	MultiplicativeExpression	MACH0_ ( obj_t ) * bin		3624877	0		*			
ANR	3624884	CallExpression	MACH0_ ( obj_t )		3624877	0					
ANR	3624885	Callee	MACH0_		3624877	0					
ANR	3624886	Identifier	MACH0_		3624877	0					
ANR	3624887	ArgumentList	obj_t		3624877	1					
ANR	3624888	Argument	obj_t		3624877	0					
ANR	3624889	Identifier	obj_t		3624877	0					
ANR	3624890	Identifier	bin		3624877	1					
ANR	3624891	PtrMemberAccess	bf -> o -> bin_obj		3624877	1					
ANR	3624892	PtrMemberAccess	bf -> o		3624877	0					
ANR	3624893	Identifier	bf		3624877	0					
ANR	3624894	Identifier	o		3624877	1					
ANR	3624895	Identifier	bin_obj		3624877	1					
ANR	3624896	IdentifierDeclStatement	RList * list = r_list_newf ( ( RListFree ) r_bin_section_free ) ;	2017:1:65854:65911	3624877	2	True				
ANR	3624897	IdentifierDecl	* list = r_list_newf ( ( RListFree ) r_bin_section_free )		3624877	0					
ANR	3624898	IdentifierDeclType	RList *		3624877	0					
ANR	3624899	Identifier	list		3624877	1					
ANR	3624900	AssignmentExpression	* list = r_list_newf ( ( RListFree ) r_bin_section_free )		3624877	2		=			
ANR	3624901	Identifier	list		3624877	0					
ANR	3624902	CallExpression	r_list_newf ( ( RListFree ) r_bin_section_free )		3624877	1					
ANR	3624903	Callee	r_list_newf		3624877	0					
ANR	3624904	Identifier	r_list_newf		3624877	0					
ANR	3624905	ArgumentList	( RListFree ) r_bin_section_free		3624877	1					
ANR	3624906	Argument	( RListFree ) r_bin_section_free		3624877	0					
ANR	3624907	CastExpression	( RListFree ) r_bin_section_free		3624877	0					
ANR	3624908	CastTarget	RListFree		3624877	0					
ANR	3624909	Identifier	r_bin_section_free		3624877	1					
ANR	3624910	IdentifierDeclStatement	"int i , j ;"	2019:1:65915:65923	3624877	3	True				
ANR	3624911	IdentifierDecl	i		3624877	0					
ANR	3624912	IdentifierDeclType	int		3624877	0					
ANR	3624913	Identifier	i		3624877	1					
ANR	3624914	IdentifierDecl	j		3624877	1					
ANR	3624915	IdentifierDeclType	int		3624877	0					
ANR	3624916	Identifier	j		3624877	1					
ANR	3624917	IfStatement	if ( bin -> nsegs > 0 )		3624877	4					
ANR	3624918	Condition	bin -> nsegs > 0	2022:5:65953:65966	3624877	0	True				
ANR	3624919	RelationalExpression	bin -> nsegs > 0		3624877	0		>			
ANR	3624920	PtrMemberAccess	bin -> nsegs		3624877	0					
ANR	3624921	Identifier	bin		3624877	0					
ANR	3624922	Identifier	nsegs		3624877	1					
ANR	3624923	PrimaryExpression	0		3624877	1					
ANR	3624924	CompoundStatement		9:21:163:163	3624877	1					
ANR	3624925	Statement	struct	2023:2:65973:65978	3624877	0	True				
ANR	3624926	ExpressionStatement	MACH0_ ( segment_command ) * seg	2023:9:65980:66008	3624877	1	True				
ANR	3624927	MultiplicativeExpression	MACH0_ ( segment_command ) * seg		3624877	0		*			
ANR	3624928	CallExpression	MACH0_ ( segment_command )		3624877	0					
ANR	3624929	Callee	MACH0_		3624877	0					
ANR	3624930	Identifier	MACH0_		3624877	0					
ANR	3624931	ArgumentList	segment_command		3624877	1					
ANR	3624932	Argument	segment_command		3624877	0					
ANR	3624933	Identifier	segment_command		3624877	0					
ANR	3624934	Identifier	seg		3624877	1					
ANR	3624935	ForStatement	for ( i = 0 ; i < bin -> nsegs ; i ++ )		3624877	2					
ANR	3624936	ForInit	i = 0 ;	2024:7:66017:66022	3624877	0	True				
ANR	3624937	AssignmentExpression	i = 0		3624877	0		=			
ANR	3624938	Identifier	i		3624877	0					
ANR	3624939	PrimaryExpression	0		3624877	1					
ANR	3624940	Condition	i < bin -> nsegs	2024:14:66024:66037	3624877	1	True				
ANR	3624941	RelationalExpression	i < bin -> nsegs		3624877	0		<			
ANR	3624942	Identifier	i		3624877	0					
ANR	3624943	PtrMemberAccess	bin -> nsegs		3624877	1					
ANR	3624944	Identifier	bin		3624877	0					
ANR	3624945	Identifier	nsegs		3624877	1					
ANR	3624946	PostIncDecOperationExpression	i ++	2024:30:66040:66042	3624877	2	True				
ANR	3624947	Identifier	i		3624877	0					
ANR	3624948	IncDec	++		3624877	1					
ANR	3624949	CompoundStatement		16:3:312:353	3624877	3					
ANR	3624950	ExpressionStatement	seg = & bin -> segs [ i ]	2025:3:66050:66069	3624877	0	True				
ANR	3624951	AssignmentExpression	seg = & bin -> segs [ i ]		3624877	0		=			
ANR	3624952	Identifier	seg		3624877	0					
ANR	3624953	UnaryOperationExpression	& bin -> segs [ i ]		3624877	1					
ANR	3624954	UnaryOperator	&		3624877	0					
ANR	3624955	ArrayIndexing	bin -> segs [ i ]		3624877	1					
ANR	3624956	PtrMemberAccess	bin -> segs		3624877	0					
ANR	3624957	Identifier	bin		3624877	0					
ANR	3624958	Identifier	segs		3624877	1					
ANR	3624959	Identifier	i		3624877	1					
ANR	3624960	IfStatement	if ( ! seg -> initprot )		3624877	1					
ANR	3624961	Condition	! seg -> initprot	2026:7:66078:66091	3624877	0	True				
ANR	3624962	UnaryOperationExpression	! seg -> initprot		3624877	0					
ANR	3624963	UnaryOperator	!		3624877	0					
ANR	3624964	PtrMemberAccess	seg -> initprot		3624877	1					
ANR	3624965	Identifier	seg		3624877	0					
ANR	3624966	Identifier	initprot		3624877	1					
ANR	3624967	CompoundStatement		13:23:288:288	3624877	1					
ANR	3624968	ContinueStatement	continue ;	2027:4:66100:66108	3624877	0	True				
ANR	3624969	IdentifierDeclStatement	RBinSection * s = r_bin_section_new ( NULL ) ;	2029:3:66118:66159	3624877	2	True				
ANR	3624970	IdentifierDecl	* s = r_bin_section_new ( NULL )		3624877	0					
ANR	3624971	IdentifierDeclType	RBinSection *		3624877	0					
ANR	3624972	Identifier	s		3624877	1					
ANR	3624973	AssignmentExpression	* s = r_bin_section_new ( NULL )		3624877	2		=			
ANR	3624974	Identifier	s		3624877	0					
ANR	3624975	CallExpression	r_bin_section_new ( NULL )		3624877	1					
ANR	3624976	Callee	r_bin_section_new		3624877	0					
ANR	3624977	Identifier	r_bin_section_new		3624877	0					
ANR	3624978	ArgumentList	NULL		3624877	1					
ANR	3624979	Argument	NULL		3624877	0					
ANR	3624980	Identifier	NULL		3624877	0					
ANR	3624981	IfStatement	if ( ! s )		3624877	3					
ANR	3624982	Condition	! s	2030:7:66168:66169	3624877	0	True				
ANR	3624983	UnaryOperationExpression	! s		3624877	0					
ANR	3624984	UnaryOperator	!		3624877	0					
ANR	3624985	Identifier	s		3624877	1					
ANR	3624986	CompoundStatement		17:11:366:366	3624877	1					
ANR	3624987	BreakStatement	break ;	2031:4:66178:66183	3624877	0	True				
ANR	3624988	ExpressionStatement	s -> vaddr = seg -> vmaddr	2033:3:66193:66215	3624877	4	True				
ANR	3624989	AssignmentExpression	s -> vaddr = seg -> vmaddr		3624877	0		=			
ANR	3624990	PtrMemberAccess	s -> vaddr		3624877	0					
ANR	3624991	Identifier	s		3624877	0					
ANR	3624992	Identifier	vaddr		3624877	1					
ANR	3624993	PtrMemberAccess	seg -> vmaddr		3624877	1					
ANR	3624994	Identifier	seg		3624877	0					
ANR	3624995	Identifier	vmaddr		3624877	1					
ANR	3624996	ExpressionStatement	s -> vsize = seg -> vmsize	2034:3:66220:66242	3624877	5	True				
ANR	3624997	AssignmentExpression	s -> vsize = seg -> vmsize		3624877	0		=			
ANR	3624998	PtrMemberAccess	s -> vsize		3624877	0					
ANR	3624999	Identifier	s		3624877	0					
ANR	3625000	Identifier	vsize		3624877	1					
ANR	3625001	PtrMemberAccess	seg -> vmsize		3624877	1					
ANR	3625002	Identifier	seg		3624877	0					
ANR	3625003	Identifier	vmsize		3624877	1					
ANR	3625004	ExpressionStatement	s -> size = seg -> vmsize	2035:3:66247:66268	3624877	6	True				
ANR	3625005	AssignmentExpression	s -> size = seg -> vmsize		3624877	0		=			
ANR	3625006	PtrMemberAccess	s -> size		3624877	0					
ANR	3625007	Identifier	s		3624877	0					
ANR	3625008	Identifier	size		3624877	1					
ANR	3625009	PtrMemberAccess	seg -> vmsize		3624877	1					
ANR	3625010	Identifier	seg		3624877	0					
ANR	3625011	Identifier	vmsize		3624877	1					
ANR	3625012	ExpressionStatement	s -> paddr = seg -> fileoff	2036:3:66273:66296	3624877	7	True				
ANR	3625013	AssignmentExpression	s -> paddr = seg -> fileoff		3624877	0		=			
ANR	3625014	PtrMemberAccess	s -> paddr		3624877	0					
ANR	3625015	Identifier	s		3624877	0					
ANR	3625016	Identifier	paddr		3624877	1					
ANR	3625017	PtrMemberAccess	seg -> fileoff		3624877	1					
ANR	3625018	Identifier	seg		3624877	0					
ANR	3625019	Identifier	fileoff		3624877	1					
ANR	3625020	ExpressionStatement	s -> paddr += bf -> o -> boffset	2037:3:66301:66327	3624877	8	True				
ANR	3625021	AssignmentExpression	s -> paddr += bf -> o -> boffset		3624877	0		+=			
ANR	3625022	PtrMemberAccess	s -> paddr		3624877	0					
ANR	3625023	Identifier	s		3624877	0					
ANR	3625024	Identifier	paddr		3624877	1					
ANR	3625025	PtrMemberAccess	bf -> o -> boffset		3624877	1					
ANR	3625026	PtrMemberAccess	bf -> o		3624877	0					
ANR	3625027	Identifier	bf		3624877	0					
ANR	3625028	Identifier	o		3624877	1					
ANR	3625029	Identifier	boffset		3624877	1					
ANR	3625030	ExpressionStatement	"s -> name = r_str_ndup ( seg -> segname , 16 )"	2039:3:66365:66404	3624877	9	True				
ANR	3625031	AssignmentExpression	"s -> name = r_str_ndup ( seg -> segname , 16 )"		3624877	0		=			
ANR	3625032	PtrMemberAccess	s -> name		3624877	0					
ANR	3625033	Identifier	s		3624877	0					
ANR	3625034	Identifier	name		3624877	1					
ANR	3625035	CallExpression	"r_str_ndup ( seg -> segname , 16 )"		3624877	1					
ANR	3625036	Callee	r_str_ndup		3624877	0					
ANR	3625037	Identifier	r_str_ndup		3624877	0					
ANR	3625038	ArgumentList	seg -> segname		3624877	1					
ANR	3625039	Argument	seg -> segname		3624877	0					
ANR	3625040	PtrMemberAccess	seg -> segname		3624877	0					
ANR	3625041	Identifier	seg		3624877	0					
ANR	3625042	Identifier	segname		3624877	1					
ANR	3625043	Argument	16		3624877	1					
ANR	3625044	PrimaryExpression	16		3624877	0					
ANR	3625045	ExpressionStatement	s -> is_segment = true	2040:3:66409:66429	3624877	10	True				
ANR	3625046	AssignmentExpression	s -> is_segment = true		3624877	0		=			
ANR	3625047	PtrMemberAccess	s -> is_segment		3624877	0					
ANR	3625048	Identifier	s		3624877	0					
ANR	3625049	Identifier	is_segment		3624877	1					
ANR	3625050	Identifier	true		3624877	1					
ANR	3625051	ExpressionStatement	"r_str_filter ( s -> name , - 1 )"	2041:3:66434:66460	3624877	11	True				
ANR	3625052	CallExpression	"r_str_filter ( s -> name , - 1 )"		3624877	0					
ANR	3625053	Callee	r_str_filter		3624877	0					
ANR	3625054	Identifier	r_str_filter		3624877	0					
ANR	3625055	ArgumentList	s -> name		3624877	1					
ANR	3625056	Argument	s -> name		3624877	0					
ANR	3625057	PtrMemberAccess	s -> name		3624877	0					
ANR	3625058	Identifier	s		3624877	0					
ANR	3625059	Identifier	name		3624877	1					
ANR	3625060	Argument	- 1		3624877	1					
ANR	3625061	UnaryOperationExpression	- 1		3624877	0					
ANR	3625062	UnaryOperator	-		3624877	0					
ANR	3625063	PrimaryExpression	1		3624877	1					
ANR	3625064	ExpressionStatement	s -> perm = prot2perm ( seg -> initprot )	2042:3:66465:66500	3624877	12	True				
ANR	3625065	AssignmentExpression	s -> perm = prot2perm ( seg -> initprot )		3624877	0		=			
ANR	3625066	PtrMemberAccess	s -> perm		3624877	0					
ANR	3625067	Identifier	s		3624877	0					
ANR	3625068	Identifier	perm		3624877	1					
ANR	3625069	CallExpression	prot2perm ( seg -> initprot )		3624877	1					
ANR	3625070	Callee	prot2perm		3624877	0					
ANR	3625071	Identifier	prot2perm		3624877	0					
ANR	3625072	ArgumentList	seg -> initprot		3624877	1					
ANR	3625073	Argument	seg -> initprot		3624877	0					
ANR	3625074	PtrMemberAccess	seg -> initprot		3624877	0					
ANR	3625075	Identifier	seg		3624877	0					
ANR	3625076	Identifier	initprot		3624877	1					
ANR	3625077	ExpressionStatement	s -> add = true	2043:3:66505:66518	3624877	13	True				
ANR	3625078	AssignmentExpression	s -> add = true		3624877	0		=			
ANR	3625079	PtrMemberAccess	s -> add		3624877	0					
ANR	3625080	Identifier	s		3624877	0					
ANR	3625081	Identifier	add		3624877	1					
ANR	3625082	Identifier	true		3624877	1					
ANR	3625083	ExpressionStatement	"r_list_append ( list , s )"	2044:3:66523:66546	3624877	14	True				
ANR	3625084	CallExpression	"r_list_append ( list , s )"		3624877	0					
ANR	3625085	Callee	r_list_append		3624877	0					
ANR	3625086	Identifier	r_list_append		3624877	0					
ANR	3625087	ArgumentList	list		3624877	1					
ANR	3625088	Argument	list		3624877	0					
ANR	3625089	Identifier	list		3624877	0					
ANR	3625090	Argument	s		3624877	1					
ANR	3625091	Identifier	s		3624877	0					
ANR	3625092	IfStatement	if ( bin -> nsects > 0 )		3624877	5					
ANR	3625093	Condition	bin -> nsects > 0	2047:5:66560:66574	3624877	0	True				
ANR	3625094	RelationalExpression	bin -> nsects > 0		3624877	0		>			
ANR	3625095	PtrMemberAccess	bin -> nsects		3624877	0					
ANR	3625096	Identifier	bin		3624877	0					
ANR	3625097	Identifier	nsects		3624877	1					
ANR	3625098	PrimaryExpression	0		3624877	1					
ANR	3625099	CompoundStatement		35:2:775:818	3624877	1					
ANR	3625100	IdentifierDeclStatement	"int last_section = R_MIN ( bin -> nsects , 128 ) ;"	2048:2:66581:66624	3624877	0	True				
ANR	3625101	IdentifierDecl	"last_section = R_MIN ( bin -> nsects , 128 )"		3624877	0					
ANR	3625102	IdentifierDeclType	int		3624877	0					
ANR	3625103	Identifier	last_section		3624877	1					
ANR	3625104	AssignmentExpression	"last_section = R_MIN ( bin -> nsects , 128 )"		3624877	2		=			
ANR	3625105	Identifier	last_section		3624877	0					
ANR	3625106	CallExpression	"R_MIN ( bin -> nsects , 128 )"		3624877	1					
ANR	3625107	Callee	R_MIN		3624877	0					
ANR	3625108	Identifier	R_MIN		3624877	0					
ANR	3625109	ArgumentList	bin -> nsects		3624877	1					
ANR	3625110	Argument	bin -> nsects		3624877	0					
ANR	3625111	PtrMemberAccess	bin -> nsects		3624877	0					
ANR	3625112	Identifier	bin		3624877	0					
ANR	3625113	Identifier	nsects		3624877	1					
ANR	3625114	Argument	128		3624877	1					
ANR	3625115	PrimaryExpression	128		3624877	0					
ANR	3625116	ForStatement	for ( i = 0 ; i < last_section ; i ++ )		3624877	1					
ANR	3625117	ForInit	i = 0 ;	2049:7:66659:66664	3624877	0	True				
ANR	3625118	AssignmentExpression	i = 0		3624877	0		=			
ANR	3625119	Identifier	i		3624877	0					
ANR	3625120	PrimaryExpression	0		3624877	1					
ANR	3625121	Condition	i < last_section	2049:14:66666:66681	3624877	1	True				
ANR	3625122	RelationalExpression	i < last_section		3624877	0		<			
ANR	3625123	Identifier	i		3624877	0					
ANR	3625124	Identifier	last_section		3624877	1					
ANR	3625125	PostIncDecOperationExpression	i ++	2049:32:66684:66686	3624877	2	True				
ANR	3625126	Identifier	i		3624877	0					
ANR	3625127	IncDec	++		3624877	1					
ANR	3625128	CompoundStatement		58:3:1586:1664	3624877	3					
ANR	3625129	IdentifierDeclStatement	RBinSection * s = R_NEW0 ( RBinSection ) ;	2050:3:66694:66731	3624877	0	True				
ANR	3625130	IdentifierDecl	* s = R_NEW0 ( RBinSection )		3624877	0					
ANR	3625131	IdentifierDeclType	RBinSection *		3624877	0					
ANR	3625132	Identifier	s		3624877	1					
ANR	3625133	AssignmentExpression	* s = R_NEW0 ( RBinSection )		3624877	2		=			
ANR	3625134	Identifier	s		3624877	0					
ANR	3625135	CallExpression	R_NEW0 ( RBinSection )		3624877	1					
ANR	3625136	Callee	R_NEW0		3624877	0					
ANR	3625137	Identifier	R_NEW0		3624877	0					
ANR	3625138	ArgumentList	RBinSection		3624877	1					
ANR	3625139	Argument	RBinSection		3624877	0					
ANR	3625140	Identifier	RBinSection		3624877	0					
ANR	3625141	IfStatement	if ( ! s )		3624877	1					
ANR	3625142	Condition	! s	2051:7:66740:66741	3624877	0	True				
ANR	3625143	UnaryOperationExpression	! s		3624877	0					
ANR	3625144	UnaryOperator	!		3624877	0					
ANR	3625145	Identifier	s		3624877	1					
ANR	3625146	CompoundStatement		38:11:938:938	3624877	1					
ANR	3625147	BreakStatement	break ;	2052:4:66750:66755	3624877	0	True				
ANR	3625148	ExpressionStatement	s -> vaddr = ( ut64 ) bin -> sects [ i ] . addr	2054:3:66765:66800	3624877	2	True				
ANR	3625149	AssignmentExpression	s -> vaddr = ( ut64 ) bin -> sects [ i ] . addr		3624877	0		=			
ANR	3625150	PtrMemberAccess	s -> vaddr		3624877	0					
ANR	3625151	Identifier	s		3624877	0					
ANR	3625152	Identifier	vaddr		3624877	1					
ANR	3625153	CastExpression	( ut64 ) bin -> sects [ i ] . addr		3624877	1					
ANR	3625154	CastTarget	ut64		3624877	0					
ANR	3625155	MemberAccess	bin -> sects [ i ] . addr		3624877	1					
ANR	3625156	ArrayIndexing	bin -> sects [ i ]		3624877	0					
ANR	3625157	PtrMemberAccess	bin -> sects		3624877	0					
ANR	3625158	Identifier	bin		3624877	0					
ANR	3625159	Identifier	sects		3624877	1					
ANR	3625160	Identifier	i		3624877	1					
ANR	3625161	Identifier	addr		3624877	1					
ANR	3625162	ExpressionStatement	s -> vsize = ( ut64 ) bin -> sects [ i ] . size	2055:3:66805:66840	3624877	3	True				
ANR	3625163	AssignmentExpression	s -> vsize = ( ut64 ) bin -> sects [ i ] . size		3624877	0		=			
ANR	3625164	PtrMemberAccess	s -> vsize		3624877	0					
ANR	3625165	Identifier	s		3624877	0					
ANR	3625166	Identifier	vsize		3624877	1					
ANR	3625167	CastExpression	( ut64 ) bin -> sects [ i ] . size		3624877	1					
ANR	3625168	CastTarget	ut64		3624877	0					
ANR	3625169	MemberAccess	bin -> sects [ i ] . size		3624877	1					
ANR	3625170	ArrayIndexing	bin -> sects [ i ]		3624877	0					
ANR	3625171	PtrMemberAccess	bin -> sects		3624877	0					
ANR	3625172	Identifier	bin		3624877	0					
ANR	3625173	Identifier	sects		3624877	1					
ANR	3625174	Identifier	i		3624877	1					
ANR	3625175	Identifier	size		3624877	1					
ANR	3625176	ExpressionStatement	s -> is_segment = false	2056:3:66845:66866	3624877	4	True				
ANR	3625177	AssignmentExpression	s -> is_segment = false		3624877	0		=			
ANR	3625178	PtrMemberAccess	s -> is_segment		3624877	0					
ANR	3625179	Identifier	s		3624877	0					
ANR	3625180	Identifier	is_segment		3624877	1					
ANR	3625181	Identifier	false		3624877	1					
ANR	3625182	ExpressionStatement	s -> size = ( bin -> sects [ i ] . flags == S_ZEROFILL ) ? 0 : ( ut64 ) bin -> sects [ i ] . size	2057:3:66871:66947	3624877	5	True				
ANR	3625183	AssignmentExpression	s -> size = ( bin -> sects [ i ] . flags == S_ZEROFILL ) ? 0 : ( ut64 ) bin -> sects [ i ] . size		3624877	0		=			
ANR	3625184	PtrMemberAccess	s -> size		3624877	0					
ANR	3625185	Identifier	s		3624877	0					
ANR	3625186	Identifier	size		3624877	1					
ANR	3625187	ConditionalExpression	( bin -> sects [ i ] . flags == S_ZEROFILL ) ? 0 : ( ut64 ) bin -> sects [ i ] . size		3624877	1					
ANR	3625188	Condition	bin -> sects [ i ] . flags == S_ZEROFILL		3624877	0					
ANR	3625189	EqualityExpression	bin -> sects [ i ] . flags == S_ZEROFILL		3624877	0		==			
ANR	3625190	MemberAccess	bin -> sects [ i ] . flags		3624877	0					
ANR	3625191	ArrayIndexing	bin -> sects [ i ]		3624877	0					
ANR	3625192	PtrMemberAccess	bin -> sects		3624877	0					
ANR	3625193	Identifier	bin		3624877	0					
ANR	3625194	Identifier	sects		3624877	1					
ANR	3625195	Identifier	i		3624877	1					
ANR	3625196	Identifier	flags		3624877	1					
ANR	3625197	Identifier	S_ZEROFILL		3624877	1					
ANR	3625198	PrimaryExpression	0		3624877	1					
ANR	3625199	CastExpression	( ut64 ) bin -> sects [ i ] . size		3624877	2					
ANR	3625200	CastTarget	ut64		3624877	0					
ANR	3625201	MemberAccess	bin -> sects [ i ] . size		3624877	1					
ANR	3625202	ArrayIndexing	bin -> sects [ i ]		3624877	0					
ANR	3625203	PtrMemberAccess	bin -> sects		3624877	0					
ANR	3625204	Identifier	bin		3624877	0					
ANR	3625205	Identifier	sects		3624877	1					
ANR	3625206	Identifier	i		3624877	1					
ANR	3625207	Identifier	size		3624877	1					
ANR	3625208	ExpressionStatement	s -> paddr = ( ut64 ) bin -> sects [ i ] . offset	2059:3:66968:67005	3624877	6	True				
ANR	3625209	AssignmentExpression	s -> paddr = ( ut64 ) bin -> sects [ i ] . offset		3624877	0		=			
ANR	3625210	PtrMemberAccess	s -> paddr		3624877	0					
ANR	3625211	Identifier	s		3624877	0					
ANR	3625212	Identifier	paddr		3624877	1					
ANR	3625213	CastExpression	( ut64 ) bin -> sects [ i ] . offset		3624877	1					
ANR	3625214	CastTarget	ut64		3624877	0					
ANR	3625215	MemberAccess	bin -> sects [ i ] . offset		3624877	1					
ANR	3625216	ArrayIndexing	bin -> sects [ i ]		3624877	0					
ANR	3625217	PtrMemberAccess	bin -> sects		3624877	0					
ANR	3625218	Identifier	bin		3624877	0					
ANR	3625219	Identifier	sects		3624877	1					
ANR	3625220	Identifier	i		3624877	1					
ANR	3625221	Identifier	offset		3624877	1					
ANR	3625222	IdentifierDeclStatement	int segment_index = 0 ;	2060:3:67010:67031	3624877	7	True				
ANR	3625223	IdentifierDecl	segment_index = 0		3624877	0					
ANR	3625224	IdentifierDeclType	int		3624877	0					
ANR	3625225	Identifier	segment_index		3624877	1					
ANR	3625226	AssignmentExpression	segment_index = 0		3624877	2		=			
ANR	3625227	Identifier	segment_index		3624877	0					
ANR	3625228	PrimaryExpression	0		3624877	1					
ANR	3625229	ForStatement	for ( j = 0 ; j < bin -> nsegs ; j ++ )		3624877	8					
ANR	3625230	ForInit	j = 0 ;	2062:8:67090:67095	3624877	0	True				
ANR	3625231	AssignmentExpression	j = 0		3624877	0		=			
ANR	3625232	Identifier	j		3624877	0					
ANR	3625233	PrimaryExpression	0		3624877	1					
ANR	3625234	Condition	j < bin -> nsegs	2062:15:67097:67110	3624877	1	True				
ANR	3625235	RelationalExpression	j < bin -> nsegs		3624877	0		<			
ANR	3625236	Identifier	j		3624877	0					
ANR	3625237	PtrMemberAccess	bin -> nsegs		3624877	1					
ANR	3625238	Identifier	bin		3624877	0					
ANR	3625239	Identifier	nsegs		3624877	1					
ANR	3625240	PostIncDecOperationExpression	j ++	2062:31:67113:67115	3624877	2	True				
ANR	3625241	Identifier	j		3624877	0					
ANR	3625242	IncDec	++		3624877	1					
ANR	3625243	CompoundStatement		49:36:1312:1312	3624877	3					
ANR	3625244	IfStatement	if ( s -> vaddr >= bin -> segs [ j ] . vmaddr && s -> vaddr < ( bin -> segs [ j ] . vmaddr + bin -> segs [ j ] . vmsize ) )		3624877	0					
ANR	3625245	Condition	s -> vaddr >= bin -> segs [ j ] . vmaddr && s -> vaddr < ( bin -> segs [ j ] . vmaddr + bin -> segs [ j ] . vmsize )	2063:8:67128:67222	3624877	0	True				
ANR	3625246	AndExpression	s -> vaddr >= bin -> segs [ j ] . vmaddr && s -> vaddr < ( bin -> segs [ j ] . vmaddr + bin -> segs [ j ] . vmsize )		3624877	0		&&			
ANR	3625247	RelationalExpression	s -> vaddr >= bin -> segs [ j ] . vmaddr		3624877	0		>=			
ANR	3625248	PtrMemberAccess	s -> vaddr		3624877	0					
ANR	3625249	Identifier	s		3624877	0					
ANR	3625250	Identifier	vaddr		3624877	1					
ANR	3625251	MemberAccess	bin -> segs [ j ] . vmaddr		3624877	1					
ANR	3625252	ArrayIndexing	bin -> segs [ j ]		3624877	0					
ANR	3625253	PtrMemberAccess	bin -> segs		3624877	0					
ANR	3625254	Identifier	bin		3624877	0					
ANR	3625255	Identifier	segs		3624877	1					
ANR	3625256	Identifier	j		3624877	1					
ANR	3625257	Identifier	vmaddr		3624877	1					
ANR	3625258	RelationalExpression	s -> vaddr < ( bin -> segs [ j ] . vmaddr + bin -> segs [ j ] . vmsize )		3624877	1		<			
ANR	3625259	PtrMemberAccess	s -> vaddr		3624877	0					
ANR	3625260	Identifier	s		3624877	0					
ANR	3625261	Identifier	vaddr		3624877	1					
ANR	3625262	AdditiveExpression	bin -> segs [ j ] . vmaddr + bin -> segs [ j ] . vmsize		3624877	1		+			
ANR	3625263	MemberAccess	bin -> segs [ j ] . vmaddr		3624877	0					
ANR	3625264	ArrayIndexing	bin -> segs [ j ]		3624877	0					
ANR	3625265	PtrMemberAccess	bin -> segs		3624877	0					
ANR	3625266	Identifier	bin		3624877	0					
ANR	3625267	Identifier	segs		3624877	1					
ANR	3625268	Identifier	j		3624877	1					
ANR	3625269	Identifier	vmaddr		3624877	1					
ANR	3625270	MemberAccess	bin -> segs [ j ] . vmsize		3624877	1					
ANR	3625271	ArrayIndexing	bin -> segs [ j ]		3624877	0					
ANR	3625272	PtrMemberAccess	bin -> segs		3624877	0					
ANR	3625273	Identifier	bin		3624877	0					
ANR	3625274	Identifier	segs		3624877	1					
ANR	3625275	Identifier	j		3624877	1					
ANR	3625276	Identifier	vmsize		3624877	1					
ANR	3625277	CompoundStatement		51:62:1419:1419	3624877	1					
ANR	3625278	ExpressionStatement	s -> perm = prot2perm ( bin -> segs [ j ] . initprot )	2065:5:67232:67275	3624877	0	True				
ANR	3625279	AssignmentExpression	s -> perm = prot2perm ( bin -> segs [ j ] . initprot )		3624877	0		=			
ANR	3625280	PtrMemberAccess	s -> perm		3624877	0					
ANR	3625281	Identifier	s		3624877	0					
ANR	3625282	Identifier	perm		3624877	1					
ANR	3625283	CallExpression	prot2perm ( bin -> segs [ j ] . initprot )		3624877	1					
ANR	3625284	Callee	prot2perm		3624877	0					
ANR	3625285	Identifier	prot2perm		3624877	0					
ANR	3625286	ArgumentList	bin -> segs [ j ] . initprot		3624877	1					
ANR	3625287	Argument	bin -> segs [ j ] . initprot		3624877	0					
ANR	3625288	MemberAccess	bin -> segs [ j ] . initprot		3624877	0					
ANR	3625289	ArrayIndexing	bin -> segs [ j ]		3624877	0					
ANR	3625290	PtrMemberAccess	bin -> segs		3624877	0					
ANR	3625291	Identifier	bin		3624877	0					
ANR	3625292	Identifier	segs		3624877	1					
ANR	3625293	Identifier	j		3624877	1					
ANR	3625294	Identifier	initprot		3624877	1					
ANR	3625295	ExpressionStatement	segment_index = j	2066:5:67282:67299	3624877	1	True				
ANR	3625296	AssignmentExpression	segment_index = j		3624877	0		=			
ANR	3625297	Identifier	segment_index		3624877	0					
ANR	3625298	Identifier	j		3624877	1					
ANR	3625299	BreakStatement	break ;	2067:5:67306:67311	3624877	2	True				
ANR	3625300	IdentifierDeclStatement	"char * section_name = r_str_ndup ( bin -> sects [ i ] . sectname , 16 ) ;"	2070:3:67327:67387	3624877	9	True				
ANR	3625301	IdentifierDecl	"* section_name = r_str_ndup ( bin -> sects [ i ] . sectname , 16 )"		3624877	0					
ANR	3625302	IdentifierDeclType	char *		3624877	0					
ANR	3625303	Identifier	section_name		3624877	1					
ANR	3625304	AssignmentExpression	"* section_name = r_str_ndup ( bin -> sects [ i ] . sectname , 16 )"		3624877	2		=			
ANR	3625305	Identifier	section_name		3624877	0					
ANR	3625306	CallExpression	"r_str_ndup ( bin -> sects [ i ] . sectname , 16 )"		3624877	1					
ANR	3625307	Callee	r_str_ndup		3624877	0					
ANR	3625308	Identifier	r_str_ndup		3624877	0					
ANR	3625309	ArgumentList	bin -> sects [ i ] . sectname		3624877	1					
ANR	3625310	Argument	bin -> sects [ i ] . sectname		3624877	0					
ANR	3625311	MemberAccess	bin -> sects [ i ] . sectname		3624877	0					
ANR	3625312	ArrayIndexing	bin -> sects [ i ]		3624877	0					
ANR	3625313	PtrMemberAccess	bin -> sects		3624877	0					
ANR	3625314	Identifier	bin		3624877	0					
ANR	3625315	Identifier	sects		3624877	1					
ANR	3625316	Identifier	i		3624877	1					
ANR	3625317	Identifier	sectname		3624877	1					
ANR	3625318	Argument	16		3624877	1					
ANR	3625319	PrimaryExpression	16		3624877	0					
ANR	3625320	IdentifierDeclStatement	"char * segment_name = r_str_newf ( ""%d.%s"" , i , bin -> segs [ segment_index ] . segname ) ;"	2071:3:67392:67470	3624877	10	True				
ANR	3625321	IdentifierDecl	"* segment_name = r_str_newf ( ""%d.%s"" , i , bin -> segs [ segment_index ] . segname )"		3624877	0					
ANR	3625322	IdentifierDeclType	char *		3624877	0					
ANR	3625323	Identifier	segment_name		3624877	1					
ANR	3625324	AssignmentExpression	"* segment_name = r_str_newf ( ""%d.%s"" , i , bin -> segs [ segment_index ] . segname )"		3624877	2		=			
ANR	3625325	Identifier	segment_name		3624877	0					
ANR	3625326	CallExpression	"r_str_newf ( ""%d.%s"" , i , bin -> segs [ segment_index ] . segname )"		3624877	1					
ANR	3625327	Callee	r_str_newf		3624877	0					
ANR	3625328	Identifier	r_str_newf		3624877	0					
ANR	3625329	ArgumentList	"""%d.%s"""		3624877	1					
ANR	3625330	Argument	"""%d.%s"""		3624877	0					
ANR	3625331	PrimaryExpression	"""%d.%s"""		3624877	0					
ANR	3625332	Argument	i		3624877	1					
ANR	3625333	Identifier	i		3624877	0					
ANR	3625334	Argument	bin -> segs [ segment_index ] . segname		3624877	2					
ANR	3625335	MemberAccess	bin -> segs [ segment_index ] . segname		3624877	0					
ANR	3625336	ArrayIndexing	bin -> segs [ segment_index ]		3624877	0					
ANR	3625337	PtrMemberAccess	bin -> segs		3624877	0					
ANR	3625338	Identifier	bin		3624877	0					
ANR	3625339	Identifier	segs		3624877	1					
ANR	3625340	Identifier	segment_index		3624877	1					
ANR	3625341	Identifier	segname		3624877	1					
ANR	3625342	ExpressionStatement	"s -> name = r_str_newf ( ""%s.%s"" , segment_name , section_name )"	2072:3:67475:67533	3624877	11	True				
ANR	3625343	AssignmentExpression	"s -> name = r_str_newf ( ""%s.%s"" , segment_name , section_name )"		3624877	0		=			
ANR	3625344	PtrMemberAccess	s -> name		3624877	0					
ANR	3625345	Identifier	s		3624877	0					
ANR	3625346	Identifier	name		3624877	1					
ANR	3625347	CallExpression	"r_str_newf ( ""%s.%s"" , segment_name , section_name )"		3624877	1					
ANR	3625348	Callee	r_str_newf		3624877	0					
ANR	3625349	Identifier	r_str_newf		3624877	0					
ANR	3625350	ArgumentList	"""%s.%s"""		3624877	1					
ANR	3625351	Argument	"""%s.%s"""		3624877	0					
ANR	3625352	PrimaryExpression	"""%s.%s"""		3624877	0					
ANR	3625353	Argument	segment_name		3624877	1					
ANR	3625354	Identifier	segment_name		3624877	0					
ANR	3625355	Argument	section_name		3624877	2					
ANR	3625356	Identifier	section_name		3624877	0					
ANR	3625357	ExpressionStatement	s -> is_data = __isDataSection ( s )	2073:3:67538:67570	3624877	12	True				
ANR	3625358	AssignmentExpression	s -> is_data = __isDataSection ( s )		3624877	0		=			
ANR	3625359	PtrMemberAccess	s -> is_data		3624877	0					
ANR	3625360	Identifier	s		3624877	0					
ANR	3625361	Identifier	is_data		3624877	1					
ANR	3625362	CallExpression	__isDataSection ( s )		3624877	1					
ANR	3625363	Callee	__isDataSection		3624877	0					
ANR	3625364	Identifier	__isDataSection		3624877	0					
ANR	3625365	ArgumentList	s		3624877	1					
ANR	3625366	Argument	s		3624877	0					
ANR	3625367	Identifier	s		3624877	0					
ANR	3625368	IfStatement	"if ( strstr ( section_name , ""interpos"" ) || strstr ( section_name , ""__mod_"" ) )"		3624877	13					
ANR	3625369	Condition	"strstr ( section_name , ""interpos"" ) || strstr ( section_name , ""__mod_"" )"	2074:7:67579:67646	3624877	0	True				
ANR	3625370	OrExpression	"strstr ( section_name , ""interpos"" ) || strstr ( section_name , ""__mod_"" )"		3624877	0		||			
ANR	3625371	CallExpression	"strstr ( section_name , ""interpos"" )"		3624877	0					
ANR	3625372	Callee	strstr		3624877	0					
ANR	3625373	Identifier	strstr		3624877	0					
ANR	3625374	ArgumentList	section_name		3624877	1					
ANR	3625375	Argument	section_name		3624877	0					
ANR	3625376	Identifier	section_name		3624877	0					
ANR	3625377	Argument	"""interpos"""		3624877	1					
ANR	3625378	PrimaryExpression	"""interpos"""		3624877	0					
ANR	3625379	CallExpression	"strstr ( section_name , ""__mod_"" )"		3624877	1					
ANR	3625380	Callee	strstr		3624877	0					
ANR	3625381	Identifier	strstr		3624877	0					
ANR	3625382	ArgumentList	section_name		3624877	1					
ANR	3625383	Argument	section_name		3624877	0					
ANR	3625384	Identifier	section_name		3624877	0					
ANR	3625385	Argument	"""__mod_"""		3624877	1					
ANR	3625386	PrimaryExpression	"""__mod_"""		3624877	0					
ANR	3625387	CompoundStatement		63:4:1867:1883	3624877	1					
ANR	3625388	IdentifierDeclStatement	const int ws = 8 ;	2076:4:67673:67689	3624877	0	True				
ANR	3625389	IdentifierDecl	ws = 8		3624877	0					
ANR	3625390	IdentifierDeclType	const int		3624877	0					
ANR	3625391	Identifier	ws		3624877	1					
ANR	3625392	AssignmentExpression	ws = 8		3624877	2		=			
ANR	3625393	Identifier	ws		3624877	0					
ANR	3625394	PrimaryExpression	8		3624877	1					
ANR	3625395	ExpressionStatement	"s -> format = r_str_newf ( ""Cd %d[%d]"" , ws , s -> vsize / ws )"	2080:4:67730:67785	3624877	1	True				
ANR	3625396	AssignmentExpression	"s -> format = r_str_newf ( ""Cd %d[%d]"" , ws , s -> vsize / ws )"		3624877	0		=			
ANR	3625397	PtrMemberAccess	s -> format		3624877	0					
ANR	3625398	Identifier	s		3624877	0					
ANR	3625399	Identifier	format		3624877	1					
ANR	3625400	CallExpression	"r_str_newf ( ""Cd %d[%d]"" , ws , s -> vsize / ws )"		3624877	1					
ANR	3625401	Callee	r_str_newf		3624877	0					
ANR	3625402	Identifier	r_str_newf		3624877	0					
ANR	3625403	ArgumentList	"""Cd %d[%d]"""		3624877	1					
ANR	3625404	Argument	"""Cd %d[%d]"""		3624877	0					
ANR	3625405	PrimaryExpression	"""Cd %d[%d]"""		3624877	0					
ANR	3625406	Argument	ws		3624877	1					
ANR	3625407	Identifier	ws		3624877	0					
ANR	3625408	Argument	s -> vsize / ws		3624877	2					
ANR	3625409	MultiplicativeExpression	s -> vsize / ws		3624877	0		/			
ANR	3625410	PtrMemberAccess	s -> vsize		3624877	0					
ANR	3625411	Identifier	s		3624877	0					
ANR	3625412	Identifier	vsize		3624877	1					
ANR	3625413	Identifier	ws		3624877	1					
ANR	3625414	ExpressionStatement	"r_list_append ( list , s )"	2082:3:67795:67818	3624877	14	True				
ANR	3625415	CallExpression	"r_list_append ( list , s )"		3624877	0					
ANR	3625416	Callee	r_list_append		3624877	0					
ANR	3625417	Identifier	r_list_append		3624877	0					
ANR	3625418	ArgumentList	list		3624877	1					
ANR	3625419	Argument	list		3624877	0					
ANR	3625420	Identifier	list		3624877	0					
ANR	3625421	Argument	s		3624877	1					
ANR	3625422	Identifier	s		3624877	0					
ANR	3625423	ReturnStatement	return list ;	2085:1:67828:67839	3624877	6	True				
ANR	3625424	Identifier	list		3624877	0					
ANR	3625425	ReturnType	MACH0_		3624877	1					
ANR	3625426	Identifier	( get_segments )		3624877	2					
ANR	3625427	Identifier	get_segments		3624877	3					
ANR	3625428	ParameterList	RBinFile * bf		3624877	4					
ANR	3625429	Parameter	RBinFile * bf	2014:28:65791:65802	3624877	0	True				
ANR	3625430	ParameterType	RBinFile *		3624877	0					
ANR	3625431	Identifier	bf		3624877	1					
ANR	3625432	CFGEntryNode	ENTRY		3624877		True				
ANR	3625433	CFGExitNode	EXIT		3624877		True				
ANR	3625434	Symbol	s -> is_segment		3624877						
ANR	3625435	Symbol	bin		3624877						
ANR	3625436	Symbol	bf -> o -> boffset		3624877						
ANR	3625437	Symbol	* bin -> segs		3624877						
ANR	3625438	Symbol	bf -> o		3624877						
ANR	3625439	Symbol	bin -> sects [ i ] . offset		3624877						
ANR	3625440	Symbol	segment_index		3624877						
ANR	3625441	Symbol	seg -> fileoff		3624877						
ANR	3625442	Symbol	NULL		3624877						
ANR	3625443	Symbol	last_section		3624877						
ANR	3625444	Symbol	r_list_newf		3624877						
ANR	3625445	Symbol	__isDataSection		3624877						
ANR	3625446	Symbol	bin -> segs [ j ] . vmsize		3624877						
ANR	3625447	Symbol	list		3624877						
ANR	3625448	Symbol	seg -> initprot		3624877						
ANR	3625449	Symbol	bin -> segs [ j ] . vmaddr		3624877						
ANR	3625450	Symbol	R_NEW0		3624877						
ANR	3625451	Symbol	* * bf		3624877						
ANR	3625452	Symbol	bin -> sects [ i ] . flags		3624877						
ANR	3625453	Symbol	seg -> segname		3624877						
ANR	3625454	Symbol	* bin -> sects		3624877						
ANR	3625455	Symbol	strstr		3624877						
ANR	3625456	Symbol	true		3624877						
ANR	3625457	Symbol	bin -> sects		3624877						
ANR	3625458	Symbol	bin -> sects [ i ] . sectname		3624877						
ANR	3625459	Symbol	* seg		3624877						
ANR	3625460	Symbol	bin -> segs		3624877						
ANR	3625461	Symbol	s -> size		3624877						
ANR	3625462	Symbol	S_ZEROFILL		3624877						
ANR	3625463	Symbol	bf		3624877						
ANR	3625464	Symbol	r_str_ndup		3624877						
ANR	3625465	Symbol	r_str_newf		3624877						
ANR	3625466	Symbol	segment_name		3624877						
ANR	3625467	Symbol	s -> perm		3624877						
ANR	3625468	Symbol	s -> add		3624877						
ANR	3625469	Symbol	* bin		3624877						
ANR	3625470	Symbol	* bf -> o		3624877						
ANR	3625471	Symbol	* segment_index		3624877						
ANR	3625472	Symbol	bin -> nsects		3624877						
ANR	3625473	Symbol	segment_command		3624877						
ANR	3625474	Symbol	bin -> sects [ i ] . addr		3624877						
ANR	3625475	Symbol	seg		3624877						
ANR	3625476	Symbol	bin -> nsegs		3624877						
ANR	3625477	Symbol	* * bin		3624877						
ANR	3625478	Symbol	bin -> segs [ segment_index ] . segname		3624877						
ANR	3625479	Symbol	ws		3624877						
ANR	3625480	Symbol	bf -> o -> bin_obj		3624877						
ANR	3625481	Symbol	obj_t		3624877						
ANR	3625482	Symbol	section_name		3624877						
ANR	3625483	Symbol	s -> vsize		3624877						
ANR	3625484	Symbol	s -> is_data		3624877						
ANR	3625485	Symbol	false		3624877						
ANR	3625486	Symbol	* bf		3624877						
ANR	3625487	Symbol	i		3624877						
ANR	3625488	Symbol	seg -> vmaddr		3624877						
ANR	3625489	Symbol	r_bin_section_free		3624877						
ANR	3625490	Symbol	j		3624877						
ANR	3625491	Symbol	s -> paddr		3624877						
ANR	3625492	Symbol	prot2perm		3624877						
ANR	3625493	Symbol	R_MIN		3624877						
ANR	3625494	Symbol	s -> vaddr		3624877						
ANR	3625495	Symbol	bin -> segs [ j ] . initprot		3624877						
ANR	3625496	Symbol	MACH0_		3624877						
ANR	3625497	Symbol	seg -> vmsize		3624877						
ANR	3625498	Symbol	s		3624877						
ANR	3625499	Symbol	s -> name		3624877						
ANR	3625500	Symbol	* i		3624877						
ANR	3625501	Symbol	* j		3624877						
ANR	3625502	Symbol	RBinSection		3624877						
ANR	3625503	Symbol	bin -> sects [ i ] . size		3624877						
ANR	3625504	Symbol	s -> format		3624877						
ANR	3625505	Symbol	* s		3624877						
ANR	3625506	Symbol	r_bin_section_new		3624877						
ANR	3625507	DeclStmt									
ANR	3625508	Decl							struct section_t	struct section_t *	sections
ANR	3625509	DeclStmt									
ANR	3625510	Decl							char	char [ 32 ]	segname
ANR	3625511	Decl							char	char [ 32 ]	sectname
ANR	3625512	Decl							char	char [ 17 ]	raw_segname
ANR	3625513	DeclStmt									
ANR	3625514	Decl							int	int	i
ANR	3625515	Decl							int	int	j
ANR	3625516	Decl							int	int	to
ANR	3625517	DeclStmt									
ANR	3625518	Decl							int	int	i
ANR	3625519	Decl							int	int	j
ANR	3625520	Decl							int	int	nsyms
ANR	3625521	Decl							int	int	stridx
ANR	3625522	DeclStmt									
ANR	3625523	Decl							const char	const char *	symstr
ANR	3625524	DeclStmt									
ANR	3625525	Decl							ut64	ut64	sect_size
ANR	3625526	DeclStmt									
ANR	3625527	Decl							ut32	ut32	sect_fragment
ANR	3625528	DeclStmt									
ANR	3625529	Decl							int	int	delta
ANR	3625530	Function	inSymtab	2231:0:72292:72536							
ANR	3625531	FunctionDef	"inSymtab (HtPP * hash , const char * name , ut64 addr)"		3625530	0					
ANR	3625532	CompoundStatement		2231:61:72353:72536	3625530	0					
ANR	3625533	IdentifierDeclStatement	bool found ;	2232:1:72356:72366	3625530	0	True				
ANR	3625534	IdentifierDecl	found		3625530	0					
ANR	3625535	IdentifierDeclType	bool		3625530	0					
ANR	3625536	Identifier	found		3625530	1					
ANR	3625537	Statement	const	2233:1:72369:72373	3625530	1	True				
ANR	3625538	Statement	char	2233:7:72375:72378	3625530	2	True				
ANR	3625539	Statement	*	2233:12:72380:72380	3625530	3	True				
ANR	3625540	Statement	key	2233:13:72381:72383	3625530	4	True				
ANR	3625541	Statement	=	2233:17:72385:72385	3625530	5	True				
ANR	3625542	Statement	sdb_fmt	2233:19:72387:72393	3625530	6	True				
ANR	3625543	Statement	(	2233:27:72395:72395	3625530	7	True				
ANR	3625544	Statement	"""%s.%"""	2233:28:72396:72401	3625530	8	True				
ANR	3625545	Statement	PFMT64x	2233:34:72402:72408	3625530	9	True				
ANR	3625546	Statement	","	2233:41:72409:72409	3625530	10	True				
ANR	3625547	Statement	name	2233:43:72411:72414	3625530	11	True				
ANR	3625548	Statement	","	2233:47:72415:72415	3625530	12	True				
ANR	3625549	Statement	addr	2233:49:72417:72420	3625530	13	True				
ANR	3625550	Statement	)	2233:53:72421:72421	3625530	14	True				
ANR	3625551	ExpressionStatement		2233:54:72422:72422	3625530	15	True				
ANR	3625552	ExpressionStatement	"ht_pp_find ( hash , key , & found )"	2234:1:72425:72455	3625530	16	True				
ANR	3625553	CallExpression	"ht_pp_find ( hash , key , & found )"		3625530	0					
ANR	3625554	Callee	ht_pp_find		3625530	0					
ANR	3625555	Identifier	ht_pp_find		3625530	0					
ANR	3625556	ArgumentList	hash		3625530	1					
ANR	3625557	Argument	hash		3625530	0					
ANR	3625558	Identifier	hash		3625530	0					
ANR	3625559	Argument	key		3625530	1					
ANR	3625560	Identifier	key		3625530	0					
ANR	3625561	Argument	& found		3625530	2					
ANR	3625562	UnaryOperationExpression	& found		3625530	0					
ANR	3625563	UnaryOperator	&		3625530	0					
ANR	3625564	Identifier	found		3625530	1					
ANR	3625565	IfStatement	if ( found )		3625530	17					
ANR	3625566	Condition	found	2235:5:72462:72466	3625530	0	True				
ANR	3625567	Identifier	found		3625530	0					
ANR	3625568	CompoundStatement		5:12:115:115	3625530	1					
ANR	3625569	ReturnStatement	return true ;	2236:2:72473:72484	3625530	0	True				
ANR	3625570	Identifier	true		3625530	0					
ANR	3625571	ExpressionStatement	"ht_pp_insert ( hash , key , ""1"" )"	2238:1:72490:72519	3625530	18	True				
ANR	3625572	CallExpression	"ht_pp_insert ( hash , key , ""1"" )"		3625530	0					
ANR	3625573	Callee	ht_pp_insert		3625530	0					
ANR	3625574	Identifier	ht_pp_insert		3625530	0					
ANR	3625575	ArgumentList	hash		3625530	1					
ANR	3625576	Argument	hash		3625530	0					
ANR	3625577	Identifier	hash		3625530	0					
ANR	3625578	Argument	key		3625530	1					
ANR	3625579	Identifier	key		3625530	0					
ANR	3625580	Argument	"""1"""		3625530	2					
ANR	3625581	PrimaryExpression	"""1"""		3625530	0					
ANR	3625582	ReturnStatement	return false ;	2239:1:72522:72534	3625530	19	True				
ANR	3625583	Identifier	false		3625530	0					
ANR	3625584	ReturnType	static int		3625530	1					
ANR	3625585	Identifier	inSymtab		3625530	2					
ANR	3625586	ParameterList	"HtPP * hash , const char * name , ut64 addr"		3625530	3					
ANR	3625587	Parameter	HtPP * hash	2231:20:72312:72321	3625530	0	True				
ANR	3625588	ParameterType	HtPP *		3625530	0					
ANR	3625589	Identifier	hash		3625530	1					
ANR	3625590	Parameter	const char * name	2231:32:72324:72339	3625530	1	True				
ANR	3625591	ParameterType	const char *		3625530	0					
ANR	3625592	Identifier	name		3625530	1					
ANR	3625593	Parameter	ut64 addr	2231:50:72342:72350	3625530	2	True				
ANR	3625594	ParameterType	ut64		3625530	0					
ANR	3625595	Identifier	addr		3625530	1					
ANR	3625596	CFGEntryNode	ENTRY		3625530		True				
ANR	3625597	CFGExitNode	EXIT		3625530		True				
ANR	3625598	Symbol	& found		3625530						
ANR	3625599	Symbol	found		3625530						
ANR	3625600	Symbol	name		3625530						
ANR	3625601	Symbol	true		3625530						
ANR	3625602	Symbol	false		3625530						
ANR	3625603	Symbol	addr		3625530						
ANR	3625604	Symbol	hash		3625530						
ANR	3625605	Symbol	key		3625530						
ANR	3625606	DeclStmt									
ANR	3625607	Decl							int	int	i
ANR	3625608	DeclStmt									
ANR	3625609	Decl							int	int	len
ANR	3625610	DeclStmt									
ANR	3625611	Decl							const char	const char *	symstr
ANR	3625612	DeclStmt									
ANR	3625613	Decl							char	char *	res
ANR	3625614	DeclStmt									
ANR	3625615	Decl							int	int	count
ANR	3625616	DeclStmt									
ANR	3625617	Decl							ulebr	ulebr	ur
ANR	3625618	DeclStmt									
ANR	3625619	Decl							ut8	ut8 *	trie
ANR	3625620	DeclStmt									
ANR	3625621	Decl							RList	RList *	states
ANR	3625622	DeclStmt									
ANR	3625623	Decl							ut64	ut64	size
ANR	3625624	DeclStmt									
ANR	3625625	Decl							ut8	ut8 *	end
ANR	3625626	DeclStmt									
ANR	3625627	Decl							RTrieState	RTrieState *	root
ANR	3625628	DeclStmt									
ANR	3625629	Decl							RTrieState	RTrieState *	state
ANR	3625630	DeclStmt									
ANR	3625631	Decl							ut64	ut64	len
ANR	3625632	DeclStmt									
ANR	3625633	Decl							ut64	ut64	flags
ANR	3625634	DeclStmt									
ANR	3625635	Decl							ut64	ut64	offset
ANR	3625636	DeclStmt									
ANR	3625637	Decl							ut64	ut64	resolver
ANR	3625638	DeclStmt									
ANR	3625639	Decl							bool	bool	isReexport
ANR	3625640	DeclStmt									
ANR	3625641	Decl							bool	bool	hasResolver
ANR	3625642	DeclStmt									
ANR	3625643	Decl							char	char *	name
ANR	3625644	DeclStmt									
ANR	3625645	Decl							RListIter	RListIter *	iter
ANR	3625646	DeclStmt									
ANR	3625647	Decl							RTrieState	RTrieState *	s
ANR	3625648	DeclStmt									
ANR	3625649	Decl							char	char *	stub_name
ANR	3625650	DeclStmt									
ANR	3625651	Decl							ut64	ut64	child_count
ANR	3625652	DeclStmt									
ANR	3625653	Decl							RTrieState	RTrieState *	next
ANR	3625654	DeclStmt									
ANR	3625655	Decl							RListIter	RListIter *	it
ANR	3625656	DeclStmt									
ANR	3625657	Decl							RTrieState	RTrieState *	s
ANR	3625658	DeclStmt									
ANR	3625659	Decl							RList	RList *	list
ANR	3625660	DeclStmt									
ANR	3625661	Decl							RBinSymbol	RBinSymbol *	sym
ANR	3625662	DeclStmt									
ANR	3625663	Decl							RList	RList *	cache
ANR	3625664	DeclStmt									
ANR	3625665	Decl							struct symbol_t	struct symbol_t *	symbols
ANR	3625666	DeclStmt									
ANR	3625667	Decl							int	int	j
ANR	3625668	Decl							int	int	s
ANR	3625669	Decl							int	int	stridx
ANR	3625670	Decl							int	int	symbols_size
ANR	3625671	Decl							int	int	symbols_count
ANR	3625672	DeclStmt									
ANR	3625673	Decl							ut32	ut32	to
ANR	3625674	Decl							ut32	ut32	from
ANR	3625675	Decl							ut32	ut32	i
ANR	3625676	DeclStmt									
ANR	3625677	Decl							RList	RList *	list
ANR	3625678	DeclStmt									
ANR	3625679	Decl							HtPP	HtPP *	hash
ANR	3625680	DeclStmt									
ANR	3625681	Decl							RListIter	RListIter *	it
ANR	3625682	DeclStmt									
ANR	3625683	Decl							RBinSymbol	RBinSymbol *	s
ANR	3625684	DeclStmt									
ANR	3625685	Decl							ut32	ut32	maxsymbols
ANR	3625686	DeclStmt									
ANR	3625687	Decl							RBinSymbol	RBinSymbol *	sym
ANR	3625688	DeclStmt									
ANR	3625689	Decl							int	int	stridx
ANR	3625690	DeclStmt									
ANR	3625691	Decl							char	char *	sym_name
ANR	3625692	DeclStmt									
ANR	3625693	Decl							const char	const char *	name
ANR	3625694	DeclStmt									
ANR	3625695	Decl							struct symbol_t	struct symbol_t	symbol
ANR	3625696	DeclStmt									
ANR	3625697	Decl							RBinSymbol	RBinSymbol *	sym
ANR	3625698	DeclStmt									
ANR	3625699	Decl							int	int	section
ANR	3625700	DeclStmt									
ANR	3625701	Decl							RBinSymbol	RBinSymbol *	sym
ANR	3625702	DeclStmt									
ANR	3625703	Decl							char	char *	sym_name
ANR	3625704	DeclStmt									
ANR	3625705	Decl							const char	const char *	name
ANR	3625706	DeclStmt									
ANR	3625707	Decl							RSymCtx	RSymCtx *	sym_ctx
ANR	3625708	DeclStmt									
ANR	3625709	Decl							int	int	j
ANR	3625710	DeclStmt									
ANR	3625711	Decl							struct symbol_t	struct symbol_t *	symbols
ANR	3625712	DeclStmt									
ANR	3625713	Decl							int	int	j
ANR	3625714	Decl							int	int	s
ANR	3625715	Decl							int	int	stridx
ANR	3625716	Decl							int	int	symbols_size
ANR	3625717	Decl							int	int	symbols_count
ANR	3625718	DeclStmt									
ANR	3625719	Decl							ut32	ut32	to
ANR	3625720	Decl							ut32	ut32	from
ANR	3625721	Decl							ut32	ut32	i
ANR	3625722	DeclStmt									
ANR	3625723	Decl							HtPP	HtPP *	hash
ANR	3625724	DeclStmt									
ANR	3625725	Decl							int	int	n_exports
ANR	3625726	DeclStmt									
ANR	3625727	Decl							ut32	ut32	maxsymbols
ANR	3625728	DeclStmt									
ANR	3625729	Decl							char	char *	sym_name
ANR	3625730	DeclStmt									
ANR	3625731	Decl							const char	const char *	name
ANR	3625732	DeclStmt									
ANR	3625733	Decl							int	int	section
ANR	3625734	DeclStmt									
ANR	3625735	Decl							char	char *	sym_name
ANR	3625736	DeclStmt									
ANR	3625737	Decl							const char	const char *	name
ANR	3625738	DeclStmt									
ANR	3625739	Decl							RSymCtx	RSymCtx	sym_ctx
ANR	3625740	DeclStmt									
ANR	3625741	Decl							int	int	i
ANR	3625742	Decl							int	int	j
ANR	3625743	Decl							int	int	sym
ANR	3625744	Decl							int	int	wordsize
ANR	3625745	DeclStmt									
ANR	3625746	Decl							ut32	ut32	stype
ANR	3625747	DeclStmt									
ANR	3625748	Decl							R_BIN_RELOC_	R_BIN_RELOC_	T
ANR	3625749	DeclStmt									
ANR	3625750	Decl							int	int	indidx
ANR	3625751	DeclStmt									
ANR	3625752	Decl							sym	sym *	wordsize
ANR	3625753	DeclStmt									
ANR	3625754	Decl							sym	sym *	wordsize
ANR	3625755	DeclStmt									
ANR	3625756	Decl							int	int	i
ANR	3625757	Decl							int	int	j
ANR	3625758	Decl							int	int	idx
ANR	3625759	Decl							int	int	stridx
ANR	3625760	DeclStmt									
ANR	3625761	Decl							struct import_t	struct import_t *	imports
ANR	3625762	DeclStmt									
ANR	3625763	Decl							char	char *	imp_name
ANR	3625764	Function	reloc_comparator	2891:0:89521:89616							
ANR	3625765	FunctionDef	"reloc_comparator (struct reloc_t * a , struct reloc_t * b)"		3625764	0					
ANR	3625766	CompoundStatement		2891:66:89587:89616	3625764	0					
ANR	3625767	ReturnStatement	return a -> addr - b -> addr ;	2892:1:89590:89614	3625764	0	True				
ANR	3625768	AdditiveExpression	a -> addr - b -> addr		3625764	0		-			
ANR	3625769	PtrMemberAccess	a -> addr		3625764	0					
ANR	3625770	Identifier	a		3625764	0					
ANR	3625771	Identifier	addr		3625764	1					
ANR	3625772	PtrMemberAccess	b -> addr		3625764	1					
ANR	3625773	Identifier	b		3625764	0					
ANR	3625774	Identifier	addr		3625764	1					
ANR	3625775	ReturnType	static int		3625764	1					
ANR	3625776	Identifier	reloc_comparator		3625764	2					
ANR	3625777	ParameterList	"struct reloc_t * a , struct reloc_t * b"		3625764	3					
ANR	3625778	Parameter	struct reloc_t * a	2891:28:89549:89565	3625764	0	True				
ANR	3625779	ParameterType	struct reloc_t *		3625764	0					
ANR	3625780	Identifier	a		3625764	1					
ANR	3625781	Parameter	struct reloc_t * b	2891:47:89568:89584	3625764	1	True				
ANR	3625782	ParameterType	struct reloc_t *		3625764	0					
ANR	3625783	Identifier	b		3625764	1					
ANR	3625784	CFGEntryNode	ENTRY		3625764		True				
ANR	3625785	CFGExitNode	EXIT		3625764		True				
ANR	3625786	Symbol	a		3625764						
ANR	3625787	Symbol	b		3625764						
ANR	3625788	Symbol	a -> addr		3625764						
ANR	3625789	Symbol	* a		3625764						
ANR	3625790	Symbol	* b		3625764						
ANR	3625791	Symbol	b -> addr		3625764						
ANR	3625792	DeclStmt									
ANR	3625793	Decl							RSkipList	RSkipList *	relocs
ANR	3625794	DeclStmt									
ANR	3625795	Decl							ulebr	ulebr	ur
ANR	3625796	DeclStmt									
ANR	3625797	Decl							int	int	wordsize
ANR	3625798	DeclStmt									
ANR	3625799	Decl							ut8	ut8 *	opcodes
ANR	3625800	Decl							ut8	ut8 *	end
ANR	3625801	Decl							ut8	ut8	type
ANR	3625802	Decl							ut8	ut8	rel_type
ANR	3625803	DeclStmt									
ANR	3625804	Decl							int	int	lib_ord
ANR	3625805	Decl							int	int	seg_idx
ANR	3625806	Decl							int	int	sym_ord
ANR	3625807	DeclStmt									
ANR	3625808	Decl							char	char *	sym_name
ANR	3625809	DeclStmt									
ANR	3625810	Decl							size_t	size_t	j
ANR	3625811	Decl							size_t	size_t	count
ANR	3625812	Decl							size_t	size_t	skip
ANR	3625813	Decl							size_t	size_t	bind_size
ANR	3625814	Decl							size_t	size_t	lazy_size
ANR	3625815	Decl							size_t	size_t	weak_size
ANR	3625816	DeclStmt									
ANR	3625817	Decl							st64	st64	addend
ANR	3625818	DeclStmt									
ANR	3625819	Decl							ut64	ut64	segmentAddress
ANR	3625820	DeclStmt									
ANR	3625821	Decl							ut64	ut64	addr
ANR	3625822	DeclStmt									
ANR	3625823	Decl							R_BIN_RELOC_	R_BIN_RELOC_	T
ANR	3625824	DeclStmt									
ANR	3625825	Decl							undef CASE	undef CASE	bind_size
ANR	3625826	DeclStmt									
ANR	3625827	Decl							ut64	ut64	amount
ANR	3625828	DeclStmt									
ANR	3625829	Decl							int	int	len
ANR	3625830	DeclStmt									
ANR	3625831	Decl							ut8	ut8	imm
ANR	3625832	Decl							ut8	ut8	op
ANR	3625833	DeclStmt									
ANR	3625834	Decl							int	int	stridx
ANR	3625835	DeclStmt									
ANR	3625836	Decl							int	int	iundefsym
ANR	3625837	DeclStmt									
ANR	3625838	Decl							int	int	sidx
ANR	3625839	DeclStmt									
ANR	3625840	Decl							struct reloc_t	struct reloc_t *	reloc
ANR	3625841	DeclStmt									
ANR	3625842	Decl							int	int	j
ANR	3625843	DeclStmt									
ANR	3625844	Decl							int	int	amount
ANR	3625845	DeclStmt									
ANR	3625846	Decl							struct reloc_t	struct reloc_t *	reloc
ANR	3625847	DeclStmt									
ANR	3625848	Decl							struct addr_t	struct addr_t *	entry
ANR	3625849	DeclStmt									
ANR	3625850	Decl							int	int	i
ANR	3625851	DeclStmt									
ANR	3625852	Decl							int	int	i
ANR	3625853	DeclStmt									
ANR	3625854	Decl							struct lib_t	struct lib_t *	libs
ANR	3625855	DeclStmt									
ANR	3625856	Decl							int	int	i
ANR	3625857	DeclStmt									
ANR	3625858	Decl							int	int	i
ANR	3625859	DeclStmt									
ANR	3625860	Decl							int	int	bits
ANR	3625861	DeclStmt									
ANR	3625862	Decl							const int	const int	cpu
ANR	3625863	DeclStmt									
ANR	3625864	Decl							const char	const char *	archstr
ANR	3625865	Function	cpusubtype_tostring	3317:0:100539:105934							
ANR	3625866	FunctionDef	"cpusubtype_tostring (ut32 cputype , ut32 cpusubtype)"		3625865	0					
ANR	3625867	CompoundStatement		3317:71:100610:105934	3625865	0					
ANR	3625868	SwitchStatement	switch ( cputype )		3625865	0					
ANR	3625869	Condition	cputype	3318:9:100621:100627	3625865	0	True				
ANR	3625870	Identifier	cputype		3625865	0					
ANR	3625871	CompoundStatement		2:18:19:19	3625865	1					
ANR	3625872	Label	case CPU_TYPE_VAX :	3319:1:100633:100650	3625865	0	True				
ANR	3625873	Identifier	CPU_TYPE_VAX		3625865	0					
ANR	3625874	SwitchStatement	switch ( cpusubtype )		3625865	1					
ANR	3625875	Condition	cpusubtype	3320:10:100662:100671	3625865	0	True				
ANR	3625876	Identifier	cpusubtype		3625865	0					
ANR	3625877	CompoundStatement		4:22:63:63	3625865	1					
ANR	3625878	Label	case CPU_SUBTYPE_VAX_ALL :	3321:2:100678:100702	3625865	0	True				
ANR	3625879	Identifier	CPU_SUBTYPE_VAX_ALL		3625865	0					
ANR	3625880	ReturnStatement	"return ""all"" ;"	3321:28:100704:100716	3625865	1	True				
ANR	3625881	PrimaryExpression	"""all"""		3625865	0					
ANR	3625882	Label	case CPU_SUBTYPE_VAX780 :	3322:2:100720:100743	3625865	2	True				
ANR	3625883	Identifier	CPU_SUBTYPE_VAX780		3625865	0					
ANR	3625884	ReturnStatement	"return ""vax780"" ;"	3322:27:100745:100760	3625865	3	True				
ANR	3625885	PrimaryExpression	"""vax780"""		3625865	0					
ANR	3625886	Label	case CPU_SUBTYPE_VAX785 :	3323:2:100764:100787	3625865	4	True				
ANR	3625887	Identifier	CPU_SUBTYPE_VAX785		3625865	0					
ANR	3625888	ReturnStatement	"return ""vax785"" ;"	3323:27:100789:100804	3625865	5	True				
ANR	3625889	PrimaryExpression	"""vax785"""		3625865	0					
ANR	3625890	Label	case CPU_SUBTYPE_VAX750 :	3324:2:100808:100831	3625865	6	True				
ANR	3625891	Identifier	CPU_SUBTYPE_VAX750		3625865	0					
ANR	3625892	ReturnStatement	"return ""vax750"" ;"	3324:27:100833:100848	3625865	7	True				
ANR	3625893	PrimaryExpression	"""vax750"""		3625865	0					
ANR	3625894	Label	case CPU_SUBTYPE_VAX730 :	3325:2:100852:100875	3625865	8	True				
ANR	3625895	Identifier	CPU_SUBTYPE_VAX730		3625865	0					
ANR	3625896	ReturnStatement	"return ""vax730"" ;"	3325:27:100877:100892	3625865	9	True				
ANR	3625897	PrimaryExpression	"""vax730"""		3625865	0					
ANR	3625898	Label	case CPU_SUBTYPE_UVAXI :	3326:2:100896:100918	3625865	10	True				
ANR	3625899	Identifier	CPU_SUBTYPE_UVAXI		3625865	0					
ANR	3625900	ReturnStatement	"return ""uvaxI"" ;"	3326:27:100921:100935	3625865	11	True				
ANR	3625901	PrimaryExpression	"""uvaxI"""		3625865	0					
ANR	3625902	Label	case CPU_SUBTYPE_UVAXII :	3327:2:100939:100962	3625865	12	True				
ANR	3625903	Identifier	CPU_SUBTYPE_UVAXII		3625865	0					
ANR	3625904	ReturnStatement	"return ""uvaxII"" ;"	3327:27:100964:100979	3625865	13	True				
ANR	3625905	PrimaryExpression	"""uvaxII"""		3625865	0					
ANR	3625906	Label	case CPU_SUBTYPE_VAX8200 :	3328:2:100983:101007	3625865	14	True				
ANR	3625907	Identifier	CPU_SUBTYPE_VAX8200		3625865	0					
ANR	3625908	ReturnStatement	"return ""vax8200"" ;"	3328:28:101009:101025	3625865	15	True				
ANR	3625909	PrimaryExpression	"""vax8200"""		3625865	0					
ANR	3625910	Label	case CPU_SUBTYPE_VAX8500 :	3329:2:101029:101053	3625865	16	True				
ANR	3625911	Identifier	CPU_SUBTYPE_VAX8500		3625865	0					
ANR	3625912	ReturnStatement	"return ""vax8500"" ;"	3329:28:101055:101071	3625865	17	True				
ANR	3625913	PrimaryExpression	"""vax8500"""		3625865	0					
ANR	3625914	Label	case CPU_SUBTYPE_VAX8600 :	3330:2:101075:101099	3625865	18	True				
ANR	3625915	Identifier	CPU_SUBTYPE_VAX8600		3625865	0					
ANR	3625916	ReturnStatement	"return ""vax8600"" ;"	3330:28:101101:101117	3625865	19	True				
ANR	3625917	PrimaryExpression	"""vax8600"""		3625865	0					
ANR	3625918	Label	case CPU_SUBTYPE_VAX8650 :	3331:2:101121:101145	3625865	20	True				
ANR	3625919	Identifier	CPU_SUBTYPE_VAX8650		3625865	0					
ANR	3625920	ReturnStatement	"return ""vax8650"" ;"	3331:28:101147:101163	3625865	21	True				
ANR	3625921	PrimaryExpression	"""vax8650"""		3625865	0					
ANR	3625922	Label	case CPU_SUBTYPE_VAX8800 :	3332:2:101167:101191	3625865	22	True				
ANR	3625923	Identifier	CPU_SUBTYPE_VAX8800		3625865	0					
ANR	3625924	ReturnStatement	"return ""vax8800"" ;"	3332:28:101193:101209	3625865	23	True				
ANR	3625925	PrimaryExpression	"""vax8800"""		3625865	0					
ANR	3625926	Label	case CPU_SUBTYPE_UVAXIII :	3333:2:101213:101237	3625865	24	True				
ANR	3625927	Identifier	CPU_SUBTYPE_UVAXIII		3625865	0					
ANR	3625928	ReturnStatement	"return ""uvaxIII"" ;"	3333:28:101239:101255	3625865	25	True				
ANR	3625929	PrimaryExpression	"""uvaxIII"""		3625865	0					
ANR	3625930	Label	default :	3334:2:101259:101266	3625865	26	True				
ANR	3625931	Identifier	default		3625865	0					
ANR	3625932	ReturnStatement	"return ""Unknown vax subtype"" ;"	3334:13:101270:101298	3625865	27	True				
ANR	3625933	PrimaryExpression	"""Unknown vax subtype"""		3625865	0					
ANR	3625934	Label	case CPU_TYPE_MC680x0 :	3336:1:101305:101326	3625865	2	True				
ANR	3625935	Identifier	CPU_TYPE_MC680x0		3625865	0					
ANR	3625936	SwitchStatement	switch ( cpusubtype )		3625865	3					
ANR	3625937	Condition	cpusubtype	3337:10:101338:101347	3625865	0	True				
ANR	3625938	Identifier	cpusubtype		3625865	0					
ANR	3625939	CompoundStatement		21:22:739:739	3625865	1					
ANR	3625940	Label	case CPU_SUBTYPE_MC68030 :	3338:2:101354:101378	3625865	0	True				
ANR	3625941	Identifier	CPU_SUBTYPE_MC68030		3625865	0					
ANR	3625942	ReturnStatement	"return ""mc68030"" ;"	3338:28:101380:101396	3625865	1	True				
ANR	3625943	PrimaryExpression	"""mc68030"""		3625865	0					
ANR	3625944	Label	case CPU_SUBTYPE_MC68040 :	3339:2:101400:101424	3625865	2	True				
ANR	3625945	Identifier	CPU_SUBTYPE_MC68040		3625865	0					
ANR	3625946	ReturnStatement	"return ""mc68040"" ;"	3339:28:101426:101442	3625865	3	True				
ANR	3625947	PrimaryExpression	"""mc68040"""		3625865	0					
ANR	3625948	Label	case CPU_SUBTYPE_MC68030_ONLY :	3340:2:101446:101475	3625865	4	True				
ANR	3625949	Identifier	CPU_SUBTYPE_MC68030_ONLY		3625865	0					
ANR	3625950	ReturnStatement	"return ""mc68030 only"" ;"	3340:33:101477:101498	3625865	5	True				
ANR	3625951	PrimaryExpression	"""mc68030 only"""		3625865	0					
ANR	3625952	Label	default :	3341:2:101502:101509	3625865	6	True				
ANR	3625953	Identifier	default		3625865	0					
ANR	3625954	ReturnStatement	"return ""Unknown mc680x0 subtype"" ;"	3341:13:101513:101545	3625865	7	True				
ANR	3625955	PrimaryExpression	"""Unknown mc680x0 subtype"""		3625865	0					
ANR	3625956	Label	case CPU_TYPE_I386 :	3343:1:101552:101570	3625865	4	True				
ANR	3625957	Identifier	CPU_TYPE_I386		3625865	0					
ANR	3625958	SwitchStatement	switch ( cpusubtype )		3625865	5					
ANR	3625959	Condition	cpusubtype	3344:10:101582:101591	3625865	0	True				
ANR	3625960	Identifier	cpusubtype		3625865	0					
ANR	3625961	CompoundStatement		28:22:983:983	3625865	1					
ANR	3625962	Label	case CPU_SUBTYPE_386 :	3345:2:101598:101618	3625865	0	True				
ANR	3625963	Identifier	CPU_SUBTYPE_386		3625865	0					
ANR	3625964	ReturnStatement	"return ""386"" ;"	3345:27:101623:101635	3625865	1	True				
ANR	3625965	PrimaryExpression	"""386"""		3625865	0					
ANR	3625966	Label	case CPU_SUBTYPE_486 :	3346:2:101639:101659	3625865	2	True				
ANR	3625967	Identifier	CPU_SUBTYPE_486		3625865	0					
ANR	3625968	ReturnStatement	"return ""486"" ;"	3346:27:101664:101676	3625865	3	True				
ANR	3625969	PrimaryExpression	"""486"""		3625865	0					
ANR	3625970	Label	case CPU_SUBTYPE_486SX :	3347:2:101680:101702	3625865	4	True				
ANR	3625971	Identifier	CPU_SUBTYPE_486SX		3625865	0					
ANR	3625972	ReturnStatement	"return ""486sx"" ;"	3347:28:101706:101720	3625865	5	True				
ANR	3625973	PrimaryExpression	"""486sx"""		3625865	0					
ANR	3625974	Label	case CPU_SUBTYPE_PENT :	3348:2:101724:101745	3625865	6	True				
ANR	3625975	Identifier	CPU_SUBTYPE_PENT		3625865	0					
ANR	3625976	ReturnStatement	"return ""Pentium"" ;"	3348:28:101750:101766	3625865	7	True				
ANR	3625977	PrimaryExpression	"""Pentium"""		3625865	0					
ANR	3625978	Label	case CPU_SUBTYPE_PENTPRO :	3349:2:101770:101794	3625865	8	True				
ANR	3625979	Identifier	CPU_SUBTYPE_PENTPRO		3625865	0					
ANR	3625980	ReturnStatement	"return ""Pentium Pro"" ;"	3349:30:101798:101818	3625865	9	True				
ANR	3625981	PrimaryExpression	"""Pentium Pro"""		3625865	0					
ANR	3625982	Label	case CPU_SUBTYPE_PENTII_M3 :	3350:2:101822:101848	3625865	10	True				
ANR	3625983	Identifier	CPU_SUBTYPE_PENTII_M3		3625865	0					
ANR	3625984	ReturnStatement	"return ""Pentium 3 M3"" ;"	3350:32:101852:101873	3625865	11	True				
ANR	3625985	PrimaryExpression	"""Pentium 3 M3"""		3625865	0					
ANR	3625986	Label	case CPU_SUBTYPE_PENTII_M5 :	3351:2:101877:101903	3625865	12	True				
ANR	3625987	Identifier	CPU_SUBTYPE_PENTII_M5		3625865	0					
ANR	3625988	ReturnStatement	"return ""Pentium 3 M5"" ;"	3351:32:101907:101928	3625865	13	True				
ANR	3625989	PrimaryExpression	"""Pentium 3 M5"""		3625865	0					
ANR	3625990	Label	case CPU_SUBTYPE_CELERON :	3352:2:101932:101956	3625865	14	True				
ANR	3625991	Identifier	CPU_SUBTYPE_CELERON		3625865	0					
ANR	3625992	ReturnStatement	"return ""Celeron"" ;"	3352:30:101960:101976	3625865	15	True				
ANR	3625993	PrimaryExpression	"""Celeron"""		3625865	0					
ANR	3625994	Label	case CPU_SUBTYPE_CELERON_MOBILE :	3353:2:101980:102011	3625865	16	True				
ANR	3625995	Identifier	CPU_SUBTYPE_CELERON_MOBILE		3625865	0					
ANR	3625996	ReturnStatement	"return ""Celeron Mobile"" ;"	3353:35:102013:102036	3625865	17	True				
ANR	3625997	PrimaryExpression	"""Celeron Mobile"""		3625865	0					
ANR	3625998	Label	case CPU_SUBTYPE_PENTIUM_3 :	3354:2:102040:102066	3625865	18	True				
ANR	3625999	Identifier	CPU_SUBTYPE_PENTIUM_3		3625865	0					
ANR	3626000	ReturnStatement	"return ""Pentium 3"" ;"	3354:31:102069:102087	3625865	19	True				
ANR	3626001	PrimaryExpression	"""Pentium 3"""		3625865	0					
ANR	3626002	Label	case CPU_SUBTYPE_PENTIUM_3_M :	3355:2:102091:102119	3625865	20	True				
ANR	3626003	Identifier	CPU_SUBTYPE_PENTIUM_3_M		3625865	0					
ANR	3626004	ReturnStatement	"return ""Pentium 3 M"" ;"	3355:33:102122:102142	3625865	21	True				
ANR	3626005	PrimaryExpression	"""Pentium 3 M"""		3625865	0					
ANR	3626006	Label	case CPU_SUBTYPE_PENTIUM_3_XEON :	3356:2:102146:102177	3625865	22	True				
ANR	3626007	Identifier	CPU_SUBTYPE_PENTIUM_3_XEON		3625865	0					
ANR	3626008	ReturnStatement	"return ""Pentium 3 Xeon"" ;"	3356:35:102179:102202	3625865	23	True				
ANR	3626009	PrimaryExpression	"""Pentium 3 Xeon"""		3625865	0					
ANR	3626010	Label	case CPU_SUBTYPE_PENTIUM_M :	3357:2:102206:102232	3625865	24	True				
ANR	3626011	Identifier	CPU_SUBTYPE_PENTIUM_M		3625865	0					
ANR	3626012	ReturnStatement	"return ""Pentium Mobile"" ;"	3357:31:102235:102258	3625865	25	True				
ANR	3626013	PrimaryExpression	"""Pentium Mobile"""		3625865	0					
ANR	3626014	Label	case CPU_SUBTYPE_PENTIUM_4 :	3358:2:102262:102288	3625865	26	True				
ANR	3626015	Identifier	CPU_SUBTYPE_PENTIUM_4		3625865	0					
ANR	3626016	ReturnStatement	"return ""Pentium 4"" ;"	3358:31:102291:102309	3625865	27	True				
ANR	3626017	PrimaryExpression	"""Pentium 4"""		3625865	0					
ANR	3626018	Label	case CPU_SUBTYPE_PENTIUM_4_M :	3359:2:102313:102341	3625865	28	True				
ANR	3626019	Identifier	CPU_SUBTYPE_PENTIUM_4_M		3625865	0					
ANR	3626020	ReturnStatement	"return ""Pentium 4 M"" ;"	3359:33:102344:102364	3625865	29	True				
ANR	3626021	PrimaryExpression	"""Pentium 4 M"""		3625865	0					
ANR	3626022	Label	case CPU_SUBTYPE_ITANIUM :	3360:2:102368:102392	3625865	30	True				
ANR	3626023	Identifier	CPU_SUBTYPE_ITANIUM		3625865	0					
ANR	3626024	ReturnStatement	"return ""Itanium"" ;"	3360:29:102395:102411	3625865	31	True				
ANR	3626025	PrimaryExpression	"""Itanium"""		3625865	0					
ANR	3626026	Label	case CPU_SUBTYPE_ITANIUM_2 :	3361:2:102415:102441	3625865	32	True				
ANR	3626027	Identifier	CPU_SUBTYPE_ITANIUM_2		3625865	0					
ANR	3626028	ReturnStatement	"return ""Itanium 2"" ;"	3361:31:102444:102462	3625865	33	True				
ANR	3626029	PrimaryExpression	"""Itanium 2"""		3625865	0					
ANR	3626030	Label	case CPU_SUBTYPE_XEON :	3362:2:102466:102487	3625865	34	True				
ANR	3626031	Identifier	CPU_SUBTYPE_XEON		3625865	0					
ANR	3626032	ReturnStatement	"return ""Xeon"" ;"	3362:27:102491:102504	3625865	35	True				
ANR	3626033	PrimaryExpression	"""Xeon"""		3625865	0					
ANR	3626034	Label	case CPU_SUBTYPE_XEON_MP :	3363:2:102508:102532	3625865	36	True				
ANR	3626035	Identifier	CPU_SUBTYPE_XEON_MP		3625865	0					
ANR	3626036	ReturnStatement	"return ""Xeon MP"" ;"	3363:29:102535:102551	3625865	37	True				
ANR	3626037	PrimaryExpression	"""Xeon MP"""		3625865	0					
ANR	3626038	Label	default :	3364:2:102555:102562	3625865	38	True				
ANR	3626039	Identifier	default		3625865	0					
ANR	3626040	ReturnStatement	"return ""Unknown i386 subtype"" ;"	3364:14:102567:102596	3625865	39	True				
ANR	3626041	PrimaryExpression	"""Unknown i386 subtype"""		3625865	0					
ANR	3626042	Label	case CPU_TYPE_X86_64 :	3366:1:102603:102623	3625865	6	True				
ANR	3626043	Identifier	CPU_TYPE_X86_64		3625865	0					
ANR	3626044	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	7					
ANR	3626045	Condition	cpusubtype & 0xff	3367:10:102635:102651	3625865	0	True				
ANR	3626046	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626047	Identifier	cpusubtype		3625865	0					
ANR	3626048	PrimaryExpression	0xff		3625865	1					
ANR	3626049	CompoundStatement		51:29:2043:2043	3625865	1					
ANR	3626050	Label	case CPU_SUBTYPE_X86_64_ALL :	3368:2:102658:102685	3625865	0	True				
ANR	3626051	Identifier	CPU_SUBTYPE_X86_64_ALL		3625865	0					
ANR	3626052	ReturnStatement	"return ""x86 64 all"" ;"	3368:31:102687:102706	3625865	1	True				
ANR	3626053	PrimaryExpression	"""x86 64 all"""		3625865	0					
ANR	3626054	Label	case CPU_SUBTYPE_X86_ARCH1 :	3369:2:102710:102736	3625865	2	True				
ANR	3626055	Identifier	CPU_SUBTYPE_X86_ARCH1		3625865	0					
ANR	3626056	ReturnStatement	"return ""x86 arch 1"" ;"	3369:30:102738:102757	3625865	3	True				
ANR	3626057	PrimaryExpression	"""x86 arch 1"""		3625865	0					
ANR	3626058	Label	default :	3370:2:102761:102768	3625865	4	True				
ANR	3626059	Identifier	default		3625865	0					
ANR	3626060	ReturnStatement	"return ""Unknown x86 subtype"" ;"	3370:13:102772:102800	3625865	5	True				
ANR	3626061	PrimaryExpression	"""Unknown x86 subtype"""		3625865	0					
ANR	3626062	Label	case CPU_TYPE_MC88000 :	3372:1:102807:102828	3625865	8	True				
ANR	3626063	Identifier	CPU_TYPE_MC88000		3625865	0					
ANR	3626064	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	9					
ANR	3626065	Condition	cpusubtype & 0xff	3373:10:102840:102856	3625865	0	True				
ANR	3626066	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626067	Identifier	cpusubtype		3625865	0					
ANR	3626068	PrimaryExpression	0xff		3625865	1					
ANR	3626069	CompoundStatement		57:29:2248:2248	3625865	1					
ANR	3626070	Label	case CPU_SUBTYPE_MC88000_ALL :	3374:2:102863:102891	3625865	0	True				
ANR	3626071	Identifier	CPU_SUBTYPE_MC88000_ALL		3625865	0					
ANR	3626072	ReturnStatement	"return ""all"" ;"	3374:32:102893:102905	3625865	1	True				
ANR	3626073	PrimaryExpression	"""all"""		3625865	0					
ANR	3626074	Label	case CPU_SUBTYPE_MC88100 :	3375:2:102909:102933	3625865	2	True				
ANR	3626075	Identifier	CPU_SUBTYPE_MC88100		3625865	0					
ANR	3626076	ReturnStatement	"return ""mc88100"" ;"	3375:28:102935:102951	3625865	3	True				
ANR	3626077	PrimaryExpression	"""mc88100"""		3625865	0					
ANR	3626078	Label	case CPU_SUBTYPE_MC88110 :	3376:2:102955:102979	3625865	4	True				
ANR	3626079	Identifier	CPU_SUBTYPE_MC88110		3625865	0					
ANR	3626080	ReturnStatement	"return ""mc88110"" ;"	3376:28:102981:102997	3625865	5	True				
ANR	3626081	PrimaryExpression	"""mc88110"""		3625865	0					
ANR	3626082	Label	default :	3377:2:103001:103008	3625865	6	True				
ANR	3626083	Identifier	default		3625865	0					
ANR	3626084	ReturnStatement	"return ""Unknown mc88000 subtype"" ;"	3377:13:103012:103044	3625865	7	True				
ANR	3626085	PrimaryExpression	"""Unknown mc88000 subtype"""		3625865	0					
ANR	3626086	Label	case CPU_TYPE_MC98000 :	3379:1:103051:103072	3625865	10	True				
ANR	3626087	Identifier	CPU_TYPE_MC98000		3625865	0					
ANR	3626088	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	11					
ANR	3626089	Condition	cpusubtype & 0xff	3380:10:103084:103100	3625865	0	True				
ANR	3626090	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626091	Identifier	cpusubtype		3625865	0					
ANR	3626092	PrimaryExpression	0xff		3625865	1					
ANR	3626093	CompoundStatement		64:29:2492:2492	3625865	1					
ANR	3626094	Label	case CPU_SUBTYPE_MC98000_ALL :	3381:2:103107:103135	3625865	0	True				
ANR	3626095	Identifier	CPU_SUBTYPE_MC98000_ALL		3625865	0					
ANR	3626096	ReturnStatement	"return ""all"" ;"	3381:32:103137:103149	3625865	1	True				
ANR	3626097	PrimaryExpression	"""all"""		3625865	0					
ANR	3626098	Label	case CPU_SUBTYPE_MC98601 :	3382:2:103153:103177	3625865	2	True				
ANR	3626099	Identifier	CPU_SUBTYPE_MC98601		3625865	0					
ANR	3626100	ReturnStatement	"return ""mc98601"" ;"	3382:28:103179:103195	3625865	3	True				
ANR	3626101	PrimaryExpression	"""mc98601"""		3625865	0					
ANR	3626102	Label	default :	3383:2:103199:103206	3625865	4	True				
ANR	3626103	Identifier	default		3625865	0					
ANR	3626104	ReturnStatement	"return ""Unknown mc98000 subtype"" ;"	3383:13:103210:103242	3625865	5	True				
ANR	3626105	PrimaryExpression	"""Unknown mc98000 subtype"""		3625865	0					
ANR	3626106	Label	case CPU_TYPE_HPPA :	3385:1:103249:103267	3625865	12	True				
ANR	3626107	Identifier	CPU_TYPE_HPPA		3625865	0					
ANR	3626108	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	13					
ANR	3626109	Condition	cpusubtype & 0xff	3386:10:103279:103295	3625865	0	True				
ANR	3626110	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626111	Identifier	cpusubtype		3625865	0					
ANR	3626112	PrimaryExpression	0xff		3625865	1					
ANR	3626113	CompoundStatement		70:29:2687:2687	3625865	1					
ANR	3626114	Label	case CPU_SUBTYPE_HPPA_7100 :	3387:2:103302:103328	3625865	0	True				
ANR	3626115	Identifier	CPU_SUBTYPE_HPPA_7100		3625865	0					
ANR	3626116	ReturnStatement	"return ""hppa7100"" ;"	3387:30:103330:103347	3625865	1	True				
ANR	3626117	PrimaryExpression	"""hppa7100"""		3625865	0					
ANR	3626118	Label	case CPU_SUBTYPE_HPPA_7100LC :	3388:2:103351:103379	3625865	2	True				
ANR	3626119	Identifier	CPU_SUBTYPE_HPPA_7100LC		3625865	0					
ANR	3626120	ReturnStatement	"return ""hppa7100LC"" ;"	3388:32:103381:103400	3625865	3	True				
ANR	3626121	PrimaryExpression	"""hppa7100LC"""		3625865	0					
ANR	3626122	Label	default :	3389:2:103404:103411	3625865	4	True				
ANR	3626123	Identifier	default		3625865	0					
ANR	3626124	ReturnStatement	"return ""Unknown hppa subtype"" ;"	3389:13:103415:103444	3625865	5	True				
ANR	3626125	PrimaryExpression	"""Unknown hppa subtype"""		3625865	0					
ANR	3626126	Label	case CPU_TYPE_ARM64 :	3391:1:103451:103470	3625865	14	True				
ANR	3626127	Identifier	CPU_TYPE_ARM64		3625865	0					
ANR	3626128	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	15					
ANR	3626129	Condition	cpusubtype & 0xff	3392:10:103482:103498	3625865	0	True				
ANR	3626130	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626131	Identifier	cpusubtype		3625865	0					
ANR	3626132	PrimaryExpression	0xff		3625865	1					
ANR	3626133	CompoundStatement		76:29:2890:2890	3625865	1					
ANR	3626134	Label	case CPU_SUBTYPE_ARM64_ALL :	3393:2:103505:103531	3625865	0	True				
ANR	3626135	Identifier	CPU_SUBTYPE_ARM64_ALL		3625865	0					
ANR	3626136	ReturnStatement	"return ""all"" ;"	3393:30:103533:103545	3625865	1	True				
ANR	3626137	PrimaryExpression	"""all"""		3625865	0					
ANR	3626138	Label	case CPU_SUBTYPE_ARM64_V8 :	3394:2:103549:103574	3625865	2	True				
ANR	3626139	Identifier	CPU_SUBTYPE_ARM64_V8		3625865	0					
ANR	3626140	ReturnStatement	"return ""arm64v8"" ;"	3394:29:103576:103592	3625865	3	True				
ANR	3626141	PrimaryExpression	"""arm64v8"""		3625865	0					
ANR	3626142	Label	case CPU_SUBTYPE_ARM64E :	3395:2:103596:103619	3625865	4	True				
ANR	3626143	Identifier	CPU_SUBTYPE_ARM64E		3625865	0					
ANR	3626144	ReturnStatement	"return ""arm64e"" ;"	3395:27:103621:103636	3625865	5	True				
ANR	3626145	PrimaryExpression	"""arm64e"""		3625865	0					
ANR	3626146	Label	default :	3396:2:103640:103647	3625865	6	True				
ANR	3626147	Identifier	default		3625865	0					
ANR	3626148	ReturnStatement	"return ""Unknown arm64 subtype"" ;"	3396:13:103651:103681	3625865	7	True				
ANR	3626149	PrimaryExpression	"""Unknown arm64 subtype"""		3625865	0					
ANR	3626150	ReturnStatement	"return ""v8"" ;"	3398:2:103689:103700	3625865	16	True				
ANR	3626151	PrimaryExpression	"""v8"""		3625865	0					
ANR	3626152	Label	case CPU_TYPE_ARM :	3399:1:103703:103720	3625865	17	True				
ANR	3626153	Identifier	CPU_TYPE_ARM		3625865	0					
ANR	3626154	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	18					
ANR	3626155	Condition	cpusubtype & 0xff	3400:10:103732:103748	3625865	0	True				
ANR	3626156	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626157	Identifier	cpusubtype		3625865	0					
ANR	3626158	PrimaryExpression	0xff		3625865	1					
ANR	3626159	CompoundStatement		84:29:3140:3140	3625865	1					
ANR	3626160	Label	case CPU_SUBTYPE_ARM_ALL :	3401:2:103755:103779	3625865	0	True				
ANR	3626161	Identifier	CPU_SUBTYPE_ARM_ALL		3625865	0					
ANR	3626162	ReturnStatement	"return ""all"" ;"	3402:3:103784:103796	3625865	1	True				
ANR	3626163	PrimaryExpression	"""all"""		3625865	0					
ANR	3626164	Label	case CPU_SUBTYPE_ARM_V4T :	3403:2:103800:103824	3625865	2	True				
ANR	3626165	Identifier	CPU_SUBTYPE_ARM_V4T		3625865	0					
ANR	3626166	ReturnStatement	"return ""v4t"" ;"	3404:3:103829:103841	3625865	3	True				
ANR	3626167	PrimaryExpression	"""v4t"""		3625865	0					
ANR	3626168	Label	case CPU_SUBTYPE_ARM_V5 :	3405:2:103845:103868	3625865	4	True				
ANR	3626169	Identifier	CPU_SUBTYPE_ARM_V5		3625865	0					
ANR	3626170	ReturnStatement	"return ""v5"" ;"	3406:3:103873:103884	3625865	5	True				
ANR	3626171	PrimaryExpression	"""v5"""		3625865	0					
ANR	3626172	Label	case CPU_SUBTYPE_ARM_V6 :	3407:2:103888:103911	3625865	6	True				
ANR	3626173	Identifier	CPU_SUBTYPE_ARM_V6		3625865	0					
ANR	3626174	ReturnStatement	"return ""v6"" ;"	3408:3:103916:103927	3625865	7	True				
ANR	3626175	PrimaryExpression	"""v6"""		3625865	0					
ANR	3626176	Label	case CPU_SUBTYPE_ARM_XSCALE :	3409:2:103931:103958	3625865	8	True				
ANR	3626177	Identifier	CPU_SUBTYPE_ARM_XSCALE		3625865	0					
ANR	3626178	ReturnStatement	"return ""xscale"" ;"	3410:3:103963:103978	3625865	9	True				
ANR	3626179	PrimaryExpression	"""xscale"""		3625865	0					
ANR	3626180	Label	case CPU_SUBTYPE_ARM_V7 :	3411:2:103982:104005	3625865	10	True				
ANR	3626181	Identifier	CPU_SUBTYPE_ARM_V7		3625865	0					
ANR	3626182	ReturnStatement	"return ""v7"" ;"	3412:3:104010:104021	3625865	11	True				
ANR	3626183	PrimaryExpression	"""v7"""		3625865	0					
ANR	3626184	Label	case CPU_SUBTYPE_ARM_V7F :	3413:2:104025:104049	3625865	12	True				
ANR	3626185	Identifier	CPU_SUBTYPE_ARM_V7F		3625865	0					
ANR	3626186	ReturnStatement	"return ""v7f"" ;"	3414:3:104054:104066	3625865	13	True				
ANR	3626187	PrimaryExpression	"""v7f"""		3625865	0					
ANR	3626188	Label	case CPU_SUBTYPE_ARM_V7S :	3415:2:104070:104094	3625865	14	True				
ANR	3626189	Identifier	CPU_SUBTYPE_ARM_V7S		3625865	0					
ANR	3626190	ReturnStatement	"return ""v7s"" ;"	3416:3:104099:104111	3625865	15	True				
ANR	3626191	PrimaryExpression	"""v7s"""		3625865	0					
ANR	3626192	Label	case CPU_SUBTYPE_ARM_V7K :	3417:2:104115:104139	3625865	16	True				
ANR	3626193	Identifier	CPU_SUBTYPE_ARM_V7K		3625865	0					
ANR	3626194	ReturnStatement	"return ""v7k"" ;"	3418:3:104144:104156	3625865	17	True				
ANR	3626195	PrimaryExpression	"""v7k"""		3625865	0					
ANR	3626196	Label	case CPU_SUBTYPE_ARM_V7M :	3419:2:104160:104184	3625865	18	True				
ANR	3626197	Identifier	CPU_SUBTYPE_ARM_V7M		3625865	0					
ANR	3626198	ReturnStatement	"return ""v7m"" ;"	3420:3:104189:104201	3625865	19	True				
ANR	3626199	PrimaryExpression	"""v7m"""		3625865	0					
ANR	3626200	Label	case CPU_SUBTYPE_ARM_V7EM :	3421:2:104205:104230	3625865	20	True				
ANR	3626201	Identifier	CPU_SUBTYPE_ARM_V7EM		3625865	0					
ANR	3626202	ReturnStatement	"return ""v7em"" ;"	3422:3:104235:104248	3625865	21	True				
ANR	3626203	PrimaryExpression	"""v7em"""		3625865	0					
ANR	3626204	Label	default :	3423:2:104252:104259	3625865	22	True				
ANR	3626205	Identifier	default		3625865	0					
ANR	3626206	ExpressionStatement	"eprintf ( ""Unknown arm subtype %d\\n"" , cpusubtype & 0xff )"	3424:3:104264:104319	3625865	23	True				
ANR	3626207	CallExpression	"eprintf ( ""Unknown arm subtype %d\\n"" , cpusubtype & 0xff )"		3625865	0					
ANR	3626208	Callee	eprintf		3625865	0					
ANR	3626209	Identifier	eprintf		3625865	0					
ANR	3626210	ArgumentList	"""Unknown arm subtype %d\\n"""		3625865	1					
ANR	3626211	Argument	"""Unknown arm subtype %d\\n"""		3625865	0					
ANR	3626212	PrimaryExpression	"""Unknown arm subtype %d\\n"""		3625865	0					
ANR	3626213	Argument	cpusubtype & 0xff		3625865	1					
ANR	3626214	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626215	Identifier	cpusubtype		3625865	0					
ANR	3626216	PrimaryExpression	0xff		3625865	1					
ANR	3626217	ReturnStatement	"return ""unknown arm subtype"" ;"	3425:3:104324:104352	3625865	24	True				
ANR	3626218	PrimaryExpression	"""unknown arm subtype"""		3625865	0					
ANR	3626219	Label	case CPU_TYPE_SPARC :	3427:1:104359:104378	3625865	19	True				
ANR	3626220	Identifier	CPU_TYPE_SPARC		3625865	0					
ANR	3626221	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	20					
ANR	3626222	Condition	cpusubtype & 0xff	3428:10:104390:104406	3625865	0	True				
ANR	3626223	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626224	Identifier	cpusubtype		3625865	0					
ANR	3626225	PrimaryExpression	0xff		3625865	1					
ANR	3626226	CompoundStatement		112:29:3798:3798	3625865	1					
ANR	3626227	Label	case CPU_SUBTYPE_SPARC_ALL :	3429:2:104413:104439	3625865	0	True				
ANR	3626228	Identifier	CPU_SUBTYPE_SPARC_ALL		3625865	0					
ANR	3626229	ReturnStatement	"return ""all"" ;"	3429:30:104441:104453	3625865	1	True				
ANR	3626230	PrimaryExpression	"""all"""		3625865	0					
ANR	3626231	Label	default :	3430:2:104457:104464	3625865	2	True				
ANR	3626232	Identifier	default		3625865	0					
ANR	3626233	ReturnStatement	"return ""Unknown sparc subtype"" ;"	3430:13:104468:104498	3625865	3	True				
ANR	3626234	PrimaryExpression	"""Unknown sparc subtype"""		3625865	0					
ANR	3626235	Label	case CPU_TYPE_MIPS :	3432:1:104505:104523	3625865	21	True				
ANR	3626236	Identifier	CPU_TYPE_MIPS		3625865	0					
ANR	3626237	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	22					
ANR	3626238	Condition	cpusubtype & 0xff	3433:10:104535:104551	3625865	0	True				
ANR	3626239	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626240	Identifier	cpusubtype		3625865	0					
ANR	3626241	PrimaryExpression	0xff		3625865	1					
ANR	3626242	CompoundStatement		117:29:3943:3943	3625865	1					
ANR	3626243	Label	case CPU_SUBTYPE_MIPS_ALL :	3434:2:104558:104583	3625865	0	True				
ANR	3626244	Identifier	CPU_SUBTYPE_MIPS_ALL		3625865	0					
ANR	3626245	ReturnStatement	"return ""all"" ;"	3434:29:104585:104597	3625865	1	True				
ANR	3626246	PrimaryExpression	"""all"""		3625865	0					
ANR	3626247	Label	case CPU_SUBTYPE_MIPS_R2300 :	3435:2:104601:104628	3625865	2	True				
ANR	3626248	Identifier	CPU_SUBTYPE_MIPS_R2300		3625865	0					
ANR	3626249	ReturnStatement	"return ""r2300"" ;"	3435:31:104630:104644	3625865	3	True				
ANR	3626250	PrimaryExpression	"""r2300"""		3625865	0					
ANR	3626251	Label	case CPU_SUBTYPE_MIPS_R2600 :	3436:2:104648:104675	3625865	4	True				
ANR	3626252	Identifier	CPU_SUBTYPE_MIPS_R2600		3625865	0					
ANR	3626253	ReturnStatement	"return ""r2600"" ;"	3436:31:104677:104691	3625865	5	True				
ANR	3626254	PrimaryExpression	"""r2600"""		3625865	0					
ANR	3626255	Label	case CPU_SUBTYPE_MIPS_R2800 :	3437:2:104695:104722	3625865	6	True				
ANR	3626256	Identifier	CPU_SUBTYPE_MIPS_R2800		3625865	0					
ANR	3626257	ReturnStatement	"return ""r2800"" ;"	3437:31:104724:104738	3625865	7	True				
ANR	3626258	PrimaryExpression	"""r2800"""		3625865	0					
ANR	3626259	Label	case CPU_SUBTYPE_MIPS_R2000a :	3438:2:104742:104770	3625865	8	True				
ANR	3626260	Identifier	CPU_SUBTYPE_MIPS_R2000a		3625865	0					
ANR	3626261	ReturnStatement	"return ""r2000a"" ;"	3438:32:104772:104787	3625865	9	True				
ANR	3626262	PrimaryExpression	"""r2000a"""		3625865	0					
ANR	3626263	Label	case CPU_SUBTYPE_MIPS_R2000 :	3439:2:104791:104818	3625865	10	True				
ANR	3626264	Identifier	CPU_SUBTYPE_MIPS_R2000		3625865	0					
ANR	3626265	ReturnStatement	"return ""r2000"" ;"	3439:31:104820:104834	3625865	11	True				
ANR	3626266	PrimaryExpression	"""r2000"""		3625865	0					
ANR	3626267	Label	case CPU_SUBTYPE_MIPS_R3000a :	3440:2:104838:104866	3625865	12	True				
ANR	3626268	Identifier	CPU_SUBTYPE_MIPS_R3000a		3625865	0					
ANR	3626269	ReturnStatement	"return ""r3000a"" ;"	3440:32:104868:104883	3625865	13	True				
ANR	3626270	PrimaryExpression	"""r3000a"""		3625865	0					
ANR	3626271	Label	case CPU_SUBTYPE_MIPS_R3000 :	3441:2:104887:104914	3625865	14	True				
ANR	3626272	Identifier	CPU_SUBTYPE_MIPS_R3000		3625865	0					
ANR	3626273	ReturnStatement	"return ""r3000"" ;"	3441:31:104916:104930	3625865	15	True				
ANR	3626274	PrimaryExpression	"""r3000"""		3625865	0					
ANR	3626275	Label	default :	3442:2:104934:104941	3625865	16	True				
ANR	3626276	Identifier	default		3625865	0					
ANR	3626277	ReturnStatement	"return ""Unknown mips subtype"" ;"	3442:13:104945:104974	3625865	17	True				
ANR	3626278	PrimaryExpression	"""Unknown mips subtype"""		3625865	0					
ANR	3626279	Label	case CPU_TYPE_I860 :	3444:1:104981:104999	3625865	23	True				
ANR	3626280	Identifier	CPU_TYPE_I860		3625865	0					
ANR	3626281	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	24					
ANR	3626282	Condition	cpusubtype & 0xff	3445:10:105011:105027	3625865	0	True				
ANR	3626283	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626284	Identifier	cpusubtype		3625865	0					
ANR	3626285	PrimaryExpression	0xff		3625865	1					
ANR	3626286	CompoundStatement		129:29:4419:4419	3625865	1					
ANR	3626287	Label	case CPU_SUBTYPE_I860_ALL :	3446:2:105034:105059	3625865	0	True				
ANR	3626288	Identifier	CPU_SUBTYPE_I860_ALL		3625865	0					
ANR	3626289	ReturnStatement	"return ""all"" ;"	3446:29:105061:105073	3625865	1	True				
ANR	3626290	PrimaryExpression	"""all"""		3625865	0					
ANR	3626291	Label	case CPU_SUBTYPE_I860_860 :	3447:2:105077:105102	3625865	2	True				
ANR	3626292	Identifier	CPU_SUBTYPE_I860_860		3625865	0					
ANR	3626293	ReturnStatement	"return ""860"" ;"	3447:29:105104:105116	3625865	3	True				
ANR	3626294	PrimaryExpression	"""860"""		3625865	0					
ANR	3626295	Label	default :	3448:2:105120:105127	3625865	4	True				
ANR	3626296	Identifier	default		3625865	0					
ANR	3626297	ReturnStatement	"return ""Unknown i860 subtype"" ;"	3448:13:105131:105160	3625865	5	True				
ANR	3626298	PrimaryExpression	"""Unknown i860 subtype"""		3625865	0					
ANR	3626299	Label	case CPU_TYPE_POWERPC :	3450:1:105167:105188	3625865	25	True				
ANR	3626300	Identifier	CPU_TYPE_POWERPC		3625865	0					
ANR	3626301	Label	case CPU_TYPE_POWERPC64 :	3451:1:105191:105214	3625865	26	True				
ANR	3626302	Identifier	CPU_TYPE_POWERPC64		3625865	0					
ANR	3626303	SwitchStatement	switch ( cpusubtype & 0xff )		3625865	27					
ANR	3626304	Condition	cpusubtype & 0xff	3452:10:105226:105242	3625865	0	True				
ANR	3626305	BitAndExpression	cpusubtype & 0xff		3625865	0		&			
ANR	3626306	Identifier	cpusubtype		3625865	0					
ANR	3626307	PrimaryExpression	0xff		3625865	1					
ANR	3626308	CompoundStatement		136:29:4634:4634	3625865	1					
ANR	3626309	Label	case CPU_SUBTYPE_POWERPC_ALL :	3453:2:105249:105277	3625865	0	True				
ANR	3626310	Identifier	CPU_SUBTYPE_POWERPC_ALL		3625865	0					
ANR	3626311	ReturnStatement	"return ""all"" ;"	3453:32:105279:105291	3625865	1	True				
ANR	3626312	PrimaryExpression	"""all"""		3625865	0					
ANR	3626313	Label	case CPU_SUBTYPE_POWERPC_601 :	3454:2:105295:105323	3625865	2	True				
ANR	3626314	Identifier	CPU_SUBTYPE_POWERPC_601		3625865	0					
ANR	3626315	ReturnStatement	"return ""601"" ;"	3454:32:105325:105337	3625865	3	True				
ANR	3626316	PrimaryExpression	"""601"""		3625865	0					
ANR	3626317	Label	case CPU_SUBTYPE_POWERPC_602 :	3455:2:105341:105369	3625865	4	True				
ANR	3626318	Identifier	CPU_SUBTYPE_POWERPC_602		3625865	0					
ANR	3626319	ReturnStatement	"return ""602"" ;"	3455:32:105371:105383	3625865	5	True				
ANR	3626320	PrimaryExpression	"""602"""		3625865	0					
ANR	3626321	Label	case CPU_SUBTYPE_POWERPC_603 :	3456:2:105387:105415	3625865	6	True				
ANR	3626322	Identifier	CPU_SUBTYPE_POWERPC_603		3625865	0					
ANR	3626323	ReturnStatement	"return ""603"" ;"	3456:32:105417:105429	3625865	7	True				
ANR	3626324	PrimaryExpression	"""603"""		3625865	0					
ANR	3626325	Label	case CPU_SUBTYPE_POWERPC_603e :	3457:2:105433:105462	3625865	8	True				
ANR	3626326	Identifier	CPU_SUBTYPE_POWERPC_603e		3625865	0					
ANR	3626327	ReturnStatement	"return ""603e"" ;"	3457:33:105464:105477	3625865	9	True				
ANR	3626328	PrimaryExpression	"""603e"""		3625865	0					
ANR	3626329	Label	case CPU_SUBTYPE_POWERPC_603ev :	3458:2:105481:105511	3625865	10	True				
ANR	3626330	Identifier	CPU_SUBTYPE_POWERPC_603ev		3625865	0					
ANR	3626331	ReturnStatement	"return ""603ev"" ;"	3458:34:105513:105527	3625865	11	True				
ANR	3626332	PrimaryExpression	"""603ev"""		3625865	0					
ANR	3626333	Label	case CPU_SUBTYPE_POWERPC_604 :	3459:2:105531:105559	3625865	12	True				
ANR	3626334	Identifier	CPU_SUBTYPE_POWERPC_604		3625865	0					
ANR	3626335	ReturnStatement	"return ""604"" ;"	3459:32:105561:105573	3625865	13	True				
ANR	3626336	PrimaryExpression	"""604"""		3625865	0					
ANR	3626337	Label	case CPU_SUBTYPE_POWERPC_604e :	3460:2:105577:105606	3625865	14	True				
ANR	3626338	Identifier	CPU_SUBTYPE_POWERPC_604e		3625865	0					
ANR	3626339	ReturnStatement	"return ""604e"" ;"	3460:33:105608:105621	3625865	15	True				
ANR	3626340	PrimaryExpression	"""604e"""		3625865	0					
ANR	3626341	Label	case CPU_SUBTYPE_POWERPC_620 :	3461:2:105625:105653	3625865	16	True				
ANR	3626342	Identifier	CPU_SUBTYPE_POWERPC_620		3625865	0					
ANR	3626343	ReturnStatement	"return ""620"" ;"	3461:32:105655:105667	3625865	17	True				
ANR	3626344	PrimaryExpression	"""620"""		3625865	0					
ANR	3626345	Label	case CPU_SUBTYPE_POWERPC_750 :	3462:2:105671:105699	3625865	18	True				
ANR	3626346	Identifier	CPU_SUBTYPE_POWERPC_750		3625865	0					
ANR	3626347	ReturnStatement	"return ""750"" ;"	3462:32:105701:105713	3625865	19	True				
ANR	3626348	PrimaryExpression	"""750"""		3625865	0					
ANR	3626349	Label	case CPU_SUBTYPE_POWERPC_7400 :	3463:2:105717:105746	3625865	20	True				
ANR	3626350	Identifier	CPU_SUBTYPE_POWERPC_7400		3625865	0					
ANR	3626351	ReturnStatement	"return ""7400"" ;"	3463:33:105748:105761	3625865	21	True				
ANR	3626352	PrimaryExpression	"""7400"""		3625865	0					
ANR	3626353	Label	case CPU_SUBTYPE_POWERPC_7450 :	3464:2:105765:105794	3625865	22	True				
ANR	3626354	Identifier	CPU_SUBTYPE_POWERPC_7450		3625865	0					
ANR	3626355	ReturnStatement	"return ""7450"" ;"	3464:33:105796:105809	3625865	23	True				
ANR	3626356	PrimaryExpression	"""7450"""		3625865	0					
ANR	3626357	Label	case CPU_SUBTYPE_POWERPC_970 :	3465:2:105813:105841	3625865	24	True				
ANR	3626358	Identifier	CPU_SUBTYPE_POWERPC_970		3625865	0					
ANR	3626359	ReturnStatement	"return ""970"" ;"	3465:32:105843:105855	3625865	25	True				
ANR	3626360	PrimaryExpression	"""970"""		3625865	0					
ANR	3626361	Label	default :	3466:2:105859:105866	3625865	26	True				
ANR	3626362	Identifier	default		3625865	0					
ANR	3626363	ReturnStatement	"return ""Unknown ppc subtype"" ;"	3466:13:105870:105898	3625865	27	True				
ANR	3626364	PrimaryExpression	"""Unknown ppc subtype"""		3625865	0					
ANR	3626365	ReturnStatement	"return ""Unknown cputype"" ;"	3469:1:105908:105932	3625865	1	True				
ANR	3626366	PrimaryExpression	"""Unknown cputype"""		3625865	0					
ANR	3626367	ReturnType	static const char *		3625865	1					
ANR	3626368	Identifier	cpusubtype_tostring		3625865	2					
ANR	3626369	ParameterList	"ut32 cputype , ut32 cpusubtype"		3625865	3					
ANR	3626370	Parameter	ut32 cputype	3317:40:100579:100590	3625865	0	True				
ANR	3626371	ParameterType	ut32		3625865	0					
ANR	3626372	Identifier	cputype		3625865	1					
ANR	3626373	Parameter	ut32 cpusubtype	3317:54:100593:100607	3625865	1	True				
ANR	3626374	ParameterType	ut32		3625865	0					
ANR	3626375	Identifier	cpusubtype		3625865	1					
ANR	3626376	CFGEntryNode	ENTRY		3625865		True				
ANR	3626377	CFGExitNode	EXIT		3625865		True				
ANR	3626378	Symbol	cputype		3625865						
ANR	3626379	Symbol	cpusubtype		3625865						
ANR	3626380	DeclStmt									
ANR	3626381	Decl							const char	const char *	mhtype
ANR	3626382	DeclStmt									
ANR	3626383	Decl							ut64	ut64	addr
ANR	3626384	DeclStmt									
ANR	3626385	Decl							int	int	i
ANR	3626386	DeclStmt									
ANR	3626387	Decl							ut8	ut8 [ 128 ]	b
ANR	3626388	DeclStmt									
ANR	3626389	Decl							ut64	ut64	entry
ANR	3626390	DeclStmt									
ANR	3626391	Decl							int	int	delta
ANR	3626392	Function	mach_headerfields	3562:0:108678:116343							
ANR	3626393	FunctionDef	mach_headerfields (RBinFile * bf)		3626392	0					
ANR	3626394	CompoundStatement		3562:45:108723:116343	3626392	0					
ANR	3626395	IdentifierDeclStatement	PrintfCallback cb_printf = bf -> rbin -> cb_printf ;	3563:1:108726:108772	3626392	0	True				
ANR	3626396	IdentifierDecl	cb_printf = bf -> rbin -> cb_printf		3626392	0					
ANR	3626397	IdentifierDeclType	PrintfCallback		3626392	0					
ANR	3626398	Identifier	cb_printf		3626392	1					
ANR	3626399	AssignmentExpression	cb_printf = bf -> rbin -> cb_printf		3626392	2		=			
ANR	3626400	Identifier	cb_printf		3626392	0					
ANR	3626401	PtrMemberAccess	bf -> rbin -> cb_printf		3626392	1					
ANR	3626402	PtrMemberAccess	bf -> rbin		3626392	0					
ANR	3626403	Identifier	bf		3626392	0					
ANR	3626404	Identifier	rbin		3626392	1					
ANR	3626405	Identifier	cb_printf		3626392	1					
ANR	3626406	IfStatement	if ( ! cb_printf )		3626392	1					
ANR	3626407	Condition	! cb_printf	3564:5:108779:108788	3626392	0	True				
ANR	3626408	UnaryOperationExpression	! cb_printf		3626392	0					
ANR	3626409	UnaryOperator	!		3626392	0					
ANR	3626410	Identifier	cb_printf		3626392	1					
ANR	3626411	CompoundStatement		3:17:67:67	3626392	1					
ANR	3626412	ExpressionStatement	cb_printf = printf	3565:2:108795:108813	3626392	0	True				
ANR	3626413	AssignmentExpression	cb_printf = printf		3626392	0		=			
ANR	3626414	Identifier	cb_printf		3626392	0					
ANR	3626415	Identifier	printf		3626392	1					
ANR	3626416	IdentifierDeclStatement	RBuffer * buf = bf -> buf ;	3567:1:108819:108841	3626392	2	True				
ANR	3626417	IdentifierDecl	* buf = bf -> buf		3626392	0					
ANR	3626418	IdentifierDeclType	RBuffer *		3626392	0					
ANR	3626419	Identifier	buf		3626392	1					
ANR	3626420	AssignmentExpression	* buf = bf -> buf		3626392	2		=			
ANR	3626421	Identifier	buf		3626392	0					
ANR	3626422	PtrMemberAccess	bf -> buf		3626392	1					
ANR	3626423	Identifier	bf		3626392	0					
ANR	3626424	Identifier	buf		3626392	1					
ANR	3626425	IdentifierDeclStatement	ut64 length = r_buf_size ( buf ) ;	3568:1:108844:108874	3626392	3	True				
ANR	3626426	IdentifierDecl	length = r_buf_size ( buf )		3626392	0					
ANR	3626427	IdentifierDeclType	ut64		3626392	0					
ANR	3626428	Identifier	length		3626392	1					
ANR	3626429	AssignmentExpression	length = r_buf_size ( buf )		3626392	2		=			
ANR	3626430	Identifier	length		3626392	0					
ANR	3626431	CallExpression	r_buf_size ( buf )		3626392	1					
ANR	3626432	Callee	r_buf_size		3626392	0					
ANR	3626433	Identifier	r_buf_size		3626392	0					
ANR	3626434	ArgumentList	buf		3626392	1					
ANR	3626435	Argument	buf		3626392	0					
ANR	3626436	Identifier	buf		3626392	0					
ANR	3626437	IdentifierDeclStatement	int n = 0 ;	3569:1:108877:108886	3626392	4	True				
ANR	3626438	IdentifierDecl	n = 0		3626392	0					
ANR	3626439	IdentifierDeclType	int		3626392	0					
ANR	3626440	Identifier	n		3626392	1					
ANR	3626441	AssignmentExpression	n = 0		3626392	2		=			
ANR	3626442	Identifier	n		3626392	0					
ANR	3626443	PrimaryExpression	0		3626392	1					
ANR	3626444	Statement	struct	3570:1:108889:108894	3626392	5	True				
ANR	3626445	ExpressionStatement	MACH0_ ( mach_header ) * mh = MACH0_ ( get_hdr ) ( buf )	3570:8:108896:108942	3626392	6	True				
ANR	3626446	AssignmentExpression	MACH0_ ( mach_header ) * mh = MACH0_ ( get_hdr ) ( buf )		3626392	0		=			
ANR	3626447	MultiplicativeExpression	MACH0_ ( mach_header ) * mh		3626392	0		*			
ANR	3626448	CallExpression	MACH0_ ( mach_header )		3626392	0					
ANR	3626449	Callee	MACH0_		3626392	0					
ANR	3626450	Identifier	MACH0_		3626392	0					
ANR	3626451	ArgumentList	mach_header		3626392	1					
ANR	3626452	Argument	mach_header		3626392	0					
ANR	3626453	Identifier	mach_header		3626392	0					
ANR	3626454	Identifier	mh		3626392	1					
ANR	3626455	CallExpression	MACH0_ ( get_hdr ) ( buf )		3626392	1					
ANR	3626456	Callee	MACH0_ ( get_hdr )		3626392	0					
ANR	3626457	CallExpression	MACH0_ ( get_hdr )		3626392	0					
ANR	3626458	Callee	MACH0_		3626392	0					
ANR	3626459	Identifier	MACH0_		3626392	0					
ANR	3626460	ArgumentList	get_hdr		3626392	1					
ANR	3626461	Argument	get_hdr		3626392	0					
ANR	3626462	Identifier	get_hdr		3626392	0					
ANR	3626463	ArgumentList	buf		3626392	1					
ANR	3626464	Argument	buf		3626392	0					
ANR	3626465	Identifier	buf		3626392	0					
ANR	3626466	IfStatement	if ( ! mh )		3626392	7					
ANR	3626467	Condition	! mh	3571:5:108949:108951	3626392	0	True				
ANR	3626468	UnaryOperationExpression	! mh		3626392	0					
ANR	3626469	UnaryOperator	!		3626392	0					
ANR	3626470	Identifier	mh		3626392	1					
ANR	3626471	CompoundStatement		10:10:230:230	3626392	1					
ANR	3626472	ReturnStatement	return ;	3572:2:108958:108964	3626392	0	True				
ANR	3626473	IdentifierDeclStatement	"ut64 pvaddr = pa2va ( bf , 0 ) ;"	3574:1:108970:108997	3626392	8	True				
ANR	3626474	IdentifierDecl	"pvaddr = pa2va ( bf , 0 )"		3626392	0					
ANR	3626475	IdentifierDeclType	ut64		3626392	0					
ANR	3626476	Identifier	pvaddr		3626392	1					
ANR	3626477	AssignmentExpression	"pvaddr = pa2va ( bf , 0 )"		3626392	2		=			
ANR	3626478	Identifier	pvaddr		3626392	0					
ANR	3626479	CallExpression	"pa2va ( bf , 0 )"		3626392	1					
ANR	3626480	Callee	pa2va		3626392	0					
ANR	3626481	Identifier	pa2va		3626392	0					
ANR	3626482	ArgumentList	bf		3626392	1					
ANR	3626483	Argument	bf		3626392	0					
ANR	3626484	Identifier	bf		3626392	0					
ANR	3626485	Argument	0		3626392	1					
ANR	3626486	PrimaryExpression	0		3626392	0					
ANR	3626487	Statement	cb_printf	3575:1:109000:109008	3626392	9	True				
ANR	3626488	Statement	(	3575:11:109010:109010	3626392	10	True				
ANR	3626489	Statement	"""pf.mach0_header @ 0x%08"""	3575:12:109011:109035	3626392	11	True				
ANR	3626490	Statement	PFMT64x	3575:37:109036:109042	3626392	12	True				
ANR	3626491	Statement	"""\\n"""	3575:44:109043:109046	3626392	13	True				
ANR	3626492	Statement	","	3575:48:109047:109047	3626392	14	True				
ANR	3626493	Statement	pvaddr	3575:50:109049:109054	3626392	15	True				
ANR	3626494	Statement	)	3575:56:109055:109055	3626392	16	True				
ANR	3626495	ExpressionStatement		3575:57:109056:109056	3626392	17	True				
ANR	3626496	Statement	cb_printf	3576:1:109059:109067	3626392	18	True				
ANR	3626497	Statement	(	3576:11:109069:109069	3626392	19	True				
ANR	3626498	Statement	"""0x%08"""	3576:12:109070:109076	3626392	20	True				
ANR	3626499	Statement	PFMT64x	3576:19:109077:109083	3626392	21	True				
ANR	3626500	Statement	"""  Magic       0x%x\\n"""	3576:26:109084:109105	3626392	22	True				
ANR	3626501	Statement	","	3576:48:109106:109106	3626392	23	True				
ANR	3626502	Statement	pvaddr	3576:50:109108:109113	3626392	24	True				
ANR	3626503	Statement	","	3576:56:109114:109114	3626392	25	True				
ANR	3626504	Statement	mh	3576:58:109116:109117	3626392	26	True				
ANR	3626505	Statement	->	3576:60:109118:109119	3626392	27	True				
ANR	3626506	Statement	magic	3576:62:109120:109124	3626392	28	True				
ANR	3626507	Statement	)	3576:67:109125:109125	3626392	29	True				
ANR	3626508	ExpressionStatement		3576:68:109126:109126	3626392	30	True				
ANR	3626509	ExpressionStatement	pvaddr += 4	3577:1:109129:109140	3626392	31	True				
ANR	3626510	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626511	Identifier	pvaddr		3626392	0					
ANR	3626512	PrimaryExpression	4		3626392	1					
ANR	3626513	Statement	cb_printf	3578:1:109143:109151	3626392	32	True				
ANR	3626514	Statement	(	3578:11:109153:109153	3626392	33	True				
ANR	3626515	Statement	"""0x%08"""	3578:12:109154:109160	3626392	34	True				
ANR	3626516	Statement	PFMT64x	3578:19:109161:109167	3626392	35	True				
ANR	3626517	Statement	"""  CpuType     0x%x\\n"""	3578:26:109168:109189	3626392	36	True				
ANR	3626518	Statement	","	3578:48:109190:109190	3626392	37	True				
ANR	3626519	Statement	pvaddr	3578:50:109192:109197	3626392	38	True				
ANR	3626520	Statement	","	3578:56:109198:109198	3626392	39	True				
ANR	3626521	Statement	mh	3578:58:109200:109201	3626392	40	True				
ANR	3626522	Statement	->	3578:60:109202:109203	3626392	41	True				
ANR	3626523	Statement	cputype	3578:62:109204:109210	3626392	42	True				
ANR	3626524	Statement	)	3578:69:109211:109211	3626392	43	True				
ANR	3626525	ExpressionStatement		3578:70:109212:109212	3626392	44	True				
ANR	3626526	ExpressionStatement	pvaddr += 4	3579:1:109215:109226	3626392	45	True				
ANR	3626527	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626528	Identifier	pvaddr		3626392	0					
ANR	3626529	PrimaryExpression	4		3626392	1					
ANR	3626530	Statement	cb_printf	3580:1:109229:109237	3626392	46	True				
ANR	3626531	Statement	(	3580:11:109239:109239	3626392	47	True				
ANR	3626532	Statement	"""0x%08"""	3580:12:109240:109246	3626392	48	True				
ANR	3626533	Statement	PFMT64x	3580:19:109247:109253	3626392	49	True				
ANR	3626534	Statement	"""  CpuSubType  0x%x\\n"""	3580:26:109254:109275	3626392	50	True				
ANR	3626535	Statement	","	3580:48:109276:109276	3626392	51	True				
ANR	3626536	Statement	pvaddr	3580:50:109278:109283	3626392	52	True				
ANR	3626537	Statement	","	3580:56:109284:109284	3626392	53	True				
ANR	3626538	Statement	mh	3580:58:109286:109287	3626392	54	True				
ANR	3626539	Statement	->	3580:60:109288:109289	3626392	55	True				
ANR	3626540	Statement	cpusubtype	3580:62:109290:109299	3626392	56	True				
ANR	3626541	Statement	)	3580:72:109300:109300	3626392	57	True				
ANR	3626542	ExpressionStatement		3580:73:109301:109301	3626392	58	True				
ANR	3626543	ExpressionStatement	pvaddr += 4	3581:1:109304:109315	3626392	59	True				
ANR	3626544	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626545	Identifier	pvaddr		3626392	0					
ANR	3626546	PrimaryExpression	4		3626392	1					
ANR	3626547	Statement	cb_printf	3582:1:109318:109326	3626392	60	True				
ANR	3626548	Statement	(	3582:11:109328:109328	3626392	61	True				
ANR	3626549	Statement	"""0x%08"""	3582:12:109329:109335	3626392	62	True				
ANR	3626550	Statement	PFMT64x	3582:19:109336:109342	3626392	63	True				
ANR	3626551	Statement	"""  FileType    0x%x\\n"""	3582:26:109343:109364	3626392	64	True				
ANR	3626552	Statement	","	3582:48:109365:109365	3626392	65	True				
ANR	3626553	Statement	pvaddr	3582:50:109367:109372	3626392	66	True				
ANR	3626554	Statement	","	3582:56:109373:109373	3626392	67	True				
ANR	3626555	Statement	mh	3582:58:109375:109376	3626392	68	True				
ANR	3626556	Statement	->	3582:60:109377:109378	3626392	69	True				
ANR	3626557	Statement	filetype	3582:62:109379:109386	3626392	70	True				
ANR	3626558	Statement	)	3582:70:109387:109387	3626392	71	True				
ANR	3626559	ExpressionStatement		3582:71:109388:109388	3626392	72	True				
ANR	3626560	ExpressionStatement	pvaddr += 4	3583:1:109391:109402	3626392	73	True				
ANR	3626561	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626562	Identifier	pvaddr		3626392	0					
ANR	3626563	PrimaryExpression	4		3626392	1					
ANR	3626564	Statement	cb_printf	3584:1:109405:109413	3626392	74	True				
ANR	3626565	Statement	(	3584:11:109415:109415	3626392	75	True				
ANR	3626566	Statement	"""0x%08"""	3584:12:109416:109422	3626392	76	True				
ANR	3626567	Statement	PFMT64x	3584:19:109423:109429	3626392	77	True				
ANR	3626568	Statement	"""  nCmds       %d\\n"""	3584:26:109430:109449	3626392	78	True				
ANR	3626569	Statement	","	3584:46:109450:109450	3626392	79	True				
ANR	3626570	Statement	pvaddr	3584:48:109452:109457	3626392	80	True				
ANR	3626571	Statement	","	3584:54:109458:109458	3626392	81	True				
ANR	3626572	Statement	mh	3584:56:109460:109461	3626392	82	True				
ANR	3626573	Statement	->	3584:58:109462:109463	3626392	83	True				
ANR	3626574	Statement	ncmds	3584:60:109464:109468	3626392	84	True				
ANR	3626575	Statement	)	3584:65:109469:109469	3626392	85	True				
ANR	3626576	ExpressionStatement		3584:66:109470:109470	3626392	86	True				
ANR	3626577	ExpressionStatement	pvaddr += 4	3585:1:109473:109484	3626392	87	True				
ANR	3626578	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626579	Identifier	pvaddr		3626392	0					
ANR	3626580	PrimaryExpression	4		3626392	1					
ANR	3626581	Statement	cb_printf	3586:1:109487:109495	3626392	88	True				
ANR	3626582	Statement	(	3586:11:109497:109497	3626392	89	True				
ANR	3626583	Statement	"""0x%08"""	3586:12:109498:109504	3626392	90	True				
ANR	3626584	Statement	PFMT64x	3586:19:109505:109511	3626392	91	True				
ANR	3626585	Statement	"""  sizeOfCmds  %d\\n"""	3586:26:109512:109531	3626392	92	True				
ANR	3626586	Statement	","	3586:46:109532:109532	3626392	93	True				
ANR	3626587	Statement	pvaddr	3586:48:109534:109539	3626392	94	True				
ANR	3626588	Statement	","	3586:54:109540:109540	3626392	95	True				
ANR	3626589	Statement	mh	3586:56:109542:109543	3626392	96	True				
ANR	3626590	Statement	->	3586:58:109544:109545	3626392	97	True				
ANR	3626591	Statement	sizeofcmds	3586:60:109546:109555	3626392	98	True				
ANR	3626592	Statement	)	3586:70:109556:109556	3626392	99	True				
ANR	3626593	ExpressionStatement		3586:71:109557:109557	3626392	100	True				
ANR	3626594	ExpressionStatement	pvaddr += 4	3587:1:109560:109571	3626392	101	True				
ANR	3626595	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626596	Identifier	pvaddr		3626392	0					
ANR	3626597	PrimaryExpression	4		3626392	1					
ANR	3626598	Statement	cb_printf	3588:1:109574:109582	3626392	102	True				
ANR	3626599	Statement	(	3588:11:109584:109584	3626392	103	True				
ANR	3626600	Statement	"""0x%08"""	3588:12:109585:109591	3626392	104	True				
ANR	3626601	Statement	PFMT64x	3588:19:109592:109598	3626392	105	True				
ANR	3626602	Statement	"""  Flags       0x%x\\n"""	3588:26:109599:109620	3626392	106	True				
ANR	3626603	Statement	","	3588:48:109621:109621	3626392	107	True				
ANR	3626604	Statement	pvaddr	3588:50:109623:109628	3626392	108	True				
ANR	3626605	Statement	","	3588:56:109629:109629	3626392	109	True				
ANR	3626606	Statement	mh	3588:58:109631:109632	3626392	110	True				
ANR	3626607	Statement	->	3588:60:109633:109634	3626392	111	True				
ANR	3626608	Statement	flags	3588:62:109635:109639	3626392	112	True				
ANR	3626609	Statement	)	3588:67:109640:109640	3626392	113	True				
ANR	3626610	ExpressionStatement		3588:68:109641:109641	3626392	114	True				
ANR	3626611	ExpressionStatement	pvaddr += 4	3589:1:109644:109655	3626392	115	True				
ANR	3626612	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626613	Identifier	pvaddr		3626392	0					
ANR	3626614	PrimaryExpression	4		3626392	1					
ANR	3626615	IdentifierDeclStatement	bool is64 = mh -> cputype >> 16 ;	3590:1:109658:109687	3626392	116	True				
ANR	3626616	IdentifierDecl	is64 = mh -> cputype >> 16		3626392	0					
ANR	3626617	IdentifierDeclType	bool		3626392	0					
ANR	3626618	Identifier	is64		3626392	1					
ANR	3626619	AssignmentExpression	is64 = mh -> cputype >> 16		3626392	2		=			
ANR	3626620	Identifier	is64		3626392	0					
ANR	3626621	ShiftExpression	mh -> cputype >> 16		3626392	1		>>			
ANR	3626622	PtrMemberAccess	mh -> cputype		3626392	0					
ANR	3626623	Identifier	mh		3626392	0					
ANR	3626624	Identifier	cputype		3626392	1					
ANR	3626625	PrimaryExpression	16		3626392	1					
ANR	3626626	IdentifierDeclStatement	ut64 addr = 0x20 - 4 ;	3592:1:109691:109711	3626392	117	True				
ANR	3626627	IdentifierDecl	addr = 0x20 - 4		3626392	0					
ANR	3626628	IdentifierDeclType	ut64		3626392	0					
ANR	3626629	Identifier	addr		3626392	1					
ANR	3626630	AssignmentExpression	addr = 0x20 - 4		3626392	2		=			
ANR	3626631	Identifier	addr		3626392	0					
ANR	3626632	AdditiveExpression	0x20 - 4		3626392	1		-			
ANR	3626633	PrimaryExpression	0x20		3626392	0					
ANR	3626634	PrimaryExpression	4		3626392	1					
ANR	3626635	IdentifierDeclStatement	ut32 word = 0 ;	3593:1:109714:109727	3626392	118	True				
ANR	3626636	IdentifierDecl	word = 0		3626392	0					
ANR	3626637	IdentifierDeclType	ut32		3626392	0					
ANR	3626638	Identifier	word		3626392	1					
ANR	3626639	AssignmentExpression	word = 0		3626392	2		=			
ANR	3626640	Identifier	word		3626392	0					
ANR	3626641	PrimaryExpression	0		3626392	1					
ANR	3626642	IdentifierDeclStatement	ut8 wordbuf [ sizeof ( word ) ] ;	3594:1:109730:109756	3626392	119	True				
ANR	3626643	IdentifierDecl	wordbuf [ sizeof ( word ) ]		3626392	0					
ANR	3626644	IdentifierDeclType	ut8 [ sizeof ( word ) ]		3626392	0					
ANR	3626645	Identifier	wordbuf		3626392	1					
ANR	3626646	SizeofExpression	sizeof ( word )		3626392	2					
ANR	3626647	Sizeof	sizeof		3626392	0					
ANR	3626648	SizeofOperand	word		3626392	1					
ANR	3626649	IdentifierDeclStatement	bool isBe = false ;	3595:1:109759:109776	3626392	120	True				
ANR	3626650	IdentifierDecl	isBe = false		3626392	0					
ANR	3626651	IdentifierDeclType	bool		3626392	0					
ANR	3626652	Identifier	isBe		3626392	1					
ANR	3626653	AssignmentExpression	isBe = false		3626392	2		=			
ANR	3626654	Identifier	false		3626392	0					
ANR	3626655	Identifier	false		3626392	1					
ANR	3626656	SwitchStatement	switch ( mh -> cputype )		3626392	121					
ANR	3626657	Condition	mh -> cputype	3596:9:109787:109797	3626392	0	True				
ANR	3626658	PtrMemberAccess	mh -> cputype		3626392	0					
ANR	3626659	Identifier	mh		3626392	0					
ANR	3626660	Identifier	cputype		3626392	1					
ANR	3626661	CompoundStatement		35:22:1076:1076	3626392	1					
ANR	3626662	Label	case CPU_TYPE_POWERPC :	3597:1:109803:109824	3626392	0	True				
ANR	3626663	Identifier	CPU_TYPE_POWERPC		3626392	0					
ANR	3626664	Label	case CPU_TYPE_POWERPC64 :	3598:1:109827:109850	3626392	1	True				
ANR	3626665	Identifier	CPU_TYPE_POWERPC64		3626392	0					
ANR	3626666	ExpressionStatement	isBe = true	3599:2:109854:109865	3626392	2	True				
ANR	3626667	AssignmentExpression	isBe = true		3626392	0		=			
ANR	3626668	Identifier	isBe		3626392	0					
ANR	3626669	Identifier	true		3626392	1					
ANR	3626670	BreakStatement	break ;	3600:2:109869:109874	3626392	3	True				
ANR	3626671	Statement	define	3602:1:109880:109885	3626392	122	True				
ANR	3626672	Statement	READWORD	3602:8:109887:109894	3626392	123	True				
ANR	3626673	Statement	(	3602:16:109895:109895	3626392	124	True				
ANR	3626674	Statement	)	3602:17:109896:109896	3626392	125	True				
ANR	3626675	IfStatement	"if ( r_buf_read_at ( buf , addr , ( ut8 * ) wordbuf , 4 ) != 4 )"		3626392	126					
ANR	3626676	Condition	"r_buf_read_at ( buf , addr , ( ut8 * ) wordbuf , 4 ) != 4"	3603:6:109906:109953	3626392	0	True				
ANR	3626677	EqualityExpression	"r_buf_read_at ( buf , addr , ( ut8 * ) wordbuf , 4 ) != 4"		3626392	0		!=			
ANR	3626678	CallExpression	"r_buf_read_at ( buf , addr , ( ut8 * ) wordbuf , 4 )"		3626392	0					
ANR	3626679	Callee	r_buf_read_at		3626392	0					
ANR	3626680	Identifier	r_buf_read_at		3626392	0					
ANR	3626681	ArgumentList	buf		3626392	1					
ANR	3626682	Argument	buf		3626392	0					
ANR	3626683	Identifier	buf		3626392	0					
ANR	3626684	Argument	addr		3626392	1					
ANR	3626685	Identifier	addr		3626392	0					
ANR	3626686	Argument	( ut8 * ) wordbuf		3626392	2					
ANR	3626687	CastExpression	( ut8 * ) wordbuf		3626392	0					
ANR	3626688	CastTarget	ut8 *		3626392	0					
ANR	3626689	Identifier	wordbuf		3626392	1					
ANR	3626690	Argument	4		3626392	3					
ANR	3626691	PrimaryExpression	4		3626392	0					
ANR	3626692	PrimaryExpression	4		3626392	1					
ANR	3626693	CompoundStatement		42:56:1232:1232	3626392	1					
ANR	3626694	ExpressionStatement	"eprintf ( ""Invalid address in buffer."" )"	3604:3:109963:110001	3626392	0	True				
ANR	3626695	CallExpression	"eprintf ( ""Invalid address in buffer."" )"		3626392	0					
ANR	3626696	Callee	eprintf		3626392	0					
ANR	3626697	Identifier	eprintf		3626392	0					
ANR	3626698	ArgumentList	"""Invalid address in buffer."""		3626392	1					
ANR	3626699	Argument	"""Invalid address in buffer."""		3626392	0					
ANR	3626700	PrimaryExpression	"""Invalid address in buffer."""		3626392	0					
ANR	3626701	BreakStatement	break ;	3605:3:110008:110013	3626392	1	True				
ANR	3626702	ExpressionStatement	addr += 4	3607:2:110025:110034	3626392	127	True				
ANR	3626703	AssignmentExpression	addr += 4		3626392	0		+=			
ANR	3626704	Identifier	addr		3626392	0					
ANR	3626705	PrimaryExpression	4		3626392	1					
ANR	3626706	ExpressionStatement	pvaddr += 4	3608:2:110040:110051	3626392	128	True				
ANR	3626707	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626708	Identifier	pvaddr		3626392	0					
ANR	3626709	PrimaryExpression	4		3626392	1					
ANR	3626710	ExpressionStatement	word = isBe ? r_read_be32 ( wordbuf ) : r_read_le32 ( wordbuf )	3609:2:110056:110113	3626392	129	True				
ANR	3626711	AssignmentExpression	word = isBe ? r_read_be32 ( wordbuf ) : r_read_le32 ( wordbuf )		3626392	0		=			
ANR	3626712	Identifier	word		3626392	0					
ANR	3626713	ConditionalExpression	isBe ? r_read_be32 ( wordbuf ) : r_read_le32 ( wordbuf )		3626392	1					
ANR	3626714	Condition	isBe		3626392	0					
ANR	3626715	Identifier	isBe		3626392	0					
ANR	3626716	CallExpression	r_read_be32 ( wordbuf )		3626392	1					
ANR	3626717	Callee	r_read_be32		3626392	0					
ANR	3626718	Identifier	r_read_be32		3626392	0					
ANR	3626719	ArgumentList	wordbuf		3626392	1					
ANR	3626720	Argument	wordbuf		3626392	0					
ANR	3626721	Identifier	wordbuf		3626392	0					
ANR	3626722	CallExpression	r_read_le32 ( wordbuf )		3626392	2					
ANR	3626723	Callee	r_read_le32		3626392	0					
ANR	3626724	Identifier	r_read_le32		3626392	0					
ANR	3626725	ArgumentList	wordbuf		3626392	1					
ANR	3626726	Argument	wordbuf		3626392	0					
ANR	3626727	Identifier	wordbuf		3626392	0					
ANR	3626728	IfStatement	if ( is64 )		3626392	130					
ANR	3626729	Condition	is64	3610:5:110120:110123	3626392	0	True				
ANR	3626730	Identifier	is64		3626392	0					
ANR	3626731	CompoundStatement		49:11:1402:1402	3626392	1					
ANR	3626732	ExpressionStatement	addr += 4	3611:2:110130:110139	3626392	0	True				
ANR	3626733	AssignmentExpression	addr += 4		3626392	0		+=			
ANR	3626734	Identifier	addr		3626392	0					
ANR	3626735	PrimaryExpression	4		3626392	1					
ANR	3626736	ExpressionStatement	pvaddr += 4	3612:2:110143:110154	3626392	1	True				
ANR	3626737	AssignmentExpression	pvaddr += 4		3626392	0		+=			
ANR	3626738	Identifier	pvaddr		3626392	0					
ANR	3626739	PrimaryExpression	4		3626392	1					
ANR	3626740	ForStatement	for ( n = 0 ; n < mh -> ncmds ; n ++ )		3626392	131					
ANR	3626741	ForInit	n = 0 ;	3614:6:110165:110170	3626392	0	True				
ANR	3626742	AssignmentExpression	n = 0		3626392	0		=			
ANR	3626743	Identifier	n		3626392	0					
ANR	3626744	PrimaryExpression	0		3626392	1					
ANR	3626745	Condition	n < mh -> ncmds	3614:13:110172:110184	3626392	1	True				
ANR	3626746	RelationalExpression	n < mh -> ncmds		3626392	0		<			
ANR	3626747	Identifier	n		3626392	0					
ANR	3626748	PtrMemberAccess	mh -> ncmds		3626392	1					
ANR	3626749	Identifier	mh		3626392	0					
ANR	3626750	Identifier	ncmds		3626392	1					
ANR	3626751	PostIncDecOperationExpression	n ++	3614:28:110187:110189	3626392	2	True				
ANR	3626752	Identifier	n		3626392	0					
ANR	3626753	IncDec	++		3626392	1					
ANR	3626754	CompoundStatement		66:2:1819:1836	3626392	3					
ANR	3626755	ExpressionStatement	READWORD ( )	3615:2:110196:110207	3626392	0	True				
ANR	3626756	CallExpression	READWORD ( )		3626392	0					
ANR	3626757	Callee	READWORD		3626392	0					
ANR	3626758	Identifier	READWORD		3626392	0					
ANR	3626759	ArgumentList			3626392	1					
ANR	3626760	IdentifierDeclStatement	int lcType = word ;	3616:2:110211:110228	3626392	1	True				
ANR	3626761	IdentifierDecl	lcType = word		3626392	0					
ANR	3626762	IdentifierDeclType	int		3626392	0					
ANR	3626763	Identifier	lcType		3626392	1					
ANR	3626764	AssignmentExpression	lcType = word		3626392	2		=			
ANR	3626765	Identifier	word		3626392	0					
ANR	3626766	Identifier	word		3626392	1					
ANR	3626767	IdentifierDeclStatement	const char * pf_definition = cmd_to_pf_definition ( lcType ) ;	3617:2:110232:110289	3626392	2	True				
ANR	3626768	IdentifierDecl	* pf_definition = cmd_to_pf_definition ( lcType )		3626392	0					
ANR	3626769	IdentifierDeclType	const char *		3626392	0					
ANR	3626770	Identifier	pf_definition		3626392	1					
ANR	3626771	AssignmentExpression	* pf_definition = cmd_to_pf_definition ( lcType )		3626392	2		=			
ANR	3626772	Identifier	pf_definition		3626392	0					
ANR	3626773	CallExpression	cmd_to_pf_definition ( lcType )		3626392	1					
ANR	3626774	Callee	cmd_to_pf_definition		3626392	0					
ANR	3626775	Identifier	cmd_to_pf_definition		3626392	0					
ANR	3626776	ArgumentList	lcType		3626392	1					
ANR	3626777	Argument	lcType		3626392	0					
ANR	3626778	Identifier	lcType		3626392	0					
ANR	3626779	IfStatement	if ( pf_definition )		3626392	3					
ANR	3626780	Condition	pf_definition	3618:6:110297:110309	3626392	0	True				
ANR	3626781	Identifier	pf_definition		3626392	0					
ANR	3626782	CompoundStatement		57:21:1588:1588	3626392	1					
ANR	3626783	Statement	cb_printf	3619:3:110317:110325	3626392	0	True				
ANR	3626784	Statement	(	3619:13:110327:110327	3626392	1	True				
ANR	3626785	Statement	"""pf.%s @ 0x%08"""	3619:14:110328:110342	3626392	2	True				
ANR	3626786	Statement	PFMT64x	3619:29:110343:110349	3626392	3	True				
ANR	3626787	Statement	"""\\n"""	3619:36:110350:110353	3626392	4	True				
ANR	3626788	Statement	","	3619:40:110354:110354	3626392	5	True				
ANR	3626789	Statement	pf_definition	3619:42:110356:110368	3626392	6	True				
ANR	3626790	Statement	","	3619:55:110369:110369	3626392	7	True				
ANR	3626791	Statement	pvaddr	3619:57:110371:110376	3626392	8	True				
ANR	3626792	Statement	-	3619:64:110378:110378	3626392	9	True				
ANR	3626793	Statement	4	3619:66:110380:110380	3626392	10	True				
ANR	3626794	Statement	)	3619:67:110381:110381	3626392	11	True				
ANR	3626795	ExpressionStatement		3619:68:110382:110382	3626392	12	True				
ANR	3626796	Statement	cb_printf	3621:2:110390:110398	3626392	4	True				
ANR	3626797	Statement	(	3621:12:110400:110400	3626392	5	True				
ANR	3626798	Statement	"""0x%08"""	3621:13:110401:110407	3626392	6	True				
ANR	3626799	Statement	PFMT64x	3621:20:110408:110414	3626392	7	True				
ANR	3626800	Statement	"""  cmd %7d 0x%x %s\\n"""	3621:27:110415:110435	3626392	8	True				
ANR	3626801	Statement	","	3621:48:110436:110436	3626392	9	True				
ANR	3626802	Statement	pvaddr	3622:3:110441:110446	3626392	10	True				
ANR	3626803	Statement	-	3622:10:110448:110448	3626392	11	True				
ANR	3626804	Statement	4	3622:12:110450:110450	3626392	12	True				
ANR	3626805	Statement	","	3622:13:110451:110451	3626392	13	True				
ANR	3626806	Statement	n	3622:15:110453:110453	3626392	14	True				
ANR	3626807	Statement	","	3622:16:110454:110454	3626392	15	True				
ANR	3626808	Statement	lcType	3622:18:110456:110461	3626392	16	True				
ANR	3626809	Statement	","	3622:24:110462:110462	3626392	17	True				
ANR	3626810	Statement	cmd_to_string	3622:26:110464:110476	3626392	18	True				
ANR	3626811	Statement	(	3622:40:110478:110478	3626392	19	True				
ANR	3626812	Statement	lcType	3622:41:110479:110484	3626392	20	True				
ANR	3626813	Statement	)	3622:47:110485:110485	3626392	21	True				
ANR	3626814	Statement	)	3622:48:110486:110486	3626392	22	True				
ANR	3626815	ExpressionStatement		3622:49:110487:110487	3626392	23	True				
ANR	3626816	ExpressionStatement	READWORD ( )	3623:2:110491:110502	3626392	24	True				
ANR	3626817	CallExpression	READWORD ( )		3626392	0					
ANR	3626818	Callee	READWORD		3626392	0					
ANR	3626819	Identifier	READWORD		3626392	0					
ANR	3626820	ArgumentList			3626392	1					
ANR	3626821	IfStatement	if ( addr > length )		3626392	25					
ANR	3626822	Condition	addr > length	3624:6:110510:110522	3626392	0	True				
ANR	3626823	RelationalExpression	addr > length		3626392	0		>			
ANR	3626824	Identifier	addr		3626392	0					
ANR	3626825	Identifier	length		3626392	1					
ANR	3626826	CompoundStatement		63:21:1801:1801	3626392	1					
ANR	3626827	BreakStatement	break ;	3625:3:110530:110535	3626392	0	True				
ANR	3626828	IdentifierDeclStatement	int lcSize = word ;	3627:2:110543:110560	3626392	26	True				
ANR	3626829	IdentifierDecl	lcSize = word		3626392	0					
ANR	3626830	IdentifierDeclType	int		3626392	0					
ANR	3626831	Identifier	lcSize		3626392	1					
ANR	3626832	AssignmentExpression	lcSize = word		3626392	2		=			
ANR	3626833	Identifier	word		3626392	0					
ANR	3626834	Identifier	word		3626392	1					
ANR	3626835	ExpressionStatement	word &= 0xFFFFFF	3628:2:110564:110580	3626392	27	True				
ANR	3626836	AssignmentExpression	word &= 0xFFFFFF		3626392	0		&=			
ANR	3626837	Identifier	word		3626392	0					
ANR	3626838	PrimaryExpression	0xFFFFFF		3626392	1					
ANR	3626839	Statement	cb_printf	3629:2:110584:110592	3626392	28	True				
ANR	3626840	Statement	(	3629:12:110594:110594	3626392	29	True				
ANR	3626841	Statement	"""0x%08"""	3629:13:110595:110601	3626392	30	True				
ANR	3626842	Statement	PFMT64x	3629:20:110602:110608	3626392	31	True				
ANR	3626843	Statement	"""  cmdsize     %d\\n"""	3629:27:110609:110628	3626392	32	True				
ANR	3626844	Statement	","	3629:47:110629:110629	3626392	33	True				
ANR	3626845	Statement	pvaddr	3629:49:110631:110636	3626392	34	True				
ANR	3626846	Statement	-	3629:56:110638:110638	3626392	35	True				
ANR	3626847	Statement	4	3629:58:110640:110640	3626392	36	True				
ANR	3626848	Statement	","	3629:59:110641:110641	3626392	37	True				
ANR	3626849	Statement	word	3629:61:110643:110646	3626392	38	True				
ANR	3626850	Statement	)	3629:65:110647:110647	3626392	39	True				
ANR	3626851	ExpressionStatement		3629:66:110648:110648	3626392	40	True				
ANR	3626852	IfStatement	if ( lcSize < 1 )		3626392	41					
ANR	3626853	Condition	lcSize < 1	3630:6:110656:110665	3626392	0	True				
ANR	3626854	RelationalExpression	lcSize < 1		3626392	0		<			
ANR	3626855	Identifier	lcSize		3626392	0					
ANR	3626856	PrimaryExpression	1		3626392	1					
ANR	3626857	CompoundStatement		69:18:1944:1944	3626392	1					
ANR	3626858	ExpressionStatement	"eprintf ( ""Invalid size for a load command\\n"" )"	3631:3:110673:110718	3626392	0	True				
ANR	3626859	CallExpression	"eprintf ( ""Invalid size for a load command\\n"" )"		3626392	0					
ANR	3626860	Callee	eprintf		3626392	0					
ANR	3626861	Identifier	eprintf		3626392	0					
ANR	3626862	ArgumentList	"""Invalid size for a load command\\n"""		3626392	1					
ANR	3626863	Argument	"""Invalid size for a load command\\n"""		3626392	0					
ANR	3626864	PrimaryExpression	"""Invalid size for a load command\\n"""		3626392	0					
ANR	3626865	BreakStatement	break ;	3632:3:110723:110728	3626392	1	True				
ANR	3626866	SwitchStatement	switch ( lcType )		3626392	42					
ANR	3626867	Condition	lcType	3634:10:110744:110749	3626392	0	True				
ANR	3626868	Identifier	lcType		3626392	0					
ANR	3626869	CompoundStatement		73:18:2028:2028	3626392	1					
ANR	3626870	Label	case LC_BUILD_VERSION :	3635:2:110756:110777	3626392	0	True				
ANR	3626871	Identifier	LC_BUILD_VERSION		3626392	0					
ANR	3626872	CompoundStatement		86:3:2675:2688	3626392	1					
ANR	3626873	Statement	cb_printf	3636:3:110784:110792	3626392	0	True				
ANR	3626874	Statement	(	3636:13:110794:110794	3626392	1	True				
ANR	3626875	Statement	"""0x%08"""	3636:14:110795:110801	3626392	2	True				
ANR	3626876	Statement	PFMT64x	3636:21:110802:110808	3626392	3	True				
ANR	3626877	Statement	"""  platform    %s\\n"""	3636:28:110809:110828	3626392	4	True				
ANR	3626878	Statement	","	3636:48:110829:110829	3626392	5	True				
ANR	3626879	Statement	pvaddr	3637:4:110835:110840	3626392	6	True				
ANR	3626880	Statement	","	3637:10:110841:110841	3626392	7	True				
ANR	3626881	Statement	build_version_platform_to_string	3637:12:110843:110874	3626392	8	True				
ANR	3626882	Statement	(	3637:45:110876:110876	3626392	9	True				
ANR	3626883	Statement	r_buf_read_le32_at	3637:46:110877:110894	3626392	10	True				
ANR	3626884	Statement	(	3637:65:110896:110896	3626392	11	True				
ANR	3626885	Statement	buf	3637:66:110897:110899	3626392	12	True				
ANR	3626886	Statement	","	3637:69:110900:110900	3626392	13	True				
ANR	3626887	Statement	addr	3637:71:110902:110905	3626392	14	True				
ANR	3626888	Statement	)	3637:75:110906:110906	3626392	15	True				
ANR	3626889	Statement	)	3637:76:110907:110907	3626392	16	True				
ANR	3626890	Statement	)	3637:77:110908:110908	3626392	17	True				
ANR	3626891	ExpressionStatement		3637:78:110909:110909	3626392	18	True				
ANR	3626892	Statement	cb_printf	3638:3:110914:110922	3626392	19	True				
ANR	3626893	Statement	(	3638:13:110924:110924	3626392	20	True				
ANR	3626894	Statement	"""0x%08"""	3638:14:110925:110931	3626392	21	True				
ANR	3626895	Statement	PFMT64x	3638:21:110932:110938	3626392	22	True				
ANR	3626896	Statement	"""  minos       %d.%d.%d\\n"""	3638:28:110939:110964	3626392	23	True				
ANR	3626897	Statement	","	3638:54:110965:110965	3626392	24	True				
ANR	3626898	Statement	pvaddr	3639:4:110971:110976	3626392	25	True				
ANR	3626899	Statement	+	3639:11:110978:110978	3626392	26	True				
ANR	3626900	Statement	4	3639:13:110980:110980	3626392	27	True				
ANR	3626901	Statement	","	3639:14:110981:110981	3626392	28	True				
ANR	3626902	Statement	r_buf_read_le16_at	3639:16:110983:111000	3626392	29	True				
ANR	3626903	Statement	(	3639:35:111002:111002	3626392	30	True				
ANR	3626904	Statement	buf	3639:36:111003:111005	3626392	31	True				
ANR	3626905	Statement	","	3639:39:111006:111006	3626392	32	True				
ANR	3626906	Statement	addr	3639:41:111008:111011	3626392	33	True				
ANR	3626907	Statement	+	3639:46:111013:111013	3626392	34	True				
ANR	3626908	Statement	6	3639:48:111015:111015	3626392	35	True				
ANR	3626909	Statement	)	3639:49:111016:111016	3626392	36	True				
ANR	3626910	Statement	","	3639:50:111017:111017	3626392	37	True				
ANR	3626911	Statement	r_buf_read8_at	3639:52:111019:111032	3626392	38	True				
ANR	3626912	Statement	(	3639:67:111034:111034	3626392	39	True				
ANR	3626913	Statement	buf	3639:68:111035:111037	3626392	40	True				
ANR	3626914	Statement	","	3639:71:111038:111038	3626392	41	True				
ANR	3626915	Statement	addr	3639:73:111040:111043	3626392	42	True				
ANR	3626916	Statement	+	3639:78:111045:111045	3626392	43	True				
ANR	3626917	Statement	5	3639:80:111047:111047	3626392	44	True				
ANR	3626918	Statement	)	3639:81:111048:111048	3626392	45	True				
ANR	3626919	Statement	","	3639:82:111049:111049	3626392	46	True				
ANR	3626920	Statement	r_buf_read8_at	3640:4:111055:111068	3626392	47	True				
ANR	3626921	Statement	(	3640:19:111070:111070	3626392	48	True				
ANR	3626922	Statement	buf	3640:20:111071:111073	3626392	49	True				
ANR	3626923	Statement	","	3640:23:111074:111074	3626392	50	True				
ANR	3626924	Statement	addr	3640:25:111076:111079	3626392	51	True				
ANR	3626925	Statement	+	3640:30:111081:111081	3626392	52	True				
ANR	3626926	Statement	4	3640:32:111083:111083	3626392	53	True				
ANR	3626927	Statement	)	3640:33:111084:111084	3626392	54	True				
ANR	3626928	Statement	)	3640:34:111085:111085	3626392	55	True				
ANR	3626929	ExpressionStatement		3640:35:111086:111086	3626392	56	True				
ANR	3626930	Statement	cb_printf	3641:3:111091:111099	3626392	57	True				
ANR	3626931	Statement	(	3641:13:111101:111101	3626392	58	True				
ANR	3626932	Statement	"""0x%08"""	3641:14:111102:111108	3626392	59	True				
ANR	3626933	Statement	PFMT64x	3641:21:111109:111115	3626392	60	True				
ANR	3626934	Statement	"""  sdk         %d.%d.%d\\n"""	3641:28:111116:111141	3626392	61	True				
ANR	3626935	Statement	","	3641:54:111142:111142	3626392	62	True				
ANR	3626936	Statement	pvaddr	3642:4:111148:111153	3626392	63	True				
ANR	3626937	Statement	+	3642:11:111155:111155	3626392	64	True				
ANR	3626938	Statement	8	3642:13:111157:111157	3626392	65	True				
ANR	3626939	Statement	","	3642:14:111158:111158	3626392	66	True				
ANR	3626940	Statement	r_buf_read_le16_at	3642:16:111160:111177	3626392	67	True				
ANR	3626941	Statement	(	3642:35:111179:111179	3626392	68	True				
ANR	3626942	Statement	buf	3642:36:111180:111182	3626392	69	True				
ANR	3626943	Statement	","	3642:39:111183:111183	3626392	70	True				
ANR	3626944	Statement	addr	3642:41:111185:111188	3626392	71	True				
ANR	3626945	Statement	+	3642:46:111190:111190	3626392	72	True				
ANR	3626946	Statement	10	3642:48:111192:111193	3626392	73	True				
ANR	3626947	Statement	)	3642:50:111194:111194	3626392	74	True				
ANR	3626948	Statement	","	3642:51:111195:111195	3626392	75	True				
ANR	3626949	Statement	r_buf_read8_at	3642:53:111197:111210	3626392	76	True				
ANR	3626950	Statement	(	3642:68:111212:111212	3626392	77	True				
ANR	3626951	Statement	buf	3642:69:111213:111215	3626392	78	True				
ANR	3626952	Statement	","	3642:72:111216:111216	3626392	79	True				
ANR	3626953	Statement	addr	3642:74:111218:111221	3626392	80	True				
ANR	3626954	Statement	+	3642:79:111223:111223	3626392	81	True				
ANR	3626955	Statement	9	3642:81:111225:111225	3626392	82	True				
ANR	3626956	Statement	)	3642:82:111226:111226	3626392	83	True				
ANR	3626957	Statement	","	3642:83:111227:111227	3626392	84	True				
ANR	3626958	Statement	r_buf_read8_at	3643:4:111233:111246	3626392	85	True				
ANR	3626959	Statement	(	3643:19:111248:111248	3626392	86	True				
ANR	3626960	Statement	buf	3643:20:111249:111251	3626392	87	True				
ANR	3626961	Statement	","	3643:23:111252:111252	3626392	88	True				
ANR	3626962	Statement	addr	3643:25:111254:111257	3626392	89	True				
ANR	3626963	Statement	+	3643:30:111259:111259	3626392	90	True				
ANR	3626964	Statement	8	3643:32:111261:111261	3626392	91	True				
ANR	3626965	Statement	)	3643:33:111262:111262	3626392	92	True				
ANR	3626966	Statement	)	3643:34:111263:111263	3626392	93	True				
ANR	3626967	ExpressionStatement		3643:35:111264:111264	3626392	94	True				
ANR	3626968	IdentifierDeclStatement	"ut32 ntools = r_buf_read_le32_at ( buf , addr + 12 ) ;"	3644:3:111269:111318	3626392	95	True				
ANR	3626969	IdentifierDecl	"ntools = r_buf_read_le32_at ( buf , addr + 12 )"		3626392	0					
ANR	3626970	IdentifierDeclType	ut32		3626392	0					
ANR	3626971	Identifier	ntools		3626392	1					
ANR	3626972	AssignmentExpression	"ntools = r_buf_read_le32_at ( buf , addr + 12 )"		3626392	2		=			
ANR	3626973	Identifier	ntools		3626392	0					
ANR	3626974	CallExpression	"r_buf_read_le32_at ( buf , addr + 12 )"		3626392	1					
ANR	3626975	Callee	r_buf_read_le32_at		3626392	0					
ANR	3626976	Identifier	r_buf_read_le32_at		3626392	0					
ANR	3626977	ArgumentList	buf		3626392	1					
ANR	3626978	Argument	buf		3626392	0					
ANR	3626979	Identifier	buf		3626392	0					
ANR	3626980	Argument	addr + 12		3626392	1					
ANR	3626981	AdditiveExpression	addr + 12		3626392	0		+			
ANR	3626982	Identifier	addr		3626392	0					
ANR	3626983	PrimaryExpression	12		3626392	1					
ANR	3626984	Statement	cb_printf	3645:3:111323:111331	3626392	96	True				
ANR	3626985	Statement	(	3645:13:111333:111333	3626392	97	True				
ANR	3626986	Statement	"""0x%08"""	3645:14:111334:111340	3626392	98	True				
ANR	3626987	Statement	PFMT64x	3645:21:111341:111347	3626392	99	True				
ANR	3626988	Statement	"""  ntools      %d\\n"""	3645:28:111348:111367	3626392	100	True				
ANR	3626989	Statement	","	3645:48:111368:111368	3626392	101	True				
ANR	3626990	Statement	pvaddr	3646:4:111374:111379	3626392	102	True				
ANR	3626991	Statement	+	3646:11:111381:111381	3626392	103	True				
ANR	3626992	Statement	12	3646:13:111383:111384	3626392	104	True				
ANR	3626993	Statement	","	3646:15:111385:111385	3626392	105	True				
ANR	3626994	Statement	ntools	3646:17:111387:111392	3626392	106	True				
ANR	3626995	Statement	)	3646:23:111393:111393	3626392	107	True				
ANR	3626996	ExpressionStatement		3646:24:111394:111394	3626392	108	True				
ANR	3626997	IdentifierDeclStatement	ut64 off = 16 ;	3647:3:111399:111412	3626392	109	True				
ANR	3626998	IdentifierDecl	off = 16		3626392	0					
ANR	3626999	IdentifierDeclType	ut64		3626392	0					
ANR	3627000	Identifier	off		3626392	1					
ANR	3627001	AssignmentExpression	off = 16		3626392	2		=			
ANR	3627002	Identifier	off		3626392	0					
ANR	3627003	PrimaryExpression	16		3626392	1					
ANR	3627004	WhileStatement	while ( off < ( lcSize - 8 ) && ntools -- )		3626392	110					
ANR	3627005	Condition	off < ( lcSize - 8 ) && ntools --	3648:10:111424:111453	3626392	0	True				
ANR	3627006	AndExpression	off < ( lcSize - 8 ) && ntools --		3626392	0		&&			
ANR	3627007	RelationalExpression	off < ( lcSize - 8 )		3626392	0		<			
ANR	3627008	Identifier	off		3626392	0					
ANR	3627009	AdditiveExpression	lcSize - 8		3626392	1		-			
ANR	3627010	Identifier	lcSize		3626392	0					
ANR	3627011	PrimaryExpression	8		3626392	1					
ANR	3627012	PostIncDecOperationExpression	ntools --		3626392	1					
ANR	3627013	Identifier	ntools		3626392	0					
ANR	3627014	IncDec	--		3626392	1					
ANR	3627015	CompoundStatement		87:42:2732:2732	3626392	1					
ANR	3627016	Statement	cb_printf	3649:4:111462:111470	3626392	0	True				
ANR	3627017	Statement	(	3649:14:111472:111472	3626392	1	True				
ANR	3627018	Statement	"""pf.mach0_build_version_tool @ 0x%08"""	3649:15:111473:111509	3626392	2	True				
ANR	3627019	Statement	PFMT64x	3649:52:111510:111516	3626392	3	True				
ANR	3627020	Statement	"""\\n"""	3649:59:111517:111520	3626392	4	True				
ANR	3627021	Statement	","	3649:63:111521:111521	3626392	5	True				
ANR	3627022	Statement	pvaddr	3649:65:111523:111528	3626392	6	True				
ANR	3627023	Statement	+	3649:72:111530:111530	3626392	7	True				
ANR	3627024	Statement	off	3649:74:111532:111534	3626392	8	True				
ANR	3627025	Statement	)	3649:77:111535:111535	3626392	9	True				
ANR	3627026	ExpressionStatement		3649:78:111536:111536	3626392	10	True				
ANR	3627027	Statement	cb_printf	3650:4:111542:111550	3626392	11	True				
ANR	3627028	Statement	(	3650:14:111552:111552	3626392	12	True				
ANR	3627029	Statement	"""0x%08"""	3650:15:111553:111559	3626392	13	True				
ANR	3627030	Statement	PFMT64x	3650:22:111560:111566	3626392	14	True				
ANR	3627031	Statement	"""  tool        %s\\n"""	3650:29:111567:111586	3626392	15	True				
ANR	3627032	Statement	","	3650:49:111587:111587	3626392	16	True				
ANR	3627033	Statement	pvaddr	3651:5:111594:111599	3626392	17	True				
ANR	3627034	Statement	+	3651:12:111601:111601	3626392	18	True				
ANR	3627035	Statement	off	3651:14:111603:111605	3626392	19	True				
ANR	3627036	Statement	","	3651:17:111606:111606	3626392	20	True				
ANR	3627037	Statement	build_version_tool_to_string	3651:19:111608:111635	3626392	21	True				
ANR	3627038	Statement	(	3651:48:111637:111637	3626392	22	True				
ANR	3627039	Statement	r_buf_read_le32_at	3651:49:111638:111655	3626392	23	True				
ANR	3627040	Statement	(	3651:68:111657:111657	3626392	24	True				
ANR	3627041	Statement	buf	3651:69:111658:111660	3626392	25	True				
ANR	3627042	Statement	","	3651:72:111661:111661	3626392	26	True				
ANR	3627043	Statement	addr	3651:74:111663:111666	3626392	27	True				
ANR	3627044	Statement	+	3651:79:111668:111668	3626392	28	True				
ANR	3627045	Statement	off	3651:81:111670:111672	3626392	29	True				
ANR	3627046	Statement	)	3651:84:111673:111673	3626392	30	True				
ANR	3627047	Statement	)	3651:85:111674:111674	3626392	31	True				
ANR	3627048	Statement	)	3651:86:111675:111675	3626392	32	True				
ANR	3627049	ExpressionStatement		3651:87:111676:111676	3626392	33	True				
ANR	3627050	ExpressionStatement	off += 4	3652:4:111682:111690	3626392	34	True				
ANR	3627051	AssignmentExpression	off += 4		3626392	0		+=			
ANR	3627052	Identifier	off		3626392	0					
ANR	3627053	PrimaryExpression	4		3626392	1					
ANR	3627054	IfStatement	if ( off >= ( lcSize - 8 ) )		3626392	35					
ANR	3627055	Condition	off >= ( lcSize - 8 )	3653:8:111700:111718	3626392	0	True				
ANR	3627056	RelationalExpression	off >= ( lcSize - 8 )		3626392	0		>=			
ANR	3627057	Identifier	off		3626392	0					
ANR	3627058	AdditiveExpression	lcSize - 8		3626392	1		-			
ANR	3627059	Identifier	lcSize		3626392	0					
ANR	3627060	PrimaryExpression	8		3626392	1					
ANR	3627061	CompoundStatement		92:29:2997:2997	3626392	1					
ANR	3627062	BreakStatement	break ;	3654:5:111728:111733	3626392	0	True				
ANR	3627063	Statement	cb_printf	3656:4:111745:111753	3626392	36	True				
ANR	3627064	Statement	(	3656:14:111755:111755	3626392	37	True				
ANR	3627065	Statement	"""0x%08"""	3656:15:111756:111762	3626392	38	True				
ANR	3627066	Statement	PFMT64x	3656:22:111763:111769	3626392	39	True				
ANR	3627067	Statement	"""  version     %d.%d.%d\\n"""	3656:29:111770:111795	3626392	40	True				
ANR	3627068	Statement	","	3656:55:111796:111796	3626392	41	True				
ANR	3627069	Statement	pvaddr	3657:5:111803:111808	3626392	42	True				
ANR	3627070	Statement	+	3657:12:111810:111810	3626392	43	True				
ANR	3627071	Statement	off	3657:14:111812:111814	3626392	44	True				
ANR	3627072	Statement	","	3657:17:111815:111815	3626392	45	True				
ANR	3627073	Statement	r_buf_read_le16_at	3657:19:111817:111834	3626392	46	True				
ANR	3627074	Statement	(	3657:38:111836:111836	3626392	47	True				
ANR	3627075	Statement	buf	3657:39:111837:111839	3626392	48	True				
ANR	3627076	Statement	","	3657:42:111840:111840	3626392	49	True				
ANR	3627077	Statement	addr	3657:44:111842:111845	3626392	50	True				
ANR	3627078	Statement	+	3657:49:111847:111847	3626392	51	True				
ANR	3627079	Statement	off	3657:51:111849:111851	3626392	52	True				
ANR	3627080	Statement	+	3657:55:111853:111853	3626392	53	True				
ANR	3627081	Statement	2	3657:57:111855:111855	3626392	54	True				
ANR	3627082	Statement	)	3657:58:111856:111856	3626392	55	True				
ANR	3627083	Statement	","	3657:59:111857:111857	3626392	56	True				
ANR	3627084	Statement	r_buf_read8_at	3657:61:111859:111872	3626392	57	True				
ANR	3627085	Statement	(	3657:76:111874:111874	3626392	58	True				
ANR	3627086	Statement	buf	3657:77:111875:111877	3626392	59	True				
ANR	3627087	Statement	","	3657:80:111878:111878	3626392	60	True				
ANR	3627088	Statement	addr	3657:82:111880:111883	3626392	61	True				
ANR	3627089	Statement	+	3657:87:111885:111885	3626392	62	True				
ANR	3627090	Statement	off	3657:89:111887:111889	3626392	63	True				
ANR	3627091	Statement	+	3657:93:111891:111891	3626392	64	True				
ANR	3627092	Statement	1	3657:95:111893:111893	3626392	65	True				
ANR	3627093	Statement	)	3657:96:111894:111894	3626392	66	True				
ANR	3627094	Statement	","	3657:97:111895:111895	3626392	67	True				
ANR	3627095	Statement	r_buf_read8_at	3658:5:111902:111915	3626392	68	True				
ANR	3627096	Statement	(	3658:20:111917:111917	3626392	69	True				
ANR	3627097	Statement	buf	3658:21:111918:111920	3626392	70	True				
ANR	3627098	Statement	","	3658:24:111921:111921	3626392	71	True				
ANR	3627099	Statement	addr	3658:26:111923:111926	3626392	72	True				
ANR	3627100	Statement	+	3658:31:111928:111928	3626392	73	True				
ANR	3627101	Statement	off	3658:33:111930:111932	3626392	74	True				
ANR	3627102	Statement	)	3658:36:111933:111933	3626392	75	True				
ANR	3627103	Statement	)	3658:37:111934:111934	3626392	76	True				
ANR	3627104	ExpressionStatement		3658:38:111935:111935	3626392	77	True				
ANR	3627105	ExpressionStatement	off += 4	3659:4:111941:111949	3626392	78	True				
ANR	3627106	AssignmentExpression	off += 4		3626392	0		+=			
ANR	3627107	Identifier	off		3626392	0					
ANR	3627108	PrimaryExpression	4		3626392	1					
ANR	3627109	BreakStatement	break ;	3661:3:111959:111964	3626392	111	True				
ANR	3627110	Label	case LC_MAIN :	3663:2:111972:111984	3626392	2	True				
ANR	3627111	Identifier	LC_MAIN		3626392	0					
ANR	3627112	CompoundStatement		109:4:3500:3540	3626392	3					
ANR	3627113	IdentifierDeclStatement	ut8 data [ 64 ] ;	3665:4:111995:112007	3626392	0	True				
ANR	3627114	IdentifierDecl	data [ 64 ]		3626392	0					
ANR	3627115	IdentifierDeclType	ut8 [ 64 ]		3626392	0					
ANR	3627116	Identifier	data		3626392	1					
ANR	3627117	PrimaryExpression	64		3626392	2					
ANR	3627118	ExpressionStatement	"r_buf_read_at ( buf , addr , data , sizeof ( data ) )"	3666:4:112013:112059	3626392	1	True				
ANR	3627119	CallExpression	"r_buf_read_at ( buf , addr , data , sizeof ( data ) )"		3626392	0					
ANR	3627120	Callee	r_buf_read_at		3626392	0					
ANR	3627121	Identifier	r_buf_read_at		3626392	0					
ANR	3627122	ArgumentList	buf		3626392	1					
ANR	3627123	Argument	buf		3626392	0					
ANR	3627124	Identifier	buf		3626392	0					
ANR	3627125	Argument	addr		3626392	1					
ANR	3627126	Identifier	addr		3626392	0					
ANR	3627127	Argument	data		3626392	2					
ANR	3627128	Identifier	data		3626392	0					
ANR	3627129	Argument	sizeof ( data )		3626392	3					
ANR	3627130	SizeofExpression	sizeof ( data )		3626392	0					
ANR	3627131	Sizeof	sizeof		3626392	0					
ANR	3627132	SizeofOperand	data		3626392	1					
ANR	3627133	IdentifierDeclStatement	"ut64 ep = r_read_ble64 ( & data , false ) ;"	3668:4:112083:112120	3626392	2	True				
ANR	3627134	IdentifierDecl	"ep = r_read_ble64 ( & data , false )"		3626392	0					
ANR	3627135	IdentifierDeclType	ut64		3626392	0					
ANR	3627136	Identifier	ep		3626392	1					
ANR	3627137	AssignmentExpression	"ep = r_read_ble64 ( & data , false )"		3626392	2		=			
ANR	3627138	Identifier	ep		3626392	0					
ANR	3627139	CallExpression	"r_read_ble64 ( & data , false )"		3626392	1					
ANR	3627140	Callee	r_read_ble64		3626392	0					
ANR	3627141	Identifier	r_read_ble64		3626392	0					
ANR	3627142	ArgumentList	& data		3626392	1					
ANR	3627143	Argument	& data		3626392	0					
ANR	3627144	UnaryOperationExpression	& data		3626392	0					
ANR	3627145	UnaryOperator	&		3626392	0					
ANR	3627146	Identifier	data		3626392	1					
ANR	3627147	Argument	false		3626392	1					
ANR	3627148	Identifier	false		3626392	0					
ANR	3627149	Statement	cb_printf	3669:4:112148:112156	3626392	3	True				
ANR	3627150	Statement	(	3669:14:112158:112158	3626392	4	True				
ANR	3627151	Statement	"""0x%08"""	3669:15:112159:112165	3626392	5	True				
ANR	3627152	Statement	PFMT64x	3669:22:112166:112172	3626392	6	True				
ANR	3627153	Statement	"""  entry0      0x%"""	3669:29:112173:112191	3626392	7	True				
ANR	3627154	Statement	PFMT64x	3669:49:112193:112199	3626392	8	True				
ANR	3627155	Statement	"""\\n"""	3669:57:112201:112204	3626392	9	True				
ANR	3627156	Statement	","	3669:61:112205:112205	3626392	10	True				
ANR	3627157	Statement	pvaddr	3669:63:112207:112212	3626392	11	True				
ANR	3627158	Statement	","	3669:69:112213:112213	3626392	12	True				
ANR	3627159	Statement	ep	3669:71:112215:112216	3626392	13	True				
ANR	3627160	Statement	)	3669:73:112217:112217	3626392	14	True				
ANR	3627161	ExpressionStatement		3669:74:112218:112218	3626392	15	True				
ANR	3627162	IdentifierDeclStatement	"ut64 ss = r_read_ble64 ( & data [ 8 ] , false ) ;"	3670:4:112224:112264	3626392	16	True				
ANR	3627163	IdentifierDecl	"ss = r_read_ble64 ( & data [ 8 ] , false )"		3626392	0					
ANR	3627164	IdentifierDeclType	ut64		3626392	0					
ANR	3627165	Identifier	ss		3626392	1					
ANR	3627166	AssignmentExpression	"ss = r_read_ble64 ( & data [ 8 ] , false )"		3626392	2		=			
ANR	3627167	Identifier	ss		3626392	0					
ANR	3627168	CallExpression	"r_read_ble64 ( & data [ 8 ] , false )"		3626392	1					
ANR	3627169	Callee	r_read_ble64		3626392	0					
ANR	3627170	Identifier	r_read_ble64		3626392	0					
ANR	3627171	ArgumentList	& data [ 8 ]		3626392	1					
ANR	3627172	Argument	& data [ 8 ]		3626392	0					
ANR	3627173	UnaryOperationExpression	& data [ 8 ]		3626392	0					
ANR	3627174	UnaryOperator	&		3626392	0					
ANR	3627175	ArrayIndexing	data [ 8 ]		3626392	1					
ANR	3627176	Identifier	data		3626392	0					
ANR	3627177	PrimaryExpression	8		3626392	1					
ANR	3627178	Argument	false		3626392	1					
ANR	3627179	Identifier	false		3626392	0					
ANR	3627180	Statement	cb_printf	3671:4:112292:112300	3626392	17	True				
ANR	3627181	Statement	(	3671:14:112302:112302	3626392	18	True				
ANR	3627182	Statement	"""0x%08"""	3671:15:112303:112309	3626392	19	True				
ANR	3627183	Statement	PFMT64x	3671:22:112310:112316	3626392	20	True				
ANR	3627184	Statement	"""  stacksize   0x%"""	3671:29:112317:112335	3626392	21	True				
ANR	3627185	Statement	PFMT64x	3671:49:112337:112343	3626392	22	True				
ANR	3627186	Statement	"""\\n"""	3671:57:112345:112348	3626392	23	True				
ANR	3627187	Statement	","	3671:61:112349:112349	3626392	24	True				
ANR	3627188	Statement	pvaddr	3671:63:112351:112356	3626392	25	True				
ANR	3627189	Statement	+	3671:70:112358:112358	3626392	26	True				
ANR	3627190	Statement	8	3671:73:112361:112361	3626392	27	True				
ANR	3627191	Statement	","	3671:74:112362:112362	3626392	28	True				
ANR	3627192	Statement	ss	3671:76:112364:112365	3626392	29	True				
ANR	3627193	Statement	)	3671:78:112366:112366	3626392	30	True				
ANR	3627194	ExpressionStatement		3671:79:112367:112367	3626392	31	True				
ANR	3627195	BreakStatement	break ;	3679:3:112692:112697	3626392	4	True				
ANR	3627196	Label	case LC_SYMTAB :	3680:2:112701:112715	3626392	5	True				
ANR	3627197	Identifier	LC_SYMTAB		3626392	0					
ANR	3627198	CompoundStatement		122:3:4007:4051	3626392	6					
ANR	3627199	IdentifierDeclStatement	"char * id = r_buf_get_string ( buf , addr + 20 ) ;"	3683:3:112731:112775	3626392	0	True				
ANR	3627200	IdentifierDecl	"* id = r_buf_get_string ( buf , addr + 20 )"		3626392	0					
ANR	3627201	IdentifierDeclType	char *		3626392	0					
ANR	3627202	Identifier	id		3626392	1					
ANR	3627203	AssignmentExpression	"* id = r_buf_get_string ( buf , addr + 20 )"		3626392	2		=			
ANR	3627204	Identifier	id		3626392	0					
ANR	3627205	CallExpression	"r_buf_get_string ( buf , addr + 20 )"		3626392	1					
ANR	3627206	Callee	r_buf_get_string		3626392	0					
ANR	3627207	Identifier	r_buf_get_string		3626392	0					
ANR	3627208	ArgumentList	buf		3626392	1					
ANR	3627209	Argument	buf		3626392	0					
ANR	3627210	Identifier	buf		3626392	0					
ANR	3627211	Argument	addr + 20		3626392	1					
ANR	3627212	AdditiveExpression	addr + 20		3626392	0		+			
ANR	3627213	Identifier	addr		3626392	0					
ANR	3627214	PrimaryExpression	20		3626392	1					
ANR	3627215	Statement	cb_printf	3684:3:112780:112788	3626392	1	True				
ANR	3627216	Statement	(	3684:13:112790:112790	3626392	2	True				
ANR	3627217	Statement	"""0x%08"""	3684:14:112791:112797	3626392	3	True				
ANR	3627218	Statement	PFMT64x	3684:21:112798:112804	3626392	4	True				
ANR	3627219	Statement	"""  id         0x%x\\n"""	3684:28:112805:112825	3626392	5	True				
ANR	3627220	Statement	","	3684:49:112826:112826	3626392	6	True				
ANR	3627221	Statement	addr	3684:51:112828:112831	3626392	7	True				
ANR	3627222	Statement	+	3684:56:112833:112833	3626392	8	True				
ANR	3627223	Statement	20	3684:58:112835:112836	3626392	9	True				
ANR	3627224	Statement	","	3684:60:112837:112837	3626392	10	True				
ANR	3627225	Statement	id	3684:62:112839:112840	3626392	11	True				
ANR	3627226	Statement	?	3684:64:112841:112841	3626392	12	True				
ANR	3627227	Label	id :	3684:66:112843:112845	3626392	13	True				
ANR	3627228	Identifier	id		3626392	0					
ANR	3627229	Statement	""""""	3684:70:112847:112848	3626392	14	True				
ANR	3627230	Statement	)	3684:72:112849:112849	3626392	15	True				
ANR	3627231	ExpressionStatement		3684:73:112850:112850	3626392	16	True				
ANR	3627232	Statement	cb_printf	3685:3:112855:112863	3626392	17	True				
ANR	3627233	Statement	(	3685:13:112865:112865	3626392	18	True				
ANR	3627234	Statement	"""0x%08"""	3685:14:112866:112872	3626392	19	True				
ANR	3627235	Statement	PFMT64x	3685:21:112873:112879	3626392	20	True				
ANR	3627236	Statement	"""  symooff    0x%x\\n"""	3685:28:112880:112900	3626392	21	True				
ANR	3627237	Statement	","	3685:49:112901:112901	3626392	22	True				
ANR	3627238	Statement	addr	3685:51:112903:112906	3626392	23	True				
ANR	3627239	Statement	+	3685:56:112908:112908	3626392	24	True				
ANR	3627240	Statement	20	3685:58:112910:112911	3626392	25	True				
ANR	3627241	Statement	","	3685:60:112912:112912	3626392	26	True				
ANR	3627242	Statement	id	3685:62:112914:112915	3626392	27	True				
ANR	3627243	Statement	?	3685:64:112916:112916	3626392	28	True				
ANR	3627244	Label	id :	3685:66:112918:112920	3626392	29	True				
ANR	3627245	Identifier	id		3626392	0					
ANR	3627246	Statement	""""""	3685:70:112922:112923	3626392	30	True				
ANR	3627247	Statement	)	3685:72:112924:112924	3626392	31	True				
ANR	3627248	ExpressionStatement		3685:73:112925:112925	3626392	32	True				
ANR	3627249	Statement	cb_printf	3686:3:112930:112938	3626392	33	True				
ANR	3627250	Statement	(	3686:13:112940:112940	3626392	34	True				
ANR	3627251	Statement	"""0x%08"""	3686:14:112941:112947	3626392	35	True				
ANR	3627252	Statement	PFMT64x	3686:21:112948:112954	3626392	36	True				
ANR	3627253	Statement	"""  nsyms      %d\\n"""	3686:28:112955:112973	3626392	37	True				
ANR	3627254	Statement	","	3686:47:112974:112974	3626392	38	True				
ANR	3627255	Statement	addr	3686:49:112976:112979	3626392	39	True				
ANR	3627256	Statement	+	3686:54:112981:112981	3626392	40	True				
ANR	3627257	Statement	20	3686:56:112983:112984	3626392	41	True				
ANR	3627258	Statement	","	3686:58:112985:112985	3626392	42	True				
ANR	3627259	Statement	id	3686:60:112987:112988	3626392	43	True				
ANR	3627260	Statement	?	3686:62:112989:112989	3626392	44	True				
ANR	3627261	Label	id :	3686:64:112991:112993	3626392	45	True				
ANR	3627262	Identifier	id		3626392	0					
ANR	3627263	Statement	""""""	3686:68:112995:112996	3626392	46	True				
ANR	3627264	Statement	)	3686:70:112997:112997	3626392	47	True				
ANR	3627265	ExpressionStatement		3686:71:112998:112998	3626392	48	True				
ANR	3627266	Statement	cb_printf	3687:3:113003:113011	3626392	49	True				
ANR	3627267	Statement	(	3687:13:113013:113013	3626392	50	True				
ANR	3627268	Statement	"""0x%08"""	3687:14:113014:113020	3626392	51	True				
ANR	3627269	Statement	PFMT64x	3687:21:113021:113027	3626392	52	True				
ANR	3627270	Statement	"""  stroff     0x%x\\n"""	3687:28:113028:113048	3626392	53	True				
ANR	3627271	Statement	","	3687:49:113049:113049	3626392	54	True				
ANR	3627272	Statement	addr	3687:51:113051:113054	3626392	55	True				
ANR	3627273	Statement	+	3687:56:113056:113056	3626392	56	True				
ANR	3627274	Statement	20	3687:58:113058:113059	3626392	57	True				
ANR	3627275	Statement	","	3687:60:113060:113060	3626392	58	True				
ANR	3627276	Statement	id	3687:62:113062:113063	3626392	59	True				
ANR	3627277	Statement	?	3687:64:113064:113064	3626392	60	True				
ANR	3627278	Label	id :	3687:66:113066:113068	3626392	61	True				
ANR	3627279	Identifier	id		3626392	0					
ANR	3627280	Statement	""""""	3687:70:113070:113071	3626392	62	True				
ANR	3627281	Statement	)	3687:72:113072:113072	3626392	63	True				
ANR	3627282	ExpressionStatement		3687:73:113073:113073	3626392	64	True				
ANR	3627283	Statement	cb_printf	3688:3:113078:113086	3626392	65	True				
ANR	3627284	Statement	(	3688:13:113088:113088	3626392	66	True				
ANR	3627285	Statement	"""0x%08"""	3688:14:113089:113095	3626392	67	True				
ANR	3627286	Statement	PFMT64x	3688:21:113096:113102	3626392	68	True				
ANR	3627287	Statement	"""  strsize    0x%x\\n"""	3688:28:113103:113123	3626392	69	True				
ANR	3627288	Statement	","	3688:49:113124:113124	3626392	70	True				
ANR	3627289	Statement	addr	3688:51:113126:113129	3626392	71	True				
ANR	3627290	Statement	+	3688:56:113131:113131	3626392	72	True				
ANR	3627291	Statement	20	3688:58:113133:113134	3626392	73	True				
ANR	3627292	Statement	","	3688:60:113135:113135	3626392	74	True				
ANR	3627293	Statement	id	3688:62:113137:113138	3626392	75	True				
ANR	3627294	Statement	?	3688:64:113139:113139	3626392	76	True				
ANR	3627295	Label	id :	3688:66:113141:113143	3626392	77	True				
ANR	3627296	Identifier	id		3626392	0					
ANR	3627297	Statement	""""""	3688:70:113145:113146	3626392	78	True				
ANR	3627298	Statement	)	3688:72:113147:113147	3626392	79	True				
ANR	3627299	ExpressionStatement		3688:73:113148:113148	3626392	80	True				
ANR	3627300	ExpressionStatement	free ( id )	3689:3:113153:113162	3626392	81	True				
ANR	3627301	CallExpression	free ( id )		3626392	0					
ANR	3627302	Callee	free		3626392	0					
ANR	3627303	Identifier	free		3626392	0					
ANR	3627304	ArgumentList	id		3626392	1					
ANR	3627305	Argument	id		3626392	0					
ANR	3627306	Identifier	id		3626392	0					
ANR	3627307	BreakStatement	break ;	3692:3:113179:113184	3626392	7	True				
ANR	3627308	Label	case LC_ID_DYLIB :	3693:2:113188:113204	3626392	8	True				
ANR	3627309	Identifier	LC_ID_DYLIB		3626392	0					
ANR	3627310	CompoundStatement		134:3:4565:4618	3626392	9					
ANR	3627311	IdentifierDeclStatement	"ut32 str_off = r_buf_read_ble32_at ( buf , addr , isBe ) ;"	3694:3:113232:113284	3626392	0	True				
ANR	3627312	IdentifierDecl	"str_off = r_buf_read_ble32_at ( buf , addr , isBe )"		3626392	0					
ANR	3627313	IdentifierDeclType	ut32		3626392	0					
ANR	3627314	Identifier	str_off		3626392	1					
ANR	3627315	AssignmentExpression	"str_off = r_buf_read_ble32_at ( buf , addr , isBe )"		3626392	2		=			
ANR	3627316	Identifier	str_off		3626392	0					
ANR	3627317	CallExpression	"r_buf_read_ble32_at ( buf , addr , isBe )"		3626392	1					
ANR	3627318	Callee	r_buf_read_ble32_at		3626392	0					
ANR	3627319	Identifier	r_buf_read_ble32_at		3626392	0					
ANR	3627320	ArgumentList	buf		3626392	1					
ANR	3627321	Argument	buf		3626392	0					
ANR	3627322	Identifier	buf		3626392	0					
ANR	3627323	Argument	addr		3626392	1					
ANR	3627324	Identifier	addr		3626392	0					
ANR	3627325	Argument	isBe		3626392	2					
ANR	3627326	Identifier	isBe		3626392	0					
ANR	3627327	IdentifierDeclStatement	"char * id = r_buf_get_string ( buf , addr + str_off - 8 ) ;"	3695:3:113289:113342	3626392	1	True				
ANR	3627328	IdentifierDecl	"* id = r_buf_get_string ( buf , addr + str_off - 8 )"		3626392	0					
ANR	3627329	IdentifierDeclType	char *		3626392	0					
ANR	3627330	Identifier	id		3626392	1					
ANR	3627331	AssignmentExpression	"* id = r_buf_get_string ( buf , addr + str_off - 8 )"		3626392	2		=			
ANR	3627332	Identifier	id		3626392	0					
ANR	3627333	CallExpression	"r_buf_get_string ( buf , addr + str_off - 8 )"		3626392	1					
ANR	3627334	Callee	r_buf_get_string		3626392	0					
ANR	3627335	Identifier	r_buf_get_string		3626392	0					
ANR	3627336	ArgumentList	buf		3626392	1					
ANR	3627337	Argument	buf		3626392	0					
ANR	3627338	Identifier	buf		3626392	0					
ANR	3627339	Argument	addr + str_off - 8		3626392	1					
ANR	3627340	AdditiveExpression	addr + str_off - 8		3626392	0		+			
ANR	3627341	Identifier	addr		3626392	0					
ANR	3627342	AdditiveExpression	str_off - 8		3626392	1		-			
ANR	3627343	Identifier	str_off		3626392	0					
ANR	3627344	PrimaryExpression	8		3626392	1					
ANR	3627345	Statement	cb_printf	3696:3:113347:113355	3626392	2	True				
ANR	3627346	Statement	(	3696:13:113357:113357	3626392	3	True				
ANR	3627347	Statement	"""0x%08"""	3696:14:113358:113364	3626392	4	True				
ANR	3627348	Statement	PFMT64x	3696:21:113365:113371	3626392	5	True				
ANR	3627349	Statement	"""  current     %d.%d.%d\\n"""	3696:28:113372:113397	3626392	6	True				
ANR	3627350	Statement	","	3696:54:113398:113398	3626392	7	True				
ANR	3627351	Statement	pvaddr	3697:4:113404:113409	3626392	8	True				
ANR	3627352	Statement	+	3697:11:113411:113411	3626392	9	True				
ANR	3627353	Statement	8	3697:13:113413:113413	3626392	10	True				
ANR	3627354	Statement	","	3697:14:113414:113414	3626392	11	True				
ANR	3627355	Statement	r_buf_read_le16_at	3697:16:113416:113433	3626392	12	True				
ANR	3627356	Statement	(	3697:35:113435:113435	3626392	13	True				
ANR	3627357	Statement	buf	3697:36:113436:113438	3626392	14	True				
ANR	3627358	Statement	","	3697:39:113439:113439	3626392	15	True				
ANR	3627359	Statement	addr	3697:41:113441:113444	3626392	16	True				
ANR	3627360	Statement	+	3697:46:113446:113446	3626392	17	True				
ANR	3627361	Statement	10	3697:48:113448:113449	3626392	18	True				
ANR	3627362	Statement	)	3697:50:113450:113450	3626392	19	True				
ANR	3627363	Statement	","	3697:51:113451:113451	3626392	20	True				
ANR	3627364	Statement	r_buf_read8_at	3697:53:113453:113466	3626392	21	True				
ANR	3627365	Statement	(	3697:68:113468:113468	3626392	22	True				
ANR	3627366	Statement	buf	3697:69:113469:113471	3626392	23	True				
ANR	3627367	Statement	","	3697:72:113472:113472	3626392	24	True				
ANR	3627368	Statement	addr	3697:74:113474:113477	3626392	25	True				
ANR	3627369	Statement	+	3697:79:113479:113479	3626392	26	True				
ANR	3627370	Statement	9	3697:81:113481:113481	3626392	27	True				
ANR	3627371	Statement	)	3697:82:113482:113482	3626392	28	True				
ANR	3627372	Statement	","	3697:83:113483:113483	3626392	29	True				
ANR	3627373	Statement	r_buf_read8_at	3698:4:113489:113502	3626392	30	True				
ANR	3627374	Statement	(	3698:19:113504:113504	3626392	31	True				
ANR	3627375	Statement	buf	3698:20:113505:113507	3626392	32	True				
ANR	3627376	Statement	","	3698:23:113508:113508	3626392	33	True				
ANR	3627377	Statement	addr	3698:25:113510:113513	3626392	34	True				
ANR	3627378	Statement	+	3698:30:113515:113515	3626392	35	True				
ANR	3627379	Statement	8	3698:32:113517:113517	3626392	36	True				
ANR	3627380	Statement	)	3698:33:113518:113518	3626392	37	True				
ANR	3627381	Statement	)	3698:34:113519:113519	3626392	38	True				
ANR	3627382	ExpressionStatement		3698:35:113520:113520	3626392	39	True				
ANR	3627383	Statement	cb_printf	3699:3:113525:113533	3626392	40	True				
ANR	3627384	Statement	(	3699:13:113535:113535	3626392	41	True				
ANR	3627385	Statement	"""0x%08"""	3699:14:113536:113542	3626392	42	True				
ANR	3627386	Statement	PFMT64x	3699:21:113543:113549	3626392	43	True				
ANR	3627387	Statement	"""  compat      %d.%d.%d\\n"""	3699:28:113550:113575	3626392	44	True				
ANR	3627388	Statement	","	3699:54:113576:113576	3626392	45	True				
ANR	3627389	Statement	pvaddr	3700:4:113582:113587	3626392	46	True				
ANR	3627390	Statement	+	3700:11:113589:113589	3626392	47	True				
ANR	3627391	Statement	12	3700:13:113591:113592	3626392	48	True				
ANR	3627392	Statement	","	3700:15:113593:113593	3626392	49	True				
ANR	3627393	Statement	r_buf_read_le16_at	3700:17:113595:113612	3626392	50	True				
ANR	3627394	Statement	(	3700:36:113614:113614	3626392	51	True				
ANR	3627395	Statement	buf	3700:37:113615:113617	3626392	52	True				
ANR	3627396	Statement	","	3700:40:113618:113618	3626392	53	True				
ANR	3627397	Statement	addr	3700:42:113620:113623	3626392	54	True				
ANR	3627398	Statement	+	3700:47:113625:113625	3626392	55	True				
ANR	3627399	Statement	14	3700:49:113627:113628	3626392	56	True				
ANR	3627400	Statement	)	3700:51:113629:113629	3626392	57	True				
ANR	3627401	Statement	","	3700:52:113630:113630	3626392	58	True				
ANR	3627402	Statement	r_buf_read8_at	3700:54:113632:113645	3626392	59	True				
ANR	3627403	Statement	(	3700:69:113647:113647	3626392	60	True				
ANR	3627404	Statement	buf	3700:70:113648:113650	3626392	61	True				
ANR	3627405	Statement	","	3700:73:113651:113651	3626392	62	True				
ANR	3627406	Statement	addr	3700:75:113653:113656	3626392	63	True				
ANR	3627407	Statement	+	3700:80:113658:113658	3626392	64	True				
ANR	3627408	Statement	13	3700:82:113660:113661	3626392	65	True				
ANR	3627409	Statement	)	3700:84:113662:113662	3626392	66	True				
ANR	3627410	Statement	","	3700:85:113663:113663	3626392	67	True				
ANR	3627411	Statement	r_buf_read8_at	3701:4:113669:113682	3626392	68	True				
ANR	3627412	Statement	(	3701:19:113684:113684	3626392	69	True				
ANR	3627413	Statement	buf	3701:20:113685:113687	3626392	70	True				
ANR	3627414	Statement	","	3701:23:113688:113688	3626392	71	True				
ANR	3627415	Statement	addr	3701:25:113690:113693	3626392	72	True				
ANR	3627416	Statement	+	3701:30:113695:113695	3626392	73	True				
ANR	3627417	Statement	12	3701:32:113697:113698	3626392	74	True				
ANR	3627418	Statement	)	3701:34:113699:113699	3626392	75	True				
ANR	3627419	Statement	)	3701:35:113700:113700	3626392	76	True				
ANR	3627420	ExpressionStatement		3701:36:113701:113701	3626392	77	True				
ANR	3627421	Statement	cb_printf	3702:3:113706:113714	3626392	78	True				
ANR	3627422	Statement	(	3702:13:113716:113716	3626392	79	True				
ANR	3627423	Statement	"""0x%08"""	3702:14:113717:113723	3626392	80	True				
ANR	3627424	Statement	PFMT64x	3702:21:113724:113730	3626392	81	True				
ANR	3627425	Statement	"""  id          %s\\n"""	3702:28:113731:113750	3626392	82	True				
ANR	3627426	Statement	","	3702:48:113751:113751	3626392	83	True				
ANR	3627427	Statement	pvaddr	3703:4:113757:113762	3626392	84	True				
ANR	3627428	Statement	+	3703:11:113764:113764	3626392	85	True				
ANR	3627429	Statement	str_off	3703:13:113766:113772	3626392	86	True				
ANR	3627430	Statement	-	3703:21:113774:113774	3626392	87	True				
ANR	3627431	Statement	8	3703:23:113776:113776	3626392	88	True				
ANR	3627432	Statement	","	3703:24:113777:113777	3626392	89	True				
ANR	3627433	Statement	id	3703:26:113779:113780	3626392	90	True				
ANR	3627434	Statement	?	3703:28:113781:113781	3626392	91	True				
ANR	3627435	Label	id :	3703:30:113783:113785	3626392	92	True				
ANR	3627436	Identifier	id		3626392	0					
ANR	3627437	Statement	""""""	3703:34:113787:113788	3626392	93	True				
ANR	3627438	Statement	)	3703:36:113789:113789	3626392	94	True				
ANR	3627439	ExpressionStatement		3703:37:113790:113790	3626392	95	True				
ANR	3627440	ExpressionStatement	free ( id )	3704:3:113795:113804	3626392	96	True				
ANR	3627441	CallExpression	free ( id )		3626392	0					
ANR	3627442	Callee	free		3626392	0					
ANR	3627443	Identifier	free		3626392	0					
ANR	3627444	ArgumentList	id		3626392	1					
ANR	3627445	Argument	id		3626392	0					
ANR	3627446	Identifier	id		3626392	0					
ANR	3627447	BreakStatement	break ;	3705:3:113809:113814	3626392	97	True				
ANR	3627448	Label	case LC_UUID :	3707:2:113822:113834	3626392	10	True				
ANR	3627449	Identifier	LC_UUID		3626392	0					
ANR	3627450	CompoundStatement		148:4:5121:5136	3626392	11					
ANR	3627451	IdentifierDeclStatement	"ut8 i , uuid [ 16 ] ;"	3709:4:113845:113860	3626392	0	True				
ANR	3627452	IdentifierDecl	i		3626392	0					
ANR	3627453	IdentifierDeclType	ut8		3626392	0					
ANR	3627454	Identifier	i		3626392	1					
ANR	3627455	IdentifierDecl	uuid [ 16 ]		3626392	1					
ANR	3627456	IdentifierDeclType	ut8 [ 16 ]		3626392	0					
ANR	3627457	Identifier	uuid		3626392	1					
ANR	3627458	PrimaryExpression	16		3626392	2					
ANR	3627459	ExpressionStatement	"r_buf_read_at ( buf , addr , uuid , sizeof ( uuid ) )"	3710:4:113866:113912	3626392	1	True				
ANR	3627460	CallExpression	"r_buf_read_at ( buf , addr , uuid , sizeof ( uuid ) )"		3626392	0					
ANR	3627461	Callee	r_buf_read_at		3626392	0					
ANR	3627462	Identifier	r_buf_read_at		3626392	0					
ANR	3627463	ArgumentList	buf		3626392	1					
ANR	3627464	Argument	buf		3626392	0					
ANR	3627465	Identifier	buf		3626392	0					
ANR	3627466	Argument	addr		3626392	1					
ANR	3627467	Identifier	addr		3626392	0					
ANR	3627468	Argument	uuid		3626392	2					
ANR	3627469	Identifier	uuid		3626392	0					
ANR	3627470	Argument	sizeof ( uuid )		3626392	3					
ANR	3627471	SizeofExpression	sizeof ( uuid )		3626392	0					
ANR	3627472	Sizeof	sizeof		3626392	0					
ANR	3627473	SizeofOperand	uuid		3626392	1					
ANR	3627474	Statement	cb_printf	3711:4:113918:113926	3626392	2	True				
ANR	3627475	Statement	(	3711:14:113928:113928	3626392	3	True				
ANR	3627476	Statement	"""0x%08"""	3711:15:113929:113935	3626392	4	True				
ANR	3627477	Statement	PFMT64x	3711:22:113936:113942	3626392	5	True				
ANR	3627478	Statement	"""  uuid        """	3711:29:113943:113958	3626392	6	True				
ANR	3627479	Statement	","	3711:45:113959:113959	3626392	7	True				
ANR	3627480	Statement	pvaddr	3711:47:113961:113966	3626392	8	True				
ANR	3627481	Statement	)	3711:53:113967:113967	3626392	9	True				
ANR	3627482	ExpressionStatement		3711:54:113968:113968	3626392	10	True				
ANR	3627483	ForStatement	for ( i = 0 ; i < sizeof ( uuid ) ; i ++ )		3626392	11					
ANR	3627484	ForInit	i = 0 ;	3712:9:113979:113984	3626392	0	True				
ANR	3627485	AssignmentExpression	i = 0		3626392	0		=			
ANR	3627486	Identifier	i		3626392	0					
ANR	3627487	PrimaryExpression	0		3626392	1					
ANR	3627488	Condition	i < sizeof ( uuid )	3712:16:113986:114002	3626392	1	True				
ANR	3627489	RelationalExpression	i < sizeof ( uuid )		3626392	0		<			
ANR	3627490	Identifier	i		3626392	0					
ANR	3627491	SizeofExpression	sizeof ( uuid )		3626392	1					
ANR	3627492	Sizeof	sizeof		3626392	0					
ANR	3627493	SizeofOperand	uuid		3626392	1					
ANR	3627494	PostIncDecOperationExpression	i ++	3712:35:114005:114007	3626392	2	True				
ANR	3627495	Identifier	i		3626392	0					
ANR	3627496	IncDec	++		3626392	1					
ANR	3627497	CompoundStatement		151:40:5286:5286	3626392	3					
ANR	3627498	ExpressionStatement	"cb_printf ( ""%02x"" , uuid [ i ] )"	3713:5:114017:114044	3626392	0	True				
ANR	3627499	CallExpression	"cb_printf ( ""%02x"" , uuid [ i ] )"		3626392	0					
ANR	3627500	Callee	cb_printf		3626392	0					
ANR	3627501	Identifier	cb_printf		3626392	0					
ANR	3627502	ArgumentList	"""%02x"""		3626392	1					
ANR	3627503	Argument	"""%02x"""		3626392	0					
ANR	3627504	PrimaryExpression	"""%02x"""		3626392	0					
ANR	3627505	Argument	uuid [ i ]		3626392	1					
ANR	3627506	ArrayIndexing	uuid [ i ]		3626392	0					
ANR	3627507	Identifier	uuid		3626392	0					
ANR	3627508	Identifier	i		3626392	1					
ANR	3627509	ExpressionStatement	"cb_printf ( ""\\n"" )"	3715:4:114056:114072	3626392	12	True				
ANR	3627510	CallExpression	"cb_printf ( ""\\n"" )"		3626392	0					
ANR	3627511	Callee	cb_printf		3626392	0					
ANR	3627512	Identifier	cb_printf		3626392	0					
ANR	3627513	ArgumentList	"""\\n"""		3626392	1					
ANR	3627514	Argument	"""\\n"""		3626392	0					
ANR	3627515	PrimaryExpression	"""\\n"""		3626392	0					
ANR	3627516	BreakStatement	break ;	3717:3:114082:114087	3626392	12	True				
ANR	3627517	Label	case LC_SEGMENT :	3718:2:114091:114106	3626392	13	True				
ANR	3627518	Identifier	LC_SEGMENT		3626392	0					
ANR	3627519	Label	case LC_SEGMENT_64 :	3719:2:114110:114128	3626392	14	True				
ANR	3627520	Identifier	LC_SEGMENT_64		3626392	0					
ANR	3627521	CompoundStatement		164:4:5634:5659	3626392	15					
ANR	3627522	IdentifierDeclStatement	ut8 name [ 17 ] = { 0 } ;	3721:4:114139:114157	3626392	0	True				
ANR	3627523	IdentifierDecl	name [ 17 ] = { 0 }		3626392	0					
ANR	3627524	IdentifierDeclType	ut8 [ 17 ]		3626392	0					
ANR	3627525	Identifier	name		3626392	1					
ANR	3627526	PrimaryExpression	17		3626392	2					
ANR	3627527	AssignmentExpression	name [ 17 ] = { 0 }		3626392	3		=			
ANR	3627528	Identifier	name		3626392	0					
ANR	3627529	InitializerList	0		3626392	1					
ANR	3627530	PrimaryExpression	0		3626392	0					
ANR	3627531	ExpressionStatement	"r_buf_read_at ( buf , addr , name , sizeof ( name ) - 1 )"	3722:4:114163:114213	3626392	1	True				
ANR	3627532	CallExpression	"r_buf_read_at ( buf , addr , name , sizeof ( name ) - 1 )"		3626392	0					
ANR	3627533	Callee	r_buf_read_at		3626392	0					
ANR	3627534	Identifier	r_buf_read_at		3626392	0					
ANR	3627535	ArgumentList	buf		3626392	1					
ANR	3627536	Argument	buf		3626392	0					
ANR	3627537	Identifier	buf		3626392	0					
ANR	3627538	Argument	addr		3626392	1					
ANR	3627539	Identifier	addr		3626392	0					
ANR	3627540	Argument	name		3626392	2					
ANR	3627541	Identifier	name		3626392	0					
ANR	3627542	Argument	sizeof ( name ) - 1		3626392	3					
ANR	3627543	AdditiveExpression	sizeof ( name ) - 1		3626392	0		-			
ANR	3627544	SizeofExpression	sizeof ( name )		3626392	0					
ANR	3627545	Sizeof	sizeof		3626392	0					
ANR	3627546	SizeofOperand	name		3626392	1					
ANR	3627547	PrimaryExpression	1		3626392	1					
ANR	3627548	Statement	cb_printf	3723:4:114219:114227	3626392	2	True				
ANR	3627549	Statement	(	3723:14:114229:114229	3626392	3	True				
ANR	3627550	Statement	"""0x%08"""	3723:15:114230:114236	3626392	4	True				
ANR	3627551	Statement	PFMT64x	3723:22:114237:114243	3626392	5	True				
ANR	3627552	Statement	"""  name        %s\\n"""	3723:29:114244:114263	3626392	6	True				
ANR	3627553	Statement	","	3723:49:114264:114264	3626392	7	True				
ANR	3627554	Statement	pvaddr	3723:51:114266:114271	3626392	8	True				
ANR	3627555	Statement	","	3723:57:114272:114272	3626392	9	True				
ANR	3627556	Statement	name	3723:59:114274:114277	3626392	10	True				
ANR	3627557	Statement	)	3723:63:114278:114278	3626392	11	True				
ANR	3627558	ExpressionStatement		3723:64:114279:114279	3626392	12	True				
ANR	3627559	IdentifierDeclStatement	"ut32 nsects = r_buf_read_le32_at ( buf , addr - 8 + ( is64 ? 64 : 48 ) ) ;"	3724:4:114285:114352	3626392	13	True				
ANR	3627560	IdentifierDecl	"nsects = r_buf_read_le32_at ( buf , addr - 8 + ( is64 ? 64 : 48 ) )"		3626392	0					
ANR	3627561	IdentifierDeclType	ut32		3626392	0					
ANR	3627562	Identifier	nsects		3626392	1					
ANR	3627563	AssignmentExpression	"nsects = r_buf_read_le32_at ( buf , addr - 8 + ( is64 ? 64 : 48 ) )"		3626392	2		=			
ANR	3627564	Identifier	nsects		3626392	0					
ANR	3627565	CallExpression	"r_buf_read_le32_at ( buf , addr - 8 + ( is64 ? 64 : 48 ) )"		3626392	1					
ANR	3627566	Callee	r_buf_read_le32_at		3626392	0					
ANR	3627567	Identifier	r_buf_read_le32_at		3626392	0					
ANR	3627568	ArgumentList	buf		3626392	1					
ANR	3627569	Argument	buf		3626392	0					
ANR	3627570	Identifier	buf		3626392	0					
ANR	3627571	Argument	addr - 8 + ( is64 ? 64 : 48 )		3626392	1					
ANR	3627572	AdditiveExpression	addr - 8 + ( is64 ? 64 : 48 )		3626392	0		-			
ANR	3627573	Identifier	addr		3626392	0					
ANR	3627574	AdditiveExpression	8 + ( is64 ? 64 : 48 )		3626392	1		+			
ANR	3627575	PrimaryExpression	8		3626392	0					
ANR	3627576	ConditionalExpression	is64 ? 64 : 48		3626392	1					
ANR	3627577	Condition	is64		3626392	0					
ANR	3627578	Identifier	is64		3626392	0					
ANR	3627579	PrimaryExpression	64		3626392	1					
ANR	3627580	PrimaryExpression	48		3626392	2					
ANR	3627581	IdentifierDeclStatement	ut64 off = is64 ? 72 : 56 ;	3725:4:114358:114383	3626392	14	True				
ANR	3627582	IdentifierDecl	off = is64 ? 72 : 56		3626392	0					
ANR	3627583	IdentifierDeclType	ut64		3626392	0					
ANR	3627584	Identifier	off		3626392	1					
ANR	3627585	AssignmentExpression	off = is64 ? 72 : 56		3626392	2		=			
ANR	3627586	Identifier	off		3626392	0					
ANR	3627587	ConditionalExpression	is64 ? 72 : 56		3626392	1					
ANR	3627588	Condition	is64		3626392	0					
ANR	3627589	Identifier	is64		3626392	0					
ANR	3627590	PrimaryExpression	72		3626392	1					
ANR	3627591	PrimaryExpression	56		3626392	2					
ANR	3627592	WhileStatement	while ( off < lcSize && nsects -- )		3626392	15					
ANR	3627593	Condition	off < lcSize && nsects --	3726:11:114396:114419	3626392	0	True				
ANR	3627594	AndExpression	off < lcSize && nsects --		3626392	0		&&			
ANR	3627595	RelationalExpression	off < lcSize		3626392	0		<			
ANR	3627596	Identifier	off		3626392	0					
ANR	3627597	Identifier	lcSize		3626392	1					
ANR	3627598	PostIncDecOperationExpression	nsects --		3626392	1					
ANR	3627599	Identifier	nsects		3626392	0					
ANR	3627600	IncDec	--		3626392	1					
ANR	3627601	CompoundStatement		165:37:5698:5698	3626392	1					
ANR	3627602	IfStatement	if ( is64 )		3626392	0					
ANR	3627603	Condition	is64	3727:9:114433:114436	3626392	0	True				
ANR	3627604	Identifier	is64		3626392	0					
ANR	3627605	CompoundStatement		166:15:5715:5715	3626392	1					
ANR	3627606	Statement	cb_printf	3728:6:114447:114455	3626392	0	True				
ANR	3627607	Statement	(	3728:16:114457:114457	3626392	1	True				
ANR	3627608	Statement	"""pf.mach0_section64 @ 0x%08"""	3728:17:114458:114485	3626392	2	True				
ANR	3627609	Statement	PFMT64x	3728:45:114486:114492	3626392	3	True				
ANR	3627610	Statement	"""\\n"""	3728:52:114493:114496	3626392	4	True				
ANR	3627611	Statement	","	3728:56:114497:114497	3626392	5	True				
ANR	3627612	Statement	pvaddr	3728:58:114499:114504	3626392	6	True				
ANR	3627613	Statement	-	3728:65:114506:114506	3626392	7	True				
ANR	3627614	Statement	8	3728:67:114508:114508	3626392	8	True				
ANR	3627615	Statement	+	3728:69:114510:114510	3626392	9	True				
ANR	3627616	Statement	off	3728:71:114512:114514	3626392	10	True				
ANR	3627617	Statement	)	3728:74:114515:114515	3626392	11	True				
ANR	3627618	ExpressionStatement		3728:75:114516:114516	3626392	12	True				
ANR	3627619	ExpressionStatement	off += 80	3729:6:114524:114533	3626392	13	True				
ANR	3627620	AssignmentExpression	off += 80		3626392	0		+=			
ANR	3627621	Identifier	off		3626392	0					
ANR	3627622	PrimaryExpression	80		3626392	1					
ANR	3627623	ElseStatement	else		3626392	0					
ANR	3627624	CompoundStatement		169:12:5823:5823	3626392	0					
ANR	3627625	Statement	cb_printf	3731:6:114555:114563	3626392	0	True				
ANR	3627626	Statement	(	3731:16:114565:114565	3626392	1	True				
ANR	3627627	Statement	"""pf.mach0_section @ 0x%08"""	3731:17:114566:114591	3626392	2	True				
ANR	3627628	Statement	PFMT64x	3731:43:114592:114598	3626392	3	True				
ANR	3627629	Statement	"""\\n"""	3731:50:114599:114602	3626392	4	True				
ANR	3627630	Statement	","	3731:54:114603:114603	3626392	5	True				
ANR	3627631	Statement	pvaddr	3731:56:114605:114610	3626392	6	True				
ANR	3627632	Statement	-	3731:63:114612:114612	3626392	7	True				
ANR	3627633	Statement	8	3731:65:114614:114614	3626392	8	True				
ANR	3627634	Statement	+	3731:67:114616:114616	3626392	9	True				
ANR	3627635	Statement	off	3731:69:114618:114620	3626392	10	True				
ANR	3627636	Statement	)	3731:72:114621:114621	3626392	11	True				
ANR	3627637	ExpressionStatement		3731:73:114622:114622	3626392	12	True				
ANR	3627638	ExpressionStatement	off += 68	3732:6:114630:114639	3626392	13	True				
ANR	3627639	AssignmentExpression	off += 68		3626392	0		+=			
ANR	3627640	Identifier	off		3626392	0					
ANR	3627641	PrimaryExpression	68		3626392	1					
ANR	3627642	BreakStatement	break ;	3736:3:114662:114667	3626392	16	True				
ANR	3627643	Label	case LC_LOAD_DYLIB :	3737:2:114671:114689	3626392	17	True				
ANR	3627644	Identifier	LC_LOAD_DYLIB		3626392	0					
ANR	3627645	Label	case LC_LOAD_WEAK_DYLIB :	3738:2:114693:114716	3626392	18	True				
ANR	3627646	Identifier	LC_LOAD_WEAK_DYLIB		3626392	0					
ANR	3627647	CompoundStatement		179:3:6056:6117	3626392	19					
ANR	3627648	IdentifierDeclStatement	"ut32 str_off = r_buf_read_ble32_at ( buf , addr , isBe ) ;"	3739:3:114723:114775	3626392	0	True				
ANR	3627649	IdentifierDecl	"str_off = r_buf_read_ble32_at ( buf , addr , isBe )"		3626392	0					
ANR	3627650	IdentifierDeclType	ut32		3626392	0					
ANR	3627651	Identifier	str_off		3626392	1					
ANR	3627652	AssignmentExpression	"str_off = r_buf_read_ble32_at ( buf , addr , isBe )"		3626392	2		=			
ANR	3627653	Identifier	str_off		3626392	0					
ANR	3627654	CallExpression	"r_buf_read_ble32_at ( buf , addr , isBe )"		3626392	1					
ANR	3627655	Callee	r_buf_read_ble32_at		3626392	0					
ANR	3627656	Identifier	r_buf_read_ble32_at		3626392	0					
ANR	3627657	ArgumentList	buf		3626392	1					
ANR	3627658	Argument	buf		3626392	0					
ANR	3627659	Identifier	buf		3626392	0					
ANR	3627660	Argument	addr		3626392	1					
ANR	3627661	Identifier	addr		3626392	0					
ANR	3627662	Argument	isBe		3626392	2					
ANR	3627663	Identifier	isBe		3626392	0					
ANR	3627664	IdentifierDeclStatement	"char * load_dylib = r_buf_get_string ( buf , addr + str_off - 8 ) ;"	3740:3:114780:114841	3626392	1	True				
ANR	3627665	IdentifierDecl	"* load_dylib = r_buf_get_string ( buf , addr + str_off - 8 )"		3626392	0					
ANR	3627666	IdentifierDeclType	char *		3626392	0					
ANR	3627667	Identifier	load_dylib		3626392	1					
ANR	3627668	AssignmentExpression	"* load_dylib = r_buf_get_string ( buf , addr + str_off - 8 )"		3626392	2		=			
ANR	3627669	Identifier	load_dylib		3626392	0					
ANR	3627670	CallExpression	"r_buf_get_string ( buf , addr + str_off - 8 )"		3626392	1					
ANR	3627671	Callee	r_buf_get_string		3626392	0					
ANR	3627672	Identifier	r_buf_get_string		3626392	0					
ANR	3627673	ArgumentList	buf		3626392	1					
ANR	3627674	Argument	buf		3626392	0					
ANR	3627675	Identifier	buf		3626392	0					
ANR	3627676	Argument	addr + str_off - 8		3626392	1					
ANR	3627677	AdditiveExpression	addr + str_off - 8		3626392	0		+			
ANR	3627678	Identifier	addr		3626392	0					
ANR	3627679	AdditiveExpression	str_off - 8		3626392	1		-			
ANR	3627680	Identifier	str_off		3626392	0					
ANR	3627681	PrimaryExpression	8		3626392	1					
ANR	3627682	Statement	cb_printf	3741:3:114846:114854	3626392	2	True				
ANR	3627683	Statement	(	3741:13:114856:114856	3626392	3	True				
ANR	3627684	Statement	"""0x%08"""	3741:14:114857:114863	3626392	4	True				
ANR	3627685	Statement	PFMT64x	3741:21:114864:114870	3626392	5	True				
ANR	3627686	Statement	"""  current     %d.%d.%d\\n"""	3741:28:114871:114896	3626392	6	True				
ANR	3627687	Statement	","	3741:54:114897:114897	3626392	7	True				
ANR	3627688	Statement	pvaddr	3742:4:114903:114908	3626392	8	True				
ANR	3627689	Statement	+	3742:11:114910:114910	3626392	9	True				
ANR	3627690	Statement	8	3742:13:114912:114912	3626392	10	True				
ANR	3627691	Statement	","	3742:14:114913:114913	3626392	11	True				
ANR	3627692	Statement	r_buf_read_le16_at	3742:16:114915:114932	3626392	12	True				
ANR	3627693	Statement	(	3742:35:114934:114934	3626392	13	True				
ANR	3627694	Statement	buf	3742:36:114935:114937	3626392	14	True				
ANR	3627695	Statement	","	3742:39:114938:114938	3626392	15	True				
ANR	3627696	Statement	addr	3742:41:114940:114943	3626392	16	True				
ANR	3627697	Statement	+	3742:46:114945:114945	3626392	17	True				
ANR	3627698	Statement	10	3742:48:114947:114948	3626392	18	True				
ANR	3627699	Statement	)	3742:50:114949:114949	3626392	19	True				
ANR	3627700	Statement	","	3742:51:114950:114950	3626392	20	True				
ANR	3627701	Statement	r_buf_read8_at	3742:53:114952:114965	3626392	21	True				
ANR	3627702	Statement	(	3742:68:114967:114967	3626392	22	True				
ANR	3627703	Statement	buf	3742:69:114968:114970	3626392	23	True				
ANR	3627704	Statement	","	3742:72:114971:114971	3626392	24	True				
ANR	3627705	Statement	addr	3742:74:114973:114976	3626392	25	True				
ANR	3627706	Statement	+	3742:79:114978:114978	3626392	26	True				
ANR	3627707	Statement	9	3742:81:114980:114980	3626392	27	True				
ANR	3627708	Statement	)	3742:82:114981:114981	3626392	28	True				
ANR	3627709	Statement	","	3742:83:114982:114982	3626392	29	True				
ANR	3627710	Statement	r_buf_read8_at	3743:4:114988:115001	3626392	30	True				
ANR	3627711	Statement	(	3743:19:115003:115003	3626392	31	True				
ANR	3627712	Statement	buf	3743:20:115004:115006	3626392	32	True				
ANR	3627713	Statement	","	3743:23:115007:115007	3626392	33	True				
ANR	3627714	Statement	addr	3743:25:115009:115012	3626392	34	True				
ANR	3627715	Statement	+	3743:30:115014:115014	3626392	35	True				
ANR	3627716	Statement	8	3743:32:115016:115016	3626392	36	True				
ANR	3627717	Statement	)	3743:33:115017:115017	3626392	37	True				
ANR	3627718	Statement	)	3743:34:115018:115018	3626392	38	True				
ANR	3627719	ExpressionStatement		3743:35:115019:115019	3626392	39	True				
ANR	3627720	Statement	cb_printf	3744:3:115024:115032	3626392	40	True				
ANR	3627721	Statement	(	3744:13:115034:115034	3626392	41	True				
ANR	3627722	Statement	"""0x%08"""	3744:14:115035:115041	3626392	42	True				
ANR	3627723	Statement	PFMT64x	3744:21:115042:115048	3626392	43	True				
ANR	3627724	Statement	"""  compat      %d.%d.%d\\n"""	3744:28:115049:115074	3626392	44	True				
ANR	3627725	Statement	","	3744:54:115075:115075	3626392	45	True				
ANR	3627726	Statement	pvaddr	3745:4:115081:115086	3626392	46	True				
ANR	3627727	Statement	+	3745:11:115088:115088	3626392	47	True				
ANR	3627728	Statement	12	3745:13:115090:115091	3626392	48	True				
ANR	3627729	Statement	","	3745:15:115092:115092	3626392	49	True				
ANR	3627730	Statement	r_buf_read_le16_at	3745:17:115094:115111	3626392	50	True				
ANR	3627731	Statement	(	3745:36:115113:115113	3626392	51	True				
ANR	3627732	Statement	buf	3745:37:115114:115116	3626392	52	True				
ANR	3627733	Statement	","	3745:40:115117:115117	3626392	53	True				
ANR	3627734	Statement	addr	3745:42:115119:115122	3626392	54	True				
ANR	3627735	Statement	+	3745:47:115124:115124	3626392	55	True				
ANR	3627736	Statement	14	3745:49:115126:115127	3626392	56	True				
ANR	3627737	Statement	)	3745:51:115128:115128	3626392	57	True				
ANR	3627738	Statement	","	3745:52:115129:115129	3626392	58	True				
ANR	3627739	Statement	r_buf_read8_at	3745:54:115131:115144	3626392	59	True				
ANR	3627740	Statement	(	3745:69:115146:115146	3626392	60	True				
ANR	3627741	Statement	buf	3745:70:115147:115149	3626392	61	True				
ANR	3627742	Statement	","	3745:73:115150:115150	3626392	62	True				
ANR	3627743	Statement	addr	3745:75:115152:115155	3626392	63	True				
ANR	3627744	Statement	+	3745:80:115157:115157	3626392	64	True				
ANR	3627745	Statement	13	3745:82:115159:115160	3626392	65	True				
ANR	3627746	Statement	)	3745:84:115161:115161	3626392	66	True				
ANR	3627747	Statement	","	3745:85:115162:115162	3626392	67	True				
ANR	3627748	Statement	r_buf_read8_at	3746:4:115168:115181	3626392	68	True				
ANR	3627749	Statement	(	3746:19:115183:115183	3626392	69	True				
ANR	3627750	Statement	buf	3746:20:115184:115186	3626392	70	True				
ANR	3627751	Statement	","	3746:23:115187:115187	3626392	71	True				
ANR	3627752	Statement	addr	3746:25:115189:115192	3626392	72	True				
ANR	3627753	Statement	+	3746:30:115194:115194	3626392	73	True				
ANR	3627754	Statement	12	3746:32:115196:115197	3626392	74	True				
ANR	3627755	Statement	)	3746:34:115198:115198	3626392	75	True				
ANR	3627756	Statement	)	3746:35:115199:115199	3626392	76	True				
ANR	3627757	ExpressionStatement		3746:36:115200:115200	3626392	77	True				
ANR	3627758	Statement	cb_printf	3747:3:115205:115213	3626392	78	True				
ANR	3627759	Statement	(	3747:13:115215:115215	3626392	79	True				
ANR	3627760	Statement	"""0x%08"""	3747:14:115216:115222	3626392	80	True				
ANR	3627761	Statement	PFMT64x	3747:21:115223:115229	3626392	81	True				
ANR	3627762	Statement	"""  load_dylib  %s\\n"""	3747:28:115230:115249	3626392	82	True				
ANR	3627763	Statement	","	3747:48:115250:115250	3626392	83	True				
ANR	3627764	Statement	pvaddr	3748:4:115256:115261	3626392	84	True				
ANR	3627765	Statement	+	3748:11:115263:115263	3626392	85	True				
ANR	3627766	Statement	str_off	3748:13:115265:115271	3626392	86	True				
ANR	3627767	Statement	-	3748:21:115273:115273	3626392	87	True				
ANR	3627768	Statement	8	3748:23:115275:115275	3626392	88	True				
ANR	3627769	Statement	","	3748:24:115276:115276	3626392	89	True				
ANR	3627770	Statement	load_dylib	3748:26:115278:115287	3626392	90	True				
ANR	3627771	Statement	?	3748:36:115288:115288	3626392	91	True				
ANR	3627772	Label	load_dylib :	3748:38:115290:115300	3626392	92	True				
ANR	3627773	Identifier	load_dylib		3626392	0					
ANR	3627774	Statement	""""""	3748:50:115302:115303	3626392	93	True				
ANR	3627775	Statement	)	3748:52:115304:115304	3626392	94	True				
ANR	3627776	ExpressionStatement		3748:53:115305:115305	3626392	95	True				
ANR	3627777	ExpressionStatement	free ( load_dylib )	3749:3:115310:115327	3626392	96	True				
ANR	3627778	CallExpression	free ( load_dylib )		3626392	0					
ANR	3627779	Callee	free		3626392	0					
ANR	3627780	Identifier	free		3626392	0					
ANR	3627781	ArgumentList	load_dylib		3626392	1					
ANR	3627782	Argument	load_dylib		3626392	0					
ANR	3627783	Identifier	load_dylib		3626392	0					
ANR	3627784	BreakStatement	break ;	3750:3:115332:115337	3626392	97	True				
ANR	3627785	Label	case LC_RPATH :	3752:2:115345:115358	3626392	20	True				
ANR	3627786	Identifier	LC_RPATH		3626392	0					
ANR	3627787	CompoundStatement		192:3:6641:6687	3626392	21					
ANR	3627788	IdentifierDeclStatement	"char * rpath = r_buf_get_string ( buf , addr + 4 ) ;"	3753:3:115365:115411	3626392	0	True				
ANR	3627789	IdentifierDecl	"* rpath = r_buf_get_string ( buf , addr + 4 )"		3626392	0					
ANR	3627790	IdentifierDeclType	char *		3626392	0					
ANR	3627791	Identifier	rpath		3626392	1					
ANR	3627792	AssignmentExpression	"* rpath = r_buf_get_string ( buf , addr + 4 )"		3626392	2		=			
ANR	3627793	Identifier	rpath		3626392	0					
ANR	3627794	CallExpression	"r_buf_get_string ( buf , addr + 4 )"		3626392	1					
ANR	3627795	Callee	r_buf_get_string		3626392	0					
ANR	3627796	Identifier	r_buf_get_string		3626392	0					
ANR	3627797	ArgumentList	buf		3626392	1					
ANR	3627798	Argument	buf		3626392	0					
ANR	3627799	Identifier	buf		3626392	0					
ANR	3627800	Argument	addr + 4		3626392	1					
ANR	3627801	AdditiveExpression	addr + 4		3626392	0		+			
ANR	3627802	Identifier	addr		3626392	0					
ANR	3627803	PrimaryExpression	4		3626392	1					
ANR	3627804	Statement	cb_printf	3754:3:115416:115424	3626392	1	True				
ANR	3627805	Statement	(	3754:13:115426:115426	3626392	2	True				
ANR	3627806	Statement	"""0x%08"""	3754:14:115427:115433	3626392	3	True				
ANR	3627807	Statement	PFMT64x	3754:22:115435:115441	3626392	4	True				
ANR	3627808	Statement	"""  rpath       %s\\n"""	3754:30:115443:115462	3626392	5	True				
ANR	3627809	Statement	","	3754:50:115463:115463	3626392	6	True				
ANR	3627810	Statement	pvaddr	3755:4:115469:115474	3626392	7	True				
ANR	3627811	Statement	+	3755:11:115476:115476	3626392	8	True				
ANR	3627812	Statement	4	3755:13:115478:115478	3626392	9	True				
ANR	3627813	Statement	","	3755:14:115479:115479	3626392	10	True				
ANR	3627814	Statement	rpath	3755:16:115481:115485	3626392	11	True				
ANR	3627815	Statement	?	3755:22:115487:115487	3626392	12	True				
ANR	3627816	Label	rpath :	3755:24:115489:115495	3626392	13	True				
ANR	3627817	Identifier	rpath		3626392	0					
ANR	3627818	Statement	""""""	3755:32:115497:115498	3626392	14	True				
ANR	3627819	Statement	)	3755:34:115499:115499	3626392	15	True				
ANR	3627820	ExpressionStatement		3755:35:115500:115500	3626392	16	True				
ANR	3627821	ExpressionStatement	free ( rpath )	3756:3:115505:115517	3626392	17	True				
ANR	3627822	CallExpression	free ( rpath )		3626392	0					
ANR	3627823	Callee	free		3626392	0					
ANR	3627824	Identifier	free		3626392	0					
ANR	3627825	ArgumentList	rpath		3626392	1					
ANR	3627826	Argument	rpath		3626392	0					
ANR	3627827	Identifier	rpath		3626392	0					
ANR	3627828	BreakStatement	break ;	3757:3:115522:115527	3626392	18	True				
ANR	3627829	Label	case LC_ENCRYPTION_INFO :	3759:2:115535:115558	3626392	22	True				
ANR	3627830	Identifier	LC_ENCRYPTION_INFO		3626392	0					
ANR	3627831	Label	case LC_ENCRYPTION_INFO_64 :	3760:2:115562:115588	3626392	23	True				
ANR	3627832	Identifier	LC_ENCRYPTION_INFO_64		3626392	0					
ANR	3627833	CompoundStatement		200:3:6871:6913	3626392	24					
ANR	3627834	IdentifierDeclStatement	"ut32 word = r_buf_read_le32_at ( buf , addr ) ;"	3761:3:115595:115637	3626392	0	True				
ANR	3627835	IdentifierDecl	"word = r_buf_read_le32_at ( buf , addr )"		3626392	0					
ANR	3627836	IdentifierDeclType	ut32		3626392	0					
ANR	3627837	Identifier	word		3626392	1					
ANR	3627838	AssignmentExpression	"word = r_buf_read_le32_at ( buf , addr )"		3626392	2		=			
ANR	3627839	Identifier	word		3626392	0					
ANR	3627840	CallExpression	"r_buf_read_le32_at ( buf , addr )"		3626392	1					
ANR	3627841	Callee	r_buf_read_le32_at		3626392	0					
ANR	3627842	Identifier	r_buf_read_le32_at		3626392	0					
ANR	3627843	ArgumentList	buf		3626392	1					
ANR	3627844	Argument	buf		3626392	0					
ANR	3627845	Identifier	buf		3626392	0					
ANR	3627846	Argument	addr		3626392	1					
ANR	3627847	Identifier	addr		3626392	0					
ANR	3627848	Statement	cb_printf	3762:3:115642:115650	3626392	1	True				
ANR	3627849	Statement	(	3762:13:115652:115652	3626392	2	True				
ANR	3627850	Statement	"""0x%08"""	3762:14:115653:115659	3626392	3	True				
ANR	3627851	Statement	PFMT64x	3762:21:115660:115666	3626392	4	True				
ANR	3627852	Statement	"""  cryptoff   0x%08x\\n"""	3762:28:115667:115689	3626392	5	True				
ANR	3627853	Statement	","	3762:51:115690:115690	3626392	6	True				
ANR	3627854	Statement	pvaddr	3762:53:115692:115697	3626392	7	True				
ANR	3627855	Statement	","	3762:59:115698:115698	3626392	8	True				
ANR	3627856	Statement	word	3762:61:115700:115703	3626392	9	True				
ANR	3627857	Statement	)	3762:65:115704:115704	3626392	10	True				
ANR	3627858	ExpressionStatement		3762:66:115705:115705	3626392	11	True				
ANR	3627859	ExpressionStatement	"word = r_buf_read_le32_at ( buf , addr + 4 )"	3763:3:115710:115751	3626392	12	True				
ANR	3627860	AssignmentExpression	"word = r_buf_read_le32_at ( buf , addr + 4 )"		3626392	0		=			
ANR	3627861	Identifier	word		3626392	0					
ANR	3627862	CallExpression	"r_buf_read_le32_at ( buf , addr + 4 )"		3626392	1					
ANR	3627863	Callee	r_buf_read_le32_at		3626392	0					
ANR	3627864	Identifier	r_buf_read_le32_at		3626392	0					
ANR	3627865	ArgumentList	buf		3626392	1					
ANR	3627866	Argument	buf		3626392	0					
ANR	3627867	Identifier	buf		3626392	0					
ANR	3627868	Argument	addr + 4		3626392	1					
ANR	3627869	AdditiveExpression	addr + 4		3626392	0		+			
ANR	3627870	Identifier	addr		3626392	0					
ANR	3627871	PrimaryExpression	4		3626392	1					
ANR	3627872	Statement	cb_printf	3764:3:115756:115764	3626392	13	True				
ANR	3627873	Statement	(	3764:13:115766:115766	3626392	14	True				
ANR	3627874	Statement	"""0x%08"""	3764:14:115767:115773	3626392	15	True				
ANR	3627875	Statement	PFMT64x	3764:21:115774:115780	3626392	16	True				
ANR	3627876	Statement	"""  cryptsize  %d\\n"""	3764:28:115781:115799	3626392	17	True				
ANR	3627877	Statement	","	3764:47:115800:115800	3626392	18	True				
ANR	3627878	Statement	pvaddr	3764:49:115802:115807	3626392	19	True				
ANR	3627879	Statement	+	3764:56:115809:115809	3626392	20	True				
ANR	3627880	Statement	4	3764:58:115811:115811	3626392	21	True				
ANR	3627881	Statement	","	3764:59:115812:115812	3626392	22	True				
ANR	3627882	Statement	word	3764:61:115814:115817	3626392	23	True				
ANR	3627883	Statement	)	3764:65:115818:115818	3626392	24	True				
ANR	3627884	ExpressionStatement		3764:66:115819:115819	3626392	25	True				
ANR	3627885	ExpressionStatement	"word = r_buf_read_le32_at ( buf , addr + 8 )"	3765:3:115824:115865	3626392	26	True				
ANR	3627886	AssignmentExpression	"word = r_buf_read_le32_at ( buf , addr + 8 )"		3626392	0		=			
ANR	3627887	Identifier	word		3626392	0					
ANR	3627888	CallExpression	"r_buf_read_le32_at ( buf , addr + 8 )"		3626392	1					
ANR	3627889	Callee	r_buf_read_le32_at		3626392	0					
ANR	3627890	Identifier	r_buf_read_le32_at		3626392	0					
ANR	3627891	ArgumentList	buf		3626392	1					
ANR	3627892	Argument	buf		3626392	0					
ANR	3627893	Identifier	buf		3626392	0					
ANR	3627894	Argument	addr + 8		3626392	1					
ANR	3627895	AdditiveExpression	addr + 8		3626392	0		+			
ANR	3627896	Identifier	addr		3626392	0					
ANR	3627897	PrimaryExpression	8		3626392	1					
ANR	3627898	Statement	cb_printf	3766:3:115870:115878	3626392	27	True				
ANR	3627899	Statement	(	3766:13:115880:115880	3626392	28	True				
ANR	3627900	Statement	"""0x%08"""	3766:14:115881:115887	3626392	29	True				
ANR	3627901	Statement	PFMT64x	3766:21:115888:115894	3626392	30	True				
ANR	3627902	Statement	"""  cryptid    %d\\n"""	3766:28:115895:115913	3626392	31	True				
ANR	3627903	Statement	","	3766:47:115914:115914	3626392	32	True				
ANR	3627904	Statement	pvaddr	3766:49:115916:115921	3626392	33	True				
ANR	3627905	Statement	+	3766:56:115923:115923	3626392	34	True				
ANR	3627906	Statement	8	3766:58:115925:115925	3626392	35	True				
ANR	3627907	Statement	","	3766:59:115926:115926	3626392	36	True				
ANR	3627908	Statement	word	3766:61:115928:115931	3626392	37	True				
ANR	3627909	Statement	)	3766:65:115932:115932	3626392	38	True				
ANR	3627910	ExpressionStatement		3766:66:115933:115933	3626392	39	True				
ANR	3627911	BreakStatement	break ;	3767:3:115938:115943	3626392	40	True				
ANR	3627912	Label	case LC_CODE_SIGNATURE :	3769:2:115951:115973	3626392	25	True				
ANR	3627913	Identifier	LC_CODE_SIGNATURE		3626392	0					
ANR	3627914	CompoundStatement		209:3:7256:7269	3626392	26					
ANR	3627915	IdentifierDeclStatement	ut32 words [ 2 ] ;	3770:3:115980:115993	3626392	0	True				
ANR	3627916	IdentifierDecl	words [ 2 ]		3626392	0					
ANR	3627917	IdentifierDeclType	ut32 [ 2 ]		3626392	0					
ANR	3627918	Identifier	words		3626392	1					
ANR	3627919	PrimaryExpression	2		3626392	2					
ANR	3627920	ExpressionStatement	"r_buf_read_at ( buf , addr , ( ut8 * ) words , sizeof ( words ) )"	3771:3:115998:116053	3626392	1	True				
ANR	3627921	CallExpression	"r_buf_read_at ( buf , addr , ( ut8 * ) words , sizeof ( words ) )"		3626392	0					
ANR	3627922	Callee	r_buf_read_at		3626392	0					
ANR	3627923	Identifier	r_buf_read_at		3626392	0					
ANR	3627924	ArgumentList	buf		3626392	1					
ANR	3627925	Argument	buf		3626392	0					
ANR	3627926	Identifier	buf		3626392	0					
ANR	3627927	Argument	addr		3626392	1					
ANR	3627928	Identifier	addr		3626392	0					
ANR	3627929	Argument	( ut8 * ) words		3626392	2					
ANR	3627930	CastExpression	( ut8 * ) words		3626392	0					
ANR	3627931	CastTarget	ut8 *		3626392	0					
ANR	3627932	Identifier	words		3626392	1					
ANR	3627933	Argument	sizeof ( words )		3626392	3					
ANR	3627934	SizeofExpression	sizeof ( words )		3626392	0					
ANR	3627935	Sizeof	sizeof		3626392	0					
ANR	3627936	SizeofOperand	words		3626392	1					
ANR	3627937	Statement	cb_printf	3772:3:116058:116066	3626392	2	True				
ANR	3627938	Statement	(	3772:13:116068:116068	3626392	3	True				
ANR	3627939	Statement	"""0x%08"""	3772:14:116069:116075	3626392	4	True				
ANR	3627940	Statement	PFMT64x	3772:21:116076:116082	3626392	5	True				
ANR	3627941	Statement	"""  dataoff     0x%08x\\n"""	3772:28:116083:116106	3626392	6	True				
ANR	3627942	Statement	","	3772:52:116107:116107	3626392	7	True				
ANR	3627943	Statement	pvaddr	3772:54:116109:116114	3626392	8	True				
ANR	3627944	Statement	","	3772:60:116115:116115	3626392	9	True				
ANR	3627945	Statement	words	3772:62:116117:116121	3626392	10	True				
ANR	3627946	Statement	[	3772:67:116122:116122	3626392	11	True				
ANR	3627947	Statement	0	3772:68:116123:116123	3626392	12	True				
ANR	3627948	Statement	]	3772:69:116124:116124	3626392	13	True				
ANR	3627949	Statement	)	3772:70:116125:116125	3626392	14	True				
ANR	3627950	ExpressionStatement		3772:71:116126:116126	3626392	15	True				
ANR	3627951	Statement	cb_printf	3773:3:116131:116139	3626392	16	True				
ANR	3627952	Statement	(	3773:13:116141:116141	3626392	17	True				
ANR	3627953	Statement	"""0x%08"""	3773:14:116142:116148	3626392	18	True				
ANR	3627954	Statement	PFMT64x	3773:21:116149:116155	3626392	19	True				
ANR	3627955	Statement	"""  datasize    %d\\n"""	3773:28:116156:116175	3626392	20	True				
ANR	3627956	Statement	","	3773:48:116176:116176	3626392	21	True				
ANR	3627957	Statement	pvaddr	3773:50:116178:116183	3626392	22	True				
ANR	3627958	Statement	+	3773:57:116185:116185	3626392	23	True				
ANR	3627959	Statement	4	3773:59:116187:116187	3626392	24	True				
ANR	3627960	Statement	","	3773:60:116188:116188	3626392	25	True				
ANR	3627961	Statement	words	3773:62:116190:116194	3626392	26	True				
ANR	3627962	Statement	[	3773:67:116195:116195	3626392	27	True				
ANR	3627963	Statement	1	3773:68:116196:116196	3626392	28	True				
ANR	3627964	Statement	]	3773:69:116197:116197	3626392	29	True				
ANR	3627965	Statement	)	3773:70:116198:116198	3626392	30	True				
ANR	3627966	ExpressionStatement		3773:71:116199:116199	3626392	31	True				
ANR	3627967	ExpressionStatement	"cb_printf ( ""# wtf mach0.sign %d @ 0x%x\\n"" , words [ 1 ] , words [ 0 ] )"	3774:3:116204:116266	3626392	32	True				
ANR	3627968	CallExpression	"cb_printf ( ""# wtf mach0.sign %d @ 0x%x\\n"" , words [ 1 ] , words [ 0 ] )"		3626392	0					
ANR	3627969	Callee	cb_printf		3626392	0					
ANR	3627970	Identifier	cb_printf		3626392	0					
ANR	3627971	ArgumentList	"""# wtf mach0.sign %d @ 0x%x\\n"""		3626392	1					
ANR	3627972	Argument	"""# wtf mach0.sign %d @ 0x%x\\n"""		3626392	0					
ANR	3627973	PrimaryExpression	"""# wtf mach0.sign %d @ 0x%x\\n"""		3626392	0					
ANR	3627974	Argument	words [ 1 ]		3626392	1					
ANR	3627975	ArrayIndexing	words [ 1 ]		3626392	0					
ANR	3627976	Identifier	words		3626392	0					
ANR	3627977	PrimaryExpression	1		3626392	1					
ANR	3627978	Argument	words [ 0 ]		3626392	2					
ANR	3627979	ArrayIndexing	words [ 0 ]		3626392	0					
ANR	3627980	Identifier	words		3626392	0					
ANR	3627981	PrimaryExpression	0		3626392	1					
ANR	3627982	BreakStatement	break ;	3775:3:116271:116276	3626392	33	True				
ANR	3627983	ExpressionStatement	addr += word - 8	3778:2:116288:116304	3626392	43	True				
ANR	3627984	AssignmentExpression	addr += word - 8		3626392	0		+=			
ANR	3627985	Identifier	addr		3626392	0					
ANR	3627986	AdditiveExpression	word - 8		3626392	1		-			
ANR	3627987	Identifier	word		3626392	0					
ANR	3627988	PrimaryExpression	8		3626392	1					
ANR	3627989	ExpressionStatement	pvaddr += word - 8	3779:2:116308:116326	3626392	44	True				
ANR	3627990	AssignmentExpression	pvaddr += word - 8		3626392	0		+=			
ANR	3627991	Identifier	pvaddr		3626392	0					
ANR	3627992	AdditiveExpression	word - 8		3626392	1		-			
ANR	3627993	Identifier	word		3626392	0					
ANR	3627994	PrimaryExpression	8		3626392	1					
ANR	3627995	ExpressionStatement	free ( mh )	3781:1:116332:116341	3626392	132	True				
ANR	3627996	CallExpression	free ( mh )		3626392	0					
ANR	3627997	Callee	free		3626392	0					
ANR	3627998	Identifier	free		3626392	0					
ANR	3627999	ArgumentList	mh		3626392	1					
ANR	3628000	Argument	mh		3626392	0					
ANR	3628001	Identifier	mh		3626392	0					
ANR	3628002	ReturnType	void MACH0_		3626392	1					
ANR	3628003	Identifier	( mach_headerfields )		3626392	2					
ANR	3628004	Identifier	mach_headerfields		3626392	3					
ANR	3628005	ParameterList	RBinFile * bf		3626392	4					
ANR	3628006	Parameter	RBinFile * bf	3562:31:108709:108720	3626392	0	True				
ANR	3628007	ParameterType	RBinFile *		3626392	0					
ANR	3628008	Identifier	bf		3626392	1					
ANR	3628009	CFGEntryNode	ENTRY		3626392		True				
ANR	3628010	CFGExitNode	EXIT		3626392		True				
ANR	3628011	CFGErrorNode	ERROR		3626392		True				
ANR	3628012	Symbol	data		3626392						
ANR	3628013	Symbol	get_hdr		3626392						
ANR	3628014	Symbol	load_dylib		3626392						
ANR	3628015	Symbol	cb_printf		3626392						
ANR	3628016	Symbol	uuid		3626392						
ANR	3628017	Symbol	* words		3626392						
ANR	3628018	Symbol	bf -> buf		3626392						
ANR	3628019	Symbol	mh		3626392						
ANR	3628020	Symbol	pa2va		3626392						
ANR	3628021	Symbol	id		3626392						
ANR	3628022	Symbol	r_read_le32		3626392						
ANR	3628023	Symbol	ep		3626392						
ANR	3628024	Symbol	& data		3626392						
ANR	3628025	Symbol	* * bf		3626392						
ANR	3628026	Symbol	str_off		3626392						
ANR	3628027	Symbol	lcType		3626392						
ANR	3628028	Symbol	true		3626392						
ANR	3628029	Symbol	name		3626392						
ANR	3628030	Symbol	pvaddr		3626392						
ANR	3628031	Symbol	isBe		3626392						
ANR	3628032	Symbol	word		3626392						
ANR	3628033	Symbol	pf_definition		3626392						
ANR	3628034	Symbol	* bf -> rbin		3626392						
ANR	3628035	Symbol	* mh		3626392						
ANR	3628036	Symbol	bf		3626392						
ANR	3628037	Symbol	bf -> rbin		3626392						
ANR	3628038	Symbol	wordbuf		3626392						
ANR	3628039	Symbol	printf		3626392						
ANR	3628040	Symbol	* uuid		3626392						
ANR	3628041	Symbol	bf -> rbin -> cb_printf		3626392						
ANR	3628042	Symbol	mach_header		3626392						
ANR	3628043	Symbol	is64		3626392						
ANR	3628044	Symbol	nsects		3626392						
ANR	3628045	Symbol	addr		3626392						
ANR	3628046	Symbol	ss		3626392						
ANR	3628047	Symbol	mh -> cputype		3626392						
ANR	3628048	Symbol	ntools		3626392						
ANR	3628049	Symbol	r_buf_read_ble32_at		3626392						
ANR	3628050	Symbol	length		3626392						
ANR	3628051	Symbol	false		3626392						
ANR	3628052	Symbol	words		3626392						
ANR	3628053	Symbol	* bf		3626392						
ANR	3628054	Symbol	i		3626392						
ANR	3628055	Symbol	r_read_be32		3626392						
ANR	3628056	Symbol	rpath		3626392						
ANR	3628057	Symbol	n		3626392						
ANR	3628058	Symbol	mh -> ncmds		3626392						
ANR	3628059	Symbol	off		3626392						
ANR	3628060	Symbol	cmd_to_pf_definition		3626392						
ANR	3628061	Symbol	MACH0_		3626392						
ANR	3628062	Symbol	buf		3626392						
ANR	3628063	Symbol	* i		3626392						
ANR	3628064	Symbol	r_buf_read_at		3626392						
ANR	3628065	Symbol	r_buf_read_le32_at		3626392						
ANR	3628066	Symbol	r_buf_get_string		3626392						
ANR	3628067	Symbol	lcSize		3626392						
ANR	3628068	Symbol	r_buf_size		3626392						
ANR	3628069	Symbol	r_read_ble64		3626392						
ANR	3628070	Function	mach_fields	3784:7:116353:118741							
ANR	3628071	FunctionDef	mach_fields (RBinFile * bf)		3628070	0					
ANR	3628072	CompoundStatement		3784:41:116387:118741	3628070	0					
ANR	3628073	IdentifierDeclStatement	RBuffer * buf = bf -> buf ;	3785:1:116390:116412	3628070	0	True				
ANR	3628074	IdentifierDecl	* buf = bf -> buf		3628070	0					
ANR	3628075	IdentifierDeclType	RBuffer *		3628070	0					
ANR	3628076	Identifier	buf		3628070	1					
ANR	3628077	AssignmentExpression	* buf = bf -> buf		3628070	2		=			
ANR	3628078	Identifier	buf		3628070	0					
ANR	3628079	PtrMemberAccess	bf -> buf		3628070	1					
ANR	3628080	Identifier	bf		3628070	0					
ANR	3628081	Identifier	buf		3628070	1					
ANR	3628082	IdentifierDeclStatement	ut64 length = r_buf_size ( buf ) ;	3786:1:116415:116445	3628070	1	True				
ANR	3628083	IdentifierDecl	length = r_buf_size ( buf )		3628070	0					
ANR	3628084	IdentifierDeclType	ut64		3628070	0					
ANR	3628085	Identifier	length		3628070	1					
ANR	3628086	AssignmentExpression	length = r_buf_size ( buf )		3628070	2		=			
ANR	3628087	Identifier	length		3628070	0					
ANR	3628088	CallExpression	r_buf_size ( buf )		3628070	1					
ANR	3628089	Callee	r_buf_size		3628070	0					
ANR	3628090	Identifier	r_buf_size		3628070	0					
ANR	3628091	ArgumentList	buf		3628070	1					
ANR	3628092	Argument	buf		3628070	0					
ANR	3628093	Identifier	buf		3628070	0					
ANR	3628094	Statement	struct	3787:1:116448:116453	3628070	2	True				
ANR	3628095	ExpressionStatement	MACH0_ ( mach_header ) * mh = MACH0_ ( get_hdr ) ( buf )	3787:8:116455:116502	3628070	3	True				
ANR	3628096	AssignmentExpression	MACH0_ ( mach_header ) * mh = MACH0_ ( get_hdr ) ( buf )		3628070	0		=			
ANR	3628097	MultiplicativeExpression	MACH0_ ( mach_header ) * mh		3628070	0		*			
ANR	3628098	CallExpression	MACH0_ ( mach_header )		3628070	0					
ANR	3628099	Callee	MACH0_		3628070	0					
ANR	3628100	Identifier	MACH0_		3628070	0					
ANR	3628101	ArgumentList	mach_header		3628070	1					
ANR	3628102	Argument	mach_header		3628070	0					
ANR	3628103	Identifier	mach_header		3628070	0					
ANR	3628104	Identifier	mh		3628070	1					
ANR	3628105	CallExpression	MACH0_ ( get_hdr ) ( buf )		3628070	1					
ANR	3628106	Callee	MACH0_ ( get_hdr )		3628070	0					
ANR	3628107	CallExpression	MACH0_ ( get_hdr )		3628070	0					
ANR	3628108	Callee	MACH0_		3628070	0					
ANR	3628109	Identifier	MACH0_		3628070	0					
ANR	3628110	ArgumentList	get_hdr		3628070	1					
ANR	3628111	Argument	get_hdr		3628070	0					
ANR	3628112	Identifier	get_hdr		3628070	0					
ANR	3628113	ArgumentList	buf		3628070	1					
ANR	3628114	Argument	buf		3628070	0					
ANR	3628115	Identifier	buf		3628070	0					
ANR	3628116	IfStatement	if ( ! mh )		3628070	4					
ANR	3628117	Condition	! mh	3788:5:116509:116511	3628070	0	True				
ANR	3628118	UnaryOperationExpression	! mh		3628070	0					
ANR	3628119	UnaryOperator	!		3628070	0					
ANR	3628120	Identifier	mh		3628070	1					
ANR	3628121	CompoundStatement		5:10:126:126	3628070	1					
ANR	3628122	ReturnStatement	return NULL ;	3789:2:116518:116529	3628070	0	True				
ANR	3628123	Identifier	NULL		3628070	0					
ANR	3628124	IdentifierDeclStatement	RList * ret = r_list_new ( ) ;	3791:1:116535:116561	3628070	5	True				
ANR	3628125	IdentifierDecl	* ret = r_list_new ( )		3628070	0					
ANR	3628126	IdentifierDeclType	RList *		3628070	0					
ANR	3628127	Identifier	ret		3628070	1					
ANR	3628128	AssignmentExpression	* ret = r_list_new ( )		3628070	2		=			
ANR	3628129	Identifier	ret		3628070	0					
ANR	3628130	CallExpression	r_list_new ( )		3628070	1					
ANR	3628131	Callee	r_list_new		3628070	0					
ANR	3628132	Identifier	r_list_new		3628070	0					
ANR	3628133	ArgumentList			3628070	1					
ANR	3628134	IfStatement	if ( ! ret )		3628070	6					
ANR	3628135	Condition	! ret	3792:5:116568:116571	3628070	0	True				
ANR	3628136	UnaryOperationExpression	! ret		3628070	0					
ANR	3628137	UnaryOperator	!		3628070	0					
ANR	3628138	Identifier	ret		3628070	1					
ANR	3628139	CompoundStatement		9:11:186:186	3628070	1					
ANR	3628140	ExpressionStatement	free ( mh )	3793:2:116578:116587	3628070	0	True				
ANR	3628141	CallExpression	free ( mh )		3628070	0					
ANR	3628142	Callee	free		3628070	0					
ANR	3628143	Identifier	free		3628070	0					
ANR	3628144	ArgumentList	mh		3628070	1					
ANR	3628145	Argument	mh		3628070	0					
ANR	3628146	Identifier	mh		3628070	0					
ANR	3628147	ReturnStatement	return NULL ;	3794:2:116591:116602	3628070	1	True				
ANR	3628148	Identifier	NULL		3628070	0					
ANR	3628149	ExpressionStatement	ret -> free = free	3796:1:116608:116624	3628070	7	True				
ANR	3628150	AssignmentExpression	ret -> free = free		3628070	0		=			
ANR	3628151	PtrMemberAccess	ret -> free		3628070	0					
ANR	3628152	Identifier	ret		3628070	0					
ANR	3628153	Identifier	free		3628070	1					
ANR	3628154	Identifier	free		3628070	1					
ANR	3628155	IdentifierDeclStatement	"ut64 addr = pa2va ( bf , 0 ) ;"	3797:1:116627:116652	3628070	8	True				
ANR	3628156	IdentifierDecl	"addr = pa2va ( bf , 0 )"		3628070	0					
ANR	3628157	IdentifierDeclType	ut64		3628070	0					
ANR	3628158	Identifier	addr		3628070	1					
ANR	3628159	AssignmentExpression	"addr = pa2va ( bf , 0 )"		3628070	2		=			
ANR	3628160	Identifier	addr		3628070	0					
ANR	3628161	CallExpression	"pa2va ( bf , 0 )"		3628070	1					
ANR	3628162	Callee	pa2va		3628070	0					
ANR	3628163	Identifier	pa2va		3628070	0					
ANR	3628164	ArgumentList	bf		3628070	1					
ANR	3628165	Argument	bf		3628070	0					
ANR	3628166	Identifier	bf		3628070	0					
ANR	3628167	Argument	0		3628070	1					
ANR	3628168	PrimaryExpression	0		3628070	0					
ANR	3628169	IdentifierDeclStatement	ut64 paddr = 0 ;	3798:1:116655:116669	3628070	9	True				
ANR	3628170	IdentifierDecl	paddr = 0		3628070	0					
ANR	3628171	IdentifierDeclType	ut64		3628070	0					
ANR	3628172	Identifier	paddr		3628070	1					
ANR	3628173	AssignmentExpression	paddr = 0		3628070	2		=			
ANR	3628174	Identifier	paddr		3628070	0					
ANR	3628175	PrimaryExpression	0		3628070	1					
ANR	3628176	ExpressionStatement	"r_list_append ( ret , r_bin_field_new ( addr , addr , 1 , ""header"" , ""mach0_header"" , ""mach0_header"" ) )"	3800:1:116673:116767	3628070	10	True				
ANR	3628177	CallExpression	"r_list_append ( ret , r_bin_field_new ( addr , addr , 1 , ""header"" , ""mach0_header"" , ""mach0_header"" ) )"		3628070	0					
ANR	3628178	Callee	r_list_append		3628070	0					
ANR	3628179	Identifier	r_list_append		3628070	0					
ANR	3628180	ArgumentList	ret		3628070	1					
ANR	3628181	Argument	ret		3628070	0					
ANR	3628182	Identifier	ret		3628070	0					
ANR	3628183	Argument	"r_bin_field_new ( addr , addr , 1 , ""header"" , ""mach0_header"" , ""mach0_header"" )"		3628070	1					
ANR	3628184	CallExpression	"r_bin_field_new ( addr , addr , 1 , ""header"" , ""mach0_header"" , ""mach0_header"" )"		3628070	0					
ANR	3628185	Callee	r_bin_field_new		3628070	0					
ANR	3628186	Identifier	r_bin_field_new		3628070	0					
ANR	3628187	ArgumentList	addr		3628070	1					
ANR	3628188	Argument	addr		3628070	0					
ANR	3628189	Identifier	addr		3628070	0					
ANR	3628190	Argument	addr		3628070	1					
ANR	3628191	Identifier	addr		3628070	0					
ANR	3628192	Argument	1		3628070	2					
ANR	3628193	PrimaryExpression	1		3628070	0					
ANR	3628194	Argument	"""header"""		3628070	3					
ANR	3628195	PrimaryExpression	"""header"""		3628070	0					
ANR	3628196	Argument	"""mach0_header"""		3628070	4					
ANR	3628197	PrimaryExpression	"""mach0_header"""		3628070	0					
ANR	3628198	Argument	"""mach0_header"""		3628070	5					
ANR	3628199	PrimaryExpression	"""mach0_header"""		3628070	0					
ANR	3628200	ExpressionStatement	addr += 0x20 - 4	3801:1:116770:116786	3628070	11	True				
ANR	3628201	AssignmentExpression	addr += 0x20 - 4		3628070	0		+=			
ANR	3628202	Identifier	addr		3628070	0					
ANR	3628203	AdditiveExpression	0x20 - 4		3628070	1		-			
ANR	3628204	PrimaryExpression	0x20		3628070	0					
ANR	3628205	PrimaryExpression	4		3628070	1					
ANR	3628206	ExpressionStatement	paddr += 0x20 - 4	3802:1:116789:116806	3628070	12	True				
ANR	3628207	AssignmentExpression	paddr += 0x20 - 4		3628070	0		+=			
ANR	3628208	Identifier	paddr		3628070	0					
ANR	3628209	AdditiveExpression	0x20 - 4		3628070	1		-			
ANR	3628210	PrimaryExpression	0x20		3628070	0					
ANR	3628211	PrimaryExpression	4		3628070	1					
ANR	3628212	IdentifierDeclStatement	bool is64 = mh -> cputype >> 16 ;	3803:1:116809:116838	3628070	13	True				
ANR	3628213	IdentifierDecl	is64 = mh -> cputype >> 16		3628070	0					
ANR	3628214	IdentifierDeclType	bool		3628070	0					
ANR	3628215	Identifier	is64		3628070	1					
ANR	3628216	AssignmentExpression	is64 = mh -> cputype >> 16		3628070	2		=			
ANR	3628217	Identifier	is64		3628070	0					
ANR	3628218	ShiftExpression	mh -> cputype >> 16		3628070	1		>>			
ANR	3628219	PtrMemberAccess	mh -> cputype		3628070	0					
ANR	3628220	Identifier	mh		3628070	0					
ANR	3628221	Identifier	cputype		3628070	1					
ANR	3628222	PrimaryExpression	16		3628070	1					
ANR	3628223	IfStatement	if ( is64 )		3628070	14					
ANR	3628224	Condition	is64	3804:5:116845:116848	3628070	0	True				
ANR	3628225	Identifier	is64		3628070	0					
ANR	3628226	CompoundStatement		21:11:463:463	3628070	1					
ANR	3628227	ExpressionStatement	addr += 4	3805:2:116855:116864	3628070	0	True				
ANR	3628228	AssignmentExpression	addr += 4		3628070	0		+=			
ANR	3628229	Identifier	addr		3628070	0					
ANR	3628230	PrimaryExpression	4		3628070	1					
ANR	3628231	ExpressionStatement	paddr += 4	3806:2:116868:116878	3628070	1	True				
ANR	3628232	AssignmentExpression	paddr += 4		3628070	0		+=			
ANR	3628233	Identifier	paddr		3628070	0					
ANR	3628234	PrimaryExpression	4		3628070	1					
ANR	3628235	IdentifierDeclStatement	bool isBe = false ;	3809:1:116885:116902	3628070	15	True				
ANR	3628236	IdentifierDecl	isBe = false		3628070	0					
ANR	3628237	IdentifierDeclType	bool		3628070	0					
ANR	3628238	Identifier	isBe		3628070	1					
ANR	3628239	AssignmentExpression	isBe = false		3628070	2		=			
ANR	3628240	Identifier	false		3628070	0					
ANR	3628241	Identifier	false		3628070	1					
ANR	3628242	SwitchStatement	switch ( mh -> cputype )		3628070	16					
ANR	3628243	Condition	mh -> cputype	3810:9:116913:116923	3628070	0	True				
ANR	3628244	PtrMemberAccess	mh -> cputype		3628070	0					
ANR	3628245	Identifier	mh		3628070	0					
ANR	3628246	Identifier	cputype		3628070	1					
ANR	3628247	CompoundStatement		27:22:538:538	3628070	1					
ANR	3628248	Label	case CPU_TYPE_POWERPC :	3811:1:116929:116950	3628070	0	True				
ANR	3628249	Identifier	CPU_TYPE_POWERPC		3628070	0					
ANR	3628250	Label	case CPU_TYPE_POWERPC64 :	3812:1:116953:116976	3628070	1	True				
ANR	3628251	Identifier	CPU_TYPE_POWERPC64		3628070	0					
ANR	3628252	ExpressionStatement	isBe = true	3813:2:116980:116991	3628070	2	True				
ANR	3628253	AssignmentExpression	isBe = true		3628070	0		=			
ANR	3628254	Identifier	isBe		3628070	0					
ANR	3628255	Identifier	true		3628070	1					
ANR	3628256	BreakStatement	break ;	3814:2:116995:117000	3628070	3	True				
ANR	3628257	IdentifierDeclStatement	int n ;	3817:1:117007:117012	3628070	17	True				
ANR	3628258	IdentifierDecl	n		3628070	0					
ANR	3628259	IdentifierDeclType	int		3628070	0					
ANR	3628260	Identifier	n		3628070	1					
ANR	3628261	ForStatement	for ( n = 0 ; n < mh -> ncmds ; n ++ )		3628070	18					
ANR	3628262	ForInit	n = 0 ;	3818:6:117020:117025	3628070	0	True				
ANR	3628263	AssignmentExpression	n = 0		3628070	0		=			
ANR	3628264	Identifier	n		3628070	0					
ANR	3628265	PrimaryExpression	0		3628070	1					
ANR	3628266	Condition	n < mh -> ncmds	3818:13:117027:117039	3628070	1	True				
ANR	3628267	RelationalExpression	n < mh -> ncmds		3628070	0		<			
ANR	3628268	Identifier	n		3628070	0					
ANR	3628269	PtrMemberAccess	mh -> ncmds		3628070	1					
ANR	3628270	Identifier	mh		3628070	0					
ANR	3628271	Identifier	ncmds		3628070	1					
ANR	3628272	PostIncDecOperationExpression	n ++	3818:28:117042:117044	3628070	2	True				
ANR	3628273	Identifier	n		3628070	0					
ANR	3628274	IncDec	++		3628070	1					
ANR	3628275	CompoundStatement		47:2:945:1003	3628070	3					
ANR	3628276	IdentifierDeclStatement	"ut32 lcType = r_buf_read_ble32_at ( buf , paddr , isBe ) ;"	3819:2:117051:117103	3628070	0	True				
ANR	3628277	IdentifierDecl	"lcType = r_buf_read_ble32_at ( buf , paddr , isBe )"		3628070	0					
ANR	3628278	IdentifierDeclType	ut32		3628070	0					
ANR	3628279	Identifier	lcType		3628070	1					
ANR	3628280	AssignmentExpression	"lcType = r_buf_read_ble32_at ( buf , paddr , isBe )"		3628070	2		=			
ANR	3628281	Identifier	lcType		3628070	0					
ANR	3628282	CallExpression	"r_buf_read_ble32_at ( buf , paddr , isBe )"		3628070	1					
ANR	3628283	Callee	r_buf_read_ble32_at		3628070	0					
ANR	3628284	Identifier	r_buf_read_ble32_at		3628070	0					
ANR	3628285	ArgumentList	buf		3628070	1					
ANR	3628286	Argument	buf		3628070	0					
ANR	3628287	Identifier	buf		3628070	0					
ANR	3628288	Argument	paddr		3628070	1					
ANR	3628289	Identifier	paddr		3628070	0					
ANR	3628290	Argument	isBe		3628070	2					
ANR	3628291	Identifier	isBe		3628070	0					
ANR	3628292	IdentifierDeclStatement	"ut32 word = r_buf_read_ble32_at ( buf , paddr + 4 , isBe ) ;"	3820:2:117107:117161	3628070	1	True				
ANR	3628293	IdentifierDecl	"word = r_buf_read_ble32_at ( buf , paddr + 4 , isBe )"		3628070	0					
ANR	3628294	IdentifierDeclType	ut32		3628070	0					
ANR	3628295	Identifier	word		3628070	1					
ANR	3628296	AssignmentExpression	"word = r_buf_read_ble32_at ( buf , paddr + 4 , isBe )"		3628070	2		=			
ANR	3628297	Identifier	word		3628070	0					
ANR	3628298	CallExpression	"r_buf_read_ble32_at ( buf , paddr + 4 , isBe )"		3628070	1					
ANR	3628299	Callee	r_buf_read_ble32_at		3628070	0					
ANR	3628300	Identifier	r_buf_read_ble32_at		3628070	0					
ANR	3628301	ArgumentList	buf		3628070	1					
ANR	3628302	Argument	buf		3628070	0					
ANR	3628303	Identifier	buf		3628070	0					
ANR	3628304	Argument	paddr + 4		3628070	1					
ANR	3628305	AdditiveExpression	paddr + 4		3628070	0		+			
ANR	3628306	Identifier	paddr		3628070	0					
ANR	3628307	PrimaryExpression	4		3628070	1					
ANR	3628308	Argument	isBe		3628070	2					
ANR	3628309	Identifier	isBe		3628070	0					
ANR	3628310	IfStatement	if ( paddr + 8 > length )		3628070	2					
ANR	3628311	Condition	paddr + 8 > length	3821:6:117169:117186	3628070	0	True				
ANR	3628312	RelationalExpression	paddr + 8 > length		3628070	0		>			
ANR	3628313	AdditiveExpression	paddr + 8		3628070	0		+			
ANR	3628314	Identifier	paddr		3628070	0					
ANR	3628315	PrimaryExpression	8		3628070	1					
ANR	3628316	Identifier	length		3628070	1					
ANR	3628317	CompoundStatement		38:26:801:801	3628070	1					
ANR	3628318	BreakStatement	break ;	3822:3:117194:117199	3628070	0	True				
ANR	3628319	IdentifierDeclStatement	ut32 lcSize = word ;	3824:2:117207:117225	3628070	3	True				
ANR	3628320	IdentifierDecl	lcSize = word		3628070	0					
ANR	3628321	IdentifierDeclType	ut32		3628070	0					
ANR	3628322	Identifier	lcSize		3628070	1					
ANR	3628323	AssignmentExpression	lcSize = word		3628070	2		=			
ANR	3628324	Identifier	word		3628070	0					
ANR	3628325	Identifier	word		3628070	1					
ANR	3628326	ExpressionStatement	word &= 0xFFFFFF	3825:2:117229:117245	3628070	4	True				
ANR	3628327	AssignmentExpression	word &= 0xFFFFFF		3628070	0		&=			
ANR	3628328	Identifier	word		3628070	0					
ANR	3628329	PrimaryExpression	0xFFFFFF		3628070	1					
ANR	3628330	IfStatement	if ( lcSize < 1 )		3628070	5					
ANR	3628331	Condition	lcSize < 1	3826:6:117253:117262	3628070	0	True				
ANR	3628332	RelationalExpression	lcSize < 1		3628070	0		<			
ANR	3628333	Identifier	lcSize		3628070	0					
ANR	3628334	PrimaryExpression	1		3628070	1					
ANR	3628335	CompoundStatement		43:18:877:877	3628070	1					
ANR	3628336	ExpressionStatement	"eprintf ( ""Invalid size for a load command\\n"" )"	3827:3:117270:117315	3628070	0	True				
ANR	3628337	CallExpression	"eprintf ( ""Invalid size for a load command\\n"" )"		3628070	0					
ANR	3628338	Callee	eprintf		3628070	0					
ANR	3628339	Identifier	eprintf		3628070	0					
ANR	3628340	ArgumentList	"""Invalid size for a load command\\n"""		3628070	1					
ANR	3628341	Argument	"""Invalid size for a load command\\n"""		3628070	0					
ANR	3628342	PrimaryExpression	"""Invalid size for a load command\\n"""		3628070	0					
ANR	3628343	BreakStatement	break ;	3828:3:117320:117325	3628070	1	True				
ANR	3628344	IdentifierDeclStatement	const char * pf_definition = cmd_to_pf_definition ( lcType ) ;	3830:2:117333:117391	3628070	6	True				
ANR	3628345	IdentifierDecl	* pf_definition = cmd_to_pf_definition ( lcType )		3628070	0					
ANR	3628346	IdentifierDeclType	const char *		3628070	0					
ANR	3628347	Identifier	pf_definition		3628070	1					
ANR	3628348	AssignmentExpression	* pf_definition = cmd_to_pf_definition ( lcType )		3628070	2		=			
ANR	3628349	Identifier	pf_definition		3628070	0					
ANR	3628350	CallExpression	cmd_to_pf_definition ( lcType )		3628070	1					
ANR	3628351	Callee	cmd_to_pf_definition		3628070	0					
ANR	3628352	Identifier	cmd_to_pf_definition		3628070	0					
ANR	3628353	ArgumentList	lcType		3628070	1					
ANR	3628354	Argument	lcType		3628070	0					
ANR	3628355	Identifier	lcType		3628070	0					
ANR	3628356	IfStatement	if ( pf_definition )		3628070	7					
ANR	3628357	Condition	pf_definition	3831:6:117399:117411	3628070	0	True				
ANR	3628358	Identifier	pf_definition		3628070	0					
ANR	3628359	CompoundStatement		48:21:1026:1026	3628070	1					
ANR	3628360	IfStatement	if ( lcType != LC_BUILD_VERSION )		3628070	0					
ANR	3628361	Condition	lcType != LC_BUILD_VERSION	3832:7:117423:117448	3628070	0	True				
ANR	3628362	EqualityExpression	lcType != LC_BUILD_VERSION		3628070	0		!=			
ANR	3628363	Identifier	lcType		3628070	0					
ANR	3628364	Identifier	LC_BUILD_VERSION		3628070	1					
ANR	3628365	CompoundStatement		49:35:1063:1063	3628070	1					
ANR	3628366	ExpressionStatement	"r_list_append ( ret , r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition ) )"	3833:4:117457:117598	3628070	0	True				
ANR	3628367	CallExpression	"r_list_append ( ret , r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition ) )"		3628070	0					
ANR	3628368	Callee	r_list_append		3628070	0					
ANR	3628369	Identifier	r_list_append		3628070	0					
ANR	3628370	ArgumentList	ret		3628070	1					
ANR	3628371	Argument	ret		3628070	0					
ANR	3628372	Identifier	ret		3628070	0					
ANR	3628373	Argument	"r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition )"		3628070	1					
ANR	3628374	CallExpression	"r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition )"		3628070	0					
ANR	3628375	Callee	r_bin_field_new		3628070	0					
ANR	3628376	Identifier	r_bin_field_new		3628070	0					
ANR	3628377	ArgumentList	addr		3628070	1					
ANR	3628378	Argument	addr		3628070	0					
ANR	3628379	Identifier	addr		3628070	0					
ANR	3628380	Argument	addr		3628070	1					
ANR	3628381	Identifier	addr		3628070	0					
ANR	3628382	Argument	1		3628070	2					
ANR	3628383	PrimaryExpression	1		3628070	0					
ANR	3628384	Argument	"sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) )"		3628070	3					
ANR	3628385	CallExpression	"sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) )"		3628070	0					
ANR	3628386	Callee	sdb_fmt		3628070	0					
ANR	3628387	Identifier	sdb_fmt		3628070	0					
ANR	3628388	ArgumentList	"""load_command_%d_%s"""		3628070	1					
ANR	3628389	Argument	"""load_command_%d_%s"""		3628070	0					
ANR	3628390	PrimaryExpression	"""load_command_%d_%s"""		3628070	0					
ANR	3628391	Argument	n		3628070	1					
ANR	3628392	Identifier	n		3628070	0					
ANR	3628393	Argument	cmd_to_string ( lcType )		3628070	2					
ANR	3628394	CallExpression	cmd_to_string ( lcType )		3628070	0					
ANR	3628395	Callee	cmd_to_string		3628070	0					
ANR	3628396	Identifier	cmd_to_string		3628070	0					
ANR	3628397	ArgumentList	lcType		3628070	1					
ANR	3628398	Argument	lcType		3628070	0					
ANR	3628399	Identifier	lcType		3628070	0					
ANR	3628400	Argument	pf_definition		3628070	4					
ANR	3628401	Identifier	pf_definition		3628070	0					
ANR	3628402	Argument	pf_definition		3628070	5					
ANR	3628403	Identifier	pf_definition		3628070	0					
ANR	3628404	ElseStatement	else		3628070	0					
ANR	3628405	CompoundStatement		51:10:1222:1222	3628070	0					
ANR	3628406	ExpressionStatement	"r_list_append ( ret , r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition ) )"	3835:4:117616:117757	3628070	0	True				
ANR	3628407	CallExpression	"r_list_append ( ret , r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition ) )"		3628070	0					
ANR	3628408	Callee	r_list_append		3628070	0					
ANR	3628409	Identifier	r_list_append		3628070	0					
ANR	3628410	ArgumentList	ret		3628070	1					
ANR	3628411	Argument	ret		3628070	0					
ANR	3628412	Identifier	ret		3628070	0					
ANR	3628413	Argument	"r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition )"		3628070	1					
ANR	3628414	CallExpression	"r_bin_field_new ( addr , addr , 1 , sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) ) , pf_definition , pf_definition )"		3628070	0					
ANR	3628415	Callee	r_bin_field_new		3628070	0					
ANR	3628416	Identifier	r_bin_field_new		3628070	0					
ANR	3628417	ArgumentList	addr		3628070	1					
ANR	3628418	Argument	addr		3628070	0					
ANR	3628419	Identifier	addr		3628070	0					
ANR	3628420	Argument	addr		3628070	1					
ANR	3628421	Identifier	addr		3628070	0					
ANR	3628422	Argument	1		3628070	2					
ANR	3628423	PrimaryExpression	1		3628070	0					
ANR	3628424	Argument	"sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) )"		3628070	3					
ANR	3628425	CallExpression	"sdb_fmt ( ""load_command_%d_%s"" , n , cmd_to_string ( lcType ) )"		3628070	0					
ANR	3628426	Callee	sdb_fmt		3628070	0					
ANR	3628427	Identifier	sdb_fmt		3628070	0					
ANR	3628428	ArgumentList	"""load_command_%d_%s"""		3628070	1					
ANR	3628429	Argument	"""load_command_%d_%s"""		3628070	0					
ANR	3628430	PrimaryExpression	"""load_command_%d_%s"""		3628070	0					
ANR	3628431	Argument	n		3628070	1					
ANR	3628432	Identifier	n		3628070	0					
ANR	3628433	Argument	cmd_to_string ( lcType )		3628070	2					
ANR	3628434	CallExpression	cmd_to_string ( lcType )		3628070	0					
ANR	3628435	Callee	cmd_to_string		3628070	0					
ANR	3628436	Identifier	cmd_to_string		3628070	0					
ANR	3628437	ArgumentList	lcType		3628070	1					
ANR	3628438	Argument	lcType		3628070	0					
ANR	3628439	Identifier	lcType		3628070	0					
ANR	3628440	Argument	pf_definition		3628070	4					
ANR	3628441	Identifier	pf_definition		3628070	0					
ANR	3628442	Argument	pf_definition		3628070	5					
ANR	3628443	Identifier	pf_definition		3628070	0					
ANR	3628444	SwitchStatement	switch ( lcType )		3628070	8					
ANR	3628445	Condition	lcType	3838:10:117778:117783	3628070	0	True				
ANR	3628446	Identifier	lcType		3628070	0					
ANR	3628447	CompoundStatement		55:18:1398:1398	3628070	1					
ANR	3628448	Label	case LC_BUILD_VERSION :	3839:2:117790:117811	3628070	0	True				
ANR	3628449	Identifier	LC_BUILD_VERSION		3628070	0					
ANR	3628450	CompoundStatement		59:3:1503:1512	3628070	1					
ANR	3628451	IdentifierDeclStatement	"ut32 ntools = r_buf_read_le32_at ( buf , paddr + 20 ) ;"	3840:3:117818:117868	3628070	0	True				
ANR	3628452	IdentifierDecl	"ntools = r_buf_read_le32_at ( buf , paddr + 20 )"		3628070	0					
ANR	3628453	IdentifierDeclType	ut32		3628070	0					
ANR	3628454	Identifier	ntools		3628070	1					
ANR	3628455	AssignmentExpression	"ntools = r_buf_read_le32_at ( buf , paddr + 20 )"		3628070	2		=			
ANR	3628456	Identifier	ntools		3628070	0					
ANR	3628457	CallExpression	"r_buf_read_le32_at ( buf , paddr + 20 )"		3628070	1					
ANR	3628458	Callee	r_buf_read_le32_at		3628070	0					
ANR	3628459	Identifier	r_buf_read_le32_at		3628070	0					
ANR	3628460	ArgumentList	buf		3628070	1					
ANR	3628461	Argument	buf		3628070	0					
ANR	3628462	Identifier	buf		3628070	0					
ANR	3628463	Argument	paddr + 20		3628070	1					
ANR	3628464	AdditiveExpression	paddr + 20		3628070	0		+			
ANR	3628465	Identifier	paddr		3628070	0					
ANR	3628466	PrimaryExpression	20		3628070	1					
ANR	3628467	IdentifierDeclStatement	ut64 off = 24 ;	3841:3:117873:117886	3628070	1	True				
ANR	3628468	IdentifierDecl	off = 24		3628070	0					
ANR	3628469	IdentifierDeclType	ut64		3628070	0					
ANR	3628470	Identifier	off		3628070	1					
ANR	3628471	AssignmentExpression	off = 24		3628070	2		=			
ANR	3628472	Identifier	off		3628070	0					
ANR	3628473	PrimaryExpression	24		3628070	1					
ANR	3628474	IdentifierDeclStatement	int j = 0 ;	3842:3:117891:117900	3628070	2	True				
ANR	3628475	IdentifierDecl	j = 0		3628070	0					
ANR	3628476	IdentifierDeclType	int		3628070	0					
ANR	3628477	Identifier	j		3628070	1					
ANR	3628478	AssignmentExpression	j = 0		3628070	2		=			
ANR	3628479	Identifier	j		3628070	0					
ANR	3628480	PrimaryExpression	0		3628070	1					
ANR	3628481	WhileStatement	while ( off < lcSize && ntools -- )		3628070	3					
ANR	3628482	Condition	off < lcSize && ntools --	3843:10:117912:117935	3628070	0	True				
ANR	3628483	AndExpression	off < lcSize && ntools --		3628070	0		&&			
ANR	3628484	RelationalExpression	off < lcSize		3628070	0		<			
ANR	3628485	Identifier	off		3628070	0					
ANR	3628486	Identifier	lcSize		3628070	1					
ANR	3628487	PostIncDecOperationExpression	ntools --		3628070	1					
ANR	3628488	Identifier	ntools		3628070	0					
ANR	3628489	IncDec	--		3628070	1					
ANR	3628490	CompoundStatement		60:36:1550:1550	3628070	1					
ANR	3628491	ExpressionStatement	"r_list_append ( ret , r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""tool_%d"" , j ++ ) , ""mach0_build_version_tool"" , ""mach0_build_version_tool"" ) )"	3844:4:117944:118090	3628070	0	True				
ANR	3628492	CallExpression	"r_list_append ( ret , r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""tool_%d"" , j ++ ) , ""mach0_build_version_tool"" , ""mach0_build_version_tool"" ) )"		3628070	0					
ANR	3628493	Callee	r_list_append		3628070	0					
ANR	3628494	Identifier	r_list_append		3628070	0					
ANR	3628495	ArgumentList	ret		3628070	1					
ANR	3628496	Argument	ret		3628070	0					
ANR	3628497	Identifier	ret		3628070	0					
ANR	3628498	Argument	"r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""tool_%d"" , j ++ ) , ""mach0_build_version_tool"" , ""mach0_build_version_tool"" )"		3628070	1					
ANR	3628499	CallExpression	"r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""tool_%d"" , j ++ ) , ""mach0_build_version_tool"" , ""mach0_build_version_tool"" )"		3628070	0					
ANR	3628500	Callee	r_bin_field_new		3628070	0					
ANR	3628501	Identifier	r_bin_field_new		3628070	0					
ANR	3628502	ArgumentList	addr + off		3628070	1					
ANR	3628503	Argument	addr + off		3628070	0					
ANR	3628504	AdditiveExpression	addr + off		3628070	0		+			
ANR	3628505	Identifier	addr		3628070	0					
ANR	3628506	Identifier	off		3628070	1					
ANR	3628507	Argument	addr + off		3628070	1					
ANR	3628508	AdditiveExpression	addr + off		3628070	0		+			
ANR	3628509	Identifier	addr		3628070	0					
ANR	3628510	Identifier	off		3628070	1					
ANR	3628511	Argument	1		3628070	2					
ANR	3628512	PrimaryExpression	1		3628070	0					
ANR	3628513	Argument	"sdb_fmt ( ""tool_%d"" , j ++ )"		3628070	3					
ANR	3628514	CallExpression	"sdb_fmt ( ""tool_%d"" , j ++ )"		3628070	0					
ANR	3628515	Callee	sdb_fmt		3628070	0					
ANR	3628516	Identifier	sdb_fmt		3628070	0					
ANR	3628517	ArgumentList	"""tool_%d"""		3628070	1					
ANR	3628518	Argument	"""tool_%d"""		3628070	0					
ANR	3628519	PrimaryExpression	"""tool_%d"""		3628070	0					
ANR	3628520	Argument	j ++		3628070	1					
ANR	3628521	PostIncDecOperationExpression	j ++		3628070	0					
ANR	3628522	Identifier	j		3628070	0					
ANR	3628523	IncDec	++		3628070	1					
ANR	3628524	Argument	"""mach0_build_version_tool"""		3628070	4					
ANR	3628525	PrimaryExpression	"""mach0_build_version_tool"""		3628070	0					
ANR	3628526	Argument	"""mach0_build_version_tool"""		3628070	5					
ANR	3628527	PrimaryExpression	"""mach0_build_version_tool"""		3628070	0					
ANR	3628528	ExpressionStatement	off += 8	3845:4:118096:118104	3628070	1	True				
ANR	3628529	AssignmentExpression	off += 8		3628070	0		+=			
ANR	3628530	Identifier	off		3628070	0					
ANR	3628531	PrimaryExpression	8		3628070	1					
ANR	3628532	BreakStatement	break ;	3847:3:118114:118119	3628070	4	True				
ANR	3628533	Label	case LC_SEGMENT :	3849:2:118127:118142	3628070	2	True				
ANR	3628534	Identifier	LC_SEGMENT		3628070	0					
ANR	3628535	Label	case LC_SEGMENT_64 :	3850:2:118146:118164	3628070	3	True				
ANR	3628536	Identifier	LC_SEGMENT_64		3628070	0					
ANR	3628537	CompoundStatement		70:3:1881:1890	3628070	4					
ANR	3628538	IdentifierDeclStatement	"ut32 nsects = r_buf_read_le32_at ( buf , addr + ( is64 ? 64 : 48 ) ) ;"	3851:3:118171:118234	3628070	0	True				
ANR	3628539	IdentifierDecl	"nsects = r_buf_read_le32_at ( buf , addr + ( is64 ? 64 : 48 ) )"		3628070	0					
ANR	3628540	IdentifierDeclType	ut32		3628070	0					
ANR	3628541	Identifier	nsects		3628070	1					
ANR	3628542	AssignmentExpression	"nsects = r_buf_read_le32_at ( buf , addr + ( is64 ? 64 : 48 ) )"		3628070	2		=			
ANR	3628543	Identifier	nsects		3628070	0					
ANR	3628544	CallExpression	"r_buf_read_le32_at ( buf , addr + ( is64 ? 64 : 48 ) )"		3628070	1					
ANR	3628545	Callee	r_buf_read_le32_at		3628070	0					
ANR	3628546	Identifier	r_buf_read_le32_at		3628070	0					
ANR	3628547	ArgumentList	buf		3628070	1					
ANR	3628548	Argument	buf		3628070	0					
ANR	3628549	Identifier	buf		3628070	0					
ANR	3628550	Argument	addr + ( is64 ? 64 : 48 )		3628070	1					
ANR	3628551	AdditiveExpression	addr + ( is64 ? 64 : 48 )		3628070	0		+			
ANR	3628552	Identifier	addr		3628070	0					
ANR	3628553	ConditionalExpression	is64 ? 64 : 48		3628070	1					
ANR	3628554	Condition	is64		3628070	0					
ANR	3628555	Identifier	is64		3628070	0					
ANR	3628556	PrimaryExpression	64		3628070	1					
ANR	3628557	PrimaryExpression	48		3628070	2					
ANR	3628558	IdentifierDeclStatement	ut64 off = is64 ? 72 : 56 ;	3852:3:118239:118264	3628070	1	True				
ANR	3628559	IdentifierDecl	off = is64 ? 72 : 56		3628070	0					
ANR	3628560	IdentifierDeclType	ut64		3628070	0					
ANR	3628561	Identifier	off		3628070	1					
ANR	3628562	AssignmentExpression	off = is64 ? 72 : 56		3628070	2		=			
ANR	3628563	Identifier	off		3628070	0					
ANR	3628564	ConditionalExpression	is64 ? 72 : 56		3628070	1					
ANR	3628565	Condition	is64		3628070	0					
ANR	3628566	Identifier	is64		3628070	0					
ANR	3628567	PrimaryExpression	72		3628070	1					
ANR	3628568	PrimaryExpression	56		3628070	2					
ANR	3628569	IdentifierDeclStatement	int j = 0 ;	3853:3:118269:118278	3628070	2	True				
ANR	3628570	IdentifierDecl	j = 0		3628070	0					
ANR	3628571	IdentifierDeclType	int		3628070	0					
ANR	3628572	Identifier	j		3628070	1					
ANR	3628573	AssignmentExpression	j = 0		3628070	2		=			
ANR	3628574	Identifier	j		3628070	0					
ANR	3628575	PrimaryExpression	0		3628070	1					
ANR	3628576	WhileStatement	while ( off < lcSize && nsects -- )		3628070	3					
ANR	3628577	Condition	off < lcSize && nsects --	3854:10:118290:118313	3628070	0	True				
ANR	3628578	AndExpression	off < lcSize && nsects --		3628070	0		&&			
ANR	3628579	RelationalExpression	off < lcSize		3628070	0		<			
ANR	3628580	Identifier	off		3628070	0					
ANR	3628581	Identifier	lcSize		3628070	1					
ANR	3628582	PostIncDecOperationExpression	nsects --		3628070	1					
ANR	3628583	Identifier	nsects		3628070	0					
ANR	3628584	IncDec	--		3628070	1					
ANR	3628585	CompoundStatement		71:36:1928:1928	3628070	1					
ANR	3628586	IfStatement	if ( is64 )		3628070	0					
ANR	3628587	Condition	is64	3855:8:118326:118329	3628070	0	True				
ANR	3628588	Identifier	is64		3628070	0					
ANR	3628589	CompoundStatement		72:14:1944:1944	3628070	1					
ANR	3628590	ExpressionStatement	"r_list_append ( ret , r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section64"" , ""mach0_section64"" ) )"	3856:5:118339:118470	3628070	0	True				
ANR	3628591	CallExpression	"r_list_append ( ret , r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section64"" , ""mach0_section64"" ) )"		3628070	0					
ANR	3628592	Callee	r_list_append		3628070	0					
ANR	3628593	Identifier	r_list_append		3628070	0					
ANR	3628594	ArgumentList	ret		3628070	1					
ANR	3628595	Argument	ret		3628070	0					
ANR	3628596	Identifier	ret		3628070	0					
ANR	3628597	Argument	"r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section64"" , ""mach0_section64"" )"		3628070	1					
ANR	3628598	CallExpression	"r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section64"" , ""mach0_section64"" )"		3628070	0					
ANR	3628599	Callee	r_bin_field_new		3628070	0					
ANR	3628600	Identifier	r_bin_field_new		3628070	0					
ANR	3628601	ArgumentList	addr + off		3628070	1					
ANR	3628602	Argument	addr + off		3628070	0					
ANR	3628603	AdditiveExpression	addr + off		3628070	0		+			
ANR	3628604	Identifier	addr		3628070	0					
ANR	3628605	Identifier	off		3628070	1					
ANR	3628606	Argument	addr + off		3628070	1					
ANR	3628607	AdditiveExpression	addr + off		3628070	0		+			
ANR	3628608	Identifier	addr		3628070	0					
ANR	3628609	Identifier	off		3628070	1					
ANR	3628610	Argument	1		3628070	2					
ANR	3628611	PrimaryExpression	1		3628070	0					
ANR	3628612	Argument	"sdb_fmt ( ""section_%d"" , j ++ )"		3628070	3					
ANR	3628613	CallExpression	"sdb_fmt ( ""section_%d"" , j ++ )"		3628070	0					
ANR	3628614	Callee	sdb_fmt		3628070	0					
ANR	3628615	Identifier	sdb_fmt		3628070	0					
ANR	3628616	ArgumentList	"""section_%d"""		3628070	1					
ANR	3628617	Argument	"""section_%d"""		3628070	0					
ANR	3628618	PrimaryExpression	"""section_%d"""		3628070	0					
ANR	3628619	Argument	j ++		3628070	1					
ANR	3628620	PostIncDecOperationExpression	j ++		3628070	0					
ANR	3628621	Identifier	j		3628070	0					
ANR	3628622	IncDec	++		3628070	1					
ANR	3628623	Argument	"""mach0_section64"""		3628070	4					
ANR	3628624	PrimaryExpression	"""mach0_section64"""		3628070	0					
ANR	3628625	Argument	"""mach0_section64"""		3628070	5					
ANR	3628626	PrimaryExpression	"""mach0_section64"""		3628070	0					
ANR	3628627	ExpressionStatement	off += 80	3857:5:118477:118486	3628070	1	True				
ANR	3628628	AssignmentExpression	off += 80		3628070	0		+=			
ANR	3628629	Identifier	off		3628070	0					
ANR	3628630	PrimaryExpression	80		3628070	1					
ANR	3628631	ElseStatement	else		3628070	0					
ANR	3628632	CompoundStatement		75:11:2111:2111	3628070	0					
ANR	3628633	ExpressionStatement	"r_list_append ( ret , r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section"" , ""mach0_section"" ) )"	3859:5:118506:118633	3628070	0	True				
ANR	3628634	CallExpression	"r_list_append ( ret , r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section"" , ""mach0_section"" ) )"		3628070	0					
ANR	3628635	Callee	r_list_append		3628070	0					
ANR	3628636	Identifier	r_list_append		3628070	0					
ANR	3628637	ArgumentList	ret		3628070	1					
ANR	3628638	Argument	ret		3628070	0					
ANR	3628639	Identifier	ret		3628070	0					
ANR	3628640	Argument	"r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section"" , ""mach0_section"" )"		3628070	1					
ANR	3628641	CallExpression	"r_bin_field_new ( addr + off , addr + off , 1 , sdb_fmt ( ""section_%d"" , j ++ ) , ""mach0_section"" , ""mach0_section"" )"		3628070	0					
ANR	3628642	Callee	r_bin_field_new		3628070	0					
ANR	3628643	Identifier	r_bin_field_new		3628070	0					
ANR	3628644	ArgumentList	addr + off		3628070	1					
ANR	3628645	Argument	addr + off		3628070	0					
ANR	3628646	AdditiveExpression	addr + off		3628070	0		+			
ANR	3628647	Identifier	addr		3628070	0					
ANR	3628648	Identifier	off		3628070	1					
ANR	3628649	Argument	addr + off		3628070	1					
ANR	3628650	AdditiveExpression	addr + off		3628070	0		+			
ANR	3628651	Identifier	addr		3628070	0					
ANR	3628652	Identifier	off		3628070	1					
ANR	3628653	Argument	1		3628070	2					
ANR	3628654	PrimaryExpression	1		3628070	0					
ANR	3628655	Argument	"sdb_fmt ( ""section_%d"" , j ++ )"		3628070	3					
ANR	3628656	CallExpression	"sdb_fmt ( ""section_%d"" , j ++ )"		3628070	0					
ANR	3628657	Callee	sdb_fmt		3628070	0					
ANR	3628658	Identifier	sdb_fmt		3628070	0					
ANR	3628659	ArgumentList	"""section_%d"""		3628070	1					
ANR	3628660	Argument	"""section_%d"""		3628070	0					
ANR	3628661	PrimaryExpression	"""section_%d"""		3628070	0					
ANR	3628662	Argument	j ++		3628070	1					
ANR	3628663	PostIncDecOperationExpression	j ++		3628070	0					
ANR	3628664	Identifier	j		3628070	0					
ANR	3628665	IncDec	++		3628070	1					
ANR	3628666	Argument	"""mach0_section"""		3628070	4					
ANR	3628667	PrimaryExpression	"""mach0_section"""		3628070	0					
ANR	3628668	Argument	"""mach0_section"""		3628070	5					
ANR	3628669	PrimaryExpression	"""mach0_section"""		3628070	0					
ANR	3628670	ExpressionStatement	off += 68	3860:5:118640:118649	3628070	1	True				
ANR	3628671	AssignmentExpression	off += 68		3628070	0		+=			
ANR	3628672	Identifier	off		3628070	0					
ANR	3628673	PrimaryExpression	68		3628070	1					
ANR	3628674	BreakStatement	break ;	3863:3:118665:118670	3628070	4	True				
ANR	3628675	ExpressionStatement	addr += word	3866:2:118682:118694	3628070	9	True				
ANR	3628676	AssignmentExpression	addr += word		3628070	0		+=			
ANR	3628677	Identifier	addr		3628070	0					
ANR	3628678	Identifier	word		3628070	1					
ANR	3628679	ExpressionStatement	paddr += word	3867:2:118698:118711	3628070	10	True				
ANR	3628680	AssignmentExpression	paddr += word		3628070	0		+=			
ANR	3628681	Identifier	paddr		3628070	0					
ANR	3628682	Identifier	word		3628070	1					
ANR	3628683	ExpressionStatement	free ( mh )	3869:1:118717:118726	3628070	19	True				
ANR	3628684	CallExpression	free ( mh )		3628070	0					
ANR	3628685	Callee	free		3628070	0					
ANR	3628686	Identifier	free		3628070	0					
ANR	3628687	ArgumentList	mh		3628070	1					
ANR	3628688	Argument	mh		3628070	0					
ANR	3628689	Identifier	mh		3628070	0					
ANR	3628690	ReturnStatement	return ret ;	3870:1:118729:118739	3628070	20	True				
ANR	3628691	Identifier	ret		3628070	0					
ANR	3628692	ReturnType	MACH0_		3628070	1					
ANR	3628693	Identifier	( mach_fields )		3628070	2					
ANR	3628694	Identifier	mach_fields		3628070	3					
ANR	3628695	ParameterList	RBinFile * bf		3628070	4					
ANR	3628696	Parameter	RBinFile * bf	3784:27:116373:116384	3628070	0	True				
ANR	3628697	ParameterType	RBinFile *		3628070	0					
ANR	3628698	Identifier	bf		3628070	1					
ANR	3628699	CFGEntryNode	ENTRY		3628070		True				
ANR	3628700	CFGExitNode	EXIT		3628070		True				
ANR	3628701	Symbol	* mh		3628070						
ANR	3628702	Symbol	bf		3628070						
ANR	3628703	Symbol	get_hdr		3628070						
ANR	3628704	Symbol	* ret		3628070						
ANR	3628705	Symbol	ret -> free		3628070						
ANR	3628706	Symbol	bf -> buf		3628070						
ANR	3628707	Symbol	mach_header		3628070						
ANR	3628708	Symbol	is64		3628070						
ANR	3628709	Symbol	mh		3628070						
ANR	3628710	Symbol	pa2va		3628070						
ANR	3628711	Symbol	nsects		3628070						
ANR	3628712	Symbol	free		3628070						
ANR	3628713	Symbol	addr		3628070						
ANR	3628714	Symbol	sdb_fmt		3628070						
ANR	3628715	Symbol	cmd_to_string		3628070						
ANR	3628716	Symbol	ret		3628070						
ANR	3628717	Symbol	NULL		3628070						
ANR	3628718	Symbol	mh -> cputype		3628070						
ANR	3628719	Symbol	r_buf_read_ble32_at		3628070						
ANR	3628720	Symbol	ntools		3628070						
ANR	3628721	Symbol	length		3628070						
ANR	3628722	Symbol	false		3628070						
ANR	3628723	Symbol	* bf		3628070						
ANR	3628724	Symbol	r_bin_field_new		3628070						
ANR	3628725	Symbol	j		3628070						
ANR	3628726	Symbol	n		3628070						
ANR	3628727	Symbol	mh -> ncmds		3628070						
ANR	3628728	Symbol	off		3628070						
ANR	3628729	Symbol	cmd_to_pf_definition		3628070						
ANR	3628730	Symbol	MACH0_		3628070						
ANR	3628731	Symbol	LC_BUILD_VERSION		3628070						
ANR	3628732	Symbol	buf		3628070						
ANR	3628733	Symbol	paddr		3628070						
ANR	3628734	Symbol	lcType		3628070						
ANR	3628735	Symbol	true		3628070						
ANR	3628736	Symbol	r_buf_read_le32_at		3628070						
ANR	3628737	Symbol	isBe		3628070						
ANR	3628738	Symbol	word		3628070						
ANR	3628739	Symbol	lcSize		3628070						
ANR	3628740	Symbol	r_buf_size		3628070						
ANR	3628741	Symbol	pf_definition		3628070						
ANR	3628742	Symbol	r_list_new		3628070						
ANR	3628743	Function	get_hdr	3873:28:118772:120453							
ANR	3628744	FunctionDef	get_hdr (RBuffer * buf)		3628743	0					
ANR	3628745	CompoundStatement		3873:58:118802:120453	3628743	0					
ANR	3628746	IdentifierDeclStatement	ut8 magicbytes [ sizeof ( ut32 ) ] = { 0 } ;	3874:1:118805:118840	3628743	0	True				
ANR	3628747	IdentifierDecl	magicbytes [ sizeof ( ut32 ) ] = { 0 }		3628743	0					
ANR	3628748	IdentifierDeclType	ut8 [ sizeof ( ut32 ) ]		3628743	0					
ANR	3628749	Identifier	magicbytes		3628743	1					
ANR	3628750	SizeofExpression	sizeof ( ut32 )		3628743	2					
ANR	3628751	Sizeof	sizeof		3628743	0					
ANR	3628752	SizeofOperand	ut32		3628743	1					
ANR	3628753	AssignmentExpression	magicbytes [ sizeof ( ut32 ) ] = { 0 }		3628743	3		=			
ANR	3628754	Identifier	magicbytes		3628743	0					
ANR	3628755	InitializerList	0		3628743	1					
ANR	3628756	PrimaryExpression	0		3628743	0					
ANR	3628757	Statement	ut8	3875:1:118843:118845	3628743	1	True				
ANR	3628758	Statement	machohdrbytes	3875:5:118847:118859	3628743	2	True				
ANR	3628759	Statement	[	3875:18:118860:118860	3628743	3	True				
ANR	3628760	Statement	sizeof	3875:19:118861:118866	3628743	4	True				
ANR	3628761	Statement	(	3875:26:118868:118868	3628743	5	True				
ANR	3628762	Statement	struct	3875:27:118869:118874	3628743	6	True				
ANR	3628763	Statement	MACH0_	3875:34:118876:118881	3628743	7	True				
ANR	3628764	Statement	(	3875:40:118882:118882	3628743	8	True				
ANR	3628765	Statement	mach_header	3875:41:118883:118893	3628743	9	True				
ANR	3628766	Statement	)	3875:52:118894:118894	3628743	10	True				
ANR	3628767	Statement	)	3875:53:118895:118895	3628743	11	True				
ANR	3628768	Statement	]	3875:54:118896:118896	3628743	12	True				
ANR	3628769	Statement	=	3875:56:118898:118898	3628743	13	True				
ANR	3628770	CompoundStatement		3:58:97:97	3628743	14					
ANR	3628771	Statement	0	3875:59:118901:118901	3628743	0	True				
ANR	3628772	ExpressionStatement		3875:61:118903:118903	3628743	15	True				
ANR	3628773	IdentifierDeclStatement	int len ;	3876:1:118906:118913	3628743	16	True				
ANR	3628774	IdentifierDecl	len		3628743	0					
ANR	3628775	IdentifierDeclType	int		3628743	0					
ANR	3628776	Identifier	len		3628743	1					
ANR	3628777	Statement	struct	3877:1:118916:118921	3628743	17	True				
ANR	3628778	Statement	MACH0_	3877:8:118923:118928	3628743	18	True				
ANR	3628779	Statement	(	3877:14:118929:118929	3628743	19	True				
ANR	3628780	Statement	mach_header	3877:15:118930:118940	3628743	20	True				
ANR	3628781	Statement	)	3877:26:118941:118941	3628743	21	True				
ANR	3628782	Statement	*	3877:28:118943:118943	3628743	22	True				
ANR	3628783	Statement	macho_hdr	3877:29:118944:118952	3628743	23	True				
ANR	3628784	Statement	=	3877:39:118954:118954	3628743	24	True				
ANR	3628785	Statement	R_NEW0	3877:41:118956:118961	3628743	25	True				
ANR	3628786	Statement	(	3877:48:118963:118963	3628743	26	True				
ANR	3628787	Statement	struct	3877:49:118964:118969	3628743	27	True				
ANR	3628788	Statement	MACH0_	3877:56:118971:118976	3628743	28	True				
ANR	3628789	Statement	(	3877:62:118977:118977	3628743	29	True				
ANR	3628790	Statement	mach_header	3877:63:118978:118988	3628743	30	True				
ANR	3628791	Statement	)	3877:74:118989:118989	3628743	31	True				
ANR	3628792	Statement	)	3877:75:118990:118990	3628743	32	True				
ANR	3628793	ExpressionStatement		3877:76:118991:118991	3628743	33	True				
ANR	3628794	IdentifierDeclStatement	bool big_endian = false ;	3878:1:118994:119017	3628743	34	True				
ANR	3628795	IdentifierDecl	big_endian = false		3628743	0					
ANR	3628796	IdentifierDeclType	bool		3628743	0					
ANR	3628797	Identifier	big_endian		3628743	1					
ANR	3628798	AssignmentExpression	big_endian = false		3628743	2		=			
ANR	3628799	Identifier	false		3628743	0					
ANR	3628800	Identifier	false		3628743	1					
ANR	3628801	IfStatement	if ( ! macho_hdr )		3628743	35					
ANR	3628802	Condition	! macho_hdr	3879:5:119024:119033	3628743	0	True				
ANR	3628803	UnaryOperationExpression	! macho_hdr		3628743	0					
ANR	3628804	UnaryOperator	!		3628743	0					
ANR	3628805	Identifier	macho_hdr		3628743	1					
ANR	3628806	CompoundStatement		7:17:233:233	3628743	1					
ANR	3628807	ReturnStatement	return NULL ;	3880:2:119040:119051	3628743	0	True				
ANR	3628808	Identifier	NULL		3628743	0					
ANR	3628809	IfStatement	"if ( r_buf_read_at ( buf , 0 , magicbytes , 4 ) < 1 )"		3628743	36					
ANR	3628810	Condition	"r_buf_read_at ( buf , 0 , magicbytes , 4 ) < 1"	3882:5:119061:119101	3628743	0	True				
ANR	3628811	RelationalExpression	"r_buf_read_at ( buf , 0 , magicbytes , 4 ) < 1"		3628743	0		<			
ANR	3628812	CallExpression	"r_buf_read_at ( buf , 0 , magicbytes , 4 )"		3628743	0					
ANR	3628813	Callee	r_buf_read_at		3628743	0					
ANR	3628814	Identifier	r_buf_read_at		3628743	0					
ANR	3628815	ArgumentList	buf		3628743	1					
ANR	3628816	Argument	buf		3628743	0					
ANR	3628817	Identifier	buf		3628743	0					
ANR	3628818	Argument	0		3628743	1					
ANR	3628819	PrimaryExpression	0		3628743	0					
ANR	3628820	Argument	magicbytes		3628743	2					
ANR	3628821	Identifier	magicbytes		3628743	0					
ANR	3628822	Argument	4		3628743	3					
ANR	3628823	PrimaryExpression	4		3628743	0					
ANR	3628824	PrimaryExpression	1		3628743	1					
ANR	3628825	CompoundStatement		10:48:301:301	3628743	1					
ANR	3628826	ExpressionStatement	free ( macho_hdr )	3883:2:119108:119124	3628743	0	True				
ANR	3628827	CallExpression	free ( macho_hdr )		3628743	0					
ANR	3628828	Callee	free		3628743	0					
ANR	3628829	Identifier	free		3628743	0					
ANR	3628830	ArgumentList	macho_hdr		3628743	1					
ANR	3628831	Argument	macho_hdr		3628743	0					
ANR	3628832	Identifier	macho_hdr		3628743	0					
ANR	3628833	ReturnStatement	return false ;	3884:2:119128:119140	3628743	1	True				
ANR	3628834	Identifier	false		3628743	0					
ANR	3628835	IfStatement	if ( r_read_le32 ( magicbytes ) == 0xfeedface )		3628743	37					
ANR	3628836	Condition	r_read_le32 ( magicbytes ) == 0xfeedface	3887:5:119151:119188	3628743	0	True				
ANR	3628837	EqualityExpression	r_read_le32 ( magicbytes ) == 0xfeedface		3628743	0		==			
ANR	3628838	CallExpression	r_read_le32 ( magicbytes )		3628743	0					
ANR	3628839	Callee	r_read_le32		3628743	0					
ANR	3628840	Identifier	r_read_le32		3628743	0					
ANR	3628841	ArgumentList	magicbytes		3628743	1					
ANR	3628842	Argument	magicbytes		3628743	0					
ANR	3628843	Identifier	magicbytes		3628743	0					
ANR	3628844	PrimaryExpression	0xfeedface		3628743	1					
ANR	3628845	CompoundStatement		15:45:388:388	3628743	1					
ANR	3628846	ExpressionStatement	big_endian = false	3888:2:119195:119213	3628743	0	True				
ANR	3628847	AssignmentExpression	big_endian = false		3628743	0		=			
ANR	3628848	Identifier	big_endian		3628743	0					
ANR	3628849	Identifier	false		3628743	1					
ANR	3628850	ElseStatement	else		3628743	0					
ANR	3628851	IfStatement	if ( r_read_be32 ( magicbytes ) == 0xfeedface )		3628743	0					
ANR	3628852	Condition	r_read_be32 ( magicbytes ) == 0xfeedface	3889:12:119227:119264	3628743	0	True				
ANR	3628853	EqualityExpression	r_read_be32 ( magicbytes ) == 0xfeedface		3628743	0		==			
ANR	3628854	CallExpression	r_read_be32 ( magicbytes )		3628743	0					
ANR	3628855	Callee	r_read_be32		3628743	0					
ANR	3628856	Identifier	r_read_be32		3628743	0					
ANR	3628857	ArgumentList	magicbytes		3628743	1					
ANR	3628858	Argument	magicbytes		3628743	0					
ANR	3628859	Identifier	magicbytes		3628743	0					
ANR	3628860	PrimaryExpression	0xfeedface		3628743	1					
ANR	3628861	CompoundStatement		17:52:464:464	3628743	1					
ANR	3628862	ExpressionStatement	big_endian = true	3890:2:119271:119288	3628743	0	True				
ANR	3628863	AssignmentExpression	big_endian = true		3628743	0		=			
ANR	3628864	Identifier	big_endian		3628743	0					
ANR	3628865	Identifier	true		3628743	1					
ANR	3628866	ElseStatement	else		3628743	0					
ANR	3628867	IfStatement	if ( r_read_le32 ( magicbytes ) == FAT_MAGIC )		3628743	0					
ANR	3628868	Condition	r_read_le32 ( magicbytes ) == FAT_MAGIC	3891:12:119302:119338	3628743	0	True				
ANR	3628869	EqualityExpression	r_read_le32 ( magicbytes ) == FAT_MAGIC		3628743	0		==			
ANR	3628870	CallExpression	r_read_le32 ( magicbytes )		3628743	0					
ANR	3628871	Callee	r_read_le32		3628743	0					
ANR	3628872	Identifier	r_read_le32		3628743	0					
ANR	3628873	ArgumentList	magicbytes		3628743	1					
ANR	3628874	Argument	magicbytes		3628743	0					
ANR	3628875	Identifier	magicbytes		3628743	0					
ANR	3628876	Identifier	FAT_MAGIC		3628743	1					
ANR	3628877	CompoundStatement		19:51:538:538	3628743	1					
ANR	3628878	ExpressionStatement	big_endian = false	3892:2:119345:119363	3628743	0	True				
ANR	3628879	AssignmentExpression	big_endian = false		3628743	0		=			
ANR	3628880	Identifier	big_endian		3628743	0					
ANR	3628881	Identifier	false		3628743	1					
ANR	3628882	ElseStatement	else		3628743	0					
ANR	3628883	IfStatement	if ( r_read_be32 ( magicbytes ) == FAT_MAGIC )		3628743	0					
ANR	3628884	Condition	r_read_be32 ( magicbytes ) == FAT_MAGIC	3893:12:119377:119413	3628743	0	True				
ANR	3628885	EqualityExpression	r_read_be32 ( magicbytes ) == FAT_MAGIC		3628743	0		==			
ANR	3628886	CallExpression	r_read_be32 ( magicbytes )		3628743	0					
ANR	3628887	Callee	r_read_be32		3628743	0					
ANR	3628888	Identifier	r_read_be32		3628743	0					
ANR	3628889	ArgumentList	magicbytes		3628743	1					
ANR	3628890	Argument	magicbytes		3628743	0					
ANR	3628891	Identifier	magicbytes		3628743	0					
ANR	3628892	Identifier	FAT_MAGIC		3628743	1					
ANR	3628893	CompoundStatement		21:51:613:613	3628743	1					
ANR	3628894	ExpressionStatement	big_endian = true	3894:2:119420:119437	3628743	0	True				
ANR	3628895	AssignmentExpression	big_endian = true		3628743	0		=			
ANR	3628896	Identifier	big_endian		3628743	0					
ANR	3628897	Identifier	true		3628743	1					
ANR	3628898	ElseStatement	else		3628743	0					
ANR	3628899	IfStatement	if ( r_read_le32 ( magicbytes ) == 0xfeedfacf )		3628743	0					
ANR	3628900	Condition	r_read_le32 ( magicbytes ) == 0xfeedfacf	3895:12:119451:119488	3628743	0	True				
ANR	3628901	EqualityExpression	r_read_le32 ( magicbytes ) == 0xfeedfacf		3628743	0		==			
ANR	3628902	CallExpression	r_read_le32 ( magicbytes )		3628743	0					
ANR	3628903	Callee	r_read_le32		3628743	0					
ANR	3628904	Identifier	r_read_le32		3628743	0					
ANR	3628905	ArgumentList	magicbytes		3628743	1					
ANR	3628906	Argument	magicbytes		3628743	0					
ANR	3628907	Identifier	magicbytes		3628743	0					
ANR	3628908	PrimaryExpression	0xfeedfacf		3628743	1					
ANR	3628909	CompoundStatement		23:52:688:688	3628743	1					
ANR	3628910	ExpressionStatement	big_endian = false	3896:2:119495:119513	3628743	0	True				
ANR	3628911	AssignmentExpression	big_endian = false		3628743	0		=			
ANR	3628912	Identifier	big_endian		3628743	0					
ANR	3628913	Identifier	false		3628743	1					
ANR	3628914	ElseStatement	else		3628743	0					
ANR	3628915	IfStatement	if ( r_read_be32 ( magicbytes ) == 0xfeedfacf )		3628743	0					
ANR	3628916	Condition	r_read_be32 ( magicbytes ) == 0xfeedfacf	3897:12:119527:119564	3628743	0	True				
ANR	3628917	EqualityExpression	r_read_be32 ( magicbytes ) == 0xfeedfacf		3628743	0		==			
ANR	3628918	CallExpression	r_read_be32 ( magicbytes )		3628743	0					
ANR	3628919	Callee	r_read_be32		3628743	0					
ANR	3628920	Identifier	r_read_be32		3628743	0					
ANR	3628921	ArgumentList	magicbytes		3628743	1					
ANR	3628922	Argument	magicbytes		3628743	0					
ANR	3628923	Identifier	magicbytes		3628743	0					
ANR	3628924	PrimaryExpression	0xfeedfacf		3628743	1					
ANR	3628925	CompoundStatement		25:52:764:764	3628743	1					
ANR	3628926	ExpressionStatement	big_endian = true	3898:2:119571:119588	3628743	0	True				
ANR	3628927	AssignmentExpression	big_endian = true		3628743	0		=			
ANR	3628928	Identifier	big_endian		3628743	0					
ANR	3628929	Identifier	true		3628743	1					
ANR	3628930	ElseStatement	else		3628743	0					
ANR	3628931	CompoundStatement		27:8:795:795	3628743	0					
ANR	3628932	ExpressionStatement	free ( macho_hdr )	3902:2:119640:119656	3628743	0	True				
ANR	3628933	CallExpression	free ( macho_hdr )		3628743	0					
ANR	3628934	Callee	free		3628743	0					
ANR	3628935	Identifier	free		3628743	0					
ANR	3628936	ArgumentList	macho_hdr		3628743	1					
ANR	3628937	Argument	macho_hdr		3628743	0					
ANR	3628938	Identifier	macho_hdr		3628743	0					
ANR	3628939	ReturnStatement	return NULL ;	3903:2:119660:119671	3628743	1	True				
ANR	3628940	Identifier	NULL		3628743	0					
ANR	3628941	ExpressionStatement	"len = r_buf_read_at ( buf , 0 , machohdrbytes , sizeof ( machohdrbytes ) )"	3906:1:119684:119751	3628743	38	True				
ANR	3628942	AssignmentExpression	"len = r_buf_read_at ( buf , 0 , machohdrbytes , sizeof ( machohdrbytes ) )"		3628743	0		=			
ANR	3628943	Identifier	len		3628743	0					
ANR	3628944	CallExpression	"r_buf_read_at ( buf , 0 , machohdrbytes , sizeof ( machohdrbytes ) )"		3628743	1					
ANR	3628945	Callee	r_buf_read_at		3628743	0					
ANR	3628946	Identifier	r_buf_read_at		3628743	0					
ANR	3628947	ArgumentList	buf		3628743	1					
ANR	3628948	Argument	buf		3628743	0					
ANR	3628949	Identifier	buf		3628743	0					
ANR	3628950	Argument	0		3628743	1					
ANR	3628951	PrimaryExpression	0		3628743	0					
ANR	3628952	Argument	machohdrbytes		3628743	2					
ANR	3628953	Identifier	machohdrbytes		3628743	0					
ANR	3628954	Argument	sizeof ( machohdrbytes )		3628743	3					
ANR	3628955	SizeofExpression	sizeof ( machohdrbytes )		3628743	0					
ANR	3628956	Sizeof	sizeof		3628743	0					
ANR	3628957	SizeofOperand	machohdrbytes		3628743	1					
ANR	3628958	Statement	if	3907:1:119754:119755	3628743	39	True				
ANR	3628959	Statement	(	3907:4:119757:119757	3628743	40	True				
ANR	3628960	Statement	len	3907:5:119758:119760	3628743	41	True				
ANR	3628961	Statement	!=	3907:9:119762:119763	3628743	42	True				
ANR	3628962	Statement	sizeof	3907:12:119765:119770	3628743	43	True				
ANR	3628963	Statement	(	3907:19:119772:119772	3628743	44	True				
ANR	3628964	Statement	struct	3907:20:119773:119778	3628743	45	True				
ANR	3628965	Statement	MACH0_	3907:27:119780:119785	3628743	46	True				
ANR	3628966	Statement	(	3907:33:119786:119786	3628743	47	True				
ANR	3628967	Statement	mach_header	3907:34:119787:119797	3628743	48	True				
ANR	3628968	Statement	)	3907:45:119798:119798	3628743	49	True				
ANR	3628969	Statement	)	3907:46:119799:119799	3628743	50	True				
ANR	3628970	Statement	)	3907:47:119800:119800	3628743	51	True				
ANR	3628971	CompoundStatement		35:49:999:999	3628743	52					
ANR	3628972	ExpressionStatement	free ( macho_hdr )	3908:2:119806:119822	3628743	0	True				
ANR	3628973	CallExpression	free ( macho_hdr )		3628743	0					
ANR	3628974	Callee	free		3628743	0					
ANR	3628975	Identifier	free		3628743	0					
ANR	3628976	ArgumentList	macho_hdr		3628743	1					
ANR	3628977	Argument	macho_hdr		3628743	0					
ANR	3628978	Identifier	macho_hdr		3628743	0					
ANR	3628979	ReturnStatement	return NULL ;	3909:2:119826:119837	3628743	1	True				
ANR	3628980	Identifier	NULL		3628743	0					
ANR	3628981	ExpressionStatement	"macho_hdr -> magic = r_read_ble ( & machohdrbytes [ 0 ] , big_endian , 32 )"	3911:1:119843:119908	3628743	53	True				
ANR	3628982	AssignmentExpression	"macho_hdr -> magic = r_read_ble ( & machohdrbytes [ 0 ] , big_endian , 32 )"		3628743	0		=			
ANR	3628983	PtrMemberAccess	macho_hdr -> magic		3628743	0					
ANR	3628984	Identifier	macho_hdr		3628743	0					
ANR	3628985	Identifier	magic		3628743	1					
ANR	3628986	CallExpression	"r_read_ble ( & machohdrbytes [ 0 ] , big_endian , 32 )"		3628743	1					
ANR	3628987	Callee	r_read_ble		3628743	0					
ANR	3628988	Identifier	r_read_ble		3628743	0					
ANR	3628989	ArgumentList	& machohdrbytes [ 0 ]		3628743	1					
ANR	3628990	Argument	& machohdrbytes [ 0 ]		3628743	0					
ANR	3628991	UnaryOperationExpression	& machohdrbytes [ 0 ]		3628743	0					
ANR	3628992	UnaryOperator	&		3628743	0					
ANR	3628993	ArrayIndexing	machohdrbytes [ 0 ]		3628743	1					
ANR	3628994	Identifier	machohdrbytes		3628743	0					
ANR	3628995	PrimaryExpression	0		3628743	1					
ANR	3628996	Argument	big_endian		3628743	1					
ANR	3628997	Identifier	big_endian		3628743	0					
ANR	3628998	Argument	32		3628743	2					
ANR	3628999	PrimaryExpression	32		3628743	0					
ANR	3629000	ExpressionStatement	"macho_hdr -> cputype = r_read_ble ( & machohdrbytes [ 4 ] , big_endian , 32 )"	3912:1:119911:119978	3628743	54	True				
ANR	3629001	AssignmentExpression	"macho_hdr -> cputype = r_read_ble ( & machohdrbytes [ 4 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629002	PtrMemberAccess	macho_hdr -> cputype		3628743	0					
ANR	3629003	Identifier	macho_hdr		3628743	0					
ANR	3629004	Identifier	cputype		3628743	1					
ANR	3629005	CallExpression	"r_read_ble ( & machohdrbytes [ 4 ] , big_endian , 32 )"		3628743	1					
ANR	3629006	Callee	r_read_ble		3628743	0					
ANR	3629007	Identifier	r_read_ble		3628743	0					
ANR	3629008	ArgumentList	& machohdrbytes [ 4 ]		3628743	1					
ANR	3629009	Argument	& machohdrbytes [ 4 ]		3628743	0					
ANR	3629010	UnaryOperationExpression	& machohdrbytes [ 4 ]		3628743	0					
ANR	3629011	UnaryOperator	&		3628743	0					
ANR	3629012	ArrayIndexing	machohdrbytes [ 4 ]		3628743	1					
ANR	3629013	Identifier	machohdrbytes		3628743	0					
ANR	3629014	PrimaryExpression	4		3628743	1					
ANR	3629015	Argument	big_endian		3628743	1					
ANR	3629016	Identifier	big_endian		3628743	0					
ANR	3629017	Argument	32		3628743	2					
ANR	3629018	PrimaryExpression	32		3628743	0					
ANR	3629019	ExpressionStatement	"macho_hdr -> cpusubtype = r_read_ble ( & machohdrbytes [ 8 ] , big_endian , 32 )"	3913:1:119981:120051	3628743	55	True				
ANR	3629020	AssignmentExpression	"macho_hdr -> cpusubtype = r_read_ble ( & machohdrbytes [ 8 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629021	PtrMemberAccess	macho_hdr -> cpusubtype		3628743	0					
ANR	3629022	Identifier	macho_hdr		3628743	0					
ANR	3629023	Identifier	cpusubtype		3628743	1					
ANR	3629024	CallExpression	"r_read_ble ( & machohdrbytes [ 8 ] , big_endian , 32 )"		3628743	1					
ANR	3629025	Callee	r_read_ble		3628743	0					
ANR	3629026	Identifier	r_read_ble		3628743	0					
ANR	3629027	ArgumentList	& machohdrbytes [ 8 ]		3628743	1					
ANR	3629028	Argument	& machohdrbytes [ 8 ]		3628743	0					
ANR	3629029	UnaryOperationExpression	& machohdrbytes [ 8 ]		3628743	0					
ANR	3629030	UnaryOperator	&		3628743	0					
ANR	3629031	ArrayIndexing	machohdrbytes [ 8 ]		3628743	1					
ANR	3629032	Identifier	machohdrbytes		3628743	0					
ANR	3629033	PrimaryExpression	8		3628743	1					
ANR	3629034	Argument	big_endian		3628743	1					
ANR	3629035	Identifier	big_endian		3628743	0					
ANR	3629036	Argument	32		3628743	2					
ANR	3629037	PrimaryExpression	32		3628743	0					
ANR	3629038	ExpressionStatement	"macho_hdr -> filetype = r_read_ble ( & machohdrbytes [ 12 ] , big_endian , 32 )"	3914:1:120054:120123	3628743	56	True				
ANR	3629039	AssignmentExpression	"macho_hdr -> filetype = r_read_ble ( & machohdrbytes [ 12 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629040	PtrMemberAccess	macho_hdr -> filetype		3628743	0					
ANR	3629041	Identifier	macho_hdr		3628743	0					
ANR	3629042	Identifier	filetype		3628743	1					
ANR	3629043	CallExpression	"r_read_ble ( & machohdrbytes [ 12 ] , big_endian , 32 )"		3628743	1					
ANR	3629044	Callee	r_read_ble		3628743	0					
ANR	3629045	Identifier	r_read_ble		3628743	0					
ANR	3629046	ArgumentList	& machohdrbytes [ 12 ]		3628743	1					
ANR	3629047	Argument	& machohdrbytes [ 12 ]		3628743	0					
ANR	3629048	UnaryOperationExpression	& machohdrbytes [ 12 ]		3628743	0					
ANR	3629049	UnaryOperator	&		3628743	0					
ANR	3629050	ArrayIndexing	machohdrbytes [ 12 ]		3628743	1					
ANR	3629051	Identifier	machohdrbytes		3628743	0					
ANR	3629052	PrimaryExpression	12		3628743	1					
ANR	3629053	Argument	big_endian		3628743	1					
ANR	3629054	Identifier	big_endian		3628743	0					
ANR	3629055	Argument	32		3628743	2					
ANR	3629056	PrimaryExpression	32		3628743	0					
ANR	3629057	ExpressionStatement	"macho_hdr -> ncmds = r_read_ble ( & machohdrbytes [ 16 ] , big_endian , 32 )"	3915:1:120126:120192	3628743	57	True				
ANR	3629058	AssignmentExpression	"macho_hdr -> ncmds = r_read_ble ( & machohdrbytes [ 16 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629059	PtrMemberAccess	macho_hdr -> ncmds		3628743	0					
ANR	3629060	Identifier	macho_hdr		3628743	0					
ANR	3629061	Identifier	ncmds		3628743	1					
ANR	3629062	CallExpression	"r_read_ble ( & machohdrbytes [ 16 ] , big_endian , 32 )"		3628743	1					
ANR	3629063	Callee	r_read_ble		3628743	0					
ANR	3629064	Identifier	r_read_ble		3628743	0					
ANR	3629065	ArgumentList	& machohdrbytes [ 16 ]		3628743	1					
ANR	3629066	Argument	& machohdrbytes [ 16 ]		3628743	0					
ANR	3629067	UnaryOperationExpression	& machohdrbytes [ 16 ]		3628743	0					
ANR	3629068	UnaryOperator	&		3628743	0					
ANR	3629069	ArrayIndexing	machohdrbytes [ 16 ]		3628743	1					
ANR	3629070	Identifier	machohdrbytes		3628743	0					
ANR	3629071	PrimaryExpression	16		3628743	1					
ANR	3629072	Argument	big_endian		3628743	1					
ANR	3629073	Identifier	big_endian		3628743	0					
ANR	3629074	Argument	32		3628743	2					
ANR	3629075	PrimaryExpression	32		3628743	0					
ANR	3629076	ExpressionStatement	"macho_hdr -> sizeofcmds = r_read_ble ( & machohdrbytes [ 20 ] , big_endian , 32 )"	3916:1:120195:120266	3628743	58	True				
ANR	3629077	AssignmentExpression	"macho_hdr -> sizeofcmds = r_read_ble ( & machohdrbytes [ 20 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629078	PtrMemberAccess	macho_hdr -> sizeofcmds		3628743	0					
ANR	3629079	Identifier	macho_hdr		3628743	0					
ANR	3629080	Identifier	sizeofcmds		3628743	1					
ANR	3629081	CallExpression	"r_read_ble ( & machohdrbytes [ 20 ] , big_endian , 32 )"		3628743	1					
ANR	3629082	Callee	r_read_ble		3628743	0					
ANR	3629083	Identifier	r_read_ble		3628743	0					
ANR	3629084	ArgumentList	& machohdrbytes [ 20 ]		3628743	1					
ANR	3629085	Argument	& machohdrbytes [ 20 ]		3628743	0					
ANR	3629086	UnaryOperationExpression	& machohdrbytes [ 20 ]		3628743	0					
ANR	3629087	UnaryOperator	&		3628743	0					
ANR	3629088	ArrayIndexing	machohdrbytes [ 20 ]		3628743	1					
ANR	3629089	Identifier	machohdrbytes		3628743	0					
ANR	3629090	PrimaryExpression	20		3628743	1					
ANR	3629091	Argument	big_endian		3628743	1					
ANR	3629092	Identifier	big_endian		3628743	0					
ANR	3629093	Argument	32		3628743	2					
ANR	3629094	PrimaryExpression	32		3628743	0					
ANR	3629095	ExpressionStatement	"macho_hdr -> flags = r_read_ble ( & machohdrbytes [ 24 ] , big_endian , 32 )"	3917:1:120269:120335	3628743	59	True				
ANR	3629096	AssignmentExpression	"macho_hdr -> flags = r_read_ble ( & machohdrbytes [ 24 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629097	PtrMemberAccess	macho_hdr -> flags		3628743	0					
ANR	3629098	Identifier	macho_hdr		3628743	0					
ANR	3629099	Identifier	flags		3628743	1					
ANR	3629100	CallExpression	"r_read_ble ( & machohdrbytes [ 24 ] , big_endian , 32 )"		3628743	1					
ANR	3629101	Callee	r_read_ble		3628743	0					
ANR	3629102	Identifier	r_read_ble		3628743	0					
ANR	3629103	ArgumentList	& machohdrbytes [ 24 ]		3628743	1					
ANR	3629104	Argument	& machohdrbytes [ 24 ]		3628743	0					
ANR	3629105	UnaryOperationExpression	& machohdrbytes [ 24 ]		3628743	0					
ANR	3629106	UnaryOperator	&		3628743	0					
ANR	3629107	ArrayIndexing	machohdrbytes [ 24 ]		3628743	1					
ANR	3629108	Identifier	machohdrbytes		3628743	0					
ANR	3629109	PrimaryExpression	24		3628743	1					
ANR	3629110	Argument	big_endian		3628743	1					
ANR	3629111	Identifier	big_endian		3628743	0					
ANR	3629112	Argument	32		3628743	2					
ANR	3629113	PrimaryExpression	32		3628743	0					
ANR	3629114	ExpressionStatement	"macho_hdr -> reserved = r_read_ble ( & machohdrbytes [ 28 ] , big_endian , 32 )"	3919:1:120356:120425	3628743	60	True				
ANR	3629115	AssignmentExpression	"macho_hdr -> reserved = r_read_ble ( & machohdrbytes [ 28 ] , big_endian , 32 )"		3628743	0		=			
ANR	3629116	PtrMemberAccess	macho_hdr -> reserved		3628743	0					
ANR	3629117	Identifier	macho_hdr		3628743	0					
ANR	3629118	Identifier	reserved		3628743	1					
ANR	3629119	CallExpression	"r_read_ble ( & machohdrbytes [ 28 ] , big_endian , 32 )"		3628743	1					
ANR	3629120	Callee	r_read_ble		3628743	0					
ANR	3629121	Identifier	r_read_ble		3628743	0					
ANR	3629122	ArgumentList	& machohdrbytes [ 28 ]		3628743	1					
ANR	3629123	Argument	& machohdrbytes [ 28 ]		3628743	0					
ANR	3629124	UnaryOperationExpression	& machohdrbytes [ 28 ]		3628743	0					
ANR	3629125	UnaryOperator	&		3628743	0					
ANR	3629126	ArrayIndexing	machohdrbytes [ 28 ]		3628743	1					
ANR	3629127	Identifier	machohdrbytes		3628743	0					
ANR	3629128	PrimaryExpression	28		3628743	1					
ANR	3629129	Argument	big_endian		3628743	1					
ANR	3629130	Identifier	big_endian		3628743	0					
ANR	3629131	Argument	32		3628743	2					
ANR	3629132	PrimaryExpression	32		3628743	0					
ANR	3629133	ReturnStatement	return macho_hdr ;	3921:1:120435:120451	3628743	61	True				
ANR	3629134	Identifier	macho_hdr		3628743	0					
ANR	3629135	ReturnType	MACH0_		3628743	1					
ANR	3629136	Identifier	( get_hdr )		3628743	2					
ANR	3629137	Identifier	get_hdr		3628743	3					
ANR	3629138	ParameterList	RBuffer * buf		3628743	4					
ANR	3629139	Parameter	RBuffer * buf	3873:44:118788:118799	3628743	0	True				
ANR	3629140	ParameterType	RBuffer *		3628743	0					
ANR	3629141	Identifier	buf		3628743	1					
ANR	3629142	CFGEntryNode	ENTRY		3628743		True				
ANR	3629143	CFGExitNode	EXIT		3628743		True				
ANR	3629144	Symbol	macho_hdr -> sizeofcmds		3628743						
ANR	3629145	Symbol	FAT_MAGIC		3628743						
ANR	3629146	Symbol	macho_hdr -> magic		3628743						
ANR	3629147	Symbol	NULL		3628743						
ANR	3629148	Symbol	r_read_le32		3628743						
ANR	3629149	Symbol	* macho_hdr		3628743						
ANR	3629150	Symbol	false		3628743						
ANR	3629151	Symbol	macho_hdr -> ncmds		3628743						
ANR	3629152	Symbol	macho_hdr -> filetype		3628743						
ANR	3629153	Symbol	r_read_be32		3628743						
ANR	3629154	Symbol	buf		3628743						
ANR	3629155	Symbol	macho_hdr		3628743						
ANR	3629156	Symbol	len		3628743						
ANR	3629157	Symbol	big_endian		3628743						
ANR	3629158	Symbol	magicbytes		3628743						
ANR	3629159	Symbol	machohdrbytes		3628743						
ANR	3629160	Symbol	r_read_ble		3628743						
ANR	3629161	Symbol	r_buf_read_at		3628743						
ANR	3629162	Symbol	true		3628743						
ANR	3629163	Symbol	macho_hdr -> reserved		3628743						
ANR	3629164	Symbol	macho_hdr -> cputype		3628743						
ANR	3629165	Symbol	macho_hdr -> cpusubtype		3628743						
ANR	3629166	Symbol	macho_hdr -> flags		3628743						
