command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1444894	File	data/converged/CVE-2019-16718~_radare2/expressions.c								
ANR	1444895	DeclStmt									
ANR	1444896	Decl							int	"int ( const char * * p , char delimiter , int * valid , int level , int * check , int print_errors )"	do_rd_expr
ANR	1444897	Function	rd_number	41:0:1354:2150							
ANR	1444898	FunctionDef	"rd_number (const char * * p , const char * * endp , int base)"		1444897	0					
ANR	1444899	CompoundStatement		43:0:1421:2150	1444897	0					
ANR	1444900	IdentifierDeclStatement	"int result = 0 , i ;"	44:2:1425:1442	1444897	0	True				
ANR	1444901	IdentifierDecl	result = 0		1444897	0					
ANR	1444902	IdentifierDeclType	int		1444897	0					
ANR	1444903	Identifier	result		1444897	1					
ANR	1444904	AssignmentExpression	result = 0		1444897	2		=			
ANR	1444905	Identifier	result		1444897	0					
ANR	1444906	PrimaryExpression	0		1444897	1					
ANR	1444907	IdentifierDecl	i		1444897	1					
ANR	1444908	IdentifierDeclType	int		1444897	0					
ANR	1444909	Identifier	i		1444897	1					
ANR	1444910	IdentifierDeclStatement	"char * c , num [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"" ;"	45:2:1446:1501	1444897	1	True				
ANR	1444911	IdentifierDecl	* c		1444897	0					
ANR	1444912	IdentifierDeclType	char *		1444897	0					
ANR	1444913	Identifier	c		1444897	1					
ANR	1444914	IdentifierDecl	"num [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		1444897	1					
ANR	1444915	IdentifierDeclType	char [ ]		1444897	0					
ANR	1444916	Identifier	num		1444897	1					
ANR	1444917	AssignmentExpression	"num [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		1444897	2		=			
ANR	1444918	Identifier	num		1444897	0					
ANR	1444919	PrimaryExpression	"""0123456789abcdefghijklmnopqrstuvwxyz"""		1444897	1					
ANR	1444920	IfStatement	if ( verbose >= 6 )		1444897	2					
ANR	1444921	Condition	verbose >= 6	46:6:1509:1520	1444897	0	True				
ANR	1444922	RelationalExpression	verbose >= 6		1444897	0		>=			
ANR	1444923	Identifier	verbose		1444897	0					
ANR	1444924	PrimaryExpression	6		1444897	1					
ANR	1444925	Statement	fprintf	47:4:1527:1533	1444897	1	True				
ANR	1444926	Statement	(	47:12:1535:1535	1444897	3	True				
ANR	1444927	Statement	stderr	47:13:1536:1541	1444897	4	True				
ANR	1444928	Statement	","	47:19:1542:1542	1444897	5	True				
ANR	1444929	Statement	"""%5d (0x%04x): Starting to read number of base %d"""	47:21:1544:1593	1444897	6	True				
ANR	1444930	Statement	"""(string=%s).\\n"""	48:6:1601:1616	1444897	7	True				
ANR	1444931	Statement	","	48:22:1617:1617	1444897	8	True				
ANR	1444932	Statement	stack	48:24:1619:1623	1444897	9	True				
ANR	1444933	Statement	[	48:29:1624:1624	1444897	10	True				
ANR	1444934	Statement	sp	48:30:1625:1626	1444897	11	True				
ANR	1444935	Statement	]	48:32:1627:1627	1444897	12	True				
ANR	1444936	Statement	.	48:33:1628:1628	1444897	13	True				
ANR	1444937	Statement	line	48:34:1629:1632	1444897	14	True				
ANR	1444938	Statement	","	48:38:1633:1633	1444897	15	True				
ANR	1444939	Statement	addr	48:40:1635:1638	1444897	16	True				
ANR	1444940	Statement	","	48:44:1639:1639	1444897	17	True				
ANR	1444941	Statement	base	48:46:1641:1644	1444897	18	True				
ANR	1444942	Statement	","	48:50:1645:1645	1444897	19	True				
ANR	1444943	Statement	*	48:52:1647:1647	1444897	20	True				
ANR	1444944	Statement	p	48:53:1648:1648	1444897	21	True				
ANR	1444945	Statement	)	48:54:1649:1649	1444897	22	True				
ANR	1444946	ExpressionStatement		48:55:1650:1650	1444897	23	True				
ANR	1444947	ExpressionStatement	num [ base ] = '\\0'	49:2:1654:1670	1444897	24	True				
ANR	1444948	AssignmentExpression	num [ base ] = '\\0'		1444897	0		=			
ANR	1444949	ArrayIndexing	num [ base ]		1444897	0					
ANR	1444950	Identifier	num		1444897	0					
ANR	1444951	Identifier	base		1444897	1					
ANR	1444952	PrimaryExpression	'\\0'		1444897	1					
ANR	1444953	ExpressionStatement	* p = delspc ( * p )	50:2:1674:1690	1444897	25	True				
ANR	1444954	AssignmentExpression	* p = delspc ( * p )		1444897	0		=			
ANR	1444955	UnaryOperationExpression	* p		1444897	0					
ANR	1444956	UnaryOperator	*		1444897	0					
ANR	1444957	Identifier	p		1444897	1					
ANR	1444958	CallExpression	delspc ( * p )		1444897	1					
ANR	1444959	Callee	delspc		1444897	0					
ANR	1444960	Identifier	delspc		1444897	0					
ANR	1444961	ArgumentList	* p		1444897	1					
ANR	1444962	Argument	* p		1444897	0					
ANR	1444963	UnaryOperationExpression	* p		1444897	0					
ANR	1444964	UnaryOperator	*		1444897	0					
ANR	1444965	Identifier	p		1444897	1					
ANR	1444966	WhileStatement	"while ( * * p && ( c = strchr ( num , tolower ( ( const unsigned char ) * * p ) ) ) )"		1444897	26					
ANR	1444967	Condition	"* * p && ( c = strchr ( num , tolower ( ( const unsigned char ) * * p ) ) )"	51:9:1701:1761	1444897	0	True				
ANR	1444968	AndExpression	"* * p && ( c = strchr ( num , tolower ( ( const unsigned char ) * * p ) ) )"		1444897	0		&&			
ANR	1444969	UnaryOperationExpression	* * p		1444897	0					
ANR	1444970	UnaryOperator	*		1444897	0					
ANR	1444971	UnaryOperationExpression	* p		1444897	1					
ANR	1444972	UnaryOperator	*		1444897	0					
ANR	1444973	Identifier	p		1444897	1					
ANR	1444974	AssignmentExpression	"c = strchr ( num , tolower ( ( const unsigned char ) * * p ) )"		1444897	1		=			
ANR	1444975	Identifier	c		1444897	0					
ANR	1444976	CallExpression	"strchr ( num , tolower ( ( const unsigned char ) * * p ) )"		1444897	1					
ANR	1444977	Callee	strchr		1444897	0					
ANR	1444978	Identifier	strchr		1444897	0					
ANR	1444979	ArgumentList	num		1444897	1					
ANR	1444980	Argument	num		1444897	0					
ANR	1444981	Identifier	num		1444897	0					
ANR	1444982	Argument	tolower ( ( const unsigned char ) * * p )		1444897	1					
ANR	1444983	CallExpression	tolower ( ( const unsigned char ) * * p )		1444897	0					
ANR	1444984	Callee	tolower		1444897	0					
ANR	1444985	Identifier	tolower		1444897	0					
ANR	1444986	ArgumentList	( const unsigned char ) * * p		1444897	1					
ANR	1444987	Argument	( const unsigned char ) * * p		1444897	0					
ANR	1444988	CastExpression	( const unsigned char ) * * p		1444897	0					
ANR	1444989	CastTarget	const unsigned char		1444897	0					
ANR	1444990	UnaryOperationExpression	* * p		1444897	1					
ANR	1444991	UnaryOperator	*		1444897	0					
ANR	1444992	UnaryOperationExpression	* p		1444897	1					
ANR	1444993	UnaryOperator	*		1444897	0					
ANR	1444994	Identifier	p		1444897	1					
ANR	1444995	CompoundStatement		10:4:346:346	1444897	1					
ANR	1444996	ExpressionStatement	i = c - num	53:6:1776:1787	1444897	0	True				
ANR	1444997	AssignmentExpression	i = c - num		1444897	0		=			
ANR	1444998	Identifier	i		1444897	0					
ANR	1444999	AdditiveExpression	c - num		1444897	1		-			
ANR	1445000	Identifier	c		1444897	0					
ANR	1445001	Identifier	num		1444897	1					
ANR	1445002	IfStatement	if ( verbose >= 7 )		1444897	1					
ANR	1445003	Condition	verbose >= 7	54:10:1799:1810	1444897	0	True				
ANR	1445004	RelationalExpression	verbose >= 7		1444897	0		>=			
ANR	1445005	Identifier	verbose		1444897	0					
ANR	1445006	PrimaryExpression	7		1444897	1					
ANR	1445007	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Digit found:%1x.\\n"" , stack [ sp ] . line , addr , i )"	55:1:1814:1894	1444897	1	True				
ANR	1445008	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Digit found:%1x.\\n"" , stack [ sp ] . line , addr , i )"		1444897	0					
ANR	1445009	Callee	fprintf		1444897	0					
ANR	1445010	Identifier	fprintf		1444897	0					
ANR	1445011	ArgumentList	stderr		1444897	1					
ANR	1445012	Argument	stderr		1444897	0					
ANR	1445013	Identifier	stderr		1444897	0					
ANR	1445014	Argument	"""%5d (0x%04x): Digit found:%1x.\\n"""		1444897	1					
ANR	1445015	PrimaryExpression	"""%5d (0x%04x): Digit found:%1x.\\n"""		1444897	0					
ANR	1445016	Argument	stack [ sp ] . line		1444897	2					
ANR	1445017	MemberAccess	stack [ sp ] . line		1444897	0					
ANR	1445018	ArrayIndexing	stack [ sp ]		1444897	0					
ANR	1445019	Identifier	stack		1444897	0					
ANR	1445020	Identifier	sp		1444897	1					
ANR	1445021	Identifier	line		1444897	1					
ANR	1445022	Argument	addr		1444897	3					
ANR	1445023	Identifier	addr		1444897	0					
ANR	1445024	Argument	i		1444897	4					
ANR	1445025	Identifier	i		1444897	0					
ANR	1445026	ExpressionStatement	result = result * base + i	57:6:1902:1928	1444897	2	True				
ANR	1445027	AssignmentExpression	result = result * base + i		1444897	0		=			
ANR	1445028	Identifier	result		1444897	0					
ANR	1445029	AdditiveExpression	result * base + i		1444897	1		+			
ANR	1445030	MultiplicativeExpression	result * base		1444897	0		*			
ANR	1445031	Identifier	result		1444897	0					
ANR	1445032	Identifier	base		1444897	1					
ANR	1445033	Identifier	i		1444897	1					
ANR	1445034	ExpressionStatement	( * p ) ++	58:6:1936:1942	1444897	3	True				
ANR	1445035	PostIncDecOperationExpression	( * p ) ++		1444897	0					
ANR	1445036	UnaryOperationExpression	* p		1444897	0					
ANR	1445037	UnaryOperator	*		1444897	0					
ANR	1445038	Identifier	p		1444897	1					
ANR	1445039	IncDec	++		1444897	1					
ANR	1445040	IfStatement	if ( endp )		1444897	27					
ANR	1445041	Condition	endp	60:6:1956:1959	1444897	0	True				
ANR	1445042	Identifier	endp		1444897	0					
ANR	1445043	ExpressionStatement	* endp = * p	61:4:1966:1976	1444897	1	True				
ANR	1445044	AssignmentExpression	* endp = * p		1444897	0		=			
ANR	1445045	UnaryOperationExpression	* endp		1444897	0					
ANR	1445046	UnaryOperator	*		1444897	0					
ANR	1445047	Identifier	endp		1444897	1					
ANR	1445048	UnaryOperationExpression	* p		1444897	1					
ANR	1445049	UnaryOperator	*		1444897	0					
ANR	1445050	Identifier	p		1444897	1					
ANR	1445051	ExpressionStatement	* p = delspc ( * p )	62:2:1980:1996	1444897	28	True				
ANR	1445052	AssignmentExpression	* p = delspc ( * p )		1444897	0		=			
ANR	1445053	UnaryOperationExpression	* p		1444897	0					
ANR	1445054	UnaryOperator	*		1444897	0					
ANR	1445055	Identifier	p		1444897	1					
ANR	1445056	CallExpression	delspc ( * p )		1444897	1					
ANR	1445057	Callee	delspc		1444897	0					
ANR	1445058	Identifier	delspc		1444897	0					
ANR	1445059	ArgumentList	* p		1444897	1					
ANR	1445060	Argument	* p		1444897	0					
ANR	1445061	UnaryOperationExpression	* p		1444897	0					
ANR	1445062	UnaryOperator	*		1444897	0					
ANR	1445063	Identifier	p		1444897	1					
ANR	1445064	IfStatement	if ( verbose >= 7 )		1444897	29					
ANR	1445065	Condition	verbose >= 7	63:6:2004:2015	1444897	0	True				
ANR	1445066	RelationalExpression	verbose >= 7		1444897	0		>=			
ANR	1445067	Identifier	verbose		1444897	0					
ANR	1445068	PrimaryExpression	7		1444897	1					
ANR	1445069	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_number returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	64:4:2022:2131	1444897	1	True				
ANR	1445070	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_number returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1444897	0					
ANR	1445071	Callee	fprintf		1444897	0					
ANR	1445072	Identifier	fprintf		1444897	0					
ANR	1445073	ArgumentList	stderr		1444897	1					
ANR	1445074	Argument	stderr		1444897	0					
ANR	1445075	Identifier	stderr		1444897	0					
ANR	1445076	Argument	"""%5d (0x%04x): rd_number returned %d (%04x).\\n"""		1444897	1					
ANR	1445077	PrimaryExpression	"""%5d (0x%04x): rd_number returned %d (%04x).\\n"""		1444897	0					
ANR	1445078	Argument	stack [ sp ] . line		1444897	2					
ANR	1445079	MemberAccess	stack [ sp ] . line		1444897	0					
ANR	1445080	ArrayIndexing	stack [ sp ]		1444897	0					
ANR	1445081	Identifier	stack		1444897	0					
ANR	1445082	Identifier	sp		1444897	1					
ANR	1445083	Identifier	line		1444897	1					
ANR	1445084	Argument	addr		1444897	3					
ANR	1445085	Identifier	addr		1444897	0					
ANR	1445086	Argument	result		1444897	4					
ANR	1445087	Identifier	result		1444897	0					
ANR	1445088	Argument	result		1444897	5					
ANR	1445089	Identifier	result		1444897	0					
ANR	1445090	ReturnStatement	return result ;	66:2:2135:2148	1444897	30	True				
ANR	1445091	Identifier	result		1444897	0					
ANR	1445092	ReturnType	static int		1444897	1					
ANR	1445093	Identifier	rd_number		1444897	2					
ANR	1445094	ParameterList	"const char * * p , const char * * endp , int base"		1444897	3					
ANR	1445095	Parameter	const char * * p	42:11:1376:1389	1444897	0	True				
ANR	1445096	ParameterType	const char * *		1444897	0					
ANR	1445097	Identifier	p		1444897	1					
ANR	1445098	Parameter	const char * * endp	42:27:1392:1408	1444897	1	True				
ANR	1445099	ParameterType	const char * *		1444897	0					
ANR	1445100	Identifier	endp		1444897	1					
ANR	1445101	Parameter	int base	42:46:1411:1418	1444897	2	True				
ANR	1445102	ParameterType	int		1444897	0					
ANR	1445103	Identifier	base		1444897	1					
ANR	1445104	CFGEntryNode	ENTRY		1444897		True				
ANR	1445105	CFGExitNode	EXIT		1444897		True				
ANR	1445106	Symbol	* sp		1444897						
ANR	1445107	Symbol	stack		1444897						
ANR	1445108	Symbol	c		1444897						
ANR	1445109	Symbol	tolower		1444897						
ANR	1445110	Symbol	num		1444897						
ANR	1445111	Symbol	i		1444897						
ANR	1445112	Symbol	strchr		1444897						
ANR	1445113	Symbol	stderr		1444897						
ANR	1445114	Symbol	verbose		1444897						
ANR	1445115	Symbol	p		1444897						
ANR	1445116	Symbol	result		1444897						
ANR	1445117	Symbol	* num		1444897						
ANR	1445118	Symbol	* endp		1444897						
ANR	1445119	Symbol	* stack		1444897						
ANR	1445120	Symbol	endp		1444897						
ANR	1445121	Symbol	* p		1444897						
ANR	1445122	Symbol	stack [ sp ] . line		1444897						
ANR	1445123	Symbol	* base		1444897						
ANR	1445124	Symbol	* * p		1444897						
ANR	1445125	Symbol	addr		1444897						
ANR	1445126	Symbol	delspc		1444897						
ANR	1445127	Symbol	sp		1444897						
ANR	1445128	Symbol	base		1444897						
ANR	1445129	Function	rd_otherbasenumber	69:0:2153:2913							
ANR	1445130	FunctionDef	"rd_otherbasenumber (const char * * p , int * valid , int print_errors)"		1445129	0					
ANR	1445131	CompoundStatement		71:0:2230:2913	1445129	0					
ANR	1445132	IdentifierDeclStatement	char c ;	72:2:2234:2240	1445129	0	True				
ANR	1445133	IdentifierDecl	c		1445129	0					
ANR	1445134	IdentifierDeclType	char		1445129	0					
ANR	1445135	Identifier	c		1445129	1					
ANR	1445136	IfStatement	if ( verbose >= 6 )		1445129	1					
ANR	1445137	Condition	verbose >= 6	73:6:2248:2259	1445129	0	True				
ANR	1445138	RelationalExpression	verbose >= 6		1445129	0		>=			
ANR	1445139	Identifier	verbose		1445129	0					
ANR	1445140	PrimaryExpression	6		1445129	1					
ANR	1445141	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Starting to read basenumber (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"	74:4:2266:2380	1445129	1	True				
ANR	1445142	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Starting to read basenumber (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"		1445129	0					
ANR	1445143	Callee	fprintf		1445129	0					
ANR	1445144	Identifier	fprintf		1445129	0					
ANR	1445145	ArgumentList	stderr		1445129	1					
ANR	1445146	Argument	stderr		1445129	0					
ANR	1445147	Identifier	stderr		1445129	0					
ANR	1445148	Argument	"""%5d (0x%04x): Starting to read basenumber (string=%s).\\n"""		1445129	1					
ANR	1445149	PrimaryExpression	"""%5d (0x%04x): Starting to read basenumber (string=%s).\\n"""		1445129	0					
ANR	1445150	Argument	stack [ sp ] . line		1445129	2					
ANR	1445151	MemberAccess	stack [ sp ] . line		1445129	0					
ANR	1445152	ArrayIndexing	stack [ sp ]		1445129	0					
ANR	1445153	Identifier	stack		1445129	0					
ANR	1445154	Identifier	sp		1445129	1					
ANR	1445155	Identifier	line		1445129	1					
ANR	1445156	Argument	addr		1445129	3					
ANR	1445157	Identifier	addr		1445129	0					
ANR	1445158	Argument	* p		1445129	4					
ANR	1445159	UnaryOperationExpression	* p		1445129	0					
ANR	1445160	UnaryOperator	*		1445129	0					
ANR	1445161	Identifier	p		1445129	1					
ANR	1445162	ExpressionStatement	( * p ) ++	77:2:2384:2390	1445129	2	True				
ANR	1445163	PostIncDecOperationExpression	( * p ) ++		1445129	0					
ANR	1445164	UnaryOperationExpression	* p		1445129	0					
ANR	1445165	UnaryOperator	*		1445129	0					
ANR	1445166	Identifier	p		1445129	1					
ANR	1445167	IncDec	++		1445129	1					
ANR	1445168	IfStatement	if ( ! * * p )		1445129	3					
ANR	1445169	Condition	! * * p	78:6:2398:2401	1445129	0	True				
ANR	1445170	UnaryOperationExpression	! * * p		1445129	0					
ANR	1445171	UnaryOperator	!		1445129	0					
ANR	1445172	UnaryOperationExpression	* * p		1445129	1					
ANR	1445173	UnaryOperator	*		1445129	0					
ANR	1445174	UnaryOperationExpression	* p		1445129	1					
ANR	1445175	UnaryOperator	*		1445129	0					
ANR	1445176	Identifier	p		1445129	1					
ANR	1445177	CompoundStatement		9:4:177:177	1445129	1					
ANR	1445178	IfStatement	if ( valid )		1445129	0					
ANR	1445179	Condition	valid	80:10:2420:2424	1445129	0	True				
ANR	1445180	Identifier	valid		1445129	0					
ANR	1445181	ExpressionStatement	* valid = 0	81:1:2428:2438	1445129	1	True				
ANR	1445182	AssignmentExpression	* valid = 0		1445129	0		=			
ANR	1445183	UnaryOperationExpression	* valid		1445129	0					
ANR	1445184	UnaryOperator	*		1445129	0					
ANR	1445185	Identifier	valid		1445129	1					
ANR	1445186	PrimaryExpression	0		1445129	1					
ANR	1445187	ElseStatement	else		1445129	0					
ANR	1445188	IfStatement	if ( print_errors )		1445129	0					
ANR	1445189	Condition	print_errors	82:15:2455:2466	1445129	0	True				
ANR	1445190	Identifier	print_errors		1445129	0					
ANR	1445191	ExpressionStatement	"printerr ( 1 , ""unexpected end of line after `@'\\n"" )"	83:1:2470:2520	1445129	1	True				
ANR	1445192	CallExpression	"printerr ( 1 , ""unexpected end of line after `@'\\n"" )"		1445129	0					
ANR	1445193	Callee	printerr		1445129	0					
ANR	1445194	Identifier	printerr		1445129	0					
ANR	1445195	ArgumentList	1		1445129	1					
ANR	1445196	Argument	1		1445129	0					
ANR	1445197	PrimaryExpression	1		1445129	0					
ANR	1445198	Argument	"""unexpected end of line after `@'\\n"""		1445129	1					
ANR	1445199	PrimaryExpression	"""unexpected end of line after `@'\\n"""		1445129	0					
ANR	1445200	ReturnStatement	return 0 ;	84:6:2528:2536	1445129	1	True				
ANR	1445201	PrimaryExpression	0		1445129	0					
ANR	1445202	IfStatement	if ( * * p == '0' || ! isalnum ( ( const unsigned char ) * * p ) )		1445129	4					
ANR	1445203	Condition	* * p == '0' || ! isalnum ( ( const unsigned char ) * * p )	86:6:2550:2598	1445129	0	True				
ANR	1445204	OrExpression	* * p == '0' || ! isalnum ( ( const unsigned char ) * * p )		1445129	0		||			
ANR	1445205	EqualityExpression	* * p == '0'		1445129	0		==			
ANR	1445206	UnaryOperationExpression	* * p		1445129	0					
ANR	1445207	UnaryOperator	*		1445129	0					
ANR	1445208	UnaryOperationExpression	* p		1445129	1					
ANR	1445209	UnaryOperator	*		1445129	0					
ANR	1445210	Identifier	p		1445129	1					
ANR	1445211	PrimaryExpression	'0'		1445129	1					
ANR	1445212	UnaryOperationExpression	! isalnum ( ( const unsigned char ) * * p )		1445129	1					
ANR	1445213	UnaryOperator	!		1445129	0					
ANR	1445214	CallExpression	isalnum ( ( const unsigned char ) * * p )		1445129	1					
ANR	1445215	Callee	isalnum		1445129	0					
ANR	1445216	Identifier	isalnum		1445129	0					
ANR	1445217	ArgumentList	( const unsigned char ) * * p		1445129	1					
ANR	1445218	Argument	( const unsigned char ) * * p		1445129	0					
ANR	1445219	CastExpression	( const unsigned char ) * * p		1445129	0					
ANR	1445220	CastTarget	const unsigned char		1445129	0					
ANR	1445221	UnaryOperationExpression	* * p		1445129	1					
ANR	1445222	UnaryOperator	*		1445129	0					
ANR	1445223	UnaryOperationExpression	* p		1445129	1					
ANR	1445224	UnaryOperator	*		1445129	0					
ANR	1445225	Identifier	p		1445129	1					
ANR	1445226	CompoundStatement		17:4:374:374	1445129	1					
ANR	1445227	IfStatement	if ( valid )		1445129	0					
ANR	1445228	Condition	valid	88:10:2617:2621	1445129	0	True				
ANR	1445229	Identifier	valid		1445129	0					
ANR	1445230	ExpressionStatement	* valid = 0	89:1:2625:2635	1445129	1	True				
ANR	1445231	AssignmentExpression	* valid = 0		1445129	0		=			
ANR	1445232	UnaryOperationExpression	* valid		1445129	0					
ANR	1445233	UnaryOperator	*		1445129	0					
ANR	1445234	Identifier	valid		1445129	1					
ANR	1445235	PrimaryExpression	0		1445129	1					
ANR	1445236	ElseStatement	else		1445129	0					
ANR	1445237	IfStatement	if ( print_errors )		1445129	0					
ANR	1445238	Condition	print_errors	90:15:2652:2663	1445129	0	True				
ANR	1445239	Identifier	print_errors		1445129	0					
ANR	1445240	ExpressionStatement	"printerr ( 1 , ""base must be between 1 and z\\n"" )"	91:1:2667:2713	1445129	1	True				
ANR	1445241	CallExpression	"printerr ( 1 , ""base must be between 1 and z\\n"" )"		1445129	0					
ANR	1445242	Callee	printerr		1445129	0					
ANR	1445243	Identifier	printerr		1445129	0					
ANR	1445244	ArgumentList	1		1445129	1					
ANR	1445245	Argument	1		1445129	0					
ANR	1445246	PrimaryExpression	1		1445129	0					
ANR	1445247	Argument	"""base must be between 1 and z\\n"""		1445129	1					
ANR	1445248	PrimaryExpression	"""base must be between 1 and z\\n"""		1445129	0					
ANR	1445249	ReturnStatement	return 0 ;	92:6:2721:2729	1445129	1	True				
ANR	1445250	PrimaryExpression	0		1445129	0					
ANR	1445251	ExpressionStatement	c = * * p	94:2:2739:2746	1445129	5	True				
ANR	1445252	AssignmentExpression	c = * * p		1445129	0		=			
ANR	1445253	Identifier	c		1445129	0					
ANR	1445254	UnaryOperationExpression	* * p		1445129	1					
ANR	1445255	UnaryOperator	*		1445129	0					
ANR	1445256	UnaryOperationExpression	* p		1445129	1					
ANR	1445257	UnaryOperator	*		1445129	0					
ANR	1445258	Identifier	p		1445129	1					
ANR	1445259	ExpressionStatement	( * p ) ++	95:2:2750:2756	1445129	6	True				
ANR	1445260	PostIncDecOperationExpression	( * p ) ++		1445129	0					
ANR	1445261	UnaryOperationExpression	* p		1445129	0					
ANR	1445262	UnaryOperator	*		1445129	0					
ANR	1445263	Identifier	p		1445129	1					
ANR	1445264	IncDec	++		1445129	1					
ANR	1445265	IfStatement	if ( isalpha ( ( const unsigned char ) * * p ) )		1445129	7					
ANR	1445266	Condition	isalpha ( ( const unsigned char ) * * p )	96:6:2764:2797	1445129	0	True				
ANR	1445267	CallExpression	isalpha ( ( const unsigned char ) * * p )		1445129	0					
ANR	1445268	Callee	isalpha		1445129	0					
ANR	1445269	Identifier	isalpha		1445129	0					
ANR	1445270	ArgumentList	( const unsigned char ) * * p		1445129	1					
ANR	1445271	Argument	( const unsigned char ) * * p		1445129	0					
ANR	1445272	CastExpression	( const unsigned char ) * * p		1445129	0					
ANR	1445273	CastTarget	const unsigned char		1445129	0					
ANR	1445274	UnaryOperationExpression	* * p		1445129	1					
ANR	1445275	UnaryOperator	*		1445129	0					
ANR	1445276	UnaryOperationExpression	* p		1445129	1					
ANR	1445277	UnaryOperator	*		1445129	0					
ANR	1445278	Identifier	p		1445129	1					
ANR	1445279	ReturnStatement	"return rd_number ( p , NULL , tolower ( ( unsigned char ) c ) - 'a' + 1 ) ;"	97:4:2804:2868	1445129	1	True				
ANR	1445280	CallExpression	"rd_number ( p , NULL , tolower ( ( unsigned char ) c ) - 'a' + 1 )"		1445129	0					
ANR	1445281	Callee	rd_number		1445129	0					
ANR	1445282	Identifier	rd_number		1445129	0					
ANR	1445283	ArgumentList	p		1445129	1					
ANR	1445284	Argument	p		1445129	0					
ANR	1445285	Identifier	p		1445129	0					
ANR	1445286	Argument	NULL		1445129	1					
ANR	1445287	Identifier	NULL		1445129	0					
ANR	1445288	Argument	tolower ( ( unsigned char ) c ) - 'a' + 1		1445129	2					
ANR	1445289	AdditiveExpression	tolower ( ( unsigned char ) c ) - 'a' + 1		1445129	0		-			
ANR	1445290	CallExpression	tolower ( ( unsigned char ) c )		1445129	0					
ANR	1445291	Callee	tolower		1445129	0					
ANR	1445292	Identifier	tolower		1445129	0					
ANR	1445293	ArgumentList	( unsigned char ) c		1445129	1					
ANR	1445294	Argument	( unsigned char ) c		1445129	0					
ANR	1445295	CastExpression	( unsigned char ) c		1445129	0					
ANR	1445296	CastTarget	unsigned char		1445129	0					
ANR	1445297	Identifier	c		1445129	1					
ANR	1445298	AdditiveExpression	'a' + 1		1445129	1		+			
ANR	1445299	PrimaryExpression	'a'		1445129	0					
ANR	1445300	PrimaryExpression	1		1445129	1					
ANR	1445301	ReturnStatement	"return rd_number ( p , NULL , c - '0' + 1 ) ;"	98:2:2872:2911	1445129	8	True				
ANR	1445302	CallExpression	"rd_number ( p , NULL , c - '0' + 1 )"		1445129	0					
ANR	1445303	Callee	rd_number		1445129	0					
ANR	1445304	Identifier	rd_number		1445129	0					
ANR	1445305	ArgumentList	p		1445129	1					
ANR	1445306	Argument	p		1445129	0					
ANR	1445307	Identifier	p		1445129	0					
ANR	1445308	Argument	NULL		1445129	1					
ANR	1445309	Identifier	NULL		1445129	0					
ANR	1445310	Argument	c - '0' + 1		1445129	2					
ANR	1445311	AdditiveExpression	c - '0' + 1		1445129	0		-			
ANR	1445312	Identifier	c		1445129	0					
ANR	1445313	AdditiveExpression	'0' + 1		1445129	1		+			
ANR	1445314	PrimaryExpression	'0'		1445129	0					
ANR	1445315	PrimaryExpression	1		1445129	1					
ANR	1445316	ReturnType	static int		1445129	1					
ANR	1445317	Identifier	rd_otherbasenumber		1445129	2					
ANR	1445318	ParameterList	"const char * * p , int * valid , int print_errors"		1445129	3					
ANR	1445319	Parameter	const char * * p	70:20:2184:2197	1445129	0	True				
ANR	1445320	ParameterType	const char * *		1445129	0					
ANR	1445321	Identifier	p		1445129	1					
ANR	1445322	Parameter	int * valid	70:36:2200:2209	1445129	1	True				
ANR	1445323	ParameterType	int *		1445129	0					
ANR	1445324	Identifier	valid		1445129	1					
ANR	1445325	Parameter	int print_errors	70:48:2212:2227	1445129	2	True				
ANR	1445326	ParameterType	int		1445129	0					
ANR	1445327	Identifier	print_errors		1445129	1					
ANR	1445328	CFGEntryNode	ENTRY		1445129		True				
ANR	1445329	CFGExitNode	EXIT		1445129		True				
ANR	1445330	Symbol	* sp		1445129						
ANR	1445331	Symbol	isalpha		1445129						
ANR	1445332	Symbol	rd_number		1445129						
ANR	1445333	Symbol	stack		1445129						
ANR	1445334	Symbol	c		1445129						
ANR	1445335	Symbol	NULL		1445129						
ANR	1445336	Symbol	isalnum		1445129						
ANR	1445337	Symbol	tolower		1445129						
ANR	1445338	Symbol	* valid		1445129						
ANR	1445339	Symbol	stderr		1445129						
ANR	1445340	Symbol	verbose		1445129						
ANR	1445341	Symbol	p		1445129						
ANR	1445342	Symbol	valid		1445129						
ANR	1445343	Symbol	print_errors		1445129						
ANR	1445344	Symbol	* stack		1445129						
ANR	1445345	Symbol	* p		1445129						
ANR	1445346	Symbol	stack [ sp ] . line		1445129						
ANR	1445347	Symbol	* * p		1445129						
ANR	1445348	Symbol	addr		1445129						
ANR	1445349	Symbol	sp		1445129						
ANR	1445350	Function	rd_character	101:0:2916:4507							
ANR	1445351	FunctionDef	"rd_character (const char * * p , int * valid , int print_errors)"		1445350	0					
ANR	1445352	CompoundStatement		103:0:2987:4507	1445350	0					
ANR	1445353	IdentifierDeclStatement	int i ;	104:2:2991:2996	1445350	0	True				
ANR	1445354	IdentifierDecl	i		1445350	0					
ANR	1445355	IdentifierDeclType	int		1445350	0					
ANR	1445356	Identifier	i		1445350	1					
ANR	1445357	IfStatement	if ( verbose >= 6 )		1445350	1					
ANR	1445358	Condition	verbose >= 6	105:6:3004:3015	1445350	0	True				
ANR	1445359	RelationalExpression	verbose >= 6		1445350	0		>=			
ANR	1445360	Identifier	verbose		1445350	0					
ANR	1445361	PrimaryExpression	6		1445350	1					
ANR	1445362	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Starting to read character (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"	106:4:3022:3135	1445350	1	True				
ANR	1445363	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Starting to read character (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"		1445350	0					
ANR	1445364	Callee	fprintf		1445350	0					
ANR	1445365	Identifier	fprintf		1445350	0					
ANR	1445366	ArgumentList	stderr		1445350	1					
ANR	1445367	Argument	stderr		1445350	0					
ANR	1445368	Identifier	stderr		1445350	0					
ANR	1445369	Argument	"""%5d (0x%04x): Starting to read character (string=%s).\\n"""		1445350	1					
ANR	1445370	PrimaryExpression	"""%5d (0x%04x): Starting to read character (string=%s).\\n"""		1445350	0					
ANR	1445371	Argument	stack [ sp ] . line		1445350	2					
ANR	1445372	MemberAccess	stack [ sp ] . line		1445350	0					
ANR	1445373	ArrayIndexing	stack [ sp ]		1445350	0					
ANR	1445374	Identifier	stack		1445350	0					
ANR	1445375	Identifier	sp		1445350	1					
ANR	1445376	Identifier	line		1445350	1					
ANR	1445377	Argument	addr		1445350	3					
ANR	1445378	Identifier	addr		1445350	0					
ANR	1445379	Argument	* p		1445350	4					
ANR	1445380	UnaryOperationExpression	* p		1445350	0					
ANR	1445381	UnaryOperator	*		1445350	0					
ANR	1445382	Identifier	p		1445350	1					
ANR	1445383	ExpressionStatement	i = * * p	109:2:3139:3146	1445350	2	True				
ANR	1445384	AssignmentExpression	i = * * p		1445350	0		=			
ANR	1445385	Identifier	i		1445350	0					
ANR	1445386	UnaryOperationExpression	* * p		1445350	1					
ANR	1445387	UnaryOperator	*		1445350	0					
ANR	1445388	UnaryOperationExpression	* p		1445350	1					
ANR	1445389	UnaryOperator	*		1445350	0					
ANR	1445390	Identifier	p		1445350	1					
ANR	1445391	IfStatement	if ( ! i )		1445350	3					
ANR	1445392	Condition	! i	110:6:3154:3155	1445350	0	True				
ANR	1445393	UnaryOperationExpression	! i		1445350	0					
ANR	1445394	UnaryOperator	!		1445350	0					
ANR	1445395	Identifier	i		1445350	1					
ANR	1445396	CompoundStatement		9:4:174:174	1445350	1					
ANR	1445397	IfStatement	if ( valid )		1445350	0					
ANR	1445398	Condition	valid	112:10:3174:3178	1445350	0	True				
ANR	1445399	Identifier	valid		1445350	0					
ANR	1445400	ExpressionStatement	* valid = 0	113:1:3182:3192	1445350	1	True				
ANR	1445401	AssignmentExpression	* valid = 0		1445350	0		=			
ANR	1445402	UnaryOperationExpression	* valid		1445350	0					
ANR	1445403	UnaryOperator	*		1445350	0					
ANR	1445404	Identifier	valid		1445350	1					
ANR	1445405	PrimaryExpression	0		1445350	1					
ANR	1445406	ElseStatement	else		1445350	0					
ANR	1445407	IfStatement	if ( print_errors )		1445350	0					
ANR	1445408	Condition	print_errors	114:15:3209:3220	1445350	0	True				
ANR	1445409	Identifier	print_errors		1445350	0					
ANR	1445410	ExpressionStatement	"printerr ( 1 , ""unexpected end of line in string constant\\n"" )"	115:1:3224:3283	1445350	1	True				
ANR	1445411	CallExpression	"printerr ( 1 , ""unexpected end of line in string constant\\n"" )"		1445350	0					
ANR	1445412	Callee	printerr		1445350	0					
ANR	1445413	Identifier	printerr		1445350	0					
ANR	1445414	ArgumentList	1		1445350	1					
ANR	1445415	Argument	1		1445350	0					
ANR	1445416	PrimaryExpression	1		1445350	0					
ANR	1445417	Argument	"""unexpected end of line in string constant\\n"""		1445350	1					
ANR	1445418	PrimaryExpression	"""unexpected end of line in string constant\\n"""		1445350	0					
ANR	1445419	ReturnStatement	return 0 ;	116:6:3291:3299	1445350	1	True				
ANR	1445420	PrimaryExpression	0		1445350	0					
ANR	1445421	IfStatement	if ( i == '\\\\' )		1445350	4					
ANR	1445422	Condition	i == '\\\\'	118:6:3313:3321	1445350	0	True				
ANR	1445423	EqualityExpression	i == '\\\\'		1445350	0		==			
ANR	1445424	Identifier	i		1445350	0					
ANR	1445425	PrimaryExpression	'\\\\'		1445350	1					
ANR	1445426	CompoundStatement		17:4:340:340	1445350	1					
ANR	1445427	ExpressionStatement	( * p ) ++	120:6:3336:3342	1445350	0	True				
ANR	1445428	PostIncDecOperationExpression	( * p ) ++		1445350	0					
ANR	1445429	UnaryOperationExpression	* p		1445350	0					
ANR	1445430	UnaryOperator	*		1445350	0					
ANR	1445431	Identifier	p		1445350	1					
ANR	1445432	IncDec	++		1445350	1					
ANR	1445433	IfStatement	if ( * * p >= '0' && * * p <= '7' )		1445350	1					
ANR	1445434	Condition	* * p >= '0' && * * p <= '7'	121:10:3354:3377	1445350	0	True				
ANR	1445435	AndExpression	* * p >= '0' && * * p <= '7'		1445350	0		&&			
ANR	1445436	RelationalExpression	* * p >= '0'		1445350	0		>=			
ANR	1445437	UnaryOperationExpression	* * p		1445350	0					
ANR	1445438	UnaryOperator	*		1445350	0					
ANR	1445439	UnaryOperationExpression	* p		1445350	1					
ANR	1445440	UnaryOperator	*		1445350	0					
ANR	1445441	Identifier	p		1445350	1					
ANR	1445442	PrimaryExpression	'0'		1445350	1					
ANR	1445443	RelationalExpression	* * p <= '7'		1445350	1		<=			
ANR	1445444	UnaryOperationExpression	* * p		1445350	0					
ANR	1445445	UnaryOperator	*		1445350	0					
ANR	1445446	UnaryOperationExpression	* p		1445350	1					
ANR	1445447	UnaryOperator	*		1445350	0					
ANR	1445448	Identifier	p		1445350	1					
ANR	1445449	PrimaryExpression	'7'		1445350	1					
ANR	1445450	CompoundStatement		21:3:398:415	1445350	1					
ANR	1445451	IdentifierDeclStatement	"int b , num_digits ;"	123:3:3386:3403	1445350	0	True				
ANR	1445452	IdentifierDecl	b		1445350	0					
ANR	1445453	IdentifierDeclType	int		1445350	0					
ANR	1445454	Identifier	b		1445350	1					
ANR	1445455	IdentifierDecl	num_digits		1445350	1					
ANR	1445456	IdentifierDeclType	int		1445350	0					
ANR	1445457	Identifier	num_digits		1445350	1					
ANR	1445458	ExpressionStatement	i = 0	124:3:3408:3413	1445350	1	True				
ANR	1445459	AssignmentExpression	i = 0		1445350	0		=			
ANR	1445460	Identifier	i		1445350	0					
ANR	1445461	PrimaryExpression	0		1445350	1					
ANR	1445462	IfStatement	if ( ( * p ) [ 1 ] >= '0' && ( * p ) [ 1 ] <= '7' )		1445350	2					
ANR	1445463	Condition	( * p ) [ 1 ] >= '0' && ( * p ) [ 1 ] <= '7'	125:7:3422:3453	1445350	0	True				
ANR	1445464	AndExpression	( * p ) [ 1 ] >= '0' && ( * p ) [ 1 ] <= '7'		1445350	0		&&			
ANR	1445465	RelationalExpression	( * p ) [ 1 ] >= '0'		1445350	0		>=			
ANR	1445466	ArrayIndexing	( * p ) [ 1 ]		1445350	0					
ANR	1445467	UnaryOperationExpression	* p		1445350	0					
ANR	1445468	UnaryOperator	*		1445350	0					
ANR	1445469	Identifier	p		1445350	1					
ANR	1445470	PrimaryExpression	1		1445350	1					
ANR	1445471	PrimaryExpression	'0'		1445350	1					
ANR	1445472	RelationalExpression	( * p ) [ 1 ] <= '7'		1445350	1		<=			
ANR	1445473	ArrayIndexing	( * p ) [ 1 ]		1445350	0					
ANR	1445474	UnaryOperationExpression	* p		1445350	0					
ANR	1445475	UnaryOperator	*		1445350	0					
ANR	1445476	Identifier	p		1445350	1					
ANR	1445477	PrimaryExpression	1		1445350	1					
ANR	1445478	PrimaryExpression	'7'		1445350	1					
ANR	1445479	CompoundStatement		24:5:473:473	1445350	1					
ANR	1445480	IfStatement	if ( * * p <= '3' && ( * p ) [ 2 ] >= '0' && ( * p ) [ 2 ] <= '7' )		1445350	0					
ANR	1445481	Condition	* * p <= '3' && ( * p ) [ 2 ] >= '0' && ( * p ) [ 2 ] <= '7'	127:11:3474:3519	1445350	0	True				
ANR	1445482	AndExpression	* * p <= '3' && ( * p ) [ 2 ] >= '0' && ( * p ) [ 2 ] <= '7'		1445350	0		&&			
ANR	1445483	RelationalExpression	* * p <= '3'		1445350	0		<=			
ANR	1445484	UnaryOperationExpression	* * p		1445350	0					
ANR	1445485	UnaryOperator	*		1445350	0					
ANR	1445486	UnaryOperationExpression	* p		1445350	1					
ANR	1445487	UnaryOperator	*		1445350	0					
ANR	1445488	Identifier	p		1445350	1					
ANR	1445489	PrimaryExpression	'3'		1445350	1					
ANR	1445490	AndExpression	( * p ) [ 2 ] >= '0' && ( * p ) [ 2 ] <= '7'		1445350	1		&&			
ANR	1445491	RelationalExpression	( * p ) [ 2 ] >= '0'		1445350	0		>=			
ANR	1445492	ArrayIndexing	( * p ) [ 2 ]		1445350	0					
ANR	1445493	UnaryOperationExpression	* p		1445350	0					
ANR	1445494	UnaryOperator	*		1445350	0					
ANR	1445495	Identifier	p		1445350	1					
ANR	1445496	PrimaryExpression	2		1445350	1					
ANR	1445497	PrimaryExpression	'0'		1445350	1					
ANR	1445498	RelationalExpression	( * p ) [ 2 ] <= '7'		1445350	1		<=			
ANR	1445499	ArrayIndexing	( * p ) [ 2 ]		1445350	0					
ANR	1445500	UnaryOperationExpression	* p		1445350	0					
ANR	1445501	UnaryOperator	*		1445350	0					
ANR	1445502	Identifier	p		1445350	1					
ANR	1445503	PrimaryExpression	2		1445350	1					
ANR	1445504	PrimaryExpression	'7'		1445350	1					
ANR	1445505	ExpressionStatement	num_digits = 3	128:2:3524:3538	1445350	1	True				
ANR	1445506	AssignmentExpression	num_digits = 3		1445350	0		=			
ANR	1445507	Identifier	num_digits		1445350	0					
ANR	1445508	PrimaryExpression	3		1445350	1					
ANR	1445509	ElseStatement	else		1445350	0					
ANR	1445510	ExpressionStatement	num_digits = 2	130:2:3554:3568	1445350	0	True				
ANR	1445511	AssignmentExpression	num_digits = 2		1445350	0		=			
ANR	1445512	Identifier	num_digits		1445350	0					
ANR	1445513	PrimaryExpression	2		1445350	1					
ANR	1445514	ElseStatement	else		1445350	0					
ANR	1445515	ExpressionStatement	num_digits = 1	133:5:3590:3604	1445350	0	True				
ANR	1445516	AssignmentExpression	num_digits = 1		1445350	0		=			
ANR	1445517	Identifier	num_digits		1445350	0					
ANR	1445518	PrimaryExpression	1		1445350	1					
ANR	1445519	ForStatement	for ( b = 0 ; b < num_digits ; ++ b )		1445350	3					
ANR	1445520	ForInit	b = 0 ;	134:8:3614:3619	1445350	0	True				
ANR	1445521	AssignmentExpression	b = 0		1445350	0		=			
ANR	1445522	Identifier	b		1445350	0					
ANR	1445523	PrimaryExpression	0		1445350	1					
ANR	1445524	Condition	b < num_digits	134:15:3621:3634	1445350	1	True				
ANR	1445525	RelationalExpression	b < num_digits		1445350	0		<			
ANR	1445526	Identifier	b		1445350	0					
ANR	1445527	Identifier	num_digits		1445350	1					
ANR	1445528	UnaryExpression	++ b	134:31:3637:3639	1445350	2	True				
ANR	1445529	IncDec	++		1445350	0					
ANR	1445530	Identifier	b		1445350	1					
ANR	1445531	CompoundStatement		34:7:668:708	1445350	3					
ANR	1445532	IdentifierDeclStatement	int bit = ( * p ) [ num_digits - 1 - b ] - '0' ;	136:7:3656:3696	1445350	0	True				
ANR	1445533	IdentifierDecl	bit = ( * p ) [ num_digits - 1 - b ] - '0'		1445350	0					
ANR	1445534	IdentifierDeclType	int		1445350	0					
ANR	1445535	Identifier	bit		1445350	1					
ANR	1445536	AssignmentExpression	bit = ( * p ) [ num_digits - 1 - b ] - '0'		1445350	2		=			
ANR	1445537	Identifier	bit		1445350	0					
ANR	1445538	AdditiveExpression	( * p ) [ num_digits - 1 - b ] - '0'		1445350	1		-			
ANR	1445539	ArrayIndexing	( * p ) [ num_digits - 1 - b ]		1445350	0					
ANR	1445540	UnaryOperationExpression	* p		1445350	0					
ANR	1445541	UnaryOperator	*		1445350	0					
ANR	1445542	Identifier	p		1445350	1					
ANR	1445543	AdditiveExpression	num_digits - 1 - b		1445350	1		-			
ANR	1445544	Identifier	num_digits		1445350	0					
ANR	1445545	AdditiveExpression	1 - b		1445350	1		-			
ANR	1445546	PrimaryExpression	1		1445350	0					
ANR	1445547	Identifier	b		1445350	1					
ANR	1445548	PrimaryExpression	'0'		1445350	1					
ANR	1445549	ExpressionStatement	i += ( 1 << ( b * 3 ) ) * bit	137:7:3705:3730	1445350	1	True				
ANR	1445550	AssignmentExpression	i += ( 1 << ( b * 3 ) ) * bit		1445350	0		+=			
ANR	1445551	Identifier	i		1445350	0					
ANR	1445552	MultiplicativeExpression	( 1 << ( b * 3 ) ) * bit		1445350	1		*			
ANR	1445553	ShiftExpression	1 << ( b * 3 )		1445350	0		<<			
ANR	1445554	PrimaryExpression	1		1445350	0					
ANR	1445555	MultiplicativeExpression	b * 3		1445350	1		*			
ANR	1445556	Identifier	b		1445350	0					
ANR	1445557	PrimaryExpression	3		1445350	1					
ANR	1445558	Identifier	bit		1445350	1					
ANR	1445559	ExpressionStatement	* p += num_digits	139:3:3742:3758	1445350	4	True				
ANR	1445560	AssignmentExpression	* p += num_digits		1445350	0		+=			
ANR	1445561	UnaryOperationExpression	* p		1445350	0					
ANR	1445562	UnaryOperator	*		1445350	0					
ANR	1445563	Identifier	p		1445350	1					
ANR	1445564	Identifier	num_digits		1445350	1					
ANR	1445565	ElseStatement	else		1445350	0					
ANR	1445566	CompoundStatement		40:1:787:787	1445350	0					
ANR	1445567	SwitchStatement	switch ( * * p )		1445350	0					
ANR	1445568	Condition	* * p	143:11:3788:3790	1445350	0	True				
ANR	1445569	UnaryOperationExpression	* * p		1445350	0					
ANR	1445570	UnaryOperator	*		1445350	0					
ANR	1445571	UnaryOperationExpression	* p		1445350	1					
ANR	1445572	UnaryOperator	*		1445350	0					
ANR	1445573	Identifier	p		1445350	1					
ANR	1445574	CompoundStatement		42:5:810:810	1445350	1					
ANR	1445575	Label	case 'n' :	145:5:3805:3813	1445350	0	True				
ANR	1445576	ExpressionStatement	i = 10	146:7:3822:3828	1445350	1	True				
ANR	1445577	AssignmentExpression	i = 10		1445350	0		=			
ANR	1445578	Identifier	i		1445350	0					
ANR	1445579	PrimaryExpression	10		1445350	1					
ANR	1445580	BreakStatement	break ;	147:7:3837:3842	1445350	2	True				
ANR	1445581	Label	case 'r' :	148:5:3849:3857	1445350	3	True				
ANR	1445582	ExpressionStatement	i = 13	149:7:3866:3872	1445350	4	True				
ANR	1445583	AssignmentExpression	i = 13		1445350	0		=			
ANR	1445584	Identifier	i		1445350	0					
ANR	1445585	PrimaryExpression	13		1445350	1					
ANR	1445586	BreakStatement	break ;	150:7:3881:3886	1445350	5	True				
ANR	1445587	Label	case 't' :	151:5:3893:3901	1445350	6	True				
ANR	1445588	ExpressionStatement	i = 9	152:7:3910:3915	1445350	7	True				
ANR	1445589	AssignmentExpression	i = 9		1445350	0		=			
ANR	1445590	Identifier	i		1445350	0					
ANR	1445591	PrimaryExpression	9		1445350	1					
ANR	1445592	BreakStatement	break ;	153:7:3924:3929	1445350	8	True				
ANR	1445593	Label	case 'a' :	154:5:3936:3944	1445350	9	True				
ANR	1445594	ExpressionStatement	i = 7	155:7:3953:3958	1445350	10	True				
ANR	1445595	AssignmentExpression	i = 7		1445350	0		=			
ANR	1445596	Identifier	i		1445350	0					
ANR	1445597	PrimaryExpression	7		1445350	1					
ANR	1445598	BreakStatement	break ;	156:7:3967:3972	1445350	11	True				
ANR	1445599	Label	case '\\'' :	157:5:3979:3988	1445350	12	True				
ANR	1445600	IfStatement	if ( valid )		1445350	13					
ANR	1445601	Condition	valid	158:11:4001:4005	1445350	0	True				
ANR	1445602	Identifier	valid		1445350	0					
ANR	1445603	ExpressionStatement	* valid = 0	159:2:4010:4020	1445350	1	True				
ANR	1445604	AssignmentExpression	* valid = 0		1445350	0		=			
ANR	1445605	UnaryOperationExpression	* valid		1445350	0					
ANR	1445606	UnaryOperator	*		1445350	0					
ANR	1445607	Identifier	valid		1445350	1					
ANR	1445608	PrimaryExpression	0		1445350	1					
ANR	1445609	ElseStatement	else		1445350	0					
ANR	1445610	IfStatement	if ( print_errors )		1445350	0					
ANR	1445611	Condition	print_errors	160:16:4038:4049	1445350	0	True				
ANR	1445612	Identifier	print_errors		1445350	0					
ANR	1445613	ExpressionStatement	"printerr ( 1 , ""empty literal character\\n"" )"	161:2:4054:4095	1445350	1	True				
ANR	1445614	CallExpression	"printerr ( 1 , ""empty literal character\\n"" )"		1445350	0					
ANR	1445615	Callee	printerr		1445350	0					
ANR	1445616	Identifier	printerr		1445350	0					
ANR	1445617	ArgumentList	1		1445350	1					
ANR	1445618	Argument	1		1445350	0					
ANR	1445619	PrimaryExpression	1		1445350	0					
ANR	1445620	Argument	"""empty literal character\\n"""		1445350	1					
ANR	1445621	PrimaryExpression	"""empty literal character\\n"""		1445350	0					
ANR	1445622	ReturnStatement	return 0 ;	162:7:4104:4112	1445350	14	True				
ANR	1445623	PrimaryExpression	0		1445350	0					
ANR	1445624	Label	case 0 :	163:5:4119:4125	1445350	15	True				
ANR	1445625	IfStatement	if ( valid )		1445350	16					
ANR	1445626	Condition	valid	164:11:4138:4142	1445350	0	True				
ANR	1445627	Identifier	valid		1445350	0					
ANR	1445628	ExpressionStatement	* valid = 0	165:2:4147:4157	1445350	1	True				
ANR	1445629	AssignmentExpression	* valid = 0		1445350	0		=			
ANR	1445630	UnaryOperationExpression	* valid		1445350	0					
ANR	1445631	UnaryOperator	*		1445350	0					
ANR	1445632	Identifier	valid		1445350	1					
ANR	1445633	PrimaryExpression	0		1445350	1					
ANR	1445634	ElseStatement	else		1445350	0					
ANR	1445635	IfStatement	if ( print_errors )		1445350	0					
ANR	1445636	Condition	print_errors	166:16:4175:4186	1445350	0	True				
ANR	1445637	Identifier	print_errors		1445350	0					
ANR	1445638	Statement	printerr	167:2:4191:4198	1445350	1	True				
ANR	1445639	Statement	(	167:11:4200:4200	1445350	17	True				
ANR	1445640	Statement	1	167:12:4201:4201	1445350	18	True				
ANR	1445641	Statement	","	167:13:4202:4202	1445350	19	True				
ANR	1445642	Statement	"""unexpected end of line after """	167:15:4204:4234	1445350	20	True				
ANR	1445643	Statement	"""backslash in string constant\\n"""	168:5:4241:4272	1445350	21	True				
ANR	1445644	Statement	)	168:37:4273:4273	1445350	22	True				
ANR	1445645	ExpressionStatement		168:38:4274:4274	1445350	23	True				
ANR	1445646	ReturnStatement	return 0 ;	169:7:4283:4291	1445350	24	True				
ANR	1445647	PrimaryExpression	0		1445350	0					
ANR	1445648	Label	default :	170:5:4298:4305	1445350	25	True				
ANR	1445649	Identifier	default		1445350	0					
ANR	1445650	ExpressionStatement	i = * * p	171:7:4314:4321	1445350	26	True				
ANR	1445651	AssignmentExpression	i = * * p		1445350	0		=			
ANR	1445652	Identifier	i		1445350	0					
ANR	1445653	UnaryOperationExpression	* * p		1445350	1					
ANR	1445654	UnaryOperator	*		1445350	0					
ANR	1445655	UnaryOperationExpression	* p		1445350	1					
ANR	1445656	UnaryOperator	*		1445350	0					
ANR	1445657	Identifier	p		1445350	1					
ANR	1445658	ExpressionStatement	( * p ) ++	173:3:4333:4339	1445350	1	True				
ANR	1445659	PostIncDecOperationExpression	( * p ) ++		1445350	0					
ANR	1445660	UnaryOperationExpression	* p		1445350	0					
ANR	1445661	UnaryOperator	*		1445350	0					
ANR	1445662	Identifier	p		1445350	1					
ANR	1445663	IncDec	++		1445350	1					
ANR	1445664	ElseStatement	else		1445350	0					
ANR	1445665	ExpressionStatement	( * p ) ++	177:4:4361:4367	1445350	0	True				
ANR	1445666	PostIncDecOperationExpression	( * p ) ++		1445350	0					
ANR	1445667	UnaryOperationExpression	* p		1445350	0					
ANR	1445668	UnaryOperator	*		1445350	0					
ANR	1445669	Identifier	p		1445350	1					
ANR	1445670	IncDec	++		1445350	1					
ANR	1445671	IfStatement	if ( verbose >= 7 )		1445350	5					
ANR	1445672	Condition	verbose >= 7	178:6:4375:4386	1445350	0	True				
ANR	1445673	RelationalExpression	verbose >= 7		1445350	0		>=			
ANR	1445674	Identifier	verbose		1445350	0					
ANR	1445675	PrimaryExpression	7		1445350	1					
ANR	1445676	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_character returned %d (%c).\\n"" , stack [ sp ] . line , addr , i , i )"	179:4:4393:4493	1445350	1	True				
ANR	1445677	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_character returned %d (%c).\\n"" , stack [ sp ] . line , addr , i , i )"		1445350	0					
ANR	1445678	Callee	fprintf		1445350	0					
ANR	1445679	Identifier	fprintf		1445350	0					
ANR	1445680	ArgumentList	stderr		1445350	1					
ANR	1445681	Argument	stderr		1445350	0					
ANR	1445682	Identifier	stderr		1445350	0					
ANR	1445683	Argument	"""%5d (0x%04x): rd_character returned %d (%c).\\n"""		1445350	1					
ANR	1445684	PrimaryExpression	"""%5d (0x%04x): rd_character returned %d (%c).\\n"""		1445350	0					
ANR	1445685	Argument	stack [ sp ] . line		1445350	2					
ANR	1445686	MemberAccess	stack [ sp ] . line		1445350	0					
ANR	1445687	ArrayIndexing	stack [ sp ]		1445350	0					
ANR	1445688	Identifier	stack		1445350	0					
ANR	1445689	Identifier	sp		1445350	1					
ANR	1445690	Identifier	line		1445350	1					
ANR	1445691	Argument	addr		1445350	3					
ANR	1445692	Identifier	addr		1445350	0					
ANR	1445693	Argument	i		1445350	4					
ANR	1445694	Identifier	i		1445350	0					
ANR	1445695	Argument	i		1445350	5					
ANR	1445696	Identifier	i		1445350	0					
ANR	1445697	ReturnStatement	return i ;	181:2:4497:4505	1445350	6	True				
ANR	1445698	Identifier	i		1445350	0					
ANR	1445699	ReturnType	static int		1445350	1					
ANR	1445700	Identifier	rd_character		1445350	2					
ANR	1445701	ParameterList	"const char * * p , int * valid , int print_errors"		1445350	3					
ANR	1445702	Parameter	const char * * p	102:14:2941:2954	1445350	0	True				
ANR	1445703	ParameterType	const char * *		1445350	0					
ANR	1445704	Identifier	p		1445350	1					
ANR	1445705	Parameter	int * valid	102:30:2957:2966	1445350	1	True				
ANR	1445706	ParameterType	int *		1445350	0					
ANR	1445707	Identifier	valid		1445350	1					
ANR	1445708	Parameter	int print_errors	102:42:2969:2984	1445350	2	True				
ANR	1445709	ParameterType	int		1445350	0					
ANR	1445710	Identifier	print_errors		1445350	1					
ANR	1445711	CFGEntryNode	ENTRY		1445350		True				
ANR	1445712	CFGExitNode	EXIT		1445350		True				
ANR	1445713	Symbol	* sp		1445350						
ANR	1445714	Symbol	stack		1445350						
ANR	1445715	Symbol	b		1445350						
ANR	1445716	Symbol	* num_digits		1445350						
ANR	1445717	Symbol	i		1445350						
ANR	1445718	Symbol	* valid		1445350						
ANR	1445719	Symbol	stderr		1445350						
ANR	1445720	Symbol	* b		1445350						
ANR	1445721	Symbol	bit		1445350						
ANR	1445722	Symbol	verbose		1445350						
ANR	1445723	Symbol	p		1445350						
ANR	1445724	Symbol	valid		1445350						
ANR	1445725	Symbol	print_errors		1445350						
ANR	1445726	Symbol	* stack		1445350						
ANR	1445727	Symbol	stack [ sp ] . line		1445350						
ANR	1445728	Symbol	* p		1445350						
ANR	1445729	Symbol	* * p		1445350						
ANR	1445730	Symbol	addr		1445350						
ANR	1445731	Symbol	sp		1445350						
ANR	1445732	Symbol	num_digits		1445350						
ANR	1445733	Function	check_label	184:0:4510:5745							
ANR	1445734	FunctionDef	"check_label (struct label * labels , const char * * p , struct label * * ret , struct label * * previous , int force_skip)"		1445733	0					
ANR	1445735	CompoundStatement		187:0:4639:5745	1445733	0					
ANR	1445736	IdentifierDeclStatement	struct label * l ;	188:2:4643:4658	1445733	0	True				
ANR	1445737	IdentifierDecl	* l		1445733	0					
ANR	1445738	IdentifierDeclType	struct label *		1445733	0					
ANR	1445739	Identifier	l		1445733	1					
ANR	1445740	IdentifierDeclStatement	const char * c ;	189:2:4662:4675	1445733	1	True				
ANR	1445741	IdentifierDecl	* c		1445733	0					
ANR	1445742	IdentifierDeclType	const char *		1445733	0					
ANR	1445743	Identifier	c		1445733	1					
ANR	1445744	IdentifierDeclStatement	unsigned s2 ;	190:2:4679:4690	1445733	2	True				
ANR	1445745	IdentifierDecl	s2		1445733	0					
ANR	1445746	IdentifierDeclType	unsigned		1445733	0					
ANR	1445747	Identifier	s2		1445733	1					
ANR	1445748	ExpressionStatement	* p = delspc ( * p )	191:2:4694:4710	1445733	3	True				
ANR	1445749	AssignmentExpression	* p = delspc ( * p )		1445733	0		=			
ANR	1445750	UnaryOperationExpression	* p		1445733	0					
ANR	1445751	UnaryOperator	*		1445733	0					
ANR	1445752	Identifier	p		1445733	1					
ANR	1445753	CallExpression	delspc ( * p )		1445733	1					
ANR	1445754	Callee	delspc		1445733	0					
ANR	1445755	Identifier	delspc		1445733	0					
ANR	1445756	ArgumentList	* p		1445733	1					
ANR	1445757	Argument	* p		1445733	0					
ANR	1445758	UnaryOperationExpression	* p		1445733	0					
ANR	1445759	UnaryOperator	*		1445733	0					
ANR	1445760	Identifier	p		1445733	1					
ANR	1445761	ForStatement	for ( c = * p ; isalnum ( ( const unsigned char ) * c ) || * c == '_' || * c == '.' ; ++ c )		1445733	4					
ANR	1445762	ForInit	c = * p ;	192:7:4719:4725	1445733	0	True				
ANR	1445763	AssignmentExpression	c = * p		1445733	0		=			
ANR	1445764	Identifier	c		1445733	0					
ANR	1445765	UnaryOperationExpression	* p		1445733	1					
ANR	1445766	UnaryOperator	*		1445733	0					
ANR	1445767	Identifier	p		1445733	1					
ANR	1445768	Condition	isalnum ( ( const unsigned char ) * c ) || * c == '_' || * c == '.'	192:15:4727:4785	1445733	1	True				
ANR	1445769	OrExpression	isalnum ( ( const unsigned char ) * c ) || * c == '_' || * c == '.'		1445733	0		||			
ANR	1445770	CallExpression	isalnum ( ( const unsigned char ) * c )		1445733	0					
ANR	1445771	Callee	isalnum		1445733	0					
ANR	1445772	Identifier	isalnum		1445733	0					
ANR	1445773	ArgumentList	( const unsigned char ) * c		1445733	1					
ANR	1445774	Argument	( const unsigned char ) * c		1445733	0					
ANR	1445775	CastExpression	( const unsigned char ) * c		1445733	0					
ANR	1445776	CastTarget	const unsigned char		1445733	0					
ANR	1445777	UnaryOperationExpression	* c		1445733	1					
ANR	1445778	UnaryOperator	*		1445733	0					
ANR	1445779	Identifier	c		1445733	1					
ANR	1445780	OrExpression	* c == '_' || * c == '.'		1445733	1		||			
ANR	1445781	EqualityExpression	* c == '_'		1445733	0		==			
ANR	1445782	UnaryOperationExpression	* c		1445733	0					
ANR	1445783	UnaryOperator	*		1445733	0					
ANR	1445784	Identifier	c		1445733	1					
ANR	1445785	PrimaryExpression	'_'		1445733	1					
ANR	1445786	EqualityExpression	* c == '.'		1445733	1		==			
ANR	1445787	UnaryOperationExpression	* c		1445733	0					
ANR	1445788	UnaryOperator	*		1445733	0					
ANR	1445789	Identifier	c		1445733	1					
ANR	1445790	PrimaryExpression	'.'		1445733	1					
ANR	1445791	UnaryExpression	++ c	192:76:4788:4790	1445733	2	True				
ANR	1445792	IncDec	++		1445733	0					
ANR	1445793	Identifier	c		1445733	1					
ANR	1445794	CompoundStatement		7:4:157:157	1445733	3					
ANR	1445795	ExpressionStatement	s2 = c - * p	195:2:4807:4818	1445733	5	True				
ANR	1445796	AssignmentExpression	s2 = c - * p		1445733	0		=			
ANR	1445797	Identifier	s2		1445733	0					
ANR	1445798	AdditiveExpression	c - * p		1445733	1		-			
ANR	1445799	Identifier	c		1445733	0					
ANR	1445800	UnaryOperationExpression	* p		1445733	1					
ANR	1445801	UnaryOperator	*		1445733	0					
ANR	1445802	Identifier	p		1445733	1					
ANR	1445803	ForStatement	for ( l = labels ; l ; l = l -> next )		1445733	6					
ANR	1445804	ForInit	l = labels ;	196:7:4827:4837	1445733	0	True				
ANR	1445805	AssignmentExpression	l = labels		1445733	0		=			
ANR	1445806	Identifier	l		1445733	0					
ANR	1445807	Identifier	labels		1445733	1					
ANR	1445808	Condition	l	196:19:4839:4839	1445733	1	True				
ANR	1445809	Identifier	l		1445733	0					
ANR	1445810	AssignmentExpression	l = l -> next	196:22:4842:4852	1445733	2	True	=			
ANR	1445811	Identifier	l		1445733	0					
ANR	1445812	PtrMemberAccess	l -> next		1445733	1					
ANR	1445813	Identifier	l		1445733	0					
ANR	1445814	Identifier	next		1445733	1					
ANR	1445815	CompoundStatement		13:6:249:256	1445733	3					
ANR	1445816	IdentifierDeclStatement	"unsigned s1 , s ;"	198:6:4867:4881	1445733	0	True				
ANR	1445817	IdentifierDecl	s1		1445733	0					
ANR	1445818	IdentifierDeclType	unsigned		1445733	0					
ANR	1445819	Identifier	s1		1445733	1					
ANR	1445820	IdentifierDecl	s		1445733	1					
ANR	1445821	IdentifierDeclType	unsigned		1445733	0					
ANR	1445822	Identifier	s		1445733	1					
ANR	1445823	IdentifierDeclStatement	int cmp ;	199:6:4889:4896	1445733	1	True				
ANR	1445824	IdentifierDecl	cmp		1445733	0					
ANR	1445825	IdentifierDeclType	int		1445733	0					
ANR	1445826	Identifier	cmp		1445733	1					
ANR	1445827	ExpressionStatement	s1 = strlen ( l -> name )	200:6:4904:4925	1445733	2	True				
ANR	1445828	AssignmentExpression	s1 = strlen ( l -> name )		1445733	0		=			
ANR	1445829	Identifier	s1		1445733	0					
ANR	1445830	CallExpression	strlen ( l -> name )		1445733	1					
ANR	1445831	Callee	strlen		1445733	0					
ANR	1445832	Identifier	strlen		1445733	0					
ANR	1445833	ArgumentList	l -> name		1445733	1					
ANR	1445834	Argument	l -> name		1445733	0					
ANR	1445835	PtrMemberAccess	l -> name		1445733	0					
ANR	1445836	Identifier	l		1445733	0					
ANR	1445837	Identifier	name		1445733	1					
ANR	1445838	ExpressionStatement	s = s1 < s2 ? s1 : s2	201:6:4933:4954	1445733	3	True				
ANR	1445839	AssignmentExpression	s = s1 < s2 ? s1 : s2		1445733	0		=			
ANR	1445840	Identifier	s		1445733	0					
ANR	1445841	ConditionalExpression	s1 < s2 ? s1 : s2		1445733	1					
ANR	1445842	Condition	s1 < s2		1445733	0					
ANR	1445843	RelationalExpression	s1 < s2		1445733	0		<			
ANR	1445844	Identifier	s1		1445733	0					
ANR	1445845	Identifier	s2		1445733	1					
ANR	1445846	Identifier	s1		1445733	1					
ANR	1445847	Identifier	s2		1445733	2					
ANR	1445848	ExpressionStatement	"cmp = strncmp ( l -> name , * p , s )"	202:6:4962:4992	1445733	4	True				
ANR	1445849	AssignmentExpression	"cmp = strncmp ( l -> name , * p , s )"		1445733	0		=			
ANR	1445850	Identifier	cmp		1445733	0					
ANR	1445851	CallExpression	"strncmp ( l -> name , * p , s )"		1445733	1					
ANR	1445852	Callee	strncmp		1445733	0					
ANR	1445853	Identifier	strncmp		1445733	0					
ANR	1445854	ArgumentList	l -> name		1445733	1					
ANR	1445855	Argument	l -> name		1445733	0					
ANR	1445856	PtrMemberAccess	l -> name		1445733	0					
ANR	1445857	Identifier	l		1445733	0					
ANR	1445858	Identifier	name		1445733	1					
ANR	1445859	Argument	* p		1445733	1					
ANR	1445860	UnaryOperationExpression	* p		1445733	0					
ANR	1445861	UnaryOperator	*		1445733	0					
ANR	1445862	Identifier	p		1445733	1					
ANR	1445863	Argument	s		1445733	2					
ANR	1445864	Identifier	s		1445733	0					
ANR	1445865	IfStatement	if ( cmp > 0 || ( cmp == 0 && s1 > s ) )		1445733	5					
ANR	1445866	Condition	cmp > 0 || ( cmp == 0 && s1 > s )	203:10:5004:5034	1445733	0	True				
ANR	1445867	OrExpression	cmp > 0 || ( cmp == 0 && s1 > s )		1445733	0		||			
ANR	1445868	RelationalExpression	cmp > 0		1445733	0		>			
ANR	1445869	Identifier	cmp		1445733	0					
ANR	1445870	PrimaryExpression	0		1445733	1					
ANR	1445871	AndExpression	cmp == 0 && s1 > s		1445733	1		&&			
ANR	1445872	EqualityExpression	cmp == 0		1445733	0		==			
ANR	1445873	Identifier	cmp		1445733	0					
ANR	1445874	PrimaryExpression	0		1445733	1					
ANR	1445875	RelationalExpression	s1 > s		1445733	1		>			
ANR	1445876	Identifier	s1		1445733	0					
ANR	1445877	Identifier	s		1445733	1					
ANR	1445878	CompoundStatement		18:1:398:398	1445733	1					
ANR	1445879	IfStatement	if ( force_skip )		1445733	0					
ANR	1445880	Condition	force_skip	205:7:5047:5056	1445733	0	True				
ANR	1445881	Identifier	force_skip		1445733	0					
ANR	1445882	ExpressionStatement	* p = c	206:5:5064:5070	1445733	1	True				
ANR	1445883	AssignmentExpression	* p = c		1445733	0		=			
ANR	1445884	UnaryOperationExpression	* p		1445733	0					
ANR	1445885	UnaryOperator	*		1445733	0					
ANR	1445886	Identifier	p		1445733	1					
ANR	1445887	Identifier	c		1445733	1					
ANR	1445888	ReturnStatement	return 0 ;	207:3:5075:5083	1445733	1	True				
ANR	1445889	PrimaryExpression	0		1445733	0					
ANR	1445890	IfStatement	if ( cmp < 0 || s2 > s )		1445733	6					
ANR	1445891	Condition	cmp < 0 || s2 > s	209:10:5098:5114	1445733	0	True				
ANR	1445892	OrExpression	cmp < 0 || s2 > s		1445733	0		||			
ANR	1445893	RelationalExpression	cmp < 0		1445733	0		<			
ANR	1445894	Identifier	cmp		1445733	0					
ANR	1445895	PrimaryExpression	0		1445733	1					
ANR	1445896	RelationalExpression	s2 > s		1445733	1		>			
ANR	1445897	Identifier	s2		1445733	0					
ANR	1445898	Identifier	s		1445733	1					
ANR	1445899	CompoundStatement		24:1:478:478	1445733	1					
ANR	1445900	IfStatement	if ( previous )		1445733	0					
ANR	1445901	Condition	previous	211:7:5127:5134	1445733	0	True				
ANR	1445902	Identifier	previous		1445733	0					
ANR	1445903	ExpressionStatement	* previous = l	212:5:5142:5155	1445733	1	True				
ANR	1445904	AssignmentExpression	* previous = l		1445733	0		=			
ANR	1445905	UnaryOperationExpression	* previous		1445733	0					
ANR	1445906	UnaryOperator	*		1445733	0					
ANR	1445907	Identifier	previous		1445733	1					
ANR	1445908	Identifier	l		1445733	1					
ANR	1445909	ContinueStatement	continue ;	213:3:5160:5168	1445733	1	True				
ANR	1445910	ExpressionStatement	* p = c	215:6:5179:5185	1445733	7	True				
ANR	1445911	AssignmentExpression	* p = c		1445733	0		=			
ANR	1445912	UnaryOperationExpression	* p		1445733	0					
ANR	1445913	UnaryOperator	*		1445733	0					
ANR	1445914	Identifier	p		1445733	1					
ANR	1445915	Identifier	c		1445733	1					
ANR	1445916	IfStatement	if ( l -> ref )		1445733	8					
ANR	1445917	Condition	l -> ref	217:10:5243:5248	1445733	0	True				
ANR	1445918	PtrMemberAccess	l -> ref		1445733	0					
ANR	1445919	Identifier	l		1445733	0					
ANR	1445920	Identifier	ref		1445733	1					
ANR	1445921	CompoundStatement		32:1:612:612	1445733	1					
ANR	1445922	ExpressionStatement	"compute_ref ( l -> ref , 1 )"	219:3:5257:5280	1445733	0	True				
ANR	1445923	CallExpression	"compute_ref ( l -> ref , 1 )"		1445733	0					
ANR	1445924	Callee	compute_ref		1445733	0					
ANR	1445925	Identifier	compute_ref		1445733	0					
ANR	1445926	ArgumentList	l -> ref		1445733	1					
ANR	1445927	Argument	l -> ref		1445733	0					
ANR	1445928	PtrMemberAccess	l -> ref		1445733	0					
ANR	1445929	Identifier	l		1445733	0					
ANR	1445930	Identifier	ref		1445733	1					
ANR	1445931	Argument	1		1445733	1					
ANR	1445932	PrimaryExpression	1		1445733	0					
ANR	1445933	IfStatement	if ( ! l -> ref -> done )		1445733	1					
ANR	1445934	Condition	! l -> ref -> done	220:7:5289:5301	1445733	0	True				
ANR	1445935	UnaryOperationExpression	! l -> ref -> done		1445733	0					
ANR	1445936	UnaryOperator	!		1445733	0					
ANR	1445937	PtrMemberAccess	l -> ref -> done		1445733	1					
ANR	1445938	PtrMemberAccess	l -> ref		1445733	0					
ANR	1445939	Identifier	l		1445733	0					
ANR	1445940	Identifier	ref		1445733	1					
ANR	1445941	Identifier	done		1445733	1					
ANR	1445942	CompoundStatement		35:5:669:669	1445733	1					
ANR	1445943	IfStatement	if ( verbose >= 6 )		1445733	0					
ANR	1445944	Condition	verbose >= 6	225:11:5501:5512	1445733	0	True				
ANR	1445945	RelationalExpression	verbose >= 6		1445733	0		>=			
ANR	1445946	Identifier	verbose		1445733	0					
ANR	1445947	PrimaryExpression	6		1445733	1					
ANR	1445948	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): returning invalid label %s.\\n"" , stack [ sp ] . line , addr , l -> name )"	226:2:5517:5619	1445733	1	True				
ANR	1445949	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): returning invalid label %s.\\n"" , stack [ sp ] . line , addr , l -> name )"		1445733	0					
ANR	1445950	Callee	fprintf		1445733	0					
ANR	1445951	Identifier	fprintf		1445733	0					
ANR	1445952	ArgumentList	stderr		1445733	1					
ANR	1445953	Argument	stderr		1445733	0					
ANR	1445954	Identifier	stderr		1445733	0					
ANR	1445955	Argument	"""%5d (0x%04x): returning invalid label %s.\\n"""		1445733	1					
ANR	1445956	PrimaryExpression	"""%5d (0x%04x): returning invalid label %s.\\n"""		1445733	0					
ANR	1445957	Argument	stack [ sp ] . line		1445733	2					
ANR	1445958	MemberAccess	stack [ sp ] . line		1445733	0					
ANR	1445959	ArrayIndexing	stack [ sp ]		1445733	0					
ANR	1445960	Identifier	stack		1445733	0					
ANR	1445961	Identifier	sp		1445733	1					
ANR	1445962	Identifier	line		1445733	1					
ANR	1445963	Argument	addr		1445733	3					
ANR	1445964	Identifier	addr		1445733	0					
ANR	1445965	Argument	l -> name		1445733	4					
ANR	1445966	PtrMemberAccess	l -> name		1445733	0					
ANR	1445967	Identifier	l		1445733	0					
ANR	1445968	Identifier	name		1445733	1					
ANR	1445969	ExpressionStatement	* ret = l	229:7:5628:5636	1445733	1	True				
ANR	1445970	AssignmentExpression	* ret = l		1445733	0		=			
ANR	1445971	UnaryOperationExpression	* ret		1445733	0					
ANR	1445972	UnaryOperator	*		1445733	0					
ANR	1445973	Identifier	ret		1445733	1					
ANR	1445974	Identifier	l		1445733	1					
ANR	1445975	ReturnStatement	return 0 ;	230:7:5645:5653	1445733	2	True				
ANR	1445976	PrimaryExpression	0		1445733	0					
ANR	1445977	ExpressionStatement	* ret = l	233:6:5671:5679	1445733	9	True				
ANR	1445978	AssignmentExpression	* ret = l		1445733	0		=			
ANR	1445979	UnaryOperationExpression	* ret		1445733	0					
ANR	1445980	UnaryOperator	*		1445733	0					
ANR	1445981	Identifier	ret		1445733	1					
ANR	1445982	Identifier	l		1445733	1					
ANR	1445983	ReturnStatement	return 1 ;	234:6:5687:5695	1445733	10	True				
ANR	1445984	PrimaryExpression	1		1445733	0					
ANR	1445985	IfStatement	if ( force_skip )		1445733	7					
ANR	1445986	Condition	force_skip	236:6:5709:5718	1445733	0	True				
ANR	1445987	Identifier	force_skip		1445733	0					
ANR	1445988	ExpressionStatement	* p = c	237:4:5725:5731	1445733	1	True				
ANR	1445989	AssignmentExpression	* p = c		1445733	0		=			
ANR	1445990	UnaryOperationExpression	* p		1445733	0					
ANR	1445991	UnaryOperator	*		1445733	0					
ANR	1445992	Identifier	p		1445733	1					
ANR	1445993	Identifier	c		1445733	1					
ANR	1445994	ReturnStatement	return 0 ;	238:2:5735:5743	1445733	8	True				
ANR	1445995	PrimaryExpression	0		1445733	0					
ANR	1445996	ReturnType	static int		1445733	1					
ANR	1445997	Identifier	check_label		1445733	2					
ANR	1445998	ParameterList	"struct label * labels , const char * * p , struct label * * ret , struct label * * previous , int force_skip"		1445733	3					
ANR	1445999	Parameter	struct label * labels	185:13:4534:4553	1445733	0	True				
ANR	1446000	ParameterType	struct label *		1445733	0					
ANR	1446001	Identifier	labels		1445733	1					
ANR	1446002	Parameter	const char * * p	185:35:4556:4569	1445733	1	True				
ANR	1446003	ParameterType	const char * *		1445733	0					
ANR	1446004	Identifier	p		1445733	1					
ANR	1446005	Parameter	struct label * * ret	185:51:4572:4589	1445733	2	True				
ANR	1446006	ParameterType	struct label * *		1445733	0					
ANR	1446007	Identifier	ret		1445733	1					
ANR	1446008	Parameter	struct label * * previous	186:6:4598:4620	1445733	3	True				
ANR	1446009	ParameterType	struct label * *		1445733	0					
ANR	1446010	Identifier	previous		1445733	1					
ANR	1446011	Parameter	int force_skip	186:31:4623:4636	1445733	4	True				
ANR	1446012	ParameterType	int		1445733	0					
ANR	1446013	Identifier	force_skip		1445733	1					
ANR	1446014	CFGEntryNode	ENTRY		1445733		True				
ANR	1446015	CFGExitNode	EXIT		1445733		True				
ANR	1446016	Symbol	* sp		1445733						
ANR	1446017	Symbol	stack		1445733						
ANR	1446018	Symbol	* previous		1445733						
ANR	1446019	Symbol	cmp		1445733						
ANR	1446020	Symbol	* ret		1445733						
ANR	1446021	Symbol	strlen		1445733						
ANR	1446022	Symbol	strncmp		1445733						
ANR	1446023	Symbol	l -> ref		1445733						
ANR	1446024	Symbol	l -> name		1445733						
ANR	1446025	Symbol	stack [ sp ] . line		1445733						
ANR	1446026	Symbol	force_skip		1445733						
ANR	1446027	Symbol	l -> ref -> done		1445733						
ANR	1446028	Symbol	addr		1445733						
ANR	1446029	Symbol	delspc		1445733						
ANR	1446030	Symbol	sp		1445733						
ANR	1446031	Symbol	s1		1445733						
ANR	1446032	Symbol	s2		1445733						
ANR	1446033	Symbol	* * l		1445733						
ANR	1446034	Symbol	ret		1445733						
ANR	1446035	Symbol	c		1445733						
ANR	1446036	Symbol	previous		1445733						
ANR	1446037	Symbol	isalnum		1445733						
ANR	1446038	Symbol	* l -> ref		1445733						
ANR	1446039	Symbol	l		1445733						
ANR	1446040	Symbol	stderr		1445733						
ANR	1446041	Symbol	* c		1445733						
ANR	1446042	Symbol	labels		1445733						
ANR	1446043	Symbol	verbose		1445733						
ANR	1446044	Symbol	p		1445733						
ANR	1446045	Symbol	l -> next		1445733						
ANR	1446046	Symbol	s		1445733						
ANR	1446047	Symbol	* l		1445733						
ANR	1446048	Symbol	* stack		1445733						
ANR	1446049	Symbol	* p		1445733						
ANR	1446050	Function	rd_label	241:0:5748:6845							
ANR	1446051	FunctionDef	"rd_label (const char * * p , int * exists , struct label * * previous , int level , int print_errors)"		1446050	0					
ANR	1446052	CompoundStatement		244:0:5855:6845	1446050	0					
ANR	1446053	IdentifierDeclStatement	struct label * l = NULL ;	245:2:5859:5881	1446050	0	True				
ANR	1446054	IdentifierDecl	* l = NULL		1446050	0					
ANR	1446055	IdentifierDeclType	struct label *		1446050	0					
ANR	1446056	Identifier	l		1446050	1					
ANR	1446057	AssignmentExpression	* l = NULL		1446050	2		=			
ANR	1446058	Identifier	NULL		1446050	0					
ANR	1446059	Identifier	NULL		1446050	1					
ANR	1446060	IdentifierDeclStatement	int s ;	246:2:5885:5890	1446050	1	True				
ANR	1446061	IdentifierDecl	s		1446050	0					
ANR	1446062	IdentifierDeclType	int		1446050	0					
ANR	1446063	Identifier	s		1446050	1					
ANR	1446064	IfStatement	if ( exists )		1446050	2					
ANR	1446065	Condition	exists	247:6:5898:5903	1446050	0	True				
ANR	1446066	Identifier	exists		1446050	0					
ANR	1446067	ExpressionStatement	* exists = 0	248:4:5910:5921	1446050	1	True				
ANR	1446068	AssignmentExpression	* exists = 0		1446050	0		=			
ANR	1446069	UnaryOperationExpression	* exists		1446050	0					
ANR	1446070	UnaryOperator	*		1446050	0					
ANR	1446071	Identifier	exists		1446050	1					
ANR	1446072	PrimaryExpression	0		1446050	1					
ANR	1446073	IfStatement	if ( previous )		1446050	3					
ANR	1446074	Condition	previous	249:6:5929:5936	1446050	0	True				
ANR	1446075	Identifier	previous		1446050	0					
ANR	1446076	ExpressionStatement	* previous = NULL	250:4:5943:5959	1446050	1	True				
ANR	1446077	AssignmentExpression	* previous = NULL		1446050	0		=			
ANR	1446078	UnaryOperationExpression	* previous		1446050	0					
ANR	1446079	UnaryOperator	*		1446050	0					
ANR	1446080	Identifier	previous		1446050	1					
ANR	1446081	Identifier	NULL		1446050	1					
ANR	1446082	IfStatement	if ( verbose >= 6 )		1446050	4					
ANR	1446083	Condition	verbose >= 6	251:6:5967:5978	1446050	0	True				
ANR	1446084	RelationalExpression	verbose >= 6		1446050	0		>=			
ANR	1446085	Identifier	verbose		1446050	0					
ANR	1446086	PrimaryExpression	6		1446050	1					
ANR	1446087	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Starting to read label (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"	252:4:5985:6088	1446050	1	True				
ANR	1446088	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Starting to read label (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"		1446050	0					
ANR	1446089	Callee	fprintf		1446050	0					
ANR	1446090	Identifier	fprintf		1446050	0					
ANR	1446091	ArgumentList	stderr		1446050	1					
ANR	1446092	Argument	stderr		1446050	0					
ANR	1446093	Identifier	stderr		1446050	0					
ANR	1446094	Argument	"""%5d (0x%04x): Starting to read label (string=%s).\\n"""		1446050	1					
ANR	1446095	PrimaryExpression	"""%5d (0x%04x): Starting to read label (string=%s).\\n"""		1446050	0					
ANR	1446096	Argument	stack [ sp ] . line		1446050	2					
ANR	1446097	MemberAccess	stack [ sp ] . line		1446050	0					
ANR	1446098	ArrayIndexing	stack [ sp ]		1446050	0					
ANR	1446099	Identifier	stack		1446050	0					
ANR	1446100	Identifier	sp		1446050	1					
ANR	1446101	Identifier	line		1446050	1					
ANR	1446102	Argument	addr		1446050	3					
ANR	1446103	Identifier	addr		1446050	0					
ANR	1446104	Argument	* p		1446050	4					
ANR	1446105	UnaryOperationExpression	* p		1446050	0					
ANR	1446106	UnaryOperator	*		1446050	0					
ANR	1446107	Identifier	p		1446050	1					
ANR	1446108	ForStatement	for ( s = level ; s >= 0 ; -- s )		1446050	5					
ANR	1446109	ForInit	s = level ;	254:7:6097:6106	1446050	0	True				
ANR	1446110	AssignmentExpression	s = level		1446050	0		=			
ANR	1446111	Identifier	s		1446050	0					
ANR	1446112	Identifier	level		1446050	1					
ANR	1446113	Condition	s >= 0	254:18:6108:6113	1446050	1	True				
ANR	1446114	RelationalExpression	s >= 0		1446050	0		>=			
ANR	1446115	Identifier	s		1446050	0					
ANR	1446116	PrimaryExpression	0		1446050	1					
ANR	1446117	UnaryExpression	-- s	254:26:6116:6118	1446050	2	True				
ANR	1446118	IncDec	--		1446050	0					
ANR	1446119	Identifier	s		1446050	1					
ANR	1446120	CompoundStatement		12:4:269:269	1446050	3					
ANR	1446121	IfStatement	"if ( check_label ( stack [ s ] . labels , p , & l , ( * * p == '.' && s == sp ) ? previous : NULL , 0 ) )"		1446050	0					
ANR	1446122	Condition	"check_label ( stack [ s ] . labels , p , & l , ( * * p == '.' && s == sp ) ? previous : NULL , 0 )"	256:10:6137:6227	1446050	0	True				
ANR	1446123	CallExpression	"check_label ( stack [ s ] . labels , p , & l , ( * * p == '.' && s == sp ) ? previous : NULL , 0 )"		1446050	0					
ANR	1446124	Callee	check_label		1446050	0					
ANR	1446125	Identifier	check_label		1446050	0					
ANR	1446126	ArgumentList	stack [ s ] . labels		1446050	1					
ANR	1446127	Argument	stack [ s ] . labels		1446050	0					
ANR	1446128	MemberAccess	stack [ s ] . labels		1446050	0					
ANR	1446129	ArrayIndexing	stack [ s ]		1446050	0					
ANR	1446130	Identifier	stack		1446050	0					
ANR	1446131	Identifier	s		1446050	1					
ANR	1446132	Identifier	labels		1446050	1					
ANR	1446133	Argument	p		1446050	1					
ANR	1446134	Identifier	p		1446050	0					
ANR	1446135	Argument	& l		1446050	2					
ANR	1446136	UnaryOperationExpression	& l		1446050	0					
ANR	1446137	UnaryOperator	&		1446050	0					
ANR	1446138	Identifier	l		1446050	1					
ANR	1446139	Argument	( * * p == '.' && s == sp ) ? previous : NULL		1446050	3					
ANR	1446140	ConditionalExpression	( * * p == '.' && s == sp ) ? previous : NULL		1446050	0					
ANR	1446141	Condition	* * p == '.' && s == sp		1446050	0					
ANR	1446142	AndExpression	* * p == '.' && s == sp		1446050	0		&&			
ANR	1446143	EqualityExpression	* * p == '.'		1446050	0		==			
ANR	1446144	UnaryOperationExpression	* * p		1446050	0					
ANR	1446145	UnaryOperator	*		1446050	0					
ANR	1446146	UnaryOperationExpression	* p		1446050	1					
ANR	1446147	UnaryOperator	*		1446050	0					
ANR	1446148	Identifier	p		1446050	1					
ANR	1446149	PrimaryExpression	'.'		1446050	1					
ANR	1446150	EqualityExpression	s == sp		1446050	1		==			
ANR	1446151	Identifier	s		1446050	0					
ANR	1446152	Identifier	sp		1446050	1					
ANR	1446153	Identifier	previous		1446050	1					
ANR	1446154	Identifier	NULL		1446050	2					
ANR	1446155	Argument	0		1446050	4					
ANR	1446156	PrimaryExpression	0		1446050	0					
ANR	1446157	BreakStatement	break ;	258:1:6231:6236	1446050	1	True				
ANR	1446158	IfStatement	if ( s < 0 )		1446050	6					
ANR	1446159	Condition	s < 0	260:6:6250:6254	1446050	0	True				
ANR	1446160	RelationalExpression	s < 0		1446050	0		<			
ANR	1446161	Identifier	s		1446050	0					
ANR	1446162	PrimaryExpression	0		1446050	1					
ANR	1446163	CompoundStatement		20:6:439:461	1446050	1					
ANR	1446164	IdentifierDeclStatement	const char * old_p = * p ;	263:6:6295:6317	1446050	0	True				
ANR	1446165	IdentifierDecl	* old_p = * p		1446050	0					
ANR	1446166	IdentifierDeclType	const char *		1446050	0					
ANR	1446167	Identifier	old_p		1446050	1					
ANR	1446168	AssignmentExpression	* old_p = * p		1446050	2		=			
ANR	1446169	Identifier	old_p		1446050	0					
ANR	1446170	UnaryOperationExpression	* p		1446050	1					
ANR	1446171	UnaryOperator	*		1446050	0					
ANR	1446172	Identifier	p		1446050	1					
ANR	1446173	IfStatement	if ( ! exists && print_errors )		1446050	1					
ANR	1446174	Condition	! exists && print_errors	266:7:6429:6451	1446050	0	True				
ANR	1446175	AndExpression	! exists && print_errors		1446050	0		&&			
ANR	1446176	UnaryOperationExpression	! exists		1446050	0					
ANR	1446177	UnaryOperator	!		1446050	0					
ANR	1446178	Identifier	exists		1446050	1					
ANR	1446179	Identifier	print_errors		1446050	1					
ANR	1446180	ExpressionStatement	"printerr ( 1 , ""using undefined label %.*s\\n"" , * p - old_p , old_p )"	267:5:6459:6522	1446050	1	True				
ANR	1446181	CallExpression	"printerr ( 1 , ""using undefined label %.*s\\n"" , * p - old_p , old_p )"		1446050	0					
ANR	1446182	Callee	printerr		1446050	0					
ANR	1446183	Identifier	printerr		1446050	0					
ANR	1446184	ArgumentList	1		1446050	1					
ANR	1446185	Argument	1		1446050	0					
ANR	1446186	PrimaryExpression	1		1446050	0					
ANR	1446187	Argument	"""using undefined label %.*s\\n"""		1446050	1					
ANR	1446188	PrimaryExpression	"""using undefined label %.*s\\n"""		1446050	0					
ANR	1446189	Argument	* p - old_p		1446050	2					
ANR	1446190	AdditiveExpression	* p - old_p		1446050	0		-			
ANR	1446191	UnaryOperationExpression	* p		1446050	0					
ANR	1446192	UnaryOperator	*		1446050	0					
ANR	1446193	Identifier	p		1446050	1					
ANR	1446194	Identifier	old_p		1446050	1					
ANR	1446195	Argument	old_p		1446050	3					
ANR	1446196	Identifier	old_p		1446050	0					
ANR	1446197	IfStatement	if ( verbose >= 7 )		1446050	2					
ANR	1446198	Condition	verbose >= 7	269:7:6604:6615	1446050	0	True				
ANR	1446199	RelationalExpression	verbose >= 7		1446050	0		>=			
ANR	1446200	Identifier	verbose		1446050	0					
ANR	1446201	PrimaryExpression	7		1446050	1					
ANR	1446202	ExpressionStatement	"fprintf ( stderr , ""rd_label returns invalid value\\n"" )"	270:5:6623:6675	1446050	1	True				
ANR	1446203	CallExpression	"fprintf ( stderr , ""rd_label returns invalid value\\n"" )"		1446050	0					
ANR	1446204	Callee	fprintf		1446050	0					
ANR	1446205	Identifier	fprintf		1446050	0					
ANR	1446206	ArgumentList	stderr		1446050	1					
ANR	1446207	Argument	stderr		1446050	0					
ANR	1446208	Identifier	stderr		1446050	0					
ANR	1446209	Argument	"""rd_label returns invalid value\\n"""		1446050	1					
ANR	1446210	PrimaryExpression	"""rd_label returns invalid value\\n"""		1446050	0					
ANR	1446211	ReturnStatement	return l != NULL ;	271:3:6680:6696	1446050	3	True				
ANR	1446212	EqualityExpression	l != NULL		1446050	0		!=			
ANR	1446213	Identifier	l		1446050	0					
ANR	1446214	Identifier	NULL		1446050	1					
ANR	1446215	IfStatement	if ( exists )		1446050	7					
ANR	1446216	Condition	exists	273:6:6710:6715	1446050	0	True				
ANR	1446217	Identifier	exists		1446050	0					
ANR	1446218	ExpressionStatement	* exists = 1	274:4:6722:6733	1446050	1	True				
ANR	1446219	AssignmentExpression	* exists = 1		1446050	0		=			
ANR	1446220	UnaryOperationExpression	* exists		1446050	0					
ANR	1446221	UnaryOperator	*		1446050	0					
ANR	1446222	Identifier	exists		1446050	1					
ANR	1446223	PrimaryExpression	1		1446050	1					
ANR	1446224	IfStatement	if ( verbose >= 7 )		1446050	8					
ANR	1446225	Condition	verbose >= 7	275:6:6741:6752	1446050	0	True				
ANR	1446226	RelationalExpression	verbose >= 7		1446050	0		>=			
ANR	1446227	Identifier	verbose		1446050	0					
ANR	1446228	PrimaryExpression	7		1446050	1					
ANR	1446229	ExpressionStatement	"fprintf ( stderr , ""rd_label returns valid value 0x%x\\n"" , l -> value )"	276:4:6759:6824	1446050	1	True				
ANR	1446230	CallExpression	"fprintf ( stderr , ""rd_label returns valid value 0x%x\\n"" , l -> value )"		1446050	0					
ANR	1446231	Callee	fprintf		1446050	0					
ANR	1446232	Identifier	fprintf		1446050	0					
ANR	1446233	ArgumentList	stderr		1446050	1					
ANR	1446234	Argument	stderr		1446050	0					
ANR	1446235	Identifier	stderr		1446050	0					
ANR	1446236	Argument	"""rd_label returns valid value 0x%x\\n"""		1446050	1					
ANR	1446237	PrimaryExpression	"""rd_label returns valid value 0x%x\\n"""		1446050	0					
ANR	1446238	Argument	l -> value		1446050	2					
ANR	1446239	PtrMemberAccess	l -> value		1446050	0					
ANR	1446240	Identifier	l		1446050	0					
ANR	1446241	Identifier	value		1446050	1					
ANR	1446242	ReturnStatement	return l -> value ;	277:2:6828:6843	1446050	9	True				
ANR	1446243	PtrMemberAccess	l -> value		1446050	0					
ANR	1446244	Identifier	l		1446050	0					
ANR	1446245	Identifier	value		1446050	1					
ANR	1446246	ReturnType	static int		1446050	1					
ANR	1446247	Identifier	rd_label		1446050	2					
ANR	1446248	ParameterList	"const char * * p , int * exists , struct label * * previous , int level , int print_errors"		1446050	3					
ANR	1446249	Parameter	const char * * p	242:10:5769:5782	1446050	0	True				
ANR	1446250	ParameterType	const char * *		1446050	0					
ANR	1446251	Identifier	p		1446050	1					
ANR	1446252	Parameter	int * exists	242:26:5785:5795	1446050	1	True				
ANR	1446253	ParameterType	int *		1446050	0					
ANR	1446254	Identifier	exists		1446050	1					
ANR	1446255	Parameter	struct label * * previous	242:39:5798:5820	1446050	2	True				
ANR	1446256	ParameterType	struct label * *		1446050	0					
ANR	1446257	Identifier	previous		1446050	1					
ANR	1446258	Parameter	int level	242:64:5823:5831	1446050	3	True				
ANR	1446259	ParameterType	int		1446050	0					
ANR	1446260	Identifier	level		1446050	1					
ANR	1446261	Parameter	int print_errors	243:3:5837:5852	1446050	4	True				
ANR	1446262	ParameterType	int		1446050	0					
ANR	1446263	Identifier	print_errors		1446050	1					
ANR	1446264	CFGEntryNode	ENTRY		1446050		True				
ANR	1446265	CFGExitNode	EXIT		1446050		True				
ANR	1446266	Symbol	* sp		1446050						
ANR	1446267	Symbol	stack		1446050						
ANR	1446268	Symbol	* previous		1446050						
ANR	1446269	Symbol	* exists		1446050						
ANR	1446270	Symbol	old_p		1446050						
ANR	1446271	Symbol	print_errors		1446050						
ANR	1446272	Symbol	stack [ sp ] . line		1446050						
ANR	1446273	Symbol	* * p		1446050						
ANR	1446274	Symbol	addr		1446050						
ANR	1446275	Symbol	sp		1446050						
ANR	1446276	Symbol	l -> value		1446050						
ANR	1446277	Symbol	NULL		1446050						
ANR	1446278	Symbol	previous		1446050						
ANR	1446279	Symbol	level		1446050						
ANR	1446280	Symbol	l		1446050						
ANR	1446281	Symbol	stderr		1446050						
ANR	1446282	Symbol	check_label		1446050						
ANR	1446283	Symbol	verbose		1446050						
ANR	1446284	Symbol	p		1446050						
ANR	1446285	Symbol	& l		1446050						
ANR	1446286	Symbol	s		1446050						
ANR	1446287	Symbol	* l		1446050						
ANR	1446288	Symbol	stack [ s ] . labels		1446050						
ANR	1446289	Symbol	exists		1446050						
ANR	1446290	Symbol	* stack		1446050						
ANR	1446291	Symbol	* p		1446050						
ANR	1446292	Symbol	* s		1446050						
ANR	1446293	Function	rd_value	280:0:6848:10122							
ANR	1446294	FunctionDef	"rd_value (const char * * p , int * valid , int level , int * check , int print_errors)"		1446293	0					
ANR	1446295	CompoundStatement		282:0:6938:10122	1446293	0					
ANR	1446296	IdentifierDeclStatement	"int sign = 1 , not = 0 , base , v ;"	283:2:6942:6972	1446293	0	True				
ANR	1446297	IdentifierDecl	sign = 1		1446293	0					
ANR	1446298	IdentifierDeclType	int		1446293	0					
ANR	1446299	Identifier	sign		1446293	1					
ANR	1446300	AssignmentExpression	sign = 1		1446293	2		=			
ANR	1446301	Identifier	sign		1446293	0					
ANR	1446302	PrimaryExpression	1		1446293	1					
ANR	1446303	IdentifierDecl	not = 0		1446293	1					
ANR	1446304	IdentifierDeclType	int		1446293	0					
ANR	1446305	Identifier	not		1446293	1					
ANR	1446306	AssignmentExpression	not = 0		1446293	2		=			
ANR	1446307	Identifier	not		1446293	0					
ANR	1446308	PrimaryExpression	0		1446293	1					
ANR	1446309	IdentifierDecl	base		1446293	2					
ANR	1446310	IdentifierDeclType	int		1446293	0					
ANR	1446311	Identifier	base		1446293	1					
ANR	1446312	IdentifierDecl	v		1446293	3					
ANR	1446313	IdentifierDeclType	int		1446293	0					
ANR	1446314	Identifier	v		1446293	1					
ANR	1446315	IdentifierDeclStatement	"const char * p0 , * p1 , * p2 ;"	284:2:6976:7000	1446293	1	True				
ANR	1446316	IdentifierDecl	* p0		1446293	0					
ANR	1446317	IdentifierDeclType	const char *		1446293	0					
ANR	1446318	Identifier	p0		1446293	1					
ANR	1446319	IdentifierDecl	* p1		1446293	1					
ANR	1446320	IdentifierDeclType	const char *		1446293	0					
ANR	1446321	Identifier	p1		1446293	1					
ANR	1446322	IdentifierDecl	* p2		1446293	2					
ANR	1446323	IdentifierDeclType	const char *		1446293	0					
ANR	1446324	Identifier	p2		1446293	1					
ANR	1446325	IfStatement	if ( verbose >= 6 )		1446293	2					
ANR	1446326	Condition	verbose >= 6	285:6:7008:7019	1446293	0	True				
ANR	1446327	RelationalExpression	verbose >= 6		1446293	0		>=			
ANR	1446328	Identifier	verbose		1446293	0					
ANR	1446329	PrimaryExpression	6		1446293	1					
ANR	1446330	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Starting to read value (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"	286:4:7026:7129	1446293	1	True				
ANR	1446331	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Starting to read value (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"		1446293	0					
ANR	1446332	Callee	fprintf		1446293	0					
ANR	1446333	Identifier	fprintf		1446293	0					
ANR	1446334	ArgumentList	stderr		1446293	1					
ANR	1446335	Argument	stderr		1446293	0					
ANR	1446336	Identifier	stderr		1446293	0					
ANR	1446337	Argument	"""%5d (0x%04x): Starting to read value (string=%s).\\n"""		1446293	1					
ANR	1446338	PrimaryExpression	"""%5d (0x%04x): Starting to read value (string=%s).\\n"""		1446293	0					
ANR	1446339	Argument	stack [ sp ] . line		1446293	2					
ANR	1446340	MemberAccess	stack [ sp ] . line		1446293	0					
ANR	1446341	ArrayIndexing	stack [ sp ]		1446293	0					
ANR	1446342	Identifier	stack		1446293	0					
ANR	1446343	Identifier	sp		1446293	1					
ANR	1446344	Identifier	line		1446293	1					
ANR	1446345	Argument	addr		1446293	3					
ANR	1446346	Identifier	addr		1446293	0					
ANR	1446347	Argument	* p		1446293	4					
ANR	1446348	UnaryOperationExpression	* p		1446293	0					
ANR	1446349	UnaryOperator	*		1446293	0					
ANR	1446350	Identifier	p		1446293	1					
ANR	1446351	ExpressionStatement	* p = delspc ( * p )	288:2:7133:7149	1446293	3	True				
ANR	1446352	AssignmentExpression	* p = delspc ( * p )		1446293	0		=			
ANR	1446353	UnaryOperationExpression	* p		1446293	0					
ANR	1446354	UnaryOperator	*		1446293	0					
ANR	1446355	Identifier	p		1446293	1					
ANR	1446356	CallExpression	delspc ( * p )		1446293	1					
ANR	1446357	Callee	delspc		1446293	0					
ANR	1446358	Identifier	delspc		1446293	0					
ANR	1446359	ArgumentList	* p		1446293	1					
ANR	1446360	Argument	* p		1446293	0					
ANR	1446361	UnaryOperationExpression	* p		1446293	0					
ANR	1446362	UnaryOperator	*		1446293	0					
ANR	1446363	Identifier	p		1446293	1					
ANR	1446364	WhileStatement	"while ( * * p && strchr ( ""+-~"" , * * p ) )"		1446293	4					
ANR	1446365	Condition	"* * p && strchr ( ""+-~"" , * * p )"	289:9:7160:7185	1446293	0	True				
ANR	1446366	AndExpression	"* * p && strchr ( ""+-~"" , * * p )"		1446293	0		&&			
ANR	1446367	UnaryOperationExpression	* * p		1446293	0					
ANR	1446368	UnaryOperator	*		1446293	0					
ANR	1446369	UnaryOperationExpression	* p		1446293	1					
ANR	1446370	UnaryOperator	*		1446293	0					
ANR	1446371	Identifier	p		1446293	1					
ANR	1446372	CallExpression	"strchr ( ""+-~"" , * * p )"		1446293	1					
ANR	1446373	Callee	strchr		1446293	0					
ANR	1446374	Identifier	strchr		1446293	0					
ANR	1446375	ArgumentList	"""+-~"""		1446293	1					
ANR	1446376	Argument	"""+-~"""		1446293	0					
ANR	1446377	PrimaryExpression	"""+-~"""		1446293	0					
ANR	1446378	Argument	* * p		1446293	1					
ANR	1446379	UnaryOperationExpression	* * p		1446293	0					
ANR	1446380	UnaryOperator	*		1446293	0					
ANR	1446381	UnaryOperationExpression	* p		1446293	1					
ANR	1446382	UnaryOperator	*		1446293	0					
ANR	1446383	Identifier	p		1446293	1					
ANR	1446384	CompoundStatement		9:4:253:253	1446293	1					
ANR	1446385	IfStatement	if ( * * p == '-' )		1446293	0					
ANR	1446386	Condition	* * p == '-'	291:10:7204:7213	1446293	0	True				
ANR	1446387	EqualityExpression	* * p == '-'		1446293	0		==			
ANR	1446388	UnaryOperationExpression	* * p		1446293	0					
ANR	1446389	UnaryOperator	*		1446293	0					
ANR	1446390	UnaryOperationExpression	* p		1446293	1					
ANR	1446391	UnaryOperator	*		1446293	0					
ANR	1446392	Identifier	p		1446293	1					
ANR	1446393	PrimaryExpression	'-'		1446293	1					
ANR	1446394	ExpressionStatement	sign = - sign	292:1:7217:7229	1446293	1	True				
ANR	1446395	AssignmentExpression	sign = - sign		1446293	0		=			
ANR	1446396	Identifier	sign		1446293	0					
ANR	1446397	UnaryOperationExpression	- sign		1446293	1					
ANR	1446398	UnaryOperator	-		1446293	0					
ANR	1446399	Identifier	sign		1446293	1					
ANR	1446400	ElseStatement	else		1446293	0					
ANR	1446401	IfStatement	if ( * * p == '~' )		1446293	0					
ANR	1446402	Condition	* * p == '~'	293:15:7246:7255	1446293	0	True				
ANR	1446403	EqualityExpression	* * p == '~'		1446293	0		==			
ANR	1446404	UnaryOperationExpression	* * p		1446293	0					
ANR	1446405	UnaryOperator	*		1446293	0					
ANR	1446406	UnaryOperationExpression	* p		1446293	1					
ANR	1446407	UnaryOperator	*		1446293	0					
ANR	1446408	Identifier	p		1446293	1					
ANR	1446409	PrimaryExpression	'~'		1446293	1					
ANR	1446410	ExpressionStatement	not = ~not	294:1:7259:7269	1446293	1	True				
ANR	1446411	AssignmentExpression	not = ~not		1446293	0		=			
ANR	1446412	Identifier	not		1446293	0					
ANR	1446413	Identifier	~not		1446293	1					
ANR	1446414	ExpressionStatement	( * p ) ++	295:6:7277:7283	1446293	1	True				
ANR	1446415	PostIncDecOperationExpression	( * p ) ++		1446293	0					
ANR	1446416	UnaryOperationExpression	* p		1446293	0					
ANR	1446417	UnaryOperator	*		1446293	0					
ANR	1446418	Identifier	p		1446293	1					
ANR	1446419	IncDec	++		1446293	1					
ANR	1446420	ExpressionStatement	* p = delspc ( * p )	296:6:7291:7307	1446293	2	True				
ANR	1446421	AssignmentExpression	* p = delspc ( * p )		1446293	0		=			
ANR	1446422	UnaryOperationExpression	* p		1446293	0					
ANR	1446423	UnaryOperator	*		1446293	0					
ANR	1446424	Identifier	p		1446293	1					
ANR	1446425	CallExpression	delspc ( * p )		1446293	1					
ANR	1446426	Callee	delspc		1446293	0					
ANR	1446427	Identifier	delspc		1446293	0					
ANR	1446428	ArgumentList	* p		1446293	1					
ANR	1446429	Argument	* p		1446293	0					
ANR	1446430	UnaryOperationExpression	* p		1446293	0					
ANR	1446431	UnaryOperator	*		1446293	0					
ANR	1446432	Identifier	p		1446293	1					
ANR	1446433	ExpressionStatement	base = 10	298:2:7317:7326	1446293	5	True				
ANR	1446434	AssignmentExpression	base = 10		1446293	0		=			
ANR	1446435	Identifier	base		1446293	0					
ANR	1446436	PrimaryExpression	10		1446293	1					
ANR	1446437	IfStatement	if ( * * p != '(' )		1446293	6					
ANR	1446438	Condition	* * p != '('	301:6:7455:7464	1446293	0	True				
ANR	1446439	EqualityExpression	* * p != '('		1446293	0		!=			
ANR	1446440	UnaryOperationExpression	* * p		1446293	0					
ANR	1446441	UnaryOperator	*		1446293	0					
ANR	1446442	UnaryOperationExpression	* p		1446293	1					
ANR	1446443	UnaryOperator	*		1446293	0					
ANR	1446444	Identifier	p		1446293	1					
ANR	1446445	PrimaryExpression	'('		1446293	1					
ANR	1446446	ExpressionStatement	* check = 0	302:4:7471:7481	1446293	1	True				
ANR	1446447	AssignmentExpression	* check = 0		1446293	0		=			
ANR	1446448	UnaryOperationExpression	* check		1446293	0					
ANR	1446449	UnaryOperator	*		1446293	0					
ANR	1446450	Identifier	check		1446293	1					
ANR	1446451	PrimaryExpression	0		1446293	1					
ANR	1446452	SwitchStatement	switch ( * * p )		1446293	7					
ANR	1446453	Condition	* * p	304:10:7494:7496	1446293	0	True				
ANR	1446454	UnaryOperationExpression	* * p		1446293	0					
ANR	1446455	UnaryOperator	*		1446293	0					
ANR	1446456	UnaryOperationExpression	* p		1446293	1					
ANR	1446457	UnaryOperator	*		1446293	0					
ANR	1446458	Identifier	p		1446293	1					
ANR	1446459	CompoundStatement		27:6:615:630	1446293	1					
ANR	1446460	IdentifierDeclStatement	"int exist , retval ;"	306:6:7511:7528	1446293	0	True				
ANR	1446461	IdentifierDecl	exist		1446293	0					
ANR	1446462	IdentifierDeclType	int		1446293	0					
ANR	1446463	Identifier	exist		1446293	1					
ANR	1446464	IdentifierDecl	retval		1446293	1					
ANR	1446465	IdentifierDeclType	int		1446293	0					
ANR	1446466	Identifier	retval		1446293	1					
ANR	1446467	IdentifierDeclStatement	char quote ;	307:6:7536:7546	1446293	1	True				
ANR	1446468	IdentifierDecl	quote		1446293	0					
ANR	1446469	IdentifierDeclType	char		1446293	0					
ANR	1446470	Identifier	quote		1446293	1					
ANR	1446471	IdentifierDeclStatement	int dummy_check ;	308:6:7554:7569	1446293	2	True				
ANR	1446472	IdentifierDecl	dummy_check		1446293	0					
ANR	1446473	IdentifierDeclType	int		1446293	0					
ANR	1446474	Identifier	dummy_check		1446293	1					
ANR	1446475	Label	case '(' :	309:4:7575:7583	1446293	3	True				
ANR	1446476	ExpressionStatement	( * p ) ++	310:6:7591:7597	1446293	4	True				
ANR	1446477	PostIncDecOperationExpression	( * p ) ++		1446293	0					
ANR	1446478	UnaryOperationExpression	* p		1446293	0					
ANR	1446479	UnaryOperator	*		1446293	0					
ANR	1446480	Identifier	p		1446293	1					
ANR	1446481	IncDec	++		1446293	1					
ANR	1446482	ExpressionStatement	dummy_check = 0	311:6:7605:7620	1446293	5	True				
ANR	1446483	AssignmentExpression	dummy_check = 0		1446293	0		=			
ANR	1446484	Identifier	dummy_check		1446293	0					
ANR	1446485	PrimaryExpression	0		1446293	1					
ANR	1446486	ExpressionStatement	"retval = not ^ ( sign * do_rd_expr ( p , ')' , valid , level , & dummy_check , print_errors ) )"	312:6:7628:7719	1446293	6	True				
ANR	1446487	AssignmentExpression	"retval = not ^ ( sign * do_rd_expr ( p , ')' , valid , level , & dummy_check , print_errors ) )"		1446293	0		=			
ANR	1446488	Identifier	retval		1446293	0					
ANR	1446489	ExclusiveOrExpression	"not ^ ( sign * do_rd_expr ( p , ')' , valid , level , & dummy_check , print_errors ) )"		1446293	1		^			
ANR	1446490	Identifier	not		1446293	0					
ANR	1446491	MultiplicativeExpression	"sign * do_rd_expr ( p , ')' , valid , level , & dummy_check , print_errors )"		1446293	1		*			
ANR	1446492	Identifier	sign		1446293	0					
ANR	1446493	CallExpression	"do_rd_expr ( p , ')' , valid , level , & dummy_check , print_errors )"		1446293	1					
ANR	1446494	Callee	do_rd_expr		1446293	0					
ANR	1446495	Identifier	do_rd_expr		1446293	0					
ANR	1446496	ArgumentList	p		1446293	1					
ANR	1446497	Argument	p		1446293	0					
ANR	1446498	Identifier	p		1446293	0					
ANR	1446499	Argument	')'		1446293	1					
ANR	1446500	PrimaryExpression	')'		1446293	0					
ANR	1446501	Argument	valid		1446293	2					
ANR	1446502	Identifier	valid		1446293	0					
ANR	1446503	Argument	level		1446293	3					
ANR	1446504	Identifier	level		1446293	0					
ANR	1446505	Argument	& dummy_check		1446293	4					
ANR	1446506	UnaryOperationExpression	& dummy_check		1446293	0					
ANR	1446507	UnaryOperator	&		1446293	0					
ANR	1446508	Identifier	dummy_check		1446293	1					
ANR	1446509	Argument	print_errors		1446293	5					
ANR	1446510	Identifier	print_errors		1446293	0					
ANR	1446511	ExpressionStatement	++ * p	314:6:7727:7731	1446293	7	True				
ANR	1446512	UnaryExpression	++ * p		1446293	0					
ANR	1446513	IncDec	++		1446293	0					
ANR	1446514	UnaryOperationExpression	* p		1446293	1					
ANR	1446515	UnaryOperator	*		1446293	0					
ANR	1446516	Identifier	p		1446293	1					
ANR	1446517	ReturnStatement	return retval ;	315:6:7739:7752	1446293	8	True				
ANR	1446518	Identifier	retval		1446293	0					
ANR	1446519	Label	case '0' :	316:4:7758:7766	1446293	9	True				
ANR	1446520	IfStatement	if ( ( * p ) [ 1 ] == 'x' )		1446293	10					
ANR	1446521	Condition	( * p ) [ 1 ] == 'x'	317:10:7778:7791	1446293	0	True				
ANR	1446522	EqualityExpression	( * p ) [ 1 ] == 'x'		1446293	0		==			
ANR	1446523	ArrayIndexing	( * p ) [ 1 ]		1446293	0					
ANR	1446524	UnaryOperationExpression	* p		1446293	0					
ANR	1446525	UnaryOperator	*		1446293	0					
ANR	1446526	Identifier	p		1446293	1					
ANR	1446527	PrimaryExpression	1		1446293	1					
ANR	1446528	PrimaryExpression	'x'		1446293	1					
ANR	1446529	CompoundStatement		37:1:856:856	1446293	1					
ANR	1446530	ExpressionStatement	( * p ) += 2	319:3:7800:7809	1446293	0	True				
ANR	1446531	AssignmentExpression	( * p ) += 2		1446293	0		+=			
ANR	1446532	UnaryOperationExpression	* p		1446293	0					
ANR	1446533	UnaryOperator	*		1446293	0					
ANR	1446534	Identifier	p		1446293	1					
ANR	1446535	PrimaryExpression	2		1446293	1					
ANR	1446536	ReturnStatement	"return not ^ ( sign * rd_number ( p , NULL , 0x10 ) ) ;"	320:3:7814:7861	1446293	1	True				
ANR	1446537	ExclusiveOrExpression	"not ^ ( sign * rd_number ( p , NULL , 0x10 ) )"		1446293	0		^			
ANR	1446538	Identifier	not		1446293	0					
ANR	1446539	MultiplicativeExpression	"sign * rd_number ( p , NULL , 0x10 )"		1446293	1		*			
ANR	1446540	Identifier	sign		1446293	0					
ANR	1446541	CallExpression	"rd_number ( p , NULL , 0x10 )"		1446293	1					
ANR	1446542	Callee	rd_number		1446293	0					
ANR	1446543	Identifier	rd_number		1446293	0					
ANR	1446544	ArgumentList	p		1446293	1					
ANR	1446545	Argument	p		1446293	0					
ANR	1446546	Identifier	p		1446293	0					
ANR	1446547	Argument	NULL		1446293	1					
ANR	1446548	Identifier	NULL		1446293	0					
ANR	1446549	Argument	0x10		1446293	2					
ANR	1446550	PrimaryExpression	0x10		1446293	0					
ANR	1446551	ExpressionStatement	base = 8	322:6:7872:7880	1446293	11	True				
ANR	1446552	AssignmentExpression	base = 8		1446293	0		=			
ANR	1446553	Identifier	base		1446293	0					
ANR	1446554	PrimaryExpression	8		1446293	1					
ANR	1446555	Label	case '1' :	324:4:7966:7974	1446293	12	True				
ANR	1446556	Label	case '2' :	325:4:7980:7988	1446293	13	True				
ANR	1446557	Label	case '3' :	326:4:7994:8002	1446293	14	True				
ANR	1446558	Label	case '4' :	327:4:8008:8016	1446293	15	True				
ANR	1446559	Label	case '5' :	328:4:8022:8030	1446293	16	True				
ANR	1446560	Label	case '6' :	329:4:8036:8044	1446293	17	True				
ANR	1446561	Label	case '7' :	330:4:8050:8058	1446293	18	True				
ANR	1446562	Label	case '8' :	331:4:8064:8072	1446293	19	True				
ANR	1446563	Label	case '9' :	332:4:8078:8086	1446293	20	True				
ANR	1446564	ExpressionStatement	p0 = * p	333:6:8094:8101	1446293	21	True				
ANR	1446565	AssignmentExpression	p0 = * p		1446293	0		=			
ANR	1446566	Identifier	p0		1446293	0					
ANR	1446567	UnaryOperationExpression	* p		1446293	1					
ANR	1446568	UnaryOperator	*		1446293	0					
ANR	1446569	Identifier	p		1446293	1					
ANR	1446570	ExpressionStatement	"rd_number ( p , & p1 , 36 )"	334:6:8109:8131	1446293	22	True				
ANR	1446571	CallExpression	"rd_number ( p , & p1 , 36 )"		1446293	0					
ANR	1446572	Callee	rd_number		1446293	0					
ANR	1446573	Identifier	rd_number		1446293	0					
ANR	1446574	ArgumentList	p		1446293	1					
ANR	1446575	Argument	p		1446293	0					
ANR	1446576	Identifier	p		1446293	0					
ANR	1446577	Argument	& p1		1446293	1					
ANR	1446578	UnaryOperationExpression	& p1		1446293	0					
ANR	1446579	UnaryOperator	&		1446293	0					
ANR	1446580	Identifier	p1		1446293	1					
ANR	1446581	Argument	36		1446293	2					
ANR	1446582	PrimaryExpression	36		1446293	0					
ANR	1446583	ExpressionStatement	p1 --	335:6:8178:8182	1446293	23	True				
ANR	1446584	PostIncDecOperationExpression	p1 --		1446293	0					
ANR	1446585	Identifier	p1		1446293	0					
ANR	1446586	IncDec	--		1446293	1					
ANR	1446587	SwitchStatement	switch ( * p1 )		1446293	24					
ANR	1446588	Condition	* p1	336:14:8239:8241	1446293	0	True				
ANR	1446589	UnaryOperationExpression	* p1		1446293	0					
ANR	1446590	UnaryOperator	*		1446293	0					
ANR	1446591	Identifier	p1		1446293	1					
ANR	1446592	CompoundStatement		56:1:1306:1306	1446293	1					
ANR	1446593	Label	case 'h' :	338:1:8248:8256	1446293	0	True				
ANR	1446594	Label	case 'H' :	339:1:8259:8267	1446293	1	True				
ANR	1446595	ExpressionStatement	base = 16	340:3:8272:8281	1446293	2	True				
ANR	1446596	AssignmentExpression	base = 16		1446293	0		=			
ANR	1446597	Identifier	base		1446293	0					
ANR	1446598	PrimaryExpression	16		1446293	1					
ANR	1446599	BreakStatement	break ;	341:3:8286:8291	1446293	3	True				
ANR	1446600	Label	case 'b' :	342:1:8294:8302	1446293	4	True				
ANR	1446601	Label	case 'B' :	343:1:8305:8313	1446293	5	True				
ANR	1446602	ExpressionStatement	base = 2	344:3:8318:8326	1446293	6	True				
ANR	1446603	AssignmentExpression	base = 2		1446293	0		=			
ANR	1446604	Identifier	base		1446293	0					
ANR	1446605	PrimaryExpression	2		1446293	1					
ANR	1446606	BreakStatement	break ;	345:3:8331:8336	1446293	7	True				
ANR	1446607	Label	case 'o' :	346:1:8339:8347	1446293	8	True				
ANR	1446608	Label	case 'O' :	347:1:8350:8358	1446293	9	True				
ANR	1446609	Label	case 'q' :	348:1:8361:8369	1446293	10	True				
ANR	1446610	Label	case 'Q' :	349:1:8372:8380	1446293	11	True				
ANR	1446611	ExpressionStatement	base = 8	350:3:8385:8393	1446293	12	True				
ANR	1446612	AssignmentExpression	base = 8		1446293	0		=			
ANR	1446613	Identifier	base		1446293	0					
ANR	1446614	PrimaryExpression	8		1446293	1					
ANR	1446615	BreakStatement	break ;	351:3:8398:8403	1446293	13	True				
ANR	1446616	Label	case 'd' :	352:1:8406:8414	1446293	14	True				
ANR	1446617	Label	case 'D' :	353:1:8417:8425	1446293	15	True				
ANR	1446618	ExpressionStatement	base = 10	354:3:8430:8439	1446293	16	True				
ANR	1446619	AssignmentExpression	base = 10		1446293	0		=			
ANR	1446620	Identifier	base		1446293	0					
ANR	1446621	PrimaryExpression	10		1446293	1					
ANR	1446622	BreakStatement	break ;	355:3:8444:8449	1446293	17	True				
ANR	1446623	Label	default :	356:1:8452:8459	1446293	18	True				
ANR	1446624	Identifier	default		1446293	0					
ANR	1446625	ExpressionStatement	p1 ++	357:3:8481:8485	1446293	19	True				
ANR	1446626	PostIncDecOperationExpression	p1 ++		1446293	0					
ANR	1446627	Identifier	p1		1446293	0					
ANR	1446628	IncDec	++		1446293	1					
ANR	1446629	BreakStatement	break ;	358:3:8490:8495	1446293	20	True				
ANR	1446630	ExpressionStatement	"v = rd_number ( & p0 , & p2 , base )"	360:6:8506:8536	1446293	25	True				
ANR	1446631	AssignmentExpression	"v = rd_number ( & p0 , & p2 , base )"		1446293	0		=			
ANR	1446632	Identifier	v		1446293	0					
ANR	1446633	CallExpression	"rd_number ( & p0 , & p2 , base )"		1446293	1					
ANR	1446634	Callee	rd_number		1446293	0					
ANR	1446635	Identifier	rd_number		1446293	0					
ANR	1446636	ArgumentList	& p0		1446293	1					
ANR	1446637	Argument	& p0		1446293	0					
ANR	1446638	UnaryOperationExpression	& p0		1446293	0					
ANR	1446639	UnaryOperator	&		1446293	0					
ANR	1446640	Identifier	p0		1446293	1					
ANR	1446641	Argument	& p2		1446293	1					
ANR	1446642	UnaryOperationExpression	& p2		1446293	0					
ANR	1446643	UnaryOperator	&		1446293	0					
ANR	1446644	Identifier	p2		1446293	1					
ANR	1446645	Argument	base		1446293	2					
ANR	1446646	Identifier	base		1446293	0					
ANR	1446647	IfStatement	if ( p1 != p2 )		1446293	26					
ANR	1446648	Condition	p1 != p2	361:10:8548:8555	1446293	0	True				
ANR	1446649	EqualityExpression	p1 != p2		1446293	0		!=			
ANR	1446650	Identifier	p1		1446293	0					
ANR	1446651	Identifier	p2		1446293	1					
ANR	1446652	CompoundStatement		81:1:1620:1620	1446293	1					
ANR	1446653	IfStatement	if ( valid )		1446293	0					
ANR	1446654	Condition	valid	363:7:8568:8572	1446293	0	True				
ANR	1446655	Identifier	valid		1446293	0					
ANR	1446656	ExpressionStatement	* valid = 0	364:5:8580:8590	1446293	1	True				
ANR	1446657	AssignmentExpression	* valid = 0		1446293	0		=			
ANR	1446658	UnaryOperationExpression	* valid		1446293	0					
ANR	1446659	UnaryOperator	*		1446293	0					
ANR	1446660	Identifier	valid		1446293	1					
ANR	1446661	PrimaryExpression	0		1446293	1					
ANR	1446662	ElseStatement	else		1446293	0					
ANR	1446663	IfStatement	if ( print_errors )		1446293	0					
ANR	1446664	Condition	print_errors	365:12:8604:8615	1446293	0	True				
ANR	1446665	Identifier	print_errors		1446293	0					
ANR	1446666	ExpressionStatement	"printerr ( 1 , ""invalid character in number: \\'%c\\'\\n"" , * p2 )"	366:5:8623:8681	1446293	1	True				
ANR	1446667	CallExpression	"printerr ( 1 , ""invalid character in number: \\'%c\\'\\n"" , * p2 )"		1446293	0					
ANR	1446668	Callee	printerr		1446293	0					
ANR	1446669	Identifier	printerr		1446293	0					
ANR	1446670	ArgumentList	1		1446293	1					
ANR	1446671	Argument	1		1446293	0					
ANR	1446672	PrimaryExpression	1		1446293	0					
ANR	1446673	Argument	"""invalid character in number: \\'%c\\'\\n"""		1446293	1					
ANR	1446674	PrimaryExpression	"""invalid character in number: \\'%c\\'\\n"""		1446293	0					
ANR	1446675	Argument	* p2		1446293	2					
ANR	1446676	UnaryOperationExpression	* p2		1446293	0					
ANR	1446677	UnaryOperator	*		1446293	0					
ANR	1446678	Identifier	p2		1446293	1					
ANR	1446679	ReturnStatement	return not ^ ( sign * v ) ;	368:6:8692:8715	1446293	27	True				
ANR	1446680	ExclusiveOrExpression	not ^ ( sign * v )		1446293	0		^			
ANR	1446681	Identifier	not		1446293	0					
ANR	1446682	MultiplicativeExpression	sign * v		1446293	1		*			
ANR	1446683	Identifier	sign		1446293	0					
ANR	1446684	Identifier	v		1446293	1					
ANR	1446685	Label	case '$' :	369:4:8721:8729	1446293	28	True				
ANR	1446686	ExpressionStatement	++ * p	370:6:8737:8741	1446293	29	True				
ANR	1446687	UnaryExpression	++ * p		1446293	0					
ANR	1446688	IncDec	++		1446293	0					
ANR	1446689	UnaryOperationExpression	* p		1446293	1					
ANR	1446690	UnaryOperator	*		1446293	0					
ANR	1446691	Identifier	p		1446293	1					
ANR	1446692	ExpressionStatement	* p = delspc ( * p )	371:6:8749:8765	1446293	30	True				
ANR	1446693	AssignmentExpression	* p = delspc ( * p )		1446293	0		=			
ANR	1446694	UnaryOperationExpression	* p		1446293	0					
ANR	1446695	UnaryOperator	*		1446293	0					
ANR	1446696	Identifier	p		1446293	1					
ANR	1446697	CallExpression	delspc ( * p )		1446293	1					
ANR	1446698	Callee	delspc		1446293	0					
ANR	1446699	Identifier	delspc		1446293	0					
ANR	1446700	ArgumentList	* p		1446293	1					
ANR	1446701	Argument	* p		1446293	0					
ANR	1446702	UnaryOperationExpression	* p		1446293	0					
ANR	1446703	UnaryOperator	*		1446293	0					
ANR	1446704	Identifier	p		1446293	1					
ANR	1446705	ExpressionStatement	p0 = * p	372:6:8773:8780	1446293	31	True				
ANR	1446706	AssignmentExpression	p0 = * p		1446293	0		=			
ANR	1446707	Identifier	p0		1446293	0					
ANR	1446708	UnaryOperationExpression	* p		1446293	1					
ANR	1446709	UnaryOperator	*		1446293	0					
ANR	1446710	Identifier	p		1446293	1					
ANR	1446711	ExpressionStatement	"v = rd_number ( & p0 , & p2 , 0x10 )"	373:6:8788:8818	1446293	32	True				
ANR	1446712	AssignmentExpression	"v = rd_number ( & p0 , & p2 , 0x10 )"		1446293	0		=			
ANR	1446713	Identifier	v		1446293	0					
ANR	1446714	CallExpression	"rd_number ( & p0 , & p2 , 0x10 )"		1446293	1					
ANR	1446715	Callee	rd_number		1446293	0					
ANR	1446716	Identifier	rd_number		1446293	0					
ANR	1446717	ArgumentList	& p0		1446293	1					
ANR	1446718	Argument	& p0		1446293	0					
ANR	1446719	UnaryOperationExpression	& p0		1446293	0					
ANR	1446720	UnaryOperator	&		1446293	0					
ANR	1446721	Identifier	p0		1446293	1					
ANR	1446722	Argument	& p2		1446293	1					
ANR	1446723	UnaryOperationExpression	& p2		1446293	0					
ANR	1446724	UnaryOperator	&		1446293	0					
ANR	1446725	Identifier	p2		1446293	1					
ANR	1446726	Argument	0x10		1446293	2					
ANR	1446727	PrimaryExpression	0x10		1446293	0					
ANR	1446728	IfStatement	if ( p2 == * p )		1446293	33					
ANR	1446729	Condition	p2 == * p	374:10:8830:8837	1446293	0	True				
ANR	1446730	EqualityExpression	p2 == * p		1446293	0		==			
ANR	1446731	Identifier	p2		1446293	0					
ANR	1446732	UnaryOperationExpression	* p		1446293	1					
ANR	1446733	UnaryOperator	*		1446293	0					
ANR	1446734	Identifier	p		1446293	1					
ANR	1446735	CompoundStatement		94:1:1902:1902	1446293	1					
ANR	1446736	ExpressionStatement	v = baseaddr	376:3:8846:8858	1446293	0	True				
ANR	1446737	AssignmentExpression	v = baseaddr		1446293	0		=			
ANR	1446738	Identifier	v		1446293	0					
ANR	1446739	Identifier	baseaddr		1446293	1					
ANR	1446740	ElseStatement	else		1446293	0					
ANR	1446741	ExpressionStatement	* p = p2	379:1:8875:8882	1446293	0	True				
ANR	1446742	AssignmentExpression	* p = p2		1446293	0		=			
ANR	1446743	UnaryOperationExpression	* p		1446293	0					
ANR	1446744	UnaryOperator	*		1446293	0					
ANR	1446745	Identifier	p		1446293	1					
ANR	1446746	Identifier	p2		1446293	1					
ANR	1446747	ReturnStatement	return not ^ ( sign * v ) ;	380:6:8890:8913	1446293	34	True				
ANR	1446748	ExclusiveOrExpression	not ^ ( sign * v )		1446293	0		^			
ANR	1446749	Identifier	not		1446293	0					
ANR	1446750	MultiplicativeExpression	sign * v		1446293	1		*			
ANR	1446751	Identifier	sign		1446293	0					
ANR	1446752	Identifier	v		1446293	1					
ANR	1446753	Label	case '%' :	381:4:8919:8927	1446293	35	True				
ANR	1446754	ExpressionStatement	( * p ) ++	382:6:8935:8941	1446293	36	True				
ANR	1446755	PostIncDecOperationExpression	( * p ) ++		1446293	0					
ANR	1446756	UnaryOperationExpression	* p		1446293	0					
ANR	1446757	UnaryOperator	*		1446293	0					
ANR	1446758	Identifier	p		1446293	1					
ANR	1446759	IncDec	++		1446293	1					
ANR	1446760	ReturnStatement	"return not ^ ( sign * rd_number ( p , NULL , 2 ) ) ;"	383:6:8949:8993	1446293	37	True				
ANR	1446761	ExclusiveOrExpression	"not ^ ( sign * rd_number ( p , NULL , 2 ) )"		1446293	0		^			
ANR	1446762	Identifier	not		1446293	0					
ANR	1446763	MultiplicativeExpression	"sign * rd_number ( p , NULL , 2 )"		1446293	1		*			
ANR	1446764	Identifier	sign		1446293	0					
ANR	1446765	CallExpression	"rd_number ( p , NULL , 2 )"		1446293	1					
ANR	1446766	Callee	rd_number		1446293	0					
ANR	1446767	Identifier	rd_number		1446293	0					
ANR	1446768	ArgumentList	p		1446293	1					
ANR	1446769	Argument	p		1446293	0					
ANR	1446770	Identifier	p		1446293	0					
ANR	1446771	Argument	NULL		1446293	1					
ANR	1446772	Identifier	NULL		1446293	0					
ANR	1446773	Argument	2		1446293	2					
ANR	1446774	PrimaryExpression	2		1446293	0					
ANR	1446775	Label	case '\\'' :	384:4:8999:9008	1446293	38	True				
ANR	1446776	Label	"case '""' :"	385:4:9014:9022	1446293	39	True				
ANR	1446777	ExpressionStatement	quote = * * p	386:6:9030:9041	1446293	40	True				
ANR	1446778	AssignmentExpression	quote = * * p		1446293	0		=			
ANR	1446779	Identifier	quote		1446293	0					
ANR	1446780	UnaryOperationExpression	* * p		1446293	1					
ANR	1446781	UnaryOperator	*		1446293	0					
ANR	1446782	UnaryOperationExpression	* p		1446293	1					
ANR	1446783	UnaryOperator	*		1446293	0					
ANR	1446784	Identifier	p		1446293	1					
ANR	1446785	ExpressionStatement	++ * p	387:6:9049:9053	1446293	41	True				
ANR	1446786	UnaryExpression	++ * p		1446293	0					
ANR	1446787	IncDec	++		1446293	0					
ANR	1446788	UnaryOperationExpression	* p		1446293	1					
ANR	1446789	UnaryOperator	*		1446293	0					
ANR	1446790	Identifier	p		1446293	1					
ANR	1446791	ExpressionStatement	"retval = not ^ ( sign * rd_character ( p , valid , print_errors ) )"	388:6:9061:9122	1446293	42	True				
ANR	1446792	AssignmentExpression	"retval = not ^ ( sign * rd_character ( p , valid , print_errors ) )"		1446293	0		=			
ANR	1446793	Identifier	retval		1446293	0					
ANR	1446794	ExclusiveOrExpression	"not ^ ( sign * rd_character ( p , valid , print_errors ) )"		1446293	1		^			
ANR	1446795	Identifier	not		1446293	0					
ANR	1446796	MultiplicativeExpression	"sign * rd_character ( p , valid , print_errors )"		1446293	1		*			
ANR	1446797	Identifier	sign		1446293	0					
ANR	1446798	CallExpression	"rd_character ( p , valid , print_errors )"		1446293	1					
ANR	1446799	Callee	rd_character		1446293	0					
ANR	1446800	Identifier	rd_character		1446293	0					
ANR	1446801	ArgumentList	p		1446293	1					
ANR	1446802	Argument	p		1446293	0					
ANR	1446803	Identifier	p		1446293	0					
ANR	1446804	Argument	valid		1446293	1					
ANR	1446805	Identifier	valid		1446293	0					
ANR	1446806	Argument	print_errors		1446293	2					
ANR	1446807	Identifier	print_errors		1446293	0					
ANR	1446808	IfStatement	if ( * * p != quote )		1446293	43					
ANR	1446809	Condition	* * p != quote	389:10:9134:9145	1446293	0	True				
ANR	1446810	EqualityExpression	* * p != quote		1446293	0		!=			
ANR	1446811	UnaryOperationExpression	* * p		1446293	0					
ANR	1446812	UnaryOperator	*		1446293	0					
ANR	1446813	UnaryOperationExpression	* p		1446293	1					
ANR	1446814	UnaryOperator	*		1446293	0					
ANR	1446815	Identifier	p		1446293	1					
ANR	1446816	Identifier	quote		1446293	1					
ANR	1446817	CompoundStatement		109:1:2210:2210	1446293	1					
ANR	1446818	IfStatement	if ( valid )		1446293	0					
ANR	1446819	Condition	valid	391:7:9158:9162	1446293	0	True				
ANR	1446820	Identifier	valid		1446293	0					
ANR	1446821	ExpressionStatement	* valid = 0	392:5:9170:9180	1446293	1	True				
ANR	1446822	AssignmentExpression	* valid = 0		1446293	0		=			
ANR	1446823	UnaryOperationExpression	* valid		1446293	0					
ANR	1446824	UnaryOperator	*		1446293	0					
ANR	1446825	Identifier	valid		1446293	1					
ANR	1446826	PrimaryExpression	0		1446293	1					
ANR	1446827	ElseStatement	else		1446293	0					
ANR	1446828	IfStatement	if ( print_errors )		1446293	0					
ANR	1446829	Condition	print_errors	393:12:9194:9205	1446293	0	True				
ANR	1446830	Identifier	print_errors		1446293	0					
ANR	1446831	ExpressionStatement	"printerr ( 1 , ""missing closing quote (%c)\\n"" , quote )"	394:5:9213:9264	1446293	1	True				
ANR	1446832	CallExpression	"printerr ( 1 , ""missing closing quote (%c)\\n"" , quote )"		1446293	0					
ANR	1446833	Callee	printerr		1446293	0					
ANR	1446834	Identifier	printerr		1446293	0					
ANR	1446835	ArgumentList	1		1446293	1					
ANR	1446836	Argument	1		1446293	0					
ANR	1446837	PrimaryExpression	1		1446293	0					
ANR	1446838	Argument	"""missing closing quote (%c)\\n"""		1446293	1					
ANR	1446839	PrimaryExpression	"""missing closing quote (%c)\\n"""		1446293	0					
ANR	1446840	Argument	quote		1446293	2					
ANR	1446841	Identifier	quote		1446293	0					
ANR	1446842	ReturnStatement	return 0 ;	395:3:9269:9277	1446293	1	True				
ANR	1446843	PrimaryExpression	0		1446293	0					
ANR	1446844	ExpressionStatement	++ * p	397:6:9288:9292	1446293	44	True				
ANR	1446845	UnaryExpression	++ * p		1446293	0					
ANR	1446846	IncDec	++		1446293	0					
ANR	1446847	UnaryOperationExpression	* p		1446293	1					
ANR	1446848	UnaryOperator	*		1446293	0					
ANR	1446849	Identifier	p		1446293	1					
ANR	1446850	ReturnStatement	return retval ;	398:6:9300:9313	1446293	45	True				
ANR	1446851	Identifier	retval		1446293	0					
ANR	1446852	Label	case '@' :	399:4:9319:9327	1446293	46	True				
ANR	1446853	ReturnStatement	"return not ^ ( sign * rd_otherbasenumber ( p , valid , print_errors ) ) ;"	400:6:9335:9400	1446293	47	True				
ANR	1446854	ExclusiveOrExpression	"not ^ ( sign * rd_otherbasenumber ( p , valid , print_errors ) )"		1446293	0		^			
ANR	1446855	Identifier	not		1446293	0					
ANR	1446856	MultiplicativeExpression	"sign * rd_otherbasenumber ( p , valid , print_errors )"		1446293	1		*			
ANR	1446857	Identifier	sign		1446293	0					
ANR	1446858	CallExpression	"rd_otherbasenumber ( p , valid , print_errors )"		1446293	1					
ANR	1446859	Callee	rd_otherbasenumber		1446293	0					
ANR	1446860	Identifier	rd_otherbasenumber		1446293	0					
ANR	1446861	ArgumentList	p		1446293	1					
ANR	1446862	Argument	p		1446293	0					
ANR	1446863	Identifier	p		1446293	0					
ANR	1446864	Argument	valid		1446293	1					
ANR	1446865	Identifier	valid		1446293	0					
ANR	1446866	Argument	print_errors		1446293	2					
ANR	1446867	Identifier	print_errors		1446293	0					
ANR	1446868	Label	case '?' :	401:4:9406:9414	1446293	48	True				
ANR	1446869	ExpressionStatement	"rd_label ( p , & exist , NULL , level , 0 )"	402:6:9422:9458	1446293	49	True				
ANR	1446870	CallExpression	"rd_label ( p , & exist , NULL , level , 0 )"		1446293	0					
ANR	1446871	Callee	rd_label		1446293	0					
ANR	1446872	Identifier	rd_label		1446293	0					
ANR	1446873	ArgumentList	p		1446293	1					
ANR	1446874	Argument	p		1446293	0					
ANR	1446875	Identifier	p		1446293	0					
ANR	1446876	Argument	& exist		1446293	1					
ANR	1446877	UnaryOperationExpression	& exist		1446293	0					
ANR	1446878	UnaryOperator	&		1446293	0					
ANR	1446879	Identifier	exist		1446293	1					
ANR	1446880	Argument	NULL		1446293	2					
ANR	1446881	Identifier	NULL		1446293	0					
ANR	1446882	Argument	level		1446293	3					
ANR	1446883	Identifier	level		1446293	0					
ANR	1446884	Argument	0		1446293	4					
ANR	1446885	PrimaryExpression	0		1446293	0					
ANR	1446886	ReturnStatement	return not ^ ( sign * exist ) ;	403:6:9466:9493	1446293	50	True				
ANR	1446887	ExclusiveOrExpression	not ^ ( sign * exist )		1446293	0		^			
ANR	1446888	Identifier	not		1446293	0					
ANR	1446889	MultiplicativeExpression	sign * exist		1446293	1		*			
ANR	1446890	Identifier	sign		1446293	0					
ANR	1446891	Identifier	exist		1446293	1					
ANR	1446892	Label	case '&' :	404:4:9499:9507	1446293	51	True				
ANR	1446893	CompoundStatement		124:6:2576:2576	1446293	52					
ANR	1446894	ExpressionStatement	++ * p	406:1:9518:9522	1446293	0	True				
ANR	1446895	UnaryExpression	++ * p		1446293	0					
ANR	1446896	IncDec	++		1446293	0					
ANR	1446897	UnaryOperationExpression	* p		1446293	1					
ANR	1446898	UnaryOperator	*		1446293	0					
ANR	1446899	Identifier	p		1446293	1					
ANR	1446900	SwitchStatement	switch ( * * p )		1446293	1					
ANR	1446901	Condition	* * p	407:9:9533:9535	1446293	0	True				
ANR	1446902	UnaryOperationExpression	* * p		1446293	0					
ANR	1446903	UnaryOperator	*		1446293	0					
ANR	1446904	UnaryOperationExpression	* p		1446293	1					
ANR	1446905	UnaryOperator	*		1446293	0					
ANR	1446906	Identifier	p		1446293	1					
ANR	1446907	CompoundStatement		127:3:2602:2602	1446293	1					
ANR	1446908	Label	case 'h' :	409:3:9546:9554	1446293	0	True				
ANR	1446909	Label	case 'H' :	410:3:9559:9567	1446293	1	True				
ANR	1446910	ExpressionStatement	base = 0x10	411:5:9574:9585	1446293	2	True				
ANR	1446911	AssignmentExpression	base = 0x10		1446293	0		=			
ANR	1446912	Identifier	base		1446293	0					
ANR	1446913	PrimaryExpression	0x10		1446293	1					
ANR	1446914	BreakStatement	break ;	412:5:9592:9597	1446293	3	True				
ANR	1446915	Label	case 'o' :	413:3:9602:9610	1446293	4	True				
ANR	1446916	Label	case 'O' :	414:3:9615:9623	1446293	5	True				
ANR	1446917	ExpressionStatement	base = 010	415:5:9630:9640	1446293	6	True				
ANR	1446918	AssignmentExpression	base = 010		1446293	0		=			
ANR	1446919	Identifier	base		1446293	0					
ANR	1446920	PrimaryExpression	010		1446293	1					
ANR	1446921	BreakStatement	break ;	416:5:9647:9652	1446293	7	True				
ANR	1446922	Label	case 'b' :	417:3:9657:9665	1446293	8	True				
ANR	1446923	Label	case 'B' :	418:3:9670:9678	1446293	9	True				
ANR	1446924	ExpressionStatement	base = 2	419:5:9685:9693	1446293	10	True				
ANR	1446925	AssignmentExpression	base = 2		1446293	0		=			
ANR	1446926	Identifier	base		1446293	0					
ANR	1446927	PrimaryExpression	2		1446293	1					
ANR	1446928	BreakStatement	break ;	420:5:9700:9705	1446293	11	True				
ANR	1446929	Label	default :	421:3:9710:9717	1446293	12	True				
ANR	1446930	Identifier	default		1446293	0					
ANR	1446931	IfStatement	if ( valid )		1446293	13					
ANR	1446932	Condition	valid	422:9:9728:9732	1446293	0	True				
ANR	1446933	Identifier	valid		1446293	0					
ANR	1446934	ExpressionStatement	* valid = 0	423:7:9742:9752	1446293	1	True				
ANR	1446935	AssignmentExpression	* valid = 0		1446293	0		=			
ANR	1446936	UnaryOperationExpression	* valid		1446293	0					
ANR	1446937	UnaryOperator	*		1446293	0					
ANR	1446938	Identifier	valid		1446293	1					
ANR	1446939	PrimaryExpression	0		1446293	1					
ANR	1446940	ElseStatement	else		1446293	0					
ANR	1446941	IfStatement	if ( print_errors )		1446293	0					
ANR	1446942	Condition	print_errors	424:14:9768:9779	1446293	0	True				
ANR	1446943	Identifier	print_errors		1446293	0					
ANR	1446944	ExpressionStatement	"printerr ( 1 , ""invalid literal starting with &%c\\n"" , * * p )"	425:7:9789:9845	1446293	1	True				
ANR	1446945	CallExpression	"printerr ( 1 , ""invalid literal starting with &%c\\n"" , * * p )"		1446293	0					
ANR	1446946	Callee	printerr		1446293	0					
ANR	1446947	Identifier	printerr		1446293	0					
ANR	1446948	ArgumentList	1		1446293	1					
ANR	1446949	Argument	1		1446293	0					
ANR	1446950	PrimaryExpression	1		1446293	0					
ANR	1446951	Argument	"""invalid literal starting with &%c\\n"""		1446293	1					
ANR	1446952	PrimaryExpression	"""invalid literal starting with &%c\\n"""		1446293	0					
ANR	1446953	Argument	* * p		1446293	2					
ANR	1446954	UnaryOperationExpression	* * p		1446293	0					
ANR	1446955	UnaryOperator	*		1446293	0					
ANR	1446956	UnaryOperationExpression	* p		1446293	1					
ANR	1446957	UnaryOperator	*		1446293	0					
ANR	1446958	Identifier	p		1446293	1					
ANR	1446959	ReturnStatement	return 0 ;	426:5:9852:9860	1446293	14	True				
ANR	1446960	PrimaryExpression	0		1446293	0					
ANR	1446961	ExpressionStatement	++ * p	428:1:9868:9872	1446293	2	True				
ANR	1446962	UnaryExpression	++ * p		1446293	0					
ANR	1446963	IncDec	++		1446293	0					
ANR	1446964	UnaryOperationExpression	* p		1446293	1					
ANR	1446965	UnaryOperator	*		1446293	0					
ANR	1446966	Identifier	p		1446293	1					
ANR	1446967	ReturnStatement	"return not ^ ( sign * rd_number ( p , NULL , base ) ) ;"	429:1:9875:9922	1446293	3	True				
ANR	1446968	ExclusiveOrExpression	"not ^ ( sign * rd_number ( p , NULL , base ) )"		1446293	0		^			
ANR	1446969	Identifier	not		1446293	0					
ANR	1446970	MultiplicativeExpression	"sign * rd_number ( p , NULL , base )"		1446293	1		*			
ANR	1446971	Identifier	sign		1446293	0					
ANR	1446972	CallExpression	"rd_number ( p , NULL , base )"		1446293	1					
ANR	1446973	Callee	rd_number		1446293	0					
ANR	1446974	Identifier	rd_number		1446293	0					
ANR	1446975	ArgumentList	p		1446293	1					
ANR	1446976	Argument	p		1446293	0					
ANR	1446977	Identifier	p		1446293	0					
ANR	1446978	Argument	NULL		1446293	1					
ANR	1446979	Identifier	NULL		1446293	0					
ANR	1446980	Argument	base		1446293	2					
ANR	1446981	Identifier	base		1446293	0					
ANR	1446982	Label	default :	431:4:9936:9943	1446293	53	True				
ANR	1446983	Identifier	default		1446293	0					
ANR	1446984	CompoundStatement		152:1:3015:3024	1446293	54					
ANR	1446985	IdentifierDeclStatement	int value ;	433:1:9954:9963	1446293	0	True				
ANR	1446986	IdentifierDecl	value		1446293	0					
ANR	1446987	IdentifierDeclType	int		1446293	0					
ANR	1446988	Identifier	value		1446293	1					
ANR	1446989	ExpressionStatement	exist = 1	434:1:9966:9975	1446293	1	True				
ANR	1446990	AssignmentExpression	exist = 1		1446293	0		=			
ANR	1446991	Identifier	exist		1446293	0					
ANR	1446992	PrimaryExpression	1		1446293	1					
ANR	1446993	ExpressionStatement	"value = rd_label ( p , valid ? & exist : NULL , NULL , level , print_errors )"	435:1:9978:10048	1446293	2	True				
ANR	1446994	AssignmentExpression	"value = rd_label ( p , valid ? & exist : NULL , NULL , level , print_errors )"		1446293	0		=			
ANR	1446995	Identifier	value		1446293	0					
ANR	1446996	CallExpression	"rd_label ( p , valid ? & exist : NULL , NULL , level , print_errors )"		1446293	1					
ANR	1446997	Callee	rd_label		1446293	0					
ANR	1446998	Identifier	rd_label		1446293	0					
ANR	1446999	ArgumentList	p		1446293	1					
ANR	1447000	Argument	p		1446293	0					
ANR	1447001	Identifier	p		1446293	0					
ANR	1447002	Argument	valid ? & exist : NULL		1446293	1					
ANR	1447003	ConditionalExpression	valid ? & exist : NULL		1446293	0					
ANR	1447004	Condition	valid		1446293	0					
ANR	1447005	Identifier	valid		1446293	0					
ANR	1447006	UnaryOperationExpression	& exist		1446293	1					
ANR	1447007	UnaryOperator	&		1446293	0					
ANR	1447008	Identifier	exist		1446293	1					
ANR	1447009	Identifier	NULL		1446293	2					
ANR	1447010	Argument	NULL		1446293	2					
ANR	1447011	Identifier	NULL		1446293	0					
ANR	1447012	Argument	level		1446293	3					
ANR	1447013	Identifier	level		1446293	0					
ANR	1447014	Argument	print_errors		1446293	4					
ANR	1447015	Identifier	print_errors		1446293	0					
ANR	1447016	IfStatement	if ( ! exist )		1446293	3					
ANR	1447017	Condition	! exist	436:5:10055:10060	1446293	0	True				
ANR	1447018	UnaryOperationExpression	! exist		1446293	0					
ANR	1447019	UnaryOperator	!		1446293	0					
ANR	1447020	Identifier	exist		1446293	1					
ANR	1447021	ExpressionStatement	* valid = 0	437:3:10066:10076	1446293	1	True				
ANR	1447022	AssignmentExpression	* valid = 0		1446293	0		=			
ANR	1447023	UnaryOperationExpression	* valid		1446293	0					
ANR	1447024	UnaryOperator	*		1446293	0					
ANR	1447025	Identifier	valid		1446293	1					
ANR	1447026	PrimaryExpression	0		1446293	1					
ANR	1447027	ReturnStatement	return not ^ ( sign * value ) ;	438:1:10079:10106	1446293	4	True				
ANR	1447028	ExclusiveOrExpression	not ^ ( sign * value )		1446293	0		^			
ANR	1447029	Identifier	not		1446293	0					
ANR	1447030	MultiplicativeExpression	sign * value		1446293	1		*			
ANR	1447031	Identifier	sign		1446293	0					
ANR	1447032	Identifier	value		1446293	1					
ANR	1447033	ReturnType	static int		1446293	1					
ANR	1447034	Identifier	rd_value		1446293	2					
ANR	1447035	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1446293	3					
ANR	1447036	Parameter	const char * * p	281:10:6869:6882	1446293	0	True				
ANR	1447037	ParameterType	const char * *		1446293	0					
ANR	1447038	Identifier	p		1446293	1					
ANR	1447039	Parameter	int * valid	281:26:6885:6894	1446293	1	True				
ANR	1447040	ParameterType	int *		1446293	0					
ANR	1447041	Identifier	valid		1446293	1					
ANR	1447042	Parameter	int level	281:38:6897:6905	1446293	2	True				
ANR	1447043	ParameterType	int		1446293	0					
ANR	1447044	Identifier	level		1446293	1					
ANR	1447045	Parameter	int * check	281:49:6908:6917	1446293	3	True				
ANR	1447046	ParameterType	int *		1446293	0					
ANR	1447047	Identifier	check		1446293	1					
ANR	1447048	Parameter	int print_errors	281:61:6920:6935	1446293	4	True				
ANR	1447049	ParameterType	int		1446293	0					
ANR	1447050	Identifier	print_errors		1446293	1					
ANR	1447051	CFGEntryNode	ENTRY		1446293		True				
ANR	1447052	CFGExitNode	EXIT		1446293		True				
ANR	1447053	Symbol	p0		1446293						
ANR	1447054	Symbol	* sp		1446293						
ANR	1447055	Symbol	p1		1446293						
ANR	1447056	Symbol	rd_number		1446293						
ANR	1447057	Symbol	p2		1446293						
ANR	1447058	Symbol	stack		1446293						
ANR	1447059	Symbol	rd_otherbasenumber		1446293						
ANR	1447060	Symbol	sign		1446293						
ANR	1447061	Symbol	strchr		1446293						
ANR	1447062	Symbol	* valid		1446293						
ANR	1447063	Symbol	dummy_check		1446293						
ANR	1447064	Symbol	valid		1446293						
ANR	1447065	Symbol	not		1446293						
ANR	1447066	Symbol	quote		1446293						
ANR	1447067	Symbol	& dummy_check		1446293						
ANR	1447068	Symbol	* check		1446293						
ANR	1447069	Symbol	rd_label		1446293						
ANR	1447070	Symbol	print_errors		1446293						
ANR	1447071	Symbol	stack [ sp ] . line		1446293						
ANR	1447072	Symbol	* * p		1446293						
ANR	1447073	Symbol	addr		1446293						
ANR	1447074	Symbol	sp		1446293						
ANR	1447075	Symbol	delspc		1446293						
ANR	1447076	Symbol	value		1446293						
ANR	1447077	Symbol	NULL		1446293						
ANR	1447078	Symbol	* p1		1446293						
ANR	1447079	Symbol	level		1446293						
ANR	1447080	Symbol	& p1		1446293						
ANR	1447081	Symbol	check		1446293						
ANR	1447082	Symbol	& p0		1446293						
ANR	1447083	Symbol	* p2		1446293						
ANR	1447084	Symbol	baseaddr		1446293						
ANR	1447085	Symbol	stderr		1446293						
ANR	1447086	Symbol	& p2		1446293						
ANR	1447087	Symbol	retval		1446293						
ANR	1447088	Symbol	verbose		1446293						
ANR	1447089	Symbol	~not		1446293						
ANR	1447090	Symbol	do_rd_expr		1446293						
ANR	1447091	Symbol	p		1446293						
ANR	1447092	Symbol	exist		1446293						
ANR	1447093	Symbol	rd_character		1446293						
ANR	1447094	Symbol	& exist		1446293						
ANR	1447095	Symbol	v		1446293						
ANR	1447096	Symbol	* stack		1446293						
ANR	1447097	Symbol	* p		1446293						
ANR	1447098	Symbol	base		1446293						
ANR	1447099	Function	rd_factor	443:0:10125:11052							
ANR	1447100	FunctionDef	"rd_factor (const char * * p , int * valid , int level , int * check , int print_errors)"		1447099	0					
ANR	1447101	CompoundStatement		445:0:10216:11052	1447099	0					
ANR	1447102	IdentifierDeclStatement	int result ;	447:2:10259:10269	1447099	0	True				
ANR	1447103	IdentifierDecl	result		1447099	0					
ANR	1447104	IdentifierDeclType	int		1447099	0					
ANR	1447105	Identifier	result		1447099	1					
ANR	1447106	IfStatement	if ( verbose >= 6 )		1447099	1					
ANR	1447107	Condition	verbose >= 6	448:6:10277:10288	1447099	0	True				
ANR	1447108	RelationalExpression	verbose >= 6		1447099	0		>=			
ANR	1447109	Identifier	verbose		1447099	0					
ANR	1447110	PrimaryExpression	6		1447099	1					
ANR	1447111	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Starting to read factor (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"	449:4:10295:10399	1447099	1	True				
ANR	1447112	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Starting to read factor (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"		1447099	0					
ANR	1447113	Callee	fprintf		1447099	0					
ANR	1447114	Identifier	fprintf		1447099	0					
ANR	1447115	ArgumentList	stderr		1447099	1					
ANR	1447116	Argument	stderr		1447099	0					
ANR	1447117	Identifier	stderr		1447099	0					
ANR	1447118	Argument	"""%5d (0x%04x): Starting to read factor (string=%s).\\n"""		1447099	1					
ANR	1447119	PrimaryExpression	"""%5d (0x%04x): Starting to read factor (string=%s).\\n"""		1447099	0					
ANR	1447120	Argument	stack [ sp ] . line		1447099	2					
ANR	1447121	MemberAccess	stack [ sp ] . line		1447099	0					
ANR	1447122	ArrayIndexing	stack [ sp ]		1447099	0					
ANR	1447123	Identifier	stack		1447099	0					
ANR	1447124	Identifier	sp		1447099	1					
ANR	1447125	Identifier	line		1447099	1					
ANR	1447126	Argument	addr		1447099	3					
ANR	1447127	Identifier	addr		1447099	0					
ANR	1447128	Argument	* p		1447099	4					
ANR	1447129	UnaryOperationExpression	* p		1447099	0					
ANR	1447130	UnaryOperator	*		1447099	0					
ANR	1447131	Identifier	p		1447099	1					
ANR	1447132	ExpressionStatement	"result = rd_value ( p , valid , level , check , print_errors )"	451:2:10403:10459	1447099	2	True				
ANR	1447133	AssignmentExpression	"result = rd_value ( p , valid , level , check , print_errors )"		1447099	0		=			
ANR	1447134	Identifier	result		1447099	0					
ANR	1447135	CallExpression	"rd_value ( p , valid , level , check , print_errors )"		1447099	1					
ANR	1447136	Callee	rd_value		1447099	0					
ANR	1447137	Identifier	rd_value		1447099	0					
ANR	1447138	ArgumentList	p		1447099	1					
ANR	1447139	Argument	p		1447099	0					
ANR	1447140	Identifier	p		1447099	0					
ANR	1447141	Argument	valid		1447099	1					
ANR	1447142	Identifier	valid		1447099	0					
ANR	1447143	Argument	level		1447099	2					
ANR	1447144	Identifier	level		1447099	0					
ANR	1447145	Argument	check		1447099	3					
ANR	1447146	Identifier	check		1447099	0					
ANR	1447147	Argument	print_errors		1447099	4					
ANR	1447148	Identifier	print_errors		1447099	0					
ANR	1447149	ExpressionStatement	* p = delspc ( * p )	452:2:10463:10479	1447099	3	True				
ANR	1447150	AssignmentExpression	* p = delspc ( * p )		1447099	0		=			
ANR	1447151	UnaryOperationExpression	* p		1447099	0					
ANR	1447152	UnaryOperator	*		1447099	0					
ANR	1447153	Identifier	p		1447099	1					
ANR	1447154	CallExpression	delspc ( * p )		1447099	1					
ANR	1447155	Callee	delspc		1447099	0					
ANR	1447156	Identifier	delspc		1447099	0					
ANR	1447157	ArgumentList	* p		1447099	1					
ANR	1447158	Argument	* p		1447099	0					
ANR	1447159	UnaryOperationExpression	* p		1447099	0					
ANR	1447160	UnaryOperator	*		1447099	0					
ANR	1447161	Identifier	p		1447099	1					
ANR	1447162	WhileStatement	while ( * * p == '*' || * * p == '/' )		1447099	4					
ANR	1447163	Condition	* * p == '*' || * * p == '/'	453:9:10490:10513	1447099	0	True				
ANR	1447164	OrExpression	* * p == '*' || * * p == '/'		1447099	0		||			
ANR	1447165	EqualityExpression	* * p == '*'		1447099	0		==			
ANR	1447166	UnaryOperationExpression	* * p		1447099	0					
ANR	1447167	UnaryOperator	*		1447099	0					
ANR	1447168	UnaryOperationExpression	* p		1447099	1					
ANR	1447169	UnaryOperator	*		1447099	0					
ANR	1447170	Identifier	p		1447099	1					
ANR	1447171	PrimaryExpression	'*'		1447099	1					
ANR	1447172	EqualityExpression	* * p == '/'		1447099	1		==			
ANR	1447173	UnaryOperationExpression	* * p		1447099	0					
ANR	1447174	UnaryOperator	*		1447099	0					
ANR	1447175	UnaryOperationExpression	* p		1447099	1					
ANR	1447176	UnaryOperator	*		1447099	0					
ANR	1447177	Identifier	p		1447099	1					
ANR	1447178	PrimaryExpression	'/'		1447099	1					
ANR	1447179	CompoundStatement		10:4:303:303	1447099	1					
ANR	1447180	ExpressionStatement	* check = 0	455:6:10528:10538	1447099	0	True				
ANR	1447181	AssignmentExpression	* check = 0		1447099	0		=			
ANR	1447182	UnaryOperationExpression	* check		1447099	0					
ANR	1447183	UnaryOperator	*		1447099	0					
ANR	1447184	Identifier	check		1447099	1					
ANR	1447185	PrimaryExpression	0		1447099	1					
ANR	1447186	IfStatement	if ( * * p == '*' )		1447099	1					
ANR	1447187	Condition	* * p == '*'	456:10:10550:10559	1447099	0	True				
ANR	1447188	EqualityExpression	* * p == '*'		1447099	0		==			
ANR	1447189	UnaryOperationExpression	* * p		1447099	0					
ANR	1447190	UnaryOperator	*		1447099	0					
ANR	1447191	UnaryOperationExpression	* p		1447099	1					
ANR	1447192	UnaryOperator	*		1447099	0					
ANR	1447193	Identifier	p		1447099	1					
ANR	1447194	PrimaryExpression	'*'		1447099	1					
ANR	1447195	CompoundStatement		13:1:346:346	1447099	1					
ANR	1447196	ExpressionStatement	( * p ) ++	458:3:10568:10574	1447099	0	True				
ANR	1447197	PostIncDecOperationExpression	( * p ) ++		1447099	0					
ANR	1447198	UnaryOperationExpression	* p		1447099	0					
ANR	1447199	UnaryOperator	*		1447099	0					
ANR	1447200	Identifier	p		1447099	1					
ANR	1447201	IncDec	++		1447099	1					
ANR	1447202	ExpressionStatement	"result *= rd_value ( p , valid , level , check , print_errors )"	459:3:10579:10636	1447099	1	True				
ANR	1447203	AssignmentExpression	"result *= rd_value ( p , valid , level , check , print_errors )"		1447099	0		*=			
ANR	1447204	Identifier	result		1447099	0					
ANR	1447205	CallExpression	"rd_value ( p , valid , level , check , print_errors )"		1447099	1					
ANR	1447206	Callee	rd_value		1447099	0					
ANR	1447207	Identifier	rd_value		1447099	0					
ANR	1447208	ArgumentList	p		1447099	1					
ANR	1447209	Argument	p		1447099	0					
ANR	1447210	Identifier	p		1447099	0					
ANR	1447211	Argument	valid		1447099	1					
ANR	1447212	Identifier	valid		1447099	0					
ANR	1447213	Argument	level		1447099	2					
ANR	1447214	Identifier	level		1447099	0					
ANR	1447215	Argument	check		1447099	3					
ANR	1447216	Identifier	check		1447099	0					
ANR	1447217	Argument	print_errors		1447099	4					
ANR	1447218	Identifier	print_errors		1447099	0					
ANR	1447219	ElseStatement	else		1447099	0					
ANR	1447220	IfStatement	if ( * * p == '/' )		1447099	0					
ANR	1447221	Condition	* * p == '/'	461:15:10656:10665	1447099	0	True				
ANR	1447222	EqualityExpression	* * p == '/'		1447099	0		==			
ANR	1447223	UnaryOperationExpression	* * p		1447099	0					
ANR	1447224	UnaryOperator	*		1447099	0					
ANR	1447225	UnaryOperationExpression	* p		1447099	1					
ANR	1447226	UnaryOperator	*		1447099	0					
ANR	1447227	Identifier	p		1447099	1					
ANR	1447228	PrimaryExpression	'/'		1447099	1					
ANR	1447229	CompoundStatement		20:6:471:530	1447099	1					
ANR	1447230	ExpressionStatement	( * p ) ++	463:3:10674:10680	1447099	0	True				
ANR	1447231	PostIncDecOperationExpression	( * p ) ++		1447099	0					
ANR	1447232	UnaryOperationExpression	* p		1447099	0					
ANR	1447233	UnaryOperator	*		1447099	0					
ANR	1447234	Identifier	p		1447099	1					
ANR	1447235	IncDec	++		1447099	1					
ANR	1447236	IdentifierDeclStatement	"int value = rd_value ( p , valid , level , check , print_errors ) ;"	464:6:10688:10747	1447099	1	True				
ANR	1447237	IdentifierDecl	"value = rd_value ( p , valid , level , check , print_errors )"		1447099	0					
ANR	1447238	IdentifierDeclType	int		1447099	0					
ANR	1447239	Identifier	value		1447099	1					
ANR	1447240	AssignmentExpression	"value = rd_value ( p , valid , level , check , print_errors )"		1447099	2		=			
ANR	1447241	Identifier	value		1447099	0					
ANR	1447242	CallExpression	"rd_value ( p , valid , level , check , print_errors )"		1447099	1					
ANR	1447243	Callee	rd_value		1447099	0					
ANR	1447244	Identifier	rd_value		1447099	0					
ANR	1447245	ArgumentList	p		1447099	1					
ANR	1447246	Argument	p		1447099	0					
ANR	1447247	Identifier	p		1447099	0					
ANR	1447248	Argument	valid		1447099	1					
ANR	1447249	Identifier	valid		1447099	0					
ANR	1447250	Argument	level		1447099	2					
ANR	1447251	Identifier	level		1447099	0					
ANR	1447252	Argument	check		1447099	3					
ANR	1447253	Identifier	check		1447099	0					
ANR	1447254	Argument	print_errors		1447099	4					
ANR	1447255	Identifier	print_errors		1447099	0					
ANR	1447256	IfStatement	if ( value == 0 )		1447099	2					
ANR	1447257	Condition	value == 0	465:10:10759:10768	1447099	0	True				
ANR	1447258	EqualityExpression	value == 0		1447099	0		==			
ANR	1447259	Identifier	value		1447099	0					
ANR	1447260	PrimaryExpression	0		1447099	1					
ANR	1447261	CompoundStatement		21:21:553:553	1447099	1					
ANR	1447262	ExpressionStatement	"printerr ( 1 , ""division by zero\\n"" )"	466:8:10781:10815	1447099	0	True				
ANR	1447263	CallExpression	"printerr ( 1 , ""division by zero\\n"" )"		1447099	0					
ANR	1447264	Callee	printerr		1447099	0					
ANR	1447265	Identifier	printerr		1447099	0					
ANR	1447266	ArgumentList	1		1447099	1					
ANR	1447267	Argument	1		1447099	0					
ANR	1447268	PrimaryExpression	1		1447099	0					
ANR	1447269	Argument	"""division by zero\\n"""		1447099	1					
ANR	1447270	PrimaryExpression	"""division by zero\\n"""		1447099	0					
ANR	1447271	ReturnStatement	return - 1 ;	467:8:10825:10834	1447099	1	True				
ANR	1447272	UnaryOperationExpression	- 1		1447099	0					
ANR	1447273	UnaryOperator	-		1447099	0					
ANR	1447274	PrimaryExpression	1		1447099	1					
ANR	1447275	ExpressionStatement	result /= value	469:6:10850:10865	1447099	3	True				
ANR	1447276	AssignmentExpression	result /= value		1447099	0		/=			
ANR	1447277	Identifier	result		1447099	0					
ANR	1447278	Identifier	value		1447099	1					
ANR	1447279	ExpressionStatement	* p = delspc ( * p )	471:6:10876:10892	1447099	2	True				
ANR	1447280	AssignmentExpression	* p = delspc ( * p )		1447099	0		=			
ANR	1447281	UnaryOperationExpression	* p		1447099	0					
ANR	1447282	UnaryOperator	*		1447099	0					
ANR	1447283	Identifier	p		1447099	1					
ANR	1447284	CallExpression	delspc ( * p )		1447099	1					
ANR	1447285	Callee	delspc		1447099	0					
ANR	1447286	Identifier	delspc		1447099	0					
ANR	1447287	ArgumentList	* p		1447099	1					
ANR	1447288	Argument	* p		1447099	0					
ANR	1447289	UnaryOperationExpression	* p		1447099	0					
ANR	1447290	UnaryOperator	*		1447099	0					
ANR	1447291	Identifier	p		1447099	1					
ANR	1447292	IfStatement	if ( verbose >= 7 )		1447099	5					
ANR	1447293	Condition	verbose >= 7	473:6:10906:10917	1447099	0	True				
ANR	1447294	RelationalExpression	verbose >= 7		1447099	0		>=			
ANR	1447295	Identifier	verbose		1447099	0					
ANR	1447296	PrimaryExpression	7		1447099	1					
ANR	1447297	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_factor returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	474:4:10924:11033	1447099	1	True				
ANR	1447298	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_factor returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1447099	0					
ANR	1447299	Callee	fprintf		1447099	0					
ANR	1447300	Identifier	fprintf		1447099	0					
ANR	1447301	ArgumentList	stderr		1447099	1					
ANR	1447302	Argument	stderr		1447099	0					
ANR	1447303	Identifier	stderr		1447099	0					
ANR	1447304	Argument	"""%5d (0x%04x): rd_factor returned %d (%04x).\\n"""		1447099	1					
ANR	1447305	PrimaryExpression	"""%5d (0x%04x): rd_factor returned %d (%04x).\\n"""		1447099	0					
ANR	1447306	Argument	stack [ sp ] . line		1447099	2					
ANR	1447307	MemberAccess	stack [ sp ] . line		1447099	0					
ANR	1447308	ArrayIndexing	stack [ sp ]		1447099	0					
ANR	1447309	Identifier	stack		1447099	0					
ANR	1447310	Identifier	sp		1447099	1					
ANR	1447311	Identifier	line		1447099	1					
ANR	1447312	Argument	addr		1447099	3					
ANR	1447313	Identifier	addr		1447099	0					
ANR	1447314	Argument	result		1447099	4					
ANR	1447315	Identifier	result		1447099	0					
ANR	1447316	Argument	result		1447099	5					
ANR	1447317	Identifier	result		1447099	0					
ANR	1447318	ReturnStatement	return result ;	476:2:11037:11050	1447099	6	True				
ANR	1447319	Identifier	result		1447099	0					
ANR	1447320	ReturnType	static int		1447099	1					
ANR	1447321	Identifier	rd_factor		1447099	2					
ANR	1447322	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1447099	3					
ANR	1447323	Parameter	const char * * p	444:11:10147:10160	1447099	0	True				
ANR	1447324	ParameterType	const char * *		1447099	0					
ANR	1447325	Identifier	p		1447099	1					
ANR	1447326	Parameter	int * valid	444:27:10163:10172	1447099	1	True				
ANR	1447327	ParameterType	int *		1447099	0					
ANR	1447328	Identifier	valid		1447099	1					
ANR	1447329	Parameter	int level	444:39:10175:10183	1447099	2	True				
ANR	1447330	ParameterType	int		1447099	0					
ANR	1447331	Identifier	level		1447099	1					
ANR	1447332	Parameter	int * check	444:50:10186:10195	1447099	3	True				
ANR	1447333	ParameterType	int *		1447099	0					
ANR	1447334	Identifier	check		1447099	1					
ANR	1447335	Parameter	int print_errors	444:62:10198:10213	1447099	4	True				
ANR	1447336	ParameterType	int		1447099	0					
ANR	1447337	Identifier	print_errors		1447099	1					
ANR	1447338	CFGEntryNode	ENTRY		1447099		True				
ANR	1447339	CFGExitNode	EXIT		1447099		True				
ANR	1447340	Symbol	* sp		1447099						
ANR	1447341	Symbol	stack		1447099						
ANR	1447342	Symbol	level		1447099						
ANR	1447343	Symbol	check		1447099						
ANR	1447344	Symbol	stderr		1447099						
ANR	1447345	Symbol	verbose		1447099						
ANR	1447346	Symbol	p		1447099						
ANR	1447347	Symbol	valid		1447099						
ANR	1447348	Symbol	result		1447099						
ANR	1447349	Symbol	* check		1447099						
ANR	1447350	Symbol	print_errors		1447099						
ANR	1447351	Symbol	* stack		1447099						
ANR	1447352	Symbol	* p		1447099						
ANR	1447353	Symbol	stack [ sp ] . line		1447099						
ANR	1447354	Symbol	rd_value		1447099						
ANR	1447355	Symbol	* * p		1447099						
ANR	1447356	Symbol	addr		1447099						
ANR	1447357	Symbol	sp		1447099						
ANR	1447358	Symbol	delspc		1447099						
ANR	1447359	Symbol	value		1447099						
ANR	1447360	Function	rd_term	479:0:11055:11854							
ANR	1447361	FunctionDef	"rd_term (const char * * p , int * valid , int level , int * check , int print_errors)"		1447360	0					
ANR	1447362	CompoundStatement		481:0:11144:11854	1447360	0					
ANR	1447363	IdentifierDeclStatement	int result ;	483:2:11185:11195	1447360	0	True				
ANR	1447364	IdentifierDecl	result		1447360	0					
ANR	1447365	IdentifierDeclType	int		1447360	0					
ANR	1447366	Identifier	result		1447360	1					
ANR	1447367	IfStatement	if ( verbose >= 6 )		1447360	1					
ANR	1447368	Condition	verbose >= 6	484:6:11203:11214	1447360	0	True				
ANR	1447369	RelationalExpression	verbose >= 6		1447360	0		>=			
ANR	1447370	Identifier	verbose		1447360	0					
ANR	1447371	PrimaryExpression	6		1447360	1					
ANR	1447372	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Starting to read term (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"	485:4:11221:11323	1447360	1	True				
ANR	1447373	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Starting to read term (string=%s).\\n"" , stack [ sp ] . line , addr , * p )"		1447360	0					
ANR	1447374	Callee	fprintf		1447360	0					
ANR	1447375	Identifier	fprintf		1447360	0					
ANR	1447376	ArgumentList	stderr		1447360	1					
ANR	1447377	Argument	stderr		1447360	0					
ANR	1447378	Identifier	stderr		1447360	0					
ANR	1447379	Argument	"""%5d (0x%04x): Starting to read term (string=%s).\\n"""		1447360	1					
ANR	1447380	PrimaryExpression	"""%5d (0x%04x): Starting to read term (string=%s).\\n"""		1447360	0					
ANR	1447381	Argument	stack [ sp ] . line		1447360	2					
ANR	1447382	MemberAccess	stack [ sp ] . line		1447360	0					
ANR	1447383	ArrayIndexing	stack [ sp ]		1447360	0					
ANR	1447384	Identifier	stack		1447360	0					
ANR	1447385	Identifier	sp		1447360	1					
ANR	1447386	Identifier	line		1447360	1					
ANR	1447387	Argument	addr		1447360	3					
ANR	1447388	Identifier	addr		1447360	0					
ANR	1447389	Argument	* p		1447360	4					
ANR	1447390	UnaryOperationExpression	* p		1447360	0					
ANR	1447391	UnaryOperator	*		1447360	0					
ANR	1447392	Identifier	p		1447360	1					
ANR	1447393	ExpressionStatement	"result = rd_factor ( p , valid , level , check , print_errors )"	487:2:11327:11384	1447360	2	True				
ANR	1447394	AssignmentExpression	"result = rd_factor ( p , valid , level , check , print_errors )"		1447360	0		=			
ANR	1447395	Identifier	result		1447360	0					
ANR	1447396	CallExpression	"rd_factor ( p , valid , level , check , print_errors )"		1447360	1					
ANR	1447397	Callee	rd_factor		1447360	0					
ANR	1447398	Identifier	rd_factor		1447360	0					
ANR	1447399	ArgumentList	p		1447360	1					
ANR	1447400	Argument	p		1447360	0					
ANR	1447401	Identifier	p		1447360	0					
ANR	1447402	Argument	valid		1447360	1					
ANR	1447403	Identifier	valid		1447360	0					
ANR	1447404	Argument	level		1447360	2					
ANR	1447405	Identifier	level		1447360	0					
ANR	1447406	Argument	check		1447360	3					
ANR	1447407	Identifier	check		1447360	0					
ANR	1447408	Argument	print_errors		1447360	4					
ANR	1447409	Identifier	print_errors		1447360	0					
ANR	1447410	ExpressionStatement	* p = delspc ( * p )	488:2:11388:11404	1447360	3	True				
ANR	1447411	AssignmentExpression	* p = delspc ( * p )		1447360	0		=			
ANR	1447412	UnaryOperationExpression	* p		1447360	0					
ANR	1447413	UnaryOperator	*		1447360	0					
ANR	1447414	Identifier	p		1447360	1					
ANR	1447415	CallExpression	delspc ( * p )		1447360	1					
ANR	1447416	Callee	delspc		1447360	0					
ANR	1447417	Identifier	delspc		1447360	0					
ANR	1447418	ArgumentList	* p		1447360	1					
ANR	1447419	Argument	* p		1447360	0					
ANR	1447420	UnaryOperationExpression	* p		1447360	0					
ANR	1447421	UnaryOperator	*		1447360	0					
ANR	1447422	Identifier	p		1447360	1					
ANR	1447423	WhileStatement	while ( * * p == '+' || * * p == '-' )		1447360	4					
ANR	1447424	Condition	* * p == '+' || * * p == '-'	489:9:11415:11438	1447360	0	True				
ANR	1447425	OrExpression	* * p == '+' || * * p == '-'		1447360	0		||			
ANR	1447426	EqualityExpression	* * p == '+'		1447360	0		==			
ANR	1447427	UnaryOperationExpression	* * p		1447360	0					
ANR	1447428	UnaryOperator	*		1447360	0					
ANR	1447429	UnaryOperationExpression	* p		1447360	1					
ANR	1447430	UnaryOperator	*		1447360	0					
ANR	1447431	Identifier	p		1447360	1					
ANR	1447432	PrimaryExpression	'+'		1447360	1					
ANR	1447433	EqualityExpression	* * p == '-'		1447360	1		==			
ANR	1447434	UnaryOperationExpression	* * p		1447360	0					
ANR	1447435	UnaryOperator	*		1447360	0					
ANR	1447436	UnaryOperationExpression	* p		1447360	1					
ANR	1447437	UnaryOperator	*		1447360	0					
ANR	1447438	Identifier	p		1447360	1					
ANR	1447439	PrimaryExpression	'-'		1447360	1					
ANR	1447440	CompoundStatement		10:4:300:300	1447360	1					
ANR	1447441	ExpressionStatement	* check = 0	491:6:11453:11463	1447360	0	True				
ANR	1447442	AssignmentExpression	* check = 0		1447360	0		=			
ANR	1447443	UnaryOperationExpression	* check		1447360	0					
ANR	1447444	UnaryOperator	*		1447360	0					
ANR	1447445	Identifier	check		1447360	1					
ANR	1447446	PrimaryExpression	0		1447360	1					
ANR	1447447	IfStatement	if ( * * p == '+' )		1447360	1					
ANR	1447448	Condition	* * p == '+'	492:10:11475:11484	1447360	0	True				
ANR	1447449	EqualityExpression	* * p == '+'		1447360	0		==			
ANR	1447450	UnaryOperationExpression	* * p		1447360	0					
ANR	1447451	UnaryOperator	*		1447360	0					
ANR	1447452	UnaryOperationExpression	* p		1447360	1					
ANR	1447453	UnaryOperator	*		1447360	0					
ANR	1447454	Identifier	p		1447360	1					
ANR	1447455	PrimaryExpression	'+'		1447360	1					
ANR	1447456	CompoundStatement		13:1:343:343	1447360	1					
ANR	1447457	ExpressionStatement	( * p ) ++	494:3:11493:11499	1447360	0	True				
ANR	1447458	PostIncDecOperationExpression	( * p ) ++		1447360	0					
ANR	1447459	UnaryOperationExpression	* p		1447360	0					
ANR	1447460	UnaryOperator	*		1447360	0					
ANR	1447461	Identifier	p		1447360	1					
ANR	1447462	IncDec	++		1447360	1					
ANR	1447463	ExpressionStatement	"result += rd_factor ( p , valid , level , check , print_errors )"	495:3:11504:11562	1447360	1	True				
ANR	1447464	AssignmentExpression	"result += rd_factor ( p , valid , level , check , print_errors )"		1447360	0		+=			
ANR	1447465	Identifier	result		1447360	0					
ANR	1447466	CallExpression	"rd_factor ( p , valid , level , check , print_errors )"		1447360	1					
ANR	1447467	Callee	rd_factor		1447360	0					
ANR	1447468	Identifier	rd_factor		1447360	0					
ANR	1447469	ArgumentList	p		1447360	1					
ANR	1447470	Argument	p		1447360	0					
ANR	1447471	Identifier	p		1447360	0					
ANR	1447472	Argument	valid		1447360	1					
ANR	1447473	Identifier	valid		1447360	0					
ANR	1447474	Argument	level		1447360	2					
ANR	1447475	Identifier	level		1447360	0					
ANR	1447476	Argument	check		1447360	3					
ANR	1447477	Identifier	check		1447360	0					
ANR	1447478	Argument	print_errors		1447360	4					
ANR	1447479	Identifier	print_errors		1447360	0					
ANR	1447480	ElseStatement	else		1447360	0					
ANR	1447481	IfStatement	if ( * * p == '-' )		1447360	0					
ANR	1447482	Condition	* * p == '-'	497:15:11582:11591	1447360	0	True				
ANR	1447483	EqualityExpression	* * p == '-'		1447360	0		==			
ANR	1447484	UnaryOperationExpression	* * p		1447360	0					
ANR	1447485	UnaryOperator	*		1447360	0					
ANR	1447486	UnaryOperationExpression	* p		1447360	1					
ANR	1447487	UnaryOperator	*		1447360	0					
ANR	1447488	Identifier	p		1447360	1					
ANR	1447489	PrimaryExpression	'-'		1447360	1					
ANR	1447490	CompoundStatement		18:1:450:450	1447360	1					
ANR	1447491	ExpressionStatement	( * p ) ++	499:3:11600:11606	1447360	0	True				
ANR	1447492	PostIncDecOperationExpression	( * p ) ++		1447360	0					
ANR	1447493	UnaryOperationExpression	* p		1447360	0					
ANR	1447494	UnaryOperator	*		1447360	0					
ANR	1447495	Identifier	p		1447360	1					
ANR	1447496	IncDec	++		1447360	1					
ANR	1447497	ExpressionStatement	"result -= rd_factor ( p , valid , level , check , print_errors )"	500:3:11611:11669	1447360	1	True				
ANR	1447498	AssignmentExpression	"result -= rd_factor ( p , valid , level , check , print_errors )"		1447360	0		-=			
ANR	1447499	Identifier	result		1447360	0					
ANR	1447500	CallExpression	"rd_factor ( p , valid , level , check , print_errors )"		1447360	1					
ANR	1447501	Callee	rd_factor		1447360	0					
ANR	1447502	Identifier	rd_factor		1447360	0					
ANR	1447503	ArgumentList	p		1447360	1					
ANR	1447504	Argument	p		1447360	0					
ANR	1447505	Identifier	p		1447360	0					
ANR	1447506	Argument	valid		1447360	1					
ANR	1447507	Identifier	valid		1447360	0					
ANR	1447508	Argument	level		1447360	2					
ANR	1447509	Identifier	level		1447360	0					
ANR	1447510	Argument	check		1447360	3					
ANR	1447511	Identifier	check		1447360	0					
ANR	1447512	Argument	print_errors		1447360	4					
ANR	1447513	Identifier	print_errors		1447360	0					
ANR	1447514	ExpressionStatement	* p = delspc ( * p )	502:6:11680:11696	1447360	2	True				
ANR	1447515	AssignmentExpression	* p = delspc ( * p )		1447360	0		=			
ANR	1447516	UnaryOperationExpression	* p		1447360	0					
ANR	1447517	UnaryOperator	*		1447360	0					
ANR	1447518	Identifier	p		1447360	1					
ANR	1447519	CallExpression	delspc ( * p )		1447360	1					
ANR	1447520	Callee	delspc		1447360	0					
ANR	1447521	Identifier	delspc		1447360	0					
ANR	1447522	ArgumentList	* p		1447360	1					
ANR	1447523	Argument	* p		1447360	0					
ANR	1447524	UnaryOperationExpression	* p		1447360	0					
ANR	1447525	UnaryOperator	*		1447360	0					
ANR	1447526	Identifier	p		1447360	1					
ANR	1447527	IfStatement	if ( verbose >= 7 )		1447360	5					
ANR	1447528	Condition	verbose >= 7	504:6:11710:11721	1447360	0	True				
ANR	1447529	RelationalExpression	verbose >= 7		1447360	0		>=			
ANR	1447530	Identifier	verbose		1447360	0					
ANR	1447531	PrimaryExpression	7		1447360	1					
ANR	1447532	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_term returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	505:4:11728:11835	1447360	1	True				
ANR	1447533	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_term returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1447360	0					
ANR	1447534	Callee	fprintf		1447360	0					
ANR	1447535	Identifier	fprintf		1447360	0					
ANR	1447536	ArgumentList	stderr		1447360	1					
ANR	1447537	Argument	stderr		1447360	0					
ANR	1447538	Identifier	stderr		1447360	0					
ANR	1447539	Argument	"""%5d (0x%04x): rd_term returned %d (%04x).\\n"""		1447360	1					
ANR	1447540	PrimaryExpression	"""%5d (0x%04x): rd_term returned %d (%04x).\\n"""		1447360	0					
ANR	1447541	Argument	stack [ sp ] . line		1447360	2					
ANR	1447542	MemberAccess	stack [ sp ] . line		1447360	0					
ANR	1447543	ArrayIndexing	stack [ sp ]		1447360	0					
ANR	1447544	Identifier	stack		1447360	0					
ANR	1447545	Identifier	sp		1447360	1					
ANR	1447546	Identifier	line		1447360	1					
ANR	1447547	Argument	addr		1447360	3					
ANR	1447548	Identifier	addr		1447360	0					
ANR	1447549	Argument	result		1447360	4					
ANR	1447550	Identifier	result		1447360	0					
ANR	1447551	Argument	result		1447360	5					
ANR	1447552	Identifier	result		1447360	0					
ANR	1447553	ReturnStatement	return result ;	507:2:11839:11852	1447360	6	True				
ANR	1447554	Identifier	result		1447360	0					
ANR	1447555	ReturnType	static int		1447360	1					
ANR	1447556	Identifier	rd_term		1447360	2					
ANR	1447557	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1447360	3					
ANR	1447558	Parameter	const char * * p	480:9:11075:11088	1447360	0	True				
ANR	1447559	ParameterType	const char * *		1447360	0					
ANR	1447560	Identifier	p		1447360	1					
ANR	1447561	Parameter	int * valid	480:25:11091:11100	1447360	1	True				
ANR	1447562	ParameterType	int *		1447360	0					
ANR	1447563	Identifier	valid		1447360	1					
ANR	1447564	Parameter	int level	480:37:11103:11111	1447360	2	True				
ANR	1447565	ParameterType	int		1447360	0					
ANR	1447566	Identifier	level		1447360	1					
ANR	1447567	Parameter	int * check	480:48:11114:11123	1447360	3	True				
ANR	1447568	ParameterType	int *		1447360	0					
ANR	1447569	Identifier	check		1447360	1					
ANR	1447570	Parameter	int print_errors	480:60:11126:11141	1447360	4	True				
ANR	1447571	ParameterType	int		1447360	0					
ANR	1447572	Identifier	print_errors		1447360	1					
ANR	1447573	CFGEntryNode	ENTRY		1447360		True				
ANR	1447574	CFGExitNode	EXIT		1447360		True				
ANR	1447575	Symbol	* sp		1447360						
ANR	1447576	Symbol	stack		1447360						
ANR	1447577	Symbol	level		1447360						
ANR	1447578	Symbol	check		1447360						
ANR	1447579	Symbol	stderr		1447360						
ANR	1447580	Symbol	rd_factor		1447360						
ANR	1447581	Symbol	verbose		1447360						
ANR	1447582	Symbol	p		1447360						
ANR	1447583	Symbol	valid		1447360						
ANR	1447584	Symbol	result		1447360						
ANR	1447585	Symbol	* check		1447360						
ANR	1447586	Symbol	print_errors		1447360						
ANR	1447587	Symbol	* stack		1447360						
ANR	1447588	Symbol	stack [ sp ] . line		1447360						
ANR	1447589	Symbol	* p		1447360						
ANR	1447590	Symbol	* * p		1447360						
ANR	1447591	Symbol	addr		1447360						
ANR	1447592	Symbol	sp		1447360						
ANR	1447593	Symbol	delspc		1447360						
ANR	1447594	Function	rd_expr_shift	510:0:11857:12671							
ANR	1447595	FunctionDef	"rd_expr_shift (const char * * p , int * valid , int level , int * check , int print_errors)"		1447594	0					
ANR	1447596	CompoundStatement		513:0:11960:12671	1447594	0					
ANR	1447597	IdentifierDeclStatement	int result ;	514:2:11964:11974	1447594	0	True				
ANR	1447598	IdentifierDecl	result		1447594	0					
ANR	1447599	IdentifierDeclType	int		1447594	0					
ANR	1447600	Identifier	result		1447594	1					
ANR	1447601	IfStatement	if ( verbose >= 6 )		1447594	1					
ANR	1447602	Condition	verbose >= 6	515:6:11982:11993	1447594	0	True				
ANR	1447603	RelationalExpression	verbose >= 6		1447594	0		>=			
ANR	1447604	Identifier	verbose		1447594	0					
ANR	1447605	PrimaryExpression	6		1447594	1					
ANR	1447606	Statement	fprintf	516:4:12000:12006	1447594	1	True				
ANR	1447607	Statement	(	516:12:12008:12008	1447594	2	True				
ANR	1447608	Statement	stderr	516:13:12009:12014	1447594	3	True				
ANR	1447609	Statement	","	516:19:12015:12015	1447594	4	True				
ANR	1447610	Statement	"""%5d (0x%04x): Starting to read shift expression """	516:21:12017:12066	1447594	5	True				
ANR	1447611	Statement	"""(string=%s).\\n"""	517:6:12074:12089	1447594	6	True				
ANR	1447612	Statement	","	517:22:12090:12090	1447594	7	True				
ANR	1447613	Statement	stack	517:24:12092:12096	1447594	8	True				
ANR	1447614	Statement	[	517:29:12097:12097	1447594	9	True				
ANR	1447615	Statement	sp	517:30:12098:12099	1447594	10	True				
ANR	1447616	Statement	]	517:32:12100:12100	1447594	11	True				
ANR	1447617	Statement	.	517:33:12101:12101	1447594	12	True				
ANR	1447618	Statement	line	517:34:12102:12105	1447594	13	True				
ANR	1447619	Statement	","	517:38:12106:12106	1447594	14	True				
ANR	1447620	Statement	addr	517:40:12108:12111	1447594	15	True				
ANR	1447621	Statement	","	517:44:12112:12112	1447594	16	True				
ANR	1447622	Statement	*	517:46:12114:12114	1447594	17	True				
ANR	1447623	Statement	p	517:47:12115:12115	1447594	18	True				
ANR	1447624	Statement	)	517:48:12116:12116	1447594	19	True				
ANR	1447625	ExpressionStatement		517:49:12117:12117	1447594	20	True				
ANR	1447626	ExpressionStatement	"result = rd_term ( p , valid , level , check , print_errors )"	518:2:12121:12176	1447594	21	True				
ANR	1447627	AssignmentExpression	"result = rd_term ( p , valid , level , check , print_errors )"		1447594	0		=			
ANR	1447628	Identifier	result		1447594	0					
ANR	1447629	CallExpression	"rd_term ( p , valid , level , check , print_errors )"		1447594	1					
ANR	1447630	Callee	rd_term		1447594	0					
ANR	1447631	Identifier	rd_term		1447594	0					
ANR	1447632	ArgumentList	p		1447594	1					
ANR	1447633	Argument	p		1447594	0					
ANR	1447634	Identifier	p		1447594	0					
ANR	1447635	Argument	valid		1447594	1					
ANR	1447636	Identifier	valid		1447594	0					
ANR	1447637	Argument	level		1447594	2					
ANR	1447638	Identifier	level		1447594	0					
ANR	1447639	Argument	check		1447594	3					
ANR	1447640	Identifier	check		1447594	0					
ANR	1447641	Argument	print_errors		1447594	4					
ANR	1447642	Identifier	print_errors		1447594	0					
ANR	1447643	ExpressionStatement	* p = delspc ( * p )	519:2:12180:12196	1447594	22	True				
ANR	1447644	AssignmentExpression	* p = delspc ( * p )		1447594	0		=			
ANR	1447645	UnaryOperationExpression	* p		1447594	0					
ANR	1447646	UnaryOperator	*		1447594	0					
ANR	1447647	Identifier	p		1447594	1					
ANR	1447648	CallExpression	delspc ( * p )		1447594	1					
ANR	1447649	Callee	delspc		1447594	0					
ANR	1447650	Identifier	delspc		1447594	0					
ANR	1447651	ArgumentList	* p		1447594	1					
ANR	1447652	Argument	* p		1447594	0					
ANR	1447653	UnaryOperationExpression	* p		1447594	0					
ANR	1447654	UnaryOperator	*		1447594	0					
ANR	1447655	Identifier	p		1447594	1					
ANR	1447656	WhileStatement	while ( ( * * p == '<' || * * p == '>' ) && ( * p ) [ 1 ] == * * p )		1447594	23					
ANR	1447657	Condition	( * * p == '<' || * * p == '>' ) && ( * p ) [ 1 ] == * * p	520:9:12207:12250	1447594	0	True				
ANR	1447658	AndExpression	( * * p == '<' || * * p == '>' ) && ( * p ) [ 1 ] == * * p		1447594	0		&&			
ANR	1447659	OrExpression	* * p == '<' || * * p == '>'		1447594	0		||			
ANR	1447660	EqualityExpression	* * p == '<'		1447594	0		==			
ANR	1447661	UnaryOperationExpression	* * p		1447594	0					
ANR	1447662	UnaryOperator	*		1447594	0					
ANR	1447663	UnaryOperationExpression	* p		1447594	1					
ANR	1447664	UnaryOperator	*		1447594	0					
ANR	1447665	Identifier	p		1447594	1					
ANR	1447666	PrimaryExpression	'<'		1447594	1					
ANR	1447667	EqualityExpression	* * p == '>'		1447594	1		==			
ANR	1447668	UnaryOperationExpression	* * p		1447594	0					
ANR	1447669	UnaryOperator	*		1447594	0					
ANR	1447670	UnaryOperationExpression	* p		1447594	1					
ANR	1447671	UnaryOperator	*		1447594	0					
ANR	1447672	Identifier	p		1447594	1					
ANR	1447673	PrimaryExpression	'>'		1447594	1					
ANR	1447674	EqualityExpression	( * p ) [ 1 ] == * * p		1447594	1		==			
ANR	1447675	ArrayIndexing	( * p ) [ 1 ]		1447594	0					
ANR	1447676	UnaryOperationExpression	* p		1447594	0					
ANR	1447677	UnaryOperator	*		1447594	0					
ANR	1447678	Identifier	p		1447594	1					
ANR	1447679	PrimaryExpression	1		1447594	1					
ANR	1447680	UnaryOperationExpression	* * p		1447594	1					
ANR	1447681	UnaryOperator	*		1447594	0					
ANR	1447682	UnaryOperationExpression	* p		1447594	1					
ANR	1447683	UnaryOperator	*		1447594	0					
ANR	1447684	Identifier	p		1447594	1					
ANR	1447685	CompoundStatement		9:4:296:296	1447594	1					
ANR	1447686	ExpressionStatement	* check = 0	522:6:12265:12275	1447594	0	True				
ANR	1447687	AssignmentExpression	* check = 0		1447594	0		=			
ANR	1447688	UnaryOperationExpression	* check		1447594	0					
ANR	1447689	UnaryOperator	*		1447594	0					
ANR	1447690	Identifier	check		1447594	1					
ANR	1447691	PrimaryExpression	0		1447594	1					
ANR	1447692	IfStatement	if ( * * p == '<' )		1447594	1					
ANR	1447693	Condition	* * p == '<'	523:10:12287:12296	1447594	0	True				
ANR	1447694	EqualityExpression	* * p == '<'		1447594	0		==			
ANR	1447695	UnaryOperationExpression	* * p		1447594	0					
ANR	1447696	UnaryOperator	*		1447594	0					
ANR	1447697	UnaryOperationExpression	* p		1447594	1					
ANR	1447698	UnaryOperator	*		1447594	0					
ANR	1447699	Identifier	p		1447594	1					
ANR	1447700	PrimaryExpression	'<'		1447594	1					
ANR	1447701	CompoundStatement		12:1:339:339	1447594	1					
ANR	1447702	ExpressionStatement	( * p ) += 2	525:3:12305:12314	1447594	0	True				
ANR	1447703	AssignmentExpression	( * p ) += 2		1447594	0		+=			
ANR	1447704	UnaryOperationExpression	* p		1447594	0					
ANR	1447705	UnaryOperator	*		1447594	0					
ANR	1447706	Identifier	p		1447594	1					
ANR	1447707	PrimaryExpression	2		1447594	1					
ANR	1447708	ExpressionStatement	"result <<= rd_term ( p , valid , level , check , print_errors )"	526:3:12319:12376	1447594	1	True				
ANR	1447709	AssignmentExpression	"result <<= rd_term ( p , valid , level , check , print_errors )"		1447594	0		<<=			
ANR	1447710	Identifier	result		1447594	0					
ANR	1447711	CallExpression	"rd_term ( p , valid , level , check , print_errors )"		1447594	1					
ANR	1447712	Callee	rd_term		1447594	0					
ANR	1447713	Identifier	rd_term		1447594	0					
ANR	1447714	ArgumentList	p		1447594	1					
ANR	1447715	Argument	p		1447594	0					
ANR	1447716	Identifier	p		1447594	0					
ANR	1447717	Argument	valid		1447594	1					
ANR	1447718	Identifier	valid		1447594	0					
ANR	1447719	Argument	level		1447594	2					
ANR	1447720	Identifier	level		1447594	0					
ANR	1447721	Argument	check		1447594	3					
ANR	1447722	Identifier	check		1447594	0					
ANR	1447723	Argument	print_errors		1447594	4					
ANR	1447724	Identifier	print_errors		1447594	0					
ANR	1447725	ElseStatement	else		1447594	0					
ANR	1447726	IfStatement	if ( * * p == '>' )		1447594	0					
ANR	1447727	Condition	* * p == '>'	528:15:12396:12405	1447594	0	True				
ANR	1447728	EqualityExpression	* * p == '>'		1447594	0		==			
ANR	1447729	UnaryOperationExpression	* * p		1447594	0					
ANR	1447730	UnaryOperator	*		1447594	0					
ANR	1447731	UnaryOperationExpression	* p		1447594	1					
ANR	1447732	UnaryOperator	*		1447594	0					
ANR	1447733	Identifier	p		1447594	1					
ANR	1447734	PrimaryExpression	'>'		1447594	1					
ANR	1447735	CompoundStatement		17:1:448:448	1447594	1					
ANR	1447736	ExpressionStatement	( * p ) += 2	530:3:12414:12423	1447594	0	True				
ANR	1447737	AssignmentExpression	( * p ) += 2		1447594	0		+=			
ANR	1447738	UnaryOperationExpression	* p		1447594	0					
ANR	1447739	UnaryOperator	*		1447594	0					
ANR	1447740	Identifier	p		1447594	1					
ANR	1447741	PrimaryExpression	2		1447594	1					
ANR	1447742	ExpressionStatement	"result >>= rd_term ( p , valid , level , check , print_errors )"	531:3:12428:12485	1447594	1	True				
ANR	1447743	AssignmentExpression	"result >>= rd_term ( p , valid , level , check , print_errors )"		1447594	0		>>=			
ANR	1447744	Identifier	result		1447594	0					
ANR	1447745	CallExpression	"rd_term ( p , valid , level , check , print_errors )"		1447594	1					
ANR	1447746	Callee	rd_term		1447594	0					
ANR	1447747	Identifier	rd_term		1447594	0					
ANR	1447748	ArgumentList	p		1447594	1					
ANR	1447749	Argument	p		1447594	0					
ANR	1447750	Identifier	p		1447594	0					
ANR	1447751	Argument	valid		1447594	1					
ANR	1447752	Identifier	valid		1447594	0					
ANR	1447753	Argument	level		1447594	2					
ANR	1447754	Identifier	level		1447594	0					
ANR	1447755	Argument	check		1447594	3					
ANR	1447756	Identifier	check		1447594	0					
ANR	1447757	Argument	print_errors		1447594	4					
ANR	1447758	Identifier	print_errors		1447594	0					
ANR	1447759	ExpressionStatement	* p = delspc ( * p )	533:6:12496:12512	1447594	2	True				
ANR	1447760	AssignmentExpression	* p = delspc ( * p )		1447594	0		=			
ANR	1447761	UnaryOperationExpression	* p		1447594	0					
ANR	1447762	UnaryOperator	*		1447594	0					
ANR	1447763	Identifier	p		1447594	1					
ANR	1447764	CallExpression	delspc ( * p )		1447594	1					
ANR	1447765	Callee	delspc		1447594	0					
ANR	1447766	Identifier	delspc		1447594	0					
ANR	1447767	ArgumentList	* p		1447594	1					
ANR	1447768	Argument	* p		1447594	0					
ANR	1447769	UnaryOperationExpression	* p		1447594	0					
ANR	1447770	UnaryOperator	*		1447594	0					
ANR	1447771	Identifier	p		1447594	1					
ANR	1447772	IfStatement	if ( verbose >= 7 )		1447594	24					
ANR	1447773	Condition	verbose >= 7	535:6:12526:12537	1447594	0	True				
ANR	1447774	RelationalExpression	verbose >= 7		1447594	0		>=			
ANR	1447775	Identifier	verbose		1447594	0					
ANR	1447776	PrimaryExpression	7		1447594	1					
ANR	1447777	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_shift returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	536:4:12544:12652	1447594	1	True				
ANR	1447778	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_shift returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1447594	0					
ANR	1447779	Callee	fprintf		1447594	0					
ANR	1447780	Identifier	fprintf		1447594	0					
ANR	1447781	ArgumentList	stderr		1447594	1					
ANR	1447782	Argument	stderr		1447594	0					
ANR	1447783	Identifier	stderr		1447594	0					
ANR	1447784	Argument	"""%5d (0x%04x): rd_shift returned %d (%04x).\\n"""		1447594	1					
ANR	1447785	PrimaryExpression	"""%5d (0x%04x): rd_shift returned %d (%04x).\\n"""		1447594	0					
ANR	1447786	Argument	stack [ sp ] . line		1447594	2					
ANR	1447787	MemberAccess	stack [ sp ] . line		1447594	0					
ANR	1447788	ArrayIndexing	stack [ sp ]		1447594	0					
ANR	1447789	Identifier	stack		1447594	0					
ANR	1447790	Identifier	sp		1447594	1					
ANR	1447791	Identifier	line		1447594	1					
ANR	1447792	Argument	addr		1447594	3					
ANR	1447793	Identifier	addr		1447594	0					
ANR	1447794	Argument	result		1447594	4					
ANR	1447795	Identifier	result		1447594	0					
ANR	1447796	Argument	result		1447594	5					
ANR	1447797	Identifier	result		1447594	0					
ANR	1447798	ReturnStatement	return result ;	538:2:12656:12669	1447594	25	True				
ANR	1447799	Identifier	result		1447594	0					
ANR	1447800	ReturnType	static int		1447594	1					
ANR	1447801	Identifier	rd_expr_shift		1447594	2					
ANR	1447802	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1447594	3					
ANR	1447803	Parameter	const char * * p	511:15:11883:11896	1447594	0	True				
ANR	1447804	ParameterType	const char * *		1447594	0					
ANR	1447805	Identifier	p		1447594	1					
ANR	1447806	Parameter	int * valid	511:31:11899:11908	1447594	1	True				
ANR	1447807	ParameterType	int *		1447594	0					
ANR	1447808	Identifier	valid		1447594	1					
ANR	1447809	Parameter	int level	511:43:11911:11919	1447594	2	True				
ANR	1447810	ParameterType	int		1447594	0					
ANR	1447811	Identifier	level		1447594	1					
ANR	1447812	Parameter	int * check	511:54:11922:11931	1447594	3	True				
ANR	1447813	ParameterType	int *		1447594	0					
ANR	1447814	Identifier	check		1447594	1					
ANR	1447815	Parameter	int print_errors	512:8:11942:11957	1447594	4	True				
ANR	1447816	ParameterType	int		1447594	0					
ANR	1447817	Identifier	print_errors		1447594	1					
ANR	1447818	CFGEntryNode	ENTRY		1447594		True				
ANR	1447819	CFGExitNode	EXIT		1447594		True				
ANR	1447820	Symbol	* sp		1447594						
ANR	1447821	Symbol	rd_term		1447594						
ANR	1447822	Symbol	stack		1447594						
ANR	1447823	Symbol	level		1447594						
ANR	1447824	Symbol	check		1447594						
ANR	1447825	Symbol	stderr		1447594						
ANR	1447826	Symbol	verbose		1447594						
ANR	1447827	Symbol	p		1447594						
ANR	1447828	Symbol	valid		1447594						
ANR	1447829	Symbol	result		1447594						
ANR	1447830	Symbol	* check		1447594						
ANR	1447831	Symbol	print_errors		1447594						
ANR	1447832	Symbol	* stack		1447594						
ANR	1447833	Symbol	* p		1447594						
ANR	1447834	Symbol	stack [ sp ] . line		1447594						
ANR	1447835	Symbol	* * p		1447594						
ANR	1447836	Symbol	addr		1447594						
ANR	1447837	Symbol	delspc		1447594						
ANR	1447838	Symbol	sp		1447594						
ANR	1447839	Function	rd_expr_unequal	541:0:12674:13830							
ANR	1447840	FunctionDef	"rd_expr_unequal (const char * * p , int * valid , int level , int * check , int print_errors)"		1447839	0					
ANR	1447841	CompoundStatement		544:0:12774:13830	1447839	0					
ANR	1447842	IdentifierDeclStatement	int result ;	545:2:12778:12788	1447839	0	True				
ANR	1447843	IdentifierDecl	result		1447839	0					
ANR	1447844	IdentifierDeclType	int		1447839	0					
ANR	1447845	Identifier	result		1447839	1					
ANR	1447846	IfStatement	if ( verbose >= 6 )		1447839	1					
ANR	1447847	Condition	verbose >= 6	546:6:12796:12807	1447839	0	True				
ANR	1447848	RelationalExpression	verbose >= 6		1447839	0		>=			
ANR	1447849	Identifier	verbose		1447839	0					
ANR	1447850	PrimaryExpression	6		1447839	1					
ANR	1447851	Statement	fprintf	547:4:12814:12820	1447839	1	True				
ANR	1447852	Statement	(	547:12:12822:12822	1447839	2	True				
ANR	1447853	Statement	stderr	547:13:12823:12828	1447839	3	True				
ANR	1447854	Statement	","	547:19:12829:12829	1447839	4	True				
ANR	1447855	Statement	"""%5d (0x%04x): Starting to read """	547:21:12831:12863	1447839	5	True				
ANR	1447856	Statement	"""unequality expression (string=%s).\\n"""	548:6:12871:12908	1447839	6	True				
ANR	1447857	Statement	","	548:44:12909:12909	1447839	7	True				
ANR	1447858	Statement	stack	548:46:12911:12915	1447839	8	True				
ANR	1447859	Statement	[	548:51:12916:12916	1447839	9	True				
ANR	1447860	Statement	sp	548:52:12917:12918	1447839	10	True				
ANR	1447861	Statement	]	548:54:12919:12919	1447839	11	True				
ANR	1447862	Statement	.	548:55:12920:12920	1447839	12	True				
ANR	1447863	Statement	line	548:56:12921:12924	1447839	13	True				
ANR	1447864	Statement	","	548:60:12925:12925	1447839	14	True				
ANR	1447865	Statement	addr	548:62:12927:12930	1447839	15	True				
ANR	1447866	Statement	","	548:66:12931:12931	1447839	16	True				
ANR	1447867	Statement	*	549:6:12939:12939	1447839	17	True				
ANR	1447868	Statement	p	549:7:12940:12940	1447839	18	True				
ANR	1447869	Statement	)	549:8:12941:12941	1447839	19	True				
ANR	1447870	ExpressionStatement		549:9:12942:12942	1447839	20	True				
ANR	1447871	ExpressionStatement	"result = rd_expr_shift ( p , valid , level , check , print_errors )"	550:2:12946:13007	1447839	21	True				
ANR	1447872	AssignmentExpression	"result = rd_expr_shift ( p , valid , level , check , print_errors )"		1447839	0		=			
ANR	1447873	Identifier	result		1447839	0					
ANR	1447874	CallExpression	"rd_expr_shift ( p , valid , level , check , print_errors )"		1447839	1					
ANR	1447875	Callee	rd_expr_shift		1447839	0					
ANR	1447876	Identifier	rd_expr_shift		1447839	0					
ANR	1447877	ArgumentList	p		1447839	1					
ANR	1447878	Argument	p		1447839	0					
ANR	1447879	Identifier	p		1447839	0					
ANR	1447880	Argument	valid		1447839	1					
ANR	1447881	Identifier	valid		1447839	0					
ANR	1447882	Argument	level		1447839	2					
ANR	1447883	Identifier	level		1447839	0					
ANR	1447884	Argument	check		1447839	3					
ANR	1447885	Identifier	check		1447839	0					
ANR	1447886	Argument	print_errors		1447839	4					
ANR	1447887	Identifier	print_errors		1447839	0					
ANR	1447888	ExpressionStatement	* p = delspc ( * p )	551:2:13011:13027	1447839	22	True				
ANR	1447889	AssignmentExpression	* p = delspc ( * p )		1447839	0		=			
ANR	1447890	UnaryOperationExpression	* p		1447839	0					
ANR	1447891	UnaryOperator	*		1447839	0					
ANR	1447892	Identifier	p		1447839	1					
ANR	1447893	CallExpression	delspc ( * p )		1447839	1					
ANR	1447894	Callee	delspc		1447839	0					
ANR	1447895	Identifier	delspc		1447839	0					
ANR	1447896	ArgumentList	* p		1447839	1					
ANR	1447897	Argument	* p		1447839	0					
ANR	1447898	UnaryOperationExpression	* p		1447839	0					
ANR	1447899	UnaryOperator	*		1447839	0					
ANR	1447900	Identifier	p		1447839	1					
ANR	1447901	IfStatement	if ( * * p == '<' && ( * p ) [ 1 ] == '=' )		1447839	23					
ANR	1447902	Condition	* * p == '<' && ( * p ) [ 1 ] == '='	552:6:13035:13062	1447839	0	True				
ANR	1447903	AndExpression	* * p == '<' && ( * p ) [ 1 ] == '='		1447839	0		&&			
ANR	1447904	EqualityExpression	* * p == '<'		1447839	0		==			
ANR	1447905	UnaryOperationExpression	* * p		1447839	0					
ANR	1447906	UnaryOperator	*		1447839	0					
ANR	1447907	UnaryOperationExpression	* p		1447839	1					
ANR	1447908	UnaryOperator	*		1447839	0					
ANR	1447909	Identifier	p		1447839	1					
ANR	1447910	PrimaryExpression	'<'		1447839	1					
ANR	1447911	EqualityExpression	( * p ) [ 1 ] == '='		1447839	1		==			
ANR	1447912	ArrayIndexing	( * p ) [ 1 ]		1447839	0					
ANR	1447913	UnaryOperationExpression	* p		1447839	0					
ANR	1447914	UnaryOperator	*		1447839	0					
ANR	1447915	Identifier	p		1447839	1					
ANR	1447916	PrimaryExpression	1		1447839	1					
ANR	1447917	PrimaryExpression	'='		1447839	1					
ANR	1447918	CompoundStatement		10:4:294:294	1447839	1					
ANR	1447919	ExpressionStatement	* check = 0	554:6:13077:13087	1447839	0	True				
ANR	1447920	AssignmentExpression	* check = 0		1447839	0		=			
ANR	1447921	UnaryOperationExpression	* check		1447839	0					
ANR	1447922	UnaryOperator	*		1447839	0					
ANR	1447923	Identifier	check		1447839	1					
ANR	1447924	PrimaryExpression	0		1447839	1					
ANR	1447925	ExpressionStatement	( * p ) += 2	555:6:13095:13104	1447839	1	True				
ANR	1447926	AssignmentExpression	( * p ) += 2		1447839	0		+=			
ANR	1447927	UnaryOperationExpression	* p		1447839	0					
ANR	1447928	UnaryOperator	*		1447839	0					
ANR	1447929	Identifier	p		1447839	1					
ANR	1447930	PrimaryExpression	2		1447839	1					
ANR	1447931	ReturnStatement	"return result <= rd_expr_unequal ( p , valid , level , check , print_errors ) ;"	556:6:13112:13183	1447839	2	True				
ANR	1447932	RelationalExpression	"result <= rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	0		<=			
ANR	1447933	Identifier	result		1447839	0					
ANR	1447934	CallExpression	"rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	1					
ANR	1447935	Callee	rd_expr_unequal		1447839	0					
ANR	1447936	Identifier	rd_expr_unequal		1447839	0					
ANR	1447937	ArgumentList	p		1447839	1					
ANR	1447938	Argument	p		1447839	0					
ANR	1447939	Identifier	p		1447839	0					
ANR	1447940	Argument	valid		1447839	1					
ANR	1447941	Identifier	valid		1447839	0					
ANR	1447942	Argument	level		1447839	2					
ANR	1447943	Identifier	level		1447839	0					
ANR	1447944	Argument	check		1447839	3					
ANR	1447945	Identifier	check		1447839	0					
ANR	1447946	Argument	print_errors		1447839	4					
ANR	1447947	Identifier	print_errors		1447839	0					
ANR	1447948	ElseStatement	else		1447839	0					
ANR	1447949	IfStatement	if ( * * p == '>' && ( * p ) [ 1 ] == '=' )		1447839	0					
ANR	1447950	Condition	* * p == '>' && ( * p ) [ 1 ] == '='	558:11:13202:13229	1447839	0	True				
ANR	1447951	AndExpression	* * p == '>' && ( * p ) [ 1 ] == '='		1447839	0		&&			
ANR	1447952	EqualityExpression	* * p == '>'		1447839	0		==			
ANR	1447953	UnaryOperationExpression	* * p		1447839	0					
ANR	1447954	UnaryOperator	*		1447839	0					
ANR	1447955	UnaryOperationExpression	* p		1447839	1					
ANR	1447956	UnaryOperator	*		1447839	0					
ANR	1447957	Identifier	p		1447839	1					
ANR	1447958	PrimaryExpression	'>'		1447839	1					
ANR	1447959	EqualityExpression	( * p ) [ 1 ] == '='		1447839	1		==			
ANR	1447960	ArrayIndexing	( * p ) [ 1 ]		1447839	0					
ANR	1447961	UnaryOperationExpression	* p		1447839	0					
ANR	1447962	UnaryOperator	*		1447839	0					
ANR	1447963	Identifier	p		1447839	1					
ANR	1447964	PrimaryExpression	1		1447839	1					
ANR	1447965	PrimaryExpression	'='		1447839	1					
ANR	1447966	CompoundStatement		16:4:461:461	1447839	1					
ANR	1447967	ExpressionStatement	* check = 0	560:6:13244:13254	1447839	0	True				
ANR	1447968	AssignmentExpression	* check = 0		1447839	0		=			
ANR	1447969	UnaryOperationExpression	* check		1447839	0					
ANR	1447970	UnaryOperator	*		1447839	0					
ANR	1447971	Identifier	check		1447839	1					
ANR	1447972	PrimaryExpression	0		1447839	1					
ANR	1447973	ExpressionStatement	( * p ) += 2	561:6:13262:13271	1447839	1	True				
ANR	1447974	AssignmentExpression	( * p ) += 2		1447839	0		+=			
ANR	1447975	UnaryOperationExpression	* p		1447839	0					
ANR	1447976	UnaryOperator	*		1447839	0					
ANR	1447977	Identifier	p		1447839	1					
ANR	1447978	PrimaryExpression	2		1447839	1					
ANR	1447979	ReturnStatement	"return result >= rd_expr_unequal ( p , valid , level , check , print_errors ) ;"	562:6:13279:13350	1447839	2	True				
ANR	1447980	RelationalExpression	"result >= rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	0		>=			
ANR	1447981	Identifier	result		1447839	0					
ANR	1447982	CallExpression	"rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	1					
ANR	1447983	Callee	rd_expr_unequal		1447839	0					
ANR	1447984	Identifier	rd_expr_unequal		1447839	0					
ANR	1447985	ArgumentList	p		1447839	1					
ANR	1447986	Argument	p		1447839	0					
ANR	1447987	Identifier	p		1447839	0					
ANR	1447988	Argument	valid		1447839	1					
ANR	1447989	Identifier	valid		1447839	0					
ANR	1447990	Argument	level		1447839	2					
ANR	1447991	Identifier	level		1447839	0					
ANR	1447992	Argument	check		1447839	3					
ANR	1447993	Identifier	check		1447839	0					
ANR	1447994	Argument	print_errors		1447839	4					
ANR	1447995	Identifier	print_errors		1447839	0					
ANR	1447996	IfStatement	if ( * * p == '<' && ( * p ) [ 1 ] != '<' )		1447839	24					
ANR	1447997	Condition	* * p == '<' && ( * p ) [ 1 ] != '<'	564:6:13364:13391	1447839	0	True				
ANR	1447998	AndExpression	* * p == '<' && ( * p ) [ 1 ] != '<'		1447839	0		&&			
ANR	1447999	EqualityExpression	* * p == '<'		1447839	0		==			
ANR	1448000	UnaryOperationExpression	* * p		1447839	0					
ANR	1448001	UnaryOperator	*		1447839	0					
ANR	1448002	UnaryOperationExpression	* p		1447839	1					
ANR	1448003	UnaryOperator	*		1447839	0					
ANR	1448004	Identifier	p		1447839	1					
ANR	1448005	PrimaryExpression	'<'		1447839	1					
ANR	1448006	EqualityExpression	( * p ) [ 1 ] != '<'		1447839	1		!=			
ANR	1448007	ArrayIndexing	( * p ) [ 1 ]		1447839	0					
ANR	1448008	UnaryOperationExpression	* p		1447839	0					
ANR	1448009	UnaryOperator	*		1447839	0					
ANR	1448010	Identifier	p		1447839	1					
ANR	1448011	PrimaryExpression	1		1447839	1					
ANR	1448012	PrimaryExpression	'<'		1447839	1					
ANR	1448013	CompoundStatement		22:4:623:623	1447839	1					
ANR	1448014	ExpressionStatement	* check = 0	566:6:13406:13416	1447839	0	True				
ANR	1448015	AssignmentExpression	* check = 0		1447839	0		=			
ANR	1448016	UnaryOperationExpression	* check		1447839	0					
ANR	1448017	UnaryOperator	*		1447839	0					
ANR	1448018	Identifier	check		1447839	1					
ANR	1448019	PrimaryExpression	0		1447839	1					
ANR	1448020	ExpressionStatement	( * p ) ++	567:6:13424:13430	1447839	1	True				
ANR	1448021	PostIncDecOperationExpression	( * p ) ++		1447839	0					
ANR	1448022	UnaryOperationExpression	* p		1447839	0					
ANR	1448023	UnaryOperator	*		1447839	0					
ANR	1448024	Identifier	p		1447839	1					
ANR	1448025	IncDec	++		1447839	1					
ANR	1448026	ReturnStatement	"return result < rd_expr_unequal ( p , valid , level , check , print_errors ) ;"	568:6:13438:13508	1447839	2	True				
ANR	1448027	RelationalExpression	"result < rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	0		<			
ANR	1448028	Identifier	result		1447839	0					
ANR	1448029	CallExpression	"rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	1					
ANR	1448030	Callee	rd_expr_unequal		1447839	0					
ANR	1448031	Identifier	rd_expr_unequal		1447839	0					
ANR	1448032	ArgumentList	p		1447839	1					
ANR	1448033	Argument	p		1447839	0					
ANR	1448034	Identifier	p		1447839	0					
ANR	1448035	Argument	valid		1447839	1					
ANR	1448036	Identifier	valid		1447839	0					
ANR	1448037	Argument	level		1447839	2					
ANR	1448038	Identifier	level		1447839	0					
ANR	1448039	Argument	check		1447839	3					
ANR	1448040	Identifier	check		1447839	0					
ANR	1448041	Argument	print_errors		1447839	4					
ANR	1448042	Identifier	print_errors		1447839	0					
ANR	1448043	ElseStatement	else		1447839	0					
ANR	1448044	IfStatement	if ( * * p == '>' && ( * p ) [ 1 ] != '>' )		1447839	0					
ANR	1448045	Condition	* * p == '>' && ( * p ) [ 1 ] != '>'	570:11:13527:13554	1447839	0	True				
ANR	1448046	AndExpression	* * p == '>' && ( * p ) [ 1 ] != '>'		1447839	0		&&			
ANR	1448047	EqualityExpression	* * p == '>'		1447839	0		==			
ANR	1448048	UnaryOperationExpression	* * p		1447839	0					
ANR	1448049	UnaryOperator	*		1447839	0					
ANR	1448050	UnaryOperationExpression	* p		1447839	1					
ANR	1448051	UnaryOperator	*		1447839	0					
ANR	1448052	Identifier	p		1447839	1					
ANR	1448053	PrimaryExpression	'>'		1447839	1					
ANR	1448054	EqualityExpression	( * p ) [ 1 ] != '>'		1447839	1		!=			
ANR	1448055	ArrayIndexing	( * p ) [ 1 ]		1447839	0					
ANR	1448056	UnaryOperationExpression	* p		1447839	0					
ANR	1448057	UnaryOperator	*		1447839	0					
ANR	1448058	Identifier	p		1447839	1					
ANR	1448059	PrimaryExpression	1		1447839	1					
ANR	1448060	PrimaryExpression	'>'		1447839	1					
ANR	1448061	CompoundStatement		28:4:786:786	1447839	1					
ANR	1448062	ExpressionStatement	* check = 0	572:6:13569:13579	1447839	0	True				
ANR	1448063	AssignmentExpression	* check = 0		1447839	0		=			
ANR	1448064	UnaryOperationExpression	* check		1447839	0					
ANR	1448065	UnaryOperator	*		1447839	0					
ANR	1448066	Identifier	check		1447839	1					
ANR	1448067	PrimaryExpression	0		1447839	1					
ANR	1448068	ExpressionStatement	( * p ) ++	573:6:13587:13593	1447839	1	True				
ANR	1448069	PostIncDecOperationExpression	( * p ) ++		1447839	0					
ANR	1448070	UnaryOperationExpression	* p		1447839	0					
ANR	1448071	UnaryOperator	*		1447839	0					
ANR	1448072	Identifier	p		1447839	1					
ANR	1448073	IncDec	++		1447839	1					
ANR	1448074	ReturnStatement	"return result > rd_expr_unequal ( p , valid , level , check , print_errors ) ;"	574:6:13601:13671	1447839	2	True				
ANR	1448075	RelationalExpression	"result > rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	0		>			
ANR	1448076	Identifier	result		1447839	0					
ANR	1448077	CallExpression	"rd_expr_unequal ( p , valid , level , check , print_errors )"		1447839	1					
ANR	1448078	Callee	rd_expr_unequal		1447839	0					
ANR	1448079	Identifier	rd_expr_unequal		1447839	0					
ANR	1448080	ArgumentList	p		1447839	1					
ANR	1448081	Argument	p		1447839	0					
ANR	1448082	Identifier	p		1447839	0					
ANR	1448083	Argument	valid		1447839	1					
ANR	1448084	Identifier	valid		1447839	0					
ANR	1448085	Argument	level		1447839	2					
ANR	1448086	Identifier	level		1447839	0					
ANR	1448087	Argument	check		1447839	3					
ANR	1448088	Identifier	check		1447839	0					
ANR	1448089	Argument	print_errors		1447839	4					
ANR	1448090	Identifier	print_errors		1447839	0					
ANR	1448091	IfStatement	if ( verbose >= 7 )		1447839	25					
ANR	1448092	Condition	verbose >= 7	576:6:13685:13696	1447839	0	True				
ANR	1448093	RelationalExpression	verbose >= 7		1447839	0		>=			
ANR	1448094	Identifier	verbose		1447839	0					
ANR	1448095	PrimaryExpression	7		1447839	1					
ANR	1448096	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_shift returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	577:4:13703:13811	1447839	1	True				
ANR	1448097	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_shift returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1447839	0					
ANR	1448098	Callee	fprintf		1447839	0					
ANR	1448099	Identifier	fprintf		1447839	0					
ANR	1448100	ArgumentList	stderr		1447839	1					
ANR	1448101	Argument	stderr		1447839	0					
ANR	1448102	Identifier	stderr		1447839	0					
ANR	1448103	Argument	"""%5d (0x%04x): rd_shift returned %d (%04x).\\n"""		1447839	1					
ANR	1448104	PrimaryExpression	"""%5d (0x%04x): rd_shift returned %d (%04x).\\n"""		1447839	0					
ANR	1448105	Argument	stack [ sp ] . line		1447839	2					
ANR	1448106	MemberAccess	stack [ sp ] . line		1447839	0					
ANR	1448107	ArrayIndexing	stack [ sp ]		1447839	0					
ANR	1448108	Identifier	stack		1447839	0					
ANR	1448109	Identifier	sp		1447839	1					
ANR	1448110	Identifier	line		1447839	1					
ANR	1448111	Argument	addr		1447839	3					
ANR	1448112	Identifier	addr		1447839	0					
ANR	1448113	Argument	result		1447839	4					
ANR	1448114	Identifier	result		1447839	0					
ANR	1448115	Argument	result		1447839	5					
ANR	1448116	Identifier	result		1447839	0					
ANR	1448117	ReturnStatement	return result ;	579:2:13815:13828	1447839	26	True				
ANR	1448118	Identifier	result		1447839	0					
ANR	1448119	ReturnType	static int		1447839	1					
ANR	1448120	Identifier	rd_expr_unequal		1447839	2					
ANR	1448121	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1447839	3					
ANR	1448122	Parameter	const char * * p	542:17:12702:12715	1447839	0	True				
ANR	1448123	ParameterType	const char * *		1447839	0					
ANR	1448124	Identifier	p		1447839	1					
ANR	1448125	Parameter	int * valid	542:33:12718:12727	1447839	1	True				
ANR	1448126	ParameterType	int *		1447839	0					
ANR	1448127	Identifier	valid		1447839	1					
ANR	1448128	Parameter	int level	542:45:12730:12738	1447839	2	True				
ANR	1448129	ParameterType	int		1447839	0					
ANR	1448130	Identifier	level		1447839	1					
ANR	1448131	Parameter	int * check	542:56:12741:12750	1447839	3	True				
ANR	1448132	ParameterType	int *		1447839	0					
ANR	1448133	Identifier	check		1447839	1					
ANR	1448134	Parameter	int print_errors	543:3:12756:12771	1447839	4	True				
ANR	1448135	ParameterType	int		1447839	0					
ANR	1448136	Identifier	print_errors		1447839	1					
ANR	1448137	CFGEntryNode	ENTRY		1447839		True				
ANR	1448138	CFGExitNode	EXIT		1447839		True				
ANR	1448139	Symbol	rd_expr_unequal		1447839						
ANR	1448140	Symbol	* sp		1447839						
ANR	1448141	Symbol	stack		1447839						
ANR	1448142	Symbol	level		1447839						
ANR	1448143	Symbol	check		1447839						
ANR	1448144	Symbol	stderr		1447839						
ANR	1448145	Symbol	verbose		1447839						
ANR	1448146	Symbol	p		1447839						
ANR	1448147	Symbol	valid		1447839						
ANR	1448148	Symbol	result		1447839						
ANR	1448149	Symbol	rd_expr_shift		1447839						
ANR	1448150	Symbol	* check		1447839						
ANR	1448151	Symbol	print_errors		1447839						
ANR	1448152	Symbol	* stack		1447839						
ANR	1448153	Symbol	* p		1447839						
ANR	1448154	Symbol	stack [ sp ] . line		1447839						
ANR	1448155	Symbol	* * p		1447839						
ANR	1448156	Symbol	addr		1447839						
ANR	1448157	Symbol	delspc		1447839						
ANR	1448158	Symbol	sp		1447839						
ANR	1448159	Function	rd_expr_equal	582:0:13833:14668							
ANR	1448160	FunctionDef	"rd_expr_equal (const char * * p , int * valid , int level , int * check , int print_errors)"		1448159	0					
ANR	1448161	CompoundStatement		585:0:13936:14668	1448159	0					
ANR	1448162	IdentifierDeclStatement	int result ;	586:2:13940:13950	1448159	0	True				
ANR	1448163	IdentifierDecl	result		1448159	0					
ANR	1448164	IdentifierDeclType	int		1448159	0					
ANR	1448165	Identifier	result		1448159	1					
ANR	1448166	IfStatement	if ( verbose >= 6 )		1448159	1					
ANR	1448167	Condition	verbose >= 6	587:6:13958:13969	1448159	0	True				
ANR	1448168	RelationalExpression	verbose >= 6		1448159	0		>=			
ANR	1448169	Identifier	verbose		1448159	0					
ANR	1448170	PrimaryExpression	6		1448159	1					
ANR	1448171	Statement	fprintf	588:4:13976:13982	1448159	1	True				
ANR	1448172	Statement	(	588:12:13984:13984	1448159	2	True				
ANR	1448173	Statement	stderr	588:13:13985:13990	1448159	3	True				
ANR	1448174	Statement	","	588:19:13991:13991	1448159	4	True				
ANR	1448175	Statement	"""%5d (0x%04x): Starting to read equality epression """	588:21:13993:14044	1448159	5	True				
ANR	1448176	Statement	"""(string=%s).\\n"""	589:6:14052:14067	1448159	6	True				
ANR	1448177	Statement	","	589:22:14068:14068	1448159	7	True				
ANR	1448178	Statement	stack	589:24:14070:14074	1448159	8	True				
ANR	1448179	Statement	[	589:29:14075:14075	1448159	9	True				
ANR	1448180	Statement	sp	589:30:14076:14077	1448159	10	True				
ANR	1448181	Statement	]	589:32:14078:14078	1448159	11	True				
ANR	1448182	Statement	.	589:33:14079:14079	1448159	12	True				
ANR	1448183	Statement	line	589:34:14080:14083	1448159	13	True				
ANR	1448184	Statement	","	589:38:14084:14084	1448159	14	True				
ANR	1448185	Statement	addr	589:40:14086:14089	1448159	15	True				
ANR	1448186	Statement	","	589:44:14090:14090	1448159	16	True				
ANR	1448187	Statement	*	589:46:14092:14092	1448159	17	True				
ANR	1448188	Statement	p	589:47:14093:14093	1448159	18	True				
ANR	1448189	Statement	)	589:48:14094:14094	1448159	19	True				
ANR	1448190	ExpressionStatement		589:49:14095:14095	1448159	20	True				
ANR	1448191	ExpressionStatement	"result = rd_expr_unequal ( p , valid , level , check , print_errors )"	590:2:14099:14162	1448159	21	True				
ANR	1448192	AssignmentExpression	"result = rd_expr_unequal ( p , valid , level , check , print_errors )"		1448159	0		=			
ANR	1448193	Identifier	result		1448159	0					
ANR	1448194	CallExpression	"rd_expr_unequal ( p , valid , level , check , print_errors )"		1448159	1					
ANR	1448195	Callee	rd_expr_unequal		1448159	0					
ANR	1448196	Identifier	rd_expr_unequal		1448159	0					
ANR	1448197	ArgumentList	p		1448159	1					
ANR	1448198	Argument	p		1448159	0					
ANR	1448199	Identifier	p		1448159	0					
ANR	1448200	Argument	valid		1448159	1					
ANR	1448201	Identifier	valid		1448159	0					
ANR	1448202	Argument	level		1448159	2					
ANR	1448203	Identifier	level		1448159	0					
ANR	1448204	Argument	check		1448159	3					
ANR	1448205	Identifier	check		1448159	0					
ANR	1448206	Argument	print_errors		1448159	4					
ANR	1448207	Identifier	print_errors		1448159	0					
ANR	1448208	ExpressionStatement	* p = delspc ( * p )	591:2:14166:14182	1448159	22	True				
ANR	1448209	AssignmentExpression	* p = delspc ( * p )		1448159	0		=			
ANR	1448210	UnaryOperationExpression	* p		1448159	0					
ANR	1448211	UnaryOperator	*		1448159	0					
ANR	1448212	Identifier	p		1448159	1					
ANR	1448213	CallExpression	delspc ( * p )		1448159	1					
ANR	1448214	Callee	delspc		1448159	0					
ANR	1448215	Identifier	delspc		1448159	0					
ANR	1448216	ArgumentList	* p		1448159	1					
ANR	1448217	Argument	* p		1448159	0					
ANR	1448218	UnaryOperationExpression	* p		1448159	0					
ANR	1448219	UnaryOperator	*		1448159	0					
ANR	1448220	Identifier	p		1448159	1					
ANR	1448221	IfStatement	if ( * * p == '=' )		1448159	23					
ANR	1448222	Condition	* * p == '='	592:6:14190:14199	1448159	0	True				
ANR	1448223	EqualityExpression	* * p == '='		1448159	0		==			
ANR	1448224	UnaryOperationExpression	* * p		1448159	0					
ANR	1448225	UnaryOperator	*		1448159	0					
ANR	1448226	UnaryOperationExpression	* p		1448159	1					
ANR	1448227	UnaryOperator	*		1448159	0					
ANR	1448228	Identifier	p		1448159	1					
ANR	1448229	PrimaryExpression	'='		1448159	1					
ANR	1448230	CompoundStatement		9:4:269:269	1448159	1					
ANR	1448231	ExpressionStatement	* check = 0	594:6:14214:14224	1448159	0	True				
ANR	1448232	AssignmentExpression	* check = 0		1448159	0		=			
ANR	1448233	UnaryOperationExpression	* check		1448159	0					
ANR	1448234	UnaryOperator	*		1448159	0					
ANR	1448235	Identifier	check		1448159	1					
ANR	1448236	PrimaryExpression	0		1448159	1					
ANR	1448237	ExpressionStatement	++ * p	595:6:14232:14236	1448159	1	True				
ANR	1448238	UnaryExpression	++ * p		1448159	0					
ANR	1448239	IncDec	++		1448159	0					
ANR	1448240	UnaryOperationExpression	* p		1448159	1					
ANR	1448241	UnaryOperator	*		1448159	0					
ANR	1448242	Identifier	p		1448159	1					
ANR	1448243	IfStatement	if ( * * p == '=' )		1448159	2					
ANR	1448244	Condition	* * p == '='	596:10:14248:14257	1448159	0	True				
ANR	1448245	EqualityExpression	* * p == '='		1448159	0		==			
ANR	1448246	UnaryOperationExpression	* * p		1448159	0					
ANR	1448247	UnaryOperator	*		1448159	0					
ANR	1448248	UnaryOperationExpression	* p		1448159	1					
ANR	1448249	UnaryOperator	*		1448159	0					
ANR	1448250	Identifier	p		1448159	1					
ANR	1448251	PrimaryExpression	'='		1448159	1					
ANR	1448252	ExpressionStatement	++ * p	597:1:14261:14267	1448159	1	True				
ANR	1448253	UnaryExpression	++ * p		1448159	0					
ANR	1448254	IncDec	++		1448159	0					
ANR	1448255	UnaryOperationExpression	* p		1448159	1					
ANR	1448256	UnaryOperator	*		1448159	0					
ANR	1448257	Identifier	p		1448159	1					
ANR	1448258	ReturnStatement	"return result == rd_expr_equal ( p , valid , level , check , print_errors ) ;"	598:6:14275:14344	1448159	3	True				
ANR	1448259	EqualityExpression	"result == rd_expr_equal ( p , valid , level , check , print_errors )"		1448159	0		==			
ANR	1448260	Identifier	result		1448159	0					
ANR	1448261	CallExpression	"rd_expr_equal ( p , valid , level , check , print_errors )"		1448159	1					
ANR	1448262	Callee	rd_expr_equal		1448159	0					
ANR	1448263	Identifier	rd_expr_equal		1448159	0					
ANR	1448264	ArgumentList	p		1448159	1					
ANR	1448265	Argument	p		1448159	0					
ANR	1448266	Identifier	p		1448159	0					
ANR	1448267	Argument	valid		1448159	1					
ANR	1448268	Identifier	valid		1448159	0					
ANR	1448269	Argument	level		1448159	2					
ANR	1448270	Identifier	level		1448159	0					
ANR	1448271	Argument	check		1448159	3					
ANR	1448272	Identifier	check		1448159	0					
ANR	1448273	Argument	print_errors		1448159	4					
ANR	1448274	Identifier	print_errors		1448159	0					
ANR	1448275	ElseStatement	else		1448159	0					
ANR	1448276	IfStatement	if ( * * p == '!' && ( * p ) [ 1 ] == '=' )		1448159	0					
ANR	1448277	Condition	* * p == '!' && ( * p ) [ 1 ] == '='	600:11:14363:14390	1448159	0	True				
ANR	1448278	AndExpression	* * p == '!' && ( * p ) [ 1 ] == '='		1448159	0		&&			
ANR	1448279	EqualityExpression	* * p == '!'		1448159	0		==			
ANR	1448280	UnaryOperationExpression	* * p		1448159	0					
ANR	1448281	UnaryOperator	*		1448159	0					
ANR	1448282	UnaryOperationExpression	* p		1448159	1					
ANR	1448283	UnaryOperator	*		1448159	0					
ANR	1448284	Identifier	p		1448159	1					
ANR	1448285	PrimaryExpression	'!'		1448159	1					
ANR	1448286	EqualityExpression	( * p ) [ 1 ] == '='		1448159	1		==			
ANR	1448287	ArrayIndexing	( * p ) [ 1 ]		1448159	0					
ANR	1448288	UnaryOperationExpression	* p		1448159	0					
ANR	1448289	UnaryOperator	*		1448159	0					
ANR	1448290	Identifier	p		1448159	1					
ANR	1448291	PrimaryExpression	1		1448159	1					
ANR	1448292	PrimaryExpression	'='		1448159	1					
ANR	1448293	CompoundStatement		17:4:460:460	1448159	1					
ANR	1448294	ExpressionStatement	* check = 0	602:6:14405:14415	1448159	0	True				
ANR	1448295	AssignmentExpression	* check = 0		1448159	0		=			
ANR	1448296	UnaryOperationExpression	* check		1448159	0					
ANR	1448297	UnaryOperator	*		1448159	0					
ANR	1448298	Identifier	check		1448159	1					
ANR	1448299	PrimaryExpression	0		1448159	1					
ANR	1448300	ExpressionStatement	( * p ) += 2	603:6:14423:14432	1448159	1	True				
ANR	1448301	AssignmentExpression	( * p ) += 2		1448159	0		+=			
ANR	1448302	UnaryOperationExpression	* p		1448159	0					
ANR	1448303	UnaryOperator	*		1448159	0					
ANR	1448304	Identifier	p		1448159	1					
ANR	1448305	PrimaryExpression	2		1448159	1					
ANR	1448306	ReturnStatement	"return result != rd_expr_equal ( p , valid , level , check , print_errors ) ;"	604:6:14440:14509	1448159	2	True				
ANR	1448307	EqualityExpression	"result != rd_expr_equal ( p , valid , level , check , print_errors )"		1448159	0		!=			
ANR	1448308	Identifier	result		1448159	0					
ANR	1448309	CallExpression	"rd_expr_equal ( p , valid , level , check , print_errors )"		1448159	1					
ANR	1448310	Callee	rd_expr_equal		1448159	0					
ANR	1448311	Identifier	rd_expr_equal		1448159	0					
ANR	1448312	ArgumentList	p		1448159	1					
ANR	1448313	Argument	p		1448159	0					
ANR	1448314	Identifier	p		1448159	0					
ANR	1448315	Argument	valid		1448159	1					
ANR	1448316	Identifier	valid		1448159	0					
ANR	1448317	Argument	level		1448159	2					
ANR	1448318	Identifier	level		1448159	0					
ANR	1448319	Argument	check		1448159	3					
ANR	1448320	Identifier	check		1448159	0					
ANR	1448321	Argument	print_errors		1448159	4					
ANR	1448322	Identifier	print_errors		1448159	0					
ANR	1448323	IfStatement	if ( verbose >= 7 )		1448159	24					
ANR	1448324	Condition	verbose >= 7	606:6:14523:14534	1448159	0	True				
ANR	1448325	RelationalExpression	verbose >= 7		1448159	0		>=			
ANR	1448326	Identifier	verbose		1448159	0					
ANR	1448327	PrimaryExpression	7		1448159	1					
ANR	1448328	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_equal returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	607:4:14541:14649	1448159	1	True				
ANR	1448329	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_equal returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1448159	0					
ANR	1448330	Callee	fprintf		1448159	0					
ANR	1448331	Identifier	fprintf		1448159	0					
ANR	1448332	ArgumentList	stderr		1448159	1					
ANR	1448333	Argument	stderr		1448159	0					
ANR	1448334	Identifier	stderr		1448159	0					
ANR	1448335	Argument	"""%5d (0x%04x): rd_equal returned %d (%04x).\\n"""		1448159	1					
ANR	1448336	PrimaryExpression	"""%5d (0x%04x): rd_equal returned %d (%04x).\\n"""		1448159	0					
ANR	1448337	Argument	stack [ sp ] . line		1448159	2					
ANR	1448338	MemberAccess	stack [ sp ] . line		1448159	0					
ANR	1448339	ArrayIndexing	stack [ sp ]		1448159	0					
ANR	1448340	Identifier	stack		1448159	0					
ANR	1448341	Identifier	sp		1448159	1					
ANR	1448342	Identifier	line		1448159	1					
ANR	1448343	Argument	addr		1448159	3					
ANR	1448344	Identifier	addr		1448159	0					
ANR	1448345	Argument	result		1448159	4					
ANR	1448346	Identifier	result		1448159	0					
ANR	1448347	Argument	result		1448159	5					
ANR	1448348	Identifier	result		1448159	0					
ANR	1448349	ReturnStatement	return result ;	609:2:14653:14666	1448159	25	True				
ANR	1448350	Identifier	result		1448159	0					
ANR	1448351	ReturnType	static int		1448159	1					
ANR	1448352	Identifier	rd_expr_equal		1448159	2					
ANR	1448353	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1448159	3					
ANR	1448354	Parameter	const char * * p	583:15:13859:13872	1448159	0	True				
ANR	1448355	ParameterType	const char * *		1448159	0					
ANR	1448356	Identifier	p		1448159	1					
ANR	1448357	Parameter	int * valid	583:31:13875:13884	1448159	1	True				
ANR	1448358	ParameterType	int *		1448159	0					
ANR	1448359	Identifier	valid		1448159	1					
ANR	1448360	Parameter	int level	583:43:13887:13895	1448159	2	True				
ANR	1448361	ParameterType	int		1448159	0					
ANR	1448362	Identifier	level		1448159	1					
ANR	1448363	Parameter	int * check	583:54:13898:13907	1448159	3	True				
ANR	1448364	ParameterType	int *		1448159	0					
ANR	1448365	Identifier	check		1448159	1					
ANR	1448366	Parameter	int print_errors	584:8:13918:13933	1448159	4	True				
ANR	1448367	ParameterType	int		1448159	0					
ANR	1448368	Identifier	print_errors		1448159	1					
ANR	1448369	CFGEntryNode	ENTRY		1448159		True				
ANR	1448370	CFGExitNode	EXIT		1448159		True				
ANR	1448371	Symbol	rd_expr_unequal		1448159						
ANR	1448372	Symbol	* sp		1448159						
ANR	1448373	Symbol	stack		1448159						
ANR	1448374	Symbol	rd_expr_equal		1448159						
ANR	1448375	Symbol	level		1448159						
ANR	1448376	Symbol	check		1448159						
ANR	1448377	Symbol	stderr		1448159						
ANR	1448378	Symbol	verbose		1448159						
ANR	1448379	Symbol	p		1448159						
ANR	1448380	Symbol	valid		1448159						
ANR	1448381	Symbol	result		1448159						
ANR	1448382	Symbol	* check		1448159						
ANR	1448383	Symbol	print_errors		1448159						
ANR	1448384	Symbol	* stack		1448159						
ANR	1448385	Symbol	* p		1448159						
ANR	1448386	Symbol	stack [ sp ] . line		1448159						
ANR	1448387	Symbol	* * p		1448159						
ANR	1448388	Symbol	addr		1448159						
ANR	1448389	Symbol	delspc		1448159						
ANR	1448390	Symbol	sp		1448159						
ANR	1448391	Function	rd_expr_and	612:0:14671:15296							
ANR	1448392	FunctionDef	"rd_expr_and (const char * * p , int * valid , int level , int * check , int print_errors)"		1448391	0					
ANR	1448393	CompoundStatement		615:0:14770:15296	1448391	0					
ANR	1448394	IdentifierDeclStatement	int result ;	616:2:14774:14784	1448391	0	True				
ANR	1448395	IdentifierDecl	result		1448391	0					
ANR	1448396	IdentifierDeclType	int		1448391	0					
ANR	1448397	Identifier	result		1448391	1					
ANR	1448398	IfStatement	if ( verbose >= 6 )		1448391	1					
ANR	1448399	Condition	verbose >= 6	617:6:14792:14803	1448391	0	True				
ANR	1448400	RelationalExpression	verbose >= 6		1448391	0		>=			
ANR	1448401	Identifier	verbose		1448391	0					
ANR	1448402	PrimaryExpression	6		1448391	1					
ANR	1448403	Statement	fprintf	618:4:14810:14816	1448391	1	True				
ANR	1448404	Statement	(	618:12:14818:14818	1448391	2	True				
ANR	1448405	Statement	stderr	618:13:14819:14824	1448391	3	True				
ANR	1448406	Statement	","	618:19:14825:14825	1448391	4	True				
ANR	1448407	Statement	"""%5d (0x%04x): Starting to read and expression """	618:21:14827:14874	1448391	5	True				
ANR	1448408	Statement	"""(string=%s).\\n"""	619:6:14882:14897	1448391	6	True				
ANR	1448409	Statement	","	619:22:14898:14898	1448391	7	True				
ANR	1448410	Statement	stack	619:24:14900:14904	1448391	8	True				
ANR	1448411	Statement	[	619:29:14905:14905	1448391	9	True				
ANR	1448412	Statement	sp	619:30:14906:14907	1448391	10	True				
ANR	1448413	Statement	]	619:32:14908:14908	1448391	11	True				
ANR	1448414	Statement	.	619:33:14909:14909	1448391	12	True				
ANR	1448415	Statement	line	619:34:14910:14913	1448391	13	True				
ANR	1448416	Statement	","	619:38:14914:14914	1448391	14	True				
ANR	1448417	Statement	addr	619:40:14916:14919	1448391	15	True				
ANR	1448418	Statement	","	619:44:14920:14920	1448391	16	True				
ANR	1448419	Statement	*	619:46:14922:14922	1448391	17	True				
ANR	1448420	Statement	p	619:47:14923:14923	1448391	18	True				
ANR	1448421	Statement	)	619:48:14924:14924	1448391	19	True				
ANR	1448422	ExpressionStatement		619:49:14925:14925	1448391	20	True				
ANR	1448423	ExpressionStatement	"result = rd_expr_equal ( p , valid , level , check , print_errors )"	620:2:14929:14990	1448391	21	True				
ANR	1448424	AssignmentExpression	"result = rd_expr_equal ( p , valid , level , check , print_errors )"		1448391	0		=			
ANR	1448425	Identifier	result		1448391	0					
ANR	1448426	CallExpression	"rd_expr_equal ( p , valid , level , check , print_errors )"		1448391	1					
ANR	1448427	Callee	rd_expr_equal		1448391	0					
ANR	1448428	Identifier	rd_expr_equal		1448391	0					
ANR	1448429	ArgumentList	p		1448391	1					
ANR	1448430	Argument	p		1448391	0					
ANR	1448431	Identifier	p		1448391	0					
ANR	1448432	Argument	valid		1448391	1					
ANR	1448433	Identifier	valid		1448391	0					
ANR	1448434	Argument	level		1448391	2					
ANR	1448435	Identifier	level		1448391	0					
ANR	1448436	Argument	check		1448391	3					
ANR	1448437	Identifier	check		1448391	0					
ANR	1448438	Argument	print_errors		1448391	4					
ANR	1448439	Identifier	print_errors		1448391	0					
ANR	1448440	ExpressionStatement	* p = delspc ( * p )	621:2:14994:15010	1448391	22	True				
ANR	1448441	AssignmentExpression	* p = delspc ( * p )		1448391	0		=			
ANR	1448442	UnaryOperationExpression	* p		1448391	0					
ANR	1448443	UnaryOperator	*		1448391	0					
ANR	1448444	Identifier	p		1448391	1					
ANR	1448445	CallExpression	delspc ( * p )		1448391	1					
ANR	1448446	Callee	delspc		1448391	0					
ANR	1448447	Identifier	delspc		1448391	0					
ANR	1448448	ArgumentList	* p		1448391	1					
ANR	1448449	Argument	* p		1448391	0					
ANR	1448450	UnaryOperationExpression	* p		1448391	0					
ANR	1448451	UnaryOperator	*		1448391	0					
ANR	1448452	Identifier	p		1448391	1					
ANR	1448453	IfStatement	if ( * * p == '&' )		1448391	23					
ANR	1448454	Condition	* * p == '&'	622:6:15018:15027	1448391	0	True				
ANR	1448455	EqualityExpression	* * p == '&'		1448391	0		==			
ANR	1448456	UnaryOperationExpression	* * p		1448391	0					
ANR	1448457	UnaryOperator	*		1448391	0					
ANR	1448458	UnaryOperationExpression	* p		1448391	1					
ANR	1448459	UnaryOperator	*		1448391	0					
ANR	1448460	Identifier	p		1448391	1					
ANR	1448461	PrimaryExpression	'&'		1448391	1					
ANR	1448462	CompoundStatement		9:4:263:263	1448391	1					
ANR	1448463	ExpressionStatement	* check = 0	624:6:15042:15052	1448391	0	True				
ANR	1448464	AssignmentExpression	* check = 0		1448391	0		=			
ANR	1448465	UnaryOperationExpression	* check		1448391	0					
ANR	1448466	UnaryOperator	*		1448391	0					
ANR	1448467	Identifier	check		1448391	1					
ANR	1448468	PrimaryExpression	0		1448391	1					
ANR	1448469	ExpressionStatement	( * p ) ++	625:6:15060:15066	1448391	1	True				
ANR	1448470	PostIncDecOperationExpression	( * p ) ++		1448391	0					
ANR	1448471	UnaryOperationExpression	* p		1448391	0					
ANR	1448472	UnaryOperator	*		1448391	0					
ANR	1448473	Identifier	p		1448391	1					
ANR	1448474	IncDec	++		1448391	1					
ANR	1448475	ExpressionStatement	"result &= rd_expr_and ( p , valid , level , check , print_errors )"	626:6:15074:15134	1448391	2	True				
ANR	1448476	AssignmentExpression	"result &= rd_expr_and ( p , valid , level , check , print_errors )"		1448391	0		&=			
ANR	1448477	Identifier	result		1448391	0					
ANR	1448478	CallExpression	"rd_expr_and ( p , valid , level , check , print_errors )"		1448391	1					
ANR	1448479	Callee	rd_expr_and		1448391	0					
ANR	1448480	Identifier	rd_expr_and		1448391	0					
ANR	1448481	ArgumentList	p		1448391	1					
ANR	1448482	Argument	p		1448391	0					
ANR	1448483	Identifier	p		1448391	0					
ANR	1448484	Argument	valid		1448391	1					
ANR	1448485	Identifier	valid		1448391	0					
ANR	1448486	Argument	level		1448391	2					
ANR	1448487	Identifier	level		1448391	0					
ANR	1448488	Argument	check		1448391	3					
ANR	1448489	Identifier	check		1448391	0					
ANR	1448490	Argument	print_errors		1448391	4					
ANR	1448491	Identifier	print_errors		1448391	0					
ANR	1448492	IfStatement	if ( verbose >= 7 )		1448391	24					
ANR	1448493	Condition	verbose >= 7	628:6:15148:15159	1448391	0	True				
ANR	1448494	RelationalExpression	verbose >= 7		1448391	0		>=			
ANR	1448495	Identifier	verbose		1448391	0					
ANR	1448496	PrimaryExpression	7		1448391	1					
ANR	1448497	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_expr_and returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	629:4:15166:15277	1448391	1	True				
ANR	1448498	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_expr_and returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1448391	0					
ANR	1448499	Callee	fprintf		1448391	0					
ANR	1448500	Identifier	fprintf		1448391	0					
ANR	1448501	ArgumentList	stderr		1448391	1					
ANR	1448502	Argument	stderr		1448391	0					
ANR	1448503	Identifier	stderr		1448391	0					
ANR	1448504	Argument	"""%5d (0x%04x): rd_expr_and returned %d (%04x).\\n"""		1448391	1					
ANR	1448505	PrimaryExpression	"""%5d (0x%04x): rd_expr_and returned %d (%04x).\\n"""		1448391	0					
ANR	1448506	Argument	stack [ sp ] . line		1448391	2					
ANR	1448507	MemberAccess	stack [ sp ] . line		1448391	0					
ANR	1448508	ArrayIndexing	stack [ sp ]		1448391	0					
ANR	1448509	Identifier	stack		1448391	0					
ANR	1448510	Identifier	sp		1448391	1					
ANR	1448511	Identifier	line		1448391	1					
ANR	1448512	Argument	addr		1448391	3					
ANR	1448513	Identifier	addr		1448391	0					
ANR	1448514	Argument	result		1448391	4					
ANR	1448515	Identifier	result		1448391	0					
ANR	1448516	Argument	result		1448391	5					
ANR	1448517	Identifier	result		1448391	0					
ANR	1448518	ReturnStatement	return result ;	631:2:15281:15294	1448391	25	True				
ANR	1448519	Identifier	result		1448391	0					
ANR	1448520	ReturnType	static int		1448391	1					
ANR	1448521	Identifier	rd_expr_and		1448391	2					
ANR	1448522	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1448391	3					
ANR	1448523	Parameter	const char * * p	613:13:14695:14708	1448391	0	True				
ANR	1448524	ParameterType	const char * *		1448391	0					
ANR	1448525	Identifier	p		1448391	1					
ANR	1448526	Parameter	int * valid	613:29:14711:14720	1448391	1	True				
ANR	1448527	ParameterType	int *		1448391	0					
ANR	1448528	Identifier	valid		1448391	1					
ANR	1448529	Parameter	int level	613:41:14723:14731	1448391	2	True				
ANR	1448530	ParameterType	int		1448391	0					
ANR	1448531	Identifier	level		1448391	1					
ANR	1448532	Parameter	int * check	613:52:14734:14743	1448391	3	True				
ANR	1448533	ParameterType	int *		1448391	0					
ANR	1448534	Identifier	check		1448391	1					
ANR	1448535	Parameter	int print_errors	614:6:14752:14767	1448391	4	True				
ANR	1448536	ParameterType	int		1448391	0					
ANR	1448537	Identifier	print_errors		1448391	1					
ANR	1448538	CFGEntryNode	ENTRY		1448391		True				
ANR	1448539	CFGExitNode	EXIT		1448391		True				
ANR	1448540	Symbol	* sp		1448391						
ANR	1448541	Symbol	stack		1448391						
ANR	1448542	Symbol	rd_expr_equal		1448391						
ANR	1448543	Symbol	level		1448391						
ANR	1448544	Symbol	check		1448391						
ANR	1448545	Symbol	stderr		1448391						
ANR	1448546	Symbol	verbose		1448391						
ANR	1448547	Symbol	p		1448391						
ANR	1448548	Symbol	valid		1448391						
ANR	1448549	Symbol	result		1448391						
ANR	1448550	Symbol	* check		1448391						
ANR	1448551	Symbol	print_errors		1448391						
ANR	1448552	Symbol	* stack		1448391						
ANR	1448553	Symbol	* p		1448391						
ANR	1448554	Symbol	stack [ sp ] . line		1448391						
ANR	1448555	Symbol	* * p		1448391						
ANR	1448556	Symbol	rd_expr_and		1448391						
ANR	1448557	Symbol	addr		1448391						
ANR	1448558	Symbol	delspc		1448391						
ANR	1448559	Symbol	sp		1448391						
ANR	1448560	Function	rd_expr_xor	634:0:15299:16075							
ANR	1448561	FunctionDef	"rd_expr_xor (const char * * p , int * valid , int level , int * check , int print_errors)"		1448560	0					
ANR	1448562	CompoundStatement		637:0:15398:16075	1448560	0					
ANR	1448563	IdentifierDeclStatement	int result ;	638:2:15402:15412	1448560	0	True				
ANR	1448564	IdentifierDecl	result		1448560	0					
ANR	1448565	IdentifierDeclType	int		1448560	0					
ANR	1448566	Identifier	result		1448560	1					
ANR	1448567	IfStatement	if ( verbose >= 6 )		1448560	1					
ANR	1448568	Condition	verbose >= 6	639:6:15420:15431	1448560	0	True				
ANR	1448569	RelationalExpression	verbose >= 6		1448560	0		>=			
ANR	1448570	Identifier	verbose		1448560	0					
ANR	1448571	PrimaryExpression	6		1448560	1					
ANR	1448572	Statement	fprintf	640:4:15438:15444	1448560	1	True				
ANR	1448573	Statement	(	640:12:15446:15446	1448560	2	True				
ANR	1448574	Statement	stderr	640:13:15447:15452	1448560	3	True				
ANR	1448575	Statement	","	640:19:15453:15453	1448560	4	True				
ANR	1448576	Statement	"""%5d (0x%04x): Starting to read xor expression """	640:21:15455:15502	1448560	5	True				
ANR	1448577	Statement	"""(string=%s).\\n"""	641:6:15510:15525	1448560	6	True				
ANR	1448578	Statement	","	641:22:15526:15526	1448560	7	True				
ANR	1448579	Statement	stack	641:24:15528:15532	1448560	8	True				
ANR	1448580	Statement	[	641:29:15533:15533	1448560	9	True				
ANR	1448581	Statement	sp	641:30:15534:15535	1448560	10	True				
ANR	1448582	Statement	]	641:32:15536:15536	1448560	11	True				
ANR	1448583	Statement	.	641:33:15537:15537	1448560	12	True				
ANR	1448584	Statement	line	641:34:15538:15541	1448560	13	True				
ANR	1448585	Statement	","	641:38:15542:15542	1448560	14	True				
ANR	1448586	Statement	addr	641:40:15544:15547	1448560	15	True				
ANR	1448587	Statement	","	641:44:15548:15548	1448560	16	True				
ANR	1448588	Statement	*	641:46:15550:15550	1448560	17	True				
ANR	1448589	Statement	p	641:47:15551:15551	1448560	18	True				
ANR	1448590	Statement	)	641:48:15552:15552	1448560	19	True				
ANR	1448591	ExpressionStatement		641:49:15553:15553	1448560	20	True				
ANR	1448592	ExpressionStatement	"result = rd_expr_and ( p , valid , level , check , print_errors )"	642:2:15557:15616	1448560	21	True				
ANR	1448593	AssignmentExpression	"result = rd_expr_and ( p , valid , level , check , print_errors )"		1448560	0		=			
ANR	1448594	Identifier	result		1448560	0					
ANR	1448595	CallExpression	"rd_expr_and ( p , valid , level , check , print_errors )"		1448560	1					
ANR	1448596	Callee	rd_expr_and		1448560	0					
ANR	1448597	Identifier	rd_expr_and		1448560	0					
ANR	1448598	ArgumentList	p		1448560	1					
ANR	1448599	Argument	p		1448560	0					
ANR	1448600	Identifier	p		1448560	0					
ANR	1448601	Argument	valid		1448560	1					
ANR	1448602	Identifier	valid		1448560	0					
ANR	1448603	Argument	level		1448560	2					
ANR	1448604	Identifier	level		1448560	0					
ANR	1448605	Argument	check		1448560	3					
ANR	1448606	Identifier	check		1448560	0					
ANR	1448607	Argument	print_errors		1448560	4					
ANR	1448608	Identifier	print_errors		1448560	0					
ANR	1448609	IfStatement	if ( verbose >= 7 )		1448560	22					
ANR	1448610	Condition	verbose >= 7	643:6:15624:15635	1448560	0	True				
ANR	1448611	RelationalExpression	verbose >= 7		1448560	0		>=			
ANR	1448612	Identifier	verbose		1448560	0					
ANR	1448613	PrimaryExpression	7		1448560	1					
ANR	1448614	Statement	fprintf	644:4:15642:15648	1448560	1	True				
ANR	1448615	Statement	(	644:12:15650:15650	1448560	23	True				
ANR	1448616	Statement	stderr	644:13:15651:15656	1448560	24	True				
ANR	1448617	Statement	","	644:19:15657:15657	1448560	25	True				
ANR	1448618	Statement	"""%5d (0x%04x): rd_expr_xor: rd_expr_and returned %d """	644:21:15659:15711	1448560	26	True				
ANR	1448619	Statement	"""(%04x).\\n"""	645:6:15719:15729	1448560	27	True				
ANR	1448620	Statement	","	645:17:15730:15730	1448560	28	True				
ANR	1448621	Statement	stack	645:19:15732:15736	1448560	29	True				
ANR	1448622	Statement	[	645:24:15737:15737	1448560	30	True				
ANR	1448623	Statement	sp	645:25:15738:15739	1448560	31	True				
ANR	1448624	Statement	]	645:27:15740:15740	1448560	32	True				
ANR	1448625	Statement	.	645:28:15741:15741	1448560	33	True				
ANR	1448626	Statement	line	645:29:15742:15745	1448560	34	True				
ANR	1448627	Statement	","	645:33:15746:15746	1448560	35	True				
ANR	1448628	Statement	addr	645:35:15748:15751	1448560	36	True				
ANR	1448629	Statement	","	645:39:15752:15752	1448560	37	True				
ANR	1448630	Statement	result	645:41:15754:15759	1448560	38	True				
ANR	1448631	Statement	","	645:47:15760:15760	1448560	39	True				
ANR	1448632	Statement	result	645:49:15762:15767	1448560	40	True				
ANR	1448633	Statement	)	645:55:15768:15768	1448560	41	True				
ANR	1448634	ExpressionStatement		645:56:15769:15769	1448560	42	True				
ANR	1448635	ExpressionStatement	* p = delspc ( * p )	646:2:15773:15789	1448560	43	True				
ANR	1448636	AssignmentExpression	* p = delspc ( * p )		1448560	0		=			
ANR	1448637	UnaryOperationExpression	* p		1448560	0					
ANR	1448638	UnaryOperator	*		1448560	0					
ANR	1448639	Identifier	p		1448560	1					
ANR	1448640	CallExpression	delspc ( * p )		1448560	1					
ANR	1448641	Callee	delspc		1448560	0					
ANR	1448642	Identifier	delspc		1448560	0					
ANR	1448643	ArgumentList	* p		1448560	1					
ANR	1448644	Argument	* p		1448560	0					
ANR	1448645	UnaryOperationExpression	* p		1448560	0					
ANR	1448646	UnaryOperator	*		1448560	0					
ANR	1448647	Identifier	p		1448560	1					
ANR	1448648	IfStatement	if ( * * p == '^' )		1448560	44					
ANR	1448649	Condition	* * p == '^'	647:6:15797:15806	1448560	0	True				
ANR	1448650	EqualityExpression	* * p == '^'		1448560	0		==			
ANR	1448651	UnaryOperationExpression	* * p		1448560	0					
ANR	1448652	UnaryOperator	*		1448560	0					
ANR	1448653	UnaryOperationExpression	* p		1448560	1					
ANR	1448654	UnaryOperator	*		1448560	0					
ANR	1448655	Identifier	p		1448560	1					
ANR	1448656	PrimaryExpression	'^'		1448560	1					
ANR	1448657	CompoundStatement		12:4:414:414	1448560	1					
ANR	1448658	ExpressionStatement	* check = 0	649:6:15821:15831	1448560	0	True				
ANR	1448659	AssignmentExpression	* check = 0		1448560	0		=			
ANR	1448660	UnaryOperationExpression	* check		1448560	0					
ANR	1448661	UnaryOperator	*		1448560	0					
ANR	1448662	Identifier	check		1448560	1					
ANR	1448663	PrimaryExpression	0		1448560	1					
ANR	1448664	ExpressionStatement	( * p ) ++	650:6:15839:15845	1448560	1	True				
ANR	1448665	PostIncDecOperationExpression	( * p ) ++		1448560	0					
ANR	1448666	UnaryOperationExpression	* p		1448560	0					
ANR	1448667	UnaryOperator	*		1448560	0					
ANR	1448668	Identifier	p		1448560	1					
ANR	1448669	IncDec	++		1448560	1					
ANR	1448670	ExpressionStatement	"result ^= rd_expr_xor ( p , valid , level , check , print_errors )"	651:6:15853:15913	1448560	2	True				
ANR	1448671	AssignmentExpression	"result ^= rd_expr_xor ( p , valid , level , check , print_errors )"		1448560	0		^=			
ANR	1448672	Identifier	result		1448560	0					
ANR	1448673	CallExpression	"rd_expr_xor ( p , valid , level , check , print_errors )"		1448560	1					
ANR	1448674	Callee	rd_expr_xor		1448560	0					
ANR	1448675	Identifier	rd_expr_xor		1448560	0					
ANR	1448676	ArgumentList	p		1448560	1					
ANR	1448677	Argument	p		1448560	0					
ANR	1448678	Identifier	p		1448560	0					
ANR	1448679	Argument	valid		1448560	1					
ANR	1448680	Identifier	valid		1448560	0					
ANR	1448681	Argument	level		1448560	2					
ANR	1448682	Identifier	level		1448560	0					
ANR	1448683	Argument	check		1448560	3					
ANR	1448684	Identifier	check		1448560	0					
ANR	1448685	Argument	print_errors		1448560	4					
ANR	1448686	Identifier	print_errors		1448560	0					
ANR	1448687	IfStatement	if ( verbose >= 7 )		1448560	45					
ANR	1448688	Condition	verbose >= 7	653:6:15927:15938	1448560	0	True				
ANR	1448689	RelationalExpression	verbose >= 7		1448560	0		>=			
ANR	1448690	Identifier	verbose		1448560	0					
ANR	1448691	PrimaryExpression	7		1448560	1					
ANR	1448692	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_expr_xor returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	654:4:15945:16056	1448560	1	True				
ANR	1448693	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_expr_xor returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1448560	0					
ANR	1448694	Callee	fprintf		1448560	0					
ANR	1448695	Identifier	fprintf		1448560	0					
ANR	1448696	ArgumentList	stderr		1448560	1					
ANR	1448697	Argument	stderr		1448560	0					
ANR	1448698	Identifier	stderr		1448560	0					
ANR	1448699	Argument	"""%5d (0x%04x): rd_expr_xor returned %d (%04x).\\n"""		1448560	1					
ANR	1448700	PrimaryExpression	"""%5d (0x%04x): rd_expr_xor returned %d (%04x).\\n"""		1448560	0					
ANR	1448701	Argument	stack [ sp ] . line		1448560	2					
ANR	1448702	MemberAccess	stack [ sp ] . line		1448560	0					
ANR	1448703	ArrayIndexing	stack [ sp ]		1448560	0					
ANR	1448704	Identifier	stack		1448560	0					
ANR	1448705	Identifier	sp		1448560	1					
ANR	1448706	Identifier	line		1448560	1					
ANR	1448707	Argument	addr		1448560	3					
ANR	1448708	Identifier	addr		1448560	0					
ANR	1448709	Argument	result		1448560	4					
ANR	1448710	Identifier	result		1448560	0					
ANR	1448711	Argument	result		1448560	5					
ANR	1448712	Identifier	result		1448560	0					
ANR	1448713	ReturnStatement	return result ;	656:2:16060:16073	1448560	46	True				
ANR	1448714	Identifier	result		1448560	0					
ANR	1448715	ReturnType	static int		1448560	1					
ANR	1448716	Identifier	rd_expr_xor		1448560	2					
ANR	1448717	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1448560	3					
ANR	1448718	Parameter	const char * * p	635:13:15323:15336	1448560	0	True				
ANR	1448719	ParameterType	const char * *		1448560	0					
ANR	1448720	Identifier	p		1448560	1					
ANR	1448721	Parameter	int * valid	635:29:15339:15348	1448560	1	True				
ANR	1448722	ParameterType	int *		1448560	0					
ANR	1448723	Identifier	valid		1448560	1					
ANR	1448724	Parameter	int level	635:41:15351:15359	1448560	2	True				
ANR	1448725	ParameterType	int		1448560	0					
ANR	1448726	Identifier	level		1448560	1					
ANR	1448727	Parameter	int * check	635:52:15362:15371	1448560	3	True				
ANR	1448728	ParameterType	int *		1448560	0					
ANR	1448729	Identifier	check		1448560	1					
ANR	1448730	Parameter	int print_errors	636:6:15380:15395	1448560	4	True				
ANR	1448731	ParameterType	int		1448560	0					
ANR	1448732	Identifier	print_errors		1448560	1					
ANR	1448733	CFGEntryNode	ENTRY		1448560		True				
ANR	1448734	CFGExitNode	EXIT		1448560		True				
ANR	1448735	Symbol	* sp		1448560						
ANR	1448736	Symbol	stack		1448560						
ANR	1448737	Symbol	level		1448560						
ANR	1448738	Symbol	check		1448560						
ANR	1448739	Symbol	stderr		1448560						
ANR	1448740	Symbol	verbose		1448560						
ANR	1448741	Symbol	p		1448560						
ANR	1448742	Symbol	valid		1448560						
ANR	1448743	Symbol	result		1448560						
ANR	1448744	Symbol	* check		1448560						
ANR	1448745	Symbol	print_errors		1448560						
ANR	1448746	Symbol	* stack		1448560						
ANR	1448747	Symbol	* p		1448560						
ANR	1448748	Symbol	stack [ sp ] . line		1448560						
ANR	1448749	Symbol	rd_expr_and		1448560						
ANR	1448750	Symbol	* * p		1448560						
ANR	1448751	Symbol	addr		1448560						
ANR	1448752	Symbol	delspc		1448560						
ANR	1448753	Symbol	sp		1448560						
ANR	1448754	Symbol	rd_expr_xor		1448560						
ANR	1448755	Function	rd_expr_or	659:0:16078:16848							
ANR	1448756	FunctionDef	"rd_expr_or (const char * * p , int * valid , int level , int * check , int print_errors)"		1448755	0					
ANR	1448757	CompoundStatement		662:0:16175:16848	1448755	0					
ANR	1448758	IdentifierDeclStatement	int result ;	663:2:16179:16189	1448755	0	True				
ANR	1448759	IdentifierDecl	result		1448755	0					
ANR	1448760	IdentifierDeclType	int		1448755	0					
ANR	1448761	Identifier	result		1448755	1					
ANR	1448762	IfStatement	if ( verbose >= 6 )		1448755	1					
ANR	1448763	Condition	verbose >= 6	664:6:16197:16208	1448755	0	True				
ANR	1448764	RelationalExpression	verbose >= 6		1448755	0		>=			
ANR	1448765	Identifier	verbose		1448755	0					
ANR	1448766	PrimaryExpression	6		1448755	1					
ANR	1448767	Statement	fprintf	665:4:16215:16221	1448755	1	True				
ANR	1448768	Statement	(	665:12:16223:16223	1448755	2	True				
ANR	1448769	Statement	stderr	665:13:16224:16229	1448755	3	True				
ANR	1448770	Statement	","	665:19:16230:16230	1448755	4	True				
ANR	1448771	Statement	"""%5d (0x%04x): Starting to read or expression """	665:21:16232:16278	1448755	5	True				
ANR	1448772	Statement	"""(string=%s).\\n"""	666:6:16286:16301	1448755	6	True				
ANR	1448773	Statement	","	666:22:16302:16302	1448755	7	True				
ANR	1448774	Statement	stack	666:24:16304:16308	1448755	8	True				
ANR	1448775	Statement	[	666:29:16309:16309	1448755	9	True				
ANR	1448776	Statement	sp	666:30:16310:16311	1448755	10	True				
ANR	1448777	Statement	]	666:32:16312:16312	1448755	11	True				
ANR	1448778	Statement	.	666:33:16313:16313	1448755	12	True				
ANR	1448779	Statement	line	666:34:16314:16317	1448755	13	True				
ANR	1448780	Statement	","	666:38:16318:16318	1448755	14	True				
ANR	1448781	Statement	addr	666:40:16320:16323	1448755	15	True				
ANR	1448782	Statement	","	666:44:16324:16324	1448755	16	True				
ANR	1448783	Statement	*	666:46:16326:16326	1448755	17	True				
ANR	1448784	Statement	p	666:47:16327:16327	1448755	18	True				
ANR	1448785	Statement	)	666:48:16328:16328	1448755	19	True				
ANR	1448786	ExpressionStatement		666:49:16329:16329	1448755	20	True				
ANR	1448787	ExpressionStatement	"result = rd_expr_xor ( p , valid , level , check , print_errors )"	667:2:16333:16392	1448755	21	True				
ANR	1448788	AssignmentExpression	"result = rd_expr_xor ( p , valid , level , check , print_errors )"		1448755	0		=			
ANR	1448789	Identifier	result		1448755	0					
ANR	1448790	CallExpression	"rd_expr_xor ( p , valid , level , check , print_errors )"		1448755	1					
ANR	1448791	Callee	rd_expr_xor		1448755	0					
ANR	1448792	Identifier	rd_expr_xor		1448755	0					
ANR	1448793	ArgumentList	p		1448755	1					
ANR	1448794	Argument	p		1448755	0					
ANR	1448795	Identifier	p		1448755	0					
ANR	1448796	Argument	valid		1448755	1					
ANR	1448797	Identifier	valid		1448755	0					
ANR	1448798	Argument	level		1448755	2					
ANR	1448799	Identifier	level		1448755	0					
ANR	1448800	Argument	check		1448755	3					
ANR	1448801	Identifier	check		1448755	0					
ANR	1448802	Argument	print_errors		1448755	4					
ANR	1448803	Identifier	print_errors		1448755	0					
ANR	1448804	IfStatement	if ( verbose >= 7 )		1448755	22					
ANR	1448805	Condition	verbose >= 7	668:6:16400:16411	1448755	0	True				
ANR	1448806	RelationalExpression	verbose >= 7		1448755	0		>=			
ANR	1448807	Identifier	verbose		1448755	0					
ANR	1448808	PrimaryExpression	7		1448755	1					
ANR	1448809	Statement	fprintf	669:4:16418:16424	1448755	1	True				
ANR	1448810	Statement	(	669:12:16426:16426	1448755	23	True				
ANR	1448811	Statement	stderr	669:13:16427:16432	1448755	24	True				
ANR	1448812	Statement	","	669:19:16433:16433	1448755	25	True				
ANR	1448813	Statement	"""%5d (0x%04x): rd_expr_or: rd_expr_xor returned %d """	669:21:16435:16486	1448755	26	True				
ANR	1448814	Statement	"""(%04x).\\n"""	670:6:16494:16504	1448755	27	True				
ANR	1448815	Statement	","	670:17:16505:16505	1448755	28	True				
ANR	1448816	Statement	stack	670:19:16507:16511	1448755	29	True				
ANR	1448817	Statement	[	670:24:16512:16512	1448755	30	True				
ANR	1448818	Statement	sp	670:25:16513:16514	1448755	31	True				
ANR	1448819	Statement	]	670:27:16515:16515	1448755	32	True				
ANR	1448820	Statement	.	670:28:16516:16516	1448755	33	True				
ANR	1448821	Statement	line	670:29:16517:16520	1448755	34	True				
ANR	1448822	Statement	","	670:33:16521:16521	1448755	35	True				
ANR	1448823	Statement	addr	670:35:16523:16526	1448755	36	True				
ANR	1448824	Statement	","	670:39:16527:16527	1448755	37	True				
ANR	1448825	Statement	result	670:41:16529:16534	1448755	38	True				
ANR	1448826	Statement	","	670:47:16535:16535	1448755	39	True				
ANR	1448827	Statement	result	670:49:16537:16542	1448755	40	True				
ANR	1448828	Statement	)	670:55:16543:16543	1448755	41	True				
ANR	1448829	ExpressionStatement		670:56:16544:16544	1448755	42	True				
ANR	1448830	ExpressionStatement	* p = delspc ( * p )	671:2:16548:16564	1448755	43	True				
ANR	1448831	AssignmentExpression	* p = delspc ( * p )		1448755	0		=			
ANR	1448832	UnaryOperationExpression	* p		1448755	0					
ANR	1448833	UnaryOperator	*		1448755	0					
ANR	1448834	Identifier	p		1448755	1					
ANR	1448835	CallExpression	delspc ( * p )		1448755	1					
ANR	1448836	Callee	delspc		1448755	0					
ANR	1448837	Identifier	delspc		1448755	0					
ANR	1448838	ArgumentList	* p		1448755	1					
ANR	1448839	Argument	* p		1448755	0					
ANR	1448840	UnaryOperationExpression	* p		1448755	0					
ANR	1448841	UnaryOperator	*		1448755	0					
ANR	1448842	Identifier	p		1448755	1					
ANR	1448843	IfStatement	if ( * * p == '|' )		1448755	44					
ANR	1448844	Condition	* * p == '|'	672:6:16572:16581	1448755	0	True				
ANR	1448845	EqualityExpression	* * p == '|'		1448755	0		==			
ANR	1448846	UnaryOperationExpression	* * p		1448755	0					
ANR	1448847	UnaryOperator	*		1448755	0					
ANR	1448848	UnaryOperationExpression	* p		1448755	1					
ANR	1448849	UnaryOperator	*		1448755	0					
ANR	1448850	Identifier	p		1448755	1					
ANR	1448851	PrimaryExpression	'|'		1448755	1					
ANR	1448852	CompoundStatement		12:4:412:412	1448755	1					
ANR	1448853	ExpressionStatement	* check = 0	674:6:16596:16606	1448755	0	True				
ANR	1448854	AssignmentExpression	* check = 0		1448755	0		=			
ANR	1448855	UnaryOperationExpression	* check		1448755	0					
ANR	1448856	UnaryOperator	*		1448755	0					
ANR	1448857	Identifier	check		1448755	1					
ANR	1448858	PrimaryExpression	0		1448755	1					
ANR	1448859	ExpressionStatement	( * p ) ++	675:6:16614:16620	1448755	1	True				
ANR	1448860	PostIncDecOperationExpression	( * p ) ++		1448755	0					
ANR	1448861	UnaryOperationExpression	* p		1448755	0					
ANR	1448862	UnaryOperator	*		1448755	0					
ANR	1448863	Identifier	p		1448755	1					
ANR	1448864	IncDec	++		1448755	1					
ANR	1448865	ExpressionStatement	"result |= rd_expr_or ( p , valid , level , check , print_errors )"	676:6:16628:16687	1448755	2	True				
ANR	1448866	AssignmentExpression	"result |= rd_expr_or ( p , valid , level , check , print_errors )"		1448755	0		|=			
ANR	1448867	Identifier	result		1448755	0					
ANR	1448868	CallExpression	"rd_expr_or ( p , valid , level , check , print_errors )"		1448755	1					
ANR	1448869	Callee	rd_expr_or		1448755	0					
ANR	1448870	Identifier	rd_expr_or		1448755	0					
ANR	1448871	ArgumentList	p		1448755	1					
ANR	1448872	Argument	p		1448755	0					
ANR	1448873	Identifier	p		1448755	0					
ANR	1448874	Argument	valid		1448755	1					
ANR	1448875	Identifier	valid		1448755	0					
ANR	1448876	Argument	level		1448755	2					
ANR	1448877	Identifier	level		1448755	0					
ANR	1448878	Argument	check		1448755	3					
ANR	1448879	Identifier	check		1448755	0					
ANR	1448880	Argument	print_errors		1448755	4					
ANR	1448881	Identifier	print_errors		1448755	0					
ANR	1448882	IfStatement	if ( verbose >= 7 )		1448755	45					
ANR	1448883	Condition	verbose >= 7	678:6:16701:16712	1448755	0	True				
ANR	1448884	RelationalExpression	verbose >= 7		1448755	0		>=			
ANR	1448885	Identifier	verbose		1448755	0					
ANR	1448886	PrimaryExpression	7		1448755	1					
ANR	1448887	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_expr_or returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	679:4:16719:16829	1448755	1	True				
ANR	1448888	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_expr_or returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1448755	0					
ANR	1448889	Callee	fprintf		1448755	0					
ANR	1448890	Identifier	fprintf		1448755	0					
ANR	1448891	ArgumentList	stderr		1448755	1					
ANR	1448892	Argument	stderr		1448755	0					
ANR	1448893	Identifier	stderr		1448755	0					
ANR	1448894	Argument	"""%5d (0x%04x): rd_expr_or returned %d (%04x).\\n"""		1448755	1					
ANR	1448895	PrimaryExpression	"""%5d (0x%04x): rd_expr_or returned %d (%04x).\\n"""		1448755	0					
ANR	1448896	Argument	stack [ sp ] . line		1448755	2					
ANR	1448897	MemberAccess	stack [ sp ] . line		1448755	0					
ANR	1448898	ArrayIndexing	stack [ sp ]		1448755	0					
ANR	1448899	Identifier	stack		1448755	0					
ANR	1448900	Identifier	sp		1448755	1					
ANR	1448901	Identifier	line		1448755	1					
ANR	1448902	Argument	addr		1448755	3					
ANR	1448903	Identifier	addr		1448755	0					
ANR	1448904	Argument	result		1448755	4					
ANR	1448905	Identifier	result		1448755	0					
ANR	1448906	Argument	result		1448755	5					
ANR	1448907	Identifier	result		1448755	0					
ANR	1448908	ReturnStatement	return result ;	681:2:16833:16846	1448755	46	True				
ANR	1448909	Identifier	result		1448755	0					
ANR	1448910	ReturnType	static int		1448755	1					
ANR	1448911	Identifier	rd_expr_or		1448755	2					
ANR	1448912	ParameterList	"const char * * p , int * valid , int level , int * check , int print_errors"		1448755	3					
ANR	1448913	Parameter	const char * * p	660:12:16101:16114	1448755	0	True				
ANR	1448914	ParameterType	const char * *		1448755	0					
ANR	1448915	Identifier	p		1448755	1					
ANR	1448916	Parameter	int * valid	660:28:16117:16126	1448755	1	True				
ANR	1448917	ParameterType	int *		1448755	0					
ANR	1448918	Identifier	valid		1448755	1					
ANR	1448919	Parameter	int level	660:40:16129:16137	1448755	2	True				
ANR	1448920	ParameterType	int		1448755	0					
ANR	1448921	Identifier	level		1448755	1					
ANR	1448922	Parameter	int * check	660:51:16140:16149	1448755	3	True				
ANR	1448923	ParameterType	int *		1448755	0					
ANR	1448924	Identifier	check		1448755	1					
ANR	1448925	Parameter	int print_errors	661:5:16157:16172	1448755	4	True				
ANR	1448926	ParameterType	int		1448755	0					
ANR	1448927	Identifier	print_errors		1448755	1					
ANR	1448928	CFGEntryNode	ENTRY		1448755		True				
ANR	1448929	CFGExitNode	EXIT		1448755		True				
ANR	1448930	Symbol	* sp		1448755						
ANR	1448931	Symbol	stack		1448755						
ANR	1448932	Symbol	level		1448755						
ANR	1448933	Symbol	check		1448755						
ANR	1448934	Symbol	stderr		1448755						
ANR	1448935	Symbol	verbose		1448755						
ANR	1448936	Symbol	p		1448755						
ANR	1448937	Symbol	valid		1448755						
ANR	1448938	Symbol	result		1448755						
ANR	1448939	Symbol	* check		1448755						
ANR	1448940	Symbol	print_errors		1448755						
ANR	1448941	Symbol	rd_expr_or		1448755						
ANR	1448942	Symbol	* stack		1448755						
ANR	1448943	Symbol	* p		1448755						
ANR	1448944	Symbol	stack [ sp ] . line		1448755						
ANR	1448945	Symbol	* * p		1448755						
ANR	1448946	Symbol	addr		1448755						
ANR	1448947	Symbol	delspc		1448755						
ANR	1448948	Symbol	sp		1448755						
ANR	1448949	Symbol	rd_expr_xor		1448755						
ANR	1448950	Function	do_rd_expr	684:0:16851:18393							
ANR	1448951	FunctionDef	"do_rd_expr (const char * * p , char delimiter , int * valid , int level , int * check , int print_errors)"		1448950	0					
ANR	1448952	CompoundStatement		687:0:16964:18393	1448950	0					
ANR	1448953	IdentifierDeclStatement	int result = 0 ;	689:2:17023:17037	1448950	0	True				
ANR	1448954	IdentifierDecl	result = 0		1448950	0					
ANR	1448955	IdentifierDeclType	int		1448950	0					
ANR	1448956	Identifier	result		1448950	1					
ANR	1448957	AssignmentExpression	result = 0		1448950	2		=			
ANR	1448958	Identifier	result		1448950	0					
ANR	1448959	PrimaryExpression	0		1448950	1					
ANR	1448960	IfStatement	if ( verbose >= 6 )		1448950	1					
ANR	1448961	Condition	verbose >= 6	690:6:17045:17056	1448950	0	True				
ANR	1448962	RelationalExpression	verbose >= 6		1448950	0		>=			
ANR	1448963	Identifier	verbose		1448950	0					
ANR	1448964	PrimaryExpression	6		1448950	1					
ANR	1448965	Statement	fprintf	691:4:17063:17069	1448950	1	True				
ANR	1448966	Statement	(	691:12:17071:17071	1448950	2	True				
ANR	1448967	Statement	stderr	691:13:17072:17077	1448950	3	True				
ANR	1448968	Statement	","	691:19:17078:17078	1448950	4	True				
ANR	1448969	Statement	"""%5d (0x%04x): Starting to read expression """	692:6:17086:17129	1448950	5	True				
ANR	1448970	Statement	"""(string=%s, delimiter=%c).\\n"""	693:6:17137:17166	1448950	6	True				
ANR	1448971	Statement	","	693:36:17167:17167	1448950	7	True				
ANR	1448972	Statement	stack	693:38:17169:17173	1448950	8	True				
ANR	1448973	Statement	[	693:43:17174:17174	1448950	9	True				
ANR	1448974	Statement	sp	693:44:17175:17176	1448950	10	True				
ANR	1448975	Statement	]	693:46:17177:17177	1448950	11	True				
ANR	1448976	Statement	.	693:47:17178:17178	1448950	12	True				
ANR	1448977	Statement	line	693:48:17179:17182	1448950	13	True				
ANR	1448978	Statement	","	693:52:17183:17183	1448950	14	True				
ANR	1448979	Statement	addr	693:54:17185:17188	1448950	15	True				
ANR	1448980	Statement	","	693:58:17189:17189	1448950	16	True				
ANR	1448981	Statement	*	693:60:17191:17191	1448950	17	True				
ANR	1448982	Statement	p	693:61:17192:17192	1448950	18	True				
ANR	1448983	Statement	","	693:62:17193:17193	1448950	19	True				
ANR	1448984	Statement	delimiter	694:6:17201:17209	1448950	20	True				
ANR	1448985	Statement	?	694:16:17211:17211	1448950	21	True				
ANR	1448986	Label	delimiter :	694:18:17213:17223	1448950	22	True				
ANR	1448987	Identifier	delimiter		1448950	0					
ANR	1448988	Statement	' '	694:30:17225:17227	1448950	23	True				
ANR	1448989	Statement	)	694:33:17228:17228	1448950	24	True				
ANR	1448990	ExpressionStatement		694:34:17229:17229	1448950	25	True				
ANR	1448991	ExpressionStatement	* p = delspc ( * p )	695:2:17233:17249	1448950	26	True				
ANR	1448992	AssignmentExpression	* p = delspc ( * p )		1448950	0		=			
ANR	1448993	UnaryOperationExpression	* p		1448950	0					
ANR	1448994	UnaryOperator	*		1448950	0					
ANR	1448995	Identifier	p		1448950	1					
ANR	1448996	CallExpression	delspc ( * p )		1448950	1					
ANR	1448997	Callee	delspc		1448950	0					
ANR	1448998	Identifier	delspc		1448950	0					
ANR	1448999	ArgumentList	* p		1448950	1					
ANR	1449000	Argument	* p		1448950	0					
ANR	1449001	UnaryOperationExpression	* p		1448950	0					
ANR	1449002	UnaryOperator	*		1448950	0					
ANR	1449003	Identifier	p		1448950	1					
ANR	1449004	IfStatement	if ( ! * * p || * * p == delimiter )		1448950	27					
ANR	1449005	Condition	! * * p || * * p == delimiter	696:6:17257:17280	1448950	0	True				
ANR	1449006	OrExpression	! * * p || * * p == delimiter		1448950	0		||			
ANR	1449007	UnaryOperationExpression	! * * p		1448950	0					
ANR	1449008	UnaryOperator	!		1448950	0					
ANR	1449009	UnaryOperationExpression	* * p		1448950	1					
ANR	1449010	UnaryOperator	*		1448950	0					
ANR	1449011	UnaryOperationExpression	* p		1448950	1					
ANR	1449012	UnaryOperator	*		1448950	0					
ANR	1449013	Identifier	p		1448950	1					
ANR	1449014	EqualityExpression	* * p == delimiter		1448950	1		==			
ANR	1449015	UnaryOperationExpression	* * p		1448950	0					
ANR	1449016	UnaryOperator	*		1448950	0					
ANR	1449017	UnaryOperationExpression	* p		1448950	1					
ANR	1449018	UnaryOperator	*		1448950	0					
ANR	1449019	Identifier	p		1448950	1					
ANR	1449020	Identifier	delimiter		1448950	1					
ANR	1449021	CompoundStatement		11:4:322:322	1448950	1					
ANR	1449022	IfStatement	if ( valid )		1448950	0					
ANR	1449023	Condition	valid	698:10:17299:17303	1448950	0	True				
ANR	1449024	Identifier	valid		1448950	0					
ANR	1449025	ExpressionStatement	* valid = 0	699:1:17307:17317	1448950	1	True				
ANR	1449026	AssignmentExpression	* valid = 0		1448950	0		=			
ANR	1449027	UnaryOperationExpression	* valid		1448950	0					
ANR	1449028	UnaryOperator	*		1448950	0					
ANR	1449029	Identifier	valid		1448950	1					
ANR	1449030	PrimaryExpression	0		1448950	1					
ANR	1449031	ElseStatement	else		1448950	0					
ANR	1449032	IfStatement	if ( print_errors )		1448950	0					
ANR	1449033	Condition	print_errors	700:15:17334:17345	1448950	0	True				
ANR	1449034	Identifier	print_errors		1448950	0					
ANR	1449035	ExpressionStatement	"printerr ( 1 , ""expression expected (not %s)\\n"" , * p )"	701:1:17349:17399	1448950	1	True				
ANR	1449036	CallExpression	"printerr ( 1 , ""expression expected (not %s)\\n"" , * p )"		1448950	0					
ANR	1449037	Callee	printerr		1448950	0					
ANR	1449038	Identifier	printerr		1448950	0					
ANR	1449039	ArgumentList	1		1448950	1					
ANR	1449040	Argument	1		1448950	0					
ANR	1449041	PrimaryExpression	1		1448950	0					
ANR	1449042	Argument	"""expression expected (not %s)\\n"""		1448950	1					
ANR	1449043	PrimaryExpression	"""expression expected (not %s)\\n"""		1448950	0					
ANR	1449044	Argument	* p		1448950	2					
ANR	1449045	UnaryOperationExpression	* p		1448950	0					
ANR	1449046	UnaryOperator	*		1448950	0					
ANR	1449047	Identifier	p		1448950	1					
ANR	1449048	ReturnStatement	return 0 ;	702:6:17407:17415	1448950	1	True				
ANR	1449049	PrimaryExpression	0		1448950	0					
ANR	1449050	ExpressionStatement	"result = rd_expr_or ( p , valid , level , check , print_errors )"	704:2:17425:17483	1448950	28	True				
ANR	1449051	AssignmentExpression	"result = rd_expr_or ( p , valid , level , check , print_errors )"		1448950	0		=			
ANR	1449052	Identifier	result		1448950	0					
ANR	1449053	CallExpression	"rd_expr_or ( p , valid , level , check , print_errors )"		1448950	1					
ANR	1449054	Callee	rd_expr_or		1448950	0					
ANR	1449055	Identifier	rd_expr_or		1448950	0					
ANR	1449056	ArgumentList	p		1448950	1					
ANR	1449057	Argument	p		1448950	0					
ANR	1449058	Identifier	p		1448950	0					
ANR	1449059	Argument	valid		1448950	1					
ANR	1449060	Identifier	valid		1448950	0					
ANR	1449061	Argument	level		1448950	2					
ANR	1449062	Identifier	level		1448950	0					
ANR	1449063	Argument	check		1448950	3					
ANR	1449064	Identifier	check		1448950	0					
ANR	1449065	Argument	print_errors		1448950	4					
ANR	1449066	Identifier	print_errors		1448950	0					
ANR	1449067	ExpressionStatement	* p = delspc ( * p )	705:2:17487:17503	1448950	29	True				
ANR	1449068	AssignmentExpression	* p = delspc ( * p )		1448950	0		=			
ANR	1449069	UnaryOperationExpression	* p		1448950	0					
ANR	1449070	UnaryOperator	*		1448950	0					
ANR	1449071	Identifier	p		1448950	1					
ANR	1449072	CallExpression	delspc ( * p )		1448950	1					
ANR	1449073	Callee	delspc		1448950	0					
ANR	1449074	Identifier	delspc		1448950	0					
ANR	1449075	ArgumentList	* p		1448950	1					
ANR	1449076	Argument	* p		1448950	0					
ANR	1449077	UnaryOperationExpression	* p		1448950	0					
ANR	1449078	UnaryOperator	*		1448950	0					
ANR	1449079	Identifier	p		1448950	1					
ANR	1449080	IfStatement	if ( * * p == '?' )		1448950	30					
ANR	1449081	Condition	* * p == '?'	706:6:17511:17520	1448950	0	True				
ANR	1449082	EqualityExpression	* * p == '?'		1448950	0		==			
ANR	1449083	UnaryOperationExpression	* * p		1448950	0					
ANR	1449084	UnaryOperator	*		1448950	0					
ANR	1449085	UnaryOperationExpression	* p		1448950	1					
ANR	1449086	UnaryOperator	*		1448950	0					
ANR	1449087	Identifier	p		1448950	1					
ANR	1449088	PrimaryExpression	'?'		1448950	1					
ANR	1449089	CompoundStatement		21:4:562:562	1448950	1					
ANR	1449090	ExpressionStatement	* check = 0	708:6:17535:17545	1448950	0	True				
ANR	1449091	AssignmentExpression	* check = 0		1448950	0		=			
ANR	1449092	UnaryOperationExpression	* check		1448950	0					
ANR	1449093	UnaryOperator	*		1448950	0					
ANR	1449094	Identifier	check		1448950	1					
ANR	1449095	PrimaryExpression	0		1448950	1					
ANR	1449096	ExpressionStatement	( * p ) ++	709:6:17553:17559	1448950	1	True				
ANR	1449097	PostIncDecOperationExpression	( * p ) ++		1448950	0					
ANR	1449098	UnaryOperationExpression	* p		1448950	0					
ANR	1449099	UnaryOperator	*		1448950	0					
ANR	1449100	Identifier	p		1448950	1					
ANR	1449101	IncDec	++		1448950	1					
ANR	1449102	IfStatement	if ( result )		1448950	2					
ANR	1449103	Condition	result	710:10:17571:17576	1448950	0	True				
ANR	1449104	Identifier	result		1448950	0					
ANR	1449105	CompoundStatement		25:1:615:615	1448950	1					
ANR	1449106	ExpressionStatement	"result = do_rd_expr ( p , ':' , valid , level , check , print_errors )"	712:3:17585:17648	1448950	0	True				
ANR	1449107	AssignmentExpression	"result = do_rd_expr ( p , ':' , valid , level , check , print_errors )"		1448950	0		=			
ANR	1449108	Identifier	result		1448950	0					
ANR	1449109	CallExpression	"do_rd_expr ( p , ':' , valid , level , check , print_errors )"		1448950	1					
ANR	1449110	Callee	do_rd_expr		1448950	0					
ANR	1449111	Identifier	do_rd_expr		1448950	0					
ANR	1449112	ArgumentList	p		1448950	1					
ANR	1449113	Argument	p		1448950	0					
ANR	1449114	Identifier	p		1448950	0					
ANR	1449115	Argument	':'		1448950	1					
ANR	1449116	PrimaryExpression	':'		1448950	0					
ANR	1449117	Argument	valid		1448950	2					
ANR	1449118	Identifier	valid		1448950	0					
ANR	1449119	Argument	level		1448950	3					
ANR	1449120	Identifier	level		1448950	0					
ANR	1449121	Argument	check		1448950	4					
ANR	1449122	Identifier	check		1448950	0					
ANR	1449123	Argument	print_errors		1448950	5					
ANR	1449124	Identifier	print_errors		1448950	0					
ANR	1449125	IfStatement	if ( * * p )		1448950	1					
ANR	1449126	Condition	* * p	713:7:17657:17659	1448950	0	True				
ANR	1449127	UnaryOperationExpression	* * p		1448950	0					
ANR	1449128	UnaryOperator	*		1448950	0					
ANR	1449129	UnaryOperationExpression	* p		1448950	1					
ANR	1449130	UnaryOperator	*		1448950	0					
ANR	1449131	Identifier	p		1448950	1					
ANR	1449132	ExpressionStatement	( * p ) ++	714:5:17667:17673	1448950	1	True				
ANR	1449133	PostIncDecOperationExpression	( * p ) ++		1448950	0					
ANR	1449134	UnaryOperationExpression	* p		1448950	0					
ANR	1449135	UnaryOperator	*		1448950	0					
ANR	1449136	Identifier	p		1448950	1					
ANR	1449137	IncDec	++		1448950	1					
ANR	1449138	ExpressionStatement	"do_rd_expr ( p , delimiter , valid , level , check , print_errors )"	715:3:17678:17738	1448950	2	True				
ANR	1449139	CallExpression	"do_rd_expr ( p , delimiter , valid , level , check , print_errors )"		1448950	0					
ANR	1449140	Callee	do_rd_expr		1448950	0					
ANR	1449141	Identifier	do_rd_expr		1448950	0					
ANR	1449142	ArgumentList	p		1448950	1					
ANR	1449143	Argument	p		1448950	0					
ANR	1449144	Identifier	p		1448950	0					
ANR	1449145	Argument	delimiter		1448950	1					
ANR	1449146	Identifier	delimiter		1448950	0					
ANR	1449147	Argument	valid		1448950	2					
ANR	1449148	Identifier	valid		1448950	0					
ANR	1449149	Argument	level		1448950	3					
ANR	1449150	Identifier	level		1448950	0					
ANR	1449151	Argument	check		1448950	4					
ANR	1449152	Identifier	check		1448950	0					
ANR	1449153	Argument	print_errors		1448950	5					
ANR	1449154	Identifier	print_errors		1448950	0					
ANR	1449155	ElseStatement	else		1448950	0					
ANR	1449156	CompoundStatement		32:1:790:790	1448950	0					
ANR	1449157	ExpressionStatement	"do_rd_expr ( p , ':' , valid , level , check , print_errors )"	719:3:17760:17814	1448950	0	True				
ANR	1449158	CallExpression	"do_rd_expr ( p , ':' , valid , level , check , print_errors )"		1448950	0					
ANR	1449159	Callee	do_rd_expr		1448950	0					
ANR	1449160	Identifier	do_rd_expr		1448950	0					
ANR	1449161	ArgumentList	p		1448950	1					
ANR	1449162	Argument	p		1448950	0					
ANR	1449163	Identifier	p		1448950	0					
ANR	1449164	Argument	':'		1448950	1					
ANR	1449165	PrimaryExpression	':'		1448950	0					
ANR	1449166	Argument	valid		1448950	2					
ANR	1449167	Identifier	valid		1448950	0					
ANR	1449168	Argument	level		1448950	3					
ANR	1449169	Identifier	level		1448950	0					
ANR	1449170	Argument	check		1448950	4					
ANR	1449171	Identifier	check		1448950	0					
ANR	1449172	Argument	print_errors		1448950	5					
ANR	1449173	Identifier	print_errors		1448950	0					
ANR	1449174	IfStatement	if ( * * p )		1448950	1					
ANR	1449175	Condition	* * p	720:7:17823:17825	1448950	0	True				
ANR	1449176	UnaryOperationExpression	* * p		1448950	0					
ANR	1449177	UnaryOperator	*		1448950	0					
ANR	1449178	UnaryOperationExpression	* p		1448950	1					
ANR	1449179	UnaryOperator	*		1448950	0					
ANR	1449180	Identifier	p		1448950	1					
ANR	1449181	ExpressionStatement	( * p ) ++	721:5:17833:17839	1448950	1	True				
ANR	1449182	PostIncDecOperationExpression	( * p ) ++		1448950	0					
ANR	1449183	UnaryOperationExpression	* p		1448950	0					
ANR	1449184	UnaryOperator	*		1448950	0					
ANR	1449185	Identifier	p		1448950	1					
ANR	1449186	IncDec	++		1448950	1					
ANR	1449187	ExpressionStatement	"result = do_rd_expr ( p , delimiter , valid , level , check , print_errors )"	722:3:17844:17923	1448950	2	True				
ANR	1449188	AssignmentExpression	"result = do_rd_expr ( p , delimiter , valid , level , check , print_errors )"		1448950	0		=			
ANR	1449189	Identifier	result		1448950	0					
ANR	1449190	CallExpression	"do_rd_expr ( p , delimiter , valid , level , check , print_errors )"		1448950	1					
ANR	1449191	Callee	do_rd_expr		1448950	0					
ANR	1449192	Identifier	do_rd_expr		1448950	0					
ANR	1449193	ArgumentList	p		1448950	1					
ANR	1449194	Argument	p		1448950	0					
ANR	1449195	Identifier	p		1448950	0					
ANR	1449196	Argument	delimiter		1448950	1					
ANR	1449197	Identifier	delimiter		1448950	0					
ANR	1449198	Argument	valid		1448950	2					
ANR	1449199	Identifier	valid		1448950	0					
ANR	1449200	Argument	level		1448950	3					
ANR	1449201	Identifier	level		1448950	0					
ANR	1449202	Argument	check		1448950	4					
ANR	1449203	Identifier	check		1448950	0					
ANR	1449204	Argument	print_errors		1448950	5					
ANR	1449205	Identifier	print_errors		1448950	0					
ANR	1449206	ExpressionStatement	* p = delspc ( * p )	726:2:17936:17952	1448950	31	True				
ANR	1449207	AssignmentExpression	* p = delspc ( * p )		1448950	0		=			
ANR	1449208	UnaryOperationExpression	* p		1448950	0					
ANR	1449209	UnaryOperator	*		1448950	0					
ANR	1449210	Identifier	p		1448950	1					
ANR	1449211	CallExpression	delspc ( * p )		1448950	1					
ANR	1449212	Callee	delspc		1448950	0					
ANR	1449213	Identifier	delspc		1448950	0					
ANR	1449214	ArgumentList	* p		1448950	1					
ANR	1449215	Argument	* p		1448950	0					
ANR	1449216	UnaryOperationExpression	* p		1448950	0					
ANR	1449217	UnaryOperator	*		1448950	0					
ANR	1449218	Identifier	p		1448950	1					
ANR	1449219	IfStatement	if ( * * p && * * p != delimiter )		1448950	32					
ANR	1449220	Condition	* * p && * * p != delimiter	727:6:17960:17982	1448950	0	True				
ANR	1449221	AndExpression	* * p && * * p != delimiter		1448950	0		&&			
ANR	1449222	UnaryOperationExpression	* * p		1448950	0					
ANR	1449223	UnaryOperator	*		1448950	0					
ANR	1449224	UnaryOperationExpression	* p		1448950	1					
ANR	1449225	UnaryOperator	*		1448950	0					
ANR	1449226	Identifier	p		1448950	1					
ANR	1449227	EqualityExpression	* * p != delimiter		1448950	1		!=			
ANR	1449228	UnaryOperationExpression	* * p		1448950	0					
ANR	1449229	UnaryOperator	*		1448950	0					
ANR	1449230	UnaryOperationExpression	* p		1448950	1					
ANR	1449231	UnaryOperator	*		1448950	0					
ANR	1449232	Identifier	p		1448950	1					
ANR	1449233	Identifier	delimiter		1448950	1					
ANR	1449234	CompoundStatement		42:4:1024:1024	1448950	1					
ANR	1449235	IfStatement	if ( valid )		1448950	0					
ANR	1449236	Condition	valid	729:10:18001:18005	1448950	0	True				
ANR	1449237	Identifier	valid		1448950	0					
ANR	1449238	ExpressionStatement	* valid = 0	730:1:18009:18019	1448950	1	True				
ANR	1449239	AssignmentExpression	* valid = 0		1448950	0		=			
ANR	1449240	UnaryOperationExpression	* valid		1448950	0					
ANR	1449241	UnaryOperator	*		1448950	0					
ANR	1449242	Identifier	valid		1448950	1					
ANR	1449243	PrimaryExpression	0		1448950	1					
ANR	1449244	ElseStatement	else		1448950	0					
ANR	1449245	IfStatement	if ( print_errors )		1448950	0					
ANR	1449246	Condition	print_errors	731:15:18036:18047	1448950	0	True				
ANR	1449247	Identifier	print_errors		1448950	0					
ANR	1449248	ExpressionStatement	"printerr ( 1 , ""junk at end of expression: %s\\n"" , * p )"	732:1:18051:18102	1448950	1	True				
ANR	1449249	CallExpression	"printerr ( 1 , ""junk at end of expression: %s\\n"" , * p )"		1448950	0					
ANR	1449250	Callee	printerr		1448950	0					
ANR	1449251	Identifier	printerr		1448950	0					
ANR	1449252	ArgumentList	1		1448950	1					
ANR	1449253	Argument	1		1448950	0					
ANR	1449254	PrimaryExpression	1		1448950	0					
ANR	1449255	Argument	"""junk at end of expression: %s\\n"""		1448950	1					
ANR	1449256	PrimaryExpression	"""junk at end of expression: %s\\n"""		1448950	0					
ANR	1449257	Argument	* p		1448950	2					
ANR	1449258	UnaryOperationExpression	* p		1448950	0					
ANR	1449259	UnaryOperator	*		1448950	0					
ANR	1449260	Identifier	p		1448950	1					
ANR	1449261	IfStatement	if ( verbose >= 7 )		1448950	33					
ANR	1449262	Condition	verbose >= 7	734:6:18116:18127	1448950	0	True				
ANR	1449263	RelationalExpression	verbose >= 7		1448950	0		>=			
ANR	1449264	Identifier	verbose		1448950	0					
ANR	1449265	PrimaryExpression	7		1448950	1					
ANR	1449266	CompoundStatement		49:4:1169:1169	1448950	1					
ANR	1449267	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): rd_expr returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"	736:6:18142:18251	1448950	0	True				
ANR	1449268	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): rd_expr returned %d (%04x).\\n"" , stack [ sp ] . line , addr , result , result )"		1448950	0					
ANR	1449269	Callee	fprintf		1448950	0					
ANR	1449270	Identifier	fprintf		1448950	0					
ANR	1449271	ArgumentList	stderr		1448950	1					
ANR	1449272	Argument	stderr		1448950	0					
ANR	1449273	Identifier	stderr		1448950	0					
ANR	1449274	Argument	"""%5d (0x%04x): rd_expr returned %d (%04x).\\n"""		1448950	1					
ANR	1449275	PrimaryExpression	"""%5d (0x%04x): rd_expr returned %d (%04x).\\n"""		1448950	0					
ANR	1449276	Argument	stack [ sp ] . line		1448950	2					
ANR	1449277	MemberAccess	stack [ sp ] . line		1448950	0					
ANR	1449278	ArrayIndexing	stack [ sp ]		1448950	0					
ANR	1449279	Identifier	stack		1448950	0					
ANR	1449280	Identifier	sp		1448950	1					
ANR	1449281	Identifier	line		1448950	1					
ANR	1449282	Argument	addr		1448950	3					
ANR	1449283	Identifier	addr		1448950	0					
ANR	1449284	Argument	result		1448950	4					
ANR	1449285	Identifier	result		1448950	0					
ANR	1449286	Argument	result		1448950	5					
ANR	1449287	Identifier	result		1448950	0					
ANR	1449288	IfStatement	if ( valid && ! * valid )		1448950	1					
ANR	1449289	Condition	valid && ! * valid	738:10:18263:18278	1448950	0	True				
ANR	1449290	AndExpression	valid && ! * valid		1448950	0		&&			
ANR	1449291	Identifier	valid		1448950	0					
ANR	1449292	UnaryOperationExpression	! * valid		1448950	1					
ANR	1449293	UnaryOperator	!		1448950	0					
ANR	1449294	UnaryOperationExpression	* valid		1448950	1					
ANR	1449295	UnaryOperator	*		1448950	0					
ANR	1449296	Identifier	valid		1448950	1					
ANR	1449297	ExpressionStatement	"fprintf ( stderr , ""%5d (0x%04x): Returning invalid result.\\n"" , stack [ sp ] . line , addr )"	739:1:18282:18368	1448950	1	True				
ANR	1449298	CallExpression	"fprintf ( stderr , ""%5d (0x%04x): Returning invalid result.\\n"" , stack [ sp ] . line , addr )"		1448950	0					
ANR	1449299	Callee	fprintf		1448950	0					
ANR	1449300	Identifier	fprintf		1448950	0					
ANR	1449301	ArgumentList	stderr		1448950	1					
ANR	1449302	Argument	stderr		1448950	0					
ANR	1449303	Identifier	stderr		1448950	0					
ANR	1449304	Argument	"""%5d (0x%04x): Returning invalid result.\\n"""		1448950	1					
ANR	1449305	PrimaryExpression	"""%5d (0x%04x): Returning invalid result.\\n"""		1448950	0					
ANR	1449306	Argument	stack [ sp ] . line		1448950	2					
ANR	1449307	MemberAccess	stack [ sp ] . line		1448950	0					
ANR	1449308	ArrayIndexing	stack [ sp ]		1448950	0					
ANR	1449309	Identifier	stack		1448950	0					
ANR	1449310	Identifier	sp		1448950	1					
ANR	1449311	Identifier	line		1448950	1					
ANR	1449312	Argument	addr		1448950	3					
ANR	1449313	Identifier	addr		1448950	0					
ANR	1449314	ReturnStatement	return result ;	742:2:18378:18391	1448950	34	True				
ANR	1449315	Identifier	result		1448950	0					
ANR	1449316	ReturnType	static int		1448950	1					
ANR	1449317	Identifier	do_rd_expr		1448950	2					
ANR	1449318	ParameterList	"const char * * p , char delimiter , int * valid , int level , int * check , int print_errors"		1448950	3					
ANR	1449319	Parameter	const char * * p	685:12:16874:16887	1448950	0	True				
ANR	1449320	ParameterType	const char * *		1448950	0					
ANR	1449321	Identifier	p		1448950	1					
ANR	1449322	Parameter	char delimiter	685:28:16890:16903	1448950	1	True				
ANR	1449323	ParameterType	char		1448950	0					
ANR	1449324	Identifier	delimiter		1448950	1					
ANR	1449325	Parameter	int * valid	685:44:16906:16915	1448950	2	True				
ANR	1449326	ParameterType	int *		1448950	0					
ANR	1449327	Identifier	valid		1448950	1					
ANR	1449328	Parameter	int level	685:56:16918:16926	1448950	3	True				
ANR	1449329	ParameterType	int		1448950	0					
ANR	1449330	Identifier	level		1448950	1					
ANR	1449331	Parameter	int * check	685:67:16929:16938	1448950	4	True				
ANR	1449332	ParameterType	int *		1448950	0					
ANR	1449333	Identifier	check		1448950	1					
ANR	1449334	Parameter	int print_errors	686:5:16946:16961	1448950	5	True				
ANR	1449335	ParameterType	int		1448950	0					
ANR	1449336	Identifier	print_errors		1448950	1					
ANR	1449337	CFGEntryNode	ENTRY		1448950		True				
ANR	1449338	CFGExitNode	EXIT		1448950		True				
ANR	1449339	Symbol	* sp		1448950						
ANR	1449340	Symbol	stack		1448950						
ANR	1449341	Symbol	level		1448950						
ANR	1449342	Symbol	check		1448950						
ANR	1449343	Symbol	* valid		1448950						
ANR	1449344	Symbol	stderr		1448950						
ANR	1449345	Symbol	verbose		1448950						
ANR	1449346	Symbol	do_rd_expr		1448950						
ANR	1449347	Symbol	p		1448950						
ANR	1449348	Symbol	valid		1448950						
ANR	1449349	Symbol	result		1448950						
ANR	1449350	Symbol	delimiter		1448950						
ANR	1449351	Symbol	* check		1448950						
ANR	1449352	Symbol	print_errors		1448950						
ANR	1449353	Symbol	rd_expr_or		1448950						
ANR	1449354	Symbol	* stack		1448950						
ANR	1449355	Symbol	* p		1448950						
ANR	1449356	Symbol	stack [ sp ] . line		1448950						
ANR	1449357	Symbol	* * p		1448950						
ANR	1449358	Symbol	addr		1448950						
ANR	1449359	Symbol	delspc		1448950						
ANR	1449360	Symbol	sp		1448950						
ANR	1449361	Function	rd_expr	745:0:18396:18759							
ANR	1449362	FunctionDef	"rd_expr (const char * * p , char delimiter , int * valid , int level , int print_errors)"		1449361	0					
ANR	1449363	CompoundStatement		748:0:18491:18759	1449361	0					
ANR	1449364	IdentifierDeclStatement	int check = 1 ;	749:2:18495:18508	1449361	0	True				
ANR	1449365	IdentifierDecl	check = 1		1449361	0					
ANR	1449366	IdentifierDeclType	int		1449361	0					
ANR	1449367	Identifier	check		1449361	1					
ANR	1449368	AssignmentExpression	check = 1		1449361	2		=			
ANR	1449369	Identifier	check		1449361	0					
ANR	1449370	PrimaryExpression	1		1449361	1					
ANR	1449371	IdentifierDeclStatement	int result ;	750:2:18512:18522	1449361	1	True				
ANR	1449372	IdentifierDecl	result		1449361	0					
ANR	1449373	IdentifierDeclType	int		1449361	0					
ANR	1449374	Identifier	result		1449361	1					
ANR	1449375	IfStatement	if ( valid )		1449361	2					
ANR	1449376	Condition	valid	751:6:18530:18534	1449361	0	True				
ANR	1449377	Identifier	valid		1449361	0					
ANR	1449378	ExpressionStatement	* valid = 1	752:4:18541:18551	1449361	1	True				
ANR	1449379	AssignmentExpression	* valid = 1		1449361	0		=			
ANR	1449380	UnaryOperationExpression	* valid		1449361	0					
ANR	1449381	UnaryOperator	*		1449361	0					
ANR	1449382	Identifier	valid		1449361	1					
ANR	1449383	PrimaryExpression	1		1449361	1					
ANR	1449384	ExpressionStatement	"result = do_rd_expr ( p , delimiter , valid , level , & check , print_errors )"	753:2:18555:18625	1449361	3	True				
ANR	1449385	AssignmentExpression	"result = do_rd_expr ( p , delimiter , valid , level , & check , print_errors )"		1449361	0		=			
ANR	1449386	Identifier	result		1449361	0					
ANR	1449387	CallExpression	"do_rd_expr ( p , delimiter , valid , level , & check , print_errors )"		1449361	1					
ANR	1449388	Callee	do_rd_expr		1449361	0					
ANR	1449389	Identifier	do_rd_expr		1449361	0					
ANR	1449390	ArgumentList	p		1449361	1					
ANR	1449391	Argument	p		1449361	0					
ANR	1449392	Identifier	p		1449361	0					
ANR	1449393	Argument	delimiter		1449361	1					
ANR	1449394	Identifier	delimiter		1449361	0					
ANR	1449395	Argument	valid		1449361	2					
ANR	1449396	Identifier	valid		1449361	0					
ANR	1449397	Argument	level		1449361	3					
ANR	1449398	Identifier	level		1449361	0					
ANR	1449399	Argument	& check		1449361	4					
ANR	1449400	UnaryOperationExpression	& check		1449361	0					
ANR	1449401	UnaryOperator	&		1449361	0					
ANR	1449402	Identifier	check		1449361	1					
ANR	1449403	Argument	print_errors		1449361	5					
ANR	1449404	Identifier	print_errors		1449361	0					
ANR	1449405	IfStatement	if ( print_errors && ( ! valid || * valid ) && check )		1449361	4					
ANR	1449406	Condition	print_errors && ( ! valid || * valid ) && check	754:6:18633:18675	1449361	0	True				
ANR	1449407	AndExpression	print_errors && ( ! valid || * valid ) && check		1449361	0		&&			
ANR	1449408	Identifier	print_errors		1449361	0					
ANR	1449409	AndExpression	( ! valid || * valid ) && check		1449361	1		&&			
ANR	1449410	OrExpression	! valid || * valid		1449361	0		||			
ANR	1449411	UnaryOperationExpression	! valid		1449361	0					
ANR	1449412	UnaryOperator	!		1449361	0					
ANR	1449413	Identifier	valid		1449361	1					
ANR	1449414	UnaryOperationExpression	* valid		1449361	1					
ANR	1449415	UnaryOperator	*		1449361	0					
ANR	1449416	Identifier	valid		1449361	1					
ANR	1449417	Identifier	check		1449361	1					
ANR	1449418	ExpressionStatement	"printerr ( 0 , ""expression fully enclosed in parenthesis\\n"" )"	755:4:18682:18740	1449361	1	True				
ANR	1449419	CallExpression	"printerr ( 0 , ""expression fully enclosed in parenthesis\\n"" )"		1449361	0					
ANR	1449420	Callee	printerr		1449361	0					
ANR	1449421	Identifier	printerr		1449361	0					
ANR	1449422	ArgumentList	0		1449361	1					
ANR	1449423	Argument	0		1449361	0					
ANR	1449424	PrimaryExpression	0		1449361	0					
ANR	1449425	Argument	"""expression fully enclosed in parenthesis\\n"""		1449361	1					
ANR	1449426	PrimaryExpression	"""expression fully enclosed in parenthesis\\n"""		1449361	0					
ANR	1449427	ReturnStatement	return result ;	756:2:18744:18757	1449361	5	True				
ANR	1449428	Identifier	result		1449361	0					
ANR	1449429	ReturnType	static int		1449361	1					
ANR	1449430	Identifier	rd_expr		1449361	2					
ANR	1449431	ParameterList	"const char * * p , char delimiter , int * valid , int level , int print_errors"		1449361	3					
ANR	1449432	Parameter	const char * * p	746:9:18416:18429	1449361	0	True				
ANR	1449433	ParameterType	const char * *		1449361	0					
ANR	1449434	Identifier	p		1449361	1					
ANR	1449435	Parameter	char delimiter	746:25:18432:18445	1449361	1	True				
ANR	1449436	ParameterType	char		1449361	0					
ANR	1449437	Identifier	delimiter		1449361	1					
ANR	1449438	Parameter	int * valid	746:41:18448:18457	1449361	2	True				
ANR	1449439	ParameterType	int *		1449361	0					
ANR	1449440	Identifier	valid		1449361	1					
ANR	1449441	Parameter	int level	746:53:18460:18468	1449361	3	True				
ANR	1449442	ParameterType	int		1449361	0					
ANR	1449443	Identifier	level		1449361	1					
ANR	1449444	Parameter	int print_errors	747:2:18473:18488	1449361	4	True				
ANR	1449445	ParameterType	int		1449361	0					
ANR	1449446	Identifier	print_errors		1449361	1					
ANR	1449447	CFGEntryNode	ENTRY		1449361		True				
ANR	1449448	CFGExitNode	EXIT		1449361		True				
ANR	1449449	Symbol	p		1449361						
ANR	1449450	Symbol	valid		1449361						
ANR	1449451	Symbol	result		1449361						
ANR	1449452	Symbol	level		1449361						
ANR	1449453	Symbol	& check		1449361						
ANR	1449454	Symbol	delimiter		1449361						
ANR	1449455	Symbol	print_errors		1449361						
ANR	1449456	Symbol	check		1449361						
ANR	1449457	Symbol	* valid		1449361						
ANR	1449458	Symbol	do_rd_expr		1449361						
