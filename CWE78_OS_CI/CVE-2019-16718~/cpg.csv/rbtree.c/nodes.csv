command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5706629	File	data/converged/CVE-2019-16718~_radare2/rbtree.c								
ANR	5706630	Function	red	7:0:114:171							
ANR	5706631	FunctionDef	red (RBNode * x)		5706630	0					
ANR	5706632	CompoundStatement		7:34:148:171	5706630	0					
ANR	5706633	ReturnStatement	return x && x -> red ;	8:1:151:169	5706630	0	True				
ANR	5706634	AndExpression	x && x -> red		5706630	0		&&			
ANR	5706635	Identifier	x		5706630	0					
ANR	5706636	PtrMemberAccess	x -> red		5706630	1					
ANR	5706637	Identifier	x		5706630	0					
ANR	5706638	Identifier	red		5706630	1					
ANR	5706639	ReturnType	static inline bool		5706630	1					
ANR	5706640	Identifier	red		5706630	2					
ANR	5706641	ParameterList	RBNode * x		5706630	3					
ANR	5706642	Parameter	RBNode * x	7:23:137:145	5706630	0	True				
ANR	5706643	ParameterType	RBNode *		5706630	0					
ANR	5706644	Identifier	x		5706630	1					
ANR	5706645	CFGEntryNode	ENTRY		5706630		True				
ANR	5706646	CFGExitNode	EXIT		5706630		True				
ANR	5706647	Symbol	* x		5706630						
ANR	5706648	Symbol	x -> red		5706630						
ANR	5706649	Symbol	x		5706630						
ANR	5706650	Function	zag	11:0:174:389							
ANR	5706651	FunctionDef	"zag (RBNode * x , int dir , RBNodeSum sum)"		5706650	0					
ANR	5706652	CompoundStatement		11:61:235:389	5706650	0					
ANR	5706653	IdentifierDeclStatement	RBNode * y = x -> child [ dir ] ;	12:1:238:263	5706650	0	True				
ANR	5706654	IdentifierDecl	* y = x -> child [ dir ]		5706650	0					
ANR	5706655	IdentifierDeclType	RBNode *		5706650	0					
ANR	5706656	Identifier	y		5706650	1					
ANR	5706657	AssignmentExpression	* y = x -> child [ dir ]		5706650	2		=			
ANR	5706658	Identifier	y		5706650	0					
ANR	5706659	ArrayIndexing	x -> child [ dir ]		5706650	1					
ANR	5706660	PtrMemberAccess	x -> child		5706650	0					
ANR	5706661	Identifier	x		5706650	0					
ANR	5706662	Identifier	child		5706650	1					
ANR	5706663	Identifier	dir		5706650	1					
ANR	5706664	ExpressionStatement	x -> child [ dir ] = y -> child [ ! dir ]	13:1:266:296	5706650	1	True				
ANR	5706665	AssignmentExpression	x -> child [ dir ] = y -> child [ ! dir ]		5706650	0		=			
ANR	5706666	ArrayIndexing	x -> child [ dir ]		5706650	0					
ANR	5706667	PtrMemberAccess	x -> child		5706650	0					
ANR	5706668	Identifier	x		5706650	0					
ANR	5706669	Identifier	child		5706650	1					
ANR	5706670	Identifier	dir		5706650	1					
ANR	5706671	ArrayIndexing	y -> child [ ! dir ]		5706650	1					
ANR	5706672	PtrMemberAccess	y -> child		5706650	0					
ANR	5706673	Identifier	y		5706650	0					
ANR	5706674	Identifier	child		5706650	1					
ANR	5706675	UnaryOperationExpression	! dir		5706650	1					
ANR	5706676	UnaryOperator	!		5706650	0					
ANR	5706677	Identifier	dir		5706650	1					
ANR	5706678	ExpressionStatement	y -> child [ ! dir ] = x	14:1:299:317	5706650	2	True				
ANR	5706679	AssignmentExpression	y -> child [ ! dir ] = x		5706650	0		=			
ANR	5706680	ArrayIndexing	y -> child [ ! dir ]		5706650	0					
ANR	5706681	PtrMemberAccess	y -> child		5706650	0					
ANR	5706682	Identifier	y		5706650	0					
ANR	5706683	Identifier	child		5706650	1					
ANR	5706684	UnaryOperationExpression	! dir		5706650	1					
ANR	5706685	UnaryOperator	!		5706650	0					
ANR	5706686	Identifier	dir		5706650	1					
ANR	5706687	Identifier	x		5706650	1					
ANR	5706688	ExpressionStatement	x -> red = true	15:1:320:333	5706650	3	True				
ANR	5706689	AssignmentExpression	x -> red = true		5706650	0		=			
ANR	5706690	PtrMemberAccess	x -> red		5706650	0					
ANR	5706691	Identifier	x		5706650	0					
ANR	5706692	Identifier	red		5706650	1					
ANR	5706693	Identifier	true		5706650	1					
ANR	5706694	ExpressionStatement	y -> red = false	16:1:336:350	5706650	4	True				
ANR	5706695	AssignmentExpression	y -> red = false		5706650	0		=			
ANR	5706696	PtrMemberAccess	y -> red		5706650	0					
ANR	5706697	Identifier	y		5706650	0					
ANR	5706698	Identifier	red		5706650	1					
ANR	5706699	Identifier	false		5706650	1					
ANR	5706700	IfStatement	if ( sum )		5706650	5					
ANR	5706701	Condition	sum	17:5:357:359	5706650	0	True				
ANR	5706702	Identifier	sum		5706650	0					
ANR	5706703	CompoundStatement		7:10:126:126	5706650	1					
ANR	5706704	ExpressionStatement	sum ( x )	18:2:366:373	5706650	0	True				
ANR	5706705	CallExpression	sum ( x )		5706650	0					
ANR	5706706	Callee	sum		5706650	0					
ANR	5706707	Identifier	sum		5706650	0					
ANR	5706708	ArgumentList	x		5706650	1					
ANR	5706709	Argument	x		5706650	0					
ANR	5706710	Identifier	x		5706650	0					
ANR	5706711	ReturnStatement	return y ;	20:1:379:387	5706650	6	True				
ANR	5706712	Identifier	y		5706650	0					
ANR	5706713	ReturnType	static inline RBNode *		5706650	1					
ANR	5706714	Identifier	zag		5706650	2					
ANR	5706715	ParameterList	"RBNode * x , int dir , RBNodeSum sum"		5706650	3					
ANR	5706716	Parameter	RBNode * x	11:26:200:208	5706650	0	True				
ANR	5706717	ParameterType	RBNode *		5706650	0					
ANR	5706718	Identifier	x		5706650	1					
ANR	5706719	Parameter	int dir	11:37:211:217	5706650	1	True				
ANR	5706720	ParameterType	int		5706650	0					
ANR	5706721	Identifier	dir		5706650	1					
ANR	5706722	Parameter	RBNodeSum sum	11:46:220:232	5706650	2	True				
ANR	5706723	ParameterType	RBNodeSum		5706650	0					
ANR	5706724	Identifier	sum		5706650	1					
ANR	5706725	CFGEntryNode	ENTRY		5706650		True				
ANR	5706726	CFGExitNode	EXIT		5706650		True				
ANR	5706727	Symbol	* x		5706650						
ANR	5706728	Symbol	* y		5706650						
ANR	5706729	Symbol	x -> child		5706650						
ANR	5706730	Symbol	* x -> child		5706650						
ANR	5706731	Symbol	* dir		5706650						
ANR	5706732	Symbol	false		5706650						
ANR	5706733	Symbol	sum		5706650						
ANR	5706734	Symbol	dir		5706650						
ANR	5706735	Symbol	y -> child		5706650						
ANR	5706736	Symbol	y -> red		5706650						
ANR	5706737	Symbol	* * y		5706650						
ANR	5706738	Symbol	x -> red		5706650						
ANR	5706739	Symbol	* * x		5706650						
ANR	5706740	Symbol	x		5706650						
ANR	5706741	Symbol	true		5706650						
ANR	5706742	Symbol	y		5706650						
ANR	5706743	Symbol	* y -> child		5706650						
ANR	5706744	Function	zig_zag	23:0:392:705							
ANR	5706745	FunctionDef	"zig_zag (RBNode * x , int dir , RBNodeSum sum)"		5706744	0					
ANR	5706746	CompoundStatement		23:65:457:705	5706744	0					
ANR	5706747	IdentifierDeclStatement	"RBNode * y = x -> child [ dir ] , * z = y -> child [ ! dir ] ;"	24:1:460:506	5706744	0	True				
ANR	5706748	IdentifierDecl	* y = x -> child [ dir ]		5706744	0					
ANR	5706749	IdentifierDeclType	RBNode *		5706744	0					
ANR	5706750	Identifier	y		5706744	1					
ANR	5706751	AssignmentExpression	* y = x -> child [ dir ]		5706744	2		=			
ANR	5706752	Identifier	y		5706744	0					
ANR	5706753	ArrayIndexing	x -> child [ dir ]		5706744	1					
ANR	5706754	PtrMemberAccess	x -> child		5706744	0					
ANR	5706755	Identifier	x		5706744	0					
ANR	5706756	Identifier	child		5706744	1					
ANR	5706757	Identifier	dir		5706744	1					
ANR	5706758	IdentifierDecl	* z = y -> child [ ! dir ]		5706744	1					
ANR	5706759	IdentifierDeclType	RBNode *		5706744	0					
ANR	5706760	Identifier	z		5706744	1					
ANR	5706761	AssignmentExpression	* z = y -> child [ ! dir ]		5706744	2		=			
ANR	5706762	Identifier	z		5706744	0					
ANR	5706763	ArrayIndexing	y -> child [ ! dir ]		5706744	1					
ANR	5706764	PtrMemberAccess	y -> child		5706744	0					
ANR	5706765	Identifier	y		5706744	0					
ANR	5706766	Identifier	child		5706744	1					
ANR	5706767	UnaryOperationExpression	! dir		5706744	1					
ANR	5706768	UnaryOperator	!		5706744	0					
ANR	5706769	Identifier	dir		5706744	1					
ANR	5706770	ExpressionStatement	y -> child [ ! dir ] = z -> child [ dir ]	25:1:509:539	5706744	1	True				
ANR	5706771	AssignmentExpression	y -> child [ ! dir ] = z -> child [ dir ]		5706744	0		=			
ANR	5706772	ArrayIndexing	y -> child [ ! dir ]		5706744	0					
ANR	5706773	PtrMemberAccess	y -> child		5706744	0					
ANR	5706774	Identifier	y		5706744	0					
ANR	5706775	Identifier	child		5706744	1					
ANR	5706776	UnaryOperationExpression	! dir		5706744	1					
ANR	5706777	UnaryOperator	!		5706744	0					
ANR	5706778	Identifier	dir		5706744	1					
ANR	5706779	ArrayIndexing	z -> child [ dir ]		5706744	1					
ANR	5706780	PtrMemberAccess	z -> child		5706744	0					
ANR	5706781	Identifier	z		5706744	0					
ANR	5706782	Identifier	child		5706744	1					
ANR	5706783	Identifier	dir		5706744	1					
ANR	5706784	ExpressionStatement	z -> child [ dir ] = y	26:1:542:559	5706744	2	True				
ANR	5706785	AssignmentExpression	z -> child [ dir ] = y		5706744	0		=			
ANR	5706786	ArrayIndexing	z -> child [ dir ]		5706744	0					
ANR	5706787	PtrMemberAccess	z -> child		5706744	0					
ANR	5706788	Identifier	z		5706744	0					
ANR	5706789	Identifier	child		5706744	1					
ANR	5706790	Identifier	dir		5706744	1					
ANR	5706791	Identifier	y		5706744	1					
ANR	5706792	ExpressionStatement	x -> child [ dir ] = z -> child [ ! dir ]	27:1:562:592	5706744	3	True				
ANR	5706793	AssignmentExpression	x -> child [ dir ] = z -> child [ ! dir ]		5706744	0		=			
ANR	5706794	ArrayIndexing	x -> child [ dir ]		5706744	0					
ANR	5706795	PtrMemberAccess	x -> child		5706744	0					
ANR	5706796	Identifier	x		5706744	0					
ANR	5706797	Identifier	child		5706744	1					
ANR	5706798	Identifier	dir		5706744	1					
ANR	5706799	ArrayIndexing	z -> child [ ! dir ]		5706744	1					
ANR	5706800	PtrMemberAccess	z -> child		5706744	0					
ANR	5706801	Identifier	z		5706744	0					
ANR	5706802	Identifier	child		5706744	1					
ANR	5706803	UnaryOperationExpression	! dir		5706744	1					
ANR	5706804	UnaryOperator	!		5706744	0					
ANR	5706805	Identifier	dir		5706744	1					
ANR	5706806	ExpressionStatement	z -> child [ ! dir ] = x	28:1:595:613	5706744	4	True				
ANR	5706807	AssignmentExpression	z -> child [ ! dir ] = x		5706744	0		=			
ANR	5706808	ArrayIndexing	z -> child [ ! dir ]		5706744	0					
ANR	5706809	PtrMemberAccess	z -> child		5706744	0					
ANR	5706810	Identifier	z		5706744	0					
ANR	5706811	Identifier	child		5706744	1					
ANR	5706812	UnaryOperationExpression	! dir		5706744	1					
ANR	5706813	UnaryOperator	!		5706744	0					
ANR	5706814	Identifier	dir		5706744	1					
ANR	5706815	Identifier	x		5706744	1					
ANR	5706816	ExpressionStatement	x -> red = y -> red = true	29:1:616:638	5706744	5	True				
ANR	5706817	AssignmentExpression	x -> red = y -> red = true		5706744	0		=			
ANR	5706818	PtrMemberAccess	x -> red		5706744	0					
ANR	5706819	Identifier	x		5706744	0					
ANR	5706820	Identifier	red		5706744	1					
ANR	5706821	AssignmentExpression	y -> red = true		5706744	1		=			
ANR	5706822	PtrMemberAccess	y -> red		5706744	0					
ANR	5706823	Identifier	y		5706744	0					
ANR	5706824	Identifier	red		5706744	1					
ANR	5706825	Identifier	true		5706744	1					
ANR	5706826	ExpressionStatement	z -> red = false	30:1:641:655	5706744	6	True				
ANR	5706827	AssignmentExpression	z -> red = false		5706744	0		=			
ANR	5706828	PtrMemberAccess	z -> red		5706744	0					
ANR	5706829	Identifier	z		5706744	0					
ANR	5706830	Identifier	red		5706744	1					
ANR	5706831	Identifier	false		5706744	1					
ANR	5706832	IfStatement	if ( sum )		5706744	7					
ANR	5706833	Condition	sum	31:5:662:664	5706744	0	True				
ANR	5706834	Identifier	sum		5706744	0					
ANR	5706835	CompoundStatement		9:10:209:209	5706744	1					
ANR	5706836	ExpressionStatement	sum ( x )	32:2:671:678	5706744	0	True				
ANR	5706837	CallExpression	sum ( x )		5706744	0					
ANR	5706838	Callee	sum		5706744	0					
ANR	5706839	Identifier	sum		5706744	0					
ANR	5706840	ArgumentList	x		5706744	1					
ANR	5706841	Argument	x		5706744	0					
ANR	5706842	Identifier	x		5706744	0					
ANR	5706843	ExpressionStatement	sum ( y )	33:2:682:689	5706744	1	True				
ANR	5706844	CallExpression	sum ( y )		5706744	0					
ANR	5706845	Callee	sum		5706744	0					
ANR	5706846	Identifier	sum		5706744	0					
ANR	5706847	ArgumentList	y		5706744	1					
ANR	5706848	Argument	y		5706744	0					
ANR	5706849	Identifier	y		5706744	0					
ANR	5706850	ReturnStatement	return z ;	35:1:695:703	5706744	8	True				
ANR	5706851	Identifier	z		5706744	0					
ANR	5706852	ReturnType	static inline RBNode *		5706744	1					
ANR	5706853	Identifier	zig_zag		5706744	2					
ANR	5706854	ParameterList	"RBNode * x , int dir , RBNodeSum sum"		5706744	3					
ANR	5706855	Parameter	RBNode * x	23:30:422:430	5706744	0	True				
ANR	5706856	ParameterType	RBNode *		5706744	0					
ANR	5706857	Identifier	x		5706744	1					
ANR	5706858	Parameter	int dir	23:41:433:439	5706744	1	True				
ANR	5706859	ParameterType	int		5706744	0					
ANR	5706860	Identifier	dir		5706744	1					
ANR	5706861	Parameter	RBNodeSum sum	23:50:442:454	5706744	2	True				
ANR	5706862	ParameterType	RBNodeSum		5706744	0					
ANR	5706863	Identifier	sum		5706744	1					
ANR	5706864	CFGEntryNode	ENTRY		5706744		True				
ANR	5706865	CFGExitNode	EXIT		5706744		True				
ANR	5706866	Symbol	* x		5706744						
ANR	5706867	Symbol	* y		5706744						
ANR	5706868	Symbol	x -> child		5706744						
ANR	5706869	Symbol	* z		5706744						
ANR	5706870	Symbol	* x -> child		5706744						
ANR	5706871	Symbol	* dir		5706744						
ANR	5706872	Symbol	false		5706744						
ANR	5706873	Symbol	sum		5706744						
ANR	5706874	Symbol	dir		5706744						
ANR	5706875	Symbol	y -> child		5706744						
ANR	5706876	Symbol	y -> red		5706744						
ANR	5706877	Symbol	* * z		5706744						
ANR	5706878	Symbol	* * y		5706744						
ANR	5706879	Symbol	x -> red		5706744						
ANR	5706880	Symbol	z -> red		5706744						
ANR	5706881	Symbol	* * x		5706744						
ANR	5706882	Symbol	* z -> child		5706744						
ANR	5706883	Symbol	z -> child		5706744						
ANR	5706884	Symbol	x		5706744						
ANR	5706885	Symbol	true		5706744						
ANR	5706886	Symbol	y		5706744						
ANR	5706887	Symbol	z		5706744						
ANR	5706888	Symbol	* y -> child		5706744						
ANR	5706889	Function	bound_iter	38:0:708:1078							
ANR	5706890	FunctionDef	"bound_iter (RBNode * x , void * data , RBComparator cmp , bool upper , bool backward)"		5706889	0					
ANR	5706891	CompoundStatement		38:100:808:1078	5706889	0					
ANR	5706892	IdentifierDeclStatement	RBIter it ;	39:1:811:820	5706889	0	True				
ANR	5706893	IdentifierDecl	it		5706889	0					
ANR	5706894	IdentifierDeclType	RBIter		5706889	0					
ANR	5706895	Identifier	it		5706889	1					
ANR	5706896	ExpressionStatement	it . len = 0	40:1:823:833	5706889	1	True				
ANR	5706897	AssignmentExpression	it . len = 0		5706889	0		=			
ANR	5706898	MemberAccess	it . len		5706889	0					
ANR	5706899	Identifier	it		5706889	0					
ANR	5706900	Identifier	len		5706889	1					
ANR	5706901	PrimaryExpression	0		5706889	1					
ANR	5706902	WhileStatement	while ( x )		5706889	2					
ANR	5706903	Condition	x	41:8:843:843	5706889	0	True				
ANR	5706904	Identifier	x		5706889	0					
ANR	5706905	CompoundStatement		5:2:41:62	5706889	1					
ANR	5706906	IdentifierDeclStatement	"int d = cmp ( data , x ) ;"	42:2:850:871	5706889	0	True				
ANR	5706907	IdentifierDecl	"d = cmp ( data , x )"		5706889	0					
ANR	5706908	IdentifierDeclType	int		5706889	0					
ANR	5706909	Identifier	d		5706889	1					
ANR	5706910	AssignmentExpression	"d = cmp ( data , x )"		5706889	2		=			
ANR	5706911	Identifier	d		5706889	0					
ANR	5706912	CallExpression	"cmp ( data , x )"		5706889	1					
ANR	5706913	Callee	cmp		5706889	0					
ANR	5706914	Identifier	cmp		5706889	0					
ANR	5706915	ArgumentList	data		5706889	1					
ANR	5706916	Argument	data		5706889	0					
ANR	5706917	Identifier	data		5706889	0					
ANR	5706918	Argument	x		5706889	1					
ANR	5706919	Identifier	x		5706889	0					
ANR	5706920	IfStatement	if ( upper ? d < 0 : d <= 0 )		5706889	1					
ANR	5706921	Condition	upper ? d < 0 : d <= 0	43:6:879:900	5706889	0	True				
ANR	5706922	ConditionalExpression	upper ? d < 0 : d <= 0		5706889	0					
ANR	5706923	Condition	upper		5706889	0					
ANR	5706924	Identifier	upper		5706889	0					
ANR	5706925	RelationalExpression	d < 0		5706889	1		<			
ANR	5706926	Identifier	d		5706889	0					
ANR	5706927	PrimaryExpression	0		5706889	1					
ANR	5706928	RelationalExpression	d <= 0		5706889	2		<=			
ANR	5706929	Identifier	d		5706889	0					
ANR	5706930	PrimaryExpression	0		5706889	1					
ANR	5706931	CompoundStatement		6:30:94:94	5706889	1					
ANR	5706932	IfStatement	if ( ! backward )		5706889	0					
ANR	5706933	Condition	! backward	44:7:912:920	5706889	0	True				
ANR	5706934	UnaryOperationExpression	! backward		5706889	0					
ANR	5706935	UnaryOperator	!		5706889	0					
ANR	5706936	Identifier	backward		5706889	1					
ANR	5706937	CompoundStatement		7:18:114:114	5706889	1					
ANR	5706938	ExpressionStatement	it . path [ it . len ++ ] = x	45:4:929:950	5706889	0	True				
ANR	5706939	AssignmentExpression	it . path [ it . len ++ ] = x		5706889	0		=			
ANR	5706940	ArrayIndexing	it . path [ it . len ++ ]		5706889	0					
ANR	5706941	MemberAccess	it . path		5706889	0					
ANR	5706942	Identifier	it		5706889	0					
ANR	5706943	Identifier	path		5706889	1					
ANR	5706944	PostIncDecOperationExpression	it . len ++		5706889	1					
ANR	5706945	MemberAccess	it . len		5706889	0					
ANR	5706946	Identifier	it		5706889	0					
ANR	5706947	Identifier	len		5706889	1					
ANR	5706948	IncDec	++		5706889	1					
ANR	5706949	Identifier	x		5706889	1					
ANR	5706950	ExpressionStatement	x = x -> child [ 0 ]	47:3:960:975	5706889	1	True				
ANR	5706951	AssignmentExpression	x = x -> child [ 0 ]		5706889	0		=			
ANR	5706952	Identifier	x		5706889	0					
ANR	5706953	ArrayIndexing	x -> child [ 0 ]		5706889	1					
ANR	5706954	PtrMemberAccess	x -> child		5706889	0					
ANR	5706955	Identifier	x		5706889	0					
ANR	5706956	Identifier	child		5706889	1					
ANR	5706957	PrimaryExpression	0		5706889	1					
ANR	5706958	ElseStatement	else		5706889	0					
ANR	5706959	CompoundStatement		11:9:177:177	5706889	0					
ANR	5706960	IfStatement	if ( backward )		5706889	0					
ANR	5706961	Condition	backward	49:7:995:1002	5706889	0	True				
ANR	5706962	Identifier	backward		5706889	0					
ANR	5706963	CompoundStatement		12:17:196:196	5706889	1					
ANR	5706964	ExpressionStatement	it . path [ it . len ++ ] = x	50:4:1011:1032	5706889	0	True				
ANR	5706965	AssignmentExpression	it . path [ it . len ++ ] = x		5706889	0		=			
ANR	5706966	ArrayIndexing	it . path [ it . len ++ ]		5706889	0					
ANR	5706967	MemberAccess	it . path		5706889	0					
ANR	5706968	Identifier	it		5706889	0					
ANR	5706969	Identifier	path		5706889	1					
ANR	5706970	PostIncDecOperationExpression	it . len ++		5706889	1					
ANR	5706971	MemberAccess	it . len		5706889	0					
ANR	5706972	Identifier	it		5706889	0					
ANR	5706973	Identifier	len		5706889	1					
ANR	5706974	IncDec	++		5706889	1					
ANR	5706975	Identifier	x		5706889	1					
ANR	5706976	ExpressionStatement	x = x -> child [ 1 ]	52:3:1042:1057	5706889	1	True				
ANR	5706977	AssignmentExpression	x = x -> child [ 1 ]		5706889	0		=			
ANR	5706978	Identifier	x		5706889	0					
ANR	5706979	ArrayIndexing	x -> child [ 1 ]		5706889	1					
ANR	5706980	PtrMemberAccess	x -> child		5706889	0					
ANR	5706981	Identifier	x		5706889	0					
ANR	5706982	Identifier	child		5706889	1					
ANR	5706983	PrimaryExpression	1		5706889	1					
ANR	5706984	ReturnStatement	return it ;	55:1:1067:1076	5706889	3	True				
ANR	5706985	Identifier	it		5706889	0					
ANR	5706986	ReturnType	static inline RBIter		5706889	1					
ANR	5706987	Identifier	bound_iter		5706889	2					
ANR	5706988	ParameterList	"RBNode * x , void * data , RBComparator cmp , bool upper , bool backward"		5706889	3					
ANR	5706989	Parameter	RBNode * x	38:32:740:748	5706889	0	True				
ANR	5706990	ParameterType	RBNode *		5706889	0					
ANR	5706991	Identifier	x		5706889	1					
ANR	5706992	Parameter	void * data	38:43:751:760	5706889	1	True				
ANR	5706993	ParameterType	void *		5706889	0					
ANR	5706994	Identifier	data		5706889	1					
ANR	5706995	Parameter	RBComparator cmp	38:55:763:778	5706889	2	True				
ANR	5706996	ParameterType	RBComparator		5706889	0					
ANR	5706997	Identifier	cmp		5706889	1					
ANR	5706998	Parameter	bool upper	38:73:781:790	5706889	3	True				
ANR	5706999	ParameterType	bool		5706889	0					
ANR	5707000	Identifier	upper		5706889	1					
ANR	5707001	Parameter	bool backward	38:85:793:805	5706889	4	True				
ANR	5707002	ParameterType	bool		5706889	0					
ANR	5707003	Identifier	backward		5706889	1					
ANR	5707004	CFGEntryNode	ENTRY		5706889		True				
ANR	5707005	CFGExitNode	EXIT		5706889		True				
ANR	5707006	Symbol	* x		5706889						
ANR	5707007	Symbol	data		5706889						
ANR	5707008	Symbol	d		5706889						
ANR	5707009	Symbol	x -> child		5706889						
ANR	5707010	Symbol	cmp		5706889						
ANR	5707011	Symbol	upper		5706889						
ANR	5707012	Symbol	* x -> child		5706889						
ANR	5707013	Symbol	it		5706889						
ANR	5707014	Symbol	it . len		5706889						
ANR	5707015	Symbol	* it		5706889						
ANR	5707016	Symbol	* * x		5706889						
ANR	5707017	Symbol	x		5706889						
ANR	5707018	Symbol	backward		5706889						
ANR	5707019	Symbol	it . path		5706889						
ANR	5707020	Symbol	* it . path		5706889						
ANR	5707021	Function	r_rbtree_aug_delete	81:0:1679:3691							
ANR	5707022	FunctionDef	"r_rbtree_aug_delete (RBNode * * root , void * data , RBComparator cmp , RBNodeFree freefn , RBNodeSum sum)"		5707021	0					
ANR	5707023	CompoundStatement		81:110:1789:3691	5707021	0					
ANR	5707024	IdentifierDeclStatement	"RBNode head , * del = NULL , * * del_link = NULL , * g = NULL , * p = NULL , * q = & head , * path [ R_RBTREE_MAX_HEIGHT ] ;"	82:1:1792:1897	5707021	0	True				
ANR	5707025	IdentifierDecl	head		5707021	0					
ANR	5707026	IdentifierDeclType	RBNode		5707021	0					
ANR	5707027	Identifier	head		5707021	1					
ANR	5707028	IdentifierDecl	* del = NULL		5707021	1					
ANR	5707029	IdentifierDeclType	RBNode *		5707021	0					
ANR	5707030	Identifier	del		5707021	1					
ANR	5707031	AssignmentExpression	* del = NULL		5707021	2		=			
ANR	5707032	Identifier	NULL		5707021	0					
ANR	5707033	Identifier	NULL		5707021	1					
ANR	5707034	IdentifierDecl	* * del_link = NULL		5707021	2					
ANR	5707035	IdentifierDeclType	RBNode * *		5707021	0					
ANR	5707036	Identifier	del_link		5707021	1					
ANR	5707037	AssignmentExpression	* * del_link = NULL		5707021	2		=			
ANR	5707038	Identifier	NULL		5707021	0					
ANR	5707039	Identifier	NULL		5707021	1					
ANR	5707040	IdentifierDecl	* g = NULL		5707021	3					
ANR	5707041	IdentifierDeclType	RBNode *		5707021	0					
ANR	5707042	Identifier	g		5707021	1					
ANR	5707043	AssignmentExpression	* g = NULL		5707021	2		=			
ANR	5707044	Identifier	NULL		5707021	0					
ANR	5707045	Identifier	NULL		5707021	1					
ANR	5707046	IdentifierDecl	* p = NULL		5707021	4					
ANR	5707047	IdentifierDeclType	RBNode *		5707021	0					
ANR	5707048	Identifier	p		5707021	1					
ANR	5707049	AssignmentExpression	* p = NULL		5707021	2		=			
ANR	5707050	Identifier	NULL		5707021	0					
ANR	5707051	Identifier	NULL		5707021	1					
ANR	5707052	IdentifierDecl	* q = & head		5707021	5					
ANR	5707053	IdentifierDeclType	RBNode *		5707021	0					
ANR	5707054	Identifier	q		5707021	1					
ANR	5707055	AssignmentExpression	* q = & head		5707021	2		=			
ANR	5707056	Identifier	q		5707021	0					
ANR	5707057	UnaryOperationExpression	& head		5707021	1					
ANR	5707058	UnaryOperator	&		5707021	0					
ANR	5707059	Identifier	head		5707021	1					
ANR	5707060	IdentifierDecl	* path [ R_RBTREE_MAX_HEIGHT ]		5707021	6					
ANR	5707061	IdentifierDeclType	RBNode * [ R_RBTREE_MAX_HEIGHT ]		5707021	0					
ANR	5707062	Identifier	path		5707021	1					
ANR	5707063	Identifier	R_RBTREE_MAX_HEIGHT		5707021	2					
ANR	5707064	IdentifierDeclStatement	"int d = 1 , d2 , dep = 0 ;"	83:1:1900:1922	5707021	1	True				
ANR	5707065	IdentifierDecl	d = 1		5707021	0					
ANR	5707066	IdentifierDeclType	int		5707021	0					
ANR	5707067	Identifier	d		5707021	1					
ANR	5707068	AssignmentExpression	d = 1		5707021	2		=			
ANR	5707069	Identifier	d		5707021	0					
ANR	5707070	PrimaryExpression	1		5707021	1					
ANR	5707071	IdentifierDecl	d2		5707021	1					
ANR	5707072	IdentifierDeclType	int		5707021	0					
ANR	5707073	Identifier	d2		5707021	1					
ANR	5707074	IdentifierDecl	dep = 0		5707021	2					
ANR	5707075	IdentifierDeclType	int		5707021	0					
ANR	5707076	Identifier	dep		5707021	1					
ANR	5707077	AssignmentExpression	dep = 0		5707021	2		=			
ANR	5707078	Identifier	dep		5707021	0					
ANR	5707079	PrimaryExpression	0		5707021	1					
ANR	5707080	ExpressionStatement	head . child [ 0 ] = NULL	84:1:1925:1945	5707021	2	True				
ANR	5707081	AssignmentExpression	head . child [ 0 ] = NULL		5707021	0		=			
ANR	5707082	ArrayIndexing	head . child [ 0 ]		5707021	0					
ANR	5707083	MemberAccess	head . child		5707021	0					
ANR	5707084	Identifier	head		5707021	0					
ANR	5707085	Identifier	child		5707021	1					
ANR	5707086	PrimaryExpression	0		5707021	1					
ANR	5707087	Identifier	NULL		5707021	1					
ANR	5707088	ExpressionStatement	head . child [ 1 ] = * root	85:1:1948:1969	5707021	3	True				
ANR	5707089	AssignmentExpression	head . child [ 1 ] = * root		5707021	0		=			
ANR	5707090	ArrayIndexing	head . child [ 1 ]		5707021	0					
ANR	5707091	MemberAccess	head . child		5707021	0					
ANR	5707092	Identifier	head		5707021	0					
ANR	5707093	Identifier	child		5707021	1					
ANR	5707094	PrimaryExpression	1		5707021	1					
ANR	5707095	UnaryOperationExpression	* root		5707021	1					
ANR	5707096	UnaryOperator	*		5707021	0					
ANR	5707097	Identifier	root		5707021	1					
ANR	5707098	WhileStatement	while ( q -> child [ d ] )		5707021	4					
ANR	5707099	Condition	q -> child [ d ]	86:8:1979:1989	5707021	0	True				
ANR	5707100	ArrayIndexing	q -> child [ d ]		5707021	0					
ANR	5707101	PtrMemberAccess	q -> child		5707021	0					
ANR	5707102	Identifier	q		5707021	0					
ANR	5707103	Identifier	child		5707021	1					
ANR	5707104	Identifier	d		5707021	1					
ANR	5707105	CompoundStatement		6:21:202:202	5707021	1					
ANR	5707106	ExpressionStatement	d2 = d	87:2:1996:2002	5707021	0	True				
ANR	5707107	AssignmentExpression	d2 = d		5707021	0		=			
ANR	5707108	Identifier	d2		5707021	0					
ANR	5707109	Identifier	d		5707021	1					
ANR	5707110	ExpressionStatement	g = p	88:2:2006:2011	5707021	1	True				
ANR	5707111	AssignmentExpression	g = p		5707021	0		=			
ANR	5707112	Identifier	g		5707021	0					
ANR	5707113	Identifier	p		5707021	1					
ANR	5707114	ExpressionStatement	p = q	89:2:2015:2020	5707021	2	True				
ANR	5707115	AssignmentExpression	p = q		5707021	0		=			
ANR	5707116	Identifier	p		5707021	0					
ANR	5707117	Identifier	q		5707021	1					
ANR	5707118	IfStatement	if ( del_link )		5707021	3					
ANR	5707119	Condition	del_link	90:6:2028:2035	5707021	0	True				
ANR	5707120	Identifier	del_link		5707021	0					
ANR	5707121	CompoundStatement		10:16:248:248	5707021	1					
ANR	5707122	ExpressionStatement	d = 1	91:3:2043:2048	5707021	0	True				
ANR	5707123	AssignmentExpression	d = 1		5707021	0		=			
ANR	5707124	Identifier	d		5707021	0					
ANR	5707125	PrimaryExpression	1		5707021	1					
ANR	5707126	ElseStatement	else		5707021	0					
ANR	5707127	CompoundStatement		12:9:269:269	5707021	0					
ANR	5707128	ExpressionStatement	"d = cmp ( data , q -> child [ d2 ] )"	93:3:2064:2092	5707021	0	True				
ANR	5707129	AssignmentExpression	"d = cmp ( data , q -> child [ d2 ] )"		5707021	0		=			
ANR	5707130	Identifier	d		5707021	0					
ANR	5707131	CallExpression	"cmp ( data , q -> child [ d2 ] )"		5707021	1					
ANR	5707132	Callee	cmp		5707021	0					
ANR	5707133	Identifier	cmp		5707021	0					
ANR	5707134	ArgumentList	data		5707021	1					
ANR	5707135	Argument	data		5707021	0					
ANR	5707136	Identifier	data		5707021	0					
ANR	5707137	Argument	q -> child [ d2 ]		5707021	1					
ANR	5707138	ArrayIndexing	q -> child [ d2 ]		5707021	0					
ANR	5707139	PtrMemberAccess	q -> child		5707021	0					
ANR	5707140	Identifier	q		5707021	0					
ANR	5707141	Identifier	child		5707021	1					
ANR	5707142	Identifier	d2		5707021	1					
ANR	5707143	IfStatement	if ( d < 0 )		5707021	1					
ANR	5707144	Condition	d < 0	94:7:2101:2105	5707021	0	True				
ANR	5707145	RelationalExpression	d < 0		5707021	0		<			
ANR	5707146	Identifier	d		5707021	0					
ANR	5707147	PrimaryExpression	0		5707021	1					
ANR	5707148	CompoundStatement		14:14:318:318	5707021	1					
ANR	5707149	ExpressionStatement	d = 0	95:4:2114:2119	5707021	0	True				
ANR	5707150	AssignmentExpression	d = 0		5707021	0		=			
ANR	5707151	Identifier	d		5707021	0					
ANR	5707152	PrimaryExpression	0		5707021	1					
ANR	5707153	ElseStatement	else		5707021	0					
ANR	5707154	IfStatement	if ( d > 0 )		5707021	0					
ANR	5707155	Condition	d > 0	96:14:2135:2139	5707021	0	True				
ANR	5707156	RelationalExpression	d > 0		5707021	0		>			
ANR	5707157	Identifier	d		5707021	0					
ANR	5707158	PrimaryExpression	0		5707021	1					
ANR	5707159	CompoundStatement		16:21:352:352	5707021	1					
ANR	5707160	ExpressionStatement	d = 1	97:4:2148:2153	5707021	0	True				
ANR	5707161	AssignmentExpression	d = 1		5707021	0		=			
ANR	5707162	Identifier	d		5707021	0					
ANR	5707163	PrimaryExpression	1		5707021	1					
ANR	5707164	ElseStatement	else		5707021	0					
ANR	5707165	CompoundStatement		18:10:375:375	5707021	0					
ANR	5707166	ExpressionStatement	del_link = & q -> child [ d2 ]	99:4:2171:2195	5707021	0	True				
ANR	5707167	AssignmentExpression	del_link = & q -> child [ d2 ]		5707021	0		=			
ANR	5707168	Identifier	del_link		5707021	0					
ANR	5707169	UnaryOperationExpression	& q -> child [ d2 ]		5707021	1					
ANR	5707170	UnaryOperator	&		5707021	0					
ANR	5707171	ArrayIndexing	q -> child [ d2 ]		5707021	1					
ANR	5707172	PtrMemberAccess	q -> child		5707021	0					
ANR	5707173	Identifier	q		5707021	0					
ANR	5707174	Identifier	child		5707021	1					
ANR	5707175	Identifier	d2		5707021	1					
ANR	5707176	IfStatement	if ( q != & head )		5707021	4					
ANR	5707177	Condition	q != & head	102:6:2212:2221	5707021	0	True				
ANR	5707178	EqualityExpression	q != & head		5707021	0		!=			
ANR	5707179	Identifier	q		5707021	0					
ANR	5707180	UnaryOperationExpression	& head		5707021	1					
ANR	5707181	UnaryOperator	&		5707021	0					
ANR	5707182	Identifier	head		5707021	1					
ANR	5707183	CompoundStatement		22:18:434:434	5707021	1					
ANR	5707184	IfStatement	if ( dep >= R_RBTREE_MAX_HEIGHT )		5707021	0					
ANR	5707185	Condition	dep >= R_RBTREE_MAX_HEIGHT	103:7:2233:2258	5707021	0	True				
ANR	5707186	RelationalExpression	dep >= R_RBTREE_MAX_HEIGHT		5707021	0		>=			
ANR	5707187	Identifier	dep		5707021	0					
ANR	5707188	Identifier	R_RBTREE_MAX_HEIGHT		5707021	1					
ANR	5707189	CompoundStatement		23:35:471:471	5707021	1					
ANR	5707190	ExpressionStatement	"eprintf ( ""Too deep tree\\n"" )"	104:4:2267:2294	5707021	0	True				
ANR	5707191	CallExpression	"eprintf ( ""Too deep tree\\n"" )"		5707021	0					
ANR	5707192	Callee	eprintf		5707021	0					
ANR	5707193	Identifier	eprintf		5707021	0					
ANR	5707194	ArgumentList	"""Too deep tree\\n"""		5707021	1					
ANR	5707195	Argument	"""Too deep tree\\n"""		5707021	0					
ANR	5707196	PrimaryExpression	"""Too deep tree\\n"""		5707021	0					
ANR	5707197	BreakStatement	break ;	105:4:2300:2305	5707021	1	True				
ANR	5707198	ExpressionStatement	path [ dep ++ ] = q	107:3:2315:2330	5707021	1	True				
ANR	5707199	AssignmentExpression	path [ dep ++ ] = q		5707021	0		=			
ANR	5707200	ArrayIndexing	path [ dep ++ ]		5707021	0					
ANR	5707201	Identifier	path		5707021	0					
ANR	5707202	PostIncDecOperationExpression	dep ++		5707021	1					
ANR	5707203	Identifier	dep		5707021	0					
ANR	5707204	IncDec	++		5707021	1					
ANR	5707205	Identifier	q		5707021	1					
ANR	5707206	ExpressionStatement	q = q -> child [ d2 ]	109:2:2338:2354	5707021	5	True				
ANR	5707207	AssignmentExpression	q = q -> child [ d2 ]		5707021	0		=			
ANR	5707208	Identifier	q		5707021	0					
ANR	5707209	ArrayIndexing	q -> child [ d2 ]		5707021	1					
ANR	5707210	PtrMemberAccess	q -> child		5707021	0					
ANR	5707211	Identifier	q		5707021	0					
ANR	5707212	Identifier	child		5707021	1					
ANR	5707213	Identifier	d2		5707021	1					
ANR	5707214	IfStatement	if ( q -> red || red ( q -> child [ d ] ) )		5707021	6					
ANR	5707215	Condition	q -> red || red ( q -> child [ d ] )	110:6:2362:2388	5707021	0	True				
ANR	5707216	OrExpression	q -> red || red ( q -> child [ d ] )		5707021	0		||			
ANR	5707217	PtrMemberAccess	q -> red		5707021	0					
ANR	5707218	Identifier	q		5707021	0					
ANR	5707219	Identifier	red		5707021	1					
ANR	5707220	CallExpression	red ( q -> child [ d ] )		5707021	1					
ANR	5707221	Callee	red		5707021	0					
ANR	5707222	Identifier	red		5707021	0					
ANR	5707223	ArgumentList	q -> child [ d ]		5707021	1					
ANR	5707224	Argument	q -> child [ d ]		5707021	0					
ANR	5707225	ArrayIndexing	q -> child [ d ]		5707021	0					
ANR	5707226	PtrMemberAccess	q -> child		5707021	0					
ANR	5707227	Identifier	q		5707021	0					
ANR	5707228	Identifier	child		5707021	1					
ANR	5707229	Identifier	d		5707021	1					
ANR	5707230	CompoundStatement		30:35:601:601	5707021	1					
ANR	5707231	ContinueStatement	continue ;	111:3:2396:2404	5707021	0	True				
ANR	5707232	IfStatement	if ( red ( q -> child [ ! d ] ) )		5707021	7					
ANR	5707233	Condition	red ( q -> child [ ! d ] )	113:6:2416:2433	5707021	0	True				
ANR	5707234	CallExpression	red ( q -> child [ ! d ] )		5707021	0					
ANR	5707235	Callee	red		5707021	0					
ANR	5707236	Identifier	red		5707021	0					
ANR	5707237	ArgumentList	q -> child [ ! d ]		5707021	1					
ANR	5707238	Argument	q -> child [ ! d ]		5707021	0					
ANR	5707239	ArrayIndexing	q -> child [ ! d ]		5707021	0					
ANR	5707240	PtrMemberAccess	q -> child		5707021	0					
ANR	5707241	Identifier	q		5707021	0					
ANR	5707242	Identifier	child		5707021	1					
ANR	5707243	UnaryOperationExpression	! d		5707021	1					
ANR	5707244	UnaryOperator	!		5707021	0					
ANR	5707245	Identifier	d		5707021	1					
ANR	5707246	CompoundStatement		33:26:646:646	5707021	1					
ANR	5707247	IfStatement	if ( del_link && * del_link == q )		5707021	0					
ANR	5707248	Condition	del_link && * del_link == q	114:7:2445:2470	5707021	0	True				
ANR	5707249	AndExpression	del_link && * del_link == q		5707021	0		&&			
ANR	5707250	Identifier	del_link		5707021	0					
ANR	5707251	EqualityExpression	* del_link == q		5707021	1		==			
ANR	5707252	UnaryOperationExpression	* del_link		5707021	0					
ANR	5707253	UnaryOperator	*		5707021	0					
ANR	5707254	Identifier	del_link		5707021	1					
ANR	5707255	Identifier	q		5707021	1					
ANR	5707256	CompoundStatement		34:35:683:683	5707021	1					
ANR	5707257	ExpressionStatement	del_link = & q -> child [ ! d ] -> child [ d ]	115:4:2479:2513	5707021	0	True				
ANR	5707258	AssignmentExpression	del_link = & q -> child [ ! d ] -> child [ d ]		5707021	0		=			
ANR	5707259	Identifier	del_link		5707021	0					
ANR	5707260	UnaryOperationExpression	& q -> child [ ! d ] -> child [ d ]		5707021	1					
ANR	5707261	UnaryOperator	&		5707021	0					
ANR	5707262	ArrayIndexing	q -> child [ ! d ] -> child [ d ]		5707021	1					
ANR	5707263	PtrMemberAccess	q -> child [ ! d ] -> child		5707021	0					
ANR	5707264	ArrayIndexing	q -> child [ ! d ]		5707021	0					
ANR	5707265	PtrMemberAccess	q -> child		5707021	0					
ANR	5707266	Identifier	q		5707021	0					
ANR	5707267	Identifier	child		5707021	1					
ANR	5707268	UnaryOperationExpression	! d		5707021	1					
ANR	5707269	UnaryOperator	!		5707021	0					
ANR	5707270	Identifier	d		5707021	1					
ANR	5707271	Identifier	child		5707021	1					
ANR	5707272	Identifier	d		5707021	1					
ANR	5707273	ExpressionStatement	"p -> child [ d2 ] = zag ( q , ! d , sum )"	117:3:2523:2554	5707021	1	True				
ANR	5707274	AssignmentExpression	"p -> child [ d2 ] = zag ( q , ! d , sum )"		5707021	0		=			
ANR	5707275	ArrayIndexing	p -> child [ d2 ]		5707021	0					
ANR	5707276	PtrMemberAccess	p -> child		5707021	0					
ANR	5707277	Identifier	p		5707021	0					
ANR	5707278	Identifier	child		5707021	1					
ANR	5707279	Identifier	d2		5707021	1					
ANR	5707280	CallExpression	"zag ( q , ! d , sum )"		5707021	1					
ANR	5707281	Callee	zag		5707021	0					
ANR	5707282	Identifier	zag		5707021	0					
ANR	5707283	ArgumentList	q		5707021	1					
ANR	5707284	Argument	q		5707021	0					
ANR	5707285	Identifier	q		5707021	0					
ANR	5707286	Argument	! d		5707021	1					
ANR	5707287	UnaryOperationExpression	! d		5707021	0					
ANR	5707288	UnaryOperator	!		5707021	0					
ANR	5707289	Identifier	d		5707021	1					
ANR	5707290	Argument	sum		5707021	2					
ANR	5707291	Identifier	sum		5707021	0					
ANR	5707292	ExpressionStatement	p = p -> child [ d2 ]	118:3:2559:2575	5707021	2	True				
ANR	5707293	AssignmentExpression	p = p -> child [ d2 ]		5707021	0		=			
ANR	5707294	Identifier	p		5707021	0					
ANR	5707295	ArrayIndexing	p -> child [ d2 ]		5707021	1					
ANR	5707296	PtrMemberAccess	p -> child		5707021	0					
ANR	5707297	Identifier	p		5707021	0					
ANR	5707298	Identifier	child		5707021	1					
ANR	5707299	Identifier	d2		5707021	1					
ANR	5707300	IfStatement	if ( dep >= R_RBTREE_MAX_HEIGHT )		5707021	3					
ANR	5707301	Condition	dep >= R_RBTREE_MAX_HEIGHT	119:7:2584:2609	5707021	0	True				
ANR	5707302	RelationalExpression	dep >= R_RBTREE_MAX_HEIGHT		5707021	0		>=			
ANR	5707303	Identifier	dep		5707021	0					
ANR	5707304	Identifier	R_RBTREE_MAX_HEIGHT		5707021	1					
ANR	5707305	CompoundStatement		39:35:822:822	5707021	1					
ANR	5707306	ExpressionStatement	"eprintf ( ""Too deep tree\\n"" )"	120:4:2618:2645	5707021	0	True				
ANR	5707307	CallExpression	"eprintf ( ""Too deep tree\\n"" )"		5707021	0					
ANR	5707308	Callee	eprintf		5707021	0					
ANR	5707309	Identifier	eprintf		5707021	0					
ANR	5707310	ArgumentList	"""Too deep tree\\n"""		5707021	1					
ANR	5707311	Argument	"""Too deep tree\\n"""		5707021	0					
ANR	5707312	PrimaryExpression	"""Too deep tree\\n"""		5707021	0					
ANR	5707313	BreakStatement	break ;	121:4:2651:2656	5707021	1	True				
ANR	5707314	ExpressionStatement	path [ dep ++ ] = p	123:3:2666:2681	5707021	4	True				
ANR	5707315	AssignmentExpression	path [ dep ++ ] = p		5707021	0		=			
ANR	5707316	ArrayIndexing	path [ dep ++ ]		5707021	0					
ANR	5707317	Identifier	path		5707021	0					
ANR	5707318	PostIncDecOperationExpression	dep ++		5707021	1					
ANR	5707319	Identifier	dep		5707021	0					
ANR	5707320	IncDec	++		5707021	1					
ANR	5707321	Identifier	p		5707021	1					
ANR	5707322	ElseStatement	else		5707021	0					
ANR	5707323	CompoundStatement		45:3:907:932	5707021	0					
ANR	5707324	IdentifierDeclStatement	RBNode * s = p -> child [ ! d2 ] ;	125:3:2697:2722	5707021	0	True				
ANR	5707325	IdentifierDecl	* s = p -> child [ ! d2 ]		5707021	0					
ANR	5707326	IdentifierDeclType	RBNode *		5707021	0					
ANR	5707327	Identifier	s		5707021	1					
ANR	5707328	AssignmentExpression	* s = p -> child [ ! d2 ]		5707021	2		=			
ANR	5707329	Identifier	s		5707021	0					
ANR	5707330	ArrayIndexing	p -> child [ ! d2 ]		5707021	1					
ANR	5707331	PtrMemberAccess	p -> child		5707021	0					
ANR	5707332	Identifier	p		5707021	0					
ANR	5707333	Identifier	child		5707021	1					
ANR	5707334	UnaryOperationExpression	! d2		5707021	1					
ANR	5707335	UnaryOperator	!		5707021	0					
ANR	5707336	Identifier	d2		5707021	1					
ANR	5707337	IfStatement	if ( ! s )		5707021	1					
ANR	5707338	Condition	! s	126:7:2731:2733	5707021	0	True				
ANR	5707339	UnaryOperationExpression	! s		5707021	0					
ANR	5707340	UnaryOperator	!		5707021	0					
ANR	5707341	Identifier	s		5707021	1					
ANR	5707342	CompoundStatement		46:12:946:946	5707021	1					
ANR	5707343	ContinueStatement	continue ;	127:4:2742:2750	5707021	0	True				
ANR	5707344	IfStatement	if ( ! red ( s -> child [ 0 ] ) && ! red ( s -> child [ 1 ] ) )		5707021	2					
ANR	5707345	Condition	! red ( s -> child [ 0 ] ) && ! red ( s -> child [ 1 ] )	129:7:2764:2805	5707021	0	True				
ANR	5707346	AndExpression	! red ( s -> child [ 0 ] ) && ! red ( s -> child [ 1 ] )		5707021	0		&&			
ANR	5707347	UnaryOperationExpression	! red ( s -> child [ 0 ] )		5707021	0					
ANR	5707348	UnaryOperator	!		5707021	0					
ANR	5707349	CallExpression	red ( s -> child [ 0 ] )		5707021	1					
ANR	5707350	Callee	red		5707021	0					
ANR	5707351	Identifier	red		5707021	0					
ANR	5707352	ArgumentList	s -> child [ 0 ]		5707021	1					
ANR	5707353	Argument	s -> child [ 0 ]		5707021	0					
ANR	5707354	ArrayIndexing	s -> child [ 0 ]		5707021	0					
ANR	5707355	PtrMemberAccess	s -> child		5707021	0					
ANR	5707356	Identifier	s		5707021	0					
ANR	5707357	Identifier	child		5707021	1					
ANR	5707358	PrimaryExpression	0		5707021	1					
ANR	5707359	UnaryOperationExpression	! red ( s -> child [ 1 ] )		5707021	1					
ANR	5707360	UnaryOperator	!		5707021	0					
ANR	5707361	CallExpression	red ( s -> child [ 1 ] )		5707021	1					
ANR	5707362	Callee	red		5707021	0					
ANR	5707363	Identifier	red		5707021	0					
ANR	5707364	ArgumentList	s -> child [ 1 ]		5707021	1					
ANR	5707365	Argument	s -> child [ 1 ]		5707021	0					
ANR	5707366	ArrayIndexing	s -> child [ 1 ]		5707021	0					
ANR	5707367	PtrMemberAccess	s -> child		5707021	0					
ANR	5707368	Identifier	s		5707021	0					
ANR	5707369	Identifier	child		5707021	1					
ANR	5707370	PrimaryExpression	1		5707021	1					
ANR	5707371	CompoundStatement		49:51:1018:1018	5707021	1					
ANR	5707372	ExpressionStatement	p -> red = false	130:4:2814:2828	5707021	0	True				
ANR	5707373	AssignmentExpression	p -> red = false		5707021	0		=			
ANR	5707374	PtrMemberAccess	p -> red		5707021	0					
ANR	5707375	Identifier	p		5707021	0					
ANR	5707376	Identifier	red		5707021	1					
ANR	5707377	Identifier	false		5707021	1					
ANR	5707378	ExpressionStatement	q -> red = s -> red = true	131:4:2834:2856	5707021	1	True				
ANR	5707379	AssignmentExpression	q -> red = s -> red = true		5707021	0		=			
ANR	5707380	PtrMemberAccess	q -> red		5707021	0					
ANR	5707381	Identifier	q		5707021	0					
ANR	5707382	Identifier	red		5707021	1					
ANR	5707383	AssignmentExpression	s -> red = true		5707021	1		=			
ANR	5707384	PtrMemberAccess	s -> red		5707021	0					
ANR	5707385	Identifier	s		5707021	0					
ANR	5707386	Identifier	red		5707021	1					
ANR	5707387	Identifier	true		5707021	1					
ANR	5707388	ElseStatement	else		5707021	0					
ANR	5707389	CompoundStatement		54:4:1115:1124	5707021	0					
ANR	5707390	IdentifierDeclStatement	int d3 = g -> child [ 0 ] != p ;	133:4:2874:2899	5707021	0	True				
ANR	5707391	IdentifierDecl	d3 = g -> child [ 0 ] != p		5707021	0					
ANR	5707392	IdentifierDeclType	int		5707021	0					
ANR	5707393	Identifier	d3		5707021	1					
ANR	5707394	AssignmentExpression	d3 = g -> child [ 0 ] != p		5707021	2		=			
ANR	5707395	Identifier	d3		5707021	0					
ANR	5707396	EqualityExpression	g -> child [ 0 ] != p		5707021	1		!=			
ANR	5707397	ArrayIndexing	g -> child [ 0 ]		5707021	0					
ANR	5707398	PtrMemberAccess	g -> child		5707021	0					
ANR	5707399	Identifier	g		5707021	0					
ANR	5707400	Identifier	child		5707021	1					
ANR	5707401	PrimaryExpression	0		5707021	1					
ANR	5707402	Identifier	p		5707021	1					
ANR	5707403	IdentifierDeclStatement	RBNode * t ;	134:4:2905:2914	5707021	1	True				
ANR	5707404	IdentifierDecl	* t		5707021	0					
ANR	5707405	IdentifierDeclType	RBNode *		5707021	0					
ANR	5707406	Identifier	t		5707021	1					
ANR	5707407	IfStatement	if ( red ( s -> child [ d2 ] ) )		5707021	2					
ANR	5707408	Condition	red ( s -> child [ d2 ] )	135:8:2924:2941	5707021	0	True				
ANR	5707409	CallExpression	red ( s -> child [ d2 ] )		5707021	0					
ANR	5707410	Callee	red		5707021	0					
ANR	5707411	Identifier	red		5707021	0					
ANR	5707412	ArgumentList	s -> child [ d2 ]		5707021	1					
ANR	5707413	Argument	s -> child [ d2 ]		5707021	0					
ANR	5707414	ArrayIndexing	s -> child [ d2 ]		5707021	0					
ANR	5707415	PtrMemberAccess	s -> child		5707021	0					
ANR	5707416	Identifier	s		5707021	0					
ANR	5707417	Identifier	child		5707021	1					
ANR	5707418	Identifier	d2		5707021	1					
ANR	5707419	CompoundStatement		55:28:1154:1154	5707021	1					
ANR	5707420	IfStatement	if ( del_link && * del_link == p )		5707021	0					
ANR	5707421	Condition	del_link && * del_link == p	136:9:2955:2980	5707021	0	True				
ANR	5707422	AndExpression	del_link && * del_link == p		5707021	0		&&			
ANR	5707423	Identifier	del_link		5707021	0					
ANR	5707424	EqualityExpression	* del_link == p		5707021	1		==			
ANR	5707425	UnaryOperationExpression	* del_link		5707021	0					
ANR	5707426	UnaryOperator	*		5707021	0					
ANR	5707427	Identifier	del_link		5707021	1					
ANR	5707428	Identifier	p		5707021	1					
ANR	5707429	CompoundStatement		56:37:1193:1193	5707021	1					
ANR	5707430	ExpressionStatement	del_link = & s -> child [ d2 ] -> child [ d2 ]	137:6:2991:3026	5707021	0	True				
ANR	5707431	AssignmentExpression	del_link = & s -> child [ d2 ] -> child [ d2 ]		5707021	0		=			
ANR	5707432	Identifier	del_link		5707021	0					
ANR	5707433	UnaryOperationExpression	& s -> child [ d2 ] -> child [ d2 ]		5707021	1					
ANR	5707434	UnaryOperator	&		5707021	0					
ANR	5707435	ArrayIndexing	s -> child [ d2 ] -> child [ d2 ]		5707021	1					
ANR	5707436	PtrMemberAccess	s -> child [ d2 ] -> child		5707021	0					
ANR	5707437	ArrayIndexing	s -> child [ d2 ]		5707021	0					
ANR	5707438	PtrMemberAccess	s -> child		5707021	0					
ANR	5707439	Identifier	s		5707021	0					
ANR	5707440	Identifier	child		5707021	1					
ANR	5707441	Identifier	d2		5707021	1					
ANR	5707442	Identifier	child		5707021	1					
ANR	5707443	Identifier	d2		5707021	1					
ANR	5707444	ExpressionStatement	"t = zig_zag ( p , ! d2 , sum )"	139:5:3040:3065	5707021	1	True				
ANR	5707445	AssignmentExpression	"t = zig_zag ( p , ! d2 , sum )"		5707021	0		=			
ANR	5707446	Identifier	t		5707021	0					
ANR	5707447	CallExpression	"zig_zag ( p , ! d2 , sum )"		5707021	1					
ANR	5707448	Callee	zig_zag		5707021	0					
ANR	5707449	Identifier	zig_zag		5707021	0					
ANR	5707450	ArgumentList	p		5707021	1					
ANR	5707451	Argument	p		5707021	0					
ANR	5707452	Identifier	p		5707021	0					
ANR	5707453	Argument	! d2		5707021	1					
ANR	5707454	UnaryOperationExpression	! d2		5707021	0					
ANR	5707455	UnaryOperator	!		5707021	0					
ANR	5707456	Identifier	d2		5707021	1					
ANR	5707457	Argument	sum		5707021	2					
ANR	5707458	Identifier	sum		5707021	0					
ANR	5707459	ElseStatement	else		5707021	0					
ANR	5707460	CompoundStatement		60:11:1288:1288	5707021	0					
ANR	5707461	IfStatement	if ( del_link && * del_link == p )		5707021	0					
ANR	5707462	Condition	del_link && * del_link == p	141:9:3089:3114	5707021	0	True				
ANR	5707463	AndExpression	del_link && * del_link == p		5707021	0		&&			
ANR	5707464	Identifier	del_link		5707021	0					
ANR	5707465	EqualityExpression	* del_link == p		5707021	1		==			
ANR	5707466	UnaryOperationExpression	* del_link		5707021	0					
ANR	5707467	UnaryOperator	*		5707021	0					
ANR	5707468	Identifier	del_link		5707021	1					
ANR	5707469	Identifier	p		5707021	1					
ANR	5707470	CompoundStatement		61:37:1327:1327	5707021	1					
ANR	5707471	ExpressionStatement	del_link = & s -> child [ d2 ]	142:6:3125:3149	5707021	0	True				
ANR	5707472	AssignmentExpression	del_link = & s -> child [ d2 ]		5707021	0		=			
ANR	5707473	Identifier	del_link		5707021	0					
ANR	5707474	UnaryOperationExpression	& s -> child [ d2 ]		5707021	1					
ANR	5707475	UnaryOperator	&		5707021	0					
ANR	5707476	ArrayIndexing	s -> child [ d2 ]		5707021	1					
ANR	5707477	PtrMemberAccess	s -> child		5707021	0					
ANR	5707478	Identifier	s		5707021	0					
ANR	5707479	Identifier	child		5707021	1					
ANR	5707480	Identifier	d2		5707021	1					
ANR	5707481	ExpressionStatement	"t = zag ( p , ! d2 , sum )"	144:5:3163:3184	5707021	1	True				
ANR	5707482	AssignmentExpression	"t = zag ( p , ! d2 , sum )"		5707021	0		=			
ANR	5707483	Identifier	t		5707021	0					
ANR	5707484	CallExpression	"zag ( p , ! d2 , sum )"		5707021	1					
ANR	5707485	Callee	zag		5707021	0					
ANR	5707486	Identifier	zag		5707021	0					
ANR	5707487	ArgumentList	p		5707021	1					
ANR	5707488	Argument	p		5707021	0					
ANR	5707489	Identifier	p		5707021	0					
ANR	5707490	Argument	! d2		5707021	1					
ANR	5707491	UnaryOperationExpression	! d2		5707021	0					
ANR	5707492	UnaryOperator	!		5707021	0					
ANR	5707493	Identifier	d2		5707021	1					
ANR	5707494	Argument	sum		5707021	2					
ANR	5707495	Identifier	sum		5707021	0					
ANR	5707496	ExpressionStatement	t -> red = q -> red = true	146:4:3196:3218	5707021	3	True				
ANR	5707497	AssignmentExpression	t -> red = q -> red = true		5707021	0		=			
ANR	5707498	PtrMemberAccess	t -> red		5707021	0					
ANR	5707499	Identifier	t		5707021	0					
ANR	5707500	Identifier	red		5707021	1					
ANR	5707501	AssignmentExpression	q -> red = true		5707021	1		=			
ANR	5707502	PtrMemberAccess	q -> red		5707021	0					
ANR	5707503	Identifier	q		5707021	0					
ANR	5707504	Identifier	red		5707021	1					
ANR	5707505	Identifier	true		5707021	1					
ANR	5707506	ExpressionStatement	t -> child [ 0 ] -> red = t -> child [ 1 ] -> red = false	147:4:3224:3267	5707021	4	True				
ANR	5707507	AssignmentExpression	t -> child [ 0 ] -> red = t -> child [ 1 ] -> red = false		5707021	0		=			
ANR	5707508	PtrMemberAccess	t -> child [ 0 ] -> red		5707021	0					
ANR	5707509	ArrayIndexing	t -> child [ 0 ]		5707021	0					
ANR	5707510	PtrMemberAccess	t -> child		5707021	0					
ANR	5707511	Identifier	t		5707021	0					
ANR	5707512	Identifier	child		5707021	1					
ANR	5707513	PrimaryExpression	0		5707021	1					
ANR	5707514	Identifier	red		5707021	1					
ANR	5707515	AssignmentExpression	t -> child [ 1 ] -> red = false		5707021	1		=			
ANR	5707516	PtrMemberAccess	t -> child [ 1 ] -> red		5707021	0					
ANR	5707517	ArrayIndexing	t -> child [ 1 ]		5707021	0					
ANR	5707518	PtrMemberAccess	t -> child		5707021	0					
ANR	5707519	Identifier	t		5707021	0					
ANR	5707520	Identifier	child		5707021	1					
ANR	5707521	PrimaryExpression	1		5707021	1					
ANR	5707522	Identifier	red		5707021	1					
ANR	5707523	Identifier	false		5707021	1					
ANR	5707524	ExpressionStatement	g -> child [ d3 ] = t	148:4:3273:3289	5707021	5	True				
ANR	5707525	AssignmentExpression	g -> child [ d3 ] = t		5707021	0		=			
ANR	5707526	ArrayIndexing	g -> child [ d3 ]		5707021	0					
ANR	5707527	PtrMemberAccess	g -> child		5707021	0					
ANR	5707528	Identifier	g		5707021	0					
ANR	5707529	Identifier	child		5707021	1					
ANR	5707530	Identifier	d3		5707021	1					
ANR	5707531	Identifier	t		5707021	1					
ANR	5707532	ExpressionStatement	path [ dep - 1 ] = t	149:4:3295:3312	5707021	6	True				
ANR	5707533	AssignmentExpression	path [ dep - 1 ] = t		5707021	0		=			
ANR	5707534	ArrayIndexing	path [ dep - 1 ]		5707021	0					
ANR	5707535	Identifier	path		5707021	0					
ANR	5707536	AdditiveExpression	dep - 1		5707021	1		-			
ANR	5707537	Identifier	dep		5707021	0					
ANR	5707538	PrimaryExpression	1		5707021	1					
ANR	5707539	Identifier	t		5707021	1					
ANR	5707540	ExpressionStatement	path [ dep ++ ] = p	150:4:3318:3333	5707021	7	True				
ANR	5707541	AssignmentExpression	path [ dep ++ ] = p		5707021	0		=			
ANR	5707542	ArrayIndexing	path [ dep ++ ]		5707021	0					
ANR	5707543	Identifier	path		5707021	0					
ANR	5707544	PostIncDecOperationExpression	dep ++		5707021	1					
ANR	5707545	Identifier	dep		5707021	0					
ANR	5707546	IncDec	++		5707021	1					
ANR	5707547	Identifier	p		5707021	1					
ANR	5707548	IfStatement	if ( del_link )		5707021	5					
ANR	5707549	Condition	del_link	154:5:3352:3359	5707021	0	True				
ANR	5707550	Identifier	del_link		5707021	0					
ANR	5707551	CompoundStatement		74:15:1572:1572	5707021	1					
ANR	5707552	ExpressionStatement	del = * del_link	155:2:3366:3381	5707021	0	True				
ANR	5707553	AssignmentExpression	del = * del_link		5707021	0		=			
ANR	5707554	Identifier	del		5707021	0					
ANR	5707555	UnaryOperationExpression	* del_link		5707021	1					
ANR	5707556	UnaryOperator	*		5707021	0					
ANR	5707557	Identifier	del_link		5707021	1					
ANR	5707558	ExpressionStatement	p -> child [ q != p -> child [ 0 ] ] = q -> child [ q -> child [ 0 ] == NULL ]	156:2:3385:3443	5707021	1	True				
ANR	5707559	AssignmentExpression	p -> child [ q != p -> child [ 0 ] ] = q -> child [ q -> child [ 0 ] == NULL ]		5707021	0		=			
ANR	5707560	ArrayIndexing	p -> child [ q != p -> child [ 0 ] ]		5707021	0					
ANR	5707561	PtrMemberAccess	p -> child		5707021	0					
ANR	5707562	Identifier	p		5707021	0					
ANR	5707563	Identifier	child		5707021	1					
ANR	5707564	EqualityExpression	q != p -> child [ 0 ]		5707021	1		!=			
ANR	5707565	Identifier	q		5707021	0					
ANR	5707566	ArrayIndexing	p -> child [ 0 ]		5707021	1					
ANR	5707567	PtrMemberAccess	p -> child		5707021	0					
ANR	5707568	Identifier	p		5707021	0					
ANR	5707569	Identifier	child		5707021	1					
ANR	5707570	PrimaryExpression	0		5707021	1					
ANR	5707571	ArrayIndexing	q -> child [ q -> child [ 0 ] == NULL ]		5707021	1					
ANR	5707572	PtrMemberAccess	q -> child		5707021	0					
ANR	5707573	Identifier	q		5707021	0					
ANR	5707574	Identifier	child		5707021	1					
ANR	5707575	EqualityExpression	q -> child [ 0 ] == NULL		5707021	1		==			
ANR	5707576	ArrayIndexing	q -> child [ 0 ]		5707021	0					
ANR	5707577	PtrMemberAccess	q -> child		5707021	0					
ANR	5707578	Identifier	q		5707021	0					
ANR	5707579	Identifier	child		5707021	1					
ANR	5707580	PrimaryExpression	0		5707021	1					
ANR	5707581	Identifier	NULL		5707021	1					
ANR	5707582	IfStatement	if ( del != q )		5707021	2					
ANR	5707583	Condition	del != q	157:6:3451:3458	5707021	0	True				
ANR	5707584	EqualityExpression	del != q		5707021	0		!=			
ANR	5707585	Identifier	del		5707021	0					
ANR	5707586	Identifier	q		5707021	1					
ANR	5707587	CompoundStatement		77:16:1671:1671	5707021	1					
ANR	5707588	ExpressionStatement	* q = * del	158:3:3466:3475	5707021	0	True				
ANR	5707589	AssignmentExpression	* q = * del		5707021	0		=			
ANR	5707590	UnaryOperationExpression	* q		5707021	0					
ANR	5707591	UnaryOperator	*		5707021	0					
ANR	5707592	Identifier	q		5707021	1					
ANR	5707593	UnaryOperationExpression	* del		5707021	1					
ANR	5707594	UnaryOperator	*		5707021	0					
ANR	5707595	Identifier	del		5707021	1					
ANR	5707596	ExpressionStatement	* del_link = q	159:3:3480:3493	5707021	1	True				
ANR	5707597	AssignmentExpression	* del_link = q		5707021	0		=			
ANR	5707598	UnaryOperationExpression	* del_link		5707021	0					
ANR	5707599	UnaryOperator	*		5707021	0					
ANR	5707600	Identifier	del_link		5707021	1					
ANR	5707601	Identifier	q		5707021	1					
ANR	5707602	IfStatement	if ( freefn )		5707021	3					
ANR	5707603	Condition	freefn	161:6:3505:3510	5707021	0	True				
ANR	5707604	Identifier	freefn		5707021	0					
ANR	5707605	CompoundStatement		81:14:1723:1723	5707021	1					
ANR	5707606	ExpressionStatement	freefn ( del )	162:3:3518:3530	5707021	0	True				
ANR	5707607	CallExpression	freefn ( del )		5707021	0					
ANR	5707608	Callee	freefn		5707021	0					
ANR	5707609	Identifier	freefn		5707021	0					
ANR	5707610	ArgumentList	del		5707021	1					
ANR	5707611	Argument	del		5707021	0					
ANR	5707612	Identifier	del		5707021	0					
ANR	5707613	IfStatement	if ( sum )		5707021	6					
ANR	5707614	Condition	sum	165:5:3544:3546	5707021	0	True				
ANR	5707615	Identifier	sum		5707021	0					
ANR	5707616	CompoundStatement		85:10:1759:1759	5707021	1					
ANR	5707617	WhileStatement	while ( dep -- )		5707021	0					
ANR	5707618	Condition	dep --	166:9:3560:3564	5707021	0	True				
ANR	5707619	PostIncDecOperationExpression	dep --		5707021	0					
ANR	5707620	Identifier	dep		5707021	0					
ANR	5707621	IncDec	--		5707021	1					
ANR	5707622	CompoundStatement		86:16:1777:1777	5707021	1					
ANR	5707623	ExpressionStatement	sum ( path [ dep ] == del ? q : path [ dep ] )	167:3:3572:3610	5707021	0	True				
ANR	5707624	CallExpression	sum ( path [ dep ] == del ? q : path [ dep ] )		5707021	0					
ANR	5707625	Callee	sum		5707021	0					
ANR	5707626	Identifier	sum		5707021	0					
ANR	5707627	ArgumentList	path [ dep ] == del ? q : path [ dep ]		5707021	1					
ANR	5707628	Argument	path [ dep ] == del ? q : path [ dep ]		5707021	0					
ANR	5707629	ConditionalExpression	path [ dep ] == del ? q : path [ dep ]		5707021	0					
ANR	5707630	Condition	path [ dep ] == del		5707021	0					
ANR	5707631	EqualityExpression	path [ dep ] == del		5707021	0		==			
ANR	5707632	ArrayIndexing	path [ dep ]		5707021	0					
ANR	5707633	Identifier	path		5707021	0					
ANR	5707634	Identifier	dep		5707021	1					
ANR	5707635	Identifier	del		5707021	1					
ANR	5707636	Identifier	q		5707021	1					
ANR	5707637	ArrayIndexing	path [ dep ]		5707021	2					
ANR	5707638	Identifier	path		5707021	0					
ANR	5707639	Identifier	dep		5707021	1					
ANR	5707640	IfStatement	if ( ( * root = head . child [ 1 ] ) )		5707021	7					
ANR	5707641	Condition	* root = head . child [ 1 ]	170:5:3624:3646	5707021	0	True				
ANR	5707642	AssignmentExpression	* root = head . child [ 1 ]		5707021	0		=			
ANR	5707643	UnaryOperationExpression	* root		5707021	0					
ANR	5707644	UnaryOperator	*		5707021	0					
ANR	5707645	Identifier	root		5707021	1					
ANR	5707646	ArrayIndexing	head . child [ 1 ]		5707021	1					
ANR	5707647	MemberAccess	head . child		5707021	0					
ANR	5707648	Identifier	head		5707021	0					
ANR	5707649	Identifier	child		5707021	1					
ANR	5707650	PrimaryExpression	1		5707021	1					
ANR	5707651	CompoundStatement		90:30:1859:1859	5707021	1					
ANR	5707652	ExpressionStatement	( * root ) -> red = false	171:2:3653:3673	5707021	0	True				
ANR	5707653	AssignmentExpression	( * root ) -> red = false		5707021	0		=			
ANR	5707654	PtrMemberAccess	( * root ) -> red		5707021	0					
ANR	5707655	UnaryOperationExpression	* root		5707021	0					
ANR	5707656	UnaryOperator	*		5707021	0					
ANR	5707657	Identifier	root		5707021	1					
ANR	5707658	Identifier	red		5707021	1					
ANR	5707659	Identifier	false		5707021	1					
ANR	5707660	ReturnStatement	return del ;	173:1:3679:3689	5707021	8	True				
ANR	5707661	Identifier	del		5707021	0					
ANR	5707662	ReturnType	R_API bool		5707021	1					
ANR	5707663	Identifier	r_rbtree_aug_delete		5707021	2					
ANR	5707664	ParameterList	"RBNode * * root , void * data , RBComparator cmp , RBNodeFree freefn , RBNodeSum sum"		5707021	3					
ANR	5707665	Parameter	RBNode * * root	81:31:1710:1722	5707021	0	True				
ANR	5707666	ParameterType	RBNode * *		5707021	0					
ANR	5707667	Identifier	root		5707021	1					
ANR	5707668	Parameter	void * data	81:46:1725:1734	5707021	1	True				
ANR	5707669	ParameterType	void *		5707021	0					
ANR	5707670	Identifier	data		5707021	1					
ANR	5707671	Parameter	RBComparator cmp	81:58:1737:1752	5707021	2	True				
ANR	5707672	ParameterType	RBComparator		5707021	0					
ANR	5707673	Identifier	cmp		5707021	1					
ANR	5707674	Parameter	RBNodeFree freefn	81:76:1755:1771	5707021	3	True				
ANR	5707675	ParameterType	RBNodeFree		5707021	0					
ANR	5707676	Identifier	freefn		5707021	1					
ANR	5707677	Parameter	RBNodeSum sum	81:95:1774:1786	5707021	4	True				
ANR	5707678	ParameterType	RBNodeSum		5707021	0					
ANR	5707679	Identifier	sum		5707021	1					
ANR	5707680	CFGEntryNode	ENTRY		5707021		True				
ANR	5707681	CFGExitNode	EXIT		5707021		True				
ANR	5707682	Symbol	data		5707021						
ANR	5707683	Symbol	R_RBTREE_MAX_HEIGHT		5707021						
ANR	5707684	Symbol	* head		5707021						
ANR	5707685	Symbol	del		5707021						
ANR	5707686	Symbol	dep		5707021						
ANR	5707687	Symbol	t -> child [ 0 ] -> red		5707021						
ANR	5707688	Symbol	red		5707021						
ANR	5707689	Symbol	path		5707021						
ANR	5707690	Symbol	q -> child [ ! d ] -> child		5707021						
ANR	5707691	Symbol	* * root		5707021						
ANR	5707692	Symbol	* d3		5707021						
ANR	5707693	Symbol	* d2		5707021						
ANR	5707694	Symbol	zag		5707021						
ANR	5707695	Symbol	s -> child [ d2 ] -> child		5707021						
ANR	5707696	Symbol	NULL		5707021						
ANR	5707697	Symbol	* * g		5707021						
ANR	5707698	Symbol	* * q -> child		5707021						
ANR	5707699	Symbol	* * d		5707021						
ANR	5707700	Symbol	del_link		5707021						
ANR	5707701	Symbol	* * * t		5707021						
ANR	5707702	Symbol	* * * s		5707021						
ANR	5707703	Symbol	* NULL		5707021						
ANR	5707704	Symbol	freefn		5707021						
ANR	5707705	Symbol	* * * q		5707021						
ANR	5707706	Symbol	* * * p		5707021						
ANR	5707707	Symbol	q -> child		5707021						
ANR	5707708	Symbol	g -> child		5707021						
ANR	5707709	Symbol	* q -> child		5707021						
ANR	5707710	Symbol	true		5707021						
ANR	5707711	Symbol	* * d2		5707021						
ANR	5707712	Symbol	* root		5707021						
ANR	5707713	Symbol	q -> red		5707021						
ANR	5707714	Symbol	zig_zag		5707021						
ANR	5707715	Symbol	* dep		5707021						
ANR	5707716	Symbol	cmp		5707021						
ANR	5707717	Symbol	* * s -> child		5707021						
ANR	5707718	Symbol	sum		5707021						
ANR	5707719	Symbol	* del		5707021						
ANR	5707720	Symbol	* * p -> child		5707021						
ANR	5707721	Symbol	d2		5707021						
ANR	5707722	Symbol	d3		5707021						
ANR	5707723	Symbol	head		5707021						
ANR	5707724	Symbol	* g -> child		5707021						
ANR	5707725	Symbol	& head		5707021						
ANR	5707726	Symbol	head . child		5707021						
ANR	5707727	Symbol	* p -> child		5707021						
ANR	5707728	Symbol	root		5707021						
ANR	5707729	Symbol	* * t		5707021						
ANR	5707730	Symbol	p -> child		5707021						
ANR	5707731	Symbol	* * s		5707021						
ANR	5707732	Symbol	* * q		5707021						
ANR	5707733	Symbol	* * p		5707021						
ANR	5707734	Symbol	s -> child		5707021						
ANR	5707735	Symbol	* head . child		5707021						
ANR	5707736	Symbol	p -> red		5707021						
ANR	5707737	Symbol	s -> red		5707021						
ANR	5707738	Symbol	t -> red		5707021						
ANR	5707739	Symbol	d		5707021						
ANR	5707740	Symbol	g		5707021						
ANR	5707741	Symbol	false		5707021						
ANR	5707742	Symbol	* t -> child		5707021						
ANR	5707743	Symbol	* s -> child		5707021						
ANR	5707744	Symbol	* d		5707021						
ANR	5707745	Symbol	* * t -> child		5707021						
ANR	5707746	Symbol	p		5707021						
ANR	5707747	Symbol	q		5707021						
ANR	5707748	Symbol	* g		5707021						
ANR	5707749	Symbol	( * root ) -> red		5707021						
ANR	5707750	Symbol	t -> child		5707021						
ANR	5707751	Symbol	s		5707021						
ANR	5707752	Symbol	t		5707021						
ANR	5707753	Symbol	t -> child [ 1 ] -> red		5707021						
ANR	5707754	Symbol	* path		5707021						
ANR	5707755	Symbol	* del_link		5707021						
ANR	5707756	Symbol	* p		5707021						
ANR	5707757	Symbol	* q		5707021						
ANR	5707758	Symbol	* s		5707021						
ANR	5707759	Symbol	* t		5707021						
ANR	5707760	Function	r_rbtree_aug_insert	177:0:3788:5056							
ANR	5707761	FunctionDef	"r_rbtree_aug_insert (RBNode * * root , void * data , RBNode * node , RBComparator cmp , RBNodeSum sum)"		5707760	0					
ANR	5707762	CompoundStatement		177:105:3893:5056	5707760	0					
ANR	5707763	ExpressionStatement	node -> child [ 0 ] = node -> child [ 1 ] = NULL	178:1:3896:3934	5707760	0	True				
ANR	5707764	AssignmentExpression	node -> child [ 0 ] = node -> child [ 1 ] = NULL		5707760	0		=			
ANR	5707765	ArrayIndexing	node -> child [ 0 ]		5707760	0					
ANR	5707766	PtrMemberAccess	node -> child		5707760	0					
ANR	5707767	Identifier	node		5707760	0					
ANR	5707768	Identifier	child		5707760	1					
ANR	5707769	PrimaryExpression	0		5707760	1					
ANR	5707770	AssignmentExpression	node -> child [ 1 ] = NULL		5707760	1		=			
ANR	5707771	ArrayIndexing	node -> child [ 1 ]		5707760	0					
ANR	5707772	PtrMemberAccess	node -> child		5707760	0					
ANR	5707773	Identifier	node		5707760	0					
ANR	5707774	Identifier	child		5707760	1					
ANR	5707775	PrimaryExpression	1		5707760	1					
ANR	5707776	Identifier	NULL		5707760	1					
ANR	5707777	IfStatement	if ( ! * root )		5707760	1					
ANR	5707778	Condition	! * root	179:5:3941:3946	5707760	0	True				
ANR	5707779	UnaryOperationExpression	! * root		5707760	0					
ANR	5707780	UnaryOperator	!		5707760	0					
ANR	5707781	UnaryOperationExpression	* root		5707760	1					
ANR	5707782	UnaryOperator	*		5707760	0					
ANR	5707783	Identifier	root		5707760	1					
ANR	5707784	CompoundStatement		3:13:55:55	5707760	1					
ANR	5707785	ExpressionStatement	* root = node	180:2:3953:3965	5707760	0	True				
ANR	5707786	AssignmentExpression	* root = node		5707760	0		=			
ANR	5707787	UnaryOperationExpression	* root		5707760	0					
ANR	5707788	UnaryOperator	*		5707760	0					
ANR	5707789	Identifier	root		5707760	1					
ANR	5707790	Identifier	node		5707760	1					
ANR	5707791	ExpressionStatement	node -> red = false	181:2:3969:3986	5707760	1	True				
ANR	5707792	AssignmentExpression	node -> red = false		5707760	0		=			
ANR	5707793	PtrMemberAccess	node -> red		5707760	0					
ANR	5707794	Identifier	node		5707760	0					
ANR	5707795	Identifier	red		5707760	1					
ANR	5707796	Identifier	false		5707760	1					
ANR	5707797	IfStatement	if ( sum )		5707760	2					
ANR	5707798	Condition	sum	182:6:3994:3996	5707760	0	True				
ANR	5707799	Identifier	sum		5707760	0					
ANR	5707800	CompoundStatement		6:11:105:105	5707760	1					
ANR	5707801	ExpressionStatement	sum ( node )	183:3:4004:4014	5707760	0	True				
ANR	5707802	CallExpression	sum ( node )		5707760	0					
ANR	5707803	Callee	sum		5707760	0					
ANR	5707804	Identifier	sum		5707760	0					
ANR	5707805	ArgumentList	node		5707760	1					
ANR	5707806	Argument	node		5707760	0					
ANR	5707807	Identifier	node		5707760	0					
ANR	5707808	ReturnStatement	return ;	185:2:4022:4028	5707760	3	True				
ANR	5707809	IdentifierDeclStatement	"RBNode * t = NULL , * g = NULL , * p = NULL , * q = * root ;"	187:1:4034:4084	5707760	2	True				
ANR	5707810	IdentifierDecl	* t = NULL		5707760	0					
ANR	5707811	IdentifierDeclType	RBNode *		5707760	0					
ANR	5707812	Identifier	t		5707760	1					
ANR	5707813	AssignmentExpression	* t = NULL		5707760	2		=			
ANR	5707814	Identifier	NULL		5707760	0					
ANR	5707815	Identifier	NULL		5707760	1					
ANR	5707816	IdentifierDecl	* g = NULL		5707760	1					
ANR	5707817	IdentifierDeclType	RBNode *		5707760	0					
ANR	5707818	Identifier	g		5707760	1					
ANR	5707819	AssignmentExpression	* g = NULL		5707760	2		=			
ANR	5707820	Identifier	NULL		5707760	0					
ANR	5707821	Identifier	NULL		5707760	1					
ANR	5707822	IdentifierDecl	* p = NULL		5707760	2					
ANR	5707823	IdentifierDeclType	RBNode *		5707760	0					
ANR	5707824	Identifier	p		5707760	1					
ANR	5707825	AssignmentExpression	* p = NULL		5707760	2		=			
ANR	5707826	Identifier	NULL		5707760	0					
ANR	5707827	Identifier	NULL		5707760	1					
ANR	5707828	IdentifierDecl	* q = * root		5707760	3					
ANR	5707829	IdentifierDeclType	RBNode *		5707760	0					
ANR	5707830	Identifier	q		5707760	1					
ANR	5707831	AssignmentExpression	* q = * root		5707760	2		=			
ANR	5707832	Identifier	q		5707760	0					
ANR	5707833	UnaryOperationExpression	* root		5707760	1					
ANR	5707834	UnaryOperator	*		5707760	0					
ANR	5707835	Identifier	root		5707760	1					
ANR	5707836	IdentifierDeclStatement	"int d = 0 , dep = 0 ;"	188:1:4087:4105	5707760	3	True				
ANR	5707837	IdentifierDecl	d = 0		5707760	0					
ANR	5707838	IdentifierDeclType	int		5707760	0					
ANR	5707839	Identifier	d		5707760	1					
ANR	5707840	AssignmentExpression	d = 0		5707760	2		=			
ANR	5707841	Identifier	d		5707760	0					
ANR	5707842	PrimaryExpression	0		5707760	1					
ANR	5707843	IdentifierDecl	dep = 0		5707760	1					
ANR	5707844	IdentifierDeclType	int		5707760	0					
ANR	5707845	Identifier	dep		5707760	1					
ANR	5707846	AssignmentExpression	dep = 0		5707760	2		=			
ANR	5707847	Identifier	dep		5707760	0					
ANR	5707848	PrimaryExpression	0		5707760	1					
ANR	5707849	IdentifierDeclStatement	bool done = false ;	189:1:4108:4125	5707760	4	True				
ANR	5707850	IdentifierDecl	done = false		5707760	0					
ANR	5707851	IdentifierDeclType	bool		5707760	0					
ANR	5707852	Identifier	done		5707760	1					
ANR	5707853	AssignmentExpression	done = false		5707760	2		=			
ANR	5707854	Identifier	false		5707760	0					
ANR	5707855	Identifier	false		5707760	1					
ANR	5707856	IdentifierDeclStatement	RBNode * path [ R_RBTREE_MAX_HEIGHT ] ;	190:1:4128:4161	5707760	5	True				
ANR	5707857	IdentifierDecl	* path [ R_RBTREE_MAX_HEIGHT ]		5707760	0					
ANR	5707858	IdentifierDeclType	RBNode * [ R_RBTREE_MAX_HEIGHT ]		5707760	0					
ANR	5707859	Identifier	path		5707760	1					
ANR	5707860	Identifier	R_RBTREE_MAX_HEIGHT		5707760	2					
ANR	5707861	ForStatement	for ( ; ; )		5707760	6					
ANR	5707862	CompoundStatement		15:10:279:279	5707760	0					
ANR	5707863	IfStatement	if ( ! q )		5707760	0					
ANR	5707864	Condition	! q	192:6:4181:4182	5707760	0	True				
ANR	5707865	UnaryOperationExpression	! q		5707760	0					
ANR	5707866	UnaryOperator	!		5707760	0					
ANR	5707867	Identifier	q		5707760	1					
ANR	5707868	CompoundStatement		16:10:291:291	5707760	1					
ANR	5707869	ExpressionStatement	q = node	193:3:4190:4198	5707760	0	True				
ANR	5707870	AssignmentExpression	q = node		5707760	0		=			
ANR	5707871	Identifier	q		5707760	0					
ANR	5707872	Identifier	node		5707760	1					
ANR	5707873	ExpressionStatement	q -> red = true	194:3:4203:4216	5707760	1	True				
ANR	5707874	AssignmentExpression	q -> red = true		5707760	0		=			
ANR	5707875	PtrMemberAccess	q -> red		5707760	0					
ANR	5707876	Identifier	q		5707760	0					
ANR	5707877	Identifier	red		5707760	1					
ANR	5707878	Identifier	true		5707760	1					
ANR	5707879	ExpressionStatement	p -> child [ d ] = q	195:3:4221:4236	5707760	2	True				
ANR	5707880	AssignmentExpression	p -> child [ d ] = q		5707760	0		=			
ANR	5707881	ArrayIndexing	p -> child [ d ]		5707760	0					
ANR	5707882	PtrMemberAccess	p -> child		5707760	0					
ANR	5707883	Identifier	p		5707760	0					
ANR	5707884	Identifier	child		5707760	1					
ANR	5707885	Identifier	d		5707760	1					
ANR	5707886	Identifier	q		5707760	1					
ANR	5707887	ExpressionStatement	done = true	196:3:4241:4252	5707760	3	True				
ANR	5707888	AssignmentExpression	done = true		5707760	0		=			
ANR	5707889	Identifier	done		5707760	0					
ANR	5707890	Identifier	true		5707760	1					
ANR	5707891	ElseStatement	else		5707760	0					
ANR	5707892	IfStatement	if ( red ( q -> child [ 0 ] ) && red ( q -> child [ 1 ] ) )		5707760	0					
ANR	5707893	Condition	red ( q -> child [ 0 ] ) && red ( q -> child [ 1 ] )	197:13:4267:4304	5707760	0	True				
ANR	5707894	AndExpression	red ( q -> child [ 0 ] ) && red ( q -> child [ 1 ] )		5707760	0		&&			
ANR	5707895	CallExpression	red ( q -> child [ 0 ] )		5707760	0					
ANR	5707896	Callee	red		5707760	0					
ANR	5707897	Identifier	red		5707760	0					
ANR	5707898	ArgumentList	q -> child [ 0 ]		5707760	1					
ANR	5707899	Argument	q -> child [ 0 ]		5707760	0					
ANR	5707900	ArrayIndexing	q -> child [ 0 ]		5707760	0					
ANR	5707901	PtrMemberAccess	q -> child		5707760	0					
ANR	5707902	Identifier	q		5707760	0					
ANR	5707903	Identifier	child		5707760	1					
ANR	5707904	PrimaryExpression	0		5707760	1					
ANR	5707905	CallExpression	red ( q -> child [ 1 ] )		5707760	1					
ANR	5707906	Callee	red		5707760	0					
ANR	5707907	Identifier	red		5707760	0					
ANR	5707908	ArgumentList	q -> child [ 1 ]		5707760	1					
ANR	5707909	Argument	q -> child [ 1 ]		5707760	0					
ANR	5707910	ArrayIndexing	q -> child [ 1 ]		5707760	0					
ANR	5707911	PtrMemberAccess	q -> child		5707760	0					
ANR	5707912	Identifier	q		5707760	0					
ANR	5707913	Identifier	child		5707760	1					
ANR	5707914	PrimaryExpression	1		5707760	1					
ANR	5707915	CompoundStatement		21:53:413:413	5707760	1					
ANR	5707916	ExpressionStatement	q -> child [ 0 ] -> red = q -> child [ 1 ] -> red = false	198:3:4312:4355	5707760	0	True				
ANR	5707917	AssignmentExpression	q -> child [ 0 ] -> red = q -> child [ 1 ] -> red = false		5707760	0		=			
ANR	5707918	PtrMemberAccess	q -> child [ 0 ] -> red		5707760	0					
ANR	5707919	ArrayIndexing	q -> child [ 0 ]		5707760	0					
ANR	5707920	PtrMemberAccess	q -> child		5707760	0					
ANR	5707921	Identifier	q		5707760	0					
ANR	5707922	Identifier	child		5707760	1					
ANR	5707923	PrimaryExpression	0		5707760	1					
ANR	5707924	Identifier	red		5707760	1					
ANR	5707925	AssignmentExpression	q -> child [ 1 ] -> red = false		5707760	1		=			
ANR	5707926	PtrMemberAccess	q -> child [ 1 ] -> red		5707760	0					
ANR	5707927	ArrayIndexing	q -> child [ 1 ]		5707760	0					
ANR	5707928	PtrMemberAccess	q -> child		5707760	0					
ANR	5707929	Identifier	q		5707760	0					
ANR	5707930	Identifier	child		5707760	1					
ANR	5707931	PrimaryExpression	1		5707760	1					
ANR	5707932	Identifier	red		5707760	1					
ANR	5707933	Identifier	false		5707760	1					
ANR	5707934	IfStatement	if ( q != * root )		5707760	1					
ANR	5707935	Condition	q != * root	199:7:4364:4373	5707760	0	True				
ANR	5707936	EqualityExpression	q != * root		5707760	0		!=			
ANR	5707937	Identifier	q		5707760	0					
ANR	5707938	UnaryOperationExpression	* root		5707760	1					
ANR	5707939	UnaryOperator	*		5707760	0					
ANR	5707940	Identifier	root		5707760	1					
ANR	5707941	CompoundStatement		23:19:482:482	5707760	1					
ANR	5707942	ExpressionStatement	q -> red = true	200:4:4382:4395	5707760	0	True				
ANR	5707943	AssignmentExpression	q -> red = true		5707760	0		=			
ANR	5707944	PtrMemberAccess	q -> red		5707760	0					
ANR	5707945	Identifier	q		5707760	0					
ANR	5707946	Identifier	red		5707760	1					
ANR	5707947	Identifier	true		5707760	1					
ANR	5707948	IfStatement	if ( q -> red && p && p -> red )		5707760	1					
ANR	5707949	Condition	q -> red && p && p -> red	203:6:4412:4432	5707760	0	True				
ANR	5707950	AndExpression	q -> red && p && p -> red		5707760	0		&&			
ANR	5707951	PtrMemberAccess	q -> red		5707760	0					
ANR	5707952	Identifier	q		5707760	0					
ANR	5707953	Identifier	red		5707760	1					
ANR	5707954	AndExpression	p && p -> red		5707760	1		&&			
ANR	5707955	Identifier	p		5707760	0					
ANR	5707956	PtrMemberAccess	p -> red		5707760	1					
ANR	5707957	Identifier	p		5707760	0					
ANR	5707958	Identifier	red		5707760	1					
ANR	5707959	CompoundStatement		28:3:546:603	5707760	1					
ANR	5707960	IdentifierDeclStatement	"int d3 = t ? t -> child [ 0 ] != g : - 1 , d2 = g -> child [ 0 ] != p ;"	204:3:4440:4497	5707760	0	True				
ANR	5707961	IdentifierDecl	d3 = t ? t -> child [ 0 ] != g : - 1		5707760	0					
ANR	5707962	IdentifierDeclType	int		5707760	0					
ANR	5707963	Identifier	d3		5707760	1					
ANR	5707964	AssignmentExpression	d3 = t ? t -> child [ 0 ] != g : - 1		5707760	2		=			
ANR	5707965	Identifier	d3		5707760	0					
ANR	5707966	ConditionalExpression	t ? t -> child [ 0 ] != g : - 1		5707760	1					
ANR	5707967	Condition	t		5707760	0					
ANR	5707968	Identifier	t		5707760	0					
ANR	5707969	EqualityExpression	t -> child [ 0 ] != g		5707760	1		!=			
ANR	5707970	ArrayIndexing	t -> child [ 0 ]		5707760	0					
ANR	5707971	PtrMemberAccess	t -> child		5707760	0					
ANR	5707972	Identifier	t		5707760	0					
ANR	5707973	Identifier	child		5707760	1					
ANR	5707974	PrimaryExpression	0		5707760	1					
ANR	5707975	Identifier	g		5707760	1					
ANR	5707976	UnaryOperationExpression	- 1		5707760	2					
ANR	5707977	UnaryOperator	-		5707760	0					
ANR	5707978	PrimaryExpression	1		5707760	1					
ANR	5707979	IdentifierDecl	d2 = g -> child [ 0 ] != p		5707760	1					
ANR	5707980	IdentifierDeclType	int		5707760	0					
ANR	5707981	Identifier	d2		5707760	1					
ANR	5707982	AssignmentExpression	d2 = g -> child [ 0 ] != p		5707760	2		=			
ANR	5707983	Identifier	d2		5707760	0					
ANR	5707984	EqualityExpression	g -> child [ 0 ] != p		5707760	1		!=			
ANR	5707985	ArrayIndexing	g -> child [ 0 ]		5707760	0					
ANR	5707986	PtrMemberAccess	g -> child		5707760	0					
ANR	5707987	Identifier	g		5707760	0					
ANR	5707988	Identifier	child		5707760	1					
ANR	5707989	PrimaryExpression	0		5707760	1					
ANR	5707990	Identifier	p		5707760	1					
ANR	5707991	IfStatement	if ( p -> child [ d2 ] == q )		5707760	1					
ANR	5707992	Condition	p -> child [ d2 ] == q	205:7:4506:4522	5707760	0	True				
ANR	5707993	EqualityExpression	p -> child [ d2 ] == q		5707760	0		==			
ANR	5707994	ArrayIndexing	p -> child [ d2 ]		5707760	0					
ANR	5707995	PtrMemberAccess	p -> child		5707760	0					
ANR	5707996	Identifier	p		5707760	0					
ANR	5707997	Identifier	child		5707760	1					
ANR	5707998	Identifier	d2		5707760	1					
ANR	5707999	Identifier	q		5707760	1					
ANR	5708000	CompoundStatement		29:26:631:631	5707760	1					
ANR	5708001	ExpressionStatement	"g = zag ( g , d2 , sum )"	206:4:4531:4551	5707760	0	True				
ANR	5708002	AssignmentExpression	"g = zag ( g , d2 , sum )"		5707760	0		=			
ANR	5708003	Identifier	g		5707760	0					
ANR	5708004	CallExpression	"zag ( g , d2 , sum )"		5707760	1					
ANR	5708005	Callee	zag		5707760	0					
ANR	5708006	Identifier	zag		5707760	0					
ANR	5708007	ArgumentList	g		5707760	1					
ANR	5708008	Argument	g		5707760	0					
ANR	5708009	Identifier	g		5707760	0					
ANR	5708010	Argument	d2		5707760	1					
ANR	5708011	Identifier	d2		5707760	0					
ANR	5708012	Argument	sum		5707760	2					
ANR	5708013	Identifier	sum		5707760	0					
ANR	5708014	ExpressionStatement	dep --	207:4:4557:4562	5707760	1	True				
ANR	5708015	PostIncDecOperationExpression	dep --		5707760	0					
ANR	5708016	Identifier	dep		5707760	0					
ANR	5708017	IncDec	--		5707760	1					
ANR	5708018	ExpressionStatement	path [ dep - 1 ] = g	208:4:4568:4585	5707760	2	True				
ANR	5708019	AssignmentExpression	path [ dep - 1 ] = g		5707760	0		=			
ANR	5708020	ArrayIndexing	path [ dep - 1 ]		5707760	0					
ANR	5708021	Identifier	path		5707760	0					
ANR	5708022	AdditiveExpression	dep - 1		5707760	1		-			
ANR	5708023	Identifier	dep		5707760	0					
ANR	5708024	PrimaryExpression	1		5707760	1					
ANR	5708025	Identifier	g		5707760	1					
ANR	5708026	ElseStatement	else		5707760	0					
ANR	5708027	CompoundStatement		33:10:703:703	5707760	0					
ANR	5708028	ExpressionStatement	"g = zig_zag ( g , d2 , sum )"	210:4:4603:4627	5707760	0	True				
ANR	5708029	AssignmentExpression	"g = zig_zag ( g , d2 , sum )"		5707760	0		=			
ANR	5708030	Identifier	g		5707760	0					
ANR	5708031	CallExpression	"zig_zag ( g , d2 , sum )"		5707760	1					
ANR	5708032	Callee	zig_zag		5707760	0					
ANR	5708033	Identifier	zig_zag		5707760	0					
ANR	5708034	ArgumentList	g		5707760	1					
ANR	5708035	Argument	g		5707760	0					
ANR	5708036	Identifier	g		5707760	0					
ANR	5708037	Argument	d2		5707760	1					
ANR	5708038	Identifier	d2		5707760	0					
ANR	5708039	Argument	sum		5707760	2					
ANR	5708040	Identifier	sum		5707760	0					
ANR	5708041	ExpressionStatement	dep -= 2	211:4:4633:4641	5707760	1	True				
ANR	5708042	AssignmentExpression	dep -= 2		5707760	0		-=			
ANR	5708043	Identifier	dep		5707760	0					
ANR	5708044	PrimaryExpression	2		5707760	1					
ANR	5708045	IfStatement	if ( t )		5707760	2					
ANR	5708046	Condition	t	213:7:4655:4655	5707760	0	True				
ANR	5708047	Identifier	t		5707760	0					
ANR	5708048	CompoundStatement		37:10:764:764	5707760	1					
ANR	5708049	ExpressionStatement	t -> child [ d3 ] = g	214:4:4664:4680	5707760	0	True				
ANR	5708050	AssignmentExpression	t -> child [ d3 ] = g		5707760	0		=			
ANR	5708051	ArrayIndexing	t -> child [ d3 ]		5707760	0					
ANR	5708052	PtrMemberAccess	t -> child		5707760	0					
ANR	5708053	Identifier	t		5707760	0					
ANR	5708054	Identifier	child		5707760	1					
ANR	5708055	Identifier	d3		5707760	1					
ANR	5708056	Identifier	g		5707760	1					
ANR	5708057	ElseStatement	else		5707760	0					
ANR	5708058	CompoundStatement		39:10:798:798	5707760	0					
ANR	5708059	ExpressionStatement	* root = g	216:4:4698:4707	5707760	0	True				
ANR	5708060	AssignmentExpression	* root = g		5707760	0		=			
ANR	5708061	UnaryOperationExpression	* root		5707760	0					
ANR	5708062	UnaryOperator	*		5707760	0					
ANR	5708063	Identifier	root		5707760	1					
ANR	5708064	Identifier	g		5707760	1					
ANR	5708065	IfStatement	if ( done )		5707760	2					
ANR	5708066	Condition	done	219:6:4724:4727	5707760	0	True				
ANR	5708067	Identifier	done		5707760	0					
ANR	5708068	CompoundStatement		43:12:836:836	5707760	1					
ANR	5708069	BreakStatement	break ;	220:3:4735:4740	5707760	0	True				
ANR	5708070	ExpressionStatement	"d = cmp ( data , q )"	222:2:4748:4765	5707760	3	True				
ANR	5708071	AssignmentExpression	"d = cmp ( data , q )"		5707760	0		=			
ANR	5708072	Identifier	d		5707760	0					
ANR	5708073	CallExpression	"cmp ( data , q )"		5707760	1					
ANR	5708074	Callee	cmp		5707760	0					
ANR	5708075	Identifier	cmp		5707760	0					
ANR	5708076	ArgumentList	data		5707760	1					
ANR	5708077	Argument	data		5707760	0					
ANR	5708078	Identifier	data		5707760	0					
ANR	5708079	Argument	q		5707760	1					
ANR	5708080	Identifier	q		5707760	0					
ANR	5708081	ExpressionStatement	t = g	223:2:4769:4774	5707760	4	True				
ANR	5708082	AssignmentExpression	t = g		5707760	0		=			
ANR	5708083	Identifier	t		5707760	0					
ANR	5708084	Identifier	g		5707760	1					
ANR	5708085	ExpressionStatement	g = p	224:2:4778:4783	5707760	5	True				
ANR	5708086	AssignmentExpression	g = p		5707760	0		=			
ANR	5708087	Identifier	g		5707760	0					
ANR	5708088	Identifier	p		5707760	1					
ANR	5708089	ExpressionStatement	p = q	225:2:4787:4792	5707760	6	True				
ANR	5708090	AssignmentExpression	p = q		5707760	0		=			
ANR	5708091	Identifier	p		5707760	0					
ANR	5708092	Identifier	q		5707760	1					
ANR	5708093	IfStatement	if ( dep >= R_RBTREE_MAX_HEIGHT )		5707760	7					
ANR	5708094	Condition	dep >= R_RBTREE_MAX_HEIGHT	226:6:4800:4825	5707760	0	True				
ANR	5708095	RelationalExpression	dep >= R_RBTREE_MAX_HEIGHT		5707760	0		>=			
ANR	5708096	Identifier	dep		5707760	0					
ANR	5708097	Identifier	R_RBTREE_MAX_HEIGHT		5707760	1					
ANR	5708098	CompoundStatement		50:34:934:934	5707760	1					
ANR	5708099	ExpressionStatement	"eprintf ( ""Too deep tree\\n"" )"	227:3:4833:4860	5707760	0	True				
ANR	5708100	CallExpression	"eprintf ( ""Too deep tree\\n"" )"		5707760	0					
ANR	5708101	Callee	eprintf		5707760	0					
ANR	5708102	Identifier	eprintf		5707760	0					
ANR	5708103	ArgumentList	"""Too deep tree\\n"""		5707760	1					
ANR	5708104	Argument	"""Too deep tree\\n"""		5707760	0					
ANR	5708105	PrimaryExpression	"""Too deep tree\\n"""		5707760	0					
ANR	5708106	BreakStatement	break ;	228:3:4865:4870	5707760	1	True				
ANR	5708107	ExpressionStatement	path [ dep ++ ] = q	230:2:4878:4893	5707760	8	True				
ANR	5708108	AssignmentExpression	path [ dep ++ ] = q		5707760	0		=			
ANR	5708109	ArrayIndexing	path [ dep ++ ]		5707760	0					
ANR	5708110	Identifier	path		5707760	0					
ANR	5708111	PostIncDecOperationExpression	dep ++		5707760	1					
ANR	5708112	Identifier	dep		5707760	0					
ANR	5708113	IncDec	++		5707760	1					
ANR	5708114	Identifier	q		5707760	1					
ANR	5708115	IfStatement	if ( d < 0 )		5707760	9					
ANR	5708116	Condition	d < 0	231:6:4901:4905	5707760	0	True				
ANR	5708117	RelationalExpression	d < 0		5707760	0		<			
ANR	5708118	Identifier	d		5707760	0					
ANR	5708119	PrimaryExpression	0		5707760	1					
ANR	5708120	CompoundStatement		55:13:1014:1014	5707760	1					
ANR	5708121	ExpressionStatement	d = 0	232:3:4913:4918	5707760	0	True				
ANR	5708122	AssignmentExpression	d = 0		5707760	0		=			
ANR	5708123	Identifier	d		5707760	0					
ANR	5708124	PrimaryExpression	0		5707760	1					
ANR	5708125	ExpressionStatement	q = q -> child [ 0 ]	233:3:4923:4938	5707760	1	True				
ANR	5708126	AssignmentExpression	q = q -> child [ 0 ]		5707760	0		=			
ANR	5708127	Identifier	q		5707760	0					
ANR	5708128	ArrayIndexing	q -> child [ 0 ]		5707760	1					
ANR	5708129	PtrMemberAccess	q -> child		5707760	0					
ANR	5708130	Identifier	q		5707760	0					
ANR	5708131	Identifier	child		5707760	1					
ANR	5708132	PrimaryExpression	0		5707760	1					
ANR	5708133	ElseStatement	else		5707760	0					
ANR	5708134	CompoundStatement		58:9:1055:1055	5707760	0					
ANR	5708135	ExpressionStatement	d = 1	235:3:4954:4959	5707760	0	True				
ANR	5708136	AssignmentExpression	d = 1		5707760	0		=			
ANR	5708137	Identifier	d		5707760	0					
ANR	5708138	PrimaryExpression	1		5707760	1					
ANR	5708139	ExpressionStatement	q = q -> child [ 1 ]	236:3:4964:4979	5707760	1	True				
ANR	5708140	AssignmentExpression	q = q -> child [ 1 ]		5707760	0		=			
ANR	5708141	Identifier	q		5707760	0					
ANR	5708142	ArrayIndexing	q -> child [ 1 ]		5707760	1					
ANR	5708143	PtrMemberAccess	q -> child		5707760	0					
ANR	5708144	Identifier	q		5707760	0					
ANR	5708145	Identifier	child		5707760	1					
ANR	5708146	PrimaryExpression	1		5707760	1					
ANR	5708147	IfStatement	if ( sum )		5707760	7					
ANR	5708148	Condition	sum	239:5:4993:4995	5707760	0	True				
ANR	5708149	Identifier	sum		5707760	0					
ANR	5708150	CompoundStatement		63:10:1104:1104	5707760	1					
ANR	5708151	ExpressionStatement	sum ( q )	240:2:5002:5009	5707760	0	True				
ANR	5708152	CallExpression	sum ( q )		5707760	0					
ANR	5708153	Callee	sum		5707760	0					
ANR	5708154	Identifier	sum		5707760	0					
ANR	5708155	ArgumentList	q		5707760	1					
ANR	5708156	Argument	q		5707760	0					
ANR	5708157	Identifier	q		5707760	0					
ANR	5708158	WhileStatement	while ( dep )		5707760	1					
ANR	5708159	Condition	dep	241:9:5020:5022	5707760	0	True				
ANR	5708160	Identifier	dep		5707760	0					
ANR	5708161	CompoundStatement		65:14:1131:1131	5707760	1					
ANR	5708162	ExpressionStatement	sum ( path [ -- dep ] )	242:3:5030:5047	5707760	0	True				
ANR	5708163	CallExpression	sum ( path [ -- dep ] )		5707760	0					
ANR	5708164	Callee	sum		5707760	0					
ANR	5708165	Identifier	sum		5707760	0					
ANR	5708166	ArgumentList	path [ -- dep ]		5707760	1					
ANR	5708167	Argument	path [ -- dep ]		5707760	0					
ANR	5708168	ArrayIndexing	path [ -- dep ]		5707760	0					
ANR	5708169	Identifier	path		5707760	0					
ANR	5708170	UnaryExpression	-- dep		5707760	1					
ANR	5708171	IncDec	--		5707760	0					
ANR	5708172	Identifier	dep		5707760	1					
ANR	5708173	ReturnType	R_API void		5707760	1					
ANR	5708174	Identifier	r_rbtree_aug_insert		5707760	2					
ANR	5708175	ParameterList	"RBNode * * root , void * data , RBNode * node , RBComparator cmp , RBNodeSum sum"		5707760	3					
ANR	5708176	Parameter	RBNode * * root	177:31:3819:3831	5707760	0	True				
ANR	5708177	ParameterType	RBNode * *		5707760	0					
ANR	5708178	Identifier	root		5707760	1					
ANR	5708179	Parameter	void * data	177:46:3834:3843	5707760	1	True				
ANR	5708180	ParameterType	void *		5707760	0					
ANR	5708181	Identifier	data		5707760	1					
ANR	5708182	Parameter	RBNode * node	177:58:3846:3857	5707760	2	True				
ANR	5708183	ParameterType	RBNode *		5707760	0					
ANR	5708184	Identifier	node		5707760	1					
ANR	5708185	Parameter	RBComparator cmp	177:72:3860:3875	5707760	3	True				
ANR	5708186	ParameterType	RBComparator		5707760	0					
ANR	5708187	Identifier	cmp		5707760	1					
ANR	5708188	Parameter	RBNodeSum sum	177:90:3878:3890	5707760	4	True				
ANR	5708189	ParameterType	RBNodeSum		5707760	0					
ANR	5708190	Identifier	sum		5707760	1					
ANR	5708191	CFGEntryNode	ENTRY		5707760		True				
ANR	5708192	CFGExitNode	EXIT		5707760		True				
ANR	5708193	InfiniteForNode	true		5707760		True				
ANR	5708194	Symbol	data		5707760						
ANR	5708195	Symbol	R_RBTREE_MAX_HEIGHT		5707760						
ANR	5708196	Symbol	node -> child		5707760						
ANR	5708197	Symbol	dep		5707760						
ANR	5708198	Symbol	red		5707760						
ANR	5708199	Symbol	path		5707760						
ANR	5708200	Symbol	* d3		5707760						
ANR	5708201	Symbol	* d2		5707760						
ANR	5708202	Symbol	* node		5707760						
ANR	5708203	Symbol	q -> child [ 1 ] -> red		5707760						
ANR	5708204	Symbol	zag		5707760						
ANR	5708205	Symbol	NULL		5707760						
ANR	5708206	Symbol	* * g		5707760						
ANR	5708207	Symbol	* * q -> child		5707760						
ANR	5708208	Symbol	* node -> child		5707760						
ANR	5708209	Symbol	done		5707760						
ANR	5708210	Symbol	* * * q		5707760						
ANR	5708211	Symbol	node		5707760						
ANR	5708212	Symbol	q -> child		5707760						
ANR	5708213	Symbol	* * node		5707760						
ANR	5708214	Symbol	g -> child		5707760						
ANR	5708215	Symbol	true		5707760						
ANR	5708216	Symbol	* q -> child		5707760						
ANR	5708217	Symbol	node -> red		5707760						
ANR	5708218	Symbol	* root		5707760						
ANR	5708219	Symbol	q -> red		5707760						
ANR	5708220	Symbol	q -> child [ 0 ] -> red		5707760						
ANR	5708221	Symbol	zig_zag		5707760						
ANR	5708222	Symbol	* dep		5707760						
ANR	5708223	Symbol	cmp		5707760						
ANR	5708224	Symbol	sum		5707760						
ANR	5708225	Symbol	d2		5707760						
ANR	5708226	Symbol	d3		5707760						
ANR	5708227	Symbol	* g -> child		5707760						
ANR	5708228	Symbol	* p -> child		5707760						
ANR	5708229	Symbol	root		5707760						
ANR	5708230	Symbol	* * t		5707760						
ANR	5708231	Symbol	p -> child		5707760						
ANR	5708232	Symbol	* * q		5707760						
ANR	5708233	Symbol	* * p		5707760						
ANR	5708234	Symbol	p -> red		5707760						
ANR	5708235	Symbol	d		5707760						
ANR	5708236	Symbol	g		5707760						
ANR	5708237	Symbol	false		5707760						
ANR	5708238	Symbol	* t -> child		5707760						
ANR	5708239	Symbol	* d		5707760						
ANR	5708240	Symbol	p		5707760						
ANR	5708241	Symbol	q		5707760						
ANR	5708242	Symbol	* g		5707760						
ANR	5708243	Symbol	t -> child		5707760						
ANR	5708244	Symbol	t		5707760						
ANR	5708245	Symbol	* path		5707760						
ANR	5708246	Symbol	* p		5707760						
ANR	5708247	Symbol	* q		5707760						
ANR	5708248	Symbol	* t		5707760						
ANR	5708249	Function	r_rbtree_aug_update_sum	248:0:5137:5690							
ANR	5708250	FunctionDef	"r_rbtree_aug_update_sum (RBNode * root , void * data , RBNode * node , RBComparator cmp , RBNodeSum sum)"		5708249	0					
ANR	5708251	CompoundStatement		248:108:5245:5690	5708249	0					
ANR	5708252	IdentifierDeclStatement	int dep = 0 ;	249:1:5248:5259	5708249	0	True				
ANR	5708253	IdentifierDecl	dep = 0		5708249	0					
ANR	5708254	IdentifierDeclType	int		5708249	0					
ANR	5708255	Identifier	dep		5708249	1					
ANR	5708256	AssignmentExpression	dep = 0		5708249	2		=			
ANR	5708257	Identifier	dep		5708249	0					
ANR	5708258	PrimaryExpression	0		5708249	1					
ANR	5708259	IdentifierDeclStatement	RBNode * path [ R_RBTREE_MAX_HEIGHT ] ;	250:1:5262:5295	5708249	1	True				
ANR	5708260	IdentifierDecl	* path [ R_RBTREE_MAX_HEIGHT ]		5708249	0					
ANR	5708261	IdentifierDeclType	RBNode * [ R_RBTREE_MAX_HEIGHT ]		5708249	0					
ANR	5708262	Identifier	path		5708249	1					
ANR	5708263	Identifier	R_RBTREE_MAX_HEIGHT		5708249	2					
ANR	5708264	IdentifierDeclStatement	RBNode * cur = root ;	251:1:5298:5316	5708249	2	True				
ANR	5708265	IdentifierDecl	* cur = root		5708249	0					
ANR	5708266	IdentifierDeclType	RBNode *		5708249	0					
ANR	5708267	Identifier	cur		5708249	1					
ANR	5708268	AssignmentExpression	* cur = root		5708249	2		=			
ANR	5708269	Identifier	root		5708249	0					
ANR	5708270	Identifier	root		5708249	1					
ANR	5708271	ForStatement	for ( ; ; )		5708249	3					
ANR	5708272	CompoundStatement		19:2:274:297	5708249	0					
ANR	5708273	IfStatement	if ( dep >= R_RBTREE_MAX_HEIGHT )		5708249	0					
ANR	5708274	Condition	dep >= R_RBTREE_MAX_HEIGHT	253:6:5336:5361	5708249	0	True				
ANR	5708275	RelationalExpression	dep >= R_RBTREE_MAX_HEIGHT		5708249	0		>=			
ANR	5708276	Identifier	dep		5708249	0					
ANR	5708277	Identifier	R_RBTREE_MAX_HEIGHT		5708249	1					
ANR	5708278	CompoundStatement		6:34:118:118	5708249	1					
ANR	5708279	ExpressionStatement	"eprintf ( ""Too deep tree\\n"" )"	254:3:5369:5396	5708249	0	True				
ANR	5708280	CallExpression	"eprintf ( ""Too deep tree\\n"" )"		5708249	0					
ANR	5708281	Callee	eprintf		5708249	0					
ANR	5708282	Identifier	eprintf		5708249	0					
ANR	5708283	ArgumentList	"""Too deep tree\\n"""		5708249	1					
ANR	5708284	Argument	"""Too deep tree\\n"""		5708249	0					
ANR	5708285	PrimaryExpression	"""Too deep tree\\n"""		5708249	0					
ANR	5708286	ReturnStatement	return false ;	255:3:5401:5413	5708249	1	True				
ANR	5708287	Identifier	false		5708249	0					
ANR	5708288	IfStatement	if ( ! cur )		5708249	1					
ANR	5708289	Condition	! cur	257:6:5425:5428	5708249	0	True				
ANR	5708290	UnaryOperationExpression	! cur		5708249	0					
ANR	5708291	UnaryOperator	!		5708249	0					
ANR	5708292	Identifier	cur		5708249	1					
ANR	5708293	CompoundStatement		10:12:185:185	5708249	1					
ANR	5708294	ReturnStatement	return false ;	258:3:5436:5448	5708249	0	True				
ANR	5708295	Identifier	false		5708249	0					
ANR	5708296	ExpressionStatement	path [ dep ] = cur	260:2:5456:5471	5708249	2	True				
ANR	5708297	AssignmentExpression	path [ dep ] = cur		5708249	0		=			
ANR	5708298	ArrayIndexing	path [ dep ]		5708249	0					
ANR	5708299	Identifier	path		5708249	0					
ANR	5708300	Identifier	dep		5708249	1					
ANR	5708301	Identifier	cur		5708249	1					
ANR	5708302	ExpressionStatement	dep ++	261:2:5475:5480	5708249	3	True				
ANR	5708303	PostIncDecOperationExpression	dep ++		5708249	0					
ANR	5708304	Identifier	dep		5708249	0					
ANR	5708305	IncDec	++		5708249	1					
ANR	5708306	IfStatement	if ( cur == node )		5708249	4					
ANR	5708307	Condition	cur == node	262:6:5488:5498	5708249	0	True				
ANR	5708308	EqualityExpression	cur == node		5708249	0		==			
ANR	5708309	Identifier	cur		5708249	0					
ANR	5708310	Identifier	node		5708249	1					
ANR	5708311	CompoundStatement		15:19:255:255	5708249	1					
ANR	5708312	BreakStatement	break ;	263:3:5506:5511	5708249	0	True				
ANR	5708313	IdentifierDeclStatement	"int d = cmp ( data , cur ) ;"	266:2:5520:5543	5708249	5	True				
ANR	5708314	IdentifierDecl	"d = cmp ( data , cur )"		5708249	0					
ANR	5708315	IdentifierDeclType	int		5708249	0					
ANR	5708316	Identifier	d		5708249	1					
ANR	5708317	AssignmentExpression	"d = cmp ( data , cur )"		5708249	2		=			
ANR	5708318	Identifier	d		5708249	0					
ANR	5708319	CallExpression	"cmp ( data , cur )"		5708249	1					
ANR	5708320	Callee	cmp		5708249	0					
ANR	5708321	Identifier	cmp		5708249	0					
ANR	5708322	ArgumentList	data		5708249	1					
ANR	5708323	Argument	data		5708249	0					
ANR	5708324	Identifier	data		5708249	0					
ANR	5708325	Argument	cur		5708249	1					
ANR	5708326	Identifier	cur		5708249	0					
ANR	5708327	IfStatement	if ( d < 0 )		5708249	6					
ANR	5708328	Condition	d < 0	267:6:5551:5555	5708249	0	True				
ANR	5708329	RelationalExpression	d < 0		5708249	0		<			
ANR	5708330	Identifier	d		5708249	0					
ANR	5708331	PrimaryExpression	0		5708249	1					
ANR	5708332	CompoundStatement		20:13:312:312	5708249	1					
ANR	5708333	ExpressionStatement	cur = cur -> child [ 0 ]	268:3:5563:5582	5708249	0	True				
ANR	5708334	AssignmentExpression	cur = cur -> child [ 0 ]		5708249	0		=			
ANR	5708335	Identifier	cur		5708249	0					
ANR	5708336	ArrayIndexing	cur -> child [ 0 ]		5708249	1					
ANR	5708337	PtrMemberAccess	cur -> child		5708249	0					
ANR	5708338	Identifier	cur		5708249	0					
ANR	5708339	Identifier	child		5708249	1					
ANR	5708340	PrimaryExpression	0		5708249	1					
ANR	5708341	ElseStatement	else		5708249	0					
ANR	5708342	CompoundStatement		22:9:347:347	5708249	0					
ANR	5708343	ExpressionStatement	cur = cur -> child [ 1 ]	270:3:5598:5617	5708249	0	True				
ANR	5708344	AssignmentExpression	cur = cur -> child [ 1 ]		5708249	0		=			
ANR	5708345	Identifier	cur		5708249	0					
ANR	5708346	ArrayIndexing	cur -> child [ 1 ]		5708249	1					
ANR	5708347	PtrMemberAccess	cur -> child		5708249	0					
ANR	5708348	Identifier	cur		5708249	0					
ANR	5708349	Identifier	child		5708249	1					
ANR	5708350	PrimaryExpression	1		5708249	1					
ANR	5708351	ForStatement	for ( ; dep > 0 ; dep -- )		5708249	4					
ANR	5708352	Condition	dep > 0	274:7:5634:5640	5708249	0	True				
ANR	5708353	RelationalExpression	dep > 0		5708249	0		>			
ANR	5708354	Identifier	dep		5708249	0					
ANR	5708355	PrimaryExpression	0		5708249	1					
ANR	5708356	PostIncDecOperationExpression	dep --	274:16:5643:5647	5708249	1	True				
ANR	5708357	Identifier	dep		5708249	0					
ANR	5708358	IncDec	--		5708249	1					
ANR	5708359	CompoundStatement		27:23:404:404	5708249	2					
ANR	5708360	ExpressionStatement	sum ( path [ dep - 1 ] )	275:2:5654:5671	5708249	0	True				
ANR	5708361	CallExpression	sum ( path [ dep - 1 ] )		5708249	0					
ANR	5708362	Callee	sum		5708249	0					
ANR	5708363	Identifier	sum		5708249	0					
ANR	5708364	ArgumentList	path [ dep - 1 ]		5708249	1					
ANR	5708365	Argument	path [ dep - 1 ]		5708249	0					
ANR	5708366	ArrayIndexing	path [ dep - 1 ]		5708249	0					
ANR	5708367	Identifier	path		5708249	0					
ANR	5708368	AdditiveExpression	dep - 1		5708249	1		-			
ANR	5708369	Identifier	dep		5708249	0					
ANR	5708370	PrimaryExpression	1		5708249	1					
ANR	5708371	ReturnStatement	return true ;	277:1:5677:5688	5708249	5	True				
ANR	5708372	Identifier	true		5708249	0					
ANR	5708373	ReturnType	R_API bool		5708249	1					
ANR	5708374	Identifier	r_rbtree_aug_update_sum		5708249	2					
ANR	5708375	ParameterList	"RBNode * root , void * data , RBNode * node , RBComparator cmp , RBNodeSum sum"		5708249	3					
ANR	5708376	Parameter	RBNode * root	248:35:5172:5183	5708249	0	True				
ANR	5708377	ParameterType	RBNode *		5708249	0					
ANR	5708378	Identifier	root		5708249	1					
ANR	5708379	Parameter	void * data	248:49:5186:5195	5708249	1	True				
ANR	5708380	ParameterType	void *		5708249	0					
ANR	5708381	Identifier	data		5708249	1					
ANR	5708382	Parameter	RBNode * node	248:61:5198:5209	5708249	2	True				
ANR	5708383	ParameterType	RBNode *		5708249	0					
ANR	5708384	Identifier	node		5708249	1					
ANR	5708385	Parameter	RBComparator cmp	248:75:5212:5227	5708249	3	True				
ANR	5708386	ParameterType	RBComparator		5708249	0					
ANR	5708387	Identifier	cmp		5708249	1					
ANR	5708388	Parameter	RBNodeSum sum	248:93:5230:5242	5708249	4	True				
ANR	5708389	ParameterType	RBNodeSum		5708249	0					
ANR	5708390	Identifier	sum		5708249	1					
ANR	5708391	CFGEntryNode	ENTRY		5708249		True				
ANR	5708392	CFGExitNode	EXIT		5708249		True				
ANR	5708393	InfiniteForNode	true		5708249		True				
ANR	5708394	Symbol	cur		5708249						
ANR	5708395	Symbol	data		5708249						
ANR	5708396	Symbol	d		5708249						
ANR	5708397	Symbol	* dep		5708249						
ANR	5708398	Symbol	cmp		5708249						
ANR	5708399	Symbol	R_RBTREE_MAX_HEIGHT		5708249						
ANR	5708400	Symbol	false		5708249						
ANR	5708401	Symbol	sum		5708249						
ANR	5708402	Symbol	dep		5708249						
ANR	5708403	Symbol	node		5708249						
ANR	5708404	Symbol	path		5708249						
ANR	5708405	Symbol	* * cur		5708249						
ANR	5708406	Symbol	* cur		5708249						
ANR	5708407	Symbol	* cur -> child		5708249						
ANR	5708408	Symbol	root		5708249						
ANR	5708409	Symbol	true		5708249						
ANR	5708410	Symbol	* path		5708249						
ANR	5708411	Symbol	cur -> child		5708249						
ANR	5708412	Function	r_rbtree_delete	280:0:5693:5847							
ANR	5708413	FunctionDef	"r_rbtree_delete (RBNode * * root , void * data , RBComparator cmp , RBNodeFree freefn)"		5708412	0					
ANR	5708414	CompoundStatement		280:91:5784:5847	5708412	0					
ANR	5708415	ReturnStatement	"return r_rbtree_aug_delete ( root , data , cmp , freefn , NULL ) ;"	281:1:5787:5845	5708412	0	True				
ANR	5708416	CallExpression	"r_rbtree_aug_delete ( root , data , cmp , freefn , NULL )"		5708412	0					
ANR	5708417	Callee	r_rbtree_aug_delete		5708412	0					
ANR	5708418	Identifier	r_rbtree_aug_delete		5708412	0					
ANR	5708419	ArgumentList	root		5708412	1					
ANR	5708420	Argument	root		5708412	0					
ANR	5708421	Identifier	root		5708412	0					
ANR	5708422	Argument	data		5708412	1					
ANR	5708423	Identifier	data		5708412	0					
ANR	5708424	Argument	cmp		5708412	2					
ANR	5708425	Identifier	cmp		5708412	0					
ANR	5708426	Argument	freefn		5708412	3					
ANR	5708427	Identifier	freefn		5708412	0					
ANR	5708428	Argument	NULL		5708412	4					
ANR	5708429	Identifier	NULL		5708412	0					
ANR	5708430	ReturnType	R_API bool		5708412	1					
ANR	5708431	Identifier	r_rbtree_delete		5708412	2					
ANR	5708432	ParameterList	"RBNode * * root , void * data , RBComparator cmp , RBNodeFree freefn"		5708412	3					
ANR	5708433	Parameter	RBNode * * root	280:27:5720:5732	5708412	0	True				
ANR	5708434	ParameterType	RBNode * *		5708412	0					
ANR	5708435	Identifier	root		5708412	1					
ANR	5708436	Parameter	void * data	280:42:5735:5744	5708412	1	True				
ANR	5708437	ParameterType	void *		5708412	0					
ANR	5708438	Identifier	data		5708412	1					
ANR	5708439	Parameter	RBComparator cmp	280:54:5747:5762	5708412	2	True				
ANR	5708440	ParameterType	RBComparator		5708412	0					
ANR	5708441	Identifier	cmp		5708412	1					
ANR	5708442	Parameter	RBNodeFree freefn	280:72:5765:5781	5708412	3	True				
ANR	5708443	ParameterType	RBNodeFree		5708412	0					
ANR	5708444	Identifier	freefn		5708412	1					
ANR	5708445	CFGEntryNode	ENTRY		5708412		True				
ANR	5708446	CFGExitNode	EXIT		5708412		True				
ANR	5708447	Symbol	freefn		5708412						
ANR	5708448	Symbol	NULL		5708412						
ANR	5708449	Symbol	data		5708412						
ANR	5708450	Symbol	r_rbtree_aug_delete		5708412						
ANR	5708451	Symbol	root		5708412						
ANR	5708452	Symbol	cmp		5708412						
ANR	5708453	Function	r_rbtree_find	284:0:5850:6081							
ANR	5708454	FunctionDef	"r_rbtree_find (RBNode * x , void * data , RBComparator cmp)"		5708453	0					
ANR	5708455	CompoundStatement		284:69:5919:6081	5708453	0					
ANR	5708456	WhileStatement	while ( x )		5708453	0					
ANR	5708457	Condition	x	285:8:5929:5929	5708453	0	True				
ANR	5708458	Identifier	x		5708453	0					
ANR	5708459	CompoundStatement		3:2:16:37	5708453	1					
ANR	5708460	IdentifierDeclStatement	"int d = cmp ( data , x ) ;"	286:2:5936:5957	5708453	0	True				
ANR	5708461	IdentifierDecl	"d = cmp ( data , x )"		5708453	0					
ANR	5708462	IdentifierDeclType	int		5708453	0					
ANR	5708463	Identifier	d		5708453	1					
ANR	5708464	AssignmentExpression	"d = cmp ( data , x )"		5708453	2		=			
ANR	5708465	Identifier	d		5708453	0					
ANR	5708466	CallExpression	"cmp ( data , x )"		5708453	1					
ANR	5708467	Callee	cmp		5708453	0					
ANR	5708468	Identifier	cmp		5708453	0					
ANR	5708469	ArgumentList	data		5708453	1					
ANR	5708470	Argument	data		5708453	0					
ANR	5708471	Identifier	data		5708453	0					
ANR	5708472	Argument	x		5708453	1					
ANR	5708473	Identifier	x		5708453	0					
ANR	5708474	IfStatement	if ( d < 0 )		5708453	1					
ANR	5708475	Condition	d < 0	287:6:5965:5969	5708453	0	True				
ANR	5708476	RelationalExpression	d < 0		5708453	0		<			
ANR	5708477	Identifier	d		5708453	0					
ANR	5708478	PrimaryExpression	0		5708453	1					
ANR	5708479	CompoundStatement		4:13:52:52	5708453	1					
ANR	5708480	ExpressionStatement	x = x -> child [ 0 ]	288:3:5977:5992	5708453	0	True				
ANR	5708481	AssignmentExpression	x = x -> child [ 0 ]		5708453	0		=			
ANR	5708482	Identifier	x		5708453	0					
ANR	5708483	ArrayIndexing	x -> child [ 0 ]		5708453	1					
ANR	5708484	PtrMemberAccess	x -> child		5708453	0					
ANR	5708485	Identifier	x		5708453	0					
ANR	5708486	Identifier	child		5708453	1					
ANR	5708487	PrimaryExpression	0		5708453	1					
ANR	5708488	ElseStatement	else		5708453	0					
ANR	5708489	IfStatement	if ( d > 0 )		5708453	0					
ANR	5708490	Condition	d > 0	289:13:6007:6011	5708453	0	True				
ANR	5708491	RelationalExpression	d > 0		5708453	0		>			
ANR	5708492	Identifier	d		5708453	0					
ANR	5708493	PrimaryExpression	0		5708453	1					
ANR	5708494	CompoundStatement		6:20:94:94	5708453	1					
ANR	5708495	ExpressionStatement	x = x -> child [ 1 ]	290:3:6019:6034	5708453	0	True				
ANR	5708496	AssignmentExpression	x = x -> child [ 1 ]		5708453	0		=			
ANR	5708497	Identifier	x		5708453	0					
ANR	5708498	ArrayIndexing	x -> child [ 1 ]		5708453	1					
ANR	5708499	PtrMemberAccess	x -> child		5708453	0					
ANR	5708500	Identifier	x		5708453	0					
ANR	5708501	Identifier	child		5708453	1					
ANR	5708502	PrimaryExpression	1		5708453	1					
ANR	5708503	ElseStatement	else		5708453	0					
ANR	5708504	CompoundStatement		8:9:125:125	5708453	0					
ANR	5708505	ReturnStatement	return x ;	292:3:6050:6058	5708453	0	True				
ANR	5708506	Identifier	x		5708453	0					
ANR	5708507	ReturnStatement	return NULL ;	295:1:6068:6079	5708453	1	True				
ANR	5708508	Identifier	NULL		5708453	0					
ANR	5708509	ReturnType	R_API RBNode *		5708453	1					
ANR	5708510	Identifier	r_rbtree_find		5708453	2					
ANR	5708511	ParameterList	"RBNode * x , void * data , RBComparator cmp"		5708453	3					
ANR	5708512	Parameter	RBNode * x	284:28:5878:5886	5708453	0	True				
ANR	5708513	ParameterType	RBNode *		5708453	0					
ANR	5708514	Identifier	x		5708453	1					
ANR	5708515	Parameter	void * data	284:39:5889:5898	5708453	1	True				
ANR	5708516	ParameterType	void *		5708453	0					
ANR	5708517	Identifier	data		5708453	1					
ANR	5708518	Parameter	RBComparator cmp	284:51:5901:5916	5708453	2	True				
ANR	5708519	ParameterType	RBComparator		5708453	0					
ANR	5708520	Identifier	cmp		5708453	1					
ANR	5708521	CFGEntryNode	ENTRY		5708453		True				
ANR	5708522	CFGExitNode	EXIT		5708453		True				
ANR	5708523	Symbol	* x		5708453						
ANR	5708524	Symbol	* * x		5708453						
ANR	5708525	Symbol	NULL		5708453						
ANR	5708526	Symbol	data		5708453						
ANR	5708527	Symbol	d		5708453						
ANR	5708528	Symbol	x -> child		5708453						
ANR	5708529	Symbol	cmp		5708453						
ANR	5708530	Symbol	* x -> child		5708453						
ANR	5708531	Symbol	x		5708453						
ANR	5708532	Function	r_rbtree_free	298:0:6084:6246							
ANR	5708533	FunctionDef	"r_rbtree_free (RBNode * x , RBNodeFree freefn)"		5708532	0					
ANR	5708534	CompoundStatement		298:55:6139:6246	5708532	0					
ANR	5708535	IfStatement	if ( x )		5708532	0					
ANR	5708536	Condition	x	299:5:6146:6146	5708532	0	True				
ANR	5708537	Identifier	x		5708532	0					
ANR	5708538	CompoundStatement		2:8:9:9	5708532	1					
ANR	5708539	ExpressionStatement	"r_rbtree_free ( x -> child [ 0 ] , freefn )"	300:2:6153:6188	5708532	0	True				
ANR	5708540	CallExpression	"r_rbtree_free ( x -> child [ 0 ] , freefn )"		5708532	0					
ANR	5708541	Callee	r_rbtree_free		5708532	0					
ANR	5708542	Identifier	r_rbtree_free		5708532	0					
ANR	5708543	ArgumentList	x -> child [ 0 ]		5708532	1					
ANR	5708544	Argument	x -> child [ 0 ]		5708532	0					
ANR	5708545	ArrayIndexing	x -> child [ 0 ]		5708532	0					
ANR	5708546	PtrMemberAccess	x -> child		5708532	0					
ANR	5708547	Identifier	x		5708532	0					
ANR	5708548	Identifier	child		5708532	1					
ANR	5708549	PrimaryExpression	0		5708532	1					
ANR	5708550	Argument	freefn		5708532	1					
ANR	5708551	Identifier	freefn		5708532	0					
ANR	5708552	ExpressionStatement	"r_rbtree_free ( x -> child [ 1 ] , freefn )"	301:2:6192:6227	5708532	1	True				
ANR	5708553	CallExpression	"r_rbtree_free ( x -> child [ 1 ] , freefn )"		5708532	0					
ANR	5708554	Callee	r_rbtree_free		5708532	0					
ANR	5708555	Identifier	r_rbtree_free		5708532	0					
ANR	5708556	ArgumentList	x -> child [ 1 ]		5708532	1					
ANR	5708557	Argument	x -> child [ 1 ]		5708532	0					
ANR	5708558	ArrayIndexing	x -> child [ 1 ]		5708532	0					
ANR	5708559	PtrMemberAccess	x -> child		5708532	0					
ANR	5708560	Identifier	x		5708532	0					
ANR	5708561	Identifier	child		5708532	1					
ANR	5708562	PrimaryExpression	1		5708532	1					
ANR	5708563	Argument	freefn		5708532	1					
ANR	5708564	Identifier	freefn		5708532	0					
ANR	5708565	ExpressionStatement	freefn ( x )	302:2:6231:6241	5708532	2	True				
ANR	5708566	CallExpression	freefn ( x )		5708532	0					
ANR	5708567	Callee	freefn		5708532	0					
ANR	5708568	Identifier	freefn		5708532	0					
ANR	5708569	ArgumentList	x		5708532	1					
ANR	5708570	Argument	x		5708532	0					
ANR	5708571	Identifier	x		5708532	0					
ANR	5708572	ReturnType	R_API void		5708532	1					
ANR	5708573	Identifier	r_rbtree_free		5708532	2					
ANR	5708574	ParameterList	"RBNode * x , RBNodeFree freefn"		5708532	3					
ANR	5708575	Parameter	RBNode * x	298:25:6109:6117	5708532	0	True				
ANR	5708576	ParameterType	RBNode *		5708532	0					
ANR	5708577	Identifier	x		5708532	1					
ANR	5708578	Parameter	RBNodeFree freefn	298:36:6120:6136	5708532	1	True				
ANR	5708579	ParameterType	RBNodeFree		5708532	0					
ANR	5708580	Identifier	freefn		5708532	1					
ANR	5708581	CFGEntryNode	ENTRY		5708532		True				
ANR	5708582	CFGExitNode	EXIT		5708532		True				
ANR	5708583	Symbol	freefn		5708532						
ANR	5708584	Symbol	* x		5708532						
ANR	5708585	Symbol	* * x		5708532						
ANR	5708586	Symbol	x -> child		5708532						
ANR	5708587	Symbol	* x -> child		5708532						
ANR	5708588	Symbol	x		5708532						
ANR	5708589	Function	r_rbtree_insert	306:0:6249:6389							
ANR	5708590	FunctionDef	"r_rbtree_insert (RBNode * * root , void * data , RBNode * node , RBComparator cmp)"		5708589	0					
ANR	5708591	CompoundStatement		306:86:6335:6389	5708589	0					
ANR	5708592	ExpressionStatement	"r_rbtree_aug_insert ( root , data , node , cmp , NULL )"	307:1:6338:6387	5708589	0	True				
ANR	5708593	CallExpression	"r_rbtree_aug_insert ( root , data , node , cmp , NULL )"		5708589	0					
ANR	5708594	Callee	r_rbtree_aug_insert		5708589	0					
ANR	5708595	Identifier	r_rbtree_aug_insert		5708589	0					
ANR	5708596	ArgumentList	root		5708589	1					
ANR	5708597	Argument	root		5708589	0					
ANR	5708598	Identifier	root		5708589	0					
ANR	5708599	Argument	data		5708589	1					
ANR	5708600	Identifier	data		5708589	0					
ANR	5708601	Argument	node		5708589	2					
ANR	5708602	Identifier	node		5708589	0					
ANR	5708603	Argument	cmp		5708589	3					
ANR	5708604	Identifier	cmp		5708589	0					
ANR	5708605	Argument	NULL		5708589	4					
ANR	5708606	Identifier	NULL		5708589	0					
ANR	5708607	ReturnType	R_API void		5708589	1					
ANR	5708608	Identifier	r_rbtree_insert		5708589	2					
ANR	5708609	ParameterList	"RBNode * * root , void * data , RBNode * node , RBComparator cmp"		5708589	3					
ANR	5708610	Parameter	RBNode * * root	306:27:6276:6288	5708589	0	True				
ANR	5708611	ParameterType	RBNode * *		5708589	0					
ANR	5708612	Identifier	root		5708589	1					
ANR	5708613	Parameter	void * data	306:42:6291:6300	5708589	1	True				
ANR	5708614	ParameterType	void *		5708589	0					
ANR	5708615	Identifier	data		5708589	1					
ANR	5708616	Parameter	RBNode * node	306:54:6303:6314	5708589	2	True				
ANR	5708617	ParameterType	RBNode *		5708589	0					
ANR	5708618	Identifier	node		5708589	1					
ANR	5708619	Parameter	RBComparator cmp	306:68:6317:6332	5708589	3	True				
ANR	5708620	ParameterType	RBComparator		5708589	0					
ANR	5708621	Identifier	cmp		5708589	1					
ANR	5708622	CFGEntryNode	ENTRY		5708589		True				
ANR	5708623	CFGExitNode	EXIT		5708589		True				
ANR	5708624	Symbol	node		5708589						
ANR	5708625	Symbol	NULL		5708589						
ANR	5708626	Symbol	data		5708589						
ANR	5708627	Symbol	root		5708589						
ANR	5708628	Symbol	cmp		5708589						
ANR	5708629	Function	r_rbtree_lower_bound	310:0:6392:6628							
ANR	5708630	FunctionDef	"r_rbtree_lower_bound (RBNode * x , void * data , RBComparator cmp)"		5708629	0					
ANR	5708631	CompoundStatement		310:76:6468:6628	5708629	0					
ANR	5708632	IdentifierDeclStatement	RBNode * ret = NULL ;	311:1:6471:6489	5708629	0	True				
ANR	5708633	IdentifierDecl	* ret = NULL		5708629	0					
ANR	5708634	IdentifierDeclType	RBNode *		5708629	0					
ANR	5708635	Identifier	ret		5708629	1					
ANR	5708636	AssignmentExpression	* ret = NULL		5708629	2		=			
ANR	5708637	Identifier	NULL		5708629	0					
ANR	5708638	Identifier	NULL		5708629	1					
ANR	5708639	WhileStatement	while ( x )		5708629	1					
ANR	5708640	Condition	x	312:8:6499:6499	5708629	0	True				
ANR	5708641	Identifier	x		5708629	0					
ANR	5708642	CompoundStatement		4:2:37:58	5708629	1					
ANR	5708643	IdentifierDeclStatement	"int d = cmp ( data , x ) ;"	313:2:6506:6527	5708629	0	True				
ANR	5708644	IdentifierDecl	"d = cmp ( data , x )"		5708629	0					
ANR	5708645	IdentifierDeclType	int		5708629	0					
ANR	5708646	Identifier	d		5708629	1					
ANR	5708647	AssignmentExpression	"d = cmp ( data , x )"		5708629	2		=			
ANR	5708648	Identifier	d		5708629	0					
ANR	5708649	CallExpression	"cmp ( data , x )"		5708629	1					
ANR	5708650	Callee	cmp		5708629	0					
ANR	5708651	Identifier	cmp		5708629	0					
ANR	5708652	ArgumentList	data		5708629	1					
ANR	5708653	Argument	data		5708629	0					
ANR	5708654	Identifier	data		5708629	0					
ANR	5708655	Argument	x		5708629	1					
ANR	5708656	Identifier	x		5708629	0					
ANR	5708657	IfStatement	if ( d <= 0 )		5708629	1					
ANR	5708658	Condition	d <= 0	314:6:6535:6540	5708629	0	True				
ANR	5708659	RelationalExpression	d <= 0		5708629	0		<=			
ANR	5708660	Identifier	d		5708629	0					
ANR	5708661	PrimaryExpression	0		5708629	1					
ANR	5708662	CompoundStatement		5:14:74:74	5708629	1					
ANR	5708663	ExpressionStatement	ret = x	315:3:6548:6555	5708629	0	True				
ANR	5708664	AssignmentExpression	ret = x		5708629	0		=			
ANR	5708665	Identifier	ret		5708629	0					
ANR	5708666	Identifier	x		5708629	1					
ANR	5708667	ExpressionStatement	x = x -> child [ 0 ]	316:3:6560:6575	5708629	1	True				
ANR	5708668	AssignmentExpression	x = x -> child [ 0 ]		5708629	0		=			
ANR	5708669	Identifier	x		5708629	0					
ANR	5708670	ArrayIndexing	x -> child [ 0 ]		5708629	1					
ANR	5708671	PtrMemberAccess	x -> child		5708629	0					
ANR	5708672	Identifier	x		5708629	0					
ANR	5708673	Identifier	child		5708629	1					
ANR	5708674	PrimaryExpression	0		5708629	1					
ANR	5708675	ElseStatement	else		5708629	0					
ANR	5708676	CompoundStatement		8:9:117:117	5708629	0					
ANR	5708677	ExpressionStatement	x = x -> child [ 1 ]	318:3:6591:6606	5708629	0	True				
ANR	5708678	AssignmentExpression	x = x -> child [ 1 ]		5708629	0		=			
ANR	5708679	Identifier	x		5708629	0					
ANR	5708680	ArrayIndexing	x -> child [ 1 ]		5708629	1					
ANR	5708681	PtrMemberAccess	x -> child		5708629	0					
ANR	5708682	Identifier	x		5708629	0					
ANR	5708683	Identifier	child		5708629	1					
ANR	5708684	PrimaryExpression	1		5708629	1					
ANR	5708685	ReturnStatement	return ret ;	321:1:6616:6626	5708629	2	True				
ANR	5708686	Identifier	ret		5708629	0					
ANR	5708687	ReturnType	R_API RBNode *		5708629	1					
ANR	5708688	Identifier	r_rbtree_lower_bound		5708629	2					
ANR	5708689	ParameterList	"RBNode * x , void * data , RBComparator cmp"		5708629	3					
ANR	5708690	Parameter	RBNode * x	310:35:6427:6435	5708629	0	True				
ANR	5708691	ParameterType	RBNode *		5708629	0					
ANR	5708692	Identifier	x		5708629	1					
ANR	5708693	Parameter	void * data	310:46:6438:6447	5708629	1	True				
ANR	5708694	ParameterType	void *		5708629	0					
ANR	5708695	Identifier	data		5708629	1					
ANR	5708696	Parameter	RBComparator cmp	310:58:6450:6465	5708629	2	True				
ANR	5708697	ParameterType	RBComparator		5708629	0					
ANR	5708698	Identifier	cmp		5708629	1					
ANR	5708699	CFGEntryNode	ENTRY		5708629		True				
ANR	5708700	CFGExitNode	EXIT		5708629		True				
ANR	5708701	Symbol	ret		5708629						
ANR	5708702	Symbol	* x		5708629						
ANR	5708703	Symbol	NULL		5708629						
ANR	5708704	Symbol	* * x		5708629						
ANR	5708705	Symbol	data		5708629						
ANR	5708706	Symbol	d		5708629						
ANR	5708707	Symbol	x -> child		5708629						
ANR	5708708	Symbol	cmp		5708629						
ANR	5708709	Symbol	* x -> child		5708629						
ANR	5708710	Symbol	x		5708629						
ANR	5708711	Function	r_rbtree_lower_bound_backward	324:0:6631:6771							
ANR	5708712	FunctionDef	"r_rbtree_lower_bound_backward (RBNode * root , void * data , RBComparator cmp)"		5708711	0					
ANR	5708713	CompoundStatement		324:87:6718:6771	5708711	0					
ANR	5708714	ReturnStatement	"return bound_iter ( root , data , cmp , false , true ) ;"	325:1:6721:6769	5708711	0	True				
ANR	5708715	CallExpression	"bound_iter ( root , data , cmp , false , true )"		5708711	0					
ANR	5708716	Callee	bound_iter		5708711	0					
ANR	5708717	Identifier	bound_iter		5708711	0					
ANR	5708718	ArgumentList	root		5708711	1					
ANR	5708719	Argument	root		5708711	0					
ANR	5708720	Identifier	root		5708711	0					
ANR	5708721	Argument	data		5708711	1					
ANR	5708722	Identifier	data		5708711	0					
ANR	5708723	Argument	cmp		5708711	2					
ANR	5708724	Identifier	cmp		5708711	0					
ANR	5708725	Argument	false		5708711	3					
ANR	5708726	Identifier	false		5708711	0					
ANR	5708727	Argument	true		5708711	4					
ANR	5708728	Identifier	true		5708711	0					
ANR	5708729	ReturnType	R_API RBIter		5708711	1					
ANR	5708730	Identifier	r_rbtree_lower_bound_backward		5708711	2					
ANR	5708731	ParameterList	"RBNode * root , void * data , RBComparator cmp"		5708711	3					
ANR	5708732	Parameter	RBNode * root	324:43:6674:6685	5708711	0	True				
ANR	5708733	ParameterType	RBNode *		5708711	0					
ANR	5708734	Identifier	root		5708711	1					
ANR	5708735	Parameter	void * data	324:57:6688:6697	5708711	1	True				
ANR	5708736	ParameterType	void *		5708711	0					
ANR	5708737	Identifier	data		5708711	1					
ANR	5708738	Parameter	RBComparator cmp	324:69:6700:6715	5708711	2	True				
ANR	5708739	ParameterType	RBComparator		5708711	0					
ANR	5708740	Identifier	cmp		5708711	1					
ANR	5708741	CFGEntryNode	ENTRY		5708711		True				
ANR	5708742	CFGExitNode	EXIT		5708711		True				
ANR	5708743	Symbol	data		5708711						
ANR	5708744	Symbol	root		5708711						
ANR	5708745	Symbol	cmp		5708711						
ANR	5708746	Symbol	true		5708711						
ANR	5708747	Symbol	bound_iter		5708711						
ANR	5708748	Symbol	false		5708711						
ANR	5708749	Function	r_rbtree_lower_bound_forward	328:0:6774:6914							
ANR	5708750	FunctionDef	"r_rbtree_lower_bound_forward (RBNode * root , void * data , RBComparator cmp)"		5708749	0					
ANR	5708751	CompoundStatement		328:86:6860:6914	5708749	0					
ANR	5708752	ReturnStatement	"return bound_iter ( root , data , cmp , false , false ) ;"	329:1:6863:6912	5708749	0	True				
ANR	5708753	CallExpression	"bound_iter ( root , data , cmp , false , false )"		5708749	0					
ANR	5708754	Callee	bound_iter		5708749	0					
ANR	5708755	Identifier	bound_iter		5708749	0					
ANR	5708756	ArgumentList	root		5708749	1					
ANR	5708757	Argument	root		5708749	0					
ANR	5708758	Identifier	root		5708749	0					
ANR	5708759	Argument	data		5708749	1					
ANR	5708760	Identifier	data		5708749	0					
ANR	5708761	Argument	cmp		5708749	2					
ANR	5708762	Identifier	cmp		5708749	0					
ANR	5708763	Argument	false		5708749	3					
ANR	5708764	Identifier	false		5708749	0					
ANR	5708765	Argument	false		5708749	4					
ANR	5708766	Identifier	false		5708749	0					
ANR	5708767	ReturnType	R_API RBIter		5708749	1					
ANR	5708768	Identifier	r_rbtree_lower_bound_forward		5708749	2					
ANR	5708769	ParameterList	"RBNode * root , void * data , RBComparator cmp"		5708749	3					
ANR	5708770	Parameter	RBNode * root	328:42:6816:6827	5708749	0	True				
ANR	5708771	ParameterType	RBNode *		5708749	0					
ANR	5708772	Identifier	root		5708749	1					
ANR	5708773	Parameter	void * data	328:56:6830:6839	5708749	1	True				
ANR	5708774	ParameterType	void *		5708749	0					
ANR	5708775	Identifier	data		5708749	1					
ANR	5708776	Parameter	RBComparator cmp	328:68:6842:6857	5708749	2	True				
ANR	5708777	ParameterType	RBComparator		5708749	0					
ANR	5708778	Identifier	cmp		5708749	1					
ANR	5708779	CFGEntryNode	ENTRY		5708749		True				
ANR	5708780	CFGExitNode	EXIT		5708749		True				
ANR	5708781	Symbol	data		5708749						
ANR	5708782	Symbol	root		5708749						
ANR	5708783	Symbol	cmp		5708749						
ANR	5708784	Symbol	false		5708749						
ANR	5708785	Symbol	bound_iter		5708749						
ANR	5708786	Function	r_rbtree_upper_bound	332:0:6917:7150							
ANR	5708787	FunctionDef	"r_rbtree_upper_bound (RBNode * x , void * data , RBComparator cmp)"		5708786	0					
ANR	5708788	CompoundStatement		332:76:6993:7150	5708786	0					
ANR	5708789	IdentifierDeclStatement	void * ret = NULL ;	333:1:6996:7012	5708786	0	True				
ANR	5708790	IdentifierDecl	* ret = NULL		5708786	0					
ANR	5708791	IdentifierDeclType	void *		5708786	0					
ANR	5708792	Identifier	ret		5708786	1					
ANR	5708793	AssignmentExpression	* ret = NULL		5708786	2		=			
ANR	5708794	Identifier	NULL		5708786	0					
ANR	5708795	Identifier	NULL		5708786	1					
ANR	5708796	WhileStatement	while ( x )		5708786	1					
ANR	5708797	Condition	x	334:8:7022:7022	5708786	0	True				
ANR	5708798	Identifier	x		5708786	0					
ANR	5708799	CompoundStatement		4:2:35:56	5708786	1					
ANR	5708800	IdentifierDeclStatement	"int d = cmp ( data , x ) ;"	335:2:7029:7050	5708786	0	True				
ANR	5708801	IdentifierDecl	"d = cmp ( data , x )"		5708786	0					
ANR	5708802	IdentifierDeclType	int		5708786	0					
ANR	5708803	Identifier	d		5708786	1					
ANR	5708804	AssignmentExpression	"d = cmp ( data , x )"		5708786	2		=			
ANR	5708805	Identifier	d		5708786	0					
ANR	5708806	CallExpression	"cmp ( data , x )"		5708786	1					
ANR	5708807	Callee	cmp		5708786	0					
ANR	5708808	Identifier	cmp		5708786	0					
ANR	5708809	ArgumentList	data		5708786	1					
ANR	5708810	Argument	data		5708786	0					
ANR	5708811	Identifier	data		5708786	0					
ANR	5708812	Argument	x		5708786	1					
ANR	5708813	Identifier	x		5708786	0					
ANR	5708814	IfStatement	if ( d < 0 )		5708786	1					
ANR	5708815	Condition	d < 0	336:6:7058:7062	5708786	0	True				
ANR	5708816	RelationalExpression	d < 0		5708786	0		<			
ANR	5708817	Identifier	d		5708786	0					
ANR	5708818	PrimaryExpression	0		5708786	1					
ANR	5708819	CompoundStatement		5:13:71:71	5708786	1					
ANR	5708820	ExpressionStatement	ret = x	337:3:7070:7077	5708786	0	True				
ANR	5708821	AssignmentExpression	ret = x		5708786	0		=			
ANR	5708822	Identifier	ret		5708786	0					
ANR	5708823	Identifier	x		5708786	1					
ANR	5708824	ExpressionStatement	x = x -> child [ 0 ]	338:3:7082:7097	5708786	1	True				
ANR	5708825	AssignmentExpression	x = x -> child [ 0 ]		5708786	0		=			
ANR	5708826	Identifier	x		5708786	0					
ANR	5708827	ArrayIndexing	x -> child [ 0 ]		5708786	1					
ANR	5708828	PtrMemberAccess	x -> child		5708786	0					
ANR	5708829	Identifier	x		5708786	0					
ANR	5708830	Identifier	child		5708786	1					
ANR	5708831	PrimaryExpression	0		5708786	1					
ANR	5708832	ElseStatement	else		5708786	0					
ANR	5708833	CompoundStatement		8:9:114:114	5708786	0					
ANR	5708834	ExpressionStatement	x = x -> child [ 1 ]	340:3:7113:7128	5708786	0	True				
ANR	5708835	AssignmentExpression	x = x -> child [ 1 ]		5708786	0		=			
ANR	5708836	Identifier	x		5708786	0					
ANR	5708837	ArrayIndexing	x -> child [ 1 ]		5708786	1					
ANR	5708838	PtrMemberAccess	x -> child		5708786	0					
ANR	5708839	Identifier	x		5708786	0					
ANR	5708840	Identifier	child		5708786	1					
ANR	5708841	PrimaryExpression	1		5708786	1					
ANR	5708842	ReturnStatement	return ret ;	343:1:7138:7148	5708786	2	True				
ANR	5708843	Identifier	ret		5708786	0					
ANR	5708844	ReturnType	R_API RBNode *		5708786	1					
ANR	5708845	Identifier	r_rbtree_upper_bound		5708786	2					
ANR	5708846	ParameterList	"RBNode * x , void * data , RBComparator cmp"		5708786	3					
ANR	5708847	Parameter	RBNode * x	332:35:6952:6960	5708786	0	True				
ANR	5708848	ParameterType	RBNode *		5708786	0					
ANR	5708849	Identifier	x		5708786	1					
ANR	5708850	Parameter	void * data	332:46:6963:6972	5708786	1	True				
ANR	5708851	ParameterType	void *		5708786	0					
ANR	5708852	Identifier	data		5708786	1					
ANR	5708853	Parameter	RBComparator cmp	332:58:6975:6990	5708786	2	True				
ANR	5708854	ParameterType	RBComparator		5708786	0					
ANR	5708855	Identifier	cmp		5708786	1					
ANR	5708856	CFGEntryNode	ENTRY		5708786		True				
ANR	5708857	CFGExitNode	EXIT		5708786		True				
ANR	5708858	Symbol	ret		5708786						
ANR	5708859	Symbol	* x		5708786						
ANR	5708860	Symbol	NULL		5708786						
ANR	5708861	Symbol	* * x		5708786						
ANR	5708862	Symbol	data		5708786						
ANR	5708863	Symbol	d		5708786						
ANR	5708864	Symbol	x -> child		5708786						
ANR	5708865	Symbol	cmp		5708786						
ANR	5708866	Symbol	* x -> child		5708786						
ANR	5708867	Symbol	x		5708786						
ANR	5708868	Function	r_rbtree_upper_bound_backward	346:0:7153:7292							
ANR	5708869	FunctionDef	"r_rbtree_upper_bound_backward (RBNode * root , void * data , RBComparator cmp)"		5708868	0					
ANR	5708870	CompoundStatement		346:87:7240:7292	5708868	0					
ANR	5708871	ReturnStatement	"return bound_iter ( root , data , cmp , true , true ) ;"	347:1:7243:7290	5708868	0	True				
ANR	5708872	CallExpression	"bound_iter ( root , data , cmp , true , true )"		5708868	0					
ANR	5708873	Callee	bound_iter		5708868	0					
ANR	5708874	Identifier	bound_iter		5708868	0					
ANR	5708875	ArgumentList	root		5708868	1					
ANR	5708876	Argument	root		5708868	0					
ANR	5708877	Identifier	root		5708868	0					
ANR	5708878	Argument	data		5708868	1					
ANR	5708879	Identifier	data		5708868	0					
ANR	5708880	Argument	cmp		5708868	2					
ANR	5708881	Identifier	cmp		5708868	0					
ANR	5708882	Argument	true		5708868	3					
ANR	5708883	Identifier	true		5708868	0					
ANR	5708884	Argument	true		5708868	4					
ANR	5708885	Identifier	true		5708868	0					
ANR	5708886	ReturnType	R_API RBIter		5708868	1					
ANR	5708887	Identifier	r_rbtree_upper_bound_backward		5708868	2					
ANR	5708888	ParameterList	"RBNode * root , void * data , RBComparator cmp"		5708868	3					
ANR	5708889	Parameter	RBNode * root	346:43:7196:7207	5708868	0	True				
ANR	5708890	ParameterType	RBNode *		5708868	0					
ANR	5708891	Identifier	root		5708868	1					
ANR	5708892	Parameter	void * data	346:57:7210:7219	5708868	1	True				
ANR	5708893	ParameterType	void *		5708868	0					
ANR	5708894	Identifier	data		5708868	1					
ANR	5708895	Parameter	RBComparator cmp	346:69:7222:7237	5708868	2	True				
ANR	5708896	ParameterType	RBComparator		5708868	0					
ANR	5708897	Identifier	cmp		5708868	1					
ANR	5708898	CFGEntryNode	ENTRY		5708868		True				
ANR	5708899	CFGExitNode	EXIT		5708868		True				
ANR	5708900	Symbol	data		5708868						
ANR	5708901	Symbol	root		5708868						
ANR	5708902	Symbol	cmp		5708868						
ANR	5708903	Symbol	true		5708868						
ANR	5708904	Symbol	bound_iter		5708868						
ANR	5708905	Function	r_rbtree_upper_bound_forward	350:0:7295:7434							
ANR	5708906	FunctionDef	"r_rbtree_upper_bound_forward (RBNode * root , void * data , RBComparator cmp)"		5708905	0					
ANR	5708907	CompoundStatement		350:86:7381:7434	5708905	0					
ANR	5708908	ReturnStatement	"return bound_iter ( root , data , cmp , true , false ) ;"	351:1:7384:7432	5708905	0	True				
ANR	5708909	CallExpression	"bound_iter ( root , data , cmp , true , false )"		5708905	0					
ANR	5708910	Callee	bound_iter		5708905	0					
ANR	5708911	Identifier	bound_iter		5708905	0					
ANR	5708912	ArgumentList	root		5708905	1					
ANR	5708913	Argument	root		5708905	0					
ANR	5708914	Identifier	root		5708905	0					
ANR	5708915	Argument	data		5708905	1					
ANR	5708916	Identifier	data		5708905	0					
ANR	5708917	Argument	cmp		5708905	2					
ANR	5708918	Identifier	cmp		5708905	0					
ANR	5708919	Argument	true		5708905	3					
ANR	5708920	Identifier	true		5708905	0					
ANR	5708921	Argument	false		5708905	4					
ANR	5708922	Identifier	false		5708905	0					
ANR	5708923	ReturnType	R_API RBIter		5708905	1					
ANR	5708924	Identifier	r_rbtree_upper_bound_forward		5708905	2					
ANR	5708925	ParameterList	"RBNode * root , void * data , RBComparator cmp"		5708905	3					
ANR	5708926	Parameter	RBNode * root	350:42:7337:7348	5708905	0	True				
ANR	5708927	ParameterType	RBNode *		5708905	0					
ANR	5708928	Identifier	root		5708905	1					
ANR	5708929	Parameter	void * data	350:56:7351:7360	5708905	1	True				
ANR	5708930	ParameterType	void *		5708905	0					
ANR	5708931	Identifier	data		5708905	1					
ANR	5708932	Parameter	RBComparator cmp	350:68:7363:7378	5708905	2	True				
ANR	5708933	ParameterType	RBComparator		5708905	0					
ANR	5708934	Identifier	cmp		5708905	1					
ANR	5708935	CFGEntryNode	ENTRY		5708905		True				
ANR	5708936	CFGExitNode	EXIT		5708905		True				
ANR	5708937	Symbol	data		5708905						
ANR	5708938	Symbol	root		5708905						
ANR	5708939	Symbol	cmp		5708905						
ANR	5708940	Symbol	bound_iter		5708905						
ANR	5708941	Symbol	false		5708905						
ANR	5708942	Symbol	true		5708905						
ANR	5708943	Function	_first	354:0:7437:7577							
ANR	5708944	FunctionDef	"_first (RBNode * x , int dir)"		5708943	0					
ANR	5708945	CompoundStatement		354:41:7478:7577	5708943	0					
ANR	5708946	IdentifierDeclStatement	RBIter it ;	355:1:7481:7490	5708943	0	True				
ANR	5708947	IdentifierDecl	it		5708943	0					
ANR	5708948	IdentifierDeclType	RBIter		5708943	0					
ANR	5708949	Identifier	it		5708943	1					
ANR	5708950	ExpressionStatement	it . len = 0	356:1:7493:7503	5708943	1	True				
ANR	5708951	AssignmentExpression	it . len = 0		5708943	0		=			
ANR	5708952	MemberAccess	it . len		5708943	0					
ANR	5708953	Identifier	it		5708943	0					
ANR	5708954	Identifier	len		5708943	1					
ANR	5708955	PrimaryExpression	0		5708943	1					
ANR	5708956	ForStatement	for ( ; x ; x = x -> child [ dir ] )		5708943	2					
ANR	5708957	Condition	x	357:8:7513:7513	5708943	0	True				
ANR	5708958	Identifier	x		5708943	0					
ANR	5708959	AssignmentExpression	x = x -> child [ dir ]	357:11:7516:7532	5708943	1	True	=			
ANR	5708960	Identifier	x		5708943	0					
ANR	5708961	ArrayIndexing	x -> child [ dir ]		5708943	1					
ANR	5708962	PtrMemberAccess	x -> child		5708943	0					
ANR	5708963	Identifier	x		5708943	0					
ANR	5708964	Identifier	child		5708943	1					
ANR	5708965	Identifier	dir		5708943	1					
ANR	5708966	CompoundStatement		4:30:56:56	5708943	2					
ANR	5708967	ExpressionStatement	it . path [ it . len ++ ] = x	358:2:7539:7560	5708943	0	True				
ANR	5708968	AssignmentExpression	it . path [ it . len ++ ] = x		5708943	0		=			
ANR	5708969	ArrayIndexing	it . path [ it . len ++ ]		5708943	0					
ANR	5708970	MemberAccess	it . path		5708943	0					
ANR	5708971	Identifier	it		5708943	0					
ANR	5708972	Identifier	path		5708943	1					
ANR	5708973	PostIncDecOperationExpression	it . len ++		5708943	1					
ANR	5708974	MemberAccess	it . len		5708943	0					
ANR	5708975	Identifier	it		5708943	0					
ANR	5708976	Identifier	len		5708943	1					
ANR	5708977	IncDec	++		5708943	1					
ANR	5708978	Identifier	x		5708943	1					
ANR	5708979	ReturnStatement	return it ;	360:1:7566:7575	5708943	3	True				
ANR	5708980	Identifier	it		5708943	0					
ANR	5708981	ReturnType	static RBIter		5708943	1					
ANR	5708982	Identifier	_first		5708943	2					
ANR	5708983	ParameterList	"RBNode * x , int dir"		5708943	3					
ANR	5708984	Parameter	RBNode * x	354:21:7458:7466	5708943	0	True				
ANR	5708985	ParameterType	RBNode *		5708943	0					
ANR	5708986	Identifier	x		5708943	1					
ANR	5708987	Parameter	int dir	354:32:7469:7475	5708943	1	True				
ANR	5708988	ParameterType	int		5708943	0					
ANR	5708989	Identifier	dir		5708943	1					
ANR	5708990	CFGEntryNode	ENTRY		5708943		True				
ANR	5708991	CFGExitNode	EXIT		5708943		True				
ANR	5708992	Symbol	* x		5708943						
ANR	5708993	Symbol	* it		5708943						
ANR	5708994	Symbol	* * x		5708943						
ANR	5708995	Symbol	x -> child		5708943						
ANR	5708996	Symbol	* x -> child		5708943						
ANR	5708997	Symbol	x		5708943						
ANR	5708998	Symbol	* dir		5708943						
ANR	5708999	Symbol	it		5708943						
ANR	5709000	Symbol	it . path		5708943						
ANR	5709001	Symbol	dir		5708943						
ANR	5709002	Symbol	* it . path		5708943						
ANR	5709003	Symbol	it . len		5708943						
ANR	5709004	Function	r_rbtree_first	363:0:7580:7650							
ANR	5709005	FunctionDef	r_rbtree_first (RBNode * tree)		5709004	0					
ANR	5709006	CompoundStatement		363:42:7622:7650	5709004	0					
ANR	5709007	ReturnStatement	"return _first ( tree , 0 ) ;"	364:1:7625:7648	5709004	0	True				
ANR	5709008	CallExpression	"_first ( tree , 0 )"		5709004	0					
ANR	5709009	Callee	_first		5709004	0					
ANR	5709010	Identifier	_first		5709004	0					
ANR	5709011	ArgumentList	tree		5709004	1					
ANR	5709012	Argument	tree		5709004	0					
ANR	5709013	Identifier	tree		5709004	0					
ANR	5709014	Argument	0		5709004	1					
ANR	5709015	PrimaryExpression	0		5709004	0					
ANR	5709016	ReturnType	R_API RBIter		5709004	1					
ANR	5709017	Identifier	r_rbtree_first		5709004	2					
ANR	5709018	ParameterList	RBNode * tree		5709004	3					
ANR	5709019	Parameter	RBNode * tree	363:28:7608:7619	5709004	0	True				
ANR	5709020	ParameterType	RBNode *		5709004	0					
ANR	5709021	Identifier	tree		5709004	1					
ANR	5709022	CFGEntryNode	ENTRY		5709004		True				
ANR	5709023	CFGExitNode	EXIT		5709004		True				
ANR	5709024	Symbol	tree		5709004						
ANR	5709025	Symbol	_first		5709004						
ANR	5709026	Function	r_rbtree_last	367:0:7653:7722							
ANR	5709027	FunctionDef	r_rbtree_last (RBNode * tree)		5709026	0					
ANR	5709028	CompoundStatement		367:41:7694:7722	5709026	0					
ANR	5709029	ReturnStatement	"return _first ( tree , 1 ) ;"	368:1:7697:7720	5709026	0	True				
ANR	5709030	CallExpression	"_first ( tree , 1 )"		5709026	0					
ANR	5709031	Callee	_first		5709026	0					
ANR	5709032	Identifier	_first		5709026	0					
ANR	5709033	ArgumentList	tree		5709026	1					
ANR	5709034	Argument	tree		5709026	0					
ANR	5709035	Identifier	tree		5709026	0					
ANR	5709036	Argument	1		5709026	1					
ANR	5709037	PrimaryExpression	1		5709026	0					
ANR	5709038	ReturnType	R_API RBIter		5709026	1					
ANR	5709039	Identifier	r_rbtree_last		5709026	2					
ANR	5709040	ParameterList	RBNode * tree		5709026	3					
ANR	5709041	Parameter	RBNode * tree	367:27:7680:7691	5709026	0	True				
ANR	5709042	ParameterType	RBNode *		5709026	0					
ANR	5709043	Identifier	tree		5709026	1					
ANR	5709044	CFGEntryNode	ENTRY		5709026		True				
ANR	5709045	CFGExitNode	EXIT		5709026		True				
ANR	5709046	Symbol	tree		5709026						
ANR	5709047	Symbol	_first		5709026						
ANR	5709048	Function	_next	371:0:7725:7887							
ANR	5709049	FunctionDef	"_next (RBIter * it , int dir)"		5709048	0					
ANR	5709050	CompoundStatement		371:46:7771:7887	5709048	0					
ANR	5709051	IdentifierDeclStatement	RBNode * x = it -> path [ -- it -> len ] ;	372:1:7774:7805	5709048	0	True				
ANR	5709052	IdentifierDecl	* x = it -> path [ -- it -> len ]		5709048	0					
ANR	5709053	IdentifierDeclType	RBNode *		5709048	0					
ANR	5709054	Identifier	x		5709048	1					
ANR	5709055	AssignmentExpression	* x = it -> path [ -- it -> len ]		5709048	2		=			
ANR	5709056	Identifier	x		5709048	0					
ANR	5709057	ArrayIndexing	it -> path [ -- it -> len ]		5709048	1					
ANR	5709058	PtrMemberAccess	it -> path		5709048	0					
ANR	5709059	Identifier	it		5709048	0					
ANR	5709060	Identifier	path		5709048	1					
ANR	5709061	UnaryExpression	-- it -> len		5709048	1					
ANR	5709062	IncDec	--		5709048	0					
ANR	5709063	PtrMemberAccess	it -> len		5709048	1					
ANR	5709064	Identifier	it		5709048	0					
ANR	5709065	Identifier	len		5709048	1					
ANR	5709066	ForStatement	for ( x = x -> child [ ! dir ] ; x ; x = x -> child [ dir ] )		5709048	1					
ANR	5709067	ForInit	x = x -> child [ ! dir ] ;	373:6:7813:7831	5709048	0	True				
ANR	5709068	AssignmentExpression	x = x -> child [ ! dir ]		5709048	0		=			
ANR	5709069	Identifier	x		5709048	0					
ANR	5709070	ArrayIndexing	x -> child [ ! dir ]		5709048	1					
ANR	5709071	PtrMemberAccess	x -> child		5709048	0					
ANR	5709072	Identifier	x		5709048	0					
ANR	5709073	Identifier	child		5709048	1					
ANR	5709074	UnaryOperationExpression	! dir		5709048	1					
ANR	5709075	UnaryOperator	!		5709048	0					
ANR	5709076	Identifier	dir		5709048	1					
ANR	5709077	Condition	x	373:26:7833:7833	5709048	1	True				
ANR	5709078	Identifier	x		5709048	0					
ANR	5709079	AssignmentExpression	x = x -> child [ dir ]	373:29:7836:7852	5709048	2	True	=			
ANR	5709080	Identifier	x		5709048	0					
ANR	5709081	ArrayIndexing	x -> child [ dir ]		5709048	1					
ANR	5709082	PtrMemberAccess	x -> child		5709048	0					
ANR	5709083	Identifier	x		5709048	0					
ANR	5709084	Identifier	child		5709048	1					
ANR	5709085	Identifier	dir		5709048	1					
ANR	5709086	CompoundStatement		3:48:83:83	5709048	3					
ANR	5709087	ExpressionStatement	it -> path [ it -> len ++ ] = x	374:2:7859:7882	5709048	0	True				
ANR	5709088	AssignmentExpression	it -> path [ it -> len ++ ] = x		5709048	0		=			
ANR	5709089	ArrayIndexing	it -> path [ it -> len ++ ]		5709048	0					
ANR	5709090	PtrMemberAccess	it -> path		5709048	0					
ANR	5709091	Identifier	it		5709048	0					
ANR	5709092	Identifier	path		5709048	1					
ANR	5709093	PostIncDecOperationExpression	it -> len ++		5709048	1					
ANR	5709094	PtrMemberAccess	it -> len		5709048	0					
ANR	5709095	Identifier	it		5709048	0					
ANR	5709096	Identifier	len		5709048	1					
ANR	5709097	IncDec	++		5709048	1					
ANR	5709098	Identifier	x		5709048	1					
ANR	5709099	ReturnType	static inline void		5709048	1					
ANR	5709100	Identifier	_next		5709048	2					
ANR	5709101	ParameterList	"RBIter * it , int dir"		5709048	3					
ANR	5709102	Parameter	RBIter * it	371:25:7750:7759	5709048	0	True				
ANR	5709103	ParameterType	RBIter *		5709048	0					
ANR	5709104	Identifier	it		5709048	1					
ANR	5709105	Parameter	int dir	371:37:7762:7768	5709048	1	True				
ANR	5709106	ParameterType	int		5709048	0					
ANR	5709107	Identifier	dir		5709048	1					
ANR	5709108	CFGEntryNode	ENTRY		5709048		True				
ANR	5709109	CFGExitNode	EXIT		5709048		True				
ANR	5709110	Symbol	* x		5709048						
ANR	5709111	Symbol	x -> child		5709048						
ANR	5709112	Symbol	* x -> child		5709048						
ANR	5709113	Symbol	* dir		5709048						
ANR	5709114	Symbol	it		5709048						
ANR	5709115	Symbol	* it -> path		5709048						
ANR	5709116	Symbol	dir		5709048						
ANR	5709117	Symbol	* it		5709048						
ANR	5709118	Symbol	* * x		5709048						
ANR	5709119	Symbol	* * it		5709048						
ANR	5709120	Symbol	x		5709048						
ANR	5709121	Symbol	it -> path		5709048						
ANR	5709122	Symbol	* it -> len		5709048						
ANR	5709123	Symbol	it -> len		5709048						
ANR	5709124	Function	r_rbtree_iter_next	378:0:7890:7950							
ANR	5709125	FunctionDef	r_rbtree_iter_next (RBIter * it)		5709124	0					
ANR	5709126	CompoundStatement		378:42:7932:7950	5709124	0					
ANR	5709127	ExpressionStatement	"_next ( it , 0 )"	379:1:7935:7948	5709124	0	True				
ANR	5709128	CallExpression	"_next ( it , 0 )"		5709124	0					
ANR	5709129	Callee	_next		5709124	0					
ANR	5709130	Identifier	_next		5709124	0					
ANR	5709131	ArgumentList	it		5709124	1					
ANR	5709132	Argument	it		5709124	0					
ANR	5709133	Identifier	it		5709124	0					
ANR	5709134	Argument	0		5709124	1					
ANR	5709135	PrimaryExpression	0		5709124	0					
ANR	5709136	ReturnType	R_API void		5709124	1					
ANR	5709137	Identifier	r_rbtree_iter_next		5709124	2					
ANR	5709138	ParameterList	RBIter * it		5709124	3					
ANR	5709139	Parameter	RBIter * it	378:30:7920:7929	5709124	0	True				
ANR	5709140	ParameterType	RBIter *		5709124	0					
ANR	5709141	Identifier	it		5709124	1					
ANR	5709142	CFGEntryNode	ENTRY		5709124		True				
ANR	5709143	CFGExitNode	EXIT		5709124		True				
ANR	5709144	Symbol	it		5709124						
ANR	5709145	Function	r_rbtree_iter_prev	382:0:7953:8013							
ANR	5709146	FunctionDef	r_rbtree_iter_prev (RBIter * it)		5709145	0					
ANR	5709147	CompoundStatement		382:42:7995:8013	5709145	0					
ANR	5709148	ExpressionStatement	"_next ( it , 1 )"	383:1:7998:8011	5709145	0	True				
ANR	5709149	CallExpression	"_next ( it , 1 )"		5709145	0					
ANR	5709150	Callee	_next		5709145	0					
ANR	5709151	Identifier	_next		5709145	0					
ANR	5709152	ArgumentList	it		5709145	1					
ANR	5709153	Argument	it		5709145	0					
ANR	5709154	Identifier	it		5709145	0					
ANR	5709155	Argument	1		5709145	1					
ANR	5709156	PrimaryExpression	1		5709145	0					
ANR	5709157	ReturnType	R_API void		5709145	1					
ANR	5709158	Identifier	r_rbtree_iter_prev		5709145	2					
ANR	5709159	ParameterList	RBIter * it		5709145	3					
ANR	5709160	Parameter	RBIter * it	382:30:7983:7992	5709145	0	True				
ANR	5709161	ParameterType	RBIter *		5709145	0					
ANR	5709162	Identifier	it		5709145	1					
ANR	5709163	CFGEntryNode	ENTRY		5709145		True				
ANR	5709164	CFGExitNode	EXIT		5709145		True				
ANR	5709165	Symbol	it		5709145						
