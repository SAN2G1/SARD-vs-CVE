command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6189258	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_string.c								
ANR	6189259	Function	_zip_string_crc32	43:0:1695:1922							
ANR	6189260	FunctionDef	_zip_string_crc32 (const struct zip_string * s)		6189259	0					
ANR	6189261	CompoundStatement		45:0:1754:1922	6189259	0					
ANR	6189262	IdentifierDeclStatement	zip_uint32_t crc ;	46:4:1760:1776	6189259	0	True				
ANR	6189263	IdentifierDecl	crc		6189259	0					
ANR	6189264	IdentifierDeclType	zip_uint32_t		6189259	0					
ANR	6189265	Identifier	crc		6189259	1					
ANR	6189266	ExpressionStatement	"crc = ( zip_uint32_t ) crc32 ( 0L , Z_NULL , 0 )"	48:4:1787:1827	6189259	1	True				
ANR	6189267	AssignmentExpression	"crc = ( zip_uint32_t ) crc32 ( 0L , Z_NULL , 0 )"		6189259	0		=			
ANR	6189268	Identifier	crc		6189259	0					
ANR	6189269	CastExpression	"( zip_uint32_t ) crc32 ( 0L , Z_NULL , 0 )"		6189259	1					
ANR	6189270	CastTarget	zip_uint32_t		6189259	0					
ANR	6189271	CallExpression	"crc32 ( 0L , Z_NULL , 0 )"		6189259	1					
ANR	6189272	Callee	crc32		6189259	0					
ANR	6189273	Identifier	crc32		6189259	0					
ANR	6189274	ArgumentList	0L		6189259	1					
ANR	6189275	Argument	0L		6189259	0					
ANR	6189276	PrimaryExpression	0L		6189259	0					
ANR	6189277	Argument	Z_NULL		6189259	1					
ANR	6189278	Identifier	Z_NULL		6189259	0					
ANR	6189279	Argument	0		6189259	2					
ANR	6189280	PrimaryExpression	0		6189259	0					
ANR	6189281	IfStatement	if ( s != NULL )		6189259	2					
ANR	6189282	Condition	s != NULL	50:8:1838:1846	6189259	0	True				
ANR	6189283	EqualityExpression	s != NULL		6189259	0		!=			
ANR	6189284	Identifier	s		6189259	0					
ANR	6189285	Identifier	NULL		6189259	1					
ANR	6189286	ExpressionStatement	"crc = ( zip_uint32_t ) crc32 ( crc , s -> raw , s -> length )"	51:1:1854:1903	6189259	1	True				
ANR	6189287	AssignmentExpression	"crc = ( zip_uint32_t ) crc32 ( crc , s -> raw , s -> length )"		6189259	0		=			
ANR	6189288	Identifier	crc		6189259	0					
ANR	6189289	CastExpression	"( zip_uint32_t ) crc32 ( crc , s -> raw , s -> length )"		6189259	1					
ANR	6189290	CastTarget	zip_uint32_t		6189259	0					
ANR	6189291	CallExpression	"crc32 ( crc , s -> raw , s -> length )"		6189259	1					
ANR	6189292	Callee	crc32		6189259	0					
ANR	6189293	Identifier	crc32		6189259	0					
ANR	6189294	ArgumentList	crc		6189259	1					
ANR	6189295	Argument	crc		6189259	0					
ANR	6189296	Identifier	crc		6189259	0					
ANR	6189297	Argument	s -> raw		6189259	1					
ANR	6189298	PtrMemberAccess	s -> raw		6189259	0					
ANR	6189299	Identifier	s		6189259	0					
ANR	6189300	Identifier	raw		6189259	1					
ANR	6189301	Argument	s -> length		6189259	2					
ANR	6189302	PtrMemberAccess	s -> length		6189259	0					
ANR	6189303	Identifier	s		6189259	0					
ANR	6189304	Identifier	length		6189259	1					
ANR	6189305	ReturnStatement	return crc ;	53:4:1910:1920	6189259	3	True				
ANR	6189306	Identifier	crc		6189259	0					
ANR	6189307	ReturnType	zip_uint32_t		6189259	1					
ANR	6189308	Identifier	_zip_string_crc32		6189259	2					
ANR	6189309	ParameterList	const struct zip_string * s		6189259	3					
ANR	6189310	Parameter	const struct zip_string * s	44:18:1726:1751	6189259	0	True				
ANR	6189311	ParameterType	const struct zip_string *		6189259	0					
ANR	6189312	Identifier	s		6189259	1					
ANR	6189313	CFGEntryNode	ENTRY		6189259		True				
ANR	6189314	CFGExitNode	EXIT		6189259		True				
ANR	6189315	Symbol	s		6189259						
ANR	6189316	Symbol	NULL		6189259						
ANR	6189317	Symbol	s -> raw		6189259						
ANR	6189318	Symbol	crc		6189259						
ANR	6189319	Symbol	s -> length		6189259						
ANR	6189320	Symbol	crc32		6189259						
ANR	6189321	Symbol	* s		6189259						
ANR	6189322	Symbol	Z_NULL		6189259						
ANR	6189323	Function	_zip_string_equal	58:0:1928:2179							
ANR	6189324	FunctionDef	"_zip_string_equal (const struct zip_string * a , const struct zip_string * b)"		6189323	0					
ANR	6189325	CompoundStatement		60:0:2006:2179	6189323	0					
ANR	6189326	IfStatement	if ( a == NULL || b == NULL )		6189323	0					
ANR	6189327	Condition	a == NULL || b == NULL	61:8:2016:2037	6189323	0	True				
ANR	6189328	OrExpression	a == NULL || b == NULL		6189323	0		||			
ANR	6189329	EqualityExpression	a == NULL		6189323	0		==			
ANR	6189330	Identifier	a		6189323	0					
ANR	6189331	Identifier	NULL		6189323	1					
ANR	6189332	EqualityExpression	b == NULL		6189323	1		==			
ANR	6189333	Identifier	b		6189323	0					
ANR	6189334	Identifier	NULL		6189323	1					
ANR	6189335	ReturnStatement	return a == b ;	62:1:2041:2054	6189323	1	True				
ANR	6189336	EqualityExpression	a == b		6189323	0		==			
ANR	6189337	Identifier	a		6189323	0					
ANR	6189338	Identifier	b		6189323	1					
ANR	6189339	IfStatement	if ( a -> length != b -> length )		6189323	1					
ANR	6189340	Condition	a -> length != b -> length	64:8:2065:2086	6189323	0	True				
ANR	6189341	EqualityExpression	a -> length != b -> length		6189323	0		!=			
ANR	6189342	PtrMemberAccess	a -> length		6189323	0					
ANR	6189343	Identifier	a		6189323	0					
ANR	6189344	Identifier	length		6189323	1					
ANR	6189345	PtrMemberAccess	b -> length		6189323	1					
ANR	6189346	Identifier	b		6189323	0					
ANR	6189347	Identifier	length		6189323	1					
ANR	6189348	ReturnStatement	return 0 ;	65:1:2090:2098	6189323	1	True				
ANR	6189349	PrimaryExpression	0		6189323	0					
ANR	6189350	ReturnStatement	"return ( memcmp ( a -> raw , b -> raw , a -> length ) == 0 ) ;"	69:4:2130:2177	6189323	2	True				
ANR	6189351	EqualityExpression	"memcmp ( a -> raw , b -> raw , a -> length ) == 0"		6189323	0		==			
ANR	6189352	CallExpression	"memcmp ( a -> raw , b -> raw , a -> length )"		6189323	0					
ANR	6189353	Callee	memcmp		6189323	0					
ANR	6189354	Identifier	memcmp		6189323	0					
ANR	6189355	ArgumentList	a -> raw		6189323	1					
ANR	6189356	Argument	a -> raw		6189323	0					
ANR	6189357	PtrMemberAccess	a -> raw		6189323	0					
ANR	6189358	Identifier	a		6189323	0					
ANR	6189359	Identifier	raw		6189323	1					
ANR	6189360	Argument	b -> raw		6189323	1					
ANR	6189361	PtrMemberAccess	b -> raw		6189323	0					
ANR	6189362	Identifier	b		6189323	0					
ANR	6189363	Identifier	raw		6189323	1					
ANR	6189364	Argument	a -> length		6189323	2					
ANR	6189365	PtrMemberAccess	a -> length		6189323	0					
ANR	6189366	Identifier	a		6189323	0					
ANR	6189367	Identifier	length		6189323	1					
ANR	6189368	PrimaryExpression	0		6189323	1					
ANR	6189369	ReturnType	int		6189323	1					
ANR	6189370	Identifier	_zip_string_equal		6189323	2					
ANR	6189371	ParameterList	"const struct zip_string * a , const struct zip_string * b"		6189323	3					
ANR	6189372	Parameter	const struct zip_string * a	59:18:1950:1975	6189323	0	True				
ANR	6189373	ParameterType	const struct zip_string *		6189323	0					
ANR	6189374	Identifier	a		6189323	1					
ANR	6189375	Parameter	const struct zip_string * b	59:46:1978:2003	6189323	1	True				
ANR	6189376	ParameterType	const struct zip_string *		6189323	0					
ANR	6189377	Identifier	b		6189323	1					
ANR	6189378	CFGEntryNode	ENTRY		6189323		True				
ANR	6189379	CFGExitNode	EXIT		6189323		True				
ANR	6189380	Symbol	a		6189323						
ANR	6189381	Symbol	b		6189323						
ANR	6189382	Symbol	NULL		6189323						
ANR	6189383	Symbol	memcmp		6189323						
ANR	6189384	Symbol	a -> raw		6189323						
ANR	6189385	Symbol	b -> length		6189323						
ANR	6189386	Symbol	b -> raw		6189323						
ANR	6189387	Symbol	* a		6189323						
ANR	6189388	Symbol	* b		6189323						
ANR	6189389	Symbol	a -> length		6189323						
ANR	6189390	Function	_zip_string_free	74:0:2185:2315							
ANR	6189391	FunctionDef	_zip_string_free (struct zip_string * s)		6189390	0					
ANR	6189392	CompoundStatement		76:0:2229:2315	6189390	0					
ANR	6189393	IfStatement	if ( s == NULL )		6189390	0					
ANR	6189394	Condition	s == NULL	77:8:2239:2247	6189390	0	True				
ANR	6189395	EqualityExpression	s == NULL		6189390	0		==			
ANR	6189396	Identifier	s		6189390	0					
ANR	6189397	Identifier	NULL		6189390	1					
ANR	6189398	ReturnStatement	return ;	78:1:2251:2257	6189390	1	True				
ANR	6189399	ExpressionStatement	free ( s -> raw )	80:4:2264:2276	6189390	1	True				
ANR	6189400	CallExpression	free ( s -> raw )		6189390	0					
ANR	6189401	Callee	free		6189390	0					
ANR	6189402	Identifier	free		6189390	0					
ANR	6189403	ArgumentList	s -> raw		6189390	1					
ANR	6189404	Argument	s -> raw		6189390	0					
ANR	6189405	PtrMemberAccess	s -> raw		6189390	0					
ANR	6189406	Identifier	s		6189390	0					
ANR	6189407	Identifier	raw		6189390	1					
ANR	6189408	ExpressionStatement	free ( s -> converted )	81:4:2282:2300	6189390	2	True				
ANR	6189409	CallExpression	free ( s -> converted )		6189390	0					
ANR	6189410	Callee	free		6189390	0					
ANR	6189411	Identifier	free		6189390	0					
ANR	6189412	ArgumentList	s -> converted		6189390	1					
ANR	6189413	Argument	s -> converted		6189390	0					
ANR	6189414	PtrMemberAccess	s -> converted		6189390	0					
ANR	6189415	Identifier	s		6189390	0					
ANR	6189416	Identifier	converted		6189390	1					
ANR	6189417	ExpressionStatement	free ( s )	82:4:2306:2313	6189390	3	True				
ANR	6189418	CallExpression	free ( s )		6189390	0					
ANR	6189419	Callee	free		6189390	0					
ANR	6189420	Identifier	free		6189390	0					
ANR	6189421	ArgumentList	s		6189390	1					
ANR	6189422	Argument	s		6189390	0					
ANR	6189423	Identifier	s		6189390	0					
ANR	6189424	ReturnType	void		6189390	1					
ANR	6189425	Identifier	_zip_string_free		6189390	2					
ANR	6189426	ParameterList	struct zip_string * s		6189390	3					
ANR	6189427	Parameter	struct zip_string * s	75:17:2207:2226	6189390	0	True				
ANR	6189428	ParameterType	struct zip_string *		6189390	0					
ANR	6189429	Identifier	s		6189390	1					
ANR	6189430	CFGEntryNode	ENTRY		6189390		True				
ANR	6189431	CFGExitNode	EXIT		6189390		True				
ANR	6189432	Symbol	s		6189390						
ANR	6189433	Symbol	NULL		6189390						
ANR	6189434	Symbol	s -> raw		6189390						
ANR	6189435	Symbol	s -> converted		6189390						
ANR	6189436	Symbol	* s		6189390						
ANR	6189437	Function	_zip_string_get	87:0:2321:3268							
ANR	6189438	FunctionDef	"_zip_string_get (struct zip_string * string , zip_uint32_t * lenp , zip_flags_t flags , struct zip_error * error)"		6189437	0					
ANR	6189439	CompoundStatement		89:0:2448:3268	6189437	0					
ANR	6189440	Statement	static	90:4:2454:2459	6189437	0	True				
ANR	6189441	IdentifierDeclStatement	"const zip_uint8_t empty [ 1 ] = """" ;"	90:11:2461:2492	6189437	1	True				
ANR	6189442	IdentifierDecl	"empty [ 1 ] = """""		6189437	0					
ANR	6189443	IdentifierDeclType	const zip_uint8_t [ 1 ]		6189437	0					
ANR	6189444	Identifier	empty		6189437	1					
ANR	6189445	PrimaryExpression	1		6189437	2					
ANR	6189446	AssignmentExpression	"empty [ 1 ] = """""		6189437	3		=			
ANR	6189447	Identifier	empty		6189437	0					
ANR	6189448	PrimaryExpression	""""""		6189437	1					
ANR	6189449	IfStatement	if ( string == NULL )		6189437	2					
ANR	6189450	Condition	string == NULL	92:8:2503:2516	6189437	0	True				
ANR	6189451	EqualityExpression	string == NULL		6189437	0		==			
ANR	6189452	Identifier	string		6189437	0					
ANR	6189453	Identifier	NULL		6189437	1					
ANR	6189454	CompoundStatement		4:24:70:70	6189437	1					
ANR	6189455	IfStatement	if ( lenp )		6189437	0					
ANR	6189456	Condition	lenp	93:5:2526:2529	6189437	0	True				
ANR	6189457	Identifier	lenp		6189437	0					
ANR	6189458	ExpressionStatement	* lenp = 0	94:5:2537:2546	6189437	1	True				
ANR	6189459	AssignmentExpression	* lenp = 0		6189437	0		=			
ANR	6189460	UnaryOperationExpression	* lenp		6189437	0					
ANR	6189461	UnaryOperator	*		6189437	0					
ANR	6189462	Identifier	lenp		6189437	1					
ANR	6189463	PrimaryExpression	0		6189437	1					
ANR	6189464	ReturnStatement	return empty ;	95:1:2549:2561	6189437	1	True				
ANR	6189465	Identifier	empty		6189437	0					
ANR	6189466	IfStatement	if ( ( flags & ZIP_FL_ENC_RAW ) == 0 )		6189437	3					
ANR	6189467	Condition	( flags & ZIP_FL_ENC_RAW ) == 0	98:8:2578:2606	6189437	0	True				
ANR	6189468	EqualityExpression	( flags & ZIP_FL_ENC_RAW ) == 0		6189437	0		==			
ANR	6189469	BitAndExpression	flags & ZIP_FL_ENC_RAW		6189437	0		&			
ANR	6189470	Identifier	flags		6189437	0					
ANR	6189471	Identifier	ZIP_FL_ENC_RAW		6189437	1					
ANR	6189472	PrimaryExpression	0		6189437	1					
ANR	6189473	CompoundStatement		10:39:160:160	6189437	1					
ANR	6189474	IfStatement	if ( string -> encoding == ZIP_ENCODING_UNKNOWN )		6189437	0					
ANR	6189475	Condition	string -> encoding == ZIP_ENCODING_UNKNOWN	100:5:2638:2677	6189437	0	True				
ANR	6189476	EqualityExpression	string -> encoding == ZIP_ENCODING_UNKNOWN		6189437	0		==			
ANR	6189477	PtrMemberAccess	string -> encoding		6189437	0					
ANR	6189478	Identifier	string		6189437	0					
ANR	6189479	Identifier	encoding		6189437	1					
ANR	6189480	Identifier	ZIP_ENCODING_UNKNOWN		6189437	1					
ANR	6189481	ExpressionStatement	"_zip_guess_encoding ( string , ZIP_ENCODING_UNKNOWN )"	101:5:2685:2734	6189437	1	True				
ANR	6189482	CallExpression	"_zip_guess_encoding ( string , ZIP_ENCODING_UNKNOWN )"		6189437	0					
ANR	6189483	Callee	_zip_guess_encoding		6189437	0					
ANR	6189484	Identifier	_zip_guess_encoding		6189437	0					
ANR	6189485	ArgumentList	string		6189437	1					
ANR	6189486	Argument	string		6189437	0					
ANR	6189487	Identifier	string		6189437	0					
ANR	6189488	Argument	ZIP_ENCODING_UNKNOWN		6189437	1					
ANR	6189489	Identifier	ZIP_ENCODING_UNKNOWN		6189437	0					
ANR	6189490	IfStatement	if ( ( ( flags & ZIP_FL_ENC_STRICT ) && string -> encoding != ZIP_ENCODING_ASCII && string -> encoding != ZIP_ENCODING_UTF8_KNOWN ) || ( string -> encoding == ZIP_ENCODING_CP437 ) )		6189437	1					
ANR	6189491	Condition	( ( flags & ZIP_FL_ENC_STRICT ) && string -> encoding != ZIP_ENCODING_ASCII && string -> encoding != ZIP_ENCODING_UTF8_KNOWN ) || ( string -> encoding == ZIP_ENCODING_CP437 )	103:5:2742:2914	6189437	0	True				
ANR	6189492	OrExpression	( ( flags & ZIP_FL_ENC_STRICT ) && string -> encoding != ZIP_ENCODING_ASCII && string -> encoding != ZIP_ENCODING_UTF8_KNOWN ) || ( string -> encoding == ZIP_ENCODING_CP437 )		6189437	0		||			
ANR	6189493	AndExpression	( flags & ZIP_FL_ENC_STRICT ) && string -> encoding != ZIP_ENCODING_ASCII && string -> encoding != ZIP_ENCODING_UTF8_KNOWN		6189437	0		&&			
ANR	6189494	BitAndExpression	flags & ZIP_FL_ENC_STRICT		6189437	0		&			
ANR	6189495	Identifier	flags		6189437	0					
ANR	6189496	Identifier	ZIP_FL_ENC_STRICT		6189437	1					
ANR	6189497	AndExpression	string -> encoding != ZIP_ENCODING_ASCII && string -> encoding != ZIP_ENCODING_UTF8_KNOWN		6189437	1		&&			
ANR	6189498	EqualityExpression	string -> encoding != ZIP_ENCODING_ASCII		6189437	0		!=			
ANR	6189499	PtrMemberAccess	string -> encoding		6189437	0					
ANR	6189500	Identifier	string		6189437	0					
ANR	6189501	Identifier	encoding		6189437	1					
ANR	6189502	Identifier	ZIP_ENCODING_ASCII		6189437	1					
ANR	6189503	EqualityExpression	string -> encoding != ZIP_ENCODING_UTF8_KNOWN		6189437	1		!=			
ANR	6189504	PtrMemberAccess	string -> encoding		6189437	0					
ANR	6189505	Identifier	string		6189437	0					
ANR	6189506	Identifier	encoding		6189437	1					
ANR	6189507	Identifier	ZIP_ENCODING_UTF8_KNOWN		6189437	1					
ANR	6189508	EqualityExpression	string -> encoding == ZIP_ENCODING_CP437		6189437	1		==			
ANR	6189509	PtrMemberAccess	string -> encoding		6189437	0					
ANR	6189510	Identifier	string		6189437	0					
ANR	6189511	Identifier	encoding		6189437	1					
ANR	6189512	Identifier	ZIP_ENCODING_CP437		6189437	1					
ANR	6189513	CompoundStatement		17:50:468:468	6189437	1					
ANR	6189514	IfStatement	if ( string -> converted == NULL )		6189437	0					
ANR	6189515	Condition	string -> converted == NULL	106:9:2928:2952	6189437	0	True				
ANR	6189516	EqualityExpression	string -> converted == NULL		6189437	0		==			
ANR	6189517	PtrMemberAccess	string -> converted		6189437	0					
ANR	6189518	Identifier	string		6189437	0					
ANR	6189519	Identifier	converted		6189437	1					
ANR	6189520	Identifier	NULL		6189437	1					
ANR	6189521	CompoundStatement		18:36:506:506	6189437	1					
ANR	6189522	IfStatement	"if ( ( string -> converted = _zip_cp437_to_utf8 ( string -> raw , string -> length , & string -> converted_length , error ) ) == NULL )"		6189437	0					
ANR	6189523	Condition	"( string -> converted = _zip_cp437_to_utf8 ( string -> raw , string -> length , & string -> converted_length , error ) ) == NULL"	107:6:2963:3080	6189437	0	True				
ANR	6189524	EqualityExpression	"( string -> converted = _zip_cp437_to_utf8 ( string -> raw , string -> length , & string -> converted_length , error ) ) == NULL"		6189437	0		==			
ANR	6189525	AssignmentExpression	"string -> converted = _zip_cp437_to_utf8 ( string -> raw , string -> length , & string -> converted_length , error )"		6189437	0		=			
ANR	6189526	PtrMemberAccess	string -> converted		6189437	0					
ANR	6189527	Identifier	string		6189437	0					
ANR	6189528	Identifier	converted		6189437	1					
ANR	6189529	CallExpression	"_zip_cp437_to_utf8 ( string -> raw , string -> length , & string -> converted_length , error )"		6189437	1					
ANR	6189530	Callee	_zip_cp437_to_utf8		6189437	0					
ANR	6189531	Identifier	_zip_cp437_to_utf8		6189437	0					
ANR	6189532	ArgumentList	string -> raw		6189437	1					
ANR	6189533	Argument	string -> raw		6189437	0					
ANR	6189534	PtrMemberAccess	string -> raw		6189437	0					
ANR	6189535	Identifier	string		6189437	0					
ANR	6189536	Identifier	raw		6189437	1					
ANR	6189537	Argument	string -> length		6189437	1					
ANR	6189538	PtrMemberAccess	string -> length		6189437	0					
ANR	6189539	Identifier	string		6189437	0					
ANR	6189540	Identifier	length		6189437	1					
ANR	6189541	Argument	& string -> converted_length		6189437	2					
ANR	6189542	UnaryOperationExpression	& string -> converted_length		6189437	0					
ANR	6189543	UnaryOperator	&		6189437	0					
ANR	6189544	PtrMemberAccess	string -> converted_length		6189437	1					
ANR	6189545	Identifier	string		6189437	0					
ANR	6189546	Identifier	converted_length		6189437	1					
ANR	6189547	Argument	error		6189437	3					
ANR	6189548	Identifier	error		6189437	0					
ANR	6189549	Identifier	NULL		6189437	1					
ANR	6189550	ReturnStatement	return NULL ;	109:6:3089:3100	6189437	1	True				
ANR	6189551	Identifier	NULL		6189437	0					
ANR	6189552	IfStatement	if ( lenp )		6189437	1					
ANR	6189553	Condition	lenp	111:9:3118:3121	6189437	0	True				
ANR	6189554	Identifier	lenp		6189437	0					
ANR	6189555	ExpressionStatement	* lenp = string -> converted_length	112:2:3126:3158	6189437	1	True				
ANR	6189556	AssignmentExpression	* lenp = string -> converted_length		6189437	0		=			
ANR	6189557	UnaryOperationExpression	* lenp		6189437	0					
ANR	6189558	UnaryOperator	*		6189437	0					
ANR	6189559	Identifier	lenp		6189437	1					
ANR	6189560	PtrMemberAccess	string -> converted_length		6189437	1					
ANR	6189561	Identifier	string		6189437	0					
ANR	6189562	Identifier	converted_length		6189437	1					
ANR	6189563	ReturnStatement	return string -> converted ;	113:5:3165:3189	6189437	2	True				
ANR	6189564	PtrMemberAccess	string -> converted		6189437	0					
ANR	6189565	Identifier	string		6189437	0					
ANR	6189566	Identifier	converted		6189437	1					
ANR	6189567	IfStatement	if ( lenp )		6189437	4					
ANR	6189568	Condition	lenp	117:8:3213:3216	6189437	0	True				
ANR	6189569	Identifier	lenp		6189437	0					
ANR	6189570	ExpressionStatement	* lenp = string -> length	118:1:3220:3242	6189437	1	True				
ANR	6189571	AssignmentExpression	* lenp = string -> length		6189437	0		=			
ANR	6189572	UnaryOperationExpression	* lenp		6189437	0					
ANR	6189573	UnaryOperator	*		6189437	0					
ANR	6189574	Identifier	lenp		6189437	1					
ANR	6189575	PtrMemberAccess	string -> length		6189437	1					
ANR	6189576	Identifier	string		6189437	0					
ANR	6189577	Identifier	length		6189437	1					
ANR	6189578	ReturnStatement	return string -> raw ;	119:4:3248:3266	6189437	5	True				
ANR	6189579	PtrMemberAccess	string -> raw		6189437	0					
ANR	6189580	Identifier	string		6189437	0					
ANR	6189581	Identifier	raw		6189437	1					
ANR	6189582	ReturnType	const zip_uint8_t *		6189437	1					
ANR	6189583	Identifier	_zip_string_get		6189437	2					
ANR	6189584	ParameterList	"struct zip_string * string , zip_uint32_t * lenp , zip_flags_t flags , struct zip_error * error"		6189437	3					
ANR	6189585	Parameter	struct zip_string * string	88:16:2357:2381	6189437	0	True				
ANR	6189586	ParameterType	struct zip_string *		6189437	0					
ANR	6189587	Identifier	string		6189437	1					
ANR	6189588	Parameter	zip_uint32_t * lenp	88:43:2384:2401	6189437	1	True				
ANR	6189589	ParameterType	zip_uint32_t *		6189437	0					
ANR	6189590	Identifier	lenp		6189437	1					
ANR	6189591	Parameter	zip_flags_t flags	88:63:2404:2420	6189437	2	True				
ANR	6189592	ParameterType	zip_flags_t		6189437	0					
ANR	6189593	Identifier	flags		6189437	1					
ANR	6189594	Parameter	struct zip_error * error	88:82:2423:2445	6189437	3	True				
ANR	6189595	ParameterType	struct zip_error *		6189437	0					
ANR	6189596	Identifier	error		6189437	1					
ANR	6189597	CFGEntryNode	ENTRY		6189437		True				
ANR	6189598	CFGExitNode	EXIT		6189437		True				
ANR	6189599	Symbol	ZIP_ENCODING_UTF8_KNOWN		6189437						
ANR	6189600	Symbol	string -> converted_length		6189437						
ANR	6189601	Symbol	NULL		6189437						
ANR	6189602	Symbol	ZIP_FL_ENC_STRICT		6189437						
ANR	6189603	Symbol	string		6189437						
ANR	6189604	Symbol	string -> encoding		6189437						
ANR	6189605	Symbol	string -> converted		6189437						
ANR	6189606	Symbol	_zip_cp437_to_utf8		6189437						
ANR	6189607	Symbol	string -> length		6189437						
ANR	6189608	Symbol	flags		6189437						
ANR	6189609	Symbol	lenp		6189437						
ANR	6189610	Symbol	* string		6189437						
ANR	6189611	Symbol	error		6189437						
ANR	6189612	Symbol	empty		6189437						
ANR	6189613	Symbol	* lenp		6189437						
ANR	6189614	Symbol	ZIP_ENCODING_CP437		6189437						
ANR	6189615	Symbol	ZIP_ENCODING_ASCII		6189437						
ANR	6189616	Symbol	& string -> converted_length		6189437						
ANR	6189617	Symbol	string -> raw		6189437						
ANR	6189618	Symbol	ZIP_ENCODING_UNKNOWN		6189437						
ANR	6189619	Symbol	ZIP_FL_ENC_RAW		6189437						
ANR	6189620	Function	_zip_string_length	124:0:3274:3389							
ANR	6189621	FunctionDef	_zip_string_length (const struct zip_string * s)		6189620	0					
ANR	6189622	CompoundStatement		126:0:3334:3389	6189620	0					
ANR	6189623	IfStatement	if ( s == NULL )		6189620	0					
ANR	6189624	Condition	s == NULL	127:8:3344:3352	6189620	0	True				
ANR	6189625	EqualityExpression	s == NULL		6189620	0		==			
ANR	6189626	Identifier	s		6189620	0					
ANR	6189627	Identifier	NULL		6189620	1					
ANR	6189628	ReturnStatement	return 0 ;	128:1:3356:3364	6189620	1	True				
ANR	6189629	PrimaryExpression	0		6189620	0					
ANR	6189630	ReturnStatement	return s -> length ;	130:4:3371:3387	6189620	1	True				
ANR	6189631	PtrMemberAccess	s -> length		6189620	0					
ANR	6189632	Identifier	s		6189620	0					
ANR	6189633	Identifier	length		6189620	1					
ANR	6189634	ReturnType	zip_uint16_t		6189620	1					
ANR	6189635	Identifier	_zip_string_length		6189620	2					
ANR	6189636	ParameterList	const struct zip_string * s		6189620	3					
ANR	6189637	Parameter	const struct zip_string * s	125:19:3306:3331	6189620	0	True				
ANR	6189638	ParameterType	const struct zip_string *		6189620	0					
ANR	6189639	Identifier	s		6189620	1					
ANR	6189640	CFGEntryNode	ENTRY		6189620		True				
ANR	6189641	CFGExitNode	EXIT		6189620		True				
ANR	6189642	Symbol	s		6189620						
ANR	6189643	Symbol	NULL		6189620						
ANR	6189644	Symbol	s -> length		6189620						
ANR	6189645	Symbol	* s		6189620						
ANR	6189646	Function	_zip_string_new	135:0:3395:4627							
ANR	6189647	FunctionDef	"_zip_string_new (const zip_uint8_t * raw , zip_uint16_t length , zip_flags_t flags , struct zip_error * error)"		6189646	0					
ANR	6189648	CompoundStatement		137:0:3520:4627	6189646	0					
ANR	6189649	IdentifierDeclStatement	struct zip_string * s ;	138:4:3526:3546	6189646	0	True				
ANR	6189650	IdentifierDecl	* s		6189646	0					
ANR	6189651	IdentifierDeclType	struct zip_string *		6189646	0					
ANR	6189652	Identifier	s		6189646	1					
ANR	6189653	IdentifierDeclStatement	enum zip_encoding_type expected_encoding ;	139:4:3552:3592	6189646	1	True				
ANR	6189654	IdentifierDecl	expected_encoding		6189646	0					
ANR	6189655	IdentifierDeclType	enum zip_encoding_type		6189646	0					
ANR	6189656	Identifier	expected_encoding		6189646	1					
ANR	6189657	IfStatement	if ( length == 0 )		6189646	2					
ANR	6189658	Condition	length == 0	141:8:3607:3617	6189646	0	True				
ANR	6189659	EqualityExpression	length == 0		6189646	0		==			
ANR	6189660	Identifier	length		6189646	0					
ANR	6189661	PrimaryExpression	0		6189646	1					
ANR	6189662	ReturnStatement	return NULL ;	142:1:3621:3632	6189646	1	True				
ANR	6189663	Identifier	NULL		6189646	0					
ANR	6189664	SwitchStatement	switch ( flags & ZIP_FL_ENCODING_ALL )		6189646	3					
ANR	6189665	Condition	flags & ZIP_FL_ENCODING_ALL	144:12:3647:3673	6189646	0	True				
ANR	6189666	BitAndExpression	flags & ZIP_FL_ENCODING_ALL		6189646	0		&			
ANR	6189667	Identifier	flags		6189646	0					
ANR	6189668	Identifier	ZIP_FL_ENCODING_ALL		6189646	1					
ANR	6189669	CompoundStatement		8:41:155:155	6189646	1					
ANR	6189670	Label	case ZIP_FL_ENC_GUESS :	145:4:3682:3703	6189646	0	True				
ANR	6189671	Identifier	ZIP_FL_ENC_GUESS		6189646	0					
ANR	6189672	ExpressionStatement	expected_encoding = ZIP_ENCODING_UNKNOWN	146:1:3706:3746	6189646	1	True				
ANR	6189673	AssignmentExpression	expected_encoding = ZIP_ENCODING_UNKNOWN		6189646	0		=			
ANR	6189674	Identifier	expected_encoding		6189646	0					
ANR	6189675	Identifier	ZIP_ENCODING_UNKNOWN		6189646	1					
ANR	6189676	BreakStatement	break ;	147:1:3749:3754	6189646	2	True				
ANR	6189677	Label	case ZIP_FL_ENC_UTF_8 :	148:4:3760:3781	6189646	3	True				
ANR	6189678	Identifier	ZIP_FL_ENC_UTF_8		6189646	0					
ANR	6189679	ExpressionStatement	expected_encoding = ZIP_ENCODING_UTF8_KNOWN	149:1:3784:3827	6189646	4	True				
ANR	6189680	AssignmentExpression	expected_encoding = ZIP_ENCODING_UTF8_KNOWN		6189646	0		=			
ANR	6189681	Identifier	expected_encoding		6189646	0					
ANR	6189682	Identifier	ZIP_ENCODING_UTF8_KNOWN		6189646	1					
ANR	6189683	BreakStatement	break ;	150:1:3830:3835	6189646	5	True				
ANR	6189684	Label	case ZIP_FL_ENC_CP437 :	151:4:3841:3862	6189646	6	True				
ANR	6189685	Identifier	ZIP_FL_ENC_CP437		6189646	0					
ANR	6189686	ExpressionStatement	expected_encoding = ZIP_ENCODING_CP437	152:1:3865:3903	6189646	7	True				
ANR	6189687	AssignmentExpression	expected_encoding = ZIP_ENCODING_CP437		6189646	0		=			
ANR	6189688	Identifier	expected_encoding		6189646	0					
ANR	6189689	Identifier	ZIP_ENCODING_CP437		6189646	1					
ANR	6189690	BreakStatement	break ;	153:1:3906:3911	6189646	8	True				
ANR	6189691	Label	default :	154:4:3917:3924	6189646	9	True				
ANR	6189692	Identifier	default		6189646	0					
ANR	6189693	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"	155:1:3927:3965	6189646	10	True				
ANR	6189694	CallExpression	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"		6189646	0					
ANR	6189695	Callee	_zip_error_set		6189646	0					
ANR	6189696	Identifier	_zip_error_set		6189646	0					
ANR	6189697	ArgumentList	error		6189646	1					
ANR	6189698	Argument	error		6189646	0					
ANR	6189699	Identifier	error		6189646	0					
ANR	6189700	Argument	ZIP_ER_INVAL		6189646	1					
ANR	6189701	Identifier	ZIP_ER_INVAL		6189646	0					
ANR	6189702	Argument	0		6189646	2					
ANR	6189703	PrimaryExpression	0		6189646	0					
ANR	6189704	ReturnStatement	return NULL ;	156:1:3968:3979	6189646	11	True				
ANR	6189705	Identifier	NULL		6189646	0					
ANR	6189706	IfStatement	if ( ( s = ( struct zip_string * ) malloc ( sizeof ( * s ) ) ) == NULL )		6189646	4					
ANR	6189707	Condition	( s = ( struct zip_string * ) malloc ( sizeof ( * s ) ) ) == NULL	159:8:3997:4047	6189646	0	True				
ANR	6189708	EqualityExpression	( s = ( struct zip_string * ) malloc ( sizeof ( * s ) ) ) == NULL		6189646	0		==			
ANR	6189709	AssignmentExpression	s = ( struct zip_string * ) malloc ( sizeof ( * s ) )		6189646	0		=			
ANR	6189710	Identifier	s		6189646	0					
ANR	6189711	CastExpression	( struct zip_string * ) malloc ( sizeof ( * s ) )		6189646	1					
ANR	6189712	CastTarget	struct zip_string *		6189646	0					
ANR	6189713	CallExpression	malloc ( sizeof ( * s ) )		6189646	1					
ANR	6189714	Callee	malloc		6189646	0					
ANR	6189715	Identifier	malloc		6189646	0					
ANR	6189716	ArgumentList	sizeof ( * s )		6189646	1					
ANR	6189717	Argument	sizeof ( * s )		6189646	0					
ANR	6189718	SizeofExpression	sizeof ( * s )		6189646	0					
ANR	6189719	Sizeof	sizeof		6189646	0					
ANR	6189720	UnaryOperationExpression	* s		6189646	1					
ANR	6189721	UnaryOperator	*		6189646	0					
ANR	6189722	Identifier	s		6189646	1					
ANR	6189723	Identifier	NULL		6189646	1					
ANR	6189724	CompoundStatement		23:61:529:529	6189646	1					
ANR	6189725	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	160:1:4053:4092	6189646	0	True				
ANR	6189726	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6189646	0					
ANR	6189727	Callee	_zip_error_set		6189646	0					
ANR	6189728	Identifier	_zip_error_set		6189646	0					
ANR	6189729	ArgumentList	error		6189646	1					
ANR	6189730	Argument	error		6189646	0					
ANR	6189731	Identifier	error		6189646	0					
ANR	6189732	Argument	ZIP_ER_MEMORY		6189646	1					
ANR	6189733	Identifier	ZIP_ER_MEMORY		6189646	0					
ANR	6189734	Argument	0		6189646	2					
ANR	6189735	PrimaryExpression	0		6189646	0					
ANR	6189736	ReturnStatement	return NULL ;	161:1:4095:4106	6189646	1	True				
ANR	6189737	Identifier	NULL		6189646	0					
ANR	6189738	IfStatement	if ( ( s -> raw = ( zip_uint8_t * ) malloc ( length + 1 ) ) == NULL )		6189646	5					
ANR	6189739	Condition	( s -> raw = ( zip_uint8_t * ) malloc ( length + 1 ) ) == NULL	164:8:4123:4170	6189646	0	True				
ANR	6189740	EqualityExpression	( s -> raw = ( zip_uint8_t * ) malloc ( length + 1 ) ) == NULL		6189646	0		==			
ANR	6189741	AssignmentExpression	s -> raw = ( zip_uint8_t * ) malloc ( length + 1 )		6189646	0		=			
ANR	6189742	PtrMemberAccess	s -> raw		6189646	0					
ANR	6189743	Identifier	s		6189646	0					
ANR	6189744	Identifier	raw		6189646	1					
ANR	6189745	CastExpression	( zip_uint8_t * ) malloc ( length + 1 )		6189646	1					
ANR	6189746	CastTarget	zip_uint8_t *		6189646	0					
ANR	6189747	CallExpression	malloc ( length + 1 )		6189646	1					
ANR	6189748	Callee	malloc		6189646	0					
ANR	6189749	Identifier	malloc		6189646	0					
ANR	6189750	ArgumentList	length + 1		6189646	1					
ANR	6189751	Argument	length + 1		6189646	0					
ANR	6189752	AdditiveExpression	length + 1		6189646	0		+			
ANR	6189753	Identifier	length		6189646	0					
ANR	6189754	PrimaryExpression	1		6189646	1					
ANR	6189755	Identifier	NULL		6189646	1					
ANR	6189756	CompoundStatement		28:58:652:652	6189646	1					
ANR	6189757	ExpressionStatement	free ( s )	165:1:4176:4183	6189646	0	True				
ANR	6189758	CallExpression	free ( s )		6189646	0					
ANR	6189759	Callee	free		6189646	0					
ANR	6189760	Identifier	free		6189646	0					
ANR	6189761	ArgumentList	s		6189646	1					
ANR	6189762	Argument	s		6189646	0					
ANR	6189763	Identifier	s		6189646	0					
ANR	6189764	ReturnStatement	return NULL ;	166:1:4186:4197	6189646	1	True				
ANR	6189765	Identifier	NULL		6189646	0					
ANR	6189766	ExpressionStatement	"memcpy ( s -> raw , raw , length )"	169:4:4210:4237	6189646	6	True				
ANR	6189767	CallExpression	"memcpy ( s -> raw , raw , length )"		6189646	0					
ANR	6189768	Callee	memcpy		6189646	0					
ANR	6189769	Identifier	memcpy		6189646	0					
ANR	6189770	ArgumentList	s -> raw		6189646	1					
ANR	6189771	Argument	s -> raw		6189646	0					
ANR	6189772	PtrMemberAccess	s -> raw		6189646	0					
ANR	6189773	Identifier	s		6189646	0					
ANR	6189774	Identifier	raw		6189646	1					
ANR	6189775	Argument	raw		6189646	1					
ANR	6189776	Identifier	raw		6189646	0					
ANR	6189777	Argument	length		6189646	2					
ANR	6189778	Identifier	length		6189646	0					
ANR	6189779	ExpressionStatement	s -> raw [ length ] = '\\0'	170:4:4243:4264	6189646	7	True				
ANR	6189780	AssignmentExpression	s -> raw [ length ] = '\\0'		6189646	0		=			
ANR	6189781	ArrayIndexing	s -> raw [ length ]		6189646	0					
ANR	6189782	PtrMemberAccess	s -> raw		6189646	0					
ANR	6189783	Identifier	s		6189646	0					
ANR	6189784	Identifier	raw		6189646	1					
ANR	6189785	Identifier	length		6189646	1					
ANR	6189786	PrimaryExpression	'\\0'		6189646	1					
ANR	6189787	ExpressionStatement	s -> length = length	171:4:4270:4288	6189646	8	True				
ANR	6189788	AssignmentExpression	s -> length = length		6189646	0		=			
ANR	6189789	PtrMemberAccess	s -> length		6189646	0					
ANR	6189790	Identifier	s		6189646	0					
ANR	6189791	Identifier	length		6189646	1					
ANR	6189792	Identifier	length		6189646	1					
ANR	6189793	ExpressionStatement	s -> encoding = ZIP_ENCODING_UNKNOWN	172:4:4294:4328	6189646	9	True				
ANR	6189794	AssignmentExpression	s -> encoding = ZIP_ENCODING_UNKNOWN		6189646	0		=			
ANR	6189795	PtrMemberAccess	s -> encoding		6189646	0					
ANR	6189796	Identifier	s		6189646	0					
ANR	6189797	Identifier	encoding		6189646	1					
ANR	6189798	Identifier	ZIP_ENCODING_UNKNOWN		6189646	1					
ANR	6189799	ExpressionStatement	s -> converted = NULL	173:4:4334:4353	6189646	10	True				
ANR	6189800	AssignmentExpression	s -> converted = NULL		6189646	0		=			
ANR	6189801	PtrMemberAccess	s -> converted		6189646	0					
ANR	6189802	Identifier	s		6189646	0					
ANR	6189803	Identifier	converted		6189646	1					
ANR	6189804	Identifier	NULL		6189646	1					
ANR	6189805	ExpressionStatement	s -> converted_length = 0	174:4:4359:4382	6189646	11	True				
ANR	6189806	AssignmentExpression	s -> converted_length = 0		6189646	0		=			
ANR	6189807	PtrMemberAccess	s -> converted_length		6189646	0					
ANR	6189808	Identifier	s		6189646	0					
ANR	6189809	Identifier	converted_length		6189646	1					
ANR	6189810	PrimaryExpression	0		6189646	1					
ANR	6189811	IfStatement	if ( expected_encoding != ZIP_ENCODING_UNKNOWN )		6189646	12					
ANR	6189812	Condition	expected_encoding != ZIP_ENCODING_UNKNOWN	176:8:4393:4433	6189646	0	True				
ANR	6189813	EqualityExpression	expected_encoding != ZIP_ENCODING_UNKNOWN		6189646	0		!=			
ANR	6189814	Identifier	expected_encoding		6189646	0					
ANR	6189815	Identifier	ZIP_ENCODING_UNKNOWN		6189646	1					
ANR	6189816	CompoundStatement		40:51:915:915	6189646	1					
ANR	6189817	IfStatement	"if ( _zip_guess_encoding ( s , expected_encoding ) == ZIP_ENCODING_ERROR )"		6189646	0					
ANR	6189818	Condition	"_zip_guess_encoding ( s , expected_encoding ) == ZIP_ENCODING_ERROR"	177:5:4443:4505	6189646	0	True				
ANR	6189819	EqualityExpression	"_zip_guess_encoding ( s , expected_encoding ) == ZIP_ENCODING_ERROR"		6189646	0		==			
ANR	6189820	CallExpression	"_zip_guess_encoding ( s , expected_encoding )"		6189646	0					
ANR	6189821	Callee	_zip_guess_encoding		6189646	0					
ANR	6189822	Identifier	_zip_guess_encoding		6189646	0					
ANR	6189823	ArgumentList	s		6189646	1					
ANR	6189824	Argument	s		6189646	0					
ANR	6189825	Identifier	s		6189646	0					
ANR	6189826	Argument	expected_encoding		6189646	1					
ANR	6189827	Identifier	expected_encoding		6189646	0					
ANR	6189828	Identifier	ZIP_ENCODING_ERROR		6189646	1					
ANR	6189829	CompoundStatement		41:70:987:987	6189646	1					
ANR	6189830	ExpressionStatement	_zip_string_free ( s )	178:5:4515:4534	6189646	0	True				
ANR	6189831	CallExpression	_zip_string_free ( s )		6189646	0					
ANR	6189832	Callee	_zip_string_free		6189646	0					
ANR	6189833	Identifier	_zip_string_free		6189646	0					
ANR	6189834	ArgumentList	s		6189646	1					
ANR	6189835	Argument	s		6189646	0					
ANR	6189836	Identifier	s		6189646	0					
ANR	6189837	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"	179:5:4541:4579	6189646	1	True				
ANR	6189838	CallExpression	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"		6189646	0					
ANR	6189839	Callee	_zip_error_set		6189646	0					
ANR	6189840	Identifier	_zip_error_set		6189646	0					
ANR	6189841	ArgumentList	error		6189646	1					
ANR	6189842	Argument	error		6189646	0					
ANR	6189843	Identifier	error		6189646	0					
ANR	6189844	Argument	ZIP_ER_INVAL		6189646	1					
ANR	6189845	Identifier	ZIP_ER_INVAL		6189646	0					
ANR	6189846	Argument	0		6189646	2					
ANR	6189847	PrimaryExpression	0		6189646	0					
ANR	6189848	ReturnStatement	return NULL ;	180:5:4586:4597	6189646	2	True				
ANR	6189849	Identifier	NULL		6189646	0					
ANR	6189850	ReturnStatement	return s ;	184:4:4617:4625	6189646	13	True				
ANR	6189851	Identifier	s		6189646	0					
ANR	6189852	ReturnType	struct zip_string *		6189646	1					
ANR	6189853	Identifier	_zip_string_new		6189646	2					
ANR	6189854	ParameterList	"const zip_uint8_t * raw , zip_uint16_t length , zip_flags_t flags , struct zip_error * error"		6189646	3					
ANR	6189855	Parameter	const zip_uint8_t * raw	136:16:3431:3452	6189646	0	True				
ANR	6189856	ParameterType	const zip_uint8_t *		6189646	0					
ANR	6189857	Identifier	raw		6189646	1					
ANR	6189858	Parameter	zip_uint16_t length	136:40:3455:3473	6189646	1	True				
ANR	6189859	ParameterType	zip_uint16_t		6189646	0					
ANR	6189860	Identifier	length		6189646	1					
ANR	6189861	Parameter	zip_flags_t flags	136:61:3476:3492	6189646	2	True				
ANR	6189862	ParameterType	zip_flags_t		6189646	0					
ANR	6189863	Identifier	flags		6189646	1					
ANR	6189864	Parameter	struct zip_error * error	136:80:3495:3517	6189646	3	True				
ANR	6189865	ParameterType	struct zip_error *		6189646	0					
ANR	6189866	Identifier	error		6189646	1					
ANR	6189867	CFGEntryNode	ENTRY		6189646		True				
ANR	6189868	CFGExitNode	EXIT		6189646		True				
ANR	6189869	Symbol	_zip_guess_encoding		6189646						
ANR	6189870	Symbol	s -> converted		6189646						
ANR	6189871	Symbol	flags		6189646						
ANR	6189872	Symbol	ZIP_FL_ENCODING_ALL		6189646						
ANR	6189873	Symbol	error		6189646						
ANR	6189874	Symbol	s -> converted_length		6189646						
ANR	6189875	Symbol	ZIP_ER_INVAL		6189646						
ANR	6189876	Symbol	ZIP_ENCODING_UNKNOWN		6189646						
ANR	6189877	Symbol	* * s		6189646						
ANR	6189878	Symbol	s -> length		6189646						
ANR	6189879	Symbol	* length		6189646						
ANR	6189880	Symbol	ZIP_ER_MEMORY		6189646						
ANR	6189881	Symbol	ZIP_ENCODING_UTF8_KNOWN		6189646						
ANR	6189882	Symbol	malloc		6189646						
ANR	6189883	Symbol	NULL		6189646						
ANR	6189884	Symbol	expected_encoding		6189646						
ANR	6189885	Symbol	length		6189646						
ANR	6189886	Symbol	raw		6189646						
ANR	6189887	Symbol	s -> encoding		6189646						
ANR	6189888	Symbol	ZIP_ENCODING_CP437		6189646						
ANR	6189889	Symbol	* s -> raw		6189646						
ANR	6189890	Symbol	ZIP_ENCODING_ERROR		6189646						
ANR	6189891	Symbol	s		6189646						
ANR	6189892	Symbol	s -> raw		6189646						
ANR	6189893	Symbol	* s		6189646						
ANR	6189894	Function	_zip_string_write	189:0:4633:4765							
ANR	6189895	FunctionDef	"_zip_string_write (const struct zip_string * s , FILE * f)"		6189894	0					
ANR	6189896	CompoundStatement		191:0:4693:4765	6189894	0					
ANR	6189897	IfStatement	if ( s == NULL )		6189894	0					
ANR	6189898	Condition	s == NULL	192:8:4703:4711	6189894	0	True				
ANR	6189899	EqualityExpression	s == NULL		6189894	0		==			
ANR	6189900	Identifier	s		6189894	0					
ANR	6189901	Identifier	NULL		6189894	1					
ANR	6189902	ReturnStatement	return ;	193:1:4715:4721	6189894	1	True				
ANR	6189903	ExpressionStatement	"fwrite ( s -> raw , s -> length , 1 , f )"	195:4:4732:4763	6189894	1	True				
ANR	6189904	CallExpression	"fwrite ( s -> raw , s -> length , 1 , f )"		6189894	0					
ANR	6189905	Callee	fwrite		6189894	0					
ANR	6189906	Identifier	fwrite		6189894	0					
ANR	6189907	ArgumentList	s -> raw		6189894	1					
ANR	6189908	Argument	s -> raw		6189894	0					
ANR	6189909	PtrMemberAccess	s -> raw		6189894	0					
ANR	6189910	Identifier	s		6189894	0					
ANR	6189911	Identifier	raw		6189894	1					
ANR	6189912	Argument	s -> length		6189894	1					
ANR	6189913	PtrMemberAccess	s -> length		6189894	0					
ANR	6189914	Identifier	s		6189894	0					
ANR	6189915	Identifier	length		6189894	1					
ANR	6189916	Argument	1		6189894	2					
ANR	6189917	PrimaryExpression	1		6189894	0					
ANR	6189918	Argument	f		6189894	3					
ANR	6189919	Identifier	f		6189894	0					
ANR	6189920	ReturnType	void		6189894	1					
ANR	6189921	Identifier	_zip_string_write		6189894	2					
ANR	6189922	ParameterList	"const struct zip_string * s , FILE * f"		6189894	3					
ANR	6189923	Parameter	const struct zip_string * s	190:18:4656:4681	6189894	0	True				
ANR	6189924	ParameterType	const struct zip_string *		6189894	0					
ANR	6189925	Identifier	s		6189894	1					
ANR	6189926	Parameter	FILE * f	190:46:4684:4690	6189894	1	True				
ANR	6189927	ParameterType	FILE *		6189894	0					
ANR	6189928	Identifier	f		6189894	1					
ANR	6189929	CFGEntryNode	ENTRY		6189894		True				
ANR	6189930	CFGExitNode	EXIT		6189894		True				
ANR	6189931	Symbol	s		6189894						
ANR	6189932	Symbol	NULL		6189894						
ANR	6189933	Symbol	s -> raw		6189894						
ANR	6189934	Symbol	f		6189894						
ANR	6189935	Symbol	s -> length		6189894						
ANR	6189936	Symbol	* s		6189894						
