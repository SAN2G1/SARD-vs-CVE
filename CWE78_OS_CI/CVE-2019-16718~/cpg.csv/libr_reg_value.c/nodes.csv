command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5049071	File	data/converged/CVE-2019-16718~_radare2/libr_reg_value.c								
ANR	5049072	DeclStmt									
ANR	5049073	Decl							ut32	ut32	ut27
ANR	5049074	Function	r_read_me27	7:0:112:364							
ANR	5049075	FunctionDef	"r_read_me27 (const ut8 * buf , int boff)"		5049074	0					
ANR	5049076	CompoundStatement		7:50:162:364	5049074	0					
ANR	5049077	IdentifierDeclStatement	ut27 ret = 0 ;	8:1:165:177	5049074	0	True				
ANR	5049078	IdentifierDecl	ret = 0		5049074	0					
ANR	5049079	IdentifierDeclType	ut27		5049074	0					
ANR	5049080	Identifier	ret		5049074	1					
ANR	5049081	AssignmentExpression	ret = 0		5049074	2		=			
ANR	5049082	Identifier	ret		5049074	0					
ANR	5049083	PrimaryExpression	0		5049074	1					
ANR	5049084	ExpressionStatement	"r_mem_copybits_delta ( ( ut8 * ) & ret , 18 , buf , boff , 9 )"	9:1:180:232	5049074	1	True				
ANR	5049085	CallExpression	"r_mem_copybits_delta ( ( ut8 * ) & ret , 18 , buf , boff , 9 )"		5049074	0					
ANR	5049086	Callee	r_mem_copybits_delta		5049074	0					
ANR	5049087	Identifier	r_mem_copybits_delta		5049074	0					
ANR	5049088	ArgumentList	( ut8 * ) & ret		5049074	1					
ANR	5049089	Argument	( ut8 * ) & ret		5049074	0					
ANR	5049090	CastExpression	( ut8 * ) & ret		5049074	0					
ANR	5049091	CastTarget	ut8 *		5049074	0					
ANR	5049092	UnaryOperationExpression	& ret		5049074	1					
ANR	5049093	UnaryOperator	&		5049074	0					
ANR	5049094	Identifier	ret		5049074	1					
ANR	5049095	Argument	18		5049074	1					
ANR	5049096	PrimaryExpression	18		5049074	0					
ANR	5049097	Argument	buf		5049074	2					
ANR	5049098	Identifier	buf		5049074	0					
ANR	5049099	Argument	boff		5049074	3					
ANR	5049100	Identifier	boff		5049074	0					
ANR	5049101	Argument	9		5049074	4					
ANR	5049102	PrimaryExpression	9		5049074	0					
ANR	5049103	ExpressionStatement	"r_mem_copybits_delta ( ( ut8 * ) & ret , 9 , buf , boff + 9 , 9 )"	10:1:235:290	5049074	2	True				
ANR	5049104	CallExpression	"r_mem_copybits_delta ( ( ut8 * ) & ret , 9 , buf , boff + 9 , 9 )"		5049074	0					
ANR	5049105	Callee	r_mem_copybits_delta		5049074	0					
ANR	5049106	Identifier	r_mem_copybits_delta		5049074	0					
ANR	5049107	ArgumentList	( ut8 * ) & ret		5049074	1					
ANR	5049108	Argument	( ut8 * ) & ret		5049074	0					
ANR	5049109	CastExpression	( ut8 * ) & ret		5049074	0					
ANR	5049110	CastTarget	ut8 *		5049074	0					
ANR	5049111	UnaryOperationExpression	& ret		5049074	1					
ANR	5049112	UnaryOperator	&		5049074	0					
ANR	5049113	Identifier	ret		5049074	1					
ANR	5049114	Argument	9		5049074	1					
ANR	5049115	PrimaryExpression	9		5049074	0					
ANR	5049116	Argument	buf		5049074	2					
ANR	5049117	Identifier	buf		5049074	0					
ANR	5049118	Argument	boff + 9		5049074	3					
ANR	5049119	AdditiveExpression	boff + 9		5049074	0		+			
ANR	5049120	Identifier	boff		5049074	0					
ANR	5049121	PrimaryExpression	9		5049074	1					
ANR	5049122	Argument	9		5049074	4					
ANR	5049123	PrimaryExpression	9		5049074	0					
ANR	5049124	ExpressionStatement	"r_mem_copybits_delta ( ( ut8 * ) & ret , 0 , buf , boff + 18 , 9 )"	11:1:293:349	5049074	3	True				
ANR	5049125	CallExpression	"r_mem_copybits_delta ( ( ut8 * ) & ret , 0 , buf , boff + 18 , 9 )"		5049074	0					
ANR	5049126	Callee	r_mem_copybits_delta		5049074	0					
ANR	5049127	Identifier	r_mem_copybits_delta		5049074	0					
ANR	5049128	ArgumentList	( ut8 * ) & ret		5049074	1					
ANR	5049129	Argument	( ut8 * ) & ret		5049074	0					
ANR	5049130	CastExpression	( ut8 * ) & ret		5049074	0					
ANR	5049131	CastTarget	ut8 *		5049074	0					
ANR	5049132	UnaryOperationExpression	& ret		5049074	1					
ANR	5049133	UnaryOperator	&		5049074	0					
ANR	5049134	Identifier	ret		5049074	1					
ANR	5049135	Argument	0		5049074	1					
ANR	5049136	PrimaryExpression	0		5049074	0					
ANR	5049137	Argument	buf		5049074	2					
ANR	5049138	Identifier	buf		5049074	0					
ANR	5049139	Argument	boff + 18		5049074	3					
ANR	5049140	AdditiveExpression	boff + 18		5049074	0		+			
ANR	5049141	Identifier	boff		5049074	0					
ANR	5049142	PrimaryExpression	18		5049074	1					
ANR	5049143	Argument	9		5049074	4					
ANR	5049144	PrimaryExpression	9		5049074	0					
ANR	5049145	ReturnStatement	return ret ;	12:1:352:362	5049074	4	True				
ANR	5049146	Identifier	ret		5049074	0					
ANR	5049147	ReturnType	static ut27		5049074	1					
ANR	5049148	Identifier	r_read_me27		5049074	2					
ANR	5049149	ParameterList	"const ut8 * buf , int boff"		5049074	3					
ANR	5049150	Parameter	const ut8 * buf	7:24:136:149	5049074	0	True				
ANR	5049151	ParameterType	const ut8 *		5049074	0					
ANR	5049152	Identifier	buf		5049074	1					
ANR	5049153	Parameter	int boff	7:40:152:159	5049074	1	True				
ANR	5049154	ParameterType	int		5049074	0					
ANR	5049155	Identifier	boff		5049074	1					
ANR	5049156	CFGEntryNode	ENTRY		5049074		True				
ANR	5049157	CFGExitNode	EXIT		5049074		True				
ANR	5049158	Symbol	ret		5049074						
ANR	5049159	Symbol	& ret		5049074						
ANR	5049160	Symbol	buf		5049074						
ANR	5049161	Symbol	boff		5049074						
ANR	5049162	Function	r_reg_get_value_big	15:0:367:1817							
ANR	5049163	FunctionDef	"r_reg_get_value_big (RReg * reg , RRegItem * item , utX * val)"		5049162	0					
ANR	5049164	CompoundStatement		15:68:435:1817	5049162	0					
ANR	5049165	ExpressionStatement	"r_return_val_if_fail ( reg && item , 0 )"	16:1:438:475	5049162	0	True				
ANR	5049166	CallExpression	"r_return_val_if_fail ( reg && item , 0 )"		5049162	0					
ANR	5049167	Callee	r_return_val_if_fail		5049162	0					
ANR	5049168	Identifier	r_return_val_if_fail		5049162	0					
ANR	5049169	ArgumentList	reg && item		5049162	1					
ANR	5049170	Argument	reg && item		5049162	0					
ANR	5049171	AndExpression	reg && item		5049162	0		&&			
ANR	5049172	Identifier	reg		5049162	0					
ANR	5049173	Identifier	item		5049162	1					
ANR	5049174	Argument	0		5049162	1					
ANR	5049175	PrimaryExpression	0		5049162	0					
ANR	5049176	Statement	ut64	18:1:479:482	5049162	1	True				
ANR	5049177	Statement	ret	18:6:484:486	5049162	2	True				
ANR	5049178	Statement	=	18:10:488:488	5049162	3	True				
ANR	5049179	Statement	0L	18:12:490:491	5049162	4	True				
ANR	5049180	ExpressionStatement	L	18:14:492:493	5049162	5	True				
ANR	5049181	Identifier	L		5049162	0					
ANR	5049182	IdentifierDeclStatement	int off = BITS2BYTES ( item -> offset ) ;	19:1:496:531	5049162	6	True				
ANR	5049183	IdentifierDecl	off = BITS2BYTES ( item -> offset )		5049162	0					
ANR	5049184	IdentifierDeclType	int		5049162	0					
ANR	5049185	Identifier	off		5049162	1					
ANR	5049186	AssignmentExpression	off = BITS2BYTES ( item -> offset )		5049162	2		=			
ANR	5049187	Identifier	off		5049162	0					
ANR	5049188	CallExpression	BITS2BYTES ( item -> offset )		5049162	1					
ANR	5049189	Callee	BITS2BYTES		5049162	0					
ANR	5049190	Identifier	BITS2BYTES		5049162	0					
ANR	5049191	ArgumentList	item -> offset		5049162	1					
ANR	5049192	Argument	item -> offset		5049162	0					
ANR	5049193	PtrMemberAccess	item -> offset		5049162	0					
ANR	5049194	Identifier	item		5049162	0					
ANR	5049195	Identifier	offset		5049162	1					
ANR	5049196	IdentifierDeclStatement	RRegSet * regset = & reg -> regset [ item -> arena ] ;	20:1:534:577	5049162	7	True				
ANR	5049197	IdentifierDecl	* regset = & reg -> regset [ item -> arena ]		5049162	0					
ANR	5049198	IdentifierDeclType	RRegSet *		5049162	0					
ANR	5049199	Identifier	regset		5049162	1					
ANR	5049200	AssignmentExpression	* regset = & reg -> regset [ item -> arena ]		5049162	2		=			
ANR	5049201	Identifier	regset		5049162	0					
ANR	5049202	UnaryOperationExpression	& reg -> regset [ item -> arena ]		5049162	1					
ANR	5049203	UnaryOperator	&		5049162	0					
ANR	5049204	ArrayIndexing	reg -> regset [ item -> arena ]		5049162	1					
ANR	5049205	PtrMemberAccess	reg -> regset		5049162	0					
ANR	5049206	Identifier	reg		5049162	0					
ANR	5049207	Identifier	regset		5049162	1					
ANR	5049208	PtrMemberAccess	item -> arena		5049162	1					
ANR	5049209	Identifier	item		5049162	0					
ANR	5049210	Identifier	arena		5049162	1					
ANR	5049211	IfStatement	if ( ! regset -> arena )		5049162	8					
ANR	5049212	Condition	! regset -> arena	21:5:584:597	5049162	0	True				
ANR	5049213	UnaryOperationExpression	! regset -> arena		5049162	0					
ANR	5049214	UnaryOperator	!		5049162	0					
ANR	5049215	PtrMemberAccess	regset -> arena		5049162	1					
ANR	5049216	Identifier	regset		5049162	0					
ANR	5049217	Identifier	arena		5049162	1					
ANR	5049218	CompoundStatement		7:21:164:164	5049162	1					
ANR	5049219	Statement	return	22:2:604:609	5049162	0	True				
ANR	5049220	Statement	0L	22:9:611:612	5049162	1	True				
ANR	5049221	ExpressionStatement	L	22:11:613:614	5049162	2	True				
ANR	5049222	Identifier	L		5049162	0					
ANR	5049223	SwitchStatement	switch ( item -> size )		5049162	9					
ANR	5049224	Condition	item -> size	24:9:628:637	5049162	0	True				
ANR	5049225	PtrMemberAccess	item -> size		5049162	0					
ANR	5049226	Identifier	item		5049162	0					
ANR	5049227	Identifier	size		5049162	1					
ANR	5049228	CompoundStatement		10:21:204:204	5049162	1					
ANR	5049229	Label	case 80 :	25:1:643:650	5049162	0	True				
ANR	5049230	IfStatement	if ( regset -> arena -> bytes && ( off + 10 <= regset -> arena -> size ) )		5049162	1					
ANR	5049231	Condition	regset -> arena -> bytes && ( off + 10 <= regset -> arena -> size )	26:6:674:730	5049162	0	True				
ANR	5049232	AndExpression	regset -> arena -> bytes && ( off + 10 <= regset -> arena -> size )		5049162	0		&&			
ANR	5049233	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049234	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049235	Identifier	regset		5049162	0					
ANR	5049236	Identifier	arena		5049162	1					
ANR	5049237	Identifier	bytes		5049162	1					
ANR	5049238	RelationalExpression	off + 10 <= regset -> arena -> size		5049162	1		<=			
ANR	5049239	AdditiveExpression	off + 10		5049162	0		+			
ANR	5049240	Identifier	off		5049162	0					
ANR	5049241	PrimaryExpression	10		5049162	1					
ANR	5049242	PtrMemberAccess	regset -> arena -> size		5049162	1					
ANR	5049243	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049244	Identifier	regset		5049162	0					
ANR	5049245	Identifier	arena		5049162	1					
ANR	5049246	Identifier	size		5049162	1					
ANR	5049247	CompoundStatement		12:65:297:297	5049162	1					
ANR	5049248	ExpressionStatement	val -> v80 . Low = * ( ( ut64 * ) ( regset -> arena -> bytes + off ) )	27:3:738:792	5049162	0	True				
ANR	5049249	AssignmentExpression	val -> v80 . Low = * ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162	0		=			
ANR	5049250	MemberAccess	val -> v80 . Low		5049162	0					
ANR	5049251	PtrMemberAccess	val -> v80		5049162	0					
ANR	5049252	Identifier	val		5049162	0					
ANR	5049253	Identifier	v80		5049162	1					
ANR	5049254	Identifier	Low		5049162	1					
ANR	5049255	UnaryOperationExpression	* ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162	1					
ANR	5049256	UnaryOperator	*		5049162	0					
ANR	5049257	CastExpression	( ut64 * ) ( regset -> arena -> bytes + off )		5049162	1					
ANR	5049258	CastTarget	ut64 *		5049162	0					
ANR	5049259	AdditiveExpression	regset -> arena -> bytes + off		5049162	1		+			
ANR	5049260	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049261	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049262	Identifier	regset		5049162	0					
ANR	5049263	Identifier	arena		5049162	1					
ANR	5049264	Identifier	bytes		5049162	1					
ANR	5049265	Identifier	off		5049162	1					
ANR	5049266	ExpressionStatement	val -> v80 . High = * ( ( ut16 * ) ( regset -> arena -> bytes + off + 8 ) )	28:3:797:856	5049162	1	True				
ANR	5049267	AssignmentExpression	val -> v80 . High = * ( ( ut16 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162	0		=			
ANR	5049268	MemberAccess	val -> v80 . High		5049162	0					
ANR	5049269	PtrMemberAccess	val -> v80		5049162	0					
ANR	5049270	Identifier	val		5049162	0					
ANR	5049271	Identifier	v80		5049162	1					
ANR	5049272	Identifier	High		5049162	1					
ANR	5049273	UnaryOperationExpression	* ( ( ut16 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162	1					
ANR	5049274	UnaryOperator	*		5049162	0					
ANR	5049275	CastExpression	( ut16 * ) ( regset -> arena -> bytes + off + 8 )		5049162	1					
ANR	5049276	CastTarget	ut16 *		5049162	0					
ANR	5049277	AdditiveExpression	regset -> arena -> bytes + off + 8		5049162	1		+			
ANR	5049278	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049279	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049280	Identifier	regset		5049162	0					
ANR	5049281	Identifier	arena		5049162	1					
ANR	5049282	Identifier	bytes		5049162	1					
ANR	5049283	AdditiveExpression	off + 8		5049162	1		+			
ANR	5049284	Identifier	off		5049162	0					
ANR	5049285	PrimaryExpression	8		5049162	1					
ANR	5049286	ElseStatement	else		5049162	0					
ANR	5049287	CompoundStatement		15:9:431:431	5049162	0					
ANR	5049288	ExpressionStatement	"eprintf ( ""r_reg_get_value: null or oob arena for current regset\\n"" )"	30:3:872:939	5049162	0	True				
ANR	5049289	CallExpression	"eprintf ( ""r_reg_get_value: null or oob arena for current regset\\n"" )"		5049162	0					
ANR	5049290	Callee	eprintf		5049162	0					
ANR	5049291	Identifier	eprintf		5049162	0					
ANR	5049292	ArgumentList	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	1					
ANR	5049293	Argument	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	0					
ANR	5049294	PrimaryExpression	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	0					
ANR	5049295	ExpressionStatement	ret = val -> v80 . Low	32:2:947:965	5049162	2	True				
ANR	5049296	AssignmentExpression	ret = val -> v80 . Low		5049162	0		=			
ANR	5049297	Identifier	ret		5049162	0					
ANR	5049298	MemberAccess	val -> v80 . Low		5049162	1					
ANR	5049299	PtrMemberAccess	val -> v80		5049162	0					
ANR	5049300	Identifier	val		5049162	0					
ANR	5049301	Identifier	v80		5049162	1					
ANR	5049302	Identifier	Low		5049162	1					
ANR	5049303	BreakStatement	break ;	33:2:969:974	5049162	3	True				
ANR	5049304	Label	case 96 :	34:1:977:984	5049162	4	True				
ANR	5049305	IfStatement	if ( regset -> arena -> bytes && ( off + 12 <= regset -> arena -> size ) )		5049162	5					
ANR	5049306	Condition	regset -> arena -> bytes && ( off + 12 <= regset -> arena -> size )	35:6:1009:1065	5049162	0	True				
ANR	5049307	AndExpression	regset -> arena -> bytes && ( off + 12 <= regset -> arena -> size )		5049162	0		&&			
ANR	5049308	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049309	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049310	Identifier	regset		5049162	0					
ANR	5049311	Identifier	arena		5049162	1					
ANR	5049312	Identifier	bytes		5049162	1					
ANR	5049313	RelationalExpression	off + 12 <= regset -> arena -> size		5049162	1		<=			
ANR	5049314	AdditiveExpression	off + 12		5049162	0		+			
ANR	5049315	Identifier	off		5049162	0					
ANR	5049316	PrimaryExpression	12		5049162	1					
ANR	5049317	PtrMemberAccess	regset -> arena -> size		5049162	1					
ANR	5049318	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049319	Identifier	regset		5049162	0					
ANR	5049320	Identifier	arena		5049162	1					
ANR	5049321	Identifier	size		5049162	1					
ANR	5049322	CompoundStatement		21:65:632:632	5049162	1					
ANR	5049323	ExpressionStatement	val -> v96 . Low = * ( ( ut64 * ) ( regset -> arena -> bytes + off ) )	36:3:1073:1127	5049162	0	True				
ANR	5049324	AssignmentExpression	val -> v96 . Low = * ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162	0		=			
ANR	5049325	MemberAccess	val -> v96 . Low		5049162	0					
ANR	5049326	PtrMemberAccess	val -> v96		5049162	0					
ANR	5049327	Identifier	val		5049162	0					
ANR	5049328	Identifier	v96		5049162	1					
ANR	5049329	Identifier	Low		5049162	1					
ANR	5049330	UnaryOperationExpression	* ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162	1					
ANR	5049331	UnaryOperator	*		5049162	0					
ANR	5049332	CastExpression	( ut64 * ) ( regset -> arena -> bytes + off )		5049162	1					
ANR	5049333	CastTarget	ut64 *		5049162	0					
ANR	5049334	AdditiveExpression	regset -> arena -> bytes + off		5049162	1		+			
ANR	5049335	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049336	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049337	Identifier	regset		5049162	0					
ANR	5049338	Identifier	arena		5049162	1					
ANR	5049339	Identifier	bytes		5049162	1					
ANR	5049340	Identifier	off		5049162	1					
ANR	5049341	ExpressionStatement	val -> v96 . High = * ( ( ut32 * ) ( regset -> arena -> bytes + off + 8 ) )	37:3:1132:1191	5049162	1	True				
ANR	5049342	AssignmentExpression	val -> v96 . High = * ( ( ut32 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162	0		=			
ANR	5049343	MemberAccess	val -> v96 . High		5049162	0					
ANR	5049344	PtrMemberAccess	val -> v96		5049162	0					
ANR	5049345	Identifier	val		5049162	0					
ANR	5049346	Identifier	v96		5049162	1					
ANR	5049347	Identifier	High		5049162	1					
ANR	5049348	UnaryOperationExpression	* ( ( ut32 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162	1					
ANR	5049349	UnaryOperator	*		5049162	0					
ANR	5049350	CastExpression	( ut32 * ) ( regset -> arena -> bytes + off + 8 )		5049162	1					
ANR	5049351	CastTarget	ut32 *		5049162	0					
ANR	5049352	AdditiveExpression	regset -> arena -> bytes + off + 8		5049162	1		+			
ANR	5049353	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049354	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049355	Identifier	regset		5049162	0					
ANR	5049356	Identifier	arena		5049162	1					
ANR	5049357	Identifier	bytes		5049162	1					
ANR	5049358	AdditiveExpression	off + 8		5049162	1		+			
ANR	5049359	Identifier	off		5049162	0					
ANR	5049360	PrimaryExpression	8		5049162	1					
ANR	5049361	ElseStatement	else		5049162	0					
ANR	5049362	CompoundStatement		24:9:766:766	5049162	0					
ANR	5049363	ExpressionStatement	"eprintf ( ""r_reg_get_value: null or oob arena for current regset\\n"" )"	39:3:1207:1274	5049162	0	True				
ANR	5049364	CallExpression	"eprintf ( ""r_reg_get_value: null or oob arena for current regset\\n"" )"		5049162	0					
ANR	5049365	Callee	eprintf		5049162	0					
ANR	5049366	Identifier	eprintf		5049162	0					
ANR	5049367	ArgumentList	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	1					
ANR	5049368	Argument	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	0					
ANR	5049369	PrimaryExpression	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	0					
ANR	5049370	ExpressionStatement	ret = val -> v96 . Low	41:2:1282:1300	5049162	6	True				
ANR	5049371	AssignmentExpression	ret = val -> v96 . Low		5049162	0		=			
ANR	5049372	Identifier	ret		5049162	0					
ANR	5049373	MemberAccess	val -> v96 . Low		5049162	1					
ANR	5049374	PtrMemberAccess	val -> v96		5049162	0					
ANR	5049375	Identifier	val		5049162	0					
ANR	5049376	Identifier	v96		5049162	1					
ANR	5049377	Identifier	Low		5049162	1					
ANR	5049378	BreakStatement	break ;	42:2:1304:1309	5049162	7	True				
ANR	5049379	Label	case 128 :	43:1:1312:1320	5049162	8	True				
ANR	5049380	IfStatement	if ( regset -> arena -> bytes && ( off + 16 <= regset -> arena -> size ) )		5049162	9					
ANR	5049381	Condition	regset -> arena -> bytes && ( off + 16 <= regset -> arena -> size )	44:6:1345:1401	5049162	0	True				
ANR	5049382	AndExpression	regset -> arena -> bytes && ( off + 16 <= regset -> arena -> size )		5049162	0		&&			
ANR	5049383	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049384	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049385	Identifier	regset		5049162	0					
ANR	5049386	Identifier	arena		5049162	1					
ANR	5049387	Identifier	bytes		5049162	1					
ANR	5049388	RelationalExpression	off + 16 <= regset -> arena -> size		5049162	1		<=			
ANR	5049389	AdditiveExpression	off + 16		5049162	0		+			
ANR	5049390	Identifier	off		5049162	0					
ANR	5049391	PrimaryExpression	16		5049162	1					
ANR	5049392	PtrMemberAccess	regset -> arena -> size		5049162	1					
ANR	5049393	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049394	Identifier	regset		5049162	0					
ANR	5049395	Identifier	arena		5049162	1					
ANR	5049396	Identifier	size		5049162	1					
ANR	5049397	CompoundStatement		30:65:968:968	5049162	1					
ANR	5049398	ExpressionStatement	val -> v128 . Low = * ( ( ut64 * ) ( regset -> arena -> bytes + off ) )	45:3:1409:1464	5049162	0	True				
ANR	5049399	AssignmentExpression	val -> v128 . Low = * ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162	0		=			
ANR	5049400	MemberAccess	val -> v128 . Low		5049162	0					
ANR	5049401	PtrMemberAccess	val -> v128		5049162	0					
ANR	5049402	Identifier	val		5049162	0					
ANR	5049403	Identifier	v128		5049162	1					
ANR	5049404	Identifier	Low		5049162	1					
ANR	5049405	UnaryOperationExpression	* ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162	1					
ANR	5049406	UnaryOperator	*		5049162	0					
ANR	5049407	CastExpression	( ut64 * ) ( regset -> arena -> bytes + off )		5049162	1					
ANR	5049408	CastTarget	ut64 *		5049162	0					
ANR	5049409	AdditiveExpression	regset -> arena -> bytes + off		5049162	1		+			
ANR	5049410	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049411	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049412	Identifier	regset		5049162	0					
ANR	5049413	Identifier	arena		5049162	1					
ANR	5049414	Identifier	bytes		5049162	1					
ANR	5049415	Identifier	off		5049162	1					
ANR	5049416	ExpressionStatement	val -> v128 . High = * ( ( ut64 * ) ( regset -> arena -> bytes + off + 8 ) )	46:3:1469:1529	5049162	1	True				
ANR	5049417	AssignmentExpression	val -> v128 . High = * ( ( ut64 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162	0		=			
ANR	5049418	MemberAccess	val -> v128 . High		5049162	0					
ANR	5049419	PtrMemberAccess	val -> v128		5049162	0					
ANR	5049420	Identifier	val		5049162	0					
ANR	5049421	Identifier	v128		5049162	1					
ANR	5049422	Identifier	High		5049162	1					
ANR	5049423	UnaryOperationExpression	* ( ( ut64 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162	1					
ANR	5049424	UnaryOperator	*		5049162	0					
ANR	5049425	CastExpression	( ut64 * ) ( regset -> arena -> bytes + off + 8 )		5049162	1					
ANR	5049426	CastTarget	ut64 *		5049162	0					
ANR	5049427	AdditiveExpression	regset -> arena -> bytes + off + 8		5049162	1		+			
ANR	5049428	PtrMemberAccess	regset -> arena -> bytes		5049162	0					
ANR	5049429	PtrMemberAccess	regset -> arena		5049162	0					
ANR	5049430	Identifier	regset		5049162	0					
ANR	5049431	Identifier	arena		5049162	1					
ANR	5049432	Identifier	bytes		5049162	1					
ANR	5049433	AdditiveExpression	off + 8		5049162	1		+			
ANR	5049434	Identifier	off		5049162	0					
ANR	5049435	PrimaryExpression	8		5049162	1					
ANR	5049436	ElseStatement	else		5049162	0					
ANR	5049437	CompoundStatement		33:9:1104:1104	5049162	0					
ANR	5049438	ExpressionStatement	"eprintf ( ""r_reg_get_value: null or oob arena for current regset\\n"" )"	48:3:1545:1612	5049162	0	True				
ANR	5049439	CallExpression	"eprintf ( ""r_reg_get_value: null or oob arena for current regset\\n"" )"		5049162	0					
ANR	5049440	Callee	eprintf		5049162	0					
ANR	5049441	Identifier	eprintf		5049162	0					
ANR	5049442	ArgumentList	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	1					
ANR	5049443	Argument	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	0					
ANR	5049444	PrimaryExpression	"""r_reg_get_value: null or oob arena for current regset\\n"""		5049162	0					
ANR	5049445	ExpressionStatement	ret = val -> v128 . Low	50:2:1620:1639	5049162	10	True				
ANR	5049446	AssignmentExpression	ret = val -> v128 . Low		5049162	0		=			
ANR	5049447	Identifier	ret		5049162	0					
ANR	5049448	MemberAccess	val -> v128 . Low		5049162	1					
ANR	5049449	PtrMemberAccess	val -> v128		5049162	0					
ANR	5049450	Identifier	val		5049162	0					
ANR	5049451	Identifier	v128		5049162	1					
ANR	5049452	Identifier	Low		5049162	1					
ANR	5049453	BreakStatement	break ;	51:2:1643:1648	5049162	11	True				
ANR	5049454	Label	default :	54:1:1707:1714	5049162	12	True				
ANR	5049455	Identifier	default		5049162	0					
ANR	5049456	ExpressionStatement	"eprintf ( ""r_reg_get_value_big: Bit size %d not supported\\n"" , item -> size )"	55:2:1718:1790	5049162	13	True				
ANR	5049457	CallExpression	"eprintf ( ""r_reg_get_value_big: Bit size %d not supported\\n"" , item -> size )"		5049162	0					
ANR	5049458	Callee	eprintf		5049162	0					
ANR	5049459	Identifier	eprintf		5049162	0					
ANR	5049460	ArgumentList	"""r_reg_get_value_big: Bit size %d not supported\\n"""		5049162	1					
ANR	5049461	Argument	"""r_reg_get_value_big: Bit size %d not supported\\n"""		5049162	0					
ANR	5049462	PrimaryExpression	"""r_reg_get_value_big: Bit size %d not supported\\n"""		5049162	0					
ANR	5049463	Argument	item -> size		5049162	1					
ANR	5049464	PtrMemberAccess	item -> size		5049162	0					
ANR	5049465	Identifier	item		5049162	0					
ANR	5049466	Identifier	size		5049162	1					
ANR	5049467	BreakStatement	break ;	56:2:1794:1799	5049162	14	True				
ANR	5049468	ReturnStatement	return ret ;	58:1:1805:1815	5049162	10	True				
ANR	5049469	Identifier	ret		5049162	0					
ANR	5049470	ReturnType	R_API ut64		5049162	1					
ANR	5049471	Identifier	r_reg_get_value_big		5049162	2					
ANR	5049472	ParameterList	"RReg * reg , RRegItem * item , utX * val"		5049162	3					
ANR	5049473	Parameter	RReg * reg	15:31:398:406	5049162	0	True				
ANR	5049474	ParameterType	RReg *		5049162	0					
ANR	5049475	Identifier	reg		5049162	1					
ANR	5049476	Parameter	RRegItem * item	15:42:409:422	5049162	1	True				
ANR	5049477	ParameterType	RRegItem *		5049162	0					
ANR	5049478	Identifier	item		5049162	1					
ANR	5049479	Parameter	utX * val	15:58:425:432	5049162	2	True				
ANR	5049480	ParameterType	utX *		5049162	0					
ANR	5049481	Identifier	val		5049162	1					
ANR	5049482	CFGEntryNode	ENTRY		5049162		True				
ANR	5049483	CFGExitNode	EXIT		5049162		True				
ANR	5049484	Symbol	val -> v80 . High		5049162						
ANR	5049485	Symbol	* ( ( ut64 * ) ( regset -> arena -> bytes + off ) )		5049162						
ANR	5049486	Symbol	* regset		5049162						
ANR	5049487	Symbol	regset		5049162						
ANR	5049488	Symbol	BITS2BYTES		5049162						
ANR	5049489	Symbol	val -> v80 . Low		5049162						
ANR	5049490	Symbol	* val		5049162						
ANR	5049491	Symbol	val -> v80		5049162						
ANR	5049492	Symbol	item -> arena		5049162						
ANR	5049493	Symbol	val -> v128 . Low		5049162						
ANR	5049494	Symbol	reg -> regset		5049162						
ANR	5049495	Symbol	val -> v96		5049162						
ANR	5049496	Symbol	val -> v128		5049162						
ANR	5049497	Symbol	reg		5049162						
ANR	5049498	Symbol	* item		5049162						
ANR	5049499	Symbol	* regset -> arena		5049162						
ANR	5049500	Symbol	regset -> arena -> size		5049162						
ANR	5049501	Symbol	* off		5049162						
ANR	5049502	Symbol	item -> offset		5049162						
ANR	5049503	Symbol	* ( ( ut32 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162						
ANR	5049504	Symbol	val		5049162						
ANR	5049505	Symbol	ret		5049162						
ANR	5049506	Symbol	val -> v128 . High		5049162						
ANR	5049507	Symbol	* * regset		5049162						
ANR	5049508	Symbol	item		5049162						
ANR	5049509	Symbol	regset -> arena		5049162						
ANR	5049510	Symbol	* * * regset		5049162						
ANR	5049511	Symbol	* regset -> arena -> bytes		5049162						
ANR	5049512	Symbol	val -> v96 . Low		5049162						
ANR	5049513	Symbol	* * regset -> arena		5049162						
ANR	5049514	Symbol	off		5049162						
ANR	5049515	Symbol	regset -> arena -> bytes		5049162						
ANR	5049516	Symbol	val -> v96 . High		5049162						
ANR	5049517	Symbol	* ( ( ut64 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162						
ANR	5049518	Symbol	* ( ( ut16 * ) ( regset -> arena -> bytes + off + 8 ) )		5049162						
ANR	5049519	Symbol	item -> size		5049162						
ANR	5049520	Symbol	* reg		5049162						
ANR	5049521	Function	r_reg_get_value	61:0:1820:3518							
ANR	5049522	FunctionDef	"r_reg_get_value (RReg * reg , RRegItem * item)"		5049521	0					
ANR	5049523	CompoundStatement		61:54:1874:3518	5049521	0					
ANR	5049524	IfStatement	if ( ! reg || ! item || item -> offset == - 1 )		5049521	0					
ANR	5049525	Condition	! reg || ! item || item -> offset == - 1	62:5:1881:1915	5049521	0	True				
ANR	5049526	OrExpression	! reg || ! item || item -> offset == - 1		5049521	0		||			
ANR	5049527	UnaryOperationExpression	! reg		5049521	0					
ANR	5049528	UnaryOperator	!		5049521	0					
ANR	5049529	Identifier	reg		5049521	1					
ANR	5049530	OrExpression	! item || item -> offset == - 1		5049521	1		||			
ANR	5049531	UnaryOperationExpression	! item		5049521	0					
ANR	5049532	UnaryOperator	!		5049521	0					
ANR	5049533	Identifier	item		5049521	1					
ANR	5049534	EqualityExpression	item -> offset == - 1		5049521	1		==			
ANR	5049535	PtrMemberAccess	item -> offset		5049521	0					
ANR	5049536	Identifier	item		5049521	0					
ANR	5049537	Identifier	offset		5049521	1					
ANR	5049538	UnaryOperationExpression	- 1		5049521	1					
ANR	5049539	UnaryOperator	-		5049521	0					
ANR	5049540	PrimaryExpression	1		5049521	1					
ANR	5049541	CompoundStatement		2:42:43:43	5049521	1					
ANR	5049542	Statement	return	63:2:1922:1927	5049521	0	True				
ANR	5049543	Statement	0L	63:9:1929:1930	5049521	1	True				
ANR	5049544	ExpressionStatement	L	63:11:1931:1932	5049521	2	True				
ANR	5049545	Identifier	L		5049521	0					
ANR	5049546	IdentifierDeclStatement	int off = BITS2BYTES ( item -> offset ) ;	65:1:1938:1973	5049521	1	True				
ANR	5049547	IdentifierDecl	off = BITS2BYTES ( item -> offset )		5049521	0					
ANR	5049548	IdentifierDeclType	int		5049521	0					
ANR	5049549	Identifier	off		5049521	1					
ANR	5049550	AssignmentExpression	off = BITS2BYTES ( item -> offset )		5049521	2		=			
ANR	5049551	Identifier	off		5049521	0					
ANR	5049552	CallExpression	BITS2BYTES ( item -> offset )		5049521	1					
ANR	5049553	Callee	BITS2BYTES		5049521	0					
ANR	5049554	Identifier	BITS2BYTES		5049521	0					
ANR	5049555	ArgumentList	item -> offset		5049521	1					
ANR	5049556	Argument	item -> offset		5049521	0					
ANR	5049557	PtrMemberAccess	item -> offset		5049521	0					
ANR	5049558	Identifier	item		5049521	0					
ANR	5049559	Identifier	offset		5049521	1					
ANR	5049560	IdentifierDeclStatement	RRegSet * regset = & reg -> regset [ item -> arena ] ;	66:1:1976:2019	5049521	2	True				
ANR	5049561	IdentifierDecl	* regset = & reg -> regset [ item -> arena ]		5049521	0					
ANR	5049562	IdentifierDeclType	RRegSet *		5049521	0					
ANR	5049563	Identifier	regset		5049521	1					
ANR	5049564	AssignmentExpression	* regset = & reg -> regset [ item -> arena ]		5049521	2		=			
ANR	5049565	Identifier	regset		5049521	0					
ANR	5049566	UnaryOperationExpression	& reg -> regset [ item -> arena ]		5049521	1					
ANR	5049567	UnaryOperator	&		5049521	0					
ANR	5049568	ArrayIndexing	reg -> regset [ item -> arena ]		5049521	1					
ANR	5049569	PtrMemberAccess	reg -> regset		5049521	0					
ANR	5049570	Identifier	reg		5049521	0					
ANR	5049571	Identifier	regset		5049521	1					
ANR	5049572	PtrMemberAccess	item -> arena		5049521	1					
ANR	5049573	Identifier	item		5049521	0					
ANR	5049574	Identifier	arena		5049521	1					
ANR	5049575	IfStatement	if ( ! regset -> arena )		5049521	3					
ANR	5049576	Condition	! regset -> arena	67:5:2026:2039	5049521	0	True				
ANR	5049577	UnaryOperationExpression	! regset -> arena		5049521	0					
ANR	5049578	UnaryOperator	!		5049521	0					
ANR	5049579	PtrMemberAccess	regset -> arena		5049521	1					
ANR	5049580	Identifier	regset		5049521	0					
ANR	5049581	Identifier	arena		5049521	1					
ANR	5049582	CompoundStatement		7:21:167:167	5049521	1					
ANR	5049583	Statement	return	68:2:2046:2051	5049521	0	True				
ANR	5049584	Statement	0L	68:9:2053:2054	5049521	1	True				
ANR	5049585	ExpressionStatement	L	68:11:2055:2056	5049521	2	True				
ANR	5049586	Identifier	L		5049521	0					
ANR	5049587	SwitchStatement	switch ( item -> size )		5049521	4					
ANR	5049588	Condition	item -> size	70:9:2070:2079	5049521	0	True				
ANR	5049589	PtrMemberAccess	item -> size		5049521	0					
ANR	5049590	Identifier	item		5049521	0					
ANR	5049591	Identifier	size		5049521	1					
ANR	5049592	CompoundStatement		10:21:207:207	5049521	1					
ANR	5049593	Label	case 1 :	71:1:2085:2091	5049521	0	True				
ANR	5049594	CompoundStatement		12:2:222:251	5049521	1					
ANR	5049595	IdentifierDeclStatement	int offset = item -> offset / 8 ;	72:2:2097:2126	5049521	0	True				
ANR	5049596	IdentifierDecl	offset = item -> offset / 8		5049521	0					
ANR	5049597	IdentifierDeclType	int		5049521	0					
ANR	5049598	Identifier	offset		5049521	1					
ANR	5049599	AssignmentExpression	offset = item -> offset / 8		5049521	2		=			
ANR	5049600	Identifier	offset		5049521	0					
ANR	5049601	MultiplicativeExpression	item -> offset / 8		5049521	1		/			
ANR	5049602	PtrMemberAccess	item -> offset		5049521	0					
ANR	5049603	Identifier	item		5049521	0					
ANR	5049604	Identifier	offset		5049521	1					
ANR	5049605	PrimaryExpression	8		5049521	1					
ANR	5049606	IfStatement	if ( offset + item -> size >= regset -> arena -> size )		5049521	1					
ANR	5049607	Condition	offset + item -> size >= regset -> arena -> size	73:6:2134:2175	5049521	0	True				
ANR	5049608	RelationalExpression	offset + item -> size >= regset -> arena -> size		5049521	0		>=			
ANR	5049609	AdditiveExpression	offset + item -> size		5049521	0		+			
ANR	5049610	Identifier	offset		5049521	0					
ANR	5049611	PtrMemberAccess	item -> size		5049521	1					
ANR	5049612	Identifier	item		5049521	0					
ANR	5049613	Identifier	size		5049521	1					
ANR	5049614	PtrMemberAccess	regset -> arena -> size		5049521	1					
ANR	5049615	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049616	Identifier	regset		5049521	0					
ANR	5049617	Identifier	arena		5049521	1					
ANR	5049618	Identifier	size		5049521	1					
ANR	5049619	CompoundStatement		13:50:303:303	5049521	1					
ANR	5049620	BreakStatement	break ;	74:3:2183:2188	5049521	0	True				
ANR	5049621	ReturnStatement	return ( regset -> arena -> bytes [ offset ] & ( 1 << ( item -> offset % 8 ) ) ) ? 1 : 0 ;	76:2:2196:2285	5049521	2	True				
ANR	5049622	ConditionalExpression	( regset -> arena -> bytes [ offset ] & ( 1 << ( item -> offset % 8 ) ) ) ? 1 : 0		5049521	0					
ANR	5049623	Condition	regset -> arena -> bytes [ offset ] & ( 1 << ( item -> offset % 8 ) )		5049521	0					
ANR	5049624	BitAndExpression	regset -> arena -> bytes [ offset ] & ( 1 << ( item -> offset % 8 ) )		5049521	0		&			
ANR	5049625	ArrayIndexing	regset -> arena -> bytes [ offset ]		5049521	0					
ANR	5049626	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049627	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049628	Identifier	regset		5049521	0					
ANR	5049629	Identifier	arena		5049521	1					
ANR	5049630	Identifier	bytes		5049521	1					
ANR	5049631	Identifier	offset		5049521	1					
ANR	5049632	ShiftExpression	1 << ( item -> offset % 8 )		5049521	1		<<			
ANR	5049633	PrimaryExpression	1		5049521	0					
ANR	5049634	MultiplicativeExpression	item -> offset % 8		5049521	1		%			
ANR	5049635	PtrMemberAccess	item -> offset		5049521	0					
ANR	5049636	Identifier	item		5049521	0					
ANR	5049637	Identifier	offset		5049521	1					
ANR	5049638	PrimaryExpression	8		5049521	1					
ANR	5049639	PrimaryExpression	1		5049521	1					
ANR	5049640	PrimaryExpression	0		5049521	2					
ANR	5049641	BreakStatement	break ;	80:3:2290:2295	5049521	2	True				
ANR	5049642	Label	case 4 :	81:1:2298:2304	5049521	3	True				
ANR	5049643	IfStatement	if ( regset -> arena -> size - off - 1 >= 0 )		5049521	4					
ANR	5049644	Condition	regset -> arena -> size - off - 1 >= 0	82:6:2312:2345	5049521	0	True				
ANR	5049645	RelationalExpression	regset -> arena -> size - off - 1 >= 0		5049521	0		>=			
ANR	5049646	AdditiveExpression	regset -> arena -> size - off - 1		5049521	0		-			
ANR	5049647	PtrMemberAccess	regset -> arena -> size		5049521	0					
ANR	5049648	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049649	Identifier	regset		5049521	0					
ANR	5049650	Identifier	arena		5049521	1					
ANR	5049651	Identifier	size		5049521	1					
ANR	5049652	AdditiveExpression	off - 1		5049521	1		-			
ANR	5049653	Identifier	off		5049521	0					
ANR	5049654	PrimaryExpression	1		5049521	1					
ANR	5049655	PrimaryExpression	0		5049521	1					
ANR	5049656	CompoundStatement		22:42:473:473	5049521	1					
ANR	5049657	ReturnStatement	"return ( r_read_at_ble8 ( regset -> arena -> bytes , off ) ) & 0xF ;"	83:3:2353:2410	5049521	0	True				
ANR	5049658	BitAndExpression	"( r_read_at_ble8 ( regset -> arena -> bytes , off ) ) & 0xF"		5049521	0		&			
ANR	5049659	CallExpression	"r_read_at_ble8 ( regset -> arena -> bytes , off )"		5049521	0					
ANR	5049660	Callee	r_read_at_ble8		5049521	0					
ANR	5049661	Identifier	r_read_at_ble8		5049521	0					
ANR	5049662	ArgumentList	regset -> arena -> bytes		5049521	1					
ANR	5049663	Argument	regset -> arena -> bytes		5049521	0					
ANR	5049664	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049665	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049666	Identifier	regset		5049521	0					
ANR	5049667	Identifier	arena		5049521	1					
ANR	5049668	Identifier	bytes		5049521	1					
ANR	5049669	Argument	off		5049521	1					
ANR	5049670	Identifier	off		5049521	0					
ANR	5049671	PrimaryExpression	0xF		5049521	1					
ANR	5049672	BreakStatement	break ;	85:2:2418:2423	5049521	5	True				
ANR	5049673	Label	case 8 :	86:1:2426:2432	5049521	6	True				
ANR	5049674	IfStatement	if ( regset -> arena -> size - off - 1 >= 0 )		5049521	7					
ANR	5049675	Condition	regset -> arena -> size - off - 1 >= 0	87:6:2440:2473	5049521	0	True				
ANR	5049676	RelationalExpression	regset -> arena -> size - off - 1 >= 0		5049521	0		>=			
ANR	5049677	AdditiveExpression	regset -> arena -> size - off - 1		5049521	0		-			
ANR	5049678	PtrMemberAccess	regset -> arena -> size		5049521	0					
ANR	5049679	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049680	Identifier	regset		5049521	0					
ANR	5049681	Identifier	arena		5049521	1					
ANR	5049682	Identifier	size		5049521	1					
ANR	5049683	AdditiveExpression	off - 1		5049521	1		-			
ANR	5049684	Identifier	off		5049521	0					
ANR	5049685	PrimaryExpression	1		5049521	1					
ANR	5049686	PrimaryExpression	0		5049521	1					
ANR	5049687	CompoundStatement		27:42:601:601	5049521	1					
ANR	5049688	ReturnStatement	"return r_read_at_ble8 ( regset -> arena -> bytes , off ) ;"	88:3:2481:2530	5049521	0	True				
ANR	5049689	CallExpression	"r_read_at_ble8 ( regset -> arena -> bytes , off )"		5049521	0					
ANR	5049690	Callee	r_read_at_ble8		5049521	0					
ANR	5049691	Identifier	r_read_at_ble8		5049521	0					
ANR	5049692	ArgumentList	regset -> arena -> bytes		5049521	1					
ANR	5049693	Argument	regset -> arena -> bytes		5049521	0					
ANR	5049694	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049695	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049696	Identifier	regset		5049521	0					
ANR	5049697	Identifier	arena		5049521	1					
ANR	5049698	Identifier	bytes		5049521	1					
ANR	5049699	Argument	off		5049521	1					
ANR	5049700	Identifier	off		5049521	0					
ANR	5049701	BreakStatement	break ;	90:2:2538:2543	5049521	8	True				
ANR	5049702	Label	case 16 :	91:1:2546:2553	5049521	9	True				
ANR	5049703	IfStatement	if ( regset -> arena -> size - off - 2 >= 0 )		5049521	10					
ANR	5049704	Condition	regset -> arena -> size - off - 2 >= 0	92:6:2561:2594	5049521	0	True				
ANR	5049705	RelationalExpression	regset -> arena -> size - off - 2 >= 0		5049521	0		>=			
ANR	5049706	AdditiveExpression	regset -> arena -> size - off - 2		5049521	0		-			
ANR	5049707	PtrMemberAccess	regset -> arena -> size		5049521	0					
ANR	5049708	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049709	Identifier	regset		5049521	0					
ANR	5049710	Identifier	arena		5049521	1					
ANR	5049711	Identifier	size		5049521	1					
ANR	5049712	AdditiveExpression	off - 2		5049521	1		-			
ANR	5049713	Identifier	off		5049521	0					
ANR	5049714	PrimaryExpression	2		5049521	1					
ANR	5049715	PrimaryExpression	0		5049521	1					
ANR	5049716	CompoundStatement		32:42:722:722	5049521	1					
ANR	5049717	ReturnStatement	"return r_read_ble16 ( regset -> arena -> bytes + off , reg -> big_endian ) ;"	93:3:2602:2667	5049521	0	True				
ANR	5049718	CallExpression	"r_read_ble16 ( regset -> arena -> bytes + off , reg -> big_endian )"		5049521	0					
ANR	5049719	Callee	r_read_ble16		5049521	0					
ANR	5049720	Identifier	r_read_ble16		5049521	0					
ANR	5049721	ArgumentList	regset -> arena -> bytes + off		5049521	1					
ANR	5049722	Argument	regset -> arena -> bytes + off		5049521	0					
ANR	5049723	AdditiveExpression	regset -> arena -> bytes + off		5049521	0		+			
ANR	5049724	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049725	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049726	Identifier	regset		5049521	0					
ANR	5049727	Identifier	arena		5049521	1					
ANR	5049728	Identifier	bytes		5049521	1					
ANR	5049729	Identifier	off		5049521	1					
ANR	5049730	Argument	reg -> big_endian		5049521	1					
ANR	5049731	PtrMemberAccess	reg -> big_endian		5049521	0					
ANR	5049732	Identifier	reg		5049521	0					
ANR	5049733	Identifier	big_endian		5049521	1					
ANR	5049734	BreakStatement	break ;	95:2:2675:2680	5049521	11	True				
ANR	5049735	Label	case 27 :	96:1:2683:2690	5049521	12	True				
ANR	5049736	IfStatement	if ( off + 3 < regset -> arena -> size )		5049521	13					
ANR	5049737	Condition	off + 3 < regset -> arena -> size	97:6:2698:2726	5049521	0	True				
ANR	5049738	RelationalExpression	off + 3 < regset -> arena -> size		5049521	0		<			
ANR	5049739	AdditiveExpression	off + 3		5049521	0		+			
ANR	5049740	Identifier	off		5049521	0					
ANR	5049741	PrimaryExpression	3		5049521	1					
ANR	5049742	PtrMemberAccess	regset -> arena -> size		5049521	1					
ANR	5049743	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049744	Identifier	regset		5049521	0					
ANR	5049745	Identifier	arena		5049521	1					
ANR	5049746	Identifier	size		5049521	1					
ANR	5049747	CompoundStatement		37:37:854:854	5049521	1					
ANR	5049748	ReturnStatement	"return r_read_me27 ( regset -> arena -> bytes + off , 0 ) ;"	98:3:2734:2784	5049521	0	True				
ANR	5049749	CallExpression	"r_read_me27 ( regset -> arena -> bytes + off , 0 )"		5049521	0					
ANR	5049750	Callee	r_read_me27		5049521	0					
ANR	5049751	Identifier	r_read_me27		5049521	0					
ANR	5049752	ArgumentList	regset -> arena -> bytes + off		5049521	1					
ANR	5049753	Argument	regset -> arena -> bytes + off		5049521	0					
ANR	5049754	AdditiveExpression	regset -> arena -> bytes + off		5049521	0		+			
ANR	5049755	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049756	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049757	Identifier	regset		5049521	0					
ANR	5049758	Identifier	arena		5049521	1					
ANR	5049759	Identifier	bytes		5049521	1					
ANR	5049760	Identifier	off		5049521	1					
ANR	5049761	Argument	0		5049521	1					
ANR	5049762	PrimaryExpression	0		5049521	0					
ANR	5049763	BreakStatement	break ;	100:2:2792:2797	5049521	14	True				
ANR	5049764	Label	case 32 :	101:1:2800:2807	5049521	15	True				
ANR	5049765	IfStatement	if ( off + 4 <= regset -> arena -> size )		5049521	16					
ANR	5049766	Condition	off + 4 <= regset -> arena -> size	102:6:2815:2844	5049521	0	True				
ANR	5049767	RelationalExpression	off + 4 <= regset -> arena -> size		5049521	0		<=			
ANR	5049768	AdditiveExpression	off + 4		5049521	0		+			
ANR	5049769	Identifier	off		5049521	0					
ANR	5049770	PrimaryExpression	4		5049521	1					
ANR	5049771	PtrMemberAccess	regset -> arena -> size		5049521	1					
ANR	5049772	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049773	Identifier	regset		5049521	0					
ANR	5049774	Identifier	arena		5049521	1					
ANR	5049775	Identifier	size		5049521	1					
ANR	5049776	CompoundStatement		42:38:972:972	5049521	1					
ANR	5049777	ReturnStatement	"return r_read_ble32 ( regset -> arena -> bytes + off , reg -> big_endian ) ;"	103:3:2852:2917	5049521	0	True				
ANR	5049778	CallExpression	"r_read_ble32 ( regset -> arena -> bytes + off , reg -> big_endian )"		5049521	0					
ANR	5049779	Callee	r_read_ble32		5049521	0					
ANR	5049780	Identifier	r_read_ble32		5049521	0					
ANR	5049781	ArgumentList	regset -> arena -> bytes + off		5049521	1					
ANR	5049782	Argument	regset -> arena -> bytes + off		5049521	0					
ANR	5049783	AdditiveExpression	regset -> arena -> bytes + off		5049521	0		+			
ANR	5049784	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049785	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049786	Identifier	regset		5049521	0					
ANR	5049787	Identifier	arena		5049521	1					
ANR	5049788	Identifier	bytes		5049521	1					
ANR	5049789	Identifier	off		5049521	1					
ANR	5049790	Argument	reg -> big_endian		5049521	1					
ANR	5049791	PtrMemberAccess	reg -> big_endian		5049521	0					
ANR	5049792	Identifier	reg		5049521	0					
ANR	5049793	Identifier	big_endian		5049521	1					
ANR	5049794	ExpressionStatement	"eprintf ( ""r_reg_get_value: 32bit oob read %d\\n"" , off )"	105:2:2925:2978	5049521	17	True				
ANR	5049795	CallExpression	"eprintf ( ""r_reg_get_value: 32bit oob read %d\\n"" , off )"		5049521	0					
ANR	5049796	Callee	eprintf		5049521	0					
ANR	5049797	Identifier	eprintf		5049521	0					
ANR	5049798	ArgumentList	"""r_reg_get_value: 32bit oob read %d\\n"""		5049521	1					
ANR	5049799	Argument	"""r_reg_get_value: 32bit oob read %d\\n"""		5049521	0					
ANR	5049800	PrimaryExpression	"""r_reg_get_value: 32bit oob read %d\\n"""		5049521	0					
ANR	5049801	Argument	off		5049521	1					
ANR	5049802	Identifier	off		5049521	0					
ANR	5049803	BreakStatement	break ;	106:2:2982:2987	5049521	18	True				
ANR	5049804	Label	case 64 :	107:1:2990:2997	5049521	19	True				
ANR	5049805	IfStatement	if ( regset -> arena && regset -> arena -> bytes && ( off + 8 <= regset -> arena -> size ) )		5049521	20					
ANR	5049806	Condition	regset -> arena && regset -> arena -> bytes && ( off + 8 <= regset -> arena -> size )	108:6:3005:3077	5049521	0	True				
ANR	5049807	AndExpression	regset -> arena && regset -> arena -> bytes && ( off + 8 <= regset -> arena -> size )		5049521	0		&&			
ANR	5049808	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049809	Identifier	regset		5049521	0					
ANR	5049810	Identifier	arena		5049521	1					
ANR	5049811	AndExpression	regset -> arena -> bytes && ( off + 8 <= regset -> arena -> size )		5049521	1		&&			
ANR	5049812	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049813	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049814	Identifier	regset		5049521	0					
ANR	5049815	Identifier	arena		5049521	1					
ANR	5049816	Identifier	bytes		5049521	1					
ANR	5049817	RelationalExpression	off + 8 <= regset -> arena -> size		5049521	1		<=			
ANR	5049818	AdditiveExpression	off + 8		5049521	0		+			
ANR	5049819	Identifier	off		5049521	0					
ANR	5049820	PrimaryExpression	8		5049521	1					
ANR	5049821	PtrMemberAccess	regset -> arena -> size		5049521	1					
ANR	5049822	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049823	Identifier	regset		5049521	0					
ANR	5049824	Identifier	arena		5049521	1					
ANR	5049825	Identifier	size		5049521	1					
ANR	5049826	CompoundStatement		48:81:1205:1205	5049521	1					
ANR	5049827	ReturnStatement	"return r_read_ble64 ( regset -> arena -> bytes + off , reg -> big_endian ) ;"	109:3:3085:3150	5049521	0	True				
ANR	5049828	CallExpression	"r_read_ble64 ( regset -> arena -> bytes + off , reg -> big_endian )"		5049521	0					
ANR	5049829	Callee	r_read_ble64		5049521	0					
ANR	5049830	Identifier	r_read_ble64		5049521	0					
ANR	5049831	ArgumentList	regset -> arena -> bytes + off		5049521	1					
ANR	5049832	Argument	regset -> arena -> bytes + off		5049521	0					
ANR	5049833	AdditiveExpression	regset -> arena -> bytes + off		5049521	0		+			
ANR	5049834	PtrMemberAccess	regset -> arena -> bytes		5049521	0					
ANR	5049835	PtrMemberAccess	regset -> arena		5049521	0					
ANR	5049836	Identifier	regset		5049521	0					
ANR	5049837	Identifier	arena		5049521	1					
ANR	5049838	Identifier	bytes		5049521	1					
ANR	5049839	Identifier	off		5049521	1					
ANR	5049840	Argument	reg -> big_endian		5049521	1					
ANR	5049841	PtrMemberAccess	reg -> big_endian		5049521	0					
ANR	5049842	Identifier	reg		5049521	0					
ANR	5049843	Identifier	big_endian		5049521	1					
ANR	5049844	BreakStatement	break ;	112:2:3231:3236	5049521	21	True				
ANR	5049845	Label	case 80 :	113:1:3239:3246	5049521	22	True				
ANR	5049846	Label	case 96 :	114:1:3264:3271	5049521	23	True				
ANR	5049847	ReturnStatement	"return ( ut64 ) r_reg_get_longdouble ( reg , item ) ;"	116:2:3364:3409	5049521	24	True				
ANR	5049848	CastExpression	"( ut64 ) r_reg_get_longdouble ( reg , item )"		5049521	0					
ANR	5049849	CastTarget	ut64		5049521	0					
ANR	5049850	CallExpression	"r_reg_get_longdouble ( reg , item )"		5049521	1					
ANR	5049851	Callee	r_reg_get_longdouble		5049521	0					
ANR	5049852	Identifier	r_reg_get_longdouble		5049521	0					
ANR	5049853	ArgumentList	reg		5049521	1					
ANR	5049854	Argument	reg		5049521	0					
ANR	5049855	Identifier	reg		5049521	0					
ANR	5049856	Argument	item		5049521	1					
ANR	5049857	Identifier	item		5049521	0					
ANR	5049858	Label	default :	117:1:3412:3419	5049521	25	True				
ANR	5049859	Identifier	default		5049521	0					
ANR	5049860	ExpressionStatement	"eprintf ( ""r_reg_get_value: Bit size %d not supported\\n"" , item -> size )"	118:2:3423:3491	5049521	26	True				
ANR	5049861	CallExpression	"eprintf ( ""r_reg_get_value: Bit size %d not supported\\n"" , item -> size )"		5049521	0					
ANR	5049862	Callee	eprintf		5049521	0					
ANR	5049863	Identifier	eprintf		5049521	0					
ANR	5049864	ArgumentList	"""r_reg_get_value: Bit size %d not supported\\n"""		5049521	1					
ANR	5049865	Argument	"""r_reg_get_value: Bit size %d not supported\\n"""		5049521	0					
ANR	5049866	PrimaryExpression	"""r_reg_get_value: Bit size %d not supported\\n"""		5049521	0					
ANR	5049867	Argument	item -> size		5049521	1					
ANR	5049868	PtrMemberAccess	item -> size		5049521	0					
ANR	5049869	Identifier	item		5049521	0					
ANR	5049870	Identifier	size		5049521	1					
ANR	5049871	BreakStatement	break ;	119:2:3495:3500	5049521	27	True				
ANR	5049872	Statement	return	121:1:3506:3511	5049521	5	True				
ANR	5049873	Statement	0L	121:8:3513:3514	5049521	6	True				
ANR	5049874	ExpressionStatement	L	121:10:3515:3516	5049521	7	True				
ANR	5049875	Identifier	L		5049521	0					
ANR	5049876	ReturnType	R_API ut64		5049521	1					
ANR	5049877	Identifier	r_reg_get_value		5049521	2					
ANR	5049878	ParameterList	"RReg * reg , RRegItem * item"		5049521	3					
ANR	5049879	Parameter	RReg * reg	61:27:1847:1855	5049521	0	True				
ANR	5049880	ParameterType	RReg *		5049521	0					
ANR	5049881	Identifier	reg		5049521	1					
ANR	5049882	Parameter	RRegItem * item	61:38:1858:1871	5049521	1	True				
ANR	5049883	ParameterType	RRegItem *		5049521	0					
ANR	5049884	Identifier	item		5049521	1					
ANR	5049885	CFGEntryNode	ENTRY		5049521		True				
ANR	5049886	CFGExitNode	EXIT		5049521		True				
ANR	5049887	Symbol	* regset		5049521						
ANR	5049888	Symbol	regset		5049521						
ANR	5049889	Symbol	BITS2BYTES		5049521						
ANR	5049890	Symbol	item -> arena		5049521						
ANR	5049891	Symbol	reg -> regset		5049521						
ANR	5049892	Symbol	reg		5049521						
ANR	5049893	Symbol	* item		5049521						
ANR	5049894	Symbol	* regset -> arena		5049521						
ANR	5049895	Symbol	regset -> arena -> size		5049521						
ANR	5049896	Symbol	reg -> big_endian		5049521						
ANR	5049897	Symbol	r_read_ble32		5049521						
ANR	5049898	Symbol	item -> offset		5049521						
ANR	5049899	Symbol	* * regset		5049521						
ANR	5049900	Symbol	item		5049521						
ANR	5049901	Symbol	r_read_at_ble8		5049521						
ANR	5049902	Symbol	regset -> arena		5049521						
ANR	5049903	Symbol	offset		5049521						
ANR	5049904	Symbol	* * * regset		5049521						
ANR	5049905	Symbol	* regset -> arena -> bytes		5049521						
ANR	5049906	Symbol	r_read_ble16		5049521						
ANR	5049907	Symbol	* * regset -> arena		5049521						
ANR	5049908	Symbol	off		5049521						
ANR	5049909	Symbol	r_read_me27		5049521						
ANR	5049910	Symbol	regset -> arena -> bytes		5049521						
ANR	5049911	Symbol	* offset		5049521						
ANR	5049912	Symbol	item -> size		5049521						
ANR	5049913	Symbol	* reg		5049521						
ANR	5049914	Symbol	r_read_ble64		5049521						
ANR	5049915	Symbol	r_reg_get_longdouble		5049521						
ANR	5049916	Function	r_reg_get_value_by_role	124:0:3521:3731							
ANR	5049917	FunctionDef	"r_reg_get_value_by_role (RReg * reg , RRegisterId role)"		5049916	0					
ANR	5049918	CompoundStatement		124:64:3585:3731	5049916	0					
ANR	5049919	ReturnStatement	"return r_reg_get_value ( reg , r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 ) ) ;"	126:1:3652:3729	5049916	0	True				
ANR	5049920	CallExpression	"r_reg_get_value ( reg , r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 ) )"		5049916	0					
ANR	5049921	Callee	r_reg_get_value		5049916	0					
ANR	5049922	Identifier	r_reg_get_value		5049916	0					
ANR	5049923	ArgumentList	reg		5049916	1					
ANR	5049924	Argument	reg		5049916	0					
ANR	5049925	Identifier	reg		5049916	0					
ANR	5049926	Argument	"r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 )"		5049916	1					
ANR	5049927	CallExpression	"r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 )"		5049916	0					
ANR	5049928	Callee	r_reg_get		5049916	0					
ANR	5049929	Identifier	r_reg_get		5049916	0					
ANR	5049930	ArgumentList	reg		5049916	1					
ANR	5049931	Argument	reg		5049916	0					
ANR	5049932	Identifier	reg		5049916	0					
ANR	5049933	Argument	"r_reg_get_name ( reg , role )"		5049916	1					
ANR	5049934	CallExpression	"r_reg_get_name ( reg , role )"		5049916	0					
ANR	5049935	Callee	r_reg_get_name		5049916	0					
ANR	5049936	Identifier	r_reg_get_name		5049916	0					
ANR	5049937	ArgumentList	reg		5049916	1					
ANR	5049938	Argument	reg		5049916	0					
ANR	5049939	Identifier	reg		5049916	0					
ANR	5049940	Argument	role		5049916	1					
ANR	5049941	Identifier	role		5049916	0					
ANR	5049942	Argument	- 1		5049916	2					
ANR	5049943	UnaryOperationExpression	- 1		5049916	0					
ANR	5049944	UnaryOperator	-		5049916	0					
ANR	5049945	PrimaryExpression	1		5049916	1					
ANR	5049946	ReturnType	R_API ut64		5049916	1					
ANR	5049947	Identifier	r_reg_get_value_by_role		5049916	2					
ANR	5049948	ParameterList	"RReg * reg , RRegisterId role"		5049916	3					
ANR	5049949	Parameter	RReg * reg	124:35:3556:3564	5049916	0	True				
ANR	5049950	ParameterType	RReg *		5049916	0					
ANR	5049951	Identifier	reg		5049916	1					
ANR	5049952	Parameter	RRegisterId role	124:46:3567:3582	5049916	1	True				
ANR	5049953	ParameterType	RRegisterId		5049916	0					
ANR	5049954	Identifier	role		5049916	1					
ANR	5049955	CFGEntryNode	ENTRY		5049916		True				
ANR	5049956	CFGExitNode	EXIT		5049916		True				
ANR	5049957	Symbol	r_reg_get_value		5049916						
ANR	5049958	Symbol	role		5049916						
ANR	5049959	Symbol	reg		5049916						
ANR	5049960	Symbol	r_reg_get_name		5049916						
ANR	5049961	Symbol	r_reg_get		5049916						
ANR	5049962	Function	r_reg_set_value	129:0:3734:5588							
ANR	5049963	FunctionDef	"r_reg_set_value (RReg * reg , RRegItem * item , ut64 value)"		5049962	0					
ANR	5049964	CompoundStatement		129:66:3800:5588	5049962	0					
ANR	5049965	IdentifierDeclStatement	ut8 bytes [ 12 ] ;	130:1:3803:3816	5049962	0	True				
ANR	5049966	IdentifierDecl	bytes [ 12 ]		5049962	0					
ANR	5049967	IdentifierDeclType	ut8 [ 12 ]		5049962	0					
ANR	5049968	Identifier	bytes		5049962	1					
ANR	5049969	PrimaryExpression	12		5049962	2					
ANR	5049970	IdentifierDeclStatement	ut8 * src = bytes ;	131:1:3819:3835	5049962	1	True				
ANR	5049971	IdentifierDecl	* src = bytes		5049962	0					
ANR	5049972	IdentifierDeclType	ut8 *		5049962	0					
ANR	5049973	Identifier	src		5049962	1					
ANR	5049974	AssignmentExpression	* src = bytes		5049962	2		=			
ANR	5049975	Identifier	bytes		5049962	0					
ANR	5049976	Identifier	bytes		5049962	1					
ANR	5049977	ExpressionStatement	"r_return_val_if_fail ( reg && item , false )"	132:1:3838:3879	5049962	2	True				
ANR	5049978	CallExpression	"r_return_val_if_fail ( reg && item , false )"		5049962	0					
ANR	5049979	Callee	r_return_val_if_fail		5049962	0					
ANR	5049980	Identifier	r_return_val_if_fail		5049962	0					
ANR	5049981	ArgumentList	reg && item		5049962	1					
ANR	5049982	Argument	reg && item		5049962	0					
ANR	5049983	AndExpression	reg && item		5049962	0		&&			
ANR	5049984	Identifier	reg		5049962	0					
ANR	5049985	Identifier	item		5049962	1					
ANR	5049986	Argument	false		5049962	1					
ANR	5049987	Identifier	false		5049962	0					
ANR	5049988	IfStatement	"if ( r_reg_is_readonly ( reg , item ) )"		5049962	3					
ANR	5049989	Condition	"r_reg_is_readonly ( reg , item )"	134:5:3887:3915	5049962	0	True				
ANR	5049990	CallExpression	"r_reg_is_readonly ( reg , item )"		5049962	0					
ANR	5049991	Callee	r_reg_is_readonly		5049962	0					
ANR	5049992	Identifier	r_reg_is_readonly		5049962	0					
ANR	5049993	ArgumentList	reg		5049962	1					
ANR	5049994	Argument	reg		5049962	0					
ANR	5049995	Identifier	reg		5049962	0					
ANR	5049996	Argument	item		5049962	1					
ANR	5049997	Identifier	item		5049962	0					
ANR	5049998	CompoundStatement		6:36:117:117	5049962	1					
ANR	5049999	ReturnStatement	return true ;	135:2:3922:3933	5049962	0	True				
ANR	5050000	Identifier	true		5049962	0					
ANR	5050001	IfStatement	if ( item -> offset < 0 )		5049962	4					
ANR	5050002	Condition	item -> offset < 0	137:5:3943:3958	5049962	0	True				
ANR	5050003	RelationalExpression	item -> offset < 0		5049962	0		<			
ANR	5050004	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050005	Identifier	item		5049962	0					
ANR	5050006	Identifier	offset		5049962	1					
ANR	5050007	PrimaryExpression	0		5049962	1					
ANR	5050008	CompoundStatement		9:23:160:160	5049962	1					
ANR	5050009	ReturnStatement	return true ;	138:2:3965:3976	5049962	0	True				
ANR	5050010	Identifier	true		5049962	0					
ANR	5050011	IdentifierDeclStatement	RRegArena * arena = reg -> regset [ item -> arena ] . arena ;	140:1:3982:4031	5049962	5	True				
ANR	5050012	IdentifierDecl	* arena = reg -> regset [ item -> arena ] . arena		5049962	0					
ANR	5050013	IdentifierDeclType	RRegArena *		5049962	0					
ANR	5050014	Identifier	arena		5049962	1					
ANR	5050015	AssignmentExpression	* arena = reg -> regset [ item -> arena ] . arena		5049962	2		=			
ANR	5050016	Identifier	arena		5049962	0					
ANR	5050017	MemberAccess	reg -> regset [ item -> arena ] . arena		5049962	1					
ANR	5050018	ArrayIndexing	reg -> regset [ item -> arena ]		5049962	0					
ANR	5050019	PtrMemberAccess	reg -> regset		5049962	0					
ANR	5050020	Identifier	reg		5049962	0					
ANR	5050021	Identifier	regset		5049962	1					
ANR	5050022	PtrMemberAccess	item -> arena		5049962	1					
ANR	5050023	Identifier	item		5049962	0					
ANR	5050024	Identifier	arena		5049962	1					
ANR	5050025	Identifier	arena		5049962	1					
ANR	5050026	IfStatement	if ( ! arena )		5049962	6					
ANR	5050027	Condition	! arena	141:5:4038:4043	5049962	0	True				
ANR	5050028	UnaryOperationExpression	! arena		5049962	0					
ANR	5050029	UnaryOperator	!		5049962	0					
ANR	5050030	Identifier	arena		5049962	1					
ANR	5050031	CompoundStatement		13:13:245:245	5049962	1					
ANR	5050032	ReturnStatement	return false ;	142:2:4050:4062	5049962	0	True				
ANR	5050033	Identifier	false		5049962	0					
ANR	5050034	SwitchStatement	switch ( item -> size )		5049962	7					
ANR	5050035	Condition	item -> size	144:9:4076:4085	5049962	0	True				
ANR	5050036	PtrMemberAccess	item -> size		5049962	0					
ANR	5050037	Identifier	item		5049962	0					
ANR	5050038	Identifier	size		5049962	1					
ANR	5050039	CompoundStatement		16:21:287:287	5049962	1					
ANR	5050040	Label	case 80 :	145:1:4091:4098	5049962	0	True				
ANR	5050041	Label	case 96 :	146:1:4101:4108	5049962	1	True				
ANR	5050042	ExpressionStatement	"r_reg_set_longdouble ( reg , item , ( long double ) value )"	147:2:4135:4187	5049962	2	True				
ANR	5050043	CallExpression	"r_reg_set_longdouble ( reg , item , ( long double ) value )"		5049962	0					
ANR	5050044	Callee	r_reg_set_longdouble		5049962	0					
ANR	5050045	Identifier	r_reg_set_longdouble		5049962	0					
ANR	5050046	ArgumentList	reg		5049962	1					
ANR	5050047	Argument	reg		5049962	0					
ANR	5050048	Identifier	reg		5049962	0					
ANR	5050049	Argument	item		5049962	1					
ANR	5050050	Identifier	item		5049962	0					
ANR	5050051	Argument	( long double ) value		5049962	2					
ANR	5050052	CastExpression	( long double ) value		5049962	0					
ANR	5050053	CastTarget	long double		5049962	0					
ANR	5050054	Identifier	value		5049962	1					
ANR	5050055	BreakStatement	break ;	148:2:4191:4196	5049962	3	True				
ANR	5050056	Label	case 64 :	149:1:4199:4206	5049962	4	True				
ANR	5050057	IfStatement	if ( reg -> big_endian )		5049962	5					
ANR	5050058	Condition	reg -> big_endian	150:6:4214:4228	5049962	0	True				
ANR	5050059	PtrMemberAccess	reg -> big_endian		5049962	0					
ANR	5050060	Identifier	reg		5049962	0					
ANR	5050061	Identifier	big_endian		5049962	1					
ANR	5050062	CompoundStatement		22:23:430:430	5049962	1					
ANR	5050063	ExpressionStatement	"r_write_be64 ( src , value )"	151:3:4236:4261	5049962	0	True				
ANR	5050064	CallExpression	"r_write_be64 ( src , value )"		5049962	0					
ANR	5050065	Callee	r_write_be64		5049962	0					
ANR	5050066	Identifier	r_write_be64		5049962	0					
ANR	5050067	ArgumentList	src		5049962	1					
ANR	5050068	Argument	src		5049962	0					
ANR	5050069	Identifier	src		5049962	0					
ANR	5050070	Argument	value		5049962	1					
ANR	5050071	Identifier	value		5049962	0					
ANR	5050072	ElseStatement	else		5049962	0					
ANR	5050073	CompoundStatement		24:9:471:471	5049962	0					
ANR	5050074	ExpressionStatement	"r_write_le64 ( src , value )"	153:3:4277:4302	5049962	0	True				
ANR	5050075	CallExpression	"r_write_le64 ( src , value )"		5049962	0					
ANR	5050076	Callee	r_write_le64		5049962	0					
ANR	5050077	Identifier	r_write_le64		5049962	0					
ANR	5050078	ArgumentList	src		5049962	1					
ANR	5050079	Argument	src		5049962	0					
ANR	5050080	Identifier	src		5049962	0					
ANR	5050081	Argument	value		5049962	1					
ANR	5050082	Identifier	value		5049962	0					
ANR	5050083	BreakStatement	break ;	155:2:4310:4315	5049962	6	True				
ANR	5050084	Label	case 32 :	156:1:4318:4325	5049962	7	True				
ANR	5050085	IfStatement	if ( reg -> big_endian )		5049962	8					
ANR	5050086	Condition	reg -> big_endian	157:6:4333:4347	5049962	0	True				
ANR	5050087	PtrMemberAccess	reg -> big_endian		5049962	0					
ANR	5050088	Identifier	reg		5049962	0					
ANR	5050089	Identifier	big_endian		5049962	1					
ANR	5050090	CompoundStatement		29:23:549:549	5049962	1					
ANR	5050091	ExpressionStatement	"r_write_be32 ( src , value )"	158:3:4355:4380	5049962	0	True				
ANR	5050092	CallExpression	"r_write_be32 ( src , value )"		5049962	0					
ANR	5050093	Callee	r_write_be32		5049962	0					
ANR	5050094	Identifier	r_write_be32		5049962	0					
ANR	5050095	ArgumentList	src		5049962	1					
ANR	5050096	Argument	src		5049962	0					
ANR	5050097	Identifier	src		5049962	0					
ANR	5050098	Argument	value		5049962	1					
ANR	5050099	Identifier	value		5049962	0					
ANR	5050100	ElseStatement	else		5049962	0					
ANR	5050101	CompoundStatement		31:9:590:590	5049962	0					
ANR	5050102	ExpressionStatement	"r_write_le32 ( src , value )"	160:3:4396:4421	5049962	0	True				
ANR	5050103	CallExpression	"r_write_le32 ( src , value )"		5049962	0					
ANR	5050104	Callee	r_write_le32		5049962	0					
ANR	5050105	Identifier	r_write_le32		5049962	0					
ANR	5050106	ArgumentList	src		5049962	1					
ANR	5050107	Argument	src		5049962	0					
ANR	5050108	Identifier	src		5049962	0					
ANR	5050109	Argument	value		5049962	1					
ANR	5050110	Identifier	value		5049962	0					
ANR	5050111	BreakStatement	break ;	162:2:4429:4434	5049962	9	True				
ANR	5050112	Label	case 16 :	163:1:4437:4444	5049962	10	True				
ANR	5050113	IfStatement	if ( reg -> big_endian )		5049962	11					
ANR	5050114	Condition	reg -> big_endian	164:6:4452:4466	5049962	0	True				
ANR	5050115	PtrMemberAccess	reg -> big_endian		5049962	0					
ANR	5050116	Identifier	reg		5049962	0					
ANR	5050117	Identifier	big_endian		5049962	1					
ANR	5050118	CompoundStatement		36:23:668:668	5049962	1					
ANR	5050119	ExpressionStatement	"r_write_be16 ( src , value )"	165:3:4474:4499	5049962	0	True				
ANR	5050120	CallExpression	"r_write_be16 ( src , value )"		5049962	0					
ANR	5050121	Callee	r_write_be16		5049962	0					
ANR	5050122	Identifier	r_write_be16		5049962	0					
ANR	5050123	ArgumentList	src		5049962	1					
ANR	5050124	Argument	src		5049962	0					
ANR	5050125	Identifier	src		5049962	0					
ANR	5050126	Argument	value		5049962	1					
ANR	5050127	Identifier	value		5049962	0					
ANR	5050128	ElseStatement	else		5049962	0					
ANR	5050129	CompoundStatement		38:9:709:709	5049962	0					
ANR	5050130	ExpressionStatement	"r_write_le16 ( src , value )"	167:3:4515:4540	5049962	0	True				
ANR	5050131	CallExpression	"r_write_le16 ( src , value )"		5049962	0					
ANR	5050132	Callee	r_write_le16		5049962	0					
ANR	5050133	Identifier	r_write_le16		5049962	0					
ANR	5050134	ArgumentList	src		5049962	1					
ANR	5050135	Argument	src		5049962	0					
ANR	5050136	Identifier	src		5049962	0					
ANR	5050137	Argument	value		5049962	1					
ANR	5050138	Identifier	value		5049962	0					
ANR	5050139	BreakStatement	break ;	169:2:4548:4553	5049962	12	True				
ANR	5050140	Label	case 8 :	170:1:4556:4562	5049962	13	True				
ANR	5050141	ExpressionStatement	"r_write_ble8 ( src , ( ut8 ) ( value & UT8_MAX ) )"	171:2:4566:4609	5049962	14	True				
ANR	5050142	CallExpression	"r_write_ble8 ( src , ( ut8 ) ( value & UT8_MAX ) )"		5049962	0					
ANR	5050143	Callee	r_write_ble8		5049962	0					
ANR	5050144	Identifier	r_write_ble8		5049962	0					
ANR	5050145	ArgumentList	src		5049962	1					
ANR	5050146	Argument	src		5049962	0					
ANR	5050147	Identifier	src		5049962	0					
ANR	5050148	Argument	( ut8 ) ( value & UT8_MAX )		5049962	1					
ANR	5050149	CastExpression	( ut8 ) ( value & UT8_MAX )		5049962	0					
ANR	5050150	CastTarget	ut8		5049962	0					
ANR	5050151	BitAndExpression	value & UT8_MAX		5049962	1		&			
ANR	5050152	Identifier	value		5049962	0					
ANR	5050153	Identifier	UT8_MAX		5049962	1					
ANR	5050154	BreakStatement	break ;	172:2:4613:4618	5049962	15	True				
ANR	5050155	Label	case 1 :	173:1:4621:4627	5049962	16	True				
ANR	5050156	IfStatement	if ( value )		5049962	17					
ANR	5050157	Condition	value	174:6:4635:4639	5049962	0	True				
ANR	5050158	Identifier	value		5049962	0					
ANR	5050159	CompoundStatement		49:3:928:949	5049962	1					
ANR	5050160	IdentifierDeclStatement	ut8 * buf = arena -> bytes + ( item -> offset / 8 ) ;	175:3:4647:4691	5049962	0	True				
ANR	5050161	IdentifierDecl	* buf = arena -> bytes + ( item -> offset / 8 )		5049962	0					
ANR	5050162	IdentifierDeclType	ut8 *		5049962	0					
ANR	5050163	Identifier	buf		5049962	1					
ANR	5050164	AssignmentExpression	* buf = arena -> bytes + ( item -> offset / 8 )		5049962	2		=			
ANR	5050165	Identifier	buf		5049962	0					
ANR	5050166	AdditiveExpression	arena -> bytes + ( item -> offset / 8 )		5049962	1		+			
ANR	5050167	PtrMemberAccess	arena -> bytes		5049962	0					
ANR	5050168	Identifier	arena		5049962	0					
ANR	5050169	Identifier	bytes		5049962	1					
ANR	5050170	MultiplicativeExpression	item -> offset / 8		5049962	1		/			
ANR	5050171	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050172	Identifier	item		5049962	0					
ANR	5050173	Identifier	offset		5049962	1					
ANR	5050174	PrimaryExpression	8		5049962	1					
ANR	5050175	IdentifierDeclStatement	int bit = ( item -> offset % 8 ) ;	176:3:4696:4724	5049962	1	True				
ANR	5050176	IdentifierDecl	bit = ( item -> offset % 8 )		5049962	0					
ANR	5050177	IdentifierDeclType	int		5049962	0					
ANR	5050178	Identifier	bit		5049962	1					
ANR	5050179	AssignmentExpression	bit = ( item -> offset % 8 )		5049962	2		=			
ANR	5050180	Identifier	bit		5049962	0					
ANR	5050181	MultiplicativeExpression	item -> offset % 8		5049962	1		%			
ANR	5050182	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050183	Identifier	item		5049962	0					
ANR	5050184	Identifier	offset		5049962	1					
ANR	5050185	PrimaryExpression	8		5049962	1					
ANR	5050186	IdentifierDeclStatement	ut8 mask = ( 1 << bit ) ;	177:3:4729:4750	5049962	2	True				
ANR	5050187	IdentifierDecl	mask = ( 1 << bit )		5049962	0					
ANR	5050188	IdentifierDeclType	ut8		5049962	0					
ANR	5050189	Identifier	mask		5049962	1					
ANR	5050190	AssignmentExpression	mask = ( 1 << bit )		5049962	2		=			
ANR	5050191	Identifier	mask		5049962	0					
ANR	5050192	ShiftExpression	1 << bit		5049962	1		<<			
ANR	5050193	PrimaryExpression	1		5049962	0					
ANR	5050194	Identifier	bit		5049962	1					
ANR	5050195	ExpressionStatement	buf [ 0 ] = ( buf [ 0 ] & ( 0xff ^ mask ) ) | mask	178:3:4755:4795	5049962	3	True				
ANR	5050196	AssignmentExpression	buf [ 0 ] = ( buf [ 0 ] & ( 0xff ^ mask ) ) | mask		5049962	0		=			
ANR	5050197	ArrayIndexing	buf [ 0 ]		5049962	0					
ANR	5050198	Identifier	buf		5049962	0					
ANR	5050199	PrimaryExpression	0		5049962	1					
ANR	5050200	InclusiveOrExpression	( buf [ 0 ] & ( 0xff ^ mask ) ) | mask		5049962	1		|			
ANR	5050201	BitAndExpression	buf [ 0 ] & ( 0xff ^ mask )		5049962	0		&			
ANR	5050202	ArrayIndexing	buf [ 0 ]		5049962	0					
ANR	5050203	Identifier	buf		5049962	0					
ANR	5050204	PrimaryExpression	0		5049962	1					
ANR	5050205	ExclusiveOrExpression	0xff ^ mask		5049962	1		^			
ANR	5050206	PrimaryExpression	0xff		5049962	0					
ANR	5050207	Identifier	mask		5049962	1					
ANR	5050208	Identifier	mask		5049962	1					
ANR	5050209	ElseStatement	else		5049962	0					
ANR	5050210	CompoundStatement		59:3:1245:1273	5049962	0					
ANR	5050211	IdentifierDeclStatement	int idx = item -> offset / 8 ;	180:3:4811:4837	5049962	0	True				
ANR	5050212	IdentifierDecl	idx = item -> offset / 8		5049962	0					
ANR	5050213	IdentifierDeclType	int		5049962	0					
ANR	5050214	Identifier	idx		5049962	1					
ANR	5050215	AssignmentExpression	idx = item -> offset / 8		5049962	2		=			
ANR	5050216	Identifier	idx		5049962	0					
ANR	5050217	MultiplicativeExpression	item -> offset / 8		5049962	1		/			
ANR	5050218	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050219	Identifier	item		5049962	0					
ANR	5050220	Identifier	offset		5049962	1					
ANR	5050221	PrimaryExpression	8		5049962	1					
ANR	5050222	IfStatement	if ( idx + item -> size > arena -> size )		5049962	1					
ANR	5050223	Condition	idx + item -> size > arena -> size	181:7:4846:4875	5049962	0	True				
ANR	5050224	RelationalExpression	idx + item -> size > arena -> size		5049962	0		>			
ANR	5050225	AdditiveExpression	idx + item -> size		5049962	0		+			
ANR	5050226	Identifier	idx		5049962	0					
ANR	5050227	PtrMemberAccess	item -> size		5049962	1					
ANR	5050228	Identifier	item		5049962	0					
ANR	5050229	Identifier	size		5049962	1					
ANR	5050230	PtrMemberAccess	arena -> size		5049962	1					
ANR	5050231	Identifier	arena		5049962	0					
ANR	5050232	Identifier	size		5049962	1					
ANR	5050233	CompoundStatement		53:39:1077:1077	5049962	1					
ANR	5050234	ExpressionStatement	"eprintf ( ""RRegSetOverflow %d vs %d\\n"" , idx + item -> size , arena -> size )"	182:4:4884:4953	5049962	0	True				
ANR	5050235	CallExpression	"eprintf ( ""RRegSetOverflow %d vs %d\\n"" , idx + item -> size , arena -> size )"		5049962	0					
ANR	5050236	Callee	eprintf		5049962	0					
ANR	5050237	Identifier	eprintf		5049962	0					
ANR	5050238	ArgumentList	"""RRegSetOverflow %d vs %d\\n"""		5049962	1					
ANR	5050239	Argument	"""RRegSetOverflow %d vs %d\\n"""		5049962	0					
ANR	5050240	PrimaryExpression	"""RRegSetOverflow %d vs %d\\n"""		5049962	0					
ANR	5050241	Argument	idx + item -> size		5049962	1					
ANR	5050242	AdditiveExpression	idx + item -> size		5049962	0		+			
ANR	5050243	Identifier	idx		5049962	0					
ANR	5050244	PtrMemberAccess	item -> size		5049962	1					
ANR	5050245	Identifier	item		5049962	0					
ANR	5050246	Identifier	size		5049962	1					
ANR	5050247	Argument	arena -> size		5049962	2					
ANR	5050248	PtrMemberAccess	arena -> size		5049962	0					
ANR	5050249	Identifier	arena		5049962	0					
ANR	5050250	Identifier	size		5049962	1					
ANR	5050251	ReturnStatement	return false ;	183:4:4959:4971	5049962	1	True				
ANR	5050252	Identifier	false		5049962	0					
ANR	5050253	IdentifierDeclStatement	ut8 * buf = arena -> bytes + idx ;	185:3:4981:5010	5049962	2	True				
ANR	5050254	IdentifierDecl	* buf = arena -> bytes + idx		5049962	0					
ANR	5050255	IdentifierDeclType	ut8 *		5049962	0					
ANR	5050256	Identifier	buf		5049962	1					
ANR	5050257	AssignmentExpression	* buf = arena -> bytes + idx		5049962	2		=			
ANR	5050258	Identifier	buf		5049962	0					
ANR	5050259	AdditiveExpression	arena -> bytes + idx		5049962	1		+			
ANR	5050260	PtrMemberAccess	arena -> bytes		5049962	0					
ANR	5050261	Identifier	arena		5049962	0					
ANR	5050262	Identifier	bytes		5049962	1					
ANR	5050263	Identifier	idx		5049962	1					
ANR	5050264	IdentifierDeclStatement	int bit = item -> offset % 8 ;	186:3:5015:5041	5049962	3	True				
ANR	5050265	IdentifierDecl	bit = item -> offset % 8		5049962	0					
ANR	5050266	IdentifierDeclType	int		5049962	0					
ANR	5050267	Identifier	bit		5049962	1					
ANR	5050268	AssignmentExpression	bit = item -> offset % 8		5049962	2		=			
ANR	5050269	Identifier	bit		5049962	0					
ANR	5050270	MultiplicativeExpression	item -> offset % 8		5049962	1		%			
ANR	5050271	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050272	Identifier	item		5049962	0					
ANR	5050273	Identifier	offset		5049962	1					
ANR	5050274	PrimaryExpression	8		5049962	1					
ANR	5050275	IdentifierDeclStatement	ut8 mask = 0xff ^ ( 1 << bit ) ;	187:3:5046:5074	5049962	4	True				
ANR	5050276	IdentifierDecl	mask = 0xff ^ ( 1 << bit )		5049962	0					
ANR	5050277	IdentifierDeclType	ut8		5049962	0					
ANR	5050278	Identifier	mask		5049962	1					
ANR	5050279	AssignmentExpression	mask = 0xff ^ ( 1 << bit )		5049962	2		=			
ANR	5050280	Identifier	mask		5049962	0					
ANR	5050281	ExclusiveOrExpression	0xff ^ ( 1 << bit )		5049962	1		^			
ANR	5050282	PrimaryExpression	0xff		5049962	0					
ANR	5050283	ShiftExpression	1 << bit		5049962	1		<<			
ANR	5050284	PrimaryExpression	1		5049962	0					
ANR	5050285	Identifier	bit		5049962	1					
ANR	5050286	ExpressionStatement	buf [ 0 ] = ( buf [ 0 ] & mask ) | 0	188:3:5079:5107	5049962	5	True				
ANR	5050287	AssignmentExpression	buf [ 0 ] = ( buf [ 0 ] & mask ) | 0		5049962	0		=			
ANR	5050288	ArrayIndexing	buf [ 0 ]		5049962	0					
ANR	5050289	Identifier	buf		5049962	0					
ANR	5050290	PrimaryExpression	0		5049962	1					
ANR	5050291	InclusiveOrExpression	( buf [ 0 ] & mask ) | 0		5049962	1		|			
ANR	5050292	BitAndExpression	buf [ 0 ] & mask		5049962	0		&			
ANR	5050293	ArrayIndexing	buf [ 0 ]		5049962	0					
ANR	5050294	Identifier	buf		5049962	0					
ANR	5050295	PrimaryExpression	0		5049962	1					
ANR	5050296	Identifier	mask		5049962	1					
ANR	5050297	PrimaryExpression	0		5049962	1					
ANR	5050298	ReturnStatement	return true ;	190:2:5115:5126	5049962	18	True				
ANR	5050299	Identifier	true		5049962	0					
ANR	5050300	Label	default :	191:1:5129:5136	5049962	19	True				
ANR	5050301	Identifier	default		5049962	0					
ANR	5050302	ExpressionStatement	"eprintf ( ""r_reg_set_value: Bit size %d not supported\\n"" , item -> size )"	192:2:5140:5208	5049962	20	True				
ANR	5050303	CallExpression	"eprintf ( ""r_reg_set_value: Bit size %d not supported\\n"" , item -> size )"		5049962	0					
ANR	5050304	Callee	eprintf		5049962	0					
ANR	5050305	Identifier	eprintf		5049962	0					
ANR	5050306	ArgumentList	"""r_reg_set_value: Bit size %d not supported\\n"""		5049962	1					
ANR	5050307	Argument	"""r_reg_set_value: Bit size %d not supported\\n"""		5049962	0					
ANR	5050308	PrimaryExpression	"""r_reg_set_value: Bit size %d not supported\\n"""		5049962	0					
ANR	5050309	Argument	item -> size		5049962	1					
ANR	5050310	PtrMemberAccess	item -> size		5049962	0					
ANR	5050311	Identifier	item		5049962	0					
ANR	5050312	Identifier	size		5049962	1					
ANR	5050313	ReturnStatement	return false ;	193:2:5212:5224	5049962	21	True				
ANR	5050314	Identifier	false		5049962	0					
ANR	5050315	IdentifierDeclStatement	const bool fits_in_arena = ( arena -> size - BITS2BYTES ( item -> offset ) - BITS2BYTES ( item -> size ) ) >= 0 ;	195:1:5230:5329	5049962	8	True				
ANR	5050316	IdentifierDecl	fits_in_arena = ( arena -> size - BITS2BYTES ( item -> offset ) - BITS2BYTES ( item -> size ) ) >= 0		5049962	0					
ANR	5050317	IdentifierDeclType	const bool		5049962	0					
ANR	5050318	Identifier	fits_in_arena		5049962	1					
ANR	5050319	AssignmentExpression	fits_in_arena = ( arena -> size - BITS2BYTES ( item -> offset ) - BITS2BYTES ( item -> size ) ) >= 0		5049962	2		=			
ANR	5050320	Identifier	fits_in_arena		5049962	0					
ANR	5050321	RelationalExpression	( arena -> size - BITS2BYTES ( item -> offset ) - BITS2BYTES ( item -> size ) ) >= 0		5049962	1		>=			
ANR	5050322	AdditiveExpression	arena -> size - BITS2BYTES ( item -> offset ) - BITS2BYTES ( item -> size )		5049962	0		-			
ANR	5050323	PtrMemberAccess	arena -> size		5049962	0					
ANR	5050324	Identifier	arena		5049962	0					
ANR	5050325	Identifier	size		5049962	1					
ANR	5050326	AdditiveExpression	BITS2BYTES ( item -> offset ) - BITS2BYTES ( item -> size )		5049962	1		-			
ANR	5050327	CallExpression	BITS2BYTES ( item -> offset )		5049962	0					
ANR	5050328	Callee	BITS2BYTES		5049962	0					
ANR	5050329	Identifier	BITS2BYTES		5049962	0					
ANR	5050330	ArgumentList	item -> offset		5049962	1					
ANR	5050331	Argument	item -> offset		5049962	0					
ANR	5050332	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050333	Identifier	item		5049962	0					
ANR	5050334	Identifier	offset		5049962	1					
ANR	5050335	CallExpression	BITS2BYTES ( item -> size )		5049962	1					
ANR	5050336	Callee	BITS2BYTES		5049962	0					
ANR	5050337	Identifier	BITS2BYTES		5049962	0					
ANR	5050338	ArgumentList	item -> size		5049962	1					
ANR	5050339	Argument	item -> size		5049962	0					
ANR	5050340	PtrMemberAccess	item -> size		5049962	0					
ANR	5050341	Identifier	item		5049962	0					
ANR	5050342	Identifier	size		5049962	1					
ANR	5050343	PrimaryExpression	0		5049962	1					
ANR	5050344	IfStatement	if ( src && fits_in_arena )		5049962	9					
ANR	5050345	Condition	src && fits_in_arena	196:5:5336:5355	5049962	0	True				
ANR	5050346	AndExpression	src && fits_in_arena		5049962	0		&&			
ANR	5050347	Identifier	src		5049962	0					
ANR	5050348	Identifier	fits_in_arena		5049962	1					
ANR	5050349	CompoundStatement		68:27:1557:1557	5049962	1					
ANR	5050350	ExpressionStatement	"r_mem_copybits ( reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( item -> offset ) , src , item -> size )"	197:2:5362:5469	5049962	0	True				
ANR	5050351	CallExpression	"r_mem_copybits ( reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( item -> offset ) , src , item -> size )"		5049962	0					
ANR	5050352	Callee	r_mem_copybits		5049962	0					
ANR	5050353	Identifier	r_mem_copybits		5049962	0					
ANR	5050354	ArgumentList	reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( item -> offset )		5049962	1					
ANR	5050355	Argument	reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( item -> offset )		5049962	0					
ANR	5050356	AdditiveExpression	reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( item -> offset )		5049962	0		+			
ANR	5050357	PtrMemberAccess	reg -> regset [ item -> arena ] . arena -> bytes		5049962	0					
ANR	5050358	MemberAccess	reg -> regset [ item -> arena ] . arena		5049962	0					
ANR	5050359	ArrayIndexing	reg -> regset [ item -> arena ]		5049962	0					
ANR	5050360	PtrMemberAccess	reg -> regset		5049962	0					
ANR	5050361	Identifier	reg		5049962	0					
ANR	5050362	Identifier	regset		5049962	1					
ANR	5050363	PtrMemberAccess	item -> arena		5049962	1					
ANR	5050364	Identifier	item		5049962	0					
ANR	5050365	Identifier	arena		5049962	1					
ANR	5050366	Identifier	arena		5049962	1					
ANR	5050367	Identifier	bytes		5049962	1					
ANR	5050368	CallExpression	BITS2BYTES ( item -> offset )		5049962	1					
ANR	5050369	Callee	BITS2BYTES		5049962	0					
ANR	5050370	Identifier	BITS2BYTES		5049962	0					
ANR	5050371	ArgumentList	item -> offset		5049962	1					
ANR	5050372	Argument	item -> offset		5049962	0					
ANR	5050373	PtrMemberAccess	item -> offset		5049962	0					
ANR	5050374	Identifier	item		5049962	0					
ANR	5050375	Identifier	offset		5049962	1					
ANR	5050376	Argument	src		5049962	1					
ANR	5050377	Identifier	src		5049962	0					
ANR	5050378	Argument	item -> size		5049962	2					
ANR	5050379	PtrMemberAccess	item -> size		5049962	0					
ANR	5050380	Identifier	item		5049962	0					
ANR	5050381	Identifier	size		5049962	1					
ANR	5050382	ReturnStatement	return true ;	200:2:5473:5484	5049962	1	True				
ANR	5050383	Identifier	true		5049962	0					
ANR	5050384	Statement	eprintf	202:1:5490:5496	5049962	10	True				
ANR	5050385	Statement	(	202:9:5498:5498	5049962	11	True				
ANR	5050386	Statement	"""r_reg_set_value: Cannot set %s to 0x%"""	202:10:5499:5537	5049962	12	True				
ANR	5050387	Statement	PFMT64x	202:50:5539:5545	5049962	13	True				
ANR	5050388	Statement	"""\\n"""	202:58:5547:5550	5049962	14	True				
ANR	5050389	Statement	","	202:62:5551:5551	5049962	15	True				
ANR	5050390	Statement	item	202:64:5553:5556	5049962	16	True				
ANR	5050391	Statement	->	202:68:5557:5558	5049962	17	True				
ANR	5050392	Statement	name	202:70:5559:5562	5049962	18	True				
ANR	5050393	Statement	","	202:74:5563:5563	5049962	19	True				
ANR	5050394	Statement	value	202:76:5565:5569	5049962	20	True				
ANR	5050395	Statement	)	202:81:5570:5570	5049962	21	True				
ANR	5050396	ExpressionStatement		202:82:5571:5571	5049962	22	True				
ANR	5050397	ReturnStatement	return false ;	203:1:5574:5586	5049962	23	True				
ANR	5050398	Identifier	false		5049962	0					
ANR	5050399	ReturnType	R_API bool		5049962	1					
ANR	5050400	Identifier	r_reg_set_value		5049962	2					
ANR	5050401	ParameterList	"RReg * reg , RRegItem * item , ut64 value"		5049962	3					
ANR	5050402	Parameter	RReg * reg	129:27:3761:3769	5049962	0	True				
ANR	5050403	ParameterType	RReg *		5049962	0					
ANR	5050404	Identifier	reg		5049962	1					
ANR	5050405	Parameter	RRegItem * item	129:38:3772:3785	5049962	1	True				
ANR	5050406	ParameterType	RRegItem *		5049962	0					
ANR	5050407	Identifier	item		5049962	1					
ANR	5050408	Parameter	ut64 value	129:54:3788:3797	5049962	2	True				
ANR	5050409	ParameterType	ut64		5049962	0					
ANR	5050410	Identifier	value		5049962	1					
ANR	5050411	CFGEntryNode	ENTRY		5049962		True				
ANR	5050412	CFGExitNode	EXIT		5049962		True				
ANR	5050413	Symbol	* * item -> arena		5049962						
ANR	5050414	Symbol	* * * item		5049962						
ANR	5050415	Symbol	BITS2BYTES		5049962						
ANR	5050416	Symbol	reg -> regset [ item -> arena ] . arena -> bytes		5049962						
ANR	5050417	Symbol	arena		5049962						
ANR	5050418	Symbol	bit		5049962						
ANR	5050419	Symbol	fits_in_arena		5049962						
ANR	5050420	Symbol	reg -> regset [ item -> arena ] . arena		5049962						
ANR	5050421	Symbol	item -> arena		5049962						
ANR	5050422	Symbol	* item -> arena		5049962						
ANR	5050423	Symbol	reg -> regset		5049962						
ANR	5050424	Symbol	* * * reg		5049962						
ANR	5050425	Symbol	reg		5049962						
ANR	5050426	Symbol	* item		5049962						
ANR	5050427	Symbol	r_reg_is_readonly		5049962						
ANR	5050428	Symbol	reg -> big_endian		5049962						
ANR	5050429	Symbol	arena -> bytes		5049962						
ANR	5050430	Symbol	value		5049962						
ANR	5050431	Symbol	* reg -> regset [ item -> arena ] . arena		5049962						
ANR	5050432	Symbol	item -> offset		5049962						
ANR	5050433	Symbol	mask		5049962						
ANR	5050434	Symbol	item		5049962						
ANR	5050435	Symbol	* reg -> regset		5049962						
ANR	5050436	Symbol	* buf		5049962						
ANR	5050437	Symbol	src		5049962						
ANR	5050438	Symbol	* * item		5049962						
ANR	5050439	Symbol	false		5049962						
ANR	5050440	Symbol	* * reg		5049962						
ANR	5050441	Symbol	arena -> size		5049962						
ANR	5050442	Symbol	* * reg -> regset		5049962						
ANR	5050443	Symbol	buf		5049962						
ANR	5050444	Symbol	UT8_MAX		5049962						
ANR	5050445	Symbol	bytes		5049962						
ANR	5050446	Symbol	true		5049962						
ANR	5050447	Symbol	* arena		5049962						
ANR	5050448	Symbol	idx		5049962						
ANR	5050449	Symbol	item -> size		5049962						
ANR	5050450	Symbol	* reg		5049962						
ANR	5050451	Function	r_reg_set_value_by_role	206:0:5591:5834							
ANR	5050452	FunctionDef	"r_reg_set_value_by_role (RReg * reg , RRegisterId role , ut64 val)"		5050451	0					
ANR	5050453	CompoundStatement		206:74:5665:5834	5050451	0					
ANR	5050454	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 ) ;"	208:1:5732:5793	5050451	0	True				
ANR	5050455	IdentifierDecl	"* r = r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 )"		5050451	0					
ANR	5050456	IdentifierDeclType	RRegItem *		5050451	0					
ANR	5050457	Identifier	r		5050451	1					
ANR	5050458	AssignmentExpression	"* r = r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 )"		5050451	2		=			
ANR	5050459	Identifier	r		5050451	0					
ANR	5050460	CallExpression	"r_reg_get ( reg , r_reg_get_name ( reg , role ) , - 1 )"		5050451	1					
ANR	5050461	Callee	r_reg_get		5050451	0					
ANR	5050462	Identifier	r_reg_get		5050451	0					
ANR	5050463	ArgumentList	reg		5050451	1					
ANR	5050464	Argument	reg		5050451	0					
ANR	5050465	Identifier	reg		5050451	0					
ANR	5050466	Argument	"r_reg_get_name ( reg , role )"		5050451	1					
ANR	5050467	CallExpression	"r_reg_get_name ( reg , role )"		5050451	0					
ANR	5050468	Callee	r_reg_get_name		5050451	0					
ANR	5050469	Identifier	r_reg_get_name		5050451	0					
ANR	5050470	ArgumentList	reg		5050451	1					
ANR	5050471	Argument	reg		5050451	0					
ANR	5050472	Identifier	reg		5050451	0					
ANR	5050473	Argument	role		5050451	1					
ANR	5050474	Identifier	role		5050451	0					
ANR	5050475	Argument	- 1		5050451	2					
ANR	5050476	UnaryOperationExpression	- 1		5050451	0					
ANR	5050477	UnaryOperator	-		5050451	0					
ANR	5050478	PrimaryExpression	1		5050451	1					
ANR	5050479	ReturnStatement	"return r_reg_set_value ( reg , r , val ) ;"	209:1:5796:5832	5050451	1	True				
ANR	5050480	CallExpression	"r_reg_set_value ( reg , r , val )"		5050451	0					
ANR	5050481	Callee	r_reg_set_value		5050451	0					
ANR	5050482	Identifier	r_reg_set_value		5050451	0					
ANR	5050483	ArgumentList	reg		5050451	1					
ANR	5050484	Argument	reg		5050451	0					
ANR	5050485	Identifier	reg		5050451	0					
ANR	5050486	Argument	r		5050451	1					
ANR	5050487	Identifier	r		5050451	0					
ANR	5050488	Argument	val		5050451	2					
ANR	5050489	Identifier	val		5050451	0					
ANR	5050490	ReturnType	R_API bool		5050451	1					
ANR	5050491	Identifier	r_reg_set_value_by_role		5050451	2					
ANR	5050492	ParameterList	"RReg * reg , RRegisterId role , ut64 val"		5050451	3					
ANR	5050493	Parameter	RReg * reg	206:35:5626:5634	5050451	0	True				
ANR	5050494	ParameterType	RReg *		5050451	0					
ANR	5050495	Identifier	reg		5050451	1					
ANR	5050496	Parameter	RRegisterId role	206:46:5637:5652	5050451	1	True				
ANR	5050497	ParameterType	RRegisterId		5050451	0					
ANR	5050498	Identifier	role		5050451	1					
ANR	5050499	Parameter	ut64 val	206:64:5655:5662	5050451	2	True				
ANR	5050500	ParameterType	ut64		5050451	0					
ANR	5050501	Identifier	val		5050451	1					
ANR	5050502	CFGEntryNode	ENTRY		5050451		True				
ANR	5050503	CFGExitNode	EXIT		5050451		True				
ANR	5050504	Symbol	val		5050451						
ANR	5050505	Symbol	r		5050451						
ANR	5050506	Symbol	role		5050451						
ANR	5050507	Symbol	reg		5050451						
ANR	5050508	Symbol	r_reg_get_name		5050451						
ANR	5050509	Symbol	r_reg_set_value		5050451						
ANR	5050510	Symbol	r_reg_get		5050451						
ANR	5050511	Function	r_reg_set_bvalue	212:0:5837:6133							
ANR	5050512	FunctionDef	"r_reg_set_bvalue (RReg * reg , RRegItem * item , const char * str)"		5050511	0					
ANR	5050513	CompoundStatement		212:72:5909:6133	5050511	0					
ANR	5050514	IdentifierDeclStatement	ut64 num = UT64_MAX ;	213:1:5912:5931	5050511	0	True				
ANR	5050515	IdentifierDecl	num = UT64_MAX		5050511	0					
ANR	5050516	IdentifierDeclType	ut64		5050511	0					
ANR	5050517	Identifier	num		5050511	1					
ANR	5050518	AssignmentExpression	num = UT64_MAX		5050511	2		=			
ANR	5050519	Identifier	UT64_MAX		5050511	0					
ANR	5050520	Identifier	UT64_MAX		5050511	1					
ANR	5050521	IfStatement	if ( item && item -> flags && str )		5050511	1					
ANR	5050522	Condition	item && item -> flags && str	214:5:5938:5963	5050511	0	True				
ANR	5050523	AndExpression	item && item -> flags && str		5050511	0		&&			
ANR	5050524	Identifier	item		5050511	0					
ANR	5050525	AndExpression	item -> flags && str		5050511	1		&&			
ANR	5050526	PtrMemberAccess	item -> flags		5050511	0					
ANR	5050527	Identifier	item		5050511	0					
ANR	5050528	Identifier	flags		5050511	1					
ANR	5050529	Identifier	str		5050511	1					
ANR	5050530	CompoundStatement		3:33:56:56	5050511	1					
ANR	5050531	ExpressionStatement	"num = r_str_bits_from_string ( str , item -> flags )"	215:2:5970:6017	5050511	0	True				
ANR	5050532	AssignmentExpression	"num = r_str_bits_from_string ( str , item -> flags )"		5050511	0		=			
ANR	5050533	Identifier	num		5050511	0					
ANR	5050534	CallExpression	"r_str_bits_from_string ( str , item -> flags )"		5050511	1					
ANR	5050535	Callee	r_str_bits_from_string		5050511	0					
ANR	5050536	Identifier	r_str_bits_from_string		5050511	0					
ANR	5050537	ArgumentList	str		5050511	1					
ANR	5050538	Argument	str		5050511	0					
ANR	5050539	Identifier	str		5050511	0					
ANR	5050540	Argument	item -> flags		5050511	1					
ANR	5050541	PtrMemberAccess	item -> flags		5050511	0					
ANR	5050542	Identifier	item		5050511	0					
ANR	5050543	Identifier	flags		5050511	1					
ANR	5050544	IfStatement	if ( num == UT64_MAX )		5050511	1					
ANR	5050545	Condition	num == UT64_MAX	216:6:6025:6039	5050511	0	True				
ANR	5050546	EqualityExpression	num == UT64_MAX		5050511	0		==			
ANR	5050547	Identifier	num		5050511	0					
ANR	5050548	Identifier	UT64_MAX		5050511	1					
ANR	5050549	CompoundStatement		5:23:132:132	5050511	1					
ANR	5050550	ExpressionStatement	"num = r_num_math ( NULL , str )"	217:3:6047:6075	5050511	0	True				
ANR	5050551	AssignmentExpression	"num = r_num_math ( NULL , str )"		5050511	0		=			
ANR	5050552	Identifier	num		5050511	0					
ANR	5050553	CallExpression	"r_num_math ( NULL , str )"		5050511	1					
ANR	5050554	Callee	r_num_math		5050511	0					
ANR	5050555	Identifier	r_num_math		5050511	0					
ANR	5050556	ArgumentList	NULL		5050511	1					
ANR	5050557	Argument	NULL		5050511	0					
ANR	5050558	Identifier	NULL		5050511	0					
ANR	5050559	Argument	str		5050511	1					
ANR	5050560	Identifier	str		5050511	0					
ANR	5050561	ExpressionStatement	"r_reg_set_value ( reg , item , num )"	219:2:6083:6115	5050511	2	True				
ANR	5050562	CallExpression	"r_reg_set_value ( reg , item , num )"		5050511	0					
ANR	5050563	Callee	r_reg_set_value		5050511	0					
ANR	5050564	Identifier	r_reg_set_value		5050511	0					
ANR	5050565	ArgumentList	reg		5050511	1					
ANR	5050566	Argument	reg		5050511	0					
ANR	5050567	Identifier	reg		5050511	0					
ANR	5050568	Argument	item		5050511	1					
ANR	5050569	Identifier	item		5050511	0					
ANR	5050570	Argument	num		5050511	2					
ANR	5050571	Identifier	num		5050511	0					
ANR	5050572	ReturnStatement	return num ;	221:1:6121:6131	5050511	2	True				
ANR	5050573	Identifier	num		5050511	0					
ANR	5050574	ReturnType	R_API ut64		5050511	1					
ANR	5050575	Identifier	r_reg_set_bvalue		5050511	2					
ANR	5050576	ParameterList	"RReg * reg , RRegItem * item , const char * str"		5050511	3					
ANR	5050577	Parameter	RReg * reg	212:28:5865:5873	5050511	0	True				
ANR	5050578	ParameterType	RReg *		5050511	0					
ANR	5050579	Identifier	reg		5050511	1					
ANR	5050580	Parameter	RRegItem * item	212:39:5876:5889	5050511	1	True				
ANR	5050581	ParameterType	RRegItem *		5050511	0					
ANR	5050582	Identifier	item		5050511	1					
ANR	5050583	Parameter	const char * str	212:55:5892:5906	5050511	2	True				
ANR	5050584	ParameterType	const char *		5050511	0					
ANR	5050585	Identifier	str		5050511	1					
ANR	5050586	CFGEntryNode	ENTRY		5050511		True				
ANR	5050587	CFGExitNode	EXIT		5050511		True				
ANR	5050588	Symbol	str		5050511						
ANR	5050589	Symbol	item		5050511						
ANR	5050590	Symbol	r_str_bits_from_string		5050511						
ANR	5050591	Symbol	NULL		5050511						
ANR	5050592	Symbol	reg		5050511						
ANR	5050593	Symbol	* item		5050511						
ANR	5050594	Symbol	num		5050511						
ANR	5050595	Symbol	item -> flags		5050511						
ANR	5050596	Symbol	UT64_MAX		5050511						
ANR	5050597	Symbol	r_num_math		5050511						
ANR	5050598	Function	r_reg_get_bvalue	224:0:6136:6451							
ANR	5050599	FunctionDef	"r_reg_get_bvalue (RReg * reg , RRegItem * item)"		5050598	0					
ANR	5050600	CompoundStatement		224:63:6199:6451	5050598	0					
ANR	5050601	IdentifierDeclStatement	char * out = NULL ;	225:1:6202:6218	5050598	0	True				
ANR	5050602	IdentifierDecl	* out = NULL		5050598	0					
ANR	5050603	IdentifierDeclType	char *		5050598	0					
ANR	5050604	Identifier	out		5050598	1					
ANR	5050605	AssignmentExpression	* out = NULL		5050598	2		=			
ANR	5050606	Identifier	NULL		5050598	0					
ANR	5050607	Identifier	NULL		5050598	1					
ANR	5050608	IfStatement	if ( reg && item && item -> flags )		5050598	1					
ANR	5050609	Condition	reg && item && item -> flags	226:5:6225:6250	5050598	0	True				
ANR	5050610	AndExpression	reg && item && item -> flags		5050598	0		&&			
ANR	5050611	Identifier	reg		5050598	0					
ANR	5050612	AndExpression	item && item -> flags		5050598	1		&&			
ANR	5050613	Identifier	item		5050598	0					
ANR	5050614	PtrMemberAccess	item -> flags		5050598	1					
ANR	5050615	Identifier	item		5050598	0					
ANR	5050616	Identifier	flags		5050598	1					
ANR	5050617	CompoundStatement		3:33:53:53	5050598	1					
ANR	5050618	ExpressionStatement	out = malloc ( strlen ( item -> flags ) + 1 )	227:2:6257:6296	5050598	0	True				
ANR	5050619	AssignmentExpression	out = malloc ( strlen ( item -> flags ) + 1 )		5050598	0		=			
ANR	5050620	Identifier	out		5050598	0					
ANR	5050621	CallExpression	malloc ( strlen ( item -> flags ) + 1 )		5050598	1					
ANR	5050622	Callee	malloc		5050598	0					
ANR	5050623	Identifier	malloc		5050598	0					
ANR	5050624	ArgumentList	strlen ( item -> flags ) + 1		5050598	1					
ANR	5050625	Argument	strlen ( item -> flags ) + 1		5050598	0					
ANR	5050626	AdditiveExpression	strlen ( item -> flags ) + 1		5050598	0		+			
ANR	5050627	CallExpression	strlen ( item -> flags )		5050598	0					
ANR	5050628	Callee	strlen		5050598	0					
ANR	5050629	Identifier	strlen		5050598	0					
ANR	5050630	ArgumentList	item -> flags		5050598	1					
ANR	5050631	Argument	item -> flags		5050598	0					
ANR	5050632	PtrMemberAccess	item -> flags		5050598	0					
ANR	5050633	Identifier	item		5050598	0					
ANR	5050634	Identifier	flags		5050598	1					
ANR	5050635	PrimaryExpression	1		5050598	1					
ANR	5050636	IfStatement	if ( out )		5050598	1					
ANR	5050637	Condition	out	228:6:6304:6306	5050598	0	True				
ANR	5050638	Identifier	out		5050598	0					
ANR	5050639	CompoundStatement		6:3:114:152	5050598	1					
ANR	5050640	IdentifierDeclStatement	"ut64 num = r_reg_get_value ( reg , item ) ;"	229:3:6314:6352	5050598	0	True				
ANR	5050641	IdentifierDecl	"num = r_reg_get_value ( reg , item )"		5050598	0					
ANR	5050642	IdentifierDeclType	ut64		5050598	0					
ANR	5050643	Identifier	num		5050598	1					
ANR	5050644	AssignmentExpression	"num = r_reg_get_value ( reg , item )"		5050598	2		=			
ANR	5050645	Identifier	num		5050598	0					
ANR	5050646	CallExpression	"r_reg_get_value ( reg , item )"		5050598	1					
ANR	5050647	Callee	r_reg_get_value		5050598	0					
ANR	5050648	Identifier	r_reg_get_value		5050598	0					
ANR	5050649	ArgumentList	reg		5050598	1					
ANR	5050650	Argument	reg		5050598	0					
ANR	5050651	Identifier	reg		5050598	0					
ANR	5050652	Argument	item		5050598	1					
ANR	5050653	Identifier	item		5050598	0					
ANR	5050654	ExpressionStatement	"r_str_bits ( out , ( ut8 * ) & num , strlen ( item -> flags ) * 8 , item -> flags )"	230:3:6357:6429	5050598	1	True				
ANR	5050655	CallExpression	"r_str_bits ( out , ( ut8 * ) & num , strlen ( item -> flags ) * 8 , item -> flags )"		5050598	0					
ANR	5050656	Callee	r_str_bits		5050598	0					
ANR	5050657	Identifier	r_str_bits		5050598	0					
ANR	5050658	ArgumentList	out		5050598	1					
ANR	5050659	Argument	out		5050598	0					
ANR	5050660	Identifier	out		5050598	0					
ANR	5050661	Argument	( ut8 * ) & num		5050598	1					
ANR	5050662	CastExpression	( ut8 * ) & num		5050598	0					
ANR	5050663	CastTarget	ut8 *		5050598	0					
ANR	5050664	UnaryOperationExpression	& num		5050598	1					
ANR	5050665	UnaryOperator	&		5050598	0					
ANR	5050666	Identifier	num		5050598	1					
ANR	5050667	Argument	strlen ( item -> flags ) * 8		5050598	2					
ANR	5050668	MultiplicativeExpression	strlen ( item -> flags ) * 8		5050598	0		*			
ANR	5050669	CallExpression	strlen ( item -> flags )		5050598	0					
ANR	5050670	Callee	strlen		5050598	0					
ANR	5050671	Identifier	strlen		5050598	0					
ANR	5050672	ArgumentList	item -> flags		5050598	1					
ANR	5050673	Argument	item -> flags		5050598	0					
ANR	5050674	PtrMemberAccess	item -> flags		5050598	0					
ANR	5050675	Identifier	item		5050598	0					
ANR	5050676	Identifier	flags		5050598	1					
ANR	5050677	PrimaryExpression	8		5050598	1					
ANR	5050678	Argument	item -> flags		5050598	3					
ANR	5050679	PtrMemberAccess	item -> flags		5050598	0					
ANR	5050680	Identifier	item		5050598	0					
ANR	5050681	Identifier	flags		5050598	1					
ANR	5050682	ReturnStatement	return out ;	234:1:6439:6449	5050598	2	True				
ANR	5050683	Identifier	out		5050598	0					
ANR	5050684	ReturnType	R_API R_HEAP char *		5050598	1					
ANR	5050685	Identifier	r_reg_get_bvalue		5050598	2					
ANR	5050686	ParameterList	"RReg * reg , RRegItem * item"		5050598	3					
ANR	5050687	Parameter	RReg * reg	224:36:6172:6180	5050598	0	True				
ANR	5050688	ParameterType	RReg *		5050598	0					
ANR	5050689	Identifier	reg		5050598	1					
ANR	5050690	Parameter	RRegItem * item	224:47:6183:6196	5050598	1	True				
ANR	5050691	ParameterType	RRegItem *		5050598	0					
ANR	5050692	Identifier	item		5050598	1					
ANR	5050693	CFGEntryNode	ENTRY		5050598		True				
ANR	5050694	CFGExitNode	EXIT		5050598		True				
ANR	5050695	Symbol	malloc		5050598						
ANR	5050696	Symbol	strlen		5050598						
ANR	5050697	Symbol	item		5050598						
ANR	5050698	Symbol	r_reg_get_value		5050598						
ANR	5050699	Symbol	NULL		5050598						
ANR	5050700	Symbol	reg		5050598						
ANR	5050701	Symbol	* item		5050598						
ANR	5050702	Symbol	num		5050598						
ANR	5050703	Symbol	item -> flags		5050598						
ANR	5050704	Symbol	& num		5050598						
ANR	5050705	Symbol	out		5050598						
ANR	5050706	Function	r_reg_get_pack	241:0:6586:7209							
ANR	5050707	FunctionDef	"r_reg_get_pack (RReg * reg , RRegItem * item , int packidx , int packbits)"		5050706	0					
ANR	5050708	CompoundStatement		241:80:6666:7209	5050706	0					
ANR	5050709	Statement	ut64	242:1:6669:6672	5050706	0	True				
ANR	5050710	Statement	ret	242:6:6674:6676	5050706	1	True				
ANR	5050711	Statement	=	242:10:6678:6678	5050706	2	True				
ANR	5050712	Statement	0L	242:12:6680:6681	5050706	3	True				
ANR	5050713	ExpressionStatement	L	242:14:6682:6683	5050706	4	True				
ANR	5050714	Identifier	L		5050706	0					
ANR	5050715	IfStatement	if ( ! reg || ! item )		5050706	5					
ANR	5050716	Condition	! reg || ! item	243:5:6690:6702	5050706	0	True				
ANR	5050717	OrExpression	! reg || ! item		5050706	0		||			
ANR	5050718	UnaryOperationExpression	! reg		5050706	0					
ANR	5050719	UnaryOperator	!		5050706	0					
ANR	5050720	Identifier	reg		5050706	1					
ANR	5050721	UnaryOperationExpression	! item		5050706	1					
ANR	5050722	UnaryOperator	!		5050706	0					
ANR	5050723	Identifier	item		5050706	1					
ANR	5050724	CompoundStatement		3:20:38:38	5050706	1					
ANR	5050725	Statement	return	244:2:6709:6714	5050706	0	True				
ANR	5050726	Statement	0L	244:9:6716:6717	5050706	1	True				
ANR	5050727	ExpressionStatement	L	244:11:6718:6719	5050706	2	True				
ANR	5050728	Identifier	L		5050706	0					
ANR	5050729	IfStatement	if ( packbits < 1 )		5050706	6					
ANR	5050730	Condition	packbits < 1	246:5:6729:6740	5050706	0	True				
ANR	5050731	RelationalExpression	packbits < 1		5050706	0		<			
ANR	5050732	Identifier	packbits		5050706	0					
ANR	5050733	PrimaryExpression	1		5050706	1					
ANR	5050734	CompoundStatement		6:19:76:76	5050706	1					
ANR	5050735	ExpressionStatement	packbits = item -> packed_size	247:2:6747:6775	5050706	0	True				
ANR	5050736	AssignmentExpression	packbits = item -> packed_size		5050706	0		=			
ANR	5050737	Identifier	packbits		5050706	0					
ANR	5050738	PtrMemberAccess	item -> packed_size		5050706	1					
ANR	5050739	Identifier	item		5050706	0					
ANR	5050740	Identifier	packed_size		5050706	1					
ANR	5050741	IdentifierDeclStatement	const int packbytes = packbits / 8 ;	249:1:6781:6815	5050706	7	True				
ANR	5050742	IdentifierDecl	packbytes = packbits / 8		5050706	0					
ANR	5050743	IdentifierDeclType	const int		5050706	0					
ANR	5050744	Identifier	packbytes		5050706	1					
ANR	5050745	AssignmentExpression	packbytes = packbits / 8		5050706	2		=			
ANR	5050746	Identifier	packbytes		5050706	0					
ANR	5050747	MultiplicativeExpression	packbits / 8		5050706	1		/			
ANR	5050748	Identifier	packbits		5050706	0					
ANR	5050749	PrimaryExpression	8		5050706	1					
ANR	5050750	IdentifierDeclStatement	const int packmod = packbits % 8 ;	250:1:6818:6850	5050706	8	True				
ANR	5050751	IdentifierDecl	packmod = packbits % 8		5050706	0					
ANR	5050752	IdentifierDeclType	const int		5050706	0					
ANR	5050753	Identifier	packmod		5050706	1					
ANR	5050754	AssignmentExpression	packmod = packbits % 8		5050706	2		=			
ANR	5050755	Identifier	packmod		5050706	0					
ANR	5050756	MultiplicativeExpression	packbits % 8		5050706	1		%			
ANR	5050757	Identifier	packbits		5050706	0					
ANR	5050758	PrimaryExpression	8		5050706	1					
ANR	5050759	IfStatement	if ( packmod )		5050706	9					
ANR	5050760	Condition	packmod	251:5:6857:6863	5050706	0	True				
ANR	5050761	Identifier	packmod		5050706	0					
ANR	5050762	CompoundStatement		11:14:199:199	5050706	1					
ANR	5050763	ExpressionStatement	"eprintf ( ""Invalid bit size for packet register\\n"" )"	252:2:6870:6920	5050706	0	True				
ANR	5050764	CallExpression	"eprintf ( ""Invalid bit size for packet register\\n"" )"		5050706	0					
ANR	5050765	Callee	eprintf		5050706	0					
ANR	5050766	Identifier	eprintf		5050706	0					
ANR	5050767	ArgumentList	"""Invalid bit size for packet register\\n"""		5050706	1					
ANR	5050768	Argument	"""Invalid bit size for packet register\\n"""		5050706	0					
ANR	5050769	PrimaryExpression	"""Invalid bit size for packet register\\n"""		5050706	0					
ANR	5050770	Statement	return	253:2:6924:6929	5050706	1	True				
ANR	5050771	Statement	0L	253:9:6931:6932	5050706	2	True				
ANR	5050772	ExpressionStatement	L	253:11:6933:6934	5050706	3	True				
ANR	5050773	Identifier	L		5050706	0					
ANR	5050774	IdentifierDeclStatement	RRegSet * regset = & reg -> regset [ item -> arena ] ;	255:1:6940:6983	5050706	10	True				
ANR	5050775	IdentifierDecl	* regset = & reg -> regset [ item -> arena ]		5050706	0					
ANR	5050776	IdentifierDeclType	RRegSet *		5050706	0					
ANR	5050777	Identifier	regset		5050706	1					
ANR	5050778	AssignmentExpression	* regset = & reg -> regset [ item -> arena ]		5050706	2		=			
ANR	5050779	Identifier	regset		5050706	0					
ANR	5050780	UnaryOperationExpression	& reg -> regset [ item -> arena ]		5050706	1					
ANR	5050781	UnaryOperator	&		5050706	0					
ANR	5050782	ArrayIndexing	reg -> regset [ item -> arena ]		5050706	1					
ANR	5050783	PtrMemberAccess	reg -> regset		5050706	0					
ANR	5050784	Identifier	reg		5050706	0					
ANR	5050785	Identifier	regset		5050706	1					
ANR	5050786	PtrMemberAccess	item -> arena		5050706	1					
ANR	5050787	Identifier	item		5050706	0					
ANR	5050788	Identifier	arena		5050706	1					
ANR	5050789	IfStatement	if ( ! regset -> arena )		5050706	11					
ANR	5050790	Condition	! regset -> arena	256:5:6990:7003	5050706	0	True				
ANR	5050791	UnaryOperationExpression	! regset -> arena		5050706	0					
ANR	5050792	UnaryOperator	!		5050706	0					
ANR	5050793	PtrMemberAccess	regset -> arena		5050706	1					
ANR	5050794	Identifier	regset		5050706	0					
ANR	5050795	Identifier	arena		5050706	1					
ANR	5050796	CompoundStatement		16:21:339:339	5050706	1					
ANR	5050797	Statement	return	257:2:7010:7015	5050706	0	True				
ANR	5050798	Statement	0L	257:9:7017:7018	5050706	1	True				
ANR	5050799	ExpressionStatement	L	257:11:7019:7020	5050706	2	True				
ANR	5050800	Identifier	L		5050706	0					
ANR	5050801	IdentifierDeclStatement	int off = BITS2BYTES ( item -> offset ) ;	259:1:7026:7061	5050706	12	True				
ANR	5050802	IdentifierDecl	off = BITS2BYTES ( item -> offset )		5050706	0					
ANR	5050803	IdentifierDeclType	int		5050706	0					
ANR	5050804	Identifier	off		5050706	1					
ANR	5050805	AssignmentExpression	off = BITS2BYTES ( item -> offset )		5050706	2		=			
ANR	5050806	Identifier	off		5050706	0					
ANR	5050807	CallExpression	BITS2BYTES ( item -> offset )		5050706	1					
ANR	5050808	Callee	BITS2BYTES		5050706	0					
ANR	5050809	Identifier	BITS2BYTES		5050706	0					
ANR	5050810	ArgumentList	item -> offset		5050706	1					
ANR	5050811	Argument	item -> offset		5050706	0					
ANR	5050812	PtrMemberAccess	item -> offset		5050706	0					
ANR	5050813	Identifier	item		5050706	0					
ANR	5050814	Identifier	offset		5050706	1					
ANR	5050815	ExpressionStatement	off += ( packidx * packbytes )	260:1:7064:7092	5050706	13	True				
ANR	5050816	AssignmentExpression	off += ( packidx * packbytes )		5050706	0		+=			
ANR	5050817	Identifier	off		5050706	0					
ANR	5050818	MultiplicativeExpression	packidx * packbytes		5050706	1		*			
ANR	5050819	Identifier	packidx		5050706	0					
ANR	5050820	Identifier	packbytes		5050706	1					
ANR	5050821	IfStatement	if ( regset -> arena -> size - off - 1 >= 0 )		5050706	14					
ANR	5050822	Condition	regset -> arena -> size - off - 1 >= 0	261:5:7099:7132	5050706	0	True				
ANR	5050823	RelationalExpression	regset -> arena -> size - off - 1 >= 0		5050706	0		>=			
ANR	5050824	AdditiveExpression	regset -> arena -> size - off - 1		5050706	0		-			
ANR	5050825	PtrMemberAccess	regset -> arena -> size		5050706	0					
ANR	5050826	PtrMemberAccess	regset -> arena		5050706	0					
ANR	5050827	Identifier	regset		5050706	0					
ANR	5050828	Identifier	arena		5050706	1					
ANR	5050829	Identifier	size		5050706	1					
ANR	5050830	AdditiveExpression	off - 1		5050706	1		-			
ANR	5050831	Identifier	off		5050706	0					
ANR	5050832	PrimaryExpression	1		5050706	1					
ANR	5050833	PrimaryExpression	0		5050706	1					
ANR	5050834	CompoundStatement		21:41:468:468	5050706	1					
ANR	5050835	ExpressionStatement	"memcpy ( & ret , regset -> arena -> bytes + off , packbytes )"	262:2:7139:7191	5050706	0	True				
ANR	5050836	CallExpression	"memcpy ( & ret , regset -> arena -> bytes + off , packbytes )"		5050706	0					
ANR	5050837	Callee	memcpy		5050706	0					
ANR	5050838	Identifier	memcpy		5050706	0					
ANR	5050839	ArgumentList	& ret		5050706	1					
ANR	5050840	Argument	& ret		5050706	0					
ANR	5050841	UnaryOperationExpression	& ret		5050706	0					
ANR	5050842	UnaryOperator	&		5050706	0					
ANR	5050843	Identifier	ret		5050706	1					
ANR	5050844	Argument	regset -> arena -> bytes + off		5050706	1					
ANR	5050845	AdditiveExpression	regset -> arena -> bytes + off		5050706	0		+			
ANR	5050846	PtrMemberAccess	regset -> arena -> bytes		5050706	0					
ANR	5050847	PtrMemberAccess	regset -> arena		5050706	0					
ANR	5050848	Identifier	regset		5050706	0					
ANR	5050849	Identifier	arena		5050706	1					
ANR	5050850	Identifier	bytes		5050706	1					
ANR	5050851	Identifier	off		5050706	1					
ANR	5050852	Argument	packbytes		5050706	2					
ANR	5050853	Identifier	packbytes		5050706	0					
ANR	5050854	ReturnStatement	return ret ;	264:1:7197:7207	5050706	15	True				
ANR	5050855	Identifier	ret		5050706	0					
ANR	5050856	ReturnType	R_API ut64		5050706	1					
ANR	5050857	Identifier	r_reg_get_pack		5050706	2					
ANR	5050858	ParameterList	"RReg * reg , RRegItem * item , int packidx , int packbits"		5050706	3					
ANR	5050859	Parameter	RReg * reg	241:26:6612:6620	5050706	0	True				
ANR	5050860	ParameterType	RReg *		5050706	0					
ANR	5050861	Identifier	reg		5050706	1					
ANR	5050862	Parameter	RRegItem * item	241:37:6623:6636	5050706	1	True				
ANR	5050863	ParameterType	RRegItem *		5050706	0					
ANR	5050864	Identifier	item		5050706	1					
ANR	5050865	Parameter	int packidx	241:53:6639:6649	5050706	2	True				
ANR	5050866	ParameterType	int		5050706	0					
ANR	5050867	Identifier	packidx		5050706	1					
ANR	5050868	Parameter	int packbits	241:66:6652:6663	5050706	3	True				
ANR	5050869	ParameterType	int		5050706	0					
ANR	5050870	Identifier	packbits		5050706	1					
ANR	5050871	CFGEntryNode	ENTRY		5050706		True				
ANR	5050872	CFGExitNode	EXIT		5050706		True				
ANR	5050873	Symbol	& ret		5050706						
ANR	5050874	Symbol	ret		5050706						
ANR	5050875	Symbol	packidx		5050706						
ANR	5050876	Symbol	* * regset		5050706						
ANR	5050877	Symbol	item		5050706						
ANR	5050878	Symbol	regset -> arena		5050706						
ANR	5050879	Symbol	* regset		5050706						
ANR	5050880	Symbol	regset		5050706						
ANR	5050881	Symbol	BITS2BYTES		5050706						
ANR	5050882	Symbol	packmod		5050706						
ANR	5050883	Symbol	packbytes		5050706						
ANR	5050884	Symbol	item -> arena		5050706						
ANR	5050885	Symbol	off		5050706						
ANR	5050886	Symbol	regset -> arena -> bytes		5050706						
ANR	5050887	Symbol	reg -> regset		5050706						
ANR	5050888	Symbol	item -> packed_size		5050706						
ANR	5050889	Symbol	reg		5050706						
ANR	5050890	Symbol	* item		5050706						
ANR	5050891	Symbol	* regset -> arena		5050706						
ANR	5050892	Symbol	regset -> arena -> size		5050706						
ANR	5050893	Symbol	packbits		5050706						
ANR	5050894	Symbol	* reg		5050706						
ANR	5050895	Symbol	item -> offset		5050706						
ANR	5050896	Function	r_reg_set_pack	267:0:7212:8068							
ANR	5050897	FunctionDef	"r_reg_set_pack (RReg * reg , RRegItem * item , int packidx , int packbits , ut64 val)"		5050896	0					
ANR	5050898	CompoundStatement		267:89:7301:8068	5050896	0					
ANR	5050899	ExpressionStatement	"r_return_val_if_fail ( reg && item , false )"	268:1:7304:7345	5050896	0	True				
ANR	5050900	CallExpression	"r_return_val_if_fail ( reg && item , false )"		5050896	0					
ANR	5050901	Callee	r_return_val_if_fail		5050896	0					
ANR	5050902	Identifier	r_return_val_if_fail		5050896	0					
ANR	5050903	ArgumentList	reg && item		5050896	1					
ANR	5050904	Argument	reg && item		5050896	0					
ANR	5050905	AndExpression	reg && item		5050896	0		&&			
ANR	5050906	Identifier	reg		5050896	0					
ANR	5050907	Identifier	item		5050896	1					
ANR	5050908	Argument	false		5050896	1					
ANR	5050909	Identifier	false		5050896	0					
ANR	5050910	IfStatement	if ( ! reg -> regset -> arena )		5050896	1					
ANR	5050911	Condition	! reg -> regset -> arena	270:5:7353:7371	5050896	0	True				
ANR	5050912	UnaryOperationExpression	! reg -> regset -> arena		5050896	0					
ANR	5050913	UnaryOperator	!		5050896	0					
ANR	5050914	PtrMemberAccess	reg -> regset -> arena		5050896	1					
ANR	5050915	PtrMemberAccess	reg -> regset		5050896	0					
ANR	5050916	Identifier	reg		5050896	0					
ANR	5050917	Identifier	regset		5050896	1					
ANR	5050918	Identifier	arena		5050896	1					
ANR	5050919	CompoundStatement		4:26:72:72	5050896	1					
ANR	5050920	Statement	return	271:2:7378:7383	5050896	0	True				
ANR	5050921	Statement	0L	271:9:7385:7386	5050896	1	True				
ANR	5050922	ExpressionStatement	L	271:11:7387:7388	5050896	2	True				
ANR	5050923	Identifier	L		5050896	0					
ANR	5050924	IfStatement	if ( packbits < 1 )		5050896	2					
ANR	5050925	Condition	packbits < 1	273:5:7398:7409	5050896	0	True				
ANR	5050926	RelationalExpression	packbits < 1		5050896	0		<			
ANR	5050927	Identifier	packbits		5050896	0					
ANR	5050928	PrimaryExpression	1		5050896	1					
ANR	5050929	CompoundStatement		7:19:110:110	5050896	1					
ANR	5050930	ExpressionStatement	packbits = item -> packed_size	274:2:7416:7444	5050896	0	True				
ANR	5050931	AssignmentExpression	packbits = item -> packed_size		5050896	0		=			
ANR	5050932	Identifier	packbits		5050896	0					
ANR	5050933	PtrMemberAccess	item -> packed_size		5050896	1					
ANR	5050934	Identifier	item		5050896	0					
ANR	5050935	Identifier	packed_size		5050896	1					
ANR	5050936	IdentifierDeclStatement	int packbytes = packbits / 8 ;	276:1:7450:7478	5050896	3	True				
ANR	5050937	IdentifierDecl	packbytes = packbits / 8		5050896	0					
ANR	5050938	IdentifierDeclType	int		5050896	0					
ANR	5050939	Identifier	packbytes		5050896	1					
ANR	5050940	AssignmentExpression	packbytes = packbits / 8		5050896	2		=			
ANR	5050941	Identifier	packbytes		5050896	0					
ANR	5050942	MultiplicativeExpression	packbits / 8		5050896	1		/			
ANR	5050943	Identifier	packbits		5050896	0					
ANR	5050944	PrimaryExpression	8		5050896	1					
ANR	5050945	IdentifierDeclStatement	int packmod = packbits % 8 ;	277:1:7481:7507	5050896	4	True				
ANR	5050946	IdentifierDecl	packmod = packbits % 8		5050896	0					
ANR	5050947	IdentifierDeclType	int		5050896	0					
ANR	5050948	Identifier	packmod		5050896	1					
ANR	5050949	AssignmentExpression	packmod = packbits % 8		5050896	2		=			
ANR	5050950	Identifier	packmod		5050896	0					
ANR	5050951	MultiplicativeExpression	packbits % 8		5050896	1		%			
ANR	5050952	Identifier	packbits		5050896	0					
ANR	5050953	PrimaryExpression	8		5050896	1					
ANR	5050954	IfStatement	if ( packidx * packbits > item -> size )		5050896	5					
ANR	5050955	Condition	packidx * packbits > item -> size	278:5:7514:7544	5050896	0	True				
ANR	5050956	RelationalExpression	packidx * packbits > item -> size		5050896	0		>			
ANR	5050957	MultiplicativeExpression	packidx * packbits		5050896	0		*			
ANR	5050958	Identifier	packidx		5050896	0					
ANR	5050959	Identifier	packbits		5050896	1					
ANR	5050960	PtrMemberAccess	item -> size		5050896	1					
ANR	5050961	Identifier	item		5050896	0					
ANR	5050962	Identifier	size		5050896	1					
ANR	5050963	CompoundStatement		12:38:245:245	5050896	1					
ANR	5050964	ExpressionStatement	"eprintf ( ""Packed index is beyond the register size\\n"" )"	279:2:7551:7605	5050896	0	True				
ANR	5050965	CallExpression	"eprintf ( ""Packed index is beyond the register size\\n"" )"		5050896	0					
ANR	5050966	Callee	eprintf		5050896	0					
ANR	5050967	Identifier	eprintf		5050896	0					
ANR	5050968	ArgumentList	"""Packed index is beyond the register size\\n"""		5050896	1					
ANR	5050969	Argument	"""Packed index is beyond the register size\\n"""		5050896	0					
ANR	5050970	PrimaryExpression	"""Packed index is beyond the register size\\n"""		5050896	0					
ANR	5050971	ReturnStatement	return false ;	280:2:7609:7621	5050896	1	True				
ANR	5050972	Identifier	false		5050896	0					
ANR	5050973	IfStatement	if ( packmod )		5050896	6					
ANR	5050974	Condition	packmod	282:5:7631:7637	5050896	0	True				
ANR	5050975	Identifier	packmod		5050896	0					
ANR	5050976	CompoundStatement		16:14:338:338	5050896	1					
ANR	5050977	ExpressionStatement	"eprintf ( ""Invalid bit size for packet register\\n"" )"	283:2:7644:7694	5050896	0	True				
ANR	5050978	CallExpression	"eprintf ( ""Invalid bit size for packet register\\n"" )"		5050896	0					
ANR	5050979	Callee	eprintf		5050896	0					
ANR	5050980	Identifier	eprintf		5050896	0					
ANR	5050981	ArgumentList	"""Invalid bit size for packet register\\n"""		5050896	1					
ANR	5050982	Argument	"""Invalid bit size for packet register\\n"""		5050896	0					
ANR	5050983	PrimaryExpression	"""Invalid bit size for packet register\\n"""		5050896	0					
ANR	5050984	ReturnStatement	return false ;	284:2:7698:7710	5050896	1	True				
ANR	5050985	Identifier	false		5050896	0					
ANR	5050986	IdentifierDeclStatement	int off = item -> offset ;	286:1:7716:7738	5050896	7	True				
ANR	5050987	IdentifierDecl	off = item -> offset		5050896	0					
ANR	5050988	IdentifierDeclType	int		5050896	0					
ANR	5050989	Identifier	off		5050896	1					
ANR	5050990	AssignmentExpression	off = item -> offset		5050896	2		=			
ANR	5050991	Identifier	off		5050896	0					
ANR	5050992	PtrMemberAccess	item -> offset		5050896	1					
ANR	5050993	Identifier	item		5050896	0					
ANR	5050994	Identifier	offset		5050896	1					
ANR	5050995	IfStatement	if ( reg -> regset [ item -> arena ] . arena -> size - BITS2BYTES ( off ) - BITS2BYTES ( packbytes ) >= 0 )		5050896	8					
ANR	5050996	Condition	reg -> regset [ item -> arena ] . arena -> size - BITS2BYTES ( off ) - BITS2BYTES ( packbytes ) >= 0	287:5:7745:7829	5050896	0	True				
ANR	5050997	RelationalExpression	reg -> regset [ item -> arena ] . arena -> size - BITS2BYTES ( off ) - BITS2BYTES ( packbytes ) >= 0		5050896	0		>=			
ANR	5050998	AdditiveExpression	reg -> regset [ item -> arena ] . arena -> size - BITS2BYTES ( off ) - BITS2BYTES ( packbytes )		5050896	0		-			
ANR	5050999	PtrMemberAccess	reg -> regset [ item -> arena ] . arena -> size		5050896	0					
ANR	5051000	MemberAccess	reg -> regset [ item -> arena ] . arena		5050896	0					
ANR	5051001	ArrayIndexing	reg -> regset [ item -> arena ]		5050896	0					
ANR	5051002	PtrMemberAccess	reg -> regset		5050896	0					
ANR	5051003	Identifier	reg		5050896	0					
ANR	5051004	Identifier	regset		5050896	1					
ANR	5051005	PtrMemberAccess	item -> arena		5050896	1					
ANR	5051006	Identifier	item		5050896	0					
ANR	5051007	Identifier	arena		5050896	1					
ANR	5051008	Identifier	arena		5050896	1					
ANR	5051009	Identifier	size		5050896	1					
ANR	5051010	AdditiveExpression	BITS2BYTES ( off ) - BITS2BYTES ( packbytes )		5050896	1		-			
ANR	5051011	CallExpression	BITS2BYTES ( off )		5050896	0					
ANR	5051012	Callee	BITS2BYTES		5050896	0					
ANR	5051013	Identifier	BITS2BYTES		5050896	0					
ANR	5051014	ArgumentList	off		5050896	1					
ANR	5051015	Argument	off		5050896	0					
ANR	5051016	Identifier	off		5050896	0					
ANR	5051017	CallExpression	BITS2BYTES ( packbytes )		5050896	1					
ANR	5051018	Callee	BITS2BYTES		5050896	0					
ANR	5051019	Identifier	BITS2BYTES		5050896	0					
ANR	5051020	ArgumentList	packbytes		5050896	1					
ANR	5051021	Argument	packbytes		5050896	0					
ANR	5051022	Identifier	packbytes		5050896	0					
ANR	5051023	PrimaryExpression	0		5050896	1					
ANR	5051024	CompoundStatement		22:2:534:601	5050896	1					
ANR	5051025	IdentifierDeclStatement	ut8 * dst = reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( off ) ;	288:2:7836:7903	5050896	0	True				
ANR	5051026	IdentifierDecl	* dst = reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( off )		5050896	0					
ANR	5051027	IdentifierDeclType	ut8 *		5050896	0					
ANR	5051028	Identifier	dst		5050896	1					
ANR	5051029	AssignmentExpression	* dst = reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( off )		5050896	2		=			
ANR	5051030	Identifier	dst		5050896	0					
ANR	5051031	AdditiveExpression	reg -> regset [ item -> arena ] . arena -> bytes + BITS2BYTES ( off )		5050896	1		+			
ANR	5051032	PtrMemberAccess	reg -> regset [ item -> arena ] . arena -> bytes		5050896	0					
ANR	5051033	MemberAccess	reg -> regset [ item -> arena ] . arena		5050896	0					
ANR	5051034	ArrayIndexing	reg -> regset [ item -> arena ]		5050896	0					
ANR	5051035	PtrMemberAccess	reg -> regset		5050896	0					
ANR	5051036	Identifier	reg		5050896	0					
ANR	5051037	Identifier	regset		5050896	1					
ANR	5051038	PtrMemberAccess	item -> arena		5050896	1					
ANR	5051039	Identifier	item		5050896	0					
ANR	5051040	Identifier	arena		5050896	1					
ANR	5051041	Identifier	arena		5050896	1					
ANR	5051042	Identifier	bytes		5050896	1					
ANR	5051043	CallExpression	BITS2BYTES ( off )		5050896	1					
ANR	5051044	Callee	BITS2BYTES		5050896	0					
ANR	5051045	Identifier	BITS2BYTES		5050896	0					
ANR	5051046	ArgumentList	off		5050896	1					
ANR	5051047	Argument	off		5050896	0					
ANR	5051048	Identifier	off		5050896	0					
ANR	5051049	ExpressionStatement	"r_mem_copybits ( dst , ( ut8 * ) & val , packbytes )"	289:2:7907:7951	5050896	1	True				
ANR	5051050	CallExpression	"r_mem_copybits ( dst , ( ut8 * ) & val , packbytes )"		5050896	0					
ANR	5051051	Callee	r_mem_copybits		5050896	0					
ANR	5051052	Identifier	r_mem_copybits		5050896	0					
ANR	5051053	ArgumentList	dst		5050896	1					
ANR	5051054	Argument	dst		5050896	0					
ANR	5051055	Identifier	dst		5050896	0					
ANR	5051056	Argument	( ut8 * ) & val		5050896	1					
ANR	5051057	CastExpression	( ut8 * ) & val		5050896	0					
ANR	5051058	CastTarget	ut8 *		5050896	0					
ANR	5051059	UnaryOperationExpression	& val		5050896	1					
ANR	5051060	UnaryOperator	&		5050896	0					
ANR	5051061	Identifier	val		5050896	1					
ANR	5051062	Argument	packbytes		5050896	2					
ANR	5051063	Identifier	packbytes		5050896	0					
ANR	5051064	ReturnStatement	return true ;	290:2:7955:7966	5050896	2	True				
ANR	5051065	Identifier	true		5050896	0					
ANR	5051066	Statement	eprintf	292:1:7972:7978	5050896	9	True				
ANR	5051067	Statement	(	292:9:7980:7980	5050896	10	True				
ANR	5051068	Statement	"""r_reg_set_value: Cannot set %s to 0x%"""	292:10:7981:8019	5050896	11	True				
ANR	5051069	Statement	PFMT64x	292:50:8021:8027	5050896	12	True				
ANR	5051070	Statement	"""\\n"""	292:58:8029:8032	5050896	13	True				
ANR	5051071	Statement	","	292:62:8033:8033	5050896	14	True				
ANR	5051072	Statement	item	292:64:8035:8038	5050896	15	True				
ANR	5051073	Statement	->	292:68:8039:8040	5050896	16	True				
ANR	5051074	Statement	name	292:70:8041:8044	5050896	17	True				
ANR	5051075	Statement	","	292:74:8045:8045	5050896	18	True				
ANR	5051076	Statement	val	292:76:8047:8049	5050896	19	True				
ANR	5051077	Statement	)	292:79:8050:8050	5050896	20	True				
ANR	5051078	ExpressionStatement		292:80:8051:8051	5050896	21	True				
ANR	5051079	ReturnStatement	return false ;	293:1:8054:8066	5050896	22	True				
ANR	5051080	Identifier	false		5050896	0					
ANR	5051081	ReturnType	R_API int		5050896	1					
ANR	5051082	Identifier	r_reg_set_pack		5050896	2					
ANR	5051083	ParameterList	"RReg * reg , RRegItem * item , int packidx , int packbits , ut64 val"		5050896	3					
ANR	5051084	Parameter	RReg * reg	267:25:7237:7245	5050896	0	True				
ANR	5051085	ParameterType	RReg *		5050896	0					
ANR	5051086	Identifier	reg		5050896	1					
ANR	5051087	Parameter	RRegItem * item	267:36:7248:7261	5050896	1	True				
ANR	5051088	ParameterType	RRegItem *		5050896	0					
ANR	5051089	Identifier	item		5050896	1					
ANR	5051090	Parameter	int packidx	267:52:7264:7274	5050896	2	True				
ANR	5051091	ParameterType	int		5050896	0					
ANR	5051092	Identifier	packidx		5050896	1					
ANR	5051093	Parameter	int packbits	267:65:7277:7288	5050896	3	True				
ANR	5051094	ParameterType	int		5050896	0					
ANR	5051095	Identifier	packbits		5050896	1					
ANR	5051096	Parameter	ut64 val	267:79:7291:7298	5050896	4	True				
ANR	5051097	ParameterType	ut64		5050896	0					
ANR	5051098	Identifier	val		5050896	1					
ANR	5051099	CFGEntryNode	ENTRY		5050896		True				
ANR	5051100	CFGExitNode	EXIT		5050896		True				
ANR	5051101	Symbol	& val		5050896						
ANR	5051102	Symbol	* * item -> arena		5050896						
ANR	5051103	Symbol	dst		5050896						
ANR	5051104	Symbol	* * * item		5050896						
ANR	5051105	Symbol	BITS2BYTES		5050896						
ANR	5051106	Symbol	reg -> regset [ item -> arena ] . arena -> bytes		5050896						
ANR	5051107	Symbol	packbytes		5050896						
ANR	5051108	Symbol	reg -> regset [ item -> arena ] . arena		5050896						
ANR	5051109	Symbol	item -> arena		5050896						
ANR	5051110	Symbol	* item -> arena		5050896						
ANR	5051111	Symbol	reg -> regset		5050896						
ANR	5051112	Symbol	* * * reg		5050896						
ANR	5051113	Symbol	reg		5050896						
ANR	5051114	Symbol	* item		5050896						
ANR	5051115	Symbol	reg -> regset -> arena		5050896						
ANR	5051116	Symbol	packbits		5050896						
ANR	5051117	Symbol	* reg -> regset [ item -> arena ] . arena		5050896						
ANR	5051118	Symbol	item -> offset		5050896						
ANR	5051119	Symbol	val		5050896						
ANR	5051120	Symbol	packidx		5050896						
ANR	5051121	Symbol	item		5050896						
ANR	5051122	Symbol	* reg -> regset		5050896						
ANR	5051123	Symbol	reg -> regset [ item -> arena ] . arena -> size		5050896						
ANR	5051124	Symbol	* * item		5050896						
ANR	5051125	Symbol	false		5050896						
ANR	5051126	Symbol	* * reg		5050896						
ANR	5051127	Symbol	packmod		5050896						
ANR	5051128	Symbol	off		5050896						
ANR	5051129	Symbol	item -> packed_size		5050896						
ANR	5051130	Symbol	* * reg -> regset		5050896						
ANR	5051131	Symbol	true		5050896						
ANR	5051132	Symbol	item -> size		5050896						
ANR	5051133	Symbol	* reg		5050896						
