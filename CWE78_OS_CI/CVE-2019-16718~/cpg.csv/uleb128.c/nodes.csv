command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6375378	File	data/converged/CVE-2019-16718~_radare2/uleb128.c								
ANR	6375379	Function	r_uleb128	7:6:120:783							
ANR	6375380	FunctionDef	"r_uleb128 (const ut8 * data , int datalen , ut64 * v)"		6375379	0					
ANR	6375381	CompoundStatement		7:66:180:783	6375379	0					
ANR	6375382	IdentifierDeclStatement	ut8 c ;	8:1:183:188	6375379	0	True				
ANR	6375383	IdentifierDecl	c		6375379	0					
ANR	6375384	IdentifierDeclType	ut8		6375379	0					
ANR	6375385	Identifier	c		6375379	1					
ANR	6375386	IdentifierDeclStatement	"ut64 s , sum = 0 ;"	9:1:191:206	6375379	1	True				
ANR	6375387	IdentifierDecl	s		6375379	0					
ANR	6375388	IdentifierDeclType	ut64		6375379	0					
ANR	6375389	Identifier	s		6375379	1					
ANR	6375390	IdentifierDecl	sum = 0		6375379	1					
ANR	6375391	IdentifierDeclType	ut64		6375379	0					
ANR	6375392	Identifier	sum		6375379	1					
ANR	6375393	AssignmentExpression	sum = 0		6375379	2		=			
ANR	6375394	Identifier	sum		6375379	0					
ANR	6375395	PrimaryExpression	0		6375379	1					
ANR	6375396	IdentifierDeclStatement	const ut8 * data_end ;	10:1:209:228	6375379	2	True				
ANR	6375397	IdentifierDecl	* data_end		6375379	0					
ANR	6375398	IdentifierDeclType	const ut8 *		6375379	0					
ANR	6375399	Identifier	data_end		6375379	1					
ANR	6375400	IfStatement	if ( v )		6375379	3					
ANR	6375401	Condition	v	11:5:235:235	6375379	0	True				
ANR	6375402	Identifier	v		6375379	0					
ANR	6375403	CompoundStatement		5:8:57:57	6375379	1					
ANR	6375404	Statement	*	12:2:242:242	6375379	0	True				
ANR	6375405	Statement	v	12:3:243:243	6375379	1	True				
ANR	6375406	Statement	=	12:5:245:245	6375379	2	True				
ANR	6375407	Statement	0L	12:7:247:248	6375379	3	True				
ANR	6375408	ExpressionStatement	L	12:9:249:250	6375379	4	True				
ANR	6375409	Identifier	L		6375379	0					
ANR	6375410	IfStatement	if ( datalen == ST32_MAX )		6375379	4					
ANR	6375411	Condition	datalen == ST32_MAX	14:5:260:278	6375379	0	True				
ANR	6375412	EqualityExpression	datalen == ST32_MAX		6375379	0		==			
ANR	6375413	Identifier	datalen		6375379	0					
ANR	6375414	Identifier	ST32_MAX		6375379	1					
ANR	6375415	CompoundStatement		8:26:100:100	6375379	1					
ANR	6375416	ExpressionStatement	datalen = 0xffff	16:2:317:333	6375379	0	True				
ANR	6375417	AssignmentExpression	datalen = 0xffff		6375379	0		=			
ANR	6375418	Identifier	datalen		6375379	0					
ANR	6375419	PrimaryExpression	0xffff		6375379	1					
ANR	6375420	IfStatement	if ( datalen < 0 )		6375379	5					
ANR	6375421	Condition	datalen < 0	18:5:343:353	6375379	0	True				
ANR	6375422	RelationalExpression	datalen < 0		6375379	0		<			
ANR	6375423	Identifier	datalen		6375379	0					
ANR	6375424	PrimaryExpression	0		6375379	1					
ANR	6375425	CompoundStatement		12:18:175:175	6375379	1					
ANR	6375426	ReturnStatement	return NULL ;	19:2:360:371	6375379	0	True				
ANR	6375427	Identifier	NULL		6375379	0					
ANR	6375428	ExpressionStatement	data_end = data + datalen	21:1:377:402	6375379	6	True				
ANR	6375429	AssignmentExpression	data_end = data + datalen		6375379	0		=			
ANR	6375430	Identifier	data_end		6375379	0					
ANR	6375431	AdditiveExpression	data + datalen		6375379	1		+			
ANR	6375432	Identifier	data		6375379	0					
ANR	6375433	Identifier	datalen		6375379	1					
ANR	6375434	IfStatement	if ( data && datalen > 0 )		6375379	7					
ANR	6375435	Condition	data && datalen > 0	22:5:409:427	6375379	0	True				
ANR	6375436	AndExpression	data && datalen > 0		6375379	0		&&			
ANR	6375437	Identifier	data		6375379	0					
ANR	6375438	RelationalExpression	datalen > 0		6375379	1		>			
ANR	6375439	Identifier	datalen		6375379	0					
ANR	6375440	PrimaryExpression	0		6375379	1					
ANR	6375441	CompoundStatement		16:26:249:249	6375379	1					
ANR	6375442	IfStatement	if ( * data )		6375379	0					
ANR	6375443	Condition	* data	23:6:438:442	6375379	0	True				
ANR	6375444	UnaryOperationExpression	* data		6375379	0					
ANR	6375445	UnaryOperator	*		6375379	0					
ANR	6375446	Identifier	data		6375379	1					
ANR	6375447	CompoundStatement		17:13:264:264	6375379	1					
ANR	6375448	ForStatement	for ( s = 0 ; data < data_end ; s += 7 )		6375379	0					
ANR	6375449	ForInit	s = 0 ;	24:8:455:460	6375379	0	True				
ANR	6375450	AssignmentExpression	s = 0		6375379	0		=			
ANR	6375451	Identifier	s		6375379	0					
ANR	6375452	PrimaryExpression	0		6375379	1					
ANR	6375453	Condition	data < data_end	24:15:462:476	6375379	1	True				
ANR	6375454	RelationalExpression	data < data_end		6375379	0		<			
ANR	6375455	Identifier	data		6375379	0					
ANR	6375456	Identifier	data_end		6375379	1					
ANR	6375457	AssignmentExpression	s += 7	24:32:479:484	6375379	2	True	+=			
ANR	6375458	Identifier	s		6375379	0					
ANR	6375459	PrimaryExpression	7		6375379	1					
ANR	6375460	CompoundStatement		18:40:306:306	6375379	3					
ANR	6375461	ExpressionStatement	c = * ( data ++ ) & 0xff	25:4:493:513	6375379	0	True				
ANR	6375462	AssignmentExpression	c = * ( data ++ ) & 0xff		6375379	0		=			
ANR	6375463	Identifier	c		6375379	0					
ANR	6375464	BitAndExpression	* ( data ++ ) & 0xff		6375379	1		&			
ANR	6375465	UnaryOperationExpression	* ( data ++ )		6375379	0					
ANR	6375466	UnaryOperator	*		6375379	0					
ANR	6375467	PostIncDecOperationExpression	data ++		6375379	1					
ANR	6375468	Identifier	data		6375379	0					
ANR	6375469	IncDec	++		6375379	1					
ANR	6375470	PrimaryExpression	0xff		6375379	1					
ANR	6375471	IfStatement	if ( s > 63 )		6375379	1					
ANR	6375472	Condition	s > 63	26:8:523:528	6375379	0	True				
ANR	6375473	RelationalExpression	s > 63		6375379	0		>			
ANR	6375474	Identifier	s		6375379	0					
ANR	6375475	PrimaryExpression	63		6375379	1					
ANR	6375476	CompoundStatement		20:16:350:350	6375379	1					
ANR	6375477	ExpressionStatement	"eprintf ( ""r_uleb128: undefined behaviour in %d shift on ut32\\n"" , ( int ) s )"	27:5:538:610	6375379	0	True				
ANR	6375478	CallExpression	"eprintf ( ""r_uleb128: undefined behaviour in %d shift on ut32\\n"" , ( int ) s )"		6375379	0					
ANR	6375479	Callee	eprintf		6375379	0					
ANR	6375480	Identifier	eprintf		6375379	0					
ANR	6375481	ArgumentList	"""r_uleb128: undefined behaviour in %d shift on ut32\\n"""		6375379	1					
ANR	6375482	Argument	"""r_uleb128: undefined behaviour in %d shift on ut32\\n"""		6375379	0					
ANR	6375483	PrimaryExpression	"""r_uleb128: undefined behaviour in %d shift on ut32\\n"""		6375379	0					
ANR	6375484	Argument	( int ) s		6375379	1					
ANR	6375485	CastExpression	( int ) s		6375379	0					
ANR	6375486	CastTarget	int		6375379	0					
ANR	6375487	Identifier	s		6375379	1					
ANR	6375488	ElseStatement	else		6375379	0					
ANR	6375489	CompoundStatement		22:11:442:442	6375379	0					
ANR	6375490	ExpressionStatement	sum |= ( ( ut64 ) ( c & 0x7f ) << s )	29:5:630:661	6375379	0	True				
ANR	6375491	AssignmentExpression	sum |= ( ( ut64 ) ( c & 0x7f ) << s )		6375379	0		|=			
ANR	6375492	Identifier	sum		6375379	0					
ANR	6375493	ShiftExpression	( ut64 ) ( c & 0x7f ) << s		6375379	1		<<			
ANR	6375494	CastExpression	( ut64 ) ( c & 0x7f )		6375379	0					
ANR	6375495	CastTarget	ut64		6375379	0					
ANR	6375496	BitAndExpression	c & 0x7f		6375379	1		&			
ANR	6375497	Identifier	c		6375379	0					
ANR	6375498	PrimaryExpression	0x7f		6375379	1					
ANR	6375499	Identifier	s		6375379	1					
ANR	6375500	IfStatement	if ( ! ( c & 0x80 ) )		6375379	2					
ANR	6375501	Condition	! ( c & 0x80 )	31:8:677:687	6375379	0	True				
ANR	6375502	UnaryOperationExpression	! ( c & 0x80 )		6375379	0					
ANR	6375503	UnaryOperator	!		6375379	0					
ANR	6375504	BitAndExpression	c & 0x80		6375379	1		&			
ANR	6375505	Identifier	c		6375379	0					
ANR	6375506	PrimaryExpression	0x80		6375379	1					
ANR	6375507	CompoundStatement		25:21:509:509	6375379	1					
ANR	6375508	BreakStatement	break ;	32:5:697:702	6375379	0	True				
ANR	6375509	ElseStatement	else		6375379	0					
ANR	6375510	CompoundStatement		29:9:543:543	6375379	0					
ANR	6375511	ExpressionStatement	data ++	36:3:729:735	6375379	0	True				
ANR	6375512	PostIncDecOperationExpression	data ++		6375379	0					
ANR	6375513	Identifier	data		6375379	0					
ANR	6375514	IncDec	++		6375379	1					
ANR	6375515	IfStatement	if ( v )		6375379	8					
ANR	6375516	Condition	v	39:5:749:749	6375379	0	True				
ANR	6375517	Identifier	v		6375379	0					
ANR	6375518	CompoundStatement		33:8:571:571	6375379	1					
ANR	6375519	ExpressionStatement	* v = sum	40:2:756:764	6375379	0	True				
ANR	6375520	AssignmentExpression	* v = sum		6375379	0		=			
ANR	6375521	UnaryOperationExpression	* v		6375379	0					
ANR	6375522	UnaryOperator	*		6375379	0					
ANR	6375523	Identifier	v		6375379	1					
ANR	6375524	Identifier	sum		6375379	1					
ANR	6375525	ReturnStatement	return data ;	42:1:770:781	6375379	9	True				
ANR	6375526	Identifier	data		6375379	0					
ANR	6375527	ReturnType	const ut8 *		6375379	1					
ANR	6375528	Identifier	r_uleb128		6375379	2					
ANR	6375529	ParameterList	"const ut8 * data , int datalen , ut64 * v"		6375379	3					
ANR	6375530	Parameter	const ut8 * data	7:27:141:155	6375379	0	True				
ANR	6375531	ParameterType	const ut8 *		6375379	0					
ANR	6375532	Identifier	data		6375379	1					
ANR	6375533	Parameter	int datalen	7:44:158:168	6375379	1	True				
ANR	6375534	ParameterType	int		6375379	0					
ANR	6375535	Identifier	datalen		6375379	1					
ANR	6375536	Parameter	ut64 * v	7:57:171:177	6375379	2	True				
ANR	6375537	ParameterType	ut64 *		6375379	0					
ANR	6375538	Identifier	v		6375379	1					
ANR	6375539	CFGEntryNode	ENTRY		6375379		True				
ANR	6375540	CFGExitNode	EXIT		6375379		True				
ANR	6375541	Symbol	* v		6375379						
ANR	6375542	Symbol	data_end		6375379						
ANR	6375543	Symbol	c		6375379						
ANR	6375544	Symbol	s		6375379						
ANR	6375545	Symbol	NULL		6375379						
ANR	6375546	Symbol	data		6375379						
ANR	6375547	Symbol	ST32_MAX		6375379						
ANR	6375548	Symbol	v		6375379						
ANR	6375549	Symbol	sum		6375379						
ANR	6375550	Symbol	* ( data ++ )		6375379						
ANR	6375551	Symbol	* data		6375379						
ANR	6375552	Symbol	datalen		6375379						
ANR	6375553	Function	r_uleb128_decode	49:6:1001:1290							
ANR	6375554	FunctionDef	"r_uleb128_decode (const ut8 * data , int * datalen , ut64 * v)"		6375553	0					
ANR	6375555	CompoundStatement		49:74:1069:1290	6375553	0					
ANR	6375556	IdentifierDeclStatement	ut8 c = 0xff ;	50:1:1072:1084	6375553	0	True				
ANR	6375557	IdentifierDecl	c = 0xff		6375553	0					
ANR	6375558	IdentifierDeclType	ut8		6375553	0					
ANR	6375559	Identifier	c		6375553	1					
ANR	6375560	AssignmentExpression	c = 0xff		6375553	2		=			
ANR	6375561	Identifier	c		6375553	0					
ANR	6375562	PrimaryExpression	0xff		6375553	1					
ANR	6375563	IdentifierDeclStatement	"ut64 s = 0 , sum = 0 , l = 0 ;"	51:1:1087:1113	6375553	1	True				
ANR	6375564	IdentifierDecl	s = 0		6375553	0					
ANR	6375565	IdentifierDeclType	ut64		6375553	0					
ANR	6375566	Identifier	s		6375553	1					
ANR	6375567	AssignmentExpression	s = 0		6375553	2		=			
ANR	6375568	Identifier	s		6375553	0					
ANR	6375569	PrimaryExpression	0		6375553	1					
ANR	6375570	IdentifierDecl	sum = 0		6375553	1					
ANR	6375571	IdentifierDeclType	ut64		6375553	0					
ANR	6375572	Identifier	sum		6375553	1					
ANR	6375573	AssignmentExpression	sum = 0		6375553	2		=			
ANR	6375574	Identifier	sum		6375553	0					
ANR	6375575	PrimaryExpression	0		6375553	1					
ANR	6375576	IdentifierDecl	l = 0		6375553	2					
ANR	6375577	IdentifierDeclType	ut64		6375553	0					
ANR	6375578	Identifier	l		6375553	1					
ANR	6375579	AssignmentExpression	l = 0		6375553	2		=			
ANR	6375580	Identifier	l		6375553	0					
ANR	6375581	PrimaryExpression	0		6375553	1					
ANR	6375582	DoStatement	do		6375553	2					
ANR	6375583	CompoundStatement		4:4:49:49	6375553	0					
ANR	6375584	ExpressionStatement	c = * ( data ++ ) & 0xff	53:2:1123:1143	6375553	0	True				
ANR	6375585	AssignmentExpression	c = * ( data ++ ) & 0xff		6375553	0		=			
ANR	6375586	Identifier	c		6375553	0					
ANR	6375587	BitAndExpression	* ( data ++ ) & 0xff		6375553	1		&			
ANR	6375588	UnaryOperationExpression	* ( data ++ )		6375553	0					
ANR	6375589	UnaryOperator	*		6375553	0					
ANR	6375590	PostIncDecOperationExpression	data ++		6375553	1					
ANR	6375591	Identifier	data		6375553	0					
ANR	6375592	IncDec	++		6375553	1					
ANR	6375593	PrimaryExpression	0xff		6375553	1					
ANR	6375594	ExpressionStatement	sum |= ( ( ut64 ) ( c & 0x7f ) << s )	54:2:1147:1176	6375553	1	True				
ANR	6375595	AssignmentExpression	sum |= ( ( ut64 ) ( c & 0x7f ) << s )		6375553	0		|=			
ANR	6375596	Identifier	sum		6375553	0					
ANR	6375597	ShiftExpression	( ut64 ) ( c & 0x7f ) << s		6375553	1		<<			
ANR	6375598	CastExpression	( ut64 ) ( c & 0x7f )		6375553	0					
ANR	6375599	CastTarget	ut64		6375553	0					
ANR	6375600	BitAndExpression	c & 0x7f		6375553	1		&			
ANR	6375601	Identifier	c		6375553	0					
ANR	6375602	PrimaryExpression	0x7f		6375553	1					
ANR	6375603	Identifier	s		6375553	1					
ANR	6375604	ExpressionStatement	s += 7	55:2:1180:1186	6375553	2	True				
ANR	6375605	AssignmentExpression	s += 7		6375553	0		+=			
ANR	6375606	Identifier	s		6375553	0					
ANR	6375607	PrimaryExpression	7		6375553	1					
ANR	6375608	ExpressionStatement	l ++	56:2:1190:1193	6375553	3	True				
ANR	6375609	PostIncDecOperationExpression	l ++		6375553	0					
ANR	6375610	Identifier	l		6375553	0					
ANR	6375611	IncDec	++		6375553	1					
ANR	6375612	Condition	c & 0x80	57:10:1205:1212	6375553	1	True				
ANR	6375613	BitAndExpression	c & 0x80		6375553	0		&			
ANR	6375614	Identifier	c		6375553	0					
ANR	6375615	PrimaryExpression	0x80		6375553	1					
ANR	6375616	IfStatement	if ( v )		6375553	3					
ANR	6375617	Condition	v	58:5:1221:1221	6375553	0	True				
ANR	6375618	Identifier	v		6375553	0					
ANR	6375619	CompoundStatement		10:8:154:154	6375553	1					
ANR	6375620	ExpressionStatement	* v = sum	59:2:1228:1236	6375553	0	True				
ANR	6375621	AssignmentExpression	* v = sum		6375553	0		=			
ANR	6375622	UnaryOperationExpression	* v		6375553	0					
ANR	6375623	UnaryOperator	*		6375553	0					
ANR	6375624	Identifier	v		6375553	1					
ANR	6375625	Identifier	sum		6375553	1					
ANR	6375626	IfStatement	if ( datalen )		6375553	4					
ANR	6375627	Condition	datalen	61:5:1246:1252	6375553	0	True				
ANR	6375628	Identifier	datalen		6375553	0					
ANR	6375629	CompoundStatement		13:14:185:185	6375553	1					
ANR	6375630	ExpressionStatement	* datalen = l	62:2:1259:1271	6375553	0	True				
ANR	6375631	AssignmentExpression	* datalen = l		6375553	0		=			
ANR	6375632	UnaryOperationExpression	* datalen		6375553	0					
ANR	6375633	UnaryOperator	*		6375553	0					
ANR	6375634	Identifier	datalen		6375553	1					
ANR	6375635	Identifier	l		6375553	1					
ANR	6375636	ReturnStatement	return data ;	64:1:1277:1288	6375553	5	True				
ANR	6375637	Identifier	data		6375553	0					
ANR	6375638	ReturnType	const ut8 *		6375553	1					
ANR	6375639	Identifier	r_uleb128_decode		6375553	2					
ANR	6375640	ParameterList	"const ut8 * data , int * datalen , ut64 * v"		6375553	3					
ANR	6375641	Parameter	const ut8 * data	49:34:1029:1043	6375553	0	True				
ANR	6375642	ParameterType	const ut8 *		6375553	0					
ANR	6375643	Identifier	data		6375553	1					
ANR	6375644	Parameter	int * datalen	49:51:1046:1057	6375553	1	True				
ANR	6375645	ParameterType	int *		6375553	0					
ANR	6375646	Identifier	datalen		6375553	1					
ANR	6375647	Parameter	ut64 * v	49:65:1060:1066	6375553	2	True				
ANR	6375648	ParameterType	ut64 *		6375553	0					
ANR	6375649	Identifier	v		6375553	1					
ANR	6375650	CFGEntryNode	ENTRY		6375553		True				
ANR	6375651	CFGExitNode	EXIT		6375553		True				
ANR	6375652	Symbol	* v		6375553						
ANR	6375653	Symbol	* datalen		6375553						
ANR	6375654	Symbol	c		6375553						
ANR	6375655	Symbol	s		6375553						
ANR	6375656	Symbol	data		6375553						
ANR	6375657	Symbol	v		6375553						
ANR	6375658	Symbol	sum		6375553						
ANR	6375659	Symbol	* ( data ++ )		6375553						
ANR	6375660	Symbol	l		6375553						
ANR	6375661	Symbol	datalen		6375553						
ANR	6375662	Function	r_uleb128_encode	67:0:1293:1764							
ANR	6375663	FunctionDef	"r_uleb128_encode (const ut64 s , int * len)"		6375662	0					
ANR	6375664	CompoundStatement		67:52:1345:1764	6375662	0					
ANR	6375665	IdentifierDeclStatement	ut8 c = 0 ;	68:1:1348:1357	6375662	0	True				
ANR	6375666	IdentifierDecl	c = 0		6375662	0					
ANR	6375667	IdentifierDeclType	ut8		6375662	0					
ANR	6375668	Identifier	c		6375662	1					
ANR	6375669	AssignmentExpression	c = 0		6375662	2		=			
ANR	6375670	Identifier	c		6375662	0					
ANR	6375671	PrimaryExpression	0		6375662	1					
ANR	6375672	IdentifierDeclStatement	int l = 0 ;	69:1:1360:1369	6375662	1	True				
ANR	6375673	IdentifierDecl	l = 0		6375662	0					
ANR	6375674	IdentifierDeclType	int		6375662	0					
ANR	6375675	Identifier	l		6375662	1					
ANR	6375676	AssignmentExpression	l = 0		6375662	2		=			
ANR	6375677	Identifier	l		6375662	0					
ANR	6375678	PrimaryExpression	0		6375662	1					
ANR	6375679	IdentifierDeclStatement	"ut8 * otarget = NULL , * target = NULL , * tmptarget = NULL ;"	70:1:1372:1426	6375662	2	True				
ANR	6375680	IdentifierDecl	* otarget = NULL		6375662	0					
ANR	6375681	IdentifierDeclType	ut8 *		6375662	0					
ANR	6375682	Identifier	otarget		6375662	1					
ANR	6375683	AssignmentExpression	* otarget = NULL		6375662	2		=			
ANR	6375684	Identifier	NULL		6375662	0					
ANR	6375685	Identifier	NULL		6375662	1					
ANR	6375686	IdentifierDecl	* target = NULL		6375662	1					
ANR	6375687	IdentifierDeclType	ut8 *		6375662	0					
ANR	6375688	Identifier	target		6375662	1					
ANR	6375689	AssignmentExpression	* target = NULL		6375662	2		=			
ANR	6375690	Identifier	NULL		6375662	0					
ANR	6375691	Identifier	NULL		6375662	1					
ANR	6375692	IdentifierDecl	* tmptarget = NULL		6375662	2					
ANR	6375693	IdentifierDeclType	ut8 *		6375662	0					
ANR	6375694	Identifier	tmptarget		6375662	1					
ANR	6375695	AssignmentExpression	* tmptarget = NULL		6375662	2		=			
ANR	6375696	Identifier	NULL		6375662	0					
ANR	6375697	Identifier	NULL		6375662	1					
ANR	6375698	IdentifierDeclStatement	ut64 source = s ;	71:1:1429:1444	6375662	3	True				
ANR	6375699	IdentifierDecl	source = s		6375662	0					
ANR	6375700	IdentifierDeclType	ut64		6375662	0					
ANR	6375701	Identifier	source		6375662	1					
ANR	6375702	AssignmentExpression	source = s		6375662	2		=			
ANR	6375703	Identifier	s		6375662	0					
ANR	6375704	Identifier	s		6375662	1					
ANR	6375705	DoStatement	do		6375662	4					
ANR	6375706	CompoundStatement		6:4:104:104	6375662	0					
ANR	6375707	ExpressionStatement	l ++	73:2:1454:1457	6375662	0	True				
ANR	6375708	PostIncDecOperationExpression	l ++		6375662	0					
ANR	6375709	Identifier	l		6375662	0					
ANR	6375710	IncDec	++		6375662	1					
ANR	6375711	IfStatement	"if ( ! ( tmptarget = realloc ( otarget , l ) ) )"		6375662	1					
ANR	6375712	Condition	"! ( tmptarget = realloc ( otarget , l ) )"	74:6:1465:1499	6375662	0	True				
ANR	6375713	UnaryOperationExpression	"! ( tmptarget = realloc ( otarget , l ) )"		6375662	0					
ANR	6375714	UnaryOperator	!		6375662	0					
ANR	6375715	AssignmentExpression	"tmptarget = realloc ( otarget , l )"		6375662	1		=			
ANR	6375716	Identifier	tmptarget		6375662	0					
ANR	6375717	CallExpression	"realloc ( otarget , l )"		6375662	1					
ANR	6375718	Callee	realloc		6375662	0					
ANR	6375719	Identifier	realloc		6375662	0					
ANR	6375720	ArgumentList	otarget		6375662	1					
ANR	6375721	Argument	otarget		6375662	0					
ANR	6375722	Identifier	otarget		6375662	0					
ANR	6375723	Argument	l		6375662	1					
ANR	6375724	Identifier	l		6375662	0					
ANR	6375725	CompoundStatement		8:43:156:156	6375662	1					
ANR	6375726	ExpressionStatement	l = 0	75:3:1507:1512	6375662	0	True				
ANR	6375727	AssignmentExpression	l = 0		6375662	0		=			
ANR	6375728	Identifier	l		6375662	0					
ANR	6375729	PrimaryExpression	0		6375662	1					
ANR	6375730	ExpressionStatement	free ( otarget )	76:3:1517:1531	6375662	1	True				
ANR	6375731	CallExpression	free ( otarget )		6375662	0					
ANR	6375732	Callee	free		6375662	0					
ANR	6375733	Identifier	free		6375662	0					
ANR	6375734	ArgumentList	otarget		6375662	1					
ANR	6375735	Argument	otarget		6375662	0					
ANR	6375736	Identifier	otarget		6375662	0					
ANR	6375737	ExpressionStatement	otarget = NULL	77:3:1536:1550	6375662	2	True				
ANR	6375738	AssignmentExpression	otarget = NULL		6375662	0		=			
ANR	6375739	Identifier	otarget		6375662	0					
ANR	6375740	Identifier	NULL		6375662	1					
ANR	6375741	BreakStatement	break ;	78:3:1555:1560	6375662	3	True				
ANR	6375742	ExpressionStatement	otarget = tmptarget	80:2:1568:1587	6375662	2	True				
ANR	6375743	AssignmentExpression	otarget = tmptarget		6375662	0		=			
ANR	6375744	Identifier	otarget		6375662	0					
ANR	6375745	Identifier	tmptarget		6375662	1					
ANR	6375746	ExpressionStatement	target = otarget + l - 1	81:2:1591:1611	6375662	3	True				
ANR	6375747	AssignmentExpression	target = otarget + l - 1		6375662	0		=			
ANR	6375748	Identifier	target		6375662	0					
ANR	6375749	AdditiveExpression	otarget + l - 1		6375662	1		+			
ANR	6375750	Identifier	otarget		6375662	0					
ANR	6375751	AdditiveExpression	l - 1		6375662	1		-			
ANR	6375752	Identifier	l		6375662	0					
ANR	6375753	PrimaryExpression	1		6375662	1					
ANR	6375754	ExpressionStatement	c = source & 0x7f	82:2:1615:1632	6375662	4	True				
ANR	6375755	AssignmentExpression	c = source & 0x7f		6375662	0		=			
ANR	6375756	Identifier	c		6375662	0					
ANR	6375757	BitAndExpression	source & 0x7f		6375662	1		&			
ANR	6375758	Identifier	source		6375662	0					
ANR	6375759	PrimaryExpression	0x7f		6375662	1					
ANR	6375760	ExpressionStatement	source >>= 7	83:2:1636:1648	6375662	5	True				
ANR	6375761	AssignmentExpression	source >>= 7		6375662	0		>>=			
ANR	6375762	Identifier	source		6375662	0					
ANR	6375763	PrimaryExpression	7		6375662	1					
ANR	6375764	IfStatement	if ( source )		6375662	6					
ANR	6375765	Condition	source	84:6:1656:1661	6375662	0	True				
ANR	6375766	Identifier	source		6375662	0					
ANR	6375767	CompoundStatement		18:14:318:318	6375662	1					
ANR	6375768	ExpressionStatement	c |= 0x80	85:3:1669:1678	6375662	0	True				
ANR	6375769	AssignmentExpression	c |= 0x80		6375662	0		|=			
ANR	6375770	Identifier	c		6375662	0					
ANR	6375771	PrimaryExpression	0x80		6375662	1					
ANR	6375772	ExpressionStatement	* ( target ) = c	87:2:1686:1699	6375662	7	True				
ANR	6375773	AssignmentExpression	* ( target ) = c		6375662	0		=			
ANR	6375774	UnaryOperationExpression	* ( target )		6375662	0					
ANR	6375775	UnaryOperator	*		6375662	0					
ANR	6375776	Identifier	target		6375662	1					
ANR	6375777	Identifier	c		6375662	1					
ANR	6375778	Condition	source	88:10:1711:1716	6375662	1	True				
ANR	6375779	Identifier	source		6375662	0					
ANR	6375780	IfStatement	if ( len )		6375662	5					
ANR	6375781	Condition	len	89:5:1725:1727	6375662	0	True				
ANR	6375782	Identifier	len		6375662	0					
ANR	6375783	CompoundStatement		23:10:384:384	6375662	1					
ANR	6375784	ExpressionStatement	* len = l	90:2:1734:1742	6375662	0	True				
ANR	6375785	AssignmentExpression	* len = l		6375662	0		=			
ANR	6375786	UnaryOperationExpression	* len		6375662	0					
ANR	6375787	UnaryOperator	*		6375662	0					
ANR	6375788	Identifier	len		6375662	1					
ANR	6375789	Identifier	l		6375662	1					
ANR	6375790	ReturnStatement	return otarget ;	92:1:1748:1762	6375662	6	True				
ANR	6375791	Identifier	otarget		6375662	0					
ANR	6375792	ReturnType	R_API ut8 *		6375662	1					
ANR	6375793	Identifier	r_uleb128_encode		6375662	2					
ANR	6375794	ParameterList	"const ut64 s , int * len"		6375662	3					
ANR	6375795	Parameter	const ut64 s	67:28:1321:1332	6375662	0	True				
ANR	6375796	ParameterType	const ut64		6375662	0					
ANR	6375797	Identifier	s		6375662	1					
ANR	6375798	Parameter	int * len	67:42:1335:1342	6375662	1	True				
ANR	6375799	ParameterType	int *		6375662	0					
ANR	6375800	Identifier	len		6375662	1					
ANR	6375801	CFGEntryNode	ENTRY		6375662		True				
ANR	6375802	CFGExitNode	EXIT		6375662		True				
ANR	6375803	Symbol	c		6375662						
ANR	6375804	Symbol	NULL		6375662						
ANR	6375805	Symbol	* ( target )		6375662						
ANR	6375806	Symbol	source		6375662						
ANR	6375807	Symbol	realloc		6375662						
ANR	6375808	Symbol	l		6375662						
ANR	6375809	Symbol	target		6375662						
ANR	6375810	Symbol	* target		6375662						
ANR	6375811	Symbol	otarget		6375662						
ANR	6375812	Symbol	tmptarget		6375662						
ANR	6375813	Symbol	s		6375662						
ANR	6375814	Symbol	len		6375662						
ANR	6375815	Symbol	* len		6375662						
ANR	6375816	Function	r_leb128	95:6:1773:2125							
ANR	6375817	FunctionDef	"r_leb128 (const ut8 * data , st64 * v)"		6375816	0					
ANR	6375818	CompoundStatement		95:52:1819:2125	6375816	0					
ANR	6375819	IdentifierDeclStatement	ut8 c = 0 ;	96:1:1822:1831	6375816	0	True				
ANR	6375820	IdentifierDecl	c = 0		6375816	0					
ANR	6375821	IdentifierDeclType	ut8		6375816	0					
ANR	6375822	Identifier	c		6375816	1					
ANR	6375823	AssignmentExpression	c = 0		6375816	2		=			
ANR	6375824	Identifier	c		6375816	0					
ANR	6375825	PrimaryExpression	0		6375816	1					
ANR	6375826	IdentifierDeclStatement	"st64 s = 0 , sum = 0 ;"	97:1:1834:1853	6375816	1	True				
ANR	6375827	IdentifierDecl	s = 0		6375816	0					
ANR	6375828	IdentifierDeclType	st64		6375816	0					
ANR	6375829	Identifier	s		6375816	1					
ANR	6375830	AssignmentExpression	s = 0		6375816	2		=			
ANR	6375831	Identifier	s		6375816	0					
ANR	6375832	PrimaryExpression	0		6375816	1					
ANR	6375833	IdentifierDecl	sum = 0		6375816	1					
ANR	6375834	IdentifierDeclType	st64		6375816	0					
ANR	6375835	Identifier	sum		6375816	1					
ANR	6375836	AssignmentExpression	sum = 0		6375816	2		=			
ANR	6375837	Identifier	sum		6375816	0					
ANR	6375838	PrimaryExpression	0		6375816	1					
ANR	6375839	IfStatement	if ( data )		6375816	2					
ANR	6375840	Condition	data	98:5:1860:1863	6375816	0	True				
ANR	6375841	Identifier	data		6375816	0					
ANR	6375842	CompoundStatement		4:11:46:46	6375816	1					
ANR	6375843	ForStatement	for ( s = 0 ; * data ; )		6375816	0					
ANR	6375844	ForInit	s = 0 ;	99:7:1875:1880	6375816	0	True				
ANR	6375845	AssignmentExpression	s = 0		6375816	0		=			
ANR	6375846	Identifier	s		6375816	0					
ANR	6375847	PrimaryExpression	0		6375816	1					
ANR	6375848	Condition	* data	99:14:1882:1886	6375816	1	True				
ANR	6375849	UnaryOperationExpression	* data		6375816	0					
ANR	6375850	UnaryOperator	*		6375816	0					
ANR	6375851	Identifier	data		6375816	1					
ANR	6375852	CompoundStatement		5:22:70:70	6375816	2					
ANR	6375853	ExpressionStatement	c = * ( data ++ ) & 0x0ff	100:3:1895:1916	6375816	0	True				
ANR	6375854	AssignmentExpression	c = * ( data ++ ) & 0x0ff		6375816	0		=			
ANR	6375855	Identifier	c		6375816	0					
ANR	6375856	BitAndExpression	* ( data ++ ) & 0x0ff		6375816	1		&			
ANR	6375857	UnaryOperationExpression	* ( data ++ )		6375816	0					
ANR	6375858	UnaryOperator	*		6375816	0					
ANR	6375859	PostIncDecOperationExpression	data ++		6375816	1					
ANR	6375860	Identifier	data		6375816	0					
ANR	6375861	IncDec	++		6375816	1					
ANR	6375862	PrimaryExpression	0x0ff		6375816	1					
ANR	6375863	ExpressionStatement	sum |= ( ( st64 ) ( c & 0x7f ) << s )	101:3:1921:1952	6375816	1	True				
ANR	6375864	AssignmentExpression	sum |= ( ( st64 ) ( c & 0x7f ) << s )		6375816	0		|=			
ANR	6375865	Identifier	sum		6375816	0					
ANR	6375866	ShiftExpression	( st64 ) ( c & 0x7f ) << s		6375816	1		<<			
ANR	6375867	CastExpression	( st64 ) ( c & 0x7f )		6375816	0					
ANR	6375868	CastTarget	st64		6375816	0					
ANR	6375869	BitAndExpression	c & 0x7f		6375816	1		&			
ANR	6375870	Identifier	c		6375816	0					
ANR	6375871	PrimaryExpression	0x7f		6375816	1					
ANR	6375872	Identifier	s		6375816	1					
ANR	6375873	ExpressionStatement	s += 7	102:3:1957:1963	6375816	2	True				
ANR	6375874	AssignmentExpression	s += 7		6375816	0		+=			
ANR	6375875	Identifier	s		6375816	0					
ANR	6375876	PrimaryExpression	7		6375816	1					
ANR	6375877	IfStatement	if ( ! ( c & 0x80 ) )		6375816	3					
ANR	6375878	Condition	! ( c & 0x80 )	103:7:1972:1982	6375816	0	True				
ANR	6375879	UnaryOperationExpression	! ( c & 0x80 )		6375816	0					
ANR	6375880	UnaryOperator	!		6375816	0					
ANR	6375881	BitAndExpression	c & 0x80		6375816	1		&			
ANR	6375882	Identifier	c		6375816	0					
ANR	6375883	PrimaryExpression	0x80		6375816	1					
ANR	6375884	CompoundStatement		9:20:165:165	6375816	1					
ANR	6375885	BreakStatement	break ;	104:4:1991:1996	6375816	0	True				
ANR	6375886	IfStatement	if ( ( s < ( 8 * sizeof ( sum ) ) ) && ( c & 0x40 ) )		6375816	3					
ANR	6375887	Condition	( s < ( 8 * sizeof ( sum ) ) ) && ( c & 0x40 )	108:5:2015:2052	6375816	0	True				
ANR	6375888	AndExpression	( s < ( 8 * sizeof ( sum ) ) ) && ( c & 0x40 )		6375816	0		&&			
ANR	6375889	RelationalExpression	s < ( 8 * sizeof ( sum ) )		6375816	0		<			
ANR	6375890	Identifier	s		6375816	0					
ANR	6375891	MultiplicativeExpression	8 * sizeof ( sum )		6375816	1		*			
ANR	6375892	PrimaryExpression	8		6375816	0					
ANR	6375893	SizeofExpression	sizeof ( sum )		6375816	1					
ANR	6375894	Sizeof	sizeof		6375816	0					
ANR	6375895	SizeofOperand	sum		6375816	1					
ANR	6375896	BitAndExpression	c & 0x40		6375816	1		&			
ANR	6375897	Identifier	c		6375816	0					
ANR	6375898	PrimaryExpression	0x40		6375816	1					
ANR	6375899	CompoundStatement		14:45:235:235	6375816	1					
ANR	6375900	ExpressionStatement	sum |= - ( ( st64 ) 1 << s )	109:2:2059:2081	6375816	0	True				
ANR	6375901	AssignmentExpression	sum |= - ( ( st64 ) 1 << s )		6375816	0		|=			
ANR	6375902	Identifier	sum		6375816	0					
ANR	6375903	UnaryOperationExpression	- ( ( st64 ) 1 << s )		6375816	1					
ANR	6375904	UnaryOperator	-		6375816	0					
ANR	6375905	ShiftExpression	( st64 ) 1 << s		6375816	1		<<			
ANR	6375906	CastExpression	( st64 ) 1		6375816	0					
ANR	6375907	CastTarget	st64		6375816	0					
ANR	6375908	PrimaryExpression	1		6375816	1					
ANR	6375909	Identifier	s		6375816	1					
ANR	6375910	IfStatement	if ( v )		6375816	4					
ANR	6375911	Condition	v	111:5:2091:2091	6375816	0	True				
ANR	6375912	Identifier	v		6375816	0					
ANR	6375913	CompoundStatement		17:8:274:274	6375816	1					
ANR	6375914	ExpressionStatement	* v = sum	112:2:2098:2106	6375816	0	True				
ANR	6375915	AssignmentExpression	* v = sum		6375816	0		=			
ANR	6375916	UnaryOperationExpression	* v		6375816	0					
ANR	6375917	UnaryOperator	*		6375816	0					
ANR	6375918	Identifier	v		6375816	1					
ANR	6375919	Identifier	sum		6375816	1					
ANR	6375920	ReturnStatement	return data ;	114:1:2112:2123	6375816	5	True				
ANR	6375921	Identifier	data		6375816	0					
ANR	6375922	ReturnType	const ut8 *		6375816	1					
ANR	6375923	Identifier	r_leb128		6375816	2					
ANR	6375924	ParameterList	"const ut8 * data , st64 * v"		6375816	3					
ANR	6375925	Parameter	const ut8 * data	95:26:1793:1807	6375816	0	True				
ANR	6375926	ParameterType	const ut8 *		6375816	0					
ANR	6375927	Identifier	data		6375816	1					
ANR	6375928	Parameter	st64 * v	95:43:1810:1816	6375816	1	True				
ANR	6375929	ParameterType	st64 *		6375816	0					
ANR	6375930	Identifier	v		6375816	1					
ANR	6375931	CFGEntryNode	ENTRY		6375816		True				
ANR	6375932	CFGExitNode	EXIT		6375816		True				
ANR	6375933	Symbol	* v		6375816						
ANR	6375934	Symbol	c		6375816						
ANR	6375935	Symbol	s		6375816						
ANR	6375936	Symbol	data		6375816						
ANR	6375937	Symbol	v		6375816						
ANR	6375938	Symbol	sum		6375816						
ANR	6375939	Symbol	* ( data ++ )		6375816						
ANR	6375940	Symbol	* data		6375816						
ANR	6375941	Function	r_sleb128	118:0:2129:2515							
ANR	6375942	FunctionDef	"r_sleb128 (const ut8 * * data , const ut8 * end)"		6375941	0					
ANR	6375943	CompoundStatement		118:55:2184:2515	6375941	0					
ANR	6375944	IdentifierDeclStatement	const ut8 * p = * data ;	119:1:2187:2207	6375941	0	True				
ANR	6375945	IdentifierDecl	* p = * data		6375941	0					
ANR	6375946	IdentifierDeclType	const ut8 *		6375941	0					
ANR	6375947	Identifier	p		6375941	1					
ANR	6375948	AssignmentExpression	* p = * data		6375941	2		=			
ANR	6375949	Identifier	p		6375941	0					
ANR	6375950	UnaryOperationExpression	* data		6375941	1					
ANR	6375951	UnaryOperator	*		6375941	0					
ANR	6375952	Identifier	data		6375941	1					
ANR	6375953	IdentifierDeclStatement	st64 result = 0 ;	120:1:2210:2225	6375941	1	True				
ANR	6375954	IdentifierDecl	result = 0		6375941	0					
ANR	6375955	IdentifierDeclType	st64		6375941	0					
ANR	6375956	Identifier	result		6375941	1					
ANR	6375957	AssignmentExpression	result = 0		6375941	2		=			
ANR	6375958	Identifier	result		6375941	0					
ANR	6375959	PrimaryExpression	0		6375941	1					
ANR	6375960	IdentifierDeclStatement	int offset = 0 ;	121:1:2228:2242	6375941	2	True				
ANR	6375961	IdentifierDecl	offset = 0		6375941	0					
ANR	6375962	IdentifierDeclType	int		6375941	0					
ANR	6375963	Identifier	offset		6375941	1					
ANR	6375964	AssignmentExpression	offset = 0		6375941	2		=			
ANR	6375965	Identifier	offset		6375941	0					
ANR	6375966	PrimaryExpression	0		6375941	1					
ANR	6375967	IdentifierDeclStatement	ut8 value ;	122:1:2245:2254	6375941	3	True				
ANR	6375968	IdentifierDecl	value		6375941	0					
ANR	6375969	IdentifierDeclType	ut8		6375941	0					
ANR	6375970	Identifier	value		6375941	1					
ANR	6375971	IdentifierDeclStatement	bool cond ;	123:1:2257:2266	6375941	4	True				
ANR	6375972	IdentifierDecl	cond		6375941	0					
ANR	6375973	IdentifierDeclType	bool		6375941	0					
ANR	6375974	Identifier	cond		6375941	1					
ANR	6375975	DoStatement	do		6375941	5					
ANR	6375976	CompoundStatement		8:2:91:101	6375941	0					
ANR	6375977	IdentifierDeclStatement	st64 chunk ;	125:2:2276:2286	6375941	0	True				
ANR	6375978	IdentifierDecl	chunk		6375941	0					
ANR	6375979	IdentifierDeclType	st64		6375941	0					
ANR	6375980	Identifier	chunk		6375941	1					
ANR	6375981	ExpressionStatement	value = * p	126:2:2290:2300	6375941	1	True				
ANR	6375982	AssignmentExpression	value = * p		6375941	0		=			
ANR	6375983	Identifier	value		6375941	0					
ANR	6375984	UnaryOperationExpression	* p		6375941	1					
ANR	6375985	UnaryOperator	*		6375941	0					
ANR	6375986	Identifier	p		6375941	1					
ANR	6375987	ExpressionStatement	chunk = value & 0x7f	127:2:2304:2324	6375941	2	True				
ANR	6375988	AssignmentExpression	chunk = value & 0x7f		6375941	0		=			
ANR	6375989	Identifier	chunk		6375941	0					
ANR	6375990	BitAndExpression	value & 0x7f		6375941	1		&			
ANR	6375991	Identifier	value		6375941	0					
ANR	6375992	PrimaryExpression	0x7f		6375941	1					
ANR	6375993	ExpressionStatement	result |= ( chunk << offset )	128:2:2328:2355	6375941	3	True				
ANR	6375994	AssignmentExpression	result |= ( chunk << offset )		6375941	0		|=			
ANR	6375995	Identifier	result		6375941	0					
ANR	6375996	ShiftExpression	chunk << offset		6375941	1		<<			
ANR	6375997	Identifier	chunk		6375941	0					
ANR	6375998	Identifier	offset		6375941	1					
ANR	6375999	ExpressionStatement	offset += 7	129:2:2359:2370	6375941	4	True				
ANR	6376000	AssignmentExpression	offset += 7		6375941	0		+=			
ANR	6376001	Identifier	offset		6375941	0					
ANR	6376002	PrimaryExpression	7		6375941	1					
ANR	6376003	Condition	"cond = * p & 0x80 && p + 1 < end , p ++ , cond"	130:10:2382:2423	6375941	1	True				
ANR	6376004	Expression	"cond = * p & 0x80 && p + 1 < end , p ++ , cond"		6375941	0					
ANR	6376005	AssignmentExpression	cond = * p & 0x80 && p + 1 < end		6375941	0		=			
ANR	6376006	Identifier	cond		6375941	0					
ANR	6376007	AndExpression	* p & 0x80 && p + 1 < end		6375941	1		&&			
ANR	6376008	BitAndExpression	* p & 0x80		6375941	0		&			
ANR	6376009	UnaryOperationExpression	* p		6375941	0					
ANR	6376010	UnaryOperator	*		6375941	0					
ANR	6376011	Identifier	p		6375941	1					
ANR	6376012	PrimaryExpression	0x80		6375941	1					
ANR	6376013	RelationalExpression	p + 1 < end		6375941	1		<			
ANR	6376014	AdditiveExpression	p + 1		6375941	0		+			
ANR	6376015	Identifier	p		6375941	0					
ANR	6376016	PrimaryExpression	1		6375941	1					
ANR	6376017	Identifier	end		6375941	1					
ANR	6376018	Expression	"p ++ , cond"		6375941	1					
ANR	6376019	PostIncDecOperationExpression	p ++		6375941	0					
ANR	6376020	Identifier	p		6375941	0					
ANR	6376021	IncDec	++		6375941	1					
ANR	6376022	Identifier	cond		6375941	1					
ANR	6376023	IfStatement	if ( ( value & 0x40 ) != 0 )		6375941	6					
ANR	6376024	Condition	( value & 0x40 ) != 0	132:5:2433:2451	6375941	0	True				
ANR	6376025	EqualityExpression	( value & 0x40 ) != 0		6375941	0		!=			
ANR	6376026	BitAndExpression	value & 0x40		6375941	0		&			
ANR	6376027	Identifier	value		6375941	0					
ANR	6376028	PrimaryExpression	0x40		6375941	1					
ANR	6376029	PrimaryExpression	0		6375941	1					
ANR	6376030	CompoundStatement		15:26:269:269	6375941	1					
ANR	6376031	ExpressionStatement	result |= ~0UL << offset	133:2:2458:2482	6375941	0	True				
ANR	6376032	AssignmentExpression	result |= ~0UL << offset		6375941	0		|=			
ANR	6376033	Identifier	result		6375941	0					
ANR	6376034	ShiftExpression	~0UL << offset		6375941	1		<<			
ANR	6376035	Identifier	~0UL		6375941	0					
ANR	6376036	Identifier	offset		6375941	1					
ANR	6376037	ExpressionStatement	* data = p	135:1:2488:2497	6375941	7	True				
ANR	6376038	AssignmentExpression	* data = p		6375941	0		=			
ANR	6376039	UnaryOperationExpression	* data		6375941	0					
ANR	6376040	UnaryOperator	*		6375941	0					
ANR	6376041	Identifier	data		6375941	1					
ANR	6376042	Identifier	p		6375941	1					
ANR	6376043	ReturnStatement	return result ;	136:1:2500:2513	6375941	8	True				
ANR	6376044	Identifier	result		6375941	0					
ANR	6376045	ReturnType	R_API st64		6375941	1					
ANR	6376046	Identifier	r_sleb128		6375941	2					
ANR	6376047	ParameterList	"const ut8 * * data , const ut8 * end"		6375941	3					
ANR	6376048	Parameter	const ut8 * * data	118:21:2150:2165	6375941	0	True				
ANR	6376049	ParameterType	const ut8 * *		6375941	0					
ANR	6376050	Identifier	data		6375941	1					
ANR	6376051	Parameter	const ut8 * end	118:39:2168:2181	6375941	1	True				
ANR	6376052	ParameterType	const ut8 *		6375941	0					
ANR	6376053	Identifier	end		6375941	1					
ANR	6376054	CFGEntryNode	ENTRY		6375941		True				
ANR	6376055	CFGExitNode	EXIT		6375941		True				
ANR	6376056	Symbol	p		6375941						
ANR	6376057	Symbol	result		6375941						
ANR	6376058	Symbol	~0UL		6375941						
ANR	6376059	Symbol	data		6375941						
ANR	6376060	Symbol	offset		6375941						
ANR	6376061	Symbol	chunk		6375941						
ANR	6376062	Symbol	end		6375941						
ANR	6376063	Symbol	* p		6375941						
ANR	6376064	Symbol	cond		6375941						
ANR	6376065	Symbol	* data		6375941						
ANR	6376066	Symbol	value		6375941						
ANR	6376067	Function	read_u32_leb128	159:0:3508:4162							
ANR	6376068	FunctionDef	"read_u32_leb128 (const ut8 * p , const ut8 * max , ut32 * out_value)"		6376067	0					
ANR	6376069	CompoundStatement		159:77:3585:4162	6376067	0					
ANR	6376070	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		6376067	0					
ANR	6376071	Condition	p < max && ! ( p [ 0 ] & 0x80 )	160:5:3592:3616	6376067	0	True				
ANR	6376072	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		6376067	0		&&			
ANR	6376073	RelationalExpression	p < max		6376067	0		<			
ANR	6376074	Identifier	p		6376067	0					
ANR	6376075	Identifier	max		6376067	1					
ANR	6376076	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		6376067	1					
ANR	6376077	UnaryOperator	!		6376067	0					
ANR	6376078	BitAndExpression	p [ 0 ] & 0x80		6376067	1		&			
ANR	6376079	ArrayIndexing	p [ 0 ]		6376067	0					
ANR	6376080	Identifier	p		6376067	0					
ANR	6376081	PrimaryExpression	0		6376067	1					
ANR	6376082	PrimaryExpression	0x80		6376067	1					
ANR	6376083	CompoundStatement		2:32:33:33	6376067	1					
ANR	6376084	ExpressionStatement	* out_value = LEB128_1 ( ut32 )	161:2:3623:3651	6376067	0	True				
ANR	6376085	AssignmentExpression	* out_value = LEB128_1 ( ut32 )		6376067	0		=			
ANR	6376086	UnaryOperationExpression	* out_value		6376067	0					
ANR	6376087	UnaryOperator	*		6376067	0					
ANR	6376088	Identifier	out_value		6376067	1					
ANR	6376089	CallExpression	LEB128_1 ( ut32 )		6376067	1					
ANR	6376090	Callee	LEB128_1		6376067	0					
ANR	6376091	Identifier	LEB128_1		6376067	0					
ANR	6376092	ArgumentList	ut32		6376067	1					
ANR	6376093	Argument	ut32		6376067	0					
ANR	6376094	Identifier	ut32		6376067	0					
ANR	6376095	ReturnStatement	return 1 ;	162:2:3655:3663	6376067	1	True				
ANR	6376096	PrimaryExpression	1		6376067	0					
ANR	6376097	ElseStatement	else		6376067	0					
ANR	6376098	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		6376067	0					
ANR	6376099	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	163:12:3677:3705	6376067	0	True				
ANR	6376100	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		6376067	0		&&			
ANR	6376101	RelationalExpression	p + 1 < max		6376067	0		<			
ANR	6376102	AdditiveExpression	p + 1		6376067	0		+			
ANR	6376103	Identifier	p		6376067	0					
ANR	6376104	PrimaryExpression	1		6376067	1					
ANR	6376105	Identifier	max		6376067	1					
ANR	6376106	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		6376067	1					
ANR	6376107	UnaryOperator	!		6376067	0					
ANR	6376108	BitAndExpression	p [ 1 ] & 0x80		6376067	1		&			
ANR	6376109	ArrayIndexing	p [ 1 ]		6376067	0					
ANR	6376110	Identifier	p		6376067	0					
ANR	6376111	PrimaryExpression	1		6376067	1					
ANR	6376112	PrimaryExpression	0x80		6376067	1					
ANR	6376113	CompoundStatement		5:43:122:122	6376067	1					
ANR	6376114	ExpressionStatement	* out_value = LEB128_2 ( ut32 )	164:2:3712:3740	6376067	0	True				
ANR	6376115	AssignmentExpression	* out_value = LEB128_2 ( ut32 )		6376067	0		=			
ANR	6376116	UnaryOperationExpression	* out_value		6376067	0					
ANR	6376117	UnaryOperator	*		6376067	0					
ANR	6376118	Identifier	out_value		6376067	1					
ANR	6376119	CallExpression	LEB128_2 ( ut32 )		6376067	1					
ANR	6376120	Callee	LEB128_2		6376067	0					
ANR	6376121	Identifier	LEB128_2		6376067	0					
ANR	6376122	ArgumentList	ut32		6376067	1					
ANR	6376123	Argument	ut32		6376067	0					
ANR	6376124	Identifier	ut32		6376067	0					
ANR	6376125	ReturnStatement	return 2 ;	165:2:3744:3752	6376067	1	True				
ANR	6376126	PrimaryExpression	2		6376067	0					
ANR	6376127	ElseStatement	else		6376067	0					
ANR	6376128	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		6376067	0					
ANR	6376129	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	166:12:3766:3794	6376067	0	True				
ANR	6376130	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		6376067	0		&&			
ANR	6376131	RelationalExpression	p + 2 < max		6376067	0		<			
ANR	6376132	AdditiveExpression	p + 2		6376067	0		+			
ANR	6376133	Identifier	p		6376067	0					
ANR	6376134	PrimaryExpression	2		6376067	1					
ANR	6376135	Identifier	max		6376067	1					
ANR	6376136	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		6376067	1					
ANR	6376137	UnaryOperator	!		6376067	0					
ANR	6376138	BitAndExpression	p [ 2 ] & 0x80		6376067	1		&			
ANR	6376139	ArrayIndexing	p [ 2 ]		6376067	0					
ANR	6376140	Identifier	p		6376067	0					
ANR	6376141	PrimaryExpression	2		6376067	1					
ANR	6376142	PrimaryExpression	0x80		6376067	1					
ANR	6376143	CompoundStatement		8:43:211:211	6376067	1					
ANR	6376144	ExpressionStatement	* out_value = LEB128_3 ( ut32 )	167:2:3801:3829	6376067	0	True				
ANR	6376145	AssignmentExpression	* out_value = LEB128_3 ( ut32 )		6376067	0		=			
ANR	6376146	UnaryOperationExpression	* out_value		6376067	0					
ANR	6376147	UnaryOperator	*		6376067	0					
ANR	6376148	Identifier	out_value		6376067	1					
ANR	6376149	CallExpression	LEB128_3 ( ut32 )		6376067	1					
ANR	6376150	Callee	LEB128_3		6376067	0					
ANR	6376151	Identifier	LEB128_3		6376067	0					
ANR	6376152	ArgumentList	ut32		6376067	1					
ANR	6376153	Argument	ut32		6376067	0					
ANR	6376154	Identifier	ut32		6376067	0					
ANR	6376155	ReturnStatement	return 3 ;	168:2:3833:3841	6376067	1	True				
ANR	6376156	PrimaryExpression	3		6376067	0					
ANR	6376157	ElseStatement	else		6376067	0					
ANR	6376158	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		6376067	0					
ANR	6376159	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	169:12:3855:3883	6376067	0	True				
ANR	6376160	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		6376067	0		&&			
ANR	6376161	RelationalExpression	p + 3 < max		6376067	0		<			
ANR	6376162	AdditiveExpression	p + 3		6376067	0		+			
ANR	6376163	Identifier	p		6376067	0					
ANR	6376164	PrimaryExpression	3		6376067	1					
ANR	6376165	Identifier	max		6376067	1					
ANR	6376166	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		6376067	1					
ANR	6376167	UnaryOperator	!		6376067	0					
ANR	6376168	BitAndExpression	p [ 3 ] & 0x80		6376067	1		&			
ANR	6376169	ArrayIndexing	p [ 3 ]		6376067	0					
ANR	6376170	Identifier	p		6376067	0					
ANR	6376171	PrimaryExpression	3		6376067	1					
ANR	6376172	PrimaryExpression	0x80		6376067	1					
ANR	6376173	CompoundStatement		11:43:300:300	6376067	1					
ANR	6376174	ExpressionStatement	* out_value = LEB128_4 ( ut32 )	170:2:3890:3918	6376067	0	True				
ANR	6376175	AssignmentExpression	* out_value = LEB128_4 ( ut32 )		6376067	0		=			
ANR	6376176	UnaryOperationExpression	* out_value		6376067	0					
ANR	6376177	UnaryOperator	*		6376067	0					
ANR	6376178	Identifier	out_value		6376067	1					
ANR	6376179	CallExpression	LEB128_4 ( ut32 )		6376067	1					
ANR	6376180	Callee	LEB128_4		6376067	0					
ANR	6376181	Identifier	LEB128_4		6376067	0					
ANR	6376182	ArgumentList	ut32		6376067	1					
ANR	6376183	Argument	ut32		6376067	0					
ANR	6376184	Identifier	ut32		6376067	0					
ANR	6376185	ReturnStatement	return 4 ;	171:2:3922:3930	6376067	1	True				
ANR	6376186	PrimaryExpression	4		6376067	0					
ANR	6376187	ElseStatement	else		6376067	0					
ANR	6376188	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		6376067	0					
ANR	6376189	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	172:12:3944:3972	6376067	0	True				
ANR	6376190	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		6376067	0		&&			
ANR	6376191	RelationalExpression	p + 4 < max		6376067	0		<			
ANR	6376192	AdditiveExpression	p + 4		6376067	0		+			
ANR	6376193	Identifier	p		6376067	0					
ANR	6376194	PrimaryExpression	4		6376067	1					
ANR	6376195	Identifier	max		6376067	1					
ANR	6376196	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		6376067	1					
ANR	6376197	UnaryOperator	!		6376067	0					
ANR	6376198	BitAndExpression	p [ 4 ] & 0x80		6376067	1		&			
ANR	6376199	ArrayIndexing	p [ 4 ]		6376067	0					
ANR	6376200	Identifier	p		6376067	0					
ANR	6376201	PrimaryExpression	4		6376067	1					
ANR	6376202	PrimaryExpression	0x80		6376067	1					
ANR	6376203	CompoundStatement		14:43:389:389	6376067	1					
ANR	6376204	ExpressionStatement	* out_value = LEB128_5 ( ut32 )	175:2:4056:4084	6376067	0	True				
ANR	6376205	AssignmentExpression	* out_value = LEB128_5 ( ut32 )		6376067	0		=			
ANR	6376206	UnaryOperationExpression	* out_value		6376067	0					
ANR	6376207	UnaryOperator	*		6376067	0					
ANR	6376208	Identifier	out_value		6376067	1					
ANR	6376209	CallExpression	LEB128_5 ( ut32 )		6376067	1					
ANR	6376210	Callee	LEB128_5		6376067	0					
ANR	6376211	Identifier	LEB128_5		6376067	0					
ANR	6376212	ArgumentList	ut32		6376067	1					
ANR	6376213	Argument	ut32		6376067	0					
ANR	6376214	Identifier	ut32		6376067	0					
ANR	6376215	ReturnStatement	return 5 ;	176:2:4088:4096	6376067	1	True				
ANR	6376216	PrimaryExpression	5		6376067	0					
ANR	6376217	ElseStatement	else		6376067	0					
ANR	6376218	CompoundStatement		19:8:520:520	6376067	0					
ANR	6376219	ExpressionStatement	* out_value = 0	179:2:4131:4145	6376067	0	True				
ANR	6376220	AssignmentExpression	* out_value = 0		6376067	0		=			
ANR	6376221	UnaryOperationExpression	* out_value		6376067	0					
ANR	6376222	UnaryOperator	*		6376067	0					
ANR	6376223	Identifier	out_value		6376067	1					
ANR	6376224	PrimaryExpression	0		6376067	1					
ANR	6376225	ReturnStatement	return 0 ;	180:2:4149:4157	6376067	1	True				
ANR	6376226	PrimaryExpression	0		6376067	0					
ANR	6376227	ReturnType	R_API size_t		6376067	1					
ANR	6376228	Identifier	read_u32_leb128		6376067	2					
ANR	6376229	ParameterList	"const ut8 * p , const ut8 * max , ut32 * out_value"		6376067	3					
ANR	6376230	Parameter	const ut8 * p	159:30:3538:3549	6376067	0	True				
ANR	6376231	ParameterType	const ut8 *		6376067	0					
ANR	6376232	Identifier	p		6376067	1					
ANR	6376233	Parameter	const ut8 * max	159:44:3552:3565	6376067	1	True				
ANR	6376234	ParameterType	const ut8 *		6376067	0					
ANR	6376235	Identifier	max		6376067	1					
ANR	6376236	Parameter	ut32 * out_value	159:60:3568:3582	6376067	2	True				
ANR	6376237	ParameterType	ut32 *		6376067	0					
ANR	6376238	Identifier	out_value		6376067	1					
ANR	6376239	CFGEntryNode	ENTRY		6376067		True				
ANR	6376240	CFGExitNode	EXIT		6376067		True				
ANR	6376241	Symbol	p		6376067						
ANR	6376242	Symbol	LEB128_2		6376067						
ANR	6376243	Symbol	out_value		6376067						
ANR	6376244	Symbol	LEB128_1		6376067						
ANR	6376245	Symbol	LEB128_4		6376067						
ANR	6376246	Symbol	LEB128_3		6376067						
ANR	6376247	Symbol	max		6376067						
ANR	6376248	Symbol	LEB128_5		6376067						
ANR	6376249	Symbol	ut32		6376067						
ANR	6376250	Symbol	* p		6376067						
ANR	6376251	Symbol	* out_value		6376067						
ANR	6376252	Function	read_i32_leb128	184:0:4165:5164							
ANR	6376253	FunctionDef	"read_i32_leb128 (const ut8 * p , const ut8 * max , st32 * out_value)"		6376252	0					
ANR	6376254	CompoundStatement		184:77:4242:5164	6376252	0					
ANR	6376255	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		6376252	0					
ANR	6376256	Condition	p < max && ! ( p [ 0 ] & 0x80 )	185:5:4249:4273	6376252	0	True				
ANR	6376257	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		6376252	0		&&			
ANR	6376258	RelationalExpression	p < max		6376252	0		<			
ANR	6376259	Identifier	p		6376252	0					
ANR	6376260	Identifier	max		6376252	1					
ANR	6376261	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		6376252	1					
ANR	6376262	UnaryOperator	!		6376252	0					
ANR	6376263	BitAndExpression	p [ 0 ] & 0x80		6376252	1		&			
ANR	6376264	ArrayIndexing	p [ 0 ]		6376252	0					
ANR	6376265	Identifier	p		6376252	0					
ANR	6376266	PrimaryExpression	0		6376252	1					
ANR	6376267	PrimaryExpression	0x80		6376252	1					
ANR	6376268	CompoundStatement		3:2:37:66	6376252	1					
ANR	6376269	IdentifierDeclStatement	ut32 result = LEB128_1 ( ut32 ) ;	186:2:4280:4309	6376252	0	True				
ANR	6376270	IdentifierDecl	result = LEB128_1 ( ut32 )		6376252	0					
ANR	6376271	IdentifierDeclType	ut32		6376252	0					
ANR	6376272	Identifier	result		6376252	1					
ANR	6376273	AssignmentExpression	result = LEB128_1 ( ut32 )		6376252	2		=			
ANR	6376274	Identifier	result		6376252	0					
ANR	6376275	CallExpression	LEB128_1 ( ut32 )		6376252	1					
ANR	6376276	Callee	LEB128_1		6376252	0					
ANR	6376277	Identifier	LEB128_1		6376252	0					
ANR	6376278	ArgumentList	ut32		6376252	1					
ANR	6376279	Argument	ut32		6376252	0					
ANR	6376280	Identifier	ut32		6376252	0					
ANR	6376281	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 6 )"	187:2:4313:4355	6376252	1	True				
ANR	6376282	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 6 )"		6376252	0		=			
ANR	6376283	UnaryOperationExpression	* out_value		6376252	0					
ANR	6376284	UnaryOperator	*		6376252	0					
ANR	6376285	Identifier	out_value		6376252	1					
ANR	6376286	CallExpression	"SIGN_EXTEND ( ut32 , result , 6 )"		6376252	1					
ANR	6376287	Callee	SIGN_EXTEND		6376252	0					
ANR	6376288	Identifier	SIGN_EXTEND		6376252	0					
ANR	6376289	ArgumentList	ut32		6376252	1					
ANR	6376290	Argument	ut32		6376252	0					
ANR	6376291	Identifier	ut32		6376252	0					
ANR	6376292	Argument	result		6376252	1					
ANR	6376293	Identifier	result		6376252	0					
ANR	6376294	Argument	6		6376252	2					
ANR	6376295	PrimaryExpression	6		6376252	0					
ANR	6376296	ReturnStatement	return 1 ;	188:2:4359:4367	6376252	2	True				
ANR	6376297	PrimaryExpression	1		6376252	0					
ANR	6376298	ElseStatement	else		6376252	0					
ANR	6376299	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		6376252	0					
ANR	6376300	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	189:12:4381:4409	6376252	0	True				
ANR	6376301	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		6376252	0		&&			
ANR	6376302	RelationalExpression	p + 1 < max		6376252	0		<			
ANR	6376303	AdditiveExpression	p + 1		6376252	0		+			
ANR	6376304	Identifier	p		6376252	0					
ANR	6376305	PrimaryExpression	1		6376252	1					
ANR	6376306	Identifier	max		6376252	1					
ANR	6376307	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		6376252	1					
ANR	6376308	UnaryOperator	!		6376252	0					
ANR	6376309	BitAndExpression	p [ 1 ] & 0x80		6376252	1		&			
ANR	6376310	ArrayIndexing	p [ 1 ]		6376252	0					
ANR	6376311	Identifier	p		6376252	0					
ANR	6376312	PrimaryExpression	1		6376252	1					
ANR	6376313	PrimaryExpression	0x80		6376252	1					
ANR	6376314	CompoundStatement		7:2:173:202	6376252	1					
ANR	6376315	IdentifierDeclStatement	ut32 result = LEB128_2 ( ut32 ) ;	190:2:4416:4445	6376252	0	True				
ANR	6376316	IdentifierDecl	result = LEB128_2 ( ut32 )		6376252	0					
ANR	6376317	IdentifierDeclType	ut32		6376252	0					
ANR	6376318	Identifier	result		6376252	1					
ANR	6376319	AssignmentExpression	result = LEB128_2 ( ut32 )		6376252	2		=			
ANR	6376320	Identifier	result		6376252	0					
ANR	6376321	CallExpression	LEB128_2 ( ut32 )		6376252	1					
ANR	6376322	Callee	LEB128_2		6376252	0					
ANR	6376323	Identifier	LEB128_2		6376252	0					
ANR	6376324	ArgumentList	ut32		6376252	1					
ANR	6376325	Argument	ut32		6376252	0					
ANR	6376326	Identifier	ut32		6376252	0					
ANR	6376327	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 13 )"	191:2:4449:4492	6376252	1	True				
ANR	6376328	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 13 )"		6376252	0		=			
ANR	6376329	UnaryOperationExpression	* out_value		6376252	0					
ANR	6376330	UnaryOperator	*		6376252	0					
ANR	6376331	Identifier	out_value		6376252	1					
ANR	6376332	CallExpression	"SIGN_EXTEND ( ut32 , result , 13 )"		6376252	1					
ANR	6376333	Callee	SIGN_EXTEND		6376252	0					
ANR	6376334	Identifier	SIGN_EXTEND		6376252	0					
ANR	6376335	ArgumentList	ut32		6376252	1					
ANR	6376336	Argument	ut32		6376252	0					
ANR	6376337	Identifier	ut32		6376252	0					
ANR	6376338	Argument	result		6376252	1					
ANR	6376339	Identifier	result		6376252	0					
ANR	6376340	Argument	13		6376252	2					
ANR	6376341	PrimaryExpression	13		6376252	0					
ANR	6376342	ReturnStatement	return 2 ;	192:2:4496:4504	6376252	2	True				
ANR	6376343	PrimaryExpression	2		6376252	0					
ANR	6376344	ElseStatement	else		6376252	0					
ANR	6376345	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		6376252	0					
ANR	6376346	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	193:12:4518:4546	6376252	0	True				
ANR	6376347	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		6376252	0		&&			
ANR	6376348	RelationalExpression	p + 2 < max		6376252	0		<			
ANR	6376349	AdditiveExpression	p + 2		6376252	0		+			
ANR	6376350	Identifier	p		6376252	0					
ANR	6376351	PrimaryExpression	2		6376252	1					
ANR	6376352	Identifier	max		6376252	1					
ANR	6376353	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		6376252	1					
ANR	6376354	UnaryOperator	!		6376252	0					
ANR	6376355	BitAndExpression	p [ 2 ] & 0x80		6376252	1		&			
ANR	6376356	ArrayIndexing	p [ 2 ]		6376252	0					
ANR	6376357	Identifier	p		6376252	0					
ANR	6376358	PrimaryExpression	2		6376252	1					
ANR	6376359	PrimaryExpression	0x80		6376252	1					
ANR	6376360	CompoundStatement		11:2:310:339	6376252	1					
ANR	6376361	IdentifierDeclStatement	ut32 result = LEB128_3 ( ut32 ) ;	194:2:4553:4582	6376252	0	True				
ANR	6376362	IdentifierDecl	result = LEB128_3 ( ut32 )		6376252	0					
ANR	6376363	IdentifierDeclType	ut32		6376252	0					
ANR	6376364	Identifier	result		6376252	1					
ANR	6376365	AssignmentExpression	result = LEB128_3 ( ut32 )		6376252	2		=			
ANR	6376366	Identifier	result		6376252	0					
ANR	6376367	CallExpression	LEB128_3 ( ut32 )		6376252	1					
ANR	6376368	Callee	LEB128_3		6376252	0					
ANR	6376369	Identifier	LEB128_3		6376252	0					
ANR	6376370	ArgumentList	ut32		6376252	1					
ANR	6376371	Argument	ut32		6376252	0					
ANR	6376372	Identifier	ut32		6376252	0					
ANR	6376373	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 20 )"	195:2:4586:4629	6376252	1	True				
ANR	6376374	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 20 )"		6376252	0		=			
ANR	6376375	UnaryOperationExpression	* out_value		6376252	0					
ANR	6376376	UnaryOperator	*		6376252	0					
ANR	6376377	Identifier	out_value		6376252	1					
ANR	6376378	CallExpression	"SIGN_EXTEND ( ut32 , result , 20 )"		6376252	1					
ANR	6376379	Callee	SIGN_EXTEND		6376252	0					
ANR	6376380	Identifier	SIGN_EXTEND		6376252	0					
ANR	6376381	ArgumentList	ut32		6376252	1					
ANR	6376382	Argument	ut32		6376252	0					
ANR	6376383	Identifier	ut32		6376252	0					
ANR	6376384	Argument	result		6376252	1					
ANR	6376385	Identifier	result		6376252	0					
ANR	6376386	Argument	20		6376252	2					
ANR	6376387	PrimaryExpression	20		6376252	0					
ANR	6376388	ReturnStatement	return 3 ;	196:2:4633:4641	6376252	2	True				
ANR	6376389	PrimaryExpression	3		6376252	0					
ANR	6376390	ElseStatement	else		6376252	0					
ANR	6376391	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		6376252	0					
ANR	6376392	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	197:12:4655:4683	6376252	0	True				
ANR	6376393	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		6376252	0		&&			
ANR	6376394	RelationalExpression	p + 3 < max		6376252	0		<			
ANR	6376395	AdditiveExpression	p + 3		6376252	0		+			
ANR	6376396	Identifier	p		6376252	0					
ANR	6376397	PrimaryExpression	3		6376252	1					
ANR	6376398	Identifier	max		6376252	1					
ANR	6376399	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		6376252	1					
ANR	6376400	UnaryOperator	!		6376252	0					
ANR	6376401	BitAndExpression	p [ 3 ] & 0x80		6376252	1		&			
ANR	6376402	ArrayIndexing	p [ 3 ]		6376252	0					
ANR	6376403	Identifier	p		6376252	0					
ANR	6376404	PrimaryExpression	3		6376252	1					
ANR	6376405	PrimaryExpression	0x80		6376252	1					
ANR	6376406	CompoundStatement		15:2:447:476	6376252	1					
ANR	6376407	IdentifierDeclStatement	ut32 result = LEB128_4 ( ut32 ) ;	198:2:4690:4719	6376252	0	True				
ANR	6376408	IdentifierDecl	result = LEB128_4 ( ut32 )		6376252	0					
ANR	6376409	IdentifierDeclType	ut32		6376252	0					
ANR	6376410	Identifier	result		6376252	1					
ANR	6376411	AssignmentExpression	result = LEB128_4 ( ut32 )		6376252	2		=			
ANR	6376412	Identifier	result		6376252	0					
ANR	6376413	CallExpression	LEB128_4 ( ut32 )		6376252	1					
ANR	6376414	Callee	LEB128_4		6376252	0					
ANR	6376415	Identifier	LEB128_4		6376252	0					
ANR	6376416	ArgumentList	ut32		6376252	1					
ANR	6376417	Argument	ut32		6376252	0					
ANR	6376418	Identifier	ut32		6376252	0					
ANR	6376419	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut32 , result , 27 )"	199:2:4723:4766	6376252	1	True				
ANR	6376420	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut32 , result , 27 )"		6376252	0		=			
ANR	6376421	UnaryOperationExpression	* out_value		6376252	0					
ANR	6376422	UnaryOperator	*		6376252	0					
ANR	6376423	Identifier	out_value		6376252	1					
ANR	6376424	CallExpression	"SIGN_EXTEND ( ut32 , result , 27 )"		6376252	1					
ANR	6376425	Callee	SIGN_EXTEND		6376252	0					
ANR	6376426	Identifier	SIGN_EXTEND		6376252	0					
ANR	6376427	ArgumentList	ut32		6376252	1					
ANR	6376428	Argument	ut32		6376252	0					
ANR	6376429	Identifier	ut32		6376252	0					
ANR	6376430	Argument	result		6376252	1					
ANR	6376431	Identifier	result		6376252	0					
ANR	6376432	Argument	27		6376252	2					
ANR	6376433	PrimaryExpression	27		6376252	0					
ANR	6376434	ReturnStatement	return 4 ;	200:2:4770:4778	6376252	2	True				
ANR	6376435	PrimaryExpression	4		6376252	0					
ANR	6376436	ElseStatement	else		6376252	0					
ANR	6376437	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		6376252	0					
ANR	6376438	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	201:12:4792:4818	6376252	0	True				
ANR	6376439	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		6376252	0		&&			
ANR	6376440	RelationalExpression	p + 4 < max		6376252	0		<			
ANR	6376441	AdditiveExpression	p + 4		6376252	0		+			
ANR	6376442	Identifier	p		6376252	0					
ANR	6376443	PrimaryExpression	4		6376252	1					
ANR	6376444	Identifier	max		6376252	1					
ANR	6376445	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		6376252	1					
ANR	6376446	UnaryOperator	!		6376252	0					
ANR	6376447	BitAndExpression	p [ 4 ] & 0x80		6376252	1		&			
ANR	6376448	ArrayIndexing	p [ 4 ]		6376252	0					
ANR	6376449	Identifier	p		6376252	0					
ANR	6376450	PrimaryExpression	4		6376252	1					
ANR	6376451	PrimaryExpression	0x80		6376252	1					
ANR	6376452	CompoundStatement		25:2:809:838	6376252	1					
ANR	6376453	IdentifierDeclStatement	bool sign_bit_set = ( p [ 4 ] & 0x8 ) ;	203:2:4889:4921	6376252	0	True				
ANR	6376454	IdentifierDecl	sign_bit_set = ( p [ 4 ] & 0x8 )		6376252	0					
ANR	6376455	IdentifierDeclType	bool		6376252	0					
ANR	6376456	Identifier	sign_bit_set		6376252	1					
ANR	6376457	AssignmentExpression	sign_bit_set = ( p [ 4 ] & 0x8 )		6376252	2		=			
ANR	6376458	Identifier	sign_bit_set		6376252	0					
ANR	6376459	BitAndExpression	p [ 4 ] & 0x8		6376252	1		&			
ANR	6376460	ArrayIndexing	p [ 4 ]		6376252	0					
ANR	6376461	Identifier	p		6376252	0					
ANR	6376462	PrimaryExpression	4		6376252	1					
ANR	6376463	PrimaryExpression	0x8		6376252	1					
ANR	6376464	IdentifierDeclStatement	int top_bits = p [ 4 ] & 0xf0 ;	204:2:4925:4951	6376252	1	True				
ANR	6376465	IdentifierDecl	top_bits = p [ 4 ] & 0xf0		6376252	0					
ANR	6376466	IdentifierDeclType	int		6376252	0					
ANR	6376467	Identifier	top_bits		6376252	1					
ANR	6376468	AssignmentExpression	top_bits = p [ 4 ] & 0xf0		6376252	2		=			
ANR	6376469	Identifier	top_bits		6376252	0					
ANR	6376470	BitAndExpression	p [ 4 ] & 0xf0		6376252	1		&			
ANR	6376471	ArrayIndexing	p [ 4 ]		6376252	0					
ANR	6376472	Identifier	p		6376252	0					
ANR	6376473	PrimaryExpression	4		6376252	1					
ANR	6376474	PrimaryExpression	0xf0		6376252	1					
ANR	6376475	IfStatement	if ( ( sign_bit_set && top_bits != 0x70 ) || ( ! sign_bit_set && top_bits != 0 ) )		6376252	2					
ANR	6376476	Condition	( sign_bit_set && top_bits != 0x70 ) || ( ! sign_bit_set && top_bits != 0 )	205:6:4959:5028	6376252	0	True				
ANR	6376477	OrExpression	( sign_bit_set && top_bits != 0x70 ) || ( ! sign_bit_set && top_bits != 0 )		6376252	0		||			
ANR	6376478	AndExpression	sign_bit_set && top_bits != 0x70		6376252	0		&&			
ANR	6376479	Identifier	sign_bit_set		6376252	0					
ANR	6376480	EqualityExpression	top_bits != 0x70		6376252	1		!=			
ANR	6376481	Identifier	top_bits		6376252	0					
ANR	6376482	PrimaryExpression	0x70		6376252	1					
ANR	6376483	AndExpression	! sign_bit_set && top_bits != 0		6376252	1		&&			
ANR	6376484	UnaryOperationExpression	! sign_bit_set		6376252	0					
ANR	6376485	UnaryOperator	!		6376252	0					
ANR	6376486	Identifier	sign_bit_set		6376252	1					
ANR	6376487	EqualityExpression	top_bits != 0		6376252	1		!=			
ANR	6376488	Identifier	top_bits		6376252	0					
ANR	6376489	PrimaryExpression	0		6376252	1					
ANR	6376490	CompoundStatement		22:78:788:788	6376252	1					
ANR	6376491	ReturnStatement	return 0 ;	206:3:5036:5044	6376252	0	True				
ANR	6376492	PrimaryExpression	0		6376252	0					
ANR	6376493	IdentifierDeclStatement	ut32 result = LEB128_5 ( ut32 ) ;	208:2:5052:5081	6376252	3	True				
ANR	6376494	IdentifierDecl	result = LEB128_5 ( ut32 )		6376252	0					
ANR	6376495	IdentifierDeclType	ut32		6376252	0					
ANR	6376496	Identifier	result		6376252	1					
ANR	6376497	AssignmentExpression	result = LEB128_5 ( ut32 )		6376252	2		=			
ANR	6376498	Identifier	result		6376252	0					
ANR	6376499	CallExpression	LEB128_5 ( ut32 )		6376252	1					
ANR	6376500	Callee	LEB128_5		6376252	0					
ANR	6376501	Identifier	LEB128_5		6376252	0					
ANR	6376502	ArgumentList	ut32		6376252	1					
ANR	6376503	Argument	ut32		6376252	0					
ANR	6376504	Identifier	ut32		6376252	0					
ANR	6376505	ExpressionStatement	* out_value = result	209:2:5085:5104	6376252	4	True				
ANR	6376506	AssignmentExpression	* out_value = result		6376252	0		=			
ANR	6376507	UnaryOperationExpression	* out_value		6376252	0					
ANR	6376508	UnaryOperator	*		6376252	0					
ANR	6376509	Identifier	out_value		6376252	1					
ANR	6376510	Identifier	result		6376252	1					
ANR	6376511	ReturnStatement	return 5 ;	210:2:5108:5116	6376252	5	True				
ANR	6376512	PrimaryExpression	5		6376252	0					
ANR	6376513	ElseStatement	else		6376252	0					
ANR	6376514	CompoundStatement		28:8:883:883	6376252	0					
ANR	6376515	ReturnStatement	return 0 ;	213:2:5151:5159	6376252	0	True				
ANR	6376516	PrimaryExpression	0		6376252	0					
ANR	6376517	ReturnType	R_API size_t		6376252	1					
ANR	6376518	Identifier	read_i32_leb128		6376252	2					
ANR	6376519	ParameterList	"const ut8 * p , const ut8 * max , st32 * out_value"		6376252	3					
ANR	6376520	Parameter	const ut8 * p	184:30:4195:4206	6376252	0	True				
ANR	6376521	ParameterType	const ut8 *		6376252	0					
ANR	6376522	Identifier	p		6376252	1					
ANR	6376523	Parameter	const ut8 * max	184:44:4209:4222	6376252	1	True				
ANR	6376524	ParameterType	const ut8 *		6376252	0					
ANR	6376525	Identifier	max		6376252	1					
ANR	6376526	Parameter	st32 * out_value	184:60:4225:4239	6376252	2	True				
ANR	6376527	ParameterType	st32 *		6376252	0					
ANR	6376528	Identifier	out_value		6376252	1					
ANR	6376529	CFGEntryNode	ENTRY		6376252		True				
ANR	6376530	CFGExitNode	EXIT		6376252		True				
ANR	6376531	Symbol	max		6376252						
ANR	6376532	Symbol	SIGN_EXTEND		6376252						
ANR	6376533	Symbol	ut32		6376252						
ANR	6376534	Symbol	* out_value		6376252						
ANR	6376535	Symbol	p		6376252						
ANR	6376536	Symbol	result		6376252						
ANR	6376537	Symbol	LEB128_2		6376252						
ANR	6376538	Symbol	out_value		6376252						
ANR	6376539	Symbol	LEB128_1		6376252						
ANR	6376540	Symbol	LEB128_4		6376252						
ANR	6376541	Symbol	LEB128_3		6376252						
ANR	6376542	Symbol	sign_bit_set		6376252						
ANR	6376543	Symbol	top_bits		6376252						
ANR	6376544	Symbol	LEB128_5		6376252						
ANR	6376545	Symbol	* p		6376252						
ANR	6376546	Function	read_u64_leb128	217:0:5167:6191							
ANR	6376547	FunctionDef	"read_u64_leb128 (const ut8 * p , const ut8 * max , ut64 * out_value)"		6376546	0					
ANR	6376548	CompoundStatement		217:77:5244:6191	6376546	0					
ANR	6376549	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		6376546	0					
ANR	6376550	Condition	p < max && ! ( p [ 0 ] & 0x80 )	218:5:5251:5275	6376546	0	True				
ANR	6376551	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		6376546	0		&&			
ANR	6376552	RelationalExpression	p < max		6376546	0		<			
ANR	6376553	Identifier	p		6376546	0					
ANR	6376554	Identifier	max		6376546	1					
ANR	6376555	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		6376546	1					
ANR	6376556	UnaryOperator	!		6376546	0					
ANR	6376557	BitAndExpression	p [ 0 ] & 0x80		6376546	1		&			
ANR	6376558	ArrayIndexing	p [ 0 ]		6376546	0					
ANR	6376559	Identifier	p		6376546	0					
ANR	6376560	PrimaryExpression	0		6376546	1					
ANR	6376561	PrimaryExpression	0x80		6376546	1					
ANR	6376562	CompoundStatement		2:32:33:33	6376546	1					
ANR	6376563	ExpressionStatement	* out_value = LEB128_1 ( ut64 )	219:2:5282:5310	6376546	0	True				
ANR	6376564	AssignmentExpression	* out_value = LEB128_1 ( ut64 )		6376546	0		=			
ANR	6376565	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376566	UnaryOperator	*		6376546	0					
ANR	6376567	Identifier	out_value		6376546	1					
ANR	6376568	CallExpression	LEB128_1 ( ut64 )		6376546	1					
ANR	6376569	Callee	LEB128_1		6376546	0					
ANR	6376570	Identifier	LEB128_1		6376546	0					
ANR	6376571	ArgumentList	ut64		6376546	1					
ANR	6376572	Argument	ut64		6376546	0					
ANR	6376573	Identifier	ut64		6376546	0					
ANR	6376574	ReturnStatement	return 1 ;	220:2:5314:5322	6376546	1	True				
ANR	6376575	PrimaryExpression	1		6376546	0					
ANR	6376576	ElseStatement	else		6376546	0					
ANR	6376577	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		6376546	0					
ANR	6376578	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	221:12:5336:5364	6376546	0	True				
ANR	6376579	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		6376546	0		&&			
ANR	6376580	RelationalExpression	p + 1 < max		6376546	0		<			
ANR	6376581	AdditiveExpression	p + 1		6376546	0		+			
ANR	6376582	Identifier	p		6376546	0					
ANR	6376583	PrimaryExpression	1		6376546	1					
ANR	6376584	Identifier	max		6376546	1					
ANR	6376585	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		6376546	1					
ANR	6376586	UnaryOperator	!		6376546	0					
ANR	6376587	BitAndExpression	p [ 1 ] & 0x80		6376546	1		&			
ANR	6376588	ArrayIndexing	p [ 1 ]		6376546	0					
ANR	6376589	Identifier	p		6376546	0					
ANR	6376590	PrimaryExpression	1		6376546	1					
ANR	6376591	PrimaryExpression	0x80		6376546	1					
ANR	6376592	CompoundStatement		5:43:122:122	6376546	1					
ANR	6376593	ExpressionStatement	* out_value = LEB128_2 ( ut64 )	222:2:5371:5399	6376546	0	True				
ANR	6376594	AssignmentExpression	* out_value = LEB128_2 ( ut64 )		6376546	0		=			
ANR	6376595	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376596	UnaryOperator	*		6376546	0					
ANR	6376597	Identifier	out_value		6376546	1					
ANR	6376598	CallExpression	LEB128_2 ( ut64 )		6376546	1					
ANR	6376599	Callee	LEB128_2		6376546	0					
ANR	6376600	Identifier	LEB128_2		6376546	0					
ANR	6376601	ArgumentList	ut64		6376546	1					
ANR	6376602	Argument	ut64		6376546	0					
ANR	6376603	Identifier	ut64		6376546	0					
ANR	6376604	ReturnStatement	return 2 ;	223:2:5403:5411	6376546	1	True				
ANR	6376605	PrimaryExpression	2		6376546	0					
ANR	6376606	ElseStatement	else		6376546	0					
ANR	6376607	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		6376546	0					
ANR	6376608	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	224:12:5425:5453	6376546	0	True				
ANR	6376609	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		6376546	0		&&			
ANR	6376610	RelationalExpression	p + 2 < max		6376546	0		<			
ANR	6376611	AdditiveExpression	p + 2		6376546	0		+			
ANR	6376612	Identifier	p		6376546	0					
ANR	6376613	PrimaryExpression	2		6376546	1					
ANR	6376614	Identifier	max		6376546	1					
ANR	6376615	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		6376546	1					
ANR	6376616	UnaryOperator	!		6376546	0					
ANR	6376617	BitAndExpression	p [ 2 ] & 0x80		6376546	1		&			
ANR	6376618	ArrayIndexing	p [ 2 ]		6376546	0					
ANR	6376619	Identifier	p		6376546	0					
ANR	6376620	PrimaryExpression	2		6376546	1					
ANR	6376621	PrimaryExpression	0x80		6376546	1					
ANR	6376622	CompoundStatement		8:43:211:211	6376546	1					
ANR	6376623	ExpressionStatement	* out_value = LEB128_3 ( ut64 )	225:2:5460:5488	6376546	0	True				
ANR	6376624	AssignmentExpression	* out_value = LEB128_3 ( ut64 )		6376546	0		=			
ANR	6376625	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376626	UnaryOperator	*		6376546	0					
ANR	6376627	Identifier	out_value		6376546	1					
ANR	6376628	CallExpression	LEB128_3 ( ut64 )		6376546	1					
ANR	6376629	Callee	LEB128_3		6376546	0					
ANR	6376630	Identifier	LEB128_3		6376546	0					
ANR	6376631	ArgumentList	ut64		6376546	1					
ANR	6376632	Argument	ut64		6376546	0					
ANR	6376633	Identifier	ut64		6376546	0					
ANR	6376634	ReturnStatement	return 3 ;	226:2:5492:5500	6376546	1	True				
ANR	6376635	PrimaryExpression	3		6376546	0					
ANR	6376636	ElseStatement	else		6376546	0					
ANR	6376637	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		6376546	0					
ANR	6376638	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	227:12:5514:5542	6376546	0	True				
ANR	6376639	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		6376546	0		&&			
ANR	6376640	RelationalExpression	p + 3 < max		6376546	0		<			
ANR	6376641	AdditiveExpression	p + 3		6376546	0		+			
ANR	6376642	Identifier	p		6376546	0					
ANR	6376643	PrimaryExpression	3		6376546	1					
ANR	6376644	Identifier	max		6376546	1					
ANR	6376645	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		6376546	1					
ANR	6376646	UnaryOperator	!		6376546	0					
ANR	6376647	BitAndExpression	p [ 3 ] & 0x80		6376546	1		&			
ANR	6376648	ArrayIndexing	p [ 3 ]		6376546	0					
ANR	6376649	Identifier	p		6376546	0					
ANR	6376650	PrimaryExpression	3		6376546	1					
ANR	6376651	PrimaryExpression	0x80		6376546	1					
ANR	6376652	CompoundStatement		11:43:300:300	6376546	1					
ANR	6376653	ExpressionStatement	* out_value = LEB128_4 ( ut64 )	228:2:5549:5577	6376546	0	True				
ANR	6376654	AssignmentExpression	* out_value = LEB128_4 ( ut64 )		6376546	0		=			
ANR	6376655	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376656	UnaryOperator	*		6376546	0					
ANR	6376657	Identifier	out_value		6376546	1					
ANR	6376658	CallExpression	LEB128_4 ( ut64 )		6376546	1					
ANR	6376659	Callee	LEB128_4		6376546	0					
ANR	6376660	Identifier	LEB128_4		6376546	0					
ANR	6376661	ArgumentList	ut64		6376546	1					
ANR	6376662	Argument	ut64		6376546	0					
ANR	6376663	Identifier	ut64		6376546	0					
ANR	6376664	ReturnStatement	return 4 ;	229:2:5581:5589	6376546	1	True				
ANR	6376665	PrimaryExpression	4		6376546	0					
ANR	6376666	ElseStatement	else		6376546	0					
ANR	6376667	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		6376546	0					
ANR	6376668	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	230:12:5603:5631	6376546	0	True				
ANR	6376669	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		6376546	0		&&			
ANR	6376670	RelationalExpression	p + 4 < max		6376546	0		<			
ANR	6376671	AdditiveExpression	p + 4		6376546	0		+			
ANR	6376672	Identifier	p		6376546	0					
ANR	6376673	PrimaryExpression	4		6376546	1					
ANR	6376674	Identifier	max		6376546	1					
ANR	6376675	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		6376546	1					
ANR	6376676	UnaryOperator	!		6376546	0					
ANR	6376677	BitAndExpression	p [ 4 ] & 0x80		6376546	1		&			
ANR	6376678	ArrayIndexing	p [ 4 ]		6376546	0					
ANR	6376679	Identifier	p		6376546	0					
ANR	6376680	PrimaryExpression	4		6376546	1					
ANR	6376681	PrimaryExpression	0x80		6376546	1					
ANR	6376682	CompoundStatement		14:43:389:389	6376546	1					
ANR	6376683	ExpressionStatement	* out_value = LEB128_5 ( ut64 )	231:2:5638:5666	6376546	0	True				
ANR	6376684	AssignmentExpression	* out_value = LEB128_5 ( ut64 )		6376546	0		=			
ANR	6376685	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376686	UnaryOperator	*		6376546	0					
ANR	6376687	Identifier	out_value		6376546	1					
ANR	6376688	CallExpression	LEB128_5 ( ut64 )		6376546	1					
ANR	6376689	Callee	LEB128_5		6376546	0					
ANR	6376690	Identifier	LEB128_5		6376546	0					
ANR	6376691	ArgumentList	ut64		6376546	1					
ANR	6376692	Argument	ut64		6376546	0					
ANR	6376693	Identifier	ut64		6376546	0					
ANR	6376694	ReturnStatement	return 5 ;	232:2:5670:5678	6376546	1	True				
ANR	6376695	PrimaryExpression	5		6376546	0					
ANR	6376696	ElseStatement	else		6376546	0					
ANR	6376697	IfStatement	if ( p + 5 < max && ! ( p [ 5 ] & 0x80 ) )		6376546	0					
ANR	6376698	Condition	p + 5 < max && ! ( p [ 5 ] & 0x80 )	233:12:5692:5720	6376546	0	True				
ANR	6376699	AndExpression	p + 5 < max && ! ( p [ 5 ] & 0x80 )		6376546	0		&&			
ANR	6376700	RelationalExpression	p + 5 < max		6376546	0		<			
ANR	6376701	AdditiveExpression	p + 5		6376546	0		+			
ANR	6376702	Identifier	p		6376546	0					
ANR	6376703	PrimaryExpression	5		6376546	1					
ANR	6376704	Identifier	max		6376546	1					
ANR	6376705	UnaryOperationExpression	! ( p [ 5 ] & 0x80 )		6376546	1					
ANR	6376706	UnaryOperator	!		6376546	0					
ANR	6376707	BitAndExpression	p [ 5 ] & 0x80		6376546	1		&			
ANR	6376708	ArrayIndexing	p [ 5 ]		6376546	0					
ANR	6376709	Identifier	p		6376546	0					
ANR	6376710	PrimaryExpression	5		6376546	1					
ANR	6376711	PrimaryExpression	0x80		6376546	1					
ANR	6376712	CompoundStatement		17:43:478:478	6376546	1					
ANR	6376713	ExpressionStatement	* out_value = LEB128_6 ( ut64 )	234:2:5727:5755	6376546	0	True				
ANR	6376714	AssignmentExpression	* out_value = LEB128_6 ( ut64 )		6376546	0		=			
ANR	6376715	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376716	UnaryOperator	*		6376546	0					
ANR	6376717	Identifier	out_value		6376546	1					
ANR	6376718	CallExpression	LEB128_6 ( ut64 )		6376546	1					
ANR	6376719	Callee	LEB128_6		6376546	0					
ANR	6376720	Identifier	LEB128_6		6376546	0					
ANR	6376721	ArgumentList	ut64		6376546	1					
ANR	6376722	Argument	ut64		6376546	0					
ANR	6376723	Identifier	ut64		6376546	0					
ANR	6376724	ReturnStatement	return 6 ;	235:2:5759:5767	6376546	1	True				
ANR	6376725	PrimaryExpression	6		6376546	0					
ANR	6376726	ElseStatement	else		6376546	0					
ANR	6376727	IfStatement	if ( p + 6 < max && ! ( p [ 6 ] & 0x80 ) )		6376546	0					
ANR	6376728	Condition	p + 6 < max && ! ( p [ 6 ] & 0x80 )	236:12:5781:5809	6376546	0	True				
ANR	6376729	AndExpression	p + 6 < max && ! ( p [ 6 ] & 0x80 )		6376546	0		&&			
ANR	6376730	RelationalExpression	p + 6 < max		6376546	0		<			
ANR	6376731	AdditiveExpression	p + 6		6376546	0		+			
ANR	6376732	Identifier	p		6376546	0					
ANR	6376733	PrimaryExpression	6		6376546	1					
ANR	6376734	Identifier	max		6376546	1					
ANR	6376735	UnaryOperationExpression	! ( p [ 6 ] & 0x80 )		6376546	1					
ANR	6376736	UnaryOperator	!		6376546	0					
ANR	6376737	BitAndExpression	p [ 6 ] & 0x80		6376546	1		&			
ANR	6376738	ArrayIndexing	p [ 6 ]		6376546	0					
ANR	6376739	Identifier	p		6376546	0					
ANR	6376740	PrimaryExpression	6		6376546	1					
ANR	6376741	PrimaryExpression	0x80		6376546	1					
ANR	6376742	CompoundStatement		20:43:567:567	6376546	1					
ANR	6376743	ExpressionStatement	* out_value = LEB128_7 ( ut64 )	237:2:5816:5844	6376546	0	True				
ANR	6376744	AssignmentExpression	* out_value = LEB128_7 ( ut64 )		6376546	0		=			
ANR	6376745	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376746	UnaryOperator	*		6376546	0					
ANR	6376747	Identifier	out_value		6376546	1					
ANR	6376748	CallExpression	LEB128_7 ( ut64 )		6376546	1					
ANR	6376749	Callee	LEB128_7		6376546	0					
ANR	6376750	Identifier	LEB128_7		6376546	0					
ANR	6376751	ArgumentList	ut64		6376546	1					
ANR	6376752	Argument	ut64		6376546	0					
ANR	6376753	Identifier	ut64		6376546	0					
ANR	6376754	ReturnStatement	return 7 ;	238:2:5848:5856	6376546	1	True				
ANR	6376755	PrimaryExpression	7		6376546	0					
ANR	6376756	ElseStatement	else		6376546	0					
ANR	6376757	IfStatement	if ( p + 7 < max && ! ( p [ 7 ] & 0x80 ) )		6376546	0					
ANR	6376758	Condition	p + 7 < max && ! ( p [ 7 ] & 0x80 )	239:12:5870:5898	6376546	0	True				
ANR	6376759	AndExpression	p + 7 < max && ! ( p [ 7 ] & 0x80 )		6376546	0		&&			
ANR	6376760	RelationalExpression	p + 7 < max		6376546	0		<			
ANR	6376761	AdditiveExpression	p + 7		6376546	0		+			
ANR	6376762	Identifier	p		6376546	0					
ANR	6376763	PrimaryExpression	7		6376546	1					
ANR	6376764	Identifier	max		6376546	1					
ANR	6376765	UnaryOperationExpression	! ( p [ 7 ] & 0x80 )		6376546	1					
ANR	6376766	UnaryOperator	!		6376546	0					
ANR	6376767	BitAndExpression	p [ 7 ] & 0x80		6376546	1		&			
ANR	6376768	ArrayIndexing	p [ 7 ]		6376546	0					
ANR	6376769	Identifier	p		6376546	0					
ANR	6376770	PrimaryExpression	7		6376546	1					
ANR	6376771	PrimaryExpression	0x80		6376546	1					
ANR	6376772	CompoundStatement		23:43:656:656	6376546	1					
ANR	6376773	ExpressionStatement	* out_value = LEB128_8 ( ut64 )	240:2:5905:5933	6376546	0	True				
ANR	6376774	AssignmentExpression	* out_value = LEB128_8 ( ut64 )		6376546	0		=			
ANR	6376775	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376776	UnaryOperator	*		6376546	0					
ANR	6376777	Identifier	out_value		6376546	1					
ANR	6376778	CallExpression	LEB128_8 ( ut64 )		6376546	1					
ANR	6376779	Callee	LEB128_8		6376546	0					
ANR	6376780	Identifier	LEB128_8		6376546	0					
ANR	6376781	ArgumentList	ut64		6376546	1					
ANR	6376782	Argument	ut64		6376546	0					
ANR	6376783	Identifier	ut64		6376546	0					
ANR	6376784	ReturnStatement	return 8 ;	241:2:5937:5945	6376546	1	True				
ANR	6376785	PrimaryExpression	8		6376546	0					
ANR	6376786	ElseStatement	else		6376546	0					
ANR	6376787	IfStatement	if ( p + 8 < max && ! ( p [ 8 ] & 0x80 ) )		6376546	0					
ANR	6376788	Condition	p + 8 < max && ! ( p [ 8 ] & 0x80 )	242:12:5959:5987	6376546	0	True				
ANR	6376789	AndExpression	p + 8 < max && ! ( p [ 8 ] & 0x80 )		6376546	0		&&			
ANR	6376790	RelationalExpression	p + 8 < max		6376546	0		<			
ANR	6376791	AdditiveExpression	p + 8		6376546	0		+			
ANR	6376792	Identifier	p		6376546	0					
ANR	6376793	PrimaryExpression	8		6376546	1					
ANR	6376794	Identifier	max		6376546	1					
ANR	6376795	UnaryOperationExpression	! ( p [ 8 ] & 0x80 )		6376546	1					
ANR	6376796	UnaryOperator	!		6376546	0					
ANR	6376797	BitAndExpression	p [ 8 ] & 0x80		6376546	1		&			
ANR	6376798	ArrayIndexing	p [ 8 ]		6376546	0					
ANR	6376799	Identifier	p		6376546	0					
ANR	6376800	PrimaryExpression	8		6376546	1					
ANR	6376801	PrimaryExpression	0x80		6376546	1					
ANR	6376802	CompoundStatement		26:43:745:745	6376546	1					
ANR	6376803	ExpressionStatement	* out_value = LEB128_9 ( ut64 )	243:2:5994:6022	6376546	0	True				
ANR	6376804	AssignmentExpression	* out_value = LEB128_9 ( ut64 )		6376546	0		=			
ANR	6376805	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376806	UnaryOperator	*		6376546	0					
ANR	6376807	Identifier	out_value		6376546	1					
ANR	6376808	CallExpression	LEB128_9 ( ut64 )		6376546	1					
ANR	6376809	Callee	LEB128_9		6376546	0					
ANR	6376810	Identifier	LEB128_9		6376546	0					
ANR	6376811	ArgumentList	ut64		6376546	1					
ANR	6376812	Argument	ut64		6376546	0					
ANR	6376813	Identifier	ut64		6376546	0					
ANR	6376814	ReturnStatement	return 9 ;	244:2:6026:6034	6376546	1	True				
ANR	6376815	PrimaryExpression	9		6376546	0					
ANR	6376816	ElseStatement	else		6376546	0					
ANR	6376817	IfStatement	if ( p + 9 < max && ! ( p [ 9 ] & 0x80 ) )		6376546	0					
ANR	6376818	Condition	p + 9 < max && ! ( p [ 9 ] & 0x80 )	245:12:6048:6076	6376546	0	True				
ANR	6376819	AndExpression	p + 9 < max && ! ( p [ 9 ] & 0x80 )		6376546	0		&&			
ANR	6376820	RelationalExpression	p + 9 < max		6376546	0		<			
ANR	6376821	AdditiveExpression	p + 9		6376546	0		+			
ANR	6376822	Identifier	p		6376546	0					
ANR	6376823	PrimaryExpression	9		6376546	1					
ANR	6376824	Identifier	max		6376546	1					
ANR	6376825	UnaryOperationExpression	! ( p [ 9 ] & 0x80 )		6376546	1					
ANR	6376826	UnaryOperator	!		6376546	0					
ANR	6376827	BitAndExpression	p [ 9 ] & 0x80		6376546	1		&			
ANR	6376828	ArrayIndexing	p [ 9 ]		6376546	0					
ANR	6376829	Identifier	p		6376546	0					
ANR	6376830	PrimaryExpression	9		6376546	1					
ANR	6376831	PrimaryExpression	0x80		6376546	1					
ANR	6376832	CompoundStatement		29:43:834:834	6376546	1					
ANR	6376833	ExpressionStatement	* out_value = LEB128_10 ( ut64 )	246:2:6083:6112	6376546	0	True				
ANR	6376834	AssignmentExpression	* out_value = LEB128_10 ( ut64 )		6376546	0		=			
ANR	6376835	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376836	UnaryOperator	*		6376546	0					
ANR	6376837	Identifier	out_value		6376546	1					
ANR	6376838	CallExpression	LEB128_10 ( ut64 )		6376546	1					
ANR	6376839	Callee	LEB128_10		6376546	0					
ANR	6376840	Identifier	LEB128_10		6376546	0					
ANR	6376841	ArgumentList	ut64		6376546	1					
ANR	6376842	Argument	ut64		6376546	0					
ANR	6376843	Identifier	ut64		6376546	0					
ANR	6376844	ReturnStatement	return 10 ;	247:2:6116:6125	6376546	1	True				
ANR	6376845	PrimaryExpression	10		6376546	0					
ANR	6376846	ElseStatement	else		6376546	0					
ANR	6376847	CompoundStatement		32:8:890:890	6376546	0					
ANR	6376848	ExpressionStatement	* out_value = 0	250:2:6160:6174	6376546	0	True				
ANR	6376849	AssignmentExpression	* out_value = 0		6376546	0		=			
ANR	6376850	UnaryOperationExpression	* out_value		6376546	0					
ANR	6376851	UnaryOperator	*		6376546	0					
ANR	6376852	Identifier	out_value		6376546	1					
ANR	6376853	PrimaryExpression	0		6376546	1					
ANR	6376854	ReturnStatement	return 0 ;	251:2:6178:6186	6376546	1	True				
ANR	6376855	PrimaryExpression	0		6376546	0					
ANR	6376856	ReturnType	R_API size_t		6376546	1					
ANR	6376857	Identifier	read_u64_leb128		6376546	2					
ANR	6376858	ParameterList	"const ut8 * p , const ut8 * max , ut64 * out_value"		6376546	3					
ANR	6376859	Parameter	const ut8 * p	217:30:5197:5208	6376546	0	True				
ANR	6376860	ParameterType	const ut8 *		6376546	0					
ANR	6376861	Identifier	p		6376546	1					
ANR	6376862	Parameter	const ut8 * max	217:44:5211:5224	6376546	1	True				
ANR	6376863	ParameterType	const ut8 *		6376546	0					
ANR	6376864	Identifier	max		6376546	1					
ANR	6376865	Parameter	ut64 * out_value	217:60:5227:5241	6376546	2	True				
ANR	6376866	ParameterType	ut64 *		6376546	0					
ANR	6376867	Identifier	out_value		6376546	1					
ANR	6376868	CFGEntryNode	ENTRY		6376546		True				
ANR	6376869	CFGExitNode	EXIT		6376546		True				
ANR	6376870	Symbol	max		6376546						
ANR	6376871	Symbol	LEB128_10		6376546						
ANR	6376872	Symbol	ut64		6376546						
ANR	6376873	Symbol	* out_value		6376546						
ANR	6376874	Symbol	p		6376546						
ANR	6376875	Symbol	LEB128_2		6376546						
ANR	6376876	Symbol	out_value		6376546						
ANR	6376877	Symbol	LEB128_1		6376546						
ANR	6376878	Symbol	LEB128_4		6376546						
ANR	6376879	Symbol	LEB128_3		6376546						
ANR	6376880	Symbol	LEB128_6		6376546						
ANR	6376881	Symbol	LEB128_5		6376546						
ANR	6376882	Symbol	LEB128_8		6376546						
ANR	6376883	Symbol	LEB128_7		6376546						
ANR	6376884	Symbol	LEB128_9		6376546						
ANR	6376885	Symbol	* p		6376546						
ANR	6376886	Function	read_i64_leb128	255:0:6194:7881							
ANR	6376887	FunctionDef	"read_i64_leb128 (const ut8 * p , const ut8 * max , st64 * out_value)"		6376886	0					
ANR	6376888	CompoundStatement		255:77:6271:7881	6376886	0					
ANR	6376889	IfStatement	if ( p < max && ! ( p [ 0 ] & 0x80 ) )		6376886	0					
ANR	6376890	Condition	p < max && ! ( p [ 0 ] & 0x80 )	256:5:6278:6302	6376886	0	True				
ANR	6376891	AndExpression	p < max && ! ( p [ 0 ] & 0x80 )		6376886	0		&&			
ANR	6376892	RelationalExpression	p < max		6376886	0		<			
ANR	6376893	Identifier	p		6376886	0					
ANR	6376894	Identifier	max		6376886	1					
ANR	6376895	UnaryOperationExpression	! ( p [ 0 ] & 0x80 )		6376886	1					
ANR	6376896	UnaryOperator	!		6376886	0					
ANR	6376897	BitAndExpression	p [ 0 ] & 0x80		6376886	1		&			
ANR	6376898	ArrayIndexing	p [ 0 ]		6376886	0					
ANR	6376899	Identifier	p		6376886	0					
ANR	6376900	PrimaryExpression	0		6376886	1					
ANR	6376901	PrimaryExpression	0x80		6376886	1					
ANR	6376902	CompoundStatement		3:2:37:66	6376886	1					
ANR	6376903	IdentifierDeclStatement	ut64 result = LEB128_1 ( ut64 ) ;	257:2:6309:6338	6376886	0	True				
ANR	6376904	IdentifierDecl	result = LEB128_1 ( ut64 )		6376886	0					
ANR	6376905	IdentifierDeclType	ut64		6376886	0					
ANR	6376906	Identifier	result		6376886	1					
ANR	6376907	AssignmentExpression	result = LEB128_1 ( ut64 )		6376886	2		=			
ANR	6376908	Identifier	result		6376886	0					
ANR	6376909	CallExpression	LEB128_1 ( ut64 )		6376886	1					
ANR	6376910	Callee	LEB128_1		6376886	0					
ANR	6376911	Identifier	LEB128_1		6376886	0					
ANR	6376912	ArgumentList	ut64		6376886	1					
ANR	6376913	Argument	ut64		6376886	0					
ANR	6376914	Identifier	ut64		6376886	0					
ANR	6376915	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 6 )"	258:2:6342:6384	6376886	1	True				
ANR	6376916	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 6 )"		6376886	0		=			
ANR	6376917	UnaryOperationExpression	* out_value		6376886	0					
ANR	6376918	UnaryOperator	*		6376886	0					
ANR	6376919	Identifier	out_value		6376886	1					
ANR	6376920	CallExpression	"SIGN_EXTEND ( ut64 , result , 6 )"		6376886	1					
ANR	6376921	Callee	SIGN_EXTEND		6376886	0					
ANR	6376922	Identifier	SIGN_EXTEND		6376886	0					
ANR	6376923	ArgumentList	ut64		6376886	1					
ANR	6376924	Argument	ut64		6376886	0					
ANR	6376925	Identifier	ut64		6376886	0					
ANR	6376926	Argument	result		6376886	1					
ANR	6376927	Identifier	result		6376886	0					
ANR	6376928	Argument	6		6376886	2					
ANR	6376929	PrimaryExpression	6		6376886	0					
ANR	6376930	ReturnStatement	return 1 ;	259:2:6388:6396	6376886	2	True				
ANR	6376931	PrimaryExpression	1		6376886	0					
ANR	6376932	ElseStatement	else		6376886	0					
ANR	6376933	IfStatement	if ( p + 1 < max && ! ( p [ 1 ] & 0x80 ) )		6376886	0					
ANR	6376934	Condition	p + 1 < max && ! ( p [ 1 ] & 0x80 )	260:12:6410:6438	6376886	0	True				
ANR	6376935	AndExpression	p + 1 < max && ! ( p [ 1 ] & 0x80 )		6376886	0		&&			
ANR	6376936	RelationalExpression	p + 1 < max		6376886	0		<			
ANR	6376937	AdditiveExpression	p + 1		6376886	0		+			
ANR	6376938	Identifier	p		6376886	0					
ANR	6376939	PrimaryExpression	1		6376886	1					
ANR	6376940	Identifier	max		6376886	1					
ANR	6376941	UnaryOperationExpression	! ( p [ 1 ] & 0x80 )		6376886	1					
ANR	6376942	UnaryOperator	!		6376886	0					
ANR	6376943	BitAndExpression	p [ 1 ] & 0x80		6376886	1		&			
ANR	6376944	ArrayIndexing	p [ 1 ]		6376886	0					
ANR	6376945	Identifier	p		6376886	0					
ANR	6376946	PrimaryExpression	1		6376886	1					
ANR	6376947	PrimaryExpression	0x80		6376886	1					
ANR	6376948	CompoundStatement		7:2:173:201	6376886	1					
ANR	6376949	IdentifierDeclStatement	ut64 result = LEB128_2 ( ut64 ) ;	261:2:6445:6473	6376886	0	True				
ANR	6376950	IdentifierDecl	result = LEB128_2 ( ut64 )		6376886	0					
ANR	6376951	IdentifierDeclType	ut64		6376886	0					
ANR	6376952	Identifier	result		6376886	1					
ANR	6376953	AssignmentExpression	result = LEB128_2 ( ut64 )		6376886	2		=			
ANR	6376954	Identifier	result		6376886	0					
ANR	6376955	CallExpression	LEB128_2 ( ut64 )		6376886	1					
ANR	6376956	Callee	LEB128_2		6376886	0					
ANR	6376957	Identifier	LEB128_2		6376886	0					
ANR	6376958	ArgumentList	ut64		6376886	1					
ANR	6376959	Argument	ut64		6376886	0					
ANR	6376960	Identifier	ut64		6376886	0					
ANR	6376961	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 13 )"	262:2:6477:6520	6376886	1	True				
ANR	6376962	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 13 )"		6376886	0		=			
ANR	6376963	UnaryOperationExpression	* out_value		6376886	0					
ANR	6376964	UnaryOperator	*		6376886	0					
ANR	6376965	Identifier	out_value		6376886	1					
ANR	6376966	CallExpression	"SIGN_EXTEND ( ut64 , result , 13 )"		6376886	1					
ANR	6376967	Callee	SIGN_EXTEND		6376886	0					
ANR	6376968	Identifier	SIGN_EXTEND		6376886	0					
ANR	6376969	ArgumentList	ut64		6376886	1					
ANR	6376970	Argument	ut64		6376886	0					
ANR	6376971	Identifier	ut64		6376886	0					
ANR	6376972	Argument	result		6376886	1					
ANR	6376973	Identifier	result		6376886	0					
ANR	6376974	Argument	13		6376886	2					
ANR	6376975	PrimaryExpression	13		6376886	0					
ANR	6376976	ReturnStatement	return 2 ;	263:2:6524:6532	6376886	2	True				
ANR	6376977	PrimaryExpression	2		6376886	0					
ANR	6376978	ElseStatement	else		6376886	0					
ANR	6376979	IfStatement	if ( p + 2 < max && ! ( p [ 2 ] & 0x80 ) )		6376886	0					
ANR	6376980	Condition	p + 2 < max && ! ( p [ 2 ] & 0x80 )	264:12:6546:6574	6376886	0	True				
ANR	6376981	AndExpression	p + 2 < max && ! ( p [ 2 ] & 0x80 )		6376886	0		&&			
ANR	6376982	RelationalExpression	p + 2 < max		6376886	0		<			
ANR	6376983	AdditiveExpression	p + 2		6376886	0		+			
ANR	6376984	Identifier	p		6376886	0					
ANR	6376985	PrimaryExpression	2		6376886	1					
ANR	6376986	Identifier	max		6376886	1					
ANR	6376987	UnaryOperationExpression	! ( p [ 2 ] & 0x80 )		6376886	1					
ANR	6376988	UnaryOperator	!		6376886	0					
ANR	6376989	BitAndExpression	p [ 2 ] & 0x80		6376886	1		&			
ANR	6376990	ArrayIndexing	p [ 2 ]		6376886	0					
ANR	6376991	Identifier	p		6376886	0					
ANR	6376992	PrimaryExpression	2		6376886	1					
ANR	6376993	PrimaryExpression	0x80		6376886	1					
ANR	6376994	CompoundStatement		11:2:309:338	6376886	1					
ANR	6376995	IdentifierDeclStatement	ut64 result = LEB128_3 ( ut64 ) ;	265:2:6581:6610	6376886	0	True				
ANR	6376996	IdentifierDecl	result = LEB128_3 ( ut64 )		6376886	0					
ANR	6376997	IdentifierDeclType	ut64		6376886	0					
ANR	6376998	Identifier	result		6376886	1					
ANR	6376999	AssignmentExpression	result = LEB128_3 ( ut64 )		6376886	2		=			
ANR	6377000	Identifier	result		6376886	0					
ANR	6377001	CallExpression	LEB128_3 ( ut64 )		6376886	1					
ANR	6377002	Callee	LEB128_3		6376886	0					
ANR	6377003	Identifier	LEB128_3		6376886	0					
ANR	6377004	ArgumentList	ut64		6376886	1					
ANR	6377005	Argument	ut64		6376886	0					
ANR	6377006	Identifier	ut64		6376886	0					
ANR	6377007	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 20 )"	266:2:6614:6657	6376886	1	True				
ANR	6377008	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 20 )"		6376886	0		=			
ANR	6377009	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377010	UnaryOperator	*		6376886	0					
ANR	6377011	Identifier	out_value		6376886	1					
ANR	6377012	CallExpression	"SIGN_EXTEND ( ut64 , result , 20 )"		6376886	1					
ANR	6377013	Callee	SIGN_EXTEND		6376886	0					
ANR	6377014	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377015	ArgumentList	ut64		6376886	1					
ANR	6377016	Argument	ut64		6376886	0					
ANR	6377017	Identifier	ut64		6376886	0					
ANR	6377018	Argument	result		6376886	1					
ANR	6377019	Identifier	result		6376886	0					
ANR	6377020	Argument	20		6376886	2					
ANR	6377021	PrimaryExpression	20		6376886	0					
ANR	6377022	ReturnStatement	return 3 ;	267:2:6661:6669	6376886	2	True				
ANR	6377023	PrimaryExpression	3		6376886	0					
ANR	6377024	ElseStatement	else		6376886	0					
ANR	6377025	IfStatement	if ( p + 3 < max && ! ( p [ 3 ] & 0x80 ) )		6376886	0					
ANR	6377026	Condition	p + 3 < max && ! ( p [ 3 ] & 0x80 )	268:12:6683:6711	6376886	0	True				
ANR	6377027	AndExpression	p + 3 < max && ! ( p [ 3 ] & 0x80 )		6376886	0		&&			
ANR	6377028	RelationalExpression	p + 3 < max		6376886	0		<			
ANR	6377029	AdditiveExpression	p + 3		6376886	0		+			
ANR	6377030	Identifier	p		6376886	0					
ANR	6377031	PrimaryExpression	3		6376886	1					
ANR	6377032	Identifier	max		6376886	1					
ANR	6377033	UnaryOperationExpression	! ( p [ 3 ] & 0x80 )		6376886	1					
ANR	6377034	UnaryOperator	!		6376886	0					
ANR	6377035	BitAndExpression	p [ 3 ] & 0x80		6376886	1		&			
ANR	6377036	ArrayIndexing	p [ 3 ]		6376886	0					
ANR	6377037	Identifier	p		6376886	0					
ANR	6377038	PrimaryExpression	3		6376886	1					
ANR	6377039	PrimaryExpression	0x80		6376886	1					
ANR	6377040	CompoundStatement		15:2:446:475	6376886	1					
ANR	6377041	IdentifierDeclStatement	ut64 result = LEB128_4 ( ut64 ) ;	269:2:6718:6747	6376886	0	True				
ANR	6377042	IdentifierDecl	result = LEB128_4 ( ut64 )		6376886	0					
ANR	6377043	IdentifierDeclType	ut64		6376886	0					
ANR	6377044	Identifier	result		6376886	1					
ANR	6377045	AssignmentExpression	result = LEB128_4 ( ut64 )		6376886	2		=			
ANR	6377046	Identifier	result		6376886	0					
ANR	6377047	CallExpression	LEB128_4 ( ut64 )		6376886	1					
ANR	6377048	Callee	LEB128_4		6376886	0					
ANR	6377049	Identifier	LEB128_4		6376886	0					
ANR	6377050	ArgumentList	ut64		6376886	1					
ANR	6377051	Argument	ut64		6376886	0					
ANR	6377052	Identifier	ut64		6376886	0					
ANR	6377053	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 27 )"	270:2:6751:6794	6376886	1	True				
ANR	6377054	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 27 )"		6376886	0		=			
ANR	6377055	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377056	UnaryOperator	*		6376886	0					
ANR	6377057	Identifier	out_value		6376886	1					
ANR	6377058	CallExpression	"SIGN_EXTEND ( ut64 , result , 27 )"		6376886	1					
ANR	6377059	Callee	SIGN_EXTEND		6376886	0					
ANR	6377060	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377061	ArgumentList	ut64		6376886	1					
ANR	6377062	Argument	ut64		6376886	0					
ANR	6377063	Identifier	ut64		6376886	0					
ANR	6377064	Argument	result		6376886	1					
ANR	6377065	Identifier	result		6376886	0					
ANR	6377066	Argument	27		6376886	2					
ANR	6377067	PrimaryExpression	27		6376886	0					
ANR	6377068	ReturnStatement	return 4 ;	271:2:6798:6806	6376886	2	True				
ANR	6377069	PrimaryExpression	4		6376886	0					
ANR	6377070	ElseStatement	else		6376886	0					
ANR	6377071	IfStatement	if ( p + 4 < max && ! ( p [ 4 ] & 0x80 ) )		6376886	0					
ANR	6377072	Condition	p + 4 < max && ! ( p [ 4 ] & 0x80 )	272:12:6820:6848	6376886	0	True				
ANR	6377073	AndExpression	p + 4 < max && ! ( p [ 4 ] & 0x80 )		6376886	0		&&			
ANR	6377074	RelationalExpression	p + 4 < max		6376886	0		<			
ANR	6377075	AdditiveExpression	p + 4		6376886	0		+			
ANR	6377076	Identifier	p		6376886	0					
ANR	6377077	PrimaryExpression	4		6376886	1					
ANR	6377078	Identifier	max		6376886	1					
ANR	6377079	UnaryOperationExpression	! ( p [ 4 ] & 0x80 )		6376886	1					
ANR	6377080	UnaryOperator	!		6376886	0					
ANR	6377081	BitAndExpression	p [ 4 ] & 0x80		6376886	1		&			
ANR	6377082	ArrayIndexing	p [ 4 ]		6376886	0					
ANR	6377083	Identifier	p		6376886	0					
ANR	6377084	PrimaryExpression	4		6376886	1					
ANR	6377085	PrimaryExpression	0x80		6376886	1					
ANR	6377086	CompoundStatement		19:2:583:612	6376886	1					
ANR	6377087	IdentifierDeclStatement	ut64 result = LEB128_5 ( ut64 ) ;	273:2:6855:6884	6376886	0	True				
ANR	6377088	IdentifierDecl	result = LEB128_5 ( ut64 )		6376886	0					
ANR	6377089	IdentifierDeclType	ut64		6376886	0					
ANR	6377090	Identifier	result		6376886	1					
ANR	6377091	AssignmentExpression	result = LEB128_5 ( ut64 )		6376886	2		=			
ANR	6377092	Identifier	result		6376886	0					
ANR	6377093	CallExpression	LEB128_5 ( ut64 )		6376886	1					
ANR	6377094	Callee	LEB128_5		6376886	0					
ANR	6377095	Identifier	LEB128_5		6376886	0					
ANR	6377096	ArgumentList	ut64		6376886	1					
ANR	6377097	Argument	ut64		6376886	0					
ANR	6377098	Identifier	ut64		6376886	0					
ANR	6377099	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 34 )"	274:2:6888:6931	6376886	1	True				
ANR	6377100	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 34 )"		6376886	0		=			
ANR	6377101	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377102	UnaryOperator	*		6376886	0					
ANR	6377103	Identifier	out_value		6376886	1					
ANR	6377104	CallExpression	"SIGN_EXTEND ( ut64 , result , 34 )"		6376886	1					
ANR	6377105	Callee	SIGN_EXTEND		6376886	0					
ANR	6377106	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377107	ArgumentList	ut64		6376886	1					
ANR	6377108	Argument	ut64		6376886	0					
ANR	6377109	Identifier	ut64		6376886	0					
ANR	6377110	Argument	result		6376886	1					
ANR	6377111	Identifier	result		6376886	0					
ANR	6377112	Argument	34		6376886	2					
ANR	6377113	PrimaryExpression	34		6376886	0					
ANR	6377114	ReturnStatement	return 5 ;	275:2:6935:6943	6376886	2	True				
ANR	6377115	PrimaryExpression	5		6376886	0					
ANR	6377116	ElseStatement	else		6376886	0					
ANR	6377117	IfStatement	if ( p + 5 < max && ! ( p [ 5 ] & 0x80 ) )		6376886	0					
ANR	6377118	Condition	p + 5 < max && ! ( p [ 5 ] & 0x80 )	276:12:6957:6985	6376886	0	True				
ANR	6377119	AndExpression	p + 5 < max && ! ( p [ 5 ] & 0x80 )		6376886	0		&&			
ANR	6377120	RelationalExpression	p + 5 < max		6376886	0		<			
ANR	6377121	AdditiveExpression	p + 5		6376886	0		+			
ANR	6377122	Identifier	p		6376886	0					
ANR	6377123	PrimaryExpression	5		6376886	1					
ANR	6377124	Identifier	max		6376886	1					
ANR	6377125	UnaryOperationExpression	! ( p [ 5 ] & 0x80 )		6376886	1					
ANR	6377126	UnaryOperator	!		6376886	0					
ANR	6377127	BitAndExpression	p [ 5 ] & 0x80		6376886	1		&			
ANR	6377128	ArrayIndexing	p [ 5 ]		6376886	0					
ANR	6377129	Identifier	p		6376886	0					
ANR	6377130	PrimaryExpression	5		6376886	1					
ANR	6377131	PrimaryExpression	0x80		6376886	1					
ANR	6377132	CompoundStatement		23:2:720:749	6376886	1					
ANR	6377133	IdentifierDeclStatement	ut64 result = LEB128_6 ( ut64 ) ;	277:2:6992:7021	6376886	0	True				
ANR	6377134	IdentifierDecl	result = LEB128_6 ( ut64 )		6376886	0					
ANR	6377135	IdentifierDeclType	ut64		6376886	0					
ANR	6377136	Identifier	result		6376886	1					
ANR	6377137	AssignmentExpression	result = LEB128_6 ( ut64 )		6376886	2		=			
ANR	6377138	Identifier	result		6376886	0					
ANR	6377139	CallExpression	LEB128_6 ( ut64 )		6376886	1					
ANR	6377140	Callee	LEB128_6		6376886	0					
ANR	6377141	Identifier	LEB128_6		6376886	0					
ANR	6377142	ArgumentList	ut64		6376886	1					
ANR	6377143	Argument	ut64		6376886	0					
ANR	6377144	Identifier	ut64		6376886	0					
ANR	6377145	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 41 )"	278:2:7025:7068	6376886	1	True				
ANR	6377146	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 41 )"		6376886	0		=			
ANR	6377147	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377148	UnaryOperator	*		6376886	0					
ANR	6377149	Identifier	out_value		6376886	1					
ANR	6377150	CallExpression	"SIGN_EXTEND ( ut64 , result , 41 )"		6376886	1					
ANR	6377151	Callee	SIGN_EXTEND		6376886	0					
ANR	6377152	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377153	ArgumentList	ut64		6376886	1					
ANR	6377154	Argument	ut64		6376886	0					
ANR	6377155	Identifier	ut64		6376886	0					
ANR	6377156	Argument	result		6376886	1					
ANR	6377157	Identifier	result		6376886	0					
ANR	6377158	Argument	41		6376886	2					
ANR	6377159	PrimaryExpression	41		6376886	0					
ANR	6377160	ReturnStatement	return 6 ;	279:2:7072:7080	6376886	2	True				
ANR	6377161	PrimaryExpression	6		6376886	0					
ANR	6377162	ElseStatement	else		6376886	0					
ANR	6377163	IfStatement	if ( p + 6 < max && ! ( p [ 6 ] & 0x80 ) )		6376886	0					
ANR	6377164	Condition	p + 6 < max && ! ( p [ 6 ] & 0x80 )	280:12:7094:7122	6376886	0	True				
ANR	6377165	AndExpression	p + 6 < max && ! ( p [ 6 ] & 0x80 )		6376886	0		&&			
ANR	6377166	RelationalExpression	p + 6 < max		6376886	0		<			
ANR	6377167	AdditiveExpression	p + 6		6376886	0		+			
ANR	6377168	Identifier	p		6376886	0					
ANR	6377169	PrimaryExpression	6		6376886	1					
ANR	6377170	Identifier	max		6376886	1					
ANR	6377171	UnaryOperationExpression	! ( p [ 6 ] & 0x80 )		6376886	1					
ANR	6377172	UnaryOperator	!		6376886	0					
ANR	6377173	BitAndExpression	p [ 6 ] & 0x80		6376886	1		&			
ANR	6377174	ArrayIndexing	p [ 6 ]		6376886	0					
ANR	6377175	Identifier	p		6376886	0					
ANR	6377176	PrimaryExpression	6		6376886	1					
ANR	6377177	PrimaryExpression	0x80		6376886	1					
ANR	6377178	CompoundStatement		27:2:857:886	6376886	1					
ANR	6377179	IdentifierDeclStatement	ut64 result = LEB128_7 ( ut64 ) ;	281:2:7129:7158	6376886	0	True				
ANR	6377180	IdentifierDecl	result = LEB128_7 ( ut64 )		6376886	0					
ANR	6377181	IdentifierDeclType	ut64		6376886	0					
ANR	6377182	Identifier	result		6376886	1					
ANR	6377183	AssignmentExpression	result = LEB128_7 ( ut64 )		6376886	2		=			
ANR	6377184	Identifier	result		6376886	0					
ANR	6377185	CallExpression	LEB128_7 ( ut64 )		6376886	1					
ANR	6377186	Callee	LEB128_7		6376886	0					
ANR	6377187	Identifier	LEB128_7		6376886	0					
ANR	6377188	ArgumentList	ut64		6376886	1					
ANR	6377189	Argument	ut64		6376886	0					
ANR	6377190	Identifier	ut64		6376886	0					
ANR	6377191	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 48 )"	282:2:7162:7205	6376886	1	True				
ANR	6377192	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 48 )"		6376886	0		=			
ANR	6377193	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377194	UnaryOperator	*		6376886	0					
ANR	6377195	Identifier	out_value		6376886	1					
ANR	6377196	CallExpression	"SIGN_EXTEND ( ut64 , result , 48 )"		6376886	1					
ANR	6377197	Callee	SIGN_EXTEND		6376886	0					
ANR	6377198	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377199	ArgumentList	ut64		6376886	1					
ANR	6377200	Argument	ut64		6376886	0					
ANR	6377201	Identifier	ut64		6376886	0					
ANR	6377202	Argument	result		6376886	1					
ANR	6377203	Identifier	result		6376886	0					
ANR	6377204	Argument	48		6376886	2					
ANR	6377205	PrimaryExpression	48		6376886	0					
ANR	6377206	ReturnStatement	return 7 ;	283:2:7209:7217	6376886	2	True				
ANR	6377207	PrimaryExpression	7		6376886	0					
ANR	6377208	ElseStatement	else		6376886	0					
ANR	6377209	IfStatement	if ( p + 7 < max && ! ( p [ 7 ] & 0x80 ) )		6376886	0					
ANR	6377210	Condition	p + 7 < max && ! ( p [ 7 ] & 0x80 )	284:12:7231:7259	6376886	0	True				
ANR	6377211	AndExpression	p + 7 < max && ! ( p [ 7 ] & 0x80 )		6376886	0		&&			
ANR	6377212	RelationalExpression	p + 7 < max		6376886	0		<			
ANR	6377213	AdditiveExpression	p + 7		6376886	0		+			
ANR	6377214	Identifier	p		6376886	0					
ANR	6377215	PrimaryExpression	7		6376886	1					
ANR	6377216	Identifier	max		6376886	1					
ANR	6377217	UnaryOperationExpression	! ( p [ 7 ] & 0x80 )		6376886	1					
ANR	6377218	UnaryOperator	!		6376886	0					
ANR	6377219	BitAndExpression	p [ 7 ] & 0x80		6376886	1		&			
ANR	6377220	ArrayIndexing	p [ 7 ]		6376886	0					
ANR	6377221	Identifier	p		6376886	0					
ANR	6377222	PrimaryExpression	7		6376886	1					
ANR	6377223	PrimaryExpression	0x80		6376886	1					
ANR	6377224	CompoundStatement		31:2:994:1023	6376886	1					
ANR	6377225	IdentifierDeclStatement	ut64 result = LEB128_8 ( ut64 ) ;	285:2:7266:7295	6376886	0	True				
ANR	6377226	IdentifierDecl	result = LEB128_8 ( ut64 )		6376886	0					
ANR	6377227	IdentifierDeclType	ut64		6376886	0					
ANR	6377228	Identifier	result		6376886	1					
ANR	6377229	AssignmentExpression	result = LEB128_8 ( ut64 )		6376886	2		=			
ANR	6377230	Identifier	result		6376886	0					
ANR	6377231	CallExpression	LEB128_8 ( ut64 )		6376886	1					
ANR	6377232	Callee	LEB128_8		6376886	0					
ANR	6377233	Identifier	LEB128_8		6376886	0					
ANR	6377234	ArgumentList	ut64		6376886	1					
ANR	6377235	Argument	ut64		6376886	0					
ANR	6377236	Identifier	ut64		6376886	0					
ANR	6377237	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 55 )"	286:2:7299:7342	6376886	1	True				
ANR	6377238	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 55 )"		6376886	0		=			
ANR	6377239	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377240	UnaryOperator	*		6376886	0					
ANR	6377241	Identifier	out_value		6376886	1					
ANR	6377242	CallExpression	"SIGN_EXTEND ( ut64 , result , 55 )"		6376886	1					
ANR	6377243	Callee	SIGN_EXTEND		6376886	0					
ANR	6377244	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377245	ArgumentList	ut64		6376886	1					
ANR	6377246	Argument	ut64		6376886	0					
ANR	6377247	Identifier	ut64		6376886	0					
ANR	6377248	Argument	result		6376886	1					
ANR	6377249	Identifier	result		6376886	0					
ANR	6377250	Argument	55		6376886	2					
ANR	6377251	PrimaryExpression	55		6376886	0					
ANR	6377252	ReturnStatement	return 8 ;	287:2:7346:7354	6376886	2	True				
ANR	6377253	PrimaryExpression	8		6376886	0					
ANR	6377254	ElseStatement	else		6376886	0					
ANR	6377255	IfStatement	if ( p + 8 < max && ! ( p [ 8 ] & 0x80 ) )		6376886	0					
ANR	6377256	Condition	p + 8 < max && ! ( p [ 8 ] & 0x80 )	288:12:7368:7396	6376886	0	True				
ANR	6377257	AndExpression	p + 8 < max && ! ( p [ 8 ] & 0x80 )		6376886	0		&&			
ANR	6377258	RelationalExpression	p + 8 < max		6376886	0		<			
ANR	6377259	AdditiveExpression	p + 8		6376886	0		+			
ANR	6377260	Identifier	p		6376886	0					
ANR	6377261	PrimaryExpression	8		6376886	1					
ANR	6377262	Identifier	max		6376886	1					
ANR	6377263	UnaryOperationExpression	! ( p [ 8 ] & 0x80 )		6376886	1					
ANR	6377264	UnaryOperator	!		6376886	0					
ANR	6377265	BitAndExpression	p [ 8 ] & 0x80		6376886	1		&			
ANR	6377266	ArrayIndexing	p [ 8 ]		6376886	0					
ANR	6377267	Identifier	p		6376886	0					
ANR	6377268	PrimaryExpression	8		6376886	1					
ANR	6377269	PrimaryExpression	0x80		6376886	1					
ANR	6377270	CompoundStatement		35:2:1131:1160	6376886	1					
ANR	6377271	IdentifierDeclStatement	ut64 result = LEB128_9 ( ut64 ) ;	289:2:7403:7432	6376886	0	True				
ANR	6377272	IdentifierDecl	result = LEB128_9 ( ut64 )		6376886	0					
ANR	6377273	IdentifierDeclType	ut64		6376886	0					
ANR	6377274	Identifier	result		6376886	1					
ANR	6377275	AssignmentExpression	result = LEB128_9 ( ut64 )		6376886	2		=			
ANR	6377276	Identifier	result		6376886	0					
ANR	6377277	CallExpression	LEB128_9 ( ut64 )		6376886	1					
ANR	6377278	Callee	LEB128_9		6376886	0					
ANR	6377279	Identifier	LEB128_9		6376886	0					
ANR	6377280	ArgumentList	ut64		6376886	1					
ANR	6377281	Argument	ut64		6376886	0					
ANR	6377282	Identifier	ut64		6376886	0					
ANR	6377283	ExpressionStatement	"* out_value = SIGN_EXTEND ( ut64 , result , 62 )"	290:2:7436:7479	6376886	1	True				
ANR	6377284	AssignmentExpression	"* out_value = SIGN_EXTEND ( ut64 , result , 62 )"		6376886	0		=			
ANR	6377285	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377286	UnaryOperator	*		6376886	0					
ANR	6377287	Identifier	out_value		6376886	1					
ANR	6377288	CallExpression	"SIGN_EXTEND ( ut64 , result , 62 )"		6376886	1					
ANR	6377289	Callee	SIGN_EXTEND		6376886	0					
ANR	6377290	Identifier	SIGN_EXTEND		6376886	0					
ANR	6377291	ArgumentList	ut64		6376886	1					
ANR	6377292	Argument	ut64		6376886	0					
ANR	6377293	Identifier	ut64		6376886	0					
ANR	6377294	Argument	result		6376886	1					
ANR	6377295	Identifier	result		6376886	0					
ANR	6377296	Argument	62		6376886	2					
ANR	6377297	PrimaryExpression	62		6376886	0					
ANR	6377298	ReturnStatement	return 9 ;	291:2:7483:7491	6376886	2	True				
ANR	6377299	PrimaryExpression	9		6376886	0					
ANR	6377300	ElseStatement	else		6376886	0					
ANR	6377301	IfStatement	if ( p + 9 < max && ! ( p [ 9 ] & 0x80 ) )		6376886	0					
ANR	6377302	Condition	p + 9 < max && ! ( p [ 9 ] & 0x80 )	292:12:7505:7533	6376886	0	True				
ANR	6377303	AndExpression	p + 9 < max && ! ( p [ 9 ] & 0x80 )		6376886	0		&&			
ANR	6377304	RelationalExpression	p + 9 < max		6376886	0		<			
ANR	6377305	AdditiveExpression	p + 9		6376886	0		+			
ANR	6377306	Identifier	p		6376886	0					
ANR	6377307	PrimaryExpression	9		6376886	1					
ANR	6377308	Identifier	max		6376886	1					
ANR	6377309	UnaryOperationExpression	! ( p [ 9 ] & 0x80 )		6376886	1					
ANR	6377310	UnaryOperator	!		6376886	0					
ANR	6377311	BitAndExpression	p [ 9 ] & 0x80		6376886	1		&			
ANR	6377312	ArrayIndexing	p [ 9 ]		6376886	0					
ANR	6377313	Identifier	p		6376886	0					
ANR	6377314	PrimaryExpression	9		6376886	1					
ANR	6377315	PrimaryExpression	0x80		6376886	1					
ANR	6377316	CompoundStatement		45:2:1495:1525	6376886	1					
ANR	6377317	IdentifierDeclStatement	bool sign_bit_set = ( p [ 9 ] & 0x1 ) ;	294:2:7604:7636	6376886	0	True				
ANR	6377318	IdentifierDecl	sign_bit_set = ( p [ 9 ] & 0x1 )		6376886	0					
ANR	6377319	IdentifierDeclType	bool		6376886	0					
ANR	6377320	Identifier	sign_bit_set		6376886	1					
ANR	6377321	AssignmentExpression	sign_bit_set = ( p [ 9 ] & 0x1 )		6376886	2		=			
ANR	6377322	Identifier	sign_bit_set		6376886	0					
ANR	6377323	BitAndExpression	p [ 9 ] & 0x1		6376886	1		&			
ANR	6377324	ArrayIndexing	p [ 9 ]		6376886	0					
ANR	6377325	Identifier	p		6376886	0					
ANR	6377326	PrimaryExpression	9		6376886	1					
ANR	6377327	PrimaryExpression	0x1		6376886	1					
ANR	6377328	IdentifierDeclStatement	int top_bits = p [ 9 ] & 0xfe ;	295:2:7640:7666	6376886	1	True				
ANR	6377329	IdentifierDecl	top_bits = p [ 9 ] & 0xfe		6376886	0					
ANR	6377330	IdentifierDeclType	int		6376886	0					
ANR	6377331	Identifier	top_bits		6376886	1					
ANR	6377332	AssignmentExpression	top_bits = p [ 9 ] & 0xfe		6376886	2		=			
ANR	6377333	Identifier	top_bits		6376886	0					
ANR	6377334	BitAndExpression	p [ 9 ] & 0xfe		6376886	1		&			
ANR	6377335	ArrayIndexing	p [ 9 ]		6376886	0					
ANR	6377336	Identifier	p		6376886	0					
ANR	6377337	PrimaryExpression	9		6376886	1					
ANR	6377338	PrimaryExpression	0xfe		6376886	1					
ANR	6377339	IfStatement	if ( ( sign_bit_set && top_bits != 0x7e ) || ( ! sign_bit_set && top_bits != 0 ) )		6376886	2					
ANR	6377340	Condition	( sign_bit_set && top_bits != 0x7e ) || ( ! sign_bit_set && top_bits != 0 )	296:6:7674:7743	6376886	0	True				
ANR	6377341	OrExpression	( sign_bit_set && top_bits != 0x7e ) || ( ! sign_bit_set && top_bits != 0 )		6376886	0		||			
ANR	6377342	AndExpression	sign_bit_set && top_bits != 0x7e		6376886	0		&&			
ANR	6377343	Identifier	sign_bit_set		6376886	0					
ANR	6377344	EqualityExpression	top_bits != 0x7e		6376886	1		!=			
ANR	6377345	Identifier	top_bits		6376886	0					
ANR	6377346	PrimaryExpression	0x7e		6376886	1					
ANR	6377347	AndExpression	! sign_bit_set && top_bits != 0		6376886	1		&&			
ANR	6377348	UnaryOperationExpression	! sign_bit_set		6376886	0					
ANR	6377349	UnaryOperator	!		6376886	0					
ANR	6377350	Identifier	sign_bit_set		6376886	1					
ANR	6377351	EqualityExpression	top_bits != 0		6376886	1		!=			
ANR	6377352	Identifier	top_bits		6376886	0					
ANR	6377353	PrimaryExpression	0		6376886	1					
ANR	6377354	CompoundStatement		42:78:1474:1474	6376886	1					
ANR	6377355	ReturnStatement	return 0 ;	297:3:7751:7759	6376886	0	True				
ANR	6377356	PrimaryExpression	0		6376886	0					
ANR	6377357	IdentifierDeclStatement	ut64 result = LEB128_10 ( ut64 ) ;	299:2:7767:7797	6376886	3	True				
ANR	6377358	IdentifierDecl	result = LEB128_10 ( ut64 )		6376886	0					
ANR	6377359	IdentifierDeclType	ut64		6376886	0					
ANR	6377360	Identifier	result		6376886	1					
ANR	6377361	AssignmentExpression	result = LEB128_10 ( ut64 )		6376886	2		=			
ANR	6377362	Identifier	result		6376886	0					
ANR	6377363	CallExpression	LEB128_10 ( ut64 )		6376886	1					
ANR	6377364	Callee	LEB128_10		6376886	0					
ANR	6377365	Identifier	LEB128_10		6376886	0					
ANR	6377366	ArgumentList	ut64		6376886	1					
ANR	6377367	Argument	ut64		6376886	0					
ANR	6377368	Identifier	ut64		6376886	0					
ANR	6377369	ExpressionStatement	* out_value = result	300:2:7801:7820	6376886	4	True				
ANR	6377370	AssignmentExpression	* out_value = result		6376886	0		=			
ANR	6377371	UnaryOperationExpression	* out_value		6376886	0					
ANR	6377372	UnaryOperator	*		6376886	0					
ANR	6377373	Identifier	out_value		6376886	1					
ANR	6377374	Identifier	result		6376886	1					
ANR	6377375	ReturnStatement	return 10 ;	301:2:7824:7833	6376886	5	True				
ANR	6377376	PrimaryExpression	10		6376886	0					
ANR	6377377	ElseStatement	else		6376886	0					
ANR	6377378	CompoundStatement		48:8:1571:1571	6376886	0					
ANR	6377379	ReturnStatement	return 0 ;	304:2:7868:7876	6376886	0	True				
ANR	6377380	PrimaryExpression	0		6376886	0					
ANR	6377381	ReturnType	R_API size_t		6376886	1					
ANR	6377382	Identifier	read_i64_leb128		6376886	2					
ANR	6377383	ParameterList	"const ut8 * p , const ut8 * max , st64 * out_value"		6376886	3					
ANR	6377384	Parameter	const ut8 * p	255:30:6224:6235	6376886	0	True				
ANR	6377385	ParameterType	const ut8 *		6376886	0					
ANR	6377386	Identifier	p		6376886	1					
ANR	6377387	Parameter	const ut8 * max	255:44:6238:6251	6376886	1	True				
ANR	6377388	ParameterType	const ut8 *		6376886	0					
ANR	6377389	Identifier	max		6376886	1					
ANR	6377390	Parameter	st64 * out_value	255:60:6254:6268	6376886	2	True				
ANR	6377391	ParameterType	st64 *		6376886	0					
ANR	6377392	Identifier	out_value		6376886	1					
ANR	6377393	CFGEntryNode	ENTRY		6376886		True				
ANR	6377394	CFGExitNode	EXIT		6376886		True				
ANR	6377395	Symbol	max		6376886						
ANR	6377396	Symbol	LEB128_10		6376886						
ANR	6377397	Symbol	SIGN_EXTEND		6376886						
ANR	6377398	Symbol	ut64		6376886						
ANR	6377399	Symbol	* out_value		6376886						
ANR	6377400	Symbol	p		6376886						
ANR	6377401	Symbol	result		6376886						
ANR	6377402	Symbol	LEB128_2		6376886						
ANR	6377403	Symbol	out_value		6376886						
ANR	6377404	Symbol	LEB128_1		6376886						
ANR	6377405	Symbol	LEB128_4		6376886						
ANR	6377406	Symbol	LEB128_3		6376886						
ANR	6377407	Symbol	sign_bit_set		6376886						
ANR	6377408	Symbol	top_bits		6376886						
ANR	6377409	Symbol	LEB128_6		6376886						
ANR	6377410	Symbol	LEB128_5		6376886						
ANR	6377411	Symbol	LEB128_8		6376886						
ANR	6377412	Symbol	LEB128_7		6376886						
ANR	6377413	Symbol	LEB128_9		6376886						
ANR	6377414	Symbol	* p		6376886						
ANR	6377415	Function	main	323:0:8106:8203							
ANR	6377416	FunctionDef	main ()		6377415	0					
ANR	6377417	CompoundStatement		323:7:8113:8203	6377415	0					
ANR	6377418	IdentifierDeclStatement	ut32 n ;	324:1:8116:8122	6377415	0	True				
ANR	6377419	IdentifierDecl	n		6377415	0					
ANR	6377420	IdentifierDeclType	ut32		6377415	0					
ANR	6377421	Identifier	n		6377415	1					
ANR	6377422	IdentifierDeclStatement	"ut8 * buf = ""\\x10\\x02\\x90\\x88"" ;"	325:1:8125:8154	6377415	1	True				
ANR	6377423	IdentifierDecl	"* buf = ""\\x10\\x02\\x90\\x88"""		6377415	0					
ANR	6377424	IdentifierDeclType	ut8 *		6377415	0					
ANR	6377425	Identifier	buf		6377415	1					
ANR	6377426	AssignmentExpression	"* buf = ""\\x10\\x02\\x90\\x88"""		6377415	2		=			
ANR	6377427	Identifier	buf		6377415	0					
ANR	6377428	PrimaryExpression	"""\\x10\\x02\\x90\\x88"""		6377415	1					
ANR	6377429	ExpressionStatement	"r_uleb128 ( buf , & n )"	326:1:8157:8176	6377415	2	True				
ANR	6377430	CallExpression	"r_uleb128 ( buf , & n )"		6377415	0					
ANR	6377431	Callee	r_uleb128		6377415	0					
ANR	6377432	Identifier	r_uleb128		6377415	0					
ANR	6377433	ArgumentList	buf		6377415	1					
ANR	6377434	Argument	buf		6377415	0					
ANR	6377435	Identifier	buf		6377415	0					
ANR	6377436	Argument	& n		6377415	1					
ANR	6377437	UnaryOperationExpression	& n		6377415	0					
ANR	6377438	UnaryOperator	&		6377415	0					
ANR	6377439	Identifier	n		6377415	1					
ANR	6377440	ExpressionStatement	"printf ( ""n = %d\\n"" , n )"	327:1:8179:8201	6377415	3	True				
ANR	6377441	CallExpression	"printf ( ""n = %d\\n"" , n )"		6377415	0					
ANR	6377442	Callee	printf		6377415	0					
ANR	6377443	Identifier	printf		6377415	0					
ANR	6377444	ArgumentList	"""n = %d\\n"""		6377415	1					
ANR	6377445	Argument	"""n = %d\\n"""		6377415	0					
ANR	6377446	PrimaryExpression	"""n = %d\\n"""		6377415	0					
ANR	6377447	Argument	n		6377415	1					
ANR	6377448	Identifier	n		6377415	0					
ANR	6377449	Identifier	main		6377415	1					
ANR	6377450	ParameterList			6377415	2					
ANR	6377451	CFGEntryNode	ENTRY		6377415		True				
ANR	6377452	CFGExitNode	EXIT		6377415		True				
ANR	6377453	Symbol	buf		6377415						
ANR	6377454	Symbol	& n		6377415						
ANR	6377455	Symbol	n		6377415						
