command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3474834	File	data/converged/CVE-2019-16718~_radare2/libr_asm_asm.c								
ANR	3474835	DeclStmt									
ANR	3474836	Decl							include < config . h >	include < config . h > ( r_asm )	R_LIB_VERSION
ANR	3474837	DeclStmt									
ANR	3474838	Decl							char	char * [ ]	directives
ANR	3474839	DeclStmt									
ANR	3474840	Decl							RAsmPlugin	RAsmPlugin * [ ]	asm_static_plugins
ANR	3474841	Function	parseHeap	22:0:448:853							
ANR	3474842	FunctionDef	"parseHeap (RParse * p , RStrBuf * s)"		3474841	0					
ANR	3474843	CompoundStatement		22:45:493:853	3474841	0					
ANR	3474844	IdentifierDeclStatement	char * op_buf_asm = r_strbuf_get ( s ) ;	23:1:496:531	3474841	0	True				
ANR	3474845	IdentifierDecl	* op_buf_asm = r_strbuf_get ( s )		3474841	0					
ANR	3474846	IdentifierDeclType	char *		3474841	0					
ANR	3474847	Identifier	op_buf_asm		3474841	1					
ANR	3474848	AssignmentExpression	* op_buf_asm = r_strbuf_get ( s )		3474841	2		=			
ANR	3474849	Identifier	op_buf_asm		3474841	0					
ANR	3474850	CallExpression	r_strbuf_get ( s )		3474841	1					
ANR	3474851	Callee	r_strbuf_get		3474841	0					
ANR	3474852	Identifier	r_strbuf_get		3474841	0					
ANR	3474853	ArgumentList	s		3474841	1					
ANR	3474854	Argument	s		3474841	0					
ANR	3474855	Identifier	s		3474841	0					
ANR	3474856	IdentifierDeclStatement	size_t len = r_strbuf_length ( s ) ;	24:1:534:566	3474841	1	True				
ANR	3474857	IdentifierDecl	len = r_strbuf_length ( s )		3474841	0					
ANR	3474858	IdentifierDeclType	size_t		3474841	0					
ANR	3474859	Identifier	len		3474841	1					
ANR	3474860	AssignmentExpression	len = r_strbuf_length ( s )		3474841	2		=			
ANR	3474861	Identifier	len		3474841	0					
ANR	3474862	CallExpression	r_strbuf_length ( s )		3474841	1					
ANR	3474863	Callee	r_strbuf_length		3474841	0					
ANR	3474864	Identifier	r_strbuf_length		3474841	0					
ANR	3474865	ArgumentList	s		3474841	1					
ANR	3474866	Argument	s		3474841	0					
ANR	3474867	Identifier	s		3474841	0					
ANR	3474868	IdentifierDeclStatement	char * out = malloc ( 64 + ( len * 2 ) ) ;	25:1:569:604	3474841	2	True				
ANR	3474869	IdentifierDecl	* out = malloc ( 64 + ( len * 2 ) )		3474841	0					
ANR	3474870	IdentifierDeclType	char *		3474841	0					
ANR	3474871	Identifier	out		3474841	1					
ANR	3474872	AssignmentExpression	* out = malloc ( 64 + ( len * 2 ) )		3474841	2		=			
ANR	3474873	Identifier	out		3474841	0					
ANR	3474874	CallExpression	malloc ( 64 + ( len * 2 ) )		3474841	1					
ANR	3474875	Callee	malloc		3474841	0					
ANR	3474876	Identifier	malloc		3474841	0					
ANR	3474877	ArgumentList	64 + ( len * 2 )		3474841	1					
ANR	3474878	Argument	64 + ( len * 2 )		3474841	0					
ANR	3474879	AdditiveExpression	64 + ( len * 2 )		3474841	0		+			
ANR	3474880	PrimaryExpression	64		3474841	0					
ANR	3474881	MultiplicativeExpression	len * 2		3474841	1		*			
ANR	3474882	Identifier	len		3474841	0					
ANR	3474883	PrimaryExpression	2		3474841	1					
ANR	3474884	IfStatement	if ( out )		3474841	3					
ANR	3474885	Condition	out	26:5:611:613	3474841	0	True				
ANR	3474886	Identifier	out		3474841	0					
ANR	3474887	CompoundStatement		5:10:122:122	3474841	1					
ANR	3474888	ExpressionStatement	* out = 0	27:2:620:628	3474841	0	True				
ANR	3474889	AssignmentExpression	* out = 0		3474841	0		=			
ANR	3474890	UnaryOperationExpression	* out		3474841	0					
ANR	3474891	UnaryOperator	*		3474841	0					
ANR	3474892	Identifier	out		3474841	1					
ANR	3474893	PrimaryExpression	0		3474841	1					
ANR	3474894	ExpressionStatement	"strcpy ( out , op_buf_asm )"	28:2:632:657	3474841	1	True				
ANR	3474895	CallExpression	"strcpy ( out , op_buf_asm )"		3474841	0					
ANR	3474896	Callee	strcpy		3474841	0					
ANR	3474897	Identifier	strcpy		3474841	0					
ANR	3474898	ArgumentList	out		3474841	1					
ANR	3474899	Argument	out		3474841	0					
ANR	3474900	Identifier	out		3474841	0					
ANR	3474901	Argument	op_buf_asm		3474841	1					
ANR	3474902	Identifier	op_buf_asm		3474841	0					
ANR	3474903	ExpressionStatement	"r_parse_parse ( p , op_buf_asm , out )"	30:2:775:809	3474841	2	True				
ANR	3474904	CallExpression	"r_parse_parse ( p , op_buf_asm , out )"		3474841	0					
ANR	3474905	Callee	r_parse_parse		3474841	0					
ANR	3474906	Identifier	r_parse_parse		3474841	0					
ANR	3474907	ArgumentList	p		3474841	1					
ANR	3474908	Argument	p		3474841	0					
ANR	3474909	Identifier	p		3474841	0					
ANR	3474910	Argument	op_buf_asm		3474841	1					
ANR	3474911	Identifier	op_buf_asm		3474841	0					
ANR	3474912	Argument	out		3474841	2					
ANR	3474913	Identifier	out		3474841	0					
ANR	3474914	ExpressionStatement	"r_strbuf_set ( s , out )"	31:2:813:834	3474841	3	True				
ANR	3474915	CallExpression	"r_strbuf_set ( s , out )"		3474841	0					
ANR	3474916	Callee	r_strbuf_set		3474841	0					
ANR	3474917	Identifier	r_strbuf_set		3474841	0					
ANR	3474918	ArgumentList	s		3474841	1					
ANR	3474919	Argument	s		3474841	0					
ANR	3474920	Identifier	s		3474841	0					
ANR	3474921	Argument	out		3474841	1					
ANR	3474922	Identifier	out		3474841	0					
ANR	3474923	ExpressionStatement	free ( out )	32:2:838:848	3474841	4	True				
ANR	3474924	CallExpression	free ( out )		3474841	0					
ANR	3474925	Callee	free		3474841	0					
ANR	3474926	Identifier	free		3474841	0					
ANR	3474927	ArgumentList	out		3474841	1					
ANR	3474928	Argument	out		3474841	0					
ANR	3474929	Identifier	out		3474841	0					
ANR	3474930	ReturnType	static void		3474841	1					
ANR	3474931	Identifier	parseHeap		3474841	2					
ANR	3474932	ParameterList	"RParse * p , RStrBuf * s"		3474841	3					
ANR	3474933	Parameter	RParse * p	22:22:470:478	3474841	0	True				
ANR	3474934	ParameterType	RParse *		3474841	0					
ANR	3474935	Identifier	p		3474841	1					
ANR	3474936	Parameter	RStrBuf * s	22:33:481:490	3474841	1	True				
ANR	3474937	ParameterType	RStrBuf *		3474841	0					
ANR	3474938	Identifier	s		3474841	1					
ANR	3474939	CFGEntryNode	ENTRY		3474841		True				
ANR	3474940	CFGExitNode	EXIT		3474841		True				
ANR	3474941	Symbol	p		3474841						
ANR	3474942	Symbol	malloc		3474841						
ANR	3474943	Symbol	s		3474841						
ANR	3474944	Symbol	len		3474841						
ANR	3474945	Symbol	r_strbuf_get		3474841						
ANR	3474946	Symbol	* out		3474841						
ANR	3474947	Symbol	r_strbuf_length		3474841						
ANR	3474948	Symbol	op_buf_asm		3474841						
ANR	3474949	Symbol	out		3474841						
ANR	3474950	Function	r_asm_pseudo_align	37:0:885:1017							
ANR	3474951	FunctionDef	"r_asm_pseudo_align (RAsmCode * acode , RAsmOp * op , char * input)"		3474950	0					
ANR	3474952	CompoundStatement		37:72:957:1017	3474950	0					
ANR	3474953	ExpressionStatement	"acode -> code_align = r_num_math ( NULL , input )"	38:1:960:1004	3474950	0	True				
ANR	3474954	AssignmentExpression	"acode -> code_align = r_num_math ( NULL , input )"		3474950	0		=			
ANR	3474955	PtrMemberAccess	acode -> code_align		3474950	0					
ANR	3474956	Identifier	acode		3474950	0					
ANR	3474957	Identifier	code_align		3474950	1					
ANR	3474958	CallExpression	"r_num_math ( NULL , input )"		3474950	1					
ANR	3474959	Callee	r_num_math		3474950	0					
ANR	3474960	Identifier	r_num_math		3474950	0					
ANR	3474961	ArgumentList	NULL		3474950	1					
ANR	3474962	Argument	NULL		3474950	0					
ANR	3474963	Identifier	NULL		3474950	0					
ANR	3474964	Argument	input		3474950	1					
ANR	3474965	Identifier	input		3474950	0					
ANR	3474966	ReturnStatement	return 0 ;	39:1:1007:1015	3474950	1	True				
ANR	3474967	PrimaryExpression	0		3474950	0					
ANR	3474968	ReturnType	static int		3474950	1					
ANR	3474969	Identifier	r_asm_pseudo_align		3474950	2					
ANR	3474970	ParameterList	"RAsmCode * acode , RAsmOp * op , char * input"		3474950	3					
ANR	3474971	Parameter	RAsmCode * acode	37:30:915:929	3474950	0	True				
ANR	3474972	ParameterType	RAsmCode *		3474950	0					
ANR	3474973	Identifier	acode		3474950	1					
ANR	3474974	Parameter	RAsmOp * op	37:47:932:941	3474950	1	True				
ANR	3474975	ParameterType	RAsmOp *		3474950	0					
ANR	3474976	Identifier	op		3474950	1					
ANR	3474977	Parameter	char * input	37:59:944:954	3474950	2	True				
ANR	3474978	ParameterType	char *		3474950	0					
ANR	3474979	Identifier	input		3474950	1					
ANR	3474980	CFGEntryNode	ENTRY		3474950		True				
ANR	3474981	CFGExitNode	EXIT		3474950		True				
ANR	3474982	Symbol	op		3474950						
ANR	3474983	Symbol	input		3474950						
ANR	3474984	Symbol	NULL		3474950						
ANR	3474985	Symbol	acode		3474950						
ANR	3474986	Symbol	acode -> code_align		3474950						
ANR	3474987	Symbol	* acode		3474950						
ANR	3474988	Symbol	r_num_math		3474950						
ANR	3474989	Function	r_asm_pseudo_string	42:0:1020:1369							
ANR	3474990	FunctionDef	"r_asm_pseudo_string (RAsmOp * op , char * input , int zero)"		3474989	0					
ANR	3474991	CompoundStatement		42:66:1086:1369	3474989	0					
ANR	3474992	IdentifierDeclStatement	int len = strlen ( input ) - 1 ;	43:1:1089:1117	3474989	0	True				
ANR	3474993	IdentifierDecl	len = strlen ( input ) - 1		3474989	0					
ANR	3474994	IdentifierDeclType	int		3474989	0					
ANR	3474995	Identifier	len		3474989	1					
ANR	3474996	AssignmentExpression	len = strlen ( input ) - 1		3474989	2		=			
ANR	3474997	Identifier	len		3474989	0					
ANR	3474998	AdditiveExpression	strlen ( input ) - 1		3474989	1		-			
ANR	3474999	CallExpression	strlen ( input )		3474989	0					
ANR	3475000	Callee	strlen		3474989	0					
ANR	3475001	Identifier	strlen		3474989	0					
ANR	3475002	ArgumentList	input		3474989	1					
ANR	3475003	Argument	input		3474989	0					
ANR	3475004	Identifier	input		3474989	0					
ANR	3475005	PrimaryExpression	1		3474989	1					
ANR	3475006	IfStatement	if ( len < 1 )		3474989	1					
ANR	3475007	Condition	len < 1	44:5:1124:1130	3474989	0	True				
ANR	3475008	RelationalExpression	len < 1		3474989	0		<			
ANR	3475009	Identifier	len		3474989	0					
ANR	3475010	PrimaryExpression	1		3474989	1					
ANR	3475011	CompoundStatement		3:14:46:46	3474989	1					
ANR	3475012	ReturnStatement	return 0 ;	45:2:1137:1145	3474989	0	True				
ANR	3475013	PrimaryExpression	0		3474989	0					
ANR	3475014	IfStatement	"if ( input [ len ] == '""' )"		3474989	2					
ANR	3475015	Condition	"input [ len ] == '""'"	48:5:1200:1216	3474989	0	True				
ANR	3475016	EqualityExpression	"input [ len ] == '""'"		3474989	0		==			
ANR	3475017	ArrayIndexing	input [ len ]		3474989	0					
ANR	3475018	Identifier	input		3474989	0					
ANR	3475019	Identifier	len		3474989	1					
ANR	3475020	PrimaryExpression	"'""'"		3474989	1					
ANR	3475021	CompoundStatement		7:24:132:132	3474989	1					
ANR	3475022	ExpressionStatement	input [ len ] = 0	49:2:1223:1237	3474989	0	True				
ANR	3475023	AssignmentExpression	input [ len ] = 0		3474989	0		=			
ANR	3475024	ArrayIndexing	input [ len ]		3474989	0					
ANR	3475025	Identifier	input		3474989	0					
ANR	3475026	Identifier	len		3474989	1					
ANR	3475027	PrimaryExpression	0		3474989	1					
ANR	3475028	IfStatement	"if ( * input == '""' )"		3474989	3					
ANR	3475029	Condition	"* input == '""'"	51:5:1247:1259	3474989	0	True				
ANR	3475030	EqualityExpression	"* input == '""'"		3474989	0		==			
ANR	3475031	UnaryOperationExpression	* input		3474989	0					
ANR	3475032	UnaryOperator	*		3474989	0					
ANR	3475033	Identifier	input		3474989	1					
ANR	3475034	PrimaryExpression	"'""'"		3474989	1					
ANR	3475035	CompoundStatement		10:20:175:175	3474989	1					
ANR	3475036	ExpressionStatement	input ++	52:2:1266:1273	3474989	0	True				
ANR	3475037	PostIncDecOperationExpression	input ++		3474989	0					
ANR	3475038	Identifier	input		3474989	0					
ANR	3475039	IncDec	++		3474989	1					
ANR	3475040	ExpressionStatement	len = r_str_unescape ( input ) + zero	54:1:1279:1314	3474989	4	True				
ANR	3475041	AssignmentExpression	len = r_str_unescape ( input ) + zero		3474989	0		=			
ANR	3475042	Identifier	len		3474989	0					
ANR	3475043	AdditiveExpression	r_str_unescape ( input ) + zero		3474989	1		+			
ANR	3475044	CallExpression	r_str_unescape ( input )		3474989	0					
ANR	3475045	Callee	r_str_unescape		3474989	0					
ANR	3475046	Identifier	r_str_unescape		3474989	0					
ANR	3475047	ArgumentList	input		3474989	1					
ANR	3475048	Argument	input		3474989	0					
ANR	3475049	Identifier	input		3474989	0					
ANR	3475050	Identifier	zero		3474989	1					
ANR	3475051	ExpressionStatement	"r_strbuf_set ( & op -> buf , input )"	55:1:1317:1347	3474989	5	True				
ANR	3475052	CallExpression	"r_strbuf_set ( & op -> buf , input )"		3474989	0					
ANR	3475053	Callee	r_strbuf_set		3474989	0					
ANR	3475054	Identifier	r_strbuf_set		3474989	0					
ANR	3475055	ArgumentList	& op -> buf		3474989	1					
ANR	3475056	Argument	& op -> buf		3474989	0					
ANR	3475057	UnaryOperationExpression	& op -> buf		3474989	0					
ANR	3475058	UnaryOperator	&		3474989	0					
ANR	3475059	PtrMemberAccess	op -> buf		3474989	1					
ANR	3475060	Identifier	op		3474989	0					
ANR	3475061	Identifier	buf		3474989	1					
ANR	3475062	Argument	input		3474989	1					
ANR	3475063	Identifier	input		3474989	0					
ANR	3475064	ReturnStatement	return len ;	56:1:1357:1367	3474989	6	True				
ANR	3475065	Identifier	len		3474989	0					
ANR	3475066	ReturnType	static int		3474989	1					
ANR	3475067	Identifier	r_asm_pseudo_string		3474989	2					
ANR	3475068	ParameterList	"RAsmOp * op , char * input , int zero"		3474989	3					
ANR	3475069	Parameter	RAsmOp * op	42:31:1051:1060	3474989	0	True				
ANR	3475070	ParameterType	RAsmOp *		3474989	0					
ANR	3475071	Identifier	op		3474989	1					
ANR	3475072	Parameter	char * input	42:43:1063:1073	3474989	1	True				
ANR	3475073	ParameterType	char *		3474989	0					
ANR	3475074	Identifier	input		3474989	1					
ANR	3475075	Parameter	int zero	42:56:1076:1083	3474989	2	True				
ANR	3475076	ParameterType	int		3474989	0					
ANR	3475077	Identifier	zero		3474989	1					
ANR	3475078	CFGEntryNode	ENTRY		3474989		True				
ANR	3475079	CFGExitNode	EXIT		3474989		True				
ANR	3475080	Symbol	zero		3474989						
ANR	3475081	Symbol	op		3474989						
ANR	3475082	Symbol	input		3474989						
ANR	3475083	Symbol	strlen		3474989						
ANR	3475084	Symbol	& op -> buf		3474989						
ANR	3475085	Symbol	len		3474989						
ANR	3475086	Symbol	* input		3474989						
ANR	3475087	Symbol	r_str_unescape		3474989						
ANR	3475088	Symbol	* len		3474989						
ANR	3475089	Function	r_asm_pseudo_arch	59:0:1372:1528							
ANR	3475090	FunctionDef	"r_asm_pseudo_arch (RAsm * a , char * input)"		3475089	0					
ANR	3475091	CompoundStatement		59:58:1430:1528	3475089	0					
ANR	3475092	IfStatement	"if ( ! r_asm_use ( a , input ) )"		3475089	0					
ANR	3475093	Condition	"! r_asm_use ( a , input )"	60:5:1437:1457	3475089	0	True				
ANR	3475094	UnaryOperationExpression	"! r_asm_use ( a , input )"		3475089	0					
ANR	3475095	UnaryOperator	!		3475089	0					
ANR	3475096	CallExpression	"r_asm_use ( a , input )"		3475089	1					
ANR	3475097	Callee	r_asm_use		3475089	0					
ANR	3475098	Identifier	r_asm_use		3475089	0					
ANR	3475099	ArgumentList	a		3475089	1					
ANR	3475100	Argument	a		3475089	0					
ANR	3475101	Identifier	a		3475089	0					
ANR	3475102	Argument	input		3475089	1					
ANR	3475103	Identifier	input		3475089	0					
ANR	3475104	CompoundStatement		2:28:29:29	3475089	1					
ANR	3475105	ExpressionStatement	"eprintf ( ""Error: Unknown plugin\\n"" )"	61:2:1464:1499	3475089	0	True				
ANR	3475106	CallExpression	"eprintf ( ""Error: Unknown plugin\\n"" )"		3475089	0					
ANR	3475107	Callee	eprintf		3475089	0					
ANR	3475108	Identifier	eprintf		3475089	0					
ANR	3475109	ArgumentList	"""Error: Unknown plugin\\n"""		3475089	1					
ANR	3475110	Argument	"""Error: Unknown plugin\\n"""		3475089	0					
ANR	3475111	PrimaryExpression	"""Error: Unknown plugin\\n"""		3475089	0					
ANR	3475112	ReturnStatement	return - 1 ;	62:2:1503:1512	3475089	1	True				
ANR	3475113	UnaryOperationExpression	- 1		3475089	0					
ANR	3475114	UnaryOperator	-		3475089	0					
ANR	3475115	PrimaryExpression	1		3475089	1					
ANR	3475116	ReturnStatement	return 0 ;	64:1:1518:1526	3475089	1	True				
ANR	3475117	PrimaryExpression	0		3475089	0					
ANR	3475118	ReturnType	static inline int		3475089	1					
ANR	3475119	Identifier	r_asm_pseudo_arch		3475089	2					
ANR	3475120	ParameterList	"RAsm * a , char * input"		3475089	3					
ANR	3475121	Parameter	RAsm * a	59:36:1408:1414	3475089	0	True				
ANR	3475122	ParameterType	RAsm *		3475089	0					
ANR	3475123	Identifier	a		3475089	1					
ANR	3475124	Parameter	char * input	59:45:1417:1427	3475089	1	True				
ANR	3475125	ParameterType	char *		3475089	0					
ANR	3475126	Identifier	input		3475089	1					
ANR	3475127	CFGEntryNode	ENTRY		3475089		True				
ANR	3475128	CFGExitNode	EXIT		3475089		True				
ANR	3475129	Symbol	a		3475089						
ANR	3475130	Symbol	input		3475089						
ANR	3475131	Symbol	r_asm_use		3475089						
ANR	3475132	Function	r_asm_pseudo_bits	67:0:1531:1727							
ANR	3475133	FunctionDef	"r_asm_pseudo_bits (RAsm * a , char * input)"		3475132	0					
ANR	3475134	CompoundStatement		67:58:1589:1727	3475132	0					
ANR	3475135	IfStatement	"if ( ! ( r_asm_set_bits ( a , r_num_math ( NULL , input ) ) ) )"		3475132	0					
ANR	3475136	Condition	"! ( r_asm_set_bits ( a , r_num_math ( NULL , input ) ) )"	68:5:1596:1642	3475132	0	True				
ANR	3475137	UnaryOperationExpression	"! ( r_asm_set_bits ( a , r_num_math ( NULL , input ) ) )"		3475132	0					
ANR	3475138	UnaryOperator	!		3475132	0					
ANR	3475139	CallExpression	"r_asm_set_bits ( a , r_num_math ( NULL , input ) )"		3475132	1					
ANR	3475140	Callee	r_asm_set_bits		3475132	0					
ANR	3475141	Identifier	r_asm_set_bits		3475132	0					
ANR	3475142	ArgumentList	a		3475132	1					
ANR	3475143	Argument	a		3475132	0					
ANR	3475144	Identifier	a		3475132	0					
ANR	3475145	Argument	"r_num_math ( NULL , input )"		3475132	1					
ANR	3475146	CallExpression	"r_num_math ( NULL , input )"		3475132	0					
ANR	3475147	Callee	r_num_math		3475132	0					
ANR	3475148	Identifier	r_num_math		3475132	0					
ANR	3475149	ArgumentList	NULL		3475132	1					
ANR	3475150	Argument	NULL		3475132	0					
ANR	3475151	Identifier	NULL		3475132	0					
ANR	3475152	Argument	input		3475132	1					
ANR	3475153	Identifier	input		3475132	0					
ANR	3475154	CompoundStatement		2:54:55:55	3475132	1					
ANR	3475155	ExpressionStatement	"eprintf ( ""Error: Unsupported value for .bits.\\n"" )"	69:2:1649:1698	3475132	0	True				
ANR	3475156	CallExpression	"eprintf ( ""Error: Unsupported value for .bits.\\n"" )"		3475132	0					
ANR	3475157	Callee	eprintf		3475132	0					
ANR	3475158	Identifier	eprintf		3475132	0					
ANR	3475159	ArgumentList	"""Error: Unsupported value for .bits.\\n"""		3475132	1					
ANR	3475160	Argument	"""Error: Unsupported value for .bits.\\n"""		3475132	0					
ANR	3475161	PrimaryExpression	"""Error: Unsupported value for .bits.\\n"""		3475132	0					
ANR	3475162	ReturnStatement	return - 1 ;	70:2:1702:1711	3475132	1	True				
ANR	3475163	UnaryOperationExpression	- 1		3475132	0					
ANR	3475164	UnaryOperator	-		3475132	0					
ANR	3475165	PrimaryExpression	1		3475132	1					
ANR	3475166	ReturnStatement	return 0 ;	72:1:1717:1725	3475132	1	True				
ANR	3475167	PrimaryExpression	0		3475132	0					
ANR	3475168	ReturnType	static inline int		3475132	1					
ANR	3475169	Identifier	r_asm_pseudo_bits		3475132	2					
ANR	3475170	ParameterList	"RAsm * a , char * input"		3475132	3					
ANR	3475171	Parameter	RAsm * a	67:36:1567:1573	3475132	0	True				
ANR	3475172	ParameterType	RAsm *		3475132	0					
ANR	3475173	Identifier	a		3475132	1					
ANR	3475174	Parameter	char * input	67:45:1576:1586	3475132	1	True				
ANR	3475175	ParameterType	char *		3475132	0					
ANR	3475176	Identifier	input		3475132	1					
ANR	3475177	CFGEntryNode	ENTRY		3475132		True				
ANR	3475178	CFGExitNode	EXIT		3475132		True				
ANR	3475179	Symbol	a		3475132						
ANR	3475180	Symbol	input		3475132						
ANR	3475181	Symbol	NULL		3475132						
ANR	3475182	Symbol	r_asm_set_bits		3475132						
ANR	3475183	Symbol	r_num_math		3475132						
ANR	3475184	Function	r_asm_pseudo_org	75:0:1730:1845							
ANR	3475185	FunctionDef	"r_asm_pseudo_org (RAsm * a , char * input)"		3475184	0					
ANR	3475186	CompoundStatement		75:57:1787:1845	3475184	0					
ANR	3475187	ExpressionStatement	"r_asm_set_pc ( a , r_num_math ( NULL , input ) )"	76:1:1790:1832	3475184	0	True				
ANR	3475188	CallExpression	"r_asm_set_pc ( a , r_num_math ( NULL , input ) )"		3475184	0					
ANR	3475189	Callee	r_asm_set_pc		3475184	0					
ANR	3475190	Identifier	r_asm_set_pc		3475184	0					
ANR	3475191	ArgumentList	a		3475184	1					
ANR	3475192	Argument	a		3475184	0					
ANR	3475193	Identifier	a		3475184	0					
ANR	3475194	Argument	"r_num_math ( NULL , input )"		3475184	1					
ANR	3475195	CallExpression	"r_num_math ( NULL , input )"		3475184	0					
ANR	3475196	Callee	r_num_math		3475184	0					
ANR	3475197	Identifier	r_num_math		3475184	0					
ANR	3475198	ArgumentList	NULL		3475184	1					
ANR	3475199	Argument	NULL		3475184	0					
ANR	3475200	Identifier	NULL		3475184	0					
ANR	3475201	Argument	input		3475184	1					
ANR	3475202	Identifier	input		3475184	0					
ANR	3475203	ReturnStatement	return 0 ;	77:1:1835:1843	3475184	1	True				
ANR	3475204	PrimaryExpression	0		3475184	0					
ANR	3475205	ReturnType	static inline int		3475184	1					
ANR	3475206	Identifier	r_asm_pseudo_org		3475184	2					
ANR	3475207	ParameterList	"RAsm * a , char * input"		3475184	3					
ANR	3475208	Parameter	RAsm * a	75:35:1765:1771	3475184	0	True				
ANR	3475209	ParameterType	RAsm *		3475184	0					
ANR	3475210	Identifier	a		3475184	1					
ANR	3475211	Parameter	char * input	75:44:1774:1784	3475184	1	True				
ANR	3475212	ParameterType	char *		3475184	0					
ANR	3475213	Identifier	input		3475184	1					
ANR	3475214	CFGEntryNode	ENTRY		3475184		True				
ANR	3475215	CFGExitNode	EXIT		3475184		True				
ANR	3475216	Symbol	a		3475184						
ANR	3475217	Symbol	input		3475184						
ANR	3475218	Symbol	NULL		3475184						
ANR	3475219	Symbol	r_num_math		3475184						
ANR	3475220	Function	r_asm_pseudo_intN	80:0:1848:2457							
ANR	3475221	FunctionDef	"r_asm_pseudo_intN (RAsm * a , RAsmOp * op , char * input , int n)"		3475220	0					
ANR	3475222	CompoundStatement		80:77:1925:2457	3475220	0					
ANR	3475223	IdentifierDeclStatement	short s ;	81:1:1928:1935	3475220	0	True				
ANR	3475224	IdentifierDecl	s		3475220	0					
ANR	3475225	IdentifierDeclType	short		3475220	0					
ANR	3475226	Identifier	s		3475220	1					
ANR	3475227	IdentifierDeclStatement	int i ;	82:1:1938:1943	3475220	1	True				
ANR	3475228	IdentifierDecl	i		3475220	0					
ANR	3475229	IdentifierDeclType	int		3475220	0					
ANR	3475230	Identifier	i		3475220	1					
ANR	3475231	IdentifierDeclStatement	long int l ;	83:1:1946:1956	3475220	2	True				
ANR	3475232	IdentifierDecl	l		3475220	0					
ANR	3475233	IdentifierDeclType	long int		3475220	0					
ANR	3475234	Identifier	l		3475220	1					
ANR	3475235	IdentifierDeclStatement	"ut64 s64 = r_num_math ( NULL , input ) ;"	84:1:1959:1994	3475220	3	True				
ANR	3475236	IdentifierDecl	"s64 = r_num_math ( NULL , input )"		3475220	0					
ANR	3475237	IdentifierDeclType	ut64		3475220	0					
ANR	3475238	Identifier	s64		3475220	1					
ANR	3475239	AssignmentExpression	"s64 = r_num_math ( NULL , input )"		3475220	2		=			
ANR	3475240	Identifier	s64		3475220	0					
ANR	3475241	CallExpression	"r_num_math ( NULL , input )"		3475220	1					
ANR	3475242	Callee	r_num_math		3475220	0					
ANR	3475243	Identifier	r_num_math		3475220	0					
ANR	3475244	ArgumentList	NULL		3475220	1					
ANR	3475245	Argument	NULL		3475220	0					
ANR	3475246	Identifier	NULL		3475220	0					
ANR	3475247	Argument	input		3475220	1					
ANR	3475248	Identifier	input		3475220	0					
ANR	3475249	IfStatement	if ( n != 8 && s64 >> ( n * 8 ) )		3475220	4					
ANR	3475250	Condition	n != 8 && s64 >> ( n * 8 )	85:5:2001:2024	3475220	0	True				
ANR	3475251	AndExpression	n != 8 && s64 >> ( n * 8 )		3475220	0		&&			
ANR	3475252	EqualityExpression	n != 8		3475220	0		!=			
ANR	3475253	Identifier	n		3475220	0					
ANR	3475254	PrimaryExpression	8		3475220	1					
ANR	3475255	ShiftExpression	s64 >> ( n * 8 )		3475220	1		>>			
ANR	3475256	Identifier	s64		3475220	0					
ANR	3475257	MultiplicativeExpression	n * 8		3475220	1		*			
ANR	3475258	Identifier	n		3475220	0					
ANR	3475259	PrimaryExpression	8		3475220	1					
ANR	3475260	CompoundStatement		6:31:101:101	3475220	1					
ANR	3475261	ExpressionStatement	"eprintf ( ""int16 Out is out of range\\n"" )"	86:2:2031:2070	3475220	0	True				
ANR	3475262	CallExpression	"eprintf ( ""int16 Out is out of range\\n"" )"		3475220	0					
ANR	3475263	Callee	eprintf		3475220	0					
ANR	3475264	Identifier	eprintf		3475220	0					
ANR	3475265	ArgumentList	"""int16 Out is out of range\\n"""		3475220	1					
ANR	3475266	Argument	"""int16 Out is out of range\\n"""		3475220	0					
ANR	3475267	PrimaryExpression	"""int16 Out is out of range\\n"""		3475220	0					
ANR	3475268	ReturnStatement	return 0 ;	87:2:2074:2082	3475220	1	True				
ANR	3475269	PrimaryExpression	0		3475220	0					
ANR	3475270	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) r_strbuf_get ( & op -> buf ) ;	90:1:2114:2154	3475220	5	True				
ANR	3475271	IdentifierDecl	* buf = ( ut8 * ) r_strbuf_get ( & op -> buf )		3475220	0					
ANR	3475272	IdentifierDeclType	ut8 *		3475220	0					
ANR	3475273	Identifier	buf		3475220	1					
ANR	3475274	AssignmentExpression	* buf = ( ut8 * ) r_strbuf_get ( & op -> buf )		3475220	2		=			
ANR	3475275	Identifier	buf		3475220	0					
ANR	3475276	CastExpression	( ut8 * ) r_strbuf_get ( & op -> buf )		3475220	1					
ANR	3475277	CastTarget	ut8 *		3475220	0					
ANR	3475278	CallExpression	r_strbuf_get ( & op -> buf )		3475220	1					
ANR	3475279	Callee	r_strbuf_get		3475220	0					
ANR	3475280	Identifier	r_strbuf_get		3475220	0					
ANR	3475281	ArgumentList	& op -> buf		3475220	1					
ANR	3475282	Argument	& op -> buf		3475220	0					
ANR	3475283	UnaryOperationExpression	& op -> buf		3475220	0					
ANR	3475284	UnaryOperator	&		3475220	0					
ANR	3475285	PtrMemberAccess	op -> buf		3475220	1					
ANR	3475286	Identifier	op		3475220	0					
ANR	3475287	Identifier	buf		3475220	1					
ANR	3475288	IfStatement	if ( ! buf )		3475220	6					
ANR	3475289	Condition	! buf	91:5:2161:2164	3475220	0	True				
ANR	3475290	UnaryOperationExpression	! buf		3475220	0					
ANR	3475291	UnaryOperator	!		3475220	0					
ANR	3475292	Identifier	buf		3475220	1					
ANR	3475293	CompoundStatement		12:11:241:241	3475220	1					
ANR	3475294	ReturnStatement	return 0 ;	92:2:2171:2179	3475220	0	True				
ANR	3475295	PrimaryExpression	0		3475220	0					
ANR	3475296	IfStatement	if ( n == 2 )		3475220	7					
ANR	3475297	Condition	n == 2	94:5:2189:2194	3475220	0	True				
ANR	3475298	EqualityExpression	n == 2		3475220	0		==			
ANR	3475299	Identifier	n		3475220	0					
ANR	3475300	PrimaryExpression	2		3475220	1					
ANR	3475301	CompoundStatement		15:13:271:271	3475220	1					
ANR	3475302	ExpressionStatement	s = ( short ) s64	95:2:2201:2215	3475220	0	True				
ANR	3475303	AssignmentExpression	s = ( short ) s64		3475220	0		=			
ANR	3475304	Identifier	s		3475220	0					
ANR	3475305	CastExpression	( short ) s64		3475220	1					
ANR	3475306	CastTarget	short		3475220	0					
ANR	3475307	Identifier	s64		3475220	1					
ANR	3475308	ExpressionStatement	"r_write_ble16 ( buf , s , a -> big_endian )"	96:2:2219:2256	3475220	1	True				
ANR	3475309	CallExpression	"r_write_ble16 ( buf , s , a -> big_endian )"		3475220	0					
ANR	3475310	Callee	r_write_ble16		3475220	0					
ANR	3475311	Identifier	r_write_ble16		3475220	0					
ANR	3475312	ArgumentList	buf		3475220	1					
ANR	3475313	Argument	buf		3475220	0					
ANR	3475314	Identifier	buf		3475220	0					
ANR	3475315	Argument	s		3475220	1					
ANR	3475316	Identifier	s		3475220	0					
ANR	3475317	Argument	a -> big_endian		3475220	2					
ANR	3475318	PtrMemberAccess	a -> big_endian		3475220	0					
ANR	3475319	Identifier	a		3475220	0					
ANR	3475320	Identifier	big_endian		3475220	1					
ANR	3475321	ElseStatement	else		3475220	0					
ANR	3475322	IfStatement	if ( n == 4 )		3475220	0					
ANR	3475323	Condition	n == 4	97:12:2270:2275	3475220	0	True				
ANR	3475324	EqualityExpression	n == 4		3475220	0		==			
ANR	3475325	Identifier	n		3475220	0					
ANR	3475326	PrimaryExpression	4		3475220	1					
ANR	3475327	CompoundStatement		18:20:352:352	3475220	1					
ANR	3475328	ExpressionStatement	i = ( int ) s64	98:2:2282:2294	3475220	0	True				
ANR	3475329	AssignmentExpression	i = ( int ) s64		3475220	0		=			
ANR	3475330	Identifier	i		3475220	0					
ANR	3475331	CastExpression	( int ) s64		3475220	1					
ANR	3475332	CastTarget	int		3475220	0					
ANR	3475333	Identifier	s64		3475220	1					
ANR	3475334	ExpressionStatement	"r_write_ble32 ( buf , i , a -> big_endian )"	99:2:2298:2335	3475220	1	True				
ANR	3475335	CallExpression	"r_write_ble32 ( buf , i , a -> big_endian )"		3475220	0					
ANR	3475336	Callee	r_write_ble32		3475220	0					
ANR	3475337	Identifier	r_write_ble32		3475220	0					
ANR	3475338	ArgumentList	buf		3475220	1					
ANR	3475339	Argument	buf		3475220	0					
ANR	3475340	Identifier	buf		3475220	0					
ANR	3475341	Argument	i		3475220	1					
ANR	3475342	Identifier	i		3475220	0					
ANR	3475343	Argument	a -> big_endian		3475220	2					
ANR	3475344	PtrMemberAccess	a -> big_endian		3475220	0					
ANR	3475345	Identifier	a		3475220	0					
ANR	3475346	Identifier	big_endian		3475220	1					
ANR	3475347	ElseStatement	else		3475220	0					
ANR	3475348	IfStatement	if ( n == 8 )		3475220	0					
ANR	3475349	Condition	n == 8	100:12:2349:2354	3475220	0	True				
ANR	3475350	EqualityExpression	n == 8		3475220	0		==			
ANR	3475351	Identifier	n		3475220	0					
ANR	3475352	PrimaryExpression	8		3475220	1					
ANR	3475353	CompoundStatement		21:20:431:431	3475220	1					
ANR	3475354	ExpressionStatement	l = ( long int ) s64	101:2:2361:2378	3475220	0	True				
ANR	3475355	AssignmentExpression	l = ( long int ) s64		3475220	0		=			
ANR	3475356	Identifier	l		3475220	0					
ANR	3475357	CastExpression	( long int ) s64		3475220	1					
ANR	3475358	CastTarget	long int		3475220	0					
ANR	3475359	Identifier	s64		3475220	1					
ANR	3475360	ExpressionStatement	"r_write_ble64 ( buf , l , a -> big_endian )"	102:2:2382:2419	3475220	1	True				
ANR	3475361	CallExpression	"r_write_ble64 ( buf , l , a -> big_endian )"		3475220	0					
ANR	3475362	Callee	r_write_ble64		3475220	0					
ANR	3475363	Identifier	r_write_ble64		3475220	0					
ANR	3475364	ArgumentList	buf		3475220	1					
ANR	3475365	Argument	buf		3475220	0					
ANR	3475366	Identifier	buf		3475220	0					
ANR	3475367	Argument	l		3475220	1					
ANR	3475368	Identifier	l		3475220	0					
ANR	3475369	Argument	a -> big_endian		3475220	2					
ANR	3475370	PtrMemberAccess	a -> big_endian		3475220	0					
ANR	3475371	Identifier	a		3475220	0					
ANR	3475372	Identifier	big_endian		3475220	1					
ANR	3475373	ElseStatement	else		3475220	0					
ANR	3475374	CompoundStatement		24:8:503:503	3475220	0					
ANR	3475375	ReturnStatement	return 0 ;	104:2:2433:2441	3475220	0	True				
ANR	3475376	PrimaryExpression	0		3475220	0					
ANR	3475377	ReturnStatement	return n ;	106:1:2447:2455	3475220	8	True				
ANR	3475378	Identifier	n		3475220	0					
ANR	3475379	ReturnType	static inline int		3475220	1					
ANR	3475380	Identifier	r_asm_pseudo_intN		3475220	2					
ANR	3475381	ParameterList	"RAsm * a , RAsmOp * op , char * input , int n"		3475220	3					
ANR	3475382	Parameter	RAsm * a	80:36:1884:1890	3475220	0	True				
ANR	3475383	ParameterType	RAsm *		3475220	0					
ANR	3475384	Identifier	a		3475220	1					
ANR	3475385	Parameter	RAsmOp * op	80:45:1893:1902	3475220	1	True				
ANR	3475386	ParameterType	RAsmOp *		3475220	0					
ANR	3475387	Identifier	op		3475220	1					
ANR	3475388	Parameter	char * input	80:57:1905:1915	3475220	2	True				
ANR	3475389	ParameterType	char *		3475220	0					
ANR	3475390	Identifier	input		3475220	1					
ANR	3475391	Parameter	int n	80:70:1918:1922	3475220	3	True				
ANR	3475392	ParameterType	int		3475220	0					
ANR	3475393	Identifier	n		3475220	1					
ANR	3475394	CFGEntryNode	ENTRY		3475220		True				
ANR	3475395	CFGExitNode	EXIT		3475220		True				
ANR	3475396	Symbol	a		3475220						
ANR	3475397	Symbol	op		3475220						
ANR	3475398	Symbol	NULL		3475220						
ANR	3475399	Symbol	a -> big_endian		3475220						
ANR	3475400	Symbol	i		3475220						
ANR	3475401	Symbol	* a		3475220						
ANR	3475402	Symbol	l		3475220						
ANR	3475403	Symbol	n		3475220						
ANR	3475404	Symbol	r_num_math		3475220						
ANR	3475405	Symbol	s64		3475220						
ANR	3475406	Symbol	input		3475220						
ANR	3475407	Symbol	buf		3475220						
ANR	3475408	Symbol	& op -> buf		3475220						
ANR	3475409	Symbol	s		3475220						
ANR	3475410	Symbol	r_strbuf_get		3475220						
ANR	3475411	Function	r_asm_pseudo_int16	109:0:2460:2578							
ANR	3475412	FunctionDef	"r_asm_pseudo_int16 (RAsm * a , RAsmOp * op , char * input)"		3475411	0					
ANR	3475413	CompoundStatement		109:71:2531:2578	3475411	0					
ANR	3475414	ReturnStatement	"return r_asm_pseudo_intN ( a , op , input , 2 ) ;"	110:1:2534:2576	3475411	0	True				
ANR	3475415	CallExpression	"r_asm_pseudo_intN ( a , op , input , 2 )"		3475411	0					
ANR	3475416	Callee	r_asm_pseudo_intN		3475411	0					
ANR	3475417	Identifier	r_asm_pseudo_intN		3475411	0					
ANR	3475418	ArgumentList	a		3475411	1					
ANR	3475419	Argument	a		3475411	0					
ANR	3475420	Identifier	a		3475411	0					
ANR	3475421	Argument	op		3475411	1					
ANR	3475422	Identifier	op		3475411	0					
ANR	3475423	Argument	input		3475411	2					
ANR	3475424	Identifier	input		3475411	0					
ANR	3475425	Argument	2		3475411	3					
ANR	3475426	PrimaryExpression	2		3475411	0					
ANR	3475427	ReturnType	static inline int		3475411	1					
ANR	3475428	Identifier	r_asm_pseudo_int16		3475411	2					
ANR	3475429	ParameterList	"RAsm * a , RAsmOp * op , char * input"		3475411	3					
ANR	3475430	Parameter	RAsm * a	109:37:2497:2503	3475411	0	True				
ANR	3475431	ParameterType	RAsm *		3475411	0					
ANR	3475432	Identifier	a		3475411	1					
ANR	3475433	Parameter	RAsmOp * op	109:46:2506:2515	3475411	1	True				
ANR	3475434	ParameterType	RAsmOp *		3475411	0					
ANR	3475435	Identifier	op		3475411	1					
ANR	3475436	Parameter	char * input	109:58:2518:2528	3475411	2	True				
ANR	3475437	ParameterType	char *		3475411	0					
ANR	3475438	Identifier	input		3475411	1					
ANR	3475439	CFGEntryNode	ENTRY		3475411		True				
ANR	3475440	CFGExitNode	EXIT		3475411		True				
ANR	3475441	Symbol	a		3475411						
ANR	3475442	Symbol	op		3475411						
ANR	3475443	Symbol	input		3475411						
ANR	3475444	Symbol	r_asm_pseudo_intN		3475411						
ANR	3475445	Function	r_asm_pseudo_int32	113:0:2581:2699							
ANR	3475446	FunctionDef	"r_asm_pseudo_int32 (RAsm * a , RAsmOp * op , char * input)"		3475445	0					
ANR	3475447	CompoundStatement		113:71:2652:2699	3475445	0					
ANR	3475448	ReturnStatement	"return r_asm_pseudo_intN ( a , op , input , 4 ) ;"	114:1:2655:2697	3475445	0	True				
ANR	3475449	CallExpression	"r_asm_pseudo_intN ( a , op , input , 4 )"		3475445	0					
ANR	3475450	Callee	r_asm_pseudo_intN		3475445	0					
ANR	3475451	Identifier	r_asm_pseudo_intN		3475445	0					
ANR	3475452	ArgumentList	a		3475445	1					
ANR	3475453	Argument	a		3475445	0					
ANR	3475454	Identifier	a		3475445	0					
ANR	3475455	Argument	op		3475445	1					
ANR	3475456	Identifier	op		3475445	0					
ANR	3475457	Argument	input		3475445	2					
ANR	3475458	Identifier	input		3475445	0					
ANR	3475459	Argument	4		3475445	3					
ANR	3475460	PrimaryExpression	4		3475445	0					
ANR	3475461	ReturnType	static inline int		3475445	1					
ANR	3475462	Identifier	r_asm_pseudo_int32		3475445	2					
ANR	3475463	ParameterList	"RAsm * a , RAsmOp * op , char * input"		3475445	3					
ANR	3475464	Parameter	RAsm * a	113:37:2618:2624	3475445	0	True				
ANR	3475465	ParameterType	RAsm *		3475445	0					
ANR	3475466	Identifier	a		3475445	1					
ANR	3475467	Parameter	RAsmOp * op	113:46:2627:2636	3475445	1	True				
ANR	3475468	ParameterType	RAsmOp *		3475445	0					
ANR	3475469	Identifier	op		3475445	1					
ANR	3475470	Parameter	char * input	113:58:2639:2649	3475445	2	True				
ANR	3475471	ParameterType	char *		3475445	0					
ANR	3475472	Identifier	input		3475445	1					
ANR	3475473	CFGEntryNode	ENTRY		3475445		True				
ANR	3475474	CFGExitNode	EXIT		3475445		True				
ANR	3475475	Symbol	a		3475445						
ANR	3475476	Symbol	op		3475445						
ANR	3475477	Symbol	input		3475445						
ANR	3475478	Symbol	r_asm_pseudo_intN		3475445						
ANR	3475479	Function	r_asm_pseudo_int64	117:0:2702:2820							
ANR	3475480	FunctionDef	"r_asm_pseudo_int64 (RAsm * a , RAsmOp * op , char * input)"		3475479	0					
ANR	3475481	CompoundStatement		117:71:2773:2820	3475479	0					
ANR	3475482	ReturnStatement	"return r_asm_pseudo_intN ( a , op , input , 8 ) ;"	118:1:2776:2818	3475479	0	True				
ANR	3475483	CallExpression	"r_asm_pseudo_intN ( a , op , input , 8 )"		3475479	0					
ANR	3475484	Callee	r_asm_pseudo_intN		3475479	0					
ANR	3475485	Identifier	r_asm_pseudo_intN		3475479	0					
ANR	3475486	ArgumentList	a		3475479	1					
ANR	3475487	Argument	a		3475479	0					
ANR	3475488	Identifier	a		3475479	0					
ANR	3475489	Argument	op		3475479	1					
ANR	3475490	Identifier	op		3475479	0					
ANR	3475491	Argument	input		3475479	2					
ANR	3475492	Identifier	input		3475479	0					
ANR	3475493	Argument	8		3475479	3					
ANR	3475494	PrimaryExpression	8		3475479	0					
ANR	3475495	ReturnType	static inline int		3475479	1					
ANR	3475496	Identifier	r_asm_pseudo_int64		3475479	2					
ANR	3475497	ParameterList	"RAsm * a , RAsmOp * op , char * input"		3475479	3					
ANR	3475498	Parameter	RAsm * a	117:37:2739:2745	3475479	0	True				
ANR	3475499	ParameterType	RAsm *		3475479	0					
ANR	3475500	Identifier	a		3475479	1					
ANR	3475501	Parameter	RAsmOp * op	117:46:2748:2757	3475479	1	True				
ANR	3475502	ParameterType	RAsmOp *		3475479	0					
ANR	3475503	Identifier	op		3475479	1					
ANR	3475504	Parameter	char * input	117:58:2760:2770	3475479	2	True				
ANR	3475505	ParameterType	char *		3475479	0					
ANR	3475506	Identifier	input		3475479	1					
ANR	3475507	CFGEntryNode	ENTRY		3475479		True				
ANR	3475508	CFGExitNode	EXIT		3475479		True				
ANR	3475509	Symbol	a		3475479						
ANR	3475510	Symbol	op		3475479						
ANR	3475511	Symbol	input		3475479						
ANR	3475512	Symbol	r_asm_pseudo_intN		3475479						
ANR	3475513	Function	r_asm_pseudo_byte	121:0:2823:3254							
ANR	3475514	FunctionDef	"r_asm_pseudo_byte (RAsmOp * op , char * input)"		3475513	0					
ANR	3475515	CompoundStatement		121:61:2884:3254	3475513	0					
ANR	3475516	IdentifierDeclStatement	"int i , len = 0 ;"	122:1:2887:2901	3475513	0	True				
ANR	3475517	IdentifierDecl	i		3475513	0					
ANR	3475518	IdentifierDeclType	int		3475513	0					
ANR	3475519	Identifier	i		3475513	1					
ANR	3475520	IdentifierDecl	len = 0		3475513	1					
ANR	3475521	IdentifierDeclType	int		3475513	0					
ANR	3475522	Identifier	len		3475513	1					
ANR	3475523	AssignmentExpression	len = 0		3475513	2		=			
ANR	3475524	Identifier	len		3475513	0					
ANR	3475525	PrimaryExpression	0		3475513	1					
ANR	3475526	ExpressionStatement	"r_str_replace_char ( input , ',' , ' ' )"	123:1:2904:2940	3475513	1	True				
ANR	3475527	CallExpression	"r_str_replace_char ( input , ',' , ' ' )"		3475513	0					
ANR	3475528	Callee	r_str_replace_char		3475513	0					
ANR	3475529	Identifier	r_str_replace_char		3475513	0					
ANR	3475530	ArgumentList	input		3475513	1					
ANR	3475531	Argument	input		3475513	0					
ANR	3475532	Identifier	input		3475513	0					
ANR	3475533	Argument	"','"		3475513	1					
ANR	3475534	PrimaryExpression	"','"		3475513	0					
ANR	3475535	Argument	' '		3475513	2					
ANR	3475536	PrimaryExpression	' '		3475513	0					
ANR	3475537	ExpressionStatement	len = r_str_word_count ( input )	124:1:2943:2973	3475513	2	True				
ANR	3475538	AssignmentExpression	len = r_str_word_count ( input )		3475513	0		=			
ANR	3475539	Identifier	len		3475513	0					
ANR	3475540	CallExpression	r_str_word_count ( input )		3475513	1					
ANR	3475541	Callee	r_str_word_count		3475513	0					
ANR	3475542	Identifier	r_str_word_count		3475513	0					
ANR	3475543	ArgumentList	input		3475513	1					
ANR	3475544	Argument	input		3475513	0					
ANR	3475545	Identifier	input		3475513	0					
ANR	3475546	ExpressionStatement	r_str_word_set0 ( input )	125:1:2976:2999	3475513	3	True				
ANR	3475547	CallExpression	r_str_word_set0 ( input )		3475513	0					
ANR	3475548	Callee	r_str_word_set0		3475513	0					
ANR	3475549	Identifier	r_str_word_set0		3475513	0					
ANR	3475550	ArgumentList	input		3475513	1					
ANR	3475551	Argument	input		3475513	0					
ANR	3475552	Identifier	input		3475513	0					
ANR	3475553	IdentifierDeclStatement	ut8 * buf = malloc ( len ) ;	126:1:3002:3025	3475513	4	True				
ANR	3475554	IdentifierDecl	* buf = malloc ( len )		3475513	0					
ANR	3475555	IdentifierDeclType	ut8 *		3475513	0					
ANR	3475556	Identifier	buf		3475513	1					
ANR	3475557	AssignmentExpression	* buf = malloc ( len )		3475513	2		=			
ANR	3475558	Identifier	buf		3475513	0					
ANR	3475559	CallExpression	malloc ( len )		3475513	1					
ANR	3475560	Callee	malloc		3475513	0					
ANR	3475561	Identifier	malloc		3475513	0					
ANR	3475562	ArgumentList	len		3475513	1					
ANR	3475563	Argument	len		3475513	0					
ANR	3475564	Identifier	len		3475513	0					
ANR	3475565	IfStatement	if ( ! buf )		3475513	5					
ANR	3475566	Condition	! buf	127:5:3032:3035	3475513	0	True				
ANR	3475567	UnaryOperationExpression	! buf		3475513	0					
ANR	3475568	UnaryOperator	!		3475513	0					
ANR	3475569	Identifier	buf		3475513	1					
ANR	3475570	CompoundStatement		7:11:153:153	3475513	1					
ANR	3475571	ReturnStatement	return 0 ;	128:2:3042:3050	3475513	0	True				
ANR	3475572	PrimaryExpression	0		3475513	0					
ANR	3475573	ForStatement	for ( i = 0 ; i < len ; i ++ )		3475513	6					
ANR	3475574	ForInit	i = 0 ;	130:6:3061:3066	3475513	0	True				
ANR	3475575	AssignmentExpression	i = 0		3475513	0		=			
ANR	3475576	Identifier	i		3475513	0					
ANR	3475577	PrimaryExpression	0		3475513	1					
ANR	3475578	Condition	i < len	130:13:3068:3074	3475513	1	True				
ANR	3475579	RelationalExpression	i < len		3475513	0		<			
ANR	3475580	Identifier	i		3475513	0					
ANR	3475581	Identifier	len		3475513	1					
ANR	3475582	PostIncDecOperationExpression	i ++	130:22:3077:3079	3475513	2	True				
ANR	3475583	Identifier	i		3475513	0					
ANR	3475584	IncDec	++		3475513	1					
ANR	3475585	CompoundStatement		12:2:250:288	3475513	3					
ANR	3475586	IdentifierDeclStatement	"const char * word = r_str_word_get0 ( input , i ) ;"	131:2:3086:3131	3475513	0	True				
ANR	3475587	IdentifierDecl	"* word = r_str_word_get0 ( input , i )"		3475513	0					
ANR	3475588	IdentifierDeclType	const char *		3475513	0					
ANR	3475589	Identifier	word		3475513	1					
ANR	3475590	AssignmentExpression	"* word = r_str_word_get0 ( input , i )"		3475513	2		=			
ANR	3475591	Identifier	word		3475513	0					
ANR	3475592	CallExpression	"r_str_word_get0 ( input , i )"		3475513	1					
ANR	3475593	Callee	r_str_word_get0		3475513	0					
ANR	3475594	Identifier	r_str_word_get0		3475513	0					
ANR	3475595	ArgumentList	input		3475513	1					
ANR	3475596	Argument	input		3475513	0					
ANR	3475597	Identifier	input		3475513	0					
ANR	3475598	Argument	i		3475513	1					
ANR	3475599	Identifier	i		3475513	0					
ANR	3475600	IdentifierDeclStatement	"int num = ( int ) r_num_math ( NULL , word ) ;"	132:2:3135:3173	3475513	1	True				
ANR	3475601	IdentifierDecl	"num = ( int ) r_num_math ( NULL , word )"		3475513	0					
ANR	3475602	IdentifierDeclType	int		3475513	0					
ANR	3475603	Identifier	num		3475513	1					
ANR	3475604	AssignmentExpression	"num = ( int ) r_num_math ( NULL , word )"		3475513	2		=			
ANR	3475605	Identifier	num		3475513	0					
ANR	3475606	CastExpression	"( int ) r_num_math ( NULL , word )"		3475513	1					
ANR	3475607	CastTarget	int		3475513	0					
ANR	3475608	CallExpression	"r_num_math ( NULL , word )"		3475513	1					
ANR	3475609	Callee	r_num_math		3475513	0					
ANR	3475610	Identifier	r_num_math		3475513	0					
ANR	3475611	ArgumentList	NULL		3475513	1					
ANR	3475612	Argument	NULL		3475513	0					
ANR	3475613	Identifier	NULL		3475513	0					
ANR	3475614	Argument	word		3475513	1					
ANR	3475615	Identifier	word		3475513	0					
ANR	3475616	ExpressionStatement	buf [ i ] = num	133:2:3177:3189	3475513	2	True				
ANR	3475617	AssignmentExpression	buf [ i ] = num		3475513	0		=			
ANR	3475618	ArrayIndexing	buf [ i ]		3475513	0					
ANR	3475619	Identifier	buf		3475513	0					
ANR	3475620	Identifier	i		3475513	1					
ANR	3475621	Identifier	num		3475513	1					
ANR	3475622	ExpressionStatement	"r_asm_op_set_buf ( op , buf , len )"	135:1:3195:3226	3475513	7	True				
ANR	3475623	CallExpression	"r_asm_op_set_buf ( op , buf , len )"		3475513	0					
ANR	3475624	Callee	r_asm_op_set_buf		3475513	0					
ANR	3475625	Identifier	r_asm_op_set_buf		3475513	0					
ANR	3475626	ArgumentList	op		3475513	1					
ANR	3475627	Argument	op		3475513	0					
ANR	3475628	Identifier	op		3475513	0					
ANR	3475629	Argument	buf		3475513	1					
ANR	3475630	Identifier	buf		3475513	0					
ANR	3475631	Argument	len		3475513	2					
ANR	3475632	Identifier	len		3475513	0					
ANR	3475633	ExpressionStatement	free ( buf )	136:1:3229:3239	3475513	8	True				
ANR	3475634	CallExpression	free ( buf )		3475513	0					
ANR	3475635	Callee	free		3475513	0					
ANR	3475636	Identifier	free		3475513	0					
ANR	3475637	ArgumentList	buf		3475513	1					
ANR	3475638	Argument	buf		3475513	0					
ANR	3475639	Identifier	buf		3475513	0					
ANR	3475640	ReturnStatement	return len ;	137:1:3242:3252	3475513	9	True				
ANR	3475641	Identifier	len		3475513	0					
ANR	3475642	ReturnType	static inline int		3475513	1					
ANR	3475643	Identifier	r_asm_pseudo_byte		3475513	2					
ANR	3475644	ParameterList	"RAsmOp * op , char * input"		3475513	3					
ANR	3475645	Parameter	RAsmOp * op	121:36:2859:2868	3475513	0	True				
ANR	3475646	ParameterType	RAsmOp *		3475513	0					
ANR	3475647	Identifier	op		3475513	1					
ANR	3475648	Parameter	char * input	121:48:2871:2881	3475513	1	True				
ANR	3475649	ParameterType	char *		3475513	0					
ANR	3475650	Identifier	input		3475513	1					
ANR	3475651	CFGEntryNode	ENTRY		3475513		True				
ANR	3475652	CFGExitNode	EXIT		3475513		True				
ANR	3475653	Symbol	op		3475513						
ANR	3475654	Symbol	malloc		3475513						
ANR	3475655	Symbol	* buf		3475513						
ANR	3475656	Symbol	NULL		3475513						
ANR	3475657	Symbol	num		3475513						
ANR	3475658	Symbol	i		3475513						
ANR	3475659	Symbol	r_str_word_get0		3475513						
ANR	3475660	Symbol	r_num_math		3475513						
ANR	3475661	Symbol	input		3475513						
ANR	3475662	Symbol	r_str_word_count		3475513						
ANR	3475663	Symbol	buf		3475513						
ANR	3475664	Symbol	* i		3475513						
ANR	3475665	Symbol	len		3475513						
ANR	3475666	Symbol	word		3475513						
ANR	3475667	Function	r_asm_pseudo_fill	140:0:3257:3687							
ANR	3475668	FunctionDef	"r_asm_pseudo_fill (RAsmOp * op , char * input)"		3475667	0					
ANR	3475669	CompoundStatement		140:61:3318:3687	3475667	0					
ANR	3475670	IdentifierDeclStatement	"int i , repeat = 0 , size = 0 , value = 0 ;"	141:1:3321:3355	3475667	0	True				
ANR	3475671	IdentifierDecl	i		3475667	0					
ANR	3475672	IdentifierDeclType	int		3475667	0					
ANR	3475673	Identifier	i		3475667	1					
ANR	3475674	IdentifierDecl	repeat = 0		3475667	1					
ANR	3475675	IdentifierDeclType	int		3475667	0					
ANR	3475676	Identifier	repeat		3475667	1					
ANR	3475677	AssignmentExpression	repeat = 0		3475667	2		=			
ANR	3475678	Identifier	repeat		3475667	0					
ANR	3475679	PrimaryExpression	0		3475667	1					
ANR	3475680	IdentifierDecl	size = 0		3475667	2					
ANR	3475681	IdentifierDeclType	int		3475667	0					
ANR	3475682	Identifier	size		3475667	1					
ANR	3475683	AssignmentExpression	size = 0		3475667	2		=			
ANR	3475684	Identifier	size		3475667	0					
ANR	3475685	PrimaryExpression	0		3475667	1					
ANR	3475686	IdentifierDecl	value = 0		3475667	3					
ANR	3475687	IdentifierDeclType	int		3475667	0					
ANR	3475688	Identifier	value		3475667	1					
ANR	3475689	AssignmentExpression	value = 0		3475667	2		=			
ANR	3475690	Identifier	value		3475667	0					
ANR	3475691	PrimaryExpression	0		3475667	1					
ANR	3475692	ExpressionStatement	"sscanf ( input , ""%d,%d,%d"" , & repeat , & size , & value )"	142:1:3358:3408	3475667	1	True				
ANR	3475693	CallExpression	"sscanf ( input , ""%d,%d,%d"" , & repeat , & size , & value )"		3475667	0					
ANR	3475694	Callee	sscanf		3475667	0					
ANR	3475695	Identifier	sscanf		3475667	0					
ANR	3475696	ArgumentList	input		3475667	1					
ANR	3475697	Argument	input		3475667	0					
ANR	3475698	Identifier	input		3475667	0					
ANR	3475699	Argument	"""%d,%d,%d"""		3475667	1					
ANR	3475700	PrimaryExpression	"""%d,%d,%d"""		3475667	0					
ANR	3475701	Argument	& repeat		3475667	2					
ANR	3475702	UnaryOperationExpression	& repeat		3475667	0					
ANR	3475703	UnaryOperator	&		3475667	0					
ANR	3475704	Identifier	repeat		3475667	1					
ANR	3475705	Argument	& size		3475667	3					
ANR	3475706	UnaryOperationExpression	& size		3475667	0					
ANR	3475707	UnaryOperator	&		3475667	0					
ANR	3475708	Identifier	size		3475667	1					
ANR	3475709	Argument	& value		3475667	4					
ANR	3475710	UnaryOperationExpression	& value		3475667	0					
ANR	3475711	UnaryOperator	&		3475667	0					
ANR	3475712	Identifier	value		3475667	1					
ANR	3475713	ExpressionStatement	size *= ( sizeof ( value ) * repeat )	143:1:3425:3458	3475667	2	True				
ANR	3475714	AssignmentExpression	size *= ( sizeof ( value ) * repeat )		3475667	0		*=			
ANR	3475715	Identifier	size		3475667	0					
ANR	3475716	MultiplicativeExpression	sizeof ( value ) * repeat		3475667	1		*			
ANR	3475717	SizeofExpression	sizeof ( value )		3475667	0					
ANR	3475718	Sizeof	sizeof		3475667	0					
ANR	3475719	SizeofOperand	value		3475667	1					
ANR	3475720	Identifier	repeat		3475667	1					
ANR	3475721	IfStatement	if ( size > 0 )		3475667	3					
ANR	3475722	Condition	size > 0	144:5:3465:3472	3475667	0	True				
ANR	3475723	RelationalExpression	size > 0		3475667	0		>			
ANR	3475724	Identifier	size		3475667	0					
ANR	3475725	PrimaryExpression	0		3475667	1					
ANR	3475726	CompoundStatement		6:2:160:184	3475667	1					
ANR	3475727	IdentifierDeclStatement	ut8 * buf = malloc ( size ) ;	145:2:3479:3503	3475667	0	True				
ANR	3475728	IdentifierDecl	* buf = malloc ( size )		3475667	0					
ANR	3475729	IdentifierDeclType	ut8 *		3475667	0					
ANR	3475730	Identifier	buf		3475667	1					
ANR	3475731	AssignmentExpression	* buf = malloc ( size )		3475667	2		=			
ANR	3475732	Identifier	buf		3475667	0					
ANR	3475733	CallExpression	malloc ( size )		3475667	1					
ANR	3475734	Callee	malloc		3475667	0					
ANR	3475735	Identifier	malloc		3475667	0					
ANR	3475736	ArgumentList	size		3475667	1					
ANR	3475737	Argument	size		3475667	0					
ANR	3475738	Identifier	size		3475667	0					
ANR	3475739	ForStatement	for ( i = 0 ; i < size ; i += sizeof ( value ) )		3475667	1					
ANR	3475740	ForInit	i = 0 ;	146:7:3512:3517	3475667	0	True				
ANR	3475741	AssignmentExpression	i = 0		3475667	0		=			
ANR	3475742	Identifier	i		3475667	0					
ANR	3475743	PrimaryExpression	0		3475667	1					
ANR	3475744	Condition	i < size	146:14:3519:3526	3475667	1	True				
ANR	3475745	RelationalExpression	i < size		3475667	0		<			
ANR	3475746	Identifier	i		3475667	0					
ANR	3475747	Identifier	size		3475667	1					
ANR	3475748	AssignmentExpression	i += sizeof ( value )	146:24:3529:3545	3475667	2	True	+=			
ANR	3475749	Identifier	i		3475667	0					
ANR	3475750	SizeofExpression	sizeof ( value )		3475667	1					
ANR	3475751	Sizeof	sizeof		3475667	0					
ANR	3475752	SizeofOperand	value		3475667	1					
ANR	3475753	CompoundStatement		7:43:229:229	3475667	3					
ANR	3475754	ExpressionStatement	"memcpy ( & buf [ i ] , & value , sizeof ( value ) )"	147:3:3553:3592	3475667	0	True				
ANR	3475755	CallExpression	"memcpy ( & buf [ i ] , & value , sizeof ( value ) )"		3475667	0					
ANR	3475756	Callee	memcpy		3475667	0					
ANR	3475757	Identifier	memcpy		3475667	0					
ANR	3475758	ArgumentList	& buf [ i ]		3475667	1					
ANR	3475759	Argument	& buf [ i ]		3475667	0					
ANR	3475760	UnaryOperationExpression	& buf [ i ]		3475667	0					
ANR	3475761	UnaryOperator	&		3475667	0					
ANR	3475762	ArrayIndexing	buf [ i ]		3475667	1					
ANR	3475763	Identifier	buf		3475667	0					
ANR	3475764	Identifier	i		3475667	1					
ANR	3475765	Argument	& value		3475667	1					
ANR	3475766	UnaryOperationExpression	& value		3475667	0					
ANR	3475767	UnaryOperator	&		3475667	0					
ANR	3475768	Identifier	value		3475667	1					
ANR	3475769	Argument	sizeof ( value )		3475667	2					
ANR	3475770	SizeofExpression	sizeof ( value )		3475667	0					
ANR	3475771	Sizeof	sizeof		3475667	0					
ANR	3475772	SizeofOperand	value		3475667	1					
ANR	3475773	ExpressionStatement	"r_asm_op_set_buf ( op , buf , size )"	149:2:3600:3632	3475667	2	True				
ANR	3475774	CallExpression	"r_asm_op_set_buf ( op , buf , size )"		3475667	0					
ANR	3475775	Callee	r_asm_op_set_buf		3475667	0					
ANR	3475776	Identifier	r_asm_op_set_buf		3475667	0					
ANR	3475777	ArgumentList	op		3475667	1					
ANR	3475778	Argument	op		3475667	0					
ANR	3475779	Identifier	op		3475667	0					
ANR	3475780	Argument	buf		3475667	1					
ANR	3475781	Identifier	buf		3475667	0					
ANR	3475782	Argument	size		3475667	2					
ANR	3475783	Identifier	size		3475667	0					
ANR	3475784	ExpressionStatement	free ( buf )	150:2:3636:3646	3475667	3	True				
ANR	3475785	CallExpression	free ( buf )		3475667	0					
ANR	3475786	Callee	free		3475667	0					
ANR	3475787	Identifier	free		3475667	0					
ANR	3475788	ArgumentList	buf		3475667	1					
ANR	3475789	Argument	buf		3475667	0					
ANR	3475790	Identifier	buf		3475667	0					
ANR	3475791	ElseStatement	else		3475667	0					
ANR	3475792	CompoundStatement		12:8:337:337	3475667	0					
ANR	3475793	ExpressionStatement	size = 0	152:2:3660:3668	3475667	0	True				
ANR	3475794	AssignmentExpression	size = 0		3475667	0		=			
ANR	3475795	Identifier	size		3475667	0					
ANR	3475796	PrimaryExpression	0		3475667	1					
ANR	3475797	ReturnStatement	return size ;	154:1:3674:3685	3475667	4	True				
ANR	3475798	Identifier	size		3475667	0					
ANR	3475799	ReturnType	static inline int		3475667	1					
ANR	3475800	Identifier	r_asm_pseudo_fill		3475667	2					
ANR	3475801	ParameterList	"RAsmOp * op , char * input"		3475667	3					
ANR	3475802	Parameter	RAsmOp * op	140:36:3293:3302	3475667	0	True				
ANR	3475803	ParameterType	RAsmOp *		3475667	0					
ANR	3475804	Identifier	op		3475667	1					
ANR	3475805	Parameter	char * input	140:48:3305:3315	3475667	1	True				
ANR	3475806	ParameterType	char *		3475667	0					
ANR	3475807	Identifier	input		3475667	1					
ANR	3475808	CFGEntryNode	ENTRY		3475667		True				
ANR	3475809	CFGExitNode	EXIT		3475667		True				
ANR	3475810	Symbol	op		3475667						
ANR	3475811	Symbol	input		3475667						
ANR	3475812	Symbol	malloc		3475667						
ANR	3475813	Symbol	buf		3475667						
ANR	3475814	Symbol	& value		3475667						
ANR	3475815	Symbol	size		3475667						
ANR	3475816	Symbol	& repeat		3475667						
ANR	3475817	Symbol	repeat		3475667						
ANR	3475818	Symbol	i		3475667						
ANR	3475819	Symbol	& size		3475667						
ANR	3475820	Symbol	value		3475667						
ANR	3475821	Function	r_asm_pseudo_incbin	157:0:3690:4470							
ANR	3475822	FunctionDef	"r_asm_pseudo_incbin (RAsmOp * op , char * input)"		3475821	0					
ANR	3475823	CompoundStatement		157:63:3753:4470	3475821	0					
ANR	3475824	IdentifierDeclStatement	int bytes_read = 0 ;	158:1:3756:3774	3475821	0	True				
ANR	3475825	IdentifierDecl	bytes_read = 0		3475821	0					
ANR	3475826	IdentifierDeclType	int		3475821	0					
ANR	3475827	Identifier	bytes_read		3475821	1					
ANR	3475828	AssignmentExpression	bytes_read = 0		3475821	2		=			
ANR	3475829	Identifier	bytes_read		3475821	0					
ANR	3475830	PrimaryExpression	0		3475821	1					
ANR	3475831	ExpressionStatement	"r_str_replace_char ( input , ',' , ' ' )"	159:1:3777:3813	3475821	1	True				
ANR	3475832	CallExpression	"r_str_replace_char ( input , ',' , ' ' )"		3475821	0					
ANR	3475833	Callee	r_str_replace_char		3475821	0					
ANR	3475834	Identifier	r_str_replace_char		3475821	0					
ANR	3475835	ArgumentList	input		3475821	1					
ANR	3475836	Argument	input		3475821	0					
ANR	3475837	Identifier	input		3475821	0					
ANR	3475838	Argument	"','"		3475821	1					
ANR	3475839	PrimaryExpression	"','"		3475821	0					
ANR	3475840	Argument	' '		3475821	2					
ANR	3475841	PrimaryExpression	' '		3475821	0					
ANR	3475842	ExpressionStatement	r_str_word_set0 ( input )	161:1:3856:3879	3475821	2	True				
ANR	3475843	CallExpression	r_str_word_set0 ( input )		3475821	0					
ANR	3475844	Callee	r_str_word_set0		3475821	0					
ANR	3475845	Identifier	r_str_word_set0		3475821	0					
ANR	3475846	ArgumentList	input		3475821	1					
ANR	3475847	Argument	input		3475821	0					
ANR	3475848	Identifier	input		3475821	0					
ANR	3475849	IdentifierDeclStatement	"int skip = ( int ) r_num_math ( NULL , r_str_word_get0 ( input , 1 ) ) ;"	163:1:3936:3997	3475821	3	True				
ANR	3475850	IdentifierDecl	"skip = ( int ) r_num_math ( NULL , r_str_word_get0 ( input , 1 ) )"		3475821	0					
ANR	3475851	IdentifierDeclType	int		3475821	0					
ANR	3475852	Identifier	skip		3475821	1					
ANR	3475853	AssignmentExpression	"skip = ( int ) r_num_math ( NULL , r_str_word_get0 ( input , 1 ) )"		3475821	2		=			
ANR	3475854	Identifier	skip		3475821	0					
ANR	3475855	CastExpression	"( int ) r_num_math ( NULL , r_str_word_get0 ( input , 1 ) )"		3475821	1					
ANR	3475856	CastTarget	int		3475821	0					
ANR	3475857	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( input , 1 ) )"		3475821	1					
ANR	3475858	Callee	r_num_math		3475821	0					
ANR	3475859	Identifier	r_num_math		3475821	0					
ANR	3475860	ArgumentList	NULL		3475821	1					
ANR	3475861	Argument	NULL		3475821	0					
ANR	3475862	Identifier	NULL		3475821	0					
ANR	3475863	Argument	"r_str_word_get0 ( input , 1 )"		3475821	1					
ANR	3475864	CallExpression	"r_str_word_get0 ( input , 1 )"		3475821	0					
ANR	3475865	Callee	r_str_word_get0		3475821	0					
ANR	3475866	Identifier	r_str_word_get0		3475821	0					
ANR	3475867	ArgumentList	input		3475821	1					
ANR	3475868	Argument	input		3475821	0					
ANR	3475869	Identifier	input		3475821	0					
ANR	3475870	Argument	1		3475821	1					
ANR	3475871	PrimaryExpression	1		3475821	0					
ANR	3475872	IdentifierDeclStatement	"int count = ( int ) r_num_math ( NULL , r_str_word_get0 ( input , 2 ) ) ;"	164:1:4000:4061	3475821	4	True				
ANR	3475873	IdentifierDecl	"count = ( int ) r_num_math ( NULL , r_str_word_get0 ( input , 2 ) )"		3475821	0					
ANR	3475874	IdentifierDeclType	int		3475821	0					
ANR	3475875	Identifier	count		3475821	1					
ANR	3475876	AssignmentExpression	"count = ( int ) r_num_math ( NULL , r_str_word_get0 ( input , 2 ) )"		3475821	2		=			
ANR	3475877	Identifier	count		3475821	0					
ANR	3475878	CastExpression	"( int ) r_num_math ( NULL , r_str_word_get0 ( input , 2 ) )"		3475821	1					
ANR	3475879	CastTarget	int		3475821	0					
ANR	3475880	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( input , 2 ) )"		3475821	1					
ANR	3475881	Callee	r_num_math		3475821	0					
ANR	3475882	Identifier	r_num_math		3475821	0					
ANR	3475883	ArgumentList	NULL		3475821	1					
ANR	3475884	Argument	NULL		3475821	0					
ANR	3475885	Identifier	NULL		3475821	0					
ANR	3475886	Argument	"r_str_word_get0 ( input , 2 )"		3475821	1					
ANR	3475887	CallExpression	"r_str_word_get0 ( input , 2 )"		3475821	0					
ANR	3475888	Callee	r_str_word_get0		3475821	0					
ANR	3475889	Identifier	r_str_word_get0		3475821	0					
ANR	3475890	ArgumentList	input		3475821	1					
ANR	3475891	Argument	input		3475821	0					
ANR	3475892	Identifier	input		3475821	0					
ANR	3475893	Argument	2		3475821	1					
ANR	3475894	PrimaryExpression	2		3475821	0					
ANR	3475895	IdentifierDeclStatement	"char * content = r_file_slurp ( input , & bytes_read ) ;"	165:1:4064:4113	3475821	5	True				
ANR	3475896	IdentifierDecl	"* content = r_file_slurp ( input , & bytes_read )"		3475821	0					
ANR	3475897	IdentifierDeclType	char *		3475821	0					
ANR	3475898	Identifier	content		3475821	1					
ANR	3475899	AssignmentExpression	"* content = r_file_slurp ( input , & bytes_read )"		3475821	2		=			
ANR	3475900	Identifier	content		3475821	0					
ANR	3475901	CallExpression	"r_file_slurp ( input , & bytes_read )"		3475821	1					
ANR	3475902	Callee	r_file_slurp		3475821	0					
ANR	3475903	Identifier	r_file_slurp		3475821	0					
ANR	3475904	ArgumentList	input		3475821	1					
ANR	3475905	Argument	input		3475821	0					
ANR	3475906	Identifier	input		3475821	0					
ANR	3475907	Argument	& bytes_read		3475821	1					
ANR	3475908	UnaryOperationExpression	& bytes_read		3475821	0					
ANR	3475909	UnaryOperator	&		3475821	0					
ANR	3475910	Identifier	bytes_read		3475821	1					
ANR	3475911	IfStatement	if ( skip > 0 )		3475821	6					
ANR	3475912	Condition	skip > 0	166:5:4120:4127	3475821	0	True				
ANR	3475913	RelationalExpression	skip > 0		3475821	0		>			
ANR	3475914	Identifier	skip		3475821	0					
ANR	3475915	PrimaryExpression	0		3475821	1					
ANR	3475916	CompoundStatement		10:15:376:376	3475821	1					
ANR	3475917	ExpressionStatement	skip = skip > bytes_read ? bytes_read : skip	167:2:4134:4178	3475821	0	True				
ANR	3475918	AssignmentExpression	skip = skip > bytes_read ? bytes_read : skip		3475821	0		=			
ANR	3475919	Identifier	skip		3475821	0					
ANR	3475920	ConditionalExpression	skip > bytes_read ? bytes_read : skip		3475821	1					
ANR	3475921	Condition	skip > bytes_read		3475821	0					
ANR	3475922	RelationalExpression	skip > bytes_read		3475821	0		>			
ANR	3475923	Identifier	skip		3475821	0					
ANR	3475924	Identifier	bytes_read		3475821	1					
ANR	3475925	Identifier	bytes_read		3475821	1					
ANR	3475926	Identifier	skip		3475821	2					
ANR	3475927	IfStatement	if ( count > 0 )		3475821	7					
ANR	3475928	Condition	count > 0	169:5:4188:4196	3475821	0	True				
ANR	3475929	RelationalExpression	count > 0		3475821	0		>			
ANR	3475930	Identifier	count		3475821	0					
ANR	3475931	PrimaryExpression	0		3475821	1					
ANR	3475932	CompoundStatement		13:16:445:445	3475821	1					
ANR	3475933	ExpressionStatement	count = count > bytes_read ? 0 : count	170:2:4203:4241	3475821	0	True				
ANR	3475934	AssignmentExpression	count = count > bytes_read ? 0 : count		3475821	0		=			
ANR	3475935	Identifier	count		3475821	0					
ANR	3475936	ConditionalExpression	count > bytes_read ? 0 : count		3475821	1					
ANR	3475937	Condition	count > bytes_read		3475821	0					
ANR	3475938	RelationalExpression	count > bytes_read		3475821	0		>			
ANR	3475939	Identifier	count		3475821	0					
ANR	3475940	Identifier	bytes_read		3475821	1					
ANR	3475941	PrimaryExpression	0		3475821	1					
ANR	3475942	Identifier	count		3475821	2					
ANR	3475943	ElseStatement	else		3475821	0					
ANR	3475944	CompoundStatement		15:8:497:497	3475821	0					
ANR	3475945	ExpressionStatement	count = bytes_read	172:2:4255:4273	3475821	0	True				
ANR	3475946	AssignmentExpression	count = bytes_read		3475821	0		=			
ANR	3475947	Identifier	count		3475821	0					
ANR	3475948	Identifier	bytes_read		3475821	1					
ANR	3475949	ExpressionStatement	r_buf_free ( op -> buf_inc )	175:1:4323:4347	3475821	8	True				
ANR	3475950	CallExpression	r_buf_free ( op -> buf_inc )		3475821	0					
ANR	3475951	Callee	r_buf_free		3475821	0					
ANR	3475952	Identifier	r_buf_free		3475821	0					
ANR	3475953	ArgumentList	op -> buf_inc		3475821	1					
ANR	3475954	Argument	op -> buf_inc		3475821	0					
ANR	3475955	PtrMemberAccess	op -> buf_inc		3475821	0					
ANR	3475956	Identifier	op		3475821	0					
ANR	3475957	Identifier	buf_inc		3475821	1					
ANR	3475958	ExpressionStatement	op -> buf_inc = r_buf_new_with_string ( content + skip )	176:1:4350:4402	3475821	9	True				
ANR	3475959	AssignmentExpression	op -> buf_inc = r_buf_new_with_string ( content + skip )		3475821	0		=			
ANR	3475960	PtrMemberAccess	op -> buf_inc		3475821	0					
ANR	3475961	Identifier	op		3475821	0					
ANR	3475962	Identifier	buf_inc		3475821	1					
ANR	3475963	CallExpression	r_buf_new_with_string ( content + skip )		3475821	1					
ANR	3475964	Callee	r_buf_new_with_string		3475821	0					
ANR	3475965	Identifier	r_buf_new_with_string		3475821	0					
ANR	3475966	ArgumentList	content + skip		3475821	1					
ANR	3475967	Argument	content + skip		3475821	0					
ANR	3475968	AdditiveExpression	content + skip		3475821	0		+			
ANR	3475969	Identifier	content		3475821	0					
ANR	3475970	Identifier	skip		3475821	1					
ANR	3475971	ExpressionStatement	free ( content )	178:1:4439:4453	3475821	10	True				
ANR	3475972	CallExpression	free ( content )		3475821	0					
ANR	3475973	Callee	free		3475821	0					
ANR	3475974	Identifier	free		3475821	0					
ANR	3475975	ArgumentList	content		3475821	1					
ANR	3475976	Argument	content		3475821	0					
ANR	3475977	Identifier	content		3475821	0					
ANR	3475978	ReturnStatement	return count ;	179:1:4456:4468	3475821	11	True				
ANR	3475979	Identifier	count		3475821	0					
ANR	3475980	ReturnType	static inline int		3475821	1					
ANR	3475981	Identifier	r_asm_pseudo_incbin		3475821	2					
ANR	3475982	ParameterList	"RAsmOp * op , char * input"		3475821	3					
ANR	3475983	Parameter	RAsmOp * op	157:38:3728:3737	3475821	0	True				
ANR	3475984	ParameterType	RAsmOp *		3475821	0					
ANR	3475985	Identifier	op		3475821	1					
ANR	3475986	Parameter	char * input	157:50:3740:3750	3475821	1	True				
ANR	3475987	ParameterType	char *		3475821	0					
ANR	3475988	Identifier	input		3475821	1					
ANR	3475989	CFGEntryNode	ENTRY		3475821		True				
ANR	3475990	CFGExitNode	EXIT		3475821		True				
ANR	3475991	Symbol	op		3475821						
ANR	3475992	Symbol	r_file_slurp		3475821						
ANR	3475993	Symbol	NULL		3475821						
ANR	3475994	Symbol	* op		3475821						
ANR	3475995	Symbol	count		3475821						
ANR	3475996	Symbol	bytes_read		3475821						
ANR	3475997	Symbol	skip		3475821						
ANR	3475998	Symbol	r_str_word_get0		3475821						
ANR	3475999	Symbol	content		3475821						
ANR	3476000	Symbol	r_num_math		3475821						
ANR	3476001	Symbol	input		3475821						
ANR	3476002	Symbol	& bytes_read		3475821						
ANR	3476003	Symbol	op -> buf_inc		3475821						
ANR	3476004	Symbol	r_buf_new_with_string		3475821						
ANR	3476005	Function	plugin_free	182:0:4473:4556							
ANR	3476006	FunctionDef	plugin_free (RAsmPlugin * p)		3476005	0					
ANR	3476007	CompoundStatement		182:39:4512:4556	3476005	0					
ANR	3476008	IfStatement	if ( p && p -> fini )		3476005	0					
ANR	3476009	Condition	p && p -> fini	183:5:4519:4530	3476005	0	True				
ANR	3476010	AndExpression	p && p -> fini		3476005	0		&&			
ANR	3476011	Identifier	p		3476005	0					
ANR	3476012	PtrMemberAccess	p -> fini		3476005	1					
ANR	3476013	Identifier	p		3476005	0					
ANR	3476014	Identifier	fini		3476005	1					
ANR	3476015	CompoundStatement		2:19:20:20	3476005	1					
ANR	3476016	ExpressionStatement	p -> fini ( NULL )	184:2:4537:4551	3476005	0	True				
ANR	3476017	CallExpression	p -> fini ( NULL )		3476005	0					
ANR	3476018	Callee	p -> fini		3476005	0					
ANR	3476019	PtrMemberAccess	p -> fini		3476005	0					
ANR	3476020	Identifier	p		3476005	0					
ANR	3476021	Identifier	fini		3476005	1					
ANR	3476022	ArgumentList	NULL		3476005	1					
ANR	3476023	Argument	NULL		3476005	0					
ANR	3476024	Identifier	NULL		3476005	0					
ANR	3476025	ReturnType	static void		3476005	1					
ANR	3476026	Identifier	plugin_free		3476005	2					
ANR	3476027	ParameterList	RAsmPlugin * p		3476005	3					
ANR	3476028	Parameter	RAsmPlugin * p	182:24:4497:4509	3476005	0	True				
ANR	3476029	ParameterType	RAsmPlugin *		3476005	0					
ANR	3476030	Identifier	p		3476005	1					
ANR	3476031	CFGEntryNode	ENTRY		3476005		True				
ANR	3476032	CFGExitNode	EXIT		3476005		True				
ANR	3476033	Symbol	p		3476005						
ANR	3476034	Symbol	p -> fini		3476005						
ANR	3476035	Symbol	NULL		3476005						
ANR	3476036	Symbol	* p		3476005						
ANR	3476037	Function	r_asm_new	188:0:4559:4940							
ANR	3476038	FunctionDef	r_asm_new ()		3476037	0					
ANR	3476039	CompoundStatement		188:24:4583:4940	3476037	0					
ANR	3476040	IdentifierDeclStatement	int i ;	189:1:4586:4591	3476037	0	True				
ANR	3476041	IdentifierDecl	i		3476037	0					
ANR	3476042	IdentifierDeclType	int		3476037	0					
ANR	3476043	Identifier	i		3476037	1					
ANR	3476044	IdentifierDeclStatement	RAsm * a = R_NEW0 ( RAsm ) ;	190:1:4594:4617	3476037	1	True				
ANR	3476045	IdentifierDecl	* a = R_NEW0 ( RAsm )		3476037	0					
ANR	3476046	IdentifierDeclType	RAsm *		3476037	0					
ANR	3476047	Identifier	a		3476037	1					
ANR	3476048	AssignmentExpression	* a = R_NEW0 ( RAsm )		3476037	2		=			
ANR	3476049	Identifier	a		3476037	0					
ANR	3476050	CallExpression	R_NEW0 ( RAsm )		3476037	1					
ANR	3476051	Callee	R_NEW0		3476037	0					
ANR	3476052	Identifier	R_NEW0		3476037	0					
ANR	3476053	ArgumentList	RAsm		3476037	1					
ANR	3476054	Argument	RAsm		3476037	0					
ANR	3476055	Identifier	RAsm		3476037	0					
ANR	3476056	IfStatement	if ( ! a )		3476037	2					
ANR	3476057	Condition	! a	191:5:4624:4625	3476037	0	True				
ANR	3476058	UnaryOperationExpression	! a		3476037	0					
ANR	3476059	UnaryOperator	!		3476037	0					
ANR	3476060	Identifier	a		3476037	1					
ANR	3476061	CompoundStatement		4:9:44:44	3476037	1					
ANR	3476062	ReturnStatement	return NULL ;	192:2:4632:4643	3476037	0	True				
ANR	3476063	Identifier	NULL		3476037	0					
ANR	3476064	ExpressionStatement	a -> dataalign = 1	194:1:4649:4665	3476037	3	True				
ANR	3476065	AssignmentExpression	a -> dataalign = 1		3476037	0		=			
ANR	3476066	PtrMemberAccess	a -> dataalign		3476037	0					
ANR	3476067	Identifier	a		3476037	0					
ANR	3476068	Identifier	dataalign		3476037	1					
ANR	3476069	PrimaryExpression	1		3476037	1					
ANR	3476070	ExpressionStatement	a -> bits = R_SYS_BITS	195:1:4668:4688	3476037	4	True				
ANR	3476071	AssignmentExpression	a -> bits = R_SYS_BITS		3476037	0		=			
ANR	3476072	PtrMemberAccess	a -> bits		3476037	0					
ANR	3476073	Identifier	a		3476037	0					
ANR	3476074	Identifier	bits		3476037	1					
ANR	3476075	Identifier	R_SYS_BITS		3476037	1					
ANR	3476076	ExpressionStatement	a -> bitshift = 0	196:1:4691:4706	3476037	5	True				
ANR	3476077	AssignmentExpression	a -> bitshift = 0		3476037	0		=			
ANR	3476078	PtrMemberAccess	a -> bitshift		3476037	0					
ANR	3476079	Identifier	a		3476037	0					
ANR	3476080	Identifier	bitshift		3476037	1					
ANR	3476081	PrimaryExpression	0		3476037	1					
ANR	3476082	ExpressionStatement	a -> syntax = R_ASM_SYNTAX_INTEL	197:1:4709:4739	3476037	6	True				
ANR	3476083	AssignmentExpression	a -> syntax = R_ASM_SYNTAX_INTEL		3476037	0		=			
ANR	3476084	PtrMemberAccess	a -> syntax		3476037	0					
ANR	3476085	Identifier	a		3476037	0					
ANR	3476086	Identifier	syntax		3476037	1					
ANR	3476087	Identifier	R_ASM_SYNTAX_INTEL		3476037	1					
ANR	3476088	ExpressionStatement	a -> plugins = r_list_newf ( ( RListFree ) plugin_free )	198:1:4742:4791	3476037	7	True				
ANR	3476089	AssignmentExpression	a -> plugins = r_list_newf ( ( RListFree ) plugin_free )		3476037	0		=			
ANR	3476090	PtrMemberAccess	a -> plugins		3476037	0					
ANR	3476091	Identifier	a		3476037	0					
ANR	3476092	Identifier	plugins		3476037	1					
ANR	3476093	CallExpression	r_list_newf ( ( RListFree ) plugin_free )		3476037	1					
ANR	3476094	Callee	r_list_newf		3476037	0					
ANR	3476095	Identifier	r_list_newf		3476037	0					
ANR	3476096	ArgumentList	( RListFree ) plugin_free		3476037	1					
ANR	3476097	Argument	( RListFree ) plugin_free		3476037	0					
ANR	3476098	CastExpression	( RListFree ) plugin_free		3476037	0					
ANR	3476099	CastTarget	RListFree		3476037	0					
ANR	3476100	Identifier	plugin_free		3476037	1					
ANR	3476101	IfStatement	if ( ! a -> plugins )		3476037	8					
ANR	3476102	Condition	! a -> plugins	199:5:4798:4808	3476037	0	True				
ANR	3476103	UnaryOperationExpression	! a -> plugins		3476037	0					
ANR	3476104	UnaryOperator	!		3476037	0					
ANR	3476105	PtrMemberAccess	a -> plugins		3476037	1					
ANR	3476106	Identifier	a		3476037	0					
ANR	3476107	Identifier	plugins		3476037	1					
ANR	3476108	CompoundStatement		12:18:227:227	3476037	1					
ANR	3476109	ExpressionStatement	free ( a )	200:2:4815:4823	3476037	0	True				
ANR	3476110	CallExpression	free ( a )		3476037	0					
ANR	3476111	Callee	free		3476037	0					
ANR	3476112	Identifier	free		3476037	0					
ANR	3476113	ArgumentList	a		3476037	1					
ANR	3476114	Argument	a		3476037	0					
ANR	3476115	Identifier	a		3476037	0					
ANR	3476116	ReturnStatement	return NULL ;	201:2:4827:4838	3476037	1	True				
ANR	3476117	Identifier	NULL		3476037	0					
ANR	3476118	ForStatement	for ( i = 0 ; asm_static_plugins [ i ] ; i ++ )		3476037	9					
ANR	3476119	ForInit	i = 0 ;	203:6:4849:4854	3476037	0	True				
ANR	3476120	AssignmentExpression	i = 0		3476037	0		=			
ANR	3476121	Identifier	i		3476037	0					
ANR	3476122	PrimaryExpression	0		3476037	1					
ANR	3476123	Condition	asm_static_plugins [ i ]	203:13:4856:4876	3476037	1	True				
ANR	3476124	ArrayIndexing	asm_static_plugins [ i ]		3476037	0					
ANR	3476125	Identifier	asm_static_plugins		3476037	0					
ANR	3476126	Identifier	i		3476037	1					
ANR	3476127	PostIncDecOperationExpression	i ++	203:36:4879:4881	3476037	2	True				
ANR	3476128	Identifier	i		3476037	0					
ANR	3476129	IncDec	++		3476037	1					
ANR	3476130	CompoundStatement		16:41:300:300	3476037	3					
ANR	3476131	ExpressionStatement	"r_asm_add ( a , asm_static_plugins [ i ] )"	204:2:4888:4924	3476037	0	True				
ANR	3476132	CallExpression	"r_asm_add ( a , asm_static_plugins [ i ] )"		3476037	0					
ANR	3476133	Callee	r_asm_add		3476037	0					
ANR	3476134	Identifier	r_asm_add		3476037	0					
ANR	3476135	ArgumentList	a		3476037	1					
ANR	3476136	Argument	a		3476037	0					
ANR	3476137	Identifier	a		3476037	0					
ANR	3476138	Argument	asm_static_plugins [ i ]		3476037	1					
ANR	3476139	ArrayIndexing	asm_static_plugins [ i ]		3476037	0					
ANR	3476140	Identifier	asm_static_plugins		3476037	0					
ANR	3476141	Identifier	i		3476037	1					
ANR	3476142	ReturnStatement	return a ;	206:1:4930:4938	3476037	10	True				
ANR	3476143	Identifier	a		3476037	0					
ANR	3476144	ReturnType	R_API RAsm *		3476037	1					
ANR	3476145	Identifier	r_asm_new		3476037	2					
ANR	3476146	ParameterList			3476037	3					
ANR	3476147	CFGEntryNode	ENTRY		3476037		True				
ANR	3476148	CFGExitNode	EXIT		3476037		True				
ANR	3476149	Symbol	R_ASM_SYNTAX_INTEL		3476037						
ANR	3476150	Symbol	a		3476037						
ANR	3476151	Symbol	NULL		3476037						
ANR	3476152	Symbol	r_list_newf		3476037						
ANR	3476153	Symbol	i		3476037						
ANR	3476154	Symbol	asm_static_plugins		3476037						
ANR	3476155	Symbol	* a		3476037						
ANR	3476156	Symbol	a -> dataalign		3476037						
ANR	3476157	Symbol	RAsm		3476037						
ANR	3476158	Symbol	plugin_free		3476037						
ANR	3476159	Symbol	R_NEW0		3476037						
ANR	3476160	Symbol	* i		3476037						
ANR	3476161	Symbol	a -> syntax		3476037						
ANR	3476162	Symbol	R_SYS_BITS		3476037						
ANR	3476163	Symbol	a -> bitshift		3476037						
ANR	3476164	Symbol	a -> plugins		3476037						
ANR	3476165	Symbol	* asm_static_plugins		3476037						
ANR	3476166	Symbol	a -> bits		3476037						
ANR	3476167	Function	r_asm_setup	209:0:4943:5138							
ANR	3476168	FunctionDef	"r_asm_setup (RAsm * a , const char * arch , int bits , int big_endian)"		3476167	0					
ANR	3476169	CompoundStatement		209:76:5019:5138	3476167	0					
ANR	3476170	ExpressionStatement	"r_return_val_if_fail ( a && arch , false )"	210:1:5022:5061	3476167	0	True				
ANR	3476171	CallExpression	"r_return_val_if_fail ( a && arch , false )"		3476167	0					
ANR	3476172	Callee	r_return_val_if_fail		3476167	0					
ANR	3476173	Identifier	r_return_val_if_fail		3476167	0					
ANR	3476174	ArgumentList	a && arch		3476167	1					
ANR	3476175	Argument	a && arch		3476167	0					
ANR	3476176	AndExpression	a && arch		3476167	0		&&			
ANR	3476177	Identifier	a		3476167	0					
ANR	3476178	Identifier	arch		3476167	1					
ANR	3476179	Argument	false		3476167	1					
ANR	3476180	Identifier	false		3476167	0					
ANR	3476181	IdentifierDeclStatement	"bool ret = ! r_asm_use ( a , arch ) ;"	211:1:5064:5095	3476167	1	True				
ANR	3476182	IdentifierDecl	"ret = ! r_asm_use ( a , arch )"		3476167	0					
ANR	3476183	IdentifierDeclType	bool		3476167	0					
ANR	3476184	Identifier	ret		3476167	1					
ANR	3476185	AssignmentExpression	"ret = ! r_asm_use ( a , arch )"		3476167	2		=			
ANR	3476186	Identifier	ret		3476167	0					
ANR	3476187	UnaryOperationExpression	"! r_asm_use ( a , arch )"		3476167	1					
ANR	3476188	UnaryOperator	!		3476167	0					
ANR	3476189	CallExpression	"r_asm_use ( a , arch )"		3476167	1					
ANR	3476190	Callee	r_asm_use		3476167	0					
ANR	3476191	Identifier	r_asm_use		3476167	0					
ANR	3476192	ArgumentList	a		3476167	1					
ANR	3476193	Argument	a		3476167	0					
ANR	3476194	Identifier	a		3476167	0					
ANR	3476195	Argument	arch		3476167	1					
ANR	3476196	Identifier	arch		3476167	0					
ANR	3476197	ReturnStatement	"return ret | ! r_asm_set_bits ( a , bits ) ;"	212:1:5098:5136	3476167	2	True				
ANR	3476198	InclusiveOrExpression	"ret | ! r_asm_set_bits ( a , bits )"		3476167	0		|			
ANR	3476199	Identifier	ret		3476167	0					
ANR	3476200	UnaryOperationExpression	"! r_asm_set_bits ( a , bits )"		3476167	1					
ANR	3476201	UnaryOperator	!		3476167	0					
ANR	3476202	CallExpression	"r_asm_set_bits ( a , bits )"		3476167	1					
ANR	3476203	Callee	r_asm_set_bits		3476167	0					
ANR	3476204	Identifier	r_asm_set_bits		3476167	0					
ANR	3476205	ArgumentList	a		3476167	1					
ANR	3476206	Argument	a		3476167	0					
ANR	3476207	Identifier	a		3476167	0					
ANR	3476208	Argument	bits		3476167	1					
ANR	3476209	Identifier	bits		3476167	0					
ANR	3476210	ReturnType	R_API bool		3476167	1					
ANR	3476211	Identifier	r_asm_setup		3476167	2					
ANR	3476212	ParameterList	"RAsm * a , const char * arch , int bits , int big_endian"		3476167	3					
ANR	3476213	Parameter	RAsm * a	209:23:4966:4972	3476167	0	True				
ANR	3476214	ParameterType	RAsm *		3476167	0					
ANR	3476215	Identifier	a		3476167	1					
ANR	3476216	Parameter	const char * arch	209:32:4975:4990	3476167	1	True				
ANR	3476217	ParameterType	const char *		3476167	0					
ANR	3476218	Identifier	arch		3476167	1					
ANR	3476219	Parameter	int bits	209:50:4993:5000	3476167	2	True				
ANR	3476220	ParameterType	int		3476167	0					
ANR	3476221	Identifier	bits		3476167	1					
ANR	3476222	Parameter	int big_endian	209:60:5003:5016	3476167	3	True				
ANR	3476223	ParameterType	int		3476167	0					
ANR	3476224	Identifier	big_endian		3476167	1					
ANR	3476225	CFGEntryNode	ENTRY		3476167		True				
ANR	3476226	CFGExitNode	EXIT		3476167		True				
ANR	3476227	Symbol	ret		3476167						
ANR	3476228	Symbol	a		3476167						
ANR	3476229	Symbol	big_endian		3476167						
ANR	3476230	Symbol	r_asm_set_bits		3476167						
ANR	3476231	Symbol	bits		3476167						
ANR	3476232	Symbol	false		3476167						
ANR	3476233	Symbol	r_asm_use		3476167						
ANR	3476234	Symbol	arch		3476167						
ANR	3476235	Function	r_asm_filter_input	216:0:5159:5427							
ANR	3476236	FunctionDef	"r_asm_filter_input (RAsm * a , const char * f)"		3476235	0					
ANR	3476237	CompoundStatement		216:53:5212:5427	3476235	0					
ANR	3476238	ExpressionStatement	"r_return_val_if_fail ( a && f , false )"	217:1:5215:5251	3476235	0	True				
ANR	3476239	CallExpression	"r_return_val_if_fail ( a && f , false )"		3476235	0					
ANR	3476240	Callee	r_return_val_if_fail		3476235	0					
ANR	3476241	Identifier	r_return_val_if_fail		3476235	0					
ANR	3476242	ArgumentList	a && f		3476235	1					
ANR	3476243	Argument	a && f		3476235	0					
ANR	3476244	AndExpression	a && f		3476235	0		&&			
ANR	3476245	Identifier	a		3476235	0					
ANR	3476246	Identifier	f		3476235	1					
ANR	3476247	Argument	false		3476235	1					
ANR	3476248	Identifier	false		3476235	0					
ANR	3476249	IfStatement	if ( ! a -> ifilter )		3476235	1					
ANR	3476250	Condition	! a -> ifilter	218:5:5258:5268	3476235	0	True				
ANR	3476251	UnaryOperationExpression	! a -> ifilter		3476235	0					
ANR	3476252	UnaryOperator	!		3476235	0					
ANR	3476253	PtrMemberAccess	a -> ifilter		3476235	1					
ANR	3476254	Identifier	a		3476235	0					
ANR	3476255	Identifier	ifilter		3476235	1					
ANR	3476256	CompoundStatement		3:18:58:58	3476235	1					
ANR	3476257	ExpressionStatement	a -> ifilter = r_parse_new ( )	219:2:5275:5302	3476235	0	True				
ANR	3476258	AssignmentExpression	a -> ifilter = r_parse_new ( )		3476235	0		=			
ANR	3476259	PtrMemberAccess	a -> ifilter		3476235	0					
ANR	3476260	Identifier	a		3476235	0					
ANR	3476261	Identifier	ifilter		3476235	1					
ANR	3476262	CallExpression	r_parse_new ( )		3476235	1					
ANR	3476263	Callee	r_parse_new		3476235	0					
ANR	3476264	Identifier	r_parse_new		3476235	0					
ANR	3476265	ArgumentList			3476235	1					
ANR	3476266	IfStatement	"if ( ! r_parse_use ( a -> ifilter , f ) )"		3476235	2					
ANR	3476267	Condition	"! r_parse_use ( a -> ifilter , f )"	221:5:5312:5339	3476235	0	True				
ANR	3476268	UnaryOperationExpression	"! r_parse_use ( a -> ifilter , f )"		3476235	0					
ANR	3476269	UnaryOperator	!		3476235	0					
ANR	3476270	CallExpression	"r_parse_use ( a -> ifilter , f )"		3476235	1					
ANR	3476271	Callee	r_parse_use		3476235	0					
ANR	3476272	Identifier	r_parse_use		3476235	0					
ANR	3476273	ArgumentList	a -> ifilter		3476235	1					
ANR	3476274	Argument	a -> ifilter		3476235	0					
ANR	3476275	PtrMemberAccess	a -> ifilter		3476235	0					
ANR	3476276	Identifier	a		3476235	0					
ANR	3476277	Identifier	ifilter		3476235	1					
ANR	3476278	Argument	f		3476235	1					
ANR	3476279	Identifier	f		3476235	0					
ANR	3476280	CompoundStatement		6:35:129:129	3476235	1					
ANR	3476281	ExpressionStatement	r_parse_free ( a -> ifilter )	222:2:5346:5371	3476235	0	True				
ANR	3476282	CallExpression	r_parse_free ( a -> ifilter )		3476235	0					
ANR	3476283	Callee	r_parse_free		3476235	0					
ANR	3476284	Identifier	r_parse_free		3476235	0					
ANR	3476285	ArgumentList	a -> ifilter		3476235	1					
ANR	3476286	Argument	a -> ifilter		3476235	0					
ANR	3476287	PtrMemberAccess	a -> ifilter		3476235	0					
ANR	3476288	Identifier	a		3476235	0					
ANR	3476289	Identifier	ifilter		3476235	1					
ANR	3476290	ExpressionStatement	a -> ifilter = NULL	223:2:5375:5392	3476235	1	True				
ANR	3476291	AssignmentExpression	a -> ifilter = NULL		3476235	0		=			
ANR	3476292	PtrMemberAccess	a -> ifilter		3476235	0					
ANR	3476293	Identifier	a		3476235	0					
ANR	3476294	Identifier	ifilter		3476235	1					
ANR	3476295	Identifier	NULL		3476235	1					
ANR	3476296	ReturnStatement	return false ;	224:2:5396:5408	3476235	2	True				
ANR	3476297	Identifier	false		3476235	0					
ANR	3476298	ReturnStatement	return true ;	226:1:5414:5425	3476235	3	True				
ANR	3476299	Identifier	true		3476235	0					
ANR	3476300	ReturnType	R_API int		3476235	1					
ANR	3476301	Identifier	r_asm_filter_input		3476235	2					
ANR	3476302	ParameterList	"RAsm * a , const char * f"		3476235	3					
ANR	3476303	Parameter	RAsm * a	216:29:5188:5194	3476235	0	True				
ANR	3476304	ParameterType	RAsm *		3476235	0					
ANR	3476305	Identifier	a		3476235	1					
ANR	3476306	Parameter	const char * f	216:38:5197:5209	3476235	1	True				
ANR	3476307	ParameterType	const char *		3476235	0					
ANR	3476308	Identifier	f		3476235	1					
ANR	3476309	CFGEntryNode	ENTRY		3476235		True				
ANR	3476310	CFGExitNode	EXIT		3476235		True				
ANR	3476311	Symbol	a		3476235						
ANR	3476312	Symbol	NULL		3476235						
ANR	3476313	Symbol	r_parse_use		3476235						
ANR	3476314	Symbol	f		3476235						
ANR	3476315	Symbol	false		3476235						
ANR	3476316	Symbol	true		3476235						
ANR	3476317	Symbol	* a		3476235						
ANR	3476318	Symbol	r_parse_new		3476235						
ANR	3476319	Symbol	a -> ifilter		3476235						
ANR	3476320	Function	r_asm_filter_output	229:0:5430:5660							
ANR	3476321	FunctionDef	"r_asm_filter_output (RAsm * a , const char * f)"		3476320	0					
ANR	3476322	CompoundStatement		229:54:5484:5660	3476320	0					
ANR	3476323	IfStatement	if ( ! a -> ofilter )		3476320	0					
ANR	3476324	Condition	! a -> ofilter	230:5:5491:5501	3476320	0	True				
ANR	3476325	UnaryOperationExpression	! a -> ofilter		3476320	0					
ANR	3476326	UnaryOperator	!		3476320	0					
ANR	3476327	PtrMemberAccess	a -> ofilter		3476320	1					
ANR	3476328	Identifier	a		3476320	0					
ANR	3476329	Identifier	ofilter		3476320	1					
ANR	3476330	CompoundStatement		2:18:19:19	3476320	1					
ANR	3476331	ExpressionStatement	a -> ofilter = r_parse_new ( )	231:2:5508:5535	3476320	0	True				
ANR	3476332	AssignmentExpression	a -> ofilter = r_parse_new ( )		3476320	0		=			
ANR	3476333	PtrMemberAccess	a -> ofilter		3476320	0					
ANR	3476334	Identifier	a		3476320	0					
ANR	3476335	Identifier	ofilter		3476320	1					
ANR	3476336	CallExpression	r_parse_new ( )		3476320	1					
ANR	3476337	Callee	r_parse_new		3476320	0					
ANR	3476338	Identifier	r_parse_new		3476320	0					
ANR	3476339	ArgumentList			3476320	1					
ANR	3476340	IfStatement	"if ( ! r_parse_use ( a -> ofilter , f ) )"		3476320	1					
ANR	3476341	Condition	"! r_parse_use ( a -> ofilter , f )"	233:5:5545:5572	3476320	0	True				
ANR	3476342	UnaryOperationExpression	"! r_parse_use ( a -> ofilter , f )"		3476320	0					
ANR	3476343	UnaryOperator	!		3476320	0					
ANR	3476344	CallExpression	"r_parse_use ( a -> ofilter , f )"		3476320	1					
ANR	3476345	Callee	r_parse_use		3476320	0					
ANR	3476346	Identifier	r_parse_use		3476320	0					
ANR	3476347	ArgumentList	a -> ofilter		3476320	1					
ANR	3476348	Argument	a -> ofilter		3476320	0					
ANR	3476349	PtrMemberAccess	a -> ofilter		3476320	0					
ANR	3476350	Identifier	a		3476320	0					
ANR	3476351	Identifier	ofilter		3476320	1					
ANR	3476352	Argument	f		3476320	1					
ANR	3476353	Identifier	f		3476320	0					
ANR	3476354	CompoundStatement		5:35:90:90	3476320	1					
ANR	3476355	ExpressionStatement	r_parse_free ( a -> ofilter )	234:2:5579:5604	3476320	0	True				
ANR	3476356	CallExpression	r_parse_free ( a -> ofilter )		3476320	0					
ANR	3476357	Callee	r_parse_free		3476320	0					
ANR	3476358	Identifier	r_parse_free		3476320	0					
ANR	3476359	ArgumentList	a -> ofilter		3476320	1					
ANR	3476360	Argument	a -> ofilter		3476320	0					
ANR	3476361	PtrMemberAccess	a -> ofilter		3476320	0					
ANR	3476362	Identifier	a		3476320	0					
ANR	3476363	Identifier	ofilter		3476320	1					
ANR	3476364	ExpressionStatement	a -> ofilter = NULL	235:2:5608:5625	3476320	1	True				
ANR	3476365	AssignmentExpression	a -> ofilter = NULL		3476320	0		=			
ANR	3476366	PtrMemberAccess	a -> ofilter		3476320	0					
ANR	3476367	Identifier	a		3476320	0					
ANR	3476368	Identifier	ofilter		3476320	1					
ANR	3476369	Identifier	NULL		3476320	1					
ANR	3476370	ReturnStatement	return false ;	236:2:5629:5641	3476320	2	True				
ANR	3476371	Identifier	false		3476320	0					
ANR	3476372	ReturnStatement	return true ;	238:1:5647:5658	3476320	2	True				
ANR	3476373	Identifier	true		3476320	0					
ANR	3476374	ReturnType	R_API int		3476320	1					
ANR	3476375	Identifier	r_asm_filter_output		3476320	2					
ANR	3476376	ParameterList	"RAsm * a , const char * f"		3476320	3					
ANR	3476377	Parameter	RAsm * a	229:30:5460:5466	3476320	0	True				
ANR	3476378	ParameterType	RAsm *		3476320	0					
ANR	3476379	Identifier	a		3476320	1					
ANR	3476380	Parameter	const char * f	229:39:5469:5481	3476320	1	True				
ANR	3476381	ParameterType	const char *		3476320	0					
ANR	3476382	Identifier	f		3476320	1					
ANR	3476383	CFGEntryNode	ENTRY		3476320		True				
ANR	3476384	CFGExitNode	EXIT		3476320		True				
ANR	3476385	Symbol	a		3476320						
ANR	3476386	Symbol	NULL		3476320						
ANR	3476387	Symbol	a -> ofilter		3476320						
ANR	3476388	Symbol	r_parse_use		3476320						
ANR	3476389	Symbol	f		3476320						
ANR	3476390	Symbol	false		3476320						
ANR	3476391	Symbol	true		3476320						
ANR	3476392	Symbol	* a		3476320						
ANR	3476393	Symbol	r_parse_new		3476320						
ANR	3476394	Function	r_asm_free	241:0:5663:5975							
ANR	3476395	FunctionDef	r_asm_free (RAsm * a)		3476394	0					
ANR	3476396	CompoundStatement		241:31:5694:5975	3476394	0					
ANR	3476397	IfStatement	if ( ! a )		3476394	0					
ANR	3476398	Condition	! a	242:5:5701:5702	3476394	0	True				
ANR	3476399	UnaryOperationExpression	! a		3476394	0					
ANR	3476400	UnaryOperator	!		3476394	0					
ANR	3476401	Identifier	a		3476394	1					
ANR	3476402	CompoundStatement		2:9:10:10	3476394	1					
ANR	3476403	ReturnStatement	return ;	243:2:5709:5715	3476394	0	True				
ANR	3476404	IfStatement	if ( a -> cur && a -> cur -> fini )		3476394	1					
ANR	3476405	Condition	a -> cur && a -> cur -> fini	245:5:5725:5746	3476394	0	True				
ANR	3476406	AndExpression	a -> cur && a -> cur -> fini		3476394	0		&&			
ANR	3476407	PtrMemberAccess	a -> cur		3476394	0					
ANR	3476408	Identifier	a		3476394	0					
ANR	3476409	Identifier	cur		3476394	1					
ANR	3476410	PtrMemberAccess	a -> cur -> fini		3476394	1					
ANR	3476411	PtrMemberAccess	a -> cur		3476394	0					
ANR	3476412	Identifier	a		3476394	0					
ANR	3476413	Identifier	cur		3476394	1					
ANR	3476414	Identifier	fini		3476394	1					
ANR	3476415	CompoundStatement		5:29:54:54	3476394	1					
ANR	3476416	ExpressionStatement	a -> cur -> fini ( a -> cur -> user )	246:2:5753:5780	3476394	0	True				
ANR	3476417	CallExpression	a -> cur -> fini ( a -> cur -> user )		3476394	0					
ANR	3476418	Callee	a -> cur -> fini		3476394	0					
ANR	3476419	PtrMemberAccess	a -> cur -> fini		3476394	0					
ANR	3476420	PtrMemberAccess	a -> cur		3476394	0					
ANR	3476421	Identifier	a		3476394	0					
ANR	3476422	Identifier	cur		3476394	1					
ANR	3476423	Identifier	fini		3476394	1					
ANR	3476424	ArgumentList	a -> cur -> user		3476394	1					
ANR	3476425	Argument	a -> cur -> user		3476394	0					
ANR	3476426	PtrMemberAccess	a -> cur -> user		3476394	0					
ANR	3476427	PtrMemberAccess	a -> cur		3476394	0					
ANR	3476428	Identifier	a		3476394	0					
ANR	3476429	Identifier	cur		3476394	1					
ANR	3476430	Identifier	user		3476394	1					
ANR	3476431	IfStatement	if ( a -> plugins )		3476394	2					
ANR	3476432	Condition	a -> plugins	248:5:5790:5799	3476394	0	True				
ANR	3476433	PtrMemberAccess	a -> plugins		3476394	0					
ANR	3476434	Identifier	a		3476394	0					
ANR	3476435	Identifier	plugins		3476394	1					
ANR	3476436	CompoundStatement		8:17:107:107	3476394	1					
ANR	3476437	ExpressionStatement	r_list_free ( a -> plugins )	249:2:5806:5830	3476394	0	True				
ANR	3476438	CallExpression	r_list_free ( a -> plugins )		3476394	0					
ANR	3476439	Callee	r_list_free		3476394	0					
ANR	3476440	Identifier	r_list_free		3476394	0					
ANR	3476441	ArgumentList	a -> plugins		3476394	1					
ANR	3476442	Argument	a -> plugins		3476394	0					
ANR	3476443	PtrMemberAccess	a -> plugins		3476394	0					
ANR	3476444	Identifier	a		3476394	0					
ANR	3476445	Identifier	plugins		3476394	1					
ANR	3476446	ExpressionStatement	a -> plugins = NULL	250:2:5834:5851	3476394	1	True				
ANR	3476447	AssignmentExpression	a -> plugins = NULL		3476394	0		=			
ANR	3476448	PtrMemberAccess	a -> plugins		3476394	0					
ANR	3476449	Identifier	a		3476394	0					
ANR	3476450	Identifier	plugins		3476394	1					
ANR	3476451	Identifier	NULL		3476394	1					
ANR	3476452	ExpressionStatement	r_syscall_free ( a -> syscall )	252:1:5857:5884	3476394	3	True				
ANR	3476453	CallExpression	r_syscall_free ( a -> syscall )		3476394	0					
ANR	3476454	Callee	r_syscall_free		3476394	0					
ANR	3476455	Identifier	r_syscall_free		3476394	0					
ANR	3476456	ArgumentList	a -> syscall		3476394	1					
ANR	3476457	Argument	a -> syscall		3476394	0					
ANR	3476458	PtrMemberAccess	a -> syscall		3476394	0					
ANR	3476459	Identifier	a		3476394	0					
ANR	3476460	Identifier	syscall		3476394	1					
ANR	3476461	ExpressionStatement	free ( a -> cpu )	253:1:5887:5900	3476394	4	True				
ANR	3476462	CallExpression	free ( a -> cpu )		3476394	0					
ANR	3476463	Callee	free		3476394	0					
ANR	3476464	Identifier	free		3476394	0					
ANR	3476465	ArgumentList	a -> cpu		3476394	1					
ANR	3476466	Argument	a -> cpu		3476394	0					
ANR	3476467	PtrMemberAccess	a -> cpu		3476394	0					
ANR	3476468	Identifier	a		3476394	0					
ANR	3476469	Identifier	cpu		3476394	1					
ANR	3476470	ExpressionStatement	sdb_free ( a -> pair )	254:1:5903:5921	3476394	5	True				
ANR	3476471	CallExpression	sdb_free ( a -> pair )		3476394	0					
ANR	3476472	Callee	sdb_free		3476394	0					
ANR	3476473	Identifier	sdb_free		3476394	0					
ANR	3476474	ArgumentList	a -> pair		3476394	1					
ANR	3476475	Argument	a -> pair		3476394	0					
ANR	3476476	PtrMemberAccess	a -> pair		3476394	0					
ANR	3476477	Identifier	a		3476394	0					
ANR	3476478	Identifier	pair		3476394	1					
ANR	3476479	ExpressionStatement	ht_pp_free ( a -> flags )	255:1:5924:5945	3476394	6	True				
ANR	3476480	CallExpression	ht_pp_free ( a -> flags )		3476394	0					
ANR	3476481	Callee	ht_pp_free		3476394	0					
ANR	3476482	Identifier	ht_pp_free		3476394	0					
ANR	3476483	ArgumentList	a -> flags		3476394	1					
ANR	3476484	Argument	a -> flags		3476394	0					
ANR	3476485	PtrMemberAccess	a -> flags		3476394	0					
ANR	3476486	Identifier	a		3476394	0					
ANR	3476487	Identifier	flags		3476394	1					
ANR	3476488	ExpressionStatement	a -> pair = NULL	256:1:5948:5962	3476394	7	True				
ANR	3476489	AssignmentExpression	a -> pair = NULL		3476394	0		=			
ANR	3476490	PtrMemberAccess	a -> pair		3476394	0					
ANR	3476491	Identifier	a		3476394	0					
ANR	3476492	Identifier	pair		3476394	1					
ANR	3476493	Identifier	NULL		3476394	1					
ANR	3476494	ExpressionStatement	free ( a )	257:1:5965:5973	3476394	8	True				
ANR	3476495	CallExpression	free ( a )		3476394	0					
ANR	3476496	Callee	free		3476394	0					
ANR	3476497	Identifier	free		3476394	0					
ANR	3476498	ArgumentList	a		3476394	1					
ANR	3476499	Argument	a		3476394	0					
ANR	3476500	Identifier	a		3476394	0					
ANR	3476501	ReturnType	R_API void		3476394	1					
ANR	3476502	Identifier	r_asm_free		3476394	2					
ANR	3476503	ParameterList	RAsm * a		3476394	3					
ANR	3476504	Parameter	RAsm * a	241:22:5685:5691	3476394	0	True				
ANR	3476505	ParameterType	RAsm *		3476394	0					
ANR	3476506	Identifier	a		3476394	1					
ANR	3476507	CFGEntryNode	ENTRY		3476394		True				
ANR	3476508	CFGExitNode	EXIT		3476394		True				
ANR	3476509	Symbol	a		3476394						
ANR	3476510	Symbol	NULL		3476394						
ANR	3476511	Symbol	a -> cpu		3476394						
ANR	3476512	Symbol	a -> pair		3476394						
ANR	3476513	Symbol	* * a		3476394						
ANR	3476514	Symbol	a -> cur -> fini		3476394						
ANR	3476515	Symbol	a -> syscall		3476394						
ANR	3476516	Symbol	* a		3476394						
ANR	3476517	Symbol	a -> cur		3476394						
ANR	3476518	Symbol	* a -> cur		3476394						
ANR	3476519	Symbol	a -> cur -> user		3476394						
ANR	3476520	Symbol	a -> flags		3476394						
ANR	3476521	Symbol	a -> plugins		3476394						
ANR	3476522	Function	r_asm_set_user_ptr	260:0:5978:6048							
ANR	3476523	FunctionDef	"r_asm_set_user_ptr (RAsm * a , void * user)"		3476522	0					
ANR	3476524	CompoundStatement		260:51:6029:6048	3476522	0					
ANR	3476525	ExpressionStatement	a -> user = user	261:1:6032:6046	3476522	0	True				
ANR	3476526	AssignmentExpression	a -> user = user		3476522	0		=			
ANR	3476527	PtrMemberAccess	a -> user		3476522	0					
ANR	3476528	Identifier	a		3476522	0					
ANR	3476529	Identifier	user		3476522	1					
ANR	3476530	Identifier	user		3476522	1					
ANR	3476531	ReturnType	R_API void		3476522	1					
ANR	3476532	Identifier	r_asm_set_user_ptr		3476522	2					
ANR	3476533	ParameterList	"RAsm * a , void * user"		3476522	3					
ANR	3476534	Parameter	RAsm * a	260:30:6008:6014	3476522	0	True				
ANR	3476535	ParameterType	RAsm *		3476522	0					
ANR	3476536	Identifier	a		3476522	1					
ANR	3476537	Parameter	void * user	260:39:6017:6026	3476522	1	True				
ANR	3476538	ParameterType	void *		3476522	0					
ANR	3476539	Identifier	user		3476522	1					
ANR	3476540	CFGEntryNode	ENTRY		3476522		True				
ANR	3476541	CFGExitNode	EXIT		3476522		True				
ANR	3476542	Symbol	a		3476522						
ANR	3476543	Symbol	a -> user		3476522						
ANR	3476544	Symbol	* a		3476522						
ANR	3476545	Symbol	user		3476522						
ANR	3476546	Function	r_asm_add	264:0:6051:6432							
ANR	3476547	FunctionDef	"r_asm_add (RAsm * a , RAsmPlugin * foo)"		3476546	0					
ANR	3476548	CompoundStatement		264:47:6098:6432	3476546	0					
ANR	3476549	IdentifierDeclStatement	RListIter * iter ;	265:1:6101:6116	3476546	0	True				
ANR	3476550	IdentifierDecl	* iter		3476546	0					
ANR	3476551	IdentifierDeclType	RListIter *		3476546	0					
ANR	3476552	Identifier	iter		3476546	1					
ANR	3476553	IdentifierDeclStatement	RAsmPlugin * h ;	266:1:6119:6132	3476546	1	True				
ANR	3476554	IdentifierDecl	* h		3476546	0					
ANR	3476555	IdentifierDeclType	RAsmPlugin *		3476546	0					
ANR	3476556	Identifier	h		3476546	1					
ANR	3476557	IfStatement	if ( ! foo -> name )		3476546	2					
ANR	3476558	Condition	! foo -> name	268:5:6205:6214	3476546	0	True				
ANR	3476559	UnaryOperationExpression	! foo -> name		3476546	0					
ANR	3476560	UnaryOperator	!		3476546	0					
ANR	3476561	PtrMemberAccess	foo -> name		3476546	1					
ANR	3476562	Identifier	foo		3476546	0					
ANR	3476563	Identifier	name		3476546	1					
ANR	3476564	CompoundStatement		5:17:118:118	3476546	1					
ANR	3476565	ReturnStatement	return false ;	269:2:6221:6233	3476546	0	True				
ANR	3476566	Identifier	false		3476546	0					
ANR	3476567	IfStatement	if ( foo -> init )		3476546	3					
ANR	3476568	Condition	foo -> init	271:5:6243:6251	3476546	0	True				
ANR	3476569	PtrMemberAccess	foo -> init		3476546	0					
ANR	3476570	Identifier	foo		3476546	0					
ANR	3476571	Identifier	init		3476546	1					
ANR	3476572	CompoundStatement		8:16:155:155	3476546	1					
ANR	3476573	ExpressionStatement	foo -> init ( a -> user )	272:2:6258:6277	3476546	0	True				
ANR	3476574	CallExpression	foo -> init ( a -> user )		3476546	0					
ANR	3476575	Callee	foo -> init		3476546	0					
ANR	3476576	PtrMemberAccess	foo -> init		3476546	0					
ANR	3476577	Identifier	foo		3476546	0					
ANR	3476578	Identifier	init		3476546	1					
ANR	3476579	ArgumentList	a -> user		3476546	1					
ANR	3476580	Argument	a -> user		3476546	0					
ANR	3476581	PtrMemberAccess	a -> user		3476546	0					
ANR	3476582	Identifier	a		3476546	0					
ANR	3476583	Identifier	user		3476546	1					
ANR	3476584	Statement	r_list_foreach	274:1:6283:6296	3476546	4	True				
ANR	3476585	Statement	(	274:16:6298:6298	3476546	5	True				
ANR	3476586	Statement	a	274:17:6299:6299	3476546	6	True				
ANR	3476587	Statement	->	274:18:6300:6301	3476546	7	True				
ANR	3476588	Statement	plugins	274:20:6302:6308	3476546	8	True				
ANR	3476589	Statement	","	274:27:6309:6309	3476546	9	True				
ANR	3476590	Statement	iter	274:29:6311:6314	3476546	10	True				
ANR	3476591	Statement	","	274:33:6315:6315	3476546	11	True				
ANR	3476592	Statement	h	274:35:6317:6317	3476546	12	True				
ANR	3476593	Statement	)	274:36:6318:6318	3476546	13	True				
ANR	3476594	CompoundStatement		11:38:221:221	3476546	14					
ANR	3476595	IfStatement	"if ( ! strcmp ( h -> name , foo -> name ) )"		3476546	0					
ANR	3476596	Condition	"! strcmp ( h -> name , foo -> name )"	275:6:6328:6355	3476546	0	True				
ANR	3476597	UnaryOperationExpression	"! strcmp ( h -> name , foo -> name )"		3476546	0					
ANR	3476598	UnaryOperator	!		3476546	0					
ANR	3476599	CallExpression	"strcmp ( h -> name , foo -> name )"		3476546	1					
ANR	3476600	Callee	strcmp		3476546	0					
ANR	3476601	Identifier	strcmp		3476546	0					
ANR	3476602	ArgumentList	h -> name		3476546	1					
ANR	3476603	Argument	h -> name		3476546	0					
ANR	3476604	PtrMemberAccess	h -> name		3476546	0					
ANR	3476605	Identifier	h		3476546	0					
ANR	3476606	Identifier	name		3476546	1					
ANR	3476607	Argument	foo -> name		3476546	1					
ANR	3476608	PtrMemberAccess	foo -> name		3476546	0					
ANR	3476609	Identifier	foo		3476546	0					
ANR	3476610	Identifier	name		3476546	1					
ANR	3476611	CompoundStatement		12:36:259:259	3476546	1					
ANR	3476612	ReturnStatement	return false ;	276:3:6363:6375	3476546	0	True				
ANR	3476613	Identifier	false		3476546	0					
ANR	3476614	ExpressionStatement	"r_list_append ( a -> plugins , foo )"	279:1:6385:6416	3476546	15	True				
ANR	3476615	CallExpression	"r_list_append ( a -> plugins , foo )"		3476546	0					
ANR	3476616	Callee	r_list_append		3476546	0					
ANR	3476617	Identifier	r_list_append		3476546	0					
ANR	3476618	ArgumentList	a -> plugins		3476546	1					
ANR	3476619	Argument	a -> plugins		3476546	0					
ANR	3476620	PtrMemberAccess	a -> plugins		3476546	0					
ANR	3476621	Identifier	a		3476546	0					
ANR	3476622	Identifier	plugins		3476546	1					
ANR	3476623	Argument	foo		3476546	1					
ANR	3476624	Identifier	foo		3476546	0					
ANR	3476625	ReturnStatement	return true ;	280:1:6419:6430	3476546	16	True				
ANR	3476626	Identifier	true		3476546	0					
ANR	3476627	ReturnType	R_API bool		3476546	1					
ANR	3476628	Identifier	r_asm_add		3476546	2					
ANR	3476629	ParameterList	"RAsm * a , RAsmPlugin * foo"		3476546	3					
ANR	3476630	Parameter	RAsm * a	264:21:6072:6078	3476546	0	True				
ANR	3476631	ParameterType	RAsm *		3476546	0					
ANR	3476632	Identifier	a		3476546	1					
ANR	3476633	Parameter	RAsmPlugin * foo	264:30:6081:6095	3476546	1	True				
ANR	3476634	ParameterType	RAsmPlugin *		3476546	0					
ANR	3476635	Identifier	foo		3476546	1					
ANR	3476636	CFGEntryNode	ENTRY		3476546		True				
ANR	3476637	CFGExitNode	EXIT		3476546		True				
ANR	3476638	Symbol	strcmp		3476546						
ANR	3476639	Symbol	a		3476546						
ANR	3476640	Symbol	foo -> name		3476546						
ANR	3476641	Symbol	foo		3476546						
ANR	3476642	Symbol	foo -> init		3476546						
ANR	3476643	Symbol	h		3476546						
ANR	3476644	Symbol	false		3476546						
ANR	3476645	Symbol	iter		3476546						
ANR	3476646	Symbol	a -> user		3476546						
ANR	3476647	Symbol	* a		3476546						
ANR	3476648	Symbol	* foo		3476546						
ANR	3476649	Symbol	h -> name		3476546						
ANR	3476650	Symbol	* h		3476546						
ANR	3476651	Symbol	true		3476546						
ANR	3476652	Symbol	a -> plugins		3476546						
ANR	3476653	Function	r_asm_del	283:0:6435:6532							
ANR	3476654	FunctionDef	"r_asm_del (RAsm * a , const char * name)"		3476653	0					
ANR	3476655	CompoundStatement		283:47:6482:6532	3476653	0					
ANR	3476656	ReturnStatement	return false ;	285:1:6518:6530	3476653	0	True				
ANR	3476657	Identifier	false		3476653	0					
ANR	3476658	ReturnType	R_API int		3476653	1					
ANR	3476659	Identifier	r_asm_del		3476653	2					
ANR	3476660	ParameterList	"RAsm * a , const char * name"		3476653	3					
ANR	3476661	Parameter	RAsm * a	283:20:6455:6461	3476653	0	True				
ANR	3476662	ParameterType	RAsm *		3476653	0					
ANR	3476663	Identifier	a		3476653	1					
ANR	3476664	Parameter	const char * name	283:29:6464:6479	3476653	1	True				
ANR	3476665	ParameterType	const char *		3476653	0					
ANR	3476666	Identifier	name		3476653	1					
ANR	3476667	CFGEntryNode	ENTRY		3476653		True				
ANR	3476668	CFGExitNode	EXIT		3476653		True				
ANR	3476669	Symbol	a		3476653						
ANR	3476670	Symbol	name		3476653						
ANR	3476671	Symbol	false		3476653						
ANR	3476672	Function	r_asm_is_valid	288:0:6535:6777							
ANR	3476673	FunctionDef	"r_asm_is_valid (RAsm * a , const char * name)"		3476672	0					
ANR	3476674	CompoundStatement		288:52:6587:6777	3476672	0					
ANR	3476675	IdentifierDeclStatement	RAsmPlugin * h ;	289:1:6590:6603	3476672	0	True				
ANR	3476676	IdentifierDecl	* h		3476672	0					
ANR	3476677	IdentifierDeclType	RAsmPlugin *		3476672	0					
ANR	3476678	Identifier	h		3476672	1					
ANR	3476679	IdentifierDeclStatement	RListIter * iter ;	290:1:6606:6621	3476672	1	True				
ANR	3476680	IdentifierDecl	* iter		3476672	0					
ANR	3476681	IdentifierDeclType	RListIter *		3476672	0					
ANR	3476682	Identifier	iter		3476672	1					
ANR	3476683	IfStatement	if ( ! name || ! * name )		3476672	2					
ANR	3476684	Condition	! name || ! * name	291:5:6628:6642	3476672	0	True				
ANR	3476685	OrExpression	! name || ! * name		3476672	0		||			
ANR	3476686	UnaryOperationExpression	! name		3476672	0					
ANR	3476687	UnaryOperator	!		3476672	0					
ANR	3476688	Identifier	name		3476672	1					
ANR	3476689	UnaryOperationExpression	! * name		3476672	1					
ANR	3476690	UnaryOperator	!		3476672	0					
ANR	3476691	UnaryOperationExpression	* name		3476672	1					
ANR	3476692	UnaryOperator	*		3476672	0					
ANR	3476693	Identifier	name		3476672	1					
ANR	3476694	CompoundStatement		4:22:57:57	3476672	1					
ANR	3476695	ReturnStatement	return false ;	292:2:6649:6661	3476672	0	True				
ANR	3476696	Identifier	false		3476672	0					
ANR	3476697	Statement	r_list_foreach	294:1:6667:6680	3476672	3	True				
ANR	3476698	Statement	(	294:16:6682:6682	3476672	4	True				
ANR	3476699	Statement	a	294:17:6683:6683	3476672	5	True				
ANR	3476700	Statement	->	294:18:6684:6685	3476672	6	True				
ANR	3476701	Statement	plugins	294:20:6686:6692	3476672	7	True				
ANR	3476702	Statement	","	294:27:6693:6693	3476672	8	True				
ANR	3476703	Statement	iter	294:29:6695:6698	3476672	9	True				
ANR	3476704	Statement	","	294:33:6699:6699	3476672	10	True				
ANR	3476705	Statement	h	294:35:6701:6701	3476672	11	True				
ANR	3476706	Statement	)	294:36:6702:6702	3476672	12	True				
ANR	3476707	CompoundStatement		7:38:116:116	3476672	13					
ANR	3476708	IfStatement	"if ( ! strcmp ( h -> name , name ) )"		3476672	0					
ANR	3476709	Condition	"! strcmp ( h -> name , name )"	295:6:6712:6734	3476672	0	True				
ANR	3476710	UnaryOperationExpression	"! strcmp ( h -> name , name )"		3476672	0					
ANR	3476711	UnaryOperator	!		3476672	0					
ANR	3476712	CallExpression	"strcmp ( h -> name , name )"		3476672	1					
ANR	3476713	Callee	strcmp		3476672	0					
ANR	3476714	Identifier	strcmp		3476672	0					
ANR	3476715	ArgumentList	h -> name		3476672	1					
ANR	3476716	Argument	h -> name		3476672	0					
ANR	3476717	PtrMemberAccess	h -> name		3476672	0					
ANR	3476718	Identifier	h		3476672	0					
ANR	3476719	Identifier	name		3476672	1					
ANR	3476720	Argument	name		3476672	1					
ANR	3476721	Identifier	name		3476672	0					
ANR	3476722	CompoundStatement		8:31:149:149	3476672	1					
ANR	3476723	ReturnStatement	return true ;	296:3:6742:6753	3476672	0	True				
ANR	3476724	Identifier	true		3476672	0					
ANR	3476725	ReturnStatement	return false ;	299:1:6763:6775	3476672	14	True				
ANR	3476726	Identifier	false		3476672	0					
ANR	3476727	ReturnType	R_API int		3476672	1					
ANR	3476728	Identifier	r_asm_is_valid		3476672	2					
ANR	3476729	ParameterList	"RAsm * a , const char * name"		3476672	3					
ANR	3476730	Parameter	RAsm * a	288:25:6560:6566	3476672	0	True				
ANR	3476731	ParameterType	RAsm *		3476672	0					
ANR	3476732	Identifier	a		3476672	1					
ANR	3476733	Parameter	const char * name	288:34:6569:6584	3476672	1	True				
ANR	3476734	ParameterType	const char *		3476672	0					
ANR	3476735	Identifier	name		3476672	1					
ANR	3476736	CFGEntryNode	ENTRY		3476672		True				
ANR	3476737	CFGExitNode	EXIT		3476672		True				
ANR	3476738	Symbol	* name		3476672						
ANR	3476739	Symbol	strcmp		3476672						
ANR	3476740	Symbol	a		3476672						
ANR	3476741	Symbol	* h		3476672						
ANR	3476742	Symbol	name		3476672						
ANR	3476743	Symbol	h		3476672						
ANR	3476744	Symbol	false		3476672						
ANR	3476745	Symbol	true		3476672						
ANR	3476746	Symbol	iter		3476672						
ANR	3476747	Symbol	h -> name		3476672						
ANR	3476748	Function	r_asm_use_assembler	302:0:6780:7086							
ANR	3476749	FunctionDef	"r_asm_use_assembler (RAsm * a , const char * name)"		3476748	0					
ANR	3476750	CompoundStatement		302:58:6838:7086	3476748	0					
ANR	3476751	IdentifierDeclStatement	RAsmPlugin * h ;	303:1:6841:6854	3476748	0	True				
ANR	3476752	IdentifierDecl	* h		3476748	0					
ANR	3476753	IdentifierDeclType	RAsmPlugin *		3476748	0					
ANR	3476754	Identifier	h		3476748	1					
ANR	3476755	IdentifierDeclStatement	RListIter * iter ;	304:1:6857:6872	3476748	1	True				
ANR	3476756	IdentifierDecl	* iter		3476748	0					
ANR	3476757	IdentifierDeclType	RListIter *		3476748	0					
ANR	3476758	Identifier	iter		3476748	1					
ANR	3476759	IfStatement	if ( a )		3476748	2					
ANR	3476760	Condition	a	305:5:6879:6879	3476748	0	True				
ANR	3476761	Identifier	a		3476748	0					
ANR	3476762	CompoundStatement		4:8:43:43	3476748	1					
ANR	3476763	IfStatement	if ( name && * name )		3476748	0					
ANR	3476764	Condition	name && * name	306:6:6890:6902	3476748	0	True				
ANR	3476765	AndExpression	name && * name		3476748	0		&&			
ANR	3476766	Identifier	name		3476748	0					
ANR	3476767	UnaryOperationExpression	* name		3476748	1					
ANR	3476768	UnaryOperator	*		3476748	0					
ANR	3476769	Identifier	name		3476748	1					
ANR	3476770	CompoundStatement		5:21:66:66	3476748	1					
ANR	3476771	Statement	r_list_foreach	307:3:6910:6923	3476748	0	True				
ANR	3476772	Statement	(	307:18:6925:6925	3476748	1	True				
ANR	3476773	Statement	a	307:19:6926:6926	3476748	2	True				
ANR	3476774	Statement	->	307:20:6927:6928	3476748	3	True				
ANR	3476775	Statement	plugins	307:22:6929:6935	3476748	4	True				
ANR	3476776	Statement	","	307:29:6936:6936	3476748	5	True				
ANR	3476777	Statement	iter	307:31:6938:6941	3476748	6	True				
ANR	3476778	Statement	","	307:35:6942:6942	3476748	7	True				
ANR	3476779	Statement	h	307:37:6944:6944	3476748	8	True				
ANR	3476780	Statement	)	307:38:6945:6945	3476748	9	True				
ANR	3476781	CompoundStatement		6:40:108:108	3476748	10					
ANR	3476782	IfStatement	"if ( h -> assemble && ! strcmp ( h -> name , name ) )"		3476748	0					
ANR	3476783	Condition	"h -> assemble && ! strcmp ( h -> name , name )"	308:8:6957:6994	3476748	0	True				
ANR	3476784	AndExpression	"h -> assemble && ! strcmp ( h -> name , name )"		3476748	0		&&			
ANR	3476785	PtrMemberAccess	h -> assemble		3476748	0					
ANR	3476786	Identifier	h		3476748	0					
ANR	3476787	Identifier	assemble		3476748	1					
ANR	3476788	UnaryOperationExpression	"! strcmp ( h -> name , name )"		3476748	1					
ANR	3476789	UnaryOperator	!		3476748	0					
ANR	3476790	CallExpression	"strcmp ( h -> name , name )"		3476748	1					
ANR	3476791	Callee	strcmp		3476748	0					
ANR	3476792	Identifier	strcmp		3476748	0					
ANR	3476793	ArgumentList	h -> name		3476748	1					
ANR	3476794	Argument	h -> name		3476748	0					
ANR	3476795	PtrMemberAccess	h -> name		3476748	0					
ANR	3476796	Identifier	h		3476748	0					
ANR	3476797	Identifier	name		3476748	1					
ANR	3476798	Argument	name		3476748	1					
ANR	3476799	Identifier	name		3476748	0					
ANR	3476800	CompoundStatement		7:48:158:158	3476748	1					
ANR	3476801	ExpressionStatement	a -> acur = h	309:5:7004:7015	3476748	0	True				
ANR	3476802	AssignmentExpression	a -> acur = h		3476748	0		=			
ANR	3476803	PtrMemberAccess	a -> acur		3476748	0					
ANR	3476804	Identifier	a		3476748	0					
ANR	3476805	Identifier	acur		3476748	1					
ANR	3476806	Identifier	h		3476748	1					
ANR	3476807	ReturnStatement	return true ;	310:5:7022:7033	3476748	1	True				
ANR	3476808	Identifier	true		3476748	0					
ANR	3476809	ExpressionStatement	a -> acur = NULL	314:2:7052:7066	3476748	1	True				
ANR	3476810	AssignmentExpression	a -> acur = NULL		3476748	0		=			
ANR	3476811	PtrMemberAccess	a -> acur		3476748	0					
ANR	3476812	Identifier	a		3476748	0					
ANR	3476813	Identifier	acur		3476748	1					
ANR	3476814	Identifier	NULL		3476748	1					
ANR	3476815	ReturnStatement	return false ;	316:1:7072:7084	3476748	3	True				
ANR	3476816	Identifier	false		3476748	0					
ANR	3476817	ReturnType	R_API bool		3476748	1					
ANR	3476818	Identifier	r_asm_use_assembler		3476748	2					
ANR	3476819	ParameterList	"RAsm * a , const char * name"		3476748	3					
ANR	3476820	Parameter	RAsm * a	302:31:6811:6817	3476748	0	True				
ANR	3476821	ParameterType	RAsm *		3476748	0					
ANR	3476822	Identifier	a		3476748	1					
ANR	3476823	Parameter	const char * name	302:40:6820:6835	3476748	1	True				
ANR	3476824	ParameterType	const char *		3476748	0					
ANR	3476825	Identifier	name		3476748	1					
ANR	3476826	CFGEntryNode	ENTRY		3476748		True				
ANR	3476827	CFGExitNode	EXIT		3476748		True				
ANR	3476828	Symbol	* name		3476748						
ANR	3476829	Symbol	strcmp		3476748						
ANR	3476830	Symbol	a		3476748						
ANR	3476831	Symbol	NULL		3476748						
ANR	3476832	Symbol	a -> acur		3476748						
ANR	3476833	Symbol	h		3476748						
ANR	3476834	Symbol	false		3476748						
ANR	3476835	Symbol	iter		3476748						
ANR	3476836	Symbol	* a		3476748						
ANR	3476837	Symbol	h -> name		3476748						
ANR	3476838	Symbol	h -> assemble		3476748						
ANR	3476839	Symbol	* h		3476748						
ANR	3476840	Symbol	name		3476748						
ANR	3476841	Symbol	true		3476748						
ANR	3476842	Function	r_asm_use	320:0:7139:7792							
ANR	3476843	FunctionDef	"r_asm_use (RAsm * a , const char * name)"		3476842	0					
ANR	3476844	CompoundStatement		320:48:7187:7792	3476842	0					
ANR	3476845	IdentifierDeclStatement	RAsmPlugin * h ;	321:1:7190:7203	3476842	0	True				
ANR	3476846	IdentifierDecl	* h		3476842	0					
ANR	3476847	IdentifierDeclType	RAsmPlugin *		3476842	0					
ANR	3476848	Identifier	h		3476842	1					
ANR	3476849	IdentifierDeclStatement	RListIter * iter ;	322:1:7206:7221	3476842	1	True				
ANR	3476850	IdentifierDecl	* iter		3476842	0					
ANR	3476851	IdentifierDeclType	RListIter *		3476842	0					
ANR	3476852	Identifier	iter		3476842	1					
ANR	3476853	IfStatement	if ( ! a || ! name )		3476842	2					
ANR	3476854	Condition	! a || ! name	323:5:7228:7238	3476842	0	True				
ANR	3476855	OrExpression	! a || ! name		3476842	0		||			
ANR	3476856	UnaryOperationExpression	! a		3476842	0					
ANR	3476857	UnaryOperator	!		3476842	0					
ANR	3476858	Identifier	a		3476842	1					
ANR	3476859	UnaryOperationExpression	! name		3476842	1					
ANR	3476860	UnaryOperator	!		3476842	0					
ANR	3476861	Identifier	name		3476842	1					
ANR	3476862	CompoundStatement		4:18:53:53	3476842	1					
ANR	3476863	ReturnStatement	return false ;	324:2:7245:7257	3476842	0	True				
ANR	3476864	Identifier	false		3476842	0					
ANR	3476865	Statement	r_list_foreach	326:1:7263:7276	3476842	3	True				
ANR	3476866	Statement	(	326:16:7278:7278	3476842	4	True				
ANR	3476867	Statement	a	326:17:7279:7279	3476842	5	True				
ANR	3476868	Statement	->	326:18:7280:7281	3476842	6	True				
ANR	3476869	Statement	plugins	326:20:7282:7288	3476842	7	True				
ANR	3476870	Statement	","	326:27:7289:7289	3476842	8	True				
ANR	3476871	Statement	iter	326:29:7291:7294	3476842	9	True				
ANR	3476872	Statement	","	326:33:7295:7295	3476842	10	True				
ANR	3476873	Statement	h	326:35:7297:7297	3476842	11	True				
ANR	3476874	Statement	)	326:36:7298:7298	3476842	12	True				
ANR	3476875	CompoundStatement		7:38:112:112	3476842	13					
ANR	3476876	IfStatement	"if ( ! strcmp ( h -> name , name ) && h -> arch )"		3476842	0					
ANR	3476877	Condition	"! strcmp ( h -> name , name ) && h -> arch"	327:6:7308:7341	3476842	0	True				
ANR	3476878	AndExpression	"! strcmp ( h -> name , name ) && h -> arch"		3476842	0		&&			
ANR	3476879	UnaryOperationExpression	"! strcmp ( h -> name , name )"		3476842	0					
ANR	3476880	UnaryOperator	!		3476842	0					
ANR	3476881	CallExpression	"strcmp ( h -> name , name )"		3476842	1					
ANR	3476882	Callee	strcmp		3476842	0					
ANR	3476883	Identifier	strcmp		3476842	0					
ANR	3476884	ArgumentList	h -> name		3476842	1					
ANR	3476885	Argument	h -> name		3476842	0					
ANR	3476886	PtrMemberAccess	h -> name		3476842	0					
ANR	3476887	Identifier	h		3476842	0					
ANR	3476888	Identifier	name		3476842	1					
ANR	3476889	Argument	name		3476842	1					
ANR	3476890	Identifier	name		3476842	0					
ANR	3476891	PtrMemberAccess	h -> arch		3476842	1					
ANR	3476892	Identifier	h		3476842	0					
ANR	3476893	Identifier	arch		3476842	1					
ANR	3476894	CompoundStatement		8:42:156:156	3476842	1					
ANR	3476895	IfStatement	"if ( ! a -> cur || ( a -> cur && strcmp ( a -> cur -> arch , h -> arch ) ) )"		3476842	0					
ANR	3476896	Condition	"! a -> cur || ( a -> cur && strcmp ( a -> cur -> arch , h -> arch ) )"	328:7:7353:7405	3476842	0	True				
ANR	3476897	OrExpression	"! a -> cur || ( a -> cur && strcmp ( a -> cur -> arch , h -> arch ) )"		3476842	0		||			
ANR	3476898	UnaryOperationExpression	! a -> cur		3476842	0					
ANR	3476899	UnaryOperator	!		3476842	0					
ANR	3476900	PtrMemberAccess	a -> cur		3476842	1					
ANR	3476901	Identifier	a		3476842	0					
ANR	3476902	Identifier	cur		3476842	1					
ANR	3476903	AndExpression	"a -> cur && strcmp ( a -> cur -> arch , h -> arch )"		3476842	1		&&			
ANR	3476904	PtrMemberAccess	a -> cur		3476842	0					
ANR	3476905	Identifier	a		3476842	0					
ANR	3476906	Identifier	cur		3476842	1					
ANR	3476907	CallExpression	"strcmp ( a -> cur -> arch , h -> arch )"		3476842	1					
ANR	3476908	Callee	strcmp		3476842	0					
ANR	3476909	Identifier	strcmp		3476842	0					
ANR	3476910	ArgumentList	a -> cur -> arch		3476842	1					
ANR	3476911	Argument	a -> cur -> arch		3476842	0					
ANR	3476912	PtrMemberAccess	a -> cur -> arch		3476842	0					
ANR	3476913	PtrMemberAccess	a -> cur		3476842	0					
ANR	3476914	Identifier	a		3476842	0					
ANR	3476915	Identifier	cur		3476842	1					
ANR	3476916	Identifier	arch		3476842	1					
ANR	3476917	Argument	h -> arch		3476842	1					
ANR	3476918	PtrMemberAccess	h -> arch		3476842	0					
ANR	3476919	Identifier	h		3476842	0					
ANR	3476920	Identifier	arch		3476842	1					
ANR	3476921	CompoundStatement		11:4:281:349	3476842	1					
ANR	3476922	IdentifierDeclStatement	char * r2prefix = r_str_r2_prefix ( R2_SDB_OPCODES ) ;	329:4:7414:7463	3476842	0	True				
ANR	3476923	IdentifierDecl	* r2prefix = r_str_r2_prefix ( R2_SDB_OPCODES )		3476842	0					
ANR	3476924	IdentifierDeclType	char *		3476842	0					
ANR	3476925	Identifier	r2prefix		3476842	1					
ANR	3476926	AssignmentExpression	* r2prefix = r_str_r2_prefix ( R2_SDB_OPCODES )		3476842	2		=			
ANR	3476927	Identifier	r2prefix		3476842	0					
ANR	3476928	CallExpression	r_str_r2_prefix ( R2_SDB_OPCODES )		3476842	1					
ANR	3476929	Callee	r_str_r2_prefix		3476842	0					
ANR	3476930	Identifier	r_str_r2_prefix		3476842	0					
ANR	3476931	ArgumentList	R2_SDB_OPCODES		3476842	1					
ANR	3476932	Argument	R2_SDB_OPCODES		3476842	0					
ANR	3476933	Identifier	R2_SDB_OPCODES		3476842	0					
ANR	3476934	IdentifierDeclStatement	"char * file = r_str_newf ( ""%s/%s.sdb"" , r_str_get ( r2prefix ) , h -> arch ) ;"	330:4:7469:7537	3476842	1	True				
ANR	3476935	IdentifierDecl	"* file = r_str_newf ( ""%s/%s.sdb"" , r_str_get ( r2prefix ) , h -> arch )"		3476842	0					
ANR	3476936	IdentifierDeclType	char *		3476842	0					
ANR	3476937	Identifier	file		3476842	1					
ANR	3476938	AssignmentExpression	"* file = r_str_newf ( ""%s/%s.sdb"" , r_str_get ( r2prefix ) , h -> arch )"		3476842	2		=			
ANR	3476939	Identifier	file		3476842	0					
ANR	3476940	CallExpression	"r_str_newf ( ""%s/%s.sdb"" , r_str_get ( r2prefix ) , h -> arch )"		3476842	1					
ANR	3476941	Callee	r_str_newf		3476842	0					
ANR	3476942	Identifier	r_str_newf		3476842	0					
ANR	3476943	ArgumentList	"""%s/%s.sdb"""		3476842	1					
ANR	3476944	Argument	"""%s/%s.sdb"""		3476842	0					
ANR	3476945	PrimaryExpression	"""%s/%s.sdb"""		3476842	0					
ANR	3476946	Argument	r_str_get ( r2prefix )		3476842	1					
ANR	3476947	CallExpression	r_str_get ( r2prefix )		3476842	0					
ANR	3476948	Callee	r_str_get		3476842	0					
ANR	3476949	Identifier	r_str_get		3476842	0					
ANR	3476950	ArgumentList	r2prefix		3476842	1					
ANR	3476951	Argument	r2prefix		3476842	0					
ANR	3476952	Identifier	r2prefix		3476842	0					
ANR	3476953	Argument	h -> arch		3476842	2					
ANR	3476954	PtrMemberAccess	h -> arch		3476842	0					
ANR	3476955	Identifier	h		3476842	0					
ANR	3476956	Identifier	arch		3476842	1					
ANR	3476957	IfStatement	if ( file )		3476842	2					
ANR	3476958	Condition	file	331:8:7547:7550	3476842	0	True				
ANR	3476959	Identifier	file		3476842	0					
ANR	3476960	CompoundStatement		12:14:365:365	3476842	1					
ANR	3476961	ExpressionStatement	"r_asm_set_cpu ( a , NULL )"	332:5:7560:7583	3476842	0	True				
ANR	3476962	CallExpression	"r_asm_set_cpu ( a , NULL )"		3476842	0					
ANR	3476963	Callee	r_asm_set_cpu		3476842	0					
ANR	3476964	Identifier	r_asm_set_cpu		3476842	0					
ANR	3476965	ArgumentList	a		3476842	1					
ANR	3476966	Argument	a		3476842	0					
ANR	3476967	Identifier	a		3476842	0					
ANR	3476968	Argument	NULL		3476842	1					
ANR	3476969	Identifier	NULL		3476842	0					
ANR	3476970	ExpressionStatement	sdb_free ( a -> pair )	333:5:7590:7608	3476842	1	True				
ANR	3476971	CallExpression	sdb_free ( a -> pair )		3476842	0					
ANR	3476972	Callee	sdb_free		3476842	0					
ANR	3476973	Identifier	sdb_free		3476842	0					
ANR	3476974	ArgumentList	a -> pair		3476842	1					
ANR	3476975	Argument	a -> pair		3476842	0					
ANR	3476976	PtrMemberAccess	a -> pair		3476842	0					
ANR	3476977	Identifier	a		3476842	0					
ANR	3476978	Identifier	pair		3476842	1					
ANR	3476979	ExpressionStatement	"a -> pair = sdb_new ( NULL , file , 0 )"	334:5:7615:7648	3476842	2	True				
ANR	3476980	AssignmentExpression	"a -> pair = sdb_new ( NULL , file , 0 )"		3476842	0		=			
ANR	3476981	PtrMemberAccess	a -> pair		3476842	0					
ANR	3476982	Identifier	a		3476842	0					
ANR	3476983	Identifier	pair		3476842	1					
ANR	3476984	CallExpression	"sdb_new ( NULL , file , 0 )"		3476842	1					
ANR	3476985	Callee	sdb_new		3476842	0					
ANR	3476986	Identifier	sdb_new		3476842	0					
ANR	3476987	ArgumentList	NULL		3476842	1					
ANR	3476988	Argument	NULL		3476842	0					
ANR	3476989	Identifier	NULL		3476842	0					
ANR	3476990	Argument	file		3476842	1					
ANR	3476991	Identifier	file		3476842	0					
ANR	3476992	Argument	0		3476842	2					
ANR	3476993	PrimaryExpression	0		3476842	0					
ANR	3476994	ExpressionStatement	free ( r2prefix )	335:5:7655:7670	3476842	3	True				
ANR	3476995	CallExpression	free ( r2prefix )		3476842	0					
ANR	3476996	Callee	free		3476842	0					
ANR	3476997	Identifier	free		3476842	0					
ANR	3476998	ArgumentList	r2prefix		3476842	1					
ANR	3476999	Argument	r2prefix		3476842	0					
ANR	3477000	Identifier	r2prefix		3476842	0					
ANR	3477001	ExpressionStatement	free ( file )	336:5:7677:7688	3476842	4	True				
ANR	3477002	CallExpression	free ( file )		3476842	0					
ANR	3477003	Callee	free		3476842	0					
ANR	3477004	Identifier	free		3476842	0					
ANR	3477005	ArgumentList	file		3476842	1					
ANR	3477006	Argument	file		3476842	0					
ANR	3477007	Identifier	file		3476842	0					
ANR	3477008	ExpressionStatement	a -> cur = h	339:3:7704:7714	3476842	1	True				
ANR	3477009	AssignmentExpression	a -> cur = h		3476842	0		=			
ANR	3477010	PtrMemberAccess	a -> cur		3476842	0					
ANR	3477011	Identifier	a		3476842	0					
ANR	3477012	Identifier	cur		3476842	1					
ANR	3477013	Identifier	h		3476842	1					
ANR	3477014	ReturnStatement	return true ;	340:3:7719:7730	3476842	2	True				
ANR	3477015	Identifier	true		3476842	0					
ANR	3477016	ExpressionStatement	sdb_free ( a -> pair )	343:1:7740:7758	3476842	14	True				
ANR	3477017	CallExpression	sdb_free ( a -> pair )		3476842	0					
ANR	3477018	Callee	sdb_free		3476842	0					
ANR	3477019	Identifier	sdb_free		3476842	0					
ANR	3477020	ArgumentList	a -> pair		3476842	1					
ANR	3477021	Argument	a -> pair		3476842	0					
ANR	3477022	PtrMemberAccess	a -> pair		3476842	0					
ANR	3477023	Identifier	a		3476842	0					
ANR	3477024	Identifier	pair		3476842	1					
ANR	3477025	ExpressionStatement	a -> pair = NULL	344:1:7761:7775	3476842	15	True				
ANR	3477026	AssignmentExpression	a -> pair = NULL		3476842	0		=			
ANR	3477027	PtrMemberAccess	a -> pair		3476842	0					
ANR	3477028	Identifier	a		3476842	0					
ANR	3477029	Identifier	pair		3476842	1					
ANR	3477030	Identifier	NULL		3476842	1					
ANR	3477031	ReturnStatement	return false ;	345:1:7778:7790	3476842	16	True				
ANR	3477032	Identifier	false		3476842	0					
ANR	3477033	ReturnType	R_API bool		3476842	1					
ANR	3477034	Identifier	r_asm_use		3476842	2					
ANR	3477035	ParameterList	"RAsm * a , const char * name"		3476842	3					
ANR	3477036	Parameter	RAsm * a	320:21:7160:7166	3476842	0	True				
ANR	3477037	ParameterType	RAsm *		3476842	0					
ANR	3477038	Identifier	a		3476842	1					
ANR	3477039	Parameter	const char * name	320:30:7169:7184	3476842	1	True				
ANR	3477040	ParameterType	const char *		3476842	0					
ANR	3477041	Identifier	name		3476842	1					
ANR	3477042	CFGEntryNode	ENTRY		3476842		True				
ANR	3477043	CFGExitNode	EXIT		3476842		True				
ANR	3477044	Symbol	strcmp		3476842						
ANR	3477045	Symbol	a -> cur -> arch		3476842						
ANR	3477046	Symbol	r2prefix		3476842						
ANR	3477047	Symbol	r_str_get		3476842						
ANR	3477048	Symbol	a		3476842						
ANR	3477049	Symbol	NULL		3476842						
ANR	3477050	Symbol	h -> arch		3476842						
ANR	3477051	Symbol	a -> pair		3476842						
ANR	3477052	Symbol	h		3476842						
ANR	3477053	Symbol	false		3476842						
ANR	3477054	Symbol	iter		3476842						
ANR	3477055	Symbol	* * a		3476842						
ANR	3477056	Symbol	* a		3476842						
ANR	3477057	Symbol	r_str_newf		3476842						
ANR	3477058	Symbol	a -> cur		3476842						
ANR	3477059	Symbol	h -> name		3476842						
ANR	3477060	Symbol	* a -> cur		3476842						
ANR	3477061	Symbol	sdb_new		3476842						
ANR	3477062	Symbol	* h		3476842						
ANR	3477063	Symbol	file		3476842						
ANR	3477064	Symbol	R2_SDB_OPCODES		3476842						
ANR	3477065	Symbol	name		3476842						
ANR	3477066	Symbol	true		3476842						
ANR	3477067	Symbol	r_str_r2_prefix		3476842						
ANR	3477068	Function	has_bits	348:0:7795:7886							
ANR	3477069	FunctionDef	"has_bits (RAsmPlugin * h , int bits)"		3477068	0					
ANR	3477070	CompoundStatement		348:45:7840:7886	3477068	0					
ANR	3477071	ReturnStatement	return ( h && h -> bits && ( bits & h -> bits ) ) ;	349:1:7843:7884	3477068	0	True				
ANR	3477072	AndExpression	h && h -> bits && ( bits & h -> bits )		3477068	0		&&			
ANR	3477073	Identifier	h		3477068	0					
ANR	3477074	AndExpression	h -> bits && ( bits & h -> bits )		3477068	1		&&			
ANR	3477075	PtrMemberAccess	h -> bits		3477068	0					
ANR	3477076	Identifier	h		3477068	0					
ANR	3477077	Identifier	bits		3477068	1					
ANR	3477078	BitAndExpression	bits & h -> bits		3477068	1		&			
ANR	3477079	Identifier	bits		3477068	0					
ANR	3477080	PtrMemberAccess	h -> bits		3477068	1					
ANR	3477081	Identifier	h		3477068	0					
ANR	3477082	Identifier	bits		3477068	1					
ANR	3477083	ReturnType	static int		3477068	1					
ANR	3477084	Identifier	has_bits		3477068	2					
ANR	3477085	ParameterList	"RAsmPlugin * h , int bits"		3477068	3					
ANR	3477086	Parameter	RAsmPlugin * h	348:20:7815:7827	3477068	0	True				
ANR	3477087	ParameterType	RAsmPlugin *		3477068	0					
ANR	3477088	Identifier	h		3477068	1					
ANR	3477089	Parameter	int bits	348:35:7830:7837	3477068	1	True				
ANR	3477090	ParameterType	int		3477068	0					
ANR	3477091	Identifier	bits		3477068	1					
ANR	3477092	CFGEntryNode	ENTRY		3477068		True				
ANR	3477093	CFGExitNode	EXIT		3477068		True				
ANR	3477094	Symbol	* h		3477068						
ANR	3477095	Symbol	h -> bits		3477068						
ANR	3477096	Symbol	h		3477068						
ANR	3477097	Symbol	bits		3477068						
ANR	3477098	Function	r_asm_set_cpu	352:0:7889:8008							
ANR	3477099	FunctionDef	"r_asm_set_cpu (RAsm * a , const char * cpu)"		3477098	0					
ANR	3477100	CompoundStatement		352:51:7940:8008	3477098	0					
ANR	3477101	IfStatement	if ( a )		3477098	0					
ANR	3477102	Condition	a	353:5:7947:7947	3477098	0	True				
ANR	3477103	Identifier	a		3477098	0					
ANR	3477104	CompoundStatement		2:8:9:9	3477098	1					
ANR	3477105	ExpressionStatement	free ( a -> cpu )	354:2:7954:7967	3477098	0	True				
ANR	3477106	CallExpression	free ( a -> cpu )		3477098	0					
ANR	3477107	Callee	free		3477098	0					
ANR	3477108	Identifier	free		3477098	0					
ANR	3477109	ArgumentList	a -> cpu		3477098	1					
ANR	3477110	Argument	a -> cpu		3477098	0					
ANR	3477111	PtrMemberAccess	a -> cpu		3477098	0					
ANR	3477112	Identifier	a		3477098	0					
ANR	3477113	Identifier	cpu		3477098	1					
ANR	3477114	ExpressionStatement	a -> cpu = cpu ? strdup ( cpu ) : NULL	355:2:7971:8003	3477098	1	True				
ANR	3477115	AssignmentExpression	a -> cpu = cpu ? strdup ( cpu ) : NULL		3477098	0		=			
ANR	3477116	PtrMemberAccess	a -> cpu		3477098	0					
ANR	3477117	Identifier	a		3477098	0					
ANR	3477118	Identifier	cpu		3477098	1					
ANR	3477119	ConditionalExpression	cpu ? strdup ( cpu ) : NULL		3477098	1					
ANR	3477120	Condition	cpu		3477098	0					
ANR	3477121	Identifier	cpu		3477098	0					
ANR	3477122	CallExpression	strdup ( cpu )		3477098	1					
ANR	3477123	Callee	strdup		3477098	0					
ANR	3477124	Identifier	strdup		3477098	0					
ANR	3477125	ArgumentList	cpu		3477098	1					
ANR	3477126	Argument	cpu		3477098	0					
ANR	3477127	Identifier	cpu		3477098	0					
ANR	3477128	Identifier	NULL		3477098	2					
ANR	3477129	ReturnType	R_API void		3477098	1					
ANR	3477130	Identifier	r_asm_set_cpu		3477098	2					
ANR	3477131	ParameterList	"RAsm * a , const char * cpu"		3477098	3					
ANR	3477132	Parameter	RAsm * a	352:25:7914:7920	3477098	0	True				
ANR	3477133	ParameterType	RAsm *		3477098	0					
ANR	3477134	Identifier	a		3477098	1					
ANR	3477135	Parameter	const char * cpu	352:34:7923:7937	3477098	1	True				
ANR	3477136	ParameterType	const char *		3477098	0					
ANR	3477137	Identifier	cpu		3477098	1					
ANR	3477138	CFGEntryNode	ENTRY		3477098		True				
ANR	3477139	CFGExitNode	EXIT		3477098		True				
ANR	3477140	Symbol	a		3477098						
ANR	3477141	Symbol	NULL		3477098						
ANR	3477142	Symbol	a -> cpu		3477098						
ANR	3477143	Symbol	cpu		3477098						
ANR	3477144	Symbol	* a		3477098						
ANR	3477145	Symbol	strdup		3477098						
ANR	3477146	Function	r_asm_set_bits	359:0:8011:8161							
ANR	3477147	FunctionDef	"r_asm_set_bits (RAsm * a , int bits)"		3477146	0					
ANR	3477148	CompoundStatement		359:44:8055:8161	3477146	0					
ANR	3477149	IfStatement	"if ( has_bits ( a -> cur , bits ) )"		3477146	0					
ANR	3477150	Condition	"has_bits ( a -> cur , bits )"	360:5:8062:8084	3477146	0	True				
ANR	3477151	CallExpression	"has_bits ( a -> cur , bits )"		3477146	0					
ANR	3477152	Callee	has_bits		3477146	0					
ANR	3477153	Identifier	has_bits		3477146	0					
ANR	3477154	ArgumentList	a -> cur		3477146	1					
ANR	3477155	Argument	a -> cur		3477146	0					
ANR	3477156	PtrMemberAccess	a -> cur		3477146	0					
ANR	3477157	Identifier	a		3477146	0					
ANR	3477158	Identifier	cur		3477146	1					
ANR	3477159	Argument	bits		3477146	1					
ANR	3477160	Identifier	bits		3477146	0					
ANR	3477161	CompoundStatement		2:30:31:31	3477146	1					
ANR	3477162	ExpressionStatement	a -> bits = bits	361:2:8091:8105	3477146	0	True				
ANR	3477163	AssignmentExpression	a -> bits = bits		3477146	0		=			
ANR	3477164	PtrMemberAccess	a -> bits		3477146	0					
ANR	3477165	Identifier	a		3477146	0					
ANR	3477166	Identifier	bits		3477146	1					
ANR	3477167	Identifier	bits		3477146	1					
ANR	3477168	ReturnStatement	return true ;	362:2:8130:8141	3477146	1	True				
ANR	3477169	Identifier	true		3477146	0					
ANR	3477170	ReturnStatement	return false ;	364:1:8147:8159	3477146	1	True				
ANR	3477171	Identifier	false		3477146	0					
ANR	3477172	ReturnType	R_API int		3477146	1					
ANR	3477173	Identifier	r_asm_set_bits		3477146	2					
ANR	3477174	ParameterList	"RAsm * a , int bits"		3477146	3					
ANR	3477175	Parameter	RAsm * a	359:25:8036:8042	3477146	0	True				
ANR	3477176	ParameterType	RAsm *		3477146	0					
ANR	3477177	Identifier	a		3477146	1					
ANR	3477178	Parameter	int bits	359:34:8045:8052	3477146	1	True				
ANR	3477179	ParameterType	int		3477146	0					
ANR	3477180	Identifier	bits		3477146	1					
ANR	3477181	CFGEntryNode	ENTRY		3477146		True				
ANR	3477182	CFGExitNode	EXIT		3477146		True				
ANR	3477183	Symbol	a		3477146						
ANR	3477184	Symbol	has_bits		3477146						
ANR	3477185	Symbol	bits		3477146						
ANR	3477186	Symbol	true		3477146						
ANR	3477187	Symbol	false		3477146						
ANR	3477188	Symbol	* a		3477146						
ANR	3477189	Symbol	a -> cur		3477146						
ANR	3477190	Symbol	a -> bits		3477146						
ANR	3477191	Function	r_asm_set_big_endian	367:0:8164:8654							
ANR	3477192	FunctionDef	"r_asm_set_big_endian (RAsm * a , bool b)"		3477191	0					
ANR	3477193	CompoundStatement		367:49:8213:8654	3477191	0					
ANR	3477194	ExpressionStatement	"r_return_val_if_fail ( a && a -> cur , false )"	368:1:8216:8257	3477191	0	True				
ANR	3477195	CallExpression	"r_return_val_if_fail ( a && a -> cur , false )"		3477191	0					
ANR	3477196	Callee	r_return_val_if_fail		3477191	0					
ANR	3477197	Identifier	r_return_val_if_fail		3477191	0					
ANR	3477198	ArgumentList	a && a -> cur		3477191	1					
ANR	3477199	Argument	a && a -> cur		3477191	0					
ANR	3477200	AndExpression	a && a -> cur		3477191	0		&&			
ANR	3477201	Identifier	a		3477191	0					
ANR	3477202	PtrMemberAccess	a -> cur		3477191	1					
ANR	3477203	Identifier	a		3477191	0					
ANR	3477204	Identifier	cur		3477191	1					
ANR	3477205	Argument	false		3477191	1					
ANR	3477206	Identifier	false		3477191	0					
ANR	3477207	ExpressionStatement	a -> big_endian = false	369:1:8260:8281	3477191	1	True				
ANR	3477208	AssignmentExpression	a -> big_endian = false		3477191	0		=			
ANR	3477209	PtrMemberAccess	a -> big_endian		3477191	0					
ANR	3477210	Identifier	a		3477191	0					
ANR	3477211	Identifier	big_endian		3477191	1					
ANR	3477212	Identifier	false		3477191	1					
ANR	3477213	SwitchStatement	switch ( a -> cur -> endian )		3477191	2					
ANR	3477214	Condition	a -> cur -> endian	370:9:8319:8332	3477191	0	True				
ANR	3477215	PtrMemberAccess	a -> cur -> endian		3477191	0					
ANR	3477216	PtrMemberAccess	a -> cur		3477191	0					
ANR	3477217	Identifier	a		3477191	0					
ANR	3477218	Identifier	cur		3477191	1					
ANR	3477219	Identifier	endian		3477191	1					
ANR	3477220	CompoundStatement		4:25:121:121	3477191	1					
ANR	3477221	Label	case R_SYS_ENDIAN_NONE :	371:1:8338:8360	3477191	0	True				
ANR	3477222	Identifier	R_SYS_ENDIAN_NONE		3477191	0					
ANR	3477223	Label	case R_SYS_ENDIAN_BI :	372:1:8363:8383	3477191	1	True				
ANR	3477224	Identifier	R_SYS_ENDIAN_BI		3477191	0					
ANR	3477225	ExpressionStatement	a -> big_endian = b	374:2:8408:8425	3477191	2	True				
ANR	3477226	AssignmentExpression	a -> big_endian = b		3477191	0		=			
ANR	3477227	PtrMemberAccess	a -> big_endian		3477191	0					
ANR	3477228	Identifier	a		3477191	0					
ANR	3477229	Identifier	big_endian		3477191	1					
ANR	3477230	Identifier	b		3477191	1					
ANR	3477231	BreakStatement	break ;	375:2:8429:8434	3477191	3	True				
ANR	3477232	Label	case R_SYS_ENDIAN_LITTLE :	376:1:8437:8461	3477191	4	True				
ANR	3477233	Identifier	R_SYS_ENDIAN_LITTLE		3477191	0					
ANR	3477234	ExpressionStatement	a -> big_endian = false	377:2:8465:8486	3477191	5	True				
ANR	3477235	AssignmentExpression	a -> big_endian = false		3477191	0		=			
ANR	3477236	PtrMemberAccess	a -> big_endian		3477191	0					
ANR	3477237	Identifier	a		3477191	0					
ANR	3477238	Identifier	big_endian		3477191	1					
ANR	3477239	Identifier	false		3477191	1					
ANR	3477240	BreakStatement	break ;	378:2:8490:8495	3477191	6	True				
ANR	3477241	Label	case R_SYS_ENDIAN_BIG :	379:1:8498:8519	3477191	7	True				
ANR	3477242	Identifier	R_SYS_ENDIAN_BIG		3477191	0					
ANR	3477243	ExpressionStatement	a -> big_endian = true	380:2:8523:8543	3477191	8	True				
ANR	3477244	AssignmentExpression	a -> big_endian = true		3477191	0		=			
ANR	3477245	PtrMemberAccess	a -> big_endian		3477191	0					
ANR	3477246	Identifier	a		3477191	0					
ANR	3477247	Identifier	big_endian		3477191	1					
ANR	3477248	Identifier	true		3477191	1					
ANR	3477249	BreakStatement	break ;	381:2:8547:8552	3477191	9	True				
ANR	3477250	Label	default :	382:1:8555:8562	3477191	10	True				
ANR	3477251	Identifier	default		3477191	0					
ANR	3477252	ExpressionStatement	"eprintf ( ""RAsmPlugin doesn't specify endianness\\n"" )"	383:2:8566:8617	3477191	11	True				
ANR	3477253	CallExpression	"eprintf ( ""RAsmPlugin doesn't specify endianness\\n"" )"		3477191	0					
ANR	3477254	Callee	eprintf		3477191	0					
ANR	3477255	Identifier	eprintf		3477191	0					
ANR	3477256	ArgumentList	"""RAsmPlugin doesn't specify endianness\\n"""		3477191	1					
ANR	3477257	Argument	"""RAsmPlugin doesn't specify endianness\\n"""		3477191	0					
ANR	3477258	PrimaryExpression	"""RAsmPlugin doesn't specify endianness\\n"""		3477191	0					
ANR	3477259	BreakStatement	break ;	384:2:8621:8626	3477191	12	True				
ANR	3477260	ReturnStatement	return a -> big_endian ;	386:1:8632:8652	3477191	3	True				
ANR	3477261	PtrMemberAccess	a -> big_endian		3477191	0					
ANR	3477262	Identifier	a		3477191	0					
ANR	3477263	Identifier	big_endian		3477191	1					
ANR	3477264	ReturnType	R_API bool		3477191	1					
ANR	3477265	Identifier	r_asm_set_big_endian		3477191	2					
ANR	3477266	ParameterList	"RAsm * a , bool b"		3477191	3					
ANR	3477267	Parameter	RAsm * a	367:32:8196:8202	3477191	0	True				
ANR	3477268	ParameterType	RAsm *		3477191	0					
ANR	3477269	Identifier	a		3477191	1					
ANR	3477270	Parameter	bool b	367:41:8205:8210	3477191	1	True				
ANR	3477271	ParameterType	bool		3477191	0					
ANR	3477272	Identifier	b		3477191	1					
ANR	3477273	CFGEntryNode	ENTRY		3477191		True				
ANR	3477274	CFGExitNode	EXIT		3477191		True				
ANR	3477275	Symbol	a		3477191						
ANR	3477276	Symbol	* a -> cur		3477191						
ANR	3477277	Symbol	b		3477191						
ANR	3477278	Symbol	a -> big_endian		3477191						
ANR	3477279	Symbol	false		3477191						
ANR	3477280	Symbol	true		3477191						
ANR	3477281	Symbol	a -> cur -> endian		3477191						
ANR	3477282	Symbol	* * a		3477191						
ANR	3477283	Symbol	* a		3477191						
ANR	3477284	Symbol	a -> cur		3477191						
ANR	3477285	Function	r_asm_set_syntax	389:0:8657:8917							
ANR	3477286	FunctionDef	"r_asm_set_syntax (RAsm * a , int syntax)"		3477285	0					
ANR	3477287	CompoundStatement		389:48:8705:8917	3477285	0					
ANR	3477288	SwitchStatement	switch ( syntax )		3477285	0					
ANR	3477289	Condition	syntax	390:9:8716:8721	3477285	0	True				
ANR	3477290	Identifier	syntax		3477285	0					
ANR	3477291	CompoundStatement		2:17:18:18	3477285	1					
ANR	3477292	Label	case R_ASM_SYNTAX_REGNUM :	391:1:8727:8751	3477285	0	True				
ANR	3477293	Identifier	R_ASM_SYNTAX_REGNUM		3477285	0					
ANR	3477294	Label	case R_ASM_SYNTAX_INTEL :	392:1:8754:8777	3477285	1	True				
ANR	3477295	Identifier	R_ASM_SYNTAX_INTEL		3477285	0					
ANR	3477296	Label	case R_ASM_SYNTAX_MASM :	393:1:8780:8802	3477285	2	True				
ANR	3477297	Identifier	R_ASM_SYNTAX_MASM		3477285	0					
ANR	3477298	Label	case R_ASM_SYNTAX_ATT :	394:1:8805:8826	3477285	3	True				
ANR	3477299	Identifier	R_ASM_SYNTAX_ATT		3477285	0					
ANR	3477300	Label	case R_ASM_SYNTAX_JZ :	395:1:8829:8849	3477285	4	True				
ANR	3477301	Identifier	R_ASM_SYNTAX_JZ		3477285	0					
ANR	3477302	ExpressionStatement	a -> syntax = syntax	396:2:8853:8871	3477285	5	True				
ANR	3477303	AssignmentExpression	a -> syntax = syntax		3477285	0		=			
ANR	3477304	PtrMemberAccess	a -> syntax		3477285	0					
ANR	3477305	Identifier	a		3477285	0					
ANR	3477306	Identifier	syntax		3477285	1					
ANR	3477307	Identifier	syntax		3477285	1					
ANR	3477308	ReturnStatement	return true ;	397:2:8875:8886	3477285	6	True				
ANR	3477309	Identifier	true		3477285	0					
ANR	3477310	Label	default :	398:1:8889:8896	3477285	7	True				
ANR	3477311	Identifier	default		3477285	0					
ANR	3477312	ReturnStatement	return false ;	399:2:8900:8912	3477285	8	True				
ANR	3477313	Identifier	false		3477285	0					
ANR	3477314	ReturnType	R_API int		3477285	1					
ANR	3477315	Identifier	r_asm_set_syntax		3477285	2					
ANR	3477316	ParameterList	"RAsm * a , int syntax"		3477285	3					
ANR	3477317	Parameter	RAsm * a	389:27:8684:8690	3477285	0	True				
ANR	3477318	ParameterType	RAsm *		3477285	0					
ANR	3477319	Identifier	a		3477285	1					
ANR	3477320	Parameter	int syntax	389:36:8693:8702	3477285	1	True				
ANR	3477321	ParameterType	int		3477285	0					
ANR	3477322	Identifier	syntax		3477285	1					
ANR	3477323	CFGEntryNode	ENTRY		3477285		True				
ANR	3477324	CFGExitNode	EXIT		3477285		True				
ANR	3477325	Symbol	a		3477285						
ANR	3477326	Symbol	a -> syntax		3477285						
ANR	3477327	Symbol	true		3477285						
ANR	3477328	Symbol	false		3477285						
ANR	3477329	Symbol	syntax		3477285						
ANR	3477330	Symbol	* a		3477285						
ANR	3477331	Function	r_asm_set_pc	403:0:8920:8990							
ANR	3477332	FunctionDef	"r_asm_set_pc (RAsm * a , ut64 pc)"		3477331	0					
ANR	3477333	CompoundStatement		403:41:8961:8990	3477331	0					
ANR	3477334	ExpressionStatement	a -> pc = pc	404:1:8964:8974	3477331	0	True				
ANR	3477335	AssignmentExpression	a -> pc = pc		3477331	0		=			
ANR	3477336	PtrMemberAccess	a -> pc		3477331	0					
ANR	3477337	Identifier	a		3477331	0					
ANR	3477338	Identifier	pc		3477331	1					
ANR	3477339	Identifier	pc		3477331	1					
ANR	3477340	ReturnStatement	return true ;	405:1:8977:8988	3477331	1	True				
ANR	3477341	Identifier	true		3477331	0					
ANR	3477342	ReturnType	R_API int		3477331	1					
ANR	3477343	Identifier	r_asm_set_pc		3477331	2					
ANR	3477344	ParameterList	"RAsm * a , ut64 pc"		3477331	3					
ANR	3477345	Parameter	RAsm * a	403:23:8943:8949	3477331	0	True				
ANR	3477346	ParameterType	RAsm *		3477331	0					
ANR	3477347	Identifier	a		3477331	1					
ANR	3477348	Parameter	ut64 pc	403:32:8952:8958	3477331	1	True				
ANR	3477349	ParameterType	ut64		3477331	0					
ANR	3477350	Identifier	pc		3477331	1					
ANR	3477351	CFGEntryNode	ENTRY		3477331		True				
ANR	3477352	CFGExitNode	EXIT		3477331		True				
ANR	3477353	Symbol	a		3477331						
ANR	3477354	Symbol	pc		3477331						
ANR	3477355	Symbol	true		3477331						
ANR	3477356	Symbol	* a		3477331						
ANR	3477357	Symbol	a -> pc		3477331						
ANR	3477358	Function	isInvalid	408:0:8993:9145							
ANR	3477359	FunctionDef	isInvalid (RAsmOp * op)		3477358	0					
ANR	3477360	CompoundStatement		408:35:9028:9145	3477358	0					
ANR	3477361	IdentifierDeclStatement	const char * buf_asm = r_strbuf_get ( & op -> buf_asm ) ;	409:1:9031:9080	3477358	0	True				
ANR	3477362	IdentifierDecl	* buf_asm = r_strbuf_get ( & op -> buf_asm )		3477358	0					
ANR	3477363	IdentifierDeclType	const char *		3477358	0					
ANR	3477364	Identifier	buf_asm		3477358	1					
ANR	3477365	AssignmentExpression	* buf_asm = r_strbuf_get ( & op -> buf_asm )		3477358	2		=			
ANR	3477366	Identifier	buf_asm		3477358	0					
ANR	3477367	CallExpression	r_strbuf_get ( & op -> buf_asm )		3477358	1					
ANR	3477368	Callee	r_strbuf_get		3477358	0					
ANR	3477369	Identifier	r_strbuf_get		3477358	0					
ANR	3477370	ArgumentList	& op -> buf_asm		3477358	1					
ANR	3477371	Argument	& op -> buf_asm		3477358	0					
ANR	3477372	UnaryOperationExpression	& op -> buf_asm		3477358	0					
ANR	3477373	UnaryOperator	&		3477358	0					
ANR	3477374	PtrMemberAccess	op -> buf_asm		3477358	1					
ANR	3477375	Identifier	op		3477358	0					
ANR	3477376	Identifier	buf_asm		3477358	1					
ANR	3477377	ReturnStatement	"return ( buf_asm && * buf_asm && ! strcmp ( buf_asm , ""invalid"" ) ) ;"	410:1:9083:9143	3477358	1	True				
ANR	3477378	AndExpression	"buf_asm && * buf_asm && ! strcmp ( buf_asm , ""invalid"" )"		3477358	0		&&			
ANR	3477379	Identifier	buf_asm		3477358	0					
ANR	3477380	AndExpression	"* buf_asm && ! strcmp ( buf_asm , ""invalid"" )"		3477358	1		&&			
ANR	3477381	UnaryOperationExpression	* buf_asm		3477358	0					
ANR	3477382	UnaryOperator	*		3477358	0					
ANR	3477383	Identifier	buf_asm		3477358	1					
ANR	3477384	UnaryOperationExpression	"! strcmp ( buf_asm , ""invalid"" )"		3477358	1					
ANR	3477385	UnaryOperator	!		3477358	0					
ANR	3477386	CallExpression	"strcmp ( buf_asm , ""invalid"" )"		3477358	1					
ANR	3477387	Callee	strcmp		3477358	0					
ANR	3477388	Identifier	strcmp		3477358	0					
ANR	3477389	ArgumentList	buf_asm		3477358	1					
ANR	3477390	Argument	buf_asm		3477358	0					
ANR	3477391	Identifier	buf_asm		3477358	0					
ANR	3477392	Argument	"""invalid"""		3477358	1					
ANR	3477393	PrimaryExpression	"""invalid"""		3477358	0					
ANR	3477394	ReturnType	static bool		3477358	1					
ANR	3477395	Identifier	isInvalid		3477358	2					
ANR	3477396	ParameterList	RAsmOp * op		3477358	3					
ANR	3477397	Parameter	RAsmOp * op	408:23:9016:9025	3477358	0	True				
ANR	3477398	ParameterType	RAsmOp *		3477358	0					
ANR	3477399	Identifier	op		3477358	1					
ANR	3477400	CFGEntryNode	ENTRY		3477358		True				
ANR	3477401	CFGExitNode	EXIT		3477358		True				
ANR	3477402	Symbol	strcmp		3477358						
ANR	3477403	Symbol	op		3477358						
ANR	3477404	Symbol	r_strbuf_get		3477358						
ANR	3477405	Symbol	* buf_asm		3477358						
ANR	3477406	Symbol	& op -> buf_asm		3477358						
ANR	3477407	Symbol	buf_asm		3477358						
ANR	3477408	Function	r_asm_disassemble	413:0:9148:10713							
ANR	3477409	FunctionDef	"r_asm_disassemble (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3477408	0					
ANR	3477410	CompoundStatement		413:74:9222:10713	3477408	0					
ANR	3477411	ExpressionStatement	r_asm_op_init ( op )	414:1:9225:9243	3477408	0	True				
ANR	3477412	CallExpression	r_asm_op_init ( op )		3477408	0					
ANR	3477413	Callee	r_asm_op_init		3477408	0					
ANR	3477414	Identifier	r_asm_op_init		3477408	0					
ANR	3477415	ArgumentList	op		3477408	1					
ANR	3477416	Argument	op		3477408	0					
ANR	3477417	Identifier	op		3477408	0					
ANR	3477418	ExpressionStatement	"r_return_val_if_fail ( a && buf && op , - 1 )"	415:1:9246:9287	3477408	1	True				
ANR	3477419	CallExpression	"r_return_val_if_fail ( a && buf && op , - 1 )"		3477408	0					
ANR	3477420	Callee	r_return_val_if_fail		3477408	0					
ANR	3477421	Identifier	r_return_val_if_fail		3477408	0					
ANR	3477422	ArgumentList	a && buf && op		3477408	1					
ANR	3477423	Argument	a && buf && op		3477408	0					
ANR	3477424	AndExpression	a && buf && op		3477408	0		&&			
ANR	3477425	Identifier	a		3477408	0					
ANR	3477426	AndExpression	buf && op		3477408	1		&&			
ANR	3477427	Identifier	buf		3477408	0					
ANR	3477428	Identifier	op		3477408	1					
ANR	3477429	Argument	- 1		3477408	1					
ANR	3477430	UnaryOperationExpression	- 1		3477408	0					
ANR	3477431	UnaryOperator	-		3477408	0					
ANR	3477432	PrimaryExpression	1		3477408	1					
ANR	3477433	IfStatement	if ( len < 1 )		3477408	2					
ANR	3477434	Condition	len < 1	416:5:9294:9300	3477408	0	True				
ANR	3477435	RelationalExpression	len < 1		3477408	0		<			
ANR	3477436	Identifier	len		3477408	0					
ANR	3477437	PrimaryExpression	1		3477408	1					
ANR	3477438	CompoundStatement		4:14:80:80	3477408	1					
ANR	3477439	ReturnStatement	return 0 ;	417:2:9307:9315	3477408	0	True				
ANR	3477440	PrimaryExpression	0		3477408	0					
ANR	3477441	IdentifierDeclStatement	int ret = op -> payload = 0 ;	420:1:9322:9347	3477408	3	True				
ANR	3477442	IdentifierDecl	ret = op -> payload = 0		3477408	0					
ANR	3477443	IdentifierDeclType	int		3477408	0					
ANR	3477444	Identifier	ret		3477408	1					
ANR	3477445	AssignmentExpression	ret = op -> payload = 0		3477408	2		=			
ANR	3477446	Identifier	ret		3477408	0					
ANR	3477447	AssignmentExpression	op -> payload = 0		3477408	1		=			
ANR	3477448	PtrMemberAccess	op -> payload		3477408	0					
ANR	3477449	Identifier	op		3477408	0					
ANR	3477450	Identifier	payload		3477408	1					
ANR	3477451	PrimaryExpression	0		3477408	1					
ANR	3477452	ExpressionStatement	op -> size = 4	421:1:9350:9362	3477408	4	True				
ANR	3477453	AssignmentExpression	op -> size = 4		3477408	0		=			
ANR	3477454	PtrMemberAccess	op -> size		3477408	0					
ANR	3477455	Identifier	op		3477408	0					
ANR	3477456	Identifier	size		3477408	1					
ANR	3477457	PrimaryExpression	4		3477408	1					
ANR	3477458	ExpressionStatement	op -> bitsize = 0	422:1:9365:9380	3477408	5	True				
ANR	3477459	AssignmentExpression	op -> bitsize = 0		3477408	0		=			
ANR	3477460	PtrMemberAccess	op -> bitsize		3477408	0					
ANR	3477461	Identifier	op		3477408	0					
ANR	3477462	Identifier	bitsize		3477408	1					
ANR	3477463	PrimaryExpression	0		3477408	1					
ANR	3477464	ExpressionStatement	"r_asm_op_set_asm ( op , """" )"	423:1:9383:9408	3477408	6	True				
ANR	3477465	CallExpression	"r_asm_op_set_asm ( op , """" )"		3477408	0					
ANR	3477466	Callee	r_asm_op_set_asm		3477408	0					
ANR	3477467	Identifier	r_asm_op_set_asm		3477408	0					
ANR	3477468	ArgumentList	op		3477408	1					
ANR	3477469	Argument	op		3477408	0					
ANR	3477470	Identifier	op		3477408	0					
ANR	3477471	Argument	""""""		3477408	1					
ANR	3477472	PrimaryExpression	""""""		3477408	0					
ANR	3477473	IfStatement	if ( a -> pcalign )		3477408	7					
ANR	3477474	Condition	a -> pcalign	424:5:9415:9424	3477408	0	True				
ANR	3477475	PtrMemberAccess	a -> pcalign		3477408	0					
ANR	3477476	Identifier	a		3477408	0					
ANR	3477477	Identifier	pcalign		3477408	1					
ANR	3477478	CompoundStatement		13:2:208:242	3477408	1					
ANR	3477479	IdentifierDeclStatement	const int mod = a -> pc % a -> pcalign ;	425:2:9431:9465	3477408	0	True				
ANR	3477480	IdentifierDecl	mod = a -> pc % a -> pcalign		3477408	0					
ANR	3477481	IdentifierDeclType	const int		3477408	0					
ANR	3477482	Identifier	mod		3477408	1					
ANR	3477483	AssignmentExpression	mod = a -> pc % a -> pcalign		3477408	2		=			
ANR	3477484	Identifier	mod		3477408	0					
ANR	3477485	MultiplicativeExpression	a -> pc % a -> pcalign		3477408	1		%			
ANR	3477486	PtrMemberAccess	a -> pc		3477408	0					
ANR	3477487	Identifier	a		3477408	0					
ANR	3477488	Identifier	pc		3477408	1					
ANR	3477489	PtrMemberAccess	a -> pcalign		3477408	1					
ANR	3477490	Identifier	a		3477408	0					
ANR	3477491	Identifier	pcalign		3477408	1					
ANR	3477492	IfStatement	if ( mod )		3477408	1					
ANR	3477493	Condition	mod	426:6:9473:9475	3477408	0	True				
ANR	3477494	Identifier	mod		3477408	0					
ANR	3477495	CompoundStatement		14:11:255:255	3477408	1					
ANR	3477496	ExpressionStatement	op -> size = a -> pcalign - mod	427:3:9483:9510	3477408	0	True				
ANR	3477497	AssignmentExpression	op -> size = a -> pcalign - mod		3477408	0		=			
ANR	3477498	PtrMemberAccess	op -> size		3477408	0					
ANR	3477499	Identifier	op		3477408	0					
ANR	3477500	Identifier	size		3477408	1					
ANR	3477501	AdditiveExpression	a -> pcalign - mod		3477408	1		-			
ANR	3477502	PtrMemberAccess	a -> pcalign		3477408	0					
ANR	3477503	Identifier	a		3477408	0					
ANR	3477504	Identifier	pcalign		3477408	1					
ANR	3477505	Identifier	mod		3477408	1					
ANR	3477506	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , ""unaligned"" )"	428:3:9515:9555	3477408	1	True				
ANR	3477507	CallExpression	"r_strbuf_set ( & op -> buf_asm , ""unaligned"" )"		3477408	0					
ANR	3477508	Callee	r_strbuf_set		3477408	0					
ANR	3477509	Identifier	r_strbuf_set		3477408	0					
ANR	3477510	ArgumentList	& op -> buf_asm		3477408	1					
ANR	3477511	Argument	& op -> buf_asm		3477408	0					
ANR	3477512	UnaryOperationExpression	& op -> buf_asm		3477408	0					
ANR	3477513	UnaryOperator	&		3477408	0					
ANR	3477514	PtrMemberAccess	op -> buf_asm		3477408	1					
ANR	3477515	Identifier	op		3477408	0					
ANR	3477516	Identifier	buf_asm		3477408	1					
ANR	3477517	Argument	"""unaligned"""		3477408	1					
ANR	3477518	PrimaryExpression	"""unaligned"""		3477408	0					
ANR	3477519	ReturnStatement	return - 1 ;	429:3:9560:9569	3477408	2	True				
ANR	3477520	UnaryOperationExpression	- 1		3477408	0					
ANR	3477521	UnaryOperator	-		3477408	0					
ANR	3477522	PrimaryExpression	1		3477408	1					
ANR	3477523	IfStatement	if ( a -> cur && a -> cur -> disassemble )		3477408	8					
ANR	3477524	Condition	a -> cur && a -> cur -> disassemble	432:5:9583:9611	3477408	0	True				
ANR	3477525	AndExpression	a -> cur && a -> cur -> disassemble		3477408	0		&&			
ANR	3477526	PtrMemberAccess	a -> cur		3477408	0					
ANR	3477527	Identifier	a		3477408	0					
ANR	3477528	Identifier	cur		3477408	1					
ANR	3477529	PtrMemberAccess	a -> cur -> disassemble		3477408	1					
ANR	3477530	PtrMemberAccess	a -> cur		3477408	0					
ANR	3477531	Identifier	a		3477408	0					
ANR	3477532	Identifier	cur		3477408	1					
ANR	3477533	Identifier	disassemble		3477408	1					
ANR	3477534	CompoundStatement		20:36:391:391	3477408	1					
ANR	3477535	IfStatement	if ( a -> bitshift > 0 )		3477408	0					
ANR	3477536	Condition	a -> bitshift > 0	434:6:9644:9658	3477408	0	True				
ANR	3477537	RelationalExpression	a -> bitshift > 0		3477408	0		>			
ANR	3477538	PtrMemberAccess	a -> bitshift		3477408	0					
ANR	3477539	Identifier	a		3477408	0					
ANR	3477540	Identifier	bitshift		3477408	1					
ANR	3477541	PrimaryExpression	0		3477408	1					
ANR	3477542	CompoundStatement		23:3:443:469	3477408	1					
ANR	3477543	IdentifierDeclStatement	"ut8 * tmp = calloc ( len , 1 ) ;"	435:3:9666:9692	3477408	0	True				
ANR	3477544	IdentifierDecl	"* tmp = calloc ( len , 1 )"		3477408	0					
ANR	3477545	IdentifierDeclType	ut8 *		3477408	0					
ANR	3477546	Identifier	tmp		3477408	1					
ANR	3477547	AssignmentExpression	"* tmp = calloc ( len , 1 )"		3477408	2		=			
ANR	3477548	Identifier	tmp		3477408	0					
ANR	3477549	CallExpression	"calloc ( len , 1 )"		3477408	1					
ANR	3477550	Callee	calloc		3477408	0					
ANR	3477551	Identifier	calloc		3477408	0					
ANR	3477552	ArgumentList	len		3477408	1					
ANR	3477553	Argument	len		3477408	0					
ANR	3477554	Identifier	len		3477408	0					
ANR	3477555	Argument	1		3477408	1					
ANR	3477556	PrimaryExpression	1		3477408	0					
ANR	3477557	IfStatement	if ( tmp )		3477408	1					
ANR	3477558	Condition	tmp	436:7:9701:9703	3477408	0	True				
ANR	3477559	Identifier	tmp		3477408	0					
ANR	3477560	CompoundStatement		24:12:483:483	3477408	1					
ANR	3477561	ExpressionStatement	"r_mem_copybits_delta ( tmp , 0 , buf , a -> bitshift , ( len * 8 ) - a -> bitshift )"	437:4:9712:9784	3477408	0	True				
ANR	3477562	CallExpression	"r_mem_copybits_delta ( tmp , 0 , buf , a -> bitshift , ( len * 8 ) - a -> bitshift )"		3477408	0					
ANR	3477563	Callee	r_mem_copybits_delta		3477408	0					
ANR	3477564	Identifier	r_mem_copybits_delta		3477408	0					
ANR	3477565	ArgumentList	tmp		3477408	1					
ANR	3477566	Argument	tmp		3477408	0					
ANR	3477567	Identifier	tmp		3477408	0					
ANR	3477568	Argument	0		3477408	1					
ANR	3477569	PrimaryExpression	0		3477408	0					
ANR	3477570	Argument	buf		3477408	2					
ANR	3477571	Identifier	buf		3477408	0					
ANR	3477572	Argument	a -> bitshift		3477408	3					
ANR	3477573	PtrMemberAccess	a -> bitshift		3477408	0					
ANR	3477574	Identifier	a		3477408	0					
ANR	3477575	Identifier	bitshift		3477408	1					
ANR	3477576	Argument	( len * 8 ) - a -> bitshift		3477408	4					
ANR	3477577	AdditiveExpression	( len * 8 ) - a -> bitshift		3477408	0		-			
ANR	3477578	MultiplicativeExpression	len * 8		3477408	0		*			
ANR	3477579	Identifier	len		3477408	0					
ANR	3477580	PrimaryExpression	8		3477408	1					
ANR	3477581	PtrMemberAccess	a -> bitshift		3477408	1					
ANR	3477582	Identifier	a		3477408	0					
ANR	3477583	Identifier	bitshift		3477408	1					
ANR	3477584	ExpressionStatement	"ret = a -> cur -> disassemble ( a , op , tmp , len )"	438:4:9790:9833	3477408	1	True				
ANR	3477585	AssignmentExpression	"ret = a -> cur -> disassemble ( a , op , tmp , len )"		3477408	0		=			
ANR	3477586	Identifier	ret		3477408	0					
ANR	3477587	CallExpression	"a -> cur -> disassemble ( a , op , tmp , len )"		3477408	1					
ANR	3477588	Callee	a -> cur -> disassemble		3477408	0					
ANR	3477589	PtrMemberAccess	a -> cur -> disassemble		3477408	0					
ANR	3477590	PtrMemberAccess	a -> cur		3477408	0					
ANR	3477591	Identifier	a		3477408	0					
ANR	3477592	Identifier	cur		3477408	1					
ANR	3477593	Identifier	disassemble		3477408	1					
ANR	3477594	ArgumentList	a		3477408	1					
ANR	3477595	Argument	a		3477408	0					
ANR	3477596	Identifier	a		3477408	0					
ANR	3477597	Argument	op		3477408	1					
ANR	3477598	Identifier	op		3477408	0					
ANR	3477599	Argument	tmp		3477408	2					
ANR	3477600	Identifier	tmp		3477408	0					
ANR	3477601	Argument	len		3477408	3					
ANR	3477602	Identifier	len		3477408	0					
ANR	3477603	ExpressionStatement	free ( tmp )	439:4:9839:9849	3477408	2	True				
ANR	3477604	CallExpression	free ( tmp )		3477408	0					
ANR	3477605	Callee	free		3477408	0					
ANR	3477606	Identifier	free		3477408	0					
ANR	3477607	ArgumentList	tmp		3477408	1					
ANR	3477608	Argument	tmp		3477408	0					
ANR	3477609	Identifier	tmp		3477408	0					
ANR	3477610	ElseStatement	else		3477408	0					
ANR	3477611	CompoundStatement		29:9:642:642	3477408	0					
ANR	3477612	ExpressionStatement	"ret = a -> cur -> disassemble ( a , op , buf , len )"	442:3:9870:9913	3477408	0	True				
ANR	3477613	AssignmentExpression	"ret = a -> cur -> disassemble ( a , op , buf , len )"		3477408	0		=			
ANR	3477614	Identifier	ret		3477408	0					
ANR	3477615	CallExpression	"a -> cur -> disassemble ( a , op , buf , len )"		3477408	1					
ANR	3477616	Callee	a -> cur -> disassemble		3477408	0					
ANR	3477617	PtrMemberAccess	a -> cur -> disassemble		3477408	0					
ANR	3477618	PtrMemberAccess	a -> cur		3477408	0					
ANR	3477619	Identifier	a		3477408	0					
ANR	3477620	Identifier	cur		3477408	1					
ANR	3477621	Identifier	disassemble		3477408	1					
ANR	3477622	ArgumentList	a		3477408	1					
ANR	3477623	Argument	a		3477408	0					
ANR	3477624	Identifier	a		3477408	0					
ANR	3477625	Argument	op		3477408	1					
ANR	3477626	Identifier	op		3477408	0					
ANR	3477627	Argument	buf		3477408	2					
ANR	3477628	Identifier	buf		3477408	0					
ANR	3477629	Argument	len		3477408	3					
ANR	3477630	Identifier	len		3477408	0					
ANR	3477631	IfStatement	if ( ret < 0 )		3477408	9					
ANR	3477632	Condition	ret < 0	445:5:9927:9933	3477408	0	True				
ANR	3477633	RelationalExpression	ret < 0		3477408	0		<			
ANR	3477634	Identifier	ret		3477408	0					
ANR	3477635	PrimaryExpression	0		3477408	1					
ANR	3477636	CompoundStatement		33:14:713:713	3477408	1					
ANR	3477637	ExpressionStatement	ret = 0	446:2:9940:9947	3477408	0	True				
ANR	3477638	AssignmentExpression	ret = 0		3477408	0		=			
ANR	3477639	Identifier	ret		3477408	0					
ANR	3477640	PrimaryExpression	0		3477408	1					
ANR	3477641	IfStatement	if ( op -> bitsize > 0 )		3477408	10					
ANR	3477642	Condition	op -> bitsize > 0	448:5:9957:9971	3477408	0	True				
ANR	3477643	RelationalExpression	op -> bitsize > 0		3477408	0		>			
ANR	3477644	PtrMemberAccess	op -> bitsize		3477408	0					
ANR	3477645	Identifier	op		3477408	0					
ANR	3477646	Identifier	bitsize		3477408	1					
ANR	3477647	PrimaryExpression	0		3477408	1					
ANR	3477648	CompoundStatement		39:2:819:846	3477408	1					
ANR	3477649	ExpressionStatement	op -> size = op -> bitsize / 8	449:2:9978:10004	3477408	0	True				
ANR	3477650	AssignmentExpression	op -> size = op -> bitsize / 8		3477408	0		=			
ANR	3477651	PtrMemberAccess	op -> size		3477408	0					
ANR	3477652	Identifier	op		3477408	0					
ANR	3477653	Identifier	size		3477408	1					
ANR	3477654	MultiplicativeExpression	op -> bitsize / 8		3477408	1		/			
ANR	3477655	PtrMemberAccess	op -> bitsize		3477408	0					
ANR	3477656	Identifier	op		3477408	0					
ANR	3477657	Identifier	bitsize		3477408	1					
ANR	3477658	PrimaryExpression	8		3477408	1					
ANR	3477659	ExpressionStatement	a -> bitshift += op -> bitsize % 8	450:2:10008:10038	3477408	1	True				
ANR	3477660	AssignmentExpression	a -> bitshift += op -> bitsize % 8		3477408	0		+=			
ANR	3477661	PtrMemberAccess	a -> bitshift		3477408	0					
ANR	3477662	Identifier	a		3477408	0					
ANR	3477663	Identifier	bitshift		3477408	1					
ANR	3477664	MultiplicativeExpression	op -> bitsize % 8		3477408	1		%			
ANR	3477665	PtrMemberAccess	op -> bitsize		3477408	0					
ANR	3477666	Identifier	op		3477408	0					
ANR	3477667	Identifier	bitsize		3477408	1					
ANR	3477668	PrimaryExpression	8		3477408	1					
ANR	3477669	IdentifierDeclStatement	int count = a -> bitshift / 8 ;	451:2:10042:10069	3477408	2	True				
ANR	3477670	IdentifierDecl	count = a -> bitshift / 8		3477408	0					
ANR	3477671	IdentifierDeclType	int		3477408	0					
ANR	3477672	Identifier	count		3477408	1					
ANR	3477673	AssignmentExpression	count = a -> bitshift / 8		3477408	2		=			
ANR	3477674	Identifier	count		3477408	0					
ANR	3477675	MultiplicativeExpression	a -> bitshift / 8		3477408	1		/			
ANR	3477676	PtrMemberAccess	a -> bitshift		3477408	0					
ANR	3477677	Identifier	a		3477408	0					
ANR	3477678	Identifier	bitshift		3477408	1					
ANR	3477679	PrimaryExpression	8		3477408	1					
ANR	3477680	IfStatement	if ( count > 0 )		3477408	3					
ANR	3477681	Condition	count > 0	452:6:10077:10085	3477408	0	True				
ANR	3477682	RelationalExpression	count > 0		3477408	0		>			
ANR	3477683	Identifier	count		3477408	0					
ANR	3477684	PrimaryExpression	0		3477408	1					
ANR	3477685	CompoundStatement		40:17:865:865	3477408	1					
ANR	3477686	ExpressionStatement	op -> size = op -> size + count	453:3:10093:10120	3477408	0	True				
ANR	3477687	AssignmentExpression	op -> size = op -> size + count		3477408	0		=			
ANR	3477688	PtrMemberAccess	op -> size		3477408	0					
ANR	3477689	Identifier	op		3477408	0					
ANR	3477690	Identifier	size		3477408	1					
ANR	3477691	AdditiveExpression	op -> size + count		3477408	1		+			
ANR	3477692	PtrMemberAccess	op -> size		3477408	0					
ANR	3477693	Identifier	op		3477408	0					
ANR	3477694	Identifier	size		3477408	1					
ANR	3477695	Identifier	count		3477408	1					
ANR	3477696	ExpressionStatement	a -> bitshift %= 8	454:3:10125:10141	3477408	1	True				
ANR	3477697	AssignmentExpression	a -> bitshift %= 8		3477408	0		%=			
ANR	3477698	PtrMemberAccess	a -> bitshift		3477408	0					
ANR	3477699	Identifier	a		3477408	0					
ANR	3477700	Identifier	bitshift		3477408	1					
ANR	3477701	PrimaryExpression	8		3477408	1					
ANR	3477702	IfStatement	if ( op -> size < 1 || isInvalid ( op ) )		3477408	11					
ANR	3477703	Condition	op -> size < 1 || isInvalid ( op )	458:5:10156:10185	3477408	0	True				
ANR	3477704	OrExpression	op -> size < 1 || isInvalid ( op )		3477408	0		||			
ANR	3477705	RelationalExpression	op -> size < 1		3477408	0		<			
ANR	3477706	PtrMemberAccess	op -> size		3477408	0					
ANR	3477707	Identifier	op		3477408	0					
ANR	3477708	Identifier	size		3477408	1					
ANR	3477709	PrimaryExpression	1		3477408	1					
ANR	3477710	CallExpression	isInvalid ( op )		3477408	1					
ANR	3477711	Callee	isInvalid		3477408	0					
ANR	3477712	Identifier	isInvalid		3477408	0					
ANR	3477713	ArgumentList	op		3477408	1					
ANR	3477714	Argument	op		3477408	0					
ANR	3477715	Identifier	op		3477408	0					
ANR	3477716	CompoundStatement		46:37:965:965	3477408	1					
ANR	3477717	IfStatement	if ( a -> invhex )		3477408	0					
ANR	3477718	Condition	a -> invhex	459:6:10196:10204	3477408	0	True				
ANR	3477719	PtrMemberAccess	a -> invhex		3477408	0					
ANR	3477720	Identifier	a		3477408	0					
ANR	3477721	Identifier	invhex		3477408	1					
ANR	3477722	CompoundStatement		47:17:984:984	3477408	1					
ANR	3477723	IfStatement	if ( a -> bits == 16 )		3477408	0					
ANR	3477724	Condition	a -> bits == 16	460:7:10216:10228	3477408	0	True				
ANR	3477725	EqualityExpression	a -> bits == 16		3477408	0		==			
ANR	3477726	PtrMemberAccess	a -> bits		3477408	0					
ANR	3477727	Identifier	a		3477408	0					
ANR	3477728	Identifier	bits		3477408	1					
ANR	3477729	PrimaryExpression	16		3477408	1					
ANR	3477730	CompoundStatement		49:4:1014:1040	3477408	1					
ANR	3477731	IdentifierDeclStatement	ut16 b = r_read_le16 ( buf ) ;	461:4:10237:10263	3477408	0	True				
ANR	3477732	IdentifierDecl	b = r_read_le16 ( buf )		3477408	0					
ANR	3477733	IdentifierDeclType	ut16		3477408	0					
ANR	3477734	Identifier	b		3477408	1					
ANR	3477735	AssignmentExpression	b = r_read_le16 ( buf )		3477408	2		=			
ANR	3477736	Identifier	b		3477408	0					
ANR	3477737	CallExpression	r_read_le16 ( buf )		3477408	1					
ANR	3477738	Callee	r_read_le16		3477408	0					
ANR	3477739	Identifier	r_read_le16		3477408	0					
ANR	3477740	ArgumentList	buf		3477408	1					
ANR	3477741	Argument	buf		3477408	0					
ANR	3477742	Identifier	buf		3477408	0					
ANR	3477743	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , sdb_fmt ( "".word 0x%04x"" , b ) )"	462:4:10269:10325	3477408	1	True				
ANR	3477744	CallExpression	"r_strbuf_set ( & op -> buf_asm , sdb_fmt ( "".word 0x%04x"" , b ) )"		3477408	0					
ANR	3477745	Callee	r_strbuf_set		3477408	0					
ANR	3477746	Identifier	r_strbuf_set		3477408	0					
ANR	3477747	ArgumentList	& op -> buf_asm		3477408	1					
ANR	3477748	Argument	& op -> buf_asm		3477408	0					
ANR	3477749	UnaryOperationExpression	& op -> buf_asm		3477408	0					
ANR	3477750	UnaryOperator	&		3477408	0					
ANR	3477751	PtrMemberAccess	op -> buf_asm		3477408	1					
ANR	3477752	Identifier	op		3477408	0					
ANR	3477753	Identifier	buf_asm		3477408	1					
ANR	3477754	Argument	"sdb_fmt ( "".word 0x%04x"" , b )"		3477408	1					
ANR	3477755	CallExpression	"sdb_fmt ( "".word 0x%04x"" , b )"		3477408	0					
ANR	3477756	Callee	sdb_fmt		3477408	0					
ANR	3477757	Identifier	sdb_fmt		3477408	0					
ANR	3477758	ArgumentList	""".word 0x%04x"""		3477408	1					
ANR	3477759	Argument	""".word 0x%04x"""		3477408	0					
ANR	3477760	PrimaryExpression	""".word 0x%04x"""		3477408	0					
ANR	3477761	Argument	b		3477408	1					
ANR	3477762	Identifier	b		3477408	0					
ANR	3477763	ElseStatement	else		3477408	0					
ANR	3477764	CompoundStatement		52:4:1120:1146	3477408	0					
ANR	3477765	IdentifierDeclStatement	ut32 b = r_read_le32 ( buf ) ;	464:4:10343:10369	3477408	0	True				
ANR	3477766	IdentifierDecl	b = r_read_le32 ( buf )		3477408	0					
ANR	3477767	IdentifierDeclType	ut32		3477408	0					
ANR	3477768	Identifier	b		3477408	1					
ANR	3477769	AssignmentExpression	b = r_read_le32 ( buf )		3477408	2		=			
ANR	3477770	Identifier	b		3477408	0					
ANR	3477771	CallExpression	r_read_le32 ( buf )		3477408	1					
ANR	3477772	Callee	r_read_le32		3477408	0					
ANR	3477773	Identifier	r_read_le32		3477408	0					
ANR	3477774	ArgumentList	buf		3477408	1					
ANR	3477775	Argument	buf		3477408	0					
ANR	3477776	Identifier	buf		3477408	0					
ANR	3477777	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , sdb_fmt ( "".dword 0x%08x"" , b ) )"	465:4:10375:10432	3477408	1	True				
ANR	3477778	CallExpression	"r_strbuf_set ( & op -> buf_asm , sdb_fmt ( "".dword 0x%08x"" , b ) )"		3477408	0					
ANR	3477779	Callee	r_strbuf_set		3477408	0					
ANR	3477780	Identifier	r_strbuf_set		3477408	0					
ANR	3477781	ArgumentList	& op -> buf_asm		3477408	1					
ANR	3477782	Argument	& op -> buf_asm		3477408	0					
ANR	3477783	UnaryOperationExpression	& op -> buf_asm		3477408	0					
ANR	3477784	UnaryOperator	&		3477408	0					
ANR	3477785	PtrMemberAccess	op -> buf_asm		3477408	1					
ANR	3477786	Identifier	op		3477408	0					
ANR	3477787	Identifier	buf_asm		3477408	1					
ANR	3477788	Argument	"sdb_fmt ( "".dword 0x%08x"" , b )"		3477408	1					
ANR	3477789	CallExpression	"sdb_fmt ( "".dword 0x%08x"" , b )"		3477408	0					
ANR	3477790	Callee	sdb_fmt		3477408	0					
ANR	3477791	Identifier	sdb_fmt		3477408	0					
ANR	3477792	ArgumentList	""".dword 0x%08x"""		3477408	1					
ANR	3477793	Argument	""".dword 0x%08x"""		3477408	0					
ANR	3477794	PrimaryExpression	""".dword 0x%08x"""		3477408	0					
ANR	3477795	Argument	b		3477408	1					
ANR	3477796	Identifier	b		3477408	0					
ANR	3477797	ElseStatement	else		3477408	0					
ANR	3477798	CompoundStatement		56:9:1263:1263	3477408	0					
ANR	3477799	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , ""invalid"" )"	469:3:10491:10529	3477408	0	True				
ANR	3477800	CallExpression	"r_strbuf_set ( & op -> buf_asm , ""invalid"" )"		3477408	0					
ANR	3477801	Callee	r_strbuf_set		3477408	0					
ANR	3477802	Identifier	r_strbuf_set		3477408	0					
ANR	3477803	ArgumentList	& op -> buf_asm		3477408	1					
ANR	3477804	Argument	& op -> buf_asm		3477408	0					
ANR	3477805	UnaryOperationExpression	& op -> buf_asm		3477408	0					
ANR	3477806	UnaryOperator	&		3477408	0					
ANR	3477807	PtrMemberAccess	op -> buf_asm		3477408	1					
ANR	3477808	Identifier	op		3477408	0					
ANR	3477809	Identifier	buf_asm		3477408	1					
ANR	3477810	Argument	"""invalid"""		3477408	1					
ANR	3477811	PrimaryExpression	"""invalid"""		3477408	0					
ANR	3477812	IfStatement	if ( a -> ofilter )		3477408	12					
ANR	3477813	Condition	a -> ofilter	472:5:10543:10552	3477408	0	True				
ANR	3477814	PtrMemberAccess	a -> ofilter		3477408	0					
ANR	3477815	Identifier	a		3477408	0					
ANR	3477816	Identifier	ofilter		3477408	1					
ANR	3477817	CompoundStatement		60:17:1332:1332	3477408	1					
ANR	3477818	ExpressionStatement	"parseHeap ( a -> ofilter , & op -> buf_asm )"	473:2:10559:10595	3477408	0	True				
ANR	3477819	CallExpression	"parseHeap ( a -> ofilter , & op -> buf_asm )"		3477408	0					
ANR	3477820	Callee	parseHeap		3477408	0					
ANR	3477821	Identifier	parseHeap		3477408	0					
ANR	3477822	ArgumentList	a -> ofilter		3477408	1					
ANR	3477823	Argument	a -> ofilter		3477408	0					
ANR	3477824	PtrMemberAccess	a -> ofilter		3477408	0					
ANR	3477825	Identifier	a		3477408	0					
ANR	3477826	Identifier	ofilter		3477408	1					
ANR	3477827	Argument	& op -> buf_asm		3477408	1					
ANR	3477828	UnaryOperationExpression	& op -> buf_asm		3477408	0					
ANR	3477829	UnaryOperator	&		3477408	0					
ANR	3477830	PtrMemberAccess	op -> buf_asm		3477408	1					
ANR	3477831	Identifier	op		3477408	0					
ANR	3477832	Identifier	buf_asm		3477408	1					
ANR	3477833	IdentifierDeclStatement	"int opsz = ( op -> size > 0 ) ? R_MAX ( 0 , R_MIN ( len , op -> size ) ) : 1 ;"	475:1:10601:10663	3477408	13	True				
ANR	3477834	IdentifierDecl	"opsz = ( op -> size > 0 ) ? R_MAX ( 0 , R_MIN ( len , op -> size ) ) : 1"		3477408	0					
ANR	3477835	IdentifierDeclType	int		3477408	0					
ANR	3477836	Identifier	opsz		3477408	1					
ANR	3477837	AssignmentExpression	"opsz = ( op -> size > 0 ) ? R_MAX ( 0 , R_MIN ( len , op -> size ) ) : 1"		3477408	2		=			
ANR	3477838	Identifier	opsz		3477408	0					
ANR	3477839	ConditionalExpression	"( op -> size > 0 ) ? R_MAX ( 0 , R_MIN ( len , op -> size ) ) : 1"		3477408	1					
ANR	3477840	Condition	op -> size > 0		3477408	0					
ANR	3477841	RelationalExpression	op -> size > 0		3477408	0		>			
ANR	3477842	PtrMemberAccess	op -> size		3477408	0					
ANR	3477843	Identifier	op		3477408	0					
ANR	3477844	Identifier	size		3477408	1					
ANR	3477845	PrimaryExpression	0		3477408	1					
ANR	3477846	CallExpression	"R_MAX ( 0 , R_MIN ( len , op -> size ) )"		3477408	1					
ANR	3477847	Callee	R_MAX		3477408	0					
ANR	3477848	Identifier	R_MAX		3477408	0					
ANR	3477849	ArgumentList	0		3477408	1					
ANR	3477850	Argument	0		3477408	0					
ANR	3477851	PrimaryExpression	0		3477408	0					
ANR	3477852	Argument	"R_MIN ( len , op -> size )"		3477408	1					
ANR	3477853	CallExpression	"R_MIN ( len , op -> size )"		3477408	0					
ANR	3477854	Callee	R_MIN		3477408	0					
ANR	3477855	Identifier	R_MIN		3477408	0					
ANR	3477856	ArgumentList	len		3477408	1					
ANR	3477857	Argument	len		3477408	0					
ANR	3477858	Identifier	len		3477408	0					
ANR	3477859	Argument	op -> size		3477408	1					
ANR	3477860	PtrMemberAccess	op -> size		3477408	0					
ANR	3477861	Identifier	op		3477408	0					
ANR	3477862	Identifier	size		3477408	1					
ANR	3477863	PrimaryExpression	1		3477408	2					
ANR	3477864	ExpressionStatement	"r_asm_op_set_buf ( op , buf , opsz )"	476:1:10666:10698	3477408	14	True				
ANR	3477865	CallExpression	"r_asm_op_set_buf ( op , buf , opsz )"		3477408	0					
ANR	3477866	Callee	r_asm_op_set_buf		3477408	0					
ANR	3477867	Identifier	r_asm_op_set_buf		3477408	0					
ANR	3477868	ArgumentList	op		3477408	1					
ANR	3477869	Argument	op		3477408	0					
ANR	3477870	Identifier	op		3477408	0					
ANR	3477871	Argument	buf		3477408	1					
ANR	3477872	Identifier	buf		3477408	0					
ANR	3477873	Argument	opsz		3477408	2					
ANR	3477874	Identifier	opsz		3477408	0					
ANR	3477875	ReturnStatement	return ret ;	477:1:10701:10711	3477408	15	True				
ANR	3477876	Identifier	ret		3477408	0					
ANR	3477877	ReturnType	R_API int		3477408	1					
ANR	3477878	Identifier	r_asm_disassemble		3477408	2					
ANR	3477879	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3477408	3					
ANR	3477880	Parameter	RAsm * a	413:28:9176:9182	3477408	0	True				
ANR	3477881	ParameterType	RAsm *		3477408	0					
ANR	3477882	Identifier	a		3477408	1					
ANR	3477883	Parameter	RAsmOp * op	413:37:9185:9194	3477408	1	True				
ANR	3477884	ParameterType	RAsmOp *		3477408	0					
ANR	3477885	Identifier	op		3477408	1					
ANR	3477886	Parameter	const ut8 * buf	413:49:9197:9210	3477408	2	True				
ANR	3477887	ParameterType	const ut8 *		3477408	0					
ANR	3477888	Identifier	buf		3477408	1					
ANR	3477889	Parameter	int len	413:65:9213:9219	3477408	3	True				
ANR	3477890	ParameterType	int		3477408	0					
ANR	3477891	Identifier	len		3477408	1					
ANR	3477892	CFGEntryNode	ENTRY		3477408		True				
ANR	3477893	CFGExitNode	EXIT		3477408		True				
ANR	3477894	Symbol	mod		3477408						
ANR	3477895	Symbol	* op		3477408						
ANR	3477896	Symbol	a -> invhex		3477408						
ANR	3477897	Symbol	calloc		3477408						
ANR	3477898	Symbol	* a -> cur		3477408						
ANR	3477899	Symbol	a -> cur -> disassemble		3477408						
ANR	3477900	Symbol	len		3477408						
ANR	3477901	Symbol	tmp		3477408						
ANR	3477902	Symbol	a -> pcalign		3477408						
ANR	3477903	Symbol	a -> bitshift		3477408						
ANR	3477904	Symbol	op -> bitsize		3477408						
ANR	3477905	Symbol	sdb_fmt		3477408						
ANR	3477906	Symbol	a -> bits		3477408						
ANR	3477907	Symbol	ret		3477408						
ANR	3477908	Symbol	a		3477408						
ANR	3477909	Symbol	op		3477408						
ANR	3477910	Symbol	b		3477408						
ANR	3477911	Symbol	r_read_le32		3477408						
ANR	3477912	Symbol	op -> payload		3477408						
ANR	3477913	Symbol	count		3477408						
ANR	3477914	Symbol	* * a		3477408						
ANR	3477915	Symbol	R_MIN		3477408						
ANR	3477916	Symbol	* a		3477408						
ANR	3477917	Symbol	isInvalid		3477408						
ANR	3477918	Symbol	a -> pc		3477408						
ANR	3477919	Symbol	a -> cur		3477408						
ANR	3477920	Symbol	r_read_le16		3477408						
ANR	3477921	Symbol	buf		3477408						
ANR	3477922	Symbol	a -> ofilter		3477408						
ANR	3477923	Symbol	R_MAX		3477408						
ANR	3477924	Symbol	op -> size		3477408						
ANR	3477925	Symbol	& op -> buf_asm		3477408						
ANR	3477926	Symbol	opsz		3477408						
ANR	3477927	DeclStmt									
ANR	3477928	Decl							"int ( * ) ( RAsm * a , RAsmOp * op , const char * buf )"	"int ( * ) ( RAsm * a , RAsmOp * op , const char * buf )"	Ase
ANR	3477929	Function	assemblerMatches	482:0:10775:10981							
ANR	3477930	FunctionDef	"assemblerMatches (RAsm * a , RAsmPlugin * h)"		3477929	0					
ANR	3477931	CompoundStatement		482:53:10828:10981	3477929	0					
ANR	3477932	IfStatement	"if ( ! a || ! h -> arch || ! h -> assemble || ! has_bits ( h , a -> bits ) )"		3477929	0					
ANR	3477933	Condition	"! a || ! h -> arch || ! h -> assemble || ! has_bits ( h , a -> bits )"	483:5:10835:10890	3477929	0	True				
ANR	3477934	OrExpression	"! a || ! h -> arch || ! h -> assemble || ! has_bits ( h , a -> bits )"		3477929	0		||			
ANR	3477935	UnaryOperationExpression	! a		3477929	0					
ANR	3477936	UnaryOperator	!		3477929	0					
ANR	3477937	Identifier	a		3477929	1					
ANR	3477938	OrExpression	"! h -> arch || ! h -> assemble || ! has_bits ( h , a -> bits )"		3477929	1		||			
ANR	3477939	UnaryOperationExpression	! h -> arch		3477929	0					
ANR	3477940	UnaryOperator	!		3477929	0					
ANR	3477941	PtrMemberAccess	h -> arch		3477929	1					
ANR	3477942	Identifier	h		3477929	0					
ANR	3477943	Identifier	arch		3477929	1					
ANR	3477944	OrExpression	"! h -> assemble || ! has_bits ( h , a -> bits )"		3477929	1		||			
ANR	3477945	UnaryOperationExpression	! h -> assemble		3477929	0					
ANR	3477946	UnaryOperator	!		3477929	0					
ANR	3477947	PtrMemberAccess	h -> assemble		3477929	1					
ANR	3477948	Identifier	h		3477929	0					
ANR	3477949	Identifier	assemble		3477929	1					
ANR	3477950	UnaryOperationExpression	"! has_bits ( h , a -> bits )"		3477929	1					
ANR	3477951	UnaryOperator	!		3477929	0					
ANR	3477952	CallExpression	"has_bits ( h , a -> bits )"		3477929	1					
ANR	3477953	Callee	has_bits		3477929	0					
ANR	3477954	Identifier	has_bits		3477929	0					
ANR	3477955	ArgumentList	h		3477929	1					
ANR	3477956	Argument	h		3477929	0					
ANR	3477957	Identifier	h		3477929	0					
ANR	3477958	Argument	a -> bits		3477929	1					
ANR	3477959	PtrMemberAccess	a -> bits		3477929	0					
ANR	3477960	Identifier	a		3477929	0					
ANR	3477961	Identifier	bits		3477929	1					
ANR	3477962	CompoundStatement		2:63:64:64	3477929	1					
ANR	3477963	ReturnStatement	return false ;	484:2:10897:10909	3477929	0	True				
ANR	3477964	Identifier	false		3477929	0					
ANR	3477965	ReturnStatement	"return ( ! strncmp ( a -> cur -> arch , h -> arch , strlen ( a -> cur -> arch ) ) ) ;"	486:1:10915:10979	3477929	1	True				
ANR	3477966	UnaryOperationExpression	"! strncmp ( a -> cur -> arch , h -> arch , strlen ( a -> cur -> arch ) )"		3477929	0					
ANR	3477967	UnaryOperator	!		3477929	0					
ANR	3477968	CallExpression	"strncmp ( a -> cur -> arch , h -> arch , strlen ( a -> cur -> arch ) )"		3477929	1					
ANR	3477969	Callee	strncmp		3477929	0					
ANR	3477970	Identifier	strncmp		3477929	0					
ANR	3477971	ArgumentList	a -> cur -> arch		3477929	1					
ANR	3477972	Argument	a -> cur -> arch		3477929	0					
ANR	3477973	PtrMemberAccess	a -> cur -> arch		3477929	0					
ANR	3477974	PtrMemberAccess	a -> cur		3477929	0					
ANR	3477975	Identifier	a		3477929	0					
ANR	3477976	Identifier	cur		3477929	1					
ANR	3477977	Identifier	arch		3477929	1					
ANR	3477978	Argument	h -> arch		3477929	1					
ANR	3477979	PtrMemberAccess	h -> arch		3477929	0					
ANR	3477980	Identifier	h		3477929	0					
ANR	3477981	Identifier	arch		3477929	1					
ANR	3477982	Argument	strlen ( a -> cur -> arch )		3477929	2					
ANR	3477983	CallExpression	strlen ( a -> cur -> arch )		3477929	0					
ANR	3477984	Callee	strlen		3477929	0					
ANR	3477985	Identifier	strlen		3477929	0					
ANR	3477986	ArgumentList	a -> cur -> arch		3477929	1					
ANR	3477987	Argument	a -> cur -> arch		3477929	0					
ANR	3477988	PtrMemberAccess	a -> cur -> arch		3477929	0					
ANR	3477989	PtrMemberAccess	a -> cur		3477929	0					
ANR	3477990	Identifier	a		3477929	0					
ANR	3477991	Identifier	cur		3477929	1					
ANR	3477992	Identifier	arch		3477929	1					
ANR	3477993	ReturnType	static bool		3477929	1					
ANR	3477994	Identifier	assemblerMatches		3477929	2					
ANR	3477995	ParameterList	"RAsm * a , RAsmPlugin * h"		3477929	3					
ANR	3477996	Parameter	RAsm * a	482:29:10804:10810	3477929	0	True				
ANR	3477997	ParameterType	RAsm *		3477929	0					
ANR	3477998	Identifier	a		3477929	1					
ANR	3477999	Parameter	RAsmPlugin * h	482:38:10813:10825	3477929	1	True				
ANR	3478000	ParameterType	RAsmPlugin *		3477929	0					
ANR	3478001	Identifier	h		3477929	1					
ANR	3478002	CFGEntryNode	ENTRY		3477929		True				
ANR	3478003	CFGExitNode	EXIT		3477929		True				
ANR	3478004	Symbol	a -> cur -> arch		3477929						
ANR	3478005	Symbol	a		3477929						
ANR	3478006	Symbol	h -> arch		3477929						
ANR	3478007	Symbol	h		3477929						
ANR	3478008	Symbol	false		3477929						
ANR	3478009	Symbol	* * a		3477929						
ANR	3478010	Symbol	* a		3477929						
ANR	3478011	Symbol	a -> cur		3477929						
ANR	3478012	Symbol	h -> assemble		3477929						
ANR	3478013	Symbol	* a -> cur		3477929						
ANR	3478014	Symbol	strncmp		3477929						
ANR	3478015	Symbol	strlen		3477929						
ANR	3478016	Symbol	* h		3477929						
ANR	3478017	Symbol	has_bits		3477929						
ANR	3478018	Symbol	a -> bits		3477929						
ANR	3478019	Function	findAssembler	489:0:10984:11364							
ANR	3478020	FunctionDef	"findAssembler (RAsm * a , const char * kw)"		3478019	0					
ANR	3478021	CompoundStatement		489:50:11034:11364	3478019	0					
ANR	3478022	IdentifierDeclStatement	Ase ase = NULL ;	490:1:11037:11051	3478019	0	True				
ANR	3478023	IdentifierDecl	ase = NULL		3478019	0					
ANR	3478024	IdentifierDeclType	Ase		3478019	0					
ANR	3478025	Identifier	ase		3478019	1					
ANR	3478026	AssignmentExpression	ase = NULL		3478019	2		=			
ANR	3478027	Identifier	NULL		3478019	0					
ANR	3478028	Identifier	NULL		3478019	1					
ANR	3478029	IdentifierDeclStatement	RAsmPlugin * h ;	491:1:11054:11067	3478019	1	True				
ANR	3478030	IdentifierDecl	* h		3478019	0					
ANR	3478031	IdentifierDeclType	RAsmPlugin *		3478019	0					
ANR	3478032	Identifier	h		3478019	1					
ANR	3478033	IdentifierDeclStatement	RListIter * iter ;	492:1:11070:11085	3478019	2	True				
ANR	3478034	IdentifierDecl	* iter		3478019	0					
ANR	3478035	IdentifierDeclType	RListIter *		3478019	0					
ANR	3478036	Identifier	iter		3478019	1					
ANR	3478037	IfStatement	if ( a -> acur && a -> acur -> assemble )		3478019	3					
ANR	3478038	Condition	a -> acur && a -> acur -> assemble	493:5:11092:11119	3478019	0	True				
ANR	3478039	AndExpression	a -> acur && a -> acur -> assemble		3478019	0		&&			
ANR	3478040	PtrMemberAccess	a -> acur		3478019	0					
ANR	3478041	Identifier	a		3478019	0					
ANR	3478042	Identifier	acur		3478019	1					
ANR	3478043	PtrMemberAccess	a -> acur -> assemble		3478019	1					
ANR	3478044	PtrMemberAccess	a -> acur		3478019	0					
ANR	3478045	Identifier	a		3478019	0					
ANR	3478046	Identifier	acur		3478019	1					
ANR	3478047	Identifier	assemble		3478019	1					
ANR	3478048	CompoundStatement		5:35:87:87	3478019	1					
ANR	3478049	ReturnStatement	return a -> acur -> assemble ;	494:2:11126:11150	3478019	0	True				
ANR	3478050	PtrMemberAccess	a -> acur -> assemble		3478019	0					
ANR	3478051	PtrMemberAccess	a -> acur		3478019	0					
ANR	3478052	Identifier	a		3478019	0					
ANR	3478053	Identifier	acur		3478019	1					
ANR	3478054	Identifier	assemble		3478019	1					
ANR	3478055	Statement	r_list_foreach	496:1:11156:11169	3478019	4	True				
ANR	3478056	Statement	(	496:16:11171:11171	3478019	5	True				
ANR	3478057	Statement	a	496:17:11172:11172	3478019	6	True				
ANR	3478058	Statement	->	496:18:11173:11174	3478019	7	True				
ANR	3478059	Statement	plugins	496:20:11175:11181	3478019	8	True				
ANR	3478060	Statement	","	496:27:11182:11182	3478019	9	True				
ANR	3478061	Statement	iter	496:29:11184:11187	3478019	10	True				
ANR	3478062	Statement	","	496:33:11188:11188	3478019	11	True				
ANR	3478063	Statement	h	496:35:11190:11190	3478019	12	True				
ANR	3478064	Statement	)	496:36:11191:11191	3478019	13	True				
ANR	3478065	CompoundStatement		8:38:158:158	3478019	14					
ANR	3478066	IfStatement	"if ( assemblerMatches ( a , h ) )"		3478019	0					
ANR	3478067	Condition	"assemblerMatches ( a , h )"	497:6:11201:11223	3478019	0	True				
ANR	3478068	CallExpression	"assemblerMatches ( a , h )"		3478019	0					
ANR	3478069	Callee	assemblerMatches		3478019	0					
ANR	3478070	Identifier	assemblerMatches		3478019	0					
ANR	3478071	ArgumentList	a		3478019	1					
ANR	3478072	Argument	a		3478019	0					
ANR	3478073	Identifier	a		3478019	0					
ANR	3478074	Argument	h		3478019	1					
ANR	3478075	Identifier	h		3478019	0					
ANR	3478076	CompoundStatement		9:31:191:191	3478019	1					
ANR	3478077	IfStatement	if ( kw )		3478019	0					
ANR	3478078	Condition	kw	498:7:11235:11236	3478019	0	True				
ANR	3478079	Identifier	kw		3478019	0					
ANR	3478080	CompoundStatement		10:11:204:204	3478019	1					
ANR	3478081	IfStatement	"if ( strstr ( h -> name , kw ) )"		3478019	0					
ANR	3478082	Condition	"strstr ( h -> name , kw )"	499:8:11249:11268	3478019	0	True				
ANR	3478083	CallExpression	"strstr ( h -> name , kw )"		3478019	0					
ANR	3478084	Callee	strstr		3478019	0					
ANR	3478085	Identifier	strstr		3478019	0					
ANR	3478086	ArgumentList	h -> name		3478019	1					
ANR	3478087	Argument	h -> name		3478019	0					
ANR	3478088	PtrMemberAccess	h -> name		3478019	0					
ANR	3478089	Identifier	h		3478019	0					
ANR	3478090	Identifier	name		3478019	1					
ANR	3478091	Argument	kw		3478019	1					
ANR	3478092	Identifier	kw		3478019	0					
ANR	3478093	CompoundStatement		11:30:236:236	3478019	1					
ANR	3478094	ReturnStatement	return h -> assemble ;	500:5:11278:11296	3478019	0	True				
ANR	3478095	PtrMemberAccess	h -> assemble		3478019	0					
ANR	3478096	Identifier	h		3478019	0					
ANR	3478097	Identifier	assemble		3478019	1					
ANR	3478098	ElseStatement	else		3478019	0					
ANR	3478099	CompoundStatement		14:10:279:279	3478019	0					
ANR	3478100	ExpressionStatement	ase = h -> assemble	503:4:11320:11337	3478019	0	True				
ANR	3478101	AssignmentExpression	ase = h -> assemble		3478019	0		=			
ANR	3478102	Identifier	ase		3478019	0					
ANR	3478103	PtrMemberAccess	h -> assemble		3478019	1					
ANR	3478104	Identifier	h		3478019	0					
ANR	3478105	Identifier	assemble		3478019	1					
ANR	3478106	ReturnStatement	return ase ;	507:1:11352:11362	3478019	15	True				
ANR	3478107	Identifier	ase		3478019	0					
ANR	3478108	ReturnType	static Ase		3478019	1					
ANR	3478109	Identifier	findAssembler		3478019	2					
ANR	3478110	ParameterList	"RAsm * a , const char * kw"		3478019	3					
ANR	3478111	Parameter	RAsm * a	489:25:11009:11015	3478019	0	True				
ANR	3478112	ParameterType	RAsm *		3478019	0					
ANR	3478113	Identifier	a		3478019	1					
ANR	3478114	Parameter	const char * kw	489:34:11018:11031	3478019	1	True				
ANR	3478115	ParameterType	const char *		3478019	0					
ANR	3478116	Identifier	kw		3478019	1					
ANR	3478117	CFGEntryNode	ENTRY		3478019		True				
ANR	3478118	CFGExitNode	EXIT		3478019		True				
ANR	3478119	Symbol	a		3478019						
ANR	3478120	Symbol	assemblerMatches		3478019						
ANR	3478121	Symbol	NULL		3478019						
ANR	3478122	Symbol	* a -> acur		3478019						
ANR	3478123	Symbol	a -> acur		3478019						
ANR	3478124	Symbol	h		3478019						
ANR	3478125	Symbol	iter		3478019						
ANR	3478126	Symbol	* * a		3478019						
ANR	3478127	Symbol	* a		3478019						
ANR	3478128	Symbol	kw		3478019						
ANR	3478129	Symbol	h -> name		3478019						
ANR	3478130	Symbol	h -> assemble		3478019						
ANR	3478131	Symbol	ase		3478019						
ANR	3478132	Symbol	* h		3478019						
ANR	3478133	Symbol	strstr		3478019						
ANR	3478134	Symbol	a -> acur -> assemble		3478019						
ANR	3478135	Function	replace_directives_for	510:0:11367:11961							
ANR	3478136	FunctionDef	"replace_directives_for (char * str , char * token)"		3478135	0					
ANR	3478137	CompoundStatement		510:60:11427:11961	3478135	0					
ANR	3478138	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	511:1:11430:11461	3478135	0	True				
ANR	3478139	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		3478135	0					
ANR	3478140	IdentifierDeclType	RStrBuf *		3478135	0					
ANR	3478141	Identifier	sb		3478135	1					
ANR	3478142	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		3478135	2		=			
ANR	3478143	Identifier	sb		3478135	0					
ANR	3478144	CallExpression	"r_strbuf_new ( """" )"		3478135	1					
ANR	3478145	Callee	r_strbuf_new		3478135	0					
ANR	3478146	Identifier	r_strbuf_new		3478135	0					
ANR	3478147	ArgumentList	""""""		3478135	1					
ANR	3478148	Argument	""""""		3478135	0					
ANR	3478149	PrimaryExpression	""""""		3478135	0					
ANR	3478150	IdentifierDeclStatement	char * p = NULL ;	512:1:11464:11478	3478135	1	True				
ANR	3478151	IdentifierDecl	* p = NULL		3478135	0					
ANR	3478152	IdentifierDeclType	char *		3478135	0					
ANR	3478153	Identifier	p		3478135	1					
ANR	3478154	AssignmentExpression	* p = NULL		3478135	2		=			
ANR	3478155	Identifier	NULL		3478135	0					
ANR	3478156	Identifier	NULL		3478135	1					
ANR	3478157	IdentifierDeclStatement	char * q = str ;	513:1:11481:11494	3478135	2	True				
ANR	3478158	IdentifierDecl	* q = str		3478135	0					
ANR	3478159	IdentifierDeclType	char *		3478135	0					
ANR	3478160	Identifier	q		3478135	1					
ANR	3478161	AssignmentExpression	* q = str		3478135	2		=			
ANR	3478162	Identifier	str		3478135	0					
ANR	3478163	Identifier	str		3478135	1					
ANR	3478164	IdentifierDeclStatement	bool changes = false ;	514:1:11497:11517	3478135	3	True				
ANR	3478165	IdentifierDecl	changes = false		3478135	0					
ANR	3478166	IdentifierDeclType	bool		3478135	0					
ANR	3478167	Identifier	changes		3478135	1					
ANR	3478168	AssignmentExpression	changes = false		3478135	2		=			
ANR	3478169	Identifier	false		3478135	0					
ANR	3478170	Identifier	false		3478135	1					
ANR	3478171	ForStatement	for ( ; ; )		3478135	4					
ANR	3478172	CompoundStatement		6:10:101:101	3478135	0					
ANR	3478173	IfStatement	if ( q )		3478135	0					
ANR	3478174	Condition	q	516:6:11537:11537	3478135	0	True				
ANR	3478175	Identifier	q		3478135	0					
ANR	3478176	CompoundStatement		7:9:112:112	3478135	1					
ANR	3478177	ExpressionStatement	"p = strstr ( q , token )"	517:3:11545:11566	3478135	0	True				
ANR	3478178	AssignmentExpression	"p = strstr ( q , token )"		3478135	0		=			
ANR	3478179	Identifier	p		3478135	0					
ANR	3478180	CallExpression	"strstr ( q , token )"		3478135	1					
ANR	3478181	Callee	strstr		3478135	0					
ANR	3478182	Identifier	strstr		3478135	0					
ANR	3478183	ArgumentList	q		3478135	1					
ANR	3478184	Argument	q		3478135	0					
ANR	3478185	Identifier	q		3478135	0					
ANR	3478186	Argument	token		3478135	1					
ANR	3478187	Identifier	token		3478135	0					
ANR	3478188	IfStatement	if ( p )		3478135	1					
ANR	3478189	Condition	p	519:6:11578:11578	3478135	0	True				
ANR	3478190	Identifier	p		3478135	0					
ANR	3478191	CompoundStatement		15:3:224:235	3478135	1					
ANR	3478192	IdentifierDeclStatement	"char * nl = strchr ( p , '\\n' ) ;"	520:3:11586:11613	3478135	0	True				
ANR	3478193	IdentifierDecl	"* nl = strchr ( p , '\\n' )"		3478135	0					
ANR	3478194	IdentifierDeclType	char *		3478135	0					
ANR	3478195	Identifier	nl		3478135	1					
ANR	3478196	AssignmentExpression	"* nl = strchr ( p , '\\n' )"		3478135	2		=			
ANR	3478197	Identifier	nl		3478135	0					
ANR	3478198	CallExpression	"strchr ( p , '\\n' )"		3478135	1					
ANR	3478199	Callee	strchr		3478135	0					
ANR	3478200	Identifier	strchr		3478135	0					
ANR	3478201	ArgumentList	p		3478135	1					
ANR	3478202	Argument	p		3478135	0					
ANR	3478203	Identifier	p		3478135	0					
ANR	3478204	Argument	'\\n'		3478135	1					
ANR	3478205	PrimaryExpression	'\\n'		3478135	0					
ANR	3478206	IfStatement	if ( nl )		3478135	1					
ANR	3478207	Condition	nl	521:7:11622:11623	3478135	0	True				
ANR	3478208	Identifier	nl		3478135	0					
ANR	3478209	CompoundStatement		12:11:198:198	3478135	1					
ANR	3478210	ExpressionStatement	* nl ++ = 0	522:4:11632:11642	3478135	0	True				
ANR	3478211	AssignmentExpression	* nl ++ = 0		3478135	0		=			
ANR	3478212	UnaryOperationExpression	* nl ++		3478135	0					
ANR	3478213	UnaryOperator	*		3478135	0					
ANR	3478214	PostIncDecOperationExpression	nl ++		3478135	1					
ANR	3478215	Identifier	nl		3478135	0					
ANR	3478216	IncDec	++		3478135	1					
ANR	3478217	PrimaryExpression	0		3478135	1					
ANR	3478218	IdentifierDeclStatement	char _ = * p ;	524:3:11652:11663	3478135	2	True				
ANR	3478219	IdentifierDecl	_ = * p		3478135	0					
ANR	3478220	IdentifierDeclType	char		3478135	0					
ANR	3478221	Identifier	_		3478135	1					
ANR	3478222	AssignmentExpression	_ = * p		3478135	2		=			
ANR	3478223	Identifier	_		3478135	0					
ANR	3478224	UnaryOperationExpression	* p		3478135	1					
ANR	3478225	UnaryOperator	*		3478135	0					
ANR	3478226	Identifier	p		3478135	1					
ANR	3478227	ExpressionStatement	* p = 0	525:3:11668:11674	3478135	3	True				
ANR	3478228	AssignmentExpression	* p = 0		3478135	0		=			
ANR	3478229	UnaryOperationExpression	* p		3478135	0					
ANR	3478230	UnaryOperator	*		3478135	0					
ANR	3478231	Identifier	p		3478135	1					
ANR	3478232	PrimaryExpression	0		3478135	1					
ANR	3478233	ExpressionStatement	"r_strbuf_append ( sb , q )"	526:3:11679:11702	3478135	4	True				
ANR	3478234	CallExpression	"r_strbuf_append ( sb , q )"		3478135	0					
ANR	3478235	Callee	r_strbuf_append		3478135	0					
ANR	3478236	Identifier	r_strbuf_append		3478135	0					
ANR	3478237	ArgumentList	sb		3478135	1					
ANR	3478238	Argument	sb		3478135	0					
ANR	3478239	Identifier	sb		3478135	0					
ANR	3478240	Argument	q		3478135	1					
ANR	3478241	Identifier	q		3478135	0					
ANR	3478242	ExpressionStatement	* p = _	527:3:11707:11713	3478135	5	True				
ANR	3478243	AssignmentExpression	* p = _		3478135	0		=			
ANR	3478244	UnaryOperationExpression	* p		3478135	0					
ANR	3478245	UnaryOperator	*		3478135	0					
ANR	3478246	Identifier	p		3478135	1					
ANR	3478247	Identifier	_		3478135	1					
ANR	3478248	ExpressionStatement	"r_strbuf_appendf ( sb , ""<{%s}>\\n"" , p + 1 )"	528:3:11718:11758	3478135	6	True				
ANR	3478249	CallExpression	"r_strbuf_appendf ( sb , ""<{%s}>\\n"" , p + 1 )"		3478135	0					
ANR	3478250	Callee	r_strbuf_appendf		3478135	0					
ANR	3478251	Identifier	r_strbuf_appendf		3478135	0					
ANR	3478252	ArgumentList	sb		3478135	1					
ANR	3478253	Argument	sb		3478135	0					
ANR	3478254	Identifier	sb		3478135	0					
ANR	3478255	Argument	"""<{%s}>\\n"""		3478135	1					
ANR	3478256	PrimaryExpression	"""<{%s}>\\n"""		3478135	0					
ANR	3478257	Argument	p + 1		3478135	2					
ANR	3478258	AdditiveExpression	p + 1		3478135	0		+			
ANR	3478259	Identifier	p		3478135	0					
ANR	3478260	PrimaryExpression	1		3478135	1					
ANR	3478261	ExpressionStatement	q = nl	529:3:11763:11769	3478135	7	True				
ANR	3478262	AssignmentExpression	q = nl		3478135	0		=			
ANR	3478263	Identifier	q		3478135	0					
ANR	3478264	Identifier	nl		3478135	1					
ANR	3478265	ExpressionStatement	changes = true	530:3:11774:11788	3478135	8	True				
ANR	3478266	AssignmentExpression	changes = true		3478135	0		=			
ANR	3478267	Identifier	changes		3478135	0					
ANR	3478268	Identifier	true		3478135	1					
ANR	3478269	ElseStatement	else		3478135	0					
ANR	3478270	CompoundStatement		22:9:371:371	3478135	0					
ANR	3478271	IfStatement	if ( q )		3478135	0					
ANR	3478272	Condition	q	532:7:11808:11808	3478135	0	True				
ANR	3478273	Identifier	q		3478135	0					
ANR	3478274	CompoundStatement		23:10:383:383	3478135	1					
ANR	3478275	ExpressionStatement	"r_strbuf_append ( sb , q )"	533:4:11817:11840	3478135	0	True				
ANR	3478276	CallExpression	"r_strbuf_append ( sb , q )"		3478135	0					
ANR	3478277	Callee	r_strbuf_append		3478135	0					
ANR	3478278	Identifier	r_strbuf_append		3478135	0					
ANR	3478279	ArgumentList	sb		3478135	1					
ANR	3478280	Argument	sb		3478135	0					
ANR	3478281	Identifier	sb		3478135	0					
ANR	3478282	Argument	q		3478135	1					
ANR	3478283	Identifier	q		3478135	0					
ANR	3478284	BreakStatement	break ;	535:3:11850:11855	3478135	1	True				
ANR	3478285	IfStatement	if ( changes )		3478135	5					
ANR	3478286	Condition	changes	538:5:11869:11875	3478135	0	True				
ANR	3478287	Identifier	changes		3478135	0					
ANR	3478288	CompoundStatement		29:14:450:450	3478135	1					
ANR	3478289	ExpressionStatement	free ( str )	539:2:11882:11892	3478135	0	True				
ANR	3478290	CallExpression	free ( str )		3478135	0					
ANR	3478291	Callee	free		3478135	0					
ANR	3478292	Identifier	free		3478135	0					
ANR	3478293	ArgumentList	str		3478135	1					
ANR	3478294	Argument	str		3478135	0					
ANR	3478295	Identifier	str		3478135	0					
ANR	3478296	ReturnStatement	return r_strbuf_drain ( sb ) ;	540:2:11896:11922	3478135	1	True				
ANR	3478297	CallExpression	r_strbuf_drain ( sb )		3478135	0					
ANR	3478298	Callee	r_strbuf_drain		3478135	0					
ANR	3478299	Identifier	r_strbuf_drain		3478135	0					
ANR	3478300	ArgumentList	sb		3478135	1					
ANR	3478301	Argument	sb		3478135	0					
ANR	3478302	Identifier	sb		3478135	0					
ANR	3478303	ExpressionStatement	r_strbuf_free ( sb )	542:1:11928:11946	3478135	6	True				
ANR	3478304	CallExpression	r_strbuf_free ( sb )		3478135	0					
ANR	3478305	Callee	r_strbuf_free		3478135	0					
ANR	3478306	Identifier	r_strbuf_free		3478135	0					
ANR	3478307	ArgumentList	sb		3478135	1					
ANR	3478308	Argument	sb		3478135	0					
ANR	3478309	Identifier	sb		3478135	0					
ANR	3478310	ReturnStatement	return str ;	543:1:11949:11959	3478135	7	True				
ANR	3478311	Identifier	str		3478135	0					
ANR	3478312	ReturnType	static char *		3478135	1					
ANR	3478313	Identifier	replace_directives_for		3478135	2					
ANR	3478314	ParameterList	"char * str , char * token"		3478135	3					
ANR	3478315	Parameter	char * str	510:36:11403:11411	3478135	0	True				
ANR	3478316	ParameterType	char *		3478135	0					
ANR	3478317	Identifier	str		3478135	1					
ANR	3478318	Parameter	char * token	510:47:11414:11424	3478135	1	True				
ANR	3478319	ParameterType	char *		3478135	0					
ANR	3478320	Identifier	token		3478135	1					
ANR	3478321	CFGEntryNode	ENTRY		3478135		True				
ANR	3478322	CFGExitNode	EXIT		3478135		True				
ANR	3478323	InfiniteForNode	true		3478135		True				
ANR	3478324	Symbol	r_strbuf_new		3478135						
ANR	3478325	Symbol	NULL		3478135						
ANR	3478326	Symbol	changes		3478135						
ANR	3478327	Symbol	false		3478135						
ANR	3478328	Symbol	strchr		3478135						
ANR	3478329	Symbol	* nl ++		3478135						
ANR	3478330	Symbol	token		3478135						
ANR	3478331	Symbol	sb		3478135						
ANR	3478332	Symbol	str		3478135						
ANR	3478333	Symbol	p		3478135						
ANR	3478334	Symbol	q		3478135						
ANR	3478335	Symbol	strstr		3478135						
ANR	3478336	Symbol	true		3478135						
ANR	3478337	Symbol	r_strbuf_drain		3478135						
ANR	3478338	Symbol	* p		3478135						
ANR	3478339	Symbol	nl		3478135						
ANR	3478340	Symbol	_		3478135						
ANR	3478341	Function	replace_directives	546:0:11964:12190							
ANR	3478342	FunctionDef	replace_directives (char * str)		3478341	0					
ANR	3478343	CompoundStatement		546:43:12007:12190	3478341	0					
ANR	3478344	IdentifierDeclStatement	int i = 0 ;	547:1:12010:12019	3478341	0	True				
ANR	3478345	IdentifierDecl	i = 0		3478341	0					
ANR	3478346	IdentifierDeclType	int		3478341	0					
ANR	3478347	Identifier	i		3478341	1					
ANR	3478348	AssignmentExpression	i = 0		3478341	2		=			
ANR	3478349	Identifier	i		3478341	0					
ANR	3478350	PrimaryExpression	0		3478341	1					
ANR	3478351	IdentifierDeclStatement	char * dir = directives [ i ++ ] ;	548:1:12022:12049	3478341	1	True				
ANR	3478352	IdentifierDecl	* dir = directives [ i ++ ]		3478341	0					
ANR	3478353	IdentifierDeclType	char *		3478341	0					
ANR	3478354	Identifier	dir		3478341	1					
ANR	3478355	AssignmentExpression	* dir = directives [ i ++ ]		3478341	2		=			
ANR	3478356	Identifier	dir		3478341	0					
ANR	3478357	ArrayIndexing	directives [ i ++ ]		3478341	1					
ANR	3478358	Identifier	directives		3478341	0					
ANR	3478359	PostIncDecOperationExpression	i ++		3478341	1					
ANR	3478360	Identifier	i		3478341	0					
ANR	3478361	IncDec	++		3478341	1					
ANR	3478362	IdentifierDeclStatement	"char * o = replace_directives_for ( str , dir ) ;"	549:1:12052:12095	3478341	2	True				
ANR	3478363	IdentifierDecl	"* o = replace_directives_for ( str , dir )"		3478341	0					
ANR	3478364	IdentifierDeclType	char *		3478341	0					
ANR	3478365	Identifier	o		3478341	1					
ANR	3478366	AssignmentExpression	"* o = replace_directives_for ( str , dir )"		3478341	2		=			
ANR	3478367	Identifier	o		3478341	0					
ANR	3478368	CallExpression	"replace_directives_for ( str , dir )"		3478341	1					
ANR	3478369	Callee	replace_directives_for		3478341	0					
ANR	3478370	Identifier	replace_directives_for		3478341	0					
ANR	3478371	ArgumentList	str		3478341	1					
ANR	3478372	Argument	str		3478341	0					
ANR	3478373	Identifier	str		3478341	0					
ANR	3478374	Argument	dir		3478341	1					
ANR	3478375	Identifier	dir		3478341	0					
ANR	3478376	WhileStatement	while ( dir )		3478341	3					
ANR	3478377	Condition	dir	550:8:12105:12107	3478341	0	True				
ANR	3478378	Identifier	dir		3478341	0					
ANR	3478379	CompoundStatement		5:13:102:102	3478341	1					
ANR	3478380	ExpressionStatement	"o = replace_directives_for ( o , dir )"	551:2:12114:12149	3478341	0	True				
ANR	3478381	AssignmentExpression	"o = replace_directives_for ( o , dir )"		3478341	0		=			
ANR	3478382	Identifier	o		3478341	0					
ANR	3478383	CallExpression	"replace_directives_for ( o , dir )"		3478341	1					
ANR	3478384	Callee	replace_directives_for		3478341	0					
ANR	3478385	Identifier	replace_directives_for		3478341	0					
ANR	3478386	ArgumentList	o		3478341	1					
ANR	3478387	Argument	o		3478341	0					
ANR	3478388	Identifier	o		3478341	0					
ANR	3478389	Argument	dir		3478341	1					
ANR	3478390	Identifier	dir		3478341	0					
ANR	3478391	ExpressionStatement	dir = directives [ i ++ ]	552:2:12153:12174	3478341	1	True				
ANR	3478392	AssignmentExpression	dir = directives [ i ++ ]		3478341	0		=			
ANR	3478393	Identifier	dir		3478341	0					
ANR	3478394	ArrayIndexing	directives [ i ++ ]		3478341	1					
ANR	3478395	Identifier	directives		3478341	0					
ANR	3478396	PostIncDecOperationExpression	i ++		3478341	1					
ANR	3478397	Identifier	i		3478341	0					
ANR	3478398	IncDec	++		3478341	1					
ANR	3478399	ReturnStatement	return o ;	554:1:12180:12188	3478341	4	True				
ANR	3478400	Identifier	o		3478341	0					
ANR	3478401	ReturnType	static char *		3478341	1					
ANR	3478402	Identifier	replace_directives		3478341	2					
ANR	3478403	ParameterList	char * str		3478341	3					
ANR	3478404	Parameter	char * str	546:32:11996:12004	3478341	0	True				
ANR	3478405	ParameterType	char *		3478341	0					
ANR	3478406	Identifier	str		3478341	1					
ANR	3478407	CFGEntryNode	ENTRY		3478341		True				
ANR	3478408	CFGExitNode	EXIT		3478341		True				
ANR	3478409	Symbol	str		3478341						
ANR	3478410	Symbol	replace_directives_for		3478341						
ANR	3478411	Symbol	directives		3478341						
ANR	3478412	Symbol	* directives		3478341						
ANR	3478413	Symbol	i		3478341						
ANR	3478414	Symbol	dir		3478341						
ANR	3478415	Symbol	o		3478341						
ANR	3478416	Function	r_asm_list_directives	557:0:12193:12339							
ANR	3478417	FunctionDef	r_asm_list_directives ()		3478416	0					
ANR	3478418	CompoundStatement		557:35:12228:12339	3478416	0					
ANR	3478419	IdentifierDeclStatement	int i = 0 ;	558:1:12231:12240	3478416	0	True				
ANR	3478420	IdentifierDecl	i = 0		3478416	0					
ANR	3478421	IdentifierDeclType	int		3478416	0					
ANR	3478422	Identifier	i		3478416	1					
ANR	3478423	AssignmentExpression	i = 0		3478416	2		=			
ANR	3478424	Identifier	i		3478416	0					
ANR	3478425	PrimaryExpression	0		3478416	1					
ANR	3478426	IdentifierDeclStatement	char * dir = directives [ i ++ ] ;	559:1:12243:12270	3478416	1	True				
ANR	3478427	IdentifierDecl	* dir = directives [ i ++ ]		3478416	0					
ANR	3478428	IdentifierDeclType	char *		3478416	0					
ANR	3478429	Identifier	dir		3478416	1					
ANR	3478430	AssignmentExpression	* dir = directives [ i ++ ]		3478416	2		=			
ANR	3478431	Identifier	dir		3478416	0					
ANR	3478432	ArrayIndexing	directives [ i ++ ]		3478416	1					
ANR	3478433	Identifier	directives		3478416	0					
ANR	3478434	PostIncDecOperationExpression	i ++		3478416	1					
ANR	3478435	Identifier	i		3478416	0					
ANR	3478436	IncDec	++		3478416	1					
ANR	3478437	WhileStatement	while ( dir )		3478416	2					
ANR	3478438	Condition	dir	560:8:12280:12282	3478416	0	True				
ANR	3478439	Identifier	dir		3478416	0					
ANR	3478440	CompoundStatement		4:13:56:56	3478416	1					
ANR	3478441	ExpressionStatement	"printf ( ""%s\\n"" , dir )"	561:2:12289:12309	3478416	0	True				
ANR	3478442	CallExpression	"printf ( ""%s\\n"" , dir )"		3478416	0					
ANR	3478443	Callee	printf		3478416	0					
ANR	3478444	Identifier	printf		3478416	0					
ANR	3478445	ArgumentList	"""%s\\n"""		3478416	1					
ANR	3478446	Argument	"""%s\\n"""		3478416	0					
ANR	3478447	PrimaryExpression	"""%s\\n"""		3478416	0					
ANR	3478448	Argument	dir		3478416	1					
ANR	3478449	Identifier	dir		3478416	0					
ANR	3478450	ExpressionStatement	dir = directives [ i ++ ]	562:2:12313:12334	3478416	1	True				
ANR	3478451	AssignmentExpression	dir = directives [ i ++ ]		3478416	0		=			
ANR	3478452	Identifier	dir		3478416	0					
ANR	3478453	ArrayIndexing	directives [ i ++ ]		3478416	1					
ANR	3478454	Identifier	directives		3478416	0					
ANR	3478455	PostIncDecOperationExpression	i ++		3478416	1					
ANR	3478456	Identifier	i		3478416	0					
ANR	3478457	IncDec	++		3478416	1					
ANR	3478458	ReturnType	R_API void		3478416	1					
ANR	3478459	Identifier	r_asm_list_directives		3478416	2					
ANR	3478460	ParameterList			3478416	3					
ANR	3478461	CFGEntryNode	ENTRY		3478416		True				
ANR	3478462	CFGExitNode	EXIT		3478416		True				
ANR	3478463	Symbol	directives		3478416						
ANR	3478464	Symbol	* directives		3478416						
ANR	3478465	Symbol	i		3478416						
ANR	3478466	Symbol	dir		3478416						
ANR	3478467	Function	r_asm_assemble	566:0:12342:13337							
ANR	3478468	FunctionDef	"r_asm_assemble (RAsm * a , RAsmOp * op , const char * buf)"		3478467	0					
ANR	3478469	CompoundStatement		566:63:12405:13337	3478467	0					
ANR	3478470	ExpressionStatement	"r_return_val_if_fail ( a && op && buf , 0 )"	567:1:12408:12448	3478467	0	True				
ANR	3478471	CallExpression	"r_return_val_if_fail ( a && op && buf , 0 )"		3478467	0					
ANR	3478472	Callee	r_return_val_if_fail		3478467	0					
ANR	3478473	Identifier	r_return_val_if_fail		3478467	0					
ANR	3478474	ArgumentList	a && op && buf		3478467	1					
ANR	3478475	Argument	a && op && buf		3478467	0					
ANR	3478476	AndExpression	a && op && buf		3478467	0		&&			
ANR	3478477	Identifier	a		3478467	0					
ANR	3478478	AndExpression	op && buf		3478467	1		&&			
ANR	3478479	Identifier	op		3478467	0					
ANR	3478480	Identifier	buf		3478467	1					
ANR	3478481	Argument	0		3478467	1					
ANR	3478482	PrimaryExpression	0		3478467	0					
ANR	3478483	IdentifierDeclStatement	int ret = 0 ;	568:1:12451:12462	3478467	1	True				
ANR	3478484	IdentifierDecl	ret = 0		3478467	0					
ANR	3478485	IdentifierDeclType	int		3478467	0					
ANR	3478486	Identifier	ret		3478467	1					
ANR	3478487	AssignmentExpression	ret = 0		3478467	2		=			
ANR	3478488	Identifier	ret		3478467	0					
ANR	3478489	PrimaryExpression	0		3478467	1					
ANR	3478490	IdentifierDeclStatement	char * b = strdup ( buf ) ;	569:1:12465:12487	3478467	2	True				
ANR	3478491	IdentifierDecl	* b = strdup ( buf )		3478467	0					
ANR	3478492	IdentifierDeclType	char *		3478467	0					
ANR	3478493	Identifier	b		3478467	1					
ANR	3478494	AssignmentExpression	* b = strdup ( buf )		3478467	2		=			
ANR	3478495	Identifier	b		3478467	0					
ANR	3478496	CallExpression	strdup ( buf )		3478467	1					
ANR	3478497	Callee	strdup		3478467	0					
ANR	3478498	Identifier	strdup		3478467	0					
ANR	3478499	ArgumentList	buf		3478467	1					
ANR	3478500	Argument	buf		3478467	0					
ANR	3478501	Identifier	buf		3478467	0					
ANR	3478502	IfStatement	if ( ! b )		3478467	3					
ANR	3478503	Condition	! b	570:5:12494:12495	3478467	0	True				
ANR	3478504	UnaryOperationExpression	! b		3478467	0					
ANR	3478505	UnaryOperator	!		3478467	0					
ANR	3478506	Identifier	b		3478467	1					
ANR	3478507	CompoundStatement		5:9:92:92	3478467	1					
ANR	3478508	ReturnStatement	return 0 ;	571:2:12502:12510	3478467	0	True				
ANR	3478509	PrimaryExpression	0		3478467	0					
ANR	3478510	IfStatement	if ( a -> ifilter )		3478467	4					
ANR	3478511	Condition	a -> ifilter	573:5:12520:12529	3478467	0	True				
ANR	3478512	PtrMemberAccess	a -> ifilter		3478467	0					
ANR	3478513	Identifier	a		3478467	0					
ANR	3478514	Identifier	ifilter		3478467	1					
ANR	3478515	CompoundStatement		8:17:126:126	3478467	1					
ANR	3478516	ExpressionStatement	"r_parse_parse ( a -> ifilter , buf , b )"	574:2:12536:12570	3478467	0	True				
ANR	3478517	CallExpression	"r_parse_parse ( a -> ifilter , buf , b )"		3478467	0					
ANR	3478518	Callee	r_parse_parse		3478467	0					
ANR	3478519	Identifier	r_parse_parse		3478467	0					
ANR	3478520	ArgumentList	a -> ifilter		3478467	1					
ANR	3478521	Argument	a -> ifilter		3478467	0					
ANR	3478522	PtrMemberAccess	a -> ifilter		3478467	0					
ANR	3478523	Identifier	a		3478467	0					
ANR	3478524	Identifier	ifilter		3478467	1					
ANR	3478525	Argument	buf		3478467	1					
ANR	3478526	Identifier	buf		3478467	0					
ANR	3478527	Argument	b		3478467	2					
ANR	3478528	Identifier	b		3478467	0					
ANR	3478529	ExpressionStatement	"r_str_case ( b , 0 )"	576:1:12576:12593	3478467	5	True				
ANR	3478530	CallExpression	"r_str_case ( b , 0 )"		3478467	0					
ANR	3478531	Callee	r_str_case		3478467	0					
ANR	3478532	Identifier	r_str_case		3478467	0					
ANR	3478533	ArgumentList	b		3478467	1					
ANR	3478534	Argument	b		3478467	0					
ANR	3478535	Identifier	b		3478467	0					
ANR	3478536	Argument	0		3478467	1					
ANR	3478537	PrimaryExpression	0		3478467	0					
ANR	3478538	ExpressionStatement	"memset ( op , 0 , sizeof ( RAsmOp ) )"	577:1:12608:12639	3478467	6	True				
ANR	3478539	CallExpression	"memset ( op , 0 , sizeof ( RAsmOp ) )"		3478467	0					
ANR	3478540	Callee	memset		3478467	0					
ANR	3478541	Identifier	memset		3478467	0					
ANR	3478542	ArgumentList	op		3478467	1					
ANR	3478543	Argument	op		3478467	0					
ANR	3478544	Identifier	op		3478467	0					
ANR	3478545	Argument	0		3478467	1					
ANR	3478546	PrimaryExpression	0		3478467	0					
ANR	3478547	Argument	sizeof ( RAsmOp )		3478467	2					
ANR	3478548	SizeofExpression	sizeof ( RAsmOp )		3478467	0					
ANR	3478549	Sizeof	sizeof		3478467	0					
ANR	3478550	SizeofOperand	RAsmOp		3478467	1					
ANR	3478551	IfStatement	if ( a -> cur )		3478467	7					
ANR	3478552	Condition	a -> cur	578:5:12646:12651	3478467	0	True				
ANR	3478553	PtrMemberAccess	a -> cur		3478467	0					
ANR	3478554	Identifier	a		3478467	0					
ANR	3478555	Identifier	cur		3478467	1					
ANR	3478556	CompoundStatement		14:2:252:266	3478467	1					
ANR	3478557	IdentifierDeclStatement	Ase ase = NULL ;	579:2:12658:12672	3478467	0	True				
ANR	3478558	IdentifierDecl	ase = NULL		3478467	0					
ANR	3478559	IdentifierDeclType	Ase		3478467	0					
ANR	3478560	Identifier	ase		3478467	1					
ANR	3478561	AssignmentExpression	ase = NULL		3478467	2		=			
ANR	3478562	Identifier	NULL		3478467	0					
ANR	3478563	Identifier	NULL		3478467	1					
ANR	3478564	IfStatement	if ( ! a -> cur -> assemble )		3478467	1					
ANR	3478565	Condition	! a -> cur -> assemble	580:6:12680:12696	3478467	0	True				
ANR	3478566	UnaryOperationExpression	! a -> cur -> assemble		3478467	0					
ANR	3478567	UnaryOperator	!		3478467	0					
ANR	3478568	PtrMemberAccess	a -> cur -> assemble		3478467	1					
ANR	3478569	PtrMemberAccess	a -> cur		3478467	0					
ANR	3478570	Identifier	a		3478467	0					
ANR	3478571	Identifier	cur		3478467	1					
ANR	3478572	Identifier	assemble		3478467	1					
ANR	3478573	CompoundStatement		15:25:293:293	3478467	1					
ANR	3478574	ExpressionStatement	"ase = findAssembler ( a , "".ks"" )"	582:3:12769:12799	3478467	0	True				
ANR	3478575	AssignmentExpression	"ase = findAssembler ( a , "".ks"" )"		3478467	0		=			
ANR	3478576	Identifier	ase		3478467	0					
ANR	3478577	CallExpression	"findAssembler ( a , "".ks"" )"		3478467	1					
ANR	3478578	Callee	findAssembler		3478467	0					
ANR	3478579	Identifier	findAssembler		3478467	0					
ANR	3478580	ArgumentList	a		3478467	1					
ANR	3478581	Argument	a		3478467	0					
ANR	3478582	Identifier	a		3478467	0					
ANR	3478583	Argument	""".ks"""		3478467	1					
ANR	3478584	PrimaryExpression	""".ks"""		3478467	0					
ANR	3478585	IfStatement	if ( ! ase )		3478467	1					
ANR	3478586	Condition	! ase	583:7:12808:12811	3478467	0	True				
ANR	3478587	UnaryOperationExpression	! ase		3478467	0					
ANR	3478588	UnaryOperator	!		3478467	0					
ANR	3478589	Identifier	ase		3478467	1					
ANR	3478590	CompoundStatement		18:13:408:408	3478467	1					
ANR	3478591	ExpressionStatement	"ase = findAssembler ( a , "".nz"" )"	584:4:12820:12850	3478467	0	True				
ANR	3478592	AssignmentExpression	"ase = findAssembler ( a , "".nz"" )"		3478467	0		=			
ANR	3478593	Identifier	ase		3478467	0					
ANR	3478594	CallExpression	"findAssembler ( a , "".nz"" )"		3478467	1					
ANR	3478595	Callee	findAssembler		3478467	0					
ANR	3478596	Identifier	findAssembler		3478467	0					
ANR	3478597	ArgumentList	a		3478467	1					
ANR	3478598	Argument	a		3478467	0					
ANR	3478599	Identifier	a		3478467	0					
ANR	3478600	Argument	""".nz"""		3478467	1					
ANR	3478601	PrimaryExpression	""".nz"""		3478467	0					
ANR	3478602	IfStatement	if ( ! ase )		3478467	1					
ANR	3478603	Condition	! ase	585:8:12860:12863	3478467	0	True				
ANR	3478604	UnaryOperationExpression	! ase		3478467	0					
ANR	3478605	UnaryOperator	!		3478467	0					
ANR	3478606	Identifier	ase		3478467	1					
ANR	3478607	CompoundStatement		20:14:460:460	3478467	1					
ANR	3478608	ExpressionStatement	"ase = findAssembler ( a , NULL )"	586:5:12873:12902	3478467	0	True				
ANR	3478609	AssignmentExpression	"ase = findAssembler ( a , NULL )"		3478467	0		=			
ANR	3478610	Identifier	ase		3478467	0					
ANR	3478611	CallExpression	"findAssembler ( a , NULL )"		3478467	1					
ANR	3478612	Callee	findAssembler		3478467	0					
ANR	3478613	Identifier	findAssembler		3478467	0					
ANR	3478614	ArgumentList	a		3478467	1					
ANR	3478615	Argument	a		3478467	0					
ANR	3478616	Identifier	a		3478467	0					
ANR	3478617	Argument	NULL		3478467	1					
ANR	3478618	Identifier	NULL		3478467	0					
ANR	3478619	ElseStatement	else		3478467	0					
ANR	3478620	CompoundStatement		24:9:518:518	3478467	0					
ANR	3478621	ExpressionStatement	ase = a -> cur -> assemble	590:3:12929:12951	3478467	0	True				
ANR	3478622	AssignmentExpression	ase = a -> cur -> assemble		3478467	0		=			
ANR	3478623	Identifier	ase		3478467	0					
ANR	3478624	PtrMemberAccess	a -> cur -> assemble		3478467	1					
ANR	3478625	PtrMemberAccess	a -> cur		3478467	0					
ANR	3478626	Identifier	a		3478467	0					
ANR	3478627	Identifier	cur		3478467	1					
ANR	3478628	Identifier	assemble		3478467	1					
ANR	3478629	IfStatement	if ( ase )		3478467	2					
ANR	3478630	Condition	ase	592:6:12963:12965	3478467	0	True				
ANR	3478631	Identifier	ase		3478467	0					
ANR	3478632	CompoundStatement		27:11:562:562	3478467	1					
ANR	3478633	ExpressionStatement	"ret = ase ( a , op , b )"	593:3:12973:12993	3478467	0	True				
ANR	3478634	AssignmentExpression	"ret = ase ( a , op , b )"		3478467	0		=			
ANR	3478635	Identifier	ret		3478467	0					
ANR	3478636	CallExpression	"ase ( a , op , b )"		3478467	1					
ANR	3478637	Callee	ase		3478467	0					
ANR	3478638	Identifier	ase		3478467	0					
ANR	3478639	ArgumentList	a		3478467	1					
ANR	3478640	Argument	a		3478467	0					
ANR	3478641	Identifier	a		3478467	0					
ANR	3478642	Argument	op		3478467	1					
ANR	3478643	Identifier	op		3478467	0					
ANR	3478644	Argument	b		3478467	2					
ANR	3478645	Identifier	b		3478467	0					
ANR	3478646	IfStatement	if ( op && ret > 0 )		3478467	8					
ANR	3478647	Condition	op && ret > 0	597:5:13083:13095	3478467	0	True				
ANR	3478648	AndExpression	op && ret > 0		3478467	0		&&			
ANR	3478649	Identifier	op		3478467	0					
ANR	3478650	RelationalExpression	ret > 0		3478467	1		>			
ANR	3478651	Identifier	ret		3478467	0					
ANR	3478652	PrimaryExpression	0		3478467	1					
ANR	3478653	CompoundStatement		35:2:823:865	3478467	1					
ANR	3478654	ExpressionStatement	op -> size = ret	598:2:13102:13116	3478467	0	True				
ANR	3478655	AssignmentExpression	op -> size = ret		3478467	0		=			
ANR	3478656	PtrMemberAccess	op -> size		3478467	0					
ANR	3478657	Identifier	op		3478467	0					
ANR	3478658	Identifier	size		3478467	1					
ANR	3478659	Identifier	ret		3478467	1					
ANR	3478660	ExpressionStatement	"r_asm_op_set_asm ( op , b )"	599:2:13150:13174	3478467	1	True				
ANR	3478661	CallExpression	"r_asm_op_set_asm ( op , b )"		3478467	0					
ANR	3478662	Callee	r_asm_op_set_asm		3478467	0					
ANR	3478663	Identifier	r_asm_op_set_asm		3478467	0					
ANR	3478664	ArgumentList	op		3478467	1					
ANR	3478665	Argument	op		3478467	0					
ANR	3478666	Identifier	op		3478467	0					
ANR	3478667	Argument	b		3478467	1					
ANR	3478668	Identifier	b		3478467	0					
ANR	3478669	IdentifierDeclStatement	ut8 * opbuf = ( ut8 * ) r_strbuf_get ( & op -> buf ) ;	600:2:13229:13271	3478467	2	True				
ANR	3478670	IdentifierDecl	* opbuf = ( ut8 * ) r_strbuf_get ( & op -> buf )		3478467	0					
ANR	3478671	IdentifierDeclType	ut8 *		3478467	0					
ANR	3478672	Identifier	opbuf		3478467	1					
ANR	3478673	AssignmentExpression	* opbuf = ( ut8 * ) r_strbuf_get ( & op -> buf )		3478467	2		=			
ANR	3478674	Identifier	opbuf		3478467	0					
ANR	3478675	CastExpression	( ut8 * ) r_strbuf_get ( & op -> buf )		3478467	1					
ANR	3478676	CastTarget	ut8 *		3478467	0					
ANR	3478677	CallExpression	r_strbuf_get ( & op -> buf )		3478467	1					
ANR	3478678	Callee	r_strbuf_get		3478467	0					
ANR	3478679	Identifier	r_strbuf_get		3478467	0					
ANR	3478680	ArgumentList	& op -> buf		3478467	1					
ANR	3478681	Argument	& op -> buf		3478467	0					
ANR	3478682	UnaryOperationExpression	& op -> buf		3478467	0					
ANR	3478683	UnaryOperator	&		3478467	0					
ANR	3478684	PtrMemberAccess	op -> buf		3478467	1					
ANR	3478685	Identifier	op		3478467	0					
ANR	3478686	Identifier	buf		3478467	1					
ANR	3478687	ExpressionStatement	"r_asm_op_set_buf ( op , opbuf , ret )"	601:2:13275:13308	3478467	3	True				
ANR	3478688	CallExpression	"r_asm_op_set_buf ( op , opbuf , ret )"		3478467	0					
ANR	3478689	Callee	r_asm_op_set_buf		3478467	0					
ANR	3478690	Identifier	r_asm_op_set_buf		3478467	0					
ANR	3478691	ArgumentList	op		3478467	1					
ANR	3478692	Argument	op		3478467	0					
ANR	3478693	Identifier	op		3478467	0					
ANR	3478694	Argument	opbuf		3478467	1					
ANR	3478695	Identifier	opbuf		3478467	0					
ANR	3478696	Argument	ret		3478467	2					
ANR	3478697	Identifier	ret		3478467	0					
ANR	3478698	ExpressionStatement	free ( b )	603:1:13314:13322	3478467	9	True				
ANR	3478699	CallExpression	free ( b )		3478467	0					
ANR	3478700	Callee	free		3478467	0					
ANR	3478701	Identifier	free		3478467	0					
ANR	3478702	ArgumentList	b		3478467	1					
ANR	3478703	Argument	b		3478467	0					
ANR	3478704	Identifier	b		3478467	0					
ANR	3478705	ReturnStatement	return ret ;	604:1:13325:13335	3478467	10	True				
ANR	3478706	Identifier	ret		3478467	0					
ANR	3478707	ReturnType	R_API int		3478467	1					
ANR	3478708	Identifier	r_asm_assemble		3478467	2					
ANR	3478709	ParameterList	"RAsm * a , RAsmOp * op , const char * buf"		3478467	3					
ANR	3478710	Parameter	RAsm * a	566:25:12367:12373	3478467	0	True				
ANR	3478711	ParameterType	RAsm *		3478467	0					
ANR	3478712	Identifier	a		3478467	1					
ANR	3478713	Parameter	RAsmOp * op	566:34:12376:12385	3478467	1	True				
ANR	3478714	ParameterType	RAsmOp *		3478467	0					
ANR	3478715	Identifier	op		3478467	1					
ANR	3478716	Parameter	const char * buf	566:46:12388:12402	3478467	2	True				
ANR	3478717	ParameterType	const char *		3478467	0					
ANR	3478718	Identifier	buf		3478467	1					
ANR	3478719	CFGEntryNode	ENTRY		3478467		True				
ANR	3478720	CFGExitNode	EXIT		3478467		True				
ANR	3478721	Symbol	ret		3478467						
ANR	3478722	Symbol	a		3478467						
ANR	3478723	Symbol	op		3478467						
ANR	3478724	Symbol	a -> cur -> assemble		3478467						
ANR	3478725	Symbol	b		3478467						
ANR	3478726	Symbol	opbuf		3478467						
ANR	3478727	Symbol	NULL		3478467						
ANR	3478728	Symbol	* op		3478467						
ANR	3478729	Symbol	findAssembler		3478467						
ANR	3478730	Symbol	* * a		3478467						
ANR	3478731	Symbol	* a		3478467						
ANR	3478732	Symbol	a -> cur		3478467						
ANR	3478733	Symbol	a -> ifilter		3478467						
ANR	3478734	Symbol	* a -> cur		3478467						
ANR	3478735	Symbol	buf		3478467						
ANR	3478736	Symbol	ase		3478467						
ANR	3478737	Symbol	& op -> buf		3478467						
ANR	3478738	Symbol	r_strbuf_get		3478467						
ANR	3478739	Symbol	op -> size		3478467						
ANR	3478740	Symbol	strdup		3478467						
ANR	3478741	Function	r_asm_mdisassemble	608:0:13374:14349							
ANR	3478742	FunctionDef	"r_asm_mdisassemble (RAsm * a , const ut8 * buf , int len)"		3478741	0					
ANR	3478743	CompoundStatement		608:69:13443:14349	3478741	0					
ANR	3478744	ExpressionStatement	"r_return_val_if_fail ( a && buf && len >= 0 , NULL )"	609:1:13446:13495	3478741	0	True				
ANR	3478745	CallExpression	"r_return_val_if_fail ( a && buf && len >= 0 , NULL )"		3478741	0					
ANR	3478746	Callee	r_return_val_if_fail		3478741	0					
ANR	3478747	Identifier	r_return_val_if_fail		3478741	0					
ANR	3478748	ArgumentList	a && buf && len >= 0		3478741	1					
ANR	3478749	Argument	a && buf && len >= 0		3478741	0					
ANR	3478750	AndExpression	a && buf && len >= 0		3478741	0		&&			
ANR	3478751	Identifier	a		3478741	0					
ANR	3478752	AndExpression	buf && len >= 0		3478741	1		&&			
ANR	3478753	Identifier	buf		3478741	0					
ANR	3478754	RelationalExpression	len >= 0		3478741	1		>=			
ANR	3478755	Identifier	len		3478741	0					
ANR	3478756	PrimaryExpression	0		3478741	1					
ANR	3478757	Argument	NULL		3478741	1					
ANR	3478758	Identifier	NULL		3478741	0					
ANR	3478759	IdentifierDeclStatement	RStrBuf * buf_asm ;	611:1:13499:13515	3478741	1	True				
ANR	3478760	IdentifierDecl	* buf_asm		3478741	0					
ANR	3478761	IdentifierDeclType	RStrBuf *		3478741	0					
ANR	3478762	Identifier	buf_asm		3478741	1					
ANR	3478763	IdentifierDeclStatement	RAsmCode * acode ;	612:1:13518:13533	3478741	2	True				
ANR	3478764	IdentifierDecl	* acode		3478741	0					
ANR	3478765	IdentifierDeclType	RAsmCode *		3478741	0					
ANR	3478766	Identifier	acode		3478741	1					
ANR	3478767	IdentifierDeclStatement	ut64 pc = a -> pc ;	613:1:13536:13551	3478741	3	True				
ANR	3478768	IdentifierDecl	pc = a -> pc		3478741	0					
ANR	3478769	IdentifierDeclType	ut64		3478741	0					
ANR	3478770	Identifier	pc		3478741	1					
ANR	3478771	AssignmentExpression	pc = a -> pc		3478741	2		=			
ANR	3478772	Identifier	pc		3478741	0					
ANR	3478773	PtrMemberAccess	a -> pc		3478741	1					
ANR	3478774	Identifier	a		3478741	0					
ANR	3478775	Identifier	pc		3478741	1					
ANR	3478776	IdentifierDeclStatement	RAsmOp op ;	614:1:13554:13563	3478741	4	True				
ANR	3478777	IdentifierDecl	op		3478741	0					
ANR	3478778	IdentifierDeclType	RAsmOp		3478741	0					
ANR	3478779	Identifier	op		3478741	1					
ANR	3478780	IdentifierDeclStatement	ut64 idx ;	615:1:13566:13574	3478741	5	True				
ANR	3478781	IdentifierDecl	idx		3478741	0					
ANR	3478782	IdentifierDeclType	ut64		3478741	0					
ANR	3478783	Identifier	idx		3478741	1					
ANR	3478784	IdentifierDeclStatement	"int ret , slen ;"	616:1:13577:13590	3478741	6	True				
ANR	3478785	IdentifierDecl	ret		3478741	0					
ANR	3478786	IdentifierDeclType	int		3478741	0					
ANR	3478787	Identifier	ret		3478741	1					
ANR	3478788	IdentifierDecl	slen		3478741	1					
ANR	3478789	IdentifierDeclType	int		3478741	0					
ANR	3478790	Identifier	slen		3478741	1					
ANR	3478791	IdentifierDeclStatement	const int addrbytes = a -> user ? ( ( RCore * ) a -> user ) -> io -> addrbytes : 1 ;	617:1:13593:13662	3478741	7	True				
ANR	3478792	IdentifierDecl	addrbytes = a -> user ? ( ( RCore * ) a -> user ) -> io -> addrbytes : 1		3478741	0					
ANR	3478793	IdentifierDeclType	const int		3478741	0					
ANR	3478794	Identifier	addrbytes		3478741	1					
ANR	3478795	AssignmentExpression	addrbytes = a -> user ? ( ( RCore * ) a -> user ) -> io -> addrbytes : 1		3478741	2		=			
ANR	3478796	Identifier	addrbytes		3478741	0					
ANR	3478797	ConditionalExpression	a -> user ? ( ( RCore * ) a -> user ) -> io -> addrbytes : 1		3478741	1					
ANR	3478798	Condition	a -> user		3478741	0					
ANR	3478799	PtrMemberAccess	a -> user		3478741	0					
ANR	3478800	Identifier	a		3478741	0					
ANR	3478801	Identifier	user		3478741	1					
ANR	3478802	PtrMemberAccess	( ( RCore * ) a -> user ) -> io -> addrbytes		3478741	1					
ANR	3478803	PtrMemberAccess	( ( RCore * ) a -> user ) -> io		3478741	0					
ANR	3478804	CastExpression	( RCore * ) a -> user		3478741	0					
ANR	3478805	CastTarget	RCore *		3478741	0					
ANR	3478806	PtrMemberAccess	a -> user		3478741	1					
ANR	3478807	Identifier	a		3478741	0					
ANR	3478808	Identifier	user		3478741	1					
ANR	3478809	Identifier	io		3478741	1					
ANR	3478810	Identifier	addrbytes		3478741	1					
ANR	3478811	PrimaryExpression	1		3478741	2					
ANR	3478812	IfStatement	if ( ! ( acode = r_asm_code_new ( ) ) )		3478741	8					
ANR	3478813	Condition	! ( acode = r_asm_code_new ( ) )	619:5:13670:13697	3478741	0	True				
ANR	3478814	UnaryOperationExpression	! ( acode = r_asm_code_new ( ) )		3478741	0					
ANR	3478815	UnaryOperator	!		3478741	0					
ANR	3478816	AssignmentExpression	acode = r_asm_code_new ( )		3478741	1		=			
ANR	3478817	Identifier	acode		3478741	0					
ANR	3478818	CallExpression	r_asm_code_new ( )		3478741	1					
ANR	3478819	Callee	r_asm_code_new		3478741	0					
ANR	3478820	Identifier	r_asm_code_new		3478741	0					
ANR	3478821	ArgumentList			3478741	1					
ANR	3478822	CompoundStatement		12:35:256:256	3478741	1					
ANR	3478823	ReturnStatement	return NULL ;	620:2:13704:13715	3478741	0	True				
ANR	3478824	Identifier	NULL		3478741	0					
ANR	3478825	IfStatement	if ( ! ( acode -> bytes = malloc ( 1 + len ) ) )		3478741	9					
ANR	3478826	Condition	! ( acode -> bytes = malloc ( 1 + len ) )	622:5:13725:13758	3478741	0	True				
ANR	3478827	UnaryOperationExpression	! ( acode -> bytes = malloc ( 1 + len ) )		3478741	0					
ANR	3478828	UnaryOperator	!		3478741	0					
ANR	3478829	AssignmentExpression	acode -> bytes = malloc ( 1 + len )		3478741	1		=			
ANR	3478830	PtrMemberAccess	acode -> bytes		3478741	0					
ANR	3478831	Identifier	acode		3478741	0					
ANR	3478832	Identifier	bytes		3478741	1					
ANR	3478833	CallExpression	malloc ( 1 + len )		3478741	1					
ANR	3478834	Callee	malloc		3478741	0					
ANR	3478835	Identifier	malloc		3478741	0					
ANR	3478836	ArgumentList	1 + len		3478741	1					
ANR	3478837	Argument	1 + len		3478741	0					
ANR	3478838	AdditiveExpression	1 + len		3478741	0		+			
ANR	3478839	PrimaryExpression	1		3478741	0					
ANR	3478840	Identifier	len		3478741	1					
ANR	3478841	CompoundStatement		15:41:317:317	3478741	1					
ANR	3478842	ReturnStatement	return r_asm_code_free ( acode ) ;	623:2:13765:13795	3478741	0	True				
ANR	3478843	CallExpression	r_asm_code_free ( acode )		3478741	0					
ANR	3478844	Callee	r_asm_code_free		3478741	0					
ANR	3478845	Identifier	r_asm_code_free		3478741	0					
ANR	3478846	ArgumentList	acode		3478741	1					
ANR	3478847	Argument	acode		3478741	0					
ANR	3478848	Identifier	acode		3478741	0					
ANR	3478849	ExpressionStatement	"memcpy ( acode -> bytes , buf , len )"	625:1:13801:13832	3478741	10	True				
ANR	3478850	CallExpression	"memcpy ( acode -> bytes , buf , len )"		3478741	0					
ANR	3478851	Callee	memcpy		3478741	0					
ANR	3478852	Identifier	memcpy		3478741	0					
ANR	3478853	ArgumentList	acode -> bytes		3478741	1					
ANR	3478854	Argument	acode -> bytes		3478741	0					
ANR	3478855	PtrMemberAccess	acode -> bytes		3478741	0					
ANR	3478856	Identifier	acode		3478741	0					
ANR	3478857	Identifier	bytes		3478741	1					
ANR	3478858	Argument	buf		3478741	1					
ANR	3478859	Identifier	buf		3478741	0					
ANR	3478860	Argument	len		3478741	2					
ANR	3478861	Identifier	len		3478741	0					
ANR	3478862	IfStatement	if ( ! ( buf_asm = r_strbuf_new ( NULL ) ) )		3478741	11					
ANR	3478863	Condition	! ( buf_asm = r_strbuf_new ( NULL ) )	626:5:13839:13870	3478741	0	True				
ANR	3478864	UnaryOperationExpression	! ( buf_asm = r_strbuf_new ( NULL ) )		3478741	0					
ANR	3478865	UnaryOperator	!		3478741	0					
ANR	3478866	AssignmentExpression	buf_asm = r_strbuf_new ( NULL )		3478741	1		=			
ANR	3478867	Identifier	buf_asm		3478741	0					
ANR	3478868	CallExpression	r_strbuf_new ( NULL )		3478741	1					
ANR	3478869	Callee	r_strbuf_new		3478741	0					
ANR	3478870	Identifier	r_strbuf_new		3478741	0					
ANR	3478871	ArgumentList	NULL		3478741	1					
ANR	3478872	Argument	NULL		3478741	0					
ANR	3478873	Identifier	NULL		3478741	0					
ANR	3478874	CompoundStatement		19:39:429:429	3478741	1					
ANR	3478875	ReturnStatement	return r_asm_code_free ( acode ) ;	627:2:13877:13907	3478741	0	True				
ANR	3478876	CallExpression	r_asm_code_free ( acode )		3478741	0					
ANR	3478877	Callee	r_asm_code_free		3478741	0					
ANR	3478878	Identifier	r_asm_code_free		3478741	0					
ANR	3478879	ArgumentList	acode		3478741	1					
ANR	3478880	Argument	acode		3478741	0					
ANR	3478881	Identifier	acode		3478741	0					
ANR	3478882	ForStatement	for ( idx = ret = slen = 0 ; idx + addrbytes <= len ; idx += addrbytes * ret )		3478741	12					
ANR	3478883	ForInit	idx = ret = slen = 0 ;	629:6:13918:13938	3478741	0	True				
ANR	3478884	AssignmentExpression	idx = ret = slen = 0		3478741	0		=			
ANR	3478885	Identifier	idx		3478741	0					
ANR	3478886	AssignmentExpression	ret = slen = 0		3478741	1		=			
ANR	3478887	Identifier	ret		3478741	0					
ANR	3478888	AssignmentExpression	slen = 0		3478741	1		=			
ANR	3478889	Identifier	slen		3478741	0					
ANR	3478890	PrimaryExpression	0		3478741	1					
ANR	3478891	Condition	idx + addrbytes <= len	629:28:13940:13961	3478741	1	True				
ANR	3478892	RelationalExpression	idx + addrbytes <= len		3478741	0		<=			
ANR	3478893	AdditiveExpression	idx + addrbytes		3478741	0		+			
ANR	3478894	Identifier	idx		3478741	0					
ANR	3478895	Identifier	addrbytes		3478741	1					
ANR	3478896	Identifier	len		3478741	1					
ANR	3478897	AssignmentExpression	idx += addrbytes * ret	629:52:13964:13985	3478741	2	True	+=			
ANR	3478898	Identifier	idx		3478741	0					
ANR	3478899	MultiplicativeExpression	addrbytes * ret		3478741	1		*			
ANR	3478900	Identifier	addrbytes		3478741	0					
ANR	3478901	Identifier	ret		3478741	1					
ANR	3478902	CompoundStatement		22:76:544:544	3478741	3					
ANR	3478903	ExpressionStatement	"r_asm_set_pc ( a , pc + idx )"	630:2:13992:14018	3478741	0	True				
ANR	3478904	CallExpression	"r_asm_set_pc ( a , pc + idx )"		3478741	0					
ANR	3478905	Callee	r_asm_set_pc		3478741	0					
ANR	3478906	Identifier	r_asm_set_pc		3478741	0					
ANR	3478907	ArgumentList	a		3478741	1					
ANR	3478908	Argument	a		3478741	0					
ANR	3478909	Identifier	a		3478741	0					
ANR	3478910	Argument	pc + idx		3478741	1					
ANR	3478911	AdditiveExpression	pc + idx		3478741	0		+			
ANR	3478912	Identifier	pc		3478741	0					
ANR	3478913	Identifier	idx		3478741	1					
ANR	3478914	ExpressionStatement	"ret = r_asm_disassemble ( a , & op , buf + idx , len - idx )"	631:2:14022:14076	3478741	1	True				
ANR	3478915	AssignmentExpression	"ret = r_asm_disassemble ( a , & op , buf + idx , len - idx )"		3478741	0		=			
ANR	3478916	Identifier	ret		3478741	0					
ANR	3478917	CallExpression	"r_asm_disassemble ( a , & op , buf + idx , len - idx )"		3478741	1					
ANR	3478918	Callee	r_asm_disassemble		3478741	0					
ANR	3478919	Identifier	r_asm_disassemble		3478741	0					
ANR	3478920	ArgumentList	a		3478741	1					
ANR	3478921	Argument	a		3478741	0					
ANR	3478922	Identifier	a		3478741	0					
ANR	3478923	Argument	& op		3478741	1					
ANR	3478924	UnaryOperationExpression	& op		3478741	0					
ANR	3478925	UnaryOperator	&		3478741	0					
ANR	3478926	Identifier	op		3478741	1					
ANR	3478927	Argument	buf + idx		3478741	2					
ANR	3478928	AdditiveExpression	buf + idx		3478741	0		+			
ANR	3478929	Identifier	buf		3478741	0					
ANR	3478930	Identifier	idx		3478741	1					
ANR	3478931	Argument	len - idx		3478741	3					
ANR	3478932	AdditiveExpression	len - idx		3478741	0		-			
ANR	3478933	Identifier	len		3478741	0					
ANR	3478934	Identifier	idx		3478741	1					
ANR	3478935	IfStatement	if ( ret < 1 )		3478741	2					
ANR	3478936	Condition	ret < 1	632:6:14084:14090	3478741	0	True				
ANR	3478937	RelationalExpression	ret < 1		3478741	0		<			
ANR	3478938	Identifier	ret		3478741	0					
ANR	3478939	PrimaryExpression	1		3478741	1					
ANR	3478940	CompoundStatement		25:15:649:649	3478741	1					
ANR	3478941	ExpressionStatement	ret = 1	633:3:14098:14105	3478741	0	True				
ANR	3478942	AssignmentExpression	ret = 1		3478741	0		=			
ANR	3478943	Identifier	ret		3478741	0					
ANR	3478944	PrimaryExpression	1		3478741	1					
ANR	3478945	IfStatement	if ( a -> ofilter )		3478741	3					
ANR	3478946	Condition	a -> ofilter	635:6:14117:14126	3478741	0	True				
ANR	3478947	PtrMemberAccess	a -> ofilter		3478741	0					
ANR	3478948	Identifier	a		3478741	0					
ANR	3478949	Identifier	ofilter		3478741	1					
ANR	3478950	CompoundStatement		28:18:685:685	3478741	1					
ANR	3478951	ExpressionStatement	"parseHeap ( a -> ofilter , & op . buf_asm )"	636:3:14134:14169	3478741	0	True				
ANR	3478952	CallExpression	"parseHeap ( a -> ofilter , & op . buf_asm )"		3478741	0					
ANR	3478953	Callee	parseHeap		3478741	0					
ANR	3478954	Identifier	parseHeap		3478741	0					
ANR	3478955	ArgumentList	a -> ofilter		3478741	1					
ANR	3478956	Argument	a -> ofilter		3478741	0					
ANR	3478957	PtrMemberAccess	a -> ofilter		3478741	0					
ANR	3478958	Identifier	a		3478741	0					
ANR	3478959	Identifier	ofilter		3478741	1					
ANR	3478960	Argument	& op . buf_asm		3478741	1					
ANR	3478961	UnaryOperationExpression	& op . buf_asm		3478741	0					
ANR	3478962	UnaryOperator	&		3478741	0					
ANR	3478963	MemberAccess	op . buf_asm		3478741	1					
ANR	3478964	Identifier	op		3478741	0					
ANR	3478965	Identifier	buf_asm		3478741	1					
ANR	3478966	ExpressionStatement	"r_strbuf_append ( buf_asm , r_strbuf_get ( & op . buf_asm ) )"	638:2:14177:14230	3478741	4	True				
ANR	3478967	CallExpression	"r_strbuf_append ( buf_asm , r_strbuf_get ( & op . buf_asm ) )"		3478741	0					
ANR	3478968	Callee	r_strbuf_append		3478741	0					
ANR	3478969	Identifier	r_strbuf_append		3478741	0					
ANR	3478970	ArgumentList	buf_asm		3478741	1					
ANR	3478971	Argument	buf_asm		3478741	0					
ANR	3478972	Identifier	buf_asm		3478741	0					
ANR	3478973	Argument	r_strbuf_get ( & op . buf_asm )		3478741	1					
ANR	3478974	CallExpression	r_strbuf_get ( & op . buf_asm )		3478741	0					
ANR	3478975	Callee	r_strbuf_get		3478741	0					
ANR	3478976	Identifier	r_strbuf_get		3478741	0					
ANR	3478977	ArgumentList	& op . buf_asm		3478741	1					
ANR	3478978	Argument	& op . buf_asm		3478741	0					
ANR	3478979	UnaryOperationExpression	& op . buf_asm		3478741	0					
ANR	3478980	UnaryOperator	&		3478741	0					
ANR	3478981	MemberAccess	op . buf_asm		3478741	1					
ANR	3478982	Identifier	op		3478741	0					
ANR	3478983	Identifier	buf_asm		3478741	1					
ANR	3478984	ExpressionStatement	"r_strbuf_append ( buf_asm , ""\\n"" )"	639:2:14234:14265	3478741	5	True				
ANR	3478985	CallExpression	"r_strbuf_append ( buf_asm , ""\\n"" )"		3478741	0					
ANR	3478986	Callee	r_strbuf_append		3478741	0					
ANR	3478987	Identifier	r_strbuf_append		3478741	0					
ANR	3478988	ArgumentList	buf_asm		3478741	1					
ANR	3478989	Argument	buf_asm		3478741	0					
ANR	3478990	Identifier	buf_asm		3478741	0					
ANR	3478991	Argument	"""\\n"""		3478741	1					
ANR	3478992	PrimaryExpression	"""\\n"""		3478741	0					
ANR	3478993	ExpressionStatement	acode -> assembly = r_strbuf_drain ( buf_asm )	641:1:14271:14313	3478741	13	True				
ANR	3478994	AssignmentExpression	acode -> assembly = r_strbuf_drain ( buf_asm )		3478741	0		=			
ANR	3478995	PtrMemberAccess	acode -> assembly		3478741	0					
ANR	3478996	Identifier	acode		3478741	0					
ANR	3478997	Identifier	assembly		3478741	1					
ANR	3478998	CallExpression	r_strbuf_drain ( buf_asm )		3478741	1					
ANR	3478999	Callee	r_strbuf_drain		3478741	0					
ANR	3479000	Identifier	r_strbuf_drain		3478741	0					
ANR	3479001	ArgumentList	buf_asm		3478741	1					
ANR	3479002	Argument	buf_asm		3478741	0					
ANR	3479003	Identifier	buf_asm		3478741	0					
ANR	3479004	ExpressionStatement	acode -> len = idx	642:1:14316:14332	3478741	14	True				
ANR	3479005	AssignmentExpression	acode -> len = idx		3478741	0		=			
ANR	3479006	PtrMemberAccess	acode -> len		3478741	0					
ANR	3479007	Identifier	acode		3478741	0					
ANR	3479008	Identifier	len		3478741	1					
ANR	3479009	Identifier	idx		3478741	1					
ANR	3479010	ReturnStatement	return acode ;	643:1:14335:14347	3478741	15	True				
ANR	3479011	Identifier	acode		3478741	0					
ANR	3479012	ReturnType	R_API RAsmCode *		3478741	1					
ANR	3479013	Identifier	r_asm_mdisassemble		3478741	2					
ANR	3479014	ParameterList	"RAsm * a , const ut8 * buf , int len"		3478741	3					
ANR	3479015	Parameter	RAsm * a	608:35:13409:13415	3478741	0	True				
ANR	3479016	ParameterType	RAsm *		3478741	0					
ANR	3479017	Identifier	a		3478741	1					
ANR	3479018	Parameter	const ut8 * buf	608:44:13418:13431	3478741	1	True				
ANR	3479019	ParameterType	const ut8 *		3478741	0					
ANR	3479020	Identifier	buf		3478741	1					
ANR	3479021	Parameter	int len	608:60:13434:13440	3478741	2	True				
ANR	3479022	ParameterType	int		3478741	0					
ANR	3479023	Identifier	len		3478741	1					
ANR	3479024	CFGEntryNode	ENTRY		3478741		True				
ANR	3479025	CFGExitNode	EXIT		3478741		True				
ANR	3479026	Symbol	* * * a		3478741						
ANR	3479027	Symbol	a -> user		3478741						
ANR	3479028	Symbol	( ( RCore * ) a -> user ) -> io		3478741						
ANR	3479029	Symbol	& op		3478741						
ANR	3479030	Symbol	acode		3478741						
ANR	3479031	Symbol	r_asm_code_free		3478741						
ANR	3479032	Symbol	acode -> len		3478741						
ANR	3479033	Symbol	len		3478741						
ANR	3479034	Symbol	* * a -> user		3478741						
ANR	3479035	Symbol	acode -> assembly		3478741						
ANR	3479036	Symbol	r_asm_code_new		3478741						
ANR	3479037	Symbol	ret		3478741						
ANR	3479038	Symbol	* a -> user		3478741						
ANR	3479039	Symbol	a		3478741						
ANR	3479040	Symbol	op		3478741						
ANR	3479041	Symbol	malloc		3478741						
ANR	3479042	Symbol	addrbytes		3478741						
ANR	3479043	Symbol	NULL		3478741						
ANR	3479044	Symbol	* ( ( RCore * ) a -> user ) -> io		3478741						
ANR	3479045	Symbol	r_strbuf_new		3478741						
ANR	3479046	Symbol	acode -> bytes		3478741						
ANR	3479047	Symbol	* * a		3478741						
ANR	3479048	Symbol	* a		3478741						
ANR	3479049	Symbol	a -> pc		3478741						
ANR	3479050	Symbol	& op . buf_asm		3478741						
ANR	3479051	Symbol	buf		3478741						
ANR	3479052	Symbol	pc		3478741						
ANR	3479053	Symbol	a -> ofilter		3478741						
ANR	3479054	Symbol	r_strbuf_get		3478741						
ANR	3479055	Symbol	slen		3478741						
ANR	3479056	Symbol	( ( RCore * ) a -> user ) -> io -> addrbytes		3478741						
ANR	3479057	Symbol	r_strbuf_drain		3478741						
ANR	3479058	Symbol	buf_asm		3478741						
ANR	3479059	Symbol	idx		3478741						
ANR	3479060	Symbol	r_asm_disassemble		3478741						
ANR	3479061	Symbol	* acode		3478741						
ANR	3479062	Function	r_asm_mdisassemble_hexstr	646:0:14352:14775							
ANR	3479063	FunctionDef	"r_asm_mdisassemble_hexstr (RAsm * a , RParse * p , const char * hexstr)"		3479062	0					
ANR	3479064	CompoundStatement		646:82:14434:14775	3479062	0					
ANR	3479065	IdentifierDeclStatement	ut8 * buf = malloc ( strlen ( hexstr ) + 1 ) ;	647:1:14437:14476	3479062	0	True				
ANR	3479066	IdentifierDecl	* buf = malloc ( strlen ( hexstr ) + 1 )		3479062	0					
ANR	3479067	IdentifierDeclType	ut8 *		3479062	0					
ANR	3479068	Identifier	buf		3479062	1					
ANR	3479069	AssignmentExpression	* buf = malloc ( strlen ( hexstr ) + 1 )		3479062	2		=			
ANR	3479070	Identifier	buf		3479062	0					
ANR	3479071	CallExpression	malloc ( strlen ( hexstr ) + 1 )		3479062	1					
ANR	3479072	Callee	malloc		3479062	0					
ANR	3479073	Identifier	malloc		3479062	0					
ANR	3479074	ArgumentList	strlen ( hexstr ) + 1		3479062	1					
ANR	3479075	Argument	strlen ( hexstr ) + 1		3479062	0					
ANR	3479076	AdditiveExpression	strlen ( hexstr ) + 1		3479062	0		+			
ANR	3479077	CallExpression	strlen ( hexstr )		3479062	0					
ANR	3479078	Callee	strlen		3479062	0					
ANR	3479079	Identifier	strlen		3479062	0					
ANR	3479080	ArgumentList	hexstr		3479062	1					
ANR	3479081	Argument	hexstr		3479062	0					
ANR	3479082	Identifier	hexstr		3479062	0					
ANR	3479083	PrimaryExpression	1		3479062	1					
ANR	3479084	IfStatement	if ( ! buf )		3479062	1					
ANR	3479085	Condition	! buf	648:5:14483:14486	3479062	0	True				
ANR	3479086	UnaryOperationExpression	! buf		3479062	0					
ANR	3479087	UnaryOperator	!		3479062	0					
ANR	3479088	Identifier	buf		3479062	1					
ANR	3479089	CompoundStatement		3:11:54:54	3479062	1					
ANR	3479090	ReturnStatement	return NULL ;	649:2:14493:14504	3479062	0	True				
ANR	3479091	Identifier	NULL		3479062	0					
ANR	3479092	IdentifierDeclStatement	"int len = r_hex_str2bin ( hexstr , buf ) ;"	651:1:14510:14547	3479062	2	True				
ANR	3479093	IdentifierDecl	"len = r_hex_str2bin ( hexstr , buf )"		3479062	0					
ANR	3479094	IdentifierDeclType	int		3479062	0					
ANR	3479095	Identifier	len		3479062	1					
ANR	3479096	AssignmentExpression	"len = r_hex_str2bin ( hexstr , buf )"		3479062	2		=			
ANR	3479097	Identifier	len		3479062	0					
ANR	3479098	CallExpression	"r_hex_str2bin ( hexstr , buf )"		3479062	1					
ANR	3479099	Callee	r_hex_str2bin		3479062	0					
ANR	3479100	Identifier	r_hex_str2bin		3479062	0					
ANR	3479101	ArgumentList	hexstr		3479062	1					
ANR	3479102	Argument	hexstr		3479062	0					
ANR	3479103	Identifier	hexstr		3479062	0					
ANR	3479104	Argument	buf		3479062	1					
ANR	3479105	Identifier	buf		3479062	0					
ANR	3479106	IfStatement	if ( len < 1 )		3479062	3					
ANR	3479107	Condition	len < 1	652:5:14554:14560	3479062	0	True				
ANR	3479108	RelationalExpression	len < 1		3479062	0		<			
ANR	3479109	Identifier	len		3479062	0					
ANR	3479110	PrimaryExpression	1		3479062	1					
ANR	3479111	CompoundStatement		7:14:128:128	3479062	1					
ANR	3479112	ExpressionStatement	free ( buf )	653:2:14567:14577	3479062	0	True				
ANR	3479113	CallExpression	free ( buf )		3479062	0					
ANR	3479114	Callee	free		3479062	0					
ANR	3479115	Identifier	free		3479062	0					
ANR	3479116	ArgumentList	buf		3479062	1					
ANR	3479117	Argument	buf		3479062	0					
ANR	3479118	Identifier	buf		3479062	0					
ANR	3479119	ReturnStatement	return NULL ;	654:2:14581:14592	3479062	1	True				
ANR	3479120	Identifier	NULL		3479062	0					
ANR	3479121	IdentifierDeclStatement	"RAsmCode * ret = r_asm_mdisassemble ( a , buf , ( ut64 ) len ) ;"	656:1:14598:14652	3479062	4	True				
ANR	3479122	IdentifierDecl	"* ret = r_asm_mdisassemble ( a , buf , ( ut64 ) len )"		3479062	0					
ANR	3479123	IdentifierDeclType	RAsmCode *		3479062	0					
ANR	3479124	Identifier	ret		3479062	1					
ANR	3479125	AssignmentExpression	"* ret = r_asm_mdisassemble ( a , buf , ( ut64 ) len )"		3479062	2		=			
ANR	3479126	Identifier	ret		3479062	0					
ANR	3479127	CallExpression	"r_asm_mdisassemble ( a , buf , ( ut64 ) len )"		3479062	1					
ANR	3479128	Callee	r_asm_mdisassemble		3479062	0					
ANR	3479129	Identifier	r_asm_mdisassemble		3479062	0					
ANR	3479130	ArgumentList	a		3479062	1					
ANR	3479131	Argument	a		3479062	0					
ANR	3479132	Identifier	a		3479062	0					
ANR	3479133	Argument	buf		3479062	1					
ANR	3479134	Identifier	buf		3479062	0					
ANR	3479135	Argument	( ut64 ) len		3479062	2					
ANR	3479136	CastExpression	( ut64 ) len		3479062	0					
ANR	3479137	CastTarget	ut64		3479062	0					
ANR	3479138	Identifier	len		3479062	1					
ANR	3479139	IfStatement	if ( ret && p )		3479062	5					
ANR	3479140	Condition	ret && p	657:5:14659:14666	3479062	0	True				
ANR	3479141	AndExpression	ret && p		3479062	0		&&			
ANR	3479142	Identifier	ret		3479062	0					
ANR	3479143	Identifier	p		3479062	1					
ANR	3479144	CompoundStatement		12:15:234:234	3479062	1					
ANR	3479145	ExpressionStatement	"r_parse_parse ( p , ret -> assembly , ret -> assembly )"	659:2:14697:14744	3479062	0	True				
ANR	3479146	CallExpression	"r_parse_parse ( p , ret -> assembly , ret -> assembly )"		3479062	0					
ANR	3479147	Callee	r_parse_parse		3479062	0					
ANR	3479148	Identifier	r_parse_parse		3479062	0					
ANR	3479149	ArgumentList	p		3479062	1					
ANR	3479150	Argument	p		3479062	0					
ANR	3479151	Identifier	p		3479062	0					
ANR	3479152	Argument	ret -> assembly		3479062	1					
ANR	3479153	PtrMemberAccess	ret -> assembly		3479062	0					
ANR	3479154	Identifier	ret		3479062	0					
ANR	3479155	Identifier	assembly		3479062	1					
ANR	3479156	Argument	ret -> assembly		3479062	2					
ANR	3479157	PtrMemberAccess	ret -> assembly		3479062	0					
ANR	3479158	Identifier	ret		3479062	0					
ANR	3479159	Identifier	assembly		3479062	1					
ANR	3479160	ExpressionStatement	free ( buf )	661:1:14750:14760	3479062	6	True				
ANR	3479161	CallExpression	free ( buf )		3479062	0					
ANR	3479162	Callee	free		3479062	0					
ANR	3479163	Identifier	free		3479062	0					
ANR	3479164	ArgumentList	buf		3479062	1					
ANR	3479165	Argument	buf		3479062	0					
ANR	3479166	Identifier	buf		3479062	0					
ANR	3479167	ReturnStatement	return ret ;	662:1:14763:14773	3479062	7	True				
ANR	3479168	Identifier	ret		3479062	0					
ANR	3479169	ReturnType	R_API RAsmCode *		3479062	1					
ANR	3479170	Identifier	r_asm_mdisassemble_hexstr		3479062	2					
ANR	3479171	ParameterList	"RAsm * a , RParse * p , const char * hexstr"		3479062	3					
ANR	3479172	Parameter	RAsm * a	646:42:14394:14400	3479062	0	True				
ANR	3479173	ParameterType	RAsm *		3479062	0					
ANR	3479174	Identifier	a		3479062	1					
ANR	3479175	Parameter	RParse * p	646:51:14403:14411	3479062	1	True				
ANR	3479176	ParameterType	RParse *		3479062	0					
ANR	3479177	Identifier	p		3479062	1					
ANR	3479178	Parameter	const char * hexstr	646:62:14414:14431	3479062	2	True				
ANR	3479179	ParameterType	const char *		3479062	0					
ANR	3479180	Identifier	hexstr		3479062	1					
ANR	3479181	CFGEntryNode	ENTRY		3479062		True				
ANR	3479182	CFGExitNode	EXIT		3479062		True				
ANR	3479183	Symbol	ret		3479062						
ANR	3479184	Symbol	a		3479062						
ANR	3479185	Symbol	malloc		3479062						
ANR	3479186	Symbol	NULL		3479062						
ANR	3479187	Symbol	ret -> assembly		3479062						
ANR	3479188	Symbol	hexstr		3479062						
ANR	3479189	Symbol	* ret		3479062						
ANR	3479190	Symbol	p		3479062						
ANR	3479191	Symbol	strlen		3479062						
ANR	3479192	Symbol	buf		3479062						
ANR	3479193	Symbol	len		3479062						
ANR	3479194	Symbol	r_asm_mdisassemble		3479062						
ANR	3479195	Symbol	r_hex_str2bin		3479062						
ANR	3479196	Function	r_asm_assemble_file	665:0:14778:14974							
ANR	3479197	FunctionDef	"r_asm_assemble_file (RAsm * a , const char * file)"		3479196	0					
ANR	3479198	CompoundStatement		665:63:14841:14974	3479196	0					
ANR	3479199	IdentifierDeclStatement	"char * f = r_file_slurp ( file , NULL ) ;"	666:1:14844:14879	3479196	0	True				
ANR	3479200	IdentifierDecl	"* f = r_file_slurp ( file , NULL )"		3479196	0					
ANR	3479201	IdentifierDeclType	char *		3479196	0					
ANR	3479202	Identifier	f		3479196	1					
ANR	3479203	AssignmentExpression	"* f = r_file_slurp ( file , NULL )"		3479196	2		=			
ANR	3479204	Identifier	f		3479196	0					
ANR	3479205	CallExpression	"r_file_slurp ( file , NULL )"		3479196	1					
ANR	3479206	Callee	r_file_slurp		3479196	0					
ANR	3479207	Identifier	r_file_slurp		3479196	0					
ANR	3479208	ArgumentList	file		3479196	1					
ANR	3479209	Argument	file		3479196	0					
ANR	3479210	Identifier	file		3479196	0					
ANR	3479211	Argument	NULL		3479196	1					
ANR	3479212	Identifier	NULL		3479196	0					
ANR	3479213	IfStatement	if ( f )		3479196	1					
ANR	3479214	Condition	f	667:5:14886:14886	3479196	0	True				
ANR	3479215	Identifier	f		3479196	0					
ANR	3479216	CompoundStatement		4:2:51:88	3479196	1					
ANR	3479217	IdentifierDeclStatement	"RAsmCode * ac = r_asm_massemble ( a , f ) ;"	668:2:14893:14930	3479196	0	True				
ANR	3479218	IdentifierDecl	"* ac = r_asm_massemble ( a , f )"		3479196	0					
ANR	3479219	IdentifierDeclType	RAsmCode *		3479196	0					
ANR	3479220	Identifier	ac		3479196	1					
ANR	3479221	AssignmentExpression	"* ac = r_asm_massemble ( a , f )"		3479196	2		=			
ANR	3479222	Identifier	ac		3479196	0					
ANR	3479223	CallExpression	"r_asm_massemble ( a , f )"		3479196	1					
ANR	3479224	Callee	r_asm_massemble		3479196	0					
ANR	3479225	Identifier	r_asm_massemble		3479196	0					
ANR	3479226	ArgumentList	a		3479196	1					
ANR	3479227	Argument	a		3479196	0					
ANR	3479228	Identifier	a		3479196	0					
ANR	3479229	Argument	f		3479196	1					
ANR	3479230	Identifier	f		3479196	0					
ANR	3479231	ExpressionStatement	free ( f )	669:2:14934:14942	3479196	1	True				
ANR	3479232	CallExpression	free ( f )		3479196	0					
ANR	3479233	Callee	free		3479196	0					
ANR	3479234	Identifier	free		3479196	0					
ANR	3479235	ArgumentList	f		3479196	1					
ANR	3479236	Argument	f		3479196	0					
ANR	3479237	Identifier	f		3479196	0					
ANR	3479238	ReturnStatement	return ac ;	670:2:14946:14955	3479196	2	True				
ANR	3479239	Identifier	ac		3479196	0					
ANR	3479240	ReturnStatement	return NULL ;	672:1:14961:14972	3479196	2	True				
ANR	3479241	Identifier	NULL		3479196	0					
ANR	3479242	ReturnType	R_API RAsmCode *		3479196	1					
ANR	3479243	Identifier	r_asm_assemble_file		3479196	2					
ANR	3479244	ParameterList	"RAsm * a , const char * file"		3479196	3					
ANR	3479245	Parameter	RAsm * a	665:36:14814:14820	3479196	0	True				
ANR	3479246	ParameterType	RAsm *		3479196	0					
ANR	3479247	Identifier	a		3479196	1					
ANR	3479248	Parameter	const char * file	665:45:14823:14838	3479196	1	True				
ANR	3479249	ParameterType	const char *		3479196	0					
ANR	3479250	Identifier	file		3479196	1					
ANR	3479251	CFGEntryNode	ENTRY		3479196		True				
ANR	3479252	CFGExitNode	EXIT		3479196		True				
ANR	3479253	Symbol	a		3479196						
ANR	3479254	Symbol	r_file_slurp		3479196						
ANR	3479255	Symbol	ac		3479196						
ANR	3479256	Symbol	file		3479196						
ANR	3479257	Symbol	NULL		3479196						
ANR	3479258	Symbol	f		3479196						
ANR	3479259	Symbol	r_asm_massemble		3479196						
ANR	3479260	Function	flag_free_kv	675:0:14977:15052							
ANR	3479261	FunctionDef	flag_free_kv (HtPPKv * kv)		3479260	0					
ANR	3479262	CompoundStatement		675:37:15014:15052	3479260	0					
ANR	3479263	ExpressionStatement	free ( kv -> key )	676:1:15017:15031	3479260	0	True				
ANR	3479264	CallExpression	free ( kv -> key )		3479260	0					
ANR	3479265	Callee	free		3479260	0					
ANR	3479266	Identifier	free		3479260	0					
ANR	3479267	ArgumentList	kv -> key		3479260	1					
ANR	3479268	Argument	kv -> key		3479260	0					
ANR	3479269	PtrMemberAccess	kv -> key		3479260	0					
ANR	3479270	Identifier	kv		3479260	0					
ANR	3479271	Identifier	key		3479260	1					
ANR	3479272	ExpressionStatement	free ( kv -> value )	677:1:15034:15050	3479260	1	True				
ANR	3479273	CallExpression	free ( kv -> value )		3479260	0					
ANR	3479274	Callee	free		3479260	0					
ANR	3479275	Identifier	free		3479260	0					
ANR	3479276	ArgumentList	kv -> value		3479260	1					
ANR	3479277	Argument	kv -> value		3479260	0					
ANR	3479278	PtrMemberAccess	kv -> value		3479260	0					
ANR	3479279	Identifier	kv		3479260	0					
ANR	3479280	Identifier	value		3479260	1					
ANR	3479281	ReturnType	static void		3479260	1					
ANR	3479282	Identifier	flag_free_kv		3479260	2					
ANR	3479283	ParameterList	HtPPKv * kv		3479260	3					
ANR	3479284	Parameter	HtPPKv * kv	675:25:15002:15011	3479260	0	True				
ANR	3479285	ParameterType	HtPPKv *		3479260	0					
ANR	3479286	Identifier	kv		3479260	1					
ANR	3479287	CFGEntryNode	ENTRY		3479260		True				
ANR	3479288	CFGExitNode	EXIT		3479260		True				
ANR	3479289	Symbol	* kv		3479260						
ANR	3479290	Symbol	kv -> key		3479260						
ANR	3479291	Symbol	kv -> value		3479260						
ANR	3479292	Symbol	kv		3479260						
ANR	3479293	Function	dup_val	680:0:15055:15129							
ANR	3479294	FunctionDef	dup_val (const void * v)		3479293	0					
ANR	3479295	CompoundStatement		680:36:15091:15129	3479293	0					
ANR	3479296	ReturnStatement	return ( void * ) strdup ( ( char * ) v ) ;	681:1:15094:15127	3479293	0	True				
ANR	3479297	CastExpression	( void * ) strdup ( ( char * ) v )		3479293	0					
ANR	3479298	CastTarget	void *		3479293	0					
ANR	3479299	CallExpression	strdup ( ( char * ) v )		3479293	1					
ANR	3479300	Callee	strdup		3479293	0					
ANR	3479301	Identifier	strdup		3479293	0					
ANR	3479302	ArgumentList	( char * ) v		3479293	1					
ANR	3479303	Argument	( char * ) v		3479293	0					
ANR	3479304	CastExpression	( char * ) v		3479293	0					
ANR	3479305	CastTarget	char *		3479293	0					
ANR	3479306	Identifier	v		3479293	1					
ANR	3479307	ReturnType	static void *		3479293	1					
ANR	3479308	Identifier	dup_val		3479293	2					
ANR	3479309	ParameterList	const void * v		3479293	3					
ANR	3479310	Parameter	const void * v	680:21:15076:15088	3479293	0	True				
ANR	3479311	ParameterType	const void *		3479293	0					
ANR	3479312	Identifier	v		3479293	1					
ANR	3479313	CFGEntryNode	ENTRY		3479293		True				
ANR	3479314	CFGExitNode	EXIT		3479293		True				
ANR	3479315	Symbol	v		3479293						
ANR	3479316	Symbol	strdup		3479293						
ANR	3479317	Function	r_asm_massemble	684:0:15132:25193							
ANR	3479318	FunctionDef	"r_asm_massemble (RAsm * a , const char * assembly)"		3479317	0					
ANR	3479319	CompoundStatement		684:63:15195:25193	3479317	0					
ANR	3479320	IdentifierDeclStatement	"int num , stage , ret , idx , ctr , i , j , linenum = 0 ;"	685:1:15198:15246	3479317	0	True				
ANR	3479321	IdentifierDecl	num		3479317	0					
ANR	3479322	IdentifierDeclType	int		3479317	0					
ANR	3479323	Identifier	num		3479317	1					
ANR	3479324	IdentifierDecl	stage		3479317	1					
ANR	3479325	IdentifierDeclType	int		3479317	0					
ANR	3479326	Identifier	stage		3479317	1					
ANR	3479327	IdentifierDecl	ret		3479317	2					
ANR	3479328	IdentifierDeclType	int		3479317	0					
ANR	3479329	Identifier	ret		3479317	1					
ANR	3479330	IdentifierDecl	idx		3479317	3					
ANR	3479331	IdentifierDeclType	int		3479317	0					
ANR	3479332	Identifier	idx		3479317	1					
ANR	3479333	IdentifierDecl	ctr		3479317	4					
ANR	3479334	IdentifierDeclType	int		3479317	0					
ANR	3479335	Identifier	ctr		3479317	1					
ANR	3479336	IdentifierDecl	i		3479317	5					
ANR	3479337	IdentifierDeclType	int		3479317	0					
ANR	3479338	Identifier	i		3479317	1					
ANR	3479339	IdentifierDecl	j		3479317	6					
ANR	3479340	IdentifierDeclType	int		3479317	0					
ANR	3479341	Identifier	j		3479317	1					
ANR	3479342	IdentifierDecl	linenum = 0		3479317	7					
ANR	3479343	IdentifierDeclType	int		3479317	0					
ANR	3479344	Identifier	linenum		3479317	1					
ANR	3479345	AssignmentExpression	linenum = 0		3479317	2		=			
ANR	3479346	Identifier	linenum		3479317	0					
ANR	3479347	PrimaryExpression	0		3479317	1					
ANR	3479348	IdentifierDeclStatement	"char * lbuf = NULL , * ptr2 , * ptr = NULL , * ptr_start = NULL ;"	686:1:15249:15305	3479317	1	True				
ANR	3479349	IdentifierDecl	* lbuf = NULL		3479317	0					
ANR	3479350	IdentifierDeclType	char *		3479317	0					
ANR	3479351	Identifier	lbuf		3479317	1					
ANR	3479352	AssignmentExpression	* lbuf = NULL		3479317	2		=			
ANR	3479353	Identifier	NULL		3479317	0					
ANR	3479354	Identifier	NULL		3479317	1					
ANR	3479355	IdentifierDecl	* ptr2		3479317	1					
ANR	3479356	IdentifierDeclType	char *		3479317	0					
ANR	3479357	Identifier	ptr2		3479317	1					
ANR	3479358	IdentifierDecl	* ptr = NULL		3479317	2					
ANR	3479359	IdentifierDeclType	char *		3479317	0					
ANR	3479360	Identifier	ptr		3479317	1					
ANR	3479361	AssignmentExpression	* ptr = NULL		3479317	2		=			
ANR	3479362	Identifier	NULL		3479317	0					
ANR	3479363	Identifier	NULL		3479317	1					
ANR	3479364	IdentifierDecl	* ptr_start = NULL		3479317	3					
ANR	3479365	IdentifierDeclType	char *		3479317	0					
ANR	3479366	Identifier	ptr_start		3479317	1					
ANR	3479367	AssignmentExpression	* ptr_start = NULL		3479317	2		=			
ANR	3479368	Identifier	NULL		3479317	0					
ANR	3479369	Identifier	NULL		3479317	1					
ANR	3479370	IdentifierDeclStatement	const char * asmcpu = NULL ;	687:1:15308:15333	3479317	2	True				
ANR	3479371	IdentifierDecl	* asmcpu = NULL		3479317	0					
ANR	3479372	IdentifierDeclType	const char *		3479317	0					
ANR	3479373	Identifier	asmcpu		3479317	1					
ANR	3479374	AssignmentExpression	* asmcpu = NULL		3479317	2		=			
ANR	3479375	Identifier	NULL		3479317	0					
ANR	3479376	Identifier	NULL		3479317	1					
ANR	3479377	IdentifierDeclStatement	RAsmCode * acode = NULL ;	688:1:15336:15358	3479317	3	True				
ANR	3479378	IdentifierDecl	* acode = NULL		3479317	0					
ANR	3479379	IdentifierDeclType	RAsmCode *		3479317	0					
ANR	3479380	Identifier	acode		3479317	1					
ANR	3479381	AssignmentExpression	* acode = NULL		3479317	2		=			
ANR	3479382	Identifier	NULL		3479317	0					
ANR	3479383	Identifier	NULL		3479317	1					
ANR	3479384	IdentifierDeclStatement	RAsmOp op = { 0 } ;	689:1:15361:15376	3479317	4	True				
ANR	3479385	IdentifierDecl	op = { 0 }		3479317	0					
ANR	3479386	IdentifierDeclType	RAsmOp		3479317	0					
ANR	3479387	Identifier	op		3479317	1					
ANR	3479388	AssignmentExpression	op = { 0 }		3479317	2		=			
ANR	3479389	Identifier	op		3479317	0					
ANR	3479390	InitializerList	0		3479317	1					
ANR	3479391	PrimaryExpression	0		3479317	0					
ANR	3479392	IdentifierDeclStatement	"ut64 off , pc ;"	690:1:15379:15391	3479317	5	True				
ANR	3479393	IdentifierDecl	off		3479317	0					
ANR	3479394	IdentifierDeclType	ut64		3479317	0					
ANR	3479395	Identifier	off		3479317	1					
ANR	3479396	IdentifierDecl	pc		3479317	1					
ANR	3479397	IdentifierDeclType	ut64		3479317	0					
ANR	3479398	Identifier	pc		3479317	1					
ANR	3479399	IdentifierDeclStatement	char * buf_token = NULL ;	692:1:15395:15417	3479317	6	True				
ANR	3479400	IdentifierDecl	* buf_token = NULL		3479317	0					
ANR	3479401	IdentifierDeclType	char *		3479317	0					
ANR	3479402	Identifier	buf_token		3479317	1					
ANR	3479403	AssignmentExpression	* buf_token = NULL		3479317	2		=			
ANR	3479404	Identifier	NULL		3479317	0					
ANR	3479405	Identifier	NULL		3479317	1					
ANR	3479406	IdentifierDeclStatement	int tokens_size = 32 ;	693:1:15420:15440	3479317	7	True				
ANR	3479407	IdentifierDecl	tokens_size = 32		3479317	0					
ANR	3479408	IdentifierDeclType	int		3479317	0					
ANR	3479409	Identifier	tokens_size		3479317	1					
ANR	3479410	AssignmentExpression	tokens_size = 32		3479317	2		=			
ANR	3479411	Identifier	tokens_size		3479317	0					
ANR	3479412	PrimaryExpression	32		3479317	1					
ANR	3479413	IdentifierDeclStatement	"char * * tokens = calloc ( sizeof ( char * ) , tokens_size ) ;"	694:1:15443:15495	3479317	8	True				
ANR	3479414	IdentifierDecl	"* * tokens = calloc ( sizeof ( char * ) , tokens_size )"		3479317	0					
ANR	3479415	IdentifierDeclType	char * *		3479317	0					
ANR	3479416	Identifier	tokens		3479317	1					
ANR	3479417	AssignmentExpression	"* * tokens = calloc ( sizeof ( char * ) , tokens_size )"		3479317	2		=			
ANR	3479418	Identifier	tokens		3479317	0					
ANR	3479419	CallExpression	"calloc ( sizeof ( char * ) , tokens_size )"		3479317	1					
ANR	3479420	Callee	calloc		3479317	0					
ANR	3479421	Identifier	calloc		3479317	0					
ANR	3479422	ArgumentList	sizeof ( char * )		3479317	1					
ANR	3479423	Argument	sizeof ( char * )		3479317	0					
ANR	3479424	SizeofExpression	sizeof ( char * )		3479317	0					
ANR	3479425	Sizeof	sizeof		3479317	0					
ANR	3479426	SizeofOperand	char *		3479317	1					
ANR	3479427	Argument	tokens_size		3479317	1					
ANR	3479428	Identifier	tokens_size		3479317	0					
ANR	3479429	IfStatement	if ( ! tokens )		3479317	9					
ANR	3479430	Condition	! tokens	695:5:15502:15508	3479317	0	True				
ANR	3479431	UnaryOperationExpression	! tokens		3479317	0					
ANR	3479432	UnaryOperator	!		3479317	0					
ANR	3479433	Identifier	tokens		3479317	1					
ANR	3479434	CompoundStatement		12:14:315:315	3479317	1					
ANR	3479435	ReturnStatement	return NULL ;	696:2:15515:15526	3479317	0	True				
ANR	3479436	Identifier	NULL		3479317	0					
ANR	3479437	IfStatement	if ( ! assembly )		3479317	10					
ANR	3479438	Condition	! assembly	698:5:15536:15544	3479317	0	True				
ANR	3479439	UnaryOperationExpression	! assembly		3479317	0					
ANR	3479440	UnaryOperator	!		3479317	0					
ANR	3479441	Identifier	assembly		3479317	1					
ANR	3479442	CompoundStatement		15:16:351:351	3479317	1					
ANR	3479443	ExpressionStatement	free ( tokens )	699:2:15551:15564	3479317	0	True				
ANR	3479444	CallExpression	free ( tokens )		3479317	0					
ANR	3479445	Callee	free		3479317	0					
ANR	3479446	Identifier	free		3479317	0					
ANR	3479447	ArgumentList	tokens		3479317	1					
ANR	3479448	Argument	tokens		3479317	0					
ANR	3479449	Identifier	tokens		3479317	0					
ANR	3479450	ReturnStatement	return NULL ;	700:2:15568:15579	3479317	1	True				
ANR	3479451	Identifier	NULL		3479317	0					
ANR	3479452	ExpressionStatement	ht_pp_free ( a -> flags )	702:1:15585:15606	3479317	11	True				
ANR	3479453	CallExpression	ht_pp_free ( a -> flags )		3479317	0					
ANR	3479454	Callee	ht_pp_free		3479317	0					
ANR	3479455	Identifier	ht_pp_free		3479317	0					
ANR	3479456	ArgumentList	a -> flags		3479317	1					
ANR	3479457	Argument	a -> flags		3479317	0					
ANR	3479458	PtrMemberAccess	a -> flags		3479317	0					
ANR	3479459	Identifier	a		3479317	0					
ANR	3479460	Identifier	flags		3479317	1					
ANR	3479461	IfStatement	"if ( ! ( a -> flags = ht_pp_new ( dup_val , flag_free_kv , NULL ) ) )"		3479317	12					
ANR	3479462	Condition	"! ( a -> flags = ht_pp_new ( dup_val , flag_free_kv , NULL ) )"	703:5:15613:15665	3479317	0	True				
ANR	3479463	UnaryOperationExpression	"! ( a -> flags = ht_pp_new ( dup_val , flag_free_kv , NULL ) )"		3479317	0					
ANR	3479464	UnaryOperator	!		3479317	0					
ANR	3479465	AssignmentExpression	"a -> flags = ht_pp_new ( dup_val , flag_free_kv , NULL )"		3479317	1		=			
ANR	3479466	PtrMemberAccess	a -> flags		3479317	0					
ANR	3479467	Identifier	a		3479317	0					
ANR	3479468	Identifier	flags		3479317	1					
ANR	3479469	CallExpression	"ht_pp_new ( dup_val , flag_free_kv , NULL )"		3479317	1					
ANR	3479470	Callee	ht_pp_new		3479317	0					
ANR	3479471	Identifier	ht_pp_new		3479317	0					
ANR	3479472	ArgumentList	dup_val		3479317	1					
ANR	3479473	Argument	dup_val		3479317	0					
ANR	3479474	Identifier	dup_val		3479317	0					
ANR	3479475	Argument	flag_free_kv		3479317	1					
ANR	3479476	Identifier	flag_free_kv		3479317	0					
ANR	3479477	Argument	NULL		3479317	2					
ANR	3479478	Identifier	NULL		3479317	0					
ANR	3479479	CompoundStatement		20:60:472:472	3479317	1					
ANR	3479480	ExpressionStatement	free ( tokens )	704:2:15672:15685	3479317	0	True				
ANR	3479481	CallExpression	free ( tokens )		3479317	0					
ANR	3479482	Callee	free		3479317	0					
ANR	3479483	Identifier	free		3479317	0					
ANR	3479484	ArgumentList	tokens		3479317	1					
ANR	3479485	Argument	tokens		3479317	0					
ANR	3479486	Identifier	tokens		3479317	0					
ANR	3479487	ReturnStatement	return NULL ;	705:2:15689:15700	3479317	1	True				
ANR	3479488	Identifier	NULL		3479317	0					
ANR	3479489	IfStatement	if ( ! ( acode = r_asm_code_new ( ) ) )		3479317	13					
ANR	3479490	Condition	! ( acode = r_asm_code_new ( ) )	707:5:15710:15737	3479317	0	True				
ANR	3479491	UnaryOperationExpression	! ( acode = r_asm_code_new ( ) )		3479317	0					
ANR	3479492	UnaryOperator	!		3479317	0					
ANR	3479493	AssignmentExpression	acode = r_asm_code_new ( )		3479317	1		=			
ANR	3479494	Identifier	acode		3479317	0					
ANR	3479495	CallExpression	r_asm_code_new ( )		3479317	1					
ANR	3479496	Callee	r_asm_code_new		3479317	0					
ANR	3479497	Identifier	r_asm_code_new		3479317	0					
ANR	3479498	ArgumentList			3479317	1					
ANR	3479499	CompoundStatement		24:35:544:544	3479317	1					
ANR	3479500	ExpressionStatement	free ( tokens )	708:2:15744:15757	3479317	0	True				
ANR	3479501	CallExpression	free ( tokens )		3479317	0					
ANR	3479502	Callee	free		3479317	0					
ANR	3479503	Identifier	free		3479317	0					
ANR	3479504	ArgumentList	tokens		3479317	1					
ANR	3479505	Argument	tokens		3479317	0					
ANR	3479506	Identifier	tokens		3479317	0					
ANR	3479507	ReturnStatement	return NULL ;	709:2:15761:15772	3479317	1	True				
ANR	3479508	Identifier	NULL		3479317	0					
ANR	3479509	IfStatement	if ( ! ( acode -> assembly = malloc ( strlen ( assembly ) + 16 ) ) )		3479317	14					
ANR	3479510	Condition	! ( acode -> assembly = malloc ( strlen ( assembly ) + 16 ) )	711:5:15782:15833	3479317	0	True				
ANR	3479511	UnaryOperationExpression	! ( acode -> assembly = malloc ( strlen ( assembly ) + 16 ) )		3479317	0					
ANR	3479512	UnaryOperator	!		3479317	0					
ANR	3479513	AssignmentExpression	acode -> assembly = malloc ( strlen ( assembly ) + 16 )		3479317	1		=			
ANR	3479514	PtrMemberAccess	acode -> assembly		3479317	0					
ANR	3479515	Identifier	acode		3479317	0					
ANR	3479516	Identifier	assembly		3479317	1					
ANR	3479517	CallExpression	malloc ( strlen ( assembly ) + 16 )		3479317	1					
ANR	3479518	Callee	malloc		3479317	0					
ANR	3479519	Identifier	malloc		3479317	0					
ANR	3479520	ArgumentList	strlen ( assembly ) + 16		3479317	1					
ANR	3479521	Argument	strlen ( assembly ) + 16		3479317	0					
ANR	3479522	AdditiveExpression	strlen ( assembly ) + 16		3479317	0		+			
ANR	3479523	CallExpression	strlen ( assembly )		3479317	0					
ANR	3479524	Callee	strlen		3479317	0					
ANR	3479525	Identifier	strlen		3479317	0					
ANR	3479526	ArgumentList	assembly		3479317	1					
ANR	3479527	Argument	assembly		3479317	0					
ANR	3479528	Identifier	assembly		3479317	0					
ANR	3479529	PrimaryExpression	16		3479317	1					
ANR	3479530	CompoundStatement		28:59:640:640	3479317	1					
ANR	3479531	ExpressionStatement	free ( tokens )	712:2:15840:15853	3479317	0	True				
ANR	3479532	CallExpression	free ( tokens )		3479317	0					
ANR	3479533	Callee	free		3479317	0					
ANR	3479534	Identifier	free		3479317	0					
ANR	3479535	ArgumentList	tokens		3479317	1					
ANR	3479536	Argument	tokens		3479317	0					
ANR	3479537	Identifier	tokens		3479317	0					
ANR	3479538	ReturnStatement	return r_asm_code_free ( acode ) ;	713:2:15857:15887	3479317	1	True				
ANR	3479539	CallExpression	r_asm_code_free ( acode )		3479317	0					
ANR	3479540	Callee	r_asm_code_free		3479317	0					
ANR	3479541	Identifier	r_asm_code_free		3479317	0					
ANR	3479542	ArgumentList	acode		3479317	1					
ANR	3479543	Argument	acode		3479317	0					
ANR	3479544	Identifier	acode		3479317	0					
ANR	3479545	ExpressionStatement	"r_str_ncpy ( acode -> assembly , assembly , sizeof ( acode -> assembly ) - 1 )"	715:1:15893:15961	3479317	15	True				
ANR	3479546	CallExpression	"r_str_ncpy ( acode -> assembly , assembly , sizeof ( acode -> assembly ) - 1 )"		3479317	0					
ANR	3479547	Callee	r_str_ncpy		3479317	0					
ANR	3479548	Identifier	r_str_ncpy		3479317	0					
ANR	3479549	ArgumentList	acode -> assembly		3479317	1					
ANR	3479550	Argument	acode -> assembly		3479317	0					
ANR	3479551	PtrMemberAccess	acode -> assembly		3479317	0					
ANR	3479552	Identifier	acode		3479317	0					
ANR	3479553	Identifier	assembly		3479317	1					
ANR	3479554	Argument	assembly		3479317	1					
ANR	3479555	Identifier	assembly		3479317	0					
ANR	3479556	Argument	sizeof ( acode -> assembly ) - 1		3479317	2					
ANR	3479557	AdditiveExpression	sizeof ( acode -> assembly ) - 1		3479317	0		-			
ANR	3479558	SizeofExpression	sizeof ( acode -> assembly )		3479317	0					
ANR	3479559	Sizeof	sizeof		3479317	0					
ANR	3479560	PtrMemberAccess	acode -> assembly		3479317	1					
ANR	3479561	Identifier	acode		3479317	0					
ANR	3479562	Identifier	assembly		3479317	1					
ANR	3479563	PrimaryExpression	1		3479317	1					
ANR	3479564	IfStatement	"if ( ! ( acode -> bytes = calloc ( 1 , 64 ) ) )"		3479317	16					
ANR	3479565	Condition	"! ( acode -> bytes = calloc ( 1 , 64 ) )"	716:5:15968:15999	3479317	0	True				
ANR	3479566	UnaryOperationExpression	"! ( acode -> bytes = calloc ( 1 , 64 ) )"		3479317	0					
ANR	3479567	UnaryOperator	!		3479317	0					
ANR	3479568	AssignmentExpression	"acode -> bytes = calloc ( 1 , 64 )"		3479317	1		=			
ANR	3479569	PtrMemberAccess	acode -> bytes		3479317	0					
ANR	3479570	Identifier	acode		3479317	0					
ANR	3479571	Identifier	bytes		3479317	1					
ANR	3479572	CallExpression	"calloc ( 1 , 64 )"		3479317	1					
ANR	3479573	Callee	calloc		3479317	0					
ANR	3479574	Identifier	calloc		3479317	0					
ANR	3479575	ArgumentList	1		3479317	1					
ANR	3479576	Argument	1		3479317	0					
ANR	3479577	PrimaryExpression	1		3479317	0					
ANR	3479578	Argument	64		3479317	1					
ANR	3479579	PrimaryExpression	64		3479317	0					
ANR	3479580	CompoundStatement		33:39:806:806	3479317	1					
ANR	3479581	ExpressionStatement	free ( tokens )	717:2:16006:16019	3479317	0	True				
ANR	3479582	CallExpression	free ( tokens )		3479317	0					
ANR	3479583	Callee	free		3479317	0					
ANR	3479584	Identifier	free		3479317	0					
ANR	3479585	ArgumentList	tokens		3479317	1					
ANR	3479586	Argument	tokens		3479317	0					
ANR	3479587	Identifier	tokens		3479317	0					
ANR	3479588	ReturnStatement	return r_asm_code_free ( acode ) ;	718:2:16023:16053	3479317	1	True				
ANR	3479589	CallExpression	r_asm_code_free ( acode )		3479317	0					
ANR	3479590	Callee	r_asm_code_free		3479317	0					
ANR	3479591	Identifier	r_asm_code_free		3479317	0					
ANR	3479592	ArgumentList	acode		3479317	1					
ANR	3479593	Argument	acode		3479317	0					
ANR	3479594	Identifier	acode		3479317	0					
ANR	3479595	ExpressionStatement	lbuf = strdup ( assembly )	720:1:16059:16083	3479317	17	True				
ANR	3479596	AssignmentExpression	lbuf = strdup ( assembly )		3479317	0		=			
ANR	3479597	Identifier	lbuf		3479317	0					
ANR	3479598	CallExpression	strdup ( assembly )		3479317	1					
ANR	3479599	Callee	strdup		3479317	0					
ANR	3479600	Identifier	strdup		3479317	0					
ANR	3479601	ArgumentList	assembly		3479317	1					
ANR	3479602	Argument	assembly		3479317	0					
ANR	3479603	Identifier	assembly		3479317	0					
ANR	3479604	ExpressionStatement	acode -> code_align = 0	721:1:16086:16107	3479317	18	True				
ANR	3479605	AssignmentExpression	acode -> code_align = 0		3479317	0		=			
ANR	3479606	PtrMemberAccess	acode -> code_align		3479317	0					
ANR	3479607	Identifier	acode		3479317	0					
ANR	3479608	Identifier	code_align		3479317	1					
ANR	3479609	PrimaryExpression	0		3479317	1					
ANR	3479610	ExpressionStatement	"lbuf = r_str_replace ( lbuf , "",,"" , ""\\n"" , true )"	724:1:16153:16198	3479317	19	True				
ANR	3479611	AssignmentExpression	"lbuf = r_str_replace ( lbuf , "",,"" , ""\\n"" , true )"		3479317	0		=			
ANR	3479612	Identifier	lbuf		3479317	0					
ANR	3479613	CallExpression	"r_str_replace ( lbuf , "",,"" , ""\\n"" , true )"		3479317	1					
ANR	3479614	Callee	r_str_replace		3479317	0					
ANR	3479615	Identifier	r_str_replace		3479317	0					
ANR	3479616	ArgumentList	lbuf		3479317	1					
ANR	3479617	Argument	lbuf		3479317	0					
ANR	3479618	Identifier	lbuf		3479317	0					
ANR	3479619	Argument	""",,"""		3479317	1					
ANR	3479620	PrimaryExpression	""",,"""		3479317	0					
ANR	3479621	Argument	"""\\n"""		3479317	2					
ANR	3479622	PrimaryExpression	"""\\n"""		3479317	0					
ANR	3479623	Argument	true		3479317	3					
ANR	3479624	Identifier	true		3479317	0					
ANR	3479625	CompoundStatement		44:2:1063:1093	3479317	20					
ANR	3479626	IdentifierDeclStatement	"char * nl = strchr ( lbuf , '\\n' ) ;"	727:2:16259:16289	3479317	0	True				
ANR	3479627	IdentifierDecl	"* nl = strchr ( lbuf , '\\n' )"		3479317	0					
ANR	3479628	IdentifierDeclType	char *		3479317	0					
ANR	3479629	Identifier	nl		3479317	1					
ANR	3479630	AssignmentExpression	"* nl = strchr ( lbuf , '\\n' )"		3479317	2		=			
ANR	3479631	Identifier	nl		3479317	0					
ANR	3479632	CallExpression	"strchr ( lbuf , '\\n' )"		3479317	1					
ANR	3479633	Callee	strchr		3479317	0					
ANR	3479634	Identifier	strchr		3479317	0					
ANR	3479635	ArgumentList	lbuf		3479317	1					
ANR	3479636	Argument	lbuf		3479317	0					
ANR	3479637	Identifier	lbuf		3479317	0					
ANR	3479638	Argument	'\\n'		3479317	1					
ANR	3479639	PrimaryExpression	'\\n'		3479317	0					
ANR	3479640	IfStatement	if ( nl )		3479317	1					
ANR	3479641	Condition	nl	728:6:16297:16298	3479317	0	True				
ANR	3479642	Identifier	nl		3479317	0					
ANR	3479643	CompoundStatement		45:10:1105:1105	3479317	1					
ANR	3479644	IfStatement	"if ( strchr ( nl + 1 , '\\n' ) )"		3479317	0					
ANR	3479645	Condition	"strchr ( nl + 1 , '\\n' )"	729:7:16310:16330	3479317	0	True				
ANR	3479646	CallExpression	"strchr ( nl + 1 , '\\n' )"		3479317	0					
ANR	3479647	Callee	strchr		3479317	0					
ANR	3479648	Identifier	strchr		3479317	0					
ANR	3479649	ArgumentList	nl + 1		3479317	1					
ANR	3479650	Argument	nl + 1		3479317	0					
ANR	3479651	AdditiveExpression	nl + 1		3479317	0		+			
ANR	3479652	Identifier	nl		3479317	0					
ANR	3479653	PrimaryExpression	1		3479317	1					
ANR	3479654	Argument	'\\n'		3479317	1					
ANR	3479655	PrimaryExpression	'\\n'		3479317	0					
ANR	3479656	CompoundStatement		46:30:1137:1137	3479317	1					
ANR	3479657	ExpressionStatement	"r_str_replace_char ( lbuf , ';' , '#' )"	730:4:16339:16374	3479317	0	True				
ANR	3479658	CallExpression	"r_str_replace_char ( lbuf , ';' , '#' )"		3479317	0					
ANR	3479659	Callee	r_str_replace_char		3479317	0					
ANR	3479660	Identifier	r_str_replace_char		3479317	0					
ANR	3479661	ArgumentList	lbuf		3479317	1					
ANR	3479662	Argument	lbuf		3479317	0					
ANR	3479663	Identifier	lbuf		3479317	0					
ANR	3479664	Argument	';'		3479317	1					
ANR	3479665	PrimaryExpression	';'		3479317	0					
ANR	3479666	Argument	'#'		3479317	2					
ANR	3479667	PrimaryExpression	'#'		3479317	0					
ANR	3479668	CompoundStatement		54:2:1336:1348	3479317	21					
ANR	3479669	IdentifierDeclStatement	char val [ 32 ] ;	737:2:16532:16544	3479317	0	True				
ANR	3479670	IdentifierDecl	val [ 32 ]		3479317	0					
ANR	3479671	IdentifierDeclType	char [ 32 ]		3479317	0					
ANR	3479672	Identifier	val		3479317	1					
ANR	3479673	PrimaryExpression	32		3479317	2					
ANR	3479674	Statement	snprintf	738:2:16548:16555	3479317	1	True				
ANR	3479675	Statement	(	738:11:16557:16557	3479317	2	True				
ANR	3479676	Statement	val	738:12:16558:16560	3479317	3	True				
ANR	3479677	Statement	","	738:15:16561:16561	3479317	4	True				
ANR	3479678	Statement	sizeof	738:17:16563:16568	3479317	5	True				
ANR	3479679	Statement	(	738:24:16570:16570	3479317	6	True				
ANR	3479680	Statement	val	738:25:16571:16573	3479317	7	True				
ANR	3479681	Statement	)	738:28:16574:16574	3479317	8	True				
ANR	3479682	Statement	","	738:29:16575:16575	3479317	9	True				
ANR	3479683	Statement	"""0x%"""	738:31:16577:16581	3479317	10	True				
ANR	3479684	Statement	PFMT64x	738:36:16582:16588	3479317	11	True				
ANR	3479685	Statement	","	738:43:16589:16589	3479317	12	True				
ANR	3479686	Statement	a	738:45:16591:16591	3479317	13	True				
ANR	3479687	Statement	->	738:46:16592:16593	3479317	14	True				
ANR	3479688	Statement	pc	738:48:16594:16595	3479317	15	True				
ANR	3479689	Statement	)	738:50:16596:16596	3479317	16	True				
ANR	3479690	ExpressionStatement		738:51:16597:16597	3479317	17	True				
ANR	3479691	ExpressionStatement	"lbuf = r_str_replace ( lbuf , ""$$"" , val , 1 )"	739:2:16601:16642	3479317	18	True				
ANR	3479692	AssignmentExpression	"lbuf = r_str_replace ( lbuf , ""$$"" , val , 1 )"		3479317	0		=			
ANR	3479693	Identifier	lbuf		3479317	0					
ANR	3479694	CallExpression	"r_str_replace ( lbuf , ""$$"" , val , 1 )"		3479317	1					
ANR	3479695	Callee	r_str_replace		3479317	0					
ANR	3479696	Identifier	r_str_replace		3479317	0					
ANR	3479697	ArgumentList	lbuf		3479317	1					
ANR	3479698	Argument	lbuf		3479317	0					
ANR	3479699	Identifier	lbuf		3479317	0					
ANR	3479700	Argument	"""$$"""		3479317	1					
ANR	3479701	PrimaryExpression	"""$$"""		3479317	0					
ANR	3479702	Argument	val		3479317	2					
ANR	3479703	Identifier	val		3479317	0					
ANR	3479704	Argument	1		3479317	3					
ANR	3479705	PrimaryExpression	1		3479317	0					
ANR	3479706	IfStatement	if ( a -> syscall )		3479317	22					
ANR	3479707	Condition	a -> syscall	741:5:16652:16661	3479317	0	True				
ANR	3479708	PtrMemberAccess	a -> syscall		3479317	0					
ANR	3479709	Identifier	a		3479317	0					
ANR	3479710	Identifier	syscall		3479317	1					
ANR	3479711	CompoundStatement		60:2:1488:1525	3479317	1					
ANR	3479712	IdentifierDeclStatement	char val [ 32 ] ;	742:2:16668:16680	3479317	0	True				
ANR	3479713	IdentifierDecl	val [ 32 ]		3479317	0					
ANR	3479714	IdentifierDeclType	char [ 32 ]		3479317	0					
ANR	3479715	Identifier	val		3479317	1					
ANR	3479716	PrimaryExpression	32		3479317	2					
ANR	3479717	IdentifierDeclStatement	"char * aa , * p = strstr ( lbuf , ""$sys."" ) ;"	743:2:16684:16721	3479317	1	True				
ANR	3479718	IdentifierDecl	* aa		3479317	0					
ANR	3479719	IdentifierDeclType	char *		3479317	0					
ANR	3479720	Identifier	aa		3479317	1					
ANR	3479721	IdentifierDecl	"* p = strstr ( lbuf , ""$sys."" )"		3479317	1					
ANR	3479722	IdentifierDeclType	char *		3479317	0					
ANR	3479723	Identifier	p		3479317	1					
ANR	3479724	AssignmentExpression	"* p = strstr ( lbuf , ""$sys."" )"		3479317	2		=			
ANR	3479725	Identifier	p		3479317	0					
ANR	3479726	CallExpression	"strstr ( lbuf , ""$sys."" )"		3479317	1					
ANR	3479727	Callee	strstr		3479317	0					
ANR	3479728	Identifier	strstr		3479317	0					
ANR	3479729	ArgumentList	lbuf		3479317	1					
ANR	3479730	Argument	lbuf		3479317	0					
ANR	3479731	Identifier	lbuf		3479317	0					
ANR	3479732	Argument	"""$sys."""		3479317	1					
ANR	3479733	PrimaryExpression	"""$sys."""		3479317	0					
ANR	3479734	WhileStatement	while ( p )		3479317	2					
ANR	3479735	Condition	p	744:9:16732:16732	3479317	0	True				
ANR	3479736	Identifier	p		3479317	0					
ANR	3479737	CompoundStatement		62:3:1544:1592	3479317	1					
ANR	3479738	IdentifierDeclStatement	"char * sp = ( char * ) r_str_closer_chr ( p , "" \\n\\r#"" ) ;"	745:3:16740:16788	3479317	0	True				
ANR	3479739	IdentifierDecl	"* sp = ( char * ) r_str_closer_chr ( p , "" \\n\\r#"" )"		3479317	0					
ANR	3479740	IdentifierDeclType	char *		3479317	0					
ANR	3479741	Identifier	sp		3479317	1					
ANR	3479742	AssignmentExpression	"* sp = ( char * ) r_str_closer_chr ( p , "" \\n\\r#"" )"		3479317	2		=			
ANR	3479743	Identifier	sp		3479317	0					
ANR	3479744	CastExpression	"( char * ) r_str_closer_chr ( p , "" \\n\\r#"" )"		3479317	1					
ANR	3479745	CastTarget	char *		3479317	0					
ANR	3479746	CallExpression	"r_str_closer_chr ( p , "" \\n\\r#"" )"		3479317	1					
ANR	3479747	Callee	r_str_closer_chr		3479317	0					
ANR	3479748	Identifier	r_str_closer_chr		3479317	0					
ANR	3479749	ArgumentList	p		3479317	1					
ANR	3479750	Argument	p		3479317	0					
ANR	3479751	Identifier	p		3479317	0					
ANR	3479752	Argument	""" \\n\\r#"""		3479317	1					
ANR	3479753	PrimaryExpression	""" \\n\\r#"""		3479317	0					
ANR	3479754	IfStatement	if ( sp )		3479317	1					
ANR	3479755	Condition	sp	746:7:16797:16798	3479317	0	True				
ANR	3479756	Identifier	sp		3479317	0					
ANR	3479757	CompoundStatement		64:4:1611:1625	3479317	1					
ANR	3479758	IdentifierDeclStatement	char osp = * sp ;	747:4:16807:16821	3479317	0	True				
ANR	3479759	IdentifierDecl	osp = * sp		3479317	0					
ANR	3479760	IdentifierDeclType	char		3479317	0					
ANR	3479761	Identifier	osp		3479317	1					
ANR	3479762	AssignmentExpression	osp = * sp		3479317	2		=			
ANR	3479763	Identifier	osp		3479317	0					
ANR	3479764	UnaryOperationExpression	* sp		3479317	1					
ANR	3479765	UnaryOperator	*		3479317	0					
ANR	3479766	Identifier	sp		3479317	1					
ANR	3479767	ExpressionStatement	* sp = 0	748:4:16827:16834	3479317	1	True				
ANR	3479768	AssignmentExpression	* sp = 0		3479317	0		=			
ANR	3479769	UnaryOperationExpression	* sp		3479317	0					
ANR	3479770	UnaryOperator	*		3479317	0					
ANR	3479771	Identifier	sp		3479317	1					
ANR	3479772	PrimaryExpression	0		3479317	1					
ANR	3479773	ExpressionStatement	aa = strdup ( p )	749:4:16840:16855	3479317	2	True				
ANR	3479774	AssignmentExpression	aa = strdup ( p )		3479317	0		=			
ANR	3479775	Identifier	aa		3479317	0					
ANR	3479776	CallExpression	strdup ( p )		3479317	1					
ANR	3479777	Callee	strdup		3479317	0					
ANR	3479778	Identifier	strdup		3479317	0					
ANR	3479779	ArgumentList	p		3479317	1					
ANR	3479780	Argument	p		3479317	0					
ANR	3479781	Identifier	p		3479317	0					
ANR	3479782	ExpressionStatement	* sp = osp	750:4:16861:16870	3479317	3	True				
ANR	3479783	AssignmentExpression	* sp = osp		3479317	0		=			
ANR	3479784	UnaryOperationExpression	* sp		3479317	0					
ANR	3479785	UnaryOperator	*		3479317	0					
ANR	3479786	Identifier	sp		3479317	1					
ANR	3479787	Identifier	osp		3479317	1					
ANR	3479788	ExpressionStatement	"num = r_syscall_get_num ( a -> syscall , aa + 5 )"	751:4:16876:16918	3479317	4	True				
ANR	3479789	AssignmentExpression	"num = r_syscall_get_num ( a -> syscall , aa + 5 )"		3479317	0		=			
ANR	3479790	Identifier	num		3479317	0					
ANR	3479791	CallExpression	"r_syscall_get_num ( a -> syscall , aa + 5 )"		3479317	1					
ANR	3479792	Callee	r_syscall_get_num		3479317	0					
ANR	3479793	Identifier	r_syscall_get_num		3479317	0					
ANR	3479794	ArgumentList	a -> syscall		3479317	1					
ANR	3479795	Argument	a -> syscall		3479317	0					
ANR	3479796	PtrMemberAccess	a -> syscall		3479317	0					
ANR	3479797	Identifier	a		3479317	0					
ANR	3479798	Identifier	syscall		3479317	1					
ANR	3479799	Argument	aa + 5		3479317	1					
ANR	3479800	AdditiveExpression	aa + 5		3479317	0		+			
ANR	3479801	Identifier	aa		3479317	0					
ANR	3479802	PrimaryExpression	5		3479317	1					
ANR	3479803	ExpressionStatement	"snprintf ( val , sizeof ( val ) , ""%d"" , num )"	752:4:16924:16963	3479317	5	True				
ANR	3479804	CallExpression	"snprintf ( val , sizeof ( val ) , ""%d"" , num )"		3479317	0					
ANR	3479805	Callee	snprintf		3479317	0					
ANR	3479806	Identifier	snprintf		3479317	0					
ANR	3479807	ArgumentList	val		3479317	1					
ANR	3479808	Argument	val		3479317	0					
ANR	3479809	Identifier	val		3479317	0					
ANR	3479810	Argument	sizeof ( val )		3479317	1					
ANR	3479811	SizeofExpression	sizeof ( val )		3479317	0					
ANR	3479812	Sizeof	sizeof		3479317	0					
ANR	3479813	SizeofOperand	val		3479317	1					
ANR	3479814	Argument	"""%d"""		3479317	2					
ANR	3479815	PrimaryExpression	"""%d"""		3479317	0					
ANR	3479816	Argument	num		3479317	3					
ANR	3479817	Identifier	num		3479317	0					
ANR	3479818	ExpressionStatement	"lbuf = r_str_replace ( lbuf , aa , val , 1 )"	753:4:16969:17008	3479317	6	True				
ANR	3479819	AssignmentExpression	"lbuf = r_str_replace ( lbuf , aa , val , 1 )"		3479317	0		=			
ANR	3479820	Identifier	lbuf		3479317	0					
ANR	3479821	CallExpression	"r_str_replace ( lbuf , aa , val , 1 )"		3479317	1					
ANR	3479822	Callee	r_str_replace		3479317	0					
ANR	3479823	Identifier	r_str_replace		3479317	0					
ANR	3479824	ArgumentList	lbuf		3479317	1					
ANR	3479825	Argument	lbuf		3479317	0					
ANR	3479826	Identifier	lbuf		3479317	0					
ANR	3479827	Argument	aa		3479317	1					
ANR	3479828	Identifier	aa		3479317	0					
ANR	3479829	Argument	val		3479317	2					
ANR	3479830	Identifier	val		3479317	0					
ANR	3479831	Argument	1		3479317	3					
ANR	3479832	PrimaryExpression	1		3479317	0					
ANR	3479833	ExpressionStatement	free ( aa )	754:4:17014:17023	3479317	7	True				
ANR	3479834	CallExpression	free ( aa )		3479317	0					
ANR	3479835	Callee	free		3479317	0					
ANR	3479836	Identifier	free		3479317	0					
ANR	3479837	ArgumentList	aa		3479317	1					
ANR	3479838	Argument	aa		3479317	0					
ANR	3479839	Identifier	aa		3479317	0					
ANR	3479840	ExpressionStatement	"p = strstr ( p + 5 , ""$sys."" )"	756:3:17033:17060	3479317	2	True				
ANR	3479841	AssignmentExpression	"p = strstr ( p + 5 , ""$sys."" )"		3479317	0		=			
ANR	3479842	Identifier	p		3479317	0					
ANR	3479843	CallExpression	"strstr ( p + 5 , ""$sys."" )"		3479317	1					
ANR	3479844	Callee	strstr		3479317	0					
ANR	3479845	Identifier	strstr		3479317	0					
ANR	3479846	ArgumentList	p + 5		3479317	1					
ANR	3479847	Argument	p + 5		3479317	0					
ANR	3479848	AdditiveExpression	p + 5		3479317	0		+			
ANR	3479849	Identifier	p		3479317	0					
ANR	3479850	PrimaryExpression	5		3479317	1					
ANR	3479851	Argument	"""$sys."""		3479317	1					
ANR	3479852	PrimaryExpression	"""$sys."""		3479317	0					
ANR	3479853	IdentifierDeclStatement	"bool labels = ! ! strchr ( lbuf , ':' ) ;"	759:1:17070:17104	3479317	23	True				
ANR	3479854	IdentifierDecl	"labels = ! ! strchr ( lbuf , ':' )"		3479317	0					
ANR	3479855	IdentifierDeclType	bool		3479317	0					
ANR	3479856	Identifier	labels		3479317	1					
ANR	3479857	AssignmentExpression	"labels = ! ! strchr ( lbuf , ':' )"		3479317	2		=			
ANR	3479858	Identifier	labels		3479317	0					
ANR	3479859	UnaryOperationExpression	"! ! strchr ( lbuf , ':' )"		3479317	1					
ANR	3479860	UnaryOperator	!		3479317	0					
ANR	3479861	UnaryOperationExpression	"! strchr ( lbuf , ':' )"		3479317	1					
ANR	3479862	UnaryOperator	!		3479317	0					
ANR	3479863	CallExpression	"strchr ( lbuf , ':' )"		3479317	1					
ANR	3479864	Callee	strchr		3479317	0					
ANR	3479865	Identifier	strchr		3479317	0					
ANR	3479866	ArgumentList	lbuf		3479317	1					
ANR	3479867	Argument	lbuf		3479317	0					
ANR	3479868	Identifier	lbuf		3479317	0					
ANR	3479869	Argument	':'		3479317	1					
ANR	3479870	PrimaryExpression	':'		3479317	0					
ANR	3479871	ForStatement	"for ( tokens [ 0 ] = lbuf , ctr = 0 ; ( ( ptr = strchr ( tokens [ ctr ] , ';' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\n' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\r' ) ) ) ; )"		3479317	24					
ANR	3479872	ForInit	"tokens [ 0 ] = lbuf , ctr = 0 ;"	762:6:17129:17154	3479317	0	True				
ANR	3479873	Expression	"tokens [ 0 ] = lbuf , ctr = 0"		3479317	0					
ANR	3479874	AssignmentExpression	tokens [ 0 ] = lbuf		3479317	0		=			
ANR	3479875	ArrayIndexing	tokens [ 0 ]		3479317	0					
ANR	3479876	Identifier	tokens		3479317	0					
ANR	3479877	PrimaryExpression	0		3479317	1					
ANR	3479878	Identifier	lbuf		3479317	1					
ANR	3479879	AssignmentExpression	ctr = 0		3479317	1		=			
ANR	3479880	Identifier	ctr		3479317	0					
ANR	3479881	PrimaryExpression	0		3479317	1					
ANR	3479882	Condition	"( ptr = strchr ( tokens [ ctr ] , ';' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\n' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\r' ) )"	763:3:17159:17275	3479317	1	True				
ANR	3479883	OrExpression	"( ptr = strchr ( tokens [ ctr ] , ';' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\n' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\r' ) )"		3479317	0		||			
ANR	3479884	AssignmentExpression	"ptr = strchr ( tokens [ ctr ] , ';' )"		3479317	0		=			
ANR	3479885	Identifier	ptr		3479317	0					
ANR	3479886	CallExpression	"strchr ( tokens [ ctr ] , ';' )"		3479317	1					
ANR	3479887	Callee	strchr		3479317	0					
ANR	3479888	Identifier	strchr		3479317	0					
ANR	3479889	ArgumentList	tokens [ ctr ]		3479317	1					
ANR	3479890	Argument	tokens [ ctr ]		3479317	0					
ANR	3479891	ArrayIndexing	tokens [ ctr ]		3479317	0					
ANR	3479892	Identifier	tokens		3479317	0					
ANR	3479893	Identifier	ctr		3479317	1					
ANR	3479894	Argument	';'		3479317	1					
ANR	3479895	PrimaryExpression	';'		3479317	0					
ANR	3479896	OrExpression	"( ptr = strchr ( tokens [ ctr ] , '\\n' ) ) || ( ptr = strchr ( tokens [ ctr ] , '\\r' ) )"		3479317	1		||			
ANR	3479897	AssignmentExpression	"ptr = strchr ( tokens [ ctr ] , '\\n' )"		3479317	0		=			
ANR	3479898	Identifier	ptr		3479317	0					
ANR	3479899	CallExpression	"strchr ( tokens [ ctr ] , '\\n' )"		3479317	1					
ANR	3479900	Callee	strchr		3479317	0					
ANR	3479901	Identifier	strchr		3479317	0					
ANR	3479902	ArgumentList	tokens [ ctr ]		3479317	1					
ANR	3479903	Argument	tokens [ ctr ]		3479317	0					
ANR	3479904	ArrayIndexing	tokens [ ctr ]		3479317	0					
ANR	3479905	Identifier	tokens		3479317	0					
ANR	3479906	Identifier	ctr		3479317	1					
ANR	3479907	Argument	'\\n'		3479317	1					
ANR	3479908	PrimaryExpression	'\\n'		3479317	0					
ANR	3479909	AssignmentExpression	"ptr = strchr ( tokens [ ctr ] , '\\r' )"		3479317	1		=			
ANR	3479910	Identifier	ptr		3479317	0					
ANR	3479911	CallExpression	"strchr ( tokens [ ctr ] , '\\r' )"		3479317	1					
ANR	3479912	Callee	strchr		3479317	0					
ANR	3479913	Identifier	strchr		3479317	0					
ANR	3479914	ArgumentList	tokens [ ctr ]		3479317	1					
ANR	3479915	Argument	tokens [ ctr ]		3479317	0					
ANR	3479916	ArrayIndexing	tokens [ ctr ]		3479317	0					
ANR	3479917	Identifier	tokens		3479317	0					
ANR	3479918	Identifier	ctr		3479317	1					
ANR	3479919	Argument	'\\r'		3479317	1					
ANR	3479920	PrimaryExpression	'\\r'		3479317	0					
ANR	3479921	CompoundStatement		82:41:2083:2083	3479317	2					
ANR	3479922	ExpressionStatement	ctr ++	766:2:17283:17288	3479317	0	True				
ANR	3479923	PostIncDecOperationExpression	ctr ++		3479317	0					
ANR	3479924	Identifier	ctr		3479317	0					
ANR	3479925	IncDec	++		3479317	1					
ANR	3479926	IfStatement	if ( ctr >= tokens_size )		3479317	1					
ANR	3479927	Condition	ctr >= tokens_size	767:6:17296:17313	3479317	0	True				
ANR	3479928	RelationalExpression	ctr >= tokens_size		3479317	0		>=			
ANR	3479929	Identifier	ctr		3479317	0					
ANR	3479930	Identifier	tokens_size		3479317	1					
ANR	3479931	CompoundStatement		86:3:2173:2243	3479317	1					
ANR	3479932	IdentifierDeclStatement	const int new_tokens_size = tokens_size * 2 ;	768:3:17321:17364	3479317	0	True				
ANR	3479933	IdentifierDecl	new_tokens_size = tokens_size * 2		3479317	0					
ANR	3479934	IdentifierDeclType	const int		3479317	0					
ANR	3479935	Identifier	new_tokens_size		3479317	1					
ANR	3479936	AssignmentExpression	new_tokens_size = tokens_size * 2		3479317	2		=			
ANR	3479937	Identifier	new_tokens_size		3479317	0					
ANR	3479938	MultiplicativeExpression	tokens_size * 2		3479317	1		*			
ANR	3479939	Identifier	tokens_size		3479317	0					
ANR	3479940	PrimaryExpression	2		3479317	1					
ANR	3479941	IdentifierDeclStatement	"char * * new_tokens = realloc ( tokens , sizeof ( char * ) * new_tokens_size ) ;"	769:3:17369:17439	3479317	1	True				
ANR	3479942	IdentifierDecl	"* * new_tokens = realloc ( tokens , sizeof ( char * ) * new_tokens_size )"		3479317	0					
ANR	3479943	IdentifierDeclType	char * *		3479317	0					
ANR	3479944	Identifier	new_tokens		3479317	1					
ANR	3479945	AssignmentExpression	"* * new_tokens = realloc ( tokens , sizeof ( char * ) * new_tokens_size )"		3479317	2		=			
ANR	3479946	Identifier	new_tokens		3479317	0					
ANR	3479947	CallExpression	"realloc ( tokens , sizeof ( char * ) * new_tokens_size )"		3479317	1					
ANR	3479948	Callee	realloc		3479317	0					
ANR	3479949	Identifier	realloc		3479317	0					
ANR	3479950	ArgumentList	tokens		3479317	1					
ANR	3479951	Argument	tokens		3479317	0					
ANR	3479952	Identifier	tokens		3479317	0					
ANR	3479953	Argument	sizeof ( char * ) * new_tokens_size		3479317	1					
ANR	3479954	MultiplicativeExpression	sizeof ( char * ) * new_tokens_size		3479317	0		*			
ANR	3479955	SizeofExpression	sizeof ( char * )		3479317	0					
ANR	3479956	Sizeof	sizeof		3479317	0					
ANR	3479957	SizeofOperand	char *		3479317	1					
ANR	3479958	Identifier	new_tokens_size		3479317	1					
ANR	3479959	IfStatement	if ( new_tokens )		3479317	2					
ANR	3479960	Condition	new_tokens	770:7:17448:17457	3479317	0	True				
ANR	3479961	Identifier	new_tokens		3479317	0					
ANR	3479962	CompoundStatement		87:19:2264:2264	3479317	1					
ANR	3479963	ExpressionStatement	tokens_size = new_tokens_size	771:4:17466:17495	3479317	0	True				
ANR	3479964	AssignmentExpression	tokens_size = new_tokens_size		3479317	0		=			
ANR	3479965	Identifier	tokens_size		3479317	0					
ANR	3479966	Identifier	new_tokens_size		3479317	1					
ANR	3479967	ExpressionStatement	tokens = new_tokens	772:4:17501:17520	3479317	1	True				
ANR	3479968	AssignmentExpression	tokens = new_tokens		3479317	0		=			
ANR	3479969	Identifier	tokens		3479317	0					
ANR	3479970	Identifier	new_tokens		3479317	1					
ANR	3479971	ExpressionStatement	* ptr = '\\0'	775:2:17533:17544	3479317	2	True				
ANR	3479972	AssignmentExpression	* ptr = '\\0'		3479317	0		=			
ANR	3479973	UnaryOperationExpression	* ptr		3479317	0					
ANR	3479974	UnaryOperator	*		3479317	0					
ANR	3479975	Identifier	ptr		3479317	1					
ANR	3479976	PrimaryExpression	'\\0'		3479317	1					
ANR	3479977	ExpressionStatement	tokens [ ctr ] = ptr + 1	776:2:17548:17569	3479317	3	True				
ANR	3479978	AssignmentExpression	tokens [ ctr ] = ptr + 1		3479317	0		=			
ANR	3479979	ArrayIndexing	tokens [ ctr ]		3479317	0					
ANR	3479980	Identifier	tokens		3479317	0					
ANR	3479981	Identifier	ctr		3479317	1					
ANR	3479982	AdditiveExpression	ptr + 1		3479317	1		+			
ANR	3479983	Identifier	ptr		3479317	0					
ANR	3479984	PrimaryExpression	1		3479317	1					
ANR	3479985	Statement	define	779:1:17576:17581	3479317	25	True				
ANR	3479986	Statement	isavrseparator	779:8:17583:17596	3479317	26	True				
ANR	3479987	Statement	(	779:22:17597:17597	3479317	27	True				
ANR	3479988	Statement	x	779:23:17598:17598	3479317	28	True				
ANR	3479989	Statement	)	779:24:17599:17599	3479317	29	True				
ANR	3479990	Statement	(	779:26:17601:17601	3479317	30	True				
ANR	3479991	Statement	(	779:27:17602:17602	3479317	31	True				
ANR	3479992	Statement	x	779:28:17603:17603	3479317	32	True				
ANR	3479993	Statement	)	779:29:17604:17604	3479317	33	True				
ANR	3479994	Statement	==	779:30:17605:17606	3479317	34	True				
ANR	3479995	Statement	' '	779:32:17607:17609	3479317	35	True				
ANR	3479996	Statement	||	779:35:17610:17611	3479317	36	True				
ANR	3479997	Statement	(	779:37:17612:17612	3479317	37	True				
ANR	3479998	Statement	x	779:38:17613:17613	3479317	38	True				
ANR	3479999	Statement	)	779:39:17614:17614	3479317	39	True				
ANR	3480000	Statement	==	779:40:17615:17616	3479317	40	True				
ANR	3480001	Statement	'\\t'	779:42:17617:17620	3479317	41	True				
ANR	3480002	Statement	||	779:46:17621:17622	3479317	42	True				
ANR	3480003	Statement	(	779:48:17623:17623	3479317	43	True				
ANR	3480004	Statement	x	779:49:17624:17624	3479317	44	True				
ANR	3480005	Statement	)	779:50:17625:17625	3479317	45	True				
ANR	3480006	Statement	==	779:51:17626:17627	3479317	46	True				
ANR	3480007	Statement	'\\n'	779:53:17628:17631	3479317	47	True				
ANR	3480008	Statement	||	779:57:17632:17633	3479317	48	True				
ANR	3480009	Statement	(	779:59:17634:17634	3479317	49	True				
ANR	3480010	Statement	x	779:60:17635:17635	3479317	50	True				
ANR	3480011	Statement	)	779:61:17636:17636	3479317	51	True				
ANR	3480012	Statement	==	779:62:17637:17638	3479317	52	True				
ANR	3480013	Statement	'\\r'	779:64:17639:17642	3479317	53	True				
ANR	3480014	Statement	||	779:68:17643:17644	3479317	54	True				
ANR	3480015	Statement	(	779:70:17645:17645	3479317	55	True				
ANR	3480016	Statement	x	779:71:17646:17646	3479317	56	True				
ANR	3480017	Statement	)	779:72:17647:17647	3479317	57	True				
ANR	3480018	Statement	==	779:73:17648:17649	3479317	58	True				
ANR	3480019	Statement	' '	779:75:17650:17652	3479317	59	True				
ANR	3480020	Statement	||	779:78:17653:17654	3479317	60	True				
ANR	3480021	Statement	(	780:2:17660:17660	3479317	61	True				
ANR	3480022	Statement	x	780:3:17661:17661	3479317	62	True				
ANR	3480023	Statement	)	780:4:17662:17662	3479317	63	True				
ANR	3480024	Statement	==	780:5:17663:17664	3479317	64	True				
ANR	3480025	Statement	"','"	780:7:17665:17667	3479317	65	True				
ANR	3480026	Statement	||	780:10:17668:17669	3479317	66	True				
ANR	3480027	Statement	(	780:12:17670:17670	3479317	67	True				
ANR	3480028	Statement	x	780:13:17671:17671	3479317	68	True				
ANR	3480029	Statement	)	780:14:17672:17672	3479317	69	True				
ANR	3480030	Statement	==	780:15:17673:17674	3479317	70	True				
ANR	3480031	Statement	';'	780:17:17675:17677	3479317	71	True				
ANR	3480032	Statement	||	780:20:17678:17679	3479317	72	True				
ANR	3480033	Statement	(	780:22:17680:17680	3479317	73	True				
ANR	3480034	Statement	x	780:23:17681:17681	3479317	74	True				
ANR	3480035	Statement	)	780:24:17682:17682	3479317	75	True				
ANR	3480036	Statement	==	780:25:17683:17684	3479317	76	True				
ANR	3480037	Statement	'['	780:27:17685:17687	3479317	77	True				
ANR	3480038	Statement	||	780:30:17688:17689	3479317	78	True				
ANR	3480039	Statement	(	780:32:17690:17690	3479317	79	True				
ANR	3480040	Statement	x	780:33:17691:17691	3479317	80	True				
ANR	3480041	Statement	)	780:34:17692:17692	3479317	81	True				
ANR	3480042	Statement	==	780:35:17693:17694	3479317	82	True				
ANR	3480043	Statement	']'	780:37:17695:17697	3479317	83	True				
ANR	3480044	Statement	||	780:40:17698:17699	3479317	84	True				
ANR	3480045	Statement	(	781:2:17705:17705	3479317	85	True				
ANR	3480046	Statement	x	781:3:17706:17706	3479317	86	True				
ANR	3480047	Statement	)	781:4:17707:17707	3479317	87	True				
ANR	3480048	Statement	==	781:5:17708:17709	3479317	88	True				
ANR	3480049	Statement	'('	781:7:17710:17712	3479317	89	True				
ANR	3480050	Statement	||	781:10:17713:17714	3479317	90	True				
ANR	3480051	Statement	(	781:12:17715:17715	3479317	91	True				
ANR	3480052	Statement	x	781:13:17716:17716	3479317	92	True				
ANR	3480053	Statement	)	781:14:17717:17717	3479317	93	True				
ANR	3480054	Statement	==	781:15:17718:17719	3479317	94	True				
ANR	3480055	Statement	')'	781:17:17720:17722	3479317	95	True				
ANR	3480056	Statement	||	781:20:17723:17724	3479317	96	True				
ANR	3480057	Statement	(	781:22:17725:17725	3479317	97	True				
ANR	3480058	Statement	x	781:23:17726:17726	3479317	98	True				
ANR	3480059	Statement	)	781:24:17727:17727	3479317	99	True				
ANR	3480060	Statement	==	781:25:17728:17729	3479317	100	True				
ANR	3480061	Statement	'{'	781:27:17730:17732	3479317	101	True				
ANR	3480062	Statement	||	781:30:17733:17734	3479317	102	True				
ANR	3480063	Statement	(	781:32:17735:17735	3479317	103	True				
ANR	3480064	Statement	x	781:33:17736:17736	3479317	104	True				
ANR	3480065	Statement	)	781:34:17737:17737	3479317	105	True				
ANR	3480066	Statement	==	781:35:17738:17739	3479317	106	True				
ANR	3480067	Statement	'}'	781:37:17740:17742	3479317	107	True				
ANR	3480068	Statement	)	781:40:17743:17743	3479317	108	True				
ANR	3480069	Statement	define	786:1:17868:17873	3479317	109	True				
ANR	3480070	Statement	STAGES	786:8:17875:17880	3479317	110	True				
ANR	3480071	Statement	5	786:15:17882:17882	3479317	111	True				
ANR	3480072	ExpressionStatement	pc = a -> pc	787:1:17885:17895	3479317	112	True				
ANR	3480073	AssignmentExpression	pc = a -> pc		3479317	0		=			
ANR	3480074	Identifier	pc		3479317	0					
ANR	3480075	PtrMemberAccess	a -> pc		3479317	1					
ANR	3480076	Identifier	a		3479317	0					
ANR	3480077	Identifier	pc		3479317	1					
ANR	3480078	IdentifierDeclStatement	bool inComment = false ;	788:1:17898:17920	3479317	113	True				
ANR	3480079	IdentifierDecl	inComment = false		3479317	0					
ANR	3480080	IdentifierDeclType	bool		3479317	0					
ANR	3480081	Identifier	inComment		3479317	1					
ANR	3480082	AssignmentExpression	inComment = false		3479317	2		=			
ANR	3480083	Identifier	false		3479317	0					
ANR	3480084	Identifier	false		3479317	1					
ANR	3480085	ForStatement	for ( stage = 0 ; stage < STAGES ; stage ++ )		3479317	114					
ANR	3480086	ForInit	stage = 0 ;	789:6:17928:17937	3479317	0	True				
ANR	3480087	AssignmentExpression	stage = 0		3479317	0		=			
ANR	3480088	Identifier	stage		3479317	0					
ANR	3480089	PrimaryExpression	0		3479317	1					
ANR	3480090	Condition	stage < STAGES	789:17:17939:17952	3479317	1	True				
ANR	3480091	RelationalExpression	stage < STAGES		3479317	0		<			
ANR	3480092	Identifier	stage		3479317	0					
ANR	3480093	Identifier	STAGES		3479317	1					
ANR	3480094	PostIncDecOperationExpression	stage ++	789:33:17955:17961	3479317	2	True				
ANR	3480095	Identifier	stage		3479317	0					
ANR	3480096	IncDec	++		3479317	1					
ANR	3480097	CompoundStatement		106:42:2768:2768	3479317	3					
ANR	3480098	IfStatement	if ( stage < 2 && ! labels )		3479317	0					
ANR	3480099	Condition	stage < 2 && ! labels	790:6:17972:17991	3479317	0	True				
ANR	3480100	AndExpression	stage < 2 && ! labels		3479317	0		&&			
ANR	3480101	RelationalExpression	stage < 2		3479317	0		<			
ANR	3480102	Identifier	stage		3479317	0					
ANR	3480103	PrimaryExpression	2		3479317	1					
ANR	3480104	UnaryOperationExpression	! labels		3479317	1					
ANR	3480105	UnaryOperator	!		3479317	0					
ANR	3480106	Identifier	labels		3479317	1					
ANR	3480107	CompoundStatement		107:28:2798:2798	3479317	1					
ANR	3480108	ContinueStatement	continue ;	791:3:17999:18007	3479317	0	True				
ANR	3480109	ExpressionStatement	inComment = false	793:2:18015:18032	3479317	1	True				
ANR	3480110	AssignmentExpression	inComment = false		3479317	0		=			
ANR	3480111	Identifier	inComment		3479317	0					
ANR	3480112	Identifier	false		3479317	1					
ANR	3480113	ExpressionStatement	"r_asm_set_pc ( a , pc )"	794:2:18036:18056	3479317	2	True				
ANR	3480114	CallExpression	"r_asm_set_pc ( a , pc )"		3479317	0					
ANR	3480115	Callee	r_asm_set_pc		3479317	0					
ANR	3480116	Identifier	r_asm_set_pc		3479317	0					
ANR	3480117	ArgumentList	a		3479317	1					
ANR	3480118	Argument	a		3479317	0					
ANR	3480119	Identifier	a		3479317	0					
ANR	3480120	Argument	pc		3479317	1					
ANR	3480121	Identifier	pc		3479317	0					
ANR	3480122	ForStatement	"for ( idx = ret = i = j = 0 , off = a -> pc ; i <= ctr ; i ++ , idx += ret )"		3479317	3					
ANR	3480123	ForInit	"idx = ret = i = j = 0 , off = a -> pc ;"	795:7:18065:18099	3479317	0	True				
ANR	3480124	Expression	"idx = ret = i = j = 0 , off = a -> pc"		3479317	0					
ANR	3480125	AssignmentExpression	idx = ret = i = j = 0		3479317	0		=			
ANR	3480126	Identifier	idx		3479317	0					
ANR	3480127	AssignmentExpression	ret = i = j = 0		3479317	1		=			
ANR	3480128	Identifier	ret		3479317	0					
ANR	3480129	AssignmentExpression	i = j = 0		3479317	1		=			
ANR	3480130	Identifier	i		3479317	0					
ANR	3480131	AssignmentExpression	j = 0		3479317	1		=			
ANR	3480132	Identifier	j		3479317	0					
ANR	3480133	PrimaryExpression	0		3479317	1					
ANR	3480134	AssignmentExpression	off = a -> pc		3479317	1		=			
ANR	3480135	Identifier	off		3479317	0					
ANR	3480136	PtrMemberAccess	a -> pc		3479317	1					
ANR	3480137	Identifier	a		3479317	0					
ANR	3480138	Identifier	pc		3479317	1					
ANR	3480139	Condition	i <= ctr	795:43:18101:18108	3479317	1	True				
ANR	3480140	RelationalExpression	i <= ctr		3479317	0		<=			
ANR	3480141	Identifier	i		3479317	0					
ANR	3480142	Identifier	ctr		3479317	1					
ANR	3480143	Expression	"i ++ , idx += ret"	795:53:18111:18125	3479317	2	True				
ANR	3480144	PostIncDecOperationExpression	i ++		3479317	0					
ANR	3480145	Identifier	i		3479317	0					
ANR	3480146	IncDec	++		3479317	1					
ANR	3480147	AssignmentExpression	idx += ret		3479317	1		+=			
ANR	3480148	Identifier	idx		3479317	0					
ANR	3480149	Identifier	ret		3479317	1					
ANR	3480150	CompoundStatement		112:70:2932:2932	3479317	3					
ANR	3480151	ExpressionStatement	buf_token = tokens [ i ]	796:3:18133:18154	3479317	0	True				
ANR	3480152	AssignmentExpression	buf_token = tokens [ i ]		3479317	0		=			
ANR	3480153	Identifier	buf_token		3479317	0					
ANR	3480154	ArrayIndexing	tokens [ i ]		3479317	1					
ANR	3480155	Identifier	tokens		3479317	0					
ANR	3480156	Identifier	i		3479317	1					
ANR	3480157	IfStatement	if ( ! buf_token )		3479317	1					
ANR	3480158	Condition	! buf_token	797:7:18163:18172	3479317	0	True				
ANR	3480159	UnaryOperationExpression	! buf_token		3479317	0					
ANR	3480160	UnaryOperator	!		3479317	0					
ANR	3480161	Identifier	buf_token		3479317	1					
ANR	3480162	CompoundStatement		114:19:2979:2979	3479317	1					
ANR	3480163	ContinueStatement	continue ;	798:4:18181:18189	3479317	0	True				
ANR	3480164	IfStatement	if ( inComment )		3479317	2					
ANR	3480165	Condition	inComment	800:7:18203:18211	3479317	0	True				
ANR	3480166	Identifier	inComment		3479317	0					
ANR	3480167	CompoundStatement		117:18:3018:3018	3479317	1					
ANR	3480168	IfStatement	"if ( ! strncmp ( ptr_start , ""*/"" , 2 ) )"		3479317	0					
ANR	3480169	Condition	"! strncmp ( ptr_start , ""*/"" , 2 )"	801:8:18224:18252	3479317	0	True				
ANR	3480170	UnaryOperationExpression	"! strncmp ( ptr_start , ""*/"" , 2 )"		3479317	0					
ANR	3480171	UnaryOperator	!		3479317	0					
ANR	3480172	CallExpression	"strncmp ( ptr_start , ""*/"" , 2 )"		3479317	1					
ANR	3480173	Callee	strncmp		3479317	0					
ANR	3480174	Identifier	strncmp		3479317	0					
ANR	3480175	ArgumentList	ptr_start		3479317	1					
ANR	3480176	Argument	ptr_start		3479317	0					
ANR	3480177	Identifier	ptr_start		3479317	0					
ANR	3480178	Argument	"""*/"""		3479317	1					
ANR	3480179	PrimaryExpression	"""*/"""		3479317	0					
ANR	3480180	Argument	2		3479317	2					
ANR	3480181	PrimaryExpression	2		3479317	0					
ANR	3480182	CompoundStatement		118:39:3059:3059	3479317	1					
ANR	3480183	ExpressionStatement	inComment = false	802:5:18262:18279	3479317	0	True				
ANR	3480184	AssignmentExpression	inComment = false		3479317	0		=			
ANR	3480185	Identifier	inComment		3479317	0					
ANR	3480186	Identifier	false		3479317	1					
ANR	3480187	ContinueStatement	continue ;	804:4:18291:18299	3479317	1	True				
ANR	3480188	IfStatement	"if ( ! strncmp ( a -> cur -> arch , ""avr"" , 3 ) )"		3479317	3					
ANR	3480189	Condition	"! strncmp ( a -> cur -> arch , ""avr"" , 3 )"	807:7:18355:18387	3479317	0	True				
ANR	3480190	UnaryOperationExpression	"! strncmp ( a -> cur -> arch , ""avr"" , 3 )"		3479317	0					
ANR	3480191	UnaryOperator	!		3479317	0					
ANR	3480192	CallExpression	"strncmp ( a -> cur -> arch , ""avr"" , 3 )"		3479317	1					
ANR	3480193	Callee	strncmp		3479317	0					
ANR	3480194	Identifier	strncmp		3479317	0					
ANR	3480195	ArgumentList	a -> cur -> arch		3479317	1					
ANR	3480196	Argument	a -> cur -> arch		3479317	0					
ANR	3480197	PtrMemberAccess	a -> cur -> arch		3479317	0					
ANR	3480198	PtrMemberAccess	a -> cur		3479317	0					
ANR	3480199	Identifier	a		3479317	0					
ANR	3480200	Identifier	cur		3479317	1					
ANR	3480201	Identifier	arch		3479317	1					
ANR	3480202	Argument	"""avr"""		3479317	1					
ANR	3480203	PrimaryExpression	"""avr"""		3479317	0					
ANR	3480204	Argument	3		3479317	2					
ANR	3480205	PrimaryExpression	3		3479317	0					
ANR	3480206	CompoundStatement		124:42:3194:3194	3479317	1					
ANR	3480207	ForStatement	for ( ptr_start = buf_token ; * ptr_start && isavrseparator ( * ptr_start ) ; ptr_start ++ )		3479317	0					
ANR	3480208	ForInit	ptr_start = buf_token ;	808:9:18401:18422	3479317	0	True				
ANR	3480209	AssignmentExpression	ptr_start = buf_token		3479317	0		=			
ANR	3480210	Identifier	ptr_start		3479317	0					
ANR	3480211	Identifier	buf_token		3479317	1					
ANR	3480212	Condition	* ptr_start && isavrseparator ( * ptr_start )	808:32:18424:18464	3479317	1	True				
ANR	3480213	AndExpression	* ptr_start && isavrseparator ( * ptr_start )		3479317	0		&&			
ANR	3480214	UnaryOperationExpression	* ptr_start		3479317	0					
ANR	3480215	UnaryOperator	*		3479317	0					
ANR	3480216	Identifier	ptr_start		3479317	1					
ANR	3480217	CallExpression	isavrseparator ( * ptr_start )		3479317	1					
ANR	3480218	Callee	isavrseparator		3479317	0					
ANR	3480219	Identifier	isavrseparator		3479317	0					
ANR	3480220	ArgumentList	* ptr_start		3479317	1					
ANR	3480221	Argument	* ptr_start		3479317	0					
ANR	3480222	UnaryOperationExpression	* ptr_start		3479317	0					
ANR	3480223	UnaryOperator	*		3479317	0					
ANR	3480224	Identifier	ptr_start		3479317	1					
ANR	3480225	PostIncDecOperationExpression	ptr_start ++	808:75:18467:18477	3479317	2	True				
ANR	3480226	Identifier	ptr_start		3479317	0					
ANR	3480227	IncDec	++		3479317	1					
ANR	3480228	ExpressionStatement		808:87:18479:18479	3479317	3	True				
ANR	3480229	ElseStatement	else		3479317	0					
ANR	3480230	CompoundStatement		126:10:3295:3295	3479317	0					
ANR	3480231	ForStatement	for ( ptr_start = buf_token ; * ptr_start && IS_SEPARATOR ( * ptr_start ) ; ptr_start ++ )		3479317	0					
ANR	3480232	ForInit	ptr_start = buf_token ;	810:9:18502:18523	3479317	0	True				
ANR	3480233	AssignmentExpression	ptr_start = buf_token		3479317	0		=			
ANR	3480234	Identifier	ptr_start		3479317	0					
ANR	3480235	Identifier	buf_token		3479317	1					
ANR	3480236	Condition	* ptr_start && IS_SEPARATOR ( * ptr_start )	810:32:18525:18563	3479317	1	True				
ANR	3480237	AndExpression	* ptr_start && IS_SEPARATOR ( * ptr_start )		3479317	0		&&			
ANR	3480238	UnaryOperationExpression	* ptr_start		3479317	0					
ANR	3480239	UnaryOperator	*		3479317	0					
ANR	3480240	Identifier	ptr_start		3479317	1					
ANR	3480241	CallExpression	IS_SEPARATOR ( * ptr_start )		3479317	1					
ANR	3480242	Callee	IS_SEPARATOR		3479317	0					
ANR	3480243	Identifier	IS_SEPARATOR		3479317	0					
ANR	3480244	ArgumentList	* ptr_start		3479317	1					
ANR	3480245	Argument	* ptr_start		3479317	0					
ANR	3480246	UnaryOperationExpression	* ptr_start		3479317	0					
ANR	3480247	UnaryOperator	*		3479317	0					
ANR	3480248	Identifier	ptr_start		3479317	1					
ANR	3480249	PostIncDecOperationExpression	ptr_start ++	810:73:18566:18576	3479317	2	True				
ANR	3480250	Identifier	ptr_start		3479317	0					
ANR	3480251	IncDec	++		3479317	1					
ANR	3480252	ExpressionStatement		810:85:18578:18578	3479317	3	True				
ANR	3480253	IfStatement	"if ( ! strncmp ( ptr_start , ""/*"" , 2 ) )"		3479317	4					
ANR	3480254	Condition	"! strncmp ( ptr_start , ""/*"" , 2 )"	812:7:18592:18620	3479317	0	True				
ANR	3480255	UnaryOperationExpression	"! strncmp ( ptr_start , ""/*"" , 2 )"		3479317	0					
ANR	3480256	UnaryOperator	!		3479317	0					
ANR	3480257	CallExpression	"strncmp ( ptr_start , ""/*"" , 2 )"		3479317	1					
ANR	3480258	Callee	strncmp		3479317	0					
ANR	3480259	Identifier	strncmp		3479317	0					
ANR	3480260	ArgumentList	ptr_start		3479317	1					
ANR	3480261	Argument	ptr_start		3479317	0					
ANR	3480262	Identifier	ptr_start		3479317	0					
ANR	3480263	Argument	"""/*"""		3479317	1					
ANR	3480264	PrimaryExpression	"""/*"""		3479317	0					
ANR	3480265	Argument	2		3479317	2					
ANR	3480266	PrimaryExpression	2		3479317	0					
ANR	3480267	CompoundStatement		129:38:3427:3427	3479317	1					
ANR	3480268	IfStatement	"if ( ! strstr ( ptr_start + 2 , ""*/"" ) )"		3479317	0					
ANR	3480269	Condition	"! strstr ( ptr_start + 2 , ""*/"" )"	813:8:18633:18661	3479317	0	True				
ANR	3480270	UnaryOperationExpression	"! strstr ( ptr_start + 2 , ""*/"" )"		3479317	0					
ANR	3480271	UnaryOperator	!		3479317	0					
ANR	3480272	CallExpression	"strstr ( ptr_start + 2 , ""*/"" )"		3479317	1					
ANR	3480273	Callee	strstr		3479317	0					
ANR	3480274	Identifier	strstr		3479317	0					
ANR	3480275	ArgumentList	ptr_start + 2		3479317	1					
ANR	3480276	Argument	ptr_start + 2		3479317	0					
ANR	3480277	AdditiveExpression	ptr_start + 2		3479317	0		+			
ANR	3480278	Identifier	ptr_start		3479317	0					
ANR	3480279	PrimaryExpression	2		3479317	1					
ANR	3480280	Argument	"""*/"""		3479317	1					
ANR	3480281	PrimaryExpression	"""*/"""		3479317	0					
ANR	3480282	CompoundStatement		130:39:3468:3468	3479317	1					
ANR	3480283	ExpressionStatement	inComment = true	814:5:18671:18687	3479317	0	True				
ANR	3480284	AssignmentExpression	inComment = true		3479317	0		=			
ANR	3480285	Identifier	inComment		3479317	0					
ANR	3480286	Identifier	true		3479317	1					
ANR	3480287	ContinueStatement	continue ;	816:4:18699:18707	3479317	1	True				
ANR	3480288	ExpressionStatement	"ptr = strchr ( ptr_start , '#' )"	818:3:18717:18746	3479317	5	True				
ANR	3480289	AssignmentExpression	"ptr = strchr ( ptr_start , '#' )"		3479317	0		=			
ANR	3480290	Identifier	ptr		3479317	0					
ANR	3480291	CallExpression	"strchr ( ptr_start , '#' )"		3479317	1					
ANR	3480292	Callee	strchr		3479317	0					
ANR	3480293	Identifier	strchr		3479317	0					
ANR	3480294	ArgumentList	ptr_start		3479317	1					
ANR	3480295	Argument	ptr_start		3479317	0					
ANR	3480296	Identifier	ptr_start		3479317	0					
ANR	3480297	Argument	'#'		3479317	1					
ANR	3480298	PrimaryExpression	'#'		3479317	0					
ANR	3480299	IfStatement	"if ( ptr && ! R_BETWEEN ( '0' , ptr [ 1 ] , '9' ) && ptr [ 1 ] != '-' )"		3479317	6					
ANR	3480300	Condition	"ptr && ! R_BETWEEN ( '0' , ptr [ 1 ] , '9' ) && ptr [ 1 ] != '-'"	819:7:18770:18822	3479317	0	True				
ANR	3480301	AndExpression	"ptr && ! R_BETWEEN ( '0' , ptr [ 1 ] , '9' ) && ptr [ 1 ] != '-'"		3479317	0		&&			
ANR	3480302	Identifier	ptr		3479317	0					
ANR	3480303	AndExpression	"! R_BETWEEN ( '0' , ptr [ 1 ] , '9' ) && ptr [ 1 ] != '-'"		3479317	1		&&			
ANR	3480304	UnaryOperationExpression	"! R_BETWEEN ( '0' , ptr [ 1 ] , '9' )"		3479317	0					
ANR	3480305	UnaryOperator	!		3479317	0					
ANR	3480306	CallExpression	"R_BETWEEN ( '0' , ptr [ 1 ] , '9' )"		3479317	1					
ANR	3480307	Callee	R_BETWEEN		3479317	0					
ANR	3480308	Identifier	R_BETWEEN		3479317	0					
ANR	3480309	ArgumentList	'0'		3479317	1					
ANR	3480310	Argument	'0'		3479317	0					
ANR	3480311	PrimaryExpression	'0'		3479317	0					
ANR	3480312	Argument	ptr [ 1 ]		3479317	1					
ANR	3480313	ArrayIndexing	ptr [ 1 ]		3479317	0					
ANR	3480314	Identifier	ptr		3479317	0					
ANR	3480315	PrimaryExpression	1		3479317	1					
ANR	3480316	Argument	'9'		3479317	2					
ANR	3480317	PrimaryExpression	'9'		3479317	0					
ANR	3480318	EqualityExpression	ptr [ 1 ] != '-'		3479317	1		!=			
ANR	3480319	ArrayIndexing	ptr [ 1 ]		3479317	0					
ANR	3480320	Identifier	ptr		3479317	0					
ANR	3480321	PrimaryExpression	1		3479317	1					
ANR	3480322	PrimaryExpression	'-'		3479317	1					
ANR	3480323	CompoundStatement		136:62:3629:3629	3479317	1					
ANR	3480324	ExpressionStatement	* ptr = '\\0'	820:4:18831:18842	3479317	0	True				
ANR	3480325	AssignmentExpression	* ptr = '\\0'		3479317	0		=			
ANR	3480326	UnaryOperationExpression	* ptr		3479317	0					
ANR	3480327	UnaryOperator	*		3479317	0					
ANR	3480328	Identifier	ptr		3479317	1					
ANR	3480329	PrimaryExpression	'\\0'		3479317	1					
ANR	3480330	ExpressionStatement	"r_asm_set_pc ( a , a -> pc + ret )"	822:3:18852:18881	3479317	7	True				
ANR	3480331	CallExpression	"r_asm_set_pc ( a , a -> pc + ret )"		3479317	0					
ANR	3480332	Callee	r_asm_set_pc		3479317	0					
ANR	3480333	Identifier	r_asm_set_pc		3479317	0					
ANR	3480334	ArgumentList	a		3479317	1					
ANR	3480335	Argument	a		3479317	0					
ANR	3480336	Identifier	a		3479317	0					
ANR	3480337	Argument	a -> pc + ret		3479317	1					
ANR	3480338	AdditiveExpression	a -> pc + ret		3479317	0		+			
ANR	3480339	PtrMemberAccess	a -> pc		3479317	0					
ANR	3480340	Identifier	a		3479317	0					
ANR	3480341	Identifier	pc		3479317	1					
ANR	3480342	Identifier	ret		3479317	1					
ANR	3480343	ExpressionStatement	off = a -> pc	823:3:18886:18897	3479317	8	True				
ANR	3480344	AssignmentExpression	off = a -> pc		3479317	0		=			
ANR	3480345	Identifier	off		3479317	0					
ANR	3480346	PtrMemberAccess	a -> pc		3479317	1					
ANR	3480347	Identifier	a		3479317	0					
ANR	3480348	Identifier	pc		3479317	1					
ANR	3480349	ExpressionStatement	ret = 0	824:3:18902:18909	3479317	9	True				
ANR	3480350	AssignmentExpression	ret = 0		3479317	0		=			
ANR	3480351	Identifier	ret		3479317	0					
ANR	3480352	PrimaryExpression	0		3479317	1					
ANR	3480353	IfStatement	if ( ! * ptr_start )		3479317	10					
ANR	3480354	Condition	! * ptr_start	825:7:18918:18928	3479317	0	True				
ANR	3480355	UnaryOperationExpression	! * ptr_start		3479317	0					
ANR	3480356	UnaryOperator	!		3479317	0					
ANR	3480357	UnaryOperationExpression	* ptr_start		3479317	1					
ANR	3480358	UnaryOperator	*		3479317	0					
ANR	3480359	Identifier	ptr_start		3479317	1					
ANR	3480360	CompoundStatement		142:20:3735:3735	3479317	1					
ANR	3480361	ContinueStatement	continue ;	826:4:18937:18945	3479317	0	True				
ANR	3480362	ExpressionStatement	linenum ++	828:3:18955:18965	3479317	11	True				
ANR	3480363	PostIncDecOperationExpression	linenum ++		3479317	0					
ANR	3480364	Identifier	linenum		3479317	0					
ANR	3480365	IncDec	++		3479317	1					
ANR	3480366	IfStatement	"if ( labels && ( ptr = strchr ( ptr_start , ':' ) ) )"		3479317	12					
ANR	3480367	Condition	"labels && ( ptr = strchr ( ptr_start , ':' ) )"	830:7:18990:19030	3479317	0	True				
ANR	3480368	AndExpression	"labels && ( ptr = strchr ( ptr_start , ':' ) )"		3479317	0		&&			
ANR	3480369	Identifier	labels		3479317	0					
ANR	3480370	AssignmentExpression	"ptr = strchr ( ptr_start , ':' )"		3479317	1		=			
ANR	3480371	Identifier	ptr		3479317	0					
ANR	3480372	CallExpression	"strchr ( ptr_start , ':' )"		3479317	1					
ANR	3480373	Callee	strchr		3479317	0					
ANR	3480374	Identifier	strchr		3479317	0					
ANR	3480375	ArgumentList	ptr_start		3479317	1					
ANR	3480376	Argument	ptr_start		3479317	0					
ANR	3480377	Identifier	ptr_start		3479317	0					
ANR	3480378	Argument	':'		3479317	1					
ANR	3480379	PrimaryExpression	':'		3479317	0					
ANR	3480380	CompoundStatement		149:4:3871:3890	3479317	1					
ANR	3480381	IdentifierDeclStatement	bool is_a_label = true ;	831:4:19039:19061	3479317	0	True				
ANR	3480382	IdentifierDecl	is_a_label = true		3479317	0					
ANR	3480383	IdentifierDeclType	bool		3479317	0					
ANR	3480384	Identifier	is_a_label		3479317	1					
ANR	3480385	AssignmentExpression	is_a_label = true		3479317	2		=			
ANR	3480386	Identifier	true		3479317	0					
ANR	3480387	Identifier	true		3479317	1					
ANR	3480388	IdentifierDeclStatement	char * q = ptr_start ;	832:4:19067:19086	3479317	1	True				
ANR	3480389	IdentifierDecl	* q = ptr_start		3479317	0					
ANR	3480390	IdentifierDeclType	char *		3479317	0					
ANR	3480391	Identifier	q		3479317	1					
ANR	3480392	AssignmentExpression	* q = ptr_start		3479317	2		=			
ANR	3480393	Identifier	ptr_start		3479317	0					
ANR	3480394	Identifier	ptr_start		3479317	1					
ANR	3480395	WhileStatement	while ( * q )		3479317	2					
ANR	3480396	Condition	* q	833:11:19099:19100	3479317	0	True				
ANR	3480397	UnaryOperationExpression	* q		3479317	0					
ANR	3480398	UnaryOperator	*		3479317	0					
ANR	3480399	Identifier	q		3479317	1					
ANR	3480400	CompoundStatement		150:15:3907:3907	3479317	1					
ANR	3480401	IfStatement	if ( * q == ' ' )		3479317	0					
ANR	3480402	Condition	* q == ' '	834:9:19114:19122	3479317	0	True				
ANR	3480403	EqualityExpression	* q == ' '		3479317	0		==			
ANR	3480404	UnaryOperationExpression	* q		3479317	0					
ANR	3480405	UnaryOperator	*		3479317	0					
ANR	3480406	Identifier	q		3479317	1					
ANR	3480407	PrimaryExpression	' '		3479317	1					
ANR	3480408	CompoundStatement		151:20:3929:3929	3479317	1					
ANR	3480409	ExpressionStatement	is_a_label = false	835:6:19133:19151	3479317	0	True				
ANR	3480410	AssignmentExpression	is_a_label = false		3479317	0		=			
ANR	3480411	Identifier	is_a_label		3479317	0					
ANR	3480412	Identifier	false		3479317	1					
ANR	3480413	BreakStatement	break ;	836:6:19159:19164	3479317	1	True				
ANR	3480414	ExpressionStatement	q ++	838:5:19178:19181	3479317	1	True				
ANR	3480415	PostIncDecOperationExpression	q ++		3479317	0					
ANR	3480416	Identifier	q		3479317	0					
ANR	3480417	IncDec	++		3479317	1					
ANR	3480418	IfStatement	if ( is_a_label )		3479317	3					
ANR	3480419	Condition	is_a_label	840:8:19197:19206	3479317	0	True				
ANR	3480420	Identifier	is_a_label		3479317	0					
ANR	3480421	CompoundStatement		157:20:4013:4013	3479317	1					
ANR	3480422	IfStatement	if ( ptr_start [ 1 ] && ptr_start [ 1 ] != ' ' )		3479317	0					
ANR	3480423	Condition	ptr_start [ 1 ] && ptr_start [ 1 ] != ' '	842:9:19245:19279	3479317	0	True				
ANR	3480424	AndExpression	ptr_start [ 1 ] && ptr_start [ 1 ] != ' '		3479317	0		&&			
ANR	3480425	ArrayIndexing	ptr_start [ 1 ]		3479317	0					
ANR	3480426	Identifier	ptr_start		3479317	0					
ANR	3480427	PrimaryExpression	1		3479317	1					
ANR	3480428	EqualityExpression	ptr_start [ 1 ] != ' '		3479317	1		!=			
ANR	3480429	ArrayIndexing	ptr_start [ 1 ]		3479317	0					
ANR	3480430	Identifier	ptr_start		3479317	0					
ANR	3480431	PrimaryExpression	1		3479317	1					
ANR	3480432	PrimaryExpression	' '		3479317	1					
ANR	3480433	CompoundStatement		161:6:4110:4138	3479317	1					
ANR	3480434	ExpressionStatement	* ptr = 0	843:6:19290:19298	3479317	0	True				
ANR	3480435	AssignmentExpression	* ptr = 0		3479317	0		=			
ANR	3480436	UnaryOperationExpression	* ptr		3479317	0					
ANR	3480437	UnaryOperator	*		3479317	0					
ANR	3480438	Identifier	ptr		3479317	1					
ANR	3480439	PrimaryExpression	0		3479317	1					
ANR	3480440	IdentifierDeclStatement	char * p = strdup ( ptr_start ) ;	844:6:19306:19334	3479317	1	True				
ANR	3480441	IdentifierDecl	* p = strdup ( ptr_start )		3479317	0					
ANR	3480442	IdentifierDeclType	char *		3479317	0					
ANR	3480443	Identifier	p		3479317	1					
ANR	3480444	AssignmentExpression	* p = strdup ( ptr_start )		3479317	2		=			
ANR	3480445	Identifier	p		3479317	0					
ANR	3480446	CallExpression	strdup ( ptr_start )		3479317	1					
ANR	3480447	Callee	strdup		3479317	0					
ANR	3480448	Identifier	strdup		3479317	0					
ANR	3480449	ArgumentList	ptr_start		3479317	1					
ANR	3480450	Argument	ptr_start		3479317	0					
ANR	3480451	Identifier	ptr_start		3479317	0					
ANR	3480452	ExpressionStatement	* ptr = ':'	845:6:19342:19352	3479317	2	True				
ANR	3480453	AssignmentExpression	* ptr = ':'		3479317	0		=			
ANR	3480454	UnaryOperationExpression	* ptr		3479317	0					
ANR	3480455	UnaryOperator	*		3479317	0					
ANR	3480456	Identifier	ptr		3479317	1					
ANR	3480457	PrimaryExpression	':'		3479317	1					
ANR	3480458	IfStatement	if ( acode -> code_align )		3479317	3					
ANR	3480459	Condition	acode -> code_align	846:10:19364:19380	3479317	0	True				
ANR	3480460	PtrMemberAccess	acode -> code_align		3479317	0					
ANR	3480461	Identifier	acode		3479317	0					
ANR	3480462	Identifier	code_align		3479317	1					
ANR	3480463	CompoundStatement		163:29:4187:4187	3479317	1					
ANR	3480464	ExpressionStatement	off += ( acode -> code_align - ( off % acode -> code_align ) )	847:7:19392:19446	3479317	0	True				
ANR	3480465	AssignmentExpression	off += ( acode -> code_align - ( off % acode -> code_align ) )		3479317	0		+=			
ANR	3480466	Identifier	off		3479317	0					
ANR	3480467	AdditiveExpression	acode -> code_align - ( off % acode -> code_align )		3479317	1		-			
ANR	3480468	PtrMemberAccess	acode -> code_align		3479317	0					
ANR	3480469	Identifier	acode		3479317	0					
ANR	3480470	Identifier	code_align		3479317	1					
ANR	3480471	MultiplicativeExpression	off % acode -> code_align		3479317	1		%			
ANR	3480472	Identifier	off		3479317	0					
ANR	3480473	PtrMemberAccess	acode -> code_align		3479317	1					
ANR	3480474	Identifier	acode		3479317	0					
ANR	3480475	Identifier	code_align		3479317	1					
ANR	3480476	Statement	char	849:6:19462:19465	3479317	4	True				
ANR	3480477	Statement	*	849:11:19467:19467	3479317	5	True				
ANR	3480478	Statement	food	849:12:19468:19471	3479317	6	True				
ANR	3480479	Statement	=	849:17:19473:19473	3479317	7	True				
ANR	3480480	Statement	r_str_newf	849:19:19475:19484	3479317	8	True				
ANR	3480481	Statement	(	849:30:19486:19486	3479317	9	True				
ANR	3480482	Statement	"""0x%"""	849:31:19487:19491	3479317	10	True				
ANR	3480483	Statement	PFMT64x	849:36:19492:19498	3479317	11	True				
ANR	3480484	Statement	","	849:43:19499:19499	3479317	12	True				
ANR	3480485	Statement	off	849:45:19501:19503	3479317	13	True				
ANR	3480486	Statement	)	849:48:19504:19504	3479317	14	True				
ANR	3480487	ExpressionStatement		849:49:19505:19505	3479317	15	True				
ANR	3480488	ExpressionStatement	"ht_pp_insert ( a -> flags , ptr_start , food )"	850:6:19513:19553	3479317	16	True				
ANR	3480489	CallExpression	"ht_pp_insert ( a -> flags , ptr_start , food )"		3479317	0					
ANR	3480490	Callee	ht_pp_insert		3479317	0					
ANR	3480491	Identifier	ht_pp_insert		3479317	0					
ANR	3480492	ArgumentList	a -> flags		3479317	1					
ANR	3480493	Argument	a -> flags		3479317	0					
ANR	3480494	PtrMemberAccess	a -> flags		3479317	0					
ANR	3480495	Identifier	a		3479317	0					
ANR	3480496	Identifier	flags		3479317	1					
ANR	3480497	Argument	ptr_start		3479317	1					
ANR	3480498	Identifier	ptr_start		3479317	0					
ANR	3480499	Argument	food		3479317	2					
ANR	3480500	Identifier	food		3479317	0					
ANR	3480501	ExpressionStatement	"r_asm_code_set_equ ( acode , p , food )"	851:6:19561:19596	3479317	17	True				
ANR	3480502	CallExpression	"r_asm_code_set_equ ( acode , p , food )"		3479317	0					
ANR	3480503	Callee	r_asm_code_set_equ		3479317	0					
ANR	3480504	Identifier	r_asm_code_set_equ		3479317	0					
ANR	3480505	ArgumentList	acode		3479317	1					
ANR	3480506	Argument	acode		3479317	0					
ANR	3480507	Identifier	acode		3479317	0					
ANR	3480508	Argument	p		3479317	1					
ANR	3480509	Identifier	p		3479317	0					
ANR	3480510	Argument	food		3479317	2					
ANR	3480511	Identifier	food		3479317	0					
ANR	3480512	ExpressionStatement	free ( p )	852:6:19604:19612	3479317	18	True				
ANR	3480513	CallExpression	free ( p )		3479317	0					
ANR	3480514	Callee	free		3479317	0					
ANR	3480515	Identifier	free		3479317	0					
ANR	3480516	ArgumentList	p		3479317	1					
ANR	3480517	Argument	p		3479317	0					
ANR	3480518	Identifier	p		3479317	0					
ANR	3480519	ExpressionStatement	free ( food )	853:6:19620:19631	3479317	19	True				
ANR	3480520	CallExpression	free ( food )		3479317	0					
ANR	3480521	Callee	free		3479317	0					
ANR	3480522	Identifier	free		3479317	0					
ANR	3480523	ArgumentList	food		3479317	1					
ANR	3480524	Argument	food		3479317	0					
ANR	3480525	Identifier	food		3479317	0					
ANR	3480526	ExpressionStatement	ptr_start = ptr + 1	856:5:19654:19673	3479317	1	True				
ANR	3480527	AssignmentExpression	ptr_start = ptr + 1		3479317	0		=			
ANR	3480528	Identifier	ptr_start		3479317	0					
ANR	3480529	AdditiveExpression	ptr + 1		3479317	1		+			
ANR	3480530	Identifier	ptr		3479317	0					
ANR	3480531	PrimaryExpression	1		3479317	1					
ANR	3480532	ExpressionStatement	ptr = ptr_start	858:4:19685:19700	3479317	4	True				
ANR	3480533	AssignmentExpression	ptr = ptr_start		3479317	0		=			
ANR	3480534	Identifier	ptr		3479317	0					
ANR	3480535	Identifier	ptr_start		3479317	1					
ANR	3480536	IfStatement	if ( ! * ptr_start )		3479317	13					
ANR	3480537	Condition	! * ptr_start	860:7:19714:19724	3479317	0	True				
ANR	3480538	UnaryOperationExpression	! * ptr_start		3479317	0					
ANR	3480539	UnaryOperator	!		3479317	0					
ANR	3480540	UnaryOperationExpression	* ptr_start		3479317	1					
ANR	3480541	UnaryOperator	*		3479317	0					
ANR	3480542	Identifier	ptr_start		3479317	1					
ANR	3480543	CompoundStatement		177:20:4531:4531	3479317	1					
ANR	3480544	ExpressionStatement	ret = 0	861:4:19733:19740	3479317	0	True				
ANR	3480545	AssignmentExpression	ret = 0		3479317	0		=			
ANR	3480546	Identifier	ret		3479317	0					
ANR	3480547	PrimaryExpression	0		3479317	1					
ANR	3480548	ContinueStatement	continue ;	862:4:19746:19754	3479317	1	True				
ANR	3480549	IfStatement	if ( * ptr_start == '.' )		3479317	14					
ANR	3480550	Condition	* ptr_start == '.'	864:7:19768:19784	3479317	0	True				
ANR	3480551	EqualityExpression	* ptr_start == '.'		3479317	0		==			
ANR	3480552	UnaryOperationExpression	* ptr_start		3479317	0					
ANR	3480553	UnaryOperator	*		3479317	0					
ANR	3480554	Identifier	ptr_start		3479317	1					
ANR	3480555	PrimaryExpression	'.'		3479317	1					
ANR	3480556	CompoundStatement		181:26:4591:4591	3479317	1					
ANR	3480557	ExpressionStatement	ptr = ptr_start	866:4:19852:19867	3479317	0	True				
ANR	3480558	AssignmentExpression	ptr = ptr_start		3479317	0		=			
ANR	3480559	Identifier	ptr		3479317	0					
ANR	3480560	Identifier	ptr_start		3479317	1					
ANR	3480561	ExpressionStatement	r_str_trim ( ptr )	867:4:19873:19889	3479317	1	True				
ANR	3480562	CallExpression	r_str_trim ( ptr )		3479317	0					
ANR	3480563	Callee	r_str_trim		3479317	0					
ANR	3480564	Identifier	r_str_trim		3479317	0					
ANR	3480565	ArgumentList	ptr		3479317	1					
ANR	3480566	Argument	ptr		3479317	0					
ANR	3480567	Identifier	ptr		3479317	0					
ANR	3480568	IfStatement	"if ( ! strncmp ( ptr , "".intel_syntax"" , 13 ) )"		3479317	2					
ANR	3480569	Condition	"! strncmp ( ptr , "".intel_syntax"" , 13 )"	868:8:19899:19933	3479317	0	True				
ANR	3480570	UnaryOperationExpression	"! strncmp ( ptr , "".intel_syntax"" , 13 )"		3479317	0					
ANR	3480571	UnaryOperator	!		3479317	0					
ANR	3480572	CallExpression	"strncmp ( ptr , "".intel_syntax"" , 13 )"		3479317	1					
ANR	3480573	Callee	strncmp		3479317	0					
ANR	3480574	Identifier	strncmp		3479317	0					
ANR	3480575	ArgumentList	ptr		3479317	1					
ANR	3480576	Argument	ptr		3479317	0					
ANR	3480577	Identifier	ptr		3479317	0					
ANR	3480578	Argument	""".intel_syntax"""		3479317	1					
ANR	3480579	PrimaryExpression	""".intel_syntax"""		3479317	0					
ANR	3480580	Argument	13		3479317	2					
ANR	3480581	PrimaryExpression	13		3479317	0					
ANR	3480582	CompoundStatement		185:45:4740:4740	3479317	1					
ANR	3480583	ExpressionStatement	a -> syntax = R_ASM_SYNTAX_INTEL	869:5:19943:19973	3479317	0	True				
ANR	3480584	AssignmentExpression	a -> syntax = R_ASM_SYNTAX_INTEL		3479317	0		=			
ANR	3480585	PtrMemberAccess	a -> syntax		3479317	0					
ANR	3480586	Identifier	a		3479317	0					
ANR	3480587	Identifier	syntax		3479317	1					
ANR	3480588	Identifier	R_ASM_SYNTAX_INTEL		3479317	1					
ANR	3480589	ElseStatement	else		3479317	0					
ANR	3480590	IfStatement	"if ( ! strncmp ( ptr , "".att_syntax"" , 11 ) )"		3479317	0					
ANR	3480591	Condition	"! strncmp ( ptr , "".att_syntax"" , 11 )"	870:15:19990:20022	3479317	0	True				
ANR	3480592	UnaryOperationExpression	"! strncmp ( ptr , "".att_syntax"" , 11 )"		3479317	0					
ANR	3480593	UnaryOperator	!		3479317	0					
ANR	3480594	CallExpression	"strncmp ( ptr , "".att_syntax"" , 11 )"		3479317	1					
ANR	3480595	Callee	strncmp		3479317	0					
ANR	3480596	Identifier	strncmp		3479317	0					
ANR	3480597	ArgumentList	ptr		3479317	1					
ANR	3480598	Argument	ptr		3479317	0					
ANR	3480599	Identifier	ptr		3479317	0					
ANR	3480600	Argument	""".att_syntax"""		3479317	1					
ANR	3480601	PrimaryExpression	""".att_syntax"""		3479317	0					
ANR	3480602	Argument	11		3479317	2					
ANR	3480603	PrimaryExpression	11		3479317	0					
ANR	3480604	CompoundStatement		187:50:4829:4829	3479317	1					
ANR	3480605	ExpressionStatement	a -> syntax = R_ASM_SYNTAX_ATT	871:5:20032:20060	3479317	0	True				
ANR	3480606	AssignmentExpression	a -> syntax = R_ASM_SYNTAX_ATT		3479317	0		=			
ANR	3480607	PtrMemberAccess	a -> syntax		3479317	0					
ANR	3480608	Identifier	a		3479317	0					
ANR	3480609	Identifier	syntax		3479317	1					
ANR	3480610	Identifier	R_ASM_SYNTAX_ATT		3479317	1					
ANR	3480611	ElseStatement	else		3479317	0					
ANR	3480612	IfStatement	"if ( ! strncmp ( ptr , "".endian"" , 7 ) )"		3479317	0					
ANR	3480613	Condition	"! strncmp ( ptr , "".endian"" , 7 )"	872:15:20077:20104	3479317	0	True				
ANR	3480614	UnaryOperationExpression	"! strncmp ( ptr , "".endian"" , 7 )"		3479317	0					
ANR	3480615	UnaryOperator	!		3479317	0					
ANR	3480616	CallExpression	"strncmp ( ptr , "".endian"" , 7 )"		3479317	1					
ANR	3480617	Callee	strncmp		3479317	0					
ANR	3480618	Identifier	strncmp		3479317	0					
ANR	3480619	ArgumentList	ptr		3479317	1					
ANR	3480620	Argument	ptr		3479317	0					
ANR	3480621	Identifier	ptr		3479317	0					
ANR	3480622	Argument	""".endian"""		3479317	1					
ANR	3480623	PrimaryExpression	""".endian"""		3479317	0					
ANR	3480624	Argument	7		3479317	2					
ANR	3480625	PrimaryExpression	7		3479317	0					
ANR	3480626	CompoundStatement		189:45:4911:4911	3479317	1					
ANR	3480627	ExpressionStatement	"r_asm_set_big_endian ( a , atoi ( ptr + 7 ) )"	873:5:20114:20154	3479317	0	True				
ANR	3480628	CallExpression	"r_asm_set_big_endian ( a , atoi ( ptr + 7 ) )"		3479317	0					
ANR	3480629	Callee	r_asm_set_big_endian		3479317	0					
ANR	3480630	Identifier	r_asm_set_big_endian		3479317	0					
ANR	3480631	ArgumentList	a		3479317	1					
ANR	3480632	Argument	a		3479317	0					
ANR	3480633	Identifier	a		3479317	0					
ANR	3480634	Argument	atoi ( ptr + 7 )		3479317	1					
ANR	3480635	CallExpression	atoi ( ptr + 7 )		3479317	0					
ANR	3480636	Callee	atoi		3479317	0					
ANR	3480637	Identifier	atoi		3479317	0					
ANR	3480638	ArgumentList	ptr + 7		3479317	1					
ANR	3480639	Argument	ptr + 7		3479317	0					
ANR	3480640	AdditiveExpression	ptr + 7		3479317	0		+			
ANR	3480641	Identifier	ptr		3479317	0					
ANR	3480642	PrimaryExpression	7		3479317	1					
ANR	3480643	ElseStatement	else		3479317	0					
ANR	3480644	IfStatement	"if ( ! strncmp ( ptr , "".big_endian"" , 7 + 4 ) )"		3479317	0					
ANR	3480645	Condition	"! strncmp ( ptr , "".big_endian"" , 7 + 4 )"	874:15:20171:20206	3479317	0	True				
ANR	3480646	UnaryOperationExpression	"! strncmp ( ptr , "".big_endian"" , 7 + 4 )"		3479317	0					
ANR	3480647	UnaryOperator	!		3479317	0					
ANR	3480648	CallExpression	"strncmp ( ptr , "".big_endian"" , 7 + 4 )"		3479317	1					
ANR	3480649	Callee	strncmp		3479317	0					
ANR	3480650	Identifier	strncmp		3479317	0					
ANR	3480651	ArgumentList	ptr		3479317	1					
ANR	3480652	Argument	ptr		3479317	0					
ANR	3480653	Identifier	ptr		3479317	0					
ANR	3480654	Argument	""".big_endian"""		3479317	1					
ANR	3480655	PrimaryExpression	""".big_endian"""		3479317	0					
ANR	3480656	Argument	7 + 4		3479317	2					
ANR	3480657	AdditiveExpression	7 + 4		3479317	0		+			
ANR	3480658	PrimaryExpression	7		3479317	0					
ANR	3480659	PrimaryExpression	4		3479317	1					
ANR	3480660	CompoundStatement		191:53:5013:5013	3479317	1					
ANR	3480661	ExpressionStatement	"r_asm_set_big_endian ( a , true )"	875:5:20216:20246	3479317	0	True				
ANR	3480662	CallExpression	"r_asm_set_big_endian ( a , true )"		3479317	0					
ANR	3480663	Callee	r_asm_set_big_endian		3479317	0					
ANR	3480664	Identifier	r_asm_set_big_endian		3479317	0					
ANR	3480665	ArgumentList	a		3479317	1					
ANR	3480666	Argument	a		3479317	0					
ANR	3480667	Identifier	a		3479317	0					
ANR	3480668	Argument	true		3479317	1					
ANR	3480669	Identifier	true		3479317	0					
ANR	3480670	ElseStatement	else		3479317	0					
ANR	3480671	IfStatement	"if ( ! strncmp ( ptr , "".lil_endian"" , 7 + 4 ) || ! strncmp ( ptr , ""little_endian"" , 7 + 6 ) )"		3479317	0					
ANR	3480672	Condition	"! strncmp ( ptr , "".lil_endian"" , 7 + 4 ) || ! strncmp ( ptr , ""little_endian"" , 7 + 6 )"	876:15:20263:20340	3479317	0	True				
ANR	3480673	OrExpression	"! strncmp ( ptr , "".lil_endian"" , 7 + 4 ) || ! strncmp ( ptr , ""little_endian"" , 7 + 6 )"		3479317	0		||			
ANR	3480674	UnaryOperationExpression	"! strncmp ( ptr , "".lil_endian"" , 7 + 4 )"		3479317	0					
ANR	3480675	UnaryOperator	!		3479317	0					
ANR	3480676	CallExpression	"strncmp ( ptr , "".lil_endian"" , 7 + 4 )"		3479317	1					
ANR	3480677	Callee	strncmp		3479317	0					
ANR	3480678	Identifier	strncmp		3479317	0					
ANR	3480679	ArgumentList	ptr		3479317	1					
ANR	3480680	Argument	ptr		3479317	0					
ANR	3480681	Identifier	ptr		3479317	0					
ANR	3480682	Argument	""".lil_endian"""		3479317	1					
ANR	3480683	PrimaryExpression	""".lil_endian"""		3479317	0					
ANR	3480684	Argument	7 + 4		3479317	2					
ANR	3480685	AdditiveExpression	7 + 4		3479317	0		+			
ANR	3480686	PrimaryExpression	7		3479317	0					
ANR	3480687	PrimaryExpression	4		3479317	1					
ANR	3480688	UnaryOperationExpression	"! strncmp ( ptr , ""little_endian"" , 7 + 6 )"		3479317	1					
ANR	3480689	UnaryOperator	!		3479317	0					
ANR	3480690	CallExpression	"strncmp ( ptr , ""little_endian"" , 7 + 6 )"		3479317	1					
ANR	3480691	Callee	strncmp		3479317	0					
ANR	3480692	Identifier	strncmp		3479317	0					
ANR	3480693	ArgumentList	ptr		3479317	1					
ANR	3480694	Argument	ptr		3479317	0					
ANR	3480695	Identifier	ptr		3479317	0					
ANR	3480696	Argument	"""little_endian"""		3479317	1					
ANR	3480697	PrimaryExpression	"""little_endian"""		3479317	0					
ANR	3480698	Argument	7 + 6		3479317	2					
ANR	3480699	AdditiveExpression	7 + 6		3479317	0		+			
ANR	3480700	PrimaryExpression	7		3479317	0					
ANR	3480701	PrimaryExpression	6		3479317	1					
ANR	3480702	CompoundStatement		193:95:5147:5147	3479317	1					
ANR	3480703	ExpressionStatement	"r_asm_set_big_endian ( a , false )"	877:5:20350:20381	3479317	0	True				
ANR	3480704	CallExpression	"r_asm_set_big_endian ( a , false )"		3479317	0					
ANR	3480705	Callee	r_asm_set_big_endian		3479317	0					
ANR	3480706	Identifier	r_asm_set_big_endian		3479317	0					
ANR	3480707	ArgumentList	a		3479317	1					
ANR	3480708	Argument	a		3479317	0					
ANR	3480709	Identifier	a		3479317	0					
ANR	3480710	Argument	false		3479317	1					
ANR	3480711	Identifier	false		3479317	0					
ANR	3480712	ElseStatement	else		3479317	0					
ANR	3480713	IfStatement	"if ( ! strncmp ( ptr , "".asciz"" , 6 ) )"		3479317	0					
ANR	3480714	Condition	"! strncmp ( ptr , "".asciz"" , 6 )"	878:15:20398:20424	3479317	0	True				
ANR	3480715	UnaryOperationExpression	"! strncmp ( ptr , "".asciz"" , 6 )"		3479317	0					
ANR	3480716	UnaryOperator	!		3479317	0					
ANR	3480717	CallExpression	"strncmp ( ptr , "".asciz"" , 6 )"		3479317	1					
ANR	3480718	Callee	strncmp		3479317	0					
ANR	3480719	Identifier	strncmp		3479317	0					
ANR	3480720	ArgumentList	ptr		3479317	1					
ANR	3480721	Argument	ptr		3479317	0					
ANR	3480722	Identifier	ptr		3479317	0					
ANR	3480723	Argument	""".asciz"""		3479317	1					
ANR	3480724	PrimaryExpression	""".asciz"""		3479317	0					
ANR	3480725	Argument	6		3479317	2					
ANR	3480726	PrimaryExpression	6		3479317	0					
ANR	3480727	CompoundStatement		195:44:5231:5231	3479317	1					
ANR	3480728	ExpressionStatement	r_str_trim ( ptr + 8 )	879:5:20434:20454	3479317	0	True				
ANR	3480729	CallExpression	r_str_trim ( ptr + 8 )		3479317	0					
ANR	3480730	Callee	r_str_trim		3479317	0					
ANR	3480731	Identifier	r_str_trim		3479317	0					
ANR	3480732	ArgumentList	ptr + 8		3479317	1					
ANR	3480733	Argument	ptr + 8		3479317	0					
ANR	3480734	AdditiveExpression	ptr + 8		3479317	0		+			
ANR	3480735	Identifier	ptr		3479317	0					
ANR	3480736	PrimaryExpression	8		3479317	1					
ANR	3480737	ExpressionStatement	"ret = r_asm_pseudo_string ( & op , ptr + 8 , 1 )"	880:5:20461:20504	3479317	1	True				
ANR	3480738	AssignmentExpression	"ret = r_asm_pseudo_string ( & op , ptr + 8 , 1 )"		3479317	0		=			
ANR	3480739	Identifier	ret		3479317	0					
ANR	3480740	CallExpression	"r_asm_pseudo_string ( & op , ptr + 8 , 1 )"		3479317	1					
ANR	3480741	Callee	r_asm_pseudo_string		3479317	0					
ANR	3480742	Identifier	r_asm_pseudo_string		3479317	0					
ANR	3480743	ArgumentList	& op		3479317	1					
ANR	3480744	Argument	& op		3479317	0					
ANR	3480745	UnaryOperationExpression	& op		3479317	0					
ANR	3480746	UnaryOperator	&		3479317	0					
ANR	3480747	Identifier	op		3479317	1					
ANR	3480748	Argument	ptr + 8		3479317	1					
ANR	3480749	AdditiveExpression	ptr + 8		3479317	0		+			
ANR	3480750	Identifier	ptr		3479317	0					
ANR	3480751	PrimaryExpression	8		3479317	1					
ANR	3480752	Argument	1		3479317	2					
ANR	3480753	PrimaryExpression	1		3479317	0					
ANR	3480754	ElseStatement	else		3479317	0					
ANR	3480755	IfStatement	"if ( ! strncmp ( ptr , "".string "" , 8 ) )"		3479317	0					
ANR	3480756	Condition	"! strncmp ( ptr , "".string "" , 8 )"	881:15:20521:20549	3479317	0	True				
ANR	3480757	UnaryOperationExpression	"! strncmp ( ptr , "".string "" , 8 )"		3479317	0					
ANR	3480758	UnaryOperator	!		3479317	0					
ANR	3480759	CallExpression	"strncmp ( ptr , "".string "" , 8 )"		3479317	1					
ANR	3480760	Callee	strncmp		3479317	0					
ANR	3480761	Identifier	strncmp		3479317	0					
ANR	3480762	ArgumentList	ptr		3479317	1					
ANR	3480763	Argument	ptr		3479317	0					
ANR	3480764	Identifier	ptr		3479317	0					
ANR	3480765	Argument	""".string """		3479317	1					
ANR	3480766	PrimaryExpression	""".string """		3479317	0					
ANR	3480767	Argument	8		3479317	2					
ANR	3480768	PrimaryExpression	8		3479317	0					
ANR	3480769	CompoundStatement		200:5:5390:5419	3479317	1					
ANR	3480770	ExpressionStatement	r_str_trim ( ptr + 8 )	882:5:20559:20579	3479317	0	True				
ANR	3480771	CallExpression	r_str_trim ( ptr + 8 )		3479317	0					
ANR	3480772	Callee	r_str_trim		3479317	0					
ANR	3480773	Identifier	r_str_trim		3479317	0					
ANR	3480774	ArgumentList	ptr + 8		3479317	1					
ANR	3480775	Argument	ptr + 8		3479317	0					
ANR	3480776	AdditiveExpression	ptr + 8		3479317	0		+			
ANR	3480777	Identifier	ptr		3479317	0					
ANR	3480778	PrimaryExpression	8		3479317	1					
ANR	3480779	IdentifierDeclStatement	char * str = strdup ( ptr + 8 ) ;	883:5:20586:20615	3479317	1	True				
ANR	3480780	IdentifierDecl	* str = strdup ( ptr + 8 )		3479317	0					
ANR	3480781	IdentifierDeclType	char *		3479317	0					
ANR	3480782	Identifier	str		3479317	1					
ANR	3480783	AssignmentExpression	* str = strdup ( ptr + 8 )		3479317	2		=			
ANR	3480784	Identifier	str		3479317	0					
ANR	3480785	CallExpression	strdup ( ptr + 8 )		3479317	1					
ANR	3480786	Callee	strdup		3479317	0					
ANR	3480787	Identifier	strdup		3479317	0					
ANR	3480788	ArgumentList	ptr + 8		3479317	1					
ANR	3480789	Argument	ptr + 8		3479317	0					
ANR	3480790	AdditiveExpression	ptr + 8		3479317	0		+			
ANR	3480791	Identifier	ptr		3479317	0					
ANR	3480792	PrimaryExpression	8		3479317	1					
ANR	3480793	ExpressionStatement	"ret = r_asm_pseudo_string ( & op , str , 1 )"	884:5:20622:20661	3479317	2	True				
ANR	3480794	AssignmentExpression	"ret = r_asm_pseudo_string ( & op , str , 1 )"		3479317	0		=			
ANR	3480795	Identifier	ret		3479317	0					
ANR	3480796	CallExpression	"r_asm_pseudo_string ( & op , str , 1 )"		3479317	1					
ANR	3480797	Callee	r_asm_pseudo_string		3479317	0					
ANR	3480798	Identifier	r_asm_pseudo_string		3479317	0					
ANR	3480799	ArgumentList	& op		3479317	1					
ANR	3480800	Argument	& op		3479317	0					
ANR	3480801	UnaryOperationExpression	& op		3479317	0					
ANR	3480802	UnaryOperator	&		3479317	0					
ANR	3480803	Identifier	op		3479317	1					
ANR	3480804	Argument	str		3479317	1					
ANR	3480805	Identifier	str		3479317	0					
ANR	3480806	Argument	1		3479317	2					
ANR	3480807	PrimaryExpression	1		3479317	0					
ANR	3480808	ExpressionStatement	free ( str )	885:5:20668:20678	3479317	3	True				
ANR	3480809	CallExpression	free ( str )		3479317	0					
ANR	3480810	Callee	free		3479317	0					
ANR	3480811	Identifier	free		3479317	0					
ANR	3480812	ArgumentList	str		3479317	1					
ANR	3480813	Argument	str		3479317	0					
ANR	3480814	Identifier	str		3479317	0					
ANR	3480815	ElseStatement	else		3479317	0					
ANR	3480816	IfStatement	"if ( ! strncmp ( ptr , "".ascii"" , 6 ) )"		3479317	0					
ANR	3480817	Condition	"! strncmp ( ptr , "".ascii"" , 6 )"	886:15:20695:20721	3479317	0	True				
ANR	3480818	UnaryOperationExpression	"! strncmp ( ptr , "".ascii"" , 6 )"		3479317	0					
ANR	3480819	UnaryOperator	!		3479317	0					
ANR	3480820	CallExpression	"strncmp ( ptr , "".ascii"" , 6 )"		3479317	1					
ANR	3480821	Callee	strncmp		3479317	0					
ANR	3480822	Identifier	strncmp		3479317	0					
ANR	3480823	ArgumentList	ptr		3479317	1					
ANR	3480824	Argument	ptr		3479317	0					
ANR	3480825	Identifier	ptr		3479317	0					
ANR	3480826	Argument	""".ascii"""		3479317	1					
ANR	3480827	PrimaryExpression	""".ascii"""		3479317	0					
ANR	3480828	Argument	6		3479317	2					
ANR	3480829	PrimaryExpression	6		3479317	0					
ANR	3480830	CompoundStatement		203:44:5528:5528	3479317	1					
ANR	3480831	ExpressionStatement	"ret = r_asm_pseudo_string ( & op , ptr + 7 , 0 )"	887:5:20731:20774	3479317	0	True				
ANR	3480832	AssignmentExpression	"ret = r_asm_pseudo_string ( & op , ptr + 7 , 0 )"		3479317	0		=			
ANR	3480833	Identifier	ret		3479317	0					
ANR	3480834	CallExpression	"r_asm_pseudo_string ( & op , ptr + 7 , 0 )"		3479317	1					
ANR	3480835	Callee	r_asm_pseudo_string		3479317	0					
ANR	3480836	Identifier	r_asm_pseudo_string		3479317	0					
ANR	3480837	ArgumentList	& op		3479317	1					
ANR	3480838	Argument	& op		3479317	0					
ANR	3480839	UnaryOperationExpression	& op		3479317	0					
ANR	3480840	UnaryOperator	&		3479317	0					
ANR	3480841	Identifier	op		3479317	1					
ANR	3480842	Argument	ptr + 7		3479317	1					
ANR	3480843	AdditiveExpression	ptr + 7		3479317	0		+			
ANR	3480844	Identifier	ptr		3479317	0					
ANR	3480845	PrimaryExpression	7		3479317	1					
ANR	3480846	Argument	0		3479317	2					
ANR	3480847	PrimaryExpression	0		3479317	0					
ANR	3480848	ElseStatement	else		3479317	0					
ANR	3480849	IfStatement	"if ( ! strncmp ( ptr , "".align"" , 6 ) )"		3479317	0					
ANR	3480850	Condition	"! strncmp ( ptr , "".align"" , 6 )"	888:15:20791:20817	3479317	0	True				
ANR	3480851	UnaryOperationExpression	"! strncmp ( ptr , "".align"" , 6 )"		3479317	0					
ANR	3480852	UnaryOperator	!		3479317	0					
ANR	3480853	CallExpression	"strncmp ( ptr , "".align"" , 6 )"		3479317	1					
ANR	3480854	Callee	strncmp		3479317	0					
ANR	3480855	Identifier	strncmp		3479317	0					
ANR	3480856	ArgumentList	ptr		3479317	1					
ANR	3480857	Argument	ptr		3479317	0					
ANR	3480858	Identifier	ptr		3479317	0					
ANR	3480859	Argument	""".align"""		3479317	1					
ANR	3480860	PrimaryExpression	""".align"""		3479317	0					
ANR	3480861	Argument	6		3479317	2					
ANR	3480862	PrimaryExpression	6		3479317	0					
ANR	3480863	CompoundStatement		205:44:5624:5624	3479317	1					
ANR	3480864	ExpressionStatement	"ret = r_asm_pseudo_align ( acode , & op , ptr + 7 )"	889:5:20827:20873	3479317	0	True				
ANR	3480865	AssignmentExpression	"ret = r_asm_pseudo_align ( acode , & op , ptr + 7 )"		3479317	0		=			
ANR	3480866	Identifier	ret		3479317	0					
ANR	3480867	CallExpression	"r_asm_pseudo_align ( acode , & op , ptr + 7 )"		3479317	1					
ANR	3480868	Callee	r_asm_pseudo_align		3479317	0					
ANR	3480869	Identifier	r_asm_pseudo_align		3479317	0					
ANR	3480870	ArgumentList	acode		3479317	1					
ANR	3480871	Argument	acode		3479317	0					
ANR	3480872	Identifier	acode		3479317	0					
ANR	3480873	Argument	& op		3479317	1					
ANR	3480874	UnaryOperationExpression	& op		3479317	0					
ANR	3480875	UnaryOperator	&		3479317	0					
ANR	3480876	Identifier	op		3479317	1					
ANR	3480877	Argument	ptr + 7		3479317	2					
ANR	3480878	AdditiveExpression	ptr + 7		3479317	0		+			
ANR	3480879	Identifier	ptr		3479317	0					
ANR	3480880	PrimaryExpression	7		3479317	1					
ANR	3480881	ElseStatement	else		3479317	0					
ANR	3480882	IfStatement	"if ( ! strncmp ( ptr , "".arm"" , 4 ) )"		3479317	0					
ANR	3480883	Condition	"! strncmp ( ptr , "".arm"" , 4 )"	890:15:20890:20914	3479317	0	True				
ANR	3480884	UnaryOperationExpression	"! strncmp ( ptr , "".arm"" , 4 )"		3479317	0					
ANR	3480885	UnaryOperator	!		3479317	0					
ANR	3480886	CallExpression	"strncmp ( ptr , "".arm"" , 4 )"		3479317	1					
ANR	3480887	Callee	strncmp		3479317	0					
ANR	3480888	Identifier	strncmp		3479317	0					
ANR	3480889	ArgumentList	ptr		3479317	1					
ANR	3480890	Argument	ptr		3479317	0					
ANR	3480891	Identifier	ptr		3479317	0					
ANR	3480892	Argument	""".arm"""		3479317	1					
ANR	3480893	PrimaryExpression	""".arm"""		3479317	0					
ANR	3480894	Argument	4		3479317	2					
ANR	3480895	PrimaryExpression	4		3479317	0					
ANR	3480896	CompoundStatement		207:42:5721:5721	3479317	1					
ANR	3480897	ExpressionStatement	"r_asm_use ( a , ""arm"" )"	891:5:20924:20944	3479317	0	True				
ANR	3480898	CallExpression	"r_asm_use ( a , ""arm"" )"		3479317	0					
ANR	3480899	Callee	r_asm_use		3479317	0					
ANR	3480900	Identifier	r_asm_use		3479317	0					
ANR	3480901	ArgumentList	a		3479317	1					
ANR	3480902	Argument	a		3479317	0					
ANR	3480903	Identifier	a		3479317	0					
ANR	3480904	Argument	"""arm"""		3479317	1					
ANR	3480905	PrimaryExpression	"""arm"""		3479317	0					
ANR	3480906	ExpressionStatement	"r_asm_set_bits ( a , 32 )"	892:5:20951:20973	3479317	1	True				
ANR	3480907	CallExpression	"r_asm_set_bits ( a , 32 )"		3479317	0					
ANR	3480908	Callee	r_asm_set_bits		3479317	0					
ANR	3480909	Identifier	r_asm_set_bits		3479317	0					
ANR	3480910	ArgumentList	a		3479317	1					
ANR	3480911	Argument	a		3479317	0					
ANR	3480912	Identifier	a		3479317	0					
ANR	3480913	Argument	32		3479317	1					
ANR	3480914	PrimaryExpression	32		3479317	0					
ANR	3480915	ExpressionStatement	ret = 0	893:5:20980:20987	3479317	2	True				
ANR	3480916	AssignmentExpression	ret = 0		3479317	0		=			
ANR	3480917	Identifier	ret		3479317	0					
ANR	3480918	PrimaryExpression	0		3479317	1					
ANR	3480919	ElseStatement	else		3479317	0					
ANR	3480920	IfStatement	"if ( ! strncmp ( ptr , "".thumb"" , 6 ) )"		3479317	0					
ANR	3480921	Condition	"! strncmp ( ptr , "".thumb"" , 6 )"	894:15:21004:21030	3479317	0	True				
ANR	3480922	UnaryOperationExpression	"! strncmp ( ptr , "".thumb"" , 6 )"		3479317	0					
ANR	3480923	UnaryOperator	!		3479317	0					
ANR	3480924	CallExpression	"strncmp ( ptr , "".thumb"" , 6 )"		3479317	1					
ANR	3480925	Callee	strncmp		3479317	0					
ANR	3480926	Identifier	strncmp		3479317	0					
ANR	3480927	ArgumentList	ptr		3479317	1					
ANR	3480928	Argument	ptr		3479317	0					
ANR	3480929	Identifier	ptr		3479317	0					
ANR	3480930	Argument	""".thumb"""		3479317	1					
ANR	3480931	PrimaryExpression	""".thumb"""		3479317	0					
ANR	3480932	Argument	6		3479317	2					
ANR	3480933	PrimaryExpression	6		3479317	0					
ANR	3480934	CompoundStatement		211:44:5837:5837	3479317	1					
ANR	3480935	ExpressionStatement	"r_asm_use ( a , ""arm"" )"	895:5:21040:21060	3479317	0	True				
ANR	3480936	CallExpression	"r_asm_use ( a , ""arm"" )"		3479317	0					
ANR	3480937	Callee	r_asm_use		3479317	0					
ANR	3480938	Identifier	r_asm_use		3479317	0					
ANR	3480939	ArgumentList	a		3479317	1					
ANR	3480940	Argument	a		3479317	0					
ANR	3480941	Identifier	a		3479317	0					
ANR	3480942	Argument	"""arm"""		3479317	1					
ANR	3480943	PrimaryExpression	"""arm"""		3479317	0					
ANR	3480944	ExpressionStatement	"r_asm_set_bits ( a , 16 )"	896:5:21067:21089	3479317	1	True				
ANR	3480945	CallExpression	"r_asm_set_bits ( a , 16 )"		3479317	0					
ANR	3480946	Callee	r_asm_set_bits		3479317	0					
ANR	3480947	Identifier	r_asm_set_bits		3479317	0					
ANR	3480948	ArgumentList	a		3479317	1					
ANR	3480949	Argument	a		3479317	0					
ANR	3480950	Identifier	a		3479317	0					
ANR	3480951	Argument	16		3479317	1					
ANR	3480952	PrimaryExpression	16		3479317	0					
ANR	3480953	ExpressionStatement	ret = 0	897:5:21096:21103	3479317	2	True				
ANR	3480954	AssignmentExpression	ret = 0		3479317	0		=			
ANR	3480955	Identifier	ret		3479317	0					
ANR	3480956	PrimaryExpression	0		3479317	1					
ANR	3480957	ElseStatement	else		3479317	0					
ANR	3480958	IfStatement	"if ( ! strncmp ( ptr , "".arch "" , 6 ) )"		3479317	0					
ANR	3480959	Condition	"! strncmp ( ptr , "".arch "" , 6 )"	898:15:21120:21146	3479317	0	True				
ANR	3480960	UnaryOperationExpression	"! strncmp ( ptr , "".arch "" , 6 )"		3479317	0					
ANR	3480961	UnaryOperator	!		3479317	0					
ANR	3480962	CallExpression	"strncmp ( ptr , "".arch "" , 6 )"		3479317	1					
ANR	3480963	Callee	strncmp		3479317	0					
ANR	3480964	Identifier	strncmp		3479317	0					
ANR	3480965	ArgumentList	ptr		3479317	1					
ANR	3480966	Argument	ptr		3479317	0					
ANR	3480967	Identifier	ptr		3479317	0					
ANR	3480968	Argument	""".arch """		3479317	1					
ANR	3480969	PrimaryExpression	""".arch """		3479317	0					
ANR	3480970	Argument	6		3479317	2					
ANR	3480971	PrimaryExpression	6		3479317	0					
ANR	3480972	CompoundStatement		215:44:5953:5953	3479317	1					
ANR	3480973	ExpressionStatement	"ret = r_asm_pseudo_arch ( a , ptr + 6 )"	899:5:21156:21190	3479317	0	True				
ANR	3480974	AssignmentExpression	"ret = r_asm_pseudo_arch ( a , ptr + 6 )"		3479317	0		=			
ANR	3480975	Identifier	ret		3479317	0					
ANR	3480976	CallExpression	"r_asm_pseudo_arch ( a , ptr + 6 )"		3479317	1					
ANR	3480977	Callee	r_asm_pseudo_arch		3479317	0					
ANR	3480978	Identifier	r_asm_pseudo_arch		3479317	0					
ANR	3480979	ArgumentList	a		3479317	1					
ANR	3480980	Argument	a		3479317	0					
ANR	3480981	Identifier	a		3479317	0					
ANR	3480982	Argument	ptr + 6		3479317	1					
ANR	3480983	AdditiveExpression	ptr + 6		3479317	0		+			
ANR	3480984	Identifier	ptr		3479317	0					
ANR	3480985	PrimaryExpression	6		3479317	1					
ANR	3480986	ElseStatement	else		3479317	0					
ANR	3480987	IfStatement	"if ( ! strncmp ( ptr , "".bits "" , 6 ) )"		3479317	0					
ANR	3480988	Condition	"! strncmp ( ptr , "".bits "" , 6 )"	900:15:21207:21233	3479317	0	True				
ANR	3480989	UnaryOperationExpression	"! strncmp ( ptr , "".bits "" , 6 )"		3479317	0					
ANR	3480990	UnaryOperator	!		3479317	0					
ANR	3480991	CallExpression	"strncmp ( ptr , "".bits "" , 6 )"		3479317	1					
ANR	3480992	Callee	strncmp		3479317	0					
ANR	3480993	Identifier	strncmp		3479317	0					
ANR	3480994	ArgumentList	ptr		3479317	1					
ANR	3480995	Argument	ptr		3479317	0					
ANR	3480996	Identifier	ptr		3479317	0					
ANR	3480997	Argument	""".bits """		3479317	1					
ANR	3480998	PrimaryExpression	""".bits """		3479317	0					
ANR	3480999	Argument	6		3479317	2					
ANR	3481000	PrimaryExpression	6		3479317	0					
ANR	3481001	CompoundStatement		217:44:6040:6040	3479317	1					
ANR	3481002	ExpressionStatement	"ret = r_asm_pseudo_bits ( a , ptr + 6 )"	901:5:21243:21277	3479317	0	True				
ANR	3481003	AssignmentExpression	"ret = r_asm_pseudo_bits ( a , ptr + 6 )"		3479317	0		=			
ANR	3481004	Identifier	ret		3479317	0					
ANR	3481005	CallExpression	"r_asm_pseudo_bits ( a , ptr + 6 )"		3479317	1					
ANR	3481006	Callee	r_asm_pseudo_bits		3479317	0					
ANR	3481007	Identifier	r_asm_pseudo_bits		3479317	0					
ANR	3481008	ArgumentList	a		3479317	1					
ANR	3481009	Argument	a		3479317	0					
ANR	3481010	Identifier	a		3479317	0					
ANR	3481011	Argument	ptr + 6		3479317	1					
ANR	3481012	AdditiveExpression	ptr + 6		3479317	0		+			
ANR	3481013	Identifier	ptr		3479317	0					
ANR	3481014	PrimaryExpression	6		3479317	1					
ANR	3481015	ElseStatement	else		3479317	0					
ANR	3481016	IfStatement	"if ( ! strncmp ( ptr , "".fill "" , 6 ) )"		3479317	0					
ANR	3481017	Condition	"! strncmp ( ptr , "".fill "" , 6 )"	902:15:21294:21320	3479317	0	True				
ANR	3481018	UnaryOperationExpression	"! strncmp ( ptr , "".fill "" , 6 )"		3479317	0					
ANR	3481019	UnaryOperator	!		3479317	0					
ANR	3481020	CallExpression	"strncmp ( ptr , "".fill "" , 6 )"		3479317	1					
ANR	3481021	Callee	strncmp		3479317	0					
ANR	3481022	Identifier	strncmp		3479317	0					
ANR	3481023	ArgumentList	ptr		3479317	1					
ANR	3481024	Argument	ptr		3479317	0					
ANR	3481025	Identifier	ptr		3479317	0					
ANR	3481026	Argument	""".fill """		3479317	1					
ANR	3481027	PrimaryExpression	""".fill """		3479317	0					
ANR	3481028	Argument	6		3479317	2					
ANR	3481029	PrimaryExpression	6		3479317	0					
ANR	3481030	CompoundStatement		219:44:6127:6127	3479317	1					
ANR	3481031	ExpressionStatement	"ret = r_asm_pseudo_fill ( & op , ptr + 6 )"	903:5:21330:21366	3479317	0	True				
ANR	3481032	AssignmentExpression	"ret = r_asm_pseudo_fill ( & op , ptr + 6 )"		3479317	0		=			
ANR	3481033	Identifier	ret		3479317	0					
ANR	3481034	CallExpression	"r_asm_pseudo_fill ( & op , ptr + 6 )"		3479317	1					
ANR	3481035	Callee	r_asm_pseudo_fill		3479317	0					
ANR	3481036	Identifier	r_asm_pseudo_fill		3479317	0					
ANR	3481037	ArgumentList	& op		3479317	1					
ANR	3481038	Argument	& op		3479317	0					
ANR	3481039	UnaryOperationExpression	& op		3479317	0					
ANR	3481040	UnaryOperator	&		3479317	0					
ANR	3481041	Identifier	op		3479317	1					
ANR	3481042	Argument	ptr + 6		3479317	1					
ANR	3481043	AdditiveExpression	ptr + 6		3479317	0		+			
ANR	3481044	Identifier	ptr		3479317	0					
ANR	3481045	PrimaryExpression	6		3479317	1					
ANR	3481046	ElseStatement	else		3479317	0					
ANR	3481047	IfStatement	"if ( ! strncmp ( ptr , "".kernel "" , 8 ) )"		3479317	0					
ANR	3481048	Condition	"! strncmp ( ptr , "".kernel "" , 8 )"	904:15:21383:21411	3479317	0	True				
ANR	3481049	UnaryOperationExpression	"! strncmp ( ptr , "".kernel "" , 8 )"		3479317	0					
ANR	3481050	UnaryOperator	!		3479317	0					
ANR	3481051	CallExpression	"strncmp ( ptr , "".kernel "" , 8 )"		3479317	1					
ANR	3481052	Callee	strncmp		3479317	0					
ANR	3481053	Identifier	strncmp		3479317	0					
ANR	3481054	ArgumentList	ptr		3479317	1					
ANR	3481055	Argument	ptr		3479317	0					
ANR	3481056	Identifier	ptr		3479317	0					
ANR	3481057	Argument	""".kernel """		3479317	1					
ANR	3481058	PrimaryExpression	""".kernel """		3479317	0					
ANR	3481059	Argument	8		3479317	2					
ANR	3481060	PrimaryExpression	8		3479317	0					
ANR	3481061	CompoundStatement		221:46:6218:6218	3479317	1					
ANR	3481062	ExpressionStatement	"r_syscall_setup ( a -> syscall , a -> cur -> arch , a -> bits , asmcpu , ptr + 8 )"	905:5:21421:21489	3479317	0	True				
ANR	3481063	CallExpression	"r_syscall_setup ( a -> syscall , a -> cur -> arch , a -> bits , asmcpu , ptr + 8 )"		3479317	0					
ANR	3481064	Callee	r_syscall_setup		3479317	0					
ANR	3481065	Identifier	r_syscall_setup		3479317	0					
ANR	3481066	ArgumentList	a -> syscall		3479317	1					
ANR	3481067	Argument	a -> syscall		3479317	0					
ANR	3481068	PtrMemberAccess	a -> syscall		3479317	0					
ANR	3481069	Identifier	a		3479317	0					
ANR	3481070	Identifier	syscall		3479317	1					
ANR	3481071	Argument	a -> cur -> arch		3479317	1					
ANR	3481072	PtrMemberAccess	a -> cur -> arch		3479317	0					
ANR	3481073	PtrMemberAccess	a -> cur		3479317	0					
ANR	3481074	Identifier	a		3479317	0					
ANR	3481075	Identifier	cur		3479317	1					
ANR	3481076	Identifier	arch		3479317	1					
ANR	3481077	Argument	a -> bits		3479317	2					
ANR	3481078	PtrMemberAccess	a -> bits		3479317	0					
ANR	3481079	Identifier	a		3479317	0					
ANR	3481080	Identifier	bits		3479317	1					
ANR	3481081	Argument	asmcpu		3479317	3					
ANR	3481082	Identifier	asmcpu		3479317	0					
ANR	3481083	Argument	ptr + 8		3479317	4					
ANR	3481084	AdditiveExpression	ptr + 8		3479317	0		+			
ANR	3481085	Identifier	ptr		3479317	0					
ANR	3481086	PrimaryExpression	8		3479317	1					
ANR	3481087	ElseStatement	else		3479317	0					
ANR	3481088	IfStatement	"if ( ! strncmp ( ptr , "".cpu "" , 5 ) )"		3479317	0					
ANR	3481089	Condition	"! strncmp ( ptr , "".cpu "" , 5 )"	906:15:21506:21531	3479317	0	True				
ANR	3481090	UnaryOperationExpression	"! strncmp ( ptr , "".cpu "" , 5 )"		3479317	0					
ANR	3481091	UnaryOperator	!		3479317	0					
ANR	3481092	CallExpression	"strncmp ( ptr , "".cpu "" , 5 )"		3479317	1					
ANR	3481093	Callee	strncmp		3479317	0					
ANR	3481094	Identifier	strncmp		3479317	0					
ANR	3481095	ArgumentList	ptr		3479317	1					
ANR	3481096	Argument	ptr		3479317	0					
ANR	3481097	Identifier	ptr		3479317	0					
ANR	3481098	Argument	""".cpu """		3479317	1					
ANR	3481099	PrimaryExpression	""".cpu """		3479317	0					
ANR	3481100	Argument	5		3479317	2					
ANR	3481101	PrimaryExpression	5		3479317	0					
ANR	3481102	CompoundStatement		223:43:6338:6338	3479317	1					
ANR	3481103	ExpressionStatement	"r_asm_set_cpu ( a , ptr + 5 )"	907:5:21541:21567	3479317	0	True				
ANR	3481104	CallExpression	"r_asm_set_cpu ( a , ptr + 5 )"		3479317	0					
ANR	3481105	Callee	r_asm_set_cpu		3479317	0					
ANR	3481106	Identifier	r_asm_set_cpu		3479317	0					
ANR	3481107	ArgumentList	a		3479317	1					
ANR	3481108	Argument	a		3479317	0					
ANR	3481109	Identifier	a		3479317	0					
ANR	3481110	Argument	ptr + 5		3479317	1					
ANR	3481111	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481112	Identifier	ptr		3479317	0					
ANR	3481113	PrimaryExpression	5		3479317	1					
ANR	3481114	ElseStatement	else		3479317	0					
ANR	3481115	IfStatement	"if ( ! strncmp ( ptr , "".os "" , 4 ) )"		3479317	0					
ANR	3481116	Condition	"! strncmp ( ptr , "".os "" , 4 )"	908:15:21584:21608	3479317	0	True				
ANR	3481117	UnaryOperationExpression	"! strncmp ( ptr , "".os "" , 4 )"		3479317	0					
ANR	3481118	UnaryOperator	!		3479317	0					
ANR	3481119	CallExpression	"strncmp ( ptr , "".os "" , 4 )"		3479317	1					
ANR	3481120	Callee	strncmp		3479317	0					
ANR	3481121	Identifier	strncmp		3479317	0					
ANR	3481122	ArgumentList	ptr		3479317	1					
ANR	3481123	Argument	ptr		3479317	0					
ANR	3481124	Identifier	ptr		3479317	0					
ANR	3481125	Argument	""".os """		3479317	1					
ANR	3481126	PrimaryExpression	""".os """		3479317	0					
ANR	3481127	Argument	4		3479317	2					
ANR	3481128	PrimaryExpression	4		3479317	0					
ANR	3481129	CompoundStatement		225:42:6415:6415	3479317	1					
ANR	3481130	ExpressionStatement	"r_syscall_setup ( a -> syscall , a -> cur -> arch , a -> bits , asmcpu , ptr + 4 )"	909:5:21618:21686	3479317	0	True				
ANR	3481131	CallExpression	"r_syscall_setup ( a -> syscall , a -> cur -> arch , a -> bits , asmcpu , ptr + 4 )"		3479317	0					
ANR	3481132	Callee	r_syscall_setup		3479317	0					
ANR	3481133	Identifier	r_syscall_setup		3479317	0					
ANR	3481134	ArgumentList	a -> syscall		3479317	1					
ANR	3481135	Argument	a -> syscall		3479317	0					
ANR	3481136	PtrMemberAccess	a -> syscall		3479317	0					
ANR	3481137	Identifier	a		3479317	0					
ANR	3481138	Identifier	syscall		3479317	1					
ANR	3481139	Argument	a -> cur -> arch		3479317	1					
ANR	3481140	PtrMemberAccess	a -> cur -> arch		3479317	0					
ANR	3481141	PtrMemberAccess	a -> cur		3479317	0					
ANR	3481142	Identifier	a		3479317	0					
ANR	3481143	Identifier	cur		3479317	1					
ANR	3481144	Identifier	arch		3479317	1					
ANR	3481145	Argument	a -> bits		3479317	2					
ANR	3481146	PtrMemberAccess	a -> bits		3479317	0					
ANR	3481147	Identifier	a		3479317	0					
ANR	3481148	Identifier	bits		3479317	1					
ANR	3481149	Argument	asmcpu		3479317	3					
ANR	3481150	Identifier	asmcpu		3479317	0					
ANR	3481151	Argument	ptr + 4		3479317	4					
ANR	3481152	AdditiveExpression	ptr + 4		3479317	0		+			
ANR	3481153	Identifier	ptr		3479317	0					
ANR	3481154	PrimaryExpression	4		3479317	1					
ANR	3481155	ElseStatement	else		3479317	0					
ANR	3481156	IfStatement	"if ( ! strncmp ( ptr , "".hex "" , 5 ) )"		3479317	0					
ANR	3481157	Condition	"! strncmp ( ptr , "".hex "" , 5 )"	910:15:21703:21728	3479317	0	True				
ANR	3481158	UnaryOperationExpression	"! strncmp ( ptr , "".hex "" , 5 )"		3479317	0					
ANR	3481159	UnaryOperator	!		3479317	0					
ANR	3481160	CallExpression	"strncmp ( ptr , "".hex "" , 5 )"		3479317	1					
ANR	3481161	Callee	strncmp		3479317	0					
ANR	3481162	Identifier	strncmp		3479317	0					
ANR	3481163	ArgumentList	ptr		3479317	1					
ANR	3481164	Argument	ptr		3479317	0					
ANR	3481165	Identifier	ptr		3479317	0					
ANR	3481166	Argument	""".hex """		3479317	1					
ANR	3481167	PrimaryExpression	""".hex """		3479317	0					
ANR	3481168	Argument	5		3479317	2					
ANR	3481169	PrimaryExpression	5		3479317	0					
ANR	3481170	CompoundStatement		227:43:6535:6535	3479317	1					
ANR	3481171	ExpressionStatement	"ret = r_asm_op_set_hex ( & op , ptr + 5 )"	911:5:21738:21775	3479317	0	True				
ANR	3481172	AssignmentExpression	"ret = r_asm_op_set_hex ( & op , ptr + 5 )"		3479317	0		=			
ANR	3481173	Identifier	ret		3479317	0					
ANR	3481174	CallExpression	"r_asm_op_set_hex ( & op , ptr + 5 )"		3479317	1					
ANR	3481175	Callee	r_asm_op_set_hex		3479317	0					
ANR	3481176	Identifier	r_asm_op_set_hex		3479317	0					
ANR	3481177	ArgumentList	& op		3479317	1					
ANR	3481178	Argument	& op		3479317	0					
ANR	3481179	UnaryOperationExpression	& op		3479317	0					
ANR	3481180	UnaryOperator	&		3479317	0					
ANR	3481181	Identifier	op		3479317	1					
ANR	3481182	Argument	ptr + 5		3479317	1					
ANR	3481183	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481184	Identifier	ptr		3479317	0					
ANR	3481185	PrimaryExpression	5		3479317	1					
ANR	3481186	ElseStatement	else		3479317	0					
ANR	3481187	IfStatement	"if ( ( ! strncmp ( ptr , "".int16 "" , 7 ) ) || ! strncmp ( ptr , "".short "" , 7 ) )"		3479317	0					
ANR	3481188	Condition	"( ! strncmp ( ptr , "".int16 "" , 7 ) ) || ! strncmp ( ptr , "".short "" , 7 )"	912:15:21792:21853	3479317	0	True				
ANR	3481189	OrExpression	"( ! strncmp ( ptr , "".int16 "" , 7 ) ) || ! strncmp ( ptr , "".short "" , 7 )"		3479317	0		||			
ANR	3481190	UnaryOperationExpression	"! strncmp ( ptr , "".int16 "" , 7 )"		3479317	0					
ANR	3481191	UnaryOperator	!		3479317	0					
ANR	3481192	CallExpression	"strncmp ( ptr , "".int16 "" , 7 )"		3479317	1					
ANR	3481193	Callee	strncmp		3479317	0					
ANR	3481194	Identifier	strncmp		3479317	0					
ANR	3481195	ArgumentList	ptr		3479317	1					
ANR	3481196	Argument	ptr		3479317	0					
ANR	3481197	Identifier	ptr		3479317	0					
ANR	3481198	Argument	""".int16 """		3479317	1					
ANR	3481199	PrimaryExpression	""".int16 """		3479317	0					
ANR	3481200	Argument	7		3479317	2					
ANR	3481201	PrimaryExpression	7		3479317	0					
ANR	3481202	UnaryOperationExpression	"! strncmp ( ptr , "".short "" , 7 )"		3479317	1					
ANR	3481203	UnaryOperator	!		3479317	0					
ANR	3481204	CallExpression	"strncmp ( ptr , "".short "" , 7 )"		3479317	1					
ANR	3481205	Callee	strncmp		3479317	0					
ANR	3481206	Identifier	strncmp		3479317	0					
ANR	3481207	ArgumentList	ptr		3479317	1					
ANR	3481208	Argument	ptr		3479317	0					
ANR	3481209	Identifier	ptr		3479317	0					
ANR	3481210	Argument	""".short """		3479317	1					
ANR	3481211	PrimaryExpression	""".short """		3479317	0					
ANR	3481212	Argument	7		3479317	2					
ANR	3481213	PrimaryExpression	7		3479317	0					
ANR	3481214	CompoundStatement		229:79:6660:6660	3479317	1					
ANR	3481215	ExpressionStatement	"ret = r_asm_pseudo_int16 ( a , & op , ptr + 7 )"	913:5:21863:21905	3479317	0	True				
ANR	3481216	AssignmentExpression	"ret = r_asm_pseudo_int16 ( a , & op , ptr + 7 )"		3479317	0		=			
ANR	3481217	Identifier	ret		3479317	0					
ANR	3481218	CallExpression	"r_asm_pseudo_int16 ( a , & op , ptr + 7 )"		3479317	1					
ANR	3481219	Callee	r_asm_pseudo_int16		3479317	0					
ANR	3481220	Identifier	r_asm_pseudo_int16		3479317	0					
ANR	3481221	ArgumentList	a		3479317	1					
ANR	3481222	Argument	a		3479317	0					
ANR	3481223	Identifier	a		3479317	0					
ANR	3481224	Argument	& op		3479317	1					
ANR	3481225	UnaryOperationExpression	& op		3479317	0					
ANR	3481226	UnaryOperator	&		3479317	0					
ANR	3481227	Identifier	op		3479317	1					
ANR	3481228	Argument	ptr + 7		3479317	2					
ANR	3481229	AdditiveExpression	ptr + 7		3479317	0		+			
ANR	3481230	Identifier	ptr		3479317	0					
ANR	3481231	PrimaryExpression	7		3479317	1					
ANR	3481232	ElseStatement	else		3479317	0					
ANR	3481233	IfStatement	"if ( ! strncmp ( ptr , "".int32 "" , 7 ) )"		3479317	0					
ANR	3481234	Condition	"! strncmp ( ptr , "".int32 "" , 7 )"	914:15:21922:21949	3479317	0	True				
ANR	3481235	UnaryOperationExpression	"! strncmp ( ptr , "".int32 "" , 7 )"		3479317	0					
ANR	3481236	UnaryOperator	!		3479317	0					
ANR	3481237	CallExpression	"strncmp ( ptr , "".int32 "" , 7 )"		3479317	1					
ANR	3481238	Callee	strncmp		3479317	0					
ANR	3481239	Identifier	strncmp		3479317	0					
ANR	3481240	ArgumentList	ptr		3479317	1					
ANR	3481241	Argument	ptr		3479317	0					
ANR	3481242	Identifier	ptr		3479317	0					
ANR	3481243	Argument	""".int32 """		3479317	1					
ANR	3481244	PrimaryExpression	""".int32 """		3479317	0					
ANR	3481245	Argument	7		3479317	2					
ANR	3481246	PrimaryExpression	7		3479317	0					
ANR	3481247	CompoundStatement		231:45:6756:6756	3479317	1					
ANR	3481248	ExpressionStatement	"ret = r_asm_pseudo_int32 ( a , & op , ptr + 7 )"	915:5:21959:22001	3479317	0	True				
ANR	3481249	AssignmentExpression	"ret = r_asm_pseudo_int32 ( a , & op , ptr + 7 )"		3479317	0		=			
ANR	3481250	Identifier	ret		3479317	0					
ANR	3481251	CallExpression	"r_asm_pseudo_int32 ( a , & op , ptr + 7 )"		3479317	1					
ANR	3481252	Callee	r_asm_pseudo_int32		3479317	0					
ANR	3481253	Identifier	r_asm_pseudo_int32		3479317	0					
ANR	3481254	ArgumentList	a		3479317	1					
ANR	3481255	Argument	a		3479317	0					
ANR	3481256	Identifier	a		3479317	0					
ANR	3481257	Argument	& op		3479317	1					
ANR	3481258	UnaryOperationExpression	& op		3479317	0					
ANR	3481259	UnaryOperator	&		3479317	0					
ANR	3481260	Identifier	op		3479317	1					
ANR	3481261	Argument	ptr + 7		3479317	2					
ANR	3481262	AdditiveExpression	ptr + 7		3479317	0		+			
ANR	3481263	Identifier	ptr		3479317	0					
ANR	3481264	PrimaryExpression	7		3479317	1					
ANR	3481265	ElseStatement	else		3479317	0					
ANR	3481266	IfStatement	"if ( ! strncmp ( ptr , "".int64 "" , 7 ) )"		3479317	0					
ANR	3481267	Condition	"! strncmp ( ptr , "".int64 "" , 7 )"	916:15:22018:22045	3479317	0	True				
ANR	3481268	UnaryOperationExpression	"! strncmp ( ptr , "".int64 "" , 7 )"		3479317	0					
ANR	3481269	UnaryOperator	!		3479317	0					
ANR	3481270	CallExpression	"strncmp ( ptr , "".int64 "" , 7 )"		3479317	1					
ANR	3481271	Callee	strncmp		3479317	0					
ANR	3481272	Identifier	strncmp		3479317	0					
ANR	3481273	ArgumentList	ptr		3479317	1					
ANR	3481274	Argument	ptr		3479317	0					
ANR	3481275	Identifier	ptr		3479317	0					
ANR	3481276	Argument	""".int64 """		3479317	1					
ANR	3481277	PrimaryExpression	""".int64 """		3479317	0					
ANR	3481278	Argument	7		3479317	2					
ANR	3481279	PrimaryExpression	7		3479317	0					
ANR	3481280	CompoundStatement		233:45:6852:6852	3479317	1					
ANR	3481281	ExpressionStatement	"ret = r_asm_pseudo_int64 ( a , & op , ptr + 7 )"	917:5:22055:22097	3479317	0	True				
ANR	3481282	AssignmentExpression	"ret = r_asm_pseudo_int64 ( a , & op , ptr + 7 )"		3479317	0		=			
ANR	3481283	Identifier	ret		3479317	0					
ANR	3481284	CallExpression	"r_asm_pseudo_int64 ( a , & op , ptr + 7 )"		3479317	1					
ANR	3481285	Callee	r_asm_pseudo_int64		3479317	0					
ANR	3481286	Identifier	r_asm_pseudo_int64		3479317	0					
ANR	3481287	ArgumentList	a		3479317	1					
ANR	3481288	Argument	a		3479317	0					
ANR	3481289	Identifier	a		3479317	0					
ANR	3481290	Argument	& op		3479317	1					
ANR	3481291	UnaryOperationExpression	& op		3479317	0					
ANR	3481292	UnaryOperator	&		3479317	0					
ANR	3481293	Identifier	op		3479317	1					
ANR	3481294	Argument	ptr + 7		3479317	2					
ANR	3481295	AdditiveExpression	ptr + 7		3479317	0		+			
ANR	3481296	Identifier	ptr		3479317	0					
ANR	3481297	PrimaryExpression	7		3479317	1					
ANR	3481298	ElseStatement	else		3479317	0					
ANR	3481299	IfStatement	"if ( ! strncmp ( ptr , "".size"" , 5 ) )"		3479317	0					
ANR	3481300	Condition	"! strncmp ( ptr , "".size"" , 5 )"	918:15:22114:22139	3479317	0	True				
ANR	3481301	UnaryOperationExpression	"! strncmp ( ptr , "".size"" , 5 )"		3479317	0					
ANR	3481302	UnaryOperator	!		3479317	0					
ANR	3481303	CallExpression	"strncmp ( ptr , "".size"" , 5 )"		3479317	1					
ANR	3481304	Callee	strncmp		3479317	0					
ANR	3481305	Identifier	strncmp		3479317	0					
ANR	3481306	ArgumentList	ptr		3479317	1					
ANR	3481307	Argument	ptr		3479317	0					
ANR	3481308	Identifier	ptr		3479317	0					
ANR	3481309	Argument	""".size"""		3479317	1					
ANR	3481310	PrimaryExpression	""".size"""		3479317	0					
ANR	3481311	Argument	5		3479317	2					
ANR	3481312	PrimaryExpression	5		3479317	0					
ANR	3481313	CompoundStatement		235:43:6946:6946	3479317	1					
ANR	3481314	ExpressionStatement	ret = true	919:5:22149:22159	3479317	0	True				
ANR	3481315	AssignmentExpression	ret = true		3479317	0		=			
ANR	3481316	Identifier	ret		3479317	0					
ANR	3481317	Identifier	true		3479317	1					
ANR	3481318	ElseStatement	else		3479317	0					
ANR	3481319	IfStatement	"if ( ! strncmp ( ptr , "".section"" , 8 ) )"		3479317	0					
ANR	3481320	Condition	"! strncmp ( ptr , "".section"" , 8 )"	920:15:22199:22227	3479317	0	True				
ANR	3481321	UnaryOperationExpression	"! strncmp ( ptr , "".section"" , 8 )"		3479317	0					
ANR	3481322	UnaryOperator	!		3479317	0					
ANR	3481323	CallExpression	"strncmp ( ptr , "".section"" , 8 )"		3479317	1					
ANR	3481324	Callee	strncmp		3479317	0					
ANR	3481325	Identifier	strncmp		3479317	0					
ANR	3481326	ArgumentList	ptr		3479317	1					
ANR	3481327	Argument	ptr		3479317	0					
ANR	3481328	Identifier	ptr		3479317	0					
ANR	3481329	Argument	""".section"""		3479317	1					
ANR	3481330	PrimaryExpression	""".section"""		3479317	0					
ANR	3481331	Argument	8		3479317	2					
ANR	3481332	PrimaryExpression	8		3479317	0					
ANR	3481333	CompoundStatement		237:46:7034:7034	3479317	1					
ANR	3481334	ExpressionStatement	ret = true	921:5:22237:22247	3479317	0	True				
ANR	3481335	AssignmentExpression	ret = true		3479317	0		=			
ANR	3481336	Identifier	ret		3479317	0					
ANR	3481337	Identifier	true		3479317	1					
ANR	3481338	ElseStatement	else		3479317	0					
ANR	3481339	IfStatement	"if ( ( ! strncmp ( ptr , "".byte "" , 6 ) ) || ( ! strncmp ( ptr , "".int8 "" , 6 ) ) )"		3479317	0					
ANR	3481340	Condition	"( ! strncmp ( ptr , "".byte "" , 6 ) ) || ( ! strncmp ( ptr , "".int8 "" , 6 ) )"	922:15:22287:22348	3479317	0	True				
ANR	3481341	OrExpression	"( ! strncmp ( ptr , "".byte "" , 6 ) ) || ( ! strncmp ( ptr , "".int8 "" , 6 ) )"		3479317	0		||			
ANR	3481342	UnaryOperationExpression	"! strncmp ( ptr , "".byte "" , 6 )"		3479317	0					
ANR	3481343	UnaryOperator	!		3479317	0					
ANR	3481344	CallExpression	"strncmp ( ptr , "".byte "" , 6 )"		3479317	1					
ANR	3481345	Callee	strncmp		3479317	0					
ANR	3481346	Identifier	strncmp		3479317	0					
ANR	3481347	ArgumentList	ptr		3479317	1					
ANR	3481348	Argument	ptr		3479317	0					
ANR	3481349	Identifier	ptr		3479317	0					
ANR	3481350	Argument	""".byte """		3479317	1					
ANR	3481351	PrimaryExpression	""".byte """		3479317	0					
ANR	3481352	Argument	6		3479317	2					
ANR	3481353	PrimaryExpression	6		3479317	0					
ANR	3481354	UnaryOperationExpression	"! strncmp ( ptr , "".int8 "" , 6 )"		3479317	1					
ANR	3481355	UnaryOperator	!		3479317	0					
ANR	3481356	CallExpression	"strncmp ( ptr , "".int8 "" , 6 )"		3479317	1					
ANR	3481357	Callee	strncmp		3479317	0					
ANR	3481358	Identifier	strncmp		3479317	0					
ANR	3481359	ArgumentList	ptr		3479317	1					
ANR	3481360	Argument	ptr		3479317	0					
ANR	3481361	Identifier	ptr		3479317	0					
ANR	3481362	Argument	""".int8 """		3479317	1					
ANR	3481363	PrimaryExpression	""".int8 """		3479317	0					
ANR	3481364	Argument	6		3479317	2					
ANR	3481365	PrimaryExpression	6		3479317	0					
ANR	3481366	CompoundStatement		239:79:7155:7155	3479317	1					
ANR	3481367	ExpressionStatement	"ret = r_asm_pseudo_byte ( & op , ptr + 6 )"	923:5:22358:22396	3479317	0	True				
ANR	3481368	AssignmentExpression	"ret = r_asm_pseudo_byte ( & op , ptr + 6 )"		3479317	0		=			
ANR	3481369	Identifier	ret		3479317	0					
ANR	3481370	CallExpression	"r_asm_pseudo_byte ( & op , ptr + 6 )"		3479317	1					
ANR	3481371	Callee	r_asm_pseudo_byte		3479317	0					
ANR	3481372	Identifier	r_asm_pseudo_byte		3479317	0					
ANR	3481373	ArgumentList	& op		3479317	1					
ANR	3481374	Argument	& op		3479317	0					
ANR	3481375	UnaryOperationExpression	& op		3479317	0					
ANR	3481376	UnaryOperator	&		3479317	0					
ANR	3481377	Identifier	op		3479317	1					
ANR	3481378	Argument	ptr + 6		3479317	1					
ANR	3481379	AdditiveExpression	ptr + 6		3479317	0		+			
ANR	3481380	Identifier	ptr		3479317	0					
ANR	3481381	PrimaryExpression	6		3479317	1					
ANR	3481382	ElseStatement	else		3479317	0					
ANR	3481383	IfStatement	"if ( ! strncmp ( ptr , "".glob"" , 5 ) )"		3479317	0					
ANR	3481384	Condition	"! strncmp ( ptr , "".glob"" , 5 )"	924:15:22413:22438	3479317	0	True				
ANR	3481385	UnaryOperationExpression	"! strncmp ( ptr , "".glob"" , 5 )"		3479317	0					
ANR	3481386	UnaryOperator	!		3479317	0					
ANR	3481387	CallExpression	"strncmp ( ptr , "".glob"" , 5 )"		3479317	1					
ANR	3481388	Callee	strncmp		3479317	0					
ANR	3481389	Identifier	strncmp		3479317	0					
ANR	3481390	ArgumentList	ptr		3479317	1					
ANR	3481391	Argument	ptr		3479317	0					
ANR	3481392	Identifier	ptr		3479317	0					
ANR	3481393	Argument	""".glob"""		3479317	1					
ANR	3481394	PrimaryExpression	""".glob"""		3479317	0					
ANR	3481395	Argument	5		3479317	2					
ANR	3481396	PrimaryExpression	5		3479317	0					
ANR	3481397	CompoundStatement		241:43:7245:7245	3479317	1					
ANR	3481398	ExpressionStatement	ret = 0	926:5:22532:22539	3479317	0	True				
ANR	3481399	AssignmentExpression	ret = 0		3479317	0		=			
ANR	3481400	Identifier	ret		3479317	0					
ANR	3481401	PrimaryExpression	0		3479317	1					
ANR	3481402	ContinueStatement	continue ;	927:5:22546:22554	3479317	1	True				
ANR	3481403	ElseStatement	else		3479317	0					
ANR	3481404	IfStatement	"if ( ! strncmp ( ptr , "".equ "" , 5 ) )"		3479317	0					
ANR	3481405	Condition	"! strncmp ( ptr , "".equ "" , 5 )"	928:15:22571:22596	3479317	0	True				
ANR	3481406	UnaryOperationExpression	"! strncmp ( ptr , "".equ "" , 5 )"		3479317	0					
ANR	3481407	UnaryOperator	!		3479317	0					
ANR	3481408	CallExpression	"strncmp ( ptr , "".equ "" , 5 )"		3479317	1					
ANR	3481409	Callee	strncmp		3479317	0					
ANR	3481410	Identifier	strncmp		3479317	0					
ANR	3481411	ArgumentList	ptr		3479317	1					
ANR	3481412	Argument	ptr		3479317	0					
ANR	3481413	Identifier	ptr		3479317	0					
ANR	3481414	Argument	""".equ """		3479317	1					
ANR	3481415	PrimaryExpression	""".equ """		3479317	0					
ANR	3481416	Argument	5		3479317	2					
ANR	3481417	PrimaryExpression	5		3479317	0					
ANR	3481418	CompoundStatement		245:43:7403:7403	3479317	1					
ANR	3481419	ExpressionStatement	"ptr2 = strchr ( ptr + 5 , ',' )"	929:5:22606:22634	3479317	0	True				
ANR	3481420	AssignmentExpression	"ptr2 = strchr ( ptr + 5 , ',' )"		3479317	0		=			
ANR	3481421	Identifier	ptr2		3479317	0					
ANR	3481422	CallExpression	"strchr ( ptr + 5 , ',' )"		3479317	1					
ANR	3481423	Callee	strchr		3479317	0					
ANR	3481424	Identifier	strchr		3479317	0					
ANR	3481425	ArgumentList	ptr + 5		3479317	1					
ANR	3481426	Argument	ptr + 5		3479317	0					
ANR	3481427	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481428	Identifier	ptr		3479317	0					
ANR	3481429	PrimaryExpression	5		3479317	1					
ANR	3481430	Argument	"','"		3479317	1					
ANR	3481431	PrimaryExpression	"','"		3479317	0					
ANR	3481432	IfStatement	if ( ! ptr2 )		3479317	1					
ANR	3481433	Condition	! ptr2	930:9:22645:22649	3479317	0	True				
ANR	3481434	UnaryOperationExpression	! ptr2		3479317	0					
ANR	3481435	UnaryOperator	!		3479317	0					
ANR	3481436	Identifier	ptr2		3479317	1					
ANR	3481437	CompoundStatement		247:16:7456:7456	3479317	1					
ANR	3481438	ExpressionStatement	"ptr2 = strchr ( ptr + 5 , '=' )"	931:6:22660:22688	3479317	0	True				
ANR	3481439	AssignmentExpression	"ptr2 = strchr ( ptr + 5 , '=' )"		3479317	0		=			
ANR	3481440	Identifier	ptr2		3479317	0					
ANR	3481441	CallExpression	"strchr ( ptr + 5 , '=' )"		3479317	1					
ANR	3481442	Callee	strchr		3479317	0					
ANR	3481443	Identifier	strchr		3479317	0					
ANR	3481444	ArgumentList	ptr + 5		3479317	1					
ANR	3481445	Argument	ptr + 5		3479317	0					
ANR	3481446	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481447	Identifier	ptr		3479317	0					
ANR	3481448	PrimaryExpression	5		3479317	1					
ANR	3481449	Argument	'='		3479317	1					
ANR	3481450	PrimaryExpression	'='		3479317	0					
ANR	3481451	IfStatement	if ( ! ptr2 )		3479317	2					
ANR	3481452	Condition	! ptr2	933:9:22706:22710	3479317	0	True				
ANR	3481453	UnaryOperationExpression	! ptr2		3479317	0					
ANR	3481454	UnaryOperator	!		3479317	0					
ANR	3481455	Identifier	ptr2		3479317	1					
ANR	3481456	CompoundStatement		250:16:7517:7517	3479317	1					
ANR	3481457	ExpressionStatement	"ptr2 = strchr ( ptr + 5 , ' ' )"	934:6:22721:22749	3479317	0	True				
ANR	3481458	AssignmentExpression	"ptr2 = strchr ( ptr + 5 , ' ' )"		3479317	0		=			
ANR	3481459	Identifier	ptr2		3479317	0					
ANR	3481460	CallExpression	"strchr ( ptr + 5 , ' ' )"		3479317	1					
ANR	3481461	Callee	strchr		3479317	0					
ANR	3481462	Identifier	strchr		3479317	0					
ANR	3481463	ArgumentList	ptr + 5		3479317	1					
ANR	3481464	Argument	ptr + 5		3479317	0					
ANR	3481465	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481466	Identifier	ptr		3479317	0					
ANR	3481467	PrimaryExpression	5		3479317	1					
ANR	3481468	Argument	' '		3479317	1					
ANR	3481469	PrimaryExpression	' '		3479317	0					
ANR	3481470	IfStatement	if ( ptr2 )		3479317	3					
ANR	3481471	Condition	ptr2	936:9:22767:22770	3479317	0	True				
ANR	3481472	Identifier	ptr2		3479317	0					
ANR	3481473	CompoundStatement		253:15:7577:7577	3479317	1					
ANR	3481474	ExpressionStatement	* ptr2 = '\\0'	937:6:22781:22793	3479317	0	True				
ANR	3481475	AssignmentExpression	* ptr2 = '\\0'		3479317	0		=			
ANR	3481476	UnaryOperationExpression	* ptr2		3479317	0					
ANR	3481477	UnaryOperator	*		3479317	0					
ANR	3481478	Identifier	ptr2		3479317	1					
ANR	3481479	PrimaryExpression	'\\0'		3479317	1					
ANR	3481480	ExpressionStatement	"r_asm_code_set_equ ( acode , ptr + 5 , ptr2 + 1 )"	938:6:22801:22846	3479317	1	True				
ANR	3481481	CallExpression	"r_asm_code_set_equ ( acode , ptr + 5 , ptr2 + 1 )"		3479317	0					
ANR	3481482	Callee	r_asm_code_set_equ		3479317	0					
ANR	3481483	Identifier	r_asm_code_set_equ		3479317	0					
ANR	3481484	ArgumentList	acode		3479317	1					
ANR	3481485	Argument	acode		3479317	0					
ANR	3481486	Identifier	acode		3479317	0					
ANR	3481487	Argument	ptr + 5		3479317	1					
ANR	3481488	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481489	Identifier	ptr		3479317	0					
ANR	3481490	PrimaryExpression	5		3479317	1					
ANR	3481491	Argument	ptr2 + 1		3479317	2					
ANR	3481492	AdditiveExpression	ptr2 + 1		3479317	0		+			
ANR	3481493	Identifier	ptr2		3479317	0					
ANR	3481494	PrimaryExpression	1		3479317	1					
ANR	3481495	ElseStatement	else		3479317	0					
ANR	3481496	CompoundStatement		256:12:7664:7664	3479317	0					
ANR	3481497	ExpressionStatement	"eprintf ( ""Invalid syntax for '.equ': Use '.equ <word> <word>'\\n"" )"	940:6:22868:22933	3479317	0	True				
ANR	3481498	CallExpression	"eprintf ( ""Invalid syntax for '.equ': Use '.equ <word> <word>'\\n"" )"		3479317	0					
ANR	3481499	Callee	eprintf		3479317	0					
ANR	3481500	Identifier	eprintf		3479317	0					
ANR	3481501	ArgumentList	"""Invalid syntax for '.equ': Use '.equ <word> <word>'\\n"""		3479317	1					
ANR	3481502	Argument	"""Invalid syntax for '.equ': Use '.equ <word> <word>'\\n"""		3479317	0					
ANR	3481503	PrimaryExpression	"""Invalid syntax for '.equ': Use '.equ <word> <word>'\\n"""		3479317	0					
ANR	3481504	ElseStatement	else		3479317	0					
ANR	3481505	IfStatement	"if ( ! strncmp ( ptr , "".org "" , 5 ) )"		3479317	0					
ANR	3481506	Condition	"! strncmp ( ptr , "".org "" , 5 )"	942:15:22957:22982	3479317	0	True				
ANR	3481507	UnaryOperationExpression	"! strncmp ( ptr , "".org "" , 5 )"		3479317	0					
ANR	3481508	UnaryOperator	!		3479317	0					
ANR	3481509	CallExpression	"strncmp ( ptr , "".org "" , 5 )"		3479317	1					
ANR	3481510	Callee	strncmp		3479317	0					
ANR	3481511	Identifier	strncmp		3479317	0					
ANR	3481512	ArgumentList	ptr		3479317	1					
ANR	3481513	Argument	ptr		3479317	0					
ANR	3481514	Identifier	ptr		3479317	0					
ANR	3481515	Argument	""".org """		3479317	1					
ANR	3481516	PrimaryExpression	""".org """		3479317	0					
ANR	3481517	Argument	5		3479317	2					
ANR	3481518	PrimaryExpression	5		3479317	0					
ANR	3481519	CompoundStatement		259:43:7789:7789	3479317	1					
ANR	3481520	ExpressionStatement	"ret = r_asm_pseudo_org ( a , ptr + 5 )"	943:5:22992:23027	3479317	0	True				
ANR	3481521	AssignmentExpression	"ret = r_asm_pseudo_org ( a , ptr + 5 )"		3479317	0		=			
ANR	3481522	Identifier	ret		3479317	0					
ANR	3481523	CallExpression	"r_asm_pseudo_org ( a , ptr + 5 )"		3479317	1					
ANR	3481524	Callee	r_asm_pseudo_org		3479317	0					
ANR	3481525	Identifier	r_asm_pseudo_org		3479317	0					
ANR	3481526	ArgumentList	a		3479317	1					
ANR	3481527	Argument	a		3479317	0					
ANR	3481528	Identifier	a		3479317	0					
ANR	3481529	Argument	ptr + 5		3479317	1					
ANR	3481530	AdditiveExpression	ptr + 5		3479317	0		+			
ANR	3481531	Identifier	ptr		3479317	0					
ANR	3481532	PrimaryExpression	5		3479317	1					
ANR	3481533	ExpressionStatement	off = a -> pc	944:5:23034:23045	3479317	1	True				
ANR	3481534	AssignmentExpression	off = a -> pc		3479317	0		=			
ANR	3481535	Identifier	off		3479317	0					
ANR	3481536	PtrMemberAccess	a -> pc		3479317	1					
ANR	3481537	Identifier	a		3479317	0					
ANR	3481538	Identifier	pc		3479317	1					
ANR	3481539	ElseStatement	else		3479317	0					
ANR	3481540	IfStatement	"if ( r_str_startswith ( ptr , "".offset "" ) )"		3479317	0					
ANR	3481541	Condition	"r_str_startswith ( ptr , "".offset "" )"	945:15:23062:23095	3479317	0	True				
ANR	3481542	CallExpression	"r_str_startswith ( ptr , "".offset "" )"		3479317	0					
ANR	3481543	Callee	r_str_startswith		3479317	0					
ANR	3481544	Identifier	r_str_startswith		3479317	0					
ANR	3481545	ArgumentList	ptr		3479317	1					
ANR	3481546	Argument	ptr		3479317	0					
ANR	3481547	Identifier	ptr		3479317	0					
ANR	3481548	Argument	""".offset """		3479317	1					
ANR	3481549	PrimaryExpression	""".offset """		3479317	0					
ANR	3481550	CompoundStatement		262:51:7902:7902	3479317	1					
ANR	3481551	ExpressionStatement	"eprintf ( ""Invalid use of the .offset directory. This directive is only supported in r2 -c 'waf'.\\n"" )"	946:5:23105:23205	3479317	0	True				
ANR	3481552	CallExpression	"eprintf ( ""Invalid use of the .offset directory. This directive is only supported in r2 -c 'waf'.\\n"" )"		3479317	0					
ANR	3481553	Callee	eprintf		3479317	0					
ANR	3481554	Identifier	eprintf		3479317	0					
ANR	3481555	ArgumentList	"""Invalid use of the .offset directory. This directive is only supported in r2 -c 'waf'.\\n"""		3479317	1					
ANR	3481556	Argument	"""Invalid use of the .offset directory. This directive is only supported in r2 -c 'waf'.\\n"""		3479317	0					
ANR	3481557	PrimaryExpression	"""Invalid use of the .offset directory. This directive is only supported in r2 -c 'waf'.\\n"""		3479317	0					
ANR	3481558	ElseStatement	else		3479317	0					
ANR	3481559	IfStatement	"if ( ! strncmp ( ptr , "".text"" , 5 ) )"		3479317	0					
ANR	3481560	Condition	"! strncmp ( ptr , "".text"" , 5 )"	947:15:23222:23247	3479317	0	True				
ANR	3481561	UnaryOperationExpression	"! strncmp ( ptr , "".text"" , 5 )"		3479317	0					
ANR	3481562	UnaryOperator	!		3479317	0					
ANR	3481563	CallExpression	"strncmp ( ptr , "".text"" , 5 )"		3479317	1					
ANR	3481564	Callee	strncmp		3479317	0					
ANR	3481565	Identifier	strncmp		3479317	0					
ANR	3481566	ArgumentList	ptr		3479317	1					
ANR	3481567	Argument	ptr		3479317	0					
ANR	3481568	Identifier	ptr		3479317	0					
ANR	3481569	Argument	""".text"""		3479317	1					
ANR	3481570	PrimaryExpression	""".text"""		3479317	0					
ANR	3481571	Argument	5		3479317	2					
ANR	3481572	PrimaryExpression	5		3479317	0					
ANR	3481573	CompoundStatement		264:43:8054:8054	3479317	1					
ANR	3481574	ExpressionStatement	acode -> code_offset = a -> pc	948:5:23257:23283	3479317	0	True				
ANR	3481575	AssignmentExpression	acode -> code_offset = a -> pc		3479317	0		=			
ANR	3481576	PtrMemberAccess	acode -> code_offset		3479317	0					
ANR	3481577	Identifier	acode		3479317	0					
ANR	3481578	Identifier	code_offset		3479317	1					
ANR	3481579	PtrMemberAccess	a -> pc		3479317	1					
ANR	3481580	Identifier	a		3479317	0					
ANR	3481581	Identifier	pc		3479317	1					
ANR	3481582	ElseStatement	else		3479317	0					
ANR	3481583	IfStatement	"if ( ! strncmp ( ptr , "".data"" , 5 ) )"		3479317	0					
ANR	3481584	Condition	"! strncmp ( ptr , "".data"" , 5 )"	949:15:23300:23325	3479317	0	True				
ANR	3481585	UnaryOperationExpression	"! strncmp ( ptr , "".data"" , 5 )"		3479317	0					
ANR	3481586	UnaryOperator	!		3479317	0					
ANR	3481587	CallExpression	"strncmp ( ptr , "".data"" , 5 )"		3479317	1					
ANR	3481588	Callee	strncmp		3479317	0					
ANR	3481589	Identifier	strncmp		3479317	0					
ANR	3481590	ArgumentList	ptr		3479317	1					
ANR	3481591	Argument	ptr		3479317	0					
ANR	3481592	Identifier	ptr		3479317	0					
ANR	3481593	Argument	""".data"""		3479317	1					
ANR	3481594	PrimaryExpression	""".data"""		3479317	0					
ANR	3481595	Argument	5		3479317	2					
ANR	3481596	PrimaryExpression	5		3479317	0					
ANR	3481597	CompoundStatement		266:43:8132:8132	3479317	1					
ANR	3481598	ExpressionStatement	acode -> data_offset = a -> pc	950:5:23335:23361	3479317	0	True				
ANR	3481599	AssignmentExpression	acode -> data_offset = a -> pc		3479317	0		=			
ANR	3481600	PtrMemberAccess	acode -> data_offset		3479317	0					
ANR	3481601	Identifier	acode		3479317	0					
ANR	3481602	Identifier	data_offset		3479317	1					
ANR	3481603	PtrMemberAccess	a -> pc		3479317	1					
ANR	3481604	Identifier	a		3479317	0					
ANR	3481605	Identifier	pc		3479317	1					
ANR	3481606	ElseStatement	else		3479317	0					
ANR	3481607	IfStatement	"if ( ! strncmp ( ptr , "".incbin"" , 7 ) )"		3479317	0					
ANR	3481608	Condition	"! strncmp ( ptr , "".incbin"" , 7 )"	951:15:23378:23405	3479317	0	True				
ANR	3481609	UnaryOperationExpression	"! strncmp ( ptr , "".incbin"" , 7 )"		3479317	0					
ANR	3481610	UnaryOperator	!		3479317	0					
ANR	3481611	CallExpression	"strncmp ( ptr , "".incbin"" , 7 )"		3479317	1					
ANR	3481612	Callee	strncmp		3479317	0					
ANR	3481613	Identifier	strncmp		3479317	0					
ANR	3481614	ArgumentList	ptr		3479317	1					
ANR	3481615	Argument	ptr		3479317	0					
ANR	3481616	Identifier	ptr		3479317	0					
ANR	3481617	Argument	""".incbin"""		3479317	1					
ANR	3481618	PrimaryExpression	""".incbin"""		3479317	0					
ANR	3481619	Argument	7		3479317	2					
ANR	3481620	PrimaryExpression	7		3479317	0					
ANR	3481621	CompoundStatement		268:45:8212:8212	3479317	1					
ANR	3481622	IfStatement	if ( ptr [ 7 ] != ' ' )		3479317	0					
ANR	3481623	Condition	ptr [ 7 ] != ' '	952:9:23419:23431	3479317	0	True				
ANR	3481624	EqualityExpression	ptr [ 7 ] != ' '		3479317	0		!=			
ANR	3481625	ArrayIndexing	ptr [ 7 ]		3479317	0					
ANR	3481626	Identifier	ptr		3479317	0					
ANR	3481627	PrimaryExpression	7		3479317	1					
ANR	3481628	PrimaryExpression	' '		3479317	1					
ANR	3481629	CompoundStatement		269:24:8238:8238	3479317	1					
ANR	3481630	ExpressionStatement	"eprintf ( ""incbin missing filename\\n"" )"	953:6:23442:23479	3479317	0	True				
ANR	3481631	CallExpression	"eprintf ( ""incbin missing filename\\n"" )"		3479317	0					
ANR	3481632	Callee	eprintf		3479317	0					
ANR	3481633	Identifier	eprintf		3479317	0					
ANR	3481634	ArgumentList	"""incbin missing filename\\n"""		3479317	1					
ANR	3481635	Argument	"""incbin missing filename\\n"""		3479317	0					
ANR	3481636	PrimaryExpression	"""incbin missing filename\\n"""		3479317	0					
ANR	3481637	ContinueStatement	continue ;	954:6:23487:23495	3479317	1	True				
ANR	3481638	ExpressionStatement	"ret = r_asm_pseudo_incbin ( & op , ptr + 8 )"	956:5:23509:23549	3479317	1	True				
ANR	3481639	AssignmentExpression	"ret = r_asm_pseudo_incbin ( & op , ptr + 8 )"		3479317	0		=			
ANR	3481640	Identifier	ret		3479317	0					
ANR	3481641	CallExpression	"r_asm_pseudo_incbin ( & op , ptr + 8 )"		3479317	1					
ANR	3481642	Callee	r_asm_pseudo_incbin		3479317	0					
ANR	3481643	Identifier	r_asm_pseudo_incbin		3479317	0					
ANR	3481644	ArgumentList	& op		3479317	1					
ANR	3481645	Argument	& op		3479317	0					
ANR	3481646	UnaryOperationExpression	& op		3479317	0					
ANR	3481647	UnaryOperator	&		3479317	0					
ANR	3481648	Identifier	op		3479317	1					
ANR	3481649	Argument	ptr + 8		3479317	1					
ANR	3481650	AdditiveExpression	ptr + 8		3479317	0		+			
ANR	3481651	Identifier	ptr		3479317	0					
ANR	3481652	PrimaryExpression	8		3479317	1					
ANR	3481653	ElseStatement	else		3479317	0					
ANR	3481654	CompoundStatement		274:11:8366:8366	3479317	0					
ANR	3481655	ExpressionStatement	"eprintf ( ""Unknown directive (%s)\\n"" , ptr )"	958:5:23569:23610	3479317	0	True				
ANR	3481656	CallExpression	"eprintf ( ""Unknown directive (%s)\\n"" , ptr )"		3479317	0					
ANR	3481657	Callee	eprintf		3479317	0					
ANR	3481658	Identifier	eprintf		3479317	0					
ANR	3481659	ArgumentList	"""Unknown directive (%s)\\n"""		3479317	1					
ANR	3481660	Argument	"""Unknown directive (%s)\\n"""		3479317	0					
ANR	3481661	PrimaryExpression	"""Unknown directive (%s)\\n"""		3479317	0					
ANR	3481662	Argument	ptr		3479317	1					
ANR	3481663	Identifier	ptr		3479317	0					
ANR	3481664	ExpressionStatement	free ( tokens )	959:5:23617:23630	3479317	1	True				
ANR	3481665	CallExpression	free ( tokens )		3479317	0					
ANR	3481666	Callee	free		3479317	0					
ANR	3481667	Identifier	free		3479317	0					
ANR	3481668	ArgumentList	tokens		3479317	1					
ANR	3481669	Argument	tokens		3479317	0					
ANR	3481670	Identifier	tokens		3479317	0					
ANR	3481671	ExpressionStatement	free ( lbuf )	960:5:23637:23647	3479317	2	True				
ANR	3481672	CallExpression	free ( lbuf )		3479317	0					
ANR	3481673	Callee	free		3479317	0					
ANR	3481674	Identifier	free		3479317	0					
ANR	3481675	ArgumentList	lbuf		3479317	1					
ANR	3481676	Argument	lbuf		3479317	0					
ANR	3481677	Identifier	lbuf		3479317	0					
ANR	3481678	ReturnStatement	return r_asm_code_free ( acode ) ;	961:5:23654:23684	3479317	3	True				
ANR	3481679	CallExpression	r_asm_code_free ( acode )		3479317	0					
ANR	3481680	Callee	r_asm_code_free		3479317	0					
ANR	3481681	Identifier	r_asm_code_free		3479317	0					
ANR	3481682	ArgumentList	acode		3479317	1					
ANR	3481683	Argument	acode		3479317	0					
ANR	3481684	Identifier	acode		3479317	0					
ANR	3481685	IfStatement	if ( ! ret )		3479317	3					
ANR	3481686	Condition	! ret	963:8:23700:23703	3479317	0	True				
ANR	3481687	UnaryOperationExpression	! ret		3479317	0					
ANR	3481688	UnaryOperator	!		3479317	0					
ANR	3481689	Identifier	ret		3479317	1					
ANR	3481690	CompoundStatement		280:14:8510:8510	3479317	1					
ANR	3481691	ContinueStatement	continue ;	964:5:23713:23721	3479317	0	True				
ANR	3481692	IfStatement	if ( ret < 0 )		3479317	4					
ANR	3481693	Condition	ret < 0	966:8:23737:23743	3479317	0	True				
ANR	3481694	RelationalExpression	ret < 0		3479317	0		<			
ANR	3481695	Identifier	ret		3479317	0					
ANR	3481696	PrimaryExpression	0		3479317	1					
ANR	3481697	CompoundStatement		283:17:8550:8550	3479317	1					
ANR	3481698	ExpressionStatement	"eprintf ( ""!!! Oops (%s)\\n"" , ptr )"	967:5:23753:23785	3479317	0	True				
ANR	3481699	CallExpression	"eprintf ( ""!!! Oops (%s)\\n"" , ptr )"		3479317	0					
ANR	3481700	Callee	eprintf		3479317	0					
ANR	3481701	Identifier	eprintf		3479317	0					
ANR	3481702	ArgumentList	"""!!! Oops (%s)\\n"""		3479317	1					
ANR	3481703	Argument	"""!!! Oops (%s)\\n"""		3479317	0					
ANR	3481704	PrimaryExpression	"""!!! Oops (%s)\\n"""		3479317	0					
ANR	3481705	Argument	ptr		3479317	1					
ANR	3481706	Identifier	ptr		3479317	0					
ANR	3481707	ExpressionStatement	free ( tokens )	968:5:23792:23805	3479317	1	True				
ANR	3481708	CallExpression	free ( tokens )		3479317	0					
ANR	3481709	Callee	free		3479317	0					
ANR	3481710	Identifier	free		3479317	0					
ANR	3481711	ArgumentList	tokens		3479317	1					
ANR	3481712	Argument	tokens		3479317	0					
ANR	3481713	Identifier	tokens		3479317	0					
ANR	3481714	ExpressionStatement	free ( lbuf )	969:5:23812:23823	3479317	2	True				
ANR	3481715	CallExpression	free ( lbuf )		3479317	0					
ANR	3481716	Callee	free		3479317	0					
ANR	3481717	Identifier	free		3479317	0					
ANR	3481718	ArgumentList	lbuf		3479317	1					
ANR	3481719	Argument	lbuf		3479317	0					
ANR	3481720	Identifier	lbuf		3479317	0					
ANR	3481721	ReturnStatement	return r_asm_code_free ( acode ) ;	970:5:23830:23860	3479317	3	True				
ANR	3481722	CallExpression	r_asm_code_free ( acode )		3479317	0					
ANR	3481723	Callee	r_asm_code_free		3479317	0					
ANR	3481724	Identifier	r_asm_code_free		3479317	0					
ANR	3481725	ArgumentList	acode		3479317	1					
ANR	3481726	Argument	acode		3479317	0					
ANR	3481727	Identifier	acode		3479317	0					
ANR	3481728	ElseStatement	else		3479317	0					
ANR	3481729	CompoundStatement		290:4:8706:8727	3479317	0					
ANR	3481730	IdentifierDeclStatement	char * str = ptr_start ;	973:4:23902:23923	3479317	0	True				
ANR	3481731	IdentifierDecl	* str = ptr_start		3479317	0					
ANR	3481732	IdentifierDeclType	char *		3479317	0					
ANR	3481733	Identifier	str		3479317	1					
ANR	3481734	AssignmentExpression	* str = ptr_start		3479317	2		=			
ANR	3481735	Identifier	ptr_start		3479317	0					
ANR	3481736	Identifier	ptr_start		3479317	1					
ANR	3481737	ExpressionStatement	r_str_trim ( str )	974:4:23929:23945	3479317	1	True				
ANR	3481738	CallExpression	r_str_trim ( str )		3479317	0					
ANR	3481739	Callee	r_str_trim		3479317	0					
ANR	3481740	Identifier	r_str_trim		3479317	0					
ANR	3481741	ArgumentList	str		3479317	1					
ANR	3481742	Argument	str		3479317	0					
ANR	3481743	Identifier	str		3479317	0					
ANR	3481744	IfStatement	if ( a -> ifilter )		3479317	2					
ANR	3481745	Condition	a -> ifilter	975:8:23955:23964	3479317	0	True				
ANR	3481746	PtrMemberAccess	a -> ifilter		3479317	0					
ANR	3481747	Identifier	a		3479317	0					
ANR	3481748	Identifier	ifilter		3479317	1					
ANR	3481749	CompoundStatement		292:20:8771:8771	3479317	1					
ANR	3481750	ExpressionStatement	"r_parse_parse ( a -> ifilter , ptr_start , ptr_start )"	976:5:23974:24022	3479317	0	True				
ANR	3481751	CallExpression	"r_parse_parse ( a -> ifilter , ptr_start , ptr_start )"		3479317	0					
ANR	3481752	Callee	r_parse_parse		3479317	0					
ANR	3481753	Identifier	r_parse_parse		3479317	0					
ANR	3481754	ArgumentList	a -> ifilter		3479317	1					
ANR	3481755	Argument	a -> ifilter		3479317	0					
ANR	3481756	PtrMemberAccess	a -> ifilter		3479317	0					
ANR	3481757	Identifier	a		3479317	0					
ANR	3481758	Identifier	ifilter		3479317	1					
ANR	3481759	Argument	ptr_start		3479317	1					
ANR	3481760	Identifier	ptr_start		3479317	0					
ANR	3481761	Argument	ptr_start		3479317	2					
ANR	3481762	Identifier	ptr_start		3479317	0					
ANR	3481763	IfStatement	if ( acode -> equs )		3479317	3					
ANR	3481764	Condition	acode -> equs	978:8:24038:24048	3479317	0	True				
ANR	3481765	PtrMemberAccess	acode -> equs		3479317	0					
ANR	3481766	Identifier	acode		3479317	0					
ANR	3481767	Identifier	equs		3479317	1					
ANR	3481768	CompoundStatement		295:21:8855:8855	3479317	1					
ANR	3481769	IfStatement	if ( ! * ptr_start )		3479317	0					
ANR	3481770	Condition	! * ptr_start	979:9:24062:24072	3479317	0	True				
ANR	3481771	UnaryOperationExpression	! * ptr_start		3479317	0					
ANR	3481772	UnaryOperator	!		3479317	0					
ANR	3481773	UnaryOperationExpression	* ptr_start		3479317	1					
ANR	3481774	UnaryOperator	*		3479317	0					
ANR	3481775	Identifier	ptr_start		3479317	1					
ANR	3481776	CompoundStatement		296:22:8879:8879	3479317	1					
ANR	3481777	ContinueStatement	continue ;	980:6:24083:24091	3479317	0	True				
ANR	3481778	ExpressionStatement	"str = r_asm_code_equ_replace ( acode , strdup ( ptr_start ) )"	982:5:24105:24161	3479317	1	True				
ANR	3481779	AssignmentExpression	"str = r_asm_code_equ_replace ( acode , strdup ( ptr_start ) )"		3479317	0		=			
ANR	3481780	Identifier	str		3479317	0					
ANR	3481781	CallExpression	"r_asm_code_equ_replace ( acode , strdup ( ptr_start ) )"		3479317	1					
ANR	3481782	Callee	r_asm_code_equ_replace		3479317	0					
ANR	3481783	Identifier	r_asm_code_equ_replace		3479317	0					
ANR	3481784	ArgumentList	acode		3479317	1					
ANR	3481785	Argument	acode		3479317	0					
ANR	3481786	Identifier	acode		3479317	0					
ANR	3481787	Argument	strdup ( ptr_start )		3479317	1					
ANR	3481788	CallExpression	strdup ( ptr_start )		3479317	0					
ANR	3481789	Callee	strdup		3479317	0					
ANR	3481790	Identifier	strdup		3479317	0					
ANR	3481791	ArgumentList	ptr_start		3479317	1					
ANR	3481792	Argument	ptr_start		3479317	0					
ANR	3481793	Identifier	ptr_start		3479317	0					
ANR	3481794	ExpressionStatement	"ret = r_asm_assemble ( a , & op , str )"	983:5:24168:24202	3479317	2	True				
ANR	3481795	AssignmentExpression	"ret = r_asm_assemble ( a , & op , str )"		3479317	0		=			
ANR	3481796	Identifier	ret		3479317	0					
ANR	3481797	CallExpression	"r_asm_assemble ( a , & op , str )"		3479317	1					
ANR	3481798	Callee	r_asm_assemble		3479317	0					
ANR	3481799	Identifier	r_asm_assemble		3479317	0					
ANR	3481800	ArgumentList	a		3479317	1					
ANR	3481801	Argument	a		3479317	0					
ANR	3481802	Identifier	a		3479317	0					
ANR	3481803	Argument	& op		3479317	1					
ANR	3481804	UnaryOperationExpression	& op		3479317	0					
ANR	3481805	UnaryOperator	&		3479317	0					
ANR	3481806	Identifier	op		3479317	1					
ANR	3481807	Argument	str		3479317	2					
ANR	3481808	Identifier	str		3479317	0					
ANR	3481809	ExpressionStatement	free ( str )	984:5:24209:24219	3479317	3	True				
ANR	3481810	CallExpression	free ( str )		3479317	0					
ANR	3481811	Callee	free		3479317	0					
ANR	3481812	Identifier	free		3479317	0					
ANR	3481813	ArgumentList	str		3479317	1					
ANR	3481814	Argument	str		3479317	0					
ANR	3481815	Identifier	str		3479317	0					
ANR	3481816	ElseStatement	else		3479317	0					
ANR	3481817	CompoundStatement		302:11:9036:9036	3479317	0					
ANR	3481818	IfStatement	if ( ! * ptr_start )		3479317	0					
ANR	3481819	Condition	! * ptr_start	986:9:24243:24253	3479317	0	True				
ANR	3481820	UnaryOperationExpression	! * ptr_start		3479317	0					
ANR	3481821	UnaryOperator	!		3479317	0					
ANR	3481822	UnaryOperationExpression	* ptr_start		3479317	1					
ANR	3481823	UnaryOperator	*		3479317	0					
ANR	3481824	Identifier	ptr_start		3479317	1					
ANR	3481825	CompoundStatement		303:22:9060:9060	3479317	1					
ANR	3481826	ContinueStatement	continue ;	987:6:24264:24272	3479317	0	True				
ANR	3481827	ExpressionStatement	"ret = r_asm_assemble ( a , & op , ptr_start )"	989:5:24286:24326	3479317	1	True				
ANR	3481828	AssignmentExpression	"ret = r_asm_assemble ( a , & op , ptr_start )"		3479317	0		=			
ANR	3481829	Identifier	ret		3479317	0					
ANR	3481830	CallExpression	"r_asm_assemble ( a , & op , ptr_start )"		3479317	1					
ANR	3481831	Callee	r_asm_assemble		3479317	0					
ANR	3481832	Identifier	r_asm_assemble		3479317	0					
ANR	3481833	ArgumentList	a		3479317	1					
ANR	3481834	Argument	a		3479317	0					
ANR	3481835	Identifier	a		3479317	0					
ANR	3481836	Argument	& op		3479317	1					
ANR	3481837	UnaryOperationExpression	& op		3479317	0					
ANR	3481838	UnaryOperator	&		3479317	0					
ANR	3481839	Identifier	op		3479317	1					
ANR	3481840	Argument	ptr_start		3479317	2					
ANR	3481841	Identifier	ptr_start		3479317	0					
ANR	3481842	IfStatement	if ( stage == STAGES - 1 )		3479317	15					
ANR	3481843	Condition	stage == STAGES - 1	992:7:24346:24364	3479317	0	True				
ANR	3481844	EqualityExpression	stage == STAGES - 1		3479317	0		==			
ANR	3481845	Identifier	stage		3479317	0					
ANR	3481846	AdditiveExpression	STAGES - 1		3479317	1		-			
ANR	3481847	Identifier	STAGES		3479317	0					
ANR	3481848	PrimaryExpression	1		3479317	1					
ANR	3481849	CompoundStatement		317:4:9377:9431	3479317	1					
ANR	3481850	IfStatement	if ( ret < 1 )		3479317	0					
ANR	3481851	Condition	ret < 1	993:8:24377:24383	3479317	0	True				
ANR	3481852	RelationalExpression	ret < 1		3479317	0		<			
ANR	3481853	Identifier	ret		3479317	0					
ANR	3481854	PrimaryExpression	1		3479317	1					
ANR	3481855	CompoundStatement		310:17:9190:9190	3479317	1					
ANR	3481856	ExpressionStatement	"eprintf ( ""Cannot assemble '%s' at line %d\\n"" , ptr_start , linenum )"	994:5:24393:24458	3479317	0	True				
ANR	3481857	CallExpression	"eprintf ( ""Cannot assemble '%s' at line %d\\n"" , ptr_start , linenum )"		3479317	0					
ANR	3481858	Callee	eprintf		3479317	0					
ANR	3481859	Identifier	eprintf		3479317	0					
ANR	3481860	ArgumentList	"""Cannot assemble '%s' at line %d\\n"""		3479317	1					
ANR	3481861	Argument	"""Cannot assemble '%s' at line %d\\n"""		3479317	0					
ANR	3481862	PrimaryExpression	"""Cannot assemble '%s' at line %d\\n"""		3479317	0					
ANR	3481863	Argument	ptr_start		3479317	1					
ANR	3481864	Identifier	ptr_start		3479317	0					
ANR	3481865	Argument	linenum		3479317	2					
ANR	3481866	Identifier	linenum		3479317	0					
ANR	3481867	ExpressionStatement	free ( lbuf )	995:5:24465:24476	3479317	1	True				
ANR	3481868	CallExpression	free ( lbuf )		3479317	0					
ANR	3481869	Callee	free		3479317	0					
ANR	3481870	Identifier	free		3479317	0					
ANR	3481871	ArgumentList	lbuf		3479317	1					
ANR	3481872	Argument	lbuf		3479317	0					
ANR	3481873	Identifier	lbuf		3479317	0					
ANR	3481874	ExpressionStatement	free ( tokens )	996:5:24483:24496	3479317	2	True				
ANR	3481875	CallExpression	free ( tokens )		3479317	0					
ANR	3481876	Callee	free		3479317	0					
ANR	3481877	Identifier	free		3479317	0					
ANR	3481878	ArgumentList	tokens		3479317	1					
ANR	3481879	Argument	tokens		3479317	0					
ANR	3481880	Identifier	tokens		3479317	0					
ANR	3481881	ReturnStatement	return r_asm_code_free ( acode ) ;	997:5:24503:24533	3479317	3	True				
ANR	3481882	CallExpression	r_asm_code_free ( acode )		3479317	0					
ANR	3481883	Callee	r_asm_code_free		3479317	0					
ANR	3481884	Identifier	r_asm_code_free		3479317	0					
ANR	3481885	ArgumentList	acode		3479317	1					
ANR	3481886	Argument	acode		3479317	0					
ANR	3481887	Identifier	acode		3479317	0					
ANR	3481888	ExpressionStatement	acode -> len = idx + ret	999:4:24545:24567	3479317	1	True				
ANR	3481889	AssignmentExpression	acode -> len = idx + ret		3479317	0		=			
ANR	3481890	PtrMemberAccess	acode -> len		3479317	0					
ANR	3481891	Identifier	acode		3479317	0					
ANR	3481892	Identifier	len		3479317	1					
ANR	3481893	AdditiveExpression	idx + ret		3479317	1		+			
ANR	3481894	Identifier	idx		3479317	0					
ANR	3481895	Identifier	ret		3479317	1					
ANR	3481896	IdentifierDeclStatement	"char * newbuf = realloc ( acode -> bytes , ( idx + ret ) * 2 ) ;"	1000:4:24573:24627	3479317	2	True				
ANR	3481897	IdentifierDecl	"* newbuf = realloc ( acode -> bytes , ( idx + ret ) * 2 )"		3479317	0					
ANR	3481898	IdentifierDeclType	char *		3479317	0					
ANR	3481899	Identifier	newbuf		3479317	1					
ANR	3481900	AssignmentExpression	"* newbuf = realloc ( acode -> bytes , ( idx + ret ) * 2 )"		3479317	2		=			
ANR	3481901	Identifier	newbuf		3479317	0					
ANR	3481902	CallExpression	"realloc ( acode -> bytes , ( idx + ret ) * 2 )"		3479317	1					
ANR	3481903	Callee	realloc		3479317	0					
ANR	3481904	Identifier	realloc		3479317	0					
ANR	3481905	ArgumentList	acode -> bytes		3479317	1					
ANR	3481906	Argument	acode -> bytes		3479317	0					
ANR	3481907	PtrMemberAccess	acode -> bytes		3479317	0					
ANR	3481908	Identifier	acode		3479317	0					
ANR	3481909	Identifier	bytes		3479317	1					
ANR	3481910	Argument	( idx + ret ) * 2		3479317	1					
ANR	3481911	MultiplicativeExpression	( idx + ret ) * 2		3479317	0		*			
ANR	3481912	AdditiveExpression	idx + ret		3479317	0		+			
ANR	3481913	Identifier	idx		3479317	0					
ANR	3481914	Identifier	ret		3479317	1					
ANR	3481915	PrimaryExpression	2		3479317	1					
ANR	3481916	IfStatement	if ( ! newbuf )		3479317	3					
ANR	3481917	Condition	! newbuf	1001:8:24637:24643	3479317	0	True				
ANR	3481918	UnaryOperationExpression	! newbuf		3479317	0					
ANR	3481919	UnaryOperator	!		3479317	0					
ANR	3481920	Identifier	newbuf		3479317	1					
ANR	3481921	CompoundStatement		318:17:9450:9450	3479317	1					
ANR	3481922	ExpressionStatement	free ( lbuf )	1002:5:24653:24664	3479317	0	True				
ANR	3481923	CallExpression	free ( lbuf )		3479317	0					
ANR	3481924	Callee	free		3479317	0					
ANR	3481925	Identifier	free		3479317	0					
ANR	3481926	ArgumentList	lbuf		3479317	1					
ANR	3481927	Argument	lbuf		3479317	0					
ANR	3481928	Identifier	lbuf		3479317	0					
ANR	3481929	ExpressionStatement	free ( tokens )	1003:5:24671:24684	3479317	1	True				
ANR	3481930	CallExpression	free ( tokens )		3479317	0					
ANR	3481931	Callee	free		3479317	0					
ANR	3481932	Identifier	free		3479317	0					
ANR	3481933	ArgumentList	tokens		3479317	1					
ANR	3481934	Argument	tokens		3479317	0					
ANR	3481935	Identifier	tokens		3479317	0					
ANR	3481936	ReturnStatement	return r_asm_code_free ( acode ) ;	1004:5:24691:24721	3479317	2	True				
ANR	3481937	CallExpression	r_asm_code_free ( acode )		3479317	0					
ANR	3481938	Callee	r_asm_code_free		3479317	0					
ANR	3481939	Identifier	r_asm_code_free		3479317	0					
ANR	3481940	ArgumentList	acode		3479317	1					
ANR	3481941	Argument	acode		3479317	0					
ANR	3481942	Identifier	acode		3479317	0					
ANR	3481943	ExpressionStatement	acode -> bytes = ( ut8 * ) newbuf	1006:4:24733:24760	3479317	4	True				
ANR	3481944	AssignmentExpression	acode -> bytes = ( ut8 * ) newbuf		3479317	0		=			
ANR	3481945	PtrMemberAccess	acode -> bytes		3479317	0					
ANR	3481946	Identifier	acode		3479317	0					
ANR	3481947	Identifier	bytes		3479317	1					
ANR	3481948	CastExpression	( ut8 * ) newbuf		3479317	1					
ANR	3481949	CastTarget	ut8 *		3479317	0					
ANR	3481950	Identifier	newbuf		3479317	1					
ANR	3481951	ExpressionStatement	"memcpy ( acode -> bytes + idx , r_strbuf_get ( & op . buf ) , r_strbuf_length ( & op . buf ) )"	1007:4:24766:24844	3479317	5	True				
ANR	3481952	CallExpression	"memcpy ( acode -> bytes + idx , r_strbuf_get ( & op . buf ) , r_strbuf_length ( & op . buf ) )"		3479317	0					
ANR	3481953	Callee	memcpy		3479317	0					
ANR	3481954	Identifier	memcpy		3479317	0					
ANR	3481955	ArgumentList	acode -> bytes + idx		3479317	1					
ANR	3481956	Argument	acode -> bytes + idx		3479317	0					
ANR	3481957	AdditiveExpression	acode -> bytes + idx		3479317	0		+			
ANR	3481958	PtrMemberAccess	acode -> bytes		3479317	0					
ANR	3481959	Identifier	acode		3479317	0					
ANR	3481960	Identifier	bytes		3479317	1					
ANR	3481961	Identifier	idx		3479317	1					
ANR	3481962	Argument	r_strbuf_get ( & op . buf )		3479317	1					
ANR	3481963	CallExpression	r_strbuf_get ( & op . buf )		3479317	0					
ANR	3481964	Callee	r_strbuf_get		3479317	0					
ANR	3481965	Identifier	r_strbuf_get		3479317	0					
ANR	3481966	ArgumentList	& op . buf		3479317	1					
ANR	3481967	Argument	& op . buf		3479317	0					
ANR	3481968	UnaryOperationExpression	& op . buf		3479317	0					
ANR	3481969	UnaryOperator	&		3479317	0					
ANR	3481970	MemberAccess	op . buf		3479317	1					
ANR	3481971	Identifier	op		3479317	0					
ANR	3481972	Identifier	buf		3479317	1					
ANR	3481973	Argument	r_strbuf_length ( & op . buf )		3479317	2					
ANR	3481974	CallExpression	r_strbuf_length ( & op . buf )		3479317	0					
ANR	3481975	Callee	r_strbuf_length		3479317	0					
ANR	3481976	Identifier	r_strbuf_length		3479317	0					
ANR	3481977	ArgumentList	& op . buf		3479317	1					
ANR	3481978	Argument	& op . buf		3479317	0					
ANR	3481979	UnaryOperationExpression	& op . buf		3479317	0					
ANR	3481980	UnaryOperator	&		3479317	0					
ANR	3481981	MemberAccess	op . buf		3479317	1					
ANR	3481982	Identifier	op		3479317	0					
ANR	3481983	Identifier	buf		3479317	1					
ANR	3481984	ExpressionStatement	"memset ( acode -> bytes + idx + ret , 0 , idx + ret )"	1008:4:24850:24897	3479317	6	True				
ANR	3481985	CallExpression	"memset ( acode -> bytes + idx + ret , 0 , idx + ret )"		3479317	0					
ANR	3481986	Callee	memset		3479317	0					
ANR	3481987	Identifier	memset		3479317	0					
ANR	3481988	ArgumentList	acode -> bytes + idx + ret		3479317	1					
ANR	3481989	Argument	acode -> bytes + idx + ret		3479317	0					
ANR	3481990	AdditiveExpression	acode -> bytes + idx + ret		3479317	0		+			
ANR	3481991	PtrMemberAccess	acode -> bytes		3479317	0					
ANR	3481992	Identifier	acode		3479317	0					
ANR	3481993	Identifier	bytes		3479317	1					
ANR	3481994	AdditiveExpression	idx + ret		3479317	1		+			
ANR	3481995	Identifier	idx		3479317	0					
ANR	3481996	Identifier	ret		3479317	1					
ANR	3481997	Argument	0		3479317	1					
ANR	3481998	PrimaryExpression	0		3479317	0					
ANR	3481999	Argument	idx + ret		3479317	2					
ANR	3482000	AdditiveExpression	idx + ret		3479317	0		+			
ANR	3482001	Identifier	idx		3479317	0					
ANR	3482002	Identifier	ret		3479317	1					
ANR	3482003	IfStatement	if ( op . buf_inc && r_buf_size ( op . buf_inc ) > 1 )		3479317	7					
ANR	3482004	Condition	op . buf_inc && r_buf_size ( op . buf_inc ) > 1	1009:8:24907:24947	3479317	0	True				
ANR	3482005	AndExpression	op . buf_inc && r_buf_size ( op . buf_inc ) > 1		3479317	0		&&			
ANR	3482006	MemberAccess	op . buf_inc		3479317	0					
ANR	3482007	Identifier	op		3479317	0					
ANR	3482008	Identifier	buf_inc		3479317	1					
ANR	3482009	RelationalExpression	r_buf_size ( op . buf_inc ) > 1		3479317	1		>			
ANR	3482010	CallExpression	r_buf_size ( op . buf_inc )		3479317	0					
ANR	3482011	Callee	r_buf_size		3479317	0					
ANR	3482012	Identifier	r_buf_size		3479317	0					
ANR	3482013	ArgumentList	op . buf_inc		3479317	1					
ANR	3482014	Argument	op . buf_inc		3479317	0					
ANR	3482015	MemberAccess	op . buf_inc		3479317	0					
ANR	3482016	Identifier	op		3479317	0					
ANR	3482017	Identifier	buf_inc		3479317	1					
ANR	3482018	PrimaryExpression	1		3479317	1					
ANR	3482019	CompoundStatement		327:5:9761:9801	3479317	1					
ANR	3482020	IdentifierDeclStatement	char * inc = r_buf_to_string ( op . buf_inc ) ;	1010:5:24957:24997	3479317	0	True				
ANR	3482021	IdentifierDecl	* inc = r_buf_to_string ( op . buf_inc )		3479317	0					
ANR	3482022	IdentifierDeclType	char *		3479317	0					
ANR	3482023	Identifier	inc		3479317	1					
ANR	3482024	AssignmentExpression	* inc = r_buf_to_string ( op . buf_inc )		3479317	2		=			
ANR	3482025	Identifier	inc		3479317	0					
ANR	3482026	CallExpression	r_buf_to_string ( op . buf_inc )		3479317	1					
ANR	3482027	Callee	r_buf_to_string		3479317	0					
ANR	3482028	Identifier	r_buf_to_string		3479317	0					
ANR	3482029	ArgumentList	op . buf_inc		3479317	1					
ANR	3482030	Argument	op . buf_inc		3479317	0					
ANR	3482031	MemberAccess	op . buf_inc		3479317	0					
ANR	3482032	Identifier	op		3479317	0					
ANR	3482033	Identifier	buf_inc		3479317	1					
ANR	3482034	ExpressionStatement	r_buf_free ( op . buf_inc )	1011:5:25004:25027	3479317	1	True				
ANR	3482035	CallExpression	r_buf_free ( op . buf_inc )		3479317	0					
ANR	3482036	Callee	r_buf_free		3479317	0					
ANR	3482037	Identifier	r_buf_free		3479317	0					
ANR	3482038	ArgumentList	op . buf_inc		3479317	1					
ANR	3482039	Argument	op . buf_inc		3479317	0					
ANR	3482040	MemberAccess	op . buf_inc		3479317	0					
ANR	3482041	Identifier	op		3479317	0					
ANR	3482042	Identifier	buf_inc		3479317	1					
ANR	3482043	IfStatement	if ( inc )		3479317	2					
ANR	3482044	Condition	inc	1012:9:25038:25040	3479317	0	True				
ANR	3482045	Identifier	inc		3479317	0					
ANR	3482046	CompoundStatement		329:14:9847:9847	3479317	1					
ANR	3482047	ExpressionStatement	"ret += r_hex_str2bin ( inc , acode -> bytes + idx + ret )"	1013:6:25051:25103	3479317	0	True				
ANR	3482048	AssignmentExpression	"ret += r_hex_str2bin ( inc , acode -> bytes + idx + ret )"		3479317	0		+=			
ANR	3482049	Identifier	ret		3479317	0					
ANR	3482050	CallExpression	"r_hex_str2bin ( inc , acode -> bytes + idx + ret )"		3479317	1					
ANR	3482051	Callee	r_hex_str2bin		3479317	0					
ANR	3482052	Identifier	r_hex_str2bin		3479317	0					
ANR	3482053	ArgumentList	inc		3479317	1					
ANR	3482054	Argument	inc		3479317	0					
ANR	3482055	Identifier	inc		3479317	0					
ANR	3482056	Argument	acode -> bytes + idx + ret		3479317	1					
ANR	3482057	AdditiveExpression	acode -> bytes + idx + ret		3479317	0		+			
ANR	3482058	PtrMemberAccess	acode -> bytes		3479317	0					
ANR	3482059	Identifier	acode		3479317	0					
ANR	3482060	Identifier	bytes		3479317	1					
ANR	3482061	AdditiveExpression	idx + ret		3479317	1		+			
ANR	3482062	Identifier	idx		3479317	0					
ANR	3482063	Identifier	ret		3479317	1					
ANR	3482064	ExpressionStatement	free ( inc )	1014:6:25111:25121	3479317	1	True				
ANR	3482065	CallExpression	free ( inc )		3479317	0					
ANR	3482066	Callee	free		3479317	0					
ANR	3482067	Identifier	free		3479317	0					
ANR	3482068	ArgumentList	inc		3479317	1					
ANR	3482069	Argument	inc		3479317	0					
ANR	3482070	Identifier	inc		3479317	0					
ANR	3482071	ExpressionStatement	free ( lbuf )	1020:1:25149:25160	3479317	115	True				
ANR	3482072	CallExpression	free ( lbuf )		3479317	0					
ANR	3482073	Callee	free		3479317	0					
ANR	3482074	Identifier	free		3479317	0					
ANR	3482075	ArgumentList	lbuf		3479317	1					
ANR	3482076	Argument	lbuf		3479317	0					
ANR	3482077	Identifier	lbuf		3479317	0					
ANR	3482078	ExpressionStatement	free ( tokens )	1021:1:25163:25176	3479317	116	True				
ANR	3482079	CallExpression	free ( tokens )		3479317	0					
ANR	3482080	Callee	free		3479317	0					
ANR	3482081	Identifier	free		3479317	0					
ANR	3482082	ArgumentList	tokens		3479317	1					
ANR	3482083	Argument	tokens		3479317	0					
ANR	3482084	Identifier	tokens		3479317	0					
ANR	3482085	ReturnStatement	return acode ;	1022:1:25179:25191	3479317	117	True				
ANR	3482086	Identifier	acode		3479317	0					
ANR	3482087	ReturnType	R_API RAsmCode *		3479317	1					
ANR	3482088	Identifier	r_asm_massemble		3479317	2					
ANR	3482089	ParameterList	"RAsm * a , const char * assembly"		3479317	3					
ANR	3482090	Parameter	RAsm * a	684:32:15164:15170	3479317	0	True				
ANR	3482091	ParameterType	RAsm *		3479317	0					
ANR	3482092	Identifier	a		3479317	1					
ANR	3482093	Parameter	const char * assembly	684:41:15173:15192	3479317	1	True				
ANR	3482094	ParameterType	const char *		3479317	0					
ANR	3482095	Identifier	assembly		3479317	1					
ANR	3482096	CFGEntryNode	ENTRY		3479317		True				
ANR	3482097	CFGExitNode	EXIT		3479317		True				
ANR	3482098	Symbol	* sp		3479317						
ANR	3482099	Symbol	tokens_size		3479317						
ANR	3482100	Symbol	strchr		3479317						
ANR	3482101	Symbol	& op		3479317						
ANR	3482102	Symbol	dup_val		3479317						
ANR	3482103	Symbol	osp		3479317						
ANR	3482104	Symbol	strncmp		3479317						
ANR	3482105	Symbol	a -> flags		3479317						
ANR	3482106	Symbol	r_asm_assemble		3479317						
ANR	3482107	Symbol	a -> bits		3479317						
ANR	3482108	Symbol	ctr		3479317						
ANR	3482109	Symbol	val		3479317						
ANR	3482110	Symbol	aa		3479317						
ANR	3482111	Symbol	r_asm_pseudo_fill		3479317						
ANR	3482112	Symbol	a -> pc		3479317						
ANR	3482113	Symbol	labels		3479317						
ANR	3482114	Symbol	a -> ifilter		3479317						
ANR	3482115	Symbol	ptr2		3479317						
ANR	3482116	Symbol	str		3479317						
ANR	3482117	Symbol	r_asm_pseudo_org		3479317						
ANR	3482118	Symbol	& op . buf		3479317						
ANR	3482119	Symbol	acode -> code_align		3479317						
ANR	3482120	Symbol	asmcpu		3479317						
ANR	3482121	Symbol	a -> cur -> arch		3479317						
ANR	3482122	Symbol	r_asm_pseudo_int32		3479317						
ANR	3482123	Symbol	new_tokens_size		3479317						
ANR	3482124	Symbol	acode		3479317						
ANR	3482125	Symbol	r_asm_code_free		3479317						
ANR	3482126	Symbol	r_asm_pseudo_string		3479317						
ANR	3482127	Symbol	STAGES		3479317						
ANR	3482128	Symbol	assembly		3479317						
ANR	3482129	Symbol	isavrseparator		3479317						
ANR	3482130	Symbol	r_asm_code_new		3479317						
ANR	3482131	Symbol	sp		3479317						
ANR	3482132	Symbol	r_hex_str2bin		3479317						
ANR	3482133	Symbol	r_asm_pseudo_arch		3479317						
ANR	3482134	Symbol	atoi		3479317						
ANR	3482135	Symbol	r_str_startswith		3479317						
ANR	3482136	Symbol	a		3479317						
ANR	3482137	Symbol	malloc		3479317						
ANR	3482138	Symbol	is_a_label		3479317						
ANR	3482139	Symbol	acode -> bytes		3479317						
ANR	3482140	Symbol	r_asm_op_set_hex		3479317						
ANR	3482141	Symbol	i		3479317						
ANR	3482142	Symbol	j		3479317						
ANR	3482143	Symbol	off		3479317						
ANR	3482144	Symbol	food		3479317						
ANR	3482145	Symbol	p		3479317						
ANR	3482146	Symbol	q		3479317						
ANR	3482147	Symbol	stage		3479317						
ANR	3482148	Symbol	* ctr		3479317						
ANR	3482149	Symbol	a -> syntax		3479317						
ANR	3482150	Symbol	flag_free_kv		3479317						
ANR	3482151	Symbol	r_asm_pseudo_incbin		3479317						
ANR	3482152	Symbol	r_asm_pseudo_int16		3479317						
ANR	3482153	Symbol	r_buf_size		3479317						
ANR	3482154	Symbol	IS_SEPARATOR		3479317						
ANR	3482155	Symbol	* ptr_start		3479317						
ANR	3482156	Symbol	r_asm_code_equ_replace		3479317						
ANR	3482157	Symbol	num		3479317						
ANR	3482158	Symbol	acode -> equs		3479317						
ANR	3482159	Symbol	realloc		3479317						
ANR	3482160	Symbol	acode -> len		3479317						
ANR	3482161	Symbol	strlen		3479317						
ANR	3482162	Symbol	* ptr		3479317						
ANR	3482163	Symbol	linenum		3479317						
ANR	3482164	Symbol	acode -> assembly		3479317						
ANR	3482165	Symbol	* ptr2		3479317						
ANR	3482166	Symbol	ret		3479317						
ANR	3482167	Symbol	r_asm_pseudo_byte		3479317						
ANR	3482168	Symbol	NULL		3479317						
ANR	3482169	Symbol	R_BETWEEN		3479317						
ANR	3482170	Symbol	buf_token		3479317						
ANR	3482171	Symbol	newbuf		3479317						
ANR	3482172	Symbol	* tokens		3479317						
ANR	3482173	Symbol	a -> syscall		3479317						
ANR	3482174	Symbol	* * a		3479317						
ANR	3482175	Symbol	a -> cur		3479317						
ANR	3482176	Symbol	r_asm_pseudo_bits		3479317						
ANR	3482177	Symbol	lbuf		3479317						
ANR	3482178	Symbol	strstr		3479317						
ANR	3482179	Symbol	acode -> data_offset		3479317						
ANR	3482180	Symbol	true		3479317						
ANR	3482181	Symbol	idx		3479317						
ANR	3482182	Symbol	r_asm_pseudo_align		3479317						
ANR	3482183	Symbol	* acode		3479317						
ANR	3482184	Symbol	nl		3479317						
ANR	3482185	Symbol	R_ASM_SYNTAX_INTEL		3479317						
ANR	3482186	Symbol	calloc		3479317						
ANR	3482187	Symbol	inComment		3479317						
ANR	3482188	Symbol	ht_pp_new		3479317						
ANR	3482189	Symbol	* a -> cur		3479317						
ANR	3482190	Symbol	r_str_replace		3479317						
ANR	3482191	Symbol	r_strbuf_length		3479317						
ANR	3482192	Symbol	tokens		3479317						
ANR	3482193	Symbol	r_buf_to_string		3479317						
ANR	3482194	Symbol	r_str_closer_chr		3479317						
ANR	3482195	Symbol	inc		3479317						
ANR	3482196	Symbol	op		3479317						
ANR	3482197	Symbol	r_asm_pseudo_int64		3479317						
ANR	3482198	Symbol	false		3479317						
ANR	3482199	Symbol	op . buf_inc		3479317						
ANR	3482200	Symbol	r_syscall_get_num		3479317						
ANR	3482201	Symbol	* a		3479317						
ANR	3482202	Symbol	ptr		3479317						
ANR	3482203	Symbol	acode -> code_offset		3479317						
ANR	3482204	Symbol	pc		3479317						
ANR	3482205	Symbol	new_tokens		3479317						
ANR	3482206	Symbol	* i		3479317						
ANR	3482207	Symbol	r_strbuf_get		3479317						
ANR	3482208	Symbol	ptr_start		3479317						
ANR	3482209	Symbol	R_ASM_SYNTAX_ATT		3479317						
ANR	3482210	Symbol	strdup		3479317						
ANR	3482211	Symbol	* q		3479317						
ANR	3482212	Function	r_asm_modify	1025:0:25196:25343							
ANR	3482213	FunctionDef	"r_asm_modify (RAsm * a , ut8 * buf , int field , ut64 val)"		3482212	0					
ANR	3482214	CompoundStatement		1025:64:25260:25343	3482212	0					
ANR	3482215	ReturnStatement	"return ( a -> cur && a -> cur -> modify ) ? a -> cur -> modify ( a , buf , field , val ) : false ;"	1026:1:25263:25341	3482212	0	True				
ANR	3482216	ConditionalExpression	"( a -> cur && a -> cur -> modify ) ? a -> cur -> modify ( a , buf , field , val ) : false"		3482212	0					
ANR	3482217	Condition	a -> cur && a -> cur -> modify		3482212	0					
ANR	3482218	AndExpression	a -> cur && a -> cur -> modify		3482212	0		&&			
ANR	3482219	PtrMemberAccess	a -> cur		3482212	0					
ANR	3482220	Identifier	a		3482212	0					
ANR	3482221	Identifier	cur		3482212	1					
ANR	3482222	PtrMemberAccess	a -> cur -> modify		3482212	1					
ANR	3482223	PtrMemberAccess	a -> cur		3482212	0					
ANR	3482224	Identifier	a		3482212	0					
ANR	3482225	Identifier	cur		3482212	1					
ANR	3482226	Identifier	modify		3482212	1					
ANR	3482227	CallExpression	"a -> cur -> modify ( a , buf , field , val )"		3482212	1					
ANR	3482228	Callee	a -> cur -> modify		3482212	0					
ANR	3482229	PtrMemberAccess	a -> cur -> modify		3482212	0					
ANR	3482230	PtrMemberAccess	a -> cur		3482212	0					
ANR	3482231	Identifier	a		3482212	0					
ANR	3482232	Identifier	cur		3482212	1					
ANR	3482233	Identifier	modify		3482212	1					
ANR	3482234	ArgumentList	a		3482212	1					
ANR	3482235	Argument	a		3482212	0					
ANR	3482236	Identifier	a		3482212	0					
ANR	3482237	Argument	buf		3482212	1					
ANR	3482238	Identifier	buf		3482212	0					
ANR	3482239	Argument	field		3482212	2					
ANR	3482240	Identifier	field		3482212	0					
ANR	3482241	Argument	val		3482212	3					
ANR	3482242	Identifier	val		3482212	0					
ANR	3482243	Identifier	false		3482212	2					
ANR	3482244	ReturnType	R_API bool		3482212	1					
ANR	3482245	Identifier	r_asm_modify		3482212	2					
ANR	3482246	ParameterList	"RAsm * a , ut8 * buf , int field , ut64 val"		3482212	3					
ANR	3482247	Parameter	RAsm * a	1025:24:25220:25226	3482212	0	True				
ANR	3482248	ParameterType	RAsm *		3482212	0					
ANR	3482249	Identifier	a		3482212	1					
ANR	3482250	Parameter	ut8 * buf	1025:33:25229:25236	3482212	1	True				
ANR	3482251	ParameterType	ut8 *		3482212	0					
ANR	3482252	Identifier	buf		3482212	1					
ANR	3482253	Parameter	int field	1025:43:25239:25247	3482212	2	True				
ANR	3482254	ParameterType	int		3482212	0					
ANR	3482255	Identifier	field		3482212	1					
ANR	3482256	Parameter	ut64 val	1025:54:25250:25257	3482212	3	True				
ANR	3482257	ParameterType	ut64		3482212	0					
ANR	3482258	Identifier	val		3482212	1					
ANR	3482259	CFGEntryNode	ENTRY		3482212		True				
ANR	3482260	CFGExitNode	EXIT		3482212		True				
ANR	3482261	Symbol	val		3482212						
ANR	3482262	Symbol	a		3482212						
ANR	3482263	Symbol	* a -> cur		3482212						
ANR	3482264	Symbol	a -> cur -> modify		3482212						
ANR	3482265	Symbol	buf		3482212						
ANR	3482266	Symbol	field		3482212						
ANR	3482267	Symbol	false		3482212						
ANR	3482268	Symbol	* * a		3482212						
ANR	3482269	Symbol	* a		3482212						
ANR	3482270	Symbol	a -> cur		3482212						
ANR	3482271	Function	r_asm_get_offset	1029:0:25346:25535							
ANR	3482272	FunctionDef	"r_asm_get_offset (RAsm * a , int type , int idx)"		3482271	0					
ANR	3482273	CompoundStatement		1029:55:25401:25535	3482271	0					
ANR	3482274	IfStatement	if ( a && a -> binb . bin && a -> binb . get_offset )		3482271	0					
ANR	3482275	Condition	a && a -> binb . bin && a -> binb . get_offset	1030:5:25424:25461	3482271	0	True				
ANR	3482276	AndExpression	a && a -> binb . bin && a -> binb . get_offset		3482271	0		&&			
ANR	3482277	Identifier	a		3482271	0					
ANR	3482278	AndExpression	a -> binb . bin && a -> binb . get_offset		3482271	1		&&			
ANR	3482279	MemberAccess	a -> binb . bin		3482271	0					
ANR	3482280	PtrMemberAccess	a -> binb		3482271	0					
ANR	3482281	Identifier	a		3482271	0					
ANR	3482282	Identifier	binb		3482271	1					
ANR	3482283	Identifier	bin		3482271	1					
ANR	3482284	MemberAccess	a -> binb . get_offset		3482271	1					
ANR	3482285	PtrMemberAccess	a -> binb		3482271	0					
ANR	3482286	Identifier	a		3482271	0					
ANR	3482287	Identifier	binb		3482271	1					
ANR	3482288	Identifier	get_offset		3482271	1					
ANR	3482289	CompoundStatement		2:45:62:62	3482271	1					
ANR	3482290	ReturnStatement	"return a -> binb . get_offset ( a -> binb . bin , type , idx ) ;"	1031:2:25468:25518	3482271	0	True				
ANR	3482291	CallExpression	"a -> binb . get_offset ( a -> binb . bin , type , idx )"		3482271	0					
ANR	3482292	Callee	a -> binb . get_offset		3482271	0					
ANR	3482293	MemberAccess	a -> binb . get_offset		3482271	0					
ANR	3482294	PtrMemberAccess	a -> binb		3482271	0					
ANR	3482295	Identifier	a		3482271	0					
ANR	3482296	Identifier	binb		3482271	1					
ANR	3482297	Identifier	get_offset		3482271	1					
ANR	3482298	ArgumentList	a -> binb . bin		3482271	1					
ANR	3482299	Argument	a -> binb . bin		3482271	0					
ANR	3482300	MemberAccess	a -> binb . bin		3482271	0					
ANR	3482301	PtrMemberAccess	a -> binb		3482271	0					
ANR	3482302	Identifier	a		3482271	0					
ANR	3482303	Identifier	binb		3482271	1					
ANR	3482304	Identifier	bin		3482271	1					
ANR	3482305	Argument	type		3482271	1					
ANR	3482306	Identifier	type		3482271	0					
ANR	3482307	Argument	idx		3482271	2					
ANR	3482308	Identifier	idx		3482271	0					
ANR	3482309	ReturnStatement	return - 1 ;	1033:1:25524:25533	3482271	1	True				
ANR	3482310	UnaryOperationExpression	- 1		3482271	0					
ANR	3482311	UnaryOperator	-		3482271	0					
ANR	3482312	PrimaryExpression	1		3482271	1					
ANR	3482313	ReturnType	R_API int		3482271	1					
ANR	3482314	Identifier	r_asm_get_offset		3482271	2					
ANR	3482315	ParameterList	"RAsm * a , int type , int idx"		3482271	3					
ANR	3482316	Parameter	RAsm * a	1029:27:25373:25379	3482271	0	True				
ANR	3482317	ParameterType	RAsm *		3482271	0					
ANR	3482318	Identifier	a		3482271	1					
ANR	3482319	Parameter	int type	1029:36:25382:25389	3482271	1	True				
ANR	3482320	ParameterType	int		3482271	0					
ANR	3482321	Identifier	type		3482271	1					
ANR	3482322	Parameter	int idx	1029:46:25392:25398	3482271	2	True				
ANR	3482323	ParameterType	int		3482271	0					
ANR	3482324	Identifier	idx		3482271	1					
ANR	3482325	CFGEntryNode	ENTRY		3482271		True				
ANR	3482326	CFGExitNode	EXIT		3482271		True				
ANR	3482327	Symbol	a		3482271						
ANR	3482328	Symbol	a -> binb		3482271						
ANR	3482329	Symbol	a -> binb . get_offset		3482271						
ANR	3482330	Symbol	a -> binb . bin		3482271						
ANR	3482331	Symbol	* a		3482271						
ANR	3482332	Symbol	type		3482271						
ANR	3482333	Symbol	idx		3482271						
ANR	3482334	Function	r_asm_describe	1036:0:25538:25650							
ANR	3482335	FunctionDef	"r_asm_describe (RAsm * a , const char * str)"		3482334	0					
ANR	3482336	CompoundStatement		1036:53:25591:25650	3482334	0					
ANR	3482337	ReturnStatement	"return ( a && a -> pair ) ? sdb_get ( a -> pair , str , 0 ) : NULL ;"	1037:1:25594:25648	3482334	0	True				
ANR	3482338	ConditionalExpression	"( a && a -> pair ) ? sdb_get ( a -> pair , str , 0 ) : NULL"		3482334	0					
ANR	3482339	Condition	a && a -> pair		3482334	0					
ANR	3482340	AndExpression	a && a -> pair		3482334	0		&&			
ANR	3482341	Identifier	a		3482334	0					
ANR	3482342	PtrMemberAccess	a -> pair		3482334	1					
ANR	3482343	Identifier	a		3482334	0					
ANR	3482344	Identifier	pair		3482334	1					
ANR	3482345	CallExpression	"sdb_get ( a -> pair , str , 0 )"		3482334	1					
ANR	3482346	Callee	sdb_get		3482334	0					
ANR	3482347	Identifier	sdb_get		3482334	0					
ANR	3482348	ArgumentList	a -> pair		3482334	1					
ANR	3482349	Argument	a -> pair		3482334	0					
ANR	3482350	PtrMemberAccess	a -> pair		3482334	0					
ANR	3482351	Identifier	a		3482334	0					
ANR	3482352	Identifier	pair		3482334	1					
ANR	3482353	Argument	str		3482334	1					
ANR	3482354	Identifier	str		3482334	0					
ANR	3482355	Argument	0		3482334	2					
ANR	3482356	PrimaryExpression	0		3482334	0					
ANR	3482357	Identifier	NULL		3482334	2					
ANR	3482358	ReturnType	R_API char *		3482334	1					
ANR	3482359	Identifier	r_asm_describe		3482334	2					
ANR	3482360	ParameterList	"RAsm * a , const char * str"		3482334	3					
ANR	3482361	Parameter	RAsm * a	1036:27:25565:25571	3482334	0	True				
ANR	3482362	ParameterType	RAsm *		3482334	0					
ANR	3482363	Identifier	a		3482334	1					
ANR	3482364	Parameter	const char * str	1036:36:25574:25588	3482334	1	True				
ANR	3482365	ParameterType	const char *		3482334	0					
ANR	3482366	Identifier	str		3482334	1					
ANR	3482367	CFGEntryNode	ENTRY		3482334		True				
ANR	3482368	CFGExitNode	EXIT		3482334		True				
ANR	3482369	Symbol	str		3482334						
ANR	3482370	Symbol	a		3482334						
ANR	3482371	Symbol	NULL		3482334						
ANR	3482372	Symbol	a -> pair		3482334						
ANR	3482373	Symbol	sdb_get		3482334						
ANR	3482374	Symbol	* a		3482334						
ANR	3482375	Function	r_asm_get_plugins	1040:0:25653:25715							
ANR	3482376	FunctionDef	r_asm_get_plugins (RAsm * a)		3482375	0					
ANR	3482377	CompoundStatement		1040:40:25693:25715	3482375	0					
ANR	3482378	ReturnStatement	return a -> plugins ;	1041:1:25696:25713	3482375	0	True				
ANR	3482379	PtrMemberAccess	a -> plugins		3482375	0					
ANR	3482380	Identifier	a		3482375	0					
ANR	3482381	Identifier	plugins		3482375	1					
ANR	3482382	ReturnType	R_API RList *		3482375	1					
ANR	3482383	Identifier	r_asm_get_plugins		3482375	2					
ANR	3482384	ParameterList	RAsm * a		3482375	3					
ANR	3482385	Parameter	RAsm * a	1040:31:25684:25690	3482375	0	True				
ANR	3482386	ParameterType	RAsm *		3482375	0					
ANR	3482387	Identifier	a		3482375	1					
ANR	3482388	CFGEntryNode	ENTRY		3482375		True				
ANR	3482389	CFGExitNode	EXIT		3482375		True				
ANR	3482390	Symbol	a		3482375						
ANR	3482391	Symbol	* a		3482375						
ANR	3482392	Symbol	a -> plugins		3482375						
ANR	3482393	Function	r_asm_set_arch	1044:0:25718:25845							
ANR	3482394	FunctionDef	"r_asm_set_arch (RAsm * a , const char * name , int bits)"		3482393	0					
ANR	3482395	CompoundStatement		1044:63:25781:25845	3482393	0					
ANR	3482396	ReturnStatement	"return r_asm_use ( a , name ) ? r_asm_set_bits ( a , bits ) : false ;"	1045:1:25784:25843	3482393	0	True				
ANR	3482397	ConditionalExpression	"r_asm_use ( a , name ) ? r_asm_set_bits ( a , bits ) : false"		3482393	0					
ANR	3482398	Condition	"r_asm_use ( a , name )"		3482393	0					
ANR	3482399	CallExpression	"r_asm_use ( a , name )"		3482393	0					
ANR	3482400	Callee	r_asm_use		3482393	0					
ANR	3482401	Identifier	r_asm_use		3482393	0					
ANR	3482402	ArgumentList	a		3482393	1					
ANR	3482403	Argument	a		3482393	0					
ANR	3482404	Identifier	a		3482393	0					
ANR	3482405	Argument	name		3482393	1					
ANR	3482406	Identifier	name		3482393	0					
ANR	3482407	CallExpression	"r_asm_set_bits ( a , bits )"		3482393	1					
ANR	3482408	Callee	r_asm_set_bits		3482393	0					
ANR	3482409	Identifier	r_asm_set_bits		3482393	0					
ANR	3482410	ArgumentList	a		3482393	1					
ANR	3482411	Argument	a		3482393	0					
ANR	3482412	Identifier	a		3482393	0					
ANR	3482413	Argument	bits		3482393	1					
ANR	3482414	Identifier	bits		3482393	0					
ANR	3482415	Identifier	false		3482393	2					
ANR	3482416	ReturnType	R_API bool		3482393	1					
ANR	3482417	Identifier	r_asm_set_arch		3482393	2					
ANR	3482418	ParameterList	"RAsm * a , const char * name , int bits"		3482393	3					
ANR	3482419	Parameter	RAsm * a	1044:26:25744:25750	3482393	0	True				
ANR	3482420	ParameterType	RAsm *		3482393	0					
ANR	3482421	Identifier	a		3482393	1					
ANR	3482422	Parameter	const char * name	1044:35:25753:25768	3482393	1	True				
ANR	3482423	ParameterType	const char *		3482393	0					
ANR	3482424	Identifier	name		3482393	1					
ANR	3482425	Parameter	int bits	1044:53:25771:25778	3482393	2	True				
ANR	3482426	ParameterType	int		3482393	0					
ANR	3482427	Identifier	bits		3482393	1					
ANR	3482428	CFGEntryNode	ENTRY		3482393		True				
ANR	3482429	CFGExitNode	EXIT		3482393		True				
ANR	3482430	Symbol	a		3482393						
ANR	3482431	Symbol	r_asm_set_bits		3482393						
ANR	3482432	Symbol	name		3482393						
ANR	3482433	Symbol	bits		3482393						
ANR	3482434	Symbol	false		3482393						
ANR	3482435	Symbol	r_asm_use		3482393						
ANR	3482436	Function	r_asm_to_string	1049:0:25910:26235							
ANR	3482437	FunctionDef	"r_asm_to_string (RAsm * a , ut64 addr , const ut8 * b , int l)"		3482436	0					
ANR	3482438	CompoundStatement		1049:69:25979:26235	3482436	0					
ANR	3482439	ExpressionStatement	"r_return_val_if_fail ( a && b && l >= 0 , NULL )"	1050:1:25982:26027	3482436	0	True				
ANR	3482440	CallExpression	"r_return_val_if_fail ( a && b && l >= 0 , NULL )"		3482436	0					
ANR	3482441	Callee	r_return_val_if_fail		3482436	0					
ANR	3482442	Identifier	r_return_val_if_fail		3482436	0					
ANR	3482443	ArgumentList	a && b && l >= 0		3482436	1					
ANR	3482444	Argument	a && b && l >= 0		3482436	0					
ANR	3482445	AndExpression	a && b && l >= 0		3482436	0		&&			
ANR	3482446	Identifier	a		3482436	0					
ANR	3482447	AndExpression	b && l >= 0		3482436	1		&&			
ANR	3482448	Identifier	b		3482436	0					
ANR	3482449	RelationalExpression	l >= 0		3482436	1		>=			
ANR	3482450	Identifier	l		3482436	0					
ANR	3482451	PrimaryExpression	0		3482436	1					
ANR	3482452	Argument	NULL		3482436	1					
ANR	3482453	Identifier	NULL		3482436	0					
ANR	3482454	ExpressionStatement	"r_asm_set_pc ( a , addr )"	1051:1:26030:26052	3482436	1	True				
ANR	3482455	CallExpression	"r_asm_set_pc ( a , addr )"		3482436	0					
ANR	3482456	Callee	r_asm_set_pc		3482436	0					
ANR	3482457	Identifier	r_asm_set_pc		3482436	0					
ANR	3482458	ArgumentList	a		3482436	1					
ANR	3482459	Argument	a		3482436	0					
ANR	3482460	Identifier	a		3482436	0					
ANR	3482461	Argument	addr		3482436	1					
ANR	3482462	Identifier	addr		3482436	0					
ANR	3482463	IdentifierDeclStatement	"RAsmCode * code = r_asm_mdisassemble ( a , b , l ) ;"	1052:1:26055:26100	3482436	2	True				
ANR	3482464	IdentifierDecl	"* code = r_asm_mdisassemble ( a , b , l )"		3482436	0					
ANR	3482465	IdentifierDeclType	RAsmCode *		3482436	0					
ANR	3482466	Identifier	code		3482436	1					
ANR	3482467	AssignmentExpression	"* code = r_asm_mdisassemble ( a , b , l )"		3482436	2		=			
ANR	3482468	Identifier	code		3482436	0					
ANR	3482469	CallExpression	"r_asm_mdisassemble ( a , b , l )"		3482436	1					
ANR	3482470	Callee	r_asm_mdisassemble		3482436	0					
ANR	3482471	Identifier	r_asm_mdisassemble		3482436	0					
ANR	3482472	ArgumentList	a		3482436	1					
ANR	3482473	Argument	a		3482436	0					
ANR	3482474	Identifier	a		3482436	0					
ANR	3482475	Argument	b		3482436	1					
ANR	3482476	Identifier	b		3482436	0					
ANR	3482477	Argument	l		3482436	2					
ANR	3482478	Identifier	l		3482436	0					
ANR	3482479	IfStatement	if ( code )		3482436	3					
ANR	3482480	Condition	code	1053:5:26107:26110	3482436	0	True				
ANR	3482481	Identifier	code		3482436	0					
ANR	3482482	CompoundStatement		6:2:137:167	3482436	1					
ANR	3482483	IdentifierDeclStatement	char * buf_asm = code -> assembly ;	1054:2:26117:26147	3482436	0	True				
ANR	3482484	IdentifierDecl	* buf_asm = code -> assembly		3482436	0					
ANR	3482485	IdentifierDeclType	char *		3482436	0					
ANR	3482486	Identifier	buf_asm		3482436	1					
ANR	3482487	AssignmentExpression	* buf_asm = code -> assembly		3482436	2		=			
ANR	3482488	Identifier	buf_asm		3482436	0					
ANR	3482489	PtrMemberAccess	code -> assembly		3482436	1					
ANR	3482490	Identifier	code		3482436	0					
ANR	3482491	Identifier	assembly		3482436	1					
ANR	3482492	ExpressionStatement	code -> assembly = NULL	1055:2:26151:26172	3482436	1	True				
ANR	3482493	AssignmentExpression	code -> assembly = NULL		3482436	0		=			
ANR	3482494	PtrMemberAccess	code -> assembly		3482436	0					
ANR	3482495	Identifier	code		3482436	0					
ANR	3482496	Identifier	assembly		3482436	1					
ANR	3482497	Identifier	NULL		3482436	1					
ANR	3482498	ExpressionStatement	r_asm_code_free ( code )	1056:2:26176:26198	3482436	2	True				
ANR	3482499	CallExpression	r_asm_code_free ( code )		3482436	0					
ANR	3482500	Callee	r_asm_code_free		3482436	0					
ANR	3482501	Identifier	r_asm_code_free		3482436	0					
ANR	3482502	ArgumentList	code		3482436	1					
ANR	3482503	Argument	code		3482436	0					
ANR	3482504	Identifier	code		3482436	0					
ANR	3482505	ReturnStatement	return buf_asm ;	1057:2:26202:26216	3482436	3	True				
ANR	3482506	Identifier	buf_asm		3482436	0					
ANR	3482507	ReturnStatement	return NULL ;	1059:1:26222:26233	3482436	4	True				
ANR	3482508	Identifier	NULL		3482436	0					
ANR	3482509	ReturnType	R_API char *		3482436	1					
ANR	3482510	Identifier	r_asm_to_string		3482436	2					
ANR	3482511	ParameterList	"RAsm * a , ut64 addr , const ut8 * b , int l"		3482436	3					
ANR	3482512	Parameter	RAsm * a	1049:28:25938:25944	3482436	0	True				
ANR	3482513	ParameterType	RAsm *		3482436	0					
ANR	3482514	Identifier	a		3482436	1					
ANR	3482515	Parameter	ut64 addr	1049:37:25947:25955	3482436	1	True				
ANR	3482516	ParameterType	ut64		3482436	0					
ANR	3482517	Identifier	addr		3482436	1					
ANR	3482518	Parameter	const ut8 * b	1049:48:25958:25969	3482436	2	True				
ANR	3482519	ParameterType	const ut8 *		3482436	0					
ANR	3482520	Identifier	b		3482436	1					
ANR	3482521	Parameter	int l	1049:62:25972:25976	3482436	3	True				
ANR	3482522	ParameterType	int		3482436	0					
ANR	3482523	Identifier	l		3482436	1					
ANR	3482524	CFGEntryNode	ENTRY		3482436		True				
ANR	3482525	CFGExitNode	EXIT		3482436		True				
ANR	3482526	Symbol	a		3482436						
ANR	3482527	Symbol	b		3482436						
ANR	3482528	Symbol	NULL		3482436						
ANR	3482529	Symbol	code		3482436						
ANR	3482530	Symbol	addr		3482436						
ANR	3482531	Symbol	l		3482436						
ANR	3482532	Symbol	r_asm_mdisassemble		3482436						
ANR	3482533	Symbol	buf_asm		3482436						
ANR	3482534	Symbol	* code		3482436						
ANR	3482535	Symbol	code -> assembly		3482436						
ANR	3482536	Function	r_asm_from_string	1062:0:26238:26509							
ANR	3482537	FunctionDef	"r_asm_from_string (RAsm * a , ut64 addr , const char * b , int * l)"		3482536	0					
ANR	3482538	CompoundStatement		1062:72:26310:26509	3482536	0					
ANR	3482539	ExpressionStatement	"r_asm_set_pc ( a , addr )"	1063:1:26313:26335	3482536	0	True				
ANR	3482540	CallExpression	"r_asm_set_pc ( a , addr )"		3482536	0					
ANR	3482541	Callee	r_asm_set_pc		3482536	0					
ANR	3482542	Identifier	r_asm_set_pc		3482536	0					
ANR	3482543	ArgumentList	a		3482536	1					
ANR	3482544	Argument	a		3482536	0					
ANR	3482545	Identifier	a		3482536	0					
ANR	3482546	Argument	addr		3482536	1					
ANR	3482547	Identifier	addr		3482536	0					
ANR	3482548	IdentifierDeclStatement	"RAsmCode * code = r_asm_massemble ( a , b ) ;"	1064:1:26338:26377	3482536	1	True				
ANR	3482549	IdentifierDecl	"* code = r_asm_massemble ( a , b )"		3482536	0					
ANR	3482550	IdentifierDeclType	RAsmCode *		3482536	0					
ANR	3482551	Identifier	code		3482536	1					
ANR	3482552	AssignmentExpression	"* code = r_asm_massemble ( a , b )"		3482536	2		=			
ANR	3482553	Identifier	code		3482536	0					
ANR	3482554	CallExpression	"r_asm_massemble ( a , b )"		3482536	1					
ANR	3482555	Callee	r_asm_massemble		3482536	0					
ANR	3482556	Identifier	r_asm_massemble		3482536	0					
ANR	3482557	ArgumentList	a		3482536	1					
ANR	3482558	Argument	a		3482536	0					
ANR	3482559	Identifier	a		3482536	0					
ANR	3482560	Argument	b		3482536	1					
ANR	3482561	Identifier	b		3482536	0					
ANR	3482562	IfStatement	if ( code )		3482536	2					
ANR	3482563	Condition	code	1065:5:26384:26387	3482536	0	True				
ANR	3482564	Identifier	code		3482536	0					
ANR	3482565	CompoundStatement		5:2:83:105	3482536	1					
ANR	3482566	IdentifierDeclStatement	ut8 * buf = code -> bytes ;	1066:2:26394:26416	3482536	0	True				
ANR	3482567	IdentifierDecl	* buf = code -> bytes		3482536	0					
ANR	3482568	IdentifierDeclType	ut8 *		3482536	0					
ANR	3482569	Identifier	buf		3482536	1					
ANR	3482570	AssignmentExpression	* buf = code -> bytes		3482536	2		=			
ANR	3482571	Identifier	buf		3482536	0					
ANR	3482572	PtrMemberAccess	code -> bytes		3482536	1					
ANR	3482573	Identifier	code		3482536	0					
ANR	3482574	Identifier	bytes		3482536	1					
ANR	3482575	IfStatement	if ( l )		3482536	1					
ANR	3482576	Condition	l	1067:6:26424:26424	3482536	0	True				
ANR	3482577	Identifier	l		3482536	0					
ANR	3482578	CompoundStatement		6:9:116:116	3482536	1					
ANR	3482579	ExpressionStatement	* l = code -> len	1068:3:26432:26446	3482536	0	True				
ANR	3482580	AssignmentExpression	* l = code -> len		3482536	0		=			
ANR	3482581	UnaryOperationExpression	* l		3482536	0					
ANR	3482582	UnaryOperator	*		3482536	0					
ANR	3482583	Identifier	l		3482536	1					
ANR	3482584	PtrMemberAccess	code -> len		3482536	1					
ANR	3482585	Identifier	code		3482536	0					
ANR	3482586	Identifier	len		3482536	1					
ANR	3482587	ExpressionStatement	r_asm_code_free ( code )	1070:2:26454:26476	3482536	2	True				
ANR	3482588	CallExpression	r_asm_code_free ( code )		3482536	0					
ANR	3482589	Callee	r_asm_code_free		3482536	0					
ANR	3482590	Identifier	r_asm_code_free		3482536	0					
ANR	3482591	ArgumentList	code		3482536	1					
ANR	3482592	Argument	code		3482536	0					
ANR	3482593	Identifier	code		3482536	0					
ANR	3482594	ReturnStatement	return buf ;	1071:2:26480:26490	3482536	3	True				
ANR	3482595	Identifier	buf		3482536	0					
ANR	3482596	ReturnStatement	return NULL ;	1073:1:26496:26507	3482536	3	True				
ANR	3482597	Identifier	NULL		3482536	0					
ANR	3482598	ReturnType	R_API ut8 *		3482536	1					
ANR	3482599	Identifier	r_asm_from_string		3482536	2					
ANR	3482600	ParameterList	"RAsm * a , ut64 addr , const char * b , int * l"		3482536	3					
ANR	3482601	Parameter	RAsm * a	1062:29:26267:26273	3482536	0	True				
ANR	3482602	ParameterType	RAsm *		3482536	0					
ANR	3482603	Identifier	a		3482536	1					
ANR	3482604	Parameter	ut64 addr	1062:38:26276:26284	3482536	1	True				
ANR	3482605	ParameterType	ut64		3482536	0					
ANR	3482606	Identifier	addr		3482536	1					
ANR	3482607	Parameter	const char * b	1062:49:26287:26299	3482536	2	True				
ANR	3482608	ParameterType	const char *		3482536	0					
ANR	3482609	Identifier	b		3482536	1					
ANR	3482610	Parameter	int * l	1062:64:26302:26307	3482536	3	True				
ANR	3482611	ParameterType	int *		3482536	0					
ANR	3482612	Identifier	l		3482536	1					
ANR	3482613	CFGEntryNode	ENTRY		3482536		True				
ANR	3482614	CFGExitNode	EXIT		3482536		True				
ANR	3482615	Symbol	code -> bytes		3482536						
ANR	3482616	Symbol	a		3482536						
ANR	3482617	Symbol	b		3482536						
ANR	3482618	Symbol	buf		3482536						
ANR	3482619	Symbol	code		3482536						
ANR	3482620	Symbol	NULL		3482536						
ANR	3482621	Symbol	r_asm_massemble		3482536						
ANR	3482622	Symbol	* l		3482536						
ANR	3482623	Symbol	addr		3482536						
ANR	3482624	Symbol	l		3482536						
ANR	3482625	Symbol	* code		3482536						
ANR	3482626	Symbol	code -> len		3482536						
ANR	3482627	Function	r_asm_syntax_from_string	1076:0:26512:26923							
ANR	3482628	FunctionDef	r_asm_syntax_from_string (const char * name)		3482627	0					
ANR	3482629	CompoundStatement		1076:53:26565:26923	3482627	0					
ANR	3482630	ExpressionStatement	"r_return_val_if_fail ( name , - 1 )"	1077:1:26568:26599	3482627	0	True				
ANR	3482631	CallExpression	"r_return_val_if_fail ( name , - 1 )"		3482627	0					
ANR	3482632	Callee	r_return_val_if_fail		3482627	0					
ANR	3482633	Identifier	r_return_val_if_fail		3482627	0					
ANR	3482634	ArgumentList	name		3482627	1					
ANR	3482635	Argument	name		3482627	0					
ANR	3482636	Identifier	name		3482627	0					
ANR	3482637	Argument	- 1		3482627	1					
ANR	3482638	UnaryOperationExpression	- 1		3482627	0					
ANR	3482639	UnaryOperator	-		3482627	0					
ANR	3482640	PrimaryExpression	1		3482627	1					
ANR	3482641	IfStatement	"if ( ! strcmp ( name , ""regnum"" ) )"		3482627	1					
ANR	3482642	Condition	"! strcmp ( name , ""regnum"" )"	1078:5:26606:26629	3482627	0	True				
ANR	3482643	UnaryOperationExpression	"! strcmp ( name , ""regnum"" )"		3482627	0					
ANR	3482644	UnaryOperator	!		3482627	0					
ANR	3482645	CallExpression	"strcmp ( name , ""regnum"" )"		3482627	1					
ANR	3482646	Callee	strcmp		3482627	0					
ANR	3482647	Identifier	strcmp		3482627	0					
ANR	3482648	ArgumentList	name		3482627	1					
ANR	3482649	Argument	name		3482627	0					
ANR	3482650	Identifier	name		3482627	0					
ANR	3482651	Argument	"""regnum"""		3482627	1					
ANR	3482652	PrimaryExpression	"""regnum"""		3482627	0					
ANR	3482653	CompoundStatement		3:31:66:66	3482627	1					
ANR	3482654	ReturnStatement	return R_ASM_SYNTAX_REGNUM ;	1079:2:26636:26662	3482627	0	True				
ANR	3482655	Identifier	R_ASM_SYNTAX_REGNUM		3482627	0					
ANR	3482656	IfStatement	"if ( ! strcmp ( name , ""jz"" ) )"		3482627	2					
ANR	3482657	Condition	"! strcmp ( name , ""jz"" )"	1081:5:26672:26691	3482627	0	True				
ANR	3482658	UnaryOperationExpression	"! strcmp ( name , ""jz"" )"		3482627	0					
ANR	3482659	UnaryOperator	!		3482627	0					
ANR	3482660	CallExpression	"strcmp ( name , ""jz"" )"		3482627	1					
ANR	3482661	Callee	strcmp		3482627	0					
ANR	3482662	Identifier	strcmp		3482627	0					
ANR	3482663	ArgumentList	name		3482627	1					
ANR	3482664	Argument	name		3482627	0					
ANR	3482665	Identifier	name		3482627	0					
ANR	3482666	Argument	"""jz"""		3482627	1					
ANR	3482667	PrimaryExpression	"""jz"""		3482627	0					
ANR	3482668	CompoundStatement		6:27:128:128	3482627	1					
ANR	3482669	ReturnStatement	return R_ASM_SYNTAX_JZ ;	1082:2:26698:26720	3482627	0	True				
ANR	3482670	Identifier	R_ASM_SYNTAX_JZ		3482627	0					
ANR	3482671	IfStatement	"if ( ! strcmp ( name , ""intel"" ) )"		3482627	3					
ANR	3482672	Condition	"! strcmp ( name , ""intel"" )"	1084:5:26730:26752	3482627	0	True				
ANR	3482673	UnaryOperationExpression	"! strcmp ( name , ""intel"" )"		3482627	0					
ANR	3482674	UnaryOperator	!		3482627	0					
ANR	3482675	CallExpression	"strcmp ( name , ""intel"" )"		3482627	1					
ANR	3482676	Callee	strcmp		3482627	0					
ANR	3482677	Identifier	strcmp		3482627	0					
ANR	3482678	ArgumentList	name		3482627	1					
ANR	3482679	Argument	name		3482627	0					
ANR	3482680	Identifier	name		3482627	0					
ANR	3482681	Argument	"""intel"""		3482627	1					
ANR	3482682	PrimaryExpression	"""intel"""		3482627	0					
ANR	3482683	CompoundStatement		9:30:189:189	3482627	1					
ANR	3482684	ReturnStatement	return R_ASM_SYNTAX_INTEL ;	1085:2:26759:26784	3482627	0	True				
ANR	3482685	Identifier	R_ASM_SYNTAX_INTEL		3482627	0					
ANR	3482686	IfStatement	"if ( ! strcmp ( name , ""masm"" ) )"		3482627	4					
ANR	3482687	Condition	"! strcmp ( name , ""masm"" )"	1087:5:26794:26815	3482627	0	True				
ANR	3482688	UnaryOperationExpression	"! strcmp ( name , ""masm"" )"		3482627	0					
ANR	3482689	UnaryOperator	!		3482627	0					
ANR	3482690	CallExpression	"strcmp ( name , ""masm"" )"		3482627	1					
ANR	3482691	Callee	strcmp		3482627	0					
ANR	3482692	Identifier	strcmp		3482627	0					
ANR	3482693	ArgumentList	name		3482627	1					
ANR	3482694	Argument	name		3482627	0					
ANR	3482695	Identifier	name		3482627	0					
ANR	3482696	Argument	"""masm"""		3482627	1					
ANR	3482697	PrimaryExpression	"""masm"""		3482627	0					
ANR	3482698	CompoundStatement		12:29:252:252	3482627	1					
ANR	3482699	ReturnStatement	return R_ASM_SYNTAX_MASM ;	1088:2:26822:26846	3482627	0	True				
ANR	3482700	Identifier	R_ASM_SYNTAX_MASM		3482627	0					
ANR	3482701	IfStatement	"if ( ! strcmp ( name , ""att"" ) )"		3482627	5					
ANR	3482702	Condition	"! strcmp ( name , ""att"" )"	1090:5:26856:26876	3482627	0	True				
ANR	3482703	UnaryOperationExpression	"! strcmp ( name , ""att"" )"		3482627	0					
ANR	3482704	UnaryOperator	!		3482627	0					
ANR	3482705	CallExpression	"strcmp ( name , ""att"" )"		3482627	1					
ANR	3482706	Callee	strcmp		3482627	0					
ANR	3482707	Identifier	strcmp		3482627	0					
ANR	3482708	ArgumentList	name		3482627	1					
ANR	3482709	Argument	name		3482627	0					
ANR	3482710	Identifier	name		3482627	0					
ANR	3482711	Argument	"""att"""		3482627	1					
ANR	3482712	PrimaryExpression	"""att"""		3482627	0					
ANR	3482713	CompoundStatement		15:28:313:313	3482627	1					
ANR	3482714	ReturnStatement	return R_ASM_SYNTAX_ATT ;	1091:2:26883:26906	3482627	0	True				
ANR	3482715	Identifier	R_ASM_SYNTAX_ATT		3482627	0					
ANR	3482716	ReturnStatement	return - 1 ;	1093:1:26912:26921	3482627	6	True				
ANR	3482717	UnaryOperationExpression	- 1		3482627	0					
ANR	3482718	UnaryOperator	-		3482627	0					
ANR	3482719	PrimaryExpression	1		3482627	1					
ANR	3482720	ReturnType	R_API int		3482627	1					
ANR	3482721	Identifier	r_asm_syntax_from_string		3482627	2					
ANR	3482722	ParameterList	const char * name		3482627	3					
ANR	3482723	Parameter	const char * name	1076:35:26547:26562	3482627	0	True				
ANR	3482724	ParameterType	const char *		3482627	0					
ANR	3482725	Identifier	name		3482627	1					
ANR	3482726	CFGEntryNode	ENTRY		3482627		True				
ANR	3482727	CFGExitNode	EXIT		3482627		True				
ANR	3482728	Symbol	strcmp		3482627						
ANR	3482729	Symbol	R_ASM_SYNTAX_INTEL		3482627						
ANR	3482730	Symbol	name		3482627						
ANR	3482731	Symbol	R_ASM_SYNTAX_ATT		3482627						
ANR	3482732	Symbol	R_ASM_SYNTAX_REGNUM		3482627						
ANR	3482733	Symbol	R_ASM_SYNTAX_JZ		3482627						
ANR	3482734	Symbol	R_ASM_SYNTAX_MASM		3482627						
ANR	3482735	Function	r_asm_mnemonics	1096:0:26926:27112							
ANR	3482736	FunctionDef	"r_asm_mnemonics (RAsm * a , int id , bool json)"		3482735	0					
ANR	3482737	CompoundStatement		1096:56:26982:27112	3482735	0					
ANR	3482738	ExpressionStatement	"r_return_val_if_fail ( a && a -> cur , NULL )"	1097:1:26985:27025	3482735	0	True				
ANR	3482739	CallExpression	"r_return_val_if_fail ( a && a -> cur , NULL )"		3482735	0					
ANR	3482740	Callee	r_return_val_if_fail		3482735	0					
ANR	3482741	Identifier	r_return_val_if_fail		3482735	0					
ANR	3482742	ArgumentList	a && a -> cur		3482735	1					
ANR	3482743	Argument	a && a -> cur		3482735	0					
ANR	3482744	AndExpression	a && a -> cur		3482735	0		&&			
ANR	3482745	Identifier	a		3482735	0					
ANR	3482746	PtrMemberAccess	a -> cur		3482735	1					
ANR	3482747	Identifier	a		3482735	0					
ANR	3482748	Identifier	cur		3482735	1					
ANR	3482749	Argument	NULL		3482735	1					
ANR	3482750	Identifier	NULL		3482735	0					
ANR	3482751	IfStatement	if ( a -> cur -> mnemonics )		3482735	1					
ANR	3482752	Condition	a -> cur -> mnemonics	1098:5:27032:27048	3482735	0	True				
ANR	3482753	PtrMemberAccess	a -> cur -> mnemonics		3482735	0					
ANR	3482754	PtrMemberAccess	a -> cur		3482735	0					
ANR	3482755	Identifier	a		3482735	0					
ANR	3482756	Identifier	cur		3482735	1					
ANR	3482757	Identifier	mnemonics		3482735	1					
ANR	3482758	CompoundStatement		3:24:68:68	3482735	1					
ANR	3482759	ReturnStatement	"return a -> cur -> mnemonics ( a , id , json ) ;"	1099:2:27055:27093	3482735	0	True				
ANR	3482760	CallExpression	"a -> cur -> mnemonics ( a , id , json )"		3482735	0					
ANR	3482761	Callee	a -> cur -> mnemonics		3482735	0					
ANR	3482762	PtrMemberAccess	a -> cur -> mnemonics		3482735	0					
ANR	3482763	PtrMemberAccess	a -> cur		3482735	0					
ANR	3482764	Identifier	a		3482735	0					
ANR	3482765	Identifier	cur		3482735	1					
ANR	3482766	Identifier	mnemonics		3482735	1					
ANR	3482767	ArgumentList	a		3482735	1					
ANR	3482768	Argument	a		3482735	0					
ANR	3482769	Identifier	a		3482735	0					
ANR	3482770	Argument	id		3482735	1					
ANR	3482771	Identifier	id		3482735	0					
ANR	3482772	Argument	json		3482735	2					
ANR	3482773	Identifier	json		3482735	0					
ANR	3482774	ReturnStatement	return NULL ;	1101:1:27099:27110	3482735	2	True				
ANR	3482775	Identifier	NULL		3482735	0					
ANR	3482776	ReturnType	R_API char *		3482735	1					
ANR	3482777	Identifier	r_asm_mnemonics		3482735	2					
ANR	3482778	ParameterList	"RAsm * a , int id , bool json"		3482735	3					
ANR	3482779	Parameter	RAsm * a	1096:28:26954:26960	3482735	0	True				
ANR	3482780	ParameterType	RAsm *		3482735	0					
ANR	3482781	Identifier	a		3482735	1					
ANR	3482782	Parameter	int id	1096:37:26963:26968	3482735	1	True				
ANR	3482783	ParameterType	int		3482735	0					
ANR	3482784	Identifier	id		3482735	1					
ANR	3482785	Parameter	bool json	1096:45:26971:26979	3482735	2	True				
ANR	3482786	ParameterType	bool		3482735	0					
ANR	3482787	Identifier	json		3482735	1					
ANR	3482788	CFGEntryNode	ENTRY		3482735		True				
ANR	3482789	CFGExitNode	EXIT		3482735		True				
ANR	3482790	Symbol	a		3482735						
ANR	3482791	Symbol	* a -> cur		3482735						
ANR	3482792	Symbol	NULL		3482735						
ANR	3482793	Symbol	json		3482735						
ANR	3482794	Symbol	* * a		3482735						
ANR	3482795	Symbol	id		3482735						
ANR	3482796	Symbol	* a		3482735						
ANR	3482797	Symbol	a -> cur		3482735						
ANR	3482798	Symbol	a -> cur -> mnemonics		3482735						
ANR	3482799	Function	r_asm_mnemonics_byname	1104:0:27115:27412							
ANR	3482800	FunctionDef	"r_asm_mnemonics_byname (RAsm * a , const char * name)"		3482799	0					
ANR	3482801	CompoundStatement		1104:60:27175:27412	3482799	0					
ANR	3482802	ExpressionStatement	"r_return_val_if_fail ( a && a -> cur , 0 )"	1105:1:27178:27215	3482799	0	True				
ANR	3482803	CallExpression	"r_return_val_if_fail ( a && a -> cur , 0 )"		3482799	0					
ANR	3482804	Callee	r_return_val_if_fail		3482799	0					
ANR	3482805	Identifier	r_return_val_if_fail		3482799	0					
ANR	3482806	ArgumentList	a && a -> cur		3482799	1					
ANR	3482807	Argument	a && a -> cur		3482799	0					
ANR	3482808	AndExpression	a && a -> cur		3482799	0		&&			
ANR	3482809	Identifier	a		3482799	0					
ANR	3482810	PtrMemberAccess	a -> cur		3482799	1					
ANR	3482811	Identifier	a		3482799	0					
ANR	3482812	Identifier	cur		3482799	1					
ANR	3482813	Argument	0		3482799	1					
ANR	3482814	PrimaryExpression	0		3482799	0					
ANR	3482815	IfStatement	if ( a -> cur -> mnemonics )		3482799	1					
ANR	3482816	Condition	a -> cur -> mnemonics	1106:5:27222:27238	3482799	0	True				
ANR	3482817	PtrMemberAccess	a -> cur -> mnemonics		3482799	0					
ANR	3482818	PtrMemberAccess	a -> cur		3482799	0					
ANR	3482819	Identifier	a		3482799	0					
ANR	3482820	Identifier	cur		3482799	1					
ANR	3482821	Identifier	mnemonics		3482799	1					
ANR	3482822	CompoundStatement		4:2:69:74	3482799	1					
ANR	3482823	IdentifierDeclStatement	int i ;	1107:2:27245:27250	3482799	0	True				
ANR	3482824	IdentifierDecl	i		3482799	0					
ANR	3482825	IdentifierDeclType	int		3482799	0					
ANR	3482826	Identifier	i		3482799	1					
ANR	3482827	ForStatement	for ( i = 0 ; i < 1024 ; i ++ )		3482799	1					
ANR	3482828	ForInit	i = 0 ;	1108:7:27259:27264	3482799	0	True				
ANR	3482829	AssignmentExpression	i = 0		3482799	0		=			
ANR	3482830	Identifier	i		3482799	0					
ANR	3482831	PrimaryExpression	0		3482799	1					
ANR	3482832	Condition	i < 1024	1108:14:27266:27273	3482799	1	True				
ANR	3482833	RelationalExpression	i < 1024		3482799	0		<			
ANR	3482834	Identifier	i		3482799	0					
ANR	3482835	PrimaryExpression	1024		3482799	1					
ANR	3482836	PostIncDecOperationExpression	i ++	1108:24:27276:27278	3482799	2	True				
ANR	3482837	Identifier	i		3482799	0					
ANR	3482838	IncDec	++		3482799	1					
ANR	3482839	CompoundStatement		6:3:110:151	3482799	3					
ANR	3482840	IdentifierDeclStatement	"char * n = a -> cur -> mnemonics ( a , i , false ) ;"	1109:3:27286:27327	3482799	0	True				
ANR	3482841	IdentifierDecl	"* n = a -> cur -> mnemonics ( a , i , false )"		3482799	0					
ANR	3482842	IdentifierDeclType	char *		3482799	0					
ANR	3482843	Identifier	n		3482799	1					
ANR	3482844	AssignmentExpression	"* n = a -> cur -> mnemonics ( a , i , false )"		3482799	2		=			
ANR	3482845	Identifier	n		3482799	0					
ANR	3482846	CallExpression	"a -> cur -> mnemonics ( a , i , false )"		3482799	1					
ANR	3482847	Callee	a -> cur -> mnemonics		3482799	0					
ANR	3482848	PtrMemberAccess	a -> cur -> mnemonics		3482799	0					
ANR	3482849	PtrMemberAccess	a -> cur		3482799	0					
ANR	3482850	Identifier	a		3482799	0					
ANR	3482851	Identifier	cur		3482799	1					
ANR	3482852	Identifier	mnemonics		3482799	1					
ANR	3482853	ArgumentList	a		3482799	1					
ANR	3482854	Argument	a		3482799	0					
ANR	3482855	Identifier	a		3482799	0					
ANR	3482856	Argument	i		3482799	1					
ANR	3482857	Identifier	i		3482799	0					
ANR	3482858	Argument	false		3482799	2					
ANR	3482859	Identifier	false		3482799	0					
ANR	3482860	IfStatement	"if ( n && ! strcmp ( n , name ) )"		3482799	1					
ANR	3482861	Condition	"n && ! strcmp ( n , name )"	1110:7:27336:27357	3482799	0	True				
ANR	3482862	AndExpression	"n && ! strcmp ( n , name )"		3482799	0		&&			
ANR	3482863	Identifier	n		3482799	0					
ANR	3482864	UnaryOperationExpression	"! strcmp ( n , name )"		3482799	1					
ANR	3482865	UnaryOperator	!		3482799	0					
ANR	3482866	CallExpression	"strcmp ( n , name )"		3482799	1					
ANR	3482867	Callee	strcmp		3482799	0					
ANR	3482868	Identifier	strcmp		3482799	0					
ANR	3482869	ArgumentList	n		3482799	1					
ANR	3482870	Argument	n		3482799	0					
ANR	3482871	Identifier	n		3482799	0					
ANR	3482872	Argument	name		3482799	1					
ANR	3482873	Identifier	name		3482799	0					
ANR	3482874	CompoundStatement		7:31:184:184	3482799	1					
ANR	3482875	ReturnStatement	return i ;	1111:4:27366:27374	3482799	0	True				
ANR	3482876	Identifier	i		3482799	0					
ANR	3482877	ExpressionStatement	free ( n )	1113:3:27384:27392	3482799	2	True				
ANR	3482878	CallExpression	free ( n )		3482799	0					
ANR	3482879	Callee	free		3482799	0					
ANR	3482880	Identifier	free		3482799	0					
ANR	3482881	ArgumentList	n		3482799	1					
ANR	3482882	Argument	n		3482799	0					
ANR	3482883	Identifier	n		3482799	0					
ANR	3482884	ReturnStatement	return 0 ;	1116:1:27402:27410	3482799	2	True				
ANR	3482885	PrimaryExpression	0		3482799	0					
ANR	3482886	ReturnType	R_API int		3482799	1					
ANR	3482887	Identifier	r_asm_mnemonics_byname		3482799	2					
ANR	3482888	ParameterList	"RAsm * a , const char * name"		3482799	3					
ANR	3482889	Parameter	RAsm * a	1104:33:27148:27154	3482799	0	True				
ANR	3482890	ParameterType	RAsm *		3482799	0					
ANR	3482891	Identifier	a		3482799	1					
ANR	3482892	Parameter	const char * name	1104:42:27157:27172	3482799	1	True				
ANR	3482893	ParameterType	const char *		3482799	0					
ANR	3482894	Identifier	name		3482799	1					
ANR	3482895	CFGEntryNode	ENTRY		3482799		True				
ANR	3482896	CFGExitNode	EXIT		3482799		True				
ANR	3482897	Symbol	strcmp		3482799						
ANR	3482898	Symbol	a		3482799						
ANR	3482899	Symbol	* a -> cur		3482799						
ANR	3482900	Symbol	name		3482799						
ANR	3482901	Symbol	false		3482799						
ANR	3482902	Symbol	i		3482799						
ANR	3482903	Symbol	* * a		3482799						
ANR	3482904	Symbol	* a		3482799						
ANR	3482905	Symbol	a -> cur		3482799						
ANR	3482906	Symbol	n		3482799						
ANR	3482907	Symbol	a -> cur -> mnemonics		3482799						
ANR	3482908	Function	r_asm_rasm_assemble	1119:0:27415:27962							
ANR	3482909	FunctionDef	"r_asm_rasm_assemble (RAsm * a , const char * buf , bool use_spp)"		3482908	0					
ANR	3482910	CompoundStatement		1119:76:27491:27962	3482908	0					
ANR	3482911	ExpressionStatement	"r_return_val_if_fail ( a && buf , NULL )"	1120:1:27494:27531	3482908	0	True				
ANR	3482912	CallExpression	"r_return_val_if_fail ( a && buf , NULL )"		3482908	0					
ANR	3482913	Callee	r_return_val_if_fail		3482908	0					
ANR	3482914	Identifier	r_return_val_if_fail		3482908	0					
ANR	3482915	ArgumentList	a && buf		3482908	1					
ANR	3482916	Argument	a && buf		3482908	0					
ANR	3482917	AndExpression	a && buf		3482908	0		&&			
ANR	3482918	Identifier	a		3482908	0					
ANR	3482919	Identifier	buf		3482908	1					
ANR	3482920	Argument	NULL		3482908	1					
ANR	3482921	Identifier	NULL		3482908	0					
ANR	3482922	IdentifierDeclStatement	char * lbuf = strdup ( buf ) ;	1121:1:27534:27559	3482908	1	True				
ANR	3482923	IdentifierDecl	* lbuf = strdup ( buf )		3482908	0					
ANR	3482924	IdentifierDeclType	char *		3482908	0					
ANR	3482925	Identifier	lbuf		3482908	1					
ANR	3482926	AssignmentExpression	* lbuf = strdup ( buf )		3482908	2		=			
ANR	3482927	Identifier	lbuf		3482908	0					
ANR	3482928	CallExpression	strdup ( buf )		3482908	1					
ANR	3482929	Callee	strdup		3482908	0					
ANR	3482930	Identifier	strdup		3482908	0					
ANR	3482931	ArgumentList	buf		3482908	1					
ANR	3482932	Argument	buf		3482908	0					
ANR	3482933	Identifier	buf		3482908	0					
ANR	3482934	IfStatement	if ( ! lbuf )		3482908	2					
ANR	3482935	Condition	! lbuf	1122:5:27566:27570	3482908	0	True				
ANR	3482936	UnaryOperationExpression	! lbuf		3482908	0					
ANR	3482937	UnaryOperator	!		3482908	0					
ANR	3482938	Identifier	lbuf		3482908	1					
ANR	3482939	CompoundStatement		4:12:81:81	3482908	1					
ANR	3482940	ReturnStatement	return NULL ;	1123:2:27577:27588	3482908	0	True				
ANR	3482941	Identifier	NULL		3482908	0					
ANR	3482942	IdentifierDeclStatement	RAsmCode * acode ;	1125:1:27594:27609	3482908	3	True				
ANR	3482943	IdentifierDecl	* acode		3482908	0					
ANR	3482944	IdentifierDeclType	RAsmCode *		3482908	0					
ANR	3482945	Identifier	acode		3482908	1					
ANR	3482946	IfStatement	if ( use_spp )		3482908	4					
ANR	3482947	Condition	use_spp	1126:5:27616:27622	3482908	0	True				
ANR	3482948	Identifier	use_spp		3482908	0					
ANR	3482949	CompoundStatement		13:2:230:246	3482908	1					
ANR	3482950	IdentifierDeclStatement	Output out ;	1127:2:27629:27639	3482908	0	True				
ANR	3482951	IdentifierDecl	out		3482908	0					
ANR	3482952	IdentifierDeclType	Output		3482908	0					
ANR	3482953	Identifier	out		3482908	1					
ANR	3482954	ExpressionStatement	out . fout = NULL	1128:2:27643:27658	3482908	1	True				
ANR	3482955	AssignmentExpression	out . fout = NULL		3482908	0		=			
ANR	3482956	MemberAccess	out . fout		3482908	0					
ANR	3482957	Identifier	out		3482908	0					
ANR	3482958	Identifier	fout		3482908	1					
ANR	3482959	Identifier	NULL		3482908	1					
ANR	3482960	ExpressionStatement	"out . cout = r_strbuf_new ( """" )"	1129:2:27662:27690	3482908	2	True				
ANR	3482961	AssignmentExpression	"out . cout = r_strbuf_new ( """" )"		3482908	0		=			
ANR	3482962	MemberAccess	out . cout		3482908	0					
ANR	3482963	Identifier	out		3482908	0					
ANR	3482964	Identifier	cout		3482908	1					
ANR	3482965	CallExpression	"r_strbuf_new ( """" )"		3482908	1					
ANR	3482966	Callee	r_strbuf_new		3482908	0					
ANR	3482967	Identifier	r_strbuf_new		3482908	0					
ANR	3482968	ArgumentList	""""""		3482908	1					
ANR	3482969	Argument	""""""		3482908	0					
ANR	3482970	PrimaryExpression	""""""		3482908	0					
ANR	3482971	ExpressionStatement	r_strbuf_init ( out . cout )	1130:2:27694:27718	3482908	3	True				
ANR	3482972	CallExpression	r_strbuf_init ( out . cout )		3482908	0					
ANR	3482973	Callee	r_strbuf_init		3482908	0					
ANR	3482974	Identifier	r_strbuf_init		3482908	0					
ANR	3482975	ArgumentList	out . cout		3482908	1					
ANR	3482976	Argument	out . cout		3482908	0					
ANR	3482977	MemberAccess	out . cout		3482908	0					
ANR	3482978	Identifier	out		3482908	0					
ANR	3482979	Identifier	cout		3482908	1					
ANR	3482980	IdentifierDeclStatement	struct Proc proc ;	1131:2:27722:27738	3482908	4	True				
ANR	3482981	IdentifierDecl	proc		3482908	0					
ANR	3482982	IdentifierDeclType	struct Proc		3482908	0					
ANR	3482983	Identifier	proc		3482908	1					
ANR	3482984	ExpressionStatement	"spp_proc_set ( & proc , ""spp"" , 1 )"	1132:2:27742:27772	3482908	5	True				
ANR	3482985	CallExpression	"spp_proc_set ( & proc , ""spp"" , 1 )"		3482908	0					
ANR	3482986	Callee	spp_proc_set		3482908	0					
ANR	3482987	Identifier	spp_proc_set		3482908	0					
ANR	3482988	ArgumentList	& proc		3482908	1					
ANR	3482989	Argument	& proc		3482908	0					
ANR	3482990	UnaryOperationExpression	& proc		3482908	0					
ANR	3482991	UnaryOperator	&		3482908	0					
ANR	3482992	Identifier	proc		3482908	1					
ANR	3482993	Argument	"""spp"""		3482908	1					
ANR	3482994	PrimaryExpression	"""spp"""		3482908	0					
ANR	3482995	Argument	1		3482908	2					
ANR	3482996	PrimaryExpression	1		3482908	0					
ANR	3482997	ExpressionStatement	lbuf = replace_directives ( lbuf )	1134:2:27777:27809	3482908	6	True				
ANR	3482998	AssignmentExpression	lbuf = replace_directives ( lbuf )		3482908	0		=			
ANR	3482999	Identifier	lbuf		3482908	0					
ANR	3483000	CallExpression	replace_directives ( lbuf )		3482908	1					
ANR	3483001	Callee	replace_directives		3482908	0					
ANR	3483002	Identifier	replace_directives		3482908	0					
ANR	3483003	ArgumentList	lbuf		3482908	1					
ANR	3483004	Argument	lbuf		3482908	0					
ANR	3483005	Identifier	lbuf		3482908	0					
ANR	3483006	ExpressionStatement	"spp_eval ( lbuf , & out )"	1135:2:27813:27834	3482908	7	True				
ANR	3483007	CallExpression	"spp_eval ( lbuf , & out )"		3482908	0					
ANR	3483008	Callee	spp_eval		3482908	0					
ANR	3483009	Identifier	spp_eval		3482908	0					
ANR	3483010	ArgumentList	lbuf		3482908	1					
ANR	3483011	Argument	lbuf		3482908	0					
ANR	3483012	Identifier	lbuf		3482908	0					
ANR	3483013	Argument	& out		3482908	1					
ANR	3483014	UnaryOperationExpression	& out		3482908	0					
ANR	3483015	UnaryOperator	&		3482908	0					
ANR	3483016	Identifier	out		3482908	1					
ANR	3483017	ExpressionStatement	free ( lbuf )	1136:2:27838:27849	3482908	8	True				
ANR	3483018	CallExpression	free ( lbuf )		3482908	0					
ANR	3483019	Callee	free		3482908	0					
ANR	3483020	Identifier	free		3482908	0					
ANR	3483021	ArgumentList	lbuf		3482908	1					
ANR	3483022	Argument	lbuf		3482908	0					
ANR	3483023	Identifier	lbuf		3482908	0					
ANR	3483024	ExpressionStatement	lbuf = strdup ( r_strbuf_get ( out . cout ) )	1137:2:27853:27892	3482908	9	True				
ANR	3483025	AssignmentExpression	lbuf = strdup ( r_strbuf_get ( out . cout ) )		3482908	0		=			
ANR	3483026	Identifier	lbuf		3482908	0					
ANR	3483027	CallExpression	strdup ( r_strbuf_get ( out . cout ) )		3482908	1					
ANR	3483028	Callee	strdup		3482908	0					
ANR	3483029	Identifier	strdup		3482908	0					
ANR	3483030	ArgumentList	r_strbuf_get ( out . cout )		3482908	1					
ANR	3483031	Argument	r_strbuf_get ( out . cout )		3482908	0					
ANR	3483032	CallExpression	r_strbuf_get ( out . cout )		3482908	0					
ANR	3483033	Callee	r_strbuf_get		3482908	0					
ANR	3483034	Identifier	r_strbuf_get		3482908	0					
ANR	3483035	ArgumentList	out . cout		3482908	1					
ANR	3483036	Argument	out . cout		3482908	0					
ANR	3483037	MemberAccess	out . cout		3482908	0					
ANR	3483038	Identifier	out		3482908	0					
ANR	3483039	Identifier	cout		3482908	1					
ANR	3483040	ExpressionStatement	"acode = r_asm_massemble ( a , lbuf )"	1139:1:27898:27931	3482908	5	True				
ANR	3483041	AssignmentExpression	"acode = r_asm_massemble ( a , lbuf )"		3482908	0		=			
ANR	3483042	Identifier	acode		3482908	0					
ANR	3483043	CallExpression	"r_asm_massemble ( a , lbuf )"		3482908	1					
ANR	3483044	Callee	r_asm_massemble		3482908	0					
ANR	3483045	Identifier	r_asm_massemble		3482908	0					
ANR	3483046	ArgumentList	a		3482908	1					
ANR	3483047	Argument	a		3482908	0					
ANR	3483048	Identifier	a		3482908	0					
ANR	3483049	Argument	lbuf		3482908	1					
ANR	3483050	Identifier	lbuf		3482908	0					
ANR	3483051	ExpressionStatement	free ( lbuf )	1140:1:27934:27945	3482908	6	True				
ANR	3483052	CallExpression	free ( lbuf )		3482908	0					
ANR	3483053	Callee	free		3482908	0					
ANR	3483054	Identifier	free		3482908	0					
ANR	3483055	ArgumentList	lbuf		3482908	1					
ANR	3483056	Argument	lbuf		3482908	0					
ANR	3483057	Identifier	lbuf		3482908	0					
ANR	3483058	ReturnStatement	return acode ;	1141:1:27948:27960	3482908	7	True				
ANR	3483059	Identifier	acode		3482908	0					
ANR	3483060	ReturnType	R_API RAsmCode *		3482908	1					
ANR	3483061	Identifier	r_asm_rasm_assemble		3482908	2					
ANR	3483062	ParameterList	"RAsm * a , const char * buf , bool use_spp"		3482908	3					
ANR	3483063	Parameter	RAsm * a	1119:36:27451:27457	3482908	0	True				
ANR	3483064	ParameterType	RAsm *		3482908	0					
ANR	3483065	Identifier	a		3482908	1					
ANR	3483066	Parameter	const char * buf	1119:45:27460:27474	3482908	1	True				
ANR	3483067	ParameterType	const char *		3482908	0					
ANR	3483068	Identifier	buf		3482908	1					
ANR	3483069	Parameter	bool use_spp	1119:62:27477:27488	3482908	2	True				
ANR	3483070	ParameterType	bool		3482908	0					
ANR	3483071	Identifier	use_spp		3482908	1					
ANR	3483072	CFGEntryNode	ENTRY		3482908		True				
ANR	3483073	CFGExitNode	EXIT		3482908		True				
ANR	3483074	Symbol	a		3482908						
ANR	3483075	Symbol	proc		3482908						
ANR	3483076	Symbol	NULL		3482908						
ANR	3483077	Symbol	r_strbuf_new		3482908						
ANR	3483078	Symbol	replace_directives		3482908						
ANR	3483079	Symbol	use_spp		3482908						
ANR	3483080	Symbol	acode		3482908						
ANR	3483081	Symbol	out . fout		3482908						
ANR	3483082	Symbol	out		3482908						
ANR	3483083	Symbol	out . cout		3482908						
ANR	3483084	Symbol	buf		3482908						
ANR	3483085	Symbol	& out		3482908						
ANR	3483086	Symbol	lbuf		3482908						
ANR	3483087	Symbol	r_strbuf_get		3482908						
ANR	3483088	Symbol	r_asm_massemble		3482908						
ANR	3483089	Symbol	strdup		3482908						
ANR	3483090	Symbol	& proc		3482908						
