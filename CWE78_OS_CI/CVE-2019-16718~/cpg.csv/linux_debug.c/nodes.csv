command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5295486	File	data/converged/CVE-2019-16718~_radare2/linux_debug.c								
ANR	5295487	Function	linux_reg_profile	20:0:344:986							
ANR	5295488	FunctionDef	linux_reg_profile (RDebug * dbg)		5295487	0					
ANR	5295489	CompoundStatement		20:38:382:986	5295487	0					
ANR	5295490	Statement	include	22:1:397:403	5295487	0	True				
ANR	5295491	Statement	"""reg/linux-arm.h"""	22:9:405:421	5295487	1	True				
ANR	5295492	ReturnType	char *		5295487	1					
ANR	5295493	Identifier	linux_reg_profile		5295487	2					
ANR	5295494	ParameterList	RDebug * dbg		5295487	3					
ANR	5295495	Parameter	RDebug * dbg	20:25:369:379	5295487	0	True				
ANR	5295496	ParameterType	RDebug *		5295487	0					
ANR	5295497	Identifier	dbg		5295487	1					
ANR	5295498	CFGEntryNode	ENTRY		5295487		True				
ANR	5295499	CFGExitNode	EXIT		5295487		True				
ANR	5295500	Symbol	dbg		5295487						
ANR	5295501	DeclStmt									
ANR	5295502	Decl							void	void ( RDebug * dbg )	linux_detach_all
ANR	5295503	DeclStmt									
ANR	5295504	Decl							char	"char * ( int pid , const char * file )"	read_link
ANR	5295505	DeclStmt									
ANR	5295506	Decl							int	"int ( RDebug * dbg , int ptid )"	linux_attach_single_pid
ANR	5295507	DeclStmt									
ANR	5295508	Decl							void	void ( RDebug * dbg )	linux_attach_all
ANR	5295509	DeclStmt									
ANR	5295510	Decl							void	"void ( RDebug * dbg , int pid )"	linux_remove_thread
ANR	5295511	DeclStmt									
ANR	5295512	Decl							void	"void ( RDebug * dbg , int tid )"	linux_add_and_attach_new_thread
ANR	5295513	DeclStmt									
ANR	5295514	Decl							int	int ( int pid )	linux_stop_process
ANR	5295515	Function	linux_handle_signals	60:0:1354:3641							
ANR	5295516	FunctionDef	linux_handle_signals (RDebug * dbg)		5295515	0					
ANR	5295517	CompoundStatement		60:39:1393:3641	5295515	0					
ANR	5295518	IdentifierDeclStatement	siginfo_t siginfo = { 0 } ;	61:1:1396:1419	5295515	0	True				
ANR	5295519	IdentifierDecl	siginfo = { 0 }		5295515	0					
ANR	5295520	IdentifierDeclType	siginfo_t		5295515	0					
ANR	5295521	Identifier	siginfo		5295515	1					
ANR	5295522	AssignmentExpression	siginfo = { 0 }		5295515	2		=			
ANR	5295523	Identifier	siginfo		5295515	0					
ANR	5295524	InitializerList	0		5295515	1					
ANR	5295525	PrimaryExpression	0		5295515	0					
ANR	5295526	IdentifierDeclStatement	"int ret = r_debug_ptrace ( dbg , PTRACE_GETSIGINFO , dbg -> pid , 0 , ( r_ptrace_data_t ) ( size_t ) & siginfo ) ;"	62:1:1422:1519	5295515	1	True				
ANR	5295527	IdentifierDecl	"ret = r_debug_ptrace ( dbg , PTRACE_GETSIGINFO , dbg -> pid , 0 , ( r_ptrace_data_t ) ( size_t ) & siginfo )"		5295515	0					
ANR	5295528	IdentifierDeclType	int		5295515	0					
ANR	5295529	Identifier	ret		5295515	1					
ANR	5295530	AssignmentExpression	"ret = r_debug_ptrace ( dbg , PTRACE_GETSIGINFO , dbg -> pid , 0 , ( r_ptrace_data_t ) ( size_t ) & siginfo )"		5295515	2		=			
ANR	5295531	Identifier	ret		5295515	0					
ANR	5295532	CallExpression	"r_debug_ptrace ( dbg , PTRACE_GETSIGINFO , dbg -> pid , 0 , ( r_ptrace_data_t ) ( size_t ) & siginfo )"		5295515	1					
ANR	5295533	Callee	r_debug_ptrace		5295515	0					
ANR	5295534	Identifier	r_debug_ptrace		5295515	0					
ANR	5295535	ArgumentList	dbg		5295515	1					
ANR	5295536	Argument	dbg		5295515	0					
ANR	5295537	Identifier	dbg		5295515	0					
ANR	5295538	Argument	PTRACE_GETSIGINFO		5295515	1					
ANR	5295539	Identifier	PTRACE_GETSIGINFO		5295515	0					
ANR	5295540	Argument	dbg -> pid		5295515	2					
ANR	5295541	PtrMemberAccess	dbg -> pid		5295515	0					
ANR	5295542	Identifier	dbg		5295515	0					
ANR	5295543	Identifier	pid		5295515	1					
ANR	5295544	Argument	0		5295515	3					
ANR	5295545	PrimaryExpression	0		5295515	0					
ANR	5295546	Argument	( r_ptrace_data_t ) ( size_t ) & siginfo		5295515	4					
ANR	5295547	CastExpression	( r_ptrace_data_t ) ( size_t ) & siginfo		5295515	0					
ANR	5295548	CastTarget	r_ptrace_data_t		5295515	0					
ANR	5295549	CastExpression	( size_t ) & siginfo		5295515	1					
ANR	5295550	CastTarget	size_t		5295515	0					
ANR	5295551	UnaryOperationExpression	& siginfo		5295515	1					
ANR	5295552	UnaryOperator	&		5295515	0					
ANR	5295553	Identifier	siginfo		5295515	1					
ANR	5295554	IfStatement	if ( ret == - 1 )		5295515	2					
ANR	5295555	Condition	ret == - 1	63:5:1526:1534	5295515	0	True				
ANR	5295556	EqualityExpression	ret == - 1		5295515	0		==			
ANR	5295557	Identifier	ret		5295515	0					
ANR	5295558	UnaryOperationExpression	- 1		5295515	1					
ANR	5295559	UnaryOperator	-		5295515	0					
ANR	5295560	PrimaryExpression	1		5295515	1					
ANR	5295561	CompoundStatement		4:16:143:143	5295515	1					
ANR	5295562	IfStatement	if ( errno == ESRCH )		5295515	0					
ANR	5295563	Condition	errno == ESRCH	65:6:1599:1612	5295515	0	True				
ANR	5295564	EqualityExpression	errno == ESRCH		5295515	0		==			
ANR	5295565	Identifier	errno		5295515	0					
ANR	5295566	Identifier	ESRCH		5295515	1					
ANR	5295567	CompoundStatement		6:22:221:221	5295515	1					
ANR	5295568	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_DEAD	66:3:1620:1658	5295515	0	True				
ANR	5295569	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_DEAD		5295515	0		=			
ANR	5295570	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295571	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295572	Identifier	dbg		5295515	0					
ANR	5295573	Identifier	reason		5295515	1					
ANR	5295574	Identifier	type		5295515	1					
ANR	5295575	Identifier	R_DEBUG_REASON_DEAD		5295515	1					
ANR	5295576	ReturnStatement	return true ;	67:3:1663:1674	5295515	1	True				
ANR	5295577	Identifier	true		5295515	0					
ANR	5295578	ExpressionStatement	"r_sys_perror ( ""ptrace GETSIGINFO"" )"	69:2:1682:1716	5295515	1	True				
ANR	5295579	CallExpression	"r_sys_perror ( ""ptrace GETSIGINFO"" )"		5295515	0					
ANR	5295580	Callee	r_sys_perror		5295515	0					
ANR	5295581	Identifier	r_sys_perror		5295515	0					
ANR	5295582	ArgumentList	"""ptrace GETSIGINFO"""		5295515	1					
ANR	5295583	Argument	"""ptrace GETSIGINFO"""		5295515	0					
ANR	5295584	PrimaryExpression	"""ptrace GETSIGINFO"""		5295515	0					
ANR	5295585	ReturnStatement	return false ;	70:2:1720:1732	5295515	2	True				
ANR	5295586	Identifier	false		5295515	0					
ANR	5295587	IfStatement	if ( siginfo . si_signo > 0 )		5295515	3					
ANR	5295588	Condition	siginfo . si_signo > 0	73:5:1743:1762	5295515	0	True				
ANR	5295589	RelationalExpression	siginfo . si_signo > 0		5295515	0		>			
ANR	5295590	MemberAccess	siginfo . si_signo		5295515	0					
ANR	5295591	Identifier	siginfo		5295515	0					
ANR	5295592	Identifier	si_signo		5295515	1					
ANR	5295593	PrimaryExpression	0		5295515	1					
ANR	5295594	CompoundStatement		14:27:371:371	5295515	1					
ANR	5295595	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_SIGNAL	76:2:1856:1896	5295515	0	True				
ANR	5295596	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_SIGNAL		5295515	0		=			
ANR	5295597	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295598	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295599	Identifier	dbg		5295515	0					
ANR	5295600	Identifier	reason		5295515	1					
ANR	5295601	Identifier	type		5295515	1					
ANR	5295602	Identifier	R_DEBUG_REASON_SIGNAL		5295515	1					
ANR	5295603	ExpressionStatement	dbg -> reason . signum = siginfo . si_signo	77:2:1900:1937	5295515	1	True				
ANR	5295604	AssignmentExpression	dbg -> reason . signum = siginfo . si_signo		5295515	0		=			
ANR	5295605	MemberAccess	dbg -> reason . signum		5295515	0					
ANR	5295606	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295607	Identifier	dbg		5295515	0					
ANR	5295608	Identifier	reason		5295515	1					
ANR	5295609	Identifier	signum		5295515	1					
ANR	5295610	MemberAccess	siginfo . si_signo		5295515	1					
ANR	5295611	Identifier	siginfo		5295515	0					
ANR	5295612	Identifier	si_signo		5295515	1					
ANR	5295613	ExpressionStatement	dbg -> stopaddr = ( ut64 ) siginfo . si_addr	78:2:1941:1978	5295515	2	True				
ANR	5295614	AssignmentExpression	dbg -> stopaddr = ( ut64 ) siginfo . si_addr		5295515	0		=			
ANR	5295615	PtrMemberAccess	dbg -> stopaddr		5295515	0					
ANR	5295616	Identifier	dbg		5295515	0					
ANR	5295617	Identifier	stopaddr		5295515	1					
ANR	5295618	CastExpression	( ut64 ) siginfo . si_addr		5295515	1					
ANR	5295619	CastTarget	ut64		5295515	0					
ANR	5295620	MemberAccess	siginfo . si_addr		5295515	1					
ANR	5295621	Identifier	siginfo		5295515	0					
ANR	5295622	Identifier	si_addr		5295515	1					
ANR	5295623	SwitchStatement	switch ( dbg -> reason . signum )		5295515	3					
ANR	5295624	Condition	dbg -> reason . signum	82:10:2113:2130	5295515	0	True				
ANR	5295625	MemberAccess	dbg -> reason . signum		5295515	0					
ANR	5295626	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295627	Identifier	dbg		5295515	0					
ANR	5295628	Identifier	reason		5295515	1					
ANR	5295629	Identifier	signum		5295515	1					
ANR	5295630	CompoundStatement		23:30:739:739	5295515	1					
ANR	5295631	Label	case SIGTRAP :	83:2:2137:2149	5295515	0	True				
ANR	5295632	Identifier	SIGTRAP		5295515	0					
ANR	5295633	CompoundStatement		25:2:759:759	5295515	1					
ANR	5295634	IfStatement	if ( dbg -> glob_libs || dbg -> glob_unlibs )		5295515	0					
ANR	5295635	Condition	dbg -> glob_libs || dbg -> glob_unlibs	85:7:2162:2195	5295515	0	True				
ANR	5295636	OrExpression	dbg -> glob_libs || dbg -> glob_unlibs		5295515	0		||			
ANR	5295637	PtrMemberAccess	dbg -> glob_libs		5295515	0					
ANR	5295638	Identifier	dbg		5295515	0					
ANR	5295639	Identifier	glob_libs		5295515	1					
ANR	5295640	PtrMemberAccess	dbg -> glob_unlibs		5295515	1					
ANR	5295641	Identifier	dbg		5295515	0					
ANR	5295642	Identifier	glob_unlibs		5295515	1					
ANR	5295643	CompoundStatement		28:4:858:923	5295515	1					
ANR	5295644	IdentifierDeclStatement	"ut64 pc_addr = r_debug_reg_get ( dbg , ""PC"" ) ;"	86:4:2204:2246	5295515	0	True				
ANR	5295645	IdentifierDecl	"pc_addr = r_debug_reg_get ( dbg , ""PC"" )"		5295515	0					
ANR	5295646	IdentifierDeclType	ut64		5295515	0					
ANR	5295647	Identifier	pc_addr		5295515	1					
ANR	5295648	AssignmentExpression	"pc_addr = r_debug_reg_get ( dbg , ""PC"" )"		5295515	2		=			
ANR	5295649	Identifier	pc_addr		5295515	0					
ANR	5295650	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		5295515	1					
ANR	5295651	Callee	r_debug_reg_get		5295515	0					
ANR	5295652	Identifier	r_debug_reg_get		5295515	0					
ANR	5295653	ArgumentList	dbg		5295515	1					
ANR	5295654	Argument	dbg		5295515	0					
ANR	5295655	Identifier	dbg		5295515	0					
ANR	5295656	Argument	"""PC"""		5295515	1					
ANR	5295657	PrimaryExpression	"""PC"""		5295515	0					
ANR	5295658	IdentifierDeclStatement	"RBreakpointItem * b = r_bp_get_at ( dbg -> bp , pc_addr - dbg -> bpsize ) ;"	87:4:2252:2317	5295515	1	True				
ANR	5295659	IdentifierDecl	"* b = r_bp_get_at ( dbg -> bp , pc_addr - dbg -> bpsize )"		5295515	0					
ANR	5295660	IdentifierDeclType	RBreakpointItem *		5295515	0					
ANR	5295661	Identifier	b		5295515	1					
ANR	5295662	AssignmentExpression	"* b = r_bp_get_at ( dbg -> bp , pc_addr - dbg -> bpsize )"		5295515	2		=			
ANR	5295663	Identifier	b		5295515	0					
ANR	5295664	CallExpression	"r_bp_get_at ( dbg -> bp , pc_addr - dbg -> bpsize )"		5295515	1					
ANR	5295665	Callee	r_bp_get_at		5295515	0					
ANR	5295666	Identifier	r_bp_get_at		5295515	0					
ANR	5295667	ArgumentList	dbg -> bp		5295515	1					
ANR	5295668	Argument	dbg -> bp		5295515	0					
ANR	5295669	PtrMemberAccess	dbg -> bp		5295515	0					
ANR	5295670	Identifier	dbg		5295515	0					
ANR	5295671	Identifier	bp		5295515	1					
ANR	5295672	Argument	pc_addr - dbg -> bpsize		5295515	1					
ANR	5295673	AdditiveExpression	pc_addr - dbg -> bpsize		5295515	0		-			
ANR	5295674	Identifier	pc_addr		5295515	0					
ANR	5295675	PtrMemberAccess	dbg -> bpsize		5295515	1					
ANR	5295676	Identifier	dbg		5295515	0					
ANR	5295677	Identifier	bpsize		5295515	1					
ANR	5295678	IfStatement	if ( b && b -> internal )		5295515	2					
ANR	5295679	Condition	b && b -> internal	88:8:2327:2342	5295515	0	True				
ANR	5295680	AndExpression	b && b -> internal		5295515	0		&&			
ANR	5295681	Identifier	b		5295515	0					
ANR	5295682	PtrMemberAccess	b -> internal		5295515	1					
ANR	5295683	Identifier	b		5295515	0					
ANR	5295684	Identifier	internal		5295515	1					
ANR	5295685	CompoundStatement		30:5:958:992	5295515	1					
ANR	5295686	IdentifierDeclStatement	"char * p = strstr ( b -> data , ""dbg."" ) ;"	89:5:2352:2386	5295515	0	True				
ANR	5295687	IdentifierDecl	"* p = strstr ( b -> data , ""dbg."" )"		5295515	0					
ANR	5295688	IdentifierDeclType	char *		5295515	0					
ANR	5295689	Identifier	p		5295515	1					
ANR	5295690	AssignmentExpression	"* p = strstr ( b -> data , ""dbg."" )"		5295515	2		=			
ANR	5295691	Identifier	p		5295515	0					
ANR	5295692	CallExpression	"strstr ( b -> data , ""dbg."" )"		5295515	1					
ANR	5295693	Callee	strstr		5295515	0					
ANR	5295694	Identifier	strstr		5295515	0					
ANR	5295695	ArgumentList	b -> data		5295515	1					
ANR	5295696	Argument	b -> data		5295515	0					
ANR	5295697	PtrMemberAccess	b -> data		5295515	0					
ANR	5295698	Identifier	b		5295515	0					
ANR	5295699	Identifier	data		5295515	1					
ANR	5295700	Argument	"""dbg."""		5295515	1					
ANR	5295701	PrimaryExpression	"""dbg."""		5295515	0					
ANR	5295702	IfStatement	if ( p )		5295515	1					
ANR	5295703	Condition	p	90:9:2397:2397	5295515	0	True				
ANR	5295704	Identifier	p		5295515	0					
ANR	5295705	CompoundStatement		31:12:1006:1006	5295515	1					
ANR	5295706	IfStatement	"if ( r_str_startswith ( p , ""dbg.libs"" ) )"		5295515	0					
ANR	5295707	Condition	"r_str_startswith ( p , ""dbg.libs"" )"	91:10:2412:2443	5295515	0	True				
ANR	5295708	CallExpression	"r_str_startswith ( p , ""dbg.libs"" )"		5295515	0					
ANR	5295709	Callee	r_str_startswith		5295515	0					
ANR	5295710	Identifier	r_str_startswith		5295515	0					
ANR	5295711	ArgumentList	p		5295515	1					
ANR	5295712	Argument	p		5295515	0					
ANR	5295713	Identifier	p		5295515	0					
ANR	5295714	Argument	"""dbg.libs"""		5295515	1					
ANR	5295715	PrimaryExpression	"""dbg.libs"""		5295515	0					
ANR	5295716	CompoundStatement		33:7:1061:1077	5295515	1					
ANR	5295717	IdentifierDeclStatement	const char * name ;	92:7:2455:2471	5295515	0	True				
ANR	5295718	IdentifierDecl	* name		5295515	0					
ANR	5295719	IdentifierDeclType	const char *		5295515	0					
ANR	5295720	Identifier	name		5295515	1					
ANR	5295721	IfStatement	"if ( strstr ( b -> data , ""sym.imp.dlopen"" ) )"		5295515	1					
ANR	5295722	Condition	"strstr ( b -> data , ""sym.imp.dlopen"" )"	93:11:2484:2517	5295515	0	True				
ANR	5295723	CallExpression	"strstr ( b -> data , ""sym.imp.dlopen"" )"		5295515	0					
ANR	5295724	Callee	strstr		5295515	0					
ANR	5295725	Identifier	strstr		5295515	0					
ANR	5295726	ArgumentList	b -> data		5295515	1					
ANR	5295727	Argument	b -> data		5295515	0					
ANR	5295728	PtrMemberAccess	b -> data		5295515	0					
ANR	5295729	Identifier	b		5295515	0					
ANR	5295730	Identifier	data		5295515	1					
ANR	5295731	Argument	"""sym.imp.dlopen"""		5295515	1					
ANR	5295732	PrimaryExpression	"""sym.imp.dlopen"""		5295515	0					
ANR	5295733	CompoundStatement		34:47:1126:1126	5295515	1					
ANR	5295734	ExpressionStatement	"name = r_reg_get_name ( dbg -> reg , R_REG_NAME_A0 )"	94:8:2530:2577	5295515	0	True				
ANR	5295735	AssignmentExpression	"name = r_reg_get_name ( dbg -> reg , R_REG_NAME_A0 )"		5295515	0		=			
ANR	5295736	Identifier	name		5295515	0					
ANR	5295737	CallExpression	"r_reg_get_name ( dbg -> reg , R_REG_NAME_A0 )"		5295515	1					
ANR	5295738	Callee	r_reg_get_name		5295515	0					
ANR	5295739	Identifier	r_reg_get_name		5295515	0					
ANR	5295740	ArgumentList	dbg -> reg		5295515	1					
ANR	5295741	Argument	dbg -> reg		5295515	0					
ANR	5295742	PtrMemberAccess	dbg -> reg		5295515	0					
ANR	5295743	Identifier	dbg		5295515	0					
ANR	5295744	Identifier	reg		5295515	1					
ANR	5295745	Argument	R_REG_NAME_A0		5295515	1					
ANR	5295746	Identifier	R_REG_NAME_A0		5295515	0					
ANR	5295747	ElseStatement	else		5295515	0					
ANR	5295748	CompoundStatement		36:14:1199:1199	5295515	0					
ANR	5295749	ExpressionStatement	"name = r_reg_get_name ( dbg -> reg , R_REG_NAME_A1 )"	96:8:2603:2650	5295515	0	True				
ANR	5295750	AssignmentExpression	"name = r_reg_get_name ( dbg -> reg , R_REG_NAME_A1 )"		5295515	0		=			
ANR	5295751	Identifier	name		5295515	0					
ANR	5295752	CallExpression	"r_reg_get_name ( dbg -> reg , R_REG_NAME_A1 )"		5295515	1					
ANR	5295753	Callee	r_reg_get_name		5295515	0					
ANR	5295754	Identifier	r_reg_get_name		5295515	0					
ANR	5295755	ArgumentList	dbg -> reg		5295515	1					
ANR	5295756	Argument	dbg -> reg		5295515	0					
ANR	5295757	PtrMemberAccess	dbg -> reg		5295515	0					
ANR	5295758	Identifier	dbg		5295515	0					
ANR	5295759	Identifier	reg		5295515	1					
ANR	5295760	Argument	R_REG_NAME_A1		5295515	1					
ANR	5295761	Identifier	R_REG_NAME_A1		5295515	0					
ANR	5295762	ExpressionStatement	"b -> data = r_str_appendf ( b -> data , "";ps@r:%s"" , name )"	98:7:2668:2719	5295515	2	True				
ANR	5295763	AssignmentExpression	"b -> data = r_str_appendf ( b -> data , "";ps@r:%s"" , name )"		5295515	0		=			
ANR	5295764	PtrMemberAccess	b -> data		5295515	0					
ANR	5295765	Identifier	b		5295515	0					
ANR	5295766	Identifier	data		5295515	1					
ANR	5295767	CallExpression	"r_str_appendf ( b -> data , "";ps@r:%s"" , name )"		5295515	1					
ANR	5295768	Callee	r_str_appendf		5295515	0					
ANR	5295769	Identifier	r_str_appendf		5295515	0					
ANR	5295770	ArgumentList	b -> data		5295515	1					
ANR	5295771	Argument	b -> data		5295515	0					
ANR	5295772	PtrMemberAccess	b -> data		5295515	0					
ANR	5295773	Identifier	b		5295515	0					
ANR	5295774	Identifier	data		5295515	1					
ANR	5295775	Argument	""";ps@r:%s"""		5295515	1					
ANR	5295776	PrimaryExpression	""";ps@r:%s"""		5295515	0					
ANR	5295777	Argument	name		5295515	2					
ANR	5295778	Identifier	name		5295515	0					
ANR	5295779	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_NEW_LIB	99:7:2728:2769	5295515	3	True				
ANR	5295780	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_NEW_LIB		5295515	0		=			
ANR	5295781	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295782	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295783	Identifier	dbg		5295515	0					
ANR	5295784	Identifier	reason		5295515	1					
ANR	5295785	Identifier	type		5295515	1					
ANR	5295786	Identifier	R_DEBUG_REASON_NEW_LIB		5295515	1					
ANR	5295787	ElseStatement	else		5295515	0					
ANR	5295788	IfStatement	"if ( r_str_startswith ( p , ""dbg.unlibs"" ) )"		5295515	0					
ANR	5295789	Condition	"r_str_startswith ( p , ""dbg.unlibs"" )"	100:17:2788:2821	5295515	0	True				
ANR	5295790	CallExpression	"r_str_startswith ( p , ""dbg.unlibs"" )"		5295515	0					
ANR	5295791	Callee	r_str_startswith		5295515	0					
ANR	5295792	Identifier	r_str_startswith		5295515	0					
ANR	5295793	ArgumentList	p		5295515	1					
ANR	5295794	Argument	p		5295515	0					
ANR	5295795	Identifier	p		5295515	0					
ANR	5295796	Argument	"""dbg.unlibs"""		5295515	1					
ANR	5295797	PrimaryExpression	"""dbg.unlibs"""		5295515	0					
ANR	5295798	CompoundStatement		41:53:1430:1430	5295515	1					
ANR	5295799	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_EXIT_LIB	101:7:2833:2875	5295515	0	True				
ANR	5295800	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_EXIT_LIB		5295515	0		=			
ANR	5295801	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295802	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295803	Identifier	dbg		5295515	0					
ANR	5295804	Identifier	reason		5295515	1					
ANR	5295805	Identifier	type		5295515	1					
ANR	5295806	Identifier	R_DEBUG_REASON_EXIT_LIB		5295515	1					
ANR	5295807	IfStatement	if ( dbg -> reason . type != R_DEBUG_REASON_NEW_LIB && dbg -> reason . type != R_DEBUG_REASON_EXIT_LIB )		5295515	1					
ANR	5295808	Condition	dbg -> reason . type != R_DEBUG_REASON_NEW_LIB && dbg -> reason . type != R_DEBUG_REASON_EXIT_LIB	106:7:2910:3002	5295515	0	True				
ANR	5295809	AndExpression	dbg -> reason . type != R_DEBUG_REASON_NEW_LIB && dbg -> reason . type != R_DEBUG_REASON_EXIT_LIB		5295515	0		&&			
ANR	5295810	EqualityExpression	dbg -> reason . type != R_DEBUG_REASON_NEW_LIB		5295515	0		!=			
ANR	5295811	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295812	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295813	Identifier	dbg		5295515	0					
ANR	5295814	Identifier	reason		5295515	1					
ANR	5295815	Identifier	type		5295515	1					
ANR	5295816	Identifier	R_DEBUG_REASON_NEW_LIB		5295515	1					
ANR	5295817	EqualityExpression	dbg -> reason . type != R_DEBUG_REASON_EXIT_LIB		5295515	1		!=			
ANR	5295818	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295819	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295820	Identifier	dbg		5295515	0					
ANR	5295821	Identifier	reason		5295515	1					
ANR	5295822	Identifier	type		5295515	1					
ANR	5295823	Identifier	R_DEBUG_REASON_EXIT_LIB		5295515	1					
ANR	5295824	CompoundStatement		48:49:1611:1611	5295515	1					
ANR	5295825	ExpressionStatement	dbg -> reason . bp_addr = ( ut64 ) ( size_t ) siginfo . si_addr	108:4:3011:3062	5295515	0	True				
ANR	5295826	AssignmentExpression	dbg -> reason . bp_addr = ( ut64 ) ( size_t ) siginfo . si_addr		5295515	0		=			
ANR	5295827	MemberAccess	dbg -> reason . bp_addr		5295515	0					
ANR	5295828	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295829	Identifier	dbg		5295515	0					
ANR	5295830	Identifier	reason		5295515	1					
ANR	5295831	Identifier	bp_addr		5295515	1					
ANR	5295832	CastExpression	( ut64 ) ( size_t ) siginfo . si_addr		5295515	1					
ANR	5295833	CastTarget	ut64		5295515	0					
ANR	5295834	CastExpression	( size_t ) siginfo . si_addr		5295515	1					
ANR	5295835	CastTarget	size_t		5295515	0					
ANR	5295836	MemberAccess	siginfo . si_addr		5295515	1					
ANR	5295837	Identifier	siginfo		5295515	0					
ANR	5295838	Identifier	si_addr		5295515	1					
ANR	5295839	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_BREAKPOINT	109:4:3068:3112	5295515	1	True				
ANR	5295840	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_BREAKPOINT		5295515	0		=			
ANR	5295841	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295842	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295843	Identifier	dbg		5295515	0					
ANR	5295844	Identifier	reason		5295515	1					
ANR	5295845	Identifier	type		5295515	1					
ANR	5295846	Identifier	R_DEBUG_REASON_BREAKPOINT		5295515	1					
ANR	5295847	BreakStatement	break ;	112:3:3126:3131	5295515	2	True				
ANR	5295848	Label	case SIGABRT :	113:2:3135:3147	5295515	3	True				
ANR	5295849	Identifier	SIGABRT		5295515	0					
ANR	5295850	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_ABORT	114:3:3177:3216	5295515	4	True				
ANR	5295851	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_ABORT		5295515	0		=			
ANR	5295852	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295853	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295854	Identifier	dbg		5295515	0					
ANR	5295855	Identifier	reason		5295515	1					
ANR	5295856	Identifier	type		5295515	1					
ANR	5295857	Identifier	R_DEBUG_REASON_ABORT		5295515	1					
ANR	5295858	BreakStatement	break ;	115:3:3221:3226	5295515	5	True				
ANR	5295859	Label	case SIGSEGV :	116:2:3230:3242	5295515	6	True				
ANR	5295860	Identifier	SIGSEGV		5295515	0					
ANR	5295861	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_SEGFAULT	117:3:3247:3289	5295515	7	True				
ANR	5295862	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_SEGFAULT		5295515	0		=			
ANR	5295863	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295864	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295865	Identifier	dbg		5295515	0					
ANR	5295866	Identifier	reason		5295515	1					
ANR	5295867	Identifier	type		5295515	1					
ANR	5295868	Identifier	R_DEBUG_REASON_SEGFAULT		5295515	1					
ANR	5295869	BreakStatement	break ;	118:3:3294:3299	5295515	8	True				
ANR	5295870	Label	case SIGCHLD :	119:2:3303:3315	5295515	9	True				
ANR	5295871	Identifier	SIGCHLD		5295515	0					
ANR	5295872	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_SIGNAL	120:3:3320:3360	5295515	10	True				
ANR	5295873	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_SIGNAL		5295515	0		=			
ANR	5295874	MemberAccess	dbg -> reason . type		5295515	0					
ANR	5295875	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295876	Identifier	dbg		5295515	0					
ANR	5295877	Identifier	reason		5295515	1					
ANR	5295878	Identifier	type		5295515	1					
ANR	5295879	Identifier	R_DEBUG_REASON_SIGNAL		5295515	1					
ANR	5295880	Label	default :	121:2:3364:3371	5295515	11	True				
ANR	5295881	Identifier	default		5295515	0					
ANR	5295882	BreakStatement	break ;	122:3:3376:3381	5295515	12	True				
ANR	5295883	IfStatement	if ( dbg -> reason . signum != SIGTRAP )		5295515	4					
ANR	5295884	Condition	dbg -> reason . signum != SIGTRAP	124:6:3393:3421	5295515	0	True				
ANR	5295885	EqualityExpression	dbg -> reason . signum != SIGTRAP		5295515	0		!=			
ANR	5295886	MemberAccess	dbg -> reason . signum		5295515	0					
ANR	5295887	PtrMemberAccess	dbg -> reason		5295515	0					
ANR	5295888	Identifier	dbg		5295515	0					
ANR	5295889	Identifier	reason		5295515	1					
ANR	5295890	Identifier	signum		5295515	1					
ANR	5295891	Identifier	SIGTRAP		5295515	1					
ANR	5295892	CompoundStatement		65:37:2030:2030	5295515	1					
ANR	5295893	Statement	eprintf	125:3:3429:3435	5295515	0	True				
ANR	5295894	Statement	(	125:11:3437:3437	5295515	1	True				
ANR	5295895	Statement	"""[+] SIGNAL %d errno=%d addr=0x%08"""	125:12:3438:3472	5295515	2	True				
ANR	5295896	Statement	PFMT64x	125:47:3473:3479	5295515	3	True				
ANR	5295897	Statement	""" code=%d ret=%d\\n"""	126:4:3485:3503	5295515	4	True				
ANR	5295898	Statement	","	126:23:3504:3504	5295515	5	True				
ANR	5295899	Statement	siginfo	127:4:3510:3516	5295515	6	True				
ANR	5295900	Statement	.	127:11:3517:3517	5295515	7	True				
ANR	5295901	Statement	si_signo	127:12:3518:3525	5295515	8	True				
ANR	5295902	Statement	","	127:20:3526:3526	5295515	9	True				
ANR	5295903	Statement	siginfo	127:22:3528:3534	5295515	10	True				
ANR	5295904	Statement	.	127:29:3535:3535	5295515	11	True				
ANR	5295905	Statement	si_errno	127:30:3536:3543	5295515	12	True				
ANR	5295906	Statement	","	127:38:3544:3544	5295515	13	True				
ANR	5295907	Statement	(	128:4:3550:3550	5295515	14	True				
ANR	5295908	Statement	ut64	128:5:3551:3554	5295515	15	True				
ANR	5295909	Statement	)	128:9:3555:3555	5295515	16	True				
ANR	5295910	Statement	(	128:10:3556:3556	5295515	17	True				
ANR	5295911	Statement	size_t	128:11:3557:3562	5295515	18	True				
ANR	5295912	Statement	)	128:17:3563:3563	5295515	19	True				
ANR	5295913	Statement	siginfo	128:18:3564:3570	5295515	20	True				
ANR	5295914	Statement	.	128:25:3571:3571	5295515	21	True				
ANR	5295915	Statement	si_addr	128:26:3572:3578	5295515	22	True				
ANR	5295916	Statement	","	128:33:3579:3579	5295515	23	True				
ANR	5295917	Statement	siginfo	128:35:3581:3587	5295515	24	True				
ANR	5295918	Statement	.	128:42:3588:3588	5295515	25	True				
ANR	5295919	Statement	si_code	128:43:3589:3595	5295515	26	True				
ANR	5295920	Statement	","	128:50:3596:3596	5295515	27	True				
ANR	5295921	Statement	ret	128:52:3598:3600	5295515	28	True				
ANR	5295922	Statement	)	128:55:3601:3601	5295515	29	True				
ANR	5295923	ExpressionStatement		128:56:3602:3602	5295515	30	True				
ANR	5295924	ReturnStatement	return true ;	130:2:3610:3621	5295515	5	True				
ANR	5295925	Identifier	true		5295515	0					
ANR	5295926	ReturnStatement	return false ;	132:1:3627:3639	5295515	4	True				
ANR	5295927	Identifier	false		5295515	0					
ANR	5295928	ReturnType	int		5295515	1					
ANR	5295929	Identifier	linux_handle_signals		5295515	2					
ANR	5295930	ParameterList	RDebug * dbg		5295515	3					
ANR	5295931	Parameter	RDebug * dbg	60:26:1380:1390	5295515	0	True				
ANR	5295932	ParameterType	RDebug *		5295515	0					
ANR	5295933	Identifier	dbg		5295515	1					
ANR	5295934	CFGEntryNode	ENTRY		5295515		True				
ANR	5295935	CFGExitNode	EXIT		5295515		True				
ANR	5295936	Symbol	& siginfo		5295515						
ANR	5295937	Symbol	dbg -> stopaddr		5295515						
ANR	5295938	Symbol	r_debug_reg_get		5295515						
ANR	5295939	Symbol	r_bp_get_at		5295515						
ANR	5295940	Symbol	r_debug_ptrace		5295515						
ANR	5295941	Symbol	siginfo		5295515						
ANR	5295942	Symbol	R_DEBUG_REASON_DEAD		5295515						
ANR	5295943	Symbol	dbg -> reason . type		5295515						
ANR	5295944	Symbol	dbg -> reason . signum		5295515						
ANR	5295945	Symbol	dbg -> reason . bp_addr		5295515						
ANR	5295946	Symbol	SIGTRAP		5295515						
ANR	5295947	Symbol	PTRACE_GETSIGINFO		5295515						
ANR	5295948	Symbol	R_DEBUG_REASON_SEGFAULT		5295515						
ANR	5295949	Symbol	ret		5295515						
ANR	5295950	Symbol	r_str_startswith		5295515						
ANR	5295951	Symbol	R_REG_NAME_A0		5295515						
ANR	5295952	Symbol	errno		5295515						
ANR	5295953	Symbol	b		5295515						
ANR	5295954	Symbol	dbg -> reason		5295515						
ANR	5295955	Symbol	dbg -> bp		5295515						
ANR	5295956	Symbol	siginfo . si_signo		5295515						
ANR	5295957	Symbol	siginfo . si_addr		5295515						
ANR	5295958	Symbol	R_REG_NAME_A1		5295515						
ANR	5295959	Symbol	dbg		5295515						
ANR	5295960	Symbol	false		5295515						
ANR	5295961	Symbol	b -> internal		5295515						
ANR	5295962	Symbol	R_DEBUG_REASON_ABORT		5295515						
ANR	5295963	Symbol	* dbg		5295515						
ANR	5295964	Symbol	* b		5295515						
ANR	5295965	Symbol	pc_addr		5295515						
ANR	5295966	Symbol	p		5295515						
ANR	5295967	Symbol	R_DEBUG_REASON_EXIT_LIB		5295515						
ANR	5295968	Symbol	R_DEBUG_REASON_BREAKPOINT		5295515						
ANR	5295969	Symbol	dbg -> glob_unlibs		5295515						
ANR	5295970	Symbol	dbg -> bpsize		5295515						
ANR	5295971	Symbol	dbg -> pid		5295515						
ANR	5295972	Symbol	R_DEBUG_REASON_NEW_LIB		5295515						
ANR	5295973	Symbol	b -> data		5295515						
ANR	5295974	Symbol	strstr		5295515						
ANR	5295975	Symbol	r_reg_get_name		5295515						
ANR	5295976	Symbol	r_str_appendf		5295515						
ANR	5295977	Symbol	true		5295515						
ANR	5295978	Symbol	dbg -> glob_libs		5295515						
ANR	5295979	Symbol	name		5295515						
ANR	5295980	Symbol	ESRCH		5295515						
ANR	5295981	Symbol	R_DEBUG_REASON_SIGNAL		5295515						
ANR	5295982	Symbol	dbg -> reg		5295515						
ANR	5295983	Function	linux_ptrace_event	153:0:4031:5813							
ANR	5295984	FunctionDef	"linux_ptrace_event (RDebug * dbg , int pid , int status)"		5295983	0					
ANR	5295985	CompoundStatement		153:71:4102:5813	5295983	0					
ANR	5295986	IdentifierDeclStatement	ut32 pt_evt ;	154:1:4105:4116	5295983	0	True				
ANR	5295987	IdentifierDecl	pt_evt		5295983	0					
ANR	5295988	IdentifierDeclType	ut32		5295983	0					
ANR	5295989	Identifier	pt_evt		5295983	1					
ANR	5295990	IdentifierDeclStatement	ut64 data ;	156:1:4179:4188	5295983	1	True				
ANR	5295991	IdentifierDecl	data		5295983	0					
ANR	5295992	IdentifierDeclType	ut64		5295983	0					
ANR	5295993	Identifier	data		5295983	1					
ANR	5295994	IfStatement	if ( ! WIFSTOPPED ( status ) || WSTOPSIG ( status ) != SIGTRAP )		5295983	2					
ANR	5295995	Condition	! WIFSTOPPED ( status ) || WSTOPSIG ( status ) != SIGTRAP	161:5:4266:4315	5295983	0	True				
ANR	5295996	OrExpression	! WIFSTOPPED ( status ) || WSTOPSIG ( status ) != SIGTRAP		5295983	0		||			
ANR	5295997	UnaryOperationExpression	! WIFSTOPPED ( status )		5295983	0					
ANR	5295998	UnaryOperator	!		5295983	0					
ANR	5295999	CallExpression	WIFSTOPPED ( status )		5295983	1					
ANR	5296000	Callee	WIFSTOPPED		5295983	0					
ANR	5296001	Identifier	WIFSTOPPED		5295983	0					
ANR	5296002	ArgumentList	status		5295983	1					
ANR	5296003	Argument	status		5295983	0					
ANR	5296004	Identifier	status		5295983	0					
ANR	5296005	EqualityExpression	WSTOPSIG ( status ) != SIGTRAP		5295983	1		!=			
ANR	5296006	CallExpression	WSTOPSIG ( status )		5295983	0					
ANR	5296007	Callee	WSTOPSIG		5295983	0					
ANR	5296008	Identifier	WSTOPSIG		5295983	0					
ANR	5296009	ArgumentList	status		5295983	1					
ANR	5296010	Argument	status		5295983	0					
ANR	5296011	Identifier	status		5295983	0					
ANR	5296012	Identifier	SIGTRAP		5295983	1					
ANR	5296013	CompoundStatement		9:57:215:215	5295983	1					
ANR	5296014	ReturnStatement	return R_DEBUG_REASON_UNKNOWN ;	162:2:4322:4351	5295983	0	True				
ANR	5296015	Identifier	R_DEBUG_REASON_UNKNOWN		5295983	0					
ANR	5296016	ExpressionStatement	pt_evt = status >> 16	165:1:4358:4379	5295983	3	True				
ANR	5296017	AssignmentExpression	pt_evt = status >> 16		5295983	0		=			
ANR	5296018	Identifier	pt_evt		5295983	0					
ANR	5296019	ShiftExpression	status >> 16		5295983	1		>>			
ANR	5296020	Identifier	status		5295983	0					
ANR	5296021	PrimaryExpression	16		5295983	1					
ANR	5296022	SwitchStatement	switch ( pt_evt )		5295983	4					
ANR	5296023	Condition	pt_evt	166:9:4390:4395	5295983	0	True				
ANR	5296024	Identifier	pt_evt		5295983	0					
ANR	5296025	CompoundStatement		14:17:295:295	5295983	1					
ANR	5296026	Label	case 0 :	167:1:4401:4407	5295983	0	True				
ANR	5296027	BreakStatement	break ;	169:2:4470:4475	5295983	1	True				
ANR	5296028	Label	case PTRACE_EVENT_CLONE :	170:1:4478:4501	5295983	2	True				
ANR	5296029	Identifier	PTRACE_EVENT_CLONE		5295983	0					
ANR	5296030	IfStatement	if ( dbg -> trace_clone )		5295983	3					
ANR	5296031	Condition	dbg -> trace_clone	171:6:4509:4524	5295983	0	True				
ANR	5296032	PtrMemberAccess	dbg -> trace_clone		5295983	0					
ANR	5296033	Identifier	dbg		5295983	0					
ANR	5296034	Identifier	trace_clone		5295983	1					
ANR	5296035	CompoundStatement		19:24:424:424	5295983	1					
ANR	5296036	IfStatement	"if ( r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1 )"		5295983	0					
ANR	5296037	Condition	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1"	172:7:4536:4621	5295983	0	True				
ANR	5296038	EqualityExpression	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1"		5295983	0		==			
ANR	5296039	CallExpression	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data )"		5295983	0					
ANR	5296040	Callee	r_debug_ptrace		5295983	0					
ANR	5296041	Identifier	r_debug_ptrace		5295983	0					
ANR	5296042	ArgumentList	dbg		5295983	1					
ANR	5296043	Argument	dbg		5295983	0					
ANR	5296044	Identifier	dbg		5295983	0					
ANR	5296045	Argument	PTRACE_GETEVENTMSG		5295983	1					
ANR	5296046	Identifier	PTRACE_GETEVENTMSG		5295983	0					
ANR	5296047	Argument	pid		5295983	2					
ANR	5296048	Identifier	pid		5295983	0					
ANR	5296049	Argument	0		5295983	3					
ANR	5296050	PrimaryExpression	0		5295983	0					
ANR	5296051	Argument	( r_ptrace_data_t ) ( size_t ) & data		5295983	4					
ANR	5296052	CastExpression	( r_ptrace_data_t ) ( size_t ) & data		5295983	0					
ANR	5296053	CastTarget	r_ptrace_data_t		5295983	0					
ANR	5296054	CastExpression	( size_t ) & data		5295983	1					
ANR	5296055	CastTarget	size_t		5295983	0					
ANR	5296056	UnaryOperationExpression	& data		5295983	1					
ANR	5296057	UnaryOperator	&		5295983	0					
ANR	5296058	Identifier	data		5295983	1					
ANR	5296059	UnaryOperationExpression	- 1		5295983	1					
ANR	5296060	UnaryOperator	-		5295983	0					
ANR	5296061	PrimaryExpression	1		5295983	1					
ANR	5296062	CompoundStatement		20:95:521:521	5295983	1					
ANR	5296063	ExpressionStatement	"r_sys_perror ( ""ptrace GETEVENTMSG"" )"	173:4:4630:4665	5295983	0	True				
ANR	5296064	CallExpression	"r_sys_perror ( ""ptrace GETEVENTMSG"" )"		5295983	0					
ANR	5296065	Callee	r_sys_perror		5295983	0					
ANR	5296066	Identifier	r_sys_perror		5295983	0					
ANR	5296067	ArgumentList	"""ptrace GETEVENTMSG"""		5295983	1					
ANR	5296068	Argument	"""ptrace GETEVENTMSG"""		5295983	0					
ANR	5296069	PrimaryExpression	"""ptrace GETEVENTMSG"""		5295983	0					
ANR	5296070	ReturnStatement	return R_DEBUG_REASON_ERROR ;	174:4:4671:4698	5295983	1	True				
ANR	5296071	Identifier	R_DEBUG_REASON_ERROR		5295983	0					
ANR	5296072	ExpressionStatement	"linux_add_and_attach_new_thread ( dbg , ( int ) data )"	177:3:4781:4829	5295983	1	True				
ANR	5296073	CallExpression	"linux_add_and_attach_new_thread ( dbg , ( int ) data )"		5295983	0					
ANR	5296074	Callee	linux_add_and_attach_new_thread		5295983	0					
ANR	5296075	Identifier	linux_add_and_attach_new_thread		5295983	0					
ANR	5296076	ArgumentList	dbg		5295983	1					
ANR	5296077	Argument	dbg		5295983	0					
ANR	5296078	Identifier	dbg		5295983	0					
ANR	5296079	Argument	( int ) data		5295983	1					
ANR	5296080	CastExpression	( int ) data		5295983	0					
ANR	5296081	CastTarget	int		5295983	0					
ANR	5296082	Identifier	data		5295983	1					
ANR	5296083	ReturnStatement	return R_DEBUG_REASON_NEW_TID ;	178:3:4834:4863	5295983	2	True				
ANR	5296084	Identifier	R_DEBUG_REASON_NEW_TID		5295983	0					
ANR	5296085	BreakStatement	break ;	180:2:4871:4876	5295983	4	True				
ANR	5296086	Label	case PTRACE_EVENT_FORK :	181:1:4879:4901	5295983	5	True				
ANR	5296087	Identifier	PTRACE_EVENT_FORK		5295983	0					
ANR	5296088	IfStatement	if ( dbg -> trace_forks )		5295983	6					
ANR	5296089	Condition	dbg -> trace_forks	182:6:4909:4924	5295983	0	True				
ANR	5296090	PtrMemberAccess	dbg -> trace_forks		5295983	0					
ANR	5296091	Identifier	dbg		5295983	0					
ANR	5296092	Identifier	trace_forks		5295983	1					
ANR	5296093	CompoundStatement		30:24:824:824	5295983	1					
ANR	5296094	IfStatement	"if ( r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1 )"		5295983	0					
ANR	5296095	Condition	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1"	183:7:4936:5021	5295983	0	True				
ANR	5296096	EqualityExpression	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1"		5295983	0		==			
ANR	5296097	CallExpression	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data )"		5295983	0					
ANR	5296098	Callee	r_debug_ptrace		5295983	0					
ANR	5296099	Identifier	r_debug_ptrace		5295983	0					
ANR	5296100	ArgumentList	dbg		5295983	1					
ANR	5296101	Argument	dbg		5295983	0					
ANR	5296102	Identifier	dbg		5295983	0					
ANR	5296103	Argument	PTRACE_GETEVENTMSG		5295983	1					
ANR	5296104	Identifier	PTRACE_GETEVENTMSG		5295983	0					
ANR	5296105	Argument	pid		5295983	2					
ANR	5296106	Identifier	pid		5295983	0					
ANR	5296107	Argument	0		5295983	3					
ANR	5296108	PrimaryExpression	0		5295983	0					
ANR	5296109	Argument	( r_ptrace_data_t ) ( size_t ) & data		5295983	4					
ANR	5296110	CastExpression	( r_ptrace_data_t ) ( size_t ) & data		5295983	0					
ANR	5296111	CastTarget	r_ptrace_data_t		5295983	0					
ANR	5296112	CastExpression	( size_t ) & data		5295983	1					
ANR	5296113	CastTarget	size_t		5295983	0					
ANR	5296114	UnaryOperationExpression	& data		5295983	1					
ANR	5296115	UnaryOperator	&		5295983	0					
ANR	5296116	Identifier	data		5295983	1					
ANR	5296117	UnaryOperationExpression	- 1		5295983	1					
ANR	5296118	UnaryOperator	-		5295983	0					
ANR	5296119	PrimaryExpression	1		5295983	1					
ANR	5296120	CompoundStatement		31:95:921:921	5295983	1					
ANR	5296121	ExpressionStatement	"r_sys_perror ( ""ptrace GETEVENTMSG"" )"	184:4:5030:5065	5295983	0	True				
ANR	5296122	CallExpression	"r_sys_perror ( ""ptrace GETEVENTMSG"" )"		5295983	0					
ANR	5296123	Callee	r_sys_perror		5295983	0					
ANR	5296124	Identifier	r_sys_perror		5295983	0					
ANR	5296125	ArgumentList	"""ptrace GETEVENTMSG"""		5295983	1					
ANR	5296126	Argument	"""ptrace GETEVENTMSG"""		5295983	0					
ANR	5296127	PrimaryExpression	"""ptrace GETEVENTMSG"""		5295983	0					
ANR	5296128	ReturnStatement	return R_DEBUG_REASON_ERROR ;	185:4:5071:5098	5295983	1	True				
ANR	5296129	Identifier	R_DEBUG_REASON_ERROR		5295983	0					
ANR	5296130	ExpressionStatement	dbg -> forked_pid = data	189:3:5178:5200	5295983	1	True				
ANR	5296131	AssignmentExpression	dbg -> forked_pid = data		5295983	0		=			
ANR	5296132	PtrMemberAccess	dbg -> forked_pid		5295983	0					
ANR	5296133	Identifier	dbg		5295983	0					
ANR	5296134	Identifier	forked_pid		5295983	1					
ANR	5296135	Identifier	data		5295983	1					
ANR	5296136	ReturnStatement	return R_DEBUG_REASON_NEW_PID ;	192:3:5296:5325	5295983	2	True				
ANR	5296137	Identifier	R_DEBUG_REASON_NEW_PID		5295983	0					
ANR	5296138	BreakStatement	break ;	194:2:5333:5338	5295983	7	True				
ANR	5296139	Label	case PTRACE_EVENT_EXIT :	195:1:5341:5363	5295983	8	True				
ANR	5296140	Identifier	PTRACE_EVENT_EXIT		5295983	0					
ANR	5296141	IfStatement	"if ( r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1 )"		5295983	9					
ANR	5296142	Condition	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1"	196:6:5371:5456	5295983	0	True				
ANR	5296143	EqualityExpression	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data ) == - 1"		5295983	0		==			
ANR	5296144	CallExpression	"r_debug_ptrace ( dbg , PTRACE_GETEVENTMSG , pid , 0 , ( r_ptrace_data_t ) ( size_t ) & data )"		5295983	0					
ANR	5296145	Callee	r_debug_ptrace		5295983	0					
ANR	5296146	Identifier	r_debug_ptrace		5295983	0					
ANR	5296147	ArgumentList	dbg		5295983	1					
ANR	5296148	Argument	dbg		5295983	0					
ANR	5296149	Identifier	dbg		5295983	0					
ANR	5296150	Argument	PTRACE_GETEVENTMSG		5295983	1					
ANR	5296151	Identifier	PTRACE_GETEVENTMSG		5295983	0					
ANR	5296152	Argument	pid		5295983	2					
ANR	5296153	Identifier	pid		5295983	0					
ANR	5296154	Argument	0		5295983	3					
ANR	5296155	PrimaryExpression	0		5295983	0					
ANR	5296156	Argument	( r_ptrace_data_t ) ( size_t ) & data		5295983	4					
ANR	5296157	CastExpression	( r_ptrace_data_t ) ( size_t ) & data		5295983	0					
ANR	5296158	CastTarget	r_ptrace_data_t		5295983	0					
ANR	5296159	CastExpression	( size_t ) & data		5295983	1					
ANR	5296160	CastTarget	size_t		5295983	0					
ANR	5296161	UnaryOperationExpression	& data		5295983	1					
ANR	5296162	UnaryOperator	&		5295983	0					
ANR	5296163	Identifier	data		5295983	1					
ANR	5296164	UnaryOperationExpression	- 1		5295983	1					
ANR	5296165	UnaryOperator	-		5295983	0					
ANR	5296166	PrimaryExpression	1		5295983	1					
ANR	5296167	CompoundStatement		44:94:1356:1356	5295983	1					
ANR	5296168	ExpressionStatement	"r_sys_perror ( ""ptrace GETEVENTMSG"" )"	197:3:5464:5499	5295983	0	True				
ANR	5296169	CallExpression	"r_sys_perror ( ""ptrace GETEVENTMSG"" )"		5295983	0					
ANR	5296170	Callee	r_sys_perror		5295983	0					
ANR	5296171	Identifier	r_sys_perror		5295983	0					
ANR	5296172	ArgumentList	"""ptrace GETEVENTMSG"""		5295983	1					
ANR	5296173	Argument	"""ptrace GETEVENTMSG"""		5295983	0					
ANR	5296174	PrimaryExpression	"""ptrace GETEVENTMSG"""		5295983	0					
ANR	5296175	ReturnStatement	return R_DEBUG_REASON_ERROR ;	198:3:5504:5531	5295983	1	True				
ANR	5296176	Identifier	R_DEBUG_REASON_ERROR		5295983	0					
ANR	5296177	ReturnStatement	return pid != dbg -> pid ? R_DEBUG_REASON_EXIT_TID : R_DEBUG_REASON_EXIT_PID ;	201:2:5621:5695	5295983	10	True				
ANR	5296178	ConditionalExpression	pid != dbg -> pid ? R_DEBUG_REASON_EXIT_TID : R_DEBUG_REASON_EXIT_PID		5295983	0					
ANR	5296179	Condition	pid != dbg -> pid		5295983	0					
ANR	5296180	EqualityExpression	pid != dbg -> pid		5295983	0		!=			
ANR	5296181	Identifier	pid		5295983	0					
ANR	5296182	PtrMemberAccess	dbg -> pid		5295983	1					
ANR	5296183	Identifier	dbg		5295983	0					
ANR	5296184	Identifier	pid		5295983	1					
ANR	5296185	Identifier	R_DEBUG_REASON_EXIT_TID		5295983	1					
ANR	5296186	Identifier	R_DEBUG_REASON_EXIT_PID		5295983	2					
ANR	5296187	Label	default :	202:1:5698:5705	5295983	11	True				
ANR	5296188	Identifier	default		5295983	0					
ANR	5296189	ExpressionStatement	"eprintf ( ""Unknown PTRACE_EVENT encountered: %d\\n"" , pt_evt )"	203:2:5709:5767	5295983	12	True				
ANR	5296190	CallExpression	"eprintf ( ""Unknown PTRACE_EVENT encountered: %d\\n"" , pt_evt )"		5295983	0					
ANR	5296191	Callee	eprintf		5295983	0					
ANR	5296192	Identifier	eprintf		5295983	0					
ANR	5296193	ArgumentList	"""Unknown PTRACE_EVENT encountered: %d\\n"""		5295983	1					
ANR	5296194	Argument	"""Unknown PTRACE_EVENT encountered: %d\\n"""		5295983	0					
ANR	5296195	PrimaryExpression	"""Unknown PTRACE_EVENT encountered: %d\\n"""		5295983	0					
ANR	5296196	Argument	pt_evt		5295983	1					
ANR	5296197	Identifier	pt_evt		5295983	0					
ANR	5296198	BreakStatement	break ;	204:2:5771:5776	5295983	13	True				
ANR	5296199	ReturnStatement	return R_DEBUG_REASON_UNKNOWN ;	206:1:5782:5811	5295983	5	True				
ANR	5296200	Identifier	R_DEBUG_REASON_UNKNOWN		5295983	0					
ANR	5296201	ReturnType	RDebugReasonType		5295983	1					
ANR	5296202	Identifier	linux_ptrace_event		5295983	2					
ANR	5296203	ParameterList	"RDebug * dbg , int pid , int status"		5295983	3					
ANR	5296204	Parameter	RDebug * dbg	153:37:4068:4078	5295983	0	True				
ANR	5296205	ParameterType	RDebug *		5295983	0					
ANR	5296206	Identifier	dbg		5295983	1					
ANR	5296207	Parameter	int pid	153:50:4081:4087	5295983	1	True				
ANR	5296208	ParameterType	int		5295983	0					
ANR	5296209	Identifier	pid		5295983	1					
ANR	5296210	Parameter	int status	153:59:4090:4099	5295983	2	True				
ANR	5296211	ParameterType	int		5295983	0					
ANR	5296212	Identifier	status		5295983	1					
ANR	5296213	CFGEntryNode	ENTRY		5295983		True				
ANR	5296214	CFGExitNode	EXIT		5295983		True				
ANR	5296215	Symbol	PTRACE_GETEVENTMSG		5295983						
ANR	5296216	Symbol	R_DEBUG_REASON_ERROR		5295983						
ANR	5296217	Symbol	data		5295983						
ANR	5296218	Symbol	pt_evt		5295983						
ANR	5296219	Symbol	R_DEBUG_REASON_EXIT_TID		5295983						
ANR	5296220	Symbol	dbg		5295983						
ANR	5296221	Symbol	r_debug_ptrace		5295983						
ANR	5296222	Symbol	pid		5295983						
ANR	5296223	Symbol	dbg -> forked_pid		5295983						
ANR	5296224	Symbol	* dbg		5295983						
ANR	5296225	Symbol	& data		5295983						
ANR	5296226	Symbol	R_DEBUG_REASON_UNKNOWN		5295983						
ANR	5296227	Symbol	dbg -> pid		5295983						
ANR	5296228	Symbol	dbg -> trace_clone		5295983						
ANR	5296229	Symbol	dbg -> trace_forks		5295983						
ANR	5296230	Symbol	SIGTRAP		5295983						
ANR	5296231	Symbol	WSTOPSIG		5295983						
ANR	5296232	Symbol	R_DEBUG_REASON_NEW_PID		5295983						
ANR	5296233	Symbol	R_DEBUG_REASON_EXIT_PID		5295983						
ANR	5296234	Symbol	R_DEBUG_REASON_NEW_TID		5295983						
ANR	5296235	Symbol	status		5295983						
ANR	5296236	Symbol	WIFSTOPPED		5295983						
ANR	5296237	Function	linux_step	210:0:5823:6149							
ANR	5296238	FunctionDef	linux_step (RDebug * dbg)		5296237	0					
ANR	5296239	CompoundStatement		210:28:5851:6149	5296237	0					
ANR	5296240	IdentifierDeclStatement	int ret = false ;	211:1:5854:5869	5296237	0	True				
ANR	5296241	IdentifierDecl	ret = false		5296237	0					
ANR	5296242	IdentifierDeclType	int		5296237	0					
ANR	5296243	Identifier	ret		5296237	1					
ANR	5296244	AssignmentExpression	ret = false		5296237	2		=			
ANR	5296245	Identifier	false		5296237	0					
ANR	5296246	Identifier	false		5296237	1					
ANR	5296247	IdentifierDeclStatement	"ut64 addr = r_debug_reg_get ( dbg , ""PC"" ) ;"	212:1:5872:5911	5296237	1	True				
ANR	5296248	IdentifierDecl	"addr = r_debug_reg_get ( dbg , ""PC"" )"		5296237	0					
ANR	5296249	IdentifierDeclType	ut64		5296237	0					
ANR	5296250	Identifier	addr		5296237	1					
ANR	5296251	AssignmentExpression	"addr = r_debug_reg_get ( dbg , ""PC"" )"		5296237	2		=			
ANR	5296252	Identifier	addr		5296237	0					
ANR	5296253	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		5296237	1					
ANR	5296254	Callee	r_debug_reg_get		5296237	0					
ANR	5296255	Identifier	r_debug_reg_get		5296237	0					
ANR	5296256	ArgumentList	dbg		5296237	1					
ANR	5296257	Argument	dbg		5296237	0					
ANR	5296258	Identifier	dbg		5296237	0					
ANR	5296259	Argument	"""PC"""		5296237	1					
ANR	5296260	PrimaryExpression	"""PC"""		5296237	0					
ANR	5296261	ExpressionStatement	"ret = r_debug_ptrace ( dbg , PTRACE_SINGLESTEP , dbg -> pid , ( void * ) ( size_t ) addr , 0 )"	213:1:5914:5993	5296237	2	True				
ANR	5296262	AssignmentExpression	"ret = r_debug_ptrace ( dbg , PTRACE_SINGLESTEP , dbg -> pid , ( void * ) ( size_t ) addr , 0 )"		5296237	0		=			
ANR	5296263	Identifier	ret		5296237	0					
ANR	5296264	CallExpression	"r_debug_ptrace ( dbg , PTRACE_SINGLESTEP , dbg -> pid , ( void * ) ( size_t ) addr , 0 )"		5296237	1					
ANR	5296265	Callee	r_debug_ptrace		5296237	0					
ANR	5296266	Identifier	r_debug_ptrace		5296237	0					
ANR	5296267	ArgumentList	dbg		5296237	1					
ANR	5296268	Argument	dbg		5296237	0					
ANR	5296269	Identifier	dbg		5296237	0					
ANR	5296270	Argument	PTRACE_SINGLESTEP		5296237	1					
ANR	5296271	Identifier	PTRACE_SINGLESTEP		5296237	0					
ANR	5296272	Argument	dbg -> pid		5296237	2					
ANR	5296273	PtrMemberAccess	dbg -> pid		5296237	0					
ANR	5296274	Identifier	dbg		5296237	0					
ANR	5296275	Identifier	pid		5296237	1					
ANR	5296276	Argument	( void * ) ( size_t ) addr		5296237	3					
ANR	5296277	CastExpression	( void * ) ( size_t ) addr		5296237	0					
ANR	5296278	CastTarget	void *		5296237	0					
ANR	5296279	CastExpression	( size_t ) addr		5296237	1					
ANR	5296280	CastTarget	size_t		5296237	0					
ANR	5296281	Identifier	addr		5296237	1					
ANR	5296282	Argument	0		5296237	4					
ANR	5296283	PrimaryExpression	0		5296237	0					
ANR	5296284	IfStatement	if ( ret == - 1 )		5296237	3					
ANR	5296285	Condition	ret == - 1	215:5:6049:6057	5296237	0	True				
ANR	5296286	EqualityExpression	ret == - 1		5296237	0		==			
ANR	5296287	Identifier	ret		5296237	0					
ANR	5296288	UnaryOperationExpression	- 1		5296237	1					
ANR	5296289	UnaryOperator	-		5296237	0					
ANR	5296290	PrimaryExpression	1		5296237	1					
ANR	5296291	CompoundStatement		6:16:208:208	5296237	1					
ANR	5296292	ExpressionStatement	"perror ( ""native-singlestep"" )"	216:2:6064:6092	5296237	0	True				
ANR	5296293	CallExpression	"perror ( ""native-singlestep"" )"		5296237	0					
ANR	5296294	Callee	perror		5296237	0					
ANR	5296295	Identifier	perror		5296237	0					
ANR	5296296	ArgumentList	"""native-singlestep"""		5296237	1					
ANR	5296297	Argument	"""native-singlestep"""		5296237	0					
ANR	5296298	PrimaryExpression	"""native-singlestep"""		5296237	0					
ANR	5296299	ExpressionStatement	ret = false	217:2:6096:6107	5296237	1	True				
ANR	5296300	AssignmentExpression	ret = false		5296237	0		=			
ANR	5296301	Identifier	ret		5296237	0					
ANR	5296302	Identifier	false		5296237	1					
ANR	5296303	ElseStatement	else		5296237	0					
ANR	5296304	CompoundStatement		9:8:265:265	5296237	0					
ANR	5296305	ExpressionStatement	ret = true	219:2:6121:6131	5296237	0	True				
ANR	5296306	AssignmentExpression	ret = true		5296237	0		=			
ANR	5296307	Identifier	ret		5296237	0					
ANR	5296308	Identifier	true		5296237	1					
ANR	5296309	ReturnStatement	return ret ;	221:1:6137:6147	5296237	4	True				
ANR	5296310	Identifier	ret		5296237	0					
ANR	5296311	ReturnType	int		5296237	1					
ANR	5296312	Identifier	linux_step		5296237	2					
ANR	5296313	ParameterList	RDebug * dbg		5296237	3					
ANR	5296314	Parameter	RDebug * dbg	210:15:5838:5848	5296237	0	True				
ANR	5296315	ParameterType	RDebug *		5296237	0					
ANR	5296316	Identifier	dbg		5296237	1					
ANR	5296317	CFGEntryNode	ENTRY		5296237		True				
ANR	5296318	CFGExitNode	EXIT		5296237		True				
ANR	5296319	Symbol	ret		5296237						
ANR	5296320	Symbol	dbg -> pid		5296237						
ANR	5296321	Symbol	r_debug_reg_get		5296237						
ANR	5296322	Symbol	dbg		5296237						
ANR	5296323	Symbol	false		5296237						
ANR	5296324	Symbol	r_debug_ptrace		5296237						
ANR	5296325	Symbol	true		5296237						
ANR	5296326	Symbol	addr		5296237						
ANR	5296327	Symbol	PTRACE_SINGLESTEP		5296237						
ANR	5296328	Symbol	* dbg		5296237						
ANR	5296329	Function	linux_set_options	224:0:6152:6802							
ANR	5296330	FunctionDef	"linux_set_options (RDebug * dbg , int pid)"		5296329	0					
ANR	5296331	CompoundStatement		224:45:6197:6802	5296329	0					
ANR	5296332	IdentifierDeclStatement	int traceflags = 0 ;	225:1:6200:6218	5296329	0	True				
ANR	5296333	IdentifierDecl	traceflags = 0		5296329	0					
ANR	5296334	IdentifierDeclType	int		5296329	0					
ANR	5296335	Identifier	traceflags		5296329	1					
ANR	5296336	AssignmentExpression	traceflags = 0		5296329	2		=			
ANR	5296337	Identifier	traceflags		5296329	0					
ANR	5296338	PrimaryExpression	0		5296329	1					
ANR	5296339	IfStatement	if ( dbg -> trace_forks )		5296329	1					
ANR	5296340	Condition	dbg -> trace_forks	226:5:6225:6240	5296329	0	True				
ANR	5296341	PtrMemberAccess	dbg -> trace_forks		5296329	0					
ANR	5296342	Identifier	dbg		5296329	0					
ANR	5296343	Identifier	trace_forks		5296329	1					
ANR	5296344	CompoundStatement		3:23:45:45	5296329	1					
ANR	5296345	ExpressionStatement	traceflags |= PTRACE_O_TRACEFORK	227:2:6247:6279	5296329	0	True				
ANR	5296346	AssignmentExpression	traceflags |= PTRACE_O_TRACEFORK		5296329	0		|=			
ANR	5296347	Identifier	traceflags		5296329	0					
ANR	5296348	Identifier	PTRACE_O_TRACEFORK		5296329	1					
ANR	5296349	ExpressionStatement	traceflags |= PTRACE_O_TRACEVFORK	228:2:6283:6316	5296329	1	True				
ANR	5296350	AssignmentExpression	traceflags |= PTRACE_O_TRACEVFORK		5296329	0		|=			
ANR	5296351	Identifier	traceflags		5296329	0					
ANR	5296352	Identifier	PTRACE_O_TRACEVFORK		5296329	1					
ANR	5296353	ExpressionStatement	traceflags |= PTRACE_O_TRACEVFORKDONE	229:2:6320:6357	5296329	2	True				
ANR	5296354	AssignmentExpression	traceflags |= PTRACE_O_TRACEVFORKDONE		5296329	0		|=			
ANR	5296355	Identifier	traceflags		5296329	0					
ANR	5296356	Identifier	PTRACE_O_TRACEVFORKDONE		5296329	1					
ANR	5296357	IfStatement	if ( dbg -> trace_clone )		5296329	2					
ANR	5296358	Condition	dbg -> trace_clone	231:5:6367:6382	5296329	0	True				
ANR	5296359	PtrMemberAccess	dbg -> trace_clone		5296329	0					
ANR	5296360	Identifier	dbg		5296329	0					
ANR	5296361	Identifier	trace_clone		5296329	1					
ANR	5296362	CompoundStatement		8:23:187:187	5296329	1					
ANR	5296363	ExpressionStatement	traceflags |= PTRACE_O_TRACECLONE	232:2:6389:6422	5296329	0	True				
ANR	5296364	AssignmentExpression	traceflags |= PTRACE_O_TRACECLONE		5296329	0		|=			
ANR	5296365	Identifier	traceflags		5296329	0					
ANR	5296366	Identifier	PTRACE_O_TRACECLONE		5296329	1					
ANR	5296367	IfStatement	if ( dbg -> trace_execs )		5296329	3					
ANR	5296368	Condition	dbg -> trace_execs	234:5:6432:6447	5296329	0	True				
ANR	5296369	PtrMemberAccess	dbg -> trace_execs		5296329	0					
ANR	5296370	Identifier	dbg		5296329	0					
ANR	5296371	Identifier	trace_execs		5296329	1					
ANR	5296372	CompoundStatement		11:23:252:252	5296329	1					
ANR	5296373	ExpressionStatement	traceflags |= PTRACE_O_TRACEEXEC	235:2:6454:6486	5296329	0	True				
ANR	5296374	AssignmentExpression	traceflags |= PTRACE_O_TRACEEXEC		5296329	0		|=			
ANR	5296375	Identifier	traceflags		5296329	0					
ANR	5296376	Identifier	PTRACE_O_TRACEEXEC		5296329	1					
ANR	5296377	IfStatement	if ( dbg -> trace_aftersyscall )		5296329	4					
ANR	5296378	Condition	dbg -> trace_aftersyscall	237:5:6496:6518	5296329	0	True				
ANR	5296379	PtrMemberAccess	dbg -> trace_aftersyscall		5296329	0					
ANR	5296380	Identifier	dbg		5296329	0					
ANR	5296381	Identifier	trace_aftersyscall		5296329	1					
ANR	5296382	CompoundStatement		14:30:323:323	5296329	1					
ANR	5296383	ExpressionStatement	traceflags |= PTRACE_O_TRACEEXIT	238:2:6525:6557	5296329	0	True				
ANR	5296384	AssignmentExpression	traceflags |= PTRACE_O_TRACEEXIT		5296329	0		|=			
ANR	5296385	Identifier	traceflags		5296329	0					
ANR	5296386	Identifier	PTRACE_O_TRACEEXIT		5296329	1					
ANR	5296387	ExpressionStatement	traceflags |= PTRACE_O_TRACESYSGOOD	241:1:6633:6668	5296329	5	True				
ANR	5296388	AssignmentExpression	traceflags |= PTRACE_O_TRACESYSGOOD		5296329	0		|=			
ANR	5296389	Identifier	traceflags		5296329	0					
ANR	5296390	Identifier	PTRACE_O_TRACESYSGOOD		5296329	1					
ANR	5296391	IfStatement	"if ( r_debug_ptrace ( dbg , PTRACE_SETOPTIONS , pid , 0 , ( r_ptrace_data_t ) ( size_t ) traceflags ) == - 1 )"		5296329	6					
ANR	5296392	Condition	"r_debug_ptrace ( dbg , PTRACE_SETOPTIONS , pid , 0 , ( r_ptrace_data_t ) ( size_t ) traceflags ) == - 1"	242:5:6675:6764	5296329	0	True				
ANR	5296393	EqualityExpression	"r_debug_ptrace ( dbg , PTRACE_SETOPTIONS , pid , 0 , ( r_ptrace_data_t ) ( size_t ) traceflags ) == - 1"		5296329	0		==			
ANR	5296394	CallExpression	"r_debug_ptrace ( dbg , PTRACE_SETOPTIONS , pid , 0 , ( r_ptrace_data_t ) ( size_t ) traceflags )"		5296329	0					
ANR	5296395	Callee	r_debug_ptrace		5296329	0					
ANR	5296396	Identifier	r_debug_ptrace		5296329	0					
ANR	5296397	ArgumentList	dbg		5296329	1					
ANR	5296398	Argument	dbg		5296329	0					
ANR	5296399	Identifier	dbg		5296329	0					
ANR	5296400	Argument	PTRACE_SETOPTIONS		5296329	1					
ANR	5296401	Identifier	PTRACE_SETOPTIONS		5296329	0					
ANR	5296402	Argument	pid		5296329	2					
ANR	5296403	Identifier	pid		5296329	0					
ANR	5296404	Argument	0		5296329	3					
ANR	5296405	PrimaryExpression	0		5296329	0					
ANR	5296406	Argument	( r_ptrace_data_t ) ( size_t ) traceflags		5296329	4					
ANR	5296407	CastExpression	( r_ptrace_data_t ) ( size_t ) traceflags		5296329	0					
ANR	5296408	CastTarget	r_ptrace_data_t		5296329	0					
ANR	5296409	CastExpression	( size_t ) traceflags		5296329	1					
ANR	5296410	CastTarget	size_t		5296329	0					
ANR	5296411	Identifier	traceflags		5296329	1					
ANR	5296412	UnaryOperationExpression	- 1		5296329	1					
ANR	5296413	UnaryOperator	-		5296329	0					
ANR	5296414	PrimaryExpression	1		5296329	1					
ANR	5296415	CompoundStatement		19:97:569:569	5296329	1					
ANR	5296416	ReturnStatement	return false ;	243:2:6771:6783	5296329	0	True				
ANR	5296417	Identifier	false		5296329	0					
ANR	5296418	ReturnStatement	return true ;	245:1:6789:6800	5296329	7	True				
ANR	5296419	Identifier	true		5296329	0					
ANR	5296420	ReturnType	bool		5296329	1					
ANR	5296421	Identifier	linux_set_options		5296329	2					
ANR	5296422	ParameterList	"RDebug * dbg , int pid"		5296329	3					
ANR	5296423	Parameter	RDebug * dbg	224:23:6175:6185	5296329	0	True				
ANR	5296424	ParameterType	RDebug *		5296329	0					
ANR	5296425	Identifier	dbg		5296329	1					
ANR	5296426	Parameter	int pid	224:36:6188:6194	5296329	1	True				
ANR	5296427	ParameterType	int		5296329	0					
ANR	5296428	Identifier	pid		5296329	1					
ANR	5296429	CFGEntryNode	ENTRY		5296329		True				
ANR	5296430	CFGExitNode	EXIT		5296329		True				
ANR	5296431	Symbol	PTRACE_O_TRACEEXIT		5296329						
ANR	5296432	Symbol	PTRACE_O_TRACECLONE		5296329						
ANR	5296433	Symbol	PTRACE_O_TRACEFORK		5296329						
ANR	5296434	Symbol	traceflags		5296329						
ANR	5296435	Symbol	dbg		5296329						
ANR	5296436	Symbol	r_debug_ptrace		5296329						
ANR	5296437	Symbol	false		5296329						
ANR	5296438	Symbol	dbg -> trace_aftersyscall		5296329						
ANR	5296439	Symbol	pid		5296329						
ANR	5296440	Symbol	* dbg		5296329						
ANR	5296441	Symbol	PTRACE_O_TRACEVFORKDONE		5296329						
ANR	5296442	Symbol	PTRACE_O_TRACEVFORK		5296329						
ANR	5296443	Symbol	PTRACE_SETOPTIONS		5296329						
ANR	5296444	Symbol	dbg -> trace_execs		5296329						
ANR	5296445	Symbol	PTRACE_O_TRACESYSGOOD		5296329						
ANR	5296446	Symbol	dbg -> trace_forks		5296329						
ANR	5296447	Symbol	dbg -> trace_clone		5296329						
ANR	5296448	Symbol	PTRACE_O_TRACEEXEC		5296329						
ANR	5296449	Symbol	true		5296329						
ANR	5296450	Function	linux_detach_all	248:0:6805:7315							
ANR	5296451	FunctionDef	linux_detach_all (RDebug * dbg)		5296450	0					
ANR	5296452	CompoundStatement		248:43:6848:7315	5296450	0					
ANR	5296453	IdentifierDeclStatement	RList * th_list = dbg -> threads ;	249:1:6851:6880	5296450	0	True				
ANR	5296454	IdentifierDecl	* th_list = dbg -> threads		5296450	0					
ANR	5296455	IdentifierDeclType	RList *		5296450	0					
ANR	5296456	Identifier	th_list		5296450	1					
ANR	5296457	AssignmentExpression	* th_list = dbg -> threads		5296450	2		=			
ANR	5296458	Identifier	th_list		5296450	0					
ANR	5296459	PtrMemberAccess	dbg -> threads		5296450	1					
ANR	5296460	Identifier	dbg		5296450	0					
ANR	5296461	Identifier	threads		5296450	1					
ANR	5296462	IfStatement	if ( th_list )		5296450	1					
ANR	5296463	Condition	th_list	250:5:6887:6893	5296450	0	True				
ANR	5296464	Identifier	th_list		5296450	0					
ANR	5296465	CompoundStatement		5:2:68:81	5296450	1					
ANR	5296466	IdentifierDeclStatement	RDebugPid * th ;	251:2:6900:6913	5296450	0	True				
ANR	5296467	IdentifierDecl	* th		5296450	0					
ANR	5296468	IdentifierDeclType	RDebugPid *		5296450	0					
ANR	5296469	Identifier	th		5296450	1					
ANR	5296470	IdentifierDeclStatement	RListIter * it ;	252:2:6917:6930	5296450	1	True				
ANR	5296471	IdentifierDecl	* it		5296450	0					
ANR	5296472	IdentifierDeclType	RListIter *		5296450	0					
ANR	5296473	Identifier	it		5296450	1					
ANR	5296474	Statement	r_list_foreach	253:2:6934:6947	5296450	2	True				
ANR	5296475	Statement	(	253:17:6949:6949	5296450	3	True				
ANR	5296476	Statement	th_list	253:18:6950:6956	5296450	4	True				
ANR	5296477	Statement	","	253:25:6957:6957	5296450	5	True				
ANR	5296478	Statement	it	253:27:6959:6960	5296450	6	True				
ANR	5296479	Statement	","	253:29:6961:6961	5296450	7	True				
ANR	5296480	Statement	th	253:31:6963:6964	5296450	8	True				
ANR	5296481	Statement	)	253:33:6965:6965	5296450	9	True				
ANR	5296482	CompoundStatement		6:35:118:118	5296450	10					
ANR	5296483	IfStatement	if ( th -> pid != dbg -> main_pid )		5296450	0					
ANR	5296484	Condition	th -> pid != dbg -> main_pid	254:7:6976:6999	5296450	0	True				
ANR	5296485	EqualityExpression	th -> pid != dbg -> main_pid		5296450	0		!=			
ANR	5296486	PtrMemberAccess	th -> pid		5296450	0					
ANR	5296487	Identifier	th		5296450	0					
ANR	5296488	Identifier	pid		5296450	1					
ANR	5296489	PtrMemberAccess	dbg -> main_pid		5296450	1					
ANR	5296490	Identifier	dbg		5296450	0					
ANR	5296491	Identifier	main_pid		5296450	1					
ANR	5296492	CompoundStatement		7:33:153:153	5296450	1					
ANR	5296493	IfStatement	"if ( r_debug_ptrace ( dbg , PTRACE_DETACH , th -> pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) == - 1 )"		5296450	0					
ANR	5296494	Condition	"r_debug_ptrace ( dbg , PTRACE_DETACH , th -> pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) == - 1"	255:8:7012:7098	5296450	0	True				
ANR	5296495	EqualityExpression	"r_debug_ptrace ( dbg , PTRACE_DETACH , th -> pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) == - 1"		5296450	0		==			
ANR	5296496	CallExpression	"r_debug_ptrace ( dbg , PTRACE_DETACH , th -> pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL )"		5296450	0					
ANR	5296497	Callee	r_debug_ptrace		5296450	0					
ANR	5296498	Identifier	r_debug_ptrace		5296450	0					
ANR	5296499	ArgumentList	dbg		5296450	1					
ANR	5296500	Argument	dbg		5296450	0					
ANR	5296501	Identifier	dbg		5296450	0					
ANR	5296502	Argument	PTRACE_DETACH		5296450	1					
ANR	5296503	Identifier	PTRACE_DETACH		5296450	0					
ANR	5296504	Argument	th -> pid		5296450	2					
ANR	5296505	PtrMemberAccess	th -> pid		5296450	0					
ANR	5296506	Identifier	th		5296450	0					
ANR	5296507	Identifier	pid		5296450	1					
ANR	5296508	Argument	NULL		5296450	3					
ANR	5296509	Identifier	NULL		5296450	0					
ANR	5296510	Argument	( r_ptrace_data_t ) ( size_t ) NULL		5296450	4					
ANR	5296511	CastExpression	( r_ptrace_data_t ) ( size_t ) NULL		5296450	0					
ANR	5296512	CastTarget	r_ptrace_data_t		5296450	0					
ANR	5296513	CastExpression	( size_t ) NULL		5296450	1					
ANR	5296514	CastTarget	size_t		5296450	0					
ANR	5296515	Identifier	NULL		5296450	1					
ANR	5296516	UnaryOperationExpression	- 1		5296450	1					
ANR	5296517	UnaryOperator	-		5296450	0					
ANR	5296518	PrimaryExpression	1		5296450	1					
ANR	5296519	CompoundStatement		8:97:252:252	5296450	1					
ANR	5296520	ExpressionStatement	"perror ( ""PTRACE_DETACH"" )"	256:5:7108:7132	5296450	0	True				
ANR	5296521	CallExpression	"perror ( ""PTRACE_DETACH"" )"		5296450	0					
ANR	5296522	Callee	perror		5296450	0					
ANR	5296523	Identifier	perror		5296450	0					
ANR	5296524	ArgumentList	"""PTRACE_DETACH"""		5296450	1					
ANR	5296525	Argument	"""PTRACE_DETACH"""		5296450	0					
ANR	5296526	PrimaryExpression	"""PTRACE_DETACH"""		5296450	0					
ANR	5296527	IfStatement	"if ( r_debug_ptrace ( dbg , PTRACE_DETACH , dbg -> main_pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) == - 1 )"		5296450	2					
ANR	5296528	Condition	"r_debug_ptrace ( dbg , PTRACE_DETACH , dbg -> main_pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) == - 1"	263:5:7187:7279	5296450	0	True				
ANR	5296529	EqualityExpression	"r_debug_ptrace ( dbg , PTRACE_DETACH , dbg -> main_pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) == - 1"		5296450	0		==			
ANR	5296530	CallExpression	"r_debug_ptrace ( dbg , PTRACE_DETACH , dbg -> main_pid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL )"		5296450	0					
ANR	5296531	Callee	r_debug_ptrace		5296450	0					
ANR	5296532	Identifier	r_debug_ptrace		5296450	0					
ANR	5296533	ArgumentList	dbg		5296450	1					
ANR	5296534	Argument	dbg		5296450	0					
ANR	5296535	Identifier	dbg		5296450	0					
ANR	5296536	Argument	PTRACE_DETACH		5296450	1					
ANR	5296537	Identifier	PTRACE_DETACH		5296450	0					
ANR	5296538	Argument	dbg -> main_pid		5296450	2					
ANR	5296539	PtrMemberAccess	dbg -> main_pid		5296450	0					
ANR	5296540	Identifier	dbg		5296450	0					
ANR	5296541	Identifier	main_pid		5296450	1					
ANR	5296542	Argument	NULL		5296450	3					
ANR	5296543	Identifier	NULL		5296450	0					
ANR	5296544	Argument	( r_ptrace_data_t ) ( size_t ) NULL		5296450	4					
ANR	5296545	CastExpression	( r_ptrace_data_t ) ( size_t ) NULL		5296450	0					
ANR	5296546	CastTarget	r_ptrace_data_t		5296450	0					
ANR	5296547	CastExpression	( size_t ) NULL		5296450	1					
ANR	5296548	CastTarget	size_t		5296450	0					
ANR	5296549	Identifier	NULL		5296450	1					
ANR	5296550	UnaryOperationExpression	- 1		5296450	1					
ANR	5296551	UnaryOperator	-		5296450	0					
ANR	5296552	PrimaryExpression	1		5296450	1					
ANR	5296553	CompoundStatement		16:100:433:433	5296450	1					
ANR	5296554	ExpressionStatement	"perror ( ""PTRACE_DETACH"" )"	264:2:7286:7310	5296450	0	True				
ANR	5296555	CallExpression	"perror ( ""PTRACE_DETACH"" )"		5296450	0					
ANR	5296556	Callee	perror		5296450	0					
ANR	5296557	Identifier	perror		5296450	0					
ANR	5296558	ArgumentList	"""PTRACE_DETACH"""		5296450	1					
ANR	5296559	Argument	"""PTRACE_DETACH"""		5296450	0					
ANR	5296560	PrimaryExpression	"""PTRACE_DETACH"""		5296450	0					
ANR	5296561	ReturnType	static void		5296450	1					
ANR	5296562	Identifier	linux_detach_all		5296450	2					
ANR	5296563	ParameterList	RDebug * dbg		5296450	3					
ANR	5296564	Parameter	RDebug * dbg	248:30:6835:6845	5296450	0	True				
ANR	5296565	ParameterType	RDebug *		5296450	0					
ANR	5296566	Identifier	dbg		5296450	1					
ANR	5296567	CFGEntryNode	ENTRY		5296450		True				
ANR	5296568	CFGExitNode	EXIT		5296450		True				
ANR	5296569	Symbol	th_list		5296450						
ANR	5296570	Symbol	NULL		5296450						
ANR	5296571	Symbol	th		5296450						
ANR	5296572	Symbol	dbg -> main_pid		5296450						
ANR	5296573	Symbol	PTRACE_DETACH		5296450						
ANR	5296574	Symbol	dbg		5296450						
ANR	5296575	Symbol	r_debug_ptrace		5296450						
ANR	5296576	Symbol	* th		5296450						
ANR	5296577	Symbol	it		5296450						
ANR	5296578	Symbol	* dbg		5296450						
ANR	5296579	Symbol	dbg -> threads		5296450						
ANR	5296580	Symbol	th -> pid		5296450						
ANR	5296581	Function	linux_remove_thread	268:0:7318:7592							
ANR	5296582	FunctionDef	"linux_remove_thread (RDebug * dbg , int pid)"		5296581	0					
ANR	5296583	CompoundStatement		268:55:7373:7592	5296581	0					
ANR	5296584	IdentifierDeclStatement	RList * th_list = dbg -> threads ;	269:1:7376:7405	5296581	0	True				
ANR	5296585	IdentifierDecl	* th_list = dbg -> threads		5296581	0					
ANR	5296586	IdentifierDeclType	RList *		5296581	0					
ANR	5296587	Identifier	th_list		5296581	1					
ANR	5296588	AssignmentExpression	* th_list = dbg -> threads		5296581	2		=			
ANR	5296589	Identifier	th_list		5296581	0					
ANR	5296590	PtrMemberAccess	dbg -> threads		5296581	1					
ANR	5296591	Identifier	dbg		5296581	0					
ANR	5296592	Identifier	threads		5296581	1					
ANR	5296593	IfStatement	if ( th_list )		5296581	1					
ANR	5296594	Condition	th_list	271:5:7413:7419	5296581	0	True				
ANR	5296595	Identifier	th_list		5296581	0					
ANR	5296596	CompoundStatement		6:2:69:82	5296581	1					
ANR	5296597	IdentifierDeclStatement	RDebugPid * th ;	272:2:7426:7439	5296581	0	True				
ANR	5296598	IdentifierDecl	* th		5296581	0					
ANR	5296599	IdentifierDeclType	RDebugPid *		5296581	0					
ANR	5296600	Identifier	th		5296581	1					
ANR	5296601	IdentifierDeclStatement	RListIter * it ;	273:2:7443:7456	5296581	1	True				
ANR	5296602	IdentifierDecl	* it		5296581	0					
ANR	5296603	IdentifierDeclType	RListIter *		5296581	0					
ANR	5296604	Identifier	it		5296581	1					
ANR	5296605	Statement	r_list_foreach	274:2:7460:7473	5296581	2	True				
ANR	5296606	Statement	(	274:17:7475:7475	5296581	3	True				
ANR	5296607	Statement	th_list	274:18:7476:7482	5296581	4	True				
ANR	5296608	Statement	","	274:25:7483:7483	5296581	5	True				
ANR	5296609	Statement	it	274:27:7485:7486	5296581	6	True				
ANR	5296610	Statement	","	274:29:7487:7487	5296581	7	True				
ANR	5296611	Statement	th	274:31:7489:7490	5296581	8	True				
ANR	5296612	Statement	)	274:33:7491:7491	5296581	9	True				
ANR	5296613	CompoundStatement		7:35:119:119	5296581	10					
ANR	5296614	IfStatement	if ( th -> pid == pid )		5296581	0					
ANR	5296615	Condition	th -> pid == pid	275:7:7502:7515	5296581	0	True				
ANR	5296616	EqualityExpression	th -> pid == pid		5296581	0		==			
ANR	5296617	PtrMemberAccess	th -> pid		5296581	0					
ANR	5296618	Identifier	th		5296581	0					
ANR	5296619	Identifier	pid		5296581	1					
ANR	5296620	Identifier	pid		5296581	1					
ANR	5296621	CompoundStatement		8:23:144:144	5296581	1					
ANR	5296622	ExpressionStatement	"r_list_delete_data ( th_list , th )"	276:4:7524:7556	5296581	0	True				
ANR	5296623	CallExpression	"r_list_delete_data ( th_list , th )"		5296581	0					
ANR	5296624	Callee	r_list_delete_data		5296581	0					
ANR	5296625	Identifier	r_list_delete_data		5296581	0					
ANR	5296626	ArgumentList	th_list		5296581	1					
ANR	5296627	Argument	th_list		5296581	0					
ANR	5296628	Identifier	th_list		5296581	0					
ANR	5296629	Argument	th		5296581	1					
ANR	5296630	Identifier	th		5296581	0					
ANR	5296631	ExpressionStatement	dbg -> n_threads --	277:4:7562:7578	5296581	1	True				
ANR	5296632	PostIncDecOperationExpression	dbg -> n_threads --		5296581	0					
ANR	5296633	PtrMemberAccess	dbg -> n_threads		5296581	0					
ANR	5296634	Identifier	dbg		5296581	0					
ANR	5296635	Identifier	n_threads		5296581	1					
ANR	5296636	IncDec	--		5296581	1					
ANR	5296637	ReturnType	static void		5296581	1					
ANR	5296638	Identifier	linux_remove_thread		5296581	2					
ANR	5296639	ParameterList	"RDebug * dbg , int pid"		5296581	3					
ANR	5296640	Parameter	RDebug * dbg	268:33:7351:7361	5296581	0	True				
ANR	5296641	ParameterType	RDebug *		5296581	0					
ANR	5296642	Identifier	dbg		5296581	1					
ANR	5296643	Parameter	int pid	268:46:7364:7370	5296581	1	True				
ANR	5296644	ParameterType	int		5296581	0					
ANR	5296645	Identifier	pid		5296581	1					
ANR	5296646	CFGEntryNode	ENTRY		5296581		True				
ANR	5296647	CFGExitNode	EXIT		5296581		True				
ANR	5296648	Symbol	th_list		5296581						
ANR	5296649	Symbol	th		5296581						
ANR	5296650	Symbol	dbg		5296581						
ANR	5296651	Symbol	* th		5296581						
ANR	5296652	Symbol	dbg -> n_threads		5296581						
ANR	5296653	Symbol	pid		5296581						
ANR	5296654	Symbol	it		5296581						
ANR	5296655	Symbol	* dbg		5296581						
ANR	5296656	Symbol	dbg -> threads		5296581						
ANR	5296657	Symbol	th -> pid		5296581						
ANR	5296658	Function	linux_attach_new_process	283:0:7595:7970							
ANR	5296659	FunctionDef	linux_attach_new_process (RDebug * dbg)		5296658	0					
ANR	5296660	CompoundStatement		283:44:7639:7970	5296658	0					
ANR	5296661	ExpressionStatement	linux_detach_all ( dbg )	284:1:7642:7664	5296658	0	True				
ANR	5296662	CallExpression	linux_detach_all ( dbg )		5296658	0					
ANR	5296663	Callee	linux_detach_all		5296658	0					
ANR	5296664	Identifier	linux_detach_all		5296658	0					
ANR	5296665	ArgumentList	dbg		5296658	1					
ANR	5296666	Argument	dbg		5296658	0					
ANR	5296667	Identifier	dbg		5296658	0					
ANR	5296668	IfStatement	if ( dbg -> threads )		5296658	1					
ANR	5296669	Condition	dbg -> threads	286:5:7672:7683	5296658	0	True				
ANR	5296670	PtrMemberAccess	dbg -> threads		5296658	0					
ANR	5296671	Identifier	dbg		5296658	0					
ANR	5296672	Identifier	threads		5296658	1					
ANR	5296673	CompoundStatement		4:19:46:46	5296658	1					
ANR	5296674	ExpressionStatement	r_list_free ( dbg -> threads )	287:2:7690:7716	5296658	0	True				
ANR	5296675	CallExpression	r_list_free ( dbg -> threads )		5296658	0					
ANR	5296676	Callee	r_list_free		5296658	0					
ANR	5296677	Identifier	r_list_free		5296658	0					
ANR	5296678	ArgumentList	dbg -> threads		5296658	1					
ANR	5296679	Argument	dbg -> threads		5296658	0					
ANR	5296680	PtrMemberAccess	dbg -> threads		5296658	0					
ANR	5296681	Identifier	dbg		5296658	0					
ANR	5296682	Identifier	threads		5296658	1					
ANR	5296683	ExpressionStatement	dbg -> threads = NULL	288:2:7720:7739	5296658	1	True				
ANR	5296684	AssignmentExpression	dbg -> threads = NULL		5296658	0		=			
ANR	5296685	PtrMemberAccess	dbg -> threads		5296658	0					
ANR	5296686	Identifier	dbg		5296658	0					
ANR	5296687	Identifier	threads		5296658	1					
ANR	5296688	Identifier	NULL		5296658	1					
ANR	5296689	IdentifierDeclStatement	int stopped = linux_stop_process ( dbg -> forked_pid ) ;	290:1:7745:7795	5296658	2	True				
ANR	5296690	IdentifierDecl	stopped = linux_stop_process ( dbg -> forked_pid )		5296658	0					
ANR	5296691	IdentifierDeclType	int		5296658	0					
ANR	5296692	Identifier	stopped		5296658	1					
ANR	5296693	AssignmentExpression	stopped = linux_stop_process ( dbg -> forked_pid )		5296658	2		=			
ANR	5296694	Identifier	stopped		5296658	0					
ANR	5296695	CallExpression	linux_stop_process ( dbg -> forked_pid )		5296658	1					
ANR	5296696	Callee	linux_stop_process		5296658	0					
ANR	5296697	Identifier	linux_stop_process		5296658	0					
ANR	5296698	ArgumentList	dbg -> forked_pid		5296658	1					
ANR	5296699	Argument	dbg -> forked_pid		5296658	0					
ANR	5296700	PtrMemberAccess	dbg -> forked_pid		5296658	0					
ANR	5296701	Identifier	dbg		5296658	0					
ANR	5296702	Identifier	forked_pid		5296658	1					
ANR	5296703	IfStatement	if ( ! stopped )		5296658	3					
ANR	5296704	Condition	! stopped	291:5:7802:7809	5296658	0	True				
ANR	5296705	UnaryOperationExpression	! stopped		5296658	0					
ANR	5296706	UnaryOperator	!		5296658	0					
ANR	5296707	Identifier	stopped		5296658	1					
ANR	5296708	CompoundStatement		9:15:172:172	5296658	1					
ANR	5296709	ExpressionStatement	"eprintf ( ""Could not stop pid (%d)\\n"" , dbg -> forked_pid )"	292:2:7816:7870	5296658	0	True				
ANR	5296710	CallExpression	"eprintf ( ""Could not stop pid (%d)\\n"" , dbg -> forked_pid )"		5296658	0					
ANR	5296711	Callee	eprintf		5296658	0					
ANR	5296712	Identifier	eprintf		5296658	0					
ANR	5296713	ArgumentList	"""Could not stop pid (%d)\\n"""		5296658	1					
ANR	5296714	Argument	"""Could not stop pid (%d)\\n"""		5296658	0					
ANR	5296715	PrimaryExpression	"""Could not stop pid (%d)\\n"""		5296658	0					
ANR	5296716	Argument	dbg -> forked_pid		5296658	1					
ANR	5296717	PtrMemberAccess	dbg -> forked_pid		5296658	0					
ANR	5296718	Identifier	dbg		5296658	0					
ANR	5296719	Identifier	forked_pid		5296658	1					
ANR	5296720	ExpressionStatement	"linux_attach ( dbg , dbg -> forked_pid )"	294:1:7876:7911	5296658	4	True				
ANR	5296721	CallExpression	"linux_attach ( dbg , dbg -> forked_pid )"		5296658	0					
ANR	5296722	Callee	linux_attach		5296658	0					
ANR	5296723	Identifier	linux_attach		5296658	0					
ANR	5296724	ArgumentList	dbg		5296658	1					
ANR	5296725	Argument	dbg		5296658	0					
ANR	5296726	Identifier	dbg		5296658	0					
ANR	5296727	Argument	dbg -> forked_pid		5296658	1					
ANR	5296728	PtrMemberAccess	dbg -> forked_pid		5296658	0					
ANR	5296729	Identifier	dbg		5296658	0					
ANR	5296730	Identifier	forked_pid		5296658	1					
ANR	5296731	ExpressionStatement	"r_debug_select ( dbg , dbg -> forked_pid , dbg -> forked_pid )"	295:1:7914:7968	5296658	5	True				
ANR	5296732	CallExpression	"r_debug_select ( dbg , dbg -> forked_pid , dbg -> forked_pid )"		5296658	0					
ANR	5296733	Callee	r_debug_select		5296658	0					
ANR	5296734	Identifier	r_debug_select		5296658	0					
ANR	5296735	ArgumentList	dbg		5296658	1					
ANR	5296736	Argument	dbg		5296658	0					
ANR	5296737	Identifier	dbg		5296658	0					
ANR	5296738	Argument	dbg -> forked_pid		5296658	1					
ANR	5296739	PtrMemberAccess	dbg -> forked_pid		5296658	0					
ANR	5296740	Identifier	dbg		5296658	0					
ANR	5296741	Identifier	forked_pid		5296658	1					
ANR	5296742	Argument	dbg -> forked_pid		5296658	2					
ANR	5296743	PtrMemberAccess	dbg -> forked_pid		5296658	0					
ANR	5296744	Identifier	dbg		5296658	0					
ANR	5296745	Identifier	forked_pid		5296658	1					
ANR	5296746	ReturnType	void		5296658	1					
ANR	5296747	Identifier	linux_attach_new_process		5296658	2					
ANR	5296748	ParameterList	RDebug * dbg		5296658	3					
ANR	5296749	Parameter	RDebug * dbg	283:31:7626:7636	5296658	0	True				
ANR	5296750	ParameterType	RDebug *		5296658	0					
ANR	5296751	Identifier	dbg		5296658	1					
ANR	5296752	CFGEntryNode	ENTRY		5296658		True				
ANR	5296753	CFGExitNode	EXIT		5296658		True				
ANR	5296754	Symbol	stopped		5296658						
ANR	5296755	Symbol	NULL		5296658						
ANR	5296756	Symbol	dbg		5296658						
ANR	5296757	Symbol	linux_stop_process		5296658						
ANR	5296758	Symbol	dbg -> forked_pid		5296658						
ANR	5296759	Symbol	dbg -> threads		5296658						
ANR	5296760	Symbol	* dbg		5296658						
ANR	5296761	Function	linux_dbg_wait	298:0:7973:10067							
ANR	5296762	FunctionDef	"linux_dbg_wait (RDebug * dbg , int my_pid)"		5296761	0					
ANR	5296763	CompoundStatement		298:57:8030:10067	5296761	0					
ANR	5296764	IdentifierDeclStatement	RDebugReasonType reason = R_DEBUG_REASON_UNKNOWN ;	299:1:8033:8081	5296761	0	True				
ANR	5296765	IdentifierDecl	reason = R_DEBUG_REASON_UNKNOWN		5296761	0					
ANR	5296766	IdentifierDeclType	RDebugReasonType		5296761	0					
ANR	5296767	Identifier	reason		5296761	1					
ANR	5296768	AssignmentExpression	reason = R_DEBUG_REASON_UNKNOWN		5296761	2		=			
ANR	5296769	Identifier	R_DEBUG_REASON_UNKNOWN		5296761	0					
ANR	5296770	Identifier	R_DEBUG_REASON_UNKNOWN		5296761	1					
ANR	5296771	IdentifierDeclStatement	int pid = ( dbg -> continue_all_threads && dbg -> n_threads ) ? - 1 : dbg -> main_pid ;	300:1:8084:8160	5296761	1	True				
ANR	5296772	IdentifierDecl	pid = ( dbg -> continue_all_threads && dbg -> n_threads ) ? - 1 : dbg -> main_pid		5296761	0					
ANR	5296773	IdentifierDeclType	int		5296761	0					
ANR	5296774	Identifier	pid		5296761	1					
ANR	5296775	AssignmentExpression	pid = ( dbg -> continue_all_threads && dbg -> n_threads ) ? - 1 : dbg -> main_pid		5296761	2		=			
ANR	5296776	Identifier	pid		5296761	0					
ANR	5296777	ConditionalExpression	( dbg -> continue_all_threads && dbg -> n_threads ) ? - 1 : dbg -> main_pid		5296761	1					
ANR	5296778	Condition	dbg -> continue_all_threads && dbg -> n_threads		5296761	0					
ANR	5296779	AndExpression	dbg -> continue_all_threads && dbg -> n_threads		5296761	0		&&			
ANR	5296780	PtrMemberAccess	dbg -> continue_all_threads		5296761	0					
ANR	5296781	Identifier	dbg		5296761	0					
ANR	5296782	Identifier	continue_all_threads		5296761	1					
ANR	5296783	PtrMemberAccess	dbg -> n_threads		5296761	1					
ANR	5296784	Identifier	dbg		5296761	0					
ANR	5296785	Identifier	n_threads		5296761	1					
ANR	5296786	UnaryOperationExpression	- 1		5296761	1					
ANR	5296787	UnaryOperator	-		5296761	0					
ANR	5296788	PrimaryExpression	1		5296761	1					
ANR	5296789	PtrMemberAccess	dbg -> main_pid		5296761	2					
ANR	5296790	Identifier	dbg		5296761	0					
ANR	5296791	Identifier	main_pid		5296761	1					
ANR	5296792	IdentifierDeclStatement	"int status , flags = __WALL ;"	301:1:8163:8189	5296761	2	True				
ANR	5296793	IdentifierDecl	status		5296761	0					
ANR	5296794	IdentifierDeclType	int		5296761	0					
ANR	5296795	Identifier	status		5296761	1					
ANR	5296796	IdentifierDecl	flags = __WALL		5296761	1					
ANR	5296797	IdentifierDeclType	int		5296761	0					
ANR	5296798	Identifier	flags		5296761	1					
ANR	5296799	AssignmentExpression	flags = __WALL		5296761	2		=			
ANR	5296800	Identifier	__WALL		5296761	0					
ANR	5296801	Identifier	__WALL		5296761	1					
ANR	5296802	IfStatement	if ( pid == - 1 )		5296761	3					
ANR	5296803	Condition	pid == - 1	303:5:8197:8205	5296761	0	True				
ANR	5296804	EqualityExpression	pid == - 1		5296761	0		==			
ANR	5296805	Identifier	pid		5296761	0					
ANR	5296806	UnaryOperationExpression	- 1		5296761	1					
ANR	5296807	UnaryOperator	-		5296761	0					
ANR	5296808	PrimaryExpression	1		5296761	1					
ANR	5296809	CompoundStatement		6:16:177:177	5296761	1					
ANR	5296810	ExpressionStatement	flags |= WNOHANG	304:2:8212:8228	5296761	0	True				
ANR	5296811	AssignmentExpression	flags |= WNOHANG		5296761	0		|=			
ANR	5296812	Identifier	flags		5296761	0					
ANR	5296813	Identifier	WNOHANG		5296761	1					
ANR	5296814	Label	repeat :	306:0:8233:8239	5296761	4	True				
ANR	5296815	Identifier	repeat		5296761	0					
ANR	5296816	ForStatement	for ( ; ; )		5296761	5					
ANR	5296817	CompoundStatement		12:2:261:300	5296761	0					
ANR	5296818	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	308:2:8255:8288	5296761	0	True				
ANR	5296819	IdentifierDecl	* bed = r_cons_sleep_begin ( )		5296761	0					
ANR	5296820	IdentifierDeclType	void *		5296761	0					
ANR	5296821	Identifier	bed		5296761	1					
ANR	5296822	AssignmentExpression	* bed = r_cons_sleep_begin ( )		5296761	2		=			
ANR	5296823	Identifier	bed		5296761	0					
ANR	5296824	CallExpression	r_cons_sleep_begin ( )		5296761	1					
ANR	5296825	Callee	r_cons_sleep_begin		5296761	0					
ANR	5296826	Identifier	r_cons_sleep_begin		5296761	0					
ANR	5296827	ArgumentList			5296761	1					
ANR	5296828	IdentifierDeclStatement	"int ret = waitpid ( pid , & status , flags ) ;"	309:2:8292:8331	5296761	1	True				
ANR	5296829	IdentifierDecl	"ret = waitpid ( pid , & status , flags )"		5296761	0					
ANR	5296830	IdentifierDeclType	int		5296761	0					
ANR	5296831	Identifier	ret		5296761	1					
ANR	5296832	AssignmentExpression	"ret = waitpid ( pid , & status , flags )"		5296761	2		=			
ANR	5296833	Identifier	ret		5296761	0					
ANR	5296834	CallExpression	"waitpid ( pid , & status , flags )"		5296761	1					
ANR	5296835	Callee	waitpid		5296761	0					
ANR	5296836	Identifier	waitpid		5296761	0					
ANR	5296837	ArgumentList	pid		5296761	1					
ANR	5296838	Argument	pid		5296761	0					
ANR	5296839	Identifier	pid		5296761	0					
ANR	5296840	Argument	& status		5296761	1					
ANR	5296841	UnaryOperationExpression	& status		5296761	0					
ANR	5296842	UnaryOperator	&		5296761	0					
ANR	5296843	Identifier	status		5296761	1					
ANR	5296844	Argument	flags		5296761	2					
ANR	5296845	Identifier	flags		5296761	0					
ANR	5296846	ExpressionStatement	r_cons_sleep_end ( bed )	310:2:8335:8357	5296761	2	True				
ANR	5296847	CallExpression	r_cons_sleep_end ( bed )		5296761	0					
ANR	5296848	Callee	r_cons_sleep_end		5296761	0					
ANR	5296849	Identifier	r_cons_sleep_end		5296761	0					
ANR	5296850	ArgumentList	bed		5296761	1					
ANR	5296851	Argument	bed		5296761	0					
ANR	5296852	Identifier	bed		5296761	0					
ANR	5296853	IfStatement	if ( ret < 0 )		5296761	3					
ANR	5296854	Condition	ret < 0	311:6:8365:8371	5296761	0	True				
ANR	5296855	RelationalExpression	ret < 0		5296761	0		<			
ANR	5296856	Identifier	ret		5296761	0					
ANR	5296857	PrimaryExpression	0		5296761	1					
ANR	5296858	CompoundStatement		14:15:343:343	5296761	1					
ANR	5296859	ExpressionStatement	"perror ( ""waitpid"" )"	312:3:8379:8397	5296761	0	True				
ANR	5296860	CallExpression	"perror ( ""waitpid"" )"		5296761	0					
ANR	5296861	Callee	perror		5296761	0					
ANR	5296862	Identifier	perror		5296761	0					
ANR	5296863	ArgumentList	"""waitpid"""		5296761	1					
ANR	5296864	Argument	"""waitpid"""		5296761	0					
ANR	5296865	PrimaryExpression	"""waitpid"""		5296761	0					
ANR	5296866	BreakStatement	break ;	313:3:8402:8407	5296761	1	True				
ANR	5296867	ElseStatement	else		5296761	0					
ANR	5296868	IfStatement	if ( ! ret )		5296761	0					
ANR	5296869	Condition	! ret	314:13:8422:8425	5296761	0	True				
ANR	5296870	UnaryOperationExpression	! ret		5296761	0					
ANR	5296871	UnaryOperator	!		5296761	0					
ANR	5296872	Identifier	ret		5296761	1					
ANR	5296873	CompoundStatement		17:19:397:397	5296761	1					
ANR	5296874	ExpressionStatement	flags &= ~WNOHANG	315:3:8433:8450	5296761	0	True				
ANR	5296875	AssignmentExpression	flags &= ~WNOHANG		5296761	0		&=			
ANR	5296876	Identifier	flags		5296761	0					
ANR	5296877	Identifier	~WNOHANG		5296761	1					
ANR	5296878	ElseStatement	else		5296761	0					
ANR	5296879	CompoundStatement		20:3:435:448	5296761	0					
ANR	5296880	IdentifierDeclStatement	int pid = ret ;	317:3:8466:8479	5296761	0	True				
ANR	5296881	IdentifierDecl	pid = ret		5296761	0					
ANR	5296882	IdentifierDeclType	int		5296761	0					
ANR	5296883	Identifier	pid		5296761	1					
ANR	5296884	AssignmentExpression	pid = ret		5296761	2		=			
ANR	5296885	Identifier	ret		5296761	0					
ANR	5296886	Identifier	ret		5296761	1					
ANR	5296887	ExpressionStatement	"reason = linux_ptrace_event ( dbg , pid , status )"	318:3:8484:8530	5296761	1	True				
ANR	5296888	AssignmentExpression	"reason = linux_ptrace_event ( dbg , pid , status )"		5296761	0		=			
ANR	5296889	Identifier	reason		5296761	0					
ANR	5296890	CallExpression	"linux_ptrace_event ( dbg , pid , status )"		5296761	1					
ANR	5296891	Callee	linux_ptrace_event		5296761	0					
ANR	5296892	Identifier	linux_ptrace_event		5296761	0					
ANR	5296893	ArgumentList	dbg		5296761	1					
ANR	5296894	Argument	dbg		5296761	0					
ANR	5296895	Identifier	dbg		5296761	0					
ANR	5296896	Argument	pid		5296761	1					
ANR	5296897	Identifier	pid		5296761	0					
ANR	5296898	Argument	status		5296761	2					
ANR	5296899	Identifier	status		5296761	0					
ANR	5296900	IfStatement	if ( reason == R_DEBUG_REASON_EXIT_TID )		5296761	2					
ANR	5296901	Condition	reason == R_DEBUG_REASON_EXIT_TID	320:7:8540:8572	5296761	0	True				
ANR	5296902	EqualityExpression	reason == R_DEBUG_REASON_EXIT_TID		5296761	0		==			
ANR	5296903	Identifier	reason		5296761	0					
ANR	5296904	Identifier	R_DEBUG_REASON_EXIT_TID		5296761	1					
ANR	5296905	CompoundStatement		23:42:544:544	5296761	1					
ANR	5296906	ExpressionStatement	"r_debug_ptrace ( dbg , PTRACE_CONT , pid , NULL , 0 )"	321:4:8581:8628	5296761	0	True				
ANR	5296907	CallExpression	"r_debug_ptrace ( dbg , PTRACE_CONT , pid , NULL , 0 )"		5296761	0					
ANR	5296908	Callee	r_debug_ptrace		5296761	0					
ANR	5296909	Identifier	r_debug_ptrace		5296761	0					
ANR	5296910	ArgumentList	dbg		5296761	1					
ANR	5296911	Argument	dbg		5296761	0					
ANR	5296912	Identifier	dbg		5296761	0					
ANR	5296913	Argument	PTRACE_CONT		5296761	1					
ANR	5296914	Identifier	PTRACE_CONT		5296761	0					
ANR	5296915	Argument	pid		5296761	2					
ANR	5296916	Identifier	pid		5296761	0					
ANR	5296917	Argument	NULL		5296761	3					
ANR	5296918	Identifier	NULL		5296761	0					
ANR	5296919	Argument	0		5296761	4					
ANR	5296920	PrimaryExpression	0		5296761	0					
ANR	5296921	GotoStatement	goto repeat ;	322:4:8634:8645	5296761	1	True				
ANR	5296922	Identifier	repeat		5296761	0					
ANR	5296923	IfStatement	if ( reason != R_DEBUG_REASON_UNKNOWN )		5296761	3					
ANR	5296924	Condition	reason != R_DEBUG_REASON_UNKNOWN	325:7:8660:8691	5296761	0	True				
ANR	5296925	EqualityExpression	reason != R_DEBUG_REASON_UNKNOWN		5296761	0		!=			
ANR	5296926	Identifier	reason		5296761	0					
ANR	5296927	Identifier	R_DEBUG_REASON_UNKNOWN		5296761	1					
ANR	5296928	CompoundStatement		28:41:663:663	5296761	1					
ANR	5296929	BreakStatement	break ;	326:4:8700:8705	5296761	0	True				
ANR	5296930	IfStatement	if ( WIFEXITED ( status ) )		5296761	4					
ANR	5296931	Condition	WIFEXITED ( status )	329:7:8720:8737	5296761	0	True				
ANR	5296932	CallExpression	WIFEXITED ( status )		5296761	0					
ANR	5296933	Callee	WIFEXITED		5296761	0					
ANR	5296934	Identifier	WIFEXITED		5296761	0					
ANR	5296935	ArgumentList	status		5296761	1					
ANR	5296936	Argument	status		5296761	0					
ANR	5296937	Identifier	status		5296761	0					
ANR	5296938	CompoundStatement		32:27:709:709	5296761	1					
ANR	5296939	ExpressionStatement	"eprintf ( ""child exited with status %d\\n"" , WEXITSTATUS ( status ) )"	330:4:8746:8809	5296761	0	True				
ANR	5296940	CallExpression	"eprintf ( ""child exited with status %d\\n"" , WEXITSTATUS ( status ) )"		5296761	0					
ANR	5296941	Callee	eprintf		5296761	0					
ANR	5296942	Identifier	eprintf		5296761	0					
ANR	5296943	ArgumentList	"""child exited with status %d\\n"""		5296761	1					
ANR	5296944	Argument	"""child exited with status %d\\n"""		5296761	0					
ANR	5296945	PrimaryExpression	"""child exited with status %d\\n"""		5296761	0					
ANR	5296946	Argument	WEXITSTATUS ( status )		5296761	1					
ANR	5296947	CallExpression	WEXITSTATUS ( status )		5296761	0					
ANR	5296948	Callee	WEXITSTATUS		5296761	0					
ANR	5296949	Identifier	WEXITSTATUS		5296761	0					
ANR	5296950	ArgumentList	status		5296761	1					
ANR	5296951	Argument	status		5296761	0					
ANR	5296952	Identifier	status		5296761	0					
ANR	5296953	IfStatement	if ( pid == dbg -> main_pid )		5296761	1					
ANR	5296954	Condition	pid == dbg -> main_pid	331:8:8819:8838	5296761	0	True				
ANR	5296955	EqualityExpression	pid == dbg -> main_pid		5296761	0		==			
ANR	5296956	Identifier	pid		5296761	0					
ANR	5296957	PtrMemberAccess	dbg -> main_pid		5296761	1					
ANR	5296958	Identifier	dbg		5296761	0					
ANR	5296959	Identifier	main_pid		5296761	1					
ANR	5296960	CompoundStatement		34:30:810:810	5296761	1					
ANR	5296961	ExpressionStatement	reason = R_DEBUG_REASON_DEAD	332:5:8848:8876	5296761	0	True				
ANR	5296962	AssignmentExpression	reason = R_DEBUG_REASON_DEAD		5296761	0		=			
ANR	5296963	Identifier	reason		5296761	0					
ANR	5296964	Identifier	R_DEBUG_REASON_DEAD		5296761	1					
ANR	5296965	ElseStatement	else		5296761	0					
ANR	5296966	CompoundStatement		36:11:858:858	5296761	0					
ANR	5296967	ExpressionStatement	reason = R_DEBUG_REASON_EXIT_TID	334:5:8896:8928	5296761	0	True				
ANR	5296968	AssignmentExpression	reason = R_DEBUG_REASON_EXIT_TID		5296761	0		=			
ANR	5296969	Identifier	reason		5296761	0					
ANR	5296970	Identifier	R_DEBUG_REASON_EXIT_TID		5296761	1					
ANR	5296971	ExpressionStatement	"linux_remove_thread ( dbg , pid )"	335:5:8935:8965	5296761	1	True				
ANR	5296972	CallExpression	"linux_remove_thread ( dbg , pid )"		5296761	0					
ANR	5296973	Callee	linux_remove_thread		5296761	0					
ANR	5296974	Identifier	linux_remove_thread		5296761	0					
ANR	5296975	ArgumentList	dbg		5296761	1					
ANR	5296976	Argument	dbg		5296761	0					
ANR	5296977	Identifier	dbg		5296761	0					
ANR	5296978	Argument	pid		5296761	1					
ANR	5296979	Identifier	pid		5296761	0					
ANR	5296980	ElseStatement	else		5296761	0					
ANR	5296981	IfStatement	if ( WIFSIGNALED ( status ) )		5296761	0					
ANR	5296982	Condition	WIFSIGNALED ( status )	337:14:8987:9006	5296761	0	True				
ANR	5296983	CallExpression	WIFSIGNALED ( status )		5296761	0					
ANR	5296984	Callee	WIFSIGNALED		5296761	0					
ANR	5296985	Identifier	WIFSIGNALED		5296761	0					
ANR	5296986	ArgumentList	status		5296761	1					
ANR	5296987	Argument	status		5296761	0					
ANR	5296988	Identifier	status		5296761	0					
ANR	5296989	CompoundStatement		40:36:978:978	5296761	1					
ANR	5296990	ExpressionStatement	"eprintf ( ""child received signal %d\\n"" , WTERMSIG ( status ) )"	338:4:9015:9072	5296761	0	True				
ANR	5296991	CallExpression	"eprintf ( ""child received signal %d\\n"" , WTERMSIG ( status ) )"		5296761	0					
ANR	5296992	Callee	eprintf		5296761	0					
ANR	5296993	Identifier	eprintf		5296761	0					
ANR	5296994	ArgumentList	"""child received signal %d\\n"""		5296761	1					
ANR	5296995	Argument	"""child received signal %d\\n"""		5296761	0					
ANR	5296996	PrimaryExpression	"""child received signal %d\\n"""		5296761	0					
ANR	5296997	Argument	WTERMSIG ( status )		5296761	1					
ANR	5296998	CallExpression	WTERMSIG ( status )		5296761	0					
ANR	5296999	Callee	WTERMSIG		5296761	0					
ANR	5297000	Identifier	WTERMSIG		5296761	0					
ANR	5297001	ArgumentList	status		5296761	1					
ANR	5297002	Argument	status		5296761	0					
ANR	5297003	Identifier	status		5296761	0					
ANR	5297004	ExpressionStatement	reason = R_DEBUG_REASON_SIGNAL	339:4:9078:9108	5296761	1	True				
ANR	5297005	AssignmentExpression	reason = R_DEBUG_REASON_SIGNAL		5296761	0		=			
ANR	5297006	Identifier	reason		5296761	0					
ANR	5297007	Identifier	R_DEBUG_REASON_SIGNAL		5296761	1					
ANR	5297008	ElseStatement	else		5296761	0					
ANR	5297009	IfStatement	if ( WIFSTOPPED ( status ) )		5296761	0					
ANR	5297010	Condition	WIFSTOPPED ( status )	340:14:9124:9142	5296761	0	True				
ANR	5297011	CallExpression	WIFSTOPPED ( status )		5296761	0					
ANR	5297012	Callee	WIFSTOPPED		5296761	0					
ANR	5297013	Identifier	WIFSTOPPED		5296761	0					
ANR	5297014	ArgumentList	status		5296761	1					
ANR	5297015	Argument	status		5296761	0					
ANR	5297016	Identifier	status		5296761	0					
ANR	5297017	CompoundStatement		43:35:1114:1114	5296761	1					
ANR	5297018	IfStatement	if ( WSTOPSIG ( status ) != SIGTRAP && WSTOPSIG ( status ) != SIGSTOP )		5296761	0					
ANR	5297019	Condition	WSTOPSIG ( status ) != SIGTRAP && WSTOPSIG ( status ) != SIGSTOP	341:8:9155:9219	5296761	0	True				
ANR	5297020	AndExpression	WSTOPSIG ( status ) != SIGTRAP && WSTOPSIG ( status ) != SIGSTOP		5296761	0		&&			
ANR	5297021	EqualityExpression	WSTOPSIG ( status ) != SIGTRAP		5296761	0		!=			
ANR	5297022	CallExpression	WSTOPSIG ( status )		5296761	0					
ANR	5297023	Callee	WSTOPSIG		5296761	0					
ANR	5297024	Identifier	WSTOPSIG		5296761	0					
ANR	5297025	ArgumentList	status		5296761	1					
ANR	5297026	Argument	status		5296761	0					
ANR	5297027	Identifier	status		5296761	0					
ANR	5297028	Identifier	SIGTRAP		5296761	1					
ANR	5297029	EqualityExpression	WSTOPSIG ( status ) != SIGSTOP		5296761	1		!=			
ANR	5297030	CallExpression	WSTOPSIG ( status )		5296761	0					
ANR	5297031	Callee	WSTOPSIG		5296761	0					
ANR	5297032	Identifier	WSTOPSIG		5296761	0					
ANR	5297033	ArgumentList	status		5296761	1					
ANR	5297034	Argument	status		5296761	0					
ANR	5297035	Identifier	status		5296761	0					
ANR	5297036	Identifier	SIGSTOP		5296761	1					
ANR	5297037	CompoundStatement		45:35:1191:1191	5296761	1					
ANR	5297038	ExpressionStatement	"eprintf ( ""child stopped with signal %d\\n"" , WSTOPSIG ( status ) )"	343:5:9229:9290	5296761	0	True				
ANR	5297039	CallExpression	"eprintf ( ""child stopped with signal %d\\n"" , WSTOPSIG ( status ) )"		5296761	0					
ANR	5297040	Callee	eprintf		5296761	0					
ANR	5297041	Identifier	eprintf		5296761	0					
ANR	5297042	ArgumentList	"""child stopped with signal %d\\n"""		5296761	1					
ANR	5297043	Argument	"""child stopped with signal %d\\n"""		5296761	0					
ANR	5297044	PrimaryExpression	"""child stopped with signal %d\\n"""		5296761	0					
ANR	5297045	Argument	WSTOPSIG ( status )		5296761	1					
ANR	5297046	CallExpression	WSTOPSIG ( status )		5296761	0					
ANR	5297047	Callee	WSTOPSIG		5296761	0					
ANR	5297048	Identifier	WSTOPSIG		5296761	0					
ANR	5297049	ArgumentList	status		5296761	1					
ANR	5297050	Argument	status		5296761	0					
ANR	5297051	Identifier	status		5296761	0					
ANR	5297052	ExpressionStatement	reason = R_DEBUG_REASON_DEAD	344:5:9297:9325	5296761	1	True				
ANR	5297053	AssignmentExpression	reason = R_DEBUG_REASON_DEAD		5296761	0		=			
ANR	5297054	Identifier	reason		5296761	0					
ANR	5297055	Identifier	R_DEBUG_REASON_DEAD		5296761	1					
ANR	5297056	IfStatement	if ( ! linux_handle_signals ( dbg ) )		5296761	1					
ANR	5297057	Condition	! linux_handle_signals ( dbg )	346:8:9341:9367	5296761	0	True				
ANR	5297058	UnaryOperationExpression	! linux_handle_signals ( dbg )		5296761	0					
ANR	5297059	UnaryOperator	!		5296761	0					
ANR	5297060	CallExpression	linux_handle_signals ( dbg )		5296761	1					
ANR	5297061	Callee	linux_handle_signals		5296761	0					
ANR	5297062	Identifier	linux_handle_signals		5296761	0					
ANR	5297063	ArgumentList	dbg		5296761	1					
ANR	5297064	Argument	dbg		5296761	0					
ANR	5297065	Identifier	dbg		5296761	0					
ANR	5297066	CompoundStatement		49:37:1339:1339	5296761	1					
ANR	5297067	ExpressionStatement	"eprintf ( ""can't handle signals\\n"" )"	347:5:9377:9411	5296761	0	True				
ANR	5297068	CallExpression	"eprintf ( ""can't handle signals\\n"" )"		5296761	0					
ANR	5297069	Callee	eprintf		5296761	0					
ANR	5297070	Identifier	eprintf		5296761	0					
ANR	5297071	ArgumentList	"""can't handle signals\\n"""		5296761	1					
ANR	5297072	Argument	"""can't handle signals\\n"""		5296761	0					
ANR	5297073	PrimaryExpression	"""can't handle signals\\n"""		5296761	0					
ANR	5297074	ReturnStatement	return R_DEBUG_REASON_ERROR ;	348:5:9418:9445	5296761	1	True				
ANR	5297075	Identifier	R_DEBUG_REASON_ERROR		5296761	0					
ANR	5297076	ExpressionStatement	reason = dbg -> reason . type	350:4:9457:9482	5296761	2	True				
ANR	5297077	AssignmentExpression	reason = dbg -> reason . type		5296761	0		=			
ANR	5297078	Identifier	reason		5296761	0					
ANR	5297079	MemberAccess	dbg -> reason . type		5296761	1					
ANR	5297080	PtrMemberAccess	dbg -> reason		5296761	0					
ANR	5297081	Identifier	dbg		5296761	0					
ANR	5297082	Identifier	reason		5296761	1					
ANR	5297083	Identifier	type		5296761	1					
ANR	5297084	ElseStatement	else		5296761	0					
ANR	5297085	IfStatement	if ( WIFCONTINUED ( status ) )		5296761	0					
ANR	5297086	Condition	WIFCONTINUED ( status )	352:14:9518:9538	5296761	0	True				
ANR	5297087	CallExpression	WIFCONTINUED ( status )		5296761	0					
ANR	5297088	Callee	WIFCONTINUED		5296761	0					
ANR	5297089	Identifier	WIFCONTINUED		5296761	0					
ANR	5297090	ArgumentList	status		5296761	1					
ANR	5297091	Argument	status		5296761	0					
ANR	5297092	Identifier	status		5296761	0					
ANR	5297093	CompoundStatement		55:37:1510:1510	5296761	1					
ANR	5297094	ExpressionStatement	"eprintf ( ""child continued...\\n"" )"	353:4:9547:9579	5296761	0	True				
ANR	5297095	CallExpression	"eprintf ( ""child continued...\\n"" )"		5296761	0					
ANR	5297096	Callee	eprintf		5296761	0					
ANR	5297097	Identifier	eprintf		5296761	0					
ANR	5297098	ArgumentList	"""child continued...\\n"""		5296761	1					
ANR	5297099	Argument	"""child continued...\\n"""		5296761	0					
ANR	5297100	PrimaryExpression	"""child continued...\\n"""		5296761	0					
ANR	5297101	ExpressionStatement	reason = R_DEBUG_REASON_NONE	354:4:9585:9613	5296761	1	True				
ANR	5297102	AssignmentExpression	reason = R_DEBUG_REASON_NONE		5296761	0		=			
ANR	5297103	Identifier	reason		5296761	0					
ANR	5297104	Identifier	R_DEBUG_REASON_NONE		5296761	1					
ANR	5297105	ElseStatement	else		5296761	0					
ANR	5297106	IfStatement	if ( status == 1 )		5296761	0					
ANR	5297107	Condition	status == 1	356:14:9636:9646	5296761	0	True				
ANR	5297108	EqualityExpression	status == 1		5296761	0		==			
ANR	5297109	Identifier	status		5296761	0					
ANR	5297110	PrimaryExpression	1		5296761	1					
ANR	5297111	CompoundStatement		59:27:1618:1618	5296761	1					
ANR	5297112	ExpressionStatement	"eprintf ( ""EEK DEAD DEBUGEE!\\n"" )"	357:4:9655:9686	5296761	0	True				
ANR	5297113	CallExpression	"eprintf ( ""EEK DEAD DEBUGEE!\\n"" )"		5296761	0					
ANR	5297114	Callee	eprintf		5296761	0					
ANR	5297115	Identifier	eprintf		5296761	0					
ANR	5297116	ArgumentList	"""EEK DEAD DEBUGEE!\\n"""		5296761	1					
ANR	5297117	Argument	"""EEK DEAD DEBUGEE!\\n"""		5296761	0					
ANR	5297118	PrimaryExpression	"""EEK DEAD DEBUGEE!\\n"""		5296761	0					
ANR	5297119	ExpressionStatement	reason = R_DEBUG_REASON_DEAD	358:4:9692:9720	5296761	1	True				
ANR	5297120	AssignmentExpression	reason = R_DEBUG_REASON_DEAD		5296761	0		=			
ANR	5297121	Identifier	reason		5296761	0					
ANR	5297122	Identifier	R_DEBUG_REASON_DEAD		5296761	1					
ANR	5297123	ElseStatement	else		5296761	0					
ANR	5297124	IfStatement	if ( status == 0 )		5296761	0					
ANR	5297125	Condition	status == 0	359:14:9736:9746	5296761	0	True				
ANR	5297126	EqualityExpression	status == 0		5296761	0		==			
ANR	5297127	Identifier	status		5296761	0					
ANR	5297128	PrimaryExpression	0		5296761	1					
ANR	5297129	CompoundStatement		62:27:1718:1718	5296761	1					
ANR	5297130	ExpressionStatement	"eprintf ( ""STATUS=0?!?!?!?\\n"" )"	360:4:9755:9784	5296761	0	True				
ANR	5297131	CallExpression	"eprintf ( ""STATUS=0?!?!?!?\\n"" )"		5296761	0					
ANR	5297132	Callee	eprintf		5296761	0					
ANR	5297133	Identifier	eprintf		5296761	0					
ANR	5297134	ArgumentList	"""STATUS=0?!?!?!?\\n"""		5296761	1					
ANR	5297135	Argument	"""STATUS=0?!?!?!?\\n"""		5296761	0					
ANR	5297136	PrimaryExpression	"""STATUS=0?!?!?!?\\n"""		5296761	0					
ANR	5297137	ExpressionStatement	reason = R_DEBUG_REASON_DEAD	361:4:9790:9818	5296761	1	True				
ANR	5297138	AssignmentExpression	reason = R_DEBUG_REASON_DEAD		5296761	0		=			
ANR	5297139	Identifier	reason		5296761	0					
ANR	5297140	Identifier	R_DEBUG_REASON_DEAD		5296761	1					
ANR	5297141	ElseStatement	else		5296761	0					
ANR	5297142	CompoundStatement		65:10:1799:1799	5296761	0					
ANR	5297143	IfStatement	if ( ret != pid )		5296761	0					
ANR	5297144	Condition	ret != pid	363:8:9840:9849	5296761	0	True				
ANR	5297145	EqualityExpression	ret != pid		5296761	0		!=			
ANR	5297146	Identifier	ret		5296761	0					
ANR	5297147	Identifier	pid		5296761	1					
ANR	5297148	CompoundStatement		66:20:1821:1821	5296761	1					
ANR	5297149	ExpressionStatement	reason = R_DEBUG_REASON_NEW_PID	364:5:9859:9890	5296761	0	True				
ANR	5297150	AssignmentExpression	reason = R_DEBUG_REASON_NEW_PID		5296761	0		=			
ANR	5297151	Identifier	reason		5296761	0					
ANR	5297152	Identifier	R_DEBUG_REASON_NEW_PID		5296761	1					
ANR	5297153	ElseStatement	else		5296761	0					
ANR	5297154	CompoundStatement		68:11:1872:1872	5296761	0					
ANR	5297155	ExpressionStatement	"eprintf ( ""CRAP. returning from wait without knowing why...\\n"" )"	366:5:9910:9972	5296761	0	True				
ANR	5297156	CallExpression	"eprintf ( ""CRAP. returning from wait without knowing why...\\n"" )"		5296761	0					
ANR	5297157	Callee	eprintf		5296761	0					
ANR	5297158	Identifier	eprintf		5296761	0					
ANR	5297159	ArgumentList	"""CRAP. returning from wait without knowing why...\\n"""		5296761	1					
ANR	5297160	Argument	"""CRAP. returning from wait without knowing why...\\n"""		5296761	0					
ANR	5297161	PrimaryExpression	"""CRAP. returning from wait without knowing why...\\n"""		5296761	0					
ANR	5297162	IfStatement	if ( reason != R_DEBUG_REASON_UNKNOWN )		5296761	5					
ANR	5297163	Condition	reason != R_DEBUG_REASON_UNKNOWN	369:7:9992:10023	5296761	0	True				
ANR	5297164	EqualityExpression	reason != R_DEBUG_REASON_UNKNOWN		5296761	0		!=			
ANR	5297165	Identifier	reason		5296761	0					
ANR	5297166	Identifier	R_DEBUG_REASON_UNKNOWN		5296761	1					
ANR	5297167	CompoundStatement		72:41:1995:1995	5296761	1					
ANR	5297168	BreakStatement	break ;	370:4:10032:10037	5296761	0	True				
ANR	5297169	ReturnStatement	return reason ;	374:1:10052:10065	5296761	6	True				
ANR	5297170	Identifier	reason		5296761	0					
ANR	5297171	ReturnType	RDebugReasonType		5296761	1					
ANR	5297172	Identifier	linux_dbg_wait		5296761	2					
ANR	5297173	ParameterList	"RDebug * dbg , int my_pid"		5296761	3					
ANR	5297174	Parameter	RDebug * dbg	298:32:8005:8015	5296761	0	True				
ANR	5297175	ParameterType	RDebug *		5296761	0					
ANR	5297176	Identifier	dbg		5296761	1					
ANR	5297177	Parameter	int my_pid	298:45:8018:8027	5296761	1	True				
ANR	5297178	ParameterType	int		5296761	0					
ANR	5297179	Identifier	my_pid		5296761	1					
ANR	5297180	CFGEntryNode	ENTRY		5296761		True				
ANR	5297181	CFGExitNode	EXIT		5296761		True				
ANR	5297182	InfiniteForNode	true		5296761		True				
ANR	5297183	Symbol	bed		5296761						
ANR	5297184	Symbol	reason		5296761						
ANR	5297185	Symbol	R_DEBUG_REASON_ERROR		5296761						
ANR	5297186	Symbol	dbg -> main_pid		5296761						
ANR	5297187	Symbol	flags		5296761						
ANR	5297188	Symbol	R_DEBUG_REASON_NONE		5296761						
ANR	5297189	Symbol	pid		5296761						
ANR	5297190	Symbol	WEXITSTATUS		5296761						
ANR	5297191	Symbol	R_DEBUG_REASON_DEAD		5296761						
ANR	5297192	Symbol	linux_ptrace_event		5296761						
ANR	5297193	Symbol	dbg -> reason . type		5296761						
ANR	5297194	Symbol	__WALL		5296761						
ANR	5297195	Symbol	WIFEXITED		5296761						
ANR	5297196	Symbol	SIGTRAP		5296761						
ANR	5297197	Symbol	dbg -> n_threads		5296761						
ANR	5297198	Symbol	WNOHANG		5296761						
ANR	5297199	Symbol	PTRACE_CONT		5296761						
ANR	5297200	Symbol	ret		5296761						
ANR	5297201	Symbol	WIFSIGNALED		5296761						
ANR	5297202	Symbol	NULL		5296761						
ANR	5297203	Symbol	dbg -> reason		5296761						
ANR	5297204	Symbol	R_DEBUG_REASON_EXIT_TID		5296761						
ANR	5297205	Symbol	dbg		5296761						
ANR	5297206	Symbol	~WNOHANG		5296761						
ANR	5297207	Symbol	linux_handle_signals		5296761						
ANR	5297208	Symbol	* dbg		5296761						
ANR	5297209	Symbol	& status		5296761						
ANR	5297210	Symbol	my_pid		5296761						
ANR	5297211	Symbol	R_DEBUG_REASON_UNKNOWN		5296761						
ANR	5297212	Symbol	dbg -> continue_all_threads		5296761						
ANR	5297213	Symbol	SIGSTOP		5296761						
ANR	5297214	Symbol	WTERMSIG		5296761						
ANR	5297215	Symbol	WSTOPSIG		5296761						
ANR	5297216	Symbol	r_cons_sleep_begin		5296761						
ANR	5297217	Symbol	R_DEBUG_REASON_SIGNAL		5296761						
ANR	5297218	Symbol	R_DEBUG_REASON_NEW_PID		5296761						
ANR	5297219	Symbol	WIFCONTINUED		5296761						
ANR	5297220	Symbol	status		5296761						
ANR	5297221	Symbol	waitpid		5296761						
ANR	5297222	Symbol	WIFSTOPPED		5296761						
ANR	5297223	Function	match_pid	377:0:10070:10203							
ANR	5297224	FunctionDef	"match_pid (const void * pid_o , const void * th_o)"		5297223	0					
ANR	5297225	CompoundStatement		377:51:10121:10203	5297223	0					
ANR	5297226	IdentifierDeclStatement	int pid = * ( int * ) pid_o ;	378:1:10124:10147	5297223	0	True				
ANR	5297227	IdentifierDecl	pid = * ( int * ) pid_o		5297223	0					
ANR	5297228	IdentifierDeclType	int		5297223	0					
ANR	5297229	Identifier	pid		5297223	1					
ANR	5297230	AssignmentExpression	pid = * ( int * ) pid_o		5297223	2		=			
ANR	5297231	Identifier	pid		5297223	0					
ANR	5297232	UnaryOperationExpression	* ( int * ) pid_o		5297223	1					
ANR	5297233	UnaryOperator	*		5297223	0					
ANR	5297234	CastExpression	( int * ) pid_o		5297223	1					
ANR	5297235	CastTarget	int *		5297223	0					
ANR	5297236	Identifier	pid_o		5297223	1					
ANR	5297237	IdentifierDeclStatement	RDebug * th = ( RDebug * ) th_o ;	379:1:10150:10177	5297223	1	True				
ANR	5297238	IdentifierDecl	* th = ( RDebug * ) th_o		5297223	0					
ANR	5297239	IdentifierDeclType	RDebug *		5297223	0					
ANR	5297240	Identifier	th		5297223	1					
ANR	5297241	AssignmentExpression	* th = ( RDebug * ) th_o		5297223	2		=			
ANR	5297242	Identifier	th		5297223	0					
ANR	5297243	CastExpression	( RDebug * ) th_o		5297223	1					
ANR	5297244	CastTarget	RDebug *		5297223	0					
ANR	5297245	Identifier	th_o		5297223	1					
ANR	5297246	ReturnStatement	return pid == th -> pid ;	380:1:10180:10201	5297223	2	True				
ANR	5297247	EqualityExpression	pid == th -> pid		5297223	0		==			
ANR	5297248	Identifier	pid		5297223	0					
ANR	5297249	PtrMemberAccess	th -> pid		5297223	1					
ANR	5297250	Identifier	th		5297223	0					
ANR	5297251	Identifier	pid		5297223	1					
ANR	5297252	ReturnType	int		5297223	1					
ANR	5297253	Identifier	match_pid		5297223	2					
ANR	5297254	ParameterList	"const void * pid_o , const void * th_o"		5297223	3					
ANR	5297255	Parameter	const void * pid_o	377:14:10084:10100	5297223	0	True				
ANR	5297256	ParameterType	const void *		5297223	0					
ANR	5297257	Identifier	pid_o		5297223	1					
ANR	5297258	Parameter	const void * th_o	377:33:10103:10118	5297223	1	True				
ANR	5297259	ParameterType	const void *		5297223	0					
ANR	5297260	Identifier	th_o		5297223	1					
ANR	5297261	CFGEntryNode	ENTRY		5297223		True				
ANR	5297262	CFGExitNode	EXIT		5297223		True				
ANR	5297263	Symbol	pid_o		5297223						
ANR	5297264	Symbol	th_o		5297223						
ANR	5297265	Symbol	th		5297223						
ANR	5297266	Symbol	* pid_o		5297223						
ANR	5297267	Symbol	* th		5297223						
ANR	5297268	Symbol	pid		5297223						
ANR	5297269	Symbol	* ( int * ) pid_o		5297223						
ANR	5297270	Symbol	th -> pid		5297223						
ANR	5297271	Function	linux_add_and_attach_new_thread	383:0:10206:10642							
ANR	5297272	FunctionDef	"linux_add_and_attach_new_thread (RDebug * dbg , int tid)"		5297271	0					
ANR	5297273	CompoundStatement		383:66:10272:10642	5297271	0					
ANR	5297274	IdentifierDeclStatement	int uid = getuid ( ) ;	384:1:10275:10293	5297271	0	True				
ANR	5297275	IdentifierDecl	uid = getuid ( )		5297271	0					
ANR	5297276	IdentifierDeclType	int		5297271	0					
ANR	5297277	Identifier	uid		5297271	1					
ANR	5297278	AssignmentExpression	uid = getuid ( )		5297271	2		=			
ANR	5297279	Identifier	uid		5297271	0					
ANR	5297280	CallExpression	getuid ( )		5297271	1					
ANR	5297281	Callee	getuid		5297271	0					
ANR	5297282	Identifier	getuid		5297271	0					
ANR	5297283	ArgumentList			5297271	1					
ANR	5297284	IdentifierDeclStatement	char info [ 1024 ] = { 0 } ;	385:1:10303:10324	5297271	1	True				
ANR	5297285	IdentifierDecl	info [ 1024 ] = { 0 }		5297271	0					
ANR	5297286	IdentifierDeclType	char [ 1024 ]		5297271	0					
ANR	5297287	Identifier	info		5297271	1					
ANR	5297288	PrimaryExpression	1024		5297271	2					
ANR	5297289	AssignmentExpression	info [ 1024 ] = { 0 }		5297271	3		=			
ANR	5297290	Identifier	info		5297271	0					
ANR	5297291	InitializerList	0		5297271	1					
ANR	5297292	PrimaryExpression	0		5297271	0					
ANR	5297293	IdentifierDeclStatement	RDebugPid * tid_info ;	386:1:10327:10346	5297271	2	True				
ANR	5297294	IdentifierDecl	* tid_info		5297271	0					
ANR	5297295	IdentifierDeclType	RDebugPid *		5297271	0					
ANR	5297296	Identifier	tid_info		5297271	1					
ANR	5297297	IfStatement	"if ( ! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) ) )"		5297271	3					
ANR	5297298	Condition	"! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"	388:5:10354:10407	5297271	0	True				
ANR	5297299	UnaryOperationExpression	"! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"		5297271	0					
ANR	5297300	UnaryOperator	!		5297271	0					
ANR	5297301	CallExpression	"procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"		5297271	1					
ANR	5297302	Callee	procfs_pid_slurp		5297271	0					
ANR	5297303	Identifier	procfs_pid_slurp		5297271	0					
ANR	5297304	ArgumentList	tid		5297271	1					
ANR	5297305	Argument	tid		5297271	0					
ANR	5297306	Identifier	tid		5297271	0					
ANR	5297307	Argument	"""status"""		5297271	1					
ANR	5297308	PrimaryExpression	"""status"""		5297271	0					
ANR	5297309	Argument	info		5297271	2					
ANR	5297310	Identifier	info		5297271	0					
ANR	5297311	Argument	sizeof ( info )		5297271	3					
ANR	5297312	SizeofExpression	sizeof ( info )		5297271	0					
ANR	5297313	Sizeof	sizeof		5297271	0					
ANR	5297314	SizeofOperand	info		5297271	1					
ANR	5297315	CompoundStatement		6:61:137:137	5297271	1					
ANR	5297316	ExpressionStatement	"tid_info = fill_pid_info ( info , NULL , tid )"	389:2:10414:10456	5297271	0	True				
ANR	5297317	AssignmentExpression	"tid_info = fill_pid_info ( info , NULL , tid )"		5297271	0		=			
ANR	5297318	Identifier	tid_info		5297271	0					
ANR	5297319	CallExpression	"fill_pid_info ( info , NULL , tid )"		5297271	1					
ANR	5297320	Callee	fill_pid_info		5297271	0					
ANR	5297321	Identifier	fill_pid_info		5297271	0					
ANR	5297322	ArgumentList	info		5297271	1					
ANR	5297323	Argument	info		5297271	0					
ANR	5297324	Identifier	info		5297271	0					
ANR	5297325	Argument	NULL		5297271	1					
ANR	5297326	Identifier	NULL		5297271	0					
ANR	5297327	Argument	tid		5297271	2					
ANR	5297328	Identifier	tid		5297271	0					
ANR	5297329	ElseStatement	else		5297271	0					
ANR	5297330	CompoundStatement		8:8:193:193	5297271	0					
ANR	5297331	ExpressionStatement	"tid_info = r_debug_pid_new ( ""new_path"" , tid , uid , 's' , 0 )"	391:2:10470:10527	5297271	0	True				
ANR	5297332	AssignmentExpression	"tid_info = r_debug_pid_new ( ""new_path"" , tid , uid , 's' , 0 )"		5297271	0		=			
ANR	5297333	Identifier	tid_info		5297271	0					
ANR	5297334	CallExpression	"r_debug_pid_new ( ""new_path"" , tid , uid , 's' , 0 )"		5297271	1					
ANR	5297335	Callee	r_debug_pid_new		5297271	0					
ANR	5297336	Identifier	r_debug_pid_new		5297271	0					
ANR	5297337	ArgumentList	"""new_path"""		5297271	1					
ANR	5297338	Argument	"""new_path"""		5297271	0					
ANR	5297339	PrimaryExpression	"""new_path"""		5297271	0					
ANR	5297340	Argument	tid		5297271	1					
ANR	5297341	Identifier	tid		5297271	0					
ANR	5297342	Argument	uid		5297271	2					
ANR	5297343	Identifier	uid		5297271	0					
ANR	5297344	Argument	's'		5297271	3					
ANR	5297345	PrimaryExpression	's'		5297271	0					
ANR	5297346	Argument	0		5297271	4					
ANR	5297347	PrimaryExpression	0		5297271	0					
ANR	5297348	ExpressionStatement	"( void ) linux_attach ( dbg , tid )"	393:1:10533:10563	5297271	4	True				
ANR	5297349	CastExpression	"( void ) linux_attach ( dbg , tid )"		5297271	0					
ANR	5297350	CastTarget	void		5297271	0					
ANR	5297351	CallExpression	"linux_attach ( dbg , tid )"		5297271	1					
ANR	5297352	Callee	linux_attach		5297271	0					
ANR	5297353	Identifier	linux_attach		5297271	0					
ANR	5297354	ArgumentList	dbg		5297271	1					
ANR	5297355	Argument	dbg		5297271	0					
ANR	5297356	Identifier	dbg		5297271	0					
ANR	5297357	Argument	tid		5297271	1					
ANR	5297358	Identifier	tid		5297271	0					
ANR	5297359	ExpressionStatement	"r_list_append ( dbg -> threads , tid_info )"	394:1:10566:10604	5297271	5	True				
ANR	5297360	CallExpression	"r_list_append ( dbg -> threads , tid_info )"		5297271	0					
ANR	5297361	Callee	r_list_append		5297271	0					
ANR	5297362	Identifier	r_list_append		5297271	0					
ANR	5297363	ArgumentList	dbg -> threads		5297271	1					
ANR	5297364	Argument	dbg -> threads		5297271	0					
ANR	5297365	PtrMemberAccess	dbg -> threads		5297271	0					
ANR	5297366	Identifier	dbg		5297271	0					
ANR	5297367	Identifier	threads		5297271	1					
ANR	5297368	Argument	tid_info		5297271	1					
ANR	5297369	Identifier	tid_info		5297271	0					
ANR	5297370	ExpressionStatement	dbg -> tid = tid	395:1:10607:10621	5297271	6	True				
ANR	5297371	AssignmentExpression	dbg -> tid = tid		5297271	0		=			
ANR	5297372	PtrMemberAccess	dbg -> tid		5297271	0					
ANR	5297373	Identifier	dbg		5297271	0					
ANR	5297374	Identifier	tid		5297271	1					
ANR	5297375	Identifier	tid		5297271	1					
ANR	5297376	ExpressionStatement	dbg -> n_threads ++	396:1:10624:10640	5297271	7	True				
ANR	5297377	PostIncDecOperationExpression	dbg -> n_threads ++		5297271	0					
ANR	5297378	PtrMemberAccess	dbg -> n_threads		5297271	0					
ANR	5297379	Identifier	dbg		5297271	0					
ANR	5297380	Identifier	n_threads		5297271	1					
ANR	5297381	IncDec	++		5297271	1					
ANR	5297382	ReturnType	static void		5297271	1					
ANR	5297383	Identifier	linux_add_and_attach_new_thread		5297271	2					
ANR	5297384	ParameterList	"RDebug * dbg , int tid"		5297271	3					
ANR	5297385	Parameter	RDebug * dbg	383:44:10250:10260	5297271	0	True				
ANR	5297386	ParameterType	RDebug *		5297271	0					
ANR	5297387	Identifier	dbg		5297271	1					
ANR	5297388	Parameter	int tid	383:57:10263:10269	5297271	1	True				
ANR	5297389	ParameterType	int		5297271	0					
ANR	5297390	Identifier	tid		5297271	1					
ANR	5297391	CFGEntryNode	ENTRY		5297271		True				
ANR	5297392	CFGExitNode	EXIT		5297271		True				
ANR	5297393	Symbol	r_debug_pid_new		5297271						
ANR	5297394	Symbol	NULL		5297271						
ANR	5297395	Symbol	dbg		5297271						
ANR	5297396	Symbol	procfs_pid_slurp		5297271						
ANR	5297397	Symbol	* dbg		5297271						
ANR	5297398	Symbol	dbg -> threads		5297271						
ANR	5297399	Symbol	tid		5297271						
ANR	5297400	Symbol	fill_pid_info		5297271						
ANR	5297401	Symbol	dbg -> tid		5297271						
ANR	5297402	Symbol	uid		5297271						
ANR	5297403	Symbol	getuid		5297271						
ANR	5297404	Symbol	tid_info		5297271						
ANR	5297405	Symbol	dbg -> n_threads		5297271						
ANR	5297406	Symbol	info		5297271						
ANR	5297407	Function	linux_stop_process	399:0:10645:10827							
ANR	5297408	FunctionDef	linux_stop_process (int pid)		5297407	0					
ANR	5297409	CompoundStatement		399:39:10684:10827	5297407	0					
ANR	5297410	IdentifierDeclStatement	int status ;	400:1:10687:10697	5297407	0	True				
ANR	5297411	IdentifierDecl	status		5297407	0					
ANR	5297412	IdentifierDeclType	int		5297407	0					
ANR	5297413	Identifier	status		5297407	1					
ANR	5297414	IdentifierDeclStatement	"int ret = syscall ( __NR_tkill , pid , SIGSTOP ) ;"	401:1:10700:10744	5297407	1	True				
ANR	5297415	IdentifierDecl	"ret = syscall ( __NR_tkill , pid , SIGSTOP )"		5297407	0					
ANR	5297416	IdentifierDeclType	int		5297407	0					
ANR	5297417	Identifier	ret		5297407	1					
ANR	5297418	AssignmentExpression	"ret = syscall ( __NR_tkill , pid , SIGSTOP )"		5297407	2		=			
ANR	5297419	Identifier	ret		5297407	0					
ANR	5297420	CallExpression	"syscall ( __NR_tkill , pid , SIGSTOP )"		5297407	1					
ANR	5297421	Callee	syscall		5297407	0					
ANR	5297422	Identifier	syscall		5297407	0					
ANR	5297423	ArgumentList	__NR_tkill		5297407	1					
ANR	5297424	Argument	__NR_tkill		5297407	0					
ANR	5297425	Identifier	__NR_tkill		5297407	0					
ANR	5297426	Argument	pid		5297407	1					
ANR	5297427	Identifier	pid		5297407	0					
ANR	5297428	Argument	SIGSTOP		5297407	2					
ANR	5297429	Identifier	SIGSTOP		5297407	0					
ANR	5297430	IfStatement	if ( ret != - 1 )		5297407	2					
ANR	5297431	Condition	ret != - 1	402:5:10751:10759	5297407	0	True				
ANR	5297432	EqualityExpression	ret != - 1		5297407	0		!=			
ANR	5297433	Identifier	ret		5297407	0					
ANR	5297434	UnaryOperationExpression	- 1		5297407	1					
ANR	5297435	UnaryOperator	-		5297407	0					
ANR	5297436	PrimaryExpression	1		5297407	1					
ANR	5297437	CompoundStatement		4:16:77:77	5297407	1					
ANR	5297438	ExpressionStatement	"ret = waitpid ( pid , & status , __WALL )"	403:2:10766:10802	5297407	0	True				
ANR	5297439	AssignmentExpression	"ret = waitpid ( pid , & status , __WALL )"		5297407	0		=			
ANR	5297440	Identifier	ret		5297407	0					
ANR	5297441	CallExpression	"waitpid ( pid , & status , __WALL )"		5297407	1					
ANR	5297442	Callee	waitpid		5297407	0					
ANR	5297443	Identifier	waitpid		5297407	0					
ANR	5297444	ArgumentList	pid		5297407	1					
ANR	5297445	Argument	pid		5297407	0					
ANR	5297446	Identifier	pid		5297407	0					
ANR	5297447	Argument	& status		5297407	1					
ANR	5297448	UnaryOperationExpression	& status		5297407	0					
ANR	5297449	UnaryOperator	&		5297407	0					
ANR	5297450	Identifier	status		5297407	1					
ANR	5297451	Argument	__WALL		5297407	2					
ANR	5297452	Identifier	__WALL		5297407	0					
ANR	5297453	ReturnStatement	return ret == pid ;	405:1:10808:10825	5297407	3	True				
ANR	5297454	EqualityExpression	ret == pid		5297407	0		==			
ANR	5297455	Identifier	ret		5297407	0					
ANR	5297456	Identifier	pid		5297407	1					
ANR	5297457	ReturnType	static int		5297407	1					
ANR	5297458	Identifier	linux_stop_process		5297407	2					
ANR	5297459	ParameterList	int pid		5297407	3					
ANR	5297460	Parameter	int pid	399:30:10675:10681	5297407	0	True				
ANR	5297461	ParameterType	int		5297407	0					
ANR	5297462	Identifier	pid		5297407	1					
ANR	5297463	CFGEntryNode	ENTRY		5297407		True				
ANR	5297464	CFGExitNode	EXIT		5297407		True				
ANR	5297465	Symbol	ret		5297407						
ANR	5297466	Symbol	syscall		5297407						
ANR	5297467	Symbol	__NR_tkill		5297407						
ANR	5297468	Symbol	SIGSTOP		5297407						
ANR	5297469	Symbol	__WALL		5297407						
ANR	5297470	Symbol	pid		5297407						
ANR	5297471	Symbol	& status		5297407						
ANR	5297472	Symbol	status		5297407						
ANR	5297473	Symbol	waitpid		5297407						
ANR	5297474	Function	linux_attach_single_pid	408:0:10830:11012							
ANR	5297475	FunctionDef	"linux_attach_single_pid (RDebug * dbg , int ptid)"		5297474	0					
ANR	5297476	CompoundStatement		408:58:10888:11012	5297474	0					
ANR	5297477	ExpressionStatement	"linux_set_options ( dbg , ptid )"	409:1:10891:10920	5297474	0	True				
ANR	5297478	CallExpression	"linux_set_options ( dbg , ptid )"		5297474	0					
ANR	5297479	Callee	linux_set_options		5297474	0					
ANR	5297480	Identifier	linux_set_options		5297474	0					
ANR	5297481	ArgumentList	dbg		5297474	1					
ANR	5297482	Argument	dbg		5297474	0					
ANR	5297483	Identifier	dbg		5297474	0					
ANR	5297484	Argument	ptid		5297474	1					
ANR	5297485	Identifier	ptid		5297474	0					
ANR	5297486	ReturnStatement	"return r_debug_ptrace ( dbg , PTRACE_ATTACH , ptid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL ) ;"	410:1:10923:11010	5297474	1	True				
ANR	5297487	CallExpression	"r_debug_ptrace ( dbg , PTRACE_ATTACH , ptid , NULL , ( r_ptrace_data_t ) ( size_t ) NULL )"		5297474	0					
ANR	5297488	Callee	r_debug_ptrace		5297474	0					
ANR	5297489	Identifier	r_debug_ptrace		5297474	0					
ANR	5297490	ArgumentList	dbg		5297474	1					
ANR	5297491	Argument	dbg		5297474	0					
ANR	5297492	Identifier	dbg		5297474	0					
ANR	5297493	Argument	PTRACE_ATTACH		5297474	1					
ANR	5297494	Identifier	PTRACE_ATTACH		5297474	0					
ANR	5297495	Argument	ptid		5297474	2					
ANR	5297496	Identifier	ptid		5297474	0					
ANR	5297497	Argument	NULL		5297474	3					
ANR	5297498	Identifier	NULL		5297474	0					
ANR	5297499	Argument	( r_ptrace_data_t ) ( size_t ) NULL		5297474	4					
ANR	5297500	CastExpression	( r_ptrace_data_t ) ( size_t ) NULL		5297474	0					
ANR	5297501	CastTarget	r_ptrace_data_t		5297474	0					
ANR	5297502	CastExpression	( size_t ) NULL		5297474	1					
ANR	5297503	CastTarget	size_t		5297474	0					
ANR	5297504	Identifier	NULL		5297474	1					
ANR	5297505	ReturnType	static int		5297474	1					
ANR	5297506	Identifier	linux_attach_single_pid		5297474	2					
ANR	5297507	ParameterList	"RDebug * dbg , int ptid"		5297474	3					
ANR	5297508	Parameter	RDebug * dbg	408:35:10865:10875	5297474	0	True				
ANR	5297509	ParameterType	RDebug *		5297474	0					
ANR	5297510	Identifier	dbg		5297474	1					
ANR	5297511	Parameter	int ptid	408:48:10878:10885	5297474	1	True				
ANR	5297512	ParameterType	int		5297474	0					
ANR	5297513	Identifier	ptid		5297474	1					
ANR	5297514	CFGEntryNode	ENTRY		5297474		True				
ANR	5297515	CFGExitNode	EXIT		5297474		True				
ANR	5297516	Symbol	PTRACE_ATTACH		5297474						
ANR	5297517	Symbol	NULL		5297474						
ANR	5297518	Symbol	dbg		5297474						
ANR	5297519	Symbol	r_debug_ptrace		5297474						
ANR	5297520	Symbol	ptid		5297474						
ANR	5297521	Function	get_pid_thread_list	414:0:11015:11212							
ANR	5297522	FunctionDef	"get_pid_thread_list (RDebug * dbg , int main_pid)"		5297521	0					
ANR	5297523	CompoundStatement		414:62:11077:11212	5297521	0					
ANR	5297524	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	415:1:11080:11107	5297521	0	True				
ANR	5297525	IdentifierDecl	* list = r_list_new ( )		5297521	0					
ANR	5297526	IdentifierDeclType	RList *		5297521	0					
ANR	5297527	Identifier	list		5297521	1					
ANR	5297528	AssignmentExpression	* list = r_list_new ( )		5297521	2		=			
ANR	5297529	Identifier	list		5297521	0					
ANR	5297530	CallExpression	r_list_new ( )		5297521	1					
ANR	5297531	Callee	r_list_new		5297521	0					
ANR	5297532	Identifier	r_list_new		5297521	0					
ANR	5297533	ArgumentList			5297521	1					
ANR	5297534	IfStatement	if ( list )		5297521	1					
ANR	5297535	Condition	list	416:5:11114:11117	5297521	0	True				
ANR	5297536	Identifier	list		5297521	0					
ANR	5297537	CompoundStatement		3:11:42:42	5297521	1					
ANR	5297538	ExpressionStatement	"list = linux_thread_list ( main_pid , list )"	417:2:11124:11165	5297521	0	True				
ANR	5297539	AssignmentExpression	"list = linux_thread_list ( main_pid , list )"		5297521	0		=			
ANR	5297540	Identifier	list		5297521	0					
ANR	5297541	CallExpression	"linux_thread_list ( main_pid , list )"		5297521	1					
ANR	5297542	Callee	linux_thread_list		5297521	0					
ANR	5297543	Identifier	linux_thread_list		5297521	0					
ANR	5297544	ArgumentList	main_pid		5297521	1					
ANR	5297545	Argument	main_pid		5297521	0					
ANR	5297546	Identifier	main_pid		5297521	0					
ANR	5297547	Argument	list		5297521	1					
ANR	5297548	Identifier	list		5297521	0					
ANR	5297549	ExpressionStatement	dbg -> main_pid = main_pid	418:2:11169:11193	5297521	1	True				
ANR	5297550	AssignmentExpression	dbg -> main_pid = main_pid		5297521	0		=			
ANR	5297551	PtrMemberAccess	dbg -> main_pid		5297521	0					
ANR	5297552	Identifier	dbg		5297521	0					
ANR	5297553	Identifier	main_pid		5297521	1					
ANR	5297554	Identifier	main_pid		5297521	1					
ANR	5297555	ReturnStatement	return list ;	420:1:11199:11210	5297521	2	True				
ANR	5297556	Identifier	list		5297521	0					
ANR	5297557	ReturnType	static RList *		5297521	1					
ANR	5297558	Identifier	get_pid_thread_list		5297521	2					
ANR	5297559	ParameterList	"RDebug * dbg , int main_pid"		5297521	3					
ANR	5297560	Parameter	RDebug * dbg	414:35:11050:11060	5297521	0	True				
ANR	5297561	ParameterType	RDebug *		5297521	0					
ANR	5297562	Identifier	dbg		5297521	1					
ANR	5297563	Parameter	int main_pid	414:48:11063:11074	5297521	1	True				
ANR	5297564	ParameterType	int		5297521	0					
ANR	5297565	Identifier	main_pid		5297521	1					
ANR	5297566	CFGEntryNode	ENTRY		5297521		True				
ANR	5297567	CFGExitNode	EXIT		5297521		True				
ANR	5297568	Symbol	main_pid		5297521						
ANR	5297569	Symbol	dbg -> main_pid		5297521						
ANR	5297570	Symbol	linux_thread_list		5297521						
ANR	5297571	Symbol	dbg		5297521						
ANR	5297572	Symbol	list		5297521						
ANR	5297573	Symbol	* dbg		5297521						
ANR	5297574	Symbol	r_list_new		5297521						
ANR	5297575	Function	linux_attach_all	423:0:11215:11689							
ANR	5297576	FunctionDef	linux_attach_all (RDebug * dbg)		5297575	0					
ANR	5297577	CompoundStatement		423:43:11258:11689	5297575	0					
ANR	5297578	IdentifierDeclStatement	"int ret = linux_attach_single_pid ( dbg , dbg -> main_pid ) ;"	424:1:11261:11315	5297575	0	True				
ANR	5297579	IdentifierDecl	"ret = linux_attach_single_pid ( dbg , dbg -> main_pid )"		5297575	0					
ANR	5297580	IdentifierDeclType	int		5297575	0					
ANR	5297581	Identifier	ret		5297575	1					
ANR	5297582	AssignmentExpression	"ret = linux_attach_single_pid ( dbg , dbg -> main_pid )"		5297575	2		=			
ANR	5297583	Identifier	ret		5297575	0					
ANR	5297584	CallExpression	"linux_attach_single_pid ( dbg , dbg -> main_pid )"		5297575	1					
ANR	5297585	Callee	linux_attach_single_pid		5297575	0					
ANR	5297586	Identifier	linux_attach_single_pid		5297575	0					
ANR	5297587	ArgumentList	dbg		5297575	1					
ANR	5297588	Argument	dbg		5297575	0					
ANR	5297589	Identifier	dbg		5297575	0					
ANR	5297590	Argument	dbg -> main_pid		5297575	1					
ANR	5297591	PtrMemberAccess	dbg -> main_pid		5297575	0					
ANR	5297592	Identifier	dbg		5297575	0					
ANR	5297593	Identifier	main_pid		5297575	1					
ANR	5297594	IfStatement	if ( ret != - 1 )		5297575	1					
ANR	5297595	Condition	ret != - 1	425:5:11322:11330	5297575	0	True				
ANR	5297596	EqualityExpression	ret != - 1		5297575	0		!=			
ANR	5297597	Identifier	ret		5297575	0					
ANR	5297598	UnaryOperationExpression	- 1		5297575	1					
ANR	5297599	UnaryOperator	-		5297575	0					
ANR	5297600	PrimaryExpression	1		5297575	1					
ANR	5297601	CompoundStatement		3:16:74:74	5297575	1					
ANR	5297602	ExpressionStatement	"perror ( ""ptrace (PT_ATTACH)"" )"	426:2:11337:11366	5297575	0	True				
ANR	5297603	CallExpression	"perror ( ""ptrace (PT_ATTACH)"" )"		5297575	0					
ANR	5297604	Callee	perror		5297575	0					
ANR	5297605	Identifier	perror		5297575	0					
ANR	5297606	ArgumentList	"""ptrace (PT_ATTACH)"""		5297575	1					
ANR	5297607	Argument	"""ptrace (PT_ATTACH)"""		5297575	0					
ANR	5297608	PrimaryExpression	"""ptrace (PT_ATTACH)"""		5297575	0					
ANR	5297609	IdentifierDeclStatement	RList * list = dbg -> threads ;	429:1:11373:11399	5297575	2	True				
ANR	5297610	IdentifierDecl	* list = dbg -> threads		5297575	0					
ANR	5297611	IdentifierDeclType	RList *		5297575	0					
ANR	5297612	Identifier	list		5297575	1					
ANR	5297613	AssignmentExpression	* list = dbg -> threads		5297575	2		=			
ANR	5297614	Identifier	list		5297575	0					
ANR	5297615	PtrMemberAccess	dbg -> threads		5297575	1					
ANR	5297616	Identifier	dbg		5297575	0					
ANR	5297617	Identifier	threads		5297575	1					
ANR	5297618	IfStatement	if ( list )		5297575	3					
ANR	5297619	Condition	list	430:5:11406:11409	5297575	0	True				
ANR	5297620	Identifier	list		5297575	0					
ANR	5297621	CompoundStatement		10:2:174:187	5297575	1					
ANR	5297622	IdentifierDeclStatement	RDebugPid * th ;	431:2:11416:11429	5297575	0	True				
ANR	5297623	IdentifierDecl	* th		5297575	0					
ANR	5297624	IdentifierDeclType	RDebugPid *		5297575	0					
ANR	5297625	Identifier	th		5297575	1					
ANR	5297626	IdentifierDeclStatement	RListIter * it ;	432:2:11433:11446	5297575	1	True				
ANR	5297627	IdentifierDecl	* it		5297575	0					
ANR	5297628	IdentifierDeclType	RListIter *		5297575	0					
ANR	5297629	Identifier	it		5297575	1					
ANR	5297630	Statement	r_list_foreach	433:2:11450:11463	5297575	2	True				
ANR	5297631	Statement	(	433:17:11465:11465	5297575	3	True				
ANR	5297632	Statement	list	433:18:11466:11469	5297575	4	True				
ANR	5297633	Statement	","	433:22:11470:11470	5297575	5	True				
ANR	5297634	Statement	it	433:24:11472:11473	5297575	6	True				
ANR	5297635	Statement	","	433:26:11474:11474	5297575	7	True				
ANR	5297636	Statement	th	433:28:11476:11477	5297575	8	True				
ANR	5297637	Statement	)	433:30:11478:11478	5297575	9	True				
ANR	5297638	CompoundStatement		11:32:221:221	5297575	10					
ANR	5297639	IfStatement	if ( th -> pid && th -> pid != dbg -> main_pid )		5297575	0					
ANR	5297640	Condition	th -> pid && th -> pid != dbg -> main_pid	434:7:11489:11523	5297575	0	True				
ANR	5297641	AndExpression	th -> pid && th -> pid != dbg -> main_pid		5297575	0		&&			
ANR	5297642	PtrMemberAccess	th -> pid		5297575	0					
ANR	5297643	Identifier	th		5297575	0					
ANR	5297644	Identifier	pid		5297575	1					
ANR	5297645	EqualityExpression	th -> pid != dbg -> main_pid		5297575	1		!=			
ANR	5297646	PtrMemberAccess	th -> pid		5297575	0					
ANR	5297647	Identifier	th		5297575	0					
ANR	5297648	Identifier	pid		5297575	1					
ANR	5297649	PtrMemberAccess	dbg -> main_pid		5297575	1					
ANR	5297650	Identifier	dbg		5297575	0					
ANR	5297651	Identifier	main_pid		5297575	1					
ANR	5297652	CompoundStatement		12:44:267:267	5297575	1					
ANR	5297653	ExpressionStatement	"ret = linux_attach_single_pid ( dbg , th -> pid )"	435:4:11532:11576	5297575	0	True				
ANR	5297654	AssignmentExpression	"ret = linux_attach_single_pid ( dbg , th -> pid )"		5297575	0		=			
ANR	5297655	Identifier	ret		5297575	0					
ANR	5297656	CallExpression	"linux_attach_single_pid ( dbg , th -> pid )"		5297575	1					
ANR	5297657	Callee	linux_attach_single_pid		5297575	0					
ANR	5297658	Identifier	linux_attach_single_pid		5297575	0					
ANR	5297659	ArgumentList	dbg		5297575	1					
ANR	5297660	Argument	dbg		5297575	0					
ANR	5297661	Identifier	dbg		5297575	0					
ANR	5297662	Argument	th -> pid		5297575	1					
ANR	5297663	PtrMemberAccess	th -> pid		5297575	0					
ANR	5297664	Identifier	th		5297575	0					
ANR	5297665	Identifier	pid		5297575	1					
ANR	5297666	IfStatement	if ( ret == - 1 )		5297575	1					
ANR	5297667	Condition	ret == - 1	436:8:11586:11594	5297575	0	True				
ANR	5297668	EqualityExpression	ret == - 1		5297575	0		==			
ANR	5297669	Identifier	ret		5297575	0					
ANR	5297670	UnaryOperationExpression	- 1		5297575	1					
ANR	5297671	UnaryOperator	-		5297575	0					
ANR	5297672	PrimaryExpression	1		5297575	1					
ANR	5297673	CompoundStatement		14:19:338:338	5297575	1					
ANR	5297674	ExpressionStatement	"eprintf ( ""PID %d\\n"" , th -> pid )"	437:5:11604:11633	5297575	0	True				
ANR	5297675	CallExpression	"eprintf ( ""PID %d\\n"" , th -> pid )"		5297575	0					
ANR	5297676	Callee	eprintf		5297575	0					
ANR	5297677	Identifier	eprintf		5297575	0					
ANR	5297678	ArgumentList	"""PID %d\\n"""		5297575	1					
ANR	5297679	Argument	"""PID %d\\n"""		5297575	0					
ANR	5297680	PrimaryExpression	"""PID %d\\n"""		5297575	0					
ANR	5297681	Argument	th -> pid		5297575	1					
ANR	5297682	PtrMemberAccess	th -> pid		5297575	0					
ANR	5297683	Identifier	th		5297575	0					
ANR	5297684	Identifier	pid		5297575	1					
ANR	5297685	ExpressionStatement	"perror ( ""ptrace (PT_ATTACH)"" )"	438:5:11640:11669	5297575	1	True				
ANR	5297686	CallExpression	"perror ( ""ptrace (PT_ATTACH)"" )"		5297575	0					
ANR	5297687	Callee	perror		5297575	0					
ANR	5297688	Identifier	perror		5297575	0					
ANR	5297689	ArgumentList	"""ptrace (PT_ATTACH)"""		5297575	1					
ANR	5297690	Argument	"""ptrace (PT_ATTACH)"""		5297575	0					
ANR	5297691	PrimaryExpression	"""ptrace (PT_ATTACH)"""		5297575	0					
ANR	5297692	ReturnType	static void		5297575	1					
ANR	5297693	Identifier	linux_attach_all		5297575	2					
ANR	5297694	ParameterList	RDebug * dbg		5297575	3					
ANR	5297695	Parameter	RDebug * dbg	423:30:11245:11255	5297575	0	True				
ANR	5297696	ParameterType	RDebug *		5297575	0					
ANR	5297697	Identifier	dbg		5297575	1					
ANR	5297698	CFGEntryNode	ENTRY		5297575		True				
ANR	5297699	CFGExitNode	EXIT		5297575		True				
ANR	5297700	Symbol	ret		5297575						
ANR	5297701	Symbol	linux_attach_single_pid		5297575						
ANR	5297702	Symbol	th		5297575						
ANR	5297703	Symbol	dbg -> main_pid		5297575						
ANR	5297704	Symbol	dbg		5297575						
ANR	5297705	Symbol	* th		5297575						
ANR	5297706	Symbol	it		5297575						
ANR	5297707	Symbol	* dbg		5297575						
ANR	5297708	Symbol	list		5297575						
ANR	5297709	Symbol	dbg -> threads		5297575						
ANR	5297710	Symbol	th -> pid		5297575						
ANR	5297711	Function	linux_attach	445:0:11692:12309							
ANR	5297712	FunctionDef	"linux_attach (RDebug * dbg , int pid)"		5297711	0					
ANR	5297713	CompoundStatement		445:39:11731:12309	5297711	0					
ANR	5297714	IfStatement	if ( ! dbg -> threads )		5297711	0					
ANR	5297715	Condition	! dbg -> threads	447:5:11824:11836	5297711	0	True				
ANR	5297716	UnaryOperationExpression	! dbg -> threads		5297711	0					
ANR	5297717	UnaryOperator	!		5297711	0					
ANR	5297718	PtrMemberAccess	dbg -> threads		5297711	1					
ANR	5297719	Identifier	dbg		5297711	0					
ANR	5297720	Identifier	threads		5297711	1					
ANR	5297721	CompoundStatement		3:20:107:107	5297711	1					
ANR	5297722	ExpressionStatement	"dbg -> threads = get_pid_thread_list ( dbg , pid )"	448:2:11843:11888	5297711	0	True				
ANR	5297723	AssignmentExpression	"dbg -> threads = get_pid_thread_list ( dbg , pid )"		5297711	0		=			
ANR	5297724	PtrMemberAccess	dbg -> threads		5297711	0					
ANR	5297725	Identifier	dbg		5297711	0					
ANR	5297726	Identifier	threads		5297711	1					
ANR	5297727	CallExpression	"get_pid_thread_list ( dbg , pid )"		5297711	1					
ANR	5297728	Callee	get_pid_thread_list		5297711	0					
ANR	5297729	Identifier	get_pid_thread_list		5297711	0					
ANR	5297730	ArgumentList	dbg		5297711	1					
ANR	5297731	Argument	dbg		5297711	0					
ANR	5297732	Identifier	dbg		5297711	0					
ANR	5297733	Argument	pid		5297711	1					
ANR	5297734	Identifier	pid		5297711	0					
ANR	5297735	ExpressionStatement	linux_attach_all ( dbg )	449:2:11892:11914	5297711	1	True				
ANR	5297736	CallExpression	linux_attach_all ( dbg )		5297711	0					
ANR	5297737	Callee	linux_attach_all		5297711	0					
ANR	5297738	Identifier	linux_attach_all		5297711	0					
ANR	5297739	ArgumentList	dbg		5297711	1					
ANR	5297740	Argument	dbg		5297711	0					
ANR	5297741	Identifier	dbg		5297711	0					
ANR	5297742	ElseStatement	else		5297711	0					
ANR	5297743	CompoundStatement		12:2:453:497	5297711	0					
ANR	5297744	IfStatement	"if ( dbg -> threads && ! r_list_find ( dbg -> threads , & pid , & match_pid ) )"		5297711	0					
ANR	5297745	Condition	"dbg -> threads && ! r_list_find ( dbg -> threads , & pid , & match_pid )"	453:6:12101:12161	5297711	0	True				
ANR	5297746	AndExpression	"dbg -> threads && ! r_list_find ( dbg -> threads , & pid , & match_pid )"		5297711	0		&&			
ANR	5297747	PtrMemberAccess	dbg -> threads		5297711	0					
ANR	5297748	Identifier	dbg		5297711	0					
ANR	5297749	Identifier	threads		5297711	1					
ANR	5297750	UnaryOperationExpression	"! r_list_find ( dbg -> threads , & pid , & match_pid )"		5297711	1					
ANR	5297751	UnaryOperator	!		5297711	0					
ANR	5297752	CallExpression	"r_list_find ( dbg -> threads , & pid , & match_pid )"		5297711	1					
ANR	5297753	Callee	r_list_find		5297711	0					
ANR	5297754	Identifier	r_list_find		5297711	0					
ANR	5297755	ArgumentList	dbg -> threads		5297711	1					
ANR	5297756	Argument	dbg -> threads		5297711	0					
ANR	5297757	PtrMemberAccess	dbg -> threads		5297711	0					
ANR	5297758	Identifier	dbg		5297711	0					
ANR	5297759	Identifier	threads		5297711	1					
ANR	5297760	Argument	& pid		5297711	1					
ANR	5297761	UnaryOperationExpression	& pid		5297711	0					
ANR	5297762	UnaryOperator	&		5297711	0					
ANR	5297763	Identifier	pid		5297711	1					
ANR	5297764	Argument	& match_pid		5297711	2					
ANR	5297765	UnaryOperationExpression	& match_pid		5297711	0					
ANR	5297766	UnaryOperator	&		5297711	0					
ANR	5297767	Identifier	match_pid		5297711	1					
ANR	5297768	CompoundStatement		9:69:432:432	5297711	1					
ANR	5297769	GotoStatement	goto out ;	454:3:12169:12177	5297711	0	True				
ANR	5297770	Identifier	out		5297711	0					
ANR	5297771	IdentifierDeclStatement	"int ret = linux_attach_single_pid ( dbg , pid ) ;"	456:2:12185:12229	5297711	1	True				
ANR	5297772	IdentifierDecl	"ret = linux_attach_single_pid ( dbg , pid )"		5297711	0					
ANR	5297773	IdentifierDeclType	int		5297711	0					
ANR	5297774	Identifier	ret		5297711	1					
ANR	5297775	AssignmentExpression	"ret = linux_attach_single_pid ( dbg , pid )"		5297711	2		=			
ANR	5297776	Identifier	ret		5297711	0					
ANR	5297777	CallExpression	"linux_attach_single_pid ( dbg , pid )"		5297711	1					
ANR	5297778	Callee	linux_attach_single_pid		5297711	0					
ANR	5297779	Identifier	linux_attach_single_pid		5297711	0					
ANR	5297780	ArgumentList	dbg		5297711	1					
ANR	5297781	Argument	dbg		5297711	0					
ANR	5297782	Identifier	dbg		5297711	0					
ANR	5297783	Argument	pid		5297711	1					
ANR	5297784	Identifier	pid		5297711	0					
ANR	5297785	IfStatement	if ( ret == - 1 )		5297711	2					
ANR	5297786	Condition	ret == - 1	457:6:12237:12245	5297711	0	True				
ANR	5297787	EqualityExpression	ret == - 1		5297711	0		==			
ANR	5297788	Identifier	ret		5297711	0					
ANR	5297789	UnaryOperationExpression	- 1		5297711	1					
ANR	5297790	UnaryOperator	-		5297711	0					
ANR	5297791	PrimaryExpression	1		5297711	1					
ANR	5297792	CompoundStatement		13:17:516:516	5297711	1					
ANR	5297793	ExpressionStatement	"perror ( ""ptrace (PT_ATTACH)"" )"	458:3:12253:12282	5297711	0	True				
ANR	5297794	CallExpression	"perror ( ""ptrace (PT_ATTACH)"" )"		5297711	0					
ANR	5297795	Callee	perror		5297711	0					
ANR	5297796	Identifier	perror		5297711	0					
ANR	5297797	ArgumentList	"""ptrace (PT_ATTACH)"""		5297711	1					
ANR	5297798	Argument	"""ptrace (PT_ATTACH)"""		5297711	0					
ANR	5297799	PrimaryExpression	"""ptrace (PT_ATTACH)"""		5297711	0					
ANR	5297800	Label	out :	461:0:12291:12294	5297711	1	True				
ANR	5297801	Identifier	out		5297711	0					
ANR	5297802	ReturnStatement	return pid ;	462:1:12297:12307	5297711	2	True				
ANR	5297803	Identifier	pid		5297711	0					
ANR	5297804	ReturnType	int		5297711	1					
ANR	5297805	Identifier	linux_attach		5297711	2					
ANR	5297806	ParameterList	"RDebug * dbg , int pid"		5297711	3					
ANR	5297807	Parameter	RDebug * dbg	445:17:11709:11719	5297711	0	True				
ANR	5297808	ParameterType	RDebug *		5297711	0					
ANR	5297809	Identifier	dbg		5297711	1					
ANR	5297810	Parameter	int pid	445:30:11722:11728	5297711	1	True				
ANR	5297811	ParameterType	int		5297711	0					
ANR	5297812	Identifier	pid		5297711	1					
ANR	5297813	CFGEntryNode	ENTRY		5297711		True				
ANR	5297814	CFGExitNode	EXIT		5297711		True				
ANR	5297815	Symbol	ret		5297711						
ANR	5297816	Symbol	r_list_find		5297711						
ANR	5297817	Symbol	linux_attach_single_pid		5297711						
ANR	5297818	Symbol	& pid		5297711						
ANR	5297819	Symbol	dbg		5297711						
ANR	5297820	Symbol	& match_pid		5297711						
ANR	5297821	Symbol	pid		5297711						
ANR	5297822	Symbol	get_pid_thread_list		5297711						
ANR	5297823	Symbol	dbg -> threads		5297711						
ANR	5297824	Symbol	* dbg		5297711						
ANR	5297825	Function	read_link	465:0:12312:12606							
ANR	5297826	FunctionDef	"read_link (int pid , const char * file)"		5297825	0					
ANR	5297827	CompoundStatement		465:50:12362:12606	5297825	0					
ANR	5297828	IdentifierDeclStatement	char path [ 1024 ] = { 0 } ;	466:1:12365:12386	5297825	0	True				
ANR	5297829	IdentifierDecl	path [ 1024 ] = { 0 }		5297825	0					
ANR	5297830	IdentifierDeclType	char [ 1024 ]		5297825	0					
ANR	5297831	Identifier	path		5297825	1					
ANR	5297832	PrimaryExpression	1024		5297825	2					
ANR	5297833	AssignmentExpression	path [ 1024 ] = { 0 }		5297825	3		=			
ANR	5297834	Identifier	path		5297825	0					
ANR	5297835	InitializerList	0		5297825	1					
ANR	5297836	PrimaryExpression	0		5297825	0					
ANR	5297837	IdentifierDeclStatement	char buf [ 1024 ] = { 0 } ;	467:1:12389:12409	5297825	1	True				
ANR	5297838	IdentifierDecl	buf [ 1024 ] = { 0 }		5297825	0					
ANR	5297839	IdentifierDeclType	char [ 1024 ]		5297825	0					
ANR	5297840	Identifier	buf		5297825	1					
ANR	5297841	PrimaryExpression	1024		5297825	2					
ANR	5297842	AssignmentExpression	buf [ 1024 ] = { 0 }		5297825	3		=			
ANR	5297843	Identifier	buf		5297825	0					
ANR	5297844	InitializerList	0		5297825	1					
ANR	5297845	PrimaryExpression	0		5297825	0					
ANR	5297846	ExpressionStatement	"snprintf ( path , sizeof ( path ) , ""/proc/%d/%s"" , pid , file )"	469:1:12413:12469	5297825	2	True				
ANR	5297847	CallExpression	"snprintf ( path , sizeof ( path ) , ""/proc/%d/%s"" , pid , file )"		5297825	0					
ANR	5297848	Callee	snprintf		5297825	0					
ANR	5297849	Identifier	snprintf		5297825	0					
ANR	5297850	ArgumentList	path		5297825	1					
ANR	5297851	Argument	path		5297825	0					
ANR	5297852	Identifier	path		5297825	0					
ANR	5297853	Argument	sizeof ( path )		5297825	1					
ANR	5297854	SizeofExpression	sizeof ( path )		5297825	0					
ANR	5297855	Sizeof	sizeof		5297825	0					
ANR	5297856	SizeofOperand	path		5297825	1					
ANR	5297857	Argument	"""/proc/%d/%s"""		5297825	2					
ANR	5297858	PrimaryExpression	"""/proc/%d/%s"""		5297825	0					
ANR	5297859	Argument	pid		5297825	3					
ANR	5297860	Identifier	pid		5297825	0					
ANR	5297861	Argument	file		5297825	4					
ANR	5297862	Identifier	file		5297825	0					
ANR	5297863	IdentifierDeclStatement	"int ret = readlink ( path , buf , sizeof ( buf ) ) ;"	470:1:12472:12516	5297825	3	True				
ANR	5297864	IdentifierDecl	"ret = readlink ( path , buf , sizeof ( buf ) )"		5297825	0					
ANR	5297865	IdentifierDeclType	int		5297825	0					
ANR	5297866	Identifier	ret		5297825	1					
ANR	5297867	AssignmentExpression	"ret = readlink ( path , buf , sizeof ( buf ) )"		5297825	2		=			
ANR	5297868	Identifier	ret		5297825	0					
ANR	5297869	CallExpression	"readlink ( path , buf , sizeof ( buf ) )"		5297825	1					
ANR	5297870	Callee	readlink		5297825	0					
ANR	5297871	Identifier	readlink		5297825	0					
ANR	5297872	ArgumentList	path		5297825	1					
ANR	5297873	Argument	path		5297825	0					
ANR	5297874	Identifier	path		5297825	0					
ANR	5297875	Argument	buf		5297825	1					
ANR	5297876	Identifier	buf		5297825	0					
ANR	5297877	Argument	sizeof ( buf )		5297825	2					
ANR	5297878	SizeofExpression	sizeof ( buf )		5297825	0					
ANR	5297879	Sizeof	sizeof		5297825	0					
ANR	5297880	SizeofOperand	buf		5297825	1					
ANR	5297881	IfStatement	if ( ret > 0 )		5297825	4					
ANR	5297882	Condition	ret > 0	471:5:12523:12529	5297825	0	True				
ANR	5297883	RelationalExpression	ret > 0		5297825	0		>			
ANR	5297884	Identifier	ret		5297825	0					
ANR	5297885	PrimaryExpression	0		5297825	1					
ANR	5297886	CompoundStatement		7:14:169:169	5297825	1					
ANR	5297887	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = '\\0'	472:2:12536:12564	5297825	0	True				
ANR	5297888	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = '\\0'		5297825	0		=			
ANR	5297889	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		5297825	0					
ANR	5297890	Identifier	buf		5297825	0					
ANR	5297891	AdditiveExpression	sizeof ( buf ) - 1		5297825	1		-			
ANR	5297892	SizeofExpression	sizeof ( buf )		5297825	0					
ANR	5297893	Sizeof	sizeof		5297825	0					
ANR	5297894	SizeofOperand	buf		5297825	1					
ANR	5297895	PrimaryExpression	1		5297825	1					
ANR	5297896	PrimaryExpression	'\\0'		5297825	1					
ANR	5297897	ReturnStatement	return strdup ( buf ) ;	473:2:12568:12587	5297825	1	True				
ANR	5297898	CallExpression	strdup ( buf )		5297825	0					
ANR	5297899	Callee	strdup		5297825	0					
ANR	5297900	Identifier	strdup		5297825	0					
ANR	5297901	ArgumentList	buf		5297825	1					
ANR	5297902	Argument	buf		5297825	0					
ANR	5297903	Identifier	buf		5297825	0					
ANR	5297904	ReturnStatement	return NULL ;	475:1:12593:12604	5297825	5	True				
ANR	5297905	Identifier	NULL		5297825	0					
ANR	5297906	ReturnType	static char *		5297825	1					
ANR	5297907	Identifier	read_link		5297825	2					
ANR	5297908	ParameterList	"int pid , const char * file"		5297825	3					
ANR	5297909	Parameter	int pid	465:23:12335:12341	5297825	0	True				
ANR	5297910	ParameterType	int		5297825	0					
ANR	5297911	Identifier	pid		5297825	1					
ANR	5297912	Parameter	const char * file	465:32:12344:12359	5297825	1	True				
ANR	5297913	ParameterType	const char *		5297825	0					
ANR	5297914	Identifier	file		5297825	1					
ANR	5297915	CFGEntryNode	ENTRY		5297825		True				
ANR	5297916	CFGExitNode	EXIT		5297825		True				
ANR	5297917	Symbol	ret		5297825						
ANR	5297918	Symbol	path		5297825						
ANR	5297919	Symbol	buf		5297825						
ANR	5297920	Symbol	* buf		5297825						
ANR	5297921	Symbol	file		5297825						
ANR	5297922	Symbol	NULL		5297825						
ANR	5297923	Symbol	readlink		5297825						
ANR	5297924	Symbol	pid		5297825						
ANR	5297925	Symbol	strdup		5297825						
ANR	5297926	Function	linux_info	478:0:12609:13687							
ANR	5297927	FunctionDef	"linux_info (RDebug * dbg , const char * arg)"		5297926	0					
ANR	5297928	CompoundStatement		478:53:12662:13687	5297926	0					
ANR	5297929	IdentifierDeclStatement	char proc_buff [ 1024 ] ;	479:1:12665:12685	5297926	0	True				
ANR	5297930	IdentifierDecl	proc_buff [ 1024 ]		5297926	0					
ANR	5297931	IdentifierDeclType	char [ 1024 ]		5297926	0					
ANR	5297932	Identifier	proc_buff		5297926	1					
ANR	5297933	PrimaryExpression	1024		5297926	2					
ANR	5297934	IdentifierDeclStatement	RDebugInfo * rdi = R_NEW0 ( RDebugInfo ) ;	480:1:12688:12725	5297926	1	True				
ANR	5297935	IdentifierDecl	* rdi = R_NEW0 ( RDebugInfo )		5297926	0					
ANR	5297936	IdentifierDeclType	RDebugInfo *		5297926	0					
ANR	5297937	Identifier	rdi		5297926	1					
ANR	5297938	AssignmentExpression	* rdi = R_NEW0 ( RDebugInfo )		5297926	2		=			
ANR	5297939	Identifier	rdi		5297926	0					
ANR	5297940	CallExpression	R_NEW0 ( RDebugInfo )		5297926	1					
ANR	5297941	Callee	R_NEW0		5297926	0					
ANR	5297942	Identifier	R_NEW0		5297926	0					
ANR	5297943	ArgumentList	RDebugInfo		5297926	1					
ANR	5297944	Argument	RDebugInfo		5297926	0					
ANR	5297945	Identifier	RDebugInfo		5297926	0					
ANR	5297946	IfStatement	if ( ! rdi )		5297926	2					
ANR	5297947	Condition	! rdi	481:5:12732:12735	5297926	0	True				
ANR	5297948	UnaryOperationExpression	! rdi		5297926	0					
ANR	5297949	UnaryOperator	!		5297926	0					
ANR	5297950	Identifier	rdi		5297926	1					
ANR	5297951	CompoundStatement		4:11:75:75	5297926	1					
ANR	5297952	ReturnStatement	return NULL ;	482:2:12742:12753	5297926	0	True				
ANR	5297953	Identifier	NULL		5297926	0					
ANR	5297954	IdentifierDeclStatement	RList * th_list ;	485:1:12760:12774	5297926	3	True				
ANR	5297955	IdentifierDecl	* th_list		5297926	0					
ANR	5297956	IdentifierDeclType	RList *		5297926	0					
ANR	5297957	Identifier	th_list		5297926	1					
ANR	5297958	IdentifierDeclStatement	bool list_alloc = false ;	486:1:12777:12800	5297926	4	True				
ANR	5297959	IdentifierDecl	list_alloc = false		5297926	0					
ANR	5297960	IdentifierDeclType	bool		5297926	0					
ANR	5297961	Identifier	list_alloc		5297926	1					
ANR	5297962	AssignmentExpression	list_alloc = false		5297926	2		=			
ANR	5297963	Identifier	false		5297926	0					
ANR	5297964	Identifier	false		5297926	1					
ANR	5297965	IfStatement	if ( dbg -> threads )		5297926	5					
ANR	5297966	Condition	dbg -> threads	487:5:12807:12818	5297926	0	True				
ANR	5297967	PtrMemberAccess	dbg -> threads		5297926	0					
ANR	5297968	Identifier	dbg		5297926	0					
ANR	5297969	Identifier	threads		5297926	1					
ANR	5297970	CompoundStatement		10:19:158:158	5297926	1					
ANR	5297971	ExpressionStatement	th_list = dbg -> threads	488:2:12825:12847	5297926	0	True				
ANR	5297972	AssignmentExpression	th_list = dbg -> threads		5297926	0		=			
ANR	5297973	Identifier	th_list		5297926	0					
ANR	5297974	PtrMemberAccess	dbg -> threads		5297926	1					
ANR	5297975	Identifier	dbg		5297926	0					
ANR	5297976	Identifier	threads		5297926	1					
ANR	5297977	ElseStatement	else		5297926	0					
ANR	5297978	CompoundStatement		12:8:194:194	5297926	0					
ANR	5297979	ExpressionStatement	th_list = r_list_new ( )	490:2:12861:12884	5297926	0	True				
ANR	5297980	AssignmentExpression	th_list = r_list_new ( )		5297926	0		=			
ANR	5297981	Identifier	th_list		5297926	0					
ANR	5297982	CallExpression	r_list_new ( )		5297926	1					
ANR	5297983	Callee	r_list_new		5297926	0					
ANR	5297984	Identifier	r_list_new		5297926	0					
ANR	5297985	ArgumentList			5297926	1					
ANR	5297986	ExpressionStatement	list_alloc = true	491:2:12888:12905	5297926	1	True				
ANR	5297987	AssignmentExpression	list_alloc = true		5297926	0		=			
ANR	5297988	Identifier	list_alloc		5297926	0					
ANR	5297989	Identifier	true		5297926	1					
ANR	5297990	IfStatement	if ( th_list )		5297926	2					
ANR	5297991	Condition	th_list	492:6:12913:12919	5297926	0	True				
ANR	5297992	Identifier	th_list		5297926	0					
ANR	5297993	CompoundStatement		15:15:259:259	5297926	1					
ANR	5297994	ExpressionStatement	"th_list = linux_thread_list ( dbg -> pid , th_list )"	493:3:12927:12974	5297926	0	True				
ANR	5297995	AssignmentExpression	"th_list = linux_thread_list ( dbg -> pid , th_list )"		5297926	0		=			
ANR	5297996	Identifier	th_list		5297926	0					
ANR	5297997	CallExpression	"linux_thread_list ( dbg -> pid , th_list )"		5297926	1					
ANR	5297998	Callee	linux_thread_list		5297926	0					
ANR	5297999	Identifier	linux_thread_list		5297926	0					
ANR	5298000	ArgumentList	dbg -> pid		5297926	1					
ANR	5298001	Argument	dbg -> pid		5297926	0					
ANR	5298002	PtrMemberAccess	dbg -> pid		5297926	0					
ANR	5298003	Identifier	dbg		5297926	0					
ANR	5298004	Identifier	pid		5297926	1					
ANR	5298005	Argument	th_list		5297926	1					
ANR	5298006	Identifier	th_list		5297926	0					
ANR	5298007	IdentifierDeclStatement	RDebugPid * th ;	496:1:12984:12997	5297926	6	True				
ANR	5298008	IdentifierDecl	* th		5297926	0					
ANR	5298009	IdentifierDeclType	RDebugPid *		5297926	0					
ANR	5298010	Identifier	th		5297926	1					
ANR	5298011	IdentifierDeclStatement	RListIter * it ;	497:1:13000:13013	5297926	7	True				
ANR	5298012	IdentifierDecl	* it		5297926	0					
ANR	5298013	IdentifierDeclType	RListIter *		5297926	0					
ANR	5298014	Identifier	it		5297926	1					
ANR	5298015	IdentifierDeclStatement	bool found = false ;	498:1:13016:13034	5297926	8	True				
ANR	5298016	IdentifierDecl	found = false		5297926	0					
ANR	5298017	IdentifierDeclType	bool		5297926	0					
ANR	5298018	Identifier	found		5297926	1					
ANR	5298019	AssignmentExpression	found = false		5297926	2		=			
ANR	5298020	Identifier	false		5297926	0					
ANR	5298021	Identifier	false		5297926	1					
ANR	5298022	Statement	r_list_foreach	499:1:13037:13050	5297926	9	True				
ANR	5298023	Statement	(	499:16:13052:13052	5297926	10	True				
ANR	5298024	Statement	th_list	499:17:13053:13059	5297926	11	True				
ANR	5298025	Statement	","	499:24:13060:13060	5297926	12	True				
ANR	5298026	Statement	it	499:26:13062:13063	5297926	13	True				
ANR	5298027	Statement	","	499:28:13064:13064	5297926	14	True				
ANR	5298028	Statement	th	499:30:13066:13067	5297926	15	True				
ANR	5298029	Statement	)	499:32:13068:13068	5297926	16	True				
ANR	5298030	CompoundStatement		22:34:407:407	5297926	17					
ANR	5298031	IfStatement	if ( th -> pid == dbg -> pid )		5297926	0					
ANR	5298032	Condition	th -> pid == dbg -> pid	500:6:13078:13096	5297926	0	True				
ANR	5298033	EqualityExpression	th -> pid == dbg -> pid		5297926	0		==			
ANR	5298034	PtrMemberAccess	th -> pid		5297926	0					
ANR	5298035	Identifier	th		5297926	0					
ANR	5298036	Identifier	pid		5297926	1					
ANR	5298037	PtrMemberAccess	dbg -> pid		5297926	1					
ANR	5298038	Identifier	dbg		5297926	0					
ANR	5298039	Identifier	pid		5297926	1					
ANR	5298040	CompoundStatement		23:27:436:436	5297926	1					
ANR	5298041	ExpressionStatement	found = true	501:3:13104:13116	5297926	0	True				
ANR	5298042	AssignmentExpression	found = true		5297926	0		=			
ANR	5298043	Identifier	found		5297926	0					
ANR	5298044	Identifier	true		5297926	1					
ANR	5298045	BreakStatement	break ;	502:3:13121:13126	5297926	1	True				
ANR	5298046	ExpressionStatement	rdi -> pid = dbg -> pid	505:1:13136:13155	5297926	18	True				
ANR	5298047	AssignmentExpression	rdi -> pid = dbg -> pid		5297926	0		=			
ANR	5298048	PtrMemberAccess	rdi -> pid		5297926	0					
ANR	5298049	Identifier	rdi		5297926	0					
ANR	5298050	Identifier	pid		5297926	1					
ANR	5298051	PtrMemberAccess	dbg -> pid		5297926	1					
ANR	5298052	Identifier	dbg		5297926	0					
ANR	5298053	Identifier	pid		5297926	1					
ANR	5298054	ExpressionStatement	rdi -> tid = dbg -> tid	506:1:13158:13177	5297926	19	True				
ANR	5298055	AssignmentExpression	rdi -> tid = dbg -> tid		5297926	0		=			
ANR	5298056	PtrMemberAccess	rdi -> tid		5297926	0					
ANR	5298057	Identifier	rdi		5297926	0					
ANR	5298058	Identifier	tid		5297926	1					
ANR	5298059	PtrMemberAccess	dbg -> tid		5297926	1					
ANR	5298060	Identifier	dbg		5297926	0					
ANR	5298061	Identifier	tid		5297926	1					
ANR	5298062	ExpressionStatement	rdi -> uid = found ? th -> uid : - 1	507:1:13180:13211	5297926	20	True				
ANR	5298063	AssignmentExpression	rdi -> uid = found ? th -> uid : - 1		5297926	0		=			
ANR	5298064	PtrMemberAccess	rdi -> uid		5297926	0					
ANR	5298065	Identifier	rdi		5297926	0					
ANR	5298066	Identifier	uid		5297926	1					
ANR	5298067	ConditionalExpression	found ? th -> uid : - 1		5297926	1					
ANR	5298068	Condition	found		5297926	0					
ANR	5298069	Identifier	found		5297926	0					
ANR	5298070	PtrMemberAccess	th -> uid		5297926	1					
ANR	5298071	Identifier	th		5297926	0					
ANR	5298072	Identifier	uid		5297926	1					
ANR	5298073	UnaryOperationExpression	- 1		5297926	2					
ANR	5298074	UnaryOperator	-		5297926	0					
ANR	5298075	PrimaryExpression	1		5297926	1					
ANR	5298076	ExpressionStatement	rdi -> gid = found ? th -> gid : - 1	508:1:13214:13245	5297926	21	True				
ANR	5298077	AssignmentExpression	rdi -> gid = found ? th -> gid : - 1		5297926	0		=			
ANR	5298078	PtrMemberAccess	rdi -> gid		5297926	0					
ANR	5298079	Identifier	rdi		5297926	0					
ANR	5298080	Identifier	gid		5297926	1					
ANR	5298081	ConditionalExpression	found ? th -> gid : - 1		5297926	1					
ANR	5298082	Condition	found		5297926	0					
ANR	5298083	Identifier	found		5297926	0					
ANR	5298084	PtrMemberAccess	th -> gid		5297926	1					
ANR	5298085	Identifier	th		5297926	0					
ANR	5298086	Identifier	gid		5297926	1					
ANR	5298087	UnaryOperationExpression	- 1		5297926	2					
ANR	5298088	UnaryOperator	-		5297926	0					
ANR	5298089	PrimaryExpression	1		5297926	1					
ANR	5298090	ExpressionStatement	"rdi -> cwd = read_link ( rdi -> pid , ""cwd"" )"	509:1:13248:13286	5297926	22	True				
ANR	5298091	AssignmentExpression	"rdi -> cwd = read_link ( rdi -> pid , ""cwd"" )"		5297926	0		=			
ANR	5298092	PtrMemberAccess	rdi -> cwd		5297926	0					
ANR	5298093	Identifier	rdi		5297926	0					
ANR	5298094	Identifier	cwd		5297926	1					
ANR	5298095	CallExpression	"read_link ( rdi -> pid , ""cwd"" )"		5297926	1					
ANR	5298096	Callee	read_link		5297926	0					
ANR	5298097	Identifier	read_link		5297926	0					
ANR	5298098	ArgumentList	rdi -> pid		5297926	1					
ANR	5298099	Argument	rdi -> pid		5297926	0					
ANR	5298100	PtrMemberAccess	rdi -> pid		5297926	0					
ANR	5298101	Identifier	rdi		5297926	0					
ANR	5298102	Identifier	pid		5297926	1					
ANR	5298103	Argument	"""cwd"""		5297926	1					
ANR	5298104	PrimaryExpression	"""cwd"""		5297926	0					
ANR	5298105	ExpressionStatement	"rdi -> exe = read_link ( rdi -> pid , ""exe"" )"	510:1:13289:13327	5297926	23	True				
ANR	5298106	AssignmentExpression	"rdi -> exe = read_link ( rdi -> pid , ""exe"" )"		5297926	0		=			
ANR	5298107	PtrMemberAccess	rdi -> exe		5297926	0					
ANR	5298108	Identifier	rdi		5297926	0					
ANR	5298109	Identifier	exe		5297926	1					
ANR	5298110	CallExpression	"read_link ( rdi -> pid , ""exe"" )"		5297926	1					
ANR	5298111	Callee	read_link		5297926	0					
ANR	5298112	Identifier	read_link		5297926	0					
ANR	5298113	ArgumentList	rdi -> pid		5297926	1					
ANR	5298114	Argument	rdi -> pid		5297926	0					
ANR	5298115	PtrMemberAccess	rdi -> pid		5297926	0					
ANR	5298116	Identifier	rdi		5297926	0					
ANR	5298117	Identifier	pid		5297926	1					
ANR	5298118	Argument	"""exe"""		5297926	1					
ANR	5298119	PrimaryExpression	"""exe"""		5297926	0					
ANR	5298120	ExpressionStatement	"snprintf ( proc_buff , sizeof ( proc_buff ) , ""/proc/%d/cmdline"" , rdi -> pid )"	511:1:13330:13400	5297926	24	True				
ANR	5298121	CallExpression	"snprintf ( proc_buff , sizeof ( proc_buff ) , ""/proc/%d/cmdline"" , rdi -> pid )"		5297926	0					
ANR	5298122	Callee	snprintf		5297926	0					
ANR	5298123	Identifier	snprintf		5297926	0					
ANR	5298124	ArgumentList	proc_buff		5297926	1					
ANR	5298125	Argument	proc_buff		5297926	0					
ANR	5298126	Identifier	proc_buff		5297926	0					
ANR	5298127	Argument	sizeof ( proc_buff )		5297926	1					
ANR	5298128	SizeofExpression	sizeof ( proc_buff )		5297926	0					
ANR	5298129	Sizeof	sizeof		5297926	0					
ANR	5298130	SizeofOperand	proc_buff		5297926	1					
ANR	5298131	Argument	"""/proc/%d/cmdline"""		5297926	2					
ANR	5298132	PrimaryExpression	"""/proc/%d/cmdline"""		5297926	0					
ANR	5298133	Argument	rdi -> pid		5297926	3					
ANR	5298134	PtrMemberAccess	rdi -> pid		5297926	0					
ANR	5298135	Identifier	rdi		5297926	0					
ANR	5298136	Identifier	pid		5297926	1					
ANR	5298137	ExpressionStatement	"rdi -> cmdline = r_file_slurp ( proc_buff , NULL )"	512:1:13403:13448	5297926	25	True				
ANR	5298138	AssignmentExpression	"rdi -> cmdline = r_file_slurp ( proc_buff , NULL )"		5297926	0		=			
ANR	5298139	PtrMemberAccess	rdi -> cmdline		5297926	0					
ANR	5298140	Identifier	rdi		5297926	0					
ANR	5298141	Identifier	cmdline		5297926	1					
ANR	5298142	CallExpression	"r_file_slurp ( proc_buff , NULL )"		5297926	1					
ANR	5298143	Callee	r_file_slurp		5297926	0					
ANR	5298144	Identifier	r_file_slurp		5297926	0					
ANR	5298145	ArgumentList	proc_buff		5297926	1					
ANR	5298146	Argument	proc_buff		5297926	0					
ANR	5298147	Identifier	proc_buff		5297926	0					
ANR	5298148	Argument	NULL		5297926	1					
ANR	5298149	Identifier	NULL		5297926	0					
ANR	5298150	ExpressionStatement	"snprintf ( proc_buff , sizeof ( proc_buff ) , ""/proc/%d/stack"" , rdi -> pid )"	513:1:13451:13519	5297926	26	True				
ANR	5298151	CallExpression	"snprintf ( proc_buff , sizeof ( proc_buff ) , ""/proc/%d/stack"" , rdi -> pid )"		5297926	0					
ANR	5298152	Callee	snprintf		5297926	0					
ANR	5298153	Identifier	snprintf		5297926	0					
ANR	5298154	ArgumentList	proc_buff		5297926	1					
ANR	5298155	Argument	proc_buff		5297926	0					
ANR	5298156	Identifier	proc_buff		5297926	0					
ANR	5298157	Argument	sizeof ( proc_buff )		5297926	1					
ANR	5298158	SizeofExpression	sizeof ( proc_buff )		5297926	0					
ANR	5298159	Sizeof	sizeof		5297926	0					
ANR	5298160	SizeofOperand	proc_buff		5297926	1					
ANR	5298161	Argument	"""/proc/%d/stack"""		5297926	2					
ANR	5298162	PrimaryExpression	"""/proc/%d/stack"""		5297926	0					
ANR	5298163	Argument	rdi -> pid		5297926	3					
ANR	5298164	PtrMemberAccess	rdi -> pid		5297926	0					
ANR	5298165	Identifier	rdi		5297926	0					
ANR	5298166	Identifier	pid		5297926	1					
ANR	5298167	ExpressionStatement	"rdi -> kernel_stack = r_file_slurp ( proc_buff , NULL )"	514:1:13522:13572	5297926	27	True				
ANR	5298168	AssignmentExpression	"rdi -> kernel_stack = r_file_slurp ( proc_buff , NULL )"		5297926	0		=			
ANR	5298169	PtrMemberAccess	rdi -> kernel_stack		5297926	0					
ANR	5298170	Identifier	rdi		5297926	0					
ANR	5298171	Identifier	kernel_stack		5297926	1					
ANR	5298172	CallExpression	"r_file_slurp ( proc_buff , NULL )"		5297926	1					
ANR	5298173	Callee	r_file_slurp		5297926	0					
ANR	5298174	Identifier	r_file_slurp		5297926	0					
ANR	5298175	ArgumentList	proc_buff		5297926	1					
ANR	5298176	Argument	proc_buff		5297926	0					
ANR	5298177	Identifier	proc_buff		5297926	0					
ANR	5298178	Argument	NULL		5297926	1					
ANR	5298179	Identifier	NULL		5297926	0					
ANR	5298180	ExpressionStatement	rdi -> status = found ? th -> status : R_DBG_PROC_STOP	515:1:13575:13625	5297926	28	True				
ANR	5298181	AssignmentExpression	rdi -> status = found ? th -> status : R_DBG_PROC_STOP		5297926	0		=			
ANR	5298182	PtrMemberAccess	rdi -> status		5297926	0					
ANR	5298183	Identifier	rdi		5297926	0					
ANR	5298184	Identifier	status		5297926	1					
ANR	5298185	ConditionalExpression	found ? th -> status : R_DBG_PROC_STOP		5297926	1					
ANR	5298186	Condition	found		5297926	0					
ANR	5298187	Identifier	found		5297926	0					
ANR	5298188	PtrMemberAccess	th -> status		5297926	1					
ANR	5298189	Identifier	th		5297926	0					
ANR	5298190	Identifier	status		5297926	1					
ANR	5298191	Identifier	R_DBG_PROC_STOP		5297926	2					
ANR	5298192	IfStatement	if ( list_alloc )		5297926	29					
ANR	5298193	Condition	list_alloc	516:5:13632:13641	5297926	0	True				
ANR	5298194	Identifier	list_alloc		5297926	0					
ANR	5298195	CompoundStatement		39:17:981:981	5297926	1					
ANR	5298196	ExpressionStatement	r_list_free ( th_list )	517:2:13648:13669	5297926	0	True				
ANR	5298197	CallExpression	r_list_free ( th_list )		5297926	0					
ANR	5298198	Callee	r_list_free		5297926	0					
ANR	5298199	Identifier	r_list_free		5297926	0					
ANR	5298200	ArgumentList	th_list		5297926	1					
ANR	5298201	Argument	th_list		5297926	0					
ANR	5298202	Identifier	th_list		5297926	0					
ANR	5298203	ReturnStatement	return rdi ;	519:1:13675:13685	5297926	30	True				
ANR	5298204	Identifier	rdi		5297926	0					
ANR	5298205	ReturnType	RDebugInfo *		5297926	1					
ANR	5298206	Identifier	linux_info		5297926	2					
ANR	5298207	ParameterList	"RDebug * dbg , const char * arg"		5297926	3					
ANR	5298208	Parameter	RDebug * dbg	478:23:12632:12642	5297926	0	True				
ANR	5298209	ParameterType	RDebug *		5297926	0					
ANR	5298210	Identifier	dbg		5297926	1					
ANR	5298211	Parameter	const char * arg	478:36:12645:12659	5297926	1	True				
ANR	5298212	ParameterType	const char *		5297926	0					
ANR	5298213	Identifier	arg		5297926	1					
ANR	5298214	CFGEntryNode	ENTRY		5297926		True				
ANR	5298215	CFGExitNode	EXIT		5297926		True				
ANR	5298216	CFGErrorNode	ERROR		5297926		True				
ANR	5298217	Symbol	th -> uid		5297926						
ANR	5298218	Symbol	rdi -> status		5297926						
ANR	5298219	Symbol	rdi -> gid		5297926						
ANR	5298220	Symbol	rdi -> cmdline		5297926						
ANR	5298221	Symbol	R_DBG_PROC_STOP		5297926						
ANR	5298222	Symbol	RDebugInfo		5297926						
ANR	5298223	Symbol	rdi -> kernel_stack		5297926						
ANR	5298224	Symbol	th -> pid		5297926						
ANR	5298225	Symbol	found		5297926						
ANR	5298226	Symbol	arg		5297926						
ANR	5298227	Symbol	rdi -> cwd		5297926						
ANR	5298228	Symbol	read_link		5297926						
ANR	5298229	Symbol	* rdi		5297926						
ANR	5298230	Symbol	r_file_slurp		5297926						
ANR	5298231	Symbol	NULL		5297926						
ANR	5298232	Symbol	linux_thread_list		5297926						
ANR	5298233	Symbol	dbg		5297926						
ANR	5298234	Symbol	false		5297926						
ANR	5298235	Symbol	it		5297926						
ANR	5298236	Symbol	* dbg		5297926						
ANR	5298237	Symbol	dbg -> threads		5297926						
ANR	5298238	Symbol	th -> status		5297926						
ANR	5298239	Symbol	dbg -> tid		5297926						
ANR	5298240	Symbol	R_NEW0		5297926						
ANR	5298241	Symbol	th_list		5297926						
ANR	5298242	Symbol	rdi -> pid		5297926						
ANR	5298243	Symbol	dbg -> pid		5297926						
ANR	5298244	Symbol	th		5297926						
ANR	5298245	Symbol	rdi		5297926						
ANR	5298246	Symbol	true		5297926						
ANR	5298247	Symbol	th -> gid		5297926						
ANR	5298248	Symbol	list_alloc		5297926						
ANR	5298249	Symbol	* th		5297926						
ANR	5298250	Symbol	rdi -> exe		5297926						
ANR	5298251	Symbol	rdi -> uid		5297926						
ANR	5298252	Symbol	proc_buff		5297926						
ANR	5298253	Symbol	r_list_new		5297926						
ANR	5298254	Symbol	rdi -> tid		5297926						
ANR	5298255	Function	fill_pid_info	522:0:13690:14594							
ANR	5298256	FunctionDef	"fill_pid_info (const char * info , const char * path , int tid)"		5298255	0					
ANR	5298257	CompoundStatement		522:70:13760:14594	5298255	0					
ANR	5298258	IdentifierDeclStatement	RDebugPid * pid_info = R_NEW0 ( RDebugPid ) ;	523:1:13763:13803	5298255	0	True				
ANR	5298259	IdentifierDecl	* pid_info = R_NEW0 ( RDebugPid )		5298255	0					
ANR	5298260	IdentifierDeclType	RDebugPid *		5298255	0					
ANR	5298261	Identifier	pid_info		5298255	1					
ANR	5298262	AssignmentExpression	* pid_info = R_NEW0 ( RDebugPid )		5298255	2		=			
ANR	5298263	Identifier	pid_info		5298255	0					
ANR	5298264	CallExpression	R_NEW0 ( RDebugPid )		5298255	1					
ANR	5298265	Callee	R_NEW0		5298255	0					
ANR	5298266	Identifier	R_NEW0		5298255	0					
ANR	5298267	ArgumentList	RDebugPid		5298255	1					
ANR	5298268	Argument	RDebugPid		5298255	0					
ANR	5298269	Identifier	RDebugPid		5298255	0					
ANR	5298270	IfStatement	if ( ! pid_info )		5298255	1					
ANR	5298271	Condition	! pid_info	524:5:13810:13818	5298255	0	True				
ANR	5298272	UnaryOperationExpression	! pid_info		5298255	0					
ANR	5298273	UnaryOperator	!		5298255	0					
ANR	5298274	Identifier	pid_info		5298255	1					
ANR	5298275	CompoundStatement		3:16:60:60	5298255	1					
ANR	5298276	ReturnStatement	return NULL ;	525:2:13825:13836	5298255	0	True				
ANR	5298277	Identifier	NULL		5298255	0					
ANR	5298278	IdentifierDeclStatement	"char * ptr = strstr ( info , ""State:"" ) ;"	527:1:13842:13877	5298255	2	True				
ANR	5298279	IdentifierDecl	"* ptr = strstr ( info , ""State:"" )"		5298255	0					
ANR	5298280	IdentifierDeclType	char *		5298255	0					
ANR	5298281	Identifier	ptr		5298255	1					
ANR	5298282	AssignmentExpression	"* ptr = strstr ( info , ""State:"" )"		5298255	2		=			
ANR	5298283	Identifier	ptr		5298255	0					
ANR	5298284	CallExpression	"strstr ( info , ""State:"" )"		5298255	1					
ANR	5298285	Callee	strstr		5298255	0					
ANR	5298286	Identifier	strstr		5298255	0					
ANR	5298287	ArgumentList	info		5298255	1					
ANR	5298288	Argument	info		5298255	0					
ANR	5298289	Identifier	info		5298255	0					
ANR	5298290	Argument	"""State:"""		5298255	1					
ANR	5298291	PrimaryExpression	"""State:"""		5298255	0					
ANR	5298292	IfStatement	if ( ptr )		5298255	3					
ANR	5298293	Condition	ptr	528:5:13884:13886	5298255	0	True				
ANR	5298294	Identifier	ptr		5298255	0					
ANR	5298295	CompoundStatement		7:10:128:128	5298255	1					
ANR	5298296	SwitchStatement	switch ( * ( ptr + 7 ) )		5298255	0					
ANR	5298297	Condition	* ( ptr + 7 )	529:10:13901:13910	5298255	0	True				
ANR	5298298	UnaryOperationExpression	* ( ptr + 7 )		5298255	0					
ANR	5298299	UnaryOperator	*		5298255	0					
ANR	5298300	AdditiveExpression	ptr + 7		5298255	1		+			
ANR	5298301	Identifier	ptr		5298255	0					
ANR	5298302	PrimaryExpression	7		5298255	1					
ANR	5298303	CompoundStatement		8:22:152:152	5298255	1					
ANR	5298304	Label	case 'R' :	530:2:13917:13925	5298255	0	True				
ANR	5298305	ExpressionStatement	pid_info -> status = R_DBG_PROC_RUN	531:3:13930:13963	5298255	1	True				
ANR	5298306	AssignmentExpression	pid_info -> status = R_DBG_PROC_RUN		5298255	0		=			
ANR	5298307	PtrMemberAccess	pid_info -> status		5298255	0					
ANR	5298308	Identifier	pid_info		5298255	0					
ANR	5298309	Identifier	status		5298255	1					
ANR	5298310	Identifier	R_DBG_PROC_RUN		5298255	1					
ANR	5298311	BreakStatement	break ;	532:3:13968:13973	5298255	2	True				
ANR	5298312	Label	case 'S' :	533:2:13977:13985	5298255	3	True				
ANR	5298313	ExpressionStatement	pid_info -> status = R_DBG_PROC_SLEEP	534:3:13990:14025	5298255	4	True				
ANR	5298314	AssignmentExpression	pid_info -> status = R_DBG_PROC_SLEEP		5298255	0		=			
ANR	5298315	PtrMemberAccess	pid_info -> status		5298255	0					
ANR	5298316	Identifier	pid_info		5298255	0					
ANR	5298317	Identifier	status		5298255	1					
ANR	5298318	Identifier	R_DBG_PROC_SLEEP		5298255	1					
ANR	5298319	BreakStatement	break ;	535:3:14030:14035	5298255	5	True				
ANR	5298320	Label	case 'T' :	536:2:14039:14047	5298255	6	True				
ANR	5298321	Label	case 't' :	537:2:14051:14059	5298255	7	True				
ANR	5298322	ExpressionStatement	pid_info -> status = R_DBG_PROC_STOP	538:3:14064:14098	5298255	8	True				
ANR	5298323	AssignmentExpression	pid_info -> status = R_DBG_PROC_STOP		5298255	0		=			
ANR	5298324	PtrMemberAccess	pid_info -> status		5298255	0					
ANR	5298325	Identifier	pid_info		5298255	0					
ANR	5298326	Identifier	status		5298255	1					
ANR	5298327	Identifier	R_DBG_PROC_STOP		5298255	1					
ANR	5298328	BreakStatement	break ;	539:3:14103:14108	5298255	9	True				
ANR	5298329	Label	case 'Z' :	540:2:14112:14120	5298255	10	True				
ANR	5298330	ExpressionStatement	pid_info -> status = R_DBG_PROC_ZOMBIE	541:3:14125:14161	5298255	11	True				
ANR	5298331	AssignmentExpression	pid_info -> status = R_DBG_PROC_ZOMBIE		5298255	0		=			
ANR	5298332	PtrMemberAccess	pid_info -> status		5298255	0					
ANR	5298333	Identifier	pid_info		5298255	0					
ANR	5298334	Identifier	status		5298255	1					
ANR	5298335	Identifier	R_DBG_PROC_ZOMBIE		5298255	1					
ANR	5298336	BreakStatement	break ;	542:3:14166:14171	5298255	12	True				
ANR	5298337	Label	case 'X' :	543:2:14175:14183	5298255	13	True				
ANR	5298338	ExpressionStatement	pid_info -> status = R_DBG_PROC_DEAD	544:3:14188:14222	5298255	14	True				
ANR	5298339	AssignmentExpression	pid_info -> status = R_DBG_PROC_DEAD		5298255	0		=			
ANR	5298340	PtrMemberAccess	pid_info -> status		5298255	0					
ANR	5298341	Identifier	pid_info		5298255	0					
ANR	5298342	Identifier	status		5298255	1					
ANR	5298343	Identifier	R_DBG_PROC_DEAD		5298255	1					
ANR	5298344	BreakStatement	break ;	545:3:14227:14232	5298255	15	True				
ANR	5298345	Label	default :	546:2:14236:14243	5298255	16	True				
ANR	5298346	Identifier	default		5298255	0					
ANR	5298347	ExpressionStatement	pid_info -> status = R_DBG_PROC_SLEEP	547:3:14248:14283	5298255	17	True				
ANR	5298348	AssignmentExpression	pid_info -> status = R_DBG_PROC_SLEEP		5298255	0		=			
ANR	5298349	PtrMemberAccess	pid_info -> status		5298255	0					
ANR	5298350	Identifier	pid_info		5298255	0					
ANR	5298351	Identifier	status		5298255	1					
ANR	5298352	Identifier	R_DBG_PROC_SLEEP		5298255	1					
ANR	5298353	BreakStatement	break ;	548:3:14288:14293	5298255	18	True				
ANR	5298354	ExpressionStatement	"ptr = strstr ( info , ""Uid:"" )"	551:1:14303:14330	5298255	4	True				
ANR	5298355	AssignmentExpression	"ptr = strstr ( info , ""Uid:"" )"		5298255	0		=			
ANR	5298356	Identifier	ptr		5298255	0					
ANR	5298357	CallExpression	"strstr ( info , ""Uid:"" )"		5298255	1					
ANR	5298358	Callee	strstr		5298255	0					
ANR	5298359	Identifier	strstr		5298255	0					
ANR	5298360	ArgumentList	info		5298255	1					
ANR	5298361	Argument	info		5298255	0					
ANR	5298362	Identifier	info		5298255	0					
ANR	5298363	Argument	"""Uid:"""		5298255	1					
ANR	5298364	PrimaryExpression	"""Uid:"""		5298255	0					
ANR	5298365	IfStatement	if ( ptr )		5298255	5					
ANR	5298366	Condition	ptr	552:5:14337:14339	5298255	0	True				
ANR	5298367	Identifier	ptr		5298255	0					
ANR	5298368	CompoundStatement		31:10:581:581	5298255	1					
ANR	5298369	ExpressionStatement	pid_info -> uid = atoi ( ptr + 5 )	553:2:14346:14376	5298255	0	True				
ANR	5298370	AssignmentExpression	pid_info -> uid = atoi ( ptr + 5 )		5298255	0		=			
ANR	5298371	PtrMemberAccess	pid_info -> uid		5298255	0					
ANR	5298372	Identifier	pid_info		5298255	0					
ANR	5298373	Identifier	uid		5298255	1					
ANR	5298374	CallExpression	atoi ( ptr + 5 )		5298255	1					
ANR	5298375	Callee	atoi		5298255	0					
ANR	5298376	Identifier	atoi		5298255	0					
ANR	5298377	ArgumentList	ptr + 5		5298255	1					
ANR	5298378	Argument	ptr + 5		5298255	0					
ANR	5298379	AdditiveExpression	ptr + 5		5298255	0		+			
ANR	5298380	Identifier	ptr		5298255	0					
ANR	5298381	PrimaryExpression	5		5298255	1					
ANR	5298382	ExpressionStatement	"ptr = strstr ( info , ""Gid:"" )"	555:1:14382:14409	5298255	6	True				
ANR	5298383	AssignmentExpression	"ptr = strstr ( info , ""Gid:"" )"		5298255	0		=			
ANR	5298384	Identifier	ptr		5298255	0					
ANR	5298385	CallExpression	"strstr ( info , ""Gid:"" )"		5298255	1					
ANR	5298386	Callee	strstr		5298255	0					
ANR	5298387	Identifier	strstr		5298255	0					
ANR	5298388	ArgumentList	info		5298255	1					
ANR	5298389	Argument	info		5298255	0					
ANR	5298390	Identifier	info		5298255	0					
ANR	5298391	Argument	"""Gid:"""		5298255	1					
ANR	5298392	PrimaryExpression	"""Gid:"""		5298255	0					
ANR	5298393	IfStatement	if ( ptr )		5298255	7					
ANR	5298394	Condition	ptr	556:5:14416:14418	5298255	0	True				
ANR	5298395	Identifier	ptr		5298255	0					
ANR	5298396	CompoundStatement		35:10:660:660	5298255	1					
ANR	5298397	ExpressionStatement	pid_info -> gid = atoi ( ptr + 5 )	557:2:14425:14455	5298255	0	True				
ANR	5298398	AssignmentExpression	pid_info -> gid = atoi ( ptr + 5 )		5298255	0		=			
ANR	5298399	PtrMemberAccess	pid_info -> gid		5298255	0					
ANR	5298400	Identifier	pid_info		5298255	0					
ANR	5298401	Identifier	gid		5298255	1					
ANR	5298402	CallExpression	atoi ( ptr + 5 )		5298255	1					
ANR	5298403	Callee	atoi		5298255	0					
ANR	5298404	Identifier	atoi		5298255	0					
ANR	5298405	ArgumentList	ptr + 5		5298255	1					
ANR	5298406	Argument	ptr + 5		5298255	0					
ANR	5298407	AdditiveExpression	ptr + 5		5298255	0		+			
ANR	5298408	Identifier	ptr		5298255	0					
ANR	5298409	PrimaryExpression	5		5298255	1					
ANR	5298410	ExpressionStatement	pid_info -> pid = tid	559:1:14461:14480	5298255	8	True				
ANR	5298411	AssignmentExpression	pid_info -> pid = tid		5298255	0		=			
ANR	5298412	PtrMemberAccess	pid_info -> pid		5298255	0					
ANR	5298413	Identifier	pid_info		5298255	0					
ANR	5298414	Identifier	pid		5298255	1					
ANR	5298415	Identifier	tid		5298255	1					
ANR	5298416	ExpressionStatement	pid_info -> path = path ? strdup ( path ) : NULL	560:1:14483:14527	5298255	9	True				
ANR	5298417	AssignmentExpression	pid_info -> path = path ? strdup ( path ) : NULL		5298255	0		=			
ANR	5298418	PtrMemberAccess	pid_info -> path		5298255	0					
ANR	5298419	Identifier	pid_info		5298255	0					
ANR	5298420	Identifier	path		5298255	1					
ANR	5298421	ConditionalExpression	path ? strdup ( path ) : NULL		5298255	1					
ANR	5298422	Condition	path		5298255	0					
ANR	5298423	Identifier	path		5298255	0					
ANR	5298424	CallExpression	strdup ( path )		5298255	1					
ANR	5298425	Callee	strdup		5298255	0					
ANR	5298426	Identifier	strdup		5298255	0					
ANR	5298427	ArgumentList	path		5298255	1					
ANR	5298428	Argument	path		5298255	0					
ANR	5298429	Identifier	path		5298255	0					
ANR	5298430	Identifier	NULL		5298255	2					
ANR	5298431	ExpressionStatement	pid_info -> runnable = true	561:1:14530:14555	5298255	10	True				
ANR	5298432	AssignmentExpression	pid_info -> runnable = true		5298255	0		=			
ANR	5298433	PtrMemberAccess	pid_info -> runnable		5298255	0					
ANR	5298434	Identifier	pid_info		5298255	0					
ANR	5298435	Identifier	runnable		5298255	1					
ANR	5298436	Identifier	true		5298255	1					
ANR	5298437	ExpressionStatement	pid_info -> pc = 0	562:1:14558:14574	5298255	11	True				
ANR	5298438	AssignmentExpression	pid_info -> pc = 0		5298255	0		=			
ANR	5298439	PtrMemberAccess	pid_info -> pc		5298255	0					
ANR	5298440	Identifier	pid_info		5298255	0					
ANR	5298441	Identifier	pc		5298255	1					
ANR	5298442	PrimaryExpression	0		5298255	1					
ANR	5298443	ReturnStatement	return pid_info ;	563:1:14577:14592	5298255	12	True				
ANR	5298444	Identifier	pid_info		5298255	0					
ANR	5298445	ReturnType	RDebugPid *		5298255	1					
ANR	5298446	Identifier	fill_pid_info		5298255	2					
ANR	5298447	ParameterList	"const char * info , const char * path , int tid"		5298255	3					
ANR	5298448	Parameter	const char * info	522:25:13715:13730	5298255	0	True				
ANR	5298449	ParameterType	const char *		5298255	0					
ANR	5298450	Identifier	info		5298255	1					
ANR	5298451	Parameter	const char * path	522:43:13733:13748	5298255	1	True				
ANR	5298452	ParameterType	const char *		5298255	0					
ANR	5298453	Identifier	path		5298255	1					
ANR	5298454	Parameter	int tid	522:61:13751:13757	5298255	2	True				
ANR	5298455	ParameterType	int		5298255	0					
ANR	5298456	Identifier	tid		5298255	1					
ANR	5298457	CFGEntryNode	ENTRY		5298255		True				
ANR	5298458	CFGExitNode	EXIT		5298255		True				
ANR	5298459	Symbol	pid_info -> uid		5298255						
ANR	5298460	Symbol	pid_info -> runnable		5298255						
ANR	5298461	Symbol	* pid_info		5298255						
ANR	5298462	Symbol	pid_info -> pid		5298255						
ANR	5298463	Symbol	RDebugPid		5298255						
ANR	5298464	Symbol	pid_info -> pc		5298255						
ANR	5298465	Symbol	R_DBG_PROC_STOP		5298255						
ANR	5298466	Symbol	tid		5298255						
ANR	5298467	Symbol	* ( ptr + 7 )		5298255						
ANR	5298468	Symbol	pid_info -> gid		5298255						
ANR	5298469	Symbol	path		5298255						
ANR	5298470	Symbol	R_DBG_PROC_DEAD		5298255						
ANR	5298471	Symbol	* ptr		5298255						
ANR	5298472	Symbol	R_DBG_PROC_RUN		5298255						
ANR	5298473	Symbol	R_DBG_PROC_ZOMBIE		5298255						
ANR	5298474	Symbol	info		5298255						
ANR	5298475	Symbol	pid_info		5298255						
ANR	5298476	Symbol	atoi		5298255						
ANR	5298477	Symbol	NULL		5298255						
ANR	5298478	Symbol	pid_info -> status		5298255						
ANR	5298479	Symbol	ptr		5298255						
ANR	5298480	Symbol	R_NEW0		5298255						
ANR	5298481	Symbol	pid_info -> path		5298255						
ANR	5298482	Symbol	strstr		5298255						
ANR	5298483	Symbol	true		5298255						
ANR	5298484	Symbol	R_DBG_PROC_SLEEP		5298255						
ANR	5298485	Symbol	strdup		5298255						
ANR	5298486	Function	linux_thread_list	566:0:14597:16942							
ANR	5298487	FunctionDef	"linux_thread_list (int pid , RList * list)"		5298486	0					
ANR	5298488	CompoundStatement		566:47:14644:16942	5298486	0					
ANR	5298489	IdentifierDeclStatement	"int i , thid = 0 ;"	567:1:14647:14662	5298486	0	True				
ANR	5298490	IdentifierDecl	i		5298486	0					
ANR	5298491	IdentifierDeclType	int		5298486	0					
ANR	5298492	Identifier	i		5298486	1					
ANR	5298493	IdentifierDecl	thid = 0		5298486	1					
ANR	5298494	IdentifierDeclType	int		5298486	0					
ANR	5298495	Identifier	thid		5298486	1					
ANR	5298496	AssignmentExpression	thid = 0		5298486	2		=			
ANR	5298497	Identifier	thid		5298486	0					
ANR	5298498	PrimaryExpression	0		5298486	1					
ANR	5298499	IdentifierDeclStatement	"char * ptr , buf [ 1024 ] ;"	568:1:14665:14685	5298486	1	True				
ANR	5298500	IdentifierDecl	* ptr		5298486	0					
ANR	5298501	IdentifierDeclType	char *		5298486	0					
ANR	5298502	Identifier	ptr		5298486	1					
ANR	5298503	IdentifierDecl	buf [ 1024 ]		5298486	1					
ANR	5298504	IdentifierDeclType	char [ 1024 ]		5298486	0					
ANR	5298505	Identifier	buf		5298486	1					
ANR	5298506	PrimaryExpression	1024		5298486	2					
ANR	5298507	IfStatement	if ( ! pid )		5298486	2					
ANR	5298508	Condition	! pid	570:5:14693:14696	5298486	0	True				
ANR	5298509	UnaryOperationExpression	! pid		5298486	0					
ANR	5298510	UnaryOperator	!		5298486	0					
ANR	5298511	Identifier	pid		5298486	1					
ANR	5298512	CompoundStatement		5:11:54:54	5298486	1					
ANR	5298513	ExpressionStatement	r_list_free ( list )	571:2:14703:14721	5298486	0	True				
ANR	5298514	CallExpression	r_list_free ( list )		5298486	0					
ANR	5298515	Callee	r_list_free		5298486	0					
ANR	5298516	Identifier	r_list_free		5298486	0					
ANR	5298517	ArgumentList	list		5298486	1					
ANR	5298518	Argument	list		5298486	0					
ANR	5298519	Identifier	list		5298486	0					
ANR	5298520	ReturnStatement	return NULL ;	572:2:14725:14736	5298486	1	True				
ANR	5298521	Identifier	NULL		5298486	0					
ANR	5298522	ExpressionStatement	list -> free = ( RListFree ) & r_debug_pid_free	575:1:14743:14784	5298486	3	True				
ANR	5298523	AssignmentExpression	list -> free = ( RListFree ) & r_debug_pid_free		5298486	0		=			
ANR	5298524	PtrMemberAccess	list -> free		5298486	0					
ANR	5298525	Identifier	list		5298486	0					
ANR	5298526	Identifier	free		5298486	1					
ANR	5298527	CastExpression	( RListFree ) & r_debug_pid_free		5298486	1					
ANR	5298528	CastTarget	RListFree		5298486	0					
ANR	5298529	UnaryOperationExpression	& r_debug_pid_free		5298486	1					
ANR	5298530	UnaryOperator	&		5298486	0					
ANR	5298531	Identifier	r_debug_pid_free		5298486	1					
ANR	5298532	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""/proc/%d/task"" , pid )"	577:1:14841:14891	5298486	4	True				
ANR	5298533	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""/proc/%d/task"" , pid )"		5298486	0					
ANR	5298534	Callee	snprintf		5298486	0					
ANR	5298535	Identifier	snprintf		5298486	0					
ANR	5298536	ArgumentList	buf		5298486	1					
ANR	5298537	Argument	buf		5298486	0					
ANR	5298538	Identifier	buf		5298486	0					
ANR	5298539	Argument	sizeof ( buf )		5298486	1					
ANR	5298540	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298541	Sizeof	sizeof		5298486	0					
ANR	5298542	SizeofOperand	buf		5298486	1					
ANR	5298543	Argument	"""/proc/%d/task"""		5298486	2					
ANR	5298544	PrimaryExpression	"""/proc/%d/task"""		5298486	0					
ANR	5298545	Argument	pid		5298486	3					
ANR	5298546	Identifier	pid		5298486	0					
ANR	5298547	IfStatement	if ( r_file_is_directory ( buf ) )		5298486	5					
ANR	5298548	Condition	r_file_is_directory ( buf )	578:5:14898:14922	5298486	0	True				
ANR	5298549	CallExpression	r_file_is_directory ( buf )		5298486	0					
ANR	5298550	Callee	r_file_is_directory		5298486	0					
ANR	5298551	Identifier	r_file_is_directory		5298486	0					
ANR	5298552	ArgumentList	buf		5298486	1					
ANR	5298553	Argument	buf		5298486	0					
ANR	5298554	Identifier	buf		5298486	0					
ANR	5298555	CompoundStatement		15:2:305:328	5298486	1					
ANR	5298556	IdentifierDeclStatement	struct dirent * de ;	579:2:14929:14946	5298486	0	True				
ANR	5298557	IdentifierDecl	* de		5298486	0					
ANR	5298558	IdentifierDeclType	struct dirent *		5298486	0					
ANR	5298559	Identifier	de		5298486	1					
ANR	5298560	IdentifierDeclStatement	DIR * dh = opendir ( buf ) ;	580:2:14950:14973	5298486	1	True				
ANR	5298561	IdentifierDecl	* dh = opendir ( buf )		5298486	0					
ANR	5298562	IdentifierDeclType	DIR *		5298486	0					
ANR	5298563	Identifier	dh		5298486	1					
ANR	5298564	AssignmentExpression	* dh = opendir ( buf )		5298486	2		=			
ANR	5298565	Identifier	dh		5298486	0					
ANR	5298566	CallExpression	opendir ( buf )		5298486	1					
ANR	5298567	Callee	opendir		5298486	0					
ANR	5298568	Identifier	opendir		5298486	0					
ANR	5298569	ArgumentList	buf		5298486	1					
ANR	5298570	Argument	buf		5298486	0					
ANR	5298571	Identifier	buf		5298486	0					
ANR	5298572	WhileStatement	while ( ( de = readdir ( dh ) ) )		5298486	2					
ANR	5298573	Condition	de = readdir ( dh )	581:9:14984:15002	5298486	0	True				
ANR	5298574	AssignmentExpression	de = readdir ( dh )		5298486	0		=			
ANR	5298575	Identifier	de		5298486	0					
ANR	5298576	CallExpression	readdir ( dh )		5298486	1					
ANR	5298577	Callee	readdir		5298486	0					
ANR	5298578	Identifier	readdir		5298486	0					
ANR	5298579	ArgumentList	dh		5298486	1					
ANR	5298580	Argument	dh		5298486	0					
ANR	5298581	Identifier	dh		5298486	0					
ANR	5298582	CompoundStatement		44:3:1134:1153	5298486	1					
ANR	5298583	IfStatement	"if ( ! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" ) )"		5298486	0					
ANR	5298584	Condition	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"	582:7:15014:15068	5298486	0	True				
ANR	5298585	OrExpression	"! strcmp ( de -> d_name , ""."" ) || ! strcmp ( de -> d_name , "".."" )"		5298486	0		||			
ANR	5298586	UnaryOperationExpression	"! strcmp ( de -> d_name , ""."" )"		5298486	0					
ANR	5298587	UnaryOperator	!		5298486	0					
ANR	5298588	CallExpression	"strcmp ( de -> d_name , ""."" )"		5298486	1					
ANR	5298589	Callee	strcmp		5298486	0					
ANR	5298590	Identifier	strcmp		5298486	0					
ANR	5298591	ArgumentList	de -> d_name		5298486	1					
ANR	5298592	Argument	de -> d_name		5298486	0					
ANR	5298593	PtrMemberAccess	de -> d_name		5298486	0					
ANR	5298594	Identifier	de		5298486	0					
ANR	5298595	Identifier	d_name		5298486	1					
ANR	5298596	Argument	"""."""		5298486	1					
ANR	5298597	PrimaryExpression	"""."""		5298486	0					
ANR	5298598	UnaryOperationExpression	"! strcmp ( de -> d_name , "".."" )"		5298486	1					
ANR	5298599	UnaryOperator	!		5298486	0					
ANR	5298600	CallExpression	"strcmp ( de -> d_name , "".."" )"		5298486	1					
ANR	5298601	Callee	strcmp		5298486	0					
ANR	5298602	Identifier	strcmp		5298486	0					
ANR	5298603	ArgumentList	de -> d_name		5298486	1					
ANR	5298604	Argument	de -> d_name		5298486	0					
ANR	5298605	PtrMemberAccess	de -> d_name		5298486	0					
ANR	5298606	Identifier	de		5298486	0					
ANR	5298607	Identifier	d_name		5298486	1					
ANR	5298608	Argument	""".."""		5298486	1					
ANR	5298609	PrimaryExpression	""".."""		5298486	0					
ANR	5298610	CompoundStatement		17:64:426:426	5298486	1					
ANR	5298611	ContinueStatement	continue ;	583:4:15077:15085	5298486	0	True				
ANR	5298612	IdentifierDeclStatement	int tid = atoi ( de -> d_name ) ;	585:3:15095:15122	5298486	1	True				
ANR	5298613	IdentifierDecl	tid = atoi ( de -> d_name )		5298486	0					
ANR	5298614	IdentifierDeclType	int		5298486	0					
ANR	5298615	Identifier	tid		5298486	1					
ANR	5298616	AssignmentExpression	tid = atoi ( de -> d_name )		5298486	2		=			
ANR	5298617	Identifier	tid		5298486	0					
ANR	5298618	CallExpression	atoi ( de -> d_name )		5298486	1					
ANR	5298619	Callee	atoi		5298486	0					
ANR	5298620	Identifier	atoi		5298486	0					
ANR	5298621	ArgumentList	de -> d_name		5298486	1					
ANR	5298622	Argument	de -> d_name		5298486	0					
ANR	5298623	PtrMemberAccess	de -> d_name		5298486	0					
ANR	5298624	Identifier	de		5298486	0					
ANR	5298625	Identifier	d_name		5298486	1					
ANR	5298626	IdentifierDeclStatement	char info [ 1024 ] ;	586:3:15127:15142	5298486	2	True				
ANR	5298627	IdentifierDecl	info [ 1024 ]		5298486	0					
ANR	5298628	IdentifierDeclType	char [ 1024 ]		5298486	0					
ANR	5298629	Identifier	info		5298486	1					
ANR	5298630	PrimaryExpression	1024		5298486	2					
ANR	5298631	IdentifierDeclStatement	int uid = 0 ;	587:3:15147:15158	5298486	3	True				
ANR	5298632	IdentifierDecl	uid = 0		5298486	0					
ANR	5298633	IdentifierDeclType	int		5298486	0					
ANR	5298634	Identifier	uid		5298486	1					
ANR	5298635	AssignmentExpression	uid = 0		5298486	2		=			
ANR	5298636	Identifier	uid		5298486	0					
ANR	5298637	PrimaryExpression	0		5298486	1					
ANR	5298638	IfStatement	"if ( ! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) ) )"		5298486	4					
ANR	5298639	Condition	"! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"	588:7:15167:15220	5298486	0	True				
ANR	5298640	UnaryOperationExpression	"! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"		5298486	0					
ANR	5298641	UnaryOperator	!		5298486	0					
ANR	5298642	CallExpression	"procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"		5298486	1					
ANR	5298643	Callee	procfs_pid_slurp		5298486	0					
ANR	5298644	Identifier	procfs_pid_slurp		5298486	0					
ANR	5298645	ArgumentList	tid		5298486	1					
ANR	5298646	Argument	tid		5298486	0					
ANR	5298647	Identifier	tid		5298486	0					
ANR	5298648	Argument	"""status"""		5298486	1					
ANR	5298649	PrimaryExpression	"""status"""		5298486	0					
ANR	5298650	Argument	info		5298486	2					
ANR	5298651	Identifier	info		5298486	0					
ANR	5298652	Argument	sizeof ( info )		5298486	3					
ANR	5298653	SizeofExpression	sizeof ( info )		5298486	0					
ANR	5298654	Sizeof	sizeof		5298486	0					
ANR	5298655	SizeofOperand	info		5298486	1					
ANR	5298656	CompoundStatement		23:63:578:578	5298486	1					
ANR	5298657	ExpressionStatement	"ptr = strstr ( info , ""Uid:"" )"	589:4:15229:15256	5298486	0	True				
ANR	5298658	AssignmentExpression	"ptr = strstr ( info , ""Uid:"" )"		5298486	0		=			
ANR	5298659	Identifier	ptr		5298486	0					
ANR	5298660	CallExpression	"strstr ( info , ""Uid:"" )"		5298486	1					
ANR	5298661	Callee	strstr		5298486	0					
ANR	5298662	Identifier	strstr		5298486	0					
ANR	5298663	ArgumentList	info		5298486	1					
ANR	5298664	Argument	info		5298486	0					
ANR	5298665	Identifier	info		5298486	0					
ANR	5298666	Argument	"""Uid:"""		5298486	1					
ANR	5298667	PrimaryExpression	"""Uid:"""		5298486	0					
ANR	5298668	IfStatement	if ( ptr )		5298486	1					
ANR	5298669	Condition	ptr	590:8:15266:15268	5298486	0	True				
ANR	5298670	Identifier	ptr		5298486	0					
ANR	5298671	CompoundStatement		25:13:626:626	5298486	1					
ANR	5298672	ExpressionStatement	uid = atoi ( ptr + 4 )	591:5:15278:15298	5298486	0	True				
ANR	5298673	AssignmentExpression	uid = atoi ( ptr + 4 )		5298486	0		=			
ANR	5298674	Identifier	uid		5298486	0					
ANR	5298675	CallExpression	atoi ( ptr + 4 )		5298486	1					
ANR	5298676	Callee	atoi		5298486	0					
ANR	5298677	Identifier	atoi		5298486	0					
ANR	5298678	ArgumentList	ptr + 4		5298486	1					
ANR	5298679	Argument	ptr + 4		5298486	0					
ANR	5298680	AdditiveExpression	ptr + 4		5298486	0		+			
ANR	5298681	Identifier	ptr		5298486	0					
ANR	5298682	PrimaryExpression	4		5298486	1					
ANR	5298683	ExpressionStatement	"ptr = strstr ( info , ""Tgid:"" )"	593:4:15310:15338	5298486	2	True				
ANR	5298684	AssignmentExpression	"ptr = strstr ( info , ""Tgid:"" )"		5298486	0		=			
ANR	5298685	Identifier	ptr		5298486	0					
ANR	5298686	CallExpression	"strstr ( info , ""Tgid:"" )"		5298486	1					
ANR	5298687	Callee	strstr		5298486	0					
ANR	5298688	Identifier	strstr		5298486	0					
ANR	5298689	ArgumentList	info		5298486	1					
ANR	5298690	Argument	info		5298486	0					
ANR	5298691	Identifier	info		5298486	0					
ANR	5298692	Argument	"""Tgid:"""		5298486	1					
ANR	5298693	PrimaryExpression	"""Tgid:"""		5298486	0					
ANR	5298694	IfStatement	if ( ptr )		5298486	3					
ANR	5298695	Condition	ptr	594:8:15348:15350	5298486	0	True				
ANR	5298696	Identifier	ptr		5298486	0					
ANR	5298697	CompoundStatement		30:5:715:740	5298486	1					
ANR	5298698	IdentifierDeclStatement	int tgid = atoi ( ptr + 5 ) ;	595:5:15360:15385	5298486	0	True				
ANR	5298699	IdentifierDecl	tgid = atoi ( ptr + 5 )		5298486	0					
ANR	5298700	IdentifierDeclType	int		5298486	0					
ANR	5298701	Identifier	tgid		5298486	1					
ANR	5298702	AssignmentExpression	tgid = atoi ( ptr + 5 )		5298486	2		=			
ANR	5298703	Identifier	tgid		5298486	0					
ANR	5298704	CallExpression	atoi ( ptr + 5 )		5298486	1					
ANR	5298705	Callee	atoi		5298486	0					
ANR	5298706	Identifier	atoi		5298486	0					
ANR	5298707	ArgumentList	ptr + 5		5298486	1					
ANR	5298708	Argument	ptr + 5		5298486	0					
ANR	5298709	AdditiveExpression	ptr + 5		5298486	0		+			
ANR	5298710	Identifier	ptr		5298486	0					
ANR	5298711	PrimaryExpression	5		5298486	1					
ANR	5298712	IfStatement	if ( tgid != pid )		5298486	1					
ANR	5298713	Condition	tgid != pid	596:9:15396:15406	5298486	0	True				
ANR	5298714	EqualityExpression	tgid != pid		5298486	0		!=			
ANR	5298715	Identifier	tgid		5298486	0					
ANR	5298716	Identifier	pid		5298486	1					
ANR	5298717	CompoundStatement		31:22:764:764	5298486	1					
ANR	5298718	ContinueStatement	continue ;	598:6:15494:15502	5298486	0	True				
ANR	5298719	IfStatement	"if ( procfs_pid_slurp ( tid , ""comm"" , buf , sizeof ( buf ) ) == - 1 )"		5298486	5					
ANR	5298720	Condition	"procfs_pid_slurp ( tid , ""comm"" , buf , sizeof ( buf ) ) == - 1"	603:7:15558:15612	5298486	0	True				
ANR	5298721	EqualityExpression	"procfs_pid_slurp ( tid , ""comm"" , buf , sizeof ( buf ) ) == - 1"		5298486	0		==			
ANR	5298722	CallExpression	"procfs_pid_slurp ( tid , ""comm"" , buf , sizeof ( buf ) )"		5298486	0					
ANR	5298723	Callee	procfs_pid_slurp		5298486	0					
ANR	5298724	Identifier	procfs_pid_slurp		5298486	0					
ANR	5298725	ArgumentList	tid		5298486	1					
ANR	5298726	Argument	tid		5298486	0					
ANR	5298727	Identifier	tid		5298486	0					
ANR	5298728	Argument	"""comm"""		5298486	1					
ANR	5298729	PrimaryExpression	"""comm"""		5298486	0					
ANR	5298730	Argument	buf		5298486	2					
ANR	5298731	Identifier	buf		5298486	0					
ANR	5298732	Argument	sizeof ( buf )		5298486	3					
ANR	5298733	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298734	Sizeof	sizeof		5298486	0					
ANR	5298735	SizeofOperand	buf		5298486	1					
ANR	5298736	UnaryOperationExpression	- 1		5298486	1					
ANR	5298737	UnaryOperator	-		5298486	0					
ANR	5298738	PrimaryExpression	1		5298486	1					
ANR	5298739	CompoundStatement		38:64:970:970	5298486	1					
ANR	5298740	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""thread_%d %s"" , thid ++ , pid == tid ? ""(current)"" : NULL )"	605:4:15652:15737	5298486	0	True				
ANR	5298741	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""thread_%d %s"" , thid ++ , pid == tid ? ""(current)"" : NULL )"		5298486	0					
ANR	5298742	Callee	snprintf		5298486	0					
ANR	5298743	Identifier	snprintf		5298486	0					
ANR	5298744	ArgumentList	buf		5298486	1					
ANR	5298745	Argument	buf		5298486	0					
ANR	5298746	Identifier	buf		5298486	0					
ANR	5298747	Argument	sizeof ( buf )		5298486	1					
ANR	5298748	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298749	Sizeof	sizeof		5298486	0					
ANR	5298750	SizeofOperand	buf		5298486	1					
ANR	5298751	Argument	"""thread_%d %s"""		5298486	2					
ANR	5298752	PrimaryExpression	"""thread_%d %s"""		5298486	0					
ANR	5298753	Argument	thid ++		5298486	3					
ANR	5298754	PostIncDecOperationExpression	thid ++		5298486	0					
ANR	5298755	Identifier	thid		5298486	0					
ANR	5298756	IncDec	++		5298486	1					
ANR	5298757	Argument	"pid == tid ? ""(current)"" : NULL"		5298486	4					
ANR	5298758	ConditionalExpression	"pid == tid ? ""(current)"" : NULL"		5298486	0					
ANR	5298759	Condition	pid == tid		5298486	0					
ANR	5298760	EqualityExpression	pid == tid		5298486	0		==			
ANR	5298761	Identifier	pid		5298486	0					
ANR	5298762	Identifier	tid		5298486	1					
ANR	5298763	PrimaryExpression	"""(current)"""		5298486	1					
ANR	5298764	Identifier	NULL		5298486	2					
ANR	5298765	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = 0	606:4:15743:15768	5298486	1	True				
ANR	5298766	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = 0		5298486	0		=			
ANR	5298767	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		5298486	0					
ANR	5298768	Identifier	buf		5298486	0					
ANR	5298769	AdditiveExpression	sizeof ( buf ) - 1		5298486	1		-			
ANR	5298770	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298771	Sizeof	sizeof		5298486	0					
ANR	5298772	SizeofOperand	buf		5298486	1					
ANR	5298773	PrimaryExpression	1		5298486	1					
ANR	5298774	PrimaryExpression	0		5298486	1					
ANR	5298775	IdentifierDeclStatement	RDebugPid * pid_info ;	609:3:15779:15798	5298486	6	True				
ANR	5298776	IdentifierDecl	* pid_info		5298486	0					
ANR	5298777	IdentifierDeclType	RDebugPid *		5298486	0					
ANR	5298778	Identifier	pid_info		5298486	1					
ANR	5298779	IfStatement	"if ( ! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) ) )"		5298486	7					
ANR	5298780	Condition	"! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"	610:7:15807:15860	5298486	0	True				
ANR	5298781	UnaryOperationExpression	"! procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"		5298486	0					
ANR	5298782	UnaryOperator	!		5298486	0					
ANR	5298783	CallExpression	"procfs_pid_slurp ( tid , ""status"" , info , sizeof ( info ) )"		5298486	1					
ANR	5298784	Callee	procfs_pid_slurp		5298486	0					
ANR	5298785	Identifier	procfs_pid_slurp		5298486	0					
ANR	5298786	ArgumentList	tid		5298486	1					
ANR	5298787	Argument	tid		5298486	0					
ANR	5298788	Identifier	tid		5298486	0					
ANR	5298789	Argument	"""status"""		5298486	1					
ANR	5298790	PrimaryExpression	"""status"""		5298486	0					
ANR	5298791	Argument	info		5298486	2					
ANR	5298792	Identifier	info		5298486	0					
ANR	5298793	Argument	sizeof ( info )		5298486	3					
ANR	5298794	SizeofExpression	sizeof ( info )		5298486	0					
ANR	5298795	Sizeof	sizeof		5298486	0					
ANR	5298796	SizeofOperand	info		5298486	1					
ANR	5298797	CompoundStatement		45:63:1218:1218	5298486	1					
ANR	5298798	ExpressionStatement	"pid_info = fill_pid_info ( info , buf , tid )"	612:4:15921:15962	5298486	0	True				
ANR	5298799	AssignmentExpression	"pid_info = fill_pid_info ( info , buf , tid )"		5298486	0		=			
ANR	5298800	Identifier	pid_info		5298486	0					
ANR	5298801	CallExpression	"fill_pid_info ( info , buf , tid )"		5298486	1					
ANR	5298802	Callee	fill_pid_info		5298486	0					
ANR	5298803	Identifier	fill_pid_info		5298486	0					
ANR	5298804	ArgumentList	info		5298486	1					
ANR	5298805	Argument	info		5298486	0					
ANR	5298806	Identifier	info		5298486	0					
ANR	5298807	Argument	buf		5298486	1					
ANR	5298808	Identifier	buf		5298486	0					
ANR	5298809	Argument	tid		5298486	2					
ANR	5298810	Identifier	tid		5298486	0					
ANR	5298811	ElseStatement	else		5298486	0					
ANR	5298812	CompoundStatement		48:10:1329:1329	5298486	0					
ANR	5298813	ExpressionStatement	"pid_info = r_debug_pid_new ( buf , tid , uid , 's' , 0 )"	614:4:15980:16030	5298486	0	True				
ANR	5298814	AssignmentExpression	"pid_info = r_debug_pid_new ( buf , tid , uid , 's' , 0 )"		5298486	0		=			
ANR	5298815	Identifier	pid_info		5298486	0					
ANR	5298816	CallExpression	"r_debug_pid_new ( buf , tid , uid , 's' , 0 )"		5298486	1					
ANR	5298817	Callee	r_debug_pid_new		5298486	0					
ANR	5298818	Identifier	r_debug_pid_new		5298486	0					
ANR	5298819	ArgumentList	buf		5298486	1					
ANR	5298820	Argument	buf		5298486	0					
ANR	5298821	Identifier	buf		5298486	0					
ANR	5298822	Argument	tid		5298486	1					
ANR	5298823	Identifier	tid		5298486	0					
ANR	5298824	Argument	uid		5298486	2					
ANR	5298825	Identifier	uid		5298486	0					
ANR	5298826	Argument	's'		5298486	3					
ANR	5298827	PrimaryExpression	's'		5298486	0					
ANR	5298828	Argument	0		5298486	4					
ANR	5298829	PrimaryExpression	0		5298486	0					
ANR	5298830	ExpressionStatement	"r_list_append ( list , pid_info )"	616:3:16040:16070	5298486	8	True				
ANR	5298831	CallExpression	"r_list_append ( list , pid_info )"		5298486	0					
ANR	5298832	Callee	r_list_append		5298486	0					
ANR	5298833	Identifier	r_list_append		5298486	0					
ANR	5298834	ArgumentList	list		5298486	1					
ANR	5298835	Argument	list		5298486	0					
ANR	5298836	Identifier	list		5298486	0					
ANR	5298837	Argument	pid_info		5298486	1					
ANR	5298838	Identifier	pid_info		5298486	0					
ANR	5298839	ExpressionStatement	closedir ( dh )	618:2:16078:16091	5298486	3	True				
ANR	5298840	CallExpression	closedir ( dh )		5298486	0					
ANR	5298841	Callee	closedir		5298486	0					
ANR	5298842	Identifier	closedir		5298486	0					
ANR	5298843	ArgumentList	dh		5298486	1					
ANR	5298844	Argument	dh		5298486	0					
ANR	5298845	Identifier	dh		5298486	0					
ANR	5298846	ElseStatement	else		5298486	0					
ANR	5298847	CompoundStatement		54:8:1456:1456	5298486	0					
ANR	5298848	Statement	undef	621:1:16182:16186	5298486	0	True				
ANR	5298849	Statement	MAXPID	621:7:16188:16193	5298486	1	True				
ANR	5298850	Statement	define	622:1:16196:16201	5298486	2	True				
ANR	5298851	Statement	MAXPID	622:8:16203:16208	5298486	3	True				
ANR	5298852	Statement	99999	622:15:16210:16214	5298486	4	True				
ANR	5298853	ForStatement	for ( i = pid ; i < MAXPID ; i ++ )		5298486	5					
ANR	5298854	ForInit	i = pid ;	624:7:16263:16270	5298486	0	True				
ANR	5298855	AssignmentExpression	i = pid		5298486	0		=			
ANR	5298856	Identifier	i		5298486	0					
ANR	5298857	Identifier	pid		5298486	1					
ANR	5298858	Condition	i < MAXPID	624:16:16272:16281	5298486	1	True				
ANR	5298859	RelationalExpression	i < MAXPID		5298486	0		<			
ANR	5298860	Identifier	i		5298486	0					
ANR	5298861	Identifier	MAXPID		5298486	1					
ANR	5298862	PostIncDecOperationExpression	i ++	624:28:16284:16286	5298486	2	True				
ANR	5298863	Identifier	i		5298486	0					
ANR	5298864	IncDec	++		5298486	1					
ANR	5298865	CompoundStatement		63:3:1740:1751	5298486	3					
ANR	5298866	IfStatement	"if ( procfs_pid_slurp ( i , ""status"" , buf , sizeof ( buf ) ) == - 1 )"		5298486	0					
ANR	5298867	Condition	"procfs_pid_slurp ( i , ""status"" , buf , sizeof ( buf ) ) == - 1"	625:7:16305:16358	5298486	0	True				
ANR	5298868	EqualityExpression	"procfs_pid_slurp ( i , ""status"" , buf , sizeof ( buf ) ) == - 1"		5298486	0		==			
ANR	5298869	CallExpression	"procfs_pid_slurp ( i , ""status"" , buf , sizeof ( buf ) )"		5298486	0					
ANR	5298870	Callee	procfs_pid_slurp		5298486	0					
ANR	5298871	Identifier	procfs_pid_slurp		5298486	0					
ANR	5298872	ArgumentList	i		5298486	1					
ANR	5298873	Argument	i		5298486	0					
ANR	5298874	Identifier	i		5298486	0					
ANR	5298875	Argument	"""status"""		5298486	1					
ANR	5298876	PrimaryExpression	"""status"""		5298486	0					
ANR	5298877	Argument	buf		5298486	2					
ANR	5298878	Identifier	buf		5298486	0					
ANR	5298879	Argument	sizeof ( buf )		5298486	3					
ANR	5298880	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298881	Sizeof	sizeof		5298486	0					
ANR	5298882	SizeofOperand	buf		5298486	1					
ANR	5298883	UnaryOperationExpression	- 1		5298486	1					
ANR	5298884	UnaryOperator	-		5298486	0					
ANR	5298885	PrimaryExpression	1		5298486	1					
ANR	5298886	CompoundStatement		60:63:1716:1716	5298486	1					
ANR	5298887	ContinueStatement	continue ;	626:4:16367:16375	5298486	0	True				
ANR	5298888	IdentifierDeclStatement	int uid = 0 ;	628:3:16385:16396	5298486	1	True				
ANR	5298889	IdentifierDecl	uid = 0		5298486	0					
ANR	5298890	IdentifierDeclType	int		5298486	0					
ANR	5298891	Identifier	uid		5298486	1					
ANR	5298892	AssignmentExpression	uid = 0		5298486	2		=			
ANR	5298893	Identifier	uid		5298486	0					
ANR	5298894	PrimaryExpression	0		5298486	1					
ANR	5298895	ExpressionStatement	"ptr = strstr ( buf , ""Uid:"" )"	630:3:16437:16463	5298486	2	True				
ANR	5298896	AssignmentExpression	"ptr = strstr ( buf , ""Uid:"" )"		5298486	0		=			
ANR	5298897	Identifier	ptr		5298486	0					
ANR	5298898	CallExpression	"strstr ( buf , ""Uid:"" )"		5298486	1					
ANR	5298899	Callee	strstr		5298486	0					
ANR	5298900	Identifier	strstr		5298486	0					
ANR	5298901	ArgumentList	buf		5298486	1					
ANR	5298902	Argument	buf		5298486	0					
ANR	5298903	Identifier	buf		5298486	0					
ANR	5298904	Argument	"""Uid:"""		5298486	1					
ANR	5298905	PrimaryExpression	"""Uid:"""		5298486	0					
ANR	5298906	IfStatement	if ( ptr )		5298486	3					
ANR	5298907	Condition	ptr	631:7:16472:16474	5298486	0	True				
ANR	5298908	Identifier	ptr		5298486	0					
ANR	5298909	CompoundStatement		66:12:1832:1832	5298486	1					
ANR	5298910	ExpressionStatement	uid = atoi ( ptr + 4 )	632:4:16483:16503	5298486	0	True				
ANR	5298911	AssignmentExpression	uid = atoi ( ptr + 4 )		5298486	0		=			
ANR	5298912	Identifier	uid		5298486	0					
ANR	5298913	CallExpression	atoi ( ptr + 4 )		5298486	1					
ANR	5298914	Callee	atoi		5298486	0					
ANR	5298915	Identifier	atoi		5298486	0					
ANR	5298916	ArgumentList	ptr + 4		5298486	1					
ANR	5298917	Argument	ptr + 4		5298486	0					
ANR	5298918	AdditiveExpression	ptr + 4		5298486	0		+			
ANR	5298919	Identifier	ptr		5298486	0					
ANR	5298920	PrimaryExpression	4		5298486	1					
ANR	5298921	ExpressionStatement	"ptr = strstr ( buf , ""Tgid:"" )"	634:3:16513:16540	5298486	4	True				
ANR	5298922	AssignmentExpression	"ptr = strstr ( buf , ""Tgid:"" )"		5298486	0		=			
ANR	5298923	Identifier	ptr		5298486	0					
ANR	5298924	CallExpression	"strstr ( buf , ""Tgid:"" )"		5298486	1					
ANR	5298925	Callee	strstr		5298486	0					
ANR	5298926	Identifier	strstr		5298486	0					
ANR	5298927	ArgumentList	buf		5298486	1					
ANR	5298928	Argument	buf		5298486	0					
ANR	5298929	Identifier	buf		5298486	0					
ANR	5298930	Argument	"""Tgid:"""		5298486	1					
ANR	5298931	PrimaryExpression	"""Tgid:"""		5298486	0					
ANR	5298932	IfStatement	if ( ptr )		5298486	5					
ANR	5298933	Condition	ptr	635:7:16549:16551	5298486	0	True				
ANR	5298934	Identifier	ptr		5298486	0					
ANR	5298935	CompoundStatement		71:4:1915:1940	5298486	1					
ANR	5298936	IdentifierDeclStatement	int tgid = atoi ( ptr + 5 ) ;	636:4:16560:16585	5298486	0	True				
ANR	5298937	IdentifierDecl	tgid = atoi ( ptr + 5 )		5298486	0					
ANR	5298938	IdentifierDeclType	int		5298486	0					
ANR	5298939	Identifier	tgid		5298486	1					
ANR	5298940	AssignmentExpression	tgid = atoi ( ptr + 5 )		5298486	2		=			
ANR	5298941	Identifier	tgid		5298486	0					
ANR	5298942	CallExpression	atoi ( ptr + 5 )		5298486	1					
ANR	5298943	Callee	atoi		5298486	0					
ANR	5298944	Identifier	atoi		5298486	0					
ANR	5298945	ArgumentList	ptr + 5		5298486	1					
ANR	5298946	Argument	ptr + 5		5298486	0					
ANR	5298947	AdditiveExpression	ptr + 5		5298486	0		+			
ANR	5298948	Identifier	ptr		5298486	0					
ANR	5298949	PrimaryExpression	5		5298486	1					
ANR	5298950	IfStatement	if ( tgid != pid )		5298486	1					
ANR	5298951	Condition	tgid != pid	639:8:16657:16667	5298486	0	True				
ANR	5298952	EqualityExpression	tgid != pid		5298486	0		!=			
ANR	5298953	Identifier	tgid		5298486	0					
ANR	5298954	Identifier	pid		5298486	1					
ANR	5298955	CompoundStatement		74:21:2025:2025	5298486	1					
ANR	5298956	ContinueStatement	continue ;	640:5:16677:16685	5298486	0	True				
ANR	5298957	IfStatement	"if ( procfs_pid_slurp ( i , ""comm"" , buf , sizeof ( buf ) ) == - 1 )"		5298486	2					
ANR	5298958	Condition	"procfs_pid_slurp ( i , ""comm"" , buf , sizeof ( buf ) ) == - 1"	643:8:16702:16753	5298486	0	True				
ANR	5298959	EqualityExpression	"procfs_pid_slurp ( i , ""comm"" , buf , sizeof ( buf ) ) == - 1"		5298486	0		==			
ANR	5298960	CallExpression	"procfs_pid_slurp ( i , ""comm"" , buf , sizeof ( buf ) )"		5298486	0					
ANR	5298961	Callee	procfs_pid_slurp		5298486	0					
ANR	5298962	Identifier	procfs_pid_slurp		5298486	0					
ANR	5298963	ArgumentList	i		5298486	1					
ANR	5298964	Argument	i		5298486	0					
ANR	5298965	Identifier	i		5298486	0					
ANR	5298966	Argument	"""comm"""		5298486	1					
ANR	5298967	PrimaryExpression	"""comm"""		5298486	0					
ANR	5298968	Argument	buf		5298486	2					
ANR	5298969	Identifier	buf		5298486	0					
ANR	5298970	Argument	sizeof ( buf )		5298486	3					
ANR	5298971	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298972	Sizeof	sizeof		5298486	0					
ANR	5298973	SizeofOperand	buf		5298486	1					
ANR	5298974	UnaryOperationExpression	- 1		5298486	1					
ANR	5298975	UnaryOperator	-		5298486	0					
ANR	5298976	PrimaryExpression	1		5298486	1					
ANR	5298977	CompoundStatement		78:62:2111:2111	5298486	1					
ANR	5298978	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""thread_%d"" , thid ++ )"	645:5:16795:16843	5298486	0	True				
ANR	5298979	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""thread_%d"" , thid ++ )"		5298486	0					
ANR	5298980	Callee	snprintf		5298486	0					
ANR	5298981	Identifier	snprintf		5298486	0					
ANR	5298982	ArgumentList	buf		5298486	1					
ANR	5298983	Argument	buf		5298486	0					
ANR	5298984	Identifier	buf		5298486	0					
ANR	5298985	Argument	sizeof ( buf )		5298486	1					
ANR	5298986	SizeofExpression	sizeof ( buf )		5298486	0					
ANR	5298987	Sizeof	sizeof		5298486	0					
ANR	5298988	SizeofOperand	buf		5298486	1					
ANR	5298989	Argument	"""thread_%d"""		5298486	2					
ANR	5298990	PrimaryExpression	"""thread_%d"""		5298486	0					
ANR	5298991	Argument	thid ++		5298486	3					
ANR	5298992	PostIncDecOperationExpression	thid ++		5298486	0					
ANR	5298993	Identifier	thid		5298486	0					
ANR	5298994	IncDec	++		5298486	1					
ANR	5298995	ExpressionStatement	"r_list_append ( list , r_debug_pid_new ( buf , i , uid , 's' , 0 ) )"	647:4:16855:16914	5298486	3	True				
ANR	5298996	CallExpression	"r_list_append ( list , r_debug_pid_new ( buf , i , uid , 's' , 0 ) )"		5298486	0					
ANR	5298997	Callee	r_list_append		5298486	0					
ANR	5298998	Identifier	r_list_append		5298486	0					
ANR	5298999	ArgumentList	list		5298486	1					
ANR	5299000	Argument	list		5298486	0					
ANR	5299001	Identifier	list		5298486	0					
ANR	5299002	Argument	"r_debug_pid_new ( buf , i , uid , 's' , 0 )"		5298486	1					
ANR	5299003	CallExpression	"r_debug_pid_new ( buf , i , uid , 's' , 0 )"		5298486	0					
ANR	5299004	Callee	r_debug_pid_new		5298486	0					
ANR	5299005	Identifier	r_debug_pid_new		5298486	0					
ANR	5299006	ArgumentList	buf		5298486	1					
ANR	5299007	Argument	buf		5298486	0					
ANR	5299008	Identifier	buf		5298486	0					
ANR	5299009	Argument	i		5298486	1					
ANR	5299010	Identifier	i		5298486	0					
ANR	5299011	Argument	uid		5298486	2					
ANR	5299012	Identifier	uid		5298486	0					
ANR	5299013	Argument	's'		5298486	3					
ANR	5299014	PrimaryExpression	's'		5298486	0					
ANR	5299015	Argument	0		5298486	4					
ANR	5299016	PrimaryExpression	0		5298486	0					
ANR	5299017	ReturnStatement	return list ;	651:1:16929:16940	5298486	6	True				
ANR	5299018	Identifier	list		5298486	0					
ANR	5299019	ReturnType	RList *		5298486	1					
ANR	5299020	Identifier	linux_thread_list		5298486	2					
ANR	5299021	ParameterList	"int pid , RList * list"		5298486	3					
ANR	5299022	Parameter	int pid	566:25:14622:14628	5298486	0	True				
ANR	5299023	ParameterType	int		5298486	0					
ANR	5299024	Identifier	pid		5298486	1					
ANR	5299025	Parameter	RList * list	566:34:14631:14641	5298486	1	True				
ANR	5299026	ParameterType	RList *		5298486	0					
ANR	5299027	Identifier	list		5298486	1					
ANR	5299028	CFGEntryNode	ENTRY		5298486		True				
ANR	5299029	CFGExitNode	EXIT		5298486		True				
ANR	5299030	Symbol	r_file_is_directory		5298486						
ANR	5299031	Symbol	de		5298486						
ANR	5299032	Symbol	de -> d_name		5298486						
ANR	5299033	Symbol	dh		5298486						
ANR	5299034	Symbol	MAXPID		5298486						
ANR	5299035	Symbol	pid		5298486						
ANR	5299036	Symbol	tid		5298486						
ANR	5299037	Symbol	uid		5298486						
ANR	5299038	Symbol	readdir		5298486						
ANR	5299039	Symbol	info		5298486						
ANR	5299040	Symbol	strcmp		5298486						
ANR	5299041	Symbol	atoi		5298486						
ANR	5299042	Symbol	pid_info		5298486						
ANR	5299043	Symbol	& r_debug_pid_free		5298486						
ANR	5299044	Symbol	r_debug_pid_new		5298486						
ANR	5299045	Symbol	* buf		5298486						
ANR	5299046	Symbol	NULL		5298486						
ANR	5299047	Symbol	* de		5298486						
ANR	5299048	Symbol	list -> free		5298486						
ANR	5299049	Symbol	i		5298486						
ANR	5299050	Symbol	procfs_pid_slurp		5298486						
ANR	5299051	Symbol	list		5298486						
ANR	5299052	Symbol	fill_pid_info		5298486						
ANR	5299053	Symbol	ptr		5298486						
ANR	5299054	Symbol	buf		5298486						
ANR	5299055	Symbol	* list		5298486						
ANR	5299056	Symbol	strstr		5298486						
ANR	5299057	Symbol	opendir		5298486						
ANR	5299058	Symbol	tgid		5298486						
ANR	5299059	Symbol	thid		5298486						
ANR	5299060	Function	print_fpu	673:0:17837:20773							
ANR	5299061	FunctionDef	"print_fpu (void * f , int r)"		5299060	0					
ANR	5299062	CompoundStatement		673:31:17868:20773	5299060	0					
ANR	5299063	IdentifierDeclStatement	int i ;	675:1:17898:17903	5299060	0	True				
ANR	5299064	IdentifierDecl	i		5299060	0					
ANR	5299065	IdentifierDeclType	int		5299060	0					
ANR	5299066	Identifier	i		5299060	1					
ANR	5299067	IdentifierDeclStatement	struct user_fpregs_struct fpregs = * ( struct user_fpregs_struct * ) f ;	676:1:17906:17971	5299060	1	True				
ANR	5299068	IdentifierDecl	fpregs = * ( struct user_fpregs_struct * ) f		5299060	0					
ANR	5299069	IdentifierDeclType	struct user_fpregs_struct		5299060	0					
ANR	5299070	Identifier	fpregs		5299060	1					
ANR	5299071	AssignmentExpression	fpregs = * ( struct user_fpregs_struct * ) f		5299060	2		=			
ANR	5299072	Identifier	fpregs		5299060	0					
ANR	5299073	UnaryOperationExpression	* ( struct user_fpregs_struct * ) f		5299060	1					
ANR	5299074	UnaryOperator	*		5299060	0					
ANR	5299075	CastExpression	( struct user_fpregs_struct * ) f		5299060	1					
ANR	5299076	CastTarget	struct user_fpregs_struct *		5299060	0					
ANR	5299077	Identifier	f		5299060	1					
ANR	5299078	ExpressionStatement	PRINT_FPU ( fpregs )	679:1:18005:18023	5299060	2	True				
ANR	5299079	CallExpression	PRINT_FPU ( fpregs )		5299060	0					
ANR	5299080	Callee	PRINT_FPU		5299060	0					
ANR	5299081	Identifier	PRINT_FPU		5299060	0					
ANR	5299082	ArgumentList	fpregs		5299060	1					
ANR	5299083	Argument	fpregs		5299060	0					
ANR	5299084	Identifier	fpregs		5299060	0					
ANR	5299085	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		5299060	3					
ANR	5299086	ForInit	i = 0 ;	680:6:18031:18036	5299060	0	True				
ANR	5299087	AssignmentExpression	i = 0		5299060	0		=			
ANR	5299088	Identifier	i		5299060	0					
ANR	5299089	PrimaryExpression	0		5299060	1					
ANR	5299090	Condition	i < 8	680:12:18037:18041	5299060	1	True				
ANR	5299091	RelationalExpression	i < 8		5299060	0		<			
ANR	5299092	Identifier	i		5299060	0					
ANR	5299093	PrimaryExpression	8		5299060	1					
ANR	5299094	PostIncDecOperationExpression	i ++	680:19:18044:18046	5299060	2	True				
ANR	5299095	Identifier	i		5299060	0					
ANR	5299096	IncDec	++		5299060	1					
ANR	5299097	CompoundStatement		11:2:264:300	5299060	3					
ANR	5299098	IdentifierDeclStatement	ut64 * b = ( ut64 * ) & fpregs . st_space [ i * 4 ] ;	681:2:18053:18092	5299060	0	True				
ANR	5299099	IdentifierDecl	* b = ( ut64 * ) & fpregs . st_space [ i * 4 ]		5299060	0					
ANR	5299100	IdentifierDeclType	ut64 *		5299060	0					
ANR	5299101	Identifier	b		5299060	1					
ANR	5299102	AssignmentExpression	* b = ( ut64 * ) & fpregs . st_space [ i * 4 ]		5299060	2		=			
ANR	5299103	Identifier	b		5299060	0					
ANR	5299104	CastExpression	( ut64 * ) & fpregs . st_space [ i * 4 ]		5299060	1					
ANR	5299105	CastTarget	ut64 *		5299060	0					
ANR	5299106	UnaryOperationExpression	& fpregs . st_space [ i * 4 ]		5299060	1					
ANR	5299107	UnaryOperator	&		5299060	0					
ANR	5299108	ArrayIndexing	fpregs . st_space [ i * 4 ]		5299060	1					
ANR	5299109	MemberAccess	fpregs . st_space		5299060	0					
ANR	5299110	Identifier	fpregs		5299060	0					
ANR	5299111	Identifier	st_space		5299060	1					
ANR	5299112	MultiplicativeExpression	i * 4		5299060	1		*			
ANR	5299113	Identifier	i		5299060	0					
ANR	5299114	PrimaryExpression	4		5299060	1					
ANR	5299115	IdentifierDeclStatement	ut32 * c = ( ut32 * ) & fpregs . st_space ;	682:2:18096:18129	5299060	1	True				
ANR	5299116	IdentifierDecl	* c = ( ut32 * ) & fpregs . st_space		5299060	0					
ANR	5299117	IdentifierDeclType	ut32 *		5299060	0					
ANR	5299118	Identifier	c		5299060	1					
ANR	5299119	AssignmentExpression	* c = ( ut32 * ) & fpregs . st_space		5299060	2		=			
ANR	5299120	Identifier	c		5299060	0					
ANR	5299121	CastExpression	( ut32 * ) & fpregs . st_space		5299060	1					
ANR	5299122	CastTarget	ut32 *		5299060	0					
ANR	5299123	UnaryOperationExpression	& fpregs . st_space		5299060	1					
ANR	5299124	UnaryOperator	&		5299060	0					
ANR	5299125	MemberAccess	fpregs . st_space		5299060	1					
ANR	5299126	Identifier	fpregs		5299060	0					
ANR	5299127	Identifier	st_space		5299060	1					
ANR	5299128	IdentifierDeclStatement	float * f = ( float * ) & fpregs . st_space ;	683:2:18133:18169	5299060	2	True				
ANR	5299129	IdentifierDecl	* f = ( float * ) & fpregs . st_space		5299060	0					
ANR	5299130	IdentifierDeclType	float *		5299060	0					
ANR	5299131	Identifier	f		5299060	1					
ANR	5299132	AssignmentExpression	* f = ( float * ) & fpregs . st_space		5299060	2		=			
ANR	5299133	Identifier	f		5299060	0					
ANR	5299134	CastExpression	( float * ) & fpregs . st_space		5299060	1					
ANR	5299135	CastTarget	float *		5299060	0					
ANR	5299136	UnaryOperationExpression	& fpregs . st_space		5299060	1					
ANR	5299137	UnaryOperator	&		5299060	0					
ANR	5299138	MemberAccess	fpregs . st_space		5299060	1					
ANR	5299139	Identifier	fpregs		5299060	0					
ANR	5299140	Identifier	st_space		5299060	1					
ANR	5299141	ExpressionStatement	c = c + ( i * 4 )	684:2:18173:18188	5299060	3	True				
ANR	5299142	AssignmentExpression	c = c + ( i * 4 )		5299060	0		=			
ANR	5299143	Identifier	c		5299060	0					
ANR	5299144	AdditiveExpression	c + ( i * 4 )		5299060	1		+			
ANR	5299145	Identifier	c		5299060	0					
ANR	5299146	MultiplicativeExpression	i * 4		5299060	1		*			
ANR	5299147	Identifier	i		5299060	0					
ANR	5299148	PrimaryExpression	4		5299060	1					
ANR	5299149	ExpressionStatement	f = f + ( i * 4 )	685:2:18192:18207	5299060	4	True				
ANR	5299150	AssignmentExpression	f = f + ( i * 4 )		5299060	0		=			
ANR	5299151	Identifier	f		5299060	0					
ANR	5299152	AdditiveExpression	f + ( i * 4 )		5299060	1		+			
ANR	5299153	Identifier	f		5299060	0					
ANR	5299154	MultiplicativeExpression	i * 4		5299060	1		*			
ANR	5299155	Identifier	i		5299060	0					
ANR	5299156	PrimaryExpression	4		5299060	1					
ANR	5299157	Statement	eprintf	686:2:18211:18217	5299060	5	True				
ANR	5299158	Statement	(	686:10:18219:18219	5299060	6	True				
ANR	5299159	Statement	"""st%d =%0.3lg (0x%016"""	686:11:18220:18241	5299060	7	True				
ANR	5299160	Statement	PFMT64x	686:33:18242:18248	5299060	8	True				
ANR	5299161	Statement	""") | %0.3f (%08x)  | \\\\n\\t\\t\\t%0.3f (%08x) \\n"""	686:40:18249:18290	5299060	9	True				
ANR	5299162	Statement	","	687:19:18291:18291	5299060	10	True				
ANR	5299163	Statement	i	687:21:18293:18293	5299060	11	True				
ANR	5299164	Statement	","	687:22:18294:18294	5299060	12	True				
ANR	5299165	Statement	(	688:3:18299:18299	5299060	13	True				
ANR	5299166	Statement	double	688:4:18300:18305	5299060	14	True				
ANR	5299167	Statement	)	688:10:18306:18306	5299060	15	True				
ANR	5299168	Statement	*	688:11:18307:18307	5299060	16	True				
ANR	5299169	Statement	(	688:12:18308:18308	5299060	17	True				
ANR	5299170	Statement	(	688:13:18309:18309	5299060	18	True				
ANR	5299171	Statement	double	688:14:18310:18315	5299060	19	True				
ANR	5299172	Statement	*	688:20:18316:18316	5299060	20	True				
ANR	5299173	Statement	)	688:21:18317:18317	5299060	21	True				
ANR	5299174	Statement	&	688:22:18318:18318	5299060	22	True				
ANR	5299175	Statement	fpregs	688:23:18319:18324	5299060	23	True				
ANR	5299176	Statement	.	688:29:18325:18325	5299060	24	True				
ANR	5299177	Statement	st_space	688:30:18326:18333	5299060	25	True				
ANR	5299178	Statement	[	688:38:18334:18334	5299060	26	True				
ANR	5299179	Statement	i	688:39:18335:18335	5299060	27	True				
ANR	5299180	Statement	*	688:40:18336:18336	5299060	28	True				
ANR	5299181	Statement	4	688:41:18337:18337	5299060	29	True				
ANR	5299182	Statement	]	688:42:18338:18338	5299060	30	True				
ANR	5299183	Statement	)	688:43:18339:18339	5299060	31	True				
ANR	5299184	Statement	","	688:44:18340:18340	5299060	32	True				
ANR	5299185	Statement	*	688:46:18342:18342	5299060	33	True				
ANR	5299186	Statement	b	688:47:18343:18343	5299060	34	True				
ANR	5299187	Statement	","	688:48:18344:18344	5299060	35	True				
ANR	5299188	Statement	(	688:50:18346:18346	5299060	36	True				
ANR	5299189	Statement	float	688:51:18347:18351	5299060	37	True				
ANR	5299190	Statement	)	688:56:18352:18352	5299060	38	True				
ANR	5299191	Statement	f	688:58:18354:18354	5299060	39	True				
ANR	5299192	Statement	[	688:59:18355:18355	5299060	40	True				
ANR	5299193	Statement	0	688:60:18356:18356	5299060	41	True				
ANR	5299194	Statement	]	688:61:18357:18357	5299060	42	True				
ANR	5299195	Statement	","	688:62:18358:18358	5299060	43	True				
ANR	5299196	Statement	c	689:3:18363:18363	5299060	44	True				
ANR	5299197	Statement	[	689:4:18364:18364	5299060	45	True				
ANR	5299198	Statement	0	689:5:18365:18365	5299060	46	True				
ANR	5299199	Statement	]	689:6:18366:18366	5299060	47	True				
ANR	5299200	Statement	","	689:7:18367:18367	5299060	48	True				
ANR	5299201	Statement	(	689:9:18369:18369	5299060	49	True				
ANR	5299202	Statement	float	689:10:18370:18374	5299060	50	True				
ANR	5299203	Statement	)	689:15:18375:18375	5299060	51	True				
ANR	5299204	Statement	f	689:17:18377:18377	5299060	52	True				
ANR	5299205	Statement	[	689:18:18378:18378	5299060	53	True				
ANR	5299206	Statement	1	689:19:18379:18379	5299060	54	True				
ANR	5299207	Statement	]	689:20:18380:18380	5299060	55	True				
ANR	5299208	Statement	","	689:21:18381:18381	5299060	56	True				
ANR	5299209	Statement	c	689:23:18383:18383	5299060	57	True				
ANR	5299210	Statement	[	689:24:18384:18384	5299060	58	True				
ANR	5299211	Statement	1	689:25:18385:18385	5299060	59	True				
ANR	5299212	Statement	]	689:26:18386:18386	5299060	60	True				
ANR	5299213	Statement	)	689:27:18387:18387	5299060	61	True				
ANR	5299214	ExpressionStatement		689:28:18388:18388	5299060	62	True				
ANR	5299215	ReturnType	void		5299060	1					
ANR	5299216	Identifier	print_fpu		5299060	2					
ANR	5299217	ParameterList	"void * f , int r"		5299060	3					
ANR	5299218	Parameter	void * f	673:16:17853:17859	5299060	0	True				
ANR	5299219	ParameterType	void *		5299060	0					
ANR	5299220	Identifier	f		5299060	1					
ANR	5299221	Parameter	int r	673:25:17862:17866	5299060	1	True				
ANR	5299222	ParameterType	int		5299060	0					
ANR	5299223	Identifier	r		5299060	1					
ANR	5299224	CFGEntryNode	ENTRY		5299060		True				
ANR	5299225	CFGExitNode	EXIT		5299060		True				
ANR	5299226	Symbol	* f		5299060						
ANR	5299227	Symbol	fpregs . st_space		5299060						
ANR	5299228	Symbol	& fpregs . st_space		5299060						
ANR	5299229	Symbol	& fpregs		5299060						
ANR	5299230	Symbol	r		5299060						
ANR	5299231	Symbol	b		5299060						
ANR	5299232	Symbol	c		5299060						
ANR	5299233	Symbol	fpregs		5299060						
ANR	5299234	Symbol	f		5299060						
ANR	5299235	Symbol	* ( struct user_fpregs_struct * ) f		5299060						
ANR	5299236	Symbol	i		5299060						
ANR	5299237	Function	linux_reg_read	765:0:20776:24210							
ANR	5299238	FunctionDef	"linux_reg_read (RDebug * dbg , int type , ut8 * buf , int size)"		5299237	0					
ANR	5299239	CompoundStatement		765:63:20839:24210	5299237	0					
ANR	5299240	IdentifierDeclStatement	bool showfpu = false ;	766:1:20842:20862	5299237	0	True				
ANR	5299241	IdentifierDecl	showfpu = false		5299237	0					
ANR	5299242	IdentifierDeclType	bool		5299237	0					
ANR	5299243	Identifier	showfpu		5299237	1					
ANR	5299244	AssignmentExpression	showfpu = false		5299237	2		=			
ANR	5299245	Identifier	false		5299237	0					
ANR	5299246	Identifier	false		5299237	1					
ANR	5299247	IdentifierDeclStatement	int pid = dbg -> pid ;	767:1:20865:20883	5299237	1	True				
ANR	5299248	IdentifierDecl	pid = dbg -> pid		5299237	0					
ANR	5299249	IdentifierDeclType	int		5299237	0					
ANR	5299250	Identifier	pid		5299237	1					
ANR	5299251	AssignmentExpression	pid = dbg -> pid		5299237	2		=			
ANR	5299252	Identifier	pid		5299237	0					
ANR	5299253	PtrMemberAccess	dbg -> pid		5299237	1					
ANR	5299254	Identifier	dbg		5299237	0					
ANR	5299255	Identifier	pid		5299237	1					
ANR	5299256	IdentifierDeclStatement	int ret ;	768:1:20886:20893	5299237	2	True				
ANR	5299257	IdentifierDecl	ret		5299237	0					
ANR	5299258	IdentifierDeclType	int		5299237	0					
ANR	5299259	Identifier	ret		5299237	1					
ANR	5299260	IfStatement	if ( type < - 1 )		5299237	3					
ANR	5299261	Condition	type < - 1	769:5:20900:20908	5299237	0	True				
ANR	5299262	RelationalExpression	type < - 1		5299237	0		<			
ANR	5299263	Identifier	type		5299237	0					
ANR	5299264	UnaryOperationExpression	- 1		5299237	1					
ANR	5299265	UnaryOperator	-		5299237	0					
ANR	5299266	PrimaryExpression	1		5299237	1					
ANR	5299267	CompoundStatement		5:16:71:71	5299237	1					
ANR	5299268	ExpressionStatement	showfpu = true	770:2:20915:20929	5299237	0	True				
ANR	5299269	AssignmentExpression	showfpu = true		5299237	0		=			
ANR	5299270	Identifier	showfpu		5299237	0					
ANR	5299271	Identifier	true		5299237	1					
ANR	5299272	ExpressionStatement	type = - type	771:2:20933:20945	5299237	1	True				
ANR	5299273	AssignmentExpression	type = - type		5299237	0		=			
ANR	5299274	Identifier	type		5299237	0					
ANR	5299275	UnaryOperationExpression	- type		5299237	1					
ANR	5299276	UnaryOperator	-		5299237	0					
ANR	5299277	Identifier	type		5299237	1					
ANR	5299278	SwitchStatement	switch ( type )		5299237	4					
ANR	5299279	Condition	type	773:9:20959:20962	5299237	0	True				
ANR	5299280	Identifier	type		5299237	0					
ANR	5299281	CompoundStatement		9:15:125:125	5299237	1					
ANR	5299282	Label	case R_REG_TYPE_DRX :	774:1:20968:20987	5299237	0	True				
ANR	5299283	Identifier	R_REG_TYPE_DRX		5299237	0					
ANR	5299284	ReturnStatement	return false ;	777:2:21031:21043	5299237	1	True				
ANR	5299285	Identifier	false		5299237	0					
ANR	5299286	ReturnStatement	return true ;	801:2:21595:21606	5299237	2	True				
ANR	5299287	Identifier	true		5299237	0					
ANR	5299288	BreakStatement	break ;	802:2:21610:21615	5299237	3	True				
ANR	5299289	Label	case R_REG_TYPE_FPU :	803:1:21618:21637	5299237	4	True				
ANR	5299290	Identifier	R_REG_TYPE_FPU		5299237	0					
ANR	5299291	Label	case R_REG_TYPE_MMX :	804:1:21640:21659	5299237	5	True				
ANR	5299292	Identifier	R_REG_TYPE_MMX		5299237	0					
ANR	5299293	Label	case R_REG_TYPE_XMM :	805:1:21662:21681	5299237	6	True				
ANR	5299294	Identifier	R_REG_TYPE_XMM		5299237	0					
ANR	5299295	ReturnStatement	return false ;	807:2:21701:21713	5299237	7	True				
ANR	5299296	Identifier	false		5299237	0					
ANR	5299297	BreakStatement	break ;	857:2:23151:23156	5299237	8	True				
ANR	5299298	Label	case R_REG_TYPE_SEG :	858:1:23159:23178	5299237	9	True				
ANR	5299299	Identifier	R_REG_TYPE_SEG		5299237	0					
ANR	5299300	Label	case R_REG_TYPE_FLG :	859:1:23181:23200	5299237	10	True				
ANR	5299301	Identifier	R_REG_TYPE_FLG		5299237	0					
ANR	5299302	Label	case R_REG_TYPE_GPR :	860:1:23203:23222	5299237	11	True				
ANR	5299303	Identifier	R_REG_TYPE_GPR		5299237	0					
ANR	5299304	CompoundStatement		98:3:2391:2409	5299237	12					
ANR	5299305	IdentifierDeclStatement	R_DEBUG_REG_T regs ;	862:3:23231:23249	5299237	0	True				
ANR	5299306	IdentifierDecl	regs		5299237	0					
ANR	5299307	IdentifierDeclType	R_DEBUG_REG_T		5299237	0					
ANR	5299308	Identifier	regs		5299237	1					
ANR	5299309	ExpressionStatement	"memset ( & regs , 0 , sizeof ( regs ) )"	863:3:23254:23286	5299237	1	True				
ANR	5299310	CallExpression	"memset ( & regs , 0 , sizeof ( regs ) )"		5299237	0					
ANR	5299311	Callee	memset		5299237	0					
ANR	5299312	Identifier	memset		5299237	0					
ANR	5299313	ArgumentList	& regs		5299237	1					
ANR	5299314	Argument	& regs		5299237	0					
ANR	5299315	UnaryOperationExpression	& regs		5299237	0					
ANR	5299316	UnaryOperator	&		5299237	0					
ANR	5299317	Identifier	regs		5299237	1					
ANR	5299318	Argument	0		5299237	1					
ANR	5299319	PrimaryExpression	0		5299237	0					
ANR	5299320	Argument	sizeof ( regs )		5299237	2					
ANR	5299321	SizeofExpression	sizeof ( regs )		5299237	0					
ANR	5299322	Sizeof	sizeof		5299237	0					
ANR	5299323	SizeofOperand	regs		5299237	1					
ANR	5299324	ExpressionStatement	"memset ( buf , 0 , size )"	864:3:23291:23312	5299237	2	True				
ANR	5299325	CallExpression	"memset ( buf , 0 , size )"		5299237	0					
ANR	5299326	Callee	memset		5299237	0					
ANR	5299327	Identifier	memset		5299237	0					
ANR	5299328	ArgumentList	buf		5299237	1					
ANR	5299329	Argument	buf		5299237	0					
ANR	5299330	Identifier	buf		5299237	0					
ANR	5299331	Argument	0		5299237	1					
ANR	5299332	PrimaryExpression	0		5299237	0					
ANR	5299333	Argument	size		5299237	2					
ANR	5299334	Identifier	size		5299237	0					
ANR	5299335	Statement	struct	866:3:23346:23351	5299237	3	True				
ANR	5299336	Statement	iovec	866:10:23353:23357	5299237	4	True				
ANR	5299337	Statement	io	866:16:23359:23360	5299237	5	True				
ANR	5299338	Statement	=	866:19:23362:23362	5299237	6	True				
ANR	5299339	CompoundStatement		102:21:2524:2524	5299237	7					
ANR	5299340	Statement	.	867:4:23370:23370	5299237	0	True				
ANR	5299341	Statement	iov_base	867:5:23371:23378	5299237	1	True				
ANR	5299342	Statement	=	867:14:23380:23380	5299237	2	True				
ANR	5299343	Statement	&	867:16:23382:23382	5299237	3	True				
ANR	5299344	Statement	regs	867:17:23383:23386	5299237	4	True				
ANR	5299345	Statement	","	867:21:23387:23387	5299237	5	True				
ANR	5299346	Statement	.	868:4:23393:23393	5299237	6	True				
ANR	5299347	Statement	iov_len	868:5:23394:23400	5299237	7	True				
ANR	5299348	Statement	=	868:13:23402:23402	5299237	8	True				
ANR	5299349	Statement	sizeof	868:15:23404:23409	5299237	9	True				
ANR	5299350	Statement	(	868:22:23411:23411	5299237	10	True				
ANR	5299351	Statement	regs	868:23:23412:23415	5299237	11	True				
ANR	5299352	Statement	)	868:27:23416:23416	5299237	12	True				
ANR	5299353	ExpressionStatement		869:4:23422:23422	5299237	8	True				
ANR	5299354	ExpressionStatement	"ret = r_debug_ptrace ( dbg , PTRACE_GETREGSET , pid , 1 , & io )"	870:3:23427:23484	5299237	9	True				
ANR	5299355	AssignmentExpression	"ret = r_debug_ptrace ( dbg , PTRACE_GETREGSET , pid , 1 , & io )"		5299237	0		=			
ANR	5299356	Identifier	ret		5299237	0					
ANR	5299357	CallExpression	"r_debug_ptrace ( dbg , PTRACE_GETREGSET , pid , 1 , & io )"		5299237	1					
ANR	5299358	Callee	r_debug_ptrace		5299237	0					
ANR	5299359	Identifier	r_debug_ptrace		5299237	0					
ANR	5299360	ArgumentList	dbg		5299237	1					
ANR	5299361	Argument	dbg		5299237	0					
ANR	5299362	Identifier	dbg		5299237	0					
ANR	5299363	Argument	PTRACE_GETREGSET		5299237	1					
ANR	5299364	Identifier	PTRACE_GETREGSET		5299237	0					
ANR	5299365	Argument	pid		5299237	2					
ANR	5299366	Identifier	pid		5299237	0					
ANR	5299367	Argument	1		5299237	3					
ANR	5299368	PrimaryExpression	1		5299237	0					
ANR	5299369	Argument	& io		5299237	4					
ANR	5299370	UnaryOperationExpression	& io		5299237	0					
ANR	5299371	UnaryOperator	&		5299237	0					
ANR	5299372	Identifier	io		5299237	1					
ANR	5299373	IfStatement	if ( ret != 0 )		5299237	10					
ANR	5299374	Condition	ret != 0	872:7:23582:23589	5299237	0	True				
ANR	5299375	EqualityExpression	ret != 0		5299237	0		!=			
ANR	5299376	Identifier	ret		5299237	0					
ANR	5299377	PrimaryExpression	0		5299237	1					
ANR	5299378	CompoundStatement		108:17:2752:2752	5299237	1					
ANR	5299379	ExpressionStatement	"perror ( ""ptrace"" )"	873:4:23598:23614	5299237	0	True				
ANR	5299380	CallExpression	"perror ( ""ptrace"" )"		5299237	0					
ANR	5299381	Callee	perror		5299237	0					
ANR	5299382	Identifier	perror		5299237	0					
ANR	5299383	ArgumentList	"""ptrace"""		5299237	1					
ANR	5299384	Argument	"""ptrace"""		5299237	0					
ANR	5299385	PrimaryExpression	"""ptrace"""		5299237	0					
ANR	5299386	IfStatement	if ( ret != 0 )		5299237	11					
ANR	5299387	Condition	ret != 0	887:7:24067:24074	5299237	0	True				
ANR	5299388	EqualityExpression	ret != 0		5299237	0		!=			
ANR	5299389	Identifier	ret		5299237	0					
ANR	5299390	PrimaryExpression	0		5299237	1					
ANR	5299391	CompoundStatement		123:17:3237:3237	5299237	1					
ANR	5299392	ReturnStatement	return false ;	888:4:24083:24095	5299237	0	True				
ANR	5299393	Identifier	false		5299237	0					
ANR	5299394	ExpressionStatement	"memcpy ( buf , & regs , R_MIN ( sizeof ( regs ) , size ) )"	890:3:24105:24153	5299237	12	True				
ANR	5299395	CallExpression	"memcpy ( buf , & regs , R_MIN ( sizeof ( regs ) , size ) )"		5299237	0					
ANR	5299396	Callee	memcpy		5299237	0					
ANR	5299397	Identifier	memcpy		5299237	0					
ANR	5299398	ArgumentList	buf		5299237	1					
ANR	5299399	Argument	buf		5299237	0					
ANR	5299400	Identifier	buf		5299237	0					
ANR	5299401	Argument	& regs		5299237	1					
ANR	5299402	UnaryOperationExpression	& regs		5299237	0					
ANR	5299403	UnaryOperator	&		5299237	0					
ANR	5299404	Identifier	regs		5299237	1					
ANR	5299405	Argument	"R_MIN ( sizeof ( regs ) , size )"		5299237	2					
ANR	5299406	CallExpression	"R_MIN ( sizeof ( regs ) , size )"		5299237	0					
ANR	5299407	Callee	R_MIN		5299237	0					
ANR	5299408	Identifier	R_MIN		5299237	0					
ANR	5299409	ArgumentList	sizeof ( regs )		5299237	1					
ANR	5299410	Argument	sizeof ( regs )		5299237	0					
ANR	5299411	SizeofExpression	sizeof ( regs )		5299237	0					
ANR	5299412	Sizeof	sizeof		5299237	0					
ANR	5299413	SizeofOperand	regs		5299237	1					
ANR	5299414	Argument	size		5299237	1					
ANR	5299415	Identifier	size		5299237	0					
ANR	5299416	ReturnStatement	return sizeof ( regs ) ;	891:3:24158:24178	5299237	13	True				
ANR	5299417	SizeofExpression	sizeof ( regs )		5299237	0					
ANR	5299418	Sizeof	sizeof		5299237	0					
ANR	5299419	SizeofOperand	regs		5299237	1					
ANR	5299420	BreakStatement	break ;	893:2:24186:24191	5299237	13	True				
ANR	5299421	ReturnStatement	return true ;	895:1:24197:24208	5299237	5	True				
ANR	5299422	Identifier	true		5299237	0					
ANR	5299423	ReturnType	int		5299237	1					
ANR	5299424	Identifier	linux_reg_read		5299237	2					
ANR	5299425	ParameterList	"RDebug * dbg , int type , ut8 * buf , int size"		5299237	3					
ANR	5299426	Parameter	RDebug * dbg	765:20:20796:20806	5299237	0	True				
ANR	5299427	ParameterType	RDebug *		5299237	0					
ANR	5299428	Identifier	dbg		5299237	1					
ANR	5299429	Parameter	int type	765:33:20809:20816	5299237	1	True				
ANR	5299430	ParameterType	int		5299237	0					
ANR	5299431	Identifier	type		5299237	1					
ANR	5299432	Parameter	ut8 * buf	765:43:20819:20826	5299237	2	True				
ANR	5299433	ParameterType	ut8 *		5299237	0					
ANR	5299434	Identifier	buf		5299237	1					
ANR	5299435	Parameter	int size	765:53:20829:20836	5299237	3	True				
ANR	5299436	ParameterType	int		5299237	0					
ANR	5299437	Identifier	size		5299237	1					
ANR	5299438	CFGEntryNode	ENTRY		5299237		True				
ANR	5299439	CFGExitNode	EXIT		5299237		True				
ANR	5299440	Symbol	ret		5299237						
ANR	5299441	Symbol	PTRACE_GETREGSET		5299237						
ANR	5299442	Symbol	dbg		5299237						
ANR	5299443	Symbol	false		5299237						
ANR	5299444	Symbol	r_debug_ptrace		5299237						
ANR	5299445	Symbol	& regs		5299237						
ANR	5299446	Symbol	pid		5299237						
ANR	5299447	Symbol	regs		5299237						
ANR	5299448	Symbol	R_MIN		5299237						
ANR	5299449	Symbol	type		5299237						
ANR	5299450	Symbol	* dbg		5299237						
ANR	5299451	Symbol	& io		5299237						
ANR	5299452	Symbol	buf		5299237						
ANR	5299453	Symbol	size		5299237						
ANR	5299454	Symbol	dbg -> pid		5299237						
ANR	5299455	Symbol	showfpu		5299237						
ANR	5299456	Symbol	true		5299237						
ANR	5299457	Function	linux_reg_write	898:0:24213:25388							
ANR	5299458	FunctionDef	"linux_reg_write (RDebug * dbg , int type , const ut8 * buf , int size)"		5299457	0					
ANR	5299459	CompoundStatement		898:70:24283:25388	5299457	0					
ANR	5299460	IfStatement	if ( type == R_REG_TYPE_DRX )		5299457	0					
ANR	5299461	Condition	type == R_REG_TYPE_DRX	899:5:24290:24311	5299457	0	True				
ANR	5299462	EqualityExpression	type == R_REG_TYPE_DRX		5299457	0		==			
ANR	5299463	Identifier	type		5299457	0					
ANR	5299464	Identifier	R_REG_TYPE_DRX		5299457	1					
ANR	5299465	CompoundStatement		5:2:88:110	5299457	1					
ANR	5299466	IdentifierDeclStatement	int i ;	901:2:24363:24368	5299457	0	True				
ANR	5299467	IdentifierDecl	i		5299457	0					
ANR	5299468	IdentifierDeclType	int		5299457	0					
ANR	5299469	Identifier	i		5299457	1					
ANR	5299470	IdentifierDeclStatement	long * val = ( long * ) buf ;	902:2:24372:24394	5299457	1	True				
ANR	5299471	IdentifierDecl	* val = ( long * ) buf		5299457	0					
ANR	5299472	IdentifierDeclType	long *		5299457	0					
ANR	5299473	Identifier	val		5299457	1					
ANR	5299474	AssignmentExpression	* val = ( long * ) buf		5299457	2		=			
ANR	5299475	Identifier	val		5299457	0					
ANR	5299476	CastExpression	( long * ) buf		5299457	1					
ANR	5299477	CastTarget	long *		5299457	0					
ANR	5299478	Identifier	buf		5299457	1					
ANR	5299479	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		5299457	2					
ANR	5299480	ForInit	i = 0 ;	903:7:24403:24408	5299457	0	True				
ANR	5299481	AssignmentExpression	i = 0		5299457	0		=			
ANR	5299482	Identifier	i		5299457	0					
ANR	5299483	PrimaryExpression	0		5299457	1					
ANR	5299484	Condition	i < 8	903:14:24410:24414	5299457	1	True				
ANR	5299485	RelationalExpression	i < 8		5299457	0		<			
ANR	5299486	Identifier	i		5299457	0					
ANR	5299487	PrimaryExpression	8		5299457	1					
ANR	5299488	PostIncDecOperationExpression	i ++	903:21:24417:24419	5299457	2	True				
ANR	5299489	Identifier	i		5299457	0					
ANR	5299490	IncDec	++		5299457	1					
ANR	5299491	CompoundStatement		6:26:138:138	5299457	3					
ANR	5299492	IfStatement	if ( i == 4 || i == 5 )		5299457	0					
ANR	5299493	Condition	i == 4 || i == 5	904:7:24442:24457	5299457	0	True				
ANR	5299494	OrExpression	i == 4 || i == 5		5299457	0		||			
ANR	5299495	EqualityExpression	i == 4		5299457	0		==			
ANR	5299496	Identifier	i		5299457	0					
ANR	5299497	PrimaryExpression	4		5299457	1					
ANR	5299498	EqualityExpression	i == 5		5299457	1		==			
ANR	5299499	Identifier	i		5299457	0					
ANR	5299500	PrimaryExpression	5		5299457	1					
ANR	5299501	CompoundStatement		7:25:176:176	5299457	1					
ANR	5299502	ContinueStatement	continue ;	905:4:24466:24474	5299457	0	True				
ANR	5299503	Statement	if	907:3:24484:24485	5299457	1	True				
ANR	5299504	Statement	(	907:6:24487:24487	5299457	2	True				
ANR	5299505	Statement	r_debug_ptrace	907:7:24488:24501	5299457	3	True				
ANR	5299506	Statement	(	907:22:24503:24503	5299457	4	True				
ANR	5299507	Statement	dbg	907:23:24504:24506	5299457	5	True				
ANR	5299508	Statement	","	907:26:24507:24507	5299457	6	True				
ANR	5299509	Statement	PTRACE_POKEUSER	907:28:24509:24523	5299457	7	True				
ANR	5299510	Statement	","	907:43:24524:24524	5299457	8	True				
ANR	5299511	Statement	dbg	907:45:24526:24528	5299457	9	True				
ANR	5299512	Statement	->	907:48:24529:24530	5299457	10	True				
ANR	5299513	Statement	pid	907:50:24531:24533	5299457	11	True				
ANR	5299514	Statement	","	907:53:24534:24534	5299457	12	True				
ANR	5299515	Statement	(	908:5:24541:24541	5299457	13	True				
ANR	5299516	Statement	void	908:6:24542:24545	5299457	14	True				
ANR	5299517	Statement	*	908:11:24547:24547	5299457	15	True				
ANR	5299518	Statement	)	908:12:24548:24548	5299457	16	True				
ANR	5299519	Statement	r_offsetof	908:13:24549:24558	5299457	17	True				
ANR	5299520	Statement	(	908:24:24560:24560	5299457	18	True				
ANR	5299521	Statement	struct	908:25:24561:24566	5299457	19	True				
ANR	5299522	Statement	user	908:32:24568:24571	5299457	20	True				
ANR	5299523	Statement	","	908:36:24572:24572	5299457	21	True				
ANR	5299524	Statement	u_debugreg	908:38:24574:24583	5299457	22	True				
ANR	5299525	Statement	[	908:48:24584:24584	5299457	23	True				
ANR	5299526	Statement	i	908:49:24585:24585	5299457	24	True				
ANR	5299527	Statement	]	908:50:24586:24586	5299457	25	True				
ANR	5299528	Statement	)	908:51:24587:24587	5299457	26	True				
ANR	5299529	Statement	","	908:52:24588:24588	5299457	27	True				
ANR	5299530	Statement	(	908:54:24590:24590	5299457	28	True				
ANR	5299531	Statement	r_ptrace_data_t	908:55:24591:24605	5299457	29	True				
ANR	5299532	Statement	)	908:70:24606:24606	5299457	30	True				
ANR	5299533	Statement	val	908:71:24607:24609	5299457	31	True				
ANR	5299534	Statement	[	908:74:24610:24610	5299457	32	True				
ANR	5299535	Statement	i	908:75:24611:24611	5299457	33	True				
ANR	5299536	Statement	]	908:76:24612:24612	5299457	34	True				
ANR	5299537	Statement	)	908:77:24613:24613	5299457	35	True				
ANR	5299538	Statement	)	908:78:24614:24614	5299457	36	True				
ANR	5299539	CompoundStatement		11:80:332:332	5299457	37					
ANR	5299540	ExpressionStatement	"eprintf ( ""ptrace error for dr %d\\n"" , i )"	909:4:24622:24661	5299457	0	True				
ANR	5299541	CallExpression	"eprintf ( ""ptrace error for dr %d\\n"" , i )"		5299457	0					
ANR	5299542	Callee	eprintf		5299457	0					
ANR	5299543	Identifier	eprintf		5299457	0					
ANR	5299544	ArgumentList	"""ptrace error for dr %d\\n"""		5299457	1					
ANR	5299545	Argument	"""ptrace error for dr %d\\n"""		5299457	0					
ANR	5299546	PrimaryExpression	"""ptrace error for dr %d\\n"""		5299457	0					
ANR	5299547	Argument	i		5299457	1					
ANR	5299548	Identifier	i		5299457	0					
ANR	5299549	ExpressionStatement	"r_sys_perror ( ""ptrace POKEUSER"" )"	910:4:24667:24699	5299457	1	True				
ANR	5299550	CallExpression	"r_sys_perror ( ""ptrace POKEUSER"" )"		5299457	0					
ANR	5299551	Callee	r_sys_perror		5299457	0					
ANR	5299552	Identifier	r_sys_perror		5299457	0					
ANR	5299553	ArgumentList	"""ptrace POKEUSER"""		5299457	1					
ANR	5299554	Argument	"""ptrace POKEUSER"""		5299457	0					
ANR	5299555	PrimaryExpression	"""ptrace POKEUSER"""		5299457	0					
ANR	5299556	ReturnStatement	return sizeof ( R_DEBUG_REG_T ) ;	913:2:24712:24741	5299457	3	True				
ANR	5299557	SizeofExpression	sizeof ( R_DEBUG_REG_T )		5299457	0					
ANR	5299558	Sizeof	sizeof		5299457	0					
ANR	5299559	SizeofOperand	R_DEBUG_REG_T		5299457	1					
ANR	5299560	IfStatement	if ( type == R_REG_TYPE_GPR )		5299457	1					
ANR	5299561	Condition	type == R_REG_TYPE_GPR	918:5:24780:24801	5299457	0	True				
ANR	5299562	EqualityExpression	type == R_REG_TYPE_GPR		5299457	0		==			
ANR	5299563	Identifier	type		5299457	0					
ANR	5299564	Identifier	R_REG_TYPE_GPR		5299457	1					
ANR	5299565	CompoundStatement		27:2:644:760	5299457	1					
ANR	5299566	Statement	struct	920:2:24837:24842	5299457	0	True				
ANR	5299567	Statement	iovec	920:9:24844:24848	5299457	1	True				
ANR	5299568	Statement	io	920:15:24850:24851	5299457	2	True				
ANR	5299569	Statement	=	920:18:24853:24853	5299457	3	True				
ANR	5299570	CompoundStatement		23:20:571:571	5299457	4					
ANR	5299571	Statement	.	921:3:24860:24860	5299457	0	True				
ANR	5299572	Statement	iov_base	921:4:24861:24868	5299457	1	True				
ANR	5299573	Statement	=	921:13:24870:24870	5299457	2	True				
ANR	5299574	Statement	(	921:15:24872:24872	5299457	3	True				
ANR	5299575	Statement	void	921:16:24873:24876	5299457	4	True				
ANR	5299576	Statement	*	921:20:24877:24877	5299457	5	True				
ANR	5299577	Statement	)	921:21:24878:24878	5299457	6	True				
ANR	5299578	Statement	buf	921:22:24879:24881	5299457	7	True				
ANR	5299579	Statement	","	921:25:24882:24882	5299457	8	True				
ANR	5299580	Statement	.	922:3:24887:24887	5299457	9	True				
ANR	5299581	Statement	iov_len	922:4:24888:24894	5299457	10	True				
ANR	5299582	Statement	=	922:12:24896:24896	5299457	11	True				
ANR	5299583	Statement	sizeof	922:14:24898:24903	5299457	12	True				
ANR	5299584	Statement	(	922:21:24905:24905	5299457	13	True				
ANR	5299585	Statement	R_DEBUG_REG_T	922:22:24906:24918	5299457	14	True				
ANR	5299586	Statement	)	922:35:24919:24919	5299457	15	True				
ANR	5299587	ExpressionStatement		923:3:24924:24924	5299457	5	True				
ANR	5299588	IdentifierDeclStatement	"int ret = r_debug_ptrace ( dbg , PTRACE_SETREGSET , dbg -> pid , ( void * ) ( size_t ) NT_PRSTATUS , ( r_ptrace_data_t ) ( size_t ) & io ) ;"	924:2:24928:25044	5299457	6	True				
ANR	5299589	IdentifierDecl	"ret = r_debug_ptrace ( dbg , PTRACE_SETREGSET , dbg -> pid , ( void * ) ( size_t ) NT_PRSTATUS , ( r_ptrace_data_t ) ( size_t ) & io )"		5299457	0					
ANR	5299590	IdentifierDeclType	int		5299457	0					
ANR	5299591	Identifier	ret		5299457	1					
ANR	5299592	AssignmentExpression	"ret = r_debug_ptrace ( dbg , PTRACE_SETREGSET , dbg -> pid , ( void * ) ( size_t ) NT_PRSTATUS , ( r_ptrace_data_t ) ( size_t ) & io )"		5299457	2		=			
ANR	5299593	Identifier	ret		5299457	0					
ANR	5299594	CallExpression	"r_debug_ptrace ( dbg , PTRACE_SETREGSET , dbg -> pid , ( void * ) ( size_t ) NT_PRSTATUS , ( r_ptrace_data_t ) ( size_t ) & io )"		5299457	1					
ANR	5299595	Callee	r_debug_ptrace		5299457	0					
ANR	5299596	Identifier	r_debug_ptrace		5299457	0					
ANR	5299597	ArgumentList	dbg		5299457	1					
ANR	5299598	Argument	dbg		5299457	0					
ANR	5299599	Identifier	dbg		5299457	0					
ANR	5299600	Argument	PTRACE_SETREGSET		5299457	1					
ANR	5299601	Identifier	PTRACE_SETREGSET		5299457	0					
ANR	5299602	Argument	dbg -> pid		5299457	2					
ANR	5299603	PtrMemberAccess	dbg -> pid		5299457	0					
ANR	5299604	Identifier	dbg		5299457	0					
ANR	5299605	Identifier	pid		5299457	1					
ANR	5299606	Argument	( void * ) ( size_t ) NT_PRSTATUS		5299457	3					
ANR	5299607	CastExpression	( void * ) ( size_t ) NT_PRSTATUS		5299457	0					
ANR	5299608	CastTarget	void *		5299457	0					
ANR	5299609	CastExpression	( size_t ) NT_PRSTATUS		5299457	1					
ANR	5299610	CastTarget	size_t		5299457	0					
ANR	5299611	Identifier	NT_PRSTATUS		5299457	1					
ANR	5299612	Argument	( r_ptrace_data_t ) ( size_t ) & io		5299457	4					
ANR	5299613	CastExpression	( r_ptrace_data_t ) ( size_t ) & io		5299457	0					
ANR	5299614	CastTarget	r_ptrace_data_t		5299457	0					
ANR	5299615	CastExpression	( size_t ) & io		5299457	1					
ANR	5299616	CastTarget	size_t		5299457	0					
ANR	5299617	UnaryOperationExpression	& io		5299457	1					
ANR	5299618	UnaryOperator	&		5299457	0					
ANR	5299619	Identifier	io		5299457	1					
ANR	5299620	IfStatement	if ( size > sizeof ( R_DEBUG_REG_T ) )		5299457	7					
ANR	5299621	Condition	size > sizeof ( R_DEBUG_REG_T )	931:6:25256:25284	5299457	0	True				
ANR	5299622	RelationalExpression	size > sizeof ( R_DEBUG_REG_T )		5299457	0		>			
ANR	5299623	Identifier	size		5299457	0					
ANR	5299624	SizeofExpression	sizeof ( R_DEBUG_REG_T )		5299457	1					
ANR	5299625	Sizeof	sizeof		5299457	0					
ANR	5299626	SizeofOperand	R_DEBUG_REG_T		5299457	1					
ANR	5299627	CompoundStatement		34:37:1003:1003	5299457	1					
ANR	5299628	ExpressionStatement	size = sizeof ( R_DEBUG_REG_T )	932:3:25292:25321	5299457	0	True				
ANR	5299629	AssignmentExpression	size = sizeof ( R_DEBUG_REG_T )		5299457	0		=			
ANR	5299630	Identifier	size		5299457	0					
ANR	5299631	SizeofExpression	sizeof ( R_DEBUG_REG_T )		5299457	1					
ANR	5299632	Sizeof	sizeof		5299457	0					
ANR	5299633	SizeofOperand	R_DEBUG_REG_T		5299457	1					
ANR	5299634	ReturnStatement	return ( ret != 0 ) ? false : true ;	935:2:25336:25368	5299457	8	True				
ANR	5299635	ConditionalExpression	( ret != 0 ) ? false : true		5299457	0					
ANR	5299636	Condition	ret != 0		5299457	0					
ANR	5299637	EqualityExpression	ret != 0		5299457	0		!=			
ANR	5299638	Identifier	ret		5299457	0					
ANR	5299639	PrimaryExpression	0		5299457	1					
ANR	5299640	Identifier	false		5299457	1					
ANR	5299641	Identifier	true		5299457	2					
ANR	5299642	ReturnStatement	return false ;	937:1:25374:25386	5299457	2	True				
ANR	5299643	Identifier	false		5299457	0					
ANR	5299644	ReturnType	int		5299457	1					
ANR	5299645	Identifier	linux_reg_write		5299457	2					
ANR	5299646	ParameterList	"RDebug * dbg , int type , const ut8 * buf , int size"		5299457	3					
ANR	5299647	Parameter	RDebug * dbg	898:21:24234:24244	5299457	0	True				
ANR	5299648	ParameterType	RDebug *		5299457	0					
ANR	5299649	Identifier	dbg		5299457	1					
ANR	5299650	Parameter	int type	898:34:24247:24254	5299457	1	True				
ANR	5299651	ParameterType	int		5299457	0					
ANR	5299652	Identifier	type		5299457	1					
ANR	5299653	Parameter	const ut8 * buf	898:44:24257:24270	5299457	2	True				
ANR	5299654	ParameterType	const ut8 *		5299457	0					
ANR	5299655	Identifier	buf		5299457	1					
ANR	5299656	Parameter	int size	898:60:24273:24280	5299457	3	True				
ANR	5299657	ParameterType	int		5299457	0					
ANR	5299658	Identifier	size		5299457	1					
ANR	5299659	CFGEntryNode	ENTRY		5299457		True				
ANR	5299660	CFGExitNode	EXIT		5299457		True				
ANR	5299661	Symbol	val		5299457						
ANR	5299662	Symbol	ret		5299457						
ANR	5299663	Symbol	NT_PRSTATUS		5299457						
ANR	5299664	Symbol	dbg		5299457						
ANR	5299665	Symbol	PTRACE_SETREGSET		5299457						
ANR	5299666	Symbol	r_debug_ptrace		5299457						
ANR	5299667	Symbol	false		5299457						
ANR	5299668	Symbol	i		5299457						
ANR	5299669	Symbol	type		5299457						
ANR	5299670	Symbol	* dbg		5299457						
ANR	5299671	Symbol	& io		5299457						
ANR	5299672	Symbol	buf		5299457						
ANR	5299673	Symbol	size		5299457						
ANR	5299674	Symbol	dbg -> pid		5299457						
ANR	5299675	Symbol	true		5299457						
ANR	5299676	Symbol	R_REG_TYPE_GPR		5299457						
ANR	5299677	Symbol	R_REG_TYPE_DRX		5299457						
ANR	5299678	Function	linux_desc_list	940:0:25391:26824							
ANR	5299679	FunctionDef	linux_desc_list (int pid)		5299678	0					
ANR	5299680	CompoundStatement		940:33:25424:26824	5299678	0					
ANR	5299681	IdentifierDeclStatement	RList * ret = NULL ;	941:1:25427:25444	5299678	0	True				
ANR	5299682	IdentifierDecl	* ret = NULL		5299678	0					
ANR	5299683	IdentifierDeclType	RList *		5299678	0					
ANR	5299684	Identifier	ret		5299678	1					
ANR	5299685	AssignmentExpression	* ret = NULL		5299678	2		=			
ANR	5299686	Identifier	NULL		5299678	0					
ANR	5299687	Identifier	NULL		5299678	1					
ANR	5299688	IdentifierDeclStatement	"char path [ 512 ] , file [ 512 ] , buf [ 512 ] ;"	942:1:25447:25482	5299678	1	True				
ANR	5299689	IdentifierDecl	path [ 512 ]		5299678	0					
ANR	5299690	IdentifierDeclType	char [ 512 ]		5299678	0					
ANR	5299691	Identifier	path		5299678	1					
ANR	5299692	PrimaryExpression	512		5299678	2					
ANR	5299693	IdentifierDecl	file [ 512 ]		5299678	1					
ANR	5299694	IdentifierDeclType	char [ 512 ]		5299678	0					
ANR	5299695	Identifier	file		5299678	1					
ANR	5299696	PrimaryExpression	512		5299678	2					
ANR	5299697	IdentifierDecl	buf [ 512 ]		5299678	2					
ANR	5299698	IdentifierDeclType	char [ 512 ]		5299678	0					
ANR	5299699	Identifier	buf		5299678	1					
ANR	5299700	PrimaryExpression	512		5299678	2					
ANR	5299701	IdentifierDeclStatement	struct dirent * de ;	943:1:25485:25502	5299678	2	True				
ANR	5299702	IdentifierDecl	* de		5299678	0					
ANR	5299703	IdentifierDeclType	struct dirent *		5299678	0					
ANR	5299704	Identifier	de		5299678	1					
ANR	5299705	IdentifierDeclStatement	RDebugDesc * desc ;	944:1:25505:25521	5299678	3	True				
ANR	5299706	IdentifierDecl	* desc		5299678	0					
ANR	5299707	IdentifierDeclType	RDebugDesc *		5299678	0					
ANR	5299708	Identifier	desc		5299678	1					
ANR	5299709	IdentifierDeclStatement	"int type , perm ;"	945:1:25524:25538	5299678	4	True				
ANR	5299710	IdentifierDecl	type		5299678	0					
ANR	5299711	IdentifierDeclType	int		5299678	0					
ANR	5299712	Identifier	type		5299678	1					
ANR	5299713	IdentifierDecl	perm		5299678	1					
ANR	5299714	IdentifierDeclType	int		5299678	0					
ANR	5299715	Identifier	perm		5299678	1					
ANR	5299716	IdentifierDeclStatement	"int len , len2 ;"	946:1:25541:25554	5299678	5	True				
ANR	5299717	IdentifierDecl	len		5299678	0					
ANR	5299718	IdentifierDeclType	int		5299678	0					
ANR	5299719	Identifier	len		5299678	1					
ANR	5299720	IdentifierDecl	len2		5299678	1					
ANR	5299721	IdentifierDeclType	int		5299678	0					
ANR	5299722	Identifier	len2		5299678	1					
ANR	5299723	IdentifierDeclStatement	struct stat st ;	947:1:25557:25571	5299678	6	True				
ANR	5299724	IdentifierDecl	st		5299678	0					
ANR	5299725	IdentifierDeclType	struct stat		5299678	0					
ANR	5299726	Identifier	st		5299678	1					
ANR	5299727	IdentifierDeclStatement	DIR * dd = NULL ;	948:1:25574:25588	5299678	7	True				
ANR	5299728	IdentifierDecl	* dd = NULL		5299678	0					
ANR	5299729	IdentifierDeclType	DIR *		5299678	0					
ANR	5299730	Identifier	dd		5299678	1					
ANR	5299731	AssignmentExpression	* dd = NULL		5299678	2		=			
ANR	5299732	Identifier	NULL		5299678	0					
ANR	5299733	Identifier	NULL		5299678	1					
ANR	5299734	ExpressionStatement	"snprintf ( path , sizeof ( path ) , ""/proc/%i/fd/"" , pid )"	950:1:25592:25643	5299678	8	True				
ANR	5299735	CallExpression	"snprintf ( path , sizeof ( path ) , ""/proc/%i/fd/"" , pid )"		5299678	0					
ANR	5299736	Callee	snprintf		5299678	0					
ANR	5299737	Identifier	snprintf		5299678	0					
ANR	5299738	ArgumentList	path		5299678	1					
ANR	5299739	Argument	path		5299678	0					
ANR	5299740	Identifier	path		5299678	0					
ANR	5299741	Argument	sizeof ( path )		5299678	1					
ANR	5299742	SizeofExpression	sizeof ( path )		5299678	0					
ANR	5299743	Sizeof	sizeof		5299678	0					
ANR	5299744	SizeofOperand	path		5299678	1					
ANR	5299745	Argument	"""/proc/%i/fd/"""		5299678	2					
ANR	5299746	PrimaryExpression	"""/proc/%i/fd/"""		5299678	0					
ANR	5299747	Argument	pid		5299678	3					
ANR	5299748	Identifier	pid		5299678	0					
ANR	5299749	IfStatement	if ( ! ( dd = opendir ( path ) ) )		5299678	9					
ANR	5299750	Condition	! ( dd = opendir ( path ) )	951:5:25650:25671	5299678	0	True				
ANR	5299751	UnaryOperationExpression	! ( dd = opendir ( path ) )		5299678	0					
ANR	5299752	UnaryOperator	!		5299678	0					
ANR	5299753	AssignmentExpression	dd = opendir ( path )		5299678	1		=			
ANR	5299754	Identifier	dd		5299678	0					
ANR	5299755	CallExpression	opendir ( path )		5299678	1					
ANR	5299756	Callee	opendir		5299678	0					
ANR	5299757	Identifier	opendir		5299678	0					
ANR	5299758	ArgumentList	path		5299678	1					
ANR	5299759	Argument	path		5299678	0					
ANR	5299760	Identifier	path		5299678	0					
ANR	5299761	CompoundStatement		12:29:249:249	5299678	1					
ANR	5299762	ExpressionStatement	"r_sys_perror ( ""opendir /proc/x/fd"" )"	952:2:25678:25713	5299678	0	True				
ANR	5299763	CallExpression	"r_sys_perror ( ""opendir /proc/x/fd"" )"		5299678	0					
ANR	5299764	Callee	r_sys_perror		5299678	0					
ANR	5299765	Identifier	r_sys_perror		5299678	0					
ANR	5299766	ArgumentList	"""opendir /proc/x/fd"""		5299678	1					
ANR	5299767	Argument	"""opendir /proc/x/fd"""		5299678	0					
ANR	5299768	PrimaryExpression	"""opendir /proc/x/fd"""		5299678	0					
ANR	5299769	ReturnStatement	return NULL ;	953:2:25717:25728	5299678	1	True				
ANR	5299770	Identifier	NULL		5299678	0					
ANR	5299771	ExpressionStatement	ret = r_list_new ( )	955:1:25734:25753	5299678	10	True				
ANR	5299772	AssignmentExpression	ret = r_list_new ( )		5299678	0		=			
ANR	5299773	Identifier	ret		5299678	0					
ANR	5299774	CallExpression	r_list_new ( )		5299678	1					
ANR	5299775	Callee	r_list_new		5299678	0					
ANR	5299776	Identifier	r_list_new		5299678	0					
ANR	5299777	ArgumentList			5299678	1					
ANR	5299778	IfStatement	if ( ! ret )		5299678	11					
ANR	5299779	Condition	! ret	956:5:25760:25763	5299678	0	True				
ANR	5299780	UnaryOperationExpression	! ret		5299678	0					
ANR	5299781	UnaryOperator	!		5299678	0					
ANR	5299782	Identifier	ret		5299678	1					
ANR	5299783	CompoundStatement		17:11:341:341	5299678	1					
ANR	5299784	ExpressionStatement	closedir ( dd )	957:2:25770:25783	5299678	0	True				
ANR	5299785	CallExpression	closedir ( dd )		5299678	0					
ANR	5299786	Callee	closedir		5299678	0					
ANR	5299787	Identifier	closedir		5299678	0					
ANR	5299788	ArgumentList	dd		5299678	1					
ANR	5299789	Argument	dd		5299678	0					
ANR	5299790	Identifier	dd		5299678	0					
ANR	5299791	ReturnStatement	return NULL ;	958:2:25787:25798	5299678	1	True				
ANR	5299792	Identifier	NULL		5299678	0					
ANR	5299793	ExpressionStatement	ret -> free = ( RListFree ) r_debug_desc_free	960:1:25804:25844	5299678	12	True				
ANR	5299794	AssignmentExpression	ret -> free = ( RListFree ) r_debug_desc_free		5299678	0		=			
ANR	5299795	PtrMemberAccess	ret -> free		5299678	0					
ANR	5299796	Identifier	ret		5299678	0					
ANR	5299797	Identifier	free		5299678	1					
ANR	5299798	CastExpression	( RListFree ) r_debug_desc_free		5299678	1					
ANR	5299799	CastTarget	RListFree		5299678	0					
ANR	5299800	Identifier	r_debug_desc_free		5299678	1					
ANR	5299801	WhileStatement	while ( ( de = ( struct dirent * ) readdir ( dd ) ) )		5299678	13					
ANR	5299802	Condition	de = ( struct dirent * ) readdir ( dd )	961:8:25854:25888	5299678	0	True				
ANR	5299803	AssignmentExpression	de = ( struct dirent * ) readdir ( dd )		5299678	0		=			
ANR	5299804	Identifier	de		5299678	0					
ANR	5299805	CastExpression	( struct dirent * ) readdir ( dd )		5299678	1					
ANR	5299806	CastTarget	struct dirent *		5299678	0					
ANR	5299807	CallExpression	readdir ( dd )		5299678	1					
ANR	5299808	Callee	readdir		5299678	0					
ANR	5299809	Identifier	readdir		5299678	0					
ANR	5299810	ArgumentList	dd		5299678	1					
ANR	5299811	Argument	dd		5299678	0					
ANR	5299812	Identifier	dd		5299678	0					
ANR	5299813	CompoundStatement		22:45:466:466	5299678	1					
ANR	5299814	IfStatement	if ( de -> d_name [ 0 ] == '.' )		5299678	0					
ANR	5299815	Condition	de -> d_name [ 0 ] == '.'	962:6:25899:25918	5299678	0	True				
ANR	5299816	EqualityExpression	de -> d_name [ 0 ] == '.'		5299678	0		==			
ANR	5299817	ArrayIndexing	de -> d_name [ 0 ]		5299678	0					
ANR	5299818	PtrMemberAccess	de -> d_name		5299678	0					
ANR	5299819	Identifier	de		5299678	0					
ANR	5299820	Identifier	d_name		5299678	1					
ANR	5299821	PrimaryExpression	0		5299678	1					
ANR	5299822	PrimaryExpression	'.'		5299678	1					
ANR	5299823	CompoundStatement		23:28:496:496	5299678	1					
ANR	5299824	ContinueStatement	continue ;	963:3:25926:25934	5299678	0	True				
ANR	5299825	ExpressionStatement	len = strlen ( path )	965:2:25942:25961	5299678	1	True				
ANR	5299826	AssignmentExpression	len = strlen ( path )		5299678	0		=			
ANR	5299827	Identifier	len		5299678	0					
ANR	5299828	CallExpression	strlen ( path )		5299678	1					
ANR	5299829	Callee	strlen		5299678	0					
ANR	5299830	Identifier	strlen		5299678	0					
ANR	5299831	ArgumentList	path		5299678	1					
ANR	5299832	Argument	path		5299678	0					
ANR	5299833	Identifier	path		5299678	0					
ANR	5299834	ExpressionStatement	len2 = strlen ( de -> d_name )	966:2:25965:25991	5299678	2	True				
ANR	5299835	AssignmentExpression	len2 = strlen ( de -> d_name )		5299678	0		=			
ANR	5299836	Identifier	len2		5299678	0					
ANR	5299837	CallExpression	strlen ( de -> d_name )		5299678	1					
ANR	5299838	Callee	strlen		5299678	0					
ANR	5299839	Identifier	strlen		5299678	0					
ANR	5299840	ArgumentList	de -> d_name		5299678	1					
ANR	5299841	Argument	de -> d_name		5299678	0					
ANR	5299842	PtrMemberAccess	de -> d_name		5299678	0					
ANR	5299843	Identifier	de		5299678	0					
ANR	5299844	Identifier	d_name		5299678	1					
ANR	5299845	IfStatement	if ( len + len2 + 1 >= sizeof ( file ) )		5299678	3					
ANR	5299846	Condition	len + len2 + 1 >= sizeof ( file )	967:6:25999:26028	5299678	0	True				
ANR	5299847	RelationalExpression	len + len2 + 1 >= sizeof ( file )		5299678	0		>=			
ANR	5299848	AdditiveExpression	len + len2 + 1		5299678	0		+			
ANR	5299849	Identifier	len		5299678	0					
ANR	5299850	AdditiveExpression	len2 + 1		5299678	1		+			
ANR	5299851	Identifier	len2		5299678	0					
ANR	5299852	PrimaryExpression	1		5299678	1					
ANR	5299853	SizeofExpression	sizeof ( file )		5299678	1					
ANR	5299854	Sizeof	sizeof		5299678	0					
ANR	5299855	SizeofOperand	file		5299678	1					
ANR	5299856	CompoundStatement		28:38:606:606	5299678	1					
ANR	5299857	ExpressionStatement	r_list_free ( ret )	968:3:26036:26053	5299678	0	True				
ANR	5299858	CallExpression	r_list_free ( ret )		5299678	0					
ANR	5299859	Callee	r_list_free		5299678	0					
ANR	5299860	Identifier	r_list_free		5299678	0					
ANR	5299861	ArgumentList	ret		5299678	1					
ANR	5299862	Argument	ret		5299678	0					
ANR	5299863	Identifier	ret		5299678	0					
ANR	5299864	ExpressionStatement	closedir ( dd )	969:3:26058:26071	5299678	1	True				
ANR	5299865	CallExpression	closedir ( dd )		5299678	0					
ANR	5299866	Callee	closedir		5299678	0					
ANR	5299867	Identifier	closedir		5299678	0					
ANR	5299868	ArgumentList	dd		5299678	1					
ANR	5299869	Argument	dd		5299678	0					
ANR	5299870	Identifier	dd		5299678	0					
ANR	5299871	ExpressionStatement	"eprintf ( ""Filename is too long"" )"	970:3:26076:26108	5299678	2	True				
ANR	5299872	CallExpression	"eprintf ( ""Filename is too long"" )"		5299678	0					
ANR	5299873	Callee	eprintf		5299678	0					
ANR	5299874	Identifier	eprintf		5299678	0					
ANR	5299875	ArgumentList	"""Filename is too long"""		5299678	1					
ANR	5299876	Argument	"""Filename is too long"""		5299678	0					
ANR	5299877	PrimaryExpression	"""Filename is too long"""		5299678	0					
ANR	5299878	ReturnStatement	return NULL ;	971:3:26113:26124	5299678	3	True				
ANR	5299879	Identifier	NULL		5299678	0					
ANR	5299880	ExpressionStatement	"memcpy ( file , path , len )"	973:2:26132:26156	5299678	4	True				
ANR	5299881	CallExpression	"memcpy ( file , path , len )"		5299678	0					
ANR	5299882	Callee	memcpy		5299678	0					
ANR	5299883	Identifier	memcpy		5299678	0					
ANR	5299884	ArgumentList	file		5299678	1					
ANR	5299885	Argument	file		5299678	0					
ANR	5299886	Identifier	file		5299678	0					
ANR	5299887	Argument	path		5299678	1					
ANR	5299888	Identifier	path		5299678	0					
ANR	5299889	Argument	len		5299678	2					
ANR	5299890	Identifier	len		5299678	0					
ANR	5299891	ExpressionStatement	"memcpy ( file + len , de -> d_name , len2 + 1 )"	974:2:26160:26201	5299678	5	True				
ANR	5299892	CallExpression	"memcpy ( file + len , de -> d_name , len2 + 1 )"		5299678	0					
ANR	5299893	Callee	memcpy		5299678	0					
ANR	5299894	Identifier	memcpy		5299678	0					
ANR	5299895	ArgumentList	file + len		5299678	1					
ANR	5299896	Argument	file + len		5299678	0					
ANR	5299897	AdditiveExpression	file + len		5299678	0		+			
ANR	5299898	Identifier	file		5299678	0					
ANR	5299899	Identifier	len		5299678	1					
ANR	5299900	Argument	de -> d_name		5299678	1					
ANR	5299901	PtrMemberAccess	de -> d_name		5299678	0					
ANR	5299902	Identifier	de		5299678	0					
ANR	5299903	Identifier	d_name		5299678	1					
ANR	5299904	Argument	len2 + 1		5299678	2					
ANR	5299905	AdditiveExpression	len2 + 1		5299678	0		+			
ANR	5299906	Identifier	len2		5299678	0					
ANR	5299907	PrimaryExpression	1		5299678	1					
ANR	5299908	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	975:2:26205:26233	5299678	6	True				
ANR	5299909	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		5299678	0					
ANR	5299910	Callee	memset		5299678	0					
ANR	5299911	Identifier	memset		5299678	0					
ANR	5299912	ArgumentList	buf		5299678	1					
ANR	5299913	Argument	buf		5299678	0					
ANR	5299914	Identifier	buf		5299678	0					
ANR	5299915	Argument	0		5299678	1					
ANR	5299916	PrimaryExpression	0		5299678	0					
ANR	5299917	Argument	sizeof ( buf )		5299678	2					
ANR	5299918	SizeofExpression	sizeof ( buf )		5299678	0					
ANR	5299919	Sizeof	sizeof		5299678	0					
ANR	5299920	SizeofOperand	buf		5299678	1					
ANR	5299921	ExpressionStatement	"( void ) readlink ( file , buf , sizeof ( buf ) - 1 )"	976:2:26237:26281	5299678	7	True				
ANR	5299922	CastExpression	"( void ) readlink ( file , buf , sizeof ( buf ) - 1 )"		5299678	0					
ANR	5299923	CastTarget	void		5299678	0					
ANR	5299924	CallExpression	"readlink ( file , buf , sizeof ( buf ) - 1 )"		5299678	1					
ANR	5299925	Callee	readlink		5299678	0					
ANR	5299926	Identifier	readlink		5299678	0					
ANR	5299927	ArgumentList	file		5299678	1					
ANR	5299928	Argument	file		5299678	0					
ANR	5299929	Identifier	file		5299678	0					
ANR	5299930	Argument	buf		5299678	1					
ANR	5299931	Identifier	buf		5299678	0					
ANR	5299932	Argument	sizeof ( buf ) - 1		5299678	2					
ANR	5299933	AdditiveExpression	sizeof ( buf ) - 1		5299678	0		-			
ANR	5299934	SizeofExpression	sizeof ( buf )		5299678	0					
ANR	5299935	Sizeof	sizeof		5299678	0					
ANR	5299936	SizeofOperand	buf		5299678	1					
ANR	5299937	PrimaryExpression	1		5299678	1					
ANR	5299938	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = 0	977:2:26285:26308	5299678	8	True				
ANR	5299939	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = 0		5299678	0		=			
ANR	5299940	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		5299678	0					
ANR	5299941	Identifier	buf		5299678	0					
ANR	5299942	AdditiveExpression	sizeof ( buf ) - 1		5299678	1		-			
ANR	5299943	SizeofExpression	sizeof ( buf )		5299678	0					
ANR	5299944	Sizeof	sizeof		5299678	0					
ANR	5299945	SizeofOperand	buf		5299678	1					
ANR	5299946	PrimaryExpression	1		5299678	1					
ANR	5299947	PrimaryExpression	0		5299678	1					
ANR	5299948	ExpressionStatement	type = perm = 0	978:2:26312:26327	5299678	9	True				
ANR	5299949	AssignmentExpression	type = perm = 0		5299678	0		=			
ANR	5299950	Identifier	type		5299678	0					
ANR	5299951	AssignmentExpression	perm = 0		5299678	1		=			
ANR	5299952	Identifier	perm		5299678	0					
ANR	5299953	PrimaryExpression	0		5299678	1					
ANR	5299954	IfStatement	"if ( stat ( file , & st ) != - 1 )"		5299678	10					
ANR	5299955	Condition	"stat ( file , & st ) != - 1"	979:6:26335:26356	5299678	0	True				
ANR	5299956	EqualityExpression	"stat ( file , & st ) != - 1"		5299678	0		!=			
ANR	5299957	CallExpression	"stat ( file , & st )"		5299678	0					
ANR	5299958	Callee	stat		5299678	0					
ANR	5299959	Identifier	stat		5299678	0					
ANR	5299960	ArgumentList	file		5299678	1					
ANR	5299961	Argument	file		5299678	0					
ANR	5299962	Identifier	file		5299678	0					
ANR	5299963	Argument	& st		5299678	1					
ANR	5299964	UnaryOperationExpression	& st		5299678	0					
ANR	5299965	UnaryOperator	&		5299678	0					
ANR	5299966	Identifier	st		5299678	1					
ANR	5299967	UnaryOperationExpression	- 1		5299678	1					
ANR	5299968	UnaryOperator	-		5299678	0					
ANR	5299969	PrimaryExpression	1		5299678	1					
ANR	5299970	CompoundStatement		40:30:934:934	5299678	1					
ANR	5299971	Statement	type	980:3:26364:26367	5299678	0	True				
ANR	5299972	Statement	=	980:9:26370:26370	5299678	1	True				
ANR	5299973	Statement	st	980:11:26372:26373	5299678	2	True				
ANR	5299974	Statement	.	980:13:26374:26374	5299678	3	True				
ANR	5299975	Statement	st_mode	980:14:26375:26381	5299678	4	True				
ANR	5299976	Statement	&	980:22:26383:26383	5299678	5	True				
ANR	5299977	Statement	S_IFIFO	980:24:26385:26391	5299678	6	True				
ANR	5299978	Statement	?	980:33:26394:26394	5299678	7	True				
ANR	5299979	Label	'P' :	980:35:26396:26399	5299678	8	True				
ANR	5299980	Statement	st	982:4:26421:26422	5299678	9	True				
ANR	5299981	Statement	.	982:6:26423:26423	5299678	10	True				
ANR	5299982	Statement	st_mode	982:7:26424:26430	5299678	11	True				
ANR	5299983	Statement	&	982:15:26432:26432	5299678	12	True				
ANR	5299984	Statement	S_IFSOCK	982:17:26434:26441	5299678	13	True				
ANR	5299985	Statement	?	982:26:26443:26443	5299678	14	True				
ANR	5299986	Label	'S' :	982:28:26445:26448	5299678	15	True				
ANR	5299987	ExpressionStatement	st . st_mode & S_IFCHR ? 'C' : '-'	984:4:26461:26492	5299678	16	True				
ANR	5299988	ConditionalExpression	st . st_mode & S_IFCHR ? 'C' : '-'		5299678	0					
ANR	5299989	Condition	st . st_mode & S_IFCHR		5299678	0					
ANR	5299990	BitAndExpression	st . st_mode & S_IFCHR		5299678	0		&			
ANR	5299991	MemberAccess	st . st_mode		5299678	0					
ANR	5299992	Identifier	st		5299678	0					
ANR	5299993	Identifier	st_mode		5299678	1					
ANR	5299994	Identifier	S_IFCHR		5299678	1					
ANR	5299995	PrimaryExpression	'C'		5299678	1					
ANR	5299996	PrimaryExpression	'-'		5299678	2					
ANR	5299997	IfStatement	"if ( lstat ( path , & st ) != - 1 )"		5299678	11					
ANR	5299998	Condition	"lstat ( path , & st ) != - 1"	986:6:26504:26525	5299678	0	True				
ANR	5299999	EqualityExpression	"lstat ( path , & st ) != - 1"		5299678	0		!=			
ANR	5300000	CallExpression	"lstat ( path , & st )"		5299678	0					
ANR	5300001	Callee	lstat		5299678	0					
ANR	5300002	Identifier	lstat		5299678	0					
ANR	5300003	ArgumentList	path		5299678	1					
ANR	5300004	Argument	path		5299678	0					
ANR	5300005	Identifier	path		5299678	0					
ANR	5300006	Argument	& st		5299678	1					
ANR	5300007	UnaryOperationExpression	& st		5299678	0					
ANR	5300008	UnaryOperator	&		5299678	0					
ANR	5300009	Identifier	st		5299678	1					
ANR	5300010	UnaryOperationExpression	- 1		5299678	1					
ANR	5300011	UnaryOperator	-		5299678	0					
ANR	5300012	PrimaryExpression	1		5299678	1					
ANR	5300013	CompoundStatement		47:30:1103:1103	5299678	1					
ANR	5300014	IfStatement	if ( st . st_mode & S_IRUSR )		5299678	0					
ANR	5300015	Condition	st . st_mode & S_IRUSR	987:7:26537:26556	5299678	0	True				
ANR	5300016	BitAndExpression	st . st_mode & S_IRUSR		5299678	0		&			
ANR	5300017	MemberAccess	st . st_mode		5299678	0					
ANR	5300018	Identifier	st		5299678	0					
ANR	5300019	Identifier	st_mode		5299678	1					
ANR	5300020	Identifier	S_IRUSR		5299678	1					
ANR	5300021	CompoundStatement		48:29:1134:1134	5299678	1					
ANR	5300022	ExpressionStatement	perm |= R_PERM_R	988:4:26565:26581	5299678	0	True				
ANR	5300023	AssignmentExpression	perm |= R_PERM_R		5299678	0		|=			
ANR	5300024	Identifier	perm		5299678	0					
ANR	5300025	Identifier	R_PERM_R		5299678	1					
ANR	5300026	IfStatement	if ( st . st_mode & S_IWUSR )		5299678	1					
ANR	5300027	Condition	st . st_mode & S_IWUSR	990:7:26595:26614	5299678	0	True				
ANR	5300028	BitAndExpression	st . st_mode & S_IWUSR		5299678	0		&			
ANR	5300029	MemberAccess	st . st_mode		5299678	0					
ANR	5300030	Identifier	st		5299678	0					
ANR	5300031	Identifier	st_mode		5299678	1					
ANR	5300032	Identifier	S_IWUSR		5299678	1					
ANR	5300033	CompoundStatement		51:29:1192:1192	5299678	1					
ANR	5300034	ExpressionStatement	perm |= R_PERM_W	991:4:26623:26639	5299678	0	True				
ANR	5300035	AssignmentExpression	perm |= R_PERM_W		5299678	0		|=			
ANR	5300036	Identifier	perm		5299678	0					
ANR	5300037	Identifier	R_PERM_W		5299678	1					
ANR	5300038	ExpressionStatement	"desc = r_debug_desc_new ( atoi ( de -> d_name ) , buf , perm , type , 0 )"	995:2:26669:26732	5299678	12	True				
ANR	5300039	AssignmentExpression	"desc = r_debug_desc_new ( atoi ( de -> d_name ) , buf , perm , type , 0 )"		5299678	0		=			
ANR	5300040	Identifier	desc		5299678	0					
ANR	5300041	CallExpression	"r_debug_desc_new ( atoi ( de -> d_name ) , buf , perm , type , 0 )"		5299678	1					
ANR	5300042	Callee	r_debug_desc_new		5299678	0					
ANR	5300043	Identifier	r_debug_desc_new		5299678	0					
ANR	5300044	ArgumentList	atoi ( de -> d_name )		5299678	1					
ANR	5300045	Argument	atoi ( de -> d_name )		5299678	0					
ANR	5300046	CallExpression	atoi ( de -> d_name )		5299678	0					
ANR	5300047	Callee	atoi		5299678	0					
ANR	5300048	Identifier	atoi		5299678	0					
ANR	5300049	ArgumentList	de -> d_name		5299678	1					
ANR	5300050	Argument	de -> d_name		5299678	0					
ANR	5300051	PtrMemberAccess	de -> d_name		5299678	0					
ANR	5300052	Identifier	de		5299678	0					
ANR	5300053	Identifier	d_name		5299678	1					
ANR	5300054	Argument	buf		5299678	1					
ANR	5300055	Identifier	buf		5299678	0					
ANR	5300056	Argument	perm		5299678	2					
ANR	5300057	Identifier	perm		5299678	0					
ANR	5300058	Argument	type		5299678	3					
ANR	5300059	Identifier	type		5299678	0					
ANR	5300060	Argument	0		5299678	4					
ANR	5300061	PrimaryExpression	0		5299678	0					
ANR	5300062	IfStatement	if ( ! desc )		5299678	13					
ANR	5300063	Condition	! desc	996:6:26740:26744	5299678	0	True				
ANR	5300064	UnaryOperationExpression	! desc		5299678	0					
ANR	5300065	UnaryOperator	!		5299678	0					
ANR	5300066	Identifier	desc		5299678	1					
ANR	5300067	CompoundStatement		57:13:1322:1322	5299678	1					
ANR	5300068	BreakStatement	break ;	997:3:26752:26757	5299678	0	True				
ANR	5300069	ExpressionStatement	"r_list_append ( ret , desc )"	999:2:26765:26790	5299678	14	True				
ANR	5300070	CallExpression	"r_list_append ( ret , desc )"		5299678	0					
ANR	5300071	Callee	r_list_append		5299678	0					
ANR	5300072	Identifier	r_list_append		5299678	0					
ANR	5300073	ArgumentList	ret		5299678	1					
ANR	5300074	Argument	ret		5299678	0					
ANR	5300075	Identifier	ret		5299678	0					
ANR	5300076	Argument	desc		5299678	1					
ANR	5300077	Identifier	desc		5299678	0					
ANR	5300078	ExpressionStatement	closedir ( dd )	1001:1:26796:26809	5299678	14	True				
ANR	5300079	CallExpression	closedir ( dd )		5299678	0					
ANR	5300080	Callee	closedir		5299678	0					
ANR	5300081	Identifier	closedir		5299678	0					
ANR	5300082	ArgumentList	dd		5299678	1					
ANR	5300083	Argument	dd		5299678	0					
ANR	5300084	Identifier	dd		5299678	0					
ANR	5300085	ReturnStatement	return ret ;	1002:1:26812:26822	5299678	15	True				
ANR	5300086	Identifier	ret		5299678	0					
ANR	5300087	ReturnType	RList *		5299678	1					
ANR	5300088	Identifier	linux_desc_list		5299678	2					
ANR	5300089	ParameterList	int pid		5299678	3					
ANR	5300090	Parameter	int pid	940:24:25415:25421	5299678	0	True				
ANR	5300091	ParameterType	int		5299678	0					
ANR	5300092	Identifier	pid		5299678	1					
ANR	5300093	CFGEntryNode	ENTRY		5299678		True				
ANR	5300094	CFGExitNode	EXIT		5299678		True				
ANR	5300095	Symbol	dd		5299678						
ANR	5300096	Symbol	de		5299678						
ANR	5300097	Symbol	de -> d_name		5299678						
ANR	5300098	Symbol	S_IFCHR		5299678						
ANR	5300099	Symbol	perm		5299678						
ANR	5300100	Symbol	pid		5299678						
ANR	5300101	Symbol	& st		5299678						
ANR	5300102	Symbol	st . st_mode		5299678						
ANR	5300103	Symbol	* ret		5299678						
ANR	5300104	Symbol	type		5299678						
ANR	5300105	Symbol	ret -> free		5299678						
ANR	5300106	Symbol	len2		5299678						
ANR	5300107	Symbol	path		5299678						
ANR	5300108	Symbol	strlen		5299678						
ANR	5300109	Symbol	r_debug_desc_free		5299678						
ANR	5300110	Symbol	readdir		5299678						
ANR	5300111	Symbol	file		5299678						
ANR	5300112	Symbol	S_IRUSR		5299678						
ANR	5300113	Symbol	R_PERM_W		5299678						
ANR	5300114	Symbol	len		5299678						
ANR	5300115	Symbol	R_PERM_R		5299678						
ANR	5300116	Symbol	* de -> d_name		5299678						
ANR	5300117	Symbol	r_debug_desc_new		5299678						
ANR	5300118	Symbol	ret		5299678						
ANR	5300119	Symbol	atoi		5299678						
ANR	5300120	Symbol	st		5299678						
ANR	5300121	Symbol	* buf		5299678						
ANR	5300122	Symbol	stat		5299678						
ANR	5300123	Symbol	NULL		5299678						
ANR	5300124	Symbol	* de		5299678						
ANR	5300125	Symbol	lstat		5299678						
ANR	5300126	Symbol	* * de		5299678						
ANR	5300127	Symbol	buf		5299678						
ANR	5300128	Symbol	S_IWUSR		5299678						
ANR	5300129	Symbol	opendir		5299678						
ANR	5300130	Symbol	desc		5299678						
ANR	5300131	Symbol	r_list_new		5299678						
