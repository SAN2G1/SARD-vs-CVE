command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4678836	File	data/converged/CVE-2019-16718~_radare2/libr_debug_dreg.c								
ANR	4678837	Function	r_debug_reg_sync	8:0:169:2667							
ANR	4678838	FunctionDef	"r_debug_reg_sync (RDebug * dbg , int type , int write)"		4678837	0					
ANR	4678839	CompoundStatement		8:61:230:2667	4678837	0					
ANR	4678840	IdentifierDeclStatement	"int i , n , size ;"	9:1:233:247	4678837	0	True				
ANR	4678841	IdentifierDecl	i		4678837	0					
ANR	4678842	IdentifierDeclType	int		4678837	0					
ANR	4678843	Identifier	i		4678837	1					
ANR	4678844	IdentifierDecl	n		4678837	1					
ANR	4678845	IdentifierDeclType	int		4678837	0					
ANR	4678846	Identifier	n		4678837	1					
ANR	4678847	IdentifierDecl	size		4678837	2					
ANR	4678848	IdentifierDeclType	int		4678837	0					
ANR	4678849	Identifier	size		4678837	1					
ANR	4678850	IfStatement	if ( ! dbg || ! dbg -> reg || ! dbg -> h )		4678837	1					
ANR	4678851	Condition	! dbg || ! dbg -> reg || ! dbg -> h	10:5:254:281	4678837	0	True				
ANR	4678852	OrExpression	! dbg || ! dbg -> reg || ! dbg -> h		4678837	0		||			
ANR	4678853	UnaryOperationExpression	! dbg		4678837	0					
ANR	4678854	UnaryOperator	!		4678837	0					
ANR	4678855	Identifier	dbg		4678837	1					
ANR	4678856	OrExpression	! dbg -> reg || ! dbg -> h		4678837	1		||			
ANR	4678857	UnaryOperationExpression	! dbg -> reg		4678837	0					
ANR	4678858	UnaryOperator	!		4678837	0					
ANR	4678859	PtrMemberAccess	dbg -> reg		4678837	1					
ANR	4678860	Identifier	dbg		4678837	0					
ANR	4678861	Identifier	reg		4678837	1					
ANR	4678862	UnaryOperationExpression	! dbg -> h		4678837	1					
ANR	4678863	UnaryOperator	!		4678837	0					
ANR	4678864	PtrMemberAccess	dbg -> h		4678837	1					
ANR	4678865	Identifier	dbg		4678837	0					
ANR	4678866	Identifier	h		4678837	1					
ANR	4678867	CompoundStatement		3:35:53:53	4678837	1					
ANR	4678868	ReturnStatement	return false ;	11:2:288:300	4678837	0	True				
ANR	4678869	Identifier	false		4678837	0					
ANR	4678870	IfStatement	if ( r_debug_is_dead ( dbg ) )		4678837	2					
ANR	4678871	Condition	r_debug_is_dead ( dbg )	14:5:356:376	4678837	0	True				
ANR	4678872	CallExpression	r_debug_is_dead ( dbg )		4678837	0					
ANR	4678873	Callee	r_debug_is_dead		4678837	0					
ANR	4678874	Identifier	r_debug_is_dead		4678837	0					
ANR	4678875	ArgumentList	dbg		4678837	1					
ANR	4678876	Argument	dbg		4678837	0					
ANR	4678877	Identifier	dbg		4678837	0					
ANR	4678878	CompoundStatement		7:28:148:148	4678837	1					
ANR	4678879	ReturnStatement	return false ;	15:2:383:395	4678837	0	True				
ANR	4678880	Identifier	false		4678837	0					
ANR	4678881	IfStatement	if ( write && ! dbg -> h -> reg_write )		4678837	3					
ANR	4678882	Condition	write && ! dbg -> h -> reg_write	18:5:453:479	4678837	0	True				
ANR	4678883	AndExpression	write && ! dbg -> h -> reg_write		4678837	0		&&			
ANR	4678884	Identifier	write		4678837	0					
ANR	4678885	UnaryOperationExpression	! dbg -> h -> reg_write		4678837	1					
ANR	4678886	UnaryOperator	!		4678837	0					
ANR	4678887	PtrMemberAccess	dbg -> h -> reg_write		4678837	1					
ANR	4678888	PtrMemberAccess	dbg -> h		4678837	0					
ANR	4678889	Identifier	dbg		4678837	0					
ANR	4678890	Identifier	h		4678837	1					
ANR	4678891	Identifier	reg_write		4678837	1					
ANR	4678892	CompoundStatement		11:34:251:251	4678837	1					
ANR	4678893	ReturnStatement	return false ;	19:2:486:498	4678837	0	True				
ANR	4678894	Identifier	false		4678837	0					
ANR	4678895	IfStatement	if ( ! write && ! dbg -> h -> reg_read )		4678837	4					
ANR	4678896	Condition	! write && ! dbg -> h -> reg_read	21:5:508:534	4678837	0	True				
ANR	4678897	AndExpression	! write && ! dbg -> h -> reg_read		4678837	0		&&			
ANR	4678898	UnaryOperationExpression	! write		4678837	0					
ANR	4678899	UnaryOperator	!		4678837	0					
ANR	4678900	Identifier	write		4678837	1					
ANR	4678901	UnaryOperationExpression	! dbg -> h -> reg_read		4678837	1					
ANR	4678902	UnaryOperator	!		4678837	0					
ANR	4678903	PtrMemberAccess	dbg -> h -> reg_read		4678837	1					
ANR	4678904	PtrMemberAccess	dbg -> h		4678837	0					
ANR	4678905	Identifier	dbg		4678837	0					
ANR	4678906	Identifier	h		4678837	1					
ANR	4678907	Identifier	reg_read		4678837	1					
ANR	4678908	CompoundStatement		14:34:306:306	4678837	1					
ANR	4678909	ReturnStatement	return false ;	22:2:541:553	4678837	0	True				
ANR	4678910	Identifier	false		4678837	0					
ANR	4678911	ExpressionStatement	i = ( type == R_REG_TYPE_ALL ) ? R_REG_TYPE_GPR : type	25:1:604:654	4678837	5	True				
ANR	4678912	AssignmentExpression	i = ( type == R_REG_TYPE_ALL ) ? R_REG_TYPE_GPR : type		4678837	0		=			
ANR	4678913	Identifier	i		4678837	0					
ANR	4678914	ConditionalExpression	( type == R_REG_TYPE_ALL ) ? R_REG_TYPE_GPR : type		4678837	1					
ANR	4678915	Condition	type == R_REG_TYPE_ALL		4678837	0					
ANR	4678916	EqualityExpression	type == R_REG_TYPE_ALL		4678837	0		==			
ANR	4678917	Identifier	type		4678837	0					
ANR	4678918	Identifier	R_REG_TYPE_ALL		4678837	1					
ANR	4678919	Identifier	R_REG_TYPE_GPR		4678837	1					
ANR	4678920	Identifier	type		4678837	2					
ANR	4678921	IfStatement	if ( i >= R_REG_TYPE_GPR && dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length )		4678837	6					
ANR	4678922	Condition	i >= R_REG_TYPE_GPR && dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length	28:5:811:894	4678837	0	True				
ANR	4678923	AndExpression	i >= R_REG_TYPE_GPR && dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length		4678837	0		&&			
ANR	4678924	RelationalExpression	i >= R_REG_TYPE_GPR		4678837	0		>=			
ANR	4678925	Identifier	i		4678837	0					
ANR	4678926	Identifier	R_REG_TYPE_GPR		4678837	1					
ANR	4678927	AndExpression	dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length		4678837	1		&&			
ANR	4678928	MemberAccess	dbg -> reg -> regset [ i ] . regs		4678837	0					
ANR	4678929	ArrayIndexing	dbg -> reg -> regset [ i ]		4678837	0					
ANR	4678930	PtrMemberAccess	dbg -> reg -> regset		4678837	0					
ANR	4678931	PtrMemberAccess	dbg -> reg		4678837	0					
ANR	4678932	Identifier	dbg		4678837	0					
ANR	4678933	Identifier	reg		4678837	1					
ANR	4678934	Identifier	regset		4678837	1					
ANR	4678935	Identifier	i		4678837	1					
ANR	4678936	Identifier	regs		4678837	1					
ANR	4678937	UnaryOperationExpression	! dbg -> reg -> regset [ i ] . regs -> length		4678837	1					
ANR	4678938	UnaryOperator	!		4678837	0					
ANR	4678939	PtrMemberAccess	dbg -> reg -> regset [ i ] . regs -> length		4678837	1					
ANR	4678940	MemberAccess	dbg -> reg -> regset [ i ] . regs		4678837	0					
ANR	4678941	ArrayIndexing	dbg -> reg -> regset [ i ]		4678837	0					
ANR	4678942	PtrMemberAccess	dbg -> reg -> regset		4678837	0					
ANR	4678943	PtrMemberAccess	dbg -> reg		4678837	0					
ANR	4678944	Identifier	dbg		4678837	0					
ANR	4678945	Identifier	reg		4678837	1					
ANR	4678946	Identifier	regset		4678837	1					
ANR	4678947	Identifier	i		4678837	1					
ANR	4678948	Identifier	regs		4678837	1					
ANR	4678949	Identifier	length		4678837	1					
ANR	4678950	CompoundStatement		21:91:666:666	4678837	1					
ANR	4678951	ForStatement	for ( n = R_REG_TYPE_GPR ; n < R_REG_TYPE_LAST ; n ++ )		4678837	0					
ANR	4678952	ForInit	n = R_REG_TYPE_GPR ;	30:7:955:973	4678837	0	True				
ANR	4678953	AssignmentExpression	n = R_REG_TYPE_GPR		4678837	0		=			
ANR	4678954	Identifier	n		4678837	0					
ANR	4678955	Identifier	R_REG_TYPE_GPR		4678837	1					
ANR	4678956	Condition	n < R_REG_TYPE_LAST	30:27:975:993	4678837	1	True				
ANR	4678957	RelationalExpression	n < R_REG_TYPE_LAST		4678837	0		<			
ANR	4678958	Identifier	n		4678837	0					
ANR	4678959	Identifier	R_REG_TYPE_LAST		4678837	1					
ANR	4678960	PostIncDecOperationExpression	n ++	30:48:996:998	4678837	2	True				
ANR	4678961	Identifier	n		4678837	0					
ANR	4678962	IncDec	++		4678837	1					
ANR	4678963	CompoundStatement		27:3:887:908	4678837	3					
ANR	4678964	IdentifierDeclStatement	int mask = dbg -> reg -> regset [ n ] . maskregstype ;	32:3:1028:1071	4678837	0	True				
ANR	4678965	IdentifierDecl	mask = dbg -> reg -> regset [ n ] . maskregstype		4678837	0					
ANR	4678966	IdentifierDeclType	int		4678837	0					
ANR	4678967	Identifier	mask		4678837	1					
ANR	4678968	AssignmentExpression	mask = dbg -> reg -> regset [ n ] . maskregstype		4678837	2		=			
ANR	4678969	Identifier	mask		4678837	0					
ANR	4678970	MemberAccess	dbg -> reg -> regset [ n ] . maskregstype		4678837	1					
ANR	4678971	ArrayIndexing	dbg -> reg -> regset [ n ]		4678837	0					
ANR	4678972	PtrMemberAccess	dbg -> reg -> regset		4678837	0					
ANR	4678973	PtrMemberAccess	dbg -> reg		4678837	0					
ANR	4678974	Identifier	dbg		4678837	0					
ANR	4678975	Identifier	reg		4678837	1					
ANR	4678976	Identifier	regset		4678837	1					
ANR	4678977	Identifier	n		4678837	1					
ANR	4678978	Identifier	maskregstype		4678837	1					
ANR	4678979	IdentifierDeclStatement	int v = ( ( int ) 1 << i ) ;	34:3:1118:1139	4678837	1	True				
ANR	4678980	IdentifierDecl	v = ( ( int ) 1 << i )		4678837	0					
ANR	4678981	IdentifierDeclType	int		4678837	0					
ANR	4678982	Identifier	v		4678837	1					
ANR	4678983	AssignmentExpression	v = ( ( int ) 1 << i )		4678837	2		=			
ANR	4678984	Identifier	v		4678837	0					
ANR	4678985	ShiftExpression	( int ) 1 << i		4678837	1		<<			
ANR	4678986	CastExpression	( int ) 1		4678837	0					
ANR	4678987	CastTarget	int		4678837	0					
ANR	4678988	PrimaryExpression	1		4678837	1					
ANR	4678989	Identifier	i		4678837	1					
ANR	4678990	IfStatement	if ( n != i && ( mask & v ) )		4678837	2					
ANR	4678991	Condition	n != i && ( mask & v )	36:7:1247:1266	4678837	0	True				
ANR	4678992	AndExpression	n != i && ( mask & v )		4678837	0		&&			
ANR	4678993	EqualityExpression	n != i		4678837	0		!=			
ANR	4678994	Identifier	n		4678837	0					
ANR	4678995	Identifier	i		4678837	1					
ANR	4678996	BitAndExpression	mask & v		4678837	1		&			
ANR	4678997	Identifier	mask		4678837	0					
ANR	4678998	Identifier	v		4678837	1					
ANR	4678999	CompoundStatement		29:29:1038:1038	4678837	1					
ANR	4679000	ExpressionStatement	i = n	40:4:1492:1497	4678837	0	True				
ANR	4679001	AssignmentExpression	i = n		4678837	0		=			
ANR	4679002	Identifier	i		4678837	0					
ANR	4679003	Identifier	n		4678837	1					
ANR	4679004	BreakStatement	break ;	41:4:1503:1508	4678837	1	True				
ANR	4679005	DoStatement	do		4678837	7					
ANR	4679006	CompoundStatement		38:4:1295:1295	4678837	0					
ANR	4679007	IfStatement	if ( write )		4678837	0					
ANR	4679008	Condition	write	46:6:1534:1538	4678837	0	True				
ANR	4679009	Identifier	write		4678837	0					
ANR	4679010	CompoundStatement		40:3:1315:1362	4678837	1					
ANR	4679011	IdentifierDeclStatement	"ut8 * buf = r_reg_get_bytes ( dbg -> reg , i , & size ) ;"	47:3:1546:1593	4678837	0	True				
ANR	4679012	IdentifierDecl	"* buf = r_reg_get_bytes ( dbg -> reg , i , & size )"		4678837	0					
ANR	4679013	IdentifierDeclType	ut8 *		4678837	0					
ANR	4679014	Identifier	buf		4678837	1					
ANR	4679015	AssignmentExpression	"* buf = r_reg_get_bytes ( dbg -> reg , i , & size )"		4678837	2		=			
ANR	4679016	Identifier	buf		4678837	0					
ANR	4679017	CallExpression	"r_reg_get_bytes ( dbg -> reg , i , & size )"		4678837	1					
ANR	4679018	Callee	r_reg_get_bytes		4678837	0					
ANR	4679019	Identifier	r_reg_get_bytes		4678837	0					
ANR	4679020	ArgumentList	dbg -> reg		4678837	1					
ANR	4679021	Argument	dbg -> reg		4678837	0					
ANR	4679022	PtrMemberAccess	dbg -> reg		4678837	0					
ANR	4679023	Identifier	dbg		4678837	0					
ANR	4679024	Identifier	reg		4678837	1					
ANR	4679025	Argument	i		4678837	1					
ANR	4679026	Identifier	i		4678837	0					
ANR	4679027	Argument	& size		4678837	2					
ANR	4679028	UnaryOperationExpression	& size		4678837	0					
ANR	4679029	UnaryOperator	&		4678837	0					
ANR	4679030	Identifier	size		4678837	1					
ANR	4679031	IfStatement	"if ( ! buf || ! dbg -> h -> reg_write ( dbg , i , buf , size ) )"		4678837	1					
ANR	4679032	Condition	"! buf || ! dbg -> h -> reg_write ( dbg , i , buf , size )"	48:7:1602:1647	4678837	0	True				
ANR	4679033	OrExpression	"! buf || ! dbg -> h -> reg_write ( dbg , i , buf , size )"		4678837	0		||			
ANR	4679034	UnaryOperationExpression	! buf		4678837	0					
ANR	4679035	UnaryOperator	!		4678837	0					
ANR	4679036	Identifier	buf		4678837	1					
ANR	4679037	UnaryOperationExpression	"! dbg -> h -> reg_write ( dbg , i , buf , size )"		4678837	1					
ANR	4679038	UnaryOperator	!		4678837	0					
ANR	4679039	CallExpression	"dbg -> h -> reg_write ( dbg , i , buf , size )"		4678837	1					
ANR	4679040	Callee	dbg -> h -> reg_write		4678837	0					
ANR	4679041	PtrMemberAccess	dbg -> h -> reg_write		4678837	0					
ANR	4679042	PtrMemberAccess	dbg -> h		4678837	0					
ANR	4679043	Identifier	dbg		4678837	0					
ANR	4679044	Identifier	h		4678837	1					
ANR	4679045	Identifier	reg_write		4678837	1					
ANR	4679046	ArgumentList	dbg		4678837	1					
ANR	4679047	Argument	dbg		4678837	0					
ANR	4679048	Identifier	dbg		4678837	0					
ANR	4679049	Argument	i		4678837	1					
ANR	4679050	Identifier	i		4678837	0					
ANR	4679051	Argument	buf		4678837	2					
ANR	4679052	Identifier	buf		4678837	0					
ANR	4679053	Argument	size		4678837	3					
ANR	4679054	Identifier	size		4678837	0					
ANR	4679055	CompoundStatement		41:55:1419:1419	4678837	1					
ANR	4679056	IfStatement	if ( ! i )		4678837	0					
ANR	4679057	Condition	! i	49:8:1660:1661	4678837	0	True				
ANR	4679058	UnaryOperationExpression	! i		4678837	0					
ANR	4679059	UnaryOperator	!		4678837	0					
ANR	4679060	Identifier	i		4678837	1					
ANR	4679061	CompoundStatement		42:12:1433:1433	4678837	1					
ANR	4679062	Statement	eprintf	50:5:1671:1677	4678837	0	True				
ANR	4679063	Statement	(	50:13:1679:1679	4678837	1	True				
ANR	4679064	Statement	"""r_debug_reg: error writing """	50:14:1680:1708	4678837	2	True				
ANR	4679065	Statement	"""registers %d to %d\\n"""	51:6:1716:1737	4678837	3	True				
ANR	4679066	Statement	","	51:28:1738:1738	4678837	4	True				
ANR	4679067	Statement	i	51:30:1740:1740	4678837	5	True				
ANR	4679068	Statement	","	51:31:1741:1741	4678837	6	True				
ANR	4679069	Statement	dbg	51:33:1743:1745	4678837	7	True				
ANR	4679070	Statement	->	51:36:1746:1747	4678837	8	True				
ANR	4679071	Statement	tid	51:38:1748:1750	4678837	9	True				
ANR	4679072	Statement	)	51:41:1751:1751	4678837	10	True				
ANR	4679073	ExpressionStatement		51:42:1752:1752	4678837	11	True				
ANR	4679074	ExpressionStatement	free ( buf )	53:4:1764:1774	4678837	1	True				
ANR	4679075	CallExpression	free ( buf )		4678837	0					
ANR	4679076	Callee	free		4678837	0					
ANR	4679077	Identifier	free		4678837	0					
ANR	4679078	ArgumentList	buf		4678837	1					
ANR	4679079	Argument	buf		4678837	0					
ANR	4679080	Identifier	buf		4678837	0					
ANR	4679081	ReturnStatement	return false ;	54:4:1780:1792	4678837	2	True				
ANR	4679082	Identifier	false		4678837	0					
ANR	4679083	ExpressionStatement	free ( buf )	56:3:1802:1812	4678837	2	True				
ANR	4679084	CallExpression	free ( buf )		4678837	0					
ANR	4679085	Callee	free		4678837	0					
ANR	4679086	Identifier	free		4678837	0					
ANR	4679087	ArgumentList	buf		4678837	1					
ANR	4679088	Argument	buf		4678837	0					
ANR	4679089	Identifier	buf		4678837	0					
ANR	4679090	ElseStatement	else		4678837	0					
ANR	4679091	CompoundStatement		52:3:1670:1698	4678837	0					
ANR	4679092	IdentifierDeclStatement	int bufsize = dbg -> reg -> size ;	59:3:1901:1929	4678837	0	True				
ANR	4679093	IdentifierDecl	bufsize = dbg -> reg -> size		4678837	0					
ANR	4679094	IdentifierDeclType	int		4678837	0					
ANR	4679095	Identifier	bufsize		4678837	1					
ANR	4679096	AssignmentExpression	bufsize = dbg -> reg -> size		4678837	2		=			
ANR	4679097	Identifier	bufsize		4678837	0					
ANR	4679098	PtrMemberAccess	dbg -> reg -> size		4678837	1					
ANR	4679099	PtrMemberAccess	dbg -> reg		4678837	0					
ANR	4679100	Identifier	dbg		4678837	0					
ANR	4679101	Identifier	reg		4678837	1					
ANR	4679102	Identifier	size		4678837	1					
ANR	4679103	IfStatement	if ( bufsize > 0 )		4678837	1					
ANR	4679104	Condition	bufsize > 0	61:7:1990:2000	4678837	0	True				
ANR	4679105	RelationalExpression	bufsize > 0		4678837	0		>			
ANR	4679106	Identifier	bufsize		4678837	0					
ANR	4679107	PrimaryExpression	0		4678837	1					
ANR	4679108	CompoundStatement		55:4:1778:1812	4678837	1					
ANR	4679109	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 + 1 , bufsize ) ;"	62:4:2009:2043	4678837	0	True				
ANR	4679110	IdentifierDecl	"* buf = calloc ( 1 + 1 , bufsize )"		4678837	0					
ANR	4679111	IdentifierDeclType	ut8 *		4678837	0					
ANR	4679112	Identifier	buf		4678837	1					
ANR	4679113	AssignmentExpression	"* buf = calloc ( 1 + 1 , bufsize )"		4678837	2		=			
ANR	4679114	Identifier	buf		4678837	0					
ANR	4679115	CallExpression	"calloc ( 1 + 1 , bufsize )"		4678837	1					
ANR	4679116	Callee	calloc		4678837	0					
ANR	4679117	Identifier	calloc		4678837	0					
ANR	4679118	ArgumentList	1 + 1		4678837	1					
ANR	4679119	Argument	1 + 1		4678837	0					
ANR	4679120	AdditiveExpression	1 + 1		4678837	0		+			
ANR	4679121	PrimaryExpression	1		4678837	0					
ANR	4679122	PrimaryExpression	1		4678837	1					
ANR	4679123	Argument	bufsize		4678837	1					
ANR	4679124	Identifier	bufsize		4678837	0					
ANR	4679125	IfStatement	if ( ! buf )		4678837	1					
ANR	4679126	Condition	! buf	63:8:2053:2056	4678837	0	True				
ANR	4679127	UnaryOperationExpression	! buf		4678837	0					
ANR	4679128	UnaryOperator	!		4678837	0					
ANR	4679129	Identifier	buf		4678837	1					
ANR	4679130	CompoundStatement		56:14:1828:1828	4678837	1					
ANR	4679131	ReturnStatement	return false ;	64:5:2066:2078	4678837	0	True				
ANR	4679132	Identifier	false		4678837	0					
ANR	4679133	ExpressionStatement	"size = dbg -> h -> reg_read ( dbg , i , buf , bufsize )"	67:4:2154:2200	4678837	2	True				
ANR	4679134	AssignmentExpression	"size = dbg -> h -> reg_read ( dbg , i , buf , bufsize )"		4678837	0		=			
ANR	4679135	Identifier	size		4678837	0					
ANR	4679136	CallExpression	"dbg -> h -> reg_read ( dbg , i , buf , bufsize )"		4678837	1					
ANR	4679137	Callee	dbg -> h -> reg_read		4678837	0					
ANR	4679138	PtrMemberAccess	dbg -> h -> reg_read		4678837	0					
ANR	4679139	PtrMemberAccess	dbg -> h		4678837	0					
ANR	4679140	Identifier	dbg		4678837	0					
ANR	4679141	Identifier	h		4678837	1					
ANR	4679142	Identifier	reg_read		4678837	1					
ANR	4679143	ArgumentList	dbg		4678837	1					
ANR	4679144	Argument	dbg		4678837	0					
ANR	4679145	Identifier	dbg		4678837	0					
ANR	4679146	Argument	i		4678837	1					
ANR	4679147	Identifier	i		4678837	0					
ANR	4679148	Argument	buf		4678837	2					
ANR	4679149	Identifier	buf		4678837	0					
ANR	4679150	Argument	bufsize		4678837	3					
ANR	4679151	Identifier	bufsize		4678837	0					
ANR	4679152	IfStatement	if ( size > 0 )		4678837	3					
ANR	4679153	Condition	size > 0	69:8:2281:2288	4678837	0	True				
ANR	4679154	RelationalExpression	size > 0		4678837	0		>			
ANR	4679155	Identifier	size		4678837	0					
ANR	4679156	PrimaryExpression	0		4678837	1					
ANR	4679157	CompoundStatement		62:18:2060:2060	4678837	1					
ANR	4679158	ExpressionStatement	"r_reg_set_bytes ( dbg -> reg , i , buf , size )"	70:5:2298:2338	4678837	0	True				
ANR	4679159	CallExpression	"r_reg_set_bytes ( dbg -> reg , i , buf , size )"		4678837	0					
ANR	4679160	Callee	r_reg_set_bytes		4678837	0					
ANR	4679161	Identifier	r_reg_set_bytes		4678837	0					
ANR	4679162	ArgumentList	dbg -> reg		4678837	1					
ANR	4679163	Argument	dbg -> reg		4678837	0					
ANR	4679164	PtrMemberAccess	dbg -> reg		4678837	0					
ANR	4679165	Identifier	dbg		4678837	0					
ANR	4679166	Identifier	reg		4678837	1					
ANR	4679167	Argument	i		4678837	1					
ANR	4679168	Identifier	i		4678837	0					
ANR	4679169	Argument	buf		4678837	2					
ANR	4679170	Identifier	buf		4678837	0					
ANR	4679171	Argument	size		4678837	3					
ANR	4679172	Identifier	size		4678837	0					
ANR	4679173	ExpressionStatement	free ( buf )	74:4:2415:2425	4678837	4	True				
ANR	4679174	CallExpression	free ( buf )		4678837	0					
ANR	4679175	Callee	free		4678837	0					
ANR	4679176	Identifier	free		4678837	0					
ANR	4679177	ArgumentList	buf		4678837	1					
ANR	4679178	Argument	buf		4678837	0					
ANR	4679179	Identifier	buf		4678837	0					
ANR	4679180	ExpressionStatement	i ++	80:2:2586:2589	4678837	1	True				
ANR	4679181	PostIncDecOperationExpression	i ++		4678837	0					
ANR	4679182	Identifier	i		4678837	0					
ANR	4679183	IncDec	++		4678837	1					
ANR	4679184	Condition	( type == R_REG_TYPE_ALL ) && ( i < R_REG_TYPE_LAST )	81:10:2601:2649	4678837	1	True				
ANR	4679185	AndExpression	( type == R_REG_TYPE_ALL ) && ( i < R_REG_TYPE_LAST )		4678837	0		&&			
ANR	4679186	EqualityExpression	type == R_REG_TYPE_ALL		4678837	0		==			
ANR	4679187	Identifier	type		4678837	0					
ANR	4679188	Identifier	R_REG_TYPE_ALL		4678837	1					
ANR	4679189	RelationalExpression	i < R_REG_TYPE_LAST		4678837	1		<			
ANR	4679190	Identifier	i		4678837	0					
ANR	4679191	Identifier	R_REG_TYPE_LAST		4678837	1					
ANR	4679192	ReturnStatement	return true ;	82:1:2654:2665	4678837	8	True				
ANR	4679193	Identifier	true		4678837	0					
ANR	4679194	ReturnType	R_API int		4678837	1					
ANR	4679195	Identifier	r_debug_reg_sync		4678837	2					
ANR	4679196	ParameterList	"RDebug * dbg , int type , int write"		4678837	3					
ANR	4679197	Parameter	RDebug * dbg	8:27:196:206	4678837	0	True				
ANR	4679198	ParameterType	RDebug *		4678837	0					
ANR	4679199	Identifier	dbg		4678837	1					
ANR	4679200	Parameter	int type	8:40:209:216	4678837	1	True				
ANR	4679201	ParameterType	int		4678837	0					
ANR	4679202	Identifier	type		4678837	1					
ANR	4679203	Parameter	int write	8:50:219:227	4678837	2	True				
ANR	4679204	ParameterType	int		4678837	0					
ANR	4679205	Identifier	write		4678837	1					
ANR	4679206	CFGEntryNode	ENTRY		4678837		True				
ANR	4679207	CFGExitNode	EXIT		4678837		True				
ANR	4679208	Symbol	* * dbg -> reg -> regset		4678837						
ANR	4679209	Symbol	* * * * dbg		4678837						
ANR	4679210	Symbol	* dbg -> h		4678837						
ANR	4679211	Symbol	dbg -> h -> reg_read		4678837						
ANR	4679212	Symbol	dbg -> reg -> regset [ n ] . maskregstype		4678837						
ANR	4679213	Symbol	calloc		4678837						
ANR	4679214	Symbol	type		4678837						
ANR	4679215	Symbol	R_REG_TYPE_ALL		4678837						
ANR	4679216	Symbol	dbg -> reg -> regset		4678837						
ANR	4679217	Symbol	dbg -> reg -> regset [ i ] . regs		4678837						
ANR	4679218	Symbol	write		4678837						
ANR	4679219	Symbol	R_REG_TYPE_GPR		4678837						
ANR	4679220	Symbol	* dbg -> reg -> regset		4678837						
ANR	4679221	Symbol	mask		4678837						
ANR	4679222	Symbol	* * i		4678837						
ANR	4679223	Symbol	dbg -> h		4678837						
ANR	4679224	Symbol	dbg -> h -> reg_write		4678837						
ANR	4679225	Symbol	dbg -> reg -> size		4678837						
ANR	4679226	Symbol	* * * dbg		4678837						
ANR	4679227	Symbol	dbg		4678837						
ANR	4679228	Symbol	false		4678837						
ANR	4679229	Symbol	bufsize		4678837						
ANR	4679230	Symbol	i		4678837						
ANR	4679231	Symbol	R_REG_TYPE_LAST		4678837						
ANR	4679232	Symbol	r_reg_get_bytes		4678837						
ANR	4679233	Symbol	& size		4678837						
ANR	4679234	Symbol	* dbg		4678837						
ANR	4679235	Symbol	n		4678837						
ANR	4679236	Symbol	* * dbg -> reg		4678837						
ANR	4679237	Symbol	* dbg -> reg		4678837						
ANR	4679238	Symbol	r_debug_is_dead		4678837						
ANR	4679239	Symbol	buf		4678837						
ANR	4679240	Symbol	* i		4678837						
ANR	4679241	Symbol	size		4678837						
ANR	4679242	Symbol	* dbg -> reg -> regset [ i ] . regs		4678837						
ANR	4679243	Symbol	v		4678837						
ANR	4679244	Symbol	* n		4678837						
ANR	4679245	Symbol	true		4678837						
ANR	4679246	Symbol	dbg -> reg		4678837						
ANR	4679247	Symbol	* * * dbg -> reg		4678837						
ANR	4679248	Symbol	* * dbg		4678837						
ANR	4679249	Symbol	dbg -> reg -> regset [ i ] . regs -> length		4678837						
ANR	4679250	Function	r_debug_reg_list	85:0:2670:8214							
ANR	4679251	FunctionDef	"r_debug_reg_list (RDebug * dbg , int type , int size , int rad , const char * use_color)"		4679250	0					
ANR	4679252	CompoundStatement		85:92:2762:8214	4679250	0					
ANR	4679253	IdentifierDeclStatement	"int i , delta , from , to , cols , n = 0 ;"	86:1:2765:2800	4679250	0	True				
ANR	4679254	IdentifierDecl	i		4679250	0					
ANR	4679255	IdentifierDeclType	int		4679250	0					
ANR	4679256	Identifier	i		4679250	1					
ANR	4679257	IdentifierDecl	delta		4679250	1					
ANR	4679258	IdentifierDeclType	int		4679250	0					
ANR	4679259	Identifier	delta		4679250	1					
ANR	4679260	IdentifierDecl	from		4679250	2					
ANR	4679261	IdentifierDeclType	int		4679250	0					
ANR	4679262	Identifier	from		4679250	1					
ANR	4679263	IdentifierDecl	to		4679250	3					
ANR	4679264	IdentifierDeclType	int		4679250	0					
ANR	4679265	Identifier	to		4679250	1					
ANR	4679266	IdentifierDecl	cols		4679250	4					
ANR	4679267	IdentifierDeclType	int		4679250	0					
ANR	4679268	Identifier	cols		4679250	1					
ANR	4679269	IdentifierDecl	n = 0		4679250	5					
ANR	4679270	IdentifierDeclType	int		4679250	0					
ANR	4679271	Identifier	n		4679250	1					
ANR	4679272	AssignmentExpression	n = 0		4679250	2		=			
ANR	4679273	Identifier	n		4679250	0					
ANR	4679274	PrimaryExpression	0		4679250	1					
ANR	4679275	IdentifierDeclStatement	"const char * fmt , * fmt2 , * kwhites ;"	87:1:2803:2835	4679250	1	True				
ANR	4679276	IdentifierDecl	* fmt		4679250	0					
ANR	4679277	IdentifierDeclType	const char *		4679250	0					
ANR	4679278	Identifier	fmt		4679250	1					
ANR	4679279	IdentifierDecl	* fmt2		4679250	1					
ANR	4679280	IdentifierDeclType	const char *		4679250	0					
ANR	4679281	Identifier	fmt2		4679250	1					
ANR	4679282	IdentifierDecl	* kwhites		4679250	2					
ANR	4679283	IdentifierDeclType	const char *		4679250	0					
ANR	4679284	Identifier	kwhites		4679250	1					
ANR	4679285	IdentifierDeclStatement	RPrint * pr = NULL ;	88:1:2838:2855	4679250	2	True				
ANR	4679286	IdentifierDecl	* pr = NULL		4679250	0					
ANR	4679287	IdentifierDeclType	RPrint *		4679250	0					
ANR	4679288	Identifier	pr		4679250	1					
ANR	4679289	AssignmentExpression	* pr = NULL		4679250	2		=			
ANR	4679290	Identifier	NULL		4679250	0					
ANR	4679291	Identifier	NULL		4679250	1					
ANR	4679292	IdentifierDeclStatement	int colwidth = 20 ;	89:1:2858:2875	4679250	3	True				
ANR	4679293	IdentifierDecl	colwidth = 20		4679250	0					
ANR	4679294	IdentifierDeclType	int		4679250	0					
ANR	4679295	Identifier	colwidth		4679250	1					
ANR	4679296	AssignmentExpression	colwidth = 20		4679250	2		=			
ANR	4679297	Identifier	colwidth		4679250	0					
ANR	4679298	PrimaryExpression	20		4679250	1					
ANR	4679299	IdentifierDeclStatement	RListIter * iter ;	90:1:2878:2893	4679250	4	True				
ANR	4679300	IdentifierDecl	* iter		4679250	0					
ANR	4679301	IdentifierDeclType	RListIter *		4679250	0					
ANR	4679302	Identifier	iter		4679250	1					
ANR	4679303	IdentifierDeclStatement	RRegItem * item ;	91:1:2896:2910	4679250	5	True				
ANR	4679304	IdentifierDecl	* item		4679250	0					
ANR	4679305	IdentifierDeclType	RRegItem *		4679250	0					
ANR	4679306	Identifier	item		4679250	1					
ANR	4679307	IdentifierDeclStatement	RList * head ;	92:1:2913:2924	4679250	6	True				
ANR	4679308	IdentifierDecl	* head		4679250	0					
ANR	4679309	IdentifierDeclType	RList *		4679250	0					
ANR	4679310	Identifier	head		4679250	1					
ANR	4679311	IdentifierDeclStatement	ut64 diff ;	93:1:2927:2936	4679250	7	True				
ANR	4679312	IdentifierDecl	diff		4679250	0					
ANR	4679313	IdentifierDeclType	ut64		4679250	0					
ANR	4679314	Identifier	diff		4679250	1					
ANR	4679315	IdentifierDeclStatement	char strvalue [ 256 ] ;	94:1:2939:2957	4679250	8	True				
ANR	4679316	IdentifierDecl	strvalue [ 256 ]		4679250	0					
ANR	4679317	IdentifierDeclType	char [ 256 ]		4679250	0					
ANR	4679318	Identifier	strvalue		4679250	1					
ANR	4679319	PrimaryExpression	256		4679250	2					
ANR	4679320	IfStatement	if ( ! dbg || ! dbg -> reg )		4679250	9					
ANR	4679321	Condition	! dbg || ! dbg -> reg	95:5:2964:2980	4679250	0	True				
ANR	4679322	OrExpression	! dbg || ! dbg -> reg		4679250	0		||			
ANR	4679323	UnaryOperationExpression	! dbg		4679250	0					
ANR	4679324	UnaryOperator	!		4679250	0					
ANR	4679325	Identifier	dbg		4679250	1					
ANR	4679326	UnaryOperationExpression	! dbg -> reg		4679250	1					
ANR	4679327	UnaryOperator	!		4679250	0					
ANR	4679328	PtrMemberAccess	dbg -> reg		4679250	1					
ANR	4679329	Identifier	dbg		4679250	0					
ANR	4679330	Identifier	reg		4679250	1					
ANR	4679331	CompoundStatement		11:24:220:220	4679250	1					
ANR	4679332	ReturnStatement	return false ;	96:2:2987:2999	4679250	0	True				
ANR	4679333	Identifier	false		4679250	0					
ANR	4679334	IfStatement	if ( dbg -> corebind . core )		4679250	10					
ANR	4679335	Condition	dbg -> corebind . core	98:5:3009:3026	4679250	0	True				
ANR	4679336	MemberAccess	dbg -> corebind . core		4679250	0					
ANR	4679337	PtrMemberAccess	dbg -> corebind		4679250	0					
ANR	4679338	Identifier	dbg		4679250	0					
ANR	4679339	Identifier	corebind		4679250	1					
ANR	4679340	Identifier	core		4679250	1					
ANR	4679341	CompoundStatement		14:25:266:266	4679250	1					
ANR	4679342	ExpressionStatement	pr = ( ( RCore * ) dbg -> corebind . core ) -> print	99:2:3033:3073	4679250	0	True				
ANR	4679343	AssignmentExpression	pr = ( ( RCore * ) dbg -> corebind . core ) -> print		4679250	0		=			
ANR	4679344	Identifier	pr		4679250	0					
ANR	4679345	PtrMemberAccess	( ( RCore * ) dbg -> corebind . core ) -> print		4679250	1					
ANR	4679346	CastExpression	( RCore * ) dbg -> corebind . core		4679250	0					
ANR	4679347	CastTarget	RCore *		4679250	0					
ANR	4679348	MemberAccess	dbg -> corebind . core		4679250	1					
ANR	4679349	PtrMemberAccess	dbg -> corebind		4679250	0					
ANR	4679350	Identifier	dbg		4679250	0					
ANR	4679351	Identifier	corebind		4679250	1					
ANR	4679352	Identifier	core		4679250	1					
ANR	4679353	Identifier	print		4679250	1					
ANR	4679354	IfStatement	if ( size != 0 && ! ( dbg -> reg -> bits & size ) )		4679250	11					
ANR	4679355	Condition	size != 0 && ! ( dbg -> reg -> bits & size )	101:5:3083:3119	4679250	0	True				
ANR	4679356	AndExpression	size != 0 && ! ( dbg -> reg -> bits & size )		4679250	0		&&			
ANR	4679357	EqualityExpression	size != 0		4679250	0		!=			
ANR	4679358	Identifier	size		4679250	0					
ANR	4679359	PrimaryExpression	0		4679250	1					
ANR	4679360	UnaryOperationExpression	! ( dbg -> reg -> bits & size )		4679250	1					
ANR	4679361	UnaryOperator	!		4679250	0					
ANR	4679362	BitAndExpression	dbg -> reg -> bits & size		4679250	1		&			
ANR	4679363	PtrMemberAccess	dbg -> reg -> bits		4679250	0					
ANR	4679364	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679365	Identifier	dbg		4679250	0					
ANR	4679366	Identifier	reg		4679250	1					
ANR	4679367	Identifier	bits		4679250	1					
ANR	4679368	Identifier	size		4679250	1					
ANR	4679369	CompoundStatement		17:44:359:359	4679250	1					
ANR	4679370	ExpressionStatement	size = 32	103:2:3184:3193	4679250	0	True				
ANR	4679371	AssignmentExpression	size = 32		4679250	0		=			
ANR	4679372	Identifier	size		4679250	0					
ANR	4679373	PrimaryExpression	32		4679250	1					
ANR	4679374	IfStatement	if ( dbg -> bits & R_SYS_BITS_64 )		4679250	12					
ANR	4679375	Condition	dbg -> bits & R_SYS_BITS_64	105:5:3203:3227	4679250	0	True				
ANR	4679376	BitAndExpression	dbg -> bits & R_SYS_BITS_64		4679250	0		&			
ANR	4679377	PtrMemberAccess	dbg -> bits		4679250	0					
ANR	4679378	Identifier	dbg		4679250	0					
ANR	4679379	Identifier	bits		4679250	1					
ANR	4679380	Identifier	R_SYS_BITS_64		4679250	1					
ANR	4679381	CompoundStatement		21:32:467:467	4679250	1					
ANR	4679382	ExpressionStatement	"fmt = ""%s = %s%s"""	107:2:3269:3286	4679250	0	True				
ANR	4679383	AssignmentExpression	"fmt = ""%s = %s%s"""		4679250	0		=			
ANR	4679384	Identifier	fmt		4679250	0					
ANR	4679385	PrimaryExpression	"""%s = %s%s"""		4679250	1					
ANR	4679386	ExpressionStatement	"fmt2 = ""%s%4s%s %s%s"""	108:2:3290:3311	4679250	1	True				
ANR	4679387	AssignmentExpression	"fmt2 = ""%s%4s%s %s%s"""		4679250	0		=			
ANR	4679388	Identifier	fmt2		4679250	0					
ANR	4679389	PrimaryExpression	"""%s%4s%s %s%s"""		4679250	1					
ANR	4679390	ExpressionStatement	"kwhites = ""         """	109:2:3315:3336	4679250	2	True				
ANR	4679391	AssignmentExpression	"kwhites = ""         """		4679250	0		=			
ANR	4679392	Identifier	kwhites		4679250	0					
ANR	4679393	PrimaryExpression	"""         """		4679250	1					
ANR	4679394	ExpressionStatement	colwidth = dbg -> regcols ? 20 : 25	110:2:3340:3371	4679250	3	True				
ANR	4679395	AssignmentExpression	colwidth = dbg -> regcols ? 20 : 25		4679250	0		=			
ANR	4679396	Identifier	colwidth		4679250	0					
ANR	4679397	ConditionalExpression	dbg -> regcols ? 20 : 25		4679250	1					
ANR	4679398	Condition	dbg -> regcols		4679250	0					
ANR	4679399	PtrMemberAccess	dbg -> regcols		4679250	0					
ANR	4679400	Identifier	dbg		4679250	0					
ANR	4679401	Identifier	regcols		4679250	1					
ANR	4679402	PrimaryExpression	20		4679250	1					
ANR	4679403	PrimaryExpression	25		4679250	2					
ANR	4679404	ExpressionStatement	cols = 3	111:2:3375:3383	4679250	4	True				
ANR	4679405	AssignmentExpression	cols = 3		4679250	0		=			
ANR	4679406	Identifier	cols		4679250	0					
ANR	4679407	PrimaryExpression	3		4679250	1					
ANR	4679408	ElseStatement	else		4679250	0					
ANR	4679409	CompoundStatement		28:8:630:630	4679250	0					
ANR	4679410	ExpressionStatement	"fmt = ""%s = %s%s"""	114:2:3432:3449	4679250	0	True				
ANR	4679411	AssignmentExpression	"fmt = ""%s = %s%s"""		4679250	0		=			
ANR	4679412	Identifier	fmt		4679250	0					
ANR	4679413	PrimaryExpression	"""%s = %s%s"""		4679250	1					
ANR	4679414	ExpressionStatement	"fmt2 = ""%s%4s%s %s%s"""	115:2:3453:3474	4679250	1	True				
ANR	4679415	AssignmentExpression	"fmt2 = ""%s%4s%s %s%s"""		4679250	0		=			
ANR	4679416	Identifier	fmt2		4679250	0					
ANR	4679417	PrimaryExpression	"""%s%4s%s %s%s"""		4679250	1					
ANR	4679418	ExpressionStatement	"kwhites = ""    """	116:2:3478:3494	4679250	2	True				
ANR	4679419	AssignmentExpression	"kwhites = ""    """		4679250	0		=			
ANR	4679420	Identifier	kwhites		4679250	0					
ANR	4679421	PrimaryExpression	"""    """		4679250	1					
ANR	4679422	ExpressionStatement	colwidth = 20	117:2:3498:3511	4679250	3	True				
ANR	4679423	AssignmentExpression	colwidth = 20		4679250	0		=			
ANR	4679424	Identifier	colwidth		4679250	0					
ANR	4679425	PrimaryExpression	20		4679250	1					
ANR	4679426	ExpressionStatement	cols = 4	118:2:3515:3523	4679250	4	True				
ANR	4679427	AssignmentExpression	cols = 4		4679250	0		=			
ANR	4679428	Identifier	cols		4679250	0					
ANR	4679429	PrimaryExpression	4		4679250	1					
ANR	4679430	IfStatement	if ( dbg -> regcols )		4679250	13					
ANR	4679431	Condition	dbg -> regcols	120:5:3533:3544	4679250	0	True				
ANR	4679432	PtrMemberAccess	dbg -> regcols		4679250	0					
ANR	4679433	Identifier	dbg		4679250	0					
ANR	4679434	Identifier	regcols		4679250	1					
ANR	4679435	CompoundStatement		36:19:784:784	4679250	1					
ANR	4679436	ExpressionStatement	cols = dbg -> regcols	121:2:3551:3570	4679250	0	True				
ANR	4679437	AssignmentExpression	cols = dbg -> regcols		4679250	0		=			
ANR	4679438	Identifier	cols		4679250	0					
ANR	4679439	PtrMemberAccess	dbg -> regcols		4679250	1					
ANR	4679440	Identifier	dbg		4679250	0					
ANR	4679441	Identifier	regcols		4679250	1					
ANR	4679442	IfStatement	if ( rad == 'j' )		4679250	14					
ANR	4679443	Condition	rad == 'j'	123:5:3580:3589	4679250	0	True				
ANR	4679444	EqualityExpression	rad == 'j'		4679250	0		==			
ANR	4679445	Identifier	rad		4679250	0					
ANR	4679446	PrimaryExpression	'j'		4679250	1					
ANR	4679447	CompoundStatement		39:17:829:829	4679250	1					
ANR	4679448	ExpressionStatement	"dbg -> cb_printf ( ""{"" )"	124:2:3596:3616	4679250	0	True				
ANR	4679449	CallExpression	"dbg -> cb_printf ( ""{"" )"		4679250	0					
ANR	4679450	Callee	dbg -> cb_printf		4679250	0					
ANR	4679451	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4679452	Identifier	dbg		4679250	0					
ANR	4679453	Identifier	cb_printf		4679250	1					
ANR	4679454	ArgumentList	"""{"""		4679250	1					
ANR	4679455	Argument	"""{"""		4679250	0					
ANR	4679456	PrimaryExpression	"""{"""		4679250	0					
ANR	4679457	ExpressionStatement	from = 0	128:1:3700:3708	4679250	15	True				
ANR	4679458	AssignmentExpression	from = 0		4679250	0		=			
ANR	4679459	Identifier	from		4679250	0					
ANR	4679460	PrimaryExpression	0		4679250	1					
ANR	4679461	ExpressionStatement	to = R_REG_TYPE_LAST	129:1:3711:3731	4679250	16	True				
ANR	4679462	AssignmentExpression	to = R_REG_TYPE_LAST		4679250	0		=			
ANR	4679463	Identifier	to		4679250	0					
ANR	4679464	Identifier	R_REG_TYPE_LAST		4679250	1					
ANR	4679465	IdentifierDeclStatement	int itmidx = - 1 ;	131:1:3735:3750	4679250	17	True				
ANR	4679466	IdentifierDecl	itmidx = - 1		4679250	0					
ANR	4679467	IdentifierDeclType	int		4679250	0					
ANR	4679468	Identifier	itmidx		4679250	1					
ANR	4679469	AssignmentExpression	itmidx = - 1		4679250	2		=			
ANR	4679470	Identifier	itmidx		4679250	0					
ANR	4679471	UnaryOperationExpression	- 1		4679250	1					
ANR	4679472	UnaryOperator	-		4679250	0					
ANR	4679473	PrimaryExpression	1		4679250	1					
ANR	4679474	ExpressionStatement	dbg -> creg = NULL	132:1:3753:3769	4679250	18	True				
ANR	4679475	AssignmentExpression	dbg -> creg = NULL		4679250	0		=			
ANR	4679476	PtrMemberAccess	dbg -> creg		4679250	0					
ANR	4679477	Identifier	dbg		4679250	0					
ANR	4679478	Identifier	creg		4679250	1					
ANR	4679479	Identifier	NULL		4679250	1					
ANR	4679480	ForStatement	for ( i = from ; i < to ; i ++ )		4679250	19					
ANR	4679481	ForInit	i = from ;	133:6:3777:3785	4679250	0	True				
ANR	4679482	AssignmentExpression	i = from		4679250	0		=			
ANR	4679483	Identifier	i		4679250	0					
ANR	4679484	Identifier	from		4679250	1					
ANR	4679485	Condition	i < to	133:16:3787:3792	4679250	1	True				
ANR	4679486	RelationalExpression	i < to		4679250	0		<			
ANR	4679487	Identifier	i		4679250	0					
ANR	4679488	Identifier	to		4679250	1					
ANR	4679489	PostIncDecOperationExpression	i ++	133:24:3795:3797	4679250	2	True				
ANR	4679490	Identifier	i		4679250	0					
ANR	4679491	IncDec	++		4679250	1					
ANR	4679492	CompoundStatement		49:29:1037:1037	4679250	3					
ANR	4679493	ExpressionStatement	"head = r_reg_get_list ( dbg -> reg , i )"	134:2:3804:3839	4679250	0	True				
ANR	4679494	AssignmentExpression	"head = r_reg_get_list ( dbg -> reg , i )"		4679250	0		=			
ANR	4679495	Identifier	head		4679250	0					
ANR	4679496	CallExpression	"r_reg_get_list ( dbg -> reg , i )"		4679250	1					
ANR	4679497	Callee	r_reg_get_list		4679250	0					
ANR	4679498	Identifier	r_reg_get_list		4679250	0					
ANR	4679499	ArgumentList	dbg -> reg		4679250	1					
ANR	4679500	Argument	dbg -> reg		4679250	0					
ANR	4679501	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679502	Identifier	dbg		4679250	0					
ANR	4679503	Identifier	reg		4679250	1					
ANR	4679504	Argument	i		4679250	1					
ANR	4679505	Identifier	i		4679250	0					
ANR	4679506	IfStatement	if ( ! head )		4679250	1					
ANR	4679507	Condition	! head	135:6:3847:3851	4679250	0	True				
ANR	4679508	UnaryOperationExpression	! head		4679250	0					
ANR	4679509	UnaryOperator	!		4679250	0					
ANR	4679510	Identifier	head		4679250	1					
ANR	4679511	CompoundStatement		51:13:1091:1091	4679250	1					
ANR	4679512	ContinueStatement	continue ;	136:3:3859:3867	4679250	0	True				
ANR	4679513	Statement	r_list_foreach	138:2:3875:3888	4679250	2	True				
ANR	4679514	Statement	(	138:17:3890:3890	4679250	3	True				
ANR	4679515	Statement	head	138:18:3891:3894	4679250	4	True				
ANR	4679516	Statement	","	138:22:3895:3895	4679250	5	True				
ANR	4679517	Statement	iter	138:24:3897:3900	4679250	6	True				
ANR	4679518	Statement	","	138:28:3901:3901	4679250	7	True				
ANR	4679519	Statement	item	138:30:3903:3906	4679250	8	True				
ANR	4679520	Statement	)	138:34:3907:3907	4679250	9	True				
ANR	4679521	CompoundStatement		87:3:1897:1921	4679250	10					
ANR	4679522	IdentifierDeclStatement	ut64 value ;	139:3:3914:3924	4679250	0	True				
ANR	4679523	IdentifierDecl	value		4679250	0					
ANR	4679524	IdentifierDeclType	ut64		4679250	0					
ANR	4679525	Identifier	value		4679250	1					
ANR	4679526	IdentifierDeclStatement	utX valueBig ;	140:3:3929:3941	4679250	1	True				
ANR	4679527	IdentifierDecl	valueBig		4679250	0					
ANR	4679528	IdentifierDeclType	utX		4679250	0					
ANR	4679529	Identifier	valueBig		4679250	1					
ANR	4679530	IfStatement	if ( type != - 1 )		4679250	2					
ANR	4679531	Condition	type != - 1	141:7:3950:3959	4679250	0	True				
ANR	4679532	EqualityExpression	type != - 1		4679250	0		!=			
ANR	4679533	Identifier	type		4679250	0					
ANR	4679534	UnaryOperationExpression	- 1		4679250	1					
ANR	4679535	UnaryOperator	-		4679250	0					
ANR	4679536	PrimaryExpression	1		4679250	1					
ANR	4679537	CompoundStatement		57:19:1199:1199	4679250	1					
ANR	4679538	IfStatement	if ( type != item -> type && R_REG_TYPE_FLG != item -> type )		4679250	0					
ANR	4679539	Condition	type != item -> type && R_REG_TYPE_FLG != item -> type	142:8:3972:4021	4679250	0	True				
ANR	4679540	AndExpression	type != item -> type && R_REG_TYPE_FLG != item -> type		4679250	0		&&			
ANR	4679541	EqualityExpression	type != item -> type		4679250	0		!=			
ANR	4679542	Identifier	type		4679250	0					
ANR	4679543	PtrMemberAccess	item -> type		4679250	1					
ANR	4679544	Identifier	item		4679250	0					
ANR	4679545	Identifier	type		4679250	1					
ANR	4679546	EqualityExpression	R_REG_TYPE_FLG != item -> type		4679250	1		!=			
ANR	4679547	Identifier	R_REG_TYPE_FLG		4679250	0					
ANR	4679548	PtrMemberAccess	item -> type		4679250	1					
ANR	4679549	Identifier	item		4679250	0					
ANR	4679550	Identifier	type		4679250	1					
ANR	4679551	CompoundStatement		58:60:1261:1261	4679250	1					
ANR	4679552	ContinueStatement	continue ;	143:5:4031:4039	4679250	0	True				
ANR	4679553	IfStatement	if ( size != 0 && size != item -> size )		4679250	1					
ANR	4679554	Condition	size != 0 && size != item -> size	145:8:4055:4085	4679250	0	True				
ANR	4679555	AndExpression	size != 0 && size != item -> size		4679250	0		&&			
ANR	4679556	EqualityExpression	size != 0		4679250	0		!=			
ANR	4679557	Identifier	size		4679250	0					
ANR	4679558	PrimaryExpression	0		4679250	1					
ANR	4679559	EqualityExpression	size != item -> size		4679250	1		!=			
ANR	4679560	Identifier	size		4679250	0					
ANR	4679561	PtrMemberAccess	item -> size		4679250	1					
ANR	4679562	Identifier	item		4679250	0					
ANR	4679563	Identifier	size		4679250	1					
ANR	4679564	CompoundStatement		61:41:1325:1325	4679250	1					
ANR	4679565	ContinueStatement	continue ;	146:5:4095:4103	4679250	0	True				
ANR	4679566	IfStatement	if ( dbg -> q_regs )		4679250	3					
ANR	4679567	Condition	dbg -> q_regs	150:7:4159:4169	4679250	0	True				
ANR	4679568	PtrMemberAccess	dbg -> q_regs		4679250	0					
ANR	4679569	Identifier	dbg		4679250	0					
ANR	4679570	Identifier	q_regs		4679250	1					
ANR	4679571	CompoundStatement		66:20:1409:1409	4679250	1					
ANR	4679572	IfStatement	if ( ! r_list_empty ( dbg -> q_regs ) )		4679250	0					
ANR	4679573	Condition	! r_list_empty ( dbg -> q_regs )	151:8:4182:4208	4679250	0	True				
ANR	4679574	UnaryOperationExpression	! r_list_empty ( dbg -> q_regs )		4679250	0					
ANR	4679575	UnaryOperator	!		4679250	0					
ANR	4679576	CallExpression	r_list_empty ( dbg -> q_regs )		4679250	1					
ANR	4679577	Callee	r_list_empty		4679250	0					
ANR	4679578	Identifier	r_list_empty		4679250	0					
ANR	4679579	ArgumentList	dbg -> q_regs		4679250	1					
ANR	4679580	Argument	dbg -> q_regs		4679250	0					
ANR	4679581	PtrMemberAccess	dbg -> q_regs		4679250	0					
ANR	4679582	Identifier	dbg		4679250	0					
ANR	4679583	Identifier	q_regs		4679250	1					
ANR	4679584	CompoundStatement		71:5:1532:1550	4679250	1					
ANR	4679585	IdentifierDeclStatement	RListIter * iterreg ;	152:5:4218:4236	4679250	0	True				
ANR	4679586	IdentifierDecl	* iterreg		4679250	0					
ANR	4679587	IdentifierDeclType	RListIter *		4679250	0					
ANR	4679588	Identifier	iterreg		4679250	1					
ANR	4679589	IdentifierDeclStatement	RList * q_reg = dbg -> q_regs ;	153:5:4243:4269	4679250	1	True				
ANR	4679590	IdentifierDecl	* q_reg = dbg -> q_regs		4679250	0					
ANR	4679591	IdentifierDeclType	RList *		4679250	0					
ANR	4679592	Identifier	q_reg		4679250	1					
ANR	4679593	AssignmentExpression	* q_reg = dbg -> q_regs		4679250	2		=			
ANR	4679594	Identifier	q_reg		4679250	0					
ANR	4679595	PtrMemberAccess	dbg -> q_regs		4679250	1					
ANR	4679596	Identifier	dbg		4679250	0					
ANR	4679597	Identifier	q_regs		4679250	1					
ANR	4679598	IdentifierDeclStatement	char * q_name ;	154:5:4276:4288	4679250	2	True				
ANR	4679599	IdentifierDecl	* q_name		4679250	0					
ANR	4679600	IdentifierDeclType	char *		4679250	0					
ANR	4679601	Identifier	q_name		4679250	1					
ANR	4679602	IdentifierDeclStatement	bool found = false ;	155:5:4295:4313	4679250	3	True				
ANR	4679603	IdentifierDecl	found = false		4679250	0					
ANR	4679604	IdentifierDeclType	bool		4679250	0					
ANR	4679605	Identifier	found		4679250	1					
ANR	4679606	AssignmentExpression	found = false		4679250	2		=			
ANR	4679607	Identifier	false		4679250	0					
ANR	4679608	Identifier	false		4679250	1					
ANR	4679609	Statement	r_list_foreach	156:5:4320:4333	4679250	4	True				
ANR	4679610	Statement	(	156:20:4335:4335	4679250	5	True				
ANR	4679611	Statement	q_reg	156:21:4336:4340	4679250	6	True				
ANR	4679612	Statement	","	156:26:4341:4341	4679250	7	True				
ANR	4679613	Statement	iterreg	156:28:4343:4349	4679250	8	True				
ANR	4679614	Statement	","	156:35:4350:4350	4679250	9	True				
ANR	4679615	Statement	q_name	156:37:4352:4357	4679250	10	True				
ANR	4679616	Statement	)	156:43:4358:4358	4679250	11	True				
ANR	4679617	CompoundStatement		72:45:1597:1597	4679250	12					
ANR	4679618	IfStatement	"if ( ! strcmp ( item -> name , q_name ) )"		4679250	0					
ANR	4679619	Condition	"! strcmp ( item -> name , q_name )"	157:10:4372:4399	4679250	0	True				
ANR	4679620	UnaryOperationExpression	"! strcmp ( item -> name , q_name )"		4679250	0					
ANR	4679621	UnaryOperator	!		4679250	0					
ANR	4679622	CallExpression	"strcmp ( item -> name , q_name )"		4679250	1					
ANR	4679623	Callee	strcmp		4679250	0					
ANR	4679624	Identifier	strcmp		4679250	0					
ANR	4679625	ArgumentList	item -> name		4679250	1					
ANR	4679626	Argument	item -> name		4679250	0					
ANR	4679627	PtrMemberAccess	item -> name		4679250	0					
ANR	4679628	Identifier	item		4679250	0					
ANR	4679629	Identifier	name		4679250	1					
ANR	4679630	Argument	q_name		4679250	1					
ANR	4679631	Identifier	q_name		4679250	0					
ANR	4679632	CompoundStatement		73:40:1639:1639	4679250	1					
ANR	4679633	ExpressionStatement	found = true	158:7:4411:4423	4679250	0	True				
ANR	4679634	AssignmentExpression	found = true		4679250	0		=			
ANR	4679635	Identifier	found		4679250	0					
ANR	4679636	Identifier	true		4679250	1					
ANR	4679637	BreakStatement	break ;	159:7:4432:4437	4679250	1	True				
ANR	4679638	IfStatement	if ( ! found )		4679250	13					
ANR	4679639	Condition	! found	162:9:4463:4468	4679250	0	True				
ANR	4679640	UnaryOperationExpression	! found		4679250	0					
ANR	4679641	UnaryOperator	!		4679250	0					
ANR	4679642	Identifier	found		4679250	1					
ANR	4679643	CompoundStatement		78:17:1708:1708	4679250	1					
ANR	4679644	ContinueStatement	continue ;	163:13:4486:4494	4679250	0	True				
ANR	4679645	ExpressionStatement	"r_list_delete ( q_reg , iterreg )"	165:5:4508:4538	4679250	14	True				
ANR	4679646	CallExpression	"r_list_delete ( q_reg , iterreg )"		4679250	0					
ANR	4679647	Callee	r_list_delete		4679250	0					
ANR	4679648	Identifier	r_list_delete		4679250	0					
ANR	4679649	ArgumentList	q_reg		4679250	1					
ANR	4679650	Argument	q_reg		4679250	0					
ANR	4679651	Identifier	q_reg		4679250	0					
ANR	4679652	Argument	iterreg		4679250	1					
ANR	4679653	Identifier	iterreg		4679250	0					
ANR	4679654	ElseStatement	else		4679250	0					
ANR	4679655	CompoundStatement		82:11:1788:1788	4679250	0					
ANR	4679656	GotoStatement	goto beach ;	168:5:4634:4644	4679250	0	True				
ANR	4679657	Identifier	beach		4679250	0					
ANR	4679658	IdentifierDeclStatement	int regSize = item -> size ;	171:3:4660:4684	4679250	4	True				
ANR	4679659	IdentifierDecl	regSize = item -> size		4679250	0					
ANR	4679660	IdentifierDeclType	int		4679250	0					
ANR	4679661	Identifier	regSize		4679250	1					
ANR	4679662	AssignmentExpression	regSize = item -> size		4679250	2		=			
ANR	4679663	Identifier	regSize		4679250	0					
ANR	4679664	PtrMemberAccess	item -> size		4679250	1					
ANR	4679665	Identifier	item		4679250	0					
ANR	4679666	Identifier	size		4679250	1					
ANR	4679667	IfStatement	if ( regSize < 80 )		4679250	5					
ANR	4679668	Condition	regSize < 80	172:7:4693:4704	4679250	0	True				
ANR	4679669	RelationalExpression	regSize < 80		4679250	0		<			
ANR	4679670	Identifier	regSize		4679250	0					
ANR	4679671	PrimaryExpression	80		4679250	1					
ANR	4679672	CompoundStatement		88:21:1944:1944	4679250	1					
ANR	4679673	ExpressionStatement	"value = r_reg_get_value ( dbg -> reg , item )"	173:4:4713:4753	4679250	0	True				
ANR	4679674	AssignmentExpression	"value = r_reg_get_value ( dbg -> reg , item )"		4679250	0		=			
ANR	4679675	Identifier	value		4679250	0					
ANR	4679676	CallExpression	"r_reg_get_value ( dbg -> reg , item )"		4679250	1					
ANR	4679677	Callee	r_reg_get_value		4679250	0					
ANR	4679678	Identifier	r_reg_get_value		4679250	0					
ANR	4679679	ArgumentList	dbg -> reg		4679250	1					
ANR	4679680	Argument	dbg -> reg		4679250	0					
ANR	4679681	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679682	Identifier	dbg		4679250	0					
ANR	4679683	Identifier	reg		4679250	1					
ANR	4679684	Argument	item		4679250	1					
ANR	4679685	Identifier	item		4679250	0					
ANR	4679686	ExpressionStatement	"r_reg_arena_swap ( dbg -> reg , false )"	174:4:4759:4793	4679250	1	True				
ANR	4679687	CallExpression	"r_reg_arena_swap ( dbg -> reg , false )"		4679250	0					
ANR	4679688	Callee	r_reg_arena_swap		4679250	0					
ANR	4679689	Identifier	r_reg_arena_swap		4679250	0					
ANR	4679690	ArgumentList	dbg -> reg		4679250	1					
ANR	4679691	Argument	dbg -> reg		4679250	0					
ANR	4679692	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679693	Identifier	dbg		4679250	0					
ANR	4679694	Identifier	reg		4679250	1					
ANR	4679695	Argument	false		4679250	1					
ANR	4679696	Identifier	false		4679250	0					
ANR	4679697	ExpressionStatement	"diff = r_reg_get_value ( dbg -> reg , item )"	175:4:4799:4838	4679250	2	True				
ANR	4679698	AssignmentExpression	"diff = r_reg_get_value ( dbg -> reg , item )"		4679250	0		=			
ANR	4679699	Identifier	diff		4679250	0					
ANR	4679700	CallExpression	"r_reg_get_value ( dbg -> reg , item )"		4679250	1					
ANR	4679701	Callee	r_reg_get_value		4679250	0					
ANR	4679702	Identifier	r_reg_get_value		4679250	0					
ANR	4679703	ArgumentList	dbg -> reg		4679250	1					
ANR	4679704	Argument	dbg -> reg		4679250	0					
ANR	4679705	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679706	Identifier	dbg		4679250	0					
ANR	4679707	Identifier	reg		4679250	1					
ANR	4679708	Argument	item		4679250	1					
ANR	4679709	Identifier	item		4679250	0					
ANR	4679710	ExpressionStatement	"r_reg_arena_swap ( dbg -> reg , false )"	176:4:4844:4878	4679250	3	True				
ANR	4679711	CallExpression	"r_reg_arena_swap ( dbg -> reg , false )"		4679250	0					
ANR	4679712	Callee	r_reg_arena_swap		4679250	0					
ANR	4679713	Identifier	r_reg_arena_swap		4679250	0					
ANR	4679714	ArgumentList	dbg -> reg		4679250	1					
ANR	4679715	Argument	dbg -> reg		4679250	0					
ANR	4679716	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679717	Identifier	dbg		4679250	0					
ANR	4679718	Identifier	reg		4679250	1					
ANR	4679719	Argument	false		4679250	1					
ANR	4679720	Identifier	false		4679250	0					
ANR	4679721	ExpressionStatement	delta = value - diff	177:4:4884:4902	4679250	4	True				
ANR	4679722	AssignmentExpression	delta = value - diff		4679250	0		=			
ANR	4679723	Identifier	delta		4679250	0					
ANR	4679724	AdditiveExpression	value - diff		4679250	1		-			
ANR	4679725	Identifier	value		4679250	0					
ANR	4679726	Identifier	diff		4679250	1					
ANR	4679727	IfStatement	if ( tolower ( ( ut8 ) rad ) == 'j' )		4679250	5					
ANR	4679728	Condition	tolower ( ( ut8 ) rad ) == 'j'	178:8:4912:4936	4679250	0	True				
ANR	4679729	EqualityExpression	tolower ( ( ut8 ) rad ) == 'j'		4679250	0		==			
ANR	4679730	CallExpression	tolower ( ( ut8 ) rad )		4679250	0					
ANR	4679731	Callee	tolower		4679250	0					
ANR	4679732	Identifier	tolower		4679250	0					
ANR	4679733	ArgumentList	( ut8 ) rad		4679250	1					
ANR	4679734	Argument	( ut8 ) rad		4679250	0					
ANR	4679735	CastExpression	( ut8 ) rad		4679250	0					
ANR	4679736	CastTarget	ut8		4679250	0					
ANR	4679737	Identifier	rad		4679250	1					
ANR	4679738	PrimaryExpression	'j'		4679250	1					
ANR	4679739	CompoundStatement		94:35:2176:2176	4679250	1					
ANR	4679740	Statement	snprintf	179:5:4946:4953	4679250	0	True				
ANR	4679741	Statement	(	179:14:4955:4955	4679250	1	True				
ANR	4679742	Statement	strvalue	179:15:4956:4963	4679250	2	True				
ANR	4679743	Statement	","	179:23:4964:4964	4679250	3	True				
ANR	4679744	Statement	sizeof	179:25:4966:4971	4679250	4	True				
ANR	4679745	Statement	(	179:32:4973:4973	4679250	5	True				
ANR	4679746	Statement	strvalue	179:33:4974:4981	4679250	6	True				
ANR	4679747	Statement	)	179:41:4982:4982	4679250	7	True				
ANR	4679748	Statement	","	179:42:4983:4983	4679250	8	True				
ANR	4679749	Statement	"""%"""	179:43:4984:4986	4679250	9	True				
ANR	4679750	Statement	PFMT64u	179:46:4987:4993	4679250	10	True				
ANR	4679751	Statement	","	179:53:4994:4994	4679250	11	True				
ANR	4679752	Statement	value	179:55:4996:5000	4679250	12	True				
ANR	4679753	Statement	)	179:60:5001:5001	4679250	13	True				
ANR	4679754	ExpressionStatement		179:61:5002:5002	4679250	14	True				
ANR	4679755	ElseStatement	else		4679250	0					
ANR	4679756	CompoundStatement		96:11:2252:2252	4679250	0					
ANR	4679757	IfStatement	if ( pr && pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64 )		4679250	0					
ANR	4679758	Condition	pr && pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64	181:9:5026:5076	4679250	0	True				
ANR	4679759	AndExpression	pr && pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64		4679250	0		&&			
ANR	4679760	Identifier	pr		4679250	0					
ANR	4679761	AndExpression	pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64		4679250	1		&&			
ANR	4679762	PtrMemberAccess	pr -> wide_offsets		4679250	0					
ANR	4679763	Identifier	pr		4679250	0					
ANR	4679764	Identifier	wide_offsets		4679250	1					
ANR	4679765	BitAndExpression	dbg -> bits & R_SYS_BITS_64		4679250	1		&			
ANR	4679766	PtrMemberAccess	dbg -> bits		4679250	0					
ANR	4679767	Identifier	dbg		4679250	0					
ANR	4679768	Identifier	bits		4679250	1					
ANR	4679769	Identifier	R_SYS_BITS_64		4679250	1					
ANR	4679770	CompoundStatement		97:62:2316:2316	4679250	1					
ANR	4679771	Statement	snprintf	182:6:5087:5094	4679250	0	True				
ANR	4679772	Statement	(	182:15:5096:5096	4679250	1	True				
ANR	4679773	Statement	strvalue	182:16:5097:5104	4679250	2	True				
ANR	4679774	Statement	","	182:24:5105:5105	4679250	3	True				
ANR	4679775	Statement	sizeof	182:26:5107:5112	4679250	4	True				
ANR	4679776	Statement	(	182:33:5114:5114	4679250	5	True				
ANR	4679777	Statement	strvalue	182:34:5115:5122	4679250	6	True				
ANR	4679778	Statement	)	182:42:5123:5123	4679250	7	True				
ANR	4679779	Statement	","	182:43:5124:5124	4679250	8	True				
ANR	4679780	Statement	"""0x%016"""	182:44:5125:5132	4679250	9	True				
ANR	4679781	Statement	PFMT64x	182:52:5133:5139	4679250	10	True				
ANR	4679782	Statement	","	182:59:5140:5140	4679250	11	True				
ANR	4679783	Statement	value	182:61:5142:5146	4679250	12	True				
ANR	4679784	Statement	)	182:66:5147:5147	4679250	13	True				
ANR	4679785	ExpressionStatement		182:67:5148:5148	4679250	14	True				
ANR	4679786	ElseStatement	else		4679250	0					
ANR	4679787	CompoundStatement		99:12:2399:2399	4679250	0					
ANR	4679788	Statement	snprintf	184:6:5170:5177	4679250	0	True				
ANR	4679789	Statement	(	184:15:5179:5179	4679250	1	True				
ANR	4679790	Statement	strvalue	184:16:5180:5187	4679250	2	True				
ANR	4679791	Statement	","	184:24:5188:5188	4679250	3	True				
ANR	4679792	Statement	sizeof	184:26:5190:5195	4679250	4	True				
ANR	4679793	Statement	(	184:33:5197:5197	4679250	5	True				
ANR	4679794	Statement	strvalue	184:34:5198:5205	4679250	6	True				
ANR	4679795	Statement	)	184:42:5206:5206	4679250	7	True				
ANR	4679796	Statement	","	184:43:5207:5207	4679250	8	True				
ANR	4679797	Statement	"""0x%08"""	184:44:5208:5214	4679250	9	True				
ANR	4679798	Statement	PFMT64x	184:51:5215:5221	4679250	10	True				
ANR	4679799	Statement	","	184:58:5222:5222	4679250	11	True				
ANR	4679800	Statement	value	184:60:5224:5228	4679250	12	True				
ANR	4679801	Statement	)	184:65:5229:5229	4679250	13	True				
ANR	4679802	ExpressionStatement		184:66:5230:5230	4679250	14	True				
ANR	4679803	ElseStatement	else		4679250	0					
ANR	4679804	CompoundStatement		103:10:2492:2492	4679250	0					
ANR	4679805	ExpressionStatement	"value = r_reg_get_value_big ( dbg -> reg , item , & valueBig )"	188:4:5261:5316	4679250	0	True				
ANR	4679806	AssignmentExpression	"value = r_reg_get_value_big ( dbg -> reg , item , & valueBig )"		4679250	0		=			
ANR	4679807	Identifier	value		4679250	0					
ANR	4679808	CallExpression	"r_reg_get_value_big ( dbg -> reg , item , & valueBig )"		4679250	1					
ANR	4679809	Callee	r_reg_get_value_big		4679250	0					
ANR	4679810	Identifier	r_reg_get_value_big		4679250	0					
ANR	4679811	ArgumentList	dbg -> reg		4679250	1					
ANR	4679812	Argument	dbg -> reg		4679250	0					
ANR	4679813	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4679814	Identifier	dbg		4679250	0					
ANR	4679815	Identifier	reg		4679250	1					
ANR	4679816	Argument	item		4679250	1					
ANR	4679817	Identifier	item		4679250	0					
ANR	4679818	Argument	& valueBig		4679250	2					
ANR	4679819	UnaryOperationExpression	& valueBig		4679250	0					
ANR	4679820	UnaryOperator	&		4679250	0					
ANR	4679821	Identifier	valueBig		4679250	1					
ANR	4679822	SwitchStatement	switch ( regSize )		4679250	1					
ANR	4679823	Condition	regSize	189:12:5330:5336	4679250	0	True				
ANR	4679824	Identifier	regSize		4679250	0					
ANR	4679825	CompoundStatement		105:21:2576:2576	4679250	1					
ANR	4679826	Label	case 80 :	190:4:5345:5352	4679250	0	True				
ANR	4679827	Statement	snprintf	191:5:5359:5366	4679250	1	True				
ANR	4679828	Statement	(	191:14:5368:5368	4679250	2	True				
ANR	4679829	Statement	strvalue	191:15:5369:5376	4679250	3	True				
ANR	4679830	Statement	","	191:23:5377:5377	4679250	4	True				
ANR	4679831	Statement	sizeof	191:25:5379:5384	4679250	5	True				
ANR	4679832	Statement	(	191:32:5386:5386	4679250	6	True				
ANR	4679833	Statement	strvalue	191:33:5387:5394	4679250	7	True				
ANR	4679834	Statement	)	191:41:5395:5395	4679250	8	True				
ANR	4679835	Statement	","	191:42:5396:5396	4679250	9	True				
ANR	4679836	Statement	"""0x%04x%016"""	191:44:5398:5409	4679250	10	True				
ANR	4679837	Statement	PFMT64x	191:56:5410:5416	4679250	11	True				
ANR	4679838	Statement	""""""	191:63:5417:5418	4679250	12	True				
ANR	4679839	Statement	","	191:65:5419:5419	4679250	13	True				
ANR	4679840	Statement	valueBig	191:67:5421:5428	4679250	14	True				
ANR	4679841	Statement	.	191:75:5429:5429	4679250	15	True				
ANR	4679842	Statement	v80	191:76:5430:5432	4679250	16	True				
ANR	4679843	Statement	.	191:79:5433:5433	4679250	17	True				
ANR	4679844	Statement	High	191:80:5434:5437	4679250	18	True				
ANR	4679845	Statement	","	191:84:5438:5438	4679250	19	True				
ANR	4679846	Statement	valueBig	191:86:5440:5447	4679250	20	True				
ANR	4679847	Statement	.	191:94:5448:5448	4679250	21	True				
ANR	4679848	Statement	v80	191:95:5449:5451	4679250	22	True				
ANR	4679849	Statement	.	191:98:5452:5452	4679250	23	True				
ANR	4679850	Statement	Low	191:99:5453:5455	4679250	24	True				
ANR	4679851	Statement	)	191:102:5456:5456	4679250	25	True				
ANR	4679852	ExpressionStatement		191:103:5457:5457	4679250	26	True				
ANR	4679853	BreakStatement	break ;	192:5:5464:5469	4679250	27	True				
ANR	4679854	Label	case 96 :	193:4:5475:5482	4679250	28	True				
ANR	4679855	Statement	snprintf	194:5:5489:5496	4679250	29	True				
ANR	4679856	Statement	(	194:14:5498:5498	4679250	30	True				
ANR	4679857	Statement	strvalue	194:15:5499:5506	4679250	31	True				
ANR	4679858	Statement	","	194:23:5507:5507	4679250	32	True				
ANR	4679859	Statement	sizeof	194:25:5509:5514	4679250	33	True				
ANR	4679860	Statement	(	194:32:5516:5516	4679250	34	True				
ANR	4679861	Statement	strvalue	194:33:5517:5524	4679250	35	True				
ANR	4679862	Statement	)	194:41:5525:5525	4679250	36	True				
ANR	4679863	Statement	","	194:42:5526:5526	4679250	37	True				
ANR	4679864	Statement	"""0x%08x%016"""	194:44:5528:5539	4679250	38	True				
ANR	4679865	Statement	PFMT64x	194:56:5540:5546	4679250	39	True				
ANR	4679866	Statement	""""""	194:63:5547:5548	4679250	40	True				
ANR	4679867	Statement	","	194:65:5549:5549	4679250	41	True				
ANR	4679868	Statement	valueBig	194:67:5551:5558	4679250	42	True				
ANR	4679869	Statement	.	194:75:5559:5559	4679250	43	True				
ANR	4679870	Statement	v96	194:76:5560:5562	4679250	44	True				
ANR	4679871	Statement	.	194:79:5563:5563	4679250	45	True				
ANR	4679872	Statement	High	194:80:5564:5567	4679250	46	True				
ANR	4679873	Statement	","	194:84:5568:5568	4679250	47	True				
ANR	4679874	Statement	valueBig	194:86:5570:5577	4679250	48	True				
ANR	4679875	Statement	.	194:94:5578:5578	4679250	49	True				
ANR	4679876	Statement	v96	194:95:5579:5581	4679250	50	True				
ANR	4679877	Statement	.	194:98:5582:5582	4679250	51	True				
ANR	4679878	Statement	Low	194:99:5583:5585	4679250	52	True				
ANR	4679879	Statement	)	194:102:5586:5586	4679250	53	True				
ANR	4679880	ExpressionStatement		194:103:5587:5587	4679250	54	True				
ANR	4679881	BreakStatement	break ;	195:5:5594:5599	4679250	55	True				
ANR	4679882	Label	case 128 :	196:4:5605:5613	4679250	56	True				
ANR	4679883	Statement	snprintf	197:5:5620:5627	4679250	57	True				
ANR	4679884	Statement	(	197:14:5629:5629	4679250	58	True				
ANR	4679885	Statement	strvalue	197:15:5630:5637	4679250	59	True				
ANR	4679886	Statement	","	197:23:5638:5638	4679250	60	True				
ANR	4679887	Statement	sizeof	197:25:5640:5645	4679250	61	True				
ANR	4679888	Statement	(	197:32:5647:5647	4679250	62	True				
ANR	4679889	Statement	strvalue	197:33:5648:5655	4679250	63	True				
ANR	4679890	Statement	)	197:41:5656:5656	4679250	64	True				
ANR	4679891	Statement	","	197:42:5657:5657	4679250	65	True				
ANR	4679892	Statement	"""0x%016"""	197:44:5659:5666	4679250	66	True				
ANR	4679893	Statement	PFMT64x	197:52:5667:5673	4679250	67	True				
ANR	4679894	Statement	"""%016"""	197:59:5674:5679	4679250	68	True				
ANR	4679895	Statement	PFMT64x	197:65:5680:5686	4679250	69	True				
ANR	4679896	Statement	""""""	197:72:5687:5688	4679250	70	True				
ANR	4679897	Statement	","	197:74:5689:5689	4679250	71	True				
ANR	4679898	Statement	valueBig	197:76:5691:5698	4679250	72	True				
ANR	4679899	Statement	.	197:84:5699:5699	4679250	73	True				
ANR	4679900	Statement	v128	197:85:5700:5703	4679250	74	True				
ANR	4679901	Statement	.	197:89:5704:5704	4679250	75	True				
ANR	4679902	Statement	High	197:90:5705:5708	4679250	76	True				
ANR	4679903	Statement	","	197:94:5709:5709	4679250	77	True				
ANR	4679904	Statement	valueBig	197:96:5711:5718	4679250	78	True				
ANR	4679905	Statement	.	197:104:5719:5719	4679250	79	True				
ANR	4679906	Statement	v128	197:105:5720:5723	4679250	80	True				
ANR	4679907	Statement	.	197:109:5724:5724	4679250	81	True				
ANR	4679908	Statement	Low	197:110:5725:5727	4679250	82	True				
ANR	4679909	Statement	)	197:113:5728:5728	4679250	83	True				
ANR	4679910	ExpressionStatement		197:114:5729:5729	4679250	84	True				
ANR	4679911	BreakStatement	break ;	198:5:5736:5741	4679250	85	True				
ANR	4679912	Label	default :	199:4:5747:5754	4679250	86	True				
ANR	4679913	Identifier	default		4679250	0					
ANR	4679914	ExpressionStatement	"snprintf ( strvalue , sizeof ( strvalue ) , ""ERROR"" )"	200:5:5761:5808	4679250	87	True				
ANR	4679915	CallExpression	"snprintf ( strvalue , sizeof ( strvalue ) , ""ERROR"" )"		4679250	0					
ANR	4679916	Callee	snprintf		4679250	0					
ANR	4679917	Identifier	snprintf		4679250	0					
ANR	4679918	ArgumentList	strvalue		4679250	1					
ANR	4679919	Argument	strvalue		4679250	0					
ANR	4679920	Identifier	strvalue		4679250	0					
ANR	4679921	Argument	sizeof ( strvalue )		4679250	1					
ANR	4679922	SizeofExpression	sizeof ( strvalue )		4679250	0					
ANR	4679923	Sizeof	sizeof		4679250	0					
ANR	4679924	SizeofOperand	strvalue		4679250	1					
ANR	4679925	Argument	"""ERROR"""		4679250	2					
ANR	4679926	PrimaryExpression	"""ERROR"""		4679250	0					
ANR	4679927	ExpressionStatement	delta = 0	202:4:5820:5829	4679250	2	True				
ANR	4679928	AssignmentExpression	delta = 0		4679250	0		=			
ANR	4679929	Identifier	delta		4679250	0					
ANR	4679930	PrimaryExpression	0		4679250	1					
ANR	4679931	ExpressionStatement	itmidx ++	204:3:5881:5889	4679250	6	True				
ANR	4679932	PostIncDecOperationExpression	itmidx ++		4679250	0					
ANR	4679933	Identifier	itmidx		4679250	0					
ANR	4679934	IncDec	++		4679250	1					
ANR	4679935	SwitchStatement	switch ( rad )		4679250	7					
ANR	4679936	Condition	rad	206:11:5903:5905	4679250	0	True				
ANR	4679937	Identifier	rad		4679250	0					
ANR	4679938	CompoundStatement		122:16:3145:3145	4679250	1					
ANR	4679939	Label	case 'J' :	207:3:5913:5921	4679250	0	True				
ANR	4679940	Label	case 'j' :	208:3:5926:5934	4679250	1	True				
ANR	4679941	ExpressionStatement	"dbg -> cb_printf ( ""%s\\""%s\\"":%s"" , n ? "","" : """" , item -> name , strvalue )"	209:4:5940:6007	4679250	2	True				
ANR	4679942	CallExpression	"dbg -> cb_printf ( ""%s\\""%s\\"":%s"" , n ? "","" : """" , item -> name , strvalue )"		4679250	0					
ANR	4679943	Callee	dbg -> cb_printf		4679250	0					
ANR	4679944	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4679945	Identifier	dbg		4679250	0					
ANR	4679946	Identifier	cb_printf		4679250	1					
ANR	4679947	ArgumentList	"""%s\\""%s\\"":%s"""		4679250	1					
ANR	4679948	Argument	"""%s\\""%s\\"":%s"""		4679250	0					
ANR	4679949	PrimaryExpression	"""%s\\""%s\\"":%s"""		4679250	0					
ANR	4679950	Argument	"n ? "","" : """""		4679250	1					
ANR	4679951	ConditionalExpression	"n ? "","" : """""		4679250	0					
ANR	4679952	Condition	n		4679250	0					
ANR	4679953	Identifier	n		4679250	0					
ANR	4679954	PrimaryExpression	""","""		4679250	1					
ANR	4679955	PrimaryExpression	""""""		4679250	2					
ANR	4679956	Argument	item -> name		4679250	2					
ANR	4679957	PtrMemberAccess	item -> name		4679250	0					
ANR	4679958	Identifier	item		4679250	0					
ANR	4679959	Identifier	name		4679250	1					
ANR	4679960	Argument	strvalue		4679250	3					
ANR	4679961	Identifier	strvalue		4679250	0					
ANR	4679962	BreakStatement	break ;	211:4:6013:6018	4679250	3	True				
ANR	4679963	Label	case '-' :	212:3:6023:6031	4679250	4	True				
ANR	4679964	ExpressionStatement	"dbg -> cb_printf ( ""f-%s\\n"" , item -> name )"	213:4:6037:6074	4679250	5	True				
ANR	4679965	CallExpression	"dbg -> cb_printf ( ""f-%s\\n"" , item -> name )"		4679250	0					
ANR	4679966	Callee	dbg -> cb_printf		4679250	0					
ANR	4679967	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4679968	Identifier	dbg		4679250	0					
ANR	4679969	Identifier	cb_printf		4679250	1					
ANR	4679970	ArgumentList	"""f-%s\\n"""		4679250	1					
ANR	4679971	Argument	"""f-%s\\n"""		4679250	0					
ANR	4679972	PrimaryExpression	"""f-%s\\n"""		4679250	0					
ANR	4679973	Argument	item -> name		4679250	1					
ANR	4679974	PtrMemberAccess	item -> name		4679250	0					
ANR	4679975	Identifier	item		4679250	0					
ANR	4679976	Identifier	name		4679250	1					
ANR	4679977	BreakStatement	break ;	214:4:6080:6085	4679250	6	True				
ANR	4679978	Label	case 'R' :	215:3:6090:6098	4679250	7	True				
ANR	4679979	ExpressionStatement	"dbg -> cb_printf ( ""aer %s = %s\\n"" , item -> name , strvalue )"	216:4:6104:6158	4679250	8	True				
ANR	4679980	CallExpression	"dbg -> cb_printf ( ""aer %s = %s\\n"" , item -> name , strvalue )"		4679250	0					
ANR	4679981	Callee	dbg -> cb_printf		4679250	0					
ANR	4679982	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4679983	Identifier	dbg		4679250	0					
ANR	4679984	Identifier	cb_printf		4679250	1					
ANR	4679985	ArgumentList	"""aer %s = %s\\n"""		4679250	1					
ANR	4679986	Argument	"""aer %s = %s\\n"""		4679250	0					
ANR	4679987	PrimaryExpression	"""aer %s = %s\\n"""		4679250	0					
ANR	4679988	Argument	item -> name		4679250	1					
ANR	4679989	PtrMemberAccess	item -> name		4679250	0					
ANR	4679990	Identifier	item		4679250	0					
ANR	4679991	Identifier	name		4679250	1					
ANR	4679992	Argument	strvalue		4679250	2					
ANR	4679993	Identifier	strvalue		4679250	0					
ANR	4679994	BreakStatement	break ;	217:4:6164:6169	4679250	9	True				
ANR	4679995	Label	case 1 :	218:3:6174:6180	4679250	10	True				
ANR	4679996	Label	case '*' :	219:3:6185:6193	4679250	11	True				
ANR	4679997	ExpressionStatement	"dbg -> cb_printf ( ""f %s %d %s\\n"" , item -> name , item -> size / 8 , strvalue )"	220:4:6199:6268	4679250	12	True				
ANR	4679998	CallExpression	"dbg -> cb_printf ( ""f %s %d %s\\n"" , item -> name , item -> size / 8 , strvalue )"		4679250	0					
ANR	4679999	Callee	dbg -> cb_printf		4679250	0					
ANR	4680000	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680001	Identifier	dbg		4679250	0					
ANR	4680002	Identifier	cb_printf		4679250	1					
ANR	4680003	ArgumentList	"""f %s %d %s\\n"""		4679250	1					
ANR	4680004	Argument	"""f %s %d %s\\n"""		4679250	0					
ANR	4680005	PrimaryExpression	"""f %s %d %s\\n"""		4679250	0					
ANR	4680006	Argument	item -> name		4679250	1					
ANR	4680007	PtrMemberAccess	item -> name		4679250	0					
ANR	4680008	Identifier	item		4679250	0					
ANR	4680009	Identifier	name		4679250	1					
ANR	4680010	Argument	item -> size / 8		4679250	2					
ANR	4680011	MultiplicativeExpression	item -> size / 8		4679250	0		/			
ANR	4680012	PtrMemberAccess	item -> size		4679250	0					
ANR	4680013	Identifier	item		4679250	0					
ANR	4680014	Identifier	size		4679250	1					
ANR	4680015	PrimaryExpression	8		4679250	1					
ANR	4680016	Argument	strvalue		4679250	3					
ANR	4680017	Identifier	strvalue		4679250	0					
ANR	4680018	BreakStatement	break ;	221:4:6274:6279	4679250	13	True				
ANR	4680019	Label	case '.' :	222:3:6284:6292	4679250	14	True				
ANR	4680020	ExpressionStatement	"dbg -> cb_printf ( ""dr %s=%s\\n"" , item -> name , strvalue )"	223:4:6298:6349	4679250	15	True				
ANR	4680021	CallExpression	"dbg -> cb_printf ( ""dr %s=%s\\n"" , item -> name , strvalue )"		4679250	0					
ANR	4680022	Callee	dbg -> cb_printf		4679250	0					
ANR	4680023	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680024	Identifier	dbg		4679250	0					
ANR	4680025	Identifier	cb_printf		4679250	1					
ANR	4680026	ArgumentList	"""dr %s=%s\\n"""		4679250	1					
ANR	4680027	Argument	"""dr %s=%s\\n"""		4679250	0					
ANR	4680028	PrimaryExpression	"""dr %s=%s\\n"""		4679250	0					
ANR	4680029	Argument	item -> name		4679250	1					
ANR	4680030	PtrMemberAccess	item -> name		4679250	0					
ANR	4680031	Identifier	item		4679250	0					
ANR	4680032	Identifier	name		4679250	1					
ANR	4680033	Argument	strvalue		4679250	2					
ANR	4680034	Identifier	strvalue		4679250	0					
ANR	4680035	BreakStatement	break ;	224:4:6355:6360	4679250	16	True				
ANR	4680036	Label	case 'd' :	225:3:6365:6373	4679250	17	True				
ANR	4680037	Label	case 2 :	226:3:6378:6384	4679250	18	True				
ANR	4680038	CompoundStatement		146:5:3759:3786	4679250	19					
ANR	4680039	IdentifierDeclStatement	"int len , highlight = use_color && pr && pr -> cur_enabled && itmidx == pr -> cur ;"	228:5:6397:6473	4679250	0	True				
ANR	4680040	IdentifierDecl	len		4679250	0					
ANR	4680041	IdentifierDeclType	int		4679250	0					
ANR	4680042	Identifier	len		4679250	1					
ANR	4680043	IdentifierDecl	highlight = use_color && pr && pr -> cur_enabled && itmidx == pr -> cur		4679250	1					
ANR	4680044	IdentifierDeclType	int		4679250	0					
ANR	4680045	Identifier	highlight		4679250	1					
ANR	4680046	AssignmentExpression	highlight = use_color && pr && pr -> cur_enabled && itmidx == pr -> cur		4679250	2		=			
ANR	4680047	Identifier	highlight		4679250	0					
ANR	4680048	AndExpression	use_color && pr && pr -> cur_enabled && itmidx == pr -> cur		4679250	1		&&			
ANR	4680049	Identifier	use_color		4679250	0					
ANR	4680050	AndExpression	pr && pr -> cur_enabled && itmidx == pr -> cur		4679250	1		&&			
ANR	4680051	Identifier	pr		4679250	0					
ANR	4680052	AndExpression	pr -> cur_enabled && itmidx == pr -> cur		4679250	1		&&			
ANR	4680053	PtrMemberAccess	pr -> cur_enabled		4679250	0					
ANR	4680054	Identifier	pr		4679250	0					
ANR	4680055	Identifier	cur_enabled		4679250	1					
ANR	4680056	EqualityExpression	itmidx == pr -> cur		4679250	1		==			
ANR	4680057	Identifier	itmidx		4679250	0					
ANR	4680058	PtrMemberAccess	pr -> cur		4679250	1					
ANR	4680059	Identifier	pr		4679250	0					
ANR	4680060	Identifier	cur		4679250	1					
ANR	4680061	IdentifierDeclStatement	"char * str , whites [ 32 ] , content [ 300 ] ;"	229:5:6480:6515	4679250	1	True				
ANR	4680062	IdentifierDecl	* str		4679250	0					
ANR	4680063	IdentifierDeclType	char *		4679250	0					
ANR	4680064	Identifier	str		4679250	1					
ANR	4680065	IdentifierDecl	whites [ 32 ]		4679250	1					
ANR	4680066	IdentifierDeclType	char [ 32 ]		4679250	0					
ANR	4680067	Identifier	whites		4679250	1					
ANR	4680068	PrimaryExpression	32		4679250	2					
ANR	4680069	IdentifierDecl	content [ 300 ]		4679250	2					
ANR	4680070	IdentifierDeclType	char [ 300 ]		4679250	0					
ANR	4680071	Identifier	content		4679250	1					
ANR	4680072	PrimaryExpression	300		4679250	2					
ANR	4680073	IdentifierDeclStatement	"const char * a = """" , * b = """" ;"	230:5:6522:6549	4679250	2	True				
ANR	4680074	IdentifierDecl	"* a = """""		4679250	0					
ANR	4680075	IdentifierDeclType	const char *		4679250	0					
ANR	4680076	Identifier	a		4679250	1					
ANR	4680077	AssignmentExpression	"* a = """""		4679250	2		=			
ANR	4680078	Identifier	a		4679250	0					
ANR	4680079	PrimaryExpression	""""""		4679250	1					
ANR	4680080	IdentifierDecl	"* b = """""		4679250	1					
ANR	4680081	IdentifierDeclType	const char *		4679250	0					
ANR	4680082	Identifier	b		4679250	1					
ANR	4680083	AssignmentExpression	"* b = """""		4679250	2		=			
ANR	4680084	Identifier	b		4679250	0					
ANR	4680085	PrimaryExpression	""""""		4679250	1					
ANR	4680086	IfStatement	if ( highlight )		4679250	3					
ANR	4680087	Condition	highlight	231:9:6560:6568	4679250	0	True				
ANR	4680088	Identifier	highlight		4679250	0					
ANR	4680089	CompoundStatement		147:20:3808:3808	4679250	1					
ANR	4680090	ExpressionStatement	a = Color_INVERT	232:6:6579:6595	4679250	0	True				
ANR	4680091	AssignmentExpression	a = Color_INVERT		4679250	0		=			
ANR	4680092	Identifier	a		4679250	0					
ANR	4680093	Identifier	Color_INVERT		4679250	1					
ANR	4680094	ExpressionStatement	b = Color_INVERT_RESET	233:6:6603:6625	4679250	1	True				
ANR	4680095	AssignmentExpression	b = Color_INVERT_RESET		4679250	0		=			
ANR	4680096	Identifier	b		4679250	0					
ANR	4680097	Identifier	Color_INVERT_RESET		4679250	1					
ANR	4680098	ExpressionStatement	dbg -> creg = item -> name	234:6:6633:6655	4679250	2	True				
ANR	4680099	AssignmentExpression	dbg -> creg = item -> name		4679250	0		=			
ANR	4680100	PtrMemberAccess	dbg -> creg		4679250	0					
ANR	4680101	Identifier	dbg		4679250	0					
ANR	4680102	Identifier	creg		4679250	1					
ANR	4680103	PtrMemberAccess	item -> name		4679250	1					
ANR	4680104	Identifier	item		4679250	0					
ANR	4680105	Identifier	name		4679250	1					
ANR	4680106	ExpressionStatement	"strcpy ( whites , kwhites )"	236:5:6669:6693	4679250	4	True				
ANR	4680107	CallExpression	"strcpy ( whites , kwhites )"		4679250	0					
ANR	4680108	Callee	strcpy		4679250	0					
ANR	4680109	Identifier	strcpy		4679250	0					
ANR	4680110	ArgumentList	whites		4679250	1					
ANR	4680111	Argument	whites		4679250	0					
ANR	4680112	Identifier	whites		4679250	0					
ANR	4680113	Argument	kwhites		4679250	1					
ANR	4680114	Identifier	kwhites		4679250	0					
ANR	4680115	IfStatement	if ( delta && use_color )		4679250	5					
ANR	4680116	Condition	delta && use_color	237:9:6704:6721	4679250	0	True				
ANR	4680117	AndExpression	delta && use_color		4679250	0		&&			
ANR	4680118	Identifier	delta		4679250	0					
ANR	4680119	Identifier	use_color		4679250	1					
ANR	4680120	CompoundStatement		153:29:3961:3961	4679250	1					
ANR	4680121	ExpressionStatement	"dbg -> cb_printf ( ""%s"" , use_color )"	238:6:6732:6764	4679250	0	True				
ANR	4680122	CallExpression	"dbg -> cb_printf ( ""%s"" , use_color )"		4679250	0					
ANR	4680123	Callee	dbg -> cb_printf		4679250	0					
ANR	4680124	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680125	Identifier	dbg		4679250	0					
ANR	4680126	Identifier	cb_printf		4679250	1					
ANR	4680127	ArgumentList	"""%s"""		4679250	1					
ANR	4680128	Argument	"""%s"""		4679250	0					
ANR	4680129	PrimaryExpression	"""%s"""		4679250	0					
ANR	4680130	Argument	use_color		4679250	1					
ANR	4680131	Identifier	use_color		4679250	0					
ANR	4680132	IfStatement	if ( item -> flags )		4679250	6					
ANR	4680133	Condition	item -> flags	240:9:6782:6792	4679250	0	True				
ANR	4680134	PtrMemberAccess	item -> flags		4679250	0					
ANR	4680135	Identifier	item		4679250	0					
ANR	4680136	Identifier	flags		4679250	1					
ANR	4680137	CompoundStatement		156:22:4032:4032	4679250	1					
ANR	4680138	ExpressionStatement	"str = r_reg_get_bvalue ( dbg -> reg , item )"	241:6:6803:6842	4679250	0	True				
ANR	4680139	AssignmentExpression	"str = r_reg_get_bvalue ( dbg -> reg , item )"		4679250	0		=			
ANR	4680140	Identifier	str		4679250	0					
ANR	4680141	CallExpression	"r_reg_get_bvalue ( dbg -> reg , item )"		4679250	1					
ANR	4680142	Callee	r_reg_get_bvalue		4679250	0					
ANR	4680143	Identifier	r_reg_get_bvalue		4679250	0					
ANR	4680144	ArgumentList	dbg -> reg		4679250	1					
ANR	4680145	Argument	dbg -> reg		4679250	0					
ANR	4680146	PtrMemberAccess	dbg -> reg		4679250	0					
ANR	4680147	Identifier	dbg		4679250	0					
ANR	4680148	Identifier	reg		4679250	1					
ANR	4680149	Argument	item		4679250	1					
ANR	4680150	Identifier	item		4679250	0					
ANR	4680151	ExpressionStatement	len = 12 - strlen ( str )	242:6:6850:6873	4679250	1	True				
ANR	4680152	AssignmentExpression	len = 12 - strlen ( str )		4679250	0		=			
ANR	4680153	Identifier	len		4679250	0					
ANR	4680154	AdditiveExpression	12 - strlen ( str )		4679250	1		-			
ANR	4680155	PrimaryExpression	12		4679250	0					
ANR	4680156	CallExpression	strlen ( str )		4679250	1					
ANR	4680157	Callee	strlen		4679250	0					
ANR	4680158	Identifier	strlen		4679250	0					
ANR	4680159	ArgumentList	str		4679250	1					
ANR	4680160	Argument	str		4679250	0					
ANR	4680161	Identifier	str		4679250	0					
ANR	4680162	ExpressionStatement	"memset ( whites , ' ' , sizeof ( whites ) )"	243:6:6881:6918	4679250	2	True				
ANR	4680163	CallExpression	"memset ( whites , ' ' , sizeof ( whites ) )"		4679250	0					
ANR	4680164	Callee	memset		4679250	0					
ANR	4680165	Identifier	memset		4679250	0					
ANR	4680166	ArgumentList	whites		4679250	1					
ANR	4680167	Argument	whites		4679250	0					
ANR	4680168	Identifier	whites		4679250	0					
ANR	4680169	Argument	' '		4679250	1					
ANR	4680170	PrimaryExpression	' '		4679250	0					
ANR	4680171	Argument	sizeof ( whites )		4679250	2					
ANR	4680172	SizeofExpression	sizeof ( whites )		4679250	0					
ANR	4680173	Sizeof	sizeof		4679250	0					
ANR	4680174	SizeofOperand	whites		4679250	1					
ANR	4680175	ExpressionStatement	whites [ len ] = 0	244:6:6926:6941	4679250	3	True				
ANR	4680176	AssignmentExpression	whites [ len ] = 0		4679250	0		=			
ANR	4680177	ArrayIndexing	whites [ len ]		4679250	0					
ANR	4680178	Identifier	whites		4679250	0					
ANR	4680179	Identifier	len		4679250	1					
ANR	4680180	PrimaryExpression	0		4679250	1					
ANR	4680181	ExpressionStatement	"dbg -> cb_printf ( "" %s%s%s %s%s"" , a , item -> name , b , str , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"	245:6:6949:7038	4679250	4	True				
ANR	4680182	CallExpression	"dbg -> cb_printf ( "" %s%s%s %s%s"" , a , item -> name , b , str , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"		4679250	0					
ANR	4680183	Callee	dbg -> cb_printf		4679250	0					
ANR	4680184	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680185	Identifier	dbg		4679250	0					
ANR	4680186	Identifier	cb_printf		4679250	1					
ANR	4680187	ArgumentList	""" %s%s%s %s%s"""		4679250	1					
ANR	4680188	Argument	""" %s%s%s %s%s"""		4679250	0					
ANR	4680189	PrimaryExpression	""" %s%s%s %s%s"""		4679250	0					
ANR	4680190	Argument	a		4679250	1					
ANR	4680191	Identifier	a		4679250	0					
ANR	4680192	Argument	item -> name		4679250	2					
ANR	4680193	PtrMemberAccess	item -> name		4679250	0					
ANR	4680194	Identifier	item		4679250	0					
ANR	4680195	Identifier	name		4679250	1					
ANR	4680196	Argument	b		4679250	3					
ANR	4680197	Identifier	b		4679250	0					
ANR	4680198	Argument	str		4679250	4					
ANR	4680199	Identifier	str		4679250	0					
ANR	4680200	Argument	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		4679250	5					
ANR	4680201	ConditionalExpression	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		4679250	0					
ANR	4680202	Condition	( n + 1 ) % cols		4679250	0					
ANR	4680203	MultiplicativeExpression	( n + 1 ) % cols		4679250	0		%			
ANR	4680204	AdditiveExpression	n + 1		4679250	0		+			
ANR	4680205	Identifier	n		4679250	0					
ANR	4680206	PrimaryExpression	1		4679250	1					
ANR	4680207	Identifier	cols		4679250	1					
ANR	4680208	Identifier	whites		4679250	1					
ANR	4680209	PrimaryExpression	"""\\n"""		4679250	2					
ANR	4680210	ExpressionStatement	free ( str )	247:6:7046:7056	4679250	5	True				
ANR	4680211	CallExpression	free ( str )		4679250	0					
ANR	4680212	Callee	free		4679250	0					
ANR	4680213	Identifier	free		4679250	0					
ANR	4680214	ArgumentList	str		4679250	1					
ANR	4680215	Argument	str		4679250	0					
ANR	4680216	Identifier	str		4679250	0					
ANR	4680217	ElseStatement	else		4679250	0					
ANR	4680218	CompoundStatement		164:12:4307:4307	4679250	0					
ANR	4680219	ExpressionStatement	"snprintf ( content , sizeof ( content ) , fmt2 , """" , item -> name , """" , strvalue , """" )"	249:6:7078:7161	4679250	0	True				
ANR	4680220	CallExpression	"snprintf ( content , sizeof ( content ) , fmt2 , """" , item -> name , """" , strvalue , """" )"		4679250	0					
ANR	4680221	Callee	snprintf		4679250	0					
ANR	4680222	Identifier	snprintf		4679250	0					
ANR	4680223	ArgumentList	content		4679250	1					
ANR	4680224	Argument	content		4679250	0					
ANR	4680225	Identifier	content		4679250	0					
ANR	4680226	Argument	sizeof ( content )		4679250	1					
ANR	4680227	SizeofExpression	sizeof ( content )		4679250	0					
ANR	4680228	Sizeof	sizeof		4679250	0					
ANR	4680229	SizeofOperand	content		4679250	1					
ANR	4680230	Argument	fmt2		4679250	2					
ANR	4680231	Identifier	fmt2		4679250	0					
ANR	4680232	Argument	""""""		4679250	3					
ANR	4680233	PrimaryExpression	""""""		4679250	0					
ANR	4680234	Argument	item -> name		4679250	4					
ANR	4680235	PtrMemberAccess	item -> name		4679250	0					
ANR	4680236	Identifier	item		4679250	0					
ANR	4680237	Identifier	name		4679250	1					
ANR	4680238	Argument	""""""		4679250	5					
ANR	4680239	PrimaryExpression	""""""		4679250	0					
ANR	4680240	Argument	strvalue		4679250	6					
ANR	4680241	Identifier	strvalue		4679250	0					
ANR	4680242	Argument	""""""		4679250	7					
ANR	4680243	PrimaryExpression	""""""		4679250	0					
ANR	4680244	ExpressionStatement	len = colwidth - strlen ( content )	251:6:7169:7202	4679250	1	True				
ANR	4680245	AssignmentExpression	len = colwidth - strlen ( content )		4679250	0		=			
ANR	4680246	Identifier	len		4679250	0					
ANR	4680247	AdditiveExpression	colwidth - strlen ( content )		4679250	1		-			
ANR	4680248	Identifier	colwidth		4679250	0					
ANR	4680249	CallExpression	strlen ( content )		4679250	1					
ANR	4680250	Callee	strlen		4679250	0					
ANR	4680251	Identifier	strlen		4679250	0					
ANR	4680252	ArgumentList	content		4679250	1					
ANR	4680253	Argument	content		4679250	0					
ANR	4680254	Identifier	content		4679250	0					
ANR	4680255	IfStatement	if ( len < 0 )		4679250	2					
ANR	4680256	Condition	len < 0	252:10:7214:7220	4679250	0	True				
ANR	4680257	RelationalExpression	len < 0		4679250	0		<			
ANR	4680258	Identifier	len		4679250	0					
ANR	4680259	PrimaryExpression	0		4679250	1					
ANR	4680260	CompoundStatement		168:19:4460:4460	4679250	1					
ANR	4680261	ExpressionStatement	len = 0	253:7:7232:7239	4679250	0	True				
ANR	4680262	AssignmentExpression	len = 0		4679250	0		=			
ANR	4680263	Identifier	len		4679250	0					
ANR	4680264	PrimaryExpression	0		4679250	1					
ANR	4680265	ExpressionStatement	"memset ( whites , ' ' , sizeof ( whites ) )"	255:6:7255:7292	4679250	3	True				
ANR	4680266	CallExpression	"memset ( whites , ' ' , sizeof ( whites ) )"		4679250	0					
ANR	4680267	Callee	memset		4679250	0					
ANR	4680268	Identifier	memset		4679250	0					
ANR	4680269	ArgumentList	whites		4679250	1					
ANR	4680270	Argument	whites		4679250	0					
ANR	4680271	Identifier	whites		4679250	0					
ANR	4680272	Argument	' '		4679250	1					
ANR	4680273	PrimaryExpression	' '		4679250	0					
ANR	4680274	Argument	sizeof ( whites )		4679250	2					
ANR	4680275	SizeofExpression	sizeof ( whites )		4679250	0					
ANR	4680276	Sizeof	sizeof		4679250	0					
ANR	4680277	SizeofOperand	whites		4679250	1					
ANR	4680278	ExpressionStatement	whites [ len ] = 0	256:6:7300:7315	4679250	4	True				
ANR	4680279	AssignmentExpression	whites [ len ] = 0		4679250	0		=			
ANR	4680280	ArrayIndexing	whites [ len ]		4679250	0					
ANR	4680281	Identifier	whites		4679250	0					
ANR	4680282	Identifier	len		4679250	1					
ANR	4680283	PrimaryExpression	0		4679250	1					
ANR	4680284	ExpressionStatement	"dbg -> cb_printf ( fmt2 , a , item -> name , b , strvalue , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"	257:6:7323:7407	4679250	5	True				
ANR	4680285	CallExpression	"dbg -> cb_printf ( fmt2 , a , item -> name , b , strvalue , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"		4679250	0					
ANR	4680286	Callee	dbg -> cb_printf		4679250	0					
ANR	4680287	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680288	Identifier	dbg		4679250	0					
ANR	4680289	Identifier	cb_printf		4679250	1					
ANR	4680290	ArgumentList	fmt2		4679250	1					
ANR	4680291	Argument	fmt2		4679250	0					
ANR	4680292	Identifier	fmt2		4679250	0					
ANR	4680293	Argument	a		4679250	1					
ANR	4680294	Identifier	a		4679250	0					
ANR	4680295	Argument	item -> name		4679250	2					
ANR	4680296	PtrMemberAccess	item -> name		4679250	0					
ANR	4680297	Identifier	item		4679250	0					
ANR	4680298	Identifier	name		4679250	1					
ANR	4680299	Argument	b		4679250	3					
ANR	4680300	Identifier	b		4679250	0					
ANR	4680301	Argument	strvalue		4679250	4					
ANR	4680302	Identifier	strvalue		4679250	0					
ANR	4680303	Argument	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		4679250	5					
ANR	4680304	ConditionalExpression	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		4679250	0					
ANR	4680305	Condition	( n + 1 ) % cols		4679250	0					
ANR	4680306	MultiplicativeExpression	( n + 1 ) % cols		4679250	0		%			
ANR	4680307	AdditiveExpression	n + 1		4679250	0		+			
ANR	4680308	Identifier	n		4679250	0					
ANR	4680309	PrimaryExpression	1		4679250	1					
ANR	4680310	Identifier	cols		4679250	1					
ANR	4680311	Identifier	whites		4679250	1					
ANR	4680312	PrimaryExpression	"""\\n"""		4679250	2					
ANR	4680313	IfStatement	if ( highlight )		4679250	7					
ANR	4680314	Condition	highlight	260:9:7425:7433	4679250	0	True				
ANR	4680315	Identifier	highlight		4679250	0					
ANR	4680316	CompoundStatement		176:20:4673:4673	4679250	1					
ANR	4680317	ExpressionStatement	dbg -> cb_printf ( Color_INVERT_RESET )	261:6:7444:7479	4679250	0	True				
ANR	4680318	CallExpression	dbg -> cb_printf ( Color_INVERT_RESET )		4679250	0					
ANR	4680319	Callee	dbg -> cb_printf		4679250	0					
ANR	4680320	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680321	Identifier	dbg		4679250	0					
ANR	4680322	Identifier	cb_printf		4679250	1					
ANR	4680323	ArgumentList	Color_INVERT_RESET		4679250	1					
ANR	4680324	Argument	Color_INVERT_RESET		4679250	0					
ANR	4680325	Identifier	Color_INVERT_RESET		4679250	0					
ANR	4680326	IfStatement	if ( delta && use_color )		4679250	8					
ANR	4680327	Condition	delta && use_color	263:9:7497:7514	4679250	0	True				
ANR	4680328	AndExpression	delta && use_color		4679250	0		&&			
ANR	4680329	Identifier	delta		4679250	0					
ANR	4680330	Identifier	use_color		4679250	1					
ANR	4680331	CompoundStatement		179:29:4754:4754	4679250	1					
ANR	4680332	ExpressionStatement	dbg -> cb_printf ( Color_RESET )	264:6:7525:7553	4679250	0	True				
ANR	4680333	CallExpression	dbg -> cb_printf ( Color_RESET )		4679250	0					
ANR	4680334	Callee	dbg -> cb_printf		4679250	0					
ANR	4680335	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680336	Identifier	dbg		4679250	0					
ANR	4680337	Identifier	cb_printf		4679250	1					
ANR	4680338	ArgumentList	Color_RESET		4679250	1					
ANR	4680339	Argument	Color_RESET		4679250	0					
ANR	4680340	Identifier	Color_RESET		4679250	0					
ANR	4680341	BreakStatement	break ;	267:4:7572:7577	4679250	20	True				
ANR	4680342	Label	case 3 :	268:3:7582:7588	4679250	21	True				
ANR	4680343	IfStatement	if ( delta )		4679250	22					
ANR	4680344	Condition	delta	269:8:7598:7602	4679250	0	True				
ANR	4680345	Identifier	delta		4679250	0					
ANR	4680346	CompoundStatement		186:5:4849:4863	4679250	1					
ANR	4680347	IdentifierDeclStatement	char woot [ 512 ] ;	270:5:7612:7626	4679250	0	True				
ANR	4680348	IdentifierDecl	woot [ 512 ]		4679250	0					
ANR	4680349	IdentifierDeclType	char [ 512 ]		4679250	0					
ANR	4680350	Identifier	woot		4679250	1					
ANR	4680351	PrimaryExpression	512		4679250	2					
ANR	4680352	Statement	snprintf	271:5:7633:7640	4679250	1	True				
ANR	4680353	Statement	(	271:14:7642:7642	4679250	2	True				
ANR	4680354	Statement	woot	271:15:7643:7646	4679250	3	True				
ANR	4680355	Statement	","	271:19:7647:7647	4679250	4	True				
ANR	4680356	Statement	sizeof	271:21:7649:7654	4679250	5	True				
ANR	4680357	Statement	(	271:28:7656:7656	4679250	6	True				
ANR	4680358	Statement	woot	271:29:7657:7660	4679250	7	True				
ANR	4680359	Statement	)	271:33:7661:7661	4679250	8	True				
ANR	4680360	Statement	","	271:34:7662:7662	4679250	9	True				
ANR	4680361	Statement	""" was 0x%"""	272:6:7670:7679	4679250	10	True				
ANR	4680362	Statement	PFMT64x	272:16:7680:7686	4679250	11	True				
ANR	4680363	Statement	""" delta %d\\n"""	272:23:7687:7699	4679250	12	True				
ANR	4680364	Statement	","	272:36:7700:7700	4679250	13	True				
ANR	4680365	Statement	diff	272:38:7702:7705	4679250	14	True				
ANR	4680366	Statement	","	272:42:7706:7706	4679250	15	True				
ANR	4680367	Statement	delta	272:44:7708:7712	4679250	16	True				
ANR	4680368	Statement	)	272:49:7713:7713	4679250	17	True				
ANR	4680369	ExpressionStatement		272:50:7714:7714	4679250	18	True				
ANR	4680370	ExpressionStatement	"dbg -> cb_printf ( fmt , item -> name , strvalue , woot )"	273:5:7721:7769	4679250	19	True				
ANR	4680371	CallExpression	"dbg -> cb_printf ( fmt , item -> name , strvalue , woot )"		4679250	0					
ANR	4680372	Callee	dbg -> cb_printf		4679250	0					
ANR	4680373	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680374	Identifier	dbg		4679250	0					
ANR	4680375	Identifier	cb_printf		4679250	1					
ANR	4680376	ArgumentList	fmt		4679250	1					
ANR	4680377	Argument	fmt		4679250	0					
ANR	4680378	Identifier	fmt		4679250	0					
ANR	4680379	Argument	item -> name		4679250	1					
ANR	4680380	PtrMemberAccess	item -> name		4679250	0					
ANR	4680381	Identifier	item		4679250	0					
ANR	4680382	Identifier	name		4679250	1					
ANR	4680383	Argument	strvalue		4679250	2					
ANR	4680384	Identifier	strvalue		4679250	0					
ANR	4680385	Argument	woot		4679250	3					
ANR	4680386	Identifier	woot		4679250	0					
ANR	4680387	BreakStatement	break ;	275:4:7781:7786	4679250	23	True				
ANR	4680388	Label	default :	276:3:7791:7798	4679250	24	True				
ANR	4680389	Identifier	default		4679250	0					
ANR	4680390	IfStatement	if ( delta && use_color )		4679250	25					
ANR	4680391	Condition	delta && use_color	277:8:7808:7825	4679250	0	True				
ANR	4680392	AndExpression	delta && use_color		4679250	0		&&			
ANR	4680393	Identifier	delta		4679250	0					
ANR	4680394	Identifier	use_color		4679250	1					
ANR	4680395	CompoundStatement		193:28:5065:5065	4679250	1					
ANR	4680396	ExpressionStatement	dbg -> cb_printf ( use_color )	278:5:7835:7861	4679250	0	True				
ANR	4680397	CallExpression	dbg -> cb_printf ( use_color )		4679250	0					
ANR	4680398	Callee	dbg -> cb_printf		4679250	0					
ANR	4680399	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680400	Identifier	dbg		4679250	0					
ANR	4680401	Identifier	cb_printf		4679250	1					
ANR	4680402	ArgumentList	use_color		4679250	1					
ANR	4680403	Argument	use_color		4679250	0					
ANR	4680404	Identifier	use_color		4679250	0					
ANR	4680405	Statement	dbg	279:5:7868:7870	4679250	1	True				
ANR	4680406	Statement	->	279:8:7871:7872	4679250	2	True				
ANR	4680407	Statement	cb_printf	279:10:7873:7881	4679250	3	True				
ANR	4680408	Statement	(	279:20:7883:7883	4679250	4	True				
ANR	4680409	Statement	fmt	279:21:7884:7886	4679250	5	True				
ANR	4680410	Statement	","	279:24:7887:7887	4679250	6	True				
ANR	4680411	Statement	item	279:26:7889:7892	4679250	7	True				
ANR	4680412	Statement	->	279:30:7893:7894	4679250	8	True				
ANR	4680413	Statement	name	279:32:7895:7898	4679250	9	True				
ANR	4680414	Statement	","	279:36:7899:7899	4679250	10	True				
ANR	4680415	Statement	strvalue	279:38:7901:7908	4679250	11	True				
ANR	4680416	Statement	","	279:46:7909:7909	4679250	12	True				
ANR	4680417	Statement	Color_RESET	279:48:7911:7921	4679250	13	True				
ANR	4680418	Statement	"""\\n"""	279:59:7922:7925	4679250	14	True				
ANR	4680419	Statement	)	279:63:7926:7926	4679250	15	True				
ANR	4680420	ExpressionStatement		279:64:7927:7927	4679250	16	True				
ANR	4680421	ElseStatement	else		4679250	0					
ANR	4680422	CompoundStatement		196:11:5177:5177	4679250	0					
ANR	4680423	ExpressionStatement	"dbg -> cb_printf ( fmt , item -> name , strvalue , ""\\n"" )"	281:5:7947:7995	4679250	0	True				
ANR	4680424	CallExpression	"dbg -> cb_printf ( fmt , item -> name , strvalue , ""\\n"" )"		4679250	0					
ANR	4680425	Callee	dbg -> cb_printf		4679250	0					
ANR	4680426	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680427	Identifier	dbg		4679250	0					
ANR	4680428	Identifier	cb_printf		4679250	1					
ANR	4680429	ArgumentList	fmt		4679250	1					
ANR	4680430	Argument	fmt		4679250	0					
ANR	4680431	Identifier	fmt		4679250	0					
ANR	4680432	Argument	item -> name		4679250	1					
ANR	4680433	PtrMemberAccess	item -> name		4679250	0					
ANR	4680434	Identifier	item		4679250	0					
ANR	4680435	Identifier	name		4679250	1					
ANR	4680436	Argument	strvalue		4679250	2					
ANR	4680437	Identifier	strvalue		4679250	0					
ANR	4680438	Argument	"""\\n"""		4679250	3					
ANR	4680439	PrimaryExpression	"""\\n"""		4679250	0					
ANR	4680440	BreakStatement	break ;	283:4:8007:8012	4679250	26	True				
ANR	4680441	ExpressionStatement	n ++	285:3:8022:8025	4679250	8	True				
ANR	4680442	PostIncDecOperationExpression	n ++		4679250	0					
ANR	4680443	Identifier	n		4679250	0					
ANR	4680444	IncDec	++		4679250	1					
ANR	4680445	Label	beach :	288:0:8034:8039	4679250	20	True				
ANR	4680446	Identifier	beach		4679250	0					
ANR	4680447	IfStatement	if ( rad == 'j' )		4679250	21					
ANR	4680448	Condition	rad == 'j'	289:5:8046:8055	4679250	0	True				
ANR	4680449	EqualityExpression	rad == 'j'		4679250	0		==			
ANR	4680450	Identifier	rad		4679250	0					
ANR	4680451	PrimaryExpression	'j'		4679250	1					
ANR	4680452	CompoundStatement		205:17:5295:5295	4679250	1					
ANR	4680453	ExpressionStatement	"dbg -> cb_printf ( ""}\\n"" )"	290:2:8062:8084	4679250	0	True				
ANR	4680454	CallExpression	"dbg -> cb_printf ( ""}\\n"" )"		4679250	0					
ANR	4680455	Callee	dbg -> cb_printf		4679250	0					
ANR	4680456	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680457	Identifier	dbg		4679250	0					
ANR	4680458	Identifier	cb_printf		4679250	1					
ANR	4680459	ArgumentList	"""}\\n"""		4679250	1					
ANR	4680460	Argument	"""}\\n"""		4679250	0					
ANR	4680461	PrimaryExpression	"""}\\n"""		4679250	0					
ANR	4680462	ElseStatement	else		4679250	0					
ANR	4680463	IfStatement	if ( rad == 'J' )		4679250	0					
ANR	4680464	Condition	rad == 'J'	291:12:8098:8107	4679250	0	True				
ANR	4680465	EqualityExpression	rad == 'J'		4679250	0		==			
ANR	4680466	Identifier	rad		4679250	0					
ANR	4680467	PrimaryExpression	'J'		4679250	1					
ANR	4680468	CompoundStatement		207:24:5347:5347	4679250	1					
ANR	4680469	ElseStatement	else		4679250	0					
ANR	4680470	IfStatement	if ( n > 0 && rad == 2 && ( ( n % cols ) ) )		4679250	0					
ANR	4680471	Condition	n > 0 && rad == 2 && ( ( n % cols ) )	293:12:8140:8170	4679250	0	True				
ANR	4680472	AndExpression	n > 0 && rad == 2 && ( ( n % cols ) )		4679250	0		&&			
ANR	4680473	RelationalExpression	n > 0		4679250	0		>			
ANR	4680474	Identifier	n		4679250	0					
ANR	4680475	PrimaryExpression	0		4679250	1					
ANR	4680476	AndExpression	rad == 2 && ( ( n % cols ) )		4679250	1		&&			
ANR	4680477	EqualityExpression	rad == 2		4679250	0		==			
ANR	4680478	Identifier	rad		4679250	0					
ANR	4680479	PrimaryExpression	2		4679250	1					
ANR	4680480	MultiplicativeExpression	n % cols		4679250	1		%			
ANR	4680481	Identifier	n		4679250	0					
ANR	4680482	Identifier	cols		4679250	1					
ANR	4680483	CompoundStatement		209:45:5410:5410	4679250	1					
ANR	4680484	ExpressionStatement	"dbg -> cb_printf ( ""\\n"" )"	294:2:8177:8198	4679250	0	True				
ANR	4680485	CallExpression	"dbg -> cb_printf ( ""\\n"" )"		4679250	0					
ANR	4680486	Callee	dbg -> cb_printf		4679250	0					
ANR	4680487	PtrMemberAccess	dbg -> cb_printf		4679250	0					
ANR	4680488	Identifier	dbg		4679250	0					
ANR	4680489	Identifier	cb_printf		4679250	1					
ANR	4680490	ArgumentList	"""\\n"""		4679250	1					
ANR	4680491	Argument	"""\\n"""		4679250	0					
ANR	4680492	PrimaryExpression	"""\\n"""		4679250	0					
ANR	4680493	ReturnStatement	return n ;	296:1:8204:8212	4679250	22	True				
ANR	4680494	Identifier	n		4679250	0					
ANR	4680495	ReturnType	R_API int		4679250	1					
ANR	4680496	Identifier	r_debug_reg_list		4679250	2					
ANR	4680497	ParameterList	"RDebug * dbg , int type , int size , int rad , const char * use_color"		4679250	3					
ANR	4680498	Parameter	RDebug * dbg	85:27:2697:2707	4679250	0	True				
ANR	4680499	ParameterType	RDebug *		4679250	0					
ANR	4680500	Identifier	dbg		4679250	1					
ANR	4680501	Parameter	int type	85:40:2710:2717	4679250	1	True				
ANR	4680502	ParameterType	int		4679250	0					
ANR	4680503	Identifier	type		4679250	1					
ANR	4680504	Parameter	int size	85:50:2720:2727	4679250	2	True				
ANR	4680505	ParameterType	int		4679250	0					
ANR	4680506	Identifier	size		4679250	1					
ANR	4680507	Parameter	int rad	85:60:2730:2736	4679250	3	True				
ANR	4680508	ParameterType	int		4679250	0					
ANR	4680509	Identifier	rad		4679250	1					
ANR	4680510	Parameter	const char * use_color	85:69:2739:2759	4679250	4	True				
ANR	4680511	ParameterType	const char *		4679250	0					
ANR	4680512	Identifier	use_color		4679250	1					
ANR	4680513	CFGEntryNode	ENTRY		4679250		True				
ANR	4680514	CFGExitNode	EXIT		4679250		True				
ANR	4680515	Symbol	pr		4679250						
ANR	4680516	Symbol	tolower		4679250						
ANR	4680517	Symbol	regSize		4679250						
ANR	4680518	Symbol	delta		4679250						
ANR	4680519	Symbol	woot		4679250						
ANR	4680520	Symbol	pr -> cur_enabled		4679250						
ANR	4680521	Symbol	type		4679250						
ANR	4680522	Symbol	fmt		4679250						
ANR	4680523	Symbol	dbg -> corebind . core		4679250						
ANR	4680524	Symbol	whites		4679250						
ANR	4680525	Symbol	strlen		4679250						
ANR	4680526	Symbol	rad		4679250						
ANR	4680527	Symbol	len		4679250						
ANR	4680528	Symbol	* whites		4679250						
ANR	4680529	Symbol	R_REG_TYPE_FLG		4679250						
ANR	4680530	Symbol	itmidx		4679250						
ANR	4680531	Symbol	from		4679250						
ANR	4680532	Symbol	R_SYS_BITS_64		4679250						
ANR	4680533	Symbol	strcmp		4679250						
ANR	4680534	Symbol	item		4679250						
ANR	4680535	Symbol	kwhites		4679250						
ANR	4680536	Symbol	NULL		4679250						
ANR	4680537	Symbol	q_reg		4679250						
ANR	4680538	Symbol	* dbg -> corebind		4679250						
ANR	4680539	Symbol	r_reg_get_list		4679250						
ANR	4680540	Symbol	dbg		4679250						
ANR	4680541	Symbol	iter		4679250						
ANR	4680542	Symbol	R_REG_TYPE_LAST		4679250						
ANR	4680543	Symbol	diff		4679250						
ANR	4680544	Symbol	* pr		4679250						
ANR	4680545	Symbol	use_color		4679250						
ANR	4680546	Symbol	str		4679250						
ANR	4680547	Symbol	dbg -> reg -> bits		4679250						
ANR	4680548	Symbol	size		4679250						
ANR	4680549	Symbol	dbg -> corebind		4679250						
ANR	4680550	Symbol	colwidth		4679250						
ANR	4680551	Symbol	true		4679250						
ANR	4680552	Symbol	r_list_empty		4679250						
ANR	4680553	Symbol	valueBig		4679250						
ANR	4680554	Symbol	dbg -> creg		4679250						
ANR	4680555	Symbol	item -> type		4679250						
ANR	4680556	Symbol	Color_INVERT_RESET		4679250						
ANR	4680557	Symbol	Color_RESET		4679250						
ANR	4680558	Symbol	dbg -> bits		4679250						
ANR	4680559	Symbol	item -> flags		4679250						
ANR	4680560	Symbol	r_reg_get_bvalue		4679250						
ANR	4680561	Symbol	r_reg_get_value_big		4679250						
ANR	4680562	Symbol	content		4679250						
ANR	4680563	Symbol	strvalue		4679250						
ANR	4680564	Symbol	head		4679250						
ANR	4680565	Symbol	highlight		4679250						
ANR	4680566	Symbol	* dbg -> corebind . core		4679250						
ANR	4680567	Symbol	found		4679250						
ANR	4680568	Symbol	* item		4679250						
ANR	4680569	Symbol	( ( RCore * ) dbg -> corebind . core ) -> print		4679250						
ANR	4680570	Symbol	q_name		4679250						
ANR	4680571	Symbol	Color_INVERT		4679250						
ANR	4680572	Symbol	dbg -> regcols		4679250						
ANR	4680573	Symbol	iterreg		4679250						
ANR	4680574	Symbol	cols		4679250						
ANR	4680575	Symbol	value		4679250						
ANR	4680576	Symbol	a		4679250						
ANR	4680577	Symbol	r_reg_get_value		4679250						
ANR	4680578	Symbol	b		4679250						
ANR	4680579	Symbol	false		4679250						
ANR	4680580	Symbol	i		4679250						
ANR	4680581	Symbol	* dbg		4679250						
ANR	4680582	Symbol	n		4679250						
ANR	4680583	Symbol	pr -> cur		4679250						
ANR	4680584	Symbol	& valueBig		4679250						
ANR	4680585	Symbol	* dbg -> reg		4679250						
ANR	4680586	Symbol	fmt2		4679250						
ANR	4680587	Symbol	item -> name		4679250						
ANR	4680588	Symbol	pr -> wide_offsets		4679250						
ANR	4680589	Symbol	dbg -> q_regs		4679250						
ANR	4680590	Symbol	to		4679250						
ANR	4680591	Symbol	dbg -> reg		4679250						
ANR	4680592	Symbol	* * dbg		4679250						
ANR	4680593	Symbol	item -> size		4679250						
ANR	4680594	Symbol	* len		4679250						
ANR	4680595	Function	r_debug_reg_set	299:0:8217:8632							
ANR	4680596	FunctionDef	"r_debug_reg_set (struct r_debug_t * dbg , const char * name , ut64 num)"		4680595	0					
ANR	4680597	CompoundStatement		299:77:8294:8632	4680595	0					
ANR	4680598	IdentifierDeclStatement	RRegItem * ri ;	300:1:8297:8309	4680595	0	True				
ANR	4680599	IdentifierDecl	* ri		4680595	0					
ANR	4680600	IdentifierDeclType	RRegItem *		4680595	0					
ANR	4680601	Identifier	ri		4680595	1					
ANR	4680602	IdentifierDeclStatement	int role = r_reg_get_name_idx ( name ) ;	301:1:8312:8348	4680595	1	True				
ANR	4680603	IdentifierDecl	role = r_reg_get_name_idx ( name )		4680595	0					
ANR	4680604	IdentifierDeclType	int		4680595	0					
ANR	4680605	Identifier	role		4680595	1					
ANR	4680606	AssignmentExpression	role = r_reg_get_name_idx ( name )		4680595	2		=			
ANR	4680607	Identifier	role		4680595	0					
ANR	4680608	CallExpression	r_reg_get_name_idx ( name )		4680595	1					
ANR	4680609	Callee	r_reg_get_name_idx		4680595	0					
ANR	4680610	Identifier	r_reg_get_name_idx		4680595	0					
ANR	4680611	ArgumentList	name		4680595	1					
ANR	4680612	Argument	name		4680595	0					
ANR	4680613	Identifier	name		4680595	0					
ANR	4680614	IfStatement	if ( ! dbg || ! dbg -> reg )		4680595	2					
ANR	4680615	Condition	! dbg || ! dbg -> reg	302:5:8355:8371	4680595	0	True				
ANR	4680616	OrExpression	! dbg || ! dbg -> reg		4680595	0		||			
ANR	4680617	UnaryOperationExpression	! dbg		4680595	0					
ANR	4680618	UnaryOperator	!		4680595	0					
ANR	4680619	Identifier	dbg		4680595	1					
ANR	4680620	UnaryOperationExpression	! dbg -> reg		4680595	1					
ANR	4680621	UnaryOperator	!		4680595	0					
ANR	4680622	PtrMemberAccess	dbg -> reg		4680595	1					
ANR	4680623	Identifier	dbg		4680595	0					
ANR	4680624	Identifier	reg		4680595	1					
ANR	4680625	CompoundStatement		4:24:79:79	4680595	1					
ANR	4680626	ReturnStatement	return false ;	303:2:8378:8390	4680595	0	True				
ANR	4680627	Identifier	false		4680595	0					
ANR	4680628	IfStatement	if ( role != - 1 )		4680595	3					
ANR	4680629	Condition	role != - 1	305:5:8400:8409	4680595	0	True				
ANR	4680630	EqualityExpression	role != - 1		4680595	0		!=			
ANR	4680631	Identifier	role		4680595	0					
ANR	4680632	UnaryOperationExpression	- 1		4680595	1					
ANR	4680633	UnaryOperator	-		4680595	0					
ANR	4680634	PrimaryExpression	1		4680595	1					
ANR	4680635	CompoundStatement		7:17:117:117	4680595	1					
ANR	4680636	ExpressionStatement	"name = r_reg_get_name ( dbg -> reg , role )"	306:2:8416:8454	4680595	0	True				
ANR	4680637	AssignmentExpression	"name = r_reg_get_name ( dbg -> reg , role )"		4680595	0		=			
ANR	4680638	Identifier	name		4680595	0					
ANR	4680639	CallExpression	"r_reg_get_name ( dbg -> reg , role )"		4680595	1					
ANR	4680640	Callee	r_reg_get_name		4680595	0					
ANR	4680641	Identifier	r_reg_get_name		4680595	0					
ANR	4680642	ArgumentList	dbg -> reg		4680595	1					
ANR	4680643	Argument	dbg -> reg		4680595	0					
ANR	4680644	PtrMemberAccess	dbg -> reg		4680595	0					
ANR	4680645	Identifier	dbg		4680595	0					
ANR	4680646	Identifier	reg		4680595	1					
ANR	4680647	Argument	role		4680595	1					
ANR	4680648	Identifier	role		4680595	0					
ANR	4680649	ExpressionStatement	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"	308:1:8460:8507	4680595	4	True				
ANR	4680650	AssignmentExpression	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		4680595	0		=			
ANR	4680651	Identifier	ri		4680595	0					
ANR	4680652	CallExpression	"r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		4680595	1					
ANR	4680653	Callee	r_reg_get		4680595	0					
ANR	4680654	Identifier	r_reg_get		4680595	0					
ANR	4680655	ArgumentList	dbg -> reg		4680595	1					
ANR	4680656	Argument	dbg -> reg		4680595	0					
ANR	4680657	PtrMemberAccess	dbg -> reg		4680595	0					
ANR	4680658	Identifier	dbg		4680595	0					
ANR	4680659	Identifier	reg		4680595	1					
ANR	4680660	Argument	name		4680595	1					
ANR	4680661	Identifier	name		4680595	0					
ANR	4680662	Argument	R_REG_TYPE_ALL		4680595	2					
ANR	4680663	Identifier	R_REG_TYPE_ALL		4680595	0					
ANR	4680664	IfStatement	if ( ri )		4680595	5					
ANR	4680665	Condition	ri	309:5:8514:8515	4680595	0	True				
ANR	4680666	Identifier	ri		4680595	0					
ANR	4680667	CompoundStatement		11:9:223:223	4680595	1					
ANR	4680668	ExpressionStatement	"r_reg_set_value ( dbg -> reg , ri , num )"	310:2:8522:8557	4680595	0	True				
ANR	4680669	CallExpression	"r_reg_set_value ( dbg -> reg , ri , num )"		4680595	0					
ANR	4680670	Callee	r_reg_set_value		4680595	0					
ANR	4680671	Identifier	r_reg_set_value		4680595	0					
ANR	4680672	ArgumentList	dbg -> reg		4680595	1					
ANR	4680673	Argument	dbg -> reg		4680595	0					
ANR	4680674	PtrMemberAccess	dbg -> reg		4680595	0					
ANR	4680675	Identifier	dbg		4680595	0					
ANR	4680676	Identifier	reg		4680595	1					
ANR	4680677	Argument	ri		4680595	1					
ANR	4680678	Identifier	ri		4680595	0					
ANR	4680679	Argument	num		4680595	2					
ANR	4680680	Identifier	num		4680595	0					
ANR	4680681	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , true )"	311:2:8561:8605	4680595	1	True				
ANR	4680682	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , true )"		4680595	0					
ANR	4680683	Callee	r_debug_reg_sync		4680595	0					
ANR	4680684	Identifier	r_debug_reg_sync		4680595	0					
ANR	4680685	ArgumentList	dbg		4680595	1					
ANR	4680686	Argument	dbg		4680595	0					
ANR	4680687	Identifier	dbg		4680595	0					
ANR	4680688	Argument	R_REG_TYPE_ALL		4680595	1					
ANR	4680689	Identifier	R_REG_TYPE_ALL		4680595	0					
ANR	4680690	Argument	true		4680595	2					
ANR	4680691	Identifier	true		4680595	0					
ANR	4680692	ReturnStatement	return ( ri != NULL ) ;	313:1:8611:8630	4680595	6	True				
ANR	4680693	EqualityExpression	ri != NULL		4680595	0		!=			
ANR	4680694	Identifier	ri		4680595	0					
ANR	4680695	Identifier	NULL		4680595	1					
ANR	4680696	ReturnType	R_API int		4680595	1					
ANR	4680697	Identifier	r_debug_reg_set		4680595	2					
ANR	4680698	ParameterList	"struct r_debug_t * dbg , const char * name , ut64 num"		4680595	3					
ANR	4680699	Parameter	struct r_debug_t * dbg	299:26:8243:8263	4680595	0	True				
ANR	4680700	ParameterType	struct r_debug_t *		4680595	0					
ANR	4680701	Identifier	dbg		4680595	1					
ANR	4680702	Parameter	const char * name	299:49:8266:8281	4680595	1	True				
ANR	4680703	ParameterType	const char *		4680595	0					
ANR	4680704	Identifier	name		4680595	1					
ANR	4680705	Parameter	ut64 num	299:67:8284:8291	4680595	2	True				
ANR	4680706	ParameterType	ut64		4680595	0					
ANR	4680707	Identifier	num		4680595	1					
ANR	4680708	CFGEntryNode	ENTRY		4680595		True				
ANR	4680709	CFGExitNode	EXIT		4680595		True				
ANR	4680710	Symbol	role		4680595						
ANR	4680711	Symbol	NULL		4680595						
ANR	4680712	Symbol	num		4680595						
ANR	4680713	Symbol	dbg		4680595						
ANR	4680714	Symbol	false		4680595						
ANR	4680715	Symbol	* dbg		4680595						
ANR	4680716	Symbol	r_reg_get_name_idx		4680595						
ANR	4680717	Symbol	r_reg_get_name		4680595						
ANR	4680718	Symbol	R_REG_TYPE_ALL		4680595						
ANR	4680719	Symbol	ri		4680595						
ANR	4680720	Symbol	name		4680595						
ANR	4680721	Symbol	true		4680595						
ANR	4680722	Symbol	dbg -> reg		4680595						
ANR	4680723	Symbol	r_reg_get		4680595						
ANR	4680724	Function	r_debug_reg_get	316:0:8635:8767							
ANR	4680725	FunctionDef	"r_debug_reg_get (RDebug * dbg , const char * name)"		4680724	0					
ANR	4680726	CompoundStatement		316:58:8693:8767	4680724	0					
ANR	4680727	ReturnStatement	"return r_debug_reg_get_err ( dbg , name , NULL , NULL ) ;"	318:1:8715:8765	4680724	0	True				
ANR	4680728	CallExpression	"r_debug_reg_get_err ( dbg , name , NULL , NULL )"		4680724	0					
ANR	4680729	Callee	r_debug_reg_get_err		4680724	0					
ANR	4680730	Identifier	r_debug_reg_get_err		4680724	0					
ANR	4680731	ArgumentList	dbg		4680724	1					
ANR	4680732	Argument	dbg		4680724	0					
ANR	4680733	Identifier	dbg		4680724	0					
ANR	4680734	Argument	name		4680724	1					
ANR	4680735	Identifier	name		4680724	0					
ANR	4680736	Argument	NULL		4680724	2					
ANR	4680737	Identifier	NULL		4680724	0					
ANR	4680738	Argument	NULL		4680724	3					
ANR	4680739	Identifier	NULL		4680724	0					
ANR	4680740	ReturnType	R_API ut64		4680724	1					
ANR	4680741	Identifier	r_debug_reg_get		4680724	2					
ANR	4680742	ParameterList	"RDebug * dbg , const char * name"		4680724	3					
ANR	4680743	Parameter	RDebug * dbg	316:27:8662:8672	4680724	0	True				
ANR	4680744	ParameterType	RDebug *		4680724	0					
ANR	4680745	Identifier	dbg		4680724	1					
ANR	4680746	Parameter	const char * name	316:40:8675:8690	4680724	1	True				
ANR	4680747	ParameterType	const char *		4680724	0					
ANR	4680748	Identifier	name		4680724	1					
ANR	4680749	CFGEntryNode	ENTRY		4680724		True				
ANR	4680750	CFGExitNode	EXIT		4680724		True				
ANR	4680751	Symbol	NULL		4680724						
ANR	4680752	Symbol	r_debug_reg_get_err		4680724						
ANR	4680753	Symbol	dbg		4680724						
ANR	4680754	Symbol	name		4680724						
ANR	4680755	Function	r_debug_reg_get_err	321:0:8770:9637							
ANR	4680756	FunctionDef	"r_debug_reg_get_err (RDebug * dbg , const char * name , int * err , utX * value)"		4680755	0					
ANR	4680757	CompoundStatement		321:84:8854:9637	4680755	0					
ANR	4680758	IdentifierDeclStatement	RRegItem * ri = NULL ;	322:1:8857:8876	4680755	0	True				
ANR	4680759	IdentifierDecl	* ri = NULL		4680755	0					
ANR	4680760	IdentifierDeclType	RRegItem *		4680755	0					
ANR	4680761	Identifier	ri		4680755	1					
ANR	4680762	AssignmentExpression	* ri = NULL		4680755	2		=			
ANR	4680763	Identifier	NULL		4680755	0					
ANR	4680764	Identifier	NULL		4680755	1					
ANR	4680765	Statement	ut64	323:1:8879:8882	4680755	1	True				
ANR	4680766	Statement	ret	323:6:8884:8886	4680755	2	True				
ANR	4680767	Statement	=	323:10:8888:8888	4680755	3	True				
ANR	4680768	Statement	0L	323:12:8890:8891	4680755	4	True				
ANR	4680769	ExpressionStatement	L	323:14:8892:8893	4680755	5	True				
ANR	4680770	Identifier	L		4680755	0					
ANR	4680771	IdentifierDeclStatement	int role = r_reg_get_name_idx ( name ) ;	324:1:8896:8932	4680755	6	True				
ANR	4680772	IdentifierDecl	role = r_reg_get_name_idx ( name )		4680755	0					
ANR	4680773	IdentifierDeclType	int		4680755	0					
ANR	4680774	Identifier	role		4680755	1					
ANR	4680775	AssignmentExpression	role = r_reg_get_name_idx ( name )		4680755	2		=			
ANR	4680776	Identifier	role		4680755	0					
ANR	4680777	CallExpression	r_reg_get_name_idx ( name )		4680755	1					
ANR	4680778	Callee	r_reg_get_name_idx		4680755	0					
ANR	4680779	Identifier	r_reg_get_name_idx		4680755	0					
ANR	4680780	ArgumentList	name		4680755	1					
ANR	4680781	Argument	name		4680755	0					
ANR	4680782	Identifier	name		4680755	0					
ANR	4680783	IdentifierDeclStatement	const char * pname = name ;	325:1:8935:8959	4680755	7	True				
ANR	4680784	IdentifierDecl	* pname = name		4680755	0					
ANR	4680785	IdentifierDeclType	const char *		4680755	0					
ANR	4680786	Identifier	pname		4680755	1					
ANR	4680787	AssignmentExpression	* pname = name		4680755	2		=			
ANR	4680788	Identifier	name		4680755	0					
ANR	4680789	Identifier	name		4680755	1					
ANR	4680790	IfStatement	if ( err )		4680755	8					
ANR	4680791	Condition	err	326:5:8966:8968	4680755	0	True				
ANR	4680792	Identifier	err		4680755	0					
ANR	4680793	CompoundStatement		6:10:116:116	4680755	1					
ANR	4680794	ExpressionStatement	* err = 0	327:2:8975:8983	4680755	0	True				
ANR	4680795	AssignmentExpression	* err = 0		4680755	0		=			
ANR	4680796	UnaryOperationExpression	* err		4680755	0					
ANR	4680797	UnaryOperator	*		4680755	0					
ANR	4680798	Identifier	err		4680755	1					
ANR	4680799	PrimaryExpression	0		4680755	1					
ANR	4680800	IfStatement	if ( ! dbg || ! dbg -> reg )		4680755	9					
ANR	4680801	Condition	! dbg || ! dbg -> reg	329:5:8993:9009	4680755	0	True				
ANR	4680802	OrExpression	! dbg || ! dbg -> reg		4680755	0		||			
ANR	4680803	UnaryOperationExpression	! dbg		4680755	0					
ANR	4680804	UnaryOperator	!		4680755	0					
ANR	4680805	Identifier	dbg		4680755	1					
ANR	4680806	UnaryOperationExpression	! dbg -> reg		4680755	1					
ANR	4680807	UnaryOperator	!		4680755	0					
ANR	4680808	PtrMemberAccess	dbg -> reg		4680755	1					
ANR	4680809	Identifier	dbg		4680755	0					
ANR	4680810	Identifier	reg		4680755	1					
ANR	4680811	CompoundStatement		9:24:157:157	4680755	1					
ANR	4680812	IfStatement	if ( err )		4680755	0					
ANR	4680813	Condition	err	330:6:9020:9022	4680755	0	True				
ANR	4680814	Identifier	err		4680755	0					
ANR	4680815	CompoundStatement		10:11:170:170	4680755	1					
ANR	4680816	ExpressionStatement	* err = 1	331:3:9030:9038	4680755	0	True				
ANR	4680817	AssignmentExpression	* err = 1		4680755	0		=			
ANR	4680818	UnaryOperationExpression	* err		4680755	0					
ANR	4680819	UnaryOperator	*		4680755	0					
ANR	4680820	Identifier	err		4680755	1					
ANR	4680821	PrimaryExpression	1		4680755	1					
ANR	4680822	ReturnStatement	return UT64_MAX ;	333:2:9046:9061	4680755	1	True				
ANR	4680823	Identifier	UT64_MAX		4680755	0					
ANR	4680824	IfStatement	if ( role != - 1 )		4680755	10					
ANR	4680825	Condition	role != - 1	335:5:9071:9080	4680755	0	True				
ANR	4680826	EqualityExpression	role != - 1		4680755	0		!=			
ANR	4680827	Identifier	role		4680755	0					
ANR	4680828	UnaryOperationExpression	- 1		4680755	1					
ANR	4680829	UnaryOperator	-		4680755	0					
ANR	4680830	PrimaryExpression	1		4680755	1					
ANR	4680831	CompoundStatement		15:17:228:228	4680755	1					
ANR	4680832	ExpressionStatement	"name = r_reg_get_name ( dbg -> reg , role )"	336:2:9087:9125	4680755	0	True				
ANR	4680833	AssignmentExpression	"name = r_reg_get_name ( dbg -> reg , role )"		4680755	0		=			
ANR	4680834	Identifier	name		4680755	0					
ANR	4680835	CallExpression	"r_reg_get_name ( dbg -> reg , role )"		4680755	1					
ANR	4680836	Callee	r_reg_get_name		4680755	0					
ANR	4680837	Identifier	r_reg_get_name		4680755	0					
ANR	4680838	ArgumentList	dbg -> reg		4680755	1					
ANR	4680839	Argument	dbg -> reg		4680755	0					
ANR	4680840	PtrMemberAccess	dbg -> reg		4680755	0					
ANR	4680841	Identifier	dbg		4680755	0					
ANR	4680842	Identifier	reg		4680755	1					
ANR	4680843	Argument	role		4680755	1					
ANR	4680844	Identifier	role		4680755	0					
ANR	4680845	IfStatement	if ( ! name || * name == '\\0' )		4680755	1					
ANR	4680846	Condition	! name || * name == '\\0'	337:6:9133:9154	4680755	0	True				
ANR	4680847	OrExpression	! name || * name == '\\0'		4680755	0		||			
ANR	4680848	UnaryOperationExpression	! name		4680755	0					
ANR	4680849	UnaryOperator	!		4680755	0					
ANR	4680850	Identifier	name		4680755	1					
ANR	4680851	EqualityExpression	* name == '\\0'		4680755	1		==			
ANR	4680852	UnaryOperationExpression	* name		4680755	0					
ANR	4680853	UnaryOperator	*		4680755	0					
ANR	4680854	Identifier	name		4680755	1					
ANR	4680855	PrimaryExpression	'\\0'		4680755	1					
ANR	4680856	CompoundStatement		17:30:302:302	4680755	1					
ANR	4680857	ExpressionStatement	"eprintf ( ""No debug register profile defined for '%s'.\\n"" , pname )"	338:3:9162:9226	4680755	0	True				
ANR	4680858	CallExpression	"eprintf ( ""No debug register profile defined for '%s'.\\n"" , pname )"		4680755	0					
ANR	4680859	Callee	eprintf		4680755	0					
ANR	4680860	Identifier	eprintf		4680755	0					
ANR	4680861	ArgumentList	"""No debug register profile defined for '%s'.\\n"""		4680755	1					
ANR	4680862	Argument	"""No debug register profile defined for '%s'.\\n"""		4680755	0					
ANR	4680863	PrimaryExpression	"""No debug register profile defined for '%s'.\\n"""		4680755	0					
ANR	4680864	Argument	pname		4680755	1					
ANR	4680865	Identifier	pname		4680755	0					
ANR	4680866	IfStatement	if ( err )		4680755	1					
ANR	4680867	Condition	err	339:7:9235:9237	4680755	0	True				
ANR	4680868	Identifier	err		4680755	0					
ANR	4680869	CompoundStatement		19:12:385:385	4680755	1					
ANR	4680870	ExpressionStatement	* err = 1	340:4:9246:9254	4680755	0	True				
ANR	4680871	AssignmentExpression	* err = 1		4680755	0		=			
ANR	4680872	UnaryOperationExpression	* err		4680755	0					
ANR	4680873	UnaryOperator	*		4680755	0					
ANR	4680874	Identifier	err		4680755	1					
ANR	4680875	PrimaryExpression	1		4680755	1					
ANR	4680876	ReturnStatement	return UT64_MAX ;	342:3:9264:9279	4680755	2	True				
ANR	4680877	Identifier	UT64_MAX		4680755	0					
ANR	4680878	ExpressionStatement	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"	345:1:9289:9336	4680755	11	True				
ANR	4680879	AssignmentExpression	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		4680755	0		=			
ANR	4680880	Identifier	ri		4680755	0					
ANR	4680881	CallExpression	"r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		4680755	1					
ANR	4680882	Callee	r_reg_get		4680755	0					
ANR	4680883	Identifier	r_reg_get		4680755	0					
ANR	4680884	ArgumentList	dbg -> reg		4680755	1					
ANR	4680885	Argument	dbg -> reg		4680755	0					
ANR	4680886	PtrMemberAccess	dbg -> reg		4680755	0					
ANR	4680887	Identifier	dbg		4680755	0					
ANR	4680888	Identifier	reg		4680755	1					
ANR	4680889	Argument	name		4680755	1					
ANR	4680890	Identifier	name		4680755	0					
ANR	4680891	Argument	R_REG_TYPE_ALL		4680755	2					
ANR	4680892	Identifier	R_REG_TYPE_ALL		4680755	0					
ANR	4680893	IfStatement	if ( ri )		4680755	12					
ANR	4680894	Condition	ri	346:5:9343:9344	4680755	0	True				
ANR	4680895	Identifier	ri		4680755	0					
ANR	4680896	CompoundStatement		26:9:492:492	4680755	1					
ANR	4680897	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , false )"	347:2:9351:9396	4680755	0	True				
ANR	4680898	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , false )"		4680755	0					
ANR	4680899	Callee	r_debug_reg_sync		4680755	0					
ANR	4680900	Identifier	r_debug_reg_sync		4680755	0					
ANR	4680901	ArgumentList	dbg		4680755	1					
ANR	4680902	Argument	dbg		4680755	0					
ANR	4680903	Identifier	dbg		4680755	0					
ANR	4680904	Argument	R_REG_TYPE_ALL		4680755	1					
ANR	4680905	Identifier	R_REG_TYPE_ALL		4680755	0					
ANR	4680906	Argument	false		4680755	2					
ANR	4680907	Identifier	false		4680755	0					
ANR	4680908	IfStatement	if ( value && ri -> size > 64 )		4680755	1					
ANR	4680909	Condition	value && ri -> size > 64	348:6:9404:9425	4680755	0	True				
ANR	4680910	AndExpression	value && ri -> size > 64		4680755	0		&&			
ANR	4680911	Identifier	value		4680755	0					
ANR	4680912	RelationalExpression	ri -> size > 64		4680755	1		>			
ANR	4680913	PtrMemberAccess	ri -> size		4680755	0					
ANR	4680914	Identifier	ri		4680755	0					
ANR	4680915	Identifier	size		4680755	1					
ANR	4680916	PrimaryExpression	64		4680755	1					
ANR	4680917	CompoundStatement		28:30:573:573	4680755	1					
ANR	4680918	IfStatement	if ( err )		4680755	0					
ANR	4680919	Condition	err	349:7:9437:9439	4680755	0	True				
ANR	4680920	Identifier	err		4680755	0					
ANR	4680921	CompoundStatement		29:12:587:587	4680755	1					
ANR	4680922	ExpressionStatement	* err = ri -> size	350:4:9448:9463	4680755	0	True				
ANR	4680923	AssignmentExpression	* err = ri -> size		4680755	0		=			
ANR	4680924	UnaryOperationExpression	* err		4680755	0					
ANR	4680925	UnaryOperator	*		4680755	0					
ANR	4680926	Identifier	err		4680755	1					
ANR	4680927	PtrMemberAccess	ri -> size		4680755	1					
ANR	4680928	Identifier	ri		4680755	0					
ANR	4680929	Identifier	size		4680755	1					
ANR	4680930	ExpressionStatement	"ret = r_reg_get_value_big ( dbg -> reg , ri , value )"	352:3:9473:9520	4680755	1	True				
ANR	4680931	AssignmentExpression	"ret = r_reg_get_value_big ( dbg -> reg , ri , value )"		4680755	0		=			
ANR	4680932	Identifier	ret		4680755	0					
ANR	4680933	CallExpression	"r_reg_get_value_big ( dbg -> reg , ri , value )"		4680755	1					
ANR	4680934	Callee	r_reg_get_value_big		4680755	0					
ANR	4680935	Identifier	r_reg_get_value_big		4680755	0					
ANR	4680936	ArgumentList	dbg -> reg		4680755	1					
ANR	4680937	Argument	dbg -> reg		4680755	0					
ANR	4680938	PtrMemberAccess	dbg -> reg		4680755	0					
ANR	4680939	Identifier	dbg		4680755	0					
ANR	4680940	Identifier	reg		4680755	1					
ANR	4680941	Argument	ri		4680755	1					
ANR	4680942	Identifier	ri		4680755	0					
ANR	4680943	Argument	value		4680755	2					
ANR	4680944	Identifier	value		4680755	0					
ANR	4680945	ElseStatement	else		4680755	0					
ANR	4680946	CompoundStatement		33:9:676:676	4680755	0					
ANR	4680947	ExpressionStatement	"ret = r_reg_get_value ( dbg -> reg , ri )"	354:6:9539:9575	4680755	0	True				
ANR	4680948	AssignmentExpression	"ret = r_reg_get_value ( dbg -> reg , ri )"		4680755	0		=			
ANR	4680949	Identifier	ret		4680755	0					
ANR	4680950	CallExpression	"r_reg_get_value ( dbg -> reg , ri )"		4680755	1					
ANR	4680951	Callee	r_reg_get_value		4680755	0					
ANR	4680952	Identifier	r_reg_get_value		4680755	0					
ANR	4680953	ArgumentList	dbg -> reg		4680755	1					
ANR	4680954	Argument	dbg -> reg		4680755	0					
ANR	4680955	PtrMemberAccess	dbg -> reg		4680755	0					
ANR	4680956	Identifier	dbg		4680755	0					
ANR	4680957	Identifier	reg		4680755	1					
ANR	4680958	Argument	ri		4680755	1					
ANR	4680959	Identifier	ri		4680755	0					
ANR	4680960	ElseStatement	else		4680755	0					
ANR	4680961	CompoundStatement		36:8:734:734	4680755	0					
ANR	4680962	IfStatement	if ( err )		4680755	0					
ANR	4680963	Condition	err	357:6:9597:9599	4680755	0	True				
ANR	4680964	Identifier	err		4680755	0					
ANR	4680965	CompoundStatement		37:11:747:747	4680755	1					
ANR	4680966	ExpressionStatement	* err = 1	358:3:9607:9615	4680755	0	True				
ANR	4680967	AssignmentExpression	* err = 1		4680755	0		=			
ANR	4680968	UnaryOperationExpression	* err		4680755	0					
ANR	4680969	UnaryOperator	*		4680755	0					
ANR	4680970	Identifier	err		4680755	1					
ANR	4680971	PrimaryExpression	1		4680755	1					
ANR	4680972	ReturnStatement	return ret ;	361:1:9625:9635	4680755	13	True				
ANR	4680973	Identifier	ret		4680755	0					
ANR	4680974	ReturnType	R_API ut64		4680755	1					
ANR	4680975	Identifier	r_debug_reg_get_err		4680755	2					
ANR	4680976	ParameterList	"RDebug * dbg , const char * name , int * err , utX * value"		4680755	3					
ANR	4680977	Parameter	RDebug * dbg	321:31:8801:8811	4680755	0	True				
ANR	4680978	ParameterType	RDebug *		4680755	0					
ANR	4680979	Identifier	dbg		4680755	1					
ANR	4680980	Parameter	const char * name	321:44:8814:8829	4680755	1	True				
ANR	4680981	ParameterType	const char *		4680755	0					
ANR	4680982	Identifier	name		4680755	1					
ANR	4680983	Parameter	int * err	321:62:8832:8839	4680755	2	True				
ANR	4680984	ParameterType	int *		4680755	0					
ANR	4680985	Identifier	err		4680755	1					
ANR	4680986	Parameter	utX * value	321:72:8842:8851	4680755	3	True				
ANR	4680987	ParameterType	utX *		4680755	0					
ANR	4680988	Identifier	value		4680755	1					
ANR	4680989	CFGEntryNode	ENTRY		4680755		True				
ANR	4680990	CFGExitNode	EXIT		4680755		True				
ANR	4680991	Symbol	* name		4680755						
ANR	4680992	Symbol	ret		4680755						
ANR	4680993	Symbol	r_reg_get_value		4680755						
ANR	4680994	Symbol	NULL		4680755						
ANR	4680995	Symbol	role		4680755						
ANR	4680996	Symbol	err		4680755						
ANR	4680997	Symbol	pname		4680755						
ANR	4680998	Symbol	dbg		4680755						
ANR	4680999	Symbol	false		4680755						
ANR	4681000	Symbol	r_reg_get_value_big		4680755						
ANR	4681001	Symbol	* dbg		4680755						
ANR	4681002	Symbol	ri -> size		4680755						
ANR	4681003	Symbol	* err		4680755						
ANR	4681004	Symbol	r_reg_get_name_idx		4680755						
ANR	4681005	Symbol	r_reg_get_name		4680755						
ANR	4681006	Symbol	R_REG_TYPE_ALL		4680755						
ANR	4681007	Symbol	ri		4680755						
ANR	4681008	Symbol	name		4680755						
ANR	4681009	Symbol	dbg -> reg		4680755						
ANR	4681010	Symbol	UT64_MAX		4680755						
ANR	4681011	Symbol	value		4680755						
ANR	4681012	Symbol	* ri		4680755						
ANR	4681013	Symbol	r_reg_get		4680755						
ANR	4681014	Function	r_debug_num_callback	365:0:9665:9848							
ANR	4681015	FunctionDef	"r_debug_num_callback (RNum * userptr , const char * str , int * ok)"		4681014	0					
ANR	4681016	CompoundStatement		365:73:9738:9848	4681014	0					
ANR	4681017	IdentifierDeclStatement	RDebug * dbg = ( RDebug * ) userptr ;	366:1:9741:9772	4681014	0	True				
ANR	4681018	IdentifierDecl	* dbg = ( RDebug * ) userptr		4681014	0					
ANR	4681019	IdentifierDeclType	RDebug *		4681014	0					
ANR	4681020	Identifier	dbg		4681014	1					
ANR	4681021	AssignmentExpression	* dbg = ( RDebug * ) userptr		4681014	2		=			
ANR	4681022	Identifier	dbg		4681014	0					
ANR	4681023	CastExpression	( RDebug * ) userptr		4681014	1					
ANR	4681024	CastTarget	RDebug *		4681014	0					
ANR	4681025	Identifier	userptr		4681014	1					
ANR	4681026	ReturnStatement	"return r_debug_reg_get_err ( dbg , str , ok , NULL ) ;"	368:1:9799:9846	4681014	1	True				
ANR	4681027	CallExpression	"r_debug_reg_get_err ( dbg , str , ok , NULL )"		4681014	0					
ANR	4681028	Callee	r_debug_reg_get_err		4681014	0					
ANR	4681029	Identifier	r_debug_reg_get_err		4681014	0					
ANR	4681030	ArgumentList	dbg		4681014	1					
ANR	4681031	Argument	dbg		4681014	0					
ANR	4681032	Identifier	dbg		4681014	0					
ANR	4681033	Argument	str		4681014	1					
ANR	4681034	Identifier	str		4681014	0					
ANR	4681035	Argument	ok		4681014	2					
ANR	4681036	Identifier	ok		4681014	0					
ANR	4681037	Argument	NULL		4681014	3					
ANR	4681038	Identifier	NULL		4681014	0					
ANR	4681039	ReturnType	R_API ut64		4681014	1					
ANR	4681040	Identifier	r_debug_num_callback		4681014	2					
ANR	4681041	ParameterList	"RNum * userptr , const char * str , int * ok"		4681014	3					
ANR	4681042	Parameter	RNum * userptr	365:32:9697:9709	4681014	0	True				
ANR	4681043	ParameterType	RNum *		4681014	0					
ANR	4681044	Identifier	userptr		4681014	1					
ANR	4681045	Parameter	const char * str	365:47:9712:9726	4681014	1	True				
ANR	4681046	ParameterType	const char *		4681014	0					
ANR	4681047	Identifier	str		4681014	1					
ANR	4681048	Parameter	int * ok	365:64:9729:9735	4681014	2	True				
ANR	4681049	ParameterType	int *		4681014	0					
ANR	4681050	Identifier	ok		4681014	1					
ANR	4681051	CFGEntryNode	ENTRY		4681014		True				
ANR	4681052	CFGExitNode	EXIT		4681014		True				
ANR	4681053	Symbol	str		4681014						
ANR	4681054	Symbol	NULL		4681014						
ANR	4681055	Symbol	r_debug_reg_get_err		4681014						
ANR	4681056	Symbol	userptr		4681014						
ANR	4681057	Symbol	dbg		4681014						
ANR	4681058	Symbol	ok		4681014						
