command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3295600	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_ppc_gnu_ppc-dis.c								
ANR	3295601	DeclStmt									
ANR	3295602	Decl							int	"int ( bfd_vma , struct disassemble_info * , int , ppc_cpu_t )"	print_insn_powerpc
ANR	3295603	Function	__bfd_getb32	38:0:1491:1741							
ANR	3295604	FunctionDef	__bfd_getb32 (const void * p)		3295603	0					
ANR	3295605	CompoundStatement		38:44:1535:1741	3295603	0					
ANR	3295606	IdentifierDeclStatement	const bfd_byte * addr = p ;	39:2:1539:1563	3295603	0	True				
ANR	3295607	IdentifierDecl	* addr = p		3295603	0					
ANR	3295608	IdentifierDeclType	const bfd_byte *		3295603	0					
ANR	3295609	Identifier	addr		3295603	1					
ANR	3295610	AssignmentExpression	* addr = p		3295603	2		=			
ANR	3295611	Identifier	p		3295603	0					
ANR	3295612	Identifier	p		3295603	1					
ANR	3295613	IdentifierDeclStatement	unsigned long v ;	40:2:1567:1582	3295603	1	True				
ANR	3295614	IdentifierDecl	v		3295603	0					
ANR	3295615	IdentifierDeclType	unsigned long		3295603	0					
ANR	3295616	Identifier	v		3295603	1					
ANR	3295617	ExpressionStatement	v = ( unsigned long ) addr [ 0 ] << 24	42:2:1587:1620	3295603	2	True				
ANR	3295618	AssignmentExpression	v = ( unsigned long ) addr [ 0 ] << 24		3295603	0		=			
ANR	3295619	Identifier	v		3295603	0					
ANR	3295620	ShiftExpression	( unsigned long ) addr [ 0 ] << 24		3295603	1		<<			
ANR	3295621	CastExpression	( unsigned long ) addr [ 0 ]		3295603	0					
ANR	3295622	CastTarget	unsigned long		3295603	0					
ANR	3295623	ArrayIndexing	addr [ 0 ]		3295603	1					
ANR	3295624	Identifier	addr		3295603	0					
ANR	3295625	PrimaryExpression	0		3295603	1					
ANR	3295626	PrimaryExpression	24		3295603	1					
ANR	3295627	ExpressionStatement	v |= ( unsigned long ) addr [ 1 ] << 16	43:2:1624:1658	3295603	3	True				
ANR	3295628	AssignmentExpression	v |= ( unsigned long ) addr [ 1 ] << 16		3295603	0		|=			
ANR	3295629	Identifier	v		3295603	0					
ANR	3295630	ShiftExpression	( unsigned long ) addr [ 1 ] << 16		3295603	1		<<			
ANR	3295631	CastExpression	( unsigned long ) addr [ 1 ]		3295603	0					
ANR	3295632	CastTarget	unsigned long		3295603	0					
ANR	3295633	ArrayIndexing	addr [ 1 ]		3295603	1					
ANR	3295634	Identifier	addr		3295603	0					
ANR	3295635	PrimaryExpression	1		3295603	1					
ANR	3295636	PrimaryExpression	16		3295603	1					
ANR	3295637	ExpressionStatement	v |= ( unsigned long ) addr [ 2 ] << 8	44:2:1662:1695	3295603	4	True				
ANR	3295638	AssignmentExpression	v |= ( unsigned long ) addr [ 2 ] << 8		3295603	0		|=			
ANR	3295639	Identifier	v		3295603	0					
ANR	3295640	ShiftExpression	( unsigned long ) addr [ 2 ] << 8		3295603	1		<<			
ANR	3295641	CastExpression	( unsigned long ) addr [ 2 ]		3295603	0					
ANR	3295642	CastTarget	unsigned long		3295603	0					
ANR	3295643	ArrayIndexing	addr [ 2 ]		3295603	1					
ANR	3295644	Identifier	addr		3295603	0					
ANR	3295645	PrimaryExpression	2		3295603	1					
ANR	3295646	PrimaryExpression	8		3295603	1					
ANR	3295647	ExpressionStatement	v |= ( unsigned long ) addr [ 3 ]	45:2:1699:1727	3295603	5	True				
ANR	3295648	AssignmentExpression	v |= ( unsigned long ) addr [ 3 ]		3295603	0		|=			
ANR	3295649	Identifier	v		3295603	0					
ANR	3295650	CastExpression	( unsigned long ) addr [ 3 ]		3295603	1					
ANR	3295651	CastTarget	unsigned long		3295603	0					
ANR	3295652	ArrayIndexing	addr [ 3 ]		3295603	1					
ANR	3295653	Identifier	addr		3295603	0					
ANR	3295654	PrimaryExpression	3		3295603	1					
ANR	3295655	ReturnStatement	return v ;	46:2:1731:1739	3295603	6	True				
ANR	3295656	Identifier	v		3295603	0					
ANR	3295657	ReturnType	static bfd_vma		3295603	1					
ANR	3295658	Identifier	__bfd_getb32		3295603	2					
ANR	3295659	ParameterList	const void * p		3295603	3					
ANR	3295660	Parameter	const void * p	38:29:1520:1532	3295603	0	True				
ANR	3295661	ParameterType	const void *		3295603	0					
ANR	3295662	Identifier	p		3295603	1					
ANR	3295663	CFGEntryNode	ENTRY		3295603		True				
ANR	3295664	CFGExitNode	EXIT		3295603		True				
ANR	3295665	Symbol	p		3295603						
ANR	3295666	Symbol	v		3295603						
ANR	3295667	Symbol	* addr		3295603						
ANR	3295668	Symbol	addr		3295603						
ANR	3295669	Function	__bfd_getl32	49:0:1744:1994							
ANR	3295670	FunctionDef	__bfd_getl32 (const void * p)		3295669	0					
ANR	3295671	CompoundStatement		49:44:1788:1994	3295669	0					
ANR	3295672	IdentifierDeclStatement	const bfd_byte * addr = p ;	50:2:1792:1816	3295669	0	True				
ANR	3295673	IdentifierDecl	* addr = p		3295669	0					
ANR	3295674	IdentifierDeclType	const bfd_byte *		3295669	0					
ANR	3295675	Identifier	addr		3295669	1					
ANR	3295676	AssignmentExpression	* addr = p		3295669	2		=			
ANR	3295677	Identifier	p		3295669	0					
ANR	3295678	Identifier	p		3295669	1					
ANR	3295679	IdentifierDeclStatement	unsigned long v ;	51:2:1820:1835	3295669	1	True				
ANR	3295680	IdentifierDecl	v		3295669	0					
ANR	3295681	IdentifierDeclType	unsigned long		3295669	0					
ANR	3295682	Identifier	v		3295669	1					
ANR	3295683	ExpressionStatement	v = ( unsigned long ) addr [ 0 ]	53:2:1840:1867	3295669	2	True				
ANR	3295684	AssignmentExpression	v = ( unsigned long ) addr [ 0 ]		3295669	0		=			
ANR	3295685	Identifier	v		3295669	0					
ANR	3295686	CastExpression	( unsigned long ) addr [ 0 ]		3295669	1					
ANR	3295687	CastTarget	unsigned long		3295669	0					
ANR	3295688	ArrayIndexing	addr [ 0 ]		3295669	1					
ANR	3295689	Identifier	addr		3295669	0					
ANR	3295690	PrimaryExpression	0		3295669	1					
ANR	3295691	ExpressionStatement	v |= ( unsigned long ) addr [ 1 ] << 8	54:2:1871:1904	3295669	3	True				
ANR	3295692	AssignmentExpression	v |= ( unsigned long ) addr [ 1 ] << 8		3295669	0		|=			
ANR	3295693	Identifier	v		3295669	0					
ANR	3295694	ShiftExpression	( unsigned long ) addr [ 1 ] << 8		3295669	1		<<			
ANR	3295695	CastExpression	( unsigned long ) addr [ 1 ]		3295669	0					
ANR	3295696	CastTarget	unsigned long		3295669	0					
ANR	3295697	ArrayIndexing	addr [ 1 ]		3295669	1					
ANR	3295698	Identifier	addr		3295669	0					
ANR	3295699	PrimaryExpression	1		3295669	1					
ANR	3295700	PrimaryExpression	8		3295669	1					
ANR	3295701	ExpressionStatement	v |= ( unsigned long ) addr [ 2 ] << 16	55:2:1908:1942	3295669	4	True				
ANR	3295702	AssignmentExpression	v |= ( unsigned long ) addr [ 2 ] << 16		3295669	0		|=			
ANR	3295703	Identifier	v		3295669	0					
ANR	3295704	ShiftExpression	( unsigned long ) addr [ 2 ] << 16		3295669	1		<<			
ANR	3295705	CastExpression	( unsigned long ) addr [ 2 ]		3295669	0					
ANR	3295706	CastTarget	unsigned long		3295669	0					
ANR	3295707	ArrayIndexing	addr [ 2 ]		3295669	1					
ANR	3295708	Identifier	addr		3295669	0					
ANR	3295709	PrimaryExpression	2		3295669	1					
ANR	3295710	PrimaryExpression	16		3295669	1					
ANR	3295711	ExpressionStatement	v |= ( unsigned long ) addr [ 3 ] << 24	56:2:1946:1980	3295669	5	True				
ANR	3295712	AssignmentExpression	v |= ( unsigned long ) addr [ 3 ] << 24		3295669	0		|=			
ANR	3295713	Identifier	v		3295669	0					
ANR	3295714	ShiftExpression	( unsigned long ) addr [ 3 ] << 24		3295669	1		<<			
ANR	3295715	CastExpression	( unsigned long ) addr [ 3 ]		3295669	0					
ANR	3295716	CastTarget	unsigned long		3295669	0					
ANR	3295717	ArrayIndexing	addr [ 3 ]		3295669	1					
ANR	3295718	Identifier	addr		3295669	0					
ANR	3295719	PrimaryExpression	3		3295669	1					
ANR	3295720	PrimaryExpression	24		3295669	1					
ANR	3295721	ReturnStatement	return v ;	57:2:1984:1992	3295669	6	True				
ANR	3295722	Identifier	v		3295669	0					
ANR	3295723	ReturnType	static bfd_vma		3295669	1					
ANR	3295724	Identifier	__bfd_getl32		3295669	2					
ANR	3295725	ParameterList	const void * p		3295669	3					
ANR	3295726	Parameter	const void * p	49:29:1773:1785	3295669	0	True				
ANR	3295727	ParameterType	const void *		3295669	0					
ANR	3295728	Identifier	p		3295669	1					
ANR	3295729	CFGEntryNode	ENTRY		3295669		True				
ANR	3295730	CFGExitNode	EXIT		3295669		True				
ANR	3295731	Symbol	p		3295669						
ANR	3295732	Symbol	v		3295669						
ANR	3295733	Symbol	* addr		3295669						
ANR	3295734	Symbol	addr		3295669						
ANR	3295735	ClassDef	dis_private	60:0:1997:2103							
ANR	3295736	DeclStmt									
ANR	3295737	Decl							ppc_cpu_t	ppc_cpu_t	dialect
ANR	3295738	Function	powerpc_init_dialect	73:0:2375:5622							
ANR	3295739	FunctionDef	powerpc_init_dialect (struct disassemble_info * info)		3295738	0					
ANR	3295740	CompoundStatement		75:0:2439:5622	3295738	0					
ANR	3295741	IdentifierDeclStatement	ppc_cpu_t dialect = PPC_OPCODE_PPC ;	76:2:2443:2477	3295738	0	True				
ANR	3295742	IdentifierDecl	dialect = PPC_OPCODE_PPC		3295738	0					
ANR	3295743	IdentifierDeclType	ppc_cpu_t		3295738	0					
ANR	3295744	Identifier	dialect		3295738	1					
ANR	3295745	AssignmentExpression	dialect = PPC_OPCODE_PPC		3295738	2		=			
ANR	3295746	Identifier	PPC_OPCODE_PPC		3295738	0					
ANR	3295747	Identifier	PPC_OPCODE_PPC		3295738	1					
ANR	3295748	IdentifierDeclStatement	"struct dis_private * priv = calloc ( sizeof ( * priv ) , 1 ) ;"	77:2:2481:2534	3295738	1	True				
ANR	3295749	IdentifierDecl	"* priv = calloc ( sizeof ( * priv ) , 1 )"		3295738	0					
ANR	3295750	IdentifierDeclType	struct dis_private *		3295738	0					
ANR	3295751	Identifier	priv		3295738	1					
ANR	3295752	AssignmentExpression	"* priv = calloc ( sizeof ( * priv ) , 1 )"		3295738	2		=			
ANR	3295753	Identifier	priv		3295738	0					
ANR	3295754	CallExpression	"calloc ( sizeof ( * priv ) , 1 )"		3295738	1					
ANR	3295755	Callee	calloc		3295738	0					
ANR	3295756	Identifier	calloc		3295738	0					
ANR	3295757	ArgumentList	sizeof ( * priv )		3295738	1					
ANR	3295758	Argument	sizeof ( * priv )		3295738	0					
ANR	3295759	SizeofExpression	sizeof ( * priv )		3295738	0					
ANR	3295760	Sizeof	sizeof		3295738	0					
ANR	3295761	UnaryOperationExpression	* priv		3295738	1					
ANR	3295762	UnaryOperator	*		3295738	0					
ANR	3295763	Identifier	priv		3295738	1					
ANR	3295764	Argument	1		3295738	1					
ANR	3295765	PrimaryExpression	1		3295738	0					
ANR	3295766	IfStatement	if ( priv == NULL )		3295738	2					
ANR	3295767	Condition	priv == NULL	79:6:2543:2554	3295738	0	True				
ANR	3295768	EqualityExpression	priv == NULL		3295738	0		==			
ANR	3295769	Identifier	priv		3295738	0					
ANR	3295770	Identifier	NULL		3295738	1					
ANR	3295771	CompoundStatement		5:20:117:117	3295738	1					
ANR	3295772	ReturnStatement	return FALSE ;	80:3:2562:2574	3295738	0	True				
ANR	3295773	Identifier	FALSE		3295738	0					
ANR	3295774	IfStatement	if ( BFD_DEFAULT_TARGET_SIZE == 64 )		3295738	3					
ANR	3295775	Condition	BFD_DEFAULT_TARGET_SIZE == 64	83:6:2587:2615	3295738	0	True				
ANR	3295776	EqualityExpression	BFD_DEFAULT_TARGET_SIZE == 64		3295738	0		==			
ANR	3295777	Identifier	BFD_DEFAULT_TARGET_SIZE		3295738	0					
ANR	3295778	PrimaryExpression	64		3295738	1					
ANR	3295779	CompoundStatement		9:37:178:178	3295738	1					
ANR	3295780	ExpressionStatement	dialect |= PPC_OPCODE_64	84:3:2623:2647	3295738	0	True				
ANR	3295781	AssignmentExpression	dialect |= PPC_OPCODE_64		3295738	0		|=			
ANR	3295782	Identifier	dialect		3295738	0					
ANR	3295783	Identifier	PPC_OPCODE_64		3295738	1					
ANR	3295784	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""ppcps"" ) != NULL )"		3295738	4					
ANR	3295785	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""ppcps"" ) != NULL"	87:6:2660:2741	3295738	0	True				
ANR	3295786	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""ppcps"" ) != NULL"		3295738	0		&&			
ANR	3295787	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295788	Identifier	info		3295738	0					
ANR	3295789	Identifier	disassembler_options		3295738	1					
ANR	3295790	EqualityExpression	"strstr ( info -> disassembler_options , ""ppcps"" ) != NULL"		3295738	1		!=			
ANR	3295791	CallExpression	"strstr ( info -> disassembler_options , ""ppcps"" )"		3295738	0					
ANR	3295792	Callee	strstr		3295738	0					
ANR	3295793	Identifier	strstr		3295738	0					
ANR	3295794	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295795	Argument	info -> disassembler_options		3295738	0					
ANR	3295796	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295797	Identifier	info		3295738	0					
ANR	3295798	Identifier	disassembler_options		3295738	1					
ANR	3295799	Argument	"""ppcps"""		3295738	1					
ANR	3295800	PrimaryExpression	"""ppcps"""		3295738	0					
ANR	3295801	Identifier	NULL		3295738	1					
ANR	3295802	CompoundStatement		13:90:304:304	3295738	1					
ANR	3295803	ExpressionStatement	dialect |= PPC_OPCODE_PPCPS	88:3:2749:2776	3295738	0	True				
ANR	3295804	AssignmentExpression	dialect |= PPC_OPCODE_PPCPS		3295738	0		|=			
ANR	3295805	Identifier	dialect		3295738	0					
ANR	3295806	Identifier	PPC_OPCODE_PPCPS		3295738	1					
ANR	3295807	ElseStatement	else		3295738	0					
ANR	3295808	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""booke"" ) != NULL )"		3295738	0					
ANR	3295809	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""booke"" ) != NULL"	89:13:2791:2872	3295738	0	True				
ANR	3295810	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""booke"" ) != NULL"		3295738	0		&&			
ANR	3295811	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295812	Identifier	info		3295738	0					
ANR	3295813	Identifier	disassembler_options		3295738	1					
ANR	3295814	EqualityExpression	"strstr ( info -> disassembler_options , ""booke"" ) != NULL"		3295738	1		!=			
ANR	3295815	CallExpression	"strstr ( info -> disassembler_options , ""booke"" )"		3295738	0					
ANR	3295816	Callee	strstr		3295738	0					
ANR	3295817	Identifier	strstr		3295738	0					
ANR	3295818	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295819	Argument	info -> disassembler_options		3295738	0					
ANR	3295820	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295821	Identifier	info		3295738	0					
ANR	3295822	Identifier	disassembler_options		3295738	1					
ANR	3295823	Argument	"""booke"""		3295738	1					
ANR	3295824	PrimaryExpression	"""booke"""		3295738	0					
ANR	3295825	Identifier	NULL		3295738	1					
ANR	3295826	CompoundStatement		15:97:435:435	3295738	1					
ANR	3295827	ExpressionStatement	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_BOOKE64	90:3:2880:2928	3295738	0	True				
ANR	3295828	AssignmentExpression	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_BOOKE64		3295738	0		|=			
ANR	3295829	Identifier	dialect		3295738	0					
ANR	3295830	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_BOOKE64		3295738	1		|			
ANR	3295831	Identifier	PPC_OPCODE_BOOKE		3295738	0					
ANR	3295832	Identifier	PPC_OPCODE_BOOKE64		3295738	1					
ANR	3295833	ElseStatement	else		3295738	0					
ANR	3295834	IfStatement	"if ( ( info -> mach == bfd_mach_ppc_e500mc ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL ) )"		3295738	0					
ANR	3295835	Condition	"( info -> mach == bfd_mach_ppc_e500mc ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL )"	91:13:2943:3066	3295738	0	True				
ANR	3295836	OrExpression	"( info -> mach == bfd_mach_ppc_e500mc ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL )"		3295738	0		||			
ANR	3295837	EqualityExpression	info -> mach == bfd_mach_ppc_e500mc		3295738	0		==			
ANR	3295838	PtrMemberAccess	info -> mach		3295738	0					
ANR	3295839	Identifier	info		3295738	0					
ANR	3295840	Identifier	mach		3295738	1					
ANR	3295841	Identifier	bfd_mach_ppc_e500mc		3295738	1					
ANR	3295842	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL"		3295738	1		&&			
ANR	3295843	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295844	Identifier	info		3295738	0					
ANR	3295845	Identifier	disassembler_options		3295738	1					
ANR	3295846	EqualityExpression	"strstr ( info -> disassembler_options , ""e500mc"" ) != NULL"		3295738	1		!=			
ANR	3295847	CallExpression	"strstr ( info -> disassembler_options , ""e500mc"" )"		3295738	0					
ANR	3295848	Callee	strstr		3295738	0					
ANR	3295849	Identifier	strstr		3295738	0					
ANR	3295850	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295851	Argument	info -> disassembler_options		3295738	0					
ANR	3295852	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295853	Identifier	info		3295738	0					
ANR	3295854	Identifier	disassembler_options		3295738	1					
ANR	3295855	Argument	"""e500mc"""		3295738	1					
ANR	3295856	PrimaryExpression	"""e500mc"""		3295738	0					
ANR	3295857	Identifier	NULL		3295738	1					
ANR	3295858	CompoundStatement		17:139:629:629	3295738	1					
ANR	3295859	ExpressionStatement	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )	92:3:3074:3199	3295738	0	True				
ANR	3295860	AssignmentExpression	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )		3295738	0		|=			
ANR	3295861	Identifier	dialect		3295738	0					
ANR	3295862	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295863	Identifier	PPC_OPCODE_BOOKE		3295738	0					
ANR	3295864	InclusiveOrExpression	PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295865	Identifier	PPC_OPCODE_ISEL		3295738	0					
ANR	3295866	InclusiveOrExpression	PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295867	Identifier	PPC_OPCODE_PMR		3295738	0					
ANR	3295868	InclusiveOrExpression	PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295869	Identifier	PPC_OPCODE_CACHELCK		3295738	0					
ANR	3295870	InclusiveOrExpression	PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295871	Identifier	PPC_OPCODE_RFMCI		3295738	0					
ANR	3295872	Identifier	PPC_OPCODE_E500MC		3295738	1					
ANR	3295873	ElseStatement	else		3295738	0					
ANR	3295874	IfStatement	"if ( ( info -> mach == bfd_mach_ppc_e500 ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL ) )"		3295738	0					
ANR	3295875	Condition	"( info -> mach == bfd_mach_ppc_e500 ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL )"	93:13:3214:3333	3295738	0	True				
ANR	3295876	OrExpression	"( info -> mach == bfd_mach_ppc_e500 ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL )"		3295738	0		||			
ANR	3295877	EqualityExpression	info -> mach == bfd_mach_ppc_e500		3295738	0		==			
ANR	3295878	PtrMemberAccess	info -> mach		3295738	0					
ANR	3295879	Identifier	info		3295738	0					
ANR	3295880	Identifier	mach		3295738	1					
ANR	3295881	Identifier	bfd_mach_ppc_e500		3295738	1					
ANR	3295882	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL"		3295738	1		&&			
ANR	3295883	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295884	Identifier	info		3295738	0					
ANR	3295885	Identifier	disassembler_options		3295738	1					
ANR	3295886	EqualityExpression	"strstr ( info -> disassembler_options , ""e500"" ) != NULL"		3295738	1		!=			
ANR	3295887	CallExpression	"strstr ( info -> disassembler_options , ""e500"" )"		3295738	0					
ANR	3295888	Callee	strstr		3295738	0					
ANR	3295889	Identifier	strstr		3295738	0					
ANR	3295890	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295891	Argument	info -> disassembler_options		3295738	0					
ANR	3295892	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295893	Identifier	info		3295738	0					
ANR	3295894	Identifier	disassembler_options		3295738	1					
ANR	3295895	Argument	"""e500"""		3295738	1					
ANR	3295896	PrimaryExpression	"""e500"""		3295738	0					
ANR	3295897	Identifier	NULL		3295738	1					
ANR	3295898	CompoundStatement		19:135:896:896	3295738	1					
ANR	3295899	ExpressionStatement	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )	94:3:3341:3520	3295738	0	True				
ANR	3295900	AssignmentExpression	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )		3295738	0		|=			
ANR	3295901	Identifier	dialect		3295738	0					
ANR	3295902	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295903	Identifier	PPC_OPCODE_BOOKE		3295738	0					
ANR	3295904	InclusiveOrExpression	PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295905	Identifier	PPC_OPCODE_SPE		3295738	0					
ANR	3295906	InclusiveOrExpression	PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295907	Identifier	PPC_OPCODE_ISEL		3295738	0					
ANR	3295908	InclusiveOrExpression	PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295909	Identifier	PPC_OPCODE_EFS		3295738	0					
ANR	3295910	InclusiveOrExpression	PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295911	Identifier	PPC_OPCODE_BRLOCK		3295738	0					
ANR	3295912	InclusiveOrExpression	PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295913	Identifier	PPC_OPCODE_PMR		3295738	0					
ANR	3295914	InclusiveOrExpression	PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295915	Identifier	PPC_OPCODE_CACHELCK		3295738	0					
ANR	3295916	InclusiveOrExpression	PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		3295738	1		|			
ANR	3295917	Identifier	PPC_OPCODE_RFMCI		3295738	0					
ANR	3295918	Identifier	PPC_OPCODE_E500MC		3295738	1					
ANR	3295919	ElseStatement	else		3295738	0					
ANR	3295920	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""efs"" ) != NULL )"		3295738	0					
ANR	3295921	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""efs"" ) != NULL"	95:13:3535:3614	3295738	0	True				
ANR	3295922	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""efs"" ) != NULL"		3295738	0		&&			
ANR	3295923	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295924	Identifier	info		3295738	0					
ANR	3295925	Identifier	disassembler_options		3295738	1					
ANR	3295926	EqualityExpression	"strstr ( info -> disassembler_options , ""efs"" ) != NULL"		3295738	1		!=			
ANR	3295927	CallExpression	"strstr ( info -> disassembler_options , ""efs"" )"		3295738	0					
ANR	3295928	Callee	strstr		3295738	0					
ANR	3295929	Identifier	strstr		3295738	0					
ANR	3295930	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295931	Argument	info -> disassembler_options		3295738	0					
ANR	3295932	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295933	Identifier	info		3295738	0					
ANR	3295934	Identifier	disassembler_options		3295738	1					
ANR	3295935	Argument	"""efs"""		3295738	1					
ANR	3295936	PrimaryExpression	"""efs"""		3295738	0					
ANR	3295937	Identifier	NULL		3295738	1					
ANR	3295938	CompoundStatement		21:95:1177:1177	3295738	1					
ANR	3295939	ExpressionStatement	dialect |= PPC_OPCODE_EFS	96:3:3622:3647	3295738	0	True				
ANR	3295940	AssignmentExpression	dialect |= PPC_OPCODE_EFS		3295738	0		|=			
ANR	3295941	Identifier	dialect		3295738	0					
ANR	3295942	Identifier	PPC_OPCODE_EFS		3295738	1					
ANR	3295943	ElseStatement	else		3295738	0					
ANR	3295944	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e300"" ) != NULL )"		3295738	0					
ANR	3295945	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e300"" ) != NULL"	97:13:3662:3742	3295738	0	True				
ANR	3295946	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e300"" ) != NULL"		3295738	0		&&			
ANR	3295947	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295948	Identifier	info		3295738	0					
ANR	3295949	Identifier	disassembler_options		3295738	1					
ANR	3295950	EqualityExpression	"strstr ( info -> disassembler_options , ""e300"" ) != NULL"		3295738	1		!=			
ANR	3295951	CallExpression	"strstr ( info -> disassembler_options , ""e300"" )"		3295738	0					
ANR	3295952	Callee	strstr		3295738	0					
ANR	3295953	Identifier	strstr		3295738	0					
ANR	3295954	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295955	Argument	info -> disassembler_options		3295738	0					
ANR	3295956	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295957	Identifier	info		3295738	0					
ANR	3295958	Identifier	disassembler_options		3295738	1					
ANR	3295959	Argument	"""e300"""		3295738	1					
ANR	3295960	PrimaryExpression	"""e300"""		3295738	0					
ANR	3295961	Identifier	NULL		3295738	1					
ANR	3295962	CompoundStatement		23:96:1305:1305	3295738	1					
ANR	3295963	ExpressionStatement	dialect |= PPC_OPCODE_E300 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON	98:3:3750:3817	3295738	0	True				
ANR	3295964	AssignmentExpression	dialect |= PPC_OPCODE_E300 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON		3295738	0		|=			
ANR	3295965	Identifier	dialect		3295738	0					
ANR	3295966	InclusiveOrExpression	PPC_OPCODE_E300 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON		3295738	1		|			
ANR	3295967	Identifier	PPC_OPCODE_E300		3295738	0					
ANR	3295968	InclusiveOrExpression	PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON		3295738	1		|			
ANR	3295969	Identifier	PPC_OPCODE_CLASSIC		3295738	0					
ANR	3295970	Identifier	PPC_OPCODE_COMMON		3295738	1					
ANR	3295971	ElseStatement	else		3295738	0					
ANR	3295972	IfStatement	"if ( info -> disassembler_options && ( strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL ) )"		3295738	0					
ANR	3295973	Condition	"info -> disassembler_options && ( strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL )"	99:13:3832:3967	3295738	0	True				
ANR	3295974	AndExpression	"info -> disassembler_options && ( strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL )"		3295738	0		&&			
ANR	3295975	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295976	Identifier	info		3295738	0					
ANR	3295977	Identifier	disassembler_options		3295738	1					
ANR	3295978	OrExpression	"strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL"		3295738	1		||			
ANR	3295979	EqualityExpression	"strstr ( info -> disassembler_options , ""440"" ) != NULL"		3295738	0		!=			
ANR	3295980	CallExpression	"strstr ( info -> disassembler_options , ""440"" )"		3295738	0					
ANR	3295981	Callee	strstr		3295738	0					
ANR	3295982	Identifier	strstr		3295738	0					
ANR	3295983	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295984	Argument	info -> disassembler_options		3295738	0					
ANR	3295985	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295986	Identifier	info		3295738	0					
ANR	3295987	Identifier	disassembler_options		3295738	1					
ANR	3295988	Argument	"""440"""		3295738	1					
ANR	3295989	PrimaryExpression	"""440"""		3295738	0					
ANR	3295990	Identifier	NULL		3295738	1					
ANR	3295991	EqualityExpression	"strstr ( info -> disassembler_options , ""464"" ) != NULL"		3295738	1		!=			
ANR	3295992	CallExpression	"strstr ( info -> disassembler_options , ""464"" )"		3295738	0					
ANR	3295993	Callee	strstr		3295738	0					
ANR	3295994	Identifier	strstr		3295738	0					
ANR	3295995	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3295996	Argument	info -> disassembler_options		3295738	0					
ANR	3295997	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3295998	Identifier	info		3295738	0					
ANR	3295999	Identifier	disassembler_options		3295738	1					
ANR	3296000	Argument	"""464"""		3295738	1					
ANR	3296001	PrimaryExpression	"""464"""		3295738	0					
ANR	3296002	Identifier	NULL		3295738	1					
ANR	3296003	CompoundStatement		25:151:1530:1530	3295738	1					
ANR	3296004	ExpressionStatement	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI	100:3:3975:4072	3295738	0	True				
ANR	3296005	AssignmentExpression	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		3295738	0		|=			
ANR	3296006	Identifier	dialect		3295738	0					
ANR	3296007	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		3295738	1		|			
ANR	3296008	Identifier	PPC_OPCODE_BOOKE		3295738	0					
ANR	3296009	InclusiveOrExpression	PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		3295738	1		|			
ANR	3296010	Identifier	PPC_OPCODE_32		3295738	0					
ANR	3296011	InclusiveOrExpression	PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		3295738	1		|			
ANR	3296012	Identifier	PPC_OPCODE_440		3295738	0					
ANR	3296013	InclusiveOrExpression	PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		3295738	1		|			
ANR	3296014	Identifier	PPC_OPCODE_ISEL		3295738	0					
ANR	3296015	Identifier	PPC_OPCODE_RFMCI		3295738	1					
ANR	3296016	ElseStatement	else		3295738	0					
ANR	3296017	CompoundStatement		27:9:1643:1643	3295738	0					
ANR	3296018	ExpressionStatement	dialect |= ( PPC_OPCODE_403 | PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC )	102:3:4088:4194	3295738	0	True				
ANR	3296019	AssignmentExpression	dialect |= ( PPC_OPCODE_403 | PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC )		3295738	0		|=			
ANR	3296020	Identifier	dialect		3295738	0					
ANR	3296021	InclusiveOrExpression	PPC_OPCODE_403 | PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296022	Identifier	PPC_OPCODE_403		3295738	0					
ANR	3296023	InclusiveOrExpression	PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296024	Identifier	PPC_OPCODE_601		3295738	0					
ANR	3296025	InclusiveOrExpression	PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296026	Identifier	PPC_OPCODE_CLASSIC		3295738	0					
ANR	3296027	InclusiveOrExpression	PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296028	Identifier	PPC_OPCODE_COMMON		3295738	0					
ANR	3296029	Identifier	PPC_OPCODE_ALTIVEC		3295738	1					
ANR	3296030	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power4"" ) != NULL )"		3295738	5					
ANR	3296031	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power4"" ) != NULL"	105:6:4207:4289	3295738	0	True				
ANR	3296032	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power4"" ) != NULL"		3295738	0		&&			
ANR	3296033	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296034	Identifier	info		3295738	0					
ANR	3296035	Identifier	disassembler_options		3295738	1					
ANR	3296036	EqualityExpression	"strstr ( info -> disassembler_options , ""power4"" ) != NULL"		3295738	1		!=			
ANR	3296037	CallExpression	"strstr ( info -> disassembler_options , ""power4"" )"		3295738	0					
ANR	3296038	Callee	strstr		3295738	0					
ANR	3296039	Identifier	strstr		3295738	0					
ANR	3296040	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296041	Argument	info -> disassembler_options		3295738	0					
ANR	3296042	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296043	Identifier	info		3295738	0					
ANR	3296044	Identifier	disassembler_options		3295738	1					
ANR	3296045	Argument	"""power4"""		3295738	1					
ANR	3296046	PrimaryExpression	"""power4"""		3295738	0					
ANR	3296047	Identifier	NULL		3295738	1					
ANR	3296048	CompoundStatement		31:91:1852:1852	3295738	1					
ANR	3296049	ExpressionStatement	dialect |= PPC_OPCODE_POWER4	106:3:4297:4325	3295738	0	True				
ANR	3296050	AssignmentExpression	dialect |= PPC_OPCODE_POWER4		3295738	0		|=			
ANR	3296051	Identifier	dialect		3295738	0					
ANR	3296052	Identifier	PPC_OPCODE_POWER4		3295738	1					
ANR	3296053	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power5"" ) != NULL )"		3295738	6					
ANR	3296054	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power5"" ) != NULL"	109:6:4338:4420	3295738	0	True				
ANR	3296055	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power5"" ) != NULL"		3295738	0		&&			
ANR	3296056	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296057	Identifier	info		3295738	0					
ANR	3296058	Identifier	disassembler_options		3295738	1					
ANR	3296059	EqualityExpression	"strstr ( info -> disassembler_options , ""power5"" ) != NULL"		3295738	1		!=			
ANR	3296060	CallExpression	"strstr ( info -> disassembler_options , ""power5"" )"		3295738	0					
ANR	3296061	Callee	strstr		3295738	0					
ANR	3296062	Identifier	strstr		3295738	0					
ANR	3296063	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296064	Argument	info -> disassembler_options		3295738	0					
ANR	3296065	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296066	Identifier	info		3295738	0					
ANR	3296067	Identifier	disassembler_options		3295738	1					
ANR	3296068	Argument	"""power5"""		3295738	1					
ANR	3296069	PrimaryExpression	"""power5"""		3295738	0					
ANR	3296070	Identifier	NULL		3295738	1					
ANR	3296071	CompoundStatement		35:91:1983:1983	3295738	1					
ANR	3296072	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5	110:3:4428:4476	3295738	0	True				
ANR	3296073	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5		3295738	0		|=			
ANR	3296074	Identifier	dialect		3295738	0					
ANR	3296075	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5		3295738	1		|			
ANR	3296076	Identifier	PPC_OPCODE_POWER4		3295738	0					
ANR	3296077	Identifier	PPC_OPCODE_POWER5		3295738	1					
ANR	3296078	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""cell"" ) != NULL )"		3295738	7					
ANR	3296079	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""cell"" ) != NULL"	113:6:4489:4569	3295738	0	True				
ANR	3296080	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""cell"" ) != NULL"		3295738	0		&&			
ANR	3296081	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296082	Identifier	info		3295738	0					
ANR	3296083	Identifier	disassembler_options		3295738	1					
ANR	3296084	EqualityExpression	"strstr ( info -> disassembler_options , ""cell"" ) != NULL"		3295738	1		!=			
ANR	3296085	CallExpression	"strstr ( info -> disassembler_options , ""cell"" )"		3295738	0					
ANR	3296086	Callee	strstr		3295738	0					
ANR	3296087	Identifier	strstr		3295738	0					
ANR	3296088	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296089	Argument	info -> disassembler_options		3295738	0					
ANR	3296090	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296091	Identifier	info		3295738	0					
ANR	3296092	Identifier	disassembler_options		3295738	1					
ANR	3296093	Argument	"""cell"""		3295738	1					
ANR	3296094	PrimaryExpression	"""cell"""		3295738	0					
ANR	3296095	Identifier	NULL		3295738	1					
ANR	3296096	CompoundStatement		39:89:2132:2132	3295738	1					
ANR	3296097	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC	114:3:4577:4644	3295738	0	True				
ANR	3296098	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC		3295738	0		|=			
ANR	3296099	Identifier	dialect		3295738	0					
ANR	3296100	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296101	Identifier	PPC_OPCODE_POWER4		3295738	0					
ANR	3296102	InclusiveOrExpression	PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296103	Identifier	PPC_OPCODE_CELL		3295738	0					
ANR	3296104	Identifier	PPC_OPCODE_ALTIVEC		3295738	1					
ANR	3296105	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power6"" ) != NULL )"		3295738	8					
ANR	3296106	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power6"" ) != NULL"	117:6:4657:4739	3295738	0	True				
ANR	3296107	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power6"" ) != NULL"		3295738	0		&&			
ANR	3296108	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296109	Identifier	info		3295738	0					
ANR	3296110	Identifier	disassembler_options		3295738	1					
ANR	3296111	EqualityExpression	"strstr ( info -> disassembler_options , ""power6"" ) != NULL"		3295738	1		!=			
ANR	3296112	CallExpression	"strstr ( info -> disassembler_options , ""power6"" )"		3295738	0					
ANR	3296113	Callee	strstr		3295738	0					
ANR	3296114	Identifier	strstr		3295738	0					
ANR	3296115	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296116	Argument	info -> disassembler_options		3295738	0					
ANR	3296117	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296118	Identifier	info		3295738	0					
ANR	3296119	Identifier	disassembler_options		3295738	1					
ANR	3296120	Argument	"""power6"""		3295738	1					
ANR	3296121	PrimaryExpression	"""power6"""		3295738	0					
ANR	3296122	Identifier	NULL		3295738	1					
ANR	3296123	CompoundStatement		43:91:2302:2302	3295738	1					
ANR	3296124	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC	118:3:4747:4836	3295738	0	True				
ANR	3296125	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		3295738	0		|=			
ANR	3296126	Identifier	dialect		3295738	0					
ANR	3296127	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296128	Identifier	PPC_OPCODE_POWER4		3295738	0					
ANR	3296129	InclusiveOrExpression	PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296130	Identifier	PPC_OPCODE_POWER5		3295738	0					
ANR	3296131	InclusiveOrExpression	PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		3295738	1		|			
ANR	3296132	Identifier	PPC_OPCODE_POWER6		3295738	0					
ANR	3296133	Identifier	PPC_OPCODE_ALTIVEC		3295738	1					
ANR	3296134	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power7"" ) != NULL )"		3295738	9					
ANR	3296135	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power7"" ) != NULL"	121:6:4849:4931	3295738	0	True				
ANR	3296136	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power7"" ) != NULL"		3295738	0		&&			
ANR	3296137	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296138	Identifier	info		3295738	0					
ANR	3296139	Identifier	disassembler_options		3295738	1					
ANR	3296140	EqualityExpression	"strstr ( info -> disassembler_options , ""power7"" ) != NULL"		3295738	1		!=			
ANR	3296141	CallExpression	"strstr ( info -> disassembler_options , ""power7"" )"		3295738	0					
ANR	3296142	Callee	strstr		3295738	0					
ANR	3296143	Identifier	strstr		3295738	0					
ANR	3296144	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296145	Argument	info -> disassembler_options		3295738	0					
ANR	3296146	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296147	Identifier	info		3295738	0					
ANR	3296148	Identifier	disassembler_options		3295738	1					
ANR	3296149	Argument	"""power7"""		3295738	1					
ANR	3296150	PrimaryExpression	"""power7"""		3295738	0					
ANR	3296151	Identifier	NULL		3295738	1					
ANR	3296152	CompoundStatement		47:91:2494:2494	3295738	1					
ANR	3296153	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX	122:3:4939:5045	3295738	0	True				
ANR	3296154	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		3295738	0		|=			
ANR	3296155	Identifier	dialect		3295738	0					
ANR	3296156	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		3295738	1		|			
ANR	3296157	Identifier	PPC_OPCODE_POWER4		3295738	0					
ANR	3296158	InclusiveOrExpression	PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		3295738	1		|			
ANR	3296159	Identifier	PPC_OPCODE_POWER5		3295738	0					
ANR	3296160	InclusiveOrExpression	PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		3295738	1		|			
ANR	3296161	Identifier	PPC_OPCODE_POWER6		3295738	0					
ANR	3296162	InclusiveOrExpression	PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		3295738	1		|			
ANR	3296163	Identifier	PPC_OPCODE_ALTIVEC		3295738	0					
ANR	3296164	Identifier	PPC_OPCODE_VSX		3295738	1					
ANR	3296165	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""vsx"" ) != NULL )"		3295738	10					
ANR	3296166	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""vsx"" ) != NULL"	125:6:5058:5137	3295738	0	True				
ANR	3296167	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""vsx"" ) != NULL"		3295738	0		&&			
ANR	3296168	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296169	Identifier	info		3295738	0					
ANR	3296170	Identifier	disassembler_options		3295738	1					
ANR	3296171	EqualityExpression	"strstr ( info -> disassembler_options , ""vsx"" ) != NULL"		3295738	1		!=			
ANR	3296172	CallExpression	"strstr ( info -> disassembler_options , ""vsx"" )"		3295738	0					
ANR	3296173	Callee	strstr		3295738	0					
ANR	3296174	Identifier	strstr		3295738	0					
ANR	3296175	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296176	Argument	info -> disassembler_options		3295738	0					
ANR	3296177	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296178	Identifier	info		3295738	0					
ANR	3296179	Identifier	disassembler_options		3295738	1					
ANR	3296180	Argument	"""vsx"""		3295738	1					
ANR	3296181	PrimaryExpression	"""vsx"""		3295738	0					
ANR	3296182	Identifier	NULL		3295738	1					
ANR	3296183	CompoundStatement		51:88:2700:2700	3295738	1					
ANR	3296184	ExpressionStatement	dialect |= PPC_OPCODE_VSX	126:3:5145:5170	3295738	0	True				
ANR	3296185	AssignmentExpression	dialect |= PPC_OPCODE_VSX		3295738	0		|=			
ANR	3296186	Identifier	dialect		3295738	0					
ANR	3296187	Identifier	PPC_OPCODE_VSX		3295738	1					
ANR	3296188	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""any"" ) != NULL )"		3295738	11					
ANR	3296189	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""any"" ) != NULL"	129:6:5183:5262	3295738	0	True				
ANR	3296190	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""any"" ) != NULL"		3295738	0		&&			
ANR	3296191	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296192	Identifier	info		3295738	0					
ANR	3296193	Identifier	disassembler_options		3295738	1					
ANR	3296194	EqualityExpression	"strstr ( info -> disassembler_options , ""any"" ) != NULL"		3295738	1		!=			
ANR	3296195	CallExpression	"strstr ( info -> disassembler_options , ""any"" )"		3295738	0					
ANR	3296196	Callee	strstr		3295738	0					
ANR	3296197	Identifier	strstr		3295738	0					
ANR	3296198	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296199	Argument	info -> disassembler_options		3295738	0					
ANR	3296200	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296201	Identifier	info		3295738	0					
ANR	3296202	Identifier	disassembler_options		3295738	1					
ANR	3296203	Argument	"""any"""		3295738	1					
ANR	3296204	PrimaryExpression	"""any"""		3295738	0					
ANR	3296205	Identifier	NULL		3295738	1					
ANR	3296206	CompoundStatement		55:88:2825:2825	3295738	1					
ANR	3296207	ExpressionStatement	dialect |= PPC_OPCODE_ANY	130:3:5270:5295	3295738	0	True				
ANR	3296208	AssignmentExpression	dialect |= PPC_OPCODE_ANY		3295738	0		|=			
ANR	3296209	Identifier	dialect		3295738	0					
ANR	3296210	Identifier	PPC_OPCODE_ANY		3295738	1					
ANR	3296211	IfStatement	if ( info -> disassembler_options )		3295738	12					
ANR	3296212	Condition	info -> disassembler_options	133:6:5308:5333	3295738	0	True				
ANR	3296213	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296214	Identifier	info		3295738	0					
ANR	3296215	Identifier	disassembler_options		3295738	1					
ANR	3296216	CompoundStatement		60:4:2900:2900	3295738	1					
ANR	3296217	IfStatement	"if ( strstr ( info -> disassembler_options , ""32"" ) != NULL )"		3295738	0					
ANR	3296218	Condition	"strstr ( info -> disassembler_options , ""32"" ) != NULL"	135:7:5349:5397	3295738	0	True				
ANR	3296219	EqualityExpression	"strstr ( info -> disassembler_options , ""32"" ) != NULL"		3295738	0		!=			
ANR	3296220	CallExpression	"strstr ( info -> disassembler_options , ""32"" )"		3295738	0					
ANR	3296221	Callee	strstr		3295738	0					
ANR	3296222	Identifier	strstr		3295738	0					
ANR	3296223	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296224	Argument	info -> disassembler_options		3295738	0					
ANR	3296225	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296226	Identifier	info		3295738	0					
ANR	3296227	Identifier	disassembler_options		3295738	1					
ANR	3296228	Argument	"""32"""		3295738	1					
ANR	3296229	PrimaryExpression	"""32"""		3295738	0					
ANR	3296230	Identifier	NULL		3295738	1					
ANR	3296231	CompoundStatement		61:58:2960:2960	3295738	1					
ANR	3296232	ExpressionStatement	dialect &= ~PPC_OPCODE_64	136:4:5406:5431	3295738	0	True				
ANR	3296233	AssignmentExpression	dialect &= ~PPC_OPCODE_64		3295738	0		&=			
ANR	3296234	Identifier	dialect		3295738	0					
ANR	3296235	Identifier	~PPC_OPCODE_64		3295738	1					
ANR	3296236	ElseStatement	else		3295738	0					
ANR	3296237	IfStatement	"if ( strstr ( info -> disassembler_options , ""64"" ) != NULL )"		3295738	0					
ANR	3296238	Condition	"strstr ( info -> disassembler_options , ""64"" ) != NULL"	137:14:5447:5495	3295738	0	True				
ANR	3296239	EqualityExpression	"strstr ( info -> disassembler_options , ""64"" ) != NULL"		3295738	0		!=			
ANR	3296240	CallExpression	"strstr ( info -> disassembler_options , ""64"" )"		3295738	0					
ANR	3296241	Callee	strstr		3295738	0					
ANR	3296242	Identifier	strstr		3295738	0					
ANR	3296243	ArgumentList	info -> disassembler_options		3295738	1					
ANR	3296244	Argument	info -> disassembler_options		3295738	0					
ANR	3296245	PtrMemberAccess	info -> disassembler_options		3295738	0					
ANR	3296246	Identifier	info		3295738	0					
ANR	3296247	Identifier	disassembler_options		3295738	1					
ANR	3296248	Argument	"""64"""		3295738	1					
ANR	3296249	PrimaryExpression	"""64"""		3295738	0					
ANR	3296250	Identifier	NULL		3295738	1					
ANR	3296251	CompoundStatement		63:65:3058:3058	3295738	1					
ANR	3296252	ExpressionStatement	dialect |= PPC_OPCODE_64	138:4:5504:5528	3295738	0	True				
ANR	3296253	AssignmentExpression	dialect |= PPC_OPCODE_64		3295738	0		|=			
ANR	3296254	Identifier	dialect		3295738	0					
ANR	3296255	Identifier	PPC_OPCODE_64		3295738	1					
ANR	3296256	ExpressionStatement	info -> private_data = priv	142:2:5544:5569	3295738	13	True				
ANR	3296257	AssignmentExpression	info -> private_data = priv		3295738	0		=			
ANR	3296258	PtrMemberAccess	info -> private_data		3295738	0					
ANR	3296259	Identifier	info		3295738	0					
ANR	3296260	Identifier	private_data		3295738	1					
ANR	3296261	Identifier	priv		3295738	1					
ANR	3296262	ExpressionStatement	POWERPC_DIALECT ( info ) = dialect	143:2:5573:5604	3295738	14	True				
ANR	3296263	AssignmentExpression	POWERPC_DIALECT ( info ) = dialect		3295738	0		=			
ANR	3296264	CallExpression	POWERPC_DIALECT ( info )		3295738	0					
ANR	3296265	Callee	POWERPC_DIALECT		3295738	0					
ANR	3296266	Identifier	POWERPC_DIALECT		3295738	0					
ANR	3296267	ArgumentList	info		3295738	1					
ANR	3296268	Argument	info		3295738	0					
ANR	3296269	Identifier	info		3295738	0					
ANR	3296270	Identifier	dialect		3295738	1					
ANR	3296271	ReturnStatement	return TRUE ;	145:2:5609:5620	3295738	15	True				
ANR	3296272	Identifier	TRUE		3295738	0					
ANR	3296273	ReturnType	static int		3295738	1					
ANR	3296274	Identifier	powerpc_init_dialect		3295738	2					
ANR	3296275	ParameterList	struct disassemble_info * info		3295738	3					
ANR	3296276	Parameter	struct disassemble_info * info	74:22:2408:2436	3295738	0	True				
ANR	3296277	ParameterType	struct disassemble_info *		3295738	0					
ANR	3296278	Identifier	info		3295738	1					
ANR	3296279	CFGEntryNode	ENTRY		3295738		True				
ANR	3296280	CFGExitNode	EXIT		3295738		True				
ANR	3296281	Symbol	dialect		3295738						
ANR	3296282	Symbol	* priv		3295738						
ANR	3296283	Symbol	PPC_OPCODE_32		3295738						
ANR	3296284	Symbol	calloc		3295738						
ANR	3296285	Symbol	PPC_OPCODE_E500MC		3295738						
ANR	3296286	Symbol	POWERPC_DIALECT		3295738						
ANR	3296287	Symbol	PPC_OPCODE_CLASSIC		3295738						
ANR	3296288	Symbol	priv		3295738						
ANR	3296289	Symbol	PPC_OPCODE_RFMCI		3295738						
ANR	3296290	Symbol	PPC_OPCODE_440		3295738						
ANR	3296291	Symbol	BFD_DEFAULT_TARGET_SIZE		3295738						
ANR	3296292	Symbol	info		3295738						
ANR	3296293	Symbol	PPC_OPCODE_ISEL		3295738						
ANR	3296294	Symbol	PPC_OPCODE_BOOKE64		3295738						
ANR	3296295	Symbol	PPC_OPCODE_VSX		3295738						
ANR	3296296	Symbol	info -> disassembler_options		3295738						
ANR	3296297	Symbol	PPC_OPCODE_BRLOCK		3295738						
ANR	3296298	Symbol	NULL		3295738						
ANR	3296299	Symbol	PPC_OPCODE_403		3295738						
ANR	3296300	Symbol	PPC_OPCODE_601		3295738						
ANR	3296301	Symbol	info -> private_data		3295738						
ANR	3296302	Symbol	info -> mach		3295738						
ANR	3296303	Symbol	PPC_OPCODE_PMR		3295738						
ANR	3296304	Symbol	PPC_OPCODE_E300		3295738						
ANR	3296305	Symbol	PPC_OPCODE_PPCPS		3295738						
ANR	3296306	Symbol	PPC_OPCODE_PPC		3295738						
ANR	3296307	Symbol	TRUE		3295738						
ANR	3296308	Symbol	PPC_OPCODE_CACHELCK		3295738						
ANR	3296309	Symbol	PPC_OPCODE_64		3295738						
ANR	3296310	Symbol	PPC_OPCODE_ANY		3295738						
ANR	3296311	Symbol	PPC_OPCODE_CELL		3295738						
ANR	3296312	Symbol	~PPC_OPCODE_64		3295738						
ANR	3296313	Symbol	PPC_OPCODE_BOOKE		3295738						
ANR	3296314	Symbol	PPC_OPCODE_SPE		3295738						
ANR	3296315	Symbol	PPC_OPCODE_POWER4		3295738						
ANR	3296316	Symbol	strstr		3295738						
ANR	3296317	Symbol	PPC_OPCODE_POWER5		3295738						
ANR	3296318	Symbol	bfd_mach_ppc_e500		3295738						
ANR	3296319	Symbol	PPC_OPCODE_POWER6		3295738						
ANR	3296320	Symbol	bfd_mach_ppc_e500mc		3295738						
ANR	3296321	Symbol	FALSE		3295738						
ANR	3296322	Symbol	PPC_OPCODE_EFS		3295738						
ANR	3296323	Symbol	PPC_OPCODE_ALTIVEC		3295738						
ANR	3296324	Symbol	* info		3295738						
ANR	3296325	Symbol	PPC_OPCODE_COMMON		3295738						
ANR	3296326	Function	print_insn_big_powerpc	150:0:5673:5905							
ANR	3296327	FunctionDef	"print_insn_big_powerpc (bfd_vma memaddr , struct disassemble_info * info)"		3296326	0					
ANR	3296328	CompoundStatement		152:0:5749:5905	3296326	0					
ANR	3296329	IfStatement	if ( info -> private_data == NULL && ! powerpc_init_dialect ( info ) )		3296326	0					
ANR	3296330	Condition	info -> private_data == NULL && ! powerpc_init_dialect ( info )	153:5:5756:5813	3296326	0	True				
ANR	3296331	AndExpression	info -> private_data == NULL && ! powerpc_init_dialect ( info )		3296326	0		&&			
ANR	3296332	EqualityExpression	info -> private_data == NULL		3296326	0		==			
ANR	3296333	PtrMemberAccess	info -> private_data		3296326	0					
ANR	3296334	Identifier	info		3296326	0					
ANR	3296335	Identifier	private_data		3296326	1					
ANR	3296336	Identifier	NULL		3296326	1					
ANR	3296337	UnaryOperationExpression	! powerpc_init_dialect ( info )		3296326	1					
ANR	3296338	UnaryOperator	!		3296326	0					
ANR	3296339	CallExpression	powerpc_init_dialect ( info )		3296326	1					
ANR	3296340	Callee	powerpc_init_dialect		3296326	0					
ANR	3296341	Identifier	powerpc_init_dialect		3296326	0					
ANR	3296342	ArgumentList	info		3296326	1					
ANR	3296343	Argument	info		3296326	0					
ANR	3296344	Identifier	info		3296326	0					
ANR	3296345	CompoundStatement		2:65:66:66	3296326	1					
ANR	3296346	ReturnStatement	return - 1 ;	154:2:5820:5829	3296326	0	True				
ANR	3296347	UnaryOperationExpression	- 1		3296326	0					
ANR	3296348	UnaryOperator	-		3296326	0					
ANR	3296349	PrimaryExpression	1		3296326	1					
ANR	3296350	ReturnStatement	"return print_insn_powerpc ( memaddr , info , 1 , POWERPC_DIALECT ( info ) ) ;"	156:1:5835:5903	3296326	1	True				
ANR	3296351	CallExpression	"print_insn_powerpc ( memaddr , info , 1 , POWERPC_DIALECT ( info ) )"		3296326	0					
ANR	3296352	Callee	print_insn_powerpc		3296326	0					
ANR	3296353	Identifier	print_insn_powerpc		3296326	0					
ANR	3296354	ArgumentList	memaddr		3296326	1					
ANR	3296355	Argument	memaddr		3296326	0					
ANR	3296356	Identifier	memaddr		3296326	0					
ANR	3296357	Argument	info		3296326	1					
ANR	3296358	Identifier	info		3296326	0					
ANR	3296359	Argument	1		3296326	2					
ANR	3296360	PrimaryExpression	1		3296326	0					
ANR	3296361	Argument	POWERPC_DIALECT ( info )		3296326	3					
ANR	3296362	CallExpression	POWERPC_DIALECT ( info )		3296326	0					
ANR	3296363	Callee	POWERPC_DIALECT		3296326	0					
ANR	3296364	Identifier	POWERPC_DIALECT		3296326	0					
ANR	3296365	ArgumentList	info		3296326	1					
ANR	3296366	Argument	info		3296326	0					
ANR	3296367	Identifier	info		3296326	0					
ANR	3296368	ReturnType	int		3296326	1					
ANR	3296369	Identifier	print_insn_big_powerpc		3296326	2					
ANR	3296370	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		3296326	3					
ANR	3296371	Parameter	bfd_vma memaddr	151:24:5701:5715	3296326	0	True				
ANR	3296372	ParameterType	bfd_vma		3296326	0					
ANR	3296373	Identifier	memaddr		3296326	1					
ANR	3296374	Parameter	struct disassemble_info * info	151:41:5718:5746	3296326	1	True				
ANR	3296375	ParameterType	struct disassemble_info *		3296326	0					
ANR	3296376	Identifier	info		3296326	1					
ANR	3296377	CFGEntryNode	ENTRY		3296326		True				
ANR	3296378	CFGExitNode	EXIT		3296326		True				
ANR	3296379	Symbol	print_insn_powerpc		3296326						
ANR	3296380	Symbol	NULL		3296326						
ANR	3296381	Symbol	info -> private_data		3296326						
ANR	3296382	Symbol	POWERPC_DIALECT		3296326						
ANR	3296383	Symbol	memaddr		3296326						
ANR	3296384	Symbol	* info		3296326						
ANR	3296385	Symbol	powerpc_init_dialect		3296326						
ANR	3296386	Symbol	info		3296326						
ANR	3296387	Function	print_insn_little_powerpc	161:0:5959:6194							
ANR	3296388	FunctionDef	"print_insn_little_powerpc (bfd_vma memaddr , struct disassemble_info * info)"		3296387	0					
ANR	3296389	CompoundStatement		163:0:6038:6194	3296387	0					
ANR	3296390	IfStatement	if ( info -> private_data == NULL && ! powerpc_init_dialect ( info ) )		3296387	0					
ANR	3296391	Condition	info -> private_data == NULL && ! powerpc_init_dialect ( info )	164:5:6045:6102	3296387	0	True				
ANR	3296392	AndExpression	info -> private_data == NULL && ! powerpc_init_dialect ( info )		3296387	0		&&			
ANR	3296393	EqualityExpression	info -> private_data == NULL		3296387	0		==			
ANR	3296394	PtrMemberAccess	info -> private_data		3296387	0					
ANR	3296395	Identifier	info		3296387	0					
ANR	3296396	Identifier	private_data		3296387	1					
ANR	3296397	Identifier	NULL		3296387	1					
ANR	3296398	UnaryOperationExpression	! powerpc_init_dialect ( info )		3296387	1					
ANR	3296399	UnaryOperator	!		3296387	0					
ANR	3296400	CallExpression	powerpc_init_dialect ( info )		3296387	1					
ANR	3296401	Callee	powerpc_init_dialect		3296387	0					
ANR	3296402	Identifier	powerpc_init_dialect		3296387	0					
ANR	3296403	ArgumentList	info		3296387	1					
ANR	3296404	Argument	info		3296387	0					
ANR	3296405	Identifier	info		3296387	0					
ANR	3296406	CompoundStatement		2:65:66:66	3296387	1					
ANR	3296407	ReturnStatement	return - 1 ;	165:2:6109:6118	3296387	0	True				
ANR	3296408	UnaryOperationExpression	- 1		3296387	0					
ANR	3296409	UnaryOperator	-		3296387	0					
ANR	3296410	PrimaryExpression	1		3296387	1					
ANR	3296411	ReturnStatement	"return print_insn_powerpc ( memaddr , info , 0 , POWERPC_DIALECT ( info ) ) ;"	167:1:6124:6192	3296387	1	True				
ANR	3296412	CallExpression	"print_insn_powerpc ( memaddr , info , 0 , POWERPC_DIALECT ( info ) )"		3296387	0					
ANR	3296413	Callee	print_insn_powerpc		3296387	0					
ANR	3296414	Identifier	print_insn_powerpc		3296387	0					
ANR	3296415	ArgumentList	memaddr		3296387	1					
ANR	3296416	Argument	memaddr		3296387	0					
ANR	3296417	Identifier	memaddr		3296387	0					
ANR	3296418	Argument	info		3296387	1					
ANR	3296419	Identifier	info		3296387	0					
ANR	3296420	Argument	0		3296387	2					
ANR	3296421	PrimaryExpression	0		3296387	0					
ANR	3296422	Argument	POWERPC_DIALECT ( info )		3296387	3					
ANR	3296423	CallExpression	POWERPC_DIALECT ( info )		3296387	0					
ANR	3296424	Callee	POWERPC_DIALECT		3296387	0					
ANR	3296425	Identifier	POWERPC_DIALECT		3296387	0					
ANR	3296426	ArgumentList	info		3296387	1					
ANR	3296427	Argument	info		3296387	0					
ANR	3296428	Identifier	info		3296387	0					
ANR	3296429	ReturnType	int		3296387	1					
ANR	3296430	Identifier	print_insn_little_powerpc		3296387	2					
ANR	3296431	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		3296387	3					
ANR	3296432	Parameter	bfd_vma memaddr	162:27:5990:6004	3296387	0	True				
ANR	3296433	ParameterType	bfd_vma		3296387	0					
ANR	3296434	Identifier	memaddr		3296387	1					
ANR	3296435	Parameter	struct disassemble_info * info	162:44:6007:6035	3296387	1	True				
ANR	3296436	ParameterType	struct disassemble_info *		3296387	0					
ANR	3296437	Identifier	info		3296387	1					
ANR	3296438	CFGEntryNode	ENTRY		3296387		True				
ANR	3296439	CFGExitNode	EXIT		3296387		True				
ANR	3296440	Symbol	print_insn_powerpc		3296387						
ANR	3296441	Symbol	NULL		3296387						
ANR	3296442	Symbol	info -> private_data		3296387						
ANR	3296443	Symbol	POWERPC_DIALECT		3296387						
ANR	3296444	Symbol	memaddr		3296387						
ANR	3296445	Symbol	* info		3296387						
ANR	3296446	Symbol	powerpc_init_dialect		3296387						
ANR	3296447	Symbol	info		3296387						
ANR	3296448	Function	print_insn_rs6000	172:0:6242:6381							
ANR	3296449	FunctionDef	"print_insn_rs6000 (bfd_vma memaddr , struct disassemble_info * info)"		3296448	0					
ANR	3296450	CompoundStatement		174:0:6313:6381	3296448	0					
ANR	3296451	ReturnStatement	"return print_insn_powerpc ( memaddr , info , 1 , PPC_OPCODE_POWER ) ;"	175:2:6317:6379	3296448	0	True				
ANR	3296452	CallExpression	"print_insn_powerpc ( memaddr , info , 1 , PPC_OPCODE_POWER )"		3296448	0					
ANR	3296453	Callee	print_insn_powerpc		3296448	0					
ANR	3296454	Identifier	print_insn_powerpc		3296448	0					
ANR	3296455	ArgumentList	memaddr		3296448	1					
ANR	3296456	Argument	memaddr		3296448	0					
ANR	3296457	Identifier	memaddr		3296448	0					
ANR	3296458	Argument	info		3296448	1					
ANR	3296459	Identifier	info		3296448	0					
ANR	3296460	Argument	1		3296448	2					
ANR	3296461	PrimaryExpression	1		3296448	0					
ANR	3296462	Argument	PPC_OPCODE_POWER		3296448	3					
ANR	3296463	Identifier	PPC_OPCODE_POWER		3296448	0					
ANR	3296464	ReturnType	int		3296448	1					
ANR	3296465	Identifier	print_insn_rs6000		3296448	2					
ANR	3296466	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		3296448	3					
ANR	3296467	Parameter	bfd_vma memaddr	173:19:6265:6279	3296448	0	True				
ANR	3296468	ParameterType	bfd_vma		3296448	0					
ANR	3296469	Identifier	memaddr		3296448	1					
ANR	3296470	Parameter	struct disassemble_info * info	173:36:6282:6310	3296448	1	True				
ANR	3296471	ParameterType	struct disassemble_info *		3296448	0					
ANR	3296472	Identifier	info		3296448	1					
ANR	3296473	CFGEntryNode	ENTRY		3296448		True				
ANR	3296474	CFGExitNode	EXIT		3296448		True				
ANR	3296475	Symbol	print_insn_powerpc		3296448						
ANR	3296476	Symbol	memaddr		3296448						
ANR	3296477	Symbol	PPC_OPCODE_POWER		3296448						
ANR	3296478	Symbol	info		3296448						
ANR	3296479	Function	operand_value_powerpc	180:0:6457:7224							
ANR	3296480	FunctionDef	"operand_value_powerpc (const struct powerpc_operand * operand , unsigned long insn , ppc_cpu_t dialect)"		3296479	0					
ANR	3296481	CompoundStatement		183:0:6579:7224	3296479	0					
ANR	3296482	IdentifierDeclStatement	long value ;	184:2:6583:6593	3296479	0	True				
ANR	3296483	IdentifierDecl	value		3296479	0					
ANR	3296484	IdentifierDeclType	long		3296479	0					
ANR	3296485	Identifier	value		3296479	1					
ANR	3296486	IdentifierDeclStatement	int invalid ;	185:2:6597:6608	3296479	1	True				
ANR	3296487	IdentifierDecl	invalid		3296479	0					
ANR	3296488	IdentifierDeclType	int		3296479	0					
ANR	3296489	Identifier	invalid		3296479	1					
ANR	3296490	IfStatement	if ( operand -> extract )		3296479	2					
ANR	3296491	Condition	operand -> extract	187:6:6665:6680	3296479	0	True				
ANR	3296492	PtrMemberAccess	operand -> extract		3296479	0					
ANR	3296493	Identifier	operand		3296479	0					
ANR	3296494	Identifier	extract		3296479	1					
ANR	3296495	CompoundStatement		5:24:103:103	3296479	1					
ANR	3296496	ExpressionStatement	"value = ( * operand -> extract ) ( insn , dialect , & invalid )"	188:3:6688:6741	3296479	0	True				
ANR	3296497	AssignmentExpression	"value = ( * operand -> extract ) ( insn , dialect , & invalid )"		3296479	0		=			
ANR	3296498	Identifier	value		3296479	0					
ANR	3296499	CallExpression	"( * operand -> extract ) ( insn , dialect , & invalid )"		3296479	1					
ANR	3296500	Callee	* operand -> extract		3296479	0					
ANR	3296501	UnaryOperationExpression	* operand -> extract		3296479	0					
ANR	3296502	UnaryOperator	*		3296479	0					
ANR	3296503	PtrMemberAccess	operand -> extract		3296479	1					
ANR	3296504	Identifier	operand		3296479	0					
ANR	3296505	Identifier	extract		3296479	1					
ANR	3296506	ArgumentList	insn		3296479	1					
ANR	3296507	Argument	insn		3296479	0					
ANR	3296508	Identifier	insn		3296479	0					
ANR	3296509	Argument	dialect		3296479	1					
ANR	3296510	Identifier	dialect		3296479	0					
ANR	3296511	Argument	& invalid		3296479	2					
ANR	3296512	UnaryOperationExpression	& invalid		3296479	0					
ANR	3296513	UnaryOperator	&		3296479	0					
ANR	3296514	Identifier	invalid		3296479	1					
ANR	3296515	ElseStatement	else		3296479	0					
ANR	3296516	CompoundStatement		7:9:172:172	3296479	0					
ANR	3296517	ExpressionStatement	value = ( insn >> operand -> shift ) & operand -> bitm	190:3:6757:6805	3296479	0	True				
ANR	3296518	AssignmentExpression	value = ( insn >> operand -> shift ) & operand -> bitm		3296479	0		=			
ANR	3296519	Identifier	value		3296479	0					
ANR	3296520	BitAndExpression	( insn >> operand -> shift ) & operand -> bitm		3296479	1		&			
ANR	3296521	ShiftExpression	insn >> operand -> shift		3296479	0		>>			
ANR	3296522	Identifier	insn		3296479	0					
ANR	3296523	PtrMemberAccess	operand -> shift		3296479	1					
ANR	3296524	Identifier	operand		3296479	0					
ANR	3296525	Identifier	shift		3296479	1					
ANR	3296526	PtrMemberAccess	operand -> bitm		3296479	1					
ANR	3296527	Identifier	operand		3296479	0					
ANR	3296528	Identifier	bitm		3296479	1					
ANR	3296529	IfStatement	if ( ( operand -> flags & PPC_OPERAND_SIGNED ) != 0 )		3296479	1					
ANR	3296530	Condition	( operand -> flags & PPC_OPERAND_SIGNED ) != 0	191:7:6814:6855	3296479	0	True				
ANR	3296531	EqualityExpression	( operand -> flags & PPC_OPERAND_SIGNED ) != 0		3296479	0		!=			
ANR	3296532	BitAndExpression	operand -> flags & PPC_OPERAND_SIGNED		3296479	0		&			
ANR	3296533	PtrMemberAccess	operand -> flags		3296479	0					
ANR	3296534	Identifier	operand		3296479	0					
ANR	3296535	Identifier	flags		3296479	1					
ANR	3296536	Identifier	PPC_OPERAND_SIGNED		3296479	1					
ANR	3296537	PrimaryExpression	0		3296479	1					
ANR	3296538	CompoundStatement		12:4:403:436	3296479	1					
ANR	3296539	IdentifierDeclStatement	unsigned long top = operand -> bitm ;	194:4:6983:7016	3296479	0	True				
ANR	3296540	IdentifierDecl	top = operand -> bitm		3296479	0					
ANR	3296541	IdentifierDeclType	unsigned long		3296479	0					
ANR	3296542	Identifier	top		3296479	1					
ANR	3296543	AssignmentExpression	top = operand -> bitm		3296479	2		=			
ANR	3296544	Identifier	top		3296479	0					
ANR	3296545	PtrMemberAccess	operand -> bitm		3296479	1					
ANR	3296546	Identifier	operand		3296479	0					
ANR	3296547	Identifier	bitm		3296479	1					
ANR	3296548	ExpressionStatement	top |= ( top & - top ) - 1	197:4:7114:7137	3296479	1	True				
ANR	3296549	AssignmentExpression	top |= ( top & - top ) - 1		3296479	0		|=			
ANR	3296550	Identifier	top		3296479	0					
ANR	3296551	AdditiveExpression	( top & - top ) - 1		3296479	1		-			
ANR	3296552	BitAndExpression	top & - top		3296479	0		&			
ANR	3296553	Identifier	top		3296479	0					
ANR	3296554	UnaryOperationExpression	- top		3296479	1					
ANR	3296555	UnaryOperator	-		3296479	0					
ANR	3296556	Identifier	top		3296479	1					
ANR	3296557	PrimaryExpression	1		3296479	1					
ANR	3296558	ExpressionStatement	top &= ~ ( top >> 1 )	198:4:7143:7161	3296479	2	True				
ANR	3296559	AssignmentExpression	top &= ~ ( top >> 1 )		3296479	0		&=			
ANR	3296560	Identifier	top		3296479	0					
ANR	3296561	UnaryOperationExpression	~ ( top >> 1 )		3296479	1					
ANR	3296562	UnaryOperator	~		3296479	0					
ANR	3296563	ShiftExpression	top >> 1		3296479	1		>>			
ANR	3296564	Identifier	top		3296479	0					
ANR	3296565	PrimaryExpression	1		3296479	1					
ANR	3296566	ExpressionStatement	value = ( value ^ top ) - top	199:4:7167:7194	3296479	3	True				
ANR	3296567	AssignmentExpression	value = ( value ^ top ) - top		3296479	0		=			
ANR	3296568	Identifier	value		3296479	0					
ANR	3296569	AdditiveExpression	( value ^ top ) - top		3296479	1		-			
ANR	3296570	ExclusiveOrExpression	value ^ top		3296479	0		^			
ANR	3296571	Identifier	value		3296479	0					
ANR	3296572	Identifier	top		3296479	1					
ANR	3296573	Identifier	top		3296479	1					
ANR	3296574	ReturnStatement	return value ;	203:2:7210:7222	3296479	3	True				
ANR	3296575	Identifier	value		3296479	0					
ANR	3296576	ReturnType	static long		3296479	1					
ANR	3296577	Identifier	operand_value_powerpc		3296479	2					
ANR	3296578	ParameterList	"const struct powerpc_operand * operand , unsigned long insn , ppc_cpu_t dialect"		3296479	3					
ANR	3296579	Parameter	const struct powerpc_operand * operand	181:23:6492:6528	3296479	0	True				
ANR	3296580	ParameterType	const struct powerpc_operand *		3296479	0					
ANR	3296581	Identifier	operand		3296479	1					
ANR	3296582	Parameter	unsigned long insn	182:9:6540:6557	3296479	1	True				
ANR	3296583	ParameterType	unsigned long		3296479	0					
ANR	3296584	Identifier	insn		3296479	1					
ANR	3296585	Parameter	ppc_cpu_t dialect	182:29:6560:6576	3296479	2	True				
ANR	3296586	ParameterType	ppc_cpu_t		3296479	0					
ANR	3296587	Identifier	dialect		3296479	1					
ANR	3296588	CFGEntryNode	ENTRY		3296479		True				
ANR	3296589	CFGExitNode	EXIT		3296479		True				
ANR	3296590	Symbol	dialect		3296479						
ANR	3296591	Symbol	& invalid		3296479						
ANR	3296592	Symbol	operand -> flags		3296479						
ANR	3296593	Symbol	* operand		3296479						
ANR	3296594	Symbol	operand -> shift		3296479						
ANR	3296595	Symbol	* operand -> extract		3296479						
ANR	3296596	Symbol	operand -> extract		3296479						
ANR	3296597	Symbol	insn		3296479						
ANR	3296598	Symbol	top		3296479						
ANR	3296599	Symbol	* * operand		3296479						
ANR	3296600	Symbol	invalid		3296479						
ANR	3296601	Symbol	value		3296479						
ANR	3296602	Symbol	operand -> bitm		3296479						
ANR	3296603	Symbol	PPC_OPERAND_SIGNED		3296479						
ANR	3296604	Symbol	operand		3296479						
ANR	3296605	Function	skip_optional_operands	208:0:7296:7736							
ANR	3296606	FunctionDef	"skip_optional_operands (const unsigned char * opindex , unsigned long insn , ppc_cpu_t dialect)"		3296605	0					
ANR	3296607	CompoundStatement		211:0:7403:7736	3296605	0					
ANR	3296608	IdentifierDeclStatement	const struct powerpc_operand * operand ;	212:2:7407:7444	3296605	0	True				
ANR	3296609	IdentifierDecl	* operand		3296605	0					
ANR	3296610	IdentifierDeclType	const struct powerpc_operand *		3296605	0					
ANR	3296611	Identifier	operand		3296605	1					
ANR	3296612	ForStatement	for ( ; * opindex != 0 ; opindex ++ )		3296605	1					
ANR	3296613	Condition	* opindex != 0	214:9:7456:7468	3296605	0	True				
ANR	3296614	EqualityExpression	* opindex != 0		3296605	0		!=			
ANR	3296615	UnaryOperationExpression	* opindex		3296605	0					
ANR	3296616	UnaryOperator	*		3296605	0					
ANR	3296617	Identifier	opindex		3296605	1					
ANR	3296618	PrimaryExpression	0		3296605	1					
ANR	3296619	PostIncDecOperationExpression	opindex ++	214:24:7471:7479	3296605	1	True				
ANR	3296620	Identifier	opindex		3296605	0					
ANR	3296621	IncDec	++		3296605	1					
ANR	3296622	CompoundStatement		5:4:82:82	3296605	2					
ANR	3296623	ExpressionStatement	operand = & powerpc_operands [ * opindex ]	216:6:7494:7531	3296605	0	True				
ANR	3296624	AssignmentExpression	operand = & powerpc_operands [ * opindex ]		3296605	0		=			
ANR	3296625	Identifier	operand		3296605	0					
ANR	3296626	UnaryOperationExpression	& powerpc_operands [ * opindex ]		3296605	1					
ANR	3296627	UnaryOperator	&		3296605	0					
ANR	3296628	ArrayIndexing	powerpc_operands [ * opindex ]		3296605	1					
ANR	3296629	Identifier	powerpc_operands		3296605	0					
ANR	3296630	UnaryOperationExpression	* opindex		3296605	1					
ANR	3296631	UnaryOperator	*		3296605	0					
ANR	3296632	Identifier	opindex		3296605	1					
ANR	3296633	IfStatement	"if ( ( operand -> flags & PPC_OPERAND_NEXT ) != 0 || ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0 ) )"		3296605	1					
ANR	3296634	Condition	"( operand -> flags & PPC_OPERAND_NEXT ) != 0 || ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0 )"	217:10:7543:7687	3296605	0	True				
ANR	3296635	OrExpression	"( operand -> flags & PPC_OPERAND_NEXT ) != 0 || ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0 )"		3296605	0		||			
ANR	3296636	EqualityExpression	( operand -> flags & PPC_OPERAND_NEXT ) != 0		3296605	0		!=			
ANR	3296637	BitAndExpression	operand -> flags & PPC_OPERAND_NEXT		3296605	0		&			
ANR	3296638	PtrMemberAccess	operand -> flags		3296605	0					
ANR	3296639	Identifier	operand		3296605	0					
ANR	3296640	Identifier	flags		3296605	1					
ANR	3296641	Identifier	PPC_OPERAND_NEXT		3296605	1					
ANR	3296642	PrimaryExpression	0		3296605	1					
ANR	3296643	AndExpression	"( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0"		3296605	1		&&			
ANR	3296644	EqualityExpression	( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0		3296605	0		!=			
ANR	3296645	BitAndExpression	operand -> flags & PPC_OPERAND_OPTIONAL		3296605	0		&			
ANR	3296646	PtrMemberAccess	operand -> flags		3296605	0					
ANR	3296647	Identifier	operand		3296605	0					
ANR	3296648	Identifier	flags		3296605	1					
ANR	3296649	Identifier	PPC_OPERAND_OPTIONAL		3296605	1					
ANR	3296650	PrimaryExpression	0		3296605	1					
ANR	3296651	EqualityExpression	"operand_value_powerpc ( operand , insn , dialect ) != 0"		3296605	1		!=			
ANR	3296652	CallExpression	"operand_value_powerpc ( operand , insn , dialect )"		3296605	0					
ANR	3296653	Callee	operand_value_powerpc		3296605	0					
ANR	3296654	Identifier	operand_value_powerpc		3296605	0					
ANR	3296655	ArgumentList	operand		3296605	1					
ANR	3296656	Argument	operand		3296605	0					
ANR	3296657	Identifier	operand		3296605	0					
ANR	3296658	Argument	insn		3296605	1					
ANR	3296659	Identifier	insn		3296605	0					
ANR	3296660	Argument	dialect		3296605	2					
ANR	3296661	Identifier	dialect		3296605	0					
ANR	3296662	PrimaryExpression	0		3296605	1					
ANR	3296663	CompoundStatement		7:157:286:286	3296605	1					
ANR	3296664	ReturnStatement	return 0 ;	218:7:7699:7707	3296605	0	True				
ANR	3296665	PrimaryExpression	0		3296605	0					
ANR	3296666	ReturnStatement	return 1 ;	222:2:7726:7734	3296605	2	True				
ANR	3296667	PrimaryExpression	1		3296605	0					
ANR	3296668	ReturnType	static int		3296605	1					
ANR	3296669	Identifier	skip_optional_operands		3296605	2					
ANR	3296670	ParameterList	"const unsigned char * opindex , unsigned long insn , ppc_cpu_t dialect"		3296605	3					
ANR	3296671	Parameter	const unsigned char * opindex	209:24:7331:7358	3296605	0	True				
ANR	3296672	ParameterType	const unsigned char *		3296605	0					
ANR	3296673	Identifier	opindex		3296605	1					
ANR	3296674	Parameter	unsigned long insn	210:3:7364:7381	3296605	1	True				
ANR	3296675	ParameterType	unsigned long		3296605	0					
ANR	3296676	Identifier	insn		3296605	1					
ANR	3296677	Parameter	ppc_cpu_t dialect	210:23:7384:7400	3296605	2	True				
ANR	3296678	ParameterType	ppc_cpu_t		3296605	0					
ANR	3296679	Identifier	dialect		3296605	1					
ANR	3296680	CFGEntryNode	ENTRY		3296605		True				
ANR	3296681	CFGExitNode	EXIT		3296605		True				
ANR	3296682	Symbol	insn		3296605						
ANR	3296683	Symbol	dialect		3296605						
ANR	3296684	Symbol	operand -> flags		3296605						
ANR	3296685	Symbol	* operand		3296605						
ANR	3296686	Symbol	* opindex		3296605						
ANR	3296687	Symbol	PPC_OPERAND_NEXT		3296605						
ANR	3296688	Symbol	operand_value_powerpc		3296605						
ANR	3296689	Symbol	opindex		3296605						
ANR	3296690	Symbol	PPC_OPERAND_OPTIONAL		3296605						
ANR	3296691	Symbol	operand		3296605						
ANR	3296692	Symbol	powerpc_operands		3296605						
ANR	3296693	Function	print_insn_powerpc	227:0:7785:12896							
ANR	3296694	FunctionDef	"print_insn_powerpc (bfd_vma memaddr , struct disassemble_info * info , int bigendian , ppc_cpu_t dialect)"		3296693	0					
ANR	3296695	CompoundStatement		232:0:7916:12896	3296693	0					
ANR	3296696	IdentifierDeclStatement	bfd_byte buffer [ 4 ] ;	233:2:7920:7938	3296693	0	True				
ANR	3296697	IdentifierDecl	buffer [ 4 ]		3296693	0					
ANR	3296698	IdentifierDeclType	bfd_byte [ 4 ]		3296693	0					
ANR	3296699	Identifier	buffer		3296693	1					
ANR	3296700	PrimaryExpression	4		3296693	2					
ANR	3296701	IdentifierDeclStatement	int status ;	234:2:7942:7952	3296693	1	True				
ANR	3296702	IdentifierDecl	status		3296693	0					
ANR	3296703	IdentifierDeclType	int		3296693	0					
ANR	3296704	Identifier	status		3296693	1					
ANR	3296705	IdentifierDeclStatement	unsigned long insn ;	235:2:7956:7974	3296693	2	True				
ANR	3296706	IdentifierDecl	insn		3296693	0					
ANR	3296707	IdentifierDeclType	unsigned long		3296693	0					
ANR	3296708	Identifier	insn		3296693	1					
ANR	3296709	IdentifierDeclStatement	const struct powerpc_opcode * opcode ;	236:2:7978:8013	3296693	3	True				
ANR	3296710	IdentifierDecl	* opcode		3296693	0					
ANR	3296711	IdentifierDeclType	const struct powerpc_opcode *		3296693	0					
ANR	3296712	Identifier	opcode		3296693	1					
ANR	3296713	IdentifierDeclStatement	const struct powerpc_opcode * opcode_end ;	237:2:8017:8056	3296693	4	True				
ANR	3296714	IdentifierDecl	* opcode_end		3296693	0					
ANR	3296715	IdentifierDeclType	const struct powerpc_opcode *		3296693	0					
ANR	3296716	Identifier	opcode_end		3296693	1					
ANR	3296717	IdentifierDeclStatement	unsigned long op ;	238:2:8060:8076	3296693	5	True				
ANR	3296718	IdentifierDecl	op		3296693	0					
ANR	3296719	IdentifierDeclType	unsigned long		3296693	0					
ANR	3296720	Identifier	op		3296693	1					
ANR	3296721	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 4 , info )"	240:2:8081:8142	3296693	6	True				
ANR	3296722	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 4 , info )"		3296693	0		=			
ANR	3296723	Identifier	status		3296693	0					
ANR	3296724	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , 4 , info )"		3296693	1					
ANR	3296725	Callee	* info -> read_memory_func		3296693	0					
ANR	3296726	UnaryOperationExpression	* info -> read_memory_func		3296693	0					
ANR	3296727	UnaryOperator	*		3296693	0					
ANR	3296728	PtrMemberAccess	info -> read_memory_func		3296693	1					
ANR	3296729	Identifier	info		3296693	0					
ANR	3296730	Identifier	read_memory_func		3296693	1					
ANR	3296731	ArgumentList	memaddr		3296693	1					
ANR	3296732	Argument	memaddr		3296693	0					
ANR	3296733	Identifier	memaddr		3296693	0					
ANR	3296734	Argument	buffer		3296693	1					
ANR	3296735	Identifier	buffer		3296693	0					
ANR	3296736	Argument	4		3296693	2					
ANR	3296737	PrimaryExpression	4		3296693	0					
ANR	3296738	Argument	info		3296693	3					
ANR	3296739	Identifier	info		3296693	0					
ANR	3296740	IfStatement	if ( status != 0 )		3296693	7					
ANR	3296741	Condition	status != 0	241:6:8150:8160	3296693	0	True				
ANR	3296742	EqualityExpression	status != 0		3296693	0		!=			
ANR	3296743	Identifier	status		3296693	0					
ANR	3296744	PrimaryExpression	0		3296693	1					
ANR	3296745	CompoundStatement		11:4:250:250	3296693	1					
ANR	3296746	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	243:6:8175:8225	3296693	0	True				
ANR	3296747	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		3296693	0					
ANR	3296748	Callee	* info -> memory_error_func		3296693	0					
ANR	3296749	UnaryOperationExpression	* info -> memory_error_func		3296693	0					
ANR	3296750	UnaryOperator	*		3296693	0					
ANR	3296751	PtrMemberAccess	info -> memory_error_func		3296693	1					
ANR	3296752	Identifier	info		3296693	0					
ANR	3296753	Identifier	memory_error_func		3296693	1					
ANR	3296754	ArgumentList	status		3296693	1					
ANR	3296755	Argument	status		3296693	0					
ANR	3296756	Identifier	status		3296693	0					
ANR	3296757	Argument	memaddr		3296693	1					
ANR	3296758	Identifier	memaddr		3296693	0					
ANR	3296759	Argument	info		3296693	2					
ANR	3296760	Identifier	info		3296693	0					
ANR	3296761	ReturnStatement	return - 1 ;	244:6:8233:8242	3296693	1	True				
ANR	3296762	UnaryOperationExpression	- 1		3296693	0					
ANR	3296763	UnaryOperator	-		3296693	0					
ANR	3296764	PrimaryExpression	1		3296693	1					
ANR	3296765	IfStatement	if ( bigendian )		3296693	8					
ANR	3296766	Condition	bigendian	247:8:8259:8267	3296693	0	True				
ANR	3296767	Identifier	bigendian		3296693	0					
ANR	3296768	CompoundStatement		16:19:353:353	3296693	1					
ANR	3296769	ExpressionStatement	insn = __bfd_getb32 ( buffer )	248:5:8277:8305	3296693	0	True				
ANR	3296770	AssignmentExpression	insn = __bfd_getb32 ( buffer )		3296693	0		=			
ANR	3296771	Identifier	insn		3296693	0					
ANR	3296772	CallExpression	__bfd_getb32 ( buffer )		3296693	1					
ANR	3296773	Callee	__bfd_getb32		3296693	0					
ANR	3296774	Identifier	__bfd_getb32		3296693	0					
ANR	3296775	ArgumentList	buffer		3296693	1					
ANR	3296776	Argument	buffer		3296693	0					
ANR	3296777	Identifier	buffer		3296693	0					
ANR	3296778	ElseStatement	else		3296693	0					
ANR	3296779	CompoundStatement		18:11:401:401	3296693	0					
ANR	3296780	ExpressionStatement	insn = __bfd_getl32 ( buffer )	250:5:8325:8353	3296693	0	True				
ANR	3296781	AssignmentExpression	insn = __bfd_getl32 ( buffer )		3296693	0		=			
ANR	3296782	Identifier	insn		3296693	0					
ANR	3296783	CallExpression	__bfd_getl32 ( buffer )		3296693	1					
ANR	3296784	Callee	__bfd_getl32		3296693	0					
ANR	3296785	Identifier	__bfd_getl32		3296693	0					
ANR	3296786	ArgumentList	buffer		3296693	1					
ANR	3296787	Argument	buffer		3296693	0					
ANR	3296788	Identifier	buffer		3296693	0					
ANR	3296789	ExpressionStatement	op = PPC_OP ( insn )	254:4:8418:8436	3296693	9	True				
ANR	3296790	AssignmentExpression	op = PPC_OP ( insn )		3296693	0		=			
ANR	3296791	Identifier	op		3296693	0					
ANR	3296792	CallExpression	PPC_OP ( insn )		3296693	1					
ANR	3296793	Callee	PPC_OP		3296693	0					
ANR	3296794	Identifier	PPC_OP		3296693	0					
ANR	3296795	ArgumentList	insn		3296693	1					
ANR	3296796	Argument	insn		3296693	0					
ANR	3296797	Identifier	insn		3296693	0					
ANR	3296798	ExpressionStatement	opcode_end = powerpc_opcodes + powerpc_num_opcodes	258:4:8577:8627	3296693	10	True				
ANR	3296799	AssignmentExpression	opcode_end = powerpc_opcodes + powerpc_num_opcodes		3296693	0		=			
ANR	3296800	Identifier	opcode_end		3296693	0					
ANR	3296801	AdditiveExpression	powerpc_opcodes + powerpc_num_opcodes		3296693	1		+			
ANR	3296802	Identifier	powerpc_opcodes		3296693	0					
ANR	3296803	Identifier	powerpc_num_opcodes		3296693	1					
ANR	3296804	Label	again :	259:1:8630:8635	3296693	11	True				
ANR	3296805	Identifier	again		3296693	0					
ANR	3296806	ForStatement	for ( opcode = powerpc_opcodes ; opcode < opcode_end ; opcode ++ )		3296693	12					
ANR	3296807	ForInit	opcode = powerpc_opcodes ;	260:7:8644:8668	3296693	0	True				
ANR	3296808	AssignmentExpression	opcode = powerpc_opcodes		3296693	0		=			
ANR	3296809	Identifier	opcode		3296693	0					
ANR	3296810	Identifier	powerpc_opcodes		3296693	1					
ANR	3296811	Condition	opcode < opcode_end	260:33:8670:8688	3296693	1	True				
ANR	3296812	RelationalExpression	opcode < opcode_end		3296693	0		<			
ANR	3296813	Identifier	opcode		3296693	0					
ANR	3296814	Identifier	opcode_end		3296693	1					
ANR	3296815	PostIncDecOperationExpression	opcode ++	260:54:8691:8698	3296693	2	True				
ANR	3296816	Identifier	opcode		3296693	0					
ANR	3296817	IncDec	++		3296693	1					
ANR	3296818	CompoundStatement		37:6:970:987	3296693	3					
ANR	3296819	IdentifierDeclStatement	unsigned long table_op ;	262:6:8713:8735	3296693	0	True				
ANR	3296820	IdentifierDecl	table_op		3296693	0					
ANR	3296821	IdentifierDeclType	unsigned long		3296693	0					
ANR	3296822	Identifier	table_op		3296693	1					
ANR	3296823	IdentifierDeclStatement	const unsigned char * opindex ;	263:6:8743:8771	3296693	1	True				
ANR	3296824	IdentifierDecl	* opindex		3296693	0					
ANR	3296825	IdentifierDeclType	const unsigned char *		3296693	0					
ANR	3296826	Identifier	opindex		3296693	1					
ANR	3296827	IdentifierDeclStatement	const struct powerpc_operand * operand ;	264:6:8779:8816	3296693	2	True				
ANR	3296828	IdentifierDecl	* operand		3296693	0					
ANR	3296829	IdentifierDeclType	const struct powerpc_operand *		3296693	0					
ANR	3296830	Identifier	operand		3296693	1					
ANR	3296831	IdentifierDeclStatement	int invalid ;	265:6:8824:8835	3296693	3	True				
ANR	3296832	IdentifierDecl	invalid		3296693	0					
ANR	3296833	IdentifierDeclType	int		3296693	0					
ANR	3296834	Identifier	invalid		3296693	1					
ANR	3296835	IdentifierDeclStatement	int need_comma ;	266:6:8843:8857	3296693	4	True				
ANR	3296836	IdentifierDecl	need_comma		3296693	0					
ANR	3296837	IdentifierDeclType	int		3296693	0					
ANR	3296838	Identifier	need_comma		3296693	1					
ANR	3296839	IdentifierDeclStatement	int need_paren ;	267:6:8865:8879	3296693	5	True				
ANR	3296840	IdentifierDecl	need_paren		3296693	0					
ANR	3296841	IdentifierDeclType	int		3296693	0					
ANR	3296842	Identifier	need_paren		3296693	1					
ANR	3296843	IdentifierDeclStatement	int skip_optional ;	268:6:8887:8904	3296693	6	True				
ANR	3296844	IdentifierDecl	skip_optional		3296693	0					
ANR	3296845	IdentifierDeclType	int		3296693	0					
ANR	3296846	Identifier	skip_optional		3296693	1					
ANR	3296847	ExpressionStatement	table_op = PPC_OP ( opcode -> opcode )	270:6:8913:8947	3296693	7	True				
ANR	3296848	AssignmentExpression	table_op = PPC_OP ( opcode -> opcode )		3296693	0		=			
ANR	3296849	Identifier	table_op		3296693	0					
ANR	3296850	CallExpression	PPC_OP ( opcode -> opcode )		3296693	1					
ANR	3296851	Callee	PPC_OP		3296693	0					
ANR	3296852	Identifier	PPC_OP		3296693	0					
ANR	3296853	ArgumentList	opcode -> opcode		3296693	1					
ANR	3296854	Argument	opcode -> opcode		3296693	0					
ANR	3296855	PtrMemberAccess	opcode -> opcode		3296693	0					
ANR	3296856	Identifier	opcode		3296693	0					
ANR	3296857	Identifier	opcode		3296693	1					
ANR	3296858	IfStatement	if ( op < table_op )		3296693	8					
ANR	3296859	Condition	op < table_op	271:10:8959:8971	3296693	0	True				
ANR	3296860	RelationalExpression	op < table_op		3296693	0		<			
ANR	3296861	Identifier	op		3296693	0					
ANR	3296862	Identifier	table_op		3296693	1					
ANR	3296863	CompoundStatement		40:25:1057:1057	3296693	1					
ANR	3296864	BreakStatement	break ;	272:7:8983:8988	3296693	0	True				
ANR	3296865	IfStatement	if ( op > table_op )		3296693	9					
ANR	3296866	Condition	op > table_op	274:10:9008:9020	3296693	0	True				
ANR	3296867	RelationalExpression	op > table_op		3296693	0		>			
ANR	3296868	Identifier	op		3296693	0					
ANR	3296869	Identifier	table_op		3296693	1					
ANR	3296870	CompoundStatement		43:25:1106:1106	3296693	1					
ANR	3296871	ContinueStatement	continue ;	275:7:9032:9040	3296693	0	True				
ANR	3296872	IfStatement	if ( ( insn & opcode -> mask ) != opcode -> opcode || ( opcode -> flags & dialect ) == 0 )		3296693	10					
ANR	3296873	Condition	( insn & opcode -> mask ) != opcode -> opcode || ( opcode -> flags & dialect ) == 0	278:10:9061:9133	3296693	0	True				
ANR	3296874	OrExpression	( insn & opcode -> mask ) != opcode -> opcode || ( opcode -> flags & dialect ) == 0		3296693	0		||			
ANR	3296875	EqualityExpression	( insn & opcode -> mask ) != opcode -> opcode		3296693	0		!=			
ANR	3296876	BitAndExpression	insn & opcode -> mask		3296693	0		&			
ANR	3296877	Identifier	insn		3296693	0					
ANR	3296878	PtrMemberAccess	opcode -> mask		3296693	1					
ANR	3296879	Identifier	opcode		3296693	0					
ANR	3296880	Identifier	mask		3296693	1					
ANR	3296881	PtrMemberAccess	opcode -> opcode		3296693	1					
ANR	3296882	Identifier	opcode		3296693	0					
ANR	3296883	Identifier	opcode		3296693	1					
ANR	3296884	EqualityExpression	( opcode -> flags & dialect ) == 0		3296693	1		==			
ANR	3296885	BitAndExpression	opcode -> flags & dialect		3296693	0		&			
ANR	3296886	PtrMemberAccess	opcode -> flags		3296693	0					
ANR	3296887	Identifier	opcode		3296693	0					
ANR	3296888	Identifier	flags		3296693	1					
ANR	3296889	Identifier	dialect		3296693	1					
ANR	3296890	PrimaryExpression	0		3296693	1					
ANR	3296891	CompoundStatement		47:85:1219:1219	3296693	1					
ANR	3296892	ContinueStatement	continue ;	279:7:9145:9153	3296693	0	True				
ANR	3296893	ExpressionStatement	invalid = 0	285:6:9328:9339	3296693	11	True				
ANR	3296894	AssignmentExpression	invalid = 0		3296693	0		=			
ANR	3296895	Identifier	invalid		3296693	0					
ANR	3296896	PrimaryExpression	0		3296693	1					
ANR	3296897	ForStatement	for ( opindex = opcode -> operands ; * opindex != 0 ; opindex ++ )		3296693	12					
ANR	3296898	ForInit	opindex = opcode -> operands ;	286:11:9352:9378	3296693	0	True				
ANR	3296899	AssignmentExpression	opindex = opcode -> operands		3296693	0		=			
ANR	3296900	Identifier	opindex		3296693	0					
ANR	3296901	PtrMemberAccess	opcode -> operands		3296693	1					
ANR	3296902	Identifier	opcode		3296693	0					
ANR	3296903	Identifier	operands		3296693	1					
ANR	3296904	Condition	* opindex != 0	286:39:9380:9392	3296693	1	True				
ANR	3296905	EqualityExpression	* opindex != 0		3296693	0		!=			
ANR	3296906	UnaryOperationExpression	* opindex		3296693	0					
ANR	3296907	UnaryOperator	*		3296693	0					
ANR	3296908	Identifier	opindex		3296693	1					
ANR	3296909	PrimaryExpression	0		3296693	1					
ANR	3296910	PostIncDecOperationExpression	opindex ++	286:54:9395:9403	3296693	2	True				
ANR	3296911	Identifier	opindex		3296693	0					
ANR	3296912	IncDec	++		3296693	1					
ANR	3296913	CompoundStatement		56:1:1490:1490	3296693	3					
ANR	3296914	ExpressionStatement	operand = powerpc_operands + * opindex	288:3:9412:9449	3296693	0	True				
ANR	3296915	AssignmentExpression	operand = powerpc_operands + * opindex		3296693	0		=			
ANR	3296916	Identifier	operand		3296693	0					
ANR	3296917	AdditiveExpression	powerpc_operands + * opindex		3296693	1		+			
ANR	3296918	Identifier	powerpc_operands		3296693	0					
ANR	3296919	UnaryOperationExpression	* opindex		3296693	1					
ANR	3296920	UnaryOperator	*		3296693	0					
ANR	3296921	Identifier	opindex		3296693	1					
ANR	3296922	IfStatement	if ( operand -> extract )		3296693	1					
ANR	3296923	Condition	operand -> extract	289:7:9458:9473	3296693	0	True				
ANR	3296924	PtrMemberAccess	operand -> extract		3296693	0					
ANR	3296925	Identifier	operand		3296693	0					
ANR	3296926	Identifier	extract		3296693	1					
ANR	3296927	CompoundStatement		58:25:1559:1559	3296693	1					
ANR	3296928	ExpressionStatement	"( * operand -> extract ) ( insn , dialect , & invalid )"	290:4:9482:9527	3296693	0	True				
ANR	3296929	CallExpression	"( * operand -> extract ) ( insn , dialect , & invalid )"		3296693	0					
ANR	3296930	Callee	* operand -> extract		3296693	0					
ANR	3296931	UnaryOperationExpression	* operand -> extract		3296693	0					
ANR	3296932	UnaryOperator	*		3296693	0					
ANR	3296933	PtrMemberAccess	operand -> extract		3296693	1					
ANR	3296934	Identifier	operand		3296693	0					
ANR	3296935	Identifier	extract		3296693	1					
ANR	3296936	ArgumentList	insn		3296693	1					
ANR	3296937	Argument	insn		3296693	0					
ANR	3296938	Identifier	insn		3296693	0					
ANR	3296939	Argument	dialect		3296693	1					
ANR	3296940	Identifier	dialect		3296693	0					
ANR	3296941	Argument	& invalid		3296693	2					
ANR	3296942	UnaryOperationExpression	& invalid		3296693	0					
ANR	3296943	UnaryOperator	&		3296693	0					
ANR	3296944	Identifier	invalid		3296693	1					
ANR	3296945	IfStatement	if ( invalid )		3296693	13					
ANR	3296946	Condition	invalid	293:5:9542:9548	3296693	0	True				
ANR	3296947	Identifier	invalid		3296693	0					
ANR	3296948	CompoundStatement		62:14:1634:1634	3296693	1					
ANR	3296949	ContinueStatement	continue ;	294:2:9555:9563	3296693	0	True				
ANR	3296950	IfStatement	if ( opcode -> operands [ 0 ] != 0 )		3296693	14					
ANR	3296951	Condition	opcode -> operands [ 0 ] != 0	298:5:9608:9631	3296693	0	True				
ANR	3296952	EqualityExpression	opcode -> operands [ 0 ] != 0		3296693	0		!=			
ANR	3296953	ArrayIndexing	opcode -> operands [ 0 ]		3296693	0					
ANR	3296954	PtrMemberAccess	opcode -> operands		3296693	0					
ANR	3296955	Identifier	opcode		3296693	0					
ANR	3296956	Identifier	operands		3296693	1					
ANR	3296957	PrimaryExpression	0		3296693	1					
ANR	3296958	PrimaryExpression	0		3296693	1					
ANR	3296959	CompoundStatement		67:31:1717:1717	3296693	1					
ANR	3296960	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s "" , opcode -> name )"	299:2:9638:9695	3296693	0	True				
ANR	3296961	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s "" , opcode -> name )"		3296693	0					
ANR	3296962	Callee	* info -> fprintf_func		3296693	0					
ANR	3296963	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3296964	UnaryOperator	*		3296693	0					
ANR	3296965	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3296966	Identifier	info		3296693	0					
ANR	3296967	Identifier	fprintf_func		3296693	1					
ANR	3296968	ArgumentList	info -> stream		3296693	1					
ANR	3296969	Argument	info -> stream		3296693	0					
ANR	3296970	PtrMemberAccess	info -> stream		3296693	0					
ANR	3296971	Identifier	info		3296693	0					
ANR	3296972	Identifier	stream		3296693	1					
ANR	3296973	Argument	"""%s """		3296693	1					
ANR	3296974	PrimaryExpression	"""%s """		3296693	0					
ANR	3296975	Argument	opcode -> name		3296693	2					
ANR	3296976	PtrMemberAccess	opcode -> name		3296693	0					
ANR	3296977	Identifier	opcode		3296693	0					
ANR	3296978	Identifier	name		3296693	1					
ANR	3296979	ElseStatement	else		3296693	0					
ANR	3296980	CompoundStatement		69:8:1788:1788	3296693	0					
ANR	3296981	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcode -> name )"	301:2:9709:9765	3296693	0	True				
ANR	3296982	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcode -> name )"		3296693	0					
ANR	3296983	Callee	* info -> fprintf_func		3296693	0					
ANR	3296984	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3296985	UnaryOperator	*		3296693	0					
ANR	3296986	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3296987	Identifier	info		3296693	0					
ANR	3296988	Identifier	fprintf_func		3296693	1					
ANR	3296989	ArgumentList	info -> stream		3296693	1					
ANR	3296990	Argument	info -> stream		3296693	0					
ANR	3296991	PtrMemberAccess	info -> stream		3296693	0					
ANR	3296992	Identifier	info		3296693	0					
ANR	3296993	Identifier	stream		3296693	1					
ANR	3296994	Argument	"""%s"""		3296693	1					
ANR	3296995	PrimaryExpression	"""%s"""		3296693	0					
ANR	3296996	Argument	opcode -> name		3296693	2					
ANR	3296997	PtrMemberAccess	opcode -> name		3296693	0					
ANR	3296998	Identifier	opcode		3296693	0					
ANR	3296999	Identifier	name		3296693	1					
ANR	3297000	ExpressionStatement	need_comma = 0	305:1:9816:9830	3296693	15	True				
ANR	3297001	AssignmentExpression	need_comma = 0		3296693	0		=			
ANR	3297002	Identifier	need_comma		3296693	0					
ANR	3297003	PrimaryExpression	0		3296693	1					
ANR	3297004	ExpressionStatement	need_paren = 0	306:1:9833:9847	3296693	16	True				
ANR	3297005	AssignmentExpression	need_paren = 0		3296693	0		=			
ANR	3297006	Identifier	need_paren		3296693	0					
ANR	3297007	PrimaryExpression	0		3296693	1					
ANR	3297008	ExpressionStatement	skip_optional = - 1	307:1:9850:9868	3296693	17	True				
ANR	3297009	AssignmentExpression	skip_optional = - 1		3296693	0		=			
ANR	3297010	Identifier	skip_optional		3296693	0					
ANR	3297011	UnaryOperationExpression	- 1		3296693	1					
ANR	3297012	UnaryOperator	-		3296693	0					
ANR	3297013	PrimaryExpression	1		3296693	1					
ANR	3297014	ForStatement	for ( opindex = opcode -> operands ; * opindex != 0 ; opindex ++ )		3296693	18					
ANR	3297015	ForInit	opindex = opcode -> operands ;	308:6:9876:9902	3296693	0	True				
ANR	3297016	AssignmentExpression	opindex = opcode -> operands		3296693	0		=			
ANR	3297017	Identifier	opindex		3296693	0					
ANR	3297018	PtrMemberAccess	opcode -> operands		3296693	1					
ANR	3297019	Identifier	opcode		3296693	0					
ANR	3297020	Identifier	operands		3296693	1					
ANR	3297021	Condition	* opindex != 0	308:34:9904:9916	3296693	1	True				
ANR	3297022	EqualityExpression	* opindex != 0		3296693	0		!=			
ANR	3297023	UnaryOperationExpression	* opindex		3296693	0					
ANR	3297024	UnaryOperator	*		3296693	0					
ANR	3297025	Identifier	opindex		3296693	1					
ANR	3297026	PrimaryExpression	0		3296693	1					
ANR	3297027	PostIncDecOperationExpression	opindex ++	308:49:9919:9927	3296693	2	True				
ANR	3297028	Identifier	opindex		3296693	0					
ANR	3297029	IncDec	++		3296693	1					
ANR	3297030	CompoundStatement		78:2:2017:2027	3296693	3					
ANR	3297031	IdentifierDeclStatement	long value ;	309:2:9934:9944	3296693	0	True				
ANR	3297032	IdentifierDecl	value		3296693	0					
ANR	3297033	IdentifierDeclType	long		3296693	0					
ANR	3297034	Identifier	value		3296693	1					
ANR	3297035	ExpressionStatement	operand = powerpc_operands + * opindex	311:2:9949:9986	3296693	1	True				
ANR	3297036	AssignmentExpression	operand = powerpc_operands + * opindex		3296693	0		=			
ANR	3297037	Identifier	operand		3296693	0					
ANR	3297038	AdditiveExpression	powerpc_operands + * opindex		3296693	1		+			
ANR	3297039	Identifier	powerpc_operands		3296693	0					
ANR	3297040	UnaryOperationExpression	* opindex		3296693	1					
ANR	3297041	UnaryOperator	*		3296693	0					
ANR	3297042	Identifier	opindex		3296693	1					
ANR	3297043	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FAKE ) != 0 )		3296693	2					
ANR	3297044	Condition	( operand -> flags & PPC_OPERAND_FAKE ) != 0	316:6:10154:10193	3296693	0	True				
ANR	3297045	EqualityExpression	( operand -> flags & PPC_OPERAND_FAKE ) != 0		3296693	0		!=			
ANR	3297046	BitAndExpression	operand -> flags & PPC_OPERAND_FAKE		3296693	0		&			
ANR	3297047	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297048	Identifier	operand		3296693	0					
ANR	3297049	Identifier	flags		3296693	1					
ANR	3297050	Identifier	PPC_OPERAND_FAKE		3296693	1					
ANR	3297051	PrimaryExpression	0		3296693	1					
ANR	3297052	CompoundStatement		85:48:2279:2279	3296693	1					
ANR	3297053	ContinueStatement	continue ;	317:3:10201:10209	3296693	0	True				
ANR	3297054	IfStatement	if ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 )		3296693	3					
ANR	3297055	Condition	( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0	322:6:10320:10363	3296693	0	True				
ANR	3297056	EqualityExpression	( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0		3296693	0		!=			
ANR	3297057	BitAndExpression	operand -> flags & PPC_OPERAND_OPTIONAL		3296693	0		&			
ANR	3297058	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297059	Identifier	operand		3296693	0					
ANR	3297060	Identifier	flags		3296693	1					
ANR	3297061	Identifier	PPC_OPERAND_OPTIONAL		3296693	1					
ANR	3297062	PrimaryExpression	0		3296693	1					
ANR	3297063	CompoundStatement		91:52:2449:2449	3296693	1					
ANR	3297064	IfStatement	if ( skip_optional < 0 )		3296693	0					
ANR	3297065	Condition	skip_optional < 0	323:7:10375:10391	3296693	0	True				
ANR	3297066	RelationalExpression	skip_optional < 0		3296693	0		<			
ANR	3297067	Identifier	skip_optional		3296693	0					
ANR	3297068	PrimaryExpression	0		3296693	1					
ANR	3297069	CompoundStatement		92:26:2477:2477	3296693	1					
ANR	3297070	ExpressionStatement	"skip_optional = skip_optional_operands ( opindex , insn , dialect )"	324:4:10400:10468	3296693	0	True				
ANR	3297071	AssignmentExpression	"skip_optional = skip_optional_operands ( opindex , insn , dialect )"		3296693	0		=			
ANR	3297072	Identifier	skip_optional		3296693	0					
ANR	3297073	CallExpression	"skip_optional_operands ( opindex , insn , dialect )"		3296693	1					
ANR	3297074	Callee	skip_optional_operands		3296693	0					
ANR	3297075	Identifier	skip_optional_operands		3296693	0					
ANR	3297076	ArgumentList	opindex		3296693	1					
ANR	3297077	Argument	opindex		3296693	0					
ANR	3297078	Identifier	opindex		3296693	0					
ANR	3297079	Argument	insn		3296693	1					
ANR	3297080	Identifier	insn		3296693	0					
ANR	3297081	Argument	dialect		3296693	2					
ANR	3297082	Identifier	dialect		3296693	0					
ANR	3297083	IfStatement	if ( skip_optional )		3296693	1					
ANR	3297084	Condition	skip_optional	327:7:10482:10494	3296693	0	True				
ANR	3297085	Identifier	skip_optional		3296693	0					
ANR	3297086	CompoundStatement		96:22:2580:2580	3296693	1					
ANR	3297087	ContinueStatement	continue ;	328:4:10503:10511	3296693	0	True				
ANR	3297088	ExpressionStatement	"value = operand_value_powerpc ( operand , insn , dialect )"	332:2:10525:10579	3296693	4	True				
ANR	3297089	AssignmentExpression	"value = operand_value_powerpc ( operand , insn , dialect )"		3296693	0		=			
ANR	3297090	Identifier	value		3296693	0					
ANR	3297091	CallExpression	"operand_value_powerpc ( operand , insn , dialect )"		3296693	1					
ANR	3297092	Callee	operand_value_powerpc		3296693	0					
ANR	3297093	Identifier	operand_value_powerpc		3296693	0					
ANR	3297094	ArgumentList	operand		3296693	1					
ANR	3297095	Argument	operand		3296693	0					
ANR	3297096	Identifier	operand		3296693	0					
ANR	3297097	Argument	insn		3296693	1					
ANR	3297098	Identifier	insn		3296693	0					
ANR	3297099	Argument	dialect		3296693	2					
ANR	3297100	Identifier	dialect		3296693	0					
ANR	3297101	IfStatement	if ( need_comma )		3296693	5					
ANR	3297102	Condition	need_comma	334:6:10588:10597	3296693	0	True				
ANR	3297103	Identifier	need_comma		3296693	0					
ANR	3297104	CompoundStatement		103:18:2683:2683	3296693	1					
ANR	3297105	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "", "" )"	335:3:10605:10647	3296693	0	True				
ANR	3297106	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "", "" )"		3296693	0					
ANR	3297107	Callee	* info -> fprintf_func		3296693	0					
ANR	3297108	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297109	UnaryOperator	*		3296693	0					
ANR	3297110	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297111	Identifier	info		3296693	0					
ANR	3297112	Identifier	fprintf_func		3296693	1					
ANR	3297113	ArgumentList	info -> stream		3296693	1					
ANR	3297114	Argument	info -> stream		3296693	0					
ANR	3297115	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297116	Identifier	info		3296693	0					
ANR	3297117	Identifier	stream		3296693	1					
ANR	3297118	Argument	""", """		3296693	1					
ANR	3297119	PrimaryExpression	""", """		3296693	0					
ANR	3297120	ExpressionStatement	need_comma = 0	336:3:10652:10666	3296693	1	True				
ANR	3297121	AssignmentExpression	need_comma = 0		3296693	0		=			
ANR	3297122	Identifier	need_comma		3296693	0					
ANR	3297123	PrimaryExpression	0		3296693	1					
ANR	3297124	IfStatement	if ( ( operand -> flags & PPC_OPERAND_GPR ) != 0 || ( ( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0 ) )		3296693	6					
ANR	3297125	Condition	( operand -> flags & PPC_OPERAND_GPR ) != 0 || ( ( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0 )	340:6:10732:10831	3296693	0	True				
ANR	3297126	OrExpression	( operand -> flags & PPC_OPERAND_GPR ) != 0 || ( ( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0 )		3296693	0		||			
ANR	3297127	EqualityExpression	( operand -> flags & PPC_OPERAND_GPR ) != 0		3296693	0		!=			
ANR	3297128	BitAndExpression	operand -> flags & PPC_OPERAND_GPR		3296693	0		&			
ANR	3297129	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297130	Identifier	operand		3296693	0					
ANR	3297131	Identifier	flags		3296693	1					
ANR	3297132	Identifier	PPC_OPERAND_GPR		3296693	1					
ANR	3297133	PrimaryExpression	0		3296693	1					
ANR	3297134	AndExpression	( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0		3296693	1		&&			
ANR	3297135	EqualityExpression	( operand -> flags & PPC_OPERAND_GPR_0 ) != 0		3296693	0		!=			
ANR	3297136	BitAndExpression	operand -> flags & PPC_OPERAND_GPR_0		3296693	0		&			
ANR	3297137	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297138	Identifier	operand		3296693	0					
ANR	3297139	Identifier	flags		3296693	1					
ANR	3297140	Identifier	PPC_OPERAND_GPR_0		3296693	1					
ANR	3297141	PrimaryExpression	0		3296693	1					
ANR	3297142	EqualityExpression	value != 0		3296693	1		!=			
ANR	3297143	Identifier	value		3296693	0					
ANR	3297144	PrimaryExpression	0		3296693	1					
ANR	3297145	CompoundStatement		109:108:2917:2917	3296693	1					
ANR	3297146	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""r%ld"" , value )"	341:3:10839:10890	3296693	0	True				
ANR	3297147	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""r%ld"" , value )"		3296693	0					
ANR	3297148	Callee	* info -> fprintf_func		3296693	0					
ANR	3297149	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297150	UnaryOperator	*		3296693	0					
ANR	3297151	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297152	Identifier	info		3296693	0					
ANR	3297153	Identifier	fprintf_func		3296693	1					
ANR	3297154	ArgumentList	info -> stream		3296693	1					
ANR	3297155	Argument	info -> stream		3296693	0					
ANR	3297156	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297157	Identifier	info		3296693	0					
ANR	3297158	Identifier	stream		3296693	1					
ANR	3297159	Argument	"""r%ld"""		3296693	1					
ANR	3297160	PrimaryExpression	"""r%ld"""		3296693	0					
ANR	3297161	Argument	value		3296693	2					
ANR	3297162	Identifier	value		3296693	0					
ANR	3297163	ElseStatement	else		3296693	0					
ANR	3297164	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FPR ) != 0 )		3296693	0					
ANR	3297165	Condition	( operand -> flags & PPC_OPERAND_FPR ) != 0	342:13:10905:10943	3296693	0	True				
ANR	3297166	EqualityExpression	( operand -> flags & PPC_OPERAND_FPR ) != 0		3296693	0		!=			
ANR	3297167	BitAndExpression	operand -> flags & PPC_OPERAND_FPR		3296693	0		&			
ANR	3297168	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297169	Identifier	operand		3296693	0					
ANR	3297170	Identifier	flags		3296693	1					
ANR	3297171	Identifier	PPC_OPERAND_FPR		3296693	1					
ANR	3297172	PrimaryExpression	0		3296693	1					
ANR	3297173	CompoundStatement		111:54:3029:3029	3296693	1					
ANR	3297174	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""f%ld"" , value )"	343:3:10951:11002	3296693	0	True				
ANR	3297175	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""f%ld"" , value )"		3296693	0					
ANR	3297176	Callee	* info -> fprintf_func		3296693	0					
ANR	3297177	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297178	UnaryOperator	*		3296693	0					
ANR	3297179	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297180	Identifier	info		3296693	0					
ANR	3297181	Identifier	fprintf_func		3296693	1					
ANR	3297182	ArgumentList	info -> stream		3296693	1					
ANR	3297183	Argument	info -> stream		3296693	0					
ANR	3297184	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297185	Identifier	info		3296693	0					
ANR	3297186	Identifier	stream		3296693	1					
ANR	3297187	Argument	"""f%ld"""		3296693	1					
ANR	3297188	PrimaryExpression	"""f%ld"""		3296693	0					
ANR	3297189	Argument	value		3296693	2					
ANR	3297190	Identifier	value		3296693	0					
ANR	3297191	ElseStatement	else		3296693	0					
ANR	3297192	IfStatement	if ( ( operand -> flags & PPC_OPERAND_VR ) != 0 )		3296693	0					
ANR	3297193	Condition	( operand -> flags & PPC_OPERAND_VR ) != 0	344:13:11017:11054	3296693	0	True				
ANR	3297194	EqualityExpression	( operand -> flags & PPC_OPERAND_VR ) != 0		3296693	0		!=			
ANR	3297195	BitAndExpression	operand -> flags & PPC_OPERAND_VR		3296693	0		&			
ANR	3297196	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297197	Identifier	operand		3296693	0					
ANR	3297198	Identifier	flags		3296693	1					
ANR	3297199	Identifier	PPC_OPERAND_VR		3296693	1					
ANR	3297200	PrimaryExpression	0		3296693	1					
ANR	3297201	CompoundStatement		113:53:3140:3140	3296693	1					
ANR	3297202	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""v%ld"" , value )"	345:3:11062:11113	3296693	0	True				
ANR	3297203	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""v%ld"" , value )"		3296693	0					
ANR	3297204	Callee	* info -> fprintf_func		3296693	0					
ANR	3297205	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297206	UnaryOperator	*		3296693	0					
ANR	3297207	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297208	Identifier	info		3296693	0					
ANR	3297209	Identifier	fprintf_func		3296693	1					
ANR	3297210	ArgumentList	info -> stream		3296693	1					
ANR	3297211	Argument	info -> stream		3296693	0					
ANR	3297212	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297213	Identifier	info		3296693	0					
ANR	3297214	Identifier	stream		3296693	1					
ANR	3297215	Argument	"""v%ld"""		3296693	1					
ANR	3297216	PrimaryExpression	"""v%ld"""		3296693	0					
ANR	3297217	Argument	value		3296693	2					
ANR	3297218	Identifier	value		3296693	0					
ANR	3297219	ElseStatement	else		3296693	0					
ANR	3297220	IfStatement	if ( ( operand -> flags & PPC_OPERAND_VSR ) != 0 )		3296693	0					
ANR	3297221	Condition	( operand -> flags & PPC_OPERAND_VSR ) != 0	346:13:11128:11166	3296693	0	True				
ANR	3297222	EqualityExpression	( operand -> flags & PPC_OPERAND_VSR ) != 0		3296693	0		!=			
ANR	3297223	BitAndExpression	operand -> flags & PPC_OPERAND_VSR		3296693	0		&			
ANR	3297224	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297225	Identifier	operand		3296693	0					
ANR	3297226	Identifier	flags		3296693	1					
ANR	3297227	Identifier	PPC_OPERAND_VSR		3296693	1					
ANR	3297228	PrimaryExpression	0		3296693	1					
ANR	3297229	CompoundStatement		115:54:3252:3252	3296693	1					
ANR	3297230	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""vs%ld"" , value )"	347:3:11174:11226	3296693	0	True				
ANR	3297231	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""vs%ld"" , value )"		3296693	0					
ANR	3297232	Callee	* info -> fprintf_func		3296693	0					
ANR	3297233	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297234	UnaryOperator	*		3296693	0					
ANR	3297235	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297236	Identifier	info		3296693	0					
ANR	3297237	Identifier	fprintf_func		3296693	1					
ANR	3297238	ArgumentList	info -> stream		3296693	1					
ANR	3297239	Argument	info -> stream		3296693	0					
ANR	3297240	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297241	Identifier	info		3296693	0					
ANR	3297242	Identifier	stream		3296693	1					
ANR	3297243	Argument	"""vs%ld"""		3296693	1					
ANR	3297244	PrimaryExpression	"""vs%ld"""		3296693	0					
ANR	3297245	Argument	value		3296693	2					
ANR	3297246	Identifier	value		3296693	0					
ANR	3297247	ElseStatement	else		3296693	0					
ANR	3297248	IfStatement	if ( ( operand -> flags & PPC_OPERAND_RELATIVE ) != 0 )		3296693	0					
ANR	3297249	Condition	( operand -> flags & PPC_OPERAND_RELATIVE ) != 0	348:13:11241:11284	3296693	0	True				
ANR	3297250	EqualityExpression	( operand -> flags & PPC_OPERAND_RELATIVE ) != 0		3296693	0		!=			
ANR	3297251	BitAndExpression	operand -> flags & PPC_OPERAND_RELATIVE		3296693	0		&			
ANR	3297252	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297253	Identifier	operand		3296693	0					
ANR	3297254	Identifier	flags		3296693	1					
ANR	3297255	Identifier	PPC_OPERAND_RELATIVE		3296693	1					
ANR	3297256	PrimaryExpression	0		3296693	1					
ANR	3297257	CompoundStatement		117:59:3370:3370	3296693	1					
ANR	3297258	ExpressionStatement	"( * info -> print_address_func ) ( memaddr + value , info )"	349:3:11292:11343	3296693	0	True				
ANR	3297259	CallExpression	"( * info -> print_address_func ) ( memaddr + value , info )"		3296693	0					
ANR	3297260	Callee	* info -> print_address_func		3296693	0					
ANR	3297261	UnaryOperationExpression	* info -> print_address_func		3296693	0					
ANR	3297262	UnaryOperator	*		3296693	0					
ANR	3297263	PtrMemberAccess	info -> print_address_func		3296693	1					
ANR	3297264	Identifier	info		3296693	0					
ANR	3297265	Identifier	print_address_func		3296693	1					
ANR	3297266	ArgumentList	memaddr + value		3296693	1					
ANR	3297267	Argument	memaddr + value		3296693	0					
ANR	3297268	AdditiveExpression	memaddr + value		3296693	0		+			
ANR	3297269	Identifier	memaddr		3296693	0					
ANR	3297270	Identifier	value		3296693	1					
ANR	3297271	Argument	info		3296693	1					
ANR	3297272	Identifier	info		3296693	0					
ANR	3297273	ElseStatement	else		3296693	0					
ANR	3297274	IfStatement	if ( ( operand -> flags & PPC_OPERAND_ABSOLUTE ) != 0 )		3296693	0					
ANR	3297275	Condition	( operand -> flags & PPC_OPERAND_ABSOLUTE ) != 0	350:13:11358:11401	3296693	0	True				
ANR	3297276	EqualityExpression	( operand -> flags & PPC_OPERAND_ABSOLUTE ) != 0		3296693	0		!=			
ANR	3297277	BitAndExpression	operand -> flags & PPC_OPERAND_ABSOLUTE		3296693	0		&			
ANR	3297278	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297279	Identifier	operand		3296693	0					
ANR	3297280	Identifier	flags		3296693	1					
ANR	3297281	Identifier	PPC_OPERAND_ABSOLUTE		3296693	1					
ANR	3297282	PrimaryExpression	0		3296693	1					
ANR	3297283	CompoundStatement		119:59:3487:3487	3296693	1					
ANR	3297284	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) value & 0xffffffff , info )"	351:3:11409:11472	3296693	0	True				
ANR	3297285	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) value & 0xffffffff , info )"		3296693	0					
ANR	3297286	Callee	* info -> print_address_func		3296693	0					
ANR	3297287	UnaryOperationExpression	* info -> print_address_func		3296693	0					
ANR	3297288	UnaryOperator	*		3296693	0					
ANR	3297289	PtrMemberAccess	info -> print_address_func		3296693	1					
ANR	3297290	Identifier	info		3296693	0					
ANR	3297291	Identifier	print_address_func		3296693	1					
ANR	3297292	ArgumentList	( bfd_vma ) value & 0xffffffff		3296693	1					
ANR	3297293	Argument	( bfd_vma ) value & 0xffffffff		3296693	0					
ANR	3297294	BitAndExpression	( bfd_vma ) value & 0xffffffff		3296693	0		&			
ANR	3297295	CastExpression	( bfd_vma ) value		3296693	0					
ANR	3297296	CastTarget	bfd_vma		3296693	0					
ANR	3297297	Identifier	value		3296693	1					
ANR	3297298	PrimaryExpression	0xffffffff		3296693	1					
ANR	3297299	Argument	info		3296693	1					
ANR	3297300	Identifier	info		3296693	0					
ANR	3297301	ElseStatement	else		3296693	0					
ANR	3297302	IfStatement	if ( ( operand -> flags & PPC_OPERAND_CR ) == 0 || ( dialect & PPC_OPCODE_PPC ) == 0 )		3296693	0					
ANR	3297303	Condition	( operand -> flags & PPC_OPERAND_CR ) == 0 || ( dialect & PPC_OPCODE_PPC ) == 0	352:13:11487:11559	3296693	0	True				
ANR	3297304	OrExpression	( operand -> flags & PPC_OPERAND_CR ) == 0 || ( dialect & PPC_OPCODE_PPC ) == 0		3296693	0		||			
ANR	3297305	EqualityExpression	( operand -> flags & PPC_OPERAND_CR ) == 0		3296693	0		==			
ANR	3297306	BitAndExpression	operand -> flags & PPC_OPERAND_CR		3296693	0		&			
ANR	3297307	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297308	Identifier	operand		3296693	0					
ANR	3297309	Identifier	flags		3296693	1					
ANR	3297310	Identifier	PPC_OPERAND_CR		3296693	1					
ANR	3297311	PrimaryExpression	0		3296693	1					
ANR	3297312	EqualityExpression	( dialect & PPC_OPCODE_PPC ) == 0		3296693	1		==			
ANR	3297313	BitAndExpression	dialect & PPC_OPCODE_PPC		3296693	0		&			
ANR	3297314	Identifier	dialect		3296693	0					
ANR	3297315	Identifier	PPC_OPCODE_PPC		3296693	1					
ANR	3297316	PrimaryExpression	0		3296693	1					
ANR	3297317	CompoundStatement		121:88:3645:3645	3296693	1					
ANR	3297318	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"	353:3:11567:11617	3296693	0	True				
ANR	3297319	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"		3296693	0					
ANR	3297320	Callee	* info -> fprintf_func		3296693	0					
ANR	3297321	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297322	UnaryOperator	*		3296693	0					
ANR	3297323	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297324	Identifier	info		3296693	0					
ANR	3297325	Identifier	fprintf_func		3296693	1					
ANR	3297326	ArgumentList	info -> stream		3296693	1					
ANR	3297327	Argument	info -> stream		3296693	0					
ANR	3297328	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297329	Identifier	info		3296693	0					
ANR	3297330	Identifier	stream		3296693	1					
ANR	3297331	Argument	"""%ld"""		3296693	1					
ANR	3297332	PrimaryExpression	"""%ld"""		3296693	0					
ANR	3297333	Argument	value		3296693	2					
ANR	3297334	Identifier	value		3296693	0					
ANR	3297335	ElseStatement	else		3296693	0					
ANR	3297336	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FSL ) != 0 )		3296693	0					
ANR	3297337	Condition	( operand -> flags & PPC_OPERAND_FSL ) != 0	354:13:11632:11670	3296693	0	True				
ANR	3297338	EqualityExpression	( operand -> flags & PPC_OPERAND_FSL ) != 0		3296693	0		!=			
ANR	3297339	BitAndExpression	operand -> flags & PPC_OPERAND_FSL		3296693	0		&			
ANR	3297340	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297341	Identifier	operand		3296693	0					
ANR	3297342	Identifier	flags		3296693	1					
ANR	3297343	Identifier	PPC_OPERAND_FSL		3296693	1					
ANR	3297344	PrimaryExpression	0		3296693	1					
ANR	3297345	CompoundStatement		123:54:3756:3756	3296693	1					
ANR	3297346	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""fsl%ld"" , value )"	355:3:11678:11731	3296693	0	True				
ANR	3297347	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""fsl%ld"" , value )"		3296693	0					
ANR	3297348	Callee	* info -> fprintf_func		3296693	0					
ANR	3297349	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297350	UnaryOperator	*		3296693	0					
ANR	3297351	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297352	Identifier	info		3296693	0					
ANR	3297353	Identifier	fprintf_func		3296693	1					
ANR	3297354	ArgumentList	info -> stream		3296693	1					
ANR	3297355	Argument	info -> stream		3296693	0					
ANR	3297356	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297357	Identifier	info		3296693	0					
ANR	3297358	Identifier	stream		3296693	1					
ANR	3297359	Argument	"""fsl%ld"""		3296693	1					
ANR	3297360	PrimaryExpression	"""fsl%ld"""		3296693	0					
ANR	3297361	Argument	value		3296693	2					
ANR	3297362	Identifier	value		3296693	0					
ANR	3297363	ElseStatement	else		3296693	0					
ANR	3297364	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FCR ) != 0 )		3296693	0					
ANR	3297365	Condition	( operand -> flags & PPC_OPERAND_FCR ) != 0	356:13:11746:11784	3296693	0	True				
ANR	3297366	EqualityExpression	( operand -> flags & PPC_OPERAND_FCR ) != 0		3296693	0		!=			
ANR	3297367	BitAndExpression	operand -> flags & PPC_OPERAND_FCR		3296693	0		&			
ANR	3297368	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297369	Identifier	operand		3296693	0					
ANR	3297370	Identifier	flags		3296693	1					
ANR	3297371	Identifier	PPC_OPERAND_FCR		3296693	1					
ANR	3297372	PrimaryExpression	0		3296693	1					
ANR	3297373	CompoundStatement		125:54:3870:3870	3296693	1					
ANR	3297374	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""fcr%ld"" , value )"	357:3:11792:11845	3296693	0	True				
ANR	3297375	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""fcr%ld"" , value )"		3296693	0					
ANR	3297376	Callee	* info -> fprintf_func		3296693	0					
ANR	3297377	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297378	UnaryOperator	*		3296693	0					
ANR	3297379	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297380	Identifier	info		3296693	0					
ANR	3297381	Identifier	fprintf_func		3296693	1					
ANR	3297382	ArgumentList	info -> stream		3296693	1					
ANR	3297383	Argument	info -> stream		3296693	0					
ANR	3297384	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297385	Identifier	info		3296693	0					
ANR	3297386	Identifier	stream		3296693	1					
ANR	3297387	Argument	"""fcr%ld"""		3296693	1					
ANR	3297388	PrimaryExpression	"""fcr%ld"""		3296693	0					
ANR	3297389	Argument	value		3296693	2					
ANR	3297390	Identifier	value		3296693	0					
ANR	3297391	ElseStatement	else		3296693	0					
ANR	3297392	IfStatement	if ( ( operand -> flags & PPC_OPERAND_UDI ) != 0 )		3296693	0					
ANR	3297393	Condition	( operand -> flags & PPC_OPERAND_UDI ) != 0	358:13:11860:11898	3296693	0	True				
ANR	3297394	EqualityExpression	( operand -> flags & PPC_OPERAND_UDI ) != 0		3296693	0		!=			
ANR	3297395	BitAndExpression	operand -> flags & PPC_OPERAND_UDI		3296693	0		&			
ANR	3297396	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297397	Identifier	operand		3296693	0					
ANR	3297398	Identifier	flags		3296693	1					
ANR	3297399	Identifier	PPC_OPERAND_UDI		3296693	1					
ANR	3297400	PrimaryExpression	0		3296693	1					
ANR	3297401	CompoundStatement		127:54:3984:3984	3296693	1					
ANR	3297402	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"	359:3:11906:11956	3296693	0	True				
ANR	3297403	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"		3296693	0					
ANR	3297404	Callee	* info -> fprintf_func		3296693	0					
ANR	3297405	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297406	UnaryOperator	*		3296693	0					
ANR	3297407	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297408	Identifier	info		3296693	0					
ANR	3297409	Identifier	fprintf_func		3296693	1					
ANR	3297410	ArgumentList	info -> stream		3296693	1					
ANR	3297411	Argument	info -> stream		3296693	0					
ANR	3297412	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297413	Identifier	info		3296693	0					
ANR	3297414	Identifier	stream		3296693	1					
ANR	3297415	Argument	"""%ld"""		3296693	1					
ANR	3297416	PrimaryExpression	"""%ld"""		3296693	0					
ANR	3297417	Argument	value		3296693	2					
ANR	3297418	Identifier	value		3296693	0					
ANR	3297419	ElseStatement	else		3296693	0					
ANR	3297420	CompoundStatement		129:9:4050:4050	3296693	0					
ANR	3297421	IfStatement	if ( operand -> bitm == 7 )		3296693	0					
ANR	3297422	Condition	operand -> bitm == 7	361:7:11976:11993	3296693	0	True				
ANR	3297423	EqualityExpression	operand -> bitm == 7		3296693	0		==			
ANR	3297424	PtrMemberAccess	operand -> bitm		3296693	0					
ANR	3297425	Identifier	operand		3296693	0					
ANR	3297426	Identifier	bitm		3296693	1					
ANR	3297427	PrimaryExpression	7		3296693	1					
ANR	3297428	CompoundStatement		130:27:4079:4079	3296693	1					
ANR	3297429	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""cr%ld"" , value )"	362:4:12002:12054	3296693	0	True				
ANR	3297430	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""cr%ld"" , value )"		3296693	0					
ANR	3297431	Callee	* info -> fprintf_func		3296693	0					
ANR	3297432	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297433	UnaryOperator	*		3296693	0					
ANR	3297434	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297435	Identifier	info		3296693	0					
ANR	3297436	Identifier	fprintf_func		3296693	1					
ANR	3297437	ArgumentList	info -> stream		3296693	1					
ANR	3297438	Argument	info -> stream		3296693	0					
ANR	3297439	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297440	Identifier	info		3296693	0					
ANR	3297441	Identifier	stream		3296693	1					
ANR	3297442	Argument	"""cr%ld"""		3296693	1					
ANR	3297443	PrimaryExpression	"""cr%ld"""		3296693	0					
ANR	3297444	Argument	value		3296693	2					
ANR	3297445	Identifier	value		3296693	0					
ANR	3297446	ElseStatement	else		3296693	0					
ANR	3297447	CompoundStatement		135:4:4229:4235	3296693	0					
ANR	3297448	Statement	static	364:4:12072:12077	3296693	0	True				
ANR	3297449	IdentifierDeclStatement	"const char * cbnames [ 4 ] = { ""lt"" , ""gt"" , ""eq"" , ""so"" } ;"	364:11:12079:12128	3296693	1	True				
ANR	3297450	IdentifierDecl	"* cbnames [ 4 ] = { ""lt"" , ""gt"" , ""eq"" , ""so"" }"		3296693	0					
ANR	3297451	IdentifierDeclType	const char * [ 4 ]		3296693	0					
ANR	3297452	Identifier	cbnames		3296693	1					
ANR	3297453	PrimaryExpression	4		3296693	2					
ANR	3297454	AssignmentExpression	"* cbnames [ 4 ] = { ""lt"" , ""gt"" , ""eq"" , ""so"" }"		3296693	3		=			
ANR	3297455	Identifier	cbnames		3296693	0					
ANR	3297456	InitializerList	"""lt"""		3296693	1					
ANR	3297457	PrimaryExpression	"""lt"""		3296693	0					
ANR	3297458	PrimaryExpression	"""gt"""		3296693	1					
ANR	3297459	PrimaryExpression	"""eq"""		3296693	2					
ANR	3297460	PrimaryExpression	"""so"""		3296693	3					
ANR	3297461	IdentifierDeclStatement	int cr ;	365:4:12134:12140	3296693	2	True				
ANR	3297462	IdentifierDecl	cr		3296693	0					
ANR	3297463	IdentifierDeclType	int		3296693	0					
ANR	3297464	Identifier	cr		3296693	1					
ANR	3297465	IdentifierDeclStatement	int cc ;	366:4:12146:12152	3296693	3	True				
ANR	3297466	IdentifierDecl	cc		3296693	0					
ANR	3297467	IdentifierDeclType	int		3296693	0					
ANR	3297468	Identifier	cc		3296693	1					
ANR	3297469	ExpressionStatement	cr = value >> 2	368:4:12159:12174	3296693	4	True				
ANR	3297470	AssignmentExpression	cr = value >> 2		3296693	0		=			
ANR	3297471	Identifier	cr		3296693	0					
ANR	3297472	ShiftExpression	value >> 2		3296693	1		>>			
ANR	3297473	Identifier	value		3296693	0					
ANR	3297474	PrimaryExpression	2		3296693	1					
ANR	3297475	IfStatement	if ( cr != 0 )		3296693	5					
ANR	3297476	Condition	cr != 0	369:8:12184:12190	3296693	0	True				
ANR	3297477	EqualityExpression	cr != 0		3296693	0		!=			
ANR	3297478	Identifier	cr		3296693	0					
ANR	3297479	PrimaryExpression	0		3296693	1					
ANR	3297480	CompoundStatement		138:17:4276:4276	3296693	1					
ANR	3297481	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""4*cr%d+"" , cr )"	370:5:12200:12251	3296693	0	True				
ANR	3297482	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""4*cr%d+"" , cr )"		3296693	0					
ANR	3297483	Callee	* info -> fprintf_func		3296693	0					
ANR	3297484	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297485	UnaryOperator	*		3296693	0					
ANR	3297486	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297487	Identifier	info		3296693	0					
ANR	3297488	Identifier	fprintf_func		3296693	1					
ANR	3297489	ArgumentList	info -> stream		3296693	1					
ANR	3297490	Argument	info -> stream		3296693	0					
ANR	3297491	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297492	Identifier	info		3296693	0					
ANR	3297493	Identifier	stream		3296693	1					
ANR	3297494	Argument	"""4*cr%d+"""		3296693	1					
ANR	3297495	PrimaryExpression	"""4*cr%d+"""		3296693	0					
ANR	3297496	Argument	cr		3296693	2					
ANR	3297497	Identifier	cr		3296693	0					
ANR	3297498	ExpressionStatement	cc = value & 3	372:4:12263:12277	3296693	6	True				
ANR	3297499	AssignmentExpression	cc = value & 3		3296693	0		=			
ANR	3297500	Identifier	cc		3296693	0					
ANR	3297501	BitAndExpression	value & 3		3296693	1		&			
ANR	3297502	Identifier	value		3296693	0					
ANR	3297503	PrimaryExpression	3		3296693	1					
ANR	3297504	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , cbnames [ cc ] )"	373:4:12283:12338	3296693	7	True				
ANR	3297505	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , cbnames [ cc ] )"		3296693	0					
ANR	3297506	Callee	* info -> fprintf_func		3296693	0					
ANR	3297507	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297508	UnaryOperator	*		3296693	0					
ANR	3297509	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297510	Identifier	info		3296693	0					
ANR	3297511	Identifier	fprintf_func		3296693	1					
ANR	3297512	ArgumentList	info -> stream		3296693	1					
ANR	3297513	Argument	info -> stream		3296693	0					
ANR	3297514	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297515	Identifier	info		3296693	0					
ANR	3297516	Identifier	stream		3296693	1					
ANR	3297517	Argument	"""%s"""		3296693	1					
ANR	3297518	PrimaryExpression	"""%s"""		3296693	0					
ANR	3297519	Argument	cbnames [ cc ]		3296693	2					
ANR	3297520	ArrayIndexing	cbnames [ cc ]		3296693	0					
ANR	3297521	Identifier	cbnames		3296693	0					
ANR	3297522	Identifier	cc		3296693	1					
ANR	3297523	IfStatement	if ( need_paren )		3296693	7					
ANR	3297524	Condition	need_paren	377:6:12356:12365	3296693	0	True				
ANR	3297525	Identifier	need_paren		3296693	0					
ANR	3297526	CompoundStatement		146:18:4451:4451	3296693	1					
ANR	3297527	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "")"" )"	378:3:12373:12414	3296693	0	True				
ANR	3297528	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "")"" )"		3296693	0					
ANR	3297529	Callee	* info -> fprintf_func		3296693	0					
ANR	3297530	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297531	UnaryOperator	*		3296693	0					
ANR	3297532	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297533	Identifier	info		3296693	0					
ANR	3297534	Identifier	fprintf_func		3296693	1					
ANR	3297535	ArgumentList	info -> stream		3296693	1					
ANR	3297536	Argument	info -> stream		3296693	0					
ANR	3297537	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297538	Identifier	info		3296693	0					
ANR	3297539	Identifier	stream		3296693	1					
ANR	3297540	Argument	""")"""		3296693	1					
ANR	3297541	PrimaryExpression	""")"""		3296693	0					
ANR	3297542	ExpressionStatement	need_paren = 0	379:3:12419:12433	3296693	1	True				
ANR	3297543	AssignmentExpression	need_paren = 0		3296693	0		=			
ANR	3297544	Identifier	need_paren		3296693	0					
ANR	3297545	PrimaryExpression	0		3296693	1					
ANR	3297546	IfStatement	if ( ( operand -> flags & PPC_OPERAND_PARENS ) == 0 )		3296693	8					
ANR	3297547	Condition	( operand -> flags & PPC_OPERAND_PARENS ) == 0	382:6:12446:12487	3296693	0	True				
ANR	3297548	EqualityExpression	( operand -> flags & PPC_OPERAND_PARENS ) == 0		3296693	0		==			
ANR	3297549	BitAndExpression	operand -> flags & PPC_OPERAND_PARENS		3296693	0		&			
ANR	3297550	PtrMemberAccess	operand -> flags		3296693	0					
ANR	3297551	Identifier	operand		3296693	0					
ANR	3297552	Identifier	flags		3296693	1					
ANR	3297553	Identifier	PPC_OPERAND_PARENS		3296693	1					
ANR	3297554	PrimaryExpression	0		3296693	1					
ANR	3297555	CompoundStatement		151:50:4573:4573	3296693	1					
ANR	3297556	ExpressionStatement	need_comma = 1	383:3:12495:12509	3296693	0	True				
ANR	3297557	AssignmentExpression	need_comma = 1		3296693	0		=			
ANR	3297558	Identifier	need_comma		3296693	0					
ANR	3297559	PrimaryExpression	1		3296693	1					
ANR	3297560	ElseStatement	else		3296693	0					
ANR	3297561	CompoundStatement		153:9:4603:4603	3296693	0					
ANR	3297562	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""("" )"	385:3:12525:12566	3296693	0	True				
ANR	3297563	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""("" )"		3296693	0					
ANR	3297564	Callee	* info -> fprintf_func		3296693	0					
ANR	3297565	UnaryOperationExpression	* info -> fprintf_func		3296693	0					
ANR	3297566	UnaryOperator	*		3296693	0					
ANR	3297567	PtrMemberAccess	info -> fprintf_func		3296693	1					
ANR	3297568	Identifier	info		3296693	0					
ANR	3297569	Identifier	fprintf_func		3296693	1					
ANR	3297570	ArgumentList	info -> stream		3296693	1					
ANR	3297571	Argument	info -> stream		3296693	0					
ANR	3297572	PtrMemberAccess	info -> stream		3296693	0					
ANR	3297573	Identifier	info		3296693	0					
ANR	3297574	Identifier	stream		3296693	1					
ANR	3297575	Argument	"""("""		3296693	1					
ANR	3297576	PrimaryExpression	"""("""		3296693	0					
ANR	3297577	ExpressionStatement	need_paren = 1	386:3:12571:12585	3296693	1	True				
ANR	3297578	AssignmentExpression	need_paren = 1		3296693	0		=			
ANR	3297579	Identifier	need_paren		3296693	0					
ANR	3297580	PrimaryExpression	1		3296693	1					
ANR	3297581	ReturnStatement	return 4 ;	391:6:12664:12672	3296693	19	True				
ANR	3297582	PrimaryExpression	4		3296693	0					
ANR	3297583	IfStatement	if ( ( dialect & PPC_OPCODE_ANY ) != 0 )		3296693	13					
ANR	3297584	Condition	( dialect & PPC_OPCODE_ANY ) != 0	394:6:12687:12717	3296693	0	True				
ANR	3297585	EqualityExpression	( dialect & PPC_OPCODE_ANY ) != 0		3296693	0		!=			
ANR	3297586	BitAndExpression	dialect & PPC_OPCODE_ANY		3296693	0		&			
ANR	3297587	Identifier	dialect		3296693	0					
ANR	3297588	Identifier	PPC_OPCODE_ANY		3296693	1					
ANR	3297589	PrimaryExpression	0		3296693	1					
ANR	3297590	CompoundStatement		164:4:4807:4807	3296693	1					
ANR	3297591	ExpressionStatement	dialect = ~PPC_OPCODE_ANY	396:6:12732:12757	3296693	0	True				
ANR	3297592	AssignmentExpression	dialect = ~PPC_OPCODE_ANY		3296693	0		=			
ANR	3297593	Identifier	dialect		3296693	0					
ANR	3297594	Identifier	~PPC_OPCODE_ANY		3296693	1					
ANR	3297595	GotoStatement	goto again ;	397:6:12765:12775	3296693	1	True				
ANR	3297596	Identifier	again		3296693	0					
ANR	3297597	ReturnStatement	return 4 ;	403:2:12886:12894	3296693	14	True				
ANR	3297598	PrimaryExpression	4		3296693	0					
ANR	3297599	ReturnType	static int		3296693	1					
ANR	3297600	Identifier	print_insn_powerpc		3296693	2					
ANR	3297601	ParameterList	"bfd_vma memaddr , struct disassemble_info * info , int bigendian , ppc_cpu_t dialect"		3296693	3					
ANR	3297602	Parameter	bfd_vma memaddr	228:20:7816:7830	3296693	0	True				
ANR	3297603	ParameterType	bfd_vma		3296693	0					
ANR	3297604	Identifier	memaddr		3296693	1					
ANR	3297605	Parameter	struct disassemble_info * info	229:6:7839:7867	3296693	1	True				
ANR	3297606	ParameterType	struct disassemble_info *		3296693	0					
ANR	3297607	Identifier	info		3296693	1					
ANR	3297608	Parameter	int bigendian	230:6:7876:7888	3296693	2	True				
ANR	3297609	ParameterType	int		3296693	0					
ANR	3297610	Identifier	bigendian		3296693	1					
ANR	3297611	Parameter	ppc_cpu_t dialect	231:6:7897:7913	3296693	3	True				
ANR	3297612	ParameterType	ppc_cpu_t		3296693	0					
ANR	3297613	Identifier	dialect		3296693	1					
ANR	3297614	CFGEntryNode	ENTRY		3296693		True				
ANR	3297615	CFGExitNode	EXIT		3296693		True				
ANR	3297616	Symbol	dialect		3296693						
ANR	3297617	Symbol	* cc		3296693						
ANR	3297618	Symbol	* opcode -> operands		3296693						
ANR	3297619	Symbol	PPC_OPERAND_VSR		3296693						
ANR	3297620	Symbol	PPC_OPERAND_FCR		3296693						
ANR	3297621	Symbol	opcode		3296693						
ANR	3297622	Symbol	* cbnames		3296693						
ANR	3297623	Symbol	info -> fprintf_func		3296693						
ANR	3297624	Symbol	__bfd_getl32		3296693						
ANR	3297625	Symbol	__bfd_getb32		3296693						
ANR	3297626	Symbol	opcode -> flags		3296693						
ANR	3297627	Symbol	skip_optional		3296693						
ANR	3297628	Symbol	buffer		3296693						
ANR	3297629	Symbol	powerpc_opcodes		3296693						
ANR	3297630	Symbol	info		3296693						
ANR	3297631	Symbol	PPC_OPERAND_FPR		3296693						
ANR	3297632	Symbol	PPC_OPERAND_UDI		3296693						
ANR	3297633	Symbol	opcode -> name		3296693						
ANR	3297634	Symbol	PPC_OPERAND_FSL		3296693						
ANR	3297635	Symbol	* * opcode		3296693						
ANR	3297636	Symbol	PPC_OPERAND_FAKE		3296693						
ANR	3297637	Symbol	powerpc_operands		3296693						
ANR	3297638	Symbol	operand -> extract		3296693						
ANR	3297639	Symbol	PPC_OPERAND_CR		3296693						
ANR	3297640	Symbol	PPC_OPERAND_PARENS		3296693						
ANR	3297641	Symbol	cbnames		3296693						
ANR	3297642	Symbol	info -> read_memory_func		3296693						
ANR	3297643	Symbol	invalid		3296693						
ANR	3297644	Symbol	PPC_OPERAND_GPR_0		3296693						
ANR	3297645	Symbol	PPC_OPERAND_RELATIVE		3296693						
ANR	3297646	Symbol	status		3296693						
ANR	3297647	Symbol	* * info		3296693						
ANR	3297648	Symbol	opcode -> mask		3296693						
ANR	3297649	Symbol	* operand		3296693						
ANR	3297650	Symbol	memaddr		3296693						
ANR	3297651	Symbol	skip_optional_operands		3296693						
ANR	3297652	Symbol	info -> stream		3296693						
ANR	3297653	Symbol	PPC_OPERAND_OPTIONAL		3296693						
ANR	3297654	Symbol	table_op		3296693						
ANR	3297655	Symbol	* opindex		3296693						
ANR	3297656	Symbol	PPC_OP		3296693						
ANR	3297657	Symbol	info -> print_address_func		3296693						
ANR	3297658	Symbol	opcode -> operands		3296693						
ANR	3297659	Symbol	bigendian		3296693						
ANR	3297660	Symbol	value		3296693						
ANR	3297661	Symbol	PPC_OPERAND_GPR		3296693						
ANR	3297662	Symbol	* info -> read_memory_func		3296693						
ANR	3297663	Symbol	powerpc_num_opcodes		3296693						
ANR	3297664	Symbol	cc		3296693						
ANR	3297665	Symbol	op		3296693						
ANR	3297666	Symbol	& invalid		3296693						
ANR	3297667	Symbol	operand -> flags		3296693						
ANR	3297668	Symbol	need_paren		3296693						
ANR	3297669	Symbol	PPC_OPCODE_PPC		3296693						
ANR	3297670	Symbol	info -> memory_error_func		3296693						
ANR	3297671	Symbol	cr		3296693						
ANR	3297672	Symbol	PPC_OPCODE_ANY		3296693						
ANR	3297673	Symbol	~PPC_OPCODE_ANY		3296693						
ANR	3297674	Symbol	insn		3296693						
ANR	3297675	Symbol	opcode -> opcode		3296693						
ANR	3297676	Symbol	operand_value_powerpc		3296693						
ANR	3297677	Symbol	opcode_end		3296693						
ANR	3297678	Symbol	* info		3296693						
ANR	3297679	Symbol	need_comma		3296693						
ANR	3297680	Symbol	opindex		3296693						
ANR	3297681	Symbol	PPC_OPERAND_ABSOLUTE		3296693						
ANR	3297682	Symbol	operand -> bitm		3296693						
ANR	3297683	Symbol	operand		3296693						
ANR	3297684	Symbol	PPC_OPERAND_VR		3296693						
ANR	3297685	Symbol	* opcode		3296693						
ANR	3297686	Function	print_ppc_disassembler_options	406:0:12899:14418							
ANR	3297687	FunctionDef	print_ppc_disassembler_options (FILE * stream)		3297686	0					
ANR	3297688	CompoundStatement		408:0:12950:14418	3297686	0					
ANR	3297689	ExpressionStatement	"fprintf ( stream , ""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" )"	409:2:12954:13072	3297686	0	True				
ANR	3297690	CallExpression	"fprintf ( stream , ""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" )"		3297686	0					
ANR	3297691	Callee	fprintf		3297686	0					
ANR	3297692	Identifier	fprintf		3297686	0					
ANR	3297693	ArgumentList	stream		3297686	1					
ANR	3297694	Argument	stream		3297686	0					
ANR	3297695	Identifier	stream		3297686	0					
ANR	3297696	Argument	"""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		3297686	1					
ANR	3297697	PrimaryExpression	"""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		3297686	0					
ANR	3297698	ExpressionStatement	"fprintf ( stream , ""  booke|booke32|booke64    Disassemble the BookE instructions\\n"" )"	413:2:13077:13160	3297686	1	True				
ANR	3297699	CallExpression	"fprintf ( stream , ""  booke|booke32|booke64    Disassemble the BookE instructions\\n"" )"		3297686	0					
ANR	3297700	Callee	fprintf		3297686	0					
ANR	3297701	Identifier	fprintf		3297686	0					
ANR	3297702	ArgumentList	stream		3297686	1					
ANR	3297703	Argument	stream		3297686	0					
ANR	3297704	Identifier	stream		3297686	0					
ANR	3297705	Argument	"""  booke|booke32|booke64    Disassemble the BookE instructions\\n"""		3297686	1					
ANR	3297706	PrimaryExpression	"""  booke|booke32|booke64    Disassemble the BookE instructions\\n"""		3297686	0					
ANR	3297707	ExpressionStatement	"fprintf ( stream , ""  e300                     Disassemble the e300 instructions\\n"" )"	414:2:13164:13246	3297686	2	True				
ANR	3297708	CallExpression	"fprintf ( stream , ""  e300                     Disassemble the e300 instructions\\n"" )"		3297686	0					
ANR	3297709	Callee	fprintf		3297686	0					
ANR	3297710	Identifier	fprintf		3297686	0					
ANR	3297711	ArgumentList	stream		3297686	1					
ANR	3297712	Argument	stream		3297686	0					
ANR	3297713	Identifier	stream		3297686	0					
ANR	3297714	Argument	"""  e300                     Disassemble the e300 instructions\\n"""		3297686	1					
ANR	3297715	PrimaryExpression	"""  e300                     Disassemble the e300 instructions\\n"""		3297686	0					
ANR	3297716	ExpressionStatement	"fprintf ( stream , ""  e500|e500x2              Disassemble the e500 instructions\\n"" )"	415:2:13250:13332	3297686	3	True				
ANR	3297717	CallExpression	"fprintf ( stream , ""  e500|e500x2              Disassemble the e500 instructions\\n"" )"		3297686	0					
ANR	3297718	Callee	fprintf		3297686	0					
ANR	3297719	Identifier	fprintf		3297686	0					
ANR	3297720	ArgumentList	stream		3297686	1					
ANR	3297721	Argument	stream		3297686	0					
ANR	3297722	Identifier	stream		3297686	0					
ANR	3297723	Argument	"""  e500|e500x2              Disassemble the e500 instructions\\n"""		3297686	1					
ANR	3297724	PrimaryExpression	"""  e500|e500x2              Disassemble the e500 instructions\\n"""		3297686	0					
ANR	3297725	ExpressionStatement	"fprintf ( stream , ""  e500mc                   Disassemble the e500mc instructions\\n"" )"	416:2:13336:13420	3297686	4	True				
ANR	3297726	CallExpression	"fprintf ( stream , ""  e500mc                   Disassemble the e500mc instructions\\n"" )"		3297686	0					
ANR	3297727	Callee	fprintf		3297686	0					
ANR	3297728	Identifier	fprintf		3297686	0					
ANR	3297729	ArgumentList	stream		3297686	1					
ANR	3297730	Argument	stream		3297686	0					
ANR	3297731	Identifier	stream		3297686	0					
ANR	3297732	Argument	"""  e500mc                   Disassemble the e500mc instructions\\n"""		3297686	1					
ANR	3297733	PrimaryExpression	"""  e500mc                   Disassemble the e500mc instructions\\n"""		3297686	0					
ANR	3297734	ExpressionStatement	"fprintf ( stream , ""  440                      Disassemble the 440 instructions\\n"" )"	417:2:13424:13505	3297686	5	True				
ANR	3297735	CallExpression	"fprintf ( stream , ""  440                      Disassemble the 440 instructions\\n"" )"		3297686	0					
ANR	3297736	Callee	fprintf		3297686	0					
ANR	3297737	Identifier	fprintf		3297686	0					
ANR	3297738	ArgumentList	stream		3297686	1					
ANR	3297739	Argument	stream		3297686	0					
ANR	3297740	Identifier	stream		3297686	0					
ANR	3297741	Argument	"""  440                      Disassemble the 440 instructions\\n"""		3297686	1					
ANR	3297742	PrimaryExpression	"""  440                      Disassemble the 440 instructions\\n"""		3297686	0					
ANR	3297743	ExpressionStatement	"fprintf ( stream , ""  464                      Disassemble the 464 instructions\\n"" )"	418:2:13509:13590	3297686	6	True				
ANR	3297744	CallExpression	"fprintf ( stream , ""  464                      Disassemble the 464 instructions\\n"" )"		3297686	0					
ANR	3297745	Callee	fprintf		3297686	0					
ANR	3297746	Identifier	fprintf		3297686	0					
ANR	3297747	ArgumentList	stream		3297686	1					
ANR	3297748	Argument	stream		3297686	0					
ANR	3297749	Identifier	stream		3297686	0					
ANR	3297750	Argument	"""  464                      Disassemble the 464 instructions\\n"""		3297686	1					
ANR	3297751	PrimaryExpression	"""  464                      Disassemble the 464 instructions\\n"""		3297686	0					
ANR	3297752	ExpressionStatement	"fprintf ( stream , ""  efs                      Disassemble the EFS instructions\\n"" )"	419:2:13594:13675	3297686	7	True				
ANR	3297753	CallExpression	"fprintf ( stream , ""  efs                      Disassemble the EFS instructions\\n"" )"		3297686	0					
ANR	3297754	Callee	fprintf		3297686	0					
ANR	3297755	Identifier	fprintf		3297686	0					
ANR	3297756	ArgumentList	stream		3297686	1					
ANR	3297757	Argument	stream		3297686	0					
ANR	3297758	Identifier	stream		3297686	0					
ANR	3297759	Argument	"""  efs                      Disassemble the EFS instructions\\n"""		3297686	1					
ANR	3297760	PrimaryExpression	"""  efs                      Disassemble the EFS instructions\\n"""		3297686	0					
ANR	3297761	ExpressionStatement	"fprintf ( stream , ""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"" )"	420:2:13679:13779	3297686	8	True				
ANR	3297762	CallExpression	"fprintf ( stream , ""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"" )"		3297686	0					
ANR	3297763	Callee	fprintf		3297686	0					
ANR	3297764	Identifier	fprintf		3297686	0					
ANR	3297765	ArgumentList	stream		3297686	1					
ANR	3297766	Argument	stream		3297686	0					
ANR	3297767	Identifier	stream		3297686	0					
ANR	3297768	Argument	"""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"""		3297686	1					
ANR	3297769	PrimaryExpression	"""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"""		3297686	0					
ANR	3297770	ExpressionStatement	"fprintf ( stream , ""  power4                   Disassemble the Power4 instructions\\n"" )"	421:2:13783:13867	3297686	9	True				
ANR	3297771	CallExpression	"fprintf ( stream , ""  power4                   Disassemble the Power4 instructions\\n"" )"		3297686	0					
ANR	3297772	Callee	fprintf		3297686	0					
ANR	3297773	Identifier	fprintf		3297686	0					
ANR	3297774	ArgumentList	stream		3297686	1					
ANR	3297775	Argument	stream		3297686	0					
ANR	3297776	Identifier	stream		3297686	0					
ANR	3297777	Argument	"""  power4                   Disassemble the Power4 instructions\\n"""		3297686	1					
ANR	3297778	PrimaryExpression	"""  power4                   Disassemble the Power4 instructions\\n"""		3297686	0					
ANR	3297779	ExpressionStatement	"fprintf ( stream , ""  power5                   Disassemble the Power5 instructions\\n"" )"	422:2:13871:13955	3297686	10	True				
ANR	3297780	CallExpression	"fprintf ( stream , ""  power5                   Disassemble the Power5 instructions\\n"" )"		3297686	0					
ANR	3297781	Callee	fprintf		3297686	0					
ANR	3297782	Identifier	fprintf		3297686	0					
ANR	3297783	ArgumentList	stream		3297686	1					
ANR	3297784	Argument	stream		3297686	0					
ANR	3297785	Identifier	stream		3297686	0					
ANR	3297786	Argument	"""  power5                   Disassemble the Power5 instructions\\n"""		3297686	1					
ANR	3297787	PrimaryExpression	"""  power5                   Disassemble the Power5 instructions\\n"""		3297686	0					
ANR	3297788	ExpressionStatement	"fprintf ( stream , ""  power6                   Disassemble the Power6 instructions\\n"" )"	423:2:13959:14043	3297686	11	True				
ANR	3297789	CallExpression	"fprintf ( stream , ""  power6                   Disassemble the Power6 instructions\\n"" )"		3297686	0					
ANR	3297790	Callee	fprintf		3297686	0					
ANR	3297791	Identifier	fprintf		3297686	0					
ANR	3297792	ArgumentList	stream		3297686	1					
ANR	3297793	Argument	stream		3297686	0					
ANR	3297794	Identifier	stream		3297686	0					
ANR	3297795	Argument	"""  power6                   Disassemble the Power6 instructions\\n"""		3297686	1					
ANR	3297796	PrimaryExpression	"""  power6                   Disassemble the Power6 instructions\\n"""		3297686	0					
ANR	3297797	ExpressionStatement	"fprintf ( stream , ""  power7                   Disassemble the Power7 instructions\\n"" )"	424:2:14047:14131	3297686	12	True				
ANR	3297798	CallExpression	"fprintf ( stream , ""  power7                   Disassemble the Power7 instructions\\n"" )"		3297686	0					
ANR	3297799	Callee	fprintf		3297686	0					
ANR	3297800	Identifier	fprintf		3297686	0					
ANR	3297801	ArgumentList	stream		3297686	1					
ANR	3297802	Argument	stream		3297686	0					
ANR	3297803	Identifier	stream		3297686	0					
ANR	3297804	Argument	"""  power7                   Disassemble the Power7 instructions\\n"""		3297686	1					
ANR	3297805	PrimaryExpression	"""  power7                   Disassemble the Power7 instructions\\n"""		3297686	0					
ANR	3297806	ExpressionStatement	"fprintf ( stream , ""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"" )"	425:2:14135:14232	3297686	13	True				
ANR	3297807	CallExpression	"fprintf ( stream , ""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"" )"		3297686	0					
ANR	3297808	Callee	fprintf		3297686	0					
ANR	3297809	Identifier	fprintf		3297686	0					
ANR	3297810	ArgumentList	stream		3297686	1					
ANR	3297811	Argument	stream		3297686	0					
ANR	3297812	Identifier	stream		3297686	0					
ANR	3297813	Argument	"""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"""		3297686	1					
ANR	3297814	PrimaryExpression	"""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"""		3297686	0					
ANR	3297815	ExpressionStatement	"fprintf ( stream , ""  32                       Do not disassemble 64-bit instructions\\n"" )"	426:2:14236:14323	3297686	14	True				
ANR	3297816	CallExpression	"fprintf ( stream , ""  32                       Do not disassemble 64-bit instructions\\n"" )"		3297686	0					
ANR	3297817	Callee	fprintf		3297686	0					
ANR	3297818	Identifier	fprintf		3297686	0					
ANR	3297819	ArgumentList	stream		3297686	1					
ANR	3297820	Argument	stream		3297686	0					
ANR	3297821	Identifier	stream		3297686	0					
ANR	3297822	Argument	"""  32                       Do not disassemble 64-bit instructions\\n"""		3297686	1					
ANR	3297823	PrimaryExpression	"""  32                       Do not disassemble 64-bit instructions\\n"""		3297686	0					
ANR	3297824	ExpressionStatement	"fprintf ( stream , ""  64                       Allow disassembly of 64-bit instructions\\n"" )"	427:2:14327:14416	3297686	15	True				
ANR	3297825	CallExpression	"fprintf ( stream , ""  64                       Allow disassembly of 64-bit instructions\\n"" )"		3297686	0					
ANR	3297826	Callee	fprintf		3297686	0					
ANR	3297827	Identifier	fprintf		3297686	0					
ANR	3297828	ArgumentList	stream		3297686	1					
ANR	3297829	Argument	stream		3297686	0					
ANR	3297830	Identifier	stream		3297686	0					
ANR	3297831	Argument	"""  64                       Allow disassembly of 64-bit instructions\\n"""		3297686	1					
ANR	3297832	PrimaryExpression	"""  64                       Allow disassembly of 64-bit instructions\\n"""		3297686	0					
ANR	3297833	ReturnType	void		3297686	1					
ANR	3297834	Identifier	print_ppc_disassembler_options		3297686	2					
ANR	3297835	ParameterList	FILE * stream		3297686	3					
ANR	3297836	Parameter	FILE * stream	407:32:12936:12947	3297686	0	True				
ANR	3297837	ParameterType	FILE *		3297686	0					
ANR	3297838	Identifier	stream		3297686	1					
ANR	3297839	CFGEntryNode	ENTRY		3297686		True				
ANR	3297840	CFGExitNode	EXIT		3297686		True				
ANR	3297841	Symbol	stream		3297686						
