command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5583473	File	data/converged/CVE-2019-16718~_radare2/pj.c								
ANR	5583474	Function	pj_raw	6:0:102:225							
ANR	5583475	FunctionDef	"pj_raw (PJ * j , const char * msg)"		5583474	0					
ANR	5583476	CompoundStatement		6:43:145:225	5583474	0					
ANR	5583477	ExpressionStatement	r_return_if_fail ( j && msg )	7:1:148:175	5583474	0	True				
ANR	5583478	CallExpression	r_return_if_fail ( j && msg )		5583474	0					
ANR	5583479	Callee	r_return_if_fail		5583474	0					
ANR	5583480	Identifier	r_return_if_fail		5583474	0					
ANR	5583481	ArgumentList	j && msg		5583474	1					
ANR	5583482	Argument	j && msg		5583474	0					
ANR	5583483	AndExpression	j && msg		5583474	0		&&			
ANR	5583484	Identifier	j		5583474	0					
ANR	5583485	Identifier	msg		5583474	1					
ANR	5583486	IfStatement	if ( * msg )		5583474	1					
ANR	5583487	Condition	* msg	8:5:182:185	5583474	0	True				
ANR	5583488	UnaryOperationExpression	* msg		5583474	0					
ANR	5583489	UnaryOperator	*		5583474	0					
ANR	5583490	Identifier	msg		5583474	1					
ANR	5583491	CompoundStatement		3:11:42:42	5583474	1					
ANR	5583492	ExpressionStatement	"r_strbuf_append ( j -> sb , msg )"	9:2:192:220	5583474	0	True				
ANR	5583493	CallExpression	"r_strbuf_append ( j -> sb , msg )"		5583474	0					
ANR	5583494	Callee	r_strbuf_append		5583474	0					
ANR	5583495	Identifier	r_strbuf_append		5583474	0					
ANR	5583496	ArgumentList	j -> sb		5583474	1					
ANR	5583497	Argument	j -> sb		5583474	0					
ANR	5583498	PtrMemberAccess	j -> sb		5583474	0					
ANR	5583499	Identifier	j		5583474	0					
ANR	5583500	Identifier	sb		5583474	1					
ANR	5583501	Argument	msg		5583474	1					
ANR	5583502	Identifier	msg		5583474	0					
ANR	5583503	ReturnType	static void		5583474	1					
ANR	5583504	Identifier	pj_raw		5583474	2					
ANR	5583505	ParameterList	"PJ * j , const char * msg"		5583474	3					
ANR	5583506	Parameter	PJ * j	6:19:121:125	5583474	0	True				
ANR	5583507	ParameterType	PJ *		5583474	0					
ANR	5583508	Identifier	j		5583474	1					
ANR	5583509	Parameter	const char * msg	6:26:128:142	5583474	1	True				
ANR	5583510	ParameterType	const char *		5583474	0					
ANR	5583511	Identifier	msg		5583474	1					
ANR	5583512	CFGEntryNode	ENTRY		5583474		True				
ANR	5583513	CFGExitNode	EXIT		5583474		True				
ANR	5583514	Symbol	msg		5583474						
ANR	5583515	Symbol	* j		5583474						
ANR	5583516	Symbol	j		5583474						
ANR	5583517	Symbol	* msg		5583474						
ANR	5583518	Symbol	j -> sb		5583474						
ANR	5583519	Function	pj_comma	13:0:228:391							
ANR	5583520	FunctionDef	pj_comma (PJ * j)		5583519	0					
ANR	5583521	CompoundStatement		13:28:256:391	5583519	0					
ANR	5583522	ExpressionStatement	r_return_if_fail ( j )	14:1:259:279	5583519	0	True				
ANR	5583523	CallExpression	r_return_if_fail ( j )		5583519	0					
ANR	5583524	Callee	r_return_if_fail		5583519	0					
ANR	5583525	Identifier	r_return_if_fail		5583519	0					
ANR	5583526	ArgumentList	j		5583519	1					
ANR	5583527	Argument	j		5583519	0					
ANR	5583528	Identifier	j		5583519	0					
ANR	5583529	IfStatement	if ( ! j -> is_key )		5583519	1					
ANR	5583530	Condition	! j -> is_key	15:5:286:295	5583519	0	True				
ANR	5583531	UnaryOperationExpression	! j -> is_key		5583519	0					
ANR	5583532	UnaryOperator	!		5583519	0					
ANR	5583533	PtrMemberAccess	j -> is_key		5583519	1					
ANR	5583534	Identifier	j		5583519	0					
ANR	5583535	Identifier	is_key		5583519	1					
ANR	5583536	CompoundStatement		3:17:41:41	5583519	1					
ANR	5583537	IfStatement	if ( ! j -> is_first )		5583519	0					
ANR	5583538	Condition	! j -> is_first	16:6:306:317	5583519	0	True				
ANR	5583539	UnaryOperationExpression	! j -> is_first		5583519	0					
ANR	5583540	UnaryOperator	!		5583519	0					
ANR	5583541	PtrMemberAccess	j -> is_first		5583519	1					
ANR	5583542	Identifier	j		5583519	0					
ANR	5583543	Identifier	is_first		5583519	1					
ANR	5583544	CompoundStatement		4:20:63:63	5583519	1					
ANR	5583545	ExpressionStatement	"pj_raw ( j , "","" )"	17:3:325:340	5583519	0	True				
ANR	5583546	CallExpression	"pj_raw ( j , "","" )"		5583519	0					
ANR	5583547	Callee	pj_raw		5583519	0					
ANR	5583548	Identifier	pj_raw		5583519	0					
ANR	5583549	ArgumentList	j		5583519	1					
ANR	5583550	Argument	j		5583519	0					
ANR	5583551	Identifier	j		5583519	0					
ANR	5583552	Argument	""","""		5583519	1					
ANR	5583553	PrimaryExpression	""","""		5583519	0					
ANR	5583554	ExpressionStatement	j -> is_first = false	20:1:350:369	5583519	2	True				
ANR	5583555	AssignmentExpression	j -> is_first = false		5583519	0		=			
ANR	5583556	PtrMemberAccess	j -> is_first		5583519	0					
ANR	5583557	Identifier	j		5583519	0					
ANR	5583558	Identifier	is_first		5583519	1					
ANR	5583559	Identifier	false		5583519	1					
ANR	5583560	ExpressionStatement	j -> is_key = false	21:1:372:389	5583519	3	True				
ANR	5583561	AssignmentExpression	j -> is_key = false		5583519	0		=			
ANR	5583562	PtrMemberAccess	j -> is_key		5583519	0					
ANR	5583563	Identifier	j		5583519	0					
ANR	5583564	Identifier	is_key		5583519	1					
ANR	5583565	Identifier	false		5583519	1					
ANR	5583566	ReturnType	static void		5583519	1					
ANR	5583567	Identifier	pj_comma		5583519	2					
ANR	5583568	ParameterList	PJ * j		5583519	3					
ANR	5583569	Parameter	PJ * j	13:21:249:253	5583519	0	True				
ANR	5583570	ParameterType	PJ *		5583519	0					
ANR	5583571	Identifier	j		5583519	1					
ANR	5583572	CFGEntryNode	ENTRY		5583519		True				
ANR	5583573	CFGExitNode	EXIT		5583519		True				
ANR	5583574	Symbol	* j		5583519						
ANR	5583575	Symbol	j -> is_key		5583519						
ANR	5583576	Symbol	j -> is_first		5583519						
ANR	5583577	Symbol	false		5583519						
ANR	5583578	Symbol	j		5583519						
ANR	5583579	Function	pj_new	24:0:394:512							
ANR	5583580	FunctionDef	pj_new ()		5583579	0					
ANR	5583581	CompoundStatement		24:19:413:512	5583579	0					
ANR	5583582	IdentifierDeclStatement	PJ * j = R_NEW0 ( PJ ) ;	25:1:416:435	5583579	0	True				
ANR	5583583	IdentifierDecl	* j = R_NEW0 ( PJ )		5583579	0					
ANR	5583584	IdentifierDeclType	PJ *		5583579	0					
ANR	5583585	Identifier	j		5583579	1					
ANR	5583586	AssignmentExpression	* j = R_NEW0 ( PJ )		5583579	2		=			
ANR	5583587	Identifier	j		5583579	0					
ANR	5583588	CallExpression	R_NEW0 ( PJ )		5583579	1					
ANR	5583589	Callee	R_NEW0		5583579	0					
ANR	5583590	Identifier	R_NEW0		5583579	0					
ANR	5583591	ArgumentList	PJ		5583579	1					
ANR	5583592	Argument	PJ		5583579	0					
ANR	5583593	Identifier	PJ		5583579	0					
ANR	5583594	IfStatement	if ( j )		5583579	1					
ANR	5583595	Condition	j	26:5:442:442	5583579	0	True				
ANR	5583596	Identifier	j		5583579	0					
ANR	5583597	CompoundStatement		3:8:31:31	5583579	1					
ANR	5583598	ExpressionStatement	"j -> sb = r_strbuf_new ( """" )"	27:2:449:474	5583579	0	True				
ANR	5583599	AssignmentExpression	"j -> sb = r_strbuf_new ( """" )"		5583579	0		=			
ANR	5583600	PtrMemberAccess	j -> sb		5583579	0					
ANR	5583601	Identifier	j		5583579	0					
ANR	5583602	Identifier	sb		5583579	1					
ANR	5583603	CallExpression	"r_strbuf_new ( """" )"		5583579	1					
ANR	5583604	Callee	r_strbuf_new		5583579	0					
ANR	5583605	Identifier	r_strbuf_new		5583579	0					
ANR	5583606	ArgumentList	""""""		5583579	1					
ANR	5583607	Argument	""""""		5583579	0					
ANR	5583608	PrimaryExpression	""""""		5583579	0					
ANR	5583609	ExpressionStatement	j -> is_first = true	28:2:478:496	5583579	1	True				
ANR	5583610	AssignmentExpression	j -> is_first = true		5583579	0		=			
ANR	5583611	PtrMemberAccess	j -> is_first		5583579	0					
ANR	5583612	Identifier	j		5583579	0					
ANR	5583613	Identifier	is_first		5583579	1					
ANR	5583614	Identifier	true		5583579	1					
ANR	5583615	ReturnStatement	return j ;	30:1:502:510	5583579	2	True				
ANR	5583616	Identifier	j		5583579	0					
ANR	5583617	ReturnType	R_API PJ *		5583579	1					
ANR	5583618	Identifier	pj_new		5583579	2					
ANR	5583619	ParameterList			5583579	3					
ANR	5583620	CFGEntryNode	ENTRY		5583579		True				
ANR	5583621	CFGExitNode	EXIT		5583579		True				
ANR	5583622	Symbol	R_NEW0		5583579						
ANR	5583623	Symbol	r_strbuf_new		5583579						
ANR	5583624	Symbol	* j		5583579						
ANR	5583625	Symbol	j -> is_first		5583579						
ANR	5583626	Symbol	true		5583579						
ANR	5583627	Symbol	PJ		5583579						
ANR	5583628	Symbol	j		5583579						
ANR	5583629	Symbol	j -> sb		5583579						
ANR	5583630	Function	pj_free	33:0:515:597							
ANR	5583631	FunctionDef	pj_free (PJ * pj)		5583630	0					
ANR	5583632	CompoundStatement		33:27:542:597	5583630	0					
ANR	5583633	IfStatement	if ( pj )		5583630	0					
ANR	5583634	Condition	pj	34:5:549:550	5583630	0	True				
ANR	5583635	Identifier	pj		5583630	0					
ANR	5583636	CompoundStatement		2:9:10:10	5583630	1					
ANR	5583637	ExpressionStatement	r_strbuf_free ( pj -> sb )	35:2:557:579	5583630	0	True				
ANR	5583638	CallExpression	r_strbuf_free ( pj -> sb )		5583630	0					
ANR	5583639	Callee	r_strbuf_free		5583630	0					
ANR	5583640	Identifier	r_strbuf_free		5583630	0					
ANR	5583641	ArgumentList	pj -> sb		5583630	1					
ANR	5583642	Argument	pj -> sb		5583630	0					
ANR	5583643	PtrMemberAccess	pj -> sb		5583630	0					
ANR	5583644	Identifier	pj		5583630	0					
ANR	5583645	Identifier	sb		5583630	1					
ANR	5583646	ExpressionStatement	free ( pj )	36:2:583:592	5583630	1	True				
ANR	5583647	CallExpression	free ( pj )		5583630	0					
ANR	5583648	Callee	free		5583630	0					
ANR	5583649	Identifier	free		5583630	0					
ANR	5583650	ArgumentList	pj		5583630	1					
ANR	5583651	Argument	pj		5583630	0					
ANR	5583652	Identifier	pj		5583630	0					
ANR	5583653	ReturnType	R_API void		5583630	1					
ANR	5583654	Identifier	pj_free		5583630	2					
ANR	5583655	ParameterList	PJ * pj		5583630	3					
ANR	5583656	Parameter	PJ * pj	33:19:534:539	5583630	0	True				
ANR	5583657	ParameterType	PJ *		5583630	0					
ANR	5583658	Identifier	pj		5583630	1					
ANR	5583659	CFGEntryNode	ENTRY		5583630		True				
ANR	5583660	CFGExitNode	EXIT		5583630		True				
ANR	5583661	Symbol	pj -> sb		5583630						
ANR	5583662	Symbol	* pj		5583630						
ANR	5583663	Symbol	pj		5583630						
ANR	5583664	Function	pj_drain	40:0:600:762							
ANR	5583665	FunctionDef	pj_drain (PJ * pj)		5583664	0					
ANR	5583666	CompoundStatement		40:29:629:762	5583664	0					
ANR	5583667	ExpressionStatement	"r_return_val_if_fail ( pj && pj -> level == 0 , NULL )"	41:1:632:681	5583664	0	True				
ANR	5583668	CallExpression	"r_return_val_if_fail ( pj && pj -> level == 0 , NULL )"		5583664	0					
ANR	5583669	Callee	r_return_val_if_fail		5583664	0					
ANR	5583670	Identifier	r_return_val_if_fail		5583664	0					
ANR	5583671	ArgumentList	pj && pj -> level == 0		5583664	1					
ANR	5583672	Argument	pj && pj -> level == 0		5583664	0					
ANR	5583673	AndExpression	pj && pj -> level == 0		5583664	0		&&			
ANR	5583674	Identifier	pj		5583664	0					
ANR	5583675	EqualityExpression	pj -> level == 0		5583664	1		==			
ANR	5583676	PtrMemberAccess	pj -> level		5583664	0					
ANR	5583677	Identifier	pj		5583664	0					
ANR	5583678	Identifier	level		5583664	1					
ANR	5583679	PrimaryExpression	0		5583664	1					
ANR	5583680	Argument	NULL		5583664	1					
ANR	5583681	Identifier	NULL		5583664	0					
ANR	5583682	IdentifierDeclStatement	char * res = r_strbuf_drain ( pj -> sb ) ;	42:1:684:719	5583664	1	True				
ANR	5583683	IdentifierDecl	* res = r_strbuf_drain ( pj -> sb )		5583664	0					
ANR	5583684	IdentifierDeclType	char *		5583664	0					
ANR	5583685	Identifier	res		5583664	1					
ANR	5583686	AssignmentExpression	* res = r_strbuf_drain ( pj -> sb )		5583664	2		=			
ANR	5583687	Identifier	res		5583664	0					
ANR	5583688	CallExpression	r_strbuf_drain ( pj -> sb )		5583664	1					
ANR	5583689	Callee	r_strbuf_drain		5583664	0					
ANR	5583690	Identifier	r_strbuf_drain		5583664	0					
ANR	5583691	ArgumentList	pj -> sb		5583664	1					
ANR	5583692	Argument	pj -> sb		5583664	0					
ANR	5583693	PtrMemberAccess	pj -> sb		5583664	0					
ANR	5583694	Identifier	pj		5583664	0					
ANR	5583695	Identifier	sb		5583664	1					
ANR	5583696	ExpressionStatement	pj -> sb = NULL	43:1:722:735	5583664	2	True				
ANR	5583697	AssignmentExpression	pj -> sb = NULL		5583664	0		=			
ANR	5583698	PtrMemberAccess	pj -> sb		5583664	0					
ANR	5583699	Identifier	pj		5583664	0					
ANR	5583700	Identifier	sb		5583664	1					
ANR	5583701	Identifier	NULL		5583664	1					
ANR	5583702	ExpressionStatement	free ( pj )	44:1:738:747	5583664	3	True				
ANR	5583703	CallExpression	free ( pj )		5583664	0					
ANR	5583704	Callee	free		5583664	0					
ANR	5583705	Identifier	free		5583664	0					
ANR	5583706	ArgumentList	pj		5583664	1					
ANR	5583707	Argument	pj		5583664	0					
ANR	5583708	Identifier	pj		5583664	0					
ANR	5583709	ReturnStatement	return res ;	45:1:750:760	5583664	4	True				
ANR	5583710	Identifier	res		5583664	0					
ANR	5583711	ReturnType	R_API char *		5583664	1					
ANR	5583712	Identifier	pj_drain		5583664	2					
ANR	5583713	ParameterList	PJ * pj		5583664	3					
ANR	5583714	Parameter	PJ * pj	40:21:621:626	5583664	0	True				
ANR	5583715	ParameterType	PJ *		5583664	0					
ANR	5583716	Identifier	pj		5583664	1					
ANR	5583717	CFGEntryNode	ENTRY		5583664		True				
ANR	5583718	CFGExitNode	EXIT		5583664		True				
ANR	5583719	Symbol	res		5583664						
ANR	5583720	Symbol	pj -> sb		5583664						
ANR	5583721	Symbol	* pj		5583664						
ANR	5583722	Symbol	pj -> level		5583664						
ANR	5583723	Symbol	NULL		5583664						
ANR	5583724	Symbol	r_strbuf_drain		5583664						
ANR	5583725	Symbol	pj		5583664						
ANR	5583726	Function	pj_string	48:6:771:841							
ANR	5583727	FunctionDef	pj_string (PJ * j)		5583726	0					
ANR	5583728	CompoundStatement		48:35:800:841	5583726	0					
ANR	5583729	ReturnStatement	return j ? r_strbuf_get ( j -> sb ) : NULL ;	49:1:803:839	5583726	0	True				
ANR	5583730	ConditionalExpression	j ? r_strbuf_get ( j -> sb ) : NULL		5583726	0					
ANR	5583731	Condition	j		5583726	0					
ANR	5583732	Identifier	j		5583726	0					
ANR	5583733	CallExpression	r_strbuf_get ( j -> sb )		5583726	1					
ANR	5583734	Callee	r_strbuf_get		5583726	0					
ANR	5583735	Identifier	r_strbuf_get		5583726	0					
ANR	5583736	ArgumentList	j -> sb		5583726	1					
ANR	5583737	Argument	j -> sb		5583726	0					
ANR	5583738	PtrMemberAccess	j -> sb		5583726	0					
ANR	5583739	Identifier	j		5583726	0					
ANR	5583740	Identifier	sb		5583726	1					
ANR	5583741	Identifier	NULL		5583726	2					
ANR	5583742	ReturnType	const char *		5583726	1					
ANR	5583743	Identifier	pj_string		5583726	2					
ANR	5583744	ParameterList	PJ * j		5583726	3					
ANR	5583745	Parameter	PJ * j	48:28:793:797	5583726	0	True				
ANR	5583746	ParameterType	PJ *		5583726	0					
ANR	5583747	Identifier	j		5583726	1					
ANR	5583748	CFGEntryNode	ENTRY		5583726		True				
ANR	5583749	CFGExitNode	EXIT		5583726		True				
ANR	5583750	Symbol	NULL		5583726						
ANR	5583751	Symbol	* j		5583726						
ANR	5583752	Symbol	r_strbuf_get		5583726						
ANR	5583753	Symbol	j		5583726						
ANR	5583754	Symbol	j -> sb		5583726						
ANR	5583755	Function	pj_begin	52:0:844:1115							
ANR	5583756	FunctionDef	"pj_begin (PJ * j , char type)"		5583755	0					
ANR	5583757	CompoundStatement		52:38:882:1115	5583755	0					
ANR	5583758	IfStatement	if ( j )		5583755	0					
ANR	5583759	Condition	j	53:5:889:889	5583755	0	True				
ANR	5583760	Identifier	j		5583755	0					
ANR	5583761	CompoundStatement		6:2:85:110	5583755	1					
ANR	5583762	IfStatement	if ( ! j || j -> level >= R_PRINT_JSON_DEPTH_LIMIT )		5583755	0					
ANR	5583763	Condition	! j || j -> level >= R_PRINT_JSON_DEPTH_LIMIT	54:6:900:941	5583755	0	True				
ANR	5583764	OrExpression	! j || j -> level >= R_PRINT_JSON_DEPTH_LIMIT		5583755	0		||			
ANR	5583765	UnaryOperationExpression	! j		5583755	0					
ANR	5583766	UnaryOperator	!		5583755	0					
ANR	5583767	Identifier	j		5583755	1					
ANR	5583768	RelationalExpression	j -> level >= R_PRINT_JSON_DEPTH_LIMIT		5583755	1		>=			
ANR	5583769	PtrMemberAccess	j -> level		5583755	0					
ANR	5583770	Identifier	j		5583755	0					
ANR	5583771	Identifier	level		5583755	1					
ANR	5583772	Identifier	R_PRINT_JSON_DEPTH_LIMIT		5583755	1					
ANR	5583773	CompoundStatement		3:50:61:61	5583755	1					
ANR	5583774	ReturnStatement	return NULL ;	55:3:949:960	5583755	0	True				
ANR	5583775	Identifier	NULL		5583755	0					
ANR	5583776	IdentifierDeclStatement	"char msg [ 2 ] = { type , 0 } ;"	57:2:968:993	5583755	1	True				
ANR	5583777	IdentifierDecl	"msg [ 2 ] = { type , 0 }"		5583755	0					
ANR	5583778	IdentifierDeclType	char [ 2 ]		5583755	0					
ANR	5583779	Identifier	msg		5583755	1					
ANR	5583780	PrimaryExpression	2		5583755	2					
ANR	5583781	AssignmentExpression	"msg [ 2 ] = { type , 0 }"		5583755	3		=			
ANR	5583782	Identifier	msg		5583755	0					
ANR	5583783	InitializerList	type		5583755	1					
ANR	5583784	Identifier	type		5583755	0					
ANR	5583785	PrimaryExpression	0		5583755	1					
ANR	5583786	ExpressionStatement	"pj_raw ( j , msg )"	58:2:997:1012	5583755	2	True				
ANR	5583787	CallExpression	"pj_raw ( j , msg )"		5583755	0					
ANR	5583788	Callee	pj_raw		5583755	0					
ANR	5583789	Identifier	pj_raw		5583755	0					
ANR	5583790	ArgumentList	j		5583755	1					
ANR	5583791	Argument	j		5583755	0					
ANR	5583792	Identifier	j		5583755	0					
ANR	5583793	Argument	msg		5583755	1					
ANR	5583794	Identifier	msg		5583755	0					
ANR	5583795	ExpressionStatement	j -> braces [ j -> level ] = ( type == '{' ) ? '}' : ']'	59:2:1016:1063	5583755	3	True				
ANR	5583796	AssignmentExpression	j -> braces [ j -> level ] = ( type == '{' ) ? '}' : ']'		5583755	0		=			
ANR	5583797	ArrayIndexing	j -> braces [ j -> level ]		5583755	0					
ANR	5583798	PtrMemberAccess	j -> braces		5583755	0					
ANR	5583799	Identifier	j		5583755	0					
ANR	5583800	Identifier	braces		5583755	1					
ANR	5583801	PtrMemberAccess	j -> level		5583755	1					
ANR	5583802	Identifier	j		5583755	0					
ANR	5583803	Identifier	level		5583755	1					
ANR	5583804	ConditionalExpression	( type == '{' ) ? '}' : ']'		5583755	1					
ANR	5583805	Condition	type == '{'		5583755	0					
ANR	5583806	EqualityExpression	type == '{'		5583755	0		==			
ANR	5583807	Identifier	type		5583755	0					
ANR	5583808	PrimaryExpression	'{'		5583755	1					
ANR	5583809	PrimaryExpression	'}'		5583755	1					
ANR	5583810	PrimaryExpression	']'		5583755	2					
ANR	5583811	ExpressionStatement	j -> level ++	60:2:1067:1077	5583755	4	True				
ANR	5583812	PostIncDecOperationExpression	j -> level ++		5583755	0					
ANR	5583813	PtrMemberAccess	j -> level		5583755	0					
ANR	5583814	Identifier	j		5583755	0					
ANR	5583815	Identifier	level		5583755	1					
ANR	5583816	IncDec	++		5583755	1					
ANR	5583817	ExpressionStatement	j -> is_first = true	61:2:1081:1099	5583755	5	True				
ANR	5583818	AssignmentExpression	j -> is_first = true		5583755	0		=			
ANR	5583819	PtrMemberAccess	j -> is_first		5583755	0					
ANR	5583820	Identifier	j		5583755	0					
ANR	5583821	Identifier	is_first		5583755	1					
ANR	5583822	Identifier	true		5583755	1					
ANR	5583823	ReturnStatement	return j ;	63:1:1105:1113	5583755	1	True				
ANR	5583824	Identifier	j		5583755	0					
ANR	5583825	ReturnType	static PJ *		5583755	1					
ANR	5583826	Identifier	pj_begin		5583755	2					
ANR	5583827	ParameterList	"PJ * j , char type"		5583755	3					
ANR	5583828	Parameter	PJ * j	52:20:864:868	5583755	0	True				
ANR	5583829	ParameterType	PJ *		5583755	0					
ANR	5583830	Identifier	j		5583755	1					
ANR	5583831	Parameter	char type	52:27:871:879	5583755	1	True				
ANR	5583832	ParameterType	char		5583755	0					
ANR	5583833	Identifier	type		5583755	1					
ANR	5583834	CFGEntryNode	ENTRY		5583755		True				
ANR	5583835	CFGExitNode	EXIT		5583755		True				
ANR	5583836	Symbol	msg		5583755						
ANR	5583837	Symbol	j -> level		5583755						
ANR	5583838	Symbol	* * j		5583755						
ANR	5583839	Symbol	NULL		5583755						
ANR	5583840	Symbol	* j -> level		5583755						
ANR	5583841	Symbol	j -> is_first		5583755						
ANR	5583842	Symbol	j		5583755						
ANR	5583843	Symbol	type		5583755						
ANR	5583844	Symbol	* j		5583755						
ANR	5583845	Symbol	true		5583755						
ANR	5583846	Symbol	R_PRINT_JSON_DEPTH_LIMIT		5583755						
ANR	5583847	Symbol	* j -> braces		5583755						
ANR	5583848	Symbol	j -> braces		5583755						
ANR	5583849	Function	pj_o	66:0:1118:1214							
ANR	5583850	FunctionDef	pj_o (PJ * j)		5583849	0					
ANR	5583851	CompoundStatement		66:22:1140:1214	5583849	0					
ANR	5583852	ExpressionStatement	"r_return_val_if_fail ( j , j )"	67:1:1143:1170	5583849	0	True				
ANR	5583853	CallExpression	"r_return_val_if_fail ( j , j )"		5583849	0					
ANR	5583854	Callee	r_return_val_if_fail		5583849	0					
ANR	5583855	Identifier	r_return_val_if_fail		5583849	0					
ANR	5583856	ArgumentList	j		5583849	1					
ANR	5583857	Argument	j		5583849	0					
ANR	5583858	Identifier	j		5583849	0					
ANR	5583859	Argument	j		5583849	1					
ANR	5583860	Identifier	j		5583849	0					
ANR	5583861	ExpressionStatement	pj_comma ( j )	68:1:1173:1185	5583849	1	True				
ANR	5583862	CallExpression	pj_comma ( j )		5583849	0					
ANR	5583863	Callee	pj_comma		5583849	0					
ANR	5583864	Identifier	pj_comma		5583849	0					
ANR	5583865	ArgumentList	j		5583849	1					
ANR	5583866	Argument	j		5583849	0					
ANR	5583867	Identifier	j		5583849	0					
ANR	5583868	ReturnStatement	"return pj_begin ( j , '{' ) ;"	69:1:1188:1212	5583849	2	True				
ANR	5583869	CallExpression	"pj_begin ( j , '{' )"		5583849	0					
ANR	5583870	Callee	pj_begin		5583849	0					
ANR	5583871	Identifier	pj_begin		5583849	0					
ANR	5583872	ArgumentList	j		5583849	1					
ANR	5583873	Argument	j		5583849	0					
ANR	5583874	Identifier	j		5583849	0					
ANR	5583875	Argument	'{'		5583849	1					
ANR	5583876	PrimaryExpression	'{'		5583849	0					
ANR	5583877	ReturnType	R_API PJ *		5583849	1					
ANR	5583878	Identifier	pj_o		5583849	2					
ANR	5583879	ParameterList	PJ * j		5583849	3					
ANR	5583880	Parameter	PJ * j	66:15:1133:1137	5583849	0	True				
ANR	5583881	ParameterType	PJ *		5583849	0					
ANR	5583882	Identifier	j		5583849	1					
ANR	5583883	CFGEntryNode	ENTRY		5583849		True				
ANR	5583884	CFGExitNode	EXIT		5583849		True				
ANR	5583885	Symbol	j		5583849						
ANR	5583886	Symbol	pj_begin		5583849						
ANR	5583887	Function	pj_a	72:0:1217:1313							
ANR	5583888	FunctionDef	pj_a (PJ * j)		5583887	0					
ANR	5583889	CompoundStatement		72:22:1239:1313	5583887	0					
ANR	5583890	ExpressionStatement	"r_return_val_if_fail ( j , j )"	73:1:1242:1269	5583887	0	True				
ANR	5583891	CallExpression	"r_return_val_if_fail ( j , j )"		5583887	0					
ANR	5583892	Callee	r_return_val_if_fail		5583887	0					
ANR	5583893	Identifier	r_return_val_if_fail		5583887	0					
ANR	5583894	ArgumentList	j		5583887	1					
ANR	5583895	Argument	j		5583887	0					
ANR	5583896	Identifier	j		5583887	0					
ANR	5583897	Argument	j		5583887	1					
ANR	5583898	Identifier	j		5583887	0					
ANR	5583899	ExpressionStatement	pj_comma ( j )	74:1:1272:1284	5583887	1	True				
ANR	5583900	CallExpression	pj_comma ( j )		5583887	0					
ANR	5583901	Callee	pj_comma		5583887	0					
ANR	5583902	Identifier	pj_comma		5583887	0					
ANR	5583903	ArgumentList	j		5583887	1					
ANR	5583904	Argument	j		5583887	0					
ANR	5583905	Identifier	j		5583887	0					
ANR	5583906	ReturnStatement	"return pj_begin ( j , '[' ) ;"	75:1:1287:1311	5583887	2	True				
ANR	5583907	CallExpression	"pj_begin ( j , '[' )"		5583887	0					
ANR	5583908	Callee	pj_begin		5583887	0					
ANR	5583909	Identifier	pj_begin		5583887	0					
ANR	5583910	ArgumentList	j		5583887	1					
ANR	5583911	Argument	j		5583887	0					
ANR	5583912	Identifier	j		5583887	0					
ANR	5583913	Argument	'['		5583887	1					
ANR	5583914	PrimaryExpression	'['		5583887	0					
ANR	5583915	ReturnType	R_API PJ *		5583887	1					
ANR	5583916	Identifier	pj_a		5583887	2					
ANR	5583917	ParameterList	PJ * j		5583887	3					
ANR	5583918	Parameter	PJ * j	72:15:1232:1236	5583887	0	True				
ANR	5583919	ParameterType	PJ *		5583887	0					
ANR	5583920	Identifier	j		5583887	1					
ANR	5583921	CFGEntryNode	ENTRY		5583887		True				
ANR	5583922	CFGExitNode	EXIT		5583887		True				
ANR	5583923	Symbol	j		5583887						
ANR	5583924	Symbol	pj_begin		5583887						
ANR	5583925	Function	pj_end	78:0:1316:1619							
ANR	5583926	FunctionDef	pj_end (PJ * j)		5583925	0					
ANR	5583927	CompoundStatement		78:24:1340:1619	5583925	0					
ANR	5583928	ExpressionStatement	"r_return_val_if_fail ( j , j )"	79:1:1343:1370	5583925	0	True				
ANR	5583929	CallExpression	"r_return_val_if_fail ( j , j )"		5583925	0					
ANR	5583930	Callee	r_return_val_if_fail		5583925	0					
ANR	5583931	Identifier	r_return_val_if_fail		5583925	0					
ANR	5583932	ArgumentList	j		5583925	1					
ANR	5583933	Argument	j		5583925	0					
ANR	5583934	Identifier	j		5583925	0					
ANR	5583935	Argument	j		5583925	1					
ANR	5583936	Identifier	j		5583925	0					
ANR	5583937	IfStatement	if ( j -> level < 1 )		5583925	1					
ANR	5583938	Condition	j -> level < 1	80:5:1377:1388	5583925	0	True				
ANR	5583939	RelationalExpression	j -> level < 1		5583925	0		<			
ANR	5583940	PtrMemberAccess	j -> level		5583925	0					
ANR	5583941	Identifier	j		5583925	0					
ANR	5583942	Identifier	level		5583925	1					
ANR	5583943	PrimaryExpression	1		5583925	1					
ANR	5583944	CompoundStatement		3:19:50:50	5583925	1					
ANR	5583945	ReturnStatement	return j ;	81:2:1395:1403	5583925	0	True				
ANR	5583946	Identifier	j		5583925	0					
ANR	5583947	IfStatement	if ( -- j -> level < 1 )		5583925	2					
ANR	5583948	Condition	-- j -> level < 1	83:5:1413:1426	5583925	0	True				
ANR	5583949	RelationalExpression	-- j -> level < 1		5583925	0		<			
ANR	5583950	UnaryExpression	-- j -> level		5583925	0					
ANR	5583951	IncDec	--		5583925	0					
ANR	5583952	PtrMemberAccess	j -> level		5583925	1					
ANR	5583953	Identifier	j		5583925	0					
ANR	5583954	Identifier	level		5583925	1					
ANR	5583955	PrimaryExpression	1		5583925	1					
ANR	5583956	CompoundStatement		7:2:92:132	5583925	1					
ANR	5583957	IdentifierDeclStatement	"char msg [ 2 ] = { j -> braces [ j -> level ] , 0 } ;"	84:2:1433:1473	5583925	0	True				
ANR	5583958	IdentifierDecl	"msg [ 2 ] = { j -> braces [ j -> level ] , 0 }"		5583925	0					
ANR	5583959	IdentifierDeclType	char [ 2 ]		5583925	0					
ANR	5583960	Identifier	msg		5583925	1					
ANR	5583961	PrimaryExpression	2		5583925	2					
ANR	5583962	AssignmentExpression	"msg [ 2 ] = { j -> braces [ j -> level ] , 0 }"		5583925	3		=			
ANR	5583963	Identifier	msg		5583925	0					
ANR	5583964	InitializerList	j -> braces [ j -> level ]		5583925	1					
ANR	5583965	ArrayIndexing	j -> braces [ j -> level ]		5583925	0					
ANR	5583966	PtrMemberAccess	j -> braces		5583925	0					
ANR	5583967	Identifier	j		5583925	0					
ANR	5583968	Identifier	braces		5583925	1					
ANR	5583969	PtrMemberAccess	j -> level		5583925	1					
ANR	5583970	Identifier	j		5583925	0					
ANR	5583971	Identifier	level		5583925	1					
ANR	5583972	PrimaryExpression	0		5583925	1					
ANR	5583973	ExpressionStatement	"pj_raw ( j , msg )"	85:2:1477:1492	5583925	1	True				
ANR	5583974	CallExpression	"pj_raw ( j , msg )"		5583925	0					
ANR	5583975	Callee	pj_raw		5583925	0					
ANR	5583976	Identifier	pj_raw		5583925	0					
ANR	5583977	ArgumentList	j		5583925	1					
ANR	5583978	Argument	j		5583925	0					
ANR	5583979	Identifier	j		5583925	0					
ANR	5583980	Argument	msg		5583925	1					
ANR	5583981	Identifier	msg		5583925	0					
ANR	5583982	ExpressionStatement	j -> level = 0	86:2:1496:1508	5583925	2	True				
ANR	5583983	AssignmentExpression	j -> level = 0		5583925	0		=			
ANR	5583984	PtrMemberAccess	j -> level		5583925	0					
ANR	5583985	Identifier	j		5583925	0					
ANR	5583986	Identifier	level		5583925	1					
ANR	5583987	PrimaryExpression	0		5583925	1					
ANR	5583988	ReturnStatement	return j ;	87:2:1512:1520	5583925	3	True				
ANR	5583989	Identifier	j		5583925	0					
ANR	5583990	ExpressionStatement	j -> is_first = false	89:1:1526:1545	5583925	3	True				
ANR	5583991	AssignmentExpression	j -> is_first = false		5583925	0		=			
ANR	5583992	PtrMemberAccess	j -> is_first		5583925	0					
ANR	5583993	Identifier	j		5583925	0					
ANR	5583994	Identifier	is_first		5583925	1					
ANR	5583995	Identifier	false		5583925	1					
ANR	5583996	IdentifierDeclStatement	"char msg [ 2 ] = { j -> braces [ j -> level ] , 0 } ;"	90:1:1548:1588	5583925	4	True				
ANR	5583997	IdentifierDecl	"msg [ 2 ] = { j -> braces [ j -> level ] , 0 }"		5583925	0					
ANR	5583998	IdentifierDeclType	char [ 2 ]		5583925	0					
ANR	5583999	Identifier	msg		5583925	1					
ANR	5584000	PrimaryExpression	2		5583925	2					
ANR	5584001	AssignmentExpression	"msg [ 2 ] = { j -> braces [ j -> level ] , 0 }"		5583925	3		=			
ANR	5584002	Identifier	msg		5583925	0					
ANR	5584003	InitializerList	j -> braces [ j -> level ]		5583925	1					
ANR	5584004	ArrayIndexing	j -> braces [ j -> level ]		5583925	0					
ANR	5584005	PtrMemberAccess	j -> braces		5583925	0					
ANR	5584006	Identifier	j		5583925	0					
ANR	5584007	Identifier	braces		5583925	1					
ANR	5584008	PtrMemberAccess	j -> level		5583925	1					
ANR	5584009	Identifier	j		5583925	0					
ANR	5584010	Identifier	level		5583925	1					
ANR	5584011	PrimaryExpression	0		5583925	1					
ANR	5584012	ExpressionStatement	"pj_raw ( j , msg )"	91:1:1591:1606	5583925	5	True				
ANR	5584013	CallExpression	"pj_raw ( j , msg )"		5583925	0					
ANR	5584014	Callee	pj_raw		5583925	0					
ANR	5584015	Identifier	pj_raw		5583925	0					
ANR	5584016	ArgumentList	j		5583925	1					
ANR	5584017	Argument	j		5583925	0					
ANR	5584018	Identifier	j		5583925	0					
ANR	5584019	Argument	msg		5583925	1					
ANR	5584020	Identifier	msg		5583925	0					
ANR	5584021	ReturnStatement	return j ;	92:1:1609:1617	5583925	6	True				
ANR	5584022	Identifier	j		5583925	0					
ANR	5584023	ReturnType	R_API PJ *		5583925	1					
ANR	5584024	Identifier	pj_end		5583925	2					
ANR	5584025	ParameterList	PJ * j		5583925	3					
ANR	5584026	Parameter	PJ * j	78:17:1333:1337	5583925	0	True				
ANR	5584027	ParameterType	PJ *		5583925	0					
ANR	5584028	Identifier	j		5583925	1					
ANR	5584029	CFGEntryNode	ENTRY		5583925		True				
ANR	5584030	CFGExitNode	EXIT		5583925		True				
ANR	5584031	Symbol	msg		5583925						
ANR	5584032	Symbol	j -> level		5583925						
ANR	5584033	Symbol	* * j		5583925						
ANR	5584034	Symbol	* j		5583925						
ANR	5584035	Symbol	* j -> level		5583925						
ANR	5584036	Symbol	j -> is_first		5583925						
ANR	5584037	Symbol	false		5583925						
ANR	5584038	Symbol	* j -> braces		5583925						
ANR	5584039	Symbol	j		5583925						
ANR	5584040	Symbol	j -> braces		5583925						
ANR	5584041	Function	pj_k	95:0:1622:1800							
ANR	5584042	FunctionDef	"pj_k (PJ * j , const char * k)"		5584041	0					
ANR	5584043	CompoundStatement		95:37:1659:1800	5584041	0					
ANR	5584044	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	96:1:1662:1694	5584041	0	True				
ANR	5584045	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584041	0					
ANR	5584046	Callee	r_return_val_if_fail		5584041	0					
ANR	5584047	Identifier	r_return_val_if_fail		5584041	0					
ANR	5584048	ArgumentList	j && k		5584041	1					
ANR	5584049	Argument	j && k		5584041	0					
ANR	5584050	AndExpression	j && k		5584041	0		&&			
ANR	5584051	Identifier	j		5584041	0					
ANR	5584052	Identifier	k		5584041	1					
ANR	5584053	Argument	j		5584041	1					
ANR	5584054	Identifier	j		5584041	0					
ANR	5584055	ExpressionStatement	j -> is_key = false	97:1:1697:1714	5584041	1	True				
ANR	5584056	AssignmentExpression	j -> is_key = false		5584041	0		=			
ANR	5584057	PtrMemberAccess	j -> is_key		5584041	0					
ANR	5584058	Identifier	j		5584041	0					
ANR	5584059	Identifier	is_key		5584041	1					
ANR	5584060	Identifier	false		5584041	1					
ANR	5584061	ExpressionStatement	"pj_s ( j , k )"	98:1:1717:1728	5584041	2	True				
ANR	5584062	CallExpression	"pj_s ( j , k )"		5584041	0					
ANR	5584063	Callee	pj_s		5584041	0					
ANR	5584064	Identifier	pj_s		5584041	0					
ANR	5584065	ArgumentList	j		5584041	1					
ANR	5584066	Argument	j		5584041	0					
ANR	5584067	Identifier	j		5584041	0					
ANR	5584068	Argument	k		5584041	1					
ANR	5584069	Identifier	k		5584041	0					
ANR	5584070	ExpressionStatement	"pj_raw ( j , "":"" )"	99:1:1731:1746	5584041	3	True				
ANR	5584071	CallExpression	"pj_raw ( j , "":"" )"		5584041	0					
ANR	5584072	Callee	pj_raw		5584041	0					
ANR	5584073	Identifier	pj_raw		5584041	0					
ANR	5584074	ArgumentList	j		5584041	1					
ANR	5584075	Argument	j		5584041	0					
ANR	5584076	Identifier	j		5584041	0					
ANR	5584077	Argument	""":"""		5584041	1					
ANR	5584078	PrimaryExpression	""":"""		5584041	0					
ANR	5584079	ExpressionStatement	j -> is_first = false	100:1:1749:1768	5584041	4	True				
ANR	5584080	AssignmentExpression	j -> is_first = false		5584041	0		=			
ANR	5584081	PtrMemberAccess	j -> is_first		5584041	0					
ANR	5584082	Identifier	j		5584041	0					
ANR	5584083	Identifier	is_first		5584041	1					
ANR	5584084	Identifier	false		5584041	1					
ANR	5584085	ExpressionStatement	j -> is_key = true	101:1:1771:1787	5584041	5	True				
ANR	5584086	AssignmentExpression	j -> is_key = true		5584041	0		=			
ANR	5584087	PtrMemberAccess	j -> is_key		5584041	0					
ANR	5584088	Identifier	j		5584041	0					
ANR	5584089	Identifier	is_key		5584041	1					
ANR	5584090	Identifier	true		5584041	1					
ANR	5584091	ReturnStatement	return j ;	102:1:1790:1798	5584041	6	True				
ANR	5584092	Identifier	j		5584041	0					
ANR	5584093	ReturnType	R_API PJ *		5584041	1					
ANR	5584094	Identifier	pj_k		5584041	2					
ANR	5584095	ParameterList	"PJ * j , const char * k"		5584041	3					
ANR	5584096	Parameter	PJ * j	95:15:1637:1641	5584041	0	True				
ANR	5584097	ParameterType	PJ *		5584041	0					
ANR	5584098	Identifier	j		5584041	1					
ANR	5584099	Parameter	const char * k	95:22:1644:1656	5584041	1	True				
ANR	5584100	ParameterType	const char *		5584041	0					
ANR	5584101	Identifier	k		5584041	1					
ANR	5584102	CFGEntryNode	ENTRY		5584041		True				
ANR	5584103	CFGExitNode	EXIT		5584041		True				
ANR	5584104	Symbol	* j		5584041						
ANR	5584105	Symbol	j -> is_key		5584041						
ANR	5584106	Symbol	j -> is_first		5584041						
ANR	5584107	Symbol	false		5584041						
ANR	5584108	Symbol	true		5584041						
ANR	5584109	Symbol	j		5584041						
ANR	5584110	Symbol	k		5584041						
ANR	5584111	Function	pj_kn	105:0:1803:1925							
ANR	5584112	FunctionDef	"pj_kn (PJ * j , const char * k , ut64 n)"		5584111	0					
ANR	5584113	CompoundStatement		105:46:1849:1925	5584111	0					
ANR	5584114	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	106:1:1852:1884	5584111	0	True				
ANR	5584115	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584111	0					
ANR	5584116	Callee	r_return_val_if_fail		5584111	0					
ANR	5584117	Identifier	r_return_val_if_fail		5584111	0					
ANR	5584118	ArgumentList	j && k		5584111	1					
ANR	5584119	Argument	j && k		5584111	0					
ANR	5584120	AndExpression	j && k		5584111	0		&&			
ANR	5584121	Identifier	j		5584111	0					
ANR	5584122	Identifier	k		5584111	1					
ANR	5584123	Argument	j		5584111	1					
ANR	5584124	Identifier	j		5584111	0					
ANR	5584125	ExpressionStatement	"pj_k ( j , k )"	107:1:1887:1898	5584111	1	True				
ANR	5584126	CallExpression	"pj_k ( j , k )"		5584111	0					
ANR	5584127	Callee	pj_k		5584111	0					
ANR	5584128	Identifier	pj_k		5584111	0					
ANR	5584129	ArgumentList	j		5584111	1					
ANR	5584130	Argument	j		5584111	0					
ANR	5584131	Identifier	j		5584111	0					
ANR	5584132	Argument	k		5584111	1					
ANR	5584133	Identifier	k		5584111	0					
ANR	5584134	ExpressionStatement	"pj_n ( j , n )"	108:1:1901:1912	5584111	2	True				
ANR	5584135	CallExpression	"pj_n ( j , n )"		5584111	0					
ANR	5584136	Callee	pj_n		5584111	0					
ANR	5584137	Identifier	pj_n		5584111	0					
ANR	5584138	ArgumentList	j		5584111	1					
ANR	5584139	Argument	j		5584111	0					
ANR	5584140	Identifier	j		5584111	0					
ANR	5584141	Argument	n		5584111	1					
ANR	5584142	Identifier	n		5584111	0					
ANR	5584143	ReturnStatement	return j ;	109:1:1915:1923	5584111	3	True				
ANR	5584144	Identifier	j		5584111	0					
ANR	5584145	ReturnType	R_API PJ *		5584111	1					
ANR	5584146	Identifier	pj_kn		5584111	2					
ANR	5584147	ParameterList	"PJ * j , const char * k , ut64 n"		5584111	3					
ANR	5584148	Parameter	PJ * j	105:16:1819:1823	5584111	0	True				
ANR	5584149	ParameterType	PJ *		5584111	0					
ANR	5584150	Identifier	j		5584111	1					
ANR	5584151	Parameter	const char * k	105:23:1826:1838	5584111	1	True				
ANR	5584152	ParameterType	const char *		5584111	0					
ANR	5584153	Identifier	k		5584111	1					
ANR	5584154	Parameter	ut64 n	105:38:1841:1846	5584111	2	True				
ANR	5584155	ParameterType	ut64		5584111	0					
ANR	5584156	Identifier	n		5584111	1					
ANR	5584157	CFGEntryNode	ENTRY		5584111		True				
ANR	5584158	CFGExitNode	EXIT		5584111		True				
ANR	5584159	Symbol	j		5584111						
ANR	5584160	Symbol	k		5584111						
ANR	5584161	Symbol	n		5584111						
ANR	5584162	Function	pj_kN	112:0:1928:2035							
ANR	5584163	FunctionDef	"pj_kN (PJ * j , const char * k , st64 n)"		5584162	0					
ANR	5584164	CompoundStatement		112:46:1974:2035	5584162	0					
ANR	5584165	IfStatement	if ( j && k )		5584162	0					
ANR	5584166	Condition	j && k	113:5:1981:1986	5584162	0	True				
ANR	5584167	AndExpression	j && k		5584162	0		&&			
ANR	5584168	Identifier	j		5584162	0					
ANR	5584169	Identifier	k		5584162	1					
ANR	5584170	CompoundStatement		2:13:14:14	5584162	1					
ANR	5584171	ExpressionStatement	"pj_k ( j , k )"	114:2:1993:2004	5584162	0	True				
ANR	5584172	CallExpression	"pj_k ( j , k )"		5584162	0					
ANR	5584173	Callee	pj_k		5584162	0					
ANR	5584174	Identifier	pj_k		5584162	0					
ANR	5584175	ArgumentList	j		5584162	1					
ANR	5584176	Argument	j		5584162	0					
ANR	5584177	Identifier	j		5584162	0					
ANR	5584178	Argument	k		5584162	1					
ANR	5584179	Identifier	k		5584162	0					
ANR	5584180	ExpressionStatement	"pj_N ( j , n )"	115:2:2008:2019	5584162	1	True				
ANR	5584181	CallExpression	"pj_N ( j , n )"		5584162	0					
ANR	5584182	Callee	pj_N		5584162	0					
ANR	5584183	Identifier	pj_N		5584162	0					
ANR	5584184	ArgumentList	j		5584162	1					
ANR	5584185	Argument	j		5584162	0					
ANR	5584186	Identifier	j		5584162	0					
ANR	5584187	Argument	n		5584162	1					
ANR	5584188	Identifier	n		5584162	0					
ANR	5584189	ReturnStatement	return j ;	117:1:2025:2033	5584162	1	True				
ANR	5584190	Identifier	j		5584162	0					
ANR	5584191	ReturnType	R_API PJ *		5584162	1					
ANR	5584192	Identifier	pj_kN		5584162	2					
ANR	5584193	ParameterList	"PJ * j , const char * k , st64 n"		5584162	3					
ANR	5584194	Parameter	PJ * j	112:16:1944:1948	5584162	0	True				
ANR	5584195	ParameterType	PJ *		5584162	0					
ANR	5584196	Identifier	j		5584162	1					
ANR	5584197	Parameter	const char * k	112:23:1951:1963	5584162	1	True				
ANR	5584198	ParameterType	const char *		5584162	0					
ANR	5584199	Identifier	k		5584162	1					
ANR	5584200	Parameter	st64 n	112:38:1966:1971	5584162	2	True				
ANR	5584201	ParameterType	st64		5584162	0					
ANR	5584202	Identifier	n		5584162	1					
ANR	5584203	CFGEntryNode	ENTRY		5584162		True				
ANR	5584204	CFGExitNode	EXIT		5584162		True				
ANR	5584205	Symbol	j		5584162						
ANR	5584206	Symbol	k		5584162						
ANR	5584207	Symbol	n		5584162						
ANR	5584208	Function	pj_kd	120:0:2038:2162							
ANR	5584209	FunctionDef	"pj_kd (PJ * j , const char * k , double d)"		5584208	0					
ANR	5584210	CompoundStatement		120:48:2086:2162	5584208	0					
ANR	5584211	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	121:1:2089:2121	5584208	0	True				
ANR	5584212	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584208	0					
ANR	5584213	Callee	r_return_val_if_fail		5584208	0					
ANR	5584214	Identifier	r_return_val_if_fail		5584208	0					
ANR	5584215	ArgumentList	j && k		5584208	1					
ANR	5584216	Argument	j && k		5584208	0					
ANR	5584217	AndExpression	j && k		5584208	0		&&			
ANR	5584218	Identifier	j		5584208	0					
ANR	5584219	Identifier	k		5584208	1					
ANR	5584220	Argument	j		5584208	1					
ANR	5584221	Identifier	j		5584208	0					
ANR	5584222	ExpressionStatement	"pj_k ( j , k )"	122:1:2124:2135	5584208	1	True				
ANR	5584223	CallExpression	"pj_k ( j , k )"		5584208	0					
ANR	5584224	Callee	pj_k		5584208	0					
ANR	5584225	Identifier	pj_k		5584208	0					
ANR	5584226	ArgumentList	j		5584208	1					
ANR	5584227	Argument	j		5584208	0					
ANR	5584228	Identifier	j		5584208	0					
ANR	5584229	Argument	k		5584208	1					
ANR	5584230	Identifier	k		5584208	0					
ANR	5584231	ExpressionStatement	"pj_d ( j , d )"	123:1:2138:2149	5584208	2	True				
ANR	5584232	CallExpression	"pj_d ( j , d )"		5584208	0					
ANR	5584233	Callee	pj_d		5584208	0					
ANR	5584234	Identifier	pj_d		5584208	0					
ANR	5584235	ArgumentList	j		5584208	1					
ANR	5584236	Argument	j		5584208	0					
ANR	5584237	Identifier	j		5584208	0					
ANR	5584238	Argument	d		5584208	1					
ANR	5584239	Identifier	d		5584208	0					
ANR	5584240	ReturnStatement	return j ;	124:1:2152:2160	5584208	3	True				
ANR	5584241	Identifier	j		5584208	0					
ANR	5584242	ReturnType	R_API PJ *		5584208	1					
ANR	5584243	Identifier	pj_kd		5584208	2					
ANR	5584244	ParameterList	"PJ * j , const char * k , double d"		5584208	3					
ANR	5584245	Parameter	PJ * j	120:16:2054:2058	5584208	0	True				
ANR	5584246	ParameterType	PJ *		5584208	0					
ANR	5584247	Identifier	j		5584208	1					
ANR	5584248	Parameter	const char * k	120:23:2061:2073	5584208	1	True				
ANR	5584249	ParameterType	const char *		5584208	0					
ANR	5584250	Identifier	k		5584208	1					
ANR	5584251	Parameter	double d	120:38:2076:2083	5584208	2	True				
ANR	5584252	ParameterType	double		5584208	0					
ANR	5584253	Identifier	d		5584208	1					
ANR	5584254	CFGEntryNode	ENTRY		5584208		True				
ANR	5584255	CFGExitNode	EXIT		5584208		True				
ANR	5584256	Symbol	d		5584208						
ANR	5584257	Symbol	j		5584208						
ANR	5584258	Symbol	k		5584208						
ANR	5584259	Function	pj_kf	127:0:2165:2288							
ANR	5584260	FunctionDef	"pj_kf (PJ * j , const char * k , float d)"		5584259	0					
ANR	5584261	CompoundStatement		127:47:2212:2288	5584259	0					
ANR	5584262	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	128:1:2215:2247	5584259	0	True				
ANR	5584263	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584259	0					
ANR	5584264	Callee	r_return_val_if_fail		5584259	0					
ANR	5584265	Identifier	r_return_val_if_fail		5584259	0					
ANR	5584266	ArgumentList	j && k		5584259	1					
ANR	5584267	Argument	j && k		5584259	0					
ANR	5584268	AndExpression	j && k		5584259	0		&&			
ANR	5584269	Identifier	j		5584259	0					
ANR	5584270	Identifier	k		5584259	1					
ANR	5584271	Argument	j		5584259	1					
ANR	5584272	Identifier	j		5584259	0					
ANR	5584273	ExpressionStatement	"pj_k ( j , k )"	129:1:2250:2261	5584259	1	True				
ANR	5584274	CallExpression	"pj_k ( j , k )"		5584259	0					
ANR	5584275	Callee	pj_k		5584259	0					
ANR	5584276	Identifier	pj_k		5584259	0					
ANR	5584277	ArgumentList	j		5584259	1					
ANR	5584278	Argument	j		5584259	0					
ANR	5584279	Identifier	j		5584259	0					
ANR	5584280	Argument	k		5584259	1					
ANR	5584281	Identifier	k		5584259	0					
ANR	5584282	ExpressionStatement	"pj_f ( j , d )"	130:1:2264:2275	5584259	2	True				
ANR	5584283	CallExpression	"pj_f ( j , d )"		5584259	0					
ANR	5584284	Callee	pj_f		5584259	0					
ANR	5584285	Identifier	pj_f		5584259	0					
ANR	5584286	ArgumentList	j		5584259	1					
ANR	5584287	Argument	j		5584259	0					
ANR	5584288	Identifier	j		5584259	0					
ANR	5584289	Argument	d		5584259	1					
ANR	5584290	Identifier	d		5584259	0					
ANR	5584291	ReturnStatement	return j ;	131:1:2278:2286	5584259	3	True				
ANR	5584292	Identifier	j		5584259	0					
ANR	5584293	ReturnType	R_API PJ *		5584259	1					
ANR	5584294	Identifier	pj_kf		5584259	2					
ANR	5584295	ParameterList	"PJ * j , const char * k , float d"		5584259	3					
ANR	5584296	Parameter	PJ * j	127:16:2181:2185	5584259	0	True				
ANR	5584297	ParameterType	PJ *		5584259	0					
ANR	5584298	Identifier	j		5584259	1					
ANR	5584299	Parameter	const char * k	127:23:2188:2200	5584259	1	True				
ANR	5584300	ParameterType	const char *		5584259	0					
ANR	5584301	Identifier	k		5584259	1					
ANR	5584302	Parameter	float d	127:38:2203:2209	5584259	2	True				
ANR	5584303	ParameterType	float		5584259	0					
ANR	5584304	Identifier	d		5584259	1					
ANR	5584305	CFGEntryNode	ENTRY		5584259		True				
ANR	5584306	CFGExitNode	EXIT		5584259		True				
ANR	5584307	Symbol	d		5584259						
ANR	5584308	Symbol	j		5584259						
ANR	5584309	Symbol	k		5584259						
ANR	5584310	Function	pj_ki	133:0:2290:2411							
ANR	5584311	FunctionDef	"pj_ki (PJ * j , const char * k , int i)"		5584310	0					
ANR	5584312	CompoundStatement		133:45:2335:2411	5584310	0					
ANR	5584313	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	134:1:2338:2370	5584310	0	True				
ANR	5584314	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584310	0					
ANR	5584315	Callee	r_return_val_if_fail		5584310	0					
ANR	5584316	Identifier	r_return_val_if_fail		5584310	0					
ANR	5584317	ArgumentList	j && k		5584310	1					
ANR	5584318	Argument	j && k		5584310	0					
ANR	5584319	AndExpression	j && k		5584310	0		&&			
ANR	5584320	Identifier	j		5584310	0					
ANR	5584321	Identifier	k		5584310	1					
ANR	5584322	Argument	j		5584310	1					
ANR	5584323	Identifier	j		5584310	0					
ANR	5584324	ExpressionStatement	"pj_k ( j , k )"	135:1:2373:2384	5584310	1	True				
ANR	5584325	CallExpression	"pj_k ( j , k )"		5584310	0					
ANR	5584326	Callee	pj_k		5584310	0					
ANR	5584327	Identifier	pj_k		5584310	0					
ANR	5584328	ArgumentList	j		5584310	1					
ANR	5584329	Argument	j		5584310	0					
ANR	5584330	Identifier	j		5584310	0					
ANR	5584331	Argument	k		5584310	1					
ANR	5584332	Identifier	k		5584310	0					
ANR	5584333	ExpressionStatement	"pj_i ( j , i )"	136:1:2387:2398	5584310	2	True				
ANR	5584334	CallExpression	"pj_i ( j , i )"		5584310	0					
ANR	5584335	Callee	pj_i		5584310	0					
ANR	5584336	Identifier	pj_i		5584310	0					
ANR	5584337	ArgumentList	j		5584310	1					
ANR	5584338	Argument	j		5584310	0					
ANR	5584339	Identifier	j		5584310	0					
ANR	5584340	Argument	i		5584310	1					
ANR	5584341	Identifier	i		5584310	0					
ANR	5584342	ReturnStatement	return j ;	137:1:2401:2409	5584310	3	True				
ANR	5584343	Identifier	j		5584310	0					
ANR	5584344	ReturnType	R_API PJ *		5584310	1					
ANR	5584345	Identifier	pj_ki		5584310	2					
ANR	5584346	ParameterList	"PJ * j , const char * k , int i"		5584310	3					
ANR	5584347	Parameter	PJ * j	133:16:2306:2310	5584310	0	True				
ANR	5584348	ParameterType	PJ *		5584310	0					
ANR	5584349	Identifier	j		5584310	1					
ANR	5584350	Parameter	const char * k	133:23:2313:2325	5584310	1	True				
ANR	5584351	ParameterType	const char *		5584310	0					
ANR	5584352	Identifier	k		5584310	1					
ANR	5584353	Parameter	int i	133:38:2328:2332	5584310	2	True				
ANR	5584354	ParameterType	int		5584310	0					
ANR	5584355	Identifier	i		5584310	1					
ANR	5584356	CFGEntryNode	ENTRY		5584310		True				
ANR	5584357	CFGExitNode	EXIT		5584310		True				
ANR	5584358	Symbol	i		5584310						
ANR	5584359	Symbol	j		5584310						
ANR	5584360	Symbol	k		5584310						
ANR	5584361	Function	pj_ks	140:0:2414:2566							
ANR	5584362	FunctionDef	"pj_ks (PJ * j , const char * k , const char * v)"		5584361	0					
ANR	5584363	CompoundStatement		140:53:2467:2566	5584361	0					
ANR	5584364	ExpressionStatement	"r_return_val_if_fail ( j && k && v , j )"	141:1:2470:2507	5584361	0	True				
ANR	5584365	CallExpression	"r_return_val_if_fail ( j && k && v , j )"		5584361	0					
ANR	5584366	Callee	r_return_val_if_fail		5584361	0					
ANR	5584367	Identifier	r_return_val_if_fail		5584361	0					
ANR	5584368	ArgumentList	j && k && v		5584361	1					
ANR	5584369	Argument	j && k && v		5584361	0					
ANR	5584370	AndExpression	j && k && v		5584361	0		&&			
ANR	5584371	Identifier	j		5584361	0					
ANR	5584372	AndExpression	k && v		5584361	1		&&			
ANR	5584373	Identifier	k		5584361	0					
ANR	5584374	Identifier	v		5584361	1					
ANR	5584375	Argument	j		5584361	1					
ANR	5584376	Identifier	j		5584361	0					
ANR	5584377	ExpressionStatement	"pj_k ( j , k )"	143:1:2528:2539	5584361	1	True				
ANR	5584378	CallExpression	"pj_k ( j , k )"		5584361	0					
ANR	5584379	Callee	pj_k		5584361	0					
ANR	5584380	Identifier	pj_k		5584361	0					
ANR	5584381	ArgumentList	j		5584361	1					
ANR	5584382	Argument	j		5584361	0					
ANR	5584383	Identifier	j		5584361	0					
ANR	5584384	Argument	k		5584361	1					
ANR	5584385	Identifier	k		5584361	0					
ANR	5584386	ExpressionStatement	"pj_s ( j , v )"	144:1:2542:2553	5584361	2	True				
ANR	5584387	CallExpression	"pj_s ( j , v )"		5584361	0					
ANR	5584388	Callee	pj_s		5584361	0					
ANR	5584389	Identifier	pj_s		5584361	0					
ANR	5584390	ArgumentList	j		5584361	1					
ANR	5584391	Argument	j		5584361	0					
ANR	5584392	Identifier	j		5584361	0					
ANR	5584393	Argument	v		5584361	1					
ANR	5584394	Identifier	v		5584361	0					
ANR	5584395	ReturnStatement	return j ;	145:1:2556:2564	5584361	3	True				
ANR	5584396	Identifier	j		5584361	0					
ANR	5584397	ReturnType	R_API PJ *		5584361	1					
ANR	5584398	Identifier	pj_ks		5584361	2					
ANR	5584399	ParameterList	"PJ * j , const char * k , const char * v"		5584361	3					
ANR	5584400	Parameter	PJ * j	140:16:2430:2434	5584361	0	True				
ANR	5584401	ParameterType	PJ *		5584361	0					
ANR	5584402	Identifier	j		5584361	1					
ANR	5584403	Parameter	const char * k	140:23:2437:2449	5584361	1	True				
ANR	5584404	ParameterType	const char *		5584361	0					
ANR	5584405	Identifier	k		5584361	1					
ANR	5584406	Parameter	const char * v	140:38:2452:2464	5584361	2	True				
ANR	5584407	ParameterType	const char *		5584361	0					
ANR	5584408	Identifier	v		5584361	1					
ANR	5584409	CFGEntryNode	ENTRY		5584361		True				
ANR	5584410	CFGExitNode	EXIT		5584361		True				
ANR	5584411	Symbol	v		5584361						
ANR	5584412	Symbol	j		5584361						
ANR	5584413	Symbol	k		5584361						
ANR	5584414	Function	pj_kb	148:0:2569:2691							
ANR	5584415	FunctionDef	"pj_kb (PJ * j , const char * k , bool v)"		5584414	0					
ANR	5584416	CompoundStatement		148:46:2615:2691	5584414	0					
ANR	5584417	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	149:1:2618:2650	5584414	0	True				
ANR	5584418	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584414	0					
ANR	5584419	Callee	r_return_val_if_fail		5584414	0					
ANR	5584420	Identifier	r_return_val_if_fail		5584414	0					
ANR	5584421	ArgumentList	j && k		5584414	1					
ANR	5584422	Argument	j && k		5584414	0					
ANR	5584423	AndExpression	j && k		5584414	0		&&			
ANR	5584424	Identifier	j		5584414	0					
ANR	5584425	Identifier	k		5584414	1					
ANR	5584426	Argument	j		5584414	1					
ANR	5584427	Identifier	j		5584414	0					
ANR	5584428	ExpressionStatement	"pj_k ( j , k )"	150:1:2653:2664	5584414	1	True				
ANR	5584429	CallExpression	"pj_k ( j , k )"		5584414	0					
ANR	5584430	Callee	pj_k		5584414	0					
ANR	5584431	Identifier	pj_k		5584414	0					
ANR	5584432	ArgumentList	j		5584414	1					
ANR	5584433	Argument	j		5584414	0					
ANR	5584434	Identifier	j		5584414	0					
ANR	5584435	Argument	k		5584414	1					
ANR	5584436	Identifier	k		5584414	0					
ANR	5584437	ExpressionStatement	"pj_b ( j , v )"	151:1:2667:2678	5584414	2	True				
ANR	5584438	CallExpression	"pj_b ( j , v )"		5584414	0					
ANR	5584439	Callee	pj_b		5584414	0					
ANR	5584440	Identifier	pj_b		5584414	0					
ANR	5584441	ArgumentList	j		5584414	1					
ANR	5584442	Argument	j		5584414	0					
ANR	5584443	Identifier	j		5584414	0					
ANR	5584444	Argument	v		5584414	1					
ANR	5584445	Identifier	v		5584414	0					
ANR	5584446	ReturnStatement	return j ;	152:1:2681:2689	5584414	3	True				
ANR	5584447	Identifier	j		5584414	0					
ANR	5584448	ReturnType	R_API PJ *		5584414	1					
ANR	5584449	Identifier	pj_kb		5584414	2					
ANR	5584450	ParameterList	"PJ * j , const char * k , bool v"		5584414	3					
ANR	5584451	Parameter	PJ * j	148:16:2585:2589	5584414	0	True				
ANR	5584452	ParameterType	PJ *		5584414	0					
ANR	5584453	Identifier	j		5584414	1					
ANR	5584454	Parameter	const char * k	148:23:2592:2604	5584414	1	True				
ANR	5584455	ParameterType	const char *		5584414	0					
ANR	5584456	Identifier	k		5584414	1					
ANR	5584457	Parameter	bool v	148:38:2607:2612	5584414	2	True				
ANR	5584458	ParameterType	bool		5584414	0					
ANR	5584459	Identifier	v		5584414	1					
ANR	5584460	CFGEntryNode	ENTRY		5584414		True				
ANR	5584461	CFGExitNode	EXIT		5584414		True				
ANR	5584462	Symbol	v		5584414						
ANR	5584463	Symbol	j		5584414						
ANR	5584464	Symbol	k		5584414						
ANR	5584465	Function	pj_b	155:0:2694:2811							
ANR	5584466	FunctionDef	"pj_b (PJ * j , bool v)"		5584465	0					
ANR	5584467	CompoundStatement		155:30:2724:2811	5584465	0					
ANR	5584468	ExpressionStatement	"r_return_val_if_fail ( j , j )"	156:1:2727:2754	5584465	0	True				
ANR	5584469	CallExpression	"r_return_val_if_fail ( j , j )"		5584465	0					
ANR	5584470	Callee	r_return_val_if_fail		5584465	0					
ANR	5584471	Identifier	r_return_val_if_fail		5584465	0					
ANR	5584472	ArgumentList	j		5584465	1					
ANR	5584473	Argument	j		5584465	0					
ANR	5584474	Identifier	j		5584465	0					
ANR	5584475	Argument	j		5584465	1					
ANR	5584476	Identifier	j		5584465	0					
ANR	5584477	ExpressionStatement	pj_comma ( j )	157:1:2757:2769	5584465	1	True				
ANR	5584478	CallExpression	pj_comma ( j )		5584465	0					
ANR	5584479	Callee	pj_comma		5584465	0					
ANR	5584480	Identifier	pj_comma		5584465	0					
ANR	5584481	ArgumentList	j		5584465	1					
ANR	5584482	Argument	j		5584465	0					
ANR	5584483	Identifier	j		5584465	0					
ANR	5584484	ExpressionStatement	"pj_raw ( j , r_str_bool ( v ) )"	158:1:2772:2798	5584465	2	True				
ANR	5584485	CallExpression	"pj_raw ( j , r_str_bool ( v ) )"		5584465	0					
ANR	5584486	Callee	pj_raw		5584465	0					
ANR	5584487	Identifier	pj_raw		5584465	0					
ANR	5584488	ArgumentList	j		5584465	1					
ANR	5584489	Argument	j		5584465	0					
ANR	5584490	Identifier	j		5584465	0					
ANR	5584491	Argument	r_str_bool ( v )		5584465	1					
ANR	5584492	CallExpression	r_str_bool ( v )		5584465	0					
ANR	5584493	Callee	r_str_bool		5584465	0					
ANR	5584494	Identifier	r_str_bool		5584465	0					
ANR	5584495	ArgumentList	v		5584465	1					
ANR	5584496	Argument	v		5584465	0					
ANR	5584497	Identifier	v		5584465	0					
ANR	5584498	ReturnStatement	return j ;	159:1:2801:2809	5584465	3	True				
ANR	5584499	Identifier	j		5584465	0					
ANR	5584500	ReturnType	R_API PJ *		5584465	1					
ANR	5584501	Identifier	pj_b		5584465	2					
ANR	5584502	ParameterList	"PJ * j , bool v"		5584465	3					
ANR	5584503	Parameter	PJ * j	155:15:2709:2713	5584465	0	True				
ANR	5584504	ParameterType	PJ *		5584465	0					
ANR	5584505	Identifier	j		5584465	1					
ANR	5584506	Parameter	bool v	155:22:2716:2721	5584465	1	True				
ANR	5584507	ParameterType	bool		5584465	0					
ANR	5584508	Identifier	v		5584465	1					
ANR	5584509	CFGEntryNode	ENTRY		5584465		True				
ANR	5584510	CFGExitNode	EXIT		5584465		True				
ANR	5584511	Symbol	r_str_bool		5584465						
ANR	5584512	Symbol	v		5584465						
ANR	5584513	Symbol	j		5584465						
ANR	5584514	Function	pj_s	162:0:2814:3077							
ANR	5584515	FunctionDef	"pj_s (PJ * j , const char * k)"		5584514	0					
ANR	5584516	CompoundStatement		162:37:2851:3077	5584514	0					
ANR	5584517	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	163:1:2854:2886	5584514	0	True				
ANR	5584518	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584514	0					
ANR	5584519	Callee	r_return_val_if_fail		5584514	0					
ANR	5584520	Identifier	r_return_val_if_fail		5584514	0					
ANR	5584521	ArgumentList	j && k		5584514	1					
ANR	5584522	Argument	j && k		5584514	0					
ANR	5584523	AndExpression	j && k		5584514	0		&&			
ANR	5584524	Identifier	j		5584514	0					
ANR	5584525	Identifier	k		5584514	1					
ANR	5584526	Argument	j		5584514	1					
ANR	5584527	Identifier	j		5584514	0					
ANR	5584528	ExpressionStatement	pj_comma ( j )	164:1:2889:2901	5584514	1	True				
ANR	5584529	CallExpression	pj_comma ( j )		5584514	0					
ANR	5584530	Callee	pj_comma		5584514	0					
ANR	5584531	Identifier	pj_comma		5584514	0					
ANR	5584532	ArgumentList	j		5584514	1					
ANR	5584533	Argument	j		5584514	0					
ANR	5584534	Identifier	j		5584514	0					
ANR	5584535	ExpressionStatement	"pj_raw ( j , ""\\"""" )"	165:1:2904:2920	5584514	2	True				
ANR	5584536	CallExpression	"pj_raw ( j , ""\\"""" )"		5584514	0					
ANR	5584537	Callee	pj_raw		5584514	0					
ANR	5584538	Identifier	pj_raw		5584514	0					
ANR	5584539	ArgumentList	j		5584514	1					
ANR	5584540	Argument	j		5584514	0					
ANR	5584541	Identifier	j		5584514	0					
ANR	5584542	Argument	"""\\"""""		5584514	1					
ANR	5584543	PrimaryExpression	"""\\"""""		5584514	0					
ANR	5584544	IdentifierDeclStatement	"char * ek = r_str_escape_utf8_for_json ( k , - 1 ) ;"	166:1:2923:2968	5584514	3	True				
ANR	5584545	IdentifierDecl	"* ek = r_str_escape_utf8_for_json ( k , - 1 )"		5584514	0					
ANR	5584546	IdentifierDeclType	char *		5584514	0					
ANR	5584547	Identifier	ek		5584514	1					
ANR	5584548	AssignmentExpression	"* ek = r_str_escape_utf8_for_json ( k , - 1 )"		5584514	2		=			
ANR	5584549	Identifier	ek		5584514	0					
ANR	5584550	CallExpression	"r_str_escape_utf8_for_json ( k , - 1 )"		5584514	1					
ANR	5584551	Callee	r_str_escape_utf8_for_json		5584514	0					
ANR	5584552	Identifier	r_str_escape_utf8_for_json		5584514	0					
ANR	5584553	ArgumentList	k		5584514	1					
ANR	5584554	Argument	k		5584514	0					
ANR	5584555	Identifier	k		5584514	0					
ANR	5584556	Argument	- 1		5584514	1					
ANR	5584557	UnaryOperationExpression	- 1		5584514	0					
ANR	5584558	UnaryOperator	-		5584514	0					
ANR	5584559	PrimaryExpression	1		5584514	1					
ANR	5584560	IfStatement	if ( ek )		5584514	4					
ANR	5584561	Condition	ek	167:5:2975:2976	5584514	0	True				
ANR	5584562	Identifier	ek		5584514	0					
ANR	5584563	CompoundStatement		6:9:127:127	5584514	1					
ANR	5584564	ExpressionStatement	"pj_raw ( j , ek )"	168:2:2983:2997	5584514	0	True				
ANR	5584565	CallExpression	"pj_raw ( j , ek )"		5584514	0					
ANR	5584566	Callee	pj_raw		5584514	0					
ANR	5584567	Identifier	pj_raw		5584514	0					
ANR	5584568	ArgumentList	j		5584514	1					
ANR	5584569	Argument	j		5584514	0					
ANR	5584570	Identifier	j		5584514	0					
ANR	5584571	Argument	ek		5584514	1					
ANR	5584572	Identifier	ek		5584514	0					
ANR	5584573	ExpressionStatement	free ( ek )	169:2:3001:3010	5584514	1	True				
ANR	5584574	CallExpression	free ( ek )		5584514	0					
ANR	5584575	Callee	free		5584514	0					
ANR	5584576	Identifier	free		5584514	0					
ANR	5584577	ArgumentList	ek		5584514	1					
ANR	5584578	Argument	ek		5584514	0					
ANR	5584579	Identifier	ek		5584514	0					
ANR	5584580	ElseStatement	else		5584514	0					
ANR	5584581	CompoundStatement		9:8:168:168	5584514	0					
ANR	5584582	ExpressionStatement	"eprintf ( ""damn\\n"" )"	171:2:3024:3042	5584514	0	True				
ANR	5584583	CallExpression	"eprintf ( ""damn\\n"" )"		5584514	0					
ANR	5584584	Callee	eprintf		5584514	0					
ANR	5584585	Identifier	eprintf		5584514	0					
ANR	5584586	ArgumentList	"""damn\\n"""		5584514	1					
ANR	5584587	Argument	"""damn\\n"""		5584514	0					
ANR	5584588	PrimaryExpression	"""damn\\n"""		5584514	0					
ANR	5584589	ExpressionStatement	"pj_raw ( j , ""\\"""" )"	173:1:3048:3064	5584514	5	True				
ANR	5584590	CallExpression	"pj_raw ( j , ""\\"""" )"		5584514	0					
ANR	5584591	Callee	pj_raw		5584514	0					
ANR	5584592	Identifier	pj_raw		5584514	0					
ANR	5584593	ArgumentList	j		5584514	1					
ANR	5584594	Argument	j		5584514	0					
ANR	5584595	Identifier	j		5584514	0					
ANR	5584596	Argument	"""\\"""""		5584514	1					
ANR	5584597	PrimaryExpression	"""\\"""""		5584514	0					
ANR	5584598	ReturnStatement	return j ;	174:1:3067:3075	5584514	6	True				
ANR	5584599	Identifier	j		5584514	0					
ANR	5584600	ReturnType	R_API PJ *		5584514	1					
ANR	5584601	Identifier	pj_s		5584514	2					
ANR	5584602	ParameterList	"PJ * j , const char * k"		5584514	3					
ANR	5584603	Parameter	PJ * j	162:15:2829:2833	5584514	0	True				
ANR	5584604	ParameterType	PJ *		5584514	0					
ANR	5584605	Identifier	j		5584514	1					
ANR	5584606	Parameter	const char * k	162:22:2836:2848	5584514	1	True				
ANR	5584607	ParameterType	const char *		5584514	0					
ANR	5584608	Identifier	k		5584514	1					
ANR	5584609	CFGEntryNode	ENTRY		5584514		True				
ANR	5584610	CFGExitNode	EXIT		5584514		True				
ANR	5584611	Symbol	ek		5584514						
ANR	5584612	Symbol	j		5584514						
ANR	5584613	Symbol	k		5584514						
ANR	5584614	Symbol	r_str_escape_utf8_for_json		5584514						
ANR	5584615	Function	pj_j	177:0:3080:3212							
ANR	5584616	FunctionDef	"pj_j (PJ * j , const char * k)"		5584615	0					
ANR	5584617	CompoundStatement		177:37:3117:3212	5584615	0					
ANR	5584618	ExpressionStatement	"r_return_val_if_fail ( j && k , j )"	178:1:3120:3152	5584615	0	True				
ANR	5584619	CallExpression	"r_return_val_if_fail ( j && k , j )"		5584615	0					
ANR	5584620	Callee	r_return_val_if_fail		5584615	0					
ANR	5584621	Identifier	r_return_val_if_fail		5584615	0					
ANR	5584622	ArgumentList	j && k		5584615	1					
ANR	5584623	Argument	j && k		5584615	0					
ANR	5584624	AndExpression	j && k		5584615	0		&&			
ANR	5584625	Identifier	j		5584615	0					
ANR	5584626	Identifier	k		5584615	1					
ANR	5584627	Argument	j		5584615	1					
ANR	5584628	Identifier	j		5584615	0					
ANR	5584629	IfStatement	if ( * k )		5584615	1					
ANR	5584630	Condition	* k	179:5:3159:3160	5584615	0	True				
ANR	5584631	UnaryOperationExpression	* k		5584615	0					
ANR	5584632	UnaryOperator	*		5584615	0					
ANR	5584633	Identifier	k		5584615	1					
ANR	5584634	CompoundStatement		3:9:45:45	5584615	1					
ANR	5584635	ExpressionStatement	pj_comma ( j )	180:2:3167:3179	5584615	0	True				
ANR	5584636	CallExpression	pj_comma ( j )		5584615	0					
ANR	5584637	Callee	pj_comma		5584615	0					
ANR	5584638	Identifier	pj_comma		5584615	0					
ANR	5584639	ArgumentList	j		5584615	1					
ANR	5584640	Argument	j		5584615	0					
ANR	5584641	Identifier	j		5584615	0					
ANR	5584642	ExpressionStatement	"pj_raw ( j , k )"	181:2:3183:3196	5584615	1	True				
ANR	5584643	CallExpression	"pj_raw ( j , k )"		5584615	0					
ANR	5584644	Callee	pj_raw		5584615	0					
ANR	5584645	Identifier	pj_raw		5584615	0					
ANR	5584646	ArgumentList	j		5584615	1					
ANR	5584647	Argument	j		5584615	0					
ANR	5584648	Identifier	j		5584615	0					
ANR	5584649	Argument	k		5584615	1					
ANR	5584650	Identifier	k		5584615	0					
ANR	5584651	ReturnStatement	return j ;	183:1:3202:3210	5584615	2	True				
ANR	5584652	Identifier	j		5584615	0					
ANR	5584653	ReturnType	R_API PJ *		5584615	1					
ANR	5584654	Identifier	pj_j		5584615	2					
ANR	5584655	ParameterList	"PJ * j , const char * k"		5584615	3					
ANR	5584656	Parameter	PJ * j	177:15:3095:3099	5584615	0	True				
ANR	5584657	ParameterType	PJ *		5584615	0					
ANR	5584658	Identifier	j		5584615	1					
ANR	5584659	Parameter	const char * k	177:22:3102:3114	5584615	1	True				
ANR	5584660	ParameterType	const char *		5584615	0					
ANR	5584661	Identifier	k		5584615	1					
ANR	5584662	CFGEntryNode	ENTRY		5584615		True				
ANR	5584663	CFGExitNode	EXIT		5584615		True				
ANR	5584664	Symbol	* k		5584615						
ANR	5584665	Symbol	j		5584615						
ANR	5584666	Symbol	k		5584615						
ANR	5584667	Function	pj_n	186:0:3215:3342							
ANR	5584668	FunctionDef	"pj_n (PJ * j , ut64 n)"		5584667	0					
ANR	5584669	CompoundStatement		186:30:3245:3342	5584667	0					
ANR	5584670	ExpressionStatement	"r_return_val_if_fail ( j , j )"	187:1:3248:3275	5584667	0	True				
ANR	5584671	CallExpression	"r_return_val_if_fail ( j , j )"		5584667	0					
ANR	5584672	Callee	r_return_val_if_fail		5584667	0					
ANR	5584673	Identifier	r_return_val_if_fail		5584667	0					
ANR	5584674	ArgumentList	j		5584667	1					
ANR	5584675	Argument	j		5584667	0					
ANR	5584676	Identifier	j		5584667	0					
ANR	5584677	Argument	j		5584667	1					
ANR	5584678	Identifier	j		5584667	0					
ANR	5584679	ExpressionStatement	pj_comma ( j )	188:1:3278:3290	5584667	1	True				
ANR	5584680	CallExpression	pj_comma ( j )		5584667	0					
ANR	5584681	Callee	pj_comma		5584667	0					
ANR	5584682	Identifier	pj_comma		5584667	0					
ANR	5584683	ArgumentList	j		5584667	1					
ANR	5584684	Argument	j		5584667	0					
ANR	5584685	Identifier	j		5584667	0					
ANR	5584686	Statement	pj_raw	189:1:3293:3298	5584667	2	True				
ANR	5584687	Statement	(	189:8:3300:3300	5584667	3	True				
ANR	5584688	Statement	j	189:9:3301:3301	5584667	4	True				
ANR	5584689	Statement	","	189:10:3302:3302	5584667	5	True				
ANR	5584690	Statement	sdb_fmt	189:12:3304:3310	5584667	6	True				
ANR	5584691	Statement	(	189:20:3312:3312	5584667	7	True				
ANR	5584692	Statement	"""%"""	189:21:3313:3315	5584667	8	True				
ANR	5584693	Statement	PFMT64u	189:25:3317:3323	5584667	9	True				
ANR	5584694	Statement	","	189:32:3324:3324	5584667	10	True				
ANR	5584695	Statement	n	189:34:3326:3326	5584667	11	True				
ANR	5584696	Statement	)	189:35:3327:3327	5584667	12	True				
ANR	5584697	Statement	)	189:36:3328:3328	5584667	13	True				
ANR	5584698	ExpressionStatement		189:37:3329:3329	5584667	14	True				
ANR	5584699	ReturnStatement	return j ;	190:1:3332:3340	5584667	15	True				
ANR	5584700	Identifier	j		5584667	0					
ANR	5584701	ReturnType	R_API PJ *		5584667	1					
ANR	5584702	Identifier	pj_n		5584667	2					
ANR	5584703	ParameterList	"PJ * j , ut64 n"		5584667	3					
ANR	5584704	Parameter	PJ * j	186:15:3230:3234	5584667	0	True				
ANR	5584705	ParameterType	PJ *		5584667	0					
ANR	5584706	Identifier	j		5584667	1					
ANR	5584707	Parameter	ut64 n	186:22:3237:3242	5584667	1	True				
ANR	5584708	ParameterType	ut64		5584667	0					
ANR	5584709	Identifier	n		5584667	1					
ANR	5584710	CFGEntryNode	ENTRY		5584667		True				
ANR	5584711	CFGExitNode	EXIT		5584667		True				
ANR	5584712	Symbol	j		5584667						
ANR	5584713	Symbol	n		5584667						
ANR	5584714	Function	pj_N	193:0:3345:3474							
ANR	5584715	FunctionDef	"pj_N (PJ * j , st64 n)"		5584714	0					
ANR	5584716	CompoundStatement		193:30:3375:3474	5584714	0					
ANR	5584717	ExpressionStatement	"r_return_val_if_fail ( j , NULL )"	194:1:3378:3408	5584714	0	True				
ANR	5584718	CallExpression	"r_return_val_if_fail ( j , NULL )"		5584714	0					
ANR	5584719	Callee	r_return_val_if_fail		5584714	0					
ANR	5584720	Identifier	r_return_val_if_fail		5584714	0					
ANR	5584721	ArgumentList	j		5584714	1					
ANR	5584722	Argument	j		5584714	0					
ANR	5584723	Identifier	j		5584714	0					
ANR	5584724	Argument	NULL		5584714	1					
ANR	5584725	Identifier	NULL		5584714	0					
ANR	5584726	ExpressionStatement	pj_comma ( j )	195:1:3411:3423	5584714	1	True				
ANR	5584727	CallExpression	pj_comma ( j )		5584714	0					
ANR	5584728	Callee	pj_comma		5584714	0					
ANR	5584729	Identifier	pj_comma		5584714	0					
ANR	5584730	ArgumentList	j		5584714	1					
ANR	5584731	Argument	j		5584714	0					
ANR	5584732	Identifier	j		5584714	0					
ANR	5584733	Statement	pj_raw	196:1:3426:3431	5584714	2	True				
ANR	5584734	Statement	(	196:8:3433:3433	5584714	3	True				
ANR	5584735	Statement	j	196:9:3434:3434	5584714	4	True				
ANR	5584736	Statement	","	196:10:3435:3435	5584714	5	True				
ANR	5584737	Statement	sdb_fmt	196:12:3437:3443	5584714	6	True				
ANR	5584738	Statement	(	196:20:3445:3445	5584714	7	True				
ANR	5584739	Statement	"""%"""	196:21:3446:3448	5584714	8	True				
ANR	5584740	Statement	PFMT64d	196:24:3449:3455	5584714	9	True				
ANR	5584741	Statement	","	196:31:3456:3456	5584714	10	True				
ANR	5584742	Statement	n	196:33:3458:3458	5584714	11	True				
ANR	5584743	Statement	)	196:34:3459:3459	5584714	12	True				
ANR	5584744	Statement	)	196:35:3460:3460	5584714	13	True				
ANR	5584745	ExpressionStatement		196:36:3461:3461	5584714	14	True				
ANR	5584746	ReturnStatement	return j ;	197:1:3464:3472	5584714	15	True				
ANR	5584747	Identifier	j		5584714	0					
ANR	5584748	ReturnType	R_API PJ *		5584714	1					
ANR	5584749	Identifier	pj_N		5584714	2					
ANR	5584750	ParameterList	"PJ * j , st64 n"		5584714	3					
ANR	5584751	Parameter	PJ * j	193:15:3360:3364	5584714	0	True				
ANR	5584752	ParameterType	PJ *		5584714	0					
ANR	5584753	Identifier	j		5584714	1					
ANR	5584754	Parameter	st64 n	193:22:3367:3372	5584714	1	True				
ANR	5584755	ParameterType	st64		5584714	0					
ANR	5584756	Identifier	n		5584714	1					
ANR	5584757	CFGEntryNode	ENTRY		5584714		True				
ANR	5584758	CFGExitNode	EXIT		5584714		True				
ANR	5584759	Symbol	NULL		5584714						
ANR	5584760	Symbol	j		5584714						
ANR	5584761	Symbol	n		5584714						
ANR	5584762	Function	pj_f	200:0:3477:3601							
ANR	5584763	FunctionDef	"pj_f (PJ * j , float f)"		5584762	0					
ANR	5584764	CompoundStatement		200:31:3508:3601	5584762	0					
ANR	5584765	ExpressionStatement	"r_return_val_if_fail ( j , NULL )"	201:1:3511:3541	5584762	0	True				
ANR	5584766	CallExpression	"r_return_val_if_fail ( j , NULL )"		5584762	0					
ANR	5584767	Callee	r_return_val_if_fail		5584762	0					
ANR	5584768	Identifier	r_return_val_if_fail		5584762	0					
ANR	5584769	ArgumentList	j		5584762	1					
ANR	5584770	Argument	j		5584762	0					
ANR	5584771	Identifier	j		5584762	0					
ANR	5584772	Argument	NULL		5584762	1					
ANR	5584773	Identifier	NULL		5584762	0					
ANR	5584774	ExpressionStatement	pj_comma ( j )	202:1:3544:3556	5584762	1	True				
ANR	5584775	CallExpression	pj_comma ( j )		5584762	0					
ANR	5584776	Callee	pj_comma		5584762	0					
ANR	5584777	Identifier	pj_comma		5584762	0					
ANR	5584778	ArgumentList	j		5584762	1					
ANR	5584779	Argument	j		5584762	0					
ANR	5584780	Identifier	j		5584762	0					
ANR	5584781	ExpressionStatement	"pj_raw ( j , sdb_fmt ( ""%f"" , f ) )"	203:1:3559:3588	5584762	2	True				
ANR	5584782	CallExpression	"pj_raw ( j , sdb_fmt ( ""%f"" , f ) )"		5584762	0					
ANR	5584783	Callee	pj_raw		5584762	0					
ANR	5584784	Identifier	pj_raw		5584762	0					
ANR	5584785	ArgumentList	j		5584762	1					
ANR	5584786	Argument	j		5584762	0					
ANR	5584787	Identifier	j		5584762	0					
ANR	5584788	Argument	"sdb_fmt ( ""%f"" , f )"		5584762	1					
ANR	5584789	CallExpression	"sdb_fmt ( ""%f"" , f )"		5584762	0					
ANR	5584790	Callee	sdb_fmt		5584762	0					
ANR	5584791	Identifier	sdb_fmt		5584762	0					
ANR	5584792	ArgumentList	"""%f"""		5584762	1					
ANR	5584793	Argument	"""%f"""		5584762	0					
ANR	5584794	PrimaryExpression	"""%f"""		5584762	0					
ANR	5584795	Argument	f		5584762	1					
ANR	5584796	Identifier	f		5584762	0					
ANR	5584797	ReturnStatement	return j ;	204:1:3591:3599	5584762	3	True				
ANR	5584798	Identifier	j		5584762	0					
ANR	5584799	ReturnType	R_API PJ *		5584762	1					
ANR	5584800	Identifier	pj_f		5584762	2					
ANR	5584801	ParameterList	"PJ * j , float f"		5584762	3					
ANR	5584802	Parameter	PJ * j	200:15:3492:3496	5584762	0	True				
ANR	5584803	ParameterType	PJ *		5584762	0					
ANR	5584804	Identifier	j		5584762	1					
ANR	5584805	Parameter	float f	200:22:3499:3505	5584762	1	True				
ANR	5584806	ParameterType	float		5584762	0					
ANR	5584807	Identifier	f		5584762	1					
ANR	5584808	CFGEntryNode	ENTRY		5584762		True				
ANR	5584809	CFGExitNode	EXIT		5584762		True				
ANR	5584810	Symbol	NULL		5584762						
ANR	5584811	Symbol	f		5584762						
ANR	5584812	Symbol	j		5584762						
ANR	5584813	Symbol	sdb_fmt		5584762						
ANR	5584814	Function	pj_d	207:0:3604:3730							
ANR	5584815	FunctionDef	"pj_d (PJ * j , double d)"		5584814	0					
ANR	5584816	CompoundStatement		207:32:3636:3730	5584814	0					
ANR	5584817	ExpressionStatement	"r_return_val_if_fail ( j , NULL )"	208:1:3639:3669	5584814	0	True				
ANR	5584818	CallExpression	"r_return_val_if_fail ( j , NULL )"		5584814	0					
ANR	5584819	Callee	r_return_val_if_fail		5584814	0					
ANR	5584820	Identifier	r_return_val_if_fail		5584814	0					
ANR	5584821	ArgumentList	j		5584814	1					
ANR	5584822	Argument	j		5584814	0					
ANR	5584823	Identifier	j		5584814	0					
ANR	5584824	Argument	NULL		5584814	1					
ANR	5584825	Identifier	NULL		5584814	0					
ANR	5584826	ExpressionStatement	pj_comma ( j )	209:1:3672:3684	5584814	1	True				
ANR	5584827	CallExpression	pj_comma ( j )		5584814	0					
ANR	5584828	Callee	pj_comma		5584814	0					
ANR	5584829	Identifier	pj_comma		5584814	0					
ANR	5584830	ArgumentList	j		5584814	1					
ANR	5584831	Argument	j		5584814	0					
ANR	5584832	Identifier	j		5584814	0					
ANR	5584833	ExpressionStatement	"pj_raw ( j , sdb_fmt ( ""%lf"" , d ) )"	210:1:3687:3717	5584814	2	True				
ANR	5584834	CallExpression	"pj_raw ( j , sdb_fmt ( ""%lf"" , d ) )"		5584814	0					
ANR	5584835	Callee	pj_raw		5584814	0					
ANR	5584836	Identifier	pj_raw		5584814	0					
ANR	5584837	ArgumentList	j		5584814	1					
ANR	5584838	Argument	j		5584814	0					
ANR	5584839	Identifier	j		5584814	0					
ANR	5584840	Argument	"sdb_fmt ( ""%lf"" , d )"		5584814	1					
ANR	5584841	CallExpression	"sdb_fmt ( ""%lf"" , d )"		5584814	0					
ANR	5584842	Callee	sdb_fmt		5584814	0					
ANR	5584843	Identifier	sdb_fmt		5584814	0					
ANR	5584844	ArgumentList	"""%lf"""		5584814	1					
ANR	5584845	Argument	"""%lf"""		5584814	0					
ANR	5584846	PrimaryExpression	"""%lf"""		5584814	0					
ANR	5584847	Argument	d		5584814	1					
ANR	5584848	Identifier	d		5584814	0					
ANR	5584849	ReturnStatement	return j ;	211:1:3720:3728	5584814	3	True				
ANR	5584850	Identifier	j		5584814	0					
ANR	5584851	ReturnType	R_API PJ *		5584814	1					
ANR	5584852	Identifier	pj_d		5584814	2					
ANR	5584853	ParameterList	"PJ * j , double d"		5584814	3					
ANR	5584854	Parameter	PJ * j	207:15:3619:3623	5584814	0	True				
ANR	5584855	ParameterType	PJ *		5584814	0					
ANR	5584856	Identifier	j		5584814	1					
ANR	5584857	Parameter	double d	207:22:3626:3633	5584814	1	True				
ANR	5584858	ParameterType	double		5584814	0					
ANR	5584859	Identifier	d		5584814	1					
ANR	5584860	CFGEntryNode	ENTRY		5584814		True				
ANR	5584861	CFGExitNode	EXIT		5584814		True				
ANR	5584862	Symbol	NULL		5584814						
ANR	5584863	Symbol	d		5584814						
ANR	5584864	Symbol	j		5584814						
ANR	5584865	Symbol	sdb_fmt		5584814						
ANR	5584866	Function	pj_i	214:0:3733:3837							
ANR	5584867	FunctionDef	"pj_i (PJ * j , int i)"		5584866	0					
ANR	5584868	CompoundStatement		214:29:3762:3837	5584866	0					
ANR	5584869	IfStatement	if ( j )		5584866	0					
ANR	5584870	Condition	j	215:5:3769:3769	5584866	0	True				
ANR	5584871	Identifier	j		5584866	0					
ANR	5584872	CompoundStatement		2:8:9:9	5584866	1					
ANR	5584873	ExpressionStatement	pj_comma ( j )	216:2:3776:3788	5584866	0	True				
ANR	5584874	CallExpression	pj_comma ( j )		5584866	0					
ANR	5584875	Callee	pj_comma		5584866	0					
ANR	5584876	Identifier	pj_comma		5584866	0					
ANR	5584877	ArgumentList	j		5584866	1					
ANR	5584878	Argument	j		5584866	0					
ANR	5584879	Identifier	j		5584866	0					
ANR	5584880	ExpressionStatement	"pj_raw ( j , sdb_fmt ( ""%d"" , i ) )"	217:2:3792:3821	5584866	1	True				
ANR	5584881	CallExpression	"pj_raw ( j , sdb_fmt ( ""%d"" , i ) )"		5584866	0					
ANR	5584882	Callee	pj_raw		5584866	0					
ANR	5584883	Identifier	pj_raw		5584866	0					
ANR	5584884	ArgumentList	j		5584866	1					
ANR	5584885	Argument	j		5584866	0					
ANR	5584886	Identifier	j		5584866	0					
ANR	5584887	Argument	"sdb_fmt ( ""%d"" , i )"		5584866	1					
ANR	5584888	CallExpression	"sdb_fmt ( ""%d"" , i )"		5584866	0					
ANR	5584889	Callee	sdb_fmt		5584866	0					
ANR	5584890	Identifier	sdb_fmt		5584866	0					
ANR	5584891	ArgumentList	"""%d"""		5584866	1					
ANR	5584892	Argument	"""%d"""		5584866	0					
ANR	5584893	PrimaryExpression	"""%d"""		5584866	0					
ANR	5584894	Argument	i		5584866	1					
ANR	5584895	Identifier	i		5584866	0					
ANR	5584896	ReturnStatement	return j ;	219:1:3827:3835	5584866	1	True				
ANR	5584897	Identifier	j		5584866	0					
ANR	5584898	ReturnType	R_API PJ *		5584866	1					
ANR	5584899	Identifier	pj_i		5584866	2					
ANR	5584900	ParameterList	"PJ * j , int i"		5584866	3					
ANR	5584901	Parameter	PJ * j	214:15:3748:3752	5584866	0	True				
ANR	5584902	ParameterType	PJ *		5584866	0					
ANR	5584903	Identifier	j		5584866	1					
ANR	5584904	Parameter	int i	214:22:3755:3759	5584866	1	True				
ANR	5584905	ParameterType	int		5584866	0					
ANR	5584906	Identifier	i		5584866	1					
ANR	5584907	CFGEntryNode	ENTRY		5584866		True				
ANR	5584908	CFGExitNode	EXIT		5584866		True				
ANR	5584909	Symbol	i		5584866						
ANR	5584910	Symbol	j		5584866						
ANR	5584911	Symbol	sdb_fmt		5584866						
ANR	5584912	Function	pj_fmt	222:0:3840:5133							
ANR	5584913	FunctionDef	"pj_fmt (PrintfCallback p , const char * fmt)"		5584912	0					
ANR	5584914	CompoundStatement		222:59:3899:5133	5584912	0					
ANR	5584915	IdentifierDeclStatement	va_list ap ;	223:1:3902:3912	5584912	0	True				
ANR	5584916	IdentifierDecl	ap		5584912	0					
ANR	5584917	IdentifierDeclType	va_list		5584912	0					
ANR	5584918	Identifier	ap		5584912	1					
ANR	5584919	ExpressionStatement	"va_start ( ap , fmt )"	224:1:3915:3933	5584912	1	True				
ANR	5584920	CallExpression	"va_start ( ap , fmt )"		5584912	0					
ANR	5584921	Callee	va_start		5584912	0					
ANR	5584922	Identifier	va_start		5584912	0					
ANR	5584923	ArgumentList	ap		5584912	1					
ANR	5584924	Argument	ap		5584912	0					
ANR	5584925	Identifier	ap		5584912	0					
ANR	5584926	Argument	fmt		5584912	1					
ANR	5584927	Identifier	fmt		5584912	0					
ANR	5584928	IdentifierDeclStatement	char ch [ 2 ] = { 0 } ;	226:1:3937:3955	5584912	2	True				
ANR	5584929	IdentifierDecl	ch [ 2 ] = { 0 }		5584912	0					
ANR	5584930	IdentifierDeclType	char [ 2 ]		5584912	0					
ANR	5584931	Identifier	ch		5584912	1					
ANR	5584932	PrimaryExpression	2		5584912	2					
ANR	5584933	AssignmentExpression	ch [ 2 ] = { 0 }		5584912	3		=			
ANR	5584934	Identifier	ch		5584912	0					
ANR	5584935	InitializerList	0		5584912	1					
ANR	5584936	PrimaryExpression	0		5584912	0					
ANR	5584937	IdentifierDeclStatement	PJ * j = pj_new ( ) ;	227:1:3958:3975	5584912	3	True				
ANR	5584938	IdentifierDecl	* j = pj_new ( )		5584912	0					
ANR	5584939	IdentifierDeclType	PJ *		5584912	0					
ANR	5584940	Identifier	j		5584912	1					
ANR	5584941	AssignmentExpression	* j = pj_new ( )		5584912	2		=			
ANR	5584942	Identifier	j		5584912	0					
ANR	5584943	CallExpression	pj_new ( )		5584912	1					
ANR	5584944	Callee	pj_new		5584912	0					
ANR	5584945	Identifier	pj_new		5584912	0					
ANR	5584946	ArgumentList			5584912	1					
ANR	5584947	WhileStatement	while ( * fmt )		5584912	4					
ANR	5584948	Condition	* fmt	228:8:3985:3988	5584912	0	True				
ANR	5584949	UnaryOperationExpression	* fmt		5584912	0					
ANR	5584950	UnaryOperator	*		5584912	0					
ANR	5584951	Identifier	fmt		5584912	1					
ANR	5584952	CompoundStatement		7:14:91:91	5584912	1					
ANR	5584953	ExpressionStatement	j -> is_first = true	229:2:3995:4013	5584912	0	True				
ANR	5584954	AssignmentExpression	j -> is_first = true		5584912	0		=			
ANR	5584955	PtrMemberAccess	j -> is_first		5584912	0					
ANR	5584956	Identifier	j		5584912	0					
ANR	5584957	Identifier	is_first		5584912	1					
ANR	5584958	Identifier	true		5584912	1					
ANR	5584959	ExpressionStatement	ch [ 0 ] = * fmt	230:2:4017:4029	5584912	1	True				
ANR	5584960	AssignmentExpression	ch [ 0 ] = * fmt		5584912	0		=			
ANR	5584961	ArrayIndexing	ch [ 0 ]		5584912	0					
ANR	5584962	Identifier	ch		5584912	0					
ANR	5584963	PrimaryExpression	0		5584912	1					
ANR	5584964	UnaryOperationExpression	* fmt		5584912	1					
ANR	5584965	UnaryOperator	*		5584912	0					
ANR	5584966	Identifier	fmt		5584912	1					
ANR	5584967	SwitchStatement	switch ( * fmt )		5584912	2					
ANR	5584968	Condition	* fmt	231:10:4041:4044	5584912	0	True				
ANR	5584969	UnaryOperationExpression	* fmt		5584912	0					
ANR	5584970	UnaryOperator	*		5584912	0					
ANR	5584971	Identifier	fmt		5584912	1					
ANR	5584972	CompoundStatement		10:16:147:147	5584912	1					
ANR	5584973	Label	case '\\\\' :	232:2:4051:4060	5584912	0	True				
ANR	5584974	ExpressionStatement	fmt ++	233:3:4065:4070	5584912	1	True				
ANR	5584975	PostIncDecOperationExpression	fmt ++		5584912	0					
ANR	5584976	Identifier	fmt		5584912	0					
ANR	5584977	IncDec	++		5584912	1					
ANR	5584978	SwitchStatement	switch ( * fmt )		5584912	2					
ANR	5584979	Condition	* fmt	234:11:4083:4086	5584912	0	True				
ANR	5584980	UnaryOperationExpression	* fmt		5584912	0					
ANR	5584981	UnaryOperator	*		5584912	0					
ANR	5584982	Identifier	fmt		5584912	1					
ANR	5584983	CompoundStatement		13:17:189:189	5584912	1					
ANR	5584984	Label	case 'e' :	236:3:4121:4129	5584912	0	True				
ANR	5584985	ExpressionStatement	"pj_raw ( j , ""\\x1b"" )"	237:4:4135:4153	5584912	1	True				
ANR	5584986	CallExpression	"pj_raw ( j , ""\\x1b"" )"		5584912	0					
ANR	5584987	Callee	pj_raw		5584912	0					
ANR	5584988	Identifier	pj_raw		5584912	0					
ANR	5584989	ArgumentList	j		5584912	1					
ANR	5584990	Argument	j		5584912	0					
ANR	5584991	Identifier	j		5584912	0					
ANR	5584992	Argument	"""\\x1b"""		5584912	1					
ANR	5584993	PrimaryExpression	"""\\x1b"""		5584912	0					
ANR	5584994	BreakStatement	break ;	238:4:4159:4164	5584912	2	True				
ANR	5584995	Label	case 'r' :	239:3:4169:4177	5584912	3	True				
ANR	5584996	ExpressionStatement	"pj_raw ( j , ""\\r"" )"	240:4:4183:4199	5584912	4	True				
ANR	5584997	CallExpression	"pj_raw ( j , ""\\r"" )"		5584912	0					
ANR	5584998	Callee	pj_raw		5584912	0					
ANR	5584999	Identifier	pj_raw		5584912	0					
ANR	5585000	ArgumentList	j		5584912	1					
ANR	5585001	Argument	j		5584912	0					
ANR	5585002	Identifier	j		5584912	0					
ANR	5585003	Argument	"""\\r"""		5584912	1					
ANR	5585004	PrimaryExpression	"""\\r"""		5584912	0					
ANR	5585005	BreakStatement	break ;	241:4:4205:4210	5584912	5	True				
ANR	5585006	Label	case 'n' :	242:3:4215:4223	5584912	6	True				
ANR	5585007	ExpressionStatement	"pj_raw ( j , ""\\n"" )"	243:4:4229:4245	5584912	7	True				
ANR	5585008	CallExpression	"pj_raw ( j , ""\\n"" )"		5584912	0					
ANR	5585009	Callee	pj_raw		5584912	0					
ANR	5585010	Identifier	pj_raw		5584912	0					
ANR	5585011	ArgumentList	j		5584912	1					
ANR	5585012	Argument	j		5584912	0					
ANR	5585013	Identifier	j		5584912	0					
ANR	5585014	Argument	"""\\n"""		5584912	1					
ANR	5585015	PrimaryExpression	"""\\n"""		5584912	0					
ANR	5585016	BreakStatement	break ;	244:4:4251:4256	5584912	8	True				
ANR	5585017	Label	case 'b' :	245:3:4261:4269	5584912	9	True				
ANR	5585018	ExpressionStatement	"pj_raw ( j , ""\\b"" )"	246:4:4275:4291	5584912	10	True				
ANR	5585019	CallExpression	"pj_raw ( j , ""\\b"" )"		5584912	0					
ANR	5585020	Callee	pj_raw		5584912	0					
ANR	5585021	Identifier	pj_raw		5584912	0					
ANR	5585022	ArgumentList	j		5584912	1					
ANR	5585023	Argument	j		5584912	0					
ANR	5585024	Identifier	j		5584912	0					
ANR	5585025	Argument	"""\\b"""		5584912	1					
ANR	5585026	PrimaryExpression	"""\\b"""		5584912	0					
ANR	5585027	BreakStatement	break ;	247:4:4297:4302	5584912	11	True				
ANR	5585028	BreakStatement	break ;	249:3:4312:4317	5584912	3	True				
ANR	5585029	Label	case '\\'' :	250:2:4321:4330	5584912	4	True				
ANR	5585030	ExpressionStatement	"pj_raw ( j , ""\\"""" )"	251:3:4335:4351	5584912	5	True				
ANR	5585031	CallExpression	"pj_raw ( j , ""\\"""" )"		5584912	0					
ANR	5585032	Callee	pj_raw		5584912	0					
ANR	5585033	Identifier	pj_raw		5584912	0					
ANR	5585034	ArgumentList	j		5584912	1					
ANR	5585035	Argument	j		5584912	0					
ANR	5585036	Identifier	j		5584912	0					
ANR	5585037	Argument	"""\\"""""		5584912	1					
ANR	5585038	PrimaryExpression	"""\\"""""		5584912	0					
ANR	5585039	BreakStatement	break ;	252:3:4356:4361	5584912	6	True				
ANR	5585040	Label	case '%' :	253:2:4365:4373	5584912	7	True				
ANR	5585041	ExpressionStatement	fmt ++	254:3:4378:4383	5584912	8	True				
ANR	5585042	PostIncDecOperationExpression	fmt ++		5584912	0					
ANR	5585043	Identifier	fmt		5584912	0					
ANR	5585044	IncDec	++		5584912	1					
ANR	5585045	SwitchStatement	switch ( * fmt )		5584912	9					
ANR	5585046	Condition	* fmt	255:11:4396:4399	5584912	0	True				
ANR	5585047	UnaryOperationExpression	* fmt		5584912	0					
ANR	5585048	UnaryOperator	*		5584912	0					
ANR	5585049	Identifier	fmt		5584912	1					
ANR	5585050	CompoundStatement		34:17:502:502	5584912	1					
ANR	5585051	Label	case 'b' :	256:3:4407:4415	5584912	0	True				
ANR	5585052	ExpressionStatement	"pj_b ( j , va_arg ( ap , int ) )"	257:4:4421:4447	5584912	1	True				
ANR	5585053	CallExpression	"pj_b ( j , va_arg ( ap , int ) )"		5584912	0					
ANR	5585054	Callee	pj_b		5584912	0					
ANR	5585055	Identifier	pj_b		5584912	0					
ANR	5585056	ArgumentList	j		5584912	1					
ANR	5585057	Argument	j		5584912	0					
ANR	5585058	Identifier	j		5584912	0					
ANR	5585059	Argument	"va_arg ( ap , int )"		5584912	1					
ANR	5585060	CallExpression	"va_arg ( ap , int )"		5584912	0					
ANR	5585061	Callee	va_arg		5584912	0					
ANR	5585062	Identifier	va_arg		5584912	0					
ANR	5585063	ArgumentList	ap		5584912	1					
ANR	5585064	Argument	ap		5584912	0					
ANR	5585065	Identifier	ap		5584912	0					
ANR	5585066	Argument	int		5584912	1					
ANR	5585067	Identifier	int		5584912	0					
ANR	5585068	BreakStatement	break ;	258:4:4453:4458	5584912	2	True				
ANR	5585069	Label	case 's' :	259:3:4463:4471	5584912	3	True				
ANR	5585070	Statement	pj_s	260:4:4477:4480	5584912	4	True				
ANR	5585071	Statement	(	260:9:4482:4482	5584912	5	True				
ANR	5585072	Statement	j	260:10:4483:4483	5584912	6	True				
ANR	5585073	Statement	","	260:11:4484:4484	5584912	7	True				
ANR	5585074	Statement	va_arg	260:13:4486:4491	5584912	8	True				
ANR	5585075	Statement	(	260:20:4493:4493	5584912	9	True				
ANR	5585076	Statement	ap	260:21:4494:4495	5584912	10	True				
ANR	5585077	Statement	","	260:23:4496:4496	5584912	11	True				
ANR	5585078	Statement	const	260:25:4498:4502	5584912	12	True				
ANR	5585079	Statement	char	260:31:4504:4507	5584912	13	True				
ANR	5585080	Statement	*	260:36:4509:4509	5584912	14	True				
ANR	5585081	Statement	)	260:37:4510:4510	5584912	15	True				
ANR	5585082	Statement	)	260:38:4511:4511	5584912	16	True				
ANR	5585083	ExpressionStatement		260:39:4512:4512	5584912	17	True				
ANR	5585084	BreakStatement	break ;	261:4:4518:4523	5584912	18	True				
ANR	5585085	Label	case 'S' :	262:3:4528:4536	5584912	19	True				
ANR	5585086	CompoundStatement		43:4:691:729	5584912	20					
ANR	5585087	Statement	const	263:4:4544:4548	5584912	0	True				
ANR	5585088	Statement	char	263:10:4550:4553	5584912	1	True				
ANR	5585089	Statement	*	263:15:4555:4555	5584912	2	True				
ANR	5585090	Statement	s	263:16:4556:4556	5584912	3	True				
ANR	5585091	Statement	=	263:18:4558:4558	5584912	4	True				
ANR	5585092	Statement	va_arg	263:20:4560:4565	5584912	5	True				
ANR	5585093	Statement	(	263:27:4567:4567	5584912	6	True				
ANR	5585094	Statement	ap	263:28:4568:4569	5584912	7	True				
ANR	5585095	Statement	","	263:30:4570:4570	5584912	8	True				
ANR	5585096	Statement	const	263:32:4572:4576	5584912	9	True				
ANR	5585097	Statement	char	263:38:4578:4581	5584912	10	True				
ANR	5585098	Statement	*	263:43:4583:4583	5584912	11	True				
ANR	5585099	Statement	)	263:44:4584:4584	5584912	12	True				
ANR	5585100	ExpressionStatement		263:45:4585:4585	5584912	13	True				
ANR	5585101	IdentifierDeclStatement	"char * es = r_base64_encode_dyn ( s , - 1 ) ;"	264:4:4591:4629	5584912	14	True				
ANR	5585102	IdentifierDecl	"* es = r_base64_encode_dyn ( s , - 1 )"		5584912	0					
ANR	5585103	IdentifierDeclType	char *		5584912	0					
ANR	5585104	Identifier	es		5584912	1					
ANR	5585105	AssignmentExpression	"* es = r_base64_encode_dyn ( s , - 1 )"		5584912	2		=			
ANR	5585106	Identifier	es		5584912	0					
ANR	5585107	CallExpression	"r_base64_encode_dyn ( s , - 1 )"		5584912	1					
ANR	5585108	Callee	r_base64_encode_dyn		5584912	0					
ANR	5585109	Identifier	r_base64_encode_dyn		5584912	0					
ANR	5585110	ArgumentList	s		5584912	1					
ANR	5585111	Argument	s		5584912	0					
ANR	5585112	Identifier	s		5584912	0					
ANR	5585113	Argument	- 1		5584912	1					
ANR	5585114	UnaryOperationExpression	- 1		5584912	0					
ANR	5585115	UnaryOperator	-		5584912	0					
ANR	5585116	PrimaryExpression	1		5584912	1					
ANR	5585117	ExpressionStatement	"pj_s ( j , es )"	265:4:4635:4647	5584912	15	True				
ANR	5585118	CallExpression	"pj_s ( j , es )"		5584912	0					
ANR	5585119	Callee	pj_s		5584912	0					
ANR	5585120	Identifier	pj_s		5584912	0					
ANR	5585121	ArgumentList	j		5584912	1					
ANR	5585122	Argument	j		5584912	0					
ANR	5585123	Identifier	j		5584912	0					
ANR	5585124	Argument	es		5584912	1					
ANR	5585125	Identifier	es		5584912	0					
ANR	5585126	ExpressionStatement	free ( es )	266:4:4653:4662	5584912	16	True				
ANR	5585127	CallExpression	free ( es )		5584912	0					
ANR	5585128	Callee	free		5584912	0					
ANR	5585129	Identifier	free		5584912	0					
ANR	5585130	ArgumentList	es		5584912	1					
ANR	5585131	Argument	es		5584912	0					
ANR	5585132	Identifier	es		5584912	0					
ANR	5585133	BreakStatement	break ;	267:5:4669:4674	5584912	21	True				
ANR	5585134	Label	case 'n' :	268:3:4679:4687	5584912	22	True				
ANR	5585135	ExpressionStatement	"pj_n ( j , va_arg ( ap , ut64 ) )"	269:4:4693:4720	5584912	23	True				
ANR	5585136	CallExpression	"pj_n ( j , va_arg ( ap , ut64 ) )"		5584912	0					
ANR	5585137	Callee	pj_n		5584912	0					
ANR	5585138	Identifier	pj_n		5584912	0					
ANR	5585139	ArgumentList	j		5584912	1					
ANR	5585140	Argument	j		5584912	0					
ANR	5585141	Identifier	j		5584912	0					
ANR	5585142	Argument	"va_arg ( ap , ut64 )"		5584912	1					
ANR	5585143	CallExpression	"va_arg ( ap , ut64 )"		5584912	0					
ANR	5585144	Callee	va_arg		5584912	0					
ANR	5585145	Identifier	va_arg		5584912	0					
ANR	5585146	ArgumentList	ap		5584912	1					
ANR	5585147	Argument	ap		5584912	0					
ANR	5585148	Identifier	ap		5584912	0					
ANR	5585149	Argument	ut64		5584912	1					
ANR	5585150	Identifier	ut64		5584912	0					
ANR	5585151	BreakStatement	break ;	270:4:4726:4731	5584912	24	True				
ANR	5585152	Label	case 'd' :	271:3:4736:4744	5584912	25	True				
ANR	5585153	ExpressionStatement	"pj_d ( j , va_arg ( ap , double ) )"	272:4:4750:4779	5584912	26	True				
ANR	5585154	CallExpression	"pj_d ( j , va_arg ( ap , double ) )"		5584912	0					
ANR	5585155	Callee	pj_d		5584912	0					
ANR	5585156	Identifier	pj_d		5584912	0					
ANR	5585157	ArgumentList	j		5584912	1					
ANR	5585158	Argument	j		5584912	0					
ANR	5585159	Identifier	j		5584912	0					
ANR	5585160	Argument	"va_arg ( ap , double )"		5584912	1					
ANR	5585161	CallExpression	"va_arg ( ap , double )"		5584912	0					
ANR	5585162	Callee	va_arg		5584912	0					
ANR	5585163	Identifier	va_arg		5584912	0					
ANR	5585164	ArgumentList	ap		5584912	1					
ANR	5585165	Argument	ap		5584912	0					
ANR	5585166	Identifier	ap		5584912	0					
ANR	5585167	Argument	double		5584912	1					
ANR	5585168	Identifier	double		5584912	0					
ANR	5585169	BreakStatement	break ;	273:4:4785:4790	5584912	27	True				
ANR	5585170	Label	case 'i' :	274:3:4795:4803	5584912	28	True				
ANR	5585171	ExpressionStatement	"pj_i ( j , va_arg ( ap , int ) )"	275:4:4809:4835	5584912	29	True				
ANR	5585172	CallExpression	"pj_i ( j , va_arg ( ap , int ) )"		5584912	0					
ANR	5585173	Callee	pj_i		5584912	0					
ANR	5585174	Identifier	pj_i		5584912	0					
ANR	5585175	ArgumentList	j		5584912	1					
ANR	5585176	Argument	j		5584912	0					
ANR	5585177	Identifier	j		5584912	0					
ANR	5585178	Argument	"va_arg ( ap , int )"		5584912	1					
ANR	5585179	CallExpression	"va_arg ( ap , int )"		5584912	0					
ANR	5585180	Callee	va_arg		5584912	0					
ANR	5585181	Identifier	va_arg		5584912	0					
ANR	5585182	ArgumentList	ap		5584912	1					
ANR	5585183	Argument	ap		5584912	0					
ANR	5585184	Identifier	ap		5584912	0					
ANR	5585185	Argument	int		5584912	1					
ANR	5585186	Identifier	int		5584912	0					
ANR	5585187	BreakStatement	break ;	276:4:4841:4846	5584912	30	True				
ANR	5585188	Label	default :	277:3:4851:4858	5584912	31	True				
ANR	5585189	Identifier	default		5584912	0					
ANR	5585190	ExpressionStatement	"eprintf ( ""Invalid format\\n"" )"	278:4:4864:4892	5584912	32	True				
ANR	5585191	CallExpression	"eprintf ( ""Invalid format\\n"" )"		5584912	0					
ANR	5585192	Callee	eprintf		5584912	0					
ANR	5585193	Identifier	eprintf		5584912	0					
ANR	5585194	ArgumentList	"""Invalid format\\n"""		5584912	1					
ANR	5585195	Argument	"""Invalid format\\n"""		5584912	0					
ANR	5585196	PrimaryExpression	"""Invalid format\\n"""		5584912	0					
ANR	5585197	BreakStatement	break ;	279:4:4898:4903	5584912	33	True				
ANR	5585198	BreakStatement	break ;	281:3:4913:4918	5584912	10	True				
ANR	5585199	Label	default :	282:2:4922:4929	5584912	11	True				
ANR	5585200	Identifier	default		5584912	0					
ANR	5585201	ExpressionStatement	ch [ 0 ] = * fmt	283:3:4934:4946	5584912	12	True				
ANR	5585202	AssignmentExpression	ch [ 0 ] = * fmt		5584912	0		=			
ANR	5585203	ArrayIndexing	ch [ 0 ]		5584912	0					
ANR	5585204	Identifier	ch		5584912	0					
ANR	5585205	PrimaryExpression	0		5584912	1					
ANR	5585206	UnaryOperationExpression	* fmt		5584912	1					
ANR	5585207	UnaryOperator	*		5584912	0					
ANR	5585208	Identifier	fmt		5584912	1					
ANR	5585209	ExpressionStatement	"pj_raw ( j , ch )"	284:3:4951:4965	5584912	13	True				
ANR	5585210	CallExpression	"pj_raw ( j , ch )"		5584912	0					
ANR	5585211	Callee	pj_raw		5584912	0					
ANR	5585212	Identifier	pj_raw		5584912	0					
ANR	5585213	ArgumentList	j		5584912	1					
ANR	5585214	Argument	j		5584912	0					
ANR	5585215	Identifier	j		5584912	0					
ANR	5585216	Argument	ch		5584912	1					
ANR	5585217	Identifier	ch		5584912	0					
ANR	5585218	BreakStatement	break ;	285:3:4970:4975	5584912	14	True				
ANR	5585219	ExpressionStatement	fmt ++	287:2:4983:4988	5584912	3	True				
ANR	5585220	PostIncDecOperationExpression	fmt ++		5584912	0					
ANR	5585221	Identifier	fmt		5584912	0					
ANR	5585222	IncDec	++		5584912	1					
ANR	5585223	IdentifierDeclStatement	char * ret = NULL ;	289:1:4994:5010	5584912	5	True				
ANR	5585224	IdentifierDecl	* ret = NULL		5584912	0					
ANR	5585225	IdentifierDeclType	char *		5584912	0					
ANR	5585226	Identifier	ret		5584912	1					
ANR	5585227	AssignmentExpression	* ret = NULL		5584912	2		=			
ANR	5585228	Identifier	NULL		5584912	0					
ANR	5585229	Identifier	NULL		5584912	1					
ANR	5585230	IfStatement	if ( p )		5584912	6					
ANR	5585231	Condition	p	290:5:5017:5017	5584912	0	True				
ANR	5585232	Identifier	p		5584912	0					
ANR	5585233	CompoundStatement		69:8:1120:1120	5584912	1					
ANR	5585234	ExpressionStatement	"p ( ""%s"" , r_strbuf_get ( j -> sb ) )"	291:2:5024:5054	5584912	0	True				
ANR	5585235	CallExpression	"p ( ""%s"" , r_strbuf_get ( j -> sb ) )"		5584912	0					
ANR	5585236	Callee	p		5584912	0					
ANR	5585237	Identifier	p		5584912	0					
ANR	5585238	ArgumentList	"""%s"""		5584912	1					
ANR	5585239	Argument	"""%s"""		5584912	0					
ANR	5585240	PrimaryExpression	"""%s"""		5584912	0					
ANR	5585241	Argument	r_strbuf_get ( j -> sb )		5584912	1					
ANR	5585242	CallExpression	r_strbuf_get ( j -> sb )		5584912	0					
ANR	5585243	Callee	r_strbuf_get		5584912	0					
ANR	5585244	Identifier	r_strbuf_get		5584912	0					
ANR	5585245	ArgumentList	j -> sb		5584912	1					
ANR	5585246	Argument	j -> sb		5584912	0					
ANR	5585247	PtrMemberAccess	j -> sb		5584912	0					
ANR	5585248	Identifier	j		5584912	0					
ANR	5585249	Identifier	sb		5584912	1					
ANR	5585250	ExpressionStatement	pj_free ( j )	292:2:5058:5069	5584912	1	True				
ANR	5585251	CallExpression	pj_free ( j )		5584912	0					
ANR	5585252	Callee	pj_free		5584912	0					
ANR	5585253	Identifier	pj_free		5584912	0					
ANR	5585254	ArgumentList	j		5584912	1					
ANR	5585255	Argument	j		5584912	0					
ANR	5585256	Identifier	j		5584912	0					
ANR	5585257	ElseStatement	else		5584912	0					
ANR	5585258	CompoundStatement		72:8:1179:1179	5584912	0					
ANR	5585259	ExpressionStatement	ret = pj_drain ( j )	294:2:5083:5101	5584912	0	True				
ANR	5585260	AssignmentExpression	ret = pj_drain ( j )		5584912	0		=			
ANR	5585261	Identifier	ret		5584912	0					
ANR	5585262	CallExpression	pj_drain ( j )		5584912	1					
ANR	5585263	Callee	pj_drain		5584912	0					
ANR	5585264	Identifier	pj_drain		5584912	0					
ANR	5585265	ArgumentList	j		5584912	1					
ANR	5585266	Argument	j		5584912	0					
ANR	5585267	Identifier	j		5584912	0					
ANR	5585268	ExpressionStatement	va_end ( ap )	296:1:5107:5118	5584912	7	True				
ANR	5585269	CallExpression	va_end ( ap )		5584912	0					
ANR	5585270	Callee	va_end		5584912	0					
ANR	5585271	Identifier	va_end		5584912	0					
ANR	5585272	ArgumentList	ap		5584912	1					
ANR	5585273	Argument	ap		5584912	0					
ANR	5585274	Identifier	ap		5584912	0					
ANR	5585275	ReturnStatement	return ret ;	297:1:5121:5131	5584912	8	True				
ANR	5585276	Identifier	ret		5584912	0					
ANR	5585277	ReturnType	R_API char *		5584912	1					
ANR	5585278	Identifier	pj_fmt		5584912	2					
ANR	5585279	ParameterList	"PrintfCallback p , const char * fmt"		5584912	3					
ANR	5585280	Parameter	PrintfCallback p	222:19:3859:3874	5584912	0	True				
ANR	5585281	ParameterType	PrintfCallback		5584912	0					
ANR	5585282	Identifier	p		5584912	1					
ANR	5585283	Parameter	const char * fmt	222:37:3877:3891	5584912	1	True				
ANR	5585284	ParameterType	const char *		5584912	0					
ANR	5585285	Identifier	fmt		5584912	1					
ANR	5585286	CFGEntryNode	ENTRY		5584912		True				
ANR	5585287	CFGExitNode	EXIT		5584912		True				
ANR	5585288	Symbol	ret		5584912						
ANR	5585289	Symbol	NULL		5584912						
ANR	5585290	Symbol	ch		5584912						
ANR	5585291	Symbol	double		5584912						
ANR	5585292	Symbol	j -> is_first		5584912						
ANR	5585293	Symbol	* fmt		5584912						
ANR	5585294	Symbol	* ch		5584912						
ANR	5585295	Symbol	j		5584912						
ANR	5585296	Symbol	ut64		5584912						
ANR	5585297	Symbol	fmt		5584912						
ANR	5585298	Symbol	int		5584912						
ANR	5585299	Symbol	es		5584912						
ANR	5585300	Symbol	j -> sb		5584912						
ANR	5585301	Symbol	ap		5584912						
ANR	5585302	Symbol	p		5584912						
ANR	5585303	Symbol	r_base64_encode_dyn		5584912						
ANR	5585304	Symbol	s		5584912						
ANR	5585305	Symbol	* j		5584912						
ANR	5585306	Symbol	r_strbuf_get		5584912						
ANR	5585307	Symbol	true		5584912						
ANR	5585308	Symbol	pj_drain		5584912						
ANR	5585309	Symbol	pj_new		5584912						
ANR	5585310	Symbol	va_arg		5584912						
