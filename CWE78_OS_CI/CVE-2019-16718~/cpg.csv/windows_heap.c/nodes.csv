command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6498976	File	data/converged/CVE-2019-16718~_radare2/windows_heap.c								
ANR	6498977	DeclStmt									
ANR	6498978	Decl							size_t	size_t	RtlpHpHeapGlobalsOffset
ANR	6498979	DeclStmt									
ANR	6498980	Decl							size_t	size_t	RtlpLFHKeyOffset
ANR	6498981	Function	get_type	77:0:3049:3699							
ANR	6498982	FunctionDef	get_type (WPARAM flags)		6498981	0					
ANR	6498983	CompoundStatement		77:36:3085:3699	6498981	0					
ANR	6498984	IdentifierDeclStatement	"char * state = """" ;"	78:1:3088:3104	6498981	0	True				
ANR	6498985	IdentifierDecl	"* state = """""		6498981	0					
ANR	6498986	IdentifierDeclType	char *		6498981	0					
ANR	6498987	Identifier	state		6498981	1					
ANR	6498988	AssignmentExpression	"* state = """""		6498981	2		=			
ANR	6498989	Identifier	state		6498981	0					
ANR	6498990	PrimaryExpression	""""""		6498981	1					
ANR	6498991	SwitchStatement	switch ( flags & 0xFFFF )		6498981	1					
ANR	6498992	Condition	flags & 0xFFFF	79:9:3115:3128	6498981	0	True				
ANR	6498993	BitAndExpression	flags & 0xFFFF		6498981	0		&			
ANR	6498994	Identifier	flags		6498981	0					
ANR	6498995	PrimaryExpression	0xFFFF		6498981	1					
ANR	6498996	CompoundStatement		3:25:45:45	6498981	1					
ANR	6498997	Label	case LF32_FIXED :	80:1:3134:3149	6498981	0	True				
ANR	6498998	Identifier	LF32_FIXED		6498981	0					
ANR	6498999	ExpressionStatement	"state = ""(FIXED)"""	81:2:3153:3170	6498981	1	True				
ANR	6499000	AssignmentExpression	"state = ""(FIXED)"""		6498981	0		=			
ANR	6499001	Identifier	state		6498981	0					
ANR	6499002	PrimaryExpression	"""(FIXED)"""		6498981	1					
ANR	6499003	BreakStatement	break ;	82:2:3174:3179	6498981	2	True				
ANR	6499004	Label	case LF32_FREE :	83:1:3182:3196	6498981	3	True				
ANR	6499005	Identifier	LF32_FREE		6498981	0					
ANR	6499006	ExpressionStatement	"state = ""(FREE)"""	84:2:3200:3216	6498981	4	True				
ANR	6499007	AssignmentExpression	"state = ""(FREE)"""		6498981	0		=			
ANR	6499008	Identifier	state		6498981	0					
ANR	6499009	PrimaryExpression	"""(FREE)"""		6498981	1					
ANR	6499010	BreakStatement	break ;	85:2:3220:3225	6498981	5	True				
ANR	6499011	Label	case LF32_MOVEABLE :	86:1:3228:3246	6498981	6	True				
ANR	6499012	Identifier	LF32_MOVEABLE		6498981	0					
ANR	6499013	ExpressionStatement	"state = ""(MOVEABLE)"""	87:2:3250:3270	6498981	7	True				
ANR	6499014	AssignmentExpression	"state = ""(MOVEABLE)"""		6498981	0		=			
ANR	6499015	Identifier	state		6498981	0					
ANR	6499016	PrimaryExpression	"""(MOVEABLE)"""		6498981	1					
ANR	6499017	BreakStatement	break ;	88:2:3274:3279	6498981	8	True				
ANR	6499018	IdentifierDeclStatement	"char * heaptype = """" ;"	90:1:3285:3304	6498981	2	True				
ANR	6499019	IdentifierDecl	"* heaptype = """""		6498981	0					
ANR	6499020	IdentifierDeclType	char *		6498981	0					
ANR	6499021	Identifier	heaptype		6498981	1					
ANR	6499022	AssignmentExpression	"* heaptype = """""		6498981	2		=			
ANR	6499023	Identifier	heaptype		6498981	0					
ANR	6499024	PrimaryExpression	""""""		6498981	1					
ANR	6499025	IfStatement	if ( flags & SEGMENT_HEAP_BLOCK )		6498981	3					
ANR	6499026	Condition	flags & SEGMENT_HEAP_BLOCK	91:5:3311:3336	6498981	0	True				
ANR	6499027	BitAndExpression	flags & SEGMENT_HEAP_BLOCK		6498981	0		&			
ANR	6499028	Identifier	flags		6498981	0					
ANR	6499029	Identifier	SEGMENT_HEAP_BLOCK		6498981	1					
ANR	6499030	CompoundStatement		15:33:253:253	6498981	1					
ANR	6499031	ExpressionStatement	"heaptype = ""Segment"""	92:2:3343:3363	6498981	0	True				
ANR	6499032	AssignmentExpression	"heaptype = ""Segment"""		6498981	0		=			
ANR	6499033	Identifier	heaptype		6498981	0					
ANR	6499034	PrimaryExpression	"""Segment"""		6498981	1					
ANR	6499035	ElseStatement	else		6498981	0					
ANR	6499036	IfStatement	if ( flags & NT_BLOCK )		6498981	0					
ANR	6499037	Condition	flags & NT_BLOCK	93:12:3377:3392	6498981	0	True				
ANR	6499038	BitAndExpression	flags & NT_BLOCK		6498981	0		&			
ANR	6499039	Identifier	flags		6498981	0					
ANR	6499040	Identifier	NT_BLOCK		6498981	1					
ANR	6499041	CompoundStatement		17:30:309:309	6498981	1					
ANR	6499042	ExpressionStatement	"heaptype = ""NT"""	94:2:3399:3415	6498981	0	True				
ANR	6499043	AssignmentExpression	"heaptype = ""NT"""		6498981	0		=			
ANR	6499044	Identifier	heaptype		6498981	0					
ANR	6499045	PrimaryExpression	"""NT"""		6498981	1					
ANR	6499046	IdentifierDeclStatement	"char * type = """" ;"	96:1:3421:3436	6498981	4	True				
ANR	6499047	IdentifierDecl	"* type = """""		6498981	0					
ANR	6499048	IdentifierDeclType	char *		6498981	0					
ANR	6499049	Identifier	type		6498981	1					
ANR	6499050	AssignmentExpression	"* type = """""		6498981	2		=			
ANR	6499051	Identifier	type		6498981	0					
ANR	6499052	PrimaryExpression	""""""		6498981	1					
ANR	6499053	IfStatement	if ( flags & LFH_BLOCK )		6498981	5					
ANR	6499054	Condition	flags & LFH_BLOCK	97:5:3443:3459	6498981	0	True				
ANR	6499055	BitAndExpression	flags & LFH_BLOCK		6498981	0		&			
ANR	6499056	Identifier	flags		6498981	0					
ANR	6499057	Identifier	LFH_BLOCK		6498981	1					
ANR	6499058	CompoundStatement		21:24:376:376	6498981	1					
ANR	6499059	ExpressionStatement	"type = ""/LFH"""	98:2:3466:3479	6498981	0	True				
ANR	6499060	AssignmentExpression	"type = ""/LFH"""		6498981	0		=			
ANR	6499061	Identifier	type		6498981	0					
ANR	6499062	PrimaryExpression	"""/LFH"""		6498981	1					
ANR	6499063	ElseStatement	else		6498981	0					
ANR	6499064	IfStatement	if ( flags & LARGE_BLOCK )		6498981	0					
ANR	6499065	Condition	flags & LARGE_BLOCK	99:12:3493:3511	6498981	0	True				
ANR	6499066	BitAndExpression	flags & LARGE_BLOCK		6498981	0		&			
ANR	6499067	Identifier	flags		6498981	0					
ANR	6499068	Identifier	LARGE_BLOCK		6498981	1					
ANR	6499069	CompoundStatement		23:33:428:428	6498981	1					
ANR	6499070	ExpressionStatement	"type = ""/LARGE"""	100:2:3518:3533	6498981	0	True				
ANR	6499071	AssignmentExpression	"type = ""/LARGE"""		6498981	0		=			
ANR	6499072	Identifier	type		6498981	0					
ANR	6499073	PrimaryExpression	"""/LARGE"""		6498981	1					
ANR	6499074	ElseStatement	else		6498981	0					
ANR	6499075	IfStatement	if ( flags & BACKEND_BLOCK )		6498981	0					
ANR	6499076	Condition	flags & BACKEND_BLOCK	101:12:3547:3567	6498981	0	True				
ANR	6499077	BitAndExpression	flags & BACKEND_BLOCK		6498981	0		&			
ANR	6499078	Identifier	flags		6498981	0					
ANR	6499079	Identifier	BACKEND_BLOCK		6498981	1					
ANR	6499080	CompoundStatement		25:35:484:484	6498981	1					
ANR	6499081	ExpressionStatement	"type = ""/BACKEND"""	102:2:3574:3591	6498981	0	True				
ANR	6499082	AssignmentExpression	"type = ""/BACKEND"""		6498981	0		=			
ANR	6499083	Identifier	type		6498981	0					
ANR	6499084	PrimaryExpression	"""/BACKEND"""		6498981	1					
ANR	6499085	ElseStatement	else		6498981	0					
ANR	6499086	IfStatement	if ( flags & VS_BLOCK )		6498981	0					
ANR	6499087	Condition	flags & VS_BLOCK	103:12:3605:3620	6498981	0	True				
ANR	6499088	BitAndExpression	flags & VS_BLOCK		6498981	0		&			
ANR	6499089	Identifier	flags		6498981	0					
ANR	6499090	Identifier	VS_BLOCK		6498981	1					
ANR	6499091	CompoundStatement		27:30:537:537	6498981	1					
ANR	6499092	ExpressionStatement	"type = ""/VS"""	104:2:3627:3639	6498981	0	True				
ANR	6499093	AssignmentExpression	"type = ""/VS"""		6498981	0		=			
ANR	6499094	Identifier	type		6498981	0					
ANR	6499095	PrimaryExpression	"""/VS"""		6498981	1					
ANR	6499096	ReturnStatement	"return r_str_newf ( ""%s %s%s"" , state , heaptype , type ) ;"	106:1:3645:3697	6498981	6	True				
ANR	6499097	CallExpression	"r_str_newf ( ""%s %s%s"" , state , heaptype , type )"		6498981	0					
ANR	6499098	Callee	r_str_newf		6498981	0					
ANR	6499099	Identifier	r_str_newf		6498981	0					
ANR	6499100	ArgumentList	"""%s %s%s"""		6498981	1					
ANR	6499101	Argument	"""%s %s%s"""		6498981	0					
ANR	6499102	PrimaryExpression	"""%s %s%s"""		6498981	0					
ANR	6499103	Argument	state		6498981	1					
ANR	6499104	Identifier	state		6498981	0					
ANR	6499105	Argument	heaptype		6498981	2					
ANR	6499106	Identifier	heaptype		6498981	0					
ANR	6499107	Argument	type		6498981	3					
ANR	6499108	Identifier	type		6498981	0					
ANR	6499109	ReturnType	static char *		6498981	1					
ANR	6499110	Identifier	get_type		6498981	2					
ANR	6499111	ParameterList	WPARAM flags		6498981	3					
ANR	6499112	Parameter	WPARAM flags	77:22:3071:3082	6498981	0	True				
ANR	6499113	ParameterType	WPARAM		6498981	0					
ANR	6499114	Identifier	flags		6498981	1					
ANR	6499115	CFGEntryNode	ENTRY		6498981		True				
ANR	6499116	CFGExitNode	EXIT		6498981		True				
ANR	6499117	Symbol	heaptype		6498981						
ANR	6499118	Symbol	LARGE_BLOCK		6498981						
ANR	6499119	Symbol	VS_BLOCK		6498981						
ANR	6499120	Symbol	flags		6498981						
ANR	6499121	Symbol	SEGMENT_HEAP_BLOCK		6498981						
ANR	6499122	Symbol	LFH_BLOCK		6498981						
ANR	6499123	Symbol	state		6498981						
ANR	6499124	Symbol	BACKEND_BLOCK		6498981						
ANR	6499125	Symbol	r_str_newf		6498981						
ANR	6499126	Symbol	type		6498981						
ANR	6499127	Symbol	NT_BLOCK		6498981						
ANR	6499128	Function	init_func	109:0:3702:4476							
ANR	6499129	FunctionDef	init_func ()		6499128	0					
ANR	6499130	CompoundStatement		109:24:3726:4476	6499128	0					
ANR	6499131	IdentifierDeclStatement	"HANDLE ntdll = LoadLibrary ( TEXT ( ""ntdll.dll"" ) ) ;"	110:1:3729:3776	6499128	0	True				
ANR	6499132	IdentifierDecl	"ntdll = LoadLibrary ( TEXT ( ""ntdll.dll"" ) )"		6499128	0					
ANR	6499133	IdentifierDeclType	HANDLE		6499128	0					
ANR	6499134	Identifier	ntdll		6499128	1					
ANR	6499135	AssignmentExpression	"ntdll = LoadLibrary ( TEXT ( ""ntdll.dll"" ) )"		6499128	2		=			
ANR	6499136	Identifier	ntdll		6499128	0					
ANR	6499137	CallExpression	"LoadLibrary ( TEXT ( ""ntdll.dll"" ) )"		6499128	1					
ANR	6499138	Callee	LoadLibrary		6499128	0					
ANR	6499139	Identifier	LoadLibrary		6499128	0					
ANR	6499140	ArgumentList	"TEXT ( ""ntdll.dll"" )"		6499128	1					
ANR	6499141	Argument	"TEXT ( ""ntdll.dll"" )"		6499128	0					
ANR	6499142	CallExpression	"TEXT ( ""ntdll.dll"" )"		6499128	0					
ANR	6499143	Callee	TEXT		6499128	0					
ANR	6499144	Identifier	TEXT		6499128	0					
ANR	6499145	ArgumentList	"""ntdll.dll"""		6499128	1					
ANR	6499146	Argument	"""ntdll.dll"""		6499128	0					
ANR	6499147	PrimaryExpression	"""ntdll.dll"""		6499128	0					
ANR	6499148	IfStatement	if ( ! ntdll )		6499128	1					
ANR	6499149	Condition	! ntdll	111:5:3783:3788	6499128	0	True				
ANR	6499150	UnaryOperationExpression	! ntdll		6499128	0					
ANR	6499151	UnaryOperator	!		6499128	0					
ANR	6499152	Identifier	ntdll		6499128	1					
ANR	6499153	CompoundStatement		3:13:64:64	6499128	1					
ANR	6499154	ReturnStatement	return false ;	112:2:3795:3807	6499128	0	True				
ANR	6499155	Identifier	false		6499128	0					
ANR	6499156	IfStatement	if ( ! RtlCreateQueryDebugBuffer )		6499128	2					
ANR	6499157	Condition	! RtlCreateQueryDebugBuffer	114:5:3817:3842	6499128	0	True				
ANR	6499158	UnaryOperationExpression	! RtlCreateQueryDebugBuffer		6499128	0					
ANR	6499159	UnaryOperator	!		6499128	0					
ANR	6499160	Identifier	RtlCreateQueryDebugBuffer		6499128	1					
ANR	6499161	CompoundStatement		6:33:118:118	6499128	1					
ANR	6499162	Statement	RtlCreateQueryDebugBuffer	115:2:3849:3873	6499128	0	True				
ANR	6499163	Statement	=	115:28:3875:3875	6499128	1	True				
ANR	6499164	Statement	(	115:30:3877:3877	6499128	2	True				
ANR	6499165	Statement	PDEBUG_BUFFER	115:31:3878:3890	6499128	3	True				
ANR	6499166	Statement	(	115:45:3892:3892	6499128	4	True				
ANR	6499167	Statement	NTAPI	115:46:3893:3897	6499128	5	True				
ANR	6499168	Statement	*	115:52:3899:3899	6499128	6	True				
ANR	6499169	Statement	)	115:53:3900:3900	6499128	7	True				
ANR	6499170	Statement	(	115:54:3901:3901	6499128	8	True				
ANR	6499171	Statement	DWORD	115:55:3902:3906	6499128	9	True				
ANR	6499172	Statement	","	115:60:3907:3907	6499128	10	True				
ANR	6499173	Statement	BOOLEAN	115:62:3909:3915	6499128	11	True				
ANR	6499174	Statement	)	115:69:3916:3916	6499128	12	True				
ANR	6499175	Statement	)	115:70:3917:3917	6499128	13	True				
ANR	6499176	ExpressionStatement	"GetProcAddress ( ntdll , ""RtlCreateQueryDebugBuffer"" )"	115:71:3918:3969	6499128	14	True				
ANR	6499177	CallExpression	"GetProcAddress ( ntdll , ""RtlCreateQueryDebugBuffer"" )"		6499128	0					
ANR	6499178	Callee	GetProcAddress		6499128	0					
ANR	6499179	Identifier	GetProcAddress		6499128	0					
ANR	6499180	ArgumentList	ntdll		6499128	1					
ANR	6499181	Argument	ntdll		6499128	0					
ANR	6499182	Identifier	ntdll		6499128	0					
ANR	6499183	Argument	"""RtlCreateQueryDebugBuffer"""		6499128	1					
ANR	6499184	PrimaryExpression	"""RtlCreateQueryDebugBuffer"""		6499128	0					
ANR	6499185	IfStatement	if ( ! RtlQueryProcessDebugInformation )		6499128	3					
ANR	6499186	Condition	! RtlQueryProcessDebugInformation	117:5:3979:4010	6499128	0	True				
ANR	6499187	UnaryOperationExpression	! RtlQueryProcessDebugInformation		6499128	0					
ANR	6499188	UnaryOperator	!		6499128	0					
ANR	6499189	Identifier	RtlQueryProcessDebugInformation		6499128	1					
ANR	6499190	CompoundStatement		9:39:286:286	6499128	1					
ANR	6499191	Statement	RtlQueryProcessDebugInformation	118:2:4017:4047	6499128	0	True				
ANR	6499192	Statement	=	118:34:4049:4049	6499128	1	True				
ANR	6499193	Statement	(	118:36:4051:4051	6499128	2	True				
ANR	6499194	Statement	NTSTATUS	118:37:4052:4059	6499128	3	True				
ANR	6499195	Statement	(	118:46:4061:4061	6499128	4	True				
ANR	6499196	Statement	NTAPI	118:47:4062:4066	6499128	5	True				
ANR	6499197	Statement	*	118:53:4068:4068	6499128	6	True				
ANR	6499198	Statement	)	118:54:4069:4069	6499128	7	True				
ANR	6499199	Statement	(	118:55:4070:4070	6499128	8	True				
ANR	6499200	Statement	DWORD	118:56:4071:4075	6499128	9	True				
ANR	6499201	Statement	","	118:61:4076:4076	6499128	10	True				
ANR	6499202	Statement	DWORD	118:63:4078:4082	6499128	11	True				
ANR	6499203	Statement	","	118:68:4083:4083	6499128	12	True				
ANR	6499204	Statement	PDEBUG_BUFFER	118:70:4085:4097	6499128	13	True				
ANR	6499205	Statement	)	118:83:4098:4098	6499128	14	True				
ANR	6499206	Statement	)	118:84:4099:4099	6499128	15	True				
ANR	6499207	ExpressionStatement	"GetProcAddress ( ntdll , ""RtlQueryProcessDebugInformation"" )"	118:85:4100:4157	6499128	16	True				
ANR	6499208	CallExpression	"GetProcAddress ( ntdll , ""RtlQueryProcessDebugInformation"" )"		6499128	0					
ANR	6499209	Callee	GetProcAddress		6499128	0					
ANR	6499210	Identifier	GetProcAddress		6499128	0					
ANR	6499211	ArgumentList	ntdll		6499128	1					
ANR	6499212	Argument	ntdll		6499128	0					
ANR	6499213	Identifier	ntdll		6499128	0					
ANR	6499214	Argument	"""RtlQueryProcessDebugInformation"""		6499128	1					
ANR	6499215	PrimaryExpression	"""RtlQueryProcessDebugInformation"""		6499128	0					
ANR	6499216	IfStatement	if ( ! RtlDestroyQueryDebugBuffer )		6499128	4					
ANR	6499217	Condition	! RtlDestroyQueryDebugBuffer	120:5:4167:4193	6499128	0	True				
ANR	6499218	UnaryOperationExpression	! RtlDestroyQueryDebugBuffer		6499128	0					
ANR	6499219	UnaryOperator	!		6499128	0					
ANR	6499220	Identifier	RtlDestroyQueryDebugBuffer		6499128	1					
ANR	6499221	CompoundStatement		12:34:469:469	6499128	1					
ANR	6499222	Statement	RtlDestroyQueryDebugBuffer	121:2:4200:4225	6499128	0	True				
ANR	6499223	Statement	=	121:29:4227:4227	6499128	1	True				
ANR	6499224	Statement	(	121:31:4229:4229	6499128	2	True				
ANR	6499225	Statement	NTSTATUS	121:32:4230:4237	6499128	3	True				
ANR	6499226	Statement	(	121:41:4239:4239	6499128	4	True				
ANR	6499227	Statement	NTAPI	121:42:4240:4244	6499128	5	True				
ANR	6499228	Statement	*	121:48:4246:4246	6499128	6	True				
ANR	6499229	Statement	)	121:49:4247:4247	6499128	7	True				
ANR	6499230	Statement	(	121:50:4248:4248	6499128	8	True				
ANR	6499231	Statement	PDEBUG_BUFFER	121:51:4249:4261	6499128	9	True				
ANR	6499232	Statement	)	121:64:4262:4262	6499128	10	True				
ANR	6499233	Statement	)	121:65:4263:4263	6499128	11	True				
ANR	6499234	ExpressionStatement	"GetProcAddress ( ntdll , ""RtlDestroyQueryDebugBuffer"" )"	121:66:4264:4316	6499128	12	True				
ANR	6499235	CallExpression	"GetProcAddress ( ntdll , ""RtlDestroyQueryDebugBuffer"" )"		6499128	0					
ANR	6499236	Callee	GetProcAddress		6499128	0					
ANR	6499237	Identifier	GetProcAddress		6499128	0					
ANR	6499238	ArgumentList	ntdll		6499128	1					
ANR	6499239	Argument	ntdll		6499128	0					
ANR	6499240	Identifier	ntdll		6499128	0					
ANR	6499241	Argument	"""RtlDestroyQueryDebugBuffer"""		6499128	1					
ANR	6499242	PrimaryExpression	"""RtlDestroyQueryDebugBuffer"""		6499128	0					
ANR	6499243	IfStatement	if ( ! w32_NtQueryInformationProcess )		6499128	5					
ANR	6499244	Condition	! w32_NtQueryInformationProcess	123:5:4326:4355	6499128	0	True				
ANR	6499245	UnaryOperationExpression	! w32_NtQueryInformationProcess		6499128	0					
ANR	6499246	UnaryOperator	!		6499128	0					
ANR	6499247	Identifier	w32_NtQueryInformationProcess		6499128	1					
ANR	6499248	CompoundStatement		15:37:631:631	6499128	1					
ANR	6499249	ExpressionStatement	"w32_NtQueryInformationProcess = ( NTSTATUS * ) GetProcAddress ( ntdll , ""NtQueryInformationProcess"" )"	124:2:4362:4457	6499128	0	True				
ANR	6499250	AssignmentExpression	"w32_NtQueryInformationProcess = ( NTSTATUS * ) GetProcAddress ( ntdll , ""NtQueryInformationProcess"" )"		6499128	0		=			
ANR	6499251	Identifier	w32_NtQueryInformationProcess		6499128	0					
ANR	6499252	CastExpression	"( NTSTATUS * ) GetProcAddress ( ntdll , ""NtQueryInformationProcess"" )"		6499128	1					
ANR	6499253	CastTarget	NTSTATUS *		6499128	0					
ANR	6499254	CallExpression	"GetProcAddress ( ntdll , ""NtQueryInformationProcess"" )"		6499128	1					
ANR	6499255	Callee	GetProcAddress		6499128	0					
ANR	6499256	Identifier	GetProcAddress		6499128	0					
ANR	6499257	ArgumentList	ntdll		6499128	1					
ANR	6499258	Argument	ntdll		6499128	0					
ANR	6499259	Identifier	ntdll		6499128	0					
ANR	6499260	Argument	"""NtQueryInformationProcess"""		6499128	1					
ANR	6499261	PrimaryExpression	"""NtQueryInformationProcess"""		6499128	0					
ANR	6499262	ReturnStatement	return true ;	126:1:4463:4474	6499128	6	True				
ANR	6499263	Identifier	true		6499128	0					
ANR	6499264	ReturnType	static bool		6499128	1					
ANR	6499265	Identifier	init_func		6499128	2					
ANR	6499266	ParameterList			6499128	3					
ANR	6499267	CFGEntryNode	ENTRY		6499128		True				
ANR	6499268	CFGExitNode	EXIT		6499128		True				
ANR	6499269	Symbol	LoadLibrary		6499128						
ANR	6499270	Symbol	RtlCreateQueryDebugBuffer		6499128						
ANR	6499271	Symbol	w32_NtQueryInformationProcess		6499128						
ANR	6499272	Symbol	false		6499128						
ANR	6499273	Symbol	RtlDestroyQueryDebugBuffer		6499128						
ANR	6499274	Symbol	GetProcAddress		6499128						
ANR	6499275	Symbol	true		6499128						
ANR	6499276	Symbol	ntdll		6499128						
ANR	6499277	Symbol	TEXT		6499128						
ANR	6499278	Symbol	RtlQueryProcessDebugInformation		6499128						
ANR	6499279	Function	is_segment_heap	129:0:4479:4708							
ANR	6499280	FunctionDef	"is_segment_heap (HANDLE h_proc , PVOID heapBase)"		6499279	0					
ANR	6499281	CompoundStatement		129:59:4538:4708	6499279	0					
ANR	6499282	IdentifierDeclStatement	HEAP heap ;	130:1:4541:4550	6499279	0	True				
ANR	6499283	IdentifierDecl	heap		6499279	0					
ANR	6499284	IdentifierDeclType	HEAP		6499279	0					
ANR	6499285	Identifier	heap		6499279	1					
ANR	6499286	IfStatement	"if ( ReadProcessMemory ( h_proc , heapBase , & heap , sizeof ( HEAP ) , NULL ) )"		6499279	1					
ANR	6499287	Condition	"ReadProcessMemory ( h_proc , heapBase , & heap , sizeof ( HEAP ) , NULL )"	131:5:4557:4620	6499279	0	True				
ANR	6499288	CallExpression	"ReadProcessMemory ( h_proc , heapBase , & heap , sizeof ( HEAP ) , NULL )"		6499279	0					
ANR	6499289	Callee	ReadProcessMemory		6499279	0					
ANR	6499290	Identifier	ReadProcessMemory		6499279	0					
ANR	6499291	ArgumentList	h_proc		6499279	1					
ANR	6499292	Argument	h_proc		6499279	0					
ANR	6499293	Identifier	h_proc		6499279	0					
ANR	6499294	Argument	heapBase		6499279	1					
ANR	6499295	Identifier	heapBase		6499279	0					
ANR	6499296	Argument	& heap		6499279	2					
ANR	6499297	UnaryOperationExpression	& heap		6499279	0					
ANR	6499298	UnaryOperator	&		6499279	0					
ANR	6499299	Identifier	heap		6499279	1					
ANR	6499300	Argument	sizeof ( HEAP )		6499279	3					
ANR	6499301	SizeofExpression	sizeof ( HEAP )		6499279	0					
ANR	6499302	Sizeof	sizeof		6499279	0					
ANR	6499303	SizeofOperand	HEAP		6499279	1					
ANR	6499304	Argument	NULL		6499279	4					
ANR	6499305	Identifier	NULL		6499279	0					
ANR	6499306	CompoundStatement		3:71:84:84	6499279	1					
ANR	6499307	IfStatement	if ( heap . SegmentSignature == 0xddeeddee )		6499279	0					
ANR	6499308	Condition	heap . SegmentSignature == 0xddeeddee	132:6:4631:4665	6499279	0	True				
ANR	6499309	EqualityExpression	heap . SegmentSignature == 0xddeeddee		6499279	0		==			
ANR	6499310	MemberAccess	heap . SegmentSignature		6499279	0					
ANR	6499311	Identifier	heap		6499279	0					
ANR	6499312	Identifier	SegmentSignature		6499279	1					
ANR	6499313	PrimaryExpression	0xddeeddee		6499279	1					
ANR	6499314	CompoundStatement		4:43:129:129	6499279	1					
ANR	6499315	ReturnStatement	return true ;	133:3:4673:4684	6499279	0	True				
ANR	6499316	Identifier	true		6499279	0					
ANR	6499317	ReturnStatement	return false ;	136:1:4694:4706	6499279	2	True				
ANR	6499318	Identifier	false		6499279	0					
ANR	6499319	ReturnType	static bool		6499279	1					
ANR	6499320	Identifier	is_segment_heap		6499279	2					
ANR	6499321	ParameterList	"HANDLE h_proc , PVOID heapBase"		6499279	3					
ANR	6499322	Parameter	HANDLE h_proc	129:28:4507:4519	6499279	0	True				
ANR	6499323	ParameterType	HANDLE		6499279	0					
ANR	6499324	Identifier	h_proc		6499279	1					
ANR	6499325	Parameter	PVOID heapBase	129:43:4522:4535	6499279	1	True				
ANR	6499326	ParameterType	PVOID		6499279	0					
ANR	6499327	Identifier	heapBase		6499279	1					
ANR	6499328	CFGEntryNode	ENTRY		6499279		True				
ANR	6499329	CFGExitNode	EXIT		6499279		True				
ANR	6499330	Symbol	heapBase		6499279						
ANR	6499331	Symbol	NULL		6499279						
ANR	6499332	Symbol	heap . SegmentSignature		6499279						
ANR	6499333	Symbol	true		6499279						
ANR	6499334	Symbol	false		6499279						
ANR	6499335	Symbol	h_proc		6499279						
ANR	6499336	Symbol	heap		6499279						
ANR	6499337	Symbol	& heap		6499279						
ANR	6499338	Symbol	ReadProcessMemory		6499279						
ANR	6499339	Function	GetFirstHeapBlock	140:0:4782:5778							
ANR	6499340	FunctionDef	"GetFirstHeapBlock (PDEBUG_HEAP_INFORMATION heapInfo , PHeapBlock hb)"		6499339	0					
ANR	6499341	CompoundStatement		140:79:4861:5778	6499339	0					
ANR	6499342	ExpressionStatement	"r_return_val_if_fail ( heapInfo && hb , false )"	141:1:4864:4908	6499339	0	True				
ANR	6499343	CallExpression	"r_return_val_if_fail ( heapInfo && hb , false )"		6499339	0					
ANR	6499344	Callee	r_return_val_if_fail		6499339	0					
ANR	6499345	Identifier	r_return_val_if_fail		6499339	0					
ANR	6499346	ArgumentList	heapInfo && hb		6499339	1					
ANR	6499347	Argument	heapInfo && hb		6499339	0					
ANR	6499348	AndExpression	heapInfo && hb		6499339	0		&&			
ANR	6499349	Identifier	heapInfo		6499339	0					
ANR	6499350	Identifier	hb		6499339	1					
ANR	6499351	Argument	false		6499339	1					
ANR	6499352	Identifier	false		6499339	0					
ANR	6499353	IdentifierDeclStatement	PHeapBlockBasicInfo block ;	142:1:4911:4936	6499339	1	True				
ANR	6499354	IdentifierDecl	block		6499339	0					
ANR	6499355	IdentifierDeclType	PHeapBlockBasicInfo		6499339	0					
ANR	6499356	Identifier	block		6499339	1					
ANR	6499357	ExpressionStatement	hb -> index = 0	144:1:4940:4953	6499339	2	True				
ANR	6499358	AssignmentExpression	hb -> index = 0		6499339	0		=			
ANR	6499359	PtrMemberAccess	hb -> index		6499339	0					
ANR	6499360	Identifier	hb		6499339	0					
ANR	6499361	Identifier	index		6499339	1					
ANR	6499362	PrimaryExpression	0		6499339	1					
ANR	6499363	ExpressionStatement	hb -> dwAddress = 0	145:1:4956:4973	6499339	3	True				
ANR	6499364	AssignmentExpression	hb -> dwAddress = 0		6499339	0		=			
ANR	6499365	PtrMemberAccess	hb -> dwAddress		6499339	0					
ANR	6499366	Identifier	hb		6499339	0					
ANR	6499367	Identifier	dwAddress		6499339	1					
ANR	6499368	PrimaryExpression	0		6499339	1					
ANR	6499369	ExpressionStatement	hb -> dwFlags = 0	146:1:4976:4991	6499339	4	True				
ANR	6499370	AssignmentExpression	hb -> dwFlags = 0		6499339	0		=			
ANR	6499371	PtrMemberAccess	hb -> dwFlags		6499339	0					
ANR	6499372	Identifier	hb		6499339	0					
ANR	6499373	Identifier	dwFlags		6499339	1					
ANR	6499374	PrimaryExpression	0		6499339	1					
ANR	6499375	ExpressionStatement	hb -> extraInfo = NULL	147:1:4994:5014	6499339	5	True				
ANR	6499376	AssignmentExpression	hb -> extraInfo = NULL		6499339	0		=			
ANR	6499377	PtrMemberAccess	hb -> extraInfo		6499339	0					
ANR	6499378	Identifier	hb		6499339	0					
ANR	6499379	Identifier	extraInfo		6499339	1					
ANR	6499380	Identifier	NULL		6499339	1					
ANR	6499381	ExpressionStatement	block = ( PHeapBlockBasicInfo ) heapInfo -> Blocks	149:1:5018:5063	6499339	6	True				
ANR	6499382	AssignmentExpression	block = ( PHeapBlockBasicInfo ) heapInfo -> Blocks		6499339	0		=			
ANR	6499383	Identifier	block		6499339	0					
ANR	6499384	CastExpression	( PHeapBlockBasicInfo ) heapInfo -> Blocks		6499339	1					
ANR	6499385	CastTarget	PHeapBlockBasicInfo		6499339	0					
ANR	6499386	PtrMemberAccess	heapInfo -> Blocks		6499339	1					
ANR	6499387	Identifier	heapInfo		6499339	0					
ANR	6499388	Identifier	Blocks		6499339	1					
ANR	6499389	IfStatement	if ( ! block )		6499339	7					
ANR	6499390	Condition	! block	150:5:5070:5075	6499339	0	True				
ANR	6499391	UnaryOperationExpression	! block		6499339	0					
ANR	6499392	UnaryOperator	!		6499339	0					
ANR	6499393	Identifier	block		6499339	1					
ANR	6499394	CompoundStatement		11:13:216:216	6499339	1					
ANR	6499395	ReturnStatement	return false ;	151:2:5082:5094	6499339	0	True				
ANR	6499396	Identifier	false		6499339	0					
ANR	6499397	IdentifierDeclStatement	SIZE_T index = hb -> index ;	154:1:5101:5125	6499339	8	True				
ANR	6499398	IdentifierDecl	index = hb -> index		6499339	0					
ANR	6499399	IdentifierDeclType	SIZE_T		6499339	0					
ANR	6499400	Identifier	index		6499339	1					
ANR	6499401	AssignmentExpression	index = hb -> index		6499339	2		=			
ANR	6499402	Identifier	index		6499339	0					
ANR	6499403	PtrMemberAccess	hb -> index		6499339	1					
ANR	6499404	Identifier	hb		6499339	0					
ANR	6499405	Identifier	index		6499339	1					
ANR	6499406	DoStatement	do		6499339	9					
ANR	6499407	CompoundStatement		16:4:269:269	6499339	0					
ANR	6499408	IfStatement	if ( index > heapInfo -> BlockCount )		6499339	0					
ANR	6499409	Condition	index > heapInfo -> BlockCount	156:6:5139:5166	6499339	0	True				
ANR	6499410	RelationalExpression	index > heapInfo -> BlockCount		6499339	0		>			
ANR	6499411	Identifier	index		6499339	0					
ANR	6499412	PtrMemberAccess	heapInfo -> BlockCount		6499339	1					
ANR	6499413	Identifier	heapInfo		6499339	0					
ANR	6499414	Identifier	BlockCount		6499339	1					
ANR	6499415	CompoundStatement		17:36:307:307	6499339	1					
ANR	6499416	ReturnStatement	return false ;	157:3:5174:5186	6499339	0	True				
ANR	6499417	Identifier	false		6499339	0					
ANR	6499418	ExpressionStatement	hb -> dwAddress = ( void * ) block [ index ] . address	159:2:5194:5238	6499339	1	True				
ANR	6499419	AssignmentExpression	hb -> dwAddress = ( void * ) block [ index ] . address		6499339	0		=			
ANR	6499420	PtrMemberAccess	hb -> dwAddress		6499339	0					
ANR	6499421	Identifier	hb		6499339	0					
ANR	6499422	Identifier	dwAddress		6499339	1					
ANR	6499423	CastExpression	( void * ) block [ index ] . address		6499339	1					
ANR	6499424	CastTarget	void *		6499339	0					
ANR	6499425	MemberAccess	block [ index ] . address		6499339	1					
ANR	6499426	ArrayIndexing	block [ index ]		6499339	0					
ANR	6499427	Identifier	block		6499339	0					
ANR	6499428	Identifier	index		6499339	1					
ANR	6499429	Identifier	address		6499339	1					
ANR	6499430	ExpressionStatement	hb -> dwSize = block -> size	160:2:5242:5266	6499339	2	True				
ANR	6499431	AssignmentExpression	hb -> dwSize = block -> size		6499339	0		=			
ANR	6499432	PtrMemberAccess	hb -> dwSize		6499339	0					
ANR	6499433	Identifier	hb		6499339	0					
ANR	6499434	Identifier	dwSize		6499339	1					
ANR	6499435	PtrMemberAccess	block -> size		6499339	1					
ANR	6499436	Identifier	block		6499339	0					
ANR	6499437	Identifier	size		6499339	1					
ANR	6499438	IfStatement	if ( block [ index ] . extra & EXTRA_FLAG )		6499339	3					
ANR	6499439	Condition	block [ index ] . extra & EXTRA_FLAG	161:6:5274:5304	6499339	0	True				
ANR	6499440	BitAndExpression	block [ index ] . extra & EXTRA_FLAG		6499339	0		&			
ANR	6499441	MemberAccess	block [ index ] . extra		6499339	0					
ANR	6499442	ArrayIndexing	block [ index ]		6499339	0					
ANR	6499443	Identifier	block		6499339	0					
ANR	6499444	Identifier	index		6499339	1					
ANR	6499445	Identifier	extra		6499339	1					
ANR	6499446	Identifier	EXTRA_FLAG		6499339	1					
ANR	6499447	CompoundStatement		23:3:450:533	6499339	1					
ANR	6499448	IdentifierDeclStatement	PHeapBlockExtraInfo extra = ( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG ) ;	162:3:5312:5395	6499339	0	True				
ANR	6499449	IdentifierDecl	extra = ( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG )		6499339	0					
ANR	6499450	IdentifierDeclType	PHeapBlockExtraInfo		6499339	0					
ANR	6499451	Identifier	extra		6499339	1					
ANR	6499452	AssignmentExpression	extra = ( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG )		6499339	2		=			
ANR	6499453	Identifier	extra		6499339	0					
ANR	6499454	CastExpression	( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG )		6499339	1					
ANR	6499455	CastTarget	PHeapBlockExtraInfo		6499339	0					
ANR	6499456	BitAndExpression	block [ index ] . extra & ~EXTRA_FLAG		6499339	1		&			
ANR	6499457	MemberAccess	block [ index ] . extra		6499339	0					
ANR	6499458	ArrayIndexing	block [ index ]		6499339	0					
ANR	6499459	Identifier	block		6499339	0					
ANR	6499460	Identifier	index		6499339	1					
ANR	6499461	Identifier	extra		6499339	1					
ANR	6499462	Identifier	~EXTRA_FLAG		6499339	1					
ANR	6499463	ExpressionStatement	hb -> dwSize -= extra -> unusedBytes	163:3:5400:5432	6499339	1	True				
ANR	6499464	AssignmentExpression	hb -> dwSize -= extra -> unusedBytes		6499339	0		-=			
ANR	6499465	PtrMemberAccess	hb -> dwSize		6499339	0					
ANR	6499466	Identifier	hb		6499339	0					
ANR	6499467	Identifier	dwSize		6499339	1					
ANR	6499468	PtrMemberAccess	extra -> unusedBytes		6499339	1					
ANR	6499469	Identifier	extra		6499339	0					
ANR	6499470	Identifier	unusedBytes		6499339	1					
ANR	6499471	ExpressionStatement	hb -> extraInfo = extra	164:3:5437:5458	6499339	2	True				
ANR	6499472	AssignmentExpression	hb -> extraInfo = extra		6499339	0		=			
ANR	6499473	PtrMemberAccess	hb -> extraInfo		6499339	0					
ANR	6499474	Identifier	hb		6499339	0					
ANR	6499475	Identifier	extraInfo		6499339	1					
ANR	6499476	Identifier	extra		6499339	1					
ANR	6499477	ExpressionStatement	hb -> dwAddress = ( WPARAM ) hb -> dwAddress + extra -> granularity	165:3:5463:5521	6499339	3	True				
ANR	6499478	AssignmentExpression	hb -> dwAddress = ( WPARAM ) hb -> dwAddress + extra -> granularity		6499339	0		=			
ANR	6499479	PtrMemberAccess	hb -> dwAddress		6499339	0					
ANR	6499480	Identifier	hb		6499339	0					
ANR	6499481	Identifier	dwAddress		6499339	1					
ANR	6499482	AdditiveExpression	( WPARAM ) hb -> dwAddress + extra -> granularity		6499339	1		+			
ANR	6499483	CastExpression	( WPARAM ) hb -> dwAddress		6499339	0					
ANR	6499484	CastTarget	WPARAM		6499339	0					
ANR	6499485	PtrMemberAccess	hb -> dwAddress		6499339	1					
ANR	6499486	Identifier	hb		6499339	0					
ANR	6499487	Identifier	dwAddress		6499339	1					
ANR	6499488	PtrMemberAccess	extra -> granularity		6499339	1					
ANR	6499489	Identifier	extra		6499339	0					
ANR	6499490	Identifier	granularity		6499339	1					
ANR	6499491	ElseStatement	else		6499339	0					
ANR	6499492	CompoundStatement		27:9:670:670	6499339	0					
ANR	6499493	ExpressionStatement	hb -> dwAddress = ( WPARAM ) hb -> dwAddress + heapInfo -> Granularity	167:3:5537:5598	6499339	0	True				
ANR	6499494	AssignmentExpression	hb -> dwAddress = ( WPARAM ) hb -> dwAddress + heapInfo -> Granularity		6499339	0		=			
ANR	6499495	PtrMemberAccess	hb -> dwAddress		6499339	0					
ANR	6499496	Identifier	hb		6499339	0					
ANR	6499497	Identifier	dwAddress		6499339	1					
ANR	6499498	AdditiveExpression	( WPARAM ) hb -> dwAddress + heapInfo -> Granularity		6499339	1		+			
ANR	6499499	CastExpression	( WPARAM ) hb -> dwAddress		6499339	0					
ANR	6499500	CastTarget	WPARAM		6499339	0					
ANR	6499501	PtrMemberAccess	hb -> dwAddress		6499339	1					
ANR	6499502	Identifier	hb		6499339	0					
ANR	6499503	Identifier	dwAddress		6499339	1					
ANR	6499504	PtrMemberAccess	heapInfo -> Granularity		6499339	1					
ANR	6499505	Identifier	heapInfo		6499339	0					
ANR	6499506	Identifier	Granularity		6499339	1					
ANR	6499507	ExpressionStatement	hb -> extraInfo = NULL	168:3:5603:5623	6499339	1	True				
ANR	6499508	AssignmentExpression	hb -> extraInfo = NULL		6499339	0		=			
ANR	6499509	PtrMemberAccess	hb -> extraInfo		6499339	0					
ANR	6499510	Identifier	hb		6499339	0					
ANR	6499511	Identifier	extraInfo		6499339	1					
ANR	6499512	Identifier	NULL		6499339	1					
ANR	6499513	ExpressionStatement	index ++	170:2:5631:5638	6499339	4	True				
ANR	6499514	PostIncDecOperationExpression	index ++		6499339	0					
ANR	6499515	Identifier	index		6499339	0					
ANR	6499516	IncDec	++		6499339	1					
ANR	6499517	Condition	block [ index ] . flags & 2	171:10:5650:5671	6499339	1	True				
ANR	6499518	BitAndExpression	block [ index ] . flags & 2		6499339	0		&			
ANR	6499519	MemberAccess	block [ index ] . flags		6499339	0					
ANR	6499520	ArrayIndexing	block [ index ]		6499339	0					
ANR	6499521	Identifier	block		6499339	0					
ANR	6499522	Identifier	index		6499339	1					
ANR	6499523	Identifier	flags		6499339	1					
ANR	6499524	PrimaryExpression	2		6499339	1					
ANR	6499525	ExpressionStatement	hb -> index = index	173:1:5677:5694	6499339	10	True				
ANR	6499526	AssignmentExpression	hb -> index = index		6499339	0		=			
ANR	6499527	PtrMemberAccess	hb -> index		6499339	0					
ANR	6499528	Identifier	hb		6499339	0					
ANR	6499529	Identifier	index		6499339	1					
ANR	6499530	Identifier	index		6499339	1					
ANR	6499531	IdentifierDeclStatement	WPARAM flags = block [ hb -> index ] . flags ;	175:1:5698:5735	6499339	11	True				
ANR	6499532	IdentifierDecl	flags = block [ hb -> index ] . flags		6499339	0					
ANR	6499533	IdentifierDeclType	WPARAM		6499339	0					
ANR	6499534	Identifier	flags		6499339	1					
ANR	6499535	AssignmentExpression	flags = block [ hb -> index ] . flags		6499339	2		=			
ANR	6499536	Identifier	flags		6499339	0					
ANR	6499537	MemberAccess	block [ hb -> index ] . flags		6499339	1					
ANR	6499538	ArrayIndexing	block [ hb -> index ]		6499339	0					
ANR	6499539	Identifier	block		6499339	0					
ANR	6499540	PtrMemberAccess	hb -> index		6499339	1					
ANR	6499541	Identifier	hb		6499339	0					
ANR	6499542	Identifier	index		6499339	1					
ANR	6499543	Identifier	flags		6499339	1					
ANR	6499544	ExpressionStatement	"UPDATE_FLAGS ( hb , flags )"	176:1:5738:5762	6499339	12	True				
ANR	6499545	CallExpression	"UPDATE_FLAGS ( hb , flags )"		6499339	0					
ANR	6499546	Callee	UPDATE_FLAGS		6499339	0					
ANR	6499547	Identifier	UPDATE_FLAGS		6499339	0					
ANR	6499548	ArgumentList	hb		6499339	1					
ANR	6499549	Argument	hb		6499339	0					
ANR	6499550	Identifier	hb		6499339	0					
ANR	6499551	Argument	flags		6499339	1					
ANR	6499552	Identifier	flags		6499339	0					
ANR	6499553	ReturnStatement	return true ;	177:1:5765:5776	6499339	13	True				
ANR	6499554	Identifier	true		6499339	0					
ANR	6499555	ReturnType	static bool		6499339	1					
ANR	6499556	Identifier	GetFirstHeapBlock		6499339	2					
ANR	6499557	ParameterList	"PDEBUG_HEAP_INFORMATION heapInfo , PHeapBlock hb"		6499339	3					
ANR	6499558	Parameter	PDEBUG_HEAP_INFORMATION heapInfo	140:30:4812:4843	6499339	0	True				
ANR	6499559	ParameterType	PDEBUG_HEAP_INFORMATION		6499339	0					
ANR	6499560	Identifier	heapInfo		6499339	1					
ANR	6499561	Parameter	PHeapBlock hb	140:64:4846:4858	6499339	1	True				
ANR	6499562	ParameterType	PHeapBlock		6499339	0					
ANR	6499563	Identifier	hb		6499339	1					
ANR	6499564	CFGEntryNode	ENTRY		6499339		True				
ANR	6499565	CFGExitNode	EXIT		6499339		True				
ANR	6499566	Symbol	* index		6499339						
ANR	6499567	Symbol	hb -> index		6499339						
ANR	6499568	Symbol	flags		6499339						
ANR	6499569	Symbol	block [ index ] . address		6499339						
ANR	6499570	Symbol	hb -> dwSize		6499339						
ANR	6499571	Symbol	hb -> extraInfo		6499339						
ANR	6499572	Symbol	* heapInfo		6499339						
ANR	6499573	Symbol	~EXTRA_FLAG		6499339						
ANR	6499574	Symbol	block -> size		6499339						
ANR	6499575	Symbol	extra		6499339						
ANR	6499576	Symbol	heapInfo		6499339						
ANR	6499577	Symbol	block		6499339						
ANR	6499578	Symbol	heapInfo -> Blocks		6499339						
ANR	6499579	Symbol	block [ index ] . extra		6499339						
ANR	6499580	Symbol	EXTRA_FLAG		6499339						
ANR	6499581	Symbol	extra -> granularity		6499339						
ANR	6499582	Symbol	* hb		6499339						
ANR	6499583	Symbol	NULL		6499339						
ANR	6499584	Symbol	* * hb		6499339						
ANR	6499585	Symbol	* hb -> index		6499339						
ANR	6499586	Symbol	false		6499339						
ANR	6499587	Symbol	index		6499339						
ANR	6499588	Symbol	hb -> dwFlags		6499339						
ANR	6499589	Symbol	* block		6499339						
ANR	6499590	Symbol	block [ index ] . flags		6499339						
ANR	6499591	Symbol	* extra		6499339						
ANR	6499592	Symbol	block [ hb -> index ] . flags		6499339						
ANR	6499593	Symbol	hb -> dwAddress		6499339						
ANR	6499594	Symbol	true		6499339						
ANR	6499595	Symbol	hb		6499339						
ANR	6499596	Symbol	extra -> unusedBytes		6499339						
ANR	6499597	Symbol	heapInfo -> BlockCount		6499339						
ANR	6499598	Symbol	heapInfo -> Granularity		6499339						
ANR	6499599	Function	GetNextHeapBlock	180:0:5781:6996							
ANR	6499600	FunctionDef	"GetNextHeapBlock (PDEBUG_HEAP_INFORMATION heapInfo , PHeapBlock hb)"		6499599	0					
ANR	6499601	CompoundStatement		180:78:5859:6996	6499599	0					
ANR	6499602	ExpressionStatement	"r_return_val_if_fail ( heapInfo && hb , false )"	181:1:5862:5906	6499599	0	True				
ANR	6499603	CallExpression	"r_return_val_if_fail ( heapInfo && hb , false )"		6499599	0					
ANR	6499604	Callee	r_return_val_if_fail		6499599	0					
ANR	6499605	Identifier	r_return_val_if_fail		6499599	0					
ANR	6499606	ArgumentList	heapInfo && hb		6499599	1					
ANR	6499607	Argument	heapInfo && hb		6499599	0					
ANR	6499608	AndExpression	heapInfo && hb		6499599	0		&&			
ANR	6499609	Identifier	heapInfo		6499599	0					
ANR	6499610	Identifier	hb		6499599	1					
ANR	6499611	Argument	false		6499599	1					
ANR	6499612	Identifier	false		6499599	0					
ANR	6499613	IdentifierDeclStatement	PHeapBlockBasicInfo block ;	182:1:5909:5934	6499599	1	True				
ANR	6499614	IdentifierDecl	block		6499599	0					
ANR	6499615	IdentifierDeclType	PHeapBlockBasicInfo		6499599	0					
ANR	6499616	Identifier	block		6499599	1					
ANR	6499617	ExpressionStatement	block = ( PHeapBlockBasicInfo ) heapInfo -> Blocks	184:1:5938:5983	6499599	2	True				
ANR	6499618	AssignmentExpression	block = ( PHeapBlockBasicInfo ) heapInfo -> Blocks		6499599	0		=			
ANR	6499619	Identifier	block		6499599	0					
ANR	6499620	CastExpression	( PHeapBlockBasicInfo ) heapInfo -> Blocks		6499599	1					
ANR	6499621	CastTarget	PHeapBlockBasicInfo		6499599	0					
ANR	6499622	PtrMemberAccess	heapInfo -> Blocks		6499599	1					
ANR	6499623	Identifier	heapInfo		6499599	0					
ANR	6499624	Identifier	Blocks		6499599	1					
ANR	6499625	IdentifierDeclStatement	SIZE_T index = hb -> index ;	185:1:5986:6010	6499599	3	True				
ANR	6499626	IdentifierDecl	index = hb -> index		6499599	0					
ANR	6499627	IdentifierDeclType	SIZE_T		6499599	0					
ANR	6499628	Identifier	index		6499599	1					
ANR	6499629	AssignmentExpression	index = hb -> index		6499599	2		=			
ANR	6499630	Identifier	index		6499599	0					
ANR	6499631	PtrMemberAccess	hb -> index		6499599	1					
ANR	6499632	Identifier	hb		6499599	0					
ANR	6499633	Identifier	index		6499599	1					
ANR	6499634	IfStatement	if ( index > heapInfo -> BlockCount )		6499599	4					
ANR	6499635	Condition	index > heapInfo -> BlockCount	187:5:6018:6045	6499599	0	True				
ANR	6499636	RelationalExpression	index > heapInfo -> BlockCount		6499599	0		>			
ANR	6499637	Identifier	index		6499599	0					
ANR	6499638	PtrMemberAccess	heapInfo -> BlockCount		6499599	1					
ANR	6499639	Identifier	heapInfo		6499599	0					
ANR	6499640	Identifier	BlockCount		6499599	1					
ANR	6499641	CompoundStatement		8:35:188:188	6499599	1					
ANR	6499642	ReturnStatement	return false ;	188:2:6052:6064	6499599	0	True				
ANR	6499643	Identifier	false		6499599	0					
ANR	6499644	IfStatement	if ( block [ index ] . flags & 2 )		6499599	5					
ANR	6499645	Condition	block [ index ] . flags & 2	191:5:6075:6096	6499599	0	True				
ANR	6499646	BitAndExpression	block [ index ] . flags & 2		6499599	0		&			
ANR	6499647	MemberAccess	block [ index ] . flags		6499599	0					
ANR	6499648	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499649	Identifier	block		6499599	0					
ANR	6499650	Identifier	index		6499599	1					
ANR	6499651	Identifier	flags		6499599	1					
ANR	6499652	PrimaryExpression	2		6499599	1					
ANR	6499653	CompoundStatement		12:29:239:239	6499599	1					
ANR	6499654	DoStatement	do		6499599	0					
ANR	6499655	CompoundStatement		13:5:246:246	6499599	0					
ANR	6499656	IfStatement	if ( index > heapInfo -> BlockCount )		6499599	0					
ANR	6499657	Condition	index > heapInfo -> BlockCount	193:7:6115:6142	6499599	0	True				
ANR	6499658	RelationalExpression	index > heapInfo -> BlockCount		6499599	0		>			
ANR	6499659	Identifier	index		6499599	0					
ANR	6499660	PtrMemberAccess	heapInfo -> BlockCount		6499599	1					
ANR	6499661	Identifier	heapInfo		6499599	0					
ANR	6499662	Identifier	BlockCount		6499599	1					
ANR	6499663	CompoundStatement		14:37:285:285	6499599	1					
ANR	6499664	ReturnStatement	return false ;	194:4:6151:6163	6499599	0	True				
ANR	6499665	Identifier	false		6499599	0					
ANR	6499666	ExpressionStatement	hb -> dwAddress = ( void * ) ( block [ index ] . address + heapInfo -> Granularity )	198:3:6225:6295	6499599	1	True				
ANR	6499667	AssignmentExpression	hb -> dwAddress = ( void * ) ( block [ index ] . address + heapInfo -> Granularity )		6499599	0		=			
ANR	6499668	PtrMemberAccess	hb -> dwAddress		6499599	0					
ANR	6499669	Identifier	hb		6499599	0					
ANR	6499670	Identifier	dwAddress		6499599	1					
ANR	6499671	CastExpression	( void * ) ( block [ index ] . address + heapInfo -> Granularity )		6499599	1					
ANR	6499672	CastTarget	void *		6499599	0					
ANR	6499673	AdditiveExpression	block [ index ] . address + heapInfo -> Granularity		6499599	1		+			
ANR	6499674	MemberAccess	block [ index ] . address		6499599	0					
ANR	6499675	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499676	Identifier	block		6499599	0					
ANR	6499677	Identifier	index		6499599	1					
ANR	6499678	Identifier	address		6499599	1					
ANR	6499679	PtrMemberAccess	heapInfo -> Granularity		6499599	1					
ANR	6499680	Identifier	heapInfo		6499599	0					
ANR	6499681	Identifier	Granularity		6499599	1					
ANR	6499682	ExpressionStatement	index ++	200:3:6301:6308	6499599	2	True				
ANR	6499683	PostIncDecOperationExpression	index ++		6499599	0					
ANR	6499684	Identifier	index		6499599	0					
ANR	6499685	IncDec	++		6499599	1					
ANR	6499686	ExpressionStatement	hb -> dwSize = block -> size	201:3:6313:6337	6499599	3	True				
ANR	6499687	AssignmentExpression	hb -> dwSize = block -> size		6499599	0		=			
ANR	6499688	PtrMemberAccess	hb -> dwSize		6499599	0					
ANR	6499689	Identifier	hb		6499599	0					
ANR	6499690	Identifier	dwSize		6499599	1					
ANR	6499691	PtrMemberAccess	block -> size		6499599	1					
ANR	6499692	Identifier	block		6499599	0					
ANR	6499693	Identifier	size		6499599	1					
ANR	6499694	Condition	block [ index ] . flags & 2	202:11:6350:6371	6499599	1	True				
ANR	6499695	BitAndExpression	block [ index ] . flags & 2		6499599	0		&			
ANR	6499696	MemberAccess	block [ index ] . flags		6499599	0					
ANR	6499697	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499698	Identifier	block		6499599	0					
ANR	6499699	Identifier	index		6499599	1					
ANR	6499700	Identifier	flags		6499599	1					
ANR	6499701	PrimaryExpression	2		6499599	1					
ANR	6499702	ExpressionStatement	hb -> index = index	203:2:6377:6394	6499599	1	True				
ANR	6499703	AssignmentExpression	hb -> index = index		6499599	0		=			
ANR	6499704	PtrMemberAccess	hb -> index		6499599	0					
ANR	6499705	Identifier	hb		6499599	0					
ANR	6499706	Identifier	index		6499599	1					
ANR	6499707	Identifier	index		6499599	1					
ANR	6499708	ElseStatement	else		6499599	0					
ANR	6499709	CompoundStatement		25:8:544:544	6499599	0					
ANR	6499710	ExpressionStatement	hb -> dwSize = block [ index ] . size	205:2:6408:6438	6499599	0	True				
ANR	6499711	AssignmentExpression	hb -> dwSize = block [ index ] . size		6499599	0		=			
ANR	6499712	PtrMemberAccess	hb -> dwSize		6499599	0					
ANR	6499713	Identifier	hb		6499599	0					
ANR	6499714	Identifier	dwSize		6499599	1					
ANR	6499715	MemberAccess	block [ index ] . size		6499599	1					
ANR	6499716	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499717	Identifier	block		6499599	0					
ANR	6499718	Identifier	index		6499599	1					
ANR	6499719	Identifier	size		6499599	1					
ANR	6499720	IfStatement	if ( block [ index ] . extra & EXTRA_FLAG )		6499599	1					
ANR	6499721	Condition	block [ index ] . extra & EXTRA_FLAG	206:6:6446:6476	6499599	0	True				
ANR	6499722	BitAndExpression	block [ index ] . extra & EXTRA_FLAG		6499599	0		&			
ANR	6499723	MemberAccess	block [ index ] . extra		6499599	0					
ANR	6499724	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499725	Identifier	block		6499599	0					
ANR	6499726	Identifier	index		6499599	1					
ANR	6499727	Identifier	extra		6499599	1					
ANR	6499728	Identifier	EXTRA_FLAG		6499599	1					
ANR	6499729	CompoundStatement		28:3:624:707	6499599	1					
ANR	6499730	IdentifierDeclStatement	PHeapBlockExtraInfo extra = ( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG ) ;	207:3:6484:6567	6499599	0	True				
ANR	6499731	IdentifierDecl	extra = ( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG )		6499599	0					
ANR	6499732	IdentifierDeclType	PHeapBlockExtraInfo		6499599	0					
ANR	6499733	Identifier	extra		6499599	1					
ANR	6499734	AssignmentExpression	extra = ( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG )		6499599	2		=			
ANR	6499735	Identifier	extra		6499599	0					
ANR	6499736	CastExpression	( PHeapBlockExtraInfo ) ( block [ index ] . extra & ~EXTRA_FLAG )		6499599	1					
ANR	6499737	CastTarget	PHeapBlockExtraInfo		6499599	0					
ANR	6499738	BitAndExpression	block [ index ] . extra & ~EXTRA_FLAG		6499599	1		&			
ANR	6499739	MemberAccess	block [ index ] . extra		6499599	0					
ANR	6499740	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499741	Identifier	block		6499599	0					
ANR	6499742	Identifier	index		6499599	1					
ANR	6499743	Identifier	extra		6499599	1					
ANR	6499744	Identifier	~EXTRA_FLAG		6499599	1					
ANR	6499745	ExpressionStatement	hb -> extraInfo = extra	208:3:6572:6593	6499599	1	True				
ANR	6499746	AssignmentExpression	hb -> extraInfo = extra		6499599	0		=			
ANR	6499747	PtrMemberAccess	hb -> extraInfo		6499599	0					
ANR	6499748	Identifier	hb		6499599	0					
ANR	6499749	Identifier	extraInfo		6499599	1					
ANR	6499750	Identifier	extra		6499599	1					
ANR	6499751	ExpressionStatement	hb -> dwSize -= extra -> unusedBytes	209:3:6598:6630	6499599	2	True				
ANR	6499752	AssignmentExpression	hb -> dwSize -= extra -> unusedBytes		6499599	0		-=			
ANR	6499753	PtrMemberAccess	hb -> dwSize		6499599	0					
ANR	6499754	Identifier	hb		6499599	0					
ANR	6499755	Identifier	dwSize		6499599	1					
ANR	6499756	PtrMemberAccess	extra -> unusedBytes		6499599	1					
ANR	6499757	Identifier	extra		6499599	0					
ANR	6499758	Identifier	unusedBytes		6499599	1					
ANR	6499759	ExpressionStatement	hb -> dwAddress = ( void * ) ( block [ index ] . address + extra -> granularity )	210:3:6635:6702	6499599	3	True				
ANR	6499760	AssignmentExpression	hb -> dwAddress = ( void * ) ( block [ index ] . address + extra -> granularity )		6499599	0		=			
ANR	6499761	PtrMemberAccess	hb -> dwAddress		6499599	0					
ANR	6499762	Identifier	hb		6499599	0					
ANR	6499763	Identifier	dwAddress		6499599	1					
ANR	6499764	CastExpression	( void * ) ( block [ index ] . address + extra -> granularity )		6499599	1					
ANR	6499765	CastTarget	void *		6499599	0					
ANR	6499766	AdditiveExpression	block [ index ] . address + extra -> granularity		6499599	1		+			
ANR	6499767	MemberAccess	block [ index ] . address		6499599	0					
ANR	6499768	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499769	Identifier	block		6499599	0					
ANR	6499770	Identifier	index		6499599	1					
ANR	6499771	Identifier	address		6499599	1					
ANR	6499772	PtrMemberAccess	extra -> granularity		6499599	1					
ANR	6499773	Identifier	extra		6499599	0					
ANR	6499774	Identifier	granularity		6499599	1					
ANR	6499775	ElseStatement	else		6499599	0					
ANR	6499776	CompoundStatement		32:9:853:853	6499599	0					
ANR	6499777	ExpressionStatement	hb -> extraInfo = NULL	212:3:6718:6738	6499599	0	True				
ANR	6499778	AssignmentExpression	hb -> extraInfo = NULL		6499599	0		=			
ANR	6499779	PtrMemberAccess	hb -> extraInfo		6499599	0					
ANR	6499780	Identifier	hb		6499599	0					
ANR	6499781	Identifier	extraInfo		6499599	1					
ANR	6499782	Identifier	NULL		6499599	1					
ANR	6499783	ExpressionStatement	hb -> dwAddress = ( WPARAM ) hb -> dwAddress + hb -> dwSize	213:3:6743:6793	6499599	1	True				
ANR	6499784	AssignmentExpression	hb -> dwAddress = ( WPARAM ) hb -> dwAddress + hb -> dwSize		6499599	0		=			
ANR	6499785	PtrMemberAccess	hb -> dwAddress		6499599	0					
ANR	6499786	Identifier	hb		6499599	0					
ANR	6499787	Identifier	dwAddress		6499599	1					
ANR	6499788	AdditiveExpression	( WPARAM ) hb -> dwAddress + hb -> dwSize		6499599	1		+			
ANR	6499789	CastExpression	( WPARAM ) hb -> dwAddress		6499599	0					
ANR	6499790	CastTarget	WPARAM		6499599	0					
ANR	6499791	PtrMemberAccess	hb -> dwAddress		6499599	1					
ANR	6499792	Identifier	hb		6499599	0					
ANR	6499793	Identifier	dwAddress		6499599	1					
ANR	6499794	PtrMemberAccess	hb -> dwSize		6499599	1					
ANR	6499795	Identifier	hb		6499599	0					
ANR	6499796	Identifier	dwSize		6499599	1					
ANR	6499797	ExpressionStatement	hb -> index ++	215:2:6801:6812	6499599	2	True				
ANR	6499798	PostIncDecOperationExpression	hb -> index ++		6499599	0					
ANR	6499799	PtrMemberAccess	hb -> index		6499599	0					
ANR	6499800	Identifier	hb		6499599	0					
ANR	6499801	Identifier	index		6499599	1					
ANR	6499802	IncDec	++		6499599	1					
ANR	6499803	IdentifierDeclStatement	WPARAM flags ;	218:1:6819:6831	6499599	6	True				
ANR	6499804	IdentifierDecl	flags		6499599	0					
ANR	6499805	IdentifierDeclType	WPARAM		6499599	0					
ANR	6499806	Identifier	flags		6499599	1					
ANR	6499807	IfStatement	if ( block [ index ] . extra & EXTRA_FLAG )		6499599	7					
ANR	6499808	Condition	block [ index ] . extra & EXTRA_FLAG	219:5:6838:6868	6499599	0	True				
ANR	6499809	BitAndExpression	block [ index ] . extra & EXTRA_FLAG		6499599	0		&			
ANR	6499810	MemberAccess	block [ index ] . extra		6499599	0					
ANR	6499811	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499812	Identifier	block		6499599	0					
ANR	6499813	Identifier	index		6499599	1					
ANR	6499814	Identifier	extra		6499599	1					
ANR	6499815	Identifier	EXTRA_FLAG		6499599	1					
ANR	6499816	CompoundStatement		40:38:1011:1011	6499599	1					
ANR	6499817	ExpressionStatement	flags = block [ index ] . flags	220:2:6875:6901	6499599	0	True				
ANR	6499818	AssignmentExpression	flags = block [ index ] . flags		6499599	0		=			
ANR	6499819	Identifier	flags		6499599	0					
ANR	6499820	MemberAccess	block [ index ] . flags		6499599	1					
ANR	6499821	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499822	Identifier	block		6499599	0					
ANR	6499823	Identifier	index		6499599	1					
ANR	6499824	Identifier	flags		6499599	1					
ANR	6499825	ElseStatement	else		6499599	0					
ANR	6499826	CompoundStatement		42:8:1051:1051	6499599	0					
ANR	6499827	ExpressionStatement	flags = ( USHORT ) block [ index ] . flags	222:2:6915:6949	6499599	0	True				
ANR	6499828	AssignmentExpression	flags = ( USHORT ) block [ index ] . flags		6499599	0		=			
ANR	6499829	Identifier	flags		6499599	0					
ANR	6499830	CastExpression	( USHORT ) block [ index ] . flags		6499599	1					
ANR	6499831	CastTarget	USHORT		6499599	0					
ANR	6499832	MemberAccess	block [ index ] . flags		6499599	1					
ANR	6499833	ArrayIndexing	block [ index ]		6499599	0					
ANR	6499834	Identifier	block		6499599	0					
ANR	6499835	Identifier	index		6499599	1					
ANR	6499836	Identifier	flags		6499599	1					
ANR	6499837	ExpressionStatement	"UPDATE_FLAGS ( hb , flags )"	224:1:6955:6979	6499599	8	True				
ANR	6499838	CallExpression	"UPDATE_FLAGS ( hb , flags )"		6499599	0					
ANR	6499839	Callee	UPDATE_FLAGS		6499599	0					
ANR	6499840	Identifier	UPDATE_FLAGS		6499599	0					
ANR	6499841	ArgumentList	hb		6499599	1					
ANR	6499842	Argument	hb		6499599	0					
ANR	6499843	Identifier	hb		6499599	0					
ANR	6499844	Argument	flags		6499599	1					
ANR	6499845	Identifier	flags		6499599	0					
ANR	6499846	ReturnStatement	return true ;	226:1:6983:6994	6499599	9	True				
ANR	6499847	Identifier	true		6499599	0					
ANR	6499848	ReturnType	static bool		6499599	1					
ANR	6499849	Identifier	GetNextHeapBlock		6499599	2					
ANR	6499850	ParameterList	"PDEBUG_HEAP_INFORMATION heapInfo , PHeapBlock hb"		6499599	3					
ANR	6499851	Parameter	PDEBUG_HEAP_INFORMATION heapInfo	180:29:5810:5841	6499599	0	True				
ANR	6499852	ParameterType	PDEBUG_HEAP_INFORMATION		6499599	0					
ANR	6499853	Identifier	heapInfo		6499599	1					
ANR	6499854	Parameter	PHeapBlock hb	180:63:5844:5856	6499599	1	True				
ANR	6499855	ParameterType	PHeapBlock		6499599	0					
ANR	6499856	Identifier	hb		6499599	1					
ANR	6499857	CFGEntryNode	ENTRY		6499599		True				
ANR	6499858	CFGExitNode	EXIT		6499599		True				
ANR	6499859	Symbol	* index		6499599						
ANR	6499860	Symbol	hb -> index		6499599						
ANR	6499861	Symbol	flags		6499599						
ANR	6499862	Symbol	block [ index ] . address		6499599						
ANR	6499863	Symbol	hb -> dwSize		6499599						
ANR	6499864	Symbol	block [ index ] . size		6499599						
ANR	6499865	Symbol	* heapInfo		6499599						
ANR	6499866	Symbol	hb -> extraInfo		6499599						
ANR	6499867	Symbol	~EXTRA_FLAG		6499599						
ANR	6499868	Symbol	block -> size		6499599						
ANR	6499869	Symbol	extra		6499599						
ANR	6499870	Symbol	heapInfo		6499599						
ANR	6499871	Symbol	block		6499599						
ANR	6499872	Symbol	heapInfo -> Blocks		6499599						
ANR	6499873	Symbol	block [ index ] . extra		6499599						
ANR	6499874	Symbol	EXTRA_FLAG		6499599						
ANR	6499875	Symbol	extra -> granularity		6499599						
ANR	6499876	Symbol	* hb		6499599						
ANR	6499877	Symbol	NULL		6499599						
ANR	6499878	Symbol	false		6499599						
ANR	6499879	Symbol	index		6499599						
ANR	6499880	Symbol	* block		6499599						
ANR	6499881	Symbol	block [ index ] . flags		6499599						
ANR	6499882	Symbol	* extra		6499599						
ANR	6499883	Symbol	hb -> dwAddress		6499599						
ANR	6499884	Symbol	true		6499599						
ANR	6499885	Symbol	hb		6499599						
ANR	6499886	Symbol	extra -> unusedBytes		6499599						
ANR	6499887	Symbol	heapInfo -> BlockCount		6499599						
ANR	6499888	Symbol	heapInfo -> Granularity		6499599						
ANR	6499889	Function	free_extra_info	229:0:6999:7216							
ANR	6499890	FunctionDef	free_extra_info (PDEBUG_HEAP_INFORMATION heap)		6499889	0					
ANR	6499891	CompoundStatement		229:58:7057:7216	6499889	0					
ANR	6499892	ExpressionStatement	r_return_if_fail ( heap )	230:1:7060:7083	6499889	0	True				
ANR	6499893	CallExpression	r_return_if_fail ( heap )		6499889	0					
ANR	6499894	Callee	r_return_if_fail		6499889	0					
ANR	6499895	Identifier	r_return_if_fail		6499889	0					
ANR	6499896	ArgumentList	heap		6499889	1					
ANR	6499897	Argument	heap		6499889	0					
ANR	6499898	Identifier	heap		6499889	0					
ANR	6499899	IdentifierDeclStatement	HeapBlock hb ;	231:1:7086:7098	6499889	1	True				
ANR	6499900	IdentifierDecl	hb		6499889	0					
ANR	6499901	IdentifierDeclType	HeapBlock		6499889	0					
ANR	6499902	Identifier	hb		6499889	1					
ANR	6499903	IfStatement	"if ( GetFirstHeapBlock ( heap , & hb ) )"		6499889	2					
ANR	6499904	Condition	"GetFirstHeapBlock ( heap , & hb )"	232:5:7105:7133	6499889	0	True				
ANR	6499905	CallExpression	"GetFirstHeapBlock ( heap , & hb )"		6499889	0					
ANR	6499906	Callee	GetFirstHeapBlock		6499889	0					
ANR	6499907	Identifier	GetFirstHeapBlock		6499889	0					
ANR	6499908	ArgumentList	heap		6499889	1					
ANR	6499909	Argument	heap		6499889	0					
ANR	6499910	Identifier	heap		6499889	0					
ANR	6499911	Argument	& hb		6499889	1					
ANR	6499912	UnaryOperationExpression	& hb		6499889	0					
ANR	6499913	UnaryOperator	&		6499889	0					
ANR	6499914	Identifier	hb		6499889	1					
ANR	6499915	CompoundStatement		4:36:78:78	6499889	1					
ANR	6499916	DoStatement	do		6499889	0					
ANR	6499917	CompoundStatement		5:5:85:85	6499889	0					
ANR	6499918	ExpressionStatement	R_FREE ( hb . extraInfo )	234:3:7148:7169	6499889	0	True				
ANR	6499919	CallExpression	R_FREE ( hb . extraInfo )		6499889	0					
ANR	6499920	Callee	R_FREE		6499889	0					
ANR	6499921	Identifier	R_FREE		6499889	0					
ANR	6499922	ArgumentList	hb . extraInfo		6499889	1					
ANR	6499923	Argument	hb . extraInfo		6499889	0					
ANR	6499924	MemberAccess	hb . extraInfo		6499889	0					
ANR	6499925	Identifier	hb		6499889	0					
ANR	6499926	Identifier	extraInfo		6499889	1					
ANR	6499927	Condition	"GetNextHeapBlock ( heap , & hb )"	235:11:7182:7209	6499889	1	True				
ANR	6499928	CallExpression	"GetNextHeapBlock ( heap , & hb )"		6499889	0					
ANR	6499929	Callee	GetNextHeapBlock		6499889	0					
ANR	6499930	Identifier	GetNextHeapBlock		6499889	0					
ANR	6499931	ArgumentList	heap		6499889	1					
ANR	6499932	Argument	heap		6499889	0					
ANR	6499933	Identifier	heap		6499889	0					
ANR	6499934	Argument	& hb		6499889	1					
ANR	6499935	UnaryOperationExpression	& hb		6499889	0					
ANR	6499936	UnaryOperator	&		6499889	0					
ANR	6499937	Identifier	hb		6499889	1					
ANR	6499938	ReturnType	static void		6499889	1					
ANR	6499939	Identifier	free_extra_info		6499889	2					
ANR	6499940	ParameterList	PDEBUG_HEAP_INFORMATION heap		6499889	3					
ANR	6499941	Parameter	PDEBUG_HEAP_INFORMATION heap	229:28:7027:7054	6499889	0	True				
ANR	6499942	ParameterType	PDEBUG_HEAP_INFORMATION		6499889	0					
ANR	6499943	Identifier	heap		6499889	1					
ANR	6499944	CFGEntryNode	ENTRY		6499889		True				
ANR	6499945	CFGExitNode	EXIT		6499889		True				
ANR	6499946	Symbol	GetNextHeapBlock		6499889						
ANR	6499947	Symbol	& hb		6499889						
ANR	6499948	Symbol	hb . extraInfo		6499889						
ANR	6499949	Symbol	hb		6499889						
ANR	6499950	Symbol	GetFirstHeapBlock		6499889						
ANR	6499951	Symbol	heap		6499889						
ANR	6499952	Function	GetHeapGlobalsOffset	239:0:7219:9271							
ANR	6499953	FunctionDef	"GetHeapGlobalsOffset (RDebug * dbg , HANDLE h_proc)"		6499952	0					
ANR	6499954	CompoundStatement		239:61:7280:9271	6499952	0					
ANR	6499955	IdentifierDeclStatement	RList * modules = r_w32_dbg_modules ( dbg ) ;	240:1:7283:7323	6499952	0	True				
ANR	6499956	IdentifierDecl	* modules = r_w32_dbg_modules ( dbg )		6499952	0					
ANR	6499957	IdentifierDeclType	RList *		6499952	0					
ANR	6499958	Identifier	modules		6499952	1					
ANR	6499959	AssignmentExpression	* modules = r_w32_dbg_modules ( dbg )		6499952	2		=			
ANR	6499960	Identifier	modules		6499952	0					
ANR	6499961	CallExpression	r_w32_dbg_modules ( dbg )		6499952	1					
ANR	6499962	Callee	r_w32_dbg_modules		6499952	0					
ANR	6499963	Identifier	r_w32_dbg_modules		6499952	0					
ANR	6499964	ArgumentList	dbg		6499952	1					
ANR	6499965	Argument	dbg		6499952	0					
ANR	6499966	Identifier	dbg		6499952	0					
ANR	6499967	IdentifierDeclStatement	RListIter * it ;	241:1:7326:7339	6499952	1	True				
ANR	6499968	IdentifierDecl	* it		6499952	0					
ANR	6499969	IdentifierDeclType	RListIter *		6499952	0					
ANR	6499970	Identifier	it		6499952	1					
ANR	6499971	IdentifierDeclStatement	RDebugMap * map ;	242:1:7342:7356	6499952	2	True				
ANR	6499972	IdentifierDecl	* map		6499952	0					
ANR	6499973	IdentifierDeclType	RDebugMap *		6499952	0					
ANR	6499974	Identifier	map		6499952	1					
ANR	6499975	IdentifierDeclStatement	bool found = false ;	243:1:7359:7377	6499952	3	True				
ANR	6499976	IdentifierDecl	found = false		6499952	0					
ANR	6499977	IdentifierDeclType	bool		6499952	0					
ANR	6499978	Identifier	found		6499952	1					
ANR	6499979	AssignmentExpression	found = false		6499952	2		=			
ANR	6499980	Identifier	false		6499952	0					
ANR	6499981	Identifier	false		6499952	1					
ANR	6499982	IdentifierDeclStatement	"const char ntdll [ ] = ""ntdll.dll"" ;"	244:1:7380:7412	6499952	4	True				
ANR	6499983	IdentifierDecl	"ntdll [ ] = ""ntdll.dll"""		6499952	0					
ANR	6499984	IdentifierDeclType	const char [ ]		6499952	0					
ANR	6499985	Identifier	ntdll		6499952	1					
ANR	6499986	AssignmentExpression	"ntdll [ ] = ""ntdll.dll"""		6499952	2		=			
ANR	6499987	Identifier	ntdll		6499952	0					
ANR	6499988	PrimaryExpression	"""ntdll.dll"""		6499952	1					
ANR	6499989	IdentifierDeclStatement	int oldfd = 0 ;	245:1:7415:7428	6499952	5	True				
ANR	6499990	IdentifierDecl	oldfd = 0		6499952	0					
ANR	6499991	IdentifierDeclType	int		6499952	0					
ANR	6499992	Identifier	oldfd		6499952	1					
ANR	6499993	AssignmentExpression	oldfd = 0		6499952	2		=			
ANR	6499994	Identifier	oldfd		6499952	0					
ANR	6499995	PrimaryExpression	0		6499952	1					
ANR	6499996	Statement	static	246:1:7431:7436	6499952	6	True				
ANR	6499997	IdentifierDeclStatement	ut64 lastNdtllAddr = 0 ;	246:8:7438:7460	6499952	7	True				
ANR	6499998	IdentifierDecl	lastNdtllAddr = 0		6499952	0					
ANR	6499999	IdentifierDeclType	ut64		6499952	0					
ANR	6500000	Identifier	lastNdtllAddr		6499952	1					
ANR	6500001	AssignmentExpression	lastNdtllAddr = 0		6499952	2		=			
ANR	6500002	Identifier	lastNdtllAddr		6499952	0					
ANR	6500003	PrimaryExpression	0		6499952	1					
ANR	6500004	Statement	r_list_foreach	247:1:7463:7476	6499952	8	True				
ANR	6500005	Statement	(	247:16:7478:7478	6499952	9	True				
ANR	6500006	Statement	modules	247:17:7479:7485	6499952	10	True				
ANR	6500007	Statement	","	247:24:7486:7486	6499952	11	True				
ANR	6500008	Statement	it	247:26:7488:7489	6499952	12	True				
ANR	6500009	Statement	","	247:28:7490:7490	6499952	13	True				
ANR	6500010	Statement	map	247:30:7492:7494	6499952	14	True				
ANR	6500011	Statement	)	247:33:7495:7495	6499952	15	True				
ANR	6500012	CompoundStatement		9:35:216:216	6499952	16					
ANR	6500013	IfStatement	"if ( ! strncmp ( map -> name , ntdll , sizeof ( ntdll ) ) )"		6499952	0					
ANR	6500014	Condition	"! strncmp ( map -> name , ntdll , sizeof ( ntdll ) )"	248:6:7505:7546	6499952	0	True				
ANR	6500015	UnaryOperationExpression	"! strncmp ( map -> name , ntdll , sizeof ( ntdll ) )"		6499952	0					
ANR	6500016	UnaryOperator	!		6499952	0					
ANR	6500017	CallExpression	"strncmp ( map -> name , ntdll , sizeof ( ntdll ) )"		6499952	1					
ANR	6500018	Callee	strncmp		6499952	0					
ANR	6500019	Identifier	strncmp		6499952	0					
ANR	6500020	ArgumentList	map -> name		6499952	1					
ANR	6500021	Argument	map -> name		6499952	0					
ANR	6500022	PtrMemberAccess	map -> name		6499952	0					
ANR	6500023	Identifier	map		6499952	0					
ANR	6500024	Identifier	name		6499952	1					
ANR	6500025	Argument	ntdll		6499952	1					
ANR	6500026	Identifier	ntdll		6499952	0					
ANR	6500027	Argument	sizeof ( ntdll )		6499952	2					
ANR	6500028	SizeofExpression	sizeof ( ntdll )		6499952	0					
ANR	6500029	Sizeof	sizeof		6499952	0					
ANR	6500030	SizeofOperand	ntdll		6499952	1					
ANR	6500031	CompoundStatement		10:50:268:268	6499952	1					
ANR	6500032	ExpressionStatement	found = true	249:3:7554:7566	6499952	0	True				
ANR	6500033	AssignmentExpression	found = true		6499952	0		=			
ANR	6500034	Identifier	found		6499952	0					
ANR	6500035	Identifier	true		6499952	1					
ANR	6500036	BreakStatement	break ;	250:3:7571:7576	6499952	1	True				
ANR	6500037	IfStatement	if ( ! found )		6499952	17					
ANR	6500038	Condition	! found	253:5:7590:7595	6499952	0	True				
ANR	6500039	UnaryOperationExpression	! found		6499952	0					
ANR	6500040	UnaryOperator	!		6499952	0					
ANR	6500041	Identifier	found		6499952	1					
ANR	6500042	CompoundStatement		15:13:317:317	6499952	1					
ANR	6500043	ExpressionStatement	"eprintf ( ""ntdll.dll not loaded."" )"	254:2:7602:7635	6499952	0	True				
ANR	6500044	CallExpression	"eprintf ( ""ntdll.dll not loaded."" )"		6499952	0					
ANR	6500045	Callee	eprintf		6499952	0					
ANR	6500046	Identifier	eprintf		6499952	0					
ANR	6500047	ArgumentList	"""ntdll.dll not loaded."""		6499952	1					
ANR	6500048	Argument	"""ntdll.dll not loaded."""		6499952	0					
ANR	6500049	PrimaryExpression	"""ntdll.dll not loaded."""		6499952	0					
ANR	6500050	ExpressionStatement	r_list_free ( modules )	255:2:7639:7660	6499952	1	True				
ANR	6500051	CallExpression	r_list_free ( modules )		6499952	0					
ANR	6500052	Callee	r_list_free		6499952	0					
ANR	6500053	Identifier	r_list_free		6499952	0					
ANR	6500054	ArgumentList	modules		6499952	1					
ANR	6500055	Argument	modules		6499952	0					
ANR	6500056	Identifier	modules		6499952	0					
ANR	6500057	ReturnStatement	return false ;	256:2:7664:7676	6499952	2	True				
ANR	6500058	Identifier	false		6499952	0					
ANR	6500059	IdentifierDeclStatement	bool doopen = lastNdtllAddr != map -> addr ;	258:1:7682:7722	6499952	18	True				
ANR	6500060	IdentifierDecl	doopen = lastNdtllAddr != map -> addr		6499952	0					
ANR	6500061	IdentifierDeclType	bool		6499952	0					
ANR	6500062	Identifier	doopen		6499952	1					
ANR	6500063	AssignmentExpression	doopen = lastNdtllAddr != map -> addr		6499952	2		=			
ANR	6500064	Identifier	doopen		6499952	0					
ANR	6500065	EqualityExpression	lastNdtllAddr != map -> addr		6499952	1		!=			
ANR	6500066	Identifier	lastNdtllAddr		6499952	0					
ANR	6500067	PtrMemberAccess	map -> addr		6499952	1					
ANR	6500068	Identifier	map		6499952	0					
ANR	6500069	Identifier	addr		6499952	1					
ANR	6500070	IdentifierDeclStatement	"char * ntdllopen = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""ob~%s"" , ntdll ) ;"	259:1:7725:7801	6499952	19	True				
ANR	6500071	IdentifierDecl	"* ntdllopen = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""ob~%s"" , ntdll )"		6499952	0					
ANR	6500072	IdentifierDeclType	char *		6499952	0					
ANR	6500073	Identifier	ntdllopen		6499952	1					
ANR	6500074	AssignmentExpression	"* ntdllopen = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""ob~%s"" , ntdll )"		6499952	2		=			
ANR	6500075	Identifier	ntdllopen		6499952	0					
ANR	6500076	CallExpression	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""ob~%s"" , ntdll )"		6499952	1					
ANR	6500077	Callee	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500078	MemberAccess	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500079	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500080	Identifier	dbg		6499952	0					
ANR	6500081	Identifier	corebind		6499952	1					
ANR	6500082	Identifier	cmdstrf		6499952	1					
ANR	6500083	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500084	Argument	dbg -> corebind . core		6499952	0					
ANR	6500085	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500086	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500087	Identifier	dbg		6499952	0					
ANR	6500088	Identifier	corebind		6499952	1					
ANR	6500089	Identifier	core		6499952	1					
ANR	6500090	Argument	"""ob~%s"""		6499952	1					
ANR	6500091	PrimaryExpression	"""ob~%s"""		6499952	0					
ANR	6500092	Argument	ntdll		6499952	2					
ANR	6500093	Identifier	ntdll		6499952	0					
ANR	6500094	IfStatement	if ( * ntdllopen )		6499952	20					
ANR	6500095	Condition	* ntdllopen	260:5:7808:7817	6499952	0	True				
ANR	6500096	UnaryOperationExpression	* ntdllopen		6499952	0					
ANR	6500097	UnaryOperator	*		6499952	0					
ANR	6500098	Identifier	ntdllopen		6499952	1					
ANR	6500099	CompoundStatement		27:2:651:691	6499952	1					
ANR	6500100	IdentifierDeclStatement	"char * saddr = strtok ( ntdllopen , "" "" ) ;"	261:2:7824:7861	6499952	0	True				
ANR	6500101	IdentifierDecl	"* saddr = strtok ( ntdllopen , "" "" )"		6499952	0					
ANR	6500102	IdentifierDeclType	char *		6499952	0					
ANR	6500103	Identifier	saddr		6499952	1					
ANR	6500104	AssignmentExpression	"* saddr = strtok ( ntdllopen , "" "" )"		6499952	2		=			
ANR	6500105	Identifier	saddr		6499952	0					
ANR	6500106	CallExpression	"strtok ( ntdllopen , "" "" )"		6499952	1					
ANR	6500107	Callee	strtok		6499952	0					
ANR	6500108	Identifier	strtok		6499952	0					
ANR	6500109	ArgumentList	ntdllopen		6499952	1					
ANR	6500110	Argument	ntdllopen		6499952	0					
ANR	6500111	Identifier	ntdllopen		6499952	0					
ANR	6500112	Argument	""" """		6499952	1					
ANR	6500113	PrimaryExpression	""" """		6499952	0					
ANR	6500114	ForStatement	for ( int i = 0 ; i < 3 ; i ++ )		6499952	1					
ANR	6500115	ForInit	int i = 0 ;	262:7:7870:7879	6499952	0	True				
ANR	6500116	IdentifierDeclStatement	int i = 0 ;		6499952	0					
ANR	6500117	IdentifierDecl	i = 0		6499952	0					
ANR	6500118	IdentifierDeclType	int		6499952	0					
ANR	6500119	Identifier	i		6499952	1					
ANR	6500120	AssignmentExpression	i = 0		6499952	2		=			
ANR	6500121	Identifier	i		6499952	0					
ANR	6500122	PrimaryExpression	0		6499952	1					
ANR	6500123	Condition	i < 3	262:18:7881:7885	6499952	1	True				
ANR	6500124	RelationalExpression	i < 3		6499952	0		<			
ANR	6500125	Identifier	i		6499952	0					
ANR	6500126	PrimaryExpression	3		6499952	1					
ANR	6500127	PostIncDecOperationExpression	i ++	262:25:7888:7890	6499952	2	True				
ANR	6500128	Identifier	i		6499952	0					
ANR	6500129	IncDec	++		6499952	1					
ANR	6500130	CompoundStatement		24:30:612:612	6499952	3					
ANR	6500131	ExpressionStatement	"saddr = strtok ( NULL , "" "" )"	263:3:7898:7924	6499952	0	True				
ANR	6500132	AssignmentExpression	"saddr = strtok ( NULL , "" "" )"		6499952	0		=			
ANR	6500133	Identifier	saddr		6499952	0					
ANR	6500134	CallExpression	"strtok ( NULL , "" "" )"		6499952	1					
ANR	6500135	Callee	strtok		6499952	0					
ANR	6500136	Identifier	strtok		6499952	0					
ANR	6500137	ArgumentList	NULL		6499952	1					
ANR	6500138	Argument	NULL		6499952	0					
ANR	6500139	Identifier	NULL		6499952	0					
ANR	6500140	Argument	""" """		6499952	1					
ANR	6500141	PrimaryExpression	""" """		6499952	0					
ANR	6500142	IdentifierDeclStatement	"ut64 addr = r_num_math ( NULL , saddr + 3 ) ;"	265:2:7932:7972	6499952	2	True				
ANR	6500143	IdentifierDecl	"addr = r_num_math ( NULL , saddr + 3 )"		6499952	0					
ANR	6500144	IdentifierDeclType	ut64		6499952	0					
ANR	6500145	Identifier	addr		6499952	1					
ANR	6500146	AssignmentExpression	"addr = r_num_math ( NULL , saddr + 3 )"		6499952	2		=			
ANR	6500147	Identifier	addr		6499952	0					
ANR	6500148	CallExpression	"r_num_math ( NULL , saddr + 3 )"		6499952	1					
ANR	6500149	Callee	r_num_math		6499952	0					
ANR	6500150	Identifier	r_num_math		6499952	0					
ANR	6500151	ArgumentList	NULL		6499952	1					
ANR	6500152	Argument	NULL		6499952	0					
ANR	6500153	Identifier	NULL		6499952	0					
ANR	6500154	Argument	saddr + 3		6499952	1					
ANR	6500155	AdditiveExpression	saddr + 3		6499952	0		+			
ANR	6500156	Identifier	saddr		6499952	0					
ANR	6500157	PrimaryExpression	3		6499952	1					
ANR	6500158	IfStatement	if ( doopen )		6499952	3					
ANR	6500159	Condition	doopen	266:6:7980:7985	6499952	0	True				
ANR	6500160	Identifier	doopen		6499952	0					
ANR	6500161	CompoundStatement		30:3:755:780	6499952	1					
ANR	6500162	IdentifierDeclStatement	int fd = atoi ( ntdllopen ) ;	268:3:8036:8061	6499952	0	True				
ANR	6500163	IdentifierDecl	fd = atoi ( ntdllopen )		6499952	0					
ANR	6500164	IdentifierDeclType	int		6499952	0					
ANR	6500165	Identifier	fd		6499952	1					
ANR	6500166	AssignmentExpression	fd = atoi ( ntdllopen )		6499952	2		=			
ANR	6500167	Identifier	fd		6499952	0					
ANR	6500168	CallExpression	atoi ( ntdllopen )		6499952	1					
ANR	6500169	Callee	atoi		6499952	0					
ANR	6500170	Identifier	atoi		6499952	0					
ANR	6500171	ArgumentList	ntdllopen		6499952	1					
ANR	6500172	Argument	ntdllopen		6499952	0					
ANR	6500173	Identifier	ntdllopen		6499952	0					
ANR	6500174	ExpressionStatement	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""o-%d"" , fd )"	269:3:8066:8120	6499952	1	True				
ANR	6500175	CallExpression	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""o-%d"" , fd )"		6499952	0					
ANR	6500176	Callee	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500177	MemberAccess	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500178	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500179	Identifier	dbg		6499952	0					
ANR	6500180	Identifier	corebind		6499952	1					
ANR	6500181	Identifier	cmdstrf		6499952	1					
ANR	6500182	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500183	Argument	dbg -> corebind . core		6499952	0					
ANR	6500184	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500185	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500186	Identifier	dbg		6499952	0					
ANR	6500187	Identifier	corebind		6499952	1					
ANR	6500188	Identifier	core		6499952	1					
ANR	6500189	Argument	"""o-%d"""		6499952	1					
ANR	6500190	PrimaryExpression	"""o-%d"""		6499952	0					
ANR	6500191	Argument	fd		6499952	2					
ANR	6500192	Identifier	fd		6499952	0					
ANR	6500193	ExpressionStatement	RtlpHpHeapGlobalsOffset = RtlpLFHKeyOffset = 0	270:3:8125:8171	6499952	2	True				
ANR	6500194	AssignmentExpression	RtlpHpHeapGlobalsOffset = RtlpLFHKeyOffset = 0		6499952	0		=			
ANR	6500195	Identifier	RtlpHpHeapGlobalsOffset		6499952	0					
ANR	6500196	AssignmentExpression	RtlpLFHKeyOffset = 0		6499952	1		=			
ANR	6500197	Identifier	RtlpLFHKeyOffset		6499952	0					
ANR	6500198	PrimaryExpression	0		6499952	1					
ANR	6500199	IfStatement	if ( doopen )		6499952	21					
ANR	6500200	Condition	doopen	274:5:8186:8191	6499952	0	True				
ANR	6500201	Identifier	doopen		6499952	0					
ANR	6500202	CompoundStatement		37:2:917:955	6499952	1					
ANR	6500203	IdentifierDeclStatement	"char * ntdllpath = r_lib_path ( ""ntdll"" ) ;"	275:2:8198:8236	6499952	0	True				
ANR	6500204	IdentifierDecl	"* ntdllpath = r_lib_path ( ""ntdll"" )"		6499952	0					
ANR	6500205	IdentifierDeclType	char *		6499952	0					
ANR	6500206	Identifier	ntdllpath		6499952	1					
ANR	6500207	AssignmentExpression	"* ntdllpath = r_lib_path ( ""ntdll"" )"		6499952	2		=			
ANR	6500208	Identifier	ntdllpath		6499952	0					
ANR	6500209	CallExpression	"r_lib_path ( ""ntdll"" )"		6499952	1					
ANR	6500210	Callee	r_lib_path		6499952	0					
ANR	6500211	Identifier	r_lib_path		6499952	0					
ANR	6500212	ArgumentList	"""ntdll"""		6499952	1					
ANR	6500213	Argument	"""ntdll"""		6499952	0					
ANR	6500214	PrimaryExpression	"""ntdll"""		6499952	0					
ANR	6500215	ExpressionStatement	"eprintf ( ""Opening %s\\n"" , ntdllpath )"	276:2:8240:8275	6499952	1	True				
ANR	6500216	CallExpression	"eprintf ( ""Opening %s\\n"" , ntdllpath )"		6499952	0					
ANR	6500217	Callee	eprintf		6499952	0					
ANR	6500218	Identifier	eprintf		6499952	0					
ANR	6500219	ArgumentList	"""Opening %s\\n"""		6499952	1					
ANR	6500220	Argument	"""Opening %s\\n"""		6499952	0					
ANR	6500221	PrimaryExpression	"""Opening %s\\n"""		6499952	0					
ANR	6500222	Argument	ntdllpath		6499952	1					
ANR	6500223	Identifier	ntdllpath		6499952	0					
ANR	6500224	Statement	dbg	277:2:8279:8281	6499952	2	True				
ANR	6500225	Statement	->	277:5:8282:8283	6499952	3	True				
ANR	6500226	Statement	corebind	277:7:8284:8291	6499952	4	True				
ANR	6500227	Statement	.	277:15:8292:8292	6499952	5	True				
ANR	6500228	Statement	cmdf	277:16:8293:8296	6499952	6	True				
ANR	6500229	Statement	(	277:21:8298:8298	6499952	7	True				
ANR	6500230	Statement	dbg	277:22:8299:8301	6499952	8	True				
ANR	6500231	Statement	->	277:25:8302:8303	6499952	9	True				
ANR	6500232	Statement	corebind	277:27:8304:8311	6499952	10	True				
ANR	6500233	Statement	.	277:35:8312:8312	6499952	11	True				
ANR	6500234	Statement	core	277:36:8313:8316	6499952	12	True				
ANR	6500235	Statement	","	277:40:8317:8317	6499952	13	True				
ANR	6500236	Statement	"""o %s 0x%"""	277:42:8319:8328	6499952	14	True				
ANR	6500237	Statement	PFMT64x	277:52:8329:8335	6499952	15	True				
ANR	6500238	Statement	""""""	277:59:8336:8337	6499952	16	True				
ANR	6500239	Statement	","	277:61:8338:8338	6499952	17	True				
ANR	6500240	Statement	ntdllpath	277:63:8340:8348	6499952	18	True				
ANR	6500241	Statement	","	277:72:8349:8349	6499952	19	True				
ANR	6500242	Statement	map	277:74:8351:8353	6499952	20	True				
ANR	6500243	Statement	->	277:77:8354:8355	6499952	21	True				
ANR	6500244	Statement	addr	277:79:8356:8359	6499952	22	True				
ANR	6500245	Statement	)	277:83:8360:8360	6499952	23	True				
ANR	6500246	ExpressionStatement		277:84:8361:8361	6499952	24	True				
ANR	6500247	ExpressionStatement	lastNdtllAddr = map -> addr	278:2:8365:8390	6499952	25	True				
ANR	6500248	AssignmentExpression	lastNdtllAddr = map -> addr		6499952	0		=			
ANR	6500249	Identifier	lastNdtllAddr		6499952	0					
ANR	6500250	PtrMemberAccess	map -> addr		6499952	1					
ANR	6500251	Identifier	map		6499952	0					
ANR	6500252	Identifier	addr		6499952	1					
ANR	6500253	ExpressionStatement	free ( ntdllpath )	279:2:8394:8410	6499952	26	True				
ANR	6500254	CallExpression	free ( ntdllpath )		6499952	0					
ANR	6500255	Callee	free		6499952	0					
ANR	6500256	Identifier	free		6499952	0					
ANR	6500257	ArgumentList	ntdllpath		6499952	1					
ANR	6500258	Argument	ntdllpath		6499952	0					
ANR	6500259	Identifier	ntdllpath		6499952	0					
ANR	6500260	ExpressionStatement	r_list_free ( modules )	281:1:8416:8437	6499952	22	True				
ANR	6500261	CallExpression	r_list_free ( modules )		6499952	0					
ANR	6500262	Callee	r_list_free		6499952	0					
ANR	6500263	Identifier	r_list_free		6499952	0					
ANR	6500264	ArgumentList	modules		6499952	1					
ANR	6500265	Argument	modules		6499952	0					
ANR	6500266	Identifier	modules		6499952	0					
ANR	6500267	IfStatement	if ( ! RtlpHpHeapGlobalsOffset || ! RtlpLFHKeyOffset )		6499952	23					
ANR	6500268	Condition	! RtlpHpHeapGlobalsOffset || ! RtlpLFHKeyOffset	283:5:8445:8489	6499952	0	True				
ANR	6500269	OrExpression	! RtlpHpHeapGlobalsOffset || ! RtlpLFHKeyOffset		6499952	0		||			
ANR	6500270	UnaryOperationExpression	! RtlpHpHeapGlobalsOffset		6499952	0					
ANR	6500271	UnaryOperator	!		6499952	0					
ANR	6500272	Identifier	RtlpHpHeapGlobalsOffset		6499952	1					
ANR	6500273	UnaryOperationExpression	! RtlpLFHKeyOffset		6499952	1					
ANR	6500274	UnaryOperator	!		6499952	0					
ANR	6500275	Identifier	RtlpLFHKeyOffset		6499952	1					
ANR	6500276	CompoundStatement		46:2:1215:1295	6499952	1					
ANR	6500277	IdentifierDeclStatement	"char * res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" ) ;"	284:2:8496:8576	6499952	0	True				
ANR	6500278	IdentifierDecl	"* res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" )"		6499952	0					
ANR	6500279	IdentifierDeclType	char *		6499952	0					
ANR	6500280	Identifier	res		6499952	1					
ANR	6500281	AssignmentExpression	"* res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" )"		6499952	2		=			
ANR	6500282	Identifier	res		6499952	0					
ANR	6500283	CallExpression	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" )"		6499952	1					
ANR	6500284	Callee	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500285	MemberAccess	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500286	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500287	Identifier	dbg		6499952	0					
ANR	6500288	Identifier	corebind		6499952	1					
ANR	6500289	Identifier	cmdstrf		6499952	1					
ANR	6500290	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500291	Argument	dbg -> corebind . core		6499952	0					
ANR	6500292	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500293	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500294	Identifier	dbg		6499952	0					
ANR	6500295	Identifier	corebind		6499952	1					
ANR	6500296	Identifier	core		6499952	1					
ANR	6500297	Argument	"""idpi~RtlpHpHeapGlobals"""		6499952	1					
ANR	6500298	PrimaryExpression	"""idpi~RtlpHpHeapGlobals"""		6499952	0					
ANR	6500299	IfStatement	if ( ! * res )		6499952	1					
ANR	6500300	Condition	! * res	285:6:8584:8588	6499952	0	True				
ANR	6500301	UnaryOperationExpression	! * res		6499952	0					
ANR	6500302	UnaryOperator	!		6499952	0					
ANR	6500303	UnaryOperationExpression	* res		6499952	1					
ANR	6500304	UnaryOperator	*		6499952	0					
ANR	6500305	Identifier	res		6499952	1					
ANR	6500306	CompoundStatement		47:13:1310:1310	6499952	1					
ANR	6500307	ExpressionStatement	free ( res )	287:3:8626:8636	6499952	0	True				
ANR	6500308	CallExpression	free ( res )		6499952	0					
ANR	6500309	Callee	free		6499952	0					
ANR	6500310	Identifier	free		6499952	0					
ANR	6500311	ArgumentList	res		6499952	1					
ANR	6500312	Argument	res		6499952	0					
ANR	6500313	Identifier	res		6499952	0					
ANR	6500314	ExpressionStatement	"dbg -> corebind . cmd ( dbg -> corebind . core , ""idpd"" )"	288:3:8641:8687	6499952	1	True				
ANR	6500315	CallExpression	"dbg -> corebind . cmd ( dbg -> corebind . core , ""idpd"" )"		6499952	0					
ANR	6500316	Callee	dbg -> corebind . cmd		6499952	0					
ANR	6500317	MemberAccess	dbg -> corebind . cmd		6499952	0					
ANR	6500318	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500319	Identifier	dbg		6499952	0					
ANR	6500320	Identifier	corebind		6499952	1					
ANR	6500321	Identifier	cmd		6499952	1					
ANR	6500322	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500323	Argument	dbg -> corebind . core		6499952	0					
ANR	6500324	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500325	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500326	Identifier	dbg		6499952	0					
ANR	6500327	Identifier	corebind		6499952	1					
ANR	6500328	Identifier	core		6499952	1					
ANR	6500329	Argument	"""idpd"""		6499952	1					
ANR	6500330	PrimaryExpression	"""idpd"""		6499952	0					
ANR	6500331	ExpressionStatement	"res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" )"	289:3:8692:8766	6499952	2	True				
ANR	6500332	AssignmentExpression	"res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" )"		6499952	0		=			
ANR	6500333	Identifier	res		6499952	0					
ANR	6500334	CallExpression	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpHpHeapGlobals"" )"		6499952	1					
ANR	6500335	Callee	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500336	MemberAccess	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500337	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500338	Identifier	dbg		6499952	0					
ANR	6500339	Identifier	corebind		6499952	1					
ANR	6500340	Identifier	cmdstrf		6499952	1					
ANR	6500341	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500342	Argument	dbg -> corebind . core		6499952	0					
ANR	6500343	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500344	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500345	Identifier	dbg		6499952	0					
ANR	6500346	Identifier	corebind		6499952	1					
ANR	6500347	Identifier	core		6499952	1					
ANR	6500348	Argument	"""idpi~RtlpHpHeapGlobals"""		6499952	1					
ANR	6500349	PrimaryExpression	"""idpi~RtlpHpHeapGlobals"""		6499952	0					
ANR	6500350	IfStatement	if ( * res )		6499952	2					
ANR	6500351	Condition	* res	291:6:8778:8781	6499952	0	True				
ANR	6500352	UnaryOperationExpression	* res		6499952	0					
ANR	6500353	UnaryOperator	*		6499952	0					
ANR	6500354	Identifier	res		6499952	1					
ANR	6500355	CompoundStatement		53:12:1503:1503	6499952	1					
ANR	6500356	ExpressionStatement	"RtlpHpHeapGlobalsOffset = r_num_math ( NULL , res )"	292:3:8789:8837	6499952	0	True				
ANR	6500357	AssignmentExpression	"RtlpHpHeapGlobalsOffset = r_num_math ( NULL , res )"		6499952	0		=			
ANR	6500358	Identifier	RtlpHpHeapGlobalsOffset		6499952	0					
ANR	6500359	CallExpression	"r_num_math ( NULL , res )"		6499952	1					
ANR	6500360	Callee	r_num_math		6499952	0					
ANR	6500361	Identifier	r_num_math		6499952	0					
ANR	6500362	ArgumentList	NULL		6499952	1					
ANR	6500363	Argument	NULL		6499952	0					
ANR	6500364	Identifier	NULL		6499952	0					
ANR	6500365	Argument	res		6499952	1					
ANR	6500366	Identifier	res		6499952	0					
ANR	6500367	ElseStatement	else		6499952	0					
ANR	6500368	CompoundStatement		55:9:1567:1567	6499952	0					
ANR	6500369	ExpressionStatement	free ( res )	294:3:8853:8863	6499952	0	True				
ANR	6500370	CallExpression	free ( res )		6499952	0					
ANR	6500371	Callee	free		6499952	0					
ANR	6500372	Identifier	free		6499952	0					
ANR	6500373	ArgumentList	res		6499952	1					
ANR	6500374	Argument	res		6499952	0					
ANR	6500375	Identifier	res		6499952	0					
ANR	6500376	ReturnStatement	return false ;	295:3:8868:8880	6499952	1	True				
ANR	6500377	Identifier	false		6499952	0					
ANR	6500378	ExpressionStatement	free ( res )	297:2:8888:8898	6499952	3	True				
ANR	6500379	CallExpression	free ( res )		6499952	0					
ANR	6500380	Callee	free		6499952	0					
ANR	6500381	Identifier	free		6499952	0					
ANR	6500382	ArgumentList	res		6499952	1					
ANR	6500383	Argument	res		6499952	0					
ANR	6500384	Identifier	res		6499952	0					
ANR	6500385	ExpressionStatement	"res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpLFHKey"" )"	298:2:8902:8969	6499952	4	True				
ANR	6500386	AssignmentExpression	"res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpLFHKey"" )"		6499952	0		=			
ANR	6500387	Identifier	res		6499952	0					
ANR	6500388	CallExpression	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""idpi~RtlpLFHKey"" )"		6499952	1					
ANR	6500389	Callee	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500390	MemberAccess	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500391	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500392	Identifier	dbg		6499952	0					
ANR	6500393	Identifier	corebind		6499952	1					
ANR	6500394	Identifier	cmdstrf		6499952	1					
ANR	6500395	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500396	Argument	dbg -> corebind . core		6499952	0					
ANR	6500397	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500398	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500399	Identifier	dbg		6499952	0					
ANR	6500400	Identifier	corebind		6499952	1					
ANR	6500401	Identifier	core		6499952	1					
ANR	6500402	Argument	"""idpi~RtlpLFHKey"""		6499952	1					
ANR	6500403	PrimaryExpression	"""idpi~RtlpLFHKey"""		6499952	0					
ANR	6500404	IfStatement	if ( * res )		6499952	5					
ANR	6500405	Condition	* res	299:6:8977:8980	6499952	0	True				
ANR	6500406	UnaryOperationExpression	* res		6499952	0					
ANR	6500407	UnaryOperator	*		6499952	0					
ANR	6500408	Identifier	res		6499952	1					
ANR	6500409	CompoundStatement		61:12:1702:1702	6499952	1					
ANR	6500410	ExpressionStatement	"RtlpLFHKeyOffset = r_num_math ( NULL , res )"	300:3:8988:9029	6499952	0	True				
ANR	6500411	AssignmentExpression	"RtlpLFHKeyOffset = r_num_math ( NULL , res )"		6499952	0		=			
ANR	6500412	Identifier	RtlpLFHKeyOffset		6499952	0					
ANR	6500413	CallExpression	"r_num_math ( NULL , res )"		6499952	1					
ANR	6500414	Callee	r_num_math		6499952	0					
ANR	6500415	Identifier	r_num_math		6499952	0					
ANR	6500416	ArgumentList	NULL		6499952	1					
ANR	6500417	Argument	NULL		6499952	0					
ANR	6500418	Identifier	NULL		6499952	0					
ANR	6500419	Argument	res		6499952	1					
ANR	6500420	Identifier	res		6499952	0					
ANR	6500421	ExpressionStatement	free ( res )	302:2:9037:9047	6499952	6	True				
ANR	6500422	CallExpression	free ( res )		6499952	0					
ANR	6500423	Callee	free		6499952	0					
ANR	6500424	Identifier	free		6499952	0					
ANR	6500425	ArgumentList	res		6499952	1					
ANR	6500426	Argument	res		6499952	0					
ANR	6500427	Identifier	res		6499952	0					
ANR	6500428	IfStatement	if ( doopen )		6499952	24					
ANR	6500429	Condition	doopen	305:5:9058:9063	6499952	0	True				
ANR	6500430	Identifier	doopen		6499952	0					
ANR	6500431	CompoundStatement		70:2:1883:1902	6499952	1					
ANR	6500432	IdentifierDeclStatement	"char * res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""o~%s"" , ntdll ) ;"	307:2:9091:9160	6499952	0	True				
ANR	6500433	IdentifierDecl	"* res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""o~%s"" , ntdll )"		6499952	0					
ANR	6500434	IdentifierDeclType	char *		6499952	0					
ANR	6500435	Identifier	res		6499952	1					
ANR	6500436	AssignmentExpression	"* res = dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""o~%s"" , ntdll )"		6499952	2		=			
ANR	6500437	Identifier	res		6499952	0					
ANR	6500438	CallExpression	"dbg -> corebind . cmdstrf ( dbg -> corebind . core , ""o~%s"" , ntdll )"		6499952	1					
ANR	6500439	Callee	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500440	MemberAccess	dbg -> corebind . cmdstrf		6499952	0					
ANR	6500441	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500442	Identifier	dbg		6499952	0					
ANR	6500443	Identifier	corebind		6499952	1					
ANR	6500444	Identifier	cmdstrf		6499952	1					
ANR	6500445	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500446	Argument	dbg -> corebind . core		6499952	0					
ANR	6500447	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500448	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500449	Identifier	dbg		6499952	0					
ANR	6500450	Identifier	corebind		6499952	1					
ANR	6500451	Identifier	core		6499952	1					
ANR	6500452	Argument	"""o~%s"""		6499952	1					
ANR	6500453	PrimaryExpression	"""o~%s"""		6499952	0					
ANR	6500454	Argument	ntdll		6499952	2					
ANR	6500455	Identifier	ntdll		6499952	0					
ANR	6500456	IdentifierDeclStatement	int fd = atoi ( res ) ;	308:2:9164:9183	6499952	1	True				
ANR	6500457	IdentifierDecl	fd = atoi ( res )		6499952	0					
ANR	6500458	IdentifierDeclType	int		6499952	0					
ANR	6500459	Identifier	fd		6499952	1					
ANR	6500460	AssignmentExpression	fd = atoi ( res )		6499952	2		=			
ANR	6500461	Identifier	fd		6499952	0					
ANR	6500462	CallExpression	atoi ( res )		6499952	1					
ANR	6500463	Callee	atoi		6499952	0					
ANR	6500464	Identifier	atoi		6499952	0					
ANR	6500465	ArgumentList	res		6499952	1					
ANR	6500466	Argument	res		6499952	0					
ANR	6500467	Identifier	res		6499952	0					
ANR	6500468	ExpressionStatement	free ( res )	309:2:9187:9197	6499952	2	True				
ANR	6500469	CallExpression	free ( res )		6499952	0					
ANR	6500470	Callee	free		6499952	0					
ANR	6500471	Identifier	free		6499952	0					
ANR	6500472	ArgumentList	res		6499952	1					
ANR	6500473	Argument	res		6499952	0					
ANR	6500474	Identifier	res		6499952	0					
ANR	6500475	ExpressionStatement	"dbg -> corebind . cmdf ( dbg -> corebind . core , ""o-%d"" , fd )"	310:2:9201:9252	6499952	3	True				
ANR	6500476	CallExpression	"dbg -> corebind . cmdf ( dbg -> corebind . core , ""o-%d"" , fd )"		6499952	0					
ANR	6500477	Callee	dbg -> corebind . cmdf		6499952	0					
ANR	6500478	MemberAccess	dbg -> corebind . cmdf		6499952	0					
ANR	6500479	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500480	Identifier	dbg		6499952	0					
ANR	6500481	Identifier	corebind		6499952	1					
ANR	6500482	Identifier	cmdf		6499952	1					
ANR	6500483	ArgumentList	dbg -> corebind . core		6499952	1					
ANR	6500484	Argument	dbg -> corebind . core		6499952	0					
ANR	6500485	MemberAccess	dbg -> corebind . core		6499952	0					
ANR	6500486	PtrMemberAccess	dbg -> corebind		6499952	0					
ANR	6500487	Identifier	dbg		6499952	0					
ANR	6500488	Identifier	corebind		6499952	1					
ANR	6500489	Identifier	core		6499952	1					
ANR	6500490	Argument	"""o-%d"""		6499952	1					
ANR	6500491	PrimaryExpression	"""o-%d"""		6499952	0					
ANR	6500492	Argument	fd		6499952	2					
ANR	6500493	Identifier	fd		6499952	0					
ANR	6500494	ReturnStatement	return true ;	312:1:9258:9269	6499952	25	True				
ANR	6500495	Identifier	true		6499952	0					
ANR	6500496	ReturnType	static bool		6499952	1					
ANR	6500497	Identifier	GetHeapGlobalsOffset		6499952	2					
ANR	6500498	ParameterList	"RDebug * dbg , HANDLE h_proc"		6499952	3					
ANR	6500499	Parameter	RDebug * dbg	239:33:7252:7262	6499952	0	True				
ANR	6500500	ParameterType	RDebug *		6499952	0					
ANR	6500501	Identifier	dbg		6499952	1					
ANR	6500502	Parameter	HANDLE h_proc	239:46:7265:7277	6499952	1	True				
ANR	6500503	ParameterType	HANDLE		6499952	0					
ANR	6500504	Identifier	h_proc		6499952	1					
ANR	6500505	CFGEntryNode	ENTRY		6499952		True				
ANR	6500506	CFGExitNode	EXIT		6499952		True				
ANR	6500507	CFGErrorNode	ERROR		6499952		True				
ANR	6500508	Symbol	lastNdtllAddr		6499952						
ANR	6500509	Symbol	RtlpLFHKeyOffset		6499952						
ANR	6500510	Symbol	map -> addr		6499952						
ANR	6500511	Symbol	* map		6499952						
ANR	6500512	Symbol	* res		6499952						
ANR	6500513	Symbol	r_num_math		6499952						
ANR	6500514	Symbol	r_w32_dbg_modules		6499952						
ANR	6500515	Symbol	dbg -> corebind . core		6499952						
ANR	6500516	Symbol	strncmp		6499952						
ANR	6500517	Symbol	found		6499952						
ANR	6500518	Symbol	map -> name		6499952						
ANR	6500519	Symbol	ntdllpath		6499952						
ANR	6500520	Symbol	ntdll		6499952						
ANR	6500521	Symbol	addr		6499952						
ANR	6500522	Symbol	map		6499952						
ANR	6500523	Symbol	atoi		6499952						
ANR	6500524	Symbol	doopen		6499952						
ANR	6500525	Symbol	res		6499952						
ANR	6500526	Symbol	NULL		6499952						
ANR	6500527	Symbol	saddr		6499952						
ANR	6500528	Symbol	dbg		6499952						
ANR	6500529	Symbol	false		6499952						
ANR	6500530	Symbol	i		6499952						
ANR	6500531	Symbol	h_proc		6499952						
ANR	6500532	Symbol	strtok		6499952						
ANR	6500533	Symbol	it		6499952						
ANR	6500534	Symbol	oldfd		6499952						
ANR	6500535	Symbol	* dbg		6499952						
ANR	6500536	Symbol	modules		6499952						
ANR	6500537	Symbol	dbg -> corebind		6499952						
ANR	6500538	Symbol	* ntdllopen		6499952						
ANR	6500539	Symbol	true		6499952						
ANR	6500540	Symbol	ntdllopen		6499952						
ANR	6500541	Symbol	dbg -> corebind . cmdstrf		6499952						
ANR	6500542	Symbol	RtlpHpHeapGlobalsOffset		6499952						
ANR	6500543	Symbol	r_lib_path		6499952						
ANR	6500544	Symbol	fd		6499952						
ANR	6500545	Function	GetLFHKey	315:0:9274:9852							
ANR	6500546	FunctionDef	"GetLFHKey (RDebug * dbg , HANDLE h_proc , bool segment , WPARAM * lfhKey)"		6500545	0					
ANR	6500547	CompoundStatement		315:80:9354:9852	6500545	0					
ANR	6500548	ExpressionStatement	"r_return_val_if_fail ( dbg , 0 )"	316:1:9357:9386	6500545	0	True				
ANR	6500549	CallExpression	"r_return_val_if_fail ( dbg , 0 )"		6500545	0					
ANR	6500550	Callee	r_return_val_if_fail		6500545	0					
ANR	6500551	Identifier	r_return_val_if_fail		6500545	0					
ANR	6500552	ArgumentList	dbg		6500545	1					
ANR	6500553	Argument	dbg		6500545	0					
ANR	6500554	Identifier	dbg		6500545	0					
ANR	6500555	Argument	0		6500545	1					
ANR	6500556	PrimaryExpression	0		6500545	0					
ANR	6500557	IdentifierDeclStatement	WPARAM lfhKeyLocation ;	317:1:9389:9410	6500545	1	True				
ANR	6500558	IdentifierDecl	lfhKeyLocation		6500545	0					
ANR	6500559	IdentifierDeclType	WPARAM		6500545	0					
ANR	6500560	Identifier	lfhKeyLocation		6500545	1					
ANR	6500561	IfStatement	"if ( ! GetHeapGlobalsOffset ( dbg , h_proc ) )"		6500545	2					
ANR	6500562	Condition	"! GetHeapGlobalsOffset ( dbg , h_proc )"	319:5:9418:9452	6500545	0	True				
ANR	6500563	UnaryOperationExpression	"! GetHeapGlobalsOffset ( dbg , h_proc )"		6500545	0					
ANR	6500564	UnaryOperator	!		6500545	0					
ANR	6500565	CallExpression	"GetHeapGlobalsOffset ( dbg , h_proc )"		6500545	1					
ANR	6500566	Callee	GetHeapGlobalsOffset		6500545	0					
ANR	6500567	Identifier	GetHeapGlobalsOffset		6500545	0					
ANR	6500568	ArgumentList	dbg		6500545	1					
ANR	6500569	Argument	dbg		6500545	0					
ANR	6500570	Identifier	dbg		6500545	0					
ANR	6500571	Argument	h_proc		6500545	1					
ANR	6500572	Identifier	h_proc		6500545	0					
ANR	6500573	CompoundStatement		5:42:100:100	6500545	1					
ANR	6500574	ExpressionStatement	* lfhKey = 0	320:2:9459:9470	6500545	0	True				
ANR	6500575	AssignmentExpression	* lfhKey = 0		6500545	0		=			
ANR	6500576	UnaryOperationExpression	* lfhKey		6500545	0					
ANR	6500577	UnaryOperator	*		6500545	0					
ANR	6500578	Identifier	lfhKey		6500545	1					
ANR	6500579	PrimaryExpression	0		6500545	1					
ANR	6500580	ReturnStatement	return false ;	321:2:9474:9486	6500545	1	True				
ANR	6500581	Identifier	false		6500545	0					
ANR	6500582	IfStatement	if ( segment )		6500545	3					
ANR	6500583	Condition	segment	324:5:9497:9503	6500545	0	True				
ANR	6500584	Identifier	segment		6500545	0					
ANR	6500585	CompoundStatement		10:14:151:151	6500545	1					
ANR	6500586	ExpressionStatement	lfhKeyLocation = RtlpHpHeapGlobalsOffset + sizeof ( WPARAM )	325:2:9510:9568	6500545	0	True				
ANR	6500587	AssignmentExpression	lfhKeyLocation = RtlpHpHeapGlobalsOffset + sizeof ( WPARAM )		6500545	0		=			
ANR	6500588	Identifier	lfhKeyLocation		6500545	0					
ANR	6500589	AdditiveExpression	RtlpHpHeapGlobalsOffset + sizeof ( WPARAM )		6500545	1		+			
ANR	6500590	Identifier	RtlpHpHeapGlobalsOffset		6500545	0					
ANR	6500591	SizeofExpression	sizeof ( WPARAM )		6500545	1					
ANR	6500592	Sizeof	sizeof		6500545	0					
ANR	6500593	SizeofOperand	WPARAM		6500545	1					
ANR	6500594	ElseStatement	else		6500545	0					
ANR	6500595	CompoundStatement		12:8:223:223	6500545	0					
ANR	6500596	ExpressionStatement	lfhKeyLocation = RtlpLFHKeyOffset	327:2:9582:9615	6500545	0	True				
ANR	6500597	AssignmentExpression	lfhKeyLocation = RtlpLFHKeyOffset		6500545	0		=			
ANR	6500598	Identifier	lfhKeyLocation		6500545	0					
ANR	6500599	Identifier	RtlpLFHKeyOffset		6500545	1					
ANR	6500600	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , lfhKey , sizeof ( WPARAM ) , NULL ) )"		6500545	4					
ANR	6500601	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , lfhKey , sizeof ( WPARAM ) , NULL )"	329:5:9645:9725	6500545	0	True				
ANR	6500602	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , lfhKey , sizeof ( WPARAM ) , NULL )"		6500545	0					
ANR	6500603	UnaryOperator	!		6500545	0					
ANR	6500604	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , lfhKey , sizeof ( WPARAM ) , NULL )"		6500545	1					
ANR	6500605	Callee	ReadProcessMemory		6500545	0					
ANR	6500606	Identifier	ReadProcessMemory		6500545	0					
ANR	6500607	ArgumentList	h_proc		6500545	1					
ANR	6500608	Argument	h_proc		6500545	0					
ANR	6500609	Identifier	h_proc		6500545	0					
ANR	6500610	Argument	( PVOID ) lfhKeyLocation		6500545	1					
ANR	6500611	CastExpression	( PVOID ) lfhKeyLocation		6500545	0					
ANR	6500612	CastTarget	PVOID		6500545	0					
ANR	6500613	Identifier	lfhKeyLocation		6500545	1					
ANR	6500614	Argument	lfhKey		6500545	2					
ANR	6500615	Identifier	lfhKey		6500545	0					
ANR	6500616	Argument	sizeof ( WPARAM )		6500545	3					
ANR	6500617	SizeofExpression	sizeof ( WPARAM )		6500545	0					
ANR	6500618	Sizeof	sizeof		6500545	0					
ANR	6500619	SizeofOperand	WPARAM		6500545	1					
ANR	6500620	Argument	NULL		6500545	4					
ANR	6500621	Identifier	NULL		6500545	0					
ANR	6500622	CompoundStatement		15:88:373:373	6500545	1					
ANR	6500623	ExpressionStatement	"r_sys_perror ( ""ReadProcessMemory"" )"	330:2:9732:9766	6500545	0	True				
ANR	6500624	CallExpression	"r_sys_perror ( ""ReadProcessMemory"" )"		6500545	0					
ANR	6500625	Callee	r_sys_perror		6500545	0					
ANR	6500626	Identifier	r_sys_perror		6500545	0					
ANR	6500627	ArgumentList	"""ReadProcessMemory"""		6500545	1					
ANR	6500628	Argument	"""ReadProcessMemory"""		6500545	0					
ANR	6500629	PrimaryExpression	"""ReadProcessMemory"""		6500545	0					
ANR	6500630	ExpressionStatement	"eprintf ( ""LFH key not found.\\n"" )"	331:2:9770:9802	6500545	1	True				
ANR	6500631	CallExpression	"eprintf ( ""LFH key not found.\\n"" )"		6500545	0					
ANR	6500632	Callee	eprintf		6500545	0					
ANR	6500633	Identifier	eprintf		6500545	0					
ANR	6500634	ArgumentList	"""LFH key not found.\\n"""		6500545	1					
ANR	6500635	Argument	"""LFH key not found.\\n"""		6500545	0					
ANR	6500636	PrimaryExpression	"""LFH key not found.\\n"""		6500545	0					
ANR	6500637	ExpressionStatement	* lfhKey = 0	332:2:9806:9817	6500545	2	True				
ANR	6500638	AssignmentExpression	* lfhKey = 0		6500545	0		=			
ANR	6500639	UnaryOperationExpression	* lfhKey		6500545	0					
ANR	6500640	UnaryOperator	*		6500545	0					
ANR	6500641	Identifier	lfhKey		6500545	1					
ANR	6500642	PrimaryExpression	0		6500545	1					
ANR	6500643	ReturnStatement	return false ;	333:2:9821:9833	6500545	3	True				
ANR	6500644	Identifier	false		6500545	0					
ANR	6500645	ReturnStatement	return true ;	335:1:9839:9850	6500545	5	True				
ANR	6500646	Identifier	true		6500545	0					
ANR	6500647	ReturnType	static bool		6500545	1					
ANR	6500648	Identifier	GetLFHKey		6500545	2					
ANR	6500649	ParameterList	"RDebug * dbg , HANDLE h_proc , bool segment , WPARAM * lfhKey"		6500545	3					
ANR	6500650	Parameter	RDebug * dbg	315:22:9296:9306	6500545	0	True				
ANR	6500651	ParameterType	RDebug *		6500545	0					
ANR	6500652	Identifier	dbg		6500545	1					
ANR	6500653	Parameter	HANDLE h_proc	315:35:9309:9321	6500545	1	True				
ANR	6500654	ParameterType	HANDLE		6500545	0					
ANR	6500655	Identifier	h_proc		6500545	1					
ANR	6500656	Parameter	bool segment	315:50:9324:9335	6500545	2	True				
ANR	6500657	ParameterType	bool		6500545	0					
ANR	6500658	Identifier	segment		6500545	1					
ANR	6500659	Parameter	WPARAM * lfhKey	315:64:9338:9351	6500545	3	True				
ANR	6500660	ParameterType	WPARAM *		6500545	0					
ANR	6500661	Identifier	lfhKey		6500545	1					
ANR	6500662	CFGEntryNode	ENTRY		6500545		True				
ANR	6500663	CFGExitNode	EXIT		6500545		True				
ANR	6500664	Symbol	RtlpLFHKeyOffset		6500545						
ANR	6500665	Symbol	NULL		6500545						
ANR	6500666	Symbol	dbg		6500545						
ANR	6500667	Symbol	lfhKey		6500545						
ANR	6500668	Symbol	false		6500545						
ANR	6500669	Symbol	h_proc		6500545						
ANR	6500670	Symbol	lfhKeyLocation		6500545						
ANR	6500671	Symbol	ReadProcessMemory		6500545						
ANR	6500672	Symbol	* lfhKey		6500545						
ANR	6500673	Symbol	segment		6500545						
ANR	6500674	Symbol	GetHeapGlobalsOffset		6500545						
ANR	6500675	Symbol	true		6500545						
ANR	6500676	Symbol	RtlpHpHeapGlobalsOffset		6500545						
ANR	6500677	Function	DecodeHeapEntry	338:0:9855:10347							
ANR	6500678	FunctionDef	"DecodeHeapEntry (RDebug * dbg , PHEAP heap , PHEAP_ENTRY entry)"		6500677	0					
ANR	6500679	CompoundStatement		338:72:9927:10347	6500677	0					
ANR	6500680	ExpressionStatement	"r_return_val_if_fail ( heap && entry , false )"	339:1:9930:9973	6500677	0	True				
ANR	6500681	CallExpression	"r_return_val_if_fail ( heap && entry , false )"		6500677	0					
ANR	6500682	Callee	r_return_val_if_fail		6500677	0					
ANR	6500683	Identifier	r_return_val_if_fail		6500677	0					
ANR	6500684	ArgumentList	heap && entry		6500677	1					
ANR	6500685	Argument	heap && entry		6500677	0					
ANR	6500686	AndExpression	heap && entry		6500677	0		&&			
ANR	6500687	Identifier	heap		6500677	0					
ANR	6500688	Identifier	entry		6500677	1					
ANR	6500689	Argument	false		6500677	1					
ANR	6500690	Identifier	false		6500677	0					
ANR	6500691	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6500677	1					
ANR	6500692	Condition	dbg -> bits == R_SYS_BITS_64	340:5:9980:10005	6500677	0	True				
ANR	6500693	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6500677	0		==			
ANR	6500694	PtrMemberAccess	dbg -> bits		6500677	0					
ANR	6500695	Identifier	dbg		6500677	0					
ANR	6500696	Identifier	bits		6500677	1					
ANR	6500697	Identifier	R_SYS_BITS_64		6500677	1					
ANR	6500698	CompoundStatement		3:33:80:80	6500677	1					
ANR	6500699	ExpressionStatement	entry = ( WPARAM ) entry + dbg -> bits	341:2:10012:10045	6500677	0	True				
ANR	6500700	AssignmentExpression	entry = ( WPARAM ) entry + dbg -> bits		6500677	0		=			
ANR	6500701	Identifier	entry		6500677	0					
ANR	6500702	AdditiveExpression	( WPARAM ) entry + dbg -> bits		6500677	1		+			
ANR	6500703	CastExpression	( WPARAM ) entry		6500677	0					
ANR	6500704	CastTarget	WPARAM		6500677	0					
ANR	6500705	Identifier	entry		6500677	1					
ANR	6500706	PtrMemberAccess	dbg -> bits		6500677	1					
ANR	6500707	Identifier	dbg		6500677	0					
ANR	6500708	Identifier	bits		6500677	1					
ANR	6500709	IfStatement	if ( heap -> EncodeFlagMask && ( * ( UINT32 * ) entry & heap -> EncodeFlagMask ) )		6500677	2					
ANR	6500710	Condition	heap -> EncodeFlagMask && ( * ( UINT32 * ) entry & heap -> EncodeFlagMask )	343:5:10055:10119	6500677	0	True				
ANR	6500711	AndExpression	heap -> EncodeFlagMask && ( * ( UINT32 * ) entry & heap -> EncodeFlagMask )		6500677	0		&&			
ANR	6500712	PtrMemberAccess	heap -> EncodeFlagMask		6500677	0					
ANR	6500713	Identifier	heap		6500677	0					
ANR	6500714	Identifier	EncodeFlagMask		6500677	1					
ANR	6500715	BitAndExpression	* ( UINT32 * ) entry & heap -> EncodeFlagMask		6500677	1		&			
ANR	6500716	UnaryOperationExpression	* ( UINT32 * ) entry		6500677	0					
ANR	6500717	UnaryOperator	*		6500677	0					
ANR	6500718	CastExpression	( UINT32 * ) entry		6500677	1					
ANR	6500719	CastTarget	UINT32 *		6500677	0					
ANR	6500720	Identifier	entry		6500677	1					
ANR	6500721	PtrMemberAccess	heap -> EncodeFlagMask		6500677	1					
ANR	6500722	Identifier	heap		6500677	0					
ANR	6500723	Identifier	EncodeFlagMask		6500677	1					
ANR	6500724	CompoundStatement		6:72:194:194	6500677	1					
ANR	6500725	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6500677	0					
ANR	6500726	Condition	dbg -> bits == R_SYS_BITS_64	344:6:10130:10155	6500677	0	True				
ANR	6500727	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6500677	0		==			
ANR	6500728	PtrMemberAccess	dbg -> bits		6500677	0					
ANR	6500729	Identifier	dbg		6500677	0					
ANR	6500730	Identifier	bits		6500677	1					
ANR	6500731	Identifier	R_SYS_BITS_64		6500677	1					
ANR	6500732	CompoundStatement		7:34:230:230	6500677	1					
ANR	6500733	ExpressionStatement	heap = ( WPARAM ) heap + dbg -> bits	345:3:10163:10194	6500677	0	True				
ANR	6500734	AssignmentExpression	heap = ( WPARAM ) heap + dbg -> bits		6500677	0		=			
ANR	6500735	Identifier	heap		6500677	0					
ANR	6500736	AdditiveExpression	( WPARAM ) heap + dbg -> bits		6500677	1		+			
ANR	6500737	CastExpression	( WPARAM ) heap		6500677	0					
ANR	6500738	CastTarget	WPARAM		6500677	0					
ANR	6500739	Identifier	heap		6500677	1					
ANR	6500740	PtrMemberAccess	dbg -> bits		6500677	1					
ANR	6500741	Identifier	dbg		6500677	0					
ANR	6500742	Identifier	bits		6500677	1					
ANR	6500743	ExpressionStatement	* ( WPARAM * ) entry ^= * ( WPARAM * ) & heap -> Encoding	347:2:10202:10248	6500677	1	True				
ANR	6500744	AssignmentExpression	* ( WPARAM * ) entry ^= * ( WPARAM * ) & heap -> Encoding		6500677	0		^=			
ANR	6500745	UnaryOperationExpression	* ( WPARAM * ) entry		6500677	0					
ANR	6500746	UnaryOperator	*		6500677	0					
ANR	6500747	CastExpression	( WPARAM * ) entry		6500677	1					
ANR	6500748	CastTarget	WPARAM *		6500677	0					
ANR	6500749	Identifier	entry		6500677	1					
ANR	6500750	UnaryOperationExpression	* ( WPARAM * ) & heap -> Encoding		6500677	1					
ANR	6500751	UnaryOperator	*		6500677	0					
ANR	6500752	CastExpression	( WPARAM * ) & heap -> Encoding		6500677	1					
ANR	6500753	CastTarget	WPARAM *		6500677	0					
ANR	6500754	UnaryOperationExpression	& heap -> Encoding		6500677	1					
ANR	6500755	UnaryOperator	&		6500677	0					
ANR	6500756	PtrMemberAccess	heap -> Encoding		6500677	1					
ANR	6500757	Identifier	heap		6500677	0					
ANR	6500758	Identifier	Encoding		6500677	1					
ANR	6500759	ReturnStatement	return ! ( ( ( BYTE * ) entry ) [ 0 ] ^ ( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ] ) ;	349:1:10254:10345	6500677	3	True				
ANR	6500760	UnaryOperationExpression	! ( ( ( BYTE * ) entry ) [ 0 ] ^ ( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ] )		6500677	0					
ANR	6500761	UnaryOperator	!		6500677	0					
ANR	6500762	ExclusiveOrExpression	( ( BYTE * ) entry ) [ 0 ] ^ ( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ]		6500677	1		^			
ANR	6500763	ArrayIndexing	( ( BYTE * ) entry ) [ 0 ]		6500677	0					
ANR	6500764	CastExpression	( BYTE * ) entry		6500677	0					
ANR	6500765	CastTarget	BYTE *		6500677	0					
ANR	6500766	Identifier	entry		6500677	1					
ANR	6500767	PrimaryExpression	0		6500677	1					
ANR	6500768	ExclusiveOrExpression	( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ]		6500677	1		^			
ANR	6500769	ArrayIndexing	( ( BYTE * ) entry ) [ 1 ]		6500677	0					
ANR	6500770	CastExpression	( BYTE * ) entry		6500677	0					
ANR	6500771	CastTarget	BYTE *		6500677	0					
ANR	6500772	Identifier	entry		6500677	1					
ANR	6500773	PrimaryExpression	1		6500677	1					
ANR	6500774	ExclusiveOrExpression	( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ]		6500677	1		^			
ANR	6500775	ArrayIndexing	( ( BYTE * ) entry ) [ 2 ]		6500677	0					
ANR	6500776	CastExpression	( BYTE * ) entry		6500677	0					
ANR	6500777	CastTarget	BYTE *		6500677	0					
ANR	6500778	Identifier	entry		6500677	1					
ANR	6500779	PrimaryExpression	2		6500677	1					
ANR	6500780	ArrayIndexing	( ( BYTE * ) entry ) [ 3 ]		6500677	1					
ANR	6500781	CastExpression	( BYTE * ) entry		6500677	0					
ANR	6500782	CastTarget	BYTE *		6500677	0					
ANR	6500783	Identifier	entry		6500677	1					
ANR	6500784	PrimaryExpression	3		6500677	1					
ANR	6500785	ReturnType	static bool		6500677	1					
ANR	6500786	Identifier	DecodeHeapEntry		6500677	2					
ANR	6500787	ParameterList	"RDebug * dbg , PHEAP heap , PHEAP_ENTRY entry"		6500677	3					
ANR	6500788	Parameter	RDebug * dbg	338:28:9883:9893	6500677	0	True				
ANR	6500789	ParameterType	RDebug *		6500677	0					
ANR	6500790	Identifier	dbg		6500677	1					
ANR	6500791	Parameter	PHEAP heap	338:41:9896:9905	6500677	1	True				
ANR	6500792	ParameterType	PHEAP		6500677	0					
ANR	6500793	Identifier	heap		6500677	1					
ANR	6500794	Parameter	PHEAP_ENTRY entry	338:53:9908:9924	6500677	2	True				
ANR	6500795	ParameterType	PHEAP_ENTRY		6500677	0					
ANR	6500796	Identifier	entry		6500677	1					
ANR	6500797	CFGEntryNode	ENTRY		6500677		True				
ANR	6500798	CFGExitNode	EXIT		6500677		True				
ANR	6500799	Symbol	* ( UINT32 * ) entry		6500677						
ANR	6500800	Symbol	& heap -> Encoding		6500677						
ANR	6500801	Symbol	heap -> EncodeFlagMask		6500677						
ANR	6500802	Symbol	heap -> Encoding		6500677						
ANR	6500803	Symbol	dbg		6500677						
ANR	6500804	Symbol	false		6500677						
ANR	6500805	Symbol	dbg -> bits		6500677						
ANR	6500806	Symbol	* dbg		6500677						
ANR	6500807	Symbol	entry		6500677						
ANR	6500808	Symbol	* ( WPARAM * ) entry		6500677						
ANR	6500809	Symbol	heap		6500677						
ANR	6500810	Symbol	* ( WPARAM * ) & heap -> Encoding		6500677						
ANR	6500811	Symbol	* heap		6500677						
ANR	6500812	Symbol	R_SYS_BITS_64		6500677						
ANR	6500813	Symbol	* entry		6500677						
ANR	6500814	Function	DecodeLFHEntry	352:0:10350:10864							
ANR	6500815	FunctionDef	"DecodeLFHEntry (RDebug * dbg , PHEAP heap , PHEAP_ENTRY entry , PHEAP_USERDATA_HEADER userBlocks , WPARAM key , WPARAM addr)"		6500814	0					
ANR	6500816	CompoundStatement		352:130:10480:10864	6500814	0					
ANR	6500817	ExpressionStatement	"r_return_val_if_fail ( heap && entry , false )"	353:1:10483:10526	6500814	0	True				
ANR	6500818	CallExpression	"r_return_val_if_fail ( heap && entry , false )"		6500814	0					
ANR	6500819	Callee	r_return_val_if_fail		6500814	0					
ANR	6500820	Identifier	r_return_val_if_fail		6500814	0					
ANR	6500821	ArgumentList	heap && entry		6500814	1					
ANR	6500822	Argument	heap && entry		6500814	0					
ANR	6500823	AndExpression	heap && entry		6500814	0		&&			
ANR	6500824	Identifier	heap		6500814	0					
ANR	6500825	Identifier	entry		6500814	1					
ANR	6500826	Argument	false		6500814	1					
ANR	6500827	Identifier	false		6500814	0					
ANR	6500828	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6500814	1					
ANR	6500829	Condition	dbg -> bits == R_SYS_BITS_64	354:5:10533:10558	6500814	0	True				
ANR	6500830	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6500814	0		==			
ANR	6500831	PtrMemberAccess	dbg -> bits		6500814	0					
ANR	6500832	Identifier	dbg		6500814	0					
ANR	6500833	Identifier	bits		6500814	1					
ANR	6500834	Identifier	R_SYS_BITS_64		6500814	1					
ANR	6500835	CompoundStatement		3:33:80:80	6500814	1					
ANR	6500836	ExpressionStatement	entry = ( WPARAM ) entry + dbg -> bits	355:2:10565:10598	6500814	0	True				
ANR	6500837	AssignmentExpression	entry = ( WPARAM ) entry + dbg -> bits		6500814	0		=			
ANR	6500838	Identifier	entry		6500814	0					
ANR	6500839	AdditiveExpression	( WPARAM ) entry + dbg -> bits		6500814	1		+			
ANR	6500840	CastExpression	( WPARAM ) entry		6500814	0					
ANR	6500841	CastTarget	WPARAM		6500814	0					
ANR	6500842	Identifier	entry		6500814	1					
ANR	6500843	PtrMemberAccess	dbg -> bits		6500814	1					
ANR	6500844	Identifier	dbg		6500814	0					
ANR	6500845	Identifier	bits		6500814	1					
ANR	6500846	IfStatement	if ( heap -> EncodeFlagMask )		6500814	2					
ANR	6500847	Condition	heap -> EncodeFlagMask	358:5:10609:10628	6500814	0	True				
ANR	6500848	PtrMemberAccess	heap -> EncodeFlagMask		6500814	0					
ANR	6500849	Identifier	heap		6500814	0					
ANR	6500850	Identifier	EncodeFlagMask		6500814	1					
ANR	6500851	CompoundStatement		7:27:150:150	6500814	1					
ANR	6500852	ExpressionStatement	* ( DWORD * ) entry ^= PtrToInt ( heap -> BaseAddress ) ^ ( DWORD ) ( ( ( DWORD ) addr - PtrToInt ( userBlocks ) ) << 0xC ) ^ ( DWORD ) key ^ ( addr >> 4 )	359:2:10635:10765	6500814	0	True				
ANR	6500853	AssignmentExpression	* ( DWORD * ) entry ^= PtrToInt ( heap -> BaseAddress ) ^ ( DWORD ) ( ( ( DWORD ) addr - PtrToInt ( userBlocks ) ) << 0xC ) ^ ( DWORD ) key ^ ( addr >> 4 )		6500814	0		^=			
ANR	6500854	UnaryOperationExpression	* ( DWORD * ) entry		6500814	0					
ANR	6500855	UnaryOperator	*		6500814	0					
ANR	6500856	CastExpression	( DWORD * ) entry		6500814	1					
ANR	6500857	CastTarget	DWORD *		6500814	0					
ANR	6500858	Identifier	entry		6500814	1					
ANR	6500859	ExclusiveOrExpression	PtrToInt ( heap -> BaseAddress ) ^ ( DWORD ) ( ( ( DWORD ) addr - PtrToInt ( userBlocks ) ) << 0xC ) ^ ( DWORD ) key ^ ( addr >> 4 )		6500814	1		^			
ANR	6500860	CallExpression	PtrToInt ( heap -> BaseAddress )		6500814	0					
ANR	6500861	Callee	PtrToInt		6500814	0					
ANR	6500862	Identifier	PtrToInt		6500814	0					
ANR	6500863	ArgumentList	heap -> BaseAddress		6500814	1					
ANR	6500864	Argument	heap -> BaseAddress		6500814	0					
ANR	6500865	PtrMemberAccess	heap -> BaseAddress		6500814	0					
ANR	6500866	Identifier	heap		6500814	0					
ANR	6500867	Identifier	BaseAddress		6500814	1					
ANR	6500868	ExclusiveOrExpression	( DWORD ) ( ( ( DWORD ) addr - PtrToInt ( userBlocks ) ) << 0xC ) ^ ( DWORD ) key ^ ( addr >> 4 )		6500814	1		^			
ANR	6500869	CastExpression	( DWORD ) ( ( ( DWORD ) addr - PtrToInt ( userBlocks ) ) << 0xC )		6500814	0					
ANR	6500870	CastTarget	DWORD		6500814	0					
ANR	6500871	ShiftExpression	( ( DWORD ) addr - PtrToInt ( userBlocks ) ) << 0xC		6500814	1		<<			
ANR	6500872	AdditiveExpression	( DWORD ) addr - PtrToInt ( userBlocks )		6500814	0		-			
ANR	6500873	CastExpression	( DWORD ) addr		6500814	0					
ANR	6500874	CastTarget	DWORD		6500814	0					
ANR	6500875	Identifier	addr		6500814	1					
ANR	6500876	CallExpression	PtrToInt ( userBlocks )		6500814	1					
ANR	6500877	Callee	PtrToInt		6500814	0					
ANR	6500878	Identifier	PtrToInt		6500814	0					
ANR	6500879	ArgumentList	userBlocks		6500814	1					
ANR	6500880	Argument	userBlocks		6500814	0					
ANR	6500881	Identifier	userBlocks		6500814	0					
ANR	6500882	PrimaryExpression	0xC		6500814	1					
ANR	6500883	ExclusiveOrExpression	( DWORD ) key ^ ( addr >> 4 )		6500814	1		^			
ANR	6500884	CastExpression	( DWORD ) key		6500814	0					
ANR	6500885	CastTarget	DWORD		6500814	0					
ANR	6500886	Identifier	key		6500814	1					
ANR	6500887	ShiftExpression	addr >> 4		6500814	1		>>			
ANR	6500888	Identifier	addr		6500814	0					
ANR	6500889	PrimaryExpression	4		6500814	1					
ANR	6500890	ReturnStatement	return ! ( ( ( BYTE * ) entry ) [ 0 ] ^ ( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ] ) ;	361:1:10771:10862	6500814	3	True				
ANR	6500891	UnaryOperationExpression	! ( ( ( BYTE * ) entry ) [ 0 ] ^ ( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ] )		6500814	0					
ANR	6500892	UnaryOperator	!		6500814	0					
ANR	6500893	ExclusiveOrExpression	( ( BYTE * ) entry ) [ 0 ] ^ ( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ]		6500814	1		^			
ANR	6500894	ArrayIndexing	( ( BYTE * ) entry ) [ 0 ]		6500814	0					
ANR	6500895	CastExpression	( BYTE * ) entry		6500814	0					
ANR	6500896	CastTarget	BYTE *		6500814	0					
ANR	6500897	Identifier	entry		6500814	1					
ANR	6500898	PrimaryExpression	0		6500814	1					
ANR	6500899	ExclusiveOrExpression	( ( BYTE * ) entry ) [ 1 ] ^ ( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ]		6500814	1		^			
ANR	6500900	ArrayIndexing	( ( BYTE * ) entry ) [ 1 ]		6500814	0					
ANR	6500901	CastExpression	( BYTE * ) entry		6500814	0					
ANR	6500902	CastTarget	BYTE *		6500814	0					
ANR	6500903	Identifier	entry		6500814	1					
ANR	6500904	PrimaryExpression	1		6500814	1					
ANR	6500905	ExclusiveOrExpression	( ( BYTE * ) entry ) [ 2 ] ^ ( ( BYTE * ) entry ) [ 3 ]		6500814	1		^			
ANR	6500906	ArrayIndexing	( ( BYTE * ) entry ) [ 2 ]		6500814	0					
ANR	6500907	CastExpression	( BYTE * ) entry		6500814	0					
ANR	6500908	CastTarget	BYTE *		6500814	0					
ANR	6500909	Identifier	entry		6500814	1					
ANR	6500910	PrimaryExpression	2		6500814	1					
ANR	6500911	ArrayIndexing	( ( BYTE * ) entry ) [ 3 ]		6500814	1					
ANR	6500912	CastExpression	( BYTE * ) entry		6500814	0					
ANR	6500913	CastTarget	BYTE *		6500814	0					
ANR	6500914	Identifier	entry		6500814	1					
ANR	6500915	PrimaryExpression	3		6500814	1					
ANR	6500916	ReturnType	static bool		6500814	1					
ANR	6500917	Identifier	DecodeLFHEntry		6500814	2					
ANR	6500918	ParameterList	"RDebug * dbg , PHEAP heap , PHEAP_ENTRY entry , PHEAP_USERDATA_HEADER userBlocks , WPARAM key , WPARAM addr"		6500814	3					
ANR	6500919	Parameter	RDebug * dbg	352:27:10377:10387	6500814	0	True				
ANR	6500920	ParameterType	RDebug *		6500814	0					
ANR	6500921	Identifier	dbg		6500814	1					
ANR	6500922	Parameter	PHEAP heap	352:40:10390:10399	6500814	1	True				
ANR	6500923	ParameterType	PHEAP		6500814	0					
ANR	6500924	Identifier	heap		6500814	1					
ANR	6500925	Parameter	PHEAP_ENTRY entry	352:52:10402:10418	6500814	2	True				
ANR	6500926	ParameterType	PHEAP_ENTRY		6500814	0					
ANR	6500927	Identifier	entry		6500814	1					
ANR	6500928	Parameter	PHEAP_USERDATA_HEADER userBlocks	352:71:10421:10452	6500814	3	True				
ANR	6500929	ParameterType	PHEAP_USERDATA_HEADER		6500814	0					
ANR	6500930	Identifier	userBlocks		6500814	1					
ANR	6500931	Parameter	WPARAM key	352:105:10455:10464	6500814	4	True				
ANR	6500932	ParameterType	WPARAM		6500814	0					
ANR	6500933	Identifier	key		6500814	1					
ANR	6500934	Parameter	WPARAM addr	352:117:10467:10477	6500814	5	True				
ANR	6500935	ParameterType	WPARAM		6500814	0					
ANR	6500936	Identifier	addr		6500814	1					
ANR	6500937	CFGEntryNode	ENTRY		6500814		True				
ANR	6500938	CFGExitNode	EXIT		6500814		True				
ANR	6500939	Symbol	userBlocks		6500814						
ANR	6500940	Symbol	heap -> EncodeFlagMask		6500814						
ANR	6500941	Symbol	dbg		6500814						
ANR	6500942	Symbol	false		6500814						
ANR	6500943	Symbol	dbg -> bits		6500814						
ANR	6500944	Symbol	PtrToInt		6500814						
ANR	6500945	Symbol	* dbg		6500814						
ANR	6500946	Symbol	entry		6500814						
ANR	6500947	Symbol	heap -> BaseAddress		6500814						
ANR	6500948	Symbol	* ( DWORD * ) entry		6500814						
ANR	6500949	Symbol	heap		6500814						
ANR	6500950	Symbol	addr		6500814						
ANR	6500951	Symbol	* heap		6500814						
ANR	6500952	Symbol	key		6500814						
ANR	6500953	Symbol	R_SYS_BITS_64		6500814						
ANR	6500954	Symbol	* entry		6500814						
ANR	6500955	ClassDef	_th_query_params	364:8:10875:11001							
ANR	6500956	DeclStmt									
ANR	6500957	Decl							RDebug	RDebug *	dbg
ANR	6500958	DeclStmt									
ANR	6500959	Decl							DWORD	DWORD	mask
ANR	6500960	DeclStmt									
ANR	6500961	Decl							PDEBUG_BUFFER	PDEBUG_BUFFER	db
ANR	6500962	DeclStmt									
ANR	6500963	Decl							DWORD	DWORD	ret
ANR	6500964	DeclStmt									
ANR	6500965	Decl							bool	bool	fin
ANR	6500966	DeclStmt									
ANR	6500967	Decl							bool	bool	hanged
ANR	6500968	DeclStmt									
ANR	6500969	Decl							_th_query_params	_th_query_params	th_query_params
ANR	6500970	Function	__th_QueryDebugBuffer	373:0:11004:11267							
ANR	6500971	FunctionDef	__th_QueryDebugBuffer (th_query_params * params)		6500970	0					
ANR	6500972	CompoundStatement		373:67:11071:11267	6500970	0					
ANR	6500973	ExpressionStatement	"params -> ret = RtlQueryProcessDebugInformation ( params -> dbg -> pid , params -> mask , params -> db )"	374:1:11074:11164	6500970	0	True				
ANR	6500974	AssignmentExpression	"params -> ret = RtlQueryProcessDebugInformation ( params -> dbg -> pid , params -> mask , params -> db )"		6500970	0		=			
ANR	6500975	PtrMemberAccess	params -> ret		6500970	0					
ANR	6500976	Identifier	params		6500970	0					
ANR	6500977	Identifier	ret		6500970	1					
ANR	6500978	CallExpression	"RtlQueryProcessDebugInformation ( params -> dbg -> pid , params -> mask , params -> db )"		6500970	1					
ANR	6500979	Callee	RtlQueryProcessDebugInformation		6500970	0					
ANR	6500980	Identifier	RtlQueryProcessDebugInformation		6500970	0					
ANR	6500981	ArgumentList	params -> dbg -> pid		6500970	1					
ANR	6500982	Argument	params -> dbg -> pid		6500970	0					
ANR	6500983	PtrMemberAccess	params -> dbg -> pid		6500970	0					
ANR	6500984	PtrMemberAccess	params -> dbg		6500970	0					
ANR	6500985	Identifier	params		6500970	0					
ANR	6500986	Identifier	dbg		6500970	1					
ANR	6500987	Identifier	pid		6500970	1					
ANR	6500988	Argument	params -> mask		6500970	1					
ANR	6500989	PtrMemberAccess	params -> mask		6500970	0					
ANR	6500990	Identifier	params		6500970	0					
ANR	6500991	Identifier	mask		6500970	1					
ANR	6500992	Argument	params -> db		6500970	2					
ANR	6500993	PtrMemberAccess	params -> db		6500970	0					
ANR	6500994	Identifier	params		6500970	0					
ANR	6500995	Identifier	db		6500970	1					
ANR	6500996	ExpressionStatement	params -> fin = true	375:1:11167:11185	6500970	1	True				
ANR	6500997	AssignmentExpression	params -> fin = true		6500970	0		=			
ANR	6500998	PtrMemberAccess	params -> fin		6500970	0					
ANR	6500999	Identifier	params		6500970	0					
ANR	6501000	Identifier	fin		6500970	1					
ANR	6501001	Identifier	true		6500970	1					
ANR	6501002	IfStatement	if ( params -> hanged )		6500970	2					
ANR	6501003	Condition	params -> hanged	376:5:11192:11205	6500970	0	True				
ANR	6501004	PtrMemberAccess	params -> hanged		6500970	0					
ANR	6501005	Identifier	params		6500970	0					
ANR	6501006	Identifier	hanged		6500970	1					
ANR	6501007	CompoundStatement		4:21:136:136	6500970	1					
ANR	6501008	ExpressionStatement	RtlDestroyQueryDebugBuffer ( params -> db )	377:2:11212:11251	6500970	0	True				
ANR	6501009	CallExpression	RtlDestroyQueryDebugBuffer ( params -> db )		6500970	0					
ANR	6501010	Callee	RtlDestroyQueryDebugBuffer		6500970	0					
ANR	6501011	Identifier	RtlDestroyQueryDebugBuffer		6500970	0					
ANR	6501012	ArgumentList	params -> db		6500970	1					
ANR	6501013	Argument	params -> db		6500970	0					
ANR	6501014	PtrMemberAccess	params -> db		6500970	0					
ANR	6501015	Identifier	params		6500970	0					
ANR	6501016	Identifier	db		6500970	1					
ANR	6501017	ReturnStatement	return 0 ;	379:1:11257:11265	6500970	3	True				
ANR	6501018	PrimaryExpression	0		6500970	0					
ANR	6501019	ReturnType	static DWORD WINAPI		6500970	1					
ANR	6501020	Identifier	__th_QueryDebugBuffer		6500970	2					
ANR	6501021	ParameterList	th_query_params * params		6500970	3					
ANR	6501022	Parameter	th_query_params * params	373:42:11046:11068	6500970	0	True				
ANR	6501023	ParameterType	th_query_params *		6500970	0					
ANR	6501024	Identifier	params		6500970	1					
ANR	6501025	CFGEntryNode	ENTRY		6500970		True				
ANR	6501026	CFGExitNode	EXIT		6500970		True				
ANR	6501027	Symbol	* params -> dbg		6500970						
ANR	6501028	Symbol	params -> hanged		6500970						
ANR	6501029	Symbol	params -> dbg -> pid		6500970						
ANR	6501030	Symbol	params		6500970						
ANR	6501031	Symbol	* * params		6500970						
ANR	6501032	Symbol	RtlQueryProcessDebugInformation		6500970						
ANR	6501033	Symbol	params -> ret		6500970						
ANR	6501034	Symbol	params -> db		6500970						
ANR	6501035	Symbol	params -> mask		6500970						
ANR	6501036	Symbol	params -> fin		6500970						
ANR	6501037	Symbol	params -> dbg		6500970						
ANR	6501038	Symbol	true		6500970						
ANR	6501039	Symbol	* params		6500970						
ANR	6501040	Function	GetListOfHeaps	382:0:11270:12135							
ANR	6501041	FunctionDef	"GetListOfHeaps (RDebug * dbg , HANDLE ph)"		6501040	0					
ANR	6501042	CompoundStatement		382:53:11323:12135	6501040	0					
ANR	6501043	IdentifierDeclStatement	PROCESS_BASIC_INFORMATION pib ;	383:1:11326:11355	6501040	0	True				
ANR	6501044	IdentifierDecl	pib		6501040	0					
ANR	6501045	IdentifierDeclType	PROCESS_BASIC_INFORMATION		6501040	0					
ANR	6501046	Identifier	pib		6501040	1					
ANR	6501047	IfStatement	"if ( w32_NtQueryInformationProcess ( ph , ProcessBasicInformation , & pib , sizeof ( pib ) , NULL ) )"		6501040	1					
ANR	6501048	Condition	"w32_NtQueryInformationProcess ( ph , ProcessBasicInformation , & pib , sizeof ( pib ) , NULL )"	384:5:11362:11446	6501040	0	True				
ANR	6501049	CallExpression	"w32_NtQueryInformationProcess ( ph , ProcessBasicInformation , & pib , sizeof ( pib ) , NULL )"		6501040	0					
ANR	6501050	Callee	w32_NtQueryInformationProcess		6501040	0					
ANR	6501051	Identifier	w32_NtQueryInformationProcess		6501040	0					
ANR	6501052	ArgumentList	ph		6501040	1					
ANR	6501053	Argument	ph		6501040	0					
ANR	6501054	Identifier	ph		6501040	0					
ANR	6501055	Argument	ProcessBasicInformation		6501040	1					
ANR	6501056	Identifier	ProcessBasicInformation		6501040	0					
ANR	6501057	Argument	& pib		6501040	2					
ANR	6501058	UnaryOperationExpression	& pib		6501040	0					
ANR	6501059	UnaryOperator	&		6501040	0					
ANR	6501060	Identifier	pib		6501040	1					
ANR	6501061	Argument	sizeof ( pib )		6501040	3					
ANR	6501062	SizeofExpression	sizeof ( pib )		6501040	0					
ANR	6501063	Sizeof	sizeof		6501040	0					
ANR	6501064	SizeofOperand	pib		6501040	1					
ANR	6501065	Argument	NULL		6501040	4					
ANR	6501066	Identifier	NULL		6501040	0					
ANR	6501067	CompoundStatement		3:92:125:125	6501040	1					
ANR	6501068	ExpressionStatement	"r_sys_perror ( ""NtQueryInformationProcess"" )"	385:2:11453:11495	6501040	0	True				
ANR	6501069	CallExpression	"r_sys_perror ( ""NtQueryInformationProcess"" )"		6501040	0					
ANR	6501070	Callee	r_sys_perror		6501040	0					
ANR	6501071	Identifier	r_sys_perror		6501040	0					
ANR	6501072	ArgumentList	"""NtQueryInformationProcess"""		6501040	1					
ANR	6501073	Argument	"""NtQueryInformationProcess"""		6501040	0					
ANR	6501074	PrimaryExpression	"""NtQueryInformationProcess"""		6501040	0					
ANR	6501075	ReturnStatement	return NULL ;	386:2:11499:11510	6501040	1	True				
ANR	6501076	Identifier	NULL		6501040	0					
ANR	6501077	IdentifierDeclStatement	PEB peb ;	388:1:11516:11523	6501040	2	True				
ANR	6501078	IdentifierDecl	peb		6501040	0					
ANR	6501079	IdentifierDeclType	PEB		6501040	0					
ANR	6501080	Identifier	peb		6501040	1					
ANR	6501081	ExpressionStatement	"ReadProcessMemory ( ph , pib . PebBaseAddress , & peb , sizeof ( PEB ) , NULL )"	389:1:11526:11594	6501040	3	True				
ANR	6501082	CallExpression	"ReadProcessMemory ( ph , pib . PebBaseAddress , & peb , sizeof ( PEB ) , NULL )"		6501040	0					
ANR	6501083	Callee	ReadProcessMemory		6501040	0					
ANR	6501084	Identifier	ReadProcessMemory		6501040	0					
ANR	6501085	ArgumentList	ph		6501040	1					
ANR	6501086	Argument	ph		6501040	0					
ANR	6501087	Identifier	ph		6501040	0					
ANR	6501088	Argument	pib . PebBaseAddress		6501040	1					
ANR	6501089	MemberAccess	pib . PebBaseAddress		6501040	0					
ANR	6501090	Identifier	pib		6501040	0					
ANR	6501091	Identifier	PebBaseAddress		6501040	1					
ANR	6501092	Argument	& peb		6501040	2					
ANR	6501093	UnaryOperationExpression	& peb		6501040	0					
ANR	6501094	UnaryOperator	&		6501040	0					
ANR	6501095	Identifier	peb		6501040	1					
ANR	6501096	Argument	sizeof ( PEB )		6501040	3					
ANR	6501097	SizeofExpression	sizeof ( PEB )		6501040	0					
ANR	6501098	Sizeof	sizeof		6501040	0					
ANR	6501099	SizeofOperand	PEB		6501040	1					
ANR	6501100	Argument	NULL		6501040	4					
ANR	6501101	Identifier	NULL		6501040	0					
ANR	6501102	IdentifierDeclStatement	RList * heaps = r_list_new ( ) ;	390:1:11597:11625	6501040	4	True				
ANR	6501103	IdentifierDecl	* heaps = r_list_new ( )		6501040	0					
ANR	6501104	IdentifierDeclType	RList *		6501040	0					
ANR	6501105	Identifier	heaps		6501040	1					
ANR	6501106	AssignmentExpression	* heaps = r_list_new ( )		6501040	2		=			
ANR	6501107	Identifier	heaps		6501040	0					
ANR	6501108	CallExpression	r_list_new ( )		6501040	1					
ANR	6501109	Callee	r_list_new		6501040	0					
ANR	6501110	Identifier	r_list_new		6501040	0					
ANR	6501111	ArgumentList			6501040	1					
ANR	6501112	IdentifierDeclStatement	PVOID heapAddress ;	391:1:11628:11645	6501040	5	True				
ANR	6501113	IdentifierDecl	heapAddress		6501040	0					
ANR	6501114	IdentifierDeclType	PVOID		6501040	0					
ANR	6501115	Identifier	heapAddress		6501040	1					
ANR	6501116	IdentifierDeclStatement	PVOID * processHeaps ;	392:1:11648:11667	6501040	6	True				
ANR	6501117	IdentifierDecl	* processHeaps		6501040	0					
ANR	6501118	IdentifierDeclType	PVOID *		6501040	0					
ANR	6501119	Identifier	processHeaps		6501040	1					
ANR	6501120	IdentifierDeclStatement	ULONG numberOfHeaps ;	393:1:11670:11689	6501040	7	True				
ANR	6501121	IdentifierDecl	numberOfHeaps		6501040	0					
ANR	6501122	IdentifierDeclType	ULONG		6501040	0					
ANR	6501123	Identifier	numberOfHeaps		6501040	1					
ANR	6501124	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6501040	8					
ANR	6501125	Condition	dbg -> bits == R_SYS_BITS_64	394:5:11696:11721	6501040	0	True				
ANR	6501126	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6501040	0		==			
ANR	6501127	PtrMemberAccess	dbg -> bits		6501040	0					
ANR	6501128	Identifier	dbg		6501040	0					
ANR	6501129	Identifier	bits		6501040	1					
ANR	6501130	Identifier	R_SYS_BITS_64		6501040	1					
ANR	6501131	CompoundStatement		13:33:400:400	6501040	1					
ANR	6501132	ExpressionStatement	processHeaps = * ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0xF0 ) )	395:2:11728:11776	6501040	0	True				
ANR	6501133	AssignmentExpression	processHeaps = * ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0xF0 ) )		6501040	0		=			
ANR	6501134	Identifier	processHeaps		6501040	0					
ANR	6501135	UnaryOperationExpression	* ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0xF0 ) )		6501040	1					
ANR	6501136	UnaryOperator	*		6501040	0					
ANR	6501137	CastExpression	( ut64 * ) ( ( ( ut8 * ) & peb ) + 0xF0 )		6501040	1					
ANR	6501138	CastTarget	ut64 *		6501040	0					
ANR	6501139	AdditiveExpression	( ( ut8 * ) & peb ) + 0xF0		6501040	1		+			
ANR	6501140	CastExpression	( ut8 * ) & peb		6501040	0					
ANR	6501141	CastTarget	ut8 *		6501040	0					
ANR	6501142	UnaryOperationExpression	& peb		6501040	1					
ANR	6501143	UnaryOperator	&		6501040	0					
ANR	6501144	Identifier	peb		6501040	1					
ANR	6501145	PrimaryExpression	0xF0		6501040	1					
ANR	6501146	ExpressionStatement	numberOfHeaps = * ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0xE8 ) )	396:2:11780:11831	6501040	1	True				
ANR	6501147	AssignmentExpression	numberOfHeaps = * ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0xE8 ) )		6501040	0		=			
ANR	6501148	Identifier	numberOfHeaps		6501040	0					
ANR	6501149	UnaryOperationExpression	* ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0xE8 ) )		6501040	1					
ANR	6501150	UnaryOperator	*		6501040	0					
ANR	6501151	CastExpression	( ULONG * ) ( ( ( ut8 * ) & peb ) + 0xE8 )		6501040	1					
ANR	6501152	CastTarget	ULONG *		6501040	0					
ANR	6501153	AdditiveExpression	( ( ut8 * ) & peb ) + 0xE8		6501040	1		+			
ANR	6501154	CastExpression	( ut8 * ) & peb		6501040	0					
ANR	6501155	CastTarget	ut8 *		6501040	0					
ANR	6501156	UnaryOperationExpression	& peb		6501040	1					
ANR	6501157	UnaryOperator	&		6501040	0					
ANR	6501158	Identifier	peb		6501040	1					
ANR	6501159	PrimaryExpression	0xE8		6501040	1					
ANR	6501160	ElseStatement	else		6501040	0					
ANR	6501161	CompoundStatement		16:8:517:517	6501040	0					
ANR	6501162	ExpressionStatement	processHeaps = * ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0x90 ) )	398:2:11845:11893	6501040	0	True				
ANR	6501163	AssignmentExpression	processHeaps = * ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0x90 ) )		6501040	0		=			
ANR	6501164	Identifier	processHeaps		6501040	0					
ANR	6501165	UnaryOperationExpression	* ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0x90 ) )		6501040	1					
ANR	6501166	UnaryOperator	*		6501040	0					
ANR	6501167	CastExpression	( ut64 * ) ( ( ( ut8 * ) & peb ) + 0x90 )		6501040	1					
ANR	6501168	CastTarget	ut64 *		6501040	0					
ANR	6501169	AdditiveExpression	( ( ut8 * ) & peb ) + 0x90		6501040	1		+			
ANR	6501170	CastExpression	( ut8 * ) & peb		6501040	0					
ANR	6501171	CastTarget	ut8 *		6501040	0					
ANR	6501172	UnaryOperationExpression	& peb		6501040	1					
ANR	6501173	UnaryOperator	&		6501040	0					
ANR	6501174	Identifier	peb		6501040	1					
ANR	6501175	PrimaryExpression	0x90		6501040	1					
ANR	6501176	ExpressionStatement	numberOfHeaps = * ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0x88 ) )	399:2:11897:11948	6501040	1	True				
ANR	6501177	AssignmentExpression	numberOfHeaps = * ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0x88 ) )		6501040	0		=			
ANR	6501178	Identifier	numberOfHeaps		6501040	0					
ANR	6501179	UnaryOperationExpression	* ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0x88 ) )		6501040	1					
ANR	6501180	UnaryOperator	*		6501040	0					
ANR	6501181	CastExpression	( ULONG * ) ( ( ( ut8 * ) & peb ) + 0x88 )		6501040	1					
ANR	6501182	CastTarget	ULONG *		6501040	0					
ANR	6501183	AdditiveExpression	( ( ut8 * ) & peb ) + 0x88		6501040	1		+			
ANR	6501184	CastExpression	( ut8 * ) & peb		6501040	0					
ANR	6501185	CastTarget	ut8 *		6501040	0					
ANR	6501186	UnaryOperationExpression	& peb		6501040	1					
ANR	6501187	UnaryOperator	&		6501040	0					
ANR	6501188	Identifier	peb		6501040	1					
ANR	6501189	PrimaryExpression	0x88		6501040	1					
ANR	6501190	DoStatement	do		6501040	9					
ANR	6501191	CompoundStatement		20:4:633:633	6501040	0					
ANR	6501192	ExpressionStatement	"ReadProcessMemory ( ph , processHeaps , & heapAddress , sizeof ( PVOID ) , NULL )"	402:2:11961:12033	6501040	0	True				
ANR	6501193	CallExpression	"ReadProcessMemory ( ph , processHeaps , & heapAddress , sizeof ( PVOID ) , NULL )"		6501040	0					
ANR	6501194	Callee	ReadProcessMemory		6501040	0					
ANR	6501195	Identifier	ReadProcessMemory		6501040	0					
ANR	6501196	ArgumentList	ph		6501040	1					
ANR	6501197	Argument	ph		6501040	0					
ANR	6501198	Identifier	ph		6501040	0					
ANR	6501199	Argument	processHeaps		6501040	1					
ANR	6501200	Identifier	processHeaps		6501040	0					
ANR	6501201	Argument	& heapAddress		6501040	2					
ANR	6501202	UnaryOperationExpression	& heapAddress		6501040	0					
ANR	6501203	UnaryOperator	&		6501040	0					
ANR	6501204	Identifier	heapAddress		6501040	1					
ANR	6501205	Argument	sizeof ( PVOID )		6501040	3					
ANR	6501206	SizeofExpression	sizeof ( PVOID )		6501040	0					
ANR	6501207	Sizeof	sizeof		6501040	0					
ANR	6501208	SizeofOperand	PVOID		6501040	1					
ANR	6501209	Argument	NULL		6501040	4					
ANR	6501210	Identifier	NULL		6501040	0					
ANR	6501211	ExpressionStatement	"r_list_push ( heaps , heapAddress )"	403:2:12037:12069	6501040	1	True				
ANR	6501212	CallExpression	"r_list_push ( heaps , heapAddress )"		6501040	0					
ANR	6501213	Callee	r_list_push		6501040	0					
ANR	6501214	Identifier	r_list_push		6501040	0					
ANR	6501215	ArgumentList	heaps		6501040	1					
ANR	6501216	Argument	heaps		6501040	0					
ANR	6501217	Identifier	heaps		6501040	0					
ANR	6501218	Argument	heapAddress		6501040	1					
ANR	6501219	Identifier	heapAddress		6501040	0					
ANR	6501220	ExpressionStatement	processHeaps += 1	404:2:12073:12090	6501040	2	True				
ANR	6501221	AssignmentExpression	processHeaps += 1		6501040	0		+=			
ANR	6501222	Identifier	processHeaps		6501040	0					
ANR	6501223	PrimaryExpression	1		6501040	1					
ANR	6501224	Condition	-- numberOfHeaps	405:10:12102:12116	6501040	1	True				
ANR	6501225	UnaryExpression	-- numberOfHeaps		6501040	0					
ANR	6501226	IncDec	--		6501040	0					
ANR	6501227	Identifier	numberOfHeaps		6501040	1					
ANR	6501228	ReturnStatement	return heaps ;	406:1:12121:12133	6501040	10	True				
ANR	6501229	Identifier	heaps		6501040	0					
ANR	6501230	ReturnType	static RList *		6501040	1					
ANR	6501231	Identifier	GetListOfHeaps		6501040	2					
ANR	6501232	ParameterList	"RDebug * dbg , HANDLE ph"		6501040	3					
ANR	6501233	Parameter	RDebug * dbg	382:29:11299:11309	6501040	0	True				
ANR	6501234	ParameterType	RDebug *		6501040	0					
ANR	6501235	Identifier	dbg		6501040	1					
ANR	6501236	Parameter	HANDLE ph	382:42:11312:11320	6501040	1	True				
ANR	6501237	ParameterType	HANDLE		6501040	0					
ANR	6501238	Identifier	ph		6501040	1					
ANR	6501239	CFGEntryNode	ENTRY		6501040		True				
ANR	6501240	CFGExitNode	EXIT		6501040		True				
ANR	6501241	Symbol	NULL		6501040						
ANR	6501242	Symbol	& heapAddress		6501040						
ANR	6501243	Symbol	w32_NtQueryInformationProcess		6501040						
ANR	6501244	Symbol	numberOfHeaps		6501040						
ANR	6501245	Symbol	dbg		6501040						
ANR	6501246	Symbol	pib		6501040						
ANR	6501247	Symbol	& pib		6501040						
ANR	6501248	Symbol	pib . PebBaseAddress		6501040						
ANR	6501249	Symbol	dbg -> bits		6501040						
ANR	6501250	Symbol	* ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0xE8 ) )		6501040						
ANR	6501251	Symbol	peb		6501040						
ANR	6501252	Symbol	heapAddress		6501040						
ANR	6501253	Symbol	* dbg		6501040						
ANR	6501254	Symbol	heaps		6501040						
ANR	6501255	Symbol	* ( ( ULONG * ) ( ( ( ut8 * ) & peb ) + 0x88 ) )		6501040						
ANR	6501256	Symbol	& peb		6501040						
ANR	6501257	Symbol	ph		6501040						
ANR	6501258	Symbol	ProcessBasicInformation		6501040						
ANR	6501259	Symbol	* ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0xF0 ) )		6501040						
ANR	6501260	Symbol	* ( ( ut64 * ) ( ( ( ut8 * ) & peb ) + 0x90 ) )		6501040						
ANR	6501261	Symbol	processHeaps		6501040						
ANR	6501262	Symbol	R_SYS_BITS_64		6501040						
ANR	6501263	Symbol	r_list_new		6501040						
ANR	6501264	Function	InitHeapInfo	416:0:12340:14572							
ANR	6501265	FunctionDef	"InitHeapInfo (RDebug * dbg , DWORD mask)"		6501264	0					
ANR	6501266	CompoundStatement		416:59:12399:14572	6501264	0					
ANR	6501267	IdentifierDeclStatement	"PDEBUG_BUFFER db = RtlCreateQueryDebugBuffer ( 0 , FALSE ) ;"	420:1:12502:12557	6501264	0	True				
ANR	6501268	IdentifierDecl	"db = RtlCreateQueryDebugBuffer ( 0 , FALSE )"		6501264	0					
ANR	6501269	IdentifierDeclType	PDEBUG_BUFFER		6501264	0					
ANR	6501270	Identifier	db		6501264	1					
ANR	6501271	AssignmentExpression	"db = RtlCreateQueryDebugBuffer ( 0 , FALSE )"		6501264	2		=			
ANR	6501272	Identifier	db		6501264	0					
ANR	6501273	CallExpression	"RtlCreateQueryDebugBuffer ( 0 , FALSE )"		6501264	1					
ANR	6501274	Callee	RtlCreateQueryDebugBuffer		6501264	0					
ANR	6501275	Identifier	RtlCreateQueryDebugBuffer		6501264	0					
ANR	6501276	ArgumentList	0		6501264	1					
ANR	6501277	Argument	0		6501264	0					
ANR	6501278	PrimaryExpression	0		6501264	0					
ANR	6501279	Argument	FALSE		6501264	1					
ANR	6501280	Identifier	FALSE		6501264	0					
ANR	6501281	IfStatement	if ( ! db )		6501264	1					
ANR	6501282	Condition	! db	421:5:12564:12566	6501264	0	True				
ANR	6501283	UnaryOperationExpression	! db		6501264	0					
ANR	6501284	UnaryOperator	!		6501264	0					
ANR	6501285	Identifier	db		6501264	1					
ANR	6501286	CompoundStatement		6:10:169:169	6501264	1					
ANR	6501287	ReturnStatement	return NULL ;	422:2:12573:12584	6501264	0	True				
ANR	6501288	Identifier	NULL		6501264	0					
ANR	6501289	IdentifierDeclStatement	"th_query_params params = { dbg , mask , db , 0 , false , false } ;"	424:1:12590:12649	6501264	2	True				
ANR	6501290	IdentifierDecl	"params = { dbg , mask , db , 0 , false , false }"		6501264	0					
ANR	6501291	IdentifierDeclType	th_query_params		6501264	0					
ANR	6501292	Identifier	params		6501264	1					
ANR	6501293	AssignmentExpression	"params = { dbg , mask , db , 0 , false , false }"		6501264	2		=			
ANR	6501294	Identifier	params		6501264	0					
ANR	6501295	InitializerList	dbg		6501264	1					
ANR	6501296	Identifier	dbg		6501264	0					
ANR	6501297	Identifier	mask		6501264	1					
ANR	6501298	Identifier	db		6501264	2					
ANR	6501299	PrimaryExpression	0		6501264	3					
ANR	6501300	Identifier	false		6501264	4					
ANR	6501301	Identifier	false		6501264	5					
ANR	6501302	IdentifierDeclStatement	"HANDLE th = CreateThread ( NULL , 0 , __th_QueryDebugBuffer , & params , 0 , NULL ) ;"	425:1:12652:12727	6501264	3	True				
ANR	6501303	IdentifierDecl	"th = CreateThread ( NULL , 0 , __th_QueryDebugBuffer , & params , 0 , NULL )"		6501264	0					
ANR	6501304	IdentifierDeclType	HANDLE		6501264	0					
ANR	6501305	Identifier	th		6501264	1					
ANR	6501306	AssignmentExpression	"th = CreateThread ( NULL , 0 , __th_QueryDebugBuffer , & params , 0 , NULL )"		6501264	2		=			
ANR	6501307	Identifier	th		6501264	0					
ANR	6501308	CallExpression	"CreateThread ( NULL , 0 , __th_QueryDebugBuffer , & params , 0 , NULL )"		6501264	1					
ANR	6501309	Callee	CreateThread		6501264	0					
ANR	6501310	Identifier	CreateThread		6501264	0					
ANR	6501311	ArgumentList	NULL		6501264	1					
ANR	6501312	Argument	NULL		6501264	0					
ANR	6501313	Identifier	NULL		6501264	0					
ANR	6501314	Argument	0		6501264	1					
ANR	6501315	PrimaryExpression	0		6501264	0					
ANR	6501316	Argument	__th_QueryDebugBuffer		6501264	2					
ANR	6501317	Identifier	__th_QueryDebugBuffer		6501264	0					
ANR	6501318	Argument	& params		6501264	3					
ANR	6501319	UnaryOperationExpression	& params		6501264	0					
ANR	6501320	UnaryOperator	&		6501264	0					
ANR	6501321	Identifier	params		6501264	1					
ANR	6501322	Argument	0		6501264	4					
ANR	6501323	PrimaryExpression	0		6501264	0					
ANR	6501324	Argument	NULL		6501264	5					
ANR	6501325	Identifier	NULL		6501264	0					
ANR	6501326	IfStatement	if ( th )		6501264	4					
ANR	6501327	Condition	th	426:5:12734:12735	6501264	0	True				
ANR	6501328	Identifier	th		6501264	0					
ANR	6501329	CompoundStatement		11:9:338:338	6501264	1					
ANR	6501330	ExpressionStatement	"WaitForSingleObject ( th , 10000 )"	427:2:12742:12773	6501264	0	True				
ANR	6501331	CallExpression	"WaitForSingleObject ( th , 10000 )"		6501264	0					
ANR	6501332	Callee	WaitForSingleObject		6501264	0					
ANR	6501333	Identifier	WaitForSingleObject		6501264	0					
ANR	6501334	ArgumentList	th		6501264	1					
ANR	6501335	Argument	th		6501264	0					
ANR	6501336	Identifier	th		6501264	0					
ANR	6501337	Argument	10000		6501264	1					
ANR	6501338	PrimaryExpression	10000		6501264	0					
ANR	6501339	ElseStatement	else		6501264	0					
ANR	6501340	CompoundStatement		13:8:383:383	6501264	0					
ANR	6501341	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	429:2:12787:12818	6501264	0	True				
ANR	6501342	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6501264	0					
ANR	6501343	Callee	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501344	Identifier	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501345	ArgumentList	db		6501264	1					
ANR	6501346	Argument	db		6501264	0					
ANR	6501347	Identifier	db		6501264	0					
ANR	6501348	ReturnStatement	return NULL ;	430:2:12822:12833	6501264	1	True				
ANR	6501349	Identifier	NULL		6501264	0					
ANR	6501350	IfStatement	if ( ! params . fin )		6501264	5					
ANR	6501351	Condition	! params . fin	432:5:12843:12853	6501264	0	True				
ANR	6501352	UnaryOperationExpression	! params . fin		6501264	0					
ANR	6501353	UnaryOperator	!		6501264	0					
ANR	6501354	MemberAccess	params . fin		6501264	1					
ANR	6501355	Identifier	params		6501264	0					
ANR	6501356	Identifier	fin		6501264	1					
ANR	6501357	CompoundStatement		17:18:456:456	6501264	1					
ANR	6501358	ExpressionStatement	params . hanged = true	436:2:13098:13118	6501264	0	True				
ANR	6501359	AssignmentExpression	params . hanged = true		6501264	0		=			
ANR	6501360	MemberAccess	params . hanged		6501264	0					
ANR	6501361	Identifier	params		6501264	0					
ANR	6501362	Identifier	hanged		6501264	1					
ANR	6501363	Identifier	true		6501264	1					
ANR	6501364	ExpressionStatement	"eprintf ( ""RtlQueryProcessDebugInformation hanged\\n"" )"	437:2:13122:13174	6501264	1	True				
ANR	6501365	CallExpression	"eprintf ( ""RtlQueryProcessDebugInformation hanged\\n"" )"		6501264	0					
ANR	6501366	Callee	eprintf		6501264	0					
ANR	6501367	Identifier	eprintf		6501264	0					
ANR	6501368	ArgumentList	"""RtlQueryProcessDebugInformation hanged\\n"""		6501264	1					
ANR	6501369	Argument	"""RtlQueryProcessDebugInformation hanged\\n"""		6501264	0					
ANR	6501370	PrimaryExpression	"""RtlQueryProcessDebugInformation hanged\\n"""		6501264	0					
ANR	6501371	ExpressionStatement	db = NULL	438:2:13178:13187	6501264	2	True				
ANR	6501372	AssignmentExpression	db = NULL		6501264	0		=			
ANR	6501373	Identifier	db		6501264	0					
ANR	6501374	Identifier	NULL		6501264	1					
ANR	6501375	ElseStatement	else		6501264	0					
ANR	6501376	IfStatement	if ( params . ret )		6501264	0					
ANR	6501377	Condition	params . ret	439:12:13201:13210	6501264	0	True				
ANR	6501378	MemberAccess	params . ret		6501264	0					
ANR	6501379	Identifier	params		6501264	0					
ANR	6501380	Identifier	ret		6501264	1					
ANR	6501381	CompoundStatement		24:23:812:812	6501264	1					
ANR	6501382	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	440:2:13216:13247	6501264	0	True				
ANR	6501383	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6501264	0					
ANR	6501384	Callee	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501385	Identifier	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501386	ArgumentList	db		6501264	1					
ANR	6501387	Argument	db		6501264	0					
ANR	6501388	Identifier	db		6501264	0					
ANR	6501389	ExpressionStatement	db = NULL	441:2:13251:13260	6501264	1	True				
ANR	6501390	AssignmentExpression	db = NULL		6501264	0		=			
ANR	6501391	Identifier	db		6501264	0					
ANR	6501392	Identifier	NULL		6501264	1					
ANR	6501393	ExpressionStatement	"r_sys_perror ( ""InitHeapInfo"" )"	442:2:13264:13293	6501264	2	True				
ANR	6501394	CallExpression	"r_sys_perror ( ""InitHeapInfo"" )"		6501264	0					
ANR	6501395	Callee	r_sys_perror		6501264	0					
ANR	6501396	Identifier	r_sys_perror		6501264	0					
ANR	6501397	ArgumentList	"""InitHeapInfo"""		6501264	1					
ANR	6501398	Argument	"""InitHeapInfo"""		6501264	0					
ANR	6501399	PrimaryExpression	"""InitHeapInfo"""		6501264	0					
ANR	6501400	ExpressionStatement	CloseHandle ( th )	444:1:13299:13315	6501264	6	True				
ANR	6501401	CallExpression	CloseHandle ( th )		6501264	0					
ANR	6501402	Callee	CloseHandle		6501264	0					
ANR	6501403	Identifier	CloseHandle		6501264	0					
ANR	6501404	ArgumentList	th		6501264	1					
ANR	6501405	Argument	th		6501264	0					
ANR	6501406	Identifier	th		6501264	0					
ANR	6501407	IfStatement	if ( db )		6501264	7					
ANR	6501408	Condition	db	445:5:13322:13323	6501264	0	True				
ANR	6501409	Identifier	db		6501264	0					
ANR	6501410	CompoundStatement		30:9:926:926	6501264	1					
ANR	6501411	ReturnStatement	return db ;	446:2:13330:13339	6501264	0	True				
ANR	6501412	Identifier	db		6501264	0					
ANR	6501413	IdentifierDeclStatement	os_info * osi = r_sys_get_osinfo ( ) ;	450:1:13369:13403	6501264	8	True				
ANR	6501414	IdentifierDecl	* osi = r_sys_get_osinfo ( )		6501264	0					
ANR	6501415	IdentifierDeclType	os_info *		6501264	0					
ANR	6501416	Identifier	osi		6501264	1					
ANR	6501417	AssignmentExpression	* osi = r_sys_get_osinfo ( )		6501264	2		=			
ANR	6501418	Identifier	osi		6501264	0					
ANR	6501419	CallExpression	r_sys_get_osinfo ( )		6501264	1					
ANR	6501420	Callee	r_sys_get_osinfo		6501264	0					
ANR	6501421	Identifier	r_sys_get_osinfo		6501264	0					
ANR	6501422	ArgumentList			6501264	1					
ANR	6501423	IfStatement	if ( mask == PDI_HEAPS && osi -> major >= 10 )		6501264	9					
ANR	6501424	Condition	mask == PDI_HEAPS && osi -> major >= 10	451:5:13410:13446	6501264	0	True				
ANR	6501425	AndExpression	mask == PDI_HEAPS && osi -> major >= 10		6501264	0		&&			
ANR	6501426	EqualityExpression	mask == PDI_HEAPS		6501264	0		==			
ANR	6501427	Identifier	mask		6501264	0					
ANR	6501428	Identifier	PDI_HEAPS		6501264	1					
ANR	6501429	RelationalExpression	osi -> major >= 10		6501264	1		>=			
ANR	6501430	PtrMemberAccess	osi -> major		6501264	0					
ANR	6501431	Identifier	osi		6501264	0					
ANR	6501432	Identifier	major		6501264	1					
ANR	6501433	PrimaryExpression	10		6501264	1					
ANR	6501434	CompoundStatement		65:2:1833:1847	6501264	1					
ANR	6501435	ExpressionStatement	"db = RtlCreateQueryDebugBuffer ( 0 , FALSE )"	452:2:13453:13494	6501264	0	True				
ANR	6501436	AssignmentExpression	"db = RtlCreateQueryDebugBuffer ( 0 , FALSE )"		6501264	0		=			
ANR	6501437	Identifier	db		6501264	0					
ANR	6501438	CallExpression	"RtlCreateQueryDebugBuffer ( 0 , FALSE )"		6501264	1					
ANR	6501439	Callee	RtlCreateQueryDebugBuffer		6501264	0					
ANR	6501440	Identifier	RtlCreateQueryDebugBuffer		6501264	0					
ANR	6501441	ArgumentList	0		6501264	1					
ANR	6501442	Argument	0		6501264	0					
ANR	6501443	PrimaryExpression	0		6501264	0					
ANR	6501444	Argument	FALSE		6501264	1					
ANR	6501445	Identifier	FALSE		6501264	0					
ANR	6501446	IfStatement	if ( ! db )		6501264	1					
ANR	6501447	Condition	! db	453:6:13502:13504	6501264	0	True				
ANR	6501448	UnaryOperationExpression	! db		6501264	0					
ANR	6501449	UnaryOperator	!		6501264	0					
ANR	6501450	Identifier	db		6501264	1					
ANR	6501451	CompoundStatement		38:11:1107:1107	6501264	1					
ANR	6501452	ReturnStatement	return NULL ;	454:3:13512:13523	6501264	0	True				
ANR	6501453	Identifier	NULL		6501264	0					
ANR	6501454	ExpressionStatement	free ( osi )	456:2:13531:13541	6501264	2	True				
ANR	6501455	CallExpression	free ( osi )		6501264	0					
ANR	6501456	Callee	free		6501264	0					
ANR	6501457	Identifier	free		6501264	0					
ANR	6501458	ArgumentList	osi		6501264	1					
ANR	6501459	Argument	osi		6501264	0					
ANR	6501460	Identifier	osi		6501264	0					
ANR	6501461	IdentifierDeclStatement	PHeapInformation heapInfo = R_NEW0 ( HeapInformation ) ;	457:2:13545:13597	6501264	3	True				
ANR	6501462	IdentifierDecl	heapInfo = R_NEW0 ( HeapInformation )		6501264	0					
ANR	6501463	IdentifierDeclType	PHeapInformation		6501264	0					
ANR	6501464	Identifier	heapInfo		6501264	1					
ANR	6501465	AssignmentExpression	heapInfo = R_NEW0 ( HeapInformation )		6501264	2		=			
ANR	6501466	Identifier	heapInfo		6501264	0					
ANR	6501467	CallExpression	R_NEW0 ( HeapInformation )		6501264	1					
ANR	6501468	Callee	R_NEW0		6501264	0					
ANR	6501469	Identifier	R_NEW0		6501264	0					
ANR	6501470	ArgumentList	HeapInformation		6501264	1					
ANR	6501471	Argument	HeapInformation		6501264	0					
ANR	6501472	Identifier	HeapInformation		6501264	0					
ANR	6501473	IfStatement	if ( ! heapInfo )		6501264	4					
ANR	6501474	Condition	! heapInfo	458:6:13605:13613	6501264	0	True				
ANR	6501475	UnaryOperationExpression	! heapInfo		6501264	0					
ANR	6501476	UnaryOperator	!		6501264	0					
ANR	6501477	Identifier	heapInfo		6501264	1					
ANR	6501478	CompoundStatement		43:17:1216:1216	6501264	1					
ANR	6501479	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	459:3:13621:13652	6501264	0	True				
ANR	6501480	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6501264	0					
ANR	6501481	Callee	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501482	Identifier	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501483	ArgumentList	db		6501264	1					
ANR	6501484	Argument	db		6501264	0					
ANR	6501485	Identifier	db		6501264	0					
ANR	6501486	ReturnStatement	return NULL ;	460:3:13657:13668	6501264	1	True				
ANR	6501487	Identifier	NULL		6501264	0					
ANR	6501488	IdentifierDeclStatement	"HANDLE h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid ) ;"	462:2:13676:13766	6501264	5	True				
ANR	6501489	IdentifierDecl	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid )"		6501264	0					
ANR	6501490	IdentifierDeclType	HANDLE		6501264	0					
ANR	6501491	Identifier	h_proc		6501264	1					
ANR	6501492	AssignmentExpression	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid )"		6501264	2		=			
ANR	6501493	Identifier	h_proc		6501264	0					
ANR	6501494	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid )"		6501264	1					
ANR	6501495	Callee	OpenProcess		6501264	0					
ANR	6501496	Identifier	OpenProcess		6501264	0					
ANR	6501497	ArgumentList	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6501264	1					
ANR	6501498	Argument	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6501264	0					
ANR	6501499	InclusiveOrExpression	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6501264	0		|			
ANR	6501500	Identifier	PROCESS_QUERY_INFORMATION		6501264	0					
ANR	6501501	Identifier	PROCESS_VM_READ		6501264	1					
ANR	6501502	Argument	FALSE		6501264	1					
ANR	6501503	Identifier	FALSE		6501264	0					
ANR	6501504	Argument	dbg -> pid		6501264	2					
ANR	6501505	PtrMemberAccess	dbg -> pid		6501264	0					
ANR	6501506	Identifier	dbg		6501264	0					
ANR	6501507	Identifier	pid		6501264	1					
ANR	6501508	IfStatement	if ( ! h_proc )		6501264	6					
ANR	6501509	Condition	! h_proc	463:6:13774:13780	6501264	0	True				
ANR	6501510	UnaryOperationExpression	! h_proc		6501264	0					
ANR	6501511	UnaryOperator	!		6501264	0					
ANR	6501512	Identifier	h_proc		6501264	1					
ANR	6501513	CompoundStatement		48:15:1383:1383	6501264	1					
ANR	6501514	ExpressionStatement	"R_LOG_ERROR ( ""OpenProcess failed\\n"" )"	464:3:13788:13824	6501264	0	True				
ANR	6501515	CallExpression	"R_LOG_ERROR ( ""OpenProcess failed\\n"" )"		6501264	0					
ANR	6501516	Callee	R_LOG_ERROR		6501264	0					
ANR	6501517	Identifier	R_LOG_ERROR		6501264	0					
ANR	6501518	ArgumentList	"""OpenProcess failed\\n"""		6501264	1					
ANR	6501519	Argument	"""OpenProcess failed\\n"""		6501264	0					
ANR	6501520	PrimaryExpression	"""OpenProcess failed\\n"""		6501264	0					
ANR	6501521	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	465:3:13829:13860	6501264	1	True				
ANR	6501522	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6501264	0					
ANR	6501523	Callee	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501524	Identifier	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501525	ArgumentList	db		6501264	1					
ANR	6501526	Argument	db		6501264	0					
ANR	6501527	Identifier	db		6501264	0					
ANR	6501528	ReturnStatement	return NULL ;	466:3:13865:13876	6501264	2	True				
ANR	6501529	Identifier	NULL		6501264	0					
ANR	6501530	IdentifierDeclStatement	"RList * heaps = GetListOfHeaps ( dbg , h_proc ) ;"	468:2:13884:13927	6501264	7	True				
ANR	6501531	IdentifierDecl	"* heaps = GetListOfHeaps ( dbg , h_proc )"		6501264	0					
ANR	6501532	IdentifierDeclType	RList *		6501264	0					
ANR	6501533	Identifier	heaps		6501264	1					
ANR	6501534	AssignmentExpression	"* heaps = GetListOfHeaps ( dbg , h_proc )"		6501264	2		=			
ANR	6501535	Identifier	heaps		6501264	0					
ANR	6501536	CallExpression	"GetListOfHeaps ( dbg , h_proc )"		6501264	1					
ANR	6501537	Callee	GetListOfHeaps		6501264	0					
ANR	6501538	Identifier	GetListOfHeaps		6501264	0					
ANR	6501539	ArgumentList	dbg		6501264	1					
ANR	6501540	Argument	dbg		6501264	0					
ANR	6501541	Identifier	dbg		6501264	0					
ANR	6501542	Argument	h_proc		6501264	1					
ANR	6501543	Identifier	h_proc		6501264	0					
ANR	6501544	ExpressionStatement	CloseHandle ( h_proc )	469:2:13931:13951	6501264	8	True				
ANR	6501545	CallExpression	CloseHandle ( h_proc )		6501264	0					
ANR	6501546	Callee	CloseHandle		6501264	0					
ANR	6501547	Identifier	CloseHandle		6501264	0					
ANR	6501548	ArgumentList	h_proc		6501264	1					
ANR	6501549	Argument	h_proc		6501264	0					
ANR	6501550	Identifier	h_proc		6501264	0					
ANR	6501551	ExpressionStatement	heapInfo -> count = heaps -> length	470:2:13955:13986	6501264	9	True				
ANR	6501552	AssignmentExpression	heapInfo -> count = heaps -> length		6501264	0		=			
ANR	6501553	PtrMemberAccess	heapInfo -> count		6501264	0					
ANR	6501554	Identifier	heapInfo		6501264	0					
ANR	6501555	Identifier	count		6501264	1					
ANR	6501556	PtrMemberAccess	heaps -> length		6501264	1					
ANR	6501557	Identifier	heaps		6501264	0					
ANR	6501558	Identifier	length		6501264	1					
ANR	6501559	IdentifierDeclStatement	"void * tmp = realloc ( heapInfo , sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count + sizeof ( heapInfo ) ) ;"	471:2:13990:14091	6501264	10	True				
ANR	6501560	IdentifierDecl	"* tmp = realloc ( heapInfo , sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count + sizeof ( heapInfo ) )"		6501264	0					
ANR	6501561	IdentifierDeclType	void *		6501264	0					
ANR	6501562	Identifier	tmp		6501264	1					
ANR	6501563	AssignmentExpression	"* tmp = realloc ( heapInfo , sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count + sizeof ( heapInfo ) )"		6501264	2		=			
ANR	6501564	Identifier	tmp		6501264	0					
ANR	6501565	CallExpression	"realloc ( heapInfo , sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count + sizeof ( heapInfo ) )"		6501264	1					
ANR	6501566	Callee	realloc		6501264	0					
ANR	6501567	Identifier	realloc		6501264	0					
ANR	6501568	ArgumentList	heapInfo		6501264	1					
ANR	6501569	Argument	heapInfo		6501264	0					
ANR	6501570	Identifier	heapInfo		6501264	0					
ANR	6501571	Argument	sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count + sizeof ( heapInfo )		6501264	1					
ANR	6501572	AdditiveExpression	sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count + sizeof ( heapInfo )		6501264	0		+			
ANR	6501573	MultiplicativeExpression	sizeof ( DEBUG_HEAP_INFORMATION ) * heapInfo -> count		6501264	0		*			
ANR	6501574	SizeofExpression	sizeof ( DEBUG_HEAP_INFORMATION )		6501264	0					
ANR	6501575	Sizeof	sizeof		6501264	0					
ANR	6501576	SizeofOperand	DEBUG_HEAP_INFORMATION		6501264	1					
ANR	6501577	PtrMemberAccess	heapInfo -> count		6501264	1					
ANR	6501578	Identifier	heapInfo		6501264	0					
ANR	6501579	Identifier	count		6501264	1					
ANR	6501580	SizeofExpression	sizeof ( heapInfo )		6501264	1					
ANR	6501581	Sizeof	sizeof		6501264	0					
ANR	6501582	SizeofOperand	heapInfo		6501264	1					
ANR	6501583	IfStatement	if ( ! tmp )		6501264	11					
ANR	6501584	Condition	! tmp	472:6:14099:14102	6501264	0	True				
ANR	6501585	UnaryOperationExpression	! tmp		6501264	0					
ANR	6501586	UnaryOperator	!		6501264	0					
ANR	6501587	Identifier	tmp		6501264	1					
ANR	6501588	CompoundStatement		57:12:1705:1705	6501264	1					
ANR	6501589	ExpressionStatement	free ( heapInfo )	473:3:14110:14125	6501264	0	True				
ANR	6501590	CallExpression	free ( heapInfo )		6501264	0					
ANR	6501591	Callee	free		6501264	0					
ANR	6501592	Identifier	free		6501264	0					
ANR	6501593	ArgumentList	heapInfo		6501264	1					
ANR	6501594	Argument	heapInfo		6501264	0					
ANR	6501595	Identifier	heapInfo		6501264	0					
ANR	6501596	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	474:3:14130:14161	6501264	1	True				
ANR	6501597	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6501264	0					
ANR	6501598	Callee	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501599	Identifier	RtlDestroyQueryDebugBuffer		6501264	0					
ANR	6501600	ArgumentList	db		6501264	1					
ANR	6501601	Argument	db		6501264	0					
ANR	6501602	Identifier	db		6501264	0					
ANR	6501603	ReturnStatement	return NULL ;	475:3:14166:14177	6501264	2	True				
ANR	6501604	Identifier	NULL		6501264	0					
ANR	6501605	ExpressionStatement	heapInfo = tmp	477:2:14185:14199	6501264	12	True				
ANR	6501606	AssignmentExpression	heapInfo = tmp		6501264	0		=			
ANR	6501607	Identifier	heapInfo		6501264	0					
ANR	6501608	Identifier	tmp		6501264	1					
ANR	6501609	IdentifierDeclStatement	int i = 0 ;	478:2:14203:14212	6501264	13	True				
ANR	6501610	IdentifierDecl	i = 0		6501264	0					
ANR	6501611	IdentifierDeclType	int		6501264	0					
ANR	6501612	Identifier	i		6501264	1					
ANR	6501613	AssignmentExpression	i = 0		6501264	2		=			
ANR	6501614	Identifier	i		6501264	0					
ANR	6501615	PrimaryExpression	0		6501264	1					
ANR	6501616	IdentifierDeclStatement	RListIter * it ;	479:2:14216:14229	6501264	14	True				
ANR	6501617	IdentifierDecl	* it		6501264	0					
ANR	6501618	IdentifierDeclType	RListIter *		6501264	0					
ANR	6501619	Identifier	it		6501264	1					
ANR	6501620	IdentifierDeclStatement	void * heapBase ;	480:2:14233:14247	6501264	15	True				
ANR	6501621	IdentifierDecl	* heapBase		6501264	0					
ANR	6501622	IdentifierDeclType	void *		6501264	0					
ANR	6501623	Identifier	heapBase		6501264	1					
ANR	6501624	Statement	r_list_foreach	481:2:14251:14264	6501264	16	True				
ANR	6501625	Statement	(	481:17:14266:14266	6501264	17	True				
ANR	6501626	Statement	heaps	481:18:14267:14271	6501264	18	True				
ANR	6501627	Statement	","	481:23:14272:14272	6501264	19	True				
ANR	6501628	Statement	it	481:25:14274:14275	6501264	20	True				
ANR	6501629	Statement	","	481:27:14276:14276	6501264	21	True				
ANR	6501630	Statement	heapBase	481:29:14278:14285	6501264	22	True				
ANR	6501631	Statement	)	481:37:14286:14286	6501264	23	True				
ANR	6501632	CompoundStatement		66:39:1888:1888	6501264	24					
ANR	6501633	ExpressionStatement	heapInfo -> heaps [ i ] . Base = heapBase	482:3:14293:14327	6501264	0	True				
ANR	6501634	AssignmentExpression	heapInfo -> heaps [ i ] . Base = heapBase		6501264	0		=			
ANR	6501635	MemberAccess	heapInfo -> heaps [ i ] . Base		6501264	0					
ANR	6501636	ArrayIndexing	heapInfo -> heaps [ i ]		6501264	0					
ANR	6501637	PtrMemberAccess	heapInfo -> heaps		6501264	0					
ANR	6501638	Identifier	heapInfo		6501264	0					
ANR	6501639	Identifier	heaps		6501264	1					
ANR	6501640	Identifier	i		6501264	1					
ANR	6501641	Identifier	Base		6501264	1					
ANR	6501642	Identifier	heapBase		6501264	1					
ANR	6501643	ExpressionStatement	heapInfo -> heaps [ i ] . Granularity = sizeof ( HEAP_ENTRY )	483:3:14332:14384	6501264	1	True				
ANR	6501644	AssignmentExpression	heapInfo -> heaps [ i ] . Granularity = sizeof ( HEAP_ENTRY )		6501264	0		=			
ANR	6501645	MemberAccess	heapInfo -> heaps [ i ] . Granularity		6501264	0					
ANR	6501646	ArrayIndexing	heapInfo -> heaps [ i ]		6501264	0					
ANR	6501647	PtrMemberAccess	heapInfo -> heaps		6501264	0					
ANR	6501648	Identifier	heapInfo		6501264	0					
ANR	6501649	Identifier	heaps		6501264	1					
ANR	6501650	Identifier	i		6501264	1					
ANR	6501651	Identifier	Granularity		6501264	1					
ANR	6501652	SizeofExpression	sizeof ( HEAP_ENTRY )		6501264	1					
ANR	6501653	Sizeof	sizeof		6501264	0					
ANR	6501654	SizeofOperand	HEAP_ENTRY		6501264	1					
ANR	6501655	ExpressionStatement	heapInfo -> heaps [ i ] . Allocated = 0	484:3:14389:14421	6501264	2	True				
ANR	6501656	AssignmentExpression	heapInfo -> heaps [ i ] . Allocated = 0		6501264	0		=			
ANR	6501657	MemberAccess	heapInfo -> heaps [ i ] . Allocated		6501264	0					
ANR	6501658	ArrayIndexing	heapInfo -> heaps [ i ]		6501264	0					
ANR	6501659	PtrMemberAccess	heapInfo -> heaps		6501264	0					
ANR	6501660	Identifier	heapInfo		6501264	0					
ANR	6501661	Identifier	heaps		6501264	1					
ANR	6501662	Identifier	i		6501264	1					
ANR	6501663	Identifier	Allocated		6501264	1					
ANR	6501664	PrimaryExpression	0		6501264	1					
ANR	6501665	ExpressionStatement	heapInfo -> heaps [ i ] . Committed = 0	485:3:14426:14458	6501264	3	True				
ANR	6501666	AssignmentExpression	heapInfo -> heaps [ i ] . Committed = 0		6501264	0		=			
ANR	6501667	MemberAccess	heapInfo -> heaps [ i ] . Committed		6501264	0					
ANR	6501668	ArrayIndexing	heapInfo -> heaps [ i ]		6501264	0					
ANR	6501669	PtrMemberAccess	heapInfo -> heaps		6501264	0					
ANR	6501670	Identifier	heapInfo		6501264	0					
ANR	6501671	Identifier	heaps		6501264	1					
ANR	6501672	Identifier	i		6501264	1					
ANR	6501673	Identifier	Committed		6501264	1					
ANR	6501674	PrimaryExpression	0		6501264	1					
ANR	6501675	ExpressionStatement	i ++	486:3:14463:14466	6501264	4	True				
ANR	6501676	PostIncDecOperationExpression	i ++		6501264	0					
ANR	6501677	Identifier	i		6501264	0					
ANR	6501678	IncDec	++		6501264	1					
ANR	6501679	ExpressionStatement	db -> HeapInformation = heapInfo	488:2:14474:14504	6501264	25	True				
ANR	6501680	AssignmentExpression	db -> HeapInformation = heapInfo		6501264	0		=			
ANR	6501681	PtrMemberAccess	db -> HeapInformation		6501264	0					
ANR	6501682	Identifier	db		6501264	0					
ANR	6501683	Identifier	HeapInformation		6501264	1					
ANR	6501684	Identifier	heapInfo		6501264	1					
ANR	6501685	ExpressionStatement	r_list_free ( heaps )	489:2:14508:14527	6501264	26	True				
ANR	6501686	CallExpression	r_list_free ( heaps )		6501264	0					
ANR	6501687	Callee	r_list_free		6501264	0					
ANR	6501688	Identifier	r_list_free		6501264	0					
ANR	6501689	ArgumentList	heaps		6501264	1					
ANR	6501690	Argument	heaps		6501264	0					
ANR	6501691	Identifier	heaps		6501264	0					
ANR	6501692	ReturnStatement	return db ;	490:2:14531:14540	6501264	27	True				
ANR	6501693	Identifier	db		6501264	0					
ANR	6501694	ExpressionStatement	free ( osi )	492:1:14546:14556	6501264	10	True				
ANR	6501695	CallExpression	free ( osi )		6501264	0					
ANR	6501696	Callee	free		6501264	0					
ANR	6501697	Identifier	free		6501264	0					
ANR	6501698	ArgumentList	osi		6501264	1					
ANR	6501699	Argument	osi		6501264	0					
ANR	6501700	Identifier	osi		6501264	0					
ANR	6501701	ReturnStatement	return NULL ;	493:1:14559:14570	6501264	11	True				
ANR	6501702	Identifier	NULL		6501264	0					
ANR	6501703	ReturnType	static PDEBUG_BUFFER		6501264	1					
ANR	6501704	Identifier	InitHeapInfo		6501264	2					
ANR	6501705	ParameterList	"RDebug * dbg , DWORD mask"		6501264	3					
ANR	6501706	Parameter	RDebug * dbg	416:34:12374:12384	6501264	0	True				
ANR	6501707	ParameterType	RDebug *		6501264	0					
ANR	6501708	Identifier	dbg		6501264	1					
ANR	6501709	Parameter	DWORD mask	416:47:12387:12396	6501264	1	True				
ANR	6501710	ParameterType	DWORD		6501264	0					
ANR	6501711	Identifier	mask		6501264	1					
ANR	6501712	CFGEntryNode	ENTRY		6501264		True				
ANR	6501713	CFGExitNode	EXIT		6501264		True				
ANR	6501714	Symbol	osi		6501264						
ANR	6501715	Symbol	realloc		6501264						
ANR	6501716	Symbol	heapInfo -> count		6501264						
ANR	6501717	Symbol	heaps -> length		6501264						
ANR	6501718	Symbol	heapInfo -> heaps [ i ] . Allocated		6501264						
ANR	6501719	Symbol	heapInfo -> heaps [ i ] . Granularity		6501264						
ANR	6501720	Symbol	tmp		6501264						
ANR	6501721	Symbol	params . ret		6501264						
ANR	6501722	Symbol	heapInfo		6501264						
ANR	6501723	Symbol	OpenProcess		6501264						
ANR	6501724	Symbol	& params		6501264						
ANR	6501725	Symbol	NULL		6501264						
ANR	6501726	Symbol	RtlCreateQueryDebugBuffer		6501264						
ANR	6501727	Symbol	CreateThread		6501264						
ANR	6501728	Symbol	* db		6501264						
ANR	6501729	Symbol	dbg		6501264						
ANR	6501730	Symbol	h_proc		6501264						
ANR	6501731	Symbol	r_sys_get_osinfo		6501264						
ANR	6501732	Symbol	it		6501264						
ANR	6501733	Symbol	db -> HeapInformation		6501264						
ANR	6501734	Symbol	params		6501264						
ANR	6501735	Symbol	R_NEW0		6501264						
ANR	6501736	Symbol	heapInfo -> heaps		6501264						
ANR	6501737	Symbol	true		6501264						
ANR	6501738	Symbol	params . hanged		6501264						
ANR	6501739	Symbol	heapBase		6501264						
ANR	6501740	Symbol	* heapInfo		6501264						
ANR	6501741	Symbol	heapInfo -> heaps [ i ] . Base		6501264						
ANR	6501742	Symbol	HeapInformation		6501264						
ANR	6501743	Symbol	osi -> major		6501264						
ANR	6501744	Symbol	* heaps		6501264						
ANR	6501745	Symbol	* * heapInfo		6501264						
ANR	6501746	Symbol	mask		6501264						
ANR	6501747	Symbol	GetListOfHeaps		6501264						
ANR	6501748	Symbol	false		6501264						
ANR	6501749	Symbol	heapInfo -> heaps [ i ] . Committed		6501264						
ANR	6501750	Symbol	i		6501264						
ANR	6501751	Symbol	* dbg		6501264						
ANR	6501752	Symbol	* osi		6501264						
ANR	6501753	Symbol	heaps		6501264						
ANR	6501754	Symbol	PDI_HEAPS		6501264						
ANR	6501755	Symbol	* i		6501264						
ANR	6501756	Symbol	th		6501264						
ANR	6501757	Symbol	dbg -> pid		6501264						
ANR	6501758	Symbol	PROCESS_VM_READ		6501264						
ANR	6501759	Symbol	* heapInfo -> heaps		6501264						
ANR	6501760	Symbol	FALSE		6501264						
ANR	6501761	Symbol	__th_QueryDebugBuffer		6501264						
ANR	6501762	Symbol	PROCESS_QUERY_INFORMATION		6501264						
ANR	6501763	Symbol	params . fin		6501264						
ANR	6501764	Symbol	db		6501264						
ANR	6501765	DeclStmt									
ANR	6501766	Decl							SIZE_T	SIZE_T	old_alloc
ANR	6501767	DeclStmt									
ANR	6501768	Decl							PVOID	PVOID	tmp
ANR	6501769	DeclStmt									
ANR	6501770	Decl							SIZE_T	SIZE_T	old_alloc
ANR	6501771	DeclStmt									
ANR	6501772	Decl							PVOID	PVOID	tmp
ANR	6501773	Function	__lfh_segment_loop	522:0:15204:16579							
ANR	6501774	FunctionDef	"__lfh_segment_loop (HANDLE h_proc , PHeapBlockBasicInfo * blocks , SIZE_T * allocated , WPARAM lfhKey , WPARAM * count , WPARAM first , WPARAM next)"		6501773	0					
ANR	6501775	CompoundStatement		522:151:15355:16579	6501773	0					
ANR	6501776	WhileStatement	while ( ( first != next ) && next )		6501773	0					
ANR	6501777	Condition	( first != next ) && next	523:8:15365:15387	6501773	0	True				
ANR	6501778	AndExpression	( first != next ) && next		6501773	0		&&			
ANR	6501779	EqualityExpression	first != next		6501773	0		!=			
ANR	6501780	Identifier	first		6501773	0					
ANR	6501781	Identifier	next		6501773	1					
ANR	6501782	Identifier	next		6501773	1					
ANR	6501783	CompoundStatement		6:2:244:271	6501773	1					
ANR	6501784	IdentifierDeclStatement	HEAP_LFH_SUBSEGMENT subsegment ;	524:2:15394:15424	6501773	0	True				
ANR	6501785	IdentifierDecl	subsegment		6501773	0					
ANR	6501786	IdentifierDeclType	HEAP_LFH_SUBSEGMENT		6501773	0					
ANR	6501787	Identifier	subsegment		6501773	1					
ANR	6501788	ExpressionStatement	"ReadProcessMemory ( h_proc , ( void * ) next , & subsegment , sizeof ( HEAP_LFH_SUBSEGMENT ) , NULL )"	525:2:15428:15517	6501773	1	True				
ANR	6501789	CallExpression	"ReadProcessMemory ( h_proc , ( void * ) next , & subsegment , sizeof ( HEAP_LFH_SUBSEGMENT ) , NULL )"		6501773	0					
ANR	6501790	Callee	ReadProcessMemory		6501773	0					
ANR	6501791	Identifier	ReadProcessMemory		6501773	0					
ANR	6501792	ArgumentList	h_proc		6501773	1					
ANR	6501793	Argument	h_proc		6501773	0					
ANR	6501794	Identifier	h_proc		6501773	0					
ANR	6501795	Argument	( void * ) next		6501773	1					
ANR	6501796	CastExpression	( void * ) next		6501773	0					
ANR	6501797	CastTarget	void *		6501773	0					
ANR	6501798	Identifier	next		6501773	1					
ANR	6501799	Argument	& subsegment		6501773	2					
ANR	6501800	UnaryOperationExpression	& subsegment		6501773	0					
ANR	6501801	UnaryOperator	&		6501773	0					
ANR	6501802	Identifier	subsegment		6501773	1					
ANR	6501803	Argument	sizeof ( HEAP_LFH_SUBSEGMENT )		6501773	3					
ANR	6501804	SizeofExpression	sizeof ( HEAP_LFH_SUBSEGMENT )		6501773	0					
ANR	6501805	Sizeof	sizeof		6501773	0					
ANR	6501806	SizeofOperand	HEAP_LFH_SUBSEGMENT		6501773	1					
ANR	6501807	Argument	NULL		6501773	4					
ANR	6501808	Identifier	NULL		6501773	0					
ANR	6501809	ExpressionStatement	subsegment . BlockOffsets . EncodedData ^= ( DWORD ) lfhKey ^ ( ( DWORD ) next >> 0xC )	526:2:15521:15596	6501773	2	True				
ANR	6501810	AssignmentExpression	subsegment . BlockOffsets . EncodedData ^= ( DWORD ) lfhKey ^ ( ( DWORD ) next >> 0xC )		6501773	0		^=			
ANR	6501811	MemberAccess	subsegment . BlockOffsets . EncodedData		6501773	0					
ANR	6501812	MemberAccess	subsegment . BlockOffsets		6501773	0					
ANR	6501813	Identifier	subsegment		6501773	0					
ANR	6501814	Identifier	BlockOffsets		6501773	1					
ANR	6501815	Identifier	EncodedData		6501773	1					
ANR	6501816	ExclusiveOrExpression	( DWORD ) lfhKey ^ ( ( DWORD ) next >> 0xC )		6501773	1		^			
ANR	6501817	CastExpression	( DWORD ) lfhKey		6501773	0					
ANR	6501818	CastTarget	DWORD		6501773	0					
ANR	6501819	Identifier	lfhKey		6501773	1					
ANR	6501820	ShiftExpression	( DWORD ) next >> 0xC		6501773	1		>>			
ANR	6501821	CastExpression	( DWORD ) next		6501773	0					
ANR	6501822	CastTarget	DWORD		6501773	0					
ANR	6501823	Identifier	next		6501773	1					
ANR	6501824	PrimaryExpression	0xC		6501773	1					
ANR	6501825	IdentifierDeclStatement	"WPARAM mask = 1 , offset = 0 ;"	527:2:15600:15627	6501773	3	True				
ANR	6501826	IdentifierDecl	mask = 1		6501773	0					
ANR	6501827	IdentifierDeclType	WPARAM		6501773	0					
ANR	6501828	Identifier	mask		6501773	1					
ANR	6501829	AssignmentExpression	mask = 1		6501773	2		=			
ANR	6501830	Identifier	mask		6501773	0					
ANR	6501831	PrimaryExpression	1		6501773	1					
ANR	6501832	IdentifierDecl	offset = 0		6501773	1					
ANR	6501833	IdentifierDeclType	WPARAM		6501773	0					
ANR	6501834	Identifier	offset		6501773	1					
ANR	6501835	AssignmentExpression	offset = 0		6501773	2		=			
ANR	6501836	Identifier	offset		6501773	0					
ANR	6501837	PrimaryExpression	0		6501773	1					
ANR	6501838	ForStatement	for ( int l = 0 ; l < subsegment . BlockCount ; l ++ )		6501773	4					
ANR	6501839	ForInit	int l = 0 ;	528:7:15636:15645	6501773	0	True				
ANR	6501840	IdentifierDeclStatement	int l = 0 ;		6501773	0					
ANR	6501841	IdentifierDecl	l = 0		6501773	0					
ANR	6501842	IdentifierDeclType	int		6501773	0					
ANR	6501843	Identifier	l		6501773	1					
ANR	6501844	AssignmentExpression	l = 0		6501773	2		=			
ANR	6501845	Identifier	l		6501773	0					
ANR	6501846	PrimaryExpression	0		6501773	1					
ANR	6501847	Condition	l < subsegment . BlockCount	528:18:15647:15671	6501773	1	True				
ANR	6501848	RelationalExpression	l < subsegment . BlockCount		6501773	0		<			
ANR	6501849	Identifier	l		6501773	0					
ANR	6501850	MemberAccess	subsegment . BlockCount		6501773	1					
ANR	6501851	Identifier	subsegment		6501773	0					
ANR	6501852	Identifier	BlockCount		6501773	1					
ANR	6501853	PostIncDecOperationExpression	l ++	528:45:15674:15676	6501773	2	True				
ANR	6501854	Identifier	l		6501773	0					
ANR	6501855	IncDec	++		6501773	1					
ANR	6501856	CompoundStatement		7:50:323:323	6501773	3					
ANR	6501857	IfStatement	if ( ! mask )		6501773	0					
ANR	6501858	Condition	! mask	529:7:15688:15692	6501773	0	True				
ANR	6501859	UnaryOperationExpression	! mask		6501773	0					
ANR	6501860	UnaryOperator	!		6501773	0					
ANR	6501861	Identifier	mask		6501773	1					
ANR	6501862	CompoundStatement		8:14:339:339	6501773	1					
ANR	6501863	ExpressionStatement	mask = 1	530:4:15701:15709	6501773	0	True				
ANR	6501864	AssignmentExpression	mask = 1		6501773	0		=			
ANR	6501865	Identifier	mask		6501773	0					
ANR	6501866	PrimaryExpression	1		6501773	1					
ANR	6501867	ExpressionStatement	offset ++	531:4:15715:15723	6501773	1	True				
ANR	6501868	PostIncDecOperationExpression	offset ++		6501773	0					
ANR	6501869	Identifier	offset		6501773	0					
ANR	6501870	IncDec	++		6501773	1					
ANR	6501871	ExpressionStatement	"ReadProcessMemory ( h_proc , ( WPARAM * ) ( next + offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap ) ) + offset , & subsegment . BlockBitmap , sizeof ( WPARAM ) , NULL )"	532:4:15729:15881	6501773	2	True				
ANR	6501872	CallExpression	"ReadProcessMemory ( h_proc , ( WPARAM * ) ( next + offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap ) ) + offset , & subsegment . BlockBitmap , sizeof ( WPARAM ) , NULL )"		6501773	0					
ANR	6501873	Callee	ReadProcessMemory		6501773	0					
ANR	6501874	Identifier	ReadProcessMemory		6501773	0					
ANR	6501875	ArgumentList	h_proc		6501773	1					
ANR	6501876	Argument	h_proc		6501773	0					
ANR	6501877	Identifier	h_proc		6501773	0					
ANR	6501878	Argument	"( WPARAM * ) ( next + offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap ) ) + offset"		6501773	1					
ANR	6501879	AdditiveExpression	"( WPARAM * ) ( next + offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap ) ) + offset"		6501773	0		+			
ANR	6501880	CastExpression	"( WPARAM * ) ( next + offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap ) )"		6501773	0					
ANR	6501881	CastTarget	WPARAM *		6501773	0					
ANR	6501882	AdditiveExpression	"next + offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap )"		6501773	1		+			
ANR	6501883	Identifier	next		6501773	0					
ANR	6501884	CallExpression	"offsetof ( HEAP_LFH_SUBSEGMENT , BlockBitmap )"		6501773	1					
ANR	6501885	Callee	offsetof		6501773	0					
ANR	6501886	Identifier	offsetof		6501773	0					
ANR	6501887	ArgumentList	HEAP_LFH_SUBSEGMENT		6501773	1					
ANR	6501888	Argument	HEAP_LFH_SUBSEGMENT		6501773	0					
ANR	6501889	Identifier	HEAP_LFH_SUBSEGMENT		6501773	0					
ANR	6501890	Argument	BlockBitmap		6501773	1					
ANR	6501891	Identifier	BlockBitmap		6501773	0					
ANR	6501892	Identifier	offset		6501773	1					
ANR	6501893	Argument	& subsegment . BlockBitmap		6501773	2					
ANR	6501894	UnaryOperationExpression	& subsegment . BlockBitmap		6501773	0					
ANR	6501895	UnaryOperator	&		6501773	0					
ANR	6501896	MemberAccess	subsegment . BlockBitmap		6501773	1					
ANR	6501897	Identifier	subsegment		6501773	0					
ANR	6501898	Identifier	BlockBitmap		6501773	1					
ANR	6501899	Argument	sizeof ( WPARAM )		6501773	3					
ANR	6501900	SizeofExpression	sizeof ( WPARAM )		6501773	0					
ANR	6501901	Sizeof	sizeof		6501773	0					
ANR	6501902	SizeofOperand	WPARAM		6501773	1					
ANR	6501903	Argument	NULL		6501773	4					
ANR	6501904	Identifier	NULL		6501773	0					
ANR	6501905	IfStatement	if ( subsegment . BlockBitmap [ 0 ] & mask )		6501773	1					
ANR	6501906	Condition	subsegment . BlockBitmap [ 0 ] & mask	535:7:15895:15926	6501773	0	True				
ANR	6501907	BitAndExpression	subsegment . BlockBitmap [ 0 ] & mask		6501773	0		&			
ANR	6501908	ArrayIndexing	subsegment . BlockBitmap [ 0 ]		6501773	0					
ANR	6501909	MemberAccess	subsegment . BlockBitmap		6501773	0					
ANR	6501910	Identifier	subsegment		6501773	0					
ANR	6501911	Identifier	BlockBitmap		6501773	1					
ANR	6501912	PrimaryExpression	0		6501773	1					
ANR	6501913	Identifier	mask		6501773	1					
ANR	6501914	CompoundStatement		20:4:889:944	6501773	1					
ANR	6501915	ExpressionStatement	GROW_PBLOCKS ( )	536:4:15935:15950	6501773	0	True				
ANR	6501916	CallExpression	GROW_PBLOCKS ( )		6501773	0					
ANR	6501917	Callee	GROW_PBLOCKS		6501773	0					
ANR	6501918	Identifier	GROW_PBLOCKS		6501773	0					
ANR	6501919	ArgumentList			6501773	1					
ANR	6501920	IdentifierDeclStatement	WPARAM off = ( WPARAM ) subsegment . BlockOffsets . FirstBlockOffset + l * ( WPARAM ) subsegment . BlockOffsets . BlockSize ;	537:4:15956:16065	6501773	1	True				
ANR	6501921	IdentifierDecl	off = ( WPARAM ) subsegment . BlockOffsets . FirstBlockOffset + l * ( WPARAM ) subsegment . BlockOffsets . BlockSize		6501773	0					
ANR	6501922	IdentifierDeclType	WPARAM		6501773	0					
ANR	6501923	Identifier	off		6501773	1					
ANR	6501924	AssignmentExpression	off = ( WPARAM ) subsegment . BlockOffsets . FirstBlockOffset + l * ( WPARAM ) subsegment . BlockOffsets . BlockSize		6501773	2		=			
ANR	6501925	Identifier	off		6501773	0					
ANR	6501926	AdditiveExpression	( WPARAM ) subsegment . BlockOffsets . FirstBlockOffset + l * ( WPARAM ) subsegment . BlockOffsets . BlockSize		6501773	1		+			
ANR	6501927	CastExpression	( WPARAM ) subsegment . BlockOffsets . FirstBlockOffset		6501773	0					
ANR	6501928	CastTarget	WPARAM		6501773	0					
ANR	6501929	MemberAccess	subsegment . BlockOffsets . FirstBlockOffset		6501773	1					
ANR	6501930	MemberAccess	subsegment . BlockOffsets		6501773	0					
ANR	6501931	Identifier	subsegment		6501773	0					
ANR	6501932	Identifier	BlockOffsets		6501773	1					
ANR	6501933	Identifier	FirstBlockOffset		6501773	1					
ANR	6501934	MultiplicativeExpression	l * ( WPARAM ) subsegment . BlockOffsets . BlockSize		6501773	1		*			
ANR	6501935	Identifier	l		6501773	0					
ANR	6501936	CastExpression	( WPARAM ) subsegment . BlockOffsets . BlockSize		6501773	1					
ANR	6501937	CastTarget	WPARAM		6501773	0					
ANR	6501938	MemberAccess	subsegment . BlockOffsets . BlockSize		6501773	1					
ANR	6501939	MemberAccess	subsegment . BlockOffsets		6501773	0					
ANR	6501940	Identifier	subsegment		6501773	0					
ANR	6501941	Identifier	BlockOffsets		6501773	1					
ANR	6501942	Identifier	BlockSize		6501773	1					
ANR	6501943	ExpressionStatement	( * blocks ) [ * count ] . address = next + off	538:4:16071:16109	6501773	2	True				
ANR	6501944	AssignmentExpression	( * blocks ) [ * count ] . address = next + off		6501773	0		=			
ANR	6501945	MemberAccess	( * blocks ) [ * count ] . address		6501773	0					
ANR	6501946	ArrayIndexing	( * blocks ) [ * count ]		6501773	0					
ANR	6501947	UnaryOperationExpression	* blocks		6501773	0					
ANR	6501948	UnaryOperator	*		6501773	0					
ANR	6501949	Identifier	blocks		6501773	1					
ANR	6501950	UnaryOperationExpression	* count		6501773	1					
ANR	6501951	UnaryOperator	*		6501773	0					
ANR	6501952	Identifier	count		6501773	1					
ANR	6501953	Identifier	address		6501773	1					
ANR	6501954	AdditiveExpression	next + off		6501773	1		+			
ANR	6501955	Identifier	next		6501773	0					
ANR	6501956	Identifier	off		6501773	1					
ANR	6501957	ExpressionStatement	( * blocks ) [ * count ] . size = subsegment . BlockOffsets . BlockSize	539:4:16115:16173	6501773	3	True				
ANR	6501958	AssignmentExpression	( * blocks ) [ * count ] . size = subsegment . BlockOffsets . BlockSize		6501773	0		=			
ANR	6501959	MemberAccess	( * blocks ) [ * count ] . size		6501773	0					
ANR	6501960	ArrayIndexing	( * blocks ) [ * count ]		6501773	0					
ANR	6501961	UnaryOperationExpression	* blocks		6501773	0					
ANR	6501962	UnaryOperator	*		6501773	0					
ANR	6501963	Identifier	blocks		6501773	1					
ANR	6501964	UnaryOperationExpression	* count		6501773	1					
ANR	6501965	UnaryOperator	*		6501773	0					
ANR	6501966	Identifier	count		6501773	1					
ANR	6501967	Identifier	size		6501773	1					
ANR	6501968	MemberAccess	subsegment . BlockOffsets . BlockSize		6501773	1					
ANR	6501969	MemberAccess	subsegment . BlockOffsets		6501773	0					
ANR	6501970	Identifier	subsegment		6501773	0					
ANR	6501971	Identifier	BlockOffsets		6501773	1					
ANR	6501972	Identifier	BlockSize		6501773	1					
ANR	6501973	ExpressionStatement	( * blocks ) [ * count ] . flags = 1 | SEGMENT_HEAP_BLOCK | LFH_BLOCK	540:4:16179:16239	6501773	4	True				
ANR	6501974	AssignmentExpression	( * blocks ) [ * count ] . flags = 1 | SEGMENT_HEAP_BLOCK | LFH_BLOCK		6501773	0		=			
ANR	6501975	MemberAccess	( * blocks ) [ * count ] . flags		6501773	0					
ANR	6501976	ArrayIndexing	( * blocks ) [ * count ]		6501773	0					
ANR	6501977	UnaryOperationExpression	* blocks		6501773	0					
ANR	6501978	UnaryOperator	*		6501773	0					
ANR	6501979	Identifier	blocks		6501773	1					
ANR	6501980	UnaryOperationExpression	* count		6501773	1					
ANR	6501981	UnaryOperator	*		6501773	0					
ANR	6501982	Identifier	count		6501773	1					
ANR	6501983	Identifier	flags		6501773	1					
ANR	6501984	InclusiveOrExpression	1 | SEGMENT_HEAP_BLOCK | LFH_BLOCK		6501773	1		|			
ANR	6501985	PrimaryExpression	1		6501773	0					
ANR	6501986	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | LFH_BLOCK		6501773	1		|			
ANR	6501987	Identifier	SEGMENT_HEAP_BLOCK		6501773	0					
ANR	6501988	Identifier	LFH_BLOCK		6501773	1					
ANR	6501989	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	541:4:16245:16300	6501773	5	True				
ANR	6501990	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6501773	0					
ANR	6501991	IdentifierDeclType	PHeapBlockExtraInfo		6501773	0					
ANR	6501992	Identifier	extra		6501773	1					
ANR	6501993	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6501773	2		=			
ANR	6501994	Identifier	extra		6501773	0					
ANR	6501995	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6501773	1					
ANR	6501996	Callee	R_NEW0		6501773	0					
ANR	6501997	Identifier	R_NEW0		6501773	0					
ANR	6501998	ArgumentList	HeapBlockExtraInfo		6501773	1					
ANR	6501999	Argument	HeapBlockExtraInfo		6501773	0					
ANR	6502000	Identifier	HeapBlockExtraInfo		6501773	0					
ANR	6502001	IfStatement	if ( ! extra )		6501773	6					
ANR	6502002	Condition	! extra	542:8:16310:16315	6501773	0	True				
ANR	6502003	UnaryOperationExpression	! extra		6501773	0					
ANR	6502004	UnaryOperator	!		6501773	0					
ANR	6502005	Identifier	extra		6501773	1					
ANR	6502006	CompoundStatement		21:16:962:962	6501773	1					
ANR	6502007	ReturnStatement	return false ;	543:5:16325:16337	6501773	0	True				
ANR	6502008	Identifier	false		6501773	0					
ANR	6502009	ExpressionStatement	extra -> segment = next	545:4:16349:16370	6501773	7	True				
ANR	6502010	AssignmentExpression	extra -> segment = next		6501773	0		=			
ANR	6502011	PtrMemberAccess	extra -> segment		6501773	0					
ANR	6502012	Identifier	extra		6501773	0					
ANR	6502013	Identifier	segment		6501773	1					
ANR	6502014	Identifier	next		6501773	1					
ANR	6502015	ExpressionStatement	extra -> granularity = sizeof ( HEAP_ENTRY )	546:4:16376:16416	6501773	8	True				
ANR	6502016	AssignmentExpression	extra -> granularity = sizeof ( HEAP_ENTRY )		6501773	0		=			
ANR	6502017	PtrMemberAccess	extra -> granularity		6501773	0					
ANR	6502018	Identifier	extra		6501773	0					
ANR	6502019	Identifier	granularity		6501773	1					
ANR	6502020	SizeofExpression	sizeof ( HEAP_ENTRY )		6501773	1					
ANR	6502021	Sizeof	sizeof		6501773	0					
ANR	6502022	SizeofOperand	HEAP_ENTRY		6501773	1					
ANR	6502023	ExpressionStatement	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	547:4:16422:16474	6501773	9	True				
ANR	6502024	AssignmentExpression	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6501773	0		=			
ANR	6502025	MemberAccess	( * blocks ) [ * count ] . extra		6501773	0					
ANR	6502026	ArrayIndexing	( * blocks ) [ * count ]		6501773	0					
ANR	6502027	UnaryOperationExpression	* blocks		6501773	0					
ANR	6502028	UnaryOperator	*		6501773	0					
ANR	6502029	Identifier	blocks		6501773	1					
ANR	6502030	UnaryOperationExpression	* count		6501773	1					
ANR	6502031	UnaryOperator	*		6501773	0					
ANR	6502032	Identifier	count		6501773	1					
ANR	6502033	Identifier	extra		6501773	1					
ANR	6502034	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6501773	1		|			
ANR	6502035	Identifier	EXTRA_FLAG		6501773	0					
ANR	6502036	CastExpression	( WPARAM ) extra		6501773	1					
ANR	6502037	CastTarget	WPARAM		6501773	0					
ANR	6502038	Identifier	extra		6501773	1					
ANR	6502039	ExpressionStatement	* count += 1	548:4:16480:16491	6501773	10	True				
ANR	6502040	AssignmentExpression	* count += 1		6501773	0		+=			
ANR	6502041	UnaryOperationExpression	* count		6501773	0					
ANR	6502042	UnaryOperator	*		6501773	0					
ANR	6502043	Identifier	count		6501773	1					
ANR	6502044	PrimaryExpression	1		6501773	1					
ANR	6502045	ExpressionStatement	mask <<= 2	550:3:16501:16511	6501773	2	True				
ANR	6502046	AssignmentExpression	mask <<= 2		6501773	0		<<=			
ANR	6502047	Identifier	mask		6501773	0					
ANR	6502048	PrimaryExpression	2		6501773	1					
ANR	6502049	ExpressionStatement	next = ( WPARAM ) subsegment . ListEntry . Flink	552:2:16519:16560	6501773	5	True				
ANR	6502050	AssignmentExpression	next = ( WPARAM ) subsegment . ListEntry . Flink		6501773	0		=			
ANR	6502051	Identifier	next		6501773	0					
ANR	6502052	CastExpression	( WPARAM ) subsegment . ListEntry . Flink		6501773	1					
ANR	6502053	CastTarget	WPARAM		6501773	0					
ANR	6502054	MemberAccess	subsegment . ListEntry . Flink		6501773	1					
ANR	6502055	MemberAccess	subsegment . ListEntry		6501773	0					
ANR	6502056	Identifier	subsegment		6501773	0					
ANR	6502057	Identifier	ListEntry		6501773	1					
ANR	6502058	Identifier	Flink		6501773	1					
ANR	6502059	ReturnStatement	return true ;	554:1:16566:16577	6501773	1	True				
ANR	6502060	Identifier	true		6501773	0					
ANR	6502061	ReturnType	static bool		6501773	1					
ANR	6502062	Identifier	__lfh_segment_loop		6501773	2					
ANR	6502063	ParameterList	"HANDLE h_proc , PHeapBlockBasicInfo * blocks , SIZE_T * allocated , WPARAM lfhKey , WPARAM * count , WPARAM first , WPARAM next"		6501773	3					
ANR	6502064	Parameter	HANDLE h_proc	522:31:15235:15247	6501773	0	True				
ANR	6502065	ParameterType	HANDLE		6501773	0					
ANR	6502066	Identifier	h_proc		6501773	1					
ANR	6502067	Parameter	PHeapBlockBasicInfo * blocks	522:46:15250:15276	6501773	1	True				
ANR	6502068	ParameterType	PHeapBlockBasicInfo *		6501773	0					
ANR	6502069	Identifier	blocks		6501773	1					
ANR	6502070	Parameter	SIZE_T * allocated	522:75:15279:15295	6501773	2	True				
ANR	6502071	ParameterType	SIZE_T *		6501773	0					
ANR	6502072	Identifier	allocated		6501773	1					
ANR	6502073	Parameter	WPARAM lfhKey	522:94:15298:15310	6501773	3	True				
ANR	6502074	ParameterType	WPARAM		6501773	0					
ANR	6502075	Identifier	lfhKey		6501773	1					
ANR	6502076	Parameter	WPARAM * count	522:109:15313:15325	6501773	4	True				
ANR	6502077	ParameterType	WPARAM *		6501773	0					
ANR	6502078	Identifier	count		6501773	1					
ANR	6502079	Parameter	WPARAM first	522:124:15328:15339	6501773	5	True				
ANR	6502080	ParameterType	WPARAM		6501773	0					
ANR	6502081	Identifier	first		6501773	1					
ANR	6502082	Parameter	WPARAM next	522:138:15342:15352	6501773	6	True				
ANR	6502083	ParameterType	WPARAM		6501773	0					
ANR	6502084	Identifier	next		6501773	1					
ANR	6502085	CFGEntryNode	ENTRY		6501773		True				
ANR	6502086	CFGExitNode	EXIT		6501773		True				
ANR	6502087	Symbol	next		6501773						
ANR	6502088	Symbol	* * count		6501773						
ANR	6502089	Symbol	( * blocks ) [ * count ] . extra		6501773						
ANR	6502090	Symbol	* * blocks		6501773						
ANR	6502091	Symbol	lfhKey		6501773						
ANR	6502092	Symbol	subsegment . ListEntry		6501773						
ANR	6502093	Symbol	* subsegment . BlockBitmap		6501773						
ANR	6502094	Symbol	HEAP_LFH_SUBSEGMENT		6501773						
ANR	6502095	Symbol	* count		6501773						
ANR	6502096	Symbol	( * blocks ) [ * count ] . flags		6501773						
ANR	6502097	Symbol	subsegment . BlockOffsets . FirstBlockOffset		6501773						
ANR	6502098	Symbol	( * blocks ) [ * count ] . size		6501773						
ANR	6502099	Symbol	extra		6501773						
ANR	6502100	Symbol	offsetof		6501773						
ANR	6502101	Symbol	( * blocks ) [ * count ] . address		6501773						
ANR	6502102	Symbol	allocated		6501773						
ANR	6502103	Symbol	mask		6501773						
ANR	6502104	Symbol	extra -> granularity		6501773						
ANR	6502105	Symbol	EXTRA_FLAG		6501773						
ANR	6502106	Symbol	subsegment . BlockOffsets . BlockSize		6501773						
ANR	6502107	Symbol	NULL		6501773						
ANR	6502108	Symbol	offset		6501773						
ANR	6502109	Symbol	* blocks		6501773						
ANR	6502110	Symbol	blocks		6501773						
ANR	6502111	Symbol	count		6501773						
ANR	6502112	Symbol	false		6501773						
ANR	6502113	Symbol	h_proc		6501773						
ANR	6502114	Symbol	l		6501773						
ANR	6502115	Symbol	off		6501773						
ANR	6502116	Symbol	subsegment		6501773						
ANR	6502117	Symbol	subsegment . BlockOffsets . EncodedData		6501773						
ANR	6502118	Symbol	& subsegment . BlockBitmap		6501773						
ANR	6502119	Symbol	subsegment . BlockCount		6501773						
ANR	6502120	Symbol	subsegment . BlockBitmap		6501773						
ANR	6502121	Symbol	R_NEW0		6501773						
ANR	6502122	Symbol	* extra		6501773						
ANR	6502123	Symbol	BlockBitmap		6501773						
ANR	6502124	Symbol	true		6501773						
ANR	6502125	Symbol	SEGMENT_HEAP_BLOCK		6501773						
ANR	6502126	Symbol	LFH_BLOCK		6501773						
ANR	6502127	Symbol	subsegment . BlockOffsets		6501773						
ANR	6502128	Symbol	subsegment . ListEntry . Flink		6501773						
ANR	6502129	Symbol	& subsegment		6501773						
ANR	6502130	Symbol	first		6501773						
ANR	6502131	Symbol	* subsegment		6501773						
ANR	6502132	Symbol	extra -> segment		6501773						
ANR	6502133	Symbol	HeapBlockExtraInfo		6501773						
ANR	6502134	Function	GetSegmentHeapBlocks	557:0:16582:22603							
ANR	6502135	FunctionDef	"GetSegmentHeapBlocks (RDebug * dbg , HANDLE h_proc , PVOID heapBase , PHeapBlockBasicInfo * blocks , WPARAM * count , SIZE_T * allocated)"		6502134	0					
ANR	6502136	CompoundStatement		557:140:16722:22603	6502134	0					
ANR	6502137	ExpressionStatement	"r_return_val_if_fail ( h_proc && blocks && count && allocated , false )"	558:1:16725:16793	6502134	0	True				
ANR	6502138	CallExpression	"r_return_val_if_fail ( h_proc && blocks && count && allocated , false )"		6502134	0					
ANR	6502139	Callee	r_return_val_if_fail		6502134	0					
ANR	6502140	Identifier	r_return_val_if_fail		6502134	0					
ANR	6502141	ArgumentList	h_proc && blocks && count && allocated		6502134	1					
ANR	6502142	Argument	h_proc && blocks && count && allocated		6502134	0					
ANR	6502143	AndExpression	h_proc && blocks && count && allocated		6502134	0		&&			
ANR	6502144	Identifier	h_proc		6502134	0					
ANR	6502145	AndExpression	blocks && count && allocated		6502134	1		&&			
ANR	6502146	Identifier	blocks		6502134	0					
ANR	6502147	AndExpression	count && allocated		6502134	1		&&			
ANR	6502148	Identifier	count		6502134	0					
ANR	6502149	Identifier	allocated		6502134	1					
ANR	6502150	Argument	false		6502134	1					
ANR	6502151	Identifier	false		6502134	0					
ANR	6502152	IdentifierDeclStatement	WPARAM bytesRead ;	559:1:16796:16812	6502134	1	True				
ANR	6502153	IdentifierDecl	bytesRead		6502134	0					
ANR	6502154	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502155	Identifier	bytesRead		6502134	1					
ANR	6502156	IdentifierDeclStatement	SEGMENT_HEAP segheapHeader ;	560:1:16815:16841	6502134	2	True				
ANR	6502157	IdentifierDecl	segheapHeader		6502134	0					
ANR	6502158	IdentifierDeclType	SEGMENT_HEAP		6502134	0					
ANR	6502159	Identifier	segheapHeader		6502134	1					
ANR	6502160	ExpressionStatement	"ReadProcessMemory ( h_proc , heapBase , & segheapHeader , sizeof ( SEGMENT_HEAP ) , & bytesRead )"	561:1:16844:16931	6502134	3	True				
ANR	6502161	CallExpression	"ReadProcessMemory ( h_proc , heapBase , & segheapHeader , sizeof ( SEGMENT_HEAP ) , & bytesRead )"		6502134	0					
ANR	6502162	Callee	ReadProcessMemory		6502134	0					
ANR	6502163	Identifier	ReadProcessMemory		6502134	0					
ANR	6502164	ArgumentList	h_proc		6502134	1					
ANR	6502165	Argument	h_proc		6502134	0					
ANR	6502166	Identifier	h_proc		6502134	0					
ANR	6502167	Argument	heapBase		6502134	1					
ANR	6502168	Identifier	heapBase		6502134	0					
ANR	6502169	Argument	& segheapHeader		6502134	2					
ANR	6502170	UnaryOperationExpression	& segheapHeader		6502134	0					
ANR	6502171	UnaryOperator	&		6502134	0					
ANR	6502172	Identifier	segheapHeader		6502134	1					
ANR	6502173	Argument	sizeof ( SEGMENT_HEAP )		6502134	3					
ANR	6502174	SizeofExpression	sizeof ( SEGMENT_HEAP )		6502134	0					
ANR	6502175	Sizeof	sizeof		6502134	0					
ANR	6502176	SizeofOperand	SEGMENT_HEAP		6502134	1					
ANR	6502177	Argument	& bytesRead		6502134	4					
ANR	6502178	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502179	UnaryOperator	&		6502134	0					
ANR	6502180	Identifier	bytesRead		6502134	1					
ANR	6502181	IfStatement	if ( segheapHeader . Signature != 0xddeeddee )		6502134	4					
ANR	6502182	Condition	segheapHeader . Signature != 0xddeeddee	563:5:16939:16975	6502134	0	True				
ANR	6502183	EqualityExpression	segheapHeader . Signature != 0xddeeddee		6502134	0		!=			
ANR	6502184	MemberAccess	segheapHeader . Signature		6502134	0					
ANR	6502185	Identifier	segheapHeader		6502134	0					
ANR	6502186	Identifier	Signature		6502134	1					
ANR	6502187	PrimaryExpression	0xddeeddee		6502134	1					
ANR	6502188	CompoundStatement		7:44:255:255	6502134	1					
ANR	6502189	ReturnStatement	return false ;	564:2:16982:16994	6502134	0	True				
ANR	6502190	Identifier	false		6502134	0					
ANR	6502191	IdentifierDeclStatement	WPARAM lfhKey ;	566:1:17000:17013	6502134	5	True				
ANR	6502192	IdentifierDecl	lfhKey		6502134	0					
ANR	6502193	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502194	Identifier	lfhKey		6502134	1					
ANR	6502195	IdentifierDeclStatement	WPARAM lfhKeyLocation = RtlpHpHeapGlobalsOffset + sizeof ( WPARAM ) ;	567:1:17016:17081	6502134	6	True				
ANR	6502196	IdentifierDecl	lfhKeyLocation = RtlpHpHeapGlobalsOffset + sizeof ( WPARAM )		6502134	0					
ANR	6502197	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502198	Identifier	lfhKeyLocation		6502134	1					
ANR	6502199	AssignmentExpression	lfhKeyLocation = RtlpHpHeapGlobalsOffset + sizeof ( WPARAM )		6502134	2		=			
ANR	6502200	Identifier	lfhKeyLocation		6502134	0					
ANR	6502201	AdditiveExpression	RtlpHpHeapGlobalsOffset + sizeof ( WPARAM )		6502134	1		+			
ANR	6502202	Identifier	RtlpHpHeapGlobalsOffset		6502134	0					
ANR	6502203	SizeofExpression	sizeof ( WPARAM )		6502134	1					
ANR	6502204	Sizeof	sizeof		6502134	0					
ANR	6502205	SizeofOperand	WPARAM		6502134	1					
ANR	6502206	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , & lfhKey , sizeof ( WPARAM ) , & bytesRead ) )"		6502134	7					
ANR	6502207	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , & lfhKey , sizeof ( WPARAM ) , & bytesRead )"	568:5:17088:17175	6502134	0	True				
ANR	6502208	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , & lfhKey , sizeof ( WPARAM ) , & bytesRead )"		6502134	0					
ANR	6502209	UnaryOperator	!		6502134	0					
ANR	6502210	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) lfhKeyLocation , & lfhKey , sizeof ( WPARAM ) , & bytesRead )"		6502134	1					
ANR	6502211	Callee	ReadProcessMemory		6502134	0					
ANR	6502212	Identifier	ReadProcessMemory		6502134	0					
ANR	6502213	ArgumentList	h_proc		6502134	1					
ANR	6502214	Argument	h_proc		6502134	0					
ANR	6502215	Identifier	h_proc		6502134	0					
ANR	6502216	Argument	( PVOID ) lfhKeyLocation		6502134	1					
ANR	6502217	CastExpression	( PVOID ) lfhKeyLocation		6502134	0					
ANR	6502218	CastTarget	PVOID		6502134	0					
ANR	6502219	Identifier	lfhKeyLocation		6502134	1					
ANR	6502220	Argument	& lfhKey		6502134	2					
ANR	6502221	UnaryOperationExpression	& lfhKey		6502134	0					
ANR	6502222	UnaryOperator	&		6502134	0					
ANR	6502223	Identifier	lfhKey		6502134	1					
ANR	6502224	Argument	sizeof ( WPARAM )		6502134	3					
ANR	6502225	SizeofExpression	sizeof ( WPARAM )		6502134	0					
ANR	6502226	Sizeof	sizeof		6502134	0					
ANR	6502227	SizeofOperand	WPARAM		6502134	1					
ANR	6502228	Argument	& bytesRead		6502134	4					
ANR	6502229	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502230	UnaryOperator	&		6502134	0					
ANR	6502231	Identifier	bytesRead		6502134	1					
ANR	6502232	CompoundStatement		12:95:455:455	6502134	1					
ANR	6502233	ExpressionStatement	"r_sys_perror ( ""ReadProcessMemory"" )"	569:2:17182:17216	6502134	0	True				
ANR	6502234	CallExpression	"r_sys_perror ( ""ReadProcessMemory"" )"		6502134	0					
ANR	6502235	Callee	r_sys_perror		6502134	0					
ANR	6502236	Identifier	r_sys_perror		6502134	0					
ANR	6502237	ArgumentList	"""ReadProcessMemory"""		6502134	1					
ANR	6502238	Argument	"""ReadProcessMemory"""		6502134	0					
ANR	6502239	PrimaryExpression	"""ReadProcessMemory"""		6502134	0					
ANR	6502240	ExpressionStatement	"eprintf ( ""LFH key not found.\\n"" )"	570:2:17220:17252	6502134	1	True				
ANR	6502241	CallExpression	"eprintf ( ""LFH key not found.\\n"" )"		6502134	0					
ANR	6502242	Callee	eprintf		6502134	0					
ANR	6502243	Identifier	eprintf		6502134	0					
ANR	6502244	ArgumentList	"""LFH key not found.\\n"""		6502134	1					
ANR	6502245	Argument	"""LFH key not found.\\n"""		6502134	0					
ANR	6502246	PrimaryExpression	"""LFH key not found.\\n"""		6502134	0					
ANR	6502247	ReturnStatement	return false ;	571:2:17256:17268	6502134	2	True				
ANR	6502248	Identifier	false		6502134	0					
ANR	6502249	IdentifierDeclStatement	byte numBuckets = _countof ( segheapHeader . LfhContext . Buckets ) ;	575:1:17283:17344	6502134	8	True				
ANR	6502250	IdentifierDecl	numBuckets = _countof ( segheapHeader . LfhContext . Buckets )		6502134	0					
ANR	6502251	IdentifierDeclType	byte		6502134	0					
ANR	6502252	Identifier	numBuckets		6502134	1					
ANR	6502253	AssignmentExpression	numBuckets = _countof ( segheapHeader . LfhContext . Buckets )		6502134	2		=			
ANR	6502254	Identifier	numBuckets		6502134	0					
ANR	6502255	CallExpression	_countof ( segheapHeader . LfhContext . Buckets )		6502134	1					
ANR	6502256	Callee	_countof		6502134	0					
ANR	6502257	Identifier	_countof		6502134	0					
ANR	6502258	ArgumentList	segheapHeader . LfhContext . Buckets		6502134	1					
ANR	6502259	Argument	segheapHeader . LfhContext . Buckets		6502134	0					
ANR	6502260	MemberAccess	segheapHeader . LfhContext . Buckets		6502134	0					
ANR	6502261	MemberAccess	segheapHeader . LfhContext		6502134	0					
ANR	6502262	Identifier	segheapHeader		6502134	0					
ANR	6502263	Identifier	LfhContext		6502134	1					
ANR	6502264	Identifier	Buckets		6502134	1					
ANR	6502265	ForStatement	for ( int j = 0 ; j < numBuckets ; j ++ )		6502134	9					
ANR	6502266	ForInit	int j = 0 ;	576:6:17352:17361	6502134	0	True				
ANR	6502267	IdentifierDeclStatement	int j = 0 ;		6502134	0					
ANR	6502268	IdentifierDecl	j = 0		6502134	0					
ANR	6502269	IdentifierDeclType	int		6502134	0					
ANR	6502270	Identifier	j		6502134	1					
ANR	6502271	AssignmentExpression	j = 0		6502134	2		=			
ANR	6502272	Identifier	j		6502134	0					
ANR	6502273	PrimaryExpression	0		6502134	1					
ANR	6502274	Condition	j < numBuckets	576:17:17363:17376	6502134	1	True				
ANR	6502275	RelationalExpression	j < numBuckets		6502134	0		<			
ANR	6502276	Identifier	j		6502134	0					
ANR	6502277	Identifier	numBuckets		6502134	1					
ANR	6502278	PostIncDecOperationExpression	j ++	576:33:17379:17381	6502134	2	True				
ANR	6502279	Identifier	j		6502134	0					
ANR	6502280	IncDec	++		6502134	1					
ANR	6502281	CompoundStatement		31:2:1283:1353	6502134	3					
ANR	6502282	IfStatement	if ( ( WPARAM ) segheapHeader . LfhContext . Buckets [ j ] & 1 )		6502134	0					
ANR	6502283	Condition	( WPARAM ) segheapHeader . LfhContext . Buckets [ j ] & 1	577:6:17392:17438	6502134	0	True				
ANR	6502284	BitAndExpression	( WPARAM ) segheapHeader . LfhContext . Buckets [ j ] & 1		6502134	0		&			
ANR	6502285	CastExpression	( WPARAM ) segheapHeader . LfhContext . Buckets [ j ]		6502134	0					
ANR	6502286	CastTarget	WPARAM		6502134	0					
ANR	6502287	ArrayIndexing	segheapHeader . LfhContext . Buckets [ j ]		6502134	1					
ANR	6502288	MemberAccess	segheapHeader . LfhContext . Buckets		6502134	0					
ANR	6502289	MemberAccess	segheapHeader . LfhContext		6502134	0					
ANR	6502290	Identifier	segheapHeader		6502134	0					
ANR	6502291	Identifier	LfhContext		6502134	1					
ANR	6502292	Identifier	Buckets		6502134	1					
ANR	6502293	Identifier	j		6502134	1					
ANR	6502294	PrimaryExpression	1		6502134	1					
ANR	6502295	CompoundStatement		21:55:718:718	6502134	1					
ANR	6502296	ContinueStatement	continue ;	578:3:17446:17454	6502134	0	True				
ANR	6502297	IdentifierDeclStatement	HEAP_LFH_BUCKET bucket ;	580:2:17462:17484	6502134	1	True				
ANR	6502298	IdentifierDecl	bucket		6502134	0					
ANR	6502299	IdentifierDeclType	HEAP_LFH_BUCKET		6502134	0					
ANR	6502300	Identifier	bucket		6502134	1					
ANR	6502301	ExpressionStatement	"ReadProcessMemory ( h_proc , segheapHeader . LfhContext . Buckets [ j ] , & bucket , sizeof ( HEAP_LFH_BUCKET ) , & bytesRead )"	581:2:17488:17598	6502134	2	True				
ANR	6502302	CallExpression	"ReadProcessMemory ( h_proc , segheapHeader . LfhContext . Buckets [ j ] , & bucket , sizeof ( HEAP_LFH_BUCKET ) , & bytesRead )"		6502134	0					
ANR	6502303	Callee	ReadProcessMemory		6502134	0					
ANR	6502304	Identifier	ReadProcessMemory		6502134	0					
ANR	6502305	ArgumentList	h_proc		6502134	1					
ANR	6502306	Argument	h_proc		6502134	0					
ANR	6502307	Identifier	h_proc		6502134	0					
ANR	6502308	Argument	segheapHeader . LfhContext . Buckets [ j ]		6502134	1					
ANR	6502309	ArrayIndexing	segheapHeader . LfhContext . Buckets [ j ]		6502134	0					
ANR	6502310	MemberAccess	segheapHeader . LfhContext . Buckets		6502134	0					
ANR	6502311	MemberAccess	segheapHeader . LfhContext		6502134	0					
ANR	6502312	Identifier	segheapHeader		6502134	0					
ANR	6502313	Identifier	LfhContext		6502134	1					
ANR	6502314	Identifier	Buckets		6502134	1					
ANR	6502315	Identifier	j		6502134	1					
ANR	6502316	Argument	& bucket		6502134	2					
ANR	6502317	UnaryOperationExpression	& bucket		6502134	0					
ANR	6502318	UnaryOperator	&		6502134	0					
ANR	6502319	Identifier	bucket		6502134	1					
ANR	6502320	Argument	sizeof ( HEAP_LFH_BUCKET )		6502134	3					
ANR	6502321	SizeofExpression	sizeof ( HEAP_LFH_BUCKET )		6502134	0					
ANR	6502322	Sizeof	sizeof		6502134	0					
ANR	6502323	SizeofOperand	HEAP_LFH_BUCKET		6502134	1					
ANR	6502324	Argument	& bytesRead		6502134	4					
ANR	6502325	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502326	UnaryOperator	&		6502134	0					
ANR	6502327	Identifier	bytesRead		6502134	1					
ANR	6502328	IdentifierDeclStatement	"HEAP_LFH_AFFINITY_SLOT affinitySlot , * paffinitySlot ;"	582:2:17602:17653	6502134	3	True				
ANR	6502329	IdentifierDecl	affinitySlot		6502134	0					
ANR	6502330	IdentifierDeclType	HEAP_LFH_AFFINITY_SLOT		6502134	0					
ANR	6502331	Identifier	affinitySlot		6502134	1					
ANR	6502332	IdentifierDecl	* paffinitySlot		6502134	1					
ANR	6502333	IdentifierDeclType	HEAP_LFH_AFFINITY_SLOT *		6502134	0					
ANR	6502334	Identifier	paffinitySlot		6502134	1					
ANR	6502335	ExpressionStatement	"ReadProcessMemory ( h_proc , bucket . AffinitySlots , & paffinitySlot , sizeof ( PHEAP_LFH_AFFINITY_SLOT ) , & bytesRead )"	583:2:17657:17767	6502134	4	True				
ANR	6502336	CallExpression	"ReadProcessMemory ( h_proc , bucket . AffinitySlots , & paffinitySlot , sizeof ( PHEAP_LFH_AFFINITY_SLOT ) , & bytesRead )"		6502134	0					
ANR	6502337	Callee	ReadProcessMemory		6502134	0					
ANR	6502338	Identifier	ReadProcessMemory		6502134	0					
ANR	6502339	ArgumentList	h_proc		6502134	1					
ANR	6502340	Argument	h_proc		6502134	0					
ANR	6502341	Identifier	h_proc		6502134	0					
ANR	6502342	Argument	bucket . AffinitySlots		6502134	1					
ANR	6502343	MemberAccess	bucket . AffinitySlots		6502134	0					
ANR	6502344	Identifier	bucket		6502134	0					
ANR	6502345	Identifier	AffinitySlots		6502134	1					
ANR	6502346	Argument	& paffinitySlot		6502134	2					
ANR	6502347	UnaryOperationExpression	& paffinitySlot		6502134	0					
ANR	6502348	UnaryOperator	&		6502134	0					
ANR	6502349	Identifier	paffinitySlot		6502134	1					
ANR	6502350	Argument	sizeof ( PHEAP_LFH_AFFINITY_SLOT )		6502134	3					
ANR	6502351	SizeofExpression	sizeof ( PHEAP_LFH_AFFINITY_SLOT )		6502134	0					
ANR	6502352	Sizeof	sizeof		6502134	0					
ANR	6502353	SizeofOperand	PHEAP_LFH_AFFINITY_SLOT		6502134	1					
ANR	6502354	Argument	& bytesRead		6502134	4					
ANR	6502355	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502356	UnaryOperator	&		6502134	0					
ANR	6502357	Identifier	bytesRead		6502134	1					
ANR	6502358	ExpressionStatement	bucket . AffinitySlots ++	584:2:17771:17793	6502134	5	True				
ANR	6502359	PostIncDecOperationExpression	bucket . AffinitySlots ++		6502134	0					
ANR	6502360	MemberAccess	bucket . AffinitySlots		6502134	0					
ANR	6502361	Identifier	bucket		6502134	0					
ANR	6502362	Identifier	AffinitySlots		6502134	1					
ANR	6502363	IncDec	++		6502134	1					
ANR	6502364	ExpressionStatement	"ReadProcessMemory ( h_proc , paffinitySlot , & affinitySlot , sizeof ( HEAP_LFH_AFFINITY_SLOT ) , & bytesRead )"	585:2:17797:17898	6502134	6	True				
ANR	6502365	CallExpression	"ReadProcessMemory ( h_proc , paffinitySlot , & affinitySlot , sizeof ( HEAP_LFH_AFFINITY_SLOT ) , & bytesRead )"		6502134	0					
ANR	6502366	Callee	ReadProcessMemory		6502134	0					
ANR	6502367	Identifier	ReadProcessMemory		6502134	0					
ANR	6502368	ArgumentList	h_proc		6502134	1					
ANR	6502369	Argument	h_proc		6502134	0					
ANR	6502370	Identifier	h_proc		6502134	0					
ANR	6502371	Argument	paffinitySlot		6502134	1					
ANR	6502372	Identifier	paffinitySlot		6502134	0					
ANR	6502373	Argument	& affinitySlot		6502134	2					
ANR	6502374	UnaryOperationExpression	& affinitySlot		6502134	0					
ANR	6502375	UnaryOperator	&		6502134	0					
ANR	6502376	Identifier	affinitySlot		6502134	1					
ANR	6502377	Argument	sizeof ( HEAP_LFH_AFFINITY_SLOT )		6502134	3					
ANR	6502378	SizeofExpression	sizeof ( HEAP_LFH_AFFINITY_SLOT )		6502134	0					
ANR	6502379	Sizeof	sizeof		6502134	0					
ANR	6502380	SizeofOperand	HEAP_LFH_AFFINITY_SLOT		6502134	1					
ANR	6502381	Argument	& bytesRead		6502134	4					
ANR	6502382	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502383	UnaryOperator	&		6502134	0					
ANR	6502384	Identifier	bytesRead		6502134	1					
ANR	6502385	IdentifierDeclStatement	"WPARAM first = ( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , AvailableSubsegmentList ) ;"	586:2:17902:18002	6502134	7	True				
ANR	6502386	IdentifierDecl	"first = ( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , AvailableSubsegmentList )"		6502134	0					
ANR	6502387	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502388	Identifier	first		6502134	1					
ANR	6502389	AssignmentExpression	"first = ( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , AvailableSubsegmentList )"		6502134	2		=			
ANR	6502390	Identifier	first		6502134	0					
ANR	6502391	AdditiveExpression	"( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , AvailableSubsegmentList )"		6502134	1		+			
ANR	6502392	CastExpression	( WPARAM ) paffinitySlot		6502134	0					
ANR	6502393	CastTarget	WPARAM		6502134	0					
ANR	6502394	Identifier	paffinitySlot		6502134	1					
ANR	6502395	CallExpression	"offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , AvailableSubsegmentList )"		6502134	1					
ANR	6502396	Callee	offsetof		6502134	0					
ANR	6502397	Identifier	offsetof		6502134	0					
ANR	6502398	ArgumentList	HEAP_LFH_SUBSEGMENT_OWNER		6502134	1					
ANR	6502399	Argument	HEAP_LFH_SUBSEGMENT_OWNER		6502134	0					
ANR	6502400	Identifier	HEAP_LFH_SUBSEGMENT_OWNER		6502134	0					
ANR	6502401	Argument	AvailableSubsegmentList		6502134	1					
ANR	6502402	Identifier	AvailableSubsegmentList		6502134	0					
ANR	6502403	IdentifierDeclStatement	WPARAM next = ( WPARAM ) affinitySlot . State . AvailableSubsegmentList . Flink ;	587:2:18006:18076	6502134	8	True				
ANR	6502404	IdentifierDecl	next = ( WPARAM ) affinitySlot . State . AvailableSubsegmentList . Flink		6502134	0					
ANR	6502405	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502406	Identifier	next		6502134	1					
ANR	6502407	AssignmentExpression	next = ( WPARAM ) affinitySlot . State . AvailableSubsegmentList . Flink		6502134	2		=			
ANR	6502408	Identifier	next		6502134	0					
ANR	6502409	CastExpression	( WPARAM ) affinitySlot . State . AvailableSubsegmentList . Flink		6502134	1					
ANR	6502410	CastTarget	WPARAM		6502134	0					
ANR	6502411	MemberAccess	affinitySlot . State . AvailableSubsegmentList . Flink		6502134	1					
ANR	6502412	MemberAccess	affinitySlot . State . AvailableSubsegmentList		6502134	0					
ANR	6502413	MemberAccess	affinitySlot . State		6502134	0					
ANR	6502414	Identifier	affinitySlot		6502134	0					
ANR	6502415	Identifier	State		6502134	1					
ANR	6502416	Identifier	AvailableSubsegmentList		6502134	1					
ANR	6502417	Identifier	Flink		6502134	1					
ANR	6502418	IfStatement	"if ( ! __lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next ) )"		6502134	9					
ANR	6502419	Condition	"! __lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next )"	588:6:18084:18158	6502134	0	True				
ANR	6502420	UnaryOperationExpression	"! __lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next )"		6502134	0					
ANR	6502421	UnaryOperator	!		6502134	0					
ANR	6502422	CallExpression	"__lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next )"		6502134	1					
ANR	6502423	Callee	__lfh_segment_loop		6502134	0					
ANR	6502424	Identifier	__lfh_segment_loop		6502134	0					
ANR	6502425	ArgumentList	h_proc		6502134	1					
ANR	6502426	Argument	h_proc		6502134	0					
ANR	6502427	Identifier	h_proc		6502134	0					
ANR	6502428	Argument	blocks		6502134	1					
ANR	6502429	Identifier	blocks		6502134	0					
ANR	6502430	Argument	allocated		6502134	2					
ANR	6502431	Identifier	allocated		6502134	0					
ANR	6502432	Argument	lfhKey		6502134	3					
ANR	6502433	Identifier	lfhKey		6502134	0					
ANR	6502434	Argument	count		6502134	4					
ANR	6502435	Identifier	count		6502134	0					
ANR	6502436	Argument	first		6502134	5					
ANR	6502437	Identifier	first		6502134	0					
ANR	6502438	Argument	next		6502134	6					
ANR	6502439	Identifier	next		6502134	0					
ANR	6502440	CompoundStatement		32:83:1438:1438	6502134	1					
ANR	6502441	ReturnStatement	return false ;	589:3:18166:18178	6502134	0	True				
ANR	6502442	Identifier	false		6502134	0					
ANR	6502443	ExpressionStatement	"first = ( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , FullSubsegmentList )"	591:2:18186:18274	6502134	10	True				
ANR	6502444	AssignmentExpression	"first = ( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , FullSubsegmentList )"		6502134	0		=			
ANR	6502445	Identifier	first		6502134	0					
ANR	6502446	AdditiveExpression	"( WPARAM ) paffinitySlot + offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , FullSubsegmentList )"		6502134	1		+			
ANR	6502447	CastExpression	( WPARAM ) paffinitySlot		6502134	0					
ANR	6502448	CastTarget	WPARAM		6502134	0					
ANR	6502449	Identifier	paffinitySlot		6502134	1					
ANR	6502450	CallExpression	"offsetof ( HEAP_LFH_SUBSEGMENT_OWNER , FullSubsegmentList )"		6502134	1					
ANR	6502451	Callee	offsetof		6502134	0					
ANR	6502452	Identifier	offsetof		6502134	0					
ANR	6502453	ArgumentList	HEAP_LFH_SUBSEGMENT_OWNER		6502134	1					
ANR	6502454	Argument	HEAP_LFH_SUBSEGMENT_OWNER		6502134	0					
ANR	6502455	Identifier	HEAP_LFH_SUBSEGMENT_OWNER		6502134	0					
ANR	6502456	Argument	FullSubsegmentList		6502134	1					
ANR	6502457	Identifier	FullSubsegmentList		6502134	0					
ANR	6502458	ExpressionStatement	next = ( WPARAM ) affinitySlot . State . FullSubsegmentList . Flink	592:2:18278:18336	6502134	11	True				
ANR	6502459	AssignmentExpression	next = ( WPARAM ) affinitySlot . State . FullSubsegmentList . Flink		6502134	0		=			
ANR	6502460	Identifier	next		6502134	0					
ANR	6502461	CastExpression	( WPARAM ) affinitySlot . State . FullSubsegmentList . Flink		6502134	1					
ANR	6502462	CastTarget	WPARAM		6502134	0					
ANR	6502463	MemberAccess	affinitySlot . State . FullSubsegmentList . Flink		6502134	1					
ANR	6502464	MemberAccess	affinitySlot . State . FullSubsegmentList		6502134	0					
ANR	6502465	MemberAccess	affinitySlot . State		6502134	0					
ANR	6502466	Identifier	affinitySlot		6502134	0					
ANR	6502467	Identifier	State		6502134	1					
ANR	6502468	Identifier	FullSubsegmentList		6502134	1					
ANR	6502469	Identifier	Flink		6502134	1					
ANR	6502470	IfStatement	"if ( ! __lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next ) )"		6502134	12					
ANR	6502471	Condition	"! __lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next )"	593:6:18344:18418	6502134	0	True				
ANR	6502472	UnaryOperationExpression	"! __lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next )"		6502134	0					
ANR	6502473	UnaryOperator	!		6502134	0					
ANR	6502474	CallExpression	"__lfh_segment_loop ( h_proc , blocks , allocated , lfhKey , count , first , next )"		6502134	1					
ANR	6502475	Callee	__lfh_segment_loop		6502134	0					
ANR	6502476	Identifier	__lfh_segment_loop		6502134	0					
ANR	6502477	ArgumentList	h_proc		6502134	1					
ANR	6502478	Argument	h_proc		6502134	0					
ANR	6502479	Identifier	h_proc		6502134	0					
ANR	6502480	Argument	blocks		6502134	1					
ANR	6502481	Identifier	blocks		6502134	0					
ANR	6502482	Argument	allocated		6502134	2					
ANR	6502483	Identifier	allocated		6502134	0					
ANR	6502484	Argument	lfhKey		6502134	3					
ANR	6502485	Identifier	lfhKey		6502134	0					
ANR	6502486	Argument	count		6502134	4					
ANR	6502487	Identifier	count		6502134	0					
ANR	6502488	Argument	first		6502134	5					
ANR	6502489	Identifier	first		6502134	0					
ANR	6502490	Argument	next		6502134	6					
ANR	6502491	Identifier	next		6502134	0					
ANR	6502492	CompoundStatement		37:83:1698:1698	6502134	1					
ANR	6502493	ReturnStatement	return false ;	594:3:18426:18438	6502134	0	True				
ANR	6502494	Identifier	false		6502134	0					
ANR	6502495	IfStatement	if ( segheapHeader . LargeAllocMetadata . Root )		6502134	10					
ANR	6502496	Condition	segheapHeader . LargeAllocMetadata . Root	599:5:18470:18506	6502134	0	True				
ANR	6502497	MemberAccess	segheapHeader . LargeAllocMetadata . Root		6502134	0					
ANR	6502498	MemberAccess	segheapHeader . LargeAllocMetadata		6502134	0					
ANR	6502499	Identifier	segheapHeader		6502134	0					
ANR	6502500	Identifier	LargeAllocMetadata		6502134	1					
ANR	6502501	Identifier	Root		6502134	1					
ANR	6502502	CompoundStatement		46:2:1917:1980	6502134	1					
ANR	6502503	IdentifierDeclStatement	PRTL_BALANCED_NODE node = malloc ( sizeof ( RTL_BALANCED_NODE ) ) ;	600:2:18513:18574	6502134	0	True				
ANR	6502504	IdentifierDecl	node = malloc ( sizeof ( RTL_BALANCED_NODE ) )		6502134	0					
ANR	6502505	IdentifierDeclType	PRTL_BALANCED_NODE		6502134	0					
ANR	6502506	Identifier	node		6502134	1					
ANR	6502507	AssignmentExpression	node = malloc ( sizeof ( RTL_BALANCED_NODE ) )		6502134	2		=			
ANR	6502508	Identifier	node		6502134	0					
ANR	6502509	CallExpression	malloc ( sizeof ( RTL_BALANCED_NODE ) )		6502134	1					
ANR	6502510	Callee	malloc		6502134	0					
ANR	6502511	Identifier	malloc		6502134	0					
ANR	6502512	ArgumentList	sizeof ( RTL_BALANCED_NODE )		6502134	1					
ANR	6502513	Argument	sizeof ( RTL_BALANCED_NODE )		6502134	0					
ANR	6502514	SizeofExpression	sizeof ( RTL_BALANCED_NODE )		6502134	0					
ANR	6502515	Sizeof	sizeof		6502134	0					
ANR	6502516	SizeofOperand	RTL_BALANCED_NODE		6502134	1					
ANR	6502517	IdentifierDeclStatement	RStack * s = r_stack_new ( segheapHeader . LargeReservedPages ) ;	601:2:18578:18636	6502134	1	True				
ANR	6502518	IdentifierDecl	* s = r_stack_new ( segheapHeader . LargeReservedPages )		6502134	0					
ANR	6502519	IdentifierDeclType	RStack *		6502134	0					
ANR	6502520	Identifier	s		6502134	1					
ANR	6502521	AssignmentExpression	* s = r_stack_new ( segheapHeader . LargeReservedPages )		6502134	2		=			
ANR	6502522	Identifier	s		6502134	0					
ANR	6502523	CallExpression	r_stack_new ( segheapHeader . LargeReservedPages )		6502134	1					
ANR	6502524	Callee	r_stack_new		6502134	0					
ANR	6502525	Identifier	r_stack_new		6502134	0					
ANR	6502526	ArgumentList	segheapHeader . LargeReservedPages		6502134	1					
ANR	6502527	Argument	segheapHeader . LargeReservedPages		6502134	0					
ANR	6502528	MemberAccess	segheapHeader . LargeReservedPages		6502134	0					
ANR	6502529	Identifier	segheapHeader		6502134	0					
ANR	6502530	Identifier	LargeReservedPages		6502134	1					
ANR	6502531	IdentifierDeclStatement	PRTL_BALANCED_NODE curr = segheapHeader . LargeAllocMetadata . Root ;	602:2:18640:18703	6502134	2	True				
ANR	6502532	IdentifierDecl	curr = segheapHeader . LargeAllocMetadata . Root		6502134	0					
ANR	6502533	IdentifierDeclType	PRTL_BALANCED_NODE		6502134	0					
ANR	6502534	Identifier	curr		6502134	1					
ANR	6502535	AssignmentExpression	curr = segheapHeader . LargeAllocMetadata . Root		6502134	2		=			
ANR	6502536	Identifier	curr		6502134	0					
ANR	6502537	MemberAccess	segheapHeader . LargeAllocMetadata . Root		6502134	1					
ANR	6502538	MemberAccess	segheapHeader . LargeAllocMetadata		6502134	0					
ANR	6502539	Identifier	segheapHeader		6502134	0					
ANR	6502540	Identifier	LargeAllocMetadata		6502134	1					
ANR	6502541	Identifier	Root		6502134	1					
ANR	6502542	DoStatement	do		6502134	3					
ANR	6502543	CompoundStatement		60:3:2596:2651	6502134	0					
ANR	6502544	ExpressionStatement	GROW_PBLOCKS ( )	604:3:18748:18763	6502134	0	True				
ANR	6502545	CallExpression	GROW_PBLOCKS ( )		6502134	0					
ANR	6502546	Callee	GROW_PBLOCKS		6502134	0					
ANR	6502547	Identifier	GROW_PBLOCKS		6502134	0					
ANR	6502548	ArgumentList			6502134	1					
ANR	6502549	WhileStatement	while ( curr )		6502134	1					
ANR	6502550	Condition	curr	605:10:18775:18778	6502134	0	True				
ANR	6502551	Identifier	curr		6502134	0					
ANR	6502552	CompoundStatement		49:16:2058:2058	6502134	1					
ANR	6502553	ExpressionStatement	"r_stack_push ( s , curr )"	606:4:18787:18809	6502134	0	True				
ANR	6502554	CallExpression	"r_stack_push ( s , curr )"		6502134	0					
ANR	6502555	Callee	r_stack_push		6502134	0					
ANR	6502556	Identifier	r_stack_push		6502134	0					
ANR	6502557	ArgumentList	s		6502134	1					
ANR	6502558	Argument	s		6502134	0					
ANR	6502559	Identifier	s		6502134	0					
ANR	6502560	Argument	curr		6502134	1					
ANR	6502561	Identifier	curr		6502134	0					
ANR	6502562	ExpressionStatement	"ReadProcessMemory ( h_proc , curr , node , sizeof ( RTL_BALANCED_NODE ) , & bytesRead )"	607:4:18815:18893	6502134	1	True				
ANR	6502563	CallExpression	"ReadProcessMemory ( h_proc , curr , node , sizeof ( RTL_BALANCED_NODE ) , & bytesRead )"		6502134	0					
ANR	6502564	Callee	ReadProcessMemory		6502134	0					
ANR	6502565	Identifier	ReadProcessMemory		6502134	0					
ANR	6502566	ArgumentList	h_proc		6502134	1					
ANR	6502567	Argument	h_proc		6502134	0					
ANR	6502568	Identifier	h_proc		6502134	0					
ANR	6502569	Argument	curr		6502134	1					
ANR	6502570	Identifier	curr		6502134	0					
ANR	6502571	Argument	node		6502134	2					
ANR	6502572	Identifier	node		6502134	0					
ANR	6502573	Argument	sizeof ( RTL_BALANCED_NODE )		6502134	3					
ANR	6502574	SizeofExpression	sizeof ( RTL_BALANCED_NODE )		6502134	0					
ANR	6502575	Sizeof	sizeof		6502134	0					
ANR	6502576	SizeofOperand	RTL_BALANCED_NODE		6502134	1					
ANR	6502577	Argument	& bytesRead		6502134	4					
ANR	6502578	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502579	UnaryOperator	&		6502134	0					
ANR	6502580	Identifier	bytesRead		6502134	1					
ANR	6502581	ExpressionStatement	curr = node -> Left	608:4:18899:18916	6502134	2	True				
ANR	6502582	AssignmentExpression	curr = node -> Left		6502134	0		=			
ANR	6502583	Identifier	curr		6502134	0					
ANR	6502584	PtrMemberAccess	node -> Left		6502134	1					
ANR	6502585	Identifier	node		6502134	0					
ANR	6502586	Identifier	Left		6502134	1					
ANR	6502587	ExpressionStatement		609:4:18922:18922	6502134	2	True				
ANR	6502588	ExpressionStatement	curr = ( PRTL_BALANCED_NODE ) r_stack_pop ( s )	610:3:18927:18969	6502134	3	True				
ANR	6502589	AssignmentExpression	curr = ( PRTL_BALANCED_NODE ) r_stack_pop ( s )		6502134	0		=			
ANR	6502590	Identifier	curr		6502134	0					
ANR	6502591	CastExpression	( PRTL_BALANCED_NODE ) r_stack_pop ( s )		6502134	1					
ANR	6502592	CastTarget	PRTL_BALANCED_NODE		6502134	0					
ANR	6502593	CallExpression	r_stack_pop ( s )		6502134	1					
ANR	6502594	Callee	r_stack_pop		6502134	0					
ANR	6502595	Identifier	r_stack_pop		6502134	0					
ANR	6502596	ArgumentList	s		6502134	1					
ANR	6502597	Argument	s		6502134	0					
ANR	6502598	Identifier	s		6502134	0					
ANR	6502599	IdentifierDeclStatement	HEAP_LARGE_ALLOC_DATA entry ;	611:3:18974:19001	6502134	4	True				
ANR	6502600	IdentifierDecl	entry		6502134	0					
ANR	6502601	IdentifierDeclType	HEAP_LARGE_ALLOC_DATA		6502134	0					
ANR	6502602	Identifier	entry		6502134	1					
ANR	6502603	ExpressionStatement	"ReadProcessMemory ( h_proc , curr , & entry , sizeof ( HEAP_LARGE_ALLOC_DATA ) , & bytesRead )"	612:3:19006:19090	6502134	5	True				
ANR	6502604	CallExpression	"ReadProcessMemory ( h_proc , curr , & entry , sizeof ( HEAP_LARGE_ALLOC_DATA ) , & bytesRead )"		6502134	0					
ANR	6502605	Callee	ReadProcessMemory		6502134	0					
ANR	6502606	Identifier	ReadProcessMemory		6502134	0					
ANR	6502607	ArgumentList	h_proc		6502134	1					
ANR	6502608	Argument	h_proc		6502134	0					
ANR	6502609	Identifier	h_proc		6502134	0					
ANR	6502610	Argument	curr		6502134	1					
ANR	6502611	Identifier	curr		6502134	0					
ANR	6502612	Argument	& entry		6502134	2					
ANR	6502613	UnaryOperationExpression	& entry		6502134	0					
ANR	6502614	UnaryOperator	&		6502134	0					
ANR	6502615	Identifier	entry		6502134	1					
ANR	6502616	Argument	sizeof ( HEAP_LARGE_ALLOC_DATA )		6502134	3					
ANR	6502617	SizeofExpression	sizeof ( HEAP_LARGE_ALLOC_DATA )		6502134	0					
ANR	6502618	Sizeof	sizeof		6502134	0					
ANR	6502619	SizeofOperand	HEAP_LARGE_ALLOC_DATA		6502134	1					
ANR	6502620	Argument	& bytesRead		6502134	4					
ANR	6502621	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502622	UnaryOperator	&		6502134	0					
ANR	6502623	Identifier	bytesRead		6502134	1					
ANR	6502624	ExpressionStatement	( * blocks ) [ * count ] . address = entry . VirtualAddess - entry . UnusedBytes	613:3:19095:19162	6502134	6	True				
ANR	6502625	AssignmentExpression	( * blocks ) [ * count ] . address = entry . VirtualAddess - entry . UnusedBytes		6502134	0		=			
ANR	6502626	MemberAccess	( * blocks ) [ * count ] . address		6502134	0					
ANR	6502627	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502628	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502629	UnaryOperator	*		6502134	0					
ANR	6502630	Identifier	blocks		6502134	1					
ANR	6502631	UnaryOperationExpression	* count		6502134	1					
ANR	6502632	UnaryOperator	*		6502134	0					
ANR	6502633	Identifier	count		6502134	1					
ANR	6502634	Identifier	address		6502134	1					
ANR	6502635	AdditiveExpression	entry . VirtualAddess - entry . UnusedBytes		6502134	1		-			
ANR	6502636	MemberAccess	entry . VirtualAddess		6502134	0					
ANR	6502637	Identifier	entry		6502134	0					
ANR	6502638	Identifier	VirtualAddess		6502134	1					
ANR	6502639	MemberAccess	entry . UnusedBytes		6502134	1					
ANR	6502640	Identifier	entry		6502134	0					
ANR	6502641	Identifier	UnusedBytes		6502134	1					
ANR	6502642	ExpressionStatement	( * blocks ) [ * count ] . flags = 1 | SEGMENT_HEAP_BLOCK | LARGE_BLOCK	614:3:19186:19248	6502134	7	True				
ANR	6502643	AssignmentExpression	( * blocks ) [ * count ] . flags = 1 | SEGMENT_HEAP_BLOCK | LARGE_BLOCK		6502134	0		=			
ANR	6502644	MemberAccess	( * blocks ) [ * count ] . flags		6502134	0					
ANR	6502645	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502646	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502647	UnaryOperator	*		6502134	0					
ANR	6502648	Identifier	blocks		6502134	1					
ANR	6502649	UnaryOperationExpression	* count		6502134	1					
ANR	6502650	UnaryOperator	*		6502134	0					
ANR	6502651	Identifier	count		6502134	1					
ANR	6502652	Identifier	flags		6502134	1					
ANR	6502653	InclusiveOrExpression	1 | SEGMENT_HEAP_BLOCK | LARGE_BLOCK		6502134	1		|			
ANR	6502654	PrimaryExpression	1		6502134	0					
ANR	6502655	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | LARGE_BLOCK		6502134	1		|			
ANR	6502656	Identifier	SEGMENT_HEAP_BLOCK		6502134	0					
ANR	6502657	Identifier	LARGE_BLOCK		6502134	1					
ANR	6502658	ExpressionStatement	( * blocks ) [ * count ] . size = ( ( entry . AllocatedPages >> 12 ) << 12 )	615:3:19253:19314	6502134	8	True				
ANR	6502659	AssignmentExpression	( * blocks ) [ * count ] . size = ( ( entry . AllocatedPages >> 12 ) << 12 )		6502134	0		=			
ANR	6502660	MemberAccess	( * blocks ) [ * count ] . size		6502134	0					
ANR	6502661	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502662	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502663	UnaryOperator	*		6502134	0					
ANR	6502664	Identifier	blocks		6502134	1					
ANR	6502665	UnaryOperationExpression	* count		6502134	1					
ANR	6502666	UnaryOperator	*		6502134	0					
ANR	6502667	Identifier	count		6502134	1					
ANR	6502668	Identifier	size		6502134	1					
ANR	6502669	ShiftExpression	( entry . AllocatedPages >> 12 ) << 12		6502134	1		<<			
ANR	6502670	ShiftExpression	entry . AllocatedPages >> 12		6502134	0		>>			
ANR	6502671	MemberAccess	entry . AllocatedPages		6502134	0					
ANR	6502672	Identifier	entry		6502134	0					
ANR	6502673	Identifier	AllocatedPages		6502134	1					
ANR	6502674	PrimaryExpression	12		6502134	1					
ANR	6502675	PrimaryExpression	12		6502134	1					
ANR	6502676	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	616:3:19319:19374	6502134	9	True				
ANR	6502677	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6502134	0					
ANR	6502678	IdentifierDeclType	PHeapBlockExtraInfo		6502134	0					
ANR	6502679	Identifier	extra		6502134	1					
ANR	6502680	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6502134	2		=			
ANR	6502681	Identifier	extra		6502134	0					
ANR	6502682	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6502134	1					
ANR	6502683	Callee	R_NEW0		6502134	0					
ANR	6502684	Identifier	R_NEW0		6502134	0					
ANR	6502685	ArgumentList	HeapBlockExtraInfo		6502134	1					
ANR	6502686	Argument	HeapBlockExtraInfo		6502134	0					
ANR	6502687	Identifier	HeapBlockExtraInfo		6502134	0					
ANR	6502688	IfStatement	if ( ! extra )		6502134	10					
ANR	6502689	Condition	! extra	617:7:19383:19388	6502134	0	True				
ANR	6502690	UnaryOperationExpression	! extra		6502134	0					
ANR	6502691	UnaryOperator	!		6502134	0					
ANR	6502692	Identifier	extra		6502134	1					
ANR	6502693	CompoundStatement		61:15:2668:2668	6502134	1					
ANR	6502694	ReturnStatement	return false ;	618:4:19397:19409	6502134	0	True				
ANR	6502695	Identifier	false		6502134	0					
ANR	6502696	ExpressionStatement	extra -> unusedBytes = entry . UnusedBytes	620:3:19419:19457	6502134	11	True				
ANR	6502697	AssignmentExpression	extra -> unusedBytes = entry . UnusedBytes		6502134	0		=			
ANR	6502698	PtrMemberAccess	extra -> unusedBytes		6502134	0					
ANR	6502699	Identifier	extra		6502134	0					
ANR	6502700	Identifier	unusedBytes		6502134	1					
ANR	6502701	MemberAccess	entry . UnusedBytes		6502134	1					
ANR	6502702	Identifier	entry		6502134	0					
ANR	6502703	Identifier	UnusedBytes		6502134	1					
ANR	6502704	ExpressionStatement	"ReadProcessMemory ( h_proc , ( void * ) ( * blocks ) [ * count ] . address , & extra -> granularity , sizeof ( USHORT ) , & bytesRead )"	621:3:19462:19573	6502134	12	True				
ANR	6502705	CallExpression	"ReadProcessMemory ( h_proc , ( void * ) ( * blocks ) [ * count ] . address , & extra -> granularity , sizeof ( USHORT ) , & bytesRead )"		6502134	0					
ANR	6502706	Callee	ReadProcessMemory		6502134	0					
ANR	6502707	Identifier	ReadProcessMemory		6502134	0					
ANR	6502708	ArgumentList	h_proc		6502134	1					
ANR	6502709	Argument	h_proc		6502134	0					
ANR	6502710	Identifier	h_proc		6502134	0					
ANR	6502711	Argument	( void * ) ( * blocks ) [ * count ] . address		6502134	1					
ANR	6502712	CastExpression	( void * ) ( * blocks ) [ * count ] . address		6502134	0					
ANR	6502713	CastTarget	void *		6502134	0					
ANR	6502714	MemberAccess	( * blocks ) [ * count ] . address		6502134	1					
ANR	6502715	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502716	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502717	UnaryOperator	*		6502134	0					
ANR	6502718	Identifier	blocks		6502134	1					
ANR	6502719	UnaryOperationExpression	* count		6502134	1					
ANR	6502720	UnaryOperator	*		6502134	0					
ANR	6502721	Identifier	count		6502134	1					
ANR	6502722	Identifier	address		6502134	1					
ANR	6502723	Argument	& extra -> granularity		6502134	2					
ANR	6502724	UnaryOperationExpression	& extra -> granularity		6502134	0					
ANR	6502725	UnaryOperator	&		6502134	0					
ANR	6502726	PtrMemberAccess	extra -> granularity		6502134	1					
ANR	6502727	Identifier	extra		6502134	0					
ANR	6502728	Identifier	granularity		6502134	1					
ANR	6502729	Argument	sizeof ( USHORT )		6502134	3					
ANR	6502730	SizeofExpression	sizeof ( USHORT )		6502134	0					
ANR	6502731	Sizeof	sizeof		6502134	0					
ANR	6502732	SizeofOperand	USHORT		6502134	1					
ANR	6502733	Argument	& bytesRead		6502134	4					
ANR	6502734	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502735	UnaryOperator	&		6502134	0					
ANR	6502736	Identifier	bytesRead		6502134	1					
ANR	6502737	ExpressionStatement	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	622:3:19578:19630	6502134	13	True				
ANR	6502738	AssignmentExpression	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6502134	0		=			
ANR	6502739	MemberAccess	( * blocks ) [ * count ] . extra		6502134	0					
ANR	6502740	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502741	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502742	UnaryOperator	*		6502134	0					
ANR	6502743	Identifier	blocks		6502134	1					
ANR	6502744	UnaryOperationExpression	* count		6502134	1					
ANR	6502745	UnaryOperator	*		6502134	0					
ANR	6502746	Identifier	count		6502134	1					
ANR	6502747	Identifier	extra		6502134	1					
ANR	6502748	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6502134	1		|			
ANR	6502749	Identifier	EXTRA_FLAG		6502134	0					
ANR	6502750	CastExpression	( WPARAM ) extra		6502134	1					
ANR	6502751	CastTarget	WPARAM		6502134	0					
ANR	6502752	Identifier	extra		6502134	1					
ANR	6502753	ExpressionStatement	curr = entry . TreeNode . Right	623:3:19635:19662	6502134	14	True				
ANR	6502754	AssignmentExpression	curr = entry . TreeNode . Right		6502134	0		=			
ANR	6502755	Identifier	curr		6502134	0					
ANR	6502756	MemberAccess	entry . TreeNode . Right		6502134	1					
ANR	6502757	MemberAccess	entry . TreeNode		6502134	0					
ANR	6502758	Identifier	entry		6502134	0					
ANR	6502759	Identifier	TreeNode		6502134	1					
ANR	6502760	Identifier	Right		6502134	1					
ANR	6502761	ExpressionStatement	* count += 1	624:3:19667:19678	6502134	15	True				
ANR	6502762	AssignmentExpression	* count += 1		6502134	0		+=			
ANR	6502763	UnaryOperationExpression	* count		6502134	0					
ANR	6502764	UnaryOperator	*		6502134	0					
ANR	6502765	Identifier	count		6502134	1					
ANR	6502766	PrimaryExpression	1		6502134	1					
ANR	6502767	Condition	curr || ! r_stack_is_empty ( s )	625:11:19691:19719	6502134	1	True				
ANR	6502768	OrExpression	curr || ! r_stack_is_empty ( s )		6502134	0		||			
ANR	6502769	Identifier	curr		6502134	0					
ANR	6502770	UnaryOperationExpression	! r_stack_is_empty ( s )		6502134	1					
ANR	6502771	UnaryOperator	!		6502134	0					
ANR	6502772	CallExpression	r_stack_is_empty ( s )		6502134	1					
ANR	6502773	Callee	r_stack_is_empty		6502134	0					
ANR	6502774	Identifier	r_stack_is_empty		6502134	0					
ANR	6502775	ArgumentList	s		6502134	1					
ANR	6502776	Argument	s		6502134	0					
ANR	6502777	Identifier	s		6502134	0					
ANR	6502778	ExpressionStatement	r_stack_free ( s )	626:2:19725:19741	6502134	4	True				
ANR	6502779	CallExpression	r_stack_free ( s )		6502134	0					
ANR	6502780	Callee	r_stack_free		6502134	0					
ANR	6502781	Identifier	r_stack_free		6502134	0					
ANR	6502782	ArgumentList	s		6502134	1					
ANR	6502783	Argument	s		6502134	0					
ANR	6502784	Identifier	s		6502134	0					
ANR	6502785	ExpressionStatement	free ( node )	627:2:19745:19756	6502134	5	True				
ANR	6502786	CallExpression	free ( node )		6502134	0					
ANR	6502787	Callee	free		6502134	0					
ANR	6502788	Identifier	free		6502134	0					
ANR	6502789	ArgumentList	node		6502134	1					
ANR	6502790	Argument	node		6502134	0					
ANR	6502791	Identifier	node		6502134	0					
ANR	6502792	IdentifierDeclStatement	WPARAM RtlpHpHeapGlobal ;	630:1:19763:19786	6502134	11	True				
ANR	6502793	IdentifierDecl	RtlpHpHeapGlobal		6502134	0					
ANR	6502794	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502795	Identifier	RtlpHpHeapGlobal		6502134	1					
ANR	6502796	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) RtlpHpHeapGlobalsOffset , & RtlpHpHeapGlobal , sizeof ( WPARAM ) , & bytesRead )"	631:1:19789:19895	6502134	12	True				
ANR	6502797	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) RtlpHpHeapGlobalsOffset , & RtlpHpHeapGlobal , sizeof ( WPARAM ) , & bytesRead )"		6502134	0					
ANR	6502798	Callee	ReadProcessMemory		6502134	0					
ANR	6502799	Identifier	ReadProcessMemory		6502134	0					
ANR	6502800	ArgumentList	h_proc		6502134	1					
ANR	6502801	Argument	h_proc		6502134	0					
ANR	6502802	Identifier	h_proc		6502134	0					
ANR	6502803	Argument	( PVOID ) RtlpHpHeapGlobalsOffset		6502134	1					
ANR	6502804	CastExpression	( PVOID ) RtlpHpHeapGlobalsOffset		6502134	0					
ANR	6502805	CastTarget	PVOID		6502134	0					
ANR	6502806	Identifier	RtlpHpHeapGlobalsOffset		6502134	1					
ANR	6502807	Argument	& RtlpHpHeapGlobal		6502134	2					
ANR	6502808	UnaryOperationExpression	& RtlpHpHeapGlobal		6502134	0					
ANR	6502809	UnaryOperator	&		6502134	0					
ANR	6502810	Identifier	RtlpHpHeapGlobal		6502134	1					
ANR	6502811	Argument	sizeof ( WPARAM )		6502134	3					
ANR	6502812	SizeofExpression	sizeof ( WPARAM )		6502134	0					
ANR	6502813	Sizeof	sizeof		6502134	0					
ANR	6502814	SizeofOperand	WPARAM		6502134	1					
ANR	6502815	Argument	& bytesRead		6502134	4					
ANR	6502816	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502817	UnaryOperator	&		6502134	0					
ANR	6502818	Identifier	bytesRead		6502134	1					
ANR	6502819	ForStatement	for ( int i = 0 ; i < 2 ; i ++ )		6502134	13					
ANR	6502820	ForInit	int i = 0 ;	633:6:19931:19940	6502134	0	True				
ANR	6502821	IdentifierDeclStatement	int i = 0 ;		6502134	0					
ANR	6502822	IdentifierDecl	i = 0		6502134	0					
ANR	6502823	IdentifierDeclType	int		6502134	0					
ANR	6502824	Identifier	i		6502134	1					
ANR	6502825	AssignmentExpression	i = 0		6502134	2		=			
ANR	6502826	Identifier	i		6502134	0					
ANR	6502827	PrimaryExpression	0		6502134	1					
ANR	6502828	Condition	i < 2	633:17:19942:19946	6502134	1	True				
ANR	6502829	RelationalExpression	i < 2		6502134	0		<			
ANR	6502830	Identifier	i		6502134	0					
ANR	6502831	PrimaryExpression	2		6502134	1					
ANR	6502832	PostIncDecOperationExpression	i ++	633:24:19949:19951	6502134	2	True				
ANR	6502833	Identifier	i		6502134	0					
ANR	6502834	IncDec	++		6502134	1					
ANR	6502835	CompoundStatement		81:2:3484:3542	6502134	3					
ANR	6502836	IdentifierDeclStatement	HEAP_SEG_CONTEXT ctx = segheapHeader . SegContexts [ i ] ;	634:2:19958:20009	6502134	0	True				
ANR	6502837	IdentifierDecl	ctx = segheapHeader . SegContexts [ i ]		6502134	0					
ANR	6502838	IdentifierDeclType	HEAP_SEG_CONTEXT		6502134	0					
ANR	6502839	Identifier	ctx		6502134	1					
ANR	6502840	AssignmentExpression	ctx = segheapHeader . SegContexts [ i ]		6502134	2		=			
ANR	6502841	Identifier	ctx		6502134	0					
ANR	6502842	ArrayIndexing	segheapHeader . SegContexts [ i ]		6502134	1					
ANR	6502843	MemberAccess	segheapHeader . SegContexts		6502134	0					
ANR	6502844	Identifier	segheapHeader		6502134	0					
ANR	6502845	Identifier	SegContexts		6502134	1					
ANR	6502846	Identifier	i		6502134	1					
ANR	6502847	IdentifierDeclStatement	"WPARAM ctxFirstEntry = ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) + sizeof ( HEAP_SEG_CONTEXT ) * i + offsetof ( HEAP_SEG_CONTEXT , SegmentListHead ) ;"	635:2:20013:20170	6502134	1	True				
ANR	6502848	IdentifierDecl	"ctxFirstEntry = ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) + sizeof ( HEAP_SEG_CONTEXT ) * i + offsetof ( HEAP_SEG_CONTEXT , SegmentListHead )"		6502134	0					
ANR	6502849	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502850	Identifier	ctxFirstEntry		6502134	1					
ANR	6502851	AssignmentExpression	"ctxFirstEntry = ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) + sizeof ( HEAP_SEG_CONTEXT ) * i + offsetof ( HEAP_SEG_CONTEXT , SegmentListHead )"		6502134	2		=			
ANR	6502852	Identifier	ctxFirstEntry		6502134	0					
ANR	6502853	AdditiveExpression	"( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) + sizeof ( HEAP_SEG_CONTEXT ) * i + offsetof ( HEAP_SEG_CONTEXT , SegmentListHead )"		6502134	1		+			
ANR	6502854	CastExpression	( WPARAM ) heapBase		6502134	0					
ANR	6502855	CastTarget	WPARAM		6502134	0					
ANR	6502856	Identifier	heapBase		6502134	1					
ANR	6502857	AdditiveExpression	"offsetof ( SEGMENT_HEAP , SegContexts ) + sizeof ( HEAP_SEG_CONTEXT ) * i + offsetof ( HEAP_SEG_CONTEXT , SegmentListHead )"		6502134	1		+			
ANR	6502858	CallExpression	"offsetof ( SEGMENT_HEAP , SegContexts )"		6502134	0					
ANR	6502859	Callee	offsetof		6502134	0					
ANR	6502860	Identifier	offsetof		6502134	0					
ANR	6502861	ArgumentList	SEGMENT_HEAP		6502134	1					
ANR	6502862	Argument	SEGMENT_HEAP		6502134	0					
ANR	6502863	Identifier	SEGMENT_HEAP		6502134	0					
ANR	6502864	Argument	SegContexts		6502134	1					
ANR	6502865	Identifier	SegContexts		6502134	0					
ANR	6502866	AdditiveExpression	"sizeof ( HEAP_SEG_CONTEXT ) * i + offsetof ( HEAP_SEG_CONTEXT , SegmentListHead )"		6502134	1		+			
ANR	6502867	MultiplicativeExpression	sizeof ( HEAP_SEG_CONTEXT ) * i		6502134	0		*			
ANR	6502868	SizeofExpression	sizeof ( HEAP_SEG_CONTEXT )		6502134	0					
ANR	6502869	Sizeof	sizeof		6502134	0					
ANR	6502870	SizeofOperand	HEAP_SEG_CONTEXT		6502134	1					
ANR	6502871	Identifier	i		6502134	1					
ANR	6502872	CallExpression	"offsetof ( HEAP_SEG_CONTEXT , SegmentListHead )"		6502134	1					
ANR	6502873	Callee	offsetof		6502134	0					
ANR	6502874	Identifier	offsetof		6502134	0					
ANR	6502875	ArgumentList	HEAP_SEG_CONTEXT		6502134	1					
ANR	6502876	Argument	HEAP_SEG_CONTEXT		6502134	0					
ANR	6502877	Identifier	HEAP_SEG_CONTEXT		6502134	0					
ANR	6502878	Argument	SegmentListHead		6502134	1					
ANR	6502879	Identifier	SegmentListHead		6502134	0					
ANR	6502880	IdentifierDeclStatement	HEAP_PAGE_SEGMENT pageSegment ;	636:2:20174:20203	6502134	2	True				
ANR	6502881	IdentifierDecl	pageSegment		6502134	0					
ANR	6502882	IdentifierDeclType	HEAP_PAGE_SEGMENT		6502134	0					
ANR	6502883	Identifier	pageSegment		6502134	1					
ANR	6502884	IdentifierDeclStatement	WPARAM currPageSegment = ( WPARAM ) ctx . SegmentListHead . Flink ;	637:2:20207:20265	6502134	3	True				
ANR	6502885	IdentifierDecl	currPageSegment = ( WPARAM ) ctx . SegmentListHead . Flink		6502134	0					
ANR	6502886	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502887	Identifier	currPageSegment		6502134	1					
ANR	6502888	AssignmentExpression	currPageSegment = ( WPARAM ) ctx . SegmentListHead . Flink		6502134	2		=			
ANR	6502889	Identifier	currPageSegment		6502134	0					
ANR	6502890	CastExpression	( WPARAM ) ctx . SegmentListHead . Flink		6502134	1					
ANR	6502891	CastTarget	WPARAM		6502134	0					
ANR	6502892	MemberAccess	ctx . SegmentListHead . Flink		6502134	1					
ANR	6502893	MemberAccess	ctx . SegmentListHead		6502134	0					
ANR	6502894	Identifier	ctx		6502134	0					
ANR	6502895	Identifier	SegmentListHead		6502134	1					
ANR	6502896	Identifier	Flink		6502134	1					
ANR	6502897	DoStatement	do		6502134	4					
ANR	6502898	CompoundStatement		82:5:3549:3549	6502134	0					
ANR	6502899	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) currPageSegment , & pageSegment , sizeof ( HEAP_PAGE_SEGMENT ) , & bytesRead ) )"		6502134	0					
ANR	6502900	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) currPageSegment , & pageSegment , sizeof ( HEAP_PAGE_SEGMENT ) , & bytesRead )"	639:7:20281:20385	6502134	0	True				
ANR	6502901	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) currPageSegment , & pageSegment , sizeof ( HEAP_PAGE_SEGMENT ) , & bytesRead )"		6502134	0					
ANR	6502902	UnaryOperator	!		6502134	0					
ANR	6502903	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) currPageSegment , & pageSegment , sizeof ( HEAP_PAGE_SEGMENT ) , & bytesRead )"		6502134	1					
ANR	6502904	Callee	ReadProcessMemory		6502134	0					
ANR	6502905	Identifier	ReadProcessMemory		6502134	0					
ANR	6502906	ArgumentList	h_proc		6502134	1					
ANR	6502907	Argument	h_proc		6502134	0					
ANR	6502908	Identifier	h_proc		6502134	0					
ANR	6502909	Argument	( PVOID ) currPageSegment		6502134	1					
ANR	6502910	CastExpression	( PVOID ) currPageSegment		6502134	0					
ANR	6502911	CastTarget	PVOID		6502134	0					
ANR	6502912	Identifier	currPageSegment		6502134	1					
ANR	6502913	Argument	& pageSegment		6502134	2					
ANR	6502914	UnaryOperationExpression	& pageSegment		6502134	0					
ANR	6502915	UnaryOperator	&		6502134	0					
ANR	6502916	Identifier	pageSegment		6502134	1					
ANR	6502917	Argument	sizeof ( HEAP_PAGE_SEGMENT )		6502134	3					
ANR	6502918	SizeofExpression	sizeof ( HEAP_PAGE_SEGMENT )		6502134	0					
ANR	6502919	Sizeof	sizeof		6502134	0					
ANR	6502920	SizeofOperand	HEAP_PAGE_SEGMENT		6502134	1					
ANR	6502921	Argument	& bytesRead		6502134	4					
ANR	6502922	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6502923	UnaryOperator	&		6502134	0					
ANR	6502924	Identifier	bytesRead		6502134	1					
ANR	6502925	CompoundStatement		83:114:3665:3665	6502134	1					
ANR	6502926	BreakStatement	break ;	640:4:20394:20399	6502134	0	True				
ANR	6502927	ForStatement	for ( WPARAM j = 2 ; j < 256 ; j ++ )		6502134	1					
ANR	6502928	ForInit	WPARAM j = 2 ;	642:8:20414:20426	6502134	0	True				
ANR	6502929	IdentifierDeclStatement	WPARAM j = 2 ;		6502134	0					
ANR	6502930	IdentifierDecl	j = 2		6502134	0					
ANR	6502931	IdentifierDeclType	WPARAM		6502134	0					
ANR	6502932	Identifier	j		6502134	1					
ANR	6502933	AssignmentExpression	j = 2		6502134	2		=			
ANR	6502934	Identifier	j		6502134	0					
ANR	6502935	PrimaryExpression	2		6502134	1					
ANR	6502936	Condition	j < 256	642:22:20428:20434	6502134	1	True				
ANR	6502937	RelationalExpression	j < 256		6502134	0		<			
ANR	6502938	Identifier	j		6502134	0					
ANR	6502939	PrimaryExpression	256		6502134	1					
ANR	6502940	PostIncDecOperationExpression	j ++	642:31:20437:20439	6502134	2	True				
ANR	6502941	Identifier	j		6502134	0					
ANR	6502942	IncDec	++		6502134	1					
ANR	6502943	CompoundStatement		86:36:3719:3719	6502134	3					
ANR	6502944	IfStatement	if ( ( pageSegment . DescArray [ j ] . RangeFlags & ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED ) ) == ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED ) )		6502134	0					
ANR	6502945	Condition	( pageSegment . DescArray [ j ] . RangeFlags & ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED ) ) == ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED )	643:8:20452:20611	6502134	0	True				
ANR	6502946	EqualityExpression	( pageSegment . DescArray [ j ] . RangeFlags & ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED ) ) == ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED )		6502134	0		==			
ANR	6502947	BitAndExpression	pageSegment . DescArray [ j ] . RangeFlags & ( PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED )		6502134	0		&			
ANR	6502948	MemberAccess	pageSegment . DescArray [ j ] . RangeFlags		6502134	0					
ANR	6502949	ArrayIndexing	pageSegment . DescArray [ j ]		6502134	0					
ANR	6502950	MemberAccess	pageSegment . DescArray		6502134	0					
ANR	6502951	Identifier	pageSegment		6502134	0					
ANR	6502952	Identifier	DescArray		6502134	1					
ANR	6502953	Identifier	j		6502134	1					
ANR	6502954	Identifier	RangeFlags		6502134	1					
ANR	6502955	InclusiveOrExpression	PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED		6502134	1		|			
ANR	6502956	Identifier	PAGE_RANGE_FLAGS_FIRST		6502134	0					
ANR	6502957	Identifier	PAGE_RANGE_FLAGS_ALLOCATED		6502134	1					
ANR	6502958	InclusiveOrExpression	PAGE_RANGE_FLAGS_FIRST | PAGE_RANGE_FLAGS_ALLOCATED		6502134	1		|			
ANR	6502959	Identifier	PAGE_RANGE_FLAGS_FIRST		6502134	0					
ANR	6502960	Identifier	PAGE_RANGE_FLAGS_ALLOCATED		6502134	1					
ANR	6502961	CompoundStatement		94:5:4136:4191	6502134	1					
ANR	6502962	ExpressionStatement	GROW_PBLOCKS ( )	646:5:20621:20636	6502134	0	True				
ANR	6502963	CallExpression	GROW_PBLOCKS ( )		6502134	0					
ANR	6502964	Callee	GROW_PBLOCKS		6502134	0					
ANR	6502965	Identifier	GROW_PBLOCKS		6502134	0					
ANR	6502966	ArgumentList			6502134	1					
ANR	6502967	ExpressionStatement	( * blocks ) [ * count ] . address = currPageSegment + j * 0x1000	647:5:20643:20699	6502134	1	True				
ANR	6502968	AssignmentExpression	( * blocks ) [ * count ] . address = currPageSegment + j * 0x1000		6502134	0		=			
ANR	6502969	MemberAccess	( * blocks ) [ * count ] . address		6502134	0					
ANR	6502970	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502971	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502972	UnaryOperator	*		6502134	0					
ANR	6502973	Identifier	blocks		6502134	1					
ANR	6502974	UnaryOperationExpression	* count		6502134	1					
ANR	6502975	UnaryOperator	*		6502134	0					
ANR	6502976	Identifier	count		6502134	1					
ANR	6502977	Identifier	address		6502134	1					
ANR	6502978	AdditiveExpression	currPageSegment + j * 0x1000		6502134	1		+			
ANR	6502979	Identifier	currPageSegment		6502134	0					
ANR	6502980	MultiplicativeExpression	j * 0x1000		6502134	1		*			
ANR	6502981	Identifier	j		6502134	0					
ANR	6502982	PrimaryExpression	0x1000		6502134	1					
ANR	6502983	ExpressionStatement	( * blocks ) [ * count ] . size = ( WPARAM ) pageSegment . DescArray [ j ] . UnitSize * 0x1000	648:5:20706:20781	6502134	2	True				
ANR	6502984	AssignmentExpression	( * blocks ) [ * count ] . size = ( WPARAM ) pageSegment . DescArray [ j ] . UnitSize * 0x1000		6502134	0		=			
ANR	6502985	MemberAccess	( * blocks ) [ * count ] . size		6502134	0					
ANR	6502986	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6502987	UnaryOperationExpression	* blocks		6502134	0					
ANR	6502988	UnaryOperator	*		6502134	0					
ANR	6502989	Identifier	blocks		6502134	1					
ANR	6502990	UnaryOperationExpression	* count		6502134	1					
ANR	6502991	UnaryOperator	*		6502134	0					
ANR	6502992	Identifier	count		6502134	1					
ANR	6502993	Identifier	size		6502134	1					
ANR	6502994	MultiplicativeExpression	( WPARAM ) pageSegment . DescArray [ j ] . UnitSize * 0x1000		6502134	1		*			
ANR	6502995	CastExpression	( WPARAM ) pageSegment . DescArray [ j ] . UnitSize		6502134	0					
ANR	6502996	CastTarget	WPARAM		6502134	0					
ANR	6502997	MemberAccess	pageSegment . DescArray [ j ] . UnitSize		6502134	1					
ANR	6502998	ArrayIndexing	pageSegment . DescArray [ j ]		6502134	0					
ANR	6502999	MemberAccess	pageSegment . DescArray		6502134	0					
ANR	6503000	Identifier	pageSegment		6502134	0					
ANR	6503001	Identifier	DescArray		6502134	1					
ANR	6503002	Identifier	j		6502134	1					
ANR	6503003	Identifier	UnitSize		6502134	1					
ANR	6503004	PrimaryExpression	0x1000		6502134	1					
ANR	6503005	ExpressionStatement	( * blocks ) [ * count ] . flags = SEGMENT_HEAP_BLOCK | BACKEND_BLOCK | 1	649:5:20788:20852	6502134	3	True				
ANR	6503006	AssignmentExpression	( * blocks ) [ * count ] . flags = SEGMENT_HEAP_BLOCK | BACKEND_BLOCK | 1		6502134	0		=			
ANR	6503007	MemberAccess	( * blocks ) [ * count ] . flags		6502134	0					
ANR	6503008	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6503009	UnaryOperationExpression	* blocks		6502134	0					
ANR	6503010	UnaryOperator	*		6502134	0					
ANR	6503011	Identifier	blocks		6502134	1					
ANR	6503012	UnaryOperationExpression	* count		6502134	1					
ANR	6503013	UnaryOperator	*		6502134	0					
ANR	6503014	Identifier	count		6502134	1					
ANR	6503015	Identifier	flags		6502134	1					
ANR	6503016	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | BACKEND_BLOCK | 1		6502134	1		|			
ANR	6503017	Identifier	SEGMENT_HEAP_BLOCK		6502134	0					
ANR	6503018	InclusiveOrExpression	BACKEND_BLOCK | 1		6502134	1		|			
ANR	6503019	Identifier	BACKEND_BLOCK		6502134	0					
ANR	6503020	PrimaryExpression	1		6502134	1					
ANR	6503021	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	650:5:20859:20914	6502134	4	True				
ANR	6503022	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6502134	0					
ANR	6503023	IdentifierDeclType	PHeapBlockExtraInfo		6502134	0					
ANR	6503024	Identifier	extra		6502134	1					
ANR	6503025	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6502134	2		=			
ANR	6503026	Identifier	extra		6502134	0					
ANR	6503027	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6502134	1					
ANR	6503028	Callee	R_NEW0		6502134	0					
ANR	6503029	Identifier	R_NEW0		6502134	0					
ANR	6503030	ArgumentList	HeapBlockExtraInfo		6502134	1					
ANR	6503031	Argument	HeapBlockExtraInfo		6502134	0					
ANR	6503032	Identifier	HeapBlockExtraInfo		6502134	0					
ANR	6503033	IfStatement	if ( ! extra )		6502134	5					
ANR	6503034	Condition	! extra	651:9:20925:20930	6502134	0	True				
ANR	6503035	UnaryOperationExpression	! extra		6502134	0					
ANR	6503036	UnaryOperator	!		6502134	0					
ANR	6503037	Identifier	extra		6502134	1					
ANR	6503038	CompoundStatement		95:17:4210:4210	6502134	1					
ANR	6503039	ReturnStatement	return false ;	652:6:20941:20953	6502134	0	True				
ANR	6503040	Identifier	false		6502134	0					
ANR	6503041	ExpressionStatement	extra -> segment = currPageSegment	654:5:20967:20999	6502134	6	True				
ANR	6503042	AssignmentExpression	extra -> segment = currPageSegment		6502134	0		=			
ANR	6503043	PtrMemberAccess	extra -> segment		6502134	0					
ANR	6503044	Identifier	extra		6502134	0					
ANR	6503045	Identifier	segment		6502134	1					
ANR	6503046	Identifier	currPageSegment		6502134	1					
ANR	6503047	ExpressionStatement	extra -> unusedBytes = pageSegment . DescArray [ j ] . UnusedBytes	655:5:21006:21063	6502134	7	True				
ANR	6503048	AssignmentExpression	extra -> unusedBytes = pageSegment . DescArray [ j ] . UnusedBytes		6502134	0		=			
ANR	6503049	PtrMemberAccess	extra -> unusedBytes		6502134	0					
ANR	6503050	Identifier	extra		6502134	0					
ANR	6503051	Identifier	unusedBytes		6502134	1					
ANR	6503052	MemberAccess	pageSegment . DescArray [ j ] . UnusedBytes		6502134	1					
ANR	6503053	ArrayIndexing	pageSegment . DescArray [ j ]		6502134	0					
ANR	6503054	MemberAccess	pageSegment . DescArray		6502134	0					
ANR	6503055	Identifier	pageSegment		6502134	0					
ANR	6503056	Identifier	DescArray		6502134	1					
ANR	6503057	Identifier	j		6502134	1					
ANR	6503058	Identifier	UnusedBytes		6502134	1					
ANR	6503059	ExpressionStatement	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	656:5:21070:21122	6502134	8	True				
ANR	6503060	AssignmentExpression	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6502134	0		=			
ANR	6503061	MemberAccess	( * blocks ) [ * count ] . extra		6502134	0					
ANR	6503062	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6503063	UnaryOperationExpression	* blocks		6502134	0					
ANR	6503064	UnaryOperator	*		6502134	0					
ANR	6503065	Identifier	blocks		6502134	1					
ANR	6503066	UnaryOperationExpression	* count		6502134	1					
ANR	6503067	UnaryOperator	*		6502134	0					
ANR	6503068	Identifier	count		6502134	1					
ANR	6503069	Identifier	extra		6502134	1					
ANR	6503070	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6502134	1		|			
ANR	6503071	Identifier	EXTRA_FLAG		6502134	0					
ANR	6503072	CastExpression	( WPARAM ) extra		6502134	1					
ANR	6503073	CastTarget	WPARAM		6502134	0					
ANR	6503074	Identifier	extra		6502134	1					
ANR	6503075	ExpressionStatement	* count += 1	657:5:21129:21140	6502134	9	True				
ANR	6503076	AssignmentExpression	* count += 1		6502134	0		+=			
ANR	6503077	UnaryOperationExpression	* count		6502134	0					
ANR	6503078	UnaryOperator	*		6502134	0					
ANR	6503079	Identifier	count		6502134	1					
ANR	6503080	PrimaryExpression	1		6502134	1					
ANR	6503081	IfStatement	if ( pageSegment . DescArray [ j ] . RangeFlags & 0xF && pageSegment . DescArray [ j ] . UnusedBytes == 0x1000 )		6502134	1					
ANR	6503082	Condition	pageSegment . DescArray [ j ] . RangeFlags & 0xF && pageSegment . DescArray [ j ] . UnusedBytes == 0x1000	660:8:21221:21311	6502134	0	True				
ANR	6503083	AndExpression	pageSegment . DescArray [ j ] . RangeFlags & 0xF && pageSegment . DescArray [ j ] . UnusedBytes == 0x1000		6502134	0		&&			
ANR	6503084	BitAndExpression	pageSegment . DescArray [ j ] . RangeFlags & 0xF		6502134	0		&			
ANR	6503085	MemberAccess	pageSegment . DescArray [ j ] . RangeFlags		6502134	0					
ANR	6503086	ArrayIndexing	pageSegment . DescArray [ j ]		6502134	0					
ANR	6503087	MemberAccess	pageSegment . DescArray		6502134	0					
ANR	6503088	Identifier	pageSegment		6502134	0					
ANR	6503089	Identifier	DescArray		6502134	1					
ANR	6503090	Identifier	j		6502134	1					
ANR	6503091	Identifier	RangeFlags		6502134	1					
ANR	6503092	PrimaryExpression	0xF		6502134	1					
ANR	6503093	EqualityExpression	pageSegment . DescArray [ j ] . UnusedBytes == 0x1000		6502134	1		==			
ANR	6503094	MemberAccess	pageSegment . DescArray [ j ] . UnusedBytes		6502134	0					
ANR	6503095	ArrayIndexing	pageSegment . DescArray [ j ]		6502134	0					
ANR	6503096	MemberAccess	pageSegment . DescArray		6502134	0					
ANR	6503097	Identifier	pageSegment		6502134	0					
ANR	6503098	Identifier	DescArray		6502134	1					
ANR	6503099	Identifier	j		6502134	1					
ANR	6503100	Identifier	UnusedBytes		6502134	1					
ANR	6503101	PrimaryExpression	0x1000		6502134	1					
ANR	6503102	CompoundStatement		106:5:4636:4685	6502134	1					
ANR	6503103	IdentifierDeclStatement	HEAP_VS_SUBSEGMENT vsSubsegment ;	661:5:21321:21352	6502134	0	True				
ANR	6503104	IdentifierDecl	vsSubsegment		6502134	0					
ANR	6503105	IdentifierDeclType	HEAP_VS_SUBSEGMENT		6502134	0					
ANR	6503106	Identifier	vsSubsegment		6502134	1					
ANR	6503107	IdentifierDeclStatement	"WPARAM start , from = currPageSegment + j * 0x1000 ;"	662:5:21359:21408	6502134	1	True				
ANR	6503108	IdentifierDecl	start		6502134	0					
ANR	6503109	IdentifierDeclType	WPARAM		6502134	0					
ANR	6503110	Identifier	start		6502134	1					
ANR	6503111	IdentifierDecl	from = currPageSegment + j * 0x1000		6502134	1					
ANR	6503112	IdentifierDeclType	WPARAM		6502134	0					
ANR	6503113	Identifier	from		6502134	1					
ANR	6503114	AssignmentExpression	from = currPageSegment + j * 0x1000		6502134	2		=			
ANR	6503115	Identifier	from		6502134	0					
ANR	6503116	AdditiveExpression	currPageSegment + j * 0x1000		6502134	1		+			
ANR	6503117	Identifier	currPageSegment		6502134	0					
ANR	6503118	MultiplicativeExpression	j * 0x1000		6502134	1		*			
ANR	6503119	Identifier	j		6502134	0					
ANR	6503120	PrimaryExpression	0x1000		6502134	1					
ANR	6503121	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) from , & vsSubsegment , sizeof ( HEAP_VS_SUBSEGMENT ) , & bytesRead )"	663:5:21415:21510	6502134	2	True				
ANR	6503122	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) from , & vsSubsegment , sizeof ( HEAP_VS_SUBSEGMENT ) , & bytesRead )"		6502134	0					
ANR	6503123	Callee	ReadProcessMemory		6502134	0					
ANR	6503124	Identifier	ReadProcessMemory		6502134	0					
ANR	6503125	ArgumentList	h_proc		6502134	1					
ANR	6503126	Argument	h_proc		6502134	0					
ANR	6503127	Identifier	h_proc		6502134	0					
ANR	6503128	Argument	( PVOID ) from		6502134	1					
ANR	6503129	CastExpression	( PVOID ) from		6502134	0					
ANR	6503130	CastTarget	PVOID		6502134	0					
ANR	6503131	Identifier	from		6502134	1					
ANR	6503132	Argument	& vsSubsegment		6502134	2					
ANR	6503133	UnaryOperationExpression	& vsSubsegment		6502134	0					
ANR	6503134	UnaryOperator	&		6502134	0					
ANR	6503135	Identifier	vsSubsegment		6502134	1					
ANR	6503136	Argument	sizeof ( HEAP_VS_SUBSEGMENT )		6502134	3					
ANR	6503137	SizeofExpression	sizeof ( HEAP_VS_SUBSEGMENT )		6502134	0					
ANR	6503138	Sizeof	sizeof		6502134	0					
ANR	6503139	SizeofOperand	HEAP_VS_SUBSEGMENT		6502134	1					
ANR	6503140	Argument	& bytesRead		6502134	4					
ANR	6503141	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6503142	UnaryOperator	&		6502134	0					
ANR	6503143	Identifier	bytesRead		6502134	1					
ANR	6503144	ExpressionStatement	start = from += sizeof ( HEAP_VS_SUBSEGMENT )	665:5:21549:21592	6502134	3	True				
ANR	6503145	AssignmentExpression	start = from += sizeof ( HEAP_VS_SUBSEGMENT )		6502134	0		=			
ANR	6503146	Identifier	start		6502134	0					
ANR	6503147	AssignmentExpression	from += sizeof ( HEAP_VS_SUBSEGMENT )		6502134	1		+=			
ANR	6503148	Identifier	from		6502134	0					
ANR	6503149	SizeofExpression	sizeof ( HEAP_VS_SUBSEGMENT )		6502134	1					
ANR	6503150	Sizeof	sizeof		6502134	0					
ANR	6503151	SizeofOperand	HEAP_VS_SUBSEGMENT		6502134	1					
ANR	6503152	WhileStatement	while ( from < ( WPARAM ) start + vsSubsegment . Size * sizeof ( HEAP_VS_CHUNK_HEADER ) )		6502134	4					
ANR	6503153	Condition	from < ( WPARAM ) start + vsSubsegment . Size * sizeof ( HEAP_VS_CHUNK_HEADER )	666:12:21606:21677	6502134	0	True				
ANR	6503154	RelationalExpression	from < ( WPARAM ) start + vsSubsegment . Size * sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	0		<			
ANR	6503155	Identifier	from		6502134	0					
ANR	6503156	AdditiveExpression	( WPARAM ) start + vsSubsegment . Size * sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	1		+			
ANR	6503157	CastExpression	( WPARAM ) start		6502134	0					
ANR	6503158	CastTarget	WPARAM		6502134	0					
ANR	6503159	Identifier	start		6502134	1					
ANR	6503160	MultiplicativeExpression	vsSubsegment . Size * sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	1		*			
ANR	6503161	MemberAccess	vsSubsegment . Size		6502134	0					
ANR	6503162	Identifier	vsSubsegment		6502134	0					
ANR	6503163	Identifier	Size		6502134	1					
ANR	6503164	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	1					
ANR	6503165	Sizeof	sizeof		6502134	0					
ANR	6503166	SizeofOperand	HEAP_VS_CHUNK_HEADER		6502134	1					
ANR	6503167	CompoundStatement		114:6:5160:5228	6502134	1					
ANR	6503168	IdentifierDeclStatement	HEAP_VS_CHUNK_HEADER vsChunk ;	667:6:21688:21716	6502134	0	True				
ANR	6503169	IdentifierDecl	vsChunk		6502134	0					
ANR	6503170	IdentifierDeclType	HEAP_VS_CHUNK_HEADER		6502134	0					
ANR	6503171	Identifier	vsChunk		6502134	1					
ANR	6503172	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) from , & vsChunk , sizeof ( HEAP_VS_CHUNK_HEADER ) , & bytesRead )"	668:6:21724:21816	6502134	1	True				
ANR	6503173	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) from , & vsChunk , sizeof ( HEAP_VS_CHUNK_HEADER ) , & bytesRead )"		6502134	0					
ANR	6503174	Callee	ReadProcessMemory		6502134	0					
ANR	6503175	Identifier	ReadProcessMemory		6502134	0					
ANR	6503176	ArgumentList	h_proc		6502134	1					
ANR	6503177	Argument	h_proc		6502134	0					
ANR	6503178	Identifier	h_proc		6502134	0					
ANR	6503179	Argument	( PVOID ) from		6502134	1					
ANR	6503180	CastExpression	( PVOID ) from		6502134	0					
ANR	6503181	CastTarget	PVOID		6502134	0					
ANR	6503182	Identifier	from		6502134	1					
ANR	6503183	Argument	& vsChunk		6502134	2					
ANR	6503184	UnaryOperationExpression	& vsChunk		6502134	0					
ANR	6503185	UnaryOperator	&		6502134	0					
ANR	6503186	Identifier	vsChunk		6502134	1					
ANR	6503187	Argument	sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	3					
ANR	6503188	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	0					
ANR	6503189	Sizeof	sizeof		6502134	0					
ANR	6503190	SizeofOperand	HEAP_VS_CHUNK_HEADER		6502134	1					
ANR	6503191	Argument	& bytesRead		6502134	4					
ANR	6503192	UnaryOperationExpression	& bytesRead		6502134	0					
ANR	6503193	UnaryOperator	&		6502134	0					
ANR	6503194	Identifier	bytesRead		6502134	1					
ANR	6503195	ExpressionStatement	vsChunk . Sizes . HeaderBits ^= from ^ RtlpHpHeapGlobal	669:6:21824:21875	6502134	2	True				
ANR	6503196	AssignmentExpression	vsChunk . Sizes . HeaderBits ^= from ^ RtlpHpHeapGlobal		6502134	0		^=			
ANR	6503197	MemberAccess	vsChunk . Sizes . HeaderBits		6502134	0					
ANR	6503198	MemberAccess	vsChunk . Sizes		6502134	0					
ANR	6503199	Identifier	vsChunk		6502134	0					
ANR	6503200	Identifier	Sizes		6502134	1					
ANR	6503201	Identifier	HeaderBits		6502134	1					
ANR	6503202	ExclusiveOrExpression	from ^ RtlpHpHeapGlobal		6502134	1		^			
ANR	6503203	Identifier	from		6502134	0					
ANR	6503204	Identifier	RtlpHpHeapGlobal		6502134	1					
ANR	6503205	IdentifierDeclStatement	WPARAM sz = vsChunk . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER ) ;	670:6:21883:21951	6502134	3	True				
ANR	6503206	IdentifierDecl	sz = vsChunk . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	0					
ANR	6503207	IdentifierDeclType	WPARAM		6502134	0					
ANR	6503208	Identifier	sz		6502134	1					
ANR	6503209	AssignmentExpression	sz = vsChunk . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	2		=			
ANR	6503210	Identifier	sz		6502134	0					
ANR	6503211	MultiplicativeExpression	vsChunk . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	1		*			
ANR	6503212	MemberAccess	vsChunk . Sizes . UnsafeSize		6502134	0					
ANR	6503213	MemberAccess	vsChunk . Sizes		6502134	0					
ANR	6503214	Identifier	vsChunk		6502134	0					
ANR	6503215	Identifier	Sizes		6502134	1					
ANR	6503216	Identifier	UnsafeSize		6502134	1					
ANR	6503217	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	1					
ANR	6503218	Sizeof	sizeof		6502134	0					
ANR	6503219	SizeofOperand	HEAP_VS_CHUNK_HEADER		6502134	1					
ANR	6503220	IfStatement	if ( vsChunk . Sizes . Allocated )		6502134	4					
ANR	6503221	Condition	vsChunk . Sizes . Allocated	671:10:21963:21985	6502134	0	True				
ANR	6503222	MemberAccess	vsChunk . Sizes . Allocated		6502134	0					
ANR	6503223	MemberAccess	vsChunk . Sizes		6502134	0					
ANR	6503224	Identifier	vsChunk		6502134	0					
ANR	6503225	Identifier	Sizes		6502134	1					
ANR	6503226	Identifier	Allocated		6502134	1					
ANR	6503227	CompoundStatement		120:7:5443:5498	6502134	1					
ANR	6503228	ExpressionStatement	GROW_PBLOCKS ( )	672:7:21997:22012	6502134	0	True				
ANR	6503229	CallExpression	GROW_PBLOCKS ( )		6502134	0					
ANR	6503230	Callee	GROW_PBLOCKS		6502134	0					
ANR	6503231	Identifier	GROW_PBLOCKS		6502134	0					
ANR	6503232	ArgumentList			6502134	1					
ANR	6503233	ExpressionStatement	( * blocks ) [ * count ] . address = from	673:7:22021:22053	6502134	1	True				
ANR	6503234	AssignmentExpression	( * blocks ) [ * count ] . address = from		6502134	0		=			
ANR	6503235	MemberAccess	( * blocks ) [ * count ] . address		6502134	0					
ANR	6503236	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6503237	UnaryOperationExpression	* blocks		6502134	0					
ANR	6503238	UnaryOperator	*		6502134	0					
ANR	6503239	Identifier	blocks		6502134	1					
ANR	6503240	UnaryOperationExpression	* count		6502134	1					
ANR	6503241	UnaryOperator	*		6502134	0					
ANR	6503242	Identifier	count		6502134	1					
ANR	6503243	Identifier	address		6502134	1					
ANR	6503244	Identifier	from		6502134	1					
ANR	6503245	ExpressionStatement	( * blocks ) [ * count ] . size = sz	674:7:22062:22089	6502134	2	True				
ANR	6503246	AssignmentExpression	( * blocks ) [ * count ] . size = sz		6502134	0		=			
ANR	6503247	MemberAccess	( * blocks ) [ * count ] . size		6502134	0					
ANR	6503248	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6503249	UnaryOperationExpression	* blocks		6502134	0					
ANR	6503250	UnaryOperator	*		6502134	0					
ANR	6503251	Identifier	blocks		6502134	1					
ANR	6503252	UnaryOperationExpression	* count		6502134	1					
ANR	6503253	UnaryOperator	*		6502134	0					
ANR	6503254	Identifier	count		6502134	1					
ANR	6503255	Identifier	size		6502134	1					
ANR	6503256	Identifier	sz		6502134	1					
ANR	6503257	ExpressionStatement	( * blocks ) [ * count ] . flags = VS_BLOCK | SEGMENT_HEAP_BLOCK | 1	675:7:22098:22157	6502134	3	True				
ANR	6503258	AssignmentExpression	( * blocks ) [ * count ] . flags = VS_BLOCK | SEGMENT_HEAP_BLOCK | 1		6502134	0		=			
ANR	6503259	MemberAccess	( * blocks ) [ * count ] . flags		6502134	0					
ANR	6503260	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6503261	UnaryOperationExpression	* blocks		6502134	0					
ANR	6503262	UnaryOperator	*		6502134	0					
ANR	6503263	Identifier	blocks		6502134	1					
ANR	6503264	UnaryOperationExpression	* count		6502134	1					
ANR	6503265	UnaryOperator	*		6502134	0					
ANR	6503266	Identifier	count		6502134	1					
ANR	6503267	Identifier	flags		6502134	1					
ANR	6503268	InclusiveOrExpression	VS_BLOCK | SEGMENT_HEAP_BLOCK | 1		6502134	1		|			
ANR	6503269	Identifier	VS_BLOCK		6502134	0					
ANR	6503270	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | 1		6502134	1		|			
ANR	6503271	Identifier	SEGMENT_HEAP_BLOCK		6502134	0					
ANR	6503272	PrimaryExpression	1		6502134	1					
ANR	6503273	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	676:7:22166:22221	6502134	4	True				
ANR	6503274	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6502134	0					
ANR	6503275	IdentifierDeclType	PHeapBlockExtraInfo		6502134	0					
ANR	6503276	Identifier	extra		6502134	1					
ANR	6503277	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6502134	2		=			
ANR	6503278	Identifier	extra		6502134	0					
ANR	6503279	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6502134	1					
ANR	6503280	Callee	R_NEW0		6502134	0					
ANR	6503281	Identifier	R_NEW0		6502134	0					
ANR	6503282	ArgumentList	HeapBlockExtraInfo		6502134	1					
ANR	6503283	Argument	HeapBlockExtraInfo		6502134	0					
ANR	6503284	Identifier	HeapBlockExtraInfo		6502134	0					
ANR	6503285	IfStatement	if ( ! extra )		6502134	5					
ANR	6503286	Condition	! extra	677:11:22234:22239	6502134	0	True				
ANR	6503287	UnaryOperationExpression	! extra		6502134	0					
ANR	6503288	UnaryOperator	!		6502134	0					
ANR	6503289	Identifier	extra		6502134	1					
ANR	6503290	CompoundStatement		121:19:5519:5519	6502134	1					
ANR	6503291	ReturnStatement	return false ;	678:8:22252:22264	6502134	0	True				
ANR	6503292	Identifier	false		6502134	0					
ANR	6503293	ExpressionStatement	extra -> granularity = sizeof ( HEAP_VS_CHUNK_HEADER ) * 2	680:7:22282:22336	6502134	6	True				
ANR	6503294	AssignmentExpression	extra -> granularity = sizeof ( HEAP_VS_CHUNK_HEADER ) * 2		6502134	0		=			
ANR	6503295	PtrMemberAccess	extra -> granularity		6502134	0					
ANR	6503296	Identifier	extra		6502134	0					
ANR	6503297	Identifier	granularity		6502134	1					
ANR	6503298	MultiplicativeExpression	sizeof ( HEAP_VS_CHUNK_HEADER ) * 2		6502134	1		*			
ANR	6503299	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6502134	0					
ANR	6503300	Sizeof	sizeof		6502134	0					
ANR	6503301	SizeofOperand	HEAP_VS_CHUNK_HEADER		6502134	1					
ANR	6503302	PrimaryExpression	2		6502134	1					
ANR	6503303	ExpressionStatement	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	681:7:22345:22397	6502134	7	True				
ANR	6503304	AssignmentExpression	( * blocks ) [ * count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6502134	0		=			
ANR	6503305	MemberAccess	( * blocks ) [ * count ] . extra		6502134	0					
ANR	6503306	ArrayIndexing	( * blocks ) [ * count ]		6502134	0					
ANR	6503307	UnaryOperationExpression	* blocks		6502134	0					
ANR	6503308	UnaryOperator	*		6502134	0					
ANR	6503309	Identifier	blocks		6502134	1					
ANR	6503310	UnaryOperationExpression	* count		6502134	1					
ANR	6503311	UnaryOperator	*		6502134	0					
ANR	6503312	Identifier	count		6502134	1					
ANR	6503313	Identifier	extra		6502134	1					
ANR	6503314	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6502134	1		|			
ANR	6503315	Identifier	EXTRA_FLAG		6502134	0					
ANR	6503316	CastExpression	( WPARAM ) extra		6502134	1					
ANR	6503317	CastTarget	WPARAM		6502134	0					
ANR	6503318	Identifier	extra		6502134	1					
ANR	6503319	ExpressionStatement	* count += 1	682:7:22406:22417	6502134	8	True				
ANR	6503320	AssignmentExpression	* count += 1		6502134	0		+=			
ANR	6503321	UnaryOperationExpression	* count		6502134	0					
ANR	6503322	UnaryOperator	*		6502134	0					
ANR	6503323	Identifier	count		6502134	1					
ANR	6503324	PrimaryExpression	1		6502134	1					
ANR	6503325	ExpressionStatement	from += sz	684:6:22433:22443	6502134	5	True				
ANR	6503326	AssignmentExpression	from += sz		6502134	0		+=			
ANR	6503327	Identifier	from		6502134	0					
ANR	6503328	Identifier	sz		6502134	1					
ANR	6503329	ExpressionStatement	currPageSegment = ( WPARAM ) pageSegment . ListEntry . Flink	688:3:22466:22519	6502134	2	True				
ANR	6503330	AssignmentExpression	currPageSegment = ( WPARAM ) pageSegment . ListEntry . Flink		6502134	0		=			
ANR	6503331	Identifier	currPageSegment		6502134	0					
ANR	6503332	CastExpression	( WPARAM ) pageSegment . ListEntry . Flink		6502134	1					
ANR	6503333	CastTarget	WPARAM		6502134	0					
ANR	6503334	MemberAccess	pageSegment . ListEntry . Flink		6502134	1					
ANR	6503335	MemberAccess	pageSegment . ListEntry		6502134	0					
ANR	6503336	Identifier	pageSegment		6502134	0					
ANR	6503337	Identifier	ListEntry		6502134	1					
ANR	6503338	Identifier	Flink		6502134	1					
ANR	6503339	Condition	currPageSegment && currPageSegment != ctxFirstEntry	689:11:22532:22582	6502134	1	True				
ANR	6503340	AndExpression	currPageSegment && currPageSegment != ctxFirstEntry		6502134	0		&&			
ANR	6503341	Identifier	currPageSegment		6502134	0					
ANR	6503342	EqualityExpression	currPageSegment != ctxFirstEntry		6502134	1		!=			
ANR	6503343	Identifier	currPageSegment		6502134	0					
ANR	6503344	Identifier	ctxFirstEntry		6502134	1					
ANR	6503345	ReturnStatement	return true ;	691:1:22590:22601	6502134	14	True				
ANR	6503346	Identifier	true		6502134	0					
ANR	6503347	ReturnType	static bool		6502134	1					
ANR	6503348	Identifier	GetSegmentHeapBlocks		6502134	2					
ANR	6503349	ParameterList	"RDebug * dbg , HANDLE h_proc , PVOID heapBase , PHeapBlockBasicInfo * blocks , WPARAM * count , SIZE_T * allocated"		6502134	3					
ANR	6503350	Parameter	RDebug * dbg	557:33:16615:16625	6502134	0	True				
ANR	6503351	ParameterType	RDebug *		6502134	0					
ANR	6503352	Identifier	dbg		6502134	1					
ANR	6503353	Parameter	HANDLE h_proc	557:46:16628:16640	6502134	1	True				
ANR	6503354	ParameterType	HANDLE		6502134	0					
ANR	6503355	Identifier	h_proc		6502134	1					
ANR	6503356	Parameter	PVOID heapBase	557:61:16643:16656	6502134	2	True				
ANR	6503357	ParameterType	PVOID		6502134	0					
ANR	6503358	Identifier	heapBase		6502134	1					
ANR	6503359	Parameter	PHeapBlockBasicInfo * blocks	557:77:16659:16685	6502134	3	True				
ANR	6503360	ParameterType	PHeapBlockBasicInfo *		6502134	0					
ANR	6503361	Identifier	blocks		6502134	1					
ANR	6503362	Parameter	WPARAM * count	557:106:16688:16700	6502134	4	True				
ANR	6503363	ParameterType	WPARAM *		6502134	0					
ANR	6503364	Identifier	count		6502134	1					
ANR	6503365	Parameter	SIZE_T * allocated	557:121:16703:16719	6502134	5	True				
ANR	6503366	ParameterType	SIZE_T *		6502134	0					
ANR	6503367	Identifier	allocated		6502134	1					
ANR	6503368	CFGEntryNode	ENTRY		6502134		True				
ANR	6503369	CFGExitNode	EXIT		6502134		True				
ANR	6503370	Symbol	ctxFirstEntry		6502134						
ANR	6503371	Symbol	& affinitySlot		6502134						
ANR	6503372	Symbol	( * blocks ) [ * count ] . extra		6502134						
ANR	6503373	Symbol	SegmentListHead		6502134						
ANR	6503374	Symbol	ctx . SegmentListHead		6502134						
ANR	6503375	Symbol	PAGE_RANGE_FLAGS_ALLOCATED		6502134						
ANR	6503376	Symbol	* segheapHeader		6502134						
ANR	6503377	Symbol	entry . TreeNode . Right		6502134						
ANR	6503378	Symbol	curr		6502134						
ANR	6503379	Symbol	vsSubsegment		6502134						
ANR	6503380	Symbol	SEGMENT_HEAP		6502134						
ANR	6503381	Symbol	* blocks		6502134						
ANR	6503382	Symbol	ctx		6502134						
ANR	6503383	Symbol	currPageSegment		6502134						
ANR	6503384	Symbol	h_proc		6502134						
ANR	6503385	Symbol	& bucket		6502134						
ANR	6503386	Symbol	pageSegment . ListEntry . Flink		6502134						
ANR	6503387	Symbol	segheapHeader . LfhContext . Buckets		6502134						
ANR	6503388	Symbol	affinitySlot . State . AvailableSubsegmentList		6502134						
ANR	6503389	Symbol	segheapHeader . Signature		6502134						
ANR	6503390	Symbol	ReadProcessMemory		6502134						
ANR	6503391	Symbol	bucket		6502134						
ANR	6503392	Symbol	node		6502134						
ANR	6503393	Symbol	R_NEW0		6502134						
ANR	6503394	Symbol	segheapHeader . LargeAllocMetadata		6502134						
ANR	6503395	Symbol	* segheapHeader . LfhContext		6502134						
ANR	6503396	Symbol	__lfh_segment_loop		6502134						
ANR	6503397	Symbol	segheapHeader . SegContexts		6502134						
ANR	6503398	Symbol	& vsChunk		6502134						
ANR	6503399	Symbol	numBuckets		6502134						
ANR	6503400	Symbol	_countof		6502134						
ANR	6503401	Symbol	* pageSegment . DescArray		6502134						
ANR	6503402	Symbol	pageSegment . DescArray [ j ] . RangeFlags		6502134						
ANR	6503403	Symbol	pageSegment . DescArray [ j ] . UnitSize		6502134						
ANR	6503404	Symbol	VS_BLOCK		6502134						
ANR	6503405	Symbol	lfhKey		6502134						
ANR	6503406	Symbol	bucket . AffinitySlots		6502134						
ANR	6503407	Symbol	lfhKeyLocation		6502134						
ANR	6503408	Symbol	SegContexts		6502134						
ANR	6503409	Symbol	segheapHeader . LargeReservedPages		6502134						
ANR	6503410	Symbol	RtlpHpHeapGlobal		6502134						
ANR	6503411	Symbol	segheapHeader . LfhContext		6502134						
ANR	6503412	Symbol	offsetof		6502134						
ANR	6503413	Symbol	vsChunk . Sizes		6502134						
ANR	6503414	Symbol	affinitySlot . State . AvailableSubsegmentList . Flink		6502134						
ANR	6503415	Symbol	FullSubsegmentList		6502134						
ANR	6503416	Symbol	( * blocks ) [ * count ] . address		6502134						
ANR	6503417	Symbol	pageSegment . DescArray [ j ] . UnusedBytes		6502134						
ANR	6503418	Symbol	malloc		6502134						
ANR	6503419	Symbol	EXTRA_FLAG		6502134						
ANR	6503420	Symbol	PAGE_RANGE_FLAGS_FIRST		6502134						
ANR	6503421	Symbol	sz		6502134						
ANR	6503422	Symbol	bytesRead		6502134						
ANR	6503423	Symbol	i		6502134						
ANR	6503424	Symbol	j		6502134						
ANR	6503425	Symbol	* segheapHeader . LfhContext . Buckets		6502134						
ANR	6503426	Symbol	& pageSegment		6502134						
ANR	6503427	Symbol	& paffinitySlot		6502134						
ANR	6503428	Symbol	entry . TreeNode		6502134						
ANR	6503429	Symbol	& entry		6502134						
ANR	6503430	Symbol	s		6502134						
ANR	6503431	Symbol	* segheapHeader . SegContexts		6502134						
ANR	6503432	Symbol	SEGMENT_HEAP_BLOCK		6502134						
ANR	6503433	Symbol	RtlpHpHeapGlobalsOffset		6502134						
ANR	6503434	Symbol	* pageSegment		6502134						
ANR	6503435	Symbol	first		6502134						
ANR	6503436	Symbol	segheapHeader . LargeAllocMetadata . Root		6502134						
ANR	6503437	Symbol	& segheapHeader		6502134						
ANR	6503438	Symbol	vsChunk		6502134						
ANR	6503439	Symbol	HEAP_LFH_SUBSEGMENT_OWNER		6502134						
ANR	6503440	Symbol	LARGE_BLOCK		6502134						
ANR	6503441	Symbol	* count		6502134						
ANR	6503442	Symbol	( * blocks ) [ * count ] . flags		6502134						
ANR	6503443	Symbol	( * blocks ) [ * count ] . size		6502134						
ANR	6503444	Symbol	& vsSubsegment		6502134						
ANR	6503445	Symbol	r_stack_pop		6502134						
ANR	6503446	Symbol	node -> Left		6502134						
ANR	6503447	Symbol	affinitySlot . State . FullSubsegmentList		6502134						
ANR	6503448	Symbol	* node		6502134						
ANR	6503449	Symbol	from		6502134						
ANR	6503450	Symbol	vsChunk . Sizes . UnsafeSize		6502134						
ANR	6503451	Symbol	pageSegment . ListEntry		6502134						
ANR	6503452	Symbol	dbg		6502134						
ANR	6503453	Symbol	count		6502134						
ANR	6503454	Symbol	& extra -> granularity		6502134						
ANR	6503455	Symbol	entry		6502134						
ANR	6503456	Symbol	entry . UnusedBytes		6502134						
ANR	6503457	Symbol	* extra		6502134						
ANR	6503458	Symbol	true		6502134						
ANR	6503459	Symbol	extra -> unusedBytes		6502134						
ANR	6503460	Symbol	pageSegment		6502134						
ANR	6503461	Symbol	BACKEND_BLOCK		6502134						
ANR	6503462	Symbol	paffinitySlot		6502134						
ANR	6503463	Symbol	extra -> segment		6502134						
ANR	6503464	Symbol	HeapBlockExtraInfo		6502134						
ANR	6503465	Symbol	next		6502134						
ANR	6503466	Symbol	heapBase		6502134						
ANR	6503467	Symbol	* * count		6502134						
ANR	6503468	Symbol	& lfhKey		6502134						
ANR	6503469	Symbol	* * blocks		6502134						
ANR	6503470	Symbol	r_stack_new		6502134						
ANR	6503471	Symbol	& bytesRead		6502134						
ANR	6503472	Symbol	affinitySlot . State		6502134						
ANR	6503473	Symbol	extra		6502134						
ANR	6503474	Symbol	r_stack_is_empty		6502134						
ANR	6503475	Symbol	entry . AllocatedPages		6502134						
ANR	6503476	Symbol	pageSegment . DescArray		6502134						
ANR	6503477	Symbol	allocated		6502134						
ANR	6503478	Symbol	segheapHeader		6502134						
ANR	6503479	Symbol	ctx . SegmentListHead . Flink		6502134						
ANR	6503480	Symbol	entry . VirtualAddess		6502134						
ANR	6503481	Symbol	extra -> granularity		6502134						
ANR	6503482	Symbol	& RtlpHpHeapGlobal		6502134						
ANR	6503483	Symbol	HEAP_SEG_CONTEXT		6502134						
ANR	6503484	Symbol	blocks		6502134						
ANR	6503485	Symbol	affinitySlot . State . FullSubsegmentList . Flink		6502134						
ANR	6503486	Symbol	vsChunk . Sizes . Allocated		6502134						
ANR	6503487	Symbol	false		6502134						
ANR	6503488	Symbol	start		6502134						
ANR	6503489	Symbol	AvailableSubsegmentList		6502134						
ANR	6503490	Symbol	affinitySlot		6502134						
ANR	6503491	Symbol	* i		6502134						
ANR	6503492	Symbol	* j		6502134						
ANR	6503493	Symbol	vsSubsegment . Size		6502134						
ANR	6503494	Symbol	vsChunk . Sizes . HeaderBits		6502134						
ANR	6503495	Function	GetHeapBlocks	694:0:22606:30731							
ANR	6503496	FunctionDef	"GetHeapBlocks (DWORD pid , RDebug * dbg)"		6503495	0					
ANR	6503497	CompoundStatement		694:59:22665:30731	6503495	0					
ANR	6503498	IfStatement	if ( dbg -> bits == R_SYS_BITS_32 )		6503495	0					
ANR	6503499	Condition	dbg -> bits == R_SYS_BITS_32	701:5:22825:22850	6503495	0	True				
ANR	6503500	EqualityExpression	dbg -> bits == R_SYS_BITS_32		6503495	0		==			
ANR	6503501	PtrMemberAccess	dbg -> bits		6503495	0					
ANR	6503502	Identifier	dbg		6503495	0					
ANR	6503503	Identifier	bits		6503495	1					
ANR	6503504	Identifier	R_SYS_BITS_32		6503495	1					
ANR	6503505	CompoundStatement		8:33:187:187	6503495	1					
ANR	6503506	ReturnStatement	return NULL ;	702:2:22857:22868	6503495	0	True				
ANR	6503507	Identifier	NULL		6503495	0					
ANR	6503508	IdentifierDeclStatement	WPARAM bytesRead ;	705:1:22899:22915	6503495	1	True				
ANR	6503509	IdentifierDecl	bytesRead		6503495	0					
ANR	6503510	IdentifierDeclType	WPARAM		6503495	0					
ANR	6503511	Identifier	bytesRead		6503495	1					
ANR	6503512	IdentifierDeclStatement	HANDLE h_proc = NULL ;	706:1:22918:22938	6503495	2	True				
ANR	6503513	IdentifierDecl	h_proc = NULL		6503495	0					
ANR	6503514	IdentifierDeclType	HANDLE		6503495	0					
ANR	6503515	Identifier	h_proc		6503495	1					
ANR	6503516	AssignmentExpression	h_proc = NULL		6503495	2		=			
ANR	6503517	Identifier	NULL		6503495	0					
ANR	6503518	Identifier	NULL		6503495	1					
ANR	6503519	IdentifierDeclStatement	"PDEBUG_BUFFER db = InitHeapInfo ( dbg , PDI_HEAPS ) ;"	707:1:22941:22989	6503495	3	True				
ANR	6503520	IdentifierDecl	"db = InitHeapInfo ( dbg , PDI_HEAPS )"		6503495	0					
ANR	6503521	IdentifierDeclType	PDEBUG_BUFFER		6503495	0					
ANR	6503522	Identifier	db		6503495	1					
ANR	6503523	AssignmentExpression	"db = InitHeapInfo ( dbg , PDI_HEAPS )"		6503495	2		=			
ANR	6503524	Identifier	db		6503495	0					
ANR	6503525	CallExpression	"InitHeapInfo ( dbg , PDI_HEAPS )"		6503495	1					
ANR	6503526	Callee	InitHeapInfo		6503495	0					
ANR	6503527	Identifier	InitHeapInfo		6503495	0					
ANR	6503528	ArgumentList	dbg		6503495	1					
ANR	6503529	Argument	dbg		6503495	0					
ANR	6503530	Identifier	dbg		6503495	0					
ANR	6503531	Argument	PDI_HEAPS		6503495	1					
ANR	6503532	Identifier	PDI_HEAPS		6503495	0					
ANR	6503533	IfStatement	if ( ! db || ! db -> HeapInformation )		6503495	4					
ANR	6503534	Condition	! db || ! db -> HeapInformation	708:5:22996:23022	6503495	0	True				
ANR	6503535	OrExpression	! db || ! db -> HeapInformation		6503495	0		||			
ANR	6503536	UnaryOperationExpression	! db		6503495	0					
ANR	6503537	UnaryOperator	!		6503495	0					
ANR	6503538	Identifier	db		6503495	1					
ANR	6503539	UnaryOperationExpression	! db -> HeapInformation		6503495	1					
ANR	6503540	UnaryOperator	!		6503495	0					
ANR	6503541	PtrMemberAccess	db -> HeapInformation		6503495	1					
ANR	6503542	Identifier	db		6503495	0					
ANR	6503543	Identifier	HeapInformation		6503495	1					
ANR	6503544	CompoundStatement		15:34:359:359	6503495	1					
ANR	6503545	ExpressionStatement	"R_LOG_ERROR ( ""InitHeapInfo Failed\\n"" )"	709:2:23029:23066	6503495	0	True				
ANR	6503546	CallExpression	"R_LOG_ERROR ( ""InitHeapInfo Failed\\n"" )"		6503495	0					
ANR	6503547	Callee	R_LOG_ERROR		6503495	0					
ANR	6503548	Identifier	R_LOG_ERROR		6503495	0					
ANR	6503549	ArgumentList	"""InitHeapInfo Failed\\n"""		6503495	1					
ANR	6503550	Argument	"""InitHeapInfo Failed\\n"""		6503495	0					
ANR	6503551	PrimaryExpression	"""InitHeapInfo Failed\\n"""		6503495	0					
ANR	6503552	GotoStatement	goto err ;	710:2:23070:23078	6503495	1	True				
ANR	6503553	Identifier	err		6503495	0					
ANR	6503554	ExpressionStatement	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , pid )"	712:1:23084:23162	6503495	5	True				
ANR	6503555	AssignmentExpression	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , pid )"		6503495	0		=			
ANR	6503556	Identifier	h_proc		6503495	0					
ANR	6503557	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , pid )"		6503495	1					
ANR	6503558	Callee	OpenProcess		6503495	0					
ANR	6503559	Identifier	OpenProcess		6503495	0					
ANR	6503560	ArgumentList	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6503495	1					
ANR	6503561	Argument	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6503495	0					
ANR	6503562	InclusiveOrExpression	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6503495	0		|			
ANR	6503563	Identifier	PROCESS_QUERY_INFORMATION		6503495	0					
ANR	6503564	Identifier	PROCESS_VM_READ		6503495	1					
ANR	6503565	Argument	FALSE		6503495	1					
ANR	6503566	Identifier	FALSE		6503495	0					
ANR	6503567	Argument	pid		6503495	2					
ANR	6503568	Identifier	pid		6503495	0					
ANR	6503569	IfStatement	if ( ! h_proc )		6503495	6					
ANR	6503570	Condition	! h_proc	713:5:23169:23175	6503495	0	True				
ANR	6503571	UnaryOperationExpression	! h_proc		6503495	0					
ANR	6503572	UnaryOperator	!		6503495	0					
ANR	6503573	Identifier	h_proc		6503495	1					
ANR	6503574	CompoundStatement		20:14:512:512	6503495	1					
ANR	6503575	ExpressionStatement	"R_LOG_ERROR ( ""OpenProcess failed\\n"" )"	714:2:23182:23218	6503495	0	True				
ANR	6503576	CallExpression	"R_LOG_ERROR ( ""OpenProcess failed\\n"" )"		6503495	0					
ANR	6503577	Callee	R_LOG_ERROR		6503495	0					
ANR	6503578	Identifier	R_LOG_ERROR		6503495	0					
ANR	6503579	ArgumentList	"""OpenProcess failed\\n"""		6503495	1					
ANR	6503580	Argument	"""OpenProcess failed\\n"""		6503495	0					
ANR	6503581	PrimaryExpression	"""OpenProcess failed\\n"""		6503495	0					
ANR	6503582	GotoStatement	goto err ;	715:2:23222:23230	6503495	1	True				
ANR	6503583	Identifier	err		6503495	0					
ANR	6503584	IdentifierDeclStatement	WPARAM lfhKey ;	718:1:23237:23250	6503495	7	True				
ANR	6503585	IdentifierDecl	lfhKey		6503495	0					
ANR	6503586	IdentifierDeclType	WPARAM		6503495	0					
ANR	6503587	Identifier	lfhKey		6503495	1					
ANR	6503588	IfStatement	"if ( ! GetLFHKey ( dbg , h_proc , false , & lfhKey ) )"		6503495	8					
ANR	6503589	Condition	"! GetLFHKey ( dbg , h_proc , false , & lfhKey )"	719:5:23257:23296	6503495	0	True				
ANR	6503590	UnaryOperationExpression	"! GetLFHKey ( dbg , h_proc , false , & lfhKey )"		6503495	0					
ANR	6503591	UnaryOperator	!		6503495	0					
ANR	6503592	CallExpression	"GetLFHKey ( dbg , h_proc , false , & lfhKey )"		6503495	1					
ANR	6503593	Callee	GetLFHKey		6503495	0					
ANR	6503594	Identifier	GetLFHKey		6503495	0					
ANR	6503595	ArgumentList	dbg		6503495	1					
ANR	6503596	Argument	dbg		6503495	0					
ANR	6503597	Identifier	dbg		6503495	0					
ANR	6503598	Argument	h_proc		6503495	1					
ANR	6503599	Identifier	h_proc		6503495	0					
ANR	6503600	Argument	false		6503495	2					
ANR	6503601	Identifier	false		6503495	0					
ANR	6503602	Argument	& lfhKey		6503495	3					
ANR	6503603	UnaryOperationExpression	& lfhKey		6503495	0					
ANR	6503604	UnaryOperator	&		6503495	0					
ANR	6503605	Identifier	lfhKey		6503495	1					
ANR	6503606	CompoundStatement		26:47:633:633	6503495	1					
ANR	6503607	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	720:2:23303:23334	6503495	0	True				
ANR	6503608	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6503495	0					
ANR	6503609	Callee	RtlDestroyQueryDebugBuffer		6503495	0					
ANR	6503610	Identifier	RtlDestroyQueryDebugBuffer		6503495	0					
ANR	6503611	ArgumentList	db		6503495	1					
ANR	6503612	Argument	db		6503495	0					
ANR	6503613	Identifier	db		6503495	0					
ANR	6503614	ExpressionStatement	CloseHandle ( h_proc )	721:2:23338:23358	6503495	1	True				
ANR	6503615	CallExpression	CloseHandle ( h_proc )		6503495	0					
ANR	6503616	Callee	CloseHandle		6503495	0					
ANR	6503617	Identifier	CloseHandle		6503495	0					
ANR	6503618	ArgumentList	h_proc		6503495	1					
ANR	6503619	Argument	h_proc		6503495	0					
ANR	6503620	Identifier	h_proc		6503495	0					
ANR	6503621	ExpressionStatement	"eprintf ( ""GetHeapBlocks: Failed to get LFH key.\\n"" )"	722:2:23362:23413	6503495	2	True				
ANR	6503622	CallExpression	"eprintf ( ""GetHeapBlocks: Failed to get LFH key.\\n"" )"		6503495	0					
ANR	6503623	Callee	eprintf		6503495	0					
ANR	6503624	Identifier	eprintf		6503495	0					
ANR	6503625	ArgumentList	"""GetHeapBlocks: Failed to get LFH key.\\n"""		6503495	1					
ANR	6503626	Argument	"""GetHeapBlocks: Failed to get LFH key.\\n"""		6503495	0					
ANR	6503627	PrimaryExpression	"""GetHeapBlocks: Failed to get LFH key.\\n"""		6503495	0					
ANR	6503628	ReturnStatement	return NULL ;	723:2:23417:23428	6503495	3	True				
ANR	6503629	Identifier	NULL		6503495	0					
ANR	6503630	IdentifierDeclStatement	PHeapInformation heapInfo = db -> HeapInformation ;	726:1:23435:23482	6503495	9	True				
ANR	6503631	IdentifierDecl	heapInfo = db -> HeapInformation		6503495	0					
ANR	6503632	IdentifierDeclType	PHeapInformation		6503495	0					
ANR	6503633	Identifier	heapInfo		6503495	1					
ANR	6503634	AssignmentExpression	heapInfo = db -> HeapInformation		6503495	2		=			
ANR	6503635	Identifier	heapInfo		6503495	0					
ANR	6503636	PtrMemberAccess	db -> HeapInformation		6503495	1					
ANR	6503637	Identifier	db		6503495	0					
ANR	6503638	Identifier	HeapInformation		6503495	1					
ANR	6503639	IdentifierDeclStatement	int i ;	727:1:23485:23490	6503495	10	True				
ANR	6503640	IdentifierDecl	i		6503495	0					
ANR	6503641	IdentifierDeclType	int		6503495	0					
ANR	6503642	Identifier	i		6503495	1					
ANR	6503643	ForStatement	for ( i = 0 ; i < heapInfo -> count ; i ++ )		6503495	11					
ANR	6503644	ForInit	i = 0 ;	728:6:23498:23503	6503495	0	True				
ANR	6503645	AssignmentExpression	i = 0		6503495	0		=			
ANR	6503646	Identifier	i		6503495	0					
ANR	6503647	PrimaryExpression	0		6503495	1					
ANR	6503648	Condition	i < heapInfo -> count	728:13:23505:23523	6503495	1	True				
ANR	6503649	RelationalExpression	i < heapInfo -> count		6503495	0		<			
ANR	6503650	Identifier	i		6503495	0					
ANR	6503651	PtrMemberAccess	heapInfo -> count		6503495	1					
ANR	6503652	Identifier	heapInfo		6503495	0					
ANR	6503653	Identifier	count		6503495	1					
ANR	6503654	PostIncDecOperationExpression	i ++	728:34:23526:23528	6503495	2	True				
ANR	6503655	Identifier	i		6503495	0					
ANR	6503656	IncDec	++		6503495	1					
ANR	6503657	CompoundStatement		171:2:6084:6142	6503495	3					
ANR	6503658	IdentifierDeclStatement	size_t tot_allocated = 0 ;	729:2:23535:23559	6503495	0	True				
ANR	6503659	IdentifierDecl	tot_allocated = 0		6503495	0					
ANR	6503660	IdentifierDeclType	size_t		6503495	0					
ANR	6503661	Identifier	tot_allocated		6503495	1					
ANR	6503662	AssignmentExpression	tot_allocated = 0		6503495	2		=			
ANR	6503663	Identifier	tot_allocated		6503495	0					
ANR	6503664	PrimaryExpression	0		6503495	1					
ANR	6503665	IdentifierDeclStatement	WPARAM from = 0 ;	730:2:23563:23578	6503495	1	True				
ANR	6503666	IdentifierDecl	from = 0		6503495	0					
ANR	6503667	IdentifierDeclType	WPARAM		6503495	0					
ANR	6503668	Identifier	from		6503495	1					
ANR	6503669	AssignmentExpression	from = 0		6503495	2		=			
ANR	6503670	Identifier	from		6503495	0					
ANR	6503671	PrimaryExpression	0		6503495	1					
ANR	6503672	IdentifierDeclStatement	ut64 count = 0 ;	731:2:23582:23596	6503495	2	True				
ANR	6503673	IdentifierDecl	count = 0		6503495	0					
ANR	6503674	IdentifierDeclType	ut64		6503495	0					
ANR	6503675	Identifier	count		6503495	1					
ANR	6503676	AssignmentExpression	count = 0		6503495	2		=			
ANR	6503677	Identifier	count		6503495	0					
ANR	6503678	PrimaryExpression	0		6503495	1					
ANR	6503679	IdentifierDeclStatement	PDEBUG_HEAP_INFORMATION heap = & heapInfo -> heaps [ i ] ;	732:2:23600:23650	6503495	3	True				
ANR	6503680	IdentifierDecl	heap = & heapInfo -> heaps [ i ]		6503495	0					
ANR	6503681	IdentifierDeclType	PDEBUG_HEAP_INFORMATION		6503495	0					
ANR	6503682	Identifier	heap		6503495	1					
ANR	6503683	AssignmentExpression	heap = & heapInfo -> heaps [ i ]		6503495	2		=			
ANR	6503684	Identifier	heap		6503495	0					
ANR	6503685	UnaryOperationExpression	& heapInfo -> heaps [ i ]		6503495	1					
ANR	6503686	UnaryOperator	&		6503495	0					
ANR	6503687	ArrayIndexing	heapInfo -> heaps [ i ]		6503495	1					
ANR	6503688	PtrMemberAccess	heapInfo -> heaps		6503495	0					
ANR	6503689	Identifier	heapInfo		6503495	0					
ANR	6503690	Identifier	heaps		6503495	1					
ANR	6503691	Identifier	i		6503495	1					
ANR	6503692	IdentifierDeclStatement	HEAP_ENTRY heapEntry ;	733:2:23654:23674	6503495	4	True				
ANR	6503693	IdentifierDecl	heapEntry		6503495	0					
ANR	6503694	IdentifierDeclType	HEAP_ENTRY		6503495	0					
ANR	6503695	Identifier	heapEntry		6503495	1					
ANR	6503696	IdentifierDeclStatement	HEAP heapHeader ;	734:2:23678:23693	6503495	5	True				
ANR	6503697	IdentifierDecl	heapHeader		6503495	0					
ANR	6503698	IdentifierDeclType	HEAP		6503495	0					
ANR	6503699	Identifier	heapHeader		6503495	1					
ANR	6503700	IdentifierDeclStatement	const SIZE_T sz_entry = sizeof ( HEAP_ENTRY ) ;	735:2:23697:23740	6503495	6	True				
ANR	6503701	IdentifierDecl	sz_entry = sizeof ( HEAP_ENTRY )		6503495	0					
ANR	6503702	IdentifierDeclType	const SIZE_T		6503495	0					
ANR	6503703	Identifier	sz_entry		6503495	1					
ANR	6503704	AssignmentExpression	sz_entry = sizeof ( HEAP_ENTRY )		6503495	2		=			
ANR	6503705	Identifier	sz_entry		6503495	0					
ANR	6503706	SizeofExpression	sizeof ( HEAP_ENTRY )		6503495	1					
ANR	6503707	Sizeof	sizeof		6503495	0					
ANR	6503708	SizeofOperand	HEAP_ENTRY		6503495	1					
ANR	6503709	ExpressionStatement	"ReadProcessMemory ( h_proc , heap -> Base , & heapHeader , sizeof ( HEAP ) , & bytesRead )"	736:2:23744:23822	6503495	7	True				
ANR	6503710	CallExpression	"ReadProcessMemory ( h_proc , heap -> Base , & heapHeader , sizeof ( HEAP ) , & bytesRead )"		6503495	0					
ANR	6503711	Callee	ReadProcessMemory		6503495	0					
ANR	6503712	Identifier	ReadProcessMemory		6503495	0					
ANR	6503713	ArgumentList	h_proc		6503495	1					
ANR	6503714	Argument	h_proc		6503495	0					
ANR	6503715	Identifier	h_proc		6503495	0					
ANR	6503716	Argument	heap -> Base		6503495	1					
ANR	6503717	PtrMemberAccess	heap -> Base		6503495	0					
ANR	6503718	Identifier	heap		6503495	0					
ANR	6503719	Identifier	Base		6503495	1					
ANR	6503720	Argument	& heapHeader		6503495	2					
ANR	6503721	UnaryOperationExpression	& heapHeader		6503495	0					
ANR	6503722	UnaryOperator	&		6503495	0					
ANR	6503723	Identifier	heapHeader		6503495	1					
ANR	6503724	Argument	sizeof ( HEAP )		6503495	3					
ANR	6503725	SizeofExpression	sizeof ( HEAP )		6503495	0					
ANR	6503726	Sizeof	sizeof		6503495	0					
ANR	6503727	SizeofOperand	HEAP		6503495	1					
ANR	6503728	Argument	& bytesRead		6503495	4					
ANR	6503729	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6503730	UnaryOperator	&		6503495	0					
ANR	6503731	Identifier	bytesRead		6503495	1					
ANR	6503732	IdentifierDeclStatement	SIZE_T allocated = 128 * sizeof ( HeapBlockBasicInfo ) ;	738:2:23827:23879	6503495	8	True				
ANR	6503733	IdentifierDecl	allocated = 128 * sizeof ( HeapBlockBasicInfo )		6503495	0					
ANR	6503734	IdentifierDeclType	SIZE_T		6503495	0					
ANR	6503735	Identifier	allocated		6503495	1					
ANR	6503736	AssignmentExpression	allocated = 128 * sizeof ( HeapBlockBasicInfo )		6503495	2		=			
ANR	6503737	Identifier	allocated		6503495	0					
ANR	6503738	MultiplicativeExpression	128 * sizeof ( HeapBlockBasicInfo )		6503495	1		*			
ANR	6503739	PrimaryExpression	128		6503495	0					
ANR	6503740	SizeofExpression	sizeof ( HeapBlockBasicInfo )		6503495	1					
ANR	6503741	Sizeof	sizeof		6503495	0					
ANR	6503742	SizeofOperand	HeapBlockBasicInfo		6503495	1					
ANR	6503743	IdentifierDeclStatement	"PHeapBlockBasicInfo blocks = calloc ( allocated , 1 ) ;"	739:2:23883:23933	6503495	9	True				
ANR	6503744	IdentifierDecl	"blocks = calloc ( allocated , 1 )"		6503495	0					
ANR	6503745	IdentifierDeclType	PHeapBlockBasicInfo		6503495	0					
ANR	6503746	Identifier	blocks		6503495	1					
ANR	6503747	AssignmentExpression	"blocks = calloc ( allocated , 1 )"		6503495	2		=			
ANR	6503748	Identifier	blocks		6503495	0					
ANR	6503749	CallExpression	"calloc ( allocated , 1 )"		6503495	1					
ANR	6503750	Callee	calloc		6503495	0					
ANR	6503751	Identifier	calloc		6503495	0					
ANR	6503752	ArgumentList	allocated		6503495	1					
ANR	6503753	Argument	allocated		6503495	0					
ANR	6503754	Identifier	allocated		6503495	0					
ANR	6503755	Argument	1		6503495	1					
ANR	6503756	PrimaryExpression	1		6503495	0					
ANR	6503757	IfStatement	if ( ! blocks )		6503495	10					
ANR	6503758	Condition	! blocks	740:6:23941:23947	6503495	0	True				
ANR	6503759	UnaryOperationExpression	! blocks		6503495	0					
ANR	6503760	UnaryOperator	!		6503495	0					
ANR	6503761	Identifier	blocks		6503495	1					
ANR	6503762	CompoundStatement		47:15:1284:1284	6503495	1					
ANR	6503763	ExpressionStatement	"R_LOG_ERROR ( ""Memory Allocation failed\\n"" )"	741:3:23955:23997	6503495	0	True				
ANR	6503764	CallExpression	"R_LOG_ERROR ( ""Memory Allocation failed\\n"" )"		6503495	0					
ANR	6503765	Callee	R_LOG_ERROR		6503495	0					
ANR	6503766	Identifier	R_LOG_ERROR		6503495	0					
ANR	6503767	ArgumentList	"""Memory Allocation failed\\n"""		6503495	1					
ANR	6503768	Argument	"""Memory Allocation failed\\n"""		6503495	0					
ANR	6503769	PrimaryExpression	"""Memory Allocation failed\\n"""		6503495	0					
ANR	6503770	GotoStatement	goto err ;	742:3:24002:24010	6503495	1	True				
ANR	6503771	Identifier	err		6503495	0					
ANR	6503772	IfStatement	if ( heapHeader . SegmentSignature == 0xddeeddee )		6503495	11					
ANR	6503773	Condition	heapHeader . SegmentSignature == 0xddeeddee	746:6:24041:24081	6503495	0	True				
ANR	6503774	EqualityExpression	heapHeader . SegmentSignature == 0xddeeddee		6503495	0		==			
ANR	6503775	MemberAccess	heapHeader . SegmentSignature		6503495	0					
ANR	6503776	Identifier	heapHeader		6503495	0					
ANR	6503777	Identifier	SegmentSignature		6503495	1					
ANR	6503778	PrimaryExpression	0xddeeddee		6503495	1					
ANR	6503779	CompoundStatement		54:3:1423:1509	6503495	1					
ANR	6503780	IdentifierDeclStatement	"bool ret = GetSegmentHeapBlocks ( dbg , h_proc , heap -> Base , & blocks , & count , & allocated ) ;"	747:3:24089:24175	6503495	0	True				
ANR	6503781	IdentifierDecl	"ret = GetSegmentHeapBlocks ( dbg , h_proc , heap -> Base , & blocks , & count , & allocated )"		6503495	0					
ANR	6503782	IdentifierDeclType	bool		6503495	0					
ANR	6503783	Identifier	ret		6503495	1					
ANR	6503784	AssignmentExpression	"ret = GetSegmentHeapBlocks ( dbg , h_proc , heap -> Base , & blocks , & count , & allocated )"		6503495	2		=			
ANR	6503785	Identifier	ret		6503495	0					
ANR	6503786	CallExpression	"GetSegmentHeapBlocks ( dbg , h_proc , heap -> Base , & blocks , & count , & allocated )"		6503495	1					
ANR	6503787	Callee	GetSegmentHeapBlocks		6503495	0					
ANR	6503788	Identifier	GetSegmentHeapBlocks		6503495	0					
ANR	6503789	ArgumentList	dbg		6503495	1					
ANR	6503790	Argument	dbg		6503495	0					
ANR	6503791	Identifier	dbg		6503495	0					
ANR	6503792	Argument	h_proc		6503495	1					
ANR	6503793	Identifier	h_proc		6503495	0					
ANR	6503794	Argument	heap -> Base		6503495	2					
ANR	6503795	PtrMemberAccess	heap -> Base		6503495	0					
ANR	6503796	Identifier	heap		6503495	0					
ANR	6503797	Identifier	Base		6503495	1					
ANR	6503798	Argument	& blocks		6503495	3					
ANR	6503799	UnaryOperationExpression	& blocks		6503495	0					
ANR	6503800	UnaryOperator	&		6503495	0					
ANR	6503801	Identifier	blocks		6503495	1					
ANR	6503802	Argument	& count		6503495	4					
ANR	6503803	UnaryOperationExpression	& count		6503495	0					
ANR	6503804	UnaryOperator	&		6503495	0					
ANR	6503805	Identifier	count		6503495	1					
ANR	6503806	Argument	& allocated		6503495	5					
ANR	6503807	UnaryOperationExpression	& allocated		6503495	0					
ANR	6503808	UnaryOperator	&		6503495	0					
ANR	6503809	Identifier	allocated		6503495	1					
ANR	6503810	ExpressionStatement	heap -> Blocks = blocks	748:3:24180:24201	6503495	1	True				
ANR	6503811	AssignmentExpression	heap -> Blocks = blocks		6503495	0		=			
ANR	6503812	PtrMemberAccess	heap -> Blocks		6503495	0					
ANR	6503813	Identifier	heap		6503495	0					
ANR	6503814	Identifier	Blocks		6503495	1					
ANR	6503815	Identifier	blocks		6503495	1					
ANR	6503816	ExpressionStatement	heap -> BlockCount = count	749:3:24206:24230	6503495	2	True				
ANR	6503817	AssignmentExpression	heap -> BlockCount = count		6503495	0		=			
ANR	6503818	PtrMemberAccess	heap -> BlockCount		6503495	0					
ANR	6503819	Identifier	heap		6503495	0					
ANR	6503820	Identifier	BlockCount		6503495	1					
ANR	6503821	Identifier	count		6503495	1					
ANR	6503822	IfStatement	if ( ! ret )		6503495	3					
ANR	6503823	Condition	! ret	750:7:24239:24242	6503495	0	True				
ANR	6503824	UnaryOperationExpression	! ret		6503495	0					
ANR	6503825	UnaryOperator	!		6503495	0					
ANR	6503826	Identifier	ret		6503495	1					
ANR	6503827	CompoundStatement		57:13:1579:1579	6503495	1					
ANR	6503828	GotoStatement	goto err ;	751:4:24251:24259	6503495	0	True				
ANR	6503829	Identifier	err		6503495	0					
ANR	6503830	ContinueStatement	continue ;	753:3:24269:24277	6503495	4	True				
ANR	6503831	IdentifierDeclStatement	"PLIST_ENTRY fentry = ( PVOID ) ( ( WPARAM ) heapHeader . BaseAddress + offsetof ( HEAP , VirtualAllocdBlocks ) ) ;"	757:2:24313:24412	6503495	12	True				
ANR	6503832	IdentifierDecl	"fentry = ( PVOID ) ( ( WPARAM ) heapHeader . BaseAddress + offsetof ( HEAP , VirtualAllocdBlocks ) )"		6503495	0					
ANR	6503833	IdentifierDeclType	PLIST_ENTRY		6503495	0					
ANR	6503834	Identifier	fentry		6503495	1					
ANR	6503835	AssignmentExpression	"fentry = ( PVOID ) ( ( WPARAM ) heapHeader . BaseAddress + offsetof ( HEAP , VirtualAllocdBlocks ) )"		6503495	2		=			
ANR	6503836	Identifier	fentry		6503495	0					
ANR	6503837	CastExpression	"( PVOID ) ( ( WPARAM ) heapHeader . BaseAddress + offsetof ( HEAP , VirtualAllocdBlocks ) )"		6503495	1					
ANR	6503838	CastTarget	PVOID		6503495	0					
ANR	6503839	AdditiveExpression	"( WPARAM ) heapHeader . BaseAddress + offsetof ( HEAP , VirtualAllocdBlocks )"		6503495	1		+			
ANR	6503840	CastExpression	( WPARAM ) heapHeader . BaseAddress		6503495	0					
ANR	6503841	CastTarget	WPARAM		6503495	0					
ANR	6503842	MemberAccess	heapHeader . BaseAddress		6503495	1					
ANR	6503843	Identifier	heapHeader		6503495	0					
ANR	6503844	Identifier	BaseAddress		6503495	1					
ANR	6503845	CallExpression	"offsetof ( HEAP , VirtualAllocdBlocks )"		6503495	1					
ANR	6503846	Callee	offsetof		6503495	0					
ANR	6503847	Identifier	offsetof		6503495	0					
ANR	6503848	ArgumentList	HEAP		6503495	1					
ANR	6503849	Argument	HEAP		6503495	0					
ANR	6503850	Identifier	HEAP		6503495	0					
ANR	6503851	Argument	VirtualAllocdBlocks		6503495	1					
ANR	6503852	Identifier	VirtualAllocdBlocks		6503495	0					
ANR	6503853	IdentifierDeclStatement	PLIST_ENTRY entry = heapHeader . VirtualAllocdBlocks . Flink ;	758:2:24416:24472	6503495	13	True				
ANR	6503854	IdentifierDecl	entry = heapHeader . VirtualAllocdBlocks . Flink		6503495	0					
ANR	6503855	IdentifierDeclType	PLIST_ENTRY		6503495	0					
ANR	6503856	Identifier	entry		6503495	1					
ANR	6503857	AssignmentExpression	entry = heapHeader . VirtualAllocdBlocks . Flink		6503495	2		=			
ANR	6503858	Identifier	entry		6503495	0					
ANR	6503859	MemberAccess	heapHeader . VirtualAllocdBlocks . Flink		6503495	1					
ANR	6503860	MemberAccess	heapHeader . VirtualAllocdBlocks		6503495	0					
ANR	6503861	Identifier	heapHeader		6503495	0					
ANR	6503862	Identifier	VirtualAllocdBlocks		6503495	1					
ANR	6503863	Identifier	Flink		6503495	1					
ANR	6503864	WhileStatement	while ( entry && ( entry != fentry ) )		6503495	14					
ANR	6503865	Condition	entry && ( entry != fentry )	759:9:24483:24508	6503495	0	True				
ANR	6503866	AndExpression	entry && ( entry != fentry )		6503495	0		&&			
ANR	6503867	Identifier	entry		6503495	0					
ANR	6503868	EqualityExpression	entry != fentry		6503495	1		!=			
ANR	6503869	Identifier	entry		6503495	0					
ANR	6503870	Identifier	fentry		6503495	1					
ANR	6503871	CompoundStatement		74:3:2231:2286	6503495	1					
ANR	6503872	IdentifierDeclStatement	HEAP_VIRTUAL_ALLOC_ENTRY vAlloc ;	760:3:24516:24547	6503495	0	True				
ANR	6503873	IdentifierDecl	vAlloc		6503495	0					
ANR	6503874	IdentifierDeclType	HEAP_VIRTUAL_ALLOC_ENTRY		6503495	0					
ANR	6503875	Identifier	vAlloc		6503495	1					
ANR	6503876	ExpressionStatement	"ReadProcessMemory ( h_proc , entry , & vAlloc , sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) , & bytesRead )"	761:3:24552:24641	6503495	1	True				
ANR	6503877	CallExpression	"ReadProcessMemory ( h_proc , entry , & vAlloc , sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) , & bytesRead )"		6503495	0					
ANR	6503878	Callee	ReadProcessMemory		6503495	0					
ANR	6503879	Identifier	ReadProcessMemory		6503495	0					
ANR	6503880	ArgumentList	h_proc		6503495	1					
ANR	6503881	Argument	h_proc		6503495	0					
ANR	6503882	Identifier	h_proc		6503495	0					
ANR	6503883	Argument	entry		6503495	1					
ANR	6503884	Identifier	entry		6503495	0					
ANR	6503885	Argument	& vAlloc		6503495	2					
ANR	6503886	UnaryOperationExpression	& vAlloc		6503495	0					
ANR	6503887	UnaryOperator	&		6503495	0					
ANR	6503888	Identifier	vAlloc		6503495	1					
ANR	6503889	Argument	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6503495	3					
ANR	6503890	SizeofExpression	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6503495	0					
ANR	6503891	Sizeof	sizeof		6503495	0					
ANR	6503892	SizeofOperand	HEAP_VIRTUAL_ALLOC_ENTRY		6503495	1					
ANR	6503893	Argument	& bytesRead		6503495	4					
ANR	6503894	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6503895	UnaryOperator	&		6503495	0					
ANR	6503896	Identifier	bytesRead		6503495	1					
ANR	6503897	ExpressionStatement	"DecodeHeapEntry ( dbg , & heapHeader , & vAlloc . BusyBlock )"	762:3:24646:24699	6503495	2	True				
ANR	6503898	CallExpression	"DecodeHeapEntry ( dbg , & heapHeader , & vAlloc . BusyBlock )"		6503495	0					
ANR	6503899	Callee	DecodeHeapEntry		6503495	0					
ANR	6503900	Identifier	DecodeHeapEntry		6503495	0					
ANR	6503901	ArgumentList	dbg		6503495	1					
ANR	6503902	Argument	dbg		6503495	0					
ANR	6503903	Identifier	dbg		6503495	0					
ANR	6503904	Argument	& heapHeader		6503495	1					
ANR	6503905	UnaryOperationExpression	& heapHeader		6503495	0					
ANR	6503906	UnaryOperator	&		6503495	0					
ANR	6503907	Identifier	heapHeader		6503495	1					
ANR	6503908	Argument	& vAlloc . BusyBlock		6503495	2					
ANR	6503909	UnaryOperationExpression	& vAlloc . BusyBlock		6503495	0					
ANR	6503910	UnaryOperator	&		6503495	0					
ANR	6503911	MemberAccess	vAlloc . BusyBlock		6503495	1					
ANR	6503912	Identifier	vAlloc		6503495	0					
ANR	6503913	Identifier	BusyBlock		6503495	1					
ANR	6503914	ExpressionStatement	GROW_BLOCKS ( )	763:3:24704:24718	6503495	3	True				
ANR	6503915	CallExpression	GROW_BLOCKS ( )		6503495	0					
ANR	6503916	Callee	GROW_BLOCKS		6503495	0					
ANR	6503917	Identifier	GROW_BLOCKS		6503495	0					
ANR	6503918	ArgumentList			6503495	1					
ANR	6503919	ExpressionStatement	blocks [ count ] . address = ( WPARAM ) entry	764:3:24723:24760	6503495	4	True				
ANR	6503920	AssignmentExpression	blocks [ count ] . address = ( WPARAM ) entry		6503495	0		=			
ANR	6503921	MemberAccess	blocks [ count ] . address		6503495	0					
ANR	6503922	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6503923	Identifier	blocks		6503495	0					
ANR	6503924	Identifier	count		6503495	1					
ANR	6503925	Identifier	address		6503495	1					
ANR	6503926	CastExpression	( WPARAM ) entry		6503495	1					
ANR	6503927	CastTarget	WPARAM		6503495	0					
ANR	6503928	Identifier	entry		6503495	1					
ANR	6503929	ExpressionStatement	blocks [ count ] . flags = 1 | ( vAlloc . BusyBlock . Flags | NT_BLOCK | LARGE_BLOCK ) & ~2ULL	765:3:24765:24848	6503495	5	True				
ANR	6503930	AssignmentExpression	blocks [ count ] . flags = 1 | ( vAlloc . BusyBlock . Flags | NT_BLOCK | LARGE_BLOCK ) & ~2ULL		6503495	0		=			
ANR	6503931	MemberAccess	blocks [ count ] . flags		6503495	0					
ANR	6503932	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6503933	Identifier	blocks		6503495	0					
ANR	6503934	Identifier	count		6503495	1					
ANR	6503935	Identifier	flags		6503495	1					
ANR	6503936	InclusiveOrExpression	1 | ( vAlloc . BusyBlock . Flags | NT_BLOCK | LARGE_BLOCK ) & ~2ULL		6503495	1		|			
ANR	6503937	PrimaryExpression	1		6503495	0					
ANR	6503938	BitAndExpression	( vAlloc . BusyBlock . Flags | NT_BLOCK | LARGE_BLOCK ) & ~2ULL		6503495	1		&			
ANR	6503939	InclusiveOrExpression	vAlloc . BusyBlock . Flags | NT_BLOCK | LARGE_BLOCK		6503495	0		|			
ANR	6503940	MemberAccess	vAlloc . BusyBlock . Flags		6503495	0					
ANR	6503941	MemberAccess	vAlloc . BusyBlock		6503495	0					
ANR	6503942	Identifier	vAlloc		6503495	0					
ANR	6503943	Identifier	BusyBlock		6503495	1					
ANR	6503944	Identifier	Flags		6503495	1					
ANR	6503945	InclusiveOrExpression	NT_BLOCK | LARGE_BLOCK		6503495	1		|			
ANR	6503946	Identifier	NT_BLOCK		6503495	0					
ANR	6503947	Identifier	LARGE_BLOCK		6503495	1					
ANR	6503948	Identifier	~2ULL		6503495	1					
ANR	6503949	ExpressionStatement	blocks [ count ] . size = vAlloc . ReserveSize	766:3:24853:24892	6503495	6	True				
ANR	6503950	AssignmentExpression	blocks [ count ] . size = vAlloc . ReserveSize		6503495	0		=			
ANR	6503951	MemberAccess	blocks [ count ] . size		6503495	0					
ANR	6503952	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6503953	Identifier	blocks		6503495	0					
ANR	6503954	Identifier	count		6503495	1					
ANR	6503955	Identifier	size		6503495	1					
ANR	6503956	MemberAccess	vAlloc . ReserveSize		6503495	1					
ANR	6503957	Identifier	vAlloc		6503495	0					
ANR	6503958	Identifier	ReserveSize		6503495	1					
ANR	6503959	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	767:3:24897:24952	6503495	7	True				
ANR	6503960	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6503495	0					
ANR	6503961	IdentifierDeclType	PHeapBlockExtraInfo		6503495	0					
ANR	6503962	Identifier	extra		6503495	1					
ANR	6503963	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6503495	2		=			
ANR	6503964	Identifier	extra		6503495	0					
ANR	6503965	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6503495	1					
ANR	6503966	Callee	R_NEW0		6503495	0					
ANR	6503967	Identifier	R_NEW0		6503495	0					
ANR	6503968	ArgumentList	HeapBlockExtraInfo		6503495	1					
ANR	6503969	Argument	HeapBlockExtraInfo		6503495	0					
ANR	6503970	Identifier	HeapBlockExtraInfo		6503495	0					
ANR	6503971	IfStatement	if ( ! extra )		6503495	8					
ANR	6503972	Condition	! extra	768:7:24961:24966	6503495	0	True				
ANR	6503973	UnaryOperationExpression	! extra		6503495	0					
ANR	6503974	UnaryOperator	!		6503495	0					
ANR	6503975	Identifier	extra		6503495	1					
ANR	6503976	CompoundStatement		75:15:2303:2303	6503495	1					
ANR	6503977	GotoStatement	goto err ;	769:4:24975:24983	6503495	0	True				
ANR	6503978	Identifier	err		6503495	0					
ANR	6503979	ExpressionStatement	extra -> granularity = sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )	771:3:24993:25047	6503495	9	True				
ANR	6503980	AssignmentExpression	extra -> granularity = sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6503495	0		=			
ANR	6503981	PtrMemberAccess	extra -> granularity		6503495	0					
ANR	6503982	Identifier	extra		6503495	0					
ANR	6503983	Identifier	granularity		6503495	1					
ANR	6503984	SizeofExpression	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6503495	1					
ANR	6503985	Sizeof	sizeof		6503495	0					
ANR	6503986	SizeofOperand	HEAP_VIRTUAL_ALLOC_ENTRY		6503495	1					
ANR	6503987	ExpressionStatement	extra -> unusedBytes = vAlloc . ReserveSize - vAlloc . CommitSize	772:3:25052:25111	6503495	10	True				
ANR	6503988	AssignmentExpression	extra -> unusedBytes = vAlloc . ReserveSize - vAlloc . CommitSize		6503495	0		=			
ANR	6503989	PtrMemberAccess	extra -> unusedBytes		6503495	0					
ANR	6503990	Identifier	extra		6503495	0					
ANR	6503991	Identifier	unusedBytes		6503495	1					
ANR	6503992	AdditiveExpression	vAlloc . ReserveSize - vAlloc . CommitSize		6503495	1		-			
ANR	6503993	MemberAccess	vAlloc . ReserveSize		6503495	0					
ANR	6503994	Identifier	vAlloc		6503495	0					
ANR	6503995	Identifier	ReserveSize		6503495	1					
ANR	6503996	MemberAccess	vAlloc . CommitSize		6503495	1					
ANR	6503997	Identifier	vAlloc		6503495	0					
ANR	6503998	Identifier	CommitSize		6503495	1					
ANR	6503999	ExpressionStatement	blocks [ count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	773:3:25116:25164	6503495	11	True				
ANR	6504000	AssignmentExpression	blocks [ count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6503495	0		=			
ANR	6504001	MemberAccess	blocks [ count ] . extra		6503495	0					
ANR	6504002	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504003	Identifier	blocks		6503495	0					
ANR	6504004	Identifier	count		6503495	1					
ANR	6504005	Identifier	extra		6503495	1					
ANR	6504006	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6503495	1		|			
ANR	6504007	Identifier	EXTRA_FLAG		6503495	0					
ANR	6504008	CastExpression	( WPARAM ) extra		6503495	1					
ANR	6504009	CastTarget	WPARAM		6503495	0					
ANR	6504010	Identifier	extra		6503495	1					
ANR	6504011	ExpressionStatement	tot_allocated += blocks [ count ] . size - extra -> granularity	774:3:25169:25225	6503495	12	True				
ANR	6504012	AssignmentExpression	tot_allocated += blocks [ count ] . size - extra -> granularity		6503495	0		+=			
ANR	6504013	Identifier	tot_allocated		6503495	0					
ANR	6504014	AdditiveExpression	blocks [ count ] . size - extra -> granularity		6503495	1		-			
ANR	6504015	MemberAccess	blocks [ count ] . size		6503495	0					
ANR	6504016	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504017	Identifier	blocks		6503495	0					
ANR	6504018	Identifier	count		6503495	1					
ANR	6504019	Identifier	size		6503495	1					
ANR	6504020	PtrMemberAccess	extra -> granularity		6503495	1					
ANR	6504021	Identifier	extra		6503495	0					
ANR	6504022	Identifier	granularity		6503495	1					
ANR	6504023	ExpressionStatement	count ++	775:3:25230:25237	6503495	13	True				
ANR	6504024	PostIncDecOperationExpression	count ++		6503495	0					
ANR	6504025	Identifier	count		6503495	0					
ANR	6504026	IncDec	++		6503495	1					
ANR	6504027	ExpressionStatement	entry = vAlloc . Entry . Flink	776:3:25242:25268	6503495	14	True				
ANR	6504028	AssignmentExpression	entry = vAlloc . Entry . Flink		6503495	0		=			
ANR	6504029	Identifier	entry		6503495	0					
ANR	6504030	MemberAccess	vAlloc . Entry . Flink		6503495	1					
ANR	6504031	MemberAccess	vAlloc . Entry		6503495	0					
ANR	6504032	Identifier	vAlloc		6503495	0					
ANR	6504033	Identifier	Entry		6503495	1					
ANR	6504034	Identifier	Flink		6503495	1					
ANR	6504035	IfStatement	if ( heapHeader . FrontEndHeap && heapHeader . FrontEndHeapType == 0x2 )		6503495	15					
ANR	6504036	Condition	heapHeader . FrontEndHeap && heapHeader . FrontEndHeapType == 0x2	780:6:25300:25360	6503495	0	True				
ANR	6504037	AndExpression	heapHeader . FrontEndHeap && heapHeader . FrontEndHeapType == 0x2		6503495	0		&&			
ANR	6504038	MemberAccess	heapHeader . FrontEndHeap		6503495	0					
ANR	6504039	Identifier	heapHeader		6503495	0					
ANR	6504040	Identifier	FrontEndHeap		6503495	1					
ANR	6504041	EqualityExpression	heapHeader . FrontEndHeapType == 0x2		6503495	1		==			
ANR	6504042	MemberAccess	heapHeader . FrontEndHeapType		6503495	0					
ANR	6504043	Identifier	heapHeader		6503495	0					
ANR	6504044	Identifier	FrontEndHeapType		6503495	1					
ANR	6504045	PrimaryExpression	0x2		6503495	1					
ANR	6504046	CompoundStatement		94:3:2891:3005	6503495	1					
ANR	6504047	IdentifierDeclStatement	LFH_HEAP lfhHeader ;	781:3:25368:25386	6503495	0	True				
ANR	6504048	IdentifierDecl	lfhHeader		6503495	0					
ANR	6504049	IdentifierDeclType	LFH_HEAP		6503495	0					
ANR	6504050	Identifier	lfhHeader		6503495	1					
ANR	6504051	IfStatement	"if ( ! ReadProcessMemory ( h_proc , heapHeader . FrontEndHeap , & lfhHeader , sizeof ( LFH_HEAP ) , & bytesRead ) )"		6503495	1					
ANR	6504052	Condition	"! ReadProcessMemory ( h_proc , heapHeader . FrontEndHeap , & lfhHeader , sizeof ( LFH_HEAP ) , & bytesRead )"	782:7:25395:25489	6503495	0	True				
ANR	6504053	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , heapHeader . FrontEndHeap , & lfhHeader , sizeof ( LFH_HEAP ) , & bytesRead )"		6503495	0					
ANR	6504054	UnaryOperator	!		6503495	0					
ANR	6504055	CallExpression	"ReadProcessMemory ( h_proc , heapHeader . FrontEndHeap , & lfhHeader , sizeof ( LFH_HEAP ) , & bytesRead )"		6503495	1					
ANR	6504056	Callee	ReadProcessMemory		6503495	0					
ANR	6504057	Identifier	ReadProcessMemory		6503495	0					
ANR	6504058	ArgumentList	h_proc		6503495	1					
ANR	6504059	Argument	h_proc		6503495	0					
ANR	6504060	Identifier	h_proc		6503495	0					
ANR	6504061	Argument	heapHeader . FrontEndHeap		6503495	1					
ANR	6504062	MemberAccess	heapHeader . FrontEndHeap		6503495	0					
ANR	6504063	Identifier	heapHeader		6503495	0					
ANR	6504064	Identifier	FrontEndHeap		6503495	1					
ANR	6504065	Argument	& lfhHeader		6503495	2					
ANR	6504066	UnaryOperationExpression	& lfhHeader		6503495	0					
ANR	6504067	UnaryOperator	&		6503495	0					
ANR	6504068	Identifier	lfhHeader		6503495	1					
ANR	6504069	Argument	sizeof ( LFH_HEAP )		6503495	3					
ANR	6504070	SizeofExpression	sizeof ( LFH_HEAP )		6503495	0					
ANR	6504071	Sizeof	sizeof		6503495	0					
ANR	6504072	SizeofOperand	LFH_HEAP		6503495	1					
ANR	6504073	Argument	& bytesRead		6503495	4					
ANR	6504074	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504075	UnaryOperator	&		6503495	0					
ANR	6504076	Identifier	bytesRead		6503495	1					
ANR	6504077	CompoundStatement		89:104:2826:2826	6503495	1					
ANR	6504078	ExpressionStatement	"r_sys_perror ( ""ReadProcessMemory"" )"	783:4:25498:25532	6503495	0	True				
ANR	6504079	CallExpression	"r_sys_perror ( ""ReadProcessMemory"" )"		6503495	0					
ANR	6504080	Callee	r_sys_perror		6503495	0					
ANR	6504081	Identifier	r_sys_perror		6503495	0					
ANR	6504082	ArgumentList	"""ReadProcessMemory"""		6503495	1					
ANR	6504083	Argument	"""ReadProcessMemory"""		6503495	0					
ANR	6504084	PrimaryExpression	"""ReadProcessMemory"""		6503495	0					
ANR	6504085	GotoStatement	goto err ;	784:4:25538:25546	6503495	1	True				
ANR	6504086	Identifier	err		6503495	0					
ANR	6504087	IdentifierDeclStatement	"PLIST_ENTRY curEntry , firstEntry = ( PVOID ) ( ( WPARAM ) heapHeader . FrontEndHeap + offsetof ( LFH_HEAP , SubSegmentZones ) ) ;"	787:3:25557:25671	6503495	2	True				
ANR	6504088	IdentifierDecl	curEntry		6503495	0					
ANR	6504089	IdentifierDeclType	PLIST_ENTRY		6503495	0					
ANR	6504090	Identifier	curEntry		6503495	1					
ANR	6504091	IdentifierDecl	"firstEntry = ( PVOID ) ( ( WPARAM ) heapHeader . FrontEndHeap + offsetof ( LFH_HEAP , SubSegmentZones ) )"		6503495	1					
ANR	6504092	IdentifierDeclType	PLIST_ENTRY		6503495	0					
ANR	6504093	Identifier	firstEntry		6503495	1					
ANR	6504094	AssignmentExpression	"firstEntry = ( PVOID ) ( ( WPARAM ) heapHeader . FrontEndHeap + offsetof ( LFH_HEAP , SubSegmentZones ) )"		6503495	2		=			
ANR	6504095	Identifier	firstEntry		6503495	0					
ANR	6504096	CastExpression	"( PVOID ) ( ( WPARAM ) heapHeader . FrontEndHeap + offsetof ( LFH_HEAP , SubSegmentZones ) )"		6503495	1					
ANR	6504097	CastTarget	PVOID		6503495	0					
ANR	6504098	AdditiveExpression	"( WPARAM ) heapHeader . FrontEndHeap + offsetof ( LFH_HEAP , SubSegmentZones )"		6503495	1		+			
ANR	6504099	CastExpression	( WPARAM ) heapHeader . FrontEndHeap		6503495	0					
ANR	6504100	CastTarget	WPARAM		6503495	0					
ANR	6504101	MemberAccess	heapHeader . FrontEndHeap		6503495	1					
ANR	6504102	Identifier	heapHeader		6503495	0					
ANR	6504103	Identifier	FrontEndHeap		6503495	1					
ANR	6504104	CallExpression	"offsetof ( LFH_HEAP , SubSegmentZones )"		6503495	1					
ANR	6504105	Callee	offsetof		6503495	0					
ANR	6504106	Identifier	offsetof		6503495	0					
ANR	6504107	ArgumentList	LFH_HEAP		6503495	1					
ANR	6504108	Argument	LFH_HEAP		6503495	0					
ANR	6504109	Identifier	LFH_HEAP		6503495	0					
ANR	6504110	Argument	SubSegmentZones		6503495	1					
ANR	6504111	Identifier	SubSegmentZones		6503495	0					
ANR	6504112	ExpressionStatement	curEntry = lfhHeader . SubSegmentZones . Flink	788:3:25676:25718	6503495	3	True				
ANR	6504113	AssignmentExpression	curEntry = lfhHeader . SubSegmentZones . Flink		6503495	0		=			
ANR	6504114	Identifier	curEntry		6503495	0					
ANR	6504115	MemberAccess	lfhHeader . SubSegmentZones . Flink		6503495	1					
ANR	6504116	MemberAccess	lfhHeader . SubSegmentZones		6503495	0					
ANR	6504117	Identifier	lfhHeader		6503495	0					
ANR	6504118	Identifier	SubSegmentZones		6503495	1					
ANR	6504119	Identifier	Flink		6503495	1					
ANR	6504120	DoStatement	do		6503495	4					
ANR	6504121	CompoundStatement		164:4:5880:5896	6503495	0					
ANR	6504122	IdentifierDeclStatement	HEAP_LOCAL_SEGMENT_INFO info ;	792:4:25803:25831	6503495	0	True				
ANR	6504123	IdentifierDecl	info		6503495	0					
ANR	6504124	IdentifierDeclType	HEAP_LOCAL_SEGMENT_INFO		6503495	0					
ANR	6504125	Identifier	info		6503495	1					
ANR	6504126	IdentifierDeclStatement	HEAP_LOCAL_DATA localData ;	793:4:25837:25862	6503495	1	True				
ANR	6504127	IdentifierDecl	localData		6503495	0					
ANR	6504128	IdentifierDeclType	HEAP_LOCAL_DATA		6503495	0					
ANR	6504129	Identifier	localData		6503495	1					
ANR	6504130	IdentifierDeclStatement	HEAP_SUBSEGMENT subsegment ;	794:4:25868:25894	6503495	2	True				
ANR	6504131	IdentifierDecl	subsegment		6503495	0					
ANR	6504132	IdentifierDeclType	HEAP_SUBSEGMENT		6503495	0					
ANR	6504133	Identifier	subsegment		6503495	1					
ANR	6504134	IdentifierDeclStatement	HEAP_USERDATA_HEADER userdata ;	795:4:25900:25929	6503495	3	True				
ANR	6504135	IdentifierDecl	userdata		6503495	0					
ANR	6504136	IdentifierDeclType	HEAP_USERDATA_HEADER		6503495	0					
ANR	6504137	Identifier	userdata		6503495	1					
ANR	6504138	IdentifierDeclStatement	LFH_BLOCK_ZONE blockZone ;	796:4:25935:25959	6503495	4	True				
ANR	6504139	IdentifierDecl	blockZone		6503495	0					
ANR	6504140	IdentifierDeclType	LFH_BLOCK_ZONE		6503495	0					
ANR	6504141	Identifier	blockZone		6503495	1					
ANR	6504142	IdentifierDeclStatement	WPARAM curSubsegment = ( WPARAM ) ( curEntry + 2 ) ;	798:4:25966:26011	6503495	5	True				
ANR	6504143	IdentifierDecl	curSubsegment = ( WPARAM ) ( curEntry + 2 )		6503495	0					
ANR	6504144	IdentifierDeclType	WPARAM		6503495	0					
ANR	6504145	Identifier	curSubsegment		6503495	1					
ANR	6504146	AssignmentExpression	curSubsegment = ( WPARAM ) ( curEntry + 2 )		6503495	2		=			
ANR	6504147	Identifier	curSubsegment		6503495	0					
ANR	6504148	CastExpression	( WPARAM ) ( curEntry + 2 )		6503495	1					
ANR	6504149	CastTarget	WPARAM		6503495	0					
ANR	6504150	AdditiveExpression	curEntry + 2		6503495	1		+			
ANR	6504151	Identifier	curEntry		6503495	0					
ANR	6504152	PrimaryExpression	2		6503495	1					
ANR	6504153	IdentifierDeclStatement	int next = 0 ;	799:4:26017:26029	6503495	6	True				
ANR	6504154	IdentifierDecl	next = 0		6503495	0					
ANR	6504155	IdentifierDeclType	int		6503495	0					
ANR	6504156	Identifier	next		6503495	1					
ANR	6504157	AssignmentExpression	next = 0		6503495	2		=			
ANR	6504158	Identifier	next		6503495	0					
ANR	6504159	PrimaryExpression	0		6503495	1					
ANR	6504160	DoStatement	do		6503495	7					
ANR	6504161	CompoundStatement		129:5:4630:4645	6503495	0					
ANR	6504162	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) curSubsegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , & bytesRead ) || ! subsegment . BlockSize || ! ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead ) )"		6503495	0					
ANR	6504163	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) curSubsegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , & bytesRead ) || ! subsegment . BlockSize || ! ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"	801:9:26081:26531	6503495	0	True				
ANR	6504164	OrExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) curSubsegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , & bytesRead ) || ! subsegment . BlockSize || ! ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"		6503495	0		||			
ANR	6504165	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) curSubsegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , & bytesRead )"		6503495	0					
ANR	6504166	UnaryOperator	!		6503495	0					
ANR	6504167	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) curSubsegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , & bytesRead )"		6503495	1					
ANR	6504168	Callee	ReadProcessMemory		6503495	0					
ANR	6504169	Identifier	ReadProcessMemory		6503495	0					
ANR	6504170	ArgumentList	h_proc		6503495	1					
ANR	6504171	Argument	h_proc		6503495	0					
ANR	6504172	Identifier	h_proc		6503495	0					
ANR	6504173	Argument	( PVOID ) curSubsegment		6503495	1					
ANR	6504174	CastExpression	( PVOID ) curSubsegment		6503495	0					
ANR	6504175	CastTarget	PVOID		6503495	0					
ANR	6504176	Identifier	curSubsegment		6503495	1					
ANR	6504177	Argument	& subsegment		6503495	2					
ANR	6504178	UnaryOperationExpression	& subsegment		6503495	0					
ANR	6504179	UnaryOperator	&		6503495	0					
ANR	6504180	Identifier	subsegment		6503495	1					
ANR	6504181	Argument	sizeof ( HEAP_SUBSEGMENT )		6503495	3					
ANR	6504182	SizeofExpression	sizeof ( HEAP_SUBSEGMENT )		6503495	0					
ANR	6504183	Sizeof	sizeof		6503495	0					
ANR	6504184	SizeofOperand	HEAP_SUBSEGMENT		6503495	1					
ANR	6504185	Argument	& bytesRead		6503495	4					
ANR	6504186	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504187	UnaryOperator	&		6503495	0					
ANR	6504188	Identifier	bytesRead		6503495	1					
ANR	6504189	OrExpression	"! subsegment . BlockSize || ! ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"		6503495	1		||			
ANR	6504190	UnaryOperationExpression	! subsegment . BlockSize		6503495	0					
ANR	6504191	UnaryOperator	!		6503495	0					
ANR	6504192	MemberAccess	subsegment . BlockSize		6503495	1					
ANR	6504193	Identifier	subsegment		6503495	0					
ANR	6504194	Identifier	BlockSize		6503495	1					
ANR	6504195	OrExpression	"! ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"		6503495	1		||			
ANR	6504196	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead )"		6503495	0					
ANR	6504197	UnaryOperator	!		6503495	0					
ANR	6504198	CallExpression	"ReadProcessMemory ( h_proc , subsegment . LocalInfo , & info , sizeof ( HEAP_LOCAL_SEGMENT_INFO ) , & bytesRead )"		6503495	1					
ANR	6504199	Callee	ReadProcessMemory		6503495	0					
ANR	6504200	Identifier	ReadProcessMemory		6503495	0					
ANR	6504201	ArgumentList	h_proc		6503495	1					
ANR	6504202	Argument	h_proc		6503495	0					
ANR	6504203	Identifier	h_proc		6503495	0					
ANR	6504204	Argument	subsegment . LocalInfo		6503495	1					
ANR	6504205	MemberAccess	subsegment . LocalInfo		6503495	0					
ANR	6504206	Identifier	subsegment		6503495	0					
ANR	6504207	Identifier	LocalInfo		6503495	1					
ANR	6504208	Argument	& info		6503495	2					
ANR	6504209	UnaryOperationExpression	& info		6503495	0					
ANR	6504210	UnaryOperator	&		6503495	0					
ANR	6504211	Identifier	info		6503495	1					
ANR	6504212	Argument	sizeof ( HEAP_LOCAL_SEGMENT_INFO )		6503495	3					
ANR	6504213	SizeofExpression	sizeof ( HEAP_LOCAL_SEGMENT_INFO )		6503495	0					
ANR	6504214	Sizeof	sizeof		6503495	0					
ANR	6504215	SizeofOperand	HEAP_LOCAL_SEGMENT_INFO		6503495	1					
ANR	6504216	Argument	& bytesRead		6503495	4					
ANR	6504217	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504218	UnaryOperator	&		6503495	0					
ANR	6504219	Identifier	bytesRead		6503495	1					
ANR	6504220	OrExpression	"! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead ) || ! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"		6503495	1		||			
ANR	6504221	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead )"		6503495	0					
ANR	6504222	UnaryOperator	!		6503495	0					
ANR	6504223	CallExpression	"ReadProcessMemory ( h_proc , info . LocalData , & localData , sizeof ( HEAP_LOCAL_DATA ) , & bytesRead )"		6503495	1					
ANR	6504224	Callee	ReadProcessMemory		6503495	0					
ANR	6504225	Identifier	ReadProcessMemory		6503495	0					
ANR	6504226	ArgumentList	h_proc		6503495	1					
ANR	6504227	Argument	h_proc		6503495	0					
ANR	6504228	Identifier	h_proc		6503495	0					
ANR	6504229	Argument	info . LocalData		6503495	1					
ANR	6504230	MemberAccess	info . LocalData		6503495	0					
ANR	6504231	Identifier	info		6503495	0					
ANR	6504232	Identifier	LocalData		6503495	1					
ANR	6504233	Argument	& localData		6503495	2					
ANR	6504234	UnaryOperationExpression	& localData		6503495	0					
ANR	6504235	UnaryOperator	&		6503495	0					
ANR	6504236	Identifier	localData		6503495	1					
ANR	6504237	Argument	sizeof ( HEAP_LOCAL_DATA )		6503495	3					
ANR	6504238	SizeofExpression	sizeof ( HEAP_LOCAL_DATA )		6503495	0					
ANR	6504239	Sizeof	sizeof		6503495	0					
ANR	6504240	SizeofOperand	HEAP_LOCAL_DATA		6503495	1					
ANR	6504241	Argument	& bytesRead		6503495	4					
ANR	6504242	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504243	UnaryOperator	&		6503495	0					
ANR	6504244	Identifier	bytesRead		6503495	1					
ANR	6504245	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"		6503495	1					
ANR	6504246	UnaryOperator	!		6503495	0					
ANR	6504247	CallExpression	"ReadProcessMemory ( h_proc , localData . CrtZone , & blockZone , sizeof ( LFH_BLOCK_ZONE ) , & bytesRead )"		6503495	1					
ANR	6504248	Callee	ReadProcessMemory		6503495	0					
ANR	6504249	Identifier	ReadProcessMemory		6503495	0					
ANR	6504250	ArgumentList	h_proc		6503495	1					
ANR	6504251	Argument	h_proc		6503495	0					
ANR	6504252	Identifier	h_proc		6503495	0					
ANR	6504253	Argument	localData . CrtZone		6503495	1					
ANR	6504254	MemberAccess	localData . CrtZone		6503495	0					
ANR	6504255	Identifier	localData		6503495	0					
ANR	6504256	Identifier	CrtZone		6503495	1					
ANR	6504257	Argument	& blockZone		6503495	2					
ANR	6504258	UnaryOperationExpression	& blockZone		6503495	0					
ANR	6504259	UnaryOperator	&		6503495	0					
ANR	6504260	Identifier	blockZone		6503495	1					
ANR	6504261	Argument	sizeof ( LFH_BLOCK_ZONE )		6503495	3					
ANR	6504262	SizeofExpression	sizeof ( LFH_BLOCK_ZONE )		6503495	0					
ANR	6504263	Sizeof	sizeof		6503495	0					
ANR	6504264	SizeofOperand	LFH_BLOCK_ZONE		6503495	1					
ANR	6504265	Argument	& bytesRead		6503495	4					
ANR	6504266	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504267	UnaryOperator	&		6503495	0					
ANR	6504268	Identifier	bytesRead		6503495	1					
ANR	6504269	CompoundStatement		112:106:3868:3868	6503495	1					
ANR	6504270	BreakStatement	break ;	806:6:26542:26547	6503495	0	True				
ANR	6504271	IfStatement	if ( ! subsegment . UserBlocks || ! subsegment . BlockSize )		6503495	1					
ANR	6504272	Condition	! subsegment . UserBlocks || ! subsegment . BlockSize	809:9:26566:26612	6503495	0	True				
ANR	6504273	OrExpression	! subsegment . UserBlocks || ! subsegment . BlockSize		6503495	0		||			
ANR	6504274	UnaryOperationExpression	! subsegment . UserBlocks		6503495	0					
ANR	6504275	UnaryOperator	!		6503495	0					
ANR	6504276	MemberAccess	subsegment . UserBlocks		6503495	1					
ANR	6504277	Identifier	subsegment		6503495	0					
ANR	6504278	Identifier	UserBlocks		6503495	1					
ANR	6504279	UnaryOperationExpression	! subsegment . BlockSize		6503495	1					
ANR	6504280	UnaryOperator	!		6503495	0					
ANR	6504281	MemberAccess	subsegment . BlockSize		6503495	1					
ANR	6504282	Identifier	subsegment		6503495	0					
ANR	6504283	Identifier	BlockSize		6503495	1					
ANR	6504284	CompoundStatement		116:58:3949:3949	6503495	1					
ANR	6504285	GotoStatement	goto next_subsegment ;	810:6:26623:26643	6503495	0	True				
ANR	6504286	Identifier	next_subsegment		6503495	0					
ANR	6504287	IdentifierDeclStatement	size_t sz = subsegment . BlockSize * sizeof ( HEAP_ENTRY ) ;	813:5:26658:26712	6503495	2	True				
ANR	6504288	IdentifierDecl	sz = subsegment . BlockSize * sizeof ( HEAP_ENTRY )		6503495	0					
ANR	6504289	IdentifierDeclType	size_t		6503495	0					
ANR	6504290	Identifier	sz		6503495	1					
ANR	6504291	AssignmentExpression	sz = subsegment . BlockSize * sizeof ( HEAP_ENTRY )		6503495	2		=			
ANR	6504292	Identifier	sz		6503495	0					
ANR	6504293	MultiplicativeExpression	subsegment . BlockSize * sizeof ( HEAP_ENTRY )		6503495	1		*			
ANR	6504294	MemberAccess	subsegment . BlockSize		6503495	0					
ANR	6504295	Identifier	subsegment		6503495	0					
ANR	6504296	Identifier	BlockSize		6503495	1					
ANR	6504297	SizeofExpression	sizeof ( HEAP_ENTRY )		6503495	1					
ANR	6504298	Sizeof	sizeof		6503495	0					
ANR	6504299	SizeofOperand	HEAP_ENTRY		6503495	1					
ANR	6504300	ExpressionStatement	"ReadProcessMemory ( h_proc , subsegment . UserBlocks , & userdata , sizeof ( HEAP_USERDATA_HEADER ) , & bytesRead )"	814:5:26719:26822	6503495	3	True				
ANR	6504301	CallExpression	"ReadProcessMemory ( h_proc , subsegment . UserBlocks , & userdata , sizeof ( HEAP_USERDATA_HEADER ) , & bytesRead )"		6503495	0					
ANR	6504302	Callee	ReadProcessMemory		6503495	0					
ANR	6504303	Identifier	ReadProcessMemory		6503495	0					
ANR	6504304	ArgumentList	h_proc		6503495	1					
ANR	6504305	Argument	h_proc		6503495	0					
ANR	6504306	Identifier	h_proc		6503495	0					
ANR	6504307	Argument	subsegment . UserBlocks		6503495	1					
ANR	6504308	MemberAccess	subsegment . UserBlocks		6503495	0					
ANR	6504309	Identifier	subsegment		6503495	0					
ANR	6504310	Identifier	UserBlocks		6503495	1					
ANR	6504311	Argument	& userdata		6503495	2					
ANR	6504312	UnaryOperationExpression	& userdata		6503495	0					
ANR	6504313	UnaryOperator	&		6503495	0					
ANR	6504314	Identifier	userdata		6503495	1					
ANR	6504315	Argument	sizeof ( HEAP_USERDATA_HEADER )		6503495	3					
ANR	6504316	SizeofExpression	sizeof ( HEAP_USERDATA_HEADER )		6503495	0					
ANR	6504317	Sizeof	sizeof		6503495	0					
ANR	6504318	SizeofOperand	HEAP_USERDATA_HEADER		6503495	1					
ANR	6504319	Argument	& bytesRead		6503495	4					
ANR	6504320	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504321	UnaryOperator	&		6503495	0					
ANR	6504322	Identifier	bytesRead		6503495	1					
ANR	6504323	ExpressionStatement	userdata . EncodedOffsets . StrideAndOffset ^= PtrToInt ( subsegment . UserBlocks ) ^ PtrToInt ( heapHeader . FrontEndHeap ) ^ ( WPARAM ) lfhKey	815:5:26829:26958	6503495	4	True				
ANR	6504324	AssignmentExpression	userdata . EncodedOffsets . StrideAndOffset ^= PtrToInt ( subsegment . UserBlocks ) ^ PtrToInt ( heapHeader . FrontEndHeap ) ^ ( WPARAM ) lfhKey		6503495	0		^=			
ANR	6504325	MemberAccess	userdata . EncodedOffsets . StrideAndOffset		6503495	0					
ANR	6504326	MemberAccess	userdata . EncodedOffsets		6503495	0					
ANR	6504327	Identifier	userdata		6503495	0					
ANR	6504328	Identifier	EncodedOffsets		6503495	1					
ANR	6504329	Identifier	StrideAndOffset		6503495	1					
ANR	6504330	ExclusiveOrExpression	PtrToInt ( subsegment . UserBlocks ) ^ PtrToInt ( heapHeader . FrontEndHeap ) ^ ( WPARAM ) lfhKey		6503495	1		^			
ANR	6504331	CallExpression	PtrToInt ( subsegment . UserBlocks )		6503495	0					
ANR	6504332	Callee	PtrToInt		6503495	0					
ANR	6504333	Identifier	PtrToInt		6503495	0					
ANR	6504334	ArgumentList	subsegment . UserBlocks		6503495	1					
ANR	6504335	Argument	subsegment . UserBlocks		6503495	0					
ANR	6504336	MemberAccess	subsegment . UserBlocks		6503495	0					
ANR	6504337	Identifier	subsegment		6503495	0					
ANR	6504338	Identifier	UserBlocks		6503495	1					
ANR	6504339	ExclusiveOrExpression	PtrToInt ( heapHeader . FrontEndHeap ) ^ ( WPARAM ) lfhKey		6503495	1		^			
ANR	6504340	CallExpression	PtrToInt ( heapHeader . FrontEndHeap )		6503495	0					
ANR	6504341	Callee	PtrToInt		6503495	0					
ANR	6504342	Identifier	PtrToInt		6503495	0					
ANR	6504343	ArgumentList	heapHeader . FrontEndHeap		6503495	1					
ANR	6504344	Argument	heapHeader . FrontEndHeap		6503495	0					
ANR	6504345	MemberAccess	heapHeader . FrontEndHeap		6503495	0					
ANR	6504346	Identifier	heapHeader		6503495	0					
ANR	6504347	Identifier	FrontEndHeap		6503495	1					
ANR	6504348	CastExpression	( WPARAM ) lfhKey		6503495	1					
ANR	6504349	CastTarget	WPARAM		6503495	0					
ANR	6504350	Identifier	lfhKey		6503495	1					
ANR	6504351	IdentifierDeclStatement	size_t bitmapsz = ( userdata . BusyBitmap . SizeOfBitMap + 8 - userdata . BusyBitmap . SizeOfBitMap % 8 ) / 8 ;	816:5:26965:27064	6503495	5	True				
ANR	6504352	IdentifierDecl	bitmapsz = ( userdata . BusyBitmap . SizeOfBitMap + 8 - userdata . BusyBitmap . SizeOfBitMap % 8 ) / 8		6503495	0					
ANR	6504353	IdentifierDeclType	size_t		6503495	0					
ANR	6504354	Identifier	bitmapsz		6503495	1					
ANR	6504355	AssignmentExpression	bitmapsz = ( userdata . BusyBitmap . SizeOfBitMap + 8 - userdata . BusyBitmap . SizeOfBitMap % 8 ) / 8		6503495	2		=			
ANR	6504356	Identifier	bitmapsz		6503495	0					
ANR	6504357	MultiplicativeExpression	( userdata . BusyBitmap . SizeOfBitMap + 8 - userdata . BusyBitmap . SizeOfBitMap % 8 ) / 8		6503495	1		/			
ANR	6504358	AdditiveExpression	userdata . BusyBitmap . SizeOfBitMap + 8 - userdata . BusyBitmap . SizeOfBitMap % 8		6503495	0		+			
ANR	6504359	MemberAccess	userdata . BusyBitmap . SizeOfBitMap		6503495	0					
ANR	6504360	MemberAccess	userdata . BusyBitmap		6503495	0					
ANR	6504361	Identifier	userdata		6503495	0					
ANR	6504362	Identifier	BusyBitmap		6503495	1					
ANR	6504363	Identifier	SizeOfBitMap		6503495	1					
ANR	6504364	AdditiveExpression	8 - userdata . BusyBitmap . SizeOfBitMap % 8		6503495	1		-			
ANR	6504365	PrimaryExpression	8		6503495	0					
ANR	6504366	MultiplicativeExpression	userdata . BusyBitmap . SizeOfBitMap % 8		6503495	1		%			
ANR	6504367	MemberAccess	userdata . BusyBitmap . SizeOfBitMap		6503495	0					
ANR	6504368	MemberAccess	userdata . BusyBitmap		6503495	0					
ANR	6504369	Identifier	userdata		6503495	0					
ANR	6504370	Identifier	BusyBitmap		6503495	1					
ANR	6504371	Identifier	SizeOfBitMap		6503495	1					
ANR	6504372	PrimaryExpression	8		6503495	1					
ANR	6504373	PrimaryExpression	8		6503495	1					
ANR	6504374	IdentifierDeclStatement	"WPARAM * bitmap = calloc ( bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM ) , 1 ) ;"	817:5:27071:27155	6503495	6	True				
ANR	6504375	IdentifierDecl	"* bitmap = calloc ( bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM ) , 1 )"		6503495	0					
ANR	6504376	IdentifierDeclType	WPARAM *		6503495	0					
ANR	6504377	Identifier	bitmap		6503495	1					
ANR	6504378	AssignmentExpression	"* bitmap = calloc ( bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM ) , 1 )"		6503495	2		=			
ANR	6504379	Identifier	bitmap		6503495	0					
ANR	6504380	CallExpression	"calloc ( bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM ) , 1 )"		6503495	1					
ANR	6504381	Callee	calloc		6503495	0					
ANR	6504382	Identifier	calloc		6503495	0					
ANR	6504383	ArgumentList	bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM )		6503495	1					
ANR	6504384	Argument	bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM )		6503495	0					
ANR	6504385	ConditionalExpression	bitmapsz > sizeof ( WPARAM ) ? bitmapsz : sizeof ( WPARAM )		6503495	0					
ANR	6504386	Condition	bitmapsz > sizeof ( WPARAM )		6503495	0					
ANR	6504387	RelationalExpression	bitmapsz > sizeof ( WPARAM )		6503495	0		>			
ANR	6504388	Identifier	bitmapsz		6503495	0					
ANR	6504389	SizeofExpression	sizeof ( WPARAM )		6503495	1					
ANR	6504390	Sizeof	sizeof		6503495	0					
ANR	6504391	SizeofOperand	WPARAM		6503495	1					
ANR	6504392	Identifier	bitmapsz		6503495	1					
ANR	6504393	SizeofExpression	sizeof ( WPARAM )		6503495	2					
ANR	6504394	Sizeof	sizeof		6503495	0					
ANR	6504395	SizeofOperand	WPARAM		6503495	1					
ANR	6504396	Argument	1		6503495	1					
ANR	6504397	PrimaryExpression	1		6503495	0					
ANR	6504398	IfStatement	if ( ! bitmap )		6503495	7					
ANR	6504399	Condition	! bitmap	818:9:27166:27172	6503495	0	True				
ANR	6504400	UnaryOperationExpression	! bitmap		6503495	0					
ANR	6504401	UnaryOperator	!		6503495	0					
ANR	6504402	Identifier	bitmap		6503495	1					
ANR	6504403	CompoundStatement		125:18:4509:4509	6503495	1					
ANR	6504404	GotoStatement	goto err ;	819:6:27183:27191	6503495	0	True				
ANR	6504405	Identifier	err		6503495	0					
ANR	6504406	ExpressionStatement	"ReadProcessMemory ( h_proc , userdata . BusyBitmap . Buffer , bitmap , bitmapsz , & bytesRead )"	821:5:27205:27289	6503495	8	True				
ANR	6504407	CallExpression	"ReadProcessMemory ( h_proc , userdata . BusyBitmap . Buffer , bitmap , bitmapsz , & bytesRead )"		6503495	0					
ANR	6504408	Callee	ReadProcessMemory		6503495	0					
ANR	6504409	Identifier	ReadProcessMemory		6503495	0					
ANR	6504410	ArgumentList	h_proc		6503495	1					
ANR	6504411	Argument	h_proc		6503495	0					
ANR	6504412	Identifier	h_proc		6503495	0					
ANR	6504413	Argument	userdata . BusyBitmap . Buffer		6503495	1					
ANR	6504414	MemberAccess	userdata . BusyBitmap . Buffer		6503495	0					
ANR	6504415	MemberAccess	userdata . BusyBitmap		6503495	0					
ANR	6504416	Identifier	userdata		6503495	0					
ANR	6504417	Identifier	BusyBitmap		6503495	1					
ANR	6504418	Identifier	Buffer		6503495	1					
ANR	6504419	Argument	bitmap		6503495	2					
ANR	6504420	Identifier	bitmap		6503495	0					
ANR	6504421	Argument	bitmapsz		6503495	3					
ANR	6504422	Identifier	bitmapsz		6503495	0					
ANR	6504423	Argument	& bytesRead		6503495	4					
ANR	6504424	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504425	UnaryOperator	&		6503495	0					
ANR	6504426	Identifier	bytesRead		6503495	1					
ANR	6504427	IdentifierDeclStatement	WPARAM mask = 1 ;	822:5:27296:27311	6503495	9	True				
ANR	6504428	IdentifierDecl	mask = 1		6503495	0					
ANR	6504429	IdentifierDeclType	WPARAM		6503495	0					
ANR	6504430	Identifier	mask		6503495	1					
ANR	6504431	AssignmentExpression	mask = 1		6503495	2		=			
ANR	6504432	Identifier	mask		6503495	0					
ANR	6504433	PrimaryExpression	1		6503495	1					
ANR	6504434	ForStatement	"for ( int j = 0 , offset = 0 ; j < userdata . BusyBitmap . SizeOfBitMap ; j ++ )"		6503495	10					
ANR	6504435	ForInit	"int j = 0 , offset = 0 ;"	824:10:27360:27381	6503495	0	True				
ANR	6504436	IdentifierDeclStatement	"int j = 0 , offset = 0 ;"		6503495	0					
ANR	6504437	IdentifierDecl	j = 0		6503495	0					
ANR	6504438	IdentifierDeclType	int		6503495	0					
ANR	6504439	Identifier	j		6503495	1					
ANR	6504440	AssignmentExpression	j = 0		6503495	2		=			
ANR	6504441	Identifier	j		6503495	0					
ANR	6504442	PrimaryExpression	0		6503495	1					
ANR	6504443	IdentifierDecl	offset = 0		6503495	1					
ANR	6504444	IdentifierDeclType	int		6503495	0					
ANR	6504445	Identifier	offset		6503495	1					
ANR	6504446	AssignmentExpression	offset = 0		6503495	2		=			
ANR	6504447	Identifier	offset		6503495	0					
ANR	6504448	PrimaryExpression	0		6503495	1					
ANR	6504449	Condition	j < userdata . BusyBitmap . SizeOfBitMap	824:33:27383:27418	6503495	1	True				
ANR	6504450	RelationalExpression	j < userdata . BusyBitmap . SizeOfBitMap		6503495	0		<			
ANR	6504451	Identifier	j		6503495	0					
ANR	6504452	MemberAccess	userdata . BusyBitmap . SizeOfBitMap		6503495	1					
ANR	6504453	MemberAccess	userdata . BusyBitmap		6503495	0					
ANR	6504454	Identifier	userdata		6503495	0					
ANR	6504455	Identifier	BusyBitmap		6503495	1					
ANR	6504456	Identifier	SizeOfBitMap		6503495	1					
ANR	6504457	PostIncDecOperationExpression	j ++	824:71:27421:27423	6503495	2	True				
ANR	6504458	Identifier	j		6503495	0					
ANR	6504459	IncDec	++		6503495	1					
ANR	6504460	CompoundStatement		131:76:4760:4760	6503495	3					
ANR	6504461	IfStatement	if ( ! mask )		6503495	0					
ANR	6504462	Condition	! mask	825:10:27438:27442	6503495	0	True				
ANR	6504463	UnaryOperationExpression	! mask		6503495	0					
ANR	6504464	UnaryOperator	!		6503495	0					
ANR	6504465	Identifier	mask		6503495	1					
ANR	6504466	CompoundStatement		132:17:4779:4779	6503495	1					
ANR	6504467	ExpressionStatement	mask = 1	826:7:27454:27462	6503495	0	True				
ANR	6504468	AssignmentExpression	mask = 1		6503495	0		=			
ANR	6504469	Identifier	mask		6503495	0					
ANR	6504470	PrimaryExpression	1		6503495	1					
ANR	6504471	ExpressionStatement	offset ++	827:7:27471:27479	6503495	1	True				
ANR	6504472	PostIncDecOperationExpression	offset ++		6503495	0					
ANR	6504473	Identifier	offset		6503495	0					
ANR	6504474	IncDec	++		6503495	1					
ANR	6504475	IfStatement	if ( * ( bitmap + offset ) & mask )		6503495	1					
ANR	6504476	Condition	* ( bitmap + offset ) & mask	830:10:27530:27554	6503495	0	True				
ANR	6504477	BitAndExpression	* ( bitmap + offset ) & mask		6503495	0		&			
ANR	6504478	UnaryOperationExpression	* ( bitmap + offset )		6503495	0					
ANR	6504479	UnaryOperator	*		6503495	0					
ANR	6504480	AdditiveExpression	bitmap + offset		6503495	1		+			
ANR	6504481	Identifier	bitmap		6503495	0					
ANR	6504482	Identifier	offset		6503495	1					
ANR	6504483	Identifier	mask		6503495	1					
ANR	6504484	CompoundStatement		146:7:5347:5402	6503495	1					
ANR	6504485	ExpressionStatement	GROW_BLOCKS ( )	831:7:27566:27580	6503495	0	True				
ANR	6504486	CallExpression	GROW_BLOCKS ( )		6503495	0					
ANR	6504487	Callee	GROW_BLOCKS		6503495	0					
ANR	6504488	Identifier	GROW_BLOCKS		6503495	0					
ANR	6504489	ArgumentList			6503495	1					
ANR	6504490	IdentifierDeclStatement	WPARAM off = userdata . EncodedOffsets . FirstAllocationOffset + sz * j ;	832:7:27589:27656	6503495	1	True				
ANR	6504491	IdentifierDecl	off = userdata . EncodedOffsets . FirstAllocationOffset + sz * j		6503495	0					
ANR	6504492	IdentifierDeclType	WPARAM		6503495	0					
ANR	6504493	Identifier	off		6503495	1					
ANR	6504494	AssignmentExpression	off = userdata . EncodedOffsets . FirstAllocationOffset + sz * j		6503495	2		=			
ANR	6504495	Identifier	off		6503495	0					
ANR	6504496	AdditiveExpression	userdata . EncodedOffsets . FirstAllocationOffset + sz * j		6503495	1		+			
ANR	6504497	MemberAccess	userdata . EncodedOffsets . FirstAllocationOffset		6503495	0					
ANR	6504498	MemberAccess	userdata . EncodedOffsets		6503495	0					
ANR	6504499	Identifier	userdata		6503495	0					
ANR	6504500	Identifier	EncodedOffsets		6503495	1					
ANR	6504501	Identifier	FirstAllocationOffset		6503495	1					
ANR	6504502	MultiplicativeExpression	sz * j		6503495	1		*			
ANR	6504503	Identifier	sz		6503495	0					
ANR	6504504	Identifier	j		6503495	1					
ANR	6504505	ExpressionStatement	from = ( WPARAM ) subsegment . UserBlocks + off	833:7:27665:27707	6503495	2	True				
ANR	6504506	AssignmentExpression	from = ( WPARAM ) subsegment . UserBlocks + off		6503495	0		=			
ANR	6504507	Identifier	from		6503495	0					
ANR	6504508	AdditiveExpression	( WPARAM ) subsegment . UserBlocks + off		6503495	1		+			
ANR	6504509	CastExpression	( WPARAM ) subsegment . UserBlocks		6503495	0					
ANR	6504510	CastTarget	WPARAM		6503495	0					
ANR	6504511	MemberAccess	subsegment . UserBlocks		6503495	1					
ANR	6504512	Identifier	subsegment		6503495	0					
ANR	6504513	Identifier	UserBlocks		6503495	1					
ANR	6504514	Identifier	off		6503495	1					
ANR	6504515	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) from , & heapEntry , sz_entry , & bytesRead )"	834:7:27716:27789	6503495	3	True				
ANR	6504516	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) from , & heapEntry , sz_entry , & bytesRead )"		6503495	0					
ANR	6504517	Callee	ReadProcessMemory		6503495	0					
ANR	6504518	Identifier	ReadProcessMemory		6503495	0					
ANR	6504519	ArgumentList	h_proc		6503495	1					
ANR	6504520	Argument	h_proc		6503495	0					
ANR	6504521	Identifier	h_proc		6503495	0					
ANR	6504522	Argument	( PVOID ) from		6503495	1					
ANR	6504523	CastExpression	( PVOID ) from		6503495	0					
ANR	6504524	CastTarget	PVOID		6503495	0					
ANR	6504525	Identifier	from		6503495	1					
ANR	6504526	Argument	& heapEntry		6503495	2					
ANR	6504527	UnaryOperationExpression	& heapEntry		6503495	0					
ANR	6504528	UnaryOperator	&		6503495	0					
ANR	6504529	Identifier	heapEntry		6503495	1					
ANR	6504530	Argument	sz_entry		6503495	3					
ANR	6504531	Identifier	sz_entry		6503495	0					
ANR	6504532	Argument	& bytesRead		6503495	4					
ANR	6504533	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504534	UnaryOperator	&		6503495	0					
ANR	6504535	Identifier	bytesRead		6503495	1					
ANR	6504536	ExpressionStatement	"DecodeLFHEntry ( dbg , & heapHeader , & heapEntry , subsegment . UserBlocks , lfhKey , from )"	835:7:27798:27880	6503495	4	True				
ANR	6504537	CallExpression	"DecodeLFHEntry ( dbg , & heapHeader , & heapEntry , subsegment . UserBlocks , lfhKey , from )"		6503495	0					
ANR	6504538	Callee	DecodeLFHEntry		6503495	0					
ANR	6504539	Identifier	DecodeLFHEntry		6503495	0					
ANR	6504540	ArgumentList	dbg		6503495	1					
ANR	6504541	Argument	dbg		6503495	0					
ANR	6504542	Identifier	dbg		6503495	0					
ANR	6504543	Argument	& heapHeader		6503495	1					
ANR	6504544	UnaryOperationExpression	& heapHeader		6503495	0					
ANR	6504545	UnaryOperator	&		6503495	0					
ANR	6504546	Identifier	heapHeader		6503495	1					
ANR	6504547	Argument	& heapEntry		6503495	2					
ANR	6504548	UnaryOperationExpression	& heapEntry		6503495	0					
ANR	6504549	UnaryOperator	&		6503495	0					
ANR	6504550	Identifier	heapEntry		6503495	1					
ANR	6504551	Argument	subsegment . UserBlocks		6503495	3					
ANR	6504552	MemberAccess	subsegment . UserBlocks		6503495	0					
ANR	6504553	Identifier	subsegment		6503495	0					
ANR	6504554	Identifier	UserBlocks		6503495	1					
ANR	6504555	Argument	lfhKey		6503495	4					
ANR	6504556	Identifier	lfhKey		6503495	0					
ANR	6504557	Argument	from		6503495	5					
ANR	6504558	Identifier	from		6503495	0					
ANR	6504559	ExpressionStatement	blocks [ count ] . address = from	836:7:27889:27917	6503495	5	True				
ANR	6504560	AssignmentExpression	blocks [ count ] . address = from		6503495	0		=			
ANR	6504561	MemberAccess	blocks [ count ] . address		6503495	0					
ANR	6504562	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504563	Identifier	blocks		6503495	0					
ANR	6504564	Identifier	count		6503495	1					
ANR	6504565	Identifier	address		6503495	1					
ANR	6504566	Identifier	from		6503495	1					
ANR	6504567	ExpressionStatement	blocks [ count ] . flags = 1 | NT_BLOCK | LFH_BLOCK	837:7:27926:27972	6503495	6	True				
ANR	6504568	AssignmentExpression	blocks [ count ] . flags = 1 | NT_BLOCK | LFH_BLOCK		6503495	0		=			
ANR	6504569	MemberAccess	blocks [ count ] . flags		6503495	0					
ANR	6504570	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504571	Identifier	blocks		6503495	0					
ANR	6504572	Identifier	count		6503495	1					
ANR	6504573	Identifier	flags		6503495	1					
ANR	6504574	InclusiveOrExpression	1 | NT_BLOCK | LFH_BLOCK		6503495	1		|			
ANR	6504575	PrimaryExpression	1		6503495	0					
ANR	6504576	InclusiveOrExpression	NT_BLOCK | LFH_BLOCK		6503495	1		|			
ANR	6504577	Identifier	NT_BLOCK		6503495	0					
ANR	6504578	Identifier	LFH_BLOCK		6503495	1					
ANR	6504579	ExpressionStatement	blocks [ count ] . size = sz	838:7:27981:28004	6503495	7	True				
ANR	6504580	AssignmentExpression	blocks [ count ] . size = sz		6503495	0		=			
ANR	6504581	MemberAccess	blocks [ count ] . size		6503495	0					
ANR	6504582	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504583	Identifier	blocks		6503495	0					
ANR	6504584	Identifier	count		6503495	1					
ANR	6504585	Identifier	size		6503495	1					
ANR	6504586	Identifier	sz		6503495	1					
ANR	6504587	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	839:7:28013:28068	6503495	8	True				
ANR	6504588	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6503495	0					
ANR	6504589	IdentifierDeclType	PHeapBlockExtraInfo		6503495	0					
ANR	6504590	Identifier	extra		6503495	1					
ANR	6504591	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6503495	2		=			
ANR	6504592	Identifier	extra		6503495	0					
ANR	6504593	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6503495	1					
ANR	6504594	Callee	R_NEW0		6503495	0					
ANR	6504595	Identifier	R_NEW0		6503495	0					
ANR	6504596	ArgumentList	HeapBlockExtraInfo		6503495	1					
ANR	6504597	Argument	HeapBlockExtraInfo		6503495	0					
ANR	6504598	Identifier	HeapBlockExtraInfo		6503495	0					
ANR	6504599	IfStatement	if ( ! extra )		6503495	9					
ANR	6504600	Condition	! extra	840:11:28081:28086	6503495	0	True				
ANR	6504601	UnaryOperationExpression	! extra		6503495	0					
ANR	6504602	UnaryOperator	!		6503495	0					
ANR	6504603	Identifier	extra		6503495	1					
ANR	6504604	CompoundStatement		147:19:5423:5423	6503495	1					
ANR	6504605	GotoStatement	goto err ;	841:8:28099:28107	6503495	0	True				
ANR	6504606	Identifier	err		6503495	0					
ANR	6504607	ExpressionStatement	extra -> granularity = sizeof ( HEAP_ENTRY )	843:7:28125:28165	6503495	10	True				
ANR	6504608	AssignmentExpression	extra -> granularity = sizeof ( HEAP_ENTRY )		6503495	0		=			
ANR	6504609	PtrMemberAccess	extra -> granularity		6503495	0					
ANR	6504610	Identifier	extra		6503495	0					
ANR	6504611	Identifier	granularity		6503495	1					
ANR	6504612	SizeofExpression	sizeof ( HEAP_ENTRY )		6503495	1					
ANR	6504613	Sizeof	sizeof		6503495	0					
ANR	6504614	SizeofOperand	HEAP_ENTRY		6503495	1					
ANR	6504615	ExpressionStatement	extra -> segment = curSubsegment	844:7:28174:28204	6503495	11	True				
ANR	6504616	AssignmentExpression	extra -> segment = curSubsegment		6503495	0		=			
ANR	6504617	PtrMemberAccess	extra -> segment		6503495	0					
ANR	6504618	Identifier	extra		6503495	0					
ANR	6504619	Identifier	segment		6503495	1					
ANR	6504620	Identifier	curSubsegment		6503495	1					
ANR	6504621	ExpressionStatement	blocks [ count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	845:7:28213:28261	6503495	12	True				
ANR	6504622	AssignmentExpression	blocks [ count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6503495	0		=			
ANR	6504623	MemberAccess	blocks [ count ] . extra		6503495	0					
ANR	6504624	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504625	Identifier	blocks		6503495	0					
ANR	6504626	Identifier	count		6503495	1					
ANR	6504627	Identifier	extra		6503495	1					
ANR	6504628	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6503495	1		|			
ANR	6504629	Identifier	EXTRA_FLAG		6503495	0					
ANR	6504630	CastExpression	( WPARAM ) extra		6503495	1					
ANR	6504631	CastTarget	WPARAM		6503495	0					
ANR	6504632	Identifier	extra		6503495	1					
ANR	6504633	ExpressionStatement	tot_allocated += blocks [ count ] . size - extra -> granularity	846:7:28270:28326	6503495	13	True				
ANR	6504634	AssignmentExpression	tot_allocated += blocks [ count ] . size - extra -> granularity		6503495	0		+=			
ANR	6504635	Identifier	tot_allocated		6503495	0					
ANR	6504636	AdditiveExpression	blocks [ count ] . size - extra -> granularity		6503495	1		-			
ANR	6504637	MemberAccess	blocks [ count ] . size		6503495	0					
ANR	6504638	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504639	Identifier	blocks		6503495	0					
ANR	6504640	Identifier	count		6503495	1					
ANR	6504641	Identifier	size		6503495	1					
ANR	6504642	PtrMemberAccess	extra -> granularity		6503495	1					
ANR	6504643	Identifier	extra		6503495	0					
ANR	6504644	Identifier	granularity		6503495	1					
ANR	6504645	ExpressionStatement	count ++	847:7:28335:28342	6503495	14	True				
ANR	6504646	PostIncDecOperationExpression	count ++		6503495	0					
ANR	6504647	Identifier	count		6503495	0					
ANR	6504648	IncDec	++		6503495	1					
ANR	6504649	ExpressionStatement	mask <<= 1	849:6:28358:28368	6503495	2	True				
ANR	6504650	AssignmentExpression	mask <<= 1		6503495	0		<<=			
ANR	6504651	Identifier	mask		6503495	0					
ANR	6504652	PrimaryExpression	1		6503495	1					
ANR	6504653	ExpressionStatement	free ( bitmap )	851:5:28382:28395	6503495	11	True				
ANR	6504654	CallExpression	free ( bitmap )		6503495	0					
ANR	6504655	Callee	free		6503495	0					
ANR	6504656	Identifier	free		6503495	0					
ANR	6504657	ArgumentList	bitmap		6503495	1					
ANR	6504658	Argument	bitmap		6503495	0					
ANR	6504659	Identifier	bitmap		6503495	0					
ANR	6504660	Label	next_subsegment :	852:0:28397:28412	6503495	12	True				
ANR	6504661	Identifier	next_subsegment		6503495	0					
ANR	6504662	ExpressionStatement	curSubsegment += sizeof ( HEAP_SUBSEGMENT )	853:5:28419:28460	6503495	13	True				
ANR	6504663	AssignmentExpression	curSubsegment += sizeof ( HEAP_SUBSEGMENT )		6503495	0		+=			
ANR	6504664	Identifier	curSubsegment		6503495	0					
ANR	6504665	SizeofExpression	sizeof ( HEAP_SUBSEGMENT )		6503495	1					
ANR	6504666	Sizeof	sizeof		6503495	0					
ANR	6504667	SizeofOperand	HEAP_SUBSEGMENT		6503495	1					
ANR	6504668	ExpressionStatement	next ++	854:5:28467:28473	6503495	14	True				
ANR	6504669	PostIncDecOperationExpression	next ++		6503495	0					
ANR	6504670	Identifier	next		6503495	0					
ANR	6504671	IncDec	++		6503495	1					
ANR	6504672	Condition	next < blockZone . NextIndex || subsegment . BlockSize	855:13:28488:28537	6503495	1	True				
ANR	6504673	OrExpression	next < blockZone . NextIndex || subsegment . BlockSize		6503495	0		||			
ANR	6504674	RelationalExpression	next < blockZone . NextIndex		6503495	0		<			
ANR	6504675	Identifier	next		6503495	0					
ANR	6504676	MemberAccess	blockZone . NextIndex		6503495	1					
ANR	6504677	Identifier	blockZone		6503495	0					
ANR	6504678	Identifier	NextIndex		6503495	1					
ANR	6504679	MemberAccess	subsegment . BlockSize		6503495	1					
ANR	6504680	Identifier	subsegment		6503495	0					
ANR	6504681	Identifier	BlockSize		6503495	1					
ANR	6504682	IdentifierDeclStatement	LIST_ENTRY entry ;	857:4:28546:28562	6503495	8	True				
ANR	6504683	IdentifierDecl	entry		6503495	0					
ANR	6504684	IdentifierDeclType	LIST_ENTRY		6503495	0					
ANR	6504685	Identifier	entry		6503495	1					
ANR	6504686	ExpressionStatement	"ReadProcessMemory ( h_proc , curEntry , & entry , sizeof ( entry ) , & bytesRead )"	858:4:28568:28640	6503495	9	True				
ANR	6504687	CallExpression	"ReadProcessMemory ( h_proc , curEntry , & entry , sizeof ( entry ) , & bytesRead )"		6503495	0					
ANR	6504688	Callee	ReadProcessMemory		6503495	0					
ANR	6504689	Identifier	ReadProcessMemory		6503495	0					
ANR	6504690	ArgumentList	h_proc		6503495	1					
ANR	6504691	Argument	h_proc		6503495	0					
ANR	6504692	Identifier	h_proc		6503495	0					
ANR	6504693	Argument	curEntry		6503495	1					
ANR	6504694	Identifier	curEntry		6503495	0					
ANR	6504695	Argument	& entry		6503495	2					
ANR	6504696	UnaryOperationExpression	& entry		6503495	0					
ANR	6504697	UnaryOperator	&		6503495	0					
ANR	6504698	Identifier	entry		6503495	1					
ANR	6504699	Argument	sizeof ( entry )		6503495	3					
ANR	6504700	SizeofExpression	sizeof ( entry )		6503495	0					
ANR	6504701	Sizeof	sizeof		6503495	0					
ANR	6504702	SizeofOperand	entry		6503495	1					
ANR	6504703	Argument	& bytesRead		6503495	4					
ANR	6504704	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504705	UnaryOperator	&		6503495	0					
ANR	6504706	Identifier	bytesRead		6503495	1					
ANR	6504707	ExpressionStatement	curEntry = entry . Flink	859:4:28646:28668	6503495	10	True				
ANR	6504708	AssignmentExpression	curEntry = entry . Flink		6503495	0		=			
ANR	6504709	Identifier	curEntry		6503495	0					
ANR	6504710	MemberAccess	entry . Flink		6503495	1					
ANR	6504711	Identifier	entry		6503495	0					
ANR	6504712	Identifier	Flink		6503495	1					
ANR	6504713	Condition	curEntry != firstEntry	860:12:28682:28703	6503495	1	True				
ANR	6504714	EqualityExpression	curEntry != firstEntry		6503495	0		!=			
ANR	6504715	Identifier	curEntry		6503495	0					
ANR	6504716	Identifier	firstEntry		6503495	1					
ANR	6504717	IdentifierDeclStatement	"HEAP_SEGMENT oldSegment , segment ;"	863:2:28714:28746	6503495	16	True				
ANR	6504718	IdentifierDecl	oldSegment		6503495	0					
ANR	6504719	IdentifierDeclType	HEAP_SEGMENT		6503495	0					
ANR	6504720	Identifier	oldSegment		6503495	1					
ANR	6504721	IdentifierDecl	segment		6503495	1					
ANR	6504722	IdentifierDeclType	HEAP_SEGMENT		6503495	0					
ANR	6504723	Identifier	segment		6503495	1					
ANR	6504724	IdentifierDeclStatement	WPARAM firstSegment = ( WPARAM ) heapHeader . SegmentList . Flink ;	864:2:28750:28808	6503495	17	True				
ANR	6504725	IdentifierDecl	firstSegment = ( WPARAM ) heapHeader . SegmentList . Flink		6503495	0					
ANR	6504726	IdentifierDeclType	WPARAM		6503495	0					
ANR	6504727	Identifier	firstSegment		6503495	1					
ANR	6504728	AssignmentExpression	firstSegment = ( WPARAM ) heapHeader . SegmentList . Flink		6503495	2		=			
ANR	6504729	Identifier	firstSegment		6503495	0					
ANR	6504730	CastExpression	( WPARAM ) heapHeader . SegmentList . Flink		6503495	1					
ANR	6504731	CastTarget	WPARAM		6503495	0					
ANR	6504732	MemberAccess	heapHeader . SegmentList . Flink		6503495	1					
ANR	6504733	MemberAccess	heapHeader . SegmentList		6503495	0					
ANR	6504734	Identifier	heapHeader		6503495	0					
ANR	6504735	Identifier	SegmentList		6503495	1					
ANR	6504736	Identifier	Flink		6503495	1					
ANR	6504737	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) ( firstSegment - offsetof ( HEAP_SEGMENT , SegmentListEntry ) ) , & segment , sizeof ( HEAP_SEGMENT ) , & bytesRead )"	865:2:28812:28950	6503495	18	True				
ANR	6504738	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) ( firstSegment - offsetof ( HEAP_SEGMENT , SegmentListEntry ) ) , & segment , sizeof ( HEAP_SEGMENT ) , & bytesRead )"		6503495	0					
ANR	6504739	Callee	ReadProcessMemory		6503495	0					
ANR	6504740	Identifier	ReadProcessMemory		6503495	0					
ANR	6504741	ArgumentList	h_proc		6503495	1					
ANR	6504742	Argument	h_proc		6503495	0					
ANR	6504743	Identifier	h_proc		6503495	0					
ANR	6504744	Argument	"( PVOID ) ( firstSegment - offsetof ( HEAP_SEGMENT , SegmentListEntry ) )"		6503495	1					
ANR	6504745	CastExpression	"( PVOID ) ( firstSegment - offsetof ( HEAP_SEGMENT , SegmentListEntry ) )"		6503495	0					
ANR	6504746	CastTarget	PVOID		6503495	0					
ANR	6504747	AdditiveExpression	"firstSegment - offsetof ( HEAP_SEGMENT , SegmentListEntry )"		6503495	1		-			
ANR	6504748	Identifier	firstSegment		6503495	0					
ANR	6504749	CallExpression	"offsetof ( HEAP_SEGMENT , SegmentListEntry )"		6503495	1					
ANR	6504750	Callee	offsetof		6503495	0					
ANR	6504751	Identifier	offsetof		6503495	0					
ANR	6504752	ArgumentList	HEAP_SEGMENT		6503495	1					
ANR	6504753	Argument	HEAP_SEGMENT		6503495	0					
ANR	6504754	Identifier	HEAP_SEGMENT		6503495	0					
ANR	6504755	Argument	SegmentListEntry		6503495	1					
ANR	6504756	Identifier	SegmentListEntry		6503495	0					
ANR	6504757	Argument	& segment		6503495	2					
ANR	6504758	UnaryOperationExpression	& segment		6503495	0					
ANR	6504759	UnaryOperator	&		6503495	0					
ANR	6504760	Identifier	segment		6503495	1					
ANR	6504761	Argument	sizeof ( HEAP_SEGMENT )		6503495	3					
ANR	6504762	SizeofExpression	sizeof ( HEAP_SEGMENT )		6503495	0					
ANR	6504763	Sizeof	sizeof		6503495	0					
ANR	6504764	SizeofOperand	HEAP_SEGMENT		6503495	1					
ANR	6504765	Argument	& bytesRead		6503495	4					
ANR	6504766	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504767	UnaryOperator	&		6503495	0					
ANR	6504768	Identifier	bytesRead		6503495	1					
ANR	6504769	DoStatement	do		6503495	19					
ANR	6504770	CompoundStatement		174:5:6341:6341	6503495	0					
ANR	6504771	ExpressionStatement	from = ( WPARAM ) segment . FirstEntry	868:3:29012:29045	6503495	0	True				
ANR	6504772	AssignmentExpression	from = ( WPARAM ) segment . FirstEntry		6503495	0		=			
ANR	6504773	Identifier	from		6503495	0					
ANR	6504774	CastExpression	( WPARAM ) segment . FirstEntry		6503495	1					
ANR	6504775	CastTarget	WPARAM		6503495	0					
ANR	6504776	MemberAccess	segment . FirstEntry		6503495	1					
ANR	6504777	Identifier	segment		6503495	0					
ANR	6504778	Identifier	FirstEntry		6503495	1					
ANR	6504779	IfStatement	if ( ! from )		6503495	1					
ANR	6504780	Condition	! from	869:7:29054:29058	6503495	0	True				
ANR	6504781	UnaryOperationExpression	! from		6503495	0					
ANR	6504782	UnaryOperator	!		6503495	0					
ANR	6504783	Identifier	from		6503495	1					
ANR	6504784	CompoundStatement		176:14:6395:6395	6503495	1					
ANR	6504785	GotoStatement	goto next ;	870:4:29067:29076	6503495	0	True				
ANR	6504786	Identifier	next		6503495	0					
ANR	6504787	DoStatement	do		6503495	2					
ANR	6504788	CompoundStatement		193:4:6738:6793	6503495	0					
ANR	6504789	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) from , & heapEntry , sz_entry , & bytesRead ) )"		6503495	0					
ANR	6504790	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) from , & heapEntry , sz_entry , & bytesRead )"	873:8:29099:29172	6503495	0	True				
ANR	6504791	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) from , & heapEntry , sz_entry , & bytesRead )"		6503495	0					
ANR	6504792	UnaryOperator	!		6503495	0					
ANR	6504793	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) from , & heapEntry , sz_entry , & bytesRead )"		6503495	1					
ANR	6504794	Callee	ReadProcessMemory		6503495	0					
ANR	6504795	Identifier	ReadProcessMemory		6503495	0					
ANR	6504796	ArgumentList	h_proc		6503495	1					
ANR	6504797	Argument	h_proc		6503495	0					
ANR	6504798	Identifier	h_proc		6503495	0					
ANR	6504799	Argument	( PVOID ) from		6503495	1					
ANR	6504800	CastExpression	( PVOID ) from		6503495	0					
ANR	6504801	CastTarget	PVOID		6503495	0					
ANR	6504802	Identifier	from		6503495	1					
ANR	6504803	Argument	& heapEntry		6503495	2					
ANR	6504804	UnaryOperationExpression	& heapEntry		6503495	0					
ANR	6504805	UnaryOperator	&		6503495	0					
ANR	6504806	Identifier	heapEntry		6503495	1					
ANR	6504807	Argument	sz_entry		6503495	3					
ANR	6504808	Identifier	sz_entry		6503495	0					
ANR	6504809	Argument	& bytesRead		6503495	4					
ANR	6504810	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6504811	UnaryOperator	&		6503495	0					
ANR	6504812	Identifier	bytesRead		6503495	1					
ANR	6504813	CompoundStatement		180:84:6509:6509	6503495	1					
ANR	6504814	BreakStatement	break ;	874:5:29182:29187	6503495	0	True				
ANR	6504815	ExpressionStatement	"DecodeHeapEntry ( dbg , & heapHeader , & heapEntry )"	876:4:29199:29245	6503495	1	True				
ANR	6504816	CallExpression	"DecodeHeapEntry ( dbg , & heapHeader , & heapEntry )"		6503495	0					
ANR	6504817	Callee	DecodeHeapEntry		6503495	0					
ANR	6504818	Identifier	DecodeHeapEntry		6503495	0					
ANR	6504819	ArgumentList	dbg		6503495	1					
ANR	6504820	Argument	dbg		6503495	0					
ANR	6504821	Identifier	dbg		6503495	0					
ANR	6504822	Argument	& heapHeader		6503495	1					
ANR	6504823	UnaryOperationExpression	& heapHeader		6503495	0					
ANR	6504824	UnaryOperator	&		6503495	0					
ANR	6504825	Identifier	heapHeader		6503495	1					
ANR	6504826	Argument	& heapEntry		6503495	2					
ANR	6504827	UnaryOperationExpression	& heapEntry		6503495	0					
ANR	6504828	UnaryOperator	&		6503495	0					
ANR	6504829	Identifier	heapEntry		6503495	1					
ANR	6504830	IfStatement	if ( ! heapEntry . Size )		6503495	2					
ANR	6504831	Condition	! heapEntry . Size	877:8:29255:29269	6503495	0	True				
ANR	6504832	UnaryOperationExpression	! heapEntry . Size		6503495	0					
ANR	6504833	UnaryOperator	!		6503495	0					
ANR	6504834	MemberAccess	heapEntry . Size		6503495	1					
ANR	6504835	Identifier	heapEntry		6503495	0					
ANR	6504836	Identifier	Size		6503495	1					
ANR	6504837	CompoundStatement		184:25:6606:6606	6503495	1					
ANR	6504838	ExpressionStatement	count --	879:5:29303:29310	6503495	0	True				
ANR	6504839	PostIncDecOperationExpression	count --		6503495	0					
ANR	6504840	Identifier	count		6503495	0					
ANR	6504841	IncDec	--		6503495	1					
ANR	6504842	BreakStatement	break ;	880:5:29317:29322	6503495	1	True				
ANR	6504843	IdentifierDeclStatement	SIZE_T real_sz = heapEntry . Size * sz_entry ;	883:4:29335:29377	6503495	3	True				
ANR	6504844	IdentifierDecl	real_sz = heapEntry . Size * sz_entry		6503495	0					
ANR	6504845	IdentifierDeclType	SIZE_T		6503495	0					
ANR	6504846	Identifier	real_sz		6503495	1					
ANR	6504847	AssignmentExpression	real_sz = heapEntry . Size * sz_entry		6503495	2		=			
ANR	6504848	Identifier	real_sz		6503495	0					
ANR	6504849	MultiplicativeExpression	heapEntry . Size * sz_entry		6503495	1		*			
ANR	6504850	MemberAccess	heapEntry . Size		6503495	0					
ANR	6504851	Identifier	heapEntry		6503495	0					
ANR	6504852	Identifier	Size		6503495	1					
ANR	6504853	Identifier	sz_entry		6503495	1					
ANR	6504854	ExpressionStatement	GROW_BLOCKS ( )	885:4:29384:29398	6503495	4	True				
ANR	6504855	CallExpression	GROW_BLOCKS ( )		6503495	0					
ANR	6504856	Callee	GROW_BLOCKS		6503495	0					
ANR	6504857	Identifier	GROW_BLOCKS		6503495	0					
ANR	6504858	ArgumentList			6503495	1					
ANR	6504859	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	886:4:29404:29459	6503495	5	True				
ANR	6504860	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6503495	0					
ANR	6504861	IdentifierDeclType	PHeapBlockExtraInfo		6503495	0					
ANR	6504862	Identifier	extra		6503495	1					
ANR	6504863	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6503495	2		=			
ANR	6504864	Identifier	extra		6503495	0					
ANR	6504865	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6503495	1					
ANR	6504866	Callee	R_NEW0		6503495	0					
ANR	6504867	Identifier	R_NEW0		6503495	0					
ANR	6504868	ArgumentList	HeapBlockExtraInfo		6503495	1					
ANR	6504869	Argument	HeapBlockExtraInfo		6503495	0					
ANR	6504870	Identifier	HeapBlockExtraInfo		6503495	0					
ANR	6504871	IfStatement	if ( ! extra )		6503495	6					
ANR	6504872	Condition	! extra	887:8:29469:29474	6503495	0	True				
ANR	6504873	UnaryOperationExpression	! extra		6503495	0					
ANR	6504874	UnaryOperator	!		6503495	0					
ANR	6504875	Identifier	extra		6503495	1					
ANR	6504876	CompoundStatement		194:16:6811:6811	6503495	1					
ANR	6504877	GotoStatement	goto err ;	888:5:29484:29492	6503495	0	True				
ANR	6504878	Identifier	err		6503495	0					
ANR	6504879	ExpressionStatement	extra -> granularity = sizeof ( HEAP_ENTRY )	890:4:29504:29544	6503495	7	True				
ANR	6504880	AssignmentExpression	extra -> granularity = sizeof ( HEAP_ENTRY )		6503495	0		=			
ANR	6504881	PtrMemberAccess	extra -> granularity		6503495	0					
ANR	6504882	Identifier	extra		6503495	0					
ANR	6504883	Identifier	granularity		6503495	1					
ANR	6504884	SizeofExpression	sizeof ( HEAP_ENTRY )		6503495	1					
ANR	6504885	Sizeof	sizeof		6503495	0					
ANR	6504886	SizeofOperand	HEAP_ENTRY		6503495	1					
ANR	6504887	ExpressionStatement	extra -> segment = ( WPARAM ) segment . BaseAddress	891:4:29550:29594	6503495	8	True				
ANR	6504888	AssignmentExpression	extra -> segment = ( WPARAM ) segment . BaseAddress		6503495	0		=			
ANR	6504889	PtrMemberAccess	extra -> segment		6503495	0					
ANR	6504890	Identifier	extra		6503495	0					
ANR	6504891	Identifier	segment		6503495	1					
ANR	6504892	CastExpression	( WPARAM ) segment . BaseAddress		6503495	1					
ANR	6504893	CastTarget	WPARAM		6503495	0					
ANR	6504894	MemberAccess	segment . BaseAddress		6503495	1					
ANR	6504895	Identifier	segment		6503495	0					
ANR	6504896	Identifier	BaseAddress		6503495	1					
ANR	6504897	ExpressionStatement	blocks [ count ] . extra = EXTRA_FLAG | ( WPARAM ) extra	892:4:29600:29648	6503495	9	True				
ANR	6504898	AssignmentExpression	blocks [ count ] . extra = EXTRA_FLAG | ( WPARAM ) extra		6503495	0		=			
ANR	6504899	MemberAccess	blocks [ count ] . extra		6503495	0					
ANR	6504900	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504901	Identifier	blocks		6503495	0					
ANR	6504902	Identifier	count		6503495	1					
ANR	6504903	Identifier	extra		6503495	1					
ANR	6504904	InclusiveOrExpression	EXTRA_FLAG | ( WPARAM ) extra		6503495	1		|			
ANR	6504905	Identifier	EXTRA_FLAG		6503495	0					
ANR	6504906	CastExpression	( WPARAM ) extra		6503495	1					
ANR	6504907	CastTarget	WPARAM		6503495	0					
ANR	6504908	Identifier	extra		6503495	1					
ANR	6504909	ExpressionStatement	blocks [ count ] . address = from	893:4:29654:29682	6503495	10	True				
ANR	6504910	AssignmentExpression	blocks [ count ] . address = from		6503495	0		=			
ANR	6504911	MemberAccess	blocks [ count ] . address		6503495	0					
ANR	6504912	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504913	Identifier	blocks		6503495	0					
ANR	6504914	Identifier	count		6503495	1					
ANR	6504915	Identifier	address		6503495	1					
ANR	6504916	Identifier	from		6503495	1					
ANR	6504917	ExpressionStatement	blocks [ count ] . flags = heapEntry . Flags | NT_BLOCK | BACKEND_BLOCK	894:4:29688:29752	6503495	11	True				
ANR	6504918	AssignmentExpression	blocks [ count ] . flags = heapEntry . Flags | NT_BLOCK | BACKEND_BLOCK		6503495	0		=			
ANR	6504919	MemberAccess	blocks [ count ] . flags		6503495	0					
ANR	6504920	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504921	Identifier	blocks		6503495	0					
ANR	6504922	Identifier	count		6503495	1					
ANR	6504923	Identifier	flags		6503495	1					
ANR	6504924	InclusiveOrExpression	heapEntry . Flags | NT_BLOCK | BACKEND_BLOCK		6503495	1		|			
ANR	6504925	MemberAccess	heapEntry . Flags		6503495	0					
ANR	6504926	Identifier	heapEntry		6503495	0					
ANR	6504927	Identifier	Flags		6503495	1					
ANR	6504928	InclusiveOrExpression	NT_BLOCK | BACKEND_BLOCK		6503495	1		|			
ANR	6504929	Identifier	NT_BLOCK		6503495	0					
ANR	6504930	Identifier	BACKEND_BLOCK		6503495	1					
ANR	6504931	ExpressionStatement	blocks [ count ] . size = real_sz	895:4:29758:29786	6503495	12	True				
ANR	6504932	AssignmentExpression	blocks [ count ] . size = real_sz		6503495	0		=			
ANR	6504933	MemberAccess	blocks [ count ] . size		6503495	0					
ANR	6504934	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504935	Identifier	blocks		6503495	0					
ANR	6504936	Identifier	count		6503495	1					
ANR	6504937	Identifier	size		6503495	1					
ANR	6504938	Identifier	real_sz		6503495	1					
ANR	6504939	ExpressionStatement	from += real_sz	896:4:29792:29807	6503495	13	True				
ANR	6504940	AssignmentExpression	from += real_sz		6503495	0		+=			
ANR	6504941	Identifier	from		6503495	0					
ANR	6504942	Identifier	real_sz		6503495	1					
ANR	6504943	ExpressionStatement	tot_allocated += blocks [ count ] . size - extra -> granularity	897:4:29813:29869	6503495	14	True				
ANR	6504944	AssignmentExpression	tot_allocated += blocks [ count ] . size - extra -> granularity		6503495	0		+=			
ANR	6504945	Identifier	tot_allocated		6503495	0					
ANR	6504946	AdditiveExpression	blocks [ count ] . size - extra -> granularity		6503495	1		-			
ANR	6504947	MemberAccess	blocks [ count ] . size		6503495	0					
ANR	6504948	ArrayIndexing	blocks [ count ]		6503495	0					
ANR	6504949	Identifier	blocks		6503495	0					
ANR	6504950	Identifier	count		6503495	1					
ANR	6504951	Identifier	size		6503495	1					
ANR	6504952	PtrMemberAccess	extra -> granularity		6503495	1					
ANR	6504953	Identifier	extra		6503495	0					
ANR	6504954	Identifier	granularity		6503495	1					
ANR	6504955	ExpressionStatement	count ++	898:4:29875:29882	6503495	15	True				
ANR	6504956	PostIncDecOperationExpression	count ++		6503495	0					
ANR	6504957	Identifier	count		6503495	0					
ANR	6504958	IncDec	++		6503495	1					
ANR	6504959	Condition	from <= ( WPARAM ) segment . LastValidEntry	899:12:29896:29933	6503495	1	True				
ANR	6504960	RelationalExpression	from <= ( WPARAM ) segment . LastValidEntry		6503495	0		<=			
ANR	6504961	Identifier	from		6503495	0					
ANR	6504962	CastExpression	( WPARAM ) segment . LastValidEntry		6503495	1					
ANR	6504963	CastTarget	WPARAM		6503495	0					
ANR	6504964	MemberAccess	segment . LastValidEntry		6503495	1					
ANR	6504965	Identifier	segment		6503495	0					
ANR	6504966	Identifier	LastValidEntry		6503495	1					
ANR	6504967	Label	next :	900:0:29937:29941	6503495	3	True				
ANR	6504968	Identifier	next		6503495	0					
ANR	6504969	ExpressionStatement	oldSegment = segment	901:3:29946:29966	6503495	4	True				
ANR	6504970	AssignmentExpression	oldSegment = segment		6503495	0		=			
ANR	6504971	Identifier	oldSegment		6503495	0					
ANR	6504972	Identifier	segment		6503495	1					
ANR	6504973	ExpressionStatement	"from = ( WPARAM ) segment . SegmentListEntry . Flink - offsetof ( HEAP_SEGMENT , SegmentListEntry )"	902:3:29971:30060	6503495	5	True				
ANR	6504974	AssignmentExpression	"from = ( WPARAM ) segment . SegmentListEntry . Flink - offsetof ( HEAP_SEGMENT , SegmentListEntry )"		6503495	0		=			
ANR	6504975	Identifier	from		6503495	0					
ANR	6504976	AdditiveExpression	"( WPARAM ) segment . SegmentListEntry . Flink - offsetof ( HEAP_SEGMENT , SegmentListEntry )"		6503495	1		-			
ANR	6504977	CastExpression	( WPARAM ) segment . SegmentListEntry . Flink		6503495	0					
ANR	6504978	CastTarget	WPARAM		6503495	0					
ANR	6504979	MemberAccess	segment . SegmentListEntry . Flink		6503495	1					
ANR	6504980	MemberAccess	segment . SegmentListEntry		6503495	0					
ANR	6504981	Identifier	segment		6503495	0					
ANR	6504982	Identifier	SegmentListEntry		6503495	1					
ANR	6504983	Identifier	Flink		6503495	1					
ANR	6504984	CallExpression	"offsetof ( HEAP_SEGMENT , SegmentListEntry )"		6503495	1					
ANR	6504985	Callee	offsetof		6503495	0					
ANR	6504986	Identifier	offsetof		6503495	0					
ANR	6504987	ArgumentList	HEAP_SEGMENT		6503495	1					
ANR	6504988	Argument	HEAP_SEGMENT		6503495	0					
ANR	6504989	Identifier	HEAP_SEGMENT		6503495	0					
ANR	6504990	Argument	SegmentListEntry		6503495	1					
ANR	6504991	Identifier	SegmentListEntry		6503495	0					
ANR	6504992	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) from , & segment , sizeof ( HEAP_SEGMENT ) , & bytesRead )"	903:3:30065:30149	6503495	6	True				
ANR	6504993	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) from , & segment , sizeof ( HEAP_SEGMENT ) , & bytesRead )"		6503495	0					
ANR	6504994	Callee	ReadProcessMemory		6503495	0					
ANR	6504995	Identifier	ReadProcessMemory		6503495	0					
ANR	6504996	ArgumentList	h_proc		6503495	1					
ANR	6504997	Argument	h_proc		6503495	0					
ANR	6504998	Identifier	h_proc		6503495	0					
ANR	6504999	Argument	( PVOID ) from		6503495	1					
ANR	6505000	CastExpression	( PVOID ) from		6503495	0					
ANR	6505001	CastTarget	PVOID		6503495	0					
ANR	6505002	Identifier	from		6503495	1					
ANR	6505003	Argument	& segment		6503495	2					
ANR	6505004	UnaryOperationExpression	& segment		6503495	0					
ANR	6505005	UnaryOperator	&		6503495	0					
ANR	6505006	Identifier	segment		6503495	1					
ANR	6505007	Argument	sizeof ( HEAP_SEGMENT )		6503495	3					
ANR	6505008	SizeofExpression	sizeof ( HEAP_SEGMENT )		6503495	0					
ANR	6505009	Sizeof	sizeof		6503495	0					
ANR	6505010	SizeofOperand	HEAP_SEGMENT		6503495	1					
ANR	6505011	Argument	& bytesRead		6503495	4					
ANR	6505012	UnaryOperationExpression	& bytesRead		6503495	0					
ANR	6505013	UnaryOperator	&		6503495	0					
ANR	6505014	Identifier	bytesRead		6503495	1					
ANR	6505015	Condition	( WPARAM ) oldSegment . SegmentListEntry . Flink != firstSegment	904:11:30162:30218	6503495	1	True				
ANR	6505016	EqualityExpression	( WPARAM ) oldSegment . SegmentListEntry . Flink != firstSegment		6503495	0		!=			
ANR	6505017	CastExpression	( WPARAM ) oldSegment . SegmentListEntry . Flink		6503495	0					
ANR	6505018	CastTarget	WPARAM		6503495	0					
ANR	6505019	MemberAccess	oldSegment . SegmentListEntry . Flink		6503495	1					
ANR	6505020	MemberAccess	oldSegment . SegmentListEntry		6503495	0					
ANR	6505021	Identifier	oldSegment		6503495	0					
ANR	6505022	Identifier	SegmentListEntry		6503495	1					
ANR	6505023	Identifier	Flink		6503495	1					
ANR	6505024	Identifier	firstSegment		6503495	1					
ANR	6505025	ExpressionStatement	heap -> Blocks = blocks	905:2:30224:30245	6503495	20	True				
ANR	6505026	AssignmentExpression	heap -> Blocks = blocks		6503495	0		=			
ANR	6505027	PtrMemberAccess	heap -> Blocks		6503495	0					
ANR	6505028	Identifier	heap		6503495	0					
ANR	6505029	Identifier	Blocks		6503495	1					
ANR	6505030	Identifier	blocks		6503495	1					
ANR	6505031	ExpressionStatement	heap -> BlockCount = count	906:2:30249:30273	6503495	21	True				
ANR	6505032	AssignmentExpression	heap -> BlockCount = count		6503495	0		=			
ANR	6505033	PtrMemberAccess	heap -> BlockCount		6503495	0					
ANR	6505034	Identifier	heap		6503495	0					
ANR	6505035	Identifier	BlockCount		6503495	1					
ANR	6505036	Identifier	count		6503495	1					
ANR	6505037	IfStatement	if ( ! heap -> Committed && ! heap -> Allocated )		6503495	22					
ANR	6505038	Condition	! heap -> Committed && ! heap -> Allocated	908:6:30282:30317	6503495	0	True				
ANR	6505039	AndExpression	! heap -> Committed && ! heap -> Allocated		6503495	0		&&			
ANR	6505040	UnaryOperationExpression	! heap -> Committed		6503495	0					
ANR	6505041	UnaryOperator	!		6503495	0					
ANR	6505042	PtrMemberAccess	heap -> Committed		6503495	1					
ANR	6505043	Identifier	heap		6503495	0					
ANR	6505044	Identifier	Committed		6503495	1					
ANR	6505045	UnaryOperationExpression	! heap -> Allocated		6503495	1					
ANR	6505046	UnaryOperator	!		6503495	0					
ANR	6505047	PtrMemberAccess	heap -> Allocated		6503495	1					
ANR	6505048	Identifier	heap		6503495	0					
ANR	6505049	Identifier	Allocated		6503495	1					
ANR	6505050	CompoundStatement		215:44:7654:7654	6503495	1					
ANR	6505051	ExpressionStatement	heap -> Committed = heapHeader . Counters . TotalMemoryCommitted	909:3:30325:30383	6503495	0	True				
ANR	6505052	AssignmentExpression	heap -> Committed = heapHeader . Counters . TotalMemoryCommitted		6503495	0		=			
ANR	6505053	PtrMemberAccess	heap -> Committed		6503495	0					
ANR	6505054	Identifier	heap		6503495	0					
ANR	6505055	Identifier	Committed		6503495	1					
ANR	6505056	MemberAccess	heapHeader . Counters . TotalMemoryCommitted		6503495	1					
ANR	6505057	MemberAccess	heapHeader . Counters		6503495	0					
ANR	6505058	Identifier	heapHeader		6503495	0					
ANR	6505059	Identifier	Counters		6503495	1					
ANR	6505060	Identifier	TotalMemoryCommitted		6503495	1					
ANR	6505061	ExpressionStatement	heap -> Allocated = tot_allocated	910:3:30388:30419	6503495	1	True				
ANR	6505062	AssignmentExpression	heap -> Allocated = tot_allocated		6503495	0		=			
ANR	6505063	PtrMemberAccess	heap -> Allocated		6503495	0					
ANR	6505064	Identifier	heap		6503495	0					
ANR	6505065	Identifier	Allocated		6503495	1					
ANR	6505066	Identifier	tot_allocated		6503495	1					
ANR	6505067	ExpressionStatement	CloseHandle ( h_proc )	913:1:30429:30449	6503495	12	True				
ANR	6505068	CallExpression	CloseHandle ( h_proc )		6503495	0					
ANR	6505069	Callee	CloseHandle		6503495	0					
ANR	6505070	Identifier	CloseHandle		6503495	0					
ANR	6505071	ArgumentList	h_proc		6503495	1					
ANR	6505072	Argument	h_proc		6503495	0					
ANR	6505073	Identifier	h_proc		6503495	0					
ANR	6505074	ReturnStatement	return db ;	914:1:30452:30461	6503495	13	True				
ANR	6505075	Identifier	db		6503495	0					
ANR	6505076	Label	err :	915:0:30463:30466	6503495	14	True				
ANR	6505077	Identifier	err		6503495	0					
ANR	6505078	IfStatement	if ( h_proc )		6503495	15					
ANR	6505079	Condition	h_proc	916:5:30473:30478	6503495	0	True				
ANR	6505080	Identifier	h_proc		6503495	0					
ANR	6505081	CompoundStatement		223:13:7815:7815	6503495	1					
ANR	6505082	ExpressionStatement	CloseHandle ( h_proc )	917:2:30485:30505	6503495	0	True				
ANR	6505083	CallExpression	CloseHandle ( h_proc )		6503495	0					
ANR	6505084	Callee	CloseHandle		6503495	0					
ANR	6505085	Identifier	CloseHandle		6503495	0					
ANR	6505086	ArgumentList	h_proc		6503495	1					
ANR	6505087	Argument	h_proc		6503495	0					
ANR	6505088	Identifier	h_proc		6503495	0					
ANR	6505089	IfStatement	if ( db )		6503495	16					
ANR	6505090	Condition	db	919:5:30515:30516	6503495	0	True				
ANR	6505091	Identifier	db		6503495	0					
ANR	6505092	CompoundStatement		226:9:7853:7853	6503495	1					
ANR	6505093	ForStatement	for ( int i = 0 ; i < heapInfo -> count ; i ++ )		6503495	0					
ANR	6505094	ForInit	int i = 0 ;	920:7:30528:30537	6503495	0	True				
ANR	6505095	IdentifierDeclStatement	int i = 0 ;		6503495	0					
ANR	6505096	IdentifierDecl	i = 0		6503495	0					
ANR	6505097	IdentifierDeclType	int		6503495	0					
ANR	6505098	Identifier	i		6503495	1					
ANR	6505099	AssignmentExpression	i = 0		6503495	2		=			
ANR	6505100	Identifier	i		6503495	0					
ANR	6505101	PrimaryExpression	0		6503495	1					
ANR	6505102	Condition	i < heapInfo -> count	920:18:30539:30557	6503495	1	True				
ANR	6505103	RelationalExpression	i < heapInfo -> count		6503495	0		<			
ANR	6505104	Identifier	i		6503495	0					
ANR	6505105	PtrMemberAccess	heapInfo -> count		6503495	1					
ANR	6505106	Identifier	heapInfo		6503495	0					
ANR	6505107	Identifier	count		6503495	1					
ANR	6505108	PostIncDecOperationExpression	i ++	920:39:30560:30562	6503495	2	True				
ANR	6505109	Identifier	i		6503495	0					
ANR	6505110	IncDec	++		6503495	1					
ANR	6505111	CompoundStatement		228:3:7904:7954	6503495	3					
ANR	6505112	IdentifierDeclStatement	PDEBUG_HEAP_INFORMATION heap = & heapInfo -> heaps [ i ] ;	921:3:30570:30620	6503495	0	True				
ANR	6505113	IdentifierDecl	heap = & heapInfo -> heaps [ i ]		6503495	0					
ANR	6505114	IdentifierDeclType	PDEBUG_HEAP_INFORMATION		6503495	0					
ANR	6505115	Identifier	heap		6503495	1					
ANR	6505116	AssignmentExpression	heap = & heapInfo -> heaps [ i ]		6503495	2		=			
ANR	6505117	Identifier	heap		6503495	0					
ANR	6505118	UnaryOperationExpression	& heapInfo -> heaps [ i ]		6503495	1					
ANR	6505119	UnaryOperator	&		6503495	0					
ANR	6505120	ArrayIndexing	heapInfo -> heaps [ i ]		6503495	1					
ANR	6505121	PtrMemberAccess	heapInfo -> heaps		6503495	0					
ANR	6505122	Identifier	heapInfo		6503495	0					
ANR	6505123	Identifier	heaps		6503495	1					
ANR	6505124	Identifier	i		6503495	1					
ANR	6505125	ExpressionStatement	free_extra_info ( heap )	922:3:30625:30647	6503495	1	True				
ANR	6505126	CallExpression	free_extra_info ( heap )		6503495	0					
ANR	6505127	Callee	free_extra_info		6503495	0					
ANR	6505128	Identifier	free_extra_info		6503495	0					
ANR	6505129	ArgumentList	heap		6503495	1					
ANR	6505130	Argument	heap		6503495	0					
ANR	6505131	Identifier	heap		6503495	0					
ANR	6505132	ExpressionStatement	R_FREE ( heap -> Blocks )	923:3:30652:30673	6503495	2	True				
ANR	6505133	CallExpression	R_FREE ( heap -> Blocks )		6503495	0					
ANR	6505134	Callee	R_FREE		6503495	0					
ANR	6505135	Identifier	R_FREE		6503495	0					
ANR	6505136	ArgumentList	heap -> Blocks		6503495	1					
ANR	6505137	Argument	heap -> Blocks		6503495	0					
ANR	6505138	PtrMemberAccess	heap -> Blocks		6503495	0					
ANR	6505139	Identifier	heap		6503495	0					
ANR	6505140	Identifier	Blocks		6503495	1					
ANR	6505141	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	925:2:30681:30712	6503495	1	True				
ANR	6505142	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6503495	0					
ANR	6505143	Callee	RtlDestroyQueryDebugBuffer		6503495	0					
ANR	6505144	Identifier	RtlDestroyQueryDebugBuffer		6503495	0					
ANR	6505145	ArgumentList	db		6503495	1					
ANR	6505146	Argument	db		6503495	0					
ANR	6505147	Identifier	db		6503495	0					
ANR	6505148	ReturnStatement	return NULL ;	927:1:30718:30729	6503495	17	True				
ANR	6505149	Identifier	NULL		6503495	0					
ANR	6505150	ReturnType	static PDEBUG_BUFFER		6503495	1					
ANR	6505151	Identifier	GetHeapBlocks		6503495	2					
ANR	6505152	ParameterList	"DWORD pid , RDebug * dbg"		6503495	3					
ANR	6505153	Parameter	DWORD pid	694:35:22641:22649	6503495	0	True				
ANR	6505154	ParameterType	DWORD		6503495	0					
ANR	6505155	Identifier	pid		6503495	1					
ANR	6505156	Parameter	RDebug * dbg	694:46:22652:22662	6503495	1	True				
ANR	6505157	ParameterType	RDebug *		6503495	0					
ANR	6505158	Identifier	dbg		6503495	1					
ANR	6505159	CFGEntryNode	ENTRY		6503495		True				
ANR	6505160	CFGExitNode	EXIT		6503495		True				
ANR	6505161	Symbol	InitHeapInfo		6503495						
ANR	6505162	Symbol	tot_allocated		6503495						
ANR	6505163	Symbol	lfhHeader . SubSegmentZones		6503495						
ANR	6505164	Symbol	heapInfo -> count		6503495						
ANR	6505165	Symbol	userdata . EncodedOffsets . FirstAllocationOffset		6503495						
ANR	6505166	Symbol	* bitmap		6503495						
ANR	6505167	Symbol	heap -> Committed		6503495						
ANR	6505168	Symbol	bitmapsz		6503495						
ANR	6505169	Symbol	bitmap		6503495						
ANR	6505170	Symbol	heapEntry		6503495						
ANR	6505171	Symbol	fentry		6503495						
ANR	6505172	Symbol	& vAlloc . BusyBlock		6503495						
ANR	6505173	Symbol	SubSegmentZones		6503495						
ANR	6505174	Symbol	localData . CrtZone		6503495						
ANR	6505175	Symbol	GetSegmentHeapBlocks		6503495						
ANR	6505176	Symbol	sz_entry		6503495						
ANR	6505177	Symbol	blocks [ count ] . flags		6503495						
ANR	6505178	Symbol	* blocks		6503495						
ANR	6505179	Symbol	lfhHeader . SubSegmentZones . Flink		6503495						
ANR	6505180	Symbol	* db		6503495						
ANR	6505181	Symbol	h_proc		6503495						
ANR	6505182	Symbol	ReadProcessMemory		6503495						
ANR	6505183	Symbol	SegmentListEntry		6503495						
ANR	6505184	Symbol	userdata . BusyBitmap . SizeOfBitMap		6503495						
ANR	6505185	Symbol	vAlloc . BusyBlock . Flags		6503495						
ANR	6505186	Symbol	R_NEW0		6503495						
ANR	6505187	Symbol	segment . FirstEntry		6503495						
ANR	6505188	Symbol	& userdata		6503495						
ANR	6505189	Symbol	& lfhHeader		6503495						
ANR	6505190	Symbol	oldSegment . SegmentListEntry		6503495						
ANR	6505191	Symbol	blocks [ count ] . address		6503495						
ANR	6505192	Symbol	& subsegment		6503495						
ANR	6505193	Symbol	R_SYS_BITS_32		6503495						
ANR	6505194	Symbol	vAlloc . Entry		6503495						
ANR	6505195	Symbol	segment . SegmentListEntry . Flink		6503495						
ANR	6505196	Symbol	lfhKey		6503495						
ANR	6505197	Symbol	PtrToInt		6503495						
ANR	6505198	Symbol	subsegment . BlockSize		6503495						
ANR	6505199	Symbol	* heapInfo		6503495						
ANR	6505200	Symbol	& blocks		6503495						
ANR	6505201	Symbol	vAlloc . BusyBlock		6503495						
ANR	6505202	Symbol	blocks [ count ] . extra		6503495						
ANR	6505203	Symbol	userdata . EncodedOffsets . StrideAndOffset		6503495						
ANR	6505204	Symbol	offsetof		6503495						
ANR	6505205	Symbol	firstEntry		6503495						
ANR	6505206	Symbol	vAlloc . CommitSize		6503495						
ANR	6505207	Symbol	EXTRA_FLAG		6503495						
ANR	6505208	Symbol	HEAP_SEGMENT		6503495						
ANR	6505209	Symbol	heapHeader . SegmentList		6503495						
ANR	6505210	Symbol	sz		6503495						
ANR	6505211	Symbol	heapHeader . Counters . TotalMemoryCommitted		6503495						
ANR	6505212	Symbol	bytesRead		6503495						
ANR	6505213	Symbol	i		6503495						
ANR	6505214	Symbol	j		6503495						
ANR	6505215	Symbol	heapHeader . SegmentSignature		6503495						
ANR	6505216	Symbol	off		6503495						
ANR	6505217	Symbol	& entry		6503495						
ANR	6505218	Symbol	& heapEntry		6503495						
ANR	6505219	Symbol	& allocated		6503495						
ANR	6505220	Symbol	& localData		6503495						
ANR	6505221	Symbol	segment . LastValidEntry		6503495						
ANR	6505222	Symbol	* ( bitmap + offset )		6503495						
ANR	6505223	Symbol	LFH_BLOCK		6503495						
ANR	6505224	Symbol	LFH_HEAP		6503495						
ANR	6505225	Symbol	PROCESS_QUERY_INFORMATION		6503495						
ANR	6505226	Symbol	& blockZone		6503495						
ANR	6505227	Symbol	vAlloc		6503495						
ANR	6505228	Symbol	db		6503495						
ANR	6505229	Symbol	heapEntry . Flags		6503495						
ANR	6505230	Symbol	oldSegment		6503495						
ANR	6505231	Symbol	pid		6503495						
ANR	6505232	Symbol	heapHeader . FrontEndHeapType		6503495						
ANR	6505233	Symbol	blockZone . NextIndex		6503495						
ANR	6505234	Symbol	firstSegment		6503495						
ANR	6505235	Symbol	LARGE_BLOCK		6503495						
ANR	6505236	Symbol	* count		6503495						
ANR	6505237	Symbol	userdata . BusyBitmap . Buffer		6503495						
ANR	6505238	Symbol	localData		6503495						
ANR	6505239	Symbol	segment		6503495						
ANR	6505240	Symbol	heapInfo		6503495						
ANR	6505241	Symbol	heapHeader . BaseAddress		6503495						
ANR	6505242	Symbol	heapHeader . FrontEndHeap		6503495						
ANR	6505243	Symbol	from		6503495						
ANR	6505244	Symbol	OpenProcess		6503495						
ANR	6505245	Symbol	info		6503495						
ANR	6505246	Symbol	ret		6503495						
ANR	6505247	Symbol	NULL		6503495						
ANR	6505248	Symbol	& heapHeader		6503495						
ANR	6505249	Symbol	& info		6503495						
ANR	6505250	Symbol	offset		6503495						
ANR	6505251	Symbol	segment . BaseAddress		6503495						
ANR	6505252	Symbol	~2ULL		6503495						
ANR	6505253	Symbol	dbg		6503495						
ANR	6505254	Symbol	count		6503495						
ANR	6505255	Symbol	userdata . BusyBitmap		6503495						
ANR	6505256	Symbol	db -> HeapInformation		6503495						
ANR	6505257	Symbol	VirtualAllocdBlocks		6503495						
ANR	6505258	Symbol	entry		6503495						
ANR	6505259	Symbol	heapInfo -> heaps		6503495						
ANR	6505260	Symbol	* extra		6503495						
ANR	6505261	Symbol	subsegment . LocalInfo		6503495						
ANR	6505262	Symbol	heap -> Blocks		6503495						
ANR	6505263	Symbol	* offset		6503495						
ANR	6505264	Symbol	extra -> unusedBytes		6503495						
ANR	6505265	Symbol	heap -> Base		6503495						
ANR	6505266	Symbol	vAlloc . Entry . Flink		6503495						
ANR	6505267	Symbol	userdata . EncodedOffsets		6503495						
ANR	6505268	Symbol	BACKEND_BLOCK		6503495						
ANR	6505269	Symbol	* heap		6503495						
ANR	6505270	Symbol	NT_BLOCK		6503495						
ANR	6505271	Symbol	extra -> segment		6503495						
ANR	6505272	Symbol	HeapBlockExtraInfo		6503495						
ANR	6505273	Symbol	next		6503495						
ANR	6505274	Symbol	entry . Flink		6503495						
ANR	6505275	Symbol	vAlloc . ReserveSize		6503495						
ANR	6505276	Symbol	real_sz		6503495						
ANR	6505277	Symbol	& lfhKey		6503495						
ANR	6505278	Symbol	curEntry		6503495						
ANR	6505279	Symbol	dbg -> bits		6503495						
ANR	6505280	Symbol	calloc		6503495						
ANR	6505281	Symbol	& segment		6503495						
ANR	6505282	Symbol	HEAP		6503495						
ANR	6505283	Symbol	& bytesRead		6503495						
ANR	6505284	Symbol	& vAlloc		6503495						
ANR	6505285	Symbol	subsegment . UserBlocks		6503495						
ANR	6505286	Symbol	userdata		6503495						
ANR	6505287	Symbol	extra		6503495						
ANR	6505288	Symbol	heapHeader . VirtualAllocdBlocks		6503495						
ANR	6505289	Symbol	blockZone		6503495						
ANR	6505290	Symbol	heap		6503495						
ANR	6505291	Symbol	heap -> Allocated		6503495						
ANR	6505292	Symbol	allocated		6503495						
ANR	6505293	Symbol	heapHeader . VirtualAllocdBlocks . Flink		6503495						
ANR	6505294	Symbol	mask		6503495						
ANR	6505295	Symbol	extra -> granularity		6503495						
ANR	6505296	Symbol	heapHeader		6503495						
ANR	6505297	Symbol	heap -> BlockCount		6503495						
ANR	6505298	Symbol	lfhHeader		6503495						
ANR	6505299	Symbol	heapHeader . SegmentList . Flink		6503495						
ANR	6505300	Symbol	blocks		6503495						
ANR	6505301	Symbol	false		6503495						
ANR	6505302	Symbol	info . LocalData		6503495						
ANR	6505303	Symbol	* dbg		6503495						
ANR	6505304	Symbol	segment . SegmentListEntry		6503495						
ANR	6505305	Symbol	subsegment		6503495						
ANR	6505306	Symbol	PDI_HEAPS		6503495						
ANR	6505307	Symbol	curSubsegment		6503495						
ANR	6505308	Symbol	PROCESS_VM_READ		6503495						
ANR	6505309	Symbol	GetLFHKey		6503495						
ANR	6505310	Symbol	oldSegment . SegmentListEntry . Flink		6503495						
ANR	6505311	Symbol	heapEntry . Size		6503495						
ANR	6505312	Symbol	heapHeader . Counters		6503495						
ANR	6505313	Symbol	FALSE		6503495						
ANR	6505314	Symbol	& count		6503495						
ANR	6505315	Symbol	blocks [ count ] . size		6503495						
ANR	6505316	Function	GetSingleSegmentBlock	930:0:30734:35025							
ANR	6505317	FunctionDef	"GetSingleSegmentBlock (RDebug * dbg , HANDLE h_proc , PSEGMENT_HEAP heapBase , WPARAM offset)"		6505316	0					
ANR	6505318	CompoundStatement		930:107:30841:35025	6505316	0					
ANR	6505319	IdentifierDeclStatement	PHeapBlock hb = R_NEW0 ( HeapBlock ) ;	935:1:30893:30927	6505316	0	True				
ANR	6505320	IdentifierDecl	hb = R_NEW0 ( HeapBlock )		6505316	0					
ANR	6505321	IdentifierDeclType	PHeapBlock		6505316	0					
ANR	6505322	Identifier	hb		6505316	1					
ANR	6505323	AssignmentExpression	hb = R_NEW0 ( HeapBlock )		6505316	2		=			
ANR	6505324	Identifier	hb		6505316	0					
ANR	6505325	CallExpression	R_NEW0 ( HeapBlock )		6505316	1					
ANR	6505326	Callee	R_NEW0		6505316	0					
ANR	6505327	Identifier	R_NEW0		6505316	0					
ANR	6505328	ArgumentList	HeapBlock		6505316	1					
ANR	6505329	Argument	HeapBlock		6505316	0					
ANR	6505330	Identifier	HeapBlock		6505316	0					
ANR	6505331	IfStatement	if ( ! hb )		6505316	1					
ANR	6505332	Condition	! hb	936:5:30934:30936	6505316	0	True				
ANR	6505333	UnaryOperationExpression	! hb		6505316	0					
ANR	6505334	UnaryOperator	!		6505316	0					
ANR	6505335	Identifier	hb		6505316	1					
ANR	6505336	CompoundStatement		7:10:97:97	6505316	1					
ANR	6505337	ExpressionStatement	"R_LOG_ERROR ( ""GetSingleSegmentBlock: Allocation failed.\\n"" )"	937:2:30943:31002	6505316	0	True				
ANR	6505338	CallExpression	"R_LOG_ERROR ( ""GetSingleSegmentBlock: Allocation failed.\\n"" )"		6505316	0					
ANR	6505339	Callee	R_LOG_ERROR		6505316	0					
ANR	6505340	Identifier	R_LOG_ERROR		6505316	0					
ANR	6505341	ArgumentList	"""GetSingleSegmentBlock: Allocation failed.\\n"""		6505316	1					
ANR	6505342	Argument	"""GetSingleSegmentBlock: Allocation failed.\\n"""		6505316	0					
ANR	6505343	PrimaryExpression	"""GetSingleSegmentBlock: Allocation failed.\\n"""		6505316	0					
ANR	6505344	ReturnStatement	return NULL ;	938:2:31006:31017	6505316	1	True				
ANR	6505345	Identifier	NULL		6505316	0					
ANR	6505346	IdentifierDeclStatement	PHeapBlockExtraInfo extra = R_NEW0 ( HeapBlockExtraInfo ) ;	940:1:31023:31078	6505316	2	True				
ANR	6505347	IdentifierDecl	extra = R_NEW0 ( HeapBlockExtraInfo )		6505316	0					
ANR	6505348	IdentifierDeclType	PHeapBlockExtraInfo		6505316	0					
ANR	6505349	Identifier	extra		6505316	1					
ANR	6505350	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6505316	2		=			
ANR	6505351	Identifier	extra		6505316	0					
ANR	6505352	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6505316	1					
ANR	6505353	Callee	R_NEW0		6505316	0					
ANR	6505354	Identifier	R_NEW0		6505316	0					
ANR	6505355	ArgumentList	HeapBlockExtraInfo		6505316	1					
ANR	6505356	Argument	HeapBlockExtraInfo		6505316	0					
ANR	6505357	Identifier	HeapBlockExtraInfo		6505316	0					
ANR	6505358	IfStatement	if ( ! extra )		6505316	3					
ANR	6505359	Condition	! extra	941:5:31085:31090	6505316	0	True				
ANR	6505360	UnaryOperationExpression	! extra		6505316	0					
ANR	6505361	UnaryOperator	!		6505316	0					
ANR	6505362	Identifier	extra		6505316	1					
ANR	6505363	CompoundStatement		12:13:251:251	6505316	1					
ANR	6505364	ExpressionStatement	"R_LOG_ERROR ( ""GetSingleSegmentBlock: Allocation failed.\\n"" )"	942:2:31097:31156	6505316	0	True				
ANR	6505365	CallExpression	"R_LOG_ERROR ( ""GetSingleSegmentBlock: Allocation failed.\\n"" )"		6505316	0					
ANR	6505366	Callee	R_LOG_ERROR		6505316	0					
ANR	6505367	Identifier	R_LOG_ERROR		6505316	0					
ANR	6505368	ArgumentList	"""GetSingleSegmentBlock: Allocation failed.\\n"""		6505316	1					
ANR	6505369	Argument	"""GetSingleSegmentBlock: Allocation failed.\\n"""		6505316	0					
ANR	6505370	PrimaryExpression	"""GetSingleSegmentBlock: Allocation failed.\\n"""		6505316	0					
ANR	6505371	GotoStatement	goto err ;	943:2:31160:31168	6505316	1	True				
ANR	6505372	Identifier	err		6505316	0					
ANR	6505373	ExpressionStatement	hb -> extraInfo = extra	945:1:31174:31195	6505316	4	True				
ANR	6505374	AssignmentExpression	hb -> extraInfo = extra		6505316	0		=			
ANR	6505375	PtrMemberAccess	hb -> extraInfo		6505316	0					
ANR	6505376	Identifier	hb		6505316	0					
ANR	6505377	Identifier	extraInfo		6505316	1					
ANR	6505378	Identifier	extra		6505316	1					
ANR	6505379	ExpressionStatement	extra -> heap = ( WPARAM ) heapBase	946:1:31198:31228	6505316	5	True				
ANR	6505380	AssignmentExpression	extra -> heap = ( WPARAM ) heapBase		6505316	0		=			
ANR	6505381	PtrMemberAccess	extra -> heap		6505316	0					
ANR	6505382	Identifier	extra		6505316	0					
ANR	6505383	Identifier	heap		6505316	1					
ANR	6505384	CastExpression	( WPARAM ) heapBase		6505316	1					
ANR	6505385	CastTarget	WPARAM		6505316	0					
ANR	6505386	Identifier	heapBase		6505316	1					
ANR	6505387	IdentifierDeclStatement	WPARAM granularity = ( WPARAM ) dbg -> bits * 2 ;	947:1:31231:31273	6505316	6	True				
ANR	6505388	IdentifierDecl	granularity = ( WPARAM ) dbg -> bits * 2		6505316	0					
ANR	6505389	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505390	Identifier	granularity		6505316	1					
ANR	6505391	AssignmentExpression	granularity = ( WPARAM ) dbg -> bits * 2		6505316	2		=			
ANR	6505392	Identifier	granularity		6505316	0					
ANR	6505393	MultiplicativeExpression	( WPARAM ) dbg -> bits * 2		6505316	1		*			
ANR	6505394	CastExpression	( WPARAM ) dbg -> bits		6505316	0					
ANR	6505395	CastTarget	WPARAM		6505316	0					
ANR	6505396	PtrMemberAccess	dbg -> bits		6505316	1					
ANR	6505397	Identifier	dbg		6505316	0					
ANR	6505398	Identifier	bits		6505316	1					
ANR	6505399	PrimaryExpression	2		6505316	1					
ANR	6505400	IdentifierDeclStatement	WPARAM headerOff = offset - granularity ;	948:1:31276:31315	6505316	7	True				
ANR	6505401	IdentifierDecl	headerOff = offset - granularity		6505316	0					
ANR	6505402	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505403	Identifier	headerOff		6505316	1					
ANR	6505404	AssignmentExpression	headerOff = offset - granularity		6505316	2		=			
ANR	6505405	Identifier	headerOff		6505316	0					
ANR	6505406	AdditiveExpression	offset - granularity		6505316	1		-			
ANR	6505407	Identifier	offset		6505316	0					
ANR	6505408	Identifier	granularity		6505316	1					
ANR	6505409	IdentifierDeclStatement	SEGMENT_HEAP heap ;	949:1:31318:31335	6505316	8	True				
ANR	6505410	IdentifierDecl	heap		6505316	0					
ANR	6505411	IdentifierDeclType	SEGMENT_HEAP		6505316	0					
ANR	6505412	Identifier	heap		6505316	1					
ANR	6505413	ExpressionStatement	"ReadProcessMemory ( h_proc , heapBase , & heap , sizeof ( SEGMENT_HEAP ) , NULL )"	950:1:31338:31410	6505316	9	True				
ANR	6505414	CallExpression	"ReadProcessMemory ( h_proc , heapBase , & heap , sizeof ( SEGMENT_HEAP ) , NULL )"		6505316	0					
ANR	6505415	Callee	ReadProcessMemory		6505316	0					
ANR	6505416	Identifier	ReadProcessMemory		6505316	0					
ANR	6505417	ArgumentList	h_proc		6505316	1					
ANR	6505418	Argument	h_proc		6505316	0					
ANR	6505419	Identifier	h_proc		6505316	0					
ANR	6505420	Argument	heapBase		6505316	1					
ANR	6505421	Identifier	heapBase		6505316	0					
ANR	6505422	Argument	& heap		6505316	2					
ANR	6505423	UnaryOperationExpression	& heap		6505316	0					
ANR	6505424	UnaryOperator	&		6505316	0					
ANR	6505425	Identifier	heap		6505316	1					
ANR	6505426	Argument	sizeof ( SEGMENT_HEAP )		6505316	3					
ANR	6505427	SizeofExpression	sizeof ( SEGMENT_HEAP )		6505316	0					
ANR	6505428	Sizeof	sizeof		6505316	0					
ANR	6505429	SizeofOperand	SEGMENT_HEAP		6505316	1					
ANR	6505430	Argument	NULL		6505316	4					
ANR	6505431	Identifier	NULL		6505316	0					
ANR	6505432	IdentifierDeclStatement	WPARAM RtlpHpHeapGlobal ;	951:1:31413:31436	6505316	10	True				
ANR	6505433	IdentifierDecl	RtlpHpHeapGlobal		6505316	0					
ANR	6505434	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505435	Identifier	RtlpHpHeapGlobal		6505316	1					
ANR	6505436	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) RtlpHpHeapGlobalsOffset , & RtlpHpHeapGlobal , sizeof ( WPARAM ) , NULL )"	952:1:31439:31539	6505316	11	True				
ANR	6505437	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) RtlpHpHeapGlobalsOffset , & RtlpHpHeapGlobal , sizeof ( WPARAM ) , NULL )"		6505316	0					
ANR	6505438	Callee	ReadProcessMemory		6505316	0					
ANR	6505439	Identifier	ReadProcessMemory		6505316	0					
ANR	6505440	ArgumentList	h_proc		6505316	1					
ANR	6505441	Argument	h_proc		6505316	0					
ANR	6505442	Identifier	h_proc		6505316	0					
ANR	6505443	Argument	( PVOID ) RtlpHpHeapGlobalsOffset		6505316	1					
ANR	6505444	CastExpression	( PVOID ) RtlpHpHeapGlobalsOffset		6505316	0					
ANR	6505445	CastTarget	PVOID		6505316	0					
ANR	6505446	Identifier	RtlpHpHeapGlobalsOffset		6505316	1					
ANR	6505447	Argument	& RtlpHpHeapGlobal		6505316	2					
ANR	6505448	UnaryOperationExpression	& RtlpHpHeapGlobal		6505316	0					
ANR	6505449	UnaryOperator	&		6505316	0					
ANR	6505450	Identifier	RtlpHpHeapGlobal		6505316	1					
ANR	6505451	Argument	sizeof ( WPARAM )		6505316	3					
ANR	6505452	SizeofExpression	sizeof ( WPARAM )		6505316	0					
ANR	6505453	Sizeof	sizeof		6505316	0					
ANR	6505454	SizeofOperand	WPARAM		6505316	1					
ANR	6505455	Argument	NULL		6505316	4					
ANR	6505456	Identifier	NULL		6505316	0					
ANR	6505457	IdentifierDeclStatement	WPARAM pgSegOff = headerOff & heap . SegContexts [ 0 ] . SegmentMask ;	954:1:31543:31604	6505316	12	True				
ANR	6505458	IdentifierDecl	pgSegOff = headerOff & heap . SegContexts [ 0 ] . SegmentMask		6505316	0					
ANR	6505459	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505460	Identifier	pgSegOff		6505316	1					
ANR	6505461	AssignmentExpression	pgSegOff = headerOff & heap . SegContexts [ 0 ] . SegmentMask		6505316	2		=			
ANR	6505462	Identifier	pgSegOff		6505316	0					
ANR	6505463	BitAndExpression	headerOff & heap . SegContexts [ 0 ] . SegmentMask		6505316	1		&			
ANR	6505464	Identifier	headerOff		6505316	0					
ANR	6505465	MemberAccess	heap . SegContexts [ 0 ] . SegmentMask		6505316	1					
ANR	6505466	ArrayIndexing	heap . SegContexts [ 0 ]		6505316	0					
ANR	6505467	MemberAccess	heap . SegContexts		6505316	0					
ANR	6505468	Identifier	heap		6505316	0					
ANR	6505469	Identifier	SegContexts		6505316	1					
ANR	6505470	PrimaryExpression	0		6505316	1					
ANR	6505471	Identifier	SegmentMask		6505316	1					
ANR	6505472	IdentifierDeclStatement	WPARAM segSignature ;	955:1:31607:31626	6505316	13	True				
ANR	6505473	IdentifierDecl	segSignature		6505316	0					
ANR	6505474	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505475	Identifier	segSignature		6505316	1					
ANR	6505476	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) ( pgSegOff + sizeof ( LIST_ENTRY ) ) , & segSignature , sizeof ( WPARAM ) , NULL )"	956:1:31629:31734	6505316	14	True				
ANR	6505477	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) ( pgSegOff + sizeof ( LIST_ENTRY ) ) , & segSignature , sizeof ( WPARAM ) , NULL )"		6505316	0					
ANR	6505478	Callee	ReadProcessMemory		6505316	0					
ANR	6505479	Identifier	ReadProcessMemory		6505316	0					
ANR	6505480	ArgumentList	h_proc		6505316	1					
ANR	6505481	Argument	h_proc		6505316	0					
ANR	6505482	Identifier	h_proc		6505316	0					
ANR	6505483	Argument	( PVOID ) ( pgSegOff + sizeof ( LIST_ENTRY ) )		6505316	1					
ANR	6505484	CastExpression	( PVOID ) ( pgSegOff + sizeof ( LIST_ENTRY ) )		6505316	0					
ANR	6505485	CastTarget	PVOID		6505316	0					
ANR	6505486	AdditiveExpression	pgSegOff + sizeof ( LIST_ENTRY )		6505316	1		+			
ANR	6505487	Identifier	pgSegOff		6505316	0					
ANR	6505488	SizeofExpression	sizeof ( LIST_ENTRY )		6505316	1					
ANR	6505489	Sizeof	sizeof		6505316	0					
ANR	6505490	SizeofOperand	LIST_ENTRY		6505316	1					
ANR	6505491	Argument	& segSignature		6505316	2					
ANR	6505492	UnaryOperationExpression	& segSignature		6505316	0					
ANR	6505493	UnaryOperator	&		6505316	0					
ANR	6505494	Identifier	segSignature		6505316	1					
ANR	6505495	Argument	sizeof ( WPARAM )		6505316	3					
ANR	6505496	SizeofExpression	sizeof ( WPARAM )		6505316	0					
ANR	6505497	Sizeof	sizeof		6505316	0					
ANR	6505498	SizeofOperand	WPARAM		6505316	1					
ANR	6505499	Argument	NULL		6505316	4					
ANR	6505500	Identifier	NULL		6505316	0					
ANR	6505501	IdentifierDeclStatement	"WPARAM test = RtlpHpHeapGlobal ^ pgSegOff ^ segSignature ^ ( ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) ) ;"	957:1:31768:31884	6505316	15	True				
ANR	6505502	IdentifierDecl	"test = RtlpHpHeapGlobal ^ pgSegOff ^ segSignature ^ ( ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) )"		6505316	0					
ANR	6505503	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505504	Identifier	test		6505316	1					
ANR	6505505	AssignmentExpression	"test = RtlpHpHeapGlobal ^ pgSegOff ^ segSignature ^ ( ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) )"		6505316	2		=			
ANR	6505506	Identifier	test		6505316	0					
ANR	6505507	ExclusiveOrExpression	"RtlpHpHeapGlobal ^ pgSegOff ^ segSignature ^ ( ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) )"		6505316	1		^			
ANR	6505508	Identifier	RtlpHpHeapGlobal		6505316	0					
ANR	6505509	ExclusiveOrExpression	"pgSegOff ^ segSignature ^ ( ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) )"		6505316	1		^			
ANR	6505510	Identifier	pgSegOff		6505316	0					
ANR	6505511	ExclusiveOrExpression	"segSignature ^ ( ( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts ) )"		6505316	1		^			
ANR	6505512	Identifier	segSignature		6505316	0					
ANR	6505513	AdditiveExpression	"( WPARAM ) heapBase + offsetof ( SEGMENT_HEAP , SegContexts )"		6505316	1		+			
ANR	6505514	CastExpression	( WPARAM ) heapBase		6505316	0					
ANR	6505515	CastTarget	WPARAM		6505316	0					
ANR	6505516	Identifier	heapBase		6505316	1					
ANR	6505517	CallExpression	"offsetof ( SEGMENT_HEAP , SegContexts )"		6505316	1					
ANR	6505518	Callee	offsetof		6505316	0					
ANR	6505519	Identifier	offsetof		6505316	0					
ANR	6505520	ArgumentList	SEGMENT_HEAP		6505316	1					
ANR	6505521	Argument	SEGMENT_HEAP		6505316	0					
ANR	6505522	Identifier	SEGMENT_HEAP		6505316	0					
ANR	6505523	Argument	SegContexts		6505316	1					
ANR	6505524	Identifier	SegContexts		6505316	0					
ANR	6505525	IfStatement	if ( test == 0xa2e64eada2e64ead )		6505316	16					
ANR	6505526	Condition	test == 0xa2e64eada2e64ead	958:5:31891:31916	6505316	0	True				
ANR	6505527	EqualityExpression	test == 0xa2e64eada2e64ead		6505316	0		==			
ANR	6505528	Identifier	test		6505316	0					
ANR	6505529	PrimaryExpression	0xa2e64eada2e64ead		6505316	1					
ANR	6505530	CompoundStatement		38:2:1534:1589	6505316	1					
ANR	6505531	IdentifierDeclStatement	HEAP_PAGE_SEGMENT segment ;	959:2:31945:31970	6505316	0	True				
ANR	6505532	IdentifierDecl	segment		6505316	0					
ANR	6505533	IdentifierDeclType	HEAP_PAGE_SEGMENT		6505316	0					
ANR	6505534	Identifier	segment		6505316	1					
ANR	6505535	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) pgSegOff , & segment , sizeof ( HEAP_PAGE_SEGMENT ) , NULL )"	960:2:31974:32061	6505316	1	True				
ANR	6505536	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) pgSegOff , & segment , sizeof ( HEAP_PAGE_SEGMENT ) , NULL )"		6505316	0					
ANR	6505537	Callee	ReadProcessMemory		6505316	0					
ANR	6505538	Identifier	ReadProcessMemory		6505316	0					
ANR	6505539	ArgumentList	h_proc		6505316	1					
ANR	6505540	Argument	h_proc		6505316	0					
ANR	6505541	Identifier	h_proc		6505316	0					
ANR	6505542	Argument	( PVOID ) pgSegOff		6505316	1					
ANR	6505543	CastExpression	( PVOID ) pgSegOff		6505316	0					
ANR	6505544	CastTarget	PVOID		6505316	0					
ANR	6505545	Identifier	pgSegOff		6505316	1					
ANR	6505546	Argument	& segment		6505316	2					
ANR	6505547	UnaryOperationExpression	& segment		6505316	0					
ANR	6505548	UnaryOperator	&		6505316	0					
ANR	6505549	Identifier	segment		6505316	1					
ANR	6505550	Argument	sizeof ( HEAP_PAGE_SEGMENT )		6505316	3					
ANR	6505551	SizeofExpression	sizeof ( HEAP_PAGE_SEGMENT )		6505316	0					
ANR	6505552	Sizeof	sizeof		6505316	0					
ANR	6505553	SizeofOperand	HEAP_PAGE_SEGMENT		6505316	1					
ANR	6505554	Argument	NULL		6505316	4					
ANR	6505555	Identifier	NULL		6505316	0					
ANR	6505556	IdentifierDeclStatement	WPARAM pgRangeDescOff = ( ( headerOff - pgSegOff ) >> heap . SegContexts [ 0 ] . UnitShift ) << 5 ;	961:2:32065:32151	6505316	2	True				
ANR	6505557	IdentifierDecl	pgRangeDescOff = ( ( headerOff - pgSegOff ) >> heap . SegContexts [ 0 ] . UnitShift ) << 5		6505316	0					
ANR	6505558	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505559	Identifier	pgRangeDescOff		6505316	1					
ANR	6505560	AssignmentExpression	pgRangeDescOff = ( ( headerOff - pgSegOff ) >> heap . SegContexts [ 0 ] . UnitShift ) << 5		6505316	2		=			
ANR	6505561	Identifier	pgRangeDescOff		6505316	0					
ANR	6505562	ShiftExpression	( ( headerOff - pgSegOff ) >> heap . SegContexts [ 0 ] . UnitShift ) << 5		6505316	1		<<			
ANR	6505563	ShiftExpression	( headerOff - pgSegOff ) >> heap . SegContexts [ 0 ] . UnitShift		6505316	0		>>			
ANR	6505564	AdditiveExpression	headerOff - pgSegOff		6505316	0		-			
ANR	6505565	Identifier	headerOff		6505316	0					
ANR	6505566	Identifier	pgSegOff		6505316	1					
ANR	6505567	MemberAccess	heap . SegContexts [ 0 ] . UnitShift		6505316	1					
ANR	6505568	ArrayIndexing	heap . SegContexts [ 0 ]		6505316	0					
ANR	6505569	MemberAccess	heap . SegContexts		6505316	0					
ANR	6505570	Identifier	heap		6505316	0					
ANR	6505571	Identifier	SegContexts		6505316	1					
ANR	6505572	PrimaryExpression	0		6505316	1					
ANR	6505573	Identifier	UnitShift		6505316	1					
ANR	6505574	PrimaryExpression	5		6505316	1					
ANR	6505575	IdentifierDeclStatement	WPARAM pageIndex = pgRangeDescOff / sizeof ( HEAP_PAGE_RANGE_DESCRIPTOR ) ;	962:2:32155:32226	6505316	3	True				
ANR	6505576	IdentifierDecl	pageIndex = pgRangeDescOff / sizeof ( HEAP_PAGE_RANGE_DESCRIPTOR )		6505316	0					
ANR	6505577	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505578	Identifier	pageIndex		6505316	1					
ANR	6505579	AssignmentExpression	pageIndex = pgRangeDescOff / sizeof ( HEAP_PAGE_RANGE_DESCRIPTOR )		6505316	2		=			
ANR	6505580	Identifier	pageIndex		6505316	0					
ANR	6505581	MultiplicativeExpression	pgRangeDescOff / sizeof ( HEAP_PAGE_RANGE_DESCRIPTOR )		6505316	1		/			
ANR	6505582	Identifier	pgRangeDescOff		6505316	0					
ANR	6505583	SizeofExpression	sizeof ( HEAP_PAGE_RANGE_DESCRIPTOR )		6505316	1					
ANR	6505584	Sizeof	sizeof		6505316	0					
ANR	6505585	SizeofOperand	HEAP_PAGE_RANGE_DESCRIPTOR		6505316	1					
ANR	6505586	IfStatement	if ( ! ( segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_FIRST ) )		6505316	4					
ANR	6505587	Condition	! ( segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_FIRST )	963:6:32234:32300	6505316	0	True				
ANR	6505588	UnaryOperationExpression	! ( segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_FIRST )		6505316	0					
ANR	6505589	UnaryOperator	!		6505316	0					
ANR	6505590	BitAndExpression	segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_FIRST		6505316	1		&			
ANR	6505591	MemberAccess	segment . DescArray [ pageIndex ] . RangeFlags		6505316	0					
ANR	6505592	ArrayIndexing	segment . DescArray [ pageIndex ]		6505316	0					
ANR	6505593	MemberAccess	segment . DescArray		6505316	0					
ANR	6505594	Identifier	segment		6505316	0					
ANR	6505595	Identifier	DescArray		6505316	1					
ANR	6505596	Identifier	pageIndex		6505316	1					
ANR	6505597	Identifier	RangeFlags		6505316	1					
ANR	6505598	Identifier	PAGE_RANGE_FLAGS_FIRST		6505316	1					
ANR	6505599	CompoundStatement		34:75:1461:1461	6505316	1					
ANR	6505600	ExpressionStatement	pageIndex -= segment . DescArray [ pageIndex ] . UnitOffset	964:3:32308:32360	6505316	0	True				
ANR	6505601	AssignmentExpression	pageIndex -= segment . DescArray [ pageIndex ] . UnitOffset		6505316	0		-=			
ANR	6505602	Identifier	pageIndex		6505316	0					
ANR	6505603	MemberAccess	segment . DescArray [ pageIndex ] . UnitOffset		6505316	1					
ANR	6505604	ArrayIndexing	segment . DescArray [ pageIndex ]		6505316	0					
ANR	6505605	MemberAccess	segment . DescArray		6505316	0					
ANR	6505606	Identifier	segment		6505316	0					
ANR	6505607	Identifier	DescArray		6505316	1					
ANR	6505608	Identifier	pageIndex		6505316	1					
ANR	6505609	Identifier	UnitOffset		6505316	1					
ANR	6505610	IdentifierDeclStatement	WPARAM subsegmentOffset = pgSegOff + pageIndex * 0x1000 ;	967:2:32376:32431	6505316	5	True				
ANR	6505611	IdentifierDecl	subsegmentOffset = pgSegOff + pageIndex * 0x1000		6505316	0					
ANR	6505612	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505613	Identifier	subsegmentOffset		6505316	1					
ANR	6505614	AssignmentExpression	subsegmentOffset = pgSegOff + pageIndex * 0x1000		6505316	2		=			
ANR	6505615	Identifier	subsegmentOffset		6505316	0					
ANR	6505616	AdditiveExpression	pgSegOff + pageIndex * 0x1000		6505316	1		+			
ANR	6505617	Identifier	pgSegOff		6505316	0					
ANR	6505618	MultiplicativeExpression	pageIndex * 0x1000		6505316	1		*			
ANR	6505619	Identifier	pageIndex		6505316	0					
ANR	6505620	PrimaryExpression	0x1000		6505316	1					
ANR	6505621	IfStatement	if ( segment . DescArray [ pageIndex ] . RangeFlags & 0xF && segment . DescArray [ pageIndex ] . UnusedBytes == 0x1000 )		6505316	6					
ANR	6505622	Condition	segment . DescArray [ pageIndex ] . RangeFlags & 0xF && segment . DescArray [ pageIndex ] . UnusedBytes == 0x1000	968:6:32439:32537	6505316	0	True				
ANR	6505623	AndExpression	segment . DescArray [ pageIndex ] . RangeFlags & 0xF && segment . DescArray [ pageIndex ] . UnusedBytes == 0x1000		6505316	0		&&			
ANR	6505624	BitAndExpression	segment . DescArray [ pageIndex ] . RangeFlags & 0xF		6505316	0		&			
ANR	6505625	MemberAccess	segment . DescArray [ pageIndex ] . RangeFlags		6505316	0					
ANR	6505626	ArrayIndexing	segment . DescArray [ pageIndex ]		6505316	0					
ANR	6505627	MemberAccess	segment . DescArray		6505316	0					
ANR	6505628	Identifier	segment		6505316	0					
ANR	6505629	Identifier	DescArray		6505316	1					
ANR	6505630	Identifier	pageIndex		6505316	1					
ANR	6505631	Identifier	RangeFlags		6505316	1					
ANR	6505632	PrimaryExpression	0xF		6505316	1					
ANR	6505633	EqualityExpression	segment . DescArray [ pageIndex ] . UnusedBytes == 0x1000		6505316	1		==			
ANR	6505634	MemberAccess	segment . DescArray [ pageIndex ] . UnusedBytes		6505316	0					
ANR	6505635	ArrayIndexing	segment . DescArray [ pageIndex ]		6505316	0					
ANR	6505636	MemberAccess	segment . DescArray		6505316	0					
ANR	6505637	Identifier	segment		6505316	0					
ANR	6505638	Identifier	DescArray		6505316	1					
ANR	6505639	Identifier	pageIndex		6505316	1					
ANR	6505640	Identifier	UnusedBytes		6505316	1					
ANR	6505641	PrimaryExpression	0x1000		6505316	1					
ANR	6505642	CompoundStatement		40:3:1703:1732	6505316	1					
ANR	6505643	IdentifierDeclStatement	HEAP_VS_SUBSEGMENT subsegment ;	969:3:32545:32574	6505316	0	True				
ANR	6505644	IdentifierDecl	subsegment		6505316	0					
ANR	6505645	IdentifierDeclType	HEAP_VS_SUBSEGMENT		6505316	0					
ANR	6505646	Identifier	subsegment		6505316	1					
ANR	6505647	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) subsegmentOffset , & subsegment , sizeof ( HEAP_VS_SUBSEGMENT ) , NULL )"	970:3:32579:32678	6505316	1	True				
ANR	6505648	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) subsegmentOffset , & subsegment , sizeof ( HEAP_VS_SUBSEGMENT ) , NULL )"		6505316	0					
ANR	6505649	Callee	ReadProcessMemory		6505316	0					
ANR	6505650	Identifier	ReadProcessMemory		6505316	0					
ANR	6505651	ArgumentList	h_proc		6505316	1					
ANR	6505652	Argument	h_proc		6505316	0					
ANR	6505653	Identifier	h_proc		6505316	0					
ANR	6505654	Argument	( PVOID ) subsegmentOffset		6505316	1					
ANR	6505655	CastExpression	( PVOID ) subsegmentOffset		6505316	0					
ANR	6505656	CastTarget	PVOID		6505316	0					
ANR	6505657	Identifier	subsegmentOffset		6505316	1					
ANR	6505658	Argument	& subsegment		6505316	2					
ANR	6505659	UnaryOperationExpression	& subsegment		6505316	0					
ANR	6505660	UnaryOperator	&		6505316	0					
ANR	6505661	Identifier	subsegment		6505316	1					
ANR	6505662	Argument	sizeof ( HEAP_VS_SUBSEGMENT )		6505316	3					
ANR	6505663	SizeofExpression	sizeof ( HEAP_VS_SUBSEGMENT )		6505316	0					
ANR	6505664	Sizeof	sizeof		6505316	0					
ANR	6505665	SizeofOperand	HEAP_VS_SUBSEGMENT		6505316	1					
ANR	6505666	Argument	NULL		6505316	4					
ANR	6505667	Identifier	NULL		6505316	0					
ANR	6505668	IfStatement	if ( ( subsegment . Size ^ 0x2BED ) == subsegment . Signature )		6505316	2					
ANR	6505669	Condition	( subsegment . Size ^ 0x2BED ) == subsegment . Signature	971:7:32687:32736	6505316	0	True				
ANR	6505670	EqualityExpression	( subsegment . Size ^ 0x2BED ) == subsegment . Signature		6505316	0		==			
ANR	6505671	ExclusiveOrExpression	subsegment . Size ^ 0x2BED		6505316	0		^			
ANR	6505672	MemberAccess	subsegment . Size		6505316	0					
ANR	6505673	Identifier	subsegment		6505316	0					
ANR	6505674	Identifier	Size		6505316	1					
ANR	6505675	PrimaryExpression	0x2BED		6505316	1					
ANR	6505676	MemberAccess	subsegment . Signature		6505316	1					
ANR	6505677	Identifier	subsegment		6505316	0					
ANR	6505678	Identifier	Signature		6505316	1					
ANR	6505679	CompoundStatement		43:4:1903:1930	6505316	1					
ANR	6505680	IdentifierDeclStatement	HEAP_VS_CHUNK_HEADER header ;	972:4:32745:32772	6505316	0	True				
ANR	6505681	IdentifierDecl	header		6505316	0					
ANR	6505682	IdentifierDeclType	HEAP_VS_CHUNK_HEADER		6505316	0					
ANR	6505683	Identifier	header		6505316	1					
ANR	6505684	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) ( headerOff - sizeof ( HEAP_VS_CHUNK_HEADER ) ) , & header , sizeof ( HEAP_VS_CHUNK_HEADER ) , NULL )"	973:4:32778:32902	6505316	1	True				
ANR	6505685	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) ( headerOff - sizeof ( HEAP_VS_CHUNK_HEADER ) ) , & header , sizeof ( HEAP_VS_CHUNK_HEADER ) , NULL )"		6505316	0					
ANR	6505686	Callee	ReadProcessMemory		6505316	0					
ANR	6505687	Identifier	ReadProcessMemory		6505316	0					
ANR	6505688	ArgumentList	h_proc		6505316	1					
ANR	6505689	Argument	h_proc		6505316	0					
ANR	6505690	Identifier	h_proc		6505316	0					
ANR	6505691	Argument	( PVOID ) ( headerOff - sizeof ( HEAP_VS_CHUNK_HEADER ) )		6505316	1					
ANR	6505692	CastExpression	( PVOID ) ( headerOff - sizeof ( HEAP_VS_CHUNK_HEADER ) )		6505316	0					
ANR	6505693	CastTarget	PVOID		6505316	0					
ANR	6505694	AdditiveExpression	headerOff - sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	1		-			
ANR	6505695	Identifier	headerOff		6505316	0					
ANR	6505696	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	1					
ANR	6505697	Sizeof	sizeof		6505316	0					
ANR	6505698	SizeofOperand	HEAP_VS_CHUNK_HEADER		6505316	1					
ANR	6505699	Argument	& header		6505316	2					
ANR	6505700	UnaryOperationExpression	& header		6505316	0					
ANR	6505701	UnaryOperator	&		6505316	0					
ANR	6505702	Identifier	header		6505316	1					
ANR	6505703	Argument	sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	3					
ANR	6505704	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	0					
ANR	6505705	Sizeof	sizeof		6505316	0					
ANR	6505706	SizeofOperand	HEAP_VS_CHUNK_HEADER		6505316	1					
ANR	6505707	Argument	NULL		6505316	4					
ANR	6505708	Identifier	NULL		6505316	0					
ANR	6505709	ExpressionStatement	header . Sizes . HeaderBits ^= RtlpHpHeapGlobal ^ headerOff	974:4:32908:32963	6505316	2	True				
ANR	6505710	AssignmentExpression	header . Sizes . HeaderBits ^= RtlpHpHeapGlobal ^ headerOff		6505316	0		^=			
ANR	6505711	MemberAccess	header . Sizes . HeaderBits		6505316	0					
ANR	6505712	MemberAccess	header . Sizes		6505316	0					
ANR	6505713	Identifier	header		6505316	0					
ANR	6505714	Identifier	Sizes		6505316	1					
ANR	6505715	Identifier	HeaderBits		6505316	1					
ANR	6505716	ExclusiveOrExpression	RtlpHpHeapGlobal ^ headerOff		6505316	1		^			
ANR	6505717	Identifier	RtlpHpHeapGlobal		6505316	0					
ANR	6505718	Identifier	headerOff		6505316	1					
ANR	6505719	ExpressionStatement	hb -> dwAddress = ( PVOID ) offset	975:4:32969:32998	6505316	3	True				
ANR	6505720	AssignmentExpression	hb -> dwAddress = ( PVOID ) offset		6505316	0		=			
ANR	6505721	PtrMemberAccess	hb -> dwAddress		6505316	0					
ANR	6505722	Identifier	hb		6505316	0					
ANR	6505723	Identifier	dwAddress		6505316	1					
ANR	6505724	CastExpression	( PVOID ) offset		6505316	1					
ANR	6505725	CastTarget	PVOID		6505316	0					
ANR	6505726	Identifier	offset		6505316	1					
ANR	6505727	ExpressionStatement	hb -> dwSize = header . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER )	976:4:33004:33072	6505316	4	True				
ANR	6505728	AssignmentExpression	hb -> dwSize = header . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	0		=			
ANR	6505729	PtrMemberAccess	hb -> dwSize		6505316	0					
ANR	6505730	Identifier	hb		6505316	0					
ANR	6505731	Identifier	dwSize		6505316	1					
ANR	6505732	MultiplicativeExpression	header . Sizes . UnsafeSize * sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	1		*			
ANR	6505733	MemberAccess	header . Sizes . UnsafeSize		6505316	0					
ANR	6505734	MemberAccess	header . Sizes		6505316	0					
ANR	6505735	Identifier	header		6505316	0					
ANR	6505736	Identifier	Sizes		6505316	1					
ANR	6505737	Identifier	UnsafeSize		6505316	1					
ANR	6505738	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	1					
ANR	6505739	Sizeof	sizeof		6505316	0					
ANR	6505740	SizeofOperand	HEAP_VS_CHUNK_HEADER		6505316	1					
ANR	6505741	ExpressionStatement	hb -> dwFlags = 1 | SEGMENT_HEAP_BLOCK | VS_BLOCK	977:4:33078:33125	6505316	5	True				
ANR	6505742	AssignmentExpression	hb -> dwFlags = 1 | SEGMENT_HEAP_BLOCK | VS_BLOCK		6505316	0		=			
ANR	6505743	PtrMemberAccess	hb -> dwFlags		6505316	0					
ANR	6505744	Identifier	hb		6505316	0					
ANR	6505745	Identifier	dwFlags		6505316	1					
ANR	6505746	InclusiveOrExpression	1 | SEGMENT_HEAP_BLOCK | VS_BLOCK		6505316	1		|			
ANR	6505747	PrimaryExpression	1		6505316	0					
ANR	6505748	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | VS_BLOCK		6505316	1		|			
ANR	6505749	Identifier	SEGMENT_HEAP_BLOCK		6505316	0					
ANR	6505750	Identifier	VS_BLOCK		6505316	1					
ANR	6505751	ExpressionStatement	extra -> granularity = granularity + sizeof ( HEAP_VS_CHUNK_HEADER )	978:4:33131:33195	6505316	6	True				
ANR	6505752	AssignmentExpression	extra -> granularity = granularity + sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	0		=			
ANR	6505753	PtrMemberAccess	extra -> granularity		6505316	0					
ANR	6505754	Identifier	extra		6505316	0					
ANR	6505755	Identifier	granularity		6505316	1					
ANR	6505756	AdditiveExpression	granularity + sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	1		+			
ANR	6505757	Identifier	granularity		6505316	0					
ANR	6505758	SizeofExpression	sizeof ( HEAP_VS_CHUNK_HEADER )		6505316	1					
ANR	6505759	Sizeof	sizeof		6505316	0					
ANR	6505760	SizeofOperand	HEAP_VS_CHUNK_HEADER		6505316	1					
ANR	6505761	ExpressionStatement	extra -> segment = subsegmentOffset	979:4:33201:33234	6505316	7	True				
ANR	6505762	AssignmentExpression	extra -> segment = subsegmentOffset		6505316	0		=			
ANR	6505763	PtrMemberAccess	extra -> segment		6505316	0					
ANR	6505764	Identifier	extra		6505316	0					
ANR	6505765	Identifier	segment		6505316	1					
ANR	6505766	Identifier	subsegmentOffset		6505316	1					
ANR	6505767	ReturnStatement	return hb ;	980:4:33240:33249	6505316	8	True				
ANR	6505768	Identifier	hb		6505316	0					
ANR	6505769	IfStatement	if ( segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_LFH_SUBSEGMENT )		6505316	7					
ANR	6505770	Condition	segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_LFH_SUBSEGMENT	984:6:33275:33347	6505316	0	True				
ANR	6505771	BitAndExpression	segment . DescArray [ pageIndex ] . RangeFlags & PAGE_RANGE_FLAGS_LFH_SUBSEGMENT		6505316	0		&			
ANR	6505772	MemberAccess	segment . DescArray [ pageIndex ] . RangeFlags		6505316	0					
ANR	6505773	ArrayIndexing	segment . DescArray [ pageIndex ]		6505316	0					
ANR	6505774	MemberAccess	segment . DescArray		6505316	0					
ANR	6505775	Identifier	segment		6505316	0					
ANR	6505776	Identifier	DescArray		6505316	1					
ANR	6505777	Identifier	pageIndex		6505316	1					
ANR	6505778	Identifier	RangeFlags		6505316	1					
ANR	6505779	Identifier	PAGE_RANGE_FLAGS_LFH_SUBSEGMENT		6505316	1					
ANR	6505780	CompoundStatement		58:3:2653:2666	6505316	1					
ANR	6505781	IdentifierDeclStatement	HEAP_LFH_SUBSEGMENT subsegment ;	985:3:33355:33385	6505316	0	True				
ANR	6505782	IdentifierDecl	subsegment		6505316	0					
ANR	6505783	IdentifierDeclType	HEAP_LFH_SUBSEGMENT		6505316	0					
ANR	6505784	Identifier	subsegment		6505316	1					
ANR	6505785	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) subsegmentOffset , & subsegment , sizeof ( HEAP_LFH_SUBSEGMENT ) , NULL )"	986:3:33390:33490	6505316	1	True				
ANR	6505786	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) subsegmentOffset , & subsegment , sizeof ( HEAP_LFH_SUBSEGMENT ) , NULL )"		6505316	0					
ANR	6505787	Callee	ReadProcessMemory		6505316	0					
ANR	6505788	Identifier	ReadProcessMemory		6505316	0					
ANR	6505789	ArgumentList	h_proc		6505316	1					
ANR	6505790	Argument	h_proc		6505316	0					
ANR	6505791	Identifier	h_proc		6505316	0					
ANR	6505792	Argument	( PVOID ) subsegmentOffset		6505316	1					
ANR	6505793	CastExpression	( PVOID ) subsegmentOffset		6505316	0					
ANR	6505794	CastTarget	PVOID		6505316	0					
ANR	6505795	Identifier	subsegmentOffset		6505316	1					
ANR	6505796	Argument	& subsegment		6505316	2					
ANR	6505797	UnaryOperationExpression	& subsegment		6505316	0					
ANR	6505798	UnaryOperator	&		6505316	0					
ANR	6505799	Identifier	subsegment		6505316	1					
ANR	6505800	Argument	sizeof ( HEAP_LFH_SUBSEGMENT )		6505316	3					
ANR	6505801	SizeofExpression	sizeof ( HEAP_LFH_SUBSEGMENT )		6505316	0					
ANR	6505802	Sizeof	sizeof		6505316	0					
ANR	6505803	SizeofOperand	HEAP_LFH_SUBSEGMENT		6505316	1					
ANR	6505804	Argument	NULL		6505316	4					
ANR	6505805	Identifier	NULL		6505316	0					
ANR	6505806	IdentifierDeclStatement	WPARAM lfhKey ;	987:3:33495:33508	6505316	2	True				
ANR	6505807	IdentifierDecl	lfhKey		6505316	0					
ANR	6505808	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505809	Identifier	lfhKey		6505316	1					
ANR	6505810	ExpressionStatement	"GetLFHKey ( dbg , h_proc , true , & lfhKey )"	988:3:33513:33551	6505316	3	True				
ANR	6505811	CallExpression	"GetLFHKey ( dbg , h_proc , true , & lfhKey )"		6505316	0					
ANR	6505812	Callee	GetLFHKey		6505316	0					
ANR	6505813	Identifier	GetLFHKey		6505316	0					
ANR	6505814	ArgumentList	dbg		6505316	1					
ANR	6505815	Argument	dbg		6505316	0					
ANR	6505816	Identifier	dbg		6505316	0					
ANR	6505817	Argument	h_proc		6505316	1					
ANR	6505818	Identifier	h_proc		6505316	0					
ANR	6505819	Argument	true		6505316	2					
ANR	6505820	Identifier	true		6505316	0					
ANR	6505821	Argument	& lfhKey		6505316	3					
ANR	6505822	UnaryOperationExpression	& lfhKey		6505316	0					
ANR	6505823	UnaryOperator	&		6505316	0					
ANR	6505824	Identifier	lfhKey		6505316	1					
ANR	6505825	ExpressionStatement	subsegment . BlockOffsets . EncodedData ^= ( DWORD ) lfhKey ^ ( ( DWORD ) subsegmentOffset >> 0xC )	989:3:33556:33643	6505316	4	True				
ANR	6505826	AssignmentExpression	subsegment . BlockOffsets . EncodedData ^= ( DWORD ) lfhKey ^ ( ( DWORD ) subsegmentOffset >> 0xC )		6505316	0		^=			
ANR	6505827	MemberAccess	subsegment . BlockOffsets . EncodedData		6505316	0					
ANR	6505828	MemberAccess	subsegment . BlockOffsets		6505316	0					
ANR	6505829	Identifier	subsegment		6505316	0					
ANR	6505830	Identifier	BlockOffsets		6505316	1					
ANR	6505831	Identifier	EncodedData		6505316	1					
ANR	6505832	ExclusiveOrExpression	( DWORD ) lfhKey ^ ( ( DWORD ) subsegmentOffset >> 0xC )		6505316	1		^			
ANR	6505833	CastExpression	( DWORD ) lfhKey		6505316	0					
ANR	6505834	CastTarget	DWORD		6505316	0					
ANR	6505835	Identifier	lfhKey		6505316	1					
ANR	6505836	ShiftExpression	( DWORD ) subsegmentOffset >> 0xC		6505316	1		>>			
ANR	6505837	CastExpression	( DWORD ) subsegmentOffset		6505316	0					
ANR	6505838	CastTarget	DWORD		6505316	0					
ANR	6505839	Identifier	subsegmentOffset		6505316	1					
ANR	6505840	PrimaryExpression	0xC		6505316	1					
ANR	6505841	ExpressionStatement	hb -> dwAddress = ( PVOID ) offset	990:3:33648:33677	6505316	5	True				
ANR	6505842	AssignmentExpression	hb -> dwAddress = ( PVOID ) offset		6505316	0		=			
ANR	6505843	PtrMemberAccess	hb -> dwAddress		6505316	0					
ANR	6505844	Identifier	hb		6505316	0					
ANR	6505845	Identifier	dwAddress		6505316	1					
ANR	6505846	CastExpression	( PVOID ) offset		6505316	1					
ANR	6505847	CastTarget	PVOID		6505316	0					
ANR	6505848	Identifier	offset		6505316	1					
ANR	6505849	ExpressionStatement	hb -> dwSize = subsegment . BlockOffsets . BlockSize	991:3:33682:33728	6505316	6	True				
ANR	6505850	AssignmentExpression	hb -> dwSize = subsegment . BlockOffsets . BlockSize		6505316	0		=			
ANR	6505851	PtrMemberAccess	hb -> dwSize		6505316	0					
ANR	6505852	Identifier	hb		6505316	0					
ANR	6505853	Identifier	dwSize		6505316	1					
ANR	6505854	MemberAccess	subsegment . BlockOffsets . BlockSize		6505316	1					
ANR	6505855	MemberAccess	subsegment . BlockOffsets		6505316	0					
ANR	6505856	Identifier	subsegment		6505316	0					
ANR	6505857	Identifier	BlockOffsets		6505316	1					
ANR	6505858	Identifier	BlockSize		6505316	1					
ANR	6505859	ExpressionStatement	hb -> dwFlags = 1 | SEGMENT_HEAP_BLOCK | LFH_BLOCK	992:3:33733:33781	6505316	7	True				
ANR	6505860	AssignmentExpression	hb -> dwFlags = 1 | SEGMENT_HEAP_BLOCK | LFH_BLOCK		6505316	0		=			
ANR	6505861	PtrMemberAccess	hb -> dwFlags		6505316	0					
ANR	6505862	Identifier	hb		6505316	0					
ANR	6505863	Identifier	dwFlags		6505316	1					
ANR	6505864	InclusiveOrExpression	1 | SEGMENT_HEAP_BLOCK | LFH_BLOCK		6505316	1		|			
ANR	6505865	PrimaryExpression	1		6505316	0					
ANR	6505866	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | LFH_BLOCK		6505316	1		|			
ANR	6505867	Identifier	SEGMENT_HEAP_BLOCK		6505316	0					
ANR	6505868	Identifier	LFH_BLOCK		6505316	1					
ANR	6505869	ExpressionStatement	extra -> granularity = granularity	993:3:33786:33818	6505316	8	True				
ANR	6505870	AssignmentExpression	extra -> granularity = granularity		6505316	0		=			
ANR	6505871	PtrMemberAccess	extra -> granularity		6505316	0					
ANR	6505872	Identifier	extra		6505316	0					
ANR	6505873	Identifier	granularity		6505316	1					
ANR	6505874	Identifier	granularity		6505316	1					
ANR	6505875	ExpressionStatement	extra -> segment = subsegmentOffset	994:3:33823:33856	6505316	9	True				
ANR	6505876	AssignmentExpression	extra -> segment = subsegmentOffset		6505316	0		=			
ANR	6505877	PtrMemberAccess	extra -> segment		6505316	0					
ANR	6505878	Identifier	extra		6505316	0					
ANR	6505879	Identifier	segment		6505316	1					
ANR	6505880	Identifier	subsegmentOffset		6505316	1					
ANR	6505881	ReturnStatement	return hb ;	995:3:33861:33870	6505316	10	True				
ANR	6505882	Identifier	hb		6505316	0					
ANR	6505883	IfStatement	if ( ( offset & 0xFFFF ) < 0x100 )		6505316	17					
ANR	6505884	Condition	( offset & 0xFFFF ) < 0x100	1000:5:33906:33930	6505316	0	True				
ANR	6505885	RelationalExpression	( offset & 0xFFFF ) < 0x100		6505316	0		<			
ANR	6505886	BitAndExpression	offset & 0xFFFF		6505316	0		&			
ANR	6505887	Identifier	offset		6505316	0					
ANR	6505888	PrimaryExpression	0xFFFF		6505316	1					
ANR	6505889	PrimaryExpression	0x100		6505316	1					
ANR	6505890	CompoundStatement		76:2:3177:3227	6505316	1					
ANR	6505891	IfStatement	if ( ! heap . LargeAllocMetadata . Root )		6505316	0					
ANR	6505892	Condition	! heap . LargeAllocMetadata . Root	1001:6:33941:33969	6505316	0	True				
ANR	6505893	UnaryOperationExpression	! heap . LargeAllocMetadata . Root		6505316	0					
ANR	6505894	UnaryOperator	!		6505316	0					
ANR	6505895	MemberAccess	heap . LargeAllocMetadata . Root		6505316	1					
ANR	6505896	MemberAccess	heap . LargeAllocMetadata		6505316	0					
ANR	6505897	Identifier	heap		6505316	0					
ANR	6505898	Identifier	LargeAllocMetadata		6505316	1					
ANR	6505899	Identifier	Root		6505316	1					
ANR	6505900	CompoundStatement		72:37:3130:3130	6505316	1					
ANR	6505901	GotoStatement	goto err ;	1002:3:33977:33985	6505316	0	True				
ANR	6505902	Identifier	err		6505316	0					
ANR	6505903	IdentifierDeclStatement	RTL_BALANCED_NODE node ;	1004:2:33993:34015	6505316	1	True				
ANR	6505904	IdentifierDecl	node		6505316	0					
ANR	6505905	IdentifierDeclType	RTL_BALANCED_NODE		6505316	0					
ANR	6505906	Identifier	node		6505316	1					
ANR	6505907	IdentifierDeclStatement	WPARAM curr = ( WPARAM ) heap . LargeAllocMetadata . Root ;	1005:2:34019:34069	6505316	2	True				
ANR	6505908	IdentifierDecl	curr = ( WPARAM ) heap . LargeAllocMetadata . Root		6505316	0					
ANR	6505909	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505910	Identifier	curr		6505316	1					
ANR	6505911	AssignmentExpression	curr = ( WPARAM ) heap . LargeAllocMetadata . Root		6505316	2		=			
ANR	6505912	Identifier	curr		6505316	0					
ANR	6505913	CastExpression	( WPARAM ) heap . LargeAllocMetadata . Root		6505316	1					
ANR	6505914	CastTarget	WPARAM		6505316	0					
ANR	6505915	MemberAccess	heap . LargeAllocMetadata . Root		6505316	1					
ANR	6505916	MemberAccess	heap . LargeAllocMetadata		6505316	0					
ANR	6505917	Identifier	heap		6505316	0					
ANR	6505918	Identifier	LargeAllocMetadata		6505316	1					
ANR	6505919	Identifier	Root		6505316	1					
ANR	6505920	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) curr , & node , sizeof ( RTL_BALANCED_NODE ) , NULL )"	1006:2:34073:34153	6505316	3	True				
ANR	6505921	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) curr , & node , sizeof ( RTL_BALANCED_NODE ) , NULL )"		6505316	0					
ANR	6505922	Callee	ReadProcessMemory		6505316	0					
ANR	6505923	Identifier	ReadProcessMemory		6505316	0					
ANR	6505924	ArgumentList	h_proc		6505316	1					
ANR	6505925	Argument	h_proc		6505316	0					
ANR	6505926	Identifier	h_proc		6505316	0					
ANR	6505927	Argument	( PVOID ) curr		6505316	1					
ANR	6505928	CastExpression	( PVOID ) curr		6505316	0					
ANR	6505929	CastTarget	PVOID		6505316	0					
ANR	6505930	Identifier	curr		6505316	1					
ANR	6505931	Argument	& node		6505316	2					
ANR	6505932	UnaryOperationExpression	& node		6505316	0					
ANR	6505933	UnaryOperator	&		6505316	0					
ANR	6505934	Identifier	node		6505316	1					
ANR	6505935	Argument	sizeof ( RTL_BALANCED_NODE )		6505316	3					
ANR	6505936	SizeofExpression	sizeof ( RTL_BALANCED_NODE )		6505316	0					
ANR	6505937	Sizeof	sizeof		6505316	0					
ANR	6505938	SizeofOperand	RTL_BALANCED_NODE		6505316	1					
ANR	6505939	Argument	NULL		6505316	4					
ANR	6505940	Identifier	NULL		6505316	0					
ANR	6505941	WhileStatement	while ( curr )		6505316	4					
ANR	6505942	Condition	curr	1008:9:34165:34168	6505316	0	True				
ANR	6505943	Identifier	curr		6505316	0					
ANR	6505944	CompoundStatement		82:3:3456:3518	6505316	1					
ANR	6505945	IdentifierDeclStatement	HEAP_LARGE_ALLOC_DATA entry ;	1009:3:34176:34203	6505316	0	True				
ANR	6505946	IdentifierDecl	entry		6505316	0					
ANR	6505947	IdentifierDeclType	HEAP_LARGE_ALLOC_DATA		6505316	0					
ANR	6505948	Identifier	entry		6505316	1					
ANR	6505949	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) curr , & entry , sizeof ( HEAP_LARGE_ALLOC_DATA ) , NULL )"	1010:3:34208:34293	6505316	1	True				
ANR	6505950	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) curr , & entry , sizeof ( HEAP_LARGE_ALLOC_DATA ) , NULL )"		6505316	0					
ANR	6505951	Callee	ReadProcessMemory		6505316	0					
ANR	6505952	Identifier	ReadProcessMemory		6505316	0					
ANR	6505953	ArgumentList	h_proc		6505316	1					
ANR	6505954	Argument	h_proc		6505316	0					
ANR	6505955	Identifier	h_proc		6505316	0					
ANR	6505956	Argument	( PVOID ) curr		6505316	1					
ANR	6505957	CastExpression	( PVOID ) curr		6505316	0					
ANR	6505958	CastTarget	PVOID		6505316	0					
ANR	6505959	Identifier	curr		6505316	1					
ANR	6505960	Argument	& entry		6505316	2					
ANR	6505961	UnaryOperationExpression	& entry		6505316	0					
ANR	6505962	UnaryOperator	&		6505316	0					
ANR	6505963	Identifier	entry		6505316	1					
ANR	6505964	Argument	sizeof ( HEAP_LARGE_ALLOC_DATA )		6505316	3					
ANR	6505965	SizeofExpression	sizeof ( HEAP_LARGE_ALLOC_DATA )		6505316	0					
ANR	6505966	Sizeof	sizeof		6505316	0					
ANR	6505967	SizeofOperand	HEAP_LARGE_ALLOC_DATA		6505316	1					
ANR	6505968	Argument	NULL		6505316	4					
ANR	6505969	Identifier	NULL		6505316	0					
ANR	6505970	IdentifierDeclStatement	WPARAM VirtualAddess = entry . VirtualAddess - entry . UnusedBytes ;	1011:3:34298:34360	6505316	2	True				
ANR	6505971	IdentifierDecl	VirtualAddess = entry . VirtualAddess - entry . UnusedBytes		6505316	0					
ANR	6505972	IdentifierDeclType	WPARAM		6505316	0					
ANR	6505973	Identifier	VirtualAddess		6505316	1					
ANR	6505974	AssignmentExpression	VirtualAddess = entry . VirtualAddess - entry . UnusedBytes		6505316	2		=			
ANR	6505975	Identifier	VirtualAddess		6505316	0					
ANR	6505976	AdditiveExpression	entry . VirtualAddess - entry . UnusedBytes		6505316	1		-			
ANR	6505977	MemberAccess	entry . VirtualAddess		6505316	0					
ANR	6505978	Identifier	entry		6505316	0					
ANR	6505979	Identifier	VirtualAddess		6505316	1					
ANR	6505980	MemberAccess	entry . UnusedBytes		6505316	1					
ANR	6505981	Identifier	entry		6505316	0					
ANR	6505982	Identifier	UnusedBytes		6505316	1					
ANR	6505983	IfStatement	if ( ( offset & ~0xFFFFULL ) > VirtualAddess )		6505316	3					
ANR	6505984	Condition	( offset & ~0xFFFFULL ) > VirtualAddess	1012:7:34369:34405	6505316	0	True				
ANR	6505985	RelationalExpression	( offset & ~0xFFFFULL ) > VirtualAddess		6505316	0		>			
ANR	6505986	BitAndExpression	offset & ~0xFFFFULL		6505316	0		&			
ANR	6505987	Identifier	offset		6505316	0					
ANR	6505988	Identifier	~0xFFFFULL		6505316	1					
ANR	6505989	Identifier	VirtualAddess		6505316	1					
ANR	6505990	CompoundStatement		83:46:3566:3566	6505316	1					
ANR	6505991	ExpressionStatement	curr = ( WPARAM ) node . Right	1013:4:34414:34439	6505316	0	True				
ANR	6505992	AssignmentExpression	curr = ( WPARAM ) node . Right		6505316	0		=			
ANR	6505993	Identifier	curr		6505316	0					
ANR	6505994	CastExpression	( WPARAM ) node . Right		6505316	1					
ANR	6505995	CastTarget	WPARAM		6505316	0					
ANR	6505996	MemberAccess	node . Right		6505316	1					
ANR	6505997	Identifier	node		6505316	0					
ANR	6505998	Identifier	Right		6505316	1					
ANR	6505999	ElseStatement	else		6505316	0					
ANR	6506000	IfStatement	if ( ( offset & ~0xFFFFULL ) < VirtualAddess )		6505316	0					
ANR	6506001	Condition	( offset & ~0xFFFFULL ) < VirtualAddess	1014:14:34455:34491	6505316	0	True				
ANR	6506002	RelationalExpression	( offset & ~0xFFFFULL ) < VirtualAddess		6505316	0		<			
ANR	6506003	BitAndExpression	offset & ~0xFFFFULL		6505316	0		&			
ANR	6506004	Identifier	offset		6505316	0					
ANR	6506005	Identifier	~0xFFFFULL		6505316	1					
ANR	6506006	Identifier	VirtualAddess		6505316	1					
ANR	6506007	CompoundStatement		85:53:3652:3652	6505316	1					
ANR	6506008	ExpressionStatement	curr = ( WPARAM ) node . Left	1015:4:34500:34524	6505316	0	True				
ANR	6506009	AssignmentExpression	curr = ( WPARAM ) node . Left		6505316	0		=			
ANR	6506010	Identifier	curr		6505316	0					
ANR	6506011	CastExpression	( WPARAM ) node . Left		6505316	1					
ANR	6506012	CastTarget	WPARAM		6505316	0					
ANR	6506013	MemberAccess	node . Left		6505316	1					
ANR	6506014	Identifier	node		6505316	0					
ANR	6506015	Identifier	Left		6505316	1					
ANR	6506016	ElseStatement	else		6505316	0					
ANR	6506017	CompoundStatement		87:10:3694:3694	6505316	0					
ANR	6506018	ExpressionStatement	hb -> dwAddress = ( PVOID ) VirtualAddess	1017:4:34542:34578	6505316	0	True				
ANR	6506019	AssignmentExpression	hb -> dwAddress = ( PVOID ) VirtualAddess		6505316	0		=			
ANR	6506020	PtrMemberAccess	hb -> dwAddress		6505316	0					
ANR	6506021	Identifier	hb		6505316	0					
ANR	6506022	Identifier	dwAddress		6505316	1					
ANR	6506023	CastExpression	( PVOID ) VirtualAddess		6505316	1					
ANR	6506024	CastTarget	PVOID		6505316	0					
ANR	6506025	Identifier	VirtualAddess		6505316	1					
ANR	6506026	ExpressionStatement	hb -> dwSize = ( ( entry . AllocatedPages >> 12 ) << 12 ) - entry . UnusedBytes	1018:4:34584:34653	6505316	1	True				
ANR	6506027	AssignmentExpression	hb -> dwSize = ( ( entry . AllocatedPages >> 12 ) << 12 ) - entry . UnusedBytes		6505316	0		=			
ANR	6506028	PtrMemberAccess	hb -> dwSize		6505316	0					
ANR	6506029	Identifier	hb		6505316	0					
ANR	6506030	Identifier	dwSize		6505316	1					
ANR	6506031	AdditiveExpression	( ( entry . AllocatedPages >> 12 ) << 12 ) - entry . UnusedBytes		6505316	1		-			
ANR	6506032	ShiftExpression	( entry . AllocatedPages >> 12 ) << 12		6505316	0		<<			
ANR	6506033	ShiftExpression	entry . AllocatedPages >> 12		6505316	0		>>			
ANR	6506034	MemberAccess	entry . AllocatedPages		6505316	0					
ANR	6506035	Identifier	entry		6505316	0					
ANR	6506036	Identifier	AllocatedPages		6505316	1					
ANR	6506037	PrimaryExpression	12		6505316	1					
ANR	6506038	PrimaryExpression	12		6505316	1					
ANR	6506039	MemberAccess	entry . UnusedBytes		6505316	1					
ANR	6506040	Identifier	entry		6505316	0					
ANR	6506041	Identifier	UnusedBytes		6505316	1					
ANR	6506042	ExpressionStatement	hb -> dwFlags = SEGMENT_HEAP_BLOCK | LARGE_BLOCK | 1	1019:4:34659:34709	6505316	2	True				
ANR	6506043	AssignmentExpression	hb -> dwFlags = SEGMENT_HEAP_BLOCK | LARGE_BLOCK | 1		6505316	0		=			
ANR	6506044	PtrMemberAccess	hb -> dwFlags		6505316	0					
ANR	6506045	Identifier	hb		6505316	0					
ANR	6506046	Identifier	dwFlags		6505316	1					
ANR	6506047	InclusiveOrExpression	SEGMENT_HEAP_BLOCK | LARGE_BLOCK | 1		6505316	1		|			
ANR	6506048	Identifier	SEGMENT_HEAP_BLOCK		6505316	0					
ANR	6506049	InclusiveOrExpression	LARGE_BLOCK | 1		6505316	1		|			
ANR	6506050	Identifier	LARGE_BLOCK		6505316	0					
ANR	6506051	PrimaryExpression	1		6505316	1					
ANR	6506052	ExpressionStatement	extra -> unusedBytes = entry . UnusedBytes	1020:4:34715:34753	6505316	3	True				
ANR	6506053	AssignmentExpression	extra -> unusedBytes = entry . UnusedBytes		6505316	0		=			
ANR	6506054	PtrMemberAccess	extra -> unusedBytes		6505316	0					
ANR	6506055	Identifier	extra		6505316	0					
ANR	6506056	Identifier	unusedBytes		6505316	1					
ANR	6506057	MemberAccess	entry . UnusedBytes		6505316	1					
ANR	6506058	Identifier	entry		6505316	0					
ANR	6506059	Identifier	UnusedBytes		6505316	1					
ANR	6506060	ExpressionStatement	"ReadProcessMemory ( h_proc , hb -> dwAddress , & extra -> granularity , sizeof ( USHORT ) , NULL )"	1021:4:34759:34844	6505316	4	True				
ANR	6506061	CallExpression	"ReadProcessMemory ( h_proc , hb -> dwAddress , & extra -> granularity , sizeof ( USHORT ) , NULL )"		6505316	0					
ANR	6506062	Callee	ReadProcessMemory		6505316	0					
ANR	6506063	Identifier	ReadProcessMemory		6505316	0					
ANR	6506064	ArgumentList	h_proc		6505316	1					
ANR	6506065	Argument	h_proc		6505316	0					
ANR	6506066	Identifier	h_proc		6505316	0					
ANR	6506067	Argument	hb -> dwAddress		6505316	1					
ANR	6506068	PtrMemberAccess	hb -> dwAddress		6505316	0					
ANR	6506069	Identifier	hb		6505316	0					
ANR	6506070	Identifier	dwAddress		6505316	1					
ANR	6506071	Argument	& extra -> granularity		6505316	2					
ANR	6506072	UnaryOperationExpression	& extra -> granularity		6505316	0					
ANR	6506073	UnaryOperator	&		6505316	0					
ANR	6506074	PtrMemberAccess	extra -> granularity		6505316	1					
ANR	6506075	Identifier	extra		6505316	0					
ANR	6506076	Identifier	granularity		6505316	1					
ANR	6506077	Argument	sizeof ( USHORT )		6505316	3					
ANR	6506078	SizeofExpression	sizeof ( USHORT )		6505316	0					
ANR	6506079	Sizeof	sizeof		6505316	0					
ANR	6506080	SizeofOperand	USHORT		6505316	1					
ANR	6506081	Argument	NULL		6505316	4					
ANR	6506082	Identifier	NULL		6505316	0					
ANR	6506083	ReturnStatement	return hb ;	1022:4:34850:34859	6505316	5	True				
ANR	6506084	Identifier	hb		6505316	0					
ANR	6506085	IfStatement	if ( curr )		6505316	4					
ANR	6506086	Condition	curr	1024:7:34873:34876	6505316	0	True				
ANR	6506087	Identifier	curr		6505316	0					
ANR	6506088	CompoundStatement		95:13:4037:4037	6505316	1					
ANR	6506089	ExpressionStatement	"ReadProcessMemory ( h_proc , ( PVOID ) curr , & node , sizeof ( RTL_BALANCED_NODE ) , NULL )"	1025:4:34885:34965	6505316	0	True				
ANR	6506090	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) curr , & node , sizeof ( RTL_BALANCED_NODE ) , NULL )"		6505316	0					
ANR	6506091	Callee	ReadProcessMemory		6505316	0					
ANR	6506092	Identifier	ReadProcessMemory		6505316	0					
ANR	6506093	ArgumentList	h_proc		6505316	1					
ANR	6506094	Argument	h_proc		6505316	0					
ANR	6506095	Identifier	h_proc		6505316	0					
ANR	6506096	Argument	( PVOID ) curr		6505316	1					
ANR	6506097	CastExpression	( PVOID ) curr		6505316	0					
ANR	6506098	CastTarget	PVOID		6505316	0					
ANR	6506099	Identifier	curr		6505316	1					
ANR	6506100	Argument	& node		6505316	2					
ANR	6506101	UnaryOperationExpression	& node		6505316	0					
ANR	6506102	UnaryOperator	&		6505316	0					
ANR	6506103	Identifier	node		6505316	1					
ANR	6506104	Argument	sizeof ( RTL_BALANCED_NODE )		6505316	3					
ANR	6506105	SizeofExpression	sizeof ( RTL_BALANCED_NODE )		6505316	0					
ANR	6506106	Sizeof	sizeof		6505316	0					
ANR	6506107	SizeofOperand	RTL_BALANCED_NODE		6505316	1					
ANR	6506108	Argument	NULL		6505316	4					
ANR	6506109	Identifier	NULL		6505316	0					
ANR	6506110	Label	err :	1029:0:34979:34982	6505316	18	True				
ANR	6506111	Identifier	err		6505316	0					
ANR	6506112	ExpressionStatement	free ( hb )	1030:1:34985:34994	6505316	19	True				
ANR	6506113	CallExpression	free ( hb )		6505316	0					
ANR	6506114	Callee	free		6505316	0					
ANR	6506115	Identifier	free		6505316	0					
ANR	6506116	ArgumentList	hb		6505316	1					
ANR	6506117	Argument	hb		6505316	0					
ANR	6506118	Identifier	hb		6505316	0					
ANR	6506119	ExpressionStatement	free ( extra )	1031:1:34997:35009	6505316	20	True				
ANR	6506120	CallExpression	free ( extra )		6505316	0					
ANR	6506121	Callee	free		6505316	0					
ANR	6506122	Identifier	free		6505316	0					
ANR	6506123	ArgumentList	extra		6505316	1					
ANR	6506124	Argument	extra		6505316	0					
ANR	6506125	Identifier	extra		6505316	0					
ANR	6506126	ReturnStatement	return NULL ;	1032:1:35012:35023	6505316	21	True				
ANR	6506127	Identifier	NULL		6505316	0					
ANR	6506128	ReturnType	static PHeapBlock		6505316	1					
ANR	6506129	Identifier	GetSingleSegmentBlock		6505316	2					
ANR	6506130	ParameterList	"RDebug * dbg , HANDLE h_proc , PSEGMENT_HEAP heapBase , WPARAM offset"		6505316	3					
ANR	6506131	Parameter	RDebug * dbg	930:40:30774:30784	6505316	0	True				
ANR	6506132	ParameterType	RDebug *		6505316	0					
ANR	6506133	Identifier	dbg		6505316	1					
ANR	6506134	Parameter	HANDLE h_proc	930:53:30787:30799	6505316	1	True				
ANR	6506135	ParameterType	HANDLE		6505316	0					
ANR	6506136	Identifier	h_proc		6505316	1					
ANR	6506137	Parameter	PSEGMENT_HEAP heapBase	930:68:30802:30823	6505316	2	True				
ANR	6506138	ParameterType	PSEGMENT_HEAP		6505316	0					
ANR	6506139	Identifier	heapBase		6505316	1					
ANR	6506140	Parameter	WPARAM offset	930:92:30826:30838	6505316	3	True				
ANR	6506141	ParameterType	WPARAM		6505316	0					
ANR	6506142	Identifier	offset		6505316	1					
ANR	6506143	CFGEntryNode	ENTRY		6505316		True				
ANR	6506144	CFGExitNode	EXIT		6505316		True				
ANR	6506145	Symbol	segment . DescArray [ pageIndex ] . UnitOffset		6505316						
ANR	6506146	Symbol	heap . SegContexts [ 0 ] . UnitShift		6505316						
ANR	6506147	Symbol	hb -> extraInfo		6505316						
ANR	6506148	Symbol	LARGE_BLOCK		6505316						
ANR	6506149	Symbol	* segment . DescArray		6505316						
ANR	6506150	Symbol	segment		6505316						
ANR	6506151	Symbol	* heap . SegContexts		6505316						
ANR	6506152	Symbol	curr		6505316						
ANR	6506153	Symbol	subsegment . Size		6505316						
ANR	6506154	Symbol	NULL		6505316						
ANR	6506155	Symbol	* hb		6505316						
ANR	6506156	Symbol	SEGMENT_HEAP		6505316						
ANR	6506157	Symbol	offset		6505316						
ANR	6506158	Symbol	HeapBlock		6505316						
ANR	6506159	Symbol	test		6505316						
ANR	6506160	Symbol	* pageIndex		6505316						
ANR	6506161	Symbol	segment . DescArray		6505316						
ANR	6506162	Symbol	dbg		6505316						
ANR	6506163	Symbol	heap . SegContexts [ 0 ] . SegmentMask		6505316						
ANR	6506164	Symbol	h_proc		6505316						
ANR	6506165	Symbol	header . Sizes		6505316						
ANR	6506166	Symbol	hb -> dwFlags		6505316						
ANR	6506167	Symbol	heap . LargeAllocMetadata . Root		6505316						
ANR	6506168	Symbol	& header		6505316						
ANR	6506169	Symbol	subsegment . BlockOffsets . EncodedData		6505316						
ANR	6506170	Symbol	& extra -> granularity		6505316						
ANR	6506171	Symbol	R_NEW0		6505316						
ANR	6506172	Symbol	node		6505316						
ANR	6506173	Symbol	entry		6505316						
ANR	6506174	Symbol	entry . UnusedBytes		6505316						
ANR	6506175	Symbol	* extra		6505316						
ANR	6506176	Symbol	segment . DescArray [ pageIndex ] . RangeFlags		6505316						
ANR	6506177	Symbol	header . Sizes . HeaderBits		6505316						
ANR	6506178	Symbol	granularity		6505316						
ANR	6506179	Symbol	pgSegOff		6505316						
ANR	6506180	Symbol	true		6505316						
ANR	6506181	Symbol	* segment		6505316						
ANR	6506182	Symbol	header		6505316						
ANR	6506183	Symbol	extra -> unusedBytes		6505316						
ANR	6506184	Symbol	& subsegment		6505316						
ANR	6506185	Symbol	* heap		6505316						
ANR	6506186	Symbol	extra -> segment		6505316						
ANR	6506187	Symbol	HeapBlockExtraInfo		6505316						
ANR	6506188	Symbol	heapBase		6505316						
ANR	6506189	Symbol	segment . DescArray [ pageIndex ] . UnusedBytes		6505316						
ANR	6506190	Symbol	subsegmentOffset		6505316						
ANR	6506191	Symbol	& lfhKey		6505316						
ANR	6506192	Symbol	VS_BLOCK		6505316						
ANR	6506193	Symbol	lfhKey		6505316						
ANR	6506194	Symbol	dbg -> bits		6505316						
ANR	6506195	Symbol	SegContexts		6505316						
ANR	6506196	Symbol	& segment		6505316						
ANR	6506197	Symbol	hb -> dwSize		6505316						
ANR	6506198	Symbol	& segSignature		6505316						
ANR	6506199	Symbol	RtlpHpHeapGlobal		6505316						
ANR	6506200	Symbol	extra		6505316						
ANR	6506201	Symbol	offsetof		6505316						
ANR	6506202	Symbol	subsegment . Signature		6505316						
ANR	6506203	Symbol	header . Sizes . UnsafeSize		6505316						
ANR	6506204	Symbol	VirtualAddess		6505316						
ANR	6506205	Symbol	heap		6505316						
ANR	6506206	Symbol	entry . AllocatedPages		6505316						
ANR	6506207	Symbol	PAGE_RANGE_FLAGS_FIRST		6505316						
ANR	6506208	Symbol	extra -> granularity		6505316						
ANR	6506209	Symbol	PAGE_RANGE_FLAGS_LFH_SUBSEGMENT		6505316						
ANR	6506210	Symbol	entry . VirtualAddess		6505316						
ANR	6506211	Symbol	subsegment . BlockOffsets . BlockSize		6505316						
ANR	6506212	Symbol	heap . SegContexts		6505316						
ANR	6506213	Symbol	& RtlpHpHeapGlobal		6505316						
ANR	6506214	Symbol	~0xFFFFULL		6505316						
ANR	6506215	Symbol	segSignature		6505316						
ANR	6506216	Symbol	headerOff		6505316						
ANR	6506217	Symbol	node . Left		6505316						
ANR	6506218	Symbol	* dbg		6505316						
ANR	6506219	Symbol	& heap		6505316						
ANR	6506220	Symbol	node . Right		6505316						
ANR	6506221	Symbol	subsegment		6505316						
ANR	6506222	Symbol	& node		6505316						
ANR	6506223	Symbol	& entry		6505316						
ANR	6506224	Symbol	extra -> heap		6505316						
ANR	6506225	Symbol	pageIndex		6505316						
ANR	6506226	Symbol	heap . LargeAllocMetadata		6505316						
ANR	6506227	Symbol	hb -> dwAddress		6505316						
ANR	6506228	Symbol	pgRangeDescOff		6505316						
ANR	6506229	Symbol	SEGMENT_HEAP_BLOCK		6505316						
ANR	6506230	Symbol	hb		6505316						
ANR	6506231	Symbol	RtlpHpHeapGlobalsOffset		6505316						
ANR	6506232	Symbol	LFH_BLOCK		6505316						
ANR	6506233	Symbol	subsegment . BlockOffsets		6505316						
ANR	6506234	Function	GetSingleBlock	1035:0:35028:38603							
ANR	6506235	FunctionDef	"GetSingleBlock (RDebug * dbg , ut64 offset)"		6506234	0					
ANR	6506236	CompoundStatement		1035:59:35087:38603	6506234	0					
ANR	6506237	IdentifierDeclStatement	PHeapBlock hb = R_NEW0 ( HeapBlock ) ;	1036:1:35090:35124	6506234	0	True				
ANR	6506238	IdentifierDecl	hb = R_NEW0 ( HeapBlock )		6506234	0					
ANR	6506239	IdentifierDeclType	PHeapBlock		6506234	0					
ANR	6506240	Identifier	hb		6506234	1					
ANR	6506241	AssignmentExpression	hb = R_NEW0 ( HeapBlock )		6506234	2		=			
ANR	6506242	Identifier	hb		6506234	0					
ANR	6506243	CallExpression	R_NEW0 ( HeapBlock )		6506234	1					
ANR	6506244	Callee	R_NEW0		6506234	0					
ANR	6506245	Identifier	R_NEW0		6506234	0					
ANR	6506246	ArgumentList	HeapBlock		6506234	1					
ANR	6506247	Argument	HeapBlock		6506234	0					
ANR	6506248	Identifier	HeapBlock		6506234	0					
ANR	6506249	IdentifierDeclStatement	PDEBUG_BUFFER db = NULL ;	1037:1:35127:35150	6506234	1	True				
ANR	6506250	IdentifierDecl	db = NULL		6506234	0					
ANR	6506251	IdentifierDeclType	PDEBUG_BUFFER		6506234	0					
ANR	6506252	Identifier	db		6506234	1					
ANR	6506253	AssignmentExpression	db = NULL		6506234	2		=			
ANR	6506254	Identifier	NULL		6506234	0					
ANR	6506255	Identifier	NULL		6506234	1					
ANR	6506256	IdentifierDeclStatement	PHeapBlockExtraInfo extra = NULL ;	1038:1:35153:35185	6506234	2	True				
ANR	6506257	IdentifierDecl	extra = NULL		6506234	0					
ANR	6506258	IdentifierDeclType	PHeapBlockExtraInfo		6506234	0					
ANR	6506259	Identifier	extra		6506234	1					
ANR	6506260	AssignmentExpression	extra = NULL		6506234	2		=			
ANR	6506261	Identifier	NULL		6506234	0					
ANR	6506262	Identifier	NULL		6506234	1					
ANR	6506263	IfStatement	if ( ! hb )		6506234	3					
ANR	6506264	Condition	! hb	1040:5:35193:35195	6506234	0	True				
ANR	6506265	UnaryOperationExpression	! hb		6506234	0					
ANR	6506266	UnaryOperator	!		6506234	0					
ANR	6506267	Identifier	hb		6506234	1					
ANR	6506268	CompoundStatement		6:10:110:110	6506234	1					
ANR	6506269	ExpressionStatement	"R_LOG_ERROR ( ""GetSingleBlock: Allocation failed.\\n"" )"	1041:2:35202:35254	6506234	0	True				
ANR	6506270	CallExpression	"R_LOG_ERROR ( ""GetSingleBlock: Allocation failed.\\n"" )"		6506234	0					
ANR	6506271	Callee	R_LOG_ERROR		6506234	0					
ANR	6506272	Identifier	R_LOG_ERROR		6506234	0					
ANR	6506273	ArgumentList	"""GetSingleBlock: Allocation failed.\\n"""		6506234	1					
ANR	6506274	Argument	"""GetSingleBlock: Allocation failed.\\n"""		6506234	0					
ANR	6506275	PrimaryExpression	"""GetSingleBlock: Allocation failed.\\n"""		6506234	0					
ANR	6506276	ReturnStatement	return NULL ;	1042:2:35258:35269	6506234	1	True				
ANR	6506277	Identifier	NULL		6506234	0					
ANR	6506278	IdentifierDeclStatement	"HANDLE h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid ) ;"	1044:1:35275:35365	6506234	4	True				
ANR	6506279	IdentifierDecl	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid )"		6506234	0					
ANR	6506280	IdentifierDeclType	HANDLE		6506234	0					
ANR	6506281	Identifier	h_proc		6506234	1					
ANR	6506282	AssignmentExpression	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid )"		6506234	2		=			
ANR	6506283	Identifier	h_proc		6506234	0					
ANR	6506284	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , dbg -> pid )"		6506234	1					
ANR	6506285	Callee	OpenProcess		6506234	0					
ANR	6506286	Identifier	OpenProcess		6506234	0					
ANR	6506287	ArgumentList	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6506234	1					
ANR	6506288	Argument	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6506234	0					
ANR	6506289	InclusiveOrExpression	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6506234	0		|			
ANR	6506290	Identifier	PROCESS_QUERY_INFORMATION		6506234	0					
ANR	6506291	Identifier	PROCESS_VM_READ		6506234	1					
ANR	6506292	Argument	FALSE		6506234	1					
ANR	6506293	Identifier	FALSE		6506234	0					
ANR	6506294	Argument	dbg -> pid		6506234	2					
ANR	6506295	PtrMemberAccess	dbg -> pid		6506234	0					
ANR	6506296	Identifier	dbg		6506234	0					
ANR	6506297	Identifier	pid		6506234	1					
ANR	6506298	IfStatement	if ( ! h_proc )		6506234	5					
ANR	6506299	Condition	! h_proc	1045:5:35372:35378	6506234	0	True				
ANR	6506300	UnaryOperationExpression	! h_proc		6506234	0					
ANR	6506301	UnaryOperator	!		6506234	0					
ANR	6506302	Identifier	h_proc		6506234	1					
ANR	6506303	CompoundStatement		11:14:293:293	6506234	1					
ANR	6506304	ExpressionStatement	"r_sys_perror ( ""GetSingleBlock/OpenProcess"" )"	1046:2:35385:35428	6506234	0	True				
ANR	6506305	CallExpression	"r_sys_perror ( ""GetSingleBlock/OpenProcess"" )"		6506234	0					
ANR	6506306	Callee	r_sys_perror		6506234	0					
ANR	6506307	Identifier	r_sys_perror		6506234	0					
ANR	6506308	ArgumentList	"""GetSingleBlock/OpenProcess"""		6506234	1					
ANR	6506309	Argument	"""GetSingleBlock/OpenProcess"""		6506234	0					
ANR	6506310	PrimaryExpression	"""GetSingleBlock/OpenProcess"""		6506234	0					
ANR	6506311	GotoStatement	goto err ;	1047:2:35432:35440	6506234	1	True				
ANR	6506312	Identifier	err		6506234	0					
ANR	6506313	ExpressionStatement	"db = InitHeapInfo ( dbg , PDI_HEAPS )"	1049:1:35446:35480	6506234	6	True				
ANR	6506314	AssignmentExpression	"db = InitHeapInfo ( dbg , PDI_HEAPS )"		6506234	0		=			
ANR	6506315	Identifier	db		6506234	0					
ANR	6506316	CallExpression	"InitHeapInfo ( dbg , PDI_HEAPS )"		6506234	1					
ANR	6506317	Callee	InitHeapInfo		6506234	0					
ANR	6506318	Identifier	InitHeapInfo		6506234	0					
ANR	6506319	ArgumentList	dbg		6506234	1					
ANR	6506320	Argument	dbg		6506234	0					
ANR	6506321	Identifier	dbg		6506234	0					
ANR	6506322	Argument	PDI_HEAPS		6506234	1					
ANR	6506323	Identifier	PDI_HEAPS		6506234	0					
ANR	6506324	IfStatement	if ( ! db )		6506234	7					
ANR	6506325	Condition	! db	1050:5:35487:35489	6506234	0	True				
ANR	6506326	UnaryOperationExpression	! db		6506234	0					
ANR	6506327	UnaryOperator	!		6506234	0					
ANR	6506328	Identifier	db		6506234	1					
ANR	6506329	CompoundStatement		16:10:404:404	6506234	1					
ANR	6506330	GotoStatement	goto err ;	1051:2:35496:35504	6506234	0	True				
ANR	6506331	Identifier	err		6506234	0					
ANR	6506332	ExpressionStatement	extra = R_NEW0 ( HeapBlockExtraInfo )	1053:1:35510:35545	6506234	8	True				
ANR	6506333	AssignmentExpression	extra = R_NEW0 ( HeapBlockExtraInfo )		6506234	0		=			
ANR	6506334	Identifier	extra		6506234	0					
ANR	6506335	CallExpression	R_NEW0 ( HeapBlockExtraInfo )		6506234	1					
ANR	6506336	Callee	R_NEW0		6506234	0					
ANR	6506337	Identifier	R_NEW0		6506234	0					
ANR	6506338	ArgumentList	HeapBlockExtraInfo		6506234	1					
ANR	6506339	Argument	HeapBlockExtraInfo		6506234	0					
ANR	6506340	Identifier	HeapBlockExtraInfo		6506234	0					
ANR	6506341	IfStatement	if ( ! extra )		6506234	9					
ANR	6506342	Condition	! extra	1054:5:35552:35557	6506234	0	True				
ANR	6506343	UnaryOperationExpression	! extra		6506234	0					
ANR	6506344	UnaryOperator	!		6506234	0					
ANR	6506345	Identifier	extra		6506234	1					
ANR	6506346	CompoundStatement		20:13:472:472	6506234	1					
ANR	6506347	ExpressionStatement	"R_LOG_ERROR ( ""GetSingleBlock: Allocation failed.\\n"" )"	1055:2:35564:35616	6506234	0	True				
ANR	6506348	CallExpression	"R_LOG_ERROR ( ""GetSingleBlock: Allocation failed.\\n"" )"		6506234	0					
ANR	6506349	Callee	R_LOG_ERROR		6506234	0					
ANR	6506350	Identifier	R_LOG_ERROR		6506234	0					
ANR	6506351	ArgumentList	"""GetSingleBlock: Allocation failed.\\n"""		6506234	1					
ANR	6506352	Argument	"""GetSingleBlock: Allocation failed.\\n"""		6506234	0					
ANR	6506353	PrimaryExpression	"""GetSingleBlock: Allocation failed.\\n"""		6506234	0					
ANR	6506354	GotoStatement	goto err ;	1056:2:35620:35628	6506234	1	True				
ANR	6506355	Identifier	err		6506234	0					
ANR	6506356	IdentifierDeclStatement	WPARAM NtLFHKey ;	1058:1:35634:35649	6506234	10	True				
ANR	6506357	IdentifierDecl	NtLFHKey		6506234	0					
ANR	6506358	IdentifierDeclType	WPARAM		6506234	0					
ANR	6506359	Identifier	NtLFHKey		6506234	1					
ANR	6506360	ExpressionStatement	"GetLFHKey ( dbg , h_proc , false , & NtLFHKey )"	1059:1:35652:35693	6506234	11	True				
ANR	6506361	CallExpression	"GetLFHKey ( dbg , h_proc , false , & NtLFHKey )"		6506234	0					
ANR	6506362	Callee	GetLFHKey		6506234	0					
ANR	6506363	Identifier	GetLFHKey		6506234	0					
ANR	6506364	ArgumentList	dbg		6506234	1					
ANR	6506365	Argument	dbg		6506234	0					
ANR	6506366	Identifier	dbg		6506234	0					
ANR	6506367	Argument	h_proc		6506234	1					
ANR	6506368	Identifier	h_proc		6506234	0					
ANR	6506369	Argument	false		6506234	2					
ANR	6506370	Identifier	false		6506234	0					
ANR	6506371	Argument	& NtLFHKey		6506234	3					
ANR	6506372	UnaryOperationExpression	& NtLFHKey		6506234	0					
ANR	6506373	UnaryOperator	&		6506234	0					
ANR	6506374	Identifier	NtLFHKey		6506234	1					
ANR	6506375	IdentifierDeclStatement	PHeapInformation heapInfo = db -> HeapInformation ;	1060:1:35696:35743	6506234	12	True				
ANR	6506376	IdentifierDecl	heapInfo = db -> HeapInformation		6506234	0					
ANR	6506377	IdentifierDeclType	PHeapInformation		6506234	0					
ANR	6506378	Identifier	heapInfo		6506234	1					
ANR	6506379	AssignmentExpression	heapInfo = db -> HeapInformation		6506234	2		=			
ANR	6506380	Identifier	heapInfo		6506234	0					
ANR	6506381	PtrMemberAccess	db -> HeapInformation		6506234	1					
ANR	6506382	Identifier	db		6506234	0					
ANR	6506383	Identifier	HeapInformation		6506234	1					
ANR	6506384	ForStatement	for ( int i = 0 ; i < heapInfo -> count ; i ++ )		6506234	13					
ANR	6506385	ForInit	int i = 0 ;	1061:6:35751:35760	6506234	0	True				
ANR	6506386	IdentifierDeclStatement	int i = 0 ;		6506234	0					
ANR	6506387	IdentifierDecl	i = 0		6506234	0					
ANR	6506388	IdentifierDeclType	int		6506234	0					
ANR	6506389	Identifier	i		6506234	1					
ANR	6506390	AssignmentExpression	i = 0		6506234	2		=			
ANR	6506391	Identifier	i		6506234	0					
ANR	6506392	PrimaryExpression	0		6506234	1					
ANR	6506393	Condition	i < heapInfo -> count	1061:17:35762:35780	6506234	1	True				
ANR	6506394	RelationalExpression	i < heapInfo -> count		6506234	0		<			
ANR	6506395	Identifier	i		6506234	0					
ANR	6506396	PtrMemberAccess	heapInfo -> count		6506234	1					
ANR	6506397	Identifier	heapInfo		6506234	0					
ANR	6506398	Identifier	count		6506234	1					
ANR	6506399	PostIncDecOperationExpression	i ++	1061:38:35783:35785	6506234	2	True				
ANR	6506400	Identifier	i		6506234	0					
ANR	6506401	IncDec	++		6506234	1					
ANR	6506402	CompoundStatement		28:2:704:752	6506234	3					
ANR	6506403	IdentifierDeclStatement	DEBUG_HEAP_INFORMATION heap = heapInfo -> heaps [ i ] ;	1062:2:35792:35840	6506234	0	True				
ANR	6506404	IdentifierDecl	heap = heapInfo -> heaps [ i ]		6506234	0					
ANR	6506405	IdentifierDeclType	DEBUG_HEAP_INFORMATION		6506234	0					
ANR	6506406	Identifier	heap		6506234	1					
ANR	6506407	AssignmentExpression	heap = heapInfo -> heaps [ i ]		6506234	2		=			
ANR	6506408	Identifier	heap		6506234	0					
ANR	6506409	ArrayIndexing	heapInfo -> heaps [ i ]		6506234	1					
ANR	6506410	PtrMemberAccess	heapInfo -> heaps		6506234	0					
ANR	6506411	Identifier	heapInfo		6506234	0					
ANR	6506412	Identifier	heaps		6506234	1					
ANR	6506413	Identifier	i		6506234	1					
ANR	6506414	IfStatement	"if ( is_segment_heap ( h_proc , heap . Base ) )"		6506234	1					
ANR	6506415	Condition	"is_segment_heap ( h_proc , heap . Base )"	1063:6:35848:35882	6506234	0	True				
ANR	6506416	CallExpression	"is_segment_heap ( h_proc , heap . Base )"		6506234	0					
ANR	6506417	Callee	is_segment_heap		6506234	0					
ANR	6506418	Identifier	is_segment_heap		6506234	0					
ANR	6506419	ArgumentList	h_proc		6506234	1					
ANR	6506420	Argument	h_proc		6506234	0					
ANR	6506421	Identifier	h_proc		6506234	0					
ANR	6506422	Argument	heap . Base		6506234	1					
ANR	6506423	MemberAccess	heap . Base		6506234	0					
ANR	6506424	Identifier	heap		6506234	0					
ANR	6506425	Identifier	Base		6506234	1					
ANR	6506426	CompoundStatement		29:43:797:797	6506234	1					
ANR	6506427	ExpressionStatement	free ( hb )	1064:3:35890:35899	6506234	0	True				
ANR	6506428	CallExpression	free ( hb )		6506234	0					
ANR	6506429	Callee	free		6506234	0					
ANR	6506430	Identifier	free		6506234	0					
ANR	6506431	ArgumentList	hb		6506234	1					
ANR	6506432	Argument	hb		6506234	0					
ANR	6506433	Identifier	hb		6506234	0					
ANR	6506434	ExpressionStatement	R_FREE ( extra )	1065:3:35904:35918	6506234	1	True				
ANR	6506435	CallExpression	R_FREE ( extra )		6506234	0					
ANR	6506436	Callee	R_FREE		6506234	0					
ANR	6506437	Identifier	R_FREE		6506234	0					
ANR	6506438	ArgumentList	extra		6506234	1					
ANR	6506439	Argument	extra		6506234	0					
ANR	6506440	Identifier	extra		6506234	0					
ANR	6506441	ExpressionStatement	"hb = GetSingleSegmentBlock ( dbg , h_proc , heap . Base , offset )"	1066:3:35923:35982	6506234	2	True				
ANR	6506442	AssignmentExpression	"hb = GetSingleSegmentBlock ( dbg , h_proc , heap . Base , offset )"		6506234	0		=			
ANR	6506443	Identifier	hb		6506234	0					
ANR	6506444	CallExpression	"GetSingleSegmentBlock ( dbg , h_proc , heap . Base , offset )"		6506234	1					
ANR	6506445	Callee	GetSingleSegmentBlock		6506234	0					
ANR	6506446	Identifier	GetSingleSegmentBlock		6506234	0					
ANR	6506447	ArgumentList	dbg		6506234	1					
ANR	6506448	Argument	dbg		6506234	0					
ANR	6506449	Identifier	dbg		6506234	0					
ANR	6506450	Argument	h_proc		6506234	1					
ANR	6506451	Identifier	h_proc		6506234	0					
ANR	6506452	Argument	heap . Base		6506234	2					
ANR	6506453	MemberAccess	heap . Base		6506234	0					
ANR	6506454	Identifier	heap		6506234	0					
ANR	6506455	Identifier	Base		6506234	1					
ANR	6506456	Argument	offset		6506234	3					
ANR	6506457	Identifier	offset		6506234	0					
ANR	6506458	IfStatement	if ( ! hb )		6506234	3					
ANR	6506459	Condition	! hb	1067:7:35991:35993	6506234	0	True				
ANR	6506460	UnaryOperationExpression	! hb		6506234	0					
ANR	6506461	UnaryOperator	!		6506234	0					
ANR	6506462	Identifier	hb		6506234	1					
ANR	6506463	CompoundStatement		33:12:908:908	6506234	1					
ANR	6506464	GotoStatement	goto err ;	1068:4:36002:36010	6506234	0	True				
ANR	6506465	Identifier	err		6506234	0					
ANR	6506466	BreakStatement	break ;	1070:3:36020:36025	6506234	4	True				
ANR	6506467	ElseStatement	else		6506234	0					
ANR	6506468	CompoundStatement		47:3:1287:1314	6506234	0					
ANR	6506469	IdentifierDeclStatement	HEAP h ;	1072:3:36041:36047	6506234	0	True				
ANR	6506470	IdentifierDecl	h		6506234	0					
ANR	6506471	IdentifierDeclType	HEAP		6506234	0					
ANR	6506472	Identifier	h		6506234	1					
ANR	6506473	IdentifierDeclStatement	HEAP_ENTRY entry ;	1073:3:36052:36068	6506234	1	True				
ANR	6506474	IdentifierDecl	entry		6506234	0					
ANR	6506475	IdentifierDeclType	HEAP_ENTRY		6506234	0					
ANR	6506476	Identifier	entry		6506234	1					
ANR	6506477	IdentifierDeclStatement	WPARAM entryOffset = offset - heap . Granularity ;	1074:3:36073:36119	6506234	2	True				
ANR	6506478	IdentifierDecl	entryOffset = offset - heap . Granularity		6506234	0					
ANR	6506479	IdentifierDeclType	WPARAM		6506234	0					
ANR	6506480	Identifier	entryOffset		6506234	1					
ANR	6506481	AssignmentExpression	entryOffset = offset - heap . Granularity		6506234	2		=			
ANR	6506482	Identifier	entryOffset		6506234	0					
ANR	6506483	AdditiveExpression	offset - heap . Granularity		6506234	1		-			
ANR	6506484	Identifier	offset		6506234	0					
ANR	6506485	MemberAccess	heap . Granularity		6506234	1					
ANR	6506486	Identifier	heap		6506234	0					
ANR	6506487	Identifier	Granularity		6506234	1					
ANR	6506488	IfStatement	"if ( ! ReadProcessMemory ( h_proc , heap . Base , & h , sizeof ( HEAP ) , NULL ) || ! ReadProcessMemory ( h_proc , ( PVOID ) entryOffset , & entry , sizeof ( HEAP_ENTRY ) , NULL ) )"		6506234	3					
ANR	6506489	Condition	"! ReadProcessMemory ( h_proc , heap . Base , & h , sizeof ( HEAP ) , NULL ) || ! ReadProcessMemory ( h_proc , ( PVOID ) entryOffset , & entry , sizeof ( HEAP_ENTRY ) , NULL )"	1075:7:36128:36280	6506234	0	True				
ANR	6506490	OrExpression	"! ReadProcessMemory ( h_proc , heap . Base , & h , sizeof ( HEAP ) , NULL ) || ! ReadProcessMemory ( h_proc , ( PVOID ) entryOffset , & entry , sizeof ( HEAP_ENTRY ) , NULL )"		6506234	0		||			
ANR	6506491	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , heap . Base , & h , sizeof ( HEAP ) , NULL )"		6506234	0					
ANR	6506492	UnaryOperator	!		6506234	0					
ANR	6506493	CallExpression	"ReadProcessMemory ( h_proc , heap . Base , & h , sizeof ( HEAP ) , NULL )"		6506234	1					
ANR	6506494	Callee	ReadProcessMemory		6506234	0					
ANR	6506495	Identifier	ReadProcessMemory		6506234	0					
ANR	6506496	ArgumentList	h_proc		6506234	1					
ANR	6506497	Argument	h_proc		6506234	0					
ANR	6506498	Identifier	h_proc		6506234	0					
ANR	6506499	Argument	heap . Base		6506234	1					
ANR	6506500	MemberAccess	heap . Base		6506234	0					
ANR	6506501	Identifier	heap		6506234	0					
ANR	6506502	Identifier	Base		6506234	1					
ANR	6506503	Argument	& h		6506234	2					
ANR	6506504	UnaryOperationExpression	& h		6506234	0					
ANR	6506505	UnaryOperator	&		6506234	0					
ANR	6506506	Identifier	h		6506234	1					
ANR	6506507	Argument	sizeof ( HEAP )		6506234	3					
ANR	6506508	SizeofExpression	sizeof ( HEAP )		6506234	0					
ANR	6506509	Sizeof	sizeof		6506234	0					
ANR	6506510	SizeofOperand	HEAP		6506234	1					
ANR	6506511	Argument	NULL		6506234	4					
ANR	6506512	Identifier	NULL		6506234	0					
ANR	6506513	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) entryOffset , & entry , sizeof ( HEAP_ENTRY ) , NULL )"		6506234	1					
ANR	6506514	UnaryOperator	!		6506234	0					
ANR	6506515	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) entryOffset , & entry , sizeof ( HEAP_ENTRY ) , NULL )"		6506234	1					
ANR	6506516	Callee	ReadProcessMemory		6506234	0					
ANR	6506517	Identifier	ReadProcessMemory		6506234	0					
ANR	6506518	ArgumentList	h_proc		6506234	1					
ANR	6506519	Argument	h_proc		6506234	0					
ANR	6506520	Identifier	h_proc		6506234	0					
ANR	6506521	Argument	( PVOID ) entryOffset		6506234	1					
ANR	6506522	CastExpression	( PVOID ) entryOffset		6506234	0					
ANR	6506523	CastTarget	PVOID		6506234	0					
ANR	6506524	Identifier	entryOffset		6506234	1					
ANR	6506525	Argument	& entry		6506234	2					
ANR	6506526	UnaryOperationExpression	& entry		6506234	0					
ANR	6506527	UnaryOperator	&		6506234	0					
ANR	6506528	Identifier	entry		6506234	1					
ANR	6506529	Argument	sizeof ( HEAP_ENTRY )		6506234	3					
ANR	6506530	SizeofExpression	sizeof ( HEAP_ENTRY )		6506234	0					
ANR	6506531	Sizeof	sizeof		6506234	0					
ANR	6506532	SizeofOperand	HEAP_ENTRY		6506234	1					
ANR	6506533	Argument	NULL		6506234	4					
ANR	6506534	Identifier	NULL		6506234	0					
ANR	6506535	CompoundStatement		42:88:1195:1195	6506234	1					
ANR	6506536	GotoStatement	goto err ;	1077:4:36289:36297	6506234	0	True				
ANR	6506537	Identifier	err		6506234	0					
ANR	6506538	ExpressionStatement	extra -> granularity = heap . Granularity	1079:3:36307:36344	6506234	4	True				
ANR	6506539	AssignmentExpression	extra -> granularity = heap . Granularity		6506234	0		=			
ANR	6506540	PtrMemberAccess	extra -> granularity		6506234	0					
ANR	6506541	Identifier	extra		6506234	0					
ANR	6506542	Identifier	granularity		6506234	1					
ANR	6506543	MemberAccess	heap . Granularity		6506234	1					
ANR	6506544	Identifier	heap		6506234	0					
ANR	6506545	Identifier	Granularity		6506234	1					
ANR	6506546	ExpressionStatement	hb -> extraInfo = extra	1080:3:36349:36370	6506234	5	True				
ANR	6506547	AssignmentExpression	hb -> extraInfo = extra		6506234	0		=			
ANR	6506548	PtrMemberAccess	hb -> extraInfo		6506234	0					
ANR	6506549	Identifier	hb		6506234	0					
ANR	6506550	Identifier	extraInfo		6506234	1					
ANR	6506551	Identifier	extra		6506234	1					
ANR	6506552	IdentifierDeclStatement	HEAP_ENTRY tmpEntry = entry ;	1081:3:36375:36402	6506234	6	True				
ANR	6506553	IdentifierDecl	tmpEntry = entry		6506234	0					
ANR	6506554	IdentifierDeclType	HEAP_ENTRY		6506234	0					
ANR	6506555	Identifier	tmpEntry		6506234	1					
ANR	6506556	AssignmentExpression	tmpEntry = entry		6506234	2		=			
ANR	6506557	Identifier	entry		6506234	0					
ANR	6506558	Identifier	entry		6506234	1					
ANR	6506559	IfStatement	"if ( DecodeHeapEntry ( dbg , & h , & tmpEntry ) )"		6506234	7					
ANR	6506560	Condition	"DecodeHeapEntry ( dbg , & h , & tmpEntry )"	1082:7:36411:36446	6506234	0	True				
ANR	6506561	CallExpression	"DecodeHeapEntry ( dbg , & h , & tmpEntry )"		6506234	0					
ANR	6506562	Callee	DecodeHeapEntry		6506234	0					
ANR	6506563	Identifier	DecodeHeapEntry		6506234	0					
ANR	6506564	ArgumentList	dbg		6506234	1					
ANR	6506565	Argument	dbg		6506234	0					
ANR	6506566	Identifier	dbg		6506234	0					
ANR	6506567	Argument	& h		6506234	1					
ANR	6506568	UnaryOperationExpression	& h		6506234	0					
ANR	6506569	UnaryOperator	&		6506234	0					
ANR	6506570	Identifier	h		6506234	1					
ANR	6506571	Argument	& tmpEntry		6506234	2					
ANR	6506572	UnaryOperationExpression	& tmpEntry		6506234	0					
ANR	6506573	UnaryOperator	&		6506234	0					
ANR	6506574	Identifier	tmpEntry		6506234	1					
ANR	6506575	CompoundStatement		48:45:1361:1361	6506234	1					
ANR	6506576	ExpressionStatement	entry = tmpEntry	1083:4:36455:36471	6506234	0	True				
ANR	6506577	AssignmentExpression	entry = tmpEntry		6506234	0		=			
ANR	6506578	Identifier	entry		6506234	0					
ANR	6506579	Identifier	tmpEntry		6506234	1					
ANR	6506580	ExpressionStatement	hb -> dwAddress = ( PVOID ) offset	1084:4:36477:36506	6506234	1	True				
ANR	6506581	AssignmentExpression	hb -> dwAddress = ( PVOID ) offset		6506234	0		=			
ANR	6506582	PtrMemberAccess	hb -> dwAddress		6506234	0					
ANR	6506583	Identifier	hb		6506234	0					
ANR	6506584	Identifier	dwAddress		6506234	1					
ANR	6506585	CastExpression	( PVOID ) offset		6506234	1					
ANR	6506586	CastTarget	PVOID		6506234	0					
ANR	6506587	Identifier	offset		6506234	1					
ANR	6506588	ExpressionStatement	"UPDATE_FLAGS ( hb , ( DWORD ) entry . Flags | NT_BLOCK )"	1085:4:36512:36560	6506234	2	True				
ANR	6506589	CallExpression	"UPDATE_FLAGS ( hb , ( DWORD ) entry . Flags | NT_BLOCK )"		6506234	0					
ANR	6506590	Callee	UPDATE_FLAGS		6506234	0					
ANR	6506591	Identifier	UPDATE_FLAGS		6506234	0					
ANR	6506592	ArgumentList	hb		6506234	1					
ANR	6506593	Argument	hb		6506234	0					
ANR	6506594	Identifier	hb		6506234	0					
ANR	6506595	Argument	( DWORD ) entry . Flags | NT_BLOCK		6506234	1					
ANR	6506596	InclusiveOrExpression	( DWORD ) entry . Flags | NT_BLOCK		6506234	0		|			
ANR	6506597	CastExpression	( DWORD ) entry . Flags		6506234	0					
ANR	6506598	CastTarget	DWORD		6506234	0					
ANR	6506599	MemberAccess	entry . Flags		6506234	1					
ANR	6506600	Identifier	entry		6506234	0					
ANR	6506601	Identifier	Flags		6506234	1					
ANR	6506602	Identifier	NT_BLOCK		6506234	1					
ANR	6506603	IfStatement	if ( entry . UnusedBytes == 0x4 )		6506234	3					
ANR	6506604	Condition	entry . UnusedBytes == 0x4	1086:8:36570:36593	6506234	0	True				
ANR	6506605	EqualityExpression	entry . UnusedBytes == 0x4		6506234	0		==			
ANR	6506606	MemberAccess	entry . UnusedBytes		6506234	0					
ANR	6506607	Identifier	entry		6506234	0					
ANR	6506608	Identifier	UnusedBytes		6506234	1					
ANR	6506609	PrimaryExpression	0x4		6506234	1					
ANR	6506610	CompoundStatement		53:5:1515:1550	6506234	1					
ANR	6506611	IdentifierDeclStatement	HEAP_VIRTUAL_ALLOC_ENTRY largeEntry ;	1087:5:36603:36638	6506234	0	True				
ANR	6506612	IdentifierDecl	largeEntry		6506234	0					
ANR	6506613	IdentifierDeclType	HEAP_VIRTUAL_ALLOC_ENTRY		6506234	0					
ANR	6506614	Identifier	largeEntry		6506234	1					
ANR	6506615	IfStatement	"if ( ReadProcessMemory ( h_proc , ( PVOID ) ( offset - sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) ) , & largeEntry , sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) , NULL ) )"		6506234	1					
ANR	6506616	Condition	"ReadProcessMemory ( h_proc , ( PVOID ) ( offset - sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) ) , & largeEntry , sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) , NULL )"	1088:9:36649:36781	6506234	0	True				
ANR	6506617	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) ( offset - sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) ) , & largeEntry , sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) , NULL )"		6506234	0					
ANR	6506618	Callee	ReadProcessMemory		6506234	0					
ANR	6506619	Identifier	ReadProcessMemory		6506234	0					
ANR	6506620	ArgumentList	h_proc		6506234	1					
ANR	6506621	Argument	h_proc		6506234	0					
ANR	6506622	Identifier	h_proc		6506234	0					
ANR	6506623	Argument	( PVOID ) ( offset - sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) )		6506234	1					
ANR	6506624	CastExpression	( PVOID ) ( offset - sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY ) )		6506234	0					
ANR	6506625	CastTarget	PVOID		6506234	0					
ANR	6506626	AdditiveExpression	offset - sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6506234	1		-			
ANR	6506627	Identifier	offset		6506234	0					
ANR	6506628	SizeofExpression	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6506234	1					
ANR	6506629	Sizeof	sizeof		6506234	0					
ANR	6506630	SizeofOperand	HEAP_VIRTUAL_ALLOC_ENTRY		6506234	1					
ANR	6506631	Argument	& largeEntry		6506234	2					
ANR	6506632	UnaryOperationExpression	& largeEntry		6506234	0					
ANR	6506633	UnaryOperator	&		6506234	0					
ANR	6506634	Identifier	largeEntry		6506234	1					
ANR	6506635	Argument	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6506234	3					
ANR	6506636	SizeofExpression	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6506234	0					
ANR	6506637	Sizeof	sizeof		6506234	0					
ANR	6506638	SizeofOperand	HEAP_VIRTUAL_ALLOC_ENTRY		6506234	1					
ANR	6506639	Argument	NULL		6506234	4					
ANR	6506640	Identifier	NULL		6506234	0					
ANR	6506641	CompoundStatement		54:144:1696:1696	6506234	1					
ANR	6506642	ExpressionStatement	hb -> dwSize = largeEntry . CommitSize	1089:6:36792:36826	6506234	0	True				
ANR	6506643	AssignmentExpression	hb -> dwSize = largeEntry . CommitSize		6506234	0		=			
ANR	6506644	PtrMemberAccess	hb -> dwSize		6506234	0					
ANR	6506645	Identifier	hb		6506234	0					
ANR	6506646	Identifier	dwSize		6506234	1					
ANR	6506647	MemberAccess	largeEntry . CommitSize		6506234	1					
ANR	6506648	Identifier	largeEntry		6506234	0					
ANR	6506649	Identifier	CommitSize		6506234	1					
ANR	6506650	ExpressionStatement	hb -> dwFlags |= LARGE_BLOCK	1090:6:36834:36860	6506234	1	True				
ANR	6506651	AssignmentExpression	hb -> dwFlags |= LARGE_BLOCK		6506234	0		|=			
ANR	6506652	PtrMemberAccess	hb -> dwFlags		6506234	0					
ANR	6506653	Identifier	hb		6506234	0					
ANR	6506654	Identifier	dwFlags		6506234	1					
ANR	6506655	Identifier	LARGE_BLOCK		6506234	1					
ANR	6506656	ExpressionStatement	extra -> unusedBytes = largeEntry . ReserveSize - largeEntry . CommitSize	1091:6:36868:36935	6506234	2	True				
ANR	6506657	AssignmentExpression	extra -> unusedBytes = largeEntry . ReserveSize - largeEntry . CommitSize		6506234	0		=			
ANR	6506658	PtrMemberAccess	extra -> unusedBytes		6506234	0					
ANR	6506659	Identifier	extra		6506234	0					
ANR	6506660	Identifier	unusedBytes		6506234	1					
ANR	6506661	AdditiveExpression	largeEntry . ReserveSize - largeEntry . CommitSize		6506234	1		-			
ANR	6506662	MemberAccess	largeEntry . ReserveSize		6506234	0					
ANR	6506663	Identifier	largeEntry		6506234	0					
ANR	6506664	Identifier	ReserveSize		6506234	1					
ANR	6506665	MemberAccess	largeEntry . CommitSize		6506234	1					
ANR	6506666	Identifier	largeEntry		6506234	0					
ANR	6506667	Identifier	CommitSize		6506234	1					
ANR	6506668	ExpressionStatement	extra -> granularity = sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )	1092:6:36943:36997	6506234	3	True				
ANR	6506669	AssignmentExpression	extra -> granularity = sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6506234	0		=			
ANR	6506670	PtrMemberAccess	extra -> granularity		6506234	0					
ANR	6506671	Identifier	extra		6506234	0					
ANR	6506672	Identifier	granularity		6506234	1					
ANR	6506673	SizeofExpression	sizeof ( HEAP_VIRTUAL_ALLOC_ENTRY )		6506234	1					
ANR	6506674	Sizeof	sizeof		6506234	0					
ANR	6506675	SizeofOperand	HEAP_VIRTUAL_ALLOC_ENTRY		6506234	1					
ANR	6506676	ElseStatement	else		6506234	0					
ANR	6506677	CompoundStatement		60:11:1929:1929	6506234	0					
ANR	6506678	ExpressionStatement	hb -> dwSize = ( WPARAM ) entry . Size * heap . Granularity	1095:5:37024:37074	6506234	0	True				
ANR	6506679	AssignmentExpression	hb -> dwSize = ( WPARAM ) entry . Size * heap . Granularity		6506234	0		=			
ANR	6506680	PtrMemberAccess	hb -> dwSize		6506234	0					
ANR	6506681	Identifier	hb		6506234	0					
ANR	6506682	Identifier	dwSize		6506234	1					
ANR	6506683	MultiplicativeExpression	( WPARAM ) entry . Size * heap . Granularity		6506234	1		*			
ANR	6506684	CastExpression	( WPARAM ) entry . Size		6506234	0					
ANR	6506685	CastTarget	WPARAM		6506234	0					
ANR	6506686	MemberAccess	entry . Size		6506234	1					
ANR	6506687	Identifier	entry		6506234	0					
ANR	6506688	Identifier	Size		6506234	1					
ANR	6506689	MemberAccess	heap . Granularity		6506234	1					
ANR	6506690	Identifier	heap		6506234	0					
ANR	6506691	Identifier	Granularity		6506234	1					
ANR	6506692	ExpressionStatement	hb -> dwFlags |= BACKEND_BLOCK	1096:5:37081:37109	6506234	1	True				
ANR	6506693	AssignmentExpression	hb -> dwFlags |= BACKEND_BLOCK		6506234	0		|=			
ANR	6506694	PtrMemberAccess	hb -> dwFlags		6506234	0					
ANR	6506695	Identifier	hb		6506234	0					
ANR	6506696	Identifier	dwFlags		6506234	1					
ANR	6506697	Identifier	BACKEND_BLOCK		6506234	1					
ANR	6506698	BreakStatement	break ;	1098:4:37121:37126	6506234	4	True				
ANR	6506699	IfStatement	if ( entry . UnusedBytes & 0x80 )		6506234	8					
ANR	6506700	Condition	entry . UnusedBytes & 0x80	1101:7:37150:37173	6506234	0	True				
ANR	6506701	BitAndExpression	entry . UnusedBytes & 0x80		6506234	0		&			
ANR	6506702	MemberAccess	entry . UnusedBytes		6506234	0					
ANR	6506703	Identifier	entry		6506234	0					
ANR	6506704	Identifier	UnusedBytes		6506234	1					
ANR	6506705	PrimaryExpression	0x80		6506234	1					
ANR	6506706	CompoundStatement		69:4:2116:2139	6506234	1					
ANR	6506707	ExpressionStatement	tmpEntry = entry	1102:4:37182:37198	6506234	0	True				
ANR	6506708	AssignmentExpression	tmpEntry = entry		6506234	0		=			
ANR	6506709	Identifier	tmpEntry		6506234	0					
ANR	6506710	Identifier	entry		6506234	1					
ANR	6506711	IdentifierDeclStatement	WPARAM userBlocksOffset ;	1103:4:37204:37227	6506234	1	True				
ANR	6506712	IdentifierDecl	userBlocksOffset		6506234	0					
ANR	6506713	IdentifierDeclType	WPARAM		6506234	0					
ANR	6506714	Identifier	userBlocksOffset		6506234	1					
ANR	6506715	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6506234	2					
ANR	6506716	Condition	dbg -> bits == R_SYS_BITS_64	1104:8:37237:37262	6506234	0	True				
ANR	6506717	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6506234	0		==			
ANR	6506718	PtrMemberAccess	dbg -> bits		6506234	0					
ANR	6506719	Identifier	dbg		6506234	0					
ANR	6506720	Identifier	bits		6506234	1					
ANR	6506721	Identifier	R_SYS_BITS_64		6506234	1					
ANR	6506722	CompoundStatement		70:36:2177:2177	6506234	1					
ANR	6506723	ExpressionStatement	* ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ^= PtrToInt ( h . BaseAddress ) ^ ( entryOffset >> 0x4 ) ^ ( DWORD ) NtLFHKey	1105:5:37272:37369	6506234	0	True				
ANR	6506724	AssignmentExpression	* ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ^= PtrToInt ( h . BaseAddress ) ^ ( entryOffset >> 0x4 ) ^ ( DWORD ) NtLFHKey		6506234	0		^=			
ANR	6506725	UnaryOperationExpression	* ( ( ( WPARAM * ) & tmpEntry ) + 1 )		6506234	0					
ANR	6506726	UnaryOperator	*		6506234	0					
ANR	6506727	AdditiveExpression	( ( WPARAM * ) & tmpEntry ) + 1		6506234	1		+			
ANR	6506728	CastExpression	( WPARAM * ) & tmpEntry		6506234	0					
ANR	6506729	CastTarget	WPARAM *		6506234	0					
ANR	6506730	UnaryOperationExpression	& tmpEntry		6506234	1					
ANR	6506731	UnaryOperator	&		6506234	0					
ANR	6506732	Identifier	tmpEntry		6506234	1					
ANR	6506733	PrimaryExpression	1		6506234	1					
ANR	6506734	ExclusiveOrExpression	PtrToInt ( h . BaseAddress ) ^ ( entryOffset >> 0x4 ) ^ ( DWORD ) NtLFHKey		6506234	1		^			
ANR	6506735	CallExpression	PtrToInt ( h . BaseAddress )		6506234	0					
ANR	6506736	Callee	PtrToInt		6506234	0					
ANR	6506737	Identifier	PtrToInt		6506234	0					
ANR	6506738	ArgumentList	h . BaseAddress		6506234	1					
ANR	6506739	Argument	h . BaseAddress		6506234	0					
ANR	6506740	MemberAccess	h . BaseAddress		6506234	0					
ANR	6506741	Identifier	h		6506234	0					
ANR	6506742	Identifier	BaseAddress		6506234	1					
ANR	6506743	ExclusiveOrExpression	( entryOffset >> 0x4 ) ^ ( DWORD ) NtLFHKey		6506234	1		^			
ANR	6506744	ShiftExpression	entryOffset >> 0x4		6506234	0		>>			
ANR	6506745	Identifier	entryOffset		6506234	0					
ANR	6506746	PrimaryExpression	0x4		6506234	1					
ANR	6506747	CastExpression	( DWORD ) NtLFHKey		6506234	1					
ANR	6506748	CastTarget	DWORD		6506234	0					
ANR	6506749	Identifier	NtLFHKey		6506234	1					
ANR	6506750	ExpressionStatement	userBlocksOffset = entryOffset - ( USHORT ) ( ( * ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ) >> 0xC )	1106:5:37376:37456	6506234	1	True				
ANR	6506751	AssignmentExpression	userBlocksOffset = entryOffset - ( USHORT ) ( ( * ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ) >> 0xC )		6506234	0		=			
ANR	6506752	Identifier	userBlocksOffset		6506234	0					
ANR	6506753	AdditiveExpression	entryOffset - ( USHORT ) ( ( * ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ) >> 0xC )		6506234	1		-			
ANR	6506754	Identifier	entryOffset		6506234	0					
ANR	6506755	CastExpression	( USHORT ) ( ( * ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ) >> 0xC )		6506234	1					
ANR	6506756	CastTarget	USHORT		6506234	0					
ANR	6506757	ShiftExpression	( * ( ( ( WPARAM * ) & tmpEntry ) + 1 ) ) >> 0xC		6506234	1		>>			
ANR	6506758	UnaryOperationExpression	* ( ( ( WPARAM * ) & tmpEntry ) + 1 )		6506234	0					
ANR	6506759	UnaryOperator	*		6506234	0					
ANR	6506760	AdditiveExpression	( ( WPARAM * ) & tmpEntry ) + 1		6506234	1		+			
ANR	6506761	CastExpression	( WPARAM * ) & tmpEntry		6506234	0					
ANR	6506762	CastTarget	WPARAM *		6506234	0					
ANR	6506763	UnaryOperationExpression	& tmpEntry		6506234	1					
ANR	6506764	UnaryOperator	&		6506234	0					
ANR	6506765	Identifier	tmpEntry		6506234	1					
ANR	6506766	PrimaryExpression	1		6506234	1					
ANR	6506767	PrimaryExpression	0xC		6506234	1					
ANR	6506768	ElseStatement	else		6506234	0					
ANR	6506769	CompoundStatement		73:11:2381:2381	6506234	0					
ANR	6506770	ExpressionStatement	* ( ( WPARAM * ) & tmpEntry ) ^= PtrToInt ( h . BaseAddress ) ^ ( ( DWORD ) ( entryOffset ) >> 0x4 ) ^ ( DWORD ) NtLFHKey	1108:5:37476:37576	6506234	0	True				
ANR	6506771	AssignmentExpression	* ( ( WPARAM * ) & tmpEntry ) ^= PtrToInt ( h . BaseAddress ) ^ ( ( DWORD ) ( entryOffset ) >> 0x4 ) ^ ( DWORD ) NtLFHKey		6506234	0		^=			
ANR	6506772	UnaryOperationExpression	* ( ( WPARAM * ) & tmpEntry )		6506234	0					
ANR	6506773	UnaryOperator	*		6506234	0					
ANR	6506774	CastExpression	( WPARAM * ) & tmpEntry		6506234	1					
ANR	6506775	CastTarget	WPARAM *		6506234	0					
ANR	6506776	UnaryOperationExpression	& tmpEntry		6506234	1					
ANR	6506777	UnaryOperator	&		6506234	0					
ANR	6506778	Identifier	tmpEntry		6506234	1					
ANR	6506779	ExclusiveOrExpression	PtrToInt ( h . BaseAddress ) ^ ( ( DWORD ) ( entryOffset ) >> 0x4 ) ^ ( DWORD ) NtLFHKey		6506234	1		^			
ANR	6506780	CallExpression	PtrToInt ( h . BaseAddress )		6506234	0					
ANR	6506781	Callee	PtrToInt		6506234	0					
ANR	6506782	Identifier	PtrToInt		6506234	0					
ANR	6506783	ArgumentList	h . BaseAddress		6506234	1					
ANR	6506784	Argument	h . BaseAddress		6506234	0					
ANR	6506785	MemberAccess	h . BaseAddress		6506234	0					
ANR	6506786	Identifier	h		6506234	0					
ANR	6506787	Identifier	BaseAddress		6506234	1					
ANR	6506788	ExclusiveOrExpression	( ( DWORD ) ( entryOffset ) >> 0x4 ) ^ ( DWORD ) NtLFHKey		6506234	1		^			
ANR	6506789	ShiftExpression	( DWORD ) ( entryOffset ) >> 0x4		6506234	0		>>			
ANR	6506790	CastExpression	( DWORD ) ( entryOffset )		6506234	0					
ANR	6506791	CastTarget	DWORD		6506234	0					
ANR	6506792	Identifier	entryOffset		6506234	1					
ANR	6506793	PrimaryExpression	0x4		6506234	1					
ANR	6506794	CastExpression	( DWORD ) NtLFHKey		6506234	1					
ANR	6506795	CastTarget	DWORD		6506234	0					
ANR	6506796	Identifier	NtLFHKey		6506234	1					
ANR	6506797	ExpressionStatement	userBlocksOffset = entryOffset - ( USHORT ) ( * ( ( WPARAM * ) & tmpEntry ) >> 0xC )	1109:5:37583:37655	6506234	1	True				
ANR	6506798	AssignmentExpression	userBlocksOffset = entryOffset - ( USHORT ) ( * ( ( WPARAM * ) & tmpEntry ) >> 0xC )		6506234	0		=			
ANR	6506799	Identifier	userBlocksOffset		6506234	0					
ANR	6506800	AdditiveExpression	entryOffset - ( USHORT ) ( * ( ( WPARAM * ) & tmpEntry ) >> 0xC )		6506234	1		-			
ANR	6506801	Identifier	entryOffset		6506234	0					
ANR	6506802	CastExpression	( USHORT ) ( * ( ( WPARAM * ) & tmpEntry ) >> 0xC )		6506234	1					
ANR	6506803	CastTarget	USHORT		6506234	0					
ANR	6506804	ShiftExpression	* ( ( WPARAM * ) & tmpEntry ) >> 0xC		6506234	1		>>			
ANR	6506805	UnaryOperationExpression	* ( ( WPARAM * ) & tmpEntry )		6506234	0					
ANR	6506806	UnaryOperator	*		6506234	0					
ANR	6506807	CastExpression	( WPARAM * ) & tmpEntry		6506234	1					
ANR	6506808	CastTarget	WPARAM *		6506234	0					
ANR	6506809	UnaryOperationExpression	& tmpEntry		6506234	1					
ANR	6506810	UnaryOperator	&		6506234	0					
ANR	6506811	Identifier	tmpEntry		6506234	1					
ANR	6506812	PrimaryExpression	0xC		6506234	1					
ANR	6506813	IfStatement	"if ( DecodeLFHEntry ( dbg , & h , & entry , ( PVOID ) userBlocksOffset , NtLFHKey , entryOffset ) )"		6506234	3					
ANR	6506814	Condition	"DecodeLFHEntry ( dbg , & h , & entry , ( PVOID ) userBlocksOffset , NtLFHKey , entryOffset )"	1112:8:37696:37775	6506234	0	True				
ANR	6506815	CallExpression	"DecodeLFHEntry ( dbg , & h , & entry , ( PVOID ) userBlocksOffset , NtLFHKey , entryOffset )"		6506234	0					
ANR	6506816	Callee	DecodeLFHEntry		6506234	0					
ANR	6506817	Identifier	DecodeLFHEntry		6506234	0					
ANR	6506818	ArgumentList	dbg		6506234	1					
ANR	6506819	Argument	dbg		6506234	0					
ANR	6506820	Identifier	dbg		6506234	0					
ANR	6506821	Argument	& h		6506234	1					
ANR	6506822	UnaryOperationExpression	& h		6506234	0					
ANR	6506823	UnaryOperator	&		6506234	0					
ANR	6506824	Identifier	h		6506234	1					
ANR	6506825	Argument	& entry		6506234	2					
ANR	6506826	UnaryOperationExpression	& entry		6506234	0					
ANR	6506827	UnaryOperator	&		6506234	0					
ANR	6506828	Identifier	entry		6506234	1					
ANR	6506829	Argument	( PVOID ) userBlocksOffset		6506234	3					
ANR	6506830	CastExpression	( PVOID ) userBlocksOffset		6506234	0					
ANR	6506831	CastTarget	PVOID		6506234	0					
ANR	6506832	Identifier	userBlocksOffset		6506234	1					
ANR	6506833	Argument	NtLFHKey		6506234	4					
ANR	6506834	Identifier	NtLFHKey		6506234	0					
ANR	6506835	Argument	entryOffset		6506234	5					
ANR	6506836	Identifier	entryOffset		6506234	0					
ANR	6506837	CompoundStatement		80:5:2735:2761	6506234	1					
ANR	6506838	IdentifierDeclStatement	HEAP_USERDATA_HEADER UserBlocks ;	1113:5:37785:37816	6506234	0	True				
ANR	6506839	IdentifierDecl	UserBlocks		6506234	0					
ANR	6506840	IdentifierDeclType	HEAP_USERDATA_HEADER		6506234	0					
ANR	6506841	Identifier	UserBlocks		6506234	1					
ANR	6506842	IdentifierDeclStatement	HEAP_SUBSEGMENT subsegment ;	1114:5:37823:37849	6506234	1	True				
ANR	6506843	IdentifierDecl	subsegment		6506234	0					
ANR	6506844	IdentifierDeclType	HEAP_SUBSEGMENT		6506234	0					
ANR	6506845	Identifier	subsegment		6506234	1					
ANR	6506846	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) userBlocksOffset , & UserBlocks , sizeof ( HEAP_USERDATA_HEADER ) , NULL ) )"		6506234	2					
ANR	6506847	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) userBlocksOffset , & UserBlocks , sizeof ( HEAP_USERDATA_HEADER ) , NULL )"	1115:9:37860:37961	6506234	0	True				
ANR	6506848	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) userBlocksOffset , & UserBlocks , sizeof ( HEAP_USERDATA_HEADER ) , NULL )"		6506234	0					
ANR	6506849	UnaryOperator	!		6506234	0					
ANR	6506850	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) userBlocksOffset , & UserBlocks , sizeof ( HEAP_USERDATA_HEADER ) , NULL )"		6506234	1					
ANR	6506851	Callee	ReadProcessMemory		6506234	0					
ANR	6506852	Identifier	ReadProcessMemory		6506234	0					
ANR	6506853	ArgumentList	h_proc		6506234	1					
ANR	6506854	Argument	h_proc		6506234	0					
ANR	6506855	Identifier	h_proc		6506234	0					
ANR	6506856	Argument	( PVOID ) userBlocksOffset		6506234	1					
ANR	6506857	CastExpression	( PVOID ) userBlocksOffset		6506234	0					
ANR	6506858	CastTarget	PVOID		6506234	0					
ANR	6506859	Identifier	userBlocksOffset		6506234	1					
ANR	6506860	Argument	& UserBlocks		6506234	2					
ANR	6506861	UnaryOperationExpression	& UserBlocks		6506234	0					
ANR	6506862	UnaryOperator	&		6506234	0					
ANR	6506863	Identifier	UserBlocks		6506234	1					
ANR	6506864	Argument	sizeof ( HEAP_USERDATA_HEADER )		6506234	3					
ANR	6506865	SizeofExpression	sizeof ( HEAP_USERDATA_HEADER )		6506234	0					
ANR	6506866	Sizeof	sizeof		6506234	0					
ANR	6506867	SizeofOperand	HEAP_USERDATA_HEADER		6506234	1					
ANR	6506868	Argument	NULL		6506234	4					
ANR	6506869	Identifier	NULL		6506234	0					
ANR	6506870	CompoundStatement		81:113:2876:2876	6506234	1					
ANR	6506871	ExpressionStatement	"r_sys_perror ( ""GetSingleBlock/ReadProcessMemory"" )"	1116:6:37972:38021	6506234	0	True				
ANR	6506872	CallExpression	"r_sys_perror ( ""GetSingleBlock/ReadProcessMemory"" )"		6506234	0					
ANR	6506873	Callee	r_sys_perror		6506234	0					
ANR	6506874	Identifier	r_sys_perror		6506234	0					
ANR	6506875	ArgumentList	"""GetSingleBlock/ReadProcessMemory"""		6506234	1					
ANR	6506876	Argument	"""GetSingleBlock/ReadProcessMemory"""		6506234	0					
ANR	6506877	PrimaryExpression	"""GetSingleBlock/ReadProcessMemory"""		6506234	0					
ANR	6506878	ContinueStatement	continue ;	1117:6:38029:38037	6506234	1	True				
ANR	6506879	IfStatement	"if ( ! ReadProcessMemory ( h_proc , ( PVOID ) UserBlocks . SubSegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , NULL ) )"		6506234	3					
ANR	6506880	Condition	"! ReadProcessMemory ( h_proc , ( PVOID ) UserBlocks . SubSegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , NULL )"	1119:9:38055:38156	6506234	0	True				
ANR	6506881	UnaryOperationExpression	"! ReadProcessMemory ( h_proc , ( PVOID ) UserBlocks . SubSegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , NULL )"		6506234	0					
ANR	6506882	UnaryOperator	!		6506234	0					
ANR	6506883	CallExpression	"ReadProcessMemory ( h_proc , ( PVOID ) UserBlocks . SubSegment , & subsegment , sizeof ( HEAP_SUBSEGMENT ) , NULL )"		6506234	1					
ANR	6506884	Callee	ReadProcessMemory		6506234	0					
ANR	6506885	Identifier	ReadProcessMemory		6506234	0					
ANR	6506886	ArgumentList	h_proc		6506234	1					
ANR	6506887	Argument	h_proc		6506234	0					
ANR	6506888	Identifier	h_proc		6506234	0					
ANR	6506889	Argument	( PVOID ) UserBlocks . SubSegment		6506234	1					
ANR	6506890	CastExpression	( PVOID ) UserBlocks . SubSegment		6506234	0					
ANR	6506891	CastTarget	PVOID		6506234	0					
ANR	6506892	MemberAccess	UserBlocks . SubSegment		6506234	1					
ANR	6506893	Identifier	UserBlocks		6506234	0					
ANR	6506894	Identifier	SubSegment		6506234	1					
ANR	6506895	Argument	& subsegment		6506234	2					
ANR	6506896	UnaryOperationExpression	& subsegment		6506234	0					
ANR	6506897	UnaryOperator	&		6506234	0					
ANR	6506898	Identifier	subsegment		6506234	1					
ANR	6506899	Argument	sizeof ( HEAP_SUBSEGMENT )		6506234	3					
ANR	6506900	SizeofExpression	sizeof ( HEAP_SUBSEGMENT )		6506234	0					
ANR	6506901	Sizeof	sizeof		6506234	0					
ANR	6506902	SizeofOperand	HEAP_SUBSEGMENT		6506234	1					
ANR	6506903	Argument	NULL		6506234	4					
ANR	6506904	Identifier	NULL		6506234	0					
ANR	6506905	CompoundStatement		85:113:3071:3071	6506234	1					
ANR	6506906	ContinueStatement	continue ;	1120:6:38167:38175	6506234	0	True				
ANR	6506907	ExpressionStatement	hb -> dwAddress = ( PVOID ) offset	1122:5:38189:38218	6506234	4	True				
ANR	6506908	AssignmentExpression	hb -> dwAddress = ( PVOID ) offset		6506234	0		=			
ANR	6506909	PtrMemberAccess	hb -> dwAddress		6506234	0					
ANR	6506910	Identifier	hb		6506234	0					
ANR	6506911	Identifier	dwAddress		6506234	1					
ANR	6506912	CastExpression	( PVOID ) offset		6506234	1					
ANR	6506913	CastTarget	PVOID		6506234	0					
ANR	6506914	Identifier	offset		6506234	1					
ANR	6506915	ExpressionStatement	hb -> dwSize = ( WPARAM ) subsegment . BlockSize * heap . Granularity	1123:5:38225:38285	6506234	5	True				
ANR	6506916	AssignmentExpression	hb -> dwSize = ( WPARAM ) subsegment . BlockSize * heap . Granularity		6506234	0		=			
ANR	6506917	PtrMemberAccess	hb -> dwSize		6506234	0					
ANR	6506918	Identifier	hb		6506234	0					
ANR	6506919	Identifier	dwSize		6506234	1					
ANR	6506920	MultiplicativeExpression	( WPARAM ) subsegment . BlockSize * heap . Granularity		6506234	1		*			
ANR	6506921	CastExpression	( WPARAM ) subsegment . BlockSize		6506234	0					
ANR	6506922	CastTarget	WPARAM		6506234	0					
ANR	6506923	MemberAccess	subsegment . BlockSize		6506234	1					
ANR	6506924	Identifier	subsegment		6506234	0					
ANR	6506925	Identifier	BlockSize		6506234	1					
ANR	6506926	MemberAccess	heap . Granularity		6506234	1					
ANR	6506927	Identifier	heap		6506234	0					
ANR	6506928	Identifier	Granularity		6506234	1					
ANR	6506929	ExpressionStatement	hb -> dwFlags = 1 | LFH_BLOCK | NT_BLOCK	1124:5:38292:38330	6506234	6	True				
ANR	6506930	AssignmentExpression	hb -> dwFlags = 1 | LFH_BLOCK | NT_BLOCK		6506234	0		=			
ANR	6506931	PtrMemberAccess	hb -> dwFlags		6506234	0					
ANR	6506932	Identifier	hb		6506234	0					
ANR	6506933	Identifier	dwFlags		6506234	1					
ANR	6506934	InclusiveOrExpression	1 | LFH_BLOCK | NT_BLOCK		6506234	1		|			
ANR	6506935	PrimaryExpression	1		6506234	0					
ANR	6506936	InclusiveOrExpression	LFH_BLOCK | NT_BLOCK		6506234	1		|			
ANR	6506937	Identifier	LFH_BLOCK		6506234	0					
ANR	6506938	Identifier	NT_BLOCK		6506234	1					
ANR	6506939	BreakStatement	break ;	1125:5:38337:38342	6506234	7	True				
ANR	6506940	IfStatement	if ( ! hb -> dwSize )		6506234	14					
ANR	6506941	Condition	! hb -> dwSize	1130:5:38367:38377	6506234	0	True				
ANR	6506942	UnaryOperationExpression	! hb -> dwSize		6506234	0					
ANR	6506943	UnaryOperator	!		6506234	0					
ANR	6506944	PtrMemberAccess	hb -> dwSize		6506234	1					
ANR	6506945	Identifier	hb		6506234	0					
ANR	6506946	Identifier	dwSize		6506234	1					
ANR	6506947	CompoundStatement		96:18:3292:3292	6506234	1					
ANR	6506948	GotoStatement	goto err ;	1131:2:38384:38392	6506234	0	True				
ANR	6506949	Identifier	err		6506234	0					
ANR	6506950	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	1133:1:38398:38429	6506234	15	True				
ANR	6506951	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6506234	0					
ANR	6506952	Callee	RtlDestroyQueryDebugBuffer		6506234	0					
ANR	6506953	Identifier	RtlDestroyQueryDebugBuffer		6506234	0					
ANR	6506954	ArgumentList	db		6506234	1					
ANR	6506955	Argument	db		6506234	0					
ANR	6506956	Identifier	db		6506234	0					
ANR	6506957	ExpressionStatement	CloseHandle ( h_proc )	1134:1:38432:38452	6506234	16	True				
ANR	6506958	CallExpression	CloseHandle ( h_proc )		6506234	0					
ANR	6506959	Callee	CloseHandle		6506234	0					
ANR	6506960	Identifier	CloseHandle		6506234	0					
ANR	6506961	ArgumentList	h_proc		6506234	1					
ANR	6506962	Argument	h_proc		6506234	0					
ANR	6506963	Identifier	h_proc		6506234	0					
ANR	6506964	ReturnStatement	return hb ;	1135:1:38455:38464	6506234	17	True				
ANR	6506965	Identifier	hb		6506234	0					
ANR	6506966	Label	err :	1136:0:38466:38469	6506234	18	True				
ANR	6506967	Identifier	err		6506234	0					
ANR	6506968	IfStatement	if ( h_proc )		6506234	19					
ANR	6506969	Condition	h_proc	1137:5:38476:38481	6506234	0	True				
ANR	6506970	Identifier	h_proc		6506234	0					
ANR	6506971	CompoundStatement		103:13:3396:3396	6506234	1					
ANR	6506972	ExpressionStatement	CloseHandle ( h_proc )	1138:2:38488:38508	6506234	0	True				
ANR	6506973	CallExpression	CloseHandle ( h_proc )		6506234	0					
ANR	6506974	Callee	CloseHandle		6506234	0					
ANR	6506975	Identifier	CloseHandle		6506234	0					
ANR	6506976	ArgumentList	h_proc		6506234	1					
ANR	6506977	Argument	h_proc		6506234	0					
ANR	6506978	Identifier	h_proc		6506234	0					
ANR	6506979	IfStatement	if ( db )		6506234	20					
ANR	6506980	Condition	db	1140:5:38518:38519	6506234	0	True				
ANR	6506981	Identifier	db		6506234	0					
ANR	6506982	CompoundStatement		106:9:3434:3434	6506234	1					
ANR	6506983	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	1141:2:38526:38557	6506234	0	True				
ANR	6506984	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6506234	0					
ANR	6506985	Callee	RtlDestroyQueryDebugBuffer		6506234	0					
ANR	6506986	Identifier	RtlDestroyQueryDebugBuffer		6506234	0					
ANR	6506987	ArgumentList	db		6506234	1					
ANR	6506988	Argument	db		6506234	0					
ANR	6506989	Identifier	db		6506234	0					
ANR	6506990	ExpressionStatement	free ( hb )	1143:1:38563:38572	6506234	21	True				
ANR	6506991	CallExpression	free ( hb )		6506234	0					
ANR	6506992	Callee	free		6506234	0					
ANR	6506993	Identifier	free		6506234	0					
ANR	6506994	ArgumentList	hb		6506234	1					
ANR	6506995	Argument	hb		6506234	0					
ANR	6506996	Identifier	hb		6506234	0					
ANR	6506997	ExpressionStatement	free ( extra )	1144:1:38575:38587	6506234	22	True				
ANR	6506998	CallExpression	free ( extra )		6506234	0					
ANR	6506999	Callee	free		6506234	0					
ANR	6507000	Identifier	free		6506234	0					
ANR	6507001	ArgumentList	extra		6506234	1					
ANR	6507002	Argument	extra		6506234	0					
ANR	6507003	Identifier	extra		6506234	0					
ANR	6507004	ReturnStatement	return NULL ;	1145:1:38590:38601	6506234	23	True				
ANR	6507005	Identifier	NULL		6506234	0					
ANR	6507006	ReturnType	static PHeapBlock		6506234	1					
ANR	6507007	Identifier	GetSingleBlock		6506234	2					
ANR	6507008	ParameterList	"RDebug * dbg , ut64 offset"		6506234	3					
ANR	6507009	Parameter	RDebug * dbg	1035:33:35061:35071	6506234	0	True				
ANR	6507010	ParameterType	RDebug *		6506234	0					
ANR	6507011	Identifier	dbg		6506234	1					
ANR	6507012	Parameter	ut64 offset	1035:46:35074:35084	6506234	1	True				
ANR	6507013	ParameterType	ut64		6506234	0					
ANR	6507014	Identifier	offset		6506234	1					
ANR	6507015	CFGEntryNode	ENTRY		6506234		True				
ANR	6507016	CFGExitNode	EXIT		6506234		True				
ANR	6507017	Symbol	InitHeapInfo		6506234						
ANR	6507018	Symbol	heapInfo -> count		6506234						
ANR	6507019	Symbol	hb -> extraInfo		6506234						
ANR	6507020	Symbol	LARGE_BLOCK		6506234						
ANR	6507021	Symbol	& largeEntry		6506234						
ANR	6507022	Symbol	UserBlocks		6506234						
ANR	6507023	Symbol	heapInfo		6506234						
ANR	6507024	Symbol	OpenProcess		6506234						
ANR	6507025	Symbol	& NtLFHKey		6506234						
ANR	6507026	Symbol	R_SYS_BITS_64		6506234						
ANR	6507027	Symbol	NULL		6506234						
ANR	6507028	Symbol	* hb		6506234						
ANR	6507029	Symbol	offset		6506234						
ANR	6507030	Symbol	HeapBlock		6506234						
ANR	6507031	Symbol	* db		6506234						
ANR	6507032	Symbol	entry . Flags		6506234						
ANR	6507033	Symbol	dbg		6506234						
ANR	6507034	Symbol	h_proc		6506234						
ANR	6507035	Symbol	db -> HeapInformation		6506234						
ANR	6507036	Symbol	heap . Base		6506234						
ANR	6507037	Symbol	hb -> dwFlags		6506234						
ANR	6507038	Symbol	ReadProcessMemory		6506234						
ANR	6507039	Symbol	R_NEW0		6506234						
ANR	6507040	Symbol	entry		6506234						
ANR	6507041	Symbol	entry . UnusedBytes		6506234						
ANR	6507042	Symbol	heapInfo -> heaps		6506234						
ANR	6507043	Symbol	* extra		6506234						
ANR	6507044	Symbol	& UserBlocks		6506234						
ANR	6507045	Symbol	tmpEntry		6506234						
ANR	6507046	Symbol	* ( ( ( WPARAM * ) & tmpEntry ) + 1 )		6506234						
ANR	6507047	Symbol	extra -> unusedBytes		6506234						
ANR	6507048	Symbol	BACKEND_BLOCK		6506234						
ANR	6507049	Symbol	& subsegment		6506234						
ANR	6507050	Symbol	NT_BLOCK		6506234						
ANR	6507051	Symbol	HeapBlockExtraInfo		6506234						
ANR	6507052	Symbol	DecodeLFHEntry		6506234						
ANR	6507053	Symbol	DecodeHeapEntry		6506234						
ANR	6507054	Symbol	dbg -> bits		6506234						
ANR	6507055	Symbol	PtrToInt		6506234						
ANR	6507056	Symbol	UserBlocks . SubSegment		6506234						
ANR	6507057	Symbol	hb -> dwSize		6506234						
ANR	6507058	Symbol	subsegment . BlockSize		6506234						
ANR	6507059	Symbol	NtLFHKey		6506234						
ANR	6507060	Symbol	* heapInfo		6506234						
ANR	6507061	Symbol	largeEntry . CommitSize		6506234						
ANR	6507062	Symbol	h . BaseAddress		6506234						
ANR	6507063	Symbol	extra		6506234						
ANR	6507064	Symbol	entryOffset		6506234						
ANR	6507065	Symbol	heap		6506234						
ANR	6507066	Symbol	largeEntry		6506234						
ANR	6507067	Symbol	* * heapInfo		6506234						
ANR	6507068	Symbol	GetSingleSegmentBlock		6506234						
ANR	6507069	Symbol	extra -> granularity		6506234						
ANR	6507070	Symbol	largeEntry . ReserveSize		6506234						
ANR	6507071	Symbol	false		6506234						
ANR	6507072	Symbol	h		6506234						
ANR	6507073	Symbol	i		6506234						
ANR	6507074	Symbol	* dbg		6506234						
ANR	6507075	Symbol	& h		6506234						
ANR	6507076	Symbol	* ( ( WPARAM * ) & tmpEntry )		6506234						
ANR	6507077	Symbol	heap . Granularity		6506234						
ANR	6507078	Symbol	subsegment		6506234						
ANR	6507079	Symbol	PDI_HEAPS		6506234						
ANR	6507080	Symbol	& entry		6506234						
ANR	6507081	Symbol	* i		6506234						
ANR	6507082	Symbol	PROCESS_VM_READ		6506234						
ANR	6507083	Symbol	dbg -> pid		6506234						
ANR	6507084	Symbol	* heapInfo -> heaps		6506234						
ANR	6507085	Symbol	is_segment_heap		6506234						
ANR	6507086	Symbol	& tmpEntry		6506234						
ANR	6507087	Symbol	hb -> dwAddress		6506234						
ANR	6507088	Symbol	userBlocksOffset		6506234						
ANR	6507089	Symbol	hb		6506234						
ANR	6507090	Symbol	FALSE		6506234						
ANR	6507091	Symbol	LFH_BLOCK		6506234						
ANR	6507092	Symbol	entry . Size		6506234						
ANR	6507093	Symbol	PROCESS_QUERY_INFORMATION		6506234						
ANR	6507094	Symbol	db		6506234						
ANR	6507095	Function	w32_list_heaps	1148:0:38606:39994							
ANR	6507096	FunctionDef	"w32_list_heaps (RCore * core , const char format)"		6507095	0					
ANR	6507097	CompoundStatement		1148:59:38665:39994	6507095	0					
ANR	6507098	IdentifierDeclStatement	ULONG pid = core -> dbg -> pid ;	1149:1:38668:38694	6507095	0	True				
ANR	6507099	IdentifierDecl	pid = core -> dbg -> pid		6507095	0					
ANR	6507100	IdentifierDeclType	ULONG		6507095	0					
ANR	6507101	Identifier	pid		6507095	1					
ANR	6507102	AssignmentExpression	pid = core -> dbg -> pid		6507095	2		=			
ANR	6507103	Identifier	pid		6507095	0					
ANR	6507104	PtrMemberAccess	core -> dbg -> pid		6507095	1					
ANR	6507105	PtrMemberAccess	core -> dbg		6507095	0					
ANR	6507106	Identifier	core		6507095	0					
ANR	6507107	Identifier	dbg		6507095	1					
ANR	6507108	Identifier	pid		6507095	1					
ANR	6507109	IdentifierDeclStatement	"PDEBUG_BUFFER db = InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS ) ;"	1150:1:38697:38769	6507095	1	True				
ANR	6507110	IdentifierDecl	"db = InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS )"		6507095	0					
ANR	6507111	IdentifierDeclType	PDEBUG_BUFFER		6507095	0					
ANR	6507112	Identifier	db		6507095	1					
ANR	6507113	AssignmentExpression	"db = InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS )"		6507095	2		=			
ANR	6507114	Identifier	db		6507095	0					
ANR	6507115	CallExpression	"InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS )"		6507095	1					
ANR	6507116	Callee	InitHeapInfo		6507095	0					
ANR	6507117	Identifier	InitHeapInfo		6507095	0					
ANR	6507118	ArgumentList	core -> dbg		6507095	1					
ANR	6507119	Argument	core -> dbg		6507095	0					
ANR	6507120	PtrMemberAccess	core -> dbg		6507095	0					
ANR	6507121	Identifier	core		6507095	0					
ANR	6507122	Identifier	dbg		6507095	1					
ANR	6507123	Argument	PDI_HEAPS | PDI_HEAP_BLOCKS		6507095	1					
ANR	6507124	InclusiveOrExpression	PDI_HEAPS | PDI_HEAP_BLOCKS		6507095	0		|			
ANR	6507125	Identifier	PDI_HEAPS		6507095	0					
ANR	6507126	Identifier	PDI_HEAP_BLOCKS		6507095	1					
ANR	6507127	IfStatement	if ( ! db )		6507095	2					
ANR	6507128	Condition	! db	1151:5:38776:38778	6507095	0	True				
ANR	6507129	UnaryOperationExpression	! db		6507095	0					
ANR	6507130	UnaryOperator	!		6507095	0					
ANR	6507131	Identifier	db		6507095	1					
ANR	6507132	CompoundStatement		5:2:119:154	6507095	1					
ANR	6507133	IdentifierDeclStatement	os_info * info = r_sys_get_osinfo ( ) ;	1152:2:38785:38820	6507095	0	True				
ANR	6507134	IdentifierDecl	* info = r_sys_get_osinfo ( )		6507095	0					
ANR	6507135	IdentifierDeclType	os_info *		6507095	0					
ANR	6507136	Identifier	info		6507095	1					
ANR	6507137	AssignmentExpression	* info = r_sys_get_osinfo ( )		6507095	2		=			
ANR	6507138	Identifier	info		6507095	0					
ANR	6507139	CallExpression	r_sys_get_osinfo ( )		6507095	1					
ANR	6507140	Callee	r_sys_get_osinfo		6507095	0					
ANR	6507141	Identifier	r_sys_get_osinfo		6507095	0					
ANR	6507142	ArgumentList			6507095	1					
ANR	6507143	IfStatement	if ( info -> major >= 10 )		6507095	1					
ANR	6507144	Condition	info -> major >= 10	1153:6:38828:38844	6507095	0	True				
ANR	6507145	RelationalExpression	info -> major >= 10		6507095	0		>=			
ANR	6507146	PtrMemberAccess	info -> major		6507095	0					
ANR	6507147	Identifier	info		6507095	0					
ANR	6507148	Identifier	major		6507095	1					
ANR	6507149	PrimaryExpression	10		6507095	1					
ANR	6507150	CompoundStatement		6:25:181:181	6507095	1					
ANR	6507151	ExpressionStatement	"db = GetHeapBlocks ( pid , core -> dbg )"	1154:3:38852:38887	6507095	0	True				
ANR	6507152	AssignmentExpression	"db = GetHeapBlocks ( pid , core -> dbg )"		6507095	0		=			
ANR	6507153	Identifier	db		6507095	0					
ANR	6507154	CallExpression	"GetHeapBlocks ( pid , core -> dbg )"		6507095	1					
ANR	6507155	Callee	GetHeapBlocks		6507095	0					
ANR	6507156	Identifier	GetHeapBlocks		6507095	0					
ANR	6507157	ArgumentList	pid		6507095	1					
ANR	6507158	Argument	pid		6507095	0					
ANR	6507159	Identifier	pid		6507095	0					
ANR	6507160	Argument	core -> dbg		6507095	1					
ANR	6507161	PtrMemberAccess	core -> dbg		6507095	0					
ANR	6507162	Identifier	core		6507095	0					
ANR	6507163	Identifier	dbg		6507095	1					
ANR	6507164	ExpressionStatement	free ( info )	1156:2:38895:38906	6507095	2	True				
ANR	6507165	CallExpression	free ( info )		6507095	0					
ANR	6507166	Callee	free		6507095	0					
ANR	6507167	Identifier	free		6507095	0					
ANR	6507168	ArgumentList	info		6507095	1					
ANR	6507169	Argument	info		6507095	0					
ANR	6507170	Identifier	info		6507095	0					
ANR	6507171	IfStatement	if ( ! db )		6507095	3					
ANR	6507172	Condition	! db	1157:6:38914:38916	6507095	0	True				
ANR	6507173	UnaryOperationExpression	! db		6507095	0					
ANR	6507174	UnaryOperator	!		6507095	0					
ANR	6507175	Identifier	db		6507095	1					
ANR	6507176	CompoundStatement		10:11:253:253	6507095	1					
ANR	6507177	ExpressionStatement	"eprintf ( ""Couldn't get heap info.\\n"" )"	1158:3:38924:38961	6507095	0	True				
ANR	6507178	CallExpression	"eprintf ( ""Couldn't get heap info.\\n"" )"		6507095	0					
ANR	6507179	Callee	eprintf		6507095	0					
ANR	6507180	Identifier	eprintf		6507095	0					
ANR	6507181	ArgumentList	"""Couldn't get heap info.\\n"""		6507095	1					
ANR	6507182	Argument	"""Couldn't get heap info.\\n"""		6507095	0					
ANR	6507183	PrimaryExpression	"""Couldn't get heap info.\\n"""		6507095	0					
ANR	6507184	ReturnStatement	return ;	1159:3:38966:38972	6507095	1	True				
ANR	6507185	IdentifierDeclStatement	PHeapInformation heapInfo = db -> HeapInformation ;	1162:1:38982:39029	6507095	3	True				
ANR	6507186	IdentifierDecl	heapInfo = db -> HeapInformation		6507095	0					
ANR	6507187	IdentifierDeclType	PHeapInformation		6507095	0					
ANR	6507188	Identifier	heapInfo		6507095	1					
ANR	6507189	AssignmentExpression	heapInfo = db -> HeapInformation		6507095	2		=			
ANR	6507190	Identifier	heapInfo		6507095	0					
ANR	6507191	PtrMemberAccess	db -> HeapInformation		6507095	1					
ANR	6507192	Identifier	db		6507095	0					
ANR	6507193	Identifier	HeapInformation		6507095	1					
ANR	6507194	ExpressionStatement	CHECK_INFO ( heapInfo )	1163:1:39032:39053	6507095	4	True				
ANR	6507195	CallExpression	CHECK_INFO ( heapInfo )		6507095	0					
ANR	6507196	Callee	CHECK_INFO		6507095	0					
ANR	6507197	Identifier	CHECK_INFO		6507095	0					
ANR	6507198	ArgumentList	heapInfo		6507095	1					
ANR	6507199	Argument	heapInfo		6507095	0					
ANR	6507200	Identifier	heapInfo		6507095	0					
ANR	6507201	IdentifierDeclStatement	int i ;	1164:1:39056:39061	6507095	5	True				
ANR	6507202	IdentifierDecl	i		6507095	0					
ANR	6507203	IdentifierDeclType	int		6507095	0					
ANR	6507204	Identifier	i		6507095	1					
ANR	6507205	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1165:1:39064:39082	6507095	6	True				
ANR	6507206	IdentifierDecl	* pj = pj_new ( )		6507095	0					
ANR	6507207	IdentifierDeclType	PJ *		6507095	0					
ANR	6507208	Identifier	pj		6507095	1					
ANR	6507209	AssignmentExpression	* pj = pj_new ( )		6507095	2		=			
ANR	6507210	Identifier	pj		6507095	0					
ANR	6507211	CallExpression	pj_new ( )		6507095	1					
ANR	6507212	Callee	pj_new		6507095	0					
ANR	6507213	Identifier	pj_new		6507095	0					
ANR	6507214	ArgumentList			6507095	1					
ANR	6507215	ExpressionStatement	pj_a ( pj )	1166:1:39085:39094	6507095	7	True				
ANR	6507216	CallExpression	pj_a ( pj )		6507095	0					
ANR	6507217	Callee	pj_a		6507095	0					
ANR	6507218	Identifier	pj_a		6507095	0					
ANR	6507219	ArgumentList	pj		6507095	1					
ANR	6507220	Argument	pj		6507095	0					
ANR	6507221	Identifier	pj		6507095	0					
ANR	6507222	ForStatement	for ( i = 0 ; i < heapInfo -> count ; i ++ )		6507095	8					
ANR	6507223	ForInit	i = 0 ;	1167:6:39102:39107	6507095	0	True				
ANR	6507224	AssignmentExpression	i = 0		6507095	0		=			
ANR	6507225	Identifier	i		6507095	0					
ANR	6507226	PrimaryExpression	0		6507095	1					
ANR	6507227	Condition	i < heapInfo -> count	1167:13:39109:39127	6507095	1	True				
ANR	6507228	RelationalExpression	i < heapInfo -> count		6507095	0		<			
ANR	6507229	Identifier	i		6507095	0					
ANR	6507230	PtrMemberAccess	heapInfo -> count		6507095	1					
ANR	6507231	Identifier	heapInfo		6507095	0					
ANR	6507232	Identifier	count		6507095	1					
ANR	6507233	PostIncDecOperationExpression	i ++	1167:34:39130:39132	6507095	2	True				
ANR	6507234	Identifier	i		6507095	0					
ANR	6507235	IncDec	++		6507095	1					
ANR	6507236	CompoundStatement		21:2:473:521	6507095	3					
ANR	6507237	IdentifierDeclStatement	DEBUG_HEAP_INFORMATION heap = heapInfo -> heaps [ i ] ;	1168:2:39139:39187	6507095	0	True				
ANR	6507238	IdentifierDecl	heap = heapInfo -> heaps [ i ]		6507095	0					
ANR	6507239	IdentifierDeclType	DEBUG_HEAP_INFORMATION		6507095	0					
ANR	6507240	Identifier	heap		6507095	1					
ANR	6507241	AssignmentExpression	heap = heapInfo -> heaps [ i ]		6507095	2		=			
ANR	6507242	Identifier	heap		6507095	0					
ANR	6507243	ArrayIndexing	heapInfo -> heaps [ i ]		6507095	1					
ANR	6507244	PtrMemberAccess	heapInfo -> heaps		6507095	0					
ANR	6507245	Identifier	heapInfo		6507095	0					
ANR	6507246	Identifier	heaps		6507095	1					
ANR	6507247	Identifier	i		6507095	1					
ANR	6507248	SwitchStatement	switch ( format )		6507095	1					
ANR	6507249	Condition	format	1169:10:39199:39204	6507095	0	True				
ANR	6507250	Identifier	format		6507095	0					
ANR	6507251	CompoundStatement		22:18:541:541	6507095	1					
ANR	6507252	Label	case 'j' :	1170:2:39211:39219	6507095	0	True				
ANR	6507253	ExpressionStatement	pj_o ( pj )	1171:3:39224:39233	6507095	1	True				
ANR	6507254	CallExpression	pj_o ( pj )		6507095	0					
ANR	6507255	Callee	pj_o		6507095	0					
ANR	6507256	Identifier	pj_o		6507095	0					
ANR	6507257	ArgumentList	pj		6507095	1					
ANR	6507258	Argument	pj		6507095	0					
ANR	6507259	Identifier	pj		6507095	0					
ANR	6507260	ExpressionStatement	"pj_kN ( pj , ""address"" , ( WPARAM ) heap . Base )"	1172:3:39238:39278	6507095	2	True				
ANR	6507261	CallExpression	"pj_kN ( pj , ""address"" , ( WPARAM ) heap . Base )"		6507095	0					
ANR	6507262	Callee	pj_kN		6507095	0					
ANR	6507263	Identifier	pj_kN		6507095	0					
ANR	6507264	ArgumentList	pj		6507095	1					
ANR	6507265	Argument	pj		6507095	0					
ANR	6507266	Identifier	pj		6507095	0					
ANR	6507267	Argument	"""address"""		6507095	1					
ANR	6507268	PrimaryExpression	"""address"""		6507095	0					
ANR	6507269	Argument	( WPARAM ) heap . Base		6507095	2					
ANR	6507270	CastExpression	( WPARAM ) heap . Base		6507095	0					
ANR	6507271	CastTarget	WPARAM		6507095	0					
ANR	6507272	MemberAccess	heap . Base		6507095	1					
ANR	6507273	Identifier	heap		6507095	0					
ANR	6507274	Identifier	Base		6507095	1					
ANR	6507275	ExpressionStatement	"pj_kN ( pj , ""count"" , ( WPARAM ) heap . BlockCount )"	1173:3:39283:39327	6507095	3	True				
ANR	6507276	CallExpression	"pj_kN ( pj , ""count"" , ( WPARAM ) heap . BlockCount )"		6507095	0					
ANR	6507277	Callee	pj_kN		6507095	0					
ANR	6507278	Identifier	pj_kN		6507095	0					
ANR	6507279	ArgumentList	pj		6507095	1					
ANR	6507280	Argument	pj		6507095	0					
ANR	6507281	Identifier	pj		6507095	0					
ANR	6507282	Argument	"""count"""		6507095	1					
ANR	6507283	PrimaryExpression	"""count"""		6507095	0					
ANR	6507284	Argument	( WPARAM ) heap . BlockCount		6507095	2					
ANR	6507285	CastExpression	( WPARAM ) heap . BlockCount		6507095	0					
ANR	6507286	CastTarget	WPARAM		6507095	0					
ANR	6507287	MemberAccess	heap . BlockCount		6507095	1					
ANR	6507288	Identifier	heap		6507095	0					
ANR	6507289	Identifier	BlockCount		6507095	1					
ANR	6507290	ExpressionStatement	"pj_kN ( pj , ""allocated"" , ( WPARAM ) heap . Allocated )"	1174:3:39332:39379	6507095	4	True				
ANR	6507291	CallExpression	"pj_kN ( pj , ""allocated"" , ( WPARAM ) heap . Allocated )"		6507095	0					
ANR	6507292	Callee	pj_kN		6507095	0					
ANR	6507293	Identifier	pj_kN		6507095	0					
ANR	6507294	ArgumentList	pj		6507095	1					
ANR	6507295	Argument	pj		6507095	0					
ANR	6507296	Identifier	pj		6507095	0					
ANR	6507297	Argument	"""allocated"""		6507095	1					
ANR	6507298	PrimaryExpression	"""allocated"""		6507095	0					
ANR	6507299	Argument	( WPARAM ) heap . Allocated		6507095	2					
ANR	6507300	CastExpression	( WPARAM ) heap . Allocated		6507095	0					
ANR	6507301	CastTarget	WPARAM		6507095	0					
ANR	6507302	MemberAccess	heap . Allocated		6507095	1					
ANR	6507303	Identifier	heap		6507095	0					
ANR	6507304	Identifier	Allocated		6507095	1					
ANR	6507305	ExpressionStatement	"pj_kN ( pj , ""commited"" , ( WPARAM ) heap . Committed )"	1175:3:39384:39430	6507095	5	True				
ANR	6507306	CallExpression	"pj_kN ( pj , ""commited"" , ( WPARAM ) heap . Committed )"		6507095	0					
ANR	6507307	Callee	pj_kN		6507095	0					
ANR	6507308	Identifier	pj_kN		6507095	0					
ANR	6507309	ArgumentList	pj		6507095	1					
ANR	6507310	Argument	pj		6507095	0					
ANR	6507311	Identifier	pj		6507095	0					
ANR	6507312	Argument	"""commited"""		6507095	1					
ANR	6507313	PrimaryExpression	"""commited"""		6507095	0					
ANR	6507314	Argument	( WPARAM ) heap . Committed		6507095	2					
ANR	6507315	CastExpression	( WPARAM ) heap . Committed		6507095	0					
ANR	6507316	CastTarget	WPARAM		6507095	0					
ANR	6507317	MemberAccess	heap . Committed		6507095	1					
ANR	6507318	Identifier	heap		6507095	0					
ANR	6507319	Identifier	Committed		6507095	1					
ANR	6507320	ExpressionStatement	pj_end ( pj )	1176:3:39435:39446	6507095	6	True				
ANR	6507321	CallExpression	pj_end ( pj )		6507095	0					
ANR	6507322	Callee	pj_end		6507095	0					
ANR	6507323	Identifier	pj_end		6507095	0					
ANR	6507324	ArgumentList	pj		6507095	1					
ANR	6507325	Argument	pj		6507095	0					
ANR	6507326	Identifier	pj		6507095	0					
ANR	6507327	BreakStatement	break ;	1177:3:39451:39456	6507095	7	True				
ANR	6507328	Label	default :	1178:2:39460:39467	6507095	8	True				
ANR	6507329	Identifier	default		6507095	0					
ANR	6507330	Statement	r_cons_printf	1179:3:39472:39484	6507095	9	True				
ANR	6507331	Statement	(	1179:17:39486:39486	6507095	10	True				
ANR	6507332	Statement	"""Heap @ 0x%08"""	1179:18:39487:39500	6507095	11	True				
ANR	6507333	Statement	PFMT64x	1179:32:39501:39507	6507095	12	True				
ANR	6507334	Statement	""":\\n"""	1179:39:39508:39512	6507095	13	True				
ANR	6507335	Statement	","	1179:44:39513:39513	6507095	14	True				
ANR	6507336	Statement	(	1179:46:39515:39515	6507095	15	True				
ANR	6507337	Statement	WPARAM	1179:47:39516:39521	6507095	16	True				
ANR	6507338	Statement	)	1179:53:39522:39522	6507095	17	True				
ANR	6507339	Statement	heap	1179:54:39523:39526	6507095	18	True				
ANR	6507340	Statement	.	1179:58:39527:39527	6507095	19	True				
ANR	6507341	Statement	Base	1179:59:39528:39531	6507095	20	True				
ANR	6507342	Statement	)	1179:63:39532:39532	6507095	21	True				
ANR	6507343	ExpressionStatement		1179:64:39533:39533	6507095	22	True				
ANR	6507344	Statement	r_cons_printf	1180:3:39538:39550	6507095	23	True				
ANR	6507345	Statement	(	1180:17:39552:39552	6507095	24	True				
ANR	6507346	Statement	"""\\tBlocks: %"""	1180:18:39553:39565	6507095	25	True				
ANR	6507347	Statement	PFMT64u	1180:31:39566:39572	6507095	26	True				
ANR	6507348	Statement	"""\\n"""	1180:38:39573:39576	6507095	27	True				
ANR	6507349	Statement	","	1180:42:39577:39577	6507095	28	True				
ANR	6507350	Statement	(	1180:44:39579:39579	6507095	29	True				
ANR	6507351	Statement	WPARAM	1180:45:39580:39585	6507095	30	True				
ANR	6507352	Statement	)	1180:51:39586:39586	6507095	31	True				
ANR	6507353	Statement	heap	1180:52:39587:39590	6507095	32	True				
ANR	6507354	Statement	.	1180:56:39591:39591	6507095	33	True				
ANR	6507355	Statement	BlockCount	1180:57:39592:39601	6507095	34	True				
ANR	6507356	Statement	)	1180:67:39602:39602	6507095	35	True				
ANR	6507357	ExpressionStatement		1180:68:39603:39603	6507095	36	True				
ANR	6507358	Statement	r_cons_printf	1181:3:39608:39620	6507095	37	True				
ANR	6507359	Statement	(	1181:17:39622:39622	6507095	38	True				
ANR	6507360	Statement	"""\\tAllocated: %"""	1181:18:39623:39638	6507095	39	True				
ANR	6507361	Statement	PFMT64u	1181:34:39639:39645	6507095	40	True				
ANR	6507362	Statement	"""\\n"""	1181:41:39646:39649	6507095	41	True				
ANR	6507363	Statement	","	1181:45:39650:39650	6507095	42	True				
ANR	6507364	Statement	(	1181:47:39652:39652	6507095	43	True				
ANR	6507365	Statement	WPARAM	1181:48:39653:39658	6507095	44	True				
ANR	6507366	Statement	)	1181:54:39659:39659	6507095	45	True				
ANR	6507367	Statement	heap	1181:55:39660:39663	6507095	46	True				
ANR	6507368	Statement	.	1181:59:39664:39664	6507095	47	True				
ANR	6507369	Statement	Allocated	1181:60:39665:39673	6507095	48	True				
ANR	6507370	Statement	)	1181:69:39674:39674	6507095	49	True				
ANR	6507371	ExpressionStatement		1181:70:39675:39675	6507095	50	True				
ANR	6507372	Statement	r_cons_printf	1182:3:39680:39692	6507095	51	True				
ANR	6507373	Statement	(	1182:17:39694:39694	6507095	52	True				
ANR	6507374	Statement	"""\\tCommited: %"""	1182:18:39695:39709	6507095	53	True				
ANR	6507375	Statement	PFMT64u	1182:33:39710:39716	6507095	54	True				
ANR	6507376	Statement	"""\\n"""	1182:40:39717:39720	6507095	55	True				
ANR	6507377	Statement	","	1182:44:39721:39721	6507095	56	True				
ANR	6507378	Statement	(	1182:46:39723:39723	6507095	57	True				
ANR	6507379	Statement	WPARAM	1182:47:39724:39729	6507095	58	True				
ANR	6507380	Statement	)	1182:53:39730:39730	6507095	59	True				
ANR	6507381	Statement	heap	1182:54:39731:39734	6507095	60	True				
ANR	6507382	Statement	.	1182:58:39735:39735	6507095	61	True				
ANR	6507383	Statement	Committed	1182:59:39736:39744	6507095	62	True				
ANR	6507384	Statement	)	1182:68:39745:39745	6507095	63	True				
ANR	6507385	ExpressionStatement		1182:69:39746:39746	6507095	64	True				
ANR	6507386	BreakStatement	break ;	1183:3:39751:39756	6507095	65	True				
ANR	6507387	IfStatement	if ( ! ( db -> InfoClassMask & PDI_HEAP_BLOCKS ) )		6507095	2					
ANR	6507388	Condition	! ( db -> InfoClassMask & PDI_HEAP_BLOCKS )	1185:6:39768:39805	6507095	0	True				
ANR	6507389	UnaryOperationExpression	! ( db -> InfoClassMask & PDI_HEAP_BLOCKS )		6507095	0					
ANR	6507390	UnaryOperator	!		6507095	0					
ANR	6507391	BitAndExpression	db -> InfoClassMask & PDI_HEAP_BLOCKS		6507095	1		&			
ANR	6507392	PtrMemberAccess	db -> InfoClassMask		6507095	0					
ANR	6507393	Identifier	db		6507095	0					
ANR	6507394	Identifier	InfoClassMask		6507095	1					
ANR	6507395	Identifier	PDI_HEAP_BLOCKS		6507095	1					
ANR	6507396	CompoundStatement		38:46:1142:1142	6507095	1					
ANR	6507397	ExpressionStatement	free_extra_info ( & heap )	1186:3:39813:39836	6507095	0	True				
ANR	6507398	CallExpression	free_extra_info ( & heap )		6507095	0					
ANR	6507399	Callee	free_extra_info		6507095	0					
ANR	6507400	Identifier	free_extra_info		6507095	0					
ANR	6507401	ArgumentList	& heap		6507095	1					
ANR	6507402	Argument	& heap		6507095	0					
ANR	6507403	UnaryOperationExpression	& heap		6507095	0					
ANR	6507404	UnaryOperator	&		6507095	0					
ANR	6507405	Identifier	heap		6507095	1					
ANR	6507406	ExpressionStatement	R_FREE ( heap . Blocks )	1187:3:39841:39861	6507095	1	True				
ANR	6507407	CallExpression	R_FREE ( heap . Blocks )		6507095	0					
ANR	6507408	Callee	R_FREE		6507095	0					
ANR	6507409	Identifier	R_FREE		6507095	0					
ANR	6507410	ArgumentList	heap . Blocks		6507095	1					
ANR	6507411	Argument	heap . Blocks		6507095	0					
ANR	6507412	MemberAccess	heap . Blocks		6507095	0					
ANR	6507413	Identifier	heap		6507095	0					
ANR	6507414	Identifier	Blocks		6507095	1					
ANR	6507415	IfStatement	if ( format == 'j' )		6507095	9					
ANR	6507416	Condition	format == 'j'	1190:5:39875:39887	6507095	0	True				
ANR	6507417	EqualityExpression	format == 'j'		6507095	0		==			
ANR	6507418	Identifier	format		6507095	0					
ANR	6507419	PrimaryExpression	'j'		6507095	1					
ANR	6507420	CompoundStatement		43:20:1224:1224	6507095	1					
ANR	6507421	ExpressionStatement	pj_end ( pj )	1191:2:39894:39905	6507095	0	True				
ANR	6507422	CallExpression	pj_end ( pj )		6507095	0					
ANR	6507423	Callee	pj_end		6507095	0					
ANR	6507424	Identifier	pj_end		6507095	0					
ANR	6507425	ArgumentList	pj		6507095	1					
ANR	6507426	Argument	pj		6507095	0					
ANR	6507427	Identifier	pj		6507095	0					
ANR	6507428	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1192:2:39909:39940	6507095	1	True				
ANR	6507429	CallExpression	r_cons_println ( pj_string ( pj ) )		6507095	0					
ANR	6507430	Callee	r_cons_println		6507095	0					
ANR	6507431	Identifier	r_cons_println		6507095	0					
ANR	6507432	ArgumentList	pj_string ( pj )		6507095	1					
ANR	6507433	Argument	pj_string ( pj )		6507095	0					
ANR	6507434	CallExpression	pj_string ( pj )		6507095	0					
ANR	6507435	Callee	pj_string		6507095	0					
ANR	6507436	Identifier	pj_string		6507095	0					
ANR	6507437	ArgumentList	pj		6507095	1					
ANR	6507438	Argument	pj		6507095	0					
ANR	6507439	Identifier	pj		6507095	0					
ANR	6507440	ExpressionStatement	pj_free ( pj )	1194:1:39946:39958	6507095	10	True				
ANR	6507441	CallExpression	pj_free ( pj )		6507095	0					
ANR	6507442	Callee	pj_free		6507095	0					
ANR	6507443	Identifier	pj_free		6507095	0					
ANR	6507444	ArgumentList	pj		6507095	1					
ANR	6507445	Argument	pj		6507095	0					
ANR	6507446	Identifier	pj		6507095	0					
ANR	6507447	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	1195:1:39961:39992	6507095	11	True				
ANR	6507448	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6507095	0					
ANR	6507449	Callee	RtlDestroyQueryDebugBuffer		6507095	0					
ANR	6507450	Identifier	RtlDestroyQueryDebugBuffer		6507095	0					
ANR	6507451	ArgumentList	db		6507095	1					
ANR	6507452	Argument	db		6507095	0					
ANR	6507453	Identifier	db		6507095	0					
ANR	6507454	ReturnType	static void		6507095	1					
ANR	6507455	Identifier	w32_list_heaps		6507095	2					
ANR	6507456	ParameterList	"RCore * core , const char format"		6507095	3					
ANR	6507457	Parameter	RCore * core	1148:27:38633:38643	6507095	0	True				
ANR	6507458	ParameterType	RCore *		6507095	0					
ANR	6507459	Identifier	core		6507095	1					
ANR	6507460	Parameter	const char format	1148:40:38646:38662	6507095	1	True				
ANR	6507461	ParameterType	const char		6507095	0					
ANR	6507462	Identifier	format		6507095	1					
ANR	6507463	CFGEntryNode	ENTRY		6507095		True				
ANR	6507464	CFGExitNode	EXIT		6507095		True				
ANR	6507465	Symbol	InitHeapInfo		6507095						
ANR	6507466	Symbol	pj_string		6507095						
ANR	6507467	Symbol	* core		6507095						
ANR	6507468	Symbol	pid		6507095						
ANR	6507469	Symbol	info -> major		6507095						
ANR	6507470	Symbol	PDI_HEAP_BLOCKS		6507095						
ANR	6507471	Symbol	heapInfo -> count		6507095						
ANR	6507472	Symbol	* heapInfo		6507095						
ANR	6507473	Symbol	heap . Committed		6507095						
ANR	6507474	Symbol	heapInfo		6507095						
ANR	6507475	Symbol	heap . BlockCount		6507095						
ANR	6507476	Symbol	heap		6507095						
ANR	6507477	Symbol	* * core		6507095						
ANR	6507478	Symbol	* * heapInfo		6507095						
ANR	6507479	Symbol	info		6507095						
ANR	6507480	Symbol	* db		6507095						
ANR	6507481	Symbol	heap . Blocks		6507095						
ANR	6507482	Symbol	format		6507095						
ANR	6507483	Symbol	i		6507095						
ANR	6507484	Symbol	r_sys_get_osinfo		6507095						
ANR	6507485	Symbol	db -> HeapInformation		6507095						
ANR	6507486	Symbol	heap . Base		6507095						
ANR	6507487	Symbol	& heap		6507095						
ANR	6507488	Symbol	db -> InfoClassMask		6507095						
ANR	6507489	Symbol	GetHeapBlocks		6507095						
ANR	6507490	Symbol	core		6507095						
ANR	6507491	Symbol	PDI_HEAPS		6507095						
ANR	6507492	Symbol	heapInfo -> heaps		6507095						
ANR	6507493	Symbol	* i		6507095						
ANR	6507494	Symbol	* heapInfo -> heaps		6507095						
ANR	6507495	Symbol	heap . Allocated		6507095						
ANR	6507496	Symbol	pj		6507095						
ANR	6507497	Symbol	pj_new		6507095						
ANR	6507498	Symbol	* info		6507095						
ANR	6507499	Symbol	core -> dbg -> pid		6507095						
ANR	6507500	Symbol	* core -> dbg		6507095						
ANR	6507501	Symbol	db		6507095						
ANR	6507502	Symbol	core -> dbg		6507095						
ANR	6507503	Function	w32_list_heaps_blocks	1198:0:39997:42524							
ANR	6507504	FunctionDef	"w32_list_heaps_blocks (RCore * core , const char format)"		6507503	0					
ANR	6507505	CompoundStatement		1198:66:40063:42524	6507503	0					
ANR	6507506	IdentifierDeclStatement	DWORD pid = core -> dbg -> pid ;	1199:1:40066:40092	6507503	0	True				
ANR	6507507	IdentifierDecl	pid = core -> dbg -> pid		6507503	0					
ANR	6507508	IdentifierDeclType	DWORD		6507503	0					
ANR	6507509	Identifier	pid		6507503	1					
ANR	6507510	AssignmentExpression	pid = core -> dbg -> pid		6507503	2		=			
ANR	6507511	Identifier	pid		6507503	0					
ANR	6507512	PtrMemberAccess	core -> dbg -> pid		6507503	1					
ANR	6507513	PtrMemberAccess	core -> dbg		6507503	0					
ANR	6507514	Identifier	core		6507503	0					
ANR	6507515	Identifier	dbg		6507503	1					
ANR	6507516	Identifier	pid		6507503	1					
ANR	6507517	IdentifierDeclStatement	os_info * info = r_sys_get_osinfo ( ) ;	1200:1:40095:40130	6507503	1	True				
ANR	6507518	IdentifierDecl	* info = r_sys_get_osinfo ( )		6507503	0					
ANR	6507519	IdentifierDeclType	os_info *		6507503	0					
ANR	6507520	Identifier	info		6507503	1					
ANR	6507521	AssignmentExpression	* info = r_sys_get_osinfo ( )		6507503	2		=			
ANR	6507522	Identifier	info		6507503	0					
ANR	6507523	CallExpression	r_sys_get_osinfo ( )		6507503	1					
ANR	6507524	Callee	r_sys_get_osinfo		6507503	0					
ANR	6507525	Identifier	r_sys_get_osinfo		6507503	0					
ANR	6507526	ArgumentList			6507503	1					
ANR	6507527	IdentifierDeclStatement	PDEBUG_BUFFER db ;	1201:1:40133:40149	6507503	2	True				
ANR	6507528	IdentifierDecl	db		6507503	0					
ANR	6507529	IdentifierDeclType	PDEBUG_BUFFER		6507503	0					
ANR	6507530	Identifier	db		6507503	1					
ANR	6507531	IfStatement	if ( info -> major >= 10 )		6507503	3					
ANR	6507532	Condition	info -> major >= 10	1202:5:40156:40172	6507503	0	True				
ANR	6507533	RelationalExpression	info -> major >= 10		6507503	0		>=			
ANR	6507534	PtrMemberAccess	info -> major		6507503	0					
ANR	6507535	Identifier	info		6507503	0					
ANR	6507536	Identifier	major		6507503	1					
ANR	6507537	PrimaryExpression	10		6507503	1					
ANR	6507538	CompoundStatement		5:24:111:111	6507503	1					
ANR	6507539	ExpressionStatement	"db = GetHeapBlocks ( pid , core -> dbg )"	1203:2:40179:40214	6507503	0	True				
ANR	6507540	AssignmentExpression	"db = GetHeapBlocks ( pid , core -> dbg )"		6507503	0		=			
ANR	6507541	Identifier	db		6507503	0					
ANR	6507542	CallExpression	"GetHeapBlocks ( pid , core -> dbg )"		6507503	1					
ANR	6507543	Callee	GetHeapBlocks		6507503	0					
ANR	6507544	Identifier	GetHeapBlocks		6507503	0					
ANR	6507545	ArgumentList	pid		6507503	1					
ANR	6507546	Argument	pid		6507503	0					
ANR	6507547	Identifier	pid		6507503	0					
ANR	6507548	Argument	core -> dbg		6507503	1					
ANR	6507549	PtrMemberAccess	core -> dbg		6507503	0					
ANR	6507550	Identifier	core		6507503	0					
ANR	6507551	Identifier	dbg		6507503	1					
ANR	6507552	ElseStatement	else		6507503	0					
ANR	6507553	CompoundStatement		7:8:160:160	6507503	0					
ANR	6507554	ExpressionStatement	"db = InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS )"	1205:2:40228:40286	6507503	0	True				
ANR	6507555	AssignmentExpression	"db = InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS )"		6507503	0		=			
ANR	6507556	Identifier	db		6507503	0					
ANR	6507557	CallExpression	"InitHeapInfo ( core -> dbg , PDI_HEAPS | PDI_HEAP_BLOCKS )"		6507503	1					
ANR	6507558	Callee	InitHeapInfo		6507503	0					
ANR	6507559	Identifier	InitHeapInfo		6507503	0					
ANR	6507560	ArgumentList	core -> dbg		6507503	1					
ANR	6507561	Argument	core -> dbg		6507503	0					
ANR	6507562	PtrMemberAccess	core -> dbg		6507503	0					
ANR	6507563	Identifier	core		6507503	0					
ANR	6507564	Identifier	dbg		6507503	1					
ANR	6507565	Argument	PDI_HEAPS | PDI_HEAP_BLOCKS		6507503	1					
ANR	6507566	InclusiveOrExpression	PDI_HEAPS | PDI_HEAP_BLOCKS		6507503	0		|			
ANR	6507567	Identifier	PDI_HEAPS		6507503	0					
ANR	6507568	Identifier	PDI_HEAP_BLOCKS		6507503	1					
ANR	6507569	ExpressionStatement	free ( info )	1207:1:40292:40303	6507503	4	True				
ANR	6507570	CallExpression	free ( info )		6507503	0					
ANR	6507571	Callee	free		6507503	0					
ANR	6507572	Identifier	free		6507503	0					
ANR	6507573	ArgumentList	info		6507503	1					
ANR	6507574	Argument	info		6507503	0					
ANR	6507575	Identifier	info		6507503	0					
ANR	6507576	IfStatement	if ( ! db )		6507503	5					
ANR	6507577	Condition	! db	1208:5:40310:40312	6507503	0	True				
ANR	6507578	UnaryOperationExpression	! db		6507503	0					
ANR	6507579	UnaryOperator	!		6507503	0					
ANR	6507580	Identifier	db		6507503	1					
ANR	6507581	CompoundStatement		11:10:251:251	6507503	1					
ANR	6507582	ExpressionStatement	"eprintf ( ""Couldn't get heap info.\\n"" )"	1209:2:40319:40356	6507503	0	True				
ANR	6507583	CallExpression	"eprintf ( ""Couldn't get heap info.\\n"" )"		6507503	0					
ANR	6507584	Callee	eprintf		6507503	0					
ANR	6507585	Identifier	eprintf		6507503	0					
ANR	6507586	ArgumentList	"""Couldn't get heap info.\\n"""		6507503	1					
ANR	6507587	Argument	"""Couldn't get heap info.\\n"""		6507503	0					
ANR	6507588	PrimaryExpression	"""Couldn't get heap info.\\n"""		6507503	0					
ANR	6507589	ReturnStatement	return ;	1210:2:40360:40366	6507503	1	True				
ANR	6507590	IdentifierDeclStatement	PHeapInformation heapInfo = db -> HeapInformation ;	1212:1:40372:40419	6507503	6	True				
ANR	6507591	IdentifierDecl	heapInfo = db -> HeapInformation		6507503	0					
ANR	6507592	IdentifierDeclType	PHeapInformation		6507503	0					
ANR	6507593	Identifier	heapInfo		6507503	1					
ANR	6507594	AssignmentExpression	heapInfo = db -> HeapInformation		6507503	2		=			
ANR	6507595	Identifier	heapInfo		6507503	0					
ANR	6507596	PtrMemberAccess	db -> HeapInformation		6507503	1					
ANR	6507597	Identifier	db		6507503	0					
ANR	6507598	Identifier	HeapInformation		6507503	1					
ANR	6507599	IdentifierDeclStatement	HeapBlock * block = malloc ( sizeof ( HeapBlock ) ) ;	1213:1:40422:40468	6507503	7	True				
ANR	6507600	IdentifierDecl	* block = malloc ( sizeof ( HeapBlock ) )		6507503	0					
ANR	6507601	IdentifierDeclType	HeapBlock *		6507503	0					
ANR	6507602	Identifier	block		6507503	1					
ANR	6507603	AssignmentExpression	* block = malloc ( sizeof ( HeapBlock ) )		6507503	2		=			
ANR	6507604	Identifier	block		6507503	0					
ANR	6507605	CallExpression	malloc ( sizeof ( HeapBlock ) )		6507503	1					
ANR	6507606	Callee	malloc		6507503	0					
ANR	6507607	Identifier	malloc		6507503	0					
ANR	6507608	ArgumentList	sizeof ( HeapBlock )		6507503	1					
ANR	6507609	Argument	sizeof ( HeapBlock )		6507503	0					
ANR	6507610	SizeofExpression	sizeof ( HeapBlock )		6507503	0					
ANR	6507611	Sizeof	sizeof		6507503	0					
ANR	6507612	SizeofOperand	HeapBlock		6507503	1					
ANR	6507613	ExpressionStatement	CHECK_INFO ( heapInfo )	1214:1:40471:40492	6507503	8	True				
ANR	6507614	CallExpression	CHECK_INFO ( heapInfo )		6507503	0					
ANR	6507615	Callee	CHECK_INFO		6507503	0					
ANR	6507616	Identifier	CHECK_INFO		6507503	0					
ANR	6507617	ArgumentList	heapInfo		6507503	1					
ANR	6507618	Argument	heapInfo		6507503	0					
ANR	6507619	Identifier	heapInfo		6507503	0					
ANR	6507620	IdentifierDeclStatement	int i ;	1215:1:40495:40500	6507503	9	True				
ANR	6507621	IdentifierDecl	i		6507503	0					
ANR	6507622	IdentifierDeclType	int		6507503	0					
ANR	6507623	Identifier	i		6507503	1					
ANR	6507624	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1216:1:40503:40521	6507503	10	True				
ANR	6507625	IdentifierDecl	* pj = pj_new ( )		6507503	0					
ANR	6507626	IdentifierDeclType	PJ *		6507503	0					
ANR	6507627	Identifier	pj		6507503	1					
ANR	6507628	AssignmentExpression	* pj = pj_new ( )		6507503	2		=			
ANR	6507629	Identifier	pj		6507503	0					
ANR	6507630	CallExpression	pj_new ( )		6507503	1					
ANR	6507631	Callee	pj_new		6507503	0					
ANR	6507632	Identifier	pj_new		6507503	0					
ANR	6507633	ArgumentList			6507503	1					
ANR	6507634	ExpressionStatement	pj_a ( pj )	1217:1:40524:40533	6507503	11	True				
ANR	6507635	CallExpression	pj_a ( pj )		6507503	0					
ANR	6507636	Callee	pj_a		6507503	0					
ANR	6507637	Identifier	pj_a		6507503	0					
ANR	6507638	ArgumentList	pj		6507503	1					
ANR	6507639	Argument	pj		6507503	0					
ANR	6507640	Identifier	pj		6507503	0					
ANR	6507641	ForStatement	for ( i = 0 ; i < heapInfo -> count ; i ++ )		6507503	12					
ANR	6507642	ForInit	i = 0 ;	1218:6:40541:40546	6507503	0	True				
ANR	6507643	AssignmentExpression	i = 0		6507503	0		=			
ANR	6507644	Identifier	i		6507503	0					
ANR	6507645	PrimaryExpression	0		6507503	1					
ANR	6507646	Condition	i < heapInfo -> count	1218:13:40548:40566	6507503	1	True				
ANR	6507647	RelationalExpression	i < heapInfo -> count		6507503	0		<			
ANR	6507648	Identifier	i		6507503	0					
ANR	6507649	PtrMemberAccess	heapInfo -> count		6507503	1					
ANR	6507650	Identifier	heapInfo		6507503	0					
ANR	6507651	Identifier	count		6507503	1					
ANR	6507652	PostIncDecOperationExpression	i ++	1218:34:40569:40571	6507503	2	True				
ANR	6507653	Identifier	i		6507503	0					
ANR	6507654	IncDec	++		6507503	1					
ANR	6507655	CompoundStatement		38:2:958:968	6507503	3					
ANR	6507656	IdentifierDeclStatement	bool go = true ;	1219:2:40578:40592	6507503	0	True				
ANR	6507657	IdentifierDecl	go = true		6507503	0					
ANR	6507658	IdentifierDeclType	bool		6507503	0					
ANR	6507659	Identifier	go		6507503	1					
ANR	6507660	AssignmentExpression	go = true		6507503	2		=			
ANR	6507661	Identifier	true		6507503	0					
ANR	6507662	Identifier	true		6507503	1					
ANR	6507663	SwitchStatement	switch ( format )		6507503	1					
ANR	6507664	Condition	format	1220:10:40604:40609	6507503	0	True				
ANR	6507665	Identifier	format		6507503	0					
ANR	6507666	CompoundStatement		23:18:548:548	6507503	1					
ANR	6507667	Label	case 'f' :	1221:2:40616:40624	6507503	0	True				
ANR	6507668	IfStatement	if ( heapInfo -> heaps [ i ] . BlockCount > 50000 )		6507503	1					
ANR	6507669	Condition	heapInfo -> heaps [ i ] . BlockCount > 50000	1222:7:40633:40669	6507503	0	True				
ANR	6507670	RelationalExpression	heapInfo -> heaps [ i ] . BlockCount > 50000		6507503	0		>			
ANR	6507671	MemberAccess	heapInfo -> heaps [ i ] . BlockCount		6507503	0					
ANR	6507672	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	0					
ANR	6507673	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6507674	Identifier	heapInfo		6507503	0					
ANR	6507675	Identifier	heaps		6507503	1					
ANR	6507676	Identifier	i		6507503	1					
ANR	6507677	Identifier	BlockCount		6507503	1					
ANR	6507678	PrimaryExpression	50000		6507503	1					
ANR	6507679	CompoundStatement		25:46:608:608	6507503	1					
ANR	6507680	Statement	go	1223:4:40678:40679	6507503	0	True				
ANR	6507681	Statement	=	1223:7:40681:40681	6507503	1	True				
ANR	6507682	Statement	r_cons_yesno	1223:9:40683:40694	6507503	2	True				
ANR	6507683	Statement	(	1223:22:40696:40696	6507503	3	True				
ANR	6507684	Statement	'n'	1223:23:40697:40699	6507503	4	True				
ANR	6507685	Statement	","	1223:26:40700:40700	6507503	5	True				
ANR	6507686	Statement	"""Are you sure you want to add %"""	1223:28:40702:40733	6507503	6	True				
ANR	6507687	Statement	PFMT64u	1223:60:40734:40740	6507503	7	True				
ANR	6507688	Statement	""" flags? (y/N)"""	1223:67:40741:40755	6507503	8	True				
ANR	6507689	Statement	","	1223:82:40756:40756	6507503	9	True				
ANR	6507690	Statement	heapInfo	1223:84:40758:40765	6507503	10	True				
ANR	6507691	Statement	->	1223:92:40766:40767	6507503	11	True				
ANR	6507692	Statement	heaps	1223:94:40768:40772	6507503	12	True				
ANR	6507693	Statement	[	1223:99:40773:40773	6507503	13	True				
ANR	6507694	Statement	i	1223:100:40774:40774	6507503	14	True				
ANR	6507695	Statement	]	1223:101:40775:40775	6507503	15	True				
ANR	6507696	Statement	.	1223:102:40776:40776	6507503	16	True				
ANR	6507697	Statement	BlockCount	1223:103:40777:40786	6507503	17	True				
ANR	6507698	Statement	)	1223:113:40787:40787	6507503	18	True				
ANR	6507699	ExpressionStatement		1223:114:40788:40788	6507503	19	True				
ANR	6507700	BreakStatement	break ;	1225:3:40798:40803	6507503	2	True				
ANR	6507701	Label	case 'j' :	1226:2:40807:40815	6507503	3	True				
ANR	6507702	ExpressionStatement	pj_o ( pj )	1227:3:40820:40829	6507503	4	True				
ANR	6507703	CallExpression	pj_o ( pj )		6507503	0					
ANR	6507704	Callee	pj_o		6507503	0					
ANR	6507705	Identifier	pj_o		6507503	0					
ANR	6507706	ArgumentList	pj		6507503	1					
ANR	6507707	Argument	pj		6507503	0					
ANR	6507708	Identifier	pj		6507503	0					
ANR	6507709	ExpressionStatement	"pj_kN ( pj , ""heap"" , ( WPARAM ) heapInfo -> heaps [ i ] . Base )"	1228:3:40834:40885	6507503	5	True				
ANR	6507710	CallExpression	"pj_kN ( pj , ""heap"" , ( WPARAM ) heapInfo -> heaps [ i ] . Base )"		6507503	0					
ANR	6507711	Callee	pj_kN		6507503	0					
ANR	6507712	Identifier	pj_kN		6507503	0					
ANR	6507713	ArgumentList	pj		6507503	1					
ANR	6507714	Argument	pj		6507503	0					
ANR	6507715	Identifier	pj		6507503	0					
ANR	6507716	Argument	"""heap"""		6507503	1					
ANR	6507717	PrimaryExpression	"""heap"""		6507503	0					
ANR	6507718	Argument	( WPARAM ) heapInfo -> heaps [ i ] . Base		6507503	2					
ANR	6507719	CastExpression	( WPARAM ) heapInfo -> heaps [ i ] . Base		6507503	0					
ANR	6507720	CastTarget	WPARAM		6507503	0					
ANR	6507721	MemberAccess	heapInfo -> heaps [ i ] . Base		6507503	1					
ANR	6507722	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	0					
ANR	6507723	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6507724	Identifier	heapInfo		6507503	0					
ANR	6507725	Identifier	heaps		6507503	1					
ANR	6507726	Identifier	i		6507503	1					
ANR	6507727	Identifier	Base		6507503	1					
ANR	6507728	ExpressionStatement	"pj_k ( pj , ""blocks"" )"	1229:3:40890:40909	6507503	6	True				
ANR	6507729	CallExpression	"pj_k ( pj , ""blocks"" )"		6507503	0					
ANR	6507730	Callee	pj_k		6507503	0					
ANR	6507731	Identifier	pj_k		6507503	0					
ANR	6507732	ArgumentList	pj		6507503	1					
ANR	6507733	Argument	pj		6507503	0					
ANR	6507734	Identifier	pj		6507503	0					
ANR	6507735	Argument	"""blocks"""		6507503	1					
ANR	6507736	PrimaryExpression	"""blocks"""		6507503	0					
ANR	6507737	ExpressionStatement	pj_a ( pj )	1230:3:40914:40923	6507503	7	True				
ANR	6507738	CallExpression	pj_a ( pj )		6507503	0					
ANR	6507739	Callee	pj_a		6507503	0					
ANR	6507740	Identifier	pj_a		6507503	0					
ANR	6507741	ArgumentList	pj		6507503	1					
ANR	6507742	Argument	pj		6507503	0					
ANR	6507743	Identifier	pj		6507503	0					
ANR	6507744	BreakStatement	break ;	1231:3:40928:40933	6507503	8	True				
ANR	6507745	Label	default :	1232:2:40937:40944	6507503	9	True				
ANR	6507746	Identifier	default		6507503	0					
ANR	6507747	Statement	r_cons_printf	1233:3:40949:40961	6507503	10	True				
ANR	6507748	Statement	(	1233:17:40963:40963	6507503	11	True				
ANR	6507749	Statement	"""Heap @ 0x%"""	1233:18:40964:40975	6507503	12	True				
ANR	6507750	Statement	PFMT64x	1233:30:40976:40982	6507503	13	True				
ANR	6507751	Statement	""":\\n"""	1233:37:40983:40987	6507503	14	True				
ANR	6507752	Statement	","	1233:42:40988:40988	6507503	15	True				
ANR	6507753	Statement	heapInfo	1233:44:40990:40997	6507503	16	True				
ANR	6507754	Statement	->	1233:52:40998:40999	6507503	17	True				
ANR	6507755	Statement	heaps	1233:54:41000:41004	6507503	18	True				
ANR	6507756	Statement	[	1233:59:41005:41005	6507503	19	True				
ANR	6507757	Statement	i	1233:60:41006:41006	6507503	20	True				
ANR	6507758	Statement	]	1233:61:41007:41007	6507503	21	True				
ANR	6507759	Statement	.	1233:62:41008:41008	6507503	22	True				
ANR	6507760	Statement	Base	1233:63:41009:41012	6507503	23	True				
ANR	6507761	Statement	)	1233:67:41013:41013	6507503	24	True				
ANR	6507762	ExpressionStatement		1233:68:41014:41014	6507503	25	True				
ANR	6507763	IdentifierDeclStatement	char * type ;	1235:2:41022:41032	6507503	2	True				
ANR	6507764	IdentifierDecl	* type		6507503	0					
ANR	6507765	IdentifierDeclType	char *		6507503	0					
ANR	6507766	Identifier	type		6507503	1					
ANR	6507767	IfStatement	"if ( GetFirstHeapBlock ( & heapInfo -> heaps [ i ] , block ) & go )"		6507503	3					
ANR	6507768	Condition	"GetFirstHeapBlock ( & heapInfo -> heaps [ i ] , block ) & go"	1236:6:41040:41090	6507503	0	True				
ANR	6507769	BitAndExpression	"GetFirstHeapBlock ( & heapInfo -> heaps [ i ] , block ) & go"		6507503	0		&			
ANR	6507770	CallExpression	"GetFirstHeapBlock ( & heapInfo -> heaps [ i ] , block )"		6507503	0					
ANR	6507771	Callee	GetFirstHeapBlock		6507503	0					
ANR	6507772	Identifier	GetFirstHeapBlock		6507503	0					
ANR	6507773	ArgumentList	& heapInfo -> heaps [ i ]		6507503	1					
ANR	6507774	Argument	& heapInfo -> heaps [ i ]		6507503	0					
ANR	6507775	UnaryOperationExpression	& heapInfo -> heaps [ i ]		6507503	0					
ANR	6507776	UnaryOperator	&		6507503	0					
ANR	6507777	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	1					
ANR	6507778	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6507779	Identifier	heapInfo		6507503	0					
ANR	6507780	Identifier	heaps		6507503	1					
ANR	6507781	Identifier	i		6507503	1					
ANR	6507782	Argument	block		6507503	1					
ANR	6507783	Identifier	block		6507503	0					
ANR	6507784	Identifier	go		6507503	1					
ANR	6507785	CompoundStatement		39:59:1029:1029	6507503	1					
ANR	6507786	DoStatement	do		6507503	0					
ANR	6507787	CompoundStatement		45:4:1120:1230	6507503	0					
ANR	6507788	ExpressionStatement	type = get_type ( block -> dwFlags )	1238:4:41107:41139	6507503	0	True				
ANR	6507789	AssignmentExpression	type = get_type ( block -> dwFlags )		6507503	0		=			
ANR	6507790	Identifier	type		6507503	0					
ANR	6507791	CallExpression	get_type ( block -> dwFlags )		6507503	1					
ANR	6507792	Callee	get_type		6507503	0					
ANR	6507793	Identifier	get_type		6507503	0					
ANR	6507794	ArgumentList	block -> dwFlags		6507503	1					
ANR	6507795	Argument	block -> dwFlags		6507503	0					
ANR	6507796	PtrMemberAccess	block -> dwFlags		6507503	0					
ANR	6507797	Identifier	block		6507503	0					
ANR	6507798	Identifier	dwFlags		6507503	1					
ANR	6507799	IfStatement	if ( ! type )		6507503	1					
ANR	6507800	Condition	! type	1239:8:41149:41153	6507503	0	True				
ANR	6507801	UnaryOperationExpression	! type		6507503	0					
ANR	6507802	UnaryOperator	!		6507503	0					
ANR	6507803	Identifier	type		6507503	1					
ANR	6507804	CompoundStatement		42:15:1092:1092	6507503	1					
ANR	6507805	ExpressionStatement	"type = """""	1240:5:41163:41172	6507503	0	True				
ANR	6507806	AssignmentExpression	"type = """""		6507503	0		=			
ANR	6507807	Identifier	type		6507503	0					
ANR	6507808	PrimaryExpression	""""""		6507503	1					
ANR	6507809	IdentifierDeclStatement	unsigned short granularity = block -> extraInfo ? block -> extraInfo -> granularity : heapInfo -> heaps [ i ] . Granularity ;	1242:4:41184:41294	6507503	2	True				
ANR	6507810	IdentifierDecl	granularity = block -> extraInfo ? block -> extraInfo -> granularity : heapInfo -> heaps [ i ] . Granularity		6507503	0					
ANR	6507811	IdentifierDeclType	unsigned short		6507503	0					
ANR	6507812	Identifier	granularity		6507503	1					
ANR	6507813	AssignmentExpression	granularity = block -> extraInfo ? block -> extraInfo -> granularity : heapInfo -> heaps [ i ] . Granularity		6507503	2		=			
ANR	6507814	Identifier	granularity		6507503	0					
ANR	6507815	ConditionalExpression	block -> extraInfo ? block -> extraInfo -> granularity : heapInfo -> heaps [ i ] . Granularity		6507503	1					
ANR	6507816	Condition	block -> extraInfo		6507503	0					
ANR	6507817	PtrMemberAccess	block -> extraInfo		6507503	0					
ANR	6507818	Identifier	block		6507503	0					
ANR	6507819	Identifier	extraInfo		6507503	1					
ANR	6507820	PtrMemberAccess	block -> extraInfo -> granularity		6507503	1					
ANR	6507821	PtrMemberAccess	block -> extraInfo		6507503	0					
ANR	6507822	Identifier	block		6507503	0					
ANR	6507823	Identifier	extraInfo		6507503	1					
ANR	6507824	Identifier	granularity		6507503	1					
ANR	6507825	MemberAccess	heapInfo -> heaps [ i ] . Granularity		6507503	2					
ANR	6507826	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	0					
ANR	6507827	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6507828	Identifier	heapInfo		6507503	0					
ANR	6507829	Identifier	heaps		6507503	1					
ANR	6507830	Identifier	i		6507503	1					
ANR	6507831	Identifier	Granularity		6507503	1					
ANR	6507832	SwitchStatement	switch ( format )		6507503	3					
ANR	6507833	Condition	format	1243:12:41308:41313	6507503	0	True				
ANR	6507834	Identifier	format		6507503	0					
ANR	6507835	CompoundStatement		46:20:1252:1252	6507503	1					
ANR	6507836	Label	case 'f' :	1244:4:41322:41330	6507503	0	True				
ANR	6507837	CompoundStatement		49:5:1279:1327	6507503	1					
ANR	6507838	IdentifierDeclStatement	ut64 addr = ( ut64 ) block -> dwAddress - granularity ;	1246:5:41343:41391	6507503	0	True				
ANR	6507839	IdentifierDecl	addr = ( ut64 ) block -> dwAddress - granularity		6507503	0					
ANR	6507840	IdentifierDeclType	ut64		6507503	0					
ANR	6507841	Identifier	addr		6507503	1					
ANR	6507842	AssignmentExpression	addr = ( ut64 ) block -> dwAddress - granularity		6507503	2		=			
ANR	6507843	Identifier	addr		6507503	0					
ANR	6507844	AdditiveExpression	( ut64 ) block -> dwAddress - granularity		6507503	1		-			
ANR	6507845	CastExpression	( ut64 ) block -> dwAddress		6507503	0					
ANR	6507846	CastTarget	ut64		6507503	0					
ANR	6507847	PtrMemberAccess	block -> dwAddress		6507503	1					
ANR	6507848	Identifier	block		6507503	0					
ANR	6507849	Identifier	dwAddress		6507503	1					
ANR	6507850	Identifier	granularity		6507503	1					
ANR	6507851	Statement	char	1247:5:41398:41401	6507503	1	True				
ANR	6507852	Statement	*	1247:10:41403:41403	6507503	2	True				
ANR	6507853	Statement	name	1247:11:41404:41407	6507503	3	True				
ANR	6507854	Statement	=	1247:16:41409:41409	6507503	4	True				
ANR	6507855	Statement	r_str_newf	1247:18:41411:41420	6507503	5	True				
ANR	6507856	Statement	(	1247:29:41422:41422	6507503	6	True				
ANR	6507857	Statement	"""alloc.%"""	1247:30:41423:41431	6507503	7	True				
ANR	6507858	Statement	PFMT64x	1247:39:41432:41438	6507503	8	True				
ANR	6507859	Statement	""""""	1247:46:41439:41440	6507503	9	True				
ANR	6507860	Statement	","	1247:48:41441:41441	6507503	10	True				
ANR	6507861	Statement	addr	1247:50:41443:41446	6507503	11	True				
ANR	6507862	Statement	)	1247:54:41447:41447	6507503	12	True				
ANR	6507863	ExpressionStatement		1247:55:41448:41448	6507503	13	True				
ANR	6507864	ExpressionStatement	"r_flag_set ( core -> flags , name , addr , block -> dwSize )"	1248:5:41455:41506	6507503	14	True				
ANR	6507865	CallExpression	"r_flag_set ( core -> flags , name , addr , block -> dwSize )"		6507503	0					
ANR	6507866	Callee	r_flag_set		6507503	0					
ANR	6507867	Identifier	r_flag_set		6507503	0					
ANR	6507868	ArgumentList	core -> flags		6507503	1					
ANR	6507869	Argument	core -> flags		6507503	0					
ANR	6507870	PtrMemberAccess	core -> flags		6507503	0					
ANR	6507871	Identifier	core		6507503	0					
ANR	6507872	Identifier	flags		6507503	1					
ANR	6507873	Argument	name		6507503	1					
ANR	6507874	Identifier	name		6507503	0					
ANR	6507875	Argument	addr		6507503	2					
ANR	6507876	Identifier	addr		6507503	0					
ANR	6507877	Argument	block -> dwSize		6507503	3					
ANR	6507878	PtrMemberAccess	block -> dwSize		6507503	0					
ANR	6507879	Identifier	block		6507503	0					
ANR	6507880	Identifier	dwSize		6507503	1					
ANR	6507881	ExpressionStatement	free ( name )	1249:5:41513:41524	6507503	15	True				
ANR	6507882	CallExpression	free ( name )		6507503	0					
ANR	6507883	Callee	free		6507503	0					
ANR	6507884	Identifier	free		6507503	0					
ANR	6507885	ArgumentList	name		6507503	1					
ANR	6507886	Argument	name		6507503	0					
ANR	6507887	Identifier	name		6507503	0					
ANR	6507888	BreakStatement	break ;	1250:5:41531:41536	6507503	16	True				
ANR	6507889	Label	case 'j' :	1252:4:41548:41556	6507503	2	True				
ANR	6507890	ExpressionStatement	pj_o ( pj )	1253:5:41563:41572	6507503	3	True				
ANR	6507891	CallExpression	pj_o ( pj )		6507503	0					
ANR	6507892	Callee	pj_o		6507503	0					
ANR	6507893	Identifier	pj_o		6507503	0					
ANR	6507894	ArgumentList	pj		6507503	1					
ANR	6507895	Argument	pj		6507503	0					
ANR	6507896	Identifier	pj		6507503	0					
ANR	6507897	ExpressionStatement	"pj_kN ( pj , ""address"" , ( ut64 ) block -> dwAddress - granularity )"	1254:5:41579:41638	6507503	4	True				
ANR	6507898	CallExpression	"pj_kN ( pj , ""address"" , ( ut64 ) block -> dwAddress - granularity )"		6507503	0					
ANR	6507899	Callee	pj_kN		6507503	0					
ANR	6507900	Identifier	pj_kN		6507503	0					
ANR	6507901	ArgumentList	pj		6507503	1					
ANR	6507902	Argument	pj		6507503	0					
ANR	6507903	Identifier	pj		6507503	0					
ANR	6507904	Argument	"""address"""		6507503	1					
ANR	6507905	PrimaryExpression	"""address"""		6507503	0					
ANR	6507906	Argument	( ut64 ) block -> dwAddress - granularity		6507503	2					
ANR	6507907	AdditiveExpression	( ut64 ) block -> dwAddress - granularity		6507503	0		-			
ANR	6507908	CastExpression	( ut64 ) block -> dwAddress		6507503	0					
ANR	6507909	CastTarget	ut64		6507503	0					
ANR	6507910	PtrMemberAccess	block -> dwAddress		6507503	1					
ANR	6507911	Identifier	block		6507503	0					
ANR	6507912	Identifier	dwAddress		6507503	1					
ANR	6507913	Identifier	granularity		6507503	1					
ANR	6507914	ExpressionStatement	"pj_kN ( pj , ""data_address"" , ( ut64 ) block -> dwAddress )"	1255:5:41645:41695	6507503	5	True				
ANR	6507915	CallExpression	"pj_kN ( pj , ""data_address"" , ( ut64 ) block -> dwAddress )"		6507503	0					
ANR	6507916	Callee	pj_kN		6507503	0					
ANR	6507917	Identifier	pj_kN		6507503	0					
ANR	6507918	ArgumentList	pj		6507503	1					
ANR	6507919	Argument	pj		6507503	0					
ANR	6507920	Identifier	pj		6507503	0					
ANR	6507921	Argument	"""data_address"""		6507503	1					
ANR	6507922	PrimaryExpression	"""data_address"""		6507503	0					
ANR	6507923	Argument	( ut64 ) block -> dwAddress		6507503	2					
ANR	6507924	CastExpression	( ut64 ) block -> dwAddress		6507503	0					
ANR	6507925	CastTarget	ut64		6507503	0					
ANR	6507926	PtrMemberAccess	block -> dwAddress		6507503	1					
ANR	6507927	Identifier	block		6507503	0					
ANR	6507928	Identifier	dwAddress		6507503	1					
ANR	6507929	ExpressionStatement	"pj_kN ( pj , ""size"" , block -> dwSize )"	1256:5:41702:41735	6507503	6	True				
ANR	6507930	CallExpression	"pj_kN ( pj , ""size"" , block -> dwSize )"		6507503	0					
ANR	6507931	Callee	pj_kN		6507503	0					
ANR	6507932	Identifier	pj_kN		6507503	0					
ANR	6507933	ArgumentList	pj		6507503	1					
ANR	6507934	Argument	pj		6507503	0					
ANR	6507935	Identifier	pj		6507503	0					
ANR	6507936	Argument	"""size"""		6507503	1					
ANR	6507937	PrimaryExpression	"""size"""		6507503	0					
ANR	6507938	Argument	block -> dwSize		6507503	2					
ANR	6507939	PtrMemberAccess	block -> dwSize		6507503	0					
ANR	6507940	Identifier	block		6507503	0					
ANR	6507941	Identifier	dwSize		6507503	1					
ANR	6507942	ExpressionStatement	"pj_ks ( pj , ""type"" , type )"	1257:5:41742:41766	6507503	7	True				
ANR	6507943	CallExpression	"pj_ks ( pj , ""type"" , type )"		6507503	0					
ANR	6507944	Callee	pj_ks		6507503	0					
ANR	6507945	Identifier	pj_ks		6507503	0					
ANR	6507946	ArgumentList	pj		6507503	1					
ANR	6507947	Argument	pj		6507503	0					
ANR	6507948	Identifier	pj		6507503	0					
ANR	6507949	Argument	"""type"""		6507503	1					
ANR	6507950	PrimaryExpression	"""type"""		6507503	0					
ANR	6507951	Argument	type		6507503	2					
ANR	6507952	Identifier	type		6507503	0					
ANR	6507953	ExpressionStatement	pj_end ( pj )	1258:5:41773:41784	6507503	8	True				
ANR	6507954	CallExpression	pj_end ( pj )		6507503	0					
ANR	6507955	Callee	pj_end		6507503	0					
ANR	6507956	Identifier	pj_end		6507503	0					
ANR	6507957	ArgumentList	pj		6507503	1					
ANR	6507958	Argument	pj		6507503	0					
ANR	6507959	Identifier	pj		6507503	0					
ANR	6507960	BreakStatement	break ;	1259:5:41791:41796	6507503	9	True				
ANR	6507961	Label	default :	1260:4:41802:41809	6507503	10	True				
ANR	6507962	Identifier	default		6507503	0					
ANR	6507963	Statement	r_cons_printf	1261:5:41816:41828	6507503	11	True				
ANR	6507964	Statement	(	1261:19:41830:41830	6507503	12	True				
ANR	6507965	Statement	"""\\tBlock @ 0x%"""	1261:20:41831:41845	6507503	13	True				
ANR	6507966	Statement	PFMT64x	1261:35:41846:41852	6507503	14	True				
ANR	6507967	Statement	""" %s:\\n"""	1261:42:41853:41860	6507503	15	True				
ANR	6507968	Statement	","	1261:50:41861:41861	6507503	16	True				
ANR	6507969	Statement	(	1261:52:41863:41863	6507503	17	True				
ANR	6507970	Statement	ut64	1261:53:41864:41867	6507503	18	True				
ANR	6507971	Statement	)	1261:57:41868:41868	6507503	19	True				
ANR	6507972	Statement	block	1261:58:41869:41873	6507503	20	True				
ANR	6507973	Statement	->	1261:63:41874:41875	6507503	21	True				
ANR	6507974	Statement	dwAddress	1261:65:41876:41884	6507503	22	True				
ANR	6507975	Statement	-	1261:75:41886:41886	6507503	23	True				
ANR	6507976	Statement	granularity	1261:77:41888:41898	6507503	24	True				
ANR	6507977	Statement	","	1261:88:41899:41899	6507503	25	True				
ANR	6507978	Statement	type	1261:90:41901:41904	6507503	26	True				
ANR	6507979	Statement	)	1261:94:41905:41905	6507503	27	True				
ANR	6507980	ExpressionStatement		1261:95:41906:41906	6507503	28	True				
ANR	6507981	Statement	r_cons_printf	1262:5:41913:41925	6507503	29	True				
ANR	6507982	Statement	(	1262:19:41927:41927	6507503	30	True				
ANR	6507983	Statement	"""\\t\\tSize 0x%"""	1262:20:41928:41941	6507503	31	True				
ANR	6507984	Statement	PFMT64x	1262:34:41942:41948	6507503	32	True				
ANR	6507985	Statement	"""\\n"""	1262:41:41949:41952	6507503	33	True				
ANR	6507986	Statement	","	1262:45:41953:41953	6507503	34	True				
ANR	6507987	Statement	(	1262:47:41955:41955	6507503	35	True				
ANR	6507988	Statement	ut64	1262:48:41956:41959	6507503	36	True				
ANR	6507989	Statement	)	1262:52:41960:41960	6507503	37	True				
ANR	6507990	Statement	block	1262:53:41961:41965	6507503	38	True				
ANR	6507991	Statement	->	1262:58:41966:41967	6507503	39	True				
ANR	6507992	Statement	dwSize	1262:60:41968:41973	6507503	40	True				
ANR	6507993	Statement	)	1262:66:41974:41974	6507503	41	True				
ANR	6507994	ExpressionStatement		1262:67:41975:41975	6507503	42	True				
ANR	6507995	Statement	r_cons_printf	1263:5:41982:41994	6507503	43	True				
ANR	6507996	Statement	(	1263:19:41996:41996	6507503	44	True				
ANR	6507997	Statement	"""\\t\\tData address @ 0x%"""	1263:20:41997:42020	6507503	45	True				
ANR	6507998	Statement	PFMT64x	1263:44:42021:42027	6507503	46	True				
ANR	6507999	Statement	"""\\n"""	1263:51:42028:42031	6507503	47	True				
ANR	6508000	Statement	","	1263:55:42032:42032	6507503	48	True				
ANR	6508001	Statement	(	1263:57:42034:42034	6507503	49	True				
ANR	6508002	Statement	ut64	1263:58:42035:42038	6507503	50	True				
ANR	6508003	Statement	)	1263:62:42039:42039	6507503	51	True				
ANR	6508004	Statement	block	1263:63:42040:42044	6507503	52	True				
ANR	6508005	Statement	->	1263:68:42045:42046	6507503	53	True				
ANR	6508006	Statement	dwAddress	1263:70:42047:42055	6507503	54	True				
ANR	6508007	Statement	)	1263:79:42056:42056	6507503	55	True				
ANR	6508008	ExpressionStatement		1263:80:42057:42057	6507503	56	True				
ANR	6508009	BreakStatement	break ;	1264:5:42064:42069	6507503	57	True				
ANR	6508010	Condition	"GetNextHeapBlock ( & heapInfo -> heaps [ i ] , block )"	1266:12:42089:42133	6507503	1	True				
ANR	6508011	CallExpression	"GetNextHeapBlock ( & heapInfo -> heaps [ i ] , block )"		6507503	0					
ANR	6508012	Callee	GetNextHeapBlock		6507503	0					
ANR	6508013	Identifier	GetNextHeapBlock		6507503	0					
ANR	6508014	ArgumentList	& heapInfo -> heaps [ i ]		6507503	1					
ANR	6508015	Argument	& heapInfo -> heaps [ i ]		6507503	0					
ANR	6508016	UnaryOperationExpression	& heapInfo -> heaps [ i ]		6507503	0					
ANR	6508017	UnaryOperator	&		6507503	0					
ANR	6508018	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	1					
ANR	6508019	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6508020	Identifier	heapInfo		6507503	0					
ANR	6508021	Identifier	heaps		6507503	1					
ANR	6508022	Identifier	i		6507503	1					
ANR	6508023	Argument	block		6507503	1					
ANR	6508024	Identifier	block		6507503	0					
ANR	6508025	IfStatement	if ( format == 'j' )		6507503	4					
ANR	6508026	Condition	format == 'j'	1268:6:42147:42159	6507503	0	True				
ANR	6508027	EqualityExpression	format == 'j'		6507503	0		==			
ANR	6508028	Identifier	format		6507503	0					
ANR	6508029	PrimaryExpression	'j'		6507503	1					
ANR	6508030	CompoundStatement		71:21:2098:2098	6507503	1					
ANR	6508031	ExpressionStatement	pj_end ( pj )	1269:3:42167:42178	6507503	0	True				
ANR	6508032	CallExpression	pj_end ( pj )		6507503	0					
ANR	6508033	Callee	pj_end		6507503	0					
ANR	6508034	Identifier	pj_end		6507503	0					
ANR	6508035	ArgumentList	pj		6507503	1					
ANR	6508036	Argument	pj		6507503	0					
ANR	6508037	Identifier	pj		6507503	0					
ANR	6508038	ExpressionStatement	pj_end ( pj )	1270:3:42183:42194	6507503	1	True				
ANR	6508039	CallExpression	pj_end ( pj )		6507503	0					
ANR	6508040	Callee	pj_end		6507503	0					
ANR	6508041	Identifier	pj_end		6507503	0					
ANR	6508042	ArgumentList	pj		6507503	1					
ANR	6508043	Argument	pj		6507503	0					
ANR	6508044	Identifier	pj		6507503	0					
ANR	6508045	IfStatement	if ( ! ( db -> InfoClassMask & PDI_HEAP_BLOCKS ) )		6507503	5					
ANR	6508046	Condition	! ( db -> InfoClassMask & PDI_HEAP_BLOCKS )	1272:6:42206:42243	6507503	0	True				
ANR	6508047	UnaryOperationExpression	! ( db -> InfoClassMask & PDI_HEAP_BLOCKS )		6507503	0					
ANR	6508048	UnaryOperator	!		6507503	0					
ANR	6508049	BitAndExpression	db -> InfoClassMask & PDI_HEAP_BLOCKS		6507503	1		&			
ANR	6508050	PtrMemberAccess	db -> InfoClassMask		6507503	0					
ANR	6508051	Identifier	db		6507503	0					
ANR	6508052	Identifier	InfoClassMask		6507503	1					
ANR	6508053	Identifier	PDI_HEAP_BLOCKS		6507503	1					
ANR	6508054	CompoundStatement		75:46:2182:2182	6507503	1					
ANR	6508055	ExpressionStatement	free_extra_info ( & heapInfo -> heaps [ i ] )	1274:3:42315:42352	6507503	0	True				
ANR	6508056	CallExpression	free_extra_info ( & heapInfo -> heaps [ i ] )		6507503	0					
ANR	6508057	Callee	free_extra_info		6507503	0					
ANR	6508058	Identifier	free_extra_info		6507503	0					
ANR	6508059	ArgumentList	& heapInfo -> heaps [ i ]		6507503	1					
ANR	6508060	Argument	& heapInfo -> heaps [ i ]		6507503	0					
ANR	6508061	UnaryOperationExpression	& heapInfo -> heaps [ i ]		6507503	0					
ANR	6508062	UnaryOperator	&		6507503	0					
ANR	6508063	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	1					
ANR	6508064	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6508065	Identifier	heapInfo		6507503	0					
ANR	6508066	Identifier	heaps		6507503	1					
ANR	6508067	Identifier	i		6507503	1					
ANR	6508068	ExpressionStatement	R_FREE ( heapInfo -> heaps [ i ] . Blocks )	1275:3:42357:42391	6507503	1	True				
ANR	6508069	CallExpression	R_FREE ( heapInfo -> heaps [ i ] . Blocks )		6507503	0					
ANR	6508070	Callee	R_FREE		6507503	0					
ANR	6508071	Identifier	R_FREE		6507503	0					
ANR	6508072	ArgumentList	heapInfo -> heaps [ i ] . Blocks		6507503	1					
ANR	6508073	Argument	heapInfo -> heaps [ i ] . Blocks		6507503	0					
ANR	6508074	MemberAccess	heapInfo -> heaps [ i ] . Blocks		6507503	0					
ANR	6508075	ArrayIndexing	heapInfo -> heaps [ i ]		6507503	0					
ANR	6508076	PtrMemberAccess	heapInfo -> heaps		6507503	0					
ANR	6508077	Identifier	heapInfo		6507503	0					
ANR	6508078	Identifier	heaps		6507503	1					
ANR	6508079	Identifier	i		6507503	1					
ANR	6508080	Identifier	Blocks		6507503	1					
ANR	6508081	IfStatement	if ( format == 'j' )		6507503	13					
ANR	6508082	Condition	format == 'j'	1278:5:42405:42417	6507503	0	True				
ANR	6508083	EqualityExpression	format == 'j'		6507503	0		==			
ANR	6508084	Identifier	format		6507503	0					
ANR	6508085	PrimaryExpression	'j'		6507503	1					
ANR	6508086	CompoundStatement		81:20:2356:2356	6507503	1					
ANR	6508087	ExpressionStatement	pj_end ( pj )	1279:2:42424:42435	6507503	0	True				
ANR	6508088	CallExpression	pj_end ( pj )		6507503	0					
ANR	6508089	Callee	pj_end		6507503	0					
ANR	6508090	Identifier	pj_end		6507503	0					
ANR	6508091	ArgumentList	pj		6507503	1					
ANR	6508092	Argument	pj		6507503	0					
ANR	6508093	Identifier	pj		6507503	0					
ANR	6508094	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1280:2:42439:42470	6507503	1	True				
ANR	6508095	CallExpression	r_cons_println ( pj_string ( pj ) )		6507503	0					
ANR	6508096	Callee	r_cons_println		6507503	0					
ANR	6508097	Identifier	r_cons_println		6507503	0					
ANR	6508098	ArgumentList	pj_string ( pj )		6507503	1					
ANR	6508099	Argument	pj_string ( pj )		6507503	0					
ANR	6508100	CallExpression	pj_string ( pj )		6507503	0					
ANR	6508101	Callee	pj_string		6507503	0					
ANR	6508102	Identifier	pj_string		6507503	0					
ANR	6508103	ArgumentList	pj		6507503	1					
ANR	6508104	Argument	pj		6507503	0					
ANR	6508105	Identifier	pj		6507503	0					
ANR	6508106	ExpressionStatement	pj_free ( pj )	1282:1:42476:42488	6507503	14	True				
ANR	6508107	CallExpression	pj_free ( pj )		6507503	0					
ANR	6508108	Callee	pj_free		6507503	0					
ANR	6508109	Identifier	pj_free		6507503	0					
ANR	6508110	ArgumentList	pj		6507503	1					
ANR	6508111	Argument	pj		6507503	0					
ANR	6508112	Identifier	pj		6507503	0					
ANR	6508113	ExpressionStatement	RtlDestroyQueryDebugBuffer ( db )	1283:1:42491:42522	6507503	15	True				
ANR	6508114	CallExpression	RtlDestroyQueryDebugBuffer ( db )		6507503	0					
ANR	6508115	Callee	RtlDestroyQueryDebugBuffer		6507503	0					
ANR	6508116	Identifier	RtlDestroyQueryDebugBuffer		6507503	0					
ANR	6508117	ArgumentList	db		6507503	1					
ANR	6508118	Argument	db		6507503	0					
ANR	6508119	Identifier	db		6507503	0					
ANR	6508120	ReturnType	static void		6507503	1					
ANR	6508121	Identifier	w32_list_heaps_blocks		6507503	2					
ANR	6508122	ParameterList	"RCore * core , const char format"		6507503	3					
ANR	6508123	Parameter	RCore * core	1198:34:40031:40041	6507503	0	True				
ANR	6508124	ParameterType	RCore *		6507503	0					
ANR	6508125	Identifier	core		6507503	1					
ANR	6508126	Parameter	const char format	1198:47:40044:40060	6507503	1	True				
ANR	6508127	ParameterType	const char		6507503	0					
ANR	6508128	Identifier	format		6507503	1					
ANR	6508129	CFGEntryNode	ENTRY		6507503		True				
ANR	6508130	CFGExitNode	EXIT		6507503		True				
ANR	6508131	Symbol	InitHeapInfo		6507503						
ANR	6508132	Symbol	pj_string		6507503						
ANR	6508133	Symbol	pid		6507503						
ANR	6508134	Symbol	info -> major		6507503						
ANR	6508135	Symbol	heapInfo -> count		6507503						
ANR	6508136	Symbol	type		6507503						
ANR	6508137	Symbol	heapInfo -> heaps [ i ] . Granularity		6507503						
ANR	6508138	Symbol	heapInfo		6507503						
ANR	6508139	Symbol	block		6507503						
ANR	6508140	Symbol	info		6507503						
ANR	6508141	Symbol	* db		6507503						
ANR	6508142	Symbol	format		6507503						
ANR	6508143	Symbol	r_sys_get_osinfo		6507503						
ANR	6508144	Symbol	db -> HeapInformation		6507503						
ANR	6508145	Symbol	* block -> extraInfo		6507503						
ANR	6508146	Symbol	db -> InfoClassMask		6507503						
ANR	6508147	Symbol	core		6507503						
ANR	6508148	Symbol	heapInfo -> heaps		6507503						
ANR	6508149	Symbol	granularity		6507503						
ANR	6508150	Symbol	true		6507503						
ANR	6508151	Symbol	block -> dwSize		6507503						
ANR	6508152	Symbol	name		6507503						
ANR	6508153	Symbol	heapInfo -> heaps [ i ] . BlockCount		6507503						
ANR	6508154	Symbol	* core -> dbg		6507503						
ANR	6508155	Symbol	block -> extraInfo		6507503						
ANR	6508156	Symbol	* core		6507503						
ANR	6508157	Symbol	PDI_HEAP_BLOCKS		6507503						
ANR	6508158	Symbol	* heapInfo		6507503						
ANR	6508159	Symbol	heapInfo -> heaps [ i ] . Base		6507503						
ANR	6508160	Symbol	get_type		6507503						
ANR	6508161	Symbol	block -> dwAddress		6507503						
ANR	6508162	Symbol	GetFirstHeapBlock		6507503						
ANR	6508163	Symbol	block -> extraInfo -> granularity		6507503						
ANR	6508164	Symbol	addr		6507503						
ANR	6508165	Symbol	* * core		6507503						
ANR	6508166	Symbol	* * heapInfo		6507503						
ANR	6508167	Symbol	malloc		6507503						
ANR	6508168	Symbol	go		6507503						
ANR	6508169	Symbol	i		6507503						
ANR	6508170	Symbol	core -> flags		6507503						
ANR	6508171	Symbol	GetHeapBlocks		6507503						
ANR	6508172	Symbol	* block		6507503						
ANR	6508173	Symbol	GetNextHeapBlock		6507503						
ANR	6508174	Symbol	PDI_HEAPS		6507503						
ANR	6508175	Symbol	* i		6507503						
ANR	6508176	Symbol	* heapInfo -> heaps		6507503						
ANR	6508177	Symbol	* * block		6507503						
ANR	6508178	Symbol	pj		6507503						
ANR	6508179	Symbol	pj_new		6507503						
ANR	6508180	Symbol	block -> dwFlags		6507503						
ANR	6508181	Symbol	heapInfo -> heaps [ i ] . Blocks		6507503						
ANR	6508182	Symbol	* info		6507503						
ANR	6508183	Symbol	core -> dbg -> pid		6507503						
ANR	6508184	Symbol	db		6507503						
ANR	6508185	Symbol	core -> dbg		6507503						
ANR	6508186	DeclStmt									
ANR	6508187	Decl							const char	const char * [ ]	help_msg
ANR	6508188	DeclStmt									
ANR	6508189	Decl							const char	const char * [ ]	help_msg_block
ANR	6508190	Function	cmd_debug_map_heap_block_win	1301:0:42964:44280							
ANR	6508191	FunctionDef	"cmd_debug_map_heap_block_win (RCore * core , const char * input)"		6508190	0					
ANR	6508192	CompoundStatement		1301:73:43037:44280	6508190	0					
ANR	6508193	IdentifierDeclStatement	"char * space = strchr ( input , ' ' ) ;"	1302:1:43040:43073	6508190	0	True				
ANR	6508194	IdentifierDecl	"* space = strchr ( input , ' ' )"		6508190	0					
ANR	6508195	IdentifierDeclType	char *		6508190	0					
ANR	6508196	Identifier	space		6508190	1					
ANR	6508197	AssignmentExpression	"* space = strchr ( input , ' ' )"		6508190	2		=			
ANR	6508198	Identifier	space		6508190	0					
ANR	6508199	CallExpression	"strchr ( input , ' ' )"		6508190	1					
ANR	6508200	Callee	strchr		6508190	0					
ANR	6508201	Identifier	strchr		6508190	0					
ANR	6508202	ArgumentList	input		6508190	1					
ANR	6508203	Argument	input		6508190	0					
ANR	6508204	Identifier	input		6508190	0					
ANR	6508205	Argument	' '		6508190	1					
ANR	6508206	PrimaryExpression	' '		6508190	0					
ANR	6508207	IdentifierDeclStatement	ut64 off = 0 ;	1303:1:43076:43088	6508190	1	True				
ANR	6508208	IdentifierDecl	off = 0		6508190	0					
ANR	6508209	IdentifierDeclType	ut64		6508190	0					
ANR	6508210	Identifier	off		6508190	1					
ANR	6508211	AssignmentExpression	off = 0		6508190	2		=			
ANR	6508212	Identifier	off		6508190	0					
ANR	6508213	PrimaryExpression	0		6508190	1					
ANR	6508214	IdentifierDeclStatement	PHeapBlock hb = NULL ;	1304:1:43091:43111	6508190	2	True				
ANR	6508215	IdentifierDecl	hb = NULL		6508190	0					
ANR	6508216	IdentifierDeclType	PHeapBlock		6508190	0					
ANR	6508217	Identifier	hb		6508190	1					
ANR	6508218	AssignmentExpression	hb = NULL		6508190	2		=			
ANR	6508219	Identifier	NULL		6508190	0					
ANR	6508220	Identifier	NULL		6508190	1					
ANR	6508221	IfStatement	if ( space )		6508190	3					
ANR	6508222	Condition	space	1305:5:43118:43122	6508190	0	True				
ANR	6508223	Identifier	space		6508190	0					
ANR	6508224	CompoundStatement		7:2:134:181	6508190	1					
ANR	6508225	ExpressionStatement	"off = r_num_math ( core -> num , space + 1 )"	1306:2:43129:43168	6508190	0	True				
ANR	6508226	AssignmentExpression	"off = r_num_math ( core -> num , space + 1 )"		6508190	0		=			
ANR	6508227	Identifier	off		6508190	0					
ANR	6508228	CallExpression	"r_num_math ( core -> num , space + 1 )"		6508190	1					
ANR	6508229	Callee	r_num_math		6508190	0					
ANR	6508230	Identifier	r_num_math		6508190	0					
ANR	6508231	ArgumentList	core -> num		6508190	1					
ANR	6508232	Argument	core -> num		6508190	0					
ANR	6508233	PtrMemberAccess	core -> num		6508190	0					
ANR	6508234	Identifier	core		6508190	0					
ANR	6508235	Identifier	num		6508190	1					
ANR	6508236	Argument	space + 1		6508190	1					
ANR	6508237	AdditiveExpression	space + 1		6508190	0		+			
ANR	6508238	Identifier	space		6508190	0					
ANR	6508239	PrimaryExpression	1		6508190	1					
ANR	6508240	IdentifierDeclStatement	"PHeapBlock hb = GetSingleBlock ( core -> dbg , off ) ;"	1307:2:43172:43219	6508190	1	True				
ANR	6508241	IdentifierDecl	"hb = GetSingleBlock ( core -> dbg , off )"		6508190	0					
ANR	6508242	IdentifierDeclType	PHeapBlock		6508190	0					
ANR	6508243	Identifier	hb		6508190	1					
ANR	6508244	AssignmentExpression	"hb = GetSingleBlock ( core -> dbg , off )"		6508190	2		=			
ANR	6508245	Identifier	hb		6508190	0					
ANR	6508246	CallExpression	"GetSingleBlock ( core -> dbg , off )"		6508190	1					
ANR	6508247	Callee	GetSingleBlock		6508190	0					
ANR	6508248	Identifier	GetSingleBlock		6508190	0					
ANR	6508249	ArgumentList	core -> dbg		6508190	1					
ANR	6508250	Argument	core -> dbg		6508190	0					
ANR	6508251	PtrMemberAccess	core -> dbg		6508190	0					
ANR	6508252	Identifier	core		6508190	0					
ANR	6508253	Identifier	dbg		6508190	1					
ANR	6508254	Argument	off		6508190	1					
ANR	6508255	Identifier	off		6508190	0					
ANR	6508256	IfStatement	if ( hb )		6508190	2					
ANR	6508257	Condition	hb	1308:6:43227:43228	6508190	0	True				
ANR	6508258	Identifier	hb		6508190	0					
ANR	6508259	CompoundStatement		14:3:324:342	6508190	1					
ANR	6508260	IdentifierDeclStatement	ut64 granularity = hb -> extraInfo -> granularity ;	1309:3:43236:43281	6508190	0	True				
ANR	6508261	IdentifierDecl	granularity = hb -> extraInfo -> granularity		6508190	0					
ANR	6508262	IdentifierDeclType	ut64		6508190	0					
ANR	6508263	Identifier	granularity		6508190	1					
ANR	6508264	AssignmentExpression	granularity = hb -> extraInfo -> granularity		6508190	2		=			
ANR	6508265	Identifier	granularity		6508190	0					
ANR	6508266	PtrMemberAccess	hb -> extraInfo -> granularity		6508190	1					
ANR	6508267	PtrMemberAccess	hb -> extraInfo		6508190	0					
ANR	6508268	Identifier	hb		6508190	0					
ANR	6508269	Identifier	extraInfo		6508190	1					
ANR	6508270	Identifier	granularity		6508190	1					
ANR	6508271	IdentifierDeclStatement	char * type = get_type ( hb -> dwFlags ) ;	1310:3:43286:43321	6508190	1	True				
ANR	6508272	IdentifierDecl	* type = get_type ( hb -> dwFlags )		6508190	0					
ANR	6508273	IdentifierDeclType	char *		6508190	0					
ANR	6508274	Identifier	type		6508190	1					
ANR	6508275	AssignmentExpression	* type = get_type ( hb -> dwFlags )		6508190	2		=			
ANR	6508276	Identifier	type		6508190	0					
ANR	6508277	CallExpression	get_type ( hb -> dwFlags )		6508190	1					
ANR	6508278	Callee	get_type		6508190	0					
ANR	6508279	Identifier	get_type		6508190	0					
ANR	6508280	ArgumentList	hb -> dwFlags		6508190	1					
ANR	6508281	Argument	hb -> dwFlags		6508190	0					
ANR	6508282	PtrMemberAccess	hb -> dwFlags		6508190	0					
ANR	6508283	Identifier	hb		6508190	0					
ANR	6508284	Identifier	dwFlags		6508190	1					
ANR	6508285	IfStatement	if ( ! type )		6508190	2					
ANR	6508286	Condition	! type	1311:7:43330:43334	6508190	0	True				
ANR	6508287	UnaryOperationExpression	! type		6508190	0					
ANR	6508288	UnaryOperator	!		6508190	0					
ANR	6508289	Identifier	type		6508190	1					
ANR	6508290	CompoundStatement		11:14:299:299	6508190	1					
ANR	6508291	ExpressionStatement	"type = """""	1312:4:43343:43352	6508190	0	True				
ANR	6508292	AssignmentExpression	"type = """""		6508190	0		=			
ANR	6508293	Identifier	type		6508190	0					
ANR	6508294	PrimaryExpression	""""""		6508190	1					
ANR	6508295	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1314:3:43362:43380	6508190	3	True				
ANR	6508296	IdentifierDecl	* pj = pj_new ( )		6508190	0					
ANR	6508297	IdentifierDeclType	PJ *		6508190	0					
ANR	6508298	Identifier	pj		6508190	1					
ANR	6508299	AssignmentExpression	* pj = pj_new ( )		6508190	2		=			
ANR	6508300	Identifier	pj		6508190	0					
ANR	6508301	CallExpression	pj_new ( )		6508190	1					
ANR	6508302	Callee	pj_new		6508190	0					
ANR	6508303	Identifier	pj_new		6508190	0					
ANR	6508304	ArgumentList			6508190	1					
ANR	6508305	SwitchStatement	switch ( input [ 0 ] )		6508190	4					
ANR	6508306	Condition	input [ 0 ]	1315:11:43393:43400	6508190	0	True				
ANR	6508307	ArrayIndexing	input [ 0 ]		6508190	0					
ANR	6508308	Identifier	input		6508190	0					
ANR	6508309	PrimaryExpression	0		6508190	1					
ANR	6508310	CompoundStatement		15:21:365:365	6508190	1					
ANR	6508311	Label	case ' ' :	1316:3:43408:43416	6508190	0	True				
ANR	6508312	Statement	r_cons_printf	1317:4:43422:43434	6508190	1	True				
ANR	6508313	Statement	(	1317:18:43436:43436	6508190	2	True				
ANR	6508314	Statement	"""Block @ 0x%"""	1317:19:43437:43449	6508190	3	True				
ANR	6508315	Statement	PFMT64x	1317:32:43450:43456	6508190	4	True				
ANR	6508316	Statement	""" %s\\n"""	1317:39:43457:43463	6508190	5	True				
ANR	6508317	Statement	","	1317:46:43464:43464	6508190	6	True				
ANR	6508318	Statement	off	1317:48:43466:43468	6508190	7	True				
ANR	6508319	Statement	-	1317:52:43470:43470	6508190	8	True				
ANR	6508320	Statement	granularity	1317:54:43472:43482	6508190	9	True				
ANR	6508321	Statement	","	1317:65:43483:43483	6508190	10	True				
ANR	6508322	Statement	type	1317:67:43485:43488	6508190	11	True				
ANR	6508323	Statement	)	1317:71:43489:43489	6508190	12	True				
ANR	6508324	ExpressionStatement		1317:72:43490:43490	6508190	13	True				
ANR	6508325	Statement	r_cons_printf	1318:4:43496:43508	6508190	14	True				
ANR	6508326	Statement	(	1318:18:43510:43510	6508190	15	True				
ANR	6508327	Statement	"""\\tSize: 0x%"""	1318:19:43511:43523	6508190	16	True				
ANR	6508328	Statement	PFMT64x	1318:32:43524:43530	6508190	17	True				
ANR	6508329	Statement	"""\\n"""	1318:39:43531:43534	6508190	18	True				
ANR	6508330	Statement	","	1318:43:43535:43535	6508190	19	True				
ANR	6508331	Statement	hb	1318:45:43537:43538	6508190	20	True				
ANR	6508332	Statement	->	1318:47:43539:43540	6508190	21	True				
ANR	6508333	Statement	dwSize	1318:49:43541:43546	6508190	22	True				
ANR	6508334	Statement	)	1318:55:43547:43547	6508190	23	True				
ANR	6508335	ExpressionStatement		1318:56:43548:43548	6508190	24	True				
ANR	6508336	IfStatement	if ( hb -> extraInfo -> unusedBytes )		6508190	25					
ANR	6508337	Condition	hb -> extraInfo -> unusedBytes	1319:8:43558:43583	6508190	0	True				
ANR	6508338	PtrMemberAccess	hb -> extraInfo -> unusedBytes		6508190	0					
ANR	6508339	PtrMemberAccess	hb -> extraInfo		6508190	0					
ANR	6508340	Identifier	hb		6508190	0					
ANR	6508341	Identifier	extraInfo		6508190	1					
ANR	6508342	Identifier	unusedBytes		6508190	1					
ANR	6508343	CompoundStatement		19:36:548:548	6508190	1					
ANR	6508344	Statement	r_cons_printf	1320:5:43593:43605	6508190	0	True				
ANR	6508345	Statement	(	1320:19:43607:43607	6508190	1	True				
ANR	6508346	Statement	"""\\tUnused: 0x%"""	1320:20:43608:43622	6508190	2	True				
ANR	6508347	Statement	PFMT64x	1320:35:43623:43629	6508190	3	True				
ANR	6508348	Statement	"""\\n"""	1320:42:43630:43633	6508190	4	True				
ANR	6508349	Statement	","	1320:46:43634:43634	6508190	5	True				
ANR	6508350	Statement	hb	1320:48:43636:43637	6508190	6	True				
ANR	6508351	Statement	->	1320:50:43638:43639	6508190	7	True				
ANR	6508352	Statement	extraInfo	1320:52:43640:43648	6508190	8	True				
ANR	6508353	Statement	->	1320:61:43649:43650	6508190	9	True				
ANR	6508354	Statement	unusedBytes	1320:63:43651:43661	6508190	10	True				
ANR	6508355	Statement	)	1320:74:43662:43662	6508190	11	True				
ANR	6508356	ExpressionStatement		1320:75:43663:43663	6508190	12	True				
ANR	6508357	Statement	r_cons_printf	1322:4:43675:43687	6508190	26	True				
ANR	6508358	Statement	(	1322:18:43689:43689	6508190	27	True				
ANR	6508359	Statement	"""\\tGranularity: 0x%"""	1322:19:43690:43709	6508190	28	True				
ANR	6508360	Statement	PFMT64x	1322:39:43710:43716	6508190	29	True				
ANR	6508361	Statement	"""\\n"""	1322:46:43717:43720	6508190	30	True				
ANR	6508362	Statement	","	1322:50:43721:43721	6508190	31	True				
ANR	6508363	Statement	granularity	1322:52:43723:43733	6508190	32	True				
ANR	6508364	Statement	)	1322:63:43734:43734	6508190	33	True				
ANR	6508365	ExpressionStatement		1322:64:43735:43735	6508190	34	True				
ANR	6508366	BreakStatement	break ;	1323:4:43741:43746	6508190	35	True				
ANR	6508367	Label	case 'j' :	1324:3:43751:43759	6508190	36	True				
ANR	6508368	ExpressionStatement	pj_o ( pj )	1325:4:43765:43774	6508190	37	True				
ANR	6508369	CallExpression	pj_o ( pj )		6508190	0					
ANR	6508370	Callee	pj_o		6508190	0					
ANR	6508371	Identifier	pj_o		6508190	0					
ANR	6508372	ArgumentList	pj		6508190	1					
ANR	6508373	Argument	pj		6508190	0					
ANR	6508374	Identifier	pj		6508190	0					
ANR	6508375	ExpressionStatement	"pj_kN ( pj , ""address"" , off - granularity )"	1326:4:43780:43820	6508190	38	True				
ANR	6508376	CallExpression	"pj_kN ( pj , ""address"" , off - granularity )"		6508190	0					
ANR	6508377	Callee	pj_kN		6508190	0					
ANR	6508378	Identifier	pj_kN		6508190	0					
ANR	6508379	ArgumentList	pj		6508190	1					
ANR	6508380	Argument	pj		6508190	0					
ANR	6508381	Identifier	pj		6508190	0					
ANR	6508382	Argument	"""address"""		6508190	1					
ANR	6508383	PrimaryExpression	"""address"""		6508190	0					
ANR	6508384	Argument	off - granularity		6508190	2					
ANR	6508385	AdditiveExpression	off - granularity		6508190	0		-			
ANR	6508386	Identifier	off		6508190	0					
ANR	6508387	Identifier	granularity		6508190	1					
ANR	6508388	ExpressionStatement	"pj_ks ( pj , ""type"" , type )"	1327:4:43826:43850	6508190	39	True				
ANR	6508389	CallExpression	"pj_ks ( pj , ""type"" , type )"		6508190	0					
ANR	6508390	Callee	pj_ks		6508190	0					
ANR	6508391	Identifier	pj_ks		6508190	0					
ANR	6508392	ArgumentList	pj		6508190	1					
ANR	6508393	Argument	pj		6508190	0					
ANR	6508394	Identifier	pj		6508190	0					
ANR	6508395	Argument	"""type"""		6508190	1					
ANR	6508396	PrimaryExpression	"""type"""		6508190	0					
ANR	6508397	Argument	type		6508190	2					
ANR	6508398	Identifier	type		6508190	0					
ANR	6508399	ExpressionStatement	"pj_kN ( pj , ""size"" , hb -> dwSize )"	1328:4:43856:43886	6508190	40	True				
ANR	6508400	CallExpression	"pj_kN ( pj , ""size"" , hb -> dwSize )"		6508190	0					
ANR	6508401	Callee	pj_kN		6508190	0					
ANR	6508402	Identifier	pj_kN		6508190	0					
ANR	6508403	ArgumentList	pj		6508190	1					
ANR	6508404	Argument	pj		6508190	0					
ANR	6508405	Identifier	pj		6508190	0					
ANR	6508406	Argument	"""size"""		6508190	1					
ANR	6508407	PrimaryExpression	"""size"""		6508190	0					
ANR	6508408	Argument	hb -> dwSize		6508190	2					
ANR	6508409	PtrMemberAccess	hb -> dwSize		6508190	0					
ANR	6508410	Identifier	hb		6508190	0					
ANR	6508411	Identifier	dwSize		6508190	1					
ANR	6508412	IfStatement	if ( hb -> extraInfo -> unusedBytes )		6508190	41					
ANR	6508413	Condition	hb -> extraInfo -> unusedBytes	1329:8:43896:43921	6508190	0	True				
ANR	6508414	PtrMemberAccess	hb -> extraInfo -> unusedBytes		6508190	0					
ANR	6508415	PtrMemberAccess	hb -> extraInfo		6508190	0					
ANR	6508416	Identifier	hb		6508190	0					
ANR	6508417	Identifier	extraInfo		6508190	1					
ANR	6508418	Identifier	unusedBytes		6508190	1					
ANR	6508419	CompoundStatement		29:36:886:886	6508190	1					
ANR	6508420	ExpressionStatement	"pj_kN ( pj , ""unused"" , hb -> extraInfo -> unusedBytes )"	1330:5:43931:43979	6508190	0	True				
ANR	6508421	CallExpression	"pj_kN ( pj , ""unused"" , hb -> extraInfo -> unusedBytes )"		6508190	0					
ANR	6508422	Callee	pj_kN		6508190	0					
ANR	6508423	Identifier	pj_kN		6508190	0					
ANR	6508424	ArgumentList	pj		6508190	1					
ANR	6508425	Argument	pj		6508190	0					
ANR	6508426	Identifier	pj		6508190	0					
ANR	6508427	Argument	"""unused"""		6508190	1					
ANR	6508428	PrimaryExpression	"""unused"""		6508190	0					
ANR	6508429	Argument	hb -> extraInfo -> unusedBytes		6508190	2					
ANR	6508430	PtrMemberAccess	hb -> extraInfo -> unusedBytes		6508190	0					
ANR	6508431	PtrMemberAccess	hb -> extraInfo		6508190	0					
ANR	6508432	Identifier	hb		6508190	0					
ANR	6508433	Identifier	extraInfo		6508190	1					
ANR	6508434	Identifier	unusedBytes		6508190	1					
ANR	6508435	ExpressionStatement	pj_end ( pj )	1332:4:43991:44002	6508190	42	True				
ANR	6508436	CallExpression	pj_end ( pj )		6508190	0					
ANR	6508437	Callee	pj_end		6508190	0					
ANR	6508438	Identifier	pj_end		6508190	0					
ANR	6508439	ArgumentList	pj		6508190	1					
ANR	6508440	Argument	pj		6508190	0					
ANR	6508441	Identifier	pj		6508190	0					
ANR	6508442	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1333:4:44008:44039	6508190	43	True				
ANR	6508443	CallExpression	r_cons_println ( pj_string ( pj ) )		6508190	0					
ANR	6508444	Callee	r_cons_println		6508190	0					
ANR	6508445	Identifier	r_cons_println		6508190	0					
ANR	6508446	ArgumentList	pj_string ( pj )		6508190	1					
ANR	6508447	Argument	pj_string ( pj )		6508190	0					
ANR	6508448	CallExpression	pj_string ( pj )		6508190	0					
ANR	6508449	Callee	pj_string		6508190	0					
ANR	6508450	Identifier	pj_string		6508190	0					
ANR	6508451	ArgumentList	pj		6508190	1					
ANR	6508452	Argument	pj		6508190	0					
ANR	6508453	Identifier	pj		6508190	0					
ANR	6508454	ExpressionStatement	free ( hb -> extraInfo )	1335:3:44049:44069	6508190	5	True				
ANR	6508455	CallExpression	free ( hb -> extraInfo )		6508190	0					
ANR	6508456	Callee	free		6508190	0					
ANR	6508457	Identifier	free		6508190	0					
ANR	6508458	ArgumentList	hb -> extraInfo		6508190	1					
ANR	6508459	Argument	hb -> extraInfo		6508190	0					
ANR	6508460	PtrMemberAccess	hb -> extraInfo		6508190	0					
ANR	6508461	Identifier	hb		6508190	0					
ANR	6508462	Identifier	extraInfo		6508190	1					
ANR	6508463	ExpressionStatement	free ( hb )	1336:3:44074:44083	6508190	6	True				
ANR	6508464	CallExpression	free ( hb )		6508190	0					
ANR	6508465	Callee	free		6508190	0					
ANR	6508466	Identifier	free		6508190	0					
ANR	6508467	ArgumentList	hb		6508190	1					
ANR	6508468	Argument	hb		6508190	0					
ANR	6508469	Identifier	hb		6508190	0					
ANR	6508470	ExpressionStatement	pj_free ( pj )	1337:3:44088:44100	6508190	7	True				
ANR	6508471	CallExpression	pj_free ( pj )		6508190	0					
ANR	6508472	Callee	pj_free		6508190	0					
ANR	6508473	Identifier	pj_free		6508190	0					
ANR	6508474	ArgumentList	pj		6508190	1					
ANR	6508475	Argument	pj		6508190	0					
ANR	6508476	Identifier	pj		6508190	0					
ANR	6508477	ReturnStatement	return ;	1339:2:44108:44114	6508190	3	True				
ANR	6508478	SwitchStatement	switch ( input [ 0 ] )		6508190	4					
ANR	6508479	Condition	input [ 0 ]	1341:9:44128:44135	6508190	0	True				
ANR	6508480	ArrayIndexing	input [ 0 ]		6508190	0					
ANR	6508481	Identifier	input		6508190	0					
ANR	6508482	PrimaryExpression	0		6508190	1					
ANR	6508483	CompoundStatement		41:19:1100:1100	6508190	1					
ANR	6508484	Label	case '\\0' :	1342:1:44141:44150	6508190	0	True				
ANR	6508485	Label	case 'f' :	1343:1:44153:44161	6508190	1	True				
ANR	6508486	Label	case 'j' :	1344:1:44164:44172	6508190	2	True				
ANR	6508487	ExpressionStatement	"w32_list_heaps_blocks ( core , input [ 0 ] )"	1345:2:44176:44214	6508190	3	True				
ANR	6508488	CallExpression	"w32_list_heaps_blocks ( core , input [ 0 ] )"		6508190	0					
ANR	6508489	Callee	w32_list_heaps_blocks		6508190	0					
ANR	6508490	Identifier	w32_list_heaps_blocks		6508190	0					
ANR	6508491	ArgumentList	core		6508190	1					
ANR	6508492	Argument	core		6508190	0					
ANR	6508493	Identifier	core		6508190	0					
ANR	6508494	Argument	input [ 0 ]		6508190	1					
ANR	6508495	ArrayIndexing	input [ 0 ]		6508190	0					
ANR	6508496	Identifier	input		6508190	0					
ANR	6508497	PrimaryExpression	0		6508190	1					
ANR	6508498	BreakStatement	break ;	1346:2:44218:44223	6508190	4	True				
ANR	6508499	Label	default :	1347:1:44226:44233	6508190	5	True				
ANR	6508500	Identifier	default		6508190	0					
ANR	6508501	ExpressionStatement	"r_core_cmd_help ( core , help_msg_block )"	1348:2:44237:44275	6508190	6	True				
ANR	6508502	CallExpression	"r_core_cmd_help ( core , help_msg_block )"		6508190	0					
ANR	6508503	Callee	r_core_cmd_help		6508190	0					
ANR	6508504	Identifier	r_core_cmd_help		6508190	0					
ANR	6508505	ArgumentList	core		6508190	1					
ANR	6508506	Argument	core		6508190	0					
ANR	6508507	Identifier	core		6508190	0					
ANR	6508508	Argument	help_msg_block		6508190	1					
ANR	6508509	Identifier	help_msg_block		6508190	0					
ANR	6508510	ReturnType	static void		6508190	1					
ANR	6508511	Identifier	cmd_debug_map_heap_block_win		6508190	2					
ANR	6508512	ParameterList	"RCore * core , const char * input"		6508190	3					
ANR	6508513	Parameter	RCore * core	1301:41:43005:43015	6508190	0	True				
ANR	6508514	ParameterType	RCore *		6508190	0					
ANR	6508515	Identifier	core		6508190	1					
ANR	6508516	Parameter	const char * input	1301:54:43018:43034	6508190	1	True				
ANR	6508517	ParameterType	const char *		6508190	0					
ANR	6508518	Identifier	input		6508190	1					
ANR	6508519	CFGEntryNode	ENTRY		6508190		True				
ANR	6508520	CFGExitNode	EXIT		6508190		True				
ANR	6508521	Symbol	pj_string		6508190						
ANR	6508522	Symbol	GetSingleBlock		6508190						
ANR	6508523	Symbol	* core		6508190						
ANR	6508524	Symbol	* input		6508190						
ANR	6508525	Symbol	strchr		6508190						
ANR	6508526	Symbol	hb -> dwSize		6508190						
ANR	6508527	Symbol	type		6508190						
ANR	6508528	Symbol	hb -> extraInfo		6508190						
ANR	6508529	Symbol	space		6508190						
ANR	6508530	Symbol	r_num_math		6508190						
ANR	6508531	Symbol	get_type		6508190						
ANR	6508532	Symbol	core -> num		6508190						
ANR	6508533	Symbol	hb -> extraInfo -> unusedBytes		6508190						
ANR	6508534	Symbol	NULL		6508190						
ANR	6508535	Symbol	* hb		6508190						
ANR	6508536	Symbol	* * hb		6508190						
ANR	6508537	Symbol	hb -> dwFlags		6508190						
ANR	6508538	Symbol	* hb -> extraInfo		6508190						
ANR	6508539	Symbol	off		6508190						
ANR	6508540	Symbol	core		6508190						
ANR	6508541	Symbol	input		6508190						
ANR	6508542	Symbol	granularity		6508190						
ANR	6508543	Symbol	hb -> extraInfo -> granularity		6508190						
ANR	6508544	Symbol	hb		6508190						
ANR	6508545	Symbol	pj_new		6508190						
ANR	6508546	Symbol	pj		6508190						
ANR	6508547	Symbol	help_msg_block		6508190						
ANR	6508548	Symbol	core -> dbg		6508190						
ANR	6508549	Function	cmd_debug_map_heap_win	1352:0:44283:44600							
ANR	6508550	FunctionDef	"cmd_debug_map_heap_win (RCore * core , const char * input)"		6508549	0					
ANR	6508551	CompoundStatement		1352:66:44349:44600	6508549	0					
ANR	6508552	ExpressionStatement	init_func ( )	1353:1:44352:44364	6508549	0	True				
ANR	6508553	CallExpression	init_func ( )		6508549	0					
ANR	6508554	Callee	init_func		6508549	0					
ANR	6508555	Identifier	init_func		6508549	0					
ANR	6508556	ArgumentList			6508549	1					
ANR	6508557	SwitchStatement	switch ( input [ 0 ] )		6508549	1					
ANR	6508558	Condition	input [ 0 ]	1354:9:44375:44382	6508549	0	True				
ANR	6508559	ArrayIndexing	input [ 0 ]		6508549	0					
ANR	6508560	Identifier	input		6508549	0					
ANR	6508561	PrimaryExpression	0		6508549	1					
ANR	6508562	CompoundStatement		3:19:35:35	6508549	1					
ANR	6508563	Label	case '?' :	1355:1:44388:44396	6508549	0	True				
ANR	6508564	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	1356:2:44408:44440	6508549	1	True				
ANR	6508565	CallExpression	"r_core_cmd_help ( core , help_msg )"		6508549	0					
ANR	6508566	Callee	r_core_cmd_help		6508549	0					
ANR	6508567	Identifier	r_core_cmd_help		6508549	0					
ANR	6508568	ArgumentList	core		6508549	1					
ANR	6508569	Argument	core		6508549	0					
ANR	6508570	Identifier	core		6508549	0					
ANR	6508571	Argument	help_msg		6508549	1					
ANR	6508572	Identifier	help_msg		6508549	0					
ANR	6508573	BreakStatement	break ;	1357:2:44444:44449	6508549	2	True				
ANR	6508574	Label	case 'b' :	1358:1:44452:44460	6508549	3	True				
ANR	6508575	ExpressionStatement	"cmd_debug_map_heap_block_win ( core , input + 1 )"	1359:2:44472:44518	6508549	4	True				
ANR	6508576	CallExpression	"cmd_debug_map_heap_block_win ( core , input + 1 )"		6508549	0					
ANR	6508577	Callee	cmd_debug_map_heap_block_win		6508549	0					
ANR	6508578	Identifier	cmd_debug_map_heap_block_win		6508549	0					
ANR	6508579	ArgumentList	core		6508549	1					
ANR	6508580	Argument	core		6508549	0					
ANR	6508581	Identifier	core		6508549	0					
ANR	6508582	Argument	input + 1		6508549	1					
ANR	6508583	AdditiveExpression	input + 1		6508549	0		+			
ANR	6508584	Identifier	input		6508549	0					
ANR	6508585	PrimaryExpression	1		6508549	1					
ANR	6508586	BreakStatement	break ;	1360:2:44522:44527	6508549	5	True				
ANR	6508587	Label	default :	1361:1:44530:44537	6508549	6	True				
ANR	6508588	Identifier	default		6508549	0					
ANR	6508589	ExpressionStatement	"w32_list_heaps ( core , input [ 0 ] )"	1362:2:44541:44572	6508549	7	True				
ANR	6508590	CallExpression	"w32_list_heaps ( core , input [ 0 ] )"		6508549	0					
ANR	6508591	Callee	w32_list_heaps		6508549	0					
ANR	6508592	Identifier	w32_list_heaps		6508549	0					
ANR	6508593	ArgumentList	core		6508549	1					
ANR	6508594	Argument	core		6508549	0					
ANR	6508595	Identifier	core		6508549	0					
ANR	6508596	Argument	input [ 0 ]		6508549	1					
ANR	6508597	ArrayIndexing	input [ 0 ]		6508549	0					
ANR	6508598	Identifier	input		6508549	0					
ANR	6508599	PrimaryExpression	0		6508549	1					
ANR	6508600	BreakStatement	break ;	1363:2:44576:44581	6508549	8	True				
ANR	6508601	ReturnStatement	return true ;	1365:1:44587:44598	6508549	2	True				
ANR	6508602	Identifier	true		6508549	0					
ANR	6508603	ReturnType	static int		6508549	1					
ANR	6508604	Identifier	cmd_debug_map_heap_win		6508549	2					
ANR	6508605	ParameterList	"RCore * core , const char * input"		6508549	3					
ANR	6508606	Parameter	RCore * core	1352:34:44317:44327	6508549	0	True				
ANR	6508607	ParameterType	RCore *		6508549	0					
ANR	6508608	Identifier	core		6508549	1					
ANR	6508609	Parameter	const char * input	1352:47:44330:44346	6508549	1	True				
ANR	6508610	ParameterType	const char *		6508549	0					
ANR	6508611	Identifier	input		6508549	1					
ANR	6508612	CFGEntryNode	ENTRY		6508549		True				
ANR	6508613	CFGExitNode	EXIT		6508549		True				
ANR	6508614	Symbol	core		6508549						
ANR	6508615	Symbol	input		6508549						
ANR	6508616	Symbol	help_msg		6508549						
ANR	6508617	Symbol	* input		6508549						
ANR	6508618	Symbol	true		6508549						
