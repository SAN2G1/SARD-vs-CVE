command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5593602	File	data/converged/CVE-2019-16718~_radare2/ppc-opc.c								
ANR	5593603	DeclStmt									
ANR	5593604	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bat
ANR	5593605	DeclStmt									
ANR	5593606	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bat
ANR	5593607	DeclStmt									
ANR	5593608	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bba
ANR	5593609	DeclStmt									
ANR	5593610	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bba
ANR	5593611	DeclStmt									
ANR	5593612	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bdm
ANR	5593613	DeclStmt									
ANR	5593614	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bdm
ANR	5593615	DeclStmt									
ANR	5593616	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bdp
ANR	5593617	DeclStmt									
ANR	5593618	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bdp
ANR	5593619	DeclStmt									
ANR	5593620	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bo
ANR	5593621	DeclStmt									
ANR	5593622	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bo
ANR	5593623	DeclStmt									
ANR	5593624	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_boe
ANR	5593625	DeclStmt									
ANR	5593626	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_boe
ANR	5593627	DeclStmt									
ANR	5593628	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_fxm
ANR	5593629	DeclStmt									
ANR	5593630	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_fxm
ANR	5593631	DeclStmt									
ANR	5593632	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_mbe
ANR	5593633	DeclStmt									
ANR	5593634	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_mbe
ANR	5593635	DeclStmt									
ANR	5593636	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_mb6
ANR	5593637	DeclStmt									
ANR	5593638	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_mb6
ANR	5593639	DeclStmt									
ANR	5593640	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_nb
ANR	5593641	DeclStmt									
ANR	5593642	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_nsi
ANR	5593643	DeclStmt									
ANR	5593644	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_nsi
ANR	5593645	DeclStmt									
ANR	5593646	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_ral
ANR	5593647	DeclStmt									
ANR	5593648	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_ram
ANR	5593649	DeclStmt									
ANR	5593650	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_raq
ANR	5593651	DeclStmt									
ANR	5593652	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_ras
ANR	5593653	DeclStmt									
ANR	5593654	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_rbs
ANR	5593655	DeclStmt									
ANR	5593656	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_rbs
ANR	5593657	DeclStmt									
ANR	5593658	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_sh6
ANR	5593659	DeclStmt									
ANR	5593660	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_sh6
ANR	5593661	DeclStmt									
ANR	5593662	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_spr
ANR	5593663	DeclStmt									
ANR	5593664	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_spr
ANR	5593665	DeclStmt									
ANR	5593666	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_sprg
ANR	5593667	DeclStmt									
ANR	5593668	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_sprg
ANR	5593669	DeclStmt									
ANR	5593670	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_tbr
ANR	5593671	DeclStmt									
ANR	5593672	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_tbr
ANR	5593673	DeclStmt									
ANR	5593674	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xt6
ANR	5593675	DeclStmt									
ANR	5593676	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xt6
ANR	5593677	DeclStmt									
ANR	5593678	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xa6
ANR	5593679	DeclStmt									
ANR	5593680	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xa6
ANR	5593681	DeclStmt									
ANR	5593682	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xb6
ANR	5593683	DeclStmt									
ANR	5593684	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xb6
ANR	5593685	DeclStmt									
ANR	5593686	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xb6s
ANR	5593687	DeclStmt									
ANR	5593688	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xb6s
ANR	5593689	DeclStmt									
ANR	5593690	Decl							const struct powerpc_operand	const struct powerpc_operand [ ]	powerpc_operands
ANR	5593691	DeclStmt									
ANR	5593692	Decl							const unsigned int	const unsigned int	num_powerpc_operands
ANR	5593693	Function	extract_bat	655:0:23342:23536							
ANR	5593694	FunctionDef	"extract_bat (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5593693	0					
ANR	5593695	CompoundStatement		659:0:23449:23536	5593693	0					
ANR	5593696	IfStatement	if ( ( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 16 ) & 0x1f ) )		5593693	0					
ANR	5593697	Condition	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 16 ) & 0x1f )	660:5:23456:23501	5593693	0	True				
ANR	5593698	EqualityExpression	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 16 ) & 0x1f )		5593693	0		!=			
ANR	5593699	BitAndExpression	( insn >> 21 ) & 0x1f		5593693	0		&			
ANR	5593700	ShiftExpression	insn >> 21		5593693	0		>>			
ANR	5593701	Identifier	insn		5593693	0					
ANR	5593702	PrimaryExpression	21		5593693	1					
ANR	5593703	PrimaryExpression	0x1f		5593693	1					
ANR	5593704	BitAndExpression	( insn >> 16 ) & 0x1f		5593693	1		&			
ANR	5593705	ShiftExpression	insn >> 16		5593693	0		>>			
ANR	5593706	Identifier	insn		5593693	0					
ANR	5593707	PrimaryExpression	16		5593693	1					
ANR	5593708	PrimaryExpression	0x1f		5593693	1					
ANR	5593709	CompoundStatement		2:53:54:54	5593693	1					
ANR	5593710	ExpressionStatement	* invalid = 1	661:2:23508:23520	5593693	0	True				
ANR	5593711	AssignmentExpression	* invalid = 1		5593693	0		=			
ANR	5593712	UnaryOperationExpression	* invalid		5593693	0					
ANR	5593713	UnaryOperator	*		5593693	0					
ANR	5593714	Identifier	invalid		5593693	1					
ANR	5593715	PrimaryExpression	1		5593693	1					
ANR	5593716	ReturnStatement	return 0 ;	663:1:23526:23534	5593693	1	True				
ANR	5593717	PrimaryExpression	0		5593693	0					
ANR	5593718	ReturnType	static long		5593693	1					
ANR	5593719	Identifier	extract_bat		5593693	2					
ANR	5593720	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5593693	3					
ANR	5593721	Parameter	unsigned long insn	656:13:23367:23384	5593693	0	True				
ANR	5593722	ParameterType	unsigned long		5593693	0					
ANR	5593723	Identifier	insn		5593693	1					
ANR	5593724	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	657:6:23393:23426	5593693	1	True				
ANR	5593725	ParameterType	ppc_cpu_t dialect		5593693	0					
ANR	5593726	Identifier	ATTRIBUTE_UNUSED		5593693	1					
ANR	5593727	Parameter	int * invalid	658:6:23435:23446	5593693	2	True				
ANR	5593728	ParameterType	int *		5593693	0					
ANR	5593729	Identifier	invalid		5593693	1					
ANR	5593730	CFGEntryNode	ENTRY		5593693		True				
ANR	5593731	CFGExitNode	EXIT		5593693		True				
ANR	5593732	Symbol	insn		5593693						
ANR	5593733	Symbol	ATTRIBUTE_UNUSED		5593693						
ANR	5593734	Symbol	invalid		5593693						
ANR	5593735	Symbol	* invalid		5593693						
ANR	5593736	Function	extract_bba	681:0:24054:24248							
ANR	5593737	FunctionDef	"extract_bba (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5593736	0					
ANR	5593738	CompoundStatement		685:0:24161:24248	5593736	0					
ANR	5593739	IfStatement	if ( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) )		5593736	0					
ANR	5593740	Condition	( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )	686:5:24168:24213	5593736	0	True				
ANR	5593741	EqualityExpression	( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )		5593736	0		!=			
ANR	5593742	BitAndExpression	( insn >> 16 ) & 0x1f		5593736	0		&			
ANR	5593743	ShiftExpression	insn >> 16		5593736	0		>>			
ANR	5593744	Identifier	insn		5593736	0					
ANR	5593745	PrimaryExpression	16		5593736	1					
ANR	5593746	PrimaryExpression	0x1f		5593736	1					
ANR	5593747	BitAndExpression	( insn >> 11 ) & 0x1f		5593736	1		&			
ANR	5593748	ShiftExpression	insn >> 11		5593736	0		>>			
ANR	5593749	Identifier	insn		5593736	0					
ANR	5593750	PrimaryExpression	11		5593736	1					
ANR	5593751	PrimaryExpression	0x1f		5593736	1					
ANR	5593752	CompoundStatement		2:53:54:54	5593736	1					
ANR	5593753	ExpressionStatement	* invalid = 1	687:2:24220:24232	5593736	0	True				
ANR	5593754	AssignmentExpression	* invalid = 1		5593736	0		=			
ANR	5593755	UnaryOperationExpression	* invalid		5593736	0					
ANR	5593756	UnaryOperator	*		5593736	0					
ANR	5593757	Identifier	invalid		5593736	1					
ANR	5593758	PrimaryExpression	1		5593736	1					
ANR	5593759	ReturnStatement	return 0 ;	689:1:24238:24246	5593736	1	True				
ANR	5593760	PrimaryExpression	0		5593736	0					
ANR	5593761	ReturnType	static long		5593736	1					
ANR	5593762	Identifier	extract_bba		5593736	2					
ANR	5593763	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5593736	3					
ANR	5593764	Parameter	unsigned long insn	682:13:24079:24096	5593736	0	True				
ANR	5593765	ParameterType	unsigned long		5593736	0					
ANR	5593766	Identifier	insn		5593736	1					
ANR	5593767	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	683:6:24105:24138	5593736	1	True				
ANR	5593768	ParameterType	ppc_cpu_t dialect		5593736	0					
ANR	5593769	Identifier	ATTRIBUTE_UNUSED		5593736	1					
ANR	5593770	Parameter	int * invalid	684:6:24147:24158	5593736	2	True				
ANR	5593771	ParameterType	int *		5593736	0					
ANR	5593772	Identifier	invalid		5593736	1					
ANR	5593773	CFGEntryNode	ENTRY		5593736		True				
ANR	5593774	CFGExitNode	EXIT		5593736		True				
ANR	5593775	Symbol	insn		5593736						
ANR	5593776	Symbol	ATTRIBUTE_UNUSED		5593736						
ANR	5593777	Symbol	invalid		5593736						
ANR	5593778	Symbol	* invalid		5593736						
ANR	5593779	Function	extract_bdm	732:0:25756:26174							
ANR	5593780	FunctionDef	"extract_bdm (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		5593779	0					
ANR	5593781	CompoundStatement		736:0:25846:26174	5593779	0					
ANR	5593782	IfStatement	if ( ( dialect & PPC_OPCODE_POWER4 ) == 0 )		5593779	0					
ANR	5593783	Condition	( dialect & PPC_OPCODE_POWER4 ) == 0	737:6:25854:25887	5593779	0	True				
ANR	5593784	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) == 0		5593779	0		==			
ANR	5593785	BitAndExpression	dialect & PPC_OPCODE_POWER4		5593779	0		&			
ANR	5593786	Identifier	dialect		5593779	0					
ANR	5593787	Identifier	PPC_OPCODE_POWER4		5593779	1					
ANR	5593788	PrimaryExpression	0		5593779	1					
ANR	5593789	CompoundStatement		3:4:47:47	5593779	1					
ANR	5593790	IfStatement	if ( ( ( insn & ( 1 << 21 ) ) == 0 ) != ( ( insn & ( 1 << 15 ) ) == 0 ) )		5593779	0					
ANR	5593791	Condition	( ( insn & ( 1 << 21 ) ) == 0 ) != ( ( insn & ( 1 << 15 ) ) == 0 )	739:7:25903:25956	5593779	0	True				
ANR	5593792	EqualityExpression	( ( insn & ( 1 << 21 ) ) == 0 ) != ( ( insn & ( 1 << 15 ) ) == 0 )		5593779	0		!=			
ANR	5593793	EqualityExpression	( insn & ( 1 << 21 ) ) == 0		5593779	0		==			
ANR	5593794	BitAndExpression	insn & ( 1 << 21 )		5593779	0		&			
ANR	5593795	Identifier	insn		5593779	0					
ANR	5593796	ShiftExpression	1 << 21		5593779	1		<<			
ANR	5593797	PrimaryExpression	1		5593779	0					
ANR	5593798	PrimaryExpression	21		5593779	1					
ANR	5593799	PrimaryExpression	0		5593779	1					
ANR	5593800	EqualityExpression	( insn & ( 1 << 15 ) ) == 0		5593779	1		==			
ANR	5593801	BitAndExpression	insn & ( 1 << 15 )		5593779	0		&			
ANR	5593802	Identifier	insn		5593779	0					
ANR	5593803	ShiftExpression	1 << 15		5593779	1		<<			
ANR	5593804	PrimaryExpression	1		5593779	0					
ANR	5593805	PrimaryExpression	15		5593779	1					
ANR	5593806	PrimaryExpression	0		5593779	1					
ANR	5593807	CompoundStatement		4:63:112:112	5593779	1					
ANR	5593808	ExpressionStatement	* invalid = 1	740:4:25965:25977	5593779	0	True				
ANR	5593809	AssignmentExpression	* invalid = 1		5593779	0		=			
ANR	5593810	UnaryOperationExpression	* invalid		5593779	0					
ANR	5593811	UnaryOperator	*		5593779	0					
ANR	5593812	Identifier	invalid		5593779	1					
ANR	5593813	PrimaryExpression	1		5593779	1					
ANR	5593814	ElseStatement	else		5593779	0					
ANR	5593815	CompoundStatement		9:4:154:154	5593779	0					
ANR	5593816	IfStatement	if ( ( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 ) )		5593779	0					
ANR	5593817	Condition	( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 )	745:9:26012:26089	5593779	0	True				
ANR	5593818	AndExpression	( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 )		5593779	0		&&			
ANR	5593819	EqualityExpression	( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 )		5593779	0		!=			
ANR	5593820	BitAndExpression	insn & ( 0x17 << 21 )		5593779	0		&			
ANR	5593821	Identifier	insn		5593779	0					
ANR	5593822	ShiftExpression	0x17 << 21		5593779	1		<<			
ANR	5593823	PrimaryExpression	0x17		5593779	0					
ANR	5593824	PrimaryExpression	21		5593779	1					
ANR	5593825	ShiftExpression	0x06 << 21		5593779	1		<<			
ANR	5593826	PrimaryExpression	0x06		5593779	0					
ANR	5593827	PrimaryExpression	21		5593779	1					
ANR	5593828	EqualityExpression	( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 )		5593779	1		!=			
ANR	5593829	BitAndExpression	insn & ( 0x1d << 21 )		5593779	0		&			
ANR	5593830	Identifier	insn		5593779	0					
ANR	5593831	ShiftExpression	0x1d << 21		5593779	1		<<			
ANR	5593832	PrimaryExpression	0x1d		5593779	0					
ANR	5593833	PrimaryExpression	21		5593779	1					
ANR	5593834	ShiftExpression	0x18 << 21		5593779	1		<<			
ANR	5593835	PrimaryExpression	0x18		5593779	0					
ANR	5593836	PrimaryExpression	21		5593779	1					
ANR	5593837	CompoundStatement		10:89:245:245	5593779	1					
ANR	5593838	ExpressionStatement	* invalid = 1	746:6:26100:26112	5593779	0	True				
ANR	5593839	AssignmentExpression	* invalid = 1		5593779	0		=			
ANR	5593840	UnaryOperationExpression	* invalid		5593779	0					
ANR	5593841	UnaryOperator	*		5593779	0					
ANR	5593842	Identifier	invalid		5593779	1					
ANR	5593843	PrimaryExpression	1		5593779	1					
ANR	5593844	ReturnStatement	return ( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000 ;	750:2:26130:26172	5593779	1	True				
ANR	5593845	AdditiveExpression	( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000		5593779	0		-			
ANR	5593846	ExclusiveOrExpression	( insn & 0xfffc ) ^ 0x8000		5593779	0		^			
ANR	5593847	BitAndExpression	insn & 0xfffc		5593779	0		&			
ANR	5593848	Identifier	insn		5593779	0					
ANR	5593849	PrimaryExpression	0xfffc		5593779	1					
ANR	5593850	PrimaryExpression	0x8000		5593779	1					
ANR	5593851	PrimaryExpression	0x8000		5593779	1					
ANR	5593852	ReturnType	static long		5593779	1					
ANR	5593853	Identifier	extract_bdm		5593779	2					
ANR	5593854	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		5593779	3					
ANR	5593855	Parameter	unsigned long insn	733:13:25781:25798	5593779	0	True				
ANR	5593856	ParameterType	unsigned long		5593779	0					
ANR	5593857	Identifier	insn		5593779	1					
ANR	5593858	Parameter	ppc_cpu_t dialect	734:6:25807:25823	5593779	1	True				
ANR	5593859	ParameterType	ppc_cpu_t		5593779	0					
ANR	5593860	Identifier	dialect		5593779	1					
ANR	5593861	Parameter	int * invalid	735:6:25832:25843	5593779	2	True				
ANR	5593862	ParameterType	int *		5593779	0					
ANR	5593863	Identifier	invalid		5593779	1					
ANR	5593864	CFGEntryNode	ENTRY		5593779		True				
ANR	5593865	CFGExitNode	EXIT		5593779		True				
ANR	5593866	Symbol	insn		5593779						
ANR	5593867	Symbol	dialect		5593779						
ANR	5593868	Symbol	PPC_OPCODE_POWER4		5593779						
ANR	5593869	Symbol	invalid		5593779						
ANR	5593870	Symbol	* invalid		5593779						
ANR	5593871	Function	extract_bdp	780:0:26803:27221							
ANR	5593872	FunctionDef	"extract_bdp (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		5593871	0					
ANR	5593873	CompoundStatement		784:0:26893:27221	5593871	0					
ANR	5593874	IfStatement	if ( ( dialect & PPC_OPCODE_POWER4 ) == 0 )		5593871	0					
ANR	5593875	Condition	( dialect & PPC_OPCODE_POWER4 ) == 0	785:6:26901:26934	5593871	0	True				
ANR	5593876	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) == 0		5593871	0		==			
ANR	5593877	BitAndExpression	dialect & PPC_OPCODE_POWER4		5593871	0		&			
ANR	5593878	Identifier	dialect		5593871	0					
ANR	5593879	Identifier	PPC_OPCODE_POWER4		5593871	1					
ANR	5593880	PrimaryExpression	0		5593871	1					
ANR	5593881	CompoundStatement		3:4:47:47	5593871	1					
ANR	5593882	IfStatement	if ( ( ( insn & ( 1 << 21 ) ) == 0 ) == ( ( insn & ( 1 << 15 ) ) == 0 ) )		5593871	0					
ANR	5593883	Condition	( ( insn & ( 1 << 21 ) ) == 0 ) == ( ( insn & ( 1 << 15 ) ) == 0 )	787:7:26950:27003	5593871	0	True				
ANR	5593884	EqualityExpression	( ( insn & ( 1 << 21 ) ) == 0 ) == ( ( insn & ( 1 << 15 ) ) == 0 )		5593871	0		==			
ANR	5593885	EqualityExpression	( insn & ( 1 << 21 ) ) == 0		5593871	0		==			
ANR	5593886	BitAndExpression	insn & ( 1 << 21 )		5593871	0		&			
ANR	5593887	Identifier	insn		5593871	0					
ANR	5593888	ShiftExpression	1 << 21		5593871	1		<<			
ANR	5593889	PrimaryExpression	1		5593871	0					
ANR	5593890	PrimaryExpression	21		5593871	1					
ANR	5593891	PrimaryExpression	0		5593871	1					
ANR	5593892	EqualityExpression	( insn & ( 1 << 15 ) ) == 0		5593871	1		==			
ANR	5593893	BitAndExpression	insn & ( 1 << 15 )		5593871	0		&			
ANR	5593894	Identifier	insn		5593871	0					
ANR	5593895	ShiftExpression	1 << 15		5593871	1		<<			
ANR	5593896	PrimaryExpression	1		5593871	0					
ANR	5593897	PrimaryExpression	15		5593871	1					
ANR	5593898	PrimaryExpression	0		5593871	1					
ANR	5593899	CompoundStatement		4:63:112:112	5593871	1					
ANR	5593900	ExpressionStatement	* invalid = 1	788:4:27012:27024	5593871	0	True				
ANR	5593901	AssignmentExpression	* invalid = 1		5593871	0		=			
ANR	5593902	UnaryOperationExpression	* invalid		5593871	0					
ANR	5593903	UnaryOperator	*		5593871	0					
ANR	5593904	Identifier	invalid		5593871	1					
ANR	5593905	PrimaryExpression	1		5593871	1					
ANR	5593906	ElseStatement	else		5593871	0					
ANR	5593907	CompoundStatement		9:4:154:154	5593871	0					
ANR	5593908	IfStatement	if ( ( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 ) )		5593871	0					
ANR	5593909	Condition	( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 )	793:9:27059:27136	5593871	0	True				
ANR	5593910	AndExpression	( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 )		5593871	0		&&			
ANR	5593911	EqualityExpression	( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 )		5593871	0		!=			
ANR	5593912	BitAndExpression	insn & ( 0x17 << 21 )		5593871	0		&			
ANR	5593913	Identifier	insn		5593871	0					
ANR	5593914	ShiftExpression	0x17 << 21		5593871	1		<<			
ANR	5593915	PrimaryExpression	0x17		5593871	0					
ANR	5593916	PrimaryExpression	21		5593871	1					
ANR	5593917	ShiftExpression	0x07 << 21		5593871	1		<<			
ANR	5593918	PrimaryExpression	0x07		5593871	0					
ANR	5593919	PrimaryExpression	21		5593871	1					
ANR	5593920	EqualityExpression	( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 )		5593871	1		!=			
ANR	5593921	BitAndExpression	insn & ( 0x1d << 21 )		5593871	0		&			
ANR	5593922	Identifier	insn		5593871	0					
ANR	5593923	ShiftExpression	0x1d << 21		5593871	1		<<			
ANR	5593924	PrimaryExpression	0x1d		5593871	0					
ANR	5593925	PrimaryExpression	21		5593871	1					
ANR	5593926	ShiftExpression	0x19 << 21		5593871	1		<<			
ANR	5593927	PrimaryExpression	0x19		5593871	0					
ANR	5593928	PrimaryExpression	21		5593871	1					
ANR	5593929	CompoundStatement		10:89:245:245	5593871	1					
ANR	5593930	ExpressionStatement	* invalid = 1	794:6:27147:27159	5593871	0	True				
ANR	5593931	AssignmentExpression	* invalid = 1		5593871	0		=			
ANR	5593932	UnaryOperationExpression	* invalid		5593871	0					
ANR	5593933	UnaryOperator	*		5593871	0					
ANR	5593934	Identifier	invalid		5593871	1					
ANR	5593935	PrimaryExpression	1		5593871	1					
ANR	5593936	ReturnStatement	return ( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000 ;	798:2:27177:27219	5593871	1	True				
ANR	5593937	AdditiveExpression	( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000		5593871	0		-			
ANR	5593938	ExclusiveOrExpression	( insn & 0xfffc ) ^ 0x8000		5593871	0		^			
ANR	5593939	BitAndExpression	insn & 0xfffc		5593871	0		&			
ANR	5593940	Identifier	insn		5593871	0					
ANR	5593941	PrimaryExpression	0xfffc		5593871	1					
ANR	5593942	PrimaryExpression	0x8000		5593871	1					
ANR	5593943	PrimaryExpression	0x8000		5593871	1					
ANR	5593944	ReturnType	static long		5593871	1					
ANR	5593945	Identifier	extract_bdp		5593871	2					
ANR	5593946	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		5593871	3					
ANR	5593947	Parameter	unsigned long insn	781:13:26828:26845	5593871	0	True				
ANR	5593948	ParameterType	unsigned long		5593871	0					
ANR	5593949	Identifier	insn		5593871	1					
ANR	5593950	Parameter	ppc_cpu_t dialect	782:6:26854:26870	5593871	1	True				
ANR	5593951	ParameterType	ppc_cpu_t		5593871	0					
ANR	5593952	Identifier	dialect		5593871	1					
ANR	5593953	Parameter	int * invalid	783:6:26879:26890	5593871	2	True				
ANR	5593954	ParameterType	int *		5593871	0					
ANR	5593955	Identifier	invalid		5593871	1					
ANR	5593956	CFGEntryNode	ENTRY		5593871		True				
ANR	5593957	CFGExitNode	EXIT		5593871		True				
ANR	5593958	Symbol	insn		5593871						
ANR	5593959	Symbol	dialect		5593871						
ANR	5593960	Symbol	PPC_OPCODE_POWER4		5593871						
ANR	5593961	Symbol	invalid		5593871						
ANR	5593962	Symbol	* invalid		5593871						
ANR	5593963	Function	valid_bo	803:0:27270:28338							
ANR	5593964	FunctionDef	"valid_bo (long value , ppc_cpu_t dialect , int extract)"		5593963	0					
ANR	5593965	CompoundStatement		805:0:27335:28338	5593963	0					
ANR	5593966	IfStatement	if ( ( dialect & PPC_OPCODE_POWER4 ) == 0 )		5593963	0					
ANR	5593967	Condition	( dialect & PPC_OPCODE_POWER4 ) == 0	806:6:27343:27376	5593963	0	True				
ANR	5593968	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) == 0		5593963	0		==			
ANR	5593969	BitAndExpression	dialect & PPC_OPCODE_POWER4		5593963	0		&			
ANR	5593970	Identifier	dialect		5593963	0					
ANR	5593971	Identifier	PPC_OPCODE_POWER4		5593963	1					
ANR	5593972	PrimaryExpression	0		5593963	1					
ANR	5593973	CompoundStatement		4:6:55:64	5593963	1					
ANR	5593974	IdentifierDeclStatement	int valid ;	808:6:27391:27400	5593963	0	True				
ANR	5593975	IdentifierDecl	valid		5593963	0					
ANR	5593976	IdentifierDeclType	int		5593963	0					
ANR	5593977	Identifier	valid		5593963	1					
ANR	5593978	SwitchStatement	switch ( value & 0x14 )		5593963	1					
ANR	5593979	Condition	value & 0x14	817:14:27601:27612	5593963	0	True				
ANR	5593980	BitAndExpression	value & 0x14		5593963	0		&			
ANR	5593981	Identifier	value		5593963	0					
ANR	5593982	PrimaryExpression	0x14		5593963	1					
ANR	5593983	CompoundStatement		14:1:280:280	5593963	1					
ANR	5593984	Label	default :	819:1:27619:27626	5593963	0	True				
ANR	5593985	Identifier	default		5593963	0					
ANR	5593986	Label	case 0 :	820:1:27629:27635	5593963	1	True				
ANR	5593987	ExpressionStatement	valid = 1	821:3:27640:27649	5593963	2	True				
ANR	5593988	AssignmentExpression	valid = 1		5593963	0		=			
ANR	5593989	Identifier	valid		5593963	0					
ANR	5593990	PrimaryExpression	1		5593963	1					
ANR	5593991	BreakStatement	break ;	822:3:27654:27659	5593963	3	True				
ANR	5593992	Label	case 0x4 :	823:1:27662:27670	5593963	4	True				
ANR	5593993	ExpressionStatement	valid = ( value & 0x2 ) == 0	824:3:27675:27701	5593963	5	True				
ANR	5593994	AssignmentExpression	valid = ( value & 0x2 ) == 0		5593963	0		=			
ANR	5593995	Identifier	valid		5593963	0					
ANR	5593996	EqualityExpression	( value & 0x2 ) == 0		5593963	1		==			
ANR	5593997	BitAndExpression	value & 0x2		5593963	0		&			
ANR	5593998	Identifier	value		5593963	0					
ANR	5593999	PrimaryExpression	0x2		5593963	1					
ANR	5594000	PrimaryExpression	0		5593963	1					
ANR	5594001	BreakStatement	break ;	825:3:27706:27711	5593963	6	True				
ANR	5594002	Label	case 0x10 :	826:1:27714:27723	5593963	7	True				
ANR	5594003	ExpressionStatement	valid = ( value & 0x8 ) == 0	827:3:27728:27754	5593963	8	True				
ANR	5594004	AssignmentExpression	valid = ( value & 0x8 ) == 0		5593963	0		=			
ANR	5594005	Identifier	valid		5593963	0					
ANR	5594006	EqualityExpression	( value & 0x8 ) == 0		5593963	1		==			
ANR	5594007	BitAndExpression	value & 0x8		5593963	0		&			
ANR	5594008	Identifier	value		5593963	0					
ANR	5594009	PrimaryExpression	0x8		5593963	1					
ANR	5594010	PrimaryExpression	0		5593963	1					
ANR	5594011	BreakStatement	break ;	828:3:27759:27764	5593963	9	True				
ANR	5594012	Label	case 0x14 :	829:1:27767:27776	5593963	10	True				
ANR	5594013	ExpressionStatement	valid = value == 0x14	830:3:27781:27802	5593963	11	True				
ANR	5594014	AssignmentExpression	valid = value == 0x14		5593963	0		=			
ANR	5594015	Identifier	valid		5593963	0					
ANR	5594016	EqualityExpression	value == 0x14		5593963	1		==			
ANR	5594017	Identifier	value		5593963	0					
ANR	5594018	PrimaryExpression	0x14		5593963	1					
ANR	5594019	BreakStatement	break ;	831:3:27807:27812	5593963	12	True				
ANR	5594020	IfStatement	if ( valid || ( dialect & PPC_OPCODE_ANY ) == 0 || ! extract )		5593963	2					
ANR	5594021	Condition	valid || ( dialect & PPC_OPCODE_ANY ) == 0 || ! extract	834:5:27895:27946	5593963	0	True				
ANR	5594022	OrExpression	valid || ( dialect & PPC_OPCODE_ANY ) == 0 || ! extract		5593963	0		||			
ANR	5594023	Identifier	valid		5593963	0					
ANR	5594024	OrExpression	( dialect & PPC_OPCODE_ANY ) == 0 || ! extract		5593963	1		||			
ANR	5594025	EqualityExpression	( dialect & PPC_OPCODE_ANY ) == 0		5593963	0		==			
ANR	5594026	BitAndExpression	dialect & PPC_OPCODE_ANY		5593963	0		&			
ANR	5594027	Identifier	dialect		5593963	0					
ANR	5594028	Identifier	PPC_OPCODE_ANY		5593963	1					
ANR	5594029	PrimaryExpression	0		5593963	1					
ANR	5594030	UnaryOperationExpression	! extract		5593963	1					
ANR	5594031	UnaryOperator	!		5593963	0					
ANR	5594032	Identifier	extract		5593963	1					
ANR	5594033	CompoundStatement		30:59:613:613	5593963	1					
ANR	5594034	ReturnStatement	return valid ;	835:2:27953:27965	5593963	0	True				
ANR	5594035	Identifier	valid		5593963	0					
ANR	5594036	IfStatement	if ( ( value & 0x14 ) == 0 )		5593963	1					
ANR	5594037	Condition	( value & 0x14 ) == 0	851:8:28181:28199	5593963	0	True				
ANR	5594038	EqualityExpression	( value & 0x14 ) == 0		5593963	0		==			
ANR	5594039	BitAndExpression	value & 0x14		5593963	0		&			
ANR	5594040	Identifier	value		5593963	0					
ANR	5594041	PrimaryExpression	0x14		5593963	1					
ANR	5594042	PrimaryExpression	0		5593963	1					
ANR	5594043	CompoundStatement		47:29:866:866	5593963	1					
ANR	5594044	ReturnStatement	return ( value & 0x1 ) == 0 ;	852:5:28209:28234	5593963	0	True				
ANR	5594045	EqualityExpression	( value & 0x1 ) == 0		5593963	0		==			
ANR	5594046	BitAndExpression	value & 0x1		5593963	0		&			
ANR	5594047	Identifier	value		5593963	0					
ANR	5594048	PrimaryExpression	0x1		5593963	1					
ANR	5594049	PrimaryExpression	0		5593963	1					
ANR	5594050	ElseStatement	else		5593963	0					
ANR	5594051	IfStatement	if ( ( value & 0x14 ) == 0x14 )		5593963	0					
ANR	5594052	Condition	( value & 0x14 ) == 0x14	853:15:28251:28272	5593963	0	True				
ANR	5594053	EqualityExpression	( value & 0x14 ) == 0x14		5593963	0		==			
ANR	5594054	BitAndExpression	value & 0x14		5593963	0		&			
ANR	5594055	Identifier	value		5593963	0					
ANR	5594056	PrimaryExpression	0x14		5593963	1					
ANR	5594057	PrimaryExpression	0x14		5593963	1					
ANR	5594058	CompoundStatement		49:39:939:939	5593963	1					
ANR	5594059	ReturnStatement	return value == 0x14 ;	854:5:28282:28302	5593963	0	True				
ANR	5594060	EqualityExpression	value == 0x14		5593963	0		==			
ANR	5594061	Identifier	value		5593963	0					
ANR	5594062	PrimaryExpression	0x14		5593963	1					
ANR	5594063	ElseStatement	else		5593963	0					
ANR	5594064	CompoundStatement		51:11:979:979	5593963	0					
ANR	5594065	ReturnStatement	return 1 ;	856:5:28322:28330	5593963	0	True				
ANR	5594066	PrimaryExpression	1		5593963	0					
ANR	5594067	ReturnType	static int		5593963	1					
ANR	5594068	Identifier	valid_bo		5593963	2					
ANR	5594069	ParameterList	"long value , ppc_cpu_t dialect , int extract"		5593963	3					
ANR	5594070	Parameter	long value	804:10:27291:27300	5593963	0	True				
ANR	5594071	ParameterType	long		5593963	0					
ANR	5594072	Identifier	value		5593963	1					
ANR	5594073	Parameter	ppc_cpu_t dialect	804:22:27303:27319	5593963	1	True				
ANR	5594074	ParameterType	ppc_cpu_t		5593963	0					
ANR	5594075	Identifier	dialect		5593963	1					
ANR	5594076	Parameter	int extract	804:41:27322:27332	5593963	2	True				
ANR	5594077	ParameterType	int		5593963	0					
ANR	5594078	Identifier	extract		5593963	1					
ANR	5594079	CFGEntryNode	ENTRY		5593963		True				
ANR	5594080	CFGExitNode	EXIT		5593963		True				
ANR	5594081	Symbol	valid		5593963						
ANR	5594082	Symbol	PPC_OPCODE_ANY		5593963						
ANR	5594083	Symbol	dialect		5593963						
ANR	5594084	Symbol	extract		5593963						
ANR	5594085	Symbol	PPC_OPCODE_POWER4		5593963						
ANR	5594086	Symbol	value		5593963						
ANR	5594087	Function	insert_bo	863:0:28449:28693							
ANR	5594088	FunctionDef	"insert_bo (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		5594087	0					
ANR	5594089	CompoundStatement		868:0:28565:28693	5594087	0					
ANR	5594090	IfStatement	"if ( ! valid_bo ( value , dialect , 0 ) )"		5594087	0					
ANR	5594091	Condition	"! valid_bo ( value , dialect , 0 )"	869:5:28572:28600	5594087	0	True				
ANR	5594092	UnaryOperationExpression	"! valid_bo ( value , dialect , 0 )"		5594087	0					
ANR	5594093	UnaryOperator	!		5594087	0					
ANR	5594094	CallExpression	"valid_bo ( value , dialect , 0 )"		5594087	1					
ANR	5594095	Callee	valid_bo		5594087	0					
ANR	5594096	Identifier	valid_bo		5594087	0					
ANR	5594097	ArgumentList	value		5594087	1					
ANR	5594098	Argument	value		5594087	0					
ANR	5594099	Identifier	value		5594087	0					
ANR	5594100	Argument	dialect		5594087	1					
ANR	5594101	Identifier	dialect		5594087	0					
ANR	5594102	Argument	0		5594087	2					
ANR	5594103	PrimaryExpression	0		5594087	0					
ANR	5594104	CompoundStatement		2:36:37:37	5594087	1					
ANR	5594105	ExpressionStatement	"* errmsg = _ ( ""invalid conditional option"" )"	870:2:28607:28649	5594087	0	True				
ANR	5594106	AssignmentExpression	"* errmsg = _ ( ""invalid conditional option"" )"		5594087	0		=			
ANR	5594107	UnaryOperationExpression	* errmsg		5594087	0					
ANR	5594108	UnaryOperator	*		5594087	0					
ANR	5594109	Identifier	errmsg		5594087	1					
ANR	5594110	CallExpression	"_ ( ""invalid conditional option"" )"		5594087	1					
ANR	5594111	Callee	_		5594087	0					
ANR	5594112	Identifier	_		5594087	0					
ANR	5594113	ArgumentList	"""invalid conditional option"""		5594087	1					
ANR	5594114	Argument	"""invalid conditional option"""		5594087	0					
ANR	5594115	PrimaryExpression	"""invalid conditional option"""		5594087	0					
ANR	5594116	ReturnStatement	return insn | ( ( value & 0x1f ) << 21 ) ;	872:1:28655:28691	5594087	1	True				
ANR	5594117	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 21 )		5594087	0		|			
ANR	5594118	Identifier	insn		5594087	0					
ANR	5594119	ShiftExpression	( value & 0x1f ) << 21		5594087	1		<<			
ANR	5594120	BitAndExpression	value & 0x1f		5594087	0		&			
ANR	5594121	Identifier	value		5594087	0					
ANR	5594122	PrimaryExpression	0x1f		5594087	1					
ANR	5594123	PrimaryExpression	21		5594087	1					
ANR	5594124	ReturnType	static unsigned long		5594087	1					
ANR	5594125	Identifier	insert_bo		5594087	2					
ANR	5594126	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		5594087	3					
ANR	5594127	Parameter	unsigned long insn	864:11:28481:28498	5594087	0	True				
ANR	5594128	ParameterType	unsigned long		5594087	0					
ANR	5594129	Identifier	insn		5594087	1					
ANR	5594130	Parameter	long value	865:4:28505:28514	5594087	1	True				
ANR	5594131	ParameterType	long		5594087	0					
ANR	5594132	Identifier	value		5594087	1					
ANR	5594133	Parameter	ppc_cpu_t dialect	866:4:28521:28537	5594087	2	True				
ANR	5594134	ParameterType	ppc_cpu_t		5594087	0					
ANR	5594135	Identifier	dialect		5594087	1					
ANR	5594136	Parameter	const char * * errmsg	867:4:28544:28562	5594087	3	True				
ANR	5594137	ParameterType	const char * *		5594087	0					
ANR	5594138	Identifier	errmsg		5594087	1					
ANR	5594139	CFGEntryNode	ENTRY		5594087		True				
ANR	5594140	CFGExitNode	EXIT		5594087		True				
ANR	5594141	Symbol	insn		5594087						
ANR	5594142	Symbol	dialect		5594087						
ANR	5594143	Symbol	errmsg		5594087						
ANR	5594144	Symbol	valid_bo		5594087						
ANR	5594145	Symbol	* errmsg		5594087						
ANR	5594146	Symbol	value		5594087						
ANR	5594147	Symbol	_		5594087						
ANR	5594148	Function	extract_bo	875:0:28696:28907							
ANR	5594149	FunctionDef	"extract_bo (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		5594148	0					
ANR	5594150	CompoundStatement		879:0:28783:28907	5594148	0					
ANR	5594151	IdentifierDeclStatement	long value ;	880:2:28787:28797	5594148	0	True				
ANR	5594152	IdentifierDecl	value		5594148	0					
ANR	5594153	IdentifierDeclType	long		5594148	0					
ANR	5594154	Identifier	value		5594148	1					
ANR	5594155	ExpressionStatement	value = ( insn >> 21 ) & 0x1f	882:2:28802:28829	5594148	1	True				
ANR	5594156	AssignmentExpression	value = ( insn >> 21 ) & 0x1f		5594148	0		=			
ANR	5594157	Identifier	value		5594148	0					
ANR	5594158	BitAndExpression	( insn >> 21 ) & 0x1f		5594148	1		&			
ANR	5594159	ShiftExpression	insn >> 21		5594148	0		>>			
ANR	5594160	Identifier	insn		5594148	0					
ANR	5594161	PrimaryExpression	21		5594148	1					
ANR	5594162	PrimaryExpression	0x1f		5594148	1					
ANR	5594163	IfStatement	"if ( ! valid_bo ( value , dialect , 1 ) )"		5594148	2					
ANR	5594164	Condition	"! valid_bo ( value , dialect , 1 )"	883:6:28837:28865	5594148	0	True				
ANR	5594165	UnaryOperationExpression	"! valid_bo ( value , dialect , 1 )"		5594148	0					
ANR	5594166	UnaryOperator	!		5594148	0					
ANR	5594167	CallExpression	"valid_bo ( value , dialect , 1 )"		5594148	1					
ANR	5594168	Callee	valid_bo		5594148	0					
ANR	5594169	Identifier	valid_bo		5594148	0					
ANR	5594170	ArgumentList	value		5594148	1					
ANR	5594171	Argument	value		5594148	0					
ANR	5594172	Identifier	value		5594148	0					
ANR	5594173	Argument	dialect		5594148	1					
ANR	5594174	Identifier	dialect		5594148	0					
ANR	5594175	Argument	1		5594148	2					
ANR	5594176	PrimaryExpression	1		5594148	0					
ANR	5594177	CompoundStatement		5:37:84:84	5594148	1					
ANR	5594178	ExpressionStatement	* invalid = 1	884:3:28873:28885	5594148	0	True				
ANR	5594179	AssignmentExpression	* invalid = 1		5594148	0		=			
ANR	5594180	UnaryOperationExpression	* invalid		5594148	0					
ANR	5594181	UnaryOperator	*		5594148	0					
ANR	5594182	Identifier	invalid		5594148	1					
ANR	5594183	PrimaryExpression	1		5594148	1					
ANR	5594184	ReturnStatement	return value ;	886:2:28893:28905	5594148	3	True				
ANR	5594185	Identifier	value		5594148	0					
ANR	5594186	ReturnType	static long		5594148	1					
ANR	5594187	Identifier	extract_bo		5594148	2					
ANR	5594188	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		5594148	3					
ANR	5594189	Parameter	unsigned long insn	876:12:28720:28737	5594148	0	True				
ANR	5594190	ParameterType	unsigned long		5594148	0					
ANR	5594191	Identifier	insn		5594148	1					
ANR	5594192	Parameter	ppc_cpu_t dialect	877:5:28745:28761	5594148	1	True				
ANR	5594193	ParameterType	ppc_cpu_t		5594148	0					
ANR	5594194	Identifier	dialect		5594148	1					
ANR	5594195	Parameter	int * invalid	878:5:28769:28780	5594148	2	True				
ANR	5594196	ParameterType	int *		5594148	0					
ANR	5594197	Identifier	invalid		5594148	1					
ANR	5594198	CFGEntryNode	ENTRY		5594148		True				
ANR	5594199	CFGExitNode	EXIT		5594148		True				
ANR	5594200	Symbol	insn		5594148						
ANR	5594201	Symbol	dialect		5594148						
ANR	5594202	Symbol	invalid		5594148						
ANR	5594203	Symbol	valid_bo		5594148						
ANR	5594204	Symbol	value		5594148						
ANR	5594205	Symbol	* invalid		5594148						
ANR	5594206	Function	insert_boe	893:0:29089:29437							
ANR	5594207	FunctionDef	"insert_boe (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		5594206	0					
ANR	5594208	CompoundStatement		898:0:29209:29437	5594206	0					
ANR	5594209	IfStatement	"if ( ! valid_bo ( value , dialect , 0 ) )"		5594206	0					
ANR	5594210	Condition	"! valid_bo ( value , dialect , 0 )"	899:5:29216:29244	5594206	0	True				
ANR	5594211	UnaryOperationExpression	"! valid_bo ( value , dialect , 0 )"		5594206	0					
ANR	5594212	UnaryOperator	!		5594206	0					
ANR	5594213	CallExpression	"valid_bo ( value , dialect , 0 )"		5594206	1					
ANR	5594214	Callee	valid_bo		5594206	0					
ANR	5594215	Identifier	valid_bo		5594206	0					
ANR	5594216	ArgumentList	value		5594206	1					
ANR	5594217	Argument	value		5594206	0					
ANR	5594218	Identifier	value		5594206	0					
ANR	5594219	Argument	dialect		5594206	1					
ANR	5594220	Identifier	dialect		5594206	0					
ANR	5594221	Argument	0		5594206	2					
ANR	5594222	PrimaryExpression	0		5594206	0					
ANR	5594223	CompoundStatement		2:36:37:37	5594206	1					
ANR	5594224	ExpressionStatement	"* errmsg = _ ( ""invalid conditional option"" )"	900:2:29251:29293	5594206	0	True				
ANR	5594225	AssignmentExpression	"* errmsg = _ ( ""invalid conditional option"" )"		5594206	0		=			
ANR	5594226	UnaryOperationExpression	* errmsg		5594206	0					
ANR	5594227	UnaryOperator	*		5594206	0					
ANR	5594228	Identifier	errmsg		5594206	1					
ANR	5594229	CallExpression	"_ ( ""invalid conditional option"" )"		5594206	1					
ANR	5594230	Callee	_		5594206	0					
ANR	5594231	Identifier	_		5594206	0					
ANR	5594232	ArgumentList	"""invalid conditional option"""		5594206	1					
ANR	5594233	Argument	"""invalid conditional option"""		5594206	0					
ANR	5594234	PrimaryExpression	"""invalid conditional option"""		5594206	0					
ANR	5594235	ElseStatement	else		5594206	0					
ANR	5594236	IfStatement	if ( ( value & 1 ) != 0 )		5594206	0					
ANR	5594237	Condition	( value & 1 ) != 0	901:12:29307:29322	5594206	0	True				
ANR	5594238	EqualityExpression	( value & 1 ) != 0		5594206	0		!=			
ANR	5594239	BitAndExpression	value & 1		5594206	0		&			
ANR	5594240	Identifier	value		5594206	0					
ANR	5594241	PrimaryExpression	1		5594206	1					
ANR	5594242	PrimaryExpression	0		5594206	1					
ANR	5594243	CompoundStatement		4:30:115:115	5594206	1					
ANR	5594244	ExpressionStatement	"* errmsg = _ ( ""attempt to set y bit when using + or - modifier"" )"	902:2:29329:29392	5594206	0	True				
ANR	5594245	AssignmentExpression	"* errmsg = _ ( ""attempt to set y bit when using + or - modifier"" )"		5594206	0		=			
ANR	5594246	UnaryOperationExpression	* errmsg		5594206	0					
ANR	5594247	UnaryOperator	*		5594206	0					
ANR	5594248	Identifier	errmsg		5594206	1					
ANR	5594249	CallExpression	"_ ( ""attempt to set y bit when using + or - modifier"" )"		5594206	1					
ANR	5594250	Callee	_		5594206	0					
ANR	5594251	Identifier	_		5594206	0					
ANR	5594252	ArgumentList	"""attempt to set y bit when using + or - modifier"""		5594206	1					
ANR	5594253	Argument	"""attempt to set y bit when using + or - modifier"""		5594206	0					
ANR	5594254	PrimaryExpression	"""attempt to set y bit when using + or - modifier"""		5594206	0					
ANR	5594255	ReturnStatement	return insn | ( ( value & 0x1f ) << 21 ) ;	905:1:29399:29435	5594206	1	True				
ANR	5594256	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 21 )		5594206	0		|			
ANR	5594257	Identifier	insn		5594206	0					
ANR	5594258	ShiftExpression	( value & 0x1f ) << 21		5594206	1		<<			
ANR	5594259	BitAndExpression	value & 0x1f		5594206	0		&			
ANR	5594260	Identifier	value		5594206	0					
ANR	5594261	PrimaryExpression	0x1f		5594206	1					
ANR	5594262	PrimaryExpression	21		5594206	1					
ANR	5594263	ReturnType	static unsigned long		5594206	1					
ANR	5594264	Identifier	insert_boe		5594206	2					
ANR	5594265	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		5594206	3					
ANR	5594266	Parameter	unsigned long insn	894:12:29122:29139	5594206	0	True				
ANR	5594267	ParameterType	unsigned long		5594206	0					
ANR	5594268	Identifier	insn		5594206	1					
ANR	5594269	Parameter	long value	895:5:29147:29156	5594206	1	True				
ANR	5594270	ParameterType	long		5594206	0					
ANR	5594271	Identifier	value		5594206	1					
ANR	5594272	Parameter	ppc_cpu_t dialect	896:5:29164:29180	5594206	2	True				
ANR	5594273	ParameterType	ppc_cpu_t		5594206	0					
ANR	5594274	Identifier	dialect		5594206	1					
ANR	5594275	Parameter	const char * * errmsg	897:5:29188:29206	5594206	3	True				
ANR	5594276	ParameterType	const char * *		5594206	0					
ANR	5594277	Identifier	errmsg		5594206	1					
ANR	5594278	CFGEntryNode	ENTRY		5594206		True				
ANR	5594279	CFGExitNode	EXIT		5594206		True				
ANR	5594280	Symbol	insn		5594206						
ANR	5594281	Symbol	dialect		5594206						
ANR	5594282	Symbol	errmsg		5594206						
ANR	5594283	Symbol	valid_bo		5594206						
ANR	5594284	Symbol	* errmsg		5594206						
ANR	5594285	Symbol	value		5594206						
ANR	5594286	Symbol	_		5594206						
ANR	5594287	Function	extract_boe	908:0:29440:29661							
ANR	5594288	FunctionDef	"extract_boe (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		5594287	0					
ANR	5594289	CompoundStatement		912:0:29530:29661	5594287	0					
ANR	5594290	IdentifierDeclStatement	long value ;	913:2:29534:29544	5594287	0	True				
ANR	5594291	IdentifierDecl	value		5594287	0					
ANR	5594292	IdentifierDeclType	long		5594287	0					
ANR	5594293	Identifier	value		5594287	1					
ANR	5594294	ExpressionStatement	value = ( insn >> 21 ) & 0x1f	915:2:29549:29576	5594287	1	True				
ANR	5594295	AssignmentExpression	value = ( insn >> 21 ) & 0x1f		5594287	0		=			
ANR	5594296	Identifier	value		5594287	0					
ANR	5594297	BitAndExpression	( insn >> 21 ) & 0x1f		5594287	1		&			
ANR	5594298	ShiftExpression	insn >> 21		5594287	0		>>			
ANR	5594299	Identifier	insn		5594287	0					
ANR	5594300	PrimaryExpression	21		5594287	1					
ANR	5594301	PrimaryExpression	0x1f		5594287	1					
ANR	5594302	IfStatement	"if ( ! valid_bo ( value , dialect , 1 ) )"		5594287	2					
ANR	5594303	Condition	"! valid_bo ( value , dialect , 1 )"	916:6:29584:29612	5594287	0	True				
ANR	5594304	UnaryOperationExpression	"! valid_bo ( value , dialect , 1 )"		5594287	0					
ANR	5594305	UnaryOperator	!		5594287	0					
ANR	5594306	CallExpression	"valid_bo ( value , dialect , 1 )"		5594287	1					
ANR	5594307	Callee	valid_bo		5594287	0					
ANR	5594308	Identifier	valid_bo		5594287	0					
ANR	5594309	ArgumentList	value		5594287	1					
ANR	5594310	Argument	value		5594287	0					
ANR	5594311	Identifier	value		5594287	0					
ANR	5594312	Argument	dialect		5594287	1					
ANR	5594313	Identifier	dialect		5594287	0					
ANR	5594314	Argument	1		5594287	2					
ANR	5594315	PrimaryExpression	1		5594287	0					
ANR	5594316	CompoundStatement		5:37:84:84	5594287	1					
ANR	5594317	ExpressionStatement	* invalid = 1	917:3:29620:29632	5594287	0	True				
ANR	5594318	AssignmentExpression	* invalid = 1		5594287	0		=			
ANR	5594319	UnaryOperationExpression	* invalid		5594287	0					
ANR	5594320	UnaryOperator	*		5594287	0					
ANR	5594321	Identifier	invalid		5594287	1					
ANR	5594322	PrimaryExpression	1		5594287	1					
ANR	5594323	ReturnStatement	return value & 0x1e ;	919:2:29640:29659	5594287	3	True				
ANR	5594324	BitAndExpression	value & 0x1e		5594287	0		&			
ANR	5594325	Identifier	value		5594287	0					
ANR	5594326	PrimaryExpression	0x1e		5594287	1					
ANR	5594327	ReturnType	static long		5594287	1					
ANR	5594328	Identifier	extract_boe		5594287	2					
ANR	5594329	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		5594287	3					
ANR	5594330	Parameter	unsigned long insn	909:13:29465:29482	5594287	0	True				
ANR	5594331	ParameterType	unsigned long		5594287	0					
ANR	5594332	Identifier	insn		5594287	1					
ANR	5594333	Parameter	ppc_cpu_t dialect	910:6:29491:29507	5594287	1	True				
ANR	5594334	ParameterType	ppc_cpu_t		5594287	0					
ANR	5594335	Identifier	dialect		5594287	1					
ANR	5594336	Parameter	int * invalid	911:6:29516:29527	5594287	2	True				
ANR	5594337	ParameterType	int *		5594287	0					
ANR	5594338	Identifier	invalid		5594287	1					
ANR	5594339	CFGEntryNode	ENTRY		5594287		True				
ANR	5594340	CFGExitNode	EXIT		5594287		True				
ANR	5594341	Symbol	insn		5594287						
ANR	5594342	Symbol	dialect		5594287						
ANR	5594343	Symbol	invalid		5594287						
ANR	5594344	Symbol	valid_bo		5594287						
ANR	5594345	Symbol	value		5594287						
ANR	5594346	Symbol	* invalid		5594287						
ANR	5594347	Function	insert_fxm	924:0:29713:31115							
ANR	5594348	FunctionDef	"insert_fxm (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		5594347	0					
ANR	5594349	CompoundStatement		929:0:29833:31115	5594347	0					
ANR	5594350	IfStatement	if ( ( insn & ( 1 << 20 ) ) != 0 )		5594347	0					
ANR	5594351	Condition	( insn & ( 1 << 20 ) ) != 0	932:6:29955:29977	5594347	0	True				
ANR	5594352	EqualityExpression	( insn & ( 1 << 20 ) ) != 0		5594347	0		!=			
ANR	5594353	BitAndExpression	insn & ( 1 << 20 )		5594347	0		&			
ANR	5594354	Identifier	insn		5594347	0					
ANR	5594355	ShiftExpression	1 << 20		5594347	1		<<			
ANR	5594356	PrimaryExpression	1		5594347	0					
ANR	5594357	PrimaryExpression	20		5594347	1					
ANR	5594358	PrimaryExpression	0		5594347	1					
ANR	5594359	CompoundStatement		5:4:150:150	5594347	1					
ANR	5594360	IfStatement	if ( value == 0 || ( value & - value ) != value )		5594347	0					
ANR	5594361	Condition	value == 0 || ( value & - value ) != value	934:10:29996:30034	5594347	0	True				
ANR	5594362	OrExpression	value == 0 || ( value & - value ) != value		5594347	0		||			
ANR	5594363	EqualityExpression	value == 0		5594347	0		==			
ANR	5594364	Identifier	value		5594347	0					
ANR	5594365	PrimaryExpression	0		5594347	1					
ANR	5594366	EqualityExpression	( value & - value ) != value		5594347	1		!=			
ANR	5594367	BitAndExpression	value & - value		5594347	0		&			
ANR	5594368	Identifier	value		5594347	0					
ANR	5594369	UnaryOperationExpression	- value		5594347	1					
ANR	5594370	UnaryOperator	-		5594347	0					
ANR	5594371	Identifier	value		5594347	1					
ANR	5594372	Identifier	value		5594347	1					
ANR	5594373	CompoundStatement		7:1:204:204	5594347	1					
ANR	5594374	ExpressionStatement	"* errmsg = _ ( ""invalid mask field"" )"	936:3:30043:30076	5594347	0	True				
ANR	5594375	AssignmentExpression	"* errmsg = _ ( ""invalid mask field"" )"		5594347	0		=			
ANR	5594376	UnaryOperationExpression	* errmsg		5594347	0					
ANR	5594377	UnaryOperator	*		5594347	0					
ANR	5594378	Identifier	errmsg		5594347	1					
ANR	5594379	CallExpression	"_ ( ""invalid mask field"" )"		5594347	1					
ANR	5594380	Callee	_		5594347	0					
ANR	5594381	Identifier	_		5594347	0					
ANR	5594382	ArgumentList	"""invalid mask field"""		5594347	1					
ANR	5594383	Argument	"""invalid mask field"""		5594347	0					
ANR	5594384	PrimaryExpression	"""invalid mask field"""		5594347	0					
ANR	5594385	ExpressionStatement	value = 0	937:3:30081:30090	5594347	1	True				
ANR	5594386	AssignmentExpression	value = 0		5594347	0		=			
ANR	5594387	Identifier	value		5594347	0					
ANR	5594388	PrimaryExpression	0		5594347	1					
ANR	5594389	ElseStatement	else		5594347	0					
ANR	5594390	IfStatement	if ( value == 0 )		5594347	0					
ANR	5594391	Condition	value == 0	945:11:30395:30404	5594347	0	True				
ANR	5594392	EqualityExpression	value == 0		5594347	0		==			
ANR	5594393	Identifier	value		5594347	0					
ANR	5594394	PrimaryExpression	0		5594347	1					
ANR	5594395	CompoundStatement		17:23:573:573	5594347	1					
ANR	5594396	ExpressionStatement		946:3:30412:30412	5594347	0	True				
ANR	5594397	ElseStatement	else		5594347	0					
ANR	5594398	IfStatement	if ( ( value & - value ) == value && ( ( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 ) ) )		5594347	0					
ANR	5594399	Condition	( value & - value ) == value && ( ( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 ) )	953:13:30748:30885	5594347	0	True				
ANR	5594400	AndExpression	( value & - value ) == value && ( ( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 ) )		5594347	0		&&			
ANR	5594401	EqualityExpression	( value & - value ) == value		5594347	0		==			
ANR	5594402	BitAndExpression	value & - value		5594347	0		&			
ANR	5594403	Identifier	value		5594347	0					
ANR	5594404	UnaryOperationExpression	- value		5594347	1					
ANR	5594405	UnaryOperator	-		5594347	0					
ANR	5594406	Identifier	value		5594347	1					
ANR	5594407	Identifier	value		5594347	1					
ANR	5594408	OrExpression	( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 )		5594347	1		||			
ANR	5594409	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) != 0		5594347	0		!=			
ANR	5594410	BitAndExpression	dialect & PPC_OPCODE_POWER4		5594347	0		&			
ANR	5594411	Identifier	dialect		5594347	0					
ANR	5594412	Identifier	PPC_OPCODE_POWER4		5594347	1					
ANR	5594413	PrimaryExpression	0		5594347	1					
ANR	5594414	AndExpression	( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1		5594347	1		&&			
ANR	5594415	EqualityExpression	( dialect & PPC_OPCODE_ANY ) != 0		5594347	0		!=			
ANR	5594416	BitAndExpression	dialect & PPC_OPCODE_ANY		5594347	0		&			
ANR	5594417	Identifier	dialect		5594347	0					
ANR	5594418	Identifier	PPC_OPCODE_ANY		5594347	1					
ANR	5594419	PrimaryExpression	0		5594347	1					
ANR	5594420	EqualityExpression	( insn & ( 0x3ff << 1 ) ) == 19 << 1		5594347	1		==			
ANR	5594421	BitAndExpression	insn & ( 0x3ff << 1 )		5594347	0		&			
ANR	5594422	Identifier	insn		5594347	0					
ANR	5594423	ShiftExpression	0x3ff << 1		5594347	1		<<			
ANR	5594424	PrimaryExpression	0x3ff		5594347	0					
ANR	5594425	PrimaryExpression	1		5594347	1					
ANR	5594426	ShiftExpression	19 << 1		5594347	1		<<			
ANR	5594427	PrimaryExpression	19		5594347	0					
ANR	5594428	PrimaryExpression	1		5594347	1					
ANR	5594429	CompoundStatement		25:153:1054:1054	5594347	1					
ANR	5594430	ExpressionStatement	insn |= 1 << 20	954:3:30893:30908	5594347	0	True				
ANR	5594431	AssignmentExpression	insn |= 1 << 20		5594347	0		|=			
ANR	5594432	Identifier	insn		5594347	0					
ANR	5594433	ShiftExpression	1 << 20		5594347	1		<<			
ANR	5594434	PrimaryExpression	1		5594347	0					
ANR	5594435	PrimaryExpression	20		5594347	1					
ANR	5594436	ElseStatement	else		5594347	0					
ANR	5594437	IfStatement	if ( ( insn & ( 0x3ff << 1 ) ) == 19 << 1 )		5594347	0					
ANR	5594438	Condition	( insn & ( 0x3ff << 1 ) ) == 19 << 1	957:13:30971:31002	5594347	0	True				
ANR	5594439	EqualityExpression	( insn & ( 0x3ff << 1 ) ) == 19 << 1		5594347	0		==			
ANR	5594440	BitAndExpression	insn & ( 0x3ff << 1 )		5594347	0		&			
ANR	5594441	Identifier	insn		5594347	0					
ANR	5594442	ShiftExpression	0x3ff << 1		5594347	1		<<			
ANR	5594443	PrimaryExpression	0x3ff		5594347	0					
ANR	5594444	PrimaryExpression	1		5594347	1					
ANR	5594445	ShiftExpression	19 << 1		5594347	1		<<			
ANR	5594446	PrimaryExpression	19		5594347	0					
ANR	5594447	PrimaryExpression	1		5594347	1					
ANR	5594448	CompoundStatement		29:47:1171:1171	5594347	1					
ANR	5594449	ExpressionStatement	"* errmsg = _ ( ""ignoring invalid mfcr mask"" )"	958:3:31010:31052	5594347	0	True				
ANR	5594450	AssignmentExpression	"* errmsg = _ ( ""ignoring invalid mfcr mask"" )"		5594347	0		=			
ANR	5594451	UnaryOperationExpression	* errmsg		5594347	0					
ANR	5594452	UnaryOperator	*		5594347	0					
ANR	5594453	Identifier	errmsg		5594347	1					
ANR	5594454	CallExpression	"_ ( ""ignoring invalid mfcr mask"" )"		5594347	1					
ANR	5594455	Callee	_		5594347	0					
ANR	5594456	Identifier	_		5594347	0					
ANR	5594457	ArgumentList	"""ignoring invalid mfcr mask"""		5594347	1					
ANR	5594458	Argument	"""ignoring invalid mfcr mask"""		5594347	0					
ANR	5594459	PrimaryExpression	"""ignoring invalid mfcr mask"""		5594347	0					
ANR	5594460	ExpressionStatement	value = 0	959:3:31057:31066	5594347	1	True				
ANR	5594461	AssignmentExpression	value = 0		5594347	0		=			
ANR	5594462	Identifier	value		5594347	0					
ANR	5594463	PrimaryExpression	0		5594347	1					
ANR	5594464	ReturnStatement	return insn | ( ( value & 0xff ) << 12 ) ;	962:2:31077:31113	5594347	1	True				
ANR	5594465	InclusiveOrExpression	insn | ( ( value & 0xff ) << 12 )		5594347	0		|			
ANR	5594466	Identifier	insn		5594347	0					
ANR	5594467	ShiftExpression	( value & 0xff ) << 12		5594347	1		<<			
ANR	5594468	BitAndExpression	value & 0xff		5594347	0		&			
ANR	5594469	Identifier	value		5594347	0					
ANR	5594470	PrimaryExpression	0xff		5594347	1					
ANR	5594471	PrimaryExpression	12		5594347	1					
ANR	5594472	ReturnType	static unsigned long		5594347	1					
ANR	5594473	Identifier	insert_fxm		5594347	2					
ANR	5594474	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		5594347	3					
ANR	5594475	Parameter	unsigned long insn	925:12:29746:29763	5594347	0	True				
ANR	5594476	ParameterType	unsigned long		5594347	0					
ANR	5594477	Identifier	insn		5594347	1					
ANR	5594478	Parameter	long value	926:5:29771:29780	5594347	1	True				
ANR	5594479	ParameterType	long		5594347	0					
ANR	5594480	Identifier	value		5594347	1					
ANR	5594481	Parameter	ppc_cpu_t dialect	927:5:29788:29804	5594347	2	True				
ANR	5594482	ParameterType	ppc_cpu_t		5594347	0					
ANR	5594483	Identifier	dialect		5594347	1					
ANR	5594484	Parameter	const char * * errmsg	928:5:29812:29830	5594347	3	True				
ANR	5594485	ParameterType	const char * *		5594347	0					
ANR	5594486	Identifier	errmsg		5594347	1					
ANR	5594487	CFGEntryNode	ENTRY		5594347		True				
ANR	5594488	CFGExitNode	EXIT		5594347		True				
ANR	5594489	Symbol	PPC_OPCODE_ANY		5594347						
ANR	5594490	Symbol	insn		5594347						
ANR	5594491	Symbol	dialect		5594347						
ANR	5594492	Symbol	PPC_OPCODE_POWER4		5594347						
ANR	5594493	Symbol	errmsg		5594347						
ANR	5594494	Symbol	* errmsg		5594347						
ANR	5594495	Symbol	value		5594347						
ANR	5594496	Symbol	_		5594347						
ANR	5594497	Function	extract_fxm	965:0:31118:31652							
ANR	5594498	FunctionDef	"extract_fxm (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5594497	0					
ANR	5594499	CompoundStatement		969:0:31225:31652	5594497	0					
ANR	5594500	IdentifierDeclStatement	long mask = ( insn >> 12 ) & 0xff ;	970:2:31229:31260	5594497	0	True				
ANR	5594501	IdentifierDecl	mask = ( insn >> 12 ) & 0xff		5594497	0					
ANR	5594502	IdentifierDeclType	long		5594497	0					
ANR	5594503	Identifier	mask		5594497	1					
ANR	5594504	AssignmentExpression	mask = ( insn >> 12 ) & 0xff		5594497	2		=			
ANR	5594505	Identifier	mask		5594497	0					
ANR	5594506	BitAndExpression	( insn >> 12 ) & 0xff		5594497	1		&			
ANR	5594507	ShiftExpression	insn >> 12		5594497	0		>>			
ANR	5594508	Identifier	insn		5594497	0					
ANR	5594509	PrimaryExpression	12		5594497	1					
ANR	5594510	PrimaryExpression	0xff		5594497	1					
ANR	5594511	IfStatement	if ( ( insn & ( 1 << 20 ) ) != 0 )		5594497	1					
ANR	5594512	Condition	( insn & ( 1 << 20 ) ) != 0	973:6:31301:31323	5594497	0	True				
ANR	5594513	EqualityExpression	( insn & ( 1 << 20 ) ) != 0		5594497	0		!=			
ANR	5594514	BitAndExpression	insn & ( 1 << 20 )		5594497	0		&			
ANR	5594515	Identifier	insn		5594497	0					
ANR	5594516	ShiftExpression	1 << 20		5594497	1		<<			
ANR	5594517	PrimaryExpression	1		5594497	0					
ANR	5594518	PrimaryExpression	20		5594497	1					
ANR	5594519	PrimaryExpression	0		5594497	1					
ANR	5594520	CompoundStatement		6:4:104:104	5594497	1					
ANR	5594521	IfStatement	if ( mask == 0 || ( mask & - mask ) != mask )		5594497	0					
ANR	5594522	Condition	mask == 0 || ( mask & - mask ) != mask	976:10:31394:31428	5594497	0	True				
ANR	5594523	OrExpression	mask == 0 || ( mask & - mask ) != mask		5594497	0		||			
ANR	5594524	EqualityExpression	mask == 0		5594497	0		==			
ANR	5594525	Identifier	mask		5594497	0					
ANR	5594526	PrimaryExpression	0		5594497	1					
ANR	5594527	EqualityExpression	( mask & - mask ) != mask		5594497	1		!=			
ANR	5594528	BitAndExpression	mask & - mask		5594497	0		&			
ANR	5594529	Identifier	mask		5594497	0					
ANR	5594530	UnaryOperationExpression	- mask		5594497	1					
ANR	5594531	UnaryOperator	-		5594497	0					
ANR	5594532	Identifier	mask		5594497	1					
ANR	5594533	Identifier	mask		5594497	1					
ANR	5594534	CompoundStatement		8:47:205:205	5594497	1					
ANR	5594535	ExpressionStatement	* invalid = 1	977:7:31440:31452	5594497	0	True				
ANR	5594536	AssignmentExpression	* invalid = 1		5594497	0		=			
ANR	5594537	UnaryOperationExpression	* invalid		5594497	0					
ANR	5594538	UnaryOperator	*		5594497	0					
ANR	5594539	Identifier	invalid		5594497	1					
ANR	5594540	PrimaryExpression	1		5594497	1					
ANR	5594541	ElseStatement	else		5594497	0					
ANR	5594542	IfStatement	if ( ( insn & ( 0x3ff << 1 ) ) == 19 << 1 )		5594497	0					
ANR	5594543	Condition	( insn & ( 0x3ff << 1 ) ) == 19 << 1	982:11:31541:31572	5594497	0	True				
ANR	5594544	EqualityExpression	( insn & ( 0x3ff << 1 ) ) == 19 << 1		5594497	0		==			
ANR	5594545	BitAndExpression	insn & ( 0x3ff << 1 )		5594497	0		&			
ANR	5594546	Identifier	insn		5594497	0					
ANR	5594547	ShiftExpression	0x3ff << 1		5594497	1		<<			
ANR	5594548	PrimaryExpression	0x3ff		5594497	0					
ANR	5594549	PrimaryExpression	1		5594497	1					
ANR	5594550	ShiftExpression	19 << 1		5594497	1		<<			
ANR	5594551	PrimaryExpression	19		5594497	0					
ANR	5594552	PrimaryExpression	1		5594497	1					
ANR	5594553	CompoundStatement		15:4:353:353	5594497	1					
ANR	5594554	IfStatement	if ( mask != 0 )		5594497	0					
ANR	5594555	Condition	mask != 0	984:9:31590:31598	5594497	0	True				
ANR	5594556	EqualityExpression	mask != 0		5594497	0		!=			
ANR	5594557	Identifier	mask		5594497	0					
ANR	5594558	PrimaryExpression	0		5594497	1					
ANR	5594559	CompoundStatement		16:20:375:375	5594497	1					
ANR	5594560	ExpressionStatement	* invalid = 1	985:6:31609:31621	5594497	0	True				
ANR	5594561	AssignmentExpression	* invalid = 1		5594497	0		=			
ANR	5594562	UnaryOperationExpression	* invalid		5594497	0					
ANR	5594563	UnaryOperator	*		5594497	0					
ANR	5594564	Identifier	invalid		5594497	1					
ANR	5594565	PrimaryExpression	1		5594497	1					
ANR	5594566	ReturnStatement	return mask ;	989:2:31639:31650	5594497	2	True				
ANR	5594567	Identifier	mask		5594497	0					
ANR	5594568	ReturnType	static long		5594497	1					
ANR	5594569	Identifier	extract_fxm		5594497	2					
ANR	5594570	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5594497	3					
ANR	5594571	Parameter	unsigned long insn	966:13:31143:31160	5594497	0	True				
ANR	5594572	ParameterType	unsigned long		5594497	0					
ANR	5594573	Identifier	insn		5594497	1					
ANR	5594574	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	967:6:31169:31202	5594497	1	True				
ANR	5594575	ParameterType	ppc_cpu_t dialect		5594497	0					
ANR	5594576	Identifier	ATTRIBUTE_UNUSED		5594497	1					
ANR	5594577	Parameter	int * invalid	968:6:31211:31222	5594497	2	True				
ANR	5594578	ParameterType	int *		5594497	0					
ANR	5594579	Identifier	invalid		5594497	1					
ANR	5594580	CFGEntryNode	ENTRY		5594497		True				
ANR	5594581	CFGExitNode	EXIT		5594497		True				
ANR	5594582	Symbol	insn		5594497						
ANR	5594583	Symbol	ATTRIBUTE_UNUSED		5594497						
ANR	5594584	Symbol	invalid		5594497						
ANR	5594585	Symbol	* invalid		5594497						
ANR	5594586	Symbol	mask		5594497						
ANR	5594587	Function	insert_mbe	997:0:31909:32842							
ANR	5594588	FunctionDef	"insert_mbe (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		5594587	0					
ANR	5594589	CompoundStatement		1002:0:32046:32842	5594587	0					
ANR	5594590	IdentifierDeclStatement	"unsigned long uval , mask ;"	1003:2:32050:32074	5594587	0	True				
ANR	5594591	IdentifierDecl	uval		5594587	0					
ANR	5594592	IdentifierDeclType	unsigned long		5594587	0					
ANR	5594593	Identifier	uval		5594587	1					
ANR	5594594	IdentifierDecl	mask		5594587	1					
ANR	5594595	IdentifierDeclType	unsigned long		5594587	0					
ANR	5594596	Identifier	mask		5594587	1					
ANR	5594597	IdentifierDeclStatement	"int mb , me , mx , count , last ;"	1004:2:32078:32105	5594587	1	True				
ANR	5594598	IdentifierDecl	mb		5594587	0					
ANR	5594599	IdentifierDeclType	int		5594587	0					
ANR	5594600	Identifier	mb		5594587	1					
ANR	5594601	IdentifierDecl	me		5594587	1					
ANR	5594602	IdentifierDeclType	int		5594587	0					
ANR	5594603	Identifier	me		5594587	1					
ANR	5594604	IdentifierDecl	mx		5594587	2					
ANR	5594605	IdentifierDeclType	int		5594587	0					
ANR	5594606	Identifier	mx		5594587	1					
ANR	5594607	IdentifierDecl	count		5594587	3					
ANR	5594608	IdentifierDeclType	int		5594587	0					
ANR	5594609	Identifier	count		5594587	1					
ANR	5594610	IdentifierDecl	last		5594587	4					
ANR	5594611	IdentifierDeclType	int		5594587	0					
ANR	5594612	Identifier	last		5594587	1					
ANR	5594613	ExpressionStatement	uval = value	1006:2:32110:32122	5594587	2	True				
ANR	5594614	AssignmentExpression	uval = value		5594587	0		=			
ANR	5594615	Identifier	uval		5594587	0					
ANR	5594616	Identifier	value		5594587	1					
ANR	5594617	IfStatement	if ( uval == 0 )		5594587	3					
ANR	5594618	Condition	uval == 0	1008:6:32131:32139	5594587	0	True				
ANR	5594619	EqualityExpression	uval == 0		5594587	0		==			
ANR	5594620	Identifier	uval		5594587	0					
ANR	5594621	PrimaryExpression	0		5594587	1					
ANR	5594622	CompoundStatement		8:4:99:99	5594587	1					
ANR	5594623	ExpressionStatement	"* errmsg = _ ( ""illegal bitmask"" )"	1010:6:32154:32184	5594587	0	True				
ANR	5594624	AssignmentExpression	"* errmsg = _ ( ""illegal bitmask"" )"		5594587	0		=			
ANR	5594625	UnaryOperationExpression	* errmsg		5594587	0					
ANR	5594626	UnaryOperator	*		5594587	0					
ANR	5594627	Identifier	errmsg		5594587	1					
ANR	5594628	CallExpression	"_ ( ""illegal bitmask"" )"		5594587	1					
ANR	5594629	Callee	_		5594587	0					
ANR	5594630	Identifier	_		5594587	0					
ANR	5594631	ArgumentList	"""illegal bitmask"""		5594587	1					
ANR	5594632	Argument	"""illegal bitmask"""		5594587	0					
ANR	5594633	PrimaryExpression	"""illegal bitmask"""		5594587	0					
ANR	5594634	ReturnStatement	return insn ;	1011:6:32192:32203	5594587	1	True				
ANR	5594635	Identifier	insn		5594587	0					
ANR	5594636	ExpressionStatement	mb = 0	1014:2:32214:32220	5594587	4	True				
ANR	5594637	AssignmentExpression	mb = 0		5594587	0		=			
ANR	5594638	Identifier	mb		5594587	0					
ANR	5594639	PrimaryExpression	0		5594587	1					
ANR	5594640	ExpressionStatement	me = 32	1015:2:32224:32231	5594587	5	True				
ANR	5594641	AssignmentExpression	me = 32		5594587	0		=			
ANR	5594642	Identifier	me		5594587	0					
ANR	5594643	PrimaryExpression	32		5594587	1					
ANR	5594644	IfStatement	if ( ( uval & 1 ) != 0 )		5594587	6					
ANR	5594645	Condition	( uval & 1 ) != 0	1016:6:32239:32253	5594587	0	True				
ANR	5594646	EqualityExpression	( uval & 1 ) != 0		5594587	0		!=			
ANR	5594647	BitAndExpression	uval & 1		5594587	0		&			
ANR	5594648	Identifier	uval		5594587	0					
ANR	5594649	PrimaryExpression	1		5594587	1					
ANR	5594650	PrimaryExpression	0		5594587	1					
ANR	5594651	CompoundStatement		15:23:209:209	5594587	1					
ANR	5594652	ExpressionStatement	last = 1	1017:3:32261:32269	5594587	0	True				
ANR	5594653	AssignmentExpression	last = 1		5594587	0		=			
ANR	5594654	Identifier	last		5594587	0					
ANR	5594655	PrimaryExpression	1		5594587	1					
ANR	5594656	ElseStatement	else		5594587	0					
ANR	5594657	CompoundStatement		17:9:233:233	5594587	0					
ANR	5594658	ExpressionStatement	last = 0	1019:3:32285:32293	5594587	0	True				
ANR	5594659	AssignmentExpression	last = 0		5594587	0		=			
ANR	5594660	Identifier	last		5594587	0					
ANR	5594661	PrimaryExpression	0		5594587	1					
ANR	5594662	ExpressionStatement	count = 0	1021:2:32301:32310	5594587	7	True				
ANR	5594663	AssignmentExpression	count = 0		5594587	0		=			
ANR	5594664	Identifier	count		5594587	0					
ANR	5594665	PrimaryExpression	0		5594587	1					
ANR	5594666	ForStatement	"for ( mx = 0 , mask = 1L << 31 ; mx < 32 ; ++ mx , mask >>= 1 )"		5594587	8					
ANR	5594667	ForInit	"mx = 0 , mask = 1L << 31 ;"	1027:7:32440:32463	5594587	0	True				
ANR	5594668	Expression	"mx = 0 , mask = 1L << 31"		5594587	0					
ANR	5594669	AssignmentExpression	mx = 0		5594587	0		=			
ANR	5594670	Identifier	mx		5594587	0					
ANR	5594671	PrimaryExpression	0		5594587	1					
ANR	5594672	AssignmentExpression	mask = 1L << 31		5594587	1		=			
ANR	5594673	Identifier	mask		5594587	0					
ANR	5594674	ShiftExpression	1L << 31		5594587	1		<<			
ANR	5594675	PrimaryExpression	1L		5594587	0					
ANR	5594676	PrimaryExpression	31		5594587	1					
ANR	5594677	Condition	mx < 32	1027:32:32465:32471	5594587	1	True				
ANR	5594678	RelationalExpression	mx < 32		5594587	0		<			
ANR	5594679	Identifier	mx		5594587	0					
ANR	5594680	PrimaryExpression	32		5594587	1					
ANR	5594681	Expression	"++ mx , mask >>= 1"	1027:41:32474:32489	5594587	2	True				
ANR	5594682	UnaryExpression	++ mx		5594587	0					
ANR	5594683	IncDec	++		5594587	0					
ANR	5594684	Identifier	mx		5594587	1					
ANR	5594685	AssignmentExpression	mask >>= 1		5594587	1		>>=			
ANR	5594686	Identifier	mask		5594587	0					
ANR	5594687	PrimaryExpression	1		5594587	1					
ANR	5594688	CompoundStatement		27:4:449:449	5594587	3					
ANR	5594689	IfStatement	if ( ( uval & mask ) && ! last )		5594587	0					
ANR	5594690	Condition	( uval & mask ) && ! last	1029:10:32508:32529	5594587	0	True				
ANR	5594691	AndExpression	( uval & mask ) && ! last		5594587	0		&&			
ANR	5594692	BitAndExpression	uval & mask		5594587	0		&			
ANR	5594693	Identifier	uval		5594587	0					
ANR	5594694	Identifier	mask		5594587	1					
ANR	5594695	UnaryOperationExpression	! last		5594587	1					
ANR	5594696	UnaryOperator	!		5594587	0					
ANR	5594697	Identifier	last		5594587	1					
ANR	5594698	CompoundStatement		29:1:486:486	5594587	1					
ANR	5594699	ExpressionStatement	++ count	1031:3:32538:32545	5594587	0	True				
ANR	5594700	UnaryExpression	++ count		5594587	0					
ANR	5594701	IncDec	++		5594587	0					
ANR	5594702	Identifier	count		5594587	1					
ANR	5594703	ExpressionStatement	mb = mx	1032:3:32550:32557	5594587	1	True				
ANR	5594704	AssignmentExpression	mb = mx		5594587	0		=			
ANR	5594705	Identifier	mb		5594587	0					
ANR	5594706	Identifier	mx		5594587	1					
ANR	5594707	ExpressionStatement	last = 1	1033:3:32562:32570	5594587	2	True				
ANR	5594708	AssignmentExpression	last = 1		5594587	0		=			
ANR	5594709	Identifier	last		5594587	0					
ANR	5594710	PrimaryExpression	1		5594587	1					
ANR	5594711	ElseStatement	else		5594587	0					
ANR	5594712	IfStatement	if ( ! ( uval & mask ) && last )		5594587	0					
ANR	5594713	Condition	! ( uval & mask ) && last	1035:15:32590:32611	5594587	0	True				
ANR	5594714	AndExpression	! ( uval & mask ) && last		5594587	0		&&			
ANR	5594715	UnaryOperationExpression	! ( uval & mask )		5594587	0					
ANR	5594716	UnaryOperator	!		5594587	0					
ANR	5594717	BitAndExpression	uval & mask		5594587	1		&			
ANR	5594718	Identifier	uval		5594587	0					
ANR	5594719	Identifier	mask		5594587	1					
ANR	5594720	Identifier	last		5594587	1					
ANR	5594721	CompoundStatement		35:1:568:568	5594587	1					
ANR	5594722	ExpressionStatement	++ count	1037:3:32620:32627	5594587	0	True				
ANR	5594723	UnaryExpression	++ count		5594587	0					
ANR	5594724	IncDec	++		5594587	0					
ANR	5594725	Identifier	count		5594587	1					
ANR	5594726	ExpressionStatement	me = mx	1038:3:32632:32639	5594587	1	True				
ANR	5594727	AssignmentExpression	me = mx		5594587	0		=			
ANR	5594728	Identifier	me		5594587	0					
ANR	5594729	Identifier	mx		5594587	1					
ANR	5594730	ExpressionStatement	last = 0	1039:3:32644:32652	5594587	2	True				
ANR	5594731	AssignmentExpression	last = 0		5594587	0		=			
ANR	5594732	Identifier	last		5594587	0					
ANR	5594733	PrimaryExpression	0		5594587	1					
ANR	5594734	IfStatement	if ( me == 0 )		5594587	9					
ANR	5594735	Condition	me == 0	1042:8:32671:32677	5594587	0	True				
ANR	5594736	EqualityExpression	me == 0		5594587	0		==			
ANR	5594737	Identifier	me		5594587	0					
ANR	5594738	PrimaryExpression	0		5594587	1					
ANR	5594739	CompoundStatement		41:17:633:633	5594587	1					
ANR	5594740	ExpressionStatement	me = 32	1043:5:32687:32694	5594587	0	True				
ANR	5594741	AssignmentExpression	me = 32		5594587	0		=			
ANR	5594742	Identifier	me		5594587	0					
ANR	5594743	PrimaryExpression	32		5594587	1					
ANR	5594744	IfStatement	if ( count != 2 && ( count != 0 || ! last ) )		5594587	10					
ANR	5594745	Condition	count != 2 && ( count != 0 || ! last )	1046:8:32711:32745	5594587	0	True				
ANR	5594746	AndExpression	count != 2 && ( count != 0 || ! last )		5594587	0		&&			
ANR	5594747	EqualityExpression	count != 2		5594587	0		!=			
ANR	5594748	Identifier	count		5594587	0					
ANR	5594749	PrimaryExpression	2		5594587	1					
ANR	5594750	OrExpression	count != 0 || ! last		5594587	1		||			
ANR	5594751	EqualityExpression	count != 0		5594587	0		!=			
ANR	5594752	Identifier	count		5594587	0					
ANR	5594753	PrimaryExpression	0		5594587	1					
ANR	5594754	UnaryOperationExpression	! last		5594587	1					
ANR	5594755	UnaryOperator	!		5594587	0					
ANR	5594756	Identifier	last		5594587	1					
ANR	5594757	CompoundStatement		45:45:701:701	5594587	1					
ANR	5594758	ExpressionStatement	"* errmsg = _ ( ""illegal bitmask"" )"	1047:5:32755:32786	5594587	0	True				
ANR	5594759	AssignmentExpression	"* errmsg = _ ( ""illegal bitmask"" )"		5594587	0		=			
ANR	5594760	UnaryOperationExpression	* errmsg		5594587	0					
ANR	5594761	UnaryOperator	*		5594587	0					
ANR	5594762	Identifier	errmsg		5594587	1					
ANR	5594763	CallExpression	"_ ( ""illegal bitmask"" )"		5594587	1					
ANR	5594764	Callee	_		5594587	0					
ANR	5594765	Identifier	_		5594587	0					
ANR	5594766	ArgumentList	"""illegal bitmask"""		5594587	1					
ANR	5594767	Argument	"""illegal bitmask"""		5594587	0					
ANR	5594768	PrimaryExpression	"""illegal bitmask"""		5594587	0					
ANR	5594769	ReturnStatement	return insn | ( mb << 6 ) | ( ( me - 1 ) << 1 ) ;	1050:4:32799:32840	5594587	11	True				
ANR	5594770	InclusiveOrExpression	insn | ( mb << 6 ) | ( ( me - 1 ) << 1 )		5594587	0		|			
ANR	5594771	Identifier	insn		5594587	0					
ANR	5594772	InclusiveOrExpression	( mb << 6 ) | ( ( me - 1 ) << 1 )		5594587	1		|			
ANR	5594773	ShiftExpression	mb << 6		5594587	0		<<			
ANR	5594774	Identifier	mb		5594587	0					
ANR	5594775	PrimaryExpression	6		5594587	1					
ANR	5594776	ShiftExpression	( me - 1 ) << 1		5594587	1		<<			
ANR	5594777	AdditiveExpression	me - 1		5594587	0		-			
ANR	5594778	Identifier	me		5594587	0					
ANR	5594779	PrimaryExpression	1		5594587	1					
ANR	5594780	PrimaryExpression	1		5594587	1					
ANR	5594781	ReturnType	static unsigned long		5594587	1					
ANR	5594782	Identifier	insert_mbe		5594587	2					
ANR	5594783	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		5594587	3					
ANR	5594784	Parameter	unsigned long insn	998:12:31942:31959	5594587	0	True				
ANR	5594785	ParameterType	unsigned long		5594587	0					
ANR	5594786	Identifier	insn		5594587	1					
ANR	5594787	Parameter	long value	999:5:31967:31976	5594587	1	True				
ANR	5594788	ParameterType	long		5594587	0					
ANR	5594789	Identifier	value		5594587	1					
ANR	5594790	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1000:5:31984:32017	5594587	2	True				
ANR	5594791	ParameterType	ppc_cpu_t dialect		5594587	0					
ANR	5594792	Identifier	ATTRIBUTE_UNUSED		5594587	1					
ANR	5594793	Parameter	const char * * errmsg	1001:5:32025:32043	5594587	3	True				
ANR	5594794	ParameterType	const char * *		5594587	0					
ANR	5594795	Identifier	errmsg		5594587	1					
ANR	5594796	CFGEntryNode	ENTRY		5594587		True				
ANR	5594797	CFGExitNode	EXIT		5594587		True				
ANR	5594798	Symbol	ATTRIBUTE_UNUSED		5594587						
ANR	5594799	Symbol	last		5594587						
ANR	5594800	Symbol	count		5594587						
ANR	5594801	Symbol	errmsg		5594587						
ANR	5594802	Symbol	mx		5594587						
ANR	5594803	Symbol	insn		5594587						
ANR	5594804	Symbol	mb		5594587						
ANR	5594805	Symbol	me		5594587						
ANR	5594806	Symbol	uval		5594587						
ANR	5594807	Symbol	* errmsg		5594587						
ANR	5594808	Symbol	value		5594587						
ANR	5594809	Symbol	mask		5594587						
ANR	5594810	Symbol	_		5594587						
ANR	5594811	Function	extract_mbe	1053:0:32845:33352							
ANR	5594812	FunctionDef	"extract_mbe (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5594811	0					
ANR	5594813	CompoundStatement		1057:0:32952:33352	5594811	0					
ANR	5594814	IdentifierDeclStatement	long ret ;	1058:2:32956:32964	5594811	0	True				
ANR	5594815	IdentifierDecl	ret		5594811	0					
ANR	5594816	IdentifierDeclType	long		5594811	0					
ANR	5594817	Identifier	ret		5594811	1					
ANR	5594818	IdentifierDeclStatement	"int mb , me ;"	1059:2:32968:32978	5594811	1	True				
ANR	5594819	IdentifierDecl	mb		5594811	0					
ANR	5594820	IdentifierDeclType	int		5594811	0					
ANR	5594821	Identifier	mb		5594811	1					
ANR	5594822	IdentifierDecl	me		5594811	1					
ANR	5594823	IdentifierDeclType	int		5594811	0					
ANR	5594824	Identifier	me		5594811	1					
ANR	5594825	IdentifierDeclStatement	int i ;	1060:2:32982:32987	5594811	2	True				
ANR	5594826	IdentifierDecl	i		5594811	0					
ANR	5594827	IdentifierDeclType	int		5594811	0					
ANR	5594828	Identifier	i		5594811	1					
ANR	5594829	ExpressionStatement	* invalid = 1	1062:2:32992:33004	5594811	3	True				
ANR	5594830	AssignmentExpression	* invalid = 1		5594811	0		=			
ANR	5594831	UnaryOperationExpression	* invalid		5594811	0					
ANR	5594832	UnaryOperator	*		5594811	0					
ANR	5594833	Identifier	invalid		5594811	1					
ANR	5594834	PrimaryExpression	1		5594811	1					
ANR	5594835	ExpressionStatement	mb = ( insn >> 6 ) & 0x1f	1064:2:33009:33032	5594811	4	True				
ANR	5594836	AssignmentExpression	mb = ( insn >> 6 ) & 0x1f		5594811	0		=			
ANR	5594837	Identifier	mb		5594811	0					
ANR	5594838	BitAndExpression	( insn >> 6 ) & 0x1f		5594811	1		&			
ANR	5594839	ShiftExpression	insn >> 6		5594811	0		>>			
ANR	5594840	Identifier	insn		5594811	0					
ANR	5594841	PrimaryExpression	6		5594811	1					
ANR	5594842	PrimaryExpression	0x1f		5594811	1					
ANR	5594843	ExpressionStatement	me = ( insn >> 1 ) & 0x1f	1065:2:33036:33059	5594811	5	True				
ANR	5594844	AssignmentExpression	me = ( insn >> 1 ) & 0x1f		5594811	0		=			
ANR	5594845	Identifier	me		5594811	0					
ANR	5594846	BitAndExpression	( insn >> 1 ) & 0x1f		5594811	1		&			
ANR	5594847	ShiftExpression	insn >> 1		5594811	0		>>			
ANR	5594848	Identifier	insn		5594811	0					
ANR	5594849	PrimaryExpression	1		5594811	1					
ANR	5594850	PrimaryExpression	0x1f		5594811	1					
ANR	5594851	IfStatement	if ( mb < me + 1 )		5594811	6					
ANR	5594852	Condition	mb < me + 1	1066:6:33067:33077	5594811	0	True				
ANR	5594853	RelationalExpression	mb < me + 1		5594811	0		<			
ANR	5594854	Identifier	mb		5594811	0					
ANR	5594855	AdditiveExpression	me + 1		5594811	1		+			
ANR	5594856	Identifier	me		5594811	0					
ANR	5594857	PrimaryExpression	1		5594811	1					
ANR	5594858	CompoundStatement		11:4:131:131	5594811	1					
ANR	5594859	ExpressionStatement	ret = 0	1068:6:33092:33099	5594811	0	True				
ANR	5594860	AssignmentExpression	ret = 0		5594811	0		=			
ANR	5594861	Identifier	ret		5594811	0					
ANR	5594862	PrimaryExpression	0		5594811	1					
ANR	5594863	ForStatement	for ( i = mb ; i <= me ; i ++ )		5594811	1					
ANR	5594864	ForInit	i = mb ;	1069:11:33112:33118	5594811	0	True				
ANR	5594865	AssignmentExpression	i = mb		5594811	0		=			
ANR	5594866	Identifier	i		5594811	0					
ANR	5594867	Identifier	mb		5594811	1					
ANR	5594868	Condition	i <= me	1069:19:33120:33126	5594811	1	True				
ANR	5594869	RelationalExpression	i <= me		5594811	0		<=			
ANR	5594870	Identifier	i		5594811	0					
ANR	5594871	Identifier	me		5594811	1					
ANR	5594872	PostIncDecOperationExpression	i ++	1069:28:33129:33131	5594811	2	True				
ANR	5594873	Identifier	i		5594811	0					
ANR	5594874	IncDec	++		5594811	1					
ANR	5594875	CompoundStatement		13:33:181:181	5594811	3					
ANR	5594876	ExpressionStatement	ret |= 1L << ( 31 - i )	1070:7:33143:33164	5594811	0	True				
ANR	5594877	AssignmentExpression	ret |= 1L << ( 31 - i )		5594811	0		|=			
ANR	5594878	Identifier	ret		5594811	0					
ANR	5594879	ShiftExpression	1L << ( 31 - i )		5594811	1		<<			
ANR	5594880	PrimaryExpression	1L		5594811	0					
ANR	5594881	AdditiveExpression	31 - i		5594811	1		-			
ANR	5594882	PrimaryExpression	31		5594811	0					
ANR	5594883	Identifier	i		5594811	1					
ANR	5594884	ElseStatement	else		5594811	0					
ANR	5594885	IfStatement	if ( mb == me + 1 )		5594811	0					
ANR	5594886	Condition	mb == me + 1	1072:13:33187:33198	5594811	0	True				
ANR	5594887	EqualityExpression	mb == me + 1		5594811	0		==			
ANR	5594888	Identifier	mb		5594811	0					
ANR	5594889	AdditiveExpression	me + 1		5594811	1		+			
ANR	5594890	Identifier	me		5594811	0					
ANR	5594891	PrimaryExpression	1		5594811	1					
ANR	5594892	CompoundStatement		16:27:248:248	5594811	1					
ANR	5594893	ExpressionStatement	ret = ~0	1073:3:33206:33214	5594811	0	True				
ANR	5594894	AssignmentExpression	ret = ~0		5594811	0		=			
ANR	5594895	Identifier	ret		5594811	0					
ANR	5594896	Identifier	~0		5594811	1					
ANR	5594897	ElseStatement	else		5594811	0					
ANR	5594898	CompoundStatement		19:2:294:294	5594811	0					
ANR	5594899	ExpressionStatement	ret = ~0	1076:3:33252:33260	5594811	0	True				
ANR	5594900	AssignmentExpression	ret = ~0		5594811	0		=			
ANR	5594901	Identifier	ret		5594811	0					
ANR	5594902	Identifier	~0		5594811	1					
ANR	5594903	ForStatement	for ( i = me + 1 ; i < mb ; i ++ )		5594811	1					
ANR	5594904	ForInit	i = me + 1 ;	1077:8:33270:33280	5594811	0	True				
ANR	5594905	AssignmentExpression	i = me + 1		5594811	0		=			
ANR	5594906	Identifier	i		5594811	0					
ANR	5594907	AdditiveExpression	me + 1		5594811	1		+			
ANR	5594908	Identifier	me		5594811	0					
ANR	5594909	PrimaryExpression	1		5594811	1					
ANR	5594910	Condition	i < mb	1077:20:33282:33287	5594811	1	True				
ANR	5594911	RelationalExpression	i < mb		5594811	0		<			
ANR	5594912	Identifier	i		5594811	0					
ANR	5594913	Identifier	mb		5594811	1					
ANR	5594914	PostIncDecOperationExpression	i ++	1077:28:33290:33292	5594811	2	True				
ANR	5594915	Identifier	i		5594811	0					
ANR	5594916	IncDec	++		5594811	1					
ANR	5594917	CompoundStatement		21:33:342:342	5594811	3					
ANR	5594918	ExpressionStatement	ret &= ~ ( 1L << ( 31 - i ) )	1078:4:33301:33325	5594811	0	True				
ANR	5594919	AssignmentExpression	ret &= ~ ( 1L << ( 31 - i ) )		5594811	0		&=			
ANR	5594920	Identifier	ret		5594811	0					
ANR	5594921	UnaryOperationExpression	~ ( 1L << ( 31 - i ) )		5594811	1					
ANR	5594922	UnaryOperator	~		5594811	0					
ANR	5594923	ShiftExpression	1L << ( 31 - i )		5594811	1		<<			
ANR	5594924	PrimaryExpression	1L		5594811	0					
ANR	5594925	AdditiveExpression	31 - i		5594811	1		-			
ANR	5594926	PrimaryExpression	31		5594811	0					
ANR	5594927	Identifier	i		5594811	1					
ANR	5594928	ReturnStatement	return ret ;	1081:2:33340:33350	5594811	7	True				
ANR	5594929	Identifier	ret		5594811	0					
ANR	5594930	ReturnType	static long		5594811	1					
ANR	5594931	Identifier	extract_mbe		5594811	2					
ANR	5594932	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5594811	3					
ANR	5594933	Parameter	unsigned long insn	1054:13:32870:32887	5594811	0	True				
ANR	5594934	ParameterType	unsigned long		5594811	0					
ANR	5594935	Identifier	insn		5594811	1					
ANR	5594936	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1055:6:32896:32929	5594811	1	True				
ANR	5594937	ParameterType	ppc_cpu_t dialect		5594811	0					
ANR	5594938	Identifier	ATTRIBUTE_UNUSED		5594811	1					
ANR	5594939	Parameter	int * invalid	1056:6:32938:32949	5594811	2	True				
ANR	5594940	ParameterType	int *		5594811	0					
ANR	5594941	Identifier	invalid		5594811	1					
ANR	5594942	CFGEntryNode	ENTRY		5594811		True				
ANR	5594943	CFGExitNode	EXIT		5594811		True				
ANR	5594944	Symbol	ret		5594811						
ANR	5594945	Symbol	insn		5594811						
ANR	5594946	Symbol	ATTRIBUTE_UNUSED		5594811						
ANR	5594947	Symbol	~0		5594811						
ANR	5594948	Symbol	mb		5594811						
ANR	5594949	Symbol	invalid		5594811						
ANR	5594950	Symbol	me		5594811						
ANR	5594951	Symbol	i		5594811						
ANR	5594952	Symbol	* invalid		5594811						
ANR	5594953	DeclStmt									
ANR	5594954	Decl							long	long	ret
ANR	5594955	Function	extract_nsi	1135:0:34581:34755							
ANR	5594956	FunctionDef	"extract_nsi (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5594955	0					
ANR	5594957	CompoundStatement		1139:0:34688:34755	5594955	0					
ANR	5594958	ExpressionStatement	* invalid = 1	1140:2:34692:34704	5594955	0	True				
ANR	5594959	AssignmentExpression	* invalid = 1		5594955	0		=			
ANR	5594960	UnaryOperationExpression	* invalid		5594955	0					
ANR	5594961	UnaryOperator	*		5594955	0					
ANR	5594962	Identifier	invalid		5594955	1					
ANR	5594963	PrimaryExpression	1		5594955	1					
ANR	5594964	ReturnStatement	return - ( ( ( insn & 0xffff ) ^ 0x8000 ) - 0x8000 ) ;	1141:2:34708:34753	5594955	1	True				
ANR	5594965	UnaryOperationExpression	- ( ( ( insn & 0xffff ) ^ 0x8000 ) - 0x8000 )		5594955	0					
ANR	5594966	UnaryOperator	-		5594955	0					
ANR	5594967	AdditiveExpression	( ( insn & 0xffff ) ^ 0x8000 ) - 0x8000		5594955	1		-			
ANR	5594968	ExclusiveOrExpression	( insn & 0xffff ) ^ 0x8000		5594955	0		^			
ANR	5594969	BitAndExpression	insn & 0xffff		5594955	0		&			
ANR	5594970	Identifier	insn		5594955	0					
ANR	5594971	PrimaryExpression	0xffff		5594955	1					
ANR	5594972	PrimaryExpression	0x8000		5594955	1					
ANR	5594973	PrimaryExpression	0x8000		5594955	1					
ANR	5594974	ReturnType	static long		5594955	1					
ANR	5594975	Identifier	extract_nsi		5594955	2					
ANR	5594976	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5594955	3					
ANR	5594977	Parameter	unsigned long insn	1136:13:34606:34623	5594955	0	True				
ANR	5594978	ParameterType	unsigned long		5594955	0					
ANR	5594979	Identifier	insn		5594955	1					
ANR	5594980	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1137:6:34632:34665	5594955	1	True				
ANR	5594981	ParameterType	ppc_cpu_t dialect		5594955	0					
ANR	5594982	Identifier	ATTRIBUTE_UNUSED		5594955	1					
ANR	5594983	Parameter	int * invalid	1138:6:34674:34685	5594955	2	True				
ANR	5594984	ParameterType	int *		5594955	0					
ANR	5594985	Identifier	invalid		5594955	1					
ANR	5594986	CFGEntryNode	ENTRY		5594955		True				
ANR	5594987	CFGExitNode	EXIT		5594955		True				
ANR	5594988	Symbol	insn		5594955						
ANR	5594989	Symbol	ATTRIBUTE_UNUSED		5594955						
ANR	5594990	Symbol	invalid		5594955						
ANR	5594991	Symbol	* invalid		5594955						
ANR	5594992	Function	insert_ral	1148:0:34919:35222							
ANR	5594993	FunctionDef	"insert_ral (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		5594992	0					
ANR	5594994	CompoundStatement		1153:0:35056:35222	5594992	0					
ANR	5594995	IfStatement	if ( value == 0 || ( unsigned long ) value == ( ( insn >> 21 ) & 0x1f ) )		5594992	0					
ANR	5594996	Condition	value == 0 || ( unsigned long ) value == ( ( insn >> 21 ) & 0x1f )	1154:5:35063:35121	5594992	0	True				
ANR	5594997	OrExpression	value == 0 || ( unsigned long ) value == ( ( insn >> 21 ) & 0x1f )		5594992	0		||			
ANR	5594998	EqualityExpression	value == 0		5594992	0		==			
ANR	5594999	Identifier	value		5594992	0					
ANR	5595000	PrimaryExpression	0		5594992	1					
ANR	5595001	EqualityExpression	( unsigned long ) value == ( ( insn >> 21 ) & 0x1f )		5594992	1		==			
ANR	5595002	CastExpression	( unsigned long ) value		5594992	0					
ANR	5595003	CastTarget	unsigned long		5594992	0					
ANR	5595004	Identifier	value		5594992	1					
ANR	5595005	BitAndExpression	( insn >> 21 ) & 0x1f		5594992	1		&			
ANR	5595006	ShiftExpression	insn >> 21		5594992	0		>>			
ANR	5595007	Identifier	insn		5594992	0					
ANR	5595008	PrimaryExpression	21		5594992	1					
ANR	5595009	PrimaryExpression	0x1f		5594992	1					
ANR	5595010	CompoundStatement		2:66:67:67	5594992	1					
ANR	5595011	ExpressionStatement	"* errmsg = ""invalid register operand when updating"""	1155:2:35128:35178	5594992	0	True				
ANR	5595012	AssignmentExpression	"* errmsg = ""invalid register operand when updating"""		5594992	0		=			
ANR	5595013	UnaryOperationExpression	* errmsg		5594992	0					
ANR	5595014	UnaryOperator	*		5594992	0					
ANR	5595015	Identifier	errmsg		5594992	1					
ANR	5595016	PrimaryExpression	"""invalid register operand when updating"""		5594992	1					
ANR	5595017	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1157:1:35184:35220	5594992	1	True				
ANR	5595018	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		5594992	0		|			
ANR	5595019	Identifier	insn		5594992	0					
ANR	5595020	ShiftExpression	( value & 0x1f ) << 16		5594992	1		<<			
ANR	5595021	BitAndExpression	value & 0x1f		5594992	0		&			
ANR	5595022	Identifier	value		5594992	0					
ANR	5595023	PrimaryExpression	0x1f		5594992	1					
ANR	5595024	PrimaryExpression	16		5594992	1					
ANR	5595025	ReturnType	static unsigned long		5594992	1					
ANR	5595026	Identifier	insert_ral		5594992	2					
ANR	5595027	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		5594992	3					
ANR	5595028	Parameter	unsigned long insn	1149:12:34952:34969	5594992	0	True				
ANR	5595029	ParameterType	unsigned long		5594992	0					
ANR	5595030	Identifier	insn		5594992	1					
ANR	5595031	Parameter	long value	1150:5:34977:34986	5594992	1	True				
ANR	5595032	ParameterType	long		5594992	0					
ANR	5595033	Identifier	value		5594992	1					
ANR	5595034	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1151:5:34994:35027	5594992	2	True				
ANR	5595035	ParameterType	ppc_cpu_t dialect		5594992	0					
ANR	5595036	Identifier	ATTRIBUTE_UNUSED		5594992	1					
ANR	5595037	Parameter	const char * * errmsg	1152:5:35035:35053	5594992	3	True				
ANR	5595038	ParameterType	const char * *		5594992	0					
ANR	5595039	Identifier	errmsg		5594992	1					
ANR	5595040	CFGEntryNode	ENTRY		5594992		True				
ANR	5595041	CFGExitNode	EXIT		5594992		True				
ANR	5595042	Symbol	insn		5594992						
ANR	5595043	Symbol	ATTRIBUTE_UNUSED		5594992						
ANR	5595044	Symbol	errmsg		5594992						
ANR	5595045	Symbol	* errmsg		5594992						
ANR	5595046	Symbol	value		5594992						
ANR	5595047	Function	insert_ram	1163:0:35310:35593							
ANR	5595048	FunctionDef	"insert_ram (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		5595047	0					
ANR	5595049	CompoundStatement		1168:0:35447:35593	5595047	0					
ANR	5595050	IfStatement	if ( ( unsigned long ) value >= ( ( insn >> 21 ) & 0x1f ) )		5595047	0					
ANR	5595051	Condition	( unsigned long ) value >= ( ( insn >> 21 ) & 0x1f )	1169:5:35454:35498	5595047	0	True				
ANR	5595052	RelationalExpression	( unsigned long ) value >= ( ( insn >> 21 ) & 0x1f )		5595047	0		>=			
ANR	5595053	CastExpression	( unsigned long ) value		5595047	0					
ANR	5595054	CastTarget	unsigned long		5595047	0					
ANR	5595055	Identifier	value		5595047	1					
ANR	5595056	BitAndExpression	( insn >> 21 ) & 0x1f		5595047	1		&			
ANR	5595057	ShiftExpression	insn >> 21		5595047	0		>>			
ANR	5595058	Identifier	insn		5595047	0					
ANR	5595059	PrimaryExpression	21		5595047	1					
ANR	5595060	PrimaryExpression	0x1f		5595047	1					
ANR	5595061	CompoundStatement		2:52:53:53	5595047	1					
ANR	5595062	ExpressionStatement	"* errmsg = _ ( ""index register in load range"" )"	1170:2:35505:35549	5595047	0	True				
ANR	5595063	AssignmentExpression	"* errmsg = _ ( ""index register in load range"" )"		5595047	0		=			
ANR	5595064	UnaryOperationExpression	* errmsg		5595047	0					
ANR	5595065	UnaryOperator	*		5595047	0					
ANR	5595066	Identifier	errmsg		5595047	1					
ANR	5595067	CallExpression	"_ ( ""index register in load range"" )"		5595047	1					
ANR	5595068	Callee	_		5595047	0					
ANR	5595069	Identifier	_		5595047	0					
ANR	5595070	ArgumentList	"""index register in load range"""		5595047	1					
ANR	5595071	Argument	"""index register in load range"""		5595047	0					
ANR	5595072	PrimaryExpression	"""index register in load range"""		5595047	0					
ANR	5595073	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1172:1:35555:35591	5595047	1	True				
ANR	5595074	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		5595047	0		|			
ANR	5595075	Identifier	insn		5595047	0					
ANR	5595076	ShiftExpression	( value & 0x1f ) << 16		5595047	1		<<			
ANR	5595077	BitAndExpression	value & 0x1f		5595047	0		&			
ANR	5595078	Identifier	value		5595047	0					
ANR	5595079	PrimaryExpression	0x1f		5595047	1					
ANR	5595080	PrimaryExpression	16		5595047	1					
ANR	5595081	ReturnType	static unsigned long		5595047	1					
ANR	5595082	Identifier	insert_ram		5595047	2					
ANR	5595083	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		5595047	3					
ANR	5595084	Parameter	unsigned long insn	1164:12:35343:35360	5595047	0	True				
ANR	5595085	ParameterType	unsigned long		5595047	0					
ANR	5595086	Identifier	insn		5595047	1					
ANR	5595087	Parameter	long value	1165:5:35368:35377	5595047	1	True				
ANR	5595088	ParameterType	long		5595047	0					
ANR	5595089	Identifier	value		5595047	1					
ANR	5595090	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1166:5:35385:35418	5595047	2	True				
ANR	5595091	ParameterType	ppc_cpu_t dialect		5595047	0					
ANR	5595092	Identifier	ATTRIBUTE_UNUSED		5595047	1					
ANR	5595093	Parameter	const char * * errmsg	1167:5:35426:35444	5595047	3	True				
ANR	5595094	ParameterType	const char * *		5595047	0					
ANR	5595095	Identifier	errmsg		5595047	1					
ANR	5595096	CFGEntryNode	ENTRY		5595047		True				
ANR	5595097	CFGExitNode	EXIT		5595047		True				
ANR	5595098	Symbol	insn		5595047						
ANR	5595099	Symbol	ATTRIBUTE_UNUSED		5595047						
ANR	5595100	Symbol	errmsg		5595047						
ANR	5595101	Symbol	* errmsg		5595047						
ANR	5595102	Symbol	value		5595047						
ANR	5595103	Symbol	_		5595047						
ANR	5595104	Function	insert_raq	1178:0:35689:36014							
ANR	5595105	FunctionDef	"insert_raq (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		5595104	0					
ANR	5595106	CompoundStatement		1183:0:35826:36014	5595104	0					
ANR	5595107	IdentifierDeclStatement	long rtvalue = ( insn & RT_MASK ) >> 21 ;	1184:2:35830:35867	5595104	0	True				
ANR	5595108	IdentifierDecl	rtvalue = ( insn & RT_MASK ) >> 21		5595104	0					
ANR	5595109	IdentifierDeclType	long		5595104	0					
ANR	5595110	Identifier	rtvalue		5595104	1					
ANR	5595111	AssignmentExpression	rtvalue = ( insn & RT_MASK ) >> 21		5595104	2		=			
ANR	5595112	Identifier	rtvalue		5595104	0					
ANR	5595113	ShiftExpression	( insn & RT_MASK ) >> 21		5595104	1		>>			
ANR	5595114	BitAndExpression	insn & RT_MASK		5595104	0		&			
ANR	5595115	Identifier	insn		5595104	0					
ANR	5595116	Identifier	RT_MASK		5595104	1					
ANR	5595117	PrimaryExpression	21		5595104	1					
ANR	5595118	IfStatement	if ( value == rtvalue )		5595104	1					
ANR	5595119	Condition	value == rtvalue	1186:6:35876:35891	5595104	0	True				
ANR	5595120	EqualityExpression	value == rtvalue		5595104	0		==			
ANR	5595121	Identifier	value		5595104	0					
ANR	5595122	Identifier	rtvalue		5595104	1					
ANR	5595123	CompoundStatement		4:24:67:67	5595104	1					
ANR	5595124	ExpressionStatement	"* errmsg = _ ( ""source and target register operands must be different"" )"	1187:3:35899:35968	5595104	0	True				
ANR	5595125	AssignmentExpression	"* errmsg = _ ( ""source and target register operands must be different"" )"		5595104	0		=			
ANR	5595126	UnaryOperationExpression	* errmsg		5595104	0					
ANR	5595127	UnaryOperator	*		5595104	0					
ANR	5595128	Identifier	errmsg		5595104	1					
ANR	5595129	CallExpression	"_ ( ""source and target register operands must be different"" )"		5595104	1					
ANR	5595130	Callee	_		5595104	0					
ANR	5595131	Identifier	_		5595104	0					
ANR	5595132	ArgumentList	"""source and target register operands must be different"""		5595104	1					
ANR	5595133	Argument	"""source and target register operands must be different"""		5595104	0					
ANR	5595134	PrimaryExpression	"""source and target register operands must be different"""		5595104	0					
ANR	5595135	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1189:2:35976:36012	5595104	2	True				
ANR	5595136	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		5595104	0		|			
ANR	5595137	Identifier	insn		5595104	0					
ANR	5595138	ShiftExpression	( value & 0x1f ) << 16		5595104	1		<<			
ANR	5595139	BitAndExpression	value & 0x1f		5595104	0		&			
ANR	5595140	Identifier	value		5595104	0					
ANR	5595141	PrimaryExpression	0x1f		5595104	1					
ANR	5595142	PrimaryExpression	16		5595104	1					
ANR	5595143	ReturnType	static unsigned long		5595104	1					
ANR	5595144	Identifier	insert_raq		5595104	2					
ANR	5595145	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		5595104	3					
ANR	5595146	Parameter	unsigned long insn	1179:12:35722:35739	5595104	0	True				
ANR	5595147	ParameterType	unsigned long		5595104	0					
ANR	5595148	Identifier	insn		5595104	1					
ANR	5595149	Parameter	long value	1180:5:35747:35756	5595104	1	True				
ANR	5595150	ParameterType	long		5595104	0					
ANR	5595151	Identifier	value		5595104	1					
ANR	5595152	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1181:5:35764:35797	5595104	2	True				
ANR	5595153	ParameterType	ppc_cpu_t dialect		5595104	0					
ANR	5595154	Identifier	ATTRIBUTE_UNUSED		5595104	1					
ANR	5595155	Parameter	const char * * errmsg	1182:5:35805:35823	5595104	3	True				
ANR	5595156	ParameterType	const char * *		5595104	0					
ANR	5595157	Identifier	errmsg		5595104	1					
ANR	5595158	CFGEntryNode	ENTRY		5595104		True				
ANR	5595159	CFGExitNode	EXIT		5595104		True				
ANR	5595160	Symbol	insn		5595104						
ANR	5595161	Symbol	ATTRIBUTE_UNUSED		5595104						
ANR	5595162	Symbol	errmsg		5595104						
ANR	5595163	Symbol	rtvalue		5595104						
ANR	5595164	Symbol	* errmsg		5595104						
ANR	5595165	Symbol	value		5595104						
ANR	5595166	Symbol	RT_MASK		5595104						
ANR	5595167	Symbol	_		5595104						
ANR	5595168	Function	insert_ras	1196:0:36183:36441							
ANR	5595169	FunctionDef	"insert_ras (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		5595168	0					
ANR	5595170	CompoundStatement		1201:0:36320:36441	5595168	0					
ANR	5595171	IfStatement	if ( value == 0 )		5595168	0					
ANR	5595172	Condition	value == 0	1202:5:36327:36336	5595168	0	True				
ANR	5595173	EqualityExpression	value == 0		5595168	0		==			
ANR	5595174	Identifier	value		5595168	0					
ANR	5595175	PrimaryExpression	0		5595168	1					
ANR	5595176	CompoundStatement		2:17:18:18	5595168	1					
ANR	5595177	ExpressionStatement	"* errmsg = _ ( ""invalid register operand when updating"" )"	1203:2:36343:36397	5595168	0	True				
ANR	5595178	AssignmentExpression	"* errmsg = _ ( ""invalid register operand when updating"" )"		5595168	0		=			
ANR	5595179	UnaryOperationExpression	* errmsg		5595168	0					
ANR	5595180	UnaryOperator	*		5595168	0					
ANR	5595181	Identifier	errmsg		5595168	1					
ANR	5595182	CallExpression	"_ ( ""invalid register operand when updating"" )"		5595168	1					
ANR	5595183	Callee	_		5595168	0					
ANR	5595184	Identifier	_		5595168	0					
ANR	5595185	ArgumentList	"""invalid register operand when updating"""		5595168	1					
ANR	5595186	Argument	"""invalid register operand when updating"""		5595168	0					
ANR	5595187	PrimaryExpression	"""invalid register operand when updating"""		5595168	0					
ANR	5595188	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1205:1:36403:36439	5595168	1	True				
ANR	5595189	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		5595168	0		|			
ANR	5595190	Identifier	insn		5595168	0					
ANR	5595191	ShiftExpression	( value & 0x1f ) << 16		5595168	1		<<			
ANR	5595192	BitAndExpression	value & 0x1f		5595168	0		&			
ANR	5595193	Identifier	value		5595168	0					
ANR	5595194	PrimaryExpression	0x1f		5595168	1					
ANR	5595195	PrimaryExpression	16		5595168	1					
ANR	5595196	ReturnType	static unsigned long		5595168	1					
ANR	5595197	Identifier	insert_ras		5595168	2					
ANR	5595198	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		5595168	3					
ANR	5595199	Parameter	unsigned long insn	1197:12:36216:36233	5595168	0	True				
ANR	5595200	ParameterType	unsigned long		5595168	0					
ANR	5595201	Identifier	insn		5595168	1					
ANR	5595202	Parameter	long value	1198:5:36241:36250	5595168	1	True				
ANR	5595203	ParameterType	long		5595168	0					
ANR	5595204	Identifier	value		5595168	1					
ANR	5595205	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1199:5:36258:36291	5595168	2	True				
ANR	5595206	ParameterType	ppc_cpu_t dialect		5595168	0					
ANR	5595207	Identifier	ATTRIBUTE_UNUSED		5595168	1					
ANR	5595208	Parameter	const char * * errmsg	1200:5:36299:36317	5595168	3	True				
ANR	5595209	ParameterType	const char * *		5595168	0					
ANR	5595210	Identifier	errmsg		5595168	1					
ANR	5595211	CFGEntryNode	ENTRY		5595168		True				
ANR	5595212	CFGExitNode	EXIT		5595168		True				
ANR	5595213	Symbol	insn		5595168						
ANR	5595214	Symbol	ATTRIBUTE_UNUSED		5595168						
ANR	5595215	Symbol	errmsg		5595168						
ANR	5595216	Symbol	* errmsg		5595168						
ANR	5595217	Symbol	value		5595168						
ANR	5595218	Symbol	_		5595168						
ANR	5595219	Function	extract_rbs	1223:0:37000:37194							
ANR	5595220	FunctionDef	"extract_rbs (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5595219	0					
ANR	5595221	CompoundStatement		1227:0:37107:37194	5595219	0					
ANR	5595222	IfStatement	if ( ( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) )		5595219	0					
ANR	5595223	Condition	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )	1228:5:37114:37159	5595219	0	True				
ANR	5595224	EqualityExpression	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )		5595219	0		!=			
ANR	5595225	BitAndExpression	( insn >> 21 ) & 0x1f		5595219	0		&			
ANR	5595226	ShiftExpression	insn >> 21		5595219	0		>>			
ANR	5595227	Identifier	insn		5595219	0					
ANR	5595228	PrimaryExpression	21		5595219	1					
ANR	5595229	PrimaryExpression	0x1f		5595219	1					
ANR	5595230	BitAndExpression	( insn >> 11 ) & 0x1f		5595219	1		&			
ANR	5595231	ShiftExpression	insn >> 11		5595219	0		>>			
ANR	5595232	Identifier	insn		5595219	0					
ANR	5595233	PrimaryExpression	11		5595219	1					
ANR	5595234	PrimaryExpression	0x1f		5595219	1					
ANR	5595235	CompoundStatement		2:53:54:54	5595219	1					
ANR	5595236	ExpressionStatement	* invalid = 1	1229:2:37166:37178	5595219	0	True				
ANR	5595237	AssignmentExpression	* invalid = 1		5595219	0		=			
ANR	5595238	UnaryOperationExpression	* invalid		5595219	0					
ANR	5595239	UnaryOperator	*		5595219	0					
ANR	5595240	Identifier	invalid		5595219	1					
ANR	5595241	PrimaryExpression	1		5595219	1					
ANR	5595242	ReturnStatement	return 0 ;	1231:1:37184:37192	5595219	1	True				
ANR	5595243	PrimaryExpression	0		5595219	0					
ANR	5595244	ReturnType	static long		5595219	1					
ANR	5595245	Identifier	extract_rbs		5595219	2					
ANR	5595246	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5595219	3					
ANR	5595247	Parameter	unsigned long insn	1224:13:37025:37042	5595219	0	True				
ANR	5595248	ParameterType	unsigned long		5595219	0					
ANR	5595249	Identifier	insn		5595219	1					
ANR	5595250	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1225:6:37051:37084	5595219	1	True				
ANR	5595251	ParameterType	ppc_cpu_t dialect		5595219	0					
ANR	5595252	Identifier	ATTRIBUTE_UNUSED		5595219	1					
ANR	5595253	Parameter	int * invalid	1226:6:37093:37104	5595219	2	True				
ANR	5595254	ParameterType	int *		5595219	0					
ANR	5595255	Identifier	invalid		5595219	1					
ANR	5595256	CFGEntryNode	ENTRY		5595219		True				
ANR	5595257	CFGExitNode	EXIT		5595219		True				
ANR	5595258	Symbol	insn		5595219						
ANR	5595259	Symbol	ATTRIBUTE_UNUSED		5595219						
ANR	5595260	Symbol	invalid		5595219						
ANR	5595261	Symbol	* invalid		5595219						
ANR	5595262	Function	insert_sprg	1275:0:38279:38766							
ANR	5595263	FunctionDef	"insert_sprg (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		5595262	0					
ANR	5595264	CompoundStatement		1280:0:38403:38766	5595262	0					
ANR	5595265	IfStatement	if ( value > 7 || ( value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) )		5595262	0					
ANR	5595266	Condition	value > 7 || ( value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 )	1281:5:38410:38489	5595262	0	True				
ANR	5595267	OrExpression	value > 7 || ( value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 )		5595262	0		||			
ANR	5595268	RelationalExpression	value > 7		5595262	0		>			
ANR	5595269	Identifier	value		5595262	0					
ANR	5595270	PrimaryExpression	7		5595262	1					
ANR	5595271	AndExpression	value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		5595262	1		&&			
ANR	5595272	RelationalExpression	value > 3		5595262	0		>			
ANR	5595273	Identifier	value		5595262	0					
ANR	5595274	PrimaryExpression	3		5595262	1					
ANR	5595275	EqualityExpression	( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		5595262	1		==			
ANR	5595276	BitAndExpression	dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 )		5595262	0		&			
ANR	5595277	Identifier	dialect		5595262	0					
ANR	5595278	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_405		5595262	1		|			
ANR	5595279	Identifier	PPC_OPCODE_BOOKE		5595262	0					
ANR	5595280	Identifier	PPC_OPCODE_405		5595262	1					
ANR	5595281	PrimaryExpression	0		5595262	1					
ANR	5595282	CompoundStatement		2:87:88:88	5595262	1					
ANR	5595283	ExpressionStatement	"* errmsg = _ ( ""invalid sprg number"" )"	1282:2:38496:38531	5595262	0	True				
ANR	5595284	AssignmentExpression	"* errmsg = _ ( ""invalid sprg number"" )"		5595262	0		=			
ANR	5595285	UnaryOperationExpression	* errmsg		5595262	0					
ANR	5595286	UnaryOperator	*		5595262	0					
ANR	5595287	Identifier	errmsg		5595262	1					
ANR	5595288	CallExpression	"_ ( ""invalid sprg number"" )"		5595262	1					
ANR	5595289	Callee	_		5595262	0					
ANR	5595290	Identifier	_		5595262	0					
ANR	5595291	ArgumentList	"""invalid sprg number"""		5595262	1					
ANR	5595292	Argument	"""invalid sprg number"""		5595262	0					
ANR	5595293	PrimaryExpression	"""invalid sprg number"""		5595262	0					
ANR	5595294	IfStatement	if ( value <= 3 || ( insn & 0x100 ) != 0 )		5595262	1					
ANR	5595295	Condition	value <= 3 || ( insn & 0x100 ) != 0	1287:5:38669:38701	5595262	0	True				
ANR	5595296	OrExpression	value <= 3 || ( insn & 0x100 ) != 0		5595262	0		||			
ANR	5595297	RelationalExpression	value <= 3		5595262	0		<=			
ANR	5595298	Identifier	value		5595262	0					
ANR	5595299	PrimaryExpression	3		5595262	1					
ANR	5595300	EqualityExpression	( insn & 0x100 ) != 0		5595262	1		!=			
ANR	5595301	BitAndExpression	insn & 0x100		5595262	0		&			
ANR	5595302	Identifier	insn		5595262	0					
ANR	5595303	PrimaryExpression	0x100		5595262	1					
ANR	5595304	PrimaryExpression	0		5595262	1					
ANR	5595305	CompoundStatement		8:40:300:300	5595262	1					
ANR	5595306	ExpressionStatement	value |= 0x10	1288:2:38708:38721	5595262	0	True				
ANR	5595307	AssignmentExpression	value |= 0x10		5595262	0		|=			
ANR	5595308	Identifier	value		5595262	0					
ANR	5595309	PrimaryExpression	0x10		5595262	1					
ANR	5595310	ReturnStatement	return insn | ( ( value & 0x17 ) << 16 ) ;	1291:1:38728:38764	5595262	2	True				
ANR	5595311	InclusiveOrExpression	insn | ( ( value & 0x17 ) << 16 )		5595262	0		|			
ANR	5595312	Identifier	insn		5595262	0					
ANR	5595313	ShiftExpression	( value & 0x17 ) << 16		5595262	1		<<			
ANR	5595314	BitAndExpression	value & 0x17		5595262	0		&			
ANR	5595315	Identifier	value		5595262	0					
ANR	5595316	PrimaryExpression	0x17		5595262	1					
ANR	5595317	PrimaryExpression	16		5595262	1					
ANR	5595318	ReturnType	static unsigned long		5595262	1					
ANR	5595319	Identifier	insert_sprg		5595262	2					
ANR	5595320	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		5595262	3					
ANR	5595321	Parameter	unsigned long insn	1276:13:38313:38330	5595262	0	True				
ANR	5595322	ParameterType	unsigned long		5595262	0					
ANR	5595323	Identifier	insn		5595262	1					
ANR	5595324	Parameter	long value	1277:6:38339:38348	5595262	1	True				
ANR	5595325	ParameterType	long		5595262	0					
ANR	5595326	Identifier	value		5595262	1					
ANR	5595327	Parameter	ppc_cpu_t dialect	1278:6:38357:38373	5595262	2	True				
ANR	5595328	ParameterType	ppc_cpu_t		5595262	0					
ANR	5595329	Identifier	dialect		5595262	1					
ANR	5595330	Parameter	const char * * errmsg	1279:6:38382:38400	5595262	3	True				
ANR	5595331	ParameterType	const char * *		5595262	0					
ANR	5595332	Identifier	errmsg		5595262	1					
ANR	5595333	CFGEntryNode	ENTRY		5595262		True				
ANR	5595334	CFGExitNode	EXIT		5595262		True				
ANR	5595335	Symbol	insn		5595262						
ANR	5595336	Symbol	dialect		5595262						
ANR	5595337	Symbol	PPC_OPCODE_405		5595262						
ANR	5595338	Symbol	PPC_OPCODE_BOOKE		5595262						
ANR	5595339	Symbol	errmsg		5595262						
ANR	5595340	Symbol	* errmsg		5595262						
ANR	5595341	Symbol	value		5595262						
ANR	5595342	Symbol	_		5595262						
ANR	5595343	Function	extract_sprg	1294:0:38769:39235							
ANR	5595344	FunctionDef	"extract_sprg (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		5595343	0					
ANR	5595345	CompoundStatement		1298:0:38862:39235	5595343	0					
ANR	5595346	IdentifierDeclStatement	unsigned long val = ( insn >> 16 ) & 0x1f ;	1299:2:38866:38905	5595343	0	True				
ANR	5595347	IdentifierDecl	val = ( insn >> 16 ) & 0x1f		5595343	0					
ANR	5595348	IdentifierDeclType	unsigned long		5595343	0					
ANR	5595349	Identifier	val		5595343	1					
ANR	5595350	AssignmentExpression	val = ( insn >> 16 ) & 0x1f		5595343	2		=			
ANR	5595351	Identifier	val		5595343	0					
ANR	5595352	BitAndExpression	( insn >> 16 ) & 0x1f		5595343	1		&			
ANR	5595353	ShiftExpression	insn >> 16		5595343	0		>>			
ANR	5595354	Identifier	insn		5595343	0					
ANR	5595355	PrimaryExpression	16		5595343	1					
ANR	5595356	PrimaryExpression	0x1f		5595343	1					
ANR	5595357	IfStatement	if ( ( val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) || ( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0 )		5595343	1					
ANR	5595358	Condition	( val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) || ( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0	1303:6:39047:39191	5595343	0	True				
ANR	5595359	OrExpression	( val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) || ( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0		5595343	0		||			
ANR	5595360	AndExpression	val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		5595343	0		&&			
ANR	5595361	RelationalExpression	val - 0x10 > 3		5595343	0		>			
ANR	5595362	AdditiveExpression	val - 0x10		5595343	0		-			
ANR	5595363	Identifier	val		5595343	0					
ANR	5595364	PrimaryExpression	0x10		5595343	1					
ANR	5595365	PrimaryExpression	3		5595343	1					
ANR	5595366	EqualityExpression	( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		5595343	1		==			
ANR	5595367	BitAndExpression	dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 )		5595343	0		&			
ANR	5595368	Identifier	dialect		5595343	0					
ANR	5595369	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_405		5595343	1		|			
ANR	5595370	Identifier	PPC_OPCODE_BOOKE		5595343	0					
ANR	5595371	Identifier	PPC_OPCODE_405		5595343	1					
ANR	5595372	PrimaryExpression	0		5595343	1					
ANR	5595373	OrExpression	( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0		5595343	1		||			
ANR	5595374	AndExpression	val - 0x10 > 7 && ( insn & 0x100 ) != 0		5595343	0		&&			
ANR	5595375	RelationalExpression	val - 0x10 > 7		5595343	0		>			
ANR	5595376	AdditiveExpression	val - 0x10		5595343	0		-			
ANR	5595377	Identifier	val		5595343	0					
ANR	5595378	PrimaryExpression	0x10		5595343	1					
ANR	5595379	PrimaryExpression	7		5595343	1					
ANR	5595380	EqualityExpression	( insn & 0x100 ) != 0		5595343	1		!=			
ANR	5595381	BitAndExpression	insn & 0x100		5595343	0		&			
ANR	5595382	Identifier	insn		5595343	0					
ANR	5595383	PrimaryExpression	0x100		5595343	1					
ANR	5595384	PrimaryExpression	0		5595343	1					
ANR	5595385	OrExpression	val <= 3 || ( val & 8 ) != 0		5595343	1		||			
ANR	5595386	RelationalExpression	val <= 3		5595343	0		<=			
ANR	5595387	Identifier	val		5595343	0					
ANR	5595388	PrimaryExpression	3		5595343	1					
ANR	5595389	EqualityExpression	( val & 8 ) != 0		5595343	1		!=			
ANR	5595390	BitAndExpression	val & 8		5595343	0		&			
ANR	5595391	Identifier	val		5595343	0					
ANR	5595392	PrimaryExpression	8		5595343	1					
ANR	5595393	PrimaryExpression	0		5595343	1					
ANR	5595394	CompoundStatement		6:153:331:331	5595343	1					
ANR	5595395	ExpressionStatement	* invalid = 1	1304:3:39199:39211	5595343	0	True				
ANR	5595396	AssignmentExpression	* invalid = 1		5595343	0		=			
ANR	5595397	UnaryOperationExpression	* invalid		5595343	0					
ANR	5595398	UnaryOperator	*		5595343	0					
ANR	5595399	Identifier	invalid		5595343	1					
ANR	5595400	PrimaryExpression	1		5595343	1					
ANR	5595401	ReturnStatement	return val & 7 ;	1306:2:39219:39233	5595343	2	True				
ANR	5595402	BitAndExpression	val & 7		5595343	0		&			
ANR	5595403	Identifier	val		5595343	0					
ANR	5595404	PrimaryExpression	7		5595343	1					
ANR	5595405	ReturnType	static long		5595343	1					
ANR	5595406	Identifier	extract_sprg		5595343	2					
ANR	5595407	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		5595343	3					
ANR	5595408	Parameter	unsigned long insn	1295:14:38795:38812	5595343	0	True				
ANR	5595409	ParameterType	unsigned long		5595343	0					
ANR	5595410	Identifier	insn		5595343	1					
ANR	5595411	Parameter	ppc_cpu_t dialect	1296:7:38822:38838	5595343	1	True				
ANR	5595412	ParameterType	ppc_cpu_t		5595343	0					
ANR	5595413	Identifier	dialect		5595343	1					
ANR	5595414	Parameter	int * invalid	1297:7:38848:38859	5595343	2	True				
ANR	5595415	ParameterType	int *		5595343	0					
ANR	5595416	Identifier	invalid		5595343	1					
ANR	5595417	CFGEntryNode	ENTRY		5595343		True				
ANR	5595418	CFGExitNode	EXIT		5595343		True				
ANR	5595419	Symbol	val		5595343						
ANR	5595420	Symbol	insn		5595343						
ANR	5595421	Symbol	dialect		5595343						
ANR	5595422	Symbol	PPC_OPCODE_405		5595343						
ANR	5595423	Symbol	PPC_OPCODE_BOOKE		5595343						
ANR	5595424	Symbol	invalid		5595343						
ANR	5595425	Symbol	* invalid		5595343						
ANR	5595426	DeclStmt									
ANR	5595427	Decl							long	long	ret
ANR	5595428	Function	extract_xb6s	1417:0:42241:42486							
ANR	5595429	FunctionDef	"extract_xb6s (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		5595428	0					
ANR	5595430	CompoundStatement		1421:0:42349:42486	5595428	0					
ANR	5595431	IfStatement	if ( ( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) ) || ( ( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 ) ) )		5595428	0					
ANR	5595432	Condition	( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) ) || ( ( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 ) )	1422:5:42356:42451	5595428	0	True				
ANR	5595433	OrExpression	( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) ) || ( ( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 ) )		5595428	0		||			
ANR	5595434	EqualityExpression	( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )		5595428	0		!=			
ANR	5595435	BitAndExpression	( insn >> 16 ) & 0x1f		5595428	0		&			
ANR	5595436	ShiftExpression	insn >> 16		5595428	0		>>			
ANR	5595437	Identifier	insn		5595428	0					
ANR	5595438	PrimaryExpression	16		5595428	1					
ANR	5595439	PrimaryExpression	0x1f		5595428	1					
ANR	5595440	BitAndExpression	( insn >> 11 ) & 0x1f		5595428	1		&			
ANR	5595441	ShiftExpression	insn >> 11		5595428	0		>>			
ANR	5595442	Identifier	insn		5595428	0					
ANR	5595443	PrimaryExpression	11		5595428	1					
ANR	5595444	PrimaryExpression	0x1f		5595428	1					
ANR	5595445	EqualityExpression	( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 )		5595428	1		!=			
ANR	5595446	BitAndExpression	( insn >> 2 ) & 0x1		5595428	0		&			
ANR	5595447	ShiftExpression	insn >> 2		5595428	0		>>			
ANR	5595448	Identifier	insn		5595428	0					
ANR	5595449	PrimaryExpression	2		5595428	1					
ANR	5595450	PrimaryExpression	0x1		5595428	1					
ANR	5595451	BitAndExpression	( insn >> 1 ) & 0x1		5595428	1		&			
ANR	5595452	ShiftExpression	insn >> 1		5595428	0		>>			
ANR	5595453	Identifier	insn		5595428	0					
ANR	5595454	PrimaryExpression	1		5595428	1					
ANR	5595455	PrimaryExpression	0x1		5595428	1					
ANR	5595456	CompoundStatement		2:103:104:104	5595428	1					
ANR	5595457	ExpressionStatement	* invalid = 1	1423:2:42458:42470	5595428	0	True				
ANR	5595458	AssignmentExpression	* invalid = 1		5595428	0		=			
ANR	5595459	UnaryOperationExpression	* invalid		5595428	0					
ANR	5595460	UnaryOperator	*		5595428	0					
ANR	5595461	Identifier	invalid		5595428	1					
ANR	5595462	PrimaryExpression	1		5595428	1					
ANR	5595463	ReturnStatement	return 0 ;	1425:1:42476:42484	5595428	1	True				
ANR	5595464	PrimaryExpression	0		5595428	0					
ANR	5595465	ReturnType	static long		5595428	1					
ANR	5595466	Identifier	extract_xb6s		5595428	2					
ANR	5595467	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		5595428	3					
ANR	5595468	Parameter	unsigned long insn	1418:14:42267:42284	5595428	0	True				
ANR	5595469	ParameterType	unsigned long		5595428	0					
ANR	5595470	Identifier	insn		5595428	1					
ANR	5595471	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1419:6:42293:42326	5595428	1	True				
ANR	5595472	ParameterType	ppc_cpu_t dialect		5595428	0					
ANR	5595473	Identifier	ATTRIBUTE_UNUSED		5595428	1					
ANR	5595474	Parameter	int * invalid	1420:6:42335:42346	5595428	2	True				
ANR	5595475	ParameterType	int *		5595428	0					
ANR	5595476	Identifier	invalid		5595428	1					
ANR	5595477	CFGEntryNode	ENTRY		5595428		True				
ANR	5595478	CFGExitNode	EXIT		5595428		True				
ANR	5595479	Symbol	insn		5595428						
ANR	5595480	Symbol	ATTRIBUTE_UNUSED		5595428						
ANR	5595481	Symbol	invalid		5595428						
ANR	5595482	Symbol	* invalid		5595428						
ANR	5595483	DeclStmt									
ANR	5595484	Decl							const struct powerpc_opcode	const struct powerpc_opcode [ ]	powerpc_opcodes
ANR	5595485	DeclStmt									
ANR	5595486	Decl							const int	const int	powerpc_num_opcodes
ANR	5595487	DeclStmt									
ANR	5595488	Decl							const struct powerpc_macro	const struct powerpc_macro [ ]	powerpc_macros
ANR	5595489	DeclStmt									
ANR	5595490	Decl							const int	const int	powerpc_num_macros
