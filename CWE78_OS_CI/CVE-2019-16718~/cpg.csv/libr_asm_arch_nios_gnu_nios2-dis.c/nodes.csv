command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3291446	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_nios_gnu_nios2-dis.c								
ANR	3291447	ClassDef	_nios2_opcode_hash	43:8:1482:1601							
ANR	3291448	DeclStmt									
ANR	3291449	Decl							const struct nios2_opcode	const struct nios2_opcode *	opcode
ANR	3291450	DeclStmt									
ANR	3291451	Decl							struct _nios2_opcode_hash	struct _nios2_opcode_hash *	next
ANR	3291452	DeclStmt									
ANR	3291453	Decl							_nios2_opcode_hash	_nios2_opcode_hash	nios2_opcode_hash
ANR	3291454	DeclStmt									
ANR	3291455	Decl							bfd_boolean	bfd_boolean	nios2_hash_init
ANR	3291456	DeclStmt									
ANR	3291457	Decl							nios2_opcode_hash	nios2_opcode_hash * [ ( OP_MASK_OP ) + 1 ]	nios2_hash
ANR	3291458	DeclStmt									
ANR	3291459	Decl							nios2_opcode_hash	nios2_opcode_hash * [ ( OP_MASK_OP ) + 1 ]	nios2_ps_hash
ANR	3291460	Function	nios2_init_opcode_hash	56:0:1857:3555							
ANR	3291461	FunctionDef	nios2_init_opcode_hash ()		3291460	0					
ANR	3291462	CompoundStatement		58:0:1899:3555	3291460	0					
ANR	3291463	IdentifierDeclStatement	unsigned int i ;	59:2:1903:1917	3291460	0	True				
ANR	3291464	IdentifierDecl	i		3291460	0					
ANR	3291465	IdentifierDeclType	unsigned int		3291460	0					
ANR	3291466	Identifier	i		3291460	1					
ANR	3291467	Statement	register	60:2:1921:1928	3291460	1	True				
ANR	3291468	IdentifierDeclStatement	const struct nios2_opcode * op ;	60:11:1930:1959	3291460	2	True				
ANR	3291469	IdentifierDecl	* op		3291460	0					
ANR	3291470	IdentifierDeclType	const struct nios2_opcode *		3291460	0					
ANR	3291471	Identifier	op		3291460	1					
ANR	3291472	ForStatement	for ( i = 0 ; i <= OP_MASK_OP ; ++ i )		3291460	3					
ANR	3291473	ForInit	i = 0 ;	62:7:1969:1974	3291460	0	True				
ANR	3291474	AssignmentExpression	i = 0		3291460	0		=			
ANR	3291475	Identifier	i		3291460	0					
ANR	3291476	PrimaryExpression	0		3291460	1					
ANR	3291477	Condition	i <= OP_MASK_OP	62:14:1976:1990	3291460	1	True				
ANR	3291478	RelationalExpression	i <= OP_MASK_OP		3291460	0		<=			
ANR	3291479	Identifier	i		3291460	0					
ANR	3291480	Identifier	OP_MASK_OP		3291460	1					
ANR	3291481	UnaryExpression	++ i	62:31:1993:1995	3291460	2	True				
ANR	3291482	IncDec	++		3291460	0					
ANR	3291483	Identifier	i		3291460	1					
ANR	3291484	CompoundStatement		5:36:98:98	3291460	3					
ANR	3291485	ExpressionStatement	nios2_hash [ 0 ] = NULL	63:3:2003:2023	3291460	0	True				
ANR	3291486	AssignmentExpression	nios2_hash [ 0 ] = NULL		3291460	0		=			
ANR	3291487	ArrayIndexing	nios2_hash [ 0 ]		3291460	0					
ANR	3291488	Identifier	nios2_hash		3291460	0					
ANR	3291489	PrimaryExpression	0		3291460	1					
ANR	3291490	Identifier	NULL		3291460	1					
ANR	3291491	ForStatement	for ( i = 0 ; i <= OP_MASK_OP ; i ++ )		3291460	4					
ANR	3291492	ForInit	i = 0 ;	65:7:2036:2041	3291460	0	True				
ANR	3291493	AssignmentExpression	i = 0		3291460	0		=			
ANR	3291494	Identifier	i		3291460	0					
ANR	3291495	PrimaryExpression	0		3291460	1					
ANR	3291496	Condition	i <= OP_MASK_OP	65:14:2043:2057	3291460	1	True				
ANR	3291497	RelationalExpression	i <= OP_MASK_OP		3291460	0		<=			
ANR	3291498	Identifier	i		3291460	0					
ANR	3291499	Identifier	OP_MASK_OP		3291460	1					
ANR	3291500	PostIncDecOperationExpression	i ++	65:31:2060:2062	3291460	2	True				
ANR	3291501	Identifier	i		3291460	0					
ANR	3291502	IncDec	++		3291460	1					
ANR	3291503	CompoundStatement		8:36:165:165	3291460	3					
ANR	3291504	ForStatement	for ( op = nios2_opcodes ; op < & nios2_opcodes [ NUMOPCODES ] ; op ++ )		3291460	0					
ANR	3291505	ForInit	op = nios2_opcodes ;	66:8:2075:2093	3291460	0	True				
ANR	3291506	AssignmentExpression	op = nios2_opcodes		3291460	0		=			
ANR	3291507	Identifier	op		3291460	0					
ANR	3291508	Identifier	nios2_opcodes		3291460	1					
ANR	3291509	Condition	op < & nios2_opcodes [ NUMOPCODES ]	66:28:2095:2125	3291460	1	True				
ANR	3291510	RelationalExpression	op < & nios2_opcodes [ NUMOPCODES ]		3291460	0		<			
ANR	3291511	Identifier	op		3291460	0					
ANR	3291512	UnaryOperationExpression	& nios2_opcodes [ NUMOPCODES ]		3291460	1					
ANR	3291513	UnaryOperator	&		3291460	0					
ANR	3291514	ArrayIndexing	nios2_opcodes [ NUMOPCODES ]		3291460	1					
ANR	3291515	Identifier	nios2_opcodes		3291460	0					
ANR	3291516	Identifier	NUMOPCODES		3291460	1					
ANR	3291517	PostIncDecOperationExpression	op ++	66:61:2128:2131	3291460	2	True				
ANR	3291518	Identifier	op		3291460	0					
ANR	3291519	IncDec	++		3291460	1					
ANR	3291520	CompoundStatement		11:4:273:306	3291460	3					
ANR	3291521	IdentifierDeclStatement	nios2_opcode_hash * new_hash ;	67:4:2140:2167	3291460	0	True				
ANR	3291522	IdentifierDecl	* new_hash		3291460	0					
ANR	3291523	IdentifierDeclType	nios2_opcode_hash *		3291460	0					
ANR	3291524	Identifier	new_hash		3291460	1					
ANR	3291525	IdentifierDeclStatement	nios2_opcode_hash * * bucket = NULL ;	68:4:2173:2206	3291460	1	True				
ANR	3291526	IdentifierDecl	* * bucket = NULL		3291460	0					
ANR	3291527	IdentifierDeclType	nios2_opcode_hash * *		3291460	0					
ANR	3291528	Identifier	bucket		3291460	1					
ANR	3291529	AssignmentExpression	* * bucket = NULL		3291460	2		=			
ANR	3291530	Identifier	NULL		3291460	0					
ANR	3291531	Identifier	NULL		3291460	1					
ANR	3291532	IfStatement	if ( ( op -> pinfo & NIOS2_INSN_MACRO ) == NIOS2_INSN_MACRO )		3291460	2					
ANR	3291533	Condition	( op -> pinfo & NIOS2_INSN_MACRO ) == NIOS2_INSN_MACRO	70:8:2217:2266	3291460	0	True				
ANR	3291534	EqualityExpression	( op -> pinfo & NIOS2_INSN_MACRO ) == NIOS2_INSN_MACRO		3291460	0		==			
ANR	3291535	BitAndExpression	op -> pinfo & NIOS2_INSN_MACRO		3291460	0		&			
ANR	3291536	PtrMemberAccess	op -> pinfo		3291460	0					
ANR	3291537	Identifier	op		3291460	0					
ANR	3291538	Identifier	pinfo		3291460	1					
ANR	3291539	Identifier	NIOS2_INSN_MACRO		3291460	1					
ANR	3291540	Identifier	NIOS2_INSN_MACRO		3291460	1					
ANR	3291541	CompoundStatement		13:60:369:369	3291460	1					
ANR	3291542	IfStatement	if ( i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP ) && ( op -> pinfo & ( NIOS2_INSN_MACRO_MOV | NIOS2_INSN_MACRO_MOVI ) & 0x7fffffff ) )		3291460	0					
ANR	3291543	Condition	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP ) && ( op -> pinfo & ( NIOS2_INSN_MACRO_MOV | NIOS2_INSN_MACRO_MOVI ) & 0x7fffffff )	71:9:2280:2399	3291460	0	True				
ANR	3291544	AndExpression	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP ) && ( op -> pinfo & ( NIOS2_INSN_MACRO_MOV | NIOS2_INSN_MACRO_MOVI ) & 0x7fffffff )		3291460	0		&&			
ANR	3291545	EqualityExpression	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP )		3291460	0		==			
ANR	3291546	Identifier	i		3291460	0					
ANR	3291547	BitAndExpression	( op -> match >> OP_SH_OP ) & OP_MASK_OP		3291460	1		&			
ANR	3291548	ShiftExpression	op -> match >> OP_SH_OP		3291460	0		>>			
ANR	3291549	PtrMemberAccess	op -> match		3291460	0					
ANR	3291550	Identifier	op		3291460	0					
ANR	3291551	Identifier	match		3291460	1					
ANR	3291552	Identifier	OP_SH_OP		3291460	1					
ANR	3291553	Identifier	OP_MASK_OP		3291460	1					
ANR	3291554	BitAndExpression	op -> pinfo & ( NIOS2_INSN_MACRO_MOV | NIOS2_INSN_MACRO_MOVI ) & 0x7fffffff		3291460	1		&			
ANR	3291555	PtrMemberAccess	op -> pinfo		3291460	0					
ANR	3291556	Identifier	op		3291460	0					
ANR	3291557	Identifier	pinfo		3291460	1					
ANR	3291558	BitAndExpression	( NIOS2_INSN_MACRO_MOV | NIOS2_INSN_MACRO_MOVI ) & 0x7fffffff		3291460	1		&			
ANR	3291559	InclusiveOrExpression	NIOS2_INSN_MACRO_MOV | NIOS2_INSN_MACRO_MOVI		3291460	0		|			
ANR	3291560	Identifier	NIOS2_INSN_MACRO_MOV		3291460	0					
ANR	3291561	Identifier	NIOS2_INSN_MACRO_MOVI		3291460	1					
ANR	3291562	PrimaryExpression	0x7fffffff		3291460	1					
ANR	3291563	CompoundStatement		14:131:502:502	3291460	1					
ANR	3291564	ExpressionStatement	bucket = & ( nios2_ps_hash [ i ] )	72:6:2410:2438	3291460	0	True				
ANR	3291565	AssignmentExpression	bucket = & ( nios2_ps_hash [ i ] )		3291460	0		=			
ANR	3291566	Identifier	bucket		3291460	0					
ANR	3291567	UnaryOperationExpression	& ( nios2_ps_hash [ i ] )		3291460	1					
ANR	3291568	UnaryOperator	&		3291460	0					
ANR	3291569	ArrayIndexing	nios2_ps_hash [ i ]		3291460	1					
ANR	3291570	Identifier	nios2_ps_hash		3291460	0					
ANR	3291571	Identifier	i		3291460	1					
ANR	3291572	ElseStatement	else		3291460	0					
ANR	3291573	IfStatement	if ( i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP ) )		3291460	0					
ANR	3291574	Condition	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP )	74:15:2462:2504	3291460	0	True				
ANR	3291575	EqualityExpression	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP )		3291460	0		==			
ANR	3291576	Identifier	i		3291460	0					
ANR	3291577	BitAndExpression	( op -> match >> OP_SH_OP ) & OP_MASK_OP		3291460	1		&			
ANR	3291578	ShiftExpression	op -> match >> OP_SH_OP		3291460	0		>>			
ANR	3291579	PtrMemberAccess	op -> match		3291460	0					
ANR	3291580	Identifier	op		3291460	0					
ANR	3291581	Identifier	match		3291460	1					
ANR	3291582	Identifier	OP_SH_OP		3291460	1					
ANR	3291583	Identifier	OP_MASK_OP		3291460	1					
ANR	3291584	CompoundStatement		17:60:607:607	3291460	1					
ANR	3291585	ExpressionStatement	bucket = & ( nios2_hash [ i ] )	75:5:2514:2539	3291460	0	True				
ANR	3291586	AssignmentExpression	bucket = & ( nios2_hash [ i ] )		3291460	0		=			
ANR	3291587	Identifier	bucket		3291460	0					
ANR	3291588	UnaryOperationExpression	& ( nios2_hash [ i ] )		3291460	1					
ANR	3291589	UnaryOperator	&		3291460	0					
ANR	3291590	ArrayIndexing	nios2_hash [ i ]		3291460	1					
ANR	3291591	Identifier	nios2_hash		3291460	0					
ANR	3291592	Identifier	i		3291460	1					
ANR	3291593	IfStatement	if ( bucket )		3291460	3					
ANR	3291594	Condition	bucket	78:8:2556:2561	3291460	0	True				
ANR	3291595	Identifier	bucket		3291460	0					
ANR	3291596	CompoundStatement		21:16:664:664	3291460	1					
ANR	3291597	ExpressionStatement	new_hash = ( nios2_opcode_hash * ) malloc ( sizeof ( nios2_opcode_hash ) )	79:5:2571:2644	3291460	0	True				
ANR	3291598	AssignmentExpression	new_hash = ( nios2_opcode_hash * ) malloc ( sizeof ( nios2_opcode_hash ) )		3291460	0		=			
ANR	3291599	Identifier	new_hash		3291460	0					
ANR	3291600	CastExpression	( nios2_opcode_hash * ) malloc ( sizeof ( nios2_opcode_hash ) )		3291460	1					
ANR	3291601	CastTarget	nios2_opcode_hash *		3291460	0					
ANR	3291602	CallExpression	malloc ( sizeof ( nios2_opcode_hash ) )		3291460	1					
ANR	3291603	Callee	malloc		3291460	0					
ANR	3291604	Identifier	malloc		3291460	0					
ANR	3291605	ArgumentList	sizeof ( nios2_opcode_hash )		3291460	1					
ANR	3291606	Argument	sizeof ( nios2_opcode_hash )		3291460	0					
ANR	3291607	SizeofExpression	sizeof ( nios2_opcode_hash )		3291460	0					
ANR	3291608	Sizeof	sizeof		3291460	0					
ANR	3291609	SizeofOperand	nios2_opcode_hash		3291460	1					
ANR	3291610	IfStatement	if ( ! new_hash )		3291460	1					
ANR	3291611	Condition	! new_hash	81:9:2655:2663	3291460	0	True				
ANR	3291612	UnaryOperationExpression	! new_hash		3291460	0					
ANR	3291613	UnaryOperator	!		3291460	0					
ANR	3291614	Identifier	new_hash		3291460	1					
ANR	3291615	CompoundStatement		24:20:766:766	3291460	1					
ANR	3291616	ExpressionStatement	"fprintf ( stderr , ""error allocating memory...broken disassembler\\n"" )"	82:6:2674:2748	3291460	0	True				
ANR	3291617	CallExpression	"fprintf ( stderr , ""error allocating memory...broken disassembler\\n"" )"		3291460	0					
ANR	3291618	Callee	fprintf		3291460	0					
ANR	3291619	Identifier	fprintf		3291460	0					
ANR	3291620	ArgumentList	stderr		3291460	1					
ANR	3291621	Argument	stderr		3291460	0					
ANR	3291622	Identifier	stderr		3291460	0					
ANR	3291623	Argument	"""error allocating memory...broken disassembler\\n"""		3291460	1					
ANR	3291624	PrimaryExpression	"""error allocating memory...broken disassembler\\n"""		3291460	0					
ANR	3291625	ExpressionStatement	abort ( )	84:6:2756:2764	3291460	1	True				
ANR	3291626	CallExpression	abort ( )		3291460	0					
ANR	3291627	Callee	abort		3291460	0					
ANR	3291628	Identifier	abort		3291460	0					
ANR	3291629	ArgumentList			3291460	1					
ANR	3291630	ExpressionStatement	new_hash -> opcode = op	86:5:2778:2799	3291460	2	True				
ANR	3291631	AssignmentExpression	new_hash -> opcode = op		3291460	0		=			
ANR	3291632	PtrMemberAccess	new_hash -> opcode		3291460	0					
ANR	3291633	Identifier	new_hash		3291460	0					
ANR	3291634	Identifier	opcode		3291460	1					
ANR	3291635	Identifier	op		3291460	1					
ANR	3291636	ExpressionStatement	new_hash -> next = NULL	87:5:2806:2827	3291460	3	True				
ANR	3291637	AssignmentExpression	new_hash -> next = NULL		3291460	0		=			
ANR	3291638	PtrMemberAccess	new_hash -> next		3291460	0					
ANR	3291639	Identifier	new_hash		3291460	0					
ANR	3291640	Identifier	next		3291460	1					
ANR	3291641	Identifier	NULL		3291460	1					
ANR	3291642	WhileStatement	while ( * bucket )		3291460	4					
ANR	3291643	Condition	* bucket	88:12:2841:2847	3291460	0	True				
ANR	3291644	UnaryOperationExpression	* bucket		3291460	0					
ANR	3291645	UnaryOperator	*		3291460	0					
ANR	3291646	Identifier	bucket		3291460	1					
ANR	3291647	CompoundStatement		31:21:950:950	3291460	1					
ANR	3291648	ExpressionStatement	bucket = & ( ( * bucket ) -> next )	89:6:2858:2885	3291460	0	True				
ANR	3291649	AssignmentExpression	bucket = & ( ( * bucket ) -> next )		3291460	0		=			
ANR	3291650	Identifier	bucket		3291460	0					
ANR	3291651	UnaryOperationExpression	& ( ( * bucket ) -> next )		3291460	1					
ANR	3291652	UnaryOperator	&		3291460	0					
ANR	3291653	PtrMemberAccess	( * bucket ) -> next		3291460	1					
ANR	3291654	UnaryOperationExpression	* bucket		3291460	0					
ANR	3291655	UnaryOperator	*		3291460	0					
ANR	3291656	Identifier	bucket		3291460	1					
ANR	3291657	Identifier	next		3291460	1					
ANR	3291658	ExpressionStatement	* bucket = new_hash	91:5:2899:2917	3291460	5	True				
ANR	3291659	AssignmentExpression	* bucket = new_hash		3291460	0		=			
ANR	3291660	UnaryOperationExpression	* bucket		3291460	0					
ANR	3291661	UnaryOperator	*		3291460	0					
ANR	3291662	Identifier	bucket		3291460	1					
ANR	3291663	Identifier	new_hash		3291460	1					
ANR	3291664	ExpressionStatement	nios2_hash_init = 1	95:2:2936:2955	3291460	5	True				
ANR	3291665	AssignmentExpression	nios2_hash_init = 1		3291460	0		=			
ANR	3291666	Identifier	nios2_hash_init		3291460	0					
ANR	3291667	PrimaryExpression	1		3291460	1					
ANR	3291668	ForStatement	for ( i = 0 ; i <= OP_MASK_OP ; ++ i )		3291460	6					
ANR	3291669	ForInit	i = 0 ;	97:7:2987:2992	3291460	0	True				
ANR	3291670	AssignmentExpression	i = 0		3291460	0		=			
ANR	3291671	Identifier	i		3291460	0					
ANR	3291672	PrimaryExpression	0		3291460	1					
ANR	3291673	Condition	i <= OP_MASK_OP	97:14:2994:3008	3291460	1	True				
ANR	3291674	RelationalExpression	i <= OP_MASK_OP		3291460	0		<=			
ANR	3291675	Identifier	i		3291460	0					
ANR	3291676	Identifier	OP_MASK_OP		3291460	1					
ANR	3291677	UnaryExpression	++ i	97:31:3011:3013	3291460	2	True				
ANR	3291678	IncDec	++		3291460	0					
ANR	3291679	Identifier	i		3291460	1					
ANR	3291680	CompoundStatement		42:6:1128:1171	3291460	3					
ANR	3291681	IdentifierDeclStatement	nios2_opcode_hash * tmp_hash = nios2_hash [ i ] ;	99:6:3028:3071	3291460	0	True				
ANR	3291682	IdentifierDecl	* tmp_hash = nios2_hash [ i ]		3291460	0					
ANR	3291683	IdentifierDeclType	nios2_opcode_hash *		3291460	0					
ANR	3291684	Identifier	tmp_hash		3291460	1					
ANR	3291685	AssignmentExpression	* tmp_hash = nios2_hash [ i ]		3291460	2		=			
ANR	3291686	Identifier	tmp_hash		3291460	0					
ANR	3291687	ArrayIndexing	nios2_hash [ i ]		3291460	1					
ANR	3291688	Identifier	nios2_hash		3291460	0					
ANR	3291689	Identifier	i		3291460	1					
ANR	3291690	ExpressionStatement	"printf ( ""index: 0x%02X\\tops: "" , i )"	100:6:3079:3112	3291460	1	True				
ANR	3291691	CallExpression	"printf ( ""index: 0x%02X\\tops: "" , i )"		3291460	0					
ANR	3291692	Callee	printf		3291460	0					
ANR	3291693	Identifier	printf		3291460	0					
ANR	3291694	ArgumentList	"""index: 0x%02X\\tops: """		3291460	1					
ANR	3291695	Argument	"""index: 0x%02X\\tops: """		3291460	0					
ANR	3291696	PrimaryExpression	"""index: 0x%02X\\tops: """		3291460	0					
ANR	3291697	Argument	i		3291460	1					
ANR	3291698	Identifier	i		3291460	0					
ANR	3291699	WhileStatement	while ( tmp_hash != NULL )		3291460	2					
ANR	3291700	Condition	tmp_hash != NULL	101:13:3127:3142	3291460	0	True				
ANR	3291701	EqualityExpression	tmp_hash != NULL		3291460	0		!=			
ANR	3291702	Identifier	tmp_hash		3291460	0					
ANR	3291703	Identifier	NULL		3291460	1					
ANR	3291704	CompoundStatement		45:1:1246:1246	3291460	1					
ANR	3291705	ExpressionStatement	"printf ( ""%s "" , tmp_hash -> opcode -> name )"	103:3:3151:3189	3291460	0	True				
ANR	3291706	CallExpression	"printf ( ""%s "" , tmp_hash -> opcode -> name )"		3291460	0					
ANR	3291707	Callee	printf		3291460	0					
ANR	3291708	Identifier	printf		3291460	0					
ANR	3291709	ArgumentList	"""%s """		3291460	1					
ANR	3291710	Argument	"""%s """		3291460	0					
ANR	3291711	PrimaryExpression	"""%s """		3291460	0					
ANR	3291712	Argument	tmp_hash -> opcode -> name		3291460	1					
ANR	3291713	PtrMemberAccess	tmp_hash -> opcode -> name		3291460	0					
ANR	3291714	PtrMemberAccess	tmp_hash -> opcode		3291460	0					
ANR	3291715	Identifier	tmp_hash		3291460	0					
ANR	3291716	Identifier	opcode		3291460	1					
ANR	3291717	Identifier	name		3291460	1					
ANR	3291718	ExpressionStatement	tmp_hash = tmp_hash -> next	104:3:3194:3219	3291460	1	True				
ANR	3291719	AssignmentExpression	tmp_hash = tmp_hash -> next		3291460	0		=			
ANR	3291720	Identifier	tmp_hash		3291460	0					
ANR	3291721	PtrMemberAccess	tmp_hash -> next		3291460	1					
ANR	3291722	Identifier	tmp_hash		3291460	0					
ANR	3291723	Identifier	next		3291460	1					
ANR	3291724	ExpressionStatement	"printf ( ""\\n"" )"	106:6:3230:3243	3291460	3	True				
ANR	3291725	CallExpression	"printf ( ""\\n"" )"		3291460	0					
ANR	3291726	Callee	printf		3291460	0					
ANR	3291727	Identifier	printf		3291460	0					
ANR	3291728	ArgumentList	"""\\n"""		3291460	1					
ANR	3291729	Argument	"""\\n"""		3291460	0					
ANR	3291730	PrimaryExpression	"""\\n"""		3291460	0					
ANR	3291731	ForStatement	for ( i = 0 ; i <= OP_MASK_OP ; ++ i )		3291460	7					
ANR	3291732	ForInit	i = 0 ;	109:7:3259:3264	3291460	0	True				
ANR	3291733	AssignmentExpression	i = 0		3291460	0		=			
ANR	3291734	Identifier	i		3291460	0					
ANR	3291735	PrimaryExpression	0		3291460	1					
ANR	3291736	Condition	i <= OP_MASK_OP	109:14:3266:3280	3291460	1	True				
ANR	3291737	RelationalExpression	i <= OP_MASK_OP		3291460	0		<=			
ANR	3291738	Identifier	i		3291460	0					
ANR	3291739	Identifier	OP_MASK_OP		3291460	1					
ANR	3291740	UnaryExpression	++ i	109:31:3283:3285	3291460	2	True				
ANR	3291741	IncDec	++		3291460	0					
ANR	3291742	Identifier	i		3291460	1					
ANR	3291743	CompoundStatement		54:6:1400:1446	3291460	3					
ANR	3291744	IdentifierDeclStatement	nios2_opcode_hash * tmp_hash = nios2_ps_hash [ i ] ;	111:6:3300:3346	3291460	0	True				
ANR	3291745	IdentifierDecl	* tmp_hash = nios2_ps_hash [ i ]		3291460	0					
ANR	3291746	IdentifierDeclType	nios2_opcode_hash *		3291460	0					
ANR	3291747	Identifier	tmp_hash		3291460	1					
ANR	3291748	AssignmentExpression	* tmp_hash = nios2_ps_hash [ i ]		3291460	2		=			
ANR	3291749	Identifier	tmp_hash		3291460	0					
ANR	3291750	ArrayIndexing	nios2_ps_hash [ i ]		3291460	1					
ANR	3291751	Identifier	nios2_ps_hash		3291460	0					
ANR	3291752	Identifier	i		3291460	1					
ANR	3291753	ExpressionStatement	"printf ( ""index: 0x%02X\\tops: "" , i )"	112:6:3354:3387	3291460	1	True				
ANR	3291754	CallExpression	"printf ( ""index: 0x%02X\\tops: "" , i )"		3291460	0					
ANR	3291755	Callee	printf		3291460	0					
ANR	3291756	Identifier	printf		3291460	0					
ANR	3291757	ArgumentList	"""index: 0x%02X\\tops: """		3291460	1					
ANR	3291758	Argument	"""index: 0x%02X\\tops: """		3291460	0					
ANR	3291759	PrimaryExpression	"""index: 0x%02X\\tops: """		3291460	0					
ANR	3291760	Argument	i		3291460	1					
ANR	3291761	Identifier	i		3291460	0					
ANR	3291762	WhileStatement	while ( tmp_hash != NULL )		3291460	2					
ANR	3291763	Condition	tmp_hash != NULL	113:13:3402:3417	3291460	0	True				
ANR	3291764	EqualityExpression	tmp_hash != NULL		3291460	0		!=			
ANR	3291765	Identifier	tmp_hash		3291460	0					
ANR	3291766	Identifier	NULL		3291460	1					
ANR	3291767	CompoundStatement		57:1:1521:1521	3291460	1					
ANR	3291768	ExpressionStatement	"printf ( ""%s "" , tmp_hash -> opcode -> name )"	115:3:3426:3464	3291460	0	True				
ANR	3291769	CallExpression	"printf ( ""%s "" , tmp_hash -> opcode -> name )"		3291460	0					
ANR	3291770	Callee	printf		3291460	0					
ANR	3291771	Identifier	printf		3291460	0					
ANR	3291772	ArgumentList	"""%s """		3291460	1					
ANR	3291773	Argument	"""%s """		3291460	0					
ANR	3291774	PrimaryExpression	"""%s """		3291460	0					
ANR	3291775	Argument	tmp_hash -> opcode -> name		3291460	1					
ANR	3291776	PtrMemberAccess	tmp_hash -> opcode -> name		3291460	0					
ANR	3291777	PtrMemberAccess	tmp_hash -> opcode		3291460	0					
ANR	3291778	Identifier	tmp_hash		3291460	0					
ANR	3291779	Identifier	opcode		3291460	1					
ANR	3291780	Identifier	name		3291460	1					
ANR	3291781	ExpressionStatement	tmp_hash = tmp_hash -> next	116:3:3469:3494	3291460	1	True				
ANR	3291782	AssignmentExpression	tmp_hash = tmp_hash -> next		3291460	0		=			
ANR	3291783	Identifier	tmp_hash		3291460	0					
ANR	3291784	PtrMemberAccess	tmp_hash -> next		3291460	1					
ANR	3291785	Identifier	tmp_hash		3291460	0					
ANR	3291786	Identifier	next		3291460	1					
ANR	3291787	ExpressionStatement	"printf ( ""\\n"" )"	118:6:3505:3518	3291460	3	True				
ANR	3291788	CallExpression	"printf ( ""\\n"" )"		3291460	0					
ANR	3291789	Callee	printf		3291460	0					
ANR	3291790	Identifier	printf		3291460	0					
ANR	3291791	ArgumentList	"""\\n"""		3291460	1					
ANR	3291792	Argument	"""\\n"""		3291460	0					
ANR	3291793	PrimaryExpression	"""\\n"""		3291460	0					
ANR	3291794	ReturnType	static void		3291460	1					
ANR	3291795	Identifier	nios2_init_opcode_hash		3291460	2					
ANR	3291796	ParameterList			3291460	3					
ANR	3291797	CFGEntryNode	ENTRY		3291460		True				
ANR	3291798	CFGExitNode	EXIT		3291460		True				
ANR	3291799	Symbol	* op		3291460						
ANR	3291800	Symbol	OP_MASK_OP		3291460						
ANR	3291801	Symbol	op -> match		3291460						
ANR	3291802	Symbol	* * tmp_hash		3291460						
ANR	3291803	Symbol	nios2_opcodes		3291460						
ANR	3291804	Symbol	* nios2_ps_hash		3291460						
ANR	3291805	Symbol	OP_SH_OP		3291460						
ANR	3291806	Symbol	NIOS2_INSN_MACRO		3291460						
ANR	3291807	Symbol	* tmp_hash		3291460						
ANR	3291808	Symbol	new_hash -> next		3291460						
ANR	3291809	Symbol	tmp_hash -> opcode		3291460						
ANR	3291810	Symbol	nios2_ps_hash		3291460						
ANR	3291811	Symbol	new_hash		3291460						
ANR	3291812	Symbol	op		3291460						
ANR	3291813	Symbol	NIOS2_INSN_MACRO_MOV		3291460						
ANR	3291814	Symbol	malloc		3291460						
ANR	3291815	Symbol	& ( * bucket ) -> next		3291460						
ANR	3291816	Symbol	NULL		3291460						
ANR	3291817	Symbol	new_hash -> opcode		3291460						
ANR	3291818	Symbol	NUMOPCODES		3291460						
ANR	3291819	Symbol	op -> pinfo		3291460						
ANR	3291820	Symbol	i		3291460						
ANR	3291821	Symbol	* tmp_hash -> opcode		3291460						
ANR	3291822	Symbol	stderr		3291460						
ANR	3291823	Symbol	nios2_hash_init		3291460						
ANR	3291824	Symbol	* new_hash		3291460						
ANR	3291825	Symbol	tmp_hash		3291460						
ANR	3291826	Symbol	bucket		3291460						
ANR	3291827	Symbol	* bucket		3291460						
ANR	3291828	Symbol	* i		3291460						
ANR	3291829	Symbol	tmp_hash -> next		3291460						
ANR	3291830	Symbol	tmp_hash -> opcode -> name		3291460						
ANR	3291831	Symbol	nios2_hash		3291460						
ANR	3291832	Symbol	* nios2_hash		3291460						
ANR	3291833	Symbol	NIOS2_INSN_MACRO_MOVI		3291460						
ANR	3291834	Function	nios2_find_opcode_hash	125:0:3673:4400							
ANR	3291835	FunctionDef	nios2_find_opcode_hash (unsigned long opcode)		3291834	0					
ANR	3291836	CompoundStatement		127:0:3747:4400	3291834	0					
ANR	3291837	IdentifierDeclStatement	nios2_opcode_hash * entry ;	128:2:3751:3775	3291834	0	True				
ANR	3291838	IdentifierDecl	* entry		3291834	0					
ANR	3291839	IdentifierDeclType	nios2_opcode_hash *		3291834	0					
ANR	3291840	Identifier	entry		3291834	1					
ANR	3291841	IfStatement	if ( ! nios2_hash_init )		3291834	1					
ANR	3291842	Condition	! nios2_hash_init	131:6:3840:3855	3291834	0	True				
ANR	3291843	UnaryOperationExpression	! nios2_hash_init		3291834	0					
ANR	3291844	UnaryOperator	!		3291834	0					
ANR	3291845	Identifier	nios2_hash_init		3291834	1					
ANR	3291846	CompoundStatement		5:24:110:110	3291834	1					
ANR	3291847	ExpressionStatement	nios2_init_opcode_hash ( )	132:3:3863:3888	3291834	0	True				
ANR	3291848	CallExpression	nios2_init_opcode_hash ( )		3291834	0					
ANR	3291849	Callee	nios2_init_opcode_hash		3291834	0					
ANR	3291850	Identifier	nios2_init_opcode_hash		3291834	0					
ANR	3291851	ArgumentList			3291834	1					
ANR	3291852	ForStatement	for ( entry = nios2_ps_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ] ; entry ; entry = entry -> next )		3291834	2					
ANR	3291853	ForInit	entry = nios2_ps_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ] ;	136:7:3950:4006	3291834	0	True				
ANR	3291854	AssignmentExpression	entry = nios2_ps_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ]		3291834	0		=			
ANR	3291855	Identifier	entry		3291834	0					
ANR	3291856	ArrayIndexing	nios2_ps_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ]		3291834	1					
ANR	3291857	Identifier	nios2_ps_hash		3291834	0					
ANR	3291858	BitAndExpression	( opcode >> OP_SH_OP ) & OP_MASK_OP		3291834	1		&			
ANR	3291859	ShiftExpression	opcode >> OP_SH_OP		3291834	0		>>			
ANR	3291860	Identifier	opcode		3291834	0					
ANR	3291861	Identifier	OP_SH_OP		3291834	1					
ANR	3291862	Identifier	OP_MASK_OP		3291834	1					
ANR	3291863	Condition	entry	137:3:4011:4015	3291834	1	True				
ANR	3291864	Identifier	entry		3291834	0					
ANR	3291865	AssignmentExpression	entry = entry -> next	137:10:4018:4036	3291834	2	True	=			
ANR	3291866	Identifier	entry		3291834	0					
ANR	3291867	PtrMemberAccess	entry -> next		3291834	1					
ANR	3291868	Identifier	entry		3291834	0					
ANR	3291869	Identifier	next		3291834	1					
ANR	3291870	CompoundStatement		11:31:291:291	3291834	3					
ANR	3291871	IfStatement	if ( entry -> opcode -> match == ( opcode & entry -> opcode -> mask ) )		3291834	0					
ANR	3291872	Condition	entry -> opcode -> match == ( opcode & entry -> opcode -> mask )	138:7:4048:4101	3291834	0	True				
ANR	3291873	EqualityExpression	entry -> opcode -> match == ( opcode & entry -> opcode -> mask )		3291834	0		==			
ANR	3291874	PtrMemberAccess	entry -> opcode -> match		3291834	0					
ANR	3291875	PtrMemberAccess	entry -> opcode		3291834	0					
ANR	3291876	Identifier	entry		3291834	0					
ANR	3291877	Identifier	opcode		3291834	1					
ANR	3291878	Identifier	match		3291834	1					
ANR	3291879	BitAndExpression	opcode & entry -> opcode -> mask		3291834	1		&			
ANR	3291880	Identifier	opcode		3291834	0					
ANR	3291881	PtrMemberAccess	entry -> opcode -> mask		3291834	1					
ANR	3291882	PtrMemberAccess	entry -> opcode		3291834	0					
ANR	3291883	Identifier	entry		3291834	0					
ANR	3291884	Identifier	opcode		3291834	1					
ANR	3291885	Identifier	mask		3291834	1					
ANR	3291886	CompoundStatement		12:63:356:356	3291834	1					
ANR	3291887	ReturnStatement	return entry -> opcode ;	139:4:4110:4130	3291834	0	True				
ANR	3291888	PtrMemberAccess	entry -> opcode		3291834	0					
ANR	3291889	Identifier	entry		3291834	0					
ANR	3291890	Identifier	opcode		3291834	1					
ANR	3291891	ForStatement	for ( entry = nios2_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ] ; entry ; entry = entry -> next )		3291834	3					
ANR	3291892	ForInit	entry = nios2_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ] ;	144:7:4196:4249	3291834	0	True				
ANR	3291893	AssignmentExpression	entry = nios2_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ]		3291834	0		=			
ANR	3291894	Identifier	entry		3291834	0					
ANR	3291895	ArrayIndexing	nios2_hash [ ( opcode >> OP_SH_OP ) & OP_MASK_OP ]		3291834	1					
ANR	3291896	Identifier	nios2_hash		3291834	0					
ANR	3291897	BitAndExpression	( opcode >> OP_SH_OP ) & OP_MASK_OP		3291834	1		&			
ANR	3291898	ShiftExpression	opcode >> OP_SH_OP		3291834	0		>>			
ANR	3291899	Identifier	opcode		3291834	0					
ANR	3291900	Identifier	OP_SH_OP		3291834	1					
ANR	3291901	Identifier	OP_MASK_OP		3291834	1					
ANR	3291902	Condition	entry	145:3:4254:4258	3291834	1	True				
ANR	3291903	Identifier	entry		3291834	0					
ANR	3291904	AssignmentExpression	entry = entry -> next	145:10:4261:4279	3291834	2	True	=			
ANR	3291905	Identifier	entry		3291834	0					
ANR	3291906	PtrMemberAccess	entry -> next		3291834	1					
ANR	3291907	Identifier	entry		3291834	0					
ANR	3291908	Identifier	next		3291834	1					
ANR	3291909	CompoundStatement		19:31:534:534	3291834	3					
ANR	3291910	IfStatement	if ( entry -> opcode -> match == ( opcode & entry -> opcode -> mask ) )		3291834	0					
ANR	3291911	Condition	entry -> opcode -> match == ( opcode & entry -> opcode -> mask )	146:7:4291:4344	3291834	0	True				
ANR	3291912	EqualityExpression	entry -> opcode -> match == ( opcode & entry -> opcode -> mask )		3291834	0		==			
ANR	3291913	PtrMemberAccess	entry -> opcode -> match		3291834	0					
ANR	3291914	PtrMemberAccess	entry -> opcode		3291834	0					
ANR	3291915	Identifier	entry		3291834	0					
ANR	3291916	Identifier	opcode		3291834	1					
ANR	3291917	Identifier	match		3291834	1					
ANR	3291918	BitAndExpression	opcode & entry -> opcode -> mask		3291834	1		&			
ANR	3291919	Identifier	opcode		3291834	0					
ANR	3291920	PtrMemberAccess	entry -> opcode -> mask		3291834	1					
ANR	3291921	PtrMemberAccess	entry -> opcode		3291834	0					
ANR	3291922	Identifier	entry		3291834	0					
ANR	3291923	Identifier	opcode		3291834	1					
ANR	3291924	Identifier	mask		3291834	1					
ANR	3291925	CompoundStatement		20:63:599:599	3291834	1					
ANR	3291926	ReturnStatement	return entry -> opcode ;	147:4:4353:4373	3291834	0	True				
ANR	3291927	PtrMemberAccess	entry -> opcode		3291834	0					
ANR	3291928	Identifier	entry		3291834	0					
ANR	3291929	Identifier	opcode		3291834	1					
ANR	3291930	ReturnStatement	return NULL ;	151:2:4387:4398	3291834	4	True				
ANR	3291931	Identifier	NULL		3291834	0					
ANR	3291932	ReturnType	const struct nios2_opcode *		3291834	1					
ANR	3291933	Identifier	nios2_find_opcode_hash		3291834	2					
ANR	3291934	ParameterList	unsigned long opcode		3291834	3					
ANR	3291935	Parameter	unsigned long opcode	126:24:3725:3744	3291834	0	True				
ANR	3291936	ParameterType	unsigned long		3291834	0					
ANR	3291937	Identifier	opcode		3291834	1					
ANR	3291938	CFGEntryNode	ENTRY		3291834		True				
ANR	3291939	CFGExitNode	EXIT		3291834		True				
ANR	3291940	Symbol	entry -> next		3291834						
ANR	3291941	Symbol	NULL		3291834						
ANR	3291942	Symbol	* * entry		3291834						
ANR	3291943	Symbol	OP_MASK_OP		3291834						
ANR	3291944	Symbol	* entry -> opcode		3291834						
ANR	3291945	Symbol	entry -> opcode -> match		3291834						
ANR	3291946	Symbol	opcode		3291834						
ANR	3291947	Symbol	nios2_hash_init		3291834						
ANR	3291948	Symbol	entry		3291834						
ANR	3291949	Symbol	* nios2_ps_hash		3291834						
ANR	3291950	Symbol	OP_SH_OP		3291834						
ANR	3291951	Symbol	entry -> opcode		3291834						
ANR	3291952	Symbol	nios2_hash		3291834						
ANR	3291953	Symbol	* nios2_hash		3291834						
ANR	3291954	Symbol	* OP_SH_OP		3291834						
ANR	3291955	Symbol	* OP_MASK_OP		3291834						
ANR	3291956	Symbol	nios2_ps_hash		3291834						
ANR	3291957	Symbol	entry -> opcode -> mask		3291834						
ANR	3291958	Symbol	* opcode		3291834						
ANR	3291959	Symbol	* entry		3291834						
ANR	3291960	Function	nios2_coprocessor_regs	159:0:4597:4949							
ANR	3291961	FunctionDef	nios2_coprocessor_regs ()		3291960	0					
ANR	3291962	CompoundStatement		161:0:4653:4949	3291960	0					
ANR	3291963	Statement	static	162:2:4657:4662	3291960	0	True				
ANR	3291964	IdentifierDeclStatement	struct nios2_reg * cached = NULL ;	162:9:4664:4695	3291960	1	True				
ANR	3291965	IdentifierDecl	* cached = NULL		3291960	0					
ANR	3291966	IdentifierDeclType	struct nios2_reg *		3291960	0					
ANR	3291967	Identifier	cached		3291960	1					
ANR	3291968	AssignmentExpression	* cached = NULL		3291960	2		=			
ANR	3291969	Identifier	NULL		3291960	0					
ANR	3291970	Identifier	NULL		3291960	1					
ANR	3291971	IfStatement	if ( ! cached )		3291960	2					
ANR	3291972	Condition	! cached	164:6:4706:4712	3291960	0	True				
ANR	3291973	UnaryOperationExpression	! cached		3291960	0					
ANR	3291974	UnaryOperator	!		3291960	0					
ANR	3291975	Identifier	cached		3291960	1					
ANR	3291976	CompoundStatement		6:6:73:78	3291960	1					
ANR	3291977	IdentifierDeclStatement	int i ;	166:6:4727:4732	3291960	0	True				
ANR	3291978	IdentifierDecl	i		3291960	0					
ANR	3291979	IdentifierDeclType	int		3291960	0					
ANR	3291980	Identifier	i		3291960	1					
ANR	3291981	ForStatement	for ( i = NUMREGNAMES ; i < nios2_num_regs ; i ++ )		3291960	1					
ANR	3291982	ForInit	i = NUMREGNAMES ;	167:11:4745:4760	3291960	0	True				
ANR	3291983	AssignmentExpression	i = NUMREGNAMES		3291960	0		=			
ANR	3291984	Identifier	i		3291960	0					
ANR	3291985	Identifier	NUMREGNAMES		3291960	1					
ANR	3291986	Condition	i < nios2_num_regs	167:28:4762:4779	3291960	1	True				
ANR	3291987	RelationalExpression	i < nios2_num_regs		3291960	0		<			
ANR	3291988	Identifier	i		3291960	0					
ANR	3291989	Identifier	nios2_num_regs		3291960	1					
ANR	3291990	PostIncDecOperationExpression	i ++	167:48:4782:4784	3291960	2	True				
ANR	3291991	Identifier	i		3291960	0					
ANR	3291992	IncDec	++		3291960	1					
ANR	3291993	CompoundStatement		7:53:133:133	3291960	3					
ANR	3291994	IfStatement	"if ( ! strcmp ( nios2_regs [ i ] . name , ""c0"" ) )"		3291960	0					
ANR	3291995	Condition	"! strcmp ( nios2_regs [ i ] . name , ""c0"" )"	168:11:4800:4833	3291960	0	True				
ANR	3291996	UnaryOperationExpression	"! strcmp ( nios2_regs [ i ] . name , ""c0"" )"		3291960	0					
ANR	3291997	UnaryOperator	!		3291960	0					
ANR	3291998	CallExpression	"strcmp ( nios2_regs [ i ] . name , ""c0"" )"		3291960	1					
ANR	3291999	Callee	strcmp		3291960	0					
ANR	3292000	Identifier	strcmp		3291960	0					
ANR	3292001	ArgumentList	nios2_regs [ i ] . name		3291960	1					
ANR	3292002	Argument	nios2_regs [ i ] . name		3291960	0					
ANR	3292003	MemberAccess	nios2_regs [ i ] . name		3291960	0					
ANR	3292004	ArrayIndexing	nios2_regs [ i ]		3291960	0					
ANR	3292005	Identifier	nios2_regs		3291960	0					
ANR	3292006	Identifier	i		3291960	1					
ANR	3292007	Identifier	name		3291960	1					
ANR	3292008	Argument	"""c0"""		3291960	1					
ANR	3292009	PrimaryExpression	"""c0"""		3291960	0					
ANR	3292010	CompoundStatement		8:47:182:182	3291960	1					
ANR	3292011	ExpressionStatement	cached = nios2_regs + i	169:8:4846:4869	3291960	0	True				
ANR	3292012	AssignmentExpression	cached = nios2_regs + i		3291960	0		=			
ANR	3292013	Identifier	cached		3291960	0					
ANR	3292014	AdditiveExpression	nios2_regs + i		3291960	1		+			
ANR	3292015	Identifier	nios2_regs		3291960	0					
ANR	3292016	Identifier	i		3291960	1					
ANR	3292017	BreakStatement	break ;	170:8:4879:4884	3291960	1	True				
ANR	3292018	ExpressionStatement	assert ( cached )	173:6:4909:4924	3291960	2	True				
ANR	3292019	CallExpression	assert ( cached )		3291960	0					
ANR	3292020	Callee	assert		3291960	0					
ANR	3292021	Identifier	assert		3291960	0					
ANR	3292022	ArgumentList	cached		3291960	1					
ANR	3292023	Argument	cached		3291960	0					
ANR	3292024	Identifier	cached		3291960	0					
ANR	3292025	ReturnStatement	return cached ;	175:2:4934:4947	3291960	3	True				
ANR	3292026	Identifier	cached		3291960	0					
ANR	3292027	ReturnType	static struct nios2_reg *		3291960	1					
ANR	3292028	Identifier	nios2_coprocessor_regs		3291960	2					
ANR	3292029	ParameterList			3291960	3					
ANR	3292030	CFGEntryNode	ENTRY		3291960		True				
ANR	3292031	CFGExitNode	EXIT		3291960		True				
ANR	3292032	Symbol	strcmp		3291960						
ANR	3292033	Symbol	nios2_num_regs		3291960						
ANR	3292034	Symbol	NULL		3291960						
ANR	3292035	Symbol	* i		3291960						
ANR	3292036	Symbol	cached		3291960						
ANR	3292037	Symbol	i		3291960						
ANR	3292038	Symbol	nios2_regs [ i ] . name		3291960						
ANR	3292039	Symbol	nios2_regs		3291960						
ANR	3292040	Symbol	NUMREGNAMES		3291960						
ANR	3292041	Symbol	* nios2_regs		3291960						
ANR	3292042	Function	nios2_control_regs	179:0:5024:5376							
ANR	3292043	FunctionDef	nios2_control_regs ()		3292042	0					
ANR	3292044	CompoundStatement		181:0:5076:5376	3292042	0					
ANR	3292045	Statement	static	182:2:5080:5085	3292042	0	True				
ANR	3292046	IdentifierDeclStatement	struct nios2_reg * cached = NULL ;	182:9:5087:5118	3292042	1	True				
ANR	3292047	IdentifierDecl	* cached = NULL		3292042	0					
ANR	3292048	IdentifierDeclType	struct nios2_reg *		3292042	0					
ANR	3292049	Identifier	cached		3292042	1					
ANR	3292050	AssignmentExpression	* cached = NULL		3292042	2		=			
ANR	3292051	Identifier	NULL		3292042	0					
ANR	3292052	Identifier	NULL		3292042	1					
ANR	3292053	IfStatement	if ( ! cached )		3292042	2					
ANR	3292054	Condition	! cached	184:6:5129:5135	3292042	0	True				
ANR	3292055	UnaryOperationExpression	! cached		3292042	0					
ANR	3292056	UnaryOperator	!		3292042	0					
ANR	3292057	Identifier	cached		3292042	1					
ANR	3292058	CompoundStatement		6:6:73:78	3292042	1					
ANR	3292059	IdentifierDeclStatement	int i ;	186:6:5150:5155	3292042	0	True				
ANR	3292060	IdentifierDecl	i		3292042	0					
ANR	3292061	IdentifierDeclType	int		3292042	0					
ANR	3292062	Identifier	i		3292042	1					
ANR	3292063	ForStatement	for ( i = NUMREGNAMES ; i < nios2_num_regs ; i ++ )		3292042	1					
ANR	3292064	ForInit	i = NUMREGNAMES ;	187:11:5168:5183	3292042	0	True				
ANR	3292065	AssignmentExpression	i = NUMREGNAMES		3292042	0		=			
ANR	3292066	Identifier	i		3292042	0					
ANR	3292067	Identifier	NUMREGNAMES		3292042	1					
ANR	3292068	Condition	i < nios2_num_regs	187:28:5185:5202	3292042	1	True				
ANR	3292069	RelationalExpression	i < nios2_num_regs		3292042	0		<			
ANR	3292070	Identifier	i		3292042	0					
ANR	3292071	Identifier	nios2_num_regs		3292042	1					
ANR	3292072	PostIncDecOperationExpression	i ++	187:48:5205:5207	3292042	2	True				
ANR	3292073	Identifier	i		3292042	0					
ANR	3292074	IncDec	++		3292042	1					
ANR	3292075	CompoundStatement		7:53:133:133	3292042	3					
ANR	3292076	IfStatement	"if ( ! strcmp ( nios2_regs [ i ] . name , ""status"" ) )"		3292042	0					
ANR	3292077	Condition	"! strcmp ( nios2_regs [ i ] . name , ""status"" )"	188:11:5223:5260	3292042	0	True				
ANR	3292078	UnaryOperationExpression	"! strcmp ( nios2_regs [ i ] . name , ""status"" )"		3292042	0					
ANR	3292079	UnaryOperator	!		3292042	0					
ANR	3292080	CallExpression	"strcmp ( nios2_regs [ i ] . name , ""status"" )"		3292042	1					
ANR	3292081	Callee	strcmp		3292042	0					
ANR	3292082	Identifier	strcmp		3292042	0					
ANR	3292083	ArgumentList	nios2_regs [ i ] . name		3292042	1					
ANR	3292084	Argument	nios2_regs [ i ] . name		3292042	0					
ANR	3292085	MemberAccess	nios2_regs [ i ] . name		3292042	0					
ANR	3292086	ArrayIndexing	nios2_regs [ i ]		3292042	0					
ANR	3292087	Identifier	nios2_regs		3292042	0					
ANR	3292088	Identifier	i		3292042	1					
ANR	3292089	Identifier	name		3292042	1					
ANR	3292090	Argument	"""status"""		3292042	1					
ANR	3292091	PrimaryExpression	"""status"""		3292042	0					
ANR	3292092	CompoundStatement		8:51:186:186	3292042	1					
ANR	3292093	ExpressionStatement	cached = nios2_regs + i	189:8:5273:5296	3292042	0	True				
ANR	3292094	AssignmentExpression	cached = nios2_regs + i		3292042	0		=			
ANR	3292095	Identifier	cached		3292042	0					
ANR	3292096	AdditiveExpression	nios2_regs + i		3292042	1		+			
ANR	3292097	Identifier	nios2_regs		3292042	0					
ANR	3292098	Identifier	i		3292042	1					
ANR	3292099	BreakStatement	break ;	190:8:5306:5311	3292042	1	True				
ANR	3292100	ExpressionStatement	assert ( cached )	193:6:5336:5351	3292042	2	True				
ANR	3292101	CallExpression	assert ( cached )		3292042	0					
ANR	3292102	Callee	assert		3292042	0					
ANR	3292103	Identifier	assert		3292042	0					
ANR	3292104	ArgumentList	cached		3292042	1					
ANR	3292105	Argument	cached		3292042	0					
ANR	3292106	Identifier	cached		3292042	0					
ANR	3292107	ReturnStatement	return cached ;	195:2:5361:5374	3292042	3	True				
ANR	3292108	Identifier	cached		3292042	0					
ANR	3292109	ReturnType	static struct nios2_reg *		3292042	1					
ANR	3292110	Identifier	nios2_control_regs		3292042	2					
ANR	3292111	ParameterList			3292042	3					
ANR	3292112	CFGEntryNode	ENTRY		3292042		True				
ANR	3292113	CFGExitNode	EXIT		3292042		True				
ANR	3292114	Symbol	strcmp		3292042						
ANR	3292115	Symbol	nios2_num_regs		3292042						
ANR	3292116	Symbol	NULL		3292042						
ANR	3292117	Symbol	* i		3292042						
ANR	3292118	Symbol	cached		3292042						
ANR	3292119	Symbol	i		3292042						
ANR	3292120	Symbol	nios2_regs [ i ] . name		3292042						
ANR	3292121	Symbol	nios2_regs		3292042						
ANR	3292122	Symbol	NUMREGNAMES		3292042						
ANR	3292123	Symbol	* nios2_regs		3292042						
ANR	3292124	Function	nios2_print_insn_arg	201:0:5566:9068							
ANR	3292125	FunctionDef	"nios2_print_insn_arg (const char * argptr , unsigned long opcode , bfd_vma address , disassemble_info * info)"		3292124	0					
ANR	3292126	CompoundStatement		205:0:5698:9068	3292124	0					
ANR	3292127	IdentifierDeclStatement	unsigned long i = 0 ;	206:2:5702:5721	3292124	0	True				
ANR	3292128	IdentifierDecl	i = 0		3292124	0					
ANR	3292129	IdentifierDeclType	unsigned long		3292124	0					
ANR	3292130	Identifier	i		3292124	1					
ANR	3292131	AssignmentExpression	i = 0		3292124	2		=			
ANR	3292132	Identifier	i		3292124	0					
ANR	3292133	PrimaryExpression	0		3292124	1					
ANR	3292134	IdentifierDeclStatement	struct nios2_reg * reg_base ;	207:2:5725:5751	3292124	1	True				
ANR	3292135	IdentifierDecl	* reg_base		3292124	0					
ANR	3292136	IdentifierDeclType	struct nios2_reg *		3292124	0					
ANR	3292137	Identifier	reg_base		3292124	1					
ANR	3292138	SwitchStatement	switch ( * argptr )		3292124	2					
ANR	3292139	Condition	* argptr	209:10:5764:5770	3292124	0	True				
ANR	3292140	UnaryOperationExpression	* argptr		3292124	0					
ANR	3292141	UnaryOperator	*		3292124	0					
ANR	3292142	Identifier	argptr		3292124	1					
ANR	3292143	CompoundStatement		6:4:78:78	3292124	1					
ANR	3292144	Label	"case ',' :"	211:4:5783:5791	3292124	0	True				
ANR	3292145	Label	case '(' :	212:4:5797:5805	3292124	1	True				
ANR	3292146	Label	case ')' :	213:4:5811:5819	3292124	2	True				
ANR	3292147	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%c"" , * argptr )"	214:6:5827:5878	3292124	3	True				
ANR	3292148	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%c"" , * argptr )"		3292124	0					
ANR	3292149	Callee	* info -> fprintf_func		3292124	0					
ANR	3292150	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292151	UnaryOperator	*		3292124	0					
ANR	3292152	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292153	Identifier	info		3292124	0					
ANR	3292154	Identifier	fprintf_func		3292124	1					
ANR	3292155	ArgumentList	info -> stream		3292124	1					
ANR	3292156	Argument	info -> stream		3292124	0					
ANR	3292157	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292158	Identifier	info		3292124	0					
ANR	3292159	Identifier	stream		3292124	1					
ANR	3292160	Argument	"""%c"""		3292124	1					
ANR	3292161	PrimaryExpression	"""%c"""		3292124	0					
ANR	3292162	Argument	* argptr		3292124	2					
ANR	3292163	UnaryOperationExpression	* argptr		3292124	0					
ANR	3292164	UnaryOperator	*		3292124	0					
ANR	3292165	Identifier	argptr		3292124	1					
ANR	3292166	BreakStatement	break ;	215:6:5886:5891	3292124	4	True				
ANR	3292167	Label	case 'd' :	216:4:5897:5905	3292124	5	True				
ANR	3292168	ExpressionStatement	"i = GET_INSN_FIELD ( RRD , opcode )"	217:6:5913:5945	3292124	6	True				
ANR	3292169	AssignmentExpression	"i = GET_INSN_FIELD ( RRD , opcode )"		3292124	0		=			
ANR	3292170	Identifier	i		3292124	0					
ANR	3292171	CallExpression	"GET_INSN_FIELD ( RRD , opcode )"		3292124	1					
ANR	3292172	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292173	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292174	ArgumentList	RRD		3292124	1					
ANR	3292175	Argument	RRD		3292124	0					
ANR	3292176	Identifier	RRD		3292124	0					
ANR	3292177	Argument	opcode		3292124	1					
ANR	3292178	Identifier	opcode		3292124	0					
ANR	3292179	IfStatement	"if ( GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_C , opcode ) == 0 )"		3292124	7					
ANR	3292180	Condition	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_C , opcode ) == 0"	219:10:5958:6045	3292124	0	True				
ANR	3292181	AndExpression	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_C , opcode ) == 0"		3292124	0		&&			
ANR	3292182	EqualityExpression	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM"		3292124	0		==			
ANR	3292183	CallExpression	"GET_INSN_FIELD ( OP , opcode )"		3292124	0					
ANR	3292184	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292185	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292186	ArgumentList	OP		3292124	1					
ANR	3292187	Argument	OP		3292124	0					
ANR	3292188	Identifier	OP		3292124	0					
ANR	3292189	Argument	opcode		3292124	1					
ANR	3292190	Identifier	opcode		3292124	0					
ANR	3292191	Identifier	OP_MATCH_CUSTOM		3292124	1					
ANR	3292192	EqualityExpression	"GET_INSN_FIELD ( CUSTOM_C , opcode ) == 0"		3292124	1		==			
ANR	3292193	CallExpression	"GET_INSN_FIELD ( CUSTOM_C , opcode )"		3292124	0					
ANR	3292194	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292195	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292196	ArgumentList	CUSTOM_C		3292124	1					
ANR	3292197	Argument	CUSTOM_C		3292124	0					
ANR	3292198	Identifier	CUSTOM_C		3292124	0					
ANR	3292199	Argument	opcode		3292124	1					
ANR	3292200	Identifier	opcode		3292124	0					
ANR	3292201	PrimaryExpression	0		3292124	1					
ANR	3292202	CompoundStatement		15:100:349:349	3292124	1					
ANR	3292203	ExpressionStatement	reg_base = nios2_coprocessor_regs ( )	220:7:6057:6093	3292124	0	True				
ANR	3292204	AssignmentExpression	reg_base = nios2_coprocessor_regs ( )		3292124	0		=			
ANR	3292205	Identifier	reg_base		3292124	0					
ANR	3292206	CallExpression	nios2_coprocessor_regs ( )		3292124	1					
ANR	3292207	Callee	nios2_coprocessor_regs		3292124	0					
ANR	3292208	Identifier	nios2_coprocessor_regs		3292124	0					
ANR	3292209	ArgumentList			3292124	1					
ANR	3292210	ElseStatement	else		3292124	0					
ANR	3292211	CompoundStatement		17:13:409:409	3292124	0					
ANR	3292212	ExpressionStatement	reg_base = nios2_regs	222:7:6117:6138	3292124	0	True				
ANR	3292213	AssignmentExpression	reg_base = nios2_regs		3292124	0		=			
ANR	3292214	Identifier	reg_base		3292124	0					
ANR	3292215	Identifier	nios2_regs		3292124	1					
ANR	3292216	IfStatement	if ( i < NUMREGNAMES )		3292124	8					
ANR	3292217	Condition	i < NUMREGNAMES	225:10:6159:6173	3292124	0	True				
ANR	3292218	RelationalExpression	i < NUMREGNAMES		3292124	0		<			
ANR	3292219	Identifier	i		3292124	0					
ANR	3292220	Identifier	NUMREGNAMES		3292124	1					
ANR	3292221	CompoundStatement		21:27:477:477	3292124	1					
ANR	3292222	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"	226:7:6185:6245	3292124	0	True				
ANR	3292223	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"		3292124	0					
ANR	3292224	Callee	* info -> fprintf_func		3292124	0					
ANR	3292225	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292226	UnaryOperator	*		3292124	0					
ANR	3292227	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292228	Identifier	info		3292124	0					
ANR	3292229	Identifier	fprintf_func		3292124	1					
ANR	3292230	ArgumentList	info -> stream		3292124	1					
ANR	3292231	Argument	info -> stream		3292124	0					
ANR	3292232	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292233	Identifier	info		3292124	0					
ANR	3292234	Identifier	stream		3292124	1					
ANR	3292235	Argument	"""%s"""		3292124	1					
ANR	3292236	PrimaryExpression	"""%s"""		3292124	0					
ANR	3292237	Argument	reg_base [ i ] . name		3292124	2					
ANR	3292238	MemberAccess	reg_base [ i ] . name		3292124	0					
ANR	3292239	ArrayIndexing	reg_base [ i ]		3292124	0					
ANR	3292240	Identifier	reg_base		3292124	0					
ANR	3292241	Identifier	i		3292124	1					
ANR	3292242	Identifier	name		3292124	1					
ANR	3292243	ElseStatement	else		3292124	0					
ANR	3292244	CompoundStatement		23:13:561:561	3292124	0					
ANR	3292245	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"	228:7:6269:6316	3292124	0	True				
ANR	3292246	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"		3292124	0					
ANR	3292247	Callee	* info -> fprintf_func		3292124	0					
ANR	3292248	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292249	UnaryOperator	*		3292124	0					
ANR	3292250	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292251	Identifier	info		3292124	0					
ANR	3292252	Identifier	fprintf_func		3292124	1					
ANR	3292253	ArgumentList	info -> stream		3292124	1					
ANR	3292254	Argument	info -> stream		3292124	0					
ANR	3292255	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292256	Identifier	info		3292124	0					
ANR	3292257	Identifier	stream		3292124	1					
ANR	3292258	Argument	"""unknown"""		3292124	1					
ANR	3292259	PrimaryExpression	"""unknown"""		3292124	0					
ANR	3292260	BreakStatement	break ;	230:6:6332:6337	3292124	9	True				
ANR	3292261	Label	case 's' :	231:4:6343:6351	3292124	10	True				
ANR	3292262	ExpressionStatement	"i = GET_INSN_FIELD ( RRS , opcode )"	232:6:6359:6391	3292124	11	True				
ANR	3292263	AssignmentExpression	"i = GET_INSN_FIELD ( RRS , opcode )"		3292124	0		=			
ANR	3292264	Identifier	i		3292124	0					
ANR	3292265	CallExpression	"GET_INSN_FIELD ( RRS , opcode )"		3292124	1					
ANR	3292266	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292267	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292268	ArgumentList	RRS		3292124	1					
ANR	3292269	Argument	RRS		3292124	0					
ANR	3292270	Identifier	RRS		3292124	0					
ANR	3292271	Argument	opcode		3292124	1					
ANR	3292272	Identifier	opcode		3292124	0					
ANR	3292273	IfStatement	"if ( GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_A , opcode ) == 0 )"		3292124	12					
ANR	3292274	Condition	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_A , opcode ) == 0"	234:10:6404:6491	3292124	0	True				
ANR	3292275	AndExpression	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_A , opcode ) == 0"		3292124	0		&&			
ANR	3292276	EqualityExpression	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM"		3292124	0		==			
ANR	3292277	CallExpression	"GET_INSN_FIELD ( OP , opcode )"		3292124	0					
ANR	3292278	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292279	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292280	ArgumentList	OP		3292124	1					
ANR	3292281	Argument	OP		3292124	0					
ANR	3292282	Identifier	OP		3292124	0					
ANR	3292283	Argument	opcode		3292124	1					
ANR	3292284	Identifier	opcode		3292124	0					
ANR	3292285	Identifier	OP_MATCH_CUSTOM		3292124	1					
ANR	3292286	EqualityExpression	"GET_INSN_FIELD ( CUSTOM_A , opcode ) == 0"		3292124	1		==			
ANR	3292287	CallExpression	"GET_INSN_FIELD ( CUSTOM_A , opcode )"		3292124	0					
ANR	3292288	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292289	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292290	ArgumentList	CUSTOM_A		3292124	1					
ANR	3292291	Argument	CUSTOM_A		3292124	0					
ANR	3292292	Identifier	CUSTOM_A		3292124	0					
ANR	3292293	Argument	opcode		3292124	1					
ANR	3292294	Identifier	opcode		3292124	0					
ANR	3292295	PrimaryExpression	0		3292124	1					
ANR	3292296	CompoundStatement		30:100:795:795	3292124	1					
ANR	3292297	ExpressionStatement	reg_base = nios2_coprocessor_regs ( )	235:7:6503:6539	3292124	0	True				
ANR	3292298	AssignmentExpression	reg_base = nios2_coprocessor_regs ( )		3292124	0		=			
ANR	3292299	Identifier	reg_base		3292124	0					
ANR	3292300	CallExpression	nios2_coprocessor_regs ( )		3292124	1					
ANR	3292301	Callee	nios2_coprocessor_regs		3292124	0					
ANR	3292302	Identifier	nios2_coprocessor_regs		3292124	0					
ANR	3292303	ArgumentList			3292124	1					
ANR	3292304	ElseStatement	else		3292124	0					
ANR	3292305	CompoundStatement		32:13:855:855	3292124	0					
ANR	3292306	ExpressionStatement	reg_base = nios2_regs	237:7:6563:6584	3292124	0	True				
ANR	3292307	AssignmentExpression	reg_base = nios2_regs		3292124	0		=			
ANR	3292308	Identifier	reg_base		3292124	0					
ANR	3292309	Identifier	nios2_regs		3292124	1					
ANR	3292310	IfStatement	if ( i < NUMREGNAMES )		3292124	13					
ANR	3292311	Condition	i < NUMREGNAMES	240:10:6605:6619	3292124	0	True				
ANR	3292312	RelationalExpression	i < NUMREGNAMES		3292124	0		<			
ANR	3292313	Identifier	i		3292124	0					
ANR	3292314	Identifier	NUMREGNAMES		3292124	1					
ANR	3292315	CompoundStatement		36:27:923:923	3292124	1					
ANR	3292316	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"	241:7:6631:6691	3292124	0	True				
ANR	3292317	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"		3292124	0					
ANR	3292318	Callee	* info -> fprintf_func		3292124	0					
ANR	3292319	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292320	UnaryOperator	*		3292124	0					
ANR	3292321	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292322	Identifier	info		3292124	0					
ANR	3292323	Identifier	fprintf_func		3292124	1					
ANR	3292324	ArgumentList	info -> stream		3292124	1					
ANR	3292325	Argument	info -> stream		3292124	0					
ANR	3292326	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292327	Identifier	info		3292124	0					
ANR	3292328	Identifier	stream		3292124	1					
ANR	3292329	Argument	"""%s"""		3292124	1					
ANR	3292330	PrimaryExpression	"""%s"""		3292124	0					
ANR	3292331	Argument	reg_base [ i ] . name		3292124	2					
ANR	3292332	MemberAccess	reg_base [ i ] . name		3292124	0					
ANR	3292333	ArrayIndexing	reg_base [ i ]		3292124	0					
ANR	3292334	Identifier	reg_base		3292124	0					
ANR	3292335	Identifier	i		3292124	1					
ANR	3292336	Identifier	name		3292124	1					
ANR	3292337	ElseStatement	else		3292124	0					
ANR	3292338	CompoundStatement		38:13:1007:1007	3292124	0					
ANR	3292339	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"	243:7:6715:6762	3292124	0	True				
ANR	3292340	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"		3292124	0					
ANR	3292341	Callee	* info -> fprintf_func		3292124	0					
ANR	3292342	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292343	UnaryOperator	*		3292124	0					
ANR	3292344	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292345	Identifier	info		3292124	0					
ANR	3292346	Identifier	fprintf_func		3292124	1					
ANR	3292347	ArgumentList	info -> stream		3292124	1					
ANR	3292348	Argument	info -> stream		3292124	0					
ANR	3292349	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292350	Identifier	info		3292124	0					
ANR	3292351	Identifier	stream		3292124	1					
ANR	3292352	Argument	"""unknown"""		3292124	1					
ANR	3292353	PrimaryExpression	"""unknown"""		3292124	0					
ANR	3292354	BreakStatement	break ;	245:6:6778:6783	3292124	14	True				
ANR	3292355	Label	case 't' :	246:4:6789:6797	3292124	15	True				
ANR	3292356	ExpressionStatement	"i = GET_INSN_FIELD ( RRT , opcode )"	247:6:6805:6837	3292124	16	True				
ANR	3292357	AssignmentExpression	"i = GET_INSN_FIELD ( RRT , opcode )"		3292124	0		=			
ANR	3292358	Identifier	i		3292124	0					
ANR	3292359	CallExpression	"GET_INSN_FIELD ( RRT , opcode )"		3292124	1					
ANR	3292360	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292361	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292362	ArgumentList	RRT		3292124	1					
ANR	3292363	Argument	RRT		3292124	0					
ANR	3292364	Identifier	RRT		3292124	0					
ANR	3292365	Argument	opcode		3292124	1					
ANR	3292366	Identifier	opcode		3292124	0					
ANR	3292367	IfStatement	"if ( GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_B , opcode ) == 0 )"		3292124	17					
ANR	3292368	Condition	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_B , opcode ) == 0"	249:10:6850:6937	3292124	0	True				
ANR	3292369	AndExpression	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM && GET_INSN_FIELD ( CUSTOM_B , opcode ) == 0"		3292124	0		&&			
ANR	3292370	EqualityExpression	"GET_INSN_FIELD ( OP , opcode ) == OP_MATCH_CUSTOM"		3292124	0		==			
ANR	3292371	CallExpression	"GET_INSN_FIELD ( OP , opcode )"		3292124	0					
ANR	3292372	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292373	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292374	ArgumentList	OP		3292124	1					
ANR	3292375	Argument	OP		3292124	0					
ANR	3292376	Identifier	OP		3292124	0					
ANR	3292377	Argument	opcode		3292124	1					
ANR	3292378	Identifier	opcode		3292124	0					
ANR	3292379	Identifier	OP_MATCH_CUSTOM		3292124	1					
ANR	3292380	EqualityExpression	"GET_INSN_FIELD ( CUSTOM_B , opcode ) == 0"		3292124	1		==			
ANR	3292381	CallExpression	"GET_INSN_FIELD ( CUSTOM_B , opcode )"		3292124	0					
ANR	3292382	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292383	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292384	ArgumentList	CUSTOM_B		3292124	1					
ANR	3292385	Argument	CUSTOM_B		3292124	0					
ANR	3292386	Identifier	CUSTOM_B		3292124	0					
ANR	3292387	Argument	opcode		3292124	1					
ANR	3292388	Identifier	opcode		3292124	0					
ANR	3292389	PrimaryExpression	0		3292124	1					
ANR	3292390	CompoundStatement		45:100:1241:1241	3292124	1					
ANR	3292391	ExpressionStatement	reg_base = nios2_coprocessor_regs ( )	250:7:6949:6985	3292124	0	True				
ANR	3292392	AssignmentExpression	reg_base = nios2_coprocessor_regs ( )		3292124	0		=			
ANR	3292393	Identifier	reg_base		3292124	0					
ANR	3292394	CallExpression	nios2_coprocessor_regs ( )		3292124	1					
ANR	3292395	Callee	nios2_coprocessor_regs		3292124	0					
ANR	3292396	Identifier	nios2_coprocessor_regs		3292124	0					
ANR	3292397	ArgumentList			3292124	1					
ANR	3292398	ElseStatement	else		3292124	0					
ANR	3292399	CompoundStatement		47:13:1301:1301	3292124	0					
ANR	3292400	ExpressionStatement	reg_base = nios2_regs	252:7:7009:7030	3292124	0	True				
ANR	3292401	AssignmentExpression	reg_base = nios2_regs		3292124	0		=			
ANR	3292402	Identifier	reg_base		3292124	0					
ANR	3292403	Identifier	nios2_regs		3292124	1					
ANR	3292404	IfStatement	if ( i < NUMREGNAMES )		3292124	18					
ANR	3292405	Condition	i < NUMREGNAMES	255:10:7051:7065	3292124	0	True				
ANR	3292406	RelationalExpression	i < NUMREGNAMES		3292124	0		<			
ANR	3292407	Identifier	i		3292124	0					
ANR	3292408	Identifier	NUMREGNAMES		3292124	1					
ANR	3292409	CompoundStatement		51:27:1369:1369	3292124	1					
ANR	3292410	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"	256:7:7077:7137	3292124	0	True				
ANR	3292411	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"		3292124	0					
ANR	3292412	Callee	* info -> fprintf_func		3292124	0					
ANR	3292413	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292414	UnaryOperator	*		3292124	0					
ANR	3292415	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292416	Identifier	info		3292124	0					
ANR	3292417	Identifier	fprintf_func		3292124	1					
ANR	3292418	ArgumentList	info -> stream		3292124	1					
ANR	3292419	Argument	info -> stream		3292124	0					
ANR	3292420	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292421	Identifier	info		3292124	0					
ANR	3292422	Identifier	stream		3292124	1					
ANR	3292423	Argument	"""%s"""		3292124	1					
ANR	3292424	PrimaryExpression	"""%s"""		3292124	0					
ANR	3292425	Argument	reg_base [ i ] . name		3292124	2					
ANR	3292426	MemberAccess	reg_base [ i ] . name		3292124	0					
ANR	3292427	ArrayIndexing	reg_base [ i ]		3292124	0					
ANR	3292428	Identifier	reg_base		3292124	0					
ANR	3292429	Identifier	i		3292124	1					
ANR	3292430	Identifier	name		3292124	1					
ANR	3292431	ElseStatement	else		3292124	0					
ANR	3292432	CompoundStatement		53:13:1453:1453	3292124	0					
ANR	3292433	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"	258:7:7161:7208	3292124	0	True				
ANR	3292434	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"		3292124	0					
ANR	3292435	Callee	* info -> fprintf_func		3292124	0					
ANR	3292436	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292437	UnaryOperator	*		3292124	0					
ANR	3292438	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292439	Identifier	info		3292124	0					
ANR	3292440	Identifier	fprintf_func		3292124	1					
ANR	3292441	ArgumentList	info -> stream		3292124	1					
ANR	3292442	Argument	info -> stream		3292124	0					
ANR	3292443	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292444	Identifier	info		3292124	0					
ANR	3292445	Identifier	stream		3292124	1					
ANR	3292446	Argument	"""unknown"""		3292124	1					
ANR	3292447	PrimaryExpression	"""unknown"""		3292124	0					
ANR	3292448	BreakStatement	break ;	260:6:7224:7229	3292124	19	True				
ANR	3292449	Label	case 'i' :	261:4:7235:7243	3292124	20	True				
ANR	3292450	ExpressionStatement	"i = ( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 ) >> 16"	263:6:7289:7343	3292124	21	True				
ANR	3292451	AssignmentExpression	"i = ( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 ) >> 16"		3292124	0		=			
ANR	3292452	Identifier	i		3292124	0					
ANR	3292453	ShiftExpression	"( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 ) >> 16"		3292124	1		>>			
ANR	3292454	CastExpression	"( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 )"		3292124	0					
ANR	3292455	CastTarget	int		3292124	0					
ANR	3292456	ShiftExpression	"GET_INSN_FIELD ( IMM16 , opcode ) << 16"		3292124	1		<<			
ANR	3292457	CallExpression	"GET_INSN_FIELD ( IMM16 , opcode )"		3292124	0					
ANR	3292458	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292459	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292460	ArgumentList	IMM16		3292124	1					
ANR	3292461	Argument	IMM16		3292124	0					
ANR	3292462	Identifier	IMM16		3292124	0					
ANR	3292463	Argument	opcode		3292124	1					
ANR	3292464	Identifier	opcode		3292124	0					
ANR	3292465	PrimaryExpression	16		3292124	1					
ANR	3292466	PrimaryExpression	16		3292124	1					
ANR	3292467	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"	264:6:7351:7397	3292124	22	True				
ANR	3292468	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"		3292124	0					
ANR	3292469	Callee	* info -> fprintf_func		3292124	0					
ANR	3292470	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292471	UnaryOperator	*		3292124	0					
ANR	3292472	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292473	Identifier	info		3292124	0					
ANR	3292474	Identifier	fprintf_func		3292124	1					
ANR	3292475	ArgumentList	info -> stream		3292124	1					
ANR	3292476	Argument	info -> stream		3292124	0					
ANR	3292477	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292478	Identifier	info		3292124	0					
ANR	3292479	Identifier	stream		3292124	1					
ANR	3292480	Argument	"""%ld"""		3292124	1					
ANR	3292481	PrimaryExpression	"""%ld"""		3292124	0					
ANR	3292482	Argument	i		3292124	2					
ANR	3292483	Identifier	i		3292124	0					
ANR	3292484	BreakStatement	break ;	265:6:7405:7410	3292124	23	True				
ANR	3292485	Label	case 'u' :	266:4:7416:7424	3292124	24	True				
ANR	3292486	ExpressionStatement	"i = GET_INSN_FIELD ( IMM16 , opcode )"	268:6:7472:7506	3292124	25	True				
ANR	3292487	AssignmentExpression	"i = GET_INSN_FIELD ( IMM16 , opcode )"		3292124	0		=			
ANR	3292488	Identifier	i		3292124	0					
ANR	3292489	CallExpression	"GET_INSN_FIELD ( IMM16 , opcode )"		3292124	1					
ANR	3292490	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292491	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292492	ArgumentList	IMM16		3292124	1					
ANR	3292493	Argument	IMM16		3292124	0					
ANR	3292494	Identifier	IMM16		3292124	0					
ANR	3292495	Argument	opcode		3292124	1					
ANR	3292496	Identifier	opcode		3292124	0					
ANR	3292497	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"	269:6:7514:7560	3292124	26	True				
ANR	3292498	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"		3292124	0					
ANR	3292499	Callee	* info -> fprintf_func		3292124	0					
ANR	3292500	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292501	UnaryOperator	*		3292124	0					
ANR	3292502	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292503	Identifier	info		3292124	0					
ANR	3292504	Identifier	fprintf_func		3292124	1					
ANR	3292505	ArgumentList	info -> stream		3292124	1					
ANR	3292506	Argument	info -> stream		3292124	0					
ANR	3292507	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292508	Identifier	info		3292124	0					
ANR	3292509	Identifier	stream		3292124	1					
ANR	3292510	Argument	"""%ld"""		3292124	1					
ANR	3292511	PrimaryExpression	"""%ld"""		3292124	0					
ANR	3292512	Argument	i		3292124	2					
ANR	3292513	Identifier	i		3292124	0					
ANR	3292514	BreakStatement	break ;	270:6:7568:7573	3292124	27	True				
ANR	3292515	Label	case 'o' :	271:4:7579:7587	3292124	28	True				
ANR	3292516	ExpressionStatement	"i = ( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 ) >> 16"	273:6:7648:7702	3292124	29	True				
ANR	3292517	AssignmentExpression	"i = ( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 ) >> 16"		3292124	0		=			
ANR	3292518	Identifier	i		3292124	0					
ANR	3292519	ShiftExpression	"( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 ) >> 16"		3292124	1		>>			
ANR	3292520	CastExpression	"( int ) ( GET_INSN_FIELD ( IMM16 , opcode ) << 16 )"		3292124	0					
ANR	3292521	CastTarget	int		3292124	0					
ANR	3292522	ShiftExpression	"GET_INSN_FIELD ( IMM16 , opcode ) << 16"		3292124	1		<<			
ANR	3292523	CallExpression	"GET_INSN_FIELD ( IMM16 , opcode )"		3292124	0					
ANR	3292524	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292525	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292526	ArgumentList	IMM16		3292124	1					
ANR	3292527	Argument	IMM16		3292124	0					
ANR	3292528	Identifier	IMM16		3292124	0					
ANR	3292529	Argument	opcode		3292124	1					
ANR	3292530	Identifier	opcode		3292124	0					
ANR	3292531	PrimaryExpression	16		3292124	1					
ANR	3292532	PrimaryExpression	16		3292124	1					
ANR	3292533	ExpressionStatement	address = address + 4 + i	274:6:7710:7735	3292124	30	True				
ANR	3292534	AssignmentExpression	address = address + 4 + i		3292124	0		=			
ANR	3292535	Identifier	address		3292124	0					
ANR	3292536	AdditiveExpression	address + 4 + i		3292124	1		+			
ANR	3292537	Identifier	address		3292124	0					
ANR	3292538	AdditiveExpression	4 + i		3292124	1		+			
ANR	3292539	PrimaryExpression	4		3292124	0					
ANR	3292540	Identifier	i		3292124	1					
ANR	3292541	ExpressionStatement	"( * info -> print_address_func ) ( address , info )"	275:6:7743:7786	3292124	31	True				
ANR	3292542	CallExpression	"( * info -> print_address_func ) ( address , info )"		3292124	0					
ANR	3292543	Callee	* info -> print_address_func		3292124	0					
ANR	3292544	UnaryOperationExpression	* info -> print_address_func		3292124	0					
ANR	3292545	UnaryOperator	*		3292124	0					
ANR	3292546	PtrMemberAccess	info -> print_address_func		3292124	1					
ANR	3292547	Identifier	info		3292124	0					
ANR	3292548	Identifier	print_address_func		3292124	1					
ANR	3292549	ArgumentList	address		3292124	1					
ANR	3292550	Argument	address		3292124	0					
ANR	3292551	Identifier	address		3292124	0					
ANR	3292552	Argument	info		3292124	1					
ANR	3292553	Identifier	info		3292124	0					
ANR	3292554	BreakStatement	break ;	276:6:7794:7799	3292124	32	True				
ANR	3292555	Label	case 'p' :	277:4:7805:7813	3292124	33	True				
ANR	3292556	ExpressionStatement	"i = GET_INSN_FIELD ( CACHE_OPX , opcode )"	279:6:7860:7898	3292124	34	True				
ANR	3292557	AssignmentExpression	"i = GET_INSN_FIELD ( CACHE_OPX , opcode )"		3292124	0		=			
ANR	3292558	Identifier	i		3292124	0					
ANR	3292559	CallExpression	"GET_INSN_FIELD ( CACHE_OPX , opcode )"		3292124	1					
ANR	3292560	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292561	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292562	ArgumentList	CACHE_OPX		3292124	1					
ANR	3292563	Argument	CACHE_OPX		3292124	0					
ANR	3292564	Identifier	CACHE_OPX		3292124	0					
ANR	3292565	Argument	opcode		3292124	1					
ANR	3292566	Identifier	opcode		3292124	0					
ANR	3292567	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"	280:6:7906:7952	3292124	35	True				
ANR	3292568	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"		3292124	0					
ANR	3292569	Callee	* info -> fprintf_func		3292124	0					
ANR	3292570	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292571	UnaryOperator	*		3292124	0					
ANR	3292572	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292573	Identifier	info		3292124	0					
ANR	3292574	Identifier	fprintf_func		3292124	1					
ANR	3292575	ArgumentList	info -> stream		3292124	1					
ANR	3292576	Argument	info -> stream		3292124	0					
ANR	3292577	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292578	Identifier	info		3292124	0					
ANR	3292579	Identifier	stream		3292124	1					
ANR	3292580	Argument	"""%ld"""		3292124	1					
ANR	3292581	PrimaryExpression	"""%ld"""		3292124	0					
ANR	3292582	Argument	i		3292124	2					
ANR	3292583	Identifier	i		3292124	0					
ANR	3292584	BreakStatement	break ;	281:6:7960:7965	3292124	36	True				
ANR	3292585	Label	case 'j' :	282:4:7971:7979	3292124	37	True				
ANR	3292586	ExpressionStatement	"i = GET_INSN_FIELD ( IMM5 , opcode )"	284:6:8026:8059	3292124	38	True				
ANR	3292587	AssignmentExpression	"i = GET_INSN_FIELD ( IMM5 , opcode )"		3292124	0		=			
ANR	3292588	Identifier	i		3292124	0					
ANR	3292589	CallExpression	"GET_INSN_FIELD ( IMM5 , opcode )"		3292124	1					
ANR	3292590	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292591	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292592	ArgumentList	IMM5		3292124	1					
ANR	3292593	Argument	IMM5		3292124	0					
ANR	3292594	Identifier	IMM5		3292124	0					
ANR	3292595	Argument	opcode		3292124	1					
ANR	3292596	Identifier	opcode		3292124	0					
ANR	3292597	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"	285:6:8067:8113	3292124	39	True				
ANR	3292598	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"		3292124	0					
ANR	3292599	Callee	* info -> fprintf_func		3292124	0					
ANR	3292600	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292601	UnaryOperator	*		3292124	0					
ANR	3292602	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292603	Identifier	info		3292124	0					
ANR	3292604	Identifier	fprintf_func		3292124	1					
ANR	3292605	ArgumentList	info -> stream		3292124	1					
ANR	3292606	Argument	info -> stream		3292124	0					
ANR	3292607	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292608	Identifier	info		3292124	0					
ANR	3292609	Identifier	stream		3292124	1					
ANR	3292610	Argument	"""%ld"""		3292124	1					
ANR	3292611	PrimaryExpression	"""%ld"""		3292124	0					
ANR	3292612	Argument	i		3292124	2					
ANR	3292613	Identifier	i		3292124	0					
ANR	3292614	BreakStatement	break ;	286:6:8121:8126	3292124	40	True				
ANR	3292615	Label	case 'l' :	287:4:8132:8140	3292124	41	True				
ANR	3292616	ExpressionStatement	"i = GET_INSN_FIELD ( CUSTOM_N , opcode )"	290:6:8227:8264	3292124	42	True				
ANR	3292617	AssignmentExpression	"i = GET_INSN_FIELD ( CUSTOM_N , opcode )"		3292124	0		=			
ANR	3292618	Identifier	i		3292124	0					
ANR	3292619	CallExpression	"GET_INSN_FIELD ( CUSTOM_N , opcode )"		3292124	1					
ANR	3292620	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292621	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292622	ArgumentList	CUSTOM_N		3292124	1					
ANR	3292623	Argument	CUSTOM_N		3292124	0					
ANR	3292624	Identifier	CUSTOM_N		3292124	0					
ANR	3292625	Argument	opcode		3292124	1					
ANR	3292626	Identifier	opcode		3292124	0					
ANR	3292627	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%lu"" , i )"	291:6:8272:8318	3292124	43	True				
ANR	3292628	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%lu"" , i )"		3292124	0					
ANR	3292629	Callee	* info -> fprintf_func		3292124	0					
ANR	3292630	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292631	UnaryOperator	*		3292124	0					
ANR	3292632	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292633	Identifier	info		3292124	0					
ANR	3292634	Identifier	fprintf_func		3292124	1					
ANR	3292635	ArgumentList	info -> stream		3292124	1					
ANR	3292636	Argument	info -> stream		3292124	0					
ANR	3292637	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292638	Identifier	info		3292124	0					
ANR	3292639	Identifier	stream		3292124	1					
ANR	3292640	Argument	"""%lu"""		3292124	1					
ANR	3292641	PrimaryExpression	"""%lu"""		3292124	0					
ANR	3292642	Argument	i		3292124	2					
ANR	3292643	Identifier	i		3292124	0					
ANR	3292644	BreakStatement	break ;	292:6:8326:8331	3292124	44	True				
ANR	3292645	Label	case 'm' :	293:4:8337:8345	3292124	45	True				
ANR	3292646	ExpressionStatement	"i = GET_INSN_FIELD ( IMM26 , opcode )"	295:6:8393:8427	3292124	46	True				
ANR	3292647	AssignmentExpression	"i = GET_INSN_FIELD ( IMM26 , opcode )"		3292124	0		=			
ANR	3292648	Identifier	i		3292124	0					
ANR	3292649	CallExpression	"GET_INSN_FIELD ( IMM26 , opcode )"		3292124	1					
ANR	3292650	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292651	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292652	ArgumentList	IMM26		3292124	1					
ANR	3292653	Argument	IMM26		3292124	0					
ANR	3292654	Identifier	IMM26		3292124	0					
ANR	3292655	Argument	opcode		3292124	1					
ANR	3292656	Identifier	opcode		3292124	0					
ANR	3292657	ExpressionStatement	address = ( address & 0xf0000000 ) | ( i << 2 )	298:6:8525:8568	3292124	47	True				
ANR	3292658	AssignmentExpression	address = ( address & 0xf0000000 ) | ( i << 2 )		3292124	0		=			
ANR	3292659	Identifier	address		3292124	0					
ANR	3292660	InclusiveOrExpression	( address & 0xf0000000 ) | ( i << 2 )		3292124	1		|			
ANR	3292661	BitAndExpression	address & 0xf0000000		3292124	0		&			
ANR	3292662	Identifier	address		3292124	0					
ANR	3292663	PrimaryExpression	0xf0000000		3292124	1					
ANR	3292664	ShiftExpression	i << 2		3292124	1		<<			
ANR	3292665	Identifier	i		3292124	0					
ANR	3292666	PrimaryExpression	2		3292124	1					
ANR	3292667	ExpressionStatement	"( * info -> print_address_func ) ( address , info )"	299:6:8576:8619	3292124	48	True				
ANR	3292668	CallExpression	"( * info -> print_address_func ) ( address , info )"		3292124	0					
ANR	3292669	Callee	* info -> print_address_func		3292124	0					
ANR	3292670	UnaryOperationExpression	* info -> print_address_func		3292124	0					
ANR	3292671	UnaryOperator	*		3292124	0					
ANR	3292672	PtrMemberAccess	info -> print_address_func		3292124	1					
ANR	3292673	Identifier	info		3292124	0					
ANR	3292674	Identifier	print_address_func		3292124	1					
ANR	3292675	ArgumentList	address		3292124	1					
ANR	3292676	Argument	address		3292124	0					
ANR	3292677	Identifier	address		3292124	0					
ANR	3292678	Argument	info		3292124	1					
ANR	3292679	Identifier	info		3292124	0					
ANR	3292680	BreakStatement	break ;	300:6:8627:8632	3292124	49	True				
ANR	3292681	Label	case 'c' :	301:4:8638:8646	3292124	50	True				
ANR	3292682	ExpressionStatement	"i = GET_INSN_FIELD ( IMM5 , opcode )"	303:6:8691:8724	3292124	51	True				
ANR	3292683	AssignmentExpression	"i = GET_INSN_FIELD ( IMM5 , opcode )"		3292124	0		=			
ANR	3292684	Identifier	i		3292124	0					
ANR	3292685	CallExpression	"GET_INSN_FIELD ( IMM5 , opcode )"		3292124	1					
ANR	3292686	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292687	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292688	ArgumentList	IMM5		3292124	1					
ANR	3292689	Argument	IMM5		3292124	0					
ANR	3292690	Identifier	IMM5		3292124	0					
ANR	3292691	Argument	opcode		3292124	1					
ANR	3292692	Identifier	opcode		3292124	0					
ANR	3292693	ExpressionStatement	reg_base = nios2_control_regs ( )	304:6:8732:8764	3292124	52	True				
ANR	3292694	AssignmentExpression	reg_base = nios2_control_regs ( )		3292124	0		=			
ANR	3292695	Identifier	reg_base		3292124	0					
ANR	3292696	CallExpression	nios2_control_regs ( )		3292124	1					
ANR	3292697	Callee	nios2_control_regs		3292124	0					
ANR	3292698	Identifier	nios2_control_regs		3292124	0					
ANR	3292699	ArgumentList			3292124	1					
ANR	3292700	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"	305:6:8772:8832	3292124	53	True				
ANR	3292701	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_base [ i ] . name )"		3292124	0					
ANR	3292702	Callee	* info -> fprintf_func		3292124	0					
ANR	3292703	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292704	UnaryOperator	*		3292124	0					
ANR	3292705	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292706	Identifier	info		3292124	0					
ANR	3292707	Identifier	fprintf_func		3292124	1					
ANR	3292708	ArgumentList	info -> stream		3292124	1					
ANR	3292709	Argument	info -> stream		3292124	0					
ANR	3292710	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292711	Identifier	info		3292124	0					
ANR	3292712	Identifier	stream		3292124	1					
ANR	3292713	Argument	"""%s"""		3292124	1					
ANR	3292714	PrimaryExpression	"""%s"""		3292124	0					
ANR	3292715	Argument	reg_base [ i ] . name		3292124	2					
ANR	3292716	MemberAccess	reg_base [ i ] . name		3292124	0					
ANR	3292717	ArrayIndexing	reg_base [ i ]		3292124	0					
ANR	3292718	Identifier	reg_base		3292124	0					
ANR	3292719	Identifier	i		3292124	1					
ANR	3292720	Identifier	name		3292124	1					
ANR	3292721	BreakStatement	break ;	306:6:8840:8845	3292124	54	True				
ANR	3292722	Label	case 'b' :	307:4:8851:8859	3292124	55	True				
ANR	3292723	ExpressionStatement	"i = GET_INSN_FIELD ( IMM5 , opcode )"	308:6:8867:8900	3292124	56	True				
ANR	3292724	AssignmentExpression	"i = GET_INSN_FIELD ( IMM5 , opcode )"		3292124	0		=			
ANR	3292725	Identifier	i		3292124	0					
ANR	3292726	CallExpression	"GET_INSN_FIELD ( IMM5 , opcode )"		3292124	1					
ANR	3292727	Callee	GET_INSN_FIELD		3292124	0					
ANR	3292728	Identifier	GET_INSN_FIELD		3292124	0					
ANR	3292729	ArgumentList	IMM5		3292124	1					
ANR	3292730	Argument	IMM5		3292124	0					
ANR	3292731	Identifier	IMM5		3292124	0					
ANR	3292732	Argument	opcode		3292124	1					
ANR	3292733	Identifier	opcode		3292124	0					
ANR	3292734	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"	309:6:8908:8954	3292124	57	True				
ANR	3292735	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , i )"		3292124	0					
ANR	3292736	Callee	* info -> fprintf_func		3292124	0					
ANR	3292737	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292738	UnaryOperator	*		3292124	0					
ANR	3292739	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292740	Identifier	info		3292124	0					
ANR	3292741	Identifier	fprintf_func		3292124	1					
ANR	3292742	ArgumentList	info -> stream		3292124	1					
ANR	3292743	Argument	info -> stream		3292124	0					
ANR	3292744	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292745	Identifier	info		3292124	0					
ANR	3292746	Identifier	stream		3292124	1					
ANR	3292747	Argument	"""%ld"""		3292124	1					
ANR	3292748	PrimaryExpression	"""%ld"""		3292124	0					
ANR	3292749	Argument	i		3292124	2					
ANR	3292750	Identifier	i		3292124	0					
ANR	3292751	BreakStatement	break ;	310:6:8962:8967	3292124	58	True				
ANR	3292752	Label	default :	311:4:8973:8980	3292124	59	True				
ANR	3292753	Identifier	default		3292124	0					
ANR	3292754	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"	312:6:8988:9035	3292124	60	True				
ANR	3292755	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""unknown"" )"		3292124	0					
ANR	3292756	Callee	* info -> fprintf_func		3292124	0					
ANR	3292757	UnaryOperationExpression	* info -> fprintf_func		3292124	0					
ANR	3292758	UnaryOperator	*		3292124	0					
ANR	3292759	PtrMemberAccess	info -> fprintf_func		3292124	1					
ANR	3292760	Identifier	info		3292124	0					
ANR	3292761	Identifier	fprintf_func		3292124	1					
ANR	3292762	ArgumentList	info -> stream		3292124	1					
ANR	3292763	Argument	info -> stream		3292124	0					
ANR	3292764	PtrMemberAccess	info -> stream		3292124	0					
ANR	3292765	Identifier	info		3292124	0					
ANR	3292766	Identifier	stream		3292124	1					
ANR	3292767	Argument	"""unknown"""		3292124	1					
ANR	3292768	PrimaryExpression	"""unknown"""		3292124	0					
ANR	3292769	BreakStatement	break ;	313:6:9043:9048	3292124	61	True				
ANR	3292770	ReturnStatement	return 0 ;	315:2:9058:9066	3292124	3	True				
ANR	3292771	PrimaryExpression	0		3292124	0					
ANR	3292772	ReturnType	static int		3292124	1					
ANR	3292773	Identifier	nios2_print_insn_arg		3292124	2					
ANR	3292774	ParameterList	"const char * argptr , unsigned long opcode , bfd_vma address , disassemble_info * info"		3292124	3					
ANR	3292775	Parameter	const char * argptr	202:22:5599:5616	3292124	0	True				
ANR	3292776	ParameterType	const char *		3292124	0					
ANR	3292777	Identifier	argptr		3292124	1					
ANR	3292778	Parameter	unsigned long opcode	203:8:5627:5646	3292124	1	True				
ANR	3292779	ParameterType	unsigned long		3292124	0					
ANR	3292780	Identifier	opcode		3292124	1					
ANR	3292781	Parameter	bfd_vma address	203:30:5649:5663	3292124	2	True				
ANR	3292782	ParameterType	bfd_vma		3292124	0					
ANR	3292783	Identifier	address		3292124	1					
ANR	3292784	Parameter	disassemble_info * info	204:8:5674:5695	3292124	3	True				
ANR	3292785	ParameterType	disassemble_info *		3292124	0					
ANR	3292786	Identifier	info		3292124	1					
ANR	3292787	CFGEntryNode	ENTRY		3292124		True				
ANR	3292788	CFGExitNode	EXIT		3292124		True				
ANR	3292789	Symbol	GET_INSN_FIELD		3292124						
ANR	3292790	Symbol	RRD		3292124						
ANR	3292791	Symbol	IMM26		3292124						
ANR	3292792	Symbol	CUSTOM_N		3292124						
ANR	3292793	Symbol	opcode		3292124						
ANR	3292794	Symbol	info -> stream		3292124						
ANR	3292795	Symbol	info -> fprintf_func		3292124						
ANR	3292796	Symbol	IMM5		3292124						
ANR	3292797	Symbol	RRS		3292124						
ANR	3292798	Symbol	nios2_control_regs		3292124						
ANR	3292799	Symbol	RRT		3292124						
ANR	3292800	Symbol	CACHE_OPX		3292124						
ANR	3292801	Symbol	info -> print_address_func		3292124						
ANR	3292802	Symbol	nios2_regs		3292124						
ANR	3292803	Symbol	reg_base		3292124						
ANR	3292804	Symbol	nios2_coprocessor_regs		3292124						
ANR	3292805	Symbol	info		3292124						
ANR	3292806	Symbol	OP		3292124						
ANR	3292807	Symbol	address		3292124						
ANR	3292808	Symbol	argptr		3292124						
ANR	3292809	Symbol	IMM16		3292124						
ANR	3292810	Symbol	i		3292124						
ANR	3292811	Symbol	CUSTOM_C		3292124						
ANR	3292812	Symbol	* reg_base		3292124						
ANR	3292813	Symbol	* i		3292124						
ANR	3292814	Symbol	CUSTOM_B		3292124						
ANR	3292815	Symbol	CUSTOM_A		3292124						
ANR	3292816	Symbol	reg_base [ i ] . name		3292124						
ANR	3292817	Symbol	* argptr		3292124						
ANR	3292818	Symbol	* info		3292124						
ANR	3292819	Symbol	NUMREGNAMES		3292124						
ANR	3292820	Symbol	OP_MATCH_CUSTOM		3292124						
ANR	3292821	Function	nios2_disassemble	320:0:9164:10754							
ANR	3292822	FunctionDef	"nios2_disassemble (bfd_vma address , unsigned long opcode , disassemble_info * info)"		3292821	0					
ANR	3292823	CompoundStatement		323:0:9262:10754	3292821	0					
ANR	3292824	IdentifierDeclStatement	const struct nios2_opcode * op ;	324:2:9266:9295	3292821	0	True				
ANR	3292825	IdentifierDecl	* op		3292821	0					
ANR	3292826	IdentifierDeclType	const struct nios2_opcode *		3292821	0					
ANR	3292827	Identifier	op		3292821	1					
ANR	3292828	ExpressionStatement	info -> bytes_per_line = INSNLEN	326:2:9300:9330	3292821	1	True				
ANR	3292829	AssignmentExpression	info -> bytes_per_line = INSNLEN		3292821	0		=			
ANR	3292830	PtrMemberAccess	info -> bytes_per_line		3292821	0					
ANR	3292831	Identifier	info		3292821	0					
ANR	3292832	Identifier	bytes_per_line		3292821	1					
ANR	3292833	Identifier	INSNLEN		3292821	1					
ANR	3292834	ExpressionStatement	info -> bytes_per_chunk = INSNLEN	327:2:9334:9365	3292821	2	True				
ANR	3292835	AssignmentExpression	info -> bytes_per_chunk = INSNLEN		3292821	0		=			
ANR	3292836	PtrMemberAccess	info -> bytes_per_chunk		3292821	0					
ANR	3292837	Identifier	info		3292821	0					
ANR	3292838	Identifier	bytes_per_chunk		3292821	1					
ANR	3292839	Identifier	INSNLEN		3292821	1					
ANR	3292840	ExpressionStatement	info -> display_endian = info -> endian	328:2:9369:9404	3292821	3	True				
ANR	3292841	AssignmentExpression	info -> display_endian = info -> endian		3292821	0		=			
ANR	3292842	PtrMemberAccess	info -> display_endian		3292821	0					
ANR	3292843	Identifier	info		3292821	0					
ANR	3292844	Identifier	display_endian		3292821	1					
ANR	3292845	PtrMemberAccess	info -> endian		3292821	1					
ANR	3292846	Identifier	info		3292821	0					
ANR	3292847	Identifier	endian		3292821	1					
ANR	3292848	ExpressionStatement	info -> insn_info_valid = 1	329:2:9408:9433	3292821	4	True				
ANR	3292849	AssignmentExpression	info -> insn_info_valid = 1		3292821	0		=			
ANR	3292850	PtrMemberAccess	info -> insn_info_valid		3292821	0					
ANR	3292851	Identifier	info		3292821	0					
ANR	3292852	Identifier	insn_info_valid		3292821	1					
ANR	3292853	PrimaryExpression	1		3292821	1					
ANR	3292854	ExpressionStatement	info -> branch_delay_insns = 0	330:2:9437:9465	3292821	5	True				
ANR	3292855	AssignmentExpression	info -> branch_delay_insns = 0		3292821	0		=			
ANR	3292856	PtrMemberAccess	info -> branch_delay_insns		3292821	0					
ANR	3292857	Identifier	info		3292821	0					
ANR	3292858	Identifier	branch_delay_insns		3292821	1					
ANR	3292859	PrimaryExpression	0		3292821	1					
ANR	3292860	ExpressionStatement	info -> data_size = 0	331:2:9469:9488	3292821	6	True				
ANR	3292861	AssignmentExpression	info -> data_size = 0		3292821	0		=			
ANR	3292862	PtrMemberAccess	info -> data_size		3292821	0					
ANR	3292863	Identifier	info		3292821	0					
ANR	3292864	Identifier	data_size		3292821	1					
ANR	3292865	PrimaryExpression	0		3292821	1					
ANR	3292866	ExpressionStatement	info -> insn_type = dis_nonbranch	332:2:9492:9523	3292821	7	True				
ANR	3292867	AssignmentExpression	info -> insn_type = dis_nonbranch		3292821	0		=			
ANR	3292868	PtrMemberAccess	info -> insn_type		3292821	0					
ANR	3292869	Identifier	info		3292821	0					
ANR	3292870	Identifier	insn_type		3292821	1					
ANR	3292871	Identifier	dis_nonbranch		3292821	1					
ANR	3292872	ExpressionStatement	info -> target = 0	333:2:9527:9543	3292821	8	True				
ANR	3292873	AssignmentExpression	info -> target = 0		3292821	0		=			
ANR	3292874	PtrMemberAccess	info -> target		3292821	0					
ANR	3292875	Identifier	info		3292821	0					
ANR	3292876	Identifier	target		3292821	1					
ANR	3292877	PrimaryExpression	0		3292821	1					
ANR	3292878	ExpressionStatement	info -> target2 = 0	334:2:9547:9564	3292821	9	True				
ANR	3292879	AssignmentExpression	info -> target2 = 0		3292821	0		=			
ANR	3292880	PtrMemberAccess	info -> target2		3292821	0					
ANR	3292881	Identifier	info		3292821	0					
ANR	3292882	Identifier	target2		3292821	1					
ANR	3292883	PrimaryExpression	0		3292821	1					
ANR	3292884	ExpressionStatement	op = nios2_find_opcode_hash ( opcode )	338:2:9668:9704	3292821	10	True				
ANR	3292885	AssignmentExpression	op = nios2_find_opcode_hash ( opcode )		3292821	0		=			
ANR	3292886	Identifier	op		3292821	0					
ANR	3292887	CallExpression	nios2_find_opcode_hash ( opcode )		3292821	1					
ANR	3292888	Callee	nios2_find_opcode_hash		3292821	0					
ANR	3292889	Identifier	nios2_find_opcode_hash		3292821	0					
ANR	3292890	ArgumentList	opcode		3292821	1					
ANR	3292891	Argument	opcode		3292821	0					
ANR	3292892	Identifier	opcode		3292821	0					
ANR	3292893	IfStatement	if ( op != NULL )		3292821	11					
ANR	3292894	Condition	op != NULL	340:6:9713:9722	3292821	0	True				
ANR	3292895	EqualityExpression	op != NULL		3292821	0		!=			
ANR	3292896	Identifier	op		3292821	0					
ANR	3292897	Identifier	NULL		3292821	1					
ANR	3292898	CompoundStatement		20:6:474:500	3292821	1					
ANR	3292899	IdentifierDeclStatement	bfd_boolean is_nop = FALSE ;	342:6:9737:9763	3292821	0	True				
ANR	3292900	IdentifierDecl	is_nop = FALSE		3292821	0					
ANR	3292901	IdentifierDeclType	bfd_boolean		3292821	0					
ANR	3292902	Identifier	is_nop		3292821	1					
ANR	3292903	AssignmentExpression	is_nop = FALSE		3292821	2		=			
ANR	3292904	Identifier	FALSE		3292821	0					
ANR	3292905	Identifier	FALSE		3292821	1					
ANR	3292906	IfStatement	if ( op -> pinfo == NIOS2_INSN_MACRO_MOV )		3292821	1					
ANR	3292907	Condition	op -> pinfo == NIOS2_INSN_MACRO_MOV	343:10:9775:9807	3292821	0	True				
ANR	3292908	EqualityExpression	op -> pinfo == NIOS2_INSN_MACRO_MOV		3292821	0		==			
ANR	3292909	PtrMemberAccess	op -> pinfo		3292821	0					
ANR	3292910	Identifier	op		3292821	0					
ANR	3292911	Identifier	pinfo		3292821	1					
ANR	3292912	Identifier	NIOS2_INSN_MACRO_MOV		3292821	1					
ANR	3292913	CompoundStatement		24:3:603:615	3292821	1					
ANR	3292914	IdentifierDeclStatement	"int dst , src ;"	346:3:9866:9878	3292821	0	True				
ANR	3292915	IdentifierDecl	dst		3292821	0					
ANR	3292916	IdentifierDeclType	int		3292821	0					
ANR	3292917	Identifier	dst		3292821	1					
ANR	3292918	IdentifierDecl	src		3292821	1					
ANR	3292919	IdentifierDeclType	int		3292821	0					
ANR	3292920	Identifier	src		3292821	1					
ANR	3292921	ExpressionStatement	"dst = GET_INSN_FIELD ( RRD , opcode )"	347:3:9883:9917	3292821	1	True				
ANR	3292922	AssignmentExpression	"dst = GET_INSN_FIELD ( RRD , opcode )"		3292821	0		=			
ANR	3292923	Identifier	dst		3292821	0					
ANR	3292924	CallExpression	"GET_INSN_FIELD ( RRD , opcode )"		3292821	1					
ANR	3292925	Callee	GET_INSN_FIELD		3292821	0					
ANR	3292926	Identifier	GET_INSN_FIELD		3292821	0					
ANR	3292927	ArgumentList	RRD		3292821	1					
ANR	3292928	Argument	RRD		3292821	0					
ANR	3292929	Identifier	RRD		3292821	0					
ANR	3292930	Argument	opcode		3292821	1					
ANR	3292931	Identifier	opcode		3292821	0					
ANR	3292932	ExpressionStatement	"src = GET_INSN_FIELD ( RRS , opcode )"	348:3:9922:9956	3292821	2	True				
ANR	3292933	AssignmentExpression	"src = GET_INSN_FIELD ( RRS , opcode )"		3292821	0		=			
ANR	3292934	Identifier	src		3292821	0					
ANR	3292935	CallExpression	"GET_INSN_FIELD ( RRS , opcode )"		3292821	1					
ANR	3292936	Callee	GET_INSN_FIELD		3292821	0					
ANR	3292937	Identifier	GET_INSN_FIELD		3292821	0					
ANR	3292938	ArgumentList	RRS		3292821	1					
ANR	3292939	Argument	RRS		3292821	0					
ANR	3292940	Identifier	RRS		3292821	0					
ANR	3292941	Argument	opcode		3292821	1					
ANR	3292942	Identifier	opcode		3292821	0					
ANR	3292943	IfStatement	if ( dst == 0 && src == 0 )		3292821	3					
ANR	3292944	Condition	dst == 0 && src == 0	349:7:9965:9984	3292821	0	True				
ANR	3292945	AndExpression	dst == 0 && src == 0		3292821	0		&&			
ANR	3292946	EqualityExpression	dst == 0		3292821	0		==			
ANR	3292947	Identifier	dst		3292821	0					
ANR	3292948	PrimaryExpression	0		3292821	1					
ANR	3292949	EqualityExpression	src == 0		3292821	1		==			
ANR	3292950	Identifier	src		3292821	0					
ANR	3292951	PrimaryExpression	0		3292821	1					
ANR	3292952	CompoundStatement		28:5:729:729	3292821	1					
ANR	3292953	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""nop"" )"	351:7:10001:10044	3292821	0	True				
ANR	3292954	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""nop"" )"		3292821	0					
ANR	3292955	Callee	* info -> fprintf_func		3292821	0					
ANR	3292956	UnaryOperationExpression	* info -> fprintf_func		3292821	0					
ANR	3292957	UnaryOperator	*		3292821	0					
ANR	3292958	PtrMemberAccess	info -> fprintf_func		3292821	1					
ANR	3292959	Identifier	info		3292821	0					
ANR	3292960	Identifier	fprintf_func		3292821	1					
ANR	3292961	ArgumentList	info -> stream		3292821	1					
ANR	3292962	Argument	info -> stream		3292821	0					
ANR	3292963	PtrMemberAccess	info -> stream		3292821	0					
ANR	3292964	Identifier	info		3292821	0					
ANR	3292965	Identifier	stream		3292821	1					
ANR	3292966	Argument	"""nop"""		3292821	1					
ANR	3292967	PrimaryExpression	"""nop"""		3292821	0					
ANR	3292968	ExpressionStatement	is_nop = TRUE	352:7:10053:10066	3292821	1	True				
ANR	3292969	AssignmentExpression	is_nop = TRUE		3292821	0		=			
ANR	3292970	Identifier	is_nop		3292821	0					
ANR	3292971	Identifier	TRUE		3292821	1					
ANR	3292972	ElseStatement	else		3292821	0					
ANR	3292973	CompoundStatement		31:10:815:815	3292821	0					
ANR	3292974	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"	354:4:10084:10136	3292821	0	True				
ANR	3292975	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"		3292821	0					
ANR	3292976	Callee	* info -> fprintf_func		3292821	0					
ANR	3292977	UnaryOperationExpression	* info -> fprintf_func		3292821	0					
ANR	3292978	UnaryOperator	*		3292821	0					
ANR	3292979	PtrMemberAccess	info -> fprintf_func		3292821	1					
ANR	3292980	Identifier	info		3292821	0					
ANR	3292981	Identifier	fprintf_func		3292821	1					
ANR	3292982	ArgumentList	info -> stream		3292821	1					
ANR	3292983	Argument	info -> stream		3292821	0					
ANR	3292984	PtrMemberAccess	info -> stream		3292821	0					
ANR	3292985	Identifier	info		3292821	0					
ANR	3292986	Identifier	stream		3292821	1					
ANR	3292987	Argument	"""%s"""		3292821	1					
ANR	3292988	PrimaryExpression	"""%s"""		3292821	0					
ANR	3292989	Argument	op -> name		3292821	2					
ANR	3292990	PtrMemberAccess	op -> name		3292821	0					
ANR	3292991	Identifier	op		3292821	0					
ANR	3292992	Identifier	name		3292821	1					
ANR	3292993	ElseStatement	else		3292821	0					
ANR	3292994	CompoundStatement		34:13:893:893	3292821	0					
ANR	3292995	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"	357:7:10165:10217	3292821	0	True				
ANR	3292996	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"		3292821	0					
ANR	3292997	Callee	* info -> fprintf_func		3292821	0					
ANR	3292998	UnaryOperationExpression	* info -> fprintf_func		3292821	0					
ANR	3292999	UnaryOperator	*		3292821	0					
ANR	3293000	PtrMemberAccess	info -> fprintf_func		3292821	1					
ANR	3293001	Identifier	info		3292821	0					
ANR	3293002	Identifier	fprintf_func		3292821	1					
ANR	3293003	ArgumentList	info -> stream		3292821	1					
ANR	3293004	Argument	info -> stream		3292821	0					
ANR	3293005	PtrMemberAccess	info -> stream		3292821	0					
ANR	3293006	Identifier	info		3292821	0					
ANR	3293007	Identifier	stream		3292821	1					
ANR	3293008	Argument	"""%s"""		3292821	1					
ANR	3293009	PrimaryExpression	"""%s"""		3292821	0					
ANR	3293010	Argument	op -> name		3292821	2					
ANR	3293011	PtrMemberAccess	op -> name		3292821	0					
ANR	3293012	Identifier	op		3292821	0					
ANR	3293013	Identifier	name		3292821	1					
ANR	3293014	IfStatement	if ( ! is_nop )		3292821	2					
ANR	3293015	Condition	! is_nop	360:10:10238:10244	3292821	0	True				
ANR	3293016	UnaryOperationExpression	! is_nop		3292821	0					
ANR	3293017	UnaryOperator	!		3292821	0					
ANR	3293018	Identifier	is_nop		3292821	1					
ANR	3293019	CompoundStatement		40:3:990:1019	3292821	1					
ANR	3293020	IdentifierDeclStatement	const char * argstr = op -> args ;	362:3:10253:10282	3292821	0	True				
ANR	3293021	IdentifierDecl	* argstr = op -> args		3292821	0					
ANR	3293022	IdentifierDeclType	const char *		3292821	0					
ANR	3293023	Identifier	argstr		3292821	1					
ANR	3293024	AssignmentExpression	* argstr = op -> args		3292821	2		=			
ANR	3293025	Identifier	argstr		3292821	0					
ANR	3293026	PtrMemberAccess	op -> args		3292821	1					
ANR	3293027	Identifier	op		3292821	0					
ANR	3293028	Identifier	args		3292821	1					
ANR	3293029	IfStatement	if ( argstr != NULL && * argstr != '\\0' )		3292821	1					
ANR	3293030	Condition	argstr != NULL && * argstr != '\\0'	363:7:10291:10323	3292821	0	True				
ANR	3293031	AndExpression	argstr != NULL && * argstr != '\\0'		3292821	0		&&			
ANR	3293032	EqualityExpression	argstr != NULL		3292821	0		!=			
ANR	3293033	Identifier	argstr		3292821	0					
ANR	3293034	Identifier	NULL		3292821	1					
ANR	3293035	EqualityExpression	* argstr != '\\0'		3292821	1		!=			
ANR	3293036	UnaryOperationExpression	* argstr		3292821	0					
ANR	3293037	UnaryOperator	*		3292821	0					
ANR	3293038	Identifier	argstr		3292821	1					
ANR	3293039	PrimaryExpression	'\\0'		3292821	1					
ANR	3293040	CompoundStatement		42:5:1068:1068	3292821	1					
ANR	3293041	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "" "" )"	365:7:10340:10381	3292821	0	True				
ANR	3293042	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "" "" )"		3292821	0					
ANR	3293043	Callee	* info -> fprintf_func		3292821	0					
ANR	3293044	UnaryOperationExpression	* info -> fprintf_func		3292821	0					
ANR	3293045	UnaryOperator	*		3292821	0					
ANR	3293046	PtrMemberAccess	info -> fprintf_func		3292821	1					
ANR	3293047	Identifier	info		3292821	0					
ANR	3293048	Identifier	fprintf_func		3292821	1					
ANR	3293049	ArgumentList	info -> stream		3292821	1					
ANR	3293050	Argument	info -> stream		3292821	0					
ANR	3293051	PtrMemberAccess	info -> stream		3292821	0					
ANR	3293052	Identifier	info		3292821	0					
ANR	3293053	Identifier	stream		3292821	1					
ANR	3293054	Argument	""" """		3292821	1					
ANR	3293055	PrimaryExpression	""" """		3292821	0					
ANR	3293056	WhileStatement	while ( * argstr != '\\0' )		3292821	1					
ANR	3293057	Condition	* argstr != '\\0'	366:14:10397:10411	3292821	0	True				
ANR	3293058	EqualityExpression	* argstr != '\\0'		3292821	0		!=			
ANR	3293059	UnaryOperationExpression	* argstr		3292821	0					
ANR	3293060	UnaryOperator	*		3292821	0					
ANR	3293061	Identifier	argstr		3292821	1					
ANR	3293062	PrimaryExpression	'\\0'		3292821	1					
ANR	3293063	CompoundStatement		45:2:1153:1153	3292821	1					
ANR	3293064	ExpressionStatement	"nios2_print_insn_arg ( argstr , opcode , address , info )"	368:4:10422:10474	3292821	0	True				
ANR	3293065	CallExpression	"nios2_print_insn_arg ( argstr , opcode , address , info )"		3292821	0					
ANR	3293066	Callee	nios2_print_insn_arg		3292821	0					
ANR	3293067	Identifier	nios2_print_insn_arg		3292821	0					
ANR	3293068	ArgumentList	argstr		3292821	1					
ANR	3293069	Argument	argstr		3292821	0					
ANR	3293070	Identifier	argstr		3292821	0					
ANR	3293071	Argument	opcode		3292821	1					
ANR	3293072	Identifier	opcode		3292821	0					
ANR	3293073	Argument	address		3292821	2					
ANR	3293074	Identifier	address		3292821	0					
ANR	3293075	Argument	info		3292821	3					
ANR	3293076	Identifier	info		3292821	0					
ANR	3293077	ExpressionStatement	++ argstr	369:4:10480:10488	3292821	1	True				
ANR	3293078	UnaryExpression	++ argstr		3292821	0					
ANR	3293079	IncDec	++		3292821	0					
ANR	3293080	Identifier	argstr		3292821	1					
ANR	3293081	ElseStatement	else		3292821	0					
ANR	3293082	CompoundStatement		53:4:1258:1258	3292821	0					
ANR	3293083	ExpressionStatement	info -> insn_type = dis_noninsn	377:6:10573:10602	3292821	0	True				
ANR	3293084	AssignmentExpression	info -> insn_type = dis_noninsn		3292821	0		=			
ANR	3293085	PtrMemberAccess	info -> insn_type		3292821	0					
ANR	3293086	Identifier	info		3292821	0					
ANR	3293087	Identifier	insn_type		3292821	1					
ANR	3293088	Identifier	dis_noninsn		3292821	1					
ANR	3293089	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , opcode )"	378:6:10610:10663	3292821	1	True				
ANR	3293090	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , opcode )"		3292821	0					
ANR	3293091	Callee	* info -> fprintf_func		3292821	0					
ANR	3293092	UnaryOperationExpression	* info -> fprintf_func		3292821	0					
ANR	3293093	UnaryOperator	*		3292821	0					
ANR	3293094	PtrMemberAccess	info -> fprintf_func		3292821	1					
ANR	3293095	Identifier	info		3292821	0					
ANR	3293096	Identifier	fprintf_func		3292821	1					
ANR	3293097	ArgumentList	info -> stream		3292821	1					
ANR	3293098	Argument	info -> stream		3292821	0					
ANR	3293099	PtrMemberAccess	info -> stream		3292821	0					
ANR	3293100	Identifier	info		3292821	0					
ANR	3293101	Identifier	stream		3292821	1					
ANR	3293102	Argument	"""0x%lx"""		3292821	1					
ANR	3293103	PrimaryExpression	"""0x%lx"""		3292821	0					
ANR	3293104	Argument	opcode		3292821	2					
ANR	3293105	Identifier	opcode		3292821	0					
ANR	3293106	ReturnStatement	return INSNLEN ;	381:2:10738:10752	3292821	12	True				
ANR	3293107	Identifier	INSNLEN		3292821	0					
ANR	3293108	ReturnType	static int		3292821	1					
ANR	3293109	Identifier	nios2_disassemble		3292821	2					
ANR	3293110	ParameterList	"bfd_vma address , unsigned long opcode , disassemble_info * info"		3292821	3					
ANR	3293111	Parameter	bfd_vma address	321:19:9194:9208	3292821	0	True				
ANR	3293112	ParameterType	bfd_vma		3292821	0					
ANR	3293113	Identifier	address		3292821	1					
ANR	3293114	Parameter	unsigned long opcode	321:36:9211:9230	3292821	1	True				
ANR	3293115	ParameterType	unsigned long		3292821	0					
ANR	3293116	Identifier	opcode		3292821	1					
ANR	3293117	Parameter	disassemble_info * info	322:5:9238:9259	3292821	2	True				
ANR	3293118	ParameterType	disassemble_info *		3292821	0					
ANR	3293119	Identifier	info		3292821	1					
ANR	3293120	CFGEntryNode	ENTRY		3292821		True				
ANR	3293121	CFGExitNode	EXIT		3292821		True				
ANR	3293122	Symbol	INSNLEN		3292821						
ANR	3293123	Symbol	GET_INSN_FIELD		3292821						
ANR	3293124	Symbol	* op		3292821						
ANR	3293125	Symbol	dst		3292821						
ANR	3293126	Symbol	RRD		3292821						
ANR	3293127	Symbol	dis_noninsn		3292821						
ANR	3293128	Symbol	info -> target2		3292821						
ANR	3293129	Symbol	info -> branch_delay_insns		3292821						
ANR	3293130	Symbol	info -> data_size		3292821						
ANR	3293131	Symbol	opcode		3292821						
ANR	3293132	Symbol	info -> stream		3292821						
ANR	3293133	Symbol	info -> fprintf_func		3292821						
ANR	3293134	Symbol	op -> args		3292821						
ANR	3293135	Symbol	info -> bytes_per_line		3292821						
ANR	3293136	Symbol	dis_nonbranch		3292821						
ANR	3293137	Symbol	RRS		3292821						
ANR	3293138	Symbol	info -> target		3292821						
ANR	3293139	Symbol	is_nop		3292821						
ANR	3293140	Symbol	info -> insn_type		3292821						
ANR	3293141	Symbol	info		3292821						
ANR	3293142	Symbol	op		3292821						
ANR	3293143	Symbol	NIOS2_INSN_MACRO_MOV		3292821						
ANR	3293144	Symbol	address		3292821						
ANR	3293145	Symbol	NULL		3292821						
ANR	3293146	Symbol	* argstr		3292821						
ANR	3293147	Symbol	src		3292821						
ANR	3293148	Symbol	argstr		3292821						
ANR	3293149	Symbol	nios2_find_opcode_hash		3292821						
ANR	3293150	Symbol	op -> pinfo		3292821						
ANR	3293151	Symbol	TRUE		3292821						
ANR	3293152	Symbol	info -> endian		3292821						
ANR	3293153	Symbol	op -> name		3292821						
ANR	3293154	Symbol	info -> bytes_per_chunk		3292821						
ANR	3293155	Symbol	info -> display_endian		3292821						
ANR	3293156	Symbol	FALSE		3292821						
ANR	3293157	Symbol	* info		3292821						
ANR	3293158	Symbol	info -> insn_info_valid		3292821						
ANR	3293159	Function	print_insn_nios2	393:0:11215:11824							
ANR	3293160	FunctionDef	"print_insn_nios2 (bfd_vma address , disassemble_info * info , enum bfd_endian endianness)"		3293159	0					
ANR	3293161	CompoundStatement		396:0:11317:11824	3293159	0					
ANR	3293162	IdentifierDeclStatement	bfd_byte buffer [ INSNLEN ] ;	397:2:11321:11345	3293159	0	True				
ANR	3293163	IdentifierDecl	buffer [ INSNLEN ]		3293159	0					
ANR	3293164	IdentifierDeclType	bfd_byte [ INSNLEN ]		3293159	0					
ANR	3293165	Identifier	buffer		3293159	1					
ANR	3293166	Identifier	INSNLEN		3293159	2					
ANR	3293167	IdentifierDeclStatement	int status ;	398:2:11349:11359	3293159	1	True				
ANR	3293168	IdentifierDecl	status		3293159	0					
ANR	3293169	IdentifierDeclType	int		3293159	0					
ANR	3293170	Identifier	status		3293159	1					
ANR	3293171	ExpressionStatement	"status = ( * info -> read_memory_func ) ( address , buffer , INSNLEN , info )"	400:2:11364:11431	3293159	2	True				
ANR	3293172	AssignmentExpression	"status = ( * info -> read_memory_func ) ( address , buffer , INSNLEN , info )"		3293159	0		=			
ANR	3293173	Identifier	status		3293159	0					
ANR	3293174	CallExpression	"( * info -> read_memory_func ) ( address , buffer , INSNLEN , info )"		3293159	1					
ANR	3293175	Callee	* info -> read_memory_func		3293159	0					
ANR	3293176	UnaryOperationExpression	* info -> read_memory_func		3293159	0					
ANR	3293177	UnaryOperator	*		3293159	0					
ANR	3293178	PtrMemberAccess	info -> read_memory_func		3293159	1					
ANR	3293179	Identifier	info		3293159	0					
ANR	3293180	Identifier	read_memory_func		3293159	1					
ANR	3293181	ArgumentList	address		3293159	1					
ANR	3293182	Argument	address		3293159	0					
ANR	3293183	Identifier	address		3293159	0					
ANR	3293184	Argument	buffer		3293159	1					
ANR	3293185	Identifier	buffer		3293159	0					
ANR	3293186	Argument	INSNLEN		3293159	2					
ANR	3293187	Identifier	INSNLEN		3293159	0					
ANR	3293188	Argument	info		3293159	3					
ANR	3293189	Identifier	info		3293159	0					
ANR	3293190	IfStatement	if ( status == 0 )		3293159	3					
ANR	3293191	Condition	status == 0	401:6:11439:11449	3293159	0	True				
ANR	3293192	EqualityExpression	status == 0		3293159	0		==			
ANR	3293193	Identifier	status		3293159	0					
ANR	3293194	PrimaryExpression	0		3293159	1					
ANR	3293195	CompoundStatement		8:6:146:164	3293159	1					
ANR	3293196	IdentifierDeclStatement	unsigned long insn ;	403:6:11464:11482	3293159	0	True				
ANR	3293197	IdentifierDecl	insn		3293159	0					
ANR	3293198	IdentifierDeclType	unsigned long		3293159	0					
ANR	3293199	Identifier	insn		3293159	1					
ANR	3293200	IfStatement	if ( endianness == BFD_ENDIAN_BIG )		3293159	1					
ANR	3293201	Condition	endianness == BFD_ENDIAN_BIG	404:10:11494:11521	3293159	0	True				
ANR	3293202	EqualityExpression	endianness == BFD_ENDIAN_BIG		3293159	0		==			
ANR	3293203	Identifier	endianness		3293159	0					
ANR	3293204	Identifier	BFD_ENDIAN_BIG		3293159	1					
ANR	3293205	CompoundStatement		9:40:206:206	3293159	1					
ANR	3293206	ExpressionStatement	insn = ( unsigned long ) bfd_getb32 ( buffer )	405:7:11533:11574	3293159	0	True				
ANR	3293207	AssignmentExpression	insn = ( unsigned long ) bfd_getb32 ( buffer )		3293159	0		=			
ANR	3293208	Identifier	insn		3293159	0					
ANR	3293209	CastExpression	( unsigned long ) bfd_getb32 ( buffer )		3293159	1					
ANR	3293210	CastTarget	unsigned long		3293159	0					
ANR	3293211	CallExpression	bfd_getb32 ( buffer )		3293159	1					
ANR	3293212	Callee	bfd_getb32		3293159	0					
ANR	3293213	Identifier	bfd_getb32		3293159	0					
ANR	3293214	ArgumentList	buffer		3293159	1					
ANR	3293215	Argument	buffer		3293159	0					
ANR	3293216	Identifier	buffer		3293159	0					
ANR	3293217	ElseStatement	else		3293159	0					
ANR	3293218	CompoundStatement		11:13:271:271	3293159	0					
ANR	3293219	ExpressionStatement	insn = ( unsigned long ) bfd_getl32 ( buffer )	407:7:11598:11639	3293159	0	True				
ANR	3293220	AssignmentExpression	insn = ( unsigned long ) bfd_getl32 ( buffer )		3293159	0		=			
ANR	3293221	Identifier	insn		3293159	0					
ANR	3293222	CastExpression	( unsigned long ) bfd_getl32 ( buffer )		3293159	1					
ANR	3293223	CastTarget	unsigned long		3293159	0					
ANR	3293224	CallExpression	bfd_getl32 ( buffer )		3293159	1					
ANR	3293225	Callee	bfd_getl32		3293159	0					
ANR	3293226	Identifier	bfd_getl32		3293159	0					
ANR	3293227	ArgumentList	buffer		3293159	1					
ANR	3293228	Argument	buffer		3293159	0					
ANR	3293229	Identifier	buffer		3293159	0					
ANR	3293230	ExpressionStatement	"status = nios2_disassemble ( address , insn , info )"	409:6:11655:11703	3293159	2	True				
ANR	3293231	AssignmentExpression	"status = nios2_disassemble ( address , insn , info )"		3293159	0		=			
ANR	3293232	Identifier	status		3293159	0					
ANR	3293233	CallExpression	"nios2_disassemble ( address , insn , info )"		3293159	1					
ANR	3293234	Callee	nios2_disassemble		3293159	0					
ANR	3293235	Identifier	nios2_disassemble		3293159	0					
ANR	3293236	ArgumentList	address		3293159	1					
ANR	3293237	Argument	address		3293159	0					
ANR	3293238	Identifier	address		3293159	0					
ANR	3293239	Argument	insn		3293159	1					
ANR	3293240	Identifier	insn		3293159	0					
ANR	3293241	Argument	info		3293159	2					
ANR	3293242	Identifier	info		3293159	0					
ANR	3293243	ElseStatement	else		3293159	0					
ANR	3293244	CompoundStatement		17:4:404:404	3293159	0					
ANR	3293245	ExpressionStatement	"( * info -> memory_error_func ) ( status , address , info )"	413:6:11730:11780	3293159	0	True				
ANR	3293246	CallExpression	"( * info -> memory_error_func ) ( status , address , info )"		3293159	0					
ANR	3293247	Callee	* info -> memory_error_func		3293159	0					
ANR	3293248	UnaryOperationExpression	* info -> memory_error_func		3293159	0					
ANR	3293249	UnaryOperator	*		3293159	0					
ANR	3293250	PtrMemberAccess	info -> memory_error_func		3293159	1					
ANR	3293251	Identifier	info		3293159	0					
ANR	3293252	Identifier	memory_error_func		3293159	1					
ANR	3293253	ArgumentList	status		3293159	1					
ANR	3293254	Argument	status		3293159	0					
ANR	3293255	Identifier	status		3293159	0					
ANR	3293256	Argument	address		3293159	1					
ANR	3293257	Identifier	address		3293159	0					
ANR	3293258	Argument	info		3293159	2					
ANR	3293259	Identifier	info		3293159	0					
ANR	3293260	ExpressionStatement	status = - 1	414:6:11788:11799	3293159	1	True				
ANR	3293261	AssignmentExpression	status = - 1		3293159	0		=			
ANR	3293262	Identifier	status		3293159	0					
ANR	3293263	UnaryOperationExpression	- 1		3293159	1					
ANR	3293264	UnaryOperator	-		3293159	0					
ANR	3293265	PrimaryExpression	1		3293159	1					
ANR	3293266	ReturnStatement	return status ;	416:2:11809:11822	3293159	4	True				
ANR	3293267	Identifier	status		3293159	0					
ANR	3293268	ReturnType	static int		3293159	1					
ANR	3293269	Identifier	print_insn_nios2		3293159	2					
ANR	3293270	ParameterList	"bfd_vma address , disassemble_info * info , enum bfd_endian endianness"		3293159	3					
ANR	3293271	Parameter	bfd_vma address	394:18:11244:11258	3293159	0	True				
ANR	3293272	ParameterType	bfd_vma		3293159	0					
ANR	3293273	Identifier	address		3293159	1					
ANR	3293274	Parameter	disassemble_info * info	394:35:11261:11282	3293159	1	True				
ANR	3293275	ParameterType	disassemble_info *		3293159	0					
ANR	3293276	Identifier	info		3293159	1					
ANR	3293277	Parameter	enum bfd_endian endianness	395:4:11289:11314	3293159	2	True				
ANR	3293278	ParameterType	enum bfd_endian		3293159	0					
ANR	3293279	Identifier	endianness		3293159	1					
ANR	3293280	CFGEntryNode	ENTRY		3293159		True				
ANR	3293281	CFGExitNode	EXIT		3293159		True				
ANR	3293282	Symbol	INSNLEN		3293159						
ANR	3293283	Symbol	* * info		3293159						
ANR	3293284	Symbol	address		3293159						
ANR	3293285	Symbol	bfd_getb32		3293159						
ANR	3293286	Symbol	info -> memory_error_func		3293159						
ANR	3293287	Symbol	insn		3293159						
ANR	3293288	Symbol	BFD_ENDIAN_BIG		3293159						
ANR	3293289	Symbol	info -> read_memory_func		3293159						
ANR	3293290	Symbol	buffer		3293159						
ANR	3293291	Symbol	* info		3293159						
ANR	3293292	Symbol	bfd_getl32		3293159						
ANR	3293293	Symbol	endianness		3293159						
ANR	3293294	Symbol	info		3293159						
ANR	3293295	Symbol	status		3293159						
ANR	3293296	Symbol	* info -> read_memory_func		3293159						
ANR	3293297	Symbol	nios2_disassemble		3293159						
ANR	3293298	Function	print_insn_big_nios2	421:0:11913:12041							
ANR	3293299	FunctionDef	"print_insn_big_nios2 (bfd_vma address , disassemble_info * info)"		3293298	0					
ANR	3293300	CompoundStatement		423:0:11980:12041	3293298	0					
ANR	3293301	ReturnStatement	"return print_insn_nios2 ( address , info , BFD_ENDIAN_BIG ) ;"	424:2:11984:12039	3293298	0	True				
ANR	3293302	CallExpression	"print_insn_nios2 ( address , info , BFD_ENDIAN_BIG )"		3293298	0					
ANR	3293303	Callee	print_insn_nios2		3293298	0					
ANR	3293304	Identifier	print_insn_nios2		3293298	0					
ANR	3293305	ArgumentList	address		3293298	1					
ANR	3293306	Argument	address		3293298	0					
ANR	3293307	Identifier	address		3293298	0					
ANR	3293308	Argument	info		3293298	1					
ANR	3293309	Identifier	info		3293298	0					
ANR	3293310	Argument	BFD_ENDIAN_BIG		3293298	2					
ANR	3293311	Identifier	BFD_ENDIAN_BIG		3293298	0					
ANR	3293312	ReturnType	int		3293298	1					
ANR	3293313	Identifier	print_insn_big_nios2		3293298	2					
ANR	3293314	ParameterList	"bfd_vma address , disassemble_info * info"		3293298	3					
ANR	3293315	Parameter	bfd_vma address	422:22:11939:11953	3293298	0	True				
ANR	3293316	ParameterType	bfd_vma		3293298	0					
ANR	3293317	Identifier	address		3293298	1					
ANR	3293318	Parameter	disassemble_info * info	422:39:11956:11977	3293298	1	True				
ANR	3293319	ParameterType	disassemble_info *		3293298	0					
ANR	3293320	Identifier	info		3293298	1					
ANR	3293321	CFGEntryNode	ENTRY		3293298		True				
ANR	3293322	CFGExitNode	EXIT		3293298		True				
ANR	3293323	Symbol	address		3293298						
ANR	3293324	Symbol	BFD_ENDIAN_BIG		3293298						
ANR	3293325	Symbol	print_insn_nios2		3293298						
ANR	3293326	Symbol	info		3293298						
ANR	3293327	Function	print_insn_little_nios2	427:0:12044:12178							
ANR	3293328	FunctionDef	"print_insn_little_nios2 (bfd_vma address , disassemble_info * info)"		3293327	0					
ANR	3293329	CompoundStatement		429:0:12114:12178	3293327	0					
ANR	3293330	ReturnStatement	"return print_insn_nios2 ( address , info , BFD_ENDIAN_LITTLE ) ;"	430:2:12118:12176	3293327	0	True				
ANR	3293331	CallExpression	"print_insn_nios2 ( address , info , BFD_ENDIAN_LITTLE )"		3293327	0					
ANR	3293332	Callee	print_insn_nios2		3293327	0					
ANR	3293333	Identifier	print_insn_nios2		3293327	0					
ANR	3293334	ArgumentList	address		3293327	1					
ANR	3293335	Argument	address		3293327	0					
ANR	3293336	Identifier	address		3293327	0					
ANR	3293337	Argument	info		3293327	1					
ANR	3293338	Identifier	info		3293327	0					
ANR	3293339	Argument	BFD_ENDIAN_LITTLE		3293327	2					
ANR	3293340	Identifier	BFD_ENDIAN_LITTLE		3293327	0					
ANR	3293341	ReturnType	int		3293327	1					
ANR	3293342	Identifier	print_insn_little_nios2		3293327	2					
ANR	3293343	ParameterList	"bfd_vma address , disassemble_info * info"		3293327	3					
ANR	3293344	Parameter	bfd_vma address	428:25:12073:12087	3293327	0	True				
ANR	3293345	ParameterType	bfd_vma		3293327	0					
ANR	3293346	Identifier	address		3293327	1					
ANR	3293347	Parameter	disassemble_info * info	428:42:12090:12111	3293327	1	True				
ANR	3293348	ParameterType	disassemble_info *		3293327	0					
ANR	3293349	Identifier	info		3293327	1					
ANR	3293350	CFGEntryNode	ENTRY		3293327		True				
ANR	3293351	CFGExitNode	EXIT		3293327		True				
ANR	3293352	Symbol	address		3293327						
ANR	3293353	Symbol	BFD_ENDIAN_LITTLE		3293327						
ANR	3293354	Symbol	print_insn_nios2		3293327						
ANR	3293355	Symbol	info		3293327						
