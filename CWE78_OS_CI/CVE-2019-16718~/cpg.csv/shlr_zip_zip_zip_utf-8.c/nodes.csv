command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6190391	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_utf-8.c								
ANR	6190392	DeclStmt									
ANR	6190393	Decl							const zip_uint16_t	const zip_uint16_t [ 256 ]	_cp437_to_unicode
ANR	6190394	Function	_zip_guess_encoding	119:0:4557:6013							
ANR	6190395	FunctionDef	"_zip_guess_encoding (struct zip_string * str , enum zip_encoding_type expected_encoding)"		6190394	0					
ANR	6190396	CompoundStatement		121:0:4666:6013	6190394	0					
ANR	6190397	IdentifierDeclStatement	enum zip_encoding_type enc ;	122:4:4672:4698	6190394	0	True				
ANR	6190398	IdentifierDecl	enc		6190394	0					
ANR	6190399	IdentifierDeclType	enum zip_encoding_type		6190394	0					
ANR	6190400	Identifier	enc		6190394	1					
ANR	6190401	IdentifierDeclStatement	const zip_uint8_t * name ;	123:4:4704:4727	6190394	1	True				
ANR	6190402	IdentifierDecl	* name		6190394	0					
ANR	6190403	IdentifierDeclType	const zip_uint8_t *		6190394	0					
ANR	6190404	Identifier	name		6190394	1					
ANR	6190405	IdentifierDeclStatement	"zip_uint32_t i , j , ulen ;"	124:4:4733:4756	6190394	2	True				
ANR	6190406	IdentifierDecl	i		6190394	0					
ANR	6190407	IdentifierDeclType	zip_uint32_t		6190394	0					
ANR	6190408	Identifier	i		6190394	1					
ANR	6190409	IdentifierDecl	j		6190394	1					
ANR	6190410	IdentifierDeclType	zip_uint32_t		6190394	0					
ANR	6190411	Identifier	j		6190394	1					
ANR	6190412	IdentifierDecl	ulen		6190394	2					
ANR	6190413	IdentifierDeclType	zip_uint32_t		6190394	0					
ANR	6190414	Identifier	ulen		6190394	1					
ANR	6190415	IfStatement	if ( str == NULL )		6190394	3					
ANR	6190416	Condition	str == NULL	126:8:4767:4777	6190394	0	True				
ANR	6190417	EqualityExpression	str == NULL		6190394	0		==			
ANR	6190418	Identifier	str		6190394	0					
ANR	6190419	Identifier	NULL		6190394	1					
ANR	6190420	ReturnStatement	return ZIP_ENCODING_ASCII ;	127:1:4781:4806	6190394	1	True				
ANR	6190421	Identifier	ZIP_ENCODING_ASCII		6190394	0					
ANR	6190422	ExpressionStatement	name = str -> raw	129:4:4813:4828	6190394	4	True				
ANR	6190423	AssignmentExpression	name = str -> raw		6190394	0		=			
ANR	6190424	Identifier	name		6190394	0					
ANR	6190425	PtrMemberAccess	str -> raw		6190394	1					
ANR	6190426	Identifier	str		6190394	0					
ANR	6190427	Identifier	raw		6190394	1					
ANR	6190428	IfStatement	if ( str -> encoding != ZIP_ENCODING_UNKNOWN )		6190394	5					
ANR	6190429	Condition	str -> encoding != ZIP_ENCODING_UNKNOWN	131:8:4839:4875	6190394	0	True				
ANR	6190430	EqualityExpression	str -> encoding != ZIP_ENCODING_UNKNOWN		6190394	0		!=			
ANR	6190431	PtrMemberAccess	str -> encoding		6190394	0					
ANR	6190432	Identifier	str		6190394	0					
ANR	6190433	Identifier	encoding		6190394	1					
ANR	6190434	Identifier	ZIP_ENCODING_UNKNOWN		6190394	1					
ANR	6190435	ExpressionStatement	enc = str -> encoding	132:1:4879:4898	6190394	1	True				
ANR	6190436	AssignmentExpression	enc = str -> encoding		6190394	0		=			
ANR	6190437	Identifier	enc		6190394	0					
ANR	6190438	PtrMemberAccess	str -> encoding		6190394	1					
ANR	6190439	Identifier	str		6190394	0					
ANR	6190440	Identifier	encoding		6190394	1					
ANR	6190441	ElseStatement	else		6190394	0					
ANR	6190442	CompoundStatement		13:9:242:242	6190394	0					
ANR	6190443	ExpressionStatement	enc = ZIP_ENCODING_ASCII	134:1:4912:4936	6190394	0	True				
ANR	6190444	AssignmentExpression	enc = ZIP_ENCODING_ASCII		6190394	0		=			
ANR	6190445	Identifier	enc		6190394	0					
ANR	6190446	Identifier	ZIP_ENCODING_ASCII		6190394	1					
ANR	6190447	ForStatement	for ( i = 0 ; i < str -> length ; i ++ )		6190394	1					
ANR	6190448	ForInit	i = 0 ;	135:6:4944:4947	6190394	0	True				
ANR	6190449	AssignmentExpression	i = 0		6190394	0		=			
ANR	6190450	Identifier	i		6190394	0					
ANR	6190451	PrimaryExpression	0		6190394	1					
ANR	6190452	Condition	i < str -> length	135:11:4949:4961	6190394	1	True				
ANR	6190453	RelationalExpression	i < str -> length		6190394	0		<			
ANR	6190454	Identifier	i		6190394	0					
ANR	6190455	PtrMemberAccess	str -> length		6190394	1					
ANR	6190456	Identifier	str		6190394	0					
ANR	6190457	Identifier	length		6190394	1					
ANR	6190458	PostIncDecOperationExpression	i ++	135:26:4964:4966	6190394	2	True				
ANR	6190459	Identifier	i		6190394	0					
ANR	6190460	IncDec	++		6190394	1					
ANR	6190461	CompoundStatement		15:31:302:302	6190394	3					
ANR	6190462	IfStatement	if ( ( name [ i ] > 31 && name [ i ] < 128 ) || name [ i ] == '\\r' || name [ i ] == '\\n' || name [ i ] == '\\t' )		6190394	0					
ANR	6190463	Condition	( name [ i ] > 31 && name [ i ] < 128 ) || name [ i ] == '\\r' || name [ i ] == '\\n' || name [ i ] == '\\t'	136:9:4980:5067	6190394	0	True				
ANR	6190464	OrExpression	( name [ i ] > 31 && name [ i ] < 128 ) || name [ i ] == '\\r' || name [ i ] == '\\n' || name [ i ] == '\\t'		6190394	0		||			
ANR	6190465	AndExpression	name [ i ] > 31 && name [ i ] < 128		6190394	0		&&			
ANR	6190466	RelationalExpression	name [ i ] > 31		6190394	0		>			
ANR	6190467	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190468	Identifier	name		6190394	0					
ANR	6190469	Identifier	i		6190394	1					
ANR	6190470	PrimaryExpression	31		6190394	1					
ANR	6190471	RelationalExpression	name [ i ] < 128		6190394	1		<			
ANR	6190472	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190473	Identifier	name		6190394	0					
ANR	6190474	Identifier	i		6190394	1					
ANR	6190475	PrimaryExpression	128		6190394	1					
ANR	6190476	OrExpression	name [ i ] == '\\r' || name [ i ] == '\\n' || name [ i ] == '\\t'		6190394	1		||			
ANR	6190477	EqualityExpression	name [ i ] == '\\r'		6190394	0		==			
ANR	6190478	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190479	Identifier	name		6190394	0					
ANR	6190480	Identifier	i		6190394	1					
ANR	6190481	PrimaryExpression	'\\r'		6190394	1					
ANR	6190482	OrExpression	name [ i ] == '\\n' || name [ i ] == '\\t'		6190394	1		||			
ANR	6190483	EqualityExpression	name [ i ] == '\\n'		6190394	0		==			
ANR	6190484	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190485	Identifier	name		6190394	0					
ANR	6190486	Identifier	i		6190394	1					
ANR	6190487	PrimaryExpression	'\\n'		6190394	1					
ANR	6190488	EqualityExpression	name [ i ] == '\\t'		6190394	1		==			
ANR	6190489	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190490	Identifier	name		6190394	0					
ANR	6190491	Identifier	i		6190394	1					
ANR	6190492	PrimaryExpression	'\\t'		6190394	1					
ANR	6190493	ContinueStatement	continue ;	137:2:5072:5080	6190394	1	True				
ANR	6190494	ExpressionStatement	enc = ZIP_ENCODING_UTF8_GUESSED	139:5:5088:5119	6190394	1	True				
ANR	6190495	AssignmentExpression	enc = ZIP_ENCODING_UTF8_GUESSED		6190394	0		=			
ANR	6190496	Identifier	enc		6190394	0					
ANR	6190497	Identifier	ZIP_ENCODING_UTF8_GUESSED		6190394	1					
ANR	6190498	IfStatement	if ( ( name [ i ] & UTF_8_LEN_2_MASK ) == UTF_8_LEN_2_MATCH )		6190394	2					
ANR	6190499	Condition	( name [ i ] & UTF_8_LEN_2_MASK ) == UTF_8_LEN_2_MATCH	140:9:5130:5178	6190394	0	True				
ANR	6190500	EqualityExpression	( name [ i ] & UTF_8_LEN_2_MASK ) == UTF_8_LEN_2_MATCH		6190394	0		==			
ANR	6190501	BitAndExpression	name [ i ] & UTF_8_LEN_2_MASK		6190394	0		&			
ANR	6190502	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190503	Identifier	name		6190394	0					
ANR	6190504	Identifier	i		6190394	1					
ANR	6190505	Identifier	UTF_8_LEN_2_MASK		6190394	1					
ANR	6190506	Identifier	UTF_8_LEN_2_MATCH		6190394	1					
ANR	6190507	ExpressionStatement	ulen = 1	141:2:5183:5191	6190394	1	True				
ANR	6190508	AssignmentExpression	ulen = 1		6190394	0		=			
ANR	6190509	Identifier	ulen		6190394	0					
ANR	6190510	PrimaryExpression	1		6190394	1					
ANR	6190511	ElseStatement	else		6190394	0					
ANR	6190512	IfStatement	if ( ( name [ i ] & UTF_8_LEN_3_MASK ) == UTF_8_LEN_3_MATCH )		6190394	0					
ANR	6190513	Condition	( name [ i ] & UTF_8_LEN_3_MASK ) == UTF_8_LEN_3_MATCH	142:14:5207:5255	6190394	0	True				
ANR	6190514	EqualityExpression	( name [ i ] & UTF_8_LEN_3_MASK ) == UTF_8_LEN_3_MATCH		6190394	0		==			
ANR	6190515	BitAndExpression	name [ i ] & UTF_8_LEN_3_MASK		6190394	0		&			
ANR	6190516	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190517	Identifier	name		6190394	0					
ANR	6190518	Identifier	i		6190394	1					
ANR	6190519	Identifier	UTF_8_LEN_3_MASK		6190394	1					
ANR	6190520	Identifier	UTF_8_LEN_3_MATCH		6190394	1					
ANR	6190521	ExpressionStatement	ulen = 2	143:2:5260:5268	6190394	1	True				
ANR	6190522	AssignmentExpression	ulen = 2		6190394	0		=			
ANR	6190523	Identifier	ulen		6190394	0					
ANR	6190524	PrimaryExpression	2		6190394	1					
ANR	6190525	ElseStatement	else		6190394	0					
ANR	6190526	IfStatement	if ( ( name [ i ] & UTF_8_LEN_4_MASK ) == UTF_8_LEN_4_MATCH )		6190394	0					
ANR	6190527	Condition	( name [ i ] & UTF_8_LEN_4_MASK ) == UTF_8_LEN_4_MATCH	144:14:5284:5332	6190394	0	True				
ANR	6190528	EqualityExpression	( name [ i ] & UTF_8_LEN_4_MASK ) == UTF_8_LEN_4_MATCH		6190394	0		==			
ANR	6190529	BitAndExpression	name [ i ] & UTF_8_LEN_4_MASK		6190394	0		&			
ANR	6190530	ArrayIndexing	name [ i ]		6190394	0					
ANR	6190531	Identifier	name		6190394	0					
ANR	6190532	Identifier	i		6190394	1					
ANR	6190533	Identifier	UTF_8_LEN_4_MASK		6190394	1					
ANR	6190534	Identifier	UTF_8_LEN_4_MATCH		6190394	1					
ANR	6190535	ExpressionStatement	ulen = 3	145:2:5337:5345	6190394	1	True				
ANR	6190536	AssignmentExpression	ulen = 3		6190394	0		=			
ANR	6190537	Identifier	ulen		6190394	0					
ANR	6190538	PrimaryExpression	3		6190394	1					
ANR	6190539	ElseStatement	else		6190394	0					
ANR	6190540	CompoundStatement		26:10:690:690	6190394	0					
ANR	6190541	ExpressionStatement	enc = ZIP_ENCODING_CP437	147:2:5361:5385	6190394	0	True				
ANR	6190542	AssignmentExpression	enc = ZIP_ENCODING_CP437		6190394	0		=			
ANR	6190543	Identifier	enc		6190394	0					
ANR	6190544	Identifier	ZIP_ENCODING_CP437		6190394	1					
ANR	6190545	BreakStatement	break ;	148:2:5389:5394	6190394	1	True				
ANR	6190546	IfStatement	if ( i + ulen >= str -> length )		6190394	3					
ANR	6190547	Condition	i + ulen >= str -> length	151:9:5413:5435	6190394	0	True				
ANR	6190548	RelationalExpression	i + ulen >= str -> length		6190394	0		>=			
ANR	6190549	AdditiveExpression	i + ulen		6190394	0		+			
ANR	6190550	Identifier	i		6190394	0					
ANR	6190551	Identifier	ulen		6190394	1					
ANR	6190552	PtrMemberAccess	str -> length		6190394	1					
ANR	6190553	Identifier	str		6190394	0					
ANR	6190554	Identifier	length		6190394	1					
ANR	6190555	CompoundStatement		31:34:771:771	6190394	1					
ANR	6190556	ExpressionStatement	enc = ZIP_ENCODING_CP437	152:2:5442:5466	6190394	0	True				
ANR	6190557	AssignmentExpression	enc = ZIP_ENCODING_CP437		6190394	0		=			
ANR	6190558	Identifier	enc		6190394	0					
ANR	6190559	Identifier	ZIP_ENCODING_CP437		6190394	1					
ANR	6190560	BreakStatement	break ;	153:2:5470:5475	6190394	1	True				
ANR	6190561	ForStatement	for ( j = 1 ; j <= ulen ; j ++ )		6190394	4					
ANR	6190562	ForInit	j = 1 ;	156:10:5495:5498	6190394	0	True				
ANR	6190563	AssignmentExpression	j = 1		6190394	0		=			
ANR	6190564	Identifier	j		6190394	0					
ANR	6190565	PrimaryExpression	1		6190394	1					
ANR	6190566	Condition	j <= ulen	156:15:5500:5506	6190394	1	True				
ANR	6190567	RelationalExpression	j <= ulen		6190394	0		<=			
ANR	6190568	Identifier	j		6190394	0					
ANR	6190569	Identifier	ulen		6190394	1					
ANR	6190570	PostIncDecOperationExpression	j ++	156:24:5509:5511	6190394	2	True				
ANR	6190571	Identifier	j		6190394	0					
ANR	6190572	IncDec	++		6190394	1					
ANR	6190573	CompoundStatement		36:29:847:847	6190394	3					
ANR	6190574	IfStatement	if ( ( name [ i + j ] & UTF_8_CONTINUE_MASK ) != UTF_8_CONTINUE_MATCH )		6190394	0					
ANR	6190575	Condition	( name [ i + j ] & UTF_8_CONTINUE_MASK ) != UTF_8_CONTINUE_MATCH	157:6:5522:5578	6190394	0	True				
ANR	6190576	EqualityExpression	( name [ i + j ] & UTF_8_CONTINUE_MASK ) != UTF_8_CONTINUE_MATCH		6190394	0		!=			
ANR	6190577	BitAndExpression	name [ i + j ] & UTF_8_CONTINUE_MASK		6190394	0		&			
ANR	6190578	ArrayIndexing	name [ i + j ]		6190394	0					
ANR	6190579	Identifier	name		6190394	0					
ANR	6190580	AdditiveExpression	i + j		6190394	1		+			
ANR	6190581	Identifier	i		6190394	0					
ANR	6190582	Identifier	j		6190394	1					
ANR	6190583	Identifier	UTF_8_CONTINUE_MASK		6190394	1					
ANR	6190584	Identifier	UTF_8_CONTINUE_MATCH		6190394	1					
ANR	6190585	CompoundStatement		37:65:914:914	6190394	1					
ANR	6190586	ExpressionStatement	enc = ZIP_ENCODING_CP437	158:6:5589:5613	6190394	0	True				
ANR	6190587	AssignmentExpression	enc = ZIP_ENCODING_CP437		6190394	0		=			
ANR	6190588	Identifier	enc		6190394	0					
ANR	6190589	Identifier	ZIP_ENCODING_CP437		6190394	1					
ANR	6190590	GotoStatement	goto done ;	159:6:5621:5630	6190394	1	True				
ANR	6190591	Identifier	done		6190394	0					
ANR	6190592	ExpressionStatement	i += ulen	162:5:5648:5657	6190394	5	True				
ANR	6190593	AssignmentExpression	i += ulen		6190394	0		+=			
ANR	6190594	Identifier	i		6190394	0					
ANR	6190595	Identifier	ulen		6190394	1					
ANR	6190596	Label	done :	166:0:5669:5673	6190394	6	True				
ANR	6190597	Identifier	done		6190394	0					
ANR	6190598	ExpressionStatement	str -> encoding = enc	167:4:5679:5698	6190394	7	True				
ANR	6190599	AssignmentExpression	str -> encoding = enc		6190394	0		=			
ANR	6190600	PtrMemberAccess	str -> encoding		6190394	0					
ANR	6190601	Identifier	str		6190394	0					
ANR	6190602	Identifier	encoding		6190394	1					
ANR	6190603	Identifier	enc		6190394	1					
ANR	6190604	IfStatement	if ( expected_encoding != ZIP_ENCODING_UNKNOWN )		6190394	8					
ANR	6190605	Condition	expected_encoding != ZIP_ENCODING_UNKNOWN	169:8:5709:5749	6190394	0	True				
ANR	6190606	EqualityExpression	expected_encoding != ZIP_ENCODING_UNKNOWN		6190394	0		!=			
ANR	6190607	Identifier	expected_encoding		6190394	0					
ANR	6190608	Identifier	ZIP_ENCODING_UNKNOWN		6190394	1					
ANR	6190609	CompoundStatement		49:51:1085:1085	6190394	1					
ANR	6190610	IfStatement	if ( expected_encoding == ZIP_ENCODING_UTF8_KNOWN && enc == ZIP_ENCODING_UTF8_GUESSED )		6190394	0					
ANR	6190611	Condition	expected_encoding == ZIP_ENCODING_UTF8_KNOWN && enc == ZIP_ENCODING_UTF8_GUESSED	170:5:5759:5838	6190394	0	True				
ANR	6190612	AndExpression	expected_encoding == ZIP_ENCODING_UTF8_KNOWN && enc == ZIP_ENCODING_UTF8_GUESSED		6190394	0		&&			
ANR	6190613	EqualityExpression	expected_encoding == ZIP_ENCODING_UTF8_KNOWN		6190394	0		==			
ANR	6190614	Identifier	expected_encoding		6190394	0					
ANR	6190615	Identifier	ZIP_ENCODING_UTF8_KNOWN		6190394	1					
ANR	6190616	EqualityExpression	enc == ZIP_ENCODING_UTF8_GUESSED		6190394	1		==			
ANR	6190617	Identifier	enc		6190394	0					
ANR	6190618	Identifier	ZIP_ENCODING_UTF8_GUESSED		6190394	1					
ANR	6190619	ExpressionStatement	str -> encoding = enc = ZIP_ENCODING_UTF8_KNOWN	171:5:5846:5891	6190394	1	True				
ANR	6190620	AssignmentExpression	str -> encoding = enc = ZIP_ENCODING_UTF8_KNOWN		6190394	0		=			
ANR	6190621	PtrMemberAccess	str -> encoding		6190394	0					
ANR	6190622	Identifier	str		6190394	0					
ANR	6190623	Identifier	encoding		6190394	1					
ANR	6190624	AssignmentExpression	enc = ZIP_ENCODING_UTF8_KNOWN		6190394	1		=			
ANR	6190625	Identifier	enc		6190394	0					
ANR	6190626	Identifier	ZIP_ENCODING_UTF8_KNOWN		6190394	1					
ANR	6190627	IfStatement	if ( expected_encoding != enc && enc != ZIP_ENCODING_ASCII )		6190394	1					
ANR	6190628	Condition	expected_encoding != enc && enc != ZIP_ENCODING_ASCII	173:5:5899:5951	6190394	0	True				
ANR	6190629	AndExpression	expected_encoding != enc && enc != ZIP_ENCODING_ASCII		6190394	0		&&			
ANR	6190630	EqualityExpression	expected_encoding != enc		6190394	0		!=			
ANR	6190631	Identifier	expected_encoding		6190394	0					
ANR	6190632	Identifier	enc		6190394	1					
ANR	6190633	EqualityExpression	enc != ZIP_ENCODING_ASCII		6190394	1		!=			
ANR	6190634	Identifier	enc		6190394	0					
ANR	6190635	Identifier	ZIP_ENCODING_ASCII		6190394	1					
ANR	6190636	ReturnStatement	return ZIP_ENCODING_ERROR ;	174:5:5959:5984	6190394	1	True				
ANR	6190637	Identifier	ZIP_ENCODING_ERROR		6190394	0					
ANR	6190638	ReturnStatement	return enc ;	177:4:6001:6011	6190394	9	True				
ANR	6190639	Identifier	enc		6190394	0					
ANR	6190640	ReturnType	enum zip_encoding_type		6190394	1					
ANR	6190641	Identifier	_zip_guess_encoding		6190394	2					
ANR	6190642	ParameterList	"struct zip_string * str , enum zip_encoding_type expected_encoding"		6190394	3					
ANR	6190643	Parameter	struct zip_string * str	120:20:4600:4621	6190394	0	True				
ANR	6190644	ParameterType	struct zip_string *		6190394	0					
ANR	6190645	Identifier	str		6190394	1					
ANR	6190646	Parameter	enum zip_encoding_type expected_encoding	120:44:4624:4663	6190394	1	True				
ANR	6190647	ParameterType	enum zip_encoding_type		6190394	0					
ANR	6190648	Identifier	expected_encoding		6190394	1					
ANR	6190649	CFGEntryNode	ENTRY		6190394		True				
ANR	6190650	CFGExitNode	EXIT		6190394		True				
ANR	6190651	Symbol	str -> length		6190394						
ANR	6190652	Symbol	UTF_8_LEN_3_MATCH		6190394						
ANR	6190653	Symbol	UTF_8_CONTINUE_MATCH		6190394						
ANR	6190654	Symbol	ZIP_ENCODING_ASCII		6190394						
ANR	6190655	Symbol	UTF_8_LEN_4_MASK		6190394						
ANR	6190656	Symbol	str -> encoding		6190394						
ANR	6190657	Symbol	ZIP_ENCODING_UNKNOWN		6190394						
ANR	6190658	Symbol	str -> raw		6190394						
ANR	6190659	Symbol	enc		6190394						
ANR	6190660	Symbol	* str		6190394						
ANR	6190661	Symbol	* name		6190394						
ANR	6190662	Symbol	ZIP_ENCODING_UTF8_KNOWN		6190394						
ANR	6190663	Symbol	UTF_8_CONTINUE_MASK		6190394						
ANR	6190664	Symbol	NULL		6190394						
ANR	6190665	Symbol	expected_encoding		6190394						
ANR	6190666	Symbol	i		6190394						
ANR	6190667	Symbol	j		6190394						
ANR	6190668	Symbol	UTF_8_LEN_2_MASK		6190394						
ANR	6190669	Symbol	UTF_8_LEN_4_MATCH		6190394						
ANR	6190670	Symbol	str		6190394						
ANR	6190671	Symbol	ZIP_ENCODING_CP437		6190394						
ANR	6190672	Symbol	ZIP_ENCODING_ERROR		6190394						
ANR	6190673	Symbol	* i		6190394						
ANR	6190674	Symbol	* j		6190394						
ANR	6190675	Symbol	ZIP_ENCODING_UTF8_GUESSED		6190394						
ANR	6190676	Symbol	ulen		6190394						
ANR	6190677	Symbol	name		6190394						
ANR	6190678	Symbol	UTF_8_LEN_3_MASK		6190394						
ANR	6190679	Symbol	UTF_8_LEN_2_MATCH		6190394						
ANR	6190680	Function	_zip_unicode_to_utf8_len	182:0:6019:6222							
ANR	6190681	FunctionDef	_zip_unicode_to_utf8_len (zip_uint32_t codepoint)		6190680	0					
ANR	6190682	CompoundStatement		184:0:6088:6222	6190680	0					
ANR	6190683	IfStatement	if ( codepoint < 0x0080 )		6190680	0					
ANR	6190684	Condition	codepoint < 0x0080	185:8:6098:6115	6190680	0	True				
ANR	6190685	RelationalExpression	codepoint < 0x0080		6190680	0		<			
ANR	6190686	Identifier	codepoint		6190680	0					
ANR	6190687	PrimaryExpression	0x0080		6190680	1					
ANR	6190688	ReturnStatement	return 1 ;	186:1:6119:6127	6190680	1	True				
ANR	6190689	PrimaryExpression	1		6190680	0					
ANR	6190690	IfStatement	if ( codepoint < 0x0800 )		6190680	1					
ANR	6190691	Condition	codepoint < 0x0800	187:8:6137:6154	6190680	0	True				
ANR	6190692	RelationalExpression	codepoint < 0x0800		6190680	0		<			
ANR	6190693	Identifier	codepoint		6190680	0					
ANR	6190694	PrimaryExpression	0x0800		6190680	1					
ANR	6190695	ReturnStatement	return 2 ;	188:1:6158:6166	6190680	1	True				
ANR	6190696	PrimaryExpression	2		6190680	0					
ANR	6190697	IfStatement	if ( codepoint < 0x10000 )		6190680	2					
ANR	6190698	Condition	codepoint < 0x10000	189:8:6176:6194	6190680	0	True				
ANR	6190699	RelationalExpression	codepoint < 0x10000		6190680	0		<			
ANR	6190700	Identifier	codepoint		6190680	0					
ANR	6190701	PrimaryExpression	0x10000		6190680	1					
ANR	6190702	ReturnStatement	return 3 ;	190:1:6198:6206	6190680	1	True				
ANR	6190703	PrimaryExpression	3		6190680	0					
ANR	6190704	ReturnStatement	return 4 ;	191:4:6212:6220	6190680	3	True				
ANR	6190705	PrimaryExpression	4		6190680	0					
ANR	6190706	ReturnType	static zip_uint32_t		6190680	1					
ANR	6190707	Identifier	_zip_unicode_to_utf8_len		6190680	2					
ANR	6190708	ParameterList	zip_uint32_t codepoint		6190680	3					
ANR	6190709	Parameter	zip_uint32_t codepoint	183:25:6064:6085	6190680	0	True				
ANR	6190710	ParameterType	zip_uint32_t		6190680	0					
ANR	6190711	Identifier	codepoint		6190680	1					
ANR	6190712	CFGEntryNode	ENTRY		6190680		True				
ANR	6190713	CFGExitNode	EXIT		6190680		True				
ANR	6190714	Symbol	codepoint		6190680						
ANR	6190715	Function	_zip_unicode_to_utf8	196:0:6228:7239							
ANR	6190716	FunctionDef	"_zip_unicode_to_utf8 (zip_uint32_t codepoint , zip_uint8_t * buf , int len)"		6190715	0					
ANR	6190717	CompoundStatement		198:0:6320:7239	6190715	0					
ANR	6190718	IfStatement	if ( codepoint < 0x0080 )		6190715	0					
ANR	6190719	Condition	codepoint < 0x0080	199:8:6330:6347	6190715	0	True				
ANR	6190720	RelationalExpression	codepoint < 0x0080		6190715	0		<			
ANR	6190721	Identifier	codepoint		6190715	0					
ANR	6190722	PrimaryExpression	0x0080		6190715	1					
ANR	6190723	CompoundStatement		2:28:29:29	6190715	1					
ANR	6190724	IfStatement	if ( len < 1 )		6190715	0					
ANR	6190725	Condition	len < 1	200:12:6364:6370	6190715	0	True				
ANR	6190726	RelationalExpression	len < 1		6190715	0		<			
ANR	6190727	Identifier	len		6190715	0					
ANR	6190728	PrimaryExpression	1		6190715	1					
ANR	6190729	CompoundStatement		3:21:52:52	6190715	1					
ANR	6190730	ReturnStatement	return len ;	201:10:6385:6395	6190715	0	True				
ANR	6190731	Identifier	len		6190715	0					
ANR	6190732	ExpressionStatement	buf [ 0 ] = codepoint & 0xff	203:1:6408:6433	6190715	1	True				
ANR	6190733	AssignmentExpression	buf [ 0 ] = codepoint & 0xff		6190715	0		=			
ANR	6190734	ArrayIndexing	buf [ 0 ]		6190715	0					
ANR	6190735	Identifier	buf		6190715	0					
ANR	6190736	PrimaryExpression	0		6190715	1					
ANR	6190737	BitAndExpression	codepoint & 0xff		6190715	1		&			
ANR	6190738	Identifier	codepoint		6190715	0					
ANR	6190739	PrimaryExpression	0xff		6190715	1					
ANR	6190740	ReturnStatement	return 1 ;	204:1:6436:6444	6190715	2	True				
ANR	6190741	PrimaryExpression	1		6190715	0					
ANR	6190742	IfStatement	if ( codepoint < 0x0800 )		6190715	1					
ANR	6190743	Condition	codepoint < 0x0800	206:8:6460:6477	6190715	0	True				
ANR	6190744	RelationalExpression	codepoint < 0x0800		6190715	0		<			
ANR	6190745	Identifier	codepoint		6190715	0					
ANR	6190746	PrimaryExpression	0x0800		6190715	1					
ANR	6190747	CompoundStatement		9:28:159:159	6190715	1					
ANR	6190748	IfStatement	if ( len < 2 )		6190715	0					
ANR	6190749	Condition	len < 2	207:12:6494:6500	6190715	0	True				
ANR	6190750	RelationalExpression	len < 2		6190715	0		<			
ANR	6190751	Identifier	len		6190715	0					
ANR	6190752	PrimaryExpression	2		6190715	1					
ANR	6190753	CompoundStatement		10:21:182:182	6190715	1					
ANR	6190754	ReturnStatement	return len ;	208:10:6515:6525	6190715	0	True				
ANR	6190755	Identifier	len		6190715	0					
ANR	6190756	ExpressionStatement	buf [ 0 ] = UTF_8_LEN_2_MATCH | ( ( codepoint >> 6 ) & 0x1f )	210:1:6538:6592	6190715	1	True				
ANR	6190757	AssignmentExpression	buf [ 0 ] = UTF_8_LEN_2_MATCH | ( ( codepoint >> 6 ) & 0x1f )		6190715	0		=			
ANR	6190758	ArrayIndexing	buf [ 0 ]		6190715	0					
ANR	6190759	Identifier	buf		6190715	0					
ANR	6190760	PrimaryExpression	0		6190715	1					
ANR	6190761	InclusiveOrExpression	UTF_8_LEN_2_MATCH | ( ( codepoint >> 6 ) & 0x1f )		6190715	1		|			
ANR	6190762	Identifier	UTF_8_LEN_2_MATCH		6190715	0					
ANR	6190763	BitAndExpression	( codepoint >> 6 ) & 0x1f		6190715	1		&			
ANR	6190764	ShiftExpression	codepoint >> 6		6190715	0		>>			
ANR	6190765	Identifier	codepoint		6190715	0					
ANR	6190766	PrimaryExpression	6		6190715	1					
ANR	6190767	PrimaryExpression	0x1f		6190715	1					
ANR	6190768	ExpressionStatement	buf [ 1 ] = UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )	211:1:6595:6645	6190715	2	True				
ANR	6190769	AssignmentExpression	buf [ 1 ] = UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )		6190715	0		=			
ANR	6190770	ArrayIndexing	buf [ 1 ]		6190715	0					
ANR	6190771	Identifier	buf		6190715	0					
ANR	6190772	PrimaryExpression	1		6190715	1					
ANR	6190773	InclusiveOrExpression	UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )		6190715	1		|			
ANR	6190774	Identifier	UTF_8_CONTINUE_MATCH		6190715	0					
ANR	6190775	BitAndExpression	codepoint & 0x3f		6190715	1		&			
ANR	6190776	Identifier	codepoint		6190715	0					
ANR	6190777	PrimaryExpression	0x3f		6190715	1					
ANR	6190778	ReturnStatement	return 2 ;	212:1:6648:6656	6190715	3	True				
ANR	6190779	PrimaryExpression	2		6190715	0					
ANR	6190780	IfStatement	if ( codepoint < 0x10000 )		6190715	2					
ANR	6190781	Condition	codepoint < 0x10000	214:8:6672:6690	6190715	0	True				
ANR	6190782	RelationalExpression	codepoint < 0x10000		6190715	0		<			
ANR	6190783	Identifier	codepoint		6190715	0					
ANR	6190784	PrimaryExpression	0x10000		6190715	1					
ANR	6190785	CompoundStatement		17:29:372:372	6190715	1					
ANR	6190786	IfStatement	if ( len < 3 )		6190715	0					
ANR	6190787	Condition	len < 3	215:12:6707:6713	6190715	0	True				
ANR	6190788	RelationalExpression	len < 3		6190715	0		<			
ANR	6190789	Identifier	len		6190715	0					
ANR	6190790	PrimaryExpression	3		6190715	1					
ANR	6190791	CompoundStatement		18:21:395:395	6190715	1					
ANR	6190792	ReturnStatement	return len ;	216:10:6728:6738	6190715	0	True				
ANR	6190793	Identifier	len		6190715	0					
ANR	6190794	ExpressionStatement	buf [ 0 ] = UTF_8_LEN_3_MATCH | ( ( codepoint >> 12 ) & 0x0f )	218:1:6751:6806	6190715	1	True				
ANR	6190795	AssignmentExpression	buf [ 0 ] = UTF_8_LEN_3_MATCH | ( ( codepoint >> 12 ) & 0x0f )		6190715	0		=			
ANR	6190796	ArrayIndexing	buf [ 0 ]		6190715	0					
ANR	6190797	Identifier	buf		6190715	0					
ANR	6190798	PrimaryExpression	0		6190715	1					
ANR	6190799	InclusiveOrExpression	UTF_8_LEN_3_MATCH | ( ( codepoint >> 12 ) & 0x0f )		6190715	1		|			
ANR	6190800	Identifier	UTF_8_LEN_3_MATCH		6190715	0					
ANR	6190801	BitAndExpression	( codepoint >> 12 ) & 0x0f		6190715	1		&			
ANR	6190802	ShiftExpression	codepoint >> 12		6190715	0		>>			
ANR	6190803	Identifier	codepoint		6190715	0					
ANR	6190804	PrimaryExpression	12		6190715	1					
ANR	6190805	PrimaryExpression	0x0f		6190715	1					
ANR	6190806	ExpressionStatement	buf [ 1 ] = UTF_8_CONTINUE_MATCH | ( ( codepoint >> 6 ) & 0x3f )	219:1:6809:6866	6190715	2	True				
ANR	6190807	AssignmentExpression	buf [ 1 ] = UTF_8_CONTINUE_MATCH | ( ( codepoint >> 6 ) & 0x3f )		6190715	0		=			
ANR	6190808	ArrayIndexing	buf [ 1 ]		6190715	0					
ANR	6190809	Identifier	buf		6190715	0					
ANR	6190810	PrimaryExpression	1		6190715	1					
ANR	6190811	InclusiveOrExpression	UTF_8_CONTINUE_MATCH | ( ( codepoint >> 6 ) & 0x3f )		6190715	1		|			
ANR	6190812	Identifier	UTF_8_CONTINUE_MATCH		6190715	0					
ANR	6190813	BitAndExpression	( codepoint >> 6 ) & 0x3f		6190715	1		&			
ANR	6190814	ShiftExpression	codepoint >> 6		6190715	0		>>			
ANR	6190815	Identifier	codepoint		6190715	0					
ANR	6190816	PrimaryExpression	6		6190715	1					
ANR	6190817	PrimaryExpression	0x3f		6190715	1					
ANR	6190818	ExpressionStatement	buf [ 2 ] = UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )	220:1:6869:6919	6190715	3	True				
ANR	6190819	AssignmentExpression	buf [ 2 ] = UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )		6190715	0		=			
ANR	6190820	ArrayIndexing	buf [ 2 ]		6190715	0					
ANR	6190821	Identifier	buf		6190715	0					
ANR	6190822	PrimaryExpression	2		6190715	1					
ANR	6190823	InclusiveOrExpression	UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )		6190715	1		|			
ANR	6190824	Identifier	UTF_8_CONTINUE_MATCH		6190715	0					
ANR	6190825	BitAndExpression	codepoint & 0x3f		6190715	1		&			
ANR	6190826	Identifier	codepoint		6190715	0					
ANR	6190827	PrimaryExpression	0x3f		6190715	1					
ANR	6190828	ReturnStatement	return 3 ;	221:1:6922:6930	6190715	4	True				
ANR	6190829	PrimaryExpression	3		6190715	0					
ANR	6190830	IfStatement	if ( len < 4 )		6190715	3					
ANR	6190831	Condition	len < 4	223:8:6946:6952	6190715	0	True				
ANR	6190832	RelationalExpression	len < 4		6190715	0		<			
ANR	6190833	Identifier	len		6190715	0					
ANR	6190834	PrimaryExpression	4		6190715	1					
ANR	6190835	CompoundStatement		26:17:634:634	6190715	1					
ANR	6190836	ReturnStatement	return len ;	224:6:6963:6973	6190715	0	True				
ANR	6190837	Identifier	len		6190715	0					
ANR	6190838	ExpressionStatement	buf [ 0 ] = UTF_8_LEN_4_MATCH | ( ( codepoint >> 18 ) & 0x07 )	226:4:6985:7040	6190715	4	True				
ANR	6190839	AssignmentExpression	buf [ 0 ] = UTF_8_LEN_4_MATCH | ( ( codepoint >> 18 ) & 0x07 )		6190715	0		=			
ANR	6190840	ArrayIndexing	buf [ 0 ]		6190715	0					
ANR	6190841	Identifier	buf		6190715	0					
ANR	6190842	PrimaryExpression	0		6190715	1					
ANR	6190843	InclusiveOrExpression	UTF_8_LEN_4_MATCH | ( ( codepoint >> 18 ) & 0x07 )		6190715	1		|			
ANR	6190844	Identifier	UTF_8_LEN_4_MATCH		6190715	0					
ANR	6190845	BitAndExpression	( codepoint >> 18 ) & 0x07		6190715	1		&			
ANR	6190846	ShiftExpression	codepoint >> 18		6190715	0		>>			
ANR	6190847	Identifier	codepoint		6190715	0					
ANR	6190848	PrimaryExpression	18		6190715	1					
ANR	6190849	PrimaryExpression	0x07		6190715	1					
ANR	6190850	ExpressionStatement	buf [ 1 ] = UTF_8_CONTINUE_MATCH | ( ( codepoint >> 12 ) & 0x3f )	227:4:7046:7104	6190715	5	True				
ANR	6190851	AssignmentExpression	buf [ 1 ] = UTF_8_CONTINUE_MATCH | ( ( codepoint >> 12 ) & 0x3f )		6190715	0		=			
ANR	6190852	ArrayIndexing	buf [ 1 ]		6190715	0					
ANR	6190853	Identifier	buf		6190715	0					
ANR	6190854	PrimaryExpression	1		6190715	1					
ANR	6190855	InclusiveOrExpression	UTF_8_CONTINUE_MATCH | ( ( codepoint >> 12 ) & 0x3f )		6190715	1		|			
ANR	6190856	Identifier	UTF_8_CONTINUE_MATCH		6190715	0					
ANR	6190857	BitAndExpression	( codepoint >> 12 ) & 0x3f		6190715	1		&			
ANR	6190858	ShiftExpression	codepoint >> 12		6190715	0		>>			
ANR	6190859	Identifier	codepoint		6190715	0					
ANR	6190860	PrimaryExpression	12		6190715	1					
ANR	6190861	PrimaryExpression	0x3f		6190715	1					
ANR	6190862	ExpressionStatement	buf [ 2 ] = UTF_8_CONTINUE_MATCH | ( ( codepoint >> 6 ) & 0x3f )	228:4:7110:7167	6190715	6	True				
ANR	6190863	AssignmentExpression	buf [ 2 ] = UTF_8_CONTINUE_MATCH | ( ( codepoint >> 6 ) & 0x3f )		6190715	0		=			
ANR	6190864	ArrayIndexing	buf [ 2 ]		6190715	0					
ANR	6190865	Identifier	buf		6190715	0					
ANR	6190866	PrimaryExpression	2		6190715	1					
ANR	6190867	InclusiveOrExpression	UTF_8_CONTINUE_MATCH | ( ( codepoint >> 6 ) & 0x3f )		6190715	1		|			
ANR	6190868	Identifier	UTF_8_CONTINUE_MATCH		6190715	0					
ANR	6190869	BitAndExpression	( codepoint >> 6 ) & 0x3f		6190715	1		&			
ANR	6190870	ShiftExpression	codepoint >> 6		6190715	0		>>			
ANR	6190871	Identifier	codepoint		6190715	0					
ANR	6190872	PrimaryExpression	6		6190715	1					
ANR	6190873	PrimaryExpression	0x3f		6190715	1					
ANR	6190874	ExpressionStatement	buf [ 3 ] = UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )	229:4:7173:7223	6190715	7	True				
ANR	6190875	AssignmentExpression	buf [ 3 ] = UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )		6190715	0		=			
ANR	6190876	ArrayIndexing	buf [ 3 ]		6190715	0					
ANR	6190877	Identifier	buf		6190715	0					
ANR	6190878	PrimaryExpression	3		6190715	1					
ANR	6190879	InclusiveOrExpression	UTF_8_CONTINUE_MATCH | ( codepoint & 0x3f )		6190715	1		|			
ANR	6190880	Identifier	UTF_8_CONTINUE_MATCH		6190715	0					
ANR	6190881	BitAndExpression	codepoint & 0x3f		6190715	1		&			
ANR	6190882	Identifier	codepoint		6190715	0					
ANR	6190883	PrimaryExpression	0x3f		6190715	1					
ANR	6190884	ReturnStatement	return 4 ;	230:4:7229:7237	6190715	8	True				
ANR	6190885	PrimaryExpression	4		6190715	0					
ANR	6190886	ReturnType	static zip_uint32_t		6190715	1					
ANR	6190887	Identifier	_zip_unicode_to_utf8		6190715	2					
ANR	6190888	ParameterList	"zip_uint32_t codepoint , zip_uint8_t * buf , int len"		6190715	3					
ANR	6190889	Parameter	zip_uint32_t codepoint	197:21:6269:6290	6190715	0	True				
ANR	6190890	ParameterType	zip_uint32_t		6190715	0					
ANR	6190891	Identifier	codepoint		6190715	1					
ANR	6190892	Parameter	zip_uint8_t * buf	197:45:6293:6308	6190715	1	True				
ANR	6190893	ParameterType	zip_uint8_t *		6190715	0					
ANR	6190894	Identifier	buf		6190715	1					
ANR	6190895	Parameter	int len	197:63:6311:6317	6190715	2	True				
ANR	6190896	ParameterType	int		6190715	0					
ANR	6190897	Identifier	len		6190715	1					
ANR	6190898	CFGEntryNode	ENTRY		6190715		True				
ANR	6190899	CFGExitNode	EXIT		6190715		True				
ANR	6190900	Symbol	buf		6190715						
ANR	6190901	Symbol	* buf		6190715						
ANR	6190902	Symbol	codepoint		6190715						
ANR	6190903	Symbol	len		6190715						
ANR	6190904	Symbol	UTF_8_LEN_3_MATCH		6190715						
ANR	6190905	Symbol	UTF_8_CONTINUE_MATCH		6190715						
ANR	6190906	Symbol	UTF_8_LEN_4_MATCH		6190715						
ANR	6190907	Symbol	UTF_8_LEN_2_MATCH		6190715						
ANR	6190908	DeclStmt									
ANR	6190909	Decl							zip_uint8_t	zip_uint8_t *	cp437buf
ANR	6190910	DeclStmt									
ANR	6190911	Decl							zip_uint8_t	zip_uint8_t *	utf8buf
ANR	6190912	DeclStmt									
ANR	6190913	Decl							zip_uint32_t	zip_uint32_t	buflen
ANR	6190914	Decl							zip_uint32_t	zip_uint32_t	i
ANR	6190915	Decl							zip_uint32_t	zip_uint32_t	offset
