command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4781464	File	data/converged/CVE-2019-16718~_radare2/libr_egg_emit_arm.c								
ANR	4781465	DeclStmt									
ANR	4781466	Decl							char	char * [ ]	regs
ANR	4781467	DeclStmt									
ANR	4781468	Decl							int	int	lastarg
ANR	4781469	Function	emit_init	21:0:400:447							
ANR	4781470	FunctionDef	emit_init (REgg * egg)		4781469	0					
ANR	4781471	CompoundStatement		21:33:433:447	4781469	0					
ANR	4781472	ReturnType	static void		4781469	1					
ANR	4781473	Identifier	emit_init		4781469	2					
ANR	4781474	ParameterList	REgg * egg		4781469	3					
ANR	4781475	Parameter	REgg * egg	21:22:422:430	4781469	0	True				
ANR	4781476	ParameterType	REgg *		4781469	0					
ANR	4781477	Identifier	egg		4781469	1					
ANR	4781478	CFGEntryNode	ENTRY		4781469		True				
ANR	4781479	CFGExitNode	EXIT		4781469		True				
ANR	4781480	Symbol	egg		4781469						
ANR	4781481	Function	emit_syscall	25:0:450:799							
ANR	4781482	FunctionDef	"emit_syscall (REgg * egg , int num)"		4781481	0					
ANR	4781483	CompoundStatement		25:46:496:799	4781481	0					
ANR	4781484	IdentifierDeclStatement	int svc = 0 ;	26:1:499:510	4781481	0	True				
ANR	4781485	IdentifierDecl	svc = 0		4781481	0					
ANR	4781486	IdentifierDeclType	int		4781481	0					
ANR	4781487	Identifier	svc		4781481	1					
ANR	4781488	AssignmentExpression	svc = 0		4781481	2		=			
ANR	4781489	Identifier	svc		4781481	0					
ANR	4781490	PrimaryExpression	0		4781481	1					
ANR	4781491	SwitchStatement	switch ( egg -> os )		4781481	1					
ANR	4781492	Condition	egg -> os	27:9:521:527	4781481	0	True				
ANR	4781493	PtrMemberAccess	egg -> os		4781481	0					
ANR	4781494	Identifier	egg		4781481	0					
ANR	4781495	Identifier	os		4781481	1					
ANR	4781496	CompoundStatement		3:18:33:33	4781481	1					
ANR	4781497	Label	case R_EGG_OS_DARWIN :	28:1:533:553	4781481	0	True				
ANR	4781498	Identifier	R_EGG_OS_DARWIN		4781481	0					
ANR	4781499	Label	case R_EGG_OS_OSX :	29:1:556:573	4781481	1	True				
ANR	4781500	Identifier	R_EGG_OS_OSX		4781481	0					
ANR	4781501	Label	case R_EGG_OS_IOS :	30:1:576:593	4781481	2	True				
ANR	4781502	Identifier	R_EGG_OS_IOS		4781481	0					
ANR	4781503	Label	case R_EGG_OS_MACOS :	31:1:596:615	4781481	3	True				
ANR	4781504	Identifier	R_EGG_OS_MACOS		4781481	0					
ANR	4781505	ExpressionStatement	svc = 0x80	32:2:619:629	4781481	4	True				
ANR	4781506	AssignmentExpression	svc = 0x80		4781481	0		=			
ANR	4781507	Identifier	svc		4781481	0					
ANR	4781508	PrimaryExpression	0x80		4781481	1					
ANR	4781509	BreakStatement	break ;	33:2:633:638	4781481	5	True				
ANR	4781510	Label	case R_EGG_OS_WATCHOS :	34:1:641:662	4781481	6	True				
ANR	4781511	Identifier	R_EGG_OS_WATCHOS		4781481	0					
ANR	4781512	ExpressionStatement	svc = 0x8000	35:2:666:678	4781481	7	True				
ANR	4781513	AssignmentExpression	svc = 0x8000		4781481	0		=			
ANR	4781514	Identifier	svc		4781481	0					
ANR	4781515	PrimaryExpression	0x8000		4781481	1					
ANR	4781516	BreakStatement	break ;	36:2:682:687	4781481	8	True				
ANR	4781517	Label	case R_EGG_OS_LINUX :	37:1:690:709	4781481	9	True				
ANR	4781518	Identifier	R_EGG_OS_LINUX		4781481	0					
ANR	4781519	ExpressionStatement	svc = 0	38:2:713:720	4781481	10	True				
ANR	4781520	AssignmentExpression	svc = 0		4781481	0		=			
ANR	4781521	Identifier	svc		4781481	0					
ANR	4781522	PrimaryExpression	0		4781481	1					
ANR	4781523	BreakStatement	break ;	39:2:724:729	4781481	11	True				
ANR	4781524	Statement	return	41:1:735:740	4781481	2	True				
ANR	4781525	Statement	r_str_newf	41:8:742:751	4781481	3	True				
ANR	4781526	Statement	(	41:19:753:753	4781481	4	True				
ANR	4781527	Statement	""": mov """	41:20:754:761	4781481	5	True				
ANR	4781528	Statement	R_AX	41:28:762:765	4781481	6	True				
ANR	4781529	Statement	""", `.arg`\\n: svc 0x%x\\n"""	41:33:767:790	4781481	7	True				
ANR	4781530	Statement	","	41:57:791:791	4781481	8	True				
ANR	4781531	Statement	svc	41:59:793:795	4781481	9	True				
ANR	4781532	Statement	)	41:62:796:796	4781481	10	True				
ANR	4781533	ExpressionStatement		41:63:797:797	4781481	11	True				
ANR	4781534	ReturnType	static char *		4781481	1					
ANR	4781535	Identifier	emit_syscall		4781481	2					
ANR	4781536	ParameterList	"REgg * egg , int num"		4781481	3					
ANR	4781537	Parameter	REgg * egg	25:26:476:484	4781481	0	True				
ANR	4781538	ParameterType	REgg *		4781481	0					
ANR	4781539	Identifier	egg		4781481	1					
ANR	4781540	Parameter	int num	25:37:487:493	4781481	1	True				
ANR	4781541	ParameterType	int		4781481	0					
ANR	4781542	Identifier	num		4781481	1					
ANR	4781543	CFGEntryNode	ENTRY		4781481		True				
ANR	4781544	CFGExitNode	EXIT		4781481		True				
ANR	4781545	Symbol	* egg		4781481						
ANR	4781546	Symbol	svc		4781481						
ANR	4781547	Symbol	egg		4781481						
ANR	4781548	Symbol	egg -> os		4781481						
ANR	4781549	Symbol	num		4781481						
ANR	4781550	Function	emit_frame	44:0:802:1060							
ANR	4781551	FunctionDef	"emit_frame (REgg * egg , int sz)"		4781550	0					
ANR	4781552	CompoundStatement		44:42:844:1060	4781550	0					
ANR	4781553	ExpressionStatement	"r_egg_printf ( egg , ""  push {fp,lr}\\n"" )"	45:1:847:885	4781550	0	True				
ANR	4781554	CallExpression	"r_egg_printf ( egg , ""  push {fp,lr}\\n"" )"		4781550	0					
ANR	4781555	Callee	r_egg_printf		4781550	0					
ANR	4781556	Identifier	r_egg_printf		4781550	0					
ANR	4781557	ArgumentList	egg		4781550	1					
ANR	4781558	Argument	egg		4781550	0					
ANR	4781559	Identifier	egg		4781550	0					
ANR	4781560	Argument	"""  push {fp,lr}\\n"""		4781550	1					
ANR	4781561	PrimaryExpression	"""  push {fp,lr}\\n"""		4781550	0					
ANR	4781562	IfStatement	if ( sz > 0 )		4781550	1					
ANR	4781563	Condition	sz > 0	46:5:892:897	4781550	0	True				
ANR	4781564	RelationalExpression	sz > 0		4781550	0		>			
ANR	4781565	Identifier	sz		4781550	0					
ANR	4781566	PrimaryExpression	0		4781550	1					
ANR	4781567	CompoundStatement		3:13:55:55	4781550	1					
ANR	4781568	Statement	r_egg_printf	47:2:904:915	4781550	0	True				
ANR	4781569	Statement	(	47:15:917:917	4781550	1	True				
ANR	4781570	Statement	egg	47:16:918:920	4781550	2	True				
ANR	4781571	Statement	","	47:19:921:921	4781550	3	True				
ANR	4781572	Statement	"""  add fp, sp, $4\\n"""	49:3:957:976	4781550	4	True				
ANR	4781573	Statement	"""  sub sp, %d\\n"""	50:3:1002:1017	4781550	5	True				
ANR	4781574	Statement	","	50:19:1018:1018	4781550	6	True				
ANR	4781575	Statement	sz	50:21:1020:1021	4781550	7	True				
ANR	4781576	Statement	)	50:23:1022:1022	4781550	8	True				
ANR	4781577	ExpressionStatement		50:24:1023:1023	4781550	9	True				
ANR	4781578	ReturnType	static void		4781550	1					
ANR	4781579	Identifier	emit_frame		4781550	2					
ANR	4781580	ParameterList	"REgg * egg , int sz"		4781550	3					
ANR	4781581	Parameter	REgg * egg	44:23:825:833	4781550	0	True				
ANR	4781582	ParameterType	REgg *		4781550	0					
ANR	4781583	Identifier	egg		4781550	1					
ANR	4781584	Parameter	int sz	44:34:836:841	4781550	1	True				
ANR	4781585	ParameterType	int		4781550	0					
ANR	4781586	Identifier	sz		4781550	1					
ANR	4781587	CFGEntryNode	ENTRY		4781550		True				
ANR	4781588	CFGExitNode	EXIT		4781550		True				
ANR	4781589	Symbol	egg		4781550						
ANR	4781590	Symbol	sz		4781550						
ANR	4781591	Function	emit_frame_end	54:0:1063:1246							
ANR	4781592	FunctionDef	"emit_frame_end (REgg * egg , int sz , int ctx)"		4781591	0					
ANR	4781593	CompoundStatement		54:55:1118:1246	4781591	0					
ANR	4781594	IfStatement	if ( sz > 0 )		4781591	0					
ANR	4781595	Condition	sz > 0	55:5:1125:1130	4781591	0	True				
ANR	4781596	RelationalExpression	sz > 0		4781591	0		>			
ANR	4781597	Identifier	sz		4781591	0					
ANR	4781598	PrimaryExpression	0		4781591	1					
ANR	4781599	CompoundStatement		2:13:14:14	4781591	1					
ANR	4781600	ExpressionStatement	"r_egg_printf ( egg , ""  add sp, fp, %d\\n"" , sz )"	56:2:1137:1181	4781591	0	True				
ANR	4781601	CallExpression	"r_egg_printf ( egg , ""  add sp, fp, %d\\n"" , sz )"		4781591	0					
ANR	4781602	Callee	r_egg_printf		4781591	0					
ANR	4781603	Identifier	r_egg_printf		4781591	0					
ANR	4781604	ArgumentList	egg		4781591	1					
ANR	4781605	Argument	egg		4781591	0					
ANR	4781606	Identifier	egg		4781591	0					
ANR	4781607	Argument	"""  add sp, fp, %d\\n"""		4781591	1					
ANR	4781608	PrimaryExpression	"""  add sp, fp, %d\\n"""		4781591	0					
ANR	4781609	Argument	sz		4781591	2					
ANR	4781610	Identifier	sz		4781591	0					
ANR	4781611	IfStatement	if ( ctx > 0 )		4781591	1					
ANR	4781612	Condition	ctx > 0	58:5:1191:1197	4781591	0	True				
ANR	4781613	RelationalExpression	ctx > 0		4781591	0		>			
ANR	4781614	Identifier	ctx		4781591	0					
ANR	4781615	PrimaryExpression	0		4781591	1					
ANR	4781616	CompoundStatement		5:14:81:81	4781591	1					
ANR	4781617	ExpressionStatement	"r_egg_printf ( egg , ""  pop {fp,pc}\\n"" )"	59:2:1204:1241	4781591	0	True				
ANR	4781618	CallExpression	"r_egg_printf ( egg , ""  pop {fp,pc}\\n"" )"		4781591	0					
ANR	4781619	Callee	r_egg_printf		4781591	0					
ANR	4781620	Identifier	r_egg_printf		4781591	0					
ANR	4781621	ArgumentList	egg		4781591	1					
ANR	4781622	Argument	egg		4781591	0					
ANR	4781623	Identifier	egg		4781591	0					
ANR	4781624	Argument	"""  pop {fp,pc}\\n"""		4781591	1					
ANR	4781625	PrimaryExpression	"""  pop {fp,pc}\\n"""		4781591	0					
ANR	4781626	ReturnType	static void		4781591	1					
ANR	4781627	Identifier	emit_frame_end		4781591	2					
ANR	4781628	ParameterList	"REgg * egg , int sz , int ctx"		4781591	3					
ANR	4781629	Parameter	REgg * egg	54:27:1090:1098	4781591	0	True				
ANR	4781630	ParameterType	REgg *		4781591	0					
ANR	4781631	Identifier	egg		4781591	1					
ANR	4781632	Parameter	int sz	54:38:1101:1106	4781591	1	True				
ANR	4781633	ParameterType	int		4781591	0					
ANR	4781634	Identifier	sz		4781591	1					
ANR	4781635	Parameter	int ctx	54:46:1109:1115	4781591	2	True				
ANR	4781636	ParameterType	int		4781591	0					
ANR	4781637	Identifier	ctx		4781591	1					
ANR	4781638	CFGEntryNode	ENTRY		4781591		True				
ANR	4781639	CFGExitNode	EXIT		4781591		True				
ANR	4781640	Symbol	egg		4781591						
ANR	4781641	Symbol	ctx		4781591						
ANR	4781642	Symbol	sz		4781591						
ANR	4781643	Function	emit_comment	63:0:1249:1451							
ANR	4781644	FunctionDef	"emit_comment (REgg * egg , const char * fmt)"		4781643	0					
ANR	4781645	CompoundStatement		63:58:1307:1451	4781643	0					
ANR	4781646	IdentifierDeclStatement	va_list ap ;	64:1:1310:1320	4781643	0	True				
ANR	4781647	IdentifierDecl	ap		4781643	0					
ANR	4781648	IdentifierDeclType	va_list		4781643	0					
ANR	4781649	Identifier	ap		4781643	1					
ANR	4781650	IdentifierDeclStatement	char buf [ 1024 ] ;	65:1:1323:1337	4781643	1	True				
ANR	4781651	IdentifierDecl	buf [ 1024 ]		4781643	0					
ANR	4781652	IdentifierDeclType	char [ 1024 ]		4781643	0					
ANR	4781653	Identifier	buf		4781643	1					
ANR	4781654	PrimaryExpression	1024		4781643	2					
ANR	4781655	ExpressionStatement	"va_start ( ap , fmt )"	66:1:1340:1358	4781643	2	True				
ANR	4781656	CallExpression	"va_start ( ap , fmt )"		4781643	0					
ANR	4781657	Callee	va_start		4781643	0					
ANR	4781658	Identifier	va_start		4781643	0					
ANR	4781659	ArgumentList	ap		4781643	1					
ANR	4781660	Argument	ap		4781643	0					
ANR	4781661	Identifier	ap		4781643	0					
ANR	4781662	Argument	fmt		4781643	1					
ANR	4781663	Identifier	fmt		4781643	0					
ANR	4781664	ExpressionStatement	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	67:1:1361:1399	4781643	3	True				
ANR	4781665	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		4781643	0					
ANR	4781666	Callee	vsnprintf		4781643	0					
ANR	4781667	Identifier	vsnprintf		4781643	0					
ANR	4781668	ArgumentList	buf		4781643	1					
ANR	4781669	Argument	buf		4781643	0					
ANR	4781670	Identifier	buf		4781643	0					
ANR	4781671	Argument	sizeof ( buf )		4781643	1					
ANR	4781672	SizeofExpression	sizeof ( buf )		4781643	0					
ANR	4781673	Sizeof	sizeof		4781643	0					
ANR	4781674	SizeofOperand	buf		4781643	1					
ANR	4781675	Argument	fmt		4781643	2					
ANR	4781676	Identifier	fmt		4781643	0					
ANR	4781677	Argument	ap		4781643	3					
ANR	4781678	Identifier	ap		4781643	0					
ANR	4781679	ExpressionStatement	"r_egg_printf ( egg , ""# %s\\n"" , buf )"	68:1:1402:1435	4781643	4	True				
ANR	4781680	CallExpression	"r_egg_printf ( egg , ""# %s\\n"" , buf )"		4781643	0					
ANR	4781681	Callee	r_egg_printf		4781643	0					
ANR	4781682	Identifier	r_egg_printf		4781643	0					
ANR	4781683	ArgumentList	egg		4781643	1					
ANR	4781684	Argument	egg		4781643	0					
ANR	4781685	Identifier	egg		4781643	0					
ANR	4781686	Argument	"""# %s\\n"""		4781643	1					
ANR	4781687	PrimaryExpression	"""# %s\\n"""		4781643	0					
ANR	4781688	Argument	buf		4781643	2					
ANR	4781689	Identifier	buf		4781643	0					
ANR	4781690	ExpressionStatement	va_end ( ap )	69:1:1438:1449	4781643	5	True				
ANR	4781691	CallExpression	va_end ( ap )		4781643	0					
ANR	4781692	Callee	va_end		4781643	0					
ANR	4781693	Identifier	va_end		4781643	0					
ANR	4781694	ArgumentList	ap		4781643	1					
ANR	4781695	Argument	ap		4781643	0					
ANR	4781696	Identifier	ap		4781643	0					
ANR	4781697	ReturnType	static void		4781643	1					
ANR	4781698	Identifier	emit_comment		4781643	2					
ANR	4781699	ParameterList	"REgg * egg , const char * fmt"		4781643	3					
ANR	4781700	Parameter	REgg * egg	63:25:1274:1282	4781643	0	True				
ANR	4781701	ParameterType	REgg *		4781643	0					
ANR	4781702	Identifier	egg		4781643	1					
ANR	4781703	Parameter	const char * fmt	63:36:1285:1299	4781643	1	True				
ANR	4781704	ParameterType	const char *		4781643	0					
ANR	4781705	Identifier	fmt		4781643	1					
ANR	4781706	CFGEntryNode	ENTRY		4781643		True				
ANR	4781707	CFGExitNode	EXIT		4781643		True				
ANR	4781708	Symbol	buf		4781643						
ANR	4781709	Symbol	egg		4781643						
ANR	4781710	Symbol	fmt		4781643						
ANR	4781711	Symbol	ap		4781643						
ANR	4781712	Function	emit_equ	72:0:1454:1574							
ANR	4781713	FunctionDef	"emit_equ (REgg * egg , const char * key , const char * value)"		4781712	0					
ANR	4781714	CompoundStatement		72:68:1522:1574	4781712	0					
ANR	4781715	ExpressionStatement	"r_egg_printf ( egg , "".equ %s, %s\\n"" , key , value )"	73:1:1525:1572	4781712	0	True				
ANR	4781716	CallExpression	"r_egg_printf ( egg , "".equ %s, %s\\n"" , key , value )"		4781712	0					
ANR	4781717	Callee	r_egg_printf		4781712	0					
ANR	4781718	Identifier	r_egg_printf		4781712	0					
ANR	4781719	ArgumentList	egg		4781712	1					
ANR	4781720	Argument	egg		4781712	0					
ANR	4781721	Identifier	egg		4781712	0					
ANR	4781722	Argument	""".equ %s, %s\\n"""		4781712	1					
ANR	4781723	PrimaryExpression	""".equ %s, %s\\n"""		4781712	0					
ANR	4781724	Argument	key		4781712	2					
ANR	4781725	Identifier	key		4781712	0					
ANR	4781726	Argument	value		4781712	3					
ANR	4781727	Identifier	value		4781712	0					
ANR	4781728	ReturnType	static void		4781712	1					
ANR	4781729	Identifier	emit_equ		4781712	2					
ANR	4781730	ParameterList	"REgg * egg , const char * key , const char * value"		4781712	3					
ANR	4781731	Parameter	REgg * egg	72:21:1475:1483	4781712	0	True				
ANR	4781732	ParameterType	REgg *		4781712	0					
ANR	4781733	Identifier	egg		4781712	1					
ANR	4781734	Parameter	const char * key	72:32:1486:1500	4781712	1	True				
ANR	4781735	ParameterType	const char *		4781712	0					
ANR	4781736	Identifier	key		4781712	1					
ANR	4781737	Parameter	const char * value	72:49:1503:1519	4781712	2	True				
ANR	4781738	ParameterType	const char *		4781712	0					
ANR	4781739	Identifier	value		4781712	1					
ANR	4781740	CFGEntryNode	ENTRY		4781712		True				
ANR	4781741	CFGExitNode	EXIT		4781712		True				
ANR	4781742	Symbol	egg		4781712						
ANR	4781743	Symbol	value		4781712						
ANR	4781744	Symbol	key		4781712						
ANR	4781745	Function	emit_syscall_args	76:0:1577:1771							
ANR	4781746	FunctionDef	"emit_syscall_args (REgg * egg , int nargs)"		4781745	0					
ANR	4781747	CompoundStatement		76:52:1629:1771	4781745	0					
ANR	4781748	IdentifierDeclStatement	"int j , k ;"	77:1:1632:1640	4781745	0	True				
ANR	4781749	IdentifierDecl	j		4781745	0					
ANR	4781750	IdentifierDeclType	int		4781745	0					
ANR	4781751	Identifier	j		4781745	1					
ANR	4781752	IdentifierDecl	k		4781745	1					
ANR	4781753	IdentifierDeclType	int		4781745	0					
ANR	4781754	Identifier	k		4781745	1					
ANR	4781755	ForStatement	for ( j = 0 ; j < nargs ; j ++ )		4781745	1					
ANR	4781756	ForInit	j = 0 ;	78:6:1648:1653	4781745	0	True				
ANR	4781757	AssignmentExpression	j = 0		4781745	0		=			
ANR	4781758	Identifier	j		4781745	0					
ANR	4781759	PrimaryExpression	0		4781745	1					
ANR	4781760	Condition	j < nargs	78:13:1655:1663	4781745	1	True				
ANR	4781761	RelationalExpression	j < nargs		4781745	0		<			
ANR	4781762	Identifier	j		4781745	0					
ANR	4781763	Identifier	nargs		4781745	1					
ANR	4781764	PostIncDecOperationExpression	j ++	78:24:1666:1668	4781745	2	True				
ANR	4781765	Identifier	j		4781745	0					
ANR	4781766	IncDec	++		4781745	1					
ANR	4781767	CompoundStatement		3:29:41:41	4781745	3					
ANR	4781768	ExpressionStatement	k = j * R_SZ	79:2:1675:1687	4781745	0	True				
ANR	4781769	AssignmentExpression	k = j * R_SZ		4781745	0		=			
ANR	4781770	Identifier	k		4781745	0					
ANR	4781771	MultiplicativeExpression	j * R_SZ		4781745	1		*			
ANR	4781772	Identifier	j		4781745	0					
ANR	4781773	Identifier	R_SZ		4781745	1					
ANR	4781774	ExpressionStatement	"r_egg_printf ( egg , ""  ldr %s, [sp, %d]\\n"" , regs [ j + 1 ] , k ? k + 4 : k + 8 )"	80:2:1691:1766	4781745	1	True				
ANR	4781775	CallExpression	"r_egg_printf ( egg , ""  ldr %s, [sp, %d]\\n"" , regs [ j + 1 ] , k ? k + 4 : k + 8 )"		4781745	0					
ANR	4781776	Callee	r_egg_printf		4781745	0					
ANR	4781777	Identifier	r_egg_printf		4781745	0					
ANR	4781778	ArgumentList	egg		4781745	1					
ANR	4781779	Argument	egg		4781745	0					
ANR	4781780	Identifier	egg		4781745	0					
ANR	4781781	Argument	"""  ldr %s, [sp, %d]\\n"""		4781745	1					
ANR	4781782	PrimaryExpression	"""  ldr %s, [sp, %d]\\n"""		4781745	0					
ANR	4781783	Argument	regs [ j + 1 ]		4781745	2					
ANR	4781784	ArrayIndexing	regs [ j + 1 ]		4781745	0					
ANR	4781785	Identifier	regs		4781745	0					
ANR	4781786	AdditiveExpression	j + 1		4781745	1		+			
ANR	4781787	Identifier	j		4781745	0					
ANR	4781788	PrimaryExpression	1		4781745	1					
ANR	4781789	Argument	k ? k + 4 : k + 8		4781745	3					
ANR	4781790	ConditionalExpression	k ? k + 4 : k + 8		4781745	0					
ANR	4781791	Condition	k		4781745	0					
ANR	4781792	Identifier	k		4781745	0					
ANR	4781793	AdditiveExpression	k + 4		4781745	1		+			
ANR	4781794	Identifier	k		4781745	0					
ANR	4781795	PrimaryExpression	4		4781745	1					
ANR	4781796	AdditiveExpression	k + 8		4781745	2		+			
ANR	4781797	Identifier	k		4781745	0					
ANR	4781798	PrimaryExpression	8		4781745	1					
ANR	4781799	ReturnType	static void		4781745	1					
ANR	4781800	Identifier	emit_syscall_args		4781745	2					
ANR	4781801	ParameterList	"REgg * egg , int nargs"		4781745	3					
ANR	4781802	Parameter	REgg * egg	76:30:1607:1615	4781745	0	True				
ANR	4781803	ParameterType	REgg *		4781745	0					
ANR	4781804	Identifier	egg		4781745	1					
ANR	4781805	Parameter	int nargs	76:41:1618:1626	4781745	1	True				
ANR	4781806	ParameterType	int		4781745	0					
ANR	4781807	Identifier	nargs		4781745	1					
ANR	4781808	CFGEntryNode	ENTRY		4781745		True				
ANR	4781809	CFGExitNode	EXIT		4781745		True				
ANR	4781810	Symbol	nargs		4781745						
ANR	4781811	Symbol	R_SZ		4781745						
ANR	4781812	Symbol	egg		4781745						
ANR	4781813	Symbol	* j		4781745						
ANR	4781814	Symbol	* regs		4781745						
ANR	4781815	Symbol	j		4781745						
ANR	4781816	Symbol	regs		4781745						
ANR	4781817	Symbol	k		4781745						
ANR	4781818	Function	emit_set_string	85:0:1774:2524							
ANR	4781819	FunctionDef	"emit_set_string (REgg * egg , const char * dstvar , const char * str , int j)"		4781818	0					
ANR	4781820	CompoundStatement		85:83:1857:2524	4781818	0					
ANR	4781821	IdentifierDeclStatement	"int rest , off = 0 ;"	86:1:1860:1877	4781818	0	True				
ANR	4781822	IdentifierDecl	rest		4781818	0					
ANR	4781823	IdentifierDeclType	int		4781818	0					
ANR	4781824	Identifier	rest		4781818	1					
ANR	4781825	IdentifierDecl	off = 0		4781818	1					
ANR	4781826	IdentifierDeclType	int		4781818	0					
ANR	4781827	Identifier	off		4781818	1					
ANR	4781828	AssignmentExpression	off = 0		4781818	2		=			
ANR	4781829	Identifier	off		4781818	0					
ANR	4781830	PrimaryExpression	0		4781818	1					
ANR	4781831	ExpressionStatement	off = strlen ( str ) + 1	87:1:1880:1902	4781818	1	True				
ANR	4781832	AssignmentExpression	off = strlen ( str ) + 1		4781818	0		=			
ANR	4781833	Identifier	off		4781818	0					
ANR	4781834	AdditiveExpression	strlen ( str ) + 1		4781818	1		+			
ANR	4781835	CallExpression	strlen ( str )		4781818	0					
ANR	4781836	Callee	strlen		4781818	0					
ANR	4781837	Identifier	strlen		4781818	0					
ANR	4781838	ArgumentList	str		4781818	1					
ANR	4781839	Argument	str		4781818	0					
ANR	4781840	Identifier	str		4781818	0					
ANR	4781841	PrimaryExpression	1		4781818	1					
ANR	4781842	ExpressionStatement	rest = ( off % 4 )	88:1:1905:1921	4781818	2	True				
ANR	4781843	AssignmentExpression	rest = ( off % 4 )		4781818	0		=			
ANR	4781844	Identifier	rest		4781818	0					
ANR	4781845	MultiplicativeExpression	off % 4		4781818	1		%			
ANR	4781846	Identifier	off		4781818	0					
ANR	4781847	PrimaryExpression	4		4781818	1					
ANR	4781848	IfStatement	if ( rest )		4781818	3					
ANR	4781849	Condition	rest	89:5:1928:1931	4781818	0	True				
ANR	4781850	Identifier	rest		4781818	0					
ANR	4781851	CompoundStatement		5:11:76:76	4781818	1					
ANR	4781852	ExpressionStatement	rest = 4 - rest	90:2:1938:1953	4781818	0	True				
ANR	4781853	AssignmentExpression	rest = 4 - rest		4781818	0		=			
ANR	4781854	Identifier	rest		4781818	0					
ANR	4781855	AdditiveExpression	4 - rest		4781818	1		-			
ANR	4781856	PrimaryExpression	4		4781818	0					
ANR	4781857	Identifier	rest		4781818	1					
ANR	4781858	ExpressionStatement	off += rest - 4	92:1:1959:1974	4781818	4	True				
ANR	4781859	AssignmentExpression	off += rest - 4		4781818	0		+=			
ANR	4781860	Identifier	off		4781818	0					
ANR	4781861	AdditiveExpression	rest - 4		4781818	1		-			
ANR	4781862	Identifier	rest		4781818	0					
ANR	4781863	PrimaryExpression	4		4781818	1					
ANR	4781864	ExpressionStatement	"r_egg_printf ( egg , ""  add pc, %d\\n"" , ( off ) )"	93:1:1977:2020	4781818	5	True				
ANR	4781865	CallExpression	"r_egg_printf ( egg , ""  add pc, %d\\n"" , ( off ) )"		4781818	0					
ANR	4781866	Callee	r_egg_printf		4781818	0					
ANR	4781867	Identifier	r_egg_printf		4781818	0					
ANR	4781868	ArgumentList	egg		4781818	1					
ANR	4781869	Argument	egg		4781818	0					
ANR	4781870	Identifier	egg		4781818	0					
ANR	4781871	Argument	"""  add pc, %d\\n"""		4781818	1					
ANR	4781872	PrimaryExpression	"""  add pc, %d\\n"""		4781818	0					
ANR	4781873	Argument	off		4781818	2					
ANR	4781874	Identifier	off		4781818	0					
ANR	4781875	ExpressionStatement	"r_egg_printf ( egg , "".string \\""%s\\""\\n"" , str = r_str_escape ( str ) )"	97:1:2140:2204	4781818	6	True				
ANR	4781876	CallExpression	"r_egg_printf ( egg , "".string \\""%s\\""\\n"" , str = r_str_escape ( str ) )"		4781818	0					
ANR	4781877	Callee	r_egg_printf		4781818	0					
ANR	4781878	Identifier	r_egg_printf		4781818	0					
ANR	4781879	ArgumentList	egg		4781818	1					
ANR	4781880	Argument	egg		4781818	0					
ANR	4781881	Identifier	egg		4781818	0					
ANR	4781882	Argument	""".string \\""%s\\""\\n"""		4781818	1					
ANR	4781883	PrimaryExpression	""".string \\""%s\\""\\n"""		4781818	0					
ANR	4781884	Argument	str = r_str_escape ( str )		4781818	2					
ANR	4781885	AssignmentExpression	str = r_str_escape ( str )		4781818	0		=			
ANR	4781886	Identifier	str		4781818	0					
ANR	4781887	CallExpression	r_str_escape ( str )		4781818	1					
ANR	4781888	Callee	r_str_escape		4781818	0					
ANR	4781889	Identifier	r_str_escape		4781818	0					
ANR	4781890	ArgumentList	str		4781818	1					
ANR	4781891	Argument	str		4781818	0					
ANR	4781892	Identifier	str		4781818	0					
ANR	4781893	ExpressionStatement	free ( ( char * ) str )	98:1:2207:2226	4781818	7	True				
ANR	4781894	CallExpression	free ( ( char * ) str )		4781818	0					
ANR	4781895	Callee	free		4781818	0					
ANR	4781896	Identifier	free		4781818	0					
ANR	4781897	ArgumentList	( char * ) str		4781818	1					
ANR	4781898	Argument	( char * ) str		4781818	0					
ANR	4781899	CastExpression	( char * ) str		4781818	0					
ANR	4781900	CastTarget	char *		4781818	0					
ANR	4781901	Identifier	str		4781818	1					
ANR	4781902	IfStatement	if ( rest )		4781818	8					
ANR	4781903	Condition	rest	99:5:2233:2236	4781818	0	True				
ANR	4781904	Identifier	rest		4781818	0					
ANR	4781905	CompoundStatement		15:11:381:381	4781818	1					
ANR	4781906	ExpressionStatement	"r_egg_printf ( egg , "".fill %d, 1, 0\\n"" , ( rest ) )"	100:2:2243:2289	4781818	0	True				
ANR	4781907	CallExpression	"r_egg_printf ( egg , "".fill %d, 1, 0\\n"" , ( rest ) )"		4781818	0					
ANR	4781908	Callee	r_egg_printf		4781818	0					
ANR	4781909	Identifier	r_egg_printf		4781818	0					
ANR	4781910	ArgumentList	egg		4781818	1					
ANR	4781911	Argument	egg		4781818	0					
ANR	4781912	Identifier	egg		4781818	0					
ANR	4781913	Argument	""".fill %d, 1, 0\\n"""		4781818	1					
ANR	4781914	PrimaryExpression	""".fill %d, 1, 0\\n"""		4781818	0					
ANR	4781915	Argument	rest		4781818	2					
ANR	4781916	Identifier	rest		4781818	0					
ANR	4781917	ExpressionStatement	"r_egg_printf ( egg , ""  sub r0, pc, %d\\n"" , off + 12 )"	102:1:2295:2345	4781818	9	True				
ANR	4781918	CallExpression	"r_egg_printf ( egg , ""  sub r0, pc, %d\\n"" , off + 12 )"		4781818	0					
ANR	4781919	Callee	r_egg_printf		4781818	0					
ANR	4781920	Identifier	r_egg_printf		4781818	0					
ANR	4781921	ArgumentList	egg		4781818	1					
ANR	4781922	Argument	egg		4781818	0					
ANR	4781923	Identifier	egg		4781818	0					
ANR	4781924	Argument	"""  sub r0, pc, %d\\n"""		4781818	1					
ANR	4781925	PrimaryExpression	"""  sub r0, pc, %d\\n"""		4781818	0					
ANR	4781926	Argument	off + 12		4781818	2					
ANR	4781927	AdditiveExpression	off + 12		4781818	0		+			
ANR	4781928	Identifier	off		4781818	0					
ANR	4781929	PrimaryExpression	12		4781818	1					
ANR	4781930	CompoundStatement		20:2:494:546	4781818	10					
ANR	4781931	IdentifierDeclStatement	"char str [ 32 ] , * p = r_egg_mkvar ( egg , str , dstvar , 0 ) ;"	104:2:2352:2404	4781818	0	True				
ANR	4781932	IdentifierDecl	str [ 32 ]		4781818	0					
ANR	4781933	IdentifierDeclType	char [ 32 ]		4781818	0					
ANR	4781934	Identifier	str		4781818	1					
ANR	4781935	PrimaryExpression	32		4781818	2					
ANR	4781936	IdentifierDecl	"* p = r_egg_mkvar ( egg , str , dstvar , 0 )"		4781818	1					
ANR	4781937	IdentifierDeclType	char *		4781818	0					
ANR	4781938	Identifier	p		4781818	1					
ANR	4781939	AssignmentExpression	"* p = r_egg_mkvar ( egg , str , dstvar , 0 )"		4781818	2		=			
ANR	4781940	Identifier	p		4781818	0					
ANR	4781941	CallExpression	"r_egg_mkvar ( egg , str , dstvar , 0 )"		4781818	1					
ANR	4781942	Callee	r_egg_mkvar		4781818	0					
ANR	4781943	Identifier	r_egg_mkvar		4781818	0					
ANR	4781944	ArgumentList	egg		4781818	1					
ANR	4781945	Argument	egg		4781818	0					
ANR	4781946	Identifier	egg		4781818	0					
ANR	4781947	Argument	str		4781818	1					
ANR	4781948	Identifier	str		4781818	0					
ANR	4781949	Argument	dstvar		4781818	2					
ANR	4781950	Identifier	dstvar		4781818	0					
ANR	4781951	Argument	0		4781818	3					
ANR	4781952	PrimaryExpression	0		4781818	0					
ANR	4781953	ExpressionStatement	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , p )"	106:2:2466:2507	4781818	1	True				
ANR	4781954	CallExpression	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , p )"		4781818	0					
ANR	4781955	Callee	r_egg_printf		4781818	0					
ANR	4781956	Identifier	r_egg_printf		4781818	0					
ANR	4781957	ArgumentList	egg		4781818	1					
ANR	4781958	Argument	egg		4781818	0					
ANR	4781959	Identifier	egg		4781818	0					
ANR	4781960	Argument	"""  str r0, [%s]\\n"""		4781818	1					
ANR	4781961	PrimaryExpression	"""  str r0, [%s]\\n"""		4781818	0					
ANR	4781962	Argument	p		4781818	2					
ANR	4781963	Identifier	p		4781818	0					
ANR	4781964	ExpressionStatement	free ( p )	107:2:2511:2519	4781818	2	True				
ANR	4781965	CallExpression	free ( p )		4781818	0					
ANR	4781966	Callee	free		4781818	0					
ANR	4781967	Identifier	free		4781818	0					
ANR	4781968	ArgumentList	p		4781818	1					
ANR	4781969	Argument	p		4781818	0					
ANR	4781970	Identifier	p		4781818	0					
ANR	4781971	ReturnType	static void		4781818	1					
ANR	4781972	Identifier	emit_set_string		4781818	2					
ANR	4781973	ParameterList	"REgg * egg , const char * dstvar , const char * str , int j"		4781818	3					
ANR	4781974	Parameter	REgg * egg	85:28:1802:1810	4781818	0	True				
ANR	4781975	ParameterType	REgg *		4781818	0					
ANR	4781976	Identifier	egg		4781818	1					
ANR	4781977	Parameter	const char * dstvar	85:39:1813:1830	4781818	1	True				
ANR	4781978	ParameterType	const char *		4781818	0					
ANR	4781979	Identifier	dstvar		4781818	1					
ANR	4781980	Parameter	const char * str	85:59:1833:1847	4781818	2	True				
ANR	4781981	ParameterType	const char *		4781818	0					
ANR	4781982	Identifier	str		4781818	1					
ANR	4781983	Parameter	int j	85:76:1850:1854	4781818	3	True				
ANR	4781984	ParameterType	int		4781818	0					
ANR	4781985	Identifier	j		4781818	1					
ANR	4781986	CFGEntryNode	ENTRY		4781818		True				
ANR	4781987	CFGExitNode	EXIT		4781818		True				
ANR	4781988	Symbol	str		4781818						
ANR	4781989	Symbol	r_str_escape		4781818						
ANR	4781990	Symbol	r_egg_mkvar		4781818						
ANR	4781991	Symbol	p		4781818						
ANR	4781992	Symbol	rest		4781818						
ANR	4781993	Symbol	strlen		4781818						
ANR	4781994	Symbol	egg		4781818						
ANR	4781995	Symbol	j		4781818						
ANR	4781996	Symbol	dstvar		4781818						
ANR	4781997	Symbol	off		4781818						
ANR	4781998	Function	emit_jmp	111:0:2527:2729							
ANR	4781999	FunctionDef	"emit_jmp (REgg * egg , const char * str , int atr)"		4781998	0					
ANR	4782000	CompoundStatement		111:58:2585:2729	4781998	0					
ANR	4782001	IfStatement	if ( atr )		4781998	0					
ANR	4782002	Condition	atr	112:5:2592:2594	4781998	0	True				
ANR	4782003	Identifier	atr		4781998	0					
ANR	4782004	CompoundStatement		2:10:11:11	4781998	1					
ANR	4782005	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"	113:2:2601:2640	4781998	0	True				
ANR	4782006	CallExpression	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"		4781998	0					
ANR	4782007	Callee	r_egg_printf		4781998	0					
ANR	4782008	Identifier	r_egg_printf		4781998	0					
ANR	4782009	ArgumentList	egg		4781998	1					
ANR	4782010	Argument	egg		4781998	0					
ANR	4782011	Identifier	egg		4781998	0					
ANR	4782012	Argument	"""  ldr r0, %s"""		4781998	1					
ANR	4782013	PrimaryExpression	"""  ldr r0, %s"""		4781998	0					
ANR	4782014	Argument	str		4781998	2					
ANR	4782015	Identifier	str		4781998	0					
ANR	4782016	ExpressionStatement	"r_egg_printf ( egg , ""  bx r0\\n"" )"	114:2:2644:2675	4781998	1	True				
ANR	4782017	CallExpression	"r_egg_printf ( egg , ""  bx r0\\n"" )"		4781998	0					
ANR	4782018	Callee	r_egg_printf		4781998	0					
ANR	4782019	Identifier	r_egg_printf		4781998	0					
ANR	4782020	ArgumentList	egg		4781998	1					
ANR	4782021	Argument	egg		4781998	0					
ANR	4782022	Identifier	egg		4781998	0					
ANR	4782023	Argument	"""  bx r0\\n"""		4781998	1					
ANR	4782024	PrimaryExpression	"""  bx r0\\n"""		4781998	0					
ANR	4782025	ElseStatement	else		4781998	0					
ANR	4782026	CompoundStatement		5:8:99:99	4781998	0					
ANR	4782027	ExpressionStatement	"r_egg_printf ( egg , ""  b %s\\n"" , str )"	116:2:2689:2724	4781998	0	True				
ANR	4782028	CallExpression	"r_egg_printf ( egg , ""  b %s\\n"" , str )"		4781998	0					
ANR	4782029	Callee	r_egg_printf		4781998	0					
ANR	4782030	Identifier	r_egg_printf		4781998	0					
ANR	4782031	ArgumentList	egg		4781998	1					
ANR	4782032	Argument	egg		4781998	0					
ANR	4782033	Identifier	egg		4781998	0					
ANR	4782034	Argument	"""  b %s\\n"""		4781998	1					
ANR	4782035	PrimaryExpression	"""  b %s\\n"""		4781998	0					
ANR	4782036	Argument	str		4781998	2					
ANR	4782037	Identifier	str		4781998	0					
ANR	4782038	ReturnType	static void		4781998	1					
ANR	4782039	Identifier	emit_jmp		4781998	2					
ANR	4782040	ParameterList	"REgg * egg , const char * str , int atr"		4781998	3					
ANR	4782041	Parameter	REgg * egg	111:21:2548:2556	4781998	0	True				
ANR	4782042	ParameterType	REgg *		4781998	0					
ANR	4782043	Identifier	egg		4781998	1					
ANR	4782044	Parameter	const char * str	111:32:2559:2573	4781998	1	True				
ANR	4782045	ParameterType	const char *		4781998	0					
ANR	4782046	Identifier	str		4781998	1					
ANR	4782047	Parameter	int atr	111:49:2576:2582	4781998	2	True				
ANR	4782048	ParameterType	int		4781998	0					
ANR	4782049	Identifier	atr		4781998	1					
ANR	4782050	CFGEntryNode	ENTRY		4781998		True				
ANR	4782051	CFGExitNode	EXIT		4781998		True				
ANR	4782052	Symbol	str		4781998						
ANR	4782053	Symbol	egg		4781998						
ANR	4782054	Symbol	atr		4781998						
ANR	4782055	Function	emit_call	120:0:2732:3146							
ANR	4782056	FunctionDef	"emit_call (REgg * egg , const char * str , int atr)"		4782055	0					
ANR	4782057	CompoundStatement		120:59:2791:3146	4782055	0					
ANR	4782058	IdentifierDeclStatement	int i ;	121:1:2794:2799	4782055	0	True				
ANR	4782059	IdentifierDecl	i		4782055	0					
ANR	4782060	IdentifierDeclType	int		4782055	0					
ANR	4782061	Identifier	i		4782055	1					
ANR	4782062	ForStatement	for ( i = 0 ; i < lastarg ; i ++ )		4782055	1					
ANR	4782063	ForInit	i = 0 ;	123:6:2876:2881	4782055	0	True				
ANR	4782064	AssignmentExpression	i = 0		4782055	0		=			
ANR	4782065	Identifier	i		4782055	0					
ANR	4782066	PrimaryExpression	0		4782055	1					
ANR	4782067	Condition	i < lastarg	123:13:2883:2893	4782055	1	True				
ANR	4782068	RelationalExpression	i < lastarg		4782055	0		<			
ANR	4782069	Identifier	i		4782055	0					
ANR	4782070	Identifier	lastarg		4782055	1					
ANR	4782071	PostIncDecOperationExpression	i ++	123:26:2896:2898	4782055	2	True				
ANR	4782072	Identifier	i		4782055	0					
ANR	4782073	IncDec	++		4782055	1					
ANR	4782074	CompoundStatement		4:31:109:109	4782055	3					
ANR	4782075	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r%d, [%s]\\n"" , lastarg - 1 - i , lastargs [ i ] )"	124:2:2905:2974	4782055	0	True				
ANR	4782076	CallExpression	"r_egg_printf ( egg , ""  ldr r%d, [%s]\\n"" , lastarg - 1 - i , lastargs [ i ] )"		4782055	0					
ANR	4782077	Callee	r_egg_printf		4782055	0					
ANR	4782078	Identifier	r_egg_printf		4782055	0					
ANR	4782079	ArgumentList	egg		4782055	1					
ANR	4782080	Argument	egg		4782055	0					
ANR	4782081	Identifier	egg		4782055	0					
ANR	4782082	Argument	"""  ldr r%d, [%s]\\n"""		4782055	1					
ANR	4782083	PrimaryExpression	"""  ldr r%d, [%s]\\n"""		4782055	0					
ANR	4782084	Argument	lastarg - 1 - i		4782055	2					
ANR	4782085	AdditiveExpression	lastarg - 1 - i		4782055	0		-			
ANR	4782086	Identifier	lastarg		4782055	0					
ANR	4782087	AdditiveExpression	1 - i		4782055	1		-			
ANR	4782088	PrimaryExpression	1		4782055	0					
ANR	4782089	Identifier	i		4782055	1					
ANR	4782090	Argument	lastargs [ i ]		4782055	3					
ANR	4782091	ArrayIndexing	lastargs [ i ]		4782055	0					
ANR	4782092	Identifier	lastargs		4782055	0					
ANR	4782093	Identifier	i		4782055	1					
ANR	4782094	ExpressionStatement	lastargs [ i ] [ 0 ] = 0	125:2:2978:2996	4782055	1	True				
ANR	4782095	AssignmentExpression	lastargs [ i ] [ 0 ] = 0		4782055	0		=			
ANR	4782096	ArrayIndexing	lastargs [ i ] [ 0 ]		4782055	0					
ANR	4782097	ArrayIndexing	lastargs [ i ]		4782055	0					
ANR	4782098	Identifier	lastargs		4782055	0					
ANR	4782099	Identifier	i		4782055	1					
ANR	4782100	PrimaryExpression	0		4782055	1					
ANR	4782101	PrimaryExpression	0		4782055	1					
ANR	4782102	IfStatement	if ( atr )		4782055	2					
ANR	4782103	Condition	atr	128:5:3007:3009	4782055	0	True				
ANR	4782104	Identifier	atr		4782055	0					
ANR	4782105	CompoundStatement		9:10:220:220	4782055	1					
ANR	4782106	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"	129:2:3016:3055	4782055	0	True				
ANR	4782107	CallExpression	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"		4782055	0					
ANR	4782108	Callee	r_egg_printf		4782055	0					
ANR	4782109	Identifier	r_egg_printf		4782055	0					
ANR	4782110	ArgumentList	egg		4782055	1					
ANR	4782111	Argument	egg		4782055	0					
ANR	4782112	Identifier	egg		4782055	0					
ANR	4782113	Argument	"""  ldr r0, %s"""		4782055	1					
ANR	4782114	PrimaryExpression	"""  ldr r0, %s"""		4782055	0					
ANR	4782115	Argument	str		4782055	2					
ANR	4782116	Identifier	str		4782055	0					
ANR	4782117	ExpressionStatement	"r_egg_printf ( egg , ""  blx r0\\n"" )"	130:2:3059:3091	4782055	1	True				
ANR	4782118	CallExpression	"r_egg_printf ( egg , ""  blx r0\\n"" )"		4782055	0					
ANR	4782119	Callee	r_egg_printf		4782055	0					
ANR	4782120	Identifier	r_egg_printf		4782055	0					
ANR	4782121	ArgumentList	egg		4782055	1					
ANR	4782122	Argument	egg		4782055	0					
ANR	4782123	Identifier	egg		4782055	0					
ANR	4782124	Argument	"""  blx r0\\n"""		4782055	1					
ANR	4782125	PrimaryExpression	"""  blx r0\\n"""		4782055	0					
ANR	4782126	ElseStatement	else		4782055	0					
ANR	4782127	CompoundStatement		12:8:309:309	4782055	0					
ANR	4782128	ExpressionStatement	"r_egg_printf ( egg , ""  bl %s\\n"" , str )"	132:2:3105:3141	4782055	0	True				
ANR	4782129	CallExpression	"r_egg_printf ( egg , ""  bl %s\\n"" , str )"		4782055	0					
ANR	4782130	Callee	r_egg_printf		4782055	0					
ANR	4782131	Identifier	r_egg_printf		4782055	0					
ANR	4782132	ArgumentList	egg		4782055	1					
ANR	4782133	Argument	egg		4782055	0					
ANR	4782134	Identifier	egg		4782055	0					
ANR	4782135	Argument	"""  bl %s\\n"""		4782055	1					
ANR	4782136	PrimaryExpression	"""  bl %s\\n"""		4782055	0					
ANR	4782137	Argument	str		4782055	2					
ANR	4782138	Identifier	str		4782055	0					
ANR	4782139	ReturnType	static void		4782055	1					
ANR	4782140	Identifier	emit_call		4782055	2					
ANR	4782141	ParameterList	"REgg * egg , const char * str , int atr"		4782055	3					
ANR	4782142	Parameter	REgg * egg	120:22:2754:2762	4782055	0	True				
ANR	4782143	ParameterType	REgg *		4782055	0					
ANR	4782144	Identifier	egg		4782055	1					
ANR	4782145	Parameter	const char * str	120:33:2765:2779	4782055	1	True				
ANR	4782146	ParameterType	const char *		4782055	0					
ANR	4782147	Identifier	str		4782055	1					
ANR	4782148	Parameter	int atr	120:50:2782:2788	4782055	2	True				
ANR	4782149	ParameterType	int		4782055	0					
ANR	4782150	Identifier	atr		4782055	1					
ANR	4782151	CFGEntryNode	ENTRY		4782055		True				
ANR	4782152	CFGExitNode	EXIT		4782055		True				
ANR	4782153	Symbol	str		4782055						
ANR	4782154	Symbol	* * lastargs		4782055						
ANR	4782155	Symbol	lastarg		4782055						
ANR	4782156	Symbol	* * i		4782055						
ANR	4782157	Symbol	* i		4782055						
ANR	4782158	Symbol	egg		4782055						
ANR	4782159	Symbol	i		4782055						
ANR	4782160	Symbol	lastargs		4782055						
ANR	4782161	Symbol	* lastargs		4782055						
ANR	4782162	Symbol	atr		4782055						
ANR	4782163	Function	emit_arg	136:0:3149:4009							
ANR	4782164	FunctionDef	"emit_arg (REgg * egg , int xs , int num , const char * str)"		4782163	0					
ANR	4782165	CompoundStatement		136:66:3215:4009	4782163	0					
ANR	4782166	IdentifierDeclStatement	int d = atoi ( str ) ;	137:1:3218:3236	4782163	0	True				
ANR	4782167	IdentifierDecl	d = atoi ( str )		4782163	0					
ANR	4782168	IdentifierDeclType	int		4782163	0					
ANR	4782169	Identifier	d		4782163	1					
ANR	4782170	AssignmentExpression	d = atoi ( str )		4782163	2		=			
ANR	4782171	Identifier	d		4782163	0					
ANR	4782172	CallExpression	atoi ( str )		4782163	1					
ANR	4782173	Callee	atoi		4782163	0					
ANR	4782174	Identifier	atoi		4782163	0					
ANR	4782175	ArgumentList	str		4782163	1					
ANR	4782176	Argument	str		4782163	0					
ANR	4782177	Identifier	str		4782163	0					
ANR	4782178	IfStatement	if ( ! attsyntax && ( * str == '$' ) )		4782163	1					
ANR	4782179	Condition	! attsyntax && ( * str == '$' )	138:5:3243:3269	4782163	0	True				
ANR	4782180	AndExpression	! attsyntax && ( * str == '$' )		4782163	0		&&			
ANR	4782181	UnaryOperationExpression	! attsyntax		4782163	0					
ANR	4782182	UnaryOperator	!		4782163	0					
ANR	4782183	Identifier	attsyntax		4782163	1					
ANR	4782184	EqualityExpression	* str == '$'		4782163	1		==			
ANR	4782185	UnaryOperationExpression	* str		4782163	0					
ANR	4782186	UnaryOperator	*		4782163	0					
ANR	4782187	Identifier	str		4782163	1					
ANR	4782188	PrimaryExpression	'$'		4782163	1					
ANR	4782189	CompoundStatement		3:34:56:56	4782163	1					
ANR	4782190	ExpressionStatement	str ++	139:2:3276:3281	4782163	0	True				
ANR	4782191	PostIncDecOperationExpression	str ++		4782163	0					
ANR	4782192	Identifier	str		4782163	0					
ANR	4782193	IncDec	++		4782163	1					
ANR	4782194	ExpressionStatement	lastarg = num	141:1:3287:3300	4782163	2	True				
ANR	4782195	AssignmentExpression	lastarg = num		4782163	0		=			
ANR	4782196	Identifier	lastarg		4782163	0					
ANR	4782197	Identifier	num		4782163	1					
ANR	4782198	SwitchStatement	switch ( xs )		4782163	3					
ANR	4782199	Condition	xs	142:9:3311:3312	4782163	0	True				
ANR	4782200	Identifier	xs		4782163	0					
ANR	4782201	CompoundStatement		7:13:99:99	4782163	1					
ANR	4782202	Label	case 0 :	143:1:3318:3324	4782163	0	True				
ANR	4782203	IfStatement	"if ( strchr ( str , ',' ) )"		4782163	1					
ANR	4782204	Condition	"strchr ( str , ',' )"	144:6:3332:3348	4782163	0	True				
ANR	4782205	CallExpression	"strchr ( str , ',' )"		4782163	0					
ANR	4782206	Callee	strchr		4782163	0					
ANR	4782207	Identifier	strchr		4782163	0					
ANR	4782208	ArgumentList	str		4782163	1					
ANR	4782209	Argument	str		4782163	0					
ANR	4782210	Identifier	str		4782163	0					
ANR	4782211	Argument	"','"		4782163	1					
ANR	4782212	PrimaryExpression	"','"		4782163	0					
ANR	4782213	CompoundStatement		9:25:135:135	4782163	1					
ANR	4782214	ExpressionStatement	"strncpy ( lastargs [ num - 1 ] , str , sizeof ( lastargs [ 0 ] ) - 1 )"	146:3:3408:3465	4782163	0	True				
ANR	4782215	CallExpression	"strncpy ( lastargs [ num - 1 ] , str , sizeof ( lastargs [ 0 ] ) - 1 )"		4782163	0					
ANR	4782216	Callee	strncpy		4782163	0					
ANR	4782217	Identifier	strncpy		4782163	0					
ANR	4782218	ArgumentList	lastargs [ num - 1 ]		4782163	1					
ANR	4782219	Argument	lastargs [ num - 1 ]		4782163	0					
ANR	4782220	ArrayIndexing	lastargs [ num - 1 ]		4782163	0					
ANR	4782221	Identifier	lastargs		4782163	0					
ANR	4782222	AdditiveExpression	num - 1		4782163	1		-			
ANR	4782223	Identifier	num		4782163	0					
ANR	4782224	PrimaryExpression	1		4782163	1					
ANR	4782225	Argument	str		4782163	1					
ANR	4782226	Identifier	str		4782163	0					
ANR	4782227	Argument	sizeof ( lastargs [ 0 ] ) - 1		4782163	2					
ANR	4782228	AdditiveExpression	sizeof ( lastargs [ 0 ] ) - 1		4782163	0		-			
ANR	4782229	SizeofExpression	sizeof ( lastargs [ 0 ] )		4782163	0					
ANR	4782230	Sizeof	sizeof		4782163	0					
ANR	4782231	ArrayIndexing	lastargs [ 0 ]		4782163	1					
ANR	4782232	Identifier	lastargs		4782163	0					
ANR	4782233	PrimaryExpression	0		4782163	1					
ANR	4782234	PrimaryExpression	1		4782163	1					
ANR	4782235	ElseStatement	else		4782163	0					
ANR	4782236	CompoundStatement		12:9:260:260	4782163	0					
ANR	4782237	IfStatement	if ( ! atoi ( str ) )		4782163	0					
ANR	4782238	Condition	! atoi ( str )	148:7:3485:3495	4782163	0	True				
ANR	4782239	UnaryOperationExpression	! atoi ( str )		4782163	0					
ANR	4782240	UnaryOperator	!		4782163	0					
ANR	4782241	CallExpression	atoi ( str )		4782163	1					
ANR	4782242	Callee	atoi		4782163	0					
ANR	4782243	Identifier	atoi		4782163	0					
ANR	4782244	ArgumentList	str		4782163	1					
ANR	4782245	Argument	str		4782163	0					
ANR	4782246	Identifier	str		4782163	0					
ANR	4782247	CompoundStatement		13:20:282:282	4782163	1					
ANR	4782248	ExpressionStatement	"eprintf ( ""WARNING: probably a bug?\\n"" )"	149:4:3504:3542	4782163	0	True				
ANR	4782249	CallExpression	"eprintf ( ""WARNING: probably a bug?\\n"" )"		4782163	0					
ANR	4782250	Callee	eprintf		4782163	0					
ANR	4782251	Identifier	eprintf		4782163	0					
ANR	4782252	ArgumentList	"""WARNING: probably a bug?\\n"""		4782163	1					
ANR	4782253	Argument	"""WARNING: probably a bug?\\n"""		4782163	0					
ANR	4782254	PrimaryExpression	"""WARNING: probably a bug?\\n"""		4782163	0					
ANR	4782255	ExpressionStatement	"r_egg_printf ( egg , ""  mov r0, %s\\n"" , str )"	151:3:3552:3593	4782163	1	True				
ANR	4782256	CallExpression	"r_egg_printf ( egg , ""  mov r0, %s\\n"" , str )"		4782163	0					
ANR	4782257	Callee	r_egg_printf		4782163	0					
ANR	4782258	Identifier	r_egg_printf		4782163	0					
ANR	4782259	ArgumentList	egg		4782163	1					
ANR	4782260	Argument	egg		4782163	0					
ANR	4782261	Identifier	egg		4782163	0					
ANR	4782262	Argument	"""  mov r0, %s\\n"""		4782163	1					
ANR	4782263	PrimaryExpression	"""  mov r0, %s\\n"""		4782163	0					
ANR	4782264	Argument	str		4782163	2					
ANR	4782265	Identifier	str		4782163	0					
ANR	4782266	ExpressionStatement	"snprintf ( lastargs [ num - 1 ] , sizeof ( lastargs [ 0 ] ) , ""sp, %d"" , 8 + ( num * 4 ) )"	152:3:3598:3673	4782163	2	True				
ANR	4782267	CallExpression	"snprintf ( lastargs [ num - 1 ] , sizeof ( lastargs [ 0 ] ) , ""sp, %d"" , 8 + ( num * 4 ) )"		4782163	0					
ANR	4782268	Callee	snprintf		4782163	0					
ANR	4782269	Identifier	snprintf		4782163	0					
ANR	4782270	ArgumentList	lastargs [ num - 1 ]		4782163	1					
ANR	4782271	Argument	lastargs [ num - 1 ]		4782163	0					
ANR	4782272	ArrayIndexing	lastargs [ num - 1 ]		4782163	0					
ANR	4782273	Identifier	lastargs		4782163	0					
ANR	4782274	AdditiveExpression	num - 1		4782163	1		-			
ANR	4782275	Identifier	num		4782163	0					
ANR	4782276	PrimaryExpression	1		4782163	1					
ANR	4782277	Argument	sizeof ( lastargs [ 0 ] )		4782163	1					
ANR	4782278	SizeofExpression	sizeof ( lastargs [ 0 ] )		4782163	0					
ANR	4782279	Sizeof	sizeof		4782163	0					
ANR	4782280	ArrayIndexing	lastargs [ 0 ]		4782163	1					
ANR	4782281	Identifier	lastargs		4782163	0					
ANR	4782282	PrimaryExpression	0		4782163	1					
ANR	4782283	Argument	"""sp, %d"""		4782163	2					
ANR	4782284	PrimaryExpression	"""sp, %d"""		4782163	0					
ANR	4782285	Argument	8 + ( num * 4 )		4782163	3					
ANR	4782286	AdditiveExpression	8 + ( num * 4 )		4782163	0		+			
ANR	4782287	PrimaryExpression	8		4782163	0					
ANR	4782288	MultiplicativeExpression	num * 4		4782163	1		*			
ANR	4782289	Identifier	num		4782163	0					
ANR	4782290	PrimaryExpression	4		4782163	1					
ANR	4782291	ExpressionStatement	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , lastargs [ num - 1 ] )"	153:3:3678:3735	4782163	3	True				
ANR	4782292	CallExpression	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , lastargs [ num - 1 ] )"		4782163	0					
ANR	4782293	Callee	r_egg_printf		4782163	0					
ANR	4782294	Identifier	r_egg_printf		4782163	0					
ANR	4782295	ArgumentList	egg		4782163	1					
ANR	4782296	Argument	egg		4782163	0					
ANR	4782297	Identifier	egg		4782163	0					
ANR	4782298	Argument	"""  str r0, [%s]\\n"""		4782163	1					
ANR	4782299	PrimaryExpression	"""  str r0, [%s]\\n"""		4782163	0					
ANR	4782300	Argument	lastargs [ num - 1 ]		4782163	2					
ANR	4782301	ArrayIndexing	lastargs [ num - 1 ]		4782163	0					
ANR	4782302	Identifier	lastargs		4782163	0					
ANR	4782303	AdditiveExpression	num - 1		4782163	1		-			
ANR	4782304	Identifier	num		4782163	0					
ANR	4782305	PrimaryExpression	1		4782163	1					
ANR	4782306	BreakStatement	break ;	155:2:3743:3748	4782163	2	True				
ANR	4782307	Label	case '*' :	156:1:3751:3759	4782163	3	True				
ANR	4782308	ExpressionStatement	"r_egg_printf ( egg , ""  push {%s}\\n"" , str )"	157:2:3763:3803	4782163	4	True				
ANR	4782309	CallExpression	"r_egg_printf ( egg , ""  push {%s}\\n"" , str )"		4782163	0					
ANR	4782310	Callee	r_egg_printf		4782163	0					
ANR	4782311	Identifier	r_egg_printf		4782163	0					
ANR	4782312	ArgumentList	egg		4782163	1					
ANR	4782313	Argument	egg		4782163	0					
ANR	4782314	Identifier	egg		4782163	0					
ANR	4782315	Argument	"""  push {%s}\\n"""		4782163	1					
ANR	4782316	PrimaryExpression	"""  push {%s}\\n"""		4782163	0					
ANR	4782317	Argument	str		4782163	2					
ANR	4782318	Identifier	str		4782163	0					
ANR	4782319	BreakStatement	break ;	158:2:3807:3812	4782163	5	True				
ANR	4782320	Label	case '&' :	159:1:3815:3823	4782163	6	True				
ANR	4782321	IfStatement	if ( d )		4782163	7					
ANR	4782322	Condition	d	160:6:3831:3831	4782163	0	True				
ANR	4782323	Identifier	d		4782163	0					
ANR	4782324	CompoundStatement		25:9:618:618	4782163	1					
ANR	4782325	Statement	r_egg_printf	161:3:3839:3850	4782163	0	True				
ANR	4782326	Statement	(	161:16:3852:3852	4782163	1	True				
ANR	4782327	Statement	egg	161:17:3853:3855	4782163	2	True				
ANR	4782328	Statement	","	161:20:3856:3856	4782163	3	True				
ANR	4782329	Statement	"""  add """	161:22:3858:3865	4782163	4	True				
ANR	4782330	Statement	R_BP	161:30:3866:3869	4782163	5	True				
ANR	4782331	Statement	""", %d\\n"""	161:35:3871:3878	4782163	6	True				
ANR	4782332	Statement	","	161:43:3879:3879	4782163	7	True				
ANR	4782333	Statement	d	161:45:3881:3881	4782163	8	True				
ANR	4782334	Statement	)	161:46:3882:3882	4782163	9	True				
ANR	4782335	ExpressionStatement		161:47:3883:3883	4782163	10	True				
ANR	4782336	Statement	r_egg_printf	163:2:3891:3902	4782163	8	True				
ANR	4782337	Statement	(	163:15:3904:3904	4782163	9	True				
ANR	4782338	Statement	egg	163:16:3905:3907	4782163	10	True				
ANR	4782339	Statement	","	163:19:3908:3908	4782163	11	True				
ANR	4782340	Statement	"""  push {"""	163:21:3910:3919	4782163	12	True				
ANR	4782341	Statement	R_BP	163:31:3920:3923	4782163	13	True				
ANR	4782342	Statement	"""}\\n"""	163:36:3925:3929	4782163	14	True				
ANR	4782343	Statement	)	163:41:3930:3930	4782163	15	True				
ANR	4782344	ExpressionStatement		163:42:3931:3931	4782163	16	True				
ANR	4782345	IfStatement	if ( d )		4782163	17					
ANR	4782346	Condition	d	164:6:3939:3939	4782163	0	True				
ANR	4782347	Identifier	d		4782163	0					
ANR	4782348	CompoundStatement		29:9:726:726	4782163	1					
ANR	4782349	Statement	r_egg_printf	165:3:3947:3958	4782163	0	True				
ANR	4782350	Statement	(	165:16:3960:3960	4782163	1	True				
ANR	4782351	Statement	egg	165:17:3961:3963	4782163	2	True				
ANR	4782352	Statement	","	165:20:3964:3964	4782163	3	True				
ANR	4782353	Statement	"""  sub """	165:22:3966:3973	4782163	4	True				
ANR	4782354	Statement	R_BP	165:30:3974:3977	4782163	5	True				
ANR	4782355	Statement	""", %d\\n"""	165:35:3979:3986	4782163	6	True				
ANR	4782356	Statement	","	165:43:3987:3987	4782163	7	True				
ANR	4782357	Statement	d	165:45:3989:3989	4782163	8	True				
ANR	4782358	Statement	)	165:46:3990:3990	4782163	9	True				
ANR	4782359	ExpressionStatement		165:47:3991:3991	4782163	10	True				
ANR	4782360	BreakStatement	break ;	167:2:3999:4004	4782163	18	True				
ANR	4782361	ReturnType	static void		4782163	1					
ANR	4782362	Identifier	emit_arg		4782163	2					
ANR	4782363	ParameterList	"REgg * egg , int xs , int num , const char * str"		4782163	3					
ANR	4782364	Parameter	REgg * egg	136:21:3170:3178	4782163	0	True				
ANR	4782365	ParameterType	REgg *		4782163	0					
ANR	4782366	Identifier	egg		4782163	1					
ANR	4782367	Parameter	int xs	136:32:3181:3186	4782163	1	True				
ANR	4782368	ParameterType	int		4782163	0					
ANR	4782369	Identifier	xs		4782163	1					
ANR	4782370	Parameter	int num	136:40:3189:3195	4782163	2	True				
ANR	4782371	ParameterType	int		4782163	0					
ANR	4782372	Identifier	num		4782163	1					
ANR	4782373	Parameter	const char * str	136:49:3198:3212	4782163	3	True				
ANR	4782374	ParameterType	const char *		4782163	0					
ANR	4782375	Identifier	str		4782163	1					
ANR	4782376	CFGEntryNode	ENTRY		4782163		True				
ANR	4782377	CFGExitNode	EXIT		4782163		True				
ANR	4782378	Symbol	atoi		4782163						
ANR	4782379	Symbol	egg		4782163						
ANR	4782380	Symbol	d		4782163						
ANR	4782381	Symbol	num		4782163						
ANR	4782382	Symbol	attsyntax		4782163						
ANR	4782383	Symbol	strchr		4782163						
ANR	4782384	Symbol	* lastargs		4782163						
ANR	4782385	Symbol	str		4782163						
ANR	4782386	Symbol	* num		4782163						
ANR	4782387	Symbol	lastarg		4782163						
ANR	4782388	Symbol	lastargs		4782163						
ANR	4782389	Symbol	xs		4782163						
ANR	4782390	Symbol	* str		4782163						
ANR	4782391	Function	emit_get_result	171:0:4012:4114							
ANR	4782392	FunctionDef	"emit_get_result (REgg * egg , const char * ocn)"		4782391	0					
ANR	4782393	CompoundStatement		171:56:4068:4114	4782391	0					
ANR	4782394	ExpressionStatement	"r_egg_printf ( egg , ""  mov %s, r0\\n"" , ocn )"	172:1:4071:4112	4782391	0	True				
ANR	4782395	CallExpression	"r_egg_printf ( egg , ""  mov %s, r0\\n"" , ocn )"		4782391	0					
ANR	4782396	Callee	r_egg_printf		4782391	0					
ANR	4782397	Identifier	r_egg_printf		4782391	0					
ANR	4782398	ArgumentList	egg		4782391	1					
ANR	4782399	Argument	egg		4782391	0					
ANR	4782400	Identifier	egg		4782391	0					
ANR	4782401	Argument	"""  mov %s, r0\\n"""		4782391	1					
ANR	4782402	PrimaryExpression	"""  mov %s, r0\\n"""		4782391	0					
ANR	4782403	Argument	ocn		4782391	2					
ANR	4782404	Identifier	ocn		4782391	0					
ANR	4782405	ReturnType	static void		4782391	1					
ANR	4782406	Identifier	emit_get_result		4782391	2					
ANR	4782407	ParameterList	"REgg * egg , const char * ocn"		4782391	3					
ANR	4782408	Parameter	REgg * egg	171:28:4040:4048	4782391	0	True				
ANR	4782409	ParameterType	REgg *		4782391	0					
ANR	4782410	Identifier	egg		4782391	1					
ANR	4782411	Parameter	const char * ocn	171:39:4051:4065	4782391	1	True				
ANR	4782412	ParameterType	const char *		4782391	0					
ANR	4782413	Identifier	ocn		4782391	1					
ANR	4782414	CFGEntryNode	ENTRY		4782391		True				
ANR	4782415	CFGExitNode	EXIT		4782391		True				
ANR	4782416	Symbol	egg		4782391						
ANR	4782417	Symbol	ocn		4782391						
ANR	4782418	Function	emit_restore_stack	175:0:4117:4282							
ANR	4782419	FunctionDef	"emit_restore_stack (REgg * egg , int size)"		4782418	0					
ANR	4782420	CompoundStatement		175:52:4169:4282	4782418	0					
ANR	4782421	ReturnType	static void		4782418	1					
ANR	4782422	Identifier	emit_restore_stack		4782418	2					
ANR	4782423	ParameterList	"REgg * egg , int size"		4782418	3					
ANR	4782424	Parameter	REgg * egg	175:31:4148:4156	4782418	0	True				
ANR	4782425	ParameterType	REgg *		4782418	0					
ANR	4782426	Identifier	egg		4782418	1					
ANR	4782427	Parameter	int size	175:42:4159:4166	4782418	1	True				
ANR	4782428	ParameterType	int		4782418	0					
ANR	4782429	Identifier	size		4782418	1					
ANR	4782430	CFGEntryNode	ENTRY		4782418		True				
ANR	4782431	CFGExitNode	EXIT		4782418		True				
ANR	4782432	Symbol	egg		4782418						
ANR	4782433	Symbol	size		4782418						
ANR	4782434	Function	emit_get_while_end	180:0:4285:4437							
ANR	4782435	FunctionDef	"emit_get_while_end (REgg * egg , char * str , const char * ctxpush , const char * label)"		4782434	0					
ANR	4782436	CompoundStatement		180:93:4378:4437	4782434	0					
ANR	4782437	ExpressionStatement	"sprintf ( str , ""  push {%s}\\n  b %s\\n"" , ctxpush , label )"	181:1:4381:4435	4782434	0	True				
ANR	4782438	CallExpression	"sprintf ( str , ""  push {%s}\\n  b %s\\n"" , ctxpush , label )"		4782434	0					
ANR	4782439	Callee	sprintf		4782434	0					
ANR	4782440	Identifier	sprintf		4782434	0					
ANR	4782441	ArgumentList	str		4782434	1					
ANR	4782442	Argument	str		4782434	0					
ANR	4782443	Identifier	str		4782434	0					
ANR	4782444	Argument	"""  push {%s}\\n  b %s\\n"""		4782434	1					
ANR	4782445	PrimaryExpression	"""  push {%s}\\n  b %s\\n"""		4782434	0					
ANR	4782446	Argument	ctxpush		4782434	2					
ANR	4782447	Identifier	ctxpush		4782434	0					
ANR	4782448	Argument	label		4782434	3					
ANR	4782449	Identifier	label		4782434	0					
ANR	4782450	ReturnType	static void		4782434	1					
ANR	4782451	Identifier	emit_get_while_end		4782434	2					
ANR	4782452	ParameterList	"REgg * egg , char * str , const char * ctxpush , const char * label"		4782434	3					
ANR	4782453	Parameter	REgg * egg	180:31:4316:4324	4782434	0	True				
ANR	4782454	ParameterType	REgg *		4782434	0					
ANR	4782455	Identifier	egg		4782434	1					
ANR	4782456	Parameter	char * str	180:42:4327:4335	4782434	1	True				
ANR	4782457	ParameterType	char *		4782434	0					
ANR	4782458	Identifier	str		4782434	1					
ANR	4782459	Parameter	const char * ctxpush	180:53:4338:4356	4782434	2	True				
ANR	4782460	ParameterType	const char *		4782434	0					
ANR	4782461	Identifier	ctxpush		4782434	1					
ANR	4782462	Parameter	const char * label	180:74:4359:4375	4782434	3	True				
ANR	4782463	ParameterType	const char *		4782434	0					
ANR	4782464	Identifier	label		4782434	1					
ANR	4782465	CFGEntryNode	ENTRY		4782434		True				
ANR	4782466	CFGExitNode	EXIT		4782434		True				
ANR	4782467	Symbol	str		4782434						
ANR	4782468	Symbol	egg		4782434						
ANR	4782469	Symbol	ctxpush		4782434						
ANR	4782470	Symbol	label		4782434						
ANR	4782471	Function	emit_while_end	184:0:4440:4638							
ANR	4782472	FunctionDef	"emit_while_end (REgg * egg , const char * labelback)"		4782471	0					
ANR	4782473	CompoundStatement		184:61:4501:4638	4782471	0					
ANR	4782474	Statement	r_egg_printf	185:1:4504:4515	4782471	0	True				
ANR	4782475	Statement	(	185:14:4517:4517	4782471	1	True				
ANR	4782476	Statement	egg	185:15:4518:4520	4782471	2	True				
ANR	4782477	Statement	","	185:18:4521:4521	4782471	3	True				
ANR	4782478	Statement	"""  pop """	186:2:4525:4532	4782471	4	True				
ANR	4782479	Statement	R_AX	186:10:4533:4536	4782471	5	True				
ANR	4782480	Statement	"""\\n"""	186:15:4538:4541	4782471	6	True				
ANR	4782481	Statement	"""  cmp """	187:2:4545:4552	4782471	7	True				
ANR	4782482	Statement	R_AX	187:10:4553:4556	4782471	8	True				
ANR	4782483	Statement	""", """	187:15:4558:4561	4782471	9	True				
ANR	4782484	Statement	R_AX	187:19:4562:4565	4782471	10	True				
ANR	4782485	Statement	"""\\n"""	187:24:4567:4570	4782471	11	True				
ANR	4782486	Statement	"""  beq %s\\n"""	188:2:4612:4623	4782471	12	True				
ANR	4782487	Statement	","	188:14:4624:4624	4782471	13	True				
ANR	4782488	Statement	labelback	188:16:4626:4634	4782471	14	True				
ANR	4782489	Statement	)	188:25:4635:4635	4782471	15	True				
ANR	4782490	ExpressionStatement		188:26:4636:4636	4782471	16	True				
ANR	4782491	ReturnType	static void		4782471	1					
ANR	4782492	Identifier	emit_while_end		4782471	2					
ANR	4782493	ParameterList	"REgg * egg , const char * labelback"		4782471	3					
ANR	4782494	Parameter	REgg * egg	184:27:4467:4475	4782471	0	True				
ANR	4782495	ParameterType	REgg *		4782471	0					
ANR	4782496	Identifier	egg		4782471	1					
ANR	4782497	Parameter	const char * labelback	184:38:4478:4498	4782471	1	True				
ANR	4782498	ParameterType	const char *		4782471	0					
ANR	4782499	Identifier	labelback		4782471	1					
ANR	4782500	CFGEntryNode	ENTRY		4782471		True				
ANR	4782501	CFGExitNode	EXIT		4782471		True				
ANR	4782502	Symbol	egg		4782471						
ANR	4782503	Symbol	labelback		4782471						
ANR	4782504	Function	emit_get_var	191:0:4641:4923							
ANR	4782505	FunctionDef	"emit_get_var (REgg * egg , int type , char * out , int idx)"		4782504	0					
ANR	4782506	CompoundStatement		191:66:4707:4923	4782504	0					
ANR	4782507	SwitchStatement	switch ( type )		4782504	0					
ANR	4782508	Condition	type	192:9:4718:4721	4782504	0	True				
ANR	4782509	Identifier	type		4782504	0					
ANR	4782510	CompoundStatement		2:15:16:16	4782504	1					
ANR	4782511	Label	case 0 :	193:1:4727:4733	4782504	0	True				
ANR	4782512	ExpressionStatement	"sprintf ( out , ""sp, %d"" , idx - 1 )"	193:9:4735:4767	4782504	1	True				
ANR	4782513	CallExpression	"sprintf ( out , ""sp, %d"" , idx - 1 )"		4782504	0					
ANR	4782514	Callee	sprintf		4782504	0					
ANR	4782515	Identifier	sprintf		4782504	0					
ANR	4782516	ArgumentList	out		4782504	1					
ANR	4782517	Argument	out		4782504	0					
ANR	4782518	Identifier	out		4782504	0					
ANR	4782519	Argument	"""sp, %d"""		4782504	1					
ANR	4782520	PrimaryExpression	"""sp, %d"""		4782504	0					
ANR	4782521	Argument	idx - 1		4782504	2					
ANR	4782522	AdditiveExpression	idx - 1		4782504	0		-			
ANR	4782523	Identifier	idx		4782504	0					
ANR	4782524	PrimaryExpression	1		4782504	1					
ANR	4782525	BreakStatement	break ;	193:43:4769:4774	4782504	2	True				
ANR	4782526	Label	case 1 :	194:1:4791:4797	4782504	3	True				
ANR	4782527	ExpressionStatement	"sprintf ( out , ""r%d"" , idx )"	194:9:4799:4824	4782504	4	True				
ANR	4782528	CallExpression	"sprintf ( out , ""r%d"" , idx )"		4782504	0					
ANR	4782529	Callee	sprintf		4782504	0					
ANR	4782530	Identifier	sprintf		4782504	0					
ANR	4782531	ArgumentList	out		4782504	1					
ANR	4782532	Argument	out		4782504	0					
ANR	4782533	Identifier	out		4782504	0					
ANR	4782534	Argument	"""r%d"""		4782504	1					
ANR	4782535	PrimaryExpression	"""r%d"""		4782504	0					
ANR	4782536	Argument	idx		4782504	2					
ANR	4782537	Identifier	idx		4782504	0					
ANR	4782538	BreakStatement	break ;	194:36:4826:4831	4782504	5	True				
ANR	4782539	ReturnType	static void		4782504	1					
ANR	4782540	Identifier	emit_get_var		4782504	2					
ANR	4782541	ParameterList	"REgg * egg , int type , char * out , int idx"		4782504	3					
ANR	4782542	Parameter	REgg * egg	191:25:4666:4674	4782504	0	True				
ANR	4782543	ParameterType	REgg *		4782504	0					
ANR	4782544	Identifier	egg		4782504	1					
ANR	4782545	Parameter	int type	191:36:4677:4684	4782504	1	True				
ANR	4782546	ParameterType	int		4782504	0					
ANR	4782547	Identifier	type		4782504	1					
ANR	4782548	Parameter	char * out	191:46:4687:4695	4782504	2	True				
ANR	4782549	ParameterType	char *		4782504	0					
ANR	4782550	Identifier	out		4782504	1					
ANR	4782551	Parameter	int idx	191:57:4698:4704	4782504	3	True				
ANR	4782552	ParameterType	int		4782504	0					
ANR	4782553	Identifier	idx		4782504	1					
ANR	4782554	CFGEntryNode	ENTRY		4782504		True				
ANR	4782555	CFGExitNode	EXIT		4782504		True				
ANR	4782556	Symbol	egg		4782504						
ANR	4782557	Symbol	type		4782504						
ANR	4782558	Symbol	idx		4782504						
ANR	4782559	Symbol	out		4782504						
ANR	4782560	Function	emit_trap	199:0:4926:4996							
ANR	4782561	FunctionDef	emit_trap (REgg * egg)		4782560	0					
ANR	4782562	CompoundStatement		199:33:4959:4996	4782560	0					
ANR	4782563	ExpressionStatement	"r_egg_printf ( egg , ""  udf 16\\n"" )"	200:1:4962:4994	4782560	0	True				
ANR	4782564	CallExpression	"r_egg_printf ( egg , ""  udf 16\\n"" )"		4782560	0					
ANR	4782565	Callee	r_egg_printf		4782560	0					
ANR	4782566	Identifier	r_egg_printf		4782560	0					
ANR	4782567	ArgumentList	egg		4782560	1					
ANR	4782568	Argument	egg		4782560	0					
ANR	4782569	Identifier	egg		4782560	0					
ANR	4782570	Argument	"""  udf 16\\n"""		4782560	1					
ANR	4782571	PrimaryExpression	"""  udf 16\\n"""		4782560	0					
ANR	4782572	ReturnType	static void		4782560	1					
ANR	4782573	Identifier	emit_trap		4782560	2					
ANR	4782574	ParameterList	REgg * egg		4782560	3					
ANR	4782575	Parameter	REgg * egg	199:22:4948:4956	4782560	0	True				
ANR	4782576	ParameterType	REgg *		4782560	0					
ANR	4782577	Identifier	egg		4782560	1					
ANR	4782578	CFGEntryNode	ENTRY		4782560		True				
ANR	4782579	CFGExitNode	EXIT		4782560		True				
ANR	4782580	Symbol	egg		4782560						
ANR	4782581	Function	emit_load_ptr	203:0:4999:5112							
ANR	4782582	FunctionDef	"emit_load_ptr (REgg * egg , const char * dst)"		4782581	0					
ANR	4782583	CompoundStatement		203:54:5053:5112	4782581	0					
ANR	4782584	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r0, [fp, %d]\\n"" , atoi ( dst ) )"	204:1:5056:5110	4782581	0	True				
ANR	4782585	CallExpression	"r_egg_printf ( egg , ""  ldr r0, [fp, %d]\\n"" , atoi ( dst ) )"		4782581	0					
ANR	4782586	Callee	r_egg_printf		4782581	0					
ANR	4782587	Identifier	r_egg_printf		4782581	0					
ANR	4782588	ArgumentList	egg		4782581	1					
ANR	4782589	Argument	egg		4782581	0					
ANR	4782590	Identifier	egg		4782581	0					
ANR	4782591	Argument	"""  ldr r0, [fp, %d]\\n"""		4782581	1					
ANR	4782592	PrimaryExpression	"""  ldr r0, [fp, %d]\\n"""		4782581	0					
ANR	4782593	Argument	atoi ( dst )		4782581	2					
ANR	4782594	CallExpression	atoi ( dst )		4782581	0					
ANR	4782595	Callee	atoi		4782581	0					
ANR	4782596	Identifier	atoi		4782581	0					
ANR	4782597	ArgumentList	dst		4782581	1					
ANR	4782598	Argument	dst		4782581	0					
ANR	4782599	Identifier	dst		4782581	0					
ANR	4782600	ReturnType	static void		4782581	1					
ANR	4782601	Identifier	emit_load_ptr		4782581	2					
ANR	4782602	ParameterList	"REgg * egg , const char * dst"		4782581	3					
ANR	4782603	Parameter	REgg * egg	203:26:5025:5033	4782581	0	True				
ANR	4782604	ParameterType	REgg *		4782581	0					
ANR	4782605	Identifier	egg		4782581	1					
ANR	4782606	Parameter	const char * dst	203:37:5036:5050	4782581	1	True				
ANR	4782607	ParameterType	const char *		4782581	0					
ANR	4782608	Identifier	dst		4782581	1					
ANR	4782609	CFGEntryNode	ENTRY		4782581		True				
ANR	4782610	CFGExitNode	EXIT		4782581		True				
ANR	4782611	Symbol	atoi		4782581						
ANR	4782612	Symbol	egg		4782581						
ANR	4782613	Symbol	dst		4782581						
ANR	4782614	Function	emit_branch	207:0:5115:5878							
ANR	4782615	FunctionDef	"emit_branch (REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst)"		4782614	0					
ANR	4782616	CompoundStatement		207:96:5211:5878	4782614	0					
ANR	4782617	IdentifierDeclStatement	"char * p , str [ 64 ] ;"	208:1:5214:5230	4782614	0	True				
ANR	4782618	IdentifierDecl	* p		4782614	0					
ANR	4782619	IdentifierDeclType	char *		4782614	0					
ANR	4782620	Identifier	p		4782614	1					
ANR	4782621	IdentifierDecl	str [ 64 ]		4782614	1					
ANR	4782622	IdentifierDeclType	char [ 64 ]		4782614	0					
ANR	4782623	Identifier	str		4782614	1					
ANR	4782624	PrimaryExpression	64		4782614	2					
ANR	4782625	IdentifierDeclStatement	char * arg = NULL ;	209:1:5233:5249	4782614	1	True				
ANR	4782626	IdentifierDecl	* arg = NULL		4782614	0					
ANR	4782627	IdentifierDeclType	char *		4782614	0					
ANR	4782628	Identifier	arg		4782614	1					
ANR	4782629	AssignmentExpression	* arg = NULL		4782614	2		=			
ANR	4782630	Identifier	NULL		4782614	0					
ANR	4782631	Identifier	NULL		4782614	1					
ANR	4782632	IdentifierDeclStatement	"char * op = ""beq"" ;"	210:1:5252:5268	4782614	2	True				
ANR	4782633	IdentifierDecl	"* op = ""beq"""		4782614	0					
ANR	4782634	IdentifierDeclType	char *		4782614	0					
ANR	4782635	Identifier	op		4782614	1					
ANR	4782636	AssignmentExpression	"* op = ""beq"""		4782614	2		=			
ANR	4782637	Identifier	op		4782614	0					
ANR	4782638	PrimaryExpression	"""beq"""		4782614	1					
ANR	4782639	IfStatement	if ( b )		4782614	3					
ANR	4782640	Condition	b	212:5:5329:5329	4782614	0	True				
ANR	4782641	Identifier	b		4782614	0					
ANR	4782642	CompoundStatement		6:8:120:120	4782614	1					
ANR	4782643	ExpressionStatement	* b = '\\0'	213:2:5336:5345	4782614	0	True				
ANR	4782644	AssignmentExpression	* b = '\\0'		4782614	0		=			
ANR	4782645	UnaryOperationExpression	* b		4782614	0					
ANR	4782646	UnaryOperator	*		4782614	0					
ANR	4782647	Identifier	b		4782614	1					
ANR	4782648	PrimaryExpression	'\\0'		4782614	1					
ANR	4782649	ExpressionStatement	"op = e ? ""bge"" : ""bgt"""	214:2:5349:5369	4782614	1	True				
ANR	4782650	AssignmentExpression	"op = e ? ""bge"" : ""bgt"""		4782614	0		=			
ANR	4782651	Identifier	op		4782614	0					
ANR	4782652	ConditionalExpression	"e ? ""bge"" : ""bgt"""		4782614	1					
ANR	4782653	Condition	e		4782614	0					
ANR	4782654	Identifier	e		4782614	0					
ANR	4782655	PrimaryExpression	"""bge"""		4782614	1					
ANR	4782656	PrimaryExpression	"""bgt"""		4782614	2					
ANR	4782657	ExpressionStatement	arg = b + 1	215:2:5373:5384	4782614	2	True				
ANR	4782658	AssignmentExpression	arg = b + 1		4782614	0		=			
ANR	4782659	Identifier	arg		4782614	0					
ANR	4782660	AdditiveExpression	b + 1		4782614	1		+			
ANR	4782661	Identifier	b		4782614	0					
ANR	4782662	PrimaryExpression	1		4782614	1					
ANR	4782663	ElseStatement	else		4782614	0					
ANR	4782664	IfStatement	if ( g )		4782614	0					
ANR	4782665	Condition	g	216:12:5398:5398	4782614	0	True				
ANR	4782666	Identifier	g		4782614	0					
ANR	4782667	CompoundStatement		10:15:189:189	4782614	1					
ANR	4782668	ExpressionStatement	* g = '\\0'	217:2:5405:5414	4782614	0	True				
ANR	4782669	AssignmentExpression	* g = '\\0'		4782614	0		=			
ANR	4782670	UnaryOperationExpression	* g		4782614	0					
ANR	4782671	UnaryOperator	*		4782614	0					
ANR	4782672	Identifier	g		4782614	1					
ANR	4782673	PrimaryExpression	'\\0'		4782614	1					
ANR	4782674	ExpressionStatement	"op = e ? ""ble"" : ""blt"""	218:2:5418:5438	4782614	1	True				
ANR	4782675	AssignmentExpression	"op = e ? ""ble"" : ""blt"""		4782614	0		=			
ANR	4782676	Identifier	op		4782614	0					
ANR	4782677	ConditionalExpression	"e ? ""ble"" : ""blt"""		4782614	1					
ANR	4782678	Condition	e		4782614	0					
ANR	4782679	Identifier	e		4782614	0					
ANR	4782680	PrimaryExpression	"""ble"""		4782614	1					
ANR	4782681	PrimaryExpression	"""blt"""		4782614	2					
ANR	4782682	ExpressionStatement	arg = g + 1	219:2:5442:5453	4782614	2	True				
ANR	4782683	AssignmentExpression	arg = g + 1		4782614	0		=			
ANR	4782684	Identifier	arg		4782614	0					
ANR	4782685	AdditiveExpression	g + 1		4782614	1		+			
ANR	4782686	Identifier	g		4782614	0					
ANR	4782687	PrimaryExpression	1		4782614	1					
ANR	4782688	IfStatement	if ( ! arg )		4782614	4					
ANR	4782689	Condition	! arg	221:5:5463:5466	4782614	0	True				
ANR	4782690	UnaryOperationExpression	! arg		4782614	0					
ANR	4782691	UnaryOperator	!		4782614	0					
ANR	4782692	Identifier	arg		4782614	1					
ANR	4782693	CompoundStatement		15:11:257:257	4782614	1					
ANR	4782694	IfStatement	if ( e )		4782614	0					
ANR	4782695	Condition	e	222:6:5477:5477	4782614	0	True				
ANR	4782696	Identifier	e		4782614	0					
ANR	4782697	CompoundStatement		16:9:268:268	4782614	1					
ANR	4782698	ExpressionStatement	arg = e + 1	223:3:5485:5496	4782614	0	True				
ANR	4782699	AssignmentExpression	arg = e + 1		4782614	0		=			
ANR	4782700	Identifier	arg		4782614	0					
ANR	4782701	AdditiveExpression	e + 1		4782614	1		+			
ANR	4782702	Identifier	e		4782614	0					
ANR	4782703	PrimaryExpression	1		4782614	1					
ANR	4782704	ExpressionStatement	"op = ""bne"""	224:3:5501:5511	4782614	1	True				
ANR	4782705	AssignmentExpression	"op = ""bne"""		4782614	0		=			
ANR	4782706	Identifier	op		4782614	0					
ANR	4782707	PrimaryExpression	"""bne"""		4782614	1					
ANR	4782708	ElseStatement	else		4782614	0					
ANR	4782709	CompoundStatement		19:9:310:310	4782614	0					
ANR	4782710	ExpressionStatement	"arg = ""0"""	226:3:5527:5536	4782614	0	True				
ANR	4782711	AssignmentExpression	"arg = ""0"""		4782614	0		=			
ANR	4782712	Identifier	arg		4782614	0					
ANR	4782713	PrimaryExpression	"""0"""		4782614	1					
ANR	4782714	ExpressionStatement	"op = n ? ""bne"" : ""beq"""	227:3:5541:5561	4782614	1	True				
ANR	4782715	AssignmentExpression	"op = n ? ""bne"" : ""beq"""		4782614	0		=			
ANR	4782716	Identifier	op		4782614	0					
ANR	4782717	ConditionalExpression	"n ? ""bne"" : ""beq"""		4782614	1					
ANR	4782718	Condition	n		4782614	0					
ANR	4782719	Identifier	n		4782614	0					
ANR	4782720	PrimaryExpression	"""bne"""		4782614	1					
ANR	4782721	PrimaryExpression	"""beq"""		4782614	2					
ANR	4782722	IfStatement	if ( * arg == '=' )		4782614	5					
ANR	4782723	Condition	* arg == '='	231:5:5576:5586	4782614	0	True				
ANR	4782724	EqualityExpression	* arg == '='		4782614	0		==			
ANR	4782725	UnaryOperationExpression	* arg		4782614	0					
ANR	4782726	UnaryOperator	*		4782614	0					
ANR	4782727	Identifier	arg		4782614	1					
ANR	4782728	PrimaryExpression	'='		4782614	1					
ANR	4782729	CompoundStatement		25:18:377:377	4782614	1					
ANR	4782730	ExpressionStatement	arg ++	232:2:5593:5598	4782614	0	True				
ANR	4782731	PostIncDecOperationExpression	arg ++		4782614	0					
ANR	4782732	Identifier	arg		4782614	0					
ANR	4782733	IncDec	++		4782614	1					
ANR	4782734	ExpressionStatement	"p = r_egg_mkvar ( egg , str , arg , 0 )"	234:1:5627:5661	4782614	6	True				
ANR	4782735	AssignmentExpression	"p = r_egg_mkvar ( egg , str , arg , 0 )"		4782614	0		=			
ANR	4782736	Identifier	p		4782614	0					
ANR	4782737	CallExpression	"r_egg_mkvar ( egg , str , arg , 0 )"		4782614	1					
ANR	4782738	Callee	r_egg_mkvar		4782614	0					
ANR	4782739	Identifier	r_egg_mkvar		4782614	0					
ANR	4782740	ArgumentList	egg		4782614	1					
ANR	4782741	Argument	egg		4782614	0					
ANR	4782742	Identifier	egg		4782614	0					
ANR	4782743	Argument	str		4782614	1					
ANR	4782744	Identifier	str		4782614	0					
ANR	4782745	Argument	arg		4782614	2					
ANR	4782746	Identifier	arg		4782614	0					
ANR	4782747	Argument	0		4782614	3					
ANR	4782748	PrimaryExpression	0		4782614	0					
ANR	4782749	Statement	r_egg_printf	235:1:5664:5675	4782614	7	True				
ANR	4782750	Statement	(	235:14:5677:5677	4782614	8	True				
ANR	4782751	Statement	egg	235:15:5678:5680	4782614	9	True				
ANR	4782752	Statement	","	235:18:5681:5681	4782614	10	True				
ANR	4782753	Statement	"""  pop """	235:20:5683:5690	4782614	11	True				
ANR	4782754	Statement	R_AX	235:28:5691:5694	4782614	12	True				
ANR	4782755	Statement	"""\\n"""	235:33:5696:5699	4782614	13	True				
ANR	4782756	Statement	)	235:37:5700:5700	4782614	14	True				
ANR	4782757	ExpressionStatement		235:38:5701:5701	4782614	15	True				
ANR	4782758	Statement	r_egg_printf	236:1:5759:5770	4782614	16	True				
ANR	4782759	Statement	(	236:14:5772:5772	4782614	17	True				
ANR	4782760	Statement	egg	236:15:5773:5775	4782614	18	True				
ANR	4782761	Statement	","	236:18:5776:5776	4782614	19	True				
ANR	4782762	Statement	"""  cmp %s, """	236:20:5778:5789	4782614	20	True				
ANR	4782763	Statement	R_AX	236:32:5790:5793	4782614	21	True				
ANR	4782764	Statement	"""\\n"""	236:37:5795:5798	4782614	22	True				
ANR	4782765	Statement	","	236:41:5799:5799	4782614	23	True				
ANR	4782766	Statement	p	236:43:5801:5801	4782614	24	True				
ANR	4782767	Statement	)	236:44:5802:5802	4782614	25	True				
ANR	4782768	ExpressionStatement		236:45:5803:5803	4782614	26	True				
ANR	4782769	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"	238:1:5825:5865	4782614	27	True				
ANR	4782770	CallExpression	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"		4782614	0					
ANR	4782771	Callee	r_egg_printf		4782614	0					
ANR	4782772	Identifier	r_egg_printf		4782614	0					
ANR	4782773	ArgumentList	egg		4782614	1					
ANR	4782774	Argument	egg		4782614	0					
ANR	4782775	Identifier	egg		4782614	0					
ANR	4782776	Argument	"""  %s %s\\n"""		4782614	1					
ANR	4782777	PrimaryExpression	"""  %s %s\\n"""		4782614	0					
ANR	4782778	Argument	op		4782614	2					
ANR	4782779	Identifier	op		4782614	0					
ANR	4782780	Argument	dst		4782614	3					
ANR	4782781	Identifier	dst		4782614	0					
ANR	4782782	ExpressionStatement	free ( p )	239:1:5868:5876	4782614	28	True				
ANR	4782783	CallExpression	free ( p )		4782614	0					
ANR	4782784	Callee	free		4782614	0					
ANR	4782785	Identifier	free		4782614	0					
ANR	4782786	ArgumentList	p		4782614	1					
ANR	4782787	Argument	p		4782614	0					
ANR	4782788	Identifier	p		4782614	0					
ANR	4782789	ReturnType	static void		4782614	1					
ANR	4782790	Identifier	emit_branch		4782614	2					
ANR	4782791	ParameterList	"REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst"		4782614	3					
ANR	4782792	Parameter	REgg * egg	207:24:5139:5147	4782614	0	True				
ANR	4782793	ParameterType	REgg *		4782614	0					
ANR	4782794	Identifier	egg		4782614	1					
ANR	4782795	Parameter	char * b	207:35:5150:5156	4782614	1	True				
ANR	4782796	ParameterType	char *		4782614	0					
ANR	4782797	Identifier	b		4782614	1					
ANR	4782798	Parameter	char * g	207:44:5159:5165	4782614	2	True				
ANR	4782799	ParameterType	char *		4782614	0					
ANR	4782800	Identifier	g		4782614	1					
ANR	4782801	Parameter	char * e	207:53:5168:5174	4782614	3	True				
ANR	4782802	ParameterType	char *		4782614	0					
ANR	4782803	Identifier	e		4782614	1					
ANR	4782804	Parameter	char * n	207:62:5177:5183	4782614	4	True				
ANR	4782805	ParameterType	char *		4782614	0					
ANR	4782806	Identifier	n		4782614	1					
ANR	4782807	Parameter	int sz	207:71:5186:5191	4782614	5	True				
ANR	4782808	ParameterType	int		4782614	0					
ANR	4782809	Identifier	sz		4782614	1					
ANR	4782810	Parameter	const char * dst	207:79:5194:5208	4782614	6	True				
ANR	4782811	ParameterType	const char *		4782614	0					
ANR	4782812	Identifier	dst		4782614	1					
ANR	4782813	CFGEntryNode	ENTRY		4782614		True				
ANR	4782814	CFGExitNode	EXIT		4782614		True				
ANR	4782815	Symbol	r_egg_mkvar		4782614						
ANR	4782816	Symbol	op		4782614						
ANR	4782817	Symbol	b		4782614						
ANR	4782818	Symbol	NULL		4782614						
ANR	4782819	Symbol	egg		4782614						
ANR	4782820	Symbol	dst		4782614						
ANR	4782821	Symbol	e		4782614						
ANR	4782822	Symbol	g		4782614						
ANR	4782823	Symbol	sz		4782614						
ANR	4782824	Symbol	* b		4782614						
ANR	4782825	Symbol	n		4782614						
ANR	4782826	Symbol	p		4782614						
ANR	4782827	Symbol	str		4782614						
ANR	4782828	Symbol	* g		4782614						
ANR	4782829	Symbol	arg		4782614						
ANR	4782830	Symbol	* arg		4782614						
ANR	4782831	Function	emit_load	242:0:5881:6340							
ANR	4782832	FunctionDef	"emit_load (REgg * egg , const char * dst , int sz)"		4782831	0					
ANR	4782833	CompoundStatement		242:58:5939:6340	4782831	0					
ANR	4782834	SwitchStatement	switch ( sz )		4782831	0					
ANR	4782835	Condition	sz	243:9:5950:5951	4782831	0	True				
ANR	4782836	Identifier	sz		4782831	0					
ANR	4782837	CompoundStatement		2:13:14:14	4782831	1					
ANR	4782838	Label	case 'l' :	244:1:5957:5965	4782831	0	True				
ANR	4782839	Statement	r_egg_printf	245:2:5969:5980	4782831	1	True				
ANR	4782840	Statement	(	245:15:5982:5982	4782831	2	True				
ANR	4782841	Statement	egg	245:16:5983:5985	4782831	3	True				
ANR	4782842	Statement	","	245:19:5986:5986	4782831	4	True				
ANR	4782843	Statement	"""  mov """	245:21:5988:5995	4782831	5	True				
ANR	4782844	Statement	R_AX	245:29:5996:5999	4782831	6	True				
ANR	4782845	Statement	""", %s\\n"""	245:34:6001:6008	4782831	7	True				
ANR	4782846	Statement	","	245:42:6009:6009	4782831	8	True				
ANR	4782847	Statement	dst	245:44:6011:6013	4782831	9	True				
ANR	4782848	Statement	)	245:47:6014:6014	4782831	10	True				
ANR	4782849	ExpressionStatement		245:48:6015:6015	4782831	11	True				
ANR	4782850	Statement	r_egg_printf	246:2:6019:6030	4782831	12	True				
ANR	4782851	Statement	(	246:15:6032:6032	4782831	13	True				
ANR	4782852	Statement	egg	246:16:6033:6035	4782831	14	True				
ANR	4782853	Statement	","	246:19:6036:6036	4782831	15	True				
ANR	4782854	Statement	"""  mov """	246:21:6038:6045	4782831	16	True				
ANR	4782855	Statement	R_AX	246:29:6046:6049	4782831	17	True				
ANR	4782856	Statement	""", ["""	246:34:6051:6055	4782831	18	True				
ANR	4782857	Statement	R_AX	246:39:6056:6059	4782831	19	True				
ANR	4782858	Statement	"""]\\n"""	246:44:6061:6065	4782831	20	True				
ANR	4782859	Statement	)	246:49:6066:6066	4782831	21	True				
ANR	4782860	ExpressionStatement		246:50:6067:6067	4782831	22	True				
ANR	4782861	BreakStatement	break ;	247:2:6071:6076	4782831	23	True				
ANR	4782862	Label	case 'b' :	248:1:6079:6087	4782831	24	True				
ANR	4782863	Statement	r_egg_printf	249:2:6091:6102	4782831	25	True				
ANR	4782864	Statement	(	249:15:6104:6104	4782831	26	True				
ANR	4782865	Statement	egg	249:16:6105:6107	4782831	27	True				
ANR	4782866	Statement	","	249:19:6108:6108	4782831	28	True				
ANR	4782867	Statement	"""  mov """	249:21:6110:6117	4782831	29	True				
ANR	4782868	Statement	R_AX	249:29:6118:6121	4782831	30	True				
ANR	4782869	Statement	""", %s\\n"""	249:34:6123:6130	4782831	31	True				
ANR	4782870	Statement	","	249:42:6131:6131	4782831	32	True				
ANR	4782871	Statement	dst	249:44:6133:6135	4782831	33	True				
ANR	4782872	Statement	)	249:47:6136:6136	4782831	34	True				
ANR	4782873	ExpressionStatement		249:48:6137:6137	4782831	35	True				
ANR	4782874	Statement	r_egg_printf	250:2:6141:6152	4782831	36	True				
ANR	4782875	Statement	(	250:15:6154:6154	4782831	37	True				
ANR	4782876	Statement	egg	250:16:6155:6157	4782831	38	True				
ANR	4782877	Statement	","	250:19:6158:6158	4782831	39	True				
ANR	4782878	Statement	"""  movz """	250:21:6160:6168	4782831	40	True				
ANR	4782879	Statement	R_AX	250:30:6169:6172	4782831	41	True				
ANR	4782880	Statement	""", ["""	250:35:6174:6178	4782831	42	True				
ANR	4782881	Statement	R_AX	250:40:6179:6182	4782831	43	True				
ANR	4782882	Statement	"""]\\n"""	250:45:6184:6188	4782831	44	True				
ANR	4782883	Statement	)	250:50:6189:6189	4782831	45	True				
ANR	4782884	ExpressionStatement		250:51:6190:6190	4782831	46	True				
ANR	4782885	BreakStatement	break ;	251:2:6194:6199	4782831	47	True				
ANR	4782886	Label	default :	252:1:6202:6209	4782831	48	True				
ANR	4782887	Identifier	default		4782831	0					
ANR	4782888	Statement	r_egg_printf	254:2:6237:6248	4782831	49	True				
ANR	4782889	Statement	(	254:15:6250:6250	4782831	50	True				
ANR	4782890	Statement	egg	254:16:6251:6253	4782831	51	True				
ANR	4782891	Statement	","	254:19:6254:6254	4782831	52	True				
ANR	4782892	Statement	"""  mov """	254:21:6256:6263	4782831	53	True				
ANR	4782893	Statement	R_AX	254:29:6264:6267	4782831	54	True				
ANR	4782894	Statement	""", %s\\n"""	254:34:6269:6276	4782831	55	True				
ANR	4782895	Statement	","	254:42:6277:6277	4782831	56	True				
ANR	4782896	Statement	dst	254:44:6279:6281	4782831	57	True				
ANR	4782897	Statement	)	254:47:6282:6282	4782831	58	True				
ANR	4782898	ExpressionStatement		254:48:6283:6283	4782831	59	True				
ANR	4782899	Statement	r_egg_printf	255:2:6287:6298	4782831	60	True				
ANR	4782900	Statement	(	255:15:6300:6300	4782831	61	True				
ANR	4782901	Statement	egg	255:16:6301:6303	4782831	62	True				
ANR	4782902	Statement	","	255:19:6304:6304	4782831	63	True				
ANR	4782903	Statement	"""  mov """	255:21:6306:6313	4782831	64	True				
ANR	4782904	Statement	R_AX	255:29:6314:6317	4782831	65	True				
ANR	4782905	Statement	""", ["""	255:34:6319:6323	4782831	66	True				
ANR	4782906	Statement	R_AX	255:39:6324:6327	4782831	67	True				
ANR	4782907	Statement	"""]\\n"""	255:44:6329:6333	4782831	68	True				
ANR	4782908	Statement	)	255:49:6334:6334	4782831	69	True				
ANR	4782909	ExpressionStatement		255:50:6335:6335	4782831	70	True				
ANR	4782910	ReturnType	static void		4782831	1					
ANR	4782911	Identifier	emit_load		4782831	2					
ANR	4782912	ParameterList	"REgg * egg , const char * dst , int sz"		4782831	3					
ANR	4782913	Parameter	REgg * egg	242:22:5903:5911	4782831	0	True				
ANR	4782914	ParameterType	REgg *		4782831	0					
ANR	4782915	Identifier	egg		4782831	1					
ANR	4782916	Parameter	const char * dst	242:33:5914:5928	4782831	1	True				
ANR	4782917	ParameterType	const char *		4782831	0					
ANR	4782918	Identifier	dst		4782831	1					
ANR	4782919	Parameter	int sz	242:50:5931:5936	4782831	2	True				
ANR	4782920	ParameterType	int		4782831	0					
ANR	4782921	Identifier	sz		4782831	1					
ANR	4782922	CFGEntryNode	ENTRY		4782831		True				
ANR	4782923	CFGExitNode	EXIT		4782831		True				
ANR	4782924	Symbol	egg		4782831						
ANR	4782925	Symbol	dst		4782831						
ANR	4782926	Symbol	sz		4782831						
ANR	4782927	Function	emit_mathop	259:0:6343:7044							
ANR	4782928	FunctionDef	"emit_mathop (REgg * egg , int ch , int vs , int type , const char * eq , const char * p)"		4782927	0					
ANR	4782929	CompoundStatement		259:92:6435:7044	4782927	0					
ANR	4782930	IdentifierDeclStatement	char * op ;	260:1:6438:6446	4782927	0	True				
ANR	4782931	IdentifierDecl	* op		4782927	0					
ANR	4782932	IdentifierDeclType	char *		4782927	0					
ANR	4782933	Identifier	op		4782927	1					
ANR	4782934	SwitchStatement	switch ( ch )		4782927	1					
ANR	4782935	Condition	ch	261:9:6457:6458	4782927	0	True				
ANR	4782936	Identifier	ch		4782927	0					
ANR	4782937	CompoundStatement		3:13:25:25	4782927	1					
ANR	4782938	Label	case '^' :	262:1:6464:6472	4782927	0	True				
ANR	4782939	ExpressionStatement	"op = ""eor"""	262:11:6474:6484	4782927	1	True				
ANR	4782940	AssignmentExpression	"op = ""eor"""		4782927	0		=			
ANR	4782941	Identifier	op		4782927	0					
ANR	4782942	PrimaryExpression	"""eor"""		4782927	1					
ANR	4782943	BreakStatement	break ;	262:23:6486:6491	4782927	2	True				
ANR	4782944	Label	case '&' :	263:1:6494:6502	4782927	3	True				
ANR	4782945	ExpressionStatement	"op = ""and"""	263:11:6504:6514	4782927	4	True				
ANR	4782946	AssignmentExpression	"op = ""and"""		4782927	0		=			
ANR	4782947	Identifier	op		4782927	0					
ANR	4782948	PrimaryExpression	"""and"""		4782927	1					
ANR	4782949	BreakStatement	break ;	263:23:6516:6521	4782927	5	True				
ANR	4782950	Label	case '|' :	264:1:6524:6532	4782927	6	True				
ANR	4782951	ExpressionStatement	"op = ""orr"""	264:11:6534:6544	4782927	7	True				
ANR	4782952	AssignmentExpression	"op = ""orr"""		4782927	0		=			
ANR	4782953	Identifier	op		4782927	0					
ANR	4782954	PrimaryExpression	"""orr"""		4782927	1					
ANR	4782955	BreakStatement	break ;	264:23:6546:6551	4782927	8	True				
ANR	4782956	Label	case '-' :	265:1:6554:6562	4782927	9	True				
ANR	4782957	ExpressionStatement	"op = ""sub"""	265:11:6564:6574	4782927	10	True				
ANR	4782958	AssignmentExpression	"op = ""sub"""		4782927	0		=			
ANR	4782959	Identifier	op		4782927	0					
ANR	4782960	PrimaryExpression	"""sub"""		4782927	1					
ANR	4782961	BreakStatement	break ;	265:23:6576:6581	4782927	11	True				
ANR	4782962	Label	case '+' :	266:1:6584:6592	4782927	12	True				
ANR	4782963	ExpressionStatement	"op = ""add"""	266:11:6594:6604	4782927	13	True				
ANR	4782964	AssignmentExpression	"op = ""add"""		4782927	0		=			
ANR	4782965	Identifier	op		4782927	0					
ANR	4782966	PrimaryExpression	"""add"""		4782927	1					
ANR	4782967	BreakStatement	break ;	266:23:6606:6611	4782927	14	True				
ANR	4782968	Label	case '*' :	267:1:6614:6622	4782927	15	True				
ANR	4782969	ExpressionStatement	"op = ""mul"""	267:11:6624:6634	4782927	16	True				
ANR	4782970	AssignmentExpression	"op = ""mul"""		4782927	0		=			
ANR	4782971	Identifier	op		4782927	0					
ANR	4782972	PrimaryExpression	"""mul"""		4782927	1					
ANR	4782973	BreakStatement	break ;	267:23:6636:6641	4782927	17	True				
ANR	4782974	Label	case '/' :	268:1:6644:6652	4782927	18	True				
ANR	4782975	ExpressionStatement	"op = ""div"""	268:11:6654:6664	4782927	19	True				
ANR	4782976	AssignmentExpression	"op = ""div"""		4782927	0		=			
ANR	4782977	Identifier	op		4782927	0					
ANR	4782978	PrimaryExpression	"""div"""		4782927	1					
ANR	4782979	BreakStatement	break ;	268:23:6666:6671	4782927	20	True				
ANR	4782980	Label	default :	269:1:6674:6681	4782927	21	True				
ANR	4782981	Identifier	default		4782927	0					
ANR	4782982	ExpressionStatement	"op = ""mov"""	269:11:6684:6694	4782927	22	True				
ANR	4782983	AssignmentExpression	"op = ""mov"""		4782927	0		=			
ANR	4782984	Identifier	op		4782927	0					
ANR	4782985	PrimaryExpression	"""mov"""		4782927	1					
ANR	4782986	BreakStatement	break ;	269:23:6696:6701	4782927	23	True				
ANR	4782987	IfStatement	if ( ! eq )		4782927	2					
ANR	4782988	Condition	! eq	271:5:6711:6713	4782927	0	True				
ANR	4782989	UnaryOperationExpression	! eq		4782927	0					
ANR	4782990	UnaryOperator	!		4782927	0					
ANR	4782991	Identifier	eq		4782927	1					
ANR	4782992	CompoundStatement		13:10:280:280	4782927	1					
ANR	4782993	ExpressionStatement	eq = R_AX	272:2:6720:6729	4782927	0	True				
ANR	4782994	AssignmentExpression	eq = R_AX		4782927	0		=			
ANR	4782995	Identifier	eq		4782927	0					
ANR	4782996	Identifier	R_AX		4782927	1					
ANR	4782997	IfStatement	if ( ! p )		4782927	3					
ANR	4782998	Condition	! p	274:5:6739:6740	4782927	0	True				
ANR	4782999	UnaryOperationExpression	! p		4782927	0					
ANR	4783000	UnaryOperator	!		4782927	0					
ANR	4783001	Identifier	p		4782927	1					
ANR	4783002	CompoundStatement		16:9:307:307	4782927	1					
ANR	4783003	ExpressionStatement	p = R_AX	275:2:6747:6755	4782927	0	True				
ANR	4783004	AssignmentExpression	p = R_AX		4782927	0		=			
ANR	4783005	Identifier	p		4782927	0					
ANR	4783006	Identifier	R_AX		4782927	1					
ANR	4783007	ExpressionStatement	"eprintf ( ""TYPE = %c\\n"" , type )"	279:1:6777:6806	4782927	4	True				
ANR	4783008	CallExpression	"eprintf ( ""TYPE = %c\\n"" , type )"		4782927	0					
ANR	4783009	Callee	eprintf		4782927	0					
ANR	4783010	Identifier	eprintf		4782927	0					
ANR	4783011	ArgumentList	"""TYPE = %c\\n"""		4782927	1					
ANR	4783012	Argument	"""TYPE = %c\\n"""		4782927	0					
ANR	4783013	PrimaryExpression	"""TYPE = %c\\n"""		4782927	0					
ANR	4783014	Argument	type		4782927	1					
ANR	4783015	Identifier	type		4782927	0					
ANR	4783016	ExpressionStatement	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	280:1:6809:6859	4782927	5	True				
ANR	4783017	CallExpression	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		4782927	0					
ANR	4783018	Callee	eprintf		4782927	0					
ANR	4783019	Identifier	eprintf		4782927	0					
ANR	4783020	ArgumentList	"""  %s%c %c%s, %s\\n"""		4782927	1					
ANR	4783021	Argument	"""  %s%c %c%s, %s\\n"""		4782927	0					
ANR	4783022	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		4782927	0					
ANR	4783023	Argument	op		4782927	1					
ANR	4783024	Identifier	op		4782927	0					
ANR	4783025	Argument	vs		4782927	2					
ANR	4783026	Identifier	vs		4782927	0					
ANR	4783027	Argument	type		4782927	3					
ANR	4783028	Identifier	type		4782927	0					
ANR	4783029	Argument	eq		4782927	4					
ANR	4783030	Identifier	eq		4782927	0					
ANR	4783031	Argument	p		4782927	5					
ANR	4783032	Identifier	p		4782927	0					
ANR	4783033	ExpressionStatement	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"	281:1:6862:6900	4782927	6	True				
ANR	4783034	CallExpression	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"		4782927	0					
ANR	4783035	Callee	eprintf		4782927	0					
ANR	4783036	Identifier	eprintf		4782927	0					
ANR	4783037	ArgumentList	"""  %s %s, [%s]\\n"""		4782927	1					
ANR	4783038	Argument	"""  %s %s, [%s]\\n"""		4782927	0					
ANR	4783039	PrimaryExpression	"""  %s %s, [%s]\\n"""		4782927	0					
ANR	4783040	Argument	op		4782927	1					
ANR	4783041	Identifier	op		4782927	0					
ANR	4783042	Argument	p		4782927	2					
ANR	4783043	Identifier	p		4782927	0					
ANR	4783044	Argument	eq		4782927	3					
ANR	4783045	Identifier	eq		4782927	0					
ANR	4783046	IfStatement	if ( type == '*' )		4782927	7					
ANR	4783047	Condition	type == '*'	283:5:6914:6924	4782927	0	True				
ANR	4783048	EqualityExpression	type == '*'		4782927	0		==			
ANR	4783049	Identifier	type		4782927	0					
ANR	4783050	PrimaryExpression	'*'		4782927	1					
ANR	4783051	CompoundStatement		25:18:491:491	4782927	1					
ANR	4783052	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"	284:2:6931:6979	4782927	0	True				
ANR	4783053	CallExpression	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"		4782927	0					
ANR	4783054	Callee	r_egg_printf		4782927	0					
ANR	4783055	Identifier	r_egg_printf		4782927	0					
ANR	4783056	ArgumentList	egg		4782927	1					
ANR	4783057	Argument	egg		4782927	0					
ANR	4783058	Identifier	egg		4782927	0					
ANR	4783059	Argument	"""  %s %s, [%s]\\n"""		4782927	1					
ANR	4783060	PrimaryExpression	"""  %s %s, [%s]\\n"""		4782927	0					
ANR	4783061	Argument	op		4782927	2					
ANR	4783062	Identifier	op		4782927	0					
ANR	4783063	Argument	p		4782927	3					
ANR	4783064	Identifier	p		4782927	0					
ANR	4783065	Argument	eq		4782927	4					
ANR	4783066	Identifier	eq		4782927	0					
ANR	4783067	ElseStatement	else		4782927	0					
ANR	4783068	CompoundStatement		27:8:553:553	4782927	0					
ANR	4783069	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"	286:2:6993:7039	4782927	0	True				
ANR	4783070	CallExpression	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"		4782927	0					
ANR	4783071	Callee	r_egg_printf		4782927	0					
ANR	4783072	Identifier	r_egg_printf		4782927	0					
ANR	4783073	ArgumentList	egg		4782927	1					
ANR	4783074	Argument	egg		4782927	0					
ANR	4783075	Identifier	egg		4782927	0					
ANR	4783076	Argument	"""  %s %s, %s\\n"""		4782927	1					
ANR	4783077	PrimaryExpression	"""  %s %s, %s\\n"""		4782927	0					
ANR	4783078	Argument	op		4782927	2					
ANR	4783079	Identifier	op		4782927	0					
ANR	4783080	Argument	p		4782927	3					
ANR	4783081	Identifier	p		4782927	0					
ANR	4783082	Argument	eq		4782927	4					
ANR	4783083	Identifier	eq		4782927	0					
ANR	4783084	ReturnType	static void		4782927	1					
ANR	4783085	Identifier	emit_mathop		4782927	2					
ANR	4783086	ParameterList	"REgg * egg , int ch , int vs , int type , const char * eq , const char * p"		4782927	3					
ANR	4783087	Parameter	REgg * egg	259:24:6367:6375	4782927	0	True				
ANR	4783088	ParameterType	REgg *		4782927	0					
ANR	4783089	Identifier	egg		4782927	1					
ANR	4783090	Parameter	int ch	259:35:6378:6383	4782927	1	True				
ANR	4783091	ParameterType	int		4782927	0					
ANR	4783092	Identifier	ch		4782927	1					
ANR	4783093	Parameter	int vs	259:43:6386:6391	4782927	2	True				
ANR	4783094	ParameterType	int		4782927	0					
ANR	4783095	Identifier	vs		4782927	1					
ANR	4783096	Parameter	int type	259:51:6394:6401	4782927	3	True				
ANR	4783097	ParameterType	int		4782927	0					
ANR	4783098	Identifier	type		4782927	1					
ANR	4783099	Parameter	const char * eq	259:61:6404:6417	4782927	4	True				
ANR	4783100	ParameterType	const char *		4782927	0					
ANR	4783101	Identifier	eq		4782927	1					
ANR	4783102	Parameter	const char * p	259:77:6420:6432	4782927	5	True				
ANR	4783103	ParameterType	const char *		4782927	0					
ANR	4783104	Identifier	p		4782927	1					
ANR	4783105	CFGEntryNode	ENTRY		4782927		True				
ANR	4783106	CFGExitNode	EXIT		4782927		True				
ANR	4783107	Symbol	p		4782927						
ANR	4783108	Symbol	op		4782927						
ANR	4783109	Symbol	R_AX		4782927						
ANR	4783110	Symbol	egg		4782927						
ANR	4783111	Symbol	ch		4782927						
ANR	4783112	Symbol	type		4782927						
ANR	4783113	Symbol	eq		4782927						
ANR	4783114	Symbol	vs		4782927						
ANR	4783115	Function	emit_regs	290:0:7047:7125							
ANR	4783116	FunctionDef	"emit_regs (REgg * egg , int idx)"		4783115	0					
ANR	4783117	CompoundStatement		290:49:7096:7125	4783115	0					
ANR	4783118	ReturnStatement	return regs [ idx % R_NGP ] ;	291:1:7099:7123	4783115	0	True				
ANR	4783119	ArrayIndexing	regs [ idx % R_NGP ]		4783115	0					
ANR	4783120	Identifier	regs		4783115	0					
ANR	4783121	MultiplicativeExpression	idx % R_NGP		4783115	1		%			
ANR	4783122	Identifier	idx		4783115	0					
ANR	4783123	Identifier	R_NGP		4783115	1					
ANR	4783124	ReturnType	static const char *		4783115	1					
ANR	4783125	Identifier	emit_regs		4783115	2					
ANR	4783126	ParameterList	"REgg * egg , int idx"		4783115	3					
ANR	4783127	Parameter	REgg * egg	290:29:7076:7084	4783115	0	True				
ANR	4783128	ParameterType	REgg *		4783115	0					
ANR	4783129	Identifier	egg		4783115	1					
ANR	4783130	Parameter	int idx	290:40:7087:7093	4783115	1	True				
ANR	4783131	ParameterType	int		4783115	0					
ANR	4783132	Identifier	idx		4783115	1					
ANR	4783133	CFGEntryNode	ENTRY		4783115		True				
ANR	4783134	CFGExitNode	EXIT		4783115		True				
ANR	4783135	Symbol	egg		4783115						
ANR	4783136	Symbol	* R_NGP		4783115						
ANR	4783137	Symbol	R_NGP		4783115						
ANR	4783138	Symbol	* regs		4783115						
ANR	4783139	Symbol	* idx		4783115						
ANR	4783140	Symbol	regs		4783115						
ANR	4783141	Symbol	idx		4783115						
ANR	4783142	DeclStmt									
ANR	4783143	Decl							REggEmit	REggEmit	EMIT_NAME
