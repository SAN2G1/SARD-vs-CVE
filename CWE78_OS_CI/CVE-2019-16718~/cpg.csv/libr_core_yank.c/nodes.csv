command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4649013	File	data/converged/CVE-2019-16718~_radare2/libr_core_yank.c								
ANR	4649014	DeclStmt									
ANR	4649015	Decl							int	"int ( RCore * core , ut64 offset , ut64 len , const char * filename )"	perform_mapped_file_yank
ANR	4649016	DeclStmt									
ANR	4649017	Decl							ut32	"ut32 ( const char * input , char b )"	find_next_char
ANR	4649018	DeclStmt									
ANR	4649019	Decl							ut32	"ut32 ( const char * input , char b )"	consume_chars
ANR	4649020	Function	find_next_char	15:0:510:676							
ANR	4649021	FunctionDef	"find_next_char (const char * input , char b)"		4649020	0					
ANR	4649022	CompoundStatement		15:54:564:676	4649020	0					
ANR	4649023	IdentifierDeclStatement	ut32 i = 0 ;	16:1:567:577	4649020	0	True				
ANR	4649024	IdentifierDecl	i = 0		4649020	0					
ANR	4649025	IdentifierDeclType	ut32		4649020	0					
ANR	4649026	Identifier	i		4649020	1					
ANR	4649027	AssignmentExpression	i = 0		4649020	2		=			
ANR	4649028	Identifier	i		4649020	0					
ANR	4649029	PrimaryExpression	0		4649020	1					
ANR	4649030	IfStatement	if ( ! input )		4649020	1					
ANR	4649031	Condition	! input	17:5:584:589	4649020	0	True				
ANR	4649032	UnaryOperationExpression	! input		4649020	0					
ANR	4649033	UnaryOperator	!		4649020	0					
ANR	4649034	Identifier	input		4649020	1					
ANR	4649035	CompoundStatement		3:13:27:27	4649020	1					
ANR	4649036	ReturnStatement	return i ;	18:2:596:604	4649020	0	True				
ANR	4649037	Identifier	i		4649020	0					
ANR	4649038	ForStatement	"for ( ; * input != b ; i ++ , input ++ )"		4649020	2					
ANR	4649039	Condition	* input != b	20:8:617:627	4649020	0	True				
ANR	4649040	EqualityExpression	* input != b		4649020	0		!=			
ANR	4649041	UnaryOperationExpression	* input		4649020	0					
ANR	4649042	UnaryOperator	*		4649020	0					
ANR	4649043	Identifier	input		4649020	1					
ANR	4649044	Identifier	b		4649020	1					
ANR	4649045	Expression	"i ++ , input ++"	20:21:630:641	4649020	1	True				
ANR	4649046	PostIncDecOperationExpression	i ++		4649020	0					
ANR	4649047	Identifier	i		4649020	0					
ANR	4649048	IncDec	++		4649020	1					
ANR	4649049	PostIncDecOperationExpression	input ++		4649020	1					
ANR	4649050	Identifier	input		4649020	0					
ANR	4649051	IncDec	++		4649020	1					
ANR	4649052	CompoundStatement		6:35:79:79	4649020	2					
ANR	4649053	ReturnStatement	return i ;	23:1:666:674	4649020	3	True				
ANR	4649054	Identifier	i		4649020	0					
ANR	4649055	ReturnType	static ut32		4649020	1					
ANR	4649056	Identifier	find_next_char		4649020	2					
ANR	4649057	ParameterList	"const char * input , char b"		4649020	3					
ANR	4649058	Parameter	const char * input	15:27:537:553	4649020	0	True				
ANR	4649059	ParameterType	const char *		4649020	0					
ANR	4649060	Identifier	input		4649020	1					
ANR	4649061	Parameter	char b	15:46:556:561	4649020	1	True				
ANR	4649062	ParameterType	char		4649020	0					
ANR	4649063	Identifier	b		4649020	1					
ANR	4649064	CFGEntryNode	ENTRY		4649020		True				
ANR	4649065	CFGExitNode	EXIT		4649020		True				
ANR	4649066	Symbol	input		4649020						
ANR	4649067	Symbol	b		4649020						
ANR	4649068	Symbol	* input		4649020						
ANR	4649069	Symbol	i		4649020						
ANR	4649070	Function	consume_chars	26:0:679:844							
ANR	4649071	FunctionDef	"consume_chars (const char * input , char b)"		4649070	0					
ANR	4649072	CompoundStatement		26:53:732:844	4649070	0					
ANR	4649073	IdentifierDeclStatement	ut32 i = 0 ;	27:1:735:745	4649070	0	True				
ANR	4649074	IdentifierDecl	i = 0		4649070	0					
ANR	4649075	IdentifierDeclType	ut32		4649070	0					
ANR	4649076	Identifier	i		4649070	1					
ANR	4649077	AssignmentExpression	i = 0		4649070	2		=			
ANR	4649078	Identifier	i		4649070	0					
ANR	4649079	PrimaryExpression	0		4649070	1					
ANR	4649080	IfStatement	if ( ! input )		4649070	1					
ANR	4649081	Condition	! input	28:5:752:757	4649070	0	True				
ANR	4649082	UnaryOperationExpression	! input		4649070	0					
ANR	4649083	UnaryOperator	!		4649070	0					
ANR	4649084	Identifier	input		4649070	1					
ANR	4649085	CompoundStatement		3:13:27:27	4649070	1					
ANR	4649086	ReturnStatement	return i ;	29:2:764:772	4649070	0	True				
ANR	4649087	Identifier	i		4649070	0					
ANR	4649088	ForStatement	"for ( ; * input == b ; i ++ , input ++ )"		4649070	2					
ANR	4649089	Condition	* input == b	31:8:785:795	4649070	0	True				
ANR	4649090	EqualityExpression	* input == b		4649070	0		==			
ANR	4649091	UnaryOperationExpression	* input		4649070	0					
ANR	4649092	UnaryOperator	*		4649070	0					
ANR	4649093	Identifier	input		4649070	1					
ANR	4649094	Identifier	b		4649070	1					
ANR	4649095	Expression	"i ++ , input ++"	31:21:798:809	4649070	1	True				
ANR	4649096	PostIncDecOperationExpression	i ++		4649070	0					
ANR	4649097	Identifier	i		4649070	0					
ANR	4649098	IncDec	++		4649070	1					
ANR	4649099	PostIncDecOperationExpression	input ++		4649070	1					
ANR	4649100	Identifier	input		4649070	0					
ANR	4649101	IncDec	++		4649070	1					
ANR	4649102	CompoundStatement		6:35:79:79	4649070	2					
ANR	4649103	ReturnStatement	return i ;	34:1:834:842	4649070	3	True				
ANR	4649104	Identifier	i		4649070	0					
ANR	4649105	ReturnType	static ut32		4649070	1					
ANR	4649106	Identifier	consume_chars		4649070	2					
ANR	4649107	ParameterList	"const char * input , char b"		4649070	3					
ANR	4649108	Parameter	const char * input	26:26:705:721	4649070	0	True				
ANR	4649109	ParameterType	const char *		4649070	0					
ANR	4649110	Identifier	input		4649070	1					
ANR	4649111	Parameter	char b	26:45:724:729	4649070	1	True				
ANR	4649112	ParameterType	char		4649070	0					
ANR	4649113	Identifier	b		4649070	1					
ANR	4649114	CFGEntryNode	ENTRY		4649070		True				
ANR	4649115	CFGExitNode	EXIT		4649070		True				
ANR	4649116	Symbol	input		4649070						
ANR	4649117	Symbol	b		4649070						
ANR	4649118	Symbol	* input		4649070						
ANR	4649119	Symbol	i		4649070						
ANR	4649120	Function	perform_mapped_file_yank	37:0:847:3111							
ANR	4649121	FunctionDef	"perform_mapped_file_yank (RCore * core , ut64 offset , ut64 len , const char * filename)"		4649120	0					
ANR	4649122	CompoundStatement		37:94:941:3111	4649120	0					
ANR	4649123	IdentifierDeclStatement	RIODesc * yankdesc = NULL ;	40:1:1044:1068	4649120	0	True				
ANR	4649124	IdentifierDecl	* yankdesc = NULL		4649120	0					
ANR	4649125	IdentifierDeclType	RIODesc *		4649120	0					
ANR	4649126	Identifier	yankdesc		4649120	1					
ANR	4649127	AssignmentExpression	* yankdesc = NULL		4649120	2		=			
ANR	4649128	Identifier	NULL		4649120	0					
ANR	4649129	Identifier	NULL		4649120	1					
ANR	4649130	IdentifierDeclStatement	"ut64 fd = core -> file ? core -> file -> fd : - 1 , yank_file_sz = 0 , loadaddr = 0 , addr = offset ;"	41:1:1071:1164	4649120	1	True				
ANR	4649131	IdentifierDecl	fd = core -> file ? core -> file -> fd : - 1		4649120	0					
ANR	4649132	IdentifierDeclType	ut64		4649120	0					
ANR	4649133	Identifier	fd		4649120	1					
ANR	4649134	AssignmentExpression	fd = core -> file ? core -> file -> fd : - 1		4649120	2		=			
ANR	4649135	Identifier	fd		4649120	0					
ANR	4649136	ConditionalExpression	core -> file ? core -> file -> fd : - 1		4649120	1					
ANR	4649137	Condition	core -> file		4649120	0					
ANR	4649138	PtrMemberAccess	core -> file		4649120	0					
ANR	4649139	Identifier	core		4649120	0					
ANR	4649140	Identifier	file		4649120	1					
ANR	4649141	PtrMemberAccess	core -> file -> fd		4649120	1					
ANR	4649142	PtrMemberAccess	core -> file		4649120	0					
ANR	4649143	Identifier	core		4649120	0					
ANR	4649144	Identifier	file		4649120	1					
ANR	4649145	Identifier	fd		4649120	1					
ANR	4649146	UnaryOperationExpression	- 1		4649120	2					
ANR	4649147	UnaryOperator	-		4649120	0					
ANR	4649148	PrimaryExpression	1		4649120	1					
ANR	4649149	IdentifierDecl	yank_file_sz = 0		4649120	1					
ANR	4649150	IdentifierDeclType	ut64		4649120	0					
ANR	4649151	Identifier	yank_file_sz		4649120	1					
ANR	4649152	AssignmentExpression	yank_file_sz = 0		4649120	2		=			
ANR	4649153	Identifier	yank_file_sz		4649120	0					
ANR	4649154	PrimaryExpression	0		4649120	1					
ANR	4649155	IdentifierDecl	loadaddr = 0		4649120	2					
ANR	4649156	IdentifierDeclType	ut64		4649120	0					
ANR	4649157	Identifier	loadaddr		4649120	1					
ANR	4649158	AssignmentExpression	loadaddr = 0		4649120	2		=			
ANR	4649159	Identifier	loadaddr		4649120	0					
ANR	4649160	PrimaryExpression	0		4649120	1					
ANR	4649161	IdentifierDecl	addr = offset		4649120	3					
ANR	4649162	IdentifierDeclType	ut64		4649120	0					
ANR	4649163	Identifier	addr		4649120	1					
ANR	4649164	AssignmentExpression	addr = offset		4649120	2		=			
ANR	4649165	Identifier	offset		4649120	0					
ANR	4649166	Identifier	offset		4649120	1					
ANR	4649167	IdentifierDeclStatement	int res = false ;	43:1:1167:1182	4649120	2	True				
ANR	4649168	IdentifierDecl	res = false		4649120	0					
ANR	4649169	IdentifierDeclType	int		4649120	0					
ANR	4649170	Identifier	res		4649120	1					
ANR	4649171	AssignmentExpression	res = false		4649120	2		=			
ANR	4649172	Identifier	false		4649120	0					
ANR	4649173	Identifier	false		4649120	1					
ANR	4649174	IfStatement	if ( filename && * filename )		4649120	3					
ANR	4649175	Condition	filename && * filename	45:5:1190:1210	4649120	0	True				
ANR	4649176	AndExpression	filename && * filename		4649120	0		&&			
ANR	4649177	Identifier	filename		4649120	0					
ANR	4649178	UnaryOperationExpression	* filename		4649120	1					
ANR	4649179	UnaryOperator	*		4649120	0					
ANR	4649180	Identifier	filename		4649120	1					
ANR	4649181	CompoundStatement		11:2:344:362	4649120	1					
ANR	4649182	IdentifierDeclStatement	"ut64 load_align = r_config_get_i ( core -> config , ""file.loadalign"" ) ;"	46:2:1217:1282	4649120	0	True				
ANR	4649183	IdentifierDecl	"load_align = r_config_get_i ( core -> config , ""file.loadalign"" )"		4649120	0					
ANR	4649184	IdentifierDeclType	ut64		4649120	0					
ANR	4649185	Identifier	load_align		4649120	1					
ANR	4649186	AssignmentExpression	"load_align = r_config_get_i ( core -> config , ""file.loadalign"" )"		4649120	2		=			
ANR	4649187	Identifier	load_align		4649120	0					
ANR	4649188	CallExpression	"r_config_get_i ( core -> config , ""file.loadalign"" )"		4649120	1					
ANR	4649189	Callee	r_config_get_i		4649120	0					
ANR	4649190	Identifier	r_config_get_i		4649120	0					
ANR	4649191	ArgumentList	core -> config		4649120	1					
ANR	4649192	Argument	core -> config		4649120	0					
ANR	4649193	PtrMemberAccess	core -> config		4649120	0					
ANR	4649194	Identifier	core		4649120	0					
ANR	4649195	Identifier	config		4649120	1					
ANR	4649196	Argument	"""file.loadalign"""		4649120	1					
ANR	4649197	PrimaryExpression	"""file.loadalign"""		4649120	0					
ANR	4649198	IdentifierDeclStatement	RIOMap * map = NULL ;	47:2:1286:1304	4649120	1	True				
ANR	4649199	IdentifierDecl	* map = NULL		4649120	0					
ANR	4649200	IdentifierDeclType	RIOMap *		4649120	0					
ANR	4649201	Identifier	map		4649120	1					
ANR	4649202	AssignmentExpression	* map = NULL		4649120	2		=			
ANR	4649203	Identifier	NULL		4649120	0					
ANR	4649204	Identifier	NULL		4649120	1					
ANR	4649205	ExpressionStatement	"yankdesc = r_io_open_nomap ( core -> io , filename , R_PERM_R , 0644 )"	48:2:1308:1371	4649120	2	True				
ANR	4649206	AssignmentExpression	"yankdesc = r_io_open_nomap ( core -> io , filename , R_PERM_R , 0644 )"		4649120	0		=			
ANR	4649207	Identifier	yankdesc		4649120	0					
ANR	4649208	CallExpression	"r_io_open_nomap ( core -> io , filename , R_PERM_R , 0644 )"		4649120	1					
ANR	4649209	Callee	r_io_open_nomap		4649120	0					
ANR	4649210	Identifier	r_io_open_nomap		4649120	0					
ANR	4649211	ArgumentList	core -> io		4649120	1					
ANR	4649212	Argument	core -> io		4649120	0					
ANR	4649213	PtrMemberAccess	core -> io		4649120	0					
ANR	4649214	Identifier	core		4649120	0					
ANR	4649215	Identifier	io		4649120	1					
ANR	4649216	Argument	filename		4649120	1					
ANR	4649217	Identifier	filename		4649120	0					
ANR	4649218	Argument	R_PERM_R		4649120	2					
ANR	4649219	Identifier	R_PERM_R		4649120	0					
ANR	4649220	Argument	0644		4649120	3					
ANR	4649221	PrimaryExpression	0644		4649120	0					
ANR	4649222	IfStatement	if ( yankdesc && load_align )		4649120	3					
ANR	4649223	Condition	yankdesc && load_align	50:6:1419:1440	4649120	0	True				
ANR	4649224	AndExpression	yankdesc && load_align		4649120	0		&&			
ANR	4649225	Identifier	yankdesc		4649120	0					
ANR	4649226	Identifier	load_align		4649120	1					
ANR	4649227	CompoundStatement		14:30:501:501	4649120	1					
ANR	4649228	ExpressionStatement	yank_file_sz = r_io_size ( core -> io )	51:3:1448:1483	4649120	0	True				
ANR	4649229	AssignmentExpression	yank_file_sz = r_io_size ( core -> io )		4649120	0		=			
ANR	4649230	Identifier	yank_file_sz		4649120	0					
ANR	4649231	CallExpression	r_io_size ( core -> io )		4649120	1					
ANR	4649232	Callee	r_io_size		4649120	0					
ANR	4649233	Identifier	r_io_size		4649120	0					
ANR	4649234	ArgumentList	core -> io		4649120	1					
ANR	4649235	Argument	core -> io		4649120	0					
ANR	4649236	PtrMemberAccess	core -> io		4649120	0					
ANR	4649237	Identifier	core		4649120	0					
ANR	4649238	Identifier	io		4649120	1					
ANR	4649239	ExpressionStatement	"map = r_io_map_add_next_available ( core -> io , yankdesc -> fd , R_PERM_R , 0 , 0 , yank_file_sz , load_align )"	52:3:1488:1588	4649120	1	True				
ANR	4649240	AssignmentExpression	"map = r_io_map_add_next_available ( core -> io , yankdesc -> fd , R_PERM_R , 0 , 0 , yank_file_sz , load_align )"		4649120	0		=			
ANR	4649241	Identifier	map		4649120	0					
ANR	4649242	CallExpression	"r_io_map_add_next_available ( core -> io , yankdesc -> fd , R_PERM_R , 0 , 0 , yank_file_sz , load_align )"		4649120	1					
ANR	4649243	Callee	r_io_map_add_next_available		4649120	0					
ANR	4649244	Identifier	r_io_map_add_next_available		4649120	0					
ANR	4649245	ArgumentList	core -> io		4649120	1					
ANR	4649246	Argument	core -> io		4649120	0					
ANR	4649247	PtrMemberAccess	core -> io		4649120	0					
ANR	4649248	Identifier	core		4649120	0					
ANR	4649249	Identifier	io		4649120	1					
ANR	4649250	Argument	yankdesc -> fd		4649120	1					
ANR	4649251	PtrMemberAccess	yankdesc -> fd		4649120	0					
ANR	4649252	Identifier	yankdesc		4649120	0					
ANR	4649253	Identifier	fd		4649120	1					
ANR	4649254	Argument	R_PERM_R		4649120	2					
ANR	4649255	Identifier	R_PERM_R		4649120	0					
ANR	4649256	Argument	0		4649120	3					
ANR	4649257	PrimaryExpression	0		4649120	0					
ANR	4649258	Argument	0		4649120	4					
ANR	4649259	PrimaryExpression	0		4649120	0					
ANR	4649260	Argument	yank_file_sz		4649120	5					
ANR	4649261	Identifier	yank_file_sz		4649120	0					
ANR	4649262	Argument	load_align		4649120	6					
ANR	4649263	Identifier	load_align		4649120	0					
ANR	4649264	ExpressionStatement	loadaddr = map ? map -> itv . addr : - 1	53:3:1593:1626	4649120	2	True				
ANR	4649265	AssignmentExpression	loadaddr = map ? map -> itv . addr : - 1		4649120	0		=			
ANR	4649266	Identifier	loadaddr		4649120	0					
ANR	4649267	ConditionalExpression	map ? map -> itv . addr : - 1		4649120	1					
ANR	4649268	Condition	map		4649120	0					
ANR	4649269	Identifier	map		4649120	0					
ANR	4649270	MemberAccess	map -> itv . addr		4649120	1					
ANR	4649271	PtrMemberAccess	map -> itv		4649120	0					
ANR	4649272	Identifier	map		4649120	0					
ANR	4649273	Identifier	itv		4649120	1					
ANR	4649274	Identifier	addr		4649120	1					
ANR	4649275	UnaryOperationExpression	- 1		4649120	2					
ANR	4649276	UnaryOperator	-		4649120	0					
ANR	4649277	PrimaryExpression	1		4649120	1					
ANR	4649278	IfStatement	if ( yankdesc && map && loadaddr != - 1 )		4649120	3					
ANR	4649279	Condition	yankdesc && map && loadaddr != - 1	54:7:1635:1667	4649120	0	True				
ANR	4649280	AndExpression	yankdesc && map && loadaddr != - 1		4649120	0		&&			
ANR	4649281	Identifier	yankdesc		4649120	0					
ANR	4649282	AndExpression	map && loadaddr != - 1		4649120	1		&&			
ANR	4649283	Identifier	map		4649120	0					
ANR	4649284	EqualityExpression	loadaddr != - 1		4649120	1		!=			
ANR	4649285	Identifier	loadaddr		4649120	0					
ANR	4649286	UnaryOperationExpression	- 1		4649120	1					
ANR	4649287	UnaryOperator	-		4649120	0					
ANR	4649288	PrimaryExpression	1		4649120	1					
ANR	4649289	CompoundStatement		18:42:728:728	4649120	1					
ANR	4649290	ExpressionStatement	addr += loadaddr	57:4:1773:1789	4649120	0	True				
ANR	4649291	AssignmentExpression	addr += loadaddr		4649120	0		+=			
ANR	4649292	Identifier	addr		4649120	0					
ANR	4649293	Identifier	loadaddr		4649120	1					
ANR	4649294	ElseStatement	else		4649120	0					
ANR	4649295	IfStatement	if ( yankdesc )		4649120	0					
ANR	4649296	Condition	yankdesc	58:14:1805:1812	4649120	0	True				
ANR	4649297	Identifier	yankdesc		4649120	0					
ANR	4649298	CompoundStatement		22:24:873:873	4649120	1					
ANR	4649299	ExpressionStatement	"eprintf ( ""Unable to map the opened file: %s"" , filename )"	59:4:1821:1876	4649120	0	True				
ANR	4649300	CallExpression	"eprintf ( ""Unable to map the opened file: %s"" , filename )"		4649120	0					
ANR	4649301	Callee	eprintf		4649120	0					
ANR	4649302	Identifier	eprintf		4649120	0					
ANR	4649303	ArgumentList	"""Unable to map the opened file: %s"""		4649120	1					
ANR	4649304	Argument	"""Unable to map the opened file: %s"""		4649120	0					
ANR	4649305	PrimaryExpression	"""Unable to map the opened file: %s"""		4649120	0					
ANR	4649306	Argument	filename		4649120	1					
ANR	4649307	Identifier	filename		4649120	0					
ANR	4649308	ExpressionStatement	r_io_desc_close ( yankdesc )	60:4:1882:1908	4649120	1	True				
ANR	4649309	CallExpression	r_io_desc_close ( yankdesc )		4649120	0					
ANR	4649310	Callee	r_io_desc_close		4649120	0					
ANR	4649311	Identifier	r_io_desc_close		4649120	0					
ANR	4649312	ArgumentList	yankdesc		4649120	1					
ANR	4649313	Argument	yankdesc		4649120	0					
ANR	4649314	Identifier	yankdesc		4649120	0					
ANR	4649315	ExpressionStatement	yankdesc = NULL	61:4:1914:1929	4649120	2	True				
ANR	4649316	AssignmentExpression	yankdesc = NULL		4649120	0		=			
ANR	4649317	Identifier	yankdesc		4649120	0					
ANR	4649318	Identifier	NULL		4649120	1					
ANR	4649319	ElseStatement	else		4649120	0					
ANR	4649320	CompoundStatement		26:10:999:999	4649120	0					
ANR	4649321	ExpressionStatement	"eprintf ( ""Unable to open the file: %s"" , filename )"	63:4:1947:1996	4649120	0	True				
ANR	4649322	CallExpression	"eprintf ( ""Unable to open the file: %s"" , filename )"		4649120	0					
ANR	4649323	Callee	eprintf		4649120	0					
ANR	4649324	Identifier	eprintf		4649120	0					
ANR	4649325	ArgumentList	"""Unable to open the file: %s"""		4649120	1					
ANR	4649326	Argument	"""Unable to open the file: %s"""		4649120	0					
ANR	4649327	PrimaryExpression	"""Unable to open the file: %s"""		4649120	0					
ANR	4649328	Argument	filename		4649120	1					
ANR	4649329	Identifier	filename		4649120	0					
ANR	4649330	IfStatement	if ( len == - 1 )		4649120	4					
ANR	4649331	Condition	len == - 1	69:5:2060:2068	4649120	0	True				
ANR	4649332	EqualityExpression	len == - 1		4649120	0		==			
ANR	4649333	Identifier	len		4649120	0					
ANR	4649334	UnaryOperationExpression	- 1		4649120	1					
ANR	4649335	UnaryOperator	-		4649120	0					
ANR	4649336	PrimaryExpression	1		4649120	1					
ANR	4649337	CompoundStatement		33:16:1129:1129	4649120	1					
ANR	4649338	ExpressionStatement	len = yank_file_sz	70:2:2075:2093	4649120	0	True				
ANR	4649339	AssignmentExpression	len = yank_file_sz		4649120	0		=			
ANR	4649340	Identifier	len		4649120	0					
ANR	4649341	Identifier	yank_file_sz		4649120	1					
ANR	4649342	IfStatement	if ( yankdesc )		4649120	5					
ANR	4649343	Condition	yankdesc	75:5:2200:2207	4649120	0	True				
ANR	4649344	Identifier	yankdesc		4649120	0					
ANR	4649345	CompoundStatement		42:2:1377:1392	4649120	1					
ANR	4649346	IdentifierDeclStatement	"ut64 res = r_io_seek ( core -> io , addr , R_IO_SEEK_SET ) ;"	76:2:2214:2266	4649120	0	True				
ANR	4649347	IdentifierDecl	"res = r_io_seek ( core -> io , addr , R_IO_SEEK_SET )"		4649120	0					
ANR	4649348	IdentifierDeclType	ut64		4649120	0					
ANR	4649349	Identifier	res		4649120	1					
ANR	4649350	AssignmentExpression	"res = r_io_seek ( core -> io , addr , R_IO_SEEK_SET )"		4649120	2		=			
ANR	4649351	Identifier	res		4649120	0					
ANR	4649352	CallExpression	"r_io_seek ( core -> io , addr , R_IO_SEEK_SET )"		4649120	1					
ANR	4649353	Callee	r_io_seek		4649120	0					
ANR	4649354	Identifier	r_io_seek		4649120	0					
ANR	4649355	ArgumentList	core -> io		4649120	1					
ANR	4649356	Argument	core -> io		4649120	0					
ANR	4649357	PtrMemberAccess	core -> io		4649120	0					
ANR	4649358	Identifier	core		4649120	0					
ANR	4649359	Identifier	io		4649120	1					
ANR	4649360	Argument	addr		4649120	1					
ANR	4649361	Identifier	addr		4649120	0					
ANR	4649362	Argument	R_IO_SEEK_SET		4649120	2					
ANR	4649363	Identifier	R_IO_SEEK_SET		4649120	0					
ANR	4649364	IdentifierDeclStatement	ut64 actual_len = len <= yank_file_sz ? len : 0 ;	77:2:2270:2315	4649120	1	True				
ANR	4649365	IdentifierDecl	actual_len = len <= yank_file_sz ? len : 0		4649120	0					
ANR	4649366	IdentifierDeclType	ut64		4649120	0					
ANR	4649367	Identifier	actual_len		4649120	1					
ANR	4649368	AssignmentExpression	actual_len = len <= yank_file_sz ? len : 0		4649120	2		=			
ANR	4649369	Identifier	actual_len		4649120	0					
ANR	4649370	ConditionalExpression	len <= yank_file_sz ? len : 0		4649120	1					
ANR	4649371	Condition	len <= yank_file_sz		4649120	0					
ANR	4649372	RelationalExpression	len <= yank_file_sz		4649120	0		<=			
ANR	4649373	Identifier	len		4649120	0					
ANR	4649374	Identifier	yank_file_sz		4649120	1					
ANR	4649375	Identifier	len		4649120	1					
ANR	4649376	PrimaryExpression	0		4649120	2					
ANR	4649377	IdentifierDeclStatement	ut8 * buf = NULL ;	78:2:2319:2334	4649120	2	True				
ANR	4649378	IdentifierDecl	* buf = NULL		4649120	0					
ANR	4649379	IdentifierDeclType	ut8 *		4649120	0					
ANR	4649380	Identifier	buf		4649120	1					
ANR	4649381	AssignmentExpression	* buf = NULL		4649120	2		=			
ANR	4649382	Identifier	NULL		4649120	0					
ANR	4649383	Identifier	NULL		4649120	1					
ANR	4649384	IfStatement	if ( actual_len > 0 && res == addr )		4649120	3					
ANR	4649385	Condition	actual_len > 0 && res == addr	79:6:2342:2370	4649120	0	True				
ANR	4649386	AndExpression	actual_len > 0 && res == addr		4649120	0		&&			
ANR	4649387	RelationalExpression	actual_len > 0		4649120	0		>			
ANR	4649388	Identifier	actual_len		4649120	0					
ANR	4649389	PrimaryExpression	0		4649120	1					
ANR	4649390	EqualityExpression	res == addr		4649120	1		==			
ANR	4649391	Identifier	res		4649120	0					
ANR	4649392	Identifier	addr		4649120	1					
ANR	4649393	CompoundStatement		43:37:1431:1431	4649120	1					
ANR	4649394	ExpressionStatement	buf = malloc ( actual_len )	80:3:2378:2403	4649120	0	True				
ANR	4649395	AssignmentExpression	buf = malloc ( actual_len )		4649120	0		=			
ANR	4649396	Identifier	buf		4649120	0					
ANR	4649397	CallExpression	malloc ( actual_len )		4649120	1					
ANR	4649398	Callee	malloc		4649120	0					
ANR	4649399	Identifier	malloc		4649120	0					
ANR	4649400	ArgumentList	actual_len		4649120	1					
ANR	4649401	Argument	actual_len		4649120	0					
ANR	4649402	Identifier	actual_len		4649120	0					
ANR	4649403	IfStatement	"if ( ! r_io_read_at ( core -> io , addr , buf , actual_len ) )"		4649120	1					
ANR	4649404	Condition	"! r_io_read_at ( core -> io , addr , buf , actual_len )"	81:7:2412:2458	4649120	0	True				
ANR	4649405	UnaryOperationExpression	"! r_io_read_at ( core -> io , addr , buf , actual_len )"		4649120	0					
ANR	4649406	UnaryOperator	!		4649120	0					
ANR	4649407	CallExpression	"r_io_read_at ( core -> io , addr , buf , actual_len )"		4649120	1					
ANR	4649408	Callee	r_io_read_at		4649120	0					
ANR	4649409	Identifier	r_io_read_at		4649120	0					
ANR	4649410	ArgumentList	core -> io		4649120	1					
ANR	4649411	Argument	core -> io		4649120	0					
ANR	4649412	PtrMemberAccess	core -> io		4649120	0					
ANR	4649413	Identifier	core		4649120	0					
ANR	4649414	Identifier	io		4649120	1					
ANR	4649415	Argument	addr		4649120	1					
ANR	4649416	Identifier	addr		4649120	0					
ANR	4649417	Argument	buf		4649120	2					
ANR	4649418	Identifier	buf		4649120	0					
ANR	4649419	Argument	actual_len		4649120	3					
ANR	4649420	Identifier	actual_len		4649120	0					
ANR	4649421	CompoundStatement		45:56:1519:1519	4649120	1					
ANR	4649422	ExpressionStatement	actual_len = 0	82:4:2467:2481	4649120	0	True				
ANR	4649423	AssignmentExpression	actual_len = 0		4649120	0		=			
ANR	4649424	Identifier	actual_len		4649120	0					
ANR	4649425	PrimaryExpression	0		4649120	1					
ANR	4649426	ExpressionStatement	"r_core_yank_set ( core , R_CORE_FOREIGN_ADDR , buf , len )"	84:3:2491:2544	4649120	2	True				
ANR	4649427	CallExpression	"r_core_yank_set ( core , R_CORE_FOREIGN_ADDR , buf , len )"		4649120	0					
ANR	4649428	Callee	r_core_yank_set		4649120	0					
ANR	4649429	Identifier	r_core_yank_set		4649120	0					
ANR	4649430	ArgumentList	core		4649120	1					
ANR	4649431	Argument	core		4649120	0					
ANR	4649432	Identifier	core		4649120	0					
ANR	4649433	Argument	R_CORE_FOREIGN_ADDR		4649120	1					
ANR	4649434	Identifier	R_CORE_FOREIGN_ADDR		4649120	0					
ANR	4649435	Argument	buf		4649120	2					
ANR	4649436	Identifier	buf		4649120	0					
ANR	4649437	Argument	len		4649120	3					
ANR	4649438	Identifier	len		4649120	0					
ANR	4649439	ExpressionStatement	res = true	85:3:2549:2559	4649120	3	True				
ANR	4649440	AssignmentExpression	res = true		4649120	0		=			
ANR	4649441	Identifier	res		4649120	0					
ANR	4649442	Identifier	true		4649120	1					
ANR	4649443	ElseStatement	else		4649120	0					
ANR	4649444	IfStatement	if ( res != addr )		4649120	0					
ANR	4649445	Condition	res != addr	86:13:2574:2584	4649120	0	True				
ANR	4649446	EqualityExpression	res != addr		4649120	0		!=			
ANR	4649447	Identifier	res		4649120	0					
ANR	4649448	Identifier	addr		4649120	1					
ANR	4649449	CompoundStatement		50:26:1645:1645	4649120	1					
ANR	4649450	Statement	eprintf	87:3:2592:2598	4649120	0	True				
ANR	4649451	Statement	(	87:11:2600:2600	4649120	1	True				
ANR	4649452	Statement	"""ERROR: Unable to yank data from file: (loadaddr (0x%"""	88:4:2606:2659	4649120	2	True				
ANR	4649453	Statement	PFMT64x	89:4:2665:2671	4649120	3	True				
ANR	4649454	Statement	""") (addr (0x%"""	89:12:2673:2686	4649120	4	True				
ANR	4649455	Statement	PFMT64x	90:4:2692:2698	4649120	5	True				
ANR	4649456	Statement	""") > file_sz (0x%"""	90:12:2700:2717	4649120	6	True				
ANR	4649457	Statement	PFMT64x	90:30:2718:2724	4649120	7	True				
ANR	4649458	Statement	""")\\n"""	90:38:2726:2730	4649120	8	True				
ANR	4649459	Statement	","	90:43:2731:2731	4649120	9	True				
ANR	4649460	Statement	res	90:45:2733:2735	4649120	10	True				
ANR	4649461	Statement	","	90:48:2736:2736	4649120	11	True				
ANR	4649462	Statement	addr	90:50:2738:2741	4649120	12	True				
ANR	4649463	Statement	","	90:54:2742:2742	4649120	13	True				
ANR	4649464	Statement	yank_file_sz	91:4:2748:2759	4649120	14	True				
ANR	4649465	Statement	)	91:17:2761:2761	4649120	15	True				
ANR	4649466	ExpressionStatement		91:18:2762:2762	4649120	16	True				
ANR	4649467	ElseStatement	else		4649120	0					
ANR	4649468	IfStatement	if ( actual_len == 0 )		4649120	0					
ANR	4649469	Condition	actual_len == 0	92:13:2777:2791	4649120	0	True				
ANR	4649470	EqualityExpression	actual_len == 0		4649120	0		==			
ANR	4649471	Identifier	actual_len		4649120	0					
ANR	4649472	PrimaryExpression	0		4649120	1					
ANR	4649473	CompoundStatement		56:30:1852:1852	4649120	1					
ANR	4649474	Statement	eprintf	93:3:2799:2805	4649120	0	True				
ANR	4649475	Statement	(	93:11:2807:2807	4649120	1	True				
ANR	4649476	Statement	"""ERROR: Unable to yank from file: addr+len (0x%"""	94:4:2813:2860	4649120	2	True				
ANR	4649477	Statement	PFMT64x	95:4:2866:2872	4649120	3	True				
ANR	4649478	Statement	""") > file_sz (0x%"""	95:12:2874:2891	4649120	4	True				
ANR	4649479	Statement	PFMT64x	95:30:2892:2898	4649120	5	True				
ANR	4649480	Statement	""")\\n"""	95:38:2900:2904	4649120	6	True				
ANR	4649481	Statement	","	95:43:2905:2905	4649120	7	True				
ANR	4649482	Statement	addr	95:45:2907:2910	4649120	8	True				
ANR	4649483	Statement	+	95:50:2912:2912	4649120	9	True				
ANR	4649484	Statement	len	95:52:2914:2916	4649120	10	True				
ANR	4649485	Statement	","	95:55:2917:2917	4649120	11	True				
ANR	4649486	Statement	yank_file_sz	96:4:2923:2934	4649120	12	True				
ANR	4649487	Statement	)	96:17:2936:2936	4649120	13	True				
ANR	4649488	ExpressionStatement		96:18:2937:2937	4649120	14	True				
ANR	4649489	ExpressionStatement	r_io_desc_close ( yankdesc )	98:2:2945:2971	4649120	4	True				
ANR	4649490	CallExpression	r_io_desc_close ( yankdesc )		4649120	0					
ANR	4649491	Callee	r_io_desc_close		4649120	0					
ANR	4649492	Identifier	r_io_desc_close		4649120	0					
ANR	4649493	ArgumentList	yankdesc		4649120	1					
ANR	4649494	Argument	yankdesc		4649120	0					
ANR	4649495	Identifier	yankdesc		4649120	0					
ANR	4649496	ExpressionStatement	free ( buf )	99:2:2975:2985	4649120	5	True				
ANR	4649497	CallExpression	free ( buf )		4649120	0					
ANR	4649498	Callee	free		4649120	0					
ANR	4649499	Identifier	free		4649120	0					
ANR	4649500	ArgumentList	buf		4649120	1					
ANR	4649501	Argument	buf		4649120	0					
ANR	4649502	Identifier	buf		4649120	0					
ANR	4649503	IfStatement	if ( fd != - 1 )		4649120	6					
ANR	4649504	Condition	fd != - 1	101:5:2995:3002	4649120	0	True				
ANR	4649505	EqualityExpression	fd != - 1		4649120	0		!=			
ANR	4649506	Identifier	fd		4649120	0					
ANR	4649507	UnaryOperationExpression	- 1		4649120	1					
ANR	4649508	UnaryOperator	-		4649120	0					
ANR	4649509	PrimaryExpression	1		4649120	1					
ANR	4649510	CompoundStatement		65:15:2063:2063	4649120	1					
ANR	4649511	ExpressionStatement	"r_io_use_fd ( core -> io , fd )"	102:2:3009:3035	4649120	0	True				
ANR	4649512	CallExpression	"r_io_use_fd ( core -> io , fd )"		4649120	0					
ANR	4649513	Callee	r_io_use_fd		4649120	0					
ANR	4649514	Identifier	r_io_use_fd		4649120	0					
ANR	4649515	ArgumentList	core -> io		4649120	1					
ANR	4649516	Argument	core -> io		4649120	0					
ANR	4649517	PtrMemberAccess	core -> io		4649120	0					
ANR	4649518	Identifier	core		4649120	0					
ANR	4649519	Identifier	io		4649120	1					
ANR	4649520	Argument	fd		4649120	1					
ANR	4649521	Identifier	fd		4649120	0					
ANR	4649522	ExpressionStatement	core -> switch_file_view = 1	103:2:3039:3065	4649120	1	True				
ANR	4649523	AssignmentExpression	core -> switch_file_view = 1		4649120	0		=			
ANR	4649524	PtrMemberAccess	core -> switch_file_view		4649120	0					
ANR	4649525	Identifier	core		4649120	0					
ANR	4649526	Identifier	switch_file_view		4649120	1					
ANR	4649527	PrimaryExpression	1		4649120	1					
ANR	4649528	ExpressionStatement	r_core_block_read ( core )	104:2:3069:3093	4649120	2	True				
ANR	4649529	CallExpression	r_core_block_read ( core )		4649120	0					
ANR	4649530	Callee	r_core_block_read		4649120	0					
ANR	4649531	Identifier	r_core_block_read		4649120	0					
ANR	4649532	ArgumentList	core		4649120	1					
ANR	4649533	Argument	core		4649120	0					
ANR	4649534	Identifier	core		4649120	0					
ANR	4649535	ReturnStatement	return res ;	106:1:3099:3109	4649120	7	True				
ANR	4649536	Identifier	res		4649120	0					
ANR	4649537	ReturnType	static int		4649120	1					
ANR	4649538	Identifier	perform_mapped_file_yank		4649120	2					
ANR	4649539	ParameterList	"RCore * core , ut64 offset , ut64 len , const char * filename"		4649120	3					
ANR	4649540	Parameter	RCore * core	37:36:883:893	4649120	0	True				
ANR	4649541	ParameterType	RCore *		4649120	0					
ANR	4649542	Identifier	core		4649120	1					
ANR	4649543	Parameter	ut64 offset	37:49:896:906	4649120	1	True				
ANR	4649544	ParameterType	ut64		4649120	0					
ANR	4649545	Identifier	offset		4649120	1					
ANR	4649546	Parameter	ut64 len	37:62:909:916	4649120	2	True				
ANR	4649547	ParameterType	ut64		4649120	0					
ANR	4649548	Identifier	len		4649120	1					
ANR	4649549	Parameter	const char * filename	37:72:919:938	4649120	3	True				
ANR	4649550	ParameterType	const char *		4649120	0					
ANR	4649551	Identifier	filename		4649120	1					
ANR	4649552	CFGEntryNode	ENTRY		4649120		True				
ANR	4649553	CFGExitNode	EXIT		4649120		True				
ANR	4649554	Symbol	* yankdesc		4649120						
ANR	4649555	Symbol	map -> itv		4649120						
ANR	4649556	Symbol	R_IO_SEEK_SET		4649120						
ANR	4649557	Symbol	* map		4649120						
ANR	4649558	Symbol	* core		4649120						
ANR	4649559	Symbol	r_io_map_add_next_available		4649120						
ANR	4649560	Symbol	core -> switch_file_view		4649120						
ANR	4649561	Symbol	loadaddr		4649120						
ANR	4649562	Symbol	len		4649120						
ANR	4649563	Symbol	core -> io		4649120						
ANR	4649564	Symbol	actual_len		4649120						
ANR	4649565	Symbol	R_PERM_R		4649120						
ANR	4649566	Symbol	map -> itv . addr		4649120						
ANR	4649567	Symbol	addr		4649120						
ANR	4649568	Symbol	map		4649120						
ANR	4649569	Symbol	* * core		4649120						
ANR	4649570	Symbol	core -> config		4649120						
ANR	4649571	Symbol	res		4649120						
ANR	4649572	Symbol	malloc		4649120						
ANR	4649573	Symbol	load_align		4649120						
ANR	4649574	Symbol	NULL		4649120						
ANR	4649575	Symbol	r_io_open_nomap		4649120						
ANR	4649576	Symbol	offset		4649120						
ANR	4649577	Symbol	yankdesc		4649120						
ANR	4649578	Symbol	core -> file		4649120						
ANR	4649579	Symbol	false		4649120						
ANR	4649580	Symbol	r_io_read_at		4649120						
ANR	4649581	Symbol	R_CORE_FOREIGN_ADDR		4649120						
ANR	4649582	Symbol	core		4649120						
ANR	4649583	Symbol	yank_file_sz		4649120						
ANR	4649584	Symbol	* core -> file		4649120						
ANR	4649585	Symbol	buf		4649120						
ANR	4649586	Symbol	filename		4649120						
ANR	4649587	Symbol	* filename		4649120						
ANR	4649588	Symbol	yankdesc -> fd		4649120						
ANR	4649589	Symbol	r_io_seek		4649120						
ANR	4649590	Symbol	r_config_get_i		4649120						
ANR	4649591	Symbol	core -> file -> fd		4649120						
ANR	4649592	Symbol	true		4649120						
ANR	4649593	Symbol	r_io_size		4649120						
ANR	4649594	Symbol	fd		4649120						
ANR	4649595	Function	r_core_yank_set	109:0:3114:3461							
ANR	4649596	FunctionDef	"r_core_yank_set (RCore * core , ut64 addr , const ut8 * buf , ut32 len)"		4649595	0					
ANR	4649597	CompoundStatement		109:76:3190:3461	4649595	0					
ANR	4649598	IfStatement	if ( buf && len )		4649595	0					
ANR	4649599	Condition	buf && len	111:5:3224:3233	4649595	0	True				
ANR	4649600	AndExpression	buf && len		4649595	0		&&			
ANR	4649601	Identifier	buf		4649595	0					
ANR	4649602	Identifier	len		4649595	1					
ANR	4649603	CompoundStatement		3:17:45:45	4649595	1					
ANR	4649604	ExpressionStatement	"r_buf_set_bytes ( core -> yank_buf , buf , len )"	114:2:3358:3400	4649595	0	True				
ANR	4649605	CallExpression	"r_buf_set_bytes ( core -> yank_buf , buf , len )"		4649595	0					
ANR	4649606	Callee	r_buf_set_bytes		4649595	0					
ANR	4649607	Identifier	r_buf_set_bytes		4649595	0					
ANR	4649608	ArgumentList	core -> yank_buf		4649595	1					
ANR	4649609	Argument	core -> yank_buf		4649595	0					
ANR	4649610	PtrMemberAccess	core -> yank_buf		4649595	0					
ANR	4649611	Identifier	core		4649595	0					
ANR	4649612	Identifier	yank_buf		4649595	1					
ANR	4649613	Argument	buf		4649595	1					
ANR	4649614	Identifier	buf		4649595	0					
ANR	4649615	Argument	len		4649595	2					
ANR	4649616	Identifier	len		4649595	0					
ANR	4649617	ExpressionStatement	core -> yank_addr = addr	115:2:3404:3426	4649595	1	True				
ANR	4649618	AssignmentExpression	core -> yank_addr = addr		4649595	0		=			
ANR	4649619	PtrMemberAccess	core -> yank_addr		4649595	0					
ANR	4649620	Identifier	core		4649595	0					
ANR	4649621	Identifier	yank_addr		4649595	1					
ANR	4649622	Identifier	addr		4649595	1					
ANR	4649623	ReturnStatement	return true ;	116:2:3430:3441	4649595	2	True				
ANR	4649624	Identifier	true		4649595	0					
ANR	4649625	ReturnStatement	return false ;	118:1:3447:3459	4649595	1	True				
ANR	4649626	Identifier	false		4649595	0					
ANR	4649627	ReturnType	R_API int		4649595	1					
ANR	4649628	Identifier	r_core_yank_set		4649595	2					
ANR	4649629	ParameterList	"RCore * core , ut64 addr , const ut8 * buf , ut32 len"		4649595	3					
ANR	4649630	Parameter	RCore * core	109:26:3140:3150	4649595	0	True				
ANR	4649631	ParameterType	RCore *		4649595	0					
ANR	4649632	Identifier	core		4649595	1					
ANR	4649633	Parameter	ut64 addr	109:39:3153:3161	4649595	1	True				
ANR	4649634	ParameterType	ut64		4649595	0					
ANR	4649635	Identifier	addr		4649595	1					
ANR	4649636	Parameter	const ut8 * buf	109:50:3164:3177	4649595	2	True				
ANR	4649637	ParameterType	const ut8 *		4649595	0					
ANR	4649638	Identifier	buf		4649595	1					
ANR	4649639	Parameter	ut32 len	109:66:3180:3187	4649595	3	True				
ANR	4649640	ParameterType	ut32		4649595	0					
ANR	4649641	Identifier	len		4649595	1					
ANR	4649642	CFGEntryNode	ENTRY		4649595		True				
ANR	4649643	CFGExitNode	EXIT		4649595		True				
ANR	4649644	Symbol	core		4649595						
ANR	4649645	Symbol	buf		4649595						
ANR	4649646	Symbol	len		4649595						
ANR	4649647	Symbol	core -> yank_addr		4649595						
ANR	4649648	Symbol	core -> yank_buf		4649595						
ANR	4649649	Symbol	* core		4649595						
ANR	4649650	Symbol	true		4649595						
ANR	4649651	Symbol	false		4649595						
ANR	4649652	Symbol	addr		4649595						
ANR	4649653	Function	r_core_yank_set_str	122:0:3511:3797							
ANR	4649654	FunctionDef	"r_core_yank_set_str (RCore * core , ut64 addr , const char * str , ut32 len)"		4649653	0					
ANR	4649655	CompoundStatement		122:81:3592:3797	4649653	0					
ANR	4649656	IdentifierDeclStatement	"int res = r_core_yank_set ( core , addr , ( ut8 * ) str , len ) ;"	124:1:3622:3677	4649653	0	True				
ANR	4649657	IdentifierDecl	"res = r_core_yank_set ( core , addr , ( ut8 * ) str , len )"		4649653	0					
ANR	4649658	IdentifierDeclType	int		4649653	0					
ANR	4649659	Identifier	res		4649653	1					
ANR	4649660	AssignmentExpression	"res = r_core_yank_set ( core , addr , ( ut8 * ) str , len )"		4649653	2		=			
ANR	4649661	Identifier	res		4649653	0					
ANR	4649662	CallExpression	"r_core_yank_set ( core , addr , ( ut8 * ) str , len )"		4649653	1					
ANR	4649663	Callee	r_core_yank_set		4649653	0					
ANR	4649664	Identifier	r_core_yank_set		4649653	0					
ANR	4649665	ArgumentList	core		4649653	1					
ANR	4649666	Argument	core		4649653	0					
ANR	4649667	Identifier	core		4649653	0					
ANR	4649668	Argument	addr		4649653	1					
ANR	4649669	Identifier	addr		4649653	0					
ANR	4649670	Argument	( ut8 * ) str		4649653	2					
ANR	4649671	CastExpression	( ut8 * ) str		4649653	0					
ANR	4649672	CastTarget	ut8 *		4649653	0					
ANR	4649673	Identifier	str		4649653	1					
ANR	4649674	Argument	len		4649653	3					
ANR	4649675	Identifier	len		4649653	0					
ANR	4649676	IfStatement	if ( res == true )		4649653	1					
ANR	4649677	Condition	res == true	125:5:3684:3694	4649653	0	True				
ANR	4649678	EqualityExpression	res == true		4649653	0		==			
ANR	4649679	Identifier	res		4649653	0					
ANR	4649680	Identifier	true		4649653	1					
ANR	4649681	CompoundStatement		5:2:108:120	4649653	1					
ANR	4649682	IdentifierDeclStatement	ut8 zero = 0 ;	126:2:3701:3713	4649653	0	True				
ANR	4649683	IdentifierDecl	zero = 0		4649653	0					
ANR	4649684	IdentifierDeclType	ut8		4649653	0					
ANR	4649685	Identifier	zero		4649653	1					
ANR	4649686	AssignmentExpression	zero = 0		4649653	2		=			
ANR	4649687	Identifier	zero		4649653	0					
ANR	4649688	PrimaryExpression	0		4649653	1					
ANR	4649689	ExpressionStatement	"r_buf_write_at ( core -> yank_buf , len - 1 , & zero , sizeof ( zero ) )"	127:2:3717:3779	4649653	1	True				
ANR	4649690	CallExpression	"r_buf_write_at ( core -> yank_buf , len - 1 , & zero , sizeof ( zero ) )"		4649653	0					
ANR	4649691	Callee	r_buf_write_at		4649653	0					
ANR	4649692	Identifier	r_buf_write_at		4649653	0					
ANR	4649693	ArgumentList	core -> yank_buf		4649653	1					
ANR	4649694	Argument	core -> yank_buf		4649653	0					
ANR	4649695	PtrMemberAccess	core -> yank_buf		4649653	0					
ANR	4649696	Identifier	core		4649653	0					
ANR	4649697	Identifier	yank_buf		4649653	1					
ANR	4649698	Argument	len - 1		4649653	1					
ANR	4649699	AdditiveExpression	len - 1		4649653	0		-			
ANR	4649700	Identifier	len		4649653	0					
ANR	4649701	PrimaryExpression	1		4649653	1					
ANR	4649702	Argument	& zero		4649653	2					
ANR	4649703	UnaryOperationExpression	& zero		4649653	0					
ANR	4649704	UnaryOperator	&		4649653	0					
ANR	4649705	Identifier	zero		4649653	1					
ANR	4649706	Argument	sizeof ( zero )		4649653	3					
ANR	4649707	SizeofExpression	sizeof ( zero )		4649653	0					
ANR	4649708	Sizeof	sizeof		4649653	0					
ANR	4649709	SizeofOperand	zero		4649653	1					
ANR	4649710	ReturnStatement	return res ;	129:1:3785:3795	4649653	2	True				
ANR	4649711	Identifier	res		4649653	0					
ANR	4649712	ReturnType	R_API int		4649653	1					
ANR	4649713	Identifier	r_core_yank_set_str		4649653	2					
ANR	4649714	ParameterList	"RCore * core , ut64 addr , const char * str , ut32 len"		4649653	3					
ANR	4649715	Parameter	RCore * core	122:30:3541:3551	4649653	0	True				
ANR	4649716	ParameterType	RCore *		4649653	0					
ANR	4649717	Identifier	core		4649653	1					
ANR	4649718	Parameter	ut64 addr	122:43:3554:3562	4649653	1	True				
ANR	4649719	ParameterType	ut64		4649653	0					
ANR	4649720	Identifier	addr		4649653	1					
ANR	4649721	Parameter	const char * str	122:54:3565:3579	4649653	2	True				
ANR	4649722	ParameterType	const char *		4649653	0					
ANR	4649723	Identifier	str		4649653	1					
ANR	4649724	Parameter	ut32 len	122:71:3582:3589	4649653	3	True				
ANR	4649725	ParameterType	ut32		4649653	0					
ANR	4649726	Identifier	len		4649653	1					
ANR	4649727	CFGEntryNode	ENTRY		4649653		True				
ANR	4649728	CFGExitNode	EXIT		4649653		True				
ANR	4649729	Symbol	str		4649653						
ANR	4649730	Symbol	zero		4649653						
ANR	4649731	Symbol	core		4649653						
ANR	4649732	Symbol	res		4649653						
ANR	4649733	Symbol	len		4649653						
ANR	4649734	Symbol	& zero		4649653						
ANR	4649735	Symbol	r_core_yank_set		4649653						
ANR	4649736	Symbol	core -> yank_buf		4649653						
ANR	4649737	Symbol	true		4649653						
ANR	4649738	Symbol	* core		4649653						
ANR	4649739	Symbol	addr		4649653						
ANR	4649740	Function	r_core_yank	132:0:3800:4339							
ANR	4649741	FunctionDef	"r_core_yank (struct r_core_t * core , ut64 addr , int len)"		4649740	0					
ANR	4649742	CompoundStatement		132:65:3865:4339	4649740	0					
ANR	4649743	IdentifierDeclStatement	ut64 curseek = core -> offset ;	133:1:3868:3895	4649740	0	True				
ANR	4649744	IdentifierDecl	curseek = core -> offset		4649740	0					
ANR	4649745	IdentifierDeclType	ut64		4649740	0					
ANR	4649746	Identifier	curseek		4649740	1					
ANR	4649747	AssignmentExpression	curseek = core -> offset		4649740	2		=			
ANR	4649748	Identifier	curseek		4649740	0					
ANR	4649749	PtrMemberAccess	core -> offset		4649740	1					
ANR	4649750	Identifier	core		4649740	0					
ANR	4649751	Identifier	offset		4649740	1					
ANR	4649752	IdentifierDeclStatement	ut8 * buf = NULL ;	134:1:3898:3913	4649740	1	True				
ANR	4649753	IdentifierDecl	* buf = NULL		4649740	0					
ANR	4649754	IdentifierDeclType	ut8 *		4649740	0					
ANR	4649755	Identifier	buf		4649740	1					
ANR	4649756	AssignmentExpression	* buf = NULL		4649740	2		=			
ANR	4649757	Identifier	NULL		4649740	0					
ANR	4649758	Identifier	NULL		4649740	1					
ANR	4649759	IfStatement	if ( len < 0 )		4649740	2					
ANR	4649760	Condition	len < 0	135:5:3920:3926	4649740	0	True				
ANR	4649761	RelationalExpression	len < 0		4649740	0		<			
ANR	4649762	Identifier	len		4649740	0					
ANR	4649763	PrimaryExpression	0		4649740	1					
ANR	4649764	CompoundStatement		4:14:63:63	4649740	1					
ANR	4649765	ExpressionStatement	"eprintf ( ""r_core_yank: cannot yank negative bytes\\n"" )"	136:2:3933:3986	4649740	0	True				
ANR	4649766	CallExpression	"eprintf ( ""r_core_yank: cannot yank negative bytes\\n"" )"		4649740	0					
ANR	4649767	Callee	eprintf		4649740	0					
ANR	4649768	Identifier	eprintf		4649740	0					
ANR	4649769	ArgumentList	"""r_core_yank: cannot yank negative bytes\\n"""		4649740	1					
ANR	4649770	Argument	"""r_core_yank: cannot yank negative bytes\\n"""		4649740	0					
ANR	4649771	PrimaryExpression	"""r_core_yank: cannot yank negative bytes\\n"""		4649740	0					
ANR	4649772	ReturnStatement	return false ;	137:2:3990:4002	4649740	1	True				
ANR	4649773	Identifier	false		4649740	0					
ANR	4649774	IfStatement	if ( len == 0 )		4649740	3					
ANR	4649775	Condition	len == 0	139:5:4012:4019	4649740	0	True				
ANR	4649776	EqualityExpression	len == 0		4649740	0		==			
ANR	4649777	Identifier	len		4649740	0					
ANR	4649778	PrimaryExpression	0		4649740	1					
ANR	4649779	CompoundStatement		8:15:156:156	4649740	1					
ANR	4649780	ExpressionStatement	len = core -> blocksize	140:2:4026:4047	4649740	0	True				
ANR	4649781	AssignmentExpression	len = core -> blocksize		4649740	0		=			
ANR	4649782	Identifier	len		4649740	0					
ANR	4649783	PtrMemberAccess	core -> blocksize		4649740	1					
ANR	4649784	Identifier	core		4649740	0					
ANR	4649785	Identifier	blocksize		4649740	1					
ANR	4649786	ExpressionStatement	buf = malloc ( len )	142:1:4053:4071	4649740	4	True				
ANR	4649787	AssignmentExpression	buf = malloc ( len )		4649740	0		=			
ANR	4649788	Identifier	buf		4649740	0					
ANR	4649789	CallExpression	malloc ( len )		4649740	1					
ANR	4649790	Callee	malloc		4649740	0					
ANR	4649791	Identifier	malloc		4649740	0					
ANR	4649792	ArgumentList	len		4649740	1					
ANR	4649793	Argument	len		4649740	0					
ANR	4649794	Identifier	len		4649740	0					
ANR	4649795	IfStatement	if ( ! buf )		4649740	5					
ANR	4649796	Condition	! buf	143:5:4078:4081	4649740	0	True				
ANR	4649797	UnaryOperationExpression	! buf		4649740	0					
ANR	4649798	UnaryOperator	!		4649740	0					
ANR	4649799	Identifier	buf		4649740	1					
ANR	4649800	CompoundStatement		12:11:218:218	4649740	1					
ANR	4649801	ReturnStatement	return false ;	144:2:4088:4100	4649740	0	True				
ANR	4649802	Identifier	false		4649740	0					
ANR	4649803	IfStatement	if ( addr != core -> offset )		4649740	6					
ANR	4649804	Condition	addr != core -> offset	146:5:4110:4129	4649740	0	True				
ANR	4649805	EqualityExpression	addr != core -> offset		4649740	0		!=			
ANR	4649806	Identifier	addr		4649740	0					
ANR	4649807	PtrMemberAccess	core -> offset		4649740	1					
ANR	4649808	Identifier	core		4649740	0					
ANR	4649809	Identifier	offset		4649740	1					
ANR	4649810	CompoundStatement		15:27:266:266	4649740	1					
ANR	4649811	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	147:2:4136:4163	4649740	0	True				
ANR	4649812	CallExpression	"r_core_seek ( core , addr , 1 )"		4649740	0					
ANR	4649813	Callee	r_core_seek		4649740	0					
ANR	4649814	Identifier	r_core_seek		4649740	0					
ANR	4649815	ArgumentList	core		4649740	1					
ANR	4649816	Argument	core		4649740	0					
ANR	4649817	Identifier	core		4649740	0					
ANR	4649818	Argument	addr		4649740	1					
ANR	4649819	Identifier	addr		4649740	0					
ANR	4649820	Argument	1		4649740	2					
ANR	4649821	PrimaryExpression	1		4649740	0					
ANR	4649822	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , len )"	149:1:4169:4208	4649740	7	True				
ANR	4649823	CallExpression	"r_io_read_at ( core -> io , addr , buf , len )"		4649740	0					
ANR	4649824	Callee	r_io_read_at		4649740	0					
ANR	4649825	Identifier	r_io_read_at		4649740	0					
ANR	4649826	ArgumentList	core -> io		4649740	1					
ANR	4649827	Argument	core -> io		4649740	0					
ANR	4649828	PtrMemberAccess	core -> io		4649740	0					
ANR	4649829	Identifier	core		4649740	0					
ANR	4649830	Identifier	io		4649740	1					
ANR	4649831	Argument	addr		4649740	1					
ANR	4649832	Identifier	addr		4649740	0					
ANR	4649833	Argument	buf		4649740	2					
ANR	4649834	Identifier	buf		4649740	0					
ANR	4649835	Argument	len		4649740	3					
ANR	4649836	Identifier	len		4649740	0					
ANR	4649837	ExpressionStatement	"r_core_yank_set ( core , addr , buf , len )"	150:1:4211:4249	4649740	8	True				
ANR	4649838	CallExpression	"r_core_yank_set ( core , addr , buf , len )"		4649740	0					
ANR	4649839	Callee	r_core_yank_set		4649740	0					
ANR	4649840	Identifier	r_core_yank_set		4649740	0					
ANR	4649841	ArgumentList	core		4649740	1					
ANR	4649842	Argument	core		4649740	0					
ANR	4649843	Identifier	core		4649740	0					
ANR	4649844	Argument	addr		4649740	1					
ANR	4649845	Identifier	addr		4649740	0					
ANR	4649846	Argument	buf		4649740	2					
ANR	4649847	Identifier	buf		4649740	0					
ANR	4649848	Argument	len		4649740	3					
ANR	4649849	Identifier	len		4649740	0					
ANR	4649850	IfStatement	if ( curseek != addr )		4649740	9					
ANR	4649851	Condition	curseek != addr	151:5:4256:4270	4649740	0	True				
ANR	4649852	EqualityExpression	curseek != addr		4649740	0		!=			
ANR	4649853	Identifier	curseek		4649740	0					
ANR	4649854	Identifier	addr		4649740	1					
ANR	4649855	CompoundStatement		20:22:407:407	4649740	1					
ANR	4649856	ExpressionStatement	"r_core_seek ( core , curseek , 1 )"	152:2:4277:4307	4649740	0	True				
ANR	4649857	CallExpression	"r_core_seek ( core , curseek , 1 )"		4649740	0					
ANR	4649858	Callee	r_core_seek		4649740	0					
ANR	4649859	Identifier	r_core_seek		4649740	0					
ANR	4649860	ArgumentList	core		4649740	1					
ANR	4649861	Argument	core		4649740	0					
ANR	4649862	Identifier	core		4649740	0					
ANR	4649863	Argument	curseek		4649740	1					
ANR	4649864	Identifier	curseek		4649740	0					
ANR	4649865	Argument	1		4649740	2					
ANR	4649866	PrimaryExpression	1		4649740	0					
ANR	4649867	ExpressionStatement	free ( buf )	154:1:4313:4323	4649740	10	True				
ANR	4649868	CallExpression	free ( buf )		4649740	0					
ANR	4649869	Callee	free		4649740	0					
ANR	4649870	Identifier	free		4649740	0					
ANR	4649871	ArgumentList	buf		4649740	1					
ANR	4649872	Argument	buf		4649740	0					
ANR	4649873	Identifier	buf		4649740	0					
ANR	4649874	ReturnStatement	return true ;	155:1:4326:4337	4649740	11	True				
ANR	4649875	Identifier	true		4649740	0					
ANR	4649876	ReturnType	R_API int		4649740	1					
ANR	4649877	Identifier	r_core_yank		4649740	2					
ANR	4649878	ParameterList	"struct r_core_t * core , ut64 addr , int len"		4649740	3					
ANR	4649879	Parameter	struct r_core_t * core	132:22:3822:3842	4649740	0	True				
ANR	4649880	ParameterType	struct r_core_t *		4649740	0					
ANR	4649881	Identifier	core		4649740	1					
ANR	4649882	Parameter	ut64 addr	132:45:3845:3853	4649740	1	True				
ANR	4649883	ParameterType	ut64		4649740	0					
ANR	4649884	Identifier	addr		4649740	1					
ANR	4649885	Parameter	int len	132:56:3856:3862	4649740	2	True				
ANR	4649886	ParameterType	int		4649740	0					
ANR	4649887	Identifier	len		4649740	1					
ANR	4649888	CFGEntryNode	ENTRY		4649740		True				
ANR	4649889	CFGExitNode	EXIT		4649740		True				
ANR	4649890	Symbol	core -> blocksize		4649740						
ANR	4649891	Symbol	malloc		4649740						
ANR	4649892	Symbol	NULL		4649740						
ANR	4649893	Symbol	* core		4649740						
ANR	4649894	Symbol	false		4649740						
ANR	4649895	Symbol	core -> offset		4649740						
ANR	4649896	Symbol	core		4649740						
ANR	4649897	Symbol	buf		4649740						
ANR	4649898	Symbol	len		4649740						
ANR	4649899	Symbol	curseek		4649740						
ANR	4649900	Symbol	core -> io		4649740						
ANR	4649901	Symbol	true		4649740						
ANR	4649902	Symbol	addr		4649740						
ANR	4649903	Function	r_core_yank_string	159:0:4426:5291							
ANR	4649904	FunctionDef	"r_core_yank_string (RCore * core , ut64 addr , int maxlen)"		4649903	0					
ANR	4649905	CompoundStatement		159:65:4491:5291	4649903	0					
ANR	4649906	IdentifierDeclStatement	ut64 curseek = core -> offset ;	160:1:4494:4521	4649903	0	True				
ANR	4649907	IdentifierDecl	curseek = core -> offset		4649903	0					
ANR	4649908	IdentifierDeclType	ut64		4649903	0					
ANR	4649909	Identifier	curseek		4649903	1					
ANR	4649910	AssignmentExpression	curseek = core -> offset		4649903	2		=			
ANR	4649911	Identifier	curseek		4649903	0					
ANR	4649912	PtrMemberAccess	core -> offset		4649903	1					
ANR	4649913	Identifier	core		4649903	0					
ANR	4649914	Identifier	offset		4649903	1					
ANR	4649915	IdentifierDeclStatement	ut8 * buf = NULL ;	161:1:4524:4539	4649903	1	True				
ANR	4649916	IdentifierDecl	* buf = NULL		4649903	0					
ANR	4649917	IdentifierDeclType	ut8 *		4649903	0					
ANR	4649918	Identifier	buf		4649903	1					
ANR	4649919	AssignmentExpression	* buf = NULL		4649903	2		=			
ANR	4649920	Identifier	NULL		4649903	0					
ANR	4649921	Identifier	NULL		4649903	1					
ANR	4649922	IfStatement	if ( maxlen < 0 )		4649903	2					
ANR	4649923	Condition	maxlen < 0	162:5:4546:4555	4649903	0	True				
ANR	4649924	RelationalExpression	maxlen < 0		4649903	0		<			
ANR	4649925	Identifier	maxlen		4649903	0					
ANR	4649926	PrimaryExpression	0		4649903	1					
ANR	4649927	CompoundStatement		4:17:66:66	4649903	1					
ANR	4649928	ExpressionStatement	"eprintf ( ""r_core_yank_string: cannot yank negative bytes\\n"" )"	163:2:4562:4622	4649903	0	True				
ANR	4649929	CallExpression	"eprintf ( ""r_core_yank_string: cannot yank negative bytes\\n"" )"		4649903	0					
ANR	4649930	Callee	eprintf		4649903	0					
ANR	4649931	Identifier	eprintf		4649903	0					
ANR	4649932	ArgumentList	"""r_core_yank_string: cannot yank negative bytes\\n"""		4649903	1					
ANR	4649933	Argument	"""r_core_yank_string: cannot yank negative bytes\\n"""		4649903	0					
ANR	4649934	PrimaryExpression	"""r_core_yank_string: cannot yank negative bytes\\n"""		4649903	0					
ANR	4649935	ReturnStatement	return false ;	164:2:4626:4638	4649903	1	True				
ANR	4649936	Identifier	false		4649903	0					
ANR	4649937	IfStatement	if ( addr != core -> offset )		4649903	3					
ANR	4649938	Condition	addr != core -> offset	166:5:4648:4667	4649903	0	True				
ANR	4649939	EqualityExpression	addr != core -> offset		4649903	0		!=			
ANR	4649940	Identifier	addr		4649903	0					
ANR	4649941	PtrMemberAccess	core -> offset		4649903	1					
ANR	4649942	Identifier	core		4649903	0					
ANR	4649943	Identifier	offset		4649903	1					
ANR	4649944	CompoundStatement		8:27:178:178	4649903	1					
ANR	4649945	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	167:2:4674:4701	4649903	0	True				
ANR	4649946	CallExpression	"r_core_seek ( core , addr , 1 )"		4649903	0					
ANR	4649947	Callee	r_core_seek		4649903	0					
ANR	4649948	Identifier	r_core_seek		4649903	0					
ANR	4649949	ArgumentList	core		4649903	1					
ANR	4649950	Argument	core		4649903	0					
ANR	4649951	Identifier	core		4649903	0					
ANR	4649952	Argument	addr		4649903	1					
ANR	4649953	Identifier	addr		4649903	0					
ANR	4649954	Argument	1		4649903	2					
ANR	4649955	PrimaryExpression	1		4649903	0					
ANR	4649956	ExpressionStatement	"buf = calloc ( 1 , core -> blocksize + 1 )"	170:1:4784:4821	4649903	4	True				
ANR	4649957	AssignmentExpression	"buf = calloc ( 1 , core -> blocksize + 1 )"		4649903	0		=			
ANR	4649958	Identifier	buf		4649903	0					
ANR	4649959	CallExpression	"calloc ( 1 , core -> blocksize + 1 )"		4649903	1					
ANR	4649960	Callee	calloc		4649903	0					
ANR	4649961	Identifier	calloc		4649903	0					
ANR	4649962	ArgumentList	1		4649903	1					
ANR	4649963	Argument	1		4649903	0					
ANR	4649964	PrimaryExpression	1		4649903	0					
ANR	4649965	Argument	core -> blocksize + 1		4649903	1					
ANR	4649966	AdditiveExpression	core -> blocksize + 1		4649903	0		+			
ANR	4649967	PtrMemberAccess	core -> blocksize		4649903	0					
ANR	4649968	Identifier	core		4649903	0					
ANR	4649969	Identifier	blocksize		4649903	1					
ANR	4649970	PrimaryExpression	1		4649903	1					
ANR	4649971	IfStatement	if ( ! buf )		4649903	5					
ANR	4649972	Condition	! buf	171:5:4828:4831	4649903	0	True				
ANR	4649973	UnaryOperationExpression	! buf		4649903	0					
ANR	4649974	UnaryOperator	!		4649903	0					
ANR	4649975	Identifier	buf		4649903	1					
ANR	4649976	CompoundStatement		13:11:342:342	4649903	1					
ANR	4649977	ReturnStatement	return false ;	172:2:4838:4850	4649903	0	True				
ANR	4649978	Identifier	false		4649903	0					
ANR	4649979	ExpressionStatement	buf [ core -> blocksize ] = 0	174:1:4856:4880	4649903	6	True				
ANR	4649980	AssignmentExpression	buf [ core -> blocksize ] = 0		4649903	0		=			
ANR	4649981	ArrayIndexing	buf [ core -> blocksize ]		4649903	0					
ANR	4649982	Identifier	buf		4649903	0					
ANR	4649983	PtrMemberAccess	core -> blocksize		4649903	1					
ANR	4649984	Identifier	core		4649903	0					
ANR	4649985	Identifier	blocksize		4649903	1					
ANR	4649986	PrimaryExpression	0		4649903	1					
ANR	4649987	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , core -> blocksize )"	175:1:4883:4934	4649903	7	True				
ANR	4649988	CallExpression	"r_io_read_at ( core -> io , addr , buf , core -> blocksize )"		4649903	0					
ANR	4649989	Callee	r_io_read_at		4649903	0					
ANR	4649990	Identifier	r_io_read_at		4649903	0					
ANR	4649991	ArgumentList	core -> io		4649903	1					
ANR	4649992	Argument	core -> io		4649903	0					
ANR	4649993	PtrMemberAccess	core -> io		4649903	0					
ANR	4649994	Identifier	core		4649903	0					
ANR	4649995	Identifier	io		4649903	1					
ANR	4649996	Argument	addr		4649903	1					
ANR	4649997	Identifier	addr		4649903	0					
ANR	4649998	Argument	buf		4649903	2					
ANR	4649999	Identifier	buf		4649903	0					
ANR	4650000	Argument	core -> blocksize		4649903	3					
ANR	4650001	PtrMemberAccess	core -> blocksize		4649903	0					
ANR	4650002	Identifier	core		4649903	0					
ANR	4650003	Identifier	blocksize		4649903	1					
ANR	4650004	IfStatement	if ( maxlen == 0 )		4649903	8					
ANR	4650005	Condition	maxlen == 0	176:5:4941:4951	4649903	0	True				
ANR	4650006	EqualityExpression	maxlen == 0		4649903	0		==			
ANR	4650007	Identifier	maxlen		4649903	0					
ANR	4650008	PrimaryExpression	0		4649903	1					
ANR	4650009	CompoundStatement		18:18:462:462	4649903	1					
ANR	4650010	ExpressionStatement	"maxlen = r_str_nlen ( ( const char * ) buf , core -> blocksize )"	178:2:5029:5086	4649903	0	True				
ANR	4650011	AssignmentExpression	"maxlen = r_str_nlen ( ( const char * ) buf , core -> blocksize )"		4649903	0		=			
ANR	4650012	Identifier	maxlen		4649903	0					
ANR	4650013	CallExpression	"r_str_nlen ( ( const char * ) buf , core -> blocksize )"		4649903	1					
ANR	4650014	Callee	r_str_nlen		4649903	0					
ANR	4650015	Identifier	r_str_nlen		4649903	0					
ANR	4650016	ArgumentList	( const char * ) buf		4649903	1					
ANR	4650017	Argument	( const char * ) buf		4649903	0					
ANR	4650018	CastExpression	( const char * ) buf		4649903	0					
ANR	4650019	CastTarget	const char *		4649903	0					
ANR	4650020	Identifier	buf		4649903	1					
ANR	4650021	Argument	core -> blocksize		4649903	1					
ANR	4650022	PtrMemberAccess	core -> blocksize		4649903	0					
ANR	4650023	Identifier	core		4649903	0					
ANR	4650024	Identifier	blocksize		4649903	1					
ANR	4650025	ElseStatement	else		4649903	0					
ANR	4650026	IfStatement	if ( maxlen > core -> blocksize )		4649903	0					
ANR	4650027	Condition	maxlen > core -> blocksize	179:12:5100:5123	4649903	0	True				
ANR	4650028	RelationalExpression	maxlen > core -> blocksize		4649903	0		>			
ANR	4650029	Identifier	maxlen		4649903	0					
ANR	4650030	PtrMemberAccess	core -> blocksize		4649903	1					
ANR	4650031	Identifier	core		4649903	0					
ANR	4650032	Identifier	blocksize		4649903	1					
ANR	4650033	CompoundStatement		21:38:634:634	4649903	1					
ANR	4650034	ExpressionStatement	maxlen = core -> blocksize	180:2:5130:5154	4649903	0	True				
ANR	4650035	AssignmentExpression	maxlen = core -> blocksize		4649903	0		=			
ANR	4650036	Identifier	maxlen		4649903	0					
ANR	4650037	PtrMemberAccess	core -> blocksize		4649903	1					
ANR	4650038	Identifier	core		4649903	0					
ANR	4650039	Identifier	blocksize		4649903	1					
ANR	4650040	ExpressionStatement	"r_core_yank_set ( core , addr , buf , maxlen )"	182:1:5160:5201	4649903	9	True				
ANR	4650041	CallExpression	"r_core_yank_set ( core , addr , buf , maxlen )"		4649903	0					
ANR	4650042	Callee	r_core_yank_set		4649903	0					
ANR	4650043	Identifier	r_core_yank_set		4649903	0					
ANR	4650044	ArgumentList	core		4649903	1					
ANR	4650045	Argument	core		4649903	0					
ANR	4650046	Identifier	core		4649903	0					
ANR	4650047	Argument	addr		4649903	1					
ANR	4650048	Identifier	addr		4649903	0					
ANR	4650049	Argument	buf		4649903	2					
ANR	4650050	Identifier	buf		4649903	0					
ANR	4650051	Argument	maxlen		4649903	3					
ANR	4650052	Identifier	maxlen		4649903	0					
ANR	4650053	IfStatement	if ( curseek != addr )		4649903	10					
ANR	4650054	Condition	curseek != addr	183:5:5208:5222	4649903	0	True				
ANR	4650055	EqualityExpression	curseek != addr		4649903	0		!=			
ANR	4650056	Identifier	curseek		4649903	0					
ANR	4650057	Identifier	addr		4649903	1					
ANR	4650058	CompoundStatement		25:22:733:733	4649903	1					
ANR	4650059	ExpressionStatement	"r_core_seek ( core , curseek , 1 )"	184:2:5229:5259	4649903	0	True				
ANR	4650060	CallExpression	"r_core_seek ( core , curseek , 1 )"		4649903	0					
ANR	4650061	Callee	r_core_seek		4649903	0					
ANR	4650062	Identifier	r_core_seek		4649903	0					
ANR	4650063	ArgumentList	core		4649903	1					
ANR	4650064	Argument	core		4649903	0					
ANR	4650065	Identifier	core		4649903	0					
ANR	4650066	Argument	curseek		4649903	1					
ANR	4650067	Identifier	curseek		4649903	0					
ANR	4650068	Argument	1		4649903	2					
ANR	4650069	PrimaryExpression	1		4649903	0					
ANR	4650070	ExpressionStatement	free ( buf )	186:1:5265:5275	4649903	11	True				
ANR	4650071	CallExpression	free ( buf )		4649903	0					
ANR	4650072	Callee	free		4649903	0					
ANR	4650073	Identifier	free		4649903	0					
ANR	4650074	ArgumentList	buf		4649903	1					
ANR	4650075	Argument	buf		4649903	0					
ANR	4650076	Identifier	buf		4649903	0					
ANR	4650077	ReturnStatement	return true ;	187:1:5278:5289	4649903	12	True				
ANR	4650078	Identifier	true		4649903	0					
ANR	4650079	ReturnType	R_API int		4649903	1					
ANR	4650080	Identifier	r_core_yank_string		4649903	2					
ANR	4650081	ParameterList	"RCore * core , ut64 addr , int maxlen"		4649903	3					
ANR	4650082	Parameter	RCore * core	159:29:4455:4465	4649903	0	True				
ANR	4650083	ParameterType	RCore *		4649903	0					
ANR	4650084	Identifier	core		4649903	1					
ANR	4650085	Parameter	ut64 addr	159:42:4468:4476	4649903	1	True				
ANR	4650086	ParameterType	ut64		4649903	0					
ANR	4650087	Identifier	addr		4649903	1					
ANR	4650088	Parameter	int maxlen	159:53:4479:4488	4649903	2	True				
ANR	4650089	ParameterType	int		4649903	0					
ANR	4650090	Identifier	maxlen		4649903	1					
ANR	4650091	CFGEntryNode	ENTRY		4649903		True				
ANR	4650092	CFGExitNode	EXIT		4649903		True				
ANR	4650093	Symbol	core -> blocksize		4649903						
ANR	4650094	Symbol	* buf		4649903						
ANR	4650095	Symbol	NULL		4649903						
ANR	4650096	Symbol	* core		4649903						
ANR	4650097	Symbol	false		4649903						
ANR	4650098	Symbol	r_str_nlen		4649903						
ANR	4650099	Symbol	core -> offset		4649903						
ANR	4650100	Symbol	calloc		4649903						
ANR	4650101	Symbol	core		4649903						
ANR	4650102	Symbol	buf		4649903						
ANR	4650103	Symbol	curseek		4649903						
ANR	4650104	Symbol	core -> io		4649903						
ANR	4650105	Symbol	true		4649903						
ANR	4650106	Symbol	* core -> blocksize		4649903						
ANR	4650107	Symbol	addr		4649903						
ANR	4650108	Symbol	maxlen		4649903						
ANR	4650109	Symbol	* * core		4649903						
ANR	4650110	Function	r_core_yank_paste	190:0:5294:5651							
ANR	4650111	FunctionDef	"r_core_yank_paste (RCore * core , ut64 addr , int len)"		4650110	0					
ANR	4650112	CompoundStatement		190:61:5355:5651	4650110	0					
ANR	4650113	IfStatement	if ( len < 0 )		4650110	0					
ANR	4650114	Condition	len < 0	191:5:5362:5368	4650110	0	True				
ANR	4650115	RelationalExpression	len < 0		4650110	0		<			
ANR	4650116	Identifier	len		4650110	0					
ANR	4650117	PrimaryExpression	0		4650110	1					
ANR	4650118	CompoundStatement		2:14:15:15	4650110	1					
ANR	4650119	ReturnStatement	return false ;	192:2:5375:5387	4650110	0	True				
ANR	4650120	Identifier	false		4650110	0					
ANR	4650121	IfStatement	if ( len == 0 || len >= r_buf_size ( core -> yank_buf ) )		4650110	1					
ANR	4650122	Condition	len == 0 || len >= r_buf_size ( core -> yank_buf )	194:5:5397:5442	4650110	0	True				
ANR	4650123	OrExpression	len == 0 || len >= r_buf_size ( core -> yank_buf )		4650110	0		||			
ANR	4650124	EqualityExpression	len == 0		4650110	0		==			
ANR	4650125	Identifier	len		4650110	0					
ANR	4650126	PrimaryExpression	0		4650110	1					
ANR	4650127	RelationalExpression	len >= r_buf_size ( core -> yank_buf )		4650110	1		>=			
ANR	4650128	Identifier	len		4650110	0					
ANR	4650129	CallExpression	r_buf_size ( core -> yank_buf )		4650110	1					
ANR	4650130	Callee	r_buf_size		4650110	0					
ANR	4650131	Identifier	r_buf_size		4650110	0					
ANR	4650132	ArgumentList	core -> yank_buf		4650110	1					
ANR	4650133	Argument	core -> yank_buf		4650110	0					
ANR	4650134	PtrMemberAccess	core -> yank_buf		4650110	0					
ANR	4650135	Identifier	core		4650110	0					
ANR	4650136	Identifier	yank_buf		4650110	1					
ANR	4650137	CompoundStatement		5:53:89:89	4650110	1					
ANR	4650138	ExpressionStatement	len = r_buf_size ( core -> yank_buf )	195:2:5449:5482	4650110	0	True				
ANR	4650139	AssignmentExpression	len = r_buf_size ( core -> yank_buf )		4650110	0		=			
ANR	4650140	Identifier	len		4650110	0					
ANR	4650141	CallExpression	r_buf_size ( core -> yank_buf )		4650110	1					
ANR	4650142	Callee	r_buf_size		4650110	0					
ANR	4650143	Identifier	r_buf_size		4650110	0					
ANR	4650144	ArgumentList	core -> yank_buf		4650110	1					
ANR	4650145	Argument	core -> yank_buf		4650110	0					
ANR	4650146	PtrMemberAccess	core -> yank_buf		4650110	0					
ANR	4650147	Identifier	core		4650110	0					
ANR	4650148	Identifier	yank_buf		4650110	1					
ANR	4650149	IdentifierDeclStatement	"ut8 * buf = R_NEWS ( ut8 , len ) ;"	197:1:5488:5516	4650110	2	True				
ANR	4650150	IdentifierDecl	"* buf = R_NEWS ( ut8 , len )"		4650110	0					
ANR	4650151	IdentifierDeclType	ut8 *		4650110	0					
ANR	4650152	Identifier	buf		4650110	1					
ANR	4650153	AssignmentExpression	"* buf = R_NEWS ( ut8 , len )"		4650110	2		=			
ANR	4650154	Identifier	buf		4650110	0					
ANR	4650155	CallExpression	"R_NEWS ( ut8 , len )"		4650110	1					
ANR	4650156	Callee	R_NEWS		4650110	0					
ANR	4650157	Identifier	R_NEWS		4650110	0					
ANR	4650158	ArgumentList	ut8		4650110	1					
ANR	4650159	Argument	ut8		4650110	0					
ANR	4650160	Identifier	ut8		4650110	0					
ANR	4650161	Argument	len		4650110	1					
ANR	4650162	Identifier	len		4650110	0					
ANR	4650163	IfStatement	if ( ! buf )		4650110	3					
ANR	4650164	Condition	! buf	198:5:5523:5526	4650110	0	True				
ANR	4650165	UnaryOperationExpression	! buf		4650110	0					
ANR	4650166	UnaryOperator	!		4650110	0					
ANR	4650167	Identifier	buf		4650110	1					
ANR	4650168	CompoundStatement		9:11:173:173	4650110	1					
ANR	4650169	ReturnStatement	return false ;	199:2:5533:5545	4650110	0	True				
ANR	4650170	Identifier	false		4650110	0					
ANR	4650171	ExpressionStatement	"r_buf_read_at ( core -> yank_buf , 0 , buf , len )"	201:1:5551:5594	4650110	4	True				
ANR	4650172	CallExpression	"r_buf_read_at ( core -> yank_buf , 0 , buf , len )"		4650110	0					
ANR	4650173	Callee	r_buf_read_at		4650110	0					
ANR	4650174	Identifier	r_buf_read_at		4650110	0					
ANR	4650175	ArgumentList	core -> yank_buf		4650110	1					
ANR	4650176	Argument	core -> yank_buf		4650110	0					
ANR	4650177	PtrMemberAccess	core -> yank_buf		4650110	0					
ANR	4650178	Identifier	core		4650110	0					
ANR	4650179	Identifier	yank_buf		4650110	1					
ANR	4650180	Argument	0		4650110	1					
ANR	4650181	PrimaryExpression	0		4650110	0					
ANR	4650182	Argument	buf		4650110	2					
ANR	4650183	Identifier	buf		4650110	0					
ANR	4650184	Argument	len		4650110	3					
ANR	4650185	Identifier	len		4650110	0					
ANR	4650186	ExpressionStatement	"r_core_write_at ( core , addr , buf , len )"	202:1:5597:5635	4650110	5	True				
ANR	4650187	CallExpression	"r_core_write_at ( core , addr , buf , len )"		4650110	0					
ANR	4650188	Callee	r_core_write_at		4650110	0					
ANR	4650189	Identifier	r_core_write_at		4650110	0					
ANR	4650190	ArgumentList	core		4650110	1					
ANR	4650191	Argument	core		4650110	0					
ANR	4650192	Identifier	core		4650110	0					
ANR	4650193	Argument	addr		4650110	1					
ANR	4650194	Identifier	addr		4650110	0					
ANR	4650195	Argument	buf		4650110	2					
ANR	4650196	Identifier	buf		4650110	0					
ANR	4650197	Argument	len		4650110	3					
ANR	4650198	Identifier	len		4650110	0					
ANR	4650199	ReturnStatement	return true ;	203:1:5638:5649	4650110	6	True				
ANR	4650200	Identifier	true		4650110	0					
ANR	4650201	ReturnType	R_API int		4650110	1					
ANR	4650202	Identifier	r_core_yank_paste		4650110	2					
ANR	4650203	ParameterList	"RCore * core , ut64 addr , int len"		4650110	3					
ANR	4650204	Parameter	RCore * core	190:28:5322:5332	4650110	0	True				
ANR	4650205	ParameterType	RCore *		4650110	0					
ANR	4650206	Identifier	core		4650110	1					
ANR	4650207	Parameter	ut64 addr	190:41:5335:5343	4650110	1	True				
ANR	4650208	ParameterType	ut64		4650110	0					
ANR	4650209	Identifier	addr		4650110	1					
ANR	4650210	Parameter	int len	190:52:5346:5352	4650110	2	True				
ANR	4650211	ParameterType	int		4650110	0					
ANR	4650212	Identifier	len		4650110	1					
ANR	4650213	CFGEntryNode	ENTRY		4650110		True				
ANR	4650214	CFGExitNode	EXIT		4650110		True				
ANR	4650215	Symbol	core		4650110						
ANR	4650216	Symbol	buf		4650110						
ANR	4650217	Symbol	len		4650110						
ANR	4650218	Symbol	core -> yank_buf		4650110						
ANR	4650219	Symbol	false		4650110						
ANR	4650220	Symbol	* core		4650110						
ANR	4650221	Symbol	ut8		4650110						
ANR	4650222	Symbol	true		4650110						
ANR	4650223	Symbol	addr		4650110						
ANR	4650224	Symbol	R_NEWS		4650110						
ANR	4650225	Symbol	r_buf_size		4650110						
ANR	4650226	Function	r_core_yank_to	206:0:5654:6278							
ANR	4650227	FunctionDef	"r_core_yank_to (RCore * core , const char * _arg)"		4650226	0					
ANR	4650228	CompoundStatement		206:56:5710:6278	4650226	0					
ANR	4650229	IdentifierDeclStatement	ut64 len = 0 ;	207:1:5713:5725	4650226	0	True				
ANR	4650230	IdentifierDecl	len = 0		4650226	0					
ANR	4650231	IdentifierDeclType	ut64		4650226	0					
ANR	4650232	Identifier	len		4650226	1					
ANR	4650233	AssignmentExpression	len = 0		4650226	2		=			
ANR	4650234	Identifier	len		4650226	0					
ANR	4650235	PrimaryExpression	0		4650226	1					
ANR	4650236	IdentifierDeclStatement	ut64 pos = - 1 ;	208:1:5728:5741	4650226	1	True				
ANR	4650237	IdentifierDecl	pos = - 1		4650226	0					
ANR	4650238	IdentifierDeclType	ut64		4650226	0					
ANR	4650239	Identifier	pos		4650226	1					
ANR	4650240	AssignmentExpression	pos = - 1		4650226	2		=			
ANR	4650241	Identifier	pos		4650226	0					
ANR	4650242	UnaryOperationExpression	- 1		4650226	1					
ANR	4650243	UnaryOperator	-		4650226	0					
ANR	4650244	PrimaryExpression	1		4650226	1					
ANR	4650245	IdentifierDeclStatement	"char * str , * arg ;"	209:1:5744:5759	4650226	2	True				
ANR	4650246	IdentifierDecl	* str		4650226	0					
ANR	4650247	IdentifierDeclType	char *		4650226	0					
ANR	4650248	Identifier	str		4650226	1					
ANR	4650249	IdentifierDecl	* arg		4650226	1					
ANR	4650250	IdentifierDeclType	char *		4650226	0					
ANR	4650251	Identifier	arg		4650226	1					
ANR	4650252	IdentifierDeclStatement	int res = false ;	210:1:5762:5777	4650226	3	True				
ANR	4650253	IdentifierDecl	res = false		4650226	0					
ANR	4650254	IdentifierDeclType	int		4650226	0					
ANR	4650255	Identifier	res		4650226	1					
ANR	4650256	AssignmentExpression	res = false		4650226	2		=			
ANR	4650257	Identifier	false		4650226	0					
ANR	4650258	Identifier	false		4650226	1					
ANR	4650259	WhileStatement	while ( * _arg == ' ' )		4650226	4					
ANR	4650260	Condition	* _arg == ' '	212:8:5788:5799	4650226	0	True				
ANR	4650261	EqualityExpression	* _arg == ' '		4650226	0		==			
ANR	4650262	UnaryOperationExpression	* _arg		4650226	0					
ANR	4650263	UnaryOperator	*		4650226	0					
ANR	4650264	Identifier	_arg		4650226	1					
ANR	4650265	PrimaryExpression	' '		4650226	1					
ANR	4650266	CompoundStatement		7:22:91:91	4650226	1					
ANR	4650267	ExpressionStatement	_arg ++	213:2:5806:5812	4650226	0	True				
ANR	4650268	PostIncDecOperationExpression	_arg ++		4650226	0					
ANR	4650269	Identifier	_arg		4650226	0					
ANR	4650270	IncDec	++		4650226	1					
ANR	4650271	ExpressionStatement	arg = strdup ( _arg )	215:1:5818:5837	4650226	5	True				
ANR	4650272	AssignmentExpression	arg = strdup ( _arg )		4650226	0		=			
ANR	4650273	Identifier	arg		4650226	0					
ANR	4650274	CallExpression	strdup ( _arg )		4650226	1					
ANR	4650275	Callee	strdup		4650226	0					
ANR	4650276	Identifier	strdup		4650226	0					
ANR	4650277	ArgumentList	_arg		4650226	1					
ANR	4650278	Argument	_arg		4650226	0					
ANR	4650279	Identifier	_arg		4650226	0					
ANR	4650280	ExpressionStatement	"str = strchr ( arg , ' ' )"	216:1:5840:5863	4650226	6	True				
ANR	4650281	AssignmentExpression	"str = strchr ( arg , ' ' )"		4650226	0		=			
ANR	4650282	Identifier	str		4650226	0					
ANR	4650283	CallExpression	"strchr ( arg , ' ' )"		4650226	1					
ANR	4650284	Callee	strchr		4650226	0					
ANR	4650285	Identifier	strchr		4650226	0					
ANR	4650286	ArgumentList	arg		4650226	1					
ANR	4650287	Argument	arg		4650226	0					
ANR	4650288	Identifier	arg		4650226	0					
ANR	4650289	Argument	' '		4650226	1					
ANR	4650290	PrimaryExpression	' '		4650226	0					
ANR	4650291	IfStatement	if ( str )		4650226	7					
ANR	4650292	Condition	str	217:5:5870:5872	4650226	0	True				
ANR	4650293	Identifier	str		4650226	0					
ANR	4650294	CompoundStatement		12:10:164:164	4650226	1					
ANR	4650295	ExpressionStatement	str [ 0 ] = '\\0'	218:2:5879:5892	4650226	0	True				
ANR	4650296	AssignmentExpression	str [ 0 ] = '\\0'		4650226	0		=			
ANR	4650297	ArrayIndexing	str [ 0 ]		4650226	0					
ANR	4650298	Identifier	str		4650226	0					
ANR	4650299	PrimaryExpression	0		4650226	1					
ANR	4650300	PrimaryExpression	'\\0'		4650226	1					
ANR	4650301	ExpressionStatement	"len = r_num_math ( core -> num , arg )"	219:2:5896:5929	4650226	1	True				
ANR	4650302	AssignmentExpression	"len = r_num_math ( core -> num , arg )"		4650226	0		=			
ANR	4650303	Identifier	len		4650226	0					
ANR	4650304	CallExpression	"r_num_math ( core -> num , arg )"		4650226	1					
ANR	4650305	Callee	r_num_math		4650226	0					
ANR	4650306	Identifier	r_num_math		4650226	0					
ANR	4650307	ArgumentList	core -> num		4650226	1					
ANR	4650308	Argument	core -> num		4650226	0					
ANR	4650309	PtrMemberAccess	core -> num		4650226	0					
ANR	4650310	Identifier	core		4650226	0					
ANR	4650311	Identifier	num		4650226	1					
ANR	4650312	Argument	arg		4650226	1					
ANR	4650313	Identifier	arg		4650226	0					
ANR	4650314	ExpressionStatement	"pos = r_num_math ( core -> num , str + 1 )"	220:2:5933:5970	4650226	2	True				
ANR	4650315	AssignmentExpression	"pos = r_num_math ( core -> num , str + 1 )"		4650226	0		=			
ANR	4650316	Identifier	pos		4650226	0					
ANR	4650317	CallExpression	"r_num_math ( core -> num , str + 1 )"		4650226	1					
ANR	4650318	Callee	r_num_math		4650226	0					
ANR	4650319	Identifier	r_num_math		4650226	0					
ANR	4650320	ArgumentList	core -> num		4650226	1					
ANR	4650321	Argument	core -> num		4650226	0					
ANR	4650322	PtrMemberAccess	core -> num		4650226	0					
ANR	4650323	Identifier	core		4650226	0					
ANR	4650324	Identifier	num		4650226	1					
ANR	4650325	Argument	str + 1		4650226	1					
ANR	4650326	AdditiveExpression	str + 1		4650226	0		+			
ANR	4650327	Identifier	str		4650226	0					
ANR	4650328	PrimaryExpression	1		4650226	1					
ANR	4650329	ExpressionStatement	str [ 0 ] = ' '	221:2:5974:5986	4650226	3	True				
ANR	4650330	AssignmentExpression	str [ 0 ] = ' '		4650226	0		=			
ANR	4650331	ArrayIndexing	str [ 0 ]		4650226	0					
ANR	4650332	Identifier	str		4650226	0					
ANR	4650333	PrimaryExpression	0		4650226	1					
ANR	4650334	PrimaryExpression	' '		4650226	1					
ANR	4650335	IfStatement	if ( len < 1 )		4650226	8					
ANR	4650336	Condition	len < 1	223:5:5996:6002	4650226	0	True				
ANR	4650337	RelationalExpression	len < 1		4650226	0		<			
ANR	4650338	Identifier	len		4650226	0					
ANR	4650339	PrimaryExpression	1		4650226	1					
ANR	4650340	CompoundStatement		18:14:294:294	4650226	1					
ANR	4650341	ExpressionStatement	free ( arg )	224:2:6009:6019	4650226	0	True				
ANR	4650342	CallExpression	free ( arg )		4650226	0					
ANR	4650343	Callee	free		4650226	0					
ANR	4650344	Identifier	free		4650226	0					
ANR	4650345	ArgumentList	arg		4650226	1					
ANR	4650346	Argument	arg		4650226	0					
ANR	4650347	Identifier	arg		4650226	0					
ANR	4650348	ReturnStatement	return res ;	225:2:6023:6033	4650226	1	True				
ANR	4650349	Identifier	res		4650226	0					
ANR	4650350	IfStatement	if ( ! str || pos == - 1 || len == 0 )		4650226	9					
ANR	4650351	Condition	! str || pos == - 1 || len == 0	227:5:6043:6071	4650226	0	True				
ANR	4650352	OrExpression	! str || pos == - 1 || len == 0		4650226	0		||			
ANR	4650353	UnaryOperationExpression	! str		4650226	0					
ANR	4650354	UnaryOperator	!		4650226	0					
ANR	4650355	Identifier	str		4650226	1					
ANR	4650356	OrExpression	pos == - 1 || len == 0		4650226	1		||			
ANR	4650357	EqualityExpression	pos == - 1		4650226	0		==			
ANR	4650358	Identifier	pos		4650226	0					
ANR	4650359	UnaryOperationExpression	- 1		4650226	1					
ANR	4650360	UnaryOperator	-		4650226	0					
ANR	4650361	PrimaryExpression	1		4650226	1					
ANR	4650362	EqualityExpression	len == 0		4650226	1		==			
ANR	4650363	Identifier	len		4650226	0					
ANR	4650364	PrimaryExpression	0		4650226	1					
ANR	4650365	CompoundStatement		22:36:363:363	4650226	1					
ANR	4650366	ExpressionStatement	"eprintf ( ""Usage: yt [len] [dst-addr]\\n"" )"	228:2:6078:6118	4650226	0	True				
ANR	4650367	CallExpression	"eprintf ( ""Usage: yt [len] [dst-addr]\\n"" )"		4650226	0					
ANR	4650368	Callee	eprintf		4650226	0					
ANR	4650369	Identifier	eprintf		4650226	0					
ANR	4650370	ArgumentList	"""Usage: yt [len] [dst-addr]\\n"""		4650226	1					
ANR	4650371	Argument	"""Usage: yt [len] [dst-addr]\\n"""		4650226	0					
ANR	4650372	PrimaryExpression	"""Usage: yt [len] [dst-addr]\\n"""		4650226	0					
ANR	4650373	ExpressionStatement	free ( arg )	229:2:6122:6132	4650226	1	True				
ANR	4650374	CallExpression	free ( arg )		4650226	0					
ANR	4650375	Callee	free		4650226	0					
ANR	4650376	Identifier	free		4650226	0					
ANR	4650377	ArgumentList	arg		4650226	1					
ANR	4650378	Argument	arg		4650226	0					
ANR	4650379	Identifier	arg		4650226	0					
ANR	4650380	ReturnStatement	return res ;	230:2:6136:6146	4650226	2	True				
ANR	4650381	Identifier	res		4650226	0					
ANR	4650382	IfStatement	"if ( r_core_yank ( core , core -> offset , len ) == true )"		4650226	10					
ANR	4650383	Condition	"r_core_yank ( core , core -> offset , len ) == true"	232:5:6156:6200	4650226	0	True				
ANR	4650384	EqualityExpression	"r_core_yank ( core , core -> offset , len ) == true"		4650226	0		==			
ANR	4650385	CallExpression	"r_core_yank ( core , core -> offset , len )"		4650226	0					
ANR	4650386	Callee	r_core_yank		4650226	0					
ANR	4650387	Identifier	r_core_yank		4650226	0					
ANR	4650388	ArgumentList	core		4650226	1					
ANR	4650389	Argument	core		4650226	0					
ANR	4650390	Identifier	core		4650226	0					
ANR	4650391	Argument	core -> offset		4650226	1					
ANR	4650392	PtrMemberAccess	core -> offset		4650226	0					
ANR	4650393	Identifier	core		4650226	0					
ANR	4650394	Identifier	offset		4650226	1					
ANR	4650395	Argument	len		4650226	2					
ANR	4650396	Identifier	len		4650226	0					
ANR	4650397	Identifier	true		4650226	1					
ANR	4650398	CompoundStatement		27:52:492:492	4650226	1					
ANR	4650399	ExpressionStatement	"res = r_core_yank_paste ( core , pos , len )"	233:2:6207:6247	4650226	0	True				
ANR	4650400	AssignmentExpression	"res = r_core_yank_paste ( core , pos , len )"		4650226	0		=			
ANR	4650401	Identifier	res		4650226	0					
ANR	4650402	CallExpression	"r_core_yank_paste ( core , pos , len )"		4650226	1					
ANR	4650403	Callee	r_core_yank_paste		4650226	0					
ANR	4650404	Identifier	r_core_yank_paste		4650226	0					
ANR	4650405	ArgumentList	core		4650226	1					
ANR	4650406	Argument	core		4650226	0					
ANR	4650407	Identifier	core		4650226	0					
ANR	4650408	Argument	pos		4650226	1					
ANR	4650409	Identifier	pos		4650226	0					
ANR	4650410	Argument	len		4650226	2					
ANR	4650411	Identifier	len		4650226	0					
ANR	4650412	ExpressionStatement	free ( arg )	235:1:6253:6263	4650226	11	True				
ANR	4650413	CallExpression	free ( arg )		4650226	0					
ANR	4650414	Callee	free		4650226	0					
ANR	4650415	Identifier	free		4650226	0					
ANR	4650416	ArgumentList	arg		4650226	1					
ANR	4650417	Argument	arg		4650226	0					
ANR	4650418	Identifier	arg		4650226	0					
ANR	4650419	ReturnStatement	return res ;	236:1:6266:6276	4650226	12	True				
ANR	4650420	Identifier	res		4650226	0					
ANR	4650421	ReturnType	R_API int		4650226	1					
ANR	4650422	Identifier	r_core_yank_to		4650226	2					
ANR	4650423	ParameterList	"RCore * core , const char * _arg"		4650226	3					
ANR	4650424	Parameter	RCore * core	206:25:5679:5689	4650226	0	True				
ANR	4650425	ParameterType	RCore *		4650226	0					
ANR	4650426	Identifier	core		4650226	1					
ANR	4650427	Parameter	const char * _arg	206:38:5692:5707	4650226	1	True				
ANR	4650428	ParameterType	const char *		4650226	0					
ANR	4650429	Identifier	_arg		4650226	1					
ANR	4650430	CFGEntryNode	ENTRY		4650226		True				
ANR	4650431	CFGExitNode	EXIT		4650226		True				
ANR	4650432	Symbol	res		4650226						
ANR	4650433	Symbol	r_core_yank_paste		4650226						
ANR	4650434	Symbol	false		4650226						
ANR	4650435	Symbol	* core		4650226						
ANR	4650436	Symbol	strchr		4650226						
ANR	4650437	Symbol	core -> offset		4650226						
ANR	4650438	Symbol	r_num_math		4650226						
ANR	4650439	Symbol	str		4650226						
ANR	4650440	Symbol	core		4650226						
ANR	4650441	Symbol	len		4650226						
ANR	4650442	Symbol	pos		4650226						
ANR	4650443	Symbol	* _arg		4650226						
ANR	4650444	Symbol	arg		4650226						
ANR	4650445	Symbol	true		4650226						
ANR	4650446	Symbol	_arg		4650226						
ANR	4650447	Symbol	strdup		4650226						
ANR	4650448	Symbol	* str		4650226						
ANR	4650449	Symbol	core -> num		4650226						
ANR	4650450	Symbol	r_core_yank		4650226						
ANR	4650451	Function	r_core_yank_dump	239:0:6281:7710							
ANR	4650452	FunctionDef	"r_core_yank_dump (RCore * core , ut64 pos , int format)"		4650451	0					
ANR	4650453	CompoundStatement		239:63:6344:7710	4650451	0					
ANR	4650454	IdentifierDeclStatement	bool res = false ;	240:1:6347:6363	4650451	0	True				
ANR	4650455	IdentifierDecl	res = false		4650451	0					
ANR	4650456	IdentifierDeclType	bool		4650451	0					
ANR	4650457	Identifier	res		4650451	1					
ANR	4650458	AssignmentExpression	res = false		4650451	2		=			
ANR	4650459	Identifier	false		4650451	0					
ANR	4650460	Identifier	false		4650451	1					
ANR	4650461	IdentifierDeclStatement	int i = 0 ;	241:1:6366:6375	4650451	1	True				
ANR	4650462	IdentifierDecl	i = 0		4650451	0					
ANR	4650463	IdentifierDeclType	int		4650451	0					
ANR	4650464	Identifier	i		4650451	1					
ANR	4650465	AssignmentExpression	i = 0		4650451	2		=			
ANR	4650466	Identifier	i		4650451	0					
ANR	4650467	PrimaryExpression	0		4650451	1					
ANR	4650468	IdentifierDeclStatement	int ybl = r_buf_size ( core -> yank_buf ) ;	242:1:6378:6415	4650451	2	True				
ANR	4650469	IdentifierDecl	ybl = r_buf_size ( core -> yank_buf )		4650451	0					
ANR	4650470	IdentifierDeclType	int		4650451	0					
ANR	4650471	Identifier	ybl		4650451	1					
ANR	4650472	AssignmentExpression	ybl = r_buf_size ( core -> yank_buf )		4650451	2		=			
ANR	4650473	Identifier	ybl		4650451	0					
ANR	4650474	CallExpression	r_buf_size ( core -> yank_buf )		4650451	1					
ANR	4650475	Callee	r_buf_size		4650451	0					
ANR	4650476	Identifier	r_buf_size		4650451	0					
ANR	4650477	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650478	Argument	core -> yank_buf		4650451	0					
ANR	4650479	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650480	Identifier	core		4650451	0					
ANR	4650481	Identifier	yank_buf		4650451	1					
ANR	4650482	IfStatement	if ( ybl > 0 )		4650451	3					
ANR	4650483	Condition	ybl > 0	243:5:6422:6428	4650451	0	True				
ANR	4650484	RelationalExpression	ybl > 0		4650451	0		>			
ANR	4650485	Identifier	ybl		4650451	0					
ANR	4650486	PrimaryExpression	0		4650451	1					
ANR	4650487	CompoundStatement		5:14:86:86	4650451	1					
ANR	4650488	IfStatement	if ( pos < ybl )		4650451	0					
ANR	4650489	Condition	pos < ybl	244:6:6439:6447	4650451	0	True				
ANR	4650490	RelationalExpression	pos < ybl		4650451	0		<			
ANR	4650491	Identifier	pos		4650451	0					
ANR	4650492	Identifier	ybl		4650451	1					
ANR	4650493	CompoundStatement		6:17:105:105	4650451	1					
ANR	4650494	SwitchStatement	switch ( format )		4650451	0					
ANR	4650495	Condition	format	245:11:6463:6468	4650451	0	True				
ANR	4650496	Identifier	format		4650451	0					
ANR	4650497	CompoundStatement		7:19:126:126	4650451	1					
ANR	4650498	Label	case 'q' :	246:3:6476:6484	4650451	0	True				
ANR	4650499	ForStatement	for ( i = pos ; i < r_buf_size ( core -> yank_buf ) ; i ++ )		4650451	1					
ANR	4650500	ForInit	i = pos ;	247:9:6495:6502	4650451	0	True				
ANR	4650501	AssignmentExpression	i = pos		4650451	0		=			
ANR	4650502	Identifier	i		4650451	0					
ANR	4650503	Identifier	pos		4650451	1					
ANR	4650504	Condition	i < r_buf_size ( core -> yank_buf )	247:18:6504:6534	4650451	1	True				
ANR	4650505	RelationalExpression	i < r_buf_size ( core -> yank_buf )		4650451	0		<			
ANR	4650506	Identifier	i		4650451	0					
ANR	4650507	CallExpression	r_buf_size ( core -> yank_buf )		4650451	1					
ANR	4650508	Callee	r_buf_size		4650451	0					
ANR	4650509	Identifier	r_buf_size		4650451	0					
ANR	4650510	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650511	Argument	core -> yank_buf		4650451	0					
ANR	4650512	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650513	Identifier	core		4650451	0					
ANR	4650514	Identifier	yank_buf		4650451	1					
ANR	4650515	PostIncDecOperationExpression	i ++	247:51:6537:6539	4650451	2	True				
ANR	4650516	Identifier	i		4650451	0					
ANR	4650517	IncDec	++		4650451	1					
ANR	4650518	CompoundStatement		9:56:197:197	4650451	3					
ANR	4650519	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"	248:5:6549:6607	4650451	0	True				
ANR	4650520	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"		4650451	0					
ANR	4650521	Callee	r_cons_printf		4650451	0					
ANR	4650522	Identifier	r_cons_printf		4650451	0					
ANR	4650523	ArgumentList	"""%02x"""		4650451	1					
ANR	4650524	Argument	"""%02x"""		4650451	0					
ANR	4650525	PrimaryExpression	"""%02x"""		4650451	0					
ANR	4650526	Argument	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	1					
ANR	4650527	CallExpression	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	0					
ANR	4650528	Callee	r_buf_read8_at		4650451	0					
ANR	4650529	Identifier	r_buf_read8_at		4650451	0					
ANR	4650530	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650531	Argument	core -> yank_buf		4650451	0					
ANR	4650532	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650533	Identifier	core		4650451	0					
ANR	4650534	Identifier	yank_buf		4650451	1					
ANR	4650535	Argument	i		4650451	1					
ANR	4650536	Identifier	i		4650451	0					
ANR	4650537	ExpressionStatement	r_cons_newline ( )	250:4:6619:6636	4650451	2	True				
ANR	4650538	CallExpression	r_cons_newline ( )		4650451	0					
ANR	4650539	Callee	r_cons_newline		4650451	0					
ANR	4650540	Identifier	r_cons_newline		4650451	0					
ANR	4650541	ArgumentList			4650451	1					
ANR	4650542	BreakStatement	break ;	251:4:6642:6647	4650451	3	True				
ANR	4650543	Label	case 'j' :	252:3:6652:6660	4650451	4	True				
ANR	4650544	CompoundStatement		15:4:321:321	4650451	5					
ANR	4650545	Statement	r_cons_printf	254:5:6673:6685	4650451	0	True				
ANR	4650546	Statement	(	254:19:6687:6687	4650451	1	True				
ANR	4650547	Statement	"""{\\""addr\\"":%"""	254:20:6688:6700	4650451	2	True				
ANR	4650548	Statement	PFMT64u	254:33:6701:6707	4650451	3	True				
ANR	4650549	Statement	""",\\""bytes\\"":\\"""""	254:40:6708:6722	4650451	4	True				
ANR	4650550	Statement	","	254:55:6723:6723	4650451	5	True				
ANR	4650551	Statement	core	254:57:6725:6728	4650451	6	True				
ANR	4650552	Statement	->	254:61:6729:6730	4650451	7	True				
ANR	4650553	Statement	yank_addr	254:63:6731:6739	4650451	8	True				
ANR	4650554	Statement	)	254:72:6740:6740	4650451	9	True				
ANR	4650555	ExpressionStatement		254:73:6741:6741	4650451	10	True				
ANR	4650556	ForStatement	for ( i = pos ; i < r_buf_size ( core -> yank_buf ) ; i ++ )		4650451	11					
ANR	4650557	ForInit	i = pos ;	255:10:6753:6760	4650451	0	True				
ANR	4650558	AssignmentExpression	i = pos		4650451	0		=			
ANR	4650559	Identifier	i		4650451	0					
ANR	4650560	Identifier	pos		4650451	1					
ANR	4650561	Condition	i < r_buf_size ( core -> yank_buf )	255:19:6762:6792	4650451	1	True				
ANR	4650562	RelationalExpression	i < r_buf_size ( core -> yank_buf )		4650451	0		<			
ANR	4650563	Identifier	i		4650451	0					
ANR	4650564	CallExpression	r_buf_size ( core -> yank_buf )		4650451	1					
ANR	4650565	Callee	r_buf_size		4650451	0					
ANR	4650566	Identifier	r_buf_size		4650451	0					
ANR	4650567	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650568	Argument	core -> yank_buf		4650451	0					
ANR	4650569	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650570	Identifier	core		4650451	0					
ANR	4650571	Identifier	yank_buf		4650451	1					
ANR	4650572	PostIncDecOperationExpression	i ++	255:52:6795:6797	4650451	2	True				
ANR	4650573	Identifier	i		4650451	0					
ANR	4650574	IncDec	++		4650451	1					
ANR	4650575	CompoundStatement		17:57:455:455	4650451	3					
ANR	4650576	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"	256:6:6808:6866	4650451	0	True				
ANR	4650577	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"		4650451	0					
ANR	4650578	Callee	r_cons_printf		4650451	0					
ANR	4650579	Identifier	r_cons_printf		4650451	0					
ANR	4650580	ArgumentList	"""%02x"""		4650451	1					
ANR	4650581	Argument	"""%02x"""		4650451	0					
ANR	4650582	PrimaryExpression	"""%02x"""		4650451	0					
ANR	4650583	Argument	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	1					
ANR	4650584	CallExpression	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	0					
ANR	4650585	Callee	r_buf_read8_at		4650451	0					
ANR	4650586	Identifier	r_buf_read8_at		4650451	0					
ANR	4650587	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650588	Argument	core -> yank_buf		4650451	0					
ANR	4650589	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650590	Identifier	core		4650451	0					
ANR	4650591	Identifier	yank_buf		4650451	1					
ANR	4650592	Argument	i		4650451	1					
ANR	4650593	Identifier	i		4650451	0					
ANR	4650594	ExpressionStatement	"r_cons_printf ( ""\\""}\\n"" )"	258:5:6880:6903	4650451	12	True				
ANR	4650595	CallExpression	"r_cons_printf ( ""\\""}\\n"" )"		4650451	0					
ANR	4650596	Callee	r_cons_printf		4650451	0					
ANR	4650597	Identifier	r_cons_printf		4650451	0					
ANR	4650598	ArgumentList	"""\\""}\\n"""		4650451	1					
ANR	4650599	Argument	"""\\""}\\n"""		4650451	0					
ANR	4650600	PrimaryExpression	"""\\""}\\n"""		4650451	0					
ANR	4650601	BreakStatement	break ;	260:4:6915:6920	4650451	6	True				
ANR	4650602	Label	case '*' :	261:3:6925:6933	4650451	7	True				
ANR	4650603	ExpressionStatement	"r_cons_printf ( ""wx "" )"	263:4:6969:6990	4650451	8	True				
ANR	4650604	CallExpression	"r_cons_printf ( ""wx "" )"		4650451	0					
ANR	4650605	Callee	r_cons_printf		4650451	0					
ANR	4650606	Identifier	r_cons_printf		4650451	0					
ANR	4650607	ArgumentList	"""wx """		4650451	1					
ANR	4650608	Argument	"""wx """		4650451	0					
ANR	4650609	PrimaryExpression	"""wx """		4650451	0					
ANR	4650610	ForStatement	for ( i = pos ; i < r_buf_size ( core -> yank_buf ) ; i ++ )		4650451	9					
ANR	4650611	ForInit	i = pos ;	264:9:7001:7008	4650451	0	True				
ANR	4650612	AssignmentExpression	i = pos		4650451	0		=			
ANR	4650613	Identifier	i		4650451	0					
ANR	4650614	Identifier	pos		4650451	1					
ANR	4650615	Condition	i < r_buf_size ( core -> yank_buf )	264:18:7010:7040	4650451	1	True				
ANR	4650616	RelationalExpression	i < r_buf_size ( core -> yank_buf )		4650451	0		<			
ANR	4650617	Identifier	i		4650451	0					
ANR	4650618	CallExpression	r_buf_size ( core -> yank_buf )		4650451	1					
ANR	4650619	Callee	r_buf_size		4650451	0					
ANR	4650620	Identifier	r_buf_size		4650451	0					
ANR	4650621	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650622	Argument	core -> yank_buf		4650451	0					
ANR	4650623	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650624	Identifier	core		4650451	0					
ANR	4650625	Identifier	yank_buf		4650451	1					
ANR	4650626	PostIncDecOperationExpression	i ++	264:51:7043:7045	4650451	2	True				
ANR	4650627	Identifier	i		4650451	0					
ANR	4650628	IncDec	++		4650451	1					
ANR	4650629	CompoundStatement		26:56:703:703	4650451	3					
ANR	4650630	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"	265:5:7055:7113	4650451	0	True				
ANR	4650631	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"		4650451	0					
ANR	4650632	Callee	r_cons_printf		4650451	0					
ANR	4650633	Identifier	r_cons_printf		4650451	0					
ANR	4650634	ArgumentList	"""%02x"""		4650451	1					
ANR	4650635	Argument	"""%02x"""		4650451	0					
ANR	4650636	PrimaryExpression	"""%02x"""		4650451	0					
ANR	4650637	Argument	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	1					
ANR	4650638	CallExpression	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	0					
ANR	4650639	Callee	r_buf_read8_at		4650451	0					
ANR	4650640	Identifier	r_buf_read8_at		4650451	0					
ANR	4650641	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650642	Argument	core -> yank_buf		4650451	0					
ANR	4650643	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650644	Identifier	core		4650451	0					
ANR	4650645	Identifier	yank_buf		4650451	1					
ANR	4650646	Argument	i		4650451	1					
ANR	4650647	Identifier	i		4650451	0					
ANR	4650648	ExpressionStatement	r_cons_newline ( )	268:4:7183:7200	4650451	10	True				
ANR	4650649	CallExpression	r_cons_newline ( )		4650451	0					
ANR	4650650	Callee	r_cons_newline		4650451	0					
ANR	4650651	Identifier	r_cons_newline		4650451	0					
ANR	4650652	ArgumentList			4650451	1					
ANR	4650653	BreakStatement	break ;	269:4:7206:7211	4650451	11	True				
ANR	4650654	Label	default :	270:3:7216:7223	4650451	12	True				
ANR	4650655	Identifier	default		4650451	0					
ANR	4650656	Statement	r_cons_printf	271:4:7229:7241	4650451	13	True				
ANR	4650657	Statement	(	271:18:7243:7243	4650451	14	True				
ANR	4650658	Statement	"""0x%08"""	271:19:7244:7250	4650451	15	True				
ANR	4650659	Statement	PFMT64x	271:27:7252:7258	4650451	16	True				
ANR	4650660	Statement	""" %d """	271:35:7260:7265	4650451	17	True				
ANR	4650661	Statement	","	271:41:7266:7266	4650451	18	True				
ANR	4650662	Statement	core	272:6:7274:7277	4650451	19	True				
ANR	4650663	Statement	->	272:10:7278:7279	4650451	20	True				
ANR	4650664	Statement	yank_addr	272:12:7280:7288	4650451	21	True				
ANR	4650665	Statement	+	272:22:7290:7290	4650451	22	True				
ANR	4650666	Statement	pos	272:24:7292:7294	4650451	23	True				
ANR	4650667	Statement	","	272:27:7295:7295	4650451	24	True				
ANR	4650668	Statement	r_buf_size	273:6:7303:7312	4650451	25	True				
ANR	4650669	Statement	(	273:17:7314:7314	4650451	26	True				
ANR	4650670	Statement	core	273:18:7315:7318	4650451	27	True				
ANR	4650671	Statement	->	273:22:7319:7320	4650451	28	True				
ANR	4650672	Statement	yank_buf	273:24:7321:7328	4650451	29	True				
ANR	4650673	Statement	)	273:32:7329:7329	4650451	30	True				
ANR	4650674	Statement	-	273:34:7331:7331	4650451	31	True				
ANR	4650675	Statement	pos	273:36:7333:7335	4650451	32	True				
ANR	4650676	Statement	)	273:39:7336:7336	4650451	33	True				
ANR	4650677	ExpressionStatement		273:40:7337:7337	4650451	34	True				
ANR	4650678	ForStatement	for ( i = pos ; i < r_buf_size ( core -> yank_buf ) ; i ++ )		4650451	35					
ANR	4650679	ForInit	i = pos ;	274:9:7348:7355	4650451	0	True				
ANR	4650680	AssignmentExpression	i = pos		4650451	0		=			
ANR	4650681	Identifier	i		4650451	0					
ANR	4650682	Identifier	pos		4650451	1					
ANR	4650683	Condition	i < r_buf_size ( core -> yank_buf )	274:18:7357:7387	4650451	1	True				
ANR	4650684	RelationalExpression	i < r_buf_size ( core -> yank_buf )		4650451	0		<			
ANR	4650685	Identifier	i		4650451	0					
ANR	4650686	CallExpression	r_buf_size ( core -> yank_buf )		4650451	1					
ANR	4650687	Callee	r_buf_size		4650451	0					
ANR	4650688	Identifier	r_buf_size		4650451	0					
ANR	4650689	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650690	Argument	core -> yank_buf		4650451	0					
ANR	4650691	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650692	Identifier	core		4650451	0					
ANR	4650693	Identifier	yank_buf		4650451	1					
ANR	4650694	PostIncDecOperationExpression	i ++	274:51:7390:7392	4650451	2	True				
ANR	4650695	Identifier	i		4650451	0					
ANR	4650696	IncDec	++		4650451	1					
ANR	4650697	CompoundStatement		36:56:1050:1050	4650451	3					
ANR	4650698	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"	275:5:7402:7460	4650451	0	True				
ANR	4650699	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8_at ( core -> yank_buf , i ) )"		4650451	0					
ANR	4650700	Callee	r_cons_printf		4650451	0					
ANR	4650701	Identifier	r_cons_printf		4650451	0					
ANR	4650702	ArgumentList	"""%02x"""		4650451	1					
ANR	4650703	Argument	"""%02x"""		4650451	0					
ANR	4650704	PrimaryExpression	"""%02x"""		4650451	0					
ANR	4650705	Argument	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	1					
ANR	4650706	CallExpression	"r_buf_read8_at ( core -> yank_buf , i )"		4650451	0					
ANR	4650707	Callee	r_buf_read8_at		4650451	0					
ANR	4650708	Identifier	r_buf_read8_at		4650451	0					
ANR	4650709	ArgumentList	core -> yank_buf		4650451	1					
ANR	4650710	Argument	core -> yank_buf		4650451	0					
ANR	4650711	PtrMemberAccess	core -> yank_buf		4650451	0					
ANR	4650712	Identifier	core		4650451	0					
ANR	4650713	Identifier	yank_buf		4650451	1					
ANR	4650714	Argument	i		4650451	1					
ANR	4650715	Identifier	i		4650451	0					
ANR	4650716	ExpressionStatement	r_cons_newline ( )	277:4:7472:7489	4650451	36	True				
ANR	4650717	CallExpression	r_cons_newline ( )		4650451	0					
ANR	4650718	Callee	r_cons_newline		4650451	0					
ANR	4650719	Identifier	r_cons_newline		4650451	0					
ANR	4650720	ArgumentList			4650451	1					
ANR	4650721	ExpressionStatement	res = true	279:3:7499:7509	4650451	1	True				
ANR	4650722	AssignmentExpression	res = true		4650451	0		=			
ANR	4650723	Identifier	res		4650451	0					
ANR	4650724	Identifier	true		4650451	1					
ANR	4650725	ElseStatement	else		4650451	0					
ANR	4650726	CompoundStatement		42:9:1175:1175	4650451	0					
ANR	4650727	ExpressionStatement	"eprintf ( ""Position exceeds buffer length.\\n"" )"	281:3:7525:7570	4650451	0	True				
ANR	4650728	CallExpression	"eprintf ( ""Position exceeds buffer length.\\n"" )"		4650451	0					
ANR	4650729	Callee	eprintf		4650451	0					
ANR	4650730	Identifier	eprintf		4650451	0					
ANR	4650731	ArgumentList	"""Position exceeds buffer length.\\n"""		4650451	1					
ANR	4650732	Argument	"""Position exceeds buffer length.\\n"""		4650451	0					
ANR	4650733	PrimaryExpression	"""Position exceeds buffer length.\\n"""		4650451	0					
ANR	4650734	ElseStatement	else		4650451	0					
ANR	4650735	CompoundStatement		45:8:1239:1239	4650451	0					
ANR	4650736	IfStatement	if ( format == 'j' )		4650451	0					
ANR	4650737	Condition	format == 'j'	284:6:7592:7604	4650451	0	True				
ANR	4650738	EqualityExpression	format == 'j'		4650451	0		==			
ANR	4650739	Identifier	format		4650451	0					
ANR	4650740	PrimaryExpression	'j'		4650451	1					
ANR	4650741	CompoundStatement		46:21:1262:1262	4650451	1					
ANR	4650742	ExpressionStatement	"r_cons_printf ( ""{}\\n"" )"	285:3:7612:7634	4650451	0	True				
ANR	4650743	CallExpression	"r_cons_printf ( ""{}\\n"" )"		4650451	0					
ANR	4650744	Callee	r_cons_printf		4650451	0					
ANR	4650745	Identifier	r_cons_printf		4650451	0					
ANR	4650746	ArgumentList	"""{}\\n"""		4650451	1					
ANR	4650747	Argument	"""{}\\n"""		4650451	0					
ANR	4650748	PrimaryExpression	"""{}\\n"""		4650451	0					
ANR	4650749	ElseStatement	else		4650451	0					
ANR	4650750	CompoundStatement		48:9:1300:1300	4650451	0					
ANR	4650751	ExpressionStatement	"eprintf ( ""No buffer yanked already\\n"" )"	287:3:7650:7688	4650451	0	True				
ANR	4650752	CallExpression	"eprintf ( ""No buffer yanked already\\n"" )"		4650451	0					
ANR	4650753	Callee	eprintf		4650451	0					
ANR	4650754	Identifier	eprintf		4650451	0					
ANR	4650755	ArgumentList	"""No buffer yanked already\\n"""		4650451	1					
ANR	4650756	Argument	"""No buffer yanked already\\n"""		4650451	0					
ANR	4650757	PrimaryExpression	"""No buffer yanked already\\n"""		4650451	0					
ANR	4650758	ReturnStatement	return res ;	290:1:7698:7708	4650451	4	True				
ANR	4650759	Identifier	res		4650451	0					
ANR	4650760	ReturnType	R_API bool		4650451	1					
ANR	4650761	Identifier	r_core_yank_dump		4650451	2					
ANR	4650762	ParameterList	"RCore * core , ut64 pos , int format"		4650451	3					
ANR	4650763	Parameter	RCore * core	239:28:6309:6319	4650451	0	True				
ANR	4650764	ParameterType	RCore *		4650451	0					
ANR	4650765	Identifier	core		4650451	1					
ANR	4650766	Parameter	ut64 pos	239:41:6322:6329	4650451	1	True				
ANR	4650767	ParameterType	ut64		4650451	0					
ANR	4650768	Identifier	pos		4650451	1					
ANR	4650769	Parameter	int format	239:51:6332:6341	4650451	2	True				
ANR	4650770	ParameterType	int		4650451	0					
ANR	4650771	Identifier	format		4650451	1					
ANR	4650772	CFGEntryNode	ENTRY		4650451		True				
ANR	4650773	CFGExitNode	EXIT		4650451		True				
ANR	4650774	Symbol	core		4650451						
ANR	4650775	Symbol	res		4650451						
ANR	4650776	Symbol	ybl		4650451						
ANR	4650777	Symbol	pos		4650451						
ANR	4650778	Symbol	r_buf_read8_at		4650451						
ANR	4650779	Symbol	core -> yank_buf		4650451						
ANR	4650780	Symbol	format		4650451						
ANR	4650781	Symbol	false		4650451						
ANR	4650782	Symbol	* core		4650451						
ANR	4650783	Symbol	true		4650451						
ANR	4650784	Symbol	i		4650451						
ANR	4650785	Symbol	r_buf_size		4650451						
ANR	4650786	Function	r_core_yank_hexdump	293:0:7713:8211							
ANR	4650787	FunctionDef	"r_core_yank_hexdump (RCore * core , ut64 pos)"		4650786	0					
ANR	4650788	CompoundStatement		293:53:7766:8211	4650786	0					
ANR	4650789	IdentifierDeclStatement	int res = false ;	294:1:7769:7784	4650786	0	True				
ANR	4650790	IdentifierDecl	res = false		4650786	0					
ANR	4650791	IdentifierDeclType	int		4650786	0					
ANR	4650792	Identifier	res		4650786	1					
ANR	4650793	AssignmentExpression	res = false		4650786	2		=			
ANR	4650794	Identifier	false		4650786	0					
ANR	4650795	Identifier	false		4650786	1					
ANR	4650796	IdentifierDeclStatement	int ybl = r_buf_size ( core -> yank_buf ) ;	295:1:7787:7824	4650786	1	True				
ANR	4650797	IdentifierDecl	ybl = r_buf_size ( core -> yank_buf )		4650786	0					
ANR	4650798	IdentifierDeclType	int		4650786	0					
ANR	4650799	Identifier	ybl		4650786	1					
ANR	4650800	AssignmentExpression	ybl = r_buf_size ( core -> yank_buf )		4650786	2		=			
ANR	4650801	Identifier	ybl		4650786	0					
ANR	4650802	CallExpression	r_buf_size ( core -> yank_buf )		4650786	1					
ANR	4650803	Callee	r_buf_size		4650786	0					
ANR	4650804	Identifier	r_buf_size		4650786	0					
ANR	4650805	ArgumentList	core -> yank_buf		4650786	1					
ANR	4650806	Argument	core -> yank_buf		4650786	0					
ANR	4650807	PtrMemberAccess	core -> yank_buf		4650786	0					
ANR	4650808	Identifier	core		4650786	0					
ANR	4650809	Identifier	yank_buf		4650786	1					
ANR	4650810	IfStatement	if ( ybl > 0 )		4650786	2					
ANR	4650811	Condition	ybl > 0	296:5:7831:7837	4650786	0	True				
ANR	4650812	RelationalExpression	ybl > 0		4650786	0		>			
ANR	4650813	Identifier	ybl		4650786	0					
ANR	4650814	PrimaryExpression	0		4650786	1					
ANR	4650815	CompoundStatement		4:14:73:73	4650786	1					
ANR	4650816	IfStatement	if ( pos < ybl )		4650786	0					
ANR	4650817	Condition	pos < ybl	297:6:7848:7856	4650786	0	True				
ANR	4650818	RelationalExpression	pos < ybl		4650786	0		<			
ANR	4650819	Identifier	pos		4650786	0					
ANR	4650820	Identifier	ybl		4650786	1					
ANR	4650821	CompoundStatement		6:3:97:131	4650786	1					
ANR	4650822	IdentifierDeclStatement	"ut8 * buf = R_NEWS ( ut8 , ybl - pos ) ;"	298:3:7864:7898	4650786	0	True				
ANR	4650823	IdentifierDecl	"* buf = R_NEWS ( ut8 , ybl - pos )"		4650786	0					
ANR	4650824	IdentifierDeclType	ut8 *		4650786	0					
ANR	4650825	Identifier	buf		4650786	1					
ANR	4650826	AssignmentExpression	"* buf = R_NEWS ( ut8 , ybl - pos )"		4650786	2		=			
ANR	4650827	Identifier	buf		4650786	0					
ANR	4650828	CallExpression	"R_NEWS ( ut8 , ybl - pos )"		4650786	1					
ANR	4650829	Callee	R_NEWS		4650786	0					
ANR	4650830	Identifier	R_NEWS		4650786	0					
ANR	4650831	ArgumentList	ut8		4650786	1					
ANR	4650832	Argument	ut8		4650786	0					
ANR	4650833	Identifier	ut8		4650786	0					
ANR	4650834	Argument	ybl - pos		4650786	1					
ANR	4650835	AdditiveExpression	ybl - pos		4650786	0		-			
ANR	4650836	Identifier	ybl		4650786	0					
ANR	4650837	Identifier	pos		4650786	1					
ANR	4650838	IfStatement	if ( ! buf )		4650786	1					
ANR	4650839	Condition	! buf	299:7:7907:7910	4650786	0	True				
ANR	4650840	UnaryOperationExpression	! buf		4650786	0					
ANR	4650841	UnaryOperator	!		4650786	0					
ANR	4650842	Identifier	buf		4650786	1					
ANR	4650843	CompoundStatement		7:13:146:146	4650786	1					
ANR	4650844	ReturnStatement	return false ;	300:4:7919:7931	4650786	0	True				
ANR	4650845	Identifier	false		4650786	0					
ANR	4650846	ExpressionStatement	"r_buf_read_at ( core -> yank_buf , pos , buf , ybl - pos )"	302:3:7941:7992	4650786	2	True				
ANR	4650847	CallExpression	"r_buf_read_at ( core -> yank_buf , pos , buf , ybl - pos )"		4650786	0					
ANR	4650848	Callee	r_buf_read_at		4650786	0					
ANR	4650849	Identifier	r_buf_read_at		4650786	0					
ANR	4650850	ArgumentList	core -> yank_buf		4650786	1					
ANR	4650851	Argument	core -> yank_buf		4650786	0					
ANR	4650852	PtrMemberAccess	core -> yank_buf		4650786	0					
ANR	4650853	Identifier	core		4650786	0					
ANR	4650854	Identifier	yank_buf		4650786	1					
ANR	4650855	Argument	pos		4650786	1					
ANR	4650856	Identifier	pos		4650786	0					
ANR	4650857	Argument	buf		4650786	2					
ANR	4650858	Identifier	buf		4650786	0					
ANR	4650859	Argument	ybl - pos		4650786	3					
ANR	4650860	AdditiveExpression	ybl - pos		4650786	0		-			
ANR	4650861	Identifier	ybl		4650786	0					
ANR	4650862	Identifier	pos		4650786	1					
ANR	4650863	ExpressionStatement	"r_print_hexdump ( core -> print , pos , buf , ybl - pos , 16 , 1 , 1 )"	303:3:7997:8061	4650786	3	True				
ANR	4650864	CallExpression	"r_print_hexdump ( core -> print , pos , buf , ybl - pos , 16 , 1 , 1 )"		4650786	0					
ANR	4650865	Callee	r_print_hexdump		4650786	0					
ANR	4650866	Identifier	r_print_hexdump		4650786	0					
ANR	4650867	ArgumentList	core -> print		4650786	1					
ANR	4650868	Argument	core -> print		4650786	0					
ANR	4650869	PtrMemberAccess	core -> print		4650786	0					
ANR	4650870	Identifier	core		4650786	0					
ANR	4650871	Identifier	print		4650786	1					
ANR	4650872	Argument	pos		4650786	1					
ANR	4650873	Identifier	pos		4650786	0					
ANR	4650874	Argument	buf		4650786	2					
ANR	4650875	Identifier	buf		4650786	0					
ANR	4650876	Argument	ybl - pos		4650786	3					
ANR	4650877	AdditiveExpression	ybl - pos		4650786	0		-			
ANR	4650878	Identifier	ybl		4650786	0					
ANR	4650879	Identifier	pos		4650786	1					
ANR	4650880	Argument	16		4650786	4					
ANR	4650881	PrimaryExpression	16		4650786	0					
ANR	4650882	Argument	1		4650786	5					
ANR	4650883	PrimaryExpression	1		4650786	0					
ANR	4650884	Argument	1		4650786	6					
ANR	4650885	PrimaryExpression	1		4650786	0					
ANR	4650886	ExpressionStatement	res = true	305:3:8066:8076	4650786	4	True				
ANR	4650887	AssignmentExpression	res = true		4650786	0		=			
ANR	4650888	Identifier	res		4650786	0					
ANR	4650889	Identifier	true		4650786	1					
ANR	4650890	ElseStatement	else		4650786	0					
ANR	4650891	CompoundStatement		14:9:320:320	4650786	0					
ANR	4650892	ExpressionStatement	"eprintf ( ""Position exceeds buffer length.\\n"" )"	307:3:8092:8137	4650786	0	True				
ANR	4650893	CallExpression	"eprintf ( ""Position exceeds buffer length.\\n"" )"		4650786	0					
ANR	4650894	Callee	eprintf		4650786	0					
ANR	4650895	Identifier	eprintf		4650786	0					
ANR	4650896	ArgumentList	"""Position exceeds buffer length.\\n"""		4650786	1					
ANR	4650897	Argument	"""Position exceeds buffer length.\\n"""		4650786	0					
ANR	4650898	PrimaryExpression	"""Position exceeds buffer length.\\n"""		4650786	0					
ANR	4650899	ElseStatement	else		4650786	0					
ANR	4650900	CompoundStatement		17:8:384:384	4650786	0					
ANR	4650901	ExpressionStatement	"eprintf ( ""No buffer yanked already\\n"" )"	310:2:8155:8193	4650786	0	True				
ANR	4650902	CallExpression	"eprintf ( ""No buffer yanked already\\n"" )"		4650786	0					
ANR	4650903	Callee	eprintf		4650786	0					
ANR	4650904	Identifier	eprintf		4650786	0					
ANR	4650905	ArgumentList	"""No buffer yanked already\\n"""		4650786	1					
ANR	4650906	Argument	"""No buffer yanked already\\n"""		4650786	0					
ANR	4650907	PrimaryExpression	"""No buffer yanked already\\n"""		4650786	0					
ANR	4650908	ReturnStatement	return res ;	312:1:8199:8209	4650786	3	True				
ANR	4650909	Identifier	res		4650786	0					
ANR	4650910	ReturnType	R_API int		4650786	1					
ANR	4650911	Identifier	r_core_yank_hexdump		4650786	2					
ANR	4650912	ParameterList	"RCore * core , ut64 pos"		4650786	3					
ANR	4650913	Parameter	RCore * core	293:30:7743:7753	4650786	0	True				
ANR	4650914	ParameterType	RCore *		4650786	0					
ANR	4650915	Identifier	core		4650786	1					
ANR	4650916	Parameter	ut64 pos	293:43:7756:7763	4650786	1	True				
ANR	4650917	ParameterType	ut64		4650786	0					
ANR	4650918	Identifier	pos		4650786	1					
ANR	4650919	CFGEntryNode	ENTRY		4650786		True				
ANR	4650920	CFGExitNode	EXIT		4650786		True				
ANR	4650921	Symbol	res		4650786						
ANR	4650922	Symbol	ybl		4650786						
ANR	4650923	Symbol	false		4650786						
ANR	4650924	Symbol	* core		4650786						
ANR	4650925	Symbol	R_NEWS		4650786						
ANR	4650926	Symbol	core		4650786						
ANR	4650927	Symbol	buf		4650786						
ANR	4650928	Symbol	pos		4650786						
ANR	4650929	Symbol	core -> yank_buf		4650786						
ANR	4650930	Symbol	ut8		4650786						
ANR	4650931	Symbol	true		4650786						
ANR	4650932	Symbol	core -> print		4650786						
ANR	4650933	Symbol	r_buf_size		4650786						
ANR	4650934	Function	r_core_yank_cat	315:0:8214:8660							
ANR	4650935	FunctionDef	"r_core_yank_cat (RCore * core , ut64 pos)"		4650934	0					
ANR	4650936	CompoundStatement		315:49:8263:8660	4650934	0					
ANR	4650937	IdentifierDeclStatement	int ybl = r_buf_size ( core -> yank_buf ) ;	316:1:8266:8303	4650934	0	True				
ANR	4650938	IdentifierDecl	ybl = r_buf_size ( core -> yank_buf )		4650934	0					
ANR	4650939	IdentifierDeclType	int		4650934	0					
ANR	4650940	Identifier	ybl		4650934	1					
ANR	4650941	AssignmentExpression	ybl = r_buf_size ( core -> yank_buf )		4650934	2		=			
ANR	4650942	Identifier	ybl		4650934	0					
ANR	4650943	CallExpression	r_buf_size ( core -> yank_buf )		4650934	1					
ANR	4650944	Callee	r_buf_size		4650934	0					
ANR	4650945	Identifier	r_buf_size		4650934	0					
ANR	4650946	ArgumentList	core -> yank_buf		4650934	1					
ANR	4650947	Argument	core -> yank_buf		4650934	0					
ANR	4650948	PtrMemberAccess	core -> yank_buf		4650934	0					
ANR	4650949	Identifier	core		4650934	0					
ANR	4650950	Identifier	yank_buf		4650934	1					
ANR	4650951	IfStatement	if ( ybl > 0 )		4650934	1					
ANR	4650952	Condition	ybl > 0	317:5:8310:8316	4650934	0	True				
ANR	4650953	RelationalExpression	ybl > 0		4650934	0		>			
ANR	4650954	Identifier	ybl		4650934	0					
ANR	4650955	PrimaryExpression	0		4650934	1					
ANR	4650956	CompoundStatement		3:14:55:55	4650934	1					
ANR	4650957	IfStatement	if ( pos < ybl )		4650934	0					
ANR	4650958	Condition	pos < ybl	318:6:8327:8335	4650934	0	True				
ANR	4650959	RelationalExpression	pos < ybl		4650934	0		<			
ANR	4650960	Identifier	pos		4650934	0					
ANR	4650961	Identifier	ybl		4650934	1					
ANR	4650962	CompoundStatement		6:3:103:132	4650934	1					
ANR	4650963	IdentifierDeclStatement	ut64 sz = ybl - pos ;	319:3:8343:8362	4650934	0	True				
ANR	4650964	IdentifierDecl	sz = ybl - pos		4650934	0					
ANR	4650965	IdentifierDeclType	ut64		4650934	0					
ANR	4650966	Identifier	sz		4650934	1					
ANR	4650967	AssignmentExpression	sz = ybl - pos		4650934	2		=			
ANR	4650968	Identifier	sz		4650934	0					
ANR	4650969	AdditiveExpression	ybl - pos		4650934	1		-			
ANR	4650970	Identifier	ybl		4650934	0					
ANR	4650971	Identifier	pos		4650934	1					
ANR	4650972	IdentifierDeclStatement	"char * buf = R_NEWS ( char , sz ) ;"	320:3:8367:8396	4650934	1	True				
ANR	4650973	IdentifierDecl	"* buf = R_NEWS ( char , sz )"		4650934	0					
ANR	4650974	IdentifierDeclType	char *		4650934	0					
ANR	4650975	Identifier	buf		4650934	1					
ANR	4650976	AssignmentExpression	"* buf = R_NEWS ( char , sz )"		4650934	2		=			
ANR	4650977	Identifier	buf		4650934	0					
ANR	4650978	CallExpression	"R_NEWS ( char , sz )"		4650934	1					
ANR	4650979	Callee	R_NEWS		4650934	0					
ANR	4650980	Identifier	R_NEWS		4650934	0					
ANR	4650981	ArgumentList	char		4650934	1					
ANR	4650982	Argument	char		4650934	0					
ANR	4650983	Identifier	char		4650934	0					
ANR	4650984	Argument	sz		4650934	1					
ANR	4650985	Identifier	sz		4650934	0					
ANR	4650986	IfStatement	if ( ! buf )		4650934	2					
ANR	4650987	Condition	! buf	321:7:8405:8408	4650934	0	True				
ANR	4650988	UnaryOperationExpression	! buf		4650934	0					
ANR	4650989	UnaryOperator	!		4650934	0					
ANR	4650990	Identifier	buf		4650934	1					
ANR	4650991	CompoundStatement		7:13:147:147	4650934	1					
ANR	4650992	ReturnStatement	return false ;	322:4:8417:8429	4650934	0	True				
ANR	4650993	Identifier	false		4650934	0					
ANR	4650994	ExpressionStatement	"r_buf_read_at ( core -> yank_buf , pos , ( ut8 * ) buf , sz )"	324:3:8439:8490	4650934	3	True				
ANR	4650995	CallExpression	"r_buf_read_at ( core -> yank_buf , pos , ( ut8 * ) buf , sz )"		4650934	0					
ANR	4650996	Callee	r_buf_read_at		4650934	0					
ANR	4650997	Identifier	r_buf_read_at		4650934	0					
ANR	4650998	ArgumentList	core -> yank_buf		4650934	1					
ANR	4650999	Argument	core -> yank_buf		4650934	0					
ANR	4651000	PtrMemberAccess	core -> yank_buf		4650934	0					
ANR	4651001	Identifier	core		4650934	0					
ANR	4651002	Identifier	yank_buf		4650934	1					
ANR	4651003	Argument	pos		4650934	1					
ANR	4651004	Identifier	pos		4650934	0					
ANR	4651005	Argument	( ut8 * ) buf		4650934	2					
ANR	4651006	CastExpression	( ut8 * ) buf		4650934	0					
ANR	4651007	CastTarget	ut8 *		4650934	0					
ANR	4651008	Identifier	buf		4650934	1					
ANR	4651009	Argument	sz		4650934	3					
ANR	4651010	Identifier	sz		4650934	0					
ANR	4651011	ExpressionStatement	"r_cons_memcat ( buf , sz )"	325:3:8495:8518	4650934	4	True				
ANR	4651012	CallExpression	"r_cons_memcat ( buf , sz )"		4650934	0					
ANR	4651013	Callee	r_cons_memcat		4650934	0					
ANR	4651014	Identifier	r_cons_memcat		4650934	0					
ANR	4651015	ArgumentList	buf		4650934	1					
ANR	4651016	Argument	buf		4650934	0					
ANR	4651017	Identifier	buf		4650934	0					
ANR	4651018	Argument	sz		4650934	1					
ANR	4651019	Identifier	sz		4650934	0					
ANR	4651020	ExpressionStatement	r_cons_newline ( )	326:3:8523:8540	4650934	5	True				
ANR	4651021	CallExpression	r_cons_newline ( )		4650934	0					
ANR	4651022	Callee	r_cons_newline		4650934	0					
ANR	4651023	Identifier	r_cons_newline		4650934	0					
ANR	4651024	ArgumentList			4650934	1					
ANR	4651025	ReturnStatement	return true ;	327:3:8545:8556	4650934	6	True				
ANR	4651026	Identifier	true		4650934	0					
ANR	4651027	ExpressionStatement	"eprintf ( ""Position exceeds buffer length.\\n"" )"	329:2:8564:8609	4650934	1	True				
ANR	4651028	CallExpression	"eprintf ( ""Position exceeds buffer length.\\n"" )"		4650934	0					
ANR	4651029	Callee	eprintf		4650934	0					
ANR	4651030	Identifier	eprintf		4650934	0					
ANR	4651031	ArgumentList	"""Position exceeds buffer length.\\n"""		4650934	1					
ANR	4651032	Argument	"""Position exceeds buffer length.\\n"""		4650934	0					
ANR	4651033	PrimaryExpression	"""Position exceeds buffer length.\\n"""		4650934	0					
ANR	4651034	ElseStatement	else		4650934	0					
ANR	4651035	CompoundStatement		16:8:355:355	4650934	0					
ANR	4651036	ExpressionStatement	r_cons_newline ( )	331:2:8623:8640	4650934	0	True				
ANR	4651037	CallExpression	r_cons_newline ( )		4650934	0					
ANR	4651038	Callee	r_cons_newline		4650934	0					
ANR	4651039	Identifier	r_cons_newline		4650934	0					
ANR	4651040	ArgumentList			4650934	1					
ANR	4651041	ReturnStatement	return false ;	333:1:8646:8658	4650934	2	True				
ANR	4651042	Identifier	false		4650934	0					
ANR	4651043	ReturnType	R_API int		4650934	1					
ANR	4651044	Identifier	r_core_yank_cat		4650934	2					
ANR	4651045	ParameterList	"RCore * core , ut64 pos"		4650934	3					
ANR	4651046	Parameter	RCore * core	315:26:8240:8250	4650934	0	True				
ANR	4651047	ParameterType	RCore *		4650934	0					
ANR	4651048	Identifier	core		4650934	1					
ANR	4651049	Parameter	ut64 pos	315:39:8253:8260	4650934	1	True				
ANR	4651050	ParameterType	ut64		4650934	0					
ANR	4651051	Identifier	pos		4650934	1					
ANR	4651052	CFGEntryNode	ENTRY		4650934		True				
ANR	4651053	CFGExitNode	EXIT		4650934		True				
ANR	4651054	Symbol	core		4650934						
ANR	4651055	Symbol	ybl		4650934						
ANR	4651056	Symbol	buf		4650934						
ANR	4651057	Symbol	pos		4650934						
ANR	4651058	Symbol	core -> yank_buf		4650934						
ANR	4651059	Symbol	sz		4650934						
ANR	4651060	Symbol	* core		4650934						
ANR	4651061	Symbol	char		4650934						
ANR	4651062	Symbol	false		4650934						
ANR	4651063	Symbol	true		4650934						
ANR	4651064	Symbol	R_NEWS		4650934						
ANR	4651065	Symbol	r_buf_size		4650934						
ANR	4651066	Function	r_core_yank_cat_string	336:0:8663:9152							
ANR	4651067	FunctionDef	"r_core_yank_cat_string (RCore * core , ut64 pos)"		4651066	0					
ANR	4651068	CompoundStatement		336:56:8719:9152	4651066	0					
ANR	4651069	IdentifierDeclStatement	int ybl = r_buf_size ( core -> yank_buf ) ;	337:1:8722:8759	4651066	0	True				
ANR	4651070	IdentifierDecl	ybl = r_buf_size ( core -> yank_buf )		4651066	0					
ANR	4651071	IdentifierDeclType	int		4651066	0					
ANR	4651072	Identifier	ybl		4651066	1					
ANR	4651073	AssignmentExpression	ybl = r_buf_size ( core -> yank_buf )		4651066	2		=			
ANR	4651074	Identifier	ybl		4651066	0					
ANR	4651075	CallExpression	r_buf_size ( core -> yank_buf )		4651066	1					
ANR	4651076	Callee	r_buf_size		4651066	0					
ANR	4651077	Identifier	r_buf_size		4651066	0					
ANR	4651078	ArgumentList	core -> yank_buf		4651066	1					
ANR	4651079	Argument	core -> yank_buf		4651066	0					
ANR	4651080	PtrMemberAccess	core -> yank_buf		4651066	0					
ANR	4651081	Identifier	core		4651066	0					
ANR	4651082	Identifier	yank_buf		4651066	1					
ANR	4651083	IfStatement	if ( ybl > 0 )		4651066	1					
ANR	4651084	Condition	ybl > 0	338:5:8766:8772	4651066	0	True				
ANR	4651085	RelationalExpression	ybl > 0		4651066	0		>			
ANR	4651086	Identifier	ybl		4651066	0					
ANR	4651087	PrimaryExpression	0		4651066	1					
ANR	4651088	CompoundStatement		3:14:55:55	4651066	1					
ANR	4651089	IfStatement	if ( pos < ybl )		4651066	0					
ANR	4651090	Condition	pos < ybl	339:6:8783:8791	4651066	0	True				
ANR	4651091	RelationalExpression	pos < ybl		4651066	0		<			
ANR	4651092	Identifier	pos		4651066	0					
ANR	4651093	Identifier	ybl		4651066	1					
ANR	4651094	CompoundStatement		11:3:231:261	4651066	1					
ANR	4651095	IdentifierDeclStatement	ut64 sz = ybl - pos ;	340:3:8799:8818	4651066	0	True				
ANR	4651096	IdentifierDecl	sz = ybl - pos		4651066	0					
ANR	4651097	IdentifierDeclType	ut64		4651066	0					
ANR	4651098	Identifier	sz		4651066	1					
ANR	4651099	AssignmentExpression	sz = ybl - pos		4651066	2		=			
ANR	4651100	Identifier	sz		4651066	0					
ANR	4651101	AdditiveExpression	ybl - pos		4651066	1		-			
ANR	4651102	Identifier	ybl		4651066	0					
ANR	4651103	Identifier	pos		4651066	1					
ANR	4651104	IdentifierDeclStatement	"char * buf = R_NEWS ( char , sz ) ;"	341:3:8823:8852	4651066	1	True				
ANR	4651105	IdentifierDecl	"* buf = R_NEWS ( char , sz )"		4651066	0					
ANR	4651106	IdentifierDeclType	char *		4651066	0					
ANR	4651107	Identifier	buf		4651066	1					
ANR	4651108	AssignmentExpression	"* buf = R_NEWS ( char , sz )"		4651066	2		=			
ANR	4651109	Identifier	buf		4651066	0					
ANR	4651110	CallExpression	"R_NEWS ( char , sz )"		4651066	1					
ANR	4651111	Callee	R_NEWS		4651066	0					
ANR	4651112	Identifier	R_NEWS		4651066	0					
ANR	4651113	ArgumentList	char		4651066	1					
ANR	4651114	Argument	char		4651066	0					
ANR	4651115	Identifier	char		4651066	0					
ANR	4651116	Argument	sz		4651066	1					
ANR	4651117	Identifier	sz		4651066	0					
ANR	4651118	IfStatement	if ( ! buf )		4651066	2					
ANR	4651119	Condition	! buf	342:7:8861:8864	4651066	0	True				
ANR	4651120	UnaryOperationExpression	! buf		4651066	0					
ANR	4651121	UnaryOperator	!		4651066	0					
ANR	4651122	Identifier	buf		4651066	1					
ANR	4651123	CompoundStatement		7:13:147:147	4651066	1					
ANR	4651124	ReturnStatement	return false ;	343:4:8873:8885	4651066	0	True				
ANR	4651125	Identifier	false		4651066	0					
ANR	4651126	ExpressionStatement	"r_buf_read_at ( core -> yank_buf , pos , ( ut8 * ) buf , sz )"	345:3:8895:8946	4651066	3	True				
ANR	4651127	CallExpression	"r_buf_read_at ( core -> yank_buf , pos , ( ut8 * ) buf , sz )"		4651066	0					
ANR	4651128	Callee	r_buf_read_at		4651066	0					
ANR	4651129	Identifier	r_buf_read_at		4651066	0					
ANR	4651130	ArgumentList	core -> yank_buf		4651066	1					
ANR	4651131	Argument	core -> yank_buf		4651066	0					
ANR	4651132	PtrMemberAccess	core -> yank_buf		4651066	0					
ANR	4651133	Identifier	core		4651066	0					
ANR	4651134	Identifier	yank_buf		4651066	1					
ANR	4651135	Argument	pos		4651066	1					
ANR	4651136	Identifier	pos		4651066	0					
ANR	4651137	Argument	( ut8 * ) buf		4651066	2					
ANR	4651138	CastExpression	( ut8 * ) buf		4651066	0					
ANR	4651139	CastTarget	ut8 *		4651066	0					
ANR	4651140	Identifier	buf		4651066	1					
ANR	4651141	Argument	sz		4651066	3					
ANR	4651142	Identifier	sz		4651066	0					
ANR	4651143	IdentifierDeclStatement	"int len = r_str_nlen ( buf , sz ) ;"	346:3:8951:8981	4651066	4	True				
ANR	4651144	IdentifierDecl	"len = r_str_nlen ( buf , sz )"		4651066	0					
ANR	4651145	IdentifierDeclType	int		4651066	0					
ANR	4651146	Identifier	len		4651066	1					
ANR	4651147	AssignmentExpression	"len = r_str_nlen ( buf , sz )"		4651066	2		=			
ANR	4651148	Identifier	len		4651066	0					
ANR	4651149	CallExpression	"r_str_nlen ( buf , sz )"		4651066	1					
ANR	4651150	Callee	r_str_nlen		4651066	0					
ANR	4651151	Identifier	r_str_nlen		4651066	0					
ANR	4651152	ArgumentList	buf		4651066	1					
ANR	4651153	Argument	buf		4651066	0					
ANR	4651154	Identifier	buf		4651066	0					
ANR	4651155	Argument	sz		4651066	1					
ANR	4651156	Identifier	sz		4651066	0					
ANR	4651157	ExpressionStatement	"r_cons_memcat ( buf , len )"	347:3:8986:9010	4651066	5	True				
ANR	4651158	CallExpression	"r_cons_memcat ( buf , len )"		4651066	0					
ANR	4651159	Callee	r_cons_memcat		4651066	0					
ANR	4651160	Identifier	r_cons_memcat		4651066	0					
ANR	4651161	ArgumentList	buf		4651066	1					
ANR	4651162	Argument	buf		4651066	0					
ANR	4651163	Identifier	buf		4651066	0					
ANR	4651164	Argument	len		4651066	1					
ANR	4651165	Identifier	len		4651066	0					
ANR	4651166	ExpressionStatement	r_cons_newline ( )	348:3:9015:9032	4651066	6	True				
ANR	4651167	CallExpression	r_cons_newline ( )		4651066	0					
ANR	4651168	Callee	r_cons_newline		4651066	0					
ANR	4651169	Identifier	r_cons_newline		4651066	0					
ANR	4651170	ArgumentList			4651066	1					
ANR	4651171	ReturnStatement	return true ;	349:3:9037:9048	4651066	7	True				
ANR	4651172	Identifier	true		4651066	0					
ANR	4651173	ExpressionStatement	"eprintf ( ""Position exceeds buffer length.\\n"" )"	351:2:9056:9101	4651066	1	True				
ANR	4651174	CallExpression	"eprintf ( ""Position exceeds buffer length.\\n"" )"		4651066	0					
ANR	4651175	Callee	eprintf		4651066	0					
ANR	4651176	Identifier	eprintf		4651066	0					
ANR	4651177	ArgumentList	"""Position exceeds buffer length.\\n"""		4651066	1					
ANR	4651178	Argument	"""Position exceeds buffer length.\\n"""		4651066	0					
ANR	4651179	PrimaryExpression	"""Position exceeds buffer length.\\n"""		4651066	0					
ANR	4651180	ElseStatement	else		4651066	0					
ANR	4651181	CompoundStatement		17:8:391:391	4651066	0					
ANR	4651182	ExpressionStatement	r_cons_newline ( )	353:2:9115:9132	4651066	0	True				
ANR	4651183	CallExpression	r_cons_newline ( )		4651066	0					
ANR	4651184	Callee	r_cons_newline		4651066	0					
ANR	4651185	Identifier	r_cons_newline		4651066	0					
ANR	4651186	ArgumentList			4651066	1					
ANR	4651187	ReturnStatement	return false ;	355:1:9138:9150	4651066	2	True				
ANR	4651188	Identifier	false		4651066	0					
ANR	4651189	ReturnType	R_API int		4651066	1					
ANR	4651190	Identifier	r_core_yank_cat_string		4651066	2					
ANR	4651191	ParameterList	"RCore * core , ut64 pos"		4651066	3					
ANR	4651192	Parameter	RCore * core	336:33:8696:8706	4651066	0	True				
ANR	4651193	ParameterType	RCore *		4651066	0					
ANR	4651194	Identifier	core		4651066	1					
ANR	4651195	Parameter	ut64 pos	336:46:8709:8716	4651066	1	True				
ANR	4651196	ParameterType	ut64		4651066	0					
ANR	4651197	Identifier	pos		4651066	1					
ANR	4651198	CFGEntryNode	ENTRY		4651066		True				
ANR	4651199	CFGExitNode	EXIT		4651066		True				
ANR	4651200	Symbol	ybl		4651066						
ANR	4651201	Symbol	sz		4651066						
ANR	4651202	Symbol	* core		4651066						
ANR	4651203	Symbol	false		4651066						
ANR	4651204	Symbol	r_str_nlen		4651066						
ANR	4651205	Symbol	R_NEWS		4651066						
ANR	4651206	Symbol	core		4651066						
ANR	4651207	Symbol	buf		4651066						
ANR	4651208	Symbol	len		4651066						
ANR	4651209	Symbol	pos		4651066						
ANR	4651210	Symbol	core -> yank_buf		4651066						
ANR	4651211	Symbol	char		4651066						
ANR	4651212	Symbol	true		4651066						
ANR	4651213	Symbol	r_buf_size		4651066						
ANR	4651214	Function	r_core_yank_hud_file	358:0:9155:9550							
ANR	4651215	FunctionDef	"r_core_yank_hud_file (RCore * core , const char * input)"		4651214	0					
ANR	4651216	CompoundStatement		358:63:9218:9550	4651214	0					
ANR	4651217	IdentifierDeclStatement	char * buf = NULL ;	359:1:9221:9237	4651214	0	True				
ANR	4651218	IdentifierDecl	* buf = NULL		4651214	0					
ANR	4651219	IdentifierDeclType	char *		4651214	0					
ANR	4651220	Identifier	buf		4651214	1					
ANR	4651221	AssignmentExpression	* buf = NULL		4651214	2		=			
ANR	4651222	Identifier	NULL		4651214	0					
ANR	4651223	Identifier	NULL		4651214	1					
ANR	4651224	IdentifierDeclStatement	bool res = false ;	360:1:9240:9256	4651214	1	True				
ANR	4651225	IdentifierDecl	res = false		4651214	0					
ANR	4651226	IdentifierDeclType	bool		4651214	0					
ANR	4651227	Identifier	res		4651214	1					
ANR	4651228	AssignmentExpression	res = false		4651214	2		=			
ANR	4651229	Identifier	false		4651214	0					
ANR	4651230	Identifier	false		4651214	1					
ANR	4651231	IdentifierDeclStatement	ut32 len = 0 ;	361:1:9259:9271	4651214	2	True				
ANR	4651232	IdentifierDecl	len = 0		4651214	0					
ANR	4651233	IdentifierDeclType	ut32		4651214	0					
ANR	4651234	Identifier	len		4651214	1					
ANR	4651235	AssignmentExpression	len = 0		4651214	2		=			
ANR	4651236	Identifier	len		4651214	0					
ANR	4651237	PrimaryExpression	0		4651214	1					
ANR	4651238	IfStatement	if ( ! input || ! * input )		4651214	3					
ANR	4651239	Condition	! input || ! * input	362:5:9278:9294	4651214	0	True				
ANR	4651240	OrExpression	! input || ! * input		4651214	0		||			
ANR	4651241	UnaryOperationExpression	! input		4651214	0					
ANR	4651242	UnaryOperator	!		4651214	0					
ANR	4651243	Identifier	input		4651214	1					
ANR	4651244	UnaryOperationExpression	! * input		4651214	1					
ANR	4651245	UnaryOperator	!		4651214	0					
ANR	4651246	UnaryOperationExpression	* input		4651214	1					
ANR	4651247	UnaryOperator	*		4651214	0					
ANR	4651248	Identifier	input		4651214	1					
ANR	4651249	CompoundStatement		5:24:78:78	4651214	1					
ANR	4651250	ReturnStatement	return false ;	363:2:9301:9313	4651214	0	True				
ANR	4651251	Identifier	false		4651214	0					
ANR	4651252	ForStatement	for ( input ++ ; * input == ' ' ; input ++ )		4651214	4					
ANR	4651253	ForInit	input ++ ;	365:6:9324:9331	4651214	0	True				
ANR	4651254	PostIncDecOperationExpression	input ++		4651214	0					
ANR	4651255	Identifier	input		4651214	0					
ANR	4651256	IncDec	++		4651214	1					
ANR	4651257	Condition	* input == ' '	365:15:9333:9345	4651214	1	True				
ANR	4651258	EqualityExpression	* input == ' '		4651214	0		==			
ANR	4651259	UnaryOperationExpression	* input		4651214	0					
ANR	4651260	UnaryOperator	*		4651214	0					
ANR	4651261	Identifier	input		4651214	1					
ANR	4651262	PrimaryExpression	' '		4651214	1					
ANR	4651263	PostIncDecOperationExpression	input ++	365:30:9348:9354	4651214	2	True				
ANR	4651264	Identifier	input		4651214	0					
ANR	4651265	IncDec	++		4651214	1					
ANR	4651266	CompoundStatement		8:39:138:138	4651214	3					
ANR	4651267	ExpressionStatement	buf = r_cons_hud_file ( input )	368:1:9379:9408	4651214	5	True				
ANR	4651268	AssignmentExpression	buf = r_cons_hud_file ( input )		4651214	0		=			
ANR	4651269	Identifier	buf		4651214	0					
ANR	4651270	CallExpression	r_cons_hud_file ( input )		4651214	1					
ANR	4651271	Callee	r_cons_hud_file		4651214	0					
ANR	4651272	Identifier	r_cons_hud_file		4651214	0					
ANR	4651273	ArgumentList	input		4651214	1					
ANR	4651274	Argument	input		4651214	0					
ANR	4651275	Identifier	input		4651214	0					
ANR	4651276	ExpressionStatement	len = buf ? strlen ( ( const char * ) buf ) + 1 : 0	369:1:9411:9456	4651214	6	True				
ANR	4651277	AssignmentExpression	len = buf ? strlen ( ( const char * ) buf ) + 1 : 0		4651214	0		=			
ANR	4651278	Identifier	len		4651214	0					
ANR	4651279	ConditionalExpression	buf ? strlen ( ( const char * ) buf ) + 1 : 0		4651214	1					
ANR	4651280	Condition	buf		4651214	0					
ANR	4651281	Identifier	buf		4651214	0					
ANR	4651282	AdditiveExpression	strlen ( ( const char * ) buf ) + 1		4651214	1		+			
ANR	4651283	CallExpression	strlen ( ( const char * ) buf )		4651214	0					
ANR	4651284	Callee	strlen		4651214	0					
ANR	4651285	Identifier	strlen		4651214	0					
ANR	4651286	ArgumentList	( const char * ) buf		4651214	1					
ANR	4651287	Argument	( const char * ) buf		4651214	0					
ANR	4651288	CastExpression	( const char * ) buf		4651214	0					
ANR	4651289	CastTarget	const char *		4651214	0					
ANR	4651290	Identifier	buf		4651214	1					
ANR	4651291	PrimaryExpression	1		4651214	1					
ANR	4651292	PrimaryExpression	0		4651214	2					
ANR	4651293	ExpressionStatement	"res = r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , buf , len )"	370:1:9459:9522	4651214	7	True				
ANR	4651294	AssignmentExpression	"res = r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , buf , len )"		4651214	0		=			
ANR	4651295	Identifier	res		4651214	0					
ANR	4651296	CallExpression	"r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , buf , len )"		4651214	1					
ANR	4651297	Callee	r_core_yank_set_str		4651214	0					
ANR	4651298	Identifier	r_core_yank_set_str		4651214	0					
ANR	4651299	ArgumentList	core		4651214	1					
ANR	4651300	Argument	core		4651214	0					
ANR	4651301	Identifier	core		4651214	0					
ANR	4651302	Argument	R_CORE_FOREIGN_ADDR		4651214	1					
ANR	4651303	Identifier	R_CORE_FOREIGN_ADDR		4651214	0					
ANR	4651304	Argument	buf		4651214	2					
ANR	4651305	Identifier	buf		4651214	0					
ANR	4651306	Argument	len		4651214	3					
ANR	4651307	Identifier	len		4651214	0					
ANR	4651308	ExpressionStatement	free ( buf )	371:1:9525:9535	4651214	8	True				
ANR	4651309	CallExpression	free ( buf )		4651214	0					
ANR	4651310	Callee	free		4651214	0					
ANR	4651311	Identifier	free		4651214	0					
ANR	4651312	ArgumentList	buf		4651214	1					
ANR	4651313	Argument	buf		4651214	0					
ANR	4651314	Identifier	buf		4651214	0					
ANR	4651315	ReturnStatement	return res ;	372:1:9538:9548	4651214	9	True				
ANR	4651316	Identifier	res		4651214	0					
ANR	4651317	ReturnType	R_API int		4651214	1					
ANR	4651318	Identifier	r_core_yank_hud_file		4651214	2					
ANR	4651319	ParameterList	"RCore * core , const char * input"		4651214	3					
ANR	4651320	Parameter	RCore * core	358:31:9186:9196	4651214	0	True				
ANR	4651321	ParameterType	RCore *		4651214	0					
ANR	4651322	Identifier	core		4651214	1					
ANR	4651323	Parameter	const char * input	358:44:9199:9215	4651214	1	True				
ANR	4651324	ParameterType	const char *		4651214	0					
ANR	4651325	Identifier	input		4651214	1					
ANR	4651326	CFGEntryNode	ENTRY		4651214		True				
ANR	4651327	CFGExitNode	EXIT		4651214		True				
ANR	4651328	Symbol	R_CORE_FOREIGN_ADDR		4651214						
ANR	4651329	Symbol	core		4651214						
ANR	4651330	Symbol	input		4651214						
ANR	4651331	Symbol	res		4651214						
ANR	4651332	Symbol	strlen		4651214						
ANR	4651333	Symbol	buf		4651214						
ANR	4651334	Symbol	NULL		4651214						
ANR	4651335	Symbol	len		4651214						
ANR	4651336	Symbol	false		4651214						
ANR	4651337	Symbol	* input		4651214						
ANR	4651338	Symbol	r_core_yank_set_str		4651214						
ANR	4651339	Symbol	r_cons_hud_file		4651214						
ANR	4651340	Function	r_core_yank_hud_path	375:0:9553:9908							
ANR	4651341	FunctionDef	"r_core_yank_hud_path (RCore * core , const char * input , int dir)"		4651340	0					
ANR	4651342	CompoundStatement		375:72:9625:9908	4651340	0					
ANR	4651343	IdentifierDeclStatement	char * buf = NULL ;	376:1:9628:9644	4651340	0	True				
ANR	4651344	IdentifierDecl	* buf = NULL		4651340	0					
ANR	4651345	IdentifierDeclType	char *		4651340	0					
ANR	4651346	Identifier	buf		4651340	1					
ANR	4651347	AssignmentExpression	* buf = NULL		4651340	2		=			
ANR	4651348	Identifier	NULL		4651340	0					
ANR	4651349	Identifier	NULL		4651340	1					
ANR	4651350	IdentifierDeclStatement	ut32 len = 0 ;	377:1:9647:9659	4651340	1	True				
ANR	4651351	IdentifierDecl	len = 0		4651340	0					
ANR	4651352	IdentifierDeclType	ut32		4651340	0					
ANR	4651353	Identifier	len		4651340	1					
ANR	4651354	AssignmentExpression	len = 0		4651340	2		=			
ANR	4651355	Identifier	len		4651340	0					
ANR	4651356	PrimaryExpression	0		4651340	1					
ANR	4651357	IdentifierDeclStatement	int res ;	378:1:9662:9669	4651340	2	True				
ANR	4651358	IdentifierDecl	res		4651340	0					
ANR	4651359	IdentifierDeclType	int		4651340	0					
ANR	4651360	Identifier	res		4651340	1					
ANR	4651361	ForStatement	for ( input ++ ; * input == ' ' ; input ++ )		4651340	3					
ANR	4651362	ForInit	input ++ ;	379:6:9677:9684	4651340	0	True				
ANR	4651363	PostIncDecOperationExpression	input ++		4651340	0					
ANR	4651364	Identifier	input		4651340	0					
ANR	4651365	IncDec	++		4651340	1					
ANR	4651366	Condition	* input == ' '	379:15:9686:9698	4651340	1	True				
ANR	4651367	EqualityExpression	* input == ' '		4651340	0		==			
ANR	4651368	UnaryOperationExpression	* input		4651340	0					
ANR	4651369	UnaryOperator	*		4651340	0					
ANR	4651370	Identifier	input		4651340	1					
ANR	4651371	PrimaryExpression	' '		4651340	1					
ANR	4651372	PostIncDecOperationExpression	input ++	379:30:9701:9707	4651340	2	True				
ANR	4651373	Identifier	input		4651340	0					
ANR	4651374	IncDec	++		4651340	1					
ANR	4651375	CompoundStatement		5:39:84:84	4651340	3					
ANR	4651376	ExpressionStatement	"buf = r_cons_hud_path ( input , dir )"	382:1:9732:9766	4651340	4	True				
ANR	4651377	AssignmentExpression	"buf = r_cons_hud_path ( input , dir )"		4651340	0		=			
ANR	4651378	Identifier	buf		4651340	0					
ANR	4651379	CallExpression	"r_cons_hud_path ( input , dir )"		4651340	1					
ANR	4651380	Callee	r_cons_hud_path		4651340	0					
ANR	4651381	Identifier	r_cons_hud_path		4651340	0					
ANR	4651382	ArgumentList	input		4651340	1					
ANR	4651383	Argument	input		4651340	0					
ANR	4651384	Identifier	input		4651340	0					
ANR	4651385	Argument	dir		4651340	1					
ANR	4651386	Identifier	dir		4651340	0					
ANR	4651387	ExpressionStatement	len = buf ? strlen ( ( const char * ) buf ) + 1 : 0	383:1:9769:9814	4651340	5	True				
ANR	4651388	AssignmentExpression	len = buf ? strlen ( ( const char * ) buf ) + 1 : 0		4651340	0		=			
ANR	4651389	Identifier	len		4651340	0					
ANR	4651390	ConditionalExpression	buf ? strlen ( ( const char * ) buf ) + 1 : 0		4651340	1					
ANR	4651391	Condition	buf		4651340	0					
ANR	4651392	Identifier	buf		4651340	0					
ANR	4651393	AdditiveExpression	strlen ( ( const char * ) buf ) + 1		4651340	1		+			
ANR	4651394	CallExpression	strlen ( ( const char * ) buf )		4651340	0					
ANR	4651395	Callee	strlen		4651340	0					
ANR	4651396	Identifier	strlen		4651340	0					
ANR	4651397	ArgumentList	( const char * ) buf		4651340	1					
ANR	4651398	Argument	( const char * ) buf		4651340	0					
ANR	4651399	CastExpression	( const char * ) buf		4651340	0					
ANR	4651400	CastTarget	const char *		4651340	0					
ANR	4651401	Identifier	buf		4651340	1					
ANR	4651402	PrimaryExpression	1		4651340	1					
ANR	4651403	PrimaryExpression	0		4651340	2					
ANR	4651404	ExpressionStatement	"res = r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , buf , len )"	384:1:9817:9880	4651340	6	True				
ANR	4651405	AssignmentExpression	"res = r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , buf , len )"		4651340	0		=			
ANR	4651406	Identifier	res		4651340	0					
ANR	4651407	CallExpression	"r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , buf , len )"		4651340	1					
ANR	4651408	Callee	r_core_yank_set_str		4651340	0					
ANR	4651409	Identifier	r_core_yank_set_str		4651340	0					
ANR	4651410	ArgumentList	core		4651340	1					
ANR	4651411	Argument	core		4651340	0					
ANR	4651412	Identifier	core		4651340	0					
ANR	4651413	Argument	R_CORE_FOREIGN_ADDR		4651340	1					
ANR	4651414	Identifier	R_CORE_FOREIGN_ADDR		4651340	0					
ANR	4651415	Argument	buf		4651340	2					
ANR	4651416	Identifier	buf		4651340	0					
ANR	4651417	Argument	len		4651340	3					
ANR	4651418	Identifier	len		4651340	0					
ANR	4651419	ExpressionStatement	free ( buf )	385:1:9883:9893	4651340	7	True				
ANR	4651420	CallExpression	free ( buf )		4651340	0					
ANR	4651421	Callee	free		4651340	0					
ANR	4651422	Identifier	free		4651340	0					
ANR	4651423	ArgumentList	buf		4651340	1					
ANR	4651424	Argument	buf		4651340	0					
ANR	4651425	Identifier	buf		4651340	0					
ANR	4651426	ReturnStatement	return res ;	386:1:9896:9906	4651340	8	True				
ANR	4651427	Identifier	res		4651340	0					
ANR	4651428	ReturnType	R_API int		4651340	1					
ANR	4651429	Identifier	r_core_yank_hud_path		4651340	2					
ANR	4651430	ParameterList	"RCore * core , const char * input , int dir"		4651340	3					
ANR	4651431	Parameter	RCore * core	375:31:9584:9594	4651340	0	True				
ANR	4651432	ParameterType	RCore *		4651340	0					
ANR	4651433	Identifier	core		4651340	1					
ANR	4651434	Parameter	const char * input	375:44:9597:9613	4651340	1	True				
ANR	4651435	ParameterType	const char *		4651340	0					
ANR	4651436	Identifier	input		4651340	1					
ANR	4651437	Parameter	int dir	375:63:9616:9622	4651340	2	True				
ANR	4651438	ParameterType	int		4651340	0					
ANR	4651439	Identifier	dir		4651340	1					
ANR	4651440	CFGEntryNode	ENTRY		4651340		True				
ANR	4651441	CFGExitNode	EXIT		4651340		True				
ANR	4651442	Symbol	R_CORE_FOREIGN_ADDR		4651340						
ANR	4651443	Symbol	core		4651340						
ANR	4651444	Symbol	input		4651340						
ANR	4651445	Symbol	res		4651340						
ANR	4651446	Symbol	strlen		4651340						
ANR	4651447	Symbol	buf		4651340						
ANR	4651448	Symbol	NULL		4651340						
ANR	4651449	Symbol	len		4651340						
ANR	4651450	Symbol	* input		4651340						
ANR	4651451	Symbol	r_core_yank_set_str		4651340						
ANR	4651452	Symbol	r_cons_hud_path		4651340						
ANR	4651453	Symbol	dir		4651340						
ANR	4651454	Function	r_core_yank_hexpair	389:0:9911:10199							
ANR	4651455	FunctionDef	"r_core_yank_hexpair (RCore * core , const char * input)"		4651454	0					
ANR	4651456	CompoundStatement		389:63:9974:10199	4651454	0					
ANR	4651457	IfStatement	if ( ! input || ! * input )		4651454	0					
ANR	4651458	Condition	! input || ! * input	390:5:9981:9997	4651454	0	True				
ANR	4651459	OrExpression	! input || ! * input		4651454	0		||			
ANR	4651460	UnaryOperationExpression	! input		4651454	0					
ANR	4651461	UnaryOperator	!		4651454	0					
ANR	4651462	Identifier	input		4651454	1					
ANR	4651463	UnaryOperationExpression	! * input		4651454	1					
ANR	4651464	UnaryOperator	!		4651454	0					
ANR	4651465	UnaryOperationExpression	* input		4651454	1					
ANR	4651466	UnaryOperator	*		4651454	0					
ANR	4651467	Identifier	input		4651454	1					
ANR	4651468	CompoundStatement		2:24:25:25	4651454	1					
ANR	4651469	ReturnStatement	return false ;	391:2:10004:10016	4651454	0	True				
ANR	4651470	Identifier	false		4651454	0					
ANR	4651471	IdentifierDeclStatement	char * out = strdup ( input ) ;	393:1:10022:10048	4651454	1	True				
ANR	4651472	IdentifierDecl	* out = strdup ( input )		4651454	0					
ANR	4651473	IdentifierDeclType	char *		4651454	0					
ANR	4651474	Identifier	out		4651454	1					
ANR	4651475	AssignmentExpression	* out = strdup ( input )		4651454	2		=			
ANR	4651476	Identifier	out		4651454	0					
ANR	4651477	CallExpression	strdup ( input )		4651454	1					
ANR	4651478	Callee	strdup		4651454	0					
ANR	4651479	Identifier	strdup		4651454	0					
ANR	4651480	ArgumentList	input		4651454	1					
ANR	4651481	Argument	input		4651454	0					
ANR	4651482	Identifier	input		4651454	0					
ANR	4651483	IdentifierDeclStatement	"int len = r_hex_str2bin ( input , ( ut8 * ) out ) ;"	394:1:10051:10094	4651454	2	True				
ANR	4651484	IdentifierDecl	"len = r_hex_str2bin ( input , ( ut8 * ) out )"		4651454	0					
ANR	4651485	IdentifierDeclType	int		4651454	0					
ANR	4651486	Identifier	len		4651454	1					
ANR	4651487	AssignmentExpression	"len = r_hex_str2bin ( input , ( ut8 * ) out )"		4651454	2		=			
ANR	4651488	Identifier	len		4651454	0					
ANR	4651489	CallExpression	"r_hex_str2bin ( input , ( ut8 * ) out )"		4651454	1					
ANR	4651490	Callee	r_hex_str2bin		4651454	0					
ANR	4651491	Identifier	r_hex_str2bin		4651454	0					
ANR	4651492	ArgumentList	input		4651454	1					
ANR	4651493	Argument	input		4651454	0					
ANR	4651494	Identifier	input		4651454	0					
ANR	4651495	Argument	( ut8 * ) out		4651454	1					
ANR	4651496	CastExpression	( ut8 * ) out		4651454	0					
ANR	4651497	CastTarget	ut8 *		4651454	0					
ANR	4651498	Identifier	out		4651454	1					
ANR	4651499	IfStatement	if ( len > 0 )		4651454	3					
ANR	4651500	Condition	len > 0	395:5:10101:10107	4651454	0	True				
ANR	4651501	RelationalExpression	len > 0		4651454	0		>			
ANR	4651502	Identifier	len		4651454	0					
ANR	4651503	PrimaryExpression	0		4651454	1					
ANR	4651504	CompoundStatement		7:14:135:135	4651454	1					
ANR	4651505	ExpressionStatement	"r_core_yank_set ( core , core -> offset , ( ut8 * ) out , len )"	396:2:10114:10167	4651454	0	True				
ANR	4651506	CallExpression	"r_core_yank_set ( core , core -> offset , ( ut8 * ) out , len )"		4651454	0					
ANR	4651507	Callee	r_core_yank_set		4651454	0					
ANR	4651508	Identifier	r_core_yank_set		4651454	0					
ANR	4651509	ArgumentList	core		4651454	1					
ANR	4651510	Argument	core		4651454	0					
ANR	4651511	Identifier	core		4651454	0					
ANR	4651512	Argument	core -> offset		4651454	1					
ANR	4651513	PtrMemberAccess	core -> offset		4651454	0					
ANR	4651514	Identifier	core		4651454	0					
ANR	4651515	Identifier	offset		4651454	1					
ANR	4651516	Argument	( ut8 * ) out		4651454	2					
ANR	4651517	CastExpression	( ut8 * ) out		4651454	0					
ANR	4651518	CastTarget	ut8 *		4651454	0					
ANR	4651519	Identifier	out		4651454	1					
ANR	4651520	Argument	len		4651454	3					
ANR	4651521	Identifier	len		4651454	0					
ANR	4651522	ExpressionStatement	free ( out )	398:1:10173:10183	4651454	4	True				
ANR	4651523	CallExpression	free ( out )		4651454	0					
ANR	4651524	Callee	free		4651454	0					
ANR	4651525	Identifier	free		4651454	0					
ANR	4651526	ArgumentList	out		4651454	1					
ANR	4651527	Argument	out		4651454	0					
ANR	4651528	Identifier	out		4651454	0					
ANR	4651529	ReturnStatement	return true ;	399:1:10186:10197	4651454	5	True				
ANR	4651530	Identifier	true		4651454	0					
ANR	4651531	ReturnType	R_API bool		4651454	1					
ANR	4651532	Identifier	r_core_yank_hexpair		4651454	2					
ANR	4651533	ParameterList	"RCore * core , const char * input"		4651454	3					
ANR	4651534	Parameter	RCore * core	389:31:9942:9952	4651454	0	True				
ANR	4651535	ParameterType	RCore *		4651454	0					
ANR	4651536	Identifier	core		4651454	1					
ANR	4651537	Parameter	const char * input	389:44:9955:9971	4651454	1	True				
ANR	4651538	ParameterType	const char *		4651454	0					
ANR	4651539	Identifier	input		4651454	1					
ANR	4651540	CFGEntryNode	ENTRY		4651454		True				
ANR	4651541	CFGExitNode	EXIT		4651454		True				
ANR	4651542	Symbol	core		4651454						
ANR	4651543	Symbol	input		4651454						
ANR	4651544	Symbol	len		4651454						
ANR	4651545	Symbol	* input		4651454						
ANR	4651546	Symbol	false		4651454						
ANR	4651547	Symbol	* core		4651454						
ANR	4651548	Symbol	true		4651454						
ANR	4651549	Symbol	core -> offset		4651454						
ANR	4651550	Symbol	strdup		4651454						
ANR	4651551	Symbol	r_hex_str2bin		4651454						
ANR	4651552	Symbol	out		4651454						
ANR	4651553	Function	r_core_yank_file_ex	402:0:10202:11168							
ANR	4651554	FunctionDef	"r_core_yank_file_ex (RCore * core , const char * input)"		4651553	0					
ANR	4651555	CompoundStatement		402:63:10265:11168	4651553	0					
ANR	4651556	IdentifierDeclStatement	"ut64 len = 0 , adv = 0 , addr = 0 ;"	403:1:10268:10299	4651553	0	True				
ANR	4651557	IdentifierDecl	len = 0		4651553	0					
ANR	4651558	IdentifierDeclType	ut64		4651553	0					
ANR	4651559	Identifier	len		4651553	1					
ANR	4651560	AssignmentExpression	len = 0		4651553	2		=			
ANR	4651561	Identifier	len		4651553	0					
ANR	4651562	PrimaryExpression	0		4651553	1					
ANR	4651563	IdentifierDecl	adv = 0		4651553	1					
ANR	4651564	IdentifierDeclType	ut64		4651553	0					
ANR	4651565	Identifier	adv		4651553	1					
ANR	4651566	AssignmentExpression	adv = 0		4651553	2		=			
ANR	4651567	Identifier	adv		4651553	0					
ANR	4651568	PrimaryExpression	0		4651553	1					
ANR	4651569	IdentifierDecl	addr = 0		4651553	2					
ANR	4651570	IdentifierDeclType	ut64		4651553	0					
ANR	4651571	Identifier	addr		4651553	1					
ANR	4651572	AssignmentExpression	addr = 0		4651553	2		=			
ANR	4651573	Identifier	addr		4651553	0					
ANR	4651574	PrimaryExpression	0		4651553	1					
ANR	4651575	IdentifierDeclStatement	bool res = false ;	404:1:10302:10318	4651553	1	True				
ANR	4651576	IdentifierDecl	res = false		4651553	0					
ANR	4651577	IdentifierDeclType	bool		4651553	0					
ANR	4651578	Identifier	res		4651553	1					
ANR	4651579	AssignmentExpression	res = false		4651553	2		=			
ANR	4651580	Identifier	false		4651553	0					
ANR	4651581	Identifier	false		4651553	1					
ANR	4651582	IfStatement	if ( ! input )		4651553	2					
ANR	4651583	Condition	! input	406:5:10326:10331	4651553	0	True				
ANR	4651584	UnaryOperationExpression	! input		4651553	0					
ANR	4651585	UnaryOperator	!		4651553	0					
ANR	4651586	Identifier	input		4651553	1					
ANR	4651587	CompoundStatement		5:13:68:68	4651553	1					
ANR	4651588	ReturnStatement	return res ;	407:2:10338:10348	4651553	0	True				
ANR	4651589	Identifier	res		4651553	0					
ANR	4651590	ExpressionStatement	"adv = consume_chars ( input , ' ' )"	410:1:10390:10422	4651553	3	True				
ANR	4651591	AssignmentExpression	"adv = consume_chars ( input , ' ' )"		4651553	0		=			
ANR	4651592	Identifier	adv		4651553	0					
ANR	4651593	CallExpression	"consume_chars ( input , ' ' )"		4651553	1					
ANR	4651594	Callee	consume_chars		4651553	0					
ANR	4651595	Identifier	consume_chars		4651553	0					
ANR	4651596	ArgumentList	input		4651553	1					
ANR	4651597	Argument	input		4651553	0					
ANR	4651598	Identifier	input		4651553	0					
ANR	4651599	Argument	' '		4651553	1					
ANR	4651600	PrimaryExpression	' '		4651553	0					
ANR	4651601	ExpressionStatement	"len = r_num_math ( core -> num , input + adv )"	411:1:10425:10466	4651553	4	True				
ANR	4651602	AssignmentExpression	"len = r_num_math ( core -> num , input + adv )"		4651553	0		=			
ANR	4651603	Identifier	len		4651553	0					
ANR	4651604	CallExpression	"r_num_math ( core -> num , input + adv )"		4651553	1					
ANR	4651605	Callee	r_num_math		4651553	0					
ANR	4651606	Identifier	r_num_math		4651553	0					
ANR	4651607	ArgumentList	core -> num		4651553	1					
ANR	4651608	Argument	core -> num		4651553	0					
ANR	4651609	PtrMemberAccess	core -> num		4651553	0					
ANR	4651610	Identifier	core		4651553	0					
ANR	4651611	Identifier	num		4651553	1					
ANR	4651612	Argument	input + adv		4651553	1					
ANR	4651613	AdditiveExpression	input + adv		4651553	0		+			
ANR	4651614	Identifier	input		4651553	0					
ANR	4651615	Identifier	adv		4651553	1					
ANR	4651616	IfStatement	if ( len == 0 )		4651553	5					
ANR	4651617	Condition	len == 0	412:5:10473:10480	4651553	0	True				
ANR	4651618	EqualityExpression	len == 0		4651553	0		==			
ANR	4651619	Identifier	len		4651553	0					
ANR	4651620	PrimaryExpression	0		4651553	1					
ANR	4651621	CompoundStatement		11:15:217:217	4651553	1					
ANR	4651622	ExpressionStatement	"eprintf ( ""ERROR: Number of bytes read must be > 0\\n"" )"	413:2:10487:10540	4651553	0	True				
ANR	4651623	CallExpression	"eprintf ( ""ERROR: Number of bytes read must be > 0\\n"" )"		4651553	0					
ANR	4651624	Callee	eprintf		4651553	0					
ANR	4651625	Identifier	eprintf		4651553	0					
ANR	4651626	ArgumentList	"""ERROR: Number of bytes read must be > 0\\n"""		4651553	1					
ANR	4651627	Argument	"""ERROR: Number of bytes read must be > 0\\n"""		4651553	0					
ANR	4651628	PrimaryExpression	"""ERROR: Number of bytes read must be > 0\\n"""		4651553	0					
ANR	4651629	ReturnStatement	return res ;	414:2:10544:10554	4651553	1	True				
ANR	4651630	Identifier	res		4651553	0					
ANR	4651631	ExpressionStatement	"adv += find_next_char ( input + adv , ' ' )"	417:1:10617:10657	4651553	6	True				
ANR	4651632	AssignmentExpression	"adv += find_next_char ( input + adv , ' ' )"		4651553	0		+=			
ANR	4651633	Identifier	adv		4651553	0					
ANR	4651634	CallExpression	"find_next_char ( input + adv , ' ' )"		4651553	1					
ANR	4651635	Callee	find_next_char		4651553	0					
ANR	4651636	Identifier	find_next_char		4651553	0					
ANR	4651637	ArgumentList	input + adv		4651553	1					
ANR	4651638	Argument	input + adv		4651553	0					
ANR	4651639	AdditiveExpression	input + adv		4651553	0		+			
ANR	4651640	Identifier	input		4651553	0					
ANR	4651641	Identifier	adv		4651553	1					
ANR	4651642	Argument	' '		4651553	1					
ANR	4651643	PrimaryExpression	' '		4651553	0					
ANR	4651644	IfStatement	if ( adv == 0 )		4651553	7					
ANR	4651645	Condition	adv == 0	418:5:10664:10671	4651553	0	True				
ANR	4651646	EqualityExpression	adv == 0		4651553	0		==			
ANR	4651647	Identifier	adv		4651553	0					
ANR	4651648	PrimaryExpression	0		4651553	1					
ANR	4651649	CompoundStatement		17:15:408:408	4651553	1					
ANR	4651650	ExpressionStatement	"eprintf ( ""ERROR: Address must be specified\\n"" )"	419:2:10678:10724	4651553	0	True				
ANR	4651651	CallExpression	"eprintf ( ""ERROR: Address must be specified\\n"" )"		4651553	0					
ANR	4651652	Callee	eprintf		4651553	0					
ANR	4651653	Identifier	eprintf		4651553	0					
ANR	4651654	ArgumentList	"""ERROR: Address must be specified\\n"""		4651553	1					
ANR	4651655	Argument	"""ERROR: Address must be specified\\n"""		4651553	0					
ANR	4651656	PrimaryExpression	"""ERROR: Address must be specified\\n"""		4651553	0					
ANR	4651657	ReturnStatement	return res ;	420:2:10728:10738	4651553	1	True				
ANR	4651658	Identifier	res		4651553	0					
ANR	4651659	ExpressionStatement	adv ++	422:1:10744:10749	4651553	8	True				
ANR	4651660	PostIncDecOperationExpression	adv ++		4651553	0					
ANR	4651661	Identifier	adv		4651553	0					
ANR	4651662	IncDec	++		4651553	1					
ANR	4651663	ExpressionStatement	"addr = r_num_math ( core -> num , input + adv )"	425:1:10825:10867	4651553	9	True				
ANR	4651664	AssignmentExpression	"addr = r_num_math ( core -> num , input + adv )"		4651553	0		=			
ANR	4651665	Identifier	addr		4651553	0					
ANR	4651666	CallExpression	"r_num_math ( core -> num , input + adv )"		4651553	1					
ANR	4651667	Callee	r_num_math		4651553	0					
ANR	4651668	Identifier	r_num_math		4651553	0					
ANR	4651669	ArgumentList	core -> num		4651553	1					
ANR	4651670	Argument	core -> num		4651553	0					
ANR	4651671	PtrMemberAccess	core -> num		4651553	0					
ANR	4651672	Identifier	core		4651553	0					
ANR	4651673	Identifier	num		4651553	1					
ANR	4651674	Argument	input + adv		4651553	1					
ANR	4651675	AdditiveExpression	input + adv		4651553	0		+			
ANR	4651676	Identifier	input		4651553	0					
ANR	4651677	Identifier	adv		4651553	1					
ANR	4651678	ExpressionStatement	"adv += find_next_char ( input + adv , ' ' )"	427:1:10871:10911	4651553	10	True				
ANR	4651679	AssignmentExpression	"adv += find_next_char ( input + adv , ' ' )"		4651553	0		+=			
ANR	4651680	Identifier	adv		4651553	0					
ANR	4651681	CallExpression	"find_next_char ( input + adv , ' ' )"		4651553	1					
ANR	4651682	Callee	find_next_char		4651553	0					
ANR	4651683	Identifier	find_next_char		4651553	0					
ANR	4651684	ArgumentList	input + adv		4651553	1					
ANR	4651685	Argument	input + adv		4651553	0					
ANR	4651686	AdditiveExpression	input + adv		4651553	0		+			
ANR	4651687	Identifier	input		4651553	0					
ANR	4651688	Identifier	adv		4651553	1					
ANR	4651689	Argument	' '		4651553	1					
ANR	4651690	PrimaryExpression	' '		4651553	0					
ANR	4651691	IfStatement	if ( adv == 0 )		4651553	11					
ANR	4651692	Condition	adv == 0	428:5:10918:10925	4651553	0	True				
ANR	4651693	EqualityExpression	adv == 0		4651553	0		==			
ANR	4651694	Identifier	adv		4651553	0					
ANR	4651695	PrimaryExpression	0		4651553	1					
ANR	4651696	CompoundStatement		27:15:662:662	4651553	1					
ANR	4651697	ExpressionStatement	"eprintf ( ""ERROR: File must be specified\\n"" )"	429:2:10932:10975	4651553	0	True				
ANR	4651698	CallExpression	"eprintf ( ""ERROR: File must be specified\\n"" )"		4651553	0					
ANR	4651699	Callee	eprintf		4651553	0					
ANR	4651700	Identifier	eprintf		4651553	0					
ANR	4651701	ArgumentList	"""ERROR: File must be specified\\n"""		4651553	1					
ANR	4651702	Argument	"""ERROR: File must be specified\\n"""		4651553	0					
ANR	4651703	PrimaryExpression	"""ERROR: File must be specified\\n"""		4651553	0					
ANR	4651704	ReturnStatement	return res ;	430:2:10979:10989	4651553	1	True				
ANR	4651705	Identifier	res		4651553	0					
ANR	4651706	ExpressionStatement	adv ++	432:1:10995:11000	4651553	12	True				
ANR	4651707	PostIncDecOperationExpression	adv ++		4651553	0					
ANR	4651708	Identifier	adv		4651553	0					
ANR	4651709	IncDec	++		4651553	1					
ANR	4651710	ReturnStatement	"return perform_mapped_file_yank ( core , addr , len , input + adv ) ;"	436:1:11104:11166	4651553	13	True				
ANR	4651711	CallExpression	"perform_mapped_file_yank ( core , addr , len , input + adv )"		4651553	0					
ANR	4651712	Callee	perform_mapped_file_yank		4651553	0					
ANR	4651713	Identifier	perform_mapped_file_yank		4651553	0					
ANR	4651714	ArgumentList	core		4651553	1					
ANR	4651715	Argument	core		4651553	0					
ANR	4651716	Identifier	core		4651553	0					
ANR	4651717	Argument	addr		4651553	1					
ANR	4651718	Identifier	addr		4651553	0					
ANR	4651719	Argument	len		4651553	2					
ANR	4651720	Identifier	len		4651553	0					
ANR	4651721	Argument	input + adv		4651553	3					
ANR	4651722	AdditiveExpression	input + adv		4651553	0		+			
ANR	4651723	Identifier	input		4651553	0					
ANR	4651724	Identifier	adv		4651553	1					
ANR	4651725	ReturnType	R_API bool		4651553	1					
ANR	4651726	Identifier	r_core_yank_file_ex		4651553	2					
ANR	4651727	ParameterList	"RCore * core , const char * input"		4651553	3					
ANR	4651728	Parameter	RCore * core	402:31:10233:10243	4651553	0	True				
ANR	4651729	ParameterType	RCore *		4651553	0					
ANR	4651730	Identifier	core		4651553	1					
ANR	4651731	Parameter	const char * input	402:44:10246:10262	4651553	1	True				
ANR	4651732	ParameterType	const char *		4651553	0					
ANR	4651733	Identifier	input		4651553	1					
ANR	4651734	CFGEntryNode	ENTRY		4651553		True				
ANR	4651735	CFGExitNode	EXIT		4651553		True				
ANR	4651736	Symbol	res		4651553						
ANR	4651737	Symbol	false		4651553						
ANR	4651738	Symbol	* core		4651553						
ANR	4651739	Symbol	consume_chars		4651553						
ANR	4651740	Symbol	r_num_math		4651553						
ANR	4651741	Symbol	core		4651553						
ANR	4651742	Symbol	input		4651553						
ANR	4651743	Symbol	find_next_char		4651553						
ANR	4651744	Symbol	adv		4651553						
ANR	4651745	Symbol	len		4651553						
ANR	4651746	Symbol	addr		4651553						
ANR	4651747	Symbol	core -> num		4651553						
ANR	4651748	Symbol	perform_mapped_file_yank		4651553						
ANR	4651749	Function	r_core_yank_file_all	439:0:11171:11381							
ANR	4651750	FunctionDef	"r_core_yank_file_all (RCore * core , const char * input)"		4651749	0					
ANR	4651751	CompoundStatement		439:63:11234:11381	4651749	0					
ANR	4651752	IdentifierDeclStatement	ut64 adv = 0 ;	440:1:11237:11249	4651749	0	True				
ANR	4651753	IdentifierDecl	adv = 0		4651749	0					
ANR	4651754	IdentifierDeclType	ut64		4651749	0					
ANR	4651755	Identifier	adv		4651749	1					
ANR	4651756	AssignmentExpression	adv = 0		4651749	2		=			
ANR	4651757	Identifier	adv		4651749	0					
ANR	4651758	PrimaryExpression	0		4651749	1					
ANR	4651759	IfStatement	if ( ! input )		4651749	1					
ANR	4651760	Condition	! input	441:5:11256:11261	4651749	0	True				
ANR	4651761	UnaryOperationExpression	! input		4651749	0					
ANR	4651762	UnaryOperator	!		4651749	0					
ANR	4651763	Identifier	input		4651749	1					
ANR	4651764	CompoundStatement		3:13:29:29	4651749	1					
ANR	4651765	ReturnStatement	return false ;	442:2:11268:11280	4651749	0	True				
ANR	4651766	Identifier	false		4651749	0					
ANR	4651767	ExpressionStatement	"adv = consume_chars ( input , ' ' )"	444:1:11286:11318	4651749	2	True				
ANR	4651768	AssignmentExpression	"adv = consume_chars ( input , ' ' )"		4651749	0		=			
ANR	4651769	Identifier	adv		4651749	0					
ANR	4651770	CallExpression	"consume_chars ( input , ' ' )"		4651749	1					
ANR	4651771	Callee	consume_chars		4651749	0					
ANR	4651772	Identifier	consume_chars		4651749	0					
ANR	4651773	ArgumentList	input		4651749	1					
ANR	4651774	Argument	input		4651749	0					
ANR	4651775	Identifier	input		4651749	0					
ANR	4651776	Argument	' '		4651749	1					
ANR	4651777	PrimaryExpression	' '		4651749	0					
ANR	4651778	ReturnStatement	"return perform_mapped_file_yank ( core , 0 , - 1 , input + adv ) ;"	445:1:11321:11379	4651749	3	True				
ANR	4651779	CallExpression	"perform_mapped_file_yank ( core , 0 , - 1 , input + adv )"		4651749	0					
ANR	4651780	Callee	perform_mapped_file_yank		4651749	0					
ANR	4651781	Identifier	perform_mapped_file_yank		4651749	0					
ANR	4651782	ArgumentList	core		4651749	1					
ANR	4651783	Argument	core		4651749	0					
ANR	4651784	Identifier	core		4651749	0					
ANR	4651785	Argument	0		4651749	1					
ANR	4651786	PrimaryExpression	0		4651749	0					
ANR	4651787	Argument	- 1		4651749	2					
ANR	4651788	UnaryOperationExpression	- 1		4651749	0					
ANR	4651789	UnaryOperator	-		4651749	0					
ANR	4651790	PrimaryExpression	1		4651749	1					
ANR	4651791	Argument	input + adv		4651749	3					
ANR	4651792	AdditiveExpression	input + adv		4651749	0		+			
ANR	4651793	Identifier	input		4651749	0					
ANR	4651794	Identifier	adv		4651749	1					
ANR	4651795	ReturnType	R_API int		4651749	1					
ANR	4651796	Identifier	r_core_yank_file_all		4651749	2					
ANR	4651797	ParameterList	"RCore * core , const char * input"		4651749	3					
ANR	4651798	Parameter	RCore * core	439:31:11202:11212	4651749	0	True				
ANR	4651799	ParameterType	RCore *		4651749	0					
ANR	4651800	Identifier	core		4651749	1					
ANR	4651801	Parameter	const char * input	439:44:11215:11231	4651749	1	True				
ANR	4651802	ParameterType	const char *		4651749	0					
ANR	4651803	Identifier	input		4651749	1					
ANR	4651804	CFGEntryNode	ENTRY		4651749		True				
ANR	4651805	CFGExitNode	EXIT		4651749		True				
ANR	4651806	Symbol	core		4651749						
ANR	4651807	Symbol	input		4651749						
ANR	4651808	Symbol	adv		4651749						
ANR	4651809	Symbol	false		4651749						
ANR	4651810	Symbol	consume_chars		4651749						
ANR	4651811	Symbol	perform_mapped_file_yank		4651749						
