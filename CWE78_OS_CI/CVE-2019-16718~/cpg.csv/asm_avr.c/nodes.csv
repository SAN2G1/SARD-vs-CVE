command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	391176	File	data/converged/CVE-2019-16718~_radare2/asm_avr.c								
ANR	391177	Function	disassemble	16:0:370:613							
ANR	391178	FunctionDef	"disassemble (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		391177	0					
ANR	391179	CompoundStatement		16:69:439:613	391177	0					
ANR	391180	IdentifierDeclStatement	char buf_asm [ 32 ] = { 0 } ;	17:1:442:464	391177	0	True				
ANR	391181	IdentifierDecl	buf_asm [ 32 ] = { 0 }		391177	0					
ANR	391182	IdentifierDeclType	char [ 32 ]		391177	0					
ANR	391183	Identifier	buf_asm		391177	1					
ANR	391184	PrimaryExpression	32		391177	2					
ANR	391185	AssignmentExpression	buf_asm [ 32 ] = { 0 }		391177	3		=			
ANR	391186	Identifier	buf_asm		391177	0					
ANR	391187	InitializerList	0		391177	1					
ANR	391188	PrimaryExpression	0		391177	0					
ANR	391189	ExpressionStatement	"op -> size = avrdis ( buf_asm , a -> pc , buf , len )"	18:1:467:511	391177	1	True				
ANR	391190	AssignmentExpression	"op -> size = avrdis ( buf_asm , a -> pc , buf , len )"		391177	0		=			
ANR	391191	PtrMemberAccess	op -> size		391177	0					
ANR	391192	Identifier	op		391177	0					
ANR	391193	Identifier	size		391177	1					
ANR	391194	CallExpression	"avrdis ( buf_asm , a -> pc , buf , len )"		391177	1					
ANR	391195	Callee	avrdis		391177	0					
ANR	391196	Identifier	avrdis		391177	0					
ANR	391197	ArgumentList	buf_asm		391177	1					
ANR	391198	Argument	buf_asm		391177	0					
ANR	391199	Identifier	buf_asm		391177	0					
ANR	391200	Argument	a -> pc		391177	1					
ANR	391201	PtrMemberAccess	a -> pc		391177	0					
ANR	391202	Identifier	a		391177	0					
ANR	391203	Identifier	pc		391177	1					
ANR	391204	Argument	buf		391177	2					
ANR	391205	Identifier	buf		391177	0					
ANR	391206	Argument	len		391177	3					
ANR	391207	Identifier	len		391177	0					
ANR	391208	IfStatement	if ( * buf_asm == '.' )		391177	2					
ANR	391209	Condition	* buf_asm == '.'	19:5:518:532	391177	0	True				
ANR	391210	EqualityExpression	* buf_asm == '.'		391177	0		==			
ANR	391211	UnaryOperationExpression	* buf_asm		391177	0					
ANR	391212	UnaryOperator	*		391177	0					
ANR	391213	Identifier	buf_asm		391177	1					
ANR	391214	PrimaryExpression	'.'		391177	1					
ANR	391215	CompoundStatement		4:22:95:95	391177	1					
ANR	391216	ExpressionStatement	* buf_asm = 0	20:2:539:551	391177	0	True				
ANR	391217	AssignmentExpression	* buf_asm = 0		391177	0		=			
ANR	391218	UnaryOperationExpression	* buf_asm		391177	0					
ANR	391219	UnaryOperator	*		391177	0					
ANR	391220	Identifier	buf_asm		391177	1					
ANR	391221	PrimaryExpression	0		391177	1					
ANR	391222	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , buf_asm )"	22:1:557:593	391177	3	True				
ANR	391223	CallExpression	"r_strbuf_set ( & op -> buf_asm , buf_asm )"		391177	0					
ANR	391224	Callee	r_strbuf_set		391177	0					
ANR	391225	Identifier	r_strbuf_set		391177	0					
ANR	391226	ArgumentList	& op -> buf_asm		391177	1					
ANR	391227	Argument	& op -> buf_asm		391177	0					
ANR	391228	UnaryOperationExpression	& op -> buf_asm		391177	0					
ANR	391229	UnaryOperator	&		391177	0					
ANR	391230	PtrMemberAccess	op -> buf_asm		391177	1					
ANR	391231	Identifier	op		391177	0					
ANR	391232	Identifier	buf_asm		391177	1					
ANR	391233	Argument	buf_asm		391177	1					
ANR	391234	Identifier	buf_asm		391177	0					
ANR	391235	ReturnStatement	return op -> size ;	23:1:596:611	391177	4	True				
ANR	391236	PtrMemberAccess	op -> size		391177	0					
ANR	391237	Identifier	op		391177	0					
ANR	391238	Identifier	size		391177	1					
ANR	391239	ReturnType	static int		391177	1					
ANR	391240	Identifier	disassemble		391177	2					
ANR	391241	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		391177	3					
ANR	391242	Parameter	RAsm * a	16:23:393:399	391177	0	True				
ANR	391243	ParameterType	RAsm *		391177	0					
ANR	391244	Identifier	a		391177	1					
ANR	391245	Parameter	RAsmOp * op	16:32:402:411	391177	1	True				
ANR	391246	ParameterType	RAsmOp *		391177	0					
ANR	391247	Identifier	op		391177	1					
ANR	391248	Parameter	const ut8 * buf	16:44:414:427	391177	2	True				
ANR	391249	ParameterType	const ut8 *		391177	0					
ANR	391250	Identifier	buf		391177	1					
ANR	391251	Parameter	int len	16:60:430:436	391177	3	True				
ANR	391252	ParameterType	int		391177	0					
ANR	391253	Identifier	len		391177	1					
ANR	391254	CFGEntryNode	ENTRY		391177		True				
ANR	391255	CFGExitNode	EXIT		391177		True				
ANR	391256	Symbol	a		391177						
ANR	391257	Symbol	op		391177						
ANR	391258	Symbol	buf		391177						
ANR	391259	Symbol	len		391177						
ANR	391260	Symbol	* op		391177						
ANR	391261	Symbol	op -> size		391177						
ANR	391262	Symbol	* buf_asm		391177						
ANR	391263	Symbol	avrdis		391177						
ANR	391264	Symbol	* a		391177						
ANR	391265	Symbol	& op -> buf_asm		391177						
ANR	391266	Symbol	buf_asm		391177						
ANR	391267	Symbol	a -> pc		391177						
ANR	391268	DeclStmt									
ANR	391269	Decl							extern instructionInfo	extern instructionInfo [ AVR_TOTAL_INSTRUCTIONS ]	instructionSet
ANR	391270	ClassDef	_specialregs	34:0:878:932							
ANR	391271	DeclStmt									
ANR	391272	Decl							char	char [ 4 ]	reg
ANR	391273	DeclStmt									
ANR	391274	Decl							int	int	operandType
ANR	391275	DeclStmt									
ANR	391276	Decl							struct _specialregs	struct _specialregs	specialregs
ANR	391277	DeclStmt									
ANR	391278	Decl							specialregs	specialregs [ REGS_TABLE ]	RegsTable
ANR	391279	Function	parse_specialreg	49:0:1291:2018							
ANR	391280	FunctionDef	parse_specialreg (const char * reg)		391279	0					
ANR	391281	CompoundStatement		49:45:1336:2018	391279	0					
ANR	391282	IdentifierDeclStatement	const int len = strlen ( reg ) ;	50:1:1339:1367	391279	0	True				
ANR	391283	IdentifierDecl	len = strlen ( reg )		391279	0					
ANR	391284	IdentifierDeclType	const int		391279	0					
ANR	391285	Identifier	len		391279	1					
ANR	391286	AssignmentExpression	len = strlen ( reg )		391279	2		=			
ANR	391287	Identifier	len		391279	0					
ANR	391288	CallExpression	strlen ( reg )		391279	1					
ANR	391289	Callee	strlen		391279	0					
ANR	391290	Identifier	strlen		391279	0					
ANR	391291	ArgumentList	reg		391279	1					
ANR	391292	Argument	reg		391279	0					
ANR	391293	Identifier	reg		391279	0					
ANR	391294	IdentifierDeclStatement	"int i , found = - 1 ;"	51:1:1370:1387	391279	1	True				
ANR	391295	IdentifierDecl	i		391279	0					
ANR	391296	IdentifierDeclType	int		391279	0					
ANR	391297	Identifier	i		391279	1					
ANR	391298	IdentifierDecl	found = - 1		391279	1					
ANR	391299	IdentifierDeclType	int		391279	0					
ANR	391300	Identifier	found		391279	1					
ANR	391301	AssignmentExpression	found = - 1		391279	2		=			
ANR	391302	Identifier	found		391279	0					
ANR	391303	UnaryOperationExpression	- 1		391279	1					
ANR	391304	UnaryOperator	-		391279	0					
ANR	391305	PrimaryExpression	1		391279	1					
ANR	391306	IfStatement	if ( len > 0 )		391279	2					
ANR	391307	Condition	len > 0	53:5:1395:1401	391279	0	True				
ANR	391308	RelationalExpression	len > 0		391279	0		>			
ANR	391309	Identifier	len		391279	0					
ANR	391310	PrimaryExpression	0		391279	1					
ANR	391311	CompoundStatement		5:14:67:67	391279	1					
ANR	391312	ForStatement	for ( i = 0 ; i < REGS_TABLE ; i ++ )		391279	0					
ANR	391313	ForInit	i = 0 ;	54:7:1413:1418	391279	0	True				
ANR	391314	AssignmentExpression	i = 0		391279	0		=			
ANR	391315	Identifier	i		391279	0					
ANR	391316	PrimaryExpression	0		391279	1					
ANR	391317	Condition	i < REGS_TABLE	54:14:1420:1433	391279	1	True				
ANR	391318	RelationalExpression	i < REGS_TABLE		391279	0		<			
ANR	391319	Identifier	i		391279	0					
ANR	391320	Identifier	REGS_TABLE		391279	1					
ANR	391321	PostIncDecOperationExpression	i ++	54:30:1436:1438	391279	2	True				
ANR	391322	Identifier	i		391279	0					
ANR	391323	IncDec	++		391279	1					
ANR	391324	CompoundStatement		6:35:104:104	391279	3					
ANR	391325	IfStatement	"if ( ! strncmp ( RegsTable [ i ] . reg , reg , 4 ) )"		391279	0					
ANR	391326	Condition	"! strncmp ( RegsTable [ i ] . reg , reg , 4 )"	55:7:1450:1484	391279	0	True				
ANR	391327	UnaryOperationExpression	"! strncmp ( RegsTable [ i ] . reg , reg , 4 )"		391279	0					
ANR	391328	UnaryOperator	!		391279	0					
ANR	391329	CallExpression	"strncmp ( RegsTable [ i ] . reg , reg , 4 )"		391279	1					
ANR	391330	Callee	strncmp		391279	0					
ANR	391331	Identifier	strncmp		391279	0					
ANR	391332	ArgumentList	RegsTable [ i ] . reg		391279	1					
ANR	391333	Argument	RegsTable [ i ] . reg		391279	0					
ANR	391334	MemberAccess	RegsTable [ i ] . reg		391279	0					
ANR	391335	ArrayIndexing	RegsTable [ i ]		391279	0					
ANR	391336	Identifier	RegsTable		391279	0					
ANR	391337	Identifier	i		391279	1					
ANR	391338	Identifier	reg		391279	1					
ANR	391339	Argument	reg		391279	1					
ANR	391340	Identifier	reg		391279	0					
ANR	391341	Argument	4		391279	2					
ANR	391342	PrimaryExpression	4		391279	0					
ANR	391343	CompoundStatement		7:44:150:150	391279	1					
ANR	391344	ExpressionStatement	found = RegsTable [ i ] . operandType	56:4:1493:1525	391279	0	True				
ANR	391345	AssignmentExpression	found = RegsTable [ i ] . operandType		391279	0		=			
ANR	391346	Identifier	found		391279	0					
ANR	391347	MemberAccess	RegsTable [ i ] . operandType		391279	1					
ANR	391348	ArrayIndexing	RegsTable [ i ]		391279	0					
ANR	391349	Identifier	RegsTable		391279	0					
ANR	391350	Identifier	i		391279	1					
ANR	391351	Identifier	operandType		391279	1					
ANR	391352	BreakStatement	break ;	57:4:1531:1536	391279	1	True				
ANR	391353	IfStatement	if ( found == - 1 && reg [ 1 ] == '+' )		391279	1					
ANR	391354	Condition	found == - 1 && reg [ 1 ] == '+'	62:6:1658:1685	391279	0	True				
ANR	391355	AndExpression	found == - 1 && reg [ 1 ] == '+'		391279	0		&&			
ANR	391356	EqualityExpression	found == - 1		391279	0		==			
ANR	391357	Identifier	found		391279	0					
ANR	391358	UnaryOperationExpression	- 1		391279	1					
ANR	391359	UnaryOperator	-		391279	0					
ANR	391360	PrimaryExpression	1		391279	1					
ANR	391361	EqualityExpression	reg [ 1 ] == '+'		391279	1		==			
ANR	391362	ArrayIndexing	reg [ 1 ]		391279	0					
ANR	391363	Identifier	reg		391279	0					
ANR	391364	PrimaryExpression	1		391279	1					
ANR	391365	PrimaryExpression	'+'		391279	1					
ANR	391366	CompoundStatement		14:36:351:351	391279	1					
ANR	391367	IfStatement	if ( reg [ 0 ] == 'y' && len > 2 )		391279	0					
ANR	391368	Condition	reg [ 0 ] == 'y' && len > 2	63:7:1697:1720	391279	0	True				
ANR	391369	AndExpression	reg [ 0 ] == 'y' && len > 2		391279	0		&&			
ANR	391370	EqualityExpression	reg [ 0 ] == 'y'		391279	0		==			
ANR	391371	ArrayIndexing	reg [ 0 ]		391279	0					
ANR	391372	Identifier	reg		391279	0					
ANR	391373	PrimaryExpression	0		391279	1					
ANR	391374	PrimaryExpression	'y'		391279	1					
ANR	391375	RelationalExpression	len > 2		391279	1		>			
ANR	391376	Identifier	len		391279	0					
ANR	391377	PrimaryExpression	2		391279	1					
ANR	391378	CompoundStatement		15:33:386:386	391279	1					
ANR	391379	ExpressionStatement	found = OPERAND_YPQ	64:4:1729:1748	391279	0	True				
ANR	391380	AssignmentExpression	found = OPERAND_YPQ		391279	0		=			
ANR	391381	Identifier	found		391279	0					
ANR	391382	Identifier	OPERAND_YPQ		391279	1					
ANR	391383	ElseStatement	else		391279	0					
ANR	391384	IfStatement	if ( reg [ 0 ] == 'z' && len > 2 )		391279	0					
ANR	391385	Condition	reg [ 0 ] == 'z' && len > 2	65:14:1764:1787	391279	0	True				
ANR	391386	AndExpression	reg [ 0 ] == 'z' && len > 2		391279	0		&&			
ANR	391387	EqualityExpression	reg [ 0 ] == 'z'		391279	0		==			
ANR	391388	ArrayIndexing	reg [ 0 ]		391279	0					
ANR	391389	Identifier	reg		391279	0					
ANR	391390	PrimaryExpression	0		391279	1					
ANR	391391	PrimaryExpression	'z'		391279	1					
ANR	391392	RelationalExpression	len > 2		391279	1		>			
ANR	391393	Identifier	len		391279	0					
ANR	391394	PrimaryExpression	2		391279	1					
ANR	391395	CompoundStatement		17:40:453:453	391279	1					
ANR	391396	ExpressionStatement	found = OPERAND_ZPQ	66:4:1796:1815	391279	0	True				
ANR	391397	AssignmentExpression	found = OPERAND_ZPQ		391279	0		=			
ANR	391398	Identifier	found		391279	0					
ANR	391399	Identifier	OPERAND_ZPQ		391279	1					
ANR	391400	IfStatement	if ( found == - 1 && reg [ 2 ] == '+' )		391279	2					
ANR	391401	Condition	found == - 1 && reg [ 2 ] == '+'	69:6:1832:1859	391279	0	True				
ANR	391402	AndExpression	found == - 1 && reg [ 2 ] == '+'		391279	0		&&			
ANR	391403	EqualityExpression	found == - 1		391279	0		==			
ANR	391404	Identifier	found		391279	0					
ANR	391405	UnaryOperationExpression	- 1		391279	1					
ANR	391406	UnaryOperator	-		391279	0					
ANR	391407	PrimaryExpression	1		391279	1					
ANR	391408	EqualityExpression	reg [ 2 ] == '+'		391279	1		==			
ANR	391409	ArrayIndexing	reg [ 2 ]		391279	0					
ANR	391410	Identifier	reg		391279	0					
ANR	391411	PrimaryExpression	2		391279	1					
ANR	391412	PrimaryExpression	'+'		391279	1					
ANR	391413	CompoundStatement		21:36:525:525	391279	1					
ANR	391414	IfStatement	if ( reg [ 0 ] == 'y' && len > 2 )		391279	0					
ANR	391415	Condition	reg [ 0 ] == 'y' && len > 2	70:7:1871:1894	391279	0	True				
ANR	391416	AndExpression	reg [ 0 ] == 'y' && len > 2		391279	0		&&			
ANR	391417	EqualityExpression	reg [ 0 ] == 'y'		391279	0		==			
ANR	391418	ArrayIndexing	reg [ 0 ]		391279	0					
ANR	391419	Identifier	reg		391279	0					
ANR	391420	PrimaryExpression	0		391279	1					
ANR	391421	PrimaryExpression	'y'		391279	1					
ANR	391422	RelationalExpression	len > 2		391279	1		>			
ANR	391423	Identifier	len		391279	0					
ANR	391424	PrimaryExpression	2		391279	1					
ANR	391425	CompoundStatement		22:33:560:560	391279	1					
ANR	391426	ExpressionStatement	found = OPERAND_YPQ	71:4:1903:1922	391279	0	True				
ANR	391427	AssignmentExpression	found = OPERAND_YPQ		391279	0		=			
ANR	391428	Identifier	found		391279	0					
ANR	391429	Identifier	OPERAND_YPQ		391279	1					
ANR	391430	ElseStatement	else		391279	0					
ANR	391431	IfStatement	if ( reg [ 0 ] == 'z' && len > 2 )		391279	0					
ANR	391432	Condition	reg [ 0 ] == 'z' && len > 2	72:14:1938:1961	391279	0	True				
ANR	391433	AndExpression	reg [ 0 ] == 'z' && len > 2		391279	0		&&			
ANR	391434	EqualityExpression	reg [ 0 ] == 'z'		391279	0		==			
ANR	391435	ArrayIndexing	reg [ 0 ]		391279	0					
ANR	391436	Identifier	reg		391279	0					
ANR	391437	PrimaryExpression	0		391279	1					
ANR	391438	PrimaryExpression	'z'		391279	1					
ANR	391439	RelationalExpression	len > 2		391279	1		>			
ANR	391440	Identifier	len		391279	0					
ANR	391441	PrimaryExpression	2		391279	1					
ANR	391442	CompoundStatement		24:40:627:627	391279	1					
ANR	391443	ExpressionStatement	found = OPERAND_ZPQ	73:4:1970:1989	391279	0	True				
ANR	391444	AssignmentExpression	found = OPERAND_ZPQ		391279	0		=			
ANR	391445	Identifier	found		391279	0					
ANR	391446	Identifier	OPERAND_ZPQ		391279	1					
ANR	391447	ReturnStatement	return found ;	77:1:2004:2016	391279	3	True				
ANR	391448	Identifier	found		391279	0					
ANR	391449	ReturnType	static int		391279	1					
ANR	391450	Identifier	parse_specialreg		391279	2					
ANR	391451	ParameterList	const char * reg		391279	3					
ANR	391452	Parameter	const char * reg	49:28:1319:1333	391279	0	True				
ANR	391453	ParameterType	const char *		391279	0					
ANR	391454	Identifier	reg		391279	1					
ANR	391455	CFGEntryNode	ENTRY		391279		True				
ANR	391456	CFGExitNode	EXIT		391279		True				
ANR	391457	Symbol	RegsTable		391279						
ANR	391458	Symbol	REGS_TABLE		391279						
ANR	391459	Symbol	RegsTable [ i ] . operandType		391279						
ANR	391460	Symbol	i		391279						
ANR	391461	Symbol	strlen		391279						
ANR	391462	Symbol	strncmp		391279						
ANR	391463	Symbol	found		391279						
ANR	391464	Symbol	* i		391279						
ANR	391465	Symbol	len		391279						
ANR	391466	Symbol	reg		391279						
ANR	391467	Symbol	OPERAND_YPQ		391279						
ANR	391468	Symbol	OPERAND_ZPQ		391279						
ANR	391469	Symbol	* RegsTable		391279						
ANR	391470	Symbol	* reg		391279						
ANR	391471	Symbol	RegsTable [ i ] . reg		391279						
ANR	391472	Function	getnum	82:0:2123:2253							
ANR	391473	FunctionDef	"getnum (RAsm * a , const char * s)"		391472	0					
ANR	391474	CompoundStatement		82:42:2165:2253	391472	0					
ANR	391475	IfStatement	if ( ! s )		391472	0					
ANR	391476	Condition	! s	83:5:2172:2173	391472	0	True				
ANR	391477	UnaryOperationExpression	! s		391472	0					
ANR	391478	UnaryOperator	!		391472	0					
ANR	391479	Identifier	s		391472	1					
ANR	391480	CompoundStatement		2:9:10:10	391472	1					
ANR	391481	ReturnStatement	return 0 ;	84:2:2180:2188	391472	0	True				
ANR	391482	PrimaryExpression	0		391472	0					
ANR	391483	IfStatement	if ( * s == '$' )		391472	1					
ANR	391484	Condition	* s == '$'	86:5:2198:2206	391472	0	True				
ANR	391485	EqualityExpression	* s == '$'		391472	0		==			
ANR	391486	UnaryOperationExpression	* s		391472	0					
ANR	391487	UnaryOperator	*		391472	0					
ANR	391488	Identifier	s		391472	1					
ANR	391489	PrimaryExpression	'$'		391472	1					
ANR	391490	CompoundStatement		5:16:43:43	391472	1					
ANR	391491	ExpressionStatement	s ++	87:2:2213:2216	391472	0	True				
ANR	391492	PostIncDecOperationExpression	s ++		391472	0					
ANR	391493	Identifier	s		391472	0					
ANR	391494	IncDec	++		391472	1					
ANR	391495	ReturnStatement	"return r_num_math ( a -> num , s ) ;"	89:1:2222:2251	391472	2	True				
ANR	391496	CallExpression	"r_num_math ( a -> num , s )"		391472	0					
ANR	391497	Callee	r_num_math		391472	0					
ANR	391498	Identifier	r_num_math		391472	0					
ANR	391499	ArgumentList	a -> num		391472	1					
ANR	391500	Argument	a -> num		391472	0					
ANR	391501	PtrMemberAccess	a -> num		391472	0					
ANR	391502	Identifier	a		391472	0					
ANR	391503	Identifier	num		391472	1					
ANR	391504	Argument	s		391472	1					
ANR	391505	Identifier	s		391472	0					
ANR	391506	ReturnType	static int		391472	1					
ANR	391507	Identifier	getnum		391472	2					
ANR	391508	ParameterList	"RAsm * a , const char * s"		391472	3					
ANR	391509	Parameter	RAsm * a	82:18:2141:2147	391472	0	True				
ANR	391510	ParameterType	RAsm *		391472	0					
ANR	391511	Identifier	a		391472	1					
ANR	391512	Parameter	const char * s	82:27:2150:2162	391472	1	True				
ANR	391513	ParameterType	const char *		391472	0					
ANR	391514	Identifier	s		391472	1					
ANR	391515	CFGEntryNode	ENTRY		391472		True				
ANR	391516	CFGExitNode	EXIT		391472		True				
ANR	391517	Symbol	a		391472						
ANR	391518	Symbol	s		391472						
ANR	391519	Symbol	a -> num		391472						
ANR	391520	Symbol	* a		391472						
ANR	391521	Symbol	* s		391472						
ANR	391522	Symbol	r_num_math		391472						
ANR	391523	DeclStmt									
ANR	391524	Decl							int	int	i
ANR	391525	Decl							int	int	op1
ANR	391526	Decl							int	int	op2
ANR	391527	Function	packDataByMask	163:0:5071:5637							
ANR	391528	FunctionDef	"packDataByMask (uint16_t data , uint16_t mask)"		391527	0					
ANR	391529	CompoundStatement		163:61:5132:5637	391527	0					
ANR	391530	IdentifierDeclStatement	"int i , j ;"	164:1:5135:5143	391527	0	True				
ANR	391531	IdentifierDecl	i		391527	0					
ANR	391532	IdentifierDeclType	int		391527	0					
ANR	391533	Identifier	i		391527	1					
ANR	391534	IdentifierDecl	j		391527	1					
ANR	391535	IdentifierDeclType	int		391527	0					
ANR	391536	Identifier	j		391527	1					
ANR	391537	IdentifierDeclStatement	uint16_t result = 0 ;	165:1:5146:5165	391527	1	True				
ANR	391538	IdentifierDecl	result = 0		391527	0					
ANR	391539	IdentifierDeclType	uint16_t		391527	0					
ANR	391540	Identifier	result		391527	1					
ANR	391541	AssignmentExpression	result = 0		391527	2		=			
ANR	391542	Identifier	result		391527	0					
ANR	391543	PrimaryExpression	0		391527	1					
ANR	391544	ForStatement	"for ( i = 0 , j = 0 ; i < 16 ; i ++ )"		391527	2					
ANR	391545	ForInit	"i = 0 , j = 0 ;"	169:6:5268:5280	391527	0	True				
ANR	391546	Expression	"i = 0 , j = 0"		391527	0					
ANR	391547	AssignmentExpression	i = 0		391527	0		=			
ANR	391548	Identifier	i		391527	0					
ANR	391549	PrimaryExpression	0		391527	1					
ANR	391550	AssignmentExpression	j = 0		391527	1		=			
ANR	391551	Identifier	j		391527	0					
ANR	391552	PrimaryExpression	0		391527	1					
ANR	391553	Condition	i < 16	169:20:5282:5287	391527	1	True				
ANR	391554	RelationalExpression	i < 16		391527	0		<			
ANR	391555	Identifier	i		391527	0					
ANR	391556	PrimaryExpression	16		391527	1					
ANR	391557	PostIncDecOperationExpression	i ++	169:28:5290:5292	391527	2	True				
ANR	391558	Identifier	i		391527	0					
ANR	391559	IncDec	++		391527	1					
ANR	391560	CompoundStatement		7:33:162:162	391527	3					
ANR	391561	IfStatement	if ( mask & ( 1 << i ) )		391527	0					
ANR	391562	Condition	mask & ( 1 << i )	171:6:5347:5359	391527	0	True				
ANR	391563	BitAndExpression	mask & ( 1 << i )		391527	0		&			
ANR	391564	Identifier	mask		391527	0					
ANR	391565	ShiftExpression	1 << i		391527	1		<<			
ANR	391566	PrimaryExpression	1		391527	0					
ANR	391567	Identifier	i		391527	1					
ANR	391568	CompoundStatement		9:21:229:229	391527	1					
ANR	391569	IfStatement	if ( ( data & ( 1 << j ) ) != 0 )		391527	0					
ANR	391570	Condition	( data & ( 1 << j ) ) != 0	174:7:5510:5529	391527	0	True				
ANR	391571	EqualityExpression	( data & ( 1 << j ) ) != 0		391527	0		!=			
ANR	391572	BitAndExpression	data & ( 1 << j )		391527	0		&			
ANR	391573	Identifier	data		391527	0					
ANR	391574	ShiftExpression	1 << j		391527	1		<<			
ANR	391575	PrimaryExpression	1		391527	0					
ANR	391576	Identifier	j		391527	1					
ANR	391577	PrimaryExpression	0		391527	1					
ANR	391578	CompoundStatement		12:29:399:399	391527	1					
ANR	391579	ExpressionStatement	result |= ( 1 << i )	175:4:5538:5554	391527	0	True				
ANR	391580	AssignmentExpression	result |= ( 1 << i )		391527	0		|=			
ANR	391581	Identifier	result		391527	0					
ANR	391582	ShiftExpression	1 << i		391527	1		<<			
ANR	391583	PrimaryExpression	1		391527	0					
ANR	391584	Identifier	i		391527	1					
ANR	391585	ExpressionStatement	j ++	178:3:5609:5612	391527	1	True				
ANR	391586	PostIncDecOperationExpression	j ++		391527	0					
ANR	391587	Identifier	j		391527	0					
ANR	391588	IncDec	++		391527	1					
ANR	391589	ReturnStatement	return result ;	181:1:5622:5635	391527	3	True				
ANR	391590	Identifier	result		391527	0					
ANR	391591	ReturnType	static uint16_t		391527	1					
ANR	391592	Identifier	packDataByMask		391527	2					
ANR	391593	ParameterList	"uint16_t data , uint16_t mask"		391527	3					
ANR	391594	Parameter	uint16_t data	163:31:5102:5114	391527	0	True				
ANR	391595	ParameterType	uint16_t		391527	0					
ANR	391596	Identifier	data		391527	1					
ANR	391597	Parameter	uint16_t mask	163:46:5117:5129	391527	1	True				
ANR	391598	ParameterType	uint16_t		391527	0					
ANR	391599	Identifier	mask		391527	1					
ANR	391600	CFGEntryNode	ENTRY		391527		True				
ANR	391601	CFGExitNode	EXIT		391527		True				
ANR	391602	Symbol	result		391527						
ANR	391603	Symbol	data		391527						
ANR	391604	Symbol	i		391527						
ANR	391605	Symbol	j		391527						
ANR	391606	Symbol	mask		391527						
ANR	391607	Function	parse_registerpair	184:0:5640:7014							
ANR	391608	FunctionDef	parse_registerpair (const char * operand)		391607	0					
ANR	391609	CompoundStatement		184:51:5691:7014	391607	0					
ANR	391610	IdentifierDeclStatement	int res = - 1 ;	185:1:5694:5706	391607	0	True				
ANR	391611	IdentifierDecl	res = - 1		391607	0					
ANR	391612	IdentifierDeclType	int		391607	0					
ANR	391613	Identifier	res		391607	1					
ANR	391614	AssignmentExpression	res = - 1		391607	2		=			
ANR	391615	Identifier	res		391607	0					
ANR	391616	UnaryOperationExpression	- 1		391607	1					
ANR	391617	UnaryOperator	-		391607	0					
ANR	391618	PrimaryExpression	1		391607	1					
ANR	391619	IdentifierDeclStatement	"char * first , * second , * op ;"	186:1:5709:5734	391607	1	True				
ANR	391620	IdentifierDecl	* first		391607	0					
ANR	391621	IdentifierDeclType	char *		391607	0					
ANR	391622	Identifier	first		391607	1					
ANR	391623	IdentifierDecl	* second		391607	1					
ANR	391624	IdentifierDeclType	char *		391607	0					
ANR	391625	Identifier	second		391607	1					
ANR	391626	IdentifierDecl	* op		391607	2					
ANR	391627	IdentifierDeclType	char *		391607	0					
ANR	391628	Identifier	op		391607	1					
ANR	391629	IdentifierDeclStatement	"int fnum , snum ;"	187:1:5737:5751	391607	2	True				
ANR	391630	IdentifierDecl	fnum		391607	0					
ANR	391631	IdentifierDeclType	int		391607	0					
ANR	391632	Identifier	fnum		391607	1					
ANR	391633	IdentifierDecl	snum		391607	1					
ANR	391634	IdentifierDeclType	int		391607	0					
ANR	391635	Identifier	snum		391607	1					
ANR	391636	ExpressionStatement	op = strdup ( operand )	189:1:5755:5776	391607	3	True				
ANR	391637	AssignmentExpression	op = strdup ( operand )		391607	0		=			
ANR	391638	Identifier	op		391607	0					
ANR	391639	CallExpression	strdup ( operand )		391607	1					
ANR	391640	Callee	strdup		391607	0					
ANR	391641	Identifier	strdup		391607	0					
ANR	391642	ArgumentList	operand		391607	1					
ANR	391643	Argument	operand		391607	0					
ANR	391644	Identifier	operand		391607	0					
ANR	391645	ExpressionStatement	"first = strtok ( op , "":"" )"	190:1:5779:5803	391607	4	True				
ANR	391646	AssignmentExpression	"first = strtok ( op , "":"" )"		391607	0		=			
ANR	391647	Identifier	first		391607	0					
ANR	391648	CallExpression	"strtok ( op , "":"" )"		391607	1					
ANR	391649	Callee	strtok		391607	0					
ANR	391650	Identifier	strtok		391607	0					
ANR	391651	ArgumentList	op		391607	1					
ANR	391652	Argument	op		391607	0					
ANR	391653	Identifier	op		391607	0					
ANR	391654	Argument	""":"""		391607	1					
ANR	391655	PrimaryExpression	""":"""		391607	0					
ANR	391656	IfStatement	if ( ! first || strlen ( first ) < 2 )		391607	5					
ANR	391657	Condition	! first || strlen ( first ) < 2	192:5:5811:5838	391607	0	True				
ANR	391658	OrExpression	! first || strlen ( first ) < 2		391607	0		||			
ANR	391659	UnaryOperationExpression	! first		391607	0					
ANR	391660	UnaryOperator	!		391607	0					
ANR	391661	Identifier	first		391607	1					
ANR	391662	RelationalExpression	strlen ( first ) < 2		391607	1		<			
ANR	391663	CallExpression	strlen ( first )		391607	0					
ANR	391664	Callee	strlen		391607	0					
ANR	391665	Identifier	strlen		391607	0					
ANR	391666	ArgumentList	first		391607	1					
ANR	391667	Argument	first		391607	0					
ANR	391668	Identifier	first		391607	0					
ANR	391669	PrimaryExpression	2		391607	1					
ANR	391670	CompoundStatement		9:35:149:149	391607	1					
ANR	391671	ExpressionStatement	free ( op )	193:2:5845:5854	391607	0	True				
ANR	391672	CallExpression	free ( op )		391607	0					
ANR	391673	Callee	free		391607	0					
ANR	391674	Identifier	free		391607	0					
ANR	391675	ArgumentList	op		391607	1					
ANR	391676	Argument	op		391607	0					
ANR	391677	Identifier	op		391607	0					
ANR	391678	ReturnStatement	return - 1 ;	194:2:5858:5867	391607	1	True				
ANR	391679	UnaryOperationExpression	- 1		391607	0					
ANR	391680	UnaryOperator	-		391607	0					
ANR	391681	PrimaryExpression	1		391607	1					
ANR	391682	ExpressionStatement	"second = strtok ( NULL , "":"" )"	197:1:5874:5901	391607	6	True				
ANR	391683	AssignmentExpression	"second = strtok ( NULL , "":"" )"		391607	0		=			
ANR	391684	Identifier	second		391607	0					
ANR	391685	CallExpression	"strtok ( NULL , "":"" )"		391607	1					
ANR	391686	Callee	strtok		391607	0					
ANR	391687	Identifier	strtok		391607	0					
ANR	391688	ArgumentList	NULL		391607	1					
ANR	391689	Argument	NULL		391607	0					
ANR	391690	Identifier	NULL		391607	0					
ANR	391691	Argument	""":"""		391607	1					
ANR	391692	PrimaryExpression	""":"""		391607	0					
ANR	391693	IfStatement	if ( second && strlen ( second ) < 2 )		391607	7					
ANR	391694	Condition	second && strlen ( second ) < 2	204:5:6129:6157	391607	0	True				
ANR	391695	AndExpression	second && strlen ( second ) < 2		391607	0		&&			
ANR	391696	Identifier	second		391607	0					
ANR	391697	RelationalExpression	strlen ( second ) < 2		391607	1		<			
ANR	391698	CallExpression	strlen ( second )		391607	0					
ANR	391699	Callee	strlen		391607	0					
ANR	391700	Identifier	strlen		391607	0					
ANR	391701	ArgumentList	second		391607	1					
ANR	391702	Argument	second		391607	0					
ANR	391703	Identifier	second		391607	0					
ANR	391704	PrimaryExpression	2		391607	1					
ANR	391705	CompoundStatement		21:36:468:468	391607	1					
ANR	391706	IfStatement	if ( first [ 0 ] == 'r' && second [ 0 ] == 'r' )		391607	0					
ANR	391707	Condition	first [ 0 ] == 'r' && second [ 0 ] == 'r'	208:6:6313:6347	391607	0	True				
ANR	391708	AndExpression	first [ 0 ] == 'r' && second [ 0 ] == 'r'		391607	0		&&			
ANR	391709	EqualityExpression	first [ 0 ] == 'r'		391607	0		==			
ANR	391710	ArrayIndexing	first [ 0 ]		391607	0					
ANR	391711	Identifier	first		391607	0					
ANR	391712	PrimaryExpression	0		391607	1					
ANR	391713	PrimaryExpression	'r'		391607	1					
ANR	391714	EqualityExpression	second [ 0 ] == 'r'		391607	1		==			
ANR	391715	ArrayIndexing	second [ 0 ]		391607	0					
ANR	391716	Identifier	second		391607	0					
ANR	391717	PrimaryExpression	0		391607	1					
ANR	391718	PrimaryExpression	'r'		391607	1					
ANR	391719	CompoundStatement		25:43:658:658	391607	1					
ANR	391720	ExpressionStatement	fnum = atoi ( first + 1 )	209:3:6355:6375	391607	0	True				
ANR	391721	AssignmentExpression	fnum = atoi ( first + 1 )		391607	0		=			
ANR	391722	Identifier	fnum		391607	0					
ANR	391723	CallExpression	atoi ( first + 1 )		391607	1					
ANR	391724	Callee	atoi		391607	0					
ANR	391725	Identifier	atoi		391607	0					
ANR	391726	ArgumentList	first + 1		391607	1					
ANR	391727	Argument	first + 1		391607	0					
ANR	391728	AdditiveExpression	first + 1		391607	0		+			
ANR	391729	Identifier	first		391607	0					
ANR	391730	PrimaryExpression	1		391607	1					
ANR	391731	ExpressionStatement	snum = atoi ( second + 1 )	210:3:6380:6401	391607	1	True				
ANR	391732	AssignmentExpression	snum = atoi ( second + 1 )		391607	0		=			
ANR	391733	Identifier	snum		391607	0					
ANR	391734	CallExpression	atoi ( second + 1 )		391607	1					
ANR	391735	Callee	atoi		391607	0					
ANR	391736	Identifier	atoi		391607	0					
ANR	391737	ArgumentList	second + 1		391607	1					
ANR	391738	Argument	second + 1		391607	0					
ANR	391739	AdditiveExpression	second + 1		391607	0		+			
ANR	391740	Identifier	second		391607	0					
ANR	391741	PrimaryExpression	1		391607	1					
ANR	391742	IfStatement	if ( fnum > snum && snum >= 0 && snum <= 30 )		391607	2					
ANR	391743	Condition	fnum > snum && snum >= 0 && snum <= 30	211:7:6410:6447	391607	0	True				
ANR	391744	AndExpression	fnum > snum && snum >= 0 && snum <= 30		391607	0		&&			
ANR	391745	RelationalExpression	fnum > snum		391607	0		>			
ANR	391746	Identifier	fnum		391607	0					
ANR	391747	Identifier	snum		391607	1					
ANR	391748	AndExpression	snum >= 0 && snum <= 30		391607	1		&&			
ANR	391749	RelationalExpression	snum >= 0		391607	0		>=			
ANR	391750	Identifier	snum		391607	0					
ANR	391751	PrimaryExpression	0		391607	1					
ANR	391752	RelationalExpression	snum <= 30		391607	1		<=			
ANR	391753	Identifier	snum		391607	0					
ANR	391754	PrimaryExpression	30		391607	1					
ANR	391755	CompoundStatement		28:47:758:758	391607	1					
ANR	391756	ExpressionStatement	res = snum / 2	212:4:6456:6470	391607	0	True				
ANR	391757	AssignmentExpression	res = snum / 2		391607	0		=			
ANR	391758	Identifier	res		391607	0					
ANR	391759	MultiplicativeExpression	snum / 2		391607	1		/			
ANR	391760	Identifier	snum		391607	0					
ANR	391761	PrimaryExpression	2		391607	1					
ANR	391762	ElseStatement	else		391607	0					
ANR	391763	IfStatement	if ( first [ 0 ] >= 'x' && first [ 0 ] <= 'z' && second [ 0 ] >= 'x' && second [ 0 ] <= 'z' && first [ 1 ] == 'h' && second [ 1 ] == 'l' )		391607	0					
ANR	391764	Condition	first [ 0 ] >= 'x' && first [ 0 ] <= 'z' && second [ 0 ] >= 'x' && second [ 0 ] <= 'z' && first [ 1 ] == 'h' && second [ 1 ] == 'l'	214:13:6490:6610	391607	0	True				
ANR	391765	AndExpression	first [ 0 ] >= 'x' && first [ 0 ] <= 'z' && second [ 0 ] >= 'x' && second [ 0 ] <= 'z' && first [ 1 ] == 'h' && second [ 1 ] == 'l'		391607	0		&&			
ANR	391766	RelationalExpression	first [ 0 ] >= 'x'		391607	0		>=			
ANR	391767	ArrayIndexing	first [ 0 ]		391607	0					
ANR	391768	Identifier	first		391607	0					
ANR	391769	PrimaryExpression	0		391607	1					
ANR	391770	PrimaryExpression	'x'		391607	1					
ANR	391771	AndExpression	first [ 0 ] <= 'z' && second [ 0 ] >= 'x' && second [ 0 ] <= 'z' && first [ 1 ] == 'h' && second [ 1 ] == 'l'		391607	1		&&			
ANR	391772	RelationalExpression	first [ 0 ] <= 'z'		391607	0		<=			
ANR	391773	ArrayIndexing	first [ 0 ]		391607	0					
ANR	391774	Identifier	first		391607	0					
ANR	391775	PrimaryExpression	0		391607	1					
ANR	391776	PrimaryExpression	'z'		391607	1					
ANR	391777	AndExpression	second [ 0 ] >= 'x' && second [ 0 ] <= 'z' && first [ 1 ] == 'h' && second [ 1 ] == 'l'		391607	1		&&			
ANR	391778	RelationalExpression	second [ 0 ] >= 'x'		391607	0		>=			
ANR	391779	ArrayIndexing	second [ 0 ]		391607	0					
ANR	391780	Identifier	second		391607	0					
ANR	391781	PrimaryExpression	0		391607	1					
ANR	391782	PrimaryExpression	'x'		391607	1					
ANR	391783	AndExpression	second [ 0 ] <= 'z' && first [ 1 ] == 'h' && second [ 1 ] == 'l'		391607	1		&&			
ANR	391784	RelationalExpression	second [ 0 ] <= 'z'		391607	0		<=			
ANR	391785	ArrayIndexing	second [ 0 ]		391607	0					
ANR	391786	Identifier	second		391607	0					
ANR	391787	PrimaryExpression	0		391607	1					
ANR	391788	PrimaryExpression	'z'		391607	1					
ANR	391789	AndExpression	first [ 1 ] == 'h' && second [ 1 ] == 'l'		391607	1		&&			
ANR	391790	EqualityExpression	first [ 1 ] == 'h'		391607	0		==			
ANR	391791	ArrayIndexing	first [ 1 ]		391607	0					
ANR	391792	Identifier	first		391607	0					
ANR	391793	PrimaryExpression	1		391607	1					
ANR	391794	PrimaryExpression	'h'		391607	1					
ANR	391795	EqualityExpression	second [ 1 ] == 'l'		391607	1		==			
ANR	391796	ArrayIndexing	second [ 1 ]		391607	0					
ANR	391797	Identifier	second		391607	0					
ANR	391798	PrimaryExpression	1		391607	1					
ANR	391799	PrimaryExpression	'l'		391607	1					
ANR	391800	CompoundStatement		33:44:921:921	391607	1					
ANR	391801	ExpressionStatement	res = ( 2 - ( 'z' - first [ 0 ] ) ) + 12	218:3:6696:6729	391607	0	True				
ANR	391802	AssignmentExpression	res = ( 2 - ( 'z' - first [ 0 ] ) ) + 12		391607	0		=			
ANR	391803	Identifier	res		391607	0					
ANR	391804	AdditiveExpression	( 2 - ( 'z' - first [ 0 ] ) ) + 12		391607	1		+			
ANR	391805	AdditiveExpression	2 - ( 'z' - first [ 0 ] )		391607	0		-			
ANR	391806	PrimaryExpression	2		391607	0					
ANR	391807	AdditiveExpression	'z' - first [ 0 ]		391607	1		-			
ANR	391808	PrimaryExpression	'z'		391607	0					
ANR	391809	ArrayIndexing	first [ 0 ]		391607	1					
ANR	391810	Identifier	first		391607	0					
ANR	391811	PrimaryExpression	0		391607	1					
ANR	391812	PrimaryExpression	12		391607	1					
ANR	391813	ElseStatement	else		391607	0					
ANR	391814	CompoundStatement		37:8:1051:1051	391607	0					
ANR	391815	IfStatement	if ( first [ 0 ] == 'r' )		391607	0					
ANR	391816	Condition	first [ 0 ] == 'r'	222:6:6790:6804	391607	0	True				
ANR	391817	EqualityExpression	first [ 0 ] == 'r'		391607	0		==			
ANR	391818	ArrayIndexing	first [ 0 ]		391607	0					
ANR	391819	Identifier	first		391607	0					
ANR	391820	PrimaryExpression	0		391607	1					
ANR	391821	PrimaryExpression	'r'		391607	1					
ANR	391822	CompoundStatement		39:23:1115:1115	391607	1					
ANR	391823	ExpressionStatement	snum = atoi ( first + 1 )	223:3:6812:6832	391607	0	True				
ANR	391824	AssignmentExpression	snum = atoi ( first + 1 )		391607	0		=			
ANR	391825	Identifier	snum		391607	0					
ANR	391826	CallExpression	atoi ( first + 1 )		391607	1					
ANR	391827	Callee	atoi		391607	0					
ANR	391828	Identifier	atoi		391607	0					
ANR	391829	ArgumentList	first + 1		391607	1					
ANR	391830	Argument	first + 1		391607	0					
ANR	391831	AdditiveExpression	first + 1		391607	0		+			
ANR	391832	Identifier	first		391607	0					
ANR	391833	PrimaryExpression	1		391607	1					
ANR	391834	IfStatement	if ( snum >= 0 && snum <= 30 )		391607	1					
ANR	391835	Condition	snum >= 0 && snum <= 30	224:7:6841:6863	391607	0	True				
ANR	391836	AndExpression	snum >= 0 && snum <= 30		391607	0		&&			
ANR	391837	RelationalExpression	snum >= 0		391607	0		>=			
ANR	391838	Identifier	snum		391607	0					
ANR	391839	PrimaryExpression	0		391607	1					
ANR	391840	RelationalExpression	snum <= 30		391607	1		<=			
ANR	391841	Identifier	snum		391607	0					
ANR	391842	PrimaryExpression	30		391607	1					
ANR	391843	CompoundStatement		41:32:1174:1174	391607	1					
ANR	391844	ExpressionStatement	res = snum / 2	225:4:6872:6886	391607	0	True				
ANR	391845	AssignmentExpression	res = snum / 2		391607	0		=			
ANR	391846	Identifier	res		391607	0					
ANR	391847	MultiplicativeExpression	snum / 2		391607	1		/			
ANR	391848	Identifier	snum		391607	0					
ANR	391849	PrimaryExpression	2		391607	1					
ANR	391850	ElseStatement	else		391607	0					
ANR	391851	IfStatement	if ( first [ 0 ] >= 'x' && first [ 0 ] <= 'z' )		391607	0					
ANR	391852	Condition	first [ 0 ] >= 'x' && first [ 0 ] <= 'z'	227:13:6906:6939	391607	0	True				
ANR	391853	AndExpression	first [ 0 ] >= 'x' && first [ 0 ] <= 'z'		391607	0		&&			
ANR	391854	RelationalExpression	first [ 0 ] >= 'x'		391607	0		>=			
ANR	391855	ArrayIndexing	first [ 0 ]		391607	0					
ANR	391856	Identifier	first		391607	0					
ANR	391857	PrimaryExpression	0		391607	1					
ANR	391858	PrimaryExpression	'x'		391607	1					
ANR	391859	RelationalExpression	first [ 0 ] <= 'z'		391607	1		<=			
ANR	391860	ArrayIndexing	first [ 0 ]		391607	0					
ANR	391861	Identifier	first		391607	0					
ANR	391862	PrimaryExpression	0		391607	1					
ANR	391863	PrimaryExpression	'z'		391607	1					
ANR	391864	CompoundStatement		44:49:1250:1250	391607	1					
ANR	391865	ExpressionStatement	res = ( 2 - ( 'z' - first [ 0 ] ) ) + 12	228:3:6947:6980	391607	0	True				
ANR	391866	AssignmentExpression	res = ( 2 - ( 'z' - first [ 0 ] ) ) + 12		391607	0		=			
ANR	391867	Identifier	res		391607	0					
ANR	391868	AdditiveExpression	( 2 - ( 'z' - first [ 0 ] ) ) + 12		391607	1		+			
ANR	391869	AdditiveExpression	2 - ( 'z' - first [ 0 ] )		391607	0		-			
ANR	391870	PrimaryExpression	2		391607	0					
ANR	391871	AdditiveExpression	'z' - first [ 0 ]		391607	1		-			
ANR	391872	PrimaryExpression	'z'		391607	0					
ANR	391873	ArrayIndexing	first [ 0 ]		391607	1					
ANR	391874	Identifier	first		391607	0					
ANR	391875	PrimaryExpression	0		391607	1					
ANR	391876	PrimaryExpression	12		391607	1					
ANR	391877	ExpressionStatement	free ( op )	231:1:6990:6999	391607	8	True				
ANR	391878	CallExpression	free ( op )		391607	0					
ANR	391879	Callee	free		391607	0					
ANR	391880	Identifier	free		391607	0					
ANR	391881	ArgumentList	op		391607	1					
ANR	391882	Argument	op		391607	0					
ANR	391883	Identifier	op		391607	0					
ANR	391884	ReturnStatement	return res ;	232:1:7002:7012	391607	9	True				
ANR	391885	Identifier	res		391607	0					
ANR	391886	ReturnType	static int		391607	1					
ANR	391887	Identifier	parse_registerpair		391607	2					
ANR	391888	ParameterList	const char * operand		391607	3					
ANR	391889	Parameter	const char * operand	184:30:5670:5688	391607	0	True				
ANR	391890	ParameterType	const char *		391607	0					
ANR	391891	Identifier	operand		391607	1					
ANR	391892	CFGEntryNode	ENTRY		391607		True				
ANR	391893	CFGExitNode	EXIT		391607		True				
ANR	391894	Symbol	atoi		391607						
ANR	391895	Symbol	res		391607						
ANR	391896	Symbol	op		391607						
ANR	391897	Symbol	NULL		391607						
ANR	391898	Symbol	snum		391607						
ANR	391899	Symbol	strtok		391607						
ANR	391900	Symbol	second		391607						
ANR	391901	Symbol	fnum		391607						
ANR	391902	Symbol	strlen		391607						
ANR	391903	Symbol	* first		391607						
ANR	391904	Symbol	strdup		391607						
ANR	391905	Symbol	operand		391607						
ANR	391906	Symbol	first		391607						
ANR	391907	Symbol	* second		391607						
ANR	391908	Function	assemble_operand	236:0:7079:9423							
ANR	391909	FunctionDef	"assemble_operand (RAsm * a , const char * operand , int type , uint32_t * res)"		391908	0					
ANR	391910	CompoundStatement		236:83:7162:9423	391908	0					
ANR	391911	IdentifierDeclStatement	int ret = - 1 ;	237:1:7165:7177	391908	0	True				
ANR	391912	IdentifierDecl	ret = - 1		391908	0					
ANR	391913	IdentifierDeclType	int		391908	0					
ANR	391914	Identifier	ret		391908	1					
ANR	391915	AssignmentExpression	ret = - 1		391908	2		=			
ANR	391916	Identifier	ret		391908	0					
ANR	391917	UnaryOperationExpression	- 1		391908	1					
ANR	391918	UnaryOperator	-		391908	0					
ANR	391919	PrimaryExpression	1		391908	1					
ANR	391920	IdentifierDeclStatement	int temp ;	238:1:7180:7188	391908	1	True				
ANR	391921	IdentifierDecl	temp		391908	0					
ANR	391922	IdentifierDeclType	int		391908	0					
ANR	391923	Identifier	temp		391908	1					
ANR	391924	SwitchStatement	switch ( type )		391908	2					
ANR	391925	Condition	type	240:9:7200:7203	391908	0	True				
ANR	391926	Identifier	type		391908	0					
ANR	391927	CompoundStatement		5:15:43:43	391908	1					
ANR	391928	Label	case OPERAND_REGISTER_EVEN_PAIR :	241:1:7209:7240	391908	0	True				
ANR	391929	Identifier	OPERAND_REGISTER_EVEN_PAIR		391908	0					
ANR	391930	ExpressionStatement	* res = parse_registerpair ( operand )	242:2:7244:7278	391908	1	True				
ANR	391931	AssignmentExpression	* res = parse_registerpair ( operand )		391908	0		=			
ANR	391932	UnaryOperationExpression	* res		391908	0					
ANR	391933	UnaryOperator	*		391908	0					
ANR	391934	Identifier	res		391908	1					
ANR	391935	CallExpression	parse_registerpair ( operand )		391908	1					
ANR	391936	Callee	parse_registerpair		391908	0					
ANR	391937	Identifier	parse_registerpair		391908	0					
ANR	391938	ArgumentList	operand		391908	1					
ANR	391939	Argument	operand		391908	0					
ANR	391940	Identifier	operand		391908	0					
ANR	391941	IfStatement	if ( * res > 0 )		391908	2					
ANR	391942	Condition	* res > 0	243:6:7286:7293	391908	0	True				
ANR	391943	RelationalExpression	* res > 0		391908	0		>			
ANR	391944	UnaryOperationExpression	* res		391908	0					
ANR	391945	UnaryOperator	*		391908	0					
ANR	391946	Identifier	res		391908	1					
ANR	391947	PrimaryExpression	0		391908	1					
ANR	391948	CompoundStatement		8:16:133:133	391908	1					
ANR	391949	ExpressionStatement	ret = 0	244:3:7301:7308	391908	0	True				
ANR	391950	AssignmentExpression	ret = 0		391908	0		=			
ANR	391951	Identifier	ret		391908	0					
ANR	391952	PrimaryExpression	0		391908	1					
ANR	391953	BreakStatement	break ;	246:2:7316:7321	391908	3	True				
ANR	391954	Label	case OPERAND_REGISTER_EVEN_PAIR_STARTR24 :	247:1:7324:7364	391908	4	True				
ANR	391955	Identifier	OPERAND_REGISTER_EVEN_PAIR_STARTR24		391908	0					
ANR	391956	ExpressionStatement	* res = parse_registerpair ( operand )	248:2:7368:7402	391908	5	True				
ANR	391957	AssignmentExpression	* res = parse_registerpair ( operand )		391908	0		=			
ANR	391958	UnaryOperationExpression	* res		391908	0					
ANR	391959	UnaryOperator	*		391908	0					
ANR	391960	Identifier	res		391908	1					
ANR	391961	CallExpression	parse_registerpair ( operand )		391908	1					
ANR	391962	Callee	parse_registerpair		391908	0					
ANR	391963	Identifier	parse_registerpair		391908	0					
ANR	391964	ArgumentList	operand		391908	1					
ANR	391965	Argument	operand		391908	0					
ANR	391966	Identifier	operand		391908	0					
ANR	391967	IfStatement	if ( * res >= 12 )		391908	6					
ANR	391968	Condition	* res >= 12	250:6:7462:7471	391908	0	True				
ANR	391969	RelationalExpression	* res >= 12		391908	0		>=			
ANR	391970	UnaryOperationExpression	* res		391908	0					
ANR	391971	UnaryOperator	*		391908	0					
ANR	391972	Identifier	res		391908	1					
ANR	391973	PrimaryExpression	12		391908	1					
ANR	391974	CompoundStatement		15:18:311:311	391908	1					
ANR	391975	ExpressionStatement	* res -= 12	251:3:7479:7489	391908	0	True				
ANR	391976	AssignmentExpression	* res -= 12		391908	0		-=			
ANR	391977	UnaryOperationExpression	* res		391908	0					
ANR	391978	UnaryOperator	*		391908	0					
ANR	391979	Identifier	res		391908	1					
ANR	391980	PrimaryExpression	12		391908	1					
ANR	391981	ExpressionStatement	ret = 0	252:3:7494:7501	391908	1	True				
ANR	391982	AssignmentExpression	ret = 0		391908	0		=			
ANR	391983	Identifier	ret		391908	0					
ANR	391984	PrimaryExpression	0		391908	1					
ANR	391985	BreakStatement	break ;	254:2:7509:7514	391908	7	True				
ANR	391986	Label	case OPERAND_BRANCH_ADDRESS :	255:1:7517:7544	391908	8	True				
ANR	391987	Identifier	OPERAND_BRANCH_ADDRESS		391908	0					
ANR	391988	Label	case OPERAND_RELATIVE_ADDRESS :	256:1:7547:7576	391908	9	True				
ANR	391989	Identifier	OPERAND_RELATIVE_ADDRESS		391908	0					
ANR	391990	ExpressionStatement	"temp = getnum ( a , operand )"	257:2:7640:7666	391908	10	True				
ANR	391991	AssignmentExpression	"temp = getnum ( a , operand )"		391908	0		=			
ANR	391992	Identifier	temp		391908	0					
ANR	391993	CallExpression	"getnum ( a , operand )"		391908	1					
ANR	391994	Callee	getnum		391908	0					
ANR	391995	Identifier	getnum		391908	0					
ANR	391996	ArgumentList	a		391908	1					
ANR	391997	Argument	a		391908	0					
ANR	391998	Identifier	a		391908	0					
ANR	391999	Argument	operand		391908	1					
ANR	392000	Identifier	operand		391908	0					
ANR	392001	IfStatement	if ( a -> pc || ( operand [ 0 ] != '+' && operand [ 0 ] != '-' ) )		391908	11					
ANR	392002	Condition	a -> pc || ( operand [ 0 ] != '+' && operand [ 0 ] != '-' )	262:5:7875:7923	391908	0	True				
ANR	392003	OrExpression	a -> pc || ( operand [ 0 ] != '+' && operand [ 0 ] != '-' )		391908	0		||			
ANR	392004	PtrMemberAccess	a -> pc		391908	0					
ANR	392005	Identifier	a		391908	0					
ANR	392006	Identifier	pc		391908	1					
ANR	392007	AndExpression	operand [ 0 ] != '+' && operand [ 0 ] != '-'		391908	1		&&			
ANR	392008	EqualityExpression	operand [ 0 ] != '+'		391908	0		!=			
ANR	392009	ArrayIndexing	operand [ 0 ]		391908	0					
ANR	392010	Identifier	operand		391908	0					
ANR	392011	PrimaryExpression	0		391908	1					
ANR	392012	PrimaryExpression	'+'		391908	1					
ANR	392013	EqualityExpression	operand [ 0 ] != '-'		391908	1		!=			
ANR	392014	ArrayIndexing	operand [ 0 ]		391908	0					
ANR	392015	Identifier	operand		391908	0					
ANR	392016	PrimaryExpression	0		391908	1					
ANR	392017	PrimaryExpression	'-'		391908	1					
ANR	392018	CompoundStatement		27:56:763:763	391908	1					
ANR	392019	ExpressionStatement	temp -= a -> pc + 2	265:3:8053:8070	391908	0	True				
ANR	392020	AssignmentExpression	temp -= a -> pc + 2		391908	0		-=			
ANR	392021	Identifier	temp		391908	0					
ANR	392022	AdditiveExpression	a -> pc + 2		391908	1		+			
ANR	392023	PtrMemberAccess	a -> pc		391908	0					
ANR	392024	Identifier	a		391908	0					
ANR	392025	Identifier	pc		391908	1					
ANR	392026	PrimaryExpression	2		391908	1					
ANR	392027	ExpressionStatement	temp /= 2	267:2:8078:8087	391908	12	True				
ANR	392028	AssignmentExpression	temp /= 2		391908	0		/=			
ANR	392029	Identifier	temp		391908	0					
ANR	392030	PrimaryExpression	2		391908	1					
ANR	392031	IfStatement	if ( temp >= - 64 && temp <= 63 )		391908	13					
ANR	392032	Condition	temp >= - 64 && temp <= 63	268:6:8107:8131	391908	0	True				
ANR	392033	AndExpression	temp >= - 64 && temp <= 63		391908	0		&&			
ANR	392034	RelationalExpression	temp >= - 64		391908	0		>=			
ANR	392035	Identifier	temp		391908	0					
ANR	392036	UnaryOperationExpression	- 64		391908	1					
ANR	392037	UnaryOperator	-		391908	0					
ANR	392038	PrimaryExpression	64		391908	1					
ANR	392039	RelationalExpression	temp <= 63		391908	1		<=			
ANR	392040	Identifier	temp		391908	0					
ANR	392041	PrimaryExpression	63		391908	1					
ANR	392042	CompoundStatement		33:33:971:971	391908	1					
ANR	392043	ExpressionStatement	ret = 0	269:3:8139:8146	391908	0	True				
ANR	392044	AssignmentExpression	ret = 0		391908	0		=			
ANR	392045	Identifier	ret		391908	0					
ANR	392046	PrimaryExpression	0		391908	1					
ANR	392047	ExpressionStatement	* res = temp	271:2:8154:8165	391908	14	True				
ANR	392048	AssignmentExpression	* res = temp		391908	0		=			
ANR	392049	UnaryOperationExpression	* res		391908	0					
ANR	392050	UnaryOperator	*		391908	0					
ANR	392051	Identifier	res		391908	1					
ANR	392052	Identifier	temp		391908	1					
ANR	392053	BreakStatement	break ;	272:2:8169:8174	391908	15	True				
ANR	392054	Label	case OPERAND_IO_REGISTER :	273:1:8177:8201	391908	16	True				
ANR	392055	Identifier	OPERAND_IO_REGISTER		391908	0					
ANR	392056	Label	case OPERAND_BIT :	274:1:8204:8220	391908	17	True				
ANR	392057	Identifier	OPERAND_BIT		391908	0					
ANR	392058	Label	case OPERAND_DES_ROUND :	275:1:8223:8245	391908	18	True				
ANR	392059	Identifier	OPERAND_DES_ROUND		391908	0					
ANR	392060	Label	case OPERAND_LONG_ABSOLUTE_ADDRESS :	276:1:8248:8282	391908	19	True				
ANR	392061	Identifier	OPERAND_LONG_ABSOLUTE_ADDRESS		391908	0					
ANR	392062	Label	case OPERAND_DATA :	277:1:8285:8302	391908	20	True				
ANR	392063	Identifier	OPERAND_DATA		391908	0					
ANR	392064	ExpressionStatement	"* res = getnum ( a , operand )"	278:2:8306:8331	391908	21	True				
ANR	392065	AssignmentExpression	"* res = getnum ( a , operand )"		391908	0		=			
ANR	392066	UnaryOperationExpression	* res		391908	0					
ANR	392067	UnaryOperator	*		391908	0					
ANR	392068	Identifier	res		391908	1					
ANR	392069	CallExpression	"getnum ( a , operand )"		391908	1					
ANR	392070	Callee	getnum		391908	0					
ANR	392071	Identifier	getnum		391908	0					
ANR	392072	ArgumentList	a		391908	1					
ANR	392073	Argument	a		391908	0					
ANR	392074	Identifier	a		391908	0					
ANR	392075	Argument	operand		391908	1					
ANR	392076	Identifier	operand		391908	0					
ANR	392077	ExpressionStatement	ret = 0	279:2:8357:8364	391908	22	True				
ANR	392078	AssignmentExpression	ret = 0		391908	0		=			
ANR	392079	Identifier	ret		391908	0					
ANR	392080	PrimaryExpression	0		391908	1					
ANR	392081	BreakStatement	break ;	280:2:8368:8373	391908	23	True				
ANR	392082	Label	case OPERAND_COMPLEMENTED_DATA :	281:1:8376:8406	391908	24	True				
ANR	392083	Identifier	OPERAND_COMPLEMENTED_DATA		391908	0					
ANR	392084	ExpressionStatement	"* res = getnum ( a , operand )"	282:2:8410:8435	391908	25	True				
ANR	392085	AssignmentExpression	"* res = getnum ( a , operand )"		391908	0		=			
ANR	392086	UnaryOperationExpression	* res		391908	0					
ANR	392087	UnaryOperator	*		391908	0					
ANR	392088	Identifier	res		391908	1					
ANR	392089	CallExpression	"getnum ( a , operand )"		391908	1					
ANR	392090	Callee	getnum		391908	0					
ANR	392091	Identifier	getnum		391908	0					
ANR	392092	ArgumentList	a		391908	1					
ANR	392093	Argument	a		391908	0					
ANR	392094	Identifier	a		391908	0					
ANR	392095	Argument	operand		391908	1					
ANR	392096	Identifier	operand		391908	0					
ANR	392097	ExpressionStatement	* res = ~ ( * res ) & 0xFF	283:2:8461:8482	391908	26	True				
ANR	392098	AssignmentExpression	* res = ~ ( * res ) & 0xFF		391908	0		=			
ANR	392099	UnaryOperationExpression	* res		391908	0					
ANR	392100	UnaryOperator	*		391908	0					
ANR	392101	Identifier	res		391908	1					
ANR	392102	BitAndExpression	~ ( * res ) & 0xFF		391908	1		&			
ANR	392103	UnaryOperationExpression	~ ( * res )		391908	0					
ANR	392104	UnaryOperator	~		391908	0					
ANR	392105	UnaryOperationExpression	* res		391908	1					
ANR	392106	UnaryOperator	*		391908	0					
ANR	392107	Identifier	res		391908	1					
ANR	392108	PrimaryExpression	0xFF		391908	1					
ANR	392109	ExpressionStatement	ret = 0	284:2:8503:8510	391908	27	True				
ANR	392110	AssignmentExpression	ret = 0		391908	0		=			
ANR	392111	Identifier	ret		391908	0					
ANR	392112	PrimaryExpression	0		391908	1					
ANR	392113	BreakStatement	break ;	285:2:8514:8519	391908	28	True				
ANR	392114	Label	case OPERAND_MX :	286:1:8522:8537	391908	29	True				
ANR	392115	Identifier	OPERAND_MX		391908	0					
ANR	392116	Label	case OPERAND_X :	287:1:8540:8554	391908	30	True				
ANR	392117	Identifier	OPERAND_X		391908	0					
ANR	392118	Label	case OPERAND_XP :	288:1:8557:8572	391908	31	True				
ANR	392119	Identifier	OPERAND_XP		391908	0					
ANR	392120	Label	case OPERAND_MY :	289:1:8575:8590	391908	32	True				
ANR	392121	Identifier	OPERAND_MY		391908	0					
ANR	392122	Label	case OPERAND_Y :	290:1:8593:8607	391908	33	True				
ANR	392123	Identifier	OPERAND_Y		391908	0					
ANR	392124	Label	case OPERAND_YP :	291:1:8610:8625	391908	34	True				
ANR	392125	Identifier	OPERAND_YP		391908	0					
ANR	392126	Label	case OPERAND_MZ :	292:1:8628:8643	391908	35	True				
ANR	392127	Identifier	OPERAND_MZ		391908	0					
ANR	392128	Label	case OPERAND_Z :	293:1:8646:8660	391908	36	True				
ANR	392129	Identifier	OPERAND_Z		391908	0					
ANR	392130	Label	case OPERAND_ZP :	294:1:8663:8678	391908	37	True				
ANR	392131	Identifier	OPERAND_ZP		391908	0					
ANR	392132	ExpressionStatement	* res = 0	295:2:8682:8690	391908	38	True				
ANR	392133	AssignmentExpression	* res = 0		391908	0		=			
ANR	392134	UnaryOperationExpression	* res		391908	0					
ANR	392135	UnaryOperator	*		391908	0					
ANR	392136	Identifier	res		391908	1					
ANR	392137	PrimaryExpression	0		391908	1					
ANR	392138	ExpressionStatement	ret = 0	296:2:8745:8752	391908	39	True				
ANR	392139	AssignmentExpression	ret = 0		391908	0		=			
ANR	392140	Identifier	ret		391908	0					
ANR	392141	PrimaryExpression	0		391908	1					
ANR	392142	BreakStatement	break ;	297:2:8756:8761	391908	40	True				
ANR	392143	Label	case OPERAND_YPQ :	299:1:8765:8781	391908	41	True				
ANR	392144	Identifier	OPERAND_YPQ		391908	0					
ANR	392145	Label	case OPERAND_ZPQ :	300:1:8784:8800	391908	42	True				
ANR	392146	Identifier	OPERAND_ZPQ		391908	0					
ANR	392147	IfStatement	if ( strlen ( operand ) > 2 )		391908	43					
ANR	392148	Condition	strlen ( operand ) > 2	301:6:8808:8826	391908	0	True				
ANR	392149	RelationalExpression	strlen ( operand ) > 2		391908	0		>			
ANR	392150	CallExpression	strlen ( operand )		391908	0					
ANR	392151	Callee	strlen		391908	0					
ANR	392152	Identifier	strlen		391908	0					
ANR	392153	ArgumentList	operand		391908	1					
ANR	392154	Argument	operand		391908	0					
ANR	392155	Identifier	operand		391908	0					
ANR	392156	PrimaryExpression	2		391908	1					
ANR	392157	CompoundStatement		66:27:1666:1666	391908	1					
ANR	392158	ExpressionStatement	"* res = getnum ( a , operand + 2 )"	304:3:8938:8967	391908	0	True				
ANR	392159	AssignmentExpression	"* res = getnum ( a , operand + 2 )"		391908	0		=			
ANR	392160	UnaryOperationExpression	* res		391908	0					
ANR	392161	UnaryOperator	*		391908	0					
ANR	392162	Identifier	res		391908	1					
ANR	392163	CallExpression	"getnum ( a , operand + 2 )"		391908	1					
ANR	392164	Callee	getnum		391908	0					
ANR	392165	Identifier	getnum		391908	0					
ANR	392166	ArgumentList	a		391908	1					
ANR	392167	Argument	a		391908	0					
ANR	392168	Identifier	a		391908	0					
ANR	392169	Argument	operand + 2		391908	1					
ANR	392170	AdditiveExpression	operand + 2		391908	0		+			
ANR	392171	Identifier	operand		391908	0					
ANR	392172	PrimaryExpression	2		391908	1					
ANR	392173	ExpressionStatement	ret = 0	305:3:8972:8979	391908	1	True				
ANR	392174	AssignmentExpression	ret = 0		391908	0		=			
ANR	392175	Identifier	ret		391908	0					
ANR	392176	PrimaryExpression	0		391908	1					
ANR	392177	BreakStatement	break ;	307:2:8987:8992	391908	44	True				
ANR	392178	Label	case OPERAND_REGISTER :	309:1:8996:9017	391908	45	True				
ANR	392179	Identifier	OPERAND_REGISTER		391908	0					
ANR	392180	IfStatement	if ( strlen ( operand ) > 1 )		391908	46					
ANR	392181	Condition	strlen ( operand ) > 1	310:6:9025:9043	391908	0	True				
ANR	392182	RelationalExpression	strlen ( operand ) > 1		391908	0		>			
ANR	392183	CallExpression	strlen ( operand )		391908	0					
ANR	392184	Callee	strlen		391908	0					
ANR	392185	Identifier	strlen		391908	0					
ANR	392186	ArgumentList	operand		391908	1					
ANR	392187	Argument	operand		391908	0					
ANR	392188	Identifier	operand		391908	0					
ANR	392189	PrimaryExpression	1		391908	1					
ANR	392190	CompoundStatement		75:27:1883:1883	391908	1					
ANR	392191	ExpressionStatement	"* res = getnum ( a , operand + 1 )"	312:3:9087:9116	391908	0	True				
ANR	392192	AssignmentExpression	"* res = getnum ( a , operand + 1 )"		391908	0		=			
ANR	392193	UnaryOperationExpression	* res		391908	0					
ANR	392194	UnaryOperator	*		391908	0					
ANR	392195	Identifier	res		391908	1					
ANR	392196	CallExpression	"getnum ( a , operand + 1 )"		391908	1					
ANR	392197	Callee	getnum		391908	0					
ANR	392198	Identifier	getnum		391908	0					
ANR	392199	ArgumentList	a		391908	1					
ANR	392200	Argument	a		391908	0					
ANR	392201	Identifier	a		391908	0					
ANR	392202	Argument	operand + 1		391908	1					
ANR	392203	AdditiveExpression	operand + 1		391908	0		+			
ANR	392204	Identifier	operand		391908	0					
ANR	392205	PrimaryExpression	1		391908	1					
ANR	392206	IfStatement	if ( * res <= 32 )		391908	1					
ANR	392207	Condition	* res <= 32	313:7:9125:9134	391908	0	True				
ANR	392208	RelationalExpression	* res <= 32		391908	0		<=			
ANR	392209	UnaryOperationExpression	* res		391908	0					
ANR	392210	UnaryOperator	*		391908	0					
ANR	392211	Identifier	res		391908	1					
ANR	392212	PrimaryExpression	32		391908	1					
ANR	392213	CompoundStatement		78:19:1974:1974	391908	1					
ANR	392214	ExpressionStatement	ret = 0	314:4:9143:9150	391908	0	True				
ANR	392215	AssignmentExpression	ret = 0		391908	0		=			
ANR	392216	Identifier	ret		391908	0					
ANR	392217	PrimaryExpression	0		391908	1					
ANR	392218	BreakStatement	break ;	317:2:9163:9168	391908	47	True				
ANR	392219	Label	case OPERAND_REGISTER_STARTR16 :	318:1:9171:9201	391908	48	True				
ANR	392220	Identifier	OPERAND_REGISTER_STARTR16		391908	0					
ANR	392221	IfStatement	if ( strlen ( operand ) > 1 )		391908	49					
ANR	392222	Condition	strlen ( operand ) > 1	319:6:9209:9227	391908	0	True				
ANR	392223	RelationalExpression	strlen ( operand ) > 1		391908	0		>			
ANR	392224	CallExpression	strlen ( operand )		391908	0					
ANR	392225	Callee	strlen		391908	0					
ANR	392226	Identifier	strlen		391908	0					
ANR	392227	ArgumentList	operand		391908	1					
ANR	392228	Argument	operand		391908	0					
ANR	392229	Identifier	operand		391908	0					
ANR	392230	PrimaryExpression	1		391908	1					
ANR	392231	CompoundStatement		84:27:2067:2067	391908	1					
ANR	392232	ExpressionStatement	"* res = getnum ( a , operand + 1 )"	321:3:9271:9300	391908	0	True				
ANR	392233	AssignmentExpression	"* res = getnum ( a , operand + 1 )"		391908	0		=			
ANR	392234	UnaryOperationExpression	* res		391908	0					
ANR	392235	UnaryOperator	*		391908	0					
ANR	392236	Identifier	res		391908	1					
ANR	392237	CallExpression	"getnum ( a , operand + 1 )"		391908	1					
ANR	392238	Callee	getnum		391908	0					
ANR	392239	Identifier	getnum		391908	0					
ANR	392240	ArgumentList	a		391908	1					
ANR	392241	Argument	a		391908	0					
ANR	392242	Identifier	a		391908	0					
ANR	392243	Argument	operand + 1		391908	1					
ANR	392244	AdditiveExpression	operand + 1		391908	0		+			
ANR	392245	Identifier	operand		391908	0					
ANR	392246	PrimaryExpression	1		391908	1					
ANR	392247	IfStatement	if ( * res >= 16 && * res <= 32 )		391908	1					
ANR	392248	Condition	* res >= 16 && * res <= 32	322:7:9309:9332	391908	0	True				
ANR	392249	AndExpression	* res >= 16 && * res <= 32		391908	0		&&			
ANR	392250	RelationalExpression	* res >= 16		391908	0		>=			
ANR	392251	UnaryOperationExpression	* res		391908	0					
ANR	392252	UnaryOperator	*		391908	0					
ANR	392253	Identifier	res		391908	1					
ANR	392254	PrimaryExpression	16		391908	1					
ANR	392255	RelationalExpression	* res <= 32		391908	1		<=			
ANR	392256	UnaryOperationExpression	* res		391908	0					
ANR	392257	UnaryOperator	*		391908	0					
ANR	392258	Identifier	res		391908	1					
ANR	392259	PrimaryExpression	32		391908	1					
ANR	392260	CompoundStatement		87:33:2172:2172	391908	1					
ANR	392261	ExpressionStatement	* res -= 16	323:4:9341:9351	391908	0	True				
ANR	392262	AssignmentExpression	* res -= 16		391908	0		-=			
ANR	392263	UnaryOperationExpression	* res		391908	0					
ANR	392264	UnaryOperator	*		391908	0					
ANR	392265	Identifier	res		391908	1					
ANR	392266	PrimaryExpression	16		391908	1					
ANR	392267	ExpressionStatement	ret = 0	324:4:9357:9364	391908	1	True				
ANR	392268	AssignmentExpression	ret = 0		391908	0		=			
ANR	392269	Identifier	ret		391908	0					
ANR	392270	PrimaryExpression	0		391908	1					
ANR	392271	BreakStatement	break ;	327:2:9377:9382	391908	50	True				
ANR	392272	Label	default :	328:1:9385:9392	391908	51	True				
ANR	392273	Identifier	default		391908	0					
ANR	392274	ExpressionStatement	ret = - 1	329:2:9396:9404	391908	52	True				
ANR	392275	AssignmentExpression	ret = - 1		391908	0		=			
ANR	392276	Identifier	ret		391908	0					
ANR	392277	UnaryOperationExpression	- 1		391908	1					
ANR	392278	UnaryOperator	-		391908	0					
ANR	392279	PrimaryExpression	1		391908	1					
ANR	392280	ReturnStatement	return ret ;	332:1:9411:9421	391908	3	True				
ANR	392281	Identifier	ret		391908	0					
ANR	392282	ReturnType	static int		391908	1					
ANR	392283	Identifier	assemble_operand		391908	2					
ANR	392284	ParameterList	"RAsm * a , const char * operand , int type , uint32_t * res"		391908	3					
ANR	392285	Parameter	RAsm * a	236:28:7107:7113	391908	0	True				
ANR	392286	ParameterType	RAsm *		391908	0					
ANR	392287	Identifier	a		391908	1					
ANR	392288	Parameter	const char * operand	236:37:7116:7134	391908	1	True				
ANR	392289	ParameterType	const char *		391908	0					
ANR	392290	Identifier	operand		391908	1					
ANR	392291	Parameter	int type	236:58:7137:7144	391908	2	True				
ANR	392292	ParameterType	int		391908	0					
ANR	392293	Identifier	type		391908	1					
ANR	392294	Parameter	uint32_t * res	236:68:7147:7159	391908	3	True				
ANR	392295	ParameterType	uint32_t *		391908	0					
ANR	392296	Identifier	res		391908	1					
ANR	392297	CFGEntryNode	ENTRY		391908		True				
ANR	392298	CFGExitNode	EXIT		391908		True				
ANR	392299	Symbol	ret		391908						
ANR	392300	Symbol	a		391908						
ANR	392301	Symbol	res		391908						
ANR	392302	Symbol	temp		391908						
ANR	392303	Symbol	* operand		391908						
ANR	392304	Symbol	* res		391908						
ANR	392305	Symbol	* a		391908						
ANR	392306	Symbol	type		391908						
ANR	392307	Symbol	a -> pc		391908						
ANR	392308	Symbol	parse_registerpair		391908						
ANR	392309	Symbol	strlen		391908						
ANR	392310	Symbol	getnum		391908						
ANR	392311	Symbol	operand		391908						
ANR	392312	Function	assemble	335:0:9426:12810							
ANR	392313	FunctionDef	"assemble (RAsm * a , RAsmOp * ao , const char * str)"		392312	0					
ANR	392314	CompoundStatement		335:58:9484:12810	392312	0					
ANR	392315	Statement	char	336:1:9487:9490	392312	0	True				
ANR	392316	ExpressionStatement	tokens [ 3 ] [ MAX_TOKEN_SIZE ]	336:6:9492:9517	392312	1	True				
ANR	392317	ArrayIndexing	tokens [ 3 ] [ MAX_TOKEN_SIZE ]		392312	0					
ANR	392318	ArrayIndexing	tokens [ 3 ]		392312	0					
ANR	392319	Identifier	tokens		392312	0					
ANR	392320	PrimaryExpression	3		392312	1					
ANR	392321	Identifier	MAX_TOKEN_SIZE		392312	1					
ANR	392322	IdentifierDeclStatement	char * token ;	337:1:9520:9531	392312	2	True				
ANR	392323	IdentifierDecl	* token		392312	0					
ANR	392324	IdentifierDeclType	char *		392312	0					
ANR	392325	Identifier	token		392312	1					
ANR	392326	IdentifierDeclStatement	uint32_t coded = 0 ;	338:1:9534:9552	392312	3	True				
ANR	392327	IdentifierDecl	coded = 0		392312	0					
ANR	392328	IdentifierDeclType	uint32_t		392312	0					
ANR	392329	Identifier	coded		392312	1					
ANR	392330	AssignmentExpression	coded = 0		392312	2		=			
ANR	392331	Identifier	coded		392312	0					
ANR	392332	PrimaryExpression	0		392312	1					
ANR	392333	IdentifierDeclStatement	int len = 0 ;	339:1:9555:9567	392312	4	True				
ANR	392334	IdentifierDecl	len = 0		392312	0					
ANR	392335	IdentifierDeclType	int		392312	0					
ANR	392336	Identifier	len		392312	1					
ANR	392337	AssignmentExpression	len = 0		392312	2		=			
ANR	392338	Identifier	len		392312	0					
ANR	392339	PrimaryExpression	0		392312	1					
ANR	392340	IdentifierDeclStatement	"uint32_t op1 = 0 , op2 = 0 ;"	340:1:9570:9595	392312	5	True				
ANR	392341	IdentifierDecl	op1 = 0		392312	0					
ANR	392342	IdentifierDeclType	uint32_t		392312	0					
ANR	392343	Identifier	op1		392312	1					
ANR	392344	AssignmentExpression	op1 = 0		392312	2		=			
ANR	392345	Identifier	op1		392312	0					
ANR	392346	PrimaryExpression	0		392312	1					
ANR	392347	IdentifierDecl	op2 = 0		392312	1					
ANR	392348	IdentifierDeclType	uint32_t		392312	0					
ANR	392349	Identifier	op2		392312	1					
ANR	392350	AssignmentExpression	op2 = 0		392312	2		=			
ANR	392351	Identifier	op2		392312	0					
ANR	392352	PrimaryExpression	0		392312	1					
ANR	392353	IdentifierDeclStatement	unsigned int tokens_cnt = 0 ;	341:1:9598:9625	392312	6	True				
ANR	392354	IdentifierDecl	tokens_cnt = 0		392312	0					
ANR	392355	IdentifierDeclType	unsigned int		392312	0					
ANR	392356	Identifier	tokens_cnt		392312	1					
ANR	392357	AssignmentExpression	tokens_cnt = 0		392312	2		=			
ANR	392358	Identifier	tokens_cnt		392312	0					
ANR	392359	PrimaryExpression	0		392312	1					
ANR	392360	IdentifierDeclStatement	int instr_idx = - 1 ;	342:1:9628:9646	392312	7	True				
ANR	392361	IdentifierDecl	instr_idx = - 1		392312	0					
ANR	392362	IdentifierDeclType	int		392312	0					
ANR	392363	Identifier	instr_idx		392312	1					
ANR	392364	AssignmentExpression	instr_idx = - 1		392312	2		=			
ANR	392365	Identifier	instr_idx		392312	0					
ANR	392366	UnaryOperationExpression	- 1		392312	1					
ANR	392367	UnaryOperator	-		392312	0					
ANR	392368	PrimaryExpression	1		392312	1					
ANR	392369	ExpressionStatement	"token = strtok ( ( char * ) str , TOKEN_DELIM )"	346:1:9750:9791	392312	8	True				
ANR	392370	AssignmentExpression	"token = strtok ( ( char * ) str , TOKEN_DELIM )"		392312	0		=			
ANR	392371	Identifier	token		392312	0					
ANR	392372	CallExpression	"strtok ( ( char * ) str , TOKEN_DELIM )"		392312	1					
ANR	392373	Callee	strtok		392312	0					
ANR	392374	Identifier	strtok		392312	0					
ANR	392375	ArgumentList	( char * ) str		392312	1					
ANR	392376	Argument	( char * ) str		392312	0					
ANR	392377	CastExpression	( char * ) str		392312	0					
ANR	392378	CastTarget	char *		392312	0					
ANR	392379	Identifier	str		392312	1					
ANR	392380	Argument	TOKEN_DELIM		392312	1					
ANR	392381	Identifier	TOKEN_DELIM		392312	0					
ANR	392382	WhileStatement	while ( token != NULL && tokens_cnt < 3 )		392312	9					
ANR	392383	Condition	token != NULL && tokens_cnt < 3	347:8:9801:9831	392312	0	True				
ANR	392384	AndExpression	token != NULL && tokens_cnt < 3		392312	0		&&			
ANR	392385	EqualityExpression	token != NULL		392312	0		!=			
ANR	392386	Identifier	token		392312	0					
ANR	392387	Identifier	NULL		392312	1					
ANR	392388	RelationalExpression	tokens_cnt < 3		392312	1		<			
ANR	392389	Identifier	tokens_cnt		392312	0					
ANR	392390	PrimaryExpression	3		392312	1					
ANR	392391	CompoundStatement		13:41:349:349	392312	1					
ANR	392392	ExpressionStatement	"memset ( tokens [ tokens_cnt ] , 0 , MAX_TOKEN_SIZE )"	348:2:9838:9884	392312	0	True				
ANR	392393	CallExpression	"memset ( tokens [ tokens_cnt ] , 0 , MAX_TOKEN_SIZE )"		392312	0					
ANR	392394	Callee	memset		392312	0					
ANR	392395	Identifier	memset		392312	0					
ANR	392396	ArgumentList	tokens [ tokens_cnt ]		392312	1					
ANR	392397	Argument	tokens [ tokens_cnt ]		392312	0					
ANR	392398	ArrayIndexing	tokens [ tokens_cnt ]		392312	0					
ANR	392399	Identifier	tokens		392312	0					
ANR	392400	Identifier	tokens_cnt		392312	1					
ANR	392401	Argument	0		392312	1					
ANR	392402	PrimaryExpression	0		392312	0					
ANR	392403	Argument	MAX_TOKEN_SIZE		392312	2					
ANR	392404	Identifier	MAX_TOKEN_SIZE		392312	0					
ANR	392405	ExpressionStatement	"strncpy ( tokens [ tokens_cnt ] , token , MAX_TOKEN_SIZE - 1 )"	349:2:9888:9941	392312	1	True				
ANR	392406	CallExpression	"strncpy ( tokens [ tokens_cnt ] , token , MAX_TOKEN_SIZE - 1 )"		392312	0					
ANR	392407	Callee	strncpy		392312	0					
ANR	392408	Identifier	strncpy		392312	0					
ANR	392409	ArgumentList	tokens [ tokens_cnt ]		392312	1					
ANR	392410	Argument	tokens [ tokens_cnt ]		392312	0					
ANR	392411	ArrayIndexing	tokens [ tokens_cnt ]		392312	0					
ANR	392412	Identifier	tokens		392312	0					
ANR	392413	Identifier	tokens_cnt		392312	1					
ANR	392414	Argument	token		392312	1					
ANR	392415	Identifier	token		392312	0					
ANR	392416	Argument	MAX_TOKEN_SIZE - 1		392312	2					
ANR	392417	AdditiveExpression	MAX_TOKEN_SIZE - 1		392312	0		-			
ANR	392418	Identifier	MAX_TOKEN_SIZE		392312	0					
ANR	392419	PrimaryExpression	1		392312	1					
ANR	392420	ExpressionStatement	"token = strtok ( NULL , TOKEN_DELIM )"	350:2:9945:9979	392312	2	True				
ANR	392421	AssignmentExpression	"token = strtok ( NULL , TOKEN_DELIM )"		392312	0		=			
ANR	392422	Identifier	token		392312	0					
ANR	392423	CallExpression	"strtok ( NULL , TOKEN_DELIM )"		392312	1					
ANR	392424	Callee	strtok		392312	0					
ANR	392425	Identifier	strtok		392312	0					
ANR	392426	ArgumentList	NULL		392312	1					
ANR	392427	Argument	NULL		392312	0					
ANR	392428	Identifier	NULL		392312	0					
ANR	392429	Argument	TOKEN_DELIM		392312	1					
ANR	392430	Identifier	TOKEN_DELIM		392312	0					
ANR	392431	ExpressionStatement	tokens_cnt += 1	351:2:9983:9998	392312	3	True				
ANR	392432	AssignmentExpression	tokens_cnt += 1		392312	0		+=			
ANR	392433	Identifier	tokens_cnt		392312	0					
ANR	392434	PrimaryExpression	1		392312	1					
ANR	392435	IfStatement	if ( tokens_cnt > 0 )		392312	10					
ANR	392436	Condition	tokens_cnt > 0	354:5:10009:10022	392312	0	True				
ANR	392437	RelationalExpression	tokens_cnt > 0		392312	0		>			
ANR	392438	Identifier	tokens_cnt		392312	0					
ANR	392439	PrimaryExpression	0		392312	1					
ANR	392440	CompoundStatement		20:21:540:540	392312	1					
ANR	392441	ExpressionStatement	"instr_idx = search_instruction ( a , tokens , tokens_cnt - 1 )"	356:2:10084:10142	392312	0	True				
ANR	392442	AssignmentExpression	"instr_idx = search_instruction ( a , tokens , tokens_cnt - 1 )"		392312	0		=			
ANR	392443	Identifier	instr_idx		392312	0					
ANR	392444	CallExpression	"search_instruction ( a , tokens , tokens_cnt - 1 )"		392312	1					
ANR	392445	Callee	search_instruction		392312	0					
ANR	392446	Identifier	search_instruction		392312	0					
ANR	392447	ArgumentList	a		392312	1					
ANR	392448	Argument	a		392312	0					
ANR	392449	Identifier	a		392312	0					
ANR	392450	Argument	tokens		392312	1					
ANR	392451	Identifier	tokens		392312	0					
ANR	392452	Argument	tokens_cnt - 1		392312	2					
ANR	392453	AdditiveExpression	tokens_cnt - 1		392312	0		-			
ANR	392454	Identifier	tokens_cnt		392312	0					
ANR	392455	PrimaryExpression	1		392312	1					
ANR	392456	IfStatement	if ( instr_idx >= 0 )		392312	1					
ANR	392457	Condition	instr_idx >= 0	358:6:10151:10164	392312	0	True				
ANR	392458	RelationalExpression	instr_idx >= 0		392312	0		>=			
ANR	392459	Identifier	instr_idx		392312	0					
ANR	392460	PrimaryExpression	0		392312	1					
ANR	392461	CompoundStatement		24:22:682:682	392312	1					
ANR	392462	IfStatement	if ( instructionSet [ instr_idx ] . numOperands == 0 && tokens_cnt == 1 )		392312	0					
ANR	392463	Condition	instructionSet [ instr_idx ] . numOperands == 0 && tokens_cnt == 1	360:7:10221:10281	392312	0	True				
ANR	392464	AndExpression	instructionSet [ instr_idx ] . numOperands == 0 && tokens_cnt == 1		392312	0		&&			
ANR	392465	EqualityExpression	instructionSet [ instr_idx ] . numOperands == 0		392312	0		==			
ANR	392466	MemberAccess	instructionSet [ instr_idx ] . numOperands		392312	0					
ANR	392467	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392468	Identifier	instructionSet		392312	0					
ANR	392469	Identifier	instr_idx		392312	1					
ANR	392470	Identifier	numOperands		392312	1					
ANR	392471	PrimaryExpression	0		392312	1					
ANR	392472	EqualityExpression	tokens_cnt == 1		392312	1		==			
ANR	392473	Identifier	tokens_cnt		392312	0					
ANR	392474	PrimaryExpression	1		392312	1					
ANR	392475	CompoundStatement		26:70:799:799	392312	1					
ANR	392476	ExpressionStatement	coded = instructionSet [ instr_idx ] . opcodeMask	361:4:10290:10334	392312	0	True				
ANR	392477	AssignmentExpression	coded = instructionSet [ instr_idx ] . opcodeMask		392312	0		=			
ANR	392478	Identifier	coded		392312	0					
ANR	392479	MemberAccess	instructionSet [ instr_idx ] . opcodeMask		392312	1					
ANR	392480	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392481	Identifier	instructionSet		392312	0					
ANR	392482	Identifier	instr_idx		392312	1					
ANR	392483	Identifier	opcodeMask		392312	1					
ANR	392484	ExpressionStatement	len = 2	362:4:10340:10347	392312	1	True				
ANR	392485	AssignmentExpression	len = 2		392312	0		=			
ANR	392486	Identifier	len		392312	0					
ANR	392487	PrimaryExpression	2		392312	1					
ANR	392488	ElseStatement	else		392312	0					
ANR	392489	IfStatement	if ( instructionSet [ instr_idx ] . numOperands == 1 && tokens_cnt == 2 )		392312	0					
ANR	392490	Condition	instructionSet [ instr_idx ] . numOperands == 1 && tokens_cnt == 2	370:14:10749:10809	392312	0	True				
ANR	392491	AndExpression	instructionSet [ instr_idx ] . numOperands == 1 && tokens_cnt == 2		392312	0		&&			
ANR	392492	EqualityExpression	instructionSet [ instr_idx ] . numOperands == 1		392312	0		==			
ANR	392493	MemberAccess	instructionSet [ instr_idx ] . numOperands		392312	0					
ANR	392494	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392495	Identifier	instructionSet		392312	0					
ANR	392496	Identifier	instr_idx		392312	1					
ANR	392497	Identifier	numOperands		392312	1					
ANR	392498	PrimaryExpression	1		392312	1					
ANR	392499	EqualityExpression	tokens_cnt == 2		392312	1		==			
ANR	392500	Identifier	tokens_cnt		392312	0					
ANR	392501	PrimaryExpression	2		392312	1					
ANR	392502	CompoundStatement		36:77:1327:1327	392312	1					
ANR	392503	IfStatement	"if ( assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0 )"		392312	0					
ANR	392504	Condition	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0"	372:8:10823:10907	392312	0	True				
ANR	392505	RelationalExpression	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0"		392312	0		>=			
ANR	392506	CallExpression	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 )"		392312	0					
ANR	392507	Callee	assemble_operand		392312	0					
ANR	392508	Identifier	assemble_operand		392312	0					
ANR	392509	ArgumentList	a		392312	1					
ANR	392510	Argument	a		392312	0					
ANR	392511	Identifier	a		392312	0					
ANR	392512	Argument	tokens [ 1 ]		392312	1					
ANR	392513	ArrayIndexing	tokens [ 1 ]		392312	0					
ANR	392514	Identifier	tokens		392312	0					
ANR	392515	PrimaryExpression	1		392312	1					
ANR	392516	Argument	instructionSet [ instr_idx ] . operandTypes [ 0 ]		392312	2					
ANR	392517	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 0 ]		392312	0					
ANR	392518	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392519	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392520	Identifier	instructionSet		392312	0					
ANR	392521	Identifier	instr_idx		392312	1					
ANR	392522	Identifier	operandTypes		392312	1					
ANR	392523	PrimaryExpression	0		392312	1					
ANR	392524	Argument	& op1		392312	3					
ANR	392525	UnaryOperationExpression	& op1		392312	0					
ANR	392526	UnaryOperator	&		392312	0					
ANR	392527	Identifier	op1		392312	1					
ANR	392528	PrimaryExpression	0		392312	1					
ANR	392529	CompoundStatement		38:95:1425:1425	392312	1					
ANR	392530	IfStatement	if ( instructionSet [ instr_idx ] . operandTypes [ 0 ] == OPERAND_LONG_ABSOLUTE_ADDRESS )		392312	0					
ANR	392531	Condition	instructionSet [ instr_idx ] . operandTypes [ 0 ] == OPERAND_LONG_ABSOLUTE_ADDRESS	374:9:10960:11033	392312	0	True				
ANR	392532	EqualityExpression	instructionSet [ instr_idx ] . operandTypes [ 0 ] == OPERAND_LONG_ABSOLUTE_ADDRESS		392312	0		==			
ANR	392533	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 0 ]		392312	0					
ANR	392534	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392535	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392536	Identifier	instructionSet		392312	0					
ANR	392537	Identifier	instr_idx		392312	1					
ANR	392538	Identifier	operandTypes		392312	1					
ANR	392539	PrimaryExpression	0		392312	1					
ANR	392540	Identifier	OPERAND_LONG_ABSOLUTE_ADDRESS		392312	1					
ANR	392541	CompoundStatement		40:85:1551:1551	392312	1					
ANR	392542	ExpressionStatement	op1 = op1 / 2	375:6:11044:11055	392312	0	True				
ANR	392543	AssignmentExpression	op1 = op1 / 2		392312	0		=			
ANR	392544	Identifier	op1		392312	0					
ANR	392545	MultiplicativeExpression	op1 / 2		392312	1		/			
ANR	392546	Identifier	op1		392312	0					
ANR	392547	PrimaryExpression	2		392312	1					
ANR	392548	ExpressionStatement	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( ( op1 >> 16 ) , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"	376:6:11063:11186	392312	1	True				
ANR	392549	AssignmentExpression	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( ( op1 >> 16 ) , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	0		=			
ANR	392550	Identifier	coded		392312	0					
ANR	392551	InclusiveOrExpression	"instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( ( op1 >> 16 ) , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	1		|			
ANR	392552	MemberAccess	instructionSet [ instr_idx ] . opcodeMask		392312	0					
ANR	392553	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392554	Identifier	instructionSet		392312	0					
ANR	392555	Identifier	instr_idx		392312	1					
ANR	392556	Identifier	opcodeMask		392312	1					
ANR	392557	CallExpression	"packDataByMask ( ( op1 >> 16 ) , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	1					
ANR	392558	Callee	packDataByMask		392312	0					
ANR	392559	Identifier	packDataByMask		392312	0					
ANR	392560	ArgumentList	op1 >> 16		392312	1					
ANR	392561	Argument	op1 >> 16		392312	0					
ANR	392562	ShiftExpression	op1 >> 16		392312	0		>>			
ANR	392563	Identifier	op1		392312	0					
ANR	392564	PrimaryExpression	16		392312	1					
ANR	392565	Argument	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	1					
ANR	392566	ArrayIndexing	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	0					
ANR	392567	MemberAccess	instructionSet [ instr_idx ] . operandMasks		392312	0					
ANR	392568	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392569	Identifier	instructionSet		392312	0					
ANR	392570	Identifier	instr_idx		392312	1					
ANR	392571	Identifier	operandMasks		392312	1					
ANR	392572	PrimaryExpression	0		392312	1					
ANR	392573	ExpressionStatement	coded |= ( ( uint16_t ) op1 ) << 16	379:6:11239:11269	392312	2	True				
ANR	392574	AssignmentExpression	coded |= ( ( uint16_t ) op1 ) << 16		392312	0		|=			
ANR	392575	Identifier	coded		392312	0					
ANR	392576	ShiftExpression	( ( uint16_t ) op1 ) << 16		392312	1		<<			
ANR	392577	CastExpression	( uint16_t ) op1		392312	0					
ANR	392578	CastTarget	uint16_t		392312	0					
ANR	392579	Identifier	op1		392312	1					
ANR	392580	PrimaryExpression	16		392312	1					
ANR	392581	ExpressionStatement	len = 4	380:6:11277:11284	392312	3	True				
ANR	392582	AssignmentExpression	len = 4		392312	0		=			
ANR	392583	Identifier	len		392312	0					
ANR	392584	PrimaryExpression	4		392312	1					
ANR	392585	ElseStatement	else		392312	0					
ANR	392586	CompoundStatement		47:12:1813:1813	392312	0					
ANR	392587	IfStatement	if ( instructionSet [ instr_idx ] . operandTypes [ 1 ] == OPERAND_REGISTER_GHOST )		392312	0					
ANR	392588	Condition	instructionSet [ instr_idx ] . operandTypes [ 1 ] == OPERAND_REGISTER_GHOST	384:10:11410:11476	392312	0	True				
ANR	392589	EqualityExpression	instructionSet [ instr_idx ] . operandTypes [ 1 ] == OPERAND_REGISTER_GHOST		392312	0		==			
ANR	392590	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 1 ]		392312	0					
ANR	392591	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392592	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392593	Identifier	instructionSet		392312	0					
ANR	392594	Identifier	instr_idx		392312	1					
ANR	392595	Identifier	operandTypes		392312	1					
ANR	392596	PrimaryExpression	1		392312	1					
ANR	392597	Identifier	OPERAND_REGISTER_GHOST		392312	1					
ANR	392598	CompoundStatement		50:79:1994:1994	392312	1					
ANR	392599	ExpressionStatement	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"	385:7:11488:11676	392312	0	True				
ANR	392600	AssignmentExpression	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	0		=			
ANR	392601	Identifier	coded		392312	0					
ANR	392602	InclusiveOrExpression	"instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	1		|			
ANR	392603	MemberAccess	instructionSet [ instr_idx ] . opcodeMask		392312	0					
ANR	392604	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392605	Identifier	instructionSet		392312	0					
ANR	392606	Identifier	instr_idx		392312	1					
ANR	392607	Identifier	opcodeMask		392312	1					
ANR	392608	InclusiveOrExpression	"packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	1		|			
ANR	392609	CallExpression	"packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	0					
ANR	392610	Callee	packDataByMask		392312	0					
ANR	392611	Identifier	packDataByMask		392312	0					
ANR	392612	ArgumentList	op1		392312	1					
ANR	392613	Argument	op1		392312	0					
ANR	392614	Identifier	op1		392312	0					
ANR	392615	Argument	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	1					
ANR	392616	ArrayIndexing	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	0					
ANR	392617	MemberAccess	instructionSet [ instr_idx ] . operandMasks		392312	0					
ANR	392618	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392619	Identifier	instructionSet		392312	0					
ANR	392620	Identifier	instr_idx		392312	1					
ANR	392621	Identifier	operandMasks		392312	1					
ANR	392622	PrimaryExpression	0		392312	1					
ANR	392623	CallExpression	"packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	1					
ANR	392624	Callee	packDataByMask		392312	0					
ANR	392625	Identifier	packDataByMask		392312	0					
ANR	392626	ArgumentList	op1		392312	1					
ANR	392627	Argument	op1		392312	0					
ANR	392628	Identifier	op1		392312	0					
ANR	392629	Argument	instructionSet [ instr_idx ] . operandMasks [ 1 ]		392312	1					
ANR	392630	ArrayIndexing	instructionSet [ instr_idx ] . operandMasks [ 1 ]		392312	0					
ANR	392631	MemberAccess	instructionSet [ instr_idx ] . operandMasks		392312	0					
ANR	392632	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392633	Identifier	instructionSet		392312	0					
ANR	392634	Identifier	instr_idx		392312	1					
ANR	392635	Identifier	operandMasks		392312	1					
ANR	392636	PrimaryExpression	1		392312	1					
ANR	392637	ElseStatement	else		392312	0					
ANR	392638	CompoundStatement		54:13:2206:2206	392312	0					
ANR	392639	ExpressionStatement	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"	389:7:11700:11816	392312	0	True				
ANR	392640	AssignmentExpression	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	0		=			
ANR	392641	Identifier	coded		392312	0					
ANR	392642	InclusiveOrExpression	"instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	1		|			
ANR	392643	MemberAccess	instructionSet [ instr_idx ] . opcodeMask		392312	0					
ANR	392644	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392645	Identifier	instructionSet		392312	0					
ANR	392646	Identifier	instr_idx		392312	1					
ANR	392647	Identifier	opcodeMask		392312	1					
ANR	392648	CallExpression	"packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	1					
ANR	392649	Callee	packDataByMask		392312	0					
ANR	392650	Identifier	packDataByMask		392312	0					
ANR	392651	ArgumentList	op1		392312	1					
ANR	392652	Argument	op1		392312	0					
ANR	392653	Identifier	op1		392312	0					
ANR	392654	Argument	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	1					
ANR	392655	ArrayIndexing	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	0					
ANR	392656	MemberAccess	instructionSet [ instr_idx ] . operandMasks		392312	0					
ANR	392657	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392658	Identifier	instructionSet		392312	0					
ANR	392659	Identifier	instr_idx		392312	1					
ANR	392660	Identifier	operandMasks		392312	1					
ANR	392661	PrimaryExpression	0		392312	1					
ANR	392662	ExpressionStatement	len = 2	393:6:11833:11840	392312	1	True				
ANR	392663	AssignmentExpression	len = 2		392312	0		=			
ANR	392664	Identifier	len		392312	0					
ANR	392665	PrimaryExpression	2		392312	1					
ANR	392666	ElseStatement	else		392312	0					
ANR	392667	IfStatement	if ( instructionSet [ instr_idx ] . numOperands == 2 && tokens_cnt == 3 )		392312	0					
ANR	392668	Condition	instructionSet [ instr_idx ] . numOperands == 2 && tokens_cnt == 3	397:14:11870:11930	392312	0	True				
ANR	392669	AndExpression	instructionSet [ instr_idx ] . numOperands == 2 && tokens_cnt == 3		392312	0		&&			
ANR	392670	EqualityExpression	instructionSet [ instr_idx ] . numOperands == 2		392312	0		==			
ANR	392671	MemberAccess	instructionSet [ instr_idx ] . numOperands		392312	0					
ANR	392672	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392673	Identifier	instructionSet		392312	0					
ANR	392674	Identifier	instr_idx		392312	1					
ANR	392675	Identifier	numOperands		392312	1					
ANR	392676	PrimaryExpression	2		392312	1					
ANR	392677	EqualityExpression	tokens_cnt == 3		392312	1		==			
ANR	392678	Identifier	tokens_cnt		392312	0					
ANR	392679	PrimaryExpression	3		392312	1					
ANR	392680	CompoundStatement		63:77:2448:2448	392312	1					
ANR	392681	IfStatement	"if ( assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0 && assemble_operand ( a , tokens [ 2 ] , instructionSet [ instr_idx ] . operandTypes [ 1 ] , & op2 ) >= 0 )"		392312	0					
ANR	392682	Condition	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0 && assemble_operand ( a , tokens [ 2 ] , instructionSet [ instr_idx ] . operandTypes [ 1 ] , & op2 ) >= 0"	398:8:11943:12121	392312	0	True				
ANR	392683	AndExpression	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0 && assemble_operand ( a , tokens [ 2 ] , instructionSet [ instr_idx ] . operandTypes [ 1 ] , & op2 ) >= 0"		392312	0		&&			
ANR	392684	RelationalExpression	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 ) >= 0"		392312	0		>=			
ANR	392685	CallExpression	"assemble_operand ( a , tokens [ 1 ] , instructionSet [ instr_idx ] . operandTypes [ 0 ] , & op1 )"		392312	0					
ANR	392686	Callee	assemble_operand		392312	0					
ANR	392687	Identifier	assemble_operand		392312	0					
ANR	392688	ArgumentList	a		392312	1					
ANR	392689	Argument	a		392312	0					
ANR	392690	Identifier	a		392312	0					
ANR	392691	Argument	tokens [ 1 ]		392312	1					
ANR	392692	ArrayIndexing	tokens [ 1 ]		392312	0					
ANR	392693	Identifier	tokens		392312	0					
ANR	392694	PrimaryExpression	1		392312	1					
ANR	392695	Argument	instructionSet [ instr_idx ] . operandTypes [ 0 ]		392312	2					
ANR	392696	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 0 ]		392312	0					
ANR	392697	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392698	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392699	Identifier	instructionSet		392312	0					
ANR	392700	Identifier	instr_idx		392312	1					
ANR	392701	Identifier	operandTypes		392312	1					
ANR	392702	PrimaryExpression	0		392312	1					
ANR	392703	Argument	& op1		392312	3					
ANR	392704	UnaryOperationExpression	& op1		392312	0					
ANR	392705	UnaryOperator	&		392312	0					
ANR	392706	Identifier	op1		392312	1					
ANR	392707	PrimaryExpression	0		392312	1					
ANR	392708	RelationalExpression	"assemble_operand ( a , tokens [ 2 ] , instructionSet [ instr_idx ] . operandTypes [ 1 ] , & op2 ) >= 0"		392312	1		>=			
ANR	392709	CallExpression	"assemble_operand ( a , tokens [ 2 ] , instructionSet [ instr_idx ] . operandTypes [ 1 ] , & op2 )"		392312	0					
ANR	392710	Callee	assemble_operand		392312	0					
ANR	392711	Identifier	assemble_operand		392312	0					
ANR	392712	ArgumentList	a		392312	1					
ANR	392713	Argument	a		392312	0					
ANR	392714	Identifier	a		392312	0					
ANR	392715	Argument	tokens [ 2 ]		392312	1					
ANR	392716	ArrayIndexing	tokens [ 2 ]		392312	0					
ANR	392717	Identifier	tokens		392312	0					
ANR	392718	PrimaryExpression	2		392312	1					
ANR	392719	Argument	instructionSet [ instr_idx ] . operandTypes [ 1 ]		392312	2					
ANR	392720	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 1 ]		392312	0					
ANR	392721	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392722	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392723	Identifier	instructionSet		392312	0					
ANR	392724	Identifier	instr_idx		392312	1					
ANR	392725	Identifier	operandTypes		392312	1					
ANR	392726	PrimaryExpression	1		392312	1					
ANR	392727	Argument	& op2		392312	3					
ANR	392728	UnaryOperationExpression	& op2		392312	0					
ANR	392729	UnaryOperator	&		392312	0					
ANR	392730	Identifier	op2		392312	1					
ANR	392731	PrimaryExpression	0		392312	1					
ANR	392732	CompoundStatement		65:93:2639:2639	392312	1					
ANR	392733	ExpressionStatement	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op2 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"	401:5:12132:12318	392312	0	True				
ANR	392734	AssignmentExpression	"coded = instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op2 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	0		=			
ANR	392735	Identifier	coded		392312	0					
ANR	392736	InclusiveOrExpression	"instructionSet [ instr_idx ] . opcodeMask | packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op2 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	1		|			
ANR	392737	MemberAccess	instructionSet [ instr_idx ] . opcodeMask		392312	0					
ANR	392738	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392739	Identifier	instructionSet		392312	0					
ANR	392740	Identifier	instr_idx		392312	1					
ANR	392741	Identifier	opcodeMask		392312	1					
ANR	392742	InclusiveOrExpression	"packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] ) | packDataByMask ( op2 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	1		|			
ANR	392743	CallExpression	"packDataByMask ( op1 , instructionSet [ instr_idx ] . operandMasks [ 0 ] )"		392312	0					
ANR	392744	Callee	packDataByMask		392312	0					
ANR	392745	Identifier	packDataByMask		392312	0					
ANR	392746	ArgumentList	op1		392312	1					
ANR	392747	Argument	op1		392312	0					
ANR	392748	Identifier	op1		392312	0					
ANR	392749	Argument	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	1					
ANR	392750	ArrayIndexing	instructionSet [ instr_idx ] . operandMasks [ 0 ]		392312	0					
ANR	392751	MemberAccess	instructionSet [ instr_idx ] . operandMasks		392312	0					
ANR	392752	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392753	Identifier	instructionSet		392312	0					
ANR	392754	Identifier	instr_idx		392312	1					
ANR	392755	Identifier	operandMasks		392312	1					
ANR	392756	PrimaryExpression	0		392312	1					
ANR	392757	CallExpression	"packDataByMask ( op2 , instructionSet [ instr_idx ] . operandMasks [ 1 ] )"		392312	1					
ANR	392758	Callee	packDataByMask		392312	0					
ANR	392759	Identifier	packDataByMask		392312	0					
ANR	392760	ArgumentList	op2		392312	1					
ANR	392761	Argument	op2		392312	0					
ANR	392762	Identifier	op2		392312	0					
ANR	392763	Argument	instructionSet [ instr_idx ] . operandMasks [ 1 ]		392312	1					
ANR	392764	ArrayIndexing	instructionSet [ instr_idx ] . operandMasks [ 1 ]		392312	0					
ANR	392765	MemberAccess	instructionSet [ instr_idx ] . operandMasks		392312	0					
ANR	392766	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392767	Identifier	instructionSet		392312	0					
ANR	392768	Identifier	instr_idx		392312	1					
ANR	392769	Identifier	operandMasks		392312	1					
ANR	392770	PrimaryExpression	1		392312	1					
ANR	392771	ExpressionStatement	len = 2	405:5:12326:12333	392312	1	True				
ANR	392772	AssignmentExpression	len = 2		392312	0		=			
ANR	392773	Identifier	len		392312	0					
ANR	392774	PrimaryExpression	2		392312	1					
ANR	392775	IfStatement	if ( instructionSet [ instr_idx ] . operandTypes [ 0 ] == OPERAND_LONG_ABSOLUTE_ADDRESS )		392312	2					
ANR	392776	Condition	instructionSet [ instr_idx ] . operandTypes [ 0 ] == OPERAND_LONG_ABSOLUTE_ADDRESS	408:9:12383:12456	392312	0	True				
ANR	392777	EqualityExpression	instructionSet [ instr_idx ] . operandTypes [ 0 ] == OPERAND_LONG_ABSOLUTE_ADDRESS		392312	0		==			
ANR	392778	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 0 ]		392312	0					
ANR	392779	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392780	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392781	Identifier	instructionSet		392312	0					
ANR	392782	Identifier	instr_idx		392312	1					
ANR	392783	Identifier	operandTypes		392312	1					
ANR	392784	PrimaryExpression	0		392312	1					
ANR	392785	Identifier	OPERAND_LONG_ABSOLUTE_ADDRESS		392312	1					
ANR	392786	CompoundStatement		74:85:2974:2974	392312	1					
ANR	392787	ExpressionStatement	coded |= ( ( uint16_t ) op1 ) << 16	409:6:12467:12497	392312	0	True				
ANR	392788	AssignmentExpression	coded |= ( ( uint16_t ) op1 ) << 16		392312	0		|=			
ANR	392789	Identifier	coded		392312	0					
ANR	392790	ShiftExpression	( ( uint16_t ) op1 ) << 16		392312	1		<<			
ANR	392791	CastExpression	( uint16_t ) op1		392312	0					
ANR	392792	CastTarget	uint16_t		392312	0					
ANR	392793	Identifier	op1		392312	1					
ANR	392794	PrimaryExpression	16		392312	1					
ANR	392795	ExpressionStatement	len = 4	410:6:12505:12512	392312	1	True				
ANR	392796	AssignmentExpression	len = 4		392312	0		=			
ANR	392797	Identifier	len		392312	0					
ANR	392798	PrimaryExpression	4		392312	1					
ANR	392799	ElseStatement	else		392312	0					
ANR	392800	IfStatement	if ( instructionSet [ instr_idx ] . operandTypes [ 1 ] == OPERAND_LONG_ABSOLUTE_ADDRESS )		392312	0					
ANR	392801	Condition	instructionSet [ instr_idx ] . operandTypes [ 1 ] == OPERAND_LONG_ABSOLUTE_ADDRESS	411:16:12530:12603	392312	0	True				
ANR	392802	EqualityExpression	instructionSet [ instr_idx ] . operandTypes [ 1 ] == OPERAND_LONG_ABSOLUTE_ADDRESS		392312	0		==			
ANR	392803	ArrayIndexing	instructionSet [ instr_idx ] . operandTypes [ 1 ]		392312	0					
ANR	392804	MemberAccess	instructionSet [ instr_idx ] . operandTypes		392312	0					
ANR	392805	ArrayIndexing	instructionSet [ instr_idx ]		392312	0					
ANR	392806	Identifier	instructionSet		392312	0					
ANR	392807	Identifier	instr_idx		392312	1					
ANR	392808	Identifier	operandTypes		392312	1					
ANR	392809	PrimaryExpression	1		392312	1					
ANR	392810	Identifier	OPERAND_LONG_ABSOLUTE_ADDRESS		392312	1					
ANR	392811	CompoundStatement		77:92:3121:3121	392312	1					
ANR	392812	ExpressionStatement	coded |= ( ( uint16_t ) op2 ) << 16	412:6:12614:12644	392312	0	True				
ANR	392813	AssignmentExpression	coded |= ( ( uint16_t ) op2 ) << 16		392312	0		|=			
ANR	392814	Identifier	coded		392312	0					
ANR	392815	ShiftExpression	( ( uint16_t ) op2 ) << 16		392312	1		<<			
ANR	392816	CastExpression	( uint16_t ) op2		392312	0					
ANR	392817	CastTarget	uint16_t		392312	0					
ANR	392818	Identifier	op2		392312	1					
ANR	392819	PrimaryExpression	16		392312	1					
ANR	392820	ExpressionStatement	len = 4	413:6:12652:12659	392312	1	True				
ANR	392821	AssignmentExpression	len = 4		392312	0		=			
ANR	392822	Identifier	len		392312	0					
ANR	392823	PrimaryExpression	4		392312	1					
ANR	392824	IfStatement	if ( len > 0 )		392312	11					
ANR	392825	Condition	len > 0	421:5:12728:12734	392312	0	True				
ANR	392826	RelationalExpression	len > 0		392312	0		>			
ANR	392827	Identifier	len		392312	0					
ANR	392828	PrimaryExpression	0		392312	1					
ANR	392829	CompoundStatement		87:14:3252:3252	392312	1					
ANR	392830	ExpressionStatement	"r_strbuf_setbin ( & ao -> buf , ( const ut8 * ) & coded , len )"	422:2:12741:12792	392312	0	True				
ANR	392831	CallExpression	"r_strbuf_setbin ( & ao -> buf , ( const ut8 * ) & coded , len )"		392312	0					
ANR	392832	Callee	r_strbuf_setbin		392312	0					
ANR	392833	Identifier	r_strbuf_setbin		392312	0					
ANR	392834	ArgumentList	& ao -> buf		392312	1					
ANR	392835	Argument	& ao -> buf		392312	0					
ANR	392836	UnaryOperationExpression	& ao -> buf		392312	0					
ANR	392837	UnaryOperator	&		392312	0					
ANR	392838	PtrMemberAccess	ao -> buf		392312	1					
ANR	392839	Identifier	ao		392312	0					
ANR	392840	Identifier	buf		392312	1					
ANR	392841	Argument	( const ut8 * ) & coded		392312	1					
ANR	392842	CastExpression	( const ut8 * ) & coded		392312	0					
ANR	392843	CastTarget	const ut8 *		392312	0					
ANR	392844	UnaryOperationExpression	& coded		392312	1					
ANR	392845	UnaryOperator	&		392312	0					
ANR	392846	Identifier	coded		392312	1					
ANR	392847	Argument	len		392312	2					
ANR	392848	Identifier	len		392312	0					
ANR	392849	ReturnStatement	return len ;	424:1:12798:12808	392312	12	True				
ANR	392850	Identifier	len		392312	0					
ANR	392851	ReturnType	static int		392312	1					
ANR	392852	Identifier	assemble		392312	2					
ANR	392853	ParameterList	"RAsm * a , RAsmOp * ao , const char * str"		392312	3					
ANR	392854	Parameter	RAsm * a	335:20:9446:9452	392312	0	True				
ANR	392855	ParameterType	RAsm *		392312	0					
ANR	392856	Identifier	a		392312	1					
ANR	392857	Parameter	RAsmOp * ao	335:29:9455:9464	392312	1	True				
ANR	392858	ParameterType	RAsmOp *		392312	0					
ANR	392859	Identifier	ao		392312	1					
ANR	392860	Parameter	const char * str	335:41:9467:9481	392312	2	True				
ANR	392861	ParameterType	const char *		392312	0					
ANR	392862	Identifier	str		392312	1					
ANR	392863	CFGEntryNode	ENTRY		392312		True				
ANR	392864	CFGExitNode	EXIT		392312		True				
ANR	392865	Symbol	OPERAND_LONG_ABSOLUTE_ADDRESS		392312						
ANR	392866	Symbol	& ao -> buf		392312						
ANR	392867	Symbol	instructionSet [ instr_idx ] . opcodeMask		392312						
ANR	392868	Symbol	OPERAND_REGISTER_GHOST		392312						
ANR	392869	Symbol	assemble_operand		392312						
ANR	392870	Symbol	* instructionSet		392312						
ANR	392871	Symbol	* instructionSet [ instr_idx ] . operandTypes		392312						
ANR	392872	Symbol	instr_idx		392312						
ANR	392873	Symbol	& op2		392312						
ANR	392874	Symbol	& op1		392312						
ANR	392875	Symbol	len		392312						
ANR	392876	Symbol	* instructionSet [ instr_idx ] . operandMasks		392312						
ANR	392877	Symbol	instructionSet [ instr_idx ] . numOperands		392312						
ANR	392878	Symbol	tokens_cnt		392312						
ANR	392879	Symbol	instructionSet [ instr_idx ] . operandMasks		392312						
ANR	392880	Symbol	tokens		392312						
ANR	392881	Symbol	search_instruction		392312						
ANR	392882	Symbol	MAX_TOKEN_SIZE		392312						
ANR	392883	Symbol	a		392312						
ANR	392884	Symbol	* tokens_cnt		392312						
ANR	392885	Symbol	NULL		392312						
ANR	392886	Symbol	instructionSet		392312						
ANR	392887	Symbol	* tokens		392312						
ANR	392888	Symbol	strtok		392312						
ANR	392889	Symbol	* instr_idx		392312						
ANR	392890	Symbol	ao		392312						
ANR	392891	Symbol	token		392312						
ANR	392892	Symbol	str		392312						
ANR	392893	Symbol	coded		392312						
ANR	392894	Symbol	op2		392312						
ANR	392895	Symbol	op1		392312						
ANR	392896	Symbol	* * instr_idx		392312						
ANR	392897	Symbol	& coded		392312						
ANR	392898	Symbol	* * instructionSet		392312						
ANR	392899	Symbol	TOKEN_DELIM		392312						
ANR	392900	Symbol	instructionSet [ instr_idx ] . operandTypes		392312						
ANR	392901	Symbol	packDataByMask		392312						
ANR	392902	DeclStmt									
ANR	392903	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_avr
ANR	392904	DeclStmt									
ANR	392905	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
