command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5601741	File	data/converged/CVE-2019-16718~_radare2/project.c								
ANR	5601742	Function	is_valid_project_name	10:0:181:635							
ANR	5601743	FunctionDef	is_valid_project_name (const char * name)		5601742	0					
ANR	5601744	CompoundStatement		10:52:233:635	5601742	0					
ANR	5601745	IdentifierDeclStatement	int i ;	11:1:236:241	5601742	0	True				
ANR	5601746	IdentifierDecl	i		5601742	0					
ANR	5601747	IdentifierDeclType	int		5601742	0					
ANR	5601748	Identifier	i		5601742	1					
ANR	5601749	IfStatement	"if ( r_str_endswith ( name , "".zip"" ) )"		5601742	1					
ANR	5601750	Condition	"r_str_endswith ( name , "".zip"" )"	12:5:248:276	5601742	0	True				
ANR	5601751	CallExpression	"r_str_endswith ( name , "".zip"" )"		5601742	0					
ANR	5601752	Callee	r_str_endswith		5601742	0					
ANR	5601753	Identifier	r_str_endswith		5601742	0					
ANR	5601754	ArgumentList	name		5601742	1					
ANR	5601755	Argument	name		5601742	0					
ANR	5601756	Identifier	name		5601742	0					
ANR	5601757	Argument	""".zip"""		5601742	1					
ANR	5601758	PrimaryExpression	""".zip"""		5601742	0					
ANR	5601759	CompoundStatement		3:36:45:45	5601742	1					
ANR	5601760	ReturnStatement	return false ;	13:2:283:295	5601742	0	True				
ANR	5601761	Identifier	false		5601742	0					
ANR	5601762	ForStatement	for ( i = 0 ; name [ i ] ; i ++ )		5601742	2					
ANR	5601763	ForInit	i = 0 ;	15:6:306:311	5601742	0	True				
ANR	5601764	AssignmentExpression	i = 0		5601742	0		=			
ANR	5601765	Identifier	i		5601742	0					
ANR	5601766	PrimaryExpression	0		5601742	1					
ANR	5601767	Condition	name [ i ]	15:13:313:319	5601742	1	True				
ANR	5601768	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601769	Identifier	name		5601742	0					
ANR	5601770	Identifier	i		5601742	1					
ANR	5601771	PostIncDecOperationExpression	i ++	15:22:322:324	5601742	2	True				
ANR	5601772	Identifier	i		5601742	0					
ANR	5601773	IncDec	++		5601742	1					
ANR	5601774	CompoundStatement		6:27:93:93	5601742	3					
ANR	5601775	SwitchStatement	switch ( name [ i ] )		5601742	0					
ANR	5601776	Condition	name [ i ]	16:10:339:345	5601742	0	True				
ANR	5601777	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601778	Identifier	name		5601742	0					
ANR	5601779	Identifier	i		5601742	1					
ANR	5601780	CompoundStatement		7:19:114:114	5601742	1					
ANR	5601781	Label	case '\\\\' :	17:2:352:361	5601742	0	True				
ANR	5601782	Label	case '.' :	18:2:376:384	5601742	1	True				
ANR	5601783	Label	case '_' :	19:2:388:396	5601742	2	True				
ANR	5601784	Label	case ':' :	20:2:400:408	5601742	3	True				
ANR	5601785	Label	case '-' :	21:2:412:420	5601742	4	True				
ANR	5601786	ContinueStatement	continue ;	22:3:425:433	5601742	5	True				
ANR	5601787	IfStatement	if ( name [ i ] >= 'a' && name [ i ] <= 'z' )		5601742	1					
ANR	5601788	Condition	name [ i ] >= 'a' && name [ i ] <= 'z'	24:6:445:476	5601742	0	True				
ANR	5601789	AndExpression	name [ i ] >= 'a' && name [ i ] <= 'z'		5601742	0		&&			
ANR	5601790	RelationalExpression	name [ i ] >= 'a'		5601742	0		>=			
ANR	5601791	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601792	Identifier	name		5601742	0					
ANR	5601793	Identifier	i		5601742	1					
ANR	5601794	PrimaryExpression	'a'		5601742	1					
ANR	5601795	RelationalExpression	name [ i ] <= 'z'		5601742	1		<=			
ANR	5601796	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601797	Identifier	name		5601742	0					
ANR	5601798	Identifier	i		5601742	1					
ANR	5601799	PrimaryExpression	'z'		5601742	1					
ANR	5601800	CompoundStatement		15:40:245:245	5601742	1					
ANR	5601801	ContinueStatement	continue ;	25:3:484:492	5601742	0	True				
ANR	5601802	IfStatement	if ( name [ i ] >= 'A' && name [ i ] <= 'Z' )		5601742	2					
ANR	5601803	Condition	name [ i ] >= 'A' && name [ i ] <= 'Z'	27:6:504:535	5601742	0	True				
ANR	5601804	AndExpression	name [ i ] >= 'A' && name [ i ] <= 'Z'		5601742	0		&&			
ANR	5601805	RelationalExpression	name [ i ] >= 'A'		5601742	0		>=			
ANR	5601806	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601807	Identifier	name		5601742	0					
ANR	5601808	Identifier	i		5601742	1					
ANR	5601809	PrimaryExpression	'A'		5601742	1					
ANR	5601810	RelationalExpression	name [ i ] <= 'Z'		5601742	1		<=			
ANR	5601811	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601812	Identifier	name		5601742	0					
ANR	5601813	Identifier	i		5601742	1					
ANR	5601814	PrimaryExpression	'Z'		5601742	1					
ANR	5601815	CompoundStatement		18:40:304:304	5601742	1					
ANR	5601816	ContinueStatement	continue ;	28:3:543:551	5601742	0	True				
ANR	5601817	IfStatement	if ( IS_DIGIT ( name [ i ] ) )		5601742	3					
ANR	5601818	Condition	IS_DIGIT ( name [ i ] )	30:6:563:580	5601742	0	True				
ANR	5601819	CallExpression	IS_DIGIT ( name [ i ] )		5601742	0					
ANR	5601820	Callee	IS_DIGIT		5601742	0					
ANR	5601821	Identifier	IS_DIGIT		5601742	0					
ANR	5601822	ArgumentList	name [ i ]		5601742	1					
ANR	5601823	Argument	name [ i ]		5601742	0					
ANR	5601824	ArrayIndexing	name [ i ]		5601742	0					
ANR	5601825	Identifier	name		5601742	0					
ANR	5601826	Identifier	i		5601742	1					
ANR	5601827	CompoundStatement		21:26:349:349	5601742	1					
ANR	5601828	ContinueStatement	continue ;	31:3:588:596	5601742	0	True				
ANR	5601829	ReturnStatement	return false ;	33:2:604:616	5601742	4	True				
ANR	5601830	Identifier	false		5601742	0					
ANR	5601831	ReturnStatement	return true ;	35:1:622:633	5601742	3	True				
ANR	5601832	Identifier	true		5601742	0					
ANR	5601833	ReturnType	static bool		5601742	1					
ANR	5601834	Identifier	is_valid_project_name		5601742	2					
ANR	5601835	ParameterList	const char * name		5601742	3					
ANR	5601836	Parameter	const char * name	10:34:215:230	5601742	0	True				
ANR	5601837	ParameterType	const char *		5601742	0					
ANR	5601838	Identifier	name		5601742	1					
ANR	5601839	CFGEntryNode	ENTRY		5601742		True				
ANR	5601840	CFGExitNode	EXIT		5601742		True				
ANR	5601841	Symbol	* name		5601742						
ANR	5601842	Symbol	* i		5601742						
ANR	5601843	Symbol	name		5601742						
ANR	5601844	Symbol	false		5601742						
ANR	5601845	Symbol	true		5601742						
ANR	5601846	Symbol	i		5601742						
ANR	5601847	Symbol	r_str_endswith		5601742						
ANR	5601848	Symbol	IS_DIGIT		5601742						
ANR	5601849	Function	projectScriptPath	38:0:638:1347							
ANR	5601850	FunctionDef	"projectScriptPath (RCore * core , const char * file)"		5601849	0					
ANR	5601851	CompoundStatement		38:62:700:1347	5601849	0					
ANR	5601852	IdentifierDeclStatement	"const char * magic = ""# r2 rdb project file"" ;"	39:1:703:746	5601849	0	True				
ANR	5601853	IdentifierDecl	"* magic = ""# r2 rdb project file"""		5601849	0					
ANR	5601854	IdentifierDeclType	const char *		5601849	0					
ANR	5601855	Identifier	magic		5601849	1					
ANR	5601856	AssignmentExpression	"* magic = ""# r2 rdb project file"""		5601849	2		=			
ANR	5601857	Identifier	magic		5601849	0					
ANR	5601858	PrimaryExpression	"""# r2 rdb project file"""		5601849	1					
ANR	5601859	IdentifierDeclStatement	"char * data , * prjfile ;"	40:1:749:769	5601849	1	True				
ANR	5601860	IdentifierDecl	* data		5601849	0					
ANR	5601861	IdentifierDeclType	char *		5601849	0					
ANR	5601862	Identifier	data		5601849	1					
ANR	5601863	IdentifierDecl	* prjfile		5601849	1					
ANR	5601864	IdentifierDeclType	char *		5601849	0					
ANR	5601865	Identifier	prjfile		5601849	1					
ANR	5601866	IfStatement	if ( r_file_is_abspath ( file ) )		5601849	2					
ANR	5601867	Condition	r_file_is_abspath ( file )	41:5:776:799	5601849	0	True				
ANR	5601868	CallExpression	r_file_is_abspath ( file )		5601849	0					
ANR	5601869	Callee	r_file_is_abspath		5601849	0					
ANR	5601870	Identifier	r_file_is_abspath		5601849	0					
ANR	5601871	ArgumentList	file		5601849	1					
ANR	5601872	Argument	file		5601849	0					
ANR	5601873	Identifier	file		5601849	0					
ANR	5601874	CompoundStatement		4:31:101:101	5601849	1					
ANR	5601875	ExpressionStatement	prjfile = strdup ( file )	42:2:806:829	5601849	0	True				
ANR	5601876	AssignmentExpression	prjfile = strdup ( file )		5601849	0		=			
ANR	5601877	Identifier	prjfile		5601849	0					
ANR	5601878	CallExpression	strdup ( file )		5601849	1					
ANR	5601879	Callee	strdup		5601849	0					
ANR	5601880	Identifier	strdup		5601849	0					
ANR	5601881	ArgumentList	file		5601849	1					
ANR	5601882	Argument	file		5601849	0					
ANR	5601883	Identifier	file		5601849	0					
ANR	5601884	ElseStatement	else		5601849	0					
ANR	5601885	CompoundStatement		6:8:138:138	5601849	0					
ANR	5601886	IfStatement	if ( ! is_valid_project_name ( file ) )		5601849	0					
ANR	5601887	Condition	! is_valid_project_name ( file )	44:6:847:875	5601849	0	True				
ANR	5601888	UnaryOperationExpression	! is_valid_project_name ( file )		5601849	0					
ANR	5601889	UnaryOperator	!		5601849	0					
ANR	5601890	CallExpression	is_valid_project_name ( file )		5601849	1					
ANR	5601891	Callee	is_valid_project_name		5601849	0					
ANR	5601892	Identifier	is_valid_project_name		5601849	0					
ANR	5601893	ArgumentList	file		5601849	1					
ANR	5601894	Argument	file		5601849	0					
ANR	5601895	Identifier	file		5601849	0					
ANR	5601896	CompoundStatement		7:37:177:177	5601849	1					
ANR	5601897	ReturnStatement	return NULL ;	45:3:883:894	5601849	0	True				
ANR	5601898	Identifier	NULL		5601849	0					
ANR	5601899	ExpressionStatement	"prjfile = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"	47:2:902:972	5601849	1	True				
ANR	5601900	AssignmentExpression	"prjfile = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5601849	0		=			
ANR	5601901	Identifier	prjfile		5601849	0					
ANR	5601902	CallExpression	"r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5601849	1					
ANR	5601903	Callee	r_file_abspath		5601849	0					
ANR	5601904	Identifier	r_file_abspath		5601849	0					
ANR	5601905	ArgumentList	"r_config_get ( core -> config , ""dir.projects"" )"		5601849	1					
ANR	5601906	Argument	"r_config_get ( core -> config , ""dir.projects"" )"		5601849	0					
ANR	5601907	CallExpression	"r_config_get ( core -> config , ""dir.projects"" )"		5601849	0					
ANR	5601908	Callee	r_config_get		5601849	0					
ANR	5601909	Identifier	r_config_get		5601849	0					
ANR	5601910	ArgumentList	core -> config		5601849	1					
ANR	5601911	Argument	core -> config		5601849	0					
ANR	5601912	PtrMemberAccess	core -> config		5601849	0					
ANR	5601913	Identifier	core		5601849	0					
ANR	5601914	Identifier	config		5601849	1					
ANR	5601915	Argument	"""dir.projects"""		5601849	1					
ANR	5601916	PrimaryExpression	"""dir.projects"""		5601849	0					
ANR	5601917	ExpressionStatement	"prjfile = r_str_append ( prjfile , R_SYS_DIR )"	48:2:976:1019	5601849	2	True				
ANR	5601918	AssignmentExpression	"prjfile = r_str_append ( prjfile , R_SYS_DIR )"		5601849	0		=			
ANR	5601919	Identifier	prjfile		5601849	0					
ANR	5601920	CallExpression	"r_str_append ( prjfile , R_SYS_DIR )"		5601849	1					
ANR	5601921	Callee	r_str_append		5601849	0					
ANR	5601922	Identifier	r_str_append		5601849	0					
ANR	5601923	ArgumentList	prjfile		5601849	1					
ANR	5601924	Argument	prjfile		5601849	0					
ANR	5601925	Identifier	prjfile		5601849	0					
ANR	5601926	Argument	R_SYS_DIR		5601849	1					
ANR	5601927	Identifier	R_SYS_DIR		5601849	0					
ANR	5601928	ExpressionStatement	"prjfile = r_str_append ( prjfile , file )"	49:2:1023:1061	5601849	3	True				
ANR	5601929	AssignmentExpression	"prjfile = r_str_append ( prjfile , file )"		5601849	0		=			
ANR	5601930	Identifier	prjfile		5601849	0					
ANR	5601931	CallExpression	"r_str_append ( prjfile , file )"		5601849	1					
ANR	5601932	Callee	r_str_append		5601849	0					
ANR	5601933	Identifier	r_str_append		5601849	0					
ANR	5601934	ArgumentList	prjfile		5601849	1					
ANR	5601935	Argument	prjfile		5601849	0					
ANR	5601936	Identifier	prjfile		5601849	0					
ANR	5601937	Argument	file		5601849	1					
ANR	5601938	Identifier	file		5601849	0					
ANR	5601939	IfStatement	if ( ! r_file_exists ( prjfile ) || r_file_is_directory ( prjfile ) )		5601849	4					
ANR	5601940	Condition	! r_file_exists ( prjfile ) || r_file_is_directory ( prjfile )	50:6:1069:1125	5601849	0	True				
ANR	5601941	OrExpression	! r_file_exists ( prjfile ) || r_file_is_directory ( prjfile )		5601849	0		||			
ANR	5601942	UnaryOperationExpression	! r_file_exists ( prjfile )		5601849	0					
ANR	5601943	UnaryOperator	!		5601849	0					
ANR	5601944	CallExpression	r_file_exists ( prjfile )		5601849	1					
ANR	5601945	Callee	r_file_exists		5601849	0					
ANR	5601946	Identifier	r_file_exists		5601849	0					
ANR	5601947	ArgumentList	prjfile		5601849	1					
ANR	5601948	Argument	prjfile		5601849	0					
ANR	5601949	Identifier	prjfile		5601849	0					
ANR	5601950	CallExpression	r_file_is_directory ( prjfile )		5601849	1					
ANR	5601951	Callee	r_file_is_directory		5601849	0					
ANR	5601952	Identifier	r_file_is_directory		5601849	0					
ANR	5601953	ArgumentList	prjfile		5601849	1					
ANR	5601954	Argument	prjfile		5601849	0					
ANR	5601955	Identifier	prjfile		5601849	0					
ANR	5601956	CompoundStatement		13:65:427:427	5601849	1					
ANR	5601957	Statement	prjfile	51:3:1133:1139	5601849	0	True				
ANR	5601958	Statement	=	51:11:1141:1141	5601849	1	True				
ANR	5601959	Statement	r_str_append	51:13:1143:1154	5601849	2	True				
ANR	5601960	Statement	(	51:26:1156:1156	5601849	3	True				
ANR	5601961	Statement	prjfile	51:27:1157:1163	5601849	4	True				
ANR	5601962	Statement	","	51:34:1164:1164	5601849	5	True				
ANR	5601963	Statement	R_SYS_DIR	51:36:1166:1174	5601849	6	True				
ANR	5601964	Statement	"""rc"""	51:46:1176:1179	5601849	7	True				
ANR	5601965	Statement	)	51:50:1180:1180	5601849	8	True				
ANR	5601966	ExpressionStatement		51:51:1181:1181	5601849	9	True				
ANR	5601967	ExpressionStatement	"data = r_file_slurp ( prjfile , NULL )"	54:1:1191:1226	5601849	3	True				
ANR	5601968	AssignmentExpression	"data = r_file_slurp ( prjfile , NULL )"		5601849	0		=			
ANR	5601969	Identifier	data		5601849	0					
ANR	5601970	CallExpression	"r_file_slurp ( prjfile , NULL )"		5601849	1					
ANR	5601971	Callee	r_file_slurp		5601849	0					
ANR	5601972	Identifier	r_file_slurp		5601849	0					
ANR	5601973	ArgumentList	prjfile		5601849	1					
ANR	5601974	Argument	prjfile		5601849	0					
ANR	5601975	Identifier	prjfile		5601849	0					
ANR	5601976	Argument	NULL		5601849	1					
ANR	5601977	Identifier	NULL		5601849	0					
ANR	5601978	IfStatement	if ( data )		5601849	4					
ANR	5601979	Condition	data	55:5:1233:1236	5601849	0	True				
ANR	5601980	Identifier	data		5601849	0					
ANR	5601981	CompoundStatement		18:11:538:538	5601849	1					
ANR	5601982	IfStatement	"if ( strncmp ( data , magic , strlen ( magic ) ) )"		5601849	0					
ANR	5601983	Condition	"strncmp ( data , magic , strlen ( magic ) )"	56:6:1247:1283	5601849	0	True				
ANR	5601984	CallExpression	"strncmp ( data , magic , strlen ( magic ) )"		5601849	0					
ANR	5601985	Callee	strncmp		5601849	0					
ANR	5601986	Identifier	strncmp		5601849	0					
ANR	5601987	ArgumentList	data		5601849	1					
ANR	5601988	Argument	data		5601849	0					
ANR	5601989	Identifier	data		5601849	0					
ANR	5601990	Argument	magic		5601849	1					
ANR	5601991	Identifier	magic		5601849	0					
ANR	5601992	Argument	strlen ( magic )		5601849	2					
ANR	5601993	CallExpression	strlen ( magic )		5601849	0					
ANR	5601994	Callee	strlen		5601849	0					
ANR	5601995	Identifier	strlen		5601849	0					
ANR	5601996	ArgumentList	magic		5601849	1					
ANR	5601997	Argument	magic		5601849	0					
ANR	5601998	Identifier	magic		5601849	0					
ANR	5601999	CompoundStatement		19:45:585:585	5601849	1					
ANR	5602000	ExpressionStatement	R_FREE ( prjfile )	57:3:1291:1307	5601849	0	True				
ANR	5602001	CallExpression	R_FREE ( prjfile )		5601849	0					
ANR	5602002	Callee	R_FREE		5601849	0					
ANR	5602003	Identifier	R_FREE		5601849	0					
ANR	5602004	ArgumentList	prjfile		5601849	1					
ANR	5602005	Argument	prjfile		5601849	0					
ANR	5602006	Identifier	prjfile		5601849	0					
ANR	5602007	ExpressionStatement	free ( data )	60:1:1317:1328	5601849	5	True				
ANR	5602008	CallExpression	free ( data )		5601849	0					
ANR	5602009	Callee	free		5601849	0					
ANR	5602010	Identifier	free		5601849	0					
ANR	5602011	ArgumentList	data		5601849	1					
ANR	5602012	Argument	data		5601849	0					
ANR	5602013	Identifier	data		5601849	0					
ANR	5602014	ReturnStatement	return prjfile ;	61:1:1331:1345	5601849	6	True				
ANR	5602015	Identifier	prjfile		5601849	0					
ANR	5602016	ReturnType	static char *		5601849	1					
ANR	5602017	Identifier	projectScriptPath		5601849	2					
ANR	5602018	ParameterList	"RCore * core , const char * file"		5601849	3					
ANR	5602019	Parameter	RCore * core	38:31:669:679	5601849	0	True				
ANR	5602020	ParameterType	RCore *		5601849	0					
ANR	5602021	Identifier	core		5601849	1					
ANR	5602022	Parameter	const char * file	38:44:682:697	5601849	1	True				
ANR	5602023	ParameterType	const char *		5601849	0					
ANR	5602024	Identifier	file		5601849	1					
ANR	5602025	CFGEntryNode	ENTRY		5601849		True				
ANR	5602026	CFGExitNode	EXIT		5601849		True				
ANR	5602027	Symbol	magic		5601849						
ANR	5602028	Symbol	core -> config		5601849						
ANR	5602029	Symbol	r_str_append		5601849						
ANR	5602030	Symbol	r_file_is_directory		5601849						
ANR	5602031	Symbol	r_file_abspath		5601849						
ANR	5602032	Symbol	r_file_slurp		5601849						
ANR	5602033	Symbol	NULL		5601849						
ANR	5602034	Symbol	data		5601849						
ANR	5602035	Symbol	is_valid_project_name		5601849						
ANR	5602036	Symbol	r_config_get		5601849						
ANR	5602037	Symbol	* core		5601849						
ANR	5602038	Symbol	r_file_is_abspath		5601849						
ANR	5602039	Symbol	prjfile		5601849						
ANR	5602040	Symbol	core		5601849						
ANR	5602041	Symbol	strlen		5601849						
ANR	5602042	Symbol	strncmp		5601849						
ANR	5602043	Symbol	file		5601849						
ANR	5602044	Symbol	R_SYS_DIR		5601849						
ANR	5602045	Symbol	strdup		5601849						
ANR	5602046	Symbol	r_file_exists		5601849						
ANR	5602047	Function	projectInit	64:0:1350:1588							
ANR	5602048	FunctionDef	projectInit (RCore * core)		5602047	0					
ANR	5602049	CompoundStatement		64:36:1386:1588	5602047	0					
ANR	5602050	IdentifierDeclStatement	"char * prjdir = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) ) ;"	65:1:1389:1464	5602047	0	True				
ANR	5602051	IdentifierDecl	"* prjdir = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5602047	0					
ANR	5602052	IdentifierDeclType	char *		5602047	0					
ANR	5602053	Identifier	prjdir		5602047	1					
ANR	5602054	AssignmentExpression	"* prjdir = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5602047	2		=			
ANR	5602055	Identifier	prjdir		5602047	0					
ANR	5602056	CallExpression	"r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5602047	1					
ANR	5602057	Callee	r_file_abspath		5602047	0					
ANR	5602058	Identifier	r_file_abspath		5602047	0					
ANR	5602059	ArgumentList	"r_config_get ( core -> config , ""dir.projects"" )"		5602047	1					
ANR	5602060	Argument	"r_config_get ( core -> config , ""dir.projects"" )"		5602047	0					
ANR	5602061	CallExpression	"r_config_get ( core -> config , ""dir.projects"" )"		5602047	0					
ANR	5602062	Callee	r_config_get		5602047	0					
ANR	5602063	Identifier	r_config_get		5602047	0					
ANR	5602064	ArgumentList	core -> config		5602047	1					
ANR	5602065	Argument	core -> config		5602047	0					
ANR	5602066	PtrMemberAccess	core -> config		5602047	0					
ANR	5602067	Identifier	core		5602047	0					
ANR	5602068	Identifier	config		5602047	1					
ANR	5602069	Argument	"""dir.projects"""		5602047	1					
ANR	5602070	PrimaryExpression	"""dir.projects"""		5602047	0					
ANR	5602071	IdentifierDeclStatement	int ret = r_sys_mkdirp ( prjdir ) ;	66:1:1467:1498	5602047	1	True				
ANR	5602072	IdentifierDecl	ret = r_sys_mkdirp ( prjdir )		5602047	0					
ANR	5602073	IdentifierDeclType	int		5602047	0					
ANR	5602074	Identifier	ret		5602047	1					
ANR	5602075	AssignmentExpression	ret = r_sys_mkdirp ( prjdir )		5602047	2		=			
ANR	5602076	Identifier	ret		5602047	0					
ANR	5602077	CallExpression	r_sys_mkdirp ( prjdir )		5602047	1					
ANR	5602078	Callee	r_sys_mkdirp		5602047	0					
ANR	5602079	Identifier	r_sys_mkdirp		5602047	0					
ANR	5602080	ArgumentList	prjdir		5602047	1					
ANR	5602081	Argument	prjdir		5602047	0					
ANR	5602082	Identifier	prjdir		5602047	0					
ANR	5602083	IfStatement	if ( ! ret )		5602047	2					
ANR	5602084	Condition	! ret	67:5:1505:1508	5602047	0	True				
ANR	5602085	UnaryOperationExpression	! ret		5602047	0					
ANR	5602086	UnaryOperator	!		5602047	0					
ANR	5602087	Identifier	ret		5602047	1					
ANR	5602088	CompoundStatement		4:11:124:124	5602047	1					
ANR	5602089	ExpressionStatement	"eprintf ( ""Cannot mkdir dir.projects\\n"" )"	68:2:1515:1554	5602047	0	True				
ANR	5602090	CallExpression	"eprintf ( ""Cannot mkdir dir.projects\\n"" )"		5602047	0					
ANR	5602091	Callee	eprintf		5602047	0					
ANR	5602092	Identifier	eprintf		5602047	0					
ANR	5602093	ArgumentList	"""Cannot mkdir dir.projects\\n"""		5602047	1					
ANR	5602094	Argument	"""Cannot mkdir dir.projects\\n"""		5602047	0					
ANR	5602095	PrimaryExpression	"""Cannot mkdir dir.projects\\n"""		5602047	0					
ANR	5602096	ExpressionStatement	free ( prjdir )	70:1:1560:1573	5602047	3	True				
ANR	5602097	CallExpression	free ( prjdir )		5602047	0					
ANR	5602098	Callee	free		5602047	0					
ANR	5602099	Identifier	free		5602047	0					
ANR	5602100	ArgumentList	prjdir		5602047	1					
ANR	5602101	Argument	prjdir		5602047	0					
ANR	5602102	Identifier	prjdir		5602047	0					
ANR	5602103	ReturnStatement	return ret ;	71:1:1576:1586	5602047	4	True				
ANR	5602104	Identifier	ret		5602047	0					
ANR	5602105	ReturnType	static int		5602047	1					
ANR	5602106	Identifier	projectInit		5602047	2					
ANR	5602107	ParameterList	RCore * core		5602047	3					
ANR	5602108	Parameter	RCore * core	64:23:1373:1383	5602047	0	True				
ANR	5602109	ParameterType	RCore *		5602047	0					
ANR	5602110	Identifier	core		5602047	1					
ANR	5602111	CFGEntryNode	ENTRY		5602047		True				
ANR	5602112	CFGExitNode	EXIT		5602047		True				
ANR	5602113	Symbol	core -> config		5602047						
ANR	5602114	Symbol	ret		5602047						
ANR	5602115	Symbol	core		5602047						
ANR	5602116	Symbol	r_file_abspath		5602047						
ANR	5602117	Symbol	prjdir		5602047						
ANR	5602118	Symbol	r_config_get		5602047						
ANR	5602119	Symbol	* core		5602047						
ANR	5602120	Symbol	r_sys_mkdirp		5602047						
ANR	5602121	Function	r_core_is_project	74:0:1591:2020							
ANR	5602122	FunctionDef	"r_core_is_project (RCore * core , const char * name)"		5602121	0					
ANR	5602123	CompoundStatement		74:60:1651:2020	5602121	0					
ANR	5602124	IdentifierDeclStatement	bool ret = false ;	75:1:1654:1670	5602121	0	True				
ANR	5602125	IdentifierDecl	ret = false		5602121	0					
ANR	5602126	IdentifierDeclType	bool		5602121	0					
ANR	5602127	Identifier	ret		5602121	1					
ANR	5602128	AssignmentExpression	ret = false		5602121	2		=			
ANR	5602129	Identifier	false		5602121	0					
ANR	5602130	Identifier	false		5602121	1					
ANR	5602131	IfStatement	if ( name && * name && * name != '.' )		5602121	1					
ANR	5602132	Condition	name && * name && * name != '.'	76:5:1677:1705	5602121	0	True				
ANR	5602133	AndExpression	name && * name && * name != '.'		5602121	0		&&			
ANR	5602134	Identifier	name		5602121	0					
ANR	5602135	AndExpression	* name && * name != '.'		5602121	1		&&			
ANR	5602136	UnaryOperationExpression	* name		5602121	0					
ANR	5602137	UnaryOperator	*		5602121	0					
ANR	5602138	Identifier	name		5602121	1					
ANR	5602139	EqualityExpression	* name != '.'		5602121	1		!=			
ANR	5602140	UnaryOperationExpression	* name		5602121	0					
ANR	5602141	UnaryOperator	*		5602121	0					
ANR	5602142	Identifier	name		5602121	1					
ANR	5602143	PrimaryExpression	'.'		5602121	1					
ANR	5602144	CompoundStatement		4:2:60:103	5602121	1					
ANR	5602145	IdentifierDeclStatement	"char * path = projectScriptPath ( core , name ) ;"	77:2:1712:1755	5602121	0	True				
ANR	5602146	IdentifierDecl	"* path = projectScriptPath ( core , name )"		5602121	0					
ANR	5602147	IdentifierDeclType	char *		5602121	0					
ANR	5602148	Identifier	path		5602121	1					
ANR	5602149	AssignmentExpression	"* path = projectScriptPath ( core , name )"		5602121	2		=			
ANR	5602150	Identifier	path		5602121	0					
ANR	5602151	CallExpression	"projectScriptPath ( core , name )"		5602121	1					
ANR	5602152	Callee	projectScriptPath		5602121	0					
ANR	5602153	Identifier	projectScriptPath		5602121	0					
ANR	5602154	ArgumentList	core		5602121	1					
ANR	5602155	Argument	core		5602121	0					
ANR	5602156	Identifier	core		5602121	0					
ANR	5602157	Argument	name		5602121	1					
ANR	5602158	Identifier	name		5602121	0					
ANR	5602159	IfStatement	if ( ! path )		5602121	1					
ANR	5602160	Condition	! path	78:6:1763:1767	5602121	0	True				
ANR	5602161	UnaryOperationExpression	! path		5602121	0					
ANR	5602162	UnaryOperator	!		5602121	0					
ANR	5602163	Identifier	path		5602121	1					
ANR	5602164	CompoundStatement		5:13:118:118	5602121	1					
ANR	5602165	ReturnStatement	return false ;	79:3:1775:1787	5602121	0	True				
ANR	5602166	Identifier	false		5602121	0					
ANR	5602167	ElseStatement	else		5602121	0					
ANR	5602168	CompoundStatement		10:9:236:236	5602121	0					
ANR	5602169	ExpressionStatement	"path = r_str_append ( path , "".d"" )"	84:3:1893:1925	5602121	0	True				
ANR	5602170	AssignmentExpression	"path = r_str_append ( path , "".d"" )"		5602121	0		=			
ANR	5602171	Identifier	path		5602121	0					
ANR	5602172	CallExpression	"r_str_append ( path , "".d"" )"		5602121	1					
ANR	5602173	Callee	r_str_append		5602121	0					
ANR	5602174	Identifier	r_str_append		5602121	0					
ANR	5602175	ArgumentList	path		5602121	1					
ANR	5602176	Argument	path		5602121	0					
ANR	5602177	Identifier	path		5602121	0					
ANR	5602178	Argument	""".d"""		5602121	1					
ANR	5602179	PrimaryExpression	""".d"""		5602121	0					
ANR	5602180	IfStatement	if ( r_file_is_directory ( path ) )		5602121	1					
ANR	5602181	Condition	r_file_is_directory ( path )	85:7:1934:1959	5602121	0	True				
ANR	5602182	CallExpression	r_file_is_directory ( path )		5602121	0					
ANR	5602183	Callee	r_file_is_directory		5602121	0					
ANR	5602184	Identifier	r_file_is_directory		5602121	0					
ANR	5602185	ArgumentList	path		5602121	1					
ANR	5602186	Argument	path		5602121	0					
ANR	5602187	Identifier	path		5602121	0					
ANR	5602188	CompoundStatement		12:35:310:310	5602121	1					
ANR	5602189	ExpressionStatement	ret = true	86:4:1968:1978	5602121	0	True				
ANR	5602190	AssignmentExpression	ret = true		5602121	0		=			
ANR	5602191	Identifier	ret		5602121	0					
ANR	5602192	Identifier	true		5602121	1					
ANR	5602193	Statement	if	81:2:1795:1796	5602121	2	True				
ANR	5602194	Statement	(	81:5:1798:1798	5602121	3	True				
ANR	5602195	Statement	r_str_endswith	81:6:1799:1812	5602121	4	True				
ANR	5602196	Statement	(	81:21:1814:1814	5602121	5	True				
ANR	5602197	Statement	path	81:22:1815:1818	5602121	6	True				
ANR	5602198	Statement	","	81:26:1819:1819	5602121	7	True				
ANR	5602199	Statement	R_SYS_DIR	81:28:1821:1829	5602121	8	True				
ANR	5602200	Statement	"""rc"""	81:38:1831:1834	5602121	9	True				
ANR	5602201	Statement	)	81:42:1835:1835	5602121	10	True				
ANR	5602202	Statement	&&	81:44:1837:1838	5602121	11	True				
ANR	5602203	Statement	r_file_exists	81:47:1840:1852	5602121	12	True				
ANR	5602204	Statement	(	81:61:1854:1854	5602121	13	True				
ANR	5602205	Statement	path	81:62:1855:1858	5602121	14	True				
ANR	5602206	Statement	)	81:66:1859:1859	5602121	15	True				
ANR	5602207	Statement	)	81:67:1860:1860	5602121	16	True				
ANR	5602208	CompoundStatement		8:69:210:210	5602121	17					
ANR	5602209	ExpressionStatement	ret = true	82:3:1867:1877	5602121	0	True				
ANR	5602210	AssignmentExpression	ret = true		5602121	0		=			
ANR	5602211	Identifier	ret		5602121	0					
ANR	5602212	Identifier	true		5602121	1					
ANR	5602213	ExpressionStatement	free ( path )	89:2:1991:2002	5602121	18	True				
ANR	5602214	CallExpression	free ( path )		5602121	0					
ANR	5602215	Callee	free		5602121	0					
ANR	5602216	Identifier	free		5602121	0					
ANR	5602217	ArgumentList	path		5602121	1					
ANR	5602218	Argument	path		5602121	0					
ANR	5602219	Identifier	path		5602121	0					
ANR	5602220	ReturnStatement	return ret ;	91:1:2008:2018	5602121	2	True				
ANR	5602221	Identifier	ret		5602121	0					
ANR	5602222	ReturnType	R_API bool		5602121	1					
ANR	5602223	Identifier	r_core_is_project		5602121	2					
ANR	5602224	ParameterList	"RCore * core , const char * name"		5602121	3					
ANR	5602225	Parameter	RCore * core	74:29:1620:1630	5602121	0	True				
ANR	5602226	ParameterType	RCore *		5602121	0					
ANR	5602227	Identifier	core		5602121	1					
ANR	5602228	Parameter	const char * name	74:42:1633:1648	5602121	1	True				
ANR	5602229	ParameterType	const char *		5602121	0					
ANR	5602230	Identifier	name		5602121	1					
ANR	5602231	CFGEntryNode	ENTRY		5602121		True				
ANR	5602232	CFGExitNode	EXIT		5602121		True				
ANR	5602233	Symbol	ret		5602121						
ANR	5602234	Symbol	* name		5602121						
ANR	5602235	Symbol	core		5602121						
ANR	5602236	Symbol	path		5602121						
ANR	5602237	Symbol	r_str_append		5602121						
ANR	5602238	Symbol	r_file_is_directory		5602121						
ANR	5602239	Symbol	name		5602121						
ANR	5602240	Symbol	false		5602121						
ANR	5602241	Symbol	true		5602121						
ANR	5602242	Symbol	projectScriptPath		5602121						
ANR	5602243	Function	r_core_project_cat	94:0:2023:2274							
ANR	5602244	FunctionDef	"r_core_project_cat (RCore * core , const char * name)"		5602243	0					
ANR	5602245	CompoundStatement		94:60:2083:2274	5602243	0					
ANR	5602246	IdentifierDeclStatement	"char * path = projectScriptPath ( core , name ) ;"	95:1:2086:2129	5602243	0	True				
ANR	5602247	IdentifierDecl	"* path = projectScriptPath ( core , name )"		5602243	0					
ANR	5602248	IdentifierDeclType	char *		5602243	0					
ANR	5602249	Identifier	path		5602243	1					
ANR	5602250	AssignmentExpression	"* path = projectScriptPath ( core , name )"		5602243	2		=			
ANR	5602251	Identifier	path		5602243	0					
ANR	5602252	CallExpression	"projectScriptPath ( core , name )"		5602243	1					
ANR	5602253	Callee	projectScriptPath		5602243	0					
ANR	5602254	Identifier	projectScriptPath		5602243	0					
ANR	5602255	ArgumentList	core		5602243	1					
ANR	5602256	Argument	core		5602243	0					
ANR	5602257	Identifier	core		5602243	0					
ANR	5602258	Argument	name		5602243	1					
ANR	5602259	Identifier	name		5602243	0					
ANR	5602260	IfStatement	if ( path )		5602243	1					
ANR	5602261	Condition	path	96:5:2136:2139	5602243	0	True				
ANR	5602262	Identifier	path		5602243	0					
ANR	5602263	CompoundStatement		4:2:62:100	5602243	1					
ANR	5602264	IdentifierDeclStatement	"char * data = r_file_slurp ( path , NULL ) ;"	97:2:2146:2184	5602243	0	True				
ANR	5602265	IdentifierDecl	"* data = r_file_slurp ( path , NULL )"		5602243	0					
ANR	5602266	IdentifierDeclType	char *		5602243	0					
ANR	5602267	Identifier	data		5602243	1					
ANR	5602268	AssignmentExpression	"* data = r_file_slurp ( path , NULL )"		5602243	2		=			
ANR	5602269	Identifier	data		5602243	0					
ANR	5602270	CallExpression	"r_file_slurp ( path , NULL )"		5602243	1					
ANR	5602271	Callee	r_file_slurp		5602243	0					
ANR	5602272	Identifier	r_file_slurp		5602243	0					
ANR	5602273	ArgumentList	path		5602243	1					
ANR	5602274	Argument	path		5602243	0					
ANR	5602275	Identifier	path		5602243	0					
ANR	5602276	Argument	NULL		5602243	1					
ANR	5602277	Identifier	NULL		5602243	0					
ANR	5602278	IfStatement	if ( data )		5602243	1					
ANR	5602279	Condition	data	98:6:2192:2195	5602243	0	True				
ANR	5602280	Identifier	data		5602243	0					
ANR	5602281	CompoundStatement		5:12:114:114	5602243	1					
ANR	5602282	ExpressionStatement	r_cons_println ( data )	99:3:2203:2224	5602243	0	True				
ANR	5602283	CallExpression	r_cons_println ( data )		5602243	0					
ANR	5602284	Callee	r_cons_println		5602243	0					
ANR	5602285	Identifier	r_cons_println		5602243	0					
ANR	5602286	ArgumentList	data		5602243	1					
ANR	5602287	Argument	data		5602243	0					
ANR	5602288	Identifier	data		5602243	0					
ANR	5602289	ExpressionStatement	free ( data )	100:3:2229:2240	5602243	1	True				
ANR	5602290	CallExpression	free ( data )		5602243	0					
ANR	5602291	Callee	free		5602243	0					
ANR	5602292	Identifier	free		5602243	0					
ANR	5602293	ArgumentList	data		5602243	1					
ANR	5602294	Argument	data		5602243	0					
ANR	5602295	Identifier	data		5602243	0					
ANR	5602296	ExpressionStatement	free ( path )	103:1:2250:2261	5602243	2	True				
ANR	5602297	CallExpression	free ( path )		5602243	0					
ANR	5602298	Callee	free		5602243	0					
ANR	5602299	Identifier	free		5602243	0					
ANR	5602300	ArgumentList	path		5602243	1					
ANR	5602301	Argument	path		5602243	0					
ANR	5602302	Identifier	path		5602243	0					
ANR	5602303	ReturnStatement	return 0 ;	104:1:2264:2272	5602243	3	True				
ANR	5602304	PrimaryExpression	0		5602243	0					
ANR	5602305	ReturnType	R_API int		5602243	1					
ANR	5602306	Identifier	r_core_project_cat		5602243	2					
ANR	5602307	ParameterList	"RCore * core , const char * name"		5602243	3					
ANR	5602308	Parameter	RCore * core	94:29:2052:2062	5602243	0	True				
ANR	5602309	ParameterType	RCore *		5602243	0					
ANR	5602310	Identifier	core		5602243	1					
ANR	5602311	Parameter	const char * name	94:42:2065:2080	5602243	1	True				
ANR	5602312	ParameterType	const char *		5602243	0					
ANR	5602313	Identifier	name		5602243	1					
ANR	5602314	CFGEntryNode	ENTRY		5602243		True				
ANR	5602315	CFGExitNode	EXIT		5602243		True				
ANR	5602316	Symbol	core		5602243						
ANR	5602317	Symbol	path		5602243						
ANR	5602318	Symbol	r_file_slurp		5602243						
ANR	5602319	Symbol	NULL		5602243						
ANR	5602320	Symbol	data		5602243						
ANR	5602321	Symbol	name		5602243						
ANR	5602322	Symbol	projectScriptPath		5602243						
ANR	5602323	Function	r_core_project_list	107:0:2277:2998							
ANR	5602324	FunctionDef	"r_core_project_list (RCore * core , int mode)"		5602323	0					
ANR	5602325	CompoundStatement		107:53:2330:2998	5602323	0					
ANR	5602326	IdentifierDeclStatement	PJ * pj = NULL ;	108:1:2333:2346	5602323	0	True				
ANR	5602327	IdentifierDecl	* pj = NULL		5602323	0					
ANR	5602328	IdentifierDeclType	PJ *		5602323	0					
ANR	5602329	Identifier	pj		5602323	1					
ANR	5602330	AssignmentExpression	* pj = NULL		5602323	2		=			
ANR	5602331	Identifier	NULL		5602323	0					
ANR	5602332	Identifier	NULL		5602323	1					
ANR	5602333	IdentifierDeclStatement	RListIter * iter ;	109:1:2349:2364	5602323	1	True				
ANR	5602334	IdentifierDecl	* iter		5602323	0					
ANR	5602335	IdentifierDeclType	RListIter *		5602323	0					
ANR	5602336	Identifier	iter		5602323	1					
ANR	5602337	IdentifierDeclStatement	RList * list ;	110:1:2367:2378	5602323	2	True				
ANR	5602338	IdentifierDecl	* list		5602323	0					
ANR	5602339	IdentifierDeclType	RList *		5602323	0					
ANR	5602340	Identifier	list		5602323	1					
ANR	5602341	IdentifierDeclStatement	"char * foo , * path = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) ) ;"	112:1:2382:2461	5602323	3	True				
ANR	5602342	IdentifierDecl	* foo		5602323	0					
ANR	5602343	IdentifierDeclType	char *		5602323	0					
ANR	5602344	Identifier	foo		5602323	1					
ANR	5602345	IdentifierDecl	"* path = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5602323	1					
ANR	5602346	IdentifierDeclType	char *		5602323	0					
ANR	5602347	Identifier	path		5602323	1					
ANR	5602348	AssignmentExpression	"* path = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5602323	2		=			
ANR	5602349	Identifier	path		5602323	0					
ANR	5602350	CallExpression	"r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		5602323	1					
ANR	5602351	Callee	r_file_abspath		5602323	0					
ANR	5602352	Identifier	r_file_abspath		5602323	0					
ANR	5602353	ArgumentList	"r_config_get ( core -> config , ""dir.projects"" )"		5602323	1					
ANR	5602354	Argument	"r_config_get ( core -> config , ""dir.projects"" )"		5602323	0					
ANR	5602355	CallExpression	"r_config_get ( core -> config , ""dir.projects"" )"		5602323	0					
ANR	5602356	Callee	r_config_get		5602323	0					
ANR	5602357	Identifier	r_config_get		5602323	0					
ANR	5602358	ArgumentList	core -> config		5602323	1					
ANR	5602359	Argument	core -> config		5602323	0					
ANR	5602360	PtrMemberAccess	core -> config		5602323	0					
ANR	5602361	Identifier	core		5602323	0					
ANR	5602362	Identifier	config		5602323	1					
ANR	5602363	Argument	"""dir.projects"""		5602323	1					
ANR	5602364	PrimaryExpression	"""dir.projects"""		5602323	0					
ANR	5602365	IfStatement	if ( ! path )		5602323	4					
ANR	5602366	Condition	! path	113:5:2468:2472	5602323	0	True				
ANR	5602367	UnaryOperationExpression	! path		5602323	0					
ANR	5602368	UnaryOperator	!		5602323	0					
ANR	5602369	Identifier	path		5602323	1					
ANR	5602370	CompoundStatement		7:12:144:144	5602323	1					
ANR	5602371	ReturnStatement	return 0 ;	114:2:2479:2487	5602323	0	True				
ANR	5602372	PrimaryExpression	0		5602323	0					
ANR	5602373	ExpressionStatement	list = r_sys_dir ( path )	116:1:2493:2516	5602323	5	True				
ANR	5602374	AssignmentExpression	list = r_sys_dir ( path )		5602323	0		=			
ANR	5602375	Identifier	list		5602323	0					
ANR	5602376	CallExpression	r_sys_dir ( path )		5602323	1					
ANR	5602377	Callee	r_sys_dir		5602323	0					
ANR	5602378	Identifier	r_sys_dir		5602323	0					
ANR	5602379	ArgumentList	path		5602323	1					
ANR	5602380	Argument	path		5602323	0					
ANR	5602381	Identifier	path		5602323	0					
ANR	5602382	SwitchStatement	switch ( mode )		5602323	6					
ANR	5602383	Condition	mode	117:9:2527:2530	5602323	0	True				
ANR	5602384	Identifier	mode		5602323	0					
ANR	5602385	CompoundStatement		11:15:202:202	5602323	1					
ANR	5602386	Label	case 'j' :	118:1:2536:2544	5602323	0	True				
ANR	5602387	ExpressionStatement	pj = pj_new ( )	119:2:2548:2562	5602323	1	True				
ANR	5602388	AssignmentExpression	pj = pj_new ( )		5602323	0		=			
ANR	5602389	Identifier	pj		5602323	0					
ANR	5602390	CallExpression	pj_new ( )		5602323	1					
ANR	5602391	Callee	pj_new		5602323	0					
ANR	5602392	Identifier	pj_new		5602323	0					
ANR	5602393	ArgumentList			5602323	1					
ANR	5602394	IfStatement	if ( ! pj )		5602323	2					
ANR	5602395	Condition	! pj	120:6:2570:2572	5602323	0	True				
ANR	5602396	UnaryOperationExpression	! pj		5602323	0					
ANR	5602397	UnaryOperator	!		5602323	0					
ANR	5602398	Identifier	pj		5602323	1					
ANR	5602399	CompoundStatement		14:11:244:244	5602323	1					
ANR	5602400	BreakStatement	break ;	121:3:2580:2585	5602323	0	True				
ANR	5602401	ExpressionStatement	pj_a ( pj )	123:2:2593:2602	5602323	3	True				
ANR	5602402	CallExpression	pj_a ( pj )		5602323	0					
ANR	5602403	Callee	pj_a		5602323	0					
ANR	5602404	Identifier	pj_a		5602323	0					
ANR	5602405	ArgumentList	pj		5602323	1					
ANR	5602406	Argument	pj		5602323	0					
ANR	5602407	Identifier	pj		5602323	0					
ANR	5602408	Statement	r_list_foreach	124:2:2606:2619	5602323	4	True				
ANR	5602409	Statement	(	124:17:2621:2621	5602323	5	True				
ANR	5602410	Statement	list	124:18:2622:2625	5602323	6	True				
ANR	5602411	Statement	","	124:22:2626:2626	5602323	7	True				
ANR	5602412	Statement	iter	124:24:2628:2631	5602323	8	True				
ANR	5602413	Statement	","	124:28:2632:2632	5602323	9	True				
ANR	5602414	Statement	foo	124:30:2634:2636	5602323	10	True				
ANR	5602415	Statement	)	124:33:2637:2637	5602323	11	True				
ANR	5602416	CompoundStatement		18:35:308:308	5602323	12					
ANR	5602417	IfStatement	"if ( r_core_is_project ( core , foo ) )"		5602323	0					
ANR	5602418	Condition	"r_core_is_project ( core , foo )"	126:7:2674:2702	5602323	0	True				
ANR	5602419	CallExpression	"r_core_is_project ( core , foo )"		5602323	0					
ANR	5602420	Callee	r_core_is_project		5602323	0					
ANR	5602421	Identifier	r_core_is_project		5602323	0					
ANR	5602422	ArgumentList	core		5602323	1					
ANR	5602423	Argument	core		5602323	0					
ANR	5602424	Identifier	core		5602323	0					
ANR	5602425	Argument	foo		5602323	1					
ANR	5602426	Identifier	foo		5602323	0					
ANR	5602427	CompoundStatement		20:38:374:374	5602323	1					
ANR	5602428	ExpressionStatement	"pj_s ( pj , foo )"	127:4:2711:2725	5602323	0	True				
ANR	5602429	CallExpression	"pj_s ( pj , foo )"		5602323	0					
ANR	5602430	Callee	pj_s		5602323	0					
ANR	5602431	Identifier	pj_s		5602323	0					
ANR	5602432	ArgumentList	pj		5602323	1					
ANR	5602433	Argument	pj		5602323	0					
ANR	5602434	Identifier	pj		5602323	0					
ANR	5602435	Argument	foo		5602323	1					
ANR	5602436	Identifier	foo		5602323	0					
ANR	5602437	ExpressionStatement	pj_end ( pj )	130:2:2738:2749	5602323	13	True				
ANR	5602438	CallExpression	pj_end ( pj )		5602323	0					
ANR	5602439	Callee	pj_end		5602323	0					
ANR	5602440	Identifier	pj_end		5602323	0					
ANR	5602441	ArgumentList	pj		5602323	1					
ANR	5602442	Argument	pj		5602323	0					
ANR	5602443	Identifier	pj		5602323	0					
ANR	5602444	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	131:2:2753:2791	5602323	14	True				
ANR	5602445	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		5602323	0					
ANR	5602446	Callee	r_cons_printf		5602323	0					
ANR	5602447	Identifier	r_cons_printf		5602323	0					
ANR	5602448	ArgumentList	"""%s\\n"""		5602323	1					
ANR	5602449	Argument	"""%s\\n"""		5602323	0					
ANR	5602450	PrimaryExpression	"""%s\\n"""		5602323	0					
ANR	5602451	Argument	pj_string ( pj )		5602323	1					
ANR	5602452	CallExpression	pj_string ( pj )		5602323	0					
ANR	5602453	Callee	pj_string		5602323	0					
ANR	5602454	Identifier	pj_string		5602323	0					
ANR	5602455	ArgumentList	pj		5602323	1					
ANR	5602456	Argument	pj		5602323	0					
ANR	5602457	Identifier	pj		5602323	0					
ANR	5602458	ExpressionStatement	pj_free ( pj )	132:2:2795:2807	5602323	15	True				
ANR	5602459	CallExpression	pj_free ( pj )		5602323	0					
ANR	5602460	Callee	pj_free		5602323	0					
ANR	5602461	Identifier	pj_free		5602323	0					
ANR	5602462	ArgumentList	pj		5602323	1					
ANR	5602463	Argument	pj		5602323	0					
ANR	5602464	Identifier	pj		5602323	0					
ANR	5602465	BreakStatement	break ;	133:2:2811:2816	5602323	16	True				
ANR	5602466	Label	default :	134:1:2819:2826	5602323	17	True				
ANR	5602467	Identifier	default		5602323	0					
ANR	5602468	Statement	r_list_foreach	135:2:2830:2843	5602323	18	True				
ANR	5602469	Statement	(	135:17:2845:2845	5602323	19	True				
ANR	5602470	Statement	list	135:18:2846:2849	5602323	20	True				
ANR	5602471	Statement	","	135:22:2850:2850	5602323	21	True				
ANR	5602472	Statement	iter	135:24:2852:2855	5602323	22	True				
ANR	5602473	Statement	","	135:28:2856:2856	5602323	23	True				
ANR	5602474	Statement	foo	135:30:2858:2860	5602323	24	True				
ANR	5602475	Statement	)	135:33:2861:2861	5602323	25	True				
ANR	5602476	CompoundStatement		29:35:532:532	5602323	26					
ANR	5602477	IfStatement	"if ( r_core_is_project ( core , foo ) )"		5602323	0					
ANR	5602478	Condition	"r_core_is_project ( core , foo )"	136:7:2872:2900	5602323	0	True				
ANR	5602479	CallExpression	"r_core_is_project ( core , foo )"		5602323	0					
ANR	5602480	Callee	r_core_is_project		5602323	0					
ANR	5602481	Identifier	r_core_is_project		5602323	0					
ANR	5602482	ArgumentList	core		5602323	1					
ANR	5602483	Argument	core		5602323	0					
ANR	5602484	Identifier	core		5602323	0					
ANR	5602485	Argument	foo		5602323	1					
ANR	5602486	Identifier	foo		5602323	0					
ANR	5602487	CompoundStatement		30:38:572:572	5602323	1					
ANR	5602488	ExpressionStatement	r_cons_println ( foo )	137:4:2909:2929	5602323	0	True				
ANR	5602489	CallExpression	r_cons_println ( foo )		5602323	0					
ANR	5602490	Callee	r_cons_println		5602323	0					
ANR	5602491	Identifier	r_cons_println		5602323	0					
ANR	5602492	ArgumentList	foo		5602323	1					
ANR	5602493	Argument	foo		5602323	0					
ANR	5602494	Identifier	foo		5602323	0					
ANR	5602495	BreakStatement	break ;	140:2:2942:2947	5602323	27	True				
ANR	5602496	ExpressionStatement	r_list_free ( list )	142:1:2953:2971	5602323	7	True				
ANR	5602497	CallExpression	r_list_free ( list )		5602323	0					
ANR	5602498	Callee	r_list_free		5602323	0					
ANR	5602499	Identifier	r_list_free		5602323	0					
ANR	5602500	ArgumentList	list		5602323	1					
ANR	5602501	Argument	list		5602323	0					
ANR	5602502	Identifier	list		5602323	0					
ANR	5602503	ExpressionStatement	free ( path )	143:1:2974:2985	5602323	8	True				
ANR	5602504	CallExpression	free ( path )		5602323	0					
ANR	5602505	Callee	free		5602323	0					
ANR	5602506	Identifier	free		5602323	0					
ANR	5602507	ArgumentList	path		5602323	1					
ANR	5602508	Argument	path		5602323	0					
ANR	5602509	Identifier	path		5602323	0					
ANR	5602510	ReturnStatement	return 0 ;	144:1:2988:2996	5602323	9	True				
ANR	5602511	PrimaryExpression	0		5602323	0					
ANR	5602512	ReturnType	R_API int		5602323	1					
ANR	5602513	Identifier	r_core_project_list		5602323	2					
ANR	5602514	ParameterList	"RCore * core , int mode"		5602323	3					
ANR	5602515	Parameter	RCore * core	107:30:2307:2317	5602323	0	True				
ANR	5602516	ParameterType	RCore *		5602323	0					
ANR	5602517	Identifier	core		5602323	1					
ANR	5602518	Parameter	int mode	107:43:2320:2327	5602323	1	True				
ANR	5602519	ParameterType	int		5602323	0					
ANR	5602520	Identifier	mode		5602323	1					
ANR	5602521	CFGEntryNode	ENTRY		5602323		True				
ANR	5602522	CFGExitNode	EXIT		5602323		True				
ANR	5602523	Symbol	core -> config		5602323						
ANR	5602524	Symbol	r_file_abspath		5602323						
ANR	5602525	Symbol	r_core_is_project		5602323						
ANR	5602526	Symbol	NULL		5602323						
ANR	5602527	Symbol	pj_string		5602323						
ANR	5602528	Symbol	foo		5602323						
ANR	5602529	Symbol	r_config_get		5602323						
ANR	5602530	Symbol	* core		5602323						
ANR	5602531	Symbol	iter		5602323						
ANR	5602532	Symbol	list		5602323						
ANR	5602533	Symbol	mode		5602323						
ANR	5602534	Symbol	core		5602323						
ANR	5602535	Symbol	path		5602323						
ANR	5602536	Symbol	pj		5602323						
ANR	5602537	Symbol	pj_new		5602323						
ANR	5602538	Symbol	r_sys_dir		5602323						
ANR	5602539	Function	r_core_project_delete	147:0:3001:4465							
ANR	5602540	FunctionDef	"r_core_project_delete (RCore * core , const char * prjfile)"		5602539	0					
ANR	5602541	CompoundStatement		147:66:3067:4465	5602539	0					
ANR	5602542	IfStatement	if ( r_sandbox_enable ( 0 ) )		5602539	0					
ANR	5602543	Condition	r_sandbox_enable ( 0 )	148:5:3074:3093	5602539	0	True				
ANR	5602544	CallExpression	r_sandbox_enable ( 0 )		5602539	0					
ANR	5602545	Callee	r_sandbox_enable		5602539	0					
ANR	5602546	Identifier	r_sandbox_enable		5602539	0					
ANR	5602547	ArgumentList	0		5602539	1					
ANR	5602548	Argument	0		5602539	0					
ANR	5602549	PrimaryExpression	0		5602539	0					
ANR	5602550	CompoundStatement		2:27:28:28	5602539	1					
ANR	5602551	ExpressionStatement	"eprintf ( ""Cannot delete project in sandbox mode\\n"" )"	149:2:3100:3151	5602539	0	True				
ANR	5602552	CallExpression	"eprintf ( ""Cannot delete project in sandbox mode\\n"" )"		5602539	0					
ANR	5602553	Callee	eprintf		5602539	0					
ANR	5602554	Identifier	eprintf		5602539	0					
ANR	5602555	ArgumentList	"""Cannot delete project in sandbox mode\\n"""		5602539	1					
ANR	5602556	Argument	"""Cannot delete project in sandbox mode\\n"""		5602539	0					
ANR	5602557	PrimaryExpression	"""Cannot delete project in sandbox mode\\n"""		5602539	0					
ANR	5602558	ReturnStatement	return 0 ;	150:2:3155:3163	5602539	1	True				
ANR	5602559	PrimaryExpression	0		5602539	0					
ANR	5602560	IdentifierDeclStatement	"char * path = projectScriptPath ( core , prjfile ) ;"	152:1:3169:3215	5602539	1	True				
ANR	5602561	IdentifierDecl	"* path = projectScriptPath ( core , prjfile )"		5602539	0					
ANR	5602562	IdentifierDeclType	char *		5602539	0					
ANR	5602563	Identifier	path		5602539	1					
ANR	5602564	AssignmentExpression	"* path = projectScriptPath ( core , prjfile )"		5602539	2		=			
ANR	5602565	Identifier	path		5602539	0					
ANR	5602566	CallExpression	"projectScriptPath ( core , prjfile )"		5602539	1					
ANR	5602567	Callee	projectScriptPath		5602539	0					
ANR	5602568	Identifier	projectScriptPath		5602539	0					
ANR	5602569	ArgumentList	core		5602539	1					
ANR	5602570	Argument	core		5602539	0					
ANR	5602571	Identifier	core		5602539	0					
ANR	5602572	Argument	prjfile		5602539	1					
ANR	5602573	Identifier	prjfile		5602539	0					
ANR	5602574	IfStatement	if ( ! path )		5602539	2					
ANR	5602575	Condition	! path	153:5:3222:3226	5602539	0	True				
ANR	5602576	UnaryOperationExpression	! path		5602539	0					
ANR	5602577	UnaryOperator	!		5602539	0					
ANR	5602578	Identifier	path		5602539	1					
ANR	5602579	CompoundStatement		7:12:161:161	5602539	1					
ANR	5602580	ExpressionStatement	"eprintf ( ""Invalid project name '%s'\\n"" , prjfile )"	154:2:3233:3281	5602539	0	True				
ANR	5602581	CallExpression	"eprintf ( ""Invalid project name '%s'\\n"" , prjfile )"		5602539	0					
ANR	5602582	Callee	eprintf		5602539	0					
ANR	5602583	Identifier	eprintf		5602539	0					
ANR	5602584	ArgumentList	"""Invalid project name '%s'\\n"""		5602539	1					
ANR	5602585	Argument	"""Invalid project name '%s'\\n"""		5602539	0					
ANR	5602586	PrimaryExpression	"""Invalid project name '%s'\\n"""		5602539	0					
ANR	5602587	Argument	prjfile		5602539	1					
ANR	5602588	Identifier	prjfile		5602539	0					
ANR	5602589	ReturnStatement	return false ;	155:2:3285:3297	5602539	1	True				
ANR	5602590	Identifier	false		5602539	0					
ANR	5602591	IfStatement	"if ( r_core_is_project ( core , prjfile ) )"		5602539	3					
ANR	5602592	Condition	"r_core_is_project ( core , prjfile )"	157:5:3307:3339	5602539	0	True				
ANR	5602593	CallExpression	"r_core_is_project ( core , prjfile )"		5602539	0					
ANR	5602594	Callee	r_core_is_project		5602539	0					
ANR	5602595	Identifier	r_core_is_project		5602539	0					
ANR	5602596	ArgumentList	core		5602539	1					
ANR	5602597	Argument	core		5602539	0					
ANR	5602598	Identifier	core		5602539	0					
ANR	5602599	Argument	prjfile		5602539	1					
ANR	5602600	Identifier	prjfile		5602539	0					
ANR	5602601	CompoundStatement		32:2:739:802	5602539	1					
ANR	5602602	IdentifierDeclStatement	char * prjDir = r_file_dirname ( path ) ;	158:2:3346:3382	5602539	0	True				
ANR	5602603	IdentifierDecl	* prjDir = r_file_dirname ( path )		5602539	0					
ANR	5602604	IdentifierDeclType	char *		5602539	0					
ANR	5602605	Identifier	prjDir		5602539	1					
ANR	5602606	AssignmentExpression	* prjDir = r_file_dirname ( path )		5602539	2		=			
ANR	5602607	Identifier	prjDir		5602539	0					
ANR	5602608	CallExpression	r_file_dirname ( path )		5602539	1					
ANR	5602609	Callee	r_file_dirname		5602539	0					
ANR	5602610	Identifier	r_file_dirname		5602539	0					
ANR	5602611	ArgumentList	path		5602539	1					
ANR	5602612	Argument	path		5602539	0					
ANR	5602613	Identifier	path		5602539	0					
ANR	5602614	IfStatement	if ( ! prjDir )		5602539	1					
ANR	5602615	Condition	! prjDir	159:6:3390:3396	5602539	0	True				
ANR	5602616	UnaryOperationExpression	! prjDir		5602539	0					
ANR	5602617	UnaryOperator	!		5602539	0					
ANR	5602618	Identifier	prjDir		5602539	1					
ANR	5602619	CompoundStatement		13:15:331:331	5602539	1					
ANR	5602620	ExpressionStatement	"eprintf ( ""Cannot resolve directory\\n"" )"	160:3:3404:3442	5602539	0	True				
ANR	5602621	CallExpression	"eprintf ( ""Cannot resolve directory\\n"" )"		5602539	0					
ANR	5602622	Callee	eprintf		5602539	0					
ANR	5602623	Identifier	eprintf		5602539	0					
ANR	5602624	ArgumentList	"""Cannot resolve directory\\n"""		5602539	1					
ANR	5602625	Argument	"""Cannot resolve directory\\n"""		5602539	0					
ANR	5602626	PrimaryExpression	"""Cannot resolve directory\\n"""		5602539	0					
ANR	5602627	ExpressionStatement	free ( path )	161:3:3447:3458	5602539	1	True				
ANR	5602628	CallExpression	free ( path )		5602539	0					
ANR	5602629	Callee	free		5602539	0					
ANR	5602630	Identifier	free		5602539	0					
ANR	5602631	ArgumentList	path		5602539	1					
ANR	5602632	Argument	path		5602539	0					
ANR	5602633	Identifier	path		5602539	0					
ANR	5602634	ReturnStatement	return false ;	162:3:3463:3475	5602539	2	True				
ANR	5602635	Identifier	false		5602539	0					
ANR	5602636	IfStatement	if ( r_file_exists ( path ) )		5602539	2					
ANR	5602637	Condition	r_file_exists ( path )	165:6:3508:3527	5602539	0	True				
ANR	5602638	CallExpression	r_file_exists ( path )		5602539	0					
ANR	5602639	Callee	r_file_exists		5602539	0					
ANR	5602640	Identifier	r_file_exists		5602539	0					
ANR	5602641	ArgumentList	path		5602539	1					
ANR	5602642	Argument	path		5602539	0					
ANR	5602643	Identifier	path		5602539	0					
ANR	5602644	CompoundStatement		19:28:462:462	5602539	1					
ANR	5602645	ExpressionStatement	r_file_rm ( path )	166:3:3535:3551	5602539	0	True				
ANR	5602646	CallExpression	r_file_rm ( path )		5602539	0					
ANR	5602647	Callee	r_file_rm		5602539	0					
ANR	5602648	Identifier	r_file_rm		5602539	0					
ANR	5602649	ArgumentList	path		5602539	1					
ANR	5602650	Argument	path		5602539	0					
ANR	5602651	Identifier	path		5602539	0					
ANR	5602652	ExpressionStatement	"eprintf ( ""rm %s\\n"" , path )"	167:3:3556:3581	5602539	1	True				
ANR	5602653	CallExpression	"eprintf ( ""rm %s\\n"" , path )"		5602539	0					
ANR	5602654	Callee	eprintf		5602539	0					
ANR	5602655	Identifier	eprintf		5602539	0					
ANR	5602656	ArgumentList	"""rm %s\\n"""		5602539	1					
ANR	5602657	Argument	"""rm %s\\n"""		5602539	0					
ANR	5602658	PrimaryExpression	"""rm %s\\n"""		5602539	0					
ANR	5602659	Argument	path		5602539	1					
ANR	5602660	Identifier	path		5602539	0					
ANR	5602661	IdentifierDeclStatement	"char * notes_txt = r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""notes.txt"" ) ;"	171:2:3612:3683	5602539	3	True				
ANR	5602662	IdentifierDecl	"* notes_txt = r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""notes.txt"" )"		5602539	0					
ANR	5602663	IdentifierDeclType	char *		5602539	0					
ANR	5602664	Identifier	notes_txt		5602539	1					
ANR	5602665	AssignmentExpression	"* notes_txt = r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""notes.txt"" )"		5602539	2		=			
ANR	5602666	Identifier	notes_txt		5602539	0					
ANR	5602667	CallExpression	"r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""notes.txt"" )"		5602539	1					
ANR	5602668	Callee	r_str_newf		5602539	0					
ANR	5602669	Identifier	r_str_newf		5602539	0					
ANR	5602670	ArgumentList	"""%s%s%s"""		5602539	1					
ANR	5602671	Argument	"""%s%s%s"""		5602539	0					
ANR	5602672	PrimaryExpression	"""%s%s%s"""		5602539	0					
ANR	5602673	Argument	prjDir		5602539	1					
ANR	5602674	Identifier	prjDir		5602539	0					
ANR	5602675	Argument	R_SYS_DIR		5602539	2					
ANR	5602676	Identifier	R_SYS_DIR		5602539	0					
ANR	5602677	Argument	"""notes.txt"""		5602539	3					
ANR	5602678	PrimaryExpression	"""notes.txt"""		5602539	0					
ANR	5602679	IfStatement	if ( r_file_exists ( notes_txt ) )		5602539	4					
ANR	5602680	Condition	r_file_exists ( notes_txt )	172:6:3691:3715	5602539	0	True				
ANR	5602681	CallExpression	r_file_exists ( notes_txt )		5602539	0					
ANR	5602682	Callee	r_file_exists		5602539	0					
ANR	5602683	Identifier	r_file_exists		5602539	0					
ANR	5602684	ArgumentList	notes_txt		5602539	1					
ANR	5602685	Argument	notes_txt		5602539	0					
ANR	5602686	Identifier	notes_txt		5602539	0					
ANR	5602687	CompoundStatement		26:33:650:650	5602539	1					
ANR	5602688	ExpressionStatement	r_file_rm ( notes_txt )	173:3:3723:3744	5602539	0	True				
ANR	5602689	CallExpression	r_file_rm ( notes_txt )		5602539	0					
ANR	5602690	Callee	r_file_rm		5602539	0					
ANR	5602691	Identifier	r_file_rm		5602539	0					
ANR	5602692	ArgumentList	notes_txt		5602539	1					
ANR	5602693	Argument	notes_txt		5602539	0					
ANR	5602694	Identifier	notes_txt		5602539	0					
ANR	5602695	ExpressionStatement	"eprintf ( ""rm %s\\n"" , notes_txt )"	174:3:3749:3779	5602539	1	True				
ANR	5602696	CallExpression	"eprintf ( ""rm %s\\n"" , notes_txt )"		5602539	0					
ANR	5602697	Callee	eprintf		5602539	0					
ANR	5602698	Identifier	eprintf		5602539	0					
ANR	5602699	ArgumentList	"""rm %s\\n"""		5602539	1					
ANR	5602700	Argument	"""rm %s\\n"""		5602539	0					
ANR	5602701	PrimaryExpression	"""rm %s\\n"""		5602539	0					
ANR	5602702	Argument	notes_txt		5602539	1					
ANR	5602703	Identifier	notes_txt		5602539	0					
ANR	5602704	ExpressionStatement	free ( notes_txt )	176:2:3787:3802	5602539	5	True				
ANR	5602705	CallExpression	free ( notes_txt )		5602539	0					
ANR	5602706	Callee	free		5602539	0					
ANR	5602707	Identifier	free		5602539	0					
ANR	5602708	ArgumentList	notes_txt		5602539	1					
ANR	5602709	Argument	notes_txt		5602539	0					
ANR	5602710	Identifier	notes_txt		5602539	0					
ANR	5602711	IdentifierDeclStatement	"char * rop_d = r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""rop.d"" ) ;"	178:2:3807:3870	5602539	6	True				
ANR	5602712	IdentifierDecl	"* rop_d = r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""rop.d"" )"		5602539	0					
ANR	5602713	IdentifierDeclType	char *		5602539	0					
ANR	5602714	Identifier	rop_d		5602539	1					
ANR	5602715	AssignmentExpression	"* rop_d = r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""rop.d"" )"		5602539	2		=			
ANR	5602716	Identifier	rop_d		5602539	0					
ANR	5602717	CallExpression	"r_str_newf ( ""%s%s%s"" , prjDir , R_SYS_DIR , ""rop.d"" )"		5602539	1					
ANR	5602718	Callee	r_str_newf		5602539	0					
ANR	5602719	Identifier	r_str_newf		5602539	0					
ANR	5602720	ArgumentList	"""%s%s%s"""		5602539	1					
ANR	5602721	Argument	"""%s%s%s"""		5602539	0					
ANR	5602722	PrimaryExpression	"""%s%s%s"""		5602539	0					
ANR	5602723	Argument	prjDir		5602539	1					
ANR	5602724	Identifier	prjDir		5602539	0					
ANR	5602725	Argument	R_SYS_DIR		5602539	2					
ANR	5602726	Identifier	R_SYS_DIR		5602539	0					
ANR	5602727	Argument	"""rop.d"""		5602539	3					
ANR	5602728	PrimaryExpression	"""rop.d"""		5602539	0					
ANR	5602729	IfStatement	if ( r_file_is_directory ( rop_d ) )		5602539	7					
ANR	5602730	Condition	r_file_is_directory ( rop_d )	180:6:3879:3905	5602539	0	True				
ANR	5602731	CallExpression	r_file_is_directory ( rop_d )		5602539	0					
ANR	5602732	Callee	r_file_is_directory		5602539	0					
ANR	5602733	Identifier	r_file_is_directory		5602539	0					
ANR	5602734	ArgumentList	rop_d		5602539	1					
ANR	5602735	Argument	rop_d		5602539	0					
ANR	5602736	Identifier	rop_d		5602539	0					
ANR	5602737	CompoundStatement		37:3:877:909	5602539	1					
ANR	5602738	IdentifierDeclStatement	char * f ;	181:3:3913:3920	5602539	0	True				
ANR	5602739	IdentifierDecl	* f		5602539	0					
ANR	5602740	IdentifierDeclType	char *		5602539	0					
ANR	5602741	Identifier	f		5602539	1					
ANR	5602742	IdentifierDeclStatement	RListIter * iter ;	182:3:3925:3940	5602539	1	True				
ANR	5602743	IdentifierDecl	* iter		5602539	0					
ANR	5602744	IdentifierDeclType	RListIter *		5602539	0					
ANR	5602745	Identifier	iter		5602539	1					
ANR	5602746	IdentifierDeclStatement	RList * files = r_sys_dir ( rop_d ) ;	183:3:3945:3977	5602539	2	True				
ANR	5602747	IdentifierDecl	* files = r_sys_dir ( rop_d )		5602539	0					
ANR	5602748	IdentifierDeclType	RList *		5602539	0					
ANR	5602749	Identifier	files		5602539	1					
ANR	5602750	AssignmentExpression	* files = r_sys_dir ( rop_d )		5602539	2		=			
ANR	5602751	Identifier	files		5602539	0					
ANR	5602752	CallExpression	r_sys_dir ( rop_d )		5602539	1					
ANR	5602753	Callee	r_sys_dir		5602539	0					
ANR	5602754	Identifier	r_sys_dir		5602539	0					
ANR	5602755	ArgumentList	rop_d		5602539	1					
ANR	5602756	Argument	rop_d		5602539	0					
ANR	5602757	Identifier	rop_d		5602539	0					
ANR	5602758	Statement	r_list_foreach	184:3:3982:3995	5602539	3	True				
ANR	5602759	Statement	(	184:18:3997:3997	5602539	4	True				
ANR	5602760	Statement	files	184:19:3998:4002	5602539	5	True				
ANR	5602761	Statement	","	184:24:4003:4003	5602539	6	True				
ANR	5602762	Statement	iter	184:26:4005:4008	5602539	7	True				
ANR	5602763	Statement	","	184:30:4009:4009	5602539	8	True				
ANR	5602764	Statement	f	184:32:4011:4011	5602539	9	True				
ANR	5602765	Statement	)	184:33:4012:4012	5602539	10	True				
ANR	5602766	CompoundStatement		39:4:952:1009	5602539	11					
ANR	5602767	IdentifierDeclStatement	"char * filepath = r_str_append ( strdup ( rop_d ) , R_SYS_DIR ) ;"	185:4:4020:4077	5602539	0	True				
ANR	5602768	IdentifierDecl	"* filepath = r_str_append ( strdup ( rop_d ) , R_SYS_DIR )"		5602539	0					
ANR	5602769	IdentifierDeclType	char *		5602539	0					
ANR	5602770	Identifier	filepath		5602539	1					
ANR	5602771	AssignmentExpression	"* filepath = r_str_append ( strdup ( rop_d ) , R_SYS_DIR )"		5602539	2		=			
ANR	5602772	Identifier	filepath		5602539	0					
ANR	5602773	CallExpression	"r_str_append ( strdup ( rop_d ) , R_SYS_DIR )"		5602539	1					
ANR	5602774	Callee	r_str_append		5602539	0					
ANR	5602775	Identifier	r_str_append		5602539	0					
ANR	5602776	ArgumentList	strdup ( rop_d )		5602539	1					
ANR	5602777	Argument	strdup ( rop_d )		5602539	0					
ANR	5602778	CallExpression	strdup ( rop_d )		5602539	0					
ANR	5602779	Callee	strdup		5602539	0					
ANR	5602780	Identifier	strdup		5602539	0					
ANR	5602781	ArgumentList	rop_d		5602539	1					
ANR	5602782	Argument	rop_d		5602539	0					
ANR	5602783	Identifier	rop_d		5602539	0					
ANR	5602784	Argument	R_SYS_DIR		5602539	1					
ANR	5602785	Identifier	R_SYS_DIR		5602539	0					
ANR	5602786	ExpressionStatement	"filepath = r_str_append ( filepath , f )"	186:4:4083:4120	5602539	1	True				
ANR	5602787	AssignmentExpression	"filepath = r_str_append ( filepath , f )"		5602539	0		=			
ANR	5602788	Identifier	filepath		5602539	0					
ANR	5602789	CallExpression	"r_str_append ( filepath , f )"		5602539	1					
ANR	5602790	Callee	r_str_append		5602539	0					
ANR	5602791	Identifier	r_str_append		5602539	0					
ANR	5602792	ArgumentList	filepath		5602539	1					
ANR	5602793	Argument	filepath		5602539	0					
ANR	5602794	Identifier	filepath		5602539	0					
ANR	5602795	Argument	f		5602539	1					
ANR	5602796	Identifier	f		5602539	0					
ANR	5602797	IfStatement	if ( ! r_file_is_directory ( filepath ) )		5602539	2					
ANR	5602798	Condition	! r_file_is_directory ( filepath )	187:8:4130:4160	5602539	0	True				
ANR	5602799	UnaryOperationExpression	! r_file_is_directory ( filepath )		5602539	0					
ANR	5602800	UnaryOperator	!		5602539	0					
ANR	5602801	CallExpression	r_file_is_directory ( filepath )		5602539	1					
ANR	5602802	Callee	r_file_is_directory		5602539	0					
ANR	5602803	Identifier	r_file_is_directory		5602539	0					
ANR	5602804	ArgumentList	filepath		5602539	1					
ANR	5602805	Argument	filepath		5602539	0					
ANR	5602806	Identifier	filepath		5602539	0					
ANR	5602807	CompoundStatement		41:41:1095:1095	5602539	1					
ANR	5602808	ExpressionStatement	"eprintf ( ""rm %s\\n"" , filepath )"	188:5:4170:4199	5602539	0	True				
ANR	5602809	CallExpression	"eprintf ( ""rm %s\\n"" , filepath )"		5602539	0					
ANR	5602810	Callee	eprintf		5602539	0					
ANR	5602811	Identifier	eprintf		5602539	0					
ANR	5602812	ArgumentList	"""rm %s\\n"""		5602539	1					
ANR	5602813	Argument	"""rm %s\\n"""		5602539	0					
ANR	5602814	PrimaryExpression	"""rm %s\\n"""		5602539	0					
ANR	5602815	Argument	filepath		5602539	1					
ANR	5602816	Identifier	filepath		5602539	0					
ANR	5602817	ExpressionStatement	r_file_rm ( filepath )	189:5:4206:4226	5602539	1	True				
ANR	5602818	CallExpression	r_file_rm ( filepath )		5602539	0					
ANR	5602819	Callee	r_file_rm		5602539	0					
ANR	5602820	Identifier	r_file_rm		5602539	0					
ANR	5602821	ArgumentList	filepath		5602539	1					
ANR	5602822	Argument	filepath		5602539	0					
ANR	5602823	Identifier	filepath		5602539	0					
ANR	5602824	ExpressionStatement	free ( filepath )	191:4:4238:4253	5602539	3	True				
ANR	5602825	CallExpression	free ( filepath )		5602539	0					
ANR	5602826	Callee	free		5602539	0					
ANR	5602827	Identifier	free		5602539	0					
ANR	5602828	ArgumentList	filepath		5602539	1					
ANR	5602829	Argument	filepath		5602539	0					
ANR	5602830	Identifier	filepath		5602539	0					
ANR	5602831	ExpressionStatement	r_file_rm ( rop_d )	193:3:4263:4280	5602539	12	True				
ANR	5602832	CallExpression	r_file_rm ( rop_d )		5602539	0					
ANR	5602833	Callee	r_file_rm		5602539	0					
ANR	5602834	Identifier	r_file_rm		5602539	0					
ANR	5602835	ArgumentList	rop_d		5602539	1					
ANR	5602836	Argument	rop_d		5602539	0					
ANR	5602837	Identifier	rop_d		5602539	0					
ANR	5602838	ExpressionStatement	"eprintf ( ""rm %s\\n"" , rop_d )"	194:3:4285:4311	5602539	13	True				
ANR	5602839	CallExpression	"eprintf ( ""rm %s\\n"" , rop_d )"		5602539	0					
ANR	5602840	Callee	eprintf		5602539	0					
ANR	5602841	Identifier	eprintf		5602539	0					
ANR	5602842	ArgumentList	"""rm %s\\n"""		5602539	1					
ANR	5602843	Argument	"""rm %s\\n"""		5602539	0					
ANR	5602844	PrimaryExpression	"""rm %s\\n"""		5602539	0					
ANR	5602845	Argument	rop_d		5602539	1					
ANR	5602846	Identifier	rop_d		5602539	0					
ANR	5602847	ExpressionStatement	r_list_free ( files )	195:3:4316:4335	5602539	14	True				
ANR	5602848	CallExpression	r_list_free ( files )		5602539	0					
ANR	5602849	Callee	r_list_free		5602539	0					
ANR	5602850	Identifier	r_list_free		5602539	0					
ANR	5602851	ArgumentList	files		5602539	1					
ANR	5602852	Argument	files		5602539	0					
ANR	5602853	Identifier	files		5602539	0					
ANR	5602854	ExpressionStatement	free ( rop_d )	197:2:4343:4355	5602539	8	True				
ANR	5602855	CallExpression	free ( rop_d )		5602539	0					
ANR	5602856	Callee	free		5602539	0					
ANR	5602857	Identifier	free		5602539	0					
ANR	5602858	ArgumentList	rop_d		5602539	1					
ANR	5602859	Argument	rop_d		5602539	0					
ANR	5602860	Identifier	rop_d		5602539	0					
ANR	5602861	ExpressionStatement	r_file_rm ( prjDir )	199:2:4400:4418	5602539	9	True				
ANR	5602862	CallExpression	r_file_rm ( prjDir )		5602539	0					
ANR	5602863	Callee	r_file_rm		5602539	0					
ANR	5602864	Identifier	r_file_rm		5602539	0					
ANR	5602865	ArgumentList	prjDir		5602539	1					
ANR	5602866	Argument	prjDir		5602539	0					
ANR	5602867	Identifier	prjDir		5602539	0					
ANR	5602868	ExpressionStatement	free ( prjDir )	200:2:4422:4435	5602539	10	True				
ANR	5602869	CallExpression	free ( prjDir )		5602539	0					
ANR	5602870	Callee	free		5602539	0					
ANR	5602871	Identifier	free		5602539	0					
ANR	5602872	ArgumentList	prjDir		5602539	1					
ANR	5602873	Argument	prjDir		5602539	0					
ANR	5602874	Identifier	prjDir		5602539	0					
ANR	5602875	ExpressionStatement	free ( path )	202:1:4441:4452	5602539	4	True				
ANR	5602876	CallExpression	free ( path )		5602539	0					
ANR	5602877	Callee	free		5602539	0					
ANR	5602878	Identifier	free		5602539	0					
ANR	5602879	ArgumentList	path		5602539	1					
ANR	5602880	Argument	path		5602539	0					
ANR	5602881	Identifier	path		5602539	0					
ANR	5602882	ReturnStatement	return 0 ;	203:1:4455:4463	5602539	5	True				
ANR	5602883	PrimaryExpression	0		5602539	0					
ANR	5602884	ReturnType	R_API int		5602539	1					
ANR	5602885	Identifier	r_core_project_delete		5602539	2					
ANR	5602886	ParameterList	"RCore * core , const char * prjfile"		5602539	3					
ANR	5602887	Parameter	RCore * core	147:32:3033:3043	5602539	0	True				
ANR	5602888	ParameterType	RCore *		5602539	0					
ANR	5602889	Identifier	core		5602539	1					
ANR	5602890	Parameter	const char * prjfile	147:45:3046:3064	5602539	1	True				
ANR	5602891	ParameterType	const char *		5602539	0					
ANR	5602892	Identifier	prjfile		5602539	1					
ANR	5602893	CFGEntryNode	ENTRY		5602539		True				
ANR	5602894	CFGExitNode	EXIT		5602539		True				
ANR	5602895	Symbol	r_file_is_directory		5602539						
ANR	5602896	Symbol	r_str_append		5602539						
ANR	5602897	Symbol	r_core_is_project		5602539						
ANR	5602898	Symbol	rop_d		5602539						
ANR	5602899	Symbol	notes_txt		5602539						
ANR	5602900	Symbol	r_sandbox_enable		5602539						
ANR	5602901	Symbol	f		5602539						
ANR	5602902	Symbol	false		5602539						
ANR	5602903	Symbol	iter		5602539						
ANR	5602904	Symbol	r_str_newf		5602539						
ANR	5602905	Symbol	prjfile		5602539						
ANR	5602906	Symbol	projectScriptPath		5602539						
ANR	5602907	Symbol	core		5602539						
ANR	5602908	Symbol	path		5602539						
ANR	5602909	Symbol	prjDir		5602539						
ANR	5602910	Symbol	R_SYS_DIR		5602539						
ANR	5602911	Symbol	filepath		5602539						
ANR	5602912	Symbol	files		5602539						
ANR	5602913	Symbol	r_file_dirname		5602539						
ANR	5602914	Symbol	strdup		5602539						
ANR	5602915	Symbol	r_file_exists		5602539						
ANR	5602916	Symbol	r_sys_dir		5602539						
ANR	5602917	Function	projectLoadRop	206:0:4468:6790							
ANR	5602918	FunctionDef	"projectLoadRop (RCore * core , const char * prjfile)"		5602917	0					
ANR	5602919	CompoundStatement		206:61:4529:6790	5602917	0					
ANR	5602920	IdentifierDeclStatement	"char * path , * db = NULL , * path_ns ;"	207:1:4532:4564	5602917	0	True				
ANR	5602921	IdentifierDecl	* path		5602917	0					
ANR	5602922	IdentifierDeclType	char *		5602917	0					
ANR	5602923	Identifier	path		5602917	1					
ANR	5602924	IdentifierDecl	* db = NULL		5602917	1					
ANR	5602925	IdentifierDeclType	char *		5602917	0					
ANR	5602926	Identifier	db		5602917	1					
ANR	5602927	AssignmentExpression	* db = NULL		5602917	2		=			
ANR	5602928	Identifier	NULL		5602917	0					
ANR	5602929	Identifier	NULL		5602917	1					
ANR	5602930	IdentifierDecl	* path_ns		5602917	2					
ANR	5602931	IdentifierDeclType	char *		5602917	0					
ANR	5602932	Identifier	path_ns		5602917	1					
ANR	5602933	IdentifierDeclStatement	bool found = 0 ;	208:1:4567:4581	5602917	1	True				
ANR	5602934	IdentifierDecl	found = 0		5602917	0					
ANR	5602935	IdentifierDeclType	bool		5602917	0					
ANR	5602936	Identifier	found		5602917	1					
ANR	5602937	AssignmentExpression	found = 0		5602917	2		=			
ANR	5602938	Identifier	found		5602917	0					
ANR	5602939	PrimaryExpression	0		5602917	1					
ANR	5602940	IdentifierDeclStatement	SdbListIter * it ;	209:1:4584:4599	5602917	2	True				
ANR	5602941	IdentifierDecl	* it		5602917	0					
ANR	5602942	IdentifierDeclType	SdbListIter *		5602917	0					
ANR	5602943	Identifier	it		5602917	1					
ANR	5602944	IdentifierDeclStatement	SdbNs * ns ;	210:1:4602:4611	5602917	3	True				
ANR	5602945	IdentifierDecl	* ns		5602917	0					
ANR	5602946	IdentifierDeclType	SdbNs *		5602917	0					
ANR	5602947	Identifier	ns		5602917	1					
ANR	5602948	IfStatement	if ( ! prjfile || ! * prjfile )		5602917	4					
ANR	5602949	Condition	! prjfile || ! * prjfile	212:5:4619:4639	5602917	0	True				
ANR	5602950	OrExpression	! prjfile || ! * prjfile		5602917	0		||			
ANR	5602951	UnaryOperationExpression	! prjfile		5602917	0					
ANR	5602952	UnaryOperator	!		5602917	0					
ANR	5602953	Identifier	prjfile		5602917	1					
ANR	5602954	UnaryOperationExpression	! * prjfile		5602917	1					
ANR	5602955	UnaryOperator	!		5602917	0					
ANR	5602956	UnaryOperationExpression	* prjfile		5602917	1					
ANR	5602957	UnaryOperator	*		5602917	0					
ANR	5602958	Identifier	prjfile		5602917	1					
ANR	5602959	CompoundStatement		7:28:112:112	5602917	1					
ANR	5602960	ReturnStatement	return false ;	213:2:4646:4658	5602917	0	True				
ANR	5602961	Identifier	false		5602917	0					
ANR	5602962	ElseStatement	else		5602917	0					
ANR	5602963	Statement	if	231:8:5209:5210	5602917	0	True				
ANR	5602964	IdentifierDeclStatement	"Sdb * rop_db = sdb_ns ( core -> sdb , ""rop"" , false ) ;"	216:1:4665:4711	5602917	5	True				
ANR	5602965	IdentifierDecl	"* rop_db = sdb_ns ( core -> sdb , ""rop"" , false )"		5602917	0					
ANR	5602966	IdentifierDeclType	Sdb *		5602917	0					
ANR	5602967	Identifier	rop_db		5602917	1					
ANR	5602968	AssignmentExpression	"* rop_db = sdb_ns ( core -> sdb , ""rop"" , false )"		5602917	2		=			
ANR	5602969	Identifier	rop_db		5602917	0					
ANR	5602970	CallExpression	"sdb_ns ( core -> sdb , ""rop"" , false )"		5602917	1					
ANR	5602971	Callee	sdb_ns		5602917	0					
ANR	5602972	Identifier	sdb_ns		5602917	0					
ANR	5602973	ArgumentList	core -> sdb		5602917	1					
ANR	5602974	Argument	core -> sdb		5602917	0					
ANR	5602975	PtrMemberAccess	core -> sdb		5602917	0					
ANR	5602976	Identifier	core		5602917	0					
ANR	5602977	Identifier	sdb		5602917	1					
ANR	5602978	Argument	"""rop"""		5602917	1					
ANR	5602979	PrimaryExpression	"""rop"""		5602917	0					
ANR	5602980	Argument	false		5602917	2					
ANR	5602981	Identifier	false		5602917	0					
ANR	5602982	IdentifierDeclStatement	"Sdb * nop_db = sdb_ns ( rop_db , ""nop"" , false ) ;"	217:1:4714:4757	5602917	6	True				
ANR	5602983	IdentifierDecl	"* nop_db = sdb_ns ( rop_db , ""nop"" , false )"		5602917	0					
ANR	5602984	IdentifierDeclType	Sdb *		5602917	0					
ANR	5602985	Identifier	nop_db		5602917	1					
ANR	5602986	AssignmentExpression	"* nop_db = sdb_ns ( rop_db , ""nop"" , false )"		5602917	2		=			
ANR	5602987	Identifier	nop_db		5602917	0					
ANR	5602988	CallExpression	"sdb_ns ( rop_db , ""nop"" , false )"		5602917	1					
ANR	5602989	Callee	sdb_ns		5602917	0					
ANR	5602990	Identifier	sdb_ns		5602917	0					
ANR	5602991	ArgumentList	rop_db		5602917	1					
ANR	5602992	Argument	rop_db		5602917	0					
ANR	5602993	Identifier	rop_db		5602917	0					
ANR	5602994	Argument	"""nop"""		5602917	1					
ANR	5602995	PrimaryExpression	"""nop"""		5602917	0					
ANR	5602996	Argument	false		5602917	2					
ANR	5602997	Identifier	false		5602917	0					
ANR	5602998	IdentifierDeclStatement	"Sdb * mov_db = sdb_ns ( rop_db , ""mov"" , false ) ;"	218:1:4760:4803	5602917	7	True				
ANR	5602999	IdentifierDecl	"* mov_db = sdb_ns ( rop_db , ""mov"" , false )"		5602917	0					
ANR	5603000	IdentifierDeclType	Sdb *		5602917	0					
ANR	5603001	Identifier	mov_db		5602917	1					
ANR	5603002	AssignmentExpression	"* mov_db = sdb_ns ( rop_db , ""mov"" , false )"		5602917	2		=			
ANR	5603003	Identifier	mov_db		5602917	0					
ANR	5603004	CallExpression	"sdb_ns ( rop_db , ""mov"" , false )"		5602917	1					
ANR	5603005	Callee	sdb_ns		5602917	0					
ANR	5603006	Identifier	sdb_ns		5602917	0					
ANR	5603007	ArgumentList	rop_db		5602917	1					
ANR	5603008	Argument	rop_db		5602917	0					
ANR	5603009	Identifier	rop_db		5602917	0					
ANR	5603010	Argument	"""mov"""		5602917	1					
ANR	5603011	PrimaryExpression	"""mov"""		5602917	0					
ANR	5603012	Argument	false		5602917	2					
ANR	5603013	Identifier	false		5602917	0					
ANR	5603014	IdentifierDeclStatement	"Sdb * const_db = sdb_ns ( rop_db , ""const"" , false ) ;"	219:1:4806:4853	5602917	8	True				
ANR	5603015	IdentifierDecl	"* const_db = sdb_ns ( rop_db , ""const"" , false )"		5602917	0					
ANR	5603016	IdentifierDeclType	Sdb *		5602917	0					
ANR	5603017	Identifier	const_db		5602917	1					
ANR	5603018	AssignmentExpression	"* const_db = sdb_ns ( rop_db , ""const"" , false )"		5602917	2		=			
ANR	5603019	Identifier	const_db		5602917	0					
ANR	5603020	CallExpression	"sdb_ns ( rop_db , ""const"" , false )"		5602917	1					
ANR	5603021	Callee	sdb_ns		5602917	0					
ANR	5603022	Identifier	sdb_ns		5602917	0					
ANR	5603023	ArgumentList	rop_db		5602917	1					
ANR	5603024	Argument	rop_db		5602917	0					
ANR	5603025	Identifier	rop_db		5602917	0					
ANR	5603026	Argument	"""const"""		5602917	1					
ANR	5603027	PrimaryExpression	"""const"""		5602917	0					
ANR	5603028	Argument	false		5602917	2					
ANR	5603029	Identifier	false		5602917	0					
ANR	5603030	IdentifierDeclStatement	"Sdb * arithm_db = sdb_ns ( rop_db , ""arithm"" , false ) ;"	220:1:4856:4905	5602917	9	True				
ANR	5603031	IdentifierDecl	"* arithm_db = sdb_ns ( rop_db , ""arithm"" , false )"		5602917	0					
ANR	5603032	IdentifierDeclType	Sdb *		5602917	0					
ANR	5603033	Identifier	arithm_db		5602917	1					
ANR	5603034	AssignmentExpression	"* arithm_db = sdb_ns ( rop_db , ""arithm"" , false )"		5602917	2		=			
ANR	5603035	Identifier	arithm_db		5602917	0					
ANR	5603036	CallExpression	"sdb_ns ( rop_db , ""arithm"" , false )"		5602917	1					
ANR	5603037	Callee	sdb_ns		5602917	0					
ANR	5603038	Identifier	sdb_ns		5602917	0					
ANR	5603039	ArgumentList	rop_db		5602917	1					
ANR	5603040	Argument	rop_db		5602917	0					
ANR	5603041	Identifier	rop_db		5602917	0					
ANR	5603042	Argument	"""arithm"""		5602917	1					
ANR	5603043	PrimaryExpression	"""arithm"""		5602917	0					
ANR	5603044	Argument	false		5602917	2					
ANR	5603045	Identifier	false		5602917	0					
ANR	5603046	IdentifierDeclStatement	"Sdb * arithmct_db = sdb_ns ( rop_db , ""arithm_ct"" , false ) ;"	221:1:4908:4962	5602917	10	True				
ANR	5603047	IdentifierDecl	"* arithmct_db = sdb_ns ( rop_db , ""arithm_ct"" , false )"		5602917	0					
ANR	5603048	IdentifierDeclType	Sdb *		5602917	0					
ANR	5603049	Identifier	arithmct_db		5602917	1					
ANR	5603050	AssignmentExpression	"* arithmct_db = sdb_ns ( rop_db , ""arithm_ct"" , false )"		5602917	2		=			
ANR	5603051	Identifier	arithmct_db		5602917	0					
ANR	5603052	CallExpression	"sdb_ns ( rop_db , ""arithm_ct"" , false )"		5602917	1					
ANR	5603053	Callee	sdb_ns		5602917	0					
ANR	5603054	Identifier	sdb_ns		5602917	0					
ANR	5603055	ArgumentList	rop_db		5602917	1					
ANR	5603056	Argument	rop_db		5602917	0					
ANR	5603057	Identifier	rop_db		5602917	0					
ANR	5603058	Argument	"""arithm_ct"""		5602917	1					
ANR	5603059	PrimaryExpression	"""arithm_ct"""		5602917	0					
ANR	5603060	Argument	false		5602917	2					
ANR	5603061	Identifier	false		5602917	0					
ANR	5603062	IdentifierDeclStatement	"char * rcPath = projectScriptPath ( core , prjfile ) ;"	223:1:4966:5014	5602917	11	True				
ANR	5603063	IdentifierDecl	"* rcPath = projectScriptPath ( core , prjfile )"		5602917	0					
ANR	5603064	IdentifierDeclType	char *		5602917	0					
ANR	5603065	Identifier	rcPath		5602917	1					
ANR	5603066	AssignmentExpression	"* rcPath = projectScriptPath ( core , prjfile )"		5602917	2		=			
ANR	5603067	Identifier	rcPath		5602917	0					
ANR	5603068	CallExpression	"projectScriptPath ( core , prjfile )"		5602917	1					
ANR	5603069	Callee	projectScriptPath		5602917	0					
ANR	5603070	Identifier	projectScriptPath		5602917	0					
ANR	5603071	ArgumentList	core		5602917	1					
ANR	5603072	Argument	core		5602917	0					
ANR	5603073	Identifier	core		5602917	0					
ANR	5603074	Argument	prjfile		5602917	1					
ANR	5603075	Identifier	prjfile		5602917	0					
ANR	5603076	IdentifierDeclStatement	char * prjDir = r_file_dirname ( rcPath ) ;	224:1:5017:5055	5602917	12	True				
ANR	5603077	IdentifierDecl	* prjDir = r_file_dirname ( rcPath )		5602917	0					
ANR	5603078	IdentifierDeclType	char *		5602917	0					
ANR	5603079	Identifier	prjDir		5602917	1					
ANR	5603080	AssignmentExpression	* prjDir = r_file_dirname ( rcPath )		5602917	2		=			
ANR	5603081	Identifier	prjDir		5602917	0					
ANR	5603082	CallExpression	r_file_dirname ( rcPath )		5602917	1					
ANR	5603083	Callee	r_file_dirname		5602917	0					
ANR	5603084	Identifier	r_file_dirname		5602917	0					
ANR	5603085	ArgumentList	rcPath		5602917	1					
ANR	5603086	Argument	rcPath		5602917	0					
ANR	5603087	Identifier	rcPath		5602917	0					
ANR	5603088	Statement	if	226:1:5059:5060	5602917	13	True				
ANR	5603089	Statement	(	226:4:5062:5062	5602917	14	True				
ANR	5603090	Statement	r_str_endswith	226:5:5063:5076	5602917	15	True				
ANR	5603091	Statement	(	226:20:5078:5078	5602917	16	True				
ANR	5603092	Statement	prjfile	226:21:5079:5085	5602917	17	True				
ANR	5603093	Statement	","	226:28:5086:5086	5602917	18	True				
ANR	5603094	Statement	R_SYS_DIR	226:30:5088:5096	5602917	19	True				
ANR	5603095	Statement	"""rc"""	226:40:5098:5101	5602917	20	True				
ANR	5603096	Statement	)	226:44:5102:5102	5602917	21	True				
ANR	5603097	Statement	)	226:45:5103:5103	5602917	22	True				
ANR	5603098	CompoundStatement		21:47:575:575	5602917	23					
ANR	5603099	ExpressionStatement	"eprintf ( ""ENDS WITH\\n"" )"	228:2:5118:5141	5602917	0	True				
ANR	5603100	CallExpression	"eprintf ( ""ENDS WITH\\n"" )"		5602917	0					
ANR	5603101	Callee	eprintf		5602917	0					
ANR	5603102	Identifier	eprintf		5602917	0					
ANR	5603103	ArgumentList	"""ENDS WITH\\n"""		5602917	1					
ANR	5603104	Argument	"""ENDS WITH\\n"""		5602917	0					
ANR	5603105	PrimaryExpression	"""ENDS WITH\\n"""		5602917	0					
ANR	5603106	ExpressionStatement	path = strdup ( prjfile )	229:2:5145:5168	5602917	1	True				
ANR	5603107	AssignmentExpression	path = strdup ( prjfile )		5602917	0		=			
ANR	5603108	Identifier	path		5602917	0					
ANR	5603109	CallExpression	strdup ( prjfile )		5602917	1					
ANR	5603110	Callee	strdup		5602917	0					
ANR	5603111	Identifier	strdup		5602917	0					
ANR	5603112	ArgumentList	prjfile		5602917	1					
ANR	5603113	Argument	prjfile		5602917	0					
ANR	5603114	Identifier	prjfile		5602917	0					
ANR	5603115	ExpressionStatement	path [ strlen ( path ) - 3 ] = 0	230:2:5172:5199	5602917	2	True				
ANR	5603116	AssignmentExpression	path [ strlen ( path ) - 3 ] = 0		5602917	0		=			
ANR	5603117	ArrayIndexing	path [ strlen ( path ) - 3 ]		5602917	0					
ANR	5603118	Identifier	path		5602917	0					
ANR	5603119	AdditiveExpression	strlen ( path ) - 3		5602917	1		-			
ANR	5603120	CallExpression	strlen ( path )		5602917	0					
ANR	5603121	Callee	strlen		5602917	0					
ANR	5603122	Identifier	strlen		5602917	0					
ANR	5603123	ArgumentList	path		5602917	1					
ANR	5603124	Argument	path		5602917	0					
ANR	5603125	Identifier	path		5602917	0					
ANR	5603126	PrimaryExpression	3		5602917	1					
ANR	5603127	PrimaryExpression	0		5602917	1					
ANR	5603128	Statement	(	231:11:5212:5212	5602917	24	True				
ANR	5603129	Statement	r_file_fexists	231:12:5213:5226	5602917	25	True				
ANR	5603130	Statement	(	231:27:5228:5228	5602917	26	True				
ANR	5603131	Statement	"""%s"""	231:28:5229:5232	5602917	27	True				
ANR	5603132	Statement	R_SYS_DIR	231:33:5234:5242	5602917	28	True				
ANR	5603133	Statement	"""rc"""	231:43:5244:5247	5602917	29	True				
ANR	5603134	Statement	","	231:47:5248:5248	5602917	30	True				
ANR	5603135	Statement	prjDir	231:49:5250:5255	5602917	31	True				
ANR	5603136	Statement	","	231:55:5256:5256	5602917	32	True				
ANR	5603137	Statement	prjfile	231:57:5258:5264	5602917	33	True				
ANR	5603138	Statement	)	231:64:5265:5265	5602917	34	True				
ANR	5603139	Statement	)	231:65:5266:5266	5602917	35	True				
ANR	5603140	CompoundStatement		26:67:738:738	5602917	36					
ANR	5603141	Statement	path	232:2:5272:5275	5602917	0	True				
ANR	5603142	Statement	=	232:7:5277:5277	5602917	1	True				
ANR	5603143	Statement	r_str_newf	232:9:5279:5288	5602917	2	True				
ANR	5603144	Statement	(	232:20:5290:5290	5602917	3	True				
ANR	5603145	Statement	"""%s"""	232:21:5291:5294	5602917	4	True				
ANR	5603146	Statement	R_SYS_DIR	232:26:5296:5304	5602917	5	True				
ANR	5603147	Statement	","	232:35:5305:5305	5602917	6	True				
ANR	5603148	Statement	prjDir	232:37:5307:5312	5602917	7	True				
ANR	5603149	Statement	","	232:43:5313:5313	5602917	8	True				
ANR	5603150	Statement	prjfile	232:45:5315:5321	5602917	9	True				
ANR	5603151	Statement	)	232:52:5322:5322	5602917	10	True				
ANR	5603152	ExpressionStatement		232:53:5323:5323	5602917	11	True				
ANR	5603153	ReturnType	static bool		5602917	1					
ANR	5603154	Identifier	projectLoadRop		5602917	2					
ANR	5603155	ParameterList	"RCore * core , const char * prjfile"		5602917	3					
ANR	5603156	Parameter	RCore * core	206:27:4495:4505	5602917	0	True				
ANR	5603157	ParameterType	RCore *		5602917	0					
ANR	5603158	Identifier	core		5602917	1					
ANR	5603159	Parameter	const char * prjfile	206:40:4508:4526	5602917	1	True				
ANR	5603160	ParameterType	const char *		5602917	0					
ANR	5603161	Identifier	prjfile		5602917	1					
ANR	5603162	CFGEntryNode	ENTRY		5602917		True				
ANR	5603163	CFGExitNode	EXIT		5602917		True				
ANR	5603164	Symbol	ns		5602917						
ANR	5603165	Symbol	core -> sdb		5602917						
ANR	5603166	Symbol	* core		5602917						
ANR	5603167	Symbol	* prjfile		5602917						
ANR	5603168	Symbol	path_ns		5602917						
ANR	5603169	Symbol	path		5602917						
ANR	5603170	Symbol	strlen		5602917						
ANR	5603171	Symbol	found		5602917						
ANR	5603172	Symbol	prjDir		5602917						
ANR	5603173	Symbol	rcPath		5602917						
ANR	5603174	Symbol	mov_db		5602917						
ANR	5603175	Symbol	r_file_dirname		5602917						
ANR	5603176	Symbol	arithm_db		5602917						
ANR	5603177	Symbol	NULL		5602917						
ANR	5603178	Symbol	false		5602917						
ANR	5603179	Symbol	it		5602917						
ANR	5603180	Symbol	nop_db		5602917						
ANR	5603181	Symbol	prjfile		5602917						
ANR	5603182	Symbol	arithmct_db		5602917						
ANR	5603183	Symbol	projectScriptPath		5602917						
ANR	5603184	Symbol	core		5602917						
ANR	5603185	Symbol	rop_db		5602917						
ANR	5603186	Symbol	* strlen		5602917						
ANR	5603187	Symbol	* path		5602917						
ANR	5603188	Symbol	strdup		5602917						
ANR	5603189	Symbol	const_db		5602917						
ANR	5603190	Symbol	db		5602917						
ANR	5603191	Symbol	sdb_ns		5602917						
ANR	5603192	Function	r_core_project_execute_cmds	307:0:6793:7395							
ANR	5603193	FunctionDef	"r_core_project_execute_cmds (RCore * core , const char * prjfile)"		5603192	0					
ANR	5603194	CompoundStatement		307:73:6866:7395	5603192	0					
ANR	5603195	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , prjfile ) ;"	308:1:6869:6922	5603192	0	True				
ANR	5603196	IdentifierDecl	"* str = r_core_project_notes_file ( core , prjfile )"		5603192	0					
ANR	5603197	IdentifierDeclType	char *		5603192	0					
ANR	5603198	Identifier	str		5603192	1					
ANR	5603199	AssignmentExpression	"* str = r_core_project_notes_file ( core , prjfile )"		5603192	2		=			
ANR	5603200	Identifier	str		5603192	0					
ANR	5603201	CallExpression	"r_core_project_notes_file ( core , prjfile )"		5603192	1					
ANR	5603202	Callee	r_core_project_notes_file		5603192	0					
ANR	5603203	Identifier	r_core_project_notes_file		5603192	0					
ANR	5603204	ArgumentList	core		5603192	1					
ANR	5603205	Argument	core		5603192	0					
ANR	5603206	Identifier	core		5603192	0					
ANR	5603207	Argument	prjfile		5603192	1					
ANR	5603208	Identifier	prjfile		5603192	0					
ANR	5603209	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	309:1:6925:6962	5603192	1	True				
ANR	5603210	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		5603192	0					
ANR	5603211	IdentifierDeclType	char *		5603192	0					
ANR	5603212	Identifier	data		5603192	1					
ANR	5603213	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		5603192	2		=			
ANR	5603214	Identifier	data		5603192	0					
ANR	5603215	CallExpression	"r_file_slurp ( str , NULL )"		5603192	1					
ANR	5603216	Callee	r_file_slurp		5603192	0					
ANR	5603217	Identifier	r_file_slurp		5603192	0					
ANR	5603218	ArgumentList	str		5603192	1					
ANR	5603219	Argument	str		5603192	0					
ANR	5603220	Identifier	str		5603192	0					
ANR	5603221	Argument	NULL		5603192	1					
ANR	5603222	Identifier	NULL		5603192	0					
ANR	5603223	IfStatement	if ( ! data )		5603192	2					
ANR	5603224	Condition	! data	310:5:6969:6973	5603192	0	True				
ANR	5603225	UnaryOperationExpression	! data		5603192	0					
ANR	5603226	UnaryOperator	!		5603192	0					
ANR	5603227	Identifier	data		5603192	1					
ANR	5603228	CompoundStatement		4:12:109:109	5603192	1					
ANR	5603229	ExpressionStatement	free ( str )	311:2:6980:6990	5603192	0	True				
ANR	5603230	CallExpression	free ( str )		5603192	0					
ANR	5603231	Callee	free		5603192	0					
ANR	5603232	Identifier	free		5603192	0					
ANR	5603233	ArgumentList	str		5603192	1					
ANR	5603234	Argument	str		5603192	0					
ANR	5603235	Identifier	str		5603192	0					
ANR	5603236	ReturnStatement	return ;	312:2:6994:7000	5603192	1	True				
ANR	5603237	IdentifierDeclStatement	Output out ;	314:1:7006:7016	5603192	3	True				
ANR	5603238	IdentifierDecl	out		5603192	0					
ANR	5603239	IdentifierDeclType	Output		5603192	0					
ANR	5603240	Identifier	out		5603192	1					
ANR	5603241	ExpressionStatement	out . fout = NULL	315:1:7019:7034	5603192	4	True				
ANR	5603242	AssignmentExpression	out . fout = NULL		5603192	0		=			
ANR	5603243	MemberAccess	out . fout		5603192	0					
ANR	5603244	Identifier	out		5603192	0					
ANR	5603245	Identifier	fout		5603192	1					
ANR	5603246	Identifier	NULL		5603192	1					
ANR	5603247	ExpressionStatement	out . cout = r_strbuf_new ( NULL )	316:1:7037:7067	5603192	5	True				
ANR	5603248	AssignmentExpression	out . cout = r_strbuf_new ( NULL )		5603192	0		=			
ANR	5603249	MemberAccess	out . cout		5603192	0					
ANR	5603250	Identifier	out		5603192	0					
ANR	5603251	Identifier	cout		5603192	1					
ANR	5603252	CallExpression	r_strbuf_new ( NULL )		5603192	1					
ANR	5603253	Callee	r_strbuf_new		5603192	0					
ANR	5603254	Identifier	r_strbuf_new		5603192	0					
ANR	5603255	ArgumentList	NULL		5603192	1					
ANR	5603256	Argument	NULL		5603192	0					
ANR	5603257	Identifier	NULL		5603192	0					
ANR	5603258	ExpressionStatement	r_strbuf_init ( out . cout )	317:1:7070:7094	5603192	6	True				
ANR	5603259	CallExpression	r_strbuf_init ( out . cout )		5603192	0					
ANR	5603260	Callee	r_strbuf_init		5603192	0					
ANR	5603261	Identifier	r_strbuf_init		5603192	0					
ANR	5603262	ArgumentList	out . cout		5603192	1					
ANR	5603263	Argument	out . cout		5603192	0					
ANR	5603264	MemberAccess	out . cout		5603192	0					
ANR	5603265	Identifier	out		5603192	0					
ANR	5603266	Identifier	cout		5603192	1					
ANR	5603267	IdentifierDeclStatement	struct Proc proc ;	318:1:7097:7113	5603192	7	True				
ANR	5603268	IdentifierDecl	proc		5603192	0					
ANR	5603269	IdentifierDeclType	struct Proc		5603192	0					
ANR	5603270	Identifier	proc		5603192	1					
ANR	5603271	ExpressionStatement	"spp_proc_set ( & proc , ""spp"" , 1 )"	319:1:7116:7146	5603192	8	True				
ANR	5603272	CallExpression	"spp_proc_set ( & proc , ""spp"" , 1 )"		5603192	0					
ANR	5603273	Callee	spp_proc_set		5603192	0					
ANR	5603274	Identifier	spp_proc_set		5603192	0					
ANR	5603275	ArgumentList	& proc		5603192	1					
ANR	5603276	Argument	& proc		5603192	0					
ANR	5603277	UnaryOperationExpression	& proc		5603192	0					
ANR	5603278	UnaryOperator	&		5603192	0					
ANR	5603279	Identifier	proc		5603192	1					
ANR	5603280	Argument	"""spp"""		5603192	1					
ANR	5603281	PrimaryExpression	"""spp"""		5603192	0					
ANR	5603282	Argument	1		5603192	2					
ANR	5603283	PrimaryExpression	1		5603192	0					
ANR	5603284	ExpressionStatement	"spp_eval ( data , & out )"	320:1:7149:7170	5603192	9	True				
ANR	5603285	CallExpression	"spp_eval ( data , & out )"		5603192	0					
ANR	5603286	Callee	spp_eval		5603192	0					
ANR	5603287	Identifier	spp_eval		5603192	0					
ANR	5603288	ArgumentList	data		5603192	1					
ANR	5603289	Argument	data		5603192	0					
ANR	5603290	Identifier	data		5603192	0					
ANR	5603291	Argument	& out		5603192	1					
ANR	5603292	UnaryOperationExpression	& out		5603192	0					
ANR	5603293	UnaryOperator	&		5603192	0					
ANR	5603294	Identifier	out		5603192	1					
ANR	5603295	ExpressionStatement	free ( data )	321:1:7173:7184	5603192	10	True				
ANR	5603296	CallExpression	free ( data )		5603192	0					
ANR	5603297	Callee	free		5603192	0					
ANR	5603298	Identifier	free		5603192	0					
ANR	5603299	ArgumentList	data		5603192	1					
ANR	5603300	Argument	data		5603192	0					
ANR	5603301	Identifier	data		5603192	0					
ANR	5603302	ExpressionStatement	data = strdup ( r_strbuf_get ( out . cout ) )	322:1:7187:7226	5603192	11	True				
ANR	5603303	AssignmentExpression	data = strdup ( r_strbuf_get ( out . cout ) )		5603192	0		=			
ANR	5603304	Identifier	data		5603192	0					
ANR	5603305	CallExpression	strdup ( r_strbuf_get ( out . cout ) )		5603192	1					
ANR	5603306	Callee	strdup		5603192	0					
ANR	5603307	Identifier	strdup		5603192	0					
ANR	5603308	ArgumentList	r_strbuf_get ( out . cout )		5603192	1					
ANR	5603309	Argument	r_strbuf_get ( out . cout )		5603192	0					
ANR	5603310	CallExpression	r_strbuf_get ( out . cout )		5603192	0					
ANR	5603311	Callee	r_strbuf_get		5603192	0					
ANR	5603312	Identifier	r_strbuf_get		5603192	0					
ANR	5603313	ArgumentList	out . cout		5603192	1					
ANR	5603314	Argument	out . cout		5603192	0					
ANR	5603315	MemberAccess	out . cout		5603192	0					
ANR	5603316	Identifier	out		5603192	0					
ANR	5603317	Identifier	cout		5603192	1					
ANR	5603318	IdentifierDeclStatement	"char * bol = strtok ( data , ""\\n"" ) ;"	323:1:7229:7260	5603192	12	True				
ANR	5603319	IdentifierDecl	"* bol = strtok ( data , ""\\n"" )"		5603192	0					
ANR	5603320	IdentifierDeclType	char *		5603192	0					
ANR	5603321	Identifier	bol		5603192	1					
ANR	5603322	AssignmentExpression	"* bol = strtok ( data , ""\\n"" )"		5603192	2		=			
ANR	5603323	Identifier	bol		5603192	0					
ANR	5603324	CallExpression	"strtok ( data , ""\\n"" )"		5603192	1					
ANR	5603325	Callee	strtok		5603192	0					
ANR	5603326	Identifier	strtok		5603192	0					
ANR	5603327	ArgumentList	data		5603192	1					
ANR	5603328	Argument	data		5603192	0					
ANR	5603329	Identifier	data		5603192	0					
ANR	5603330	Argument	"""\\n"""		5603192	1					
ANR	5603331	PrimaryExpression	"""\\n"""		5603192	0					
ANR	5603332	WhileStatement	while ( bol )		5603192	13					
ANR	5603333	Condition	bol	324:8:7270:7272	5603192	0	True				
ANR	5603334	Identifier	bol		5603192	0					
ANR	5603335	CompoundStatement		18:13:408:408	5603192	1					
ANR	5603336	IfStatement	if ( bol [ 0 ] == ':' )		5603192	0					
ANR	5603337	Condition	bol [ 0 ] == ':'	325:6:7283:7295	5603192	0	True				
ANR	5603338	EqualityExpression	bol [ 0 ] == ':'		5603192	0		==			
ANR	5603339	ArrayIndexing	bol [ 0 ]		5603192	0					
ANR	5603340	Identifier	bol		5603192	0					
ANR	5603341	PrimaryExpression	0		5603192	1					
ANR	5603342	PrimaryExpression	':'		5603192	1					
ANR	5603343	CompoundStatement		19:21:431:431	5603192	1					
ANR	5603344	ExpressionStatement	"r_core_cmd0 ( core , bol + 1 )"	326:3:7303:7330	5603192	0	True				
ANR	5603345	CallExpression	"r_core_cmd0 ( core , bol + 1 )"		5603192	0					
ANR	5603346	Callee	r_core_cmd0		5603192	0					
ANR	5603347	Identifier	r_core_cmd0		5603192	0					
ANR	5603348	ArgumentList	core		5603192	1					
ANR	5603349	Argument	core		5603192	0					
ANR	5603350	Identifier	core		5603192	0					
ANR	5603351	Argument	bol + 1		5603192	1					
ANR	5603352	AdditiveExpression	bol + 1		5603192	0		+			
ANR	5603353	Identifier	bol		5603192	0					
ANR	5603354	PrimaryExpression	1		5603192	1					
ANR	5603355	ExpressionStatement	"bol = strtok ( NULL , ""\\n"" )"	328:2:7338:7363	5603192	1	True				
ANR	5603356	AssignmentExpression	"bol = strtok ( NULL , ""\\n"" )"		5603192	0		=			
ANR	5603357	Identifier	bol		5603192	0					
ANR	5603358	CallExpression	"strtok ( NULL , ""\\n"" )"		5603192	1					
ANR	5603359	Callee	strtok		5603192	0					
ANR	5603360	Identifier	strtok		5603192	0					
ANR	5603361	ArgumentList	NULL		5603192	1					
ANR	5603362	Argument	NULL		5603192	0					
ANR	5603363	Identifier	NULL		5603192	0					
ANR	5603364	Argument	"""\\n"""		5603192	1					
ANR	5603365	PrimaryExpression	"""\\n"""		5603192	0					
ANR	5603366	ExpressionStatement	free ( data )	330:1:7369:7380	5603192	14	True				
ANR	5603367	CallExpression	free ( data )		5603192	0					
ANR	5603368	Callee	free		5603192	0					
ANR	5603369	Identifier	free		5603192	0					
ANR	5603370	ArgumentList	data		5603192	1					
ANR	5603371	Argument	data		5603192	0					
ANR	5603372	Identifier	data		5603192	0					
ANR	5603373	ExpressionStatement	free ( str )	331:1:7383:7393	5603192	15	True				
ANR	5603374	CallExpression	free ( str )		5603192	0					
ANR	5603375	Callee	free		5603192	0					
ANR	5603376	Identifier	free		5603192	0					
ANR	5603377	ArgumentList	str		5603192	1					
ANR	5603378	Argument	str		5603192	0					
ANR	5603379	Identifier	str		5603192	0					
ANR	5603380	ReturnType	R_API void		5603192	1					
ANR	5603381	Identifier	r_core_project_execute_cmds		5603192	2					
ANR	5603382	ParameterList	"RCore * core , const char * prjfile"		5603192	3					
ANR	5603383	Parameter	RCore * core	307:39:6832:6842	5603192	0	True				
ANR	5603384	ParameterType	RCore *		5603192	0					
ANR	5603385	Identifier	core		5603192	1					
ANR	5603386	Parameter	const char * prjfile	307:52:6845:6863	5603192	1	True				
ANR	5603387	ParameterType	const char *		5603192	0					
ANR	5603388	Identifier	prjfile		5603192	1					
ANR	5603389	CFGEntryNode	ENTRY		5603192		True				
ANR	5603390	CFGExitNode	EXIT		5603192		True				
ANR	5603391	Symbol	r_file_slurp		5603192						
ANR	5603392	Symbol	proc		5603192						
ANR	5603393	Symbol	NULL		5603192						
ANR	5603394	Symbol	r_strbuf_new		5603192						
ANR	5603395	Symbol	data		5603192						
ANR	5603396	Symbol	strtok		5603192						
ANR	5603397	Symbol	prjfile		5603192						
ANR	5603398	Symbol	out . fout		5603192						
ANR	5603399	Symbol	out		5603192						
ANR	5603400	Symbol	str		5603192						
ANR	5603401	Symbol	out . cout		5603192						
ANR	5603402	Symbol	core		5603192						
ANR	5603403	Symbol	& out		5603192						
ANR	5603404	Symbol	r_strbuf_get		5603192						
ANR	5603405	Symbol	* bol		5603192						
ANR	5603406	Symbol	strdup		5603192						
ANR	5603407	Symbol	bol		5603192						
ANR	5603408	Symbol	r_core_project_notes_file		5603192						
ANR	5603409	Symbol	& proc		5603192						
ANR	5603410	ClassDef	<unnamed>	336:8:7429:7497							
ANR	5603411	DeclStmt									
ANR	5603412	Decl							RCore	RCore *	core
ANR	5603413	DeclStmt									
ANR	5603414	Decl							char	char *	prjName
ANR	5603415	DeclStmt									
ANR	5603416	Decl							char	char *	rcPath
ANR	5603417	DeclStmt									
ANR	5603418	Decl									ProjectState
ANR	5603419	Function	projectLoadBackground	342:0:7500:7723							
ANR	5603420	FunctionDef	projectLoadBackground (RThread * th)		5603419	0					
ANR	5603421	CompoundStatement		342:61:7561:7723	5603419	0					
ANR	5603422	IdentifierDeclStatement	ProjectState * ps = th -> user ;	343:1:7564:7591	5603419	0	True				
ANR	5603423	IdentifierDecl	* ps = th -> user		5603419	0					
ANR	5603424	IdentifierDeclType	ProjectState *		5603419	0					
ANR	5603425	Identifier	ps		5603419	1					
ANR	5603426	AssignmentExpression	* ps = th -> user		5603419	2		=			
ANR	5603427	Identifier	ps		5603419	0					
ANR	5603428	PtrMemberAccess	th -> user		5603419	1					
ANR	5603429	Identifier	th		5603419	0					
ANR	5603430	Identifier	user		5603419	1					
ANR	5603431	ExpressionStatement	"r_core_project_load ( ps -> core , ps -> prjName , ps -> rcPath )"	344:1:7594:7649	5603419	1	True				
ANR	5603432	CallExpression	"r_core_project_load ( ps -> core , ps -> prjName , ps -> rcPath )"		5603419	0					
ANR	5603433	Callee	r_core_project_load		5603419	0					
ANR	5603434	Identifier	r_core_project_load		5603419	0					
ANR	5603435	ArgumentList	ps -> core		5603419	1					
ANR	5603436	Argument	ps -> core		5603419	0					
ANR	5603437	PtrMemberAccess	ps -> core		5603419	0					
ANR	5603438	Identifier	ps		5603419	0					
ANR	5603439	Identifier	core		5603419	1					
ANR	5603440	Argument	ps -> prjName		5603419	1					
ANR	5603441	PtrMemberAccess	ps -> prjName		5603419	0					
ANR	5603442	Identifier	ps		5603419	0					
ANR	5603443	Identifier	prjName		5603419	1					
ANR	5603444	Argument	ps -> rcPath		5603419	2					
ANR	5603445	PtrMemberAccess	ps -> rcPath		5603419	0					
ANR	5603446	Identifier	ps		5603419	0					
ANR	5603447	Identifier	rcPath		5603419	1					
ANR	5603448	ExpressionStatement	free ( ps -> prjName )	345:1:7652:7670	5603419	2	True				
ANR	5603449	CallExpression	free ( ps -> prjName )		5603419	0					
ANR	5603450	Callee	free		5603419	0					
ANR	5603451	Identifier	free		5603419	0					
ANR	5603452	ArgumentList	ps -> prjName		5603419	1					
ANR	5603453	Argument	ps -> prjName		5603419	0					
ANR	5603454	PtrMemberAccess	ps -> prjName		5603419	0					
ANR	5603455	Identifier	ps		5603419	0					
ANR	5603456	Identifier	prjName		5603419	1					
ANR	5603457	ExpressionStatement	free ( ps -> rcPath )	346:1:7673:7690	5603419	3	True				
ANR	5603458	CallExpression	free ( ps -> rcPath )		5603419	0					
ANR	5603459	Callee	free		5603419	0					
ANR	5603460	Identifier	free		5603419	0					
ANR	5603461	ArgumentList	ps -> rcPath		5603419	1					
ANR	5603462	Argument	ps -> rcPath		5603419	0					
ANR	5603463	PtrMemberAccess	ps -> rcPath		5603419	0					
ANR	5603464	Identifier	ps		5603419	0					
ANR	5603465	Identifier	rcPath		5603419	1					
ANR	5603466	ExpressionStatement	free ( ps )	347:1:7693:7702	5603419	4	True				
ANR	5603467	CallExpression	free ( ps )		5603419	0					
ANR	5603468	Callee	free		5603419	0					
ANR	5603469	Identifier	free		5603419	0					
ANR	5603470	ArgumentList	ps		5603419	1					
ANR	5603471	Argument	ps		5603419	0					
ANR	5603472	Identifier	ps		5603419	0					
ANR	5603473	ReturnStatement	return R_TH_STOP ;	348:1:7705:7721	5603419	5	True				
ANR	5603474	Identifier	R_TH_STOP		5603419	0					
ANR	5603475	ReturnType	static RThreadFunctionRet		5603419	1					
ANR	5603476	Identifier	projectLoadBackground		5603419	2					
ANR	5603477	ParameterList	RThread * th		5603419	3					
ANR	5603478	Parameter	RThread * th	342:48:7548:7558	5603419	0	True				
ANR	5603479	ParameterType	RThread *		5603419	0					
ANR	5603480	Identifier	th		5603419	1					
ANR	5603481	CFGEntryNode	ENTRY		5603419		True				
ANR	5603482	CFGExitNode	EXIT		5603419		True				
ANR	5603483	Symbol	ps		5603419						
ANR	5603484	Symbol	ps -> rcPath		5603419						
ANR	5603485	Symbol	th		5603419						
ANR	5603486	Symbol	ps -> prjName		5603419						
ANR	5603487	Symbol	R_TH_STOP		5603419						
ANR	5603488	Symbol	th -> user		5603419						
ANR	5603489	Symbol	* th		5603419						
ANR	5603490	Symbol	* ps		5603419						
ANR	5603491	Symbol	ps -> core		5603419						
ANR	5603492	Function	r_core_project_load_bg	351:0:7726:8224							
ANR	5603493	FunctionDef	"r_core_project_load_bg (RCore * core , const char * prjName , const char * rcPath)"		5603492	0					
ANR	5603494	CompoundStatement		351:92:7818:8224	5603492	0					
ANR	5603495	IdentifierDeclStatement	ProjectState * ps = R_NEW ( ProjectState ) ;	352:1:7821:7860	5603492	0	True				
ANR	5603496	IdentifierDecl	* ps = R_NEW ( ProjectState )		5603492	0					
ANR	5603497	IdentifierDeclType	ProjectState *		5603492	0					
ANR	5603498	Identifier	ps		5603492	1					
ANR	5603499	AssignmentExpression	* ps = R_NEW ( ProjectState )		5603492	2		=			
ANR	5603500	Identifier	ps		5603492	0					
ANR	5603501	CallExpression	R_NEW ( ProjectState )		5603492	1					
ANR	5603502	Callee	R_NEW		5603492	0					
ANR	5603503	Identifier	R_NEW		5603492	0					
ANR	5603504	ArgumentList	ProjectState		5603492	1					
ANR	5603505	Argument	ProjectState		5603492	0					
ANR	5603506	Identifier	ProjectState		5603492	0					
ANR	5603507	ExpressionStatement	ps -> core = core	353:1:7863:7878	5603492	1	True				
ANR	5603508	AssignmentExpression	ps -> core = core		5603492	0		=			
ANR	5603509	PtrMemberAccess	ps -> core		5603492	0					
ANR	5603510	Identifier	ps		5603492	0					
ANR	5603511	Identifier	core		5603492	1					
ANR	5603512	Identifier	core		5603492	1					
ANR	5603513	ExpressionStatement	ps -> prjName = strdup ( prjName )	354:1:7881:7911	5603492	2	True				
ANR	5603514	AssignmentExpression	ps -> prjName = strdup ( prjName )		5603492	0		=			
ANR	5603515	PtrMemberAccess	ps -> prjName		5603492	0					
ANR	5603516	Identifier	ps		5603492	0					
ANR	5603517	Identifier	prjName		5603492	1					
ANR	5603518	CallExpression	strdup ( prjName )		5603492	1					
ANR	5603519	Callee	strdup		5603492	0					
ANR	5603520	Identifier	strdup		5603492	0					
ANR	5603521	ArgumentList	prjName		5603492	1					
ANR	5603522	Argument	prjName		5603492	0					
ANR	5603523	Identifier	prjName		5603492	0					
ANR	5603524	ExpressionStatement	ps -> rcPath = strdup ( rcPath )	355:1:7914:7942	5603492	3	True				
ANR	5603525	AssignmentExpression	ps -> rcPath = strdup ( rcPath )		5603492	0		=			
ANR	5603526	PtrMemberAccess	ps -> rcPath		5603492	0					
ANR	5603527	Identifier	ps		5603492	0					
ANR	5603528	Identifier	rcPath		5603492	1					
ANR	5603529	CallExpression	strdup ( rcPath )		5603492	1					
ANR	5603530	Callee	strdup		5603492	0					
ANR	5603531	Identifier	strdup		5603492	0					
ANR	5603532	ArgumentList	rcPath		5603492	1					
ANR	5603533	Argument	rcPath		5603492	0					
ANR	5603534	Identifier	rcPath		5603492	0					
ANR	5603535	IdentifierDeclStatement	"RThread * th = r_th_new ( projectLoadBackground , ps , false ) ;"	356:1:7945:8002	5603492	4	True				
ANR	5603536	IdentifierDecl	"* th = r_th_new ( projectLoadBackground , ps , false )"		5603492	0					
ANR	5603537	IdentifierDeclType	RThread *		5603492	0					
ANR	5603538	Identifier	th		5603492	1					
ANR	5603539	AssignmentExpression	"* th = r_th_new ( projectLoadBackground , ps , false )"		5603492	2		=			
ANR	5603540	Identifier	th		5603492	0					
ANR	5603541	CallExpression	"r_th_new ( projectLoadBackground , ps , false )"		5603492	1					
ANR	5603542	Callee	r_th_new		5603492	0					
ANR	5603543	Identifier	r_th_new		5603492	0					
ANR	5603544	ArgumentList	projectLoadBackground		5603492	1					
ANR	5603545	Argument	projectLoadBackground		5603492	0					
ANR	5603546	Identifier	projectLoadBackground		5603492	0					
ANR	5603547	Argument	ps		5603492	1					
ANR	5603548	Identifier	ps		5603492	0					
ANR	5603549	Argument	false		5603492	2					
ANR	5603550	Identifier	false		5603492	0					
ANR	5603551	ExpressionStatement	"r_th_start ( th , true )"	357:1:8005:8026	5603492	5	True				
ANR	5603552	CallExpression	"r_th_start ( th , true )"		5603492	0					
ANR	5603553	Callee	r_th_start		5603492	0					
ANR	5603554	Identifier	r_th_start		5603492	0					
ANR	5603555	ArgumentList	th		5603492	1					
ANR	5603556	Argument	th		5603492	0					
ANR	5603557	Identifier	th		5603492	0					
ANR	5603558	Argument	true		5603492	1					
ANR	5603559	Identifier	true		5603492	0					
ANR	5603560	IfStatement	if ( th )		5603492	6					
ANR	5603561	Condition	th	358:5:8033:8034	5603492	0	True				
ANR	5603562	Identifier	th		5603492	0					
ANR	5603563	CompoundStatement		10:2:247:305	5603492	1					
ANR	5603564	IdentifierDeclStatement	char thname [ 16 ] = { 0 } ;	359:2:8041:8062	5603492	0	True				
ANR	5603565	IdentifierDecl	thname [ 16 ] = { 0 }		5603492	0					
ANR	5603566	IdentifierDeclType	char [ 16 ]		5603492	0					
ANR	5603567	Identifier	thname		5603492	1					
ANR	5603568	PrimaryExpression	16		5603492	2					
ANR	5603569	AssignmentExpression	thname [ 16 ] = { 0 }		5603492	3		=			
ANR	5603570	Identifier	thname		5603492	0					
ANR	5603571	InitializerList	0		5603492	1					
ANR	5603572	PrimaryExpression	0		5603492	0					
ANR	5603573	IdentifierDeclStatement	"size_t thlen = R_MIN ( strlen ( prjName ) , sizeof ( thname ) - 1 ) ;"	360:2:8066:8124	5603492	1	True				
ANR	5603574	IdentifierDecl	"thlen = R_MIN ( strlen ( prjName ) , sizeof ( thname ) - 1 )"		5603492	0					
ANR	5603575	IdentifierDeclType	size_t		5603492	0					
ANR	5603576	Identifier	thlen		5603492	1					
ANR	5603577	AssignmentExpression	"thlen = R_MIN ( strlen ( prjName ) , sizeof ( thname ) - 1 )"		5603492	2		=			
ANR	5603578	Identifier	thlen		5603492	0					
ANR	5603579	CallExpression	"R_MIN ( strlen ( prjName ) , sizeof ( thname ) - 1 )"		5603492	1					
ANR	5603580	Callee	R_MIN		5603492	0					
ANR	5603581	Identifier	R_MIN		5603492	0					
ANR	5603582	ArgumentList	strlen ( prjName )		5603492	1					
ANR	5603583	Argument	strlen ( prjName )		5603492	0					
ANR	5603584	CallExpression	strlen ( prjName )		5603492	0					
ANR	5603585	Callee	strlen		5603492	0					
ANR	5603586	Identifier	strlen		5603492	0					
ANR	5603587	ArgumentList	prjName		5603492	1					
ANR	5603588	Argument	prjName		5603492	0					
ANR	5603589	Identifier	prjName		5603492	0					
ANR	5603590	Argument	sizeof ( thname ) - 1		5603492	1					
ANR	5603591	AdditiveExpression	sizeof ( thname ) - 1		5603492	0		-			
ANR	5603592	SizeofExpression	sizeof ( thname )		5603492	0					
ANR	5603593	Sizeof	sizeof		5603492	0					
ANR	5603594	SizeofOperand	thname		5603492	1					
ANR	5603595	PrimaryExpression	1		5603492	1					
ANR	5603596	ExpressionStatement	"strncpy ( thname , prjName , thlen )"	361:2:8128:8160	5603492	2	True				
ANR	5603597	CallExpression	"strncpy ( thname , prjName , thlen )"		5603492	0					
ANR	5603598	Callee	strncpy		5603492	0					
ANR	5603599	Identifier	strncpy		5603492	0					
ANR	5603600	ArgumentList	thname		5603492	1					
ANR	5603601	Argument	thname		5603492	0					
ANR	5603602	Identifier	thname		5603492	0					
ANR	5603603	Argument	prjName		5603492	1					
ANR	5603604	Identifier	prjName		5603492	0					
ANR	5603605	Argument	thlen		5603492	2					
ANR	5603606	Identifier	thlen		5603492	0					
ANR	5603607	ExpressionStatement	thname [ 15 ] = 0	362:2:8164:8178	5603492	3	True				
ANR	5603608	AssignmentExpression	thname [ 15 ] = 0		5603492	0		=			
ANR	5603609	ArrayIndexing	thname [ 15 ]		5603492	0					
ANR	5603610	Identifier	thname		5603492	0					
ANR	5603611	PrimaryExpression	15		5603492	1					
ANR	5603612	PrimaryExpression	0		5603492	1					
ANR	5603613	ExpressionStatement	"r_th_setname ( th , thname )"	363:2:8182:8207	5603492	4	True				
ANR	5603614	CallExpression	"r_th_setname ( th , thname )"		5603492	0					
ANR	5603615	Callee	r_th_setname		5603492	0					
ANR	5603616	Identifier	r_th_setname		5603492	0					
ANR	5603617	ArgumentList	th		5603492	1					
ANR	5603618	Argument	th		5603492	0					
ANR	5603619	Identifier	th		5603492	0					
ANR	5603620	Argument	thname		5603492	1					
ANR	5603621	Identifier	thname		5603492	0					
ANR	5603622	ReturnStatement	return th ;	365:1:8213:8222	5603492	7	True				
ANR	5603623	Identifier	th		5603492	0					
ANR	5603624	ReturnType	R_API RThread *		5603492	1					
ANR	5603625	Identifier	r_core_project_load_bg		5603492	2					
ANR	5603626	ParameterList	"RCore * core , const char * prjName , const char * rcPath"		5603492	3					
ANR	5603627	Parameter	RCore * core	351:38:7764:7774	5603492	0	True				
ANR	5603628	ParameterType	RCore *		5603492	0					
ANR	5603629	Identifier	core		5603492	1					
ANR	5603630	Parameter	const char * prjName	351:51:7777:7795	5603492	1	True				
ANR	5603631	ParameterType	const char *		5603492	0					
ANR	5603632	Identifier	prjName		5603492	1					
ANR	5603633	Parameter	const char * rcPath	351:72:7798:7815	5603492	2	True				
ANR	5603634	ParameterType	const char *		5603492	0					
ANR	5603635	Identifier	rcPath		5603492	1					
ANR	5603636	CFGEntryNode	ENTRY		5603492		True				
ANR	5603637	CFGExitNode	EXIT		5603492		True				
ANR	5603638	Symbol	thname		5603492						
ANR	5603639	Symbol	* thname		5603492						
ANR	5603640	Symbol	ps		5603492						
ANR	5603641	Symbol	false		5603492						
ANR	5603642	Symbol	* ps		5603492						
ANR	5603643	Symbol	ps -> core		5603492						
ANR	5603644	Symbol	R_MIN		5603492						
ANR	5603645	Symbol	r_th_new		5603492						
ANR	5603646	Symbol	prjName		5603492						
ANR	5603647	Symbol	core		5603492						
ANR	5603648	Symbol	strlen		5603492						
ANR	5603649	Symbol	thlen		5603492						
ANR	5603650	Symbol	ps -> rcPath		5603492						
ANR	5603651	Symbol	th		5603492						
ANR	5603652	Symbol	ps -> prjName		5603492						
ANR	5603653	Symbol	rcPath		5603492						
ANR	5603654	Symbol	projectLoadBackground		5603492						
ANR	5603655	Symbol	true		5603492						
ANR	5603656	Symbol	ProjectState		5603492						
ANR	5603657	Symbol	strdup		5603492						
ANR	5603658	Symbol	R_NEW		5603492						
ANR	5603659	Function	getProjectLaddr	370:0:8250:8523							
ANR	5603660	FunctionDef	"getProjectLaddr (RCore * core , const char * prjfile)"		5603659	0					
ANR	5603661	CompoundStatement		370:62:8312:8523	5603659	0					
ANR	5603662	IdentifierDeclStatement	ut64 laddr = 0 ;	371:1:8315:8329	5603659	0	True				
ANR	5603663	IdentifierDecl	laddr = 0		5603659	0					
ANR	5603664	IdentifierDeclType	ut64		5603659	0					
ANR	5603665	Identifier	laddr		5603659	1					
ANR	5603666	AssignmentExpression	laddr = 0		5603659	2		=			
ANR	5603667	Identifier	laddr		5603659	0					
ANR	5603668	PrimaryExpression	0		5603659	1					
ANR	5603669	IdentifierDeclStatement	"char * buf = r_file_slurp ( prjfile , NULL ) ;"	372:1:8332:8372	5603659	1	True				
ANR	5603670	IdentifierDecl	"* buf = r_file_slurp ( prjfile , NULL )"		5603659	0					
ANR	5603671	IdentifierDeclType	char *		5603659	0					
ANR	5603672	Identifier	buf		5603659	1					
ANR	5603673	AssignmentExpression	"* buf = r_file_slurp ( prjfile , NULL )"		5603659	2		=			
ANR	5603674	Identifier	buf		5603659	0					
ANR	5603675	CallExpression	"r_file_slurp ( prjfile , NULL )"		5603659	1					
ANR	5603676	Callee	r_file_slurp		5603659	0					
ANR	5603677	Identifier	r_file_slurp		5603659	0					
ANR	5603678	ArgumentList	prjfile		5603659	1					
ANR	5603679	Argument	prjfile		5603659	0					
ANR	5603680	Identifier	prjfile		5603659	0					
ANR	5603681	Argument	NULL		5603659	1					
ANR	5603682	Identifier	NULL		5603659	0					
ANR	5603683	IdentifierDeclStatement	char * pos ;	373:1:8375:8384	5603659	2	True				
ANR	5603684	IdentifierDecl	* pos		5603659	0					
ANR	5603685	IdentifierDeclType	char *		5603659	0					
ANR	5603686	Identifier	pos		5603659	1					
ANR	5603687	IfStatement	if ( buf )		5603659	3					
ANR	5603688	Condition	buf	374:5:8391:8393	5603659	0	True				
ANR	5603689	Identifier	buf		5603659	0					
ANR	5603690	CompoundStatement		5:10:83:83	5603659	1					
ANR	5603691	IfStatement	"if ( ( pos = strstr ( buf , ""\\""e bin.laddr = "" ) ) )"		5603659	0					
ANR	5603692	Condition	"pos = strstr ( buf , ""\\""e bin.laddr = "" )"	375:6:8404:8442	5603659	0	True				
ANR	5603693	AssignmentExpression	"pos = strstr ( buf , ""\\""e bin.laddr = "" )"		5603659	0		=			
ANR	5603694	Identifier	pos		5603659	0					
ANR	5603695	CallExpression	"strstr ( buf , ""\\""e bin.laddr = "" )"		5603659	1					
ANR	5603696	Callee	strstr		5603659	0					
ANR	5603697	Identifier	strstr		5603659	0					
ANR	5603698	ArgumentList	buf		5603659	1					
ANR	5603699	Argument	buf		5603659	0					
ANR	5603700	Identifier	buf		5603659	0					
ANR	5603701	Argument	"""\\""e bin.laddr = """		5603659	1					
ANR	5603702	PrimaryExpression	"""\\""e bin.laddr = """		5603659	0					
ANR	5603703	CompoundStatement		6:47:132:132	5603659	1					
ANR	5603704	ExpressionStatement	"laddr = r_num_math ( NULL , pos + 15 )"	376:3:8450:8485	5603659	0	True				
ANR	5603705	AssignmentExpression	"laddr = r_num_math ( NULL , pos + 15 )"		5603659	0		=			
ANR	5603706	Identifier	laddr		5603659	0					
ANR	5603707	CallExpression	"r_num_math ( NULL , pos + 15 )"		5603659	1					
ANR	5603708	Callee	r_num_math		5603659	0					
ANR	5603709	Identifier	r_num_math		5603659	0					
ANR	5603710	ArgumentList	NULL		5603659	1					
ANR	5603711	Argument	NULL		5603659	0					
ANR	5603712	Identifier	NULL		5603659	0					
ANR	5603713	Argument	pos + 15		5603659	1					
ANR	5603714	AdditiveExpression	pos + 15		5603659	0		+			
ANR	5603715	Identifier	pos		5603659	0					
ANR	5603716	PrimaryExpression	15		5603659	1					
ANR	5603717	ExpressionStatement	free ( buf )	378:2:8493:8503	5603659	1	True				
ANR	5603718	CallExpression	free ( buf )		5603659	0					
ANR	5603719	Callee	free		5603659	0					
ANR	5603720	Identifier	free		5603659	0					
ANR	5603721	ArgumentList	buf		5603659	1					
ANR	5603722	Argument	buf		5603659	0					
ANR	5603723	Identifier	buf		5603659	0					
ANR	5603724	ReturnStatement	return laddr ;	380:1:8509:8521	5603659	4	True				
ANR	5603725	Identifier	laddr		5603659	0					
ANR	5603726	ReturnType	static ut64		5603659	1					
ANR	5603727	Identifier	getProjectLaddr		5603659	2					
ANR	5603728	ParameterList	"RCore * core , const char * prjfile"		5603659	3					
ANR	5603729	Parameter	RCore * core	370:28:8278:8288	5603659	0	True				
ANR	5603730	ParameterType	RCore *		5603659	0					
ANR	5603731	Identifier	core		5603659	1					
ANR	5603732	Parameter	const char * prjfile	370:41:8291:8309	5603659	1	True				
ANR	5603733	ParameterType	const char *		5603659	0					
ANR	5603734	Identifier	prjfile		5603659	1					
ANR	5603735	CFGEntryNode	ENTRY		5603659		True				
ANR	5603736	CFGExitNode	EXIT		5603659		True				
ANR	5603737	Symbol	core		5603659						
ANR	5603738	Symbol	laddr		5603659						
ANR	5603739	Symbol	r_file_slurp		5603659						
ANR	5603740	Symbol	buf		5603659						
ANR	5603741	Symbol	NULL		5603659						
ANR	5603742	Symbol	pos		5603659						
ANR	5603743	Symbol	strstr		5603659						
ANR	5603744	Symbol	prjfile		5603659						
ANR	5603745	Symbol	r_num_math		5603659						
ANR	5603746	Function	r_core_project_open	383:0:8526:11361							
ANR	5603747	FunctionDef	"r_core_project_open (RCore * core , const char * prjfile , bool thready)"		5603746	0					
ANR	5603748	CompoundStatement		383:79:8605:11361	5603746	0					
ANR	5603749	IdentifierDeclStatement	bool askuser = true ;	384:1:8608:8627	5603746	0	True				
ANR	5603750	IdentifierDecl	askuser = true		5603746	0					
ANR	5603751	IdentifierDeclType	bool		5603746	0					
ANR	5603752	Identifier	askuser		5603746	1					
ANR	5603753	AssignmentExpression	askuser = true		5603746	2		=			
ANR	5603754	Identifier	true		5603746	0					
ANR	5603755	Identifier	true		5603746	1					
ANR	5603756	IdentifierDeclStatement	"int ret , close_current_session = 1 ;"	385:1:8630:8664	5603746	1	True				
ANR	5603757	IdentifierDecl	ret		5603746	0					
ANR	5603758	IdentifierDeclType	int		5603746	0					
ANR	5603759	Identifier	ret		5603746	1					
ANR	5603760	IdentifierDecl	close_current_session = 1		5603746	1					
ANR	5603761	IdentifierDeclType	int		5603746	0					
ANR	5603762	Identifier	close_current_session		5603746	1					
ANR	5603763	AssignmentExpression	close_current_session = 1		5603746	2		=			
ANR	5603764	Identifier	close_current_session		5603746	0					
ANR	5603765	PrimaryExpression	1		5603746	1					
ANR	5603766	IdentifierDeclStatement	char * oldbin ;	386:1:8667:8679	5603746	2	True				
ANR	5603767	IdentifierDecl	* oldbin		5603746	0					
ANR	5603768	IdentifierDeclType	char *		5603746	0					
ANR	5603769	Identifier	oldbin		5603746	1					
ANR	5603770	IdentifierDeclStatement	const char * newbin ;	387:1:8682:8700	5603746	3	True				
ANR	5603771	IdentifierDecl	* newbin		5603746	0					
ANR	5603772	IdentifierDeclType	const char *		5603746	0					
ANR	5603773	Identifier	newbin		5603746	1					
ANR	5603774	IdentifierDeclStatement	ut64 mapaddr = 0 ;	388:1:8703:8719	5603746	4	True				
ANR	5603775	IdentifierDecl	mapaddr = 0		5603746	0					
ANR	5603776	IdentifierDeclType	ut64		5603746	0					
ANR	5603777	Identifier	mapaddr		5603746	1					
ANR	5603778	AssignmentExpression	mapaddr = 0		5603746	2		=			
ANR	5603779	Identifier	mapaddr		5603746	0					
ANR	5603780	PrimaryExpression	0		5603746	1					
ANR	5603781	IfStatement	if ( ! prjfile || ! * prjfile )		5603746	5					
ANR	5603782	Condition	! prjfile || ! * prjfile	389:5:8726:8746	5603746	0	True				
ANR	5603783	OrExpression	! prjfile || ! * prjfile		5603746	0		||			
ANR	5603784	UnaryOperationExpression	! prjfile		5603746	0					
ANR	5603785	UnaryOperator	!		5603746	0					
ANR	5603786	Identifier	prjfile		5603746	1					
ANR	5603787	UnaryOperationExpression	! * prjfile		5603746	1					
ANR	5603788	UnaryOperator	!		5603746	0					
ANR	5603789	UnaryOperationExpression	* prjfile		5603746	1					
ANR	5603790	UnaryOperator	*		5603746	0					
ANR	5603791	Identifier	prjfile		5603746	1					
ANR	5603792	CompoundStatement		7:28:143:143	5603746	1					
ANR	5603793	ReturnStatement	return false ;	390:2:8753:8765	5603746	0	True				
ANR	5603794	Identifier	false		5603746	0					
ANR	5603795	IfStatement	if ( thready )		5603746	6					
ANR	5603796	Condition	thready	392:5:8775:8781	5603746	0	True				
ANR	5603797	Identifier	thready		5603746	0					
ANR	5603798	CompoundStatement		10:14:178:178	5603746	1					
ANR	5603799	ExpressionStatement	"eprintf ( ""Loading projects in a thread has been deprecated. Use tasks\\n"" )"	393:2:8788:8861	5603746	0	True				
ANR	5603800	CallExpression	"eprintf ( ""Loading projects in a thread has been deprecated. Use tasks\\n"" )"		5603746	0					
ANR	5603801	Callee	eprintf		5603746	0					
ANR	5603802	Identifier	eprintf		5603746	0					
ANR	5603803	ArgumentList	"""Loading projects in a thread has been deprecated. Use tasks\\n"""		5603746	1					
ANR	5603804	Argument	"""Loading projects in a thread has been deprecated. Use tasks\\n"""		5603746	0					
ANR	5603805	PrimaryExpression	"""Loading projects in a thread has been deprecated. Use tasks\\n"""		5603746	0					
ANR	5603806	ReturnStatement	return false ;	394:2:8865:8877	5603746	1	True				
ANR	5603807	Identifier	false		5603746	0					
ANR	5603808	IdentifierDeclStatement	"char * prj = projectScriptPath ( core , prjfile ) ;"	396:1:8883:8928	5603746	7	True				
ANR	5603809	IdentifierDecl	"* prj = projectScriptPath ( core , prjfile )"		5603746	0					
ANR	5603810	IdentifierDeclType	char *		5603746	0					
ANR	5603811	Identifier	prj		5603746	1					
ANR	5603812	AssignmentExpression	"* prj = projectScriptPath ( core , prjfile )"		5603746	2		=			
ANR	5603813	Identifier	prj		5603746	0					
ANR	5603814	CallExpression	"projectScriptPath ( core , prjfile )"		5603746	1					
ANR	5603815	Callee	projectScriptPath		5603746	0					
ANR	5603816	Identifier	projectScriptPath		5603746	0					
ANR	5603817	ArgumentList	core		5603746	1					
ANR	5603818	Argument	core		5603746	0					
ANR	5603819	Identifier	core		5603746	0					
ANR	5603820	Argument	prjfile		5603746	1					
ANR	5603821	Identifier	prjfile		5603746	0					
ANR	5603822	IfStatement	if ( ! prj )		5603746	8					
ANR	5603823	Condition	! prj	397:5:8935:8938	5603746	0	True				
ANR	5603824	UnaryOperationExpression	! prj		5603746	0					
ANR	5603825	UnaryOperator	!		5603746	0					
ANR	5603826	Identifier	prj		5603746	1					
ANR	5603827	CompoundStatement		15:11:335:335	5603746	1					
ANR	5603828	ExpressionStatement	"eprintf ( ""Invalid project name '%s'\\n"" , prjfile )"	398:2:8945:8993	5603746	0	True				
ANR	5603829	CallExpression	"eprintf ( ""Invalid project name '%s'\\n"" , prjfile )"		5603746	0					
ANR	5603830	Callee	eprintf		5603746	0					
ANR	5603831	Identifier	eprintf		5603746	0					
ANR	5603832	ArgumentList	"""Invalid project name '%s'\\n"""		5603746	1					
ANR	5603833	Argument	"""Invalid project name '%s'\\n"""		5603746	0					
ANR	5603834	PrimaryExpression	"""Invalid project name '%s'\\n"""		5603746	0					
ANR	5603835	Argument	prjfile		5603746	1					
ANR	5603836	Identifier	prjfile		5603746	0					
ANR	5603837	ReturnStatement	return false ;	399:2:8997:9009	5603746	1	True				
ANR	5603838	Identifier	false		5603746	0					
ANR	5603839	IdentifierDeclStatement	"char * filepath = r_core_project_info ( core , prj ) ;"	401:1:9015:9063	5603746	9	True				
ANR	5603840	IdentifierDecl	"* filepath = r_core_project_info ( core , prj )"		5603746	0					
ANR	5603841	IdentifierDeclType	char *		5603746	0					
ANR	5603842	Identifier	filepath		5603746	1					
ANR	5603843	AssignmentExpression	"* filepath = r_core_project_info ( core , prj )"		5603746	2		=			
ANR	5603844	Identifier	filepath		5603746	0					
ANR	5603845	CallExpression	"r_core_project_info ( core , prj )"		5603746	1					
ANR	5603846	Callee	r_core_project_info		5603746	0					
ANR	5603847	Identifier	r_core_project_info		5603746	0					
ANR	5603848	ArgumentList	core		5603746	1					
ANR	5603849	Argument	core		5603746	0					
ANR	5603850	Identifier	core		5603746	0					
ANR	5603851	Argument	prj		5603746	1					
ANR	5603852	Identifier	prj		5603746	0					
ANR	5603853	IfStatement	if ( ! filepath )		5603746	10					
ANR	5603854	Condition	! filepath	404:5:9184:9192	5603746	0	True				
ANR	5603855	UnaryOperationExpression	! filepath		5603746	0					
ANR	5603856	UnaryOperator	!		5603746	0					
ANR	5603857	Identifier	filepath		5603746	1					
ANR	5603858	CompoundStatement		22:16:589:589	5603746	1					
ANR	5603859	ExpressionStatement	"eprintf ( ""Cannot retrieve information for project '%s'\\n"" , prj )"	405:2:9199:9262	5603746	0	True				
ANR	5603860	CallExpression	"eprintf ( ""Cannot retrieve information for project '%s'\\n"" , prj )"		5603746	0					
ANR	5603861	Callee	eprintf		5603746	0					
ANR	5603862	Identifier	eprintf		5603746	0					
ANR	5603863	ArgumentList	"""Cannot retrieve information for project '%s'\\n"""		5603746	1					
ANR	5603864	Argument	"""Cannot retrieve information for project '%s'\\n"""		5603746	0					
ANR	5603865	PrimaryExpression	"""Cannot retrieve information for project '%s'\\n"""		5603746	0					
ANR	5603866	Argument	prj		5603746	1					
ANR	5603867	Identifier	prj		5603746	0					
ANR	5603868	ExpressionStatement	free ( prj )	406:2:9266:9276	5603746	1	True				
ANR	5603869	CallExpression	free ( prj )		5603746	0					
ANR	5603870	Callee	free		5603746	0					
ANR	5603871	Identifier	free		5603746	0					
ANR	5603872	ArgumentList	prj		5603746	1					
ANR	5603873	Argument	prj		5603746	0					
ANR	5603874	Identifier	prj		5603746	0					
ANR	5603875	ReturnStatement	return false ;	407:2:9280:9292	5603746	2	True				
ANR	5603876	Identifier	false		5603746	0					
ANR	5603877	IfStatement	if ( ! filepath [ 0 ] )		5603746	11					
ANR	5603878	Condition	! filepath [ 0 ]	410:5:9303:9314	5603746	0	True				
ANR	5603879	UnaryOperationExpression	! filepath [ 0 ]		5603746	0					
ANR	5603880	UnaryOperator	!		5603746	0					
ANR	5603881	ArrayIndexing	filepath [ 0 ]		5603746	1					
ANR	5603882	Identifier	filepath		5603746	0					
ANR	5603883	PrimaryExpression	0		5603746	1					
ANR	5603884	CompoundStatement		28:19:711:711	5603746	1					
ANR	5603885	GotoStatement	goto cookiefactory ;	411:2:9321:9339	5603746	0	True				
ANR	5603886	Identifier	cookiefactory		5603746	0					
ANR	5603887	IfStatement	"if ( ! strstr ( filepath , ""://"" ) )"		5603746	12					
ANR	5603888	Condition	"! strstr ( filepath , ""://"" )"	413:5:9349:9373	5603746	0	True				
ANR	5603889	UnaryOperationExpression	"! strstr ( filepath , ""://"" )"		5603746	0					
ANR	5603890	UnaryOperator	!		5603746	0					
ANR	5603891	CallExpression	"strstr ( filepath , ""://"" )"		5603746	1					
ANR	5603892	Callee	strstr		5603746	0					
ANR	5603893	Identifier	strstr		5603746	0					
ANR	5603894	ArgumentList	filepath		5603746	1					
ANR	5603895	Argument	filepath		5603746	0					
ANR	5603896	Identifier	filepath		5603746	0					
ANR	5603897	Argument	"""://"""		5603746	1					
ANR	5603898	PrimaryExpression	"""://"""		5603746	0					
ANR	5603899	CompoundStatement		31:32:770:770	5603746	1					
ANR	5603900	IfStatement	if ( ! r_file_exists ( filepath ) )		5603746	0					
ANR	5603901	Condition	! r_file_exists ( filepath )	415:6:9413:9437	5603746	0	True				
ANR	5603902	UnaryOperationExpression	! r_file_exists ( filepath )		5603746	0					
ANR	5603903	UnaryOperator	!		5603746	0					
ANR	5603904	CallExpression	r_file_exists ( filepath )		5603746	1					
ANR	5603905	Callee	r_file_exists		5603746	0					
ANR	5603906	Identifier	r_file_exists		5603746	0					
ANR	5603907	ArgumentList	filepath		5603746	1					
ANR	5603908	Argument	filepath		5603746	0					
ANR	5603909	Identifier	filepath		5603746	0					
ANR	5603910	CompoundStatement		33:33:834:834	5603746	1					
ANR	5603911	ExpressionStatement	"eprintf ( ""Cannot find file '%s'\\n"" , filepath )"	416:3:9445:9490	5603746	0	True				
ANR	5603912	CallExpression	"eprintf ( ""Cannot find file '%s'\\n"" , filepath )"		5603746	0					
ANR	5603913	Callee	eprintf		5603746	0					
ANR	5603914	Identifier	eprintf		5603746	0					
ANR	5603915	ArgumentList	"""Cannot find file '%s'\\n"""		5603746	1					
ANR	5603916	Argument	"""Cannot find file '%s'\\n"""		5603746	0					
ANR	5603917	PrimaryExpression	"""Cannot find file '%s'\\n"""		5603746	0					
ANR	5603918	Argument	filepath		5603746	1					
ANR	5603919	Identifier	filepath		5603746	0					
ANR	5603920	ExpressionStatement	free ( prj )	417:3:9495:9505	5603746	1	True				
ANR	5603921	CallExpression	free ( prj )		5603746	0					
ANR	5603922	Callee	free		5603746	0					
ANR	5603923	Identifier	free		5603746	0					
ANR	5603924	ArgumentList	prj		5603746	1					
ANR	5603925	Argument	prj		5603746	0					
ANR	5603926	Identifier	prj		5603746	0					
ANR	5603927	ExpressionStatement	free ( filepath )	418:3:9510:9525	5603746	2	True				
ANR	5603928	CallExpression	free ( filepath )		5603746	0					
ANR	5603929	Callee	free		5603746	0					
ANR	5603930	Identifier	free		5603746	0					
ANR	5603931	ArgumentList	filepath		5603746	1					
ANR	5603932	Argument	filepath		5603746	0					
ANR	5603933	Identifier	filepath		5603746	0					
ANR	5603934	ReturnStatement	return false ;	419:3:9530:9542	5603746	3	True				
ANR	5603935	Identifier	false		5603746	0					
ANR	5603936	Label	cookiefactory :	422:1:9552:9565	5603746	13	True				
ANR	5603937	Identifier	cookiefactory		5603746	0					
ANR	5603938	ExpressionStatement		423:1:9568:9568	5603746	14	True				
ANR	5603939	IdentifierDeclStatement	"const char * file_path = r_config_get ( core -> config , ""file.path"" ) ;"	424:1:9571:9635	5603746	15	True				
ANR	5603940	IdentifierDecl	"* file_path = r_config_get ( core -> config , ""file.path"" )"		5603746	0					
ANR	5603941	IdentifierDeclType	const char *		5603746	0					
ANR	5603942	Identifier	file_path		5603746	1					
ANR	5603943	AssignmentExpression	"* file_path = r_config_get ( core -> config , ""file.path"" )"		5603746	2		=			
ANR	5603944	Identifier	file_path		5603746	0					
ANR	5603945	CallExpression	"r_config_get ( core -> config , ""file.path"" )"		5603746	1					
ANR	5603946	Callee	r_config_get		5603746	0					
ANR	5603947	Identifier	r_config_get		5603746	0					
ANR	5603948	ArgumentList	core -> config		5603746	1					
ANR	5603949	Argument	core -> config		5603746	0					
ANR	5603950	PtrMemberAccess	core -> config		5603746	0					
ANR	5603951	Identifier	core		5603746	0					
ANR	5603952	Identifier	config		5603746	1					
ANR	5603953	Argument	"""file.path"""		5603746	1					
ANR	5603954	PrimaryExpression	"""file.path"""		5603746	0					
ANR	5603955	IfStatement	if ( ! file_path || ! * file_path )		5603746	16					
ANR	5603956	Condition	! file_path || ! * file_path	425:5:9642:9666	5603746	0	True				
ANR	5603957	OrExpression	! file_path || ! * file_path		5603746	0		||			
ANR	5603958	UnaryOperationExpression	! file_path		5603746	0					
ANR	5603959	UnaryOperator	!		5603746	0					
ANR	5603960	Identifier	file_path		5603746	1					
ANR	5603961	UnaryOperationExpression	! * file_path		5603746	1					
ANR	5603962	UnaryOperator	!		5603746	0					
ANR	5603963	UnaryOperationExpression	* file_path		5603746	1					
ANR	5603964	UnaryOperator	*		5603746	0					
ANR	5603965	Identifier	file_path		5603746	1					
ANR	5603966	CompoundStatement		43:32:1063:1063	5603746	1					
ANR	5603967	ExpressionStatement	"file_path = r_config_get ( core -> config , ""file.lastpath"" )"	426:2:9673:9729	5603746	0	True				
ANR	5603968	AssignmentExpression	"file_path = r_config_get ( core -> config , ""file.lastpath"" )"		5603746	0		=			
ANR	5603969	Identifier	file_path		5603746	0					
ANR	5603970	CallExpression	"r_config_get ( core -> config , ""file.lastpath"" )"		5603746	1					
ANR	5603971	Callee	r_config_get		5603746	0					
ANR	5603972	Identifier	r_config_get		5603746	0					
ANR	5603973	ArgumentList	core -> config		5603746	1					
ANR	5603974	Argument	core -> config		5603746	0					
ANR	5603975	PtrMemberAccess	core -> config		5603746	0					
ANR	5603976	Identifier	core		5603746	0					
ANR	5603977	Identifier	config		5603746	1					
ANR	5603978	Argument	"""file.lastpath"""		5603746	1					
ANR	5603979	PrimaryExpression	"""file.lastpath"""		5603746	0					
ANR	5603980	ExpressionStatement	oldbin = strdup ( file_path )	428:1:9735:9762	5603746	17	True				
ANR	5603981	AssignmentExpression	oldbin = strdup ( file_path )		5603746	0		=			
ANR	5603982	Identifier	oldbin		5603746	0					
ANR	5603983	CallExpression	strdup ( file_path )		5603746	1					
ANR	5603984	Callee	strdup		5603746	0					
ANR	5603985	Identifier	strdup		5603746	0					
ANR	5603986	ArgumentList	file_path		5603746	1					
ANR	5603987	Argument	file_path		5603746	0					
ANR	5603988	Identifier	file_path		5603746	0					
ANR	5603989	IfStatement	"if ( ! strcmp ( prjfile , r_config_get ( core -> config , ""prj.name"" ) ) )"		5603746	18					
ANR	5603990	Condition	"! strcmp ( prjfile , r_config_get ( core -> config , ""prj.name"" ) )"	429:5:9769:9826	5603746	0	True				
ANR	5603991	UnaryOperationExpression	"! strcmp ( prjfile , r_config_get ( core -> config , ""prj.name"" ) )"		5603746	0					
ANR	5603992	UnaryOperator	!		5603746	0					
ANR	5603993	CallExpression	"strcmp ( prjfile , r_config_get ( core -> config , ""prj.name"" ) )"		5603746	1					
ANR	5603994	Callee	strcmp		5603746	0					
ANR	5603995	Identifier	strcmp		5603746	0					
ANR	5603996	ArgumentList	prjfile		5603746	1					
ANR	5603997	Argument	prjfile		5603746	0					
ANR	5603998	Identifier	prjfile		5603746	0					
ANR	5603999	Argument	"r_config_get ( core -> config , ""prj.name"" )"		5603746	1					
ANR	5604000	CallExpression	"r_config_get ( core -> config , ""prj.name"" )"		5603746	0					
ANR	5604001	Callee	r_config_get		5603746	0					
ANR	5604002	Identifier	r_config_get		5603746	0					
ANR	5604003	ArgumentList	core -> config		5603746	1					
ANR	5604004	Argument	core -> config		5603746	0					
ANR	5604005	PtrMemberAccess	core -> config		5603746	0					
ANR	5604006	Identifier	core		5603746	0					
ANR	5604007	Identifier	config		5603746	1					
ANR	5604008	Argument	"""prj.name"""		5603746	1					
ANR	5604009	PrimaryExpression	"""prj.name"""		5603746	0					
ANR	5604010	CompoundStatement		47:65:1223:1223	5603746	1					
ANR	5604011	ExpressionStatement	askuser = false	431:2:9871:9886	5603746	0	True				
ANR	5604012	AssignmentExpression	askuser = false		5603746	0		=			
ANR	5604013	Identifier	askuser		5603746	0					
ANR	5604014	Identifier	false		5603746	1					
ANR	5604015	ExpressionStatement	free ( prj )	433:2:9896:9906	5603746	1	True				
ANR	5604016	CallExpression	free ( prj )		5603746	0					
ANR	5604017	Callee	free		5603746	0					
ANR	5604018	Identifier	free		5603746	0					
ANR	5604019	ArgumentList	prj		5603746	1					
ANR	5604020	Argument	prj		5603746	0					
ANR	5604021	Identifier	prj		5603746	0					
ANR	5604022	ExpressionStatement	free ( filepath )	434:2:9910:9925	5603746	2	True				
ANR	5604023	CallExpression	free ( filepath )		5603746	0					
ANR	5604024	Callee	free		5603746	0					
ANR	5604025	Identifier	free		5603746	0					
ANR	5604026	ArgumentList	filepath		5603746	1					
ANR	5604027	Argument	filepath		5603746	0					
ANR	5604028	Identifier	filepath		5603746	0					
ANR	5604029	ReturnStatement	return false ;	435:2:9929:9941	5603746	3	True				
ANR	5604030	Identifier	false		5603746	0					
ANR	5604031	IfStatement	if ( askuser )		5603746	19					
ANR	5604032	Condition	askuser	438:5:9958:9964	5603746	0	True				
ANR	5604033	Identifier	askuser		5603746	0					
ANR	5604034	CompoundStatement		56:14:1361:1361	5603746	1					
ANR	5604035	IfStatement	if ( r_cons_is_interactive ( ) )		5603746	0					
ANR	5604036	Condition	r_cons_is_interactive ( )	439:6:9975:9998	5603746	0	True				
ANR	5604037	CallExpression	r_cons_is_interactive ( )		5603746	0					
ANR	5604038	Callee	r_cons_is_interactive		5603746	0					
ANR	5604039	Identifier	r_cons_is_interactive		5603746	0					
ANR	5604040	ArgumentList			5603746	1					
ANR	5604041	CompoundStatement		57:32:1395:1395	5603746	1					
ANR	5604042	ExpressionStatement	"close_current_session = r_cons_yesno ( 'y' , ""Close current session? (Y/n)"" )"	440:3:10006:10080	5603746	0	True				
ANR	5604043	AssignmentExpression	"close_current_session = r_cons_yesno ( 'y' , ""Close current session? (Y/n)"" )"		5603746	0		=			
ANR	5604044	Identifier	close_current_session		5603746	0					
ANR	5604045	CallExpression	"r_cons_yesno ( 'y' , ""Close current session? (Y/n)"" )"		5603746	1					
ANR	5604046	Callee	r_cons_yesno		5603746	0					
ANR	5604047	Identifier	r_cons_yesno		5603746	0					
ANR	5604048	ArgumentList	'y'		5603746	1					
ANR	5604049	Argument	'y'		5603746	0					
ANR	5604050	PrimaryExpression	'y'		5603746	0					
ANR	5604051	Argument	"""Close current session? (Y/n)"""		5603746	1					
ANR	5604052	PrimaryExpression	"""Close current session? (Y/n)"""		5603746	0					
ANR	5604053	IfStatement	if ( close_current_session )		5603746	20					
ANR	5604054	Condition	close_current_session	443:5:10094:10114	5603746	0	True				
ANR	5604055	Identifier	close_current_session		5603746	0					
ANR	5604056	CompoundStatement		61:28:1511:1511	5603746	1					
ANR	5604057	ExpressionStatement	"r_core_file_close_fd ( core , - 1 )"	445:2:10133:10164	5603746	0	True				
ANR	5604058	CallExpression	"r_core_file_close_fd ( core , - 1 )"		5603746	0					
ANR	5604059	Callee	r_core_file_close_fd		5603746	0					
ANR	5604060	Identifier	r_core_file_close_fd		5603746	0					
ANR	5604061	ArgumentList	core		5603746	1					
ANR	5604062	Argument	core		5603746	0					
ANR	5604063	Identifier	core		5603746	0					
ANR	5604064	Argument	- 1		5603746	1					
ANR	5604065	UnaryOperationExpression	- 1		5603746	0					
ANR	5604066	UnaryOperator	-		5603746	0					
ANR	5604067	PrimaryExpression	1		5603746	1					
ANR	5604068	ExpressionStatement	r_io_close_all ( core -> io )	446:2:10168:10193	5603746	1	True				
ANR	5604069	CallExpression	r_io_close_all ( core -> io )		5603746	0					
ANR	5604070	Callee	r_io_close_all		5603746	0					
ANR	5604071	Identifier	r_io_close_all		5603746	0					
ANR	5604072	ArgumentList	core -> io		5603746	1					
ANR	5604073	Argument	core -> io		5603746	0					
ANR	5604074	PtrMemberAccess	core -> io		5603746	0					
ANR	5604075	Identifier	core		5603746	0					
ANR	5604076	Identifier	io		5603746	1					
ANR	5604077	ExpressionStatement	r_anal_purge ( core -> anal )	447:2:10197:10222	5603746	2	True				
ANR	5604078	CallExpression	r_anal_purge ( core -> anal )		5603746	0					
ANR	5604079	Callee	r_anal_purge		5603746	0					
ANR	5604080	Identifier	r_anal_purge		5603746	0					
ANR	5604081	ArgumentList	core -> anal		5603746	1					
ANR	5604082	Argument	core -> anal		5603746	0					
ANR	5604083	PtrMemberAccess	core -> anal		5603746	0					
ANR	5604084	Identifier	core		5603746	0					
ANR	5604085	Identifier	anal		5603746	1					
ANR	5604086	ExpressionStatement	r_flag_unset_all ( core -> flags )	448:2:10226:10256	5603746	3	True				
ANR	5604087	CallExpression	r_flag_unset_all ( core -> flags )		5603746	0					
ANR	5604088	Callee	r_flag_unset_all		5603746	0					
ANR	5604089	Identifier	r_flag_unset_all		5603746	0					
ANR	5604090	ArgumentList	core -> flags		5603746	1					
ANR	5604091	Argument	core -> flags		5603746	0					
ANR	5604092	PtrMemberAccess	core -> flags		5603746	0					
ANR	5604093	Identifier	core		5603746	0					
ANR	5604094	Identifier	flags		5603746	1					
ANR	5604095	ExpressionStatement	r_bin_file_delete_all ( core -> bin )	449:2:10260:10293	5603746	4	True				
ANR	5604096	CallExpression	r_bin_file_delete_all ( core -> bin )		5603746	0					
ANR	5604097	Callee	r_bin_file_delete_all		5603746	0					
ANR	5604098	Identifier	r_bin_file_delete_all		5603746	0					
ANR	5604099	ArgumentList	core -> bin		5603746	1					
ANR	5604100	Argument	core -> bin		5603746	0					
ANR	5604101	PtrMemberAccess	core -> bin		5603746	0					
ANR	5604102	Identifier	core		5603746	0					
ANR	5604103	Identifier	bin		5603746	1					
ANR	5604104	IfStatement	if ( filepath [ 0 ] )		5603746	5					
ANR	5604105	Condition	filepath [ 0 ]	452:6:10359:10369	5603746	0	True				
ANR	5604106	ArrayIndexing	filepath [ 0 ]		5603746	0					
ANR	5604107	Identifier	filepath		5603746	0					
ANR	5604108	PrimaryExpression	0		5603746	1					
ANR	5604109	CompoundStatement		70:19:1766:1766	5603746	1					
ANR	5604110	IfStatement	"if ( ! r_core_file_open ( core , filepath , 0 , UT64_MAX ) )"		5603746	0					
ANR	5604111	Condition	"! r_core_file_open ( core , filepath , 0 , UT64_MAX )"	454:7:10457:10503	5603746	0	True				
ANR	5604112	UnaryOperationExpression	"! r_core_file_open ( core , filepath , 0 , UT64_MAX )"		5603746	0					
ANR	5604113	UnaryOperator	!		5603746	0					
ANR	5604114	CallExpression	"r_core_file_open ( core , filepath , 0 , UT64_MAX )"		5603746	1					
ANR	5604115	Callee	r_core_file_open		5603746	0					
ANR	5604116	Identifier	r_core_file_open		5603746	0					
ANR	5604117	ArgumentList	core		5603746	1					
ANR	5604118	Argument	core		5603746	0					
ANR	5604119	Identifier	core		5603746	0					
ANR	5604120	Argument	filepath		5603746	1					
ANR	5604121	Identifier	filepath		5603746	0					
ANR	5604122	Argument	0		5603746	2					
ANR	5604123	PrimaryExpression	0		5603746	0					
ANR	5604124	Argument	UT64_MAX		5603746	3					
ANR	5604125	Identifier	UT64_MAX		5603746	0					
ANR	5604126	CompoundStatement		72:56:1900:1900	5603746	1					
ANR	5604127	ExpressionStatement	"eprintf ( ""Cannot open file '%s'\\n"" , filepath )"	455:4:10512:10557	5603746	0	True				
ANR	5604128	CallExpression	"eprintf ( ""Cannot open file '%s'\\n"" , filepath )"		5603746	0					
ANR	5604129	Callee	eprintf		5603746	0					
ANR	5604130	Identifier	eprintf		5603746	0					
ANR	5604131	ArgumentList	"""Cannot open file '%s'\\n"""		5603746	1					
ANR	5604132	Argument	"""Cannot open file '%s'\\n"""		5603746	0					
ANR	5604133	PrimaryExpression	"""Cannot open file '%s'\\n"""		5603746	0					
ANR	5604134	Argument	filepath		5603746	1					
ANR	5604135	Identifier	filepath		5603746	0					
ANR	5604136	ExpressionStatement	ret = false	456:4:10563:10574	5603746	1	True				
ANR	5604137	AssignmentExpression	ret = false		5603746	0		=			
ANR	5604138	Identifier	ret		5603746	0					
ANR	5604139	Identifier	false		5603746	1					
ANR	5604140	GotoStatement	goto beach ;	457:4:10580:10590	5603746	2	True				
ANR	5604141	Identifier	beach		5603746	0					
ANR	5604142	ExpressionStatement	"mapaddr = getProjectLaddr ( core , prj )"	461:1:10605:10642	5603746	21	True				
ANR	5604143	AssignmentExpression	"mapaddr = getProjectLaddr ( core , prj )"		5603746	0		=			
ANR	5604144	Identifier	mapaddr		5603746	0					
ANR	5604145	CallExpression	"getProjectLaddr ( core , prj )"		5603746	1					
ANR	5604146	Callee	getProjectLaddr		5603746	0					
ANR	5604147	Identifier	getProjectLaddr		5603746	0					
ANR	5604148	ArgumentList	core		5603746	1					
ANR	5604149	Argument	core		5603746	0					
ANR	5604150	Identifier	core		5603746	0					
ANR	5604151	Argument	prj		5603746	1					
ANR	5604152	Identifier	prj		5603746	0					
ANR	5604153	IfStatement	if ( mapaddr )		5603746	22					
ANR	5604154	Condition	mapaddr	462:5:10649:10655	5603746	0	True				
ANR	5604155	Identifier	mapaddr		5603746	0					
ANR	5604156	CompoundStatement		80:14:2052:2052	5603746	1					
ANR	5604157	ExpressionStatement	"r_config_set_i ( core -> config , ""bin.laddr"" , mapaddr )"	463:2:10662:10713	5603746	0	True				
ANR	5604158	CallExpression	"r_config_set_i ( core -> config , ""bin.laddr"" , mapaddr )"		5603746	0					
ANR	5604159	Callee	r_config_set_i		5603746	0					
ANR	5604160	Identifier	r_config_set_i		5603746	0					
ANR	5604161	ArgumentList	core -> config		5603746	1					
ANR	5604162	Argument	core -> config		5603746	0					
ANR	5604163	PtrMemberAccess	core -> config		5603746	0					
ANR	5604164	Identifier	core		5603746	0					
ANR	5604165	Identifier	config		5603746	1					
ANR	5604166	Argument	"""bin.laddr"""		5603746	1					
ANR	5604167	PrimaryExpression	"""bin.laddr"""		5603746	0					
ANR	5604168	Argument	mapaddr		5603746	2					
ANR	5604169	Identifier	mapaddr		5603746	0					
ANR	5604170	IfStatement	"if ( filepath [ 0 ] && close_current_session && r_config_get_i ( core -> config , ""file.info"" ) )"		5603746	23					
ANR	5604171	Condition	"filepath [ 0 ] && close_current_session && r_config_get_i ( core -> config , ""file.info"" )"	465:5:10723:10804	5603746	0	True				
ANR	5604172	AndExpression	"filepath [ 0 ] && close_current_session && r_config_get_i ( core -> config , ""file.info"" )"		5603746	0		&&			
ANR	5604173	ArrayIndexing	filepath [ 0 ]		5603746	0					
ANR	5604174	Identifier	filepath		5603746	0					
ANR	5604175	PrimaryExpression	0		5603746	1					
ANR	5604176	AndExpression	"close_current_session && r_config_get_i ( core -> config , ""file.info"" )"		5603746	1		&&			
ANR	5604177	Identifier	close_current_session		5603746	0					
ANR	5604178	CallExpression	"r_config_get_i ( core -> config , ""file.info"" )"		5603746	1					
ANR	5604179	Callee	r_config_get_i		5603746	0					
ANR	5604180	Identifier	r_config_get_i		5603746	0					
ANR	5604181	ArgumentList	core -> config		5603746	1					
ANR	5604182	Argument	core -> config		5603746	0					
ANR	5604183	PtrMemberAccess	core -> config		5603746	0					
ANR	5604184	Identifier	core		5603746	0					
ANR	5604185	Identifier	config		5603746	1					
ANR	5604186	Argument	"""file.info"""		5603746	1					
ANR	5604187	PrimaryExpression	"""file.info"""		5603746	0					
ANR	5604188	CompoundStatement		83:89:2201:2201	5603746	1					
ANR	5604189	ExpressionStatement	"mapaddr = r_config_get_i ( core -> config , ""file.offset"" )"	466:2:10811:10865	5603746	0	True				
ANR	5604190	AssignmentExpression	"mapaddr = r_config_get_i ( core -> config , ""file.offset"" )"		5603746	0		=			
ANR	5604191	Identifier	mapaddr		5603746	0					
ANR	5604192	CallExpression	"r_config_get_i ( core -> config , ""file.offset"" )"		5603746	1					
ANR	5604193	Callee	r_config_get_i		5603746	0					
ANR	5604194	Identifier	r_config_get_i		5603746	0					
ANR	5604195	ArgumentList	core -> config		5603746	1					
ANR	5604196	Argument	core -> config		5603746	0					
ANR	5604197	PtrMemberAccess	core -> config		5603746	0					
ANR	5604198	Identifier	core		5603746	0					
ANR	5604199	Identifier	config		5603746	1					
ANR	5604200	Argument	"""file.offset"""		5603746	1					
ANR	5604201	PrimaryExpression	"""file.offset"""		5603746	0					
ANR	5604202	ExpressionStatement	"( void ) r_core_bin_load ( core , filepath , mapaddr ? mapaddr : UT64_MAX )"	467:2:10869:10935	5603746	1	True				
ANR	5604203	CastExpression	"( void ) r_core_bin_load ( core , filepath , mapaddr ? mapaddr : UT64_MAX )"		5603746	0					
ANR	5604204	CastTarget	void		5603746	0					
ANR	5604205	CallExpression	"r_core_bin_load ( core , filepath , mapaddr ? mapaddr : UT64_MAX )"		5603746	1					
ANR	5604206	Callee	r_core_bin_load		5603746	0					
ANR	5604207	Identifier	r_core_bin_load		5603746	0					
ANR	5604208	ArgumentList	core		5603746	1					
ANR	5604209	Argument	core		5603746	0					
ANR	5604210	Identifier	core		5603746	0					
ANR	5604211	Argument	filepath		5603746	1					
ANR	5604212	Identifier	filepath		5603746	0					
ANR	5604213	Argument	mapaddr ? mapaddr : UT64_MAX		5603746	2					
ANR	5604214	ConditionalExpression	mapaddr ? mapaddr : UT64_MAX		5603746	0					
ANR	5604215	Condition	mapaddr		5603746	0					
ANR	5604216	Identifier	mapaddr		5603746	0					
ANR	5604217	Identifier	mapaddr		5603746	1					
ANR	5604218	Identifier	UT64_MAX		5603746	2					
ANR	5604219	ExpressionStatement	"ret = r_core_project_load ( core , prjfile , prj )"	470:1:10971:11017	5603746	24	True				
ANR	5604220	AssignmentExpression	"ret = r_core_project_load ( core , prjfile , prj )"		5603746	0		=			
ANR	5604221	Identifier	ret		5603746	0					
ANR	5604222	CallExpression	"r_core_project_load ( core , prjfile , prj )"		5603746	1					
ANR	5604223	Callee	r_core_project_load		5603746	0					
ANR	5604224	Identifier	r_core_project_load		5603746	0					
ANR	5604225	ArgumentList	core		5603746	1					
ANR	5604226	Argument	core		5603746	0					
ANR	5604227	Identifier	core		5603746	0					
ANR	5604228	Argument	prjfile		5603746	1					
ANR	5604229	Identifier	prjfile		5603746	0					
ANR	5604230	Argument	prj		5603746	2					
ANR	5604231	Identifier	prj		5603746	0					
ANR	5604232	IfStatement	if ( filepath [ 0 ] )		5603746	25					
ANR	5604233	Condition	filepath [ 0 ]	471:5:11024:11034	5603746	0	True				
ANR	5604234	ArrayIndexing	filepath [ 0 ]		5603746	0					
ANR	5604235	Identifier	filepath		5603746	0					
ANR	5604236	PrimaryExpression	0		5603746	1					
ANR	5604237	CompoundStatement		89:18:2431:2431	5603746	1					
ANR	5604238	ExpressionStatement	"newbin = r_config_get ( core -> config , ""file.path"" )"	472:2:11041:11090	5603746	0	True				
ANR	5604239	AssignmentExpression	"newbin = r_config_get ( core -> config , ""file.path"" )"		5603746	0		=			
ANR	5604240	Identifier	newbin		5603746	0					
ANR	5604241	CallExpression	"r_config_get ( core -> config , ""file.path"" )"		5603746	1					
ANR	5604242	Callee	r_config_get		5603746	0					
ANR	5604243	Identifier	r_config_get		5603746	0					
ANR	5604244	ArgumentList	core -> config		5603746	1					
ANR	5604245	Argument	core -> config		5603746	0					
ANR	5604246	PtrMemberAccess	core -> config		5603746	0					
ANR	5604247	Identifier	core		5603746	0					
ANR	5604248	Identifier	config		5603746	1					
ANR	5604249	Argument	"""file.path"""		5603746	1					
ANR	5604250	PrimaryExpression	"""file.path"""		5603746	0					
ANR	5604251	IfStatement	if ( ! newbin || ! * newbin )		5603746	1					
ANR	5604252	Condition	! newbin || ! * newbin	473:6:11098:11116	5603746	0	True				
ANR	5604253	OrExpression	! newbin || ! * newbin		5603746	0		||			
ANR	5604254	UnaryOperationExpression	! newbin		5603746	0					
ANR	5604255	UnaryOperator	!		5603746	0					
ANR	5604256	Identifier	newbin		5603746	1					
ANR	5604257	UnaryOperationExpression	! * newbin		5603746	1					
ANR	5604258	UnaryOperator	!		5603746	0					
ANR	5604259	UnaryOperationExpression	* newbin		5603746	1					
ANR	5604260	UnaryOperator	*		5603746	0					
ANR	5604261	Identifier	newbin		5603746	1					
ANR	5604262	CompoundStatement		91:27:2513:2513	5603746	1					
ANR	5604263	ExpressionStatement	"newbin = r_config_get ( core -> config , ""file.lastpath"" )"	474:3:11124:11177	5603746	0	True				
ANR	5604264	AssignmentExpression	"newbin = r_config_get ( core -> config , ""file.lastpath"" )"		5603746	0		=			
ANR	5604265	Identifier	newbin		5603746	0					
ANR	5604266	CallExpression	"r_config_get ( core -> config , ""file.lastpath"" )"		5603746	1					
ANR	5604267	Callee	r_config_get		5603746	0					
ANR	5604268	Identifier	r_config_get		5603746	0					
ANR	5604269	ArgumentList	core -> config		5603746	1					
ANR	5604270	Argument	core -> config		5603746	0					
ANR	5604271	PtrMemberAccess	core -> config		5603746	0					
ANR	5604272	Identifier	core		5603746	0					
ANR	5604273	Identifier	config		5603746	1					
ANR	5604274	Argument	"""file.lastpath"""		5603746	1					
ANR	5604275	PrimaryExpression	"""file.lastpath"""		5603746	0					
ANR	5604276	IfStatement	"if ( strcmp ( oldbin , newbin ) )"		5603746	2					
ANR	5604277	Condition	"strcmp ( oldbin , newbin )"	476:6:11189:11211	5603746	0	True				
ANR	5604278	CallExpression	"strcmp ( oldbin , newbin )"		5603746	0					
ANR	5604279	Callee	strcmp		5603746	0					
ANR	5604280	Identifier	strcmp		5603746	0					
ANR	5604281	ArgumentList	oldbin		5603746	1					
ANR	5604282	Argument	oldbin		5603746	0					
ANR	5604283	Identifier	oldbin		5603746	0					
ANR	5604284	Argument	newbin		5603746	1					
ANR	5604285	Identifier	newbin		5603746	0					
ANR	5604286	CompoundStatement		94:31:2608:2608	5603746	1					
ANR	5604287	ExpressionStatement	"eprintf ( ""WARNING: file.path changed: %s => %s\\n"" , oldbin , newbin )"	477:3:11219:11285	5603746	0	True				
ANR	5604288	CallExpression	"eprintf ( ""WARNING: file.path changed: %s => %s\\n"" , oldbin , newbin )"		5603746	0					
ANR	5604289	Callee	eprintf		5603746	0					
ANR	5604290	Identifier	eprintf		5603746	0					
ANR	5604291	ArgumentList	"""WARNING: file.path changed: %s => %s\\n"""		5603746	1					
ANR	5604292	Argument	"""WARNING: file.path changed: %s => %s\\n"""		5603746	0					
ANR	5604293	PrimaryExpression	"""WARNING: file.path changed: %s => %s\\n"""		5603746	0					
ANR	5604294	Argument	oldbin		5603746	1					
ANR	5604295	Identifier	oldbin		5603746	0					
ANR	5604296	Argument	newbin		5603746	2					
ANR	5604297	Identifier	newbin		5603746	0					
ANR	5604298	Label	beach :	480:0:11294:11299	5603746	26	True				
ANR	5604299	Identifier	beach		5603746	0					
ANR	5604300	ExpressionStatement	free ( oldbin )	481:1:11302:11315	5603746	27	True				
ANR	5604301	CallExpression	free ( oldbin )		5603746	0					
ANR	5604302	Callee	free		5603746	0					
ANR	5604303	Identifier	free		5603746	0					
ANR	5604304	ArgumentList	oldbin		5603746	1					
ANR	5604305	Argument	oldbin		5603746	0					
ANR	5604306	Identifier	oldbin		5603746	0					
ANR	5604307	ExpressionStatement	free ( filepath )	482:1:11318:11333	5603746	28	True				
ANR	5604308	CallExpression	free ( filepath )		5603746	0					
ANR	5604309	Callee	free		5603746	0					
ANR	5604310	Identifier	free		5603746	0					
ANR	5604311	ArgumentList	filepath		5603746	1					
ANR	5604312	Argument	filepath		5603746	0					
ANR	5604313	Identifier	filepath		5603746	0					
ANR	5604314	ExpressionStatement	free ( prj )	483:1:11336:11346	5603746	29	True				
ANR	5604315	CallExpression	free ( prj )		5603746	0					
ANR	5604316	Callee	free		5603746	0					
ANR	5604317	Identifier	free		5603746	0					
ANR	5604318	ArgumentList	prj		5603746	1					
ANR	5604319	Argument	prj		5603746	0					
ANR	5604320	Identifier	prj		5603746	0					
ANR	5604321	ReturnStatement	return ret ;	484:1:11349:11359	5603746	30	True				
ANR	5604322	Identifier	ret		5603746	0					
ANR	5604323	ReturnType	R_API bool		5603746	1					
ANR	5604324	Identifier	r_core_project_open		5603746	2					
ANR	5604325	ParameterList	"RCore * core , const char * prjfile , bool thready"		5603746	3					
ANR	5604326	Parameter	RCore * core	383:31:8557:8567	5603746	0	True				
ANR	5604327	ParameterType	RCore *		5603746	0					
ANR	5604328	Identifier	core		5603746	1					
ANR	5604329	Parameter	const char * prjfile	383:44:8570:8588	5603746	1	True				
ANR	5604330	ParameterType	const char *		5603746	0					
ANR	5604331	Identifier	prjfile		5603746	1					
ANR	5604332	Parameter	bool thready	383:65:8591:8602	5603746	2	True				
ANR	5604333	ParameterType	bool		5603746	0					
ANR	5604334	Identifier	thready		5603746	1					
ANR	5604335	CFGEntryNode	ENTRY		5603746		True				
ANR	5604336	CFGExitNode	EXIT		5603746		True				
ANR	5604337	Symbol	file_path		5603746						
ANR	5604338	Symbol	r_config_get		5603746						
ANR	5604339	Symbol	* core		5603746						
ANR	5604340	Symbol	* prjfile		5603746						
ANR	5604341	Symbol	oldbin		5603746						
ANR	5604342	Symbol	core -> anal		5603746						
ANR	5604343	Symbol	askuser		5603746						
ANR	5604344	Symbol	filepath		5603746						
ANR	5604345	Symbol	core -> io		5603746						
ANR	5604346	Symbol	* filepath		5603746						
ANR	5604347	Symbol	close_current_session		5603746						
ANR	5604348	Symbol	r_core_project_load		5603746						
ANR	5604349	Symbol	newbin		5603746						
ANR	5604350	Symbol	UT64_MAX		5603746						
ANR	5604351	Symbol	core -> bin		5603746						
ANR	5604352	Symbol	ret		5603746						
ANR	5604353	Symbol	core -> config		5603746						
ANR	5604354	Symbol	strcmp		5603746						
ANR	5604355	Symbol	r_cons_is_interactive		5603746						
ANR	5604356	Symbol	r_core_project_info		5603746						
ANR	5604357	Symbol	getProjectLaddr		5603746						
ANR	5604358	Symbol	mapaddr		5603746						
ANR	5604359	Symbol	false		5603746						
ANR	5604360	Symbol	r_cons_yesno		5603746						
ANR	5604361	Symbol	prj		5603746						
ANR	5604362	Symbol	* newbin		5603746						
ANR	5604363	Symbol	core -> flags		5603746						
ANR	5604364	Symbol	prjfile		5603746						
ANR	5604365	Symbol	r_core_file_open		5603746						
ANR	5604366	Symbol	* file_path		5603746						
ANR	5604367	Symbol	thready		5603746						
ANR	5604368	Symbol	projectScriptPath		5603746						
ANR	5604369	Symbol	core		5603746						
ANR	5604370	Symbol	strstr		5603746						
ANR	5604371	Symbol	r_config_get_i		5603746						
ANR	5604372	Symbol	true		5603746						
ANR	5604373	Symbol	strdup		5603746						
ANR	5604374	Symbol	r_file_exists		5603746						
ANR	5604375	Function	r_core_project_info	487:0:11364:12399							
ANR	5604376	FunctionDef	"r_core_project_info (RCore * core , const char * prjfile)"		5604375	0					
ANR	5604377	CompoundStatement		487:66:11430:12399	5604375	0					
ANR	5604378	IdentifierDeclStatement	FILE * fd ;	488:1:11433:11441	5604375	0	True				
ANR	5604379	IdentifierDecl	* fd		5604375	0					
ANR	5604380	IdentifierDeclType	FILE *		5604375	0					
ANR	5604381	Identifier	fd		5604375	1					
ANR	5604382	IdentifierDeclStatement	"char buf [ 256 ] , * file = NULL ;"	489:1:11444:11471	5604375	1	True				
ANR	5604383	IdentifierDecl	buf [ 256 ]		5604375	0					
ANR	5604384	IdentifierDeclType	char [ 256 ]		5604375	0					
ANR	5604385	Identifier	buf		5604375	1					
ANR	5604386	PrimaryExpression	256		5604375	2					
ANR	5604387	IdentifierDecl	* file = NULL		5604375	1					
ANR	5604388	IdentifierDeclType	char *		5604375	0					
ANR	5604389	Identifier	file		5604375	1					
ANR	5604390	AssignmentExpression	* file = NULL		5604375	2		=			
ANR	5604391	Identifier	NULL		5604375	0					
ANR	5604392	Identifier	NULL		5604375	1					
ANR	5604393	IdentifierDeclStatement	"char * prj = projectScriptPath ( core , prjfile ) ;"	490:1:11474:11519	5604375	2	True				
ANR	5604394	IdentifierDecl	"* prj = projectScriptPath ( core , prjfile )"		5604375	0					
ANR	5604395	IdentifierDeclType	char *		5604375	0					
ANR	5604396	Identifier	prj		5604375	1					
ANR	5604397	AssignmentExpression	"* prj = projectScriptPath ( core , prjfile )"		5604375	2		=			
ANR	5604398	Identifier	prj		5604375	0					
ANR	5604399	CallExpression	"projectScriptPath ( core , prjfile )"		5604375	1					
ANR	5604400	Callee	projectScriptPath		5604375	0					
ANR	5604401	Identifier	projectScriptPath		5604375	0					
ANR	5604402	ArgumentList	core		5604375	1					
ANR	5604403	Argument	core		5604375	0					
ANR	5604404	Identifier	core		5604375	0					
ANR	5604405	Argument	prjfile		5604375	1					
ANR	5604406	Identifier	prjfile		5604375	0					
ANR	5604407	IfStatement	if ( ! prj )		5604375	3					
ANR	5604408	Condition	! prj	491:5:11526:11529	5604375	0	True				
ANR	5604409	UnaryOperationExpression	! prj		5604375	0					
ANR	5604410	UnaryOperator	!		5604375	0					
ANR	5604411	Identifier	prj		5604375	1					
ANR	5604412	CompoundStatement		5:11:101:101	5604375	1					
ANR	5604413	ExpressionStatement	"eprintf ( ""Invalid project name '%s'\\n"" , prjfile )"	492:2:11536:11584	5604375	0	True				
ANR	5604414	CallExpression	"eprintf ( ""Invalid project name '%s'\\n"" , prjfile )"		5604375	0					
ANR	5604415	Callee	eprintf		5604375	0					
ANR	5604416	Identifier	eprintf		5604375	0					
ANR	5604417	ArgumentList	"""Invalid project name '%s'\\n"""		5604375	1					
ANR	5604418	Argument	"""Invalid project name '%s'\\n"""		5604375	0					
ANR	5604419	PrimaryExpression	"""Invalid project name '%s'\\n"""		5604375	0					
ANR	5604420	Argument	prjfile		5604375	1					
ANR	5604421	Identifier	prjfile		5604375	0					
ANR	5604422	ReturnStatement	return NULL ;	493:2:11588:11599	5604375	1	True				
ANR	5604423	Identifier	NULL		5604375	0					
ANR	5604424	ExpressionStatement	"fd = r_sandbox_fopen ( prj , ""r"" )"	495:1:11605:11636	5604375	4	True				
ANR	5604425	AssignmentExpression	"fd = r_sandbox_fopen ( prj , ""r"" )"		5604375	0		=			
ANR	5604426	Identifier	fd		5604375	0					
ANR	5604427	CallExpression	"r_sandbox_fopen ( prj , ""r"" )"		5604375	1					
ANR	5604428	Callee	r_sandbox_fopen		5604375	0					
ANR	5604429	Identifier	r_sandbox_fopen		5604375	0					
ANR	5604430	ArgumentList	prj		5604375	1					
ANR	5604431	Argument	prj		5604375	0					
ANR	5604432	Identifier	prj		5604375	0					
ANR	5604433	Argument	"""r"""		5604375	1					
ANR	5604434	PrimaryExpression	"""r"""		5604375	0					
ANR	5604435	IfStatement	if ( fd )		5604375	5					
ANR	5604436	Condition	fd	496:5:11643:11644	5604375	0	True				
ANR	5604437	Identifier	fd		5604375	0					
ANR	5604438	CompoundStatement		10:9:216:216	5604375	1					
ANR	5604439	ForStatement	for ( ; ; )		5604375	0					
ANR	5604440	CompoundStatement		11:11:229:229	5604375	0					
ANR	5604441	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) , fd ) )"		5604375	0					
ANR	5604442	Condition	"! fgets ( buf , sizeof ( buf ) , fd )"	498:7:11669:11698	5604375	0	True				
ANR	5604443	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) , fd )"		5604375	0					
ANR	5604444	UnaryOperator	!		5604375	0					
ANR	5604445	CallExpression	"fgets ( buf , sizeof ( buf ) , fd )"		5604375	1					
ANR	5604446	Callee	fgets		5604375	0					
ANR	5604447	Identifier	fgets		5604375	0					
ANR	5604448	ArgumentList	buf		5604375	1					
ANR	5604449	Argument	buf		5604375	0					
ANR	5604450	Identifier	buf		5604375	0					
ANR	5604451	Argument	sizeof ( buf )		5604375	1					
ANR	5604452	SizeofExpression	sizeof ( buf )		5604375	0					
ANR	5604453	Sizeof	sizeof		5604375	0					
ANR	5604454	SizeofOperand	buf		5604375	1					
ANR	5604455	Argument	fd		5604375	2					
ANR	5604456	Identifier	fd		5604375	0					
ANR	5604457	CompoundStatement		12:39:270:270	5604375	1					
ANR	5604458	BreakStatement	break ;	499:4:11707:11712	5604375	0	True				
ANR	5604459	IfStatement	if ( feof ( fd ) )		5604375	1					
ANR	5604460	Condition	feof ( fd )	501:7:11726:11734	5604375	0	True				
ANR	5604461	CallExpression	feof ( fd )		5604375	0					
ANR	5604462	Callee	feof		5604375	0					
ANR	5604463	Identifier	feof		5604375	0					
ANR	5604464	ArgumentList	fd		5604375	1					
ANR	5604465	Argument	fd		5604375	0					
ANR	5604466	Identifier	fd		5604375	0					
ANR	5604467	CompoundStatement		15:18:306:306	5604375	1					
ANR	5604468	BreakStatement	break ;	502:4:11743:11748	5604375	0	True				
ANR	5604469	IfStatement	"if ( ! strncmp ( buf , ""\\""e file.path = "" , 15 ) )"		5604375	2					
ANR	5604470	Condition	"! strncmp ( buf , ""\\""e file.path = "" , 15 )"	504:7:11762:11799	5604375	0	True				
ANR	5604471	UnaryOperationExpression	"! strncmp ( buf , ""\\""e file.path = "" , 15 )"		5604375	0					
ANR	5604472	UnaryOperator	!		5604375	0					
ANR	5604473	CallExpression	"strncmp ( buf , ""\\""e file.path = "" , 15 )"		5604375	1					
ANR	5604474	Callee	strncmp		5604375	0					
ANR	5604475	Identifier	strncmp		5604375	0					
ANR	5604476	ArgumentList	buf		5604375	1					
ANR	5604477	Argument	buf		5604375	0					
ANR	5604478	Identifier	buf		5604375	0					
ANR	5604479	Argument	"""\\""e file.path = """		5604375	1					
ANR	5604480	PrimaryExpression	"""\\""e file.path = """		5604375	0					
ANR	5604481	Argument	15		5604375	2					
ANR	5604482	PrimaryExpression	15		5604375	0					
ANR	5604483	CompoundStatement		18:47:371:371	5604375	1					
ANR	5604484	ExpressionStatement	buf [ strlen ( buf ) - 2 ] = 0	505:4:11808:11833	5604375	0	True				
ANR	5604485	AssignmentExpression	buf [ strlen ( buf ) - 2 ] = 0		5604375	0		=			
ANR	5604486	ArrayIndexing	buf [ strlen ( buf ) - 2 ]		5604375	0					
ANR	5604487	Identifier	buf		5604375	0					
ANR	5604488	AdditiveExpression	strlen ( buf ) - 2		5604375	1		-			
ANR	5604489	CallExpression	strlen ( buf )		5604375	0					
ANR	5604490	Callee	strlen		5604375	0					
ANR	5604491	Identifier	strlen		5604375	0					
ANR	5604492	ArgumentList	buf		5604375	1					
ANR	5604493	Argument	buf		5604375	0					
ANR	5604494	Identifier	buf		5604375	0					
ANR	5604495	PrimaryExpression	2		5604375	1					
ANR	5604496	PrimaryExpression	0		5604375	1					
ANR	5604497	ExpressionStatement	file = r_str_new ( buf + 15 )	506:4:11839:11866	5604375	1	True				
ANR	5604498	AssignmentExpression	file = r_str_new ( buf + 15 )		5604375	0		=			
ANR	5604499	Identifier	file		5604375	0					
ANR	5604500	CallExpression	r_str_new ( buf + 15 )		5604375	1					
ANR	5604501	Callee	r_str_new		5604375	0					
ANR	5604502	Identifier	r_str_new		5604375	0					
ANR	5604503	ArgumentList	buf + 15		5604375	1					
ANR	5604504	Argument	buf + 15		5604375	0					
ANR	5604505	AdditiveExpression	buf + 15		5604375	0		+			
ANR	5604506	Identifier	buf		5604375	0					
ANR	5604507	PrimaryExpression	15		5604375	1					
ANR	5604508	BreakStatement	break ;	507:4:11872:11877	5604375	2	True				
ANR	5604509	IfStatement	"if ( ! strncmp ( buf , ""\\""e file.lastpath = "" , 19 ) )"		5604375	3					
ANR	5604510	Condition	"! strncmp ( buf , ""\\""e file.lastpath = "" , 19 )"	509:7:11891:11932	5604375	0	True				
ANR	5604511	UnaryOperationExpression	"! strncmp ( buf , ""\\""e file.lastpath = "" , 19 )"		5604375	0					
ANR	5604512	UnaryOperator	!		5604375	0					
ANR	5604513	CallExpression	"strncmp ( buf , ""\\""e file.lastpath = "" , 19 )"		5604375	1					
ANR	5604514	Callee	strncmp		5604375	0					
ANR	5604515	Identifier	strncmp		5604375	0					
ANR	5604516	ArgumentList	buf		5604375	1					
ANR	5604517	Argument	buf		5604375	0					
ANR	5604518	Identifier	buf		5604375	0					
ANR	5604519	Argument	"""\\""e file.lastpath = """		5604375	1					
ANR	5604520	PrimaryExpression	"""\\""e file.lastpath = """		5604375	0					
ANR	5604521	Argument	19		5604375	2					
ANR	5604522	PrimaryExpression	19		5604375	0					
ANR	5604523	CompoundStatement		23:51:504:504	5604375	1					
ANR	5604524	ExpressionStatement	buf [ strlen ( buf ) - 2 ] = 0	510:4:11941:11966	5604375	0	True				
ANR	5604525	AssignmentExpression	buf [ strlen ( buf ) - 2 ] = 0		5604375	0		=			
ANR	5604526	ArrayIndexing	buf [ strlen ( buf ) - 2 ]		5604375	0					
ANR	5604527	Identifier	buf		5604375	0					
ANR	5604528	AdditiveExpression	strlen ( buf ) - 2		5604375	1		-			
ANR	5604529	CallExpression	strlen ( buf )		5604375	0					
ANR	5604530	Callee	strlen		5604375	0					
ANR	5604531	Identifier	strlen		5604375	0					
ANR	5604532	ArgumentList	buf		5604375	1					
ANR	5604533	Argument	buf		5604375	0					
ANR	5604534	Identifier	buf		5604375	0					
ANR	5604535	PrimaryExpression	2		5604375	1					
ANR	5604536	PrimaryExpression	0		5604375	1					
ANR	5604537	ExpressionStatement	file = r_str_new ( buf + 19 )	511:4:11972:11999	5604375	1	True				
ANR	5604538	AssignmentExpression	file = r_str_new ( buf + 19 )		5604375	0		=			
ANR	5604539	Identifier	file		5604375	0					
ANR	5604540	CallExpression	r_str_new ( buf + 19 )		5604375	1					
ANR	5604541	Callee	r_str_new		5604375	0					
ANR	5604542	Identifier	r_str_new		5604375	0					
ANR	5604543	ArgumentList	buf + 19		5604375	1					
ANR	5604544	Argument	buf + 19		5604375	0					
ANR	5604545	AdditiveExpression	buf + 19		5604375	0		+			
ANR	5604546	Identifier	buf		5604375	0					
ANR	5604547	PrimaryExpression	19		5604375	1					
ANR	5604548	BreakStatement	break ;	512:4:12005:12010	5604375	2	True				
ANR	5604549	IfStatement	"if ( ! strncmp ( buf , ""e file.path = "" , 14 ) )"		5604375	4					
ANR	5604550	Condition	"! strncmp ( buf , ""e file.path = "" , 14 )"	515:7:12057:12092	5604375	0	True				
ANR	5604551	UnaryOperationExpression	"! strncmp ( buf , ""e file.path = "" , 14 )"		5604375	0					
ANR	5604552	UnaryOperator	!		5604375	0					
ANR	5604553	CallExpression	"strncmp ( buf , ""e file.path = "" , 14 )"		5604375	1					
ANR	5604554	Callee	strncmp		5604375	0					
ANR	5604555	Identifier	strncmp		5604375	0					
ANR	5604556	ArgumentList	buf		5604375	1					
ANR	5604557	Argument	buf		5604375	0					
ANR	5604558	Identifier	buf		5604375	0					
ANR	5604559	Argument	"""e file.path = """		5604375	1					
ANR	5604560	PrimaryExpression	"""e file.path = """		5604375	0					
ANR	5604561	Argument	14		5604375	2					
ANR	5604562	PrimaryExpression	14		5604375	0					
ANR	5604563	CompoundStatement		29:45:664:664	5604375	1					
ANR	5604564	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = 0	516:4:12101:12126	5604375	0	True				
ANR	5604565	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = 0		5604375	0		=			
ANR	5604566	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		5604375	0					
ANR	5604567	Identifier	buf		5604375	0					
ANR	5604568	AdditiveExpression	strlen ( buf ) - 1		5604375	1		-			
ANR	5604569	CallExpression	strlen ( buf )		5604375	0					
ANR	5604570	Callee	strlen		5604375	0					
ANR	5604571	Identifier	strlen		5604375	0					
ANR	5604572	ArgumentList	buf		5604375	1					
ANR	5604573	Argument	buf		5604375	0					
ANR	5604574	Identifier	buf		5604375	0					
ANR	5604575	PrimaryExpression	1		5604375	1					
ANR	5604576	PrimaryExpression	0		5604375	1					
ANR	5604577	ExpressionStatement	file = r_str_new ( buf + 14 )	517:4:12132:12159	5604375	1	True				
ANR	5604578	AssignmentExpression	file = r_str_new ( buf + 14 )		5604375	0		=			
ANR	5604579	Identifier	file		5604375	0					
ANR	5604580	CallExpression	r_str_new ( buf + 14 )		5604375	1					
ANR	5604581	Callee	r_str_new		5604375	0					
ANR	5604582	Identifier	r_str_new		5604375	0					
ANR	5604583	ArgumentList	buf + 14		5604375	1					
ANR	5604584	Argument	buf + 14		5604375	0					
ANR	5604585	AdditiveExpression	buf + 14		5604375	0		+			
ANR	5604586	Identifier	buf		5604375	0					
ANR	5604587	PrimaryExpression	14		5604375	1					
ANR	5604588	BreakStatement	break ;	518:4:12165:12170	5604375	2	True				
ANR	5604589	ExpressionStatement	fclose ( fd )	521:2:12183:12194	5604375	1	True				
ANR	5604590	CallExpression	fclose ( fd )		5604375	0					
ANR	5604591	Callee	fclose		5604375	0					
ANR	5604592	Identifier	fclose		5604375	0					
ANR	5604593	ArgumentList	fd		5604375	1					
ANR	5604594	Argument	fd		5604375	0					
ANR	5604595	Identifier	fd		5604375	0					
ANR	5604596	ElseStatement	else		5604375	0					
ANR	5604597	CompoundStatement		36:8:773:773	5604375	0					
ANR	5604598	ExpressionStatement	"eprintf ( ""Cannot open project info (%s)\\n"" , prj )"	523:2:12208:12256	5604375	0	True				
ANR	5604599	CallExpression	"eprintf ( ""Cannot open project info (%s)\\n"" , prj )"		5604375	0					
ANR	5604600	Callee	eprintf		5604375	0					
ANR	5604601	Identifier	eprintf		5604375	0					
ANR	5604602	ArgumentList	"""Cannot open project info (%s)\\n"""		5604375	1					
ANR	5604603	Argument	"""Cannot open project info (%s)\\n"""		5604375	0					
ANR	5604604	PrimaryExpression	"""Cannot open project info (%s)\\n"""		5604375	0					
ANR	5604605	Argument	prj		5604375	1					
ANR	5604606	Identifier	prj		5604375	0					
ANR	5604607	IfStatement	if ( file )		5604375	6					
ANR	5604608	Condition	file	526:5:12272:12275	5604375	0	True				
ANR	5604609	Identifier	file		5604375	0					
ANR	5604610	CompoundStatement		40:11:847:847	5604375	1					
ANR	5604611	ExpressionStatement	"r_cons_printf ( ""Project: %s\\n"" , prj )"	527:2:12282:12318	5604375	0	True				
ANR	5604612	CallExpression	"r_cons_printf ( ""Project: %s\\n"" , prj )"		5604375	0					
ANR	5604613	Callee	r_cons_printf		5604375	0					
ANR	5604614	Identifier	r_cons_printf		5604375	0					
ANR	5604615	ArgumentList	"""Project: %s\\n"""		5604375	1					
ANR	5604616	Argument	"""Project: %s\\n"""		5604375	0					
ANR	5604617	PrimaryExpression	"""Project: %s\\n"""		5604375	0					
ANR	5604618	Argument	prj		5604375	1					
ANR	5604619	Identifier	prj		5604375	0					
ANR	5604620	ExpressionStatement	"r_cons_printf ( ""FilePath: %s\\n"" , file )"	528:2:12322:12360	5604375	1	True				
ANR	5604621	CallExpression	"r_cons_printf ( ""FilePath: %s\\n"" , file )"		5604375	0					
ANR	5604622	Callee	r_cons_printf		5604375	0					
ANR	5604623	Identifier	r_cons_printf		5604375	0					
ANR	5604624	ArgumentList	"""FilePath: %s\\n"""		5604375	1					
ANR	5604625	Argument	"""FilePath: %s\\n"""		5604375	0					
ANR	5604626	PrimaryExpression	"""FilePath: %s\\n"""		5604375	0					
ANR	5604627	Argument	file		5604375	1					
ANR	5604628	Identifier	file		5604375	0					
ANR	5604629	ExpressionStatement	free ( prj )	531:1:12373:12383	5604375	7	True				
ANR	5604630	CallExpression	free ( prj )		5604375	0					
ANR	5604631	Callee	free		5604375	0					
ANR	5604632	Identifier	free		5604375	0					
ANR	5604633	ArgumentList	prj		5604375	1					
ANR	5604634	Argument	prj		5604375	0					
ANR	5604635	Identifier	prj		5604375	0					
ANR	5604636	ReturnStatement	return file ;	532:1:12386:12397	5604375	8	True				
ANR	5604637	Identifier	file		5604375	0					
ANR	5604638	ReturnType	R_API char *		5604375	1					
ANR	5604639	Identifier	r_core_project_info		5604375	2					
ANR	5604640	ParameterList	"RCore * core , const char * prjfile"		5604375	3					
ANR	5604641	Parameter	RCore * core	487:32:11396:11406	5604375	0	True				
ANR	5604642	ParameterType	RCore *		5604375	0					
ANR	5604643	Identifier	core		5604375	1					
ANR	5604644	Parameter	const char * prjfile	487:45:11409:11427	5604375	1	True				
ANR	5604645	ParameterType	const char *		5604375	0					
ANR	5604646	Identifier	prjfile		5604375	1					
ANR	5604647	CFGEntryNode	ENTRY		5604375		True				
ANR	5604648	CFGExitNode	EXIT		5604375		True				
ANR	5604649	InfiniteForNode	true		5604375		True				
ANR	5604650	Symbol	* buf		5604375						
ANR	5604651	Symbol	NULL		5604375						
ANR	5604652	Symbol	prj		5604375						
ANR	5604653	Symbol	prjfile		5604375						
ANR	5604654	Symbol	fgets		5604375						
ANR	5604655	Symbol	projectScriptPath		5604375						
ANR	5604656	Symbol	core		5604375						
ANR	5604657	Symbol	strncmp		5604375						
ANR	5604658	Symbol	strlen		5604375						
ANR	5604659	Symbol	buf		5604375						
ANR	5604660	Symbol	file		5604375						
ANR	5604661	Symbol	* strlen		5604375						
ANR	5604662	Symbol	r_sandbox_fopen		5604375						
ANR	5604663	Symbol	feof		5604375						
ANR	5604664	Symbol	fd		5604375						
ANR	5604665	Symbol	r_str_new		5604375						
ANR	5604666	DeclStmt									
ANR	5604667	Decl							int	int	fdc
ANR	5604668	Function	store_files_and_maps	537:0:12466:13111							
ANR	5604669	FunctionDef	"store_files_and_maps (RCore * core , RIODesc * desc , ut32 id)"		5604668	0					
ANR	5604670	CompoundStatement		537:71:12537:13111	5604668	0					
ANR	5604671	IdentifierDeclStatement	RList * maps = NULL ;	538:1:12540:12558	5604668	0	True				
ANR	5604672	IdentifierDecl	* maps = NULL		5604668	0					
ANR	5604673	IdentifierDeclType	RList *		5604668	0					
ANR	5604674	Identifier	maps		5604668	1					
ANR	5604675	AssignmentExpression	* maps = NULL		5604668	2		=			
ANR	5604676	Identifier	NULL		5604668	0					
ANR	5604677	Identifier	NULL		5604668	1					
ANR	5604678	IdentifierDeclStatement	RListIter * iter ;	539:1:12561:12576	5604668	1	True				
ANR	5604679	IdentifierDecl	* iter		5604668	0					
ANR	5604680	IdentifierDeclType	RListIter *		5604668	0					
ANR	5604681	Identifier	iter		5604668	1					
ANR	5604682	IdentifierDeclStatement	RIOMap * map ;	540:1:12579:12590	5604668	2	True				
ANR	5604683	IdentifierDecl	* map		5604668	0					
ANR	5604684	IdentifierDeclType	RIOMap *		5604668	0					
ANR	5604685	Identifier	map		5604668	1					
ANR	5604686	IfStatement	if ( desc )		5604668	3					
ANR	5604687	Condition	desc	541:5:12597:12600	5604668	0	True				
ANR	5604688	Identifier	desc		5604668	0					
ANR	5604689	CompoundStatement		5:11:65:65	5604668	1					
ANR	5604690	ExpressionStatement	"r_cons_printf ( ""\\""obf %s\\""\\n"" , desc -> uri )"	543:2:12628:12669	5604668	0	True				
ANR	5604691	CallExpression	"r_cons_printf ( ""\\""obf %s\\""\\n"" , desc -> uri )"		5604668	0					
ANR	5604692	Callee	r_cons_printf		5604668	0					
ANR	5604693	Identifier	r_cons_printf		5604668	0					
ANR	5604694	ArgumentList	"""\\""obf %s\\""\\n"""		5604668	1					
ANR	5604695	Argument	"""\\""obf %s\\""\\n"""		5604668	0					
ANR	5604696	PrimaryExpression	"""\\""obf %s\\""\\n"""		5604668	0					
ANR	5604697	Argument	desc -> uri		5604668	1					
ANR	5604698	PtrMemberAccess	desc -> uri		5604668	0					
ANR	5604699	Identifier	desc		5604668	0					
ANR	5604700	Identifier	uri		5604668	1					
ANR	5604701	ExpressionStatement	"r_cons_printf ( ""\\""ofs \\\\\\""%s\\\\\\"" %s\\""\\n"" , desc -> uri , r_str_rwx_i ( desc -> perm ) )"	544:2:12673:12751	5604668	1	True				
ANR	5604702	CallExpression	"r_cons_printf ( ""\\""ofs \\\\\\""%s\\\\\\"" %s\\""\\n"" , desc -> uri , r_str_rwx_i ( desc -> perm ) )"		5604668	0					
ANR	5604703	Callee	r_cons_printf		5604668	0					
ANR	5604704	Identifier	r_cons_printf		5604668	0					
ANR	5604705	ArgumentList	"""\\""ofs \\\\\\""%s\\\\\\"" %s\\""\\n"""		5604668	1					
ANR	5604706	Argument	"""\\""ofs \\\\\\""%s\\\\\\"" %s\\""\\n"""		5604668	0					
ANR	5604707	PrimaryExpression	"""\\""ofs \\\\\\""%s\\\\\\"" %s\\""\\n"""		5604668	0					
ANR	5604708	Argument	desc -> uri		5604668	1					
ANR	5604709	PtrMemberAccess	desc -> uri		5604668	0					
ANR	5604710	Identifier	desc		5604668	0					
ANR	5604711	Identifier	uri		5604668	1					
ANR	5604712	Argument	r_str_rwx_i ( desc -> perm )		5604668	2					
ANR	5604713	CallExpression	r_str_rwx_i ( desc -> perm )		5604668	0					
ANR	5604714	Callee	r_str_rwx_i		5604668	0					
ANR	5604715	Identifier	r_str_rwx_i		5604668	0					
ANR	5604716	ArgumentList	desc -> perm		5604668	1					
ANR	5604717	Argument	desc -> perm		5604668	0					
ANR	5604718	PtrMemberAccess	desc -> perm		5604668	0					
ANR	5604719	Identifier	desc		5604668	0					
ANR	5604720	Identifier	perm		5604668	1					
ANR	5604721	IfStatement	"if ( ( maps = r_io_map_get_for_fd ( core -> io , id ) ) )"		5604668	2					
ANR	5604722	Condition	"maps = r_io_map_get_for_fd ( core -> io , id )"	545:6:12759:12801	5604668	0	True				
ANR	5604723	AssignmentExpression	"maps = r_io_map_get_for_fd ( core -> io , id )"		5604668	0		=			
ANR	5604724	Identifier	maps		5604668	0					
ANR	5604725	CallExpression	"r_io_map_get_for_fd ( core -> io , id )"		5604668	1					
ANR	5604726	Callee	r_io_map_get_for_fd		5604668	0					
ANR	5604727	Identifier	r_io_map_get_for_fd		5604668	0					
ANR	5604728	ArgumentList	core -> io		5604668	1					
ANR	5604729	Argument	core -> io		5604668	0					
ANR	5604730	PtrMemberAccess	core -> io		5604668	0					
ANR	5604731	Identifier	core		5604668	0					
ANR	5604732	Identifier	io		5604668	1					
ANR	5604733	Argument	id		5604668	1					
ANR	5604734	Identifier	id		5604668	0					
ANR	5604735	CompoundStatement		9:51:266:266	5604668	1					
ANR	5604736	Statement	r_list_foreach	546:3:12809:12822	5604668	0	True				
ANR	5604737	Statement	(	546:18:12824:12824	5604668	1	True				
ANR	5604738	Statement	maps	546:19:12825:12828	5604668	2	True				
ANR	5604739	Statement	","	546:23:12829:12829	5604668	3	True				
ANR	5604740	Statement	iter	546:25:12831:12834	5604668	4	True				
ANR	5604741	Statement	","	546:29:12835:12835	5604668	5	True				
ANR	5604742	Statement	map	546:31:12837:12839	5604668	6	True				
ANR	5604743	Statement	)	546:34:12840:12840	5604668	7	True				
ANR	5604744	CompoundStatement		10:36:304:304	5604668	8					
ANR	5604745	Statement	r_cons_printf	547:4:12848:12860	5604668	0	True				
ANR	5604746	Statement	(	547:18:12862:12862	5604668	1	True				
ANR	5604747	Statement	"""om %d 0x%"""	547:19:12863:12873	5604668	2	True				
ANR	5604748	Statement	PFMT64x	547:30:12874:12880	5604668	3	True				
ANR	5604749	Statement	""" 0x%"""	547:37:12881:12886	5604668	4	True				
ANR	5604750	Statement	PFMT64x	547:43:12887:12893	5604668	5	True				
ANR	5604751	Statement	""" 0x%"""	547:50:12894:12899	5604668	6	True				
ANR	5604752	Statement	PFMT64x	547:56:12900:12906	5604668	7	True				
ANR	5604753	Statement	""" %s%s%s\\n"""	547:63:12907:12917	5604668	8	True				
ANR	5604754	Statement	","	547:74:12918:12918	5604668	9	True				
ANR	5604755	Statement	fdc	547:76:12920:12922	5604668	10	True				
ANR	5604756	Statement	","	547:79:12923:12923	5604668	11	True				
ANR	5604757	Statement	map	548:5:12930:12932	5604668	12	True				
ANR	5604758	Statement	->	548:8:12933:12934	5604668	13	True				
ANR	5604759	Statement	itv	548:10:12935:12937	5604668	14	True				
ANR	5604760	Statement	.	548:13:12938:12938	5604668	15	True				
ANR	5604761	Statement	addr	548:14:12939:12942	5604668	16	True				
ANR	5604762	Statement	","	548:18:12943:12943	5604668	17	True				
ANR	5604763	Statement	map	548:20:12945:12947	5604668	18	True				
ANR	5604764	Statement	->	548:23:12948:12949	5604668	19	True				
ANR	5604765	Statement	itv	548:25:12950:12952	5604668	20	True				
ANR	5604766	Statement	.	548:28:12953:12953	5604668	21	True				
ANR	5604767	Statement	size	548:29:12954:12957	5604668	22	True				
ANR	5604768	Statement	","	548:33:12958:12958	5604668	23	True				
ANR	5604769	Statement	map	548:35:12960:12962	5604668	24	True				
ANR	5604770	Statement	->	548:38:12963:12964	5604668	25	True				
ANR	5604771	Statement	delta	548:40:12965:12969	5604668	26	True				
ANR	5604772	Statement	","	548:45:12970:12970	5604668	27	True				
ANR	5604773	Statement	r_str_rwx_i	548:47:12972:12982	5604668	28	True				
ANR	5604774	Statement	(	548:59:12984:12984	5604668	29	True				
ANR	5604775	Statement	map	548:60:12985:12987	5604668	30	True				
ANR	5604776	Statement	->	548:63:12988:12989	5604668	31	True				
ANR	5604777	Statement	perm	548:65:12990:12993	5604668	32	True				
ANR	5604778	Statement	)	548:69:12994:12994	5604668	33	True				
ANR	5604779	Statement	","	548:70:12995:12995	5604668	34	True				
ANR	5604780	Statement	map	549:5:13002:13004	5604668	35	True				
ANR	5604781	Statement	->	549:8:13005:13006	5604668	36	True				
ANR	5604782	Statement	name	549:10:13007:13010	5604668	37	True				
ANR	5604783	Statement	?	549:15:13012:13012	5604668	38	True				
ANR	5604784	Statement	""" """	549:17:13014:13016	5604668	39	True				
ANR	5604785	Statement	:	549:21:13018:13018	5604668	40	True				
ANR	5604786	Statement	""""""	549:23:13020:13021	5604668	41	True				
ANR	5604787	Statement	","	549:25:13022:13022	5604668	42	True				
ANR	5604788	Statement	map	549:27:13024:13026	5604668	43	True				
ANR	5604789	Statement	->	549:30:13027:13028	5604668	44	True				
ANR	5604790	Statement	name	549:32:13029:13032	5604668	45	True				
ANR	5604791	Statement	?	549:37:13034:13034	5604668	46	True				
ANR	5604792	Statement	map	549:39:13036:13038	5604668	47	True				
ANR	5604793	Statement	->	549:42:13039:13040	5604668	48	True				
ANR	5604794	Label	name :	549:44:13041:13046	5604668	49	True				
ANR	5604795	Identifier	name		5604668	0					
ANR	5604796	Statement	""""""	549:51:13048:13049	5604668	50	True				
ANR	5604797	Statement	)	549:53:13050:13050	5604668	51	True				
ANR	5604798	ExpressionStatement		549:54:13051:13051	5604668	52	True				
ANR	5604799	ExpressionStatement	r_list_free ( maps )	551:3:13061:13079	5604668	9	True				
ANR	5604800	CallExpression	r_list_free ( maps )		5604668	0					
ANR	5604801	Callee	r_list_free		5604668	0					
ANR	5604802	Identifier	r_list_free		5604668	0					
ANR	5604803	ArgumentList	maps		5604668	1					
ANR	5604804	Argument	maps		5604668	0					
ANR	5604805	Identifier	maps		5604668	0					
ANR	5604806	ExpressionStatement	fdc ++	553:2:13087:13092	5604668	3	True				
ANR	5604807	PostIncDecOperationExpression	fdc ++		5604668	0					
ANR	5604808	Identifier	fdc		5604668	0					
ANR	5604809	IncDec	++		5604668	1					
ANR	5604810	ReturnStatement	return true ;	555:1:13098:13109	5604668	4	True				
ANR	5604811	Identifier	true		5604668	0					
ANR	5604812	ReturnType	static bool		5604668	1					
ANR	5604813	Identifier	store_files_and_maps		5604668	2					
ANR	5604814	ParameterList	"RCore * core , RIODesc * desc , ut32 id"		5604668	3					
ANR	5604815	Parameter	RCore * core	537:34:12500:12510	5604668	0	True				
ANR	5604816	ParameterType	RCore *		5604668	0					
ANR	5604817	Identifier	core		5604668	1					
ANR	5604818	Parameter	RIODesc * desc	537:47:12513:12525	5604668	1	True				
ANR	5604819	ParameterType	RIODesc *		5604668	0					
ANR	5604820	Identifier	desc		5604668	1					
ANR	5604821	Parameter	ut32 id	537:62:12528:12534	5604668	2	True				
ANR	5604822	ParameterType	ut32		5604668	0					
ANR	5604823	Identifier	id		5604668	1					
ANR	5604824	CFGEntryNode	ENTRY		5604668		True				
ANR	5604825	CFGExitNode	EXIT		5604668		True				
ANR	5604826	Symbol	desc -> uri		5604668						
ANR	5604827	Symbol	NULL		5604668						
ANR	5604828	Symbol	maps		5604668						
ANR	5604829	Symbol	fdc		5604668						
ANR	5604830	Symbol	desc -> perm		5604668						
ANR	5604831	Symbol	r_io_map_get_for_fd		5604668						
ANR	5604832	Symbol	* core		5604668						
ANR	5604833	Symbol	iter		5604668						
ANR	5604834	Symbol	core		5604668						
ANR	5604835	Symbol	core -> io		5604668						
ANR	5604836	Symbol	true		5604668						
ANR	5604837	Symbol	* desc		5604668						
ANR	5604838	Symbol	id		5604668						
ANR	5604839	Symbol	map		5604668						
ANR	5604840	Symbol	r_str_rwx_i		5604668						
ANR	5604841	Symbol	desc		5604668						
ANR	5604842	Function	simpleProjectSaveScript	558:0:13114:14633							
ANR	5604843	FunctionDef	"simpleProjectSaveScript (RCore * core , const char * file , int opts)"		5604842	0					
ANR	5604844	CompoundStatement		558:77:13191:14633	5604842	0					
ANR	5604845	IdentifierDeclStatement	"char * filename , * hl , * ohl = NULL ;"	559:1:13194:13226	5604842	0	True				
ANR	5604846	IdentifierDecl	* filename		5604842	0					
ANR	5604847	IdentifierDeclType	char *		5604842	0					
ANR	5604848	Identifier	filename		5604842	1					
ANR	5604849	IdentifierDecl	* hl		5604842	1					
ANR	5604850	IdentifierDeclType	char *		5604842	0					
ANR	5604851	Identifier	hl		5604842	1					
ANR	5604852	IdentifierDecl	* ohl = NULL		5604842	2					
ANR	5604853	IdentifierDeclType	char *		5604842	0					
ANR	5604854	Identifier	ohl		5604842	1					
ANR	5604855	AssignmentExpression	* ohl = NULL		5604842	2		=			
ANR	5604856	Identifier	NULL		5604842	0					
ANR	5604857	Identifier	NULL		5604842	1					
ANR	5604858	IdentifierDeclStatement	"int fd , fdold ;"	560:1:13229:13242	5604842	1	True				
ANR	5604859	IdentifierDecl	fd		5604842	0					
ANR	5604860	IdentifierDeclType	int		5604842	0					
ANR	5604861	Identifier	fd		5604842	1					
ANR	5604862	IdentifierDecl	fdold		5604842	1					
ANR	5604863	IdentifierDeclType	int		5604842	0					
ANR	5604864	Identifier	fdold		5604842	1					
ANR	5604865	IfStatement	if ( ! file || * file == '\\0' )		5604842	2					
ANR	5604866	Condition	! file || * file == '\\0'	562:5:13250:13272	5604842	0	True				
ANR	5604867	OrExpression	! file || * file == '\\0'		5604842	0		||			
ANR	5604868	UnaryOperationExpression	! file		5604842	0					
ANR	5604869	UnaryOperator	!		5604842	0					
ANR	5604870	Identifier	file		5604842	1					
ANR	5604871	EqualityExpression	* file == '\\0'		5604842	1		==			
ANR	5604872	UnaryOperationExpression	* file		5604842	0					
ANR	5604873	UnaryOperator	*		5604842	0					
ANR	5604874	Identifier	file		5604842	1					
ANR	5604875	PrimaryExpression	'\\0'		5604842	1					
ANR	5604876	CompoundStatement		5:30:83:83	5604842	1					
ANR	5604877	ReturnStatement	return false ;	563:2:13279:13291	5604842	0	True				
ANR	5604878	Identifier	false		5604842	0					
ANR	5604879	ExpressionStatement	filename = r_str_word_get_first ( file )	566:1:13298:13336	5604842	3	True				
ANR	5604880	AssignmentExpression	filename = r_str_word_get_first ( file )		5604842	0		=			
ANR	5604881	Identifier	filename		5604842	0					
ANR	5604882	CallExpression	r_str_word_get_first ( file )		5604842	1					
ANR	5604883	Callee	r_str_word_get_first		5604842	0					
ANR	5604884	Identifier	r_str_word_get_first		5604842	0					
ANR	5604885	ArgumentList	file		5604842	1					
ANR	5604886	Argument	file		5604842	0					
ANR	5604887	Identifier	file		5604842	0					
ANR	5604888	ExpressionStatement	"fd = r_sandbox_open ( file , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , 0644 )"	567:1:13339:13410	5604842	4	True				
ANR	5604889	AssignmentExpression	"fd = r_sandbox_open ( file , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , 0644 )"		5604842	0		=			
ANR	5604890	Identifier	fd		5604842	0					
ANR	5604891	CallExpression	"r_sandbox_open ( file , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , 0644 )"		5604842	1					
ANR	5604892	Callee	r_sandbox_open		5604842	0					
ANR	5604893	Identifier	r_sandbox_open		5604842	0					
ANR	5604894	ArgumentList	file		5604842	1					
ANR	5604895	Argument	file		5604842	0					
ANR	5604896	Identifier	file		5604842	0					
ANR	5604897	Argument	O_BINARY | O_RDWR | O_CREAT | O_TRUNC		5604842	1					
ANR	5604898	InclusiveOrExpression	O_BINARY | O_RDWR | O_CREAT | O_TRUNC		5604842	0		|			
ANR	5604899	Identifier	O_BINARY		5604842	0					
ANR	5604900	InclusiveOrExpression	O_RDWR | O_CREAT | O_TRUNC		5604842	1		|			
ANR	5604901	Identifier	O_RDWR		5604842	0					
ANR	5604902	InclusiveOrExpression	O_CREAT | O_TRUNC		5604842	1		|			
ANR	5604903	Identifier	O_CREAT		5604842	0					
ANR	5604904	Identifier	O_TRUNC		5604842	1					
ANR	5604905	Argument	0644		5604842	2					
ANR	5604906	PrimaryExpression	0644		5604842	0					
ANR	5604907	IfStatement	if ( fd == - 1 )		5604842	5					
ANR	5604908	Condition	fd == - 1	568:5:13417:13424	5604842	0	True				
ANR	5604909	EqualityExpression	fd == - 1		5604842	0		==			
ANR	5604910	Identifier	fd		5604842	0					
ANR	5604911	UnaryOperationExpression	- 1		5604842	1					
ANR	5604912	UnaryOperator	-		5604842	0					
ANR	5604913	PrimaryExpression	1		5604842	1					
ANR	5604914	CompoundStatement		11:15:235:235	5604842	1					
ANR	5604915	ExpressionStatement	free ( filename )	569:2:13431:13446	5604842	0	True				
ANR	5604916	CallExpression	free ( filename )		5604842	0					
ANR	5604917	Callee	free		5604842	0					
ANR	5604918	Identifier	free		5604842	0					
ANR	5604919	ArgumentList	filename		5604842	1					
ANR	5604920	Argument	filename		5604842	0					
ANR	5604921	Identifier	filename		5604842	0					
ANR	5604922	ReturnStatement	return false ;	570:2:13450:13462	5604842	1	True				
ANR	5604923	Identifier	false		5604842	0					
ANR	5604924	ExpressionStatement	hl = r_cons_singleton ( ) -> highlight	573:1:13469:13504	5604842	6	True				
ANR	5604925	AssignmentExpression	hl = r_cons_singleton ( ) -> highlight		5604842	0		=			
ANR	5604926	Identifier	hl		5604842	0					
ANR	5604927	PtrMemberAccess	r_cons_singleton ( ) -> highlight		5604842	1					
ANR	5604928	CallExpression	r_cons_singleton ( )		5604842	0					
ANR	5604929	Callee	r_cons_singleton		5604842	0					
ANR	5604930	Identifier	r_cons_singleton		5604842	0					
ANR	5604931	ArgumentList			5604842	1					
ANR	5604932	Identifier	highlight		5604842	1					
ANR	5604933	IfStatement	if ( hl )		5604842	7					
ANR	5604934	Condition	hl	574:5:13511:13512	5604842	0	True				
ANR	5604935	Identifier	hl		5604842	0					
ANR	5604936	CompoundStatement		17:9:323:323	5604842	1					
ANR	5604937	ExpressionStatement	ohl = strdup ( hl )	575:2:13519:13536	5604842	0	True				
ANR	5604938	AssignmentExpression	ohl = strdup ( hl )		5604842	0		=			
ANR	5604939	Identifier	ohl		5604842	0					
ANR	5604940	CallExpression	strdup ( hl )		5604842	1					
ANR	5604941	Callee	strdup		5604842	0					
ANR	5604942	Identifier	strdup		5604842	0					
ANR	5604943	ArgumentList	hl		5604842	1					
ANR	5604944	Argument	hl		5604842	0					
ANR	5604945	Identifier	hl		5604842	0					
ANR	5604946	ExpressionStatement	r_cons_highlight ( NULL )	576:2:13540:13563	5604842	1	True				
ANR	5604947	CallExpression	r_cons_highlight ( NULL )		5604842	0					
ANR	5604948	Callee	r_cons_highlight		5604842	0					
ANR	5604949	Identifier	r_cons_highlight		5604842	0					
ANR	5604950	ArgumentList	NULL		5604842	1					
ANR	5604951	Argument	NULL		5604842	0					
ANR	5604952	Identifier	NULL		5604842	0					
ANR	5604953	ExpressionStatement	fdold = r_cons_singleton ( ) -> fdout	579:1:13570:13604	5604842	8	True				
ANR	5604954	AssignmentExpression	fdold = r_cons_singleton ( ) -> fdout		5604842	0		=			
ANR	5604955	Identifier	fdold		5604842	0					
ANR	5604956	PtrMemberAccess	r_cons_singleton ( ) -> fdout		5604842	1					
ANR	5604957	CallExpression	r_cons_singleton ( )		5604842	0					
ANR	5604958	Callee	r_cons_singleton		5604842	0					
ANR	5604959	Identifier	r_cons_singleton		5604842	0					
ANR	5604960	ArgumentList			5604842	1					
ANR	5604961	Identifier	fdout		5604842	1					
ANR	5604962	ExpressionStatement	r_cons_singleton ( ) -> fdout = fd	580:1:13607:13638	5604842	9	True				
ANR	5604963	AssignmentExpression	r_cons_singleton ( ) -> fdout = fd		5604842	0		=			
ANR	5604964	PtrMemberAccess	r_cons_singleton ( ) -> fdout		5604842	0					
ANR	5604965	CallExpression	r_cons_singleton ( )		5604842	0					
ANR	5604966	Callee	r_cons_singleton		5604842	0					
ANR	5604967	Identifier	r_cons_singleton		5604842	0					
ANR	5604968	ArgumentList			5604842	1					
ANR	5604969	Identifier	fdout		5604842	1					
ANR	5604970	Identifier	fd		5604842	1					
ANR	5604971	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = false	581:1:13641:13693	5604842	10	True				
ANR	5604972	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = false		5604842	0		=			
ANR	5604973	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		5604842	0					
ANR	5604974	PtrMemberAccess	r_cons_singleton ( ) -> context		5604842	0					
ANR	5604975	CallExpression	r_cons_singleton ( )		5604842	0					
ANR	5604976	Callee	r_cons_singleton		5604842	0					
ANR	5604977	Identifier	r_cons_singleton		5604842	0					
ANR	5604978	ArgumentList			5604842	1					
ANR	5604979	Identifier	context		5604842	1					
ANR	5604980	Identifier	is_interactive		5604842	1					
ANR	5604981	Identifier	false		5604842	1					
ANR	5604982	ExpressionStatement	"r_str_write ( fd , ""# r2 rdb project file\\n"" )"	583:1:13718:13761	5604842	11	True				
ANR	5604983	CallExpression	"r_str_write ( fd , ""# r2 rdb project file\\n"" )"		5604842	0					
ANR	5604984	Callee	r_str_write		5604842	0					
ANR	5604985	Identifier	r_str_write		5604842	0					
ANR	5604986	ArgumentList	fd		5604842	1					
ANR	5604987	Argument	fd		5604842	0					
ANR	5604988	Identifier	fd		5604842	0					
ANR	5604989	Argument	"""# r2 rdb project file\\n"""		5604842	1					
ANR	5604990	PrimaryExpression	"""# r2 rdb project file\\n"""		5604842	0					
ANR	5604991	IfStatement	if ( opts & R_CORE_PRJ_EVAL )		5604842	12					
ANR	5604992	Condition	opts & R_CORE_PRJ_EVAL	585:5:13769:13790	5604842	0	True				
ANR	5604993	BitAndExpression	opts & R_CORE_PRJ_EVAL		5604842	0		&			
ANR	5604994	Identifier	opts		5604842	0					
ANR	5604995	Identifier	R_CORE_PRJ_EVAL		5604842	1					
ANR	5604996	CompoundStatement		28:29:601:601	5604842	1					
ANR	5604997	ExpressionStatement	"r_str_write ( fd , ""# eval\\n"" )"	586:2:13797:13825	5604842	0	True				
ANR	5604998	CallExpression	"r_str_write ( fd , ""# eval\\n"" )"		5604842	0					
ANR	5604999	Callee	r_str_write		5604842	0					
ANR	5605000	Identifier	r_str_write		5604842	0					
ANR	5605001	ArgumentList	fd		5604842	1					
ANR	5605002	Argument	fd		5604842	0					
ANR	5605003	Identifier	fd		5604842	0					
ANR	5605004	Argument	"""# eval\\n"""		5604842	1					
ANR	5605005	PrimaryExpression	"""# eval\\n"""		5604842	0					
ANR	5605006	ExpressionStatement	"r_config_list ( core -> config , NULL , true )"	587:2:13829:13869	5604842	1	True				
ANR	5605007	CallExpression	"r_config_list ( core -> config , NULL , true )"		5604842	0					
ANR	5605008	Callee	r_config_list		5604842	0					
ANR	5605009	Identifier	r_config_list		5604842	0					
ANR	5605010	ArgumentList	core -> config		5604842	1					
ANR	5605011	Argument	core -> config		5604842	0					
ANR	5605012	PtrMemberAccess	core -> config		5604842	0					
ANR	5605013	Identifier	core		5604842	0					
ANR	5605014	Identifier	config		5604842	1					
ANR	5605015	Argument	NULL		5604842	1					
ANR	5605016	Identifier	NULL		5604842	0					
ANR	5605017	Argument	true		5604842	2					
ANR	5605018	Identifier	true		5604842	0					
ANR	5605019	ExpressionStatement	r_cons_flush ( )	588:2:13873:13888	5604842	2	True				
ANR	5605020	CallExpression	r_cons_flush ( )		5604842	0					
ANR	5605021	Callee	r_cons_flush		5604842	0					
ANR	5605022	Identifier	r_cons_flush		5604842	0					
ANR	5605023	ArgumentList			5604842	1					
ANR	5605024	IfStatement	if ( opts & R_CORE_PRJ_FCNS )		5604842	13					
ANR	5605025	Condition	opts & R_CORE_PRJ_FCNS	591:5:13899:13920	5604842	0	True				
ANR	5605026	BitAndExpression	opts & R_CORE_PRJ_FCNS		5604842	0		&			
ANR	5605027	Identifier	opts		5604842	0					
ANR	5605028	Identifier	R_CORE_PRJ_FCNS		5604842	1					
ANR	5605029	CompoundStatement		34:29:731:731	5604842	1					
ANR	5605030	ExpressionStatement	"r_str_write ( fd , ""# functions\\n"" )"	592:2:13927:13960	5604842	0	True				
ANR	5605031	CallExpression	"r_str_write ( fd , ""# functions\\n"" )"		5604842	0					
ANR	5605032	Callee	r_str_write		5604842	0					
ANR	5605033	Identifier	r_str_write		5604842	0					
ANR	5605034	ArgumentList	fd		5604842	1					
ANR	5605035	Argument	fd		5604842	0					
ANR	5605036	Identifier	fd		5604842	0					
ANR	5605037	Argument	"""# functions\\n"""		5604842	1					
ANR	5605038	PrimaryExpression	"""# functions\\n"""		5604842	0					
ANR	5605039	ExpressionStatement	"r_core_cmd ( core , ""afl*"" , 0 )"	593:2:13964:13992	5604842	1	True				
ANR	5605040	CallExpression	"r_core_cmd ( core , ""afl*"" , 0 )"		5604842	0					
ANR	5605041	Callee	r_core_cmd		5604842	0					
ANR	5605042	Identifier	r_core_cmd		5604842	0					
ANR	5605043	ArgumentList	core		5604842	1					
ANR	5605044	Argument	core		5604842	0					
ANR	5605045	Identifier	core		5604842	0					
ANR	5605046	Argument	"""afl*"""		5604842	1					
ANR	5605047	PrimaryExpression	"""afl*"""		5604842	0					
ANR	5605048	Argument	0		5604842	2					
ANR	5605049	PrimaryExpression	0		5604842	0					
ANR	5605050	ExpressionStatement	r_cons_flush ( )	594:2:13996:14011	5604842	2	True				
ANR	5605051	CallExpression	r_cons_flush ( )		5604842	0					
ANR	5605052	Callee	r_cons_flush		5604842	0					
ANR	5605053	Identifier	r_cons_flush		5604842	0					
ANR	5605054	ArgumentList			5604842	1					
ANR	5605055	IfStatement	if ( opts & R_CORE_PRJ_FLAGS )		5604842	14					
ANR	5605056	Condition	opts & R_CORE_PRJ_FLAGS	597:5:14022:14044	5604842	0	True				
ANR	5605057	BitAndExpression	opts & R_CORE_PRJ_FLAGS		5604842	0		&			
ANR	5605058	Identifier	opts		5604842	0					
ANR	5605059	Identifier	R_CORE_PRJ_FLAGS		5604842	1					
ANR	5605060	CompoundStatement		40:30:855:855	5604842	1					
ANR	5605061	ExpressionStatement	"r_str_write ( fd , ""# flags\\n"" )"	598:2:14051:14080	5604842	0	True				
ANR	5605062	CallExpression	"r_str_write ( fd , ""# flags\\n"" )"		5604842	0					
ANR	5605063	Callee	r_str_write		5604842	0					
ANR	5605064	Identifier	r_str_write		5604842	0					
ANR	5605065	ArgumentList	fd		5604842	1					
ANR	5605066	Argument	fd		5604842	0					
ANR	5605067	Identifier	fd		5604842	0					
ANR	5605068	Argument	"""# flags\\n"""		5604842	1					
ANR	5605069	PrimaryExpression	"""# flags\\n"""		5604842	0					
ANR	5605070	ExpressionStatement	"r_core_cmd ( core , ""f.**"" , 0 )"	599:2:14084:14112	5604842	1	True				
ANR	5605071	CallExpression	"r_core_cmd ( core , ""f.**"" , 0 )"		5604842	0					
ANR	5605072	Callee	r_core_cmd		5604842	0					
ANR	5605073	Identifier	r_core_cmd		5604842	0					
ANR	5605074	ArgumentList	core		5604842	1					
ANR	5605075	Argument	core		5604842	0					
ANR	5605076	Identifier	core		5604842	0					
ANR	5605077	Argument	"""f.**"""		5604842	1					
ANR	5605078	PrimaryExpression	"""f.**"""		5604842	0					
ANR	5605079	Argument	0		5604842	2					
ANR	5605080	PrimaryExpression	0		5604842	0					
ANR	5605081	ExpressionStatement	r_cons_flush ( )	600:2:14116:14131	5604842	2	True				
ANR	5605082	CallExpression	r_cons_flush ( )		5604842	0					
ANR	5605083	Callee	r_cons_flush		5604842	0					
ANR	5605084	Identifier	r_cons_flush		5604842	0					
ANR	5605085	ArgumentList			5604842	1					
ANR	5605086	IfStatement	if ( opts & R_CORE_PRJ_META )		5604842	15					
ANR	5605087	Condition	opts & R_CORE_PRJ_META	602:5:14141:14162	5604842	0	True				
ANR	5605088	BitAndExpression	opts & R_CORE_PRJ_META		5604842	0		&			
ANR	5605089	Identifier	opts		5604842	0					
ANR	5605090	Identifier	R_CORE_PRJ_META		5604842	1					
ANR	5605091	CompoundStatement		45:29:973:973	5604842	1					
ANR	5605092	ExpressionStatement	"r_str_write ( fd , ""# meta\\n"" )"	603:2:14169:14197	5604842	0	True				
ANR	5605093	CallExpression	"r_str_write ( fd , ""# meta\\n"" )"		5604842	0					
ANR	5605094	Callee	r_str_write		5604842	0					
ANR	5605095	Identifier	r_str_write		5604842	0					
ANR	5605096	ArgumentList	fd		5604842	1					
ANR	5605097	Argument	fd		5604842	0					
ANR	5605098	Identifier	fd		5604842	0					
ANR	5605099	Argument	"""# meta\\n"""		5604842	1					
ANR	5605100	PrimaryExpression	"""# meta\\n"""		5604842	0					
ANR	5605101	ExpressionStatement	"r_meta_list ( core -> anal , R_META_TYPE_ANY , 1 )"	604:2:14201:14245	5604842	1	True				
ANR	5605102	CallExpression	"r_meta_list ( core -> anal , R_META_TYPE_ANY , 1 )"		5604842	0					
ANR	5605103	Callee	r_meta_list		5604842	0					
ANR	5605104	Identifier	r_meta_list		5604842	0					
ANR	5605105	ArgumentList	core -> anal		5604842	1					
ANR	5605106	Argument	core -> anal		5604842	0					
ANR	5605107	PtrMemberAccess	core -> anal		5604842	0					
ANR	5605108	Identifier	core		5604842	0					
ANR	5605109	Identifier	anal		5604842	1					
ANR	5605110	Argument	R_META_TYPE_ANY		5604842	1					
ANR	5605111	Identifier	R_META_TYPE_ANY		5604842	0					
ANR	5605112	Argument	1		5604842	2					
ANR	5605113	PrimaryExpression	1		5604842	0					
ANR	5605114	ExpressionStatement	r_cons_flush ( )	605:2:14249:14264	5604842	2	True				
ANR	5605115	CallExpression	r_cons_flush ( )		5604842	0					
ANR	5605116	Callee	r_cons_flush		5604842	0					
ANR	5605117	Identifier	r_cons_flush		5604842	0					
ANR	5605118	ArgumentList			5604842	1					
ANR	5605119	ExpressionStatement	"r_core_cmd ( core , ""fV*"" , 0 )"	606:2:14268:14295	5604842	3	True				
ANR	5605120	CallExpression	"r_core_cmd ( core , ""fV*"" , 0 )"		5604842	0					
ANR	5605121	Callee	r_core_cmd		5604842	0					
ANR	5605122	Identifier	r_core_cmd		5604842	0					
ANR	5605123	ArgumentList	core		5604842	1					
ANR	5605124	Argument	core		5604842	0					
ANR	5605125	Identifier	core		5604842	0					
ANR	5605126	Argument	"""fV*"""		5604842	1					
ANR	5605127	PrimaryExpression	"""fV*"""		5604842	0					
ANR	5605128	Argument	0		5604842	2					
ANR	5605129	PrimaryExpression	0		5604842	0					
ANR	5605130	ExpressionStatement	r_cons_flush ( )	607:2:14299:14314	5604842	4	True				
ANR	5605131	CallExpression	r_cons_flush ( )		5604842	0					
ANR	5605132	Callee	r_cons_flush		5604842	0					
ANR	5605133	Identifier	r_cons_flush		5604842	0					
ANR	5605134	ArgumentList			5604842	1					
ANR	5605135	IfStatement	if ( opts & R_CORE_PRJ_XREFS )		5604842	16					
ANR	5605136	Condition	opts & R_CORE_PRJ_XREFS	609:5:14324:14346	5604842	0	True				
ANR	5605137	BitAndExpression	opts & R_CORE_PRJ_XREFS		5604842	0		&			
ANR	5605138	Identifier	opts		5604842	0					
ANR	5605139	Identifier	R_CORE_PRJ_XREFS		5604842	1					
ANR	5605140	CompoundStatement		52:30:1157:1157	5604842	1					
ANR	5605141	ExpressionStatement	"r_str_write ( fd , ""# xrefs\\n"" )"	610:2:14353:14382	5604842	0	True				
ANR	5605142	CallExpression	"r_str_write ( fd , ""# xrefs\\n"" )"		5604842	0					
ANR	5605143	Callee	r_str_write		5604842	0					
ANR	5605144	Identifier	r_str_write		5604842	0					
ANR	5605145	ArgumentList	fd		5604842	1					
ANR	5605146	Argument	fd		5604842	0					
ANR	5605147	Identifier	fd		5604842	0					
ANR	5605148	Argument	"""# xrefs\\n"""		5604842	1					
ANR	5605149	PrimaryExpression	"""# xrefs\\n"""		5604842	0					
ANR	5605150	ExpressionStatement	"r_core_cmd ( core , ""ax*"" , 0 )"	611:2:14386:14413	5604842	1	True				
ANR	5605151	CallExpression	"r_core_cmd ( core , ""ax*"" , 0 )"		5604842	0					
ANR	5605152	Callee	r_core_cmd		5604842	0					
ANR	5605153	Identifier	r_core_cmd		5604842	0					
ANR	5605154	ArgumentList	core		5604842	1					
ANR	5605155	Argument	core		5604842	0					
ANR	5605156	Identifier	core		5604842	0					
ANR	5605157	Argument	"""ax*"""		5604842	1					
ANR	5605158	PrimaryExpression	"""ax*"""		5604842	0					
ANR	5605159	Argument	0		5604842	2					
ANR	5605160	PrimaryExpression	0		5604842	0					
ANR	5605161	ExpressionStatement	r_cons_flush ( )	612:2:14417:14432	5604842	2	True				
ANR	5605162	CallExpression	r_cons_flush ( )		5604842	0					
ANR	5605163	Callee	r_cons_flush		5604842	0					
ANR	5605164	Identifier	r_cons_flush		5604842	0					
ANR	5605165	ArgumentList			5604842	1					
ANR	5605166	ExpressionStatement	r_cons_singleton ( ) -> fdout = fdold	616:1:14440:14474	5604842	17	True				
ANR	5605167	AssignmentExpression	r_cons_singleton ( ) -> fdout = fdold		5604842	0		=			
ANR	5605168	PtrMemberAccess	r_cons_singleton ( ) -> fdout		5604842	0					
ANR	5605169	CallExpression	r_cons_singleton ( )		5604842	0					
ANR	5605170	Callee	r_cons_singleton		5604842	0					
ANR	5605171	Identifier	r_cons_singleton		5604842	0					
ANR	5605172	ArgumentList			5604842	1					
ANR	5605173	Identifier	fdout		5604842	1					
ANR	5605174	Identifier	fdold		5604842	1					
ANR	5605175	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = true	617:1:14477:14528	5604842	18	True				
ANR	5605176	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = true		5604842	0		=			
ANR	5605177	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		5604842	0					
ANR	5605178	PtrMemberAccess	r_cons_singleton ( ) -> context		5604842	0					
ANR	5605179	CallExpression	r_cons_singleton ( )		5604842	0					
ANR	5605180	Callee	r_cons_singleton		5604842	0					
ANR	5605181	Identifier	r_cons_singleton		5604842	0					
ANR	5605182	ArgumentList			5604842	1					
ANR	5605183	Identifier	context		5604842	1					
ANR	5605184	Identifier	is_interactive		5604842	1					
ANR	5605185	Identifier	true		5604842	1					
ANR	5605186	IfStatement	if ( ohl )		5604842	19					
ANR	5605187	Condition	ohl	619:5:14536:14538	5604842	0	True				
ANR	5605188	Identifier	ohl		5604842	0					
ANR	5605189	CompoundStatement		62:10:1349:1349	5604842	1					
ANR	5605190	ExpressionStatement	r_cons_highlight ( ohl )	620:2:14545:14567	5604842	0	True				
ANR	5605191	CallExpression	r_cons_highlight ( ohl )		5604842	0					
ANR	5605192	Callee	r_cons_highlight		5604842	0					
ANR	5605193	Identifier	r_cons_highlight		5604842	0					
ANR	5605194	ArgumentList	ohl		5604842	1					
ANR	5605195	Argument	ohl		5604842	0					
ANR	5605196	Identifier	ohl		5604842	0					
ANR	5605197	ExpressionStatement	free ( ohl )	621:2:14571:14581	5604842	1	True				
ANR	5605198	CallExpression	free ( ohl )		5604842	0					
ANR	5605199	Callee	free		5604842	0					
ANR	5605200	Identifier	free		5604842	0					
ANR	5605201	ArgumentList	ohl		5604842	1					
ANR	5605202	Argument	ohl		5604842	0					
ANR	5605203	Identifier	ohl		5604842	0					
ANR	5605204	ExpressionStatement	close ( fd )	624:1:14588:14598	5604842	20	True				
ANR	5605205	CallExpression	close ( fd )		5604842	0					
ANR	5605206	Callee	close		5604842	0					
ANR	5605207	Identifier	close		5604842	0					
ANR	5605208	ArgumentList	fd		5604842	1					
ANR	5605209	Argument	fd		5604842	0					
ANR	5605210	Identifier	fd		5604842	0					
ANR	5605211	ExpressionStatement	free ( filename )	625:1:14601:14616	5604842	21	True				
ANR	5605212	CallExpression	free ( filename )		5604842	0					
ANR	5605213	Callee	free		5604842	0					
ANR	5605214	Identifier	free		5604842	0					
ANR	5605215	ArgumentList	filename		5604842	1					
ANR	5605216	Argument	filename		5604842	0					
ANR	5605217	Identifier	filename		5604842	0					
ANR	5605218	ReturnStatement	return true ;	627:1:14620:14631	5604842	22	True				
ANR	5605219	Identifier	true		5604842	0					
ANR	5605220	ReturnType	static bool		5604842	1					
ANR	5605221	Identifier	simpleProjectSaveScript		5604842	2					
ANR	5605222	ParameterList	"RCore * core , const char * file , int opts"		5604842	3					
ANR	5605223	Parameter	RCore * core	558:36:13150:13160	5604842	0	True				
ANR	5605224	ParameterType	RCore *		5604842	0					
ANR	5605225	Identifier	core		5604842	1					
ANR	5605226	Parameter	const char * file	558:49:13163:13178	5604842	1	True				
ANR	5605227	ParameterType	const char *		5604842	0					
ANR	5605228	Identifier	file		5604842	1					
ANR	5605229	Parameter	int opts	558:67:13181:13188	5604842	2	True				
ANR	5605230	ParameterType	int		5604842	0					
ANR	5605231	Identifier	opts		5604842	1					
ANR	5605232	CFGEntryNode	ENTRY		5604842		True				
ANR	5605233	CFGExitNode	EXIT		5604842		True				
ANR	5605234	Symbol	hl		5604842						
ANR	5605235	Symbol	O_BINARY		5604842						
ANR	5605236	Symbol	R_CORE_PRJ_EVAL		5604842						
ANR	5605237	Symbol	O_CREAT		5604842						
ANR	5605238	Symbol	* core		5604842						
ANR	5605239	Symbol	R_CORE_PRJ_FLAGS		5604842						
ANR	5605240	Symbol	R_META_TYPE_ANY		5604842						
ANR	5605241	Symbol	core -> anal		5604842						
ANR	5605242	Symbol	O_RDWR		5604842						
ANR	5605243	Symbol	file		5604842						
ANR	5605244	Symbol	opts		5604842						
ANR	5605245	Symbol	r_cons_singleton ( ) -> context -> is_interactive		5604842						
ANR	5605246	Symbol	r_cons_singleton		5604842						
ANR	5605247	Symbol	R_CORE_PRJ_XREFS		5604842						
ANR	5605248	Symbol	core -> config		5604842						
ANR	5605249	Symbol	NULL		5604842						
ANR	5605250	Symbol	fdold		5604842						
ANR	5605251	Symbol	false		5604842						
ANR	5605252	Symbol	R_CORE_PRJ_META		5604842						
ANR	5605253	Symbol	* r_cons_singleton ( ) -> context		5604842						
ANR	5605254	Symbol	r_str_word_get_first		5604842						
ANR	5605255	Symbol	* file		5604842						
ANR	5605256	Symbol	* * r_cons_singleton		5604842						
ANR	5605257	Symbol	R_CORE_PRJ_FCNS		5604842						
ANR	5605258	Symbol	core		5604842						
ANR	5605259	Symbol	ohl		5604842						
ANR	5605260	Symbol	r_sandbox_open		5604842						
ANR	5605261	Symbol	O_TRUNC		5604842						
ANR	5605262	Symbol	filename		5604842						
ANR	5605263	Symbol	r_cons_singleton ( ) -> fdout		5604842						
ANR	5605264	Symbol	true		5604842						
ANR	5605265	Symbol	r_cons_singleton ( ) -> highlight		5604842						
ANR	5605266	Symbol	strdup		5604842						
ANR	5605267	Symbol	r_cons_singleton ( ) -> context		5604842						
ANR	5605268	Symbol	fd		5604842						
ANR	5605269	Symbol	* r_cons_singleton		5604842						
ANR	5605270	Function	projectSaveScript	630:0:14636:17309							
ANR	5605271	FunctionDef	"projectSaveScript (RCore * core , const char * file , int opts)"		5605270	0					
ANR	5605272	CompoundStatement		630:71:14707:17309	5605270	0					
ANR	5605273	IdentifierDeclStatement	"char * filename , * hl , * ohl = NULL ;"	631:1:14710:14742	5605270	0	True				
ANR	5605274	IdentifierDecl	* filename		5605270	0					
ANR	5605275	IdentifierDeclType	char *		5605270	0					
ANR	5605276	Identifier	filename		5605270	1					
ANR	5605277	IdentifierDecl	* hl		5605270	1					
ANR	5605278	IdentifierDeclType	char *		5605270	0					
ANR	5605279	Identifier	hl		5605270	1					
ANR	5605280	IdentifierDecl	* ohl = NULL		5605270	2					
ANR	5605281	IdentifierDeclType	char *		5605270	0					
ANR	5605282	Identifier	ohl		5605270	1					
ANR	5605283	AssignmentExpression	* ohl = NULL		5605270	2		=			
ANR	5605284	Identifier	NULL		5605270	0					
ANR	5605285	Identifier	NULL		5605270	1					
ANR	5605286	IdentifierDeclStatement	"int fd , fdold ;"	632:1:14745:14758	5605270	1	True				
ANR	5605287	IdentifierDecl	fd		5605270	0					
ANR	5605288	IdentifierDeclType	int		5605270	0					
ANR	5605289	Identifier	fd		5605270	1					
ANR	5605290	IdentifierDecl	fdold		5605270	1					
ANR	5605291	IdentifierDeclType	int		5605270	0					
ANR	5605292	Identifier	fdold		5605270	1					
ANR	5605293	IfStatement	if ( ! file || * file == '\\0' )		5605270	2					
ANR	5605294	Condition	! file || * file == '\\0'	634:5:14766:14787	5605270	0	True				
ANR	5605295	OrExpression	! file || * file == '\\0'		5605270	0		||			
ANR	5605296	UnaryOperationExpression	! file		5605270	0					
ANR	5605297	UnaryOperator	!		5605270	0					
ANR	5605298	Identifier	file		5605270	1					
ANR	5605299	EqualityExpression	* file == '\\0'		5605270	1		==			
ANR	5605300	UnaryOperationExpression	* file		5605270	0					
ANR	5605301	UnaryOperator	*		5605270	0					
ANR	5605302	Identifier	file		5605270	1					
ANR	5605303	PrimaryExpression	'\\0'		5605270	1					
ANR	5605304	CompoundStatement		5:29:82:82	5605270	1					
ANR	5605305	ReturnStatement	return false ;	635:2:14794:14806	5605270	0	True				
ANR	5605306	Identifier	false		5605270	0					
ANR	5605307	ExpressionStatement	filename = r_str_word_get_first ( file )	638:1:14813:14851	5605270	3	True				
ANR	5605308	AssignmentExpression	filename = r_str_word_get_first ( file )		5605270	0		=			
ANR	5605309	Identifier	filename		5605270	0					
ANR	5605310	CallExpression	r_str_word_get_first ( file )		5605270	1					
ANR	5605311	Callee	r_str_word_get_first		5605270	0					
ANR	5605312	Identifier	r_str_word_get_first		5605270	0					
ANR	5605313	ArgumentList	file		5605270	1					
ANR	5605314	Argument	file		5605270	0					
ANR	5605315	Identifier	file		5605270	0					
ANR	5605316	ExpressionStatement	"fd = r_sandbox_open ( file , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , 0644 )"	639:1:14854:14925	5605270	4	True				
ANR	5605317	AssignmentExpression	"fd = r_sandbox_open ( file , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , 0644 )"		5605270	0		=			
ANR	5605318	Identifier	fd		5605270	0					
ANR	5605319	CallExpression	"r_sandbox_open ( file , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , 0644 )"		5605270	1					
ANR	5605320	Callee	r_sandbox_open		5605270	0					
ANR	5605321	Identifier	r_sandbox_open		5605270	0					
ANR	5605322	ArgumentList	file		5605270	1					
ANR	5605323	Argument	file		5605270	0					
ANR	5605324	Identifier	file		5605270	0					
ANR	5605325	Argument	O_BINARY | O_RDWR | O_CREAT | O_TRUNC		5605270	1					
ANR	5605326	InclusiveOrExpression	O_BINARY | O_RDWR | O_CREAT | O_TRUNC		5605270	0		|			
ANR	5605327	Identifier	O_BINARY		5605270	0					
ANR	5605328	InclusiveOrExpression	O_RDWR | O_CREAT | O_TRUNC		5605270	1		|			
ANR	5605329	Identifier	O_RDWR		5605270	0					
ANR	5605330	InclusiveOrExpression	O_CREAT | O_TRUNC		5605270	1		|			
ANR	5605331	Identifier	O_CREAT		5605270	0					
ANR	5605332	Identifier	O_TRUNC		5605270	1					
ANR	5605333	Argument	0644		5605270	2					
ANR	5605334	PrimaryExpression	0644		5605270	0					
ANR	5605335	IfStatement	if ( fd == - 1 )		5605270	5					
ANR	5605336	Condition	fd == - 1	640:5:14932:14939	5605270	0	True				
ANR	5605337	EqualityExpression	fd == - 1		5605270	0		==			
ANR	5605338	Identifier	fd		5605270	0					
ANR	5605339	UnaryOperationExpression	- 1		5605270	1					
ANR	5605340	UnaryOperator	-		5605270	0					
ANR	5605341	PrimaryExpression	1		5605270	1					
ANR	5605342	CompoundStatement		11:15:234:234	5605270	1					
ANR	5605343	ExpressionStatement	free ( filename )	641:2:14946:14961	5605270	0	True				
ANR	5605344	CallExpression	free ( filename )		5605270	0					
ANR	5605345	Callee	free		5605270	0					
ANR	5605346	Identifier	free		5605270	0					
ANR	5605347	ArgumentList	filename		5605270	1					
ANR	5605348	Argument	filename		5605270	0					
ANR	5605349	Identifier	filename		5605270	0					
ANR	5605350	ReturnStatement	return false ;	642:2:14965:14977	5605270	1	True				
ANR	5605351	Identifier	false		5605270	0					
ANR	5605352	ExpressionStatement	hl = r_cons_singleton ( ) -> highlight	645:1:14984:15019	5605270	6	True				
ANR	5605353	AssignmentExpression	hl = r_cons_singleton ( ) -> highlight		5605270	0		=			
ANR	5605354	Identifier	hl		5605270	0					
ANR	5605355	PtrMemberAccess	r_cons_singleton ( ) -> highlight		5605270	1					
ANR	5605356	CallExpression	r_cons_singleton ( )		5605270	0					
ANR	5605357	Callee	r_cons_singleton		5605270	0					
ANR	5605358	Identifier	r_cons_singleton		5605270	0					
ANR	5605359	ArgumentList			5605270	1					
ANR	5605360	Identifier	highlight		5605270	1					
ANR	5605361	IfStatement	if ( hl )		5605270	7					
ANR	5605362	Condition	hl	646:5:15026:15027	5605270	0	True				
ANR	5605363	Identifier	hl		5605270	0					
ANR	5605364	CompoundStatement		17:9:322:322	5605270	1					
ANR	5605365	ExpressionStatement	ohl = strdup ( hl )	647:2:15034:15051	5605270	0	True				
ANR	5605366	AssignmentExpression	ohl = strdup ( hl )		5605270	0		=			
ANR	5605367	Identifier	ohl		5605270	0					
ANR	5605368	CallExpression	strdup ( hl )		5605270	1					
ANR	5605369	Callee	strdup		5605270	0					
ANR	5605370	Identifier	strdup		5605270	0					
ANR	5605371	ArgumentList	hl		5605270	1					
ANR	5605372	Argument	hl		5605270	0					
ANR	5605373	Identifier	hl		5605270	0					
ANR	5605374	ExpressionStatement	r_cons_highlight ( NULL )	648:2:15055:15078	5605270	1	True				
ANR	5605375	CallExpression	r_cons_highlight ( NULL )		5605270	0					
ANR	5605376	Callee	r_cons_highlight		5605270	0					
ANR	5605377	Identifier	r_cons_highlight		5605270	0					
ANR	5605378	ArgumentList	NULL		5605270	1					
ANR	5605379	Argument	NULL		5605270	0					
ANR	5605380	Identifier	NULL		5605270	0					
ANR	5605381	ExpressionStatement	fdold = r_cons_singleton ( ) -> fdout	651:1:15085:15119	5605270	8	True				
ANR	5605382	AssignmentExpression	fdold = r_cons_singleton ( ) -> fdout		5605270	0		=			
ANR	5605383	Identifier	fdold		5605270	0					
ANR	5605384	PtrMemberAccess	r_cons_singleton ( ) -> fdout		5605270	1					
ANR	5605385	CallExpression	r_cons_singleton ( )		5605270	0					
ANR	5605386	Callee	r_cons_singleton		5605270	0					
ANR	5605387	Identifier	r_cons_singleton		5605270	0					
ANR	5605388	ArgumentList			5605270	1					
ANR	5605389	Identifier	fdout		5605270	1					
ANR	5605390	ExpressionStatement	r_cons_singleton ( ) -> fdout = fd	652:1:15122:15153	5605270	9	True				
ANR	5605391	AssignmentExpression	r_cons_singleton ( ) -> fdout = fd		5605270	0		=			
ANR	5605392	PtrMemberAccess	r_cons_singleton ( ) -> fdout		5605270	0					
ANR	5605393	CallExpression	r_cons_singleton ( )		5605270	0					
ANR	5605394	Callee	r_cons_singleton		5605270	0					
ANR	5605395	Identifier	r_cons_singleton		5605270	0					
ANR	5605396	ArgumentList			5605270	1					
ANR	5605397	Identifier	fdout		5605270	1					
ANR	5605398	Identifier	fd		5605270	1					
ANR	5605399	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = false	653:1:15156:15208	5605270	10	True				
ANR	5605400	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = false		5605270	0		=			
ANR	5605401	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		5605270	0					
ANR	5605402	PtrMemberAccess	r_cons_singleton ( ) -> context		5605270	0					
ANR	5605403	CallExpression	r_cons_singleton ( )		5605270	0					
ANR	5605404	Callee	r_cons_singleton		5605270	0					
ANR	5605405	Identifier	r_cons_singleton		5605270	0					
ANR	5605406	ArgumentList			5605270	1					
ANR	5605407	Identifier	context		5605270	1					
ANR	5605408	Identifier	is_interactive		5605270	1					
ANR	5605409	Identifier	false		5605270	1					
ANR	5605410	ExpressionStatement	"r_str_write ( fd , ""# r2 rdb project file\\n"" )"	654:1:15211:15254	5605270	11	True				
ANR	5605411	CallExpression	"r_str_write ( fd , ""# r2 rdb project file\\n"" )"		5605270	0					
ANR	5605412	Callee	r_str_write		5605270	0					
ANR	5605413	Identifier	r_str_write		5605270	0					
ANR	5605414	ArgumentList	fd		5605270	1					
ANR	5605415	Argument	fd		5605270	0					
ANR	5605416	Identifier	fd		5605270	0					
ANR	5605417	Argument	"""# r2 rdb project file\\n"""		5605270	1					
ANR	5605418	PrimaryExpression	"""# r2 rdb project file\\n"""		5605270	0					
ANR	5605419	ExpressionStatement	"r_config_set ( core -> config , ""file.path"" , """" )"	657:1:15382:15426	5605270	12	True				
ANR	5605420	CallExpression	"r_config_set ( core -> config , ""file.path"" , """" )"		5605270	0					
ANR	5605421	Callee	r_config_set		5605270	0					
ANR	5605422	Identifier	r_config_set		5605270	0					
ANR	5605423	ArgumentList	core -> config		5605270	1					
ANR	5605424	Argument	core -> config		5605270	0					
ANR	5605425	PtrMemberAccess	core -> config		5605270	0					
ANR	5605426	Identifier	core		5605270	0					
ANR	5605427	Identifier	config		5605270	1					
ANR	5605428	Argument	"""file.path"""		5605270	1					
ANR	5605429	PrimaryExpression	"""file.path"""		5605270	0					
ANR	5605430	Argument	""""""		5605270	2					
ANR	5605431	PrimaryExpression	""""""		5605270	0					
ANR	5605432	ExpressionStatement	"r_config_set ( core -> config , ""file.lastpath"" , """" )"	658:1:15429:15477	5605270	13	True				
ANR	5605433	CallExpression	"r_config_set ( core -> config , ""file.lastpath"" , """" )"		5605270	0					
ANR	5605434	Callee	r_config_set		5605270	0					
ANR	5605435	Identifier	r_config_set		5605270	0					
ANR	5605436	ArgumentList	core -> config		5605270	1					
ANR	5605437	Argument	core -> config		5605270	0					
ANR	5605438	PtrMemberAccess	core -> config		5605270	0					
ANR	5605439	Identifier	core		5605270	0					
ANR	5605440	Identifier	config		5605270	1					
ANR	5605441	Argument	"""file.lastpath"""		5605270	1					
ANR	5605442	PrimaryExpression	"""file.lastpath"""		5605270	0					
ANR	5605443	Argument	""""""		5605270	2					
ANR	5605444	PrimaryExpression	""""""		5605270	0					
ANR	5605445	IfStatement	if ( opts & R_CORE_PRJ_EVAL )		5605270	14					
ANR	5605446	Condition	opts & R_CORE_PRJ_EVAL	659:5:15484:15505	5605270	0	True				
ANR	5605447	BitAndExpression	opts & R_CORE_PRJ_EVAL		5605270	0		&			
ANR	5605448	Identifier	opts		5605270	0					
ANR	5605449	Identifier	R_CORE_PRJ_EVAL		5605270	1					
ANR	5605450	CompoundStatement		30:29:800:800	5605270	1					
ANR	5605451	ExpressionStatement	"r_str_write ( fd , ""# eval\\n"" )"	660:2:15512:15540	5605270	0	True				
ANR	5605452	CallExpression	"r_str_write ( fd , ""# eval\\n"" )"		5605270	0					
ANR	5605453	Callee	r_str_write		5605270	0					
ANR	5605454	Identifier	r_str_write		5605270	0					
ANR	5605455	ArgumentList	fd		5605270	1					
ANR	5605456	Argument	fd		5605270	0					
ANR	5605457	Identifier	fd		5605270	0					
ANR	5605458	Argument	"""# eval\\n"""		5605270	1					
ANR	5605459	PrimaryExpression	"""# eval\\n"""		5605270	0					
ANR	5605460	ExpressionStatement	"r_config_list ( core -> config , NULL , true )"	661:2:15544:15584	5605270	1	True				
ANR	5605461	CallExpression	"r_config_list ( core -> config , NULL , true )"		5605270	0					
ANR	5605462	Callee	r_config_list		5605270	0					
ANR	5605463	Identifier	r_config_list		5605270	0					
ANR	5605464	ArgumentList	core -> config		5605270	1					
ANR	5605465	Argument	core -> config		5605270	0					
ANR	5605466	PtrMemberAccess	core -> config		5605270	0					
ANR	5605467	Identifier	core		5605270	0					
ANR	5605468	Identifier	config		5605270	1					
ANR	5605469	Argument	NULL		5605270	1					
ANR	5605470	Identifier	NULL		5605270	0					
ANR	5605471	Argument	true		5605270	2					
ANR	5605472	Identifier	true		5605270	0					
ANR	5605473	ExpressionStatement	r_cons_flush ( )	662:2:15588:15603	5605270	2	True				
ANR	5605474	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605475	Callee	r_cons_flush		5605270	0					
ANR	5605476	Identifier	r_cons_flush		5605270	0					
ANR	5605477	ArgumentList			5605270	1					
ANR	5605478	IfStatement	if ( opts & R_CORE_PRJ_FCNS )		5605270	15					
ANR	5605479	Condition	opts & R_CORE_PRJ_FCNS	665:5:15614:15635	5605270	0	True				
ANR	5605480	BitAndExpression	opts & R_CORE_PRJ_FCNS		5605270	0		&			
ANR	5605481	Identifier	opts		5605270	0					
ANR	5605482	Identifier	R_CORE_PRJ_FCNS		5605270	1					
ANR	5605483	CompoundStatement		36:29:930:930	5605270	1					
ANR	5605484	ExpressionStatement	"r_core_cmd ( core , ""afl*"" , 0 )"	666:2:15642:15670	5605270	0	True				
ANR	5605485	CallExpression	"r_core_cmd ( core , ""afl*"" , 0 )"		5605270	0					
ANR	5605486	Callee	r_core_cmd		5605270	0					
ANR	5605487	Identifier	r_core_cmd		5605270	0					
ANR	5605488	ArgumentList	core		5605270	1					
ANR	5605489	Argument	core		5605270	0					
ANR	5605490	Identifier	core		5605270	0					
ANR	5605491	Argument	"""afl*"""		5605270	1					
ANR	5605492	PrimaryExpression	"""afl*"""		5605270	0					
ANR	5605493	Argument	0		5605270	2					
ANR	5605494	PrimaryExpression	0		5605270	0					
ANR	5605495	ExpressionStatement	r_cons_flush ( )	667:2:15674:15689	5605270	1	True				
ANR	5605496	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605497	Callee	r_cons_flush		5605270	0					
ANR	5605498	Identifier	r_cons_flush		5605270	0					
ANR	5605499	ArgumentList			5605270	1					
ANR	5605500	IfStatement	if ( opts & R_CORE_PRJ_FLAGS )		5605270	16					
ANR	5605501	Condition	opts & R_CORE_PRJ_FLAGS	670:5:15700:15722	5605270	0	True				
ANR	5605502	BitAndExpression	opts & R_CORE_PRJ_FLAGS		5605270	0		&			
ANR	5605503	Identifier	opts		5605270	0					
ANR	5605504	Identifier	R_CORE_PRJ_FLAGS		5605270	1					
ANR	5605505	CompoundStatement		41:30:1017:1017	5605270	1					
ANR	5605506	ExpressionStatement	"r_str_write ( fd , ""# flags\\n"" )"	671:2:15729:15758	5605270	0	True				
ANR	5605507	CallExpression	"r_str_write ( fd , ""# flags\\n"" )"		5605270	0					
ANR	5605508	Callee	r_str_write		5605270	0					
ANR	5605509	Identifier	r_str_write		5605270	0					
ANR	5605510	ArgumentList	fd		5605270	1					
ANR	5605511	Argument	fd		5605270	0					
ANR	5605512	Identifier	fd		5605270	0					
ANR	5605513	Argument	"""# flags\\n"""		5605270	1					
ANR	5605514	PrimaryExpression	"""# flags\\n"""		5605270	0					
ANR	5605515	ExpressionStatement	"r_flag_space_push ( core -> flags , NULL )"	672:2:15762:15799	5605270	1	True				
ANR	5605516	CallExpression	"r_flag_space_push ( core -> flags , NULL )"		5605270	0					
ANR	5605517	Callee	r_flag_space_push		5605270	0					
ANR	5605518	Identifier	r_flag_space_push		5605270	0					
ANR	5605519	ArgumentList	core -> flags		5605270	1					
ANR	5605520	Argument	core -> flags		5605270	0					
ANR	5605521	PtrMemberAccess	core -> flags		5605270	0					
ANR	5605522	Identifier	core		5605270	0					
ANR	5605523	Identifier	flags		5605270	1					
ANR	5605524	Argument	NULL		5605270	1					
ANR	5605525	Identifier	NULL		5605270	0					
ANR	5605526	ExpressionStatement	"r_flag_list ( core -> flags , true , NULL )"	673:2:15803:15840	5605270	2	True				
ANR	5605527	CallExpression	"r_flag_list ( core -> flags , true , NULL )"		5605270	0					
ANR	5605528	Callee	r_flag_list		5605270	0					
ANR	5605529	Identifier	r_flag_list		5605270	0					
ANR	5605530	ArgumentList	core -> flags		5605270	1					
ANR	5605531	Argument	core -> flags		5605270	0					
ANR	5605532	PtrMemberAccess	core -> flags		5605270	0					
ANR	5605533	Identifier	core		5605270	0					
ANR	5605534	Identifier	flags		5605270	1					
ANR	5605535	Argument	true		5605270	1					
ANR	5605536	Identifier	true		5605270	0					
ANR	5605537	Argument	NULL		5605270	2					
ANR	5605538	Identifier	NULL		5605270	0					
ANR	5605539	ExpressionStatement	r_flag_space_pop ( core -> flags )	674:2:15844:15874	5605270	3	True				
ANR	5605540	CallExpression	r_flag_space_pop ( core -> flags )		5605270	0					
ANR	5605541	Callee	r_flag_space_pop		5605270	0					
ANR	5605542	Identifier	r_flag_space_pop		5605270	0					
ANR	5605543	ArgumentList	core -> flags		5605270	1					
ANR	5605544	Argument	core -> flags		5605270	0					
ANR	5605545	PtrMemberAccess	core -> flags		5605270	0					
ANR	5605546	Identifier	core		5605270	0					
ANR	5605547	Identifier	flags		5605270	1					
ANR	5605548	ExpressionStatement	r_cons_flush ( )	675:2:15878:15893	5605270	4	True				
ANR	5605549	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605550	Callee	r_cons_flush		5605270	0					
ANR	5605551	Identifier	r_cons_flush		5605270	0					
ANR	5605552	ArgumentList			5605270	1					
ANR	5605553	IfStatement	if ( opts & R_CORE_PRJ_IO_MAPS && core -> io && core -> io -> files )		5605270	17					
ANR	5605554	Condition	opts & R_CORE_PRJ_IO_MAPS && core -> io && core -> io -> files	677:5:15903:15958	5605270	0	True				
ANR	5605555	AndExpression	opts & R_CORE_PRJ_IO_MAPS && core -> io && core -> io -> files		5605270	0		&&			
ANR	5605556	BitAndExpression	opts & R_CORE_PRJ_IO_MAPS		5605270	0		&			
ANR	5605557	Identifier	opts		5605270	0					
ANR	5605558	Identifier	R_CORE_PRJ_IO_MAPS		5605270	1					
ANR	5605559	AndExpression	core -> io && core -> io -> files		5605270	1		&&			
ANR	5605560	PtrMemberAccess	core -> io		5605270	0					
ANR	5605561	Identifier	core		5605270	0					
ANR	5605562	Identifier	io		5605270	1					
ANR	5605563	PtrMemberAccess	core -> io -> files		5605270	1					
ANR	5605564	PtrMemberAccess	core -> io		5605270	0					
ANR	5605565	Identifier	core		5605270	0					
ANR	5605566	Identifier	io		5605270	1					
ANR	5605567	Identifier	files		5605270	1					
ANR	5605568	CompoundStatement		48:63:1253:1253	5605270	1					
ANR	5605569	ExpressionStatement	fdc = 3	678:2:15965:15972	5605270	0	True				
ANR	5605570	AssignmentExpression	fdc = 3		5605270	0		=			
ANR	5605571	Identifier	fdc		5605270	0					
ANR	5605572	PrimaryExpression	3		5605270	1					
ANR	5605573	ExpressionStatement	"r_id_storage_foreach ( core -> io -> files , ( RIDStorageForeachCb ) store_files_and_maps , core )"	679:2:15976:16063	5605270	1	True				
ANR	5605574	CallExpression	"r_id_storage_foreach ( core -> io -> files , ( RIDStorageForeachCb ) store_files_and_maps , core )"		5605270	0					
ANR	5605575	Callee	r_id_storage_foreach		5605270	0					
ANR	5605576	Identifier	r_id_storage_foreach		5605270	0					
ANR	5605577	ArgumentList	core -> io -> files		5605270	1					
ANR	5605578	Argument	core -> io -> files		5605270	0					
ANR	5605579	PtrMemberAccess	core -> io -> files		5605270	0					
ANR	5605580	PtrMemberAccess	core -> io		5605270	0					
ANR	5605581	Identifier	core		5605270	0					
ANR	5605582	Identifier	io		5605270	1					
ANR	5605583	Identifier	files		5605270	1					
ANR	5605584	Argument	( RIDStorageForeachCb ) store_files_and_maps		5605270	1					
ANR	5605585	CastExpression	( RIDStorageForeachCb ) store_files_and_maps		5605270	0					
ANR	5605586	CastTarget	RIDStorageForeachCb		5605270	0					
ANR	5605587	Identifier	store_files_and_maps		5605270	1					
ANR	5605588	Argument	core		5605270	2					
ANR	5605589	Identifier	core		5605270	0					
ANR	5605590	ExpressionStatement	r_cons_flush ( )	680:2:16067:16082	5605270	2	True				
ANR	5605591	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605592	Callee	r_cons_flush		5605270	0					
ANR	5605593	Identifier	r_cons_flush		5605270	0					
ANR	5605594	ArgumentList			5605270	1					
ANR	5605595	CompoundStatement		53:1:1380:1380	5605270	18					
ANR	5605596	ExpressionStatement	"r_core_cmd ( core , ""fz*"" , 0 )"	683:2:16092:16119	5605270	0	True				
ANR	5605597	CallExpression	"r_core_cmd ( core , ""fz*"" , 0 )"		5605270	0					
ANR	5605598	Callee	r_core_cmd		5605270	0					
ANR	5605599	Identifier	r_core_cmd		5605270	0					
ANR	5605600	ArgumentList	core		5605270	1					
ANR	5605601	Argument	core		5605270	0					
ANR	5605602	Identifier	core		5605270	0					
ANR	5605603	Argument	"""fz*"""		5605270	1					
ANR	5605604	PrimaryExpression	"""fz*"""		5605270	0					
ANR	5605605	Argument	0		5605270	2					
ANR	5605606	PrimaryExpression	0		5605270	0					
ANR	5605607	ExpressionStatement	r_cons_flush ( )	684:2:16123:16138	5605270	1	True				
ANR	5605608	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605609	Callee	r_cons_flush		5605270	0					
ANR	5605610	Identifier	r_cons_flush		5605270	0					
ANR	5605611	ArgumentList			5605270	1					
ANR	5605612	IfStatement	if ( opts & R_CORE_PRJ_META )		5605270	19					
ANR	5605613	Condition	opts & R_CORE_PRJ_META	686:5:16148:16169	5605270	0	True				
ANR	5605614	BitAndExpression	opts & R_CORE_PRJ_META		5605270	0		&			
ANR	5605615	Identifier	opts		5605270	0					
ANR	5605616	Identifier	R_CORE_PRJ_META		5605270	1					
ANR	5605617	CompoundStatement		57:29:1464:1464	5605270	1					
ANR	5605618	ExpressionStatement	"r_str_write ( fd , ""# meta\\n"" )"	687:2:16176:16204	5605270	0	True				
ANR	5605619	CallExpression	"r_str_write ( fd , ""# meta\\n"" )"		5605270	0					
ANR	5605620	Callee	r_str_write		5605270	0					
ANR	5605621	Identifier	r_str_write		5605270	0					
ANR	5605622	ArgumentList	fd		5605270	1					
ANR	5605623	Argument	fd		5605270	0					
ANR	5605624	Identifier	fd		5605270	0					
ANR	5605625	Argument	"""# meta\\n"""		5605270	1					
ANR	5605626	PrimaryExpression	"""# meta\\n"""		5605270	0					
ANR	5605627	ExpressionStatement	"r_meta_list ( core -> anal , R_META_TYPE_ANY , 1 )"	688:2:16208:16252	5605270	1	True				
ANR	5605628	CallExpression	"r_meta_list ( core -> anal , R_META_TYPE_ANY , 1 )"		5605270	0					
ANR	5605629	Callee	r_meta_list		5605270	0					
ANR	5605630	Identifier	r_meta_list		5605270	0					
ANR	5605631	ArgumentList	core -> anal		5605270	1					
ANR	5605632	Argument	core -> anal		5605270	0					
ANR	5605633	PtrMemberAccess	core -> anal		5605270	0					
ANR	5605634	Identifier	core		5605270	0					
ANR	5605635	Identifier	anal		5605270	1					
ANR	5605636	Argument	R_META_TYPE_ANY		5605270	1					
ANR	5605637	Identifier	R_META_TYPE_ANY		5605270	0					
ANR	5605638	Argument	1		5605270	2					
ANR	5605639	PrimaryExpression	1		5605270	0					
ANR	5605640	ExpressionStatement	r_cons_flush ( )	689:2:16256:16271	5605270	2	True				
ANR	5605641	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605642	Callee	r_cons_flush		5605270	0					
ANR	5605643	Identifier	r_cons_flush		5605270	0					
ANR	5605644	ArgumentList			5605270	1					
ANR	5605645	ExpressionStatement	"r_core_cmd ( core , ""fV*"" , 0 )"	690:2:16275:16302	5605270	3	True				
ANR	5605646	CallExpression	"r_core_cmd ( core , ""fV*"" , 0 )"		5605270	0					
ANR	5605647	Callee	r_core_cmd		5605270	0					
ANR	5605648	Identifier	r_core_cmd		5605270	0					
ANR	5605649	ArgumentList	core		5605270	1					
ANR	5605650	Argument	core		5605270	0					
ANR	5605651	Identifier	core		5605270	0					
ANR	5605652	Argument	"""fV*"""		5605270	1					
ANR	5605653	PrimaryExpression	"""fV*"""		5605270	0					
ANR	5605654	Argument	0		5605270	2					
ANR	5605655	PrimaryExpression	0		5605270	0					
ANR	5605656	ExpressionStatement	r_cons_flush ( )	691:2:16306:16321	5605270	4	True				
ANR	5605657	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605658	Callee	r_cons_flush		5605270	0					
ANR	5605659	Identifier	r_cons_flush		5605270	0					
ANR	5605660	ArgumentList			5605270	1					
ANR	5605661	IfStatement	if ( opts & R_CORE_PRJ_XREFS )		5605270	20					
ANR	5605662	Condition	opts & R_CORE_PRJ_XREFS	693:5:16331:16353	5605270	0	True				
ANR	5605663	BitAndExpression	opts & R_CORE_PRJ_XREFS		5605270	0		&			
ANR	5605664	Identifier	opts		5605270	0					
ANR	5605665	Identifier	R_CORE_PRJ_XREFS		5605270	1					
ANR	5605666	CompoundStatement		64:30:1648:1648	5605270	1					
ANR	5605667	ExpressionStatement	"r_core_cmd ( core , ""ax*"" , 0 )"	694:2:16360:16387	5605270	0	True				
ANR	5605668	CallExpression	"r_core_cmd ( core , ""ax*"" , 0 )"		5605270	0					
ANR	5605669	Callee	r_core_cmd		5605270	0					
ANR	5605670	Identifier	r_core_cmd		5605270	0					
ANR	5605671	ArgumentList	core		5605270	1					
ANR	5605672	Argument	core		5605270	0					
ANR	5605673	Identifier	core		5605270	0					
ANR	5605674	Argument	"""ax*"""		5605270	1					
ANR	5605675	PrimaryExpression	"""ax*"""		5605270	0					
ANR	5605676	Argument	0		5605270	2					
ANR	5605677	PrimaryExpression	0		5605270	0					
ANR	5605678	ExpressionStatement	r_cons_flush ( )	695:2:16391:16406	5605270	1	True				
ANR	5605679	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605680	Callee	r_cons_flush		5605270	0					
ANR	5605681	Identifier	r_cons_flush		5605270	0					
ANR	5605682	ArgumentList			5605270	1					
ANR	5605683	IfStatement	if ( opts & R_CORE_PRJ_FLAGS )		5605270	21					
ANR	5605684	Condition	opts & R_CORE_PRJ_FLAGS	697:5:16416:16438	5605270	0	True				
ANR	5605685	BitAndExpression	opts & R_CORE_PRJ_FLAGS		5605270	0		&			
ANR	5605686	Identifier	opts		5605270	0					
ANR	5605687	Identifier	R_CORE_PRJ_FLAGS		5605270	1					
ANR	5605688	CompoundStatement		68:30:1733:1733	5605270	1					
ANR	5605689	ExpressionStatement	"r_core_cmd ( core , ""f.**"" , 0 )"	698:2:16445:16473	5605270	0	True				
ANR	5605690	CallExpression	"r_core_cmd ( core , ""f.**"" , 0 )"		5605270	0					
ANR	5605691	Callee	r_core_cmd		5605270	0					
ANR	5605692	Identifier	r_core_cmd		5605270	0					
ANR	5605693	ArgumentList	core		5605270	1					
ANR	5605694	Argument	core		5605270	0					
ANR	5605695	Identifier	core		5605270	0					
ANR	5605696	Argument	"""f.**"""		5605270	1					
ANR	5605697	PrimaryExpression	"""f.**"""		5605270	0					
ANR	5605698	Argument	0		5605270	2					
ANR	5605699	PrimaryExpression	0		5605270	0					
ANR	5605700	ExpressionStatement	r_cons_flush ( )	699:2:16477:16492	5605270	1	True				
ANR	5605701	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605702	Callee	r_cons_flush		5605270	0					
ANR	5605703	Identifier	r_cons_flush		5605270	0					
ANR	5605704	ArgumentList			5605270	1					
ANR	5605705	IfStatement	if ( opts & R_CORE_PRJ_DBG_BREAK )		5605270	22					
ANR	5605706	Condition	opts & R_CORE_PRJ_DBG_BREAK	701:5:16502:16528	5605270	0	True				
ANR	5605707	BitAndExpression	opts & R_CORE_PRJ_DBG_BREAK		5605270	0		&			
ANR	5605708	Identifier	opts		5605270	0					
ANR	5605709	Identifier	R_CORE_PRJ_DBG_BREAK		5605270	1					
ANR	5605710	CompoundStatement		72:34:1823:1823	5605270	1					
ANR	5605711	ExpressionStatement	"r_core_cmd ( core , ""db*"" , 0 )"	702:2:16535:16562	5605270	0	True				
ANR	5605712	CallExpression	"r_core_cmd ( core , ""db*"" , 0 )"		5605270	0					
ANR	5605713	Callee	r_core_cmd		5605270	0					
ANR	5605714	Identifier	r_core_cmd		5605270	0					
ANR	5605715	ArgumentList	core		5605270	1					
ANR	5605716	Argument	core		5605270	0					
ANR	5605717	Identifier	core		5605270	0					
ANR	5605718	Argument	"""db*"""		5605270	1					
ANR	5605719	PrimaryExpression	"""db*"""		5605270	0					
ANR	5605720	Argument	0		5605270	2					
ANR	5605721	PrimaryExpression	0		5605270	0					
ANR	5605722	ExpressionStatement	r_cons_flush ( )	703:2:16566:16581	5605270	1	True				
ANR	5605723	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605724	Callee	r_cons_flush		5605270	0					
ANR	5605725	Identifier	r_cons_flush		5605270	0					
ANR	5605726	ArgumentList			5605270	1					
ANR	5605727	IfStatement	if ( opts & R_CORE_PRJ_ANAL_HINTS )		5605270	23					
ANR	5605728	Condition	opts & R_CORE_PRJ_ANAL_HINTS	705:5:16591:16618	5605270	0	True				
ANR	5605729	BitAndExpression	opts & R_CORE_PRJ_ANAL_HINTS		5605270	0		&			
ANR	5605730	Identifier	opts		5605270	0					
ANR	5605731	Identifier	R_CORE_PRJ_ANAL_HINTS		5605270	1					
ANR	5605732	CompoundStatement		76:35:1913:1913	5605270	1					
ANR	5605733	ExpressionStatement	"r_core_cmd ( core , ""ah*"" , 0 )"	706:2:16625:16652	5605270	0	True				
ANR	5605734	CallExpression	"r_core_cmd ( core , ""ah*"" , 0 )"		5605270	0					
ANR	5605735	Callee	r_core_cmd		5605270	0					
ANR	5605736	Identifier	r_core_cmd		5605270	0					
ANR	5605737	ArgumentList	core		5605270	1					
ANR	5605738	Argument	core		5605270	0					
ANR	5605739	Identifier	core		5605270	0					
ANR	5605740	Argument	"""ah*"""		5605270	1					
ANR	5605741	PrimaryExpression	"""ah*"""		5605270	0					
ANR	5605742	Argument	0		5605270	2					
ANR	5605743	PrimaryExpression	0		5605270	0					
ANR	5605744	ExpressionStatement	r_cons_flush ( )	707:2:16656:16671	5605270	1	True				
ANR	5605745	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605746	Callee	r_cons_flush		5605270	0					
ANR	5605747	Identifier	r_cons_flush		5605270	0					
ANR	5605748	ArgumentList			5605270	1					
ANR	5605749	IfStatement	if ( opts & R_CORE_PRJ_ANAL_TYPES )		5605270	24					
ANR	5605750	Condition	opts & R_CORE_PRJ_ANAL_TYPES	709:5:16681:16708	5605270	0	True				
ANR	5605751	BitAndExpression	opts & R_CORE_PRJ_ANAL_TYPES		5605270	0		&			
ANR	5605752	Identifier	opts		5605270	0					
ANR	5605753	Identifier	R_CORE_PRJ_ANAL_TYPES		5605270	1					
ANR	5605754	CompoundStatement		80:35:2003:2003	5605270	1					
ANR	5605755	ExpressionStatement	"r_str_write ( fd , ""# types\\n"" )"	710:2:16715:16744	5605270	0	True				
ANR	5605756	CallExpression	"r_str_write ( fd , ""# types\\n"" )"		5605270	0					
ANR	5605757	Callee	r_str_write		5605270	0					
ANR	5605758	Identifier	r_str_write		5605270	0					
ANR	5605759	ArgumentList	fd		5605270	1					
ANR	5605760	Argument	fd		5605270	0					
ANR	5605761	Identifier	fd		5605270	0					
ANR	5605762	Argument	"""# types\\n"""		5605270	1					
ANR	5605763	PrimaryExpression	"""# types\\n"""		5605270	0					
ANR	5605764	ExpressionStatement	"r_core_cmd ( core , ""t*"" , 0 )"	711:2:16748:16774	5605270	1	True				
ANR	5605765	CallExpression	"r_core_cmd ( core , ""t*"" , 0 )"		5605270	0					
ANR	5605766	Callee	r_core_cmd		5605270	0					
ANR	5605767	Identifier	r_core_cmd		5605270	0					
ANR	5605768	ArgumentList	core		5605270	1					
ANR	5605769	Argument	core		5605270	0					
ANR	5605770	Identifier	core		5605270	0					
ANR	5605771	Argument	"""t*"""		5605270	1					
ANR	5605772	PrimaryExpression	"""t*"""		5605270	0					
ANR	5605773	Argument	0		5605270	2					
ANR	5605774	PrimaryExpression	0		5605270	0					
ANR	5605775	ExpressionStatement	r_cons_flush ( )	712:2:16778:16793	5605270	2	True				
ANR	5605776	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605777	Callee	r_cons_flush		5605270	0					
ANR	5605778	Identifier	r_cons_flush		5605270	0					
ANR	5605779	ArgumentList			5605270	1					
ANR	5605780	IfStatement	if ( opts & R_CORE_PRJ_ANAL_MACROS )		5605270	25					
ANR	5605781	Condition	opts & R_CORE_PRJ_ANAL_MACROS	714:5:16803:16831	5605270	0	True				
ANR	5605782	BitAndExpression	opts & R_CORE_PRJ_ANAL_MACROS		5605270	0		&			
ANR	5605783	Identifier	opts		5605270	0					
ANR	5605784	Identifier	R_CORE_PRJ_ANAL_MACROS		5605270	1					
ANR	5605785	CompoundStatement		85:36:2126:2126	5605270	1					
ANR	5605786	ExpressionStatement	"r_str_write ( fd , ""# macros\\n"" )"	715:2:16838:16868	5605270	0	True				
ANR	5605787	CallExpression	"r_str_write ( fd , ""# macros\\n"" )"		5605270	0					
ANR	5605788	Callee	r_str_write		5605270	0					
ANR	5605789	Identifier	r_str_write		5605270	0					
ANR	5605790	ArgumentList	fd		5605270	1					
ANR	5605791	Argument	fd		5605270	0					
ANR	5605792	Identifier	fd		5605270	0					
ANR	5605793	Argument	"""# macros\\n"""		5605270	1					
ANR	5605794	PrimaryExpression	"""# macros\\n"""		5605270	0					
ANR	5605795	ExpressionStatement	"r_core_cmd ( core , ""(*"" , 0 )"	716:2:16872:16898	5605270	1	True				
ANR	5605796	CallExpression	"r_core_cmd ( core , ""(*"" , 0 )"		5605270	0					
ANR	5605797	Callee	r_core_cmd		5605270	0					
ANR	5605798	Identifier	r_core_cmd		5605270	0					
ANR	5605799	ArgumentList	core		5605270	1					
ANR	5605800	Argument	core		5605270	0					
ANR	5605801	Identifier	core		5605270	0					
ANR	5605802	Argument	"""(*"""		5605270	1					
ANR	5605803	PrimaryExpression	"""(*"""		5605270	0					
ANR	5605804	Argument	0		5605270	2					
ANR	5605805	PrimaryExpression	0		5605270	0					
ANR	5605806	ExpressionStatement	"r_str_write ( fd , ""# aliases\\n"" )"	717:2:16902:16933	5605270	2	True				
ANR	5605807	CallExpression	"r_str_write ( fd , ""# aliases\\n"" )"		5605270	0					
ANR	5605808	Callee	r_str_write		5605270	0					
ANR	5605809	Identifier	r_str_write		5605270	0					
ANR	5605810	ArgumentList	fd		5605270	1					
ANR	5605811	Argument	fd		5605270	0					
ANR	5605812	Identifier	fd		5605270	0					
ANR	5605813	Argument	"""# aliases\\n"""		5605270	1					
ANR	5605814	PrimaryExpression	"""# aliases\\n"""		5605270	0					
ANR	5605815	ExpressionStatement	"r_core_cmd ( core , ""$*"" , 0 )"	718:2:16937:16963	5605270	3	True				
ANR	5605816	CallExpression	"r_core_cmd ( core , ""$*"" , 0 )"		5605270	0					
ANR	5605817	Callee	r_core_cmd		5605270	0					
ANR	5605818	Identifier	r_core_cmd		5605270	0					
ANR	5605819	ArgumentList	core		5605270	1					
ANR	5605820	Argument	core		5605270	0					
ANR	5605821	Identifier	core		5605270	0					
ANR	5605822	Argument	"""$*"""		5605270	1					
ANR	5605823	PrimaryExpression	"""$*"""		5605270	0					
ANR	5605824	Argument	0		5605270	2					
ANR	5605825	PrimaryExpression	0		5605270	0					
ANR	5605826	ExpressionStatement	r_cons_flush ( )	719:2:16967:16982	5605270	4	True				
ANR	5605827	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605828	Callee	r_cons_flush		5605270	0					
ANR	5605829	Identifier	r_cons_flush		5605270	0					
ANR	5605830	ArgumentList			5605270	1					
ANR	5605831	IfStatement	if ( opts & R_CORE_PRJ_ANAL_SEEK )		5605270	26					
ANR	5605832	Condition	opts & R_CORE_PRJ_ANAL_SEEK	721:5:16992:17018	5605270	0	True				
ANR	5605833	BitAndExpression	opts & R_CORE_PRJ_ANAL_SEEK		5605270	0		&			
ANR	5605834	Identifier	opts		5605270	0					
ANR	5605835	Identifier	R_CORE_PRJ_ANAL_SEEK		5605270	1					
ANR	5605836	CompoundStatement		92:34:2313:2313	5605270	1					
ANR	5605837	Statement	r_cons_printf	722:2:17025:17037	5605270	0	True				
ANR	5605838	Statement	(	722:16:17039:17039	5605270	1	True				
ANR	5605839	Statement	"""# seek\\n"""	722:17:17040:17049	5605270	2	True				
ANR	5605840	Statement	"""s 0x%08"""	723:3:17054:17062	5605270	3	True				
ANR	5605841	Statement	PFMT64x	723:12:17063:17069	5605270	4	True				
ANR	5605842	Statement	"""\\n"""	723:20:17071:17074	5605270	5	True				
ANR	5605843	Statement	","	723:24:17075:17075	5605270	6	True				
ANR	5605844	Statement	core	723:26:17077:17080	5605270	7	True				
ANR	5605845	Statement	->	723:30:17081:17082	5605270	8	True				
ANR	5605846	Statement	offset	723:32:17083:17088	5605270	9	True				
ANR	5605847	Statement	)	723:38:17089:17089	5605270	10	True				
ANR	5605848	ExpressionStatement		723:39:17090:17090	5605270	11	True				
ANR	5605849	ExpressionStatement	r_cons_flush ( )	724:2:17094:17109	5605270	12	True				
ANR	5605850	CallExpression	r_cons_flush ( )		5605270	0					
ANR	5605851	Callee	r_cons_flush		5605270	0					
ANR	5605852	Identifier	r_cons_flush		5605270	0					
ANR	5605853	ArgumentList			5605270	1					
ANR	5605854	ExpressionStatement	r_cons_singleton ( ) -> fdout = fdold	727:1:17116:17150	5605270	27	True				
ANR	5605855	AssignmentExpression	r_cons_singleton ( ) -> fdout = fdold		5605270	0		=			
ANR	5605856	PtrMemberAccess	r_cons_singleton ( ) -> fdout		5605270	0					
ANR	5605857	CallExpression	r_cons_singleton ( )		5605270	0					
ANR	5605858	Callee	r_cons_singleton		5605270	0					
ANR	5605859	Identifier	r_cons_singleton		5605270	0					
ANR	5605860	ArgumentList			5605270	1					
ANR	5605861	Identifier	fdout		5605270	1					
ANR	5605862	Identifier	fdold		5605270	1					
ANR	5605863	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = true	728:1:17153:17204	5605270	28	True				
ANR	5605864	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = true		5605270	0		=			
ANR	5605865	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		5605270	0					
ANR	5605866	PtrMemberAccess	r_cons_singleton ( ) -> context		5605270	0					
ANR	5605867	CallExpression	r_cons_singleton ( )		5605270	0					
ANR	5605868	Callee	r_cons_singleton		5605270	0					
ANR	5605869	Identifier	r_cons_singleton		5605270	0					
ANR	5605870	ArgumentList			5605270	1					
ANR	5605871	Identifier	context		5605270	1					
ANR	5605872	Identifier	is_interactive		5605270	1					
ANR	5605873	Identifier	true		5605270	1					
ANR	5605874	IfStatement	if ( ohl )		5605270	29					
ANR	5605875	Condition	ohl	730:5:17212:17214	5605270	0	True				
ANR	5605876	Identifier	ohl		5605270	0					
ANR	5605877	CompoundStatement		101:10:2509:2509	5605270	1					
ANR	5605878	ExpressionStatement	r_cons_highlight ( ohl )	731:2:17221:17243	5605270	0	True				
ANR	5605879	CallExpression	r_cons_highlight ( ohl )		5605270	0					
ANR	5605880	Callee	r_cons_highlight		5605270	0					
ANR	5605881	Identifier	r_cons_highlight		5605270	0					
ANR	5605882	ArgumentList	ohl		5605270	1					
ANR	5605883	Argument	ohl		5605270	0					
ANR	5605884	Identifier	ohl		5605270	0					
ANR	5605885	ExpressionStatement	free ( ohl )	732:2:17247:17257	5605270	1	True				
ANR	5605886	CallExpression	free ( ohl )		5605270	0					
ANR	5605887	Callee	free		5605270	0					
ANR	5605888	Identifier	free		5605270	0					
ANR	5605889	ArgumentList	ohl		5605270	1					
ANR	5605890	Argument	ohl		5605270	0					
ANR	5605891	Identifier	ohl		5605270	0					
ANR	5605892	ExpressionStatement	close ( fd )	735:1:17264:17274	5605270	30	True				
ANR	5605893	CallExpression	close ( fd )		5605270	0					
ANR	5605894	Callee	close		5605270	0					
ANR	5605895	Identifier	close		5605270	0					
ANR	5605896	ArgumentList	fd		5605270	1					
ANR	5605897	Argument	fd		5605270	0					
ANR	5605898	Identifier	fd		5605270	0					
ANR	5605899	ExpressionStatement	free ( filename )	736:1:17277:17292	5605270	31	True				
ANR	5605900	CallExpression	free ( filename )		5605270	0					
ANR	5605901	Callee	free		5605270	0					
ANR	5605902	Identifier	free		5605270	0					
ANR	5605903	ArgumentList	filename		5605270	1					
ANR	5605904	Argument	filename		5605270	0					
ANR	5605905	Identifier	filename		5605270	0					
ANR	5605906	ReturnStatement	return true ;	738:1:17296:17307	5605270	32	True				
ANR	5605907	Identifier	true		5605270	0					
ANR	5605908	ReturnType	static bool		5605270	1					
ANR	5605909	Identifier	projectSaveScript		5605270	2					
ANR	5605910	ParameterList	"RCore * core , const char * file , int opts"		5605270	3					
ANR	5605911	Parameter	RCore * core	630:30:14666:14676	5605270	0	True				
ANR	5605912	ParameterType	RCore *		5605270	0					
ANR	5605913	Identifier	core		5605270	1					
ANR	5605914	Parameter	const char * file	630:43:14679:14694	5605270	1	True				
ANR	5605915	ParameterType	const char *		5605270	0					
ANR	5605916	Identifier	file		5605270	1					
ANR	5605917	Parameter	int opts	630:61:14697:14704	5605270	2	True				
ANR	5605918	ParameterType	int		5605270	0					
ANR	5605919	Identifier	opts		5605270	1					
ANR	5605920	CFGEntryNode	ENTRY		5605270		True				
ANR	5605921	CFGExitNode	EXIT		5605270		True				
ANR	5605922	Symbol	hl		5605270						
ANR	5605923	Symbol	R_CORE_PRJ_EVAL		5605270						
ANR	5605924	Symbol	R_CORE_PRJ_ANAL_HINTS		5605270						
ANR	5605925	Symbol	O_CREAT		5605270						
ANR	5605926	Symbol	R_CORE_PRJ_ANAL_TYPES		5605270						
ANR	5605927	Symbol	core -> io -> files		5605270						
ANR	5605928	Symbol	opts		5605270						
ANR	5605929	Symbol	r_cons_singleton ( ) -> context -> is_interactive		5605270						
ANR	5605930	Symbol	R_CORE_PRJ_XREFS		5605270						
ANR	5605931	Symbol	R_CORE_PRJ_DBG_BREAK		5605270						
ANR	5605932	Symbol	R_CORE_PRJ_IO_MAPS		5605270						
ANR	5605933	Symbol	NULL		5605270						
ANR	5605934	Symbol	store_files_and_maps		5605270						
ANR	5605935	Symbol	R_CORE_PRJ_META		5605270						
ANR	5605936	Symbol	r_str_word_get_first		5605270						
ANR	5605937	Symbol	* file		5605270						
ANR	5605938	Symbol	core		5605270						
ANR	5605939	Symbol	ohl		5605270						
ANR	5605940	Symbol	r_sandbox_open		5605270						
ANR	5605941	Symbol	filename		5605270						
ANR	5605942	Symbol	true		5605270						
ANR	5605943	Symbol	R_CORE_PRJ_ANAL_SEEK		5605270						
ANR	5605944	Symbol	fd		5605270						
ANR	5605945	Symbol	O_BINARY		5605270						
ANR	5605946	Symbol	* core		5605270						
ANR	5605947	Symbol	R_CORE_PRJ_FLAGS		5605270						
ANR	5605948	Symbol	R_META_TYPE_ANY		5605270						
ANR	5605949	Symbol	core -> anal		5605270						
ANR	5605950	Symbol	O_RDWR		5605270						
ANR	5605951	Symbol	file		5605270						
ANR	5605952	Symbol	core -> io		5605270						
ANR	5605953	Symbol	r_cons_singleton		5605270						
ANR	5605954	Symbol	* * core		5605270						
ANR	5605955	Symbol	core -> config		5605270						
ANR	5605956	Symbol	fdc		5605270						
ANR	5605957	Symbol	fdold		5605270						
ANR	5605958	Symbol	false		5605270						
ANR	5605959	Symbol	* r_cons_singleton ( ) -> context		5605270						
ANR	5605960	Symbol	core -> flags		5605270						
ANR	5605961	Symbol	R_CORE_PRJ_ANAL_MACROS		5605270						
ANR	5605962	Symbol	* * r_cons_singleton		5605270						
ANR	5605963	Symbol	R_CORE_PRJ_FCNS		5605270						
ANR	5605964	Symbol	* core -> io		5605270						
ANR	5605965	Symbol	O_TRUNC		5605270						
ANR	5605966	Symbol	r_cons_singleton ( ) -> fdout		5605270						
ANR	5605967	Symbol	r_cons_singleton ( ) -> highlight		5605270						
ANR	5605968	Symbol	strdup		5605270						
ANR	5605969	Symbol	r_cons_singleton ( ) -> context		5605270						
ANR	5605970	Symbol	* r_cons_singleton		5605270						
ANR	5605971	Function	r_core_project_save_rdb	742:0:17358:17482							
ANR	5605972	FunctionDef	"r_core_project_save_rdb (RCore * core , const char * file , int opts)"		5605971	0					
ANR	5605973	CompoundStatement		742:76:17434:17482	5605971	0					
ANR	5605974	ReturnStatement	"return projectSaveScript ( core , file , opts ) ;"	743:1:17437:17480	5605971	0	True				
ANR	5605975	CallExpression	"projectSaveScript ( core , file , opts )"		5605971	0					
ANR	5605976	Callee	projectSaveScript		5605971	0					
ANR	5605977	Identifier	projectSaveScript		5605971	0					
ANR	5605978	ArgumentList	core		5605971	1					
ANR	5605979	Argument	core		5605971	0					
ANR	5605980	Identifier	core		5605971	0					
ANR	5605981	Argument	file		5605971	1					
ANR	5605982	Identifier	file		5605971	0					
ANR	5605983	Argument	opts		5605971	2					
ANR	5605984	Identifier	opts		5605971	0					
ANR	5605985	ReturnType	R_API bool		5605971	1					
ANR	5605986	Identifier	r_core_project_save_rdb		5605971	2					
ANR	5605987	ParameterList	"RCore * core , const char * file , int opts"		5605971	3					
ANR	5605988	Parameter	RCore * core	742:35:17393:17403	5605971	0	True				
ANR	5605989	ParameterType	RCore *		5605971	0					
ANR	5605990	Identifier	core		5605971	1					
ANR	5605991	Parameter	const char * file	742:48:17406:17421	5605971	1	True				
ANR	5605992	ParameterType	const char *		5605971	0					
ANR	5605993	Identifier	file		5605971	1					
ANR	5605994	Parameter	int opts	742:66:17424:17431	5605971	2	True				
ANR	5605995	ParameterType	int		5605971	0					
ANR	5605996	Identifier	opts		5605971	1					
ANR	5605997	CFGEntryNode	ENTRY		5605971		True				
ANR	5605998	CFGExitNode	EXIT		5605971		True				
ANR	5605999	Symbol	core		5605971						
ANR	5606000	Symbol	file		5605971						
ANR	5606001	Symbol	opts		5605971						
ANR	5606002	Symbol	projectSaveScript		5605971						
ANR	5606003	Function	r_core_project_save	748:0:17507:21529							
ANR	5606004	FunctionDef	"r_core_project_save (RCore * core , const char * prjName)"		5606003	0					
ANR	5606005	CompoundStatement		748:65:17572:21529	5606003	0					
ANR	5606006	IdentifierDeclStatement	bool scr_null = false ;	749:1:17575:17596	5606003	0	True				
ANR	5606007	IdentifierDecl	scr_null = false		5606003	0					
ANR	5606008	IdentifierDeclType	bool		5606003	0					
ANR	5606009	Identifier	scr_null		5606003	1					
ANR	5606010	AssignmentExpression	scr_null = false		5606003	2		=			
ANR	5606011	Identifier	false		5606003	0					
ANR	5606012	Identifier	false		5606003	1					
ANR	5606013	IdentifierDeclStatement	bool ret = true ;	750:1:17599:17614	5606003	1	True				
ANR	5606014	IdentifierDecl	ret = true		5606003	0					
ANR	5606015	IdentifierDeclType	bool		5606003	0					
ANR	5606016	Identifier	ret		5606003	1					
ANR	5606017	AssignmentExpression	ret = true		5606003	2		=			
ANR	5606018	Identifier	true		5606003	0					
ANR	5606019	Identifier	true		5606003	1					
ANR	5606020	IdentifierDeclStatement	"char * scriptPath , * prjDir ;"	751:1:17617:17642	5606003	2	True				
ANR	5606021	IdentifierDecl	* scriptPath		5606003	0					
ANR	5606022	IdentifierDeclType	char *		5606003	0					
ANR	5606023	Identifier	scriptPath		5606003	1					
ANR	5606024	IdentifierDecl	* prjDir		5606003	1					
ANR	5606025	IdentifierDeclType	char *		5606003	0					
ANR	5606026	Identifier	prjDir		5606003	1					
ANR	5606027	IdentifierDeclStatement	SdbListIter * it ;	752:1:17645:17660	5606003	3	True				
ANR	5606028	IdentifierDecl	* it		5606003	0					
ANR	5606029	IdentifierDeclType	SdbListIter *		5606003	0					
ANR	5606030	Identifier	it		5606003	1					
ANR	5606031	IdentifierDeclStatement	SdbNs * ns ;	753:1:17663:17672	5606003	4	True				
ANR	5606032	IdentifierDecl	* ns		5606003	0					
ANR	5606033	IdentifierDeclType	SdbNs *		5606003	0					
ANR	5606034	Identifier	ns		5606003	1					
ANR	5606035	IdentifierDeclStatement	char * oldPrjName = NULL ;	754:1:17675:17698	5606003	5	True				
ANR	5606036	IdentifierDecl	* oldPrjName = NULL		5606003	0					
ANR	5606037	IdentifierDeclType	char *		5606003	0					
ANR	5606038	Identifier	oldPrjName		5606003	1					
ANR	5606039	AssignmentExpression	* oldPrjName = NULL		5606003	2		=			
ANR	5606040	Identifier	NULL		5606003	0					
ANR	5606041	Identifier	NULL		5606003	1					
ANR	5606042	IfStatement	if ( ! prjName || ! * prjName )		5606003	6					
ANR	5606043	Condition	! prjName || ! * prjName	756:5:17706:17726	5606003	0	True				
ANR	5606044	OrExpression	! prjName || ! * prjName		5606003	0		||			
ANR	5606045	UnaryOperationExpression	! prjName		5606003	0					
ANR	5606046	UnaryOperator	!		5606003	0					
ANR	5606047	Identifier	prjName		5606003	1					
ANR	5606048	UnaryOperationExpression	! * prjName		5606003	1					
ANR	5606049	UnaryOperator	!		5606003	0					
ANR	5606050	UnaryOperationExpression	* prjName		5606003	1					
ANR	5606051	UnaryOperator	*		5606003	0					
ANR	5606052	Identifier	prjName		5606003	1					
ANR	5606053	CompoundStatement		9:28:156:156	5606003	1					
ANR	5606054	ReturnStatement	return false ;	757:2:17733:17745	5606003	0	True				
ANR	5606055	Identifier	false		5606003	0					
ANR	5606056	ExpressionStatement	"scriptPath = projectScriptPath ( core , prjName )"	759:1:17751:17797	5606003	7	True				
ANR	5606057	AssignmentExpression	"scriptPath = projectScriptPath ( core , prjName )"		5606003	0		=			
ANR	5606058	Identifier	scriptPath		5606003	0					
ANR	5606059	CallExpression	"projectScriptPath ( core , prjName )"		5606003	1					
ANR	5606060	Callee	projectScriptPath		5606003	0					
ANR	5606061	Identifier	projectScriptPath		5606003	0					
ANR	5606062	ArgumentList	core		5606003	1					
ANR	5606063	Argument	core		5606003	0					
ANR	5606064	Identifier	core		5606003	0					
ANR	5606065	Argument	prjName		5606003	1					
ANR	5606066	Identifier	prjName		5606003	0					
ANR	5606067	IfStatement	if ( ! scriptPath )		5606003	8					
ANR	5606068	Condition	! scriptPath	760:5:17804:17814	5606003	0	True				
ANR	5606069	UnaryOperationExpression	! scriptPath		5606003	0					
ANR	5606070	UnaryOperator	!		5606003	0					
ANR	5606071	Identifier	scriptPath		5606003	1					
ANR	5606072	CompoundStatement		13:18:244:244	5606003	1					
ANR	5606073	ExpressionStatement	"eprintf ( ""Invalid project name '%s'\\n"" , prjName )"	761:2:17821:17869	5606003	0	True				
ANR	5606074	CallExpression	"eprintf ( ""Invalid project name '%s'\\n"" , prjName )"		5606003	0					
ANR	5606075	Callee	eprintf		5606003	0					
ANR	5606076	Identifier	eprintf		5606003	0					
ANR	5606077	ArgumentList	"""Invalid project name '%s'\\n"""		5606003	1					
ANR	5606078	Argument	"""Invalid project name '%s'\\n"""		5606003	0					
ANR	5606079	PrimaryExpression	"""Invalid project name '%s'\\n"""		5606003	0					
ANR	5606080	Argument	prjName		5606003	1					
ANR	5606081	Identifier	prjName		5606003	0					
ANR	5606082	ReturnStatement	return false ;	762:2:17873:17885	5606003	1	True				
ANR	5606083	Identifier	false		5606003	0					
ANR	5606084	ElseStatement	else		5606003	0					
ANR	5606085	CompoundStatement		20:8:444:444	5606003	0					
ANR	5606086	ExpressionStatement	"prjDir = r_str_newf ( ""%s.d"" , scriptPath )"	768:2:18021:18061	5606003	0	True				
ANR	5606087	AssignmentExpression	"prjDir = r_str_newf ( ""%s.d"" , scriptPath )"		5606003	0		=			
ANR	5606088	Identifier	prjDir		5606003	0					
ANR	5606089	CallExpression	"r_str_newf ( ""%s.d"" , scriptPath )"		5606003	1					
ANR	5606090	Callee	r_str_newf		5606003	0					
ANR	5606091	Identifier	r_str_newf		5606003	0					
ANR	5606092	ArgumentList	"""%s.d"""		5606003	1					
ANR	5606093	Argument	"""%s.d"""		5606003	0					
ANR	5606094	PrimaryExpression	"""%s.d"""		5606003	0					
ANR	5606095	Argument	scriptPath		5606003	1					
ANR	5606096	Identifier	scriptPath		5606003	0					
ANR	5606097	Statement	if	764:1:17891:17892	5606003	9	True				
ANR	5606098	Statement	(	764:4:17894:17894	5606003	10	True				
ANR	5606099	Statement	r_str_endswith	764:5:17895:17908	5606003	11	True				
ANR	5606100	Statement	(	764:20:17910:17910	5606003	12	True				
ANR	5606101	Statement	scriptPath	764:21:17911:17920	5606003	13	True				
ANR	5606102	Statement	","	764:31:17921:17921	5606003	14	True				
ANR	5606103	Statement	R_SYS_DIR	764:33:17923:17931	5606003	15	True				
ANR	5606104	Statement	"""rc"""	764:43:17933:17936	5606003	16	True				
ANR	5606105	Statement	)	764:47:17937:17937	5606003	17	True				
ANR	5606106	Statement	)	764:48:17938:17938	5606003	18	True				
ANR	5606107	CompoundStatement		17:50:367:367	5606003	19					
ANR	5606108	ExpressionStatement	prjDir = r_file_dirname ( scriptPath )	766:2:17971:18007	5606003	0	True				
ANR	5606109	AssignmentExpression	prjDir = r_file_dirname ( scriptPath )		5606003	0		=			
ANR	5606110	Identifier	prjDir		5606003	0					
ANR	5606111	CallExpression	r_file_dirname ( scriptPath )		5606003	1					
ANR	5606112	Callee	r_file_dirname		5606003	0					
ANR	5606113	Identifier	r_file_dirname		5606003	0					
ANR	5606114	ArgumentList	scriptPath		5606003	1					
ANR	5606115	Argument	scriptPath		5606003	0					
ANR	5606116	Identifier	scriptPath		5606003	0					
ANR	5606117	IfStatement	if ( r_file_exists ( scriptPath ) )		5606003	20					
ANR	5606118	Condition	r_file_exists ( scriptPath )	770:5:18071:18096	5606003	0	True				
ANR	5606119	CallExpression	r_file_exists ( scriptPath )		5606003	0					
ANR	5606120	Callee	r_file_exists		5606003	0					
ANR	5606121	Identifier	r_file_exists		5606003	0					
ANR	5606122	ArgumentList	scriptPath		5606003	1					
ANR	5606123	Argument	scriptPath		5606003	0					
ANR	5606124	Identifier	scriptPath		5606003	0					
ANR	5606125	CompoundStatement		23:33:526:526	5606003	1					
ANR	5606126	IfStatement	if ( r_file_is_directory ( scriptPath ) )		5606003	0					
ANR	5606127	Condition	r_file_is_directory ( scriptPath )	771:6:18107:18138	5606003	0	True				
ANR	5606128	CallExpression	r_file_is_directory ( scriptPath )		5606003	0					
ANR	5606129	Callee	r_file_is_directory		5606003	0					
ANR	5606130	Identifier	r_file_is_directory		5606003	0					
ANR	5606131	ArgumentList	scriptPath		5606003	1					
ANR	5606132	Argument	scriptPath		5606003	0					
ANR	5606133	Identifier	scriptPath		5606003	0					
ANR	5606134	CompoundStatement		24:40:568:568	5606003	1					
ANR	5606135	ExpressionStatement	"eprintf ( ""WTF. rc is a directory?\\n"" )"	772:3:18146:18183	5606003	0	True				
ANR	5606136	CallExpression	"eprintf ( ""WTF. rc is a directory?\\n"" )"		5606003	0					
ANR	5606137	Callee	eprintf		5606003	0					
ANR	5606138	Identifier	eprintf		5606003	0					
ANR	5606139	ArgumentList	"""WTF. rc is a directory?\\n"""		5606003	1					
ANR	5606140	Argument	"""WTF. rc is a directory?\\n"""		5606003	0					
ANR	5606141	PrimaryExpression	"""WTF. rc is a directory?\\n"""		5606003	0					
ANR	5606142	IfStatement	"if ( r_str_endswith ( prjDir , "".d"" ) )"		5606003	1					
ANR	5606143	Condition	"r_str_endswith ( prjDir , "".d"" )"	774:6:18195:18223	5606003	0	True				
ANR	5606144	CallExpression	"r_str_endswith ( prjDir , "".d"" )"		5606003	0					
ANR	5606145	Callee	r_str_endswith		5606003	0					
ANR	5606146	Identifier	r_str_endswith		5606003	0					
ANR	5606147	ArgumentList	prjDir		5606003	1					
ANR	5606148	Argument	prjDir		5606003	0					
ANR	5606149	Identifier	prjDir		5606003	0					
ANR	5606150	Argument	""".d"""		5606003	1					
ANR	5606151	PrimaryExpression	""".d"""		5606003	0					
ANR	5606152	CompoundStatement		27:37:653:653	5606003	1					
ANR	5606153	ExpressionStatement	"eprintf ( ""Upgrading project...\\n"" )"	775:3:18231:18265	5606003	0	True				
ANR	5606154	CallExpression	"eprintf ( ""Upgrading project...\\n"" )"		5606003	0					
ANR	5606155	Callee	eprintf		5606003	0					
ANR	5606156	Identifier	eprintf		5606003	0					
ANR	5606157	ArgumentList	"""Upgrading project...\\n"""		5606003	1					
ANR	5606158	Argument	"""Upgrading project...\\n"""		5606003	0					
ANR	5606159	PrimaryExpression	"""Upgrading project...\\n"""		5606003	0					
ANR	5606160	ExpressionStatement	r_file_rm ( scriptPath )	777:3:18285:18307	5606003	1	True				
ANR	5606161	CallExpression	r_file_rm ( scriptPath )		5606003	0					
ANR	5606162	Callee	r_file_rm		5606003	0					
ANR	5606163	Identifier	r_file_rm		5606003	0					
ANR	5606164	ArgumentList	scriptPath		5606003	1					
ANR	5606165	Argument	scriptPath		5606003	0					
ANR	5606166	Identifier	scriptPath		5606003	0					
ANR	5606167	ExpressionStatement	r_sys_mkdirp ( prjDir )	778:3:18312:18333	5606003	2	True				
ANR	5606168	CallExpression	r_sys_mkdirp ( prjDir )		5606003	0					
ANR	5606169	Callee	r_sys_mkdirp		5606003	0					
ANR	5606170	Identifier	r_sys_mkdirp		5606003	0					
ANR	5606171	ArgumentList	prjDir		5606003	1					
ANR	5606172	Argument	prjDir		5606003	0					
ANR	5606173	Identifier	prjDir		5606003	0					
ANR	5606174	ExpressionStatement	"eprintf ( ""Please remove: rm -rf %s %s.d\\n"" , prjName , prjName )"	779:3:18338:18399	5606003	3	True				
ANR	5606175	CallExpression	"eprintf ( ""Please remove: rm -rf %s %s.d\\n"" , prjName , prjName )"		5606003	0					
ANR	5606176	Callee	eprintf		5606003	0					
ANR	5606177	Identifier	eprintf		5606003	0					
ANR	5606178	ArgumentList	"""Please remove: rm -rf %s %s.d\\n"""		5606003	1					
ANR	5606179	Argument	"""Please remove: rm -rf %s %s.d\\n"""		5606003	0					
ANR	5606180	PrimaryExpression	"""Please remove: rm -rf %s %s.d\\n"""		5606003	0					
ANR	5606181	Argument	prjName		5606003	1					
ANR	5606182	Identifier	prjName		5606003	0					
ANR	5606183	Argument	prjName		5606003	2					
ANR	5606184	Identifier	prjName		5606003	0					
ANR	5606185	Statement	char	780:3:18404:18407	5606003	4	True				
ANR	5606186	Statement	*	780:8:18409:18409	5606003	5	True				
ANR	5606187	Statement	rc	780:9:18410:18411	5606003	6	True				
ANR	5606188	Statement	=	780:12:18413:18413	5606003	7	True				
ANR	5606189	Statement	r_str_newf	780:14:18415:18424	5606003	8	True				
ANR	5606190	Statement	(	780:25:18426:18426	5606003	9	True				
ANR	5606191	Statement	"""%s"""	780:26:18427:18430	5606003	10	True				
ANR	5606192	Statement	R_SYS_DIR	780:31:18432:18440	5606003	11	True				
ANR	5606193	Statement	"""rc"""	780:41:18442:18445	5606003	12	True				
ANR	5606194	Statement	","	780:45:18446:18446	5606003	13	True				
ANR	5606195	Statement	prjDir	780:47:18448:18453	5606003	14	True				
ANR	5606196	Statement	)	780:53:18454:18454	5606003	15	True				
ANR	5606197	ExpressionStatement		780:54:18455:18455	5606003	16	True				
ANR	5606198	IfStatement	if ( ! rc )		5606003	17					
ANR	5606199	Condition	! rc	781:7:18464:18466	5606003	0	True				
ANR	5606200	UnaryOperationExpression	! rc		5606003	0					
ANR	5606201	UnaryOperator	!		5606003	0					
ANR	5606202	Identifier	rc		5606003	1					
ANR	5606203	CompoundStatement		34:12:896:896	5606003	1					
ANR	5606204	ExpressionStatement	free ( prjDir )	782:4:18475:18488	5606003	0	True				
ANR	5606205	CallExpression	free ( prjDir )		5606003	0					
ANR	5606206	Callee	free		5606003	0					
ANR	5606207	Identifier	free		5606003	0					
ANR	5606208	ArgumentList	prjDir		5606003	1					
ANR	5606209	Argument	prjDir		5606003	0					
ANR	5606210	Identifier	prjDir		5606003	0					
ANR	5606211	ExpressionStatement	free ( scriptPath )	783:4:18494:18511	5606003	1	True				
ANR	5606212	CallExpression	free ( scriptPath )		5606003	0					
ANR	5606213	Callee	free		5606003	0					
ANR	5606214	Identifier	free		5606003	0					
ANR	5606215	ArgumentList	scriptPath		5606003	1					
ANR	5606216	Argument	scriptPath		5606003	0					
ANR	5606217	Identifier	scriptPath		5606003	0					
ANR	5606218	ReturnStatement	return false ;	784:4:18517:18529	5606003	2	True				
ANR	5606219	Identifier	false		5606003	0					
ANR	5606220	ExpressionStatement	free ( scriptPath )	786:3:18539:18556	5606003	18	True				
ANR	5606221	CallExpression	free ( scriptPath )		5606003	0					
ANR	5606222	Callee	free		5606003	0					
ANR	5606223	Identifier	free		5606003	0					
ANR	5606224	ArgumentList	scriptPath		5606003	1					
ANR	5606225	Argument	scriptPath		5606003	0					
ANR	5606226	Identifier	scriptPath		5606003	0					
ANR	5606227	ExpressionStatement	scriptPath = rc	787:3:18561:18576	5606003	19	True				
ANR	5606228	AssignmentExpression	scriptPath = rc		5606003	0		=			
ANR	5606229	Identifier	scriptPath		5606003	0					
ANR	5606230	Identifier	rc		5606003	1					
ANR	5606231	ExpressionStatement	free ( prjDir )	788:3:18581:18594	5606003	20	True				
ANR	5606232	CallExpression	free ( prjDir )		5606003	0					
ANR	5606233	Callee	free		5606003	0					
ANR	5606234	Identifier	free		5606003	0					
ANR	5606235	ArgumentList	prjDir		5606003	1					
ANR	5606236	Argument	prjDir		5606003	0					
ANR	5606237	Identifier	prjDir		5606003	0					
ANR	5606238	ExpressionStatement	prjDir = r_file_dirname ( scriptPath )	789:3:18599:18635	5606003	21	True				
ANR	5606239	AssignmentExpression	prjDir = r_file_dirname ( scriptPath )		5606003	0		=			
ANR	5606240	Identifier	prjDir		5606003	0					
ANR	5606241	CallExpression	r_file_dirname ( scriptPath )		5606003	1					
ANR	5606242	Callee	r_file_dirname		5606003	0					
ANR	5606243	Identifier	r_file_dirname		5606003	0					
ANR	5606244	ArgumentList	scriptPath		5606003	1					
ANR	5606245	Argument	scriptPath		5606003	0					
ANR	5606246	Identifier	scriptPath		5606003	0					
ANR	5606247	IfStatement	if ( ! prjDir )		5606003	21					
ANR	5606248	Condition	! prjDir	793:5:18656:18662	5606003	0	True				
ANR	5606249	UnaryOperationExpression	! prjDir		5606003	0					
ANR	5606250	UnaryOperator	!		5606003	0					
ANR	5606251	Identifier	prjDir		5606003	1					
ANR	5606252	CompoundStatement		46:14:1092:1092	5606003	1					
ANR	5606253	ExpressionStatement	prjDir = strdup ( prjName )	794:2:18669:18694	5606003	0	True				
ANR	5606254	AssignmentExpression	prjDir = strdup ( prjName )		5606003	0		=			
ANR	5606255	Identifier	prjDir		5606003	0					
ANR	5606256	CallExpression	strdup ( prjName )		5606003	1					
ANR	5606257	Callee	strdup		5606003	0					
ANR	5606258	Identifier	strdup		5606003	0					
ANR	5606259	ArgumentList	prjName		5606003	1					
ANR	5606260	Argument	prjName		5606003	0					
ANR	5606261	Identifier	prjName		5606003	0					
ANR	5606262	IfStatement	if ( ! r_file_exists ( prjDir ) )		5606003	22					
ANR	5606263	Condition	! r_file_exists ( prjDir )	796:5:18704:18726	5606003	0	True				
ANR	5606264	UnaryOperationExpression	! r_file_exists ( prjDir )		5606003	0					
ANR	5606265	UnaryOperator	!		5606003	0					
ANR	5606266	CallExpression	r_file_exists ( prjDir )		5606003	1					
ANR	5606267	Callee	r_file_exists		5606003	0					
ANR	5606268	Identifier	r_file_exists		5606003	0					
ANR	5606269	ArgumentList	prjDir		5606003	1					
ANR	5606270	Argument	prjDir		5606003	0					
ANR	5606271	Identifier	prjDir		5606003	0					
ANR	5606272	CompoundStatement		49:30:1156:1156	5606003	1					
ANR	5606273	ExpressionStatement	r_sys_mkdirp ( prjDir )	797:2:18733:18754	5606003	0	True				
ANR	5606274	CallExpression	r_sys_mkdirp ( prjDir )		5606003	0					
ANR	5606275	Callee	r_sys_mkdirp		5606003	0					
ANR	5606276	Identifier	r_sys_mkdirp		5606003	0					
ANR	5606277	ArgumentList	prjDir		5606003	1					
ANR	5606278	Argument	prjDir		5606003	0					
ANR	5606279	Identifier	prjDir		5606003	0					
ANR	5606280	IfStatement	"if ( r_config_get_i ( core -> config , ""scr.null"" ) )"		5606003	23					
ANR	5606281	Condition	"r_config_get_i ( core -> config , ""scr.null"" )"	799:5:18764:18804	5606003	0	True				
ANR	5606282	CallExpression	"r_config_get_i ( core -> config , ""scr.null"" )"		5606003	0					
ANR	5606283	Callee	r_config_get_i		5606003	0					
ANR	5606284	Identifier	r_config_get_i		5606003	0					
ANR	5606285	ArgumentList	core -> config		5606003	1					
ANR	5606286	Argument	core -> config		5606003	0					
ANR	5606287	PtrMemberAccess	core -> config		5606003	0					
ANR	5606288	Identifier	core		5606003	0					
ANR	5606289	Identifier	config		5606003	1					
ANR	5606290	Argument	"""scr.null"""		5606003	1					
ANR	5606291	PrimaryExpression	"""scr.null"""		5606003	0					
ANR	5606292	CompoundStatement		52:48:1234:1234	5606003	1					
ANR	5606293	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.null"" , false )"	800:2:18811:18859	5606003	0	True				
ANR	5606294	CallExpression	"r_config_set_i ( core -> config , ""scr.null"" , false )"		5606003	0					
ANR	5606295	Callee	r_config_set_i		5606003	0					
ANR	5606296	Identifier	r_config_set_i		5606003	0					
ANR	5606297	ArgumentList	core -> config		5606003	1					
ANR	5606298	Argument	core -> config		5606003	0					
ANR	5606299	PtrMemberAccess	core -> config		5606003	0					
ANR	5606300	Identifier	core		5606003	0					
ANR	5606301	Identifier	config		5606003	1					
ANR	5606302	Argument	"""scr.null"""		5606003	1					
ANR	5606303	PrimaryExpression	"""scr.null"""		5606003	0					
ANR	5606304	Argument	false		5606003	2					
ANR	5606305	Identifier	false		5606003	0					
ANR	5606306	ExpressionStatement	scr_null = true	801:2:18863:18878	5606003	1	True				
ANR	5606307	AssignmentExpression	scr_null = true		5606003	0		=			
ANR	5606308	Identifier	scr_null		5606003	0					
ANR	5606309	Identifier	true		5606003	1					
ANR	5606310	ExpressionStatement	projectInit ( core )	803:1:18884:18902	5606003	24	True				
ANR	5606311	CallExpression	projectInit ( core )		5606003	0					
ANR	5606312	Callee	projectInit		5606003	0					
ANR	5606313	Identifier	projectInit		5606003	0					
ANR	5606314	ArgumentList	core		5606003	1					
ANR	5606315	Argument	core		5606003	0					
ANR	5606316	Identifier	core		5606003	0					
ANR	5606317	IdentifierDeclStatement	"Sdb * rop_db = sdb_ns ( core -> sdb , ""rop"" , false ) ;"	805:1:18906:18952	5606003	25	True				
ANR	5606318	IdentifierDecl	"* rop_db = sdb_ns ( core -> sdb , ""rop"" , false )"		5606003	0					
ANR	5606319	IdentifierDeclType	Sdb *		5606003	0					
ANR	5606320	Identifier	rop_db		5606003	1					
ANR	5606321	AssignmentExpression	"* rop_db = sdb_ns ( core -> sdb , ""rop"" , false )"		5606003	2		=			
ANR	5606322	Identifier	rop_db		5606003	0					
ANR	5606323	CallExpression	"sdb_ns ( core -> sdb , ""rop"" , false )"		5606003	1					
ANR	5606324	Callee	sdb_ns		5606003	0					
ANR	5606325	Identifier	sdb_ns		5606003	0					
ANR	5606326	ArgumentList	core -> sdb		5606003	1					
ANR	5606327	Argument	core -> sdb		5606003	0					
ANR	5606328	PtrMemberAccess	core -> sdb		5606003	0					
ANR	5606329	Identifier	core		5606003	0					
ANR	5606330	Identifier	sdb		5606003	1					
ANR	5606331	Argument	"""rop"""		5606003	1					
ANR	5606332	PrimaryExpression	"""rop"""		5606003	0					
ANR	5606333	Argument	false		5606003	2					
ANR	5606334	Identifier	false		5606003	0					
ANR	5606335	IfStatement	if ( rop_db )		5606003	26					
ANR	5606336	Condition	rop_db	806:5:18959:18964	5606003	0	True				
ANR	5606337	Identifier	rop_db		5606003	0					
ANR	5606338	CompoundStatement		59:13:1394:1394	5606003	1					
ANR	5606339	Statement	ls_foreach	808:2:19016:19025	5606003	0	True				
ANR	5606340	Statement	(	808:13:19027:19027	5606003	1	True				
ANR	5606341	Statement	rop_db	808:14:19028:19033	5606003	2	True				
ANR	5606342	Statement	->	808:20:19034:19035	5606003	3	True				
ANR	5606343	Statement	ns	808:22:19036:19037	5606003	4	True				
ANR	5606344	Statement	","	808:24:19038:19038	5606003	5	True				
ANR	5606345	Statement	it	808:26:19040:19041	5606003	6	True				
ANR	5606346	Statement	","	808:28:19042:19042	5606003	7	True				
ANR	5606347	Statement	ns	808:30:19044:19045	5606003	8	True				
ANR	5606348	Statement	)	808:32:19046:19046	5606003	9	True				
ANR	5606349	CompoundStatement		61:34:1475:1475	5606003	10					
ANR	5606350	Statement	char	809:3:19053:19056	5606003	0	True				
ANR	5606351	Statement	*	809:8:19058:19058	5606003	1	True				
ANR	5606352	Statement	rop_path	809:9:19059:19066	5606003	2	True				
ANR	5606353	Statement	=	809:18:19068:19068	5606003	3	True				
ANR	5606354	Statement	r_str_newf	809:20:19070:19079	5606003	4	True				
ANR	5606355	Statement	(	809:31:19081:19081	5606003	5	True				
ANR	5606356	Statement	"""%s"""	809:32:19082:19085	5606003	6	True				
ANR	5606357	Statement	R_SYS_DIR	809:37:19087:19095	5606003	7	True				
ANR	5606358	Statement	"""rop.d"""	809:47:19097:19103	5606003	8	True				
ANR	5606359	Statement	R_SYS_DIR	809:55:19105:19113	5606003	9	True				
ANR	5606360	Statement	"""%s"""	809:65:19115:19118	5606003	10	True				
ANR	5606361	Statement	","	809:69:19119:19119	5606003	11	True				
ANR	5606362	Statement	prjDir	809:71:19121:19126	5606003	12	True				
ANR	5606363	Statement	","	809:77:19127:19127	5606003	13	True				
ANR	5606364	Statement	ns	809:79:19129:19130	5606003	14	True				
ANR	5606365	Statement	->	809:81:19131:19132	5606003	15	True				
ANR	5606366	Statement	name	809:83:19133:19136	5606003	16	True				
ANR	5606367	Statement	)	809:87:19137:19137	5606003	17	True				
ANR	5606368	ExpressionStatement		809:88:19138:19138	5606003	18	True				
ANR	5606369	ExpressionStatement	"sdb_file ( ns -> sdb , rop_path )"	810:3:19143:19171	5606003	19	True				
ANR	5606370	CallExpression	"sdb_file ( ns -> sdb , rop_path )"		5606003	0					
ANR	5606371	Callee	sdb_file		5606003	0					
ANR	5606372	Identifier	sdb_file		5606003	0					
ANR	5606373	ArgumentList	ns -> sdb		5606003	1					
ANR	5606374	Argument	ns -> sdb		5606003	0					
ANR	5606375	PtrMemberAccess	ns -> sdb		5606003	0					
ANR	5606376	Identifier	ns		5606003	0					
ANR	5606377	Identifier	sdb		5606003	1					
ANR	5606378	Argument	rop_path		5606003	1					
ANR	5606379	Identifier	rop_path		5606003	0					
ANR	5606380	ExpressionStatement	sdb_sync ( ns -> sdb )	811:3:19176:19194	5606003	20	True				
ANR	5606381	CallExpression	sdb_sync ( ns -> sdb )		5606003	0					
ANR	5606382	Callee	sdb_sync		5606003	0					
ANR	5606383	Identifier	sdb_sync		5606003	0					
ANR	5606384	ArgumentList	ns -> sdb		5606003	1					
ANR	5606385	Argument	ns -> sdb		5606003	0					
ANR	5606386	PtrMemberAccess	ns -> sdb		5606003	0					
ANR	5606387	Identifier	ns		5606003	0					
ANR	5606388	Identifier	sdb		5606003	1					
ANR	5606389	ExpressionStatement	free ( rop_path )	812:3:19199:19214	5606003	21	True				
ANR	5606390	CallExpression	free ( rop_path )		5606003	0					
ANR	5606391	Callee	free		5606003	0					
ANR	5606392	Identifier	free		5606003	0					
ANR	5606393	ArgumentList	rop_path		5606003	1					
ANR	5606394	Argument	rop_path		5606003	0					
ANR	5606395	Identifier	rop_path		5606003	0					
ANR	5606396	IdentifierDeclStatement	"const char * oldPrjNameC = r_config_get ( core -> config , ""prj.name"" ) ;"	816:1:19225:19290	5606003	27	True				
ANR	5606397	IdentifierDecl	"* oldPrjNameC = r_config_get ( core -> config , ""prj.name"" )"		5606003	0					
ANR	5606398	IdentifierDeclType	const char *		5606003	0					
ANR	5606399	Identifier	oldPrjNameC		5606003	1					
ANR	5606400	AssignmentExpression	"* oldPrjNameC = r_config_get ( core -> config , ""prj.name"" )"		5606003	2		=			
ANR	5606401	Identifier	oldPrjNameC		5606003	0					
ANR	5606402	CallExpression	"r_config_get ( core -> config , ""prj.name"" )"		5606003	1					
ANR	5606403	Callee	r_config_get		5606003	0					
ANR	5606404	Identifier	r_config_get		5606003	0					
ANR	5606405	ArgumentList	core -> config		5606003	1					
ANR	5606406	Argument	core -> config		5606003	0					
ANR	5606407	PtrMemberAccess	core -> config		5606003	0					
ANR	5606408	Identifier	core		5606003	0					
ANR	5606409	Identifier	config		5606003	1					
ANR	5606410	Argument	"""prj.name"""		5606003	1					
ANR	5606411	PrimaryExpression	"""prj.name"""		5606003	0					
ANR	5606412	IfStatement	if ( oldPrjNameC )		5606003	28					
ANR	5606413	Condition	oldPrjNameC	817:5:19297:19307	5606003	0	True				
ANR	5606414	Identifier	oldPrjNameC		5606003	0					
ANR	5606415	CompoundStatement		70:18:1737:1737	5606003	1					
ANR	5606416	ExpressionStatement	oldPrjName = strdup ( oldPrjNameC )	818:2:19314:19347	5606003	0	True				
ANR	5606417	AssignmentExpression	oldPrjName = strdup ( oldPrjNameC )		5606003	0		=			
ANR	5606418	Identifier	oldPrjName		5606003	0					
ANR	5606419	CallExpression	strdup ( oldPrjNameC )		5606003	1					
ANR	5606420	Callee	strdup		5606003	0					
ANR	5606421	Identifier	strdup		5606003	0					
ANR	5606422	ArgumentList	oldPrjNameC		5606003	1					
ANR	5606423	Argument	oldPrjNameC		5606003	0					
ANR	5606424	Identifier	oldPrjNameC		5606003	0					
ANR	5606425	ExpressionStatement	"r_config_set ( core -> config , ""prj.name"" , prjName )"	820:1:19353:19401	5606003	29	True				
ANR	5606426	CallExpression	"r_config_set ( core -> config , ""prj.name"" , prjName )"		5606003	0					
ANR	5606427	Callee	r_config_set		5606003	0					
ANR	5606428	Identifier	r_config_set		5606003	0					
ANR	5606429	ArgumentList	core -> config		5606003	1					
ANR	5606430	Argument	core -> config		5606003	0					
ANR	5606431	PtrMemberAccess	core -> config		5606003	0					
ANR	5606432	Identifier	core		5606003	0					
ANR	5606433	Identifier	config		5606003	1					
ANR	5606434	Argument	"""prj.name"""		5606003	1					
ANR	5606435	PrimaryExpression	"""prj.name"""		5606003	0					
ANR	5606436	Argument	prjName		5606003	2					
ANR	5606437	Identifier	prjName		5606003	0					
ANR	5606438	IfStatement	"if ( r_config_get_i ( core -> config , ""prj.simple"" ) )"		5606003	30					
ANR	5606439	Condition	"r_config_get_i ( core -> config , ""prj.simple"" )"	821:5:19408:19450	5606003	0	True				
ANR	5606440	CallExpression	"r_config_get_i ( core -> config , ""prj.simple"" )"		5606003	0					
ANR	5606441	Callee	r_config_get_i		5606003	0					
ANR	5606442	Identifier	r_config_get_i		5606003	0					
ANR	5606443	ArgumentList	core -> config		5606003	1					
ANR	5606444	Argument	core -> config		5606003	0					
ANR	5606445	PtrMemberAccess	core -> config		5606003	0					
ANR	5606446	Identifier	core		5606003	0					
ANR	5606447	Identifier	config		5606003	1					
ANR	5606448	Argument	"""prj.simple"""		5606003	1					
ANR	5606449	PrimaryExpression	"""prj.simple"""		5606003	0					
ANR	5606450	CompoundStatement		74:50:1880:1880	5606003	1					
ANR	5606451	IfStatement	"if ( ! simpleProjectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL ) )"		5606003	0					
ANR	5606452	Condition	"! simpleProjectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL )"	822:6:19461:19519	5606003	0	True				
ANR	5606453	UnaryOperationExpression	"! simpleProjectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL )"		5606003	0					
ANR	5606454	UnaryOperator	!		5606003	0					
ANR	5606455	CallExpression	"simpleProjectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL )"		5606003	1					
ANR	5606456	Callee	simpleProjectSaveScript		5606003	0					
ANR	5606457	Identifier	simpleProjectSaveScript		5606003	0					
ANR	5606458	ArgumentList	core		5606003	1					
ANR	5606459	Argument	core		5606003	0					
ANR	5606460	Identifier	core		5606003	0					
ANR	5606461	Argument	scriptPath		5606003	1					
ANR	5606462	Identifier	scriptPath		5606003	0					
ANR	5606463	Argument	R_CORE_PRJ_ALL		5606003	2					
ANR	5606464	Identifier	R_CORE_PRJ_ALL		5606003	0					
ANR	5606465	CompoundStatement		75:67:1949:1949	5606003	1					
ANR	5606466	ExpressionStatement	"eprintf ( ""Cannot open '%s' for writing\\n"" , prjName )"	823:3:19527:19578	5606003	0	True				
ANR	5606467	CallExpression	"eprintf ( ""Cannot open '%s' for writing\\n"" , prjName )"		5606003	0					
ANR	5606468	Callee	eprintf		5606003	0					
ANR	5606469	Identifier	eprintf		5606003	0					
ANR	5606470	ArgumentList	"""Cannot open '%s' for writing\\n"""		5606003	1					
ANR	5606471	Argument	"""Cannot open '%s' for writing\\n"""		5606003	0					
ANR	5606472	PrimaryExpression	"""Cannot open '%s' for writing\\n"""		5606003	0					
ANR	5606473	Argument	prjName		5606003	1					
ANR	5606474	Identifier	prjName		5606003	0					
ANR	5606475	ExpressionStatement	ret = false	824:3:19583:19594	5606003	1	True				
ANR	5606476	AssignmentExpression	ret = false		5606003	0		=			
ANR	5606477	Identifier	ret		5606003	0					
ANR	5606478	Identifier	false		5606003	1					
ANR	5606479	ElseStatement	else		5606003	0					
ANR	5606480	CompoundStatement		79:8:2035:2035	5606003	0					
ANR	5606481	IfStatement	"if ( ! projectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL ) )"		5606003	0					
ANR	5606482	Condition	"! projectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL )"	827:6:19616:19668	5606003	0	True				
ANR	5606483	UnaryOperationExpression	"! projectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL )"		5606003	0					
ANR	5606484	UnaryOperator	!		5606003	0					
ANR	5606485	CallExpression	"projectSaveScript ( core , scriptPath , R_CORE_PRJ_ALL )"		5606003	1					
ANR	5606486	Callee	projectSaveScript		5606003	0					
ANR	5606487	Identifier	projectSaveScript		5606003	0					
ANR	5606488	ArgumentList	core		5606003	1					
ANR	5606489	Argument	core		5606003	0					
ANR	5606490	Identifier	core		5606003	0					
ANR	5606491	Argument	scriptPath		5606003	1					
ANR	5606492	Identifier	scriptPath		5606003	0					
ANR	5606493	Argument	R_CORE_PRJ_ALL		5606003	2					
ANR	5606494	Identifier	R_CORE_PRJ_ALL		5606003	0					
ANR	5606495	CompoundStatement		80:61:2098:2098	5606003	1					
ANR	5606496	ExpressionStatement	"eprintf ( ""Cannot open '%s' for writing\\n"" , prjName )"	828:3:19676:19727	5606003	0	True				
ANR	5606497	CallExpression	"eprintf ( ""Cannot open '%s' for writing\\n"" , prjName )"		5606003	0					
ANR	5606498	Callee	eprintf		5606003	0					
ANR	5606499	Identifier	eprintf		5606003	0					
ANR	5606500	ArgumentList	"""Cannot open '%s' for writing\\n"""		5606003	1					
ANR	5606501	Argument	"""Cannot open '%s' for writing\\n"""		5606003	0					
ANR	5606502	PrimaryExpression	"""Cannot open '%s' for writing\\n"""		5606003	0					
ANR	5606503	Argument	prjName		5606003	1					
ANR	5606504	Identifier	prjName		5606003	0					
ANR	5606505	ExpressionStatement	ret = false	829:3:19732:19743	5606003	1	True				
ANR	5606506	AssignmentExpression	ret = false		5606003	0		=			
ANR	5606507	Identifier	ret		5606003	0					
ANR	5606508	Identifier	false		5606003	1					
ANR	5606509	IfStatement	"if ( r_config_get_i ( core -> config , ""prj.files"" ) )"		5606003	31					
ANR	5606510	Condition	"r_config_get_i ( core -> config , ""prj.files"" )"	833:5:19758:19799	5606003	0	True				
ANR	5606511	CallExpression	"r_config_get_i ( core -> config , ""prj.files"" )"		5606003	0					
ANR	5606512	Callee	r_config_get_i		5606003	0					
ANR	5606513	Identifier	r_config_get_i		5606003	0					
ANR	5606514	ArgumentList	core -> config		5606003	1					
ANR	5606515	Argument	core -> config		5606003	0					
ANR	5606516	PtrMemberAccess	core -> config		5606003	0					
ANR	5606517	Identifier	core		5606003	0					
ANR	5606518	Identifier	config		5606003	1					
ANR	5606519	Argument	"""prj.files"""		5606003	1					
ANR	5606520	PrimaryExpression	"""prj.files"""		5606003	0					
ANR	5606521	CompoundStatement		89:2:2384:2435	5606003	1					
ANR	5606522	ExpressionStatement	"eprintf ( ""TODO: prj.files: support copying more than one file into the project directory\\n"" )"	834:2:19806:19898	5606003	0	True				
ANR	5606523	CallExpression	"eprintf ( ""TODO: prj.files: support copying more than one file into the project directory\\n"" )"		5606003	0					
ANR	5606524	Callee	eprintf		5606003	0					
ANR	5606525	Identifier	eprintf		5606003	0					
ANR	5606526	ArgumentList	"""TODO: prj.files: support copying more than one file into the project directory\\n"""		5606003	1					
ANR	5606527	Argument	"""TODO: prj.files: support copying more than one file into the project directory\\n"""		5606003	0					
ANR	5606528	PrimaryExpression	"""TODO: prj.files: support copying more than one file into the project directory\\n"""		5606003	0					
ANR	5606529	IdentifierDeclStatement	"char * binFile = r_core_project_info ( core , prjName ) ;"	835:2:19902:19953	5606003	1	True				
ANR	5606530	IdentifierDecl	"* binFile = r_core_project_info ( core , prjName )"		5606003	0					
ANR	5606531	IdentifierDeclType	char *		5606003	0					
ANR	5606532	Identifier	binFile		5606003	1					
ANR	5606533	AssignmentExpression	"* binFile = r_core_project_info ( core , prjName )"		5606003	2		=			
ANR	5606534	Identifier	binFile		5606003	0					
ANR	5606535	CallExpression	"r_core_project_info ( core , prjName )"		5606003	1					
ANR	5606536	Callee	r_core_project_info		5606003	0					
ANR	5606537	Identifier	r_core_project_info		5606003	0					
ANR	5606538	ArgumentList	core		5606003	1					
ANR	5606539	Argument	core		5606003	0					
ANR	5606540	Identifier	core		5606003	0					
ANR	5606541	Argument	prjName		5606003	1					
ANR	5606542	Identifier	prjName		5606003	0					
ANR	5606543	IdentifierDeclStatement	const char * binFileName = r_file_basename ( binFile ) ;	836:2:19957:20008	5606003	2	True				
ANR	5606544	IdentifierDecl	* binFileName = r_file_basename ( binFile )		5606003	0					
ANR	5606545	IdentifierDeclType	const char *		5606003	0					
ANR	5606546	Identifier	binFileName		5606003	1					
ANR	5606547	AssignmentExpression	* binFileName = r_file_basename ( binFile )		5606003	2		=			
ANR	5606548	Identifier	binFileName		5606003	0					
ANR	5606549	CallExpression	r_file_basename ( binFile )		5606003	1					
ANR	5606550	Callee	r_file_basename		5606003	0					
ANR	5606551	Identifier	r_file_basename		5606003	0					
ANR	5606552	ArgumentList	binFile		5606003	1					
ANR	5606553	Argument	binFile		5606003	0					
ANR	5606554	Identifier	binFile		5606003	0					
ANR	5606555	Statement	char	837:2:20012:20015	5606003	3	True				
ANR	5606556	Statement	*	837:7:20017:20017	5606003	4	True				
ANR	5606557	Statement	prjBinDir	837:8:20018:20026	5606003	5	True				
ANR	5606558	Statement	=	837:18:20028:20028	5606003	6	True				
ANR	5606559	Statement	r_str_newf	837:20:20030:20039	5606003	7	True				
ANR	5606560	Statement	(	837:31:20041:20041	5606003	8	True				
ANR	5606561	Statement	"""%s"""	837:32:20042:20045	5606003	9	True				
ANR	5606562	Statement	R_SYS_DIR	837:37:20047:20055	5606003	10	True				
ANR	5606563	Statement	"""bin"""	837:47:20057:20061	5606003	11	True				
ANR	5606564	Statement	","	837:52:20062:20062	5606003	12	True				
ANR	5606565	Statement	prjDir	837:54:20064:20069	5606003	13	True				
ANR	5606566	Statement	)	837:60:20070:20070	5606003	14	True				
ANR	5606567	ExpressionStatement		837:61:20071:20071	5606003	15	True				
ANR	5606568	Statement	char	838:2:20075:20078	5606003	16	True				
ANR	5606569	Statement	*	838:7:20080:20080	5606003	17	True				
ANR	5606570	Statement	prjBinFile	838:8:20081:20090	5606003	18	True				
ANR	5606571	Statement	=	838:19:20092:20092	5606003	19	True				
ANR	5606572	Statement	r_str_newf	838:21:20094:20103	5606003	20	True				
ANR	5606573	Statement	(	838:32:20105:20105	5606003	21	True				
ANR	5606574	Statement	"""%s"""	838:33:20106:20109	5606003	22	True				
ANR	5606575	Statement	R_SYS_DIR	838:38:20111:20119	5606003	23	True				
ANR	5606576	Statement	"""%s"""	838:48:20121:20124	5606003	24	True				
ANR	5606577	Statement	","	838:52:20125:20125	5606003	25	True				
ANR	5606578	Statement	prjBinDir	838:54:20127:20135	5606003	26	True				
ANR	5606579	Statement	","	838:63:20136:20136	5606003	27	True				
ANR	5606580	Statement	binFileName	838:65:20138:20148	5606003	28	True				
ANR	5606581	Statement	)	838:76:20149:20149	5606003	29	True				
ANR	5606582	ExpressionStatement		838:77:20150:20150	5606003	30	True				
ANR	5606583	ExpressionStatement	r_sys_mkdirp ( prjBinDir )	839:2:20154:20178	5606003	31	True				
ANR	5606584	CallExpression	r_sys_mkdirp ( prjBinDir )		5606003	0					
ANR	5606585	Callee	r_sys_mkdirp		5606003	0					
ANR	5606586	Identifier	r_sys_mkdirp		5606003	0					
ANR	5606587	ArgumentList	prjBinDir		5606003	1					
ANR	5606588	Argument	prjBinDir		5606003	0					
ANR	5606589	Identifier	prjBinDir		5606003	0					
ANR	5606590	IfStatement	"if ( ! r_file_copy ( binFile , prjBinFile ) )"		5606003	32					
ANR	5606591	Condition	"! r_file_copy ( binFile , prjBinFile )"	840:6:20186:20219	5606003	0	True				
ANR	5606592	UnaryOperationExpression	"! r_file_copy ( binFile , prjBinFile )"		5606003	0					
ANR	5606593	UnaryOperator	!		5606003	0					
ANR	5606594	CallExpression	"r_file_copy ( binFile , prjBinFile )"		5606003	1					
ANR	5606595	Callee	r_file_copy		5606003	0					
ANR	5606596	Identifier	r_file_copy		5606003	0					
ANR	5606597	ArgumentList	binFile		5606003	1					
ANR	5606598	Argument	binFile		5606003	0					
ANR	5606599	Identifier	binFile		5606003	0					
ANR	5606600	Argument	prjBinFile		5606003	1					
ANR	5606601	Identifier	prjBinFile		5606003	0					
ANR	5606602	CompoundStatement		93:42:2649:2649	5606003	1					
ANR	5606603	ExpressionStatement	"eprintf ( ""Warning: Cannot copy '%s' into '%s'\\n"" , binFile , prjBinFile )"	841:3:20227:20297	5606003	0	True				
ANR	5606604	CallExpression	"eprintf ( ""Warning: Cannot copy '%s' into '%s'\\n"" , binFile , prjBinFile )"		5606003	0					
ANR	5606605	Callee	eprintf		5606003	0					
ANR	5606606	Identifier	eprintf		5606003	0					
ANR	5606607	ArgumentList	"""Warning: Cannot copy '%s' into '%s'\\n"""		5606003	1					
ANR	5606608	Argument	"""Warning: Cannot copy '%s' into '%s'\\n"""		5606003	0					
ANR	5606609	PrimaryExpression	"""Warning: Cannot copy '%s' into '%s'\\n"""		5606003	0					
ANR	5606610	Argument	binFile		5606003	1					
ANR	5606611	Identifier	binFile		5606003	0					
ANR	5606612	Argument	prjBinFile		5606003	2					
ANR	5606613	Identifier	prjBinFile		5606003	0					
ANR	5606614	ExpressionStatement	free ( prjBinFile )	843:2:20305:20322	5606003	33	True				
ANR	5606615	CallExpression	free ( prjBinFile )		5606003	0					
ANR	5606616	Callee	free		5606003	0					
ANR	5606617	Identifier	free		5606003	0					
ANR	5606618	ArgumentList	prjBinFile		5606003	1					
ANR	5606619	Argument	prjBinFile		5606003	0					
ANR	5606620	Identifier	prjBinFile		5606003	0					
ANR	5606621	ExpressionStatement	free ( prjBinDir )	844:2:20326:20342	5606003	34	True				
ANR	5606622	CallExpression	free ( prjBinDir )		5606003	0					
ANR	5606623	Callee	free		5606003	0					
ANR	5606624	Identifier	free		5606003	0					
ANR	5606625	ArgumentList	prjBinDir		5606003	1					
ANR	5606626	Argument	prjBinDir		5606003	0					
ANR	5606627	Identifier	prjBinDir		5606003	0					
ANR	5606628	ExpressionStatement	free ( binFile )	845:2:20346:20360	5606003	35	True				
ANR	5606629	CallExpression	free ( binFile )		5606003	0					
ANR	5606630	Callee	free		5606003	0					
ANR	5606631	Identifier	free		5606003	0					
ANR	5606632	ArgumentList	binFile		5606003	1					
ANR	5606633	Argument	binFile		5606003	0					
ANR	5606634	Identifier	binFile		5606003	0					
ANR	5606635	IfStatement	"if ( r_config_get_i ( core -> config , ""prj.git"" ) )"		5606003	32					
ANR	5606636	Condition	"r_config_get_i ( core -> config , ""prj.git"" )"	847:5:20370:20409	5606003	0	True				
ANR	5606637	CallExpression	"r_config_get_i ( core -> config , ""prj.git"" )"		5606003	0					
ANR	5606638	Callee	r_config_get_i		5606003	0					
ANR	5606639	Identifier	r_config_get_i		5606003	0					
ANR	5606640	ArgumentList	core -> config		5606003	1					
ANR	5606641	Argument	core -> config		5606003	0					
ANR	5606642	PtrMemberAccess	core -> config		5606003	0					
ANR	5606643	Identifier	core		5606003	0					
ANR	5606644	Identifier	config		5606003	1					
ANR	5606645	Argument	"""prj.git"""		5606003	1					
ANR	5606646	PrimaryExpression	"""prj.git"""		5606003	0					
ANR	5606647	CompoundStatement		101:2:2843:2870	5606003	1					
ANR	5606648	IdentifierDeclStatement	char * cwd = r_sys_getdir ( ) ;	848:2:20416:20443	5606003	0	True				
ANR	5606649	IdentifierDecl	* cwd = r_sys_getdir ( )		5606003	0					
ANR	5606650	IdentifierDeclType	char *		5606003	0					
ANR	5606651	Identifier	cwd		5606003	1					
ANR	5606652	AssignmentExpression	* cwd = r_sys_getdir ( )		5606003	2		=			
ANR	5606653	Identifier	cwd		5606003	0					
ANR	5606654	CallExpression	r_sys_getdir ( )		5606003	1					
ANR	5606655	Callee	r_sys_getdir		5606003	0					
ANR	5606656	Identifier	r_sys_getdir		5606003	0					
ANR	5606657	ArgumentList			5606003	1					
ANR	5606658	Statement	char	849:2:20447:20450	5606003	1	True				
ANR	5606659	Statement	*	849:7:20452:20452	5606003	2	True				
ANR	5606660	Statement	gitDir	849:8:20453:20458	5606003	3	True				
ANR	5606661	Statement	=	849:15:20460:20460	5606003	4	True				
ANR	5606662	Statement	r_str_newf	849:17:20462:20471	5606003	5	True				
ANR	5606663	Statement	(	849:28:20473:20473	5606003	6	True				
ANR	5606664	Statement	"""%s"""	849:29:20474:20477	5606003	7	True				
ANR	5606665	Statement	R_SYS_DIR	849:34:20479:20487	5606003	8	True				
ANR	5606666	Statement	""".git"""	849:44:20489:20494	5606003	9	True				
ANR	5606667	Statement	","	849:50:20495:20495	5606003	10	True				
ANR	5606668	Statement	prjDir	849:52:20497:20502	5606003	11	True				
ANR	5606669	Statement	)	849:58:20503:20503	5606003	12	True				
ANR	5606670	ExpressionStatement		849:59:20504:20504	5606003	13	True				
ANR	5606671	IfStatement	if ( r_sys_chdir ( prjDir ) )		5606003	14					
ANR	5606672	Condition	r_sys_chdir ( prjDir )	850:6:20512:20531	5606003	0	True				
ANR	5606673	CallExpression	r_sys_chdir ( prjDir )		5606003	0					
ANR	5606674	Callee	r_sys_chdir		5606003	0					
ANR	5606675	Identifier	r_sys_chdir		5606003	0					
ANR	5606676	ArgumentList	prjDir		5606003	1					
ANR	5606677	Argument	prjDir		5606003	0					
ANR	5606678	Identifier	prjDir		5606003	0					
ANR	5606679	CompoundStatement		103:28:2961:2961	5606003	1					
ANR	5606680	IfStatement	if ( ! r_file_is_directory ( gitDir ) )		5606003	0					
ANR	5606681	Condition	! r_file_is_directory ( gitDir )	851:7:20543:20571	5606003	0	True				
ANR	5606682	UnaryOperationExpression	! r_file_is_directory ( gitDir )		5606003	0					
ANR	5606683	UnaryOperator	!		5606003	0					
ANR	5606684	CallExpression	r_file_is_directory ( gitDir )		5606003	1					
ANR	5606685	Callee	r_file_is_directory		5606003	0					
ANR	5606686	Identifier	r_file_is_directory		5606003	0					
ANR	5606687	ArgumentList	gitDir		5606003	1					
ANR	5606688	Argument	gitDir		5606003	0					
ANR	5606689	Identifier	gitDir		5606003	0					
ANR	5606690	CompoundStatement		104:38:3001:3001	5606003	1					
ANR	5606691	ExpressionStatement	"r_sys_cmd ( ""git init"" )"	852:4:20580:20602	5606003	0	True				
ANR	5606692	CallExpression	"r_sys_cmd ( ""git init"" )"		5606003	0					
ANR	5606693	Callee	r_sys_cmd		5606003	0					
ANR	5606694	Identifier	r_sys_cmd		5606003	0					
ANR	5606695	ArgumentList	"""git init"""		5606003	1					
ANR	5606696	Argument	"""git init"""		5606003	0					
ANR	5606697	PrimaryExpression	"""git init"""		5606003	0					
ANR	5606698	ExpressionStatement	"r_sys_cmd ( ""git add * ; git commit -a"" )"	854:3:20612:20651	5606003	1	True				
ANR	5606699	CallExpression	"r_sys_cmd ( ""git add * ; git commit -a"" )"		5606003	0					
ANR	5606700	Callee	r_sys_cmd		5606003	0					
ANR	5606701	Identifier	r_sys_cmd		5606003	0					
ANR	5606702	ArgumentList	"""git add * ; git commit -a"""		5606003	1					
ANR	5606703	Argument	"""git add * ; git commit -a"""		5606003	0					
ANR	5606704	PrimaryExpression	"""git add * ; git commit -a"""		5606003	0					
ANR	5606705	ElseStatement	else		5606003	0					
ANR	5606706	CompoundStatement		108:9:3089:3089	5606003	0					
ANR	5606707	ExpressionStatement	"eprintf ( ""Cannot chdir %s\\n"" , prjDir )"	856:3:20667:20704	5606003	0	True				
ANR	5606708	CallExpression	"eprintf ( ""Cannot chdir %s\\n"" , prjDir )"		5606003	0					
ANR	5606709	Callee	eprintf		5606003	0					
ANR	5606710	Identifier	eprintf		5606003	0					
ANR	5606711	ArgumentList	"""Cannot chdir %s\\n"""		5606003	1					
ANR	5606712	Argument	"""Cannot chdir %s\\n"""		5606003	0					
ANR	5606713	PrimaryExpression	"""Cannot chdir %s\\n"""		5606003	0					
ANR	5606714	Argument	prjDir		5606003	1					
ANR	5606715	Identifier	prjDir		5606003	0					
ANR	5606716	ExpressionStatement	r_sys_chdir ( cwd )	858:2:20712:20729	5606003	15	True				
ANR	5606717	CallExpression	r_sys_chdir ( cwd )		5606003	0					
ANR	5606718	Callee	r_sys_chdir		5606003	0					
ANR	5606719	Identifier	r_sys_chdir		5606003	0					
ANR	5606720	ArgumentList	cwd		5606003	1					
ANR	5606721	Argument	cwd		5606003	0					
ANR	5606722	Identifier	cwd		5606003	0					
ANR	5606723	ExpressionStatement	free ( gitDir )	859:2:20733:20746	5606003	16	True				
ANR	5606724	CallExpression	free ( gitDir )		5606003	0					
ANR	5606725	Callee	free		5606003	0					
ANR	5606726	Identifier	free		5606003	0					
ANR	5606727	ArgumentList	gitDir		5606003	1					
ANR	5606728	Argument	gitDir		5606003	0					
ANR	5606729	Identifier	gitDir		5606003	0					
ANR	5606730	ExpressionStatement	free ( cwd )	860:2:20750:20760	5606003	17	True				
ANR	5606731	CallExpression	free ( cwd )		5606003	0					
ANR	5606732	Callee	free		5606003	0					
ANR	5606733	Identifier	free		5606003	0					
ANR	5606734	ArgumentList	cwd		5606003	1					
ANR	5606735	Argument	cwd		5606003	0					
ANR	5606736	Identifier	cwd		5606003	0					
ANR	5606737	IfStatement	"if ( r_config_get_i ( core -> config , ""prj.zip"" ) )"		5606003	33					
ANR	5606738	Condition	"r_config_get_i ( core -> config , ""prj.zip"" )"	862:5:20770:20809	5606003	0	True				
ANR	5606739	CallExpression	"r_config_get_i ( core -> config , ""prj.zip"" )"		5606003	0					
ANR	5606740	Callee	r_config_get_i		5606003	0					
ANR	5606741	Identifier	r_config_get_i		5606003	0					
ANR	5606742	ArgumentList	core -> config		5606003	1					
ANR	5606743	Argument	core -> config		5606003	0					
ANR	5606744	PtrMemberAccess	core -> config		5606003	0					
ANR	5606745	Identifier	core		5606003	0					
ANR	5606746	Identifier	config		5606003	1					
ANR	5606747	Argument	"""prj.zip"""		5606003	1					
ANR	5606748	PrimaryExpression	"""prj.zip"""		5606003	0					
ANR	5606749	CompoundStatement		117:2:3274:3320	5606003	1					
ANR	5606750	IdentifierDeclStatement	char * cwd = r_sys_getdir ( ) ;	863:2:20816:20843	5606003	0	True				
ANR	5606751	IdentifierDecl	* cwd = r_sys_getdir ( )		5606003	0					
ANR	5606752	IdentifierDeclType	char *		5606003	0					
ANR	5606753	Identifier	cwd		5606003	1					
ANR	5606754	AssignmentExpression	* cwd = r_sys_getdir ( )		5606003	2		=			
ANR	5606755	Identifier	cwd		5606003	0					
ANR	5606756	CallExpression	r_sys_getdir ( )		5606003	1					
ANR	5606757	Callee	r_sys_getdir		5606003	0					
ANR	5606758	Identifier	r_sys_getdir		5606003	0					
ANR	5606759	ArgumentList			5606003	1					
ANR	5606760	IdentifierDeclStatement	const char * prjName = r_file_basename ( prjDir ) ;	864:2:20847:20893	5606003	1	True				
ANR	5606761	IdentifierDecl	* prjName = r_file_basename ( prjDir )		5606003	0					
ANR	5606762	IdentifierDeclType	const char *		5606003	0					
ANR	5606763	Identifier	prjName		5606003	1					
ANR	5606764	AssignmentExpression	* prjName = r_file_basename ( prjDir )		5606003	2		=			
ANR	5606765	Identifier	prjName		5606003	0					
ANR	5606766	CallExpression	r_file_basename ( prjDir )		5606003	1					
ANR	5606767	Callee	r_file_basename		5606003	0					
ANR	5606768	Identifier	r_file_basename		5606003	0					
ANR	5606769	ArgumentList	prjDir		5606003	1					
ANR	5606770	Argument	prjDir		5606003	0					
ANR	5606771	Identifier	prjDir		5606003	0					
ANR	5606772	IfStatement	if ( r_sys_chdir ( prjDir ) )		5606003	2					
ANR	5606773	Condition	r_sys_chdir ( prjDir )	865:6:20901:20920	5606003	0	True				
ANR	5606774	CallExpression	r_sys_chdir ( prjDir )		5606003	0					
ANR	5606775	Callee	r_sys_chdir		5606003	0					
ANR	5606776	Identifier	r_sys_chdir		5606003	0					
ANR	5606777	ArgumentList	prjDir		5606003	1					
ANR	5606778	Argument	prjDir		5606003	0					
ANR	5606779	Identifier	prjDir		5606003	0					
ANR	5606780	CompoundStatement		118:28:3350:3350	5606003	1					
ANR	5606781	IfStatement	"if ( ! strchr ( prjName , '\\'' ) )"		5606003	0					
ANR	5606782	Condition	"! strchr ( prjName , '\\'' )"	866:7:20932:20954	5606003	0	True				
ANR	5606783	UnaryOperationExpression	"! strchr ( prjName , '\\'' )"		5606003	0					
ANR	5606784	UnaryOperator	!		5606003	0					
ANR	5606785	CallExpression	"strchr ( prjName , '\\'' )"		5606003	1					
ANR	5606786	Callee	strchr		5606003	0					
ANR	5606787	Identifier	strchr		5606003	0					
ANR	5606788	ArgumentList	prjName		5606003	1					
ANR	5606789	Argument	prjName		5606003	0					
ANR	5606790	Identifier	prjName		5606003	0					
ANR	5606791	Argument	'\\''		5606003	1					
ANR	5606792	PrimaryExpression	'\\''		5606003	0					
ANR	5606793	CompoundStatement		119:32:3384:3384	5606003	1					
ANR	5606794	ExpressionStatement	"r_sys_chdir ( "".."" )"	867:4:20963:20981	5606003	0	True				
ANR	5606795	CallExpression	"r_sys_chdir ( "".."" )"		5606003	0					
ANR	5606796	Callee	r_sys_chdir		5606003	0					
ANR	5606797	Identifier	r_sys_chdir		5606003	0					
ANR	5606798	ArgumentList	""".."""		5606003	1					
ANR	5606799	Argument	""".."""		5606003	0					
ANR	5606800	PrimaryExpression	""".."""		5606003	0					
ANR	5606801	ExpressionStatement	"r_sys_cmdf ( ""rm -f '%s.zip'; zip -r '%s'.zip '%s'"" , prjName , prjName , prjName )"	868:4:20987:21070	5606003	1	True				
ANR	5606802	CallExpression	"r_sys_cmdf ( ""rm -f '%s.zip'; zip -r '%s'.zip '%s'"" , prjName , prjName , prjName )"		5606003	0					
ANR	5606803	Callee	r_sys_cmdf		5606003	0					
ANR	5606804	Identifier	r_sys_cmdf		5606003	0					
ANR	5606805	ArgumentList	"""rm -f '%s.zip'; zip -r '%s'.zip '%s'"""		5606003	1					
ANR	5606806	Argument	"""rm -f '%s.zip'; zip -r '%s'.zip '%s'"""		5606003	0					
ANR	5606807	PrimaryExpression	"""rm -f '%s.zip'; zip -r '%s'.zip '%s'"""		5606003	0					
ANR	5606808	Argument	prjName		5606003	1					
ANR	5606809	Identifier	prjName		5606003	0					
ANR	5606810	Argument	prjName		5606003	2					
ANR	5606811	Identifier	prjName		5606003	0					
ANR	5606812	Argument	prjName		5606003	3					
ANR	5606813	Identifier	prjName		5606003	0					
ANR	5606814	ElseStatement	else		5606003	0					
ANR	5606815	CompoundStatement		123:10:3509:3509	5606003	0					
ANR	5606816	ExpressionStatement	"eprintf ( ""Command injection attempt?\\n"" )"	871:4:21088:21128	5606003	0	True				
ANR	5606817	CallExpression	"eprintf ( ""Command injection attempt?\\n"" )"		5606003	0					
ANR	5606818	Callee	eprintf		5606003	0					
ANR	5606819	Identifier	eprintf		5606003	0					
ANR	5606820	ArgumentList	"""Command injection attempt?\\n"""		5606003	1					
ANR	5606821	Argument	"""Command injection attempt?\\n"""		5606003	0					
ANR	5606822	PrimaryExpression	"""Command injection attempt?\\n"""		5606003	0					
ANR	5606823	ElseStatement	else		5606003	0					
ANR	5606824	CompoundStatement		126:9:3571:3571	5606003	0					
ANR	5606825	ExpressionStatement	"eprintf ( ""Cannot chdir %s\\n"" , prjDir )"	874:3:21149:21186	5606003	0	True				
ANR	5606826	CallExpression	"eprintf ( ""Cannot chdir %s\\n"" , prjDir )"		5606003	0					
ANR	5606827	Callee	eprintf		5606003	0					
ANR	5606828	Identifier	eprintf		5606003	0					
ANR	5606829	ArgumentList	"""Cannot chdir %s\\n"""		5606003	1					
ANR	5606830	Argument	"""Cannot chdir %s\\n"""		5606003	0					
ANR	5606831	PrimaryExpression	"""Cannot chdir %s\\n"""		5606003	0					
ANR	5606832	Argument	prjDir		5606003	1					
ANR	5606833	Identifier	prjDir		5606003	0					
ANR	5606834	ExpressionStatement	r_sys_chdir ( cwd )	876:2:21194:21211	5606003	3	True				
ANR	5606835	CallExpression	r_sys_chdir ( cwd )		5606003	0					
ANR	5606836	Callee	r_sys_chdir		5606003	0					
ANR	5606837	Identifier	r_sys_chdir		5606003	0					
ANR	5606838	ArgumentList	cwd		5606003	1					
ANR	5606839	Argument	cwd		5606003	0					
ANR	5606840	Identifier	cwd		5606003	0					
ANR	5606841	ExpressionStatement	free ( cwd )	877:2:21215:21225	5606003	4	True				
ANR	5606842	CallExpression	free ( cwd )		5606003	0					
ANR	5606843	Callee	free		5606003	0					
ANR	5606844	Identifier	free		5606003	0					
ANR	5606845	ArgumentList	cwd		5606003	1					
ANR	5606846	Argument	cwd		5606003	0					
ANR	5606847	Identifier	cwd		5606003	0					
ANR	5606848	ExpressionStatement	free ( prjDir )	880:1:21277:21290	5606003	34	True				
ANR	5606849	CallExpression	free ( prjDir )		5606003	0					
ANR	5606850	Callee	free		5606003	0					
ANR	5606851	Identifier	free		5606003	0					
ANR	5606852	ArgumentList	prjDir		5606003	1					
ANR	5606853	Argument	prjDir		5606003	0					
ANR	5606854	Identifier	prjDir		5606003	0					
ANR	5606855	IfStatement	if ( scr_null )		5606003	35					
ANR	5606856	Condition	scr_null	881:5:21297:21304	5606003	0	True				
ANR	5606857	Identifier	scr_null		5606003	0					
ANR	5606858	CompoundStatement		134:15:3734:3734	5606003	1					
ANR	5606859	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.null"" , true )"	882:2:21311:21358	5606003	0	True				
ANR	5606860	CallExpression	"r_config_set_i ( core -> config , ""scr.null"" , true )"		5606003	0					
ANR	5606861	Callee	r_config_set_i		5606003	0					
ANR	5606862	Identifier	r_config_set_i		5606003	0					
ANR	5606863	ArgumentList	core -> config		5606003	1					
ANR	5606864	Argument	core -> config		5606003	0					
ANR	5606865	PtrMemberAccess	core -> config		5606003	0					
ANR	5606866	Identifier	core		5606003	0					
ANR	5606867	Identifier	config		5606003	1					
ANR	5606868	Argument	"""scr.null"""		5606003	1					
ANR	5606869	PrimaryExpression	"""scr.null"""		5606003	0					
ANR	5606870	Argument	true		5606003	2					
ANR	5606871	Identifier	true		5606003	0					
ANR	5606872	IfStatement	if ( ! ret && oldPrjName )		5606003	36					
ANR	5606873	Condition	! ret && oldPrjName	884:5:21368:21385	5606003	0	True				
ANR	5606874	AndExpression	! ret && oldPrjName		5606003	0		&&			
ANR	5606875	UnaryOperationExpression	! ret		5606003	0					
ANR	5606876	UnaryOperator	!		5606003	0					
ANR	5606877	Identifier	ret		5606003	1					
ANR	5606878	Identifier	oldPrjName		5606003	1					
ANR	5606879	CompoundStatement		137:25:3815:3815	5606003	1					
ANR	5606880	ExpressionStatement	"r_config_set ( core -> config , ""prj.name"" , oldPrjName )"	886:2:21420:21471	5606003	0	True				
ANR	5606881	CallExpression	"r_config_set ( core -> config , ""prj.name"" , oldPrjName )"		5606003	0					
ANR	5606882	Callee	r_config_set		5606003	0					
ANR	5606883	Identifier	r_config_set		5606003	0					
ANR	5606884	ArgumentList	core -> config		5606003	1					
ANR	5606885	Argument	core -> config		5606003	0					
ANR	5606886	PtrMemberAccess	core -> config		5606003	0					
ANR	5606887	Identifier	core		5606003	0					
ANR	5606888	Identifier	config		5606003	1					
ANR	5606889	Argument	"""prj.name"""		5606003	1					
ANR	5606890	PrimaryExpression	"""prj.name"""		5606003	0					
ANR	5606891	Argument	oldPrjName		5606003	2					
ANR	5606892	Identifier	oldPrjName		5606003	0					
ANR	5606893	ExpressionStatement	free ( scriptPath )	888:1:21477:21494	5606003	37	True				
ANR	5606894	CallExpression	free ( scriptPath )		5606003	0					
ANR	5606895	Callee	free		5606003	0					
ANR	5606896	Identifier	free		5606003	0					
ANR	5606897	ArgumentList	scriptPath		5606003	1					
ANR	5606898	Argument	scriptPath		5606003	0					
ANR	5606899	Identifier	scriptPath		5606003	0					
ANR	5606900	ExpressionStatement	free ( oldPrjName )	889:1:21497:21514	5606003	38	True				
ANR	5606901	CallExpression	free ( oldPrjName )		5606003	0					
ANR	5606902	Callee	free		5606003	0					
ANR	5606903	Identifier	free		5606003	0					
ANR	5606904	ArgumentList	oldPrjName		5606003	1					
ANR	5606905	Argument	oldPrjName		5606003	0					
ANR	5606906	Identifier	oldPrjName		5606003	0					
ANR	5606907	ReturnStatement	return ret ;	890:1:21517:21527	5606003	39	True				
ANR	5606908	Identifier	ret		5606003	0					
ANR	5606909	ReturnType	R_API bool		5606003	1					
ANR	5606910	Identifier	r_core_project_save		5606003	2					
ANR	5606911	ParameterList	"RCore * core , const char * prjName"		5606003	3					
ANR	5606912	Parameter	RCore * core	748:31:17538:17548	5606003	0	True				
ANR	5606913	ParameterType	RCore *		5606003	0					
ANR	5606914	Identifier	core		5606003	1					
ANR	5606915	Parameter	const char * prjName	748:44:17551:17569	5606003	1	True				
ANR	5606916	ParameterType	const char *		5606003	0					
ANR	5606917	Identifier	prjName		5606003	1					
ANR	5606918	CFGEntryNode	ENTRY		5606003		True				
ANR	5606919	CFGExitNode	EXIT		5606003		True				
ANR	5606920	Symbol	scriptPath		5606003						
ANR	5606921	Symbol	* prjName		5606003						
ANR	5606922	Symbol	r_file_is_directory		5606003						
ANR	5606923	Symbol	ns		5606003						
ANR	5606924	Symbol	core -> sdb		5606003						
ANR	5606925	Symbol	* core		5606003						
ANR	5606926	Symbol	r_config_get		5606003						
ANR	5606927	Symbol	oldPrjNameC		5606003						
ANR	5606928	Symbol	strchr		5606003						
ANR	5606929	Symbol	r_str_newf		5606003						
ANR	5606930	Symbol	projectSaveScript		5606003						
ANR	5606931	Symbol	oldPrjName		5606003						
ANR	5606932	Symbol	prjDir		5606003						
ANR	5606933	Symbol	prjBinFile		5606003						
ANR	5606934	Symbol	R_CORE_PRJ_ALL		5606003						
ANR	5606935	Symbol	r_file_copy		5606003						
ANR	5606936	Symbol	r_str_endswith		5606003						
ANR	5606937	Symbol	r_file_dirname		5606003						
ANR	5606938	Symbol	gitDir		5606003						
ANR	5606939	Symbol	binFile		5606003						
ANR	5606940	Symbol	binFileName		5606003						
ANR	5606941	Symbol	ret		5606003						
ANR	5606942	Symbol	core -> config		5606003						
ANR	5606943	Symbol	simpleProjectSaveScript		5606003						
ANR	5606944	Symbol	scr_null		5606003						
ANR	5606945	Symbol	NULL		5606003						
ANR	5606946	Symbol	r_core_project_info		5606003						
ANR	5606947	Symbol	r_sys_getdir		5606003						
ANR	5606948	Symbol	ns -> sdb		5606003						
ANR	5606949	Symbol	false		5606003						
ANR	5606950	Symbol	* ns		5606003						
ANR	5606951	Symbol	it		5606003						
ANR	5606952	Symbol	prjBinDir		5606003						
ANR	5606953	Symbol	r_file_basename		5606003						
ANR	5606954	Symbol	prjName		5606003						
ANR	5606955	Symbol	projectScriptPath		5606003						
ANR	5606956	Symbol	core		5606003						
ANR	5606957	Symbol	rc		5606003						
ANR	5606958	Symbol	cwd		5606003						
ANR	5606959	Symbol	rop_db		5606003						
ANR	5606960	Symbol	rop_path		5606003						
ANR	5606961	Symbol	r_config_get_i		5606003						
ANR	5606962	Symbol	true		5606003						
ANR	5606963	Symbol	r_sys_chdir		5606003						
ANR	5606964	Symbol	strdup		5606003						
ANR	5606965	Symbol	r_file_exists		5606003						
ANR	5606966	Symbol	sdb_ns		5606003						
ANR	5606967	Function	r_core_project_notes_file	893:0:21532:21854							
ANR	5606968	FunctionDef	"r_core_project_notes_file (RCore * core , const char * prjName)"		5606967	0					
ANR	5606969	CompoundStatement		893:72:21604:21854	5606967	0					
ANR	5606970	IdentifierDeclStatement	char * notes_txt ;	894:1:21607:21622	5606967	0	True				
ANR	5606971	IdentifierDecl	* notes_txt		5606967	0					
ANR	5606972	IdentifierDeclType	char *		5606967	0					
ANR	5606973	Identifier	notes_txt		5606967	1					
ANR	5606974	IdentifierDeclStatement	"const char * prjdir = r_config_get ( core -> config , ""dir.projects"" ) ;"	895:1:21625:21689	5606967	1	True				
ANR	5606975	IdentifierDecl	"* prjdir = r_config_get ( core -> config , ""dir.projects"" )"		5606967	0					
ANR	5606976	IdentifierDeclType	const char *		5606967	0					
ANR	5606977	Identifier	prjdir		5606967	1					
ANR	5606978	AssignmentExpression	"* prjdir = r_config_get ( core -> config , ""dir.projects"" )"		5606967	2		=			
ANR	5606979	Identifier	prjdir		5606967	0					
ANR	5606980	CallExpression	"r_config_get ( core -> config , ""dir.projects"" )"		5606967	1					
ANR	5606981	Callee	r_config_get		5606967	0					
ANR	5606982	Identifier	r_config_get		5606967	0					
ANR	5606983	ArgumentList	core -> config		5606967	1					
ANR	5606984	Argument	core -> config		5606967	0					
ANR	5606985	PtrMemberAccess	core -> config		5606967	0					
ANR	5606986	Identifier	core		5606967	0					
ANR	5606987	Identifier	config		5606967	1					
ANR	5606988	Argument	"""dir.projects"""		5606967	1					
ANR	5606989	PrimaryExpression	"""dir.projects"""		5606967	0					
ANR	5606990	IdentifierDeclStatement	char * prjpath = r_file_abspath ( prjdir ) ;	896:1:21692:21731	5606967	2	True				
ANR	5606991	IdentifierDecl	* prjpath = r_file_abspath ( prjdir )		5606967	0					
ANR	5606992	IdentifierDeclType	char *		5606967	0					
ANR	5606993	Identifier	prjpath		5606967	1					
ANR	5606994	AssignmentExpression	* prjpath = r_file_abspath ( prjdir )		5606967	2		=			
ANR	5606995	Identifier	prjpath		5606967	0					
ANR	5606996	CallExpression	r_file_abspath ( prjdir )		5606967	1					
ANR	5606997	Callee	r_file_abspath		5606967	0					
ANR	5606998	Identifier	r_file_abspath		5606967	0					
ANR	5606999	ArgumentList	prjdir		5606967	1					
ANR	5607000	Argument	prjdir		5606967	0					
ANR	5607001	Identifier	prjdir		5606967	0					
ANR	5607002	Statement	notes_txt	897:1:21734:21742	5606967	3	True				
ANR	5607003	Statement	=	897:11:21744:21744	5606967	4	True				
ANR	5607004	Statement	r_str_newf	897:13:21746:21755	5606967	5	True				
ANR	5607005	Statement	(	897:24:21757:21757	5606967	6	True				
ANR	5607006	Statement	"""%s"""	897:25:21758:21761	5606967	7	True				
ANR	5607007	Statement	R_SYS_DIR	897:29:21762:21770	5606967	8	True				
ANR	5607008	Statement	"""%s"""	897:39:21772:21775	5606967	9	True				
ANR	5607009	Statement	R_SYS_DIR	897:43:21776:21784	5606967	10	True				
ANR	5607010	Statement	"""notes.txt"""	897:53:21786:21796	5606967	11	True				
ANR	5607011	Statement	","	897:64:21797:21797	5606967	12	True				
ANR	5607012	Statement	prjpath	897:66:21799:21805	5606967	13	True				
ANR	5607013	Statement	","	897:73:21806:21806	5606967	14	True				
ANR	5607014	Statement	prjName	897:75:21808:21814	5606967	15	True				
ANR	5607015	Statement	)	897:82:21815:21815	5606967	16	True				
ANR	5607016	ExpressionStatement		897:83:21816:21816	5606967	17	True				
ANR	5607017	ExpressionStatement	free ( prjpath )	898:1:21819:21833	5606967	18	True				
ANR	5607018	CallExpression	free ( prjpath )		5606967	0					
ANR	5607019	Callee	free		5606967	0					
ANR	5607020	Identifier	free		5606967	0					
ANR	5607021	ArgumentList	prjpath		5606967	1					
ANR	5607022	Argument	prjpath		5606967	0					
ANR	5607023	Identifier	prjpath		5606967	0					
ANR	5607024	ReturnStatement	return notes_txt ;	899:1:21836:21852	5606967	19	True				
ANR	5607025	Identifier	notes_txt		5606967	0					
ANR	5607026	ReturnType	R_API char *		5606967	1					
ANR	5607027	Identifier	r_core_project_notes_file		5606967	2					
ANR	5607028	ParameterList	"RCore * core , const char * prjName"		5606967	3					
ANR	5607029	Parameter	RCore * core	893:38:21570:21580	5606967	0	True				
ANR	5607030	ParameterType	RCore *		5606967	0					
ANR	5607031	Identifier	core		5606967	1					
ANR	5607032	Parameter	const char * prjName	893:51:21583:21601	5606967	1	True				
ANR	5607033	ParameterType	const char *		5606967	0					
ANR	5607034	Identifier	prjName		5606967	1					
ANR	5607035	CFGEntryNode	ENTRY		5606967		True				
ANR	5607036	CFGExitNode	EXIT		5606967		True				
ANR	5607037	Symbol	core -> config		5606967						
ANR	5607038	Symbol	core		5606967						
ANR	5607039	Symbol	prjpath		5606967						
ANR	5607040	Symbol	r_file_abspath		5606967						
ANR	5607041	Symbol	prjdir		5606967						
ANR	5607042	Symbol	notes_txt		5606967						
ANR	5607043	Symbol	* core		5606967						
ANR	5607044	Symbol	r_config_get		5606967						
ANR	5607045	Symbol	prjName		5606967						
ANR	5607046	Function	r_core_project_load	902:0:21857:22472							
ANR	5607047	FunctionDef	"r_core_project_load (RCore * core , const char * prjName , const char * rcpath)"		5607046	0					
ANR	5607048	CompoundStatement		902:85:21942:22472	5607046	0					
ANR	5607049	IdentifierDeclStatement	"const bool cfg_fortunes = r_config_get_i ( core -> config , ""cfg.fortunes"" ) ;"	903:1:21945:22016	5607046	0	True				
ANR	5607050	IdentifierDecl	"cfg_fortunes = r_config_get_i ( core -> config , ""cfg.fortunes"" )"		5607046	0					
ANR	5607051	IdentifierDeclType	const bool		5607046	0					
ANR	5607052	Identifier	cfg_fortunes		5607046	1					
ANR	5607053	AssignmentExpression	"cfg_fortunes = r_config_get_i ( core -> config , ""cfg.fortunes"" )"		5607046	2		=			
ANR	5607054	Identifier	cfg_fortunes		5607046	0					
ANR	5607055	CallExpression	"r_config_get_i ( core -> config , ""cfg.fortunes"" )"		5607046	1					
ANR	5607056	Callee	r_config_get_i		5607046	0					
ANR	5607057	Identifier	r_config_get_i		5607046	0					
ANR	5607058	ArgumentList	core -> config		5607046	1					
ANR	5607059	Argument	core -> config		5607046	0					
ANR	5607060	PtrMemberAccess	core -> config		5607046	0					
ANR	5607061	Identifier	core		5607046	0					
ANR	5607062	Identifier	config		5607046	1					
ANR	5607063	Argument	"""cfg.fortunes"""		5607046	1					
ANR	5607064	PrimaryExpression	"""cfg.fortunes"""		5607046	0					
ANR	5607065	IdentifierDeclStatement	const bool scr_interactive = r_cons_is_interactive ( ) ;	904:1:22019:22072	5607046	1	True				
ANR	5607066	IdentifierDecl	scr_interactive = r_cons_is_interactive ( )		5607046	0					
ANR	5607067	IdentifierDeclType	const bool		5607046	0					
ANR	5607068	Identifier	scr_interactive		5607046	1					
ANR	5607069	AssignmentExpression	scr_interactive = r_cons_is_interactive ( )		5607046	2		=			
ANR	5607070	Identifier	scr_interactive		5607046	0					
ANR	5607071	CallExpression	r_cons_is_interactive ( )		5607046	1					
ANR	5607072	Callee	r_cons_is_interactive		5607046	0					
ANR	5607073	Identifier	r_cons_is_interactive		5607046	0					
ANR	5607074	ArgumentList			5607046	1					
ANR	5607075	IdentifierDeclStatement	"const bool scr_prompt = r_config_get_i ( core -> config , ""scr.prompt"" ) ;"	905:1:22075:22142	5607046	2	True				
ANR	5607076	IdentifierDecl	"scr_prompt = r_config_get_i ( core -> config , ""scr.prompt"" )"		5607046	0					
ANR	5607077	IdentifierDeclType	const bool		5607046	0					
ANR	5607078	Identifier	scr_prompt		5607046	1					
ANR	5607079	AssignmentExpression	"scr_prompt = r_config_get_i ( core -> config , ""scr.prompt"" )"		5607046	2		=			
ANR	5607080	Identifier	scr_prompt		5607046	0					
ANR	5607081	CallExpression	"r_config_get_i ( core -> config , ""scr.prompt"" )"		5607046	1					
ANR	5607082	Callee	r_config_get_i		5607046	0					
ANR	5607083	Identifier	r_config_get_i		5607046	0					
ANR	5607084	ArgumentList	core -> config		5607046	1					
ANR	5607085	Argument	core -> config		5607046	0					
ANR	5607086	PtrMemberAccess	core -> config		5607046	0					
ANR	5607087	Identifier	core		5607046	0					
ANR	5607088	Identifier	config		5607046	1					
ANR	5607089	Argument	"""scr.prompt"""		5607046	1					
ANR	5607090	PrimaryExpression	"""scr.prompt"""		5607046	0					
ANR	5607091	ExpressionStatement	"( void ) projectLoadRop ( core , prjName )"	906:1:22145:22182	5607046	3	True				
ANR	5607092	CastExpression	"( void ) projectLoadRop ( core , prjName )"		5607046	0					
ANR	5607093	CastTarget	void		5607046	0					
ANR	5607094	CallExpression	"projectLoadRop ( core , prjName )"		5607046	1					
ANR	5607095	Callee	projectLoadRop		5607046	0					
ANR	5607096	Identifier	projectLoadRop		5607046	0					
ANR	5607097	ArgumentList	core		5607046	1					
ANR	5607098	Argument	core		5607046	0					
ANR	5607099	Identifier	core		5607046	0					
ANR	5607100	Argument	prjName		5607046	1					
ANR	5607101	Identifier	prjName		5607046	0					
ANR	5607102	IdentifierDeclStatement	"bool ret = r_core_cmd_file ( core , rcpath ) ;"	907:1:22185:22226	5607046	4	True				
ANR	5607103	IdentifierDecl	"ret = r_core_cmd_file ( core , rcpath )"		5607046	0					
ANR	5607104	IdentifierDeclType	bool		5607046	0					
ANR	5607105	Identifier	ret		5607046	1					
ANR	5607106	AssignmentExpression	"ret = r_core_cmd_file ( core , rcpath )"		5607046	2		=			
ANR	5607107	Identifier	ret		5607046	0					
ANR	5607108	CallExpression	"r_core_cmd_file ( core , rcpath )"		5607046	1					
ANR	5607109	Callee	r_core_cmd_file		5607046	0					
ANR	5607110	Identifier	r_core_cmd_file		5607046	0					
ANR	5607111	ArgumentList	core		5607046	1					
ANR	5607112	Argument	core		5607046	0					
ANR	5607113	Identifier	core		5607046	0					
ANR	5607114	Argument	rcpath		5607046	1					
ANR	5607115	Identifier	rcpath		5607046	0					
ANR	5607116	ExpressionStatement	"r_config_set_i ( core -> config , ""cfg.fortunes"" , cfg_fortunes )"	908:1:22229:22288	5607046	5	True				
ANR	5607117	CallExpression	"r_config_set_i ( core -> config , ""cfg.fortunes"" , cfg_fortunes )"		5607046	0					
ANR	5607118	Callee	r_config_set_i		5607046	0					
ANR	5607119	Identifier	r_config_set_i		5607046	0					
ANR	5607120	ArgumentList	core -> config		5607046	1					
ANR	5607121	Argument	core -> config		5607046	0					
ANR	5607122	PtrMemberAccess	core -> config		5607046	0					
ANR	5607123	Identifier	core		5607046	0					
ANR	5607124	Identifier	config		5607046	1					
ANR	5607125	Argument	"""cfg.fortunes"""		5607046	1					
ANR	5607126	PrimaryExpression	"""cfg.fortunes"""		5607046	0					
ANR	5607127	Argument	cfg_fortunes		5607046	2					
ANR	5607128	Identifier	cfg_fortunes		5607046	0					
ANR	5607129	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , scr_interactive )"	909:1:22291:22356	5607046	6	True				
ANR	5607130	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , scr_interactive )"		5607046	0					
ANR	5607131	Callee	r_config_set_i		5607046	0					
ANR	5607132	Identifier	r_config_set_i		5607046	0					
ANR	5607133	ArgumentList	core -> config		5607046	1					
ANR	5607134	Argument	core -> config		5607046	0					
ANR	5607135	PtrMemberAccess	core -> config		5607046	0					
ANR	5607136	Identifier	core		5607046	0					
ANR	5607137	Identifier	config		5607046	1					
ANR	5607138	Argument	"""scr.interactive"""		5607046	1					
ANR	5607139	PrimaryExpression	"""scr.interactive"""		5607046	0					
ANR	5607140	Argument	scr_interactive		5607046	2					
ANR	5607141	Identifier	scr_interactive		5607046	0					
ANR	5607142	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.prompt"" , scr_prompt )"	910:1:22359:22414	5607046	7	True				
ANR	5607143	CallExpression	"r_config_set_i ( core -> config , ""scr.prompt"" , scr_prompt )"		5607046	0					
ANR	5607144	Callee	r_config_set_i		5607046	0					
ANR	5607145	Identifier	r_config_set_i		5607046	0					
ANR	5607146	ArgumentList	core -> config		5607046	1					
ANR	5607147	Argument	core -> config		5607046	0					
ANR	5607148	PtrMemberAccess	core -> config		5607046	0					
ANR	5607149	Identifier	core		5607046	0					
ANR	5607150	Identifier	config		5607046	1					
ANR	5607151	Argument	"""scr.prompt"""		5607046	1					
ANR	5607152	PrimaryExpression	"""scr.prompt"""		5607046	0					
ANR	5607153	Argument	scr_prompt		5607046	2					
ANR	5607154	Identifier	scr_prompt		5607046	0					
ANR	5607155	ExpressionStatement	"r_config_bump ( core -> config , ""asm.arch"" )"	911:1:22417:22457	5607046	8	True				
ANR	5607156	CallExpression	"r_config_bump ( core -> config , ""asm.arch"" )"		5607046	0					
ANR	5607157	Callee	r_config_bump		5607046	0					
ANR	5607158	Identifier	r_config_bump		5607046	0					
ANR	5607159	ArgumentList	core -> config		5607046	1					
ANR	5607160	Argument	core -> config		5607046	0					
ANR	5607161	PtrMemberAccess	core -> config		5607046	0					
ANR	5607162	Identifier	core		5607046	0					
ANR	5607163	Identifier	config		5607046	1					
ANR	5607164	Argument	"""asm.arch"""		5607046	1					
ANR	5607165	PrimaryExpression	"""asm.arch"""		5607046	0					
ANR	5607166	ReturnStatement	return ret ;	912:1:22460:22470	5607046	9	True				
ANR	5607167	Identifier	ret		5607046	0					
ANR	5607168	ReturnType	R_API bool		5607046	1					
ANR	5607169	Identifier	r_core_project_load		5607046	2					
ANR	5607170	ParameterList	"RCore * core , const char * prjName , const char * rcpath"		5607046	3					
ANR	5607171	Parameter	RCore * core	902:31:21888:21898	5607046	0	True				
ANR	5607172	ParameterType	RCore *		5607046	0					
ANR	5607173	Identifier	core		5607046	1					
ANR	5607174	Parameter	const char * prjName	902:44:21901:21919	5607046	1	True				
ANR	5607175	ParameterType	const char *		5607046	0					
ANR	5607176	Identifier	prjName		5607046	1					
ANR	5607177	Parameter	const char * rcpath	902:65:21922:21939	5607046	2	True				
ANR	5607178	ParameterType	const char *		5607046	0					
ANR	5607179	Identifier	rcpath		5607046	1					
ANR	5607180	CFGEntryNode	ENTRY		5607046		True				
ANR	5607181	CFGExitNode	EXIT		5607046		True				
ANR	5607182	Symbol	core -> config		5607046						
ANR	5607183	Symbol	scr_interactive		5607046						
ANR	5607184	Symbol	ret		5607046						
ANR	5607185	Symbol	core		5607046						
ANR	5607186	Symbol	r_cons_is_interactive		5607046						
ANR	5607187	Symbol	r_core_cmd_file		5607046						
ANR	5607188	Symbol	scr_prompt		5607046						
ANR	5607189	Symbol	r_config_get_i		5607046						
ANR	5607190	Symbol	* core		5607046						
ANR	5607191	Symbol	rcpath		5607046						
ANR	5607192	Symbol	cfg_fortunes		5607046						
ANR	5607193	Symbol	prjName		5607046						
